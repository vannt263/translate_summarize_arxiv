{
  "article_text": [
    "two common computational frameworks for the solution of problems with evolving domains and interfaces are the arbitrary lagrangian eulerian ( ale )  @xcite and embedded boundary method ( ebm ) frameworks . in an ale framework , the computations are performed on an interface - fitted mesh which is deformed using a mesh motion algorithm  @xcite to follow the evolution of the interface . in an ebm framework ,",
    "the interface is embedded in a background mesh  also called an embedding mesh  and allowed to intersect it as it evolves  @xcite . in the latter case , the interface separates the computational domain in two regions : a `` ghost '' ( or fictitious ) region usually associated with the volume delimited by the embedded interface ( boundary , or body ) , and a `` real '' region usually associated with the remainder of the computational domain .",
    "both computational frameworks have advantages and shortcomings .",
    "an ale framework is particularly advantageous for problems where the evolution of the interface is characterized by small - amplitude motions and deformations .",
    "an ebm framework is often indispensable for problems where the interface undergoes large - amplitude motions and deformations , and/or topological changes .",
    "irrespectively of the chosen framework however , the computational cost of high - fidelity simulations of problems with evolving domains and interfaces can be prohibitive .",
    "for this reason , interest in model order reduction ( mor ) methods continues to grow  @xcite .",
    "most of these methods are projection - based .",
    "therefore , they rely on the computation of suitable basis functions . typically , these are constructed by computing solution snapshots of some instances of the family of problems of interest and compressing them using the proper orthogonal decomposition ( pod ) or singular value decomposition ( svd ) method . in an interface - fitted framework ,",
    "this computation is straightforward because the computational domain does not contain a ghost region . in an ebm framework",
    "however , this computation is complicated by the presence of a ghost region where the solution snapshots may or may not be populated , and in the latter case , the populated values may or may not have a physical meaning . the situation is further exacerbated when the interface evolves in time , as in this case the partitioning into meaningful and meaningless components of the collected snapshots also evolves in time , which complicates further the compression of the collected snapshots .    therefore , the main objective of this paper is to propose an effective method for the compression of solution snaphsots collected during the simulation of problems with evolving domains and interfaces using an ebm , in view of enabling the projection - based reduction of high - fidelity embedded boundary computational models .",
    "this method consists of formulating the data compression problem as a weighted low - rank matrix approximation problem , where the weighting is binary and identifies the ghost / real partition of the individual snapshots .",
    "therefore , the basis functions derived using this approach are optimal for the real component of the partition of the computational domain .",
    "the weighted low - rank approximation problem formulated in this paper is pervasive .",
    "it can be found , for example , in :    * computer vision applications with occlusion . * signal processing applications with irregular measurements in time and space . * control problems with malfunctioning measuring devices .",
    "this problem is a generalization of the popular compressed sensing problem  @xcite .",
    "it also shares many similarities with the matrix completion problem  @xcite .",
    "for all these reasons , many algorithms for the solution of this problem are readily available ( for example , see  @xcite ) .    whereas the approach outlined above for compressing solution snaphots computed by an ebm in view of constructing a reduced - order basis suitable for model reduction is application independent and therefore quite general , it is developed and demonstrated in the remainder for this paper for fluid - structure interaction ( fsi ) problems . to this effect",
    ", the remainder of this paper is organized as follows .    in section  [ sec : not ] , the main notation used in this paper is laid out to facilitate its reading . in section  [ sec : ebm ] , a general ebm framework for computational fluid dynamics ( cfd ) is overviewed , and the standard projection - based mor approach is recapitulated . in section [ sec : met ] , the proposed method for compressing cfd snapshots computed by an ebm is introduced . in section  [ sec : app ] , this method is applied to three different fsi problems . finally in section  [ sec :",
    "con ] , conclusions are offered and prospects for future work are summarized .",
    "throughout this paper , matrices are denoted by bold capitals ( ex .",
    "@xmath0 ) , vectors by bold lower case ( ex .",
    "@xmath1 ) , and subscripts identify rows and columns ( for example , @xmath2 is the entry at the @xmath3-th row and @xmath4-th column of matrix @xmath0 ) .",
    "the `` colon '' notation is used to specify columns or rows of a matrix ( for example @xmath5 denotes the @xmath4-th column and @xmath6 denotes the first @xmath7 rows of matrix @xmath0 ) . @xmath8 and @xmath9 denote the @xmath10 identity and null matrices , respectively .    for two matrices @xmath0 and @xmath11 of equal dimension @xmath12 , the hadamard product @xmath13 is the matrix of the same dimension whose",
    "elements are given by @xmath14    if @xmath0 is an @xmath12 matrix and @xmath11 is a @xmath15 matrix , the kronecker matrix product @xmath16 is the @xmath17 block matrix @xmath18\\ ] ]    the operator @xmath19 denotes the vectorization of the matrix @xmath0 formed by stacking the columns of @xmath0 into a single column vector @xmath20\\ ] ]    for a vector @xmath21 of dimension @xmath7 , the operator @xmath22 returns the @xmath23 diagonal matrix @xmath24\\ ] ]    for a matrix @xmath0 that is @xmath12 , the operator @xmath25 returns the diagonal @xmath26 matrix @xmath27\\ ] ]    the standard euclidean norm of a vector @xmath21 and frobenius norm of a matrix @xmath0 are denoted by @xmath28 and @xmath29 , respectively , and defined as follows    @xmath30    two of the applications considered in this paper involve compressible flows governed by the navier - stokes equations . in this case , the fluid state vector is denoted by @xmath31 , and the fluid pressure , density , and velocity magnitude are denoted by @xmath32 , @xmath33 , and @xmath34 , respectively .",
    "the free - stream conditions are designated by the subscript @xmath35 .",
    "in this work , fsi problems are considered as a vehicle to explain the snapshot compression method proposed for constructing a reduced - order basis ( rob ) suitable for the nonlinear reduction of embedded boundary models .",
    "it is stressed however that this method is general . in principle , it applies to any ebm framework designed for solving any computational problem . before presenting this method in section  [ sec : met ] however , the stage is set here by describing the generic problem of interest , and its reduction process .",
    "consider the problem of computing an unsteady compressible flow around a _ rigidly moving _",
    "body @xmath36 contained in a _ fixed _",
    "region @xmath37 .",
    "a representative geometry of this problem is illustrated in the left part of figure  [ fig : fsi_problem ] .",
    "assume that the boundary @xmath38 and fluid / body interface @xmath39 are equipped with the appropriate boundary and fluid - structure transmission conditions , respectively .",
    "in an ebm framework , a background eulerian mesh is typically used to discretize the global domain @xmath40 .",
    "the nodes of this mesh that are occluded by @xmath36 at time @xmath41 are usually referred to as `` ghost '' nodes ; the others are referred to as `` real '' nodes . a semi - discretization on this mesh of the navier - stokes equations governing the fluid subsystem yields a set of nonlinear ordinary differential equations ( odes ) which can be written as @xmath42 where @xmath41 denotes time , @xmath43 , @xmath44 is the number of fluid variables per mesh node , @xmath45 denotes the total number of mesh nodes , and @xmath46 denotes a nonlinear function of @xmath31 that represents the convective and diffusive fluxes .    without any loss of generality",
    ", it is assumed throughout the remainder of this paper that eq .",
    "is discretized in time using an implicit linear multistep scheme . hence ,",
    "if @xmath47 denotes a discretization of the time - interval @xmath48 $ ] and @xmath49 , the discrete counterpart of eq .   at time - step @xmath50 is @xmath51 where @xmath52 is the order of accuracy of the chosen time - integrator and @xmath53 and @xmath54 are two constants that characterize it .    in an ebm framework for cfd",
    ", the fluid - structure transmission conditions require special attention because the fluid / body interface @xmath39 does not coincide in general with the nodes of the background mesh . over the years",
    ", a large number of different boundary treatment schemes has been developed for addressing this issue ( for example , see  @xcite and  @xcite for a review of this and related issues ) .",
    "this is noteworthy because the method proposed in this paper for compressing solution snapshots computed by ebms based on these schemes is actually independent of them .          in a projection - based mor method ,",
    "the state vector @xmath55 is approximated in a global affine trial subspace as follows @xmath56 where @xmath57 is a matrix whose columns contain the basis of this subspace , @xmath58 is the reduced dimension , @xmath59 denotes the generalized coordinates in this basis at time @xmath60 , and @xmath61 is the initial condition . substituting eq .   into eq .",
    "yields @xmath62 , which represents an overdetermined system of @xmath63 equations with @xmath64 unknowns .",
    "consequently , the residual is projected onto a test subspace represented by @xmath65 , yielding the square system @xmath66 . in a galerkin projection , @xmath67 . in a least - square projection , @xmath68  @xcite , where @xmath69 is the jacobian of @xmath70  ( [ eqn : full_dis ] ) with respect to @xmath1 . in either case , the vector of generalized coordinates is then obtained by solving a square system of nonlinear equations using newton s method or a preferred variant .",
    "computing the vector of generalized coordinates @xmath71 using a least - squares projection approach is equivalent to solving at each time - step the minimization problem  @xcite @xmath72 for nonlinear , non self - adjoint problems such as those represented in this case by the set of odes  ( [ eqn : semi_dis ] ) , this approach is more robust than its galerkin counterpart .",
    "hence , its application in the context of an ebm framework is given here further attention .    since only a portion of the eulerian computational domain corresponds to the real flow region , minimizing the norm of the _ global _ residual vector @xmath73",
    " that is , including its ghost component  is neither necessary nor convenient . instead , let @xmath74 denote a binary vector identifying the fluid / body  or more generally , the ghost / real  partition of the computational domain at time @xmath60 @xmath75 the idea here is that at each time - step , the norm of only the real component of @xmath73  that is , that associated with the real flow region  needs to be minimized to obtain the vector of generalized coordinates @xmath71 needed to determine the reduced - order model ( rom ) approximation  ( [ eqn : tilde_w ] ) . in other words ,",
    "the idea here is that in the context of an ebm , the minimization problem  ( [ eqn : min_prob ] ) can be reformulated as @xmath76    equation   above is a nonlinear equation .",
    "therefore , it must be solved iteratively using , for example , the gauss - newton method , which can be summarized as    _ for @xmath77 solve _ @xmath78 where the superscript @xmath79 designates the @xmath3-th iteration , @xmath80 is the increment of the sought - after solution at the @xmath3-th gauss - newton iteration , and @xmath32 is determined by a convergence criterion .",
    "equation   constitutes a @xmath64-dimensional gauss - newton rom of the high - dimensional model ( hdm )  that is , the high - fidelity cfd model  represented here by eq .",
    "( [ eqn : semi_dis ] ) .",
    "the normal equations associated with eq .   can be written as @xmath81 where the superscript @xmath82 denotes the transpose .    in any case , whether a galerkin or least - squares approach is chosen for determining the vector of generalized coordinates @xmath71 , the time - invariant rob @xmath83 must be first determined . in mor applications ,",
    "basis functions are usually constructed from solution snapshots .",
    "these snapshots are collected , assembled into a matrix , and compressed using , for example , svd . in an interface - fitted computational framework ,",
    "this computation is straightforward because the computational domain does not contain a ghost region . in an ebm framework",
    "however , this compuation is complicated by the presence and evolution of a ghost / real partition of the computational fluid domain . in the following section ,",
    "a method for constructing optimal fluid basis functions from snapshots computed by an ebm is presented .",
    "to this effect , this section is organized in three parts . first , the concepts of solution snapshots and a snapshot matrix are recalled .",
    "then , the problem of constructing an optimal rob for embedded boundary models is formulated as a weighted low - rank matrix approximation problem .",
    "finally , an efficient iterative scheme for solving this problem is specified .",
    "a solution snapshot , or simply a snapshot , is defined here as a state vector @xmath55 computed as the solution of eq .",
    "( [ eqn : full_dis ] ) for some instance of its parameters  that is , for some specific time @xmath60 or specific value of the set of flow parameters or boundary / initial conditions underlying this governing equation  on the background eulerian mesh discretizing the domain @xmath40 .",
    "a snapshot matrix is defined as a matrix @xmath84 ( @xmath85 ) whose columns are individual snapshots . for all practical purposes ,",
    "the main focus of this paper is on unsteady flows and on snapshots associated with different time - instances @xmath86 .",
    "hence , @xmath87 for @xmath88 .",
    "because the proposed method for computing a rob for an embedded boundary model does not utilize information from the occluded region of the computational domain , the ghost components of these snapshots can take arbitrary values .",
    "consequently , the proposed method , which is described below , is independent of the specifics of the ebm framework used to generate the snapshots .",
    "constructing basis functions from snapshots in the spirit of the pod method  that is , using data compression  can be formulated mathematically as a low - rank matrix approximation problem as follows .",
    "_ for a given snapshot matrix _",
    "@xmath89 _ , find a lower rank matrix _",
    "@xmath90 _ that solves the minimization problem _",
    "@xmath91 where @xmath92 . in this problem",
    ", the rank constraint can be taken care of by representing the unknown matrix as @xmath93 , where @xmath94 and @xmath95 , so that problem  ( [ eqn : lra ] ) becomes @xmath96 it is well - known that the solution of the above low - rank approximation problem is given by the svd of @xmath97 : specifically , @xmath98 and @xmath99 where @xmath100 .",
    "unfortunately , when the snapshot matrix @xmath97 is generated using an ebm framework , the solution outlined above can not be expected to yield an optimal rob .",
    "this is because : ( a ) the snapshots computed using an ebm contain information from both the flow ( or real ) region of the computational domain and its occluded ( or ghost ) region , and ( b ) this data inconsistency is not accounted for in the standard low - rank matrix approximation problem  ( [ eqn : lra ] ) .",
    "hence , this issue is resolved here by proposing the alternative weighted low - rank matrix approximation problem @xmath101 where @xmath102 is a binary mask matrix identifying the ghost / real partition of the snapshot matrix @xmath103\\ ] ] where @xmath104 has already been defined in  ( [ eq : m ] ) .",
    "this binary weighting ensures that the values of @xmath31 at the ghost nodes do not play a role in the construction of the basis functions , which in turn implies that the derived basis functions are optimal for the real components of the snapshots associated with @xmath105 .",
    "in the general case ( i.e. @xmath106 ) , the weighted low - rank approximation problem formulated above is not reducible to the un - weighted problem .",
    "therefore , its solution is not given by the svd factorization of the snapshots  ; see  [ appb ] for details . ] .",
    "furthermore , no closed form solution of this problem is known .",
    "hence , it must be solved by numerical iterations . in this work , the alternating least squares ( als ) algorithm is chosen for this purpose .",
    "this algorithm is the most widely applicable and empirically successful approach for solving this and related problems  @xcite .",
    "the als algorithm takes advantage of the bi - linearity of the representation @xmath93 .",
    "using the connection between the frobenius and eucledian norms and the notation for the kronecker matrix product  ( [ eq : kmp ] ) , problem   can be re - written as    @xmath107    problem   is a linear least - squares problem for @xmath108 if @xmath83 is known .",
    "problem   is a linear least - squares problem for @xmath108 if @xmath83 is known .",
    "this suggests the following simple iterative solution procedure :    1 .",
    "guess @xmath109 ( for example , initialize @xmath83 as the first @xmath64 left - singular vectors of @xmath97 ) 2 .",
    "repeat until convergence 1 .",
    "solve problem   for @xmath110 given @xmath109 2 .",
    "solve problem   for @xmath109 given @xmath110    a more detailed outline of the above algorithm is given in algorithm  [ alg : ap ] , where the stopping criterion has been omitted for the sake of brevity ( see  @xcite for a discussion of this topic ) .",
    "data matrix @xmath84 and weighting matrix @xmath111 locally optimal solution @xmath112 $ ] of problem   populate the ghost entries of the snapshot matrix @xmath97 with zeros compute the svd of the snapshot matrix : @xmath100    initialize : @xmath113 solve problem  , i.e. evaluate @xmath114 solve problem  , i.e. evaluate @xmath115    the superscripts of @xmath83 and @xmath108 in algorithm  [ alg : ap ] designate an als iteration .",
    "the computational cost of this algorithm is roughly @xmath64 times the computational cost of a single thin svd of the snapshot matrix times the number of iterations for convergence  that is , @xmath116 , where @xmath32 denotes the performed number of iterations . in section",
    "[ sec : app ] , it is shown that in general , @xmath117 suffices to obtain good results .",
    "the convergence of this algorithm is monitored using the normalized weighted projection error @xmath118 this error is guaranteed to decrease monotonically to a local minimum  @xcite .",
    "a matlab implementation of algorithm  [ alg : ap ] is provided in  [ appa ] .",
    "three fsi problems are considered here to illustrate the method proposed in this paper for constructing basis functions suitable for the nonlinear model reduction of embedded boundary models , and demonstrate its features and performance .",
    "the first one is a simple one - dimensional model problem based on burgers equation .",
    "it has the merit of illustrating the basic idea and being easily reproducible by the interested reader .",
    "the second problem focuses on the prediction of a two - dimensional unsteady viscous flow around a cylindrical body in large - amplitude heaving motion . because this problem is formulated in an unbounded fluid domain",
    ", it is also solvable using an interface- ( or body- ) fitted ale framework .",
    "hence , it offers a venue not only for assessing the intrinsic performance of the proposed method for constructing a suitable rob for an embedded boundary model that is more representative than that of the previous example , but also assessing the performance of the resulting nonlinear rom relative to that of a counterpart rom constructed using a body - fitted computational framework .",
    "the third problem focuses on the solution of a two - dimensional unsteady turbulent flow inside a square cavity containing a rotating ellipsoidal body . in this case",
    ", the large - amplitude motion of @xmath36 challenges the robustness if not feasibility of a body - fitted ale framework and calls instead for an ebm framework .",
    "hence , this third problem highlights the need for and demonstrates the performance of the computational methodology proposed in this paper .    for each fsi problem outlined above , the governing ( fluid ) equations are semi - discretized using the central finite difference method .",
    "they are discretized in time using the backward euler implicit scheme with a constant time - step @xmath119 chosen so that @xmath36 does not travel more than one layer of nodes during this time - step .",
    "the newton method is used to solve all nonlinear equations arising from the implicit time - discretization .    whenever the flow problem of interest is solved using a body - fitted ale framework , a rob for this problem",
    "is constructed by computing @xmath120 snapshots of the solution at different time instances @xmath60 , then compressing them using the svd . in this case",
    ", the nonlinear rom of interest is generated using the gnat method  @xcite based on a least - squares projection .",
    "on the other hand , whenever an ebm framework is used to solve the flow problem of interest , a rob for this problem is constructed by computing @xmath120 snapshots of the solution at different time instances @xmath60 , and compressing them using the als algorithm described in algorithm  [ alg : ap ] . in this case , the nonlinear rom of interest is constructed using a variant of the same gnat method where at each time - step , the vector of generalized coordinates is computed by solving  ( [ eqn : min_prob2 ] ) .",
    "first , the following one - dimensional fsi problem based on the viscous burgers equation , a periodic boundary condition for the fluid subsystem , and non - homogeneous dirichlet boundary conditions for the body subsystem in lieu of the fluid - structure transmission conditions is considered @xmath121 \\times [ 0,2]}\\\\      w(x,0 ) & = & 0\\\\      w\\left ( { 0,t } \\right ) & = & w\\left ( { 1,t } \\right)\\\\   w\\left ( { \\xi(t),t } \\right ) & = & w\\left ( { \\xi(t ) + 0.1,t } \\right ) = \\sin ( 2 \\pi t ) \\end{array } \\right .\\ ] ] where @xmath122 is a reynolds - like number and is set to @xmath123 , and @xmath124    the above initial boundary value problem models a flow problem in an unbounded , one - dimensional , fluid domain in the middle of which a rigid , linear body @xmath125 of length @xmath126 is placed and set into the oscillatory harmonic motion characterized by the amplitude 0.1 , frequency @xmath127 , and velocity @xmath128 . at each time @xmath41",
    ", @xmath129 defines the position of the left extremity of @xmath36 , and @xmath130 defines the position of its right extremity .",
    "hence , this problem is a one - dimensional instance of the generic fsi problem discussed in section  [ sec : fsi_problem ] .",
    "the simplicity of problem  ( [ eqn : burgers_eq ] ) is such that it can be solved using both an ale framework on a moving mesh , and an ebm framework on a fixed mesh .",
    "hence , both frameworks are considered here , primarily for the purpose of comparisons . in both cases ,",
    "is discretized on a uniform cartesian mesh with @xmath131 ( @xmath132 nodes ) .",
    "specifically , due to the unbounded fluid domain assumption and the periodic fluid boundary condition , the body - fitted ale framework considered here for the solution of problem  ( [ eqn : burgers_eq ] ) is equipped with a rigid motion of the mesh that is identical to that of @xmath36 . as for the considered ebm framework ,",
    "it is equipped with a first - order ghost fluid scheme where the ghost values of @xmath133 are populated at each time - instance @xmath134 only at the two ghost fluid nodes that are the nearest to the left and right boundaries of @xmath135 , using the same value @xmath136 .",
    "this ebm framework is illustrated in figure  [ fig : burgers_ebm ] , where the circles filled in black represent the real nodes , the empty ones represent the ghost fluid nodes , and the empty squares designate the subset of ghost fluid nodes whose ghost fluid values are populated .",
    "both computational frameworks deliver the same hdm solution which is graphically depicted in figure  [ fig : burgers ] .            for each of the body - fitted ale and ebm models , three robs of dimension @xmath137 , 20 , and 40 are constructed using @xmath138 snapshots of the solution of problem  ( [ eqn : burgers_eq ] ) , and three corresponding nonlinear roms are generated .    figure  [ sufig : projectin_error_burgers ] reports on the convergence of the als algorithm using the normalized weighted projection error  .",
    "it illustrates a well - known property of this algorithm , namely , its guarantee to deliver a monotonic convergence to a local minimum .",
    "figure  [ sufig : rom_error_burgers ] reports on the variation with the rom dimension @xmath64 of the ebm rom error @xmath139 defined as @xmath140 where @xmath141 is the matrix of snapshot solutions of problem  ( [ eqn : burgers_eq ] ) , @xmath142 is the rob computed at the @xmath3-the iteration of the als algorithm , and @xmath143 is the matrix of generalized coordinates of the approximate solutions associated with @xmath144 and can be written as @xmath145\\ ] ]  that is , each @xmath4-th column of the matrix product @xmath146 is the ebm rom solution of problem  ( [ eqn : burgers_eq ] ) at time @xmath147 , based on the rob @xmath144 computed at the @xmath3-th iteration of algorithm  [ alg : ap ] .    at the initial ( @xmath148-th )",
    "als iteration , the rob @xmath149 is constructed by performing the svd directly on ebm solution snapshots where the ghost values of the solution  that is , the values of this solution at the occluded mesh nodes  are populated with zeros .",
    "as shown in figure  [ sufig : rom_error_burgers ] , this approach  referred to here as the `` naive approach ''  delivers a poor performance , which illustrates the need for an alternative method for constructing ebm robs .",
    "figure  [ sufig : rom_error_burgers ] also reveals that a single als iteration significantly improves the computed ebm rom solution .",
    "the results reported in figure  [ sufig : rom_error_burgers ] also show that after a single als iteration , the constructed ebm roms deliver already a comparable accuracy to that of the body - fitted ale roms of same dimensions .    figure  [ fig : burgers2 ] displays the convergence of the ebm rom solutions at @xmath150 for @xmath151 , and contrasts these solutions with their counterparts obtained using the body - fitted ale roms of same dimensions .",
    "the reader can observe that both types of roms exhibit comparable convergence behavior and accuracy , thereby demonstrating the effectiveness of the proposed method for constructing suitable ebm robs .",
    "next , the simulation of a compressible viscous flow around a heaving rigid cylindrical body @xmath36 with a circular cross section of radius @xmath152 is considered .",
    "the fluid is assumed to be a perfect gas with the ratio of specific heats @xmath153 and is modeled using the two - dimensional compressible navier - stokes equations .",
    "the cylinder is assumed to be infinitely long , and therefore the flow is effectively modeled as a two - dimensional problem around a disk .",
    "the physical fluid domain is assumed to be unbounded , but the computational fluid domain is bounded by a square of edge length equal to @xmath154 as shown in figure  [ fig : cylinder_geometry ] .",
    "the free - stream mach number is set to @xmath155 , the reynolds number based on the cylinder diameter to @xmath156 , and the prandtl number to @xmath157 .",
    "the center of the disk representing @xmath36 , @xmath158 , is set into the vertical sinusoidal motion @xmath159 where @xmath160 denotes the @xmath161 abscissae of @xmath158 .",
    "hence , the total center - to - center displacement of @xmath36 is @xmath162 , which is a relatively large displacement . yet , because the fluid domain is also unbounded in this case , and because @xmath125 is rigid , the fsi problem outlined above can be reliably solved by a body - fitted ale framework where the cfd mesh is rigidly moved to follow the vertical oscillations of @xmath36 .",
    "hence , two similar but strictly speaking different meshes are constructed for discretizing the spatial domain shown in figure  [ fig : cylinder_geometry ] .",
    "the first mesh is designed for the ebm framework .",
    "it is non - uniform , has @xmath163 elements whose size in the vicinity of the cylindrical body is uniform and at its finest is characterized by @xmath164 , and embeds the circular body @xmath36 .",
    "the second mesh is similar except for the fact that it is a body - fitted mesh .",
    "the ebm for cfd used for solving this fsi problem is illustrated in figure  [ fig : navier - stokes_ebm ] , where the real fluid nodes are shown as solid circles and the ghost fluid nodes as empty circles . the kinematic transmission condition ( or adherence condition ) on the fluid / body interface",
    "is enforced using a first - order ghost - fluid scheme . at each time - step , the ghost fluid values at the ghost fluid nodes that are the nearest to the fluid / body interface ( these are identified by squares in figure  [ fig : navier - stokes_ebm ] ) , are populated as follows .",
    "the ghost fluid velocities at these nodes are set to the velocity of the immersed body @xmath36 .",
    "the ghost fluid pressures and densities at these same nodes are computed by constant extrapolation of their counterparts at the nearest neighboring real fluid nodes . on the other hand ,",
    "the ghost fluid values at all other ghost nodes , which are labelled `` g '' in figure  [ fig : navier - stokes_ebm ] , are not populated . at the end of each computational time - step , the fluid state vector at the `` transitional '' nodes ( labelled `` t '' in figure  [ fig : navier - stokes_ebm ] )  that is , the nodes whose status switches from ghost to real  are populated using the ghost fluid values at these nodes from the previous time - step . snapshots of the vorticity and pressure fluctuations computed using this ebm and the hdm are shown in figure  [ fig : cylinder ] .        first , a pair of unsteady simulations are performed for @xmath165 $ ] using the body - fitted ale and ebm frameworks outlined above , in order to generate in each case @xmath166 snapshots for model reduction .",
    "then , robs and nonlinear roms are constructed as outlined above .    figure  [ sufig : projectin_error_cylinder ] reports on the convergence of the als algorithm using the projection error @xmath167  .",
    "as expected , this error decreases monotonically .    for this problem ,",
    "the rom error is assessed using the relative error in the lift coefficient measured in the @xmath168 norm @xmath169 where @xmath170 and @xmath171 .",
    "this error is reported in figure  [ sufig : rom_error_cylinder ] .",
    "as before , the rob @xmath149 obtained at the @xmath148-th iteration of the als algorithm is computed using the so - called naive approach . figure  [ sufig : rom_error_cylinder ] shows that as expected , the nonlinear rom constructed using this rob performs poorly . however , after only one als interation , the rom constructed using the rob @xmath172 delivers a good performance .",
    "the results reported in figure  [ sufig : rom_error_cylinder ] also demonstrate that after a single als iteration , the generated ebm roms deliver an accuracy that is comparable to that of their ale rom counterparts of the same dimensions .",
    "figure  [ fig : cylinder_c_l c_d ] displays the evolution of the instantaneous coefficients of lift and drag , @xmath173 and @xmath174 , where @xmath175 and @xmath171 .",
    "the solid curves correspond to computations performed using the ebm hdm , whereas the dashed curves correspond to counterparts performed using the constructed nonlinear roms ( and a single iteration of the als algorithm in the case of the ebm roms ) .",
    "the reader can observe that , as expected , the solutions predicted using both sets of roms exhibit comparable accuracies and converge to their counterparts obtained using the ebm hdm .",
    "finally , the two - dimensional computation of a viscous flow inside a square cavity with a rotating ellipsoidal body is considered here .",
    "specifically , the objective is to predict the flow past the ellipsoidal body during the time - interval in which it rotates a full @xmath176 degrees .",
    "this fsi problem with large - amplitude displacements and rotations is chosen because unlike the previous two problems , it can not be solved using a body - fitted ale framework without some form of repeated remeshing to avoid mesh entangling .",
    "hence , it is representative of a large family of fsi problems for which the ebm framework is preferred , if not essential .",
    "the geometry of this problem is illustrated in figure  [ fig : proppeler_geometry ] .",
    "again , the fluid is modeled as a perfect gas with the ratio of specific heats @xmath153 . the reynolds number based on the ellipse tip",
    "is set to @xmath156 and the prandtl number to @xmath157 .",
    "the flow is assumed to be initially quiescent .",
    "the square domain is discretized using a uniform cartesian grid with @xmath177 elements .",
    "the same ebm outlined for the previous fsi problem with a heaving cylindrical body is applied to its solution .",
    "computational snapshots of the vorticity contours obtained using the ebm hdm and three different ebm roms of dimensions varying between @xmath137 and @xmath178 are illustrated in figure  [ fig : propeller ] .",
    "all ebm roms are constructed with a rob @xmath172 obtained using a single iteration of the als algorithm .     [ fig : proppeler_geometry ]    as in the previous two cases , the ebm rom solution is shown to converge to its ebm hdm counterpart when the dimension @xmath64 of the rom is increased .",
    "in particular , the reader can observe in figure  [ sufig : propeller_n20 ] that the vorticity field predicted by the ebm rom of dimension @xmath179 reproduces remarkably well that obtained using the ebm hdm .",
    "for @xmath180 , the vorticity fields predicted by the ebm rom and ebm hdm are almost indistinguishable , thereby demonstrating the effectiveness of the proposed method for constructing robs and roms for embedded boundary models .",
    "embedded boundary models are popular for the solution of nonlinear problems with evolving domains and/or moving interfaces .",
    "the application of projection - based model order reduction methods to the construction of reduced - order versions of such models calls for the construction first of their underlying reduced - order bases . the collection and compression of solution snapshots using various instances of a computational model of interest is both a popular and effective approach for generating reduced bases . for a traditional interface - fitted computational model",
    ", it is a straightforward procedure that has been popularized by the proper orthogonal decomposition and singular value decomposition methods . for an embedded boundary computational framework ,",
    "this approach faces the problem of dealing with the partitioning of the overall computational domain into a real subdomain and a ghost one corresponding to the region of the overall computational domain that is occluded by the embedded boundary . for time - dependent problems ,",
    "this complication is further exacerbated by the evolution in time of this partitioning as it implies an evolution in time of the partitioning between meaningful ( real ) and meaningless ( ghost ) entries of the collected solution snapshots .",
    "this makes the problem of compressing these snapshots in view of constructing a reduced - order basis a difficult task . to address this issue",
    ", this paper formulates the snapshot compression problem as a weighted low - rank approximation problem where the binary weighting identifies the evolving component of the individual simulation snapshots , and proposes to solve this problem using the alternating least squares ( als ) algorithm .",
    "this approach is applicable in principle to any embedded boundary value problem .",
    "it is successfully demonstrated in this paper for three different fluid - structure interaction problems of increasing complexity . in all considered cases ,",
    "it is shown to deliver reduced - order bases and models that effectively reproduce the high - dimensional solutions even when the flow is vortex - dominated , and the immersed body underoges large displacements and rotations .",
    "the following is a simple matlab implementation of algorithm  [ alg : ap ] presented in section  [ sec : als ] .",
    "the inputs of the function ` als ` are the snapshot matrix ` x ` where the ghost values are set to zero , a binary weighting matrix ` m ` , the desired dimension of the subspace of approximation ` k ` , and the maximum number of iterations ` it_max ` . the outputs of this function are the low - rank approximation matrices ` u ` and ` v ` .    ....",
    "function [ u , v ] = als(x , m , k , it_max )      [ cn , k ] = size(x ) ;      [ u_star , ~ , ~ ] = svd(x,'econ ' ) ;      u = u_star(:,1:k ) ;      clear u_star ;      v = zeros(k , k ) ;      for p = 1:it_max          for j = 1:k              j = find(s(:,j ) ) ;              x = full(x(j , j ) ) ;              u = u(j , : ) ;              v(:,j ) = u\\x ;          end          for i = 1:cn              i = find(m(i , : ) ) ;              x = full(x(i , i ) ) ;              v = v(:,i ) ;              u(i , : ) = x / v ;          end      end ....",
    "if @xmath102 is a rank 1 weighting matrix , it can be written as @xmath182 for some @xmath183 and @xmath184 . in this case ,    [ eq : res1 ] @xmath185    defining @xmath186 as @xmath187 , @xmath188 as @xmath189 , and @xmath190 as @xmath191 , the above result can be re - written as    [ eq : res2 ] @xmath192    where @xmath193 .",
    "this shows that when @xmath194 is a rank 1 weighting matrix , the weighted low - rank approximation problem  ( [ eqn : wlra ] ) reduces to its un - weighted counterpart  ( [ eqn : lra ] ) .",
    "an example of a rank 1 weighting matrix @xmath194 is the weighting matrix appropriate for an embedded boundary model where the embedded body @xmath125 is stationary  that is , @xmath195  but the flow is unsteady . in this case ,    @xmath196\\ ] ]",
    "the authors acknowledge partial support by the office of naval research under grant n00014 - 11 - 1 - 0707 , and partial support by the army research laboratory through the army high performance computing research center under cooperative agreement w911nf-07 - 2 - 0027 .",
    "the content of this publication does not necessarily reflect the position or policy of any of the aforementioned institutions , and no official endorsement should be inferred .",
    "10 url # 1`#1`urlprefixhref # 1#2#2 # 1#1      c.  farhat , m.  lesoinne , n.  maman , mixed explicit / implicit time integration of coupled aeroelastic problems : three - field formulation , geometric conservation and distributed solution , international journal for numerical methods in fluids 21 ( 1995 ) 807835 .    c.  farhat , a.  rallu , k.  wang , t.  belytschko , robust and provably second - order explicit - explicit and implicit - explicit staggered time - integrators for highly nonlinear fluid - structure interaction problems , international journal for numerical methods in engineering 84 ( 2010 ) 73107 .",
    "k.  wang , a.  rallu , j.  f. gerbeau , c.  farhat , algorithms for interface treatment and load computation in embedded boundary methods for fluid and fluid  structure interaction problems , international journal for numerical methods in fluids 67  ( 9 ) ( 2011 ) 11751206 .    c.  farhat , j .- f .",
    "gerbeau , a.  rallu , fiver : a finite volume method based on exact two - phase riemann problems and sparse grids for multi - material flows with large density jumps , journal of computational physics , 231 ( 2012 ) 63606379 .",
    "m.  j. balajewicz , e.  h. dowell , b.  r. noack , low - dimensional modelling of high - reynolds - number shear flows incorporating constraints from the navier  stokes equation , journal of fluid mechanics 729 ( 2013 ) 285308 .",
    "k.  carlberg , c.  farhat , j.  cortial , d.  amsallem , the gnat method for nonlinear model reduction : effective implementation and application to computational fluid dynamics and turbulent flows , journal of computational physics 242 ( 2013 ) 623647 .",
    "d.  xiao , f.  fang , a. g.  buchan , c.c .",
    "pain , i.m .",
    "navon , j.  du , g.  hu non - linear model reduction for the navier - stokes equations using residual deim method , journal of computational physics , 10.1016/j.jcp.2014.01.011 .",
    "a.  m. buchanan , a.  w. fitzgibbon , damped newton algorithms for matrix factorization with missing data , in : computer vision and pattern recognition , 2005 .",
    "cvpr 2005 .",
    "ieee computer society conference on , ieee 2 ( 2005 ) 316322 .",
    "p.  jain , p.  netrapalli , s.  sanghavi , low - rank matrix completion using alternating minimization , in : proceedings of the 45th annual acm symposium on symposium on theory of computing , acm ( 2013 ) 665674 .",
    "x.  zeng , c.  farhat , a systematic approach for constructing higher - order immersed boundary and ghost fluid methods for fluid and fluid - structure interaction problems , journal of computational physics 231 ( 2012 ) 28922923 ."
  ],
  "abstract_text": [
    "<S> embedded boundary methods alleviate many computational challenges , including those associated with meshing complex geometries and solving problems with evolving domains and interfaces . </S>",
    "<S> developing model reduction methods for computational frameworks based on such methods seems however to be challenging . </S>",
    "<S> indeed , most popular model reduction techniques are projection - based , and rely on basis functions obtained from the compression of simulation snapshots . in a traditional interface - fitted computational framework , </S>",
    "<S> the computation of such basis functions is straightforward , primarily because the computational domain does not contain in this case a fictitious region . </S>",
    "<S> this is not the case however for an embedded computational framework because the computational domain typically contains in this case both real and ghost regions whose definitions complicate the collection and compression of simulation snapshots . </S>",
    "<S> the problem is exacerbated when the interface separating both regions evolves in time . </S>",
    "<S> this paper addresses this issue by formulating the snapshot compression problem as a weighted low - rank approximation problem where the binary weighting identifies the evolving component of the individual simulation snapshots . </S>",
    "<S> the proposed approach is application independent and therefore comprehensive . </S>",
    "<S> it is successfully demonstrated for the model reduction of several two - dimensional , vortex - dominated , fluid - structure interaction problems .    </S>",
    "<S> data compression , embedded boundary method , evolving domains , immersed boundary method , interfaces , model reduction , singular value decomposition </S>"
  ]
}
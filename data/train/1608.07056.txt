{
  "article_text": [
    "visualizing set systems is a basic problem in data visualization . among the oldest and most popular set visualization tools are the venn and euler diagrams .",
    "however , other methods are preferred when the data involves a large number of sets with complex intersection relations  @xcite .",
    "in particular , a variety of tools have been proposed for set systems where the elements are associated with location data .",
    "many of these methods use geometric graphs to represent set membership , motivated by reducing the amount of ink used in the representation , including linesets  @xcite , kelp diagrams  @xcite and kelpfusion  @xcite .    ,",
    "@xmath7 , and @xmath8 , drawn as outlines in different colours .",
    "right : the corresponding ( minimum ) coloured spanning graph . refer to section  [ sec : prelim ] for an explanation of colour use.,title=\"fig : \" ] , @xmath7 , and @xmath8 , drawn as outlines in different colours .",
    "right : the corresponding ( minimum ) coloured spanning graph . refer to section  [ sec : prelim ] for an explanation of colour use.,title=\"fig : \" ]    hurtado et al .",
    "@xcite recently proposed a method for drawing sets using outlines that minimise the total visual clutter .",
    "the underlying combinatorial problem is to compute a _",
    "minimum colored spanning graph _ ; see figure  [ fig : example ] .",
    "they studied the problem for @xmath0 points in a plane and two sets ( each point is a member of one or both sets ) .",
    "the output is a graph with the minimum sum of edge lengths such that the subgraph induced by each set is connected .",
    "they gave an algorithm that runs in @xmath9-time , and a @xmath10-approximation in @xmath11 time , where @xmath5 is the steiner ratio ( the ratio between the length of a minimum spanning tree and the length of a minimum steiner tree ) .",
    "efficient algorithms are known in two special cases : one runs in @xmath6 time for collinear points that are already sorted  @xcite ; the other runs in @xmath12 time for cocircular points , where @xmath13 is the number of points that are elements of both sets  @xcite .",
    "this problem also has applications for connecting different networks with minimum cost , provided that edges whose endpoints belong to both networks can be shared .",
    "* results and organization .",
    "* we study the minimum colored spanning graph problem for @xmath0 points in a plane and @xmath1 sets , @xmath2 . the formal definition and some properties of the optimal solution are in section  [ sec : prelim ] . in section  [ sec : hard ] ,",
    "we show that min-@xmath1csg is np - complete for all @xmath14 , and in section  [ sec : approximation ] we provide an @xmath15-approximation algorithm for @xmath4 that runs in @xmath16 time , where @xmath13 is the number of multichromatic points .",
    "this improves the previous @xmath17-approximation from  @xcite .",
    "section  [ sec : collinear ] describes an algorithm for the special case of collinear points that runs in @xmath18 time .",
    "due to space constraints , some proofs are omitted ; they can be found in appendix  [ app : proofs ] .",
    "in this section , we define the problem and show a property of the optimal solution related to the minimum spanning trees , which is used in sections  [ sec : hard ] and [ sec : approximation ] .",
    "* definitions . * given a set of @xmath0 points in the plane @xmath19 and subsets @xmath20 , we represent set membership with a function @xmath21 , where @xmath22 iff @xmath23 for every _ primary color _ @xmath24 .",
    "we call @xmath25 the _ color _ of point @xmath26 . a point @xmath26 is _ monochromatic _ if it is a member of a single set @xmath27 , that is , @xmath28 , and _ multi - chromatic _ if @xmath29 . for an edge @xmath30 in a graph @xmath31 , we use the shorthand notation @xmath32 for the shared primary colors of the two vertices . for every @xmath33 ,",
    "we let @xmath34 denote the subgraph of @xmath31 induced by @xmath35 .",
    "all figures in this paper depict only three primary colors : ` r ` , ` b ` , and ` y ` for red , blue , and yellow respectively .",
    "multi - chromatic points and edges are shown green , orange , purple , or black if their color is @xmath36 , @xmath37 or @xmath38 , or @xmath39 , respectively .",
    "see , for example , fig .",
    "[ fig : example ] ( b ) .",
    "a _ colored spanning graph _ for the pair @xmath40 , denoted csg@xmath40 , is a graph @xmath31 such that @xmath41 is connected for every primary color @xmath33 .",
    "the _ minimum colored spanning graph _ problem ( min - csg ) , for a given pair @xmath40 , asks for the minimum cost @xmath42 of a csg@xmath40 , where @xmath43 is the euclidean length of @xmath44 .",
    "when we wish to emphasize the number @xmath1 of primary colors , we talk about the min-@xmath1csg problem .    * monochromatic edges in a minimum csg . *",
    "the following lemma shows that we can efficiently compute some of the monochromatic edges of a minimum csg for an instance @xmath40 using the _ minimum spanning tree _",
    "( _ mst _ ) of @xmath35 for every primary color @xmath45 .",
    "[ lem : monocrhomatic ] let @xmath40 be an instance of min - csg and @xmath24 .",
    "let @xmath46 be the edge set of an mst of @xmath35 , and let @xmath47 be the set of multi - chromatic points in @xmath35 .",
    "then there exists a minimum csg that contains at least @xmath48mst@xmath49 edges of @xmath46 .",
    "the common edges of @xmath46 and of such a minimum csg can be computed in @xmath11 time .",
    "construct a monochromatic subset @xmath50mst@xmath51 by successively removing a longest edge from the path in mst@xmath52 between any two points in @xmath47 .",
    "an mst@xmath52 can be computed in @xmath11 time , and @xmath53 can be obtained in @xmath6 time . the graph @xmath54 has @xmath55 components , each containing one element of @xmath47 , hence @xmath56mst@xmath49 .",
    "let @xmath57 be a minimum csg .",
    "while there is an edge @xmath58 , we can find an edge @xmath59 such that exchanging @xmath60 for @xmath44 yields another minimum csg . indeed , since @xmath61 is connected , the insertion of the edge @xmath44 creates a cycle @xmath62 that contains @xmath44 . consider the longest ( open or closed ) path @xmath63 that is monochromatic and contains @xmath44 .",
    "note that at least one of the endpoints of @xmath44 is monochromatic , therefore @xmath64 contains at least two monochromatic edges . since every component of @xmath54 is a tree and contains only one multi - chromatic point",
    ", there is a monochromatic edge @xmath65 in @xmath64 .",
    "we have @xmath66 , because there is a cut of the complete graph on @xmath35 that contains both @xmath44 and @xmath60 , and @xmath67mst@xmath51 .",
    "since @xmath68 , the deletion of @xmath60 can only influence the connectivity of the induced subgraph @xmath69 .",
    "consequently , @xmath70 is a csg with equal or lower cost than @xmath57 .",
    "by successively exchanging the edges in @xmath71 , we obtain a minimal csg containing @xmath53 .",
    "hurtado et al .",
    "@xcite gave an @xmath9-time algorithm for min-2csg , by a reduction to a matroid intersection problem on the set of all possible edges on @xmath72 , which has @xmath73 elements .",
    "their algorithm for matroid intersection finds @xmath73 single source shortest paths in a bipartite graph with @xmath73 vertices and @xmath74 edges , which leads to an overall running time of @xmath9 .",
    "we improve the runtime to @xmath16 , where @xmath13 is the number of multi - chromatic points .    [",
    "cor : m6 ] an instance @xmath40 of min-2csg can be solved in @xmath16 time , where @xmath13 is the number of multi - chromatic points in @xmath72 .    by lemma  [ lem : monocrhomatic ]",
    ", we can compute two spanning forests on @xmath75 and @xmath7 , respectively , each with @xmath13 components , that are subgraphs of a minimum csg in @xmath11 time .",
    "it remains to find edges of minimum total length that connect these components in each color , for which we can use the same matroid intersection algorithm as in  @xcite , but with a ground set of size @xmath76 .",
    "we show that the decision version of min - csg is np - complete .",
    "we define the decision version of min - csg as follows : given an instance @xmath40 and @xmath77 , is there a csg @xmath78 such that @xmath79 ?    [",
    "lem : np ] min-@xmath1csg is in np .    given a set of edges @xmath80 , we can verify if @xmath78 is a @xmath81 in @xmath82 time by testing connectivity in @xmath41 for each primary color @xmath83 , and then check whether @xmath84 in @xmath85 time .",
    "we reduce min-3csg from planar - monotone-3sat , which is known to be np - complete  @xcite . for every instance @xmath86 of planar - monotone-3sat , we construct an instance @xmath87 of min-3csg .",
    "an instance @xmath86 consists of a plane bipartite graph between @xmath0 variable and @xmath13 clause vertices such that every clause has degree three or two , all variables lie on the @xmath88-axis and edges do not cross the @xmath88-axis .",
    "clauses are called _ positive _ if they are in the upper half - plane or _ negative _ otherwise .",
    "the problem asks for an assignment from the variable set to @xmath89 such that each positive ( negative ) clause is adjacent to a ` true ` ( ` false ` ) variable .",
    "equivalent to the boolean formula @xmath90 . ]",
    "given an instance @xmath86 of planar - monotone-3sat , we construct @xmath87 as shown in fig .",
    "[ fig : reduction - complete ] ( a single variable gadget is shown in fig .  [",
    "fig : reduction ] in the appendix ) .",
    "the points marked with small disks are called _ active _ and they are the only multi - chromatic points in the construction . the dashed lines in a primary color represent a chain of equidistant monochromatic points , where the gap between consecutive points is @xmath91 . a purple ( resp . ,",
    "black ) dashed line represents a red and a blue ( resp .",
    ", a red , a blue , and a yellow ) dashed line that run @xmath91 close to each other .",
    "informally , the value of @xmath91 is set small enough such that every point in the interior of a dashed line is adjacent to its neighbors in any minimum csg .",
    "the boolean assignment of @xmath86 is encoded in the edges connecting active points .",
    "we break the construction down to gadgets and explain their behavior individually",
    ".    the long horizontal purple dashed line is called _ spine _ and the set of yellow dashed lines ( shown in fig .",
    "[ fig : gadgets](a ) ) is called _ cage_. the rest of the construction consists of variable and clause gadgets ( shown in figs .",
    "[ fig : gadgets](b ) and ( c ) ) .",
    "the width of a variable gadget depends on the degree of the corresponding variable in the bipartite graph given by the instance @xmath86 . for every edge incident to the variable , we repeat the middle part of the gadget as shown in fig .  [",
    "fig : gadgets](b ) ( cf . fig .",
    "[ fig : reduction ] , where a variable of degree-2 is shown ) .",
    "the vertical black dashed lines are called _ ribs _ and the set of three or four active points close to an endpoint of a rib is called _",
    "switch_. the variable gadget contains switches of two different sizes alternately from left to right .",
    "a _ 2-switch _ ( resp . ,",
    "_ 2@xmath92-switch _ ) is a switch in which active points are at most 2 ( resp .",
    ", @xmath93 ) apart .",
    "the clause gadgets are positioned as the embedding of clauses in @xmath86 ; refer to fig .",
    "[ fig : reduction - complete ] .",
    "each active point of a positive ( negative ) clause is assigned to a @xmath93-switch and positioned vertically above ( below ) the active point of the rib , at distance @xmath93 from it .",
    "let @xmath94 be the set of all monochromatic edges of a minimum csg computable by lemma  [ lem : monocrhomatic ] .",
    "let @xmath95 be the number of edges in the bipartite graph of @xmath86 .",
    "the instance @xmath87 contains @xmath96 active points , so @xmath97 contains @xmath96 connected components . by construction ,",
    "the number of @xmath91-edges in a solution of @xmath87 between components of @xmath97 is upper bounded by @xmath98 ( one edge per color per component ) .",
    "finally , we set @xmath99 and we choose @xmath100 and @xmath101 . this particular choice of @xmath91 and @xmath92 is justified by the proofs of corollaries  [ cor:2-pair ] and [ cor : clause ] . by construction",
    ", @xmath87 has the following property :    1 .   for every partition of the components of @xmath102 into two sets @xmath103 , where @xmath104 is a primary color , let @xmath105 be the shortest edge between @xmath106 and @xmath107 .",
    "then either @xmath108 or @xmath109 and @xmath110 are active points in the same switch .",
    "a _ standard solution _ of min-3csg is a solution that contains @xmath94 and in which every edge longer than @xmath91 is between two active points of the same switch .",
    "[ lem : sat2csg ] let @xmath86 be a positive instance of planar - monotone-3sat . then @xmath87 is a positive instance of min-3csg .    to prove the lemma",
    ", we construct a standard solution for @xmath87 based on the solution for @xmath86 .",
    "this proof , and subsequent proofs , argues about all possible ways to connect the vertices in a switch of @xmath87 .",
    "the most efficient ones are shown in fig .  [",
    "fig : cases ] ; these may appear in an optimal solution .",
    "refer to fig .",
    "[ fig : switch ] in the appendix for a full list .",
    "[ lem : existance ] if @xmath87 is a positive instance of min-3csg , there exists a standard solution for this instance .    before proving the other direction of the reduction , we show some properties of a standard solution .",
    "the active points in a switch impose some local constraints .",
    "the black and purple points attached to horizontal dashed lines determine the _ switch constraint _ : since these points have more colors than their incident dashed lines , they each are incident to at least one edge in the switch .",
    "each rib determines a _ rib constraint _ to a pair of switches that contain its endpoints : at least one of these switches must contain an edge between its black active points or else there is no yellow path between this rib and the cage .",
    "the following lemmas establish some bounds on the length of the edges used to satisfy local constraints of a pair of switches adjacent to a rib .",
    "we refer to this pair as a @xmath111-pair or @xmath93-pair according to the type of the switch .",
    "[ lem : min ] in a standard solution , the minimum length required to satisfy the local constraints of a 2-pair ( resp . , @xmath93-pair ) is @xmath112 ( resp . , @xmath113 ) .",
    "[ cor:2-pair ] in a standard solution , every 2-pair is connected minimally .",
    "[ lem : clause ] in a standard solution , for each clause gadget , there exists a @xmath93-pair with local cost at least @xmath114 .",
    "[ cor : clause ] in a standard solution , for each clause gadget , there exists a @xmath93-pair connected as fig .",
    "[ fig : cases](c ) .",
    "all other @xmath93-pairs are connected minimally as shown in fig .",
    "[ fig : cases](b ) .",
    "[ lem : csg2sat ] let @xmath87 be a positive instance of min-3csg . then @xmath86 is a positive instance of planar - monotone-3sat .",
    "the following theorem is a direct consequence of lemmata  [ lem : np ] , [ lem : sat2csg ] , and [ lem : csg2sat ] .",
    "min-@xmath1csg is np - complete for @xmath115 .",
    "hurtado et al .  @xcite gave an approximation algorithm for min-@xmath1csg that runs in @xmath11 time and achieves a ratio of @xmath116 , where @xmath5 is the steiner ratio .",
    "the value of @xmath5 is not known and the current best upper bound is @xmath117 by chung and graham  @xcite ( gilbert and pollack  @xcite conjectured @xmath118 ) . for the special case @xmath4 , the previous best approximation ratio is @xmath119 .",
    "we improve the approximation ratio to 2 , and then further to 1.81 .",
    "our first algorithm immediately generalises to @xmath120 , and yields an @xmath121-approximation , improving on the general result by hurtado et al . ; our second algorithm also generalizes to @xmath122 , however , we do not know whether it achieves a good ratio .",
    "suppose we are given an instance of min-3csg defined by @xmath40 where @xmath123 and the set of primary colors is @xmath124`r , b , y`@xmath125 .",
    "we define @xmath126 where @xmath127 .",
    "let @xmath128 be an optimal solution for min-3csg , and put @xmath129 .",
    "algorithm a1 computes a minimum red - blue - purple graph @xmath130 in @xmath16 time , where @xmath131 by corollary  [ cor : m6 ] ; then computes a minimum spanning tree @xmath132 of @xmath133 , and returns the union @xmath134 .",
    "since @xmath128 contains a red , a blue , and a yellow spanning tree , we have @xmath135 and @xmath136 ; that is , algorithm a1 returns a solution to min-3csg whose length is at most @xmath137 .",
    "algorithm a1 returns a 2-approximation for min-3csg ; it runs in @xmath16 time on @xmath0 points , @xmath13 of which are multi - chromatic .",
    "algorithm a1 can be extended to @xmath1 colors by partitioning the primary colors into @xmath138 groups of at most two and computing the minimum csg for each group .",
    "the union of these graphs is a @xmath138-approximation that can be computed in @xmath139 time .",
    "algorithm a2 computes six solutions for a given instance of min-3csg , @xmath140 , and returns one with minimum weight .",
    "graph @xmath141 is the union of @xmath142 and @xmath132 defined above .",
    "graphs @xmath143 and @xmath144 are defined analogously : @xmath145 and @xmath146 , each of which can be computed in @xmath9 time by  @xcite .",
    "let @xmath147 be the set of `` black '' points that have all three colors , and let @xmath148 be an mst of @xmath149 , which can be computed in @xmath11 time .",
    "we augment @xmath148 into a solution of min-3csg in three different ways as follows .",
    "first , let @xmath150 be the minimum forest such that @xmath151 is a minimum red - blue - purple spanning graph on @xmath152 .",
    "@xmath150 can be computed in @xmath16 time by the same matroid intersection algorithm as in corollary  [ cor : m6 ] , by setting the weight of any edge between components containing black points to zero .",
    "similarly , let @xmath153 be the minimum forest such that @xmath154 is a spanning tree on @xmath133 , which can be computed in @xmath11 time by prim s algorithm .",
    "now we let @xmath155 .",
    "similarly , let @xmath156 and @xmath157 .",
    "algorithm a2 returns a @xmath3-approximation for min-3csg ; it runs in @xmath16 time on an input of @xmath0 points , @xmath13 of which are multi - chromatic .",
    "consider an instance @xmath40 of min-3csg , and let @xmath158 be an optimal solution with @xmath159 .",
    "partition @xmath160 into @xmath161 subsets : for every color @xmath162 , let @xmath163 , that is @xmath164 is the set of edges of color @xmath165 in @xmath128 . put @xmath166 .",
    "then we have @xmath167 . without loss of generality",
    ", we may assume @xmath168 .",
    "first , consider @xmath169 .",
    "the edges of @xmath128 whose colors include red or blue ( resp .",
    ", yellow ) form a connected graph on @xmath152 ( resp .",
    ", @xmath170 .",
    "consequently , @xmath171 the combination of and yields @xmath172    next , consider @xmath155 .",
    "the edges of @xmath128 whose colors include yellow contain a spanning tree on @xmath133 , hence a steiner tree on the black points @xmath149 . specifically , the black edges in @xmath173 form a black spanning forest , which is completed to a steiner tree by some of the edges of @xmath174 .",
    "this implies @xmath175 since @xmath148 is a spanning tree on the black vertices @xmath176 , and reduce to @xmath177 the combination of and yields @xmath178 therefore , @xmath179    if we set @xmath180 , then both and give the same upper bound @xmath181 where we used the current best upper bound for the steiner ratio @xmath117 from  @xcite .",
    "in this section we consider instances of min-@xmath1csg , @xmath40 , where @xmath14 and @xmath72 consists of collinear points .",
    "an example is shown in fig .  [",
    "fig : example-1d ] . without loss of generality ,",
    "@xmath182 and the points @xmath183 , @xmath184 , lie on the @xmath88-axis sorted by @xmath88-coordinates .",
    "we present a dynamic programming algorithm that solves min-@xmath1csg in @xmath18 time .",
    "our first observation is that if the points in @xmath72 are collinear , we may assume that every edge satisfies the following property .    _",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ if @xmath185 , @xmath186 , is an edge , then there is no @xmath95 , @xmath187 , such that @xmath188 . (",
    "@xmath189 ) _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    [ lem : unique - color ] for every graph @xmath31 , there exists a graph @xmath190 of the same cost that satisfies ( @xmath189 ) and for each color @xmath191 , every component of @xmath41 is contained in some component of @xmath54 . in particular , min-@xmath1csg has a solution with property ( @xmath189 ) .",
    "let @xmath31 be a graph , and let @xmath192 denote the set of triples @xmath193 such that @xmath194 , @xmath30 , and @xmath195 .",
    "if @xmath196 , then @xmath197 satisfies ( @xmath189 )",
    ". suppose @xmath198 .",
    "for every triple @xmath199 , successively , replace the edge @xmath200 by two edges @xmath201 and @xmath202 ( i.e. , subdivide edge @xmath203 at @xmath204 ) .",
    "note that @xmath205 , consequently @xmath183 and @xmath206 remain in the same component for each primary color @xmath207 .",
    "each step maintains the total edge length of the graph and strictly decreases @xmath192 .",
    "after @xmath208 subdivision steps , we obtain a graph @xmath190 as required .    in the remainder of this section",
    "we assume that every edge has property ( @xmath189 ) .",
    "furthermore , all graphs considered in this section are defined on an interval of consecutive vertices of @xmath72 .",
    "[ cor : unique - edge ] let @xmath31 be a graph and let @xmath209 .    1 .",
    "[ cor : unique ] if @xmath210 is an edge between @xmath211 and @xmath212 and @xmath213 , then the endpoints of @xmath44 are uniquely determined .",
    "specifically , if @xmath214 with @xmath215 , then @xmath216 is the largest index such that @xmath217 , and @xmath218 is the smallest index such that @xmath219 .",
    "[ cor : overlap ] if two edges @xmath220 overlap , then @xmath221 .",
    "suppose , to the contrary , that there is index @xmath222 , @xmath223 , such that @xmath224 .",
    "then edge @xmath185 and point @xmath204 violate ( @xmath189 ) .",
    "the case that there is some @xmath222 , @xmath225 , leads to the same contradiction .    without loss of generality",
    "@xmath226 and @xmath227 with @xmath228",
    ". then both edges @xmath229 and @xmath230 are between @xmath211 and @xmath231 , contradicting part  .",
    "the basis for our dynamic programming algorithm is that min-@xmath1csg has the _ optimal substructure _ and _ overlapping substructures _ properties when the points in @xmath72 are collinear .",
    "we introduce some notation for defining the subproblems . for indices",
    "@xmath232 , let @xmath233=\\{p_a,\\ldots , p_b\\}$ ] . for every graph @xmath31 and index @xmath234 ,",
    "we partition the edge set @xmath80 into three subsets as follows : let @xmath235 be the set of edges induced by @xmath236 $ ] , @xmath237 the set of edges induced by @xmath238 $ ] , and @xmath239 the set of edges between @xmath236 $ ] and @xmath238 $ ] . with this notation , min-@xmath1csg has the following optimal substructure property .",
    "[ lem : opt - subproblem ] let @xmath31 be a minimum csg , @xmath209 , and @xmath240 be the family of edge sets @xmath241 on @xmath236 $ ] such that @xmath242 is a csg .",
    "then @xmath242 is a minimum csg iff @xmath243 has minimum cost .",
    "if @xmath242 is a minimum csg , but some @xmath244 costs less than @xmath235 , then @xmath245 would be a csg that costs less than @xmath31 , contradicting the minimality of @xmath242 .",
    "if @xmath243 has minimum cost , but @xmath31 costs less than @xmath242 , then @xmath246 would costs less than @xmath241 , contradicting the minimality of @xmath243 .",
    "lemma  [ lem : opt - subproblem ] immediately suggests a nave algorithm for min-@xmath1csg : guess the edge set @xmath247 of a minimum csg @xmath31 , and compute a minimum - cost set @xmath241 on @xmath236 $ ] such that @xmath248 is a csg .",
    "however , all possible edge sets @xmath247 could generate @xmath249 subproblems .",
    "we reduce the number of subproblems using the overlapping subproblem property . instead of guessing @xmath247",
    ", it is enough to guess the information relevant for finding the minimal cost @xmath241 on @xmath236 $ ] .",
    "first , the edges in @xmath239 can be uniquely determined by the set of their colors ( using corollary  [ cor : unique - edge ] ) .",
    "second , the only useful information from @xmath237 is to tell which points in @xmath236 $ ] are adjacent to the same component of @xmath250_c,(e_i^+)_c)$ ] , for each primary color @xmath33 .",
    "this information can be summarized by @xmath1 equivalence relations on the sets @xmath251 .",
    "we continue with the details .",
    "we can encode @xmath239 by the set of its colors @xmath252 . for @xmath209 , a set of edges @xmath253 between",
    "@xmath236 $ ] and @xmath238 $ ] is _ valid _ if there exists a csg @xmath31 such that @xmath254 .",
    "[ lem : valid ] for @xmath209 , an edge set @xmath253 between @xmath236 $ ] and @xmath238 $ ] is _ valid _ iff for every primary color @xmath191 , there is an edge @xmath255 such that @xmath256 whenever both @xmath236_c$ ] and @xmath238_c$ ] are nonempty .",
    "we encode the relevant information from @xmath237 using @xmath1 equivalence relations as follows .",
    "for every @xmath257 , the components of @xmath250_c,(e_i^+)_c)$ ] define an equivalence relation on @xmath258 , which we denote by @xmath259 : two edges in @xmath258 are related iff they are incident to the same component of @xmath250_c,(e_i^+)_c)$ ] .",
    "let @xmath260 .",
    "the equivalence relation @xmath259 , in turn , determines a graph @xmath261_c , e(\\pi_i^c))$ ] : two distinct vertices in @xmath236_c$ ] are adjacent iff they are incident to equivalent edges in @xmath258 ( that is , two distinct vertices in @xmath236_c$ ] are adjacent iff they both are adjacent to the same component of @xmath250_c,(e_i^+)_c)$ ] ) . see fig .",
    "[ fig : collinear ] for examples of @xmath262 and @xmath263 .",
    "the condition that @xmath248 is a csg can now be formulated in terms of @xmath239 and @xmath263 ( without using @xmath237 directly ) .",
    "[ lem : halves ] let @xmath31 be a csg , @xmath264 , and @xmath241 an edge set on @xmath236 $ ] .",
    "the graph @xmath248 is a csg iff the graph @xmath261_c,(x_i^-)_c\\cup e(\\pi_i^c))$ ] is connected for every @xmath265 .",
    "we can now define subproblems for min-@xmath1csg . for an index @xmath209 , a valid set @xmath239 , and equivalence relations @xmath266 ,",
    "let @xmath267 be the family of edge sets @xmath241 on @xmath236 $ ] such that for every @xmath265 , the graph @xmath261_c,(x_i^-)_c\\cup e(\\pi_i^c))$ ] is connected .",
    "the subproblem * * a**@xmath268 $ ] is to find the minimum cost of an edge set @xmath269 .",
    "note that for @xmath270 , * * a**@xmath271 $ ] is the minimum cost of a csg for an instance @xmath40 of @xmath272 .",
    "next , we establish a recurrence relation for * * a**@xmath273 $ ] , which will allow computing * * a**@xmath271 $ ] by dynamic programming . for @xmath274",
    ", we have * * a**@xmath275=0 $ ] for any valid @xmath276 and @xmath277 . for all @xmath278 , @xmath279",
    ", we wish to express * * a**@xmath268 $ ] in terms of * * a**@xmath280 $ ] s for suitable @xmath281 and @xmath282 .",
    "we say that two valid edge sets @xmath281 and",
    "@xmath239 are _ compatible _ if there exists an @xmath269 for some @xmath263 such that @xmath283 . we can characterize compatible edge sets as follows .",
    "[ lem : compatible ] two valid edge sets @xmath281 and @xmath239 are compatible iff every edge @xmath44 in the symmetric difference of @xmath281 and @xmath239 is incident to @xmath183 .",
    "for two valid compatible edge sets , @xmath284 and @xmath285 , and a sequence of equivalence relations @xmath263 , we define equivalence relations @xmath286 as follows . for every primary color @xmath191 ,",
    "let the equivalence relation @xmath287 on @xmath288 be the transitive closure of the union of four equivalence relations : two edges in @xmath288 are related if ( 1 ) they both incident to @xmath183 ; ( 2 ) they both are in @xmath258 and @xmath259-equivalent ; ( 3 ) they are both in @xmath258 and each are equivalent to some edge in @xmath258 that are @xmath259-equivalent ; ( 4 ) one is incident to @xmath183 and the other is in @xmath258 and @xmath259-equivalent to some edge in @xmath258 incident to @xmath259 .",
    "[ lem : part ] let @xmath281 and @xmath239 be two valid compatible edge sets , and @xmath289 .",
    "let @xmath290 be a set of edges on @xmath291 $ ] , and put @xmath292 .",
    "then , @xmath293 has the following property : @xmath294 if and only if    1 .",
    "@xmath295 ; and 2 .   if @xmath296 and @xmath236_c\\neq \\{p_i\\}$ ] , then @xmath183 is incident to an edge in @xmath288 or an edge in @xmath258 that is @xmath259-equivalent to some edge incident to @xmath291_c$ ] .",
    "[ lem : colcur ] for all @xmath297 , we have the following recurrence : @xmath298=\\sum_{\\{p_h , p_i\\}\\in e^0_i}w(\\{p_h , p_i\\ } )          + \\min_{e_{i-1}^0\\text{\\rm compatible } } \\textbf{a}[i-1 , e_{i-1}^0 , \\widehat{\\pi}_{i-1 } ] .\\ ] ]    [ thm : collinear - alg ] for every constant @xmath299 , min-@xmath1csg can be solved in @xmath6 time when the input points are collinear .",
    "we determine the number of subproblems . by corollary  [ cor : unique - edge ]",
    ", every valid @xmath239 contains at most @xmath300 edges .",
    "we have @xmath301 , since @xmath302 different colors contain any primary color @xmath83 .",
    "the number of equivalence relations of a set of size @xmath303 is known as the @xmath303-th _ bell number _ , denoted @xmath304 .",
    "it is known  @xcite that @xmath305 .",
    "consequently , the number of possible @xmath263 is at most @xmath306 .",
    "the total number of subproblems is @xmath307 , which is @xmath6 for any constant @xmath1 .",
    "we solve the subproblems * * a**@xmath268 $ ] , @xmath279 , by dynamic programming , using the recursive formula .",
    "the time required to evaluate   is @xmath308 for the sum of edge weights and @xmath309 to compare all compatible subproblems * * a**@xmath310 $ ] , that is , @xmath311 time when @xmath1 is a constant .",
    "therefore , the dynamic programming can be implemented in @xmath6 time .",
    "we have shown that min-3csg is np - complete in general and given a @xmath6 time algorithm for min-@xmath1csg in the special case that all points are collinear and @xmath1 is a constant .",
    "we also improved the approximation factor of a polynomial time algorithm from @xmath312  @xcite to @xmath15 when @xmath4 .",
    "it remains open whether there exists a ptas for min-@xmath1csg , @xmath2 .",
    "several other special cases are open for min-3csg , such as when the points in @xmath72 are on a circle or in convex position .",
    "we can generalize min-@xmath1csg so that the edge weights need not be euclidean distances .",
    "given an arbitrary graph @xmath313 and a coloring @xmath314 , what is the minimum set @xmath315 such that @xmath316 is a colored spanning graph ?",
    "since the 2-approximation algorithm presented here did not rely on the geometry of the problem , it extends to the generalization ; however , this problem may be harder to approximate than its euclidean counterpart .",
    "* acknowledgements .",
    "* research on this paper was supported in part by the nsf awards ccf-1422311 and ccf-1423615 .",
    "akitaya was supported by the science without borders program .",
    "lffler was partially supported by the netherlands organisation for scientific research ( nwo ) projects 639.021.123 and 614.001.504 .    1 b.  alper , n.  henry  riche , g.  ramos , and m.  czerwinski , design study of linesets , a novel set visualization technique , _ ieee trans . vis . comput",
    ". graphics _ , 17(12):22592267 , 2011 .",
    "b.  alsallakh , l.  micallef , w.  aigner , h.  hauser , s.  miksch , and p.  rodgers , visualizing sets and set - typed data : state - of - the - art and future challenges , in _ proc .",
    "eurographics conf .",
    "visualization ( eurovis ) _ , pp .  121 , 2014 .",
    "d.  berend and t.  tassa , improved bounds on bell numbers and on moments of sums of random variables , _ prob .",
    "_ 30(2):185205 , 2010 .",
    "m.  de berg and a.  khosravi .",
    "optimal binary space partitions for segments in the plane .",
    "j. comput .",
    "_ , 22(3):187206 , 2012 .",
    "a. biniaz , p. bose , i. van duijn , a. maheshwari , and m. smid .",
    "a faster algorithm for the minimum red - blue - purple spanning graph problem for points on a circle . in _ proc .",
    "28th canadian conf .",
    "( vancouver , bc ) _ , pages 140146 , 2016 .    f. chung and r.",
    "graham , a new bound for euclidean steiner minimum trees , _ ann .",
    "_ , 440:328346 , 1986 .",
    "k. dinkla , m.  j. van kreveld , b. speckmann , and m.  a. westenberg .",
    "kelp diagrams : point set membership visualization .",
    "_ computer graphics forum _",
    ", 31(3):875884 , 2012 .    e. gilbert and h. pollak .",
    "steiner minimal trees .",
    "_ siam j. appl .",
    "_ , 16:129 , 1968 .",
    "f. hurtado , m. korman , m.  j. van kreveld , m. lffler , v. s. adinolfi , r. i. silveira , and b. speckmann .",
    "colored spanning graphs for set visualization .",
    "in s.  wismath and a.  wolff ( eds . ) , _ proc .",
    "21st sympos .",
    "graph drawing _ , pp .  280291 , lncs , vol .  8242 , springer , cham , 2013 .",
    "f.  hurtado , m.  korman , m.  van kreveld , m.  lffler , v.  sacristan , a.  shioura , r.  i. silveira , b.  speckmann , and t.  tokuyama , colored spanning graphs for set visualization .",
    "preprint , arxiv:1603.00580 , 2016 .",
    "w. meulemans , n. henry riche , b. speckmann , b. alper , and t. dwyer .",
    "kelpfusion : a hybrid set visualization technique .",
    "_ ieee trans .",
    "graphics _ , 19(11):18461858 , 2013 .",
    "we construct a standard solution for @xmath87 based on the solution for @xmath86 .",
    "first connect all points along each dashed line using @xmath317 length . if a variable is set to ` true ` in @xmath86 ,",
    "connect the active points of all 2-switches of the corresponding variable gadget as shown in fig .",
    "[ fig : switch](a ) . otherwise connect them as the reflection of fig .",
    "[ fig : switch](a ) about the @xmath88-axis . the length of these edges sum to @xmath318 . for each positive ( resp . , negative ) clause , choose an arbitrary neighbor variable assigned ` true `",
    "` false ` ) and connect the active points in the @xmath93-switch as is shown in fig .",
    "[ fig : switch](d ) ( resp . , reflection of fig .",
    "[ fig : switch](d ) ) . the length of such edges sum to @xmath319 .",
    "connect all remaining @xmath93-switches as shown in figs .",
    "[ fig : switch](c ) ( or its reflection ) depending on the assignment of the neighbor switch . the length of such edges sum to @xmath320 .",
    "the resulting graph is a colored spanning graph and its total weight is @xmath321 .",
    "by lemma  [ lem : monocrhomatic ] , if @xmath87 is a positive instance of min-3csg , there exists a solution containing @xmath94 .",
    "we consider only such solutions .",
    "suppose that there exists an edge @xmath322 such that @xmath323 , and @xmath324 or @xmath325 is not an active point .",
    "since only active points are multi - chromatic , @xmath44 is necessarily monochromatic , therefore , its removal can only affect the connectivity of the color @xmath104 , where @xmath326 , disconnecting the induced graph into two connected components .",
    "since this solution includes @xmath94 , by property ( i ) there exists an edge of length @xmath91 that reconnects the components or there exists an edge @xmath327 such that @xmath328 . in both cases ,",
    "@xmath44 can be replaced by such an edge , obtaining a lighter solution .",
    "it remains to consider the case that @xmath324 and",
    "@xmath325 are active points , but in different switches . in that case , @xmath329 by construction . the deletion of @xmath330 may disconnect up to three graphs induced by primary colors . for each primary color @xmath104 ,",
    "the two components are either @xmath91 apart or there exists a switch that contains active points belonging to both components , by property ( i ) .",
    "hence , replacing @xmath330 by at most three edges , each of length at most 2 , produces a solution of equal or smaller cost .          to satisfy the rib constraint ,",
    "assume without loss of generality that the upper switch contain a black edge .",
    "since the switch constraints of the pair still require at least two more edges , the solution must have at least three edges .",
    "we can enumerate all possible local solutions that satisfy the switch constraints using a total of three edges ( fig .",
    "[ fig : switch](a ) and ( b ) ) . notice that every edge in the switch is @xmath111 or @xmath331 long ( @xmath93 or @xmath332 for @xmath93-pairs ) .",
    "therefore , all possible solutions that use four edges have a greater cost than the ones using three edges .",
    "then , the local solution with minimum cost must be as shown in fig .",
    "[ fig : switch](a ) .",
    "notice that this lower bound continues to hold in the presence of an active point of a clause .",
    "however , if an active point of a clause is part of a switch , the local solution with minimum cost is no longer unique ; fig .",
    "[ fig : switch](c ) shows all solutions in that case .      for contradiction ,",
    "suppose that there exists a 2-pair whose local cost is at least @xmath333 ( the second minimum is depicted in fig .",
    "[ fig : switch](b ) ) .",
    "then , by lemma  [ lem : min ] the cost of such a solution must be at least @xmath334 $ ] which is greater than @xmath321 because @xmath335 and by the choice of @xmath91 and @xmath92 .",
    "each clause gadget requires at least a blue path between one of its active points and the spine , or else the subgraph induced by @xmath336 is disconnected .",
    "consider the @xmath93-pair that contains an edge in such a path .",
    "we can enumerate all local solutions that satisfy the local constraints and contain a blue path between the clause active point and the spine and that uses 4 edges in the @xmath93-pair ( fig .",
    "[ fig : switch](d)(g ) ) . by corollary  [ cor:2-pair ]",
    ", we consider only solutions in which @xmath111-pairs are minimally connected .",
    "notice that removing any of the edges violates some local constraint , hence , at least 4 edges are required .",
    "also notice that every local solution that uses 5 or more edges have cost @xmath337 or greater .",
    "the local solutions with minimum cost are shown in figs .",
    "[ fig : switch](d ) and ( e ) and their cost is @xmath114 .",
    "cor : clause in a standard solution , for each clause gadget , there exists a @xmath93-pair connected as fig .  [",
    "fig : switch](d ) .",
    "all other @xmath93-pairs are connected minimally as shown in fig .",
    "[ fig : switch](c ) .    by lemma  [ lem :",
    "clause ] , the lower bound for the cost of @xmath13 of the @xmath93-pairs is @xmath319 .",
    "for contradiction , suppose that one of the @xmath93-pairs uses more length than its lower bound .",
    "the second minimal configuration on the switches occurs when @xmath13 distinct @xmath93-pairs are connected using @xmath319 length , @xmath338 of the remaining @xmath93-pairs are connected using @xmath339 , and the remaining @xmath93 pair uses @xmath114 .",
    "this construction costs at least @xmath340 which is greater than @xmath321 by the choice of @xmath91 and @xmath92 .",
    "hence , @xmath341 of the @xmath93-pairs have to be connected as shown in fig .  [",
    "fig : switch](c ) and @xmath13 of them have to be connected as in fig .  [",
    "fig : switch](d ) and ( e ) . however , if one of these @xmath93-pairs is connected as fig .  [ fig : switch](e )",
    ", then there exists no local red path between the corresponding clause gadget and the spine .",
    "if we assume that such a path passes through a different switch , it must be part of a minimally connected @xmath93-pair , since we can only afford any @xmath93-pair with @xmath114 cost per clause .",
    "the only option would be to use the edges shown in fig .",
    "[ fig : conter - expamples](d ) , which is impossible because then the graph induced by @xmath342 would be disconnected ( notice that in fig .  [ fig : conter - expamples](d ) there exists a red component in the bottom that is not connected to the spine ) .",
    "hence , all @xmath13 these @xmath93-pairs must be as shown in fig .",
    "[ fig : switch](d ) .",
    "we say that a 2-pair is set to ` true ` if its upper switch contains a black edge and is set to ` false ` otherwise .",
    "first we show that every @xmath111-pair of the same variable gadget is set to the same value . for contradiction",
    "assume that two consecutive 2-pairs are set to different truth values .",
    "[ fig : conter - expamples ] shows all possible configurations that satisfy corollaries  [ cor:2-pair ] and [ cor : clause ] . as already stated in the proof of corollary  [ cor : clause ] , the local configuration in fig .",
    "[ fig : conter - expamples](d ) is excluded .",
    "the configurations in figs .",
    "[ fig : conter - expamples](a ) and ( c ) lead to a red induced component on the top and bottom part of the construction , respectively , hence @xmath342 would induce a disconnected graph . the configuration in fig .",
    "[ fig : conter - expamples](b ) would also imply that @xmath342 induces a disconnected graph , since there would not be any red induced path between the corresponding clause and the spine .",
    "we conclude that any standard solution is similar to the one described in the proof of lemma  [ lem : sat2csg ] .",
    "then , we can easily assign a truth value from @xmath343 to every variable , obtaining a solution for the planar - monotone-3sat .",
    "lem : valid for @xmath209 , an edge set @xmath253 between @xmath236 $ ] and @xmath238 $ ] is _ valid _ iff for every primary color @xmath191 , there is an edge @xmath255 such that @xmath256 whenever both @xmath236_c$ ] and @xmath238_c$ ] are nonempty .",
    "let @xmath31 be a csg with property ( @xmath189 ) .",
    "then for every @xmath45 , the graph @xmath41 is connected .",
    "if both @xmath236_c$ ] and @xmath238_c$ ] are nonempty , there is an edge @xmath344 , hence @xmath256 .",
    "conversely , assume every edge in @xmath253 has property ( @xmath189 ) . let @xmath235 ( resp . ,",
    "@xmath237 ) be the set of all edges on @xmath236 $ ] ( resp . , @xmath238 $ ] ) with property ( @xmath189 ) . by lemma  [ lem : unique - color ] , @xmath261_c,(e_i^-)_c)$ ] and @xmath250)c,(e_i^+)_c)$ ] have the same components as the compete graph in each primary color @xmath24 .",
    "then @xmath258 contains at least one edge between @xmath236_c$ ] and @xmath238_c$ ] if both are nonempty .",
    "consequently , @xmath345 is a csg for @xmath72 , as required .",
    "lem : halves let @xmath31 be a csg , @xmath264 , and @xmath241 an edge set on @xmath236 $ ] .",
    "the graph @xmath248 is a csg iff the graph @xmath261_c,(x_i^-)_c\\cup e(\\pi_i^c))$ ] is connected for every @xmath265 .",
    "let @xmath265 .",
    "we claim that @xmath346 is connected iff @xmath261_c,(e_i^-)_c\\cup e(\\pi_i^c))$ ] is connected . if @xmath236_c=\\emptyset$ ] , then @xmath347_c,(x_i^-)_c)$ ] . if @xmath238_c=\\emptyset$ ] , then @xmath348_c,(e_i^+)_c)$ ] . in both cases ,",
    "the claim follows .",
    "assume that neither @xmath236_c$ ] nor @xmath238_c$ ] is empty .",
    "since @xmath197 is a csg , then @xmath41 is connected , and so each component of @xmath250_c,(e_i^+)_c)$ ] is incident to some edge in @xmath258 that has an endpoint @xmath236_c$ ] .",
    "consequently , each component of @xmath346 has a vertex in @xmath236_c$ ] .",
    "therefore @xmath346 is connected iff it contains a path between any two vertices of @xmath236_c$ ] .",
    "two vertices in @xmath236_c$ ] are connected by a path in @xmath349 iff they are adjacent along an edge in @xmath350 .",
    "consequently , there is a path between any two vertices in @xmath236_c$ ] iff they are in the same component of @xmath261_c,(e_i^-)_c\\cup e(\\pi_i^c))$ ] , as required .",
    "assume that @xmath281 is compatible with @xmath239 , witnessed by some @xmath269 .",
    "property ( @xmath189 ) implies that the left endpoint of an edge @xmath351 is @xmath183 iff @xmath352 .",
    "similarly , the right endpoint of an edge in @xmath281 is @xmath183 iff @xmath353 .",
    "conversely , assume every edge @xmath44 in the symmetric difference of @xmath281 and @xmath239 is a incident to @xmath183 .",
    "let @xmath290 be the set of all edges on @xmath354 $ ] with property ( @xmath189 ) ; and let @xmath355 .",
    "define @xmath263 such that all members of @xmath258 are @xmath259 equivalent for every @xmath191 . by lemma  [ lem : unique - color ] , the graph @xmath356_c,(e_{i-1}^-)_c)$ ]",
    "is connected for all primary colors @xmath33 .",
    "for every color @xmath357 , we have @xmath236_c = s[1,i-1]_c$ ] and so @xmath261_c,(x_i^-)_c\\cup e(\\pi_i^c))$ ] is connected .",
    "let @xmath296 . if @xmath236_c=\\{p_i\\}$ ] , then @xmath261_c,\\emptyset)$ ] is clearly connected .",
    "otherwise , @xmath183 is incident to an edge in @xmath288 or @xmath258 , by lemma  [ lem : valid ] .",
    "if @xmath183 is incident to an edge in @xmath288 , then it is adjacent a vertex in @xmath291_c$ ] .",
    "otherwise @xmath183 is incident to some @xmath358 , consequently @xmath238_c\\neq\\emptyset$ ] . by lemma  [ lem : valid ]",
    ", there is some @xmath359 between @xmath291_c$ ] and @xmath238_c$ ] . by construction , @xmath229 and @xmath230",
    "are @xmath259-equivalent , and so @xmath261_c,(x_i^-)_c\\cup e(\\pi_i^c))$ ] is connected , as required .",
    "lem : part let @xmath281 and @xmath239 be two valid compatible edge sets , and @xmath289 .",
    "let @xmath290 be a set of edges on @xmath291 $ ] , and put @xmath292 .",
    "then , @xmath293 has the following property : @xmath294 if and only if    1 .",
    "@xmath295 ; and 2 .   if @xmath296 and @xmath236_c\\neq \\{p_i\\}$ ] , then @xmath183 is incident to an edge in @xmath288 or an edge in @xmath258 that is @xmath259-equivalent to some edge incident to @xmath291_c$ ] .",
    "assume @xmath294 .",
    "then the graph @xmath261_c,(e_i^-)_c\\cup e(\\pi_i^c))$ ] is connected for every @xmath191 , however , its induced subgraph on @xmath291_c$ ] may have two or more components . between any two such components ,",
    "there is a path in @xmath360 , where @xmath361 is the set of edges whose right endpoint is @xmath183 .",
    "the first and last edge of any such path is @xmath287-equivalent by the definition of @xmath362 .",
    "consequently , @xmath295 , and ( * d1 * ) follows . for every @xmath296 , if @xmath291_c\\neq \\{p_{i-1}\\}$ ] , then @xmath183 is incident to some edge in @xmath363 by ( * d1 * ) , which implies ( * d2 * ) .",
    "conversely , assume ( * d1 * ) and ( * d2 * ) .",
    "since @xmath364 , then the graph @xmath261_c,(e_{i-1}^-)_c\\cup e(\\hat{\\pi}_{i-1}^c))$ ] is connected for every @xmath191 .",
    "that is , there is a path in @xmath365 between any two vertices in @xmath291_c$ ] .",
    "if we replace the edges in @xmath366 with a sequence of edges thate in @xmath367 or incident to @xmath183 ( using the definition of @xmath287 ) , there is a path in @xmath368 between any two vertices in @xmath291_c$ ] . finally , for every @xmath296 , we need to show that there is a path in @xmath368 between @xmath183 and any other vertex of @xmath236_c$ ] .",
    "this is vacuously true if @xmath183 is the only vertex of @xmath236_c$ ] .",
    "suppose that @xmath236_c\\neq \\{p_i\\}$ ] . by ( * d2 * )",
    ", @xmath183 is incident to an edge in @xmath288 or an edge in @xmath350 .",
    "consequently , @xmath294 , as required .",
    "lem : colcur for all @xmath297 , we have the following recurrence : @xmath369=\\sum_{\\{p_h , p_i\\}\\in e^0_i}w(\\{p_h , p_i\\ } )          + \\min_{e_{i-1}^0\\text{compatible } } \\textbf{a}[i-1 , e_{i-1}^0 , \\widehat{\\pi}_{i-1 } ] .\\ ] ]"
  ],
  "abstract_text": [
    "<S> we study a problem proposed by hurtado et al .  </S>",
    "<S> @xcite motivated by sparse set visualization . given @xmath0 points in the plane , each labeled with one or more primary colors , a _ colored spanning graph _ ( csg ) is a graph such that for each primary color , the vertices of that color induce a connected subgraph . </S>",
    "<S> the min - csg problem asks for the minimum sum of edge lengths in a colored spanning graph . </S>",
    "<S> we show that the problem is np - hard for @xmath1 primary colors when @xmath2 and provide a @xmath3-approximation algorithm for @xmath4 that runs in polynomial time , where @xmath5 is the steiner ratio . </S>",
    "<S> further , we give a @xmath6 time algorithm in the special case that the input points are collinear and @xmath1 is constant . </S>"
  ]
}
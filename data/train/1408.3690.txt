{
  "article_text": [
    "in a constraint satisfaction problem ( csp ) the aim is to find an assignment of values to a given set of variables , subject to specified constraints .",
    "the csp is known to be np - complete in general .",
    "however , certain restrictions on the form of the allowed constraints can lead to problems solvable in polynomial time .",
    "such restrictions are usually imposed by specifying a constraint language , that is , a set of relations that are allowed to be used as constraints .",
    "a principal research direction aims to distinguish those constraint languages that give rise to csps solvable in polynomial time from those that do not .",
    "the dichotomy conjecture @xcite suggests that every constraint language gives rise to a csp that is either solvable in polynomial time or is np - complete .",
    "the dichotomy conjecture is confirmed in a variety of particular cases @xcite , but the general problem remains open .",
    "one of the important versions of the csp is often referred to as the conservative or list csp . in a csp of this type the set of values for each individual variable",
    "can be restricted arbitrarily .",
    "restrictions of this type can be studied by considering those constraint languages which contain all possible unary constraints ; such languages are also called conservative .",
    "conservative csps have been intensively studied for languages consisting of only one binary symmetric relation , that is , graphs ; in this case csp is equivalent to the graph homomorphism problem @xcite .    in @xcite",
    "the dichotomy conjecture was confirmed for conservative csps .",
    "however , the proof given in @xcite is quite long and technical , which prompted attempts to find a simpler argument . in @xcite barto",
    "gave a simpler proof using the absorbing subuniverses techniques .",
    "in the present paper we give another , more elementary , proof that applies the reduction suggested in @xcite .    as in the majority of dichotomy",
    "results the solution algorithm and the proofs heavily use the algebraic approach to the csp developed in @xcite .",
    "this approach relates a constraint language to a collection of polymorphisms of the language , that is , operations on the same set that preserves all the relations from the language , and uses polymorphisms of specific types to identify constraint languages solvable in polynomial time . for example , to characterize csps on a 2-element set solvable in polynomial time @xcite it suffices to consider only 4 types of operations on a 2-element set : constant , semilattice ( conjunction and disjunction ) , majority ( @xmath0 ) , and affine ( @xmath1 ) .",
    "the same types of operations characterize the complexity of conservative csps , except that constant operations can not be polymorphisms of conservative languages . in a simplified form",
    "the main result we prove is    [ the : main - intro ] let @xmath2 be a constraint language on a set @xmath3 .",
    "the conservative csp using relations from @xmath2 can be solved in polynomial time if and only if for any 2-element subset @xmath4 there is an operation @xmath5 on @xmath3 , a polymorphism of @xmath2 , such that @xmath5 on @xmath6 is either a semilattice operation , or a majority operation , or an affine operation .",
    "otherwise this csp is np - complete .",
    "we give a new nearly complete proof of theorem  [ the : main - intro ] .",
    "the only statements we reuse in this paper is proposition  [ pro : uniformity ] that we borrow from @xcite and the results of setion  [ sec : maroti ] .",
    "by @xmath7 $ ] we denote the set @xmath8 .",
    "let @xmath9 be sets , any element of @xmath10 is an ( @xmath11-ary ) tuple .",
    "tuples will be denoted in boldface , say , @xmath12 , and the @xmath13th component of @xmath12 will be referred to as @xmath14 $ ] .",
    "an @xmath11-ary relation over @xmath9 is any set of tuples over these sets . for a set",
    "@xmath15 $ ] , a tuple @xmath16 , and a relation @xmath17 , by @xmath18 we denote the tuple @xmath19\\zd\\ba[i_k])$ ] , the _ projection _ of @xmath12 on @xmath20 , and @xmath21 denotes the projection of @xmath22 on @xmath20 .",
    "relation @xmath22 is said to be a _",
    "subdirect product _ of @xmath9 if @xmath23 for all @xmath24 $ ] .",
    "let @xmath25 $ ] .",
    "for @xmath26 and @xmath27-i}\\rel$ ] by @xmath28 we denote the tuple @xmath29 such that @xmath30=\\ba[i]$ ] if @xmath31 and @xmath30=\\bb[i]$ ] otherwise .",
    "let @xmath32 be a collection of finite sets ( in this paper we assume @xmath32 to be finite as well ) .",
    "a _ constraint satisfaction problem _ over @xmath32 is a triple @xmath33 , where @xmath34 is a ( finite ) set of _ variables _ , @xmath35 is a _ domain function _ , @xmath36 assigning a domain of values to every variable , and @xmath37 is a set of _",
    "every constraint is a pair @xmath38 , where @xmath39 is a sequence of variables from @xmath34 ( possibly with repetitions ) called the _ constraint scope _ , and @xmath22 is a relation over @xmath40 called the _",
    "constraint relation_. a mapping @xmath41 that maps every variable @xmath42 to its domain @xmath43 is called a _ solution _ if for every @xmath44 we have @xmath45 .",
    "let @xmath46 .",
    "a _ partial solution _ of @xmath47 on @xmath48 is a mapping @xmath49 such that for every constraint @xmath44 , @xmath39 , we have @xmath50 , where @xmath51 is the set of indices @xmath52 from @xmath53 $ ] such that @xmath54 , and @xmath55 .",
    "the set of all partial solutions on set @xmath48 is denoted by @xmath56 .",
    "problem @xmath47 is said to be _",
    "3-minimal _ if it contains a constraint @xmath57 for every 3-element @xmath46 , and for any @xmath58 such that @xmath59 and @xmath60 , @xmath61 .",
    "there are standard polynomial time _ propagation",
    "_ algorithms ( see , e.g.  @xcite ) to convert any csp to an equivalent , that is , having the same solutions , 3-minimal csp .",
    "an introduction into universal algebra and the algebraic approach to csp can be found in @xcite .",
    "here we only mention several key points . for an algebra",
    "@xmath62 its universe will be denoted by @xmath3 .",
    "let @xmath32 be a finite collection of finite similar algebras .",
    "for a basic or term operation @xmath5 of the class @xmath32 by @xmath63 , @xmath64 , we denote the interpretation of @xmath5 in @xmath62 .",
    "let @xmath65 .",
    "a relation @xmath66 is a _",
    "subalgebra _ of the direct product @xmath67 , denoted @xmath68 , if for any basic operation @xmath5 ( say , it is @xmath11-ary ) of @xmath32 and any @xmath69 the tuple @xmath70\\zd \\ba_n[1])\\zd f^{\\za_k}(\\ba_1[k]\\zd\\ba_n[k]))$ ] belongs to @xmath22 . in this case",
    "@xmath5 is also said to be a _ polymorphism _ of @xmath22 .    by @xmath71",
    "we denote the class of csp problems @xmath72 such that @xmath43 is the universe of one of the members of @xmath32 , and every constraint relation is a subalgebra of the direct product of the domain algebras . in this paper",
    "we assume that the algebras from @xmath32 satisfy certain requirements .",
    "an algebra is said to be _ conservative _ if every subset of its universe is a subalgebra .",
    "we only consider classes of conservative algebras . also , the class @xmath32 will be assumed to be closed under subalgeras .",
    "that is , if @xmath64 then every subalgebra of @xmath62 also belongs to @xmath32 .",
    "by @xcite , for any finite @xmath32 the problem @xmath71 has the same complexity as @xmath73 , where @xmath73 is obtained from @xmath32 by adding all the subalgebras of algebras from @xmath32 .",
    "a _ unary polynomial _ of an algebra @xmath62 is a mapping @xmath74 , for which there exists a term operation @xmath75 and elements @xmath76 such that @xmath77 .",
    "unary polynomial @xmath78 is idempotent if @xmath79 .",
    "the _ retract _ of @xmath62 via polynomial @xmath78 is the algebra @xmath80 with the universe @xmath81 , where @xmath3 is the universe of @xmath62 and term operations @xmath82 , where @xmath83 is a term operation of @xmath62 and @xmath84 for any @xmath85 .",
    "we will additionally assume that class @xmath32 is closed under retracts .",
    "this however does not impose any additional restrictions in the case of conservative algebras , since , as is easily seen , every retract of a conservative algebra is a subalgebra .    a subalgebra @xmath62 of a direct product of algebras @xmath86",
    "is said to be a _",
    "subdirect product _ if the universe of @xmath62 viewed as a relation is a subdirect product of the universes of @xmath87 .",
    "for a congruence @xmath88 of algebra @xmath62 and element @xmath89 by @xmath90 we denote the factor - algebra of @xmath62 and by @xmath91 the block of @xmath88 containing @xmath89 .      if @xmath32 is a class of conservative algebras closed under subalgebras , then every subalgebra @xmath92 of any @xmath64 belongs to @xmath32 .",
    "therefore , by @xcite , if @xmath71 is polynomial time solvable then , for any 2-element subalgebra @xmath92 of @xmath62 ( we assume @xmath93 ) , there exists a term operation @xmath94 of @xmath32 such that @xmath95 is one of the operations yielding the tractability of the csp on a 2-element set : @xmath96 is either a _ semilattice _ ( that is conjunction or disjunction ) operation , or the _ majority _ operation @xmath97 , or the _ affine _ operation @xmath98 . note that the constant operations are not in this list since @xmath2 is conservative . in @xcite it was proved that this property is also sufficient for the tractability of @xmath71 .",
    "[ the : main ] let @xmath32 be a finite class of conservative algebras .",
    "the problem @xmath71 can be solved in polynomial time if and only if for any @xmath64 and any 2-element subalgebra @xmath92 of @xmath62 there is a term operation @xmath94 of @xmath32 such that @xmath95 is either semilattice , or majority , or affine .",
    "otherwise @xmath71 is np - complete .",
    "let @xmath32 be a finite class of conservative algebras closed under subalgebras that satisfies the conditions of theorem  [ the : main ] .",
    "for every @xmath64 , we consider the graph @xmath99 , an edge - labeled digraph with vertex set @xmath3 .",
    "an edge @xmath100 exists and is labeled _ semilattice _ if there is a term operation @xmath101 of @xmath32 such that @xmath102 is a semilattice operation with @xmath103 , @xmath104 .",
    "edges @xmath105 exist and are labeled _ majority _ if neither @xmath100 nor @xmath106 is semilattice and there is a term operation @xmath101 such that @xmath102 is a majority operation .",
    "edges @xmath105 exist and are labeled _ affine _ if none of them is semilattice or majority , and there is a term operation @xmath101 such that @xmath102 is an affine operation .",
    "thus , for each pair @xmath107 , either @xmath100 or @xmath106 is an edge of @xmath99 ; if @xmath100 is a majority or affine edge then @xmath106 is also an edge with the same label ; while if @xmath100 is semilattice then the edge @xmath106 may not exist .",
    "since @xmath32 is usually fixed , we shall use @xmath108 rather than @xmath99 .",
    "the operations of the form @xmath101 can be considerably unified .",
    "[ pro : uniformity ] there are term operations @xmath109 of @xmath32 such that , for every @xmath64 and every two - element subset @xmath110 ,    * @xmath111 is a semilattice operation whenever @xmath112 is semilattice , and @xmath113 otherwise ; * @xmath114 is a majority operation if @xmath112 is majority , @xmath115 if @xmath112 is affine , and @xmath116 if @xmath112 is semilattice ; * @xmath117 is an affine operation if @xmath112 is affine , @xmath118 if @xmath112 is majority , and @xmath119 if @xmath112 is semilattice .",
    "there is also a term operation @xmath120 such that @xmath121 if @xmath112 is semilattice , @xmath122 if @xmath112 is majority , and @xmath123 if @xmath112 is affine .",
    "using proposition  [ pro : uniformity ] we may assume that all algebras in @xmath32 have only three basic operations .",
    "we will normally use @xmath124 instead of @xmath5 .",
    "operation @xmath124 acts non - symmetrically on semilattice edges .",
    "this means that every such edge @xmath125 is oriented : @xmath125 is oriented from @xmath89 to @xmath126 if @xmath127 ; in this case we also write @xmath128 .",
    "therefore @xmath108 is treated as a digraph , in which semilattice edges are oriented , while majority and affine ones are not .    for a relation @xmath129",
    "a digraph @xmath130 can be defined in a natural way : tuples @xmath131 form a semilattice edge directed from @xmath12 to @xmath132 if @xmath14=\\bb[i]$ ] or @xmath14\\bb[i]$ ] is a semilattice edge directed from @xmath14 $ ] to @xmath133 $ ] for every @xmath24 $ ] ; tuples @xmath134 form a majority edge if @xmath14=\\bb[i]$ ] or @xmath14\\bb[i]$ ] is majority for each @xmath135 $ ] ; and @xmath134 form an affine edge , if @xmath14=\\bb[i]$ ] or @xmath14\\bb[i]$ ] is affine for every @xmath24 $ ] . as is easily seen , graph @xmath130 is usually not complete , but as we shall see it inherits many properties of the graph @xmath108 of a conservative algebra @xmath62 .",
    "a sequence of vertices @xmath136 of @xmath130 is a _ path _ if every @xmath137 is either a semilattice or affine edge .",
    "[ lem : path - extension ] let @xmath129 , @xmath25 $ ] , and let @xmath136 be a path in @xmath138 .",
    "there are @xmath139-i}\\rel$ ] such that @xmath140 is a path in @xmath22 .",
    "observe that for any @xmath64 and any @xmath141 , the edge @xmath142 is either semilattice or affine .",
    "therefore , for any @xmath131 , the pair @xmath143 , where @xmath144 , is semilattice , while @xmath145 , where @xmath146 , is affine .    take any @xmath147-i}\\rel$ ] such that @xmath148 and define @xmath149 as follows : @xmath150 , if @xmath137 is semilattice then @xmath151 , and if @xmath137 is affine then @xmath152 .",
    "as is easily seen , @xmath149 satisfy the conditions of the lemma .",
    "a set @xmath153 is said to be _ connected _ if there is a path from every element in @xmath154 to every other element in @xmath154 .",
    "let @xmath64 be a conservative algebra .",
    "a set @xmath110 is called an _ as - component _ ( for affine - semilattice ) if for any @xmath155 and @xmath156 the edge @xmath157 is either majority or semilattice directed from @xmath126 to @xmath89 , see fig .  [",
    "fig : as - comp ] . since as - components are defined in terms of the graph @xmath108 , this definition can be naturally generalized to as - components of relations .",
    "let @xmath158 , where @xmath159 are subdirect products of conservative algebras . by @xmath160",
    "we denote the congruence of @xmath62 defined as the transitive close of the set @xmath161 .",
    "then @xmath162 denotes the congruence on @xmath92 defined in a similar way .",
    "relation @xmath22 is said to be _ linked _ if @xmath163 are total relations .",
    "[ lem : as - subdirect ] let @xmath158 , and @xmath164 be as - components of @xmath159 , respectively , such that @xmath165 . then @xmath166 is a subdirect product of @xmath164 .",
    "let @xmath167 . if @xmath168 , there are @xmath169 and @xmath170 such that @xmath171 or @xmath172 is an affine edge",
    ". take @xmath173 with @xmath174 .",
    "as is easily seen , @xmath175 , since @xmath176 , implying @xmath177 .",
    "[ lem : buket ] let @xmath158 , and let @xmath164 be as - components of @xmath159 , respectively , such that there is @xmath178 with @xmath179",
    ". then @xmath180 .    by lemma  [ lem : as - subdirect ] @xmath181 is a subdirect product of @xmath164 .",
    "therefore , if @xmath182 there are @xmath183 , @xmath184 such that @xmath185 , @xmath186 , @xmath187 or @xmath188 is affine , and @xmath189 or @xmath190 is affine .",
    "if at least one of these two edges is not affine , we have @xmath191 . if both edges are affine then @xmath192 , a contradiction .",
    "[ lem : linked - rectangularity ] let @xmath159 be subdirect products of conservative algebras and let @xmath158 be subdirect and linked .",
    "let also @xmath164 be as - components of @xmath159 , respectively , such that @xmath193",
    ". then @xmath180 .",
    "we prove by induction on the size of @xmath159 .",
    "the base case of induction , when @xmath194 or @xmath195 , is obvious .",
    "take any @xmath196 and construct a sequence of subalgebras @xmath197 such that @xmath198 if @xmath13 is odd and @xmath199 if @xmath13 is even , as follows : @xmath200 , @xmath201= \\{\\bd\\mid(\\bc,\\bd)\\in\\rel\\text { for some } \\bc\\in b_{i-1}\\}$ ] if @xmath13 is odd , and @xmath202=\\{\\bc\\mid(\\bc,\\bd)\\in\\rel \\text { for some } \\bd\\in b_{i-1}\\}$ ] otherwise . by construction for each @xmath203",
    "the relation @xmath204 ( or @xmath205 ) is linked .",
    "let @xmath206 be the maximal with @xmath207 or @xmath208 .",
    "without loss of generality we assume @xmath207 .",
    "set @xmath209 .",
    "thus there exists @xmath210 such that @xmath211 is linked and subdirect .",
    "choose a minimal subalgebra @xmath212 with this property .",
    "we show that there is @xmath213 such that @xmath214 .",
    "if there is an as - component @xmath215 of @xmath212 such that @xmath216 then @xmath217 by induction hypothesis , and the claim follows .",
    "let @xmath218 $ ] . if @xmath219 contains no elements from an as - component , there are @xmath220 and @xmath221 such that @xmath222 is a semilattice or affine edge",
    ". take @xmath223 and @xmath224 such that @xmath225 .",
    "let @xmath226 suppose @xmath227 .",
    "then for any @xmath228 $ ] the pair @xmath229\\bd[i]$ ] is a semilattice or affine edge .",
    "if there is no semilattice edge of this form then @xmath230 is an affine edge , implying @xmath231 , and @xmath232 , a contradiction .",
    "otherwise @xmath233 is a semilattice edge and @xmath234 is an affine one , hence @xmath231 , a contradiction again .",
    "let now @xmath235 be such that @xmath214 . if @xmath236 , we are done",
    ". otherwise take any @xmath237 with @xmath238\\cap b'\\ne\\eps$ ] , and set @xmath239 . as",
    "before , it is easy to see that @xmath240 .",
    "moreover , @xmath241 .",
    "let also @xmath242 $ ] .",
    "if @xmath243 , there is @xmath244 and @xmath245 such that @xmath246 is a semilattice or affine edge . then @xmath247 a contradiction .",
    "thus @xmath12 can be chosen from @xmath248 .",
    "the proof is now completed by lemma  [ lem : buket ] .    [",
    "lem : connectivity ] let @xmath129 for conservative algebras @xmath87 , and let @xmath249 be an as - component of @xmath250 for @xmath24 $ ] , such that @xmath251 for some @xmath252 , @xmath24 $ ] .",
    "then @xmath253 is a subdirect product of the @xmath249 and @xmath166 is an as - component of @xmath22 .",
    "let us first suppose that @xmath87 are simple .",
    "we prove the result by induction on @xmath11 .",
    "the trivial case @xmath254 gives the base case of induction .",
    "otherwise , we consider @xmath22 as a binary relation , a subdirect product of @xmath255}\\rel$ ] and @xmath256 .",
    "let @xmath257 , @xmath258}\\ba$ ] , @xmath259}\\bb$ ] , and @xmath260 $ ] , @xmath261 $ ] . by the induction hypothesis",
    "there is a path @xmath262 in @xmath263}\\rel'$ ] .",
    "there are two cases .",
    "if @xmath22 is linked ( as a subdirect product of @xmath264 , then @xmath263}\\rel'\\tm a'_n\\sse\\rel'$ ] .",
    "otherwise , as @xmath22 is not linked and @xmath256 is simple , for every @xmath265 there is a unique @xmath266 such that @xmath267 . in particular , there are unique @xmath268 such that @xmath269 .",
    "it is not hard to see that if @xmath137 is a semilattice ( affine ) edge , so is @xmath270 , because otherwise @xmath271 or @xmath272 has more than one extension .",
    "thus @xmath273 is a path from @xmath12 to @xmath132 .",
    "suppose that not all of the algebras @xmath87 are simple .",
    "we prove the lemma by induction on the number of non - simple factors and their size .",
    "we start with a couple of simple observations .",
    "if @xmath62 is a conservative algebra and @xmath88 is its congruence , then @xmath90 is also a conservative algebra .",
    "moreover , if @xmath274 , @xmath275 is a semilattice ( majority , affine ) edge of @xmath90 then for any @xmath276 the edge @xmath125 is also semilattice ( respectively , majority , affine ) .",
    "it follows immediately from the observation that if @xmath277 then @xmath6 is closed under @xmath278 , and @xmath279 for @xmath280 if and only if @xmath281 .",
    "suppose that @xmath256 is not simple and @xmath88 is its maximal congruence .",
    "from the observation above it follows that @xmath282 is an as - component of @xmath283 .",
    "consider the relation @xmath284 . by the induction hypothesis @xmath285",
    "is connected and is an as - component of @xmath286 .",
    "take @xmath257 and let @xmath287 be the corresponding tuples from @xmath288 .",
    "then there is a path @xmath289 .",
    "for each @xmath228 $ ] pick a tuple @xmath290 such that @xmath291\\in\\ba'_i[n]$ ] . by the observation above ,",
    "if @xmath292 is a semilattice ( affine ) edge , so is @xmath291\\ba_{i+1}[n]$ ] , and @xmath137 , as well .",
    "the sequence @xmath136 is a path from @xmath12 to @xmath132 .",
    "let @xmath129 and let @xmath293 , @xmath294 be as - components of @xmath250 , @xmath295 , respectively .",
    "positions @xmath13 and @xmath296 are said to be _",
    "@xmath297-related _ if @xmath14\\in a'_i$ ] if and only if @xmath298\\in a'_j$ ] , for any @xmath299 .",
    "a set @xmath25 $ ] is called a _ strand _ with respect to as - component @xmath300 of @xmath87 , respectively , if it is maximal such that any @xmath301 are @xmath297-related . as is easily seen , the strands with respect @xmath300 form a partition of @xmath7 $ ] .",
    "[ lem : rectangularity ] let @xmath129 and let @xmath300 be as - components of @xmath87 , respectively , such that @xmath302 .",
    "let also @xmath303 be the partition of @xmath7 $ ] into strands with respect to @xmath300 and @xmath304",
    ". then @xmath305 .",
    "we proceed by induction on @xmath11 .",
    "if there is only one strand with respect to @xmath300 , say , if @xmath254 , there is nothing to prove .",
    "so , suppose that there are at least two strands .",
    "there are @xmath306 $ ] and @xmath307 such that @xmath308 , @xmath309\\in a'_i$ ] and @xmath310\\in a_j - a'_j$ ] .",
    "let @xmath311 $ ] be the set of all @xmath312 $ ] with @xmath313\\in a_\\ell - a'_\\ell$ ] .",
    "choose @xmath314 such that @xmath315 is minimal .",
    "without loss of generality , @xmath316 $ ] for @xmath317 . set @xmath318-j}\\ba,\\bc'=\\pr_{[n]-j}\\ba'$ ] and @xmath319 .",
    "we show first that these tuples can be chosen such that @xmath320 .",
    "let @xmath321-j}\\rel\\cap(a'_{s+1}\\tm\\ldots\\tm a'_n)$ ] and @xmath322 .",
    "by lemma  [ lem : connectivity ] @xmath248 is an as - component of @xmath323-j}\\rel$ ] and @xmath324 is an as - component of @xmath325 .",
    "since @xmath326 , there is a path @xmath327 .",
    "choose some @xmath328 such that @xmath329 , @xmath330 and @xmath331 for @xmath332 $ ] .",
    "there is @xmath13 such that @xmath333 , but @xmath334 .",
    "observe that @xmath335 , and @xmath336 , @xmath337 , is an affine edge .",
    "therefore @xmath338 .",
    "then + if @xmath339 is semilattice then @xmath340 belongs to @xmath22 , or + if @xmath339 is affine then @xmath341 belongs to @xmath22 . +",
    "either way , @xmath320 can be chosen to be @xmath342 , and @xmath343 and @xmath344 to be @xmath345 or @xmath346 .    we consider @xmath22 as a subdirect product of @xmath347 and @xmath323-j}\\rel$ ] .",
    "recall that @xmath160 denotes the congruence generated by all pairs @xmath348 that have a common extension @xmath349-j}\\rel$ ] with @xmath350 . by what is already proved",
    "@xmath160 is nontrivial , and there are @xmath351 and @xmath352 with @xmath353 .",
    "we prove that @xmath324 is in a @xmath160-block .",
    "for elements @xmath354 we take the ones found in the previous paragraph ; there is also @xmath355 such that @xmath356 .",
    "now , if @xmath357 is nontrivial on @xmath324 , choose @xmath231 from a different @xmath88-block than @xmath132 , and such that @xmath358 is either semilattice or affine .",
    "first , note that for any @xmath359 the edge @xmath229\\bd[i]$ ] is either semilattice or majority . indeed , suppose this is not the case . if @xmath360\\bb'[i]$ ] is semilattice or affine then @xmath229\\in a'_i$ ] , a contradiction with the construction .",
    "therefore , @xmath361 , while @xmath362 , a contradiction again .    to complete the proof it remains to apply the lemma to @xmath325 and @xmath323-j}\\rel$ ] .",
    "let @xmath32 be a finite class of conservative algebras closed under subalgebras and retracts .",
    "for example , as we noted @xmath32 can be the set of all subalgebras of a finite conservative algebra . in this section we present an algorithm solving @xmath71 .",
    "we start with two reductions of the problem .",
    "the first reduction converts the problem to a number of csp instances in which every domain is an as - component , and then either provides a solution , or allows to eliminate some elements from some of the original domains",
    ".    let @xmath72 be a @xmath71 instance .",
    "choose as - components @xmath363 for each @xmath364 such that for any constraint @xmath365 the set @xmath366 is nonempty .",
    "we call such a collection of as - components a _",
    "consistent collection_. a strand of @xmath47 with respect to @xmath367 , @xmath364 , is a maximal set @xmath46 such that for any partition @xmath368 of @xmath48 some @xmath369 , @xmath370 are in the same strand with respect to @xmath371 of a constraint @xmath372 .",
    "let @xmath373 be the partion of @xmath34 into strands with respect to @xmath367 , @xmath364 .",
    "for @xmath228 $ ] denote by @xmath374 the problem instance @xmath375 , where @xmath376 with @xmath377 , and for each @xmath372 we include into @xmath378 the constraint @xmath379 and @xmath380 is the positions of @xmath381 .",
    "let @xmath382 be a solution of @xmath374 . then applying lemma  [ lem : rectangularity ] to each constraint relation of @xmath47",
    "we conclude that @xmath383 such that @xmath384 whenever @xmath385 is a solution for @xmath47 .    if for some",
    "@xmath203 the problem @xmath374 has no solution , then @xmath47 has no solution @xmath383 with @xmath386 for any @xmath385 .",
    "therefore , @xmath47 can be reduced to a smaller problem @xmath387 , where @xmath388 if @xmath385 and @xmath389 otherwise ; and every constraint relation @xmath22 of @xmath47 is obtained from the corresponding constraint relation of @xmath47 by restricting it to the new domains .",
    "it remains to show that such a consistent collection of as - components always exists , and to demonstrate how it can be found .",
    "let @xmath46 .",
    "a _ partial consistent collection _ on @xmath48 is a collection of as - components @xmath363 for each @xmath390 such that for any constraint @xmath38 , where @xmath391 the set @xmath392 is nonempty .",
    "observe that proposition  [ pro : consistent - components ] implies that a consistent collection always exists ( it suffices to start with empty @xmath48 ) .",
    "it also gives a method of finding a consistent collection : let @xmath393 and choose any as - component @xmath394 .",
    "then , if a partial consistent collection @xmath395 is chosen , proposition  [ pro : consistent - components ] guarantees that we can find @xmath396 such that @xmath397 is partial consistent collection .",
    "we start with a statement that is quite similar to proposition  [ pro : consistent - components ] , but uses relations rather than csp instances .",
    "( partial ) consistent collections for relations are defined as follows : let @xmath129 , as - components @xmath398 is a consistent collection if for any @xmath306 $ ] the set @xmath399 is non - empty .",
    "[ lem : max - extension ] let @xmath22 be an ( @xmath11-ary ) relation and @xmath25 $ ] .",
    "for any @xmath26 such that @xmath14 $ ] , @xmath31 , belongs to an as - component , there is @xmath400 such that @xmath133 $ ] , @xmath24 $ ] , belongs to an as - component and @xmath133=\\ba[i]$ ] for @xmath31",
    ".    consider @xmath22 as a subdirect product of @xmath401 and @xmath402-i}\\rel$ ] . by lemma  [ lem : connectivity ]",
    "@xmath12 belongs to an as - component of @xmath403 , and it suffices to find @xmath132 in an as - component of @xmath404 such that @xmath405 .",
    "let @xmath405 for some @xmath406 .",
    "if @xmath133 $ ] belongs to an as - component , we may replace @xmath20 with @xmath407 , so assume @xmath133 $ ] does not belong to an as - component for @xmath24-i$ ] .",
    "take @xmath408 with @xmath409 and @xmath410 from an as - component of @xmath404 . as @xmath133 $ ] is not in any as - component",
    ", @xmath133\\bc_2[i]$ ] is a semilattice or majority edge for @xmath24-i$ ] . letting @xmath411 we have that @xmath412 is a semilattice edge and",
    "@xmath413 is a majority edge .",
    "observe that @xmath414 and that @xmath415 belongs to the same as - component as @xmath12 .",
    "thus , by lemma  [ lem : connectivity ] @xmath416 for some @xmath417 from the same as - component as @xmath410 .",
    "lemma  [ lem : max - extension ] implies that for any relation there is a consistent collection .",
    "indeed , if @xmath299 is such that @xmath14 $ ] belongs to an as - component @xmath249 , then @xmath398 is a consistent collection .",
    "we prove by induction that for any @xmath419 $ ] there is @xmath299 such that @xmath14\\in a'_i$ ] for @xmath31 .",
    "since @xmath398 is a consistent collection , the statement is true for any @xmath20 with @xmath420 .",
    "suppose it is true for any @xmath421 $ ] such that @xmath422 .",
    "without loss of generality assume @xmath423 .",
    "let @xmath424 , @xmath425 , @xmath426 , and let @xmath427 such that @xmath428\\in a'_i$ ] for all @xmath429 . if one of @xmath430\\in a'_j$ ] , @xmath431 , then we are done ; assume this is not the case . by lemma  [ lem : connectivity ]",
    "@xmath432 and @xmath433 are subdirect products of @xmath434 and @xmath435 , respectively .",
    "therefore @xmath436 can be chosen so that @xmath437=\\ba_2[3]$ ] and @xmath438=\\ba_3[2]$ ] . while @xmath439,\\ba_2[i]\\in a'_i$ ] for all @xmath440",
    ", @xmath441\\in a'_1 $ ] , and @xmath442\\not\\in a'_1 $ ] , by lemma  [ lem : rectangularity ] @xmath443.\\ ] ] hence , @xmath444 can be assumed such that @xmath441=\\ba_3[1]$ ] .",
    "if @xmath430\\ba_k[j]$ ] is a semilattice edge for some @xmath445 then the tuple @xmath446 satisfies the required conditions .",
    "it remains to consider the case when @xmath430\\ba_k[j]$ ] is a majority edge for any @xmath445 .",
    "consider @xmath447 .",
    "as @xmath439,\\ba_2[i],\\ba_3[i]\\in a'_i$ ] for @xmath448 , we have @xmath133\\in a'_i$ ] in this case . since @xmath441=\\ba_3[1]$ ] and @xmath442\\ba_2[1]$ ] is a majority edge , @xmath449=\\ba_2[1]$ ] .",
    "similarly , @xmath450=\\ba_1[2]\\in a'_2 $ ] and @xmath451=\\ba_1[3]\\in a'_3 $ ] .",
    "suppose @xmath72 is a minimal instance that does not satisfy the conclusion of the proposition .",
    "since we assume @xmath47 3-minimal , @xmath460 . pick @xmath364 ; our assumption implies that @xmath461 satisfies the conclusion of the proposition , but there is a consistent collection @xmath462 such that it can not be extended to a consistent collection including some @xmath363 .",
    "let @xmath463 . to obtain the desired contradiction we shall construct a problem @xmath464 which also has @xmath465 constraints , with the same constraint relations , but with different constraint scopes .",
    "we define the set of variables of @xmath464 to be the union of @xmath466 and @xmath465 disjoint copies @xmath467 of @xmath48 , where @xmath468 .",
    "now , for each @xmath469 $ ] , we define a mapping @xmath470 by setting @xmath471 , and extend each @xmath472 to @xmath42 by setting @xmath473 .",
    "the set of constraints of @xmath464 is then defined as @xmath474      the collection @xmath477 can not be extended to a consistent collection for @xmath22 , since @xmath395 can not be extended to a consistent collection for @xmath47 . however",
    ", we shall show that @xmath22 satisfies the conditions of lemma  [ cor : crt ] , and thus derive a contradiction .    for any pair of indices @xmath478",
    ", we claim that @xmath479 .",
    "since @xmath47 is 3-minimal any tuple @xmath480 can be extended to a solution @xmath481 .",
    "furthermore , for this solution , we can construct a corresponding solution , @xmath383 , to @xmath464 , such that @xmath482 . indeed , for any constraint @xmath483 , this partial solution can be extended to a tuple @xmath12 from @xmath484 .",
    "then we assign values to @xmath485 accordingly to @xmath12 ( the variable that are not in the constraint scope @xmath486 can be assigned values arbitrarily ) .",
    "maroti in @xcite suggested a reduction for csps that are invariant under a certain binary operation .",
    "let @xmath32 be a class of finite algebras of similar type closed under subalgebras .",
    "suppose that @xmath32 has a term operation @xmath5 satisfying the following conditions for some @xmath64 :    1 .",
    "@xmath487 for any @xmath488 ; 2 .",
    "@xmath32 is closed under retracts via unary polynomials @xmath489 ; 3 .   for each @xmath490",
    "the mapping @xmath491 is not surjective ; 4 .",
    "the set @xmath215 of @xmath490 such that @xmath492 is surjective generates a proper subalgebra of @xmath62 .      as is easily seen , the operation @xmath124 of a class @xmath32 of conservative algebras of closed under subalgebras and any @xmath64 satisfies conditions ( 1),(2 ) . if the operation @xmath494 is surjective for some @xmath89 , then @xmath495 for all @xmath496 .",
    "therefore the only case when condition ( 3 ) is not satisfied is when @xmath62 has such a minimal element . finally , condition ( 4 ) is satisfied whenever @xmath62 is not semilattice free .",
    "we apply maroti s reduction only in the case when every domain of the instance is either semilattice free , or is an as - component .",
    "in this situation this reduction can be slightly modified .",
    "more precisely , we will apply it to all semilattice free domains rather than just one .",
    "below we explain the reduction , and the modifications required .",
    "the reduction uses 3 types of constructions .",
    "let @xmath72 be an instance of @xmath71 and @xmath497 , @xmath364 .",
    "mappings @xmath498 , @xmath364 , are said to be _ consistent _ if for any @xmath44 , @xmath39 , and any tuple @xmath299 the tuple @xmath499)\\zd p_{v_k}(\\ba[k]))$ ] belongs to @xmath22 .",
    "mappings @xmath498 are called _ permutational _ if all of them are permutations , they are called _ idempotent _ if all of them are idempotent . for consistent idempotent mappings @xmath498 by @xmath500",
    "we denote the _ retraction _ of @xmath47 , that is , @xmath47 restricted to the images of @xmath498 .",
    "as is easily seen ( see @xcite ) , in this case @xmath47 has a solution if and only if @xmath500 has . also , if @xmath498 are consistent non - permutational maps , then there are consistent idempotent maps @xmath501 of @xmath47 obtained by iterating @xmath498 .",
    "* @xmath505 is the set of variables ; * the domains are defined by the rule @xmath506 ; * @xmath507 contains constraints of two types : + first , for each @xmath364 , it contains the constraint @xmath508 where @xmath509 for some enumeration @xmath510 of elements of @xmath43 , and @xmath511 ; + second , for every @xmath512 , @xmath39 , and @xmath299 there is constraint @xmath513 given by @xmath514)\\zd(v_k,\\ba[k]))$ ] and @xmath515 .",
    "the important property of the problem @xmath503 is that if it has a solution @xmath383 then mappings @xmath498 , @xmath364 , given by @xmath516 are consistent . if @xmath503 does not have a solution , @xmath47 also does not have a solution ( see @xcite )    we describe the last construction used in the reduction for conservative algebras only .",
    "let @xmath517 be the set of all @xmath518 such that @xmath125 is a semilattice edge for no @xmath519 .",
    "for every such @xmath126 the mapping @xmath520 is injective , while for any other @xmath126 it is not .",
    "then let @xmath521 denote the restriction of @xmath47 to the sets @xmath517 .",
    "the reduction then goes as follows .",
    "first , solve @xmath521 .",
    "if it has a solution , it is also a solution of @xmath47 , so assume @xmath521 has no solution . if @xmath503 has a solution that is not permutational , then @xmath47 has consistent non - permutational mappings , @xmath498 , that can be assumed idempotent .",
    "in this case @xmath47 has a solution if and only if @xmath500 has , and can be replaced with this smaller problem , as @xmath522 .",
    "it remains to consider the case when @xmath500 has no solution that gives rise to non - permutational mappings .    in this case",
    ", as @xmath521 has no solution , for any solution @xmath383 of @xmath47 , there is @xmath364 such that @xmath523 .",
    "then for each variable @xmath524 and every @xmath525 we create the instance @xmath503 with an additional unary constraints @xmath526 , @xmath527 .",
    "this implies that for any consistent maps @xmath498 that arise from a solution to such instance , @xmath528 , and therefore , they are not permutational . if there is such a non - permitational collection of consistent mappings , we replace @xmath47 with @xmath500 ; otherwise we conclude that @xmath47 has no solution .",
    "consider an instance @xmath72 of @xmath71 .",
    "recall that it is called semilattice free if none of @xmath529 contains a semilattice edge .",
    "our algorithm works recursively reducing the domains so that eventually we obtain a semilattice free instance .",
    "first , we show how to solve semilattice free instances .",
    "every edge of @xmath529 , @xmath364 , in this case is either majority or affine .",
    "therefore for any @xmath364 and any @xmath530 the operation @xmath531 is a majority operation if @xmath125 is a majority edge , and is an affine operation if @xmath125 is an affine edge .",
    "thus @xmath278 satisfies the conditions of a _ generalized majority - minority _ operation , and can be solved by the algorithm from @xcite .",
    "if @xmath47 is not semilattice free , but every domain is an as - component , we apply maroti s reduction , as described in section  [ sec : maroti ] .",
    "this reduction repeatedly reduces the problem to a smaller one , @xmath500 , by finding consistent maps @xmath532 , and either discovers that @xmath47 does not have a solution or produces a problem which is semilattice free or has a proper as - component .",
    "it also makes recursion calls with instances @xmath503 and @xmath521 , each of which is either semilattice free or has a domain with a least element and therefore with a proper as - component .    finally ,",
    "if @xmath47 has a domain with a proper as - component , we apply the as - component exclusion reduction as described in section  [ sec : as - exclusion ] , and either find a solution or reduce some of the domains .",
    "this reduction makes recursive calls with instances in which every domain is an as - component .",
    "solving semilattice free instances is polynomial time by @xcite .",
    "we consider the recursion tree generated by the algorithm .",
    "it is easy to see that at every node of the tree the amount of work done by the algorithm is bounded by a polynomial , so is the number of recursive calls .",
    "therefore it suffices to show that the depth of recursion is bounded by a constant .",
    "[ lem : maroti - reduction ] let @xmath72 be an instance of @xmath71 such that all @xmath43 are as - components ( and therefore do not have a least element ) .",
    "let also @xmath498 , @xmath364 , be consistent maps for @xmath47 .",
    "then @xmath534 are instances of @xmath71 , and @xmathsuppose there is a constant @xmath536 such that for any problems @xmath464 and @xmath537 such that @xmath537 is a successor of @xmath464 in the recursion tree and the length of the path from @xmath464 to @xmath537 is at least @xmath536 , then @xmath538",
    ". then the recursion tree has depth at most @xmath539 where @xmath206 is the maximal size of a semilattice non - free algebra in @xmath32 .",
we show that the algorithm satisfies the condition above for @xmath540 .",
    "let @xmath464 be the problem being solved at some node of the recursion tree .",
    "suppose first that all the domains of @xmath464 are semilattice - free .",
    "then @xmath464 has no successors and there is nothing to prove .",
    "next , suppose that some domain is not an as - component .",
    "then every child of @xmath464 is of the form @xmath541 for some strand @xmath542 .",
    "every domain in a problem like this is an as - component .",
    "note , however , that the size of at least some domains may not decrease at this step , if those domains are already as - components .",
    "finally , suppose that all domains of @xmath464 are as - components .",
    "then every child of @xmath464 has the form @xmath543 , @xmath544 , or @xmath545 . by lemma  [ lem : maroti - reduction ] the maximal size of semilattice non - free domain of each of these problems",
    "is strictly less than that of @xmath464 ."
  ],
  "abstract_text": [
    "<S> conservative constraint satisfaction problems ( csps ) constitute an important particular case of the general csp , in which the allowed values of each variable can be restricted in an arbitrary way . </S>",
    "<S> problems of this type are well studied for graph homomorphisms . </S>",
    "<S> a dichotomy theorem characterizing conservative csps solvable in polynomial time and proving that the remaining ones are np - complete was proved by bulatov in 2003 . </S>",
    "<S> its proof , however , is quite long and technical . </S>",
    "<S> a shorter proof of this result based on the absorbing subuniverses technique was suggested by barto in 2011 . in this paper </S>",
    "<S> we give a short elementary prove of the dichotomy theorem for the conservative csp . </S>"
  ]
}
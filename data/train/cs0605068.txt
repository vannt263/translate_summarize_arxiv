{
  "article_text": [
    "a central quantity for many algorithms operating on linear recurrences and their solutions is the dispersion .",
    "the _ dispersion set _ of two polynomials @xmath3 and @xmath4 in @xmath5 $ ] is the set of positive integer roots of the resultant @xmath6 .",
    "when this set is not empty , its maximal element is called the _ dispersion _ of @xmath3 and  @xmath4 .    thus , the dispersion is the largest integer difference between roots of  @xmath3 and  @xmath4 .",
    "as shown by the simple example  @xmath7 with  @xmath8 , the dispersion can be exponentially large in the _ bit _ size of the input polynomials .",
    "it can not get much worse : when the polynomials have integer coefficients whose absolute value is bounded by  @xmath9 , their dispersion is bounded by @xmath10 ( * ? ? ?",
    "* fact  7.11 ) .",
    "this exponential size yields the dominant term in the worst - case complexity of many algorithms computing    or operating on    solutions of linear recurrences .",
    "for instance , the computation of a gosper - petkovek form produces a polynomial whose degree  @xmath0 can be linear in the dispersion of its input and thus exponential in its bit size .",
    "if this polynomial is expanded it has @xmath11 coefficients ; over the integers , its total bit size is  @xmath12 .",
    "this form is used in the first step of gosper s summation algorithm and of abramov s algorithm for computing rational solutions of linear recurrences .",
    "thus , it makes an important contribution to the complexity of these algorithms . once this form is computed , these algorithms search for polynomial solutions of an associated linear recurrence .",
    "this is done by linear algebra using a bound on the possible degree of solutions which is at least as large as  @xmath0 , leading again to a more than quadratic complexity , even when no nonzero solution exists . in turn , a parameterized variant of gosper s algorithm forms the basis of zeilberger s definite summation algorithm which inherits this costly behaviour .",
    "by contrast , we provide a probabilistic algorithm that detects that no nonzero rational solution of a homogeneous linear recurrence exists in  @xmath13 bit operations and a deterministic algorithm that gives a compact representation of all solutions in  @xmath14 bit operations .",
    "all the algorithms in the present work eventually rely on the computation of polynomial solutions of linear recurrences . in a previous work  @xcite , we dealt with the analogous problem in the linear differential case , by exploiting the linear recurrence satisfied by the coefficients of power series solutions and reducing the computation to that of _ matrix factorials_. for the latter operation , there exist fast probabilistic and deterministic algorithms  ( see  @xcite and the references in  @xcite ) . in the case of linear recurrences , it is not true that the coefficients of polynomial solutions satisfy a linear recurrence in general ; however , it becomes true if the polynomials are expanded in a binomial basis  ( * ? ? ?",
    "xiii , art .  5 ) .",
    "this is the basis of a simple quadratic algorithm  @xcite to compute polynomial solutions . in section  [ sec1 ] , we show how this conversion is performed , we recall the basic results on matrix factorials and apply them to get the announced complexities .    from there , in section  [ sec2 ] , we proceed in three steps : _ ( i ) _",
    "we slightly modify the computation of the gosper - petkovek form so that it does not expand the potentially large polynomial but instead computes a first - order , moderately - sized recurrence for it ; _ ( ii ) _  we show that this first - order recurrence can be used to compute a linear recurrence satisfied by the numerators of rational solutions , in a complexity that is only logarithmic in  @xmath0 , both in the homogeneous and nonhomogeneous cases ; _ ( iii ) _",
    "we then compute the numerators as polynomial solutions via matrix factorials . the close relation between abramov s and gosper s algorithm",
    "makes it possible to transfer these results to gosper s algorithm .",
    "then in section  [ zeilberger ] , we show how this machinery can be adapted to the parameterized variant needed in zeilberger s algorithm .",
    "finally , we describe experimental results in section  [ experiments ] .    all along this text",
    ", @xmath15 denotes a linear difference operator with coefficients in  @xmath16 $ ] .",
    "we view it as a polynomial in the non - commutative ring @xmath17 , where @xmath18 is the shift operator @xmath19 .",
    "similarly , @xmath20 , @xmath21 , and  @xmath22 denote the shifts with respect to @xmath23 , @xmath24 , and  @xmath25 .",
    "to any difference operator @xmath15 is attached a homogeneous linear recurrence equation @xmath26 .",
    "we view the solution @xmath27 either as a sequence @xmath28 ( also denoted @xmath29 ) , or as a function @xmath30 ( the cases of particular interest being polynomial and rational functions ) .    for our complexity analyses ,",
    "the measure we use is the bit ( or boolean ) complexity .",
    "for this purpose , our complexity model is the multi - tape turing machine , see for instance  @xcite .",
    "we use the _ number of bit operations _ to express time complexities in this model .",
    "we call _ bit size _",
    "( or simply  _ size _ ) of an integer  @xmath31 the number  @xmath32 ( @xmath33 denotes the logarithm of  @xmath23 in base  2 ) . by convention",
    ", we assume that  @xmath34 .",
    "the bit size of a matrix or vector is the sum of the bit sizes of its entries .",
    "polynomials given as input to our algorithms are stored in a dense representation ; a measure of their bit size is given by the sum of the bit sizes of their coefficients , including the zero coefficients .",
    "similarly , the bit size of a linear recurrence equation ( lre ) is the sum of the bit sizes of its polynomial coefficients .    to simplify complexity estimates , we assume that the product of two integers of bit size  @xmath35 can be computed within @xmath36 bit operations using fast fourier transform  @xcite . to keep the notation compact ,",
    "we sometimes write @xmath37 ; the tilde indicates that the factors polynomial in @xmath38 or smaller have been omitted .    for any prime number  @xmath39 ,",
    "the bit complexities of the operations @xmath40 in the finite field @xmath41 are in @xmath42 .",
    "we assume that over the rings we use , the product of two polynomials of degree at most  @xmath35 can be computed within  @xmath43 base ring operations ( each ring operation being counted at unit cost ) and that @xmath44  ( * ? ? ? * ch",
    ".  2 ) . for computations in",
    "@xmath45 $ ] , the bit complexity is bounded by multiplying the arithmetic cost estimates by the bit complexity of the basic operations in  @xmath46 .",
    "in all our algorithms we are interested in reducing the complexity with respect to a potentially exponential parameter  @xmath23 ( related to a dispersion or to a root of an indicial polynomial ) .",
    "thus we consider as having cost  @xmath47 any operation whose complexity is polynomial in the bit size of the input recurrence or polynomials , and concentrate on the dependency of the complexity in  @xmath23 . in order to provide the code with an actual bound on the size of primes that need to be used",
    "so that the bound on probability of error is guaranteed , we have to perform a much more precise complexity analysis taking into account all parameters ( order , degree of coefficients ) ( as in the proof of  ( * ? ? ? * thm .",
    "3 ) ) . such a detailed analysis will appear in  @xcite .",
    "in symbolic summation and in the resolution of linear recurrences , all the known algorithms ultimately require polynomial solutions of linear recurrence equations .",
    "in this section , we give algorithms for computing descriptions of the @xmath48-vector space of solutions of a linear recurrence operator @xmath15 with coefficients in @xmath16 $ ] : @xmath49 we focus on two types of solutions of such recurrences : solutions with finite support and polynomial solutions .    in what follows",
    ", we make the hypothesis that _",
    "@xmath50 is an ordinary point of the recurrence_. this means that the leading coefficient @xmath51 does not vanish at any of the integers @xmath52 ; in other words , when unwinding the recurrence , no division by zero is encountered .",
    "this condition is ensured after a generic translation @xmath53 . under our complexity assumptions ,",
    "a proper  @xmath54 and the corresponding translation can be computed in a polynomial number of bit operations , so that there is no loss of generality for the problems we consider . the general case ( when 0 is not ordinary ) is technically more demanding but does not change the complexity estimates we give here .",
    "it will be presented in  @xcite .",
    "let @xmath55 denote the vector space of solutions @xmath56 of  . in the case of an arbitrary @xmath57",
    ", the dimension of @xmath55 as a @xmath48-vector space may be different from @xmath58 ( both larger or smaller ) .",
    "however , when  0 is an ordinary point of  @xmath15 , @xmath55 has dimension exactly @xmath58 and a basis is given by the sequences  @xmath59 , @xmath60 , satisfying  @xmath15 and having initial conditions @xmath61 , for @xmath62 , where @xmath63 is kronecker s @xmath64 symbol ( @xmath65 , @xmath66 if @xmath67 ) .    in  [ compact ]",
    ", we describe the compact representation that forms the basic data structure of our algorithms .",
    "then , in  [ nthterm ] we recall classical results that allow for the efficient computation of the @xmath0th element of a solution of  @xmath15 . in   [ rectorec ]",
    "we describe the reduction from the problem of searching for polynomial solutions to that of finding solutions with finite support .",
    "next , we give in   [ polysols ] algorithms to compute finitely supported and polynomial solutions of recurrences .",
    "we conclude this section by showing in  [ compactoperations ] how the evaluation of a polynomial and its finite differences can be performed efficiently in the compact representation .",
    "classically , a polynomial solution  @xmath30 of   is represented by its coefficients in the monomial basis @xmath68 .",
    "we use an alternative data structure for @xmath30 , which is motivated by the observation that its coefficients @xmath69 in the binomial basis @xmath70 obey a recurrence with polynomial coefficients .",
    "[ ex : compact ] the recurrence @xmath71 has a unique nontrivial monic polynomial solution @xmath72 . to write down its coefficients in the monomial basis",
    "at least @xmath73 bits are needed .",
    "in contrast , @xmath30 can be represented by the recurrence @xmath74 on the coefficients @xmath69 of @xmath30 in the binomial basis @xmath70 ; the bit size of this new representation is only linear in @xmath75 , most of the size being in the initial condition  @xmath76 .",
    "the _ compact representation _ of a polynomial solution of   is the data of a linear recurrence and initial conditions for its coefficients in the binomial basis , together with an upper bound on its degree .",
    "our aim in this article is to demonstrate that this representation of polynomial solutions of recurrences can be carried through different algorithms from indefinite and definite hypergeometric summation and that it is beneficial from the complexity point of view .",
    "the reason why this representation deserves the name `` compact '' appears in   [ polysols ] below .",
    "let @xmath28 be a sequence satisfying  .",
    "the recurrence  @xmath57 can be rewritten as a first - order matrix recurrence @xmath77 , where @xmath78 is the vector  @xmath79 and @xmath80 is an @xmath81 matrix with rational function entries .",
    "the problem of computing a selected term @xmath82 reduces to that of computing  @xmath83 and the _ matrix factorial _ @xmath84 .",
    "this makes sense since under our hypothesis the leading term of the initial recurrence does not vanish at @xmath85 .",
    "the numerator and denominator of the matrix factorial can be computed efficiently , either in @xmath86 using a _ binary splitting _ algorithm , or modulo a prime @xmath39 using a _ baby - step / giant - step _ algorithm .",
    "these algorithms are described in  ( * ? ? ?",
    "* ,  3.1 ) , see the references therein . for further use",
    ", we extract from  @xcite the following result .",
    "[ thm : reccomplexity ] let @xmath87 be a sequence of vectors of rational numbers that satisfies a recurrence @xmath88 , with @xmath89 an @xmath90 matrix with rational function entries in @xmath91 .",
    "let @xmath39 be a prime number such that the denominator of  @xmath92 does not vanish mod @xmath39 at @xmath85 . then ,",
    "as  @xmath93 :    1 .   @xmath94 and @xmath95 have bit size @xmath96 ; their values can be computed using @xmath97 bit operations .",
    "2 .   @xmath98 and @xmath99 can be computed using + @xmath100 bit operations .",
    "3 .   the rank of @xmath101 can be computed in  @xmath102 bit operations using a probabilistic monte carlo algorithm .      for completeness",
    ", we recall here an algorithm from  @xcite that we call to perform the conversion from a recurrence with polynomial coefficients to the recurrence satisfied by the coefficients of series solutions in the binomial basis .",
    "earlier ( and slightly more complicated ) algorithms have been given in  ( * ? ? ?",
    "* chapter  xiii ) and  ( * ? ? ?",
    "* section  4.2 ) .",
    "the starting point are the following two identities : @xmath103 if @xmath104 , then applying these identities to rewrite  @xmath105 and  @xmath106 and extracting coefficients of  @xmath107 shows that the ring morphism @xmath108\\rightarrow{{\\mathbb{q}}}[k , s_k , s_k^{-1}]$ ] defined by  @xmath109 and  @xmath110 sends a homogeneous lre satisfied by  @xmath30 to another one satisfied by  @xmath69 .",
    "the image of   is a lre of the form @xmath111 where the leading term is exactly that of   and the trailing term may involve a negative shift ( by convention , @xmath112 when @xmath113 ) . in particular ,",
    "if @xmath50 is an ordinary point for @xmath57 , so is it for @xmath114 .",
    "the resulting algorithm is as follows .",
    "its complexity is clearly polynomial in the bit size of  @xmath57 .",
    "we consider here the problem of computing a basis of solutions _ with finite support _ , that is , whose terms beyond a certain index are all zero .",
    "the _ degree _ of a solution with finite support @xmath27 is , by definition , the unique integer @xmath115 such that @xmath116 and @xmath117 , for all @xmath118 a universal bound @xmath0 on the degrees of all solutions with finite support of the input recurrence @xmath119 is given by the largest positive integer root of the trailing coefficient @xmath120 of @xmath57 .",
    "note that @xmath0 is generally not bounded polynomially in the bit size of  @xmath57 .",
    "recall that @xmath55 has dimension @xmath58 , with a basis  @xmath121 formed by the sequences @xmath59 , with @xmath122 , given by the initial conditions @xmath123 , for @xmath62 .",
    "thus , a finitely supported solution @xmath27 is ( an unknown ) linear combination @xmath124 such that the elements in the slice @xmath125 all vanish .",
    "this yields linear constraints on the initial conditions @xmath126 .    to determine these constraints , it is sufficient to compute the values at indices @xmath127 of all the elements in @xmath121 using thm .",
    "[ thm : reccomplexity ] .",
    "the rank of the resulting @xmath81 matrix gives the dimension of the vector space of solutions with finite support .",
    "since the entries of this matrix have bit size @xmath96 , the desired @xmath126 s , which are determined by a kernel computation , also have bit size @xmath96 . putting together these considerations , we get the following result .    [",
    "th : finitesuppsols ] there exists a basis  @xmath128 ( @xmath129 ) of solutions of recurrence  ( [ rec ] ) with finite support , where each  @xmath130 is uniquely specified by the data of initial conditions of bit size @xmath96 , with @xmath0 a bound on the integer roots of @xmath131 .",
    "the dimension  @xmath35 as well as the degrees of the  @xmath130 s can be computed by a probabilistic algorithm using @xmath132 bit operations .",
    "the initial conditions of the  @xmath130 s and their maximal degree @xmath133 can be computed deterministically in @xmath134 bit operations .",
    "[ th : finitesuppsols ] is the basis for using the name `` compact representation '' : it shows that the compact representation has a size of the same order as the initial conditions , while the expanded polynomials have size  @xmath12 .",
    "in general , this latter bound is reached .    using the results in  [ rectorec ] , thm .",
    "[ th : finitesuppsols ] carries over literally to the compact representation of a basis of polynomial solutions of the recurrence @xmath119 .",
    "the corresponding statement requires a bound on the degree of polynomial solutions that is given by the roots of the _ indicial polynomial_.    the _ indicial polynomial _ of  @xmath57 at infinity is the trailing coefficient of @xmath135 .",
    "[ cor : finitesuppsols ] the statement of thm .",
    "[ th : finitesuppsols ] holds for polynomial solutions of  @xmath119 , with  @xmath0 the largest integer root of the indicial polynomial of  @xmath57 at infinity",
    ".    * nonhomogeneous equations . *",
    "we now consider the equation @xmath136 , with coefficients in  @xmath16 $ ] and right - hand side of degree @xmath25 . applying and expanding @xmath137 in the binomial basis ,",
    "the initial problem boils down to the search of finitely supported solutions of a nonhomogeneous equation @xmath138 , where @xmath139 is a sequence with finite support , @xmath140 for @xmath141 . in matrix notation , we have @xmath142 , where @xmath143 is the vector @xmath144 and @xmath145 is the vector @xmath146 . then the vector of initial conditions  @xmath83 satisfies the affine constraint @xmath147 , where @xmath148 , @xmath149 , @xmath150 , for @xmath151 and @xmath152 .    for large @xmath0 ,",
    "using thm .",
    "[ thm : reccomplexity ] , the matrices @xmath153 and @xmath9 can be computed efficiently . the bit size and the computational cost of @xmath154",
    "is @xmath47 .",
    "thus , solving the affine system of size @xmath155 yields the finitely supported solutions of @xmath156 and the polynomial solutions of @xmath157 and we get the following .",
    "let @xmath158 be a polynomial .",
    "then the statement of  thm .",
    "[ th : finitesuppsols ] holds for polynomial solutions of nonhomogeneous equations  @xmath159 as the largest integer root  @xmath0 of the indicial polynomial of  @xmath57 at infinity becomes large .",
    "the compact representation is not only a data structure for intermediate computations .",
    "it can actually be exploited further . in particular",
    ", we now detail the evaluation at an algebraic number @xmath54 of a polynomial @xmath160 and an iterated difference @xmath161 ( where  @xmath162 and @xmath163 is potentially large ) .",
    "the polynomial @xmath27 is given by its degree @xmath0 and the recurrence @xmath164 satisfied by its coefficients @xmath69 in the binomial basis @xmath165 , together with initial conditions .",
    "the basic idea is embodied in the following .",
    "if @xmath166 and @xmath167 are solutions of linear difference equations with polynomial coefficients , then so is the sequence @xmath168 defined by @xmath169 .",
    "this lemma can be applied to the sequences @xmath170 and @xmath171 .",
    "evaluating the resulting sequence at  @xmath0 using thm .",
    "[ thm : reccomplexity ] gives @xmath172 for @xmath173 bit operations , when @xmath0 is large .",
    "using pascal s formula @xmath174 , we deduce that @xmath175 the recurrence satisfied by the sequence @xmath176 is obtained by shifting by  @xmath163 the coefficients of the recurrence of @xmath170 .",
    "this new recurrence has bit size @xmath177 and initial conditions can be determined by binary splitting in @xmath178 bit operations .",
    "here , our asymptotic bound involves the two parameters @xmath0 and  @xmath163 , as both are potentially exponential in the input size .",
    "as above , the compact representation of the recurrence satisfied by @xmath179 can be determined efficiently , as well as its @xmath0th term @xmath180 .",
    "the classical gosper - petkovek normal form  @xcite of a reduced rational function  @xmath181 in @xmath182 consists of three polynomials @xmath183 in @xmath5 $ ] such that @xmath184 with the constraints @xmath185 the degree  @xmath0 of the polynomial  @xmath186 is potentially exponentially large .",
    "thus , in our algorithm below , we modify the usual algorithm ( e.g. , in  @xcite ) slightly so that the polynomial  @xmath186 is not expanded .",
    "similar ideas appear in  @xcite in the context of indefinite rational summation .",
    "@xmath187 .",
    "note that the input is an ordered pair @xmath188 and not a rational function @xmath181 .",
    "the output of the algorithm changes if @xmath188 is replaced by @xmath189 for @xmath190 $ ] .",
    "this will be necessary for our treatment of rational solutions below .",
    "on the other hand , the output @xmath153 , @xmath9 , and  @xmath191 s also satisfy  ( [ gp - ext ] ) whenever @xmath3 and  @xmath4 have no common factor , so that the gosper - petkovek normal form of a rational function in  @xmath182 given in reduced form  @xmath181 is obtained by @xmath192 .    as an outcome of this algorithm , the rational function @xmath193 ( @xmath194 ) is easily obtained as @xmath195 for large  @xmath0 and  @xmath196",
    ", it has `` small '' numerator and denominator of degrees bounded by @xmath197 times those of  @xmath3 and  @xmath4 .",
    "this equation for @xmath198 is a homogeneous lre that plays the role of a compact representation of  @xmath92 .",
    "the initial value  @xmath199 ( more generally  @xmath200 where  @xmath201 ) has size  @xmath202 and can be computed by thm .",
    "[ thm : reccomplexity ] within  @xmath203 bit operations . in the next sections , we use this to design `` compact '' variants of abramov s and gosper s algorithms .",
    "[ logh ] algorithm is correct .",
    "for @xmath188 with rational coefficients , it has deterministic polynomial bit complexity in the bit size of @xmath188 .",
    "the correctness is that of the classical algorithm since the only difference is that we do not expand  @xmath92 .",
    "step  1 is dealt with by a deterministic algorithm due to loos  @xcite ( cf .",
    "@xcite for faster probabilistic algorithms ) .",
    "step  3 is performed at most  @xmath204 times , and each step is polynomial by the classical algorithms as found in  @xcite .",
    "we now consider rational solutions of the lre @xmath159 , with @xmath158 a polynomial in @xmath5 $ ] .",
    "our starting point is the following result of abramov  @xcite .",
    "[ abramov - lemma ] the polynomial @xmath186 of the + gosper - petkovek form of @xmath205 is a multiple of the denominator of all rational solutions of  @xmath159 .",
    "abramov s algorithm first computes @xmath186 , then performs the change of variable @xmath206 , leading to @xmath207 whose polynomial solutions @xmath208 are then sought .",
    "in the homogeneous case ( @xmath209 ) , using   reduces this equation to an equation of polynomial size .",
    "this is described in algorithm homcompactratsols ( see figure ) .    in step  2 ,",
    "the `` normalize '' operation consists in expanding  @xmath193 using   and taking the numerator of the resulting expression .",
    "also , if necessary , we change @xmath115 into  @xmath210 with  @xmath211 , so that  0 is not a singular point in step  3 .",
    "this can be detected and changed at a cost of  @xmath212 operations . in step  4 , the output is given by the compact forms of the numerators and @xmath92 is given by the output of  .",
    "in the nonhomogeneous case , reducing   to the same denominator would lead to an equation whose right - hand side has a potentially exponential degree .",
    "instead , we consider the homogeneous operator  @xmath213 , whose bit size is polynomial in that of  @xmath159 and that can be treated by the algorithm above . if  @xmath29 is a rational solution of  @xmath214 , then  @xmath215 is a rational solution of  @xmath216 .",
    "this implies that @xmath217 for all  @xmath115 larger than the largest root of  @xmath158 and since @xmath218 is rational , also for all other values of  @xmath115 .",
    "thus fixing  @xmath219 so that @xmath220 for any @xmath24 such that  @xmath221 concludes the computation .",
    "this is the basis of the following algorithm .    in step  2 , just iterating @xmath222 till a point where @xmath158 is found to be nonzero is sufficient for our purpose .",
    "if  @xmath0 is a bound on the degree of the numerators and denominator computed in step  1 , then the values of the  @xmath223 s in step  3 have size  @xmath202 and can be computed by binary splitting .",
    "from there , it follows that the affine equation in step  3 has coefficients of size  @xmath202 , which is then also a bound on the size of its solutions .",
    "these solutions can be computed in the form of a point and a basis of a vector space within  @xmath212 bit operations by standard linear algebra .",
    "the same complexity is sufficient for the products of initial conditions in step  4 .",
    "the results of this section are summarized as follows .",
    "let  @xmath0 be the sum of the largest nonnegative integer root of the indicial polynomial of  @xmath224 at infinity and the degree of the polynomial  @xmath186 of   with  @xmath225 and @xmath226 .",
    "the dimension of the affine space of rational solutions of  @xmath159 can be computed probabilistically using  @xmath227 bit operations .",
    "a compact representation of the solutions can be computed deterministically in  @xmath212 bit operations .",
    "the largest integer root of the indicial polynomial of  @xmath224 at infinity is a bound on the valuations of power series solutions of  @xmath119 at infinity , including the valuation of  @xmath228 . adding the degree of  @xmath92 gives the announced bound on the degree of polynomial  @xmath229 s .",
    "from there , the theorem follows from cor .",
    "[ cor : finitesuppsols ] .      given a hypergeometric term  @xmath230 ,",
    "i.e. , such that  @xmath231 , gosper s algorithm  @xcite finds its indefinite hypergeometric sum , if it exists .",
    "such a sum is necessarily of the form  @xmath232 for some @xmath233 .",
    "thus , the problem is reduced to finding rational solutions of @xmath234 .",
    "this can be solved by  .",
    "a further optimization is present in gosper s algorithm : if  @xmath235 in reduced form , the polynomial  @xmath236 of   satisfies  , so that it divides the numerator of  @xmath105 .",
    "( this can be generalized to detect factors of numerators in arbitrary lre s ) .",
    "this does not affect the expression of the complexity result , which is as follows .",
    "let @xmath230 be a hypergeometric term such that @xmath237 , with @xmath238 .",
    "let @xmath0 be a bound on the degree of  @xmath92 in   and on the largest positive integer root of the indicial polynomial of  @xmath239 at infinity .",
    "then the existence of an indefinite hypergeometric sum of  @xmath230 can be determined by a probabilistic algorithm using  @xmath240 bit operations , a compact representation of it can be computed deterministically using  @xmath212 bit operations .",
    "note that in the special case of rational summation ( i.e. , @xmath241 ) , it is actually possible to decide the existence of a rational sum in only _ polynomial _ complexity , see  @xcite .",
    "a bivariate hypergeometric term @xmath242 is such that both @xmath243 and @xmath244 belong to  @xmath245 .",
    "given such a term , zeilberger s algorithm  @xcite computes a lre satisfied by @xmath246 .",
    "the idea is to synthesize a _ telescoping recurrence _ , i.e. , a rational function  @xmath247 and a linear operator @xmath248 such that @xmath249 indeed , summing over @xmath115 and granted boundary conditions known as `` natural boundaries '' , we obtain @xmath250 .",
    "if  @xmath3 was known , then gosper s algorithm would find the left - hand side .",
    "this is the basis of zeilberger s algorithm ( see figure ) .",
    "termination is guaranteed only if such a lre exists .",
    "this occurs in the so - called `` proper - hypergeometric '' case  @xcite and a general criterion has been given by abramov  @xcite .",
    "note that knowing  @xmath27 permits to check the output operator  @xmath3 by simple rational function manipulations , which is why the rational function  @xmath27 is called `` certificate '' in  @xcite .",
    "zeilberger s algorithm is based on a refinement of gosper s algorithm for steps  2 and  3 .",
    "it reduces the computation in step  2 to solving a system that is linear simultaneously in the  @xmath251 s and in another set of  @xmath11 variables , where  @xmath0 is potentially exponential in the bit size of @xmath252 , see e.g.  @xcite .",
    "an equivalent linear system in a small number of variables can be computed by algorithm ( see figure ) .",
    "the important point is linearity : not all solutions of  @xmath253 are linear in the  @xmath251 s , but this property is ensured when the initial conditions satisfy  @xmath254 . indeed , in step  2 , by lemma  [ abramov - lemma ] ,",
    "@xmath92 does not depend on the  @xmath251 s .",
    "then , by induction on @xmath115 , starting from @xmath255 , the factor  @xmath137 of the leading coefficient in  @xmath214 cancels out and thus the solution  @xmath208 is linear in the  @xmath251 .",
    "this property is then preserved by the linearity of .",
    "the final system  @xmath256 has solutions if and only if @xmath252 has rational solutions .",
    "the description of is geared towards the use of compact representations and matrix factorials in intermediate steps .",
    "this is straightforward for steps  15 . in step  6 ,",
    "we can not make direct use of the factorial of the matrix associated to  @xmath257 : this matrix involves the  @xmath251 s rationally and its factorial has too large a size for our target complexity .",
    "instead , we exploit the linearity in the  @xmath251 s by constructing the vector  @xmath258 using matrix factorials for @xmath219 a vector of 0 s with a  1 in @xmath259th position for  @xmath260 and setting the initial condition to  0 , which gives the coefficients  @xmath261 .    from there",
    "we derive our compact version of zeilberger s algorithm given in .    in step  2",
    ", the whole construction can be performed by matrix factorials with integer entries , within the complexities of thm .",
    "[ thm : reccomplexity ] . if a rational solution @xmath262 exists , then the system  @xmath256 has the corresponding  @xmath263 for solutions . thus if @xmath256 does not have a nonzero solution",
    ", @xmath252 does not have a rational one .",
    "this gives a fast probabilistic test .",
    "then , in step  5 , the algorithm is used again with matrices that are polynomial in the variable  @xmath25 . in that case , the system  @xmath256 can be computed by binary splitting with  @xmath264 _ arithmetic _ operations .",
    "the final system has coefficients of degree  @xmath265 with coefficients of bit size  @xmath202 each and this is also the size of the  @xmath251 s to be found . at the same time , we find  @xmath266 , which gives us a compact representation of the certificate .",
    "an optimization is obtained by using the values of the @xmath267 s to compute the value  @xmath268 of the degree of the corresponding sequence . with high probability",
    "this is the actual degree in  @xmath115 of the numerator of  @xmath247 , which can be much smaller than  @xmath0 , thus saving a lot of computation in step  5 .",
    "the following theorem summarizes this section .",
    "[ thm : zeilberger]let  @xmath242 be hypergeometric over  @xmath48 .",
    "let  @xmath0 be the maximal number of variables in the linear system solved in the classical version of zeilberger s algorithm .",
    "then it is possible to detect probabilistically that this system does not have any nonzero solution in  @xmath227 bit operations .",
    "if it does have a solution , it is possible to compute the corresponding  @xmath251 s of degree  @xmath265 and total bit size @xmath12 , as well as a compact representation of the certificate , in @xmath269 bit operations .    for the sake of comparison , a crude analysis by unrolling the triangular system of dimension @xmath270 and taking into account coefficient growth leads to a  @xmath271 bit complexity estimate for the classical algorithm , which can be reduced to  @xmath272 by using the binomial basis .",
    "we consider two families of linear recurrences :    @xmath273    the first one ( @xmath274 ) does not have any rational solution , while the second one ( @xmath275 ) has @xmath276 as a solution . in both cases ,",
    "when  @xmath0 is a large integer , a large dispersion has to be considered . in table",
    "[ table - abramov ] , we give a comparison of the timings obtained by our maple prototype ( denoted compact ) and that of the command ` ratpolysols ` of maple s package ` lretools ` ( denoted classical ) .",
    "this table illustrates the `` nonexponential '' character of the compact versions of the algorithms . in the first case , both output are identical ( no solution ) . in the second case , however , we return a compact representation of the output . for instance , with  @xmath277 we get ( in 0.04s ) the denominator @xmath278 ( in expanded form ) and for the numerator the recurrence @xmath279 satisfied by its coefficients in the binomial basis , together with initial conditions  @xmath280 , @xmath281 , where the coefficients  @xmath282 are 200 bit long integers .",
    ".timings ( in sec . ) for classical and compact versions of abramov s algorithm[table - abramov ] [ cols=\"^,^,^,^,^ \" , ]     in table  [ timings ] , we give a comparison of the timings obtained by our prototype implementation in maple ( denoted `` compact '' ) and those obtained by maple s ` zeilberger ` command in the package ` sumtools :- hypergeometric ` ( denoted `` classical '' ) .",
    "the indication `` @xmath283 gb '' means that the computation had to be stopped after two gigabytes of memory had been exhausted .",
    "the first part of the table ( classical ) suggests that the implementation does not behave well for large  @xmath0 : the observed behaviour is exponential instead of polynomial .",
    "even then , it is still much better than our implementation .",
    "indeed , we have implemented only the case with rational values of  @xmath25 and for small  @xmath0 it often takes longer for our implementation to compute the result with this value than for the classical method to find the result with a formal  @xmath25 .",
    "however , things change as @xmath0 gets larger : the predicted behaviour is well observed .",
    "when @xmath0 is multiplied by  2 , the time is multiplied by slightly more than  2 . had we implemented the baby - step / giant - step version of binary splitting , the timings in the columns for random  @xmath25 would have been much better , since the time should be multiplied by slightly more than  @xmath284 from one line to the next . our experiments with symbolic  @xmath25 show that so far , our complexity result is more of a theoretical nature : although the degrees of the coefficients of the equations grow like  @xmath265 , the constant in front of the  @xmath285 term is about  18 in this example , and a massive cancellation takes place in the final linear solving .",
    "the result has degrees that also grow like  @xmath265 , but with a much smaller constant , so that a direct resolution in  @xmath271 is much faster in this range than our  @xmath286 .",
    "this work was supported in part by the french national agency for research ( anr gecko ) .",
    "comments of the referees on the first version of this article have been very useful .",
    "a.  bostan , p.  gaudry , and  .",
    "linear recurrences with polynomial coefficients and computation of the cartier - manin operator on hyperelliptic curves . in _ international conference on finite fields and applications ( toulouse , 2003 ) _ , volume 2948 of _ lecture notes in computer science _ , pages 4058 . springer ",
    "verlag , 2004 ."
  ],
  "abstract_text": [
    "<S> we consider two kinds of problems : the computation of polynomial and rational solutions of linear recurrences with coefficients that are polynomials with integer coefficients ; indefinite and definite summation of sequences that are hypergeometric over the rational numbers . </S>",
    "<S> the algorithms for these tasks all involve as an intermediate quantity an integer  @xmath0 ( dispersion or root of an indicial polynomial ) that is potentially exponential in the bit size of their input . </S>",
    "<S> previous algorithms have a bit complexity that is at least quadratic in  @xmath0 . </S>",
    "<S> we revisit them and propose variants that exploit the structure of solutions and avoid expanding polynomials of degree  @xmath0 . </S>",
    "<S> we give two algorithms : a probabilistic one that detects the existence or absence of nonzero polynomial and rational solutions in  @xmath1 bit operations ; a deterministic one that computes a compact representation of the solution in  @xmath2 bit operations . </S>",
    "<S> similar speed - ups are obtained in indefinite and definite hypergeometric summation . </S>",
    "<S> we describe the results of an implementation .    </S>",
    "<S> * categories and subject descriptors : * i.1.2 [ * symbolic and algebraic manipulation * ] : algorithms    * general terms : * algorithms , experimentation , theory    * keywords : * computer algebra , polynomial and rational solutions , linear recurrences , summation , creative telescoping , complexity </S>"
  ]
}
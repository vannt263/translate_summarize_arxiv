{
  "article_text": [
    "the study of arguments as abstract entities and their interaction in form of _ attacks _ as introduced + by  @xcite   has become one of the most active research branches within artificial intelligence , logic and reasoning  @xcite .",
    "abstract argumentation provides suitable concepts and formalisms to study , represent , and process various reasoning problems most prominently in defeasible reasoning ( see , e.g. ,  @xcite ) and agent interaction ( see , e.g. , @xcite ) .",
    "a main issue for any argumentation system is the selection of acceptable sets of arguments , called extensions .",
    "however , important computational problems such as determining whether an argument belongs to some extension ( credulous acceptance ) or all extensions ( skeptical acceptance ) , are intractable ( see , e.g. , @xcite ) .",
    "the significance of efficient algorithms for these problems is evident .",
    "however , a few tractable fragments are known where the acceptance problems can be efficiently solved : the fragments of acyclic  @xcite , symmetric @xcite , bipartite  @xcite , and noeven @xcite argumentation frameworks .",
    "it seems unlikely that an argumentation framework originating from a real - world application belongs to one of the known tractable fragments , but it might be `` close '' to a tractable fragment . in this paper",
    "we study the natural and significant question of whether we can solve the relevant problems efficiently for argumentation frameworks that are of small distance to a tractable fragment .",
    "one would certainly have to pay some extra computational cost that increases with the distance from the tractable fragment , but ideally this extra cost should scale gradually with the distance .    [ [ results ] ] results + + + + + + +    we show that the fragments of _ acyclic _ and _ noeven _ argumentation frameworks admit an augmentation .",
    "in particular , we show that we can solve credulous and skeptical acceptance in polynomial time for argumentation frameworks that are of bounded distance from either of the two fragments .",
    "we further show that with respect to the acyclic fragment , the order of the polynomial time bound is independent of the distance , which means that both acceptance problems are _ fixed - parameter tractable _",
    "( see @xcite ) when parameterized by the distance from the acyclic fragment .    in way of contrast",
    ", we show that the fragments of _ bipartite _ and _ symmetric _ argumentation frameworks do not admit an augmentation .",
    "in particular , we show that the problems credulous and skeptical acceptance are already _ intractable _",
    "( i.e. , ( co)np - hard ) for argumentation frameworks at distance  @xmath0 from either of the two fragments .    we further show that the parameter `` distance to the fragment of acyclic frameworks '' is _ incomparable _ with previously considered parameters that also admit fixed - parameter tractable argumentation @xcite .",
    "hence our approach provides an efficient solution for instances that are hard for known methods .    to get a broad picture of the complexity landscape",
    "we take several popular semantics into consideration , namely admissible , preferred , complete , semi - stable and stable semantics ( see @xcite ) .",
    "our approach is inspired by the notion of `` backdoors '' which are frequently used in the area of propositional satisfiability ( see , e.g. , @xcite ) , and also for quantified boolean formulas and nonmonotonic reasoning @xcite .",
    "an _ abstract argumentation system _ or _ argumentation framework _ ( _ af _ , for short ) is a pair @xmath1 where @xmath2 is a finite set of elements called _ arguments _ and @xmath3 is a binary relation called _ attack relation_. if @xmath4 we say that _",
    "@xmath5 attacks @xmath6 _ and that @xmath5 is an _ attacker _ of  @xmath6 .",
    "an af @xmath7 can be considered as a directed graph , and therefore it is convenient to borrow notions and notation from graph theory . for a set of arguments @xmath8 we denote by @xmath9 $ ] the af @xmath10 and by @xmath11 the af",
    "@xmath12 $ ] .",
    "[ exa : af ] an af with arguments @xmath13 and attacks @xmath14 , @xmath15 , @xmath16 , @xmath17 , @xmath18 , @xmath19 , @xmath20 , @xmath21 , @xmath22 , @xmath23 , @xmath24 is displayed in fig .",
    "[ fig : ex - af ] .",
    "let @xmath7 be an af , @xmath25 and @xmath26 .",
    "we say that @xmath5 is _ defended _",
    "( in @xmath27 ) by @xmath28 if for each @xmath29 such that @xmath30 there is an @xmath31 such that @xmath32 .",
    "we denote by @xmath33 the set of arguments @xmath26 such that either @xmath34 or there is an @xmath35 with @xmath30 , and we omit the subscript if @xmath27 is clear from the context .",
    "we say @xmath28 is _ conflict - free _ if there are no arguments @xmath36 with @xmath37 .",
    "= [ circle , draw , minimum size=4mm , inner sep=2pt ]    ( 0,0 ) node ( p1 ) @xmath0 ( 2,0 ) node ( p2 ) @xmath38 ( 2,-2 ) node ( p3 ) @xmath39 ( 0,-2 ) node ( p4 ) @xmath40 ( 1,1.6 ) node ( p5 ) @xmath41 ;    ( p1 ) edge[- > ] ( p2 ) ( p2 ) edge[- > ] ( p1 )    ( p2 ) edge[- > ] ( p3 ) ( p3 ) edge[- > ] ( p2 )    ( p3 ) edge[- > ] ( p4 ) ( p4 ) edge[- > ] ( p3 )    ( p1 ) edge[- > ] ( p4 ) ( p4 ) edge[- > ] ( p1 )    ( p2 ) edge[- > ] ( p5 ) ( p5 ) edge[->,bend right=60 ] ( p4 )    ( p4 ) edge[- > ] ( p2 ) ;    = [ circle , draw , minimum size=4mm , inner sep=2pt ]    ( 0,0 ) node[fill = lightgray ] ( p1 ) @xmath0 ( 2,0 ) node ( p2 ) @xmath38 ( 2,-2 ) node[fill = lightgray ] ( p3 ) @xmath39 ( 0,-2 ) node ( p4 ) @xmath40 ( 1,1.6 ) node[fill = lightgray ] ( p5 ) @xmath41 ;    ( p1 ) edge[- > ] ( p2 ) ( p2 ) edge[- > ] ( p1 )    ( p2 ) edge[- > ] ( p3 ) ( p3 ) edge[- > ] ( p2 )    ( p3 ) edge[- > ] ( p4 ) ( p4 ) edge[- > ] ( p3 )    ( p1 ) edge[- > ] ( p4 ) ( p4 ) edge[- > ] ( p1 )    ( p2 ) edge[- > ] ( p5 ) ( p5 ) edge[->,bend right=60 ] ( p4 )    ( p4 ) edge[- > ] ( p2 ) ;    next we define commonly used semantics of afs , see the survey of @xcite  .",
    "we consider a semantics @xmath42 as a mapping that assigns to each af @xmath7 a family @xmath43 of sets of arguments , called _",
    "extensions_. we denote by , , , and the _ admissible _ , _ preferred _ , _ complete _ , _ semi - stable _ and _ stable _ semantics , respectively .",
    "these five semantics are characterized by the following conditions which hold for each af @xmath7 and each conflict - free set @xmath44 .",
    "* @xmath45 if each @xmath46 is defended by @xmath28 .",
    "* @xmath47 if @xmath45 and there is no @xmath48 with @xmath49 .",
    "* @xmath50 if @xmath45 and every argument that is defended by @xmath28 is contained in @xmath28 .",
    "* @xmath51 if @xmath45 and there is no @xmath52 with @xmath53 .",
    "* @xmath54 if @xmath55 .",
    "let @xmath7 be an af , @xmath26 and @xmath56 , @xmath57 , @xmath58 , @xmath59 , @xmath60 .",
    "the argument @xmath5 is _ credulously accepted _ in @xmath27 with respect to @xmath42 if @xmath5 is contained in some extension @xmath61 , and @xmath5 is _ skeptically accepted _ in @xmath27 with respect to @xmath42 if @xmath5 is contained in all extensions @xmath62 .",
    "each semantics @xmath42 gives rise to the following two fundamental computational problems : @xmath42-credulous acceptance and @xmath42-skeptical acceptance , in symbols @xmath63 and @xmath64 , respectively .",
    "both problems take as instance an af @xmath7 together with an argument @xmath65 .",
    "problem @xmath63 asks whether @xmath27 is credulously accepted in @xmath27 , problem @xmath64 asks whether @xmath27 is skeptically accepted in @xmath27 .",
    "table  [ tab : complexity ] , summarizes the complexities of these problems for the considered semantics  ( see @xcite ) .",
    ".complexity of credulous and skeptical acceptance for various semantics @xmath42 . [ cols=\"^,^,^\",options=\"header \" , ]     consider again the af @xmath27 from example  [ exa : af ] .",
    "we have observed above that @xmath27 has an @xmath66-backdoor @xmath67 consisting of the arguments @xmath38 and @xmath40 .",
    "we now show how to use the backdoor @xmath67 to compute all complete extensions of @xmath27 using the procedure given in theorem  [ lem : bs - sig - fpt - acyc - noeven ] .",
    "table  [ tab : ext - lab ] shows the propagations for all partial labelings of @xmath27 defined on @xmath67 together with the set @xmath68 and for every @xmath69 it is indicated whether the set @xmath68 is a complete extension of @xmath27 . because @xmath70 is acyclic it follows that @xmath71 ( see the proof of lemma  [ lem : acyc - noeven - ft ] ) and hence @xmath72 .",
    "it is now easy to compute @xmath73 as the union of all the sets @xmath68 given in table  [ tab : ext - lab ] .",
    "furthermore , using the rightmost column of table  [ tab : ext - lab ] we conclude that @xmath74 , which is in full correspondence to our original observation in example  [ exa : af - ex ] .",
    "the hardness results for @xmath63 and @xmath64 are not completely symmetric since for @xmath75 the former problem is @xmath76-complete , the latter is solvable in polynomial time ( recall table  [ tab : complexity ] ) .",
    "[ the : ca - bip ] ( 1 )  the problem @xmath63 is @xmath76-hard for afs @xmath27 with @xmath77 and @xmath78 @xmath79 @xmath80 @xmath81 @xmath82 .",
    "( 2 )  the problem @xmath64 is @xmath83-hard for afs @xmath27 with @xmath77 and @xmath84 .",
    "( sketch . )",
    "the hardness results follow by reductions from monotone @xmath39-satisfiability  @xcite and its complement , similar to reductions used by @xcite  .",
    "we illustrate the constructions in fig .",
    "[ fig : csa - bip ] .",
    "= [ circle , inner sep=3pt , draw ]    + ( 0,-1 ) node[label = left:@xmath85 ( phi ) ;    + ( 1,0 ) node[label = above:@xmath86 ( c1 ) + ( 2,0 ) node[label = above:@xmath87 ( nx1 ) + ( 3,0 ) node[label = above:@xmath88 ( nx2 ) + ( 4,0 ) node[label = above:@xmath89 ( nx3 ) ;    + ( 1,-2 ) node[label = below:@xmath90 ( nc1 ) + ( 2,-2 ) node[label = below:@xmath91 ( x1 ) + ( 3,-2 ) node[label = below:@xmath92 ( x2 ) + ( 4,-2 ) node[label = below:@xmath93 ( x3 ) ;    ( x1 ) edge[- > ] ( nx1 ) ( nx1 ) edge[- > ] ( x1 )    ( x2 ) edge[- > ] ( nx2 ) ( nx2 ) edge[- > ] ( x2 )    ( x3 ) edge[- > ] ( nx3 ) ( nx3 ) edge[- > ] ( x3 ) ;    ( x1 ) edge[- > ] ( c1 ) ( x2 ) edge[- > ] ( c1 ) ( x3 ) edge[- > ] ( c1 ) ;    ( nx1 ) edge[- > ] ( nc1 ) ( nx2 ) edge[- > ] ( nc1 ) ( nx3 ) edge[- > ] ( nc1 ) ;    ( c1 ) edge[- > ] ( phi ) ( nc1 ) edge[- > ] ( phi ) ;    = [ circle , inner sep=3pt , draw ]    + ( -1,-1 ) node[label = left:@xmath94 ( phis ) ;    + ( 0,-1 ) node[label = above:@xmath85 ( phi ) ;    + ( 1,0 ) node[label = above:@xmath86 ( c1 ) + ( 2,0 ) node[label = above:@xmath87 ( nx1 ) + ( 3,0 ) node[label = above:@xmath88 ( nx2 ) + ( 4,0 ) node[label = above:@xmath89 ( nx3 ) ;    + ( 1,-2 ) node[label = below:@xmath90 ( nc1 ) + ( 2,-2 ) node[label = below:@xmath91 ( x1 ) + ( 3,-2 ) node[label = below:@xmath92 ( x2 ) + ( 4,-2 ) node[label = below:@xmath93 ( x3 ) ;    ( x1 ) edge[- > ] ( nx1 ) ( nx1 ) edge[- > ] ( x1 )    ( x2 ) edge[- > ] ( nx2 ) ( nx2 ) edge[- > ] ( x2 )    ( x3 ) edge[- > ] ( nx3 ) ( nx3 ) edge[- > ] ( x3 ) ;    ( x1 ) edge[- > ] ( c1 ) ( x2 ) edge[- > ] ( c1 ) ( x3 ) edge[- > ] ( c1 ) ;    ( nx1 ) edge[- > ] ( nc1 ) ( nx2 ) edge[- > ] ( nc1 ) ( nx3 ) edge[- > ] ( nc1 ) ;    ( c1 ) edge[- > ] ( phi ) ( nc1 ) edge[- > ] ( phi ) ;    ( phi ) edge[<- ] ( phis ) ( phi ) edge[- > ] ( phis ) ;    [ the : ca - sym ] ( 1 )  the problem @xmath63 is @xmath76-hard for afs @xmath27 with @xmath95 and @xmath78 @xmath79 @xmath80 @xmath81 @xmath82 . ( 2 )   the problem @xmath64 is @xmath83-hard for afs @xmath27 with @xmath95 and @xmath84 .",
    "( sketch . )",
    "we use a reduction from 3-satisfiability  @xcite and its complementary problem , similar to reductions used by @xcite  .",
    "we illustrate the reductions in fig .",
    "[ fig : csa - sym ] .    = [ circle , inner sep=3pt , draw ]    + ( 0,-0.3 ) node[label = above:@xmath85 ( phi ) ;    + ( -2.5,-2 ) node[label = below:@xmath91 ( x1 ) + ( -1.5,-2 ) node[label = below:@xmath87 ( nx1 )    + ( -0.5,-2 ) node[label = below:@xmath92 ( x2 ) + ( 0.5,-2 ) node[label = below:@xmath88 ( nx2 )",
    "+ ( 1.5,-2 ) node[label = below:@xmath93 ( x3 ) + ( 2.5,-2 ) node[label = below:@xmath89 ( nx3 ) ;    + ( -1.75,-1 ) node[label = left:@xmath86 ( c1 ) + ( 0,-1 ) node[label = left:@xmath96 ( c2 ) + ( 1.75,-1 ) node[label = right:@xmath97 ( c3 ) ;    ( x1 ) edge[- > ] ( nx1 ) ( nx1 ) edge[- > ] ( x1 )    ( x2 ) edge[- > ] ( nx2 ) ( nx2 ) edge[- > ] ( x2 )    ( x3 ) edge[- > ] ( nx3 ) ( nx3 ) edge[- > ] ( x3 ) ;    ( x1 ) edge[- > ] ( c1 ) ( x2 ) edge[- > ] ( c1 ) ( x3 ) edge[- > ] ( c1 )    ( nx1 ) edge[- > ] ( c2 ) ( x2 ) edge[- > ] ( c2 ) ( nx3 ) edge[- > ] ( c2 )    ( nx1 ) edge[- > ] ( c3 ) ( nx2 ) edge[- > ] ( c3 ) ( nx3 ) edge[- > ] ( c3 )    ( x1 ) edge[<- ] ( c1 ) ( x2 ) edge[<- ] ( c1 ) ( x3 ) edge[<- ] ( c1 )    ( nx1 ) edge[<- ] ( c2 ) ( x2 ) edge[<- ] ( c2 ) ( nx3 ) edge[<- ] ( c2 )    ( nx1 ) edge[<- ] ( c3 ) ( nx2 ) edge[<- ] ( c3 ) ( nx3 ) edge[<- ] ( c3 ) ;    ( c1 ) edge[- > ] ( phi ) ( c2 ) edge[- > ] ( phi ) ( c3 ) edge[- > ] ( phi ) ;    = [ circle , inner sep=3pt , draw ]    + ( 0,.3 ) node[label = above:@xmath94 ( phis ) ;    + ( 0,-.3 ) node[label = left:@xmath85 ( phi ) ;    + ( -2.5,-2 ) node[label = below:@xmath91 ( x1 ) + ( -1.5,-2 ) node[label = below:@xmath87 ( nx1 )    + ( -0.5,-2 ) node[label = below:@xmath92 ( x2 ) + ( 0.5,-2 ) node[label = below:@xmath88 ( nx2 )    + ( 1.5,-2 ) node[label = below:@xmath93 ( x3 ) + ( 2.5,-2 ) node[label = below:@xmath89 ( nx3 ) ;    + ( -1.75,-1 ) node[label = left:@xmath86 ( c1 ) + ( 0,-1 ) node[label = left:@xmath96 ( c2 ) + ( 1.75,-1 ) node[label = right:@xmath97 ( c3 ) ;    ( x1 ) edge[- > ] ( nx1 ) ( nx1 ) edge[- > ] ( x1 )    ( x2 ) edge[- > ] ( nx2 ) ( nx2 ) edge[- > ] ( x2 )    ( x3 ) edge[- > ] ( nx3 ) ( nx3 ) edge[- > ] ( x3 ) ;    ( x1 ) edge[- > ] ( c1 ) ( x2 ) edge[- > ] ( c1 ) ( x3 ) edge[- > ] ( c1 )    ( nx1 ) edge[- > ] ( c2 ) ( x2 ) edge[- > ] ( c2 ) ( nx3 ) edge[- > ] ( c2 )    ( nx1 ) edge[- > ] ( c3 ) ( nx2 ) edge[- > ] ( c3 ) ( nx3 ) edge[- > ] ( c3 )    ( x1 ) edge[<- ] ( c1 ) ( x2 ) edge[<- ] ( c1 ) ( x3 ) edge[<- ] ( c1 )    ( nx1 ) edge[<- ] ( c2 ) ( x2 ) edge[<- ] ( c2 ) ( nx3 ) edge[<- ] ( c2 )    ( nx1 ) edge[<- ] ( c3 ) ( nx2 ) edge[<- ] ( c3 ) ( nx3 ) edge[<- ] ( c3 ) ;    ( c1 ) edge[- > ] ( phi ) ( c2 ) edge[- > ] ( phi ) ( c3 ) edge[- > ] ( phi ) ;    ( phi ) edge[- > ] ( phis ) ( phis ) edge[- > ] ( phi ) ;",
    "in this section we compare our new structural parameters @xmath98 and @xmath99 to the parameters treewidth and clique - width that have been introduced to the field of abstract argumentation by @xcite   and @xcite  , respectively . due to space requirements",
    "we can not give the definitions of these parameters and must refer the reader to the above references .",
    "the following two propositions show that treewidth and clique - width are both incomparable to our distance parameters .    there are acyclic and noeven afs that have arbitrarily high treewidth and clique - width .",
    "consider any symmetric af @xmath27 of high treewidth or clique - width together with an arbitrary but fixed ordering @xmath100 of the arguments of @xmath27 . by deleting all attacks from an argument @xmath5 to an argument @xmath6 with @xmath101",
    "we obtain an acyclic af @xmath102 whose treewidth and clique - width is at least as high as the treewidth and clique - width of @xmath27 , but @xmath103 .",
    "there are afs with bounded treewidth and clique - width where @xmath104 and @xmath105 are arbitrarily high .",
    "consider the af @xmath27 that consists of @xmath106 disjoint directed cycles of even length .",
    "it is easy to see that the treewidth and the clique - width of @xmath27 are bounded by a constant but @xmath107 .",
    "we have introduced a novel approach to the efficient solution of acceptance problems for abstract argumentation frameworks by `` augmenting '' a tractable fragment . this way the efficient solving techniques known for a restricted fragment , like the fragment of acyclic argumentation frameworks , become generally applicable to a wider range of argumentation frameworks and thus relevant for real - world instances .",
    "our approach is orthogonal to decomposition - based approaches and thus we can solve instances efficiently that are hard for known methods .",
    "the augmentation approach entails two tasks , the detection of a small backdoor and the evaluation of the backdoor . for the first task we could utilize recent results from fixed - parameter algorithm design , thus making results from a different research field applicable to abstract argumentation . for the second task",
    "we have introduced the concept of partial labelings , which seems to us a useful tool that may be of independent interest . in view of the possibility of an augmentation ,",
    "our results add significance to known tractable fragments and motivate the identification of new tractable fragments . for future research",
    "we plan to extend our results to other semantics and new tractable fragments .",
    "w. dvok , s. szeider , and s. woltran .",
    "reasoning in argumentation frameworks of bounded clique - width . in p.",
    "baroni , f. cerutti , m. giacomin , and g.  r. simari , eds . , _",
    "comma 2010 _ , volume 216 of _ frontiers in artificial intelligence and applications _ , pages 219230 .",
    "ios , 2010 .",
    "s. modgil and m. caminada .",
    "proof theories and algorithms for abstract argumentation frameworks . in i. rahwan and g. simari , eds . ,",
    "_ argumentation in artificial intelligence _ ,",
    "pages 105132 .",
    "springer , 2009 ."
  ],
  "abstract_text": [
    "<S> we present a new and compelling approach to the efficient solution of important computational problems that arise in the context of abstract argumentation . </S>",
    "<S> our approach makes known algorithms defined for restricted fragments generally applicable , at a computational cost that scales with the distance from the fragment . </S>",
    "<S> thus , in a certain sense , we gradually augment tractable fragments . </S>",
    "<S> surprisingly , it turns out that some tractable fragments admit such an augmentation and that others do not .    </S>",
    "<S> more specifically , we show that the problems of credulous and skeptical acceptance are fixed - parameter tractable when parameterized by the distance from the fragment of acyclic argumentation frameworks . </S>",
    "<S> other tractable fragments such as the fragments of symmetrical and bipartite frameworks seem to prohibit an augmentation : the acceptance problems are already intractable for frameworks at distance 1 from the fragments .    </S>",
    "<S> for our study we use a broad setting and consider several different semantics . for the algorithmic results we utilize recent advances in fixed - parameter tractability . </S>"
  ]
}
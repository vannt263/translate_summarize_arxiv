{
  "article_text": [
    "in this paper , we focus on searching geometrically similar proteins on protein structural database .",
    "geometric similarity on protein 3d structures are known to be highly conserved during evolutions compared to one dimensional amino - acid sequence identity  @xcite .",
    "therefore , some proteins with different sequences may indeed share the same or highly similar functionality , or proteins with high sequence homology may have different functionality  @xcite .",
    "our proposed framework , by using the protein 3d structure , detects similar proteins with non - homologous sequences as well .",
    "the structure - based search identifies the pairs with high structural similarities with the following two types : ( 1 ) whole structure similarity comparing global structures and ( 2 ) sub - structure similarity comparing similar sub - structures shared by the pairs . in this paper , we focus on the sub - structure similarity , as it is studied to be more appropriate than whole structure similarity , for finding functionally related proteins  @xcite .",
    "this finding can be explained by the fact that proteins with similar global structures may not share similar functionality when their functional regions , or sub - structures , such as active or binding sites are different  @xcite .",
    "more specifically , this paper studies the problem of searching similar proteins to the given query protein , which can be retrieved by the following two types of queries .",
    "first , one can use a sub - structure of protein , or a patch , as a query and retrieve the proteins with the similar 3d structures .",
    "we name this type of query lspm ( local spatial pattern matching ) , where a query pattern is much smaller than proteins in the database .",
    "second , one can use a protein as a query and search the sub - structure databases , which we call rlspm ( reverse lspm ) .",
    "we aim at developing an efficient method for rlspm . between the two problems , lspm and rlspm , we focus on the latter , as it is more ( 1 ) practical yet ( 2 ) general .",
    "first , regarding _ practicality _ , while lspm requires the prior knowledge on a query protein , by requiring users to identify `` meaningful '' query patches from a protein as a query . to ensure high - quality results ,",
    "those patches should be related to protein functions , which is hard to know in advance for a protein with an unknown function .",
    "second , regarding _ generality _",
    ", rlspm can be considered to be more general , in the sense that its solution can straightforwardly be used to answer lspm , as the two problems are essentially the same , except whether query patterns are relatively larger ( rlspm ) or data pattern instances are ( lspm ) . however , while databases readily offer efficient access methods for large data instances , _",
    "e.g. _ , indices , it is more challenging to efficiently support large query structures . in that sense",
    ", a solution to lspm , not considering large queries , is likely to incur huge costs when applied to rlspm .",
    "however , an efficient solution to rlspm designing a sophisticate approach to consider large query patterns will efficiently answer lspm as well .",
    "this paper proposes a framework for rlspm based on geometric hashing technique .",
    "our proposed framework , by identifying matches sharing functionally important regions , can contribute to predicting the functions of newly discovered proteins and moreover to designing more effective drugs .",
    "more specifically , we summarize the contributions of our paper as follows :    * we develop an efficient and effective way to adopt geometric hashing for our target problem of rlspm . *",
    "we study an incremental maintenance scheme for grid structure to accommodate the insertion of large protein structures .",
    "* we extensively validate our proposed framework over large - scale data using both annotated and non - annotated proteins as queries .",
    "the rest of the paper is organized as follows .",
    "we presents the representation of protein 3d structure and nave adoption of geometric hashing technique to our problem in section [ sec : preliminary ] .",
    "next , we describe our proposed method in section [ sec : algorithm ] .",
    "section [ sec : discussion ] presents our experimental results .",
    "section [ sec : conclusion ] concludes our work and presents some future work .",
    "a widely adopted representation of the protein 3d structure used in prior works is based on an approximation using @xmath1 and a pseudo atom ( the centroid of the side chain ) .",
    "this representation approximates all the atoms in the side chain to one pseudo atom to reduce both time and space complexity for protein comparison methods .",
    "however , this approximation is not appropriate of our target problem focusing on functional region , as atoms in side chains , among all the atoms , are generally associated with the functional regions  @xcite .",
    "therefore , approximating atoms in the side chain compromises the precision of the results .    in a clear contrast",
    ", we represent the 3d structures using all the atomic coordinates for query proteins and patches , in order not to compromise the precision . as adopting this",
    "representation increases the time and space complexity , we will develop algorithms and access methods to optimize such cost as we will describe in section  [ sec : algorithm ] .",
    "this section develops a naive algorithm as a baseline approach , adopting geometric hashing to identify functional regions of a query protein by scanning the patches in the database .",
    "the geometric hashing technique  @xcite was invented originally for object recognition in the field of computer vision , which has been adopted to compare protein 3d structures as well in many previous studies  @xcite . in @xcite and @xcite",
    ", they adopted geometric hashing to identify substructures ( 3d motifs ) of a query protein , which are nearly identical with substructures of proteins in the database .",
    "pennec and ayache proposed a comparison method for two given proteins .",
    "it can be extended to the comparison of a query protein with proteins in the database  @xcite .",
    "tess  @xcite used geometric hashing for the problem similar to lspm , searching proteins in the database which contain user defined substructure .",
    "in contrast , our target problem is rlspm , assuming a large - scale database of 3d substructures ( patches ) , on which a whole 3d protein structure is used as a query . while straightforwardly adopting",
    "the geometric hashing technique can be a solution to our problem , this nave approach incurs both space and time complexity . in section  [ sec : algorithm ] , we will discuss the drawbacks of this nave approach in details , then we will propose algorithms significantly outperforming it .",
    "more specifically , the geometric hashing can be adopted to our target problem in the following two steps  the preprocessing step and the matching step .",
    "first , the _ preprocessing step _ is applied to all patches to generate a gh table dividing a whole space into equal - sized cells occupied with atoms .",
    "the origin is located at the center of gh table and each cell contains the information of atoms belonging to the cell , which will be used in the next step .",
    "then , the _ preprocessing step _ proceeds to generate all possible coordinates system ( cs ) .",
    "the cs is determined by three non - collinear atoms , which can be one of @xmath2 possible combinations for a patch with @xmath3 atoms . to distinguish css , we assign each cs a unique number ( hereafter we call it _ rfid _ ) then we store all possible combinations ( _ rfid _ and coordinate ) of atoms into the corresponding cells .",
    "second , the _ matching step _ is to find similar patches for a given query protein .",
    "the gh table built on the patch database is matched with a set of transformed atoms by each cs of a query protein . as a result",
    ", we obtain a list of _ rfid _ pairs ( _ rfid _ of the patch database , _ rfid _ of a query protein ) which have matching scores larger than a user - defined threshold value . in the matching step ,",
    "a matching is carried out by searching the cell of gh table corresponding to an atom of the query protein .",
    "if an atom @xmath4 of the query protein is located in a non - empty cell @xmath5 of the gh table , we consider that @xmath4 is _ matched _ with all atoms in @xmath5 .",
    "the matching score of _ rfid _ pair is the number of _ matched _ atoms divided by the number of atoms in the patch .",
    "the matching step is repeated for all possible css of the query protein .",
    "this section describes how to efficiently evaluate the rlspm query .",
    "we provides enhancement strategies for two steps of geometric hashing technique .",
    "based on these enhancement strategies , we design our proposed algorithm .",
    "this section discusses the first step of our proposed algorithm , in which all the atoms of each patch are transformed and inserted into a gh table for all possible coordinate system .",
    "contrast to the nave algorithm , we adopt the sub - sampling scheme to reduce the space requirement of gh table .",
    "more specifically , we define one cs for each residue using just three atoms ( @xmath1 , n , and c atoms ) of a residue . a unique number is assigned for each cs .",
    "we call it _ rfid _ as in geometric hashing method . for each atom transformed by a cs ,",
    "we insert coordinates of the atom and _ rfid _ of the cs into the cell of gh table corresponding to the coordinates of the atom .",
    "recall that the nave algorithm requires the space complexity @xmath6 for each protein 3d structure where @xmath3 is the number of atoms .",
    "however , in the proposed preprocessing step , the total number of cs is equal to to the number of residues in protein 3d structure . with the sub - sampling ,",
    "the space complexity is reduced to @xmath7 where @xmath3 is the number of atoms and @xmath8 ( @xmath9 ) is the number of residues .",
    "in addition to sub - sampling , we also build a disk - based gh table to ensure the scalability to handle a large - scale data beyond the size of memory . in a disk - based gh table , cells are stored in a secondary memory instead of a main memory . as a result",
    ", the size of gh table is not restricted within that of main memory .",
    "after we insert all patches in the database into gh table , we then sort the cells of gh table in the order of z - value  @xcite , which enables single access per each cell during matching step .",
    "a z - value is assigned to each cell according to its location , and all cells in gh table are sorted in the order of z - value .",
    "the z - value is easily calculated by interleaving bit - strings of each axis when comparing two cells in two gh tables , we can use this unique value to easily determine whether the two cells are in the same location .",
    "we now move on to discuss our second step of retrieving similar patches in the database for the given query protein .",
    "in particular ,",
    "we first build a gh table for the given query protein , then match the _ rfid _ of query protein with the _ rfid_s of the patches in the database .",
    "we then retrieve all the matches with matching score higher than the given threshold .    as a matching score",
    ", we use the ratio of the number of overlapped cells in a query protein with the cells in a patch to the number of cells in a patch . note our matching score",
    "is defined in the level of cells and not in the level of atoms .",
    "however , we can adjust the cell size @xmath10 , to decrease to obtain the results with high accuracy or to increase for efficiency .    with the matching score metrics",
    ", we now describe the overall structure of our algorithms .",
    "first , a gh table is built for a query protein with the similar way of the preprocessing step .",
    "the only difference from building the gh table for patch database is that we only consider atoms within @xmath11 from origin .",
    "we set @xmath11 to the size of the largest patch , the size of matches is always less than @xmath11 .",
    "hereafter we call the gh table of a query protein @xmath12 and the gh tableof patch database @xmath13 .",
    "second , for each gh table , the cell with the smallest z - value is loaded into the main memory .",
    "as the gh table was sorted in the order of z - value , this is done by scanning each gh table in the sorted order . during this scan ,",
    "z - values of current two cells are checked if the z - value of a cell from @xmath13 is bigger than that from @xmath12 , the next cell of @xmath12 is fetched into the memory and the equality test is performed again for a newly loaded cell .",
    "when the two cells have the same z - values , we update the matching scores between all _ rfid _ pairs of a patch and a query protein .",
    "update can be done by adding the number of atoms with the same _ rfid _ in a cell of @xmath13 to the previous score of each _ rfid _ of a query protein .",
    "the matching scores are stored in a temporary file ( hereafter called the _ score table _ ) in case its size is too large to keep in the main memory .",
    "after the above update processes for all the overlapped cells , all the values in the score table , _ i.e. _ , _ rfid _ of patch database , _ rfid _ of a query protein , is divided by the size of the patch corresponding to _ rfid _ of patch database .",
    "the size of patch is the number of all atoms in it . from the score table , we extract only the _ rfid _ pairs with matching scores higher than the given threshold value called protein - patch threshold @xmath14 . in other words , our proposed algorithm will report the sub - regions of a query protein which are structurally similar to some patches with higher matching scores than @xmath14 .",
    "in this section , we first describe how to build the patch database from existing databases such as pdb  @xcite and csa  @xcite in section  [ sec : ppd ] .",
    "we then validate the reliability of our proposed algorithm over all protein 3d structures from pdb .",
    "more specifically , for the proteins without annotated patches , we compute reliability using ` keyword recovery ' used in the field of protein - protein interaction ( section  [ sec : noannoprotein ] ) .      in this section ,",
    "we discuss how we build ppd ( protein patch database ) , by extracting functional regions ( patches ) from two existing protein structure databases , _",
    "i.e. _ , pdb and csa .",
    "first , pdb  @xcite contains the 3d coordinates of atoms and functional information . for some proteins in this database with",
    " known \" functional regions , residues directly involved with those regions are annotated ( in ` site ' record ) .",
    "we collected atomic coordinates for those residues , _",
    "i.e. _ , @xmath15 patches , inserted into ppd .",
    "second , csa  @xcite contains enzyme active sites and catalytic residues in enzymes , based on the functional annotations of pdb and swiss - prot database .",
    "more specifically , csa provides two types of structural templates ca / cb atom template and functional atom template .",
    "a ca / cb atom template provide only ca or cb atom coordinates and a functional atom template provide atomic coordinates of directly related atoms to interact its substrates .",
    "in particular , we use the ca / cb atom template of csa version @xmath16 to obtain functionally important residues . for these residues , we then generate a patch , by extracting atomic coordinates belong to those residues , _",
    "i.e. _ , @xmath17 templates in csa version @xmath16 . among them",
    "@xmath18 templates were identical to the patches extracted from pdb as csa is based on pdb .",
    "we remove such duplicates and insert the remaining @xmath19 patches of csa into ppd .      in this section",
    ", we discuss our validation using non - annotated proteins .",
    "non - annotated proteins mean that there is no patch annotated on them .",
    "therefore , when using the non - annotated proteins as queries , the matching results are expected to contain matching pairs of a query protein and matching patches that are not annotated on the query protein .",
    "we first discuss the measure that can be used to analyze the reliability of the results when using non - annotated proteins as queries .",
    "we will then show our reliability results .    as a reliability metric",
    ", we adopt ` keyword recovery '  @xcite used in the field of ppi ( protein - protein interaction ) for validating results .",
    "more specifically , this metric compares the annotation keywords of two proteins and calculates the true positive ( tp ) rate . as performing _ in vivo",
    "_ or _ in vitro _ experiments to validate the functional relationships of every pair is infeasible , we adopt this indirect measure instead",
    ".    the tp rate is calculated by following formula  @xcite .",
    "@xmath20 where @xmath21 is the ratio of pairs with the same keywords from the given dataset .",
    "@xmath22 is the ratio of pairs with the same keywords among all pairs in the given dataset .",
    "@xmath23 is the ratio of pairs with the same keywords in true matching pairs .",
    "we set @xmath23 to @xmath24 as in  @xcite .    to adopt the ` keyword recovery ' method , annotated keywords",
    "are needed for query proteins and patches .",
    "we use keywords about the biological process and cellular component in gene ontology  @xcite . in case of the patch",
    ", we use keywords of the protein from which the patch has been extracted , because there is no annotation for a particular patch .    using the reliability measure",
    ", we calculate the true positive rate for the matching result which is a list of matching pairs with higher matching scores than @xmath14 .",
    "in addition to @xmath14 , we introduce an another parameter @xmath25 that restricts matching pairs whose structural identity is bigger then @xmath25 to eliminate the redundancy in the matching result .",
    "we perform our algorithm to compute structural identity between the query protein and the protein from which `` matched '' patch is extracted .",
    "if the score between two proteins is bigger than some threshold value ( @xmath25 ) , two proteins are regarded as same protein and corresponding matching pair is thrown away from the result set for validation .",
    "figure  [ fig : tprate ] shows the tp rates for varying @xmath14 and @xmath25 .",
    "we only present the results when the biological process is used as keywords . because there are few entries on which cellular components are annotated , we omit the result of cellular component .",
    "we consider @xmath14 to be in the range from @xmath0 to @xmath26 .",
    "when @xmath14 is low , it frequently occurs for a query protein to be matched with a patch by chance .",
    "this means lots of meaningless matching pairs could be included in the result .",
    "therefore , we remove those matching pairs from the result by setting @xmath14 to a value higher than @xmath0 .    as @xmath14 and @xmath25 is set to @xmath27 and @xmath28 respectively , we calculate the tp rates of the results given by two threshold values .",
    "as shown in figure  [ fig : tprate ] the tp rates decrease for lower value of @xmath14 when @xmath25 is less than @xmath29 .",
    "this observation indicates that the number of pairs ( query protein , patch ) which are matched by chance increases according as @xmath14 is decreasing .",
    "as @xmath14 increases ( i.e. more precise matching ) overall tp rate also increases .",
    "this shows the specificity of functional site .",
    "two parameters , @xmath14 and @xmath25 have influence on the reliability of the matching result .",
    "we recommend that @xmath14 is set to the value between @xmath30 and @xmath24 .",
    "because the interaction between proteins generally has high specificity , the structural similarity between a query protein and a patch should be high to obtain the meaningful matching results . for @xmath25",
    ", we recommend users to set it according to the application .",
    "our experiment shows that the tp rate is at least @xmath0 when @xmath25 and @xmath14 are set as our recommendation .",
    "in this paper , we study sub - structure similarity search on protein 3d structural database .",
    "we present two types of sub - structure similarity search : lspm and reverse lspm . between them , we focus on reverse lspm problem because it is more practical and general then lspm . toward the goal , we introduced our improved algorithm which significantly outperforms adopting geometric hashing technique  as is \" in terms of both storage overhead and execution time . more specifically , to reduce storage overhead , we applied a sub - sampling technique to coordinate system set and developed a disk - based gh table for accommodating a large scale of query protein patches in the database .",
    "furthermore , to reduce execution time , we restricted a query structure within a reasonable range , namely within maximum patch size , and employed the z - ordering to eliminate redundant accesses which requires only a single access per a cell of gh table by concurrently scanning two gh table sorted in the order of z - values .",
    "the reliability of proposed method was validated using our protein patch database which we build by extracting annotated residues from pdb and csa .",
    "the true positive rate is at least @xmath0 under recommended parameter value .",
    "we are in the process of validating the reliability of our method over other protein structural database such as protein - protein interface database  @xcite .",
    "michael ashburner , catherine  a. ball , judith  a. blake , david botstein , heather butler , j.  michael cherry , allan  p. davis , kara dolinski , selina  s. dwight , janan  t. eppig , midori  a. harris , david  p. hill , laurie issel - tarver , andrew kasarskis , suzanna lewis , john  c. matese , joel  e. richardson , martin ringwald , gerald  m. rubin , and gavin sherlock . gene ontology : tool for the unification of biology .",
    ", 25(1):2529 , 2000 .",
    "andrew  c. wallace , neera borkakoti , and janet  m. thornton .",
    "tess : a geometric hashing algorithm for deriving 3d coordinate templates for searching structural databases .",
    "application to enzyme active sites .",
    ", 6(11):23082323 , 1997 ."
  ],
  "abstract_text": [
    "<S> as the structural databases continue to expand , efficient methods are required to search similar structures of the query structure from the database . </S>",
    "<S> there are many previous works about comparing protein 3d structures and scanning the database with a query structure . </S>",
    "<S> however , they generally have limitations on practical use because of large computational and storage requirements .    </S>",
    "<S> we propose two new types of queries for searching similar sub - structures on the structural database : lspm ( local spatial pattern matching ) and rlspm ( reverse lspm ) . between two types of queries , </S>",
    "<S> we focus on rlspm problem , because it is more practical and general than lspm . as a nave algorithm </S>",
    "<S> , we adopt geometric hashing techniques to rlspm problem and then propose our proposed algorithm which improves the baseline algorithm to deal with large - scale data and provide an efficient matching algorithm . </S>",
    "<S> we employ the sub - sampling and z - ordering to reduce the storage requirement and execution time , respectively . </S>",
    "<S> we conduct our experiments to show the correctness and reliability of the proposed method . </S>",
    "<S> our experiment shows that the true positive rate is at least @xmath0 using the reliability measure . </S>"
  ]
}
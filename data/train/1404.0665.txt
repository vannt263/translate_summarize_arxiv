{
  "article_text": [
    "to unify quantum computing and classical computing under the same process algebra framework@xcite@xcite@xcite@xcite@xcite , is attractive and has an important significance , because most quantum communication protocols involve quantum information and classical information , quantum computing and classical computing .",
    "there are several so - called quantum process algebra , such as cqp ( communicating quantum processes)@xcite@xcite , qpalg ( quantum process algebra)@xcite@xcite@xcite@xcite , qccs@xcite@xcite@xcite@xcite@xcite , qacp@xcite .",
    "these works try to give quantum protocols and quantum computing a process algebra foundation , some are for pure quantum computing , and the other unify quantum computing and classical computing",
    ".    there is one core concept called entanglement which is unique in quantum protocols and quantum computing .",
    "unfortunately , this mechanism has not been solved in quantum process algebra until now , though there are a few theoretical works on entanglement , such as types for quantum computing@xcite .    in this paper , we give entanglement a process algebra foundation by treating entanglement as a kind of parallelism . based on our previous work qacp",
    ", we introduce a shadow constant quantum operation @xmath0 and a new kind of entanglement merge @xmath1 to model entanglement in quantum protocols and quantum computing .",
    "we extend the new kind of parallelism into the whole qacp to make that it can verify quantum protocols involving quantum information with entanglement and classical information mixed .",
    "this work uses some results of the previous works , especially qccs@xcite and qacp@xcite , in the following ways .",
    "( 1 ) we still use the concept of a quantum process configuration @xmath2 @xcite @xcite @xcite @xcite @xcite @xcite @xcite @xcite @xcite@xcite , which is usually consisted of a process term @xmath3 and state information @xmath4 of all ( public ) quantum information variables .",
    "( 2 ) like qccs@xcite and qacp@xcite , quantum operations are chosen to describe transformations of quantum states , and behave as the atomic actions of a pure quantum process .",
    "quantum measurements are treated as quantum operations , so probabilistic bisimilarity are avoided .",
    "this paper is organized as follows . in section 2 ,",
    "we introduce some preliminaries , including quantum mechanics , equational logic , structural operational semantics , and quantum process algeba qacp .",
    "we model entanglement as a kind of parallelism in section 3 and extend this new kind of parallelism into the whole qacp in section 4 . in section 5",
    ", we verify a quantum protocol which mixes quantum information ( with entanglement ) and classical information .",
    "finally , we conclude this paper in section 6 .",
    "for convenience of the reader , we introduce some basic concepts about basic linear algebra , basic quantum mechanics ( please refer to @xcite for details ) , equational logic , structural operational semantics , process algebra acp ( please refer to @xcite and @xcite for more details ) and quantum process algebra qacp@xcite .",
    "* definition [ qoqm].1 ( hilbert space)*. an isolated physical system is associated with a hilbert space , which is called the state space of the system .",
    "a finite - dimensional hilbert space is a complex vector space @xmath5 together with an inner product , which is a mapping @xmath6 satisfying : ( 1)@xmath7 with equality if and only if @xmath8 ; ( 2)@xmath9 ; ( 3 ) @xmath10 , where @xmath11 is the set of complex numbers , and @xmath12 denotes the conjugate of @xmath13 ( @xmath14 ) .    * definition [ qoqm].2 ( orthonormal basis)*. for any vector @xmath15 in @xmath5 , the length @xmath16 . a vector @xmath15 with @xmath17",
    "is called a unit vector in its state space .",
    "an orthonormal basis of a hilbert space @xmath5 is a basis @xmath18 with    @xmath19    * definition [ qoqm].3 ( trace of a linear operator)*. the trace of a linear operator @xmath20 on @xmath5 is defined as    @xmath21    * definition [ qoqm].4 ( tensor products)*. the state space of a composite system is the tensor product of the state space of its components .",
    "let @xmath22 and @xmath23 be two hilbert spaces , then their tensor product @xmath24 consists of linear vectors @xmath25 , where @xmath26 and @xmath27 .    for two",
    "linear operator @xmath28 on hilbert space @xmath22 , @xmath29 on hilbert space @xmath23 , @xmath30 is defined as    @xmath31    where @xmath32 and @xmath33 .",
    "let @xmath34 and @xmath35 .",
    "then the inner product of @xmath36 and @xmath15 is defined as follows .",
    "@xmath37    * definition [ qoqm].5 ( density operator)*. a mixed state of quantum system is represented by a density operator .",
    "a density operator in @xmath5 is a linear operator @xmath4 satisfying:(1 ) @xmath4 is positive , that is , @xmath38 for all @xmath15 ; ( 2 ) @xmath39 .",
    "let @xmath40 denote the set of all positive operators on @xmath5 .",
    "* definition [ qoqm].6 ( unitary operator)*. the evolution of a closed quantum system is described by a unitary operator on its state space .",
    "a unitary operator is a linear operator @xmath41 on a hilbert space @xmath5 with @xmath42 , where @xmath43 is the identity operator on @xmath5 and @xmath44 is the adjoint of @xmath41 .    *",
    "definition [ qoqm].7 ( quantum measurement)*. a quantum measurement consists of a collection of measurement operators @xmath45 , where @xmath46 is the measurement outcomes and satisfies    @xmath47    * definition [ qoqm].8 ( quantum operation ( super operator))*. the evolution of an open quantum system can be described by a quantum operation . a quantum operation on a hilbert space @xmath5 is a linear operator @xmath48 from the space of linear operators on @xmath5 into itself satisfying : ( 1 ) @xmath49\\leq tr(\\varrho)$ ] for each @xmath50 ; ( 2 ) for any extra hilbert space @xmath51 , @xmath52 is positive if @xmath20 is a positive operator on @xmath53 , where @xmath54 is the identity operator in @xmath51 .",
    "if @xmath49= tr(\\varrho)$ ] for all @xmath50 , then @xmath48 is said to be trace - preserving .    *",
    "definition [ qoqm].9 ( relation between quantum operation and unitary operator)*.",
    "let @xmath41 be a unitary operator on the hilbert space @xmath5 , and @xmath55 for any @xmath50 .",
    "then @xmath48 is a trace - preserving quantum operation .    *",
    "definition [ qoqm].10 ( relation between quantum operation and measurement operator)*.",
    "let @xmath45 be a quantum measurement on the hilbert space @xmath5 .",
    "for each @xmath46 , let @xmath56 for any @xmath50 .",
    "the @xmath57 is a quantum operation and is not necessarily trace - preserving .",
    "we introduce some basic concepts about equational logic briefly , including signature , term , substitution , axiomatization , equality relation , model , term rewriting system , rewrite relation , normal form , termination , weak confluence and several conclusions .",
    "these concepts are coming from @xcite , and are introduced briefly as follows . about the details",
    ", please see @xcite .",
    "* definition [ elp].1 ( signature)*. a signature @xmath58 consists of a finite set of function symbols ( or operators ) @xmath59 , where each function symbol @xmath60 has an arity @xmath61 , being its number of arguments .",
    "a function symbol @xmath62 of arity _ zero _ is called a constant , a function symbol of arity one is called unary , and a function symbol of arity two is called binary .",
    "* definition [ elp].2 ( term)*. let @xmath58 be a signature .",
    "the set @xmath63 of ( open ) terms @xmath64 over @xmath58 is defined as the least set satisfying : ( 1)each variable is in @xmath63 ; ( 2 ) if @xmath65 and @xmath66 , then @xmath67 .",
    "a term is closed if it does not contain variables .",
    "the set of closed terms is denoted by @xmath68 .    to obey the quantum no - cloning theorem of quantum information , substitution of quantum information",
    "must be carefully treated@xcite , which is required to be an one - to - one mapping and the passing of quantum information is always by name , but not by value .",
    "since process algebra acp mainly concerns the algebraic properties of actions or operations@xcite , but not data or information , the substitution of terms used in this paper is just the same as classical computing .",
    "though actions or operations manipulate data or information ultimately , it is the duty of actions or operations to obey the no - cloning theorem of quantum information .    *",
    "definition [ elp].3 ( substitution)*. let @xmath58 be a signature .",
    "a substitution is a mapping @xmath69 from variables to the set @xmath63 of open terms .",
    "a substitution extends to a mapping from open terms to open terms : the term @xmath70 is obtained by replacing occurrences of variables @xmath71 in t by @xmath72 .",
    "a substitution @xmath69 is closed if @xmath73 for all variables @xmath71 .",
    "* definition [ elp].4 ( axiomatization)*. an axiomatization over a signature @xmath58 is a finite set of equations , called axioms , of the form @xmath74 with @xmath75 .",
    "* definition [ elp].5 ( equality relation)*. an axiomatization over a signature @xmath58 induces a binary equality relation @xmath76 on @xmath63 as follows .",
    "( 1)(substitution ) if @xmath74 is an axiom and @xmath69 a substitution , then @xmath77 .",
    "( 2)(equivalence ) the relation @xmath76 is closed under reflexivity , symmetry , and transitivity .",
    "( 3)(context ) the relation @xmath76 is closed under contexts : if @xmath78 and @xmath60 is a function symbol with @xmath79 , then @xmath80 .",
    "* definition [ elp].6 ( model)*. assume an axiomatization @xmath81 over a signature @xmath58 , which induces an equality relation @xmath76 . a model for @xmath81 consists of a set @xmath82 together with a mapping @xmath83 .",
    "( 1)@xmath84 is sound for @xmath81 if @xmath74 implies @xmath85 for @xmath86 ; ( 2)@xmath84 is complete for @xmath81 if @xmath85 implies @xmath74 for @xmath86 .    *",
    "definition [ elp].7 ( term rewriting system)*. assume a signature @xmath58 .",
    "a rewrite rule is an expression @xmath87 with @xmath75 , where : ( 1)the left - hand side @xmath88 is not a single variable ; ( 2)all variables that occur at the right - hand side @xmath89 also occur in the left - hand side @xmath88 .",
    "a term rewriting system ( trs ) is a finite set of rewrite rules .    *",
    "definition [ elp].8 ( rewrite relation)*. a trs over a signature @xmath58 induces a one - step rewrite relation @xmath90 on @xmath63 as follows .",
    "( 1)(substitution ) if @xmath87 is a rewrite rule and @xmath69 a substitution , then @xmath91 .",
    "( 2)(context ) the relation @xmath90 is closed under contexts : if @xmath92 and f is a function symbol with @xmath79 , then @xmath93 .",
    "the rewrite relation @xmath94 is the reflexive transitive closure of the one - step rewrite relation @xmath90 : ( 1 ) if @xmath87 , then @xmath95 ; ( 2 ) @xmath96 ; ( 3 ) if @xmath95 and @xmath97 , then @xmath98 .",
    "the concepts about structural operational semantics include labelled transition system ( lts ) , transition system specification ( tss ) , transition rule and its source , source - dependent , conservative extension , fresh operator , panth format , congruence , bisimulation , etc .",
    "these concepts are coming from @xcite@xcite , and are introduced briefly as follows . about the details ,",
    "please see @xcite .",
    "we assume a non - empty set @xmath99 of states , a finite , non - empty set of transition labels @xmath20 and a finite set of predicate symbols .",
    "* definition [ sosp].1 ( process graph)*. a process ( graph ) @xmath3 is an lts in which one state @xmath88 is elected to be the root . if the lts contains a transition @xmath100 ,",
    "then @xmath101 where @xmath102 has root state @xmath103 .",
    "moreover , if the lts contains a transition @xmath104 , then @xmath105 .",
    "( 1 ) a process @xmath106 is finite if there are only finitely many sequences @xmath107 .",
    "( 2 ) a process @xmath106 is regular if there are only finitely many processes @xmath108 such that @xmath107 .    *",
    "definition [ sosp].2 ( bisimulation)*. a bisimulation relation @xmath109 is a binary relation on processes such that : ( 1 ) if @xmath110 and @xmath111 then @xmath112 with @xmath113 ; ( 2 ) if @xmath110 and @xmath112 then @xmath111 with @xmath113 ; ( 3 ) if @xmath110 and @xmath105 , then @xmath114 ; ( 4 ) if @xmath110 and @xmath114 , then @xmath105 . two processes @xmath3 and @xmath115 are bisimilar , denoted by @xmath116 , if there is a bisimulation relation @xmath109 such that @xmath110 .",
    "* definition [ sosp].3 ( congruence)*. let @xmath58 be a signature .",
    "an equivalence relation @xmath109 on @xmath68 is a congruence if for each @xmath117 , if @xmath118 for @xmath119 , then @xmath120 .    *",
    "definition [ sosp].4 ( branching bisimulation)*. a branching bisimulation relation @xmath109 is a binary relation on the collection of processes such that : ( 1 ) if @xmath110 and @xmath111 then either @xmath121 and @xmath122 or there is a sequence of ( zero or more ) @xmath123-transitions @xmath124 such that @xmath125 and @xmath126 with @xmath113 ; ( 2 ) if @xmath110 and @xmath112 then either @xmath121 and @xmath127 or there is a sequence of ( zero or more ) @xmath123-transitions @xmath128 such that @xmath129 and @xmath130 with @xmath113 ; ( 3 ) if @xmath110 and @xmath105 , then there is a sequence of ( zero or more )",
    "@xmath123-transitions @xmath124 such that @xmath125 and @xmath131 ; ( 4 ) if @xmath110 and @xmath114 , then there is a sequence of ( zero or more ) @xmath123-transitions @xmath128 such that @xmath129 and @xmath132 . two processes",
    "@xmath3 and @xmath115 are branching bisimilar , denoted by @xmath133 , if there is a branching bisimulation relation @xmath109 such that @xmath110 .",
    "* definition [ sosp].5 ( rooted branching bisimulation)*. a rooted branching bisimulation relation @xmath109 is a binary relation on processes such that : ( 1 ) if @xmath110 and @xmath111 then @xmath112 with @xmath134 ; ( 2 ) if @xmath110 and @xmath112 then @xmath111 with @xmath134 ; ( 3 ) if @xmath110 and @xmath105 , then @xmath114 ; ( 4 ) if @xmath110 and @xmath114 , then @xmath105 .",
    "two processes @xmath3 and @xmath115 are rooted branching bisimilar , denoted by @xmath135 , if there is a rooted branching bisimulation relation @xmath109 such that @xmath110 .",
    "* definition [ sosp].6 ( quantum process configuration)*. a quantum process configuration is defined to be a pair @xmath136 , where @xmath3 is a process ( graph ) called structural part of the configuration , and @xmath50 specifies the current state of the environment , which is called its quantum part .",
    "* definition [ sosp].7 ( quantum process graph)*. a quantum process ( graph ) @xmath136 is an lts in which one state @xmath88 is elected to be the root . if the lts contains a transition @xmath137 , then @xmath138 where @xmath139 has root state @xmath103 .",
    "moreover , if the lts contains a transition @xmath104 , then @xmath140 .",
    "( 1 ) a quantum process @xmath141 is finite if and only if the process @xmath106 is finite . ( 2 )",
    "a quantum process @xmath141 is regular if and only if the process @xmath106 is regular .    *",
    "definition [ sosp].8 ( quantum transition system specification)*. a quantum process transition rule @xmath142 is an expression of the form @xmath143 , with @xmath144 a set of expressions @xmath145 and @xmath146 with @xmath147 and @xmath148 , called the ( positive ) premises of @xmath142 , and @xmath149 , called structural part of @xmath144 and denoted as @xmath150 . and",
    "@xmath151 an expression @xmath145 or @xmath146 with @xmath147 and @xmath148 , called the conclusion of @xmath142 , and @xmath149 , called structural part of @xmath151 and denoted as @xmath152 .",
    "the left - hand side of @xmath151 is called the source of @xmath142 .",
    "@xmath153 is called the structural part of @xmath142 and denoted as @xmath154 . a quantum process transition rule @xmath142",
    "is closed if and only its structural part @xmath154 is closed . a quantum transition system specification ( qtss )",
    "is a ( possible infinite ) set of transition rules .    *",
    "definition [ sosp].9 ( quantum bisimulation)*. a bisimulation relation @xmath109 is a binary relation on quantum processes such that : ( 1 ) if @xmath155 and @xmath156 then @xmath157 with @xmath158 ; ( 2 ) if @xmath155 and @xmath157 then @xmath156 with @xmath158 ; ( 3 ) if @xmath155 and @xmath140 , then @xmath159 ; ( 4 ) if @xmath155 and @xmath159 , then @xmath140",
    ". two quantum process @xmath136 and @xmath160 are bisimilar , denoted by @xmath161 , if there is a bisimulation relation @xmath109 such that @xmath155 .",
    "* definition [ sosp].10 ( relation between quantum bisimulation and classical bisimulation)*. for two quantum processes , @xmath161 , with @xmath162 , if and only if @xmath116 and @xmath163 , where @xmath4 evolves into @xmath164 after execution of @xmath3 and @xmath165 evolves into @xmath166 after execution of @xmath115 .    * definition [ sosp].11 ( quantum branching bisimulation)*. a branching bisimulation relation @xmath109 is a binary relation on the collection of quantum processes such that : ( 1 ) if @xmath155 and @xmath156 then either @xmath167 and @xmath168 or there is a sequence of ( zero or more ) @xmath123-transitions @xmath169 such that @xmath170 and @xmath171 with @xmath158 ; ( 2 ) if @xmath155 and @xmath157 then either @xmath167 and @xmath172 or there is a sequence of ( zero or more ) @xmath123-transitions @xmath173 such that @xmath174 and @xmath175 with @xmath158 ; ( 3 ) if @xmath155 and @xmath140 , then there is a sequence of ( zero or more ) @xmath123-transitions @xmath169 such that @xmath170 and @xmath176 ; ( 4 ) if @xmath155 and @xmath159 , then there is a sequence of ( zero or more ) @xmath123-transitions @xmath173 such that @xmath174 and @xmath177 . two quantum processes @xmath136 and @xmath160 are branching bisimilar , denoted by @xmath178 , if there is a branching bisimulation relation @xmath109 such that @xmath155 .",
    "* definition [ sosp].12 ( relation between quantum branching bisimulation and classical branching bisimulation)*. for two quantum processes , @xmath178 , with @xmath162 , if and only if @xmath133 and @xmath163 , where @xmath4 evolves into @xmath164 after execution of @xmath3 and @xmath165 evolves into @xmath166 after execution of @xmath115 .",
    "* definition [ sosp].13 ( quantum rooted branching bisimulation)*. a rooted branching bisimulation relation @xmath109 is a binary relation on quantum processes such that : ( 1 ) if @xmath155 and @xmath156 then @xmath157 with @xmath179 ; ( 2 ) if @xmath155 and @xmath157 then @xmath156 with @xmath179 ; ( 3 ) if @xmath155 and @xmath140 , then @xmath159 ; ( 4 ) if @xmath155 and @xmath159 , then @xmath140 .",
    "two quantum processes @xmath136 and @xmath160 are rooted branching bisimilar , denoted by @xmath180 , if there is a rooted branching bisimulation relation @xmath109 such that @xmath155 .    *",
    "definition [ sosp].14 ( relation between quantum rooted branching bisimulation and classical rooted branching bisimulation)*. for two quantum processes , @xmath180 , with @xmath162 , if and only if @xmath135 and @xmath163 , where @xmath4 evolves into @xmath164 after execution of @xmath3 and @xmath165 evolves into @xmath166 after execution of @xmath115 .",
    "acp@xcite is a kind of process algebra which focuses on the specification and manipulation of process terms by use of a collection of operator symbols . in acp",
    ", there are several kind of operator symbols , such as basic operators to build finite processes ( called bpa ) , communication operators to express concurrency ( called pap ) , deadlock constants and encapsulation enable us to force actions into communications ( called acp ) , liner recursion to capture infinite behaviors ( called acp with linear recursion ) , the special constant silent step and abstraction operator ( called @xmath181 with guarded linear recursion ) allows us to abstract away from internal computations .",
    "bisimulation or rooted branching bisimulation based structural operational semantics is used to formally provide each process term used the above operators and constants with a process graph .",
    "the axiomatization of acp ( according the above classification of acp , the axiomatizations are @xmath182 , @xmath183 , @xmath184 , @xmath184 + rdp ( recursive definition principle ) + rsp ( recursive specification principle ) , @xmath185 + rdp + rsp + cfar ( cluster fair abstraction rule ) respectively ) imposes an equation logic on process terms , so two process terms can be equated if and only if their process graphs are equivalent under the semantic model .",
    "acp can be used to formally reason about the behaviors , such as processes executed sequentially and concurrently by use of its basic operator , communication mechanism , and recursion , desired external behaviors by its abstraction mechanism , and so on .",
    "acp is organized by modules and can be extended with fresh operators to express more properties of the specification for system behaviors .",
    "these extensions are required both the equational logic and the structural operational semantics to be extended .",
    "then the extension can use the whole outcomes of acp , such as its concurrency , recursion , abstraction , etc .",
    "qacp@xcite is the first axiomatization attempt for quantum processes .",
    "a weak bisimilarity ( quantum branching bisimulation equivalence ) is established for quantum processes .",
    "this weak bisimilarity is in a non - probabilistic way that follows @xcite and can be used to model silent step and abstract internal actions .",
    "qacp still uses the framework of a quantum process configuration @xmath186 , but treating it as two relative independent part : the structural part @xmath3 and the quantum part @xmath4 , because the establishment of a sound and complete theory is dependent on the structural properties of the structural part @xmath3 .",
    "let the quantum part @xmath4 be the outcomes of execution of @xmath3 to examine and observe the function of the basic theory of quantum mechanics .",
    "qacp establishes the relationship between quantum bisimilarity and classical bisimilarity , including strong bisimilarity and weak bisimilarity , which makes an axiomatization of quantum processes possible .",
    "qacp establishes a series of axiomatizations of quantum process algebra , including bqpa ( basic quantum process algebra ) , qpap ( quantum process algebra with parallelism ) , aqcp ( algebra of quantum communicating processes ) , aqcp with guarded linear recursion , and @xmath187 with guarded linear recursion . though these axiomatizations are based on classical axiomatizations of acp which is based on the structural analysis the process @xmath3 , they are not trivial and ordinary , because it is also necessary to examine if the outcomes @xmath4 of execution of @xmath3 obey the basic quantum mechanics theory .",
    "qacp and classical acp are unified under the framework of quantum process configuration @xmath136 .",
    "this unifying means that quantum information and classical information can be mixed in qacp and quantum computing and classical computing are unified in qacp .",
    "thus , qacp can be used widely for verification of quantum communication protocols , which involve not only quantum information , but also classical information .",
    "in the following , the variables @xmath188 range over the collection of process terms , the variables @xmath189 range over the set @xmath20 of atomic quantum operations , @xmath190 , @xmath191 are closed items , @xmath123 is the special constant silent step , @xmath192 is the special constant deadlock , and the predicate @xmath193 represents successful termination after execution of the quantum operation @xmath194 , the variables @xmath189 range over the set @xmath20 of atomic quantum operations , and the variable @xmath195 range over the set @xmath196 of atomic communicating actions .",
    "quantum information are carried by particles .",
    "the simplest non - trivial quantum system is the quantum bit or qubit .",
    "a qubit s state space is the 2-dimensional space which is denoted as @xmath197 .",
    "the space @xmath197 is equipped with a standard basis composed with @xmath198 and @xmath199 .",
    "the tensor product of @xmath197 is @xmath200 for the space of two qubits and its standard basis composed with the four vectors @xmath201 , @xmath202 , @xmath203 and @xmath204 .",
    "another important basis for @xmath200 is called _ bell states _ or _ epr states _ , which contains the four vectors :    @xmath205    @xmath206    @xmath207    @xmath208    the elements of bell states are entangled states , which represent systems which are correlated with each other . and many quantum protocols and quantum computation can derive extra power of entanglement , since it is unique for quantum computing .",
    "we consider entanglement as a kind of parallelism , i.e. , information formed by entangled particles may be distributed over a long distance , and quantum operations manipulated on one particle not only change the information represented by this particle , but also those represented by other particles entangled with this particular particle dramatically without any interactions among them .",
    "this new kind of parallelism does not need any information exchange and any information channel .",
    "so , we extend the basic quantum process algebra ( bqpa ) to form a new algebra of quantum communicating processes ( aqcp ) which is also called aqcp .",
    "since process algebra , exactly acp or qacp , is a kind of algebraic manipulation on actions or quantum operations , and information are hidden by actions and quantum operations . quantum operation manipulated on one particle",
    "will change the quantum states of other entangled particles simultaneously , but , the absence of any quantum operation on other entangled particles will disturb the principles of structural operational semantics on which qacp is based . to conquer this problem , we introduce a special constant quantum operation which is called * shadow constant * @xmath0 .",
    "now , the set @xmath20 of all quantum operations is extended to @xmath209 .",
    "the shadow constant @xmath0 is always depended on some entangled particles , when a quantum operation @xmath194 is manipulated on one particle , then there will be shadow operations @xmath210 manipulated on the other entangled particles .",
    "actually , when one quantum operation @xmath194 is manipulated on one particle , the states of the other entangled particles are changed without any quantum operation .",
    "so , the behavior of the shadow operation @xmath0 is doing nothing , as the following transition rule says . this is why the shadow constant @xmath0 is called a _",
    "shadow_.    @xmath211    obviously , we can get the following two conclusions .",
    "* theorem 1*. bqpa with shadow constant is a conservative extension of bqpa .",
    "since the corresponding tss of bqpa is source - dependent , and the transition rules for the shadow constant @xmath0 contain only a fresh constant in their source , so the corresponding tss of bqpa with shadow constant is a conservative extension of that of bqpa .",
    "that means that bqpa with shadow constant is a conservative extension of bqpa .",
    "* theorem 2*. quantum bisimulation equivalence is a congruence with respect to bqpa with shadow constant .",
    "the structural part of qtsss for bqpa with shadow constant and bqpa are all in panth format , so bisimulation equivalence that they induce is a congruence . according to the definition of quantum bisimulation , quantum bisimulation equivalence",
    "that qtsss for bqpa with shadow constant induce is also a congruence .",
    "the axioms for shadow constant is shown in table [ axiomforsc ] .",
    ".axioms for shadow constant [ cols= \" < , < \" , ]     we can easily get that the new axiomatization @xmath212 is sound for aqcp modulo quantum bisimulation equivalence , and the new @xmath212 is complete for aqcp modulo quantum bisimulation equivalence .",
    "now , we consider the influence of the new aqcp with entanglement to the whole qacp , i.e. , aqcp with guarded recursion and @xmath187 with guarded recursion , which are based on aqcp .",
    "guarded recursion defines infinite computation through guarded recursion specifications .",
    "extension to guarded recursion based on the new aqcp has almost no influence comparing with that in qacp .",
    "the axiomatization @xmath212 + rdp + rsp is sound and complete for aqcp with linear recursion modulo quantum bisimulation equivalence .",
    "similarly , the new aqcp does not influence @xmath187 with guarded recursion , i.e. , @xmath213 + rsp + rdp + cfar is sound and complete for @xmath187 with guarded linear recursion , modulo quantum rooted branching bisimulation equivalence .",
    "but , entanglement merge @xmath1 makes entanglement explicit in qacp . based on the framework of quantum process configuration @xmath186 , by introducing silent step @xmath123 and abstraction operator @xmath214 , the definition of @xmath4 only records the so - called public quantum variables and claim that a @xmath123 operation only manipulates on entangled quantum variables which should be included in the so - called private variables .",
    "now , we explicitly define a new entanglement merger to model entanglement in quantum processes and this declaration can be moved away .    since",
    ", shadow constant quantum operation and entanglement merge are defined for quantum operations , i.e. , they are only valid for quantum operations . a quantum operation @xmath194 can only effect with its shadow constant @xmath210 , any other mismatch , such as @xmath194 and @xmath215 , @xmath194 and @xmath216 , a classical action @xmath217 and a quantum operation @xmath194 , will all cause a deadlock @xmath192 .",
    "this leads that qacp with entanglement merge also unify quantum and classical computing in a high level of computational logic , the same as qacp does .",
    "from now on , we call qacp which represents not only the original qacp , but also qacp with entanglement merge .",
    "with support of entanglement merge @xmath1 , now , qacp can be used to verify quantum protocols utilizing entanglement .",
    "the e91 protocol@xcite is the first quantum protocol which utilizes entanglement and mixes quantum and classical information . in this section ,",
    "we take an example of verification for the e91 protocol .",
    "the e91 protocol is used to create a private key between two parities , alice and bob .",
    "firstly , we introduce the basic e91 protocol briefly , which is illustrated in fig.[e91 ] .    1 .",
    "alice generates a string of epr pairs @xmath115 with size @xmath218 , i.e. , @xmath219 particles , and sends a string of qubits @xmath220 from each epr pair with @xmath218 to bob through a quantum channel @xmath197 , remains the other string of qubits @xmath221 from each pair with size @xmath218 .",
    "2 .   alice create two string of bits with size @xmath218 randomly , denoted as @xmath222 and @xmath223 .",
    "3 .   bob receives @xmath220 and randomly generates a string of bits @xmath224 with size @xmath218 .",
    "alice measures each qubit of @xmath221 according to a basis by bits of @xmath222 . and the measurement results would be @xmath223 , which is also with size @xmath218 .",
    "bob measures each qubit of @xmath220 according to a basis by bits of @xmath224 . and",
    "the measurement results would be @xmath225 , which is also with size @xmath218 .",
    "bob sends his measurement bases @xmath224 to alice through a public channel @xmath226 .",
    "once receiving @xmath224 , alice sends her bases @xmath222 to bob through channel @xmath226 , and bob receives @xmath222 .",
    "alice and bob determine that at which position the bit strings @xmath222 and @xmath224 are equal , and they discard the mismatched bits of @xmath222 and @xmath224 . then the remaining bits of @xmath223 and @xmath225 , denoted as @xmath227 and @xmath228 with @xmath229 .",
    "we re - introduce the basic e91 protocol in an abstract way with more technical details as fig.[e91 ] illustrates .",
    "now , @xmath230 $ ] denotes the alice s measurement operation of @xmath221 , and @xmath231}$ ] denotes the responding shadow constant ; @xmath232 $ ] denotes the bob s measurement operation of @xmath220 , and @xmath233}$ ] denotes the responding shadow constant .",
    "alice sends @xmath220 to bob through the quantum channel @xmath197 by quantum communicating action @xmath234 and bob receives @xmath220 through @xmath197 by quantum communicating action @xmath235 .",
    "bob sends @xmath224 to alice through the public channel @xmath226 by classical communicating action @xmath236 and alice receives @xmath224 through channel @xmath226 by classical communicating action @xmath237 , and the same as @xmath238 and @xmath239 .",
    "alice and bob generate the private key @xmath240 by a classical comparison action @xmath241 .",
    "let alice and bob be a system @xmath242 and let interactions between alice and bob be internal actions .",
    "@xmath242 receives external input @xmath243 through channel @xmath20 by communicating action @xmath244 and sends results @xmath245 through channel @xmath246 by communicating action @xmath247 .",
    "then the state transition of alice can be described by qacp as follows .",
    "@xmath248\\cdot a_3\\nonumber\\\\ & & a_3=\\circleds_{m[q_b;k_b]}\\cdot a_4\\nonumber\\\\ & & a_4=receive_p(b_b)\\cdot a_5\\nonumber\\\\ & & a_5=send_p(b_a)\\cdot a_6\\nonumber\\\\ & & a_6=cmp(k_{a , b},k_a , k_b , b_a , b_b)\\cdot a\\nonumber\\end{aligned}\\ ] ]    where @xmath249 is the collection of the input data .    and the state transition of bob can be described by qacp as follows .",
    "@xmath250}\\cdot b_2\\nonumber\\\\ & & b_2=m[q_b;k_b]\\cdot b_3\\nonumber\\\\ & & b_3=send_p(b_b)\\cdot b_4\\nonumber\\\\ & & b_4=receive_p(b_a)\\cdot b_5\\nonumber\\\\ & & b_5=cmp(k_{a , b},k_a , k_b , b_a , b_b)\\cdot b_6\\nonumber\\\\ & & b_6=\\sum_{d_o\\in\\delta_o}send_b(d_o)\\cdot b\\nonumber\\end{aligned}\\ ] ]    where @xmath251 is the collection of the output data",
    ".    the send action and receive action of the same data through the same channel can communicate each other , otherwise , a deadlock @xmath192 will be caused .",
    "the quantum operation and its shadow constant pair will lead entanglement occur , otherwise , a deadlock @xmath192 will occur .",
    "we define the following communication functions .",
    "@xmath252    let @xmath20 and @xmath246 in parallel , then the system @xmath242 can be represented by the following process term .",
    "@xmath253    where @xmath254 , \\circleds_{m[q_a;k_a ] } , m[q_b;k_b ] , \\circleds_{m[q_b;k_b]}\\}$ ] and @xmath255 , m[q_b;k_b],\\\\ cmp(k_{a , b},k_a , k_b , b_a , b_b)\\}$ ]",
    ".    then we get the following conclusion .",
    "* theorem 9*. the basic e91 protocol @xmath256 exhibits desired external behaviors .",
    "@xmath257\\cdot\\partial_h(a_3\\parallel b_2)\\nonumber\\\\ & & \\partial_h(a_3\\parallel b_2)=m[q_b;k_b]\\cdot\\partial_h(a_4\\parallel b_3)\\nonumber\\\\ & & \\partial_h(a_4\\parallel b_3)=c_p(b_b)\\cdot\\partial_h(a_5\\parallel b_4)\\nonumber\\\\ & & \\partial_h(a_5\\parallel b_4)=c_p(b_a)\\cdot\\partial_h(a_6\\parallel b_5)\\nonumber\\\\ & & \\partial_h(a_6\\parallel b_5)=cmp(k_{a , b},k_a , k_b , b_a , b_b)\\cdot\\partial_h(a\\parallel b_5)\\nonumber\\\\ & & \\partial_h(a\\parallel b_5)=cmp(k_{a , b},k_a , k_b , b_a , b_b)\\cdot\\partial_h(a\\parallel b_6)\\nonumber\\\\ & & \\partial_h(a\\parallel b_6)=\\sum_{d_o\\in\\delta_o}send_b(d_o)\\cdot\\partial_h(a\\parallel b)\\nonumber\\end{aligned}\\ ] ]    let @xmath258 , where e is the following guarded linear recursion specification :    @xmath259\\cdot x_4,x_4=m[q_b;k_b]\\cdot x_5,x_5=c_p(b_b)\\cdot x_{6},x_{6}=c_p(b_a)\\cdot x_{7},\\nonumber\\\\ & & x_{7}=cmp(k_{a , b},k_a , k_b , b_a , b_b)\\cdot x_{8},x_{8}=cmp(k_{a , b},k_a , k_b , b_a , b_b)\\cdot x_{9},\\nonumber\\\\ & & x_{9}=\\sum_{d_o\\in\\delta_o}send_b(d_o)\\cdot x_1\\}\\nonumber\\end{aligned}\\ ] ]    then we apply abstraction operator @xmath214 into @xmath260 .",
    "@xmath261    we get @xmath262 , that is , @xmath263 .",
    "so , the basic e91 protocol @xmath256 exhibits desired external behaviors .",
    "we explicitly model entanglement in quantum processes by introducing a shadow constant quantum operation @xmath0 and a so - called entanglement merge @xmath1 into quantum process algebra qacp .",
    "the new qacp has wide use in verification for quantum protocols , since most quantum protocols have mixtures with classical and quantum information , and also there are many quantum protocols adopting entanglement .    to maintain the principle of structural operational semantics on which qacp is based",
    ", the shadow constant quantum operation is really a kind of placeholder , and the entanglement merge @xmath1 actually does a synchronization between two interleaving processes at the point of the quantum operation and its shadows . during verification for quantum protocols ,",
    "the synchronization point and the shadow constant quantum operations are put in place during the modeling phase .",
    "but , ( 1 ) this synchronization and the shadow constant ( though it is only a shadow ) are not existing actually in quantum protocols and quantum computing ; ( 2 ) qacp is a kind of high level computational logic , though quantum and classical computing are unified under this high level computational logic , but the hidden quantum information and more technical details can not be observed . in future , more suitable theory should be pursued to satisfy the above two requirements .",
    "m. lalire and p. jorrand . : _ a process algebraic approach to concurrent and distributed quantum computation : operational semantics .",
    "_ proceedings of the 2nd international workshop on quantum programming languages , tucs general publications , 2004 : 109126 ."
  ],
  "abstract_text": [
    "<S> we explicitly model entanglement in quantum processes by treating entanglement as a kind of parallelism . </S>",
    "<S> we introduce a shadow constant quantum operation and a so - called entanglement merge into quantum process algebra qacp </S>",
    "<S> . the transition rules of the shadow constant quantum operation and entanglement merge are designed . </S>",
    "<S> we also do a sound and complete axiomatization modulo the so - called quantum bisimilarity for the shadow constant quantum operation and entanglement merge . </S>",
    "<S> then , this new type entanglement merge is extended into the full qacp . </S>",
    "<S> the new qacp has wide use in verification for quantum protocols , since most quantum protocols have mixtures with classical and quantum information , and also there are many quantum protocols adopting entanglement .    </S>",
    "<S> [ firstpage ]    quantum mechanics ; entanglement ; quantum processes ; process algebra </S>"
  ]
}
{
  "article_text": [
    "this section contains the motivation for introducing immediate snapshot complexes , coming from theoretical distributed computing .",
    "the reader interested primarily in the actual family of combinatorial simplicial complexes , which we define in this paper , and the mathematics thereof , may skip this section altogether and return to it at any later point which is deemed to be convenient .",
    "one of the core theoretical models , which is used to understand the shared - memory communication between a finite number of processes is the so - called _ immediate snapshot read / write model_. in this model , a  number of processes are set to communicate by means of a  shared memory .",
    "each process has an assigned register , and each process can perform two types of operations : _ write _ and _ snapshot read_. the write operation simply writes the entire state of the process into its assigned register ; the snapshot read operation reads the entire memory in one atomic step .",
    "the order in which a process performs these operations is controlled by the distributed protocol , whose execution is asynchronous , satisfying an additional condition .",
    "namely , we assume that at each step a group of processes gets active .",
    "first this group simultaneously writes its values to the memory , then it simultaneously performs a snapshot read .",
    "this way , each execution can be encoded by a sequence of groups of processors which become active at each turn .",
    "more details on this computational model , the associated protocol complexes and its equivalence with other models can be found in a recent book  @xcite , as well as in  @xcite .    in this paper",
    "we are motivated by the standard distributed protocols for @xmath0 processes indexed @xmath1 , where the protocol of @xmath2-th processor says to run @xmath3 rounds and then to stop .",
    "let the associate protocol complex be called @xmath4 .",
    "our first contribution is to give a rigorous purely combinatorial definition of @xmath4 . to do this ,",
    "we introduce new combinatorial objects , which we call _ witness structures _ and use them as a  language to define and to analyze this family of simplicial complexes .",
    "the special case @xmath5 corresponds to the so - called _ standard chromatic subdivision _ of a  simplex , which was previously considered in the literature , see , e.g. , @xcite , the cases where for some @xmath6 , we have @xmath7 are new .",
    "we note , that the iterated standard chromatic subdivision is a  very useful simplicial model to analyze solvability and complexity of distributed tasks , see , e.g. , recent work on the weak symmetry breaking , @xcite .",
    "let us briefly sketch the plan of the article .",
    "in section  [ sect:2 ] we define witness structures , and a few operations on them , where _ ghosting _ is the most important one .",
    "that operation will encode the combinatorics of taking simplicial boundary in the immediate snapshot complexes .",
    "in section  [ sect:3 ] , we use the language of witness structures to define the immediate snapshot complexes , and prove the important reconstruction lemma . in section  [ sect:4 ]",
    "we look at the first properties of the immediate snapshot complexes . in particular",
    ", we prove that they are pure , we look at some enumerative combinatorics connected to these complexes , and we show how the standard chromatic subdivision can be seen as an instance of immediate snapshot complex construction . in section  [ sect:5 ] we describe a canonical decomposition of the immediate snapshot complexes , and prove that topologically , they are pseudomanifolds with boundary",
    ". finally , in section  [ sect:6 ] , we explain why our immediate snapshot complexes provide correct combinatorial model for the protocol complexes of standard protocols in the immediate snapshot read / write computation model .",
    "this paper grew out of the first half of author s preprint @xcite .",
    "the second half of @xcite is focused on showing that the immediate snapshot complexes are homeomorphic to closed balls .",
    "specifically , we show that there exists a homeomorphism from an  appropriate standard simplex to the immediate snapshot complex , such that the image of every subsimplex of the standard simplex is a  subcomplex of the immediate snapshot complex .",
    "this part has already appeared in print , see  @xcite .",
    "in general , we will not define standard notions related to combinatorial simplicial complexes , and rather refer to standard monographs , see  @xcite .",
    "however , we do want to fix some notations .",
    "we let @xmath8 denote the set of nonnegative integers @xmath9 . for a  nonnegative integer @xmath10",
    ", we shall use @xmath11 $ ] to denote the set @xmath12 , with an  additional convention that @xmath13={\\emptyset}$ ] . for a  finite subset @xmath14 , such that @xmath15 , we let @xmath16 denote the _ second _ largest element , i.e. , @xmath17 . for a set @xmath18 and an element @xmath19 , we set @xmath20    whenever @xmath21 is a  family of topological spaces , we set @xmath22",
    ". also , when no confusion arises , we identify one - element sets with that element , and write @xmath23 instead of  @xmath24 .",
    "furthermore , we need some poset terminology .",
    "recall , that for a poset @xmath25 and an element @xmath26 , one sets @xmath27 . in general , a  subset @xmath28 is called an  _ ideal _ if for any @xmath29 , @xmath30 , we have @xmath31 . furthermore , for any subset @xmath32 , we let @xmath33 denote the set @xmath34 ; clearly @xmath35 and is always an ideal .        [",
    "df : ws ] a  * witness prestructure * is a  finite sequence of pairs of finite subsets of @xmath8 , denoted @xmath36 , with @xmath37 , satisfying the following conditions :    1 .",
    "@xmath38 , for all @xmath39 ; 2 .",
    "@xmath40 , for all @xmath41 ; 3 .",
    "@xmath42 , for all @xmath43 ; 4 .",
    "@xmath44 , for all @xmath45 .",
    "a witness prestructure is called * stable * if in addition the following condition is satisfied :    1 .   if @xmath46 , then @xmath47 .    a * witness structure * is a witness prestructure satisfying the following strengthening of conditions ( s ) and ( p4 ) :    1 .",
    "the subsets @xmath48 are all nonempty .",
    "@xmath49    it is often useful to depict a  witness prestructure in form of a  table , see figure  [ table : ws ] .",
    "the 3 possibilities provided by definition  [ df : ws ] are illustrated on figure  [ table : wsex ] .",
    "@xmath50 & 1 & \\emptyset & 2,3 & \\emptyset \\\\",
    "\\hline 5        &        \\emptyset & 1 & 4 & 3   \\\\   \\hline \\end{array } \\quad\\quad \\begin{array}{|c|c|c|c|c| } \\hline [ 3 ] & \\emptyset & 2 & \\emptyset & 1 \\\\ \\hline 4        &   0   &      \\emptyset & 2 & 3",
    "\\\\   \\hline \\end{array } \\quad\\quad \\begin{array}{|c|c|c| } \\hline [ 3 ] & 2 & 1 \\\\ \\hline 4 & 0 & 2,3 \\\\   \\hline \\end{array}\\ ] ]    note , that every witness prestructure with @xmath51 is a  witness structure . on the other hand , if @xmath52 , then conditions ( p1 ) and ( s ) imply that @xmath51 . in this case , only the set @xmath53 carries any information , and we call this witness structure _ empty_.    let us remark here that the main objects we would like to study are the witness structures . the reason being that they index simplices in the immediate snapshot complexes . in order to reflect the incidence structure of the immediate snapshot complexes we need to study the so - called _ ghosting operation _ on the witness structures , including the effect of the iteration of ghosting .",
    "it is technically much easier to do that in the more general context of prestructures , which is the main reason why we introduce these objects .",
    "we define the following data associated to an arbitrary witness prestructure @xmath36 :    * the set @xmath54 is called the * support * of @xmath55 and is denoted by @xmath56 ; * the * ghost set * of @xmath55 is the set @xmath57 ; * the * active set * of @xmath55 is the complement of the ghost set @xmath58 * the * dimension * of @xmath55 is @xmath59    for the examples on figure  [ table : wsex ] we get @xmath60 $ ] , @xmath61 $ ] , @xmath62 , @xmath63 , @xmath64 , @xmath65 , @xmath66 , @xmath67 .    by definition ,",
    "the dimension of a  witness prestructure @xmath55 is between @xmath68 and @xmath69 .",
    "let us analyze witness structures of special dimensions . to start with , if @xmath70 , then @xmath71 , i.e. , @xmath72 , hence @xmath73 . on the other hand , if @xmath46 , we have @xmath74 , and @xmath75 , implying that @xmath76 .",
    "hence , the only witness structures of dimension @xmath68 are empty , i.e. , of the form @xmath77 .    note , that in general , the set @xmath78 is disjoint from @xmath79 , for all @xmath80 , so we have @xmath81 furthermore , it is easy to characterize all witness structures @xmath55 of dimension  @xmath82 . in this case",
    ", we have @xmath83 .",
    "we let @xmath36 and let @xmath23 denote the unique element of @xmath84 , then @xmath55 has dimension  @xmath82 if and only if @xmath85 in particular , we must of course have @xmath86 , and we shall call @xmath23 the _ color _ of the witness structure  @xmath55 .    at the opposite extreme , a  witness structure @xmath36 has dimension @xmath69 if and only if @xmath87 .",
    "in such a  situation , we shall frequently use the short - hand notation @xmath88 .",
    "@xmath89    for brevity of some formulas , we set @xmath90 .",
    "[ df : trc ] for a  prestructure @xmath55 and an arbitrary @xmath91 , we set @xmath92 and call it the * trace * of  @xmath23 .",
    "furthermore , for all @xmath91 , we set @xmath93    when the choice of @xmath55 is unambiguous , we shall simply write @xmath94 and @xmath95 . note that @xmath96 , hence @xmath97 .",
    "note furthermore , that if @xmath98 , then @xmath99 , while @xmath100 implies @xmath101 and @xmath102 .    to get a  better grasp on the witness structures , as well as operations in them ,",
    "the following alternative definition , which uses traces , is often of value .",
    "[ df : trws ] let @xmath103 and @xmath104 be disjoint finite subsets of @xmath8 , and let @xmath105 be a  family of finite subsets of @xmath8 . set @xmath106 .",
    "the triple @xmath107 is called a  * witness prestructure * if the following conditions are satisfied :    * @xmath96 , for all @xmath108 ; * @xmath109 $ ] .",
    "a witness prestructure is called * stable * if it satisfies an  additional condition :    *",
    "if @xmath110 , then @xmath111 , for all @xmath112 , else @xmath113 .    a  stable witness prestructure is called * witness structure * if the following strengthening of condition ( ts ) is satisfied :    1 .",
    "_ for all @xmath114 either there exists @xmath115 such that @xmath116 , or there exists @xmath112 such that @xmath117 . _    we shall call the form of the presentation of the witness prestructure as a  triple @xmath107 its _ trace form_.    there is a  natural bijection between the objects described by the definitions  [ df : ws ] and  [ df : trws ] .",
    "* proof . *",
    "the translation between the two descriptions is as follows .",
    "first , assume @xmath118 is a  witness prestructure according to definition  [ df : ws ] . set @xmath119 , @xmath120 , and for each @xmath108 , set @xmath94 to be the trace of @xmath23 as given by definition  [ df : trc ] .",
    "the condition ( t1 ) is then satisfied since @xmath121 .",
    "the condition  ( t2 ) is implied by ( p4 ) .",
    "if @xmath55 is a  stable prestructure , then @xmath122 , hence the condition ( ts ) is satisfied . finally , if @xmath55 is a  witness structure , then @xmath123 for all @xmath39 .",
    "assume @xmath124 .",
    "if @xmath125 , then @xmath126 , else @xmath100 , and @xmath127 . in any case , the condition ( tw ) is satisfied .",
    "reversely , assume we are given a  triple @xmath128 as in definition  [ df : trws ] .",
    "we set @xmath129 , and for all @xmath80 , we set @xmath130 @xmath131    in particular , @xmath132 , and by ( t1 ) we have @xmath133 .",
    "it follows that @xmath38 , for all @xmath39 , and ( p1 ) is satisfied .",
    "furthermore , we have @xmath134 , and @xmath40 , for @xmath135 , by construction , so ( p2 ) is satisfied . still by construction , we have @xmath136 , which is clearly empty when @xmath137 .    the condition ( ts ) implies ( s ) , since it implies that there exists @xmath115 , such that @xmath138 , so @xmath139 . finally , ( tw ) implies ( w ) , since both @xmath115 , @xmath116 and @xmath112 , @xmath117 , imply @xmath140",
    ". we leave it to the reader to verify that the translations described above are inverses of each other .",
    "for example , for the prestructure @xmath141 on figure  [ table : wsex ] , we get @xmath142 , @xmath143 $ ] , @xmath144 , and @xmath145 .",
    "@xmath89    in order to gain a  more clear understanding of the composition of the ghosting operation with itself , we will break that operation into two parts : stabilization modulo a  set and taking canonical form .",
    "we start here by noting , that any witness prestructure can be made stable using the following operation .",
    "[ df : st ] let @xmath146 be a  witness prestructure .",
    "if @xmath147 , set @xmath148 , else set @xmath149 .",
    "the * stabilization * of @xmath55 is the witness prestructure @xmath150 whose trace form is @xmath151\\}_{p\\in a\\cup g})$ ] .    an  example is shown on figure  [ table : ws4 ] , where @xmath152 , @xmath153 , and @xmath154 .",
    "@xmath155 & 1    & 0,3,4 & 2,3 & 1 & 1 & { \\emptyset}\\\\ \\hline { \\emptyset } & { \\emptyset } & { \\emptyset } & { \\emptyset } & 3 & 2 & 1 \\\\   \\hline \\end{array } \\longrightarrow \\begin{array}{|c|c|c| } \\hline 0,1,3,4 & { \\emptyset } & 0,4 \\\\",
    "\\hline        2 & 1    &   3\\\\   \\hline \\end{array}\\ ] ]    [ prop : stall0 ] for an arbitrary witness prestructure @xmath55 , the witness prestructure @xmath150 is well - defined and stable .",
    "these two prestructures have the same support , dimension , ghost and active sets .",
    "furthermore , we have @xmath156 if and only if @xmath55 is stable",
    ".    * proof . * both ( t1 ) and ( t2 ) are immediate , since we are simply restricting traces to the set @xmath157 $ ] , where @xmath158 .",
    "the stability condition ( ts ) follows from the choice of @xmath159 .",
    "@xmath89    as the next step , any stable witness prestructure can be turned into a  witness structure by means of the following operation .",
    "[ df : cform ] assume @xmath36 is an arbitrary stable witness prestructure .",
    "set @xmath160 .",
    "pick @xmath161 , such that @xmath162 .",
    "we define the witness structure @xmath163 , which is called the * canonical form * of  @xmath55 , by setting @xmath164    the construction in definition  [ df : cform ] is illustrated by figure  [ table : ws2 ] .",
    "@xmath165 & \\emptyset & 2          & \\emptyset & 1 \\\\ \\hline 4    &   0         & \\emptyset & 2          & 3   \\\\   \\hline \\end{array } \\longrightarrow \\begin{array}{|c|c|c| } \\hline [ 3 ] & 2 & 1 \\\\ \\hline 4    & 0 & 2,3 \\\\   \\hline \\end{array}\\ ] ]    [ prop : call ] assume @xmath55 is an arbitrary stable witness prestructure .    *",
    "the canonical form of @xmath55 is a  well - defined witness structure .",
    "* we have @xmath166 if and only if @xmath55 is itself a  witness structure .",
    "* we have @xmath167 , @xmath168 , @xmath169 , and @xmath170",
    ".    * proof . * assume @xmath36 , @xmath159 and @xmath171 as in the definition  [ df : cform ] , and @xmath172 .    to prove ( a ) note first that all the sets involved are finite subsets of @xmath8 .",
    "conditions ( p1 ) and ( p2 ) for @xmath173 follow immediately from the corresponding conditions on  @xmath55 . to see ( p3 ) ,",
    "pick some @xmath174 .",
    "then there exists a  unique @xmath175 , such that @xmath176 and @xmath177 .",
    "then @xmath178 , but @xmath179 , hence @xmath180 . finally , to see ( w )",
    "note that @xmath181 for all @xmath182 , hence @xmath183 .    to prove ( b )",
    "note that if @xmath55 is a  witness structure , then @xmath184 , hence @xmath185 , @xmath186 , for @xmath187 .",
    "it follows that @xmath188 , @xmath189 , for all @xmath187 .",
    "reversely , assume @xmath166 , then @xmath185 , hence @xmath186 , for all @xmath187 , implying @xmath184 .    to prove ( c ) note that the first pair of sets in @xmath55 and in @xmath173 is the same , hence @xmath167 .",
    "by we have @xmath190 , and @xmath191 , hence @xmath168 .",
    "the other two equalities follow .",
    "@xmath89    the definition  [ df : st ] can be generalized as follows .",
    "[ df : st2 ] let @xmath146 be a  witness prestructure , and @xmath192 .",
    "if @xmath193 , set @xmath194 , else set @xmath149 .",
    "the * stabilization * of @xmath55 * modulo * @xmath18 is the witness prestructure @xmath195 whose trace form is @xmath196\\}_{p\\in a\\cup g})$ ] .",
    "the following three properties can be taken as a  recursive alternative to definition  [ df : st2 ] .    1 .   if @xmath51 , then @xmath197 .",
    "if @xmath46 and @xmath198 , then @xmath199 3 .   if @xmath46 and @xmath200 , then the trace form of @xmath195 is @xmath201 .",
    "assume now that @xmath202 .",
    "by definition  [ df : st2 ] we have @xmath203 , and @xmath204 , for all @xmath205 .",
    "hence , for some sets @xmath206 we have @xmath207 the sets @xmath208 can be explicitly described by the following formula : @xmath209    [ prop : stall ] assume as before that we are given a  witness prestructure @xmath55 , and @xmath210 .",
    "then , the witness prestructure @xmath195 is well - defined and stable .",
    "it satisfies the following properties :    1 .",
    "@xmath211 ; 2 .",
    "@xmath212 ; 3 .",
    "@xmath213 ; 4 .",
    "@xmath214 .    * proof . *",
    "clearly , the conditions ( t1 ) and ( t2 ) are still satisfied , so the witness prestructure @xmath195 is well - defined . using an  argument verbatim to the proof of the proposition  [ prop : stall0 ] , we conclude that it is stable due to the choice of  @xmath159 . the identities @xmath215 and @xmath216 are integral parts of definition  [ df : st2 ] , and",
    "@xmath217 and @xmath218 are direct consequences",
    ".    the following property of the stabilization will be very useful later on .",
    "[ prop : stst ] assume @xmath55 is a witness prestructure , and @xmath219 , such that @xmath220",
    ". then we have @xmath221    * proof . *",
    "assume @xmath146 , and set @xmath222 , @xmath223 . to show that @xmath224 we compare their trace forms . to start with , by definition  [ df : st2 ] we have @xmath225 and @xmath226 .",
    "furthermore , @xmath227 , and @xmath228 , hence @xmath229 and @xmath230 .",
    "finally , both in @xmath231 as well as in @xmath232 the traces of elements from @xmath233 are truncated at the index @xmath234 .",
    "@xmath89    we are now ready to define the main operation on witness structures .",
    "[ df : go ] for an arbitrary witness structure @xmath55 , and an  arbitrary @xmath235 , we define @xmath236 .",
    "we say that @xmath237 is obtained from @xmath55 * by ghosting  @xmath18*.    the ghosting operation is illustrated on figure  [ table : ws3 ] .",
    "the reason we chose the term _ ghosting _ is because the operation removes the information of a  set of processes .",
    "however , these processes do not disappear completely , and parts of their information appears in the total pattern anyway , reflected in the views of other active processes ; so these processes remain likes ghosts hidden in the background .",
    "@xmath165    & 3 & 1,2 & 3 & 3   \\\\ \\hline \\emptyset & \\emptyset & { \\emptyset } & 0 & 1 \\\\   \\hline \\end{array } \\longrightarrow \\begin{array}{|c|c|c| } \\hline 1,2,3 & { \\emptyset } & 2 \\\\ \\hline 0 & 3 & 1 \\\\   \\hline \\end{array } \\longrightarrow \\begin{array}{|c|c| } \\hline 1,2,3 & 2 \\\\ \\hline 0 & 1,3 \\\\   \\hline \\end{array}\\ ] ]    clearly , we have @xmath238 . if @xmath239 , we shall simply write @xmath240 . in this case",
    "we are ghosting a  single element , and though the situation is not quite straightforward , several special cases can be formulated in a  simpler manner .",
    "let @xmath241 .",
    "if @xmath242 , then the situation is much simpler indeed . in this case",
    "@xmath243 , for all @xmath244 , while @xmath245 .",
    "accordingly , we get @xmath246    the situation is slightly more complex if @xmath247 , i.e. , @xmath248 . assume that @xmath249",
    ". then , we still have @xmath250 , for all @xmath244 , and @xmath245 .",
    "the difference now is that @xmath251 is now only a  stable witness prestructure , so in this case we get @xmath252 once @xmath253 , i.e. , @xmath86 , we will need the full generality of the definition  [ df : go ] .",
    "the situation is similar if @xmath254 . for each element @xmath255 we set @xmath256 .",
    "as long as each @xmath257 contains elements outside of @xmath18 , all that happens is that each element @xmath255 gets moved from @xmath257 to @xmath258 .",
    "once this is not true , a more complex construction is needed .",
    "[ prop : gall ] assume we are given a witness structure @xmath259 , and an  arbitrary @xmath192 .",
    "the construction in definition  [ df : go ] is well - defined , and yields a  witness structure @xmath237 , satisfying the following properties :    1 .",
    "@xmath260 ; 2 .",
    "@xmath261 ; 3 .",
    "@xmath262 ; 4 .",
    "@xmath263 .    * proof . *",
    "all equalities follow from the propositions  [ prop : call ] and  [ prop : stall ] .",
    "[ rem : tr ] for future reference we make the following observation .",
    "let @xmath264 be a  witness structure , and assume @xmath265 .",
    "clearly , we have @xmath266 . furthermore , if @xmath267 we get an equality @xmath268 , for all  @xmath159 .    [ lm:1 ] assume @xmath55 is a  stable prestructure , and @xmath235 , then we have @xmath269 , or expressed functorially @xmath270 .    *",
    "assume @xmath36 .",
    "we first describe the witness structure @xmath271 . by definition  [ df :",
    "st ] , we have @xmath272 , where @xmath273 , for all @xmath274 , and the indices @xmath159 and @xmath161 are chosen appropriately .",
    "set @xmath275 , set @xmath276 , and set @xmath277 , for @xmath278 . then @xmath279    on the other hand , we have @xmath280 and @xmath281 , for @xmath282 , since @xmath283 whenever @xmath284 , and @xmath285 , for all @xmath274 .",
    "it follows , that we have @xmath286 , where @xmath287    set @xmath288 , then   implies that we also have @xmath289 .",
    "this means that @xmath290 and @xmath271 have the same length .",
    "for the appropriate choice of @xmath291 we have @xmath292 assume @xmath293 , then we have @xmath294 , @xmath295 for @xmath296 .",
    "assume now that @xmath297 .",
    "note that @xmath298 hence , for @xmath296 , we get @xmath299 , and @xmath300 where the last equality is a consequence of  . combining the identity @xmath301 with  , we see that @xmath302 , for all @xmath296 .",
    "[ prop : gg ] assume @xmath55 is a witness structure , and @xmath219 , such that @xmath303 .",
    "then we have @xmath304 , expressed functorially we have @xmath305 .",
    "* we have @xmath306 where the first and the fourth equalities follow from definition  [ df : go ] , the second equality follows from lemma  [ lm:1 ] , and the third equality follows from proposition  [ prop : stst ] .",
    "our main objects of study , the immediate snapshot complexes , are indexed by finite tuples of nonnegative integers .    given a function @xmath307 , we consider the set @xmath308 this set is called the * support set * of @xmath309 .    a * round counter * is a function @xmath307 with a  finite support set .",
    "obviously , a  round counter can be thought of as an infinite sequence @xmath310 , where , for all @xmath311 , either @xmath312 is a nonnegative integer , or @xmath313 , such that only finitely many entries of @xmath309 are nonnegative integers .",
    "we shall frequently use a  short - hand notation @xmath314 to denote the round counter given by @xmath315    operationally , the round counter model the number of rounds taken by each process in the execution of the corresponding distributed protocol .    given a round counter @xmath309 , the number @xmath316 is called the * cardinality * of @xmath309 , and is denoted @xmath317 .",
    "the sets @xmath318 are called the * active * and the * passive * sets of  @xmath309 .",
    "assume now we are given a  round counter @xmath309 , and let @xmath319 $ ] denote the unique order - preserving bijection .",
    "the round counter @xmath320 is defined by @xmath321 we call @xmath320 the _ canonical form _ of @xmath309 .",
    "note that @xmath322 $ ] , @xmath323 , and @xmath324 .",
    "let @xmath325 denote the group of bijections @xmath326 , such that @xmath327 for only finitely many  @xmath6 .",
    "this group acts on the set of all round counters , namely for @xmath328 , and a round counter @xmath309 we set @xmath329",
    ".      @xmath89    we now describe our main objects of study .",
    "our definition proceeds as follows .",
    "we first describe the set of labels of the simplices , distinguishing the set of labels of the vertices .",
    "then for each simplex we describe its set of vertices .",
    "clearly , several conditions will have to be checked later .",
    "we have to see that any subset of a  set of vertices of a  simplex corresponds to some simplex , and crucially , that any two simplices with the same set of vertices must coincide .",
    "[ df : ptr ] assume @xmath309 is a  round counter .",
    "we define an abstract simplicial complex @xmath330 , called the * immediate snapshot complex * associated to the round counter  @xmath309 , as follows .",
    "the vertices of @xmath330 are indexed by all witness structures @xmath331 , satisfying these three conditions :    1 .",
    "@xmath332 ; 2 .",
    "@xmath333 ; 3 .",
    "@xmath334 , for all @xmath335 .",
    "we say that such a vertex has * color * @xmath23 .",
    "in general , the simplices of @xmath330 are indexed by all witness structures @xmath336 , satisfying :    1 .",
    "@xmath337 ; 2 .",
    "@xmath338 , for all @xmath339 ; 3 .",
    "@xmath334 , for all @xmath335 .",
    "the empty witness structure @xmath340 indexes the empty simplex of @xmath330 .",
    "when convenient , we identify the simplices of @xmath330 with the witness structures which index them .",
    "let @xmath55 be a  non - empty witness structure satisfying the conditions above .",
    "the set of vertices @xmath341 of the simplex @xmath55 is given by @xmath342 .",
    "note , that for an arbitrary witness structure @xmath55 and an  arbitrary @xmath98 we have @xmath343 .",
    "hence we have @xmath344 in particular , the set of vertices of @xmath55 uniquely determines @xmath84 .",
    "assume @xmath309 is a round counter , such that @xmath313 for all @xmath345 . in line with our short - hand notation for the round counters , and in addition skipping a pair of brackets",
    ", we shall use an  alternative notation @xmath346 instead of @xmath330 .",
    "an  example of an immediate snapshot complex @xmath347 is shown on figure  [ fig : f011 ] , and a  more sophisticated example @xmath348 is shown on figure  [ fig : f211 ] .    the next proposition checks that the definition  [ df : ptr ] yields a  well - defined simplicial complex , and shows that the ghosting operation provides the right combinatorial language to describe boundaries in  @xmath330 .",
    "[ prop : b ] assume @xmath309 is the round counter .",
    "* the associated immediate snapshot complex @xmath330 is a  well - defined simplicial complex . in this complex the dimension of the simplex indexed by @xmath55",
    "is equal to @xmath349 , * assume @xmath55 and @xmath350 are simplices of @xmath330 . then @xmath351 if and only if there exists @xmath235 , such that @xmath352 .    *",
    "* assume that the witness structure @xmath55 indexes a  simplex of @xmath330 .",
    "set @xmath353 , implying that @xmath354 for @xmath355 , @xmath356 . for @xmath357 , we set @xmath358 .",
    "we see that the @xmath359-dimensional simplex @xmath55 has @xmath360 vertices , which are all distinct , since @xmath361 , for @xmath357 .",
    "furthermore , it follows from the reconstruction lemma  [ lm : rec ] that any two simplices with the same set of vertices are equal .",
    "assume now that @xmath352 , for some @xmath362 .",
    "by proposition  [ prop : gall ] we have @xmath363 .",
    "it follows from proposition  [ prop : gg ] that for every @xmath364 we have @xmath365 hence the set of vertices of @xmath350 is a  subset of the set of vertices of  @xmath55 .    on the other hand ,",
    "pick an arbitrary @xmath366 , for some witness structure  @xmath55 . by definition",
    ", there exists @xmath367 , such that @xmath368 . set @xmath369 .",
    "the same computation as in  , shows that @xmath370 ; that is , for any subset of the set of the vertices of @xmath55 , there exists a  simplex , which has this subset as its set of vertices .",
    "finally , assume @xmath371 , for some simplices @xmath55 and  @xmath350 .",
    "again , the same computation as in  , shows that @xmath372 , i.e. , @xmath350 and @xmath373 have the same set of vertices .",
    "it follows from the reconstruction lemma  [ lm : rec ] that @xmath374 , and so both ( 1 ) and ( 2 ) are proved .",
    "@xmath89    from the point of view of distributed computing , the vertices of @xmath330 should be thought of as _ local views _ of specific processors . in this intuitive picture",
    ", the next reconstruction lemma  [ lm : rec ] says that any set of local views corresponds to at most one global view .",
    "[ lm : rec ] ( reconstruction lemma ) .",
    "assume @xmath55 and @xmath350 are witness structures of dimension  @xmath359 , such that the corresponding @xmath359-simplices of @xmath330 have the same set of vertices , then we must have @xmath375",
    ".    * proof .",
    "* assume the statement of lemma is not satisfied , and pick a  pair of @xmath359-dimensional simplices @xmath376 , such that @xmath377 , and @xmath359 is minimal possible .",
    "obviously , we must have @xmath378 .    by",
    ", we have @xmath379 . since @xmath380 , we also have @xmath381 . for brevity , we set @xmath382 , and for each @xmath383 , we set @xmath384 . for each @xmath383",
    ", it follows from the definition of the ghosting operation that @xmath385 .",
    "this implies that the @xmath386-tuples @xmath387 and @xmath388 are equal .",
    "now pick an arbitrary @xmath383 .",
    "for every @xmath389 , such that @xmath390 , we have @xmath391 hence @xmath392 . by the minimality of @xmath55 , this implies @xmath393 .",
    "let @xmath36 .",
    "assume there exists @xmath394 , and @xmath395 , @xmath396 , such that @xmath397 .",
    "then , we have @xmath398 since @xmath393 , but @xmath376 , we get @xmath399 for some @xmath400 , @xmath401 such that @xmath402 . repeating the same argument with @xmath159 instead of @xmath23",
    "we get @xmath403 for some @xmath404 , @xmath405 such that @xmath406 .",
    "the equations   and   contradict each other .",
    "it is thus safe to assume that for every @xmath80 , there exists at most one @xmath383 , such that @xmath407 .",
    "set @xmath408 .",
    "note that @xmath409 . using remark  [ rem : tr ] , the previous observation @xmath410 , for some @xmath411 .",
    "specifically , @xmath412 , and the last pair of sets in @xmath350 is also @xmath413 , for some @xmath414 .",
    "pick @xmath415 such that @xmath416 .",
    "assume @xmath417 we observe , that @xmath23 was chosen so that @xmath418 .",
    "we can easily describe the set @xmath419 of all @xmath359-simplices @xmath420 , for which @xmath421 and @xmath422 .",
    "set @xmath423 and @xmath424 where @xmath425 . then @xmath426",
    "clearly , @xmath427 .",
    "we shall show that @xmath428 .",
    "assume @xmath425 , and pick @xmath429 .",
    "then @xmath430 hence @xmath431 .",
    "assume now we have further sets @xmath432 and @xmath433 , such that @xmath434 , @xmath435 .",
    "without loss of generality , we can assume that @xmath436 .",
    "pick now @xmath437 .",
    "then @xmath438 hence @xmath439 .",
    "we have thus proved that @xmath428 , contradicting the choice of @xmath55 and  @xmath350 .",
    "@xmath89    we start by listing a  few simple but useful properties of the immediate snapshot complexes  @xmath330 .    [",
    "prop : p1 ] for an arbitrary point counter @xmath309 , we have @xmath440 where @xmath441 denotes an isomorphism of simplicial complexes .    * proof . * consider the map @xmath442 where @xmath443 is the unique order - preserving bijection @xmath444 $ ] .",
    "this gives a  bijection between simplices of @xmath330 and simplices of @xmath445 . since @xmath443 is just a  renaming bijection ,",
    "we conclude that @xmath446 is a  simplicial isomorphism .    in particular , if round counters @xmath309 and @xmath447 have the same canonical form , then the corresponding immediate snapshot complexes are isomorphic . in other words ,",
    "the @xmath448 entries do not matter for the simplicial structure .",
    "this can be generalized as follows .",
    "[ prop : p2 ] for any round counter @xmath309 , and any permutation @xmath449 , the simplicial complex @xmath450 is isomorphic to the simplicial complex  @xmath330 .",
    "* proof . * consider the map @xmath451 this map is a simplicial isomorphism for the same reasons as in the proof of proposition  [ prop : p1 ] .",
    "let us now look at special round counters .",
    "if @xmath452 , then the simplicial complex @xmath330 is just a  point indexed by the witness structure @xmath453 .",
    "recall , that the empty simplex of @xmath454 is indexed by the witness structure @xmath455 .",
    "[ prop : p3 ] the immediate snapshot complex @xmath456 is isomorphic as a  simplicial complex to the @xmath10-simplex @xmath457 . more generally , if @xmath309 is a round counter such that @xmath458 , for all @xmath311 , the simplicial complex @xmath330 is isomorphic with @xmath459",
    ".    * proof . * the simplices of @xmath330 are indexed by all @xmath460 such that @xmath461 and @xmath462 $ ] . the simplicial isomorphism between @xmath330 and @xmath463 is given by @xmath464 .",
    "the second statement follows from proposition  [ prop : p1 ] .",
    "[ prop : p4 ] assume @xmath465 and @xmath466 .",
    "let @xmath467 denote the truncated round counter @xmath468 .",
    "consider a  cone over @xmath469 , which we denote @xmath470 , where @xmath19 is the apex of the cone .",
    "then we have @xmath471    * proof .",
    "* let @xmath36 be a simplex of @xmath330 and consider the map @xmath472 since @xmath473 $ ] , and @xmath474 , we either have @xmath475 or @xmath476 . if @xmath476 , then @xmath477 . if @xmath475 , then @xmath478 . furthermore , since @xmath466 , we have @xmath479 , hence @xmath480 , and @xmath481 . in any case",
    ", @xmath446 is well - defined .",
    "its inverse is also clear , so it is a  bijection between simplices of @xmath330 and @xmath470 .    under this bijection ,",
    "the vertex @xmath482))$ ] of @xmath330 corresponds to the apex  @xmath19 .",
    "the map @xmath446 is simplicial , since ghosting other elements than @xmath10 will be for both complexes ; while ghosting the element @xmath10 will simply move it from @xmath483 to @xmath53 in a  simplex from @xmath330 , which corresponds to the deletion of the apex @xmath19 in a  simplex from @xmath470 .",
    "clearly , the applications of proposition  [ prop : p4 ] can be iterated , until each @xmath82 entry in @xmath309 is replaced with a  cone construction .",
    "the propositions  [ prop : p1 ] , [ prop : p2 ] , [ prop : p3 ] , and [ prop : p4 ] , can intuitively be summarized as telling us that if we are interested in understanding the simplicial structure of the complex @xmath330 , we may ignore the entries @xmath448 and @xmath82 , and permute the remaining entries as we see fit .",
    "@xmath89    assume @xmath36 is a  witness structure which indexes a  simplex of @xmath330 . clearly , we have @xmath484 , hence @xmath485 .",
    "it turns out that every simplex is contained in a  simplex of dimension @xmath486 , which is the same as to say that immediate snapshot complexes are always pure ( that is all maximal simplices have the same dimension ) .",
    "[ prop : pure ] the simplicial complex @xmath330 is pure of dimension @xmath486",
    ".    * proof .",
    "* assume @xmath36 is a  witness structure which indexes a  simplex of @xmath330 .",
    "for each @xmath100 we set @xmath487 . by construction",
    ", we have @xmath488 .",
    "set furthermore @xmath489 , @xmath490 and @xmath491 we see that @xmath492 is a  witness structure : the condition ( p1 ) says that @xmath493 , which is clear , the conditions ( p2 ) and ( p3 ) are immediate , and condition ( w ) says that @xmath494 , which is also clear .",
    "furthermore , we have @xmath495 , @xmath496 , and @xmath497 . for all @xmath498 we have @xmath499 , while for all @xmath500 we have @xmath501 .",
    "we conclude that @xmath492 indexes a  simplex of @xmath330",
    ". clearly , @xmath502 . finally , we have @xmath503 , so , by proposition  [ prop : b](2 ) , @xmath504 and hence @xmath330 is pure of dimension  @xmath486",
    ".      @xmath89    it follows from the above , that @xmath506 if and only if @xmath507 , in which case the simplicial complex @xmath330 is a  point .",
    "assume now @xmath508 .",
    "in this case , we have @xmath509 . by , up to the simplicial isomorphism",
    ", we can assume that @xmath510 , @xmath511 .",
    "for brevity of notations , when talking about edges of @xmath512 , we shall skip @xmath513 $ ] , and index the edges by the tuples @xmath514 of subsets @xmath515 $ ] , such that @xmath516 and @xmath517 .",
    "we shall make no abbreviations when indexing the vertices .",
    "[ prop : pmn ] for any integers @xmath511 , the simplicial complex @xmath512 is a  subdivided interval , whose endpoints are indexed by @xmath518    * proof . * to start with , we know that the simplicial complex @xmath512 is a  pure @xmath505-dimensional complex , and that without loss of generality , we can assume @xmath519 .",
    "the simplicial complex @xmath520 is just a  @xmath505-simplex , indexed by @xmath521 , and the claim of proposition is obviously true in this case .",
    "our proof now makes use of induction on @xmath522 .",
    "when proving the induction step , we are free to confine ourselves to the case @xmath523 . for the sets @xmath524 , @xmath525 , and @xmath526 , we let @xmath527 denote the pure @xmath505-dimensional subcomplex of @xmath512 , obtained by taking the union of all @xmath505-simplices of the form @xmath528 . for brevity",
    ", we shall simply write @xmath529 , @xmath530 , and @xmath531 . obviously , each @xmath505-simplex of @xmath512 belongs precisely to one of these three sets , so we have @xmath532 , and we shall now see how the three subcomplexes fit together .",
    "it is easy to see , either directly , or as a  special case of proposition  [ prop : strata2 ] , that we have simplicial isomorphisms @xmath533 , @xmath534 , and @xmath535 .",
    "consider now two special vertices of @xmath512 @xmath536,{\\emptyset}),(0,1),\\underbrace{(0,{\\emptyset}),\\dots,{\\allowbreak}(0,{\\emptyset})}_{m-1 } ) , \\textrm { and } w_1=(([1],{\\emptyset}),(1,0),\\underbrace{(1,{\\emptyset}),\\dots,{\\allowbreak}(1,{\\emptyset})}_{n-1}).\\ ] ]    by induction assumption , each one of the subcomplexes @xmath529 , @xmath530 , and @xmath531 , is a  subdivided interval , and by the same assumption , combined with the simplicial isomorphism from proposition  [ prop : strata2 ] , we know what the endpoints are .",
    "namely , @xmath529 has endpoints @xmath537 and @xmath538 , @xmath530 has endpoints @xmath539 and @xmath540 , and @xmath531 has endpoints @xmath540 and @xmath538 .",
    "obviously , that means that these three subcomplexes piece together to form a  new subdivided interval with endpoints @xmath537 and @xmath539 .",
    "let @xmath541 denote the number of @xmath505-simplices in @xmath512 . by proposition  [ prop : pmn ]",
    "this number completely describes the complex @xmath512 .",
    "we dot not have a  closed formula for these numbers , however , we can explicitly describe the corresponding generating function .",
    "the numbers @xmath541 satisfy the recursive relation @xmath542 with the boundary conditions @xmath543 . the corresponding generating function @xmath544 is given by the following explicit formula : @xmath545    * proof . * the fact that @xmath543 , as well as that @xmath546 , are both immediate .",
    "assume now that @xmath547 .",
    "the number of edges of @xmath512 for which @xmath548 is @xmath549 , the number of edges of @xmath512 for which @xmath550 $ ] is @xmath551 , finally , the number of edges of @xmath512 for which @xmath552 is @xmath553 .",
    "summing up we get the recursive formula  .",
    "multiply   with @xmath554 and sum over all @xmath547 .",
    "we get @xmath555 on the left hand side we have @xmath556 on the right hand side we have @xmath557 transforming the other terms on the right hand side of in a similar way , we get @xmath558 which simplifies to @xmath559 yielding the formula  .",
    "@xmath89    for arbitrary nonnegative integers @xmath560 we let @xmath561 denote the number of top - dimensional simplices in @xmath562 .",
    "note , that the top - dimensional simplices of @xmath562 are indexed by sequences @xmath514 of non - empty subsets @xmath563 $ ] , such that @xmath564 , for all @xmath565 $ ] .",
    "we have @xmath566 , and also @xmath567 for any @xmath568}$ ] .",
    "in general , consider a round counter @xmath569 , then we have @xmath570 where @xmath571 the corresponding generating function in @xmath0 variables is @xmath572 it is given by the following explicit formula : @xmath573    * proof .",
    "* the first two equalities are immediate . to prove the equality   simply sum over the top - dimensional simplices grouping them according to the subset  @xmath574 .",
    "the formula can either be derived same way as we derived the formula , or by a  term - by - term calculation of the product @xmath575 using the recursive formula  .",
    "@xmath89 [ ssect : scd ]    the _ standard chromatic subdivision _ of an @xmath10-simplex , denoted @xmath576 , is a  prominent and much studied structure in distributed computing .",
    "we refer to @xcite for distributed computing background , and to @xcite for the analysis of its simplicial structure , where , in particular , the following combinatorial description of @xmath576 has been given .",
    "[ df : chi ] let @xmath10 be a natural number . the simplicial complex @xmath576 is defined as follows .    *",
    "the vertices of @xmath576 are indexed by all pairs @xmath577 , such that @xmath578 $ ] , and @xmath579 .",
    "* the simplices of @xmath580 are indexed by pairs of tuples of non - empty sets @xmath581 , such that @xmath582 s are disjoint subsets of @xmath11 $ ] , and @xmath583 for all  @xmath45 .    given a  simplex @xmath584 , its vertices are indexed by all pairs @xmath585 , where @xmath586 , and @xmath587 , for some @xmath45 .",
    "in particular , the dimension of the simplex @xmath350 indexed by @xmath588 is equal to @xmath589 . to describe the boundary relations in @xmath576 pick @xmath590 , and",
    "let @xmath591 be the simplex obtained from @xmath350 by deleting  @xmath23 .",
    "assume @xmath592 .",
    "if @xmath593 , then we have @xmath594 otherwise , we have @xmath595 , i.e. , @xmath596 . if @xmath597 , then we have @xmath598 else @xmath599 , and we have @xmath600    for brevity , we set @xmath601 .    the immediate snapshot complex @xmath602 and the standard chromatic subdivision of an @xmath10-simplex @xmath576 are isomorphic as simplicial complexes . explicitly",
    ", the isomorphism can be given by @xmath603{\\setminus}w_0 & b_1{\\setminus}c_1 & b_2{\\setminus}c_2 & \\dots & b_t{\\setminus}c_t \\\\",
    "\\hline \\end{array},\\ ] ] where @xmath604 .    *",
    "* let @xmath605 be a simplex of @xmath576 . we can verify that @xmath606 is a  well - defined witness structure : ( p1 ) is true since @xmath604 , ( p2 ) and ( p3 ) are true since the sets @xmath582 are disjoint , while ( w ) is true , since the sets @xmath607 are non - empty .",
    "we have @xmath608 $ ] , and @xmath609 .",
    "furthermore , to see that the witness structure @xmath606 indexes a simplex of @xmath602 , we notice that @xmath610 , for all @xmath565 $ ] , follows from the disjointness of the sets @xmath582 , and that @xmath611 if and only if @xmath590 .",
    "we have @xmath612 .",
    "finally , the case - by - case comparison of the equations  , , and  , with the rules of the ghosting operations shows that the map @xmath446 is simplicial .",
    "let now @xmath36 be a simplex of @xmath602 .",
    "define @xmath613 set @xmath614 . clearly , @xmath583 , for all @xmath6 , and the sets @xmath607 are non - empty , since @xmath55 is a  witness structure .",
    "the disjointness of the sets @xmath582 is immediate consequence of the inequality @xmath615 , for all @xmath565 $ ] .",
    "it follows that @xmath616 is a  simplex of @xmath576 .",
    "obviously , @xmath617 is an inverse of @xmath446 , hence @xmath446 is a  simplicial isomorphism between @xmath576 and  @xmath602 .",
    "we note the following direct description of the simplicial structure of @xmath602 : simplices of @xmath602 are indexed by all witness structures @xmath36 satisfying the following three conditions :    1 .",
    "@xmath473 $ ] ; 2 .   @xmath618 ; 3 .",
    "the sets @xmath619 are disjoint .",
    "@xmath89    we shall now describe how to decompose the immediate snapshot complex @xmath330 into pieces in a  natural way , which we call the canonical decompositions . intuitively , these pieces correspond to the protocol complexes , for the sets of executions where the first execution step is fixed .",
    "assume @xmath309 is a  round counter .",
    "for every subset @xmath620 , let @xmath621 denote the set of all simplices @xmath622 of @xmath330 , such that one of the following three conditions is fulfilled :    * @xmath51 ; * @xmath623 ; * @xmath624 .    in particular ,",
    "for @xmath625 the condition @xmath623 is always satisfied , so @xmath626 is the set of all simplices of @xmath330 .",
    "an example of a canonical decomposition is given on figure  [ fig : f011 ] .",
    "for every round counter @xmath309 , and for every subset @xmath620 , the set @xmath621 is closed under taking boundary , hence forms a  simplicial subcomplex of @xmath330 .    *",
    "* let @xmath36 be a  simplex in @xmath621 , and assume @xmath627 .",
    "by proposition  [ prop : b ] there exists @xmath628 , such that @xmath629 . by proposition  [ prop : gg ]",
    "it is enough to consider the case @xmath630 , so assume @xmath631 , and let @xmath632 .",
    "if @xmath633 , then @xmath634 , and we are done .",
    "so assume @xmath635 , hence also @xmath46 .",
    "in this case , by definition of @xmath621 , we have either @xmath623 or @xmath624 . on the other hand , by the definition of @xmath240 , if @xmath636 , then either @xmath637 ( if all of @xmath574 is moved to @xmath638 ) or @xmath639 and @xmath640 ( if only part or none of @xmath574 is moved to @xmath638 ) .    first , if @xmath637 , then in any case @xmath641 , so @xmath634 , and we are done .",
    "finally , assume @xmath639 and @xmath642 .",
    "if @xmath624 , then also @xmath643 , and @xmath634 . if , instead , @xmath623 , then @xmath644 , so again @xmath634 .",
    "we shall abuse notations and use @xmath621 to denote this simplicial complex as well .",
    "next we prove that the subcomplexes @xmath621 can themselves be viewed as immediate snapshot complexes . to formulate this result",
    "we need additional terminology .",
    "assume @xmath309 is an arbitrary round counter and @xmath620 .",
    "we let @xmath645 denote the round counter defined by @xmath646    we say that the round counter @xmath645 is obtained from @xmath309 by the _ execution _ of  @xmath18 .",
    "note that @xmath647 , @xmath648 , and @xmath649 .",
    "[ prop : strata2 ] assume @xmath309 is an arbitrary round counter and @xmath620 , then there exists a  simplicial isomorphism @xmath650    * proof . *",
    "pick an  arbitrary simplex @xmath651 belonging to @xmath621 .",
    "if @xmath51 , then we set @xmath652 .",
    "note , that since @xmath620 , we have @xmath653 in this case .",
    "else , by the construction of @xmath654 , we either have @xmath624 , or @xmath623 . if @xmath624 , then set @xmath655 else @xmath623 , in which case we set @xmath656    reversely , assume @xmath657 is a  simplex of @xmath658 . since @xmath659",
    ", we have @xmath660 .",
    "if @xmath661 , we set @xmath662 else we have @xmath663 . if @xmath46 , we set @xmath664 else @xmath51 , and we set @xmath665 .",
    "a  direct case - by - case verification shows that the maps @xmath666 and @xmath667 are well - defined simplicial maps , which preserve supports , @xmath668 , @xmath669 , and hence also the dimension .",
    "furthermore , they are inverses of each other , hence are simplicial isomorphisms .",
    "@xmath89    in this section we show that immediate snapshot complexes are pseudomanifolds with boundary .",
    "we start by showing that @xmath330 is strongly connected .",
    "let @xmath670 be a pure simplicial complex of dimension @xmath10 .",
    "two @xmath10-simplices of @xmath670 are said to be * strongly connected * if there is a  sequence of @xmath10-simplices so that each pair of consecutive simplices has a  common @xmath671-dimensional face .",
    "the complex @xmath670 is said to be * strongly connected * if any two @xmath10-simplices of @xmath670 are strongly connected .",
    "clearly , being strongly connected is an equivalence relation on the set of all @xmath10-simplices .",
    "[ prop : strc ] for an arbitrary round counter @xmath309 , the immediate snapshot complex @xmath330 is strongly connected .",
    "* proof . *",
    "set @xmath672 .",
    "proposition  [ prop : pure ] says that @xmath330 is a pure simplicial complex of dimension  @xmath10 .",
    "we now use induction on @xmath317 .",
    "if @xmath673 , or more generally , if @xmath674 , then @xmath330 is just a  single simplex , so it is trivially strongly connected .",
    "assume @xmath675 , and consider the canonical decomposition of @xmath330 .",
    "by proposition  [ prop : strata2 ] , the simplicial complex @xmath621 is isomorphic to @xmath658 , for all @xmath620 .",
    "since @xmath676 , and @xmath677 , we conclude that @xmath621 is a  pure simplicial complex of dimension  @xmath10 , which is strongly connected by the induction assumption .",
    "thus , any pair of @xmath10-simplices belonging to the same subcomplex @xmath621 is strongly connected .",
    "pick now any @xmath678 , and any @xmath620 , such that @xmath679 , @xmath680 , and consider any @xmath671-simplex @xmath681 , such that @xmath682 .",
    "obviously , such @xmath350 exists , and @xmath683 . by induction assumptions for @xmath621 and @xmath684 ,",
    "there exist @xmath10-simplices @xmath685 , and @xmath686 , such that @xmath687 and @xmath688 .",
    "this means , that @xmath141 and @xmath689 are strongly connected . since being strongly connected is an equivalence relation , any two @xmath10-simplices from @xmath621 and @xmath684",
    "are strongly connected .",
    "this includes the case @xmath690 , implying that any pair of @xmath10-simplices in @xmath330 is strongly connected , so @xmath330 itself is strongly connected .",
    "we say that a  strongly connected pure simplicial complex @xmath670 is a   * pseudomanifold * if each @xmath671-simplex of @xmath670 is a  face of precisely one or two @xmath10-simplices of @xmath670 .",
    "the @xmath671-simplices of @xmath670 which are faces of precisely one @xmath10-simplex of @xmath670 form a  ( possibly empty ) simplicial subcomplex of @xmath670 , called the * boundary * of @xmath670 , and denoted @xmath691 .    to describe the boundary subcomplex of @xmath330 , we need the following definition .",
    "[ df : bv ] let @xmath309 be an arbitrary round counter , and assume @xmath692 .",
    "we define @xmath693 to be the simplicial subcomplex of @xmath330 consisting of all simplices @xmath694 , satisfying @xmath695 .",
    "[ prop : pseudo ] for an arbitrary round counter @xmath309 , the simplicial complex @xmath330 is a  pseudomanifold , and the subcomplex @xmath696 consists of all simplices @xmath36 , such that @xmath697 .",
    "* by proposition  [ prop : strc ] we already know that @xmath330 is strongly connected .",
    "set again @xmath672 , and let @xmath681 be an arbitrary @xmath671-simplex of @xmath330 .",
    "note that @xmath698 , hence @xmath699 implies that there exist @xmath80 , and @xmath700 , such that @xmath701 set @xmath702 .",
    "consider @xmath703 and if @xmath704 , consider also @xmath705 obviously , @xmath706 , so @xmath687 and @xmath688 .",
    "furthermore , the definition of the ghosting construction implies that these are the only options to find @xmath55 , such that @xmath707 .",
    "we conclude that @xmath330 is a  pseudomanifold , whose boundary is a  union of the @xmath671-simplices @xmath681 , such that @xmath708 , so then the subcomplex @xmath696 consists of all simplices @xmath36 , such that @xmath697 .",
    "@xmath89    this section will provide a bridge between the mathematical and the theoretical distributed computing contexts .",
    "specifically , we shall explain why immediate snapshot complexes provide a  correct combinatorial model for the protocol complexes in the immediate snapshot read / write computational model .    as in section  [ sect:1 ] , assume that we have @xmath0 processes indexed @xmath1 , together with a  round counter @xmath314 .",
    "we consider the standard protocol associated to this data . in this protocol , each process @xmath23 starts with some input value @xmath709 , and then executes @xmath710 rounds . in each round",
    ", the process @xmath23 first writes its current state into the register , which is assigned to that process ( full - information protocol ) , and then the process reads the entire memory in one atomic step ( snapshot read ) .    in the topological approach to distributed computing , once the computational model is fixed , one associates a  simplicial complex to each protocol . that complex is called a  _ protocol complex_. we refer to @xcite and the citations therein for the further specifics of that construction . in general , the protocol complex is defined as follows .",
    "the maximal simplices are indexed by all possible executions of the protocol .",
    "the vertices of the protocol complexes are the _ local views _ of individual processes .",
    "two maximal simplices , corresponding to executions @xmath55 and @xmath350 , share the simplex consisting of those local views , which are the same in @xmath55 and in  @xmath350 .    as was said above , the executions in the immediate snapshot read / write computational model",
    "are shaped in layers . in each layer",
    ", a  group of processes atomically writes to their respective registers , and then takes an atomic snapshot of the entire memory . in other words , that executions can be indexed by tuples @xmath514 of sets of processes , where @xmath574 is the first group of processes which gets activated , followed by @xmath711 , and so on .",
    "let @xmath712 denote the protocol complex associated to the standard full - information protocol for the round counter  @xmath309 .",
    "in this case , we have an additional condition @xmath713 , for all @xmath565 $ ] .",
    "obviously , we have a  one - to - one correspondence between all executions of the protocol and the top - dimensional simplices of the immediate snapshot complex @xmath330 .",
    "to summarize , both @xmath330 and @xmath712 are pure of dimension @xmath486 , and we have a  natural bijection between the sets of their top - dimensional simplices . before proceeding with extending this bijection , we need to analyze the structure of information the processes write into the memory during an  execution of the standard full - information protocol .",
    "@xmath89    when a  process is activated for the first time , the only information that it has is its input value , so it will simply write its input value into the assigned register . later on , it will see the information which other processes have written , and write that newly acquired information , as a  part of his state , once it is activated next time . to describe this knowledge structure formally ,",
    "let @xmath714 denote the information which process  @xmath23 has _",
    "after _ its @xmath2th step ( we can not know for sure in which layer this step takes place ) . clearly , it is the same information as the one which process  @xmath23 will _ write _ into the memory during its @xmath715th step . for ease of notations ,",
    "we set @xmath716 .",
    "accordingly , @xmath717 denotes the information which the process  @xmath23 has once it has executed the entire protocol . in general",
    ", we shall write @xmath718 to express the fact that _ the process  @xmath23 after its @xmath6th step knows what the process  @xmath159 knew after its @xmath175th step .",
    "_ since all what processes learn during the execution of the protocol is what other processes knew at various stages of the execution ( here we are thinking about the input values as the knowledge of processes after the @xmath82th step ) the entire knowledge structure generated by an execution @xmath55 of the protocol is a poset , which we denote @xmath719 .",
    "this poset has elements @xmath720 , where @xmath565 $ ] and @xmath721 $ ] , with the order relation given by  .",
    "[ df : wip ] assume @xmath314 is a  round counter , and @xmath722 is a  poset , whose set of elements is @xmath723,i\\in[k_p]\\}$ ] , for some nonnegative integers @xmath724 , for @xmath565 $ ] .",
    "for all @xmath565 $ ] , @xmath725 $ ] , set @xmath726 , and set furthermore @xmath727 .",
    "the poset @xmath722 is called a  * witness poset * with parameter @xmath309 if its order relation satisfies the following conditions :    1 .",
    "@xmath728 , for all @xmath565 $ ] , @xmath729 $ ] ; 2 .",
    "assume @xmath730 $ ] , @xmath731 , and @xmath732 , then one of the following three conditions is satisfied : * @xmath733 , @xmath734 , and @xmath735 ; * @xmath736 , @xmath737 , and @xmath738 ; * @xmath739 , @xmath737 , and @xmath734 .",
    "the set of maximal elements of @xmath722 is given by @xmath740 .",
    "we call @xmath722 a  * complete witness poset * if @xmath741 $ ]",
    ".    note , that since a  witness poset @xmath722 has to have some maximal elements , there must exist @xmath23 such that @xmath742 .",
    "some examples of witness posets are shown on figure  [ fig : wp1 ] .",
    "assume we are given a  round counter  @xmath309 .",
    "we defined the simplicial complex @xmath743 as follows :    * the set of vertices @xmath744 consists of all witness posets @xmath722 with parameter @xmath309 , such that @xmath745 ; * a  subset @xmath746 of vertices forms a  simplex if and only if there exists a  witness poset @xmath722 with parameter @xmath309 , such that @xmath747    note , that for a  witness poset @xmath722 and @xmath748 , we have @xmath749 hence @xmath743 is well - defined as a  simplicial complex .",
    "it is pure , and has dimension @xmath10 .",
    "the set of all simplices of @xmath743 coincides with the set of all witness posets with parameter @xmath309 .",
    "the maximal simplices of @xmath743 are indexed by the complete witness posets .",
    "@xmath89    to proceed , we need additional notation .",
    "assume we have a  sequence of sets @xmath750 , @xmath751 , and @xmath752 $ ] , we set @xmath753 .",
    "furthermore , we let @xmath754 denote the index such that @xmath23 occurs in @xmath755 for the @xmath2th time . in other words , @xmath754 is uniquely defined by the following two conditions : @xmath756 and @xmath757 note , that @xmath758 and @xmath759 furthermore , @xmath760 when @xmath55 is clear from the context , we will skip it from the notations , and simply write @xmath761 and @xmath762 .",
    "[ prop : pr1 ] for any round counter @xmath314 , there is a  simplicial isomorphism between the complexes @xmath712 and @xmath743 .",
    "* proof . *",
    "first , we define the map @xmath446 which takes an execution @xmath763 of the protocol to a  complete witness poset @xmath764 .",
    "the set of the elements of @xmath722 is taken to be @xmath723,i\\in[r_p]\\}$ ] .",
    "the order relation is given by the rule : for @xmath730 $ ] , @xmath765 , @xmath766 , we have @xmath767 in words , the inequality   simply says that @xmath159 occurs at least @xmath768 times in @xmath769 , where @xmath23 occurs for the @xmath6th time in @xmath78 .",
    "we check that @xmath446 is well - defined .",
    "first , we check that @xmath722 is actually a  poset .",
    "assume @xmath770 and @xmath771 .",
    "then , implies that @xmath772 and @xmath773 .",
    "this gives a  contradiction with  .",
    "assume furthermore that @xmath770 and @xmath774 . here",
    ", implies that @xmath772 and @xmath775 . using",
    "we then conclude that @xmath776 , and hence @xmath777 .",
    "second , we want to check that @xmath722 is a complete witness poset , by verifying the conditions in definition  [ df : wip ] .",
    "condition  ( 1 ) says that @xmath728 , which translates to @xmath778 , which is a  tautology .",
    "next , we check condition  ( 2 ) .",
    "we pick @xmath730 $ ] , @xmath765 , @xmath779 , and compare @xmath780 with @xmath781 . without loss of generality , we can assume that @xmath782 .",
    "this implies @xmath737 .",
    "in addition , we can show that @xmath783 .",
    "indeed , take @xmath784 . by",
    ", we have @xmath775 .",
    "since @xmath782 , we get @xmath785 , and so @xmath786 .",
    "in particular , if @xmath787 then repeating this argument gives @xmath788 , @xmath737 , and @xmath734 . on the other hand , if we have a  strict inequality @xmath789 then @xmath737 , and @xmath790 , which in turn implies that we have a  strict inclusion @xmath736 . in any case ,",
    "condition  ( 2 ) is satisfied .    finally , to check condition  ( 3 ) , as well the completeness , we need to see that one can not have @xmath791",
    "this is so , since otherwise we would have @xmath792 , which is impossible .",
    "we can therefore conclude that @xmath793 is a  well - defined complete witness poset .",
    "now , we define a map  @xmath617 , which takes an arbitrary complete witness poset @xmath722 with parameter @xmath309 to the protocol execution @xmath794 .",
    "the condition that @xmath795 is comparable with @xmath796 for all @xmath730 $ ] , @xmath721 $ ] , and @xmath797 $ ] , means that we can order all @xmath795 s by inclusion .",
    "so assume that for all @xmath187 , we have sets @xmath798 , such that the following two conditions are true :    * @xmath799 , * @xmath800 , for all @xmath801 .",
    "we set @xmath802 , for all @xmath187 .",
    "clearly , @xmath514 is a well - defined execution , since all indices in each @xmath78 are different , and the number of occurrences of each @xmath23 is @xmath710 .",
    "let now @xmath750 be an execution of the protocol and let us show that @xmath803 .",
    "first , pick @xmath730 $ ] , and assume that @xmath804 for some @xmath805 . by",
    ", we have @xmath806 .",
    "assume @xmath807 , then by , this is equivalent to @xmath808 , which in turn is equivalent to @xmath809 , and hence to @xmath810 .",
    "this means that @xmath811 .",
    "now , let us pick @xmath812 $ ] , and @xmath813 , such that @xmath140 , @xmath814 .",
    "take @xmath815 , then @xmath816 .",
    "since @xmath817 , it follows that @xmath808 , hence @xmath807 .",
    "thus we see that in this case @xmath818 , where the inclusion is strict , since @xmath819 .",
    "together these two calculations show that @xmath803 .    on the other hand ,",
    "take an arbitrary complete witness poset @xmath722 with parameter @xmath309 .",
    "set @xmath820 .",
    "note , that both @xmath722 and @xmath821 have the same sets of elements @xmath720 , for @xmath565 $ ] , @xmath721 $ ] , and we have @xmath728 for all @xmath822 in both @xmath722 and @xmath821 .",
    "assume now @xmath770 in @xmath722 . by definition  [ df : wip ]",
    "this is equivalent to @xmath823 , which in turn is equivalent to @xmath770 in  @xmath824 .",
    "this shows that both @xmath446 and @xmath617 are well - defined and are inverses of each other .",
    "furthermore , since the information which the process @xmath23 has after its @xmath6th run is precisely @xmath795 , the poset @xmath825 is the local view of the process @xmath23 , and taking lower ideals corresponds to taking a  set of local views , which are compatible in some execution .",
    "this means that @xmath446 and @xmath617 are actually simplicial isomorphisms .",
    "@xmath89    as a next step we show that witness posets and witness structures encode identical simplicial information .    [",
    "prop : pr2 ] for any round counter @xmath314 , we have a simplicial isomorphism between complexes @xmath743 and @xmath330 .    * proof . *",
    "we describe maps @xmath826 and @xmath827 , which will generalize maps @xmath446 and @xmath617 from the proof of proposition  [ prop : pr1 ] .",
    "consider a  witness structure @xmath828 indexing a  simplex of @xmath330 .",
    "set @xmath829 .",
    "let the set of elements of @xmath830 be @xmath831,i\\in[k_p]\\}$ ] .",
    "for @xmath832 , @xmath833 $ ] , we let @xmath834 denote the index @xmath835 , such that @xmath836 and @xmath837 .",
    "the order relation in @xmath830 is then given by : @xmath838 the verification that @xmath839 is well - defined is verbatim to that in proposition  [ prop : pr2 ] .",
    "one also sees easily that @xmath840 .",
    "next , we define @xmath827 .",
    "take @xmath841 , and denote @xmath842 .",
    "we let @xmath483 be given by the identity @xmath843 , and set @xmath844{\\setminus}w_0 $ ] .",
    "assume the set @xmath845 are chosen in the same way as when we defined @xmath617 in the proof of proposition  [ prop : pr2 ] , and set @xmath846 , for all @xmath114 .",
    "we have @xmath847 , and we set @xmath802 , for all @xmath114 .",
    "assume we have @xmath23 such that @xmath848 .",
    "let @xmath849 be the smallest index such that @xmath850 , then @xmath851 ; this index is well - defined , since @xmath852 is not a  maximal element .",
    "this rule defines uniquely the sequence of sets @xmath853 .",
    "the verification that @xmath854 is well - defined is a  straightforward extension of the argument in the proof of proposition  [ prop : pr1 ] .",
    "same way as above , we can see that @xmath839 and @xmath854 are inverses of each other .",
    "furthermore , the map @xmath839 takes the operation of taking lower ideals under a  subset of maximal elements to the ghosting operation on the witness structures .",
    "it follows that @xmath839 and @xmath854 are simplicial isomorphisms .",
    "even though the information contained in simplicial complexes @xmath743 and @xmath330 is the same , in various situations it can be more convenient to use one or the other .",
    "we feel that taking lower ideals is simpler to grasp than the ghosting operation . on the other hand ,",
    "the entire witness poset structure is a bit awkward to describe , when we want to work with specific simplices , here , witness structures provide a  more succinct description .",
    "figure  [ fig : wpws ] shows the parallel combinatorial encodings of the simplices in the simple case @xmath855 .",
    "the author would like to thank maurice herlihy for useful discussions of the immediate snapshot computational models , and demet taylan for finding several typos .",
    "the research was supported by dfg grant as a part of university of bremen excellence initiative ."
  ],
  "abstract_text": [
    "<S> in this paper we introduce and study a  new family of combinatorial simplicial complexes , which we call _ immediate snapshot complexes_. our construction and terminology is strongly motivated by theoretical distributed computing , as these complexes are combinatorial models of the standard protocol complexes associated to immediate snapshot read / write shared memory communication model .    in order to define the immediate snapshot complexes we need a  new combinatorial object , which we call a  _ witness structure_. these objects are indexing the simplices in the immediate snapshot complexes , while a  special operation on them , called _ ghosting _ , describes the combinatorics of taking simplicial boundary . in general </S>",
    "<S> , we develop the theory of witness structures and use it to prove several combinatorial as well as topological properties of the immediate snapshot complexes . </S>"
  ]
}
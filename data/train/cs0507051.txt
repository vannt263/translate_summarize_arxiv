{
  "article_text": [
    "layered drawings visualize hierarchical graphs in a way such that vertices are arranged in layers and edges are drawn as straight lines or curves connecting these layers .",
    "a common method was introduced by sugiyama , tagawa and toda  @xcite and by carpano  @xcite .",
    "several closely related methods were proposed later ( see e.g.  @xcite . )    crossing reduction is one of the most important objectives in layered drawings .",
    "but it is well known that for two - layer graphs the straight - line crossing minimization problem is np - complete  @xcite .",
    "the problem remains np - complete even when one layer is fixed .",
    "jnger and mutzel  @xcite present exact algorithms for this problem , and perform experimental comparison of their results with various heuristic methods .",
    "recently new methods related to crossing reduction ( @xcite ) have been proposed .",
    "however when the given two - layer graph is dense , even in an optimum solution , there are still a large number of crossings",
    ". then the resulting straight - line drawing will be hard to read , since edge - crossing minimization is one of the most important aesthetic criteria for visualizing graphs  @xcite .",
    "this give us a motivation for exploring new approaches to reduce the crossings in a drawing other than the traditional methods .",
    "in addition , it is sometime of interest to find the bicliques between two layers .",
    "for example in the drawing of a call graph , it is interesting to find out which set of modules are calling a common set of functions and what are those common functions .",
    "call graphs are usually visualized as layered drawings .",
    "however it is hard to learn this information from layered drawings by traditional sugiyama - style approaches , especially when the input graphs are dense .",
    "our previous work  @xcite introduces the concept of confluent drawings . in  @xcite we talk about the confluent drawability of several classes of graphs and",
    "give a heuristic for finding confluent drawings of graphs with bounded arboricity .",
    "in this paper we experiment with an implementation of confluent drawings for the layered graphs .",
    "however we relax the constraint of planarity and allow crossings in the drawings , while it is not allowed to have crossings in a confluent drawing in our previous definitions .",
    "we are aware of the edge concentration method by newbery  @xcite .",
    "edge concentration and our method share a same idea of covering by bicliques .",
    "but in newbery s method , dummy nodes ( edge concentrators ) are explicit in the drawing and treated equally as original nodes , which causes the nodes original levels to change . in our method dummy nodes are implicit in the curve representation of edges and the original levels are preserved .",
    "furthermore , our method uses a very different algorithm to compute the biclique covers .",
    "in this section we give definitions for confluent layered drawings .",
    "the definitions almost remain the same as in our previous confluent drawing paper , except that the planarity constraints are dropped .",
    "[ fig : first ] gives an idea of confluent layered drawings .",
    "edges in the drawing are represented as smooth curves .",
    "a curve is _ locally monotone _ if it contains no sharp turns , that is , it contains no point with left and right tangents that forms a angle less than or equal to 90 degrees .",
    "intuitively , a locally - monotone curve is like a single train track , which can make no sharp turns .",
    "_ tracks _ are the union of locally - monotone curves .",
    "they are formed by merging edges together .",
    "a drawing @xmath0 formed by a collection of tracks on the plane is called a _ confluent drawing _ for an undirected graph @xmath1 if and only if    * there is a one - to - one mapping between the vertices in @xmath1 and @xmath0 , so that , for each vertex @xmath2 , there is a corresponding vertex @xmath3 , and all vertices of @xmath1 are assigned to distinct points in the plane .",
    "* there is an edge @xmath4 in @xmath5 if and only if there is a locally - monotone curve @xmath6 connecting @xmath7 and @xmath8 in along tracks in  @xmath0 .",
    "the directed version of a confluent drawing is defined similarly , except that in such a drawing the locally - monotone curves are directed and in every track formed by the union of directed curves , the curves must be oriented consistently .",
    "self loops and parallel edges of @xmath1 are not allowed in our definitions , although multiple ways of realizing the same edge are allowed .",
    "namely , for an edge in the original graph , there could be more than one locally monotone path in the drawing corresponding to this edge .",
    "we apply the idea of confluent drawings on layered graphs .",
    "particularly , in the resultant confluent drawing , we replace bicliques in a biclique cover of a two - layer graph @xmath9 by tree - like structures and draw them with smooth curves .",
    "as we can see in [ fig : first ] , our method can greatly reduce the crossings in the drawings of dense bipartite graphs .",
    "additionally , nodes of a biclique can be easily identified by following the smooth curve paths .",
    "since it is valid to have more than one confluent path between two nodes @xmath10 and @xmath11 in the confluent drawing when @xmath12 , as defined above , it is straightforward that a confluent layered drawing can be obtained by computing a biclique cover @xmath13 of @xmath1 , then visualizing each biclique in @xmath13 as a tree - like structure .",
    "we show how to compute a biclique cover of @xmath1 in the next section .",
    "fishburn and hammer  @xcite show that the biclique cover problem is equivalent to a restricted edge coloring problem .",
    "this coloring is not much useful for general graphs .",
    "however , it has a nice result for triangle - free graphs , and since bipartite graphs belong to the class of triangle - free graphs , an immediate result is that this type of edge coloring can be used to find a biclique cover of a bipartite graph .",
    "this result is useful in layered drawing because the edges between any two layers in such a drawing induce a bipartite subgraph .",
    "an edge coloring @xmath14 for @xmath15 is _ simply - restricted _ if no induced @xmath16 is monochromatic and the vertex - disjoint edges in an induced @xmath17 or @xmath18 have different colors . [",
    "fig : forbidden ] shows the conditions that such induced subgraphs of a simply - restricted edge coloring must satisfy .",
    "let @xmath19 denote the bipartite dimension of @xmath1 , which is the minimum cardinality of a biclique cover of @xmath1 .",
    "let @xmath20 be the chromatic number of a simply - restricted edge coloring of @xmath1 .",
    "@xmath20 is @xmath21 if @xmath22 ; otherwise , it is the minimum @xmath23 for which @xmath1 has a simply - restricted coloring @xmath14 .",
    "the following theorem states the equivalence of @xmath19 and @xmath20 for triangle - free graphs .    *",
    "( fishburn and hammer  @xcite ) *    @xmath24 for every triangle - free graph .",
    "[ thm : k3free ]    let @xmath25 be the set of edges with color @xmath26 in a simply - restricted edge coloring for a triangle - free graph @xmath1 . as we can see in the second part of the proof of theorem  [ thm : k3free ] ( omitted here , included in the full version of this paper ) , @xmath25 is included in the edge set of a biclique subgraph of @xmath1 .",
    "therefore , every edge set of a single color induces a biclique subgraph of @xmath1 . by computing a simply restricted edge coloring we can get a biclique cover of @xmath1 .",
    "because it is known that the problem of covering by complete bipartite subgraphs is np - hard ( garey and johnson  @xcite gt18 ) , it is unlikely to have efficient optimization algorithms for finding the minimum biclique cover of a bipartite graph .",
    "thus we only focus on fast heuristics for computing a near - optimal biclique cover .",
    "the simply - restricted edge coloring problem can be transformed into a vertex coloring problem .",
    "so , instead of devising a special algorithm for the simply - restricted edge coloring , we can choose to use one of the existing vertex coloring algorithms .",
    "well known heuristic algorithms for vertex coloring include recursive largest first ( rlf ) algorithm of leighton  @xcite , dsatur algorithm of brlaz  @xcite . for more about heuristics on graph coloring ,",
    "see campers et al .",
    "@xcite .",
    "the above method of computing a biclique cover by coloring does nt distinguish between two kinds of bicliques : @xmath27 and @xmath28 , where @xmath29 .",
    "so if we are more interested in finding out the set of common callers and callees , we would need to give higher priority to @xmath30 than @xmath28 when covering the edges .",
    "after the biclique cover of the two - layer bipartite graph is computed , each biclique in the cover is drawn as a tree - like structure in the final drawing .",
    "doing this repeatedly for every two adjacent layers , we can get the drawings for multi - layer graphs .",
    "the time complexity of the algorithm depends on the coloring heuristic subroutines . for a graph with a set of vertices @xmath31 , both the rlf algorithm and the dsatur algorithm run in worst case @xmath32 time .",
    "there are some other faster coloring heuristics with @xmath33 time , but their output qualities are worse .",
    "suppose we have a two - layer bipartite graph @xmath15 .",
    "the transformation from the simply - restricted edge coloring into vertex coloring version takes @xmath34 time . using rlf or dsatur costs @xmath35 ,",
    "thus the total time is @xmath35 .",
    "we described how to compute a biclique cover of a two - layer bipartite graph in the previous section .",
    "now it is time to show how the bicliques are laid out . in the confluent layered drawings , each biclique in the biclique cover",
    "is visualized as a tree - like structure , as in [ fig : first ] .",
    "now here are the questions .",
    "what are the best positions to place the centers of the tree - like structures ? how to arrange the curves so that they form confluent tracks defined in section  [ sec : definitions ] ?      in the case where the positions of nodes in the upper level and lower level are fixed , one would like to put the center of a tree to the center of the nodes belonging to the corresponding biclique . for example , in [ fig : badcenter ] , the drawing on the left is visually better than the drawing on the right .",
    "firstly it has better angular resolution and better edge separation .",
    "secondly it is easier for people to see the biclique as a whole .",
    "then the next question is : what does the center of those nodes mean ? in our method ,",
    "the natural candidate position for a center of the tree - like structure is the barycenter , i.e. , the average position , of all the nodes in this biclique .",
    "it looks bad too if these tree centers stay very close to each other .",
    "so we need to specify a minimum separation between two centers .",
    "the above requirements can be formulated into constraints :    1 .",
    "a tree center stays within the range of its leaves .",
    "@xmath36 + where @xmath37 is the @xmath38-coordinate of the @xmath39 tree center @xmath40 , and @xmath41 is the @xmath38-coordinate of the @xmath42 leaf of @xmath40 .",
    "2 .   the distance between any two centers is greater than or equal to the minimum separation .",
    "@xmath43 + where @xmath44 is some pre - specified minimum distance .",
    "under these constraints , we want a tree center to stay as close as possible to the barycenter of all its leaf nodes .",
    "i.e. , we want to minimize @xmath45 , subject to the above constraints .",
    "this is a quadratic programming problem , and unfortunately it is np - hard ( garey and  johnson  @xcite ,  mp2 ) .",
    "since it is unlikely to have efficient algorithms for solving this optimization problem , and a small deviation of a tree center from the perfect position wo nt cause too much displeasure , we use instead a very simple heuristic method to place the tree centers .",
    "we first assign to each tree center the @xmath38-coordinate of the barycenter of its leaves .",
    "then we sort tree centers by their @xmath38-value .",
    "the third step is to try to place these tree centers at their @xmath38-coordinates one by one .",
    "assume we have @xmath23 centers to place .",
    "start from the @xmath42 center , where @xmath46 .",
    "place center @xmath26 at its barycenter , then try to place centers one by one in the following order :  @xmath47 . if constraint @xmath48 is violated , the violating center is placed the minimum distance away from the previous placed center .",
    "tree centers to the right of center @xmath26 are placed similarly in the order of  @xmath49 .",
    "it is easy to see that the running time of the barycenter method is dominated by the sorting of the tree centers .",
    "alternatively , one might want to place these centers on positions such that the total number of edge crossings is as few as possible , especially in the case where nodes of upper level and lower level are not fixed .",
    "if this is the main concern , we can place the tree centers in another way in order to reduce the edge crossings .",
    "after the biclique cover of a two - layer graph @xmath9 is computed , we construct a new three - layer graph @xmath50 .",
    "we treat these tree centers as nodes of a middle layer .",
    "the set of vertices includes three levels : an upper layer @xmath51 , a middle layer  @xmath52 consisting of tree centers , and a lower layer  @xmath53 . the edges of @xmath50 are added as follows : for each biclique @xmath54 in the biclique cover , add one edge between the tree center node @xmath55 and each node @xmath56 that belongs to @xmath54 .",
    "similarly add one edge between @xmath55 and each node @xmath57 that belongs to @xmath54 .",
    "now a two - layer graph of the original problem is transformed into a three - layer graph @xmath50 .",
    "straight - line crossing reduction algorithms can be applied on @xmath50 . after the crossing reduction",
    ", we obtain the ordering of nodes in each of the three layers .",
    "the orderings will be used to compute the positions of nodes and tree centers in the final drawings .",
    "note that when crossing reduction method is used to place tree centers , it is not always true that a tree center always stays within the @xmath38-range of its leaves , i.e. , bad centers like the one in [ fig : badcenter ] could appear .",
    "here we are using straight - line edge crossing reduction algorithms for our confluent layered drawings with curve edges .",
    "readers may suspect the equality of the crossing number in the straight - line drawing for the new three - layer graph @xmath50 and the crossing number of our curve edge drawings .",
    "we will confirm this equality after we describe the generation of curves in the next section .",
    "after the positions of tree centers ( and the positions of nodes if not given ) are computed , we are now ready to place the confluent tracks for the edges .",
    "we use curves to draw the curve edges in confluent drawings . given a set of control points @xmath58 ,",
    "the corresponding curve is given by    @xmath59    where @xmath60 is a bernstein polynomial @xmath61    curves have some nice properties that are suitable for our confluent tracks .",
    "the first property is that a curve always passes its first and last control point .",
    "the second is that a curve always stays within the convex hull formed by its control points .",
    "in addition , the tangents of a curve at the endpoints are @xmath62 and @xmath63 .",
    "thus it is easy to connect two curves while still maintaining the first order continuity : just let @xmath64 and let the control points @xmath65,@xmath64,and  @xmath66 co - linear .",
    "the confluent track between each node and the tree center is drawn as a curve . in our program",
    "we use cubic curves ( @xmath67 in equation  [ eqn : bern ] ) .",
    "each such a curve has four control points , chosen as shown in [ fig : bcurves ] .        more formally ,",
    "assume we are given the following input for a biclique @xmath54 : @xmath68,@xmath69 , and @xmath70 are the @xmath71-coordinates of the upper , lower , and tree center levels , respectively .",
    "@xmath37 is the @xmath38-coordinate of the tree center for @xmath54 .",
    "@xmath41 s are the @xmath38-coordinates of nodes in biclique @xmath54 .",
    "let @xmath72 be a distance parameter that controls the shape of the curve edges .",
    "when node @xmath26 is in the upper level , the four control points are @xmath73 , @xmath74 , @xmath75 , and  @xmath76 .",
    "when node @xmath26 is in the lower level , the four control points are @xmath77 , @xmath78 , @xmath79 , and  @xmath80 .    from equation  [ eqn : bcur ] ,",
    "it is not hard to verify that in a confluent layered drawing , two curves cross each other if and only if the corresponding straight - line edges ( dashed lines in [ fig : bcurves ] ) of the bicliques cross each other , given that the control points are chosen as above .",
    "this should clear the doubt that appears at the end of section  [ sec : redu - xings ] .",
    "so far we have introduced the method of confluent layered drawings : replacing subsets of edges in a two - layer graph by tree - like structures .",
    "this method can be extended to obtain drawings that display richer information .",
    "the extended drawings are called _ multi - depth confluent layered drawings_.    the idea is as follows : after the biclique cover for a two - layer graph @xmath9 is computed , the tree center nodes are viewed as a middle layer @xmath52 , and a new three layer graph @xmath81 is constructed as in section  [ sec : redu - xings ] . the same biclique cover algorithm",
    "is then applied to @xmath50 twice , once for the subgraph induced by @xmath82 ; once for the subgraph induced by @xmath83 . by applying this approach recursively ,",
    "we get biclique covers at different depth . in the final drawing ,",
    "only biclique covers at the largest depth are replaced by sets of tree - like structures .",
    "the final drawing is a multi - depth confluent layered drawing .",
    "the drawings discussed before this section are all _ depth - one ( confluent layered ) drawings_.    in a depth - one drawing , we compute a biclique cover and lay out the biclique cover . in general , for a depth-@xmath84 drawing , we need to compute @xmath85 biclique covers and @xmath86 biclique covers are laid out .",
    "an example drawing of depth - two is shown in [ fig : depth - two ] .    ) . ]",
    "because the control points for the curves are chosen in a way such that the tangents at the endpoints of the curves are all vertical , it is guaranteed that all segments of a path are connected seamlessly and smoothly in multi - depth drawings .",
    "readers probably have already noticed some wavy edges in the drawing of [ fig : depth - two ] .",
    "it is because a single edge biclique ( @xmath87 ) is also drawn as two curves .",
    "we offer an option in our program to do a simple treatment for these single edge bicliques : draw them as a single curves instead of two .",
    "but after this special treatment is applied , the crossing property is not preserved any more .",
    "that means two curve segments could have crossing(s ) , even though their corresponding edges in  @xmath50 do nt cross each other in a straight - line drawing .",
    "multi - depth drawings may further reduce the number of crossings .",
    "they also show a richer structure than the depth - one drawings , which only display bicliques .",
    "for example we can observe relationships between bicliques in a depth - two confluent layered drawing .",
    "however higher depth requires more computations of biclique covers , and generates more dummy centers .",
    "the former leads to the increasing of time and space complexity , while the latter could result in a more complicate confluent drawing .",
    "we feel that drawings with depth higher than two are not very practically useful .",
    "we list two example drawings of real - world graphs in [ fig : newbery1 ] .",
    "we implemented the algorithm of computing biclique cover using the rlf heuristic .",
    "for the center placement we implemented the barycenter method .",
    "we assume that besides the two - layer graph , the input also includes the positions of ( fixed ) nodes in upper and lower levels ( possibly output by other algorithms that take labels and other information into account . )",
    "the result drawing is written into a file of dot format  @xcite . the ` neato ` program in the graphviz package  @xcite",
    "is then used to generate the graphic file in a desired format .",
    "[ fig : newbery1 ]  ( a ) is a depth - one drawing .",
    "[ fig : newbery1 ]  ( b ) is a depth - two drawing with the special smoothing treatment applied .",
    "@xmath88{n1.ps}}\\atop      { \\hbox{(a ) `` derives '' relation for the shar program}}\\ ] ]    @xmath89{n2.ps}}\\atop      { \\hbox{(b ) `` includes '' relation for the texchk program}}\\ ] ]",
    "in this paper we introduce a new method  confluent layered drawing , for visualizing layered graphs .",
    "it combines the layered drawing technique with the relaxed confluent drawing approach .",
    "there are still interesting open problems , e.g. , how to test whether a layered graph has a crossing - free confluent layered drawing ? how to minimize the crossing of the drawing among all possible biclique covers ?",
    "it is also useful to investigate better ways for visualizing confluent tracks .",
    "w.  barth , m.  jnger , and p.  mutzel .",
    "simple and efficient bilayer crossing counting . in m.",
    "goodrich and s.  kobourov , editors , _ graph drawing ( proc .",
    "gd 02 ) _ , volume 2528 of _ lecture notes comput .",
    "_ , pages 130141 .",
    "springer - verlag , 2002 .",
    "g.  campers , o.  henkes , and j.  p. leclerq .",
    "graph coloring heuristics : a survey , some new propositions and computational experiences on random and `` leighton s '' graphs . in g.  k. rand , editor , _ operational research 87 ( buenos aires , 1987 ) _ , pages 917932 .",
    "north - holland publishing co , 1988 .",
    "m.  dickerson , d.  eppstein , m.  t. goodrich , and j.  y. meng .",
    "confluent drawing : visualizing nonplanar diagrams in a planar way . in g.",
    "liotta , editor , _ graph drawing ( proc .",
    "gd 03 ) _ , volume 2912 of _ lecture notes comput .",
    "_ , pages 112 .",
    "springer - verlag , 2003 .",
    "t.  eschbach , w.  gnther , r.  drechsler , and b.  becker . crossing reduction by windows optimization . in m.",
    "goodrich and s.  kobourov , editors , _ graph drawing ( proc .",
    "gd 02 ) _ , volume 2528 of _ lecture notes comput .",
    "_ , pages 285294 .",
    "springer - verlag , 2002 .",
    "m.  forster .",
    "applying crossing reduction strategies to layered compound graphs . in m.",
    "goodrich and s.  kobourov , editors , _ graph drawing ( proc .",
    "gd 02 ) _ , volume 2528 of _ lecture notes comput .",
    "_ , pages 276284 .",
    "springer - verlag , 2002 .",
    "m.  newton , o.  skora , and i.  vrto .",
    "two new heuristics for two - sided bipartite graph drawing . in m.  goodrich and s.  kobourov , editors , _ graph drawing ( proc .",
    "gd 02 ) _ , volume 2528 of _ lecture notes comput .",
    "_ , pages 312319 .",
    "springer - verlag , 2002 .",
    "h.  purchase . which aesthetic has the greatest effect on human understanding ? in g.  di battista , editor , _ graph drawing ( proc .",
    "gd 97 ) _ , volume 1353 of _ lecture notes comput .",
    "_ , pages 248261 .",
    "springer - verlag , 1997 .",
    "v.  waddle and a.  malhotra . an e log e line crossing algorithm for levelled graphs . in j.",
    "kratochvl , editor , _ graph drawing ( proc .",
    "gd 99 ) _ , volume 1731 of _ lecture notes comput .",
    "_ , pages 5971 .",
    "springer - verlag , 1999 ."
  ],
  "abstract_text": [
    "<S> we combine the idea of confluent drawings with sugiyama style drawings , in order to reduce the edge crossings in the resultant drawings . </S>",
    "<S> furthermore , it is easier to understand the structures of graphs from the mixed style drawings . </S>",
    "<S> the basic idea is to cover a layered graph by complete bipartite subgraphs ( bicliques ) , then replace bicliques with tree - like structures . </S>",
    "<S> the biclique cover problem is reduced to a special edge coloring problem and solved by heuristic coloring algorithms . </S>",
    "<S> our method can be extended to obtain multi - depth confluent layered drawings . </S>"
  ]
}
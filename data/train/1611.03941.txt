{
  "article_text": [
    "network structures have appeared for a long time , and along with them are those who behave abnormally within the system .",
    "we refer to these people or their illegal activities as anomalies . with respect to financial transactional networks",
    ", anomalies can include those who execute fraudulent transactions . in these networks ,",
    "a common goal is to detect those anomalies to prevent future illegal actions .",
    "bitcoin is a special type of transaction system ; more information about it can be found in [ 1 ] .",
    "we seek to detect anomalies or suspicious activities in this anonymous network , where nodes ( i.e. users , transactions ) are unlabeled and there is no confirmation as to whether or not a given node is actually conducting illicit activities .    in this project ,",
    "we focus particularly on the problem of detecting anomalies in the bitcoin transaction network , which is related to the study of fraud detection in all types of financial transaction systems .",
    "since this problem can be generalized to those in other network settings , which may or may not involve financial transactions , we are examining the more general problem of anomaly detection in networks .    in this paper , we use three unsupervised learning methods including @xmath0-means clustering , mahalanobis distance based method , and unsupervised support vector machines ( svm ) on two graphs generated by the bitcoin transaction network : one graph has users as nodes , and the other has transactions as nodes .    the rest of the paper is organized as follows .",
    "section @xmath1 describes everything related to methods , including data collection and parsing , feature extraction , and mathematical descriptions of the machine learning techniques .",
    "section @xmath2 discusses evaluation methods for our proposed algorithms .",
    "section @xmath3 presents the results we obtained by running these techniques on the network - type data set we generated .",
    "section @xmath4 evaluates our methods and results .",
    "section @xmath5 describes future work .",
    "section @xmath6 concludes our study .",
    "in this section , we describe data collection and parsing . then , we describe feature extraction , and finally we provide mathematical explanations for the unsupervised learning techniques we use .",
    "we use the bitcoin transaction data set obtained from the university of illinois urbana- champaign .",
    "all bitcoin transactions are documented in a public ledger and are in the currency unit called the bitcoin ( btc ) .",
    "the data set contains all bitcoin transactions beginning from the network s creation until april 7th , 2013 . for each transaction",
    ", there can be multiple sender and receiver addresses .",
    "furthermore , multiple addresses can belong to a single user .",
    "finally , users are also anonymous in that there are no names or personal information associated with a given user .",
    "the data set is quite large : there are @xmath7 users with @xmath8 transactions .",
    "we parse the data in two ways .",
    "the first way , which we will call the _ user graph _ , is quite intuitive : users ( where each user owns a list of addresses ) are nodes and transactions between users are edges . the second way , which we will call the _ transaction graph _",
    ", models transactions as nodes and bitcoin flow between transactions as edges .    in our analysis , we will use both graph types to investigate the bitcoin network .",
    "the user graph will help us detect suspicious users , while the transaction graph will help us detect suspicious transactions .",
    "using these two graph representations , we can not only find out both abnormal users and abnormal activities , but also check if our methods are consistent in the sense that suspicious transactions should belong to suspicious users .      in order to use @xmath0-means as a baseline ,",
    "calculate the mahalanobis distance , use an unsupervised svm , for each node in the graph we extract a set of features . in each of the graph representations of the data ( mentioned above ) , we extract the following @xmath9 features .",
    "keep in mind that even with the same names , the features mean different things for the two representations .    * in - degree , out - degree , unique in - degree , unique out - degree , clustering coefficient * average in - transaction , average out - transaction",
    "* average time interval between in - transactions , average time interval between out - transactions , * balance , creation date , active duration        the purpose of the @xmath0-means clustering method is to partition @xmath10 points ( i.e. @xmath10 nodes in the graph ) into @xmath0 groups of similar characteristics . technically speaking , @xmath0-means clustering itself is not a method for anomaly detection ; however , it can be useful .",
    "because we expect outliers to stay far away from the centroids found by @xmath0-means , @xmath0-means can be used to assess our true methods .    for this method to work , we first represent each node as a multi - dimensional vector in the euclidean space ; each dimension of a node is a feature that we choose from the list described in part @xmath11 . for runtime purposes ,",
    "we select only a subset of features . for the user graph",
    ", we use six features : in - degree , out - degree , mean incoming transaction value , mean outgoing transaction value , mean time interval , and clustering coefficient . for transaction graph",
    ", we use three features : in - degree , out - degree , total amount of each transaction .",
    "this method produces a set of @xmath10 points @xmath12 in which @xmath13 ( where @xmath14 or @xmath2 depending on graphs ) for each @xmath15 .",
    "we seek to partition these @xmath10 points into @xmath0 clusters @xmath16 to solve @xmath17 where @xmath18 is the mean of the points in @xmath19 for each @xmath20 .",
    "we use the @xmath0-means clustering algorithm as a heuristic method to solve this problem . the algorithm in details",
    "can be found in @xmath21 $ ] .",
    "our final note in this part is that we use the normalized log of feature values to account for different value scales of different features .",
    "this method is based on the multivariate gaussian distribution assumption .",
    "specifically , we assume the training set @xmath12 where @xmath13 ( again , @xmath14 for user graph and @xmath22 for transaction graph ) drawn from multivariate normal distribution @xmath23    the normal parameter fitting method ( mle ) implies that @xmath24 and @xmath25 can be estimated by @xmath26    then , we will flag @xmath27 as an anomaly if @xmath28 for some chosen threshold @xmath29 .",
    "note that our data are unlabelled , so we will train and detect on the same data set .      the usual svm method does not work here because our data are unlabeled , so we will use a modified version of it .",
    "we also take advantage of the kernel trick so that we can use an infinite dimensional feature space .",
    "we also assume the training set @xmath12 where @xmath13 for all @xmath30 .",
    "we start with the primal optimization problem : @xmath31 a new test example @xmath27 will be labeled @xmath32 .",
    "the point @xmath27 with label @xmath33 is flagged as an anomaly .",
    "note that the data are not linearly separable , so we need to use a soft - margin svm",
    ". however , we will not use the constant @xmath34 as in the usual soft - margin svm due to its difficulty in interpretation .",
    "instead , we follow @xmath35 $ ] to use @xmath36-svm method as follows .    @xmath37    @xmath38    here , @xmath39 $ ] can be interpreted as an upper bound for the fraction of outliers ( i.e. anomalies ) . in the results section",
    ", we will determine which @xmath36 is optimal .",
    "following @xmath35 $ ] again , we can write the corresponding dual problem using the kernel trick : @xmath40 @xmath41 here , we choose @xmath42 where the hyper - parameter @xmath43 will be fine - tuned later .    to solve for this optimization problem efficiently , we can use smo method ( @xmath44 $ ] ) .    finally for @xmath45",
    ", we can recover @xmath46 : @xmath47 then a new point @xmath27 is flagged anomaly if @xmath48 .",
    "again , since our data are all unlabelled , we will will use the same data set for training and detecting .",
    "with unlabeled data , evaluating our methods is a difficult challenge . due to the nature of the network - type data",
    "set we have , we propose three evaluation methods .    * using @xmath0-means as a baseline",
    ", we can calculate the relative distances between the detected outliers and the centroids .",
    "if these values are small , then we conclude that our methods are not good enough .",
    "we call this `` visualization evaluation . ''",
    "* since we represent our data in two ways with nodes and edges somehow exchanging , we can test for our methods consistency by checking if detected suspicious users own detected suspicious transactions .",
    "we call this `` dual evaluation . ''",
    "+ specifically , with the user graph we can get the top @xmath49 user outliers and with the transaction graph we can get the top @xmath50 transaction outliers . in this paper , we choose @xmath51 .",
    "we then determine @xmath52 - the set of transactions corresponding to the top @xmath49 node outliers and @xmath53 - the set of users corresponding to the top @xmath50 transaction outliers defined above .",
    "we define + @xmath54 + and @xmath55 + finally , we define the dual evaluation metric @xmath56 by @xmath57 note that @xmath58 $ ] , and the bigger it is the more accurate our method is . *",
    "finally , there are roughly @xmath59 revealed thieves in the bitcoin network",
    ". we can check if they belong to our detected suspicious user and transaction sets . for this reason",
    ", these users and their illegal transactions will be included in the test sets of our methods .",
    "the @xmath36-svm method takes a long time to run , and since we are not able to use techniques like gpu - parallelized computation at the moment , we will limit our data set to @xmath60 data points for all methods .      using the @xmath0-means clustering metric in @xmath61",
    "$ ] we find that setting @xmath62 minimizes cross - cluster entropy for the user graph and @xmath63 for the transaction graph .",
    "( figure @xmath64 . ) for the sake of the dual evaluation method , we choose @xmath62 for both graph types .",
    "now , we run the mahalanobis distance based method for two types of graphs .",
    "( figures @xmath65 . )",
    "the detected anomalies seem to appear at the border of the plot , which indicates that abnormal activities are usually extreme .",
    "we now run the unsupervised ( one - class ) @xmath36-svm method for two graph types .",
    "we start with identifying the optimal hyper - parameter @xmath36 . based on the evaluation section",
    ", we will choose the @xmath36 which gives the largest values of @xmath66 and @xmath67 .",
    "it turns out that the optimal @xmath36 is around @xmath68 .",
    "( figure @xmath3 . )     and @xmath67 over @xmath36 in @xmath36-svm method . ]",
    "now with @xmath69 , the @xmath36-svm method gives us the detected anomalies for both types of graph representations in figures @xmath4 and @xmath5 .",
    "the suspicious users and transactions suggested by the unsupervised svm method appear to be quite similar to those suggested by the mahalanobis distance based method .",
    "they both usually appear on the outer borders of the graphs .",
    "* using @xmath0-means clustering method , we get @xmath0 clusters with corresponding @xmath0 centroids . for each graph type ( user and transaction ) and for each method ( mahalanobis and unsupervised svm )",
    ", we calculate the average of the ratios of detected anomaly distances to corresponding centroids over max distances from those centroids to their assigned points for the top @xmath70 outliers .",
    "+ for the mahalanobis method , we get @xmath71 for the user graph and @xmath72 for the transaction graph . for the unsupervised svm method",
    ", we get @xmath73 for the user graph and @xmath74 for the transaction graph .",
    "these values are as large as we expect them to be since by observations in the result section , detected anomalies appear to be extreme points . * for the mahalanobis distance based method , we calculate @xmath66 and @xmath67 to be @xmath75 and @xmath76 respectively , which gives @xmath77 .",
    "though this value is quite small , it comes out not as a surprise given the simplicity of our method and our small set of data .",
    "+ for the unsupervised svm method , we get @xmath78 and @xmath79 which gives @xmath80 .",
    "this value is much higher than the one produced by the mahalanobis distance based method , even given our small set of data .",
    "* for the mahalanobis distance based method , we detect one known theft that occurred in june 2011 .",
    "the anomalous transaction obtained a total of over 4000 btc from 620 various addresses and funneled them to a single address . + for the unsupervised svm based method",
    ", we detect one known loss that occurred in october @xmath81 .",
    "the anomalous transaction was one of 23 transactions that caused a user to lose over @xmath82 btc due to corruption in a hashing function .",
    "we propose to parallelize computation in order to enable faster outlier detection using a gpu .",
    "this involves significant work , such as introducing thread - safety in the learning methods , but will allow us to analyze the full dataset of @xmath83 million transactions .",
    "in this paper , we have investigate the bitcoin network .",
    "we first represent the data with two focuses : users and transactions .",
    "we then use three main social network techniques to detect anomalies , which are potential anomalous users and transactions",
    ". while the agreement metrics are not high , we are able to detect two known cases of theft and one known case of loss , out of the 30 known cases we have .",
    "[ 1 ] https://bitcoin.org/en/ + [ 2 ] lloyd , stuart p. ( 1982 ) , _ least squares quantization in pcm _ , ieee transactions on information theory 28 ( 2 ) : 129 - 137 . + [ 3 ] b. schlkopf , j. platt , j. shawe - taylor , a. j. smola , and r. c. williamson._estimating the support of a high - dimensional distribution . _ neural computation , 13 , 2001 , 1443 - 1471 . + [ 4 ] j. platt .",
    "_ sequential minimal optimization : a fast algorithm for training support vector machines .",
    "_ technical report msr - tr-98 - 14 , microsoft research , 1998a .",
    "+ [ 5 ] xiong , h. et al . _",
    "k - means clustering versus validation measures : a data distribution perspective .",
    "_ kdd06 , august 20 - 23 , 2006 ."
  ],
  "abstract_text": [
    "<S> the problem of anomaly detection has been studied for a long time . in short , anomalies are abnormal or unlikely things . in financial networks , </S>",
    "<S> thieves and illegal activities are often anomalous in nature . </S>",
    "<S> members of a network want to detect anomalies as soon as possible to prevent them from harming the network s community and integrity . </S>",
    "<S> many machine learning techniques have been proposed to deal with this problem ; some results appear to be quite promising but there is no obvious superior method . in this paper , we consider anomaly detection particular to the bitcoin transaction network . </S>",
    "<S> our goal is to detect which users and transactions are the most suspicious ; in this case , anomalous behavior is a proxy for suspicious behavior . to this end , we use three unsupervised learning methods including @xmath0-means clustering , mahalanobis distance , and unsupervised support vector machine ( svm ) on two graphs generated by the bitcoin transaction network : one graph has users as nodes , and the other has transactions as nodes . </S>"
  ]
}
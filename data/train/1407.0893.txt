{
  "article_text": [
    "thermal interaction between fluids and structures plays an important role in many applications .",
    "examples for this are cooling of gas - turbine blades , thermal anti - icing systems of airplanes @xcite or supersonic reentry of vehicles from space @xcite .",
    "another is quenching , an industrial heat treatment of metal workpieces . there ,",
    "the desired material properties are achieved by rapid local cooling , which causes solid phase changes , allowing to create graded materials with precisely defined properties .    gas quenching recently received a lot of industrial and scientific interest @xcite .",
    "in contrast to liquid quenching , this process has the advantage of minimal environmental impact because of non - toxic quenching media and clean products like air @xcite . to exploit the multiple advantages of gas quenching the application of computational fluid dynamics",
    "has proved essential @xcite .",
    "thus , we consider the coupling of the compressible navier - stokes equations as a model for air , along a non - moving boundary with the nonlinear heat equation as a model for the temperature distribution in steel .    for the solution of the coupled problem , we prefer a partitioned approach @xcite , where different codes for the sub - problems are reused and the coupling is done by a master program which calls interface functions of the other codes .",
    "this allows to use existing software for each sub - problem , in contrast to a monolithic approach , where a new code is tailored for the coupled equations . to satisfy the boundary conditions at the interface",
    ", the subsolvers are iterated in a fixed point procedure .",
    "our goal here is to find a fast solver in this partitioned setting .",
    "one approach would be to speed up the subsolvers and there is active research on that .",
    "see @xcite for the current situation for fluid solvers . however , we want to approach the problem from the point of view of a partitioned coupling method , meaning that we use the subsolvers as they are . as a reference solver ,",
    "we use the time adaptive higher order time integration method suggested in @xcite .",
    "namely , the singly diagonally implicit runge - kutta ( sdirk ) method sdirk2 is employed .    to improve upon this ,",
    "one idea is to define the tolerances in the subsolver in a smart way and recently , progress has been made for steady problems @xcite .",
    "however , it is not immediately clear how to transfer these results to the unsteady case .",
    "thus , the most promising way is to reduce the number of fixed point iterations , on which we will focus in the present article .",
    "various methods have been proposed to increase the convergence speed of the fixed point iteration by decreasing the interface error between subsequent steps , for example relaxation @xcite , interface - gmres @xcite , rom - coupling @xcite and multigrid coupling @xcite . here , we consider the most standard method , namely aitken relaxation and two variants of polynomial vector extrapolation , namely mpe and rre @xcite .",
    "these have the merit of being purely algebraic and very easy to implement .    the second idea",
    "we follow is that of extrapolation based on knowledge about the time integration scheme .",
    "this has been successfully used in other contexts @xcite , but has to our knowledge never been tried in fluid structure interaction , where typically little attention is given to the time integration . here",
    ", we use linear and quadratic extrapolation of old values from the time history , designed specifically for sdirk2 .",
    "the various methods are compared on the basis of numerical examples , namely the flow past a flat plate , a basic test case for thermal fluid structure interaction and an example from gas quenching @xcite .",
    "the basic setting we are in is that on a domain @xmath3 the physics is described by a fluid model , whereas on a domain @xmath4 , a different model describing the structure is used .",
    "the two domains are almost disjoint in that they are connected via an interface . the part of the interface where the fluid and the structure are supposed to interact is called the coupling interface @xmath5 . note that @xmath6 might be a true subset of the intersection , because the structure could be insulated . at the interface @xmath6",
    ", coupling conditions are prescribed that model the interaction between fluid and structure . for the thermal coupling problem , these conditions are that temperature and the normal component of the heat flux are continuous across the interface .",
    "we model the fluid using the navier - stokes equations , which are a second order system of conservation laws ( mass , momentum , energy ) modeling viscous compressible flow .",
    "we consider the two dimensional case , written in conservative variables density @xmath7 , momentum @xmath8 and energy per unit volume @xmath9 :    -.6 cm @xmath10    here , @xmath11 represents the viscous shear stress tensor and @xmath12 the heat flux . as the equation are dimensionless , the reynolds number @xmath13 and the prandtl number @xmath14 appear .",
    "the system is closed by the equation of state for the pressure @xmath15 , the sutherland law representing the correlation between temperature and viscosity as well as the stokes hypothesis .",
    "additionally , we prescribe appropriate boundary conditions at the boundary of @xmath16 except for @xmath6 , where we have the coupling conditions . in the dirichlet - neumann coupling",
    ", a temperature value is enforced strongly at @xmath6 .      regarding the structure model",
    ", we will consider heat conduction only .",
    "thus , we have the nonlinear heat equation for the structure temperature @xmath17 -.6 cm @xmath18 where @xmath19 denotes the heat flux vector . for steel ,",
    "the specific heat capacity @xmath20 and heat conductivity @xmath21 are temperature - dependent and highly nonlinear . here , an empirical model for the steel 51crv4 suggested in @xcite is used .",
    "this model is characterized by the coefficient functions -.6 cm @xmath22 and -.6 cm @xmath23 with -.6 cm @xmath24 and -.6 cm @xmath25    for the mass density one has @xmath26 . finally ,",
    "on the boundary , we have neumann conditions @xmath27 .",
    "following the partitioned coupling approach , we discretize the two models separately in space . for the fluid",
    ", we use a finite volume method , leading to    @xmath28    where @xmath29 represents the spatial discretization and its dependence on the temperatures in the fluid .",
    "in particular , the dlr tau - code is employed @xcite , which is a cell - vertex - type finite volume method with ausmdv as flux function and a linear reconstruction to increase the order of accuracy .",
    "regarding structural mechanics , the use of finite element methods is ubiquitious .",
    "therefore , we will also follow that approach here and use quadratic finite elements @xcite , leading to the nonlinear equation for all unknowns on @xmath30    @xmath31    here , @xmath32 is the heat capacity and @xmath33 the heat conductivity matrix .",
    "the vector @xmath34 consists of all discrete temperature unknowns and @xmath35 is the heat flux vector on the surface . in this case",
    "it is the prescribed neumann heat flux vector of the fluid .      for the time integration , a time adaptive sdirk2 method",
    "is implemented in a partitioned way , as suggested in @xcite .",
    "if the fluid and the solid solver are able to carry out time steps of implicit euler type , the master program of the fsi procedure can be extended to sdirk methods very easily , since the master program just has to call the backward euler routines with specific time step sizes and starting vectors .",
    "this method is very efficient and will be used as the base method in its time adaptive variant , which is much more efficient than more commonly used fixed time step size schemes .    to obtain time adaptivity ,",
    "embedded methods are used .",
    "thereby , the local error is estimated by the solvers separately , which then report the estimates back to the master program .",
    "based on this , the new time step is chosen @xcite . to this end , all stage derivatives are stored by the subsolvers .",
    "furthermore , if the possibility of rejected time steps is taken into account , the current solution pair @xmath36 has to be stored as well .    to comply with the conditions that the discrete temperature and heat flux are continuous at the interface @xmath6",
    ", a dirichlet - neumann coupling is used .",
    "thus , the boundary conditions for the two solvers are chosen such that we prescribe neumann data for one solver and dirichlet data for the other . following the analysis of giles @xcite ,",
    "temperature is prescribed for the equation with smaller heat conductivity , here the fluid , and heat flux is given on @xmath6 for the structure .",
    "choosing these conditions the other way around leads to an unstable scheme .    in the following it",
    "is assumed that at time @xmath37 , the step size @xmath38 is prescribed . applying a dirk method to equation ( [ eq : odefluid])-([eq : odeheat ] ) results in the coupled system of equations to be solved at runge - kutta stage @xmath39 : -.6 cm @xmath40 -.6 cm @xmath41 { \\boldsymbol{\\theta}}_i -      { \\ensuremath{\\mathbf{m } } } { \\ensuremath{\\mathbf{s}}}_i^{\\theta } - { \\delta t_n",
    "\\,}a_{ii}{\\ensuremath{\\mathbf{q}}}_b({\\bf u}_i ) = { \\ensuremath{\\mathbf{0}}}.    \\end{aligned}\\ ] ] here , @xmath42 is a coefficient of the time integration method and @xmath43 and @xmath44 are given vectors , called starting vectors , computed inside the dirk scheme . the dependence of the fluid equations @xmath45 on the temperature @xmath46 results from the nodal temperatures of the structure at the interface .",
    "this subset is written as @xmath47 .",
    "accordingly , the structure equations depend only on the heat flux of the fluid at the coupling interface .",
    "to solve the coupled system of nonlinear equations ( [ eq : fnoneq])-([eq : tlineq ] ) , a strong coupling approach is employed .",
    "thus , a fixed point iteration is iterated until a convergence criterion is satisfied . in particular",
    ", we use a a nonlinear gau - seidel process : @xmath48 each inner iteration is thereby done locally by the structure or the fluid solver .",
    "more specific , a newton method is used in the structure and a fas multigrid method is employed in the fluid .    in the base method ,",
    "the starting values of the iteration are given by @xmath49 and @xmath50 .",
    "the termination criterion is formulated by the relative update of the nodal temperatures at the interface of the solid structure and we stop once we are below the tolerance in the time integration scheme divided by five -.6 cm @xmath51 the vector -.6 cm @xmath52 is often referred to as the interface residual",
    ".    we will now consider different techniques to improve upon this base iteration , namely using vector extrapolation inside the fixed point iteration and then extrapolation inside the time integration schemes , to obtain better initial values .      to improve the convergence speed of the fixed point iteration , different vector extrapolation techniques have been suggested .",
    "these are typically classic techniques , where a set of @xmath53 vectors of a convergent vector sequence is extrapolated to obtain a faster converging sequence .",
    "we are now going to describe three techniques that we will investigate in this framework .",
    "relaxation means that after the fixed point iterate is computed , a relaxation step is added :    -.6 cm @xmath54 several strategies exist to compute the relaxation parameter @xmath55 .",
    "the idea of aitken s method is to enhance the current solution @xmath56 using two previous iteration pairs @xmath57 and @xmath58 obtained from the gau - seidel - step ( [ eq : gsf])- .",
    "an improvement in the scalar case is given by the secant method -.6 cm @xmath59 the relaxation factor in equation ( [ eq : relax_a ] ) for the secant method ( [ eq : secant ] ) is then -.6 cm @xmath60 as customary , we use an added recursion on @xmath61 in which we use the old relaxation factor @xmath62 : -.6 cm @xmath63 in the vector case the division by the residual @xmath64 is not possible .",
    "therefore , we multiply the nominator and the numerator formally by @xmath65 to obtain -.6 cm @xmath66 two previous steps are required to calculate the relaxation parameter . for the first fixpoint iteration , the relaxation parameter @xmath67 must be prescribed .",
    "we choose @xmath68 , which was reported by other authors to work well .",
    "another idea we will follow here are minimal polynomial extrapolation ( mpe ) and reduced rank extrapolation ( rre ) @xcite . here , the new approximation is given as a linear combination of existing iterates with coefficients @xmath69 to be determined : -.6 cm @xmath70 for mpe , the coefficients are defined via -.6 cm @xmath71 where the coefficients @xmath72 are the solution of the problem -.6 cm @xmath73    for rre , the coefficients are defined as the solution of the constrained least squares problem -.6 cm @xmath74    these problems are then solved using a qr decomposition .      to find good starting values for iterative processes in implicit time integration schemes ,",
    "it is common to use extrapolation based on knowledge about the trajectory of the solution of the initial value problem @xcite . in the spirit of partitioned solvers",
    ", we here suggest to use extrapolation of the interface temperatures only .",
    "of course , this strategy could be used as well by the subsolvers , but we will not consider this here .    at the first stage , we have the old time step size @xmath75 with value @xmath76 and the current time step size @xmath77 with value @xmath78 .",
    "we are looking for the value @xmath79 at the next stage time @xmath80 .",
    "linear extrapolation results in @xmath81 regarding quadratic extrapolation , it is reasonable to choose @xmath37 , @xmath82 and the intermediate temperature vector @xmath83 from the previous stage @xmath84 .",
    "this results in @xmath85    when applying this idea at the second stage ( or at later stages in a scheme with more than two ) , it is better to use values from the current time interval . thus , we linearly extrapolate @xmath78 at @xmath37 and @xmath79 at @xmath86 to obtain @xmath87 this results in @xmath88",
    "as a first test case , the cooling of a flat plate resembling a simple work piece is considered .",
    "the work piece is initially at a much higher temperature than the fluid and then cooled by a constant air stream , that is assumed to be laminar , see figure [ fig : testcase ] .",
    "the inlet is given on the left , where air enters the domain with an initial velocity of @xmath89 in horizontal direction and a temperature of .",
    "then , there are two succeeding regularization regions of to obtain an unperturbed boundary layer . in the first region ,",
    "@xmath90 , symmetry boundary conditions , @xmath91 , @xmath92 , are applied . in the second region , @xmath93 , a constant wall temperature of",
    "is specified . within this region the velocity boundary layer fully develops .",
    "the third part is the solid ( work piece ) of length , which exchanges heat with the fluid , but is assumed insulated otherwise , thus @xmath94 .",
    "therefore , neumann boundary conditions are applied throughout .",
    "finally , the fluid domain is closed by a second regularization region of with symmetry boundary conditions and the outlet .    regarding the initial conditions in the structure ,",
    "a constant temperature of at @xmath95 is chosen throughout . to specify reasonable initial conditions within the fluid , a steady state solution of the fluid with a constant wall temperature @xmath96",
    "is computed .",
    "the grid    is chosen cartesian and equidistant in the structural part , where in the fluid region the thinnest cells are on the boundary and then become coarser in @xmath97-direction ( see figure [ fig : grid ] ) . to avoid additional difficulties from interpolation , the points of the primary fluid grid , where the heat flux is located in the fluid solver , and the nodes of the structural grid are chosen to match on the interface @xmath6 .    to compare the effect of the different vector extrapolation strategies , we consider the fixed point equation within the first stage of the first time step in the test problem with a time step size of @xmath98s and @xmath99s . in figure",
    "[ fig : onesystem ] , we can see how the interface residual decreases with the fixed point iterations . during the first two steps all methods have the same residual norm , since all methods need at least two iterations to start . for this example , the vector extrapolation methods outperform the standard scheme for tolerances below @xmath100 .",
    ".[tab : plate - fixed - v - adaptive]total number of iterations for 100 secs of real time without any extrapolation . fixed timestepsizes versus adaptive steering . [ cols=\"^,^,^,^\",options=\"header \" , ]     [ tab : plate - fixed - timestep ]    we now compare the different schemes for a whole simulation of @xmath101 seconds real time . if not mentioned otherwise , the initial time step size is @xmath102 . to first give an impression on the effect of the time adaptive method",
    ", we look at fixed time step versus adaptive computations in tabular [ tab : plate - fixed - timestep ] .",
    "thus , the different tolerances for the time adaptive case lead to different time step sizes and tolerances for the nonlinear system over the course of the algorithm , whereas in the fixed time step size , they steer only how accurate the nonlinear systems are solved . for the fixed time step case , we chose @xmath102 and @xmath103 , which roughly corresponds to an error of @xmath104 and @xmath105 , respectively @xmath106 .",
    "thus , computations in one line of tabular [ tab : plate - fixed - timestep ] correspond to similar errors . as can be seen , the time adaptive method is in the worst case a factor two faster and in the best case a factor of eight . thus the time adaptive computation serves from now on as the base method for the construction of a fast solver .",
    "* 6c @xmath107 & no relax . &",
    "aitken & mpe & rre + @xmath104 & 31 & 32 & 31 & 31 + @xmath105 & 39 & 38 & 39 & 39 + @xmath106 & 106 & 103 & 106 & 106 + @xmath100 & 857 & 736 & 857 & 857 +    the next computations demonstrate the effect of vector extrapolation . with increasing time the time adaptive algorithm chooses larger time step sizes .",
    "the base method needs more fixed point iterations in the end of the time interval , while the other methods have remained roughly constant .",
    "the total number of fixed point iterations is shown in tabular [ tab:100secs ] .",
    "as we can see , only aitken relaxation has an advantage over the base method and that only for a tolerance of @xmath100 . for larger tolerances ,",
    "all the methods need roughly the same number of iterations , which is also confirmed in figure [ fig : onesystem ] , where all methods overlap for @xmath108 .",
    "essentially , the interplay between the fixed point iteration and the time adaptive scheme results in only two fixed point iterations being necessary per time step ( compare equation ) .",
    "thus , the vector extrapolation methods have no effect .",
    "* 7c @xmath107 & none & lin . &",
    "+ @xmath104 & 31 & 19 & 25 + @xmath105 & 39 & 31 & 32 + @xmath106 & 106 & 73 & 77 + @xmath100 & 857 & 415 & 414 +    finally , we consider extrapolation based on the time integration scheme . in table [ tab : extrap - plate ] , the total number of iterations for 100 seconds of real time is shown .",
    "as can be seen , linear extrapolation speeds up the computations between @xmath109 and @xmath110 .",
    "quadratic extrapolation leads to a speedup between @xmath111 and @xmath112 being overall less efficient than the linear extrapolation procedure .",
    "overall , we are thus able to simulate 100 seconds of real time for this problem for an engineering tolerance using only 19 calls to fluid and the structure solver each .    to understand this more precisely , we considered the second stage of the second time step in an adaptive computation .",
    "we thus have finished the first time step with @xmath113 and the second time step gets doubled , leading to @xmath114 .",
    "this is depicted in figure [ fig : compare_extrapolation ] . to obtain a temperature for the new time @xmath115",
    "the linear extrapolation method uses the values of the current time @xmath37 and of the first runge - kutta step at @xmath116 .",
    "as can be seen , this predicts the new time step very well .",
    "in contrast , the quadratic extrapolation uses for the new time step the solution from the previous time @xmath117 the current time @xmath118 and from the first runge kutta stage .",
    "since the exact solution has a more linear behavior in the time step , the quadratic extrapolation provides no advantage , in particular since it slopes upward after some point .",
    "( 160,140 ) ( 20,15)comparison of the linear and quadratic extrapolation methods for the time step @xmath119s.,title=\"fig:\",scaledwidth=42.0% ] ( 120,100 ) ( 0,-2 ) ( 100,120)comparison of the linear and quadratic extrapolation methods for the time step @xmath119s.,title=\"fig:\",width=18 ] ( 100,110)comparison of the linear and quadratic extrapolation methods for the time step @xmath119s.,title=\"fig:\",width=18 ] ( 100,100)comparison of the linear and quadratic extrapolation methods for the time step @xmath119s.,title=\"fig:\",width=18 ] ( 115,123)(0,0)[l]linear extrap .",
    "( 115,112)(0,0)[l]quad .",
    "( 115,102)(0,0)[l]final solns .",
    "( 21,10)(0,0)[c]@xmath120 ( 69,10)(0,0)[c]@xmath121 ( 116,10)(0,0)[c]@xmath122 ( 163,10)(0,0)[c]@xmath123 ( 90,3)(0,0)[c]@xmath124 [ s ] ( 10,0 ) ( 9,18)(0,0)[r]@xmath125 ( 9,32)(0,0)[r]@xmath126 ( 9,50)(0,0)[r]@xmath127 ( 9,66)(0,0)[r]@xmath128 ( 9,82)(0,0)[r]@xmath17 [ k ] ( 9,99)(0,0)[r]@xmath129 ( 9,115)(0,0)[r]@xmath130 ( 9,130)(0,0)[r]@xmath131      as a second test case , we consider the cooling of a flanged shaft by cold high pressured air , a process that s also known as gas quenching .",
    "the complete process consists of the inductive heating of a steel rod , the forming of the hot rod into a flanged shaft , a transport to a cooling unit and the cooling process . here",
    ", we consider only the cooling , meaning that we have a hot flanged shaft that is cooled by cold high pressured air coming out of small tubes .",
    "we consider a two dimensional cut through the domain and assume symmetry along the horizontal axis , resulting in one half of the flanged shaft and two tubes blowing air at it , see figure [ fig : flangesketch ] .",
    "we assume that the air leaves the tube in a straight and uniform way at a mach number of 1.2 .",
    "furthermore , we assume a freestream in @xmath132-direction of mach 0.005 .",
    "this is mainly to avoid numerical difficulties at mach 0 , but could model a draft in the workshop .",
    "the reynolds number is @xmath133 and the prandtl number @xmath134 .",
    "the grid consists of 279212 cells in the fluid , which is the dual grid of an unstructured grid of quadrilaterals in the boundary layer and triangles in the rest of the domain , and 1997 quadrilateral elements in the structure .",
    "it is illustrated in figure [ fig : flangegrid ] .    to obtain initial conditions for the subsequent tests , we use the following procedure",
    ": we define a first set of initial conditions by setting the flow velocity to zero throughout and choose the structure temperatures at the boundary points to be equal to temperatures that have been measured by a thermographic camera .",
    "then , setting the @xmath97-axis on the symmetry axis of the flange , we set the temperatur at each horizontal slice to the temperature at the correspoding boundary point .",
    "finally , to determine the actual initial conditions , we compute @xmath100 seconds of real time using the coupling solver with a fixed time step size of @xmath135 .",
    "this means , that the high pressured air is coming out of the tubes and the first front has already hit the flanged shaft .",
    "this solution is illustrated in figure  [ fig : temperatureflange ] ( left ) .",
    "the wiggles in the structure are due to visualization artifacts .",
    "now , we compute 1 second of real time using the time adaptive algorithm with different tolerances and an initial time step size of @xmath135 .",
    "this small initial step size is necessary to prevent instabilities in the fluid solver .",
    "during the course of the computation , the time step size is increased until it is on the order of @xmath136 , which demonstrates the advantages of the time adaptive algorithm and reaffirms that it is this algorithm that we need to compare to . in total",
    ", the time adaptive method needs 22 , 41 , 130 and 850 time steps to reach @xmath137 for the different tolerances , compared to the @xmath138 steps the fixed time step method would need .",
    "the solution at the final time is depicted in figure  [ fig : temperatureflange ] ( right ) . as can be seen , the stream of cold air is deflected by the shaft .",
    "we then compare the total number of iterations for the different vector extrapolation methods , see table [ tab : flangedvectorextr ] .",
    "as before , the vector extrapolation methods have almost no effect on the number of iterations .",
    "* 6c @xmath107 & & no relax . &",
    "aitken & mpe & rre + @xmath104 & @xmath139iterations & 52 & 52 & 52 & 52 + @xmath105 & @xmath139iterations & 127 & 128 & 127 & 127 + @xmath106 & @xmath139iterations & 433 & 430 & 433 & 433 + @xmath100 & @xmath139iterations & 2874 & 2859 & 2874 & 2874 +    finally , we consider extrapolation based on the time integration scheme . in table [ tab : extrap - shaft ] , the total number of iterations for 1 second of real time is shown .",
    "as before , the extrapolation methods cause a noticable decrease in the total number of fixed point iterations , with linear extrapolation performing better than the quadratic version .",
    "the speedup from linear extrapolation is between 20% and 30% , compared to the results obtained without extrapolation .    *",
    "4c @xmath107 & none & lin . &",
    "+ @xmath104 & 52 & 42 & 47 + @xmath105 & 127 & 97 & 99 + @xmath106 & 433 & 309 & 312 + @xmath100 & 2874 & 1805 & 1789 +",
    "we considered a time dependent thermal fluid structure interaction problem where a nonlinear heat equation to model steel is coupled with the compressible navier - stokes equations .",
    "the coupling is performed in a dirichlet - neumann manner . as a fast base solver ,",
    "a higher order time adaptive method is used for time integration .",
    "this method is significantly more efficient than a fixed time step method and is therefore the scheme to beat .    to reduce the number of fixed point iterations in a partitioned spirit",
    ", first different vector extrapolation techniques , namely aitken relaxation , mpe and rre were compared .",
    "these have a negligible effect , since they are only useful when a large number of iterations is needed per system and the time adaptive method results in only two iterations being necessary per time step .",
    "however , extrapolation based on the time integration method works from the first iteration and reduces the number of iterations by up to @xmath140 .",
    "hereby , linear extrapolation works better than quadratic .",
    "the combined time adaptive method with linear extrapolation thus allows to solve real life problems at engineering tolerances using only a couple dozen calls to the fluid and structure solver .",
    "financial support has been provided by the german research foundation ( dfg ) via the sonderforschungsbereich transregio 30 , projects c1 and c2 .                      , _ cfd - based nonlinear computational aeroelasticity _ , in encyclopedia of computational mechanics , e.  stein , r.  de  borst , and t.  j.  r. hughes , eds . ,",
    "vol .  3 : fluids , john wiley & sons , 2004 , ch .  13 , pp",
    ".  459480 ."
  ],
  "abstract_text": [
    "<S> we consider time dependent thermal fluid structure interaction . </S>",
    "<S> the respective models are the compressible navier - stokes equations and the nonlinear heat equation . </S>",
    "<S> a partitioned coupling approach via a dirichlet - neumann method and a fixed point iteration is employed . as a refence solver </S>",
    "<S> a previously developed efficient time adaptive higher order time integration scheme is used .    to improve upon this </S>",
    "<S> , we work on reducing the number of fixed point coupling iterations . </S>",
    "<S> thus , first widely used vector extrapolation methods for convergence acceleration of the fixed point iteration are tested . in particular , aitken relaxation , minimal polynomial extrapolation ( mpe ) and reduced rank extrapolation ( rre ) are considered . </S>",
    "<S> second , we explore the idea of extrapolation based on data given from the time integration and derive such methods for sdirk2 . while the vector extrapolation methods have no beneficial effects , the extrapolation methods allow to reduce the number of fixed point iterations further by up to a factor of two with linear extrapolation performing better than quadratic .    _ </S>",
    "<S> @xmath0centre for the mathematical sciences , numerical analysis , lunds university , box 118 , 22100 lund , sweden + e - mail : philipp.birken@na.lu.se + @xmath1institute of mathematics , university of kassel , heinrich - plett - str . </S>",
    "<S> 40 , 34132 kassel , germany + @xmath2 institute of mechanics and dynamics , university of kassel , mnchebergstr . 7 , 34109 kassel , germany _    _ keywords : thermal fluid structure interaction , partitioned coupling , convergence acceleration , extrapolation _ </S>"
  ]
}
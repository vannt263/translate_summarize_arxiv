{
  "article_text": [
    "a minimum dominating set @xmath3 for a set @xmath0 of @xmath1 points in @xmath2 is defined as follows : ( i ) @xmath9 ( ii ) each point @xmath10 is covered by at least one unit radius disk centered at a point in @xmath3 , and ( iii ) size of @xmath3 is minimum .",
    "the _ minimum dominating set _ ( mds ) problem for a point set @xmath0 of size @xmath1 in @xmath2 involves finding a minimum dominating set @xmath3 for the set @xmath0 .",
    "we call this problem as a geometric version of mds problem .",
    "the mds problem for a point set can be modeled as an mds problem in unit disk graph ( udg ) as follows : a unit disk graph @xmath11 for a set @xmath12 of @xmath1 unit diameter disks in @xmath2 is the intersection graph of the family of disks in @xmath12 i.e. , the vertex set @xmath13 corresponds to the set @xmath12 and two vertices are connected by an edge if the corresponding disks have common intersection .",
    "the minimum dominating set for the graph @xmath14 is a minimum size subset @xmath15 of @xmath13 such that for each of the vertex @xmath16 is either in @xmath15 or adjacent to to a node in @xmath15 in @xmath14 .",
    "several people have done research on mds problem because of its wide applications such as wireless networking , facility location problem , to name a few .",
    "our interest in this problem arose from the following reason : suppose in a city we have a set @xmath0 of @xmath1 important locations ( houses , etc . ) ; the objective is to provide some emergency services ( ambulance , fire station , etc . ) to each of the locations in @xmath0 so that each location is within a predefined distance of at least one service center .",
    "note that positions of the emergency service centers are from the predefined set @xmath0 of locations only .",
    "the mds problem can be viewed as a general set cover problem , but it is an np - hard problem @xcite and not approximable within @xmath17 for some constant @xmath18 unless p = np @xcite .",
    "therefore @xmath19-factor approximation algorithm is possible for mds problem by applying the algorithm for general set cover problem @xcite .",
    "some exciting results for the geometric version of mds problem are available in the literature .    in the _ discrete unit disk cover _",
    "( dudc ) problem , two sets @xmath20 and @xmath21 of points in @xmath2 are given , the objective is to choose minimum number of unit disks @xmath22 centered at the points in @xmath21 such that the union of the disks in @xmath22 covers all the points in @xmath20 .",
    "johnson @xcite proved that the dudc problem is np - hard .",
    "mustafa and ray in 2010 @xcite proposed a @xmath23-approximation algorithm for @xmath24 ( ptas ) for the dudc problem using @xmath25-net based local improvement approach .",
    "the fastest algorithm is obtained by setting @xmath26 for a 3-factor approximation algorithm , which runs in @xmath27 ) time , where @xmath28 and @xmath1 are number of unit radius disks and number of points respectively @xcite .",
    "the high complexity of the ptas leads to further research on constant factor approximation algorithms for the dudc problem .",
    "a series of constant factor approximation algorithms for dudc problem are available in the literature :    * 108-approximation algorithm [ clinescu et al . , 2004 @xcite ]",
    "* 72-approximation algorithm [ narayanappa and voytechovsky , 2006 @xcite ] * 38-approximation algorithm in o(@xmath29 ) time [ carmi et al .",
    ", 2007 @xcite ] * 22-approximation algorithm in o(@xmath29 ) time [ claude et al . , 2010 @xcite ] * 18-approximation algorithm in o(@xmath30 ) time [ das et al . ,",
    "2012 @xcite ] * 15-approximation algorithm in o(@xmath31 ) time [ fraser and lpez - ortiz , 2012 @xcite ] * @xmath32-approximation algorithm in @xmath33 time [ acharyya et al . , 2013 @xcite ]    the dudc problem is a geometric version of mds problem for @xmath34 . therefore all results for the dudc problem are applicable to mds problem .    the geometric version of mds problem is known to be np - hard @xcite .",
    "nieberg and hurink @xcite proposed @xmath35-factor approximation algorithm for @xmath36 .",
    "the fastest algorithm is obtained by setting @xmath37 for a @xmath38-approximation result , which runs in @xmath39 time @xcite , which is not practical even for @xmath40 .",
    "another ptas for dominating set of arbitrary size disk graph is available in the literature proposed by gibson and pirwani @xcite .",
    "the running time of this ptas is @xmath41 .",
    "marathe et al .",
    "@xcite proposed a 5-factor approximation algorithm for the mds problem .",
    "ambhl et al .",
    "@xcite proposed 72-factor approximation algorithm for weighted dominating set ( wds ) problem . in the wds problem",
    ", each node has a positive weight and the objective is to find the minimum weight dominating set of the nodes in the graph .",
    "huang et al .",
    "@xcite , dai and yu @xcite , and zou et al .",
    "@xcite improved the approximation factor for wds problem to @xmath42 , @xmath43 , and @xmath44 respectively .",
    "first , they proposed @xmath45-factor ( @xmath46 in @xcite , @xcite , and @xcite respectively ) approximation algorithm for a subproblem and using the result of their corresponding sub - problems they proposed @xmath47-factor approximation algorithms .",
    "the time complexity of their algorithms are @xmath48 , where @xmath49 is the time complexity of the algorithm for the sub - problem and @xmath50 is the number of times the sub - problem needs to be invoked to solve the original problem .",
    "the @xmath51-factor approximation algorithm can be obtained by setting @xmath37 , but the time complexity becomes a very high degree polynomial function in @xmath1 .",
    "carmi et al .",
    "@xcite proposed a 5-factor approximation algorithm of the mds problem for arbitrary size disk graph .",
    "fonseca et al .",
    "@xcite proposed a @xmath52-factor approximation algorithm for the mds problem in udg which can be achieved in @xmath53 time , when the input is a graph with @xmath1 vertices and @xmath28 edges , and in @xmath54 time , in the geometric version of the problem .",
    "the same set of authors also proposed a @xmath55-factor approximation algorithm for the mds problem in udg which runs in @xmath56 time @xcite .",
    "recently , de at al .",
    "@xcite considered the geometric version of mds problem and proposed 12-factor , 4-factor , and 3-factor approximation algorithms with running time @xmath54 , @xmath57 , and @xmath58 respectively .",
    "they also proposed a ptas with high degree polynomial running time .",
    "in this paper , we consider the geometric version of mds problem and propose a series of constant factor approximation algorithms .",
    "we first propose 4-factor and 3-factor approximation algorithms with running time @xmath4 and @xmath59 respectively improving the time complexities by a factor of @xmath6 and @xmath7 respectively over the best known result in the literature @xcite .",
    "finally , we propose a new shifting strategy lemma .",
    "using our shifting strategy lemma we propose @xmath8-factor and @xmath60-factor ( i.e. , ptas ) approximation algorithms for the mds problem .",
    "the running time of proposed @xmath8-factor and @xmath60-factor approximation algorithms are @xmath61 and @xmath62 respectively . though the time complexity of the proposed ptas is same as the ptas proposed by de et al .",
    "@xcite in terms of @xmath63 notation , but the constant involved in our ptas is smaller than the same in @xcite .",
    "in this section , a set @xmath0 of @xmath1 points in @xmath64 is given inside a rectangular region @xmath65 .",
    "the objective is to find an mds for @xmath0 .",
    "here we propose a simple 4-factor approximation algorithm .",
    "the running time of our algorithm is @xmath4 , which is an improvement by a factor of @xmath6 over the best known existing result @xcite . in order to obtain a 4-factor approximation algorithm",
    ", we consider a partition of @xmath65 into regular hexagons of side length @xmath66 ( see figure [ figure-2](a ) ) .",
    "we use _ cell _ to denote a regular hexagon of side length @xmath66 .",
    "[ lemma-1x ] all points inside a single cell can be covered by an unit radius disk centered at any point inside that cell .",
    "the lemma follows from the fact that the distance between any two points inside a regular hexagon of side length @xmath66 is at most 1 ( for demonstration see the figure [ figure-2](b ) )",
    ".     contained in an unit radius disk , and ( c ) a septa - hexagon , title=\"fig : \" ] +    a _ septa - hexagon _ is a combination of 7 adjacent cells such that one cell is inscribed by six other cells as shown in figure [ figure-2](c ) .",
    "for a point set @xmath67 , we use @xmath68 to denote the set of unit radius disks centered at the points in @xmath67 .",
    "let @xmath69 and @xmath70 be two point sets such that @xmath71 .",
    "we use @xmath72 to denote the set of points such that @xmath73 and an unit radius disk centered at any point in @xmath72 covers at least one point of @xmath69 .",
    "let us consider a septa - hexagon @xmath74 . recall that @xmath74 is a combination of 7 cells ( regular hexagon of side length @xmath66 ) .",
    "let @xmath75 and @xmath76 .",
    "for the 4-factor approximation algorithm , we first find minimum size subset @xmath77 such that @xmath78 .",
    "call this problem as _ single septa - hexagon mds _ problem . using the optimum ( minimum size ) solution of single septa - hexagon mds problem , we present our main 4-factor approximation algorithm .",
    "the lemma [ lemma-2x ] gives an important feature to design optimum algorithm for single septa - hexagon mds problem .",
    "[ lemma-2x ] if @xmath79is a minimum cardinality subset of @xmath80 such that @xmath81 , then @xmath82 .",
    "the septa - hexagon @xmath74 has at most 7 non - empty cells . from lemma [ lemma-1x ] , we know that an unit radius disk centered at a point in a cell covers all points in that cell",
    ". therefore one point from each of the non - empty cells is sufficient to cover all the points in @xmath74 .",
    "thus the lemma follows .    a set @xmath0 of @xmath1 points and a septa - hexagon @xmath74    a set @xmath83 such that @xmath84 .",
    "@xmath85 choose one arbitrary point from each non - empty cell of @xmath74 and add to @xmath3 .",
    "@xmath86 / * @xmath28 is at most 7 * / let @xmath75 and @xmath76 .",
    "find @xmath87 such that no point in @xmath88 is covered by @xmath89 .",
    "compute the farthest point voronoi diagram of @xmath88 @xcite find a point @xmath90 ( if any ) from @xmath91 ( using planar point location algorithm @xcite ) such that the farthest point in @xmath88 from @xmath90 is less than or equal to 1 .",
    "if such @xmath90 exists , then set @xmath92 and exit * for * loop . set @xmath93 and exit from * for * loop return @xmath3    [ algo-4factor ]    [ lemma-3x ] for a given set @xmath0 of @xmath1 points and a septa - hexagon @xmath74 , the algorithm [ algo-4factor ] computes an mds for @xmath94 using the points of @xmath0 in @xmath4 time .",
    "the optimality of the algorithm [ algo-4factor ] follows from the fact that algorithm [ algo-4factor ] considers all possible set of sizes @xmath95 ( see lemma [ lemma-2x ] ) as its solution and reports minimum size solution .",
    "the line number 7 of the algorithm can be computed in @xmath54 time as follows : ( i ) computation of the set @xmath96 takes @xmath97 time , ( ii ) computation of @xmath80 can be done in @xmath54 time using nearest point voronoi diagram of @xmath96 in @xmath54 time and for each point @xmath98 apply planar point location algorithm to find the nearest point in @xmath96 in @xmath19 time .",
    "the running time of the * else * part in the line number 15 of the algorithm is at most @xmath99 time .",
    "the worst case running time of the algorithm comes from line numbers 9 - 14 .",
    "the complexity of line numbers 11 - 13 is @xmath54 time .",
    "therefore the running time of the line numbers 9 - 14 is @xmath4 time .",
    "thus the overall worst case running time of the proposed algorithm [ algo-4factor ] is @xmath4 .",
    "let us consider a septa - hexagonal partition of @xmath65 such that no point of @xmath0 is on the boundary of any septa - hexagon and a 4 coloring scheme of it ( see figure [ fig : fig10 ] ) .",
    "consider an unicolor septa - hexagon of color a ( say ) .",
    "its adjacent septa - hexagons are assigned colors b , c and d ( say ) such that opposite septa - hexagons are assigned the same color ( see figure [ fig : fig10 ] ) .        [ lemma-4x ] if @xmath100 and @xmath101 are two same colored septa - hexagons , then @xmath102 for any unit radius disk @xmath103 .    according to the 4-coloring scheme , size of the septa - hexagons , and no point of @xmath0",
    "is on the boundary of @xmath100 and @xmath101 the minimum distance between two points @xmath104 and @xmath105 ) is greater than 2 ( see figure [ fig : fig10 ] ) .",
    "thus the lemma follows .",
    "[ theorem-1y ] the 4-coloring scheme gives a 4-factor approximation algorithm for the mds problem in @xmath106 time , where @xmath1 is the input size .",
    "let @xmath107 , and @xmath108 be the sets of septa - hexagons of colors @xmath109 , and @xmath110 respectively .",
    "let @xmath111 and @xmath112 for @xmath113 .",
    "by lemma [ lemma-4x ] , the pair ( @xmath114 ) can be partitioned into @xmath115 pairs ( @xmath116 ) such that for each pair algorithm [ algo-4factor ] is applicable for solving the covering problem optimally to cover @xmath117 using @xmath118 , where @xmath119 .",
    "let @xmath120 be the optimum solution for the set @xmath117 ( @xmath113 ) using the algorithm [ algo-4factor ] . if @xmath121 is the optimum solution for the set @xmath0 , then @xmath122",
    ". therefore @xmath123 .",
    "thus the approximation factor of the algorithm follows .",
    "the time complexity result of the theorem follows from lemma [ lemma-3x ] and the fact that each point in @xmath0 can participate in the algorithm [ algo-4factor ] at most constant number of times .",
    "given a set @xmath0 of @xmath1 points in a rectangular region @xmath65 , we wish to find an mds for @xmath0 . here",
    "we present a 3-factor approximation algorithm in @xmath5 time for the mds problem , which is an improvement by a factor of @xmath7 over the best known result available in the literature @xcite .",
    "a _ super - cell _ is a combination of 15 regular hexagons of side length @xmath66 arranged in three consecutive rows as shown in figure [ fig : fig14 ] .",
    "let us consider a _ super - cell _ @xmath124 .",
    "let @xmath125 and @xmath76 . in order to obtain 3-factor approximation algorithm for the mds problem",
    ", we first find a minimum size subset @xmath77 such that @xmath78 .",
    "call this problem as a _ single super - cell mds _ problem . using the optimum solution of single super - cell mds problem",
    ", we present our main 3-factor approximation algorithm .",
    "[ lemma-5x ] if @xmath126 is the minimum cardinality subset of @xmath80 such that @xmath127 , then @xmath128 .",
    "the lemma follows from the lemma [ lemma-1x ] and the fact that the super - cell @xmath124 has at most 15 non - empty cells .",
    "we decompose a super - cell @xmath124 into 3 regions namely @xmath129 , and @xmath130 ( see figure [ fig : fig16 ] , where @xmath129 , and @xmath130 correspond to unshaded , light shaded , and dark shaded regions respectively ) .",
    "[ lemma-6x ] for any unit radius disk @xmath103 and a super - cell @xmath124 , @xmath131 .",
    "the lemma follows from the fact that if @xmath132 and @xmath133 are two arbitrary points of @xmath134 and @xmath130 respectively , then the euclidean distance between @xmath132 and @xmath133 is greater than 2 .",
    "let @xmath125 and @xmath76 , where @xmath124 is a super - cell .",
    "our objective is to find a minimum cardinality set @xmath135 such that @xmath78 .",
    "let @xmath136 , @xmath137 , and @xmath138 . a point on a boundary",
    "can be assigned to any set associated with that boundary .",
    "let @xmath139 , @xmath140 , and @xmath141 .",
    "the lemma [ lemma-6x ] says that @xmath142 .",
    "a set @xmath0 of @xmath1 points and a super - cell @xmath124    a set @xmath83 such that @xmath143    @xmath144 .",
    "find the sets @xmath145,and @xmath146 as defined above .",
    "let @xmath67 and @xmath13 be the subsets of @xmath147 and @xmath148 respectively such that no point in @xmath149 is covered by @xmath89 .",
    "let @xmath88 be the minimum size subset of @xmath150 such that @xmath151 .",
    "let @xmath152 be the minimum size subset of @xmath146 such that @xmath153 .",
    "set @xmath154 return @xmath3    [ algo-3factor ]    [ lemma-7x ] for a given set @xmath0 of @xmath1 points and a super - cell @xmath124 , the algorithm [ algo-3factor ] computes an mds for @xmath155 using the points of @xmath0 in @xmath5 time .    in the case of selecting 3 points in @xmath150 in line number 8 of the algorithm",
    ", we can choose one point from each of the non - empty cells of @xmath134 .",
    "therefore , the worst case of line number 8 appears for the case of choosing all possible combinations of two points in @xmath150 .",
    "this can be done in @xmath156 using the technique of the algorithm [ algo-4factor ] ( line numbers 12 - 13 ) .",
    "similar analysis is applicable to line number 9 .",
    "line numbers 6 - 7 and 10 - 12 can be implemented in @xmath97 time .",
    "the worst case running time of the algorithm depends on the * for * loop in the line number 5 . in this * for * loop , we are choosing all possible 9 points from a set of @xmath1 points in worst case .",
    "therefore the time complexity of the algorithm [ algo-3factor ] is @xmath5 .",
    "the optimality of the algorithm follows from the lemma [ lemma-6x ] and fact that algorithm [ algo-3factor ] considers all possible combinations as its solution and reports minimum size solution .",
    "note that algorithm [ algo-3factor ] checks * if * condition in line number 6 because of the definition of @xmath157 , and @xmath146 .",
    "let us consider a super - cell partition of @xmath65 such that no point of @xmath0 lies on the boundary and a 3-coloring scheme ( see figure [ fig : fig15 ] ) .",
    "consider an unicolor super - cell which has been assigned color a ( say ) .",
    "its adjacent super - cells are assigned colors b , and c alternately ( see figure  [ fig : fig15 ] ) .",
    "[ lemma-8x ] if @xmath158 and @xmath159 are two same colored super - cells , then @xmath160 for any unit radius disk @xmath103 .",
    "the lemma follows from the following facts : ( i ) size of the super - cells @xmath158 and @xmath159 ( ii ) no point of @xmath0 on the boundary of @xmath158 and @xmath159 , and ( iii ) the 3-coloring scheme .",
    "[ theorem-2y ] the 3-coloring scheme gives a 3-factor approximation algorithm for the mds problem in @xmath5 time , where @xmath1 is the input size .",
    "the follows by the similar argument of theorem [ theorem-1y ] .",
    "in this section , we first propose a shifting strategy for the mds problem , which is a generalization of the shifting strategy proposed by hochbaum and maass @xcite .",
    "next we propose @xmath8-factor approximation algorithm and a ptas algorithm for mds problem using our shifting strategy .",
    "our shifting strategy is very similar to the shifting strategy in @xcite .",
    "we include a brief discussion here for completeness .",
    "let a set @xmath0 of @xmath1 points be distributed inside an axis aligned rectangular region @xmath65 .",
    "our objective is to find an mds for @xmath0 .",
    "a _ monotone chain _ @xmath18 with respect to line @xmath161 is a chain of line segments such that any line perpendicular to @xmath161 intersect it only once .",
    "we define the distance between two monotone chains @xmath162 and @xmath163 as the minimum euclidean distance between any two points @xmath164 and @xmath165 on the chains @xmath162 and @xmath163 respectively .",
    "a _ monotone strip _ denoted by @xmath166 and is defined by the area bounded by any two monotone chains @xmath162 and @xmath163 such that the area is left closed and right open .",
    "consider a set @xmath167 of @xmath168 monotone chains with respect to the line parallel to @xmath169-axis from left to right dividing the region @xmath65 such that distance between each pair of monotone chains is at least @xmath170 , where @xmath171 and @xmath172 are the left and right boundary of @xmath65 respectively ( see figure [ shifting ] ) .",
    "let @xmath173 be an @xmath174-factor approximation algorithm , which provides a solution of any @xmath175 consecutive monotone strips for the mds problem .",
    "[ shift - factor ] we can design an @xmath176-factor approximation algorithm for finding an mds for @xmath0 .",
    "the algorithm is exactly same as the algorithm proposed by hochbaum and maass @xcite .",
    "the approximation factor follows from exactly the same argument proved in the shifting lemma @xcite .",
    "here we propose a @xmath8-factor approximation algorithm for mds problem for a given set @xmath0 of @xmath1 points in @xmath2 using shifting strategy discussed in subsection [ shifting - strategy ] .",
    "a _ duper - cell _ is a combination of 30 cells ( regular hexagon of side length @xmath66 ) as shown in figure [ figure-8 ] . a duper - cell @xmath177 generates four monotone chains with respect to vertical and horizontal lines along its boundary .",
    "see figure [ figure-8 ] , where @xmath178 , and @xmath179 are the monotone chains . we rename them as * left , bottom , right * , and * top * monotone chains .",
    "the basic idea is as follows : first optimally solve the subproblem _ duper - cell _ i.e. , find an mds for the set @xmath180 , where @xmath177 is a duper - cell and then apply shifting strategy in both horizontal and vertical directions separately .",
    "the lemma [ lemma-1x ] leads to restriction on the size of the mds , which is at most 30 .",
    "therefore an easy optimum solution for mds can be obtained in @xmath181 time .",
    "here we propose a different technique for the mds problem leading to lower time complexity as follows :        we divide the duper - cell @xmath177 into 2 groups unshaded region ( @xmath182 ) and shaded region ( @xmath183 ) as shown in figure [ figure-8 ] .",
    "let @xmath184 be the common boundary of the regions and two extended lines ( see figure [ figure-8 ] ) .",
    "let @xmath185 and @xmath186 be two sets of points in the left ( resp .",
    "right ) of @xmath184 such that each disk in @xmath187 and @xmath188 intersects @xmath184 .    a set @xmath0 of @xmath1 points and a duper - cell @xmath177 . a set @xmath83 for an mds of @xmath180",
    ".    find @xmath185 and @xmath186 as described above .",
    "let @xmath189 and @xmath190 be the set of points in @xmath191 such that each disk in @xmath192 and @xmath193 covers at least one point in @xmath194 and @xmath195 respectively .",
    "@xmath196 choose all possible @xmath197 disks in @xmath187 ( resp .",
    "@xmath188 ) and for each combination of @xmath197 disks find @xmath198 and @xmath199 such that @xmath200 and uncovered by that @xmath197 disks , and @xmath201 and uncovered by that @xmath197 disks .    call algorithm [ algo-3factor ] for finding an mds for the sets @xmath198 and @xmath199 separately .",
    "return @xmath3    [ algo - shifting ]    [ lemma-9x ] an mds for the set of points inside a duper - cell @xmath177 can be computed optimally in @xmath61 time , where @xmath1 is the input size .",
    "the time complexity of line number 8 of the algorithm [ algo - shifting ] is @xmath5 ( see lemma [ lemma-7x ] ) .",
    "the line number 8 executes at most @xmath202 time by the * for * loop in line number 6 .",
    "therefore the time complexity of the lemma follows .    in the * for * loop ( line number 6 of the algorithm )",
    ", we considered all possible @xmath197 ( @xmath203 ) disks in @xmath187 and @xmath188 separately . since the number of cells that can intersect with such @xmath197 disks is at most 9 , therefore the range of @xmath197 is correct .",
    "for each combination of @xmath197 disks , we considered all possible combinations to solve the problem for @xmath198 and @xmath199 separately .",
    "therefore the correctness of the algorithm follows .",
    "[ theorem-3y ] the shifting strategy discussed in subsection [ shifting - strategy ] gives a @xmath8-factor approximation algorithm , which runs in @xmath61 time for the mds problem , where @xmath1 is the input size .",
    "the distance between the monotone chains * left * and * right * of @xmath177 is greater than 8 , the distance between the monotone chains * bottom * and * top * is 2 , and the diameter @xmath204 of the disks is 2 .",
    "now , if we apply shifting strategy in horizontal and vertical directions separately , then we get @xmath205-factor i.e. @xmath8-factor approximation algorithm in @xmath61 time ( see lemma [ lemma-9x ] ) for the mds problem .      in this section , we present a @xmath60-factor approximation algorithm in @xmath62 time for a positive integer @xmath206 .",
    "suppose a set @xmath0 of @xmath1 points within a rectangular region @xmath65 is given .",
    "consider a partition of @xmath65 into regular hexagonal cells of side length @xmath66 .",
    "the idea of our algorithm is to solve the mds problem optimally for the points inside regular hexagons ( say @xmath207 ) such that the distance between * left * and * right * ( resp . *",
    "bottom * and * top * ) monotone chains is @xmath208 ( see figure [ figure-9 ] ) and using our proposed shifting strategy carefully ( see subsection [ shifting - strategy ] ) .        to solve the mds problem in @xmath209 we further decompose @xmath207 into four parts using the monotone chains @xmath210 and @xmath211 as shown in figure [ figure-9 ] .",
    "the number of disks in the optimum solution intersecting the chain @xmath210 with centers * left * ( resp . *",
    "right * ) side of @xmath210 is at most @xmath212 which is less than @xmath213 and the number of disks in the optimum solution intersecting the chain @xmath211 with centers * bottom * ( resp . *",
    "top * ) side of @xmath211 is at most @xmath214 which is less than @xmath215 .",
    "next we apply recursive procedure to solve four independent sub - problems of size @xmath216 .",
    "if @xmath217 is the running time of the recursive algorithm for the mds problem for @xmath209 , then using the technique of @xcite we have the following recurrence relation : @xmath218 , which leads to the following theorem .",
    "[ theorem-4y ] for a given set @xmath0 of @xmath1 points in @xmath2 , the proposed algorithm produces an mds of @xmath0 in @xmath62 time , whose size is at most @xmath219 , where @xmath206 is a positive integer and @xmath121 is the optimum solution .",
    "in this paper , we proposed a series of constant factor approximation algorithms for the mds problem for a given set @xmath0 of @xmath1 points . here",
    "we used hexagonal partition very carefully .",
    "we first presented a simple 4-factor and 3-factor approximation algorithms in @xmath4 and @xmath5 time respectively , which improved the time complexities of best known result by a factor of @xmath6 and @xmath7 respectively @xcite .",
    "finally , we proposed a very important shifting lemma and using this lemma we presented a @xmath8-factor approximation algorithm and a ptas for the mds problem . though the complexity of the proposed ptas is same as that of the ptas proposed by de et al .",
    "@xcite in terms of @xmath63 notation , but the constant involved in our ptas is smaller than the same in @xcite .",
    "da fonseca , c. m. h. de figueiredo , v. g. p. de s and r. machado .",
    "linear time approximation for dominating sets and independent dominating sets in unit disk graphs . in _ waoa 2012 _ , lncs 7846 , pp . 8292 , 2013 .",
    "f.  zou , y.  wang , x.  xu , x.  li , h.  du , p.  j. wan and w.  wu . new approximations for minimum - weighted dominating sets and minimum - weighted connected dominating sets on unit disk graphs . , 412(3):198208 , 2011 ."
  ],
  "abstract_text": [
    "<S> in this article , we consider the problem of computing minimum dominating set for a given set @xmath0 of @xmath1 points in @xmath2 . here </S>",
    "<S> the objective is to find a minimum cardinality subset @xmath3 of @xmath0 such that the union of the unit radius disks centered at the points in @xmath3 covers all the points in @xmath0 . </S>",
    "<S> we first propose a simple 4-factor and 3-factor approximation algorithms in @xmath4 and @xmath5 time respectively improving time complexities by a factor of @xmath6 and @xmath7 respectively over the best known result available in the literature [ m. de , g.k . </S>",
    "<S> das , p. carmi and s.c . </S>",
    "<S> nandy , _ approximation algorithms for a variant of discrete piercing set problem for unit disk _ , int </S>",
    "<S> . j. of comp . </S>",
    "<S> geom . and appl . , to appear ] . </S>",
    "<S> finally , we propose a very important shifting lemma , which is of independent interest and using this lemma we propose a @xmath8-factor approximation algorithm and a ptas for the minimum dominating set problem .    * </S>",
    "<S> keywords : * minimum dominating set , unit disk graph , approximation algorithm . </S>"
  ]
}
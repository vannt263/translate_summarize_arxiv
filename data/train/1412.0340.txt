{
  "article_text": [
    "given a graph @xmath3 , each vertex @xmath4 represents a variable @xmath5 $ ] that can take @xmath6 different values .",
    "each vertex @xmath4 is attached a function @xmath7 \\to \\mathbb{r}$ ] and each edge @xmath8 is attached a function @xmath9\\times[q ] \\to \\mathbb{r}$ ] . for a joint configuration of the vertices @xmath10^v$ ] , the energy of the configuration @xmath11 is defined as @xmath12 many significant problems in computer vision such as image segmentation  @xcite and stereo vision  @xcite are formalized as minimizing the energy functions defined on a lattice graph where each pixel represents a vertex in the lattice graph . the function",
    "@xmath13 measures the disagreement between the label and observed data at pixel @xmath14 and @xmath15 measures the pairwise smoothness between pixel @xmath14 and pixel @xmath16 .",
    "the typical form of @xmath17  @xcite is usually @xmath18 where @xmath19 is the pixel value of point @xmath14 .",
    "the typical forms of @xmath20 are  @xcite @xmath21 where @xmath22 is a weight coefficient and @xmath23 when @xmath24 , and @xmath23 otherwise .",
    "@xmath25 is a coefficient represents the maximum allowed penalty in the truncated model . when @xmath26 , the energy minimization problem can be solved in polynomial time by maximum flow  @xcite or graph cuts  @xcite .",
    "however , in general this problem is still np - hard . in this paper , we focus on the maximization of the energy function .",
    "this model is equivalent to pairwise markov random fields and factor graphs  @xcite whose function nodes have exactly two adjacent variable nodes , which are extensively studied for probabilistic inference and maximum a posterior estimation in graphical models .",
    "many significant optimization problems can be formalized by this model such as max 2-csp and maximum graph - cut problems . a constraint satisfaction problem ( csp )",
    "is defined as a triple @xmath27 where @xmath28 is a set of variables , @xmath29 is the set of respective domains of values of @xmath30 , @xmath31 is a set of constraints .",
    "the variable @xmath32 can take the values in domain @xmath33 .",
    "each constraint @xmath34 is a function which takes a subset @xmath35 of variables as inputs and returns a boolean value as output representing whether it is satisfied .",
    "a csp asks whether there is a configuration of variables such that all the constraints are satisfied .",
    "the most famous csp is its boolean version sat , whose objective is determining whether there is a truth assignment for the input cnf boolean formula .",
    "max - sat is the optimization version of sat , which is significant for studying approximation algorithms and has been extensively investigated in the literature . given a cnf boolean formula @xmath36 over @xmath37 boolean variables @xmath38 where @xmath39 is a disjunction of literals for each @xmath40 , the objective of max - sat is finding an truth assignment of the variables of @xmath41 such that the number of satisfied clauses is maximum . in its weighted version ,",
    "each clause @xmath42 is assigned a weight @xmath43 , the objective is finding an truth assignment of the variables of @xmath41 such that the sum of the weights of those satisfied clauses is maximum .",
    "max - csp generalizes csp analogous to the way in which max - sat generalizes sat . in this paper , we focus on max 2-csp where each constraint has exactly two input variables . for simplicity , we assume that each variable can take exactly @xmath6 values , denoted by @xmath44 = \\{0,\\ldots , q-1\\}$ ] .",
    "the structure of each 2-csp @xmath27 can be naturally represented by a graph @xmath3 where each vertex @xmath4 represents a variable @xmath45 .",
    "if @xmath32 and @xmath46 are the input variables of a constraint , then there is an edge @xmath8 connecting vertex @xmath4 and vertex @xmath47 .",
    "we set @xmath48 and @xmath49\\times[q ] \\to \\mathbb{r}^+$ ] as @xmath50 where @xmath5 $ ] is the value of the variable represented by vertex @xmath14 and @xmath51 is the weight of the constraint represented by edge @xmath8",
    ". then the objective of max 2-csp is equivalent to computing @xmath52^v}e(\\sigma ) = \\max_{\\sigma \\in [ q]^v } \\sum_{(i , j ) \\in e } \\varphi_{ij}$ ] where the configuration @xmath10^v$ ] is a joint assignment of values to the variables represented by the vertices of @xmath53 .",
    "the graph - cut problems which are also widely applicable in learning algorithms have similar structures . given an undirected graph @xmath54 where @xmath55 assign a nonnegative weight @xmath51 to each edge",
    "the goal of max - cut problem is dividing the vertices of @xmath53 into two sets @xmath56 and @xmath57 such that the value @xmath58 is maximum where @xmath59 is the set of cut edges between @xmath56 and @xmath57 .",
    "we set @xmath48 and @xmath60 as @xmath61 where @xmath62 if @xmath63 and @xmath64 if @xmath65 .",
    "then computing the max - cut is also equivalent to computing @xmath52^v}e(\\sigma ) = \\max_{\\sigma \\in [ q]^v } \\sum_{(i , j ) \\in e } \\varphi_{ij}$ ] . for max - dicut problem",
    "whose input is a directed graph and whose goal is dividing the vertices of @xmath53 into two sets @xmath56 and @xmath57 such that the total weight of the directed cut @xmath66 is maximum , the function @xmath60 attached on the edge can be set as @xmath67    we also exploit the max @xmath1-cut problem , which is a natural generalization of max - cut problem . given a connected undirected graph @xmath54 where @xmath55 assign a nonnegative weight @xmath51 to each edge @xmath8 , a @xmath1-cut is a set of edges @xmath68 whose removal decomposes the input graph into @xmath1 disjoint subgraphs .",
    "the goal of max @xmath1-cut problem is computing such a set of edges @xmath69 that @xmath70 is maximum . when @xmath71 , the max @xmath1-cut problem is precisely the max - cut problem .",
    "when @xmath72 where @xmath73 is the maximum degree of @xmath53 , the optimal solution is precisely the sum of all the weights of the edges .",
    "thus this problem is only interesting when @xmath74 .",
    "this model also widely appears in statistical physics to provide mathematical abstraction for structure of materials .",
    "the most famous one is potts model  @xcite which is used frequently in computer vision as we have mentioned .",
    "another famous model is edwards - anderson model for describing the interactions of particles in spin glasses .",
    "the input graph is usually a @xmath2-dimensional lattice graph @xmath75 where each vertex @xmath14 in the lattice is a ising spin @xmath76 .",
    "the energy function  @xcite is @xmath77 where the parameters @xmath78 are exchange couplings and @xmath79 is the external magnetic field .",
    "the interactions between spins @xmath80 and @xmath81 is ferromagnetic if @xmath82 and antiferromagnetic if @xmath83 . the gibbs measure of a given configuration @xmath10^v$ ]",
    "is defined as @xmath84 where the normalizing constant @xmath85 is the _ partition function _ that @xmath86^v}\\exp ( -\\beta e(\\sigma ) ) $ ] .",
    "for the ferromagnetic edwards - anderson model without external magnetic field that @xmath82 and @xmath87 , the energy function of the edwards - anderson model is @xmath88 . where @xmath89 .",
    "in this case , the minimization of the energy function is equivalent to computing the max - cut of the input graph , which is polynomial - time solvable on planar graphs .",
    "this problem is np - hard even on 3-dimensional lattice graphs .",
    "other optimization techniques such as branch and bound methods , belief propagation have also been applied to this problem but no provable bound has been achieved . in this paper , we prove the following theorem .",
    "[ thm : main - energy ] given a graph @xmath3 and a set of functions attached on the vertices and edges , if it satisfies @xmath90 and @xmath91 for all @xmath4 and @xmath8 , then there is a ptas for maximizing the energy function on planar graphs , graphs with bounded local treewidth , @xmath0-minor - free graphs , geometric graphs with bounded density and graphs embeddable with bounded number of crossings per edge .",
    "theorem  [ thm : main - energy ] is based on a more general theorem ( theorem  [ thm : main - sum ] ) which will be specified later .",
    "if all the constraints of the 2-csp are polynomial - time verifiable , we naturally have the the ptass for computing max 2-csp , max - cut and max - dicut .",
    "[ cor : main - csp ] computing max 2-csp admits ptass on planar graphs , graphs with bounded local treewidth , @xmath0-minor - free graphs , geometric graphs with bounded density and graphs embeddable with bounded number of crossings per edge .",
    "[ cor : main - cut ] there are ptass for computing max - cut , max - dicut and max @xmath1-cut on planar graphs , graphs with bounded local treewidth , @xmath0-minor - free graphs , geometric graphs with bounded density and graphs embeddable with bounded number of crossings per edge .",
    "choosing a set of terminals @xmath92 , the configuration of @xmath93 where @xmath94 is fixed to @xmath95 $ ] .",
    "the vertices in graph @xmath96 are free variables .",
    "the functions attached on @xmath8 are the same as those of max - cut .",
    "then computing the max @xmath1-cut for fixed @xmath56 is equivalent to computing @xmath97^{v(g')}}\\sum_{(i , j ) \\in e } \\varphi_{ij}$ ] . by theorem  [ thm : main - energy ] , we have a ptas to compute max @xmath1-cut for fixed @xmath56 .",
    "there are at most @xmath98 possibilities for @xmath56 , which is polynomial if @xmath1 is fixed . by enumerating all these cases",
    ", we have a ptas for computing the max @xmath1-cut .",
    "corollary  [ cor : main - cut ] directly gives a ptas for computing the ground state of ferromagnetic edwards - anderson model without external magnetic field on these classes of graphs .",
    "for minimization of the energy function , we do not have such a general result as theorem  [ thm : main - energy ] .",
    "furthermore , we prove the following result .    there does not always exist ptas for minimizing the energy function even on planar graph unless p = np .",
    "this result implies that there does not always exist ptas for computing the min - sum of unbalanced @xmath99 on graphs with bounded local treewidth , @xmath0-minor - free graphs , geometric graphs and graphs with bounded crossing number per edge and more general classes of graphs unless p = np .",
    "however , we show that if the functions @xmath60 can be well partitioned so that the functions attached on the vertices satisfy the _ balance _ property , minimization of the energy function also admits ptas on these classes of graphs .",
    "this gives ptass for minimizations of many typical energy functions in computer vision .",
    "the related works are introduced in appendix  [ section : related ] .",
    "the definitions of basic concepts and introduction of our technical tools are included in appendix  [ section : tools ] .",
    "we build a unified framework to formalize the optimization problems . consider a graph @xmath3 , directed or undirected . for directed graphs ,",
    "the neighbors of vertex @xmath4 is defined as @xmath100 and @xmath101 . for undirected graphs , @xmath102 .",
    "if @xmath53 is undirected , then for each @xmath4 , @xmath103^{n(i ) } \\times [ q ] \\to \\mathbb{r}$ ] take the configurations of @xmath104 as inputs and return a real number as output .",
    "if @xmath53 is directed , then for each @xmath4 , then @xmath103^{n^-(i ) } \\times [ q ] \\to \\mathbb{r}$ ] take the configurations of @xmath105 as inputs and return a real number as output .",
    "although our model is well - defined on directed graphs , we only need to consider undirected graphs . for a directed graph @xmath3 ,",
    "its corresponding undirected graph is constructed by replacing all the directed edges by undirected edges and then replacing multiple undirected edges between pairs of vertices if exists to a single undirected edge .",
    "the function @xmath99 is replaced by @xmath106 which takes configurations of @xmath107 as inputs but only the @xmath108 part can affect the output of @xmath106 which is equal to the output of @xmath99 .    for each function @xmath60 attached on edge @xmath8 , let @xmath109 and @xmath110 be two constants satisfying @xmath111 , @xmath112 and @xmath113 .",
    "we set @xmath114 , then computing the energy function @xmath115 is equivalent to computing @xmath116 .",
    "such a set of constants @xmath117 is called a partition of the functions attached on the edges . by this reduction",
    ", we only need to consider the functions @xmath99 attached on the vertices .    throughout this paper , we ignore the computation time of @xmath99 when analyzing the computational complexity .",
    "we assume that they are all @xmath118-time computable .",
    "[ thm : main - sum ] if there is a partition @xmath117 of the functions attached on the edges such that @xmath119 for all @xmath4 where @xmath120 , then there is a ptas for computing @xmath52^v}\\sum_{i \\in v } f_i$ ] on planar graphs , graphs with bounded local treewidth , @xmath0-minor - free graphs , geometric graphs with bounded density and graphs embeddable with bounded number of crossings per edge .",
    "it is easy to see that theorem  [ thm : main - energy ] is a corollary of theorem  [ thm : main - sum ] .",
    "the proof of theorem  [ thm : main - sum ] is based on the following lemma .",
    "[ lem : dynamic - programming ] given a graph @xmath3 with treewidth bounded by @xmath1 , for any @xmath121 and any set of @xmath119 defined on @xmath53 , @xmath52^v}\\sum_{i \\in u } f_i$ ] and @xmath122^v}\\sum_{i \\in",
    "u } f_i$ ] can be computed in @xmath123 time .    since the input graph @xmath53 has treewidth bounded by @xmath1",
    ", we use the algorithm of  @xcite to construct a tree decomposition @xmath124 rooted at @xmath125 with treewidth @xmath1 for @xmath53 in linear time ( but exponential in @xmath1 ) . for each @xmath126 , the subtree of @xmath127 rooted at @xmath14",
    "is denoted by @xmath128 .",
    "the set of vertices in @xmath128 is denoted by @xmath129 .",
    "the configurations of bag @xmath32 where @xmath126 is denoted by @xmath130 .",
    "suppose the child nodes of @xmath126 are @xmath131 and the parent node of @xmath126 is @xmath132 .",
    "our algorithm is a dynamic programming from the leaves to the root .",
    "we enumerate the all the possible configurations of @xmath133 for each bag @xmath32 . for root @xmath134 , @xmath135 . by the definition of tree decomposition ,",
    "@xmath136 for @xmath137 .",
    "therefore , @xmath138 for @xmath139 are pairwise disjoint .",
    "let @xmath140 denote the max - sum of the @xmath99 attached on vertices in @xmath141 with the configurations of vertices in @xmath133 being fixed to @xmath142 .",
    "the set @xmath143 denotes the vertices adjacent to vertices in @xmath144 but not in @xmath144 .",
    "note that @xmath140 does not include the sum of @xmath99 attached on vertices in @xmath143 .",
    "this is because their values are not fixed when the configurations of @xmath144 are not given .",
    "the value of @xmath140 can be computed by the following recurrence :    @xmath145    where @xmath146 is the sum of @xmath99 attached on vertices in @xmath147 when the configuration of @xmath133 is fixed to @xmath142",
    ". then @xmath52^v}\\sum_{i \\in u } f_i = \\max_{\\sigma_{r \\backslash p_r } } s_{r \\backslash p_r}^u(\\sigma_{r \\backslash p_r})$ ] .",
    "note that this recursion only holds for the set of @xmath99 arising from energy functions taking the form of equation ( [ eq : energy ] ) since @xmath60 is pairwise so that we can enumerate all the possibilities of each @xmath148 for each @xmath139 respectively .",
    "even for @xmath99 arising from max 3-csp , this recursion does not hold any longer .",
    "the min - sum can be computed in the same way .    for each bag @xmath32 , since @xmath149 for all @xmath126 , @xmath142 has at most @xmath150 possible values .",
    "we compute @xmath140 for each @xmath142 at most once . to compute @xmath140",
    ", we also need to know @xmath151 for each @xmath32 .",
    "these can be computed in @xmath152 time if the vertices in each @xmath32 are stored in order or using data structures such as hash tables .",
    "furthermore , we need to decide whether a vertex is in the set @xmath151 or @xmath153 when computing @xmath140 .",
    "the time complexity of the deciding whether a vertex is in @xmath151 is @xmath118 if using hash tables . whether a vertex @xmath4 is in @xmath153",
    "can be decided by checking whether all the inputs of @xmath99 are prepared . since we have assumed that the computation time of @xmath99 is @xmath118 , the time complexity is also @xmath118",
    "therefore , the total time complexity of our dynamic programming algorithm is @xmath123 .",
    "this algorithm is denoted by @xmath154 where @xmath155 is the set of @xmath99 attached on @xmath53 . in the rest of this section , we prove theorem  [ thm : main - sum ] for each class of graphs .",
    "[ thm : max - sum ] if @xmath119 for all @xmath4 where",
    "@xmath120 , then for fixed @xmath1 , there is an @xmath156-time algorithm for computing @xmath52^v}\\sum_{i \\in v } f_i$ ] that achieves a solution of value at least @xmath157 optimal for general planar graphs .",
    "given a planar embedding of a planar graph @xmath53 , we decompose it into several disjoint @xmath158-outerplanar subgraphs by deleting all the edges between levels congruent to @xmath159 and @xmath160 for some integer @xmath161 that @xmath162 . a possible partition of an 8-outerplanar graph with @xmath163 and @xmath164 is shown below in figure  [ fig : planar ] .",
    "the deleted edges are represented by red dash lines and the boundary nodes ( level 4 and level 5 ) and boundary lines are colored by orange .",
    "the disjoint @xmath158-outerplanar subgraphs are denoted by @xmath165 from outside to inside .",
    "the corresponding vertex sets are denoted by @xmath166 .",
    "each @xmath167 where @xmath168 consists of exactly @xmath169 levels of nodes and is surrounded by vertices of the inside boundary and the outside boundary .",
    "the number of levels of @xmath170 and @xmath171 may be less than @xmath169 .",
    "@xmath170 may have only inside boundary vertices and @xmath171 may have only outside boundary vertices . to unify the notations ,",
    "each @xmath167 is a @xmath172-outerplanar graph where @xmath173 .",
    "+    the set of outside boundary nodes of @xmath167 is denoted by @xmath174 and the set of inside boundary nodes of @xmath167 is denoted by @xmath175 .",
    "the set of remaining nodes is denoted by @xmath176 where @xmath177 .",
    "the set of boundary vertices of @xmath167 is denoted by @xmath178 .",
    "we further let @xmath179 .",
    "each @xmath167 is a @xmath172-outerplanar graph where @xmath180 , thus the treewidth is bounded by @xmath181 .",
    "we construct an optimal tree decomposition @xmath128 for each @xmath167 in linear time using the algorithm of  @xcite .",
    "let @xmath182 denote the set of @xmath99 attached on vertices of @xmath167 .",
    "for each @xmath167 , we use the dynamic programming algorithm @xmath183 to maximize the sum of @xmath99 attached on the vertices of @xmath176 while ignoring the values of @xmath99 attached on @xmath184 . by lemma  [ lem : dynamic - programming ] , the dynamic programming on @xmath167 for all @xmath185 can be computed in parallel with time complexity @xmath123 .",
    "suppose the optimal solution is @xmath186 and the max - sum of @xmath99 is @xmath187 .",
    "the sum of @xmath99 attached on @xmath176 computed by the dynamic programming is denoted by @xmath188 .",
    "the sum of @xmath99 of @xmath189 computed by dynamic programming is @xmath190 .",
    "the sum of @xmath99 on @xmath176 is denoted by @xmath191 when the configurations of @xmath176 are fixed to @xmath186 .",
    "we have @xmath192 .",
    "therefore it holds that @xmath193 . by pigeon hole principle , for at least one @xmath161 , the sum of the @xmath99 attached on boundary nodes @xmath194 is at most @xmath195 of @xmath187 . since @xmath119 for all @xmath4 , whatever the configurations of the boundary nodes are , the sum of the @xmath99 on boundary nodes is non - negative , denoted by @xmath196 .",
    "therefore it holds that @xmath197 .",
    "therefore our algorithm gives a solution that is at least @xmath198 optimal .",
    "for each @xmath162 , we need to repeat the dynamic programming of @xmath123 time .",
    "the total time complexity is @xmath199 .",
    "this completes the proof .",
    "it implies that if @xmath200 for all @xmath4 , then the value of @xmath52^v}\\prod_{i \\in v } f_i$ ] can be approximate to @xmath201^v}\\prod_{i \\in v } f_i)^{k/(k+2)}$ ] in @xmath199 time on planar graphs .",
    "this algorithm for approximating the max - product of @xmath99 is not a ptas .",
    "its performance depends on the value of the maximum product and @xmath1 .",
    "the approximation ratio of our algorithm when @xmath202 is shown in figure  [ fig : ratio ] .",
    "similar bounds also hold on graphs with bounded local treewidth , @xmath0-minor - free graphs , geometric graphs with bounded density and graphs with bounded crossings per edge which will be specified later .",
    "our technique can serve as an alternative of classic methods such as max - product or min - sum belief propagation for map estimation . furthermore , to our knowledge , such provable bounds have not been known for belief propagation  @xcite and its generalized versions  @xcite .    ,",
    "title=\"fig:\",width=384 ] +    the functions @xmath119 defined on graph @xmath3 are @xmath203-balanced if for each @xmath4 there is a constant @xmath204 that @xmath205 where @xmath206 is a constant . the number @xmath207 is called the",
    "_ balancer _ of vertex @xmath4 .",
    "if the functions @xmath99 are balanced , we trivially achieve a @xmath208-approximation algorithm for maximization and an @xmath203-approximation algorithm for minimization of the energy function . when the functions @xmath99 are balanced , we have the following result for computing the min - sum .",
    "[ thm : min - sum ] if @xmath119 is @xmath203-balanced , then for fixed @xmath1 , there is an @xmath156-time algorithm for computing @xmath122^v}\\sum_{i \\in v } f_i$ ] that achieves a solution of value at most @xmath209 optimal for general planar graphs .",
    "the proof of theorem  [ thm : min - sum ] is similar to the proof of theorem  [ thm : max - sum ] .",
    "the only difference is we use @xmath183 to minimize the sum of @xmath99 on @xmath176 .",
    "there does not always exist ptas for computing the min - sum of unbalanced @xmath99 even on planar graphs unless p = np .",
    "we simply construct a reduction from computing the chromatic number to computing the min - sum of @xmath99 .",
    "we set @xmath99 as @xmath210 \\text { and } \\sigma_i \\ne \\sigma_j \\text { for } \\forall ( i , j ) \\in e \\\\",
    "+ \\infty & \\text { if } \\sigma_i = \\sigma_j \\text { for any } ( i , j ) \\in e \\end{cases}\\ ] ] where @xmath211 satisfies @xmath212 .",
    "this is allowed because both @xmath53 and the set of functions @xmath99 serve as inputs . by this setting , the functions @xmath99 are not balanced . if the graph @xmath53 is @xmath213-colorable , then the value of the min - sum @xmath214 must fall into the interval @xmath215 $ ] .",
    "for any @xmath216 $ ] , @xmath215 $ ] and @xmath217 $ ] are pairwise disjoint . by four color theorem ,",
    "any planar graph is 4-colorable .",
    "furthermore , it is known that 3-coloring problem remains np - complete even on planar graph of degree 4  @xcite .",
    "it implies that it is np - hard to approximate the chromatic number within approximation ratio @xmath218 even on planar graphs .",
    "therefore if we have a ptas for computing the min - sum of @xmath99 on planar graphs , then we have a polynomial time algorithm for computing the chromatic number of planar graphs , which leads to a contradiction .    by enlarging the gaps between the disjoint intervals",
    ", we can achieve stronger inapproximability results by this reduction .",
    "@xcite proves that a graph has bounded local treewidth if and only if it is apex - minor - free .",
    "@xcite prove that any apex - minor - free graph has linear local treewidth .",
    "[ thm : apex - max - sum ] if @xmath119 for all @xmath4 where @xmath120 , then for fixed @xmath1 , there is an @xmath156-time algorithm for computing @xmath52^v}\\sum_{i \\in v } f_i$ ] that achieves a solution of value at least @xmath157 optimal for graphs with bounded local treewidth .",
    "the proof of theorem  [ thm : apex - max - sum ] is similar to the proof of theorem  [ thm : max - sum ] .",
    "choosing a vertex @xmath219 , we construct a bfs tree rooted at @xmath220 .",
    "the level of a vertex is defined as its distance from @xmath220 .",
    "we remove the edges between vertices whose levels are congruent to @xmath221 and @xmath222 . then the input graph @xmath53 is decomposed into several disjoint subgraphs with treewidth bounded by @xmath181 .",
    "we construct a tree decomposition for each subgraph and use the dynamic programming algorithm of lemma  [ lem : dynamic - programming ] to maximize the sum of @xmath99 attached on non - boundary vertices while ignoring the values of @xmath99 on the boundary . by a similar argument , we can achieve the ptas . for computing the min - sum , we have a similar result as theorem  [ thm : min - sum ] .",
    "more details of the proof are specified in appendix  [ section : bounded - local - treewidth ] .",
    "a graph @xmath0 is a @xmath1-apex graph of a graph @xmath53 if @xmath223 for some subset @xmath224 of at most @xmath1 vertices which is called _",
    "apices_. the definition of almost - embeddable graph is given as follows .",
    "a graph @xmath53 is _ almost - embeddable _ on a surface @xmath225 if @xmath53 can be written as the union of @xmath226 graphs @xmath227 , satisfying the following conditions : ( 1 ) .",
    "@xmath228 has an embedding on @xmath225 .",
    "the graphs @xmath229 are pairwise disjoint , called vortices . ( 3 ) . for each index @xmath230",
    ", there is a disk @xmath231 inside some face @xmath232 of @xmath228 , such that @xmath233 .",
    "moreover , the disks @xmath231 are pairwise disjoint .",
    "( 4 ) . for each index @xmath230",
    ", the subgraph @xmath167 has pathwidth less than @xmath1 .",
    "moreover , @xmath167 has a path decomposition @xmath234 with @xmath235 , such that @xmath236 for @xmath237 , where @xmath238 are the vertices of @xmath239 indexed in cyclic order around the face @xmath232 , clockwise or anti - clockwise .",
    "[ lem : almost - embeddable ] * ( @xcite ) * the class of all graphs almost embeddable in a fixed surface @xmath56 has linear local treewidth .    a graph @xmath53 is _ @xmath240-almost - embeddable _ on a surface @xmath225 if @xmath0 is a @xmath240-apex graph of a graph that is almost embeddable on @xmath225 .",
    "[ thm : rs2003 ] * ( @xcite ) * for any graph @xmath0 , there is an integer @xmath241 depending only on @xmath242 such that any @xmath0-minor - free graph is a @xmath240-clique sum of a finite number of graphs that are @xmath240-almost - embeddable on some surfaces on which @xmath0 can not be embedded .",
    "theorem  [ thm : rs2003 ] says that any @xmath0-minor - free graph @xmath53 can be expressed as a  tree structure \" of pieces , where each piece can be embedded on a surface on which @xmath0 can not be embedded after deleting at most @xmath240 apex vertices .",
    "[ demaine - clique - sum ] * ( @xcite ) * for a fixed graph @xmath0 , there is a constant @xmath243 such that , for any integer @xmath244 and for every @xmath0-minor - free graph @xmath53 , the vertices of @xmath53 ( or the edges of @xmath53 ) can be partitioned into @xmath245 sets such that any @xmath1 of the sets induce a graph of treewidth at most @xmath246 .",
    "furthermore , such a partition can be found in polynomial time .    @xcite",
    "give a quadratic time algorithm that is faster for computing the clique - sum decomposition of @xmath0-minor - free graphs .",
    "graph class @xmath247 has truly sublinear treewidth with parameter @xmath248 where @xmath249 , if for every @xmath250 , there exists @xmath251 such that for any graph @xmath252 and @xmath253 the condition @xmath254 yields that @xmath255 .",
    "[ lem : truly - sublinear - treewidth ] * ( @xcite ) * let @xmath256 be a class of graphs excluding a fixed graph @xmath0 as a minor , then @xmath256 has truly sublinear treewidth with @xmath257 .",
    "[ thm : h - minor - max - sum ] if @xmath119 for all @xmath4 where @xmath120 , then for fixed @xmath1 , there is an @xmath156-time algorithm for computing @xmath52^v}\\sum_{i \\in v } f_i$ ] that achieves a solution of value at least @xmath157 optimal for @xmath0-minor - free graphs .",
    "our technique is similar to the proof in  @xcite of theorem [ demaine - clique - sum ] .",
    "suppose the clique - sum decomposition of the input @xmath0-minor - free graph @xmath53 is @xmath258 where each @xmath167 ( @xmath185 ) is an @xmath240-almost embeddable graph .",
    "the join set @xmath259 of the @xmath14-th clique - sum operation @xmath260 is a subset of the apex set @xmath261 of @xmath262 .",
    "our approximation algorithm takes the clique - sum decomposition as input , the apex set @xmath32 of each @xmath167 is given as part of the input clique - sum decomposition .    by the definition of the @xmath240-almost embeddable graphs ,",
    "@xmath263 is almost embeddable on a bounded - genus surface where @xmath32 contains at most @xmath240 vertices . by lemma  [ lem : almost - embeddable ]",
    ", @xmath263 has bounded local treewidth . from @xmath264 to @xmath265 , we choose a vertex @xmath266 and construct a bfs tree @xmath128 of @xmath263 rooted at @xmath267 .",
    "each vertex in @xmath268 is labeled by the distance between @xmath269 and @xmath267 modulo @xmath169 .",
    "after this step , we delete all the edges between levels labeled by @xmath221 and the adjacent levels labeled by @xmath222",
    ". then the @xmath263 part is decomposed into several disjoint subgraphs with treewidth at most @xmath270 for some constant @xmath271 . since @xmath272 , the vertices in @xmath273",
    "has already been labelled in @xmath274 .",
    "we label the vertices in @xmath275 arbitrarily by the integers from 0 to @xmath226 . after the edge deletions ,",
    "the obtained graphs @xmath276 are still @xmath0-minor - free for @xmath185 . by lemma  [ lem : truly - sublinear - treewidth ] ,",
    "the treewidth of @xmath276 is at most @xmath277 .",
    "it is known in  @xcite that @xmath278 , thus we have @xmath279 .",
    "this shows that any @xmath0-minor - free graph can be transformed into a graph with treewidth bounded by @xmath181 by deleting at most @xmath280 edges .",
    "given a clique - sum decomposition , the vertex labelling and edge deletions can be finished in linear time .",
    "let @xmath176 denote the vertices with labels other than @xmath221 and @xmath222 in @xmath276 and @xmath281 .",
    "furthermore , we let @xmath179 .",
    "since we only delete the edges between vertices by @xmath221 and the adjacent levels labeled by @xmath222 , the functions @xmath99 attached on vertices in @xmath224 will not be undefined .",
    "the treewidth of the input graph is bounded by @xmath181 after the edge deletions .",
    "we use the dynamic programming algorithm to compute the max - sum of functions @xmath99 attached on vertices in @xmath224 while ignoring the values of the functions @xmath99 attached on vertices in @xmath194 .",
    "the running time of the dynamic programming algorithm is @xmath123 .",
    "suppose the optimal solution is @xmath187 , then there is at least one @xmath161 such that there is at most @xmath195 of the optimal solution falls into the vertices in @xmath194 .",
    "if we repeat this computation for all @xmath162 , the optimal solution among these results is at least @xmath198 optimal .",
    "the time complexity of our algorithm is @xmath199 .",
    "we consider the @xmath2-dimensional euclidean space @xmath282 .",
    "the distance between point @xmath14 and point @xmath16 is defined by the euclidean distance , denoted by @xmath283 . among various geometric objects ,",
    "we only consider @xmath2-dimensional balls .",
    "we consider the following two scenarios",
    ".    * intersection graph .",
    "* let @xmath284 represent the diameter of the @xmath2-dimensional ball centered at point @xmath14 for @xmath4 .",
    "an intersection graph @xmath3 can be constructed by adding an edge between each pair of point @xmath14 and point @xmath16 where @xmath285",
    ".    * interference graph . * the model of interference graph",
    "is only defined for @xmath2-dimensional balls .",
    "the difference between interference graph and intersection graphs is that an interference graph is a directed graph while an intersection graph is undirected .",
    "there is an edge from the the center of ball @xmath14 to the center of ball @xmath16 if @xmath286 .",
    "the recognition of unit disk graphs is np - hard  @xcite .",
    "for this reason , we assume that a geometric representation of the graph is always given as input . this assumption is reasonable in many applications . to defined the concepts of thickness and density , we first introduce the concepts of _ slab decomposition _ and _ grid decomposition _ in @xmath2-dimensional euclidean space .",
    "a slab decomposition is partitioning the @xmath2-dimensional euclidean space using parallel @xmath287-dimensional hyperplanes where the distances between neighboring hyperplanes are equal .",
    "a grid decomposition is recursively partitioning the @xmath2-dimensional euclidean space using orthogonal slab decompositions where all the distances between neighboring hyperplanes are equal , until the space is partitioned into @xmath2-dimensional hypercubes of the same size . the distance between neighboring hyperplanes",
    "are set to @xmath288 and @xmath289 for intersection graphs and interference graphs respectively where @xmath288 is the diameter of the maximum @xmath2-dimensional ball . by this decomposition",
    ", any vertex has only edges linked to vertices in the neighboring hypercubes .",
    "given a slab decomposition , the thickness @xmath290 of a geometric graph is determined by the maximum number of centers between any two neighboring hyperplanes . if a center falls precisely on a hyperplane @xmath291 , it belongs to the subspace divided by the hyperplane where @xmath292 .    given a grid decomposition ,",
    "the density @xmath293 of a geometric graph is determined by the maximum number of centers in any @xmath2-dimensional hypercube .",
    "if a center falls precisely on several hyperplanes @xmath294 , it belongs to the hypercube where @xmath295 .",
    "when the number of dimensions @xmath2 is fixed , a slab decomposition or grid decomposition which gives the minimum thickness or density can be found in polynomial time .",
    "[ geo - max - sum ] given the grid decomposition with density @xmath293 , if @xmath119 for all @xmath4 where @xmath120 , then for fixed @xmath1 and @xmath2 , there is an @xmath296-time algorithm for computing @xmath52^v}\\sum_{i \\in v } f_i$ ] that achieves a solution of value which is at least @xmath297 optimal for @xmath2-dimensional geometric graphs with bounded density .",
    "for the first @xmath298 dimensions of the grid decomposition , we remove all the edges between the centers in hypercubes of levels congruent to @xmath299 and the centers in hypercubes of levels congruent to @xmath300 for the @xmath14-th dimension and some integer @xmath301",
    ". then @xmath53 is decomposed into several disjoint subgraphs each of which consists of @xmath169 levels of hypercubes in the first dimension , @xmath169 levels of hypercubes in the second dimension , ... , @xmath169 levels of hypercubes in the @xmath287-th dimension , all the levels of hypercubes in the @xmath2-th dimension .",
    "the pathwidths of these subgraphs are bounded by @xmath302 . for each subgraph",
    ", we use the dynamic programming algorithm of lemma  [ lem : dynamic - programming ] to maximize the sum of @xmath99 attached on vertices in hypercubes that are in level 2 to level @xmath226 in the first dimension , level 2 to level @xmath226 in the second dimension , ... , level 2 to level @xmath226 in the @xmath287-th dimension and all levels in the @xmath2-th dimension while ignoring the values of @xmath99 attached on all other vertices . by the pigeon hole principle , there is at least one tuple @xmath303 that the sum of the results on the subgraphs is at least @xmath297 optimal . for computing the min - sum , we have a similar result as theorem  [ thm : min - sum ] .",
    "more details of the proof are attached in appendix  [ section : geometric ] .",
    "an embedding of a graph @xmath53 on a surface @xmath56 of genus @xmath304 is a good embedding if all vertices of the graph are given as distinct points on @xmath56 , no two edge crossings locate at the same point on @xmath56 and for any edge , no vertex except the endpoints of the edge locate on the edge .    the _ crossing number _ @xmath305 of a graph @xmath53 embedded on a surface @xmath56 is the minimum over all good embeddings on @xmath56 of the maximum over all edges @xmath306 of the number of crossings of @xmath306 .",
    "several natural classes of graphs are graphs with bounded crossing parameter , such as geometric graphs with bounded density discussed above .",
    "it also includes graphs with bounded degree .",
    "moreover , by the observation of  @xcite , the class of graphs with bounded crossing parameter is not minor - closed . therefore it generalizes the discussions about @xmath0-minor - free graphs and geometric graphs .",
    "[ thm : cross - max - sum ] if @xmath119 for all @xmath4 where @xmath120 , then for fixed @xmath1 , there is an @xmath156-time algorithm for computing @xmath52^v}\\sum_{i \\in v } f_i$ ] that achieves a solution of value at least @xmath307 optimal for graphs with crossing parameter @xmath305 .    to prove theorem  [ thm : cross - max - sum ] , we replace each crossing in the embedding of @xmath53 by a new vertex .",
    "the obtained graph is denoted by @xmath308 .",
    "we construct a bfs tree @xmath127 of @xmath53 rooted at @xmath220 .",
    "the level of a vertex is defined as the distance from the vertex to the root @xmath220 on @xmath127 .",
    "we remove every @xmath1-th level in @xmath127 from @xmath308 together with its @xmath309 successive levels .",
    "the graph induced by the remaining vertices in @xmath127 consists of several disjoint subgraphs with treewidth bounded by @xmath181 .",
    "the subgraph @xmath167 has @xmath172 levels of vertices in @xmath127 where @xmath310 $ ] .",
    "then in the worst case , there is at least one partition of the graph that can achieve a solution at least @xmath307 optimal . for computing the min - sum",
    ", we have a similar result as theorem  [ thm : min - sum ] .",
    "more details of the proof are included in appendix  [ section : cross ] .",
    "54 [ 1]#1 [ 1]`#1 ` urlstyle [ 1]doi : # 1    gunnar andersson , lars engebretsen , and johan hstad",
    ". a new way of using semidefinite programming with applications to linear equations mod @xmath311 . _ journal of algorithms _ , 390 ( 2):0 162204 , 2001 .",
    "takao asano .",
    "approximation algorithms for max sat : yannakakis vs. goemans - williamson . in _ theory of computing and systems , 1997 .",
    ", proceedings of the fifth israeli symposium on _ , pages 2437 .",
    "ieee , 1997 .",
    "giorgio ausiello .",
    "_ complexity and approximation : combinatorial optimization problems and their approximability properties_. springer , 1999 .",
    "brenda  s baker .",
    "approximation algorithms for np - complete problems on planar graphs .",
    "_ journal of the acm ( jacm ) _ , 410 ( 1):0 153180 , 1994 .",
    "hans  l bodlaender . a linear time algorithm for finding tree - decompositions of small treewidth . in _",
    "stoc _ , pages 226234 .",
    "acm , 1993 .",
    "hans  leo bodlaender .",
    "_ classes of graphs with bounded tree - width_. department of computer science , university of utrecht , 1986 .",
    "yuri boykov and gareth funka - lea .",
    "graph cuts and efficient nd image segmentation .",
    "_ international journal of computer vision _ , 700 ( 2):0 109131 , 2006 .",
    "yuri boykov , olga veksler , and ramin zabih .",
    "markov random fields with efficient approximations . in _",
    "ieee computer society conference on computer vision and pattern recognition _ , pages 648655 .",
    "ieee , 1998 .",
    "yuri boykov , olga veksler , and ramin zabih .",
    "fast approximate energy minimization via graph cuts . _ ieee transactions on pattern analysis and machine intelligence _ , 230 ( 11):0 12221239 , 2001 .    heinz breu and david  g kirkpatrick .",
    "unit disk graph recognition is np - hard . _",
    "computational geometry _ , 90 ( 1):0 324 , 1998 .    david  p dailey",
    ". uniqueness of colorability and colorability of planar 4-regular graphs are np - complete . _ discrete mathematics _ , 300 ( 3):0 289293 , 1980 .",
    "erik  d demaine and mohammad  taghi hajiaghayi .",
    "diameter and treewidth in minor - closed graph families , revisited .",
    "_ algorithmica _ , 400 ( 3):0 211215 , 2004 .",
    "erik  d demaine and mohammadtaghi hajiaghayi .",
    "equivalence of local treewidth and linear local treewidth and its algorithmic applications . in _ proceedings of the fifteenth annual acm - siam symposium on discrete algorithms _ , pages 840849 .",
    "siam , 2004 .",
    "erik  d demaine , mohammadtaghi hajiaghayi , naomi nishimura , prabhakar ragde , and dimitrios  m thilikos .",
    "approximation algorithms for classes of graphs excluding single - crossing graphs as minors . _ journal of computer and system sciences _ , 690 ( 2):0 166195 , 2004 .",
    "erik  d demaine , mohammadtaghi hajiaghayi , and ken - ichi kawarabayashi .",
    "algorithmic graph minor theory : decomposition , approximation , and coloring . in _",
    "46th annual ieee symposium on foundations of computer science _ , pages 637646 .",
    "ieee , 2005 .",
    "matt devos , guoli ding , bogdan oporowski , daniel  p sanders , bruce reed , paul seymour , and dirk vertigan . excluding any graph as a minor allows a low tree - width 2-coloring .",
    "_ journal of combinatorial theory , series b _ , 910 ( 1):0 2541 , 2004 .",
    "samuel  frederick edwards and phil  w anderson .",
    "theory of spin glasses .",
    "_ journal of physics f : metal physics _ , 50 ( 5):0 965 , 1975 .    david eppstein .",
    "subgraph isomorphism in planar graphs and related problems . in _",
    "pages 632640 . society for industrial and applied mathematics , 1995 .",
    "david eppstein .",
    "diameter and treewidth in minor - closed graph families .",
    "_ algorithmica _ , 270 ( 3 - 4):0 275291 , 2000 .",
    "uriel feige and michel goemans . approximating the value of two power proof systems , with applications to max 2sat and max dicut . in _",
    "third israel symposium on the theory of computing and systems _ , pages 182189 .",
    "ieee , 1995 .",
    "fedor  v fomin , daniel lokshtanov , venkatesh raman , and saket saurabh .",
    "bidimensionality and eptas . in _ proceedings of the twenty - second annual acm - siam symposium on discrete algorithms _ , pages 748759 .",
    "siam , 2011 .",
    "alan frieze and mark jerrum .",
    "improved approximation algorithms for max @xmath1-cut and max bisection .",
    "_ algorithmica _ , 180 ( 1):0 6781 , 1997 .",
    "michel  x goemans and david williamson .",
    "approximation algorithms for max-3-cut and other problems via complex semidefinite programming . in _ proceedings of the thirty - third annual acm symposium on theory of computing _ , pages 443452 .",
    "acm , 2001 .",
    "michel  x goemans and david  p williamson .",
    "improved approximation algorithms for maximum cut and satisfiability problems using semidefinite programming .",
    "_ journal of the acm ( jacm ) _ , 420 ( 6):0 11151145 , 1995 .",
    "dm  greig , bt  porteous , and allan  h seheult .",
    "exact maximum a posteriori estimation for binary images . _ journal of the royal statistical society .",
    "series b ( methodological ) _ , pages 271279 , 1989 .",
    "alexander grigoriev and hans  l bodlaender .",
    "algorithms for graphs embeddable with few crossings per edge .",
    "_ algorithmica _ , 490 ( 1):0 111 , 2007 .",
    "martin grohe .",
    "local tree - width , excluded minors , and approximation algorithms .",
    "_ combinatorica _ , 230 ( 4):0 613632 , 2003 .",
    "martin grohe , ken ichi kawarabayashi , and bruce  a. reed .",
    "a simple algorithm for the graph minor decomposition - logic meets structural graph theory . in _ soda _ , pages 414431 .",
    "siam , 2013 .",
    "f  hadlock .",
    "finding a maximum cut of a planar graph in polynomial time .",
    "_ siam journal on computing _ , 40 ( 3):0 221225 , 1975 .",
    "johan hstad . some optimal inapproximability results .",
    "_ journal of the acm ( jacm ) _ , 480 ( 4):0 798859 , 2001 .    dorit  s hochbaum and wolfgang maass .",
    "approximation schemes for covering and packing problems in image processing and vlsi .",
    "_ journal of the acm ( jacm ) _ , 320 ( 1):0 130136 , 1985 .",
    "john hopcroft and robert tarjan .",
    "efficient planarity testing .",
    "_ journal of the acm ( jacm ) _ , 210 ( 4):0 549568 , 1974 .",
    "harry  b hunt  iii , madhav  v marathe , venkatesh radhakrishnan , shankar  s ravi , daniel  j rosenkrantz , and richard  e stearns .",
    "nc - approximation schemes for np - and pspace - hard problems for geometric graphs .",
    "_ journal of algorithms _ , 260 ( 2):0 238274 , 1998 .    howard karloff and uri zwick .",
    "a 7/8-approximation algorithm for max 3sat ? in _ proceedings of 38th annual symposium on foundations of computer science _ , pages 406415 .",
    "ieee , 1997 .",
    "sanjeev khanna and rajeev motwani . towards a syntactic characterization of ptas . in _ proceedings of the twenty - eighth annual acm symposium on theory of computing _ ,",
    "pages 329337 .",
    "acm , 1996 .",
    "subhash khot and nisheeth  k vishnoi . on the unique games conjecture . in _",
    "focs _ , volume  5 , page  3 , 2005 .",
    "subhash khot , guy kindler , elchanan mossel , and ryan odonnell .",
    "optimal inapproximability results for max - cut and other 2-variable csps ?",
    "_ siam journal on computing _ , 370 ( 1):0 319357 , 2007 .",
    "philip  n klein . a linear - time approximation scheme for tsp in undirected planar graphs with edge - weights .",
    "_ siam journal on computing _ , 370 ( 6):0 19261952 , 2008 .",
    "vladimir kolmogorov and ramin zabih .",
    "multi - camera scene reconstruction via graph cuts . in _",
    "eccv 2002 _ , pages 8296 .",
    "springer , 2002 .",
    "frank  r kschischang , brendan  j frey , and h - a loeliger .",
    "factor graphs and the sum - product algorithm . _ ieee transactions on information theory _ , 470 ( 2):0 498519 , 2001 .    shiro matuura and tomomi matsui .",
    "0.863 approximation algorithm for max dicut .",
    "_ approximation , randomization , and combinatorial optimization : algorithms and techniques lecture notes in computer science _ , 2129:0 138146 , 2001 .",
    "christos  h papadimitriou and mihalis yannakakis .",
    "optimization , approximation , and complexity classes .",
    "_ journal of computer and system sciences _ , 430 ( 3):0 425440 , 1991 .    judea pearl . _ probabilistic reasoning in intelligent systems : networks of plausible inference_. morgan kaufmann , 1988 .",
    "renfrey  burnard potts . some generalized order - disorder transformations . in _",
    "mathematical proceedings of the cambridge philosophical society _ , volume  48 , pages 106109 .",
    "cambridge univ press , 1952 .",
    "neil robertson and paul  d seymour .",
    "graph minors .",
    "planar tree - width .",
    "_ journal of combinatorial theory , series b _ , 360 ( 1):0 4964 , 1984 .",
    "neil robertson and paul  d seymour .",
    "graph minors .",
    "the disjoint paths problem . _ journal of combinatorial theory , series b _ , 630 ( 1):0 65110 , 1995",
    ".    neil robertson and paul  d seymour .",
    "graph minors .",
    "excluding a non - planar graph . _ journal of combinatorial theory , series b _ , 890 ( 1):0 4376 , 2003",
    ".    neil robertson and paul  d seymour .",
    "graph minors .",
    "wagner s conjecture . _ journal of combinatorial theory , series b _ , 920 ( 2):0 325357 , 2004",
    ".    carsten rother , vladimir kolmogorov , and andrew blake .",
    "grabcut : interactive foreground extraction using iterated graph cuts . in _ acm transactions on graphics ( tog )",
    "_ , volume  23 , pages 309314 .",
    "acm , 2004 .",
    "jian sun , nan - ning zheng , and heung - yeung shum .",
    "stereo matching using belief propagation .",
    "_ ieee transactions on pattern analysis and machine intelligence _ , 250 ( 7):0 787800 , 2003 .",
    "luca trevisan , gregory  b sorkin , madhu sudan , and david  p williamson .",
    "gadgets , approximation , and linear programming .",
    "_ siam journal on computing _ , 290 ( 6):0 20742097 , 2000 .",
    "erik  jan van leeuwen .",
    "approximation algorithms for unit disk graphs . in _",
    "graph - theoretic concepts in computer science _ , pages 351361 .",
    "springer , 2005 .",
    "klaus wagner .",
    "ber eine eigenschaft der ebenen komplexe .",
    "_ mathematische annalen _ , 1140 ( 1):0 570590 , 1937 .",
    "jonathan  s yedidia , william  t freeman , yair weiss , et  al . generalized belief propagation . in _",
    "nips _ , volume  13 , pages 689695 , 2000 .",
    "our method strongly generalizes the technique in  @xcite which is a method for designing ptass for np - hard optimization problems on planar graphs based on layerwise decomposition .",
    "it is also independently discovered by  @xcite , called _ shifting strategy_. it gives ptass to maximum independent set , minimum vertex cover , minimum dominating set and some other np - hard optimization problems . in  @xcite",
    ", it is used to give a ptas for subgraph isomorphism , connectivity and shortest path problems on planar graphs and bounded genus graphs .",
    "@xcite proves that when the corresponding incidence graphs of mpsat , tmax and tmin formulas are planar , then there are ptass for computing their max - sat .",
    "@xcite generalizes the ptass from graphs with bounded outerplanarity to graphs with bounded local treewidth .",
    "@xcite further characterizes that a minor - closed class of graphs has bounded local treewidth if and only if it does not contain all apex graphs .",
    "the bound of local treewidth for apex - minor - free graphs in  @xcite is @xmath312 , and @xmath313 for bounded - genus graphs which are also apex - minor - free graphs .",
    "this bound is improved in  @xcite to @xmath314 and further improved by  @xcite to the optimal linear bound @xmath313 .",
    "the linear bound of local treewidth for apex - minor - free graphs gives ptass to several optimization problems on apex - minor - free graphs with time complexity @xmath315 . in  @xcite ,",
    "baker s technique is applied to the travelling salesman problems ( tsp ) on undirected planar graphs and achieves a linear time approximation scheme .",
    "the technique of  @xcite has also been applied to obtain ptass for optimization problems on @xmath0-minor - free graphs , which relies heavily on a deep structural theorem  @xcite of robertson and seymour s graph minor theory .",
    "@xcite proves that there is a ptas for computing minimum vertex cover , minimum dominating set and maximum independent set on @xmath0-minor - free graphs .",
    "however , this algorithm is existential since constructing the tree decomposition relies on the polynomial time membership test of minor - closed properties , which is non - constructive  @xcite . @xcite",
    "provide an algorithm to construct a decomposition with additional properties proved in  @xcite in @xmath316 time where @xmath317 is a constant depending on the size of the excluded minor @xmath0 .",
    "this makes robertson and seymour s result constructive . @xcite",
    "give a quadratic time algorithm for computing graph minor decompositions .",
    "max - sat is apx - hard so that there is no ptas in general unless p = np .",
    "moreover , although the decision problem 2-sat can be decided in polynomial time , max-2sat is apx - hard  @xcite . @xcite provide a 0.931-approximation algorithm for max-2sat , improving the approximation ratio of 0.87856 in  @xcite .",
    "@xcite give a 0.801-approximation algorithm for max-3sat .",
    "if the formula is satisfiable , then there is a 7/8-approximation algorithm for max-3sat  @xcite .",
    "@xcite gives a 0.770-approximation algorithm for max - sat .",
    "@xcite shows that max-3sat is hard to approximate within 7/8 and max-2sat is hard to approximate within @xmath318 .",
    "on planar graphs , max - cut is dual to the route inspection problem so that it is polynomial - time solvable  @xcite . in general , this problem is apx - hard  @xcite .",
    "the best known approximation ratio achieved by polynomial time algorithm for computing max - cut is @xmath319 discovered by  @xcite .",
    "@xcite show that this is the best possible approximation ratio for max - cut if the unique game conjecture  @xcite is true . without such unproved assumptions ,",
    "@xcite show that it is np - hard to approximate max - cut within @xmath320 optimal .",
    "@xcite obtain a 0.796-approximation algorithm for max - dicut .",
    "@xcite improve this result to 0.859 . @xcite give a 0.863-approximation algorithm for the max - dicut problem .",
    "prove that the randomized approximation ratio @xmath321 of max @xmath1-cut satisfies @xmath322 when @xmath323 .",
    "this implies @xmath324 , @xmath325 , @xmath326 and so on .",
    "@xcite use complex semidefinite programming and an extension of the random hyperplane technique to obtain an approximation algorithm for max-3-dicut with approximation ratio 0.79373 and max 3-cut with approximation ratio @xmath327 .",
    "@xcite show that it is np - hard to approximate max 2-lin - mod-3 with @xmath328 unless p = np , which implies that max 3-cut and max - dicut also can not be approximated within @xmath329 unless p = np .",
    "in this section we introduce some notations and concepts that will be used throughout this paper .",
    "let @xmath53 be a graph whose vertex set is @xmath330 and edge set is @xmath331 .",
    "a graph @xmath308 is a _ subgraph _ of @xmath53 if @xmath332 and @xmath333 .",
    "the subgraph @xmath308 is called a _ induced subgraph _ of @xmath334 if @xmath335 . the subgraph induced by @xmath336",
    "is denoted by @xmath337 $ ] . for @xmath219 ,",
    "the neighborhood of @xmath220 is denoted by @xmath338 where @xmath339 . for @xmath340 ,",
    "the distance @xmath341 is the length of shortest path between @xmath269 and @xmath220 .",
    "the @xmath134-neighborhood of vertex @xmath219 is defined as @xmath342 .",
    "* approximation schemes . *",
    "a ptas is an algorithm @xmath343 which takes an instance @xmath344 of an optimization problem and a parameter @xmath345 and runs in time @xmath346 which produces a solution that is at least @xmath347 optimal for maximization and at most @xmath348 optimal for minimization . a ptas with running time @xmath349 is called an efficient polynomial time approximation scheme ( eptas ) .",
    "an eptas where @xmath350 is polynomial in @xmath351 is called a fully polynomial time approximation scheme ( fptas ) .    * planar graph . *",
    "a graph @xmath53 is a planar graph if it can be embedded into the two - dimensional plane that no pair of edges will cross with each other . given a planar graph , its planar embedding @xmath53 can be generated in linear time @xcite .",
    "a planar graph is an outerplanar graph if it has a planar embedding where all the nodes are on the exterior face . given a planar embedding of a planar graph ,",
    "a node is at level 1 if it is on the exterior face .",
    "when all the level-1 nodes are deleted from the planar embedding , the nodes on the exterior face are called level-2 nodes . by this induction",
    "the level-@xmath1 nodes can be defined .",
    "a planar graph is a @xmath1-outerplanar graph if it has a planar embedding with no nodes of level more than @xmath1 .",
    "* graph minor . * given a graph @xmath53 , if graph @xmath0 can be reduced from a subgraph of @xmath53 by a sequence of edge contractions , then @xmath0 is a _",
    "minor _ of @xmath53 , denoted by @xmath352 .",
    "we can see that @xmath352 if and only if there is a mapping @xmath353 such that @xmath354 $ ] is a connected subgraph of @xmath53 for all @xmath355 , @xmath356 for all @xmath357 and , for every @xmath358 there exists an edge @xmath359 such that @xmath360 and @xmath361 .",
    "the mapping @xmath240 is called a _ witness _ of @xmath352 .",
    "a class @xmath362 of graphs is minor - closed if and only if for all @xmath363 and @xmath352 we have @xmath364 .",
    "we say @xmath362 is nontrivial if @xmath362 does not contain all the graphs .",
    "a class @xmath362 of graphs is @xmath0-minor - free if @xmath365 for all @xmath363 .",
    "then we call @xmath0 an excluded minor of @xmath362 . robertson and seymour s graph minor theorem  @xcite , which proves wagner s conjecture , demonstrates that the undirected graphs partially ordered by the graph minor relationship form a well - quasi - ordering .",
    "this implies that every minor - closed class of graphs can be characterized by a finite set of forbidden minors .",
    "* tree decomposition and path decomposition . * the concept of tree decomposition is introduced by @xcite , on which the treewidth can be defined to measure the similarity between a graph and a tree , has turned out to be significant for structural graph theory and graph algorithms .    [",
    "def : tree - decom ] a tree decomposition of an undirected graph @xmath3 is a pair @xmath366 with @xmath367 a family of subsets of @xmath368 , one for each node of @xmath127 .",
    "@xmath127 is a tree such that    1 .",
    "@xmath369 , 2 .   for all edges @xmath370",
    ", there exists an @xmath126 with @xmath371 and @xmath372 , 3 .   for all @xmath373 : if @xmath16 is on the path from @xmath14 to @xmath1 in @xmath127 , then @xmath374 .",
    "each node of the tree decomposition @xmath127 is called a _",
    "bag_. the third property of tree decomposition guarantees that for every @xmath219 , @xmath375 induces a connected subtree of @xmath127 .",
    "the treewidth of a tree decomposition @xmath376 is @xmath377 .",
    "the treewidth of a graph @xmath53 , denoted by @xmath378 , is the minimum treewidth over all tree decompositions of @xmath53 .    a tree decomposition of width equal to the treewidth is called an optimal tree decomposition .",
    "computing the treewidth for graph @xmath53 is np - complete . but",
    "given a graph @xmath53 , deciding whether the treewidth of @xmath53 is at most a fixed constant @xmath1 can be decided in linear time by bodlaender s algorithm  @xcite . if the answer is yes , then an optimal tree decomposition of @xmath53 can be constructed in linear time ( but exponential in @xmath1 ) .",
    "the following lemma includes some well - known facts about treewidth .",
    "[ lem : treewidth ] let @xmath379 be a tree decomposition of graph @xmath53 .",
    "then the following holds :    1 .",
    "if @xmath253 is a clique , then there is an @xmath126 that @xmath380 .",
    "2 .   let @xmath381 be graphs such that @xmath382 is a clique in both @xmath53 and @xmath0 .",
    "then it holds that @xmath383 .",
    "3 .   for any @xmath253 . then @xmath384 .",
    "4 .   let @xmath381 be graphs such that @xmath352",
    ". then @xmath385 .",
    "[ def : path - decom ] a tree decomposition is called a _ path decomposition _ if @xmath386 is a path .",
    "the _ pathwidth _ of a graph @xmath53 , denoted by @xmath387 , is the minimum width over all path decompositions of @xmath53 .    *",
    "local treewidth . * the concept of local treewidth is first introduced by  @xcite as a generalization of treewidth .",
    "the local treewidth of graph @xmath53 is a function that maps an integer @xmath388 to the maximum treewidth of the subgraph of @xmath53 induced by the @xmath134-neighborhood of any vertex in @xmath53 , formally defined as follows .",
    "the local treewidth of graph @xmath3 is a function defined as @xmath389 ) : i \\in v\\bigg\\}\\ ] ] where @xmath390 $ ] is the subgraph of @xmath53 induced by @xmath391 .",
    "a class @xmath362 of graphs has bounded local treewidth if there is a function @xmath392 such that @xmath393 for all @xmath363 , @xmath388 .",
    "@xmath362 has linear local treewidth if there is a @xmath394 such that @xmath395 for all @xmath363 , @xmath388 .",
    "it is well known that the treewidth of a @xmath396 grid is @xmath1 , so planar graphs do not have bounded treewidth .",
    "but for each @xmath4 of any planar graph @xmath53 , the subgraph induced by its @xmath134-neighborhood @xmath397 has bounded treewidth .",
    "moreover , the @xmath1-outerplanar graph has treewidth at most @xmath398  @xcite .    * graphs on surfaces . * a surface",
    "@xmath225 is a compact and connected 2-manifold without boundary .",
    "an embedding refers to a 2-cell embedding .",
    "an embedding of a graph @xmath53 on a surface @xmath225 is a representation of @xmath53 on surface @xmath225 that maps vertices and edges of @xmath53 to points and arcs on @xmath225 while preserving their correlations in @xmath53 .",
    "every face bounded by arcs is homomorphic to an open disk , that is , @xmath399 .",
    "therefore , an embedding of graph on a surface is drawing the graph on the surface such that the edges only intersect at their endpoints .",
    "a graph has bounded genus if it can be embedded on a bounded - genus surface .",
    "the genus of a graph is the minimum genus of all surfaces on which it can be embedded .    *",
    "clique sum .",
    "* the clique sum operation is a significant technical tool of graph minor theory , which originates from characterizations of @xmath400-minor - free and @xmath401-minor - free graphs by  @xcite .",
    "the clique - sum operation is a way of combining two graphs by identifying their cliques .",
    "suppose @xmath170 and @xmath402 are two graphs , @xmath403 and @xmath404 are two cliques of the same size . the clique sum of @xmath170 and @xmath402 , denoted by @xmath405 , is a graph by identifying @xmath406 and @xmath407 through a bijection @xmath408 , and then possibly deleting some of the clique edges .",
    "the subgraph induced by the clique vertices in @xmath405 is called the _",
    "join set_. the clique is called a @xmath1-sum if @xmath409 , denoted by @xmath410 .",
    "since there are many possible bijections between vertices of @xmath406 and @xmath407 , there are also many possible results for @xmath405 .",
    "the clique - sum operation plays an important role in the core of robertson and seymour s graph minor theory .",
    "the deepest structural theorem  @xcite of graph minor theory states that any @xmath0-minor - free graph can be decomposed into a collection of graphs each of which can be embedded into a bounded - genus surface by deleting a bounded number of apex vertices where the number only depends on @xmath411 .",
    "these so - called @xmath240-almost embedded graphs are combined in a tree structure by clique - sum operations .",
    "the clique - sum decomposition  @xcite is the building block by which the approximation algorithms for @xmath0-minor - free graphs can be achieved .",
    "the following theorem gives a precise characterization of graphs with bounded local treewidth .",
    "[ thm : apex - minor - free ] * ( @xcite ) * let @xmath155 be a minor closed family of graphs . then @xmath155 has bounded local treewidth if and only if @xmath155 does not contain all apex graphs .",
    "a graph is an apex graph if it has a vertex whose removal results in a planar graph . for example ,",
    "@xmath401 and @xmath400 are apex graphs .",
    "theorem  [ thm : apex - minor - free ] shows that a graph @xmath53 has bounded local treewidth if and only if it is apex - minor - free .",
    "[ thm : linear - local - treewidth ] * ( @xcite ) * any apex - minor - free graph has linear local treewidth .    the linearity of local treewidth has been proved for some subclasses of apex - minor - free graphs before  @xcite , such as bounded - genus graphs  @xcite and single - crossing - minor - free graphs  @xcite .",
    "choosing any vertex @xmath219 as root , construct a bfs tree @xmath127 rooted at @xmath220 .",
    "the layer of vertices is defined as its distance to @xmath220 .",
    "moreover , the set of vertices from layer @xmath14 to layer @xmath16 is denoted by @xmath412 = \\{u \\in v | i \\le \\text{dist}(u , v ) \\le j\\}.\\ ] ] if @xmath413 , @xmath414 = \\emptyset$ ] .",
    "for any @xmath415 , @xmath414 $ ] has bounded local treewidth .",
    "this is because if we obtain a minor @xmath0 of @xmath53 by contracting the subgraph of @xmath53 induced by @xmath416 $ ] to a single vertex @xmath417 , @xmath414 \\subseteq l_{v'}^h[1,j - i+1]$ ] . since @xmath53 is apex - minor - free",
    ", @xmath0 is also apex - minor - free .",
    "therefore , @xmath0 has bounded local treewidth .",
    "then we have @xmath418 ) = o(j - i+1)$ ] , which implies any subgraph induced by consecutive @xmath1 levels of vertices in @xmath127 has treewidth bounded by @xmath181 .",
    "we delete all the edges between levels congruent to @xmath221 and @xmath222 for some integer @xmath161 that @xmath162 .",
    "then @xmath53 is decomposed into several disjoint subgraphs @xmath419 .",
    "for each @xmath167 where @xmath185 , we construct a tree decomposition @xmath128 .",
    "we still use the dynamic programming algorithm on @xmath128 to maximize the sum of @xmath99 attached on non - boundary vertices while ignoring the values of @xmath99 on the boundary of @xmath167 . since @xmath420 , the time complexity of the dynamic programming is @xmath421 . by a similar argument of theorem  [ thm : max - sum ] , there is at least one @xmath161 that the combination of the solutions on the disjoint subgraphs is at least @xmath198 optimal of the optimal solution .",
    "among various geometric objects , we only consider @xmath2-dimensional balls .",
    "our results also hold for other geometric objects no matter it is convex or not . to do this , we choose the midpoint of the line determined by two points of the longest distance on the object as the center and the longest distance from the center to any point of the object as the radius .",
    "then the terminologies of @xmath2-dimensional balls can also be used for these objects .",
    "their geometric graphs can be constructed in a similar way .",
    "a geometric graph has several important parameters related to the performances of our approximation algorithms , listed as follows .",
    "the concept of @xmath248-precision is presented in  @xcite .",
    "the concepts of _ thickness _ and _ density _ are presented in  @xcite .",
    "the concept of @xmath248-precision is defined as follows .    for @xmath422 ,",
    "a geometric graph is a @xmath248-precision geometric graph if the centers of any two @xmath2-dimensional balls are at least @xmath248 apart .",
    "a @xmath248-precision geometric graph has density @xmath423 in @xmath2-dimensional euclidean space .    for the first dimension of the grid decomposition , we remove all the edges between the centers in hypercubes of levels congruent to @xmath424 and the centers in hypercubes of levels congruent to @xmath425 for some @xmath426",
    ". then @xmath53 is decomposed into several disjoint subgraphs with @xmath169 levels of hypercubes in the first dimension , all the levels of hypercubes in the second dimension , ... , all the levels of hypercubes in the @xmath2-th dimension , denoted by @xmath427 .    for the second dimension of @xmath428 for some @xmath429 , we remove all the edges between the centers in hypercubes of levels congruent to @xmath430 and the centers in hypercubes of levels congruent to @xmath431 for some @xmath432",
    ". then @xmath428 is decomposed into several disjoint subgraphs with @xmath169 levels of hypercubes in the first dimension , @xmath169 levels of hypercubes in the second dimension , all the levels of hypercubes in the third dimension , ... , all the levels of hypercubes in the @xmath2-th dimension , denoted by @xmath433 .",
    "we repeat this procedure until for the @xmath287-th dimension of @xmath434 for some @xmath435 , we remove all the edges between the centers in hypercubes of levels congruent to @xmath436 and the centers in hypercubes of levels congruent to @xmath437 for some @xmath438",
    ". then @xmath434 is decomposed into several disjoint subgraphs each of which consists of @xmath169 levels of hypercubes in the first dimension , @xmath169 levels of hypercubes in the second dimension , ... , @xmath169 levels of hypercubes in the @xmath287-th dimension , all the levels of hypercubes in the @xmath2-th dimension , denoted by @xmath439 . for each subgraph @xmath440",
    ", it satisfies that @xmath441 for all @xmath442 .",
    "moreover , the pathwidth of @xmath440 is at most @xmath443 where each bag of the path decomposition contains two neighboring hypercubes .    for each @xmath440",
    ", we use the dynamic programming algorithm of lemma  [ lem : dynamic - programming ] to maximize the sum of functions @xmath99 attached on vertices in hypercubes that are in level 2 to level @xmath226 in the first dimension , level 2 to level @xmath226 in the second dimension , ... , level 2 to level @xmath226 in the @xmath287-th dimension and all levels in the @xmath2-th dimension while ignoring the values of functions @xmath99 attached on all other vertices .",
    "the time complexity of the dynamic programming on each @xmath440 is @xmath444 .    by the pigeon hole principle",
    ", there is at least one tuple @xmath303 that the sum of the results of dynamic programming on each @xmath440 is at least @xmath297 of the optimal solution . for each possible @xmath303",
    ", we need to compute the dynamic programming for all the @xmath440 .",
    "therefore , the time complexity of our algorithm is @xmath445 .",
    "this result gives us a ptas for computing the max - sum of functions @xmath99 on geometric graphs .",
    "given an error @xmath345 , we choose @xmath1 as @xmath446 then the solution achieved by our algorithm is at least @xmath347 optimal .",
    "we obtain a planar graph @xmath447 by replacing each edge crossing of @xmath53 by a new vertex .",
    "construct a breadth first search tree @xmath127 of @xmath53 , rooted at @xmath219 .",
    "the level of a vertex is defined as the distance from the vertex to the root @xmath220 on @xmath127 .",
    "suppose @xmath448 .",
    "we remove every @xmath1-th level in @xmath127 from @xmath308 together with its @xmath449 successive levels .",
    "then @xmath308 is decomposed into several subgraphs @xmath450 , where each @xmath451 that @xmath185 is induced by @xmath452 consecutive levels of vertices of in @xmath127 of @xmath308 .",
    "let @xmath453 and @xmath454 $ ] , which is the subgraph of @xmath53 induced by @xmath455 .",
    "since the number of crossings per edge is at most @xmath305 and @xmath305 consecutive levels of vertices are removed from @xmath308 for every @xmath1 levels , thus after the removal all the subgraphs @xmath167 are disjoint . for each @xmath167 which consists of @xmath456 $ ] levels of vertices in @xmath127 , denoted by @xmath457 .",
    "note that only the vertices in @xmath174 are possible to be adjacent to vertices in @xmath458 and only the vertices in @xmath175 are possible to be adjacent to the vertices @xmath459 in @xmath53 .",
    "it is proved in  @xcite that each @xmath167 has treewidth @xmath181 .",
    "let @xmath460 .",
    "for each @xmath167 we construct a tree decomposition @xmath128 of treewidth @xmath181 .",
    "and we use a dynamic programming on @xmath128 to maximize @xmath461 while ignoring the values of @xmath99 defined on the vertices in @xmath184 . after the computation , we combine the solutions on each @xmath167 to form the final solution . by similar arguments , there is at least one partition can achieve a solution which is at least @xmath307 optimal ."
  ],
  "abstract_text": [
    "<S> the theoretical models providing mathematical abstractions for several significant optimization problems in machine learning , combinatorial optimization , computer vision and statistical physics have intrinsic similarities . </S>",
    "<S> we propose a unified framework to model these computation tasks where the structures of these optimization problems are encoded by functions attached on the vertices and edges of a graph . </S>",
    "<S> we show that computing max 2-csp admits polynomial - time approximation scheme ( ptas ) on planar graphs , graphs with bounded local treewidth , @xmath0-minor - free graphs , geometric graphs with bounded density and graphs embeddable with bounded number of crossings per edge . </S>",
    "<S> this implies computing max - cut , max - dicut and max @xmath1-cut admits ptass on all these classes of graphs . </S>",
    "<S> our method also gives the first ptas for computing the ground state of ferromagnetic edwards - anderson model without external magnetic field on @xmath2-dimensional lattice graphs . </S>",
    "<S> these results are widely applicable in vision , graphics and machine learning .    </S>",
    "<S> approximation algorithm , graphical model , max - csp , max - cut , max - dicut , max @xmath1-cut , computer vision , statistical physics </S>"
  ]
}
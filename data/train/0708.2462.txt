{
  "article_text": [
    "expander graphs are of fundamental interest in mathematics and engineering and have several applications in computer science , complexity theory , derandomization , designing communication networks , and coding theory @xcite . a family of highly expanding graphs known as ramanujan graphs @xcite was constructed with excellent graph properties that surpassed the parameters predicted for random graphs .",
    "the description of these graphs and their analysis rely on deep results from mathematics using tools from graph theory , number theory , and representation theory of groups @xcite .",
    "other authors have investigated non - algebraic approaches to designing expander graphs and one such construction takes an appropriately defined product of small component expander graphs to construct a larger expander graph @xcite .",
    "moreover , expander graphs have a special appeal from a geometric viewpoint .",
    "isoperimetric problems in geometry have also been described by analogous problems in graphs , and a close connection exists between the cheeger constant , defined for riemannian surfaces , and the expansion constant in graphs .",
    "expander graphs can be viewed as discrete analogues of riemannian manifolds .    in this paper , we focus on one prominent application of expander graphs ",
    "namely , the design of low - density parity - check ( ldpc ) codes .",
    "low - density parity - check codes are a class of codes that can be represented on sparse graphs and have been shown to achieve record breaking performances with graph - based message - passing decoders .",
    "graphs with good expansion properties are particularly suited for the decoder in dispersing messages to all nodes in the graph as quickly as possible .",
    "expander codes are families of graph - based codes where the underlying graphs are expanders .",
    "that is , every element of the family is an expander and gives rise to an expander code .",
    "the codes are obtained by imposing code - constraints on the vertices ( and possibly , edges ) of the underlying expander graphs @xcite .",
    "it has been observed that graphs with good expansion lead to ldpc codes with minimum distance growing linearly with the block length .",
    "in fact , one method of designing asymptotically good linear block codes is from expander graphs @xcite .",
    "the popularity of ldpc codes is that they can be decoded with linear time complexity using graph - based message - passing decoders , thereby allowing for the use of large block length codes in several practical applications .",
    "in contrast , maximum - likelihood ( ml ) decoding a generic error - correcting code is known to be np hard .",
    "a parameter that dominates the performance of a graph - based message passing decoder is the minimum pseudocodeword weight , in contrast to the minimum distance for an optimal ( or , ml ) decoder .",
    "the minimum pseudocodeword weight of the graph has been found to be a reasonable predictor of the performance of a finite - length ldpc code under graph - based message - passing decoding and also linear programming decoding @xcite . in this paper , we consider four different ways of obtaining ldpc codes from expander graphs .",
    "for each case , we first present the known lower bounds on the minimum distance of expander codes based on the expansion properties of the underlying expander graph .",
    "we then extend the results to lower bound the minimum stopping set size , which is essentially the minimum pseudocodeword weight on the binary erasure channel ( bec ) , and finally , we lower bound the minimum pseudocodeword weight on the binary symmetric channel ( bsc ) . we also examine a new parity - oriented lower bound on the minimum pseudocodeword weight over the additive white gaussian noise ( awgn ) channel , thereby generalizing the result of tanner @xcite for the minimum distance .",
    "we introduce some preliminary definitions and notation that we will use in this paper .",
    "a graph @xmath0 is _ @xmath1-regular bipartite _ if the set of vertices in @xmath2 can be partitioned into two disjoint sets @xmath3 and @xmath4 such that all vertices in @xmath3 have degree @xmath5 and all vertices in @xmath4 have degree @xmath6 and each edge @xmath7 of @xmath2 is incident with one vertex in @xmath3 and one vertex in @xmath4 , i.e. , @xmath8",
    ".    we will refer to the vertices of degree @xmath5 as the _ left _ vertices , and to vertices of degree @xmath6 as the _ right _ vertices .",
    "the adjacency matrix of a @xmath6-regular connected graph has @xmath6 as its largest eigenvalue .",
    "informally , a graph is a good expander if the gap between the first and the second largest eigenvalues of the adjacency matrix is as big as possible .",
    "more precise definitions will be given later in the paper as needed .",
    "note that for a @xmath1-regular bipartite graph , the largest eigenvalue is @xmath9 .",
    "a _ simple _ ldpc code is defined by a bipartite graph @xmath2 ( also called , a tanner graph ) whose left vertices are called _ variable _ ( or , _ codebit _ ) nodes and whose right vertices are called _ check _ ( or , _ constraint _ ) nodes and the set of codewords are all binary assignments to the variable nodes such that at each check node , the modulo - two sum of the variable node assignments connected to the check node is zero , i.e. , the parity - check constraint involving the neighboring variable nodes is satisfied .",
    "[ ldpc_defn ]    note that equivalently , the ldpc code can be described by a ( binary ) incidence matrix ( or , parity - check matrix ) wherein the rows of the matrix correspond to the constraint nodes of @xmath2 and the columns correspond to variable nodes and there is a one in the matrix at a row - column entry whenever there is an edge between the corresponding constraint node and variable node in @xmath2 .",
    "the above definition can be generalized by introducing more complex constraints instead of simple parity - check constraints at each constraint node , and the resulting ldpc code will be called a _",
    "generalized _ ldpc code .    to analyze the performance of graph - based message passing decoding",
    ", certain combinatorial objects of the ldpc constraint graph have been identified that control the performance of the decoder .",
    "when transmitting over a binary erasure channel ( bec ) , it has been shown that stopping sets in the tanner graph control the performance of the message - passing decoder .",
    "@xcite for a simple ldpc code , a _ stopping set _ is a subset set @xmath10 of the variable nodes such that every constraint node that is a neighbor of some node @xmath11 is connected to @xmath10 at least twice .",
    "the size of a stopping set @xmath10 is equal to the number of elements in @xmath10 .",
    "a stopping set is said to be _ minimal _ if there is no smaller sized stopping set contained within it .",
    "the smallest minimal stopping set is called a _",
    "minimum _ stopping set , and its size is denoted by @xmath12 . note that a minimum stopping set is not necessarily unique .",
    "figure  [ sset_fig1 ] shows a stopping set in the graph .",
    "observe that @xmath13 and @xmath14 are two minimum stopping sets of size @xmath15 , whereas @xmath16 is a minimal stopping set of size 4 .    on the bec ,",
    "if all of the nodes of a stopping set are erased , then the graph - based iterative decoder will not be able to recover the erased symbols associated with the nodes of the stopping set @xcite .",
    "therefore , it is advantageous to design ldpc codes with large minimum stopping set size @xmath12 .    for other channels",
    ", it has been recently observed that so called _ pseudocodewords _ dominate the performance of the iterative decoder @xcite .",
    "( in fact , pseudocodewords are a generalization of stopping sets for other channels . )",
    "we will now introduce the formal definition of _ lift - realizable _ pseudocodewords of an ldpc constraint graph @xmath2 @xcite .",
    "however , we will also need to introduce the definition of a graph lift .",
    "a degree @xmath17 cover ( or , lift ) @xmath18 of @xmath2 is defined in the following manner :    a finite degree _",
    "@xmath17 cover _ of @xmath19 is a bipartite graph @xmath18 where for each vertex @xmath20 , there is a _ cloud _ @xmath21 of vertices in @xmath18 , with @xmath22 for all @xmath23 , and for every @xmath24 , there are @xmath17 edges from @xmath25 to @xmath26 in @xmath18 connected in a @xmath27 manner .",
    "[ graphcover ]    figure  [ pscw_fig ] shows a base graph @xmath2 and a degree four cover of @xmath2 .",
    "suppose that @xmath28 is a codeword in the tanner graph @xmath18 representing a degree @xmath17 cover of @xmath2 .",
    "pseudocodeword @xmath29 of @xmath2 _ is a vector @xmath30 obtained by reducing a codeword @xmath31 , of the code in the cover graph @xmath18 , in the following way :     @xmath32=@xmath29 ,    @xmath33    [ pscw_defn ]    the vector @xmath34 on the left hand side of figure  [ pscw_fig ] corresponds to a codeword in the degree four cover that is also a codeword in the base graph @xmath2 , whereas the vector on the right hand side corresponds to a codeword in the degree four cover that does not correspond to a codeword in the base graph .    from the above definition , it is easy to show that for a simple ldpc constraint graph @xmath2 , a pseudocodeword @xmath35 is a vector that satisfies the following set of inequalities : @xmath36 and , if variable nodes @xmath37 , @xmath38 , @xmath39 , @xmath40 participate in a check node of degree @xmath6 , then the pseudocodeword components satisfy @xmath41    extending the above for generalized ldpc codes , it can similarly be shown that on a generalized ldpc constraint graph @xmath2 , a pseudocodeword @xmath35 is a vector that satisfies the following set of inequalities : @xmath42 and , if variable nodes @xmath37 , @xmath38 , @xmath39 , @xmath40 participate in a constraint node of degree @xmath6 and that constraint node represents a subcode @xmath43 $ ] , then the pseudocodeword components satisfy @xmath44    note that equation [ eqn_gen ] implies that the pseudocodeword components of the generalized ldpc constraint graph @xmath2 also satisfy the following set of inequalities at a degree @xmath6 constraint node representing a @xmath43 $ ] subcode @xmath45 @xmath46    the set of lift - realizable pseudocodewords can also be described elegantly by means of a polytope , called the fundamental polytope @xcite . in particular ,",
    "lift - realizable pseudocodewords are dense in the fundamental polytope . for simple ldpc codes , equations ( 1 ) and ( 2 ) are necessary and sufficient conditions for a pseudocodeword to lie in the fundamental polytope .",
    "however , for generalized ldpc codes , equations ( [ eqn_zero ] ) , ( [ eqn_gen ] ) , ( [ eqn_gen2 ] ) , and ( [ eqn_gen3 ] ) are necessary but , in general , not sufficient conditions for a pseudocodeword to lie in the fundamental polytope .",
    "it was shown in @xcite that a stopping set in a simple ldpc constraint graph is the support of a pseudocodeword as defined above .",
    "thus , generalizing the definition of stopping sets to generalized ldpc code , we have :    a _ stopping set _ in a generalized ldpc constraint graph @xmath2 is the support of a pseudocodeword * p * of @xmath2 .",
    "[ sset_gen ]    note that this definition of stopping sets for a generalized ldpc code implies the same operational meaning as stopping sets for simple ldpc codes , i.e. , the iterative decoder gets stuck if a generalized ldpc code is used for transmission over a bec and the set of erased positions at the receiver contains a stopping set ( as a subset ) as defined above .    in sections 3 , 4 , 5 and 6",
    ", we will consider pseudocodewords and their behavior on the binary symmetric channel ( bsc ) , and in section 7 , we will consider pseudocodewords on the additive white gaussian noise ( awgn ) channel .",
    "the weight of a pseudocodeword @xmath29 on the bsc is defined as follows @xcite .",
    "let @xmath47 be the smallest number such that the sum of the @xmath47 largest components of @xmath29 is at least the sum of the remaining components of @xmath29 . then",
    ", the bsc _ pseudocodeword weight _ of @xmath29 is @xmath48 [ bsc_pscw_wt ]    the _ minimum bsc pseudocodeword weight _ of an ldpc constraint graph @xmath2 on the bsc is the minimum weight among all pseudocodewords obtainable from all finite - degree lifts of @xmath2 .",
    "this parameter is denoted by @xmath49 .",
    "let @xmath50 and @xmath51 .",
    "a @xmath1-regular bipartite graph @xmath2 with @xmath52 degree @xmath5 nodes on the left and @xmath53 degree @xmath6 nodes on the right is an _",
    "@xmath54 expander _ if for every subset @xmath55 of degree @xmath5 nodes such that @xmath56 , the size of the set of neighbors of @xmath55 , @xmath57 is at least @xmath58 .",
    "[ expander_a ]    let a @xmath1-regular bipartite graph @xmath2 with @xmath52 left vertices and @xmath53 right vertices be an @xmath54 expander .",
    "an ldpc code is obtained from @xmath2 by interpreting the degree @xmath5 vertices in @xmath2 as variable nodes and the degree @xmath6 vertices as simple parity - check nodes .",
    "( see figure  [ casea ] . )",
    "degree @xmath5 vertices : variable nodes , degree @xmath6 vertices : simple parity - check constraints .",
    "@xcite if @xmath59 , the ldpc code obtained from the @xmath54 expander graph @xmath2 as above has minimum distance @xmath60 .",
    "[ dmin_a ]      if @xmath59 , the ldpc code obtained from the @xmath54 expander graph @xmath2 as above has a minimum stopping set size @xmath61 .",
    "[ smin_a ]    suppose the contrary that there exists a stopping set @xmath10 of size smaller than @xmath62",
    ". then by the expansion property of the graph , the size of the set of neighbors of @xmath10 is @xmath63 .",
    "the average number of times a vertex in @xmath64 is connected to the set @xmath10 is @xmath65 .",
    "this means that there is at least one vertex in @xmath64 that is connected to the set @xmath10 only once , contradicting the fact that @xmath10 is a stopping set .",
    "note that the above proof is just an extension of the proof of lemma [ dmin_a ] for the lower bound on the minimum distance @xmath66 since it uses the fact that every check node neighbor of a stopping set is connected to the set at least twice , which is a similar requirement for a codeword in the proof of lemma [ dmin_a ] .",
    "if @xmath67 such that @xmath68 is an integer , the ldpc code obtained from the @xmath54 expander graph @xmath2 as above has a pseudocodeword weight @xmath69 [ case_a_thm ]    the proof is by contradiction .",
    "let @xmath70 be a pseudocodeword in @xmath2 .",
    "without loss of generality , let @xmath71 .",
    "we will show that if @xmath47 is the smallest number such that @xmath72 , then @xmath47 must be more than @xmath73 .",
    "we will assume a subset @xmath55 of size @xmath47 of variable nodes corresponding to the @xmath47 dominant components of @xmath29 to have a size that is at most @xmath73 and establish the necessary contradiction .",
    "let @xmath74 be the set of variable nodes .",
    "let @xmath75 be a set of @xmath47 variable nodes corresponding to the @xmath47 largest components of @xmath29 .",
    "let @xmath76 is the set of neighbors of the vertices in @xmath3 and @xmath77 .",
    "let @xmath78 .",
    "note that since we assume @xmath68 to be an integer , @xmath79 is also an integer .",
    "+ we want to show that if @xmath80 , then we can find a set @xmath81 of edges such that : ( i ) every node in @xmath55 is incident with at least @xmath68 edges in @xmath81 , ( ii ) every node in @xmath82 is incident with at least @xmath79 edges in @xmath81 , and ( iii ) every node in @xmath83 is incident with at most one edge in @xmath81 .",
    "( such a set @xmath81 is called a _ @xmath84-matching _ in @xcite . )",
    "suppose @xmath85 , where @xmath86 . then by lemma 6 in @xcite , @xmath87 .",
    "this implies that @xmath88 .",
    "since @xmath2 is an @xmath89-expander , this means @xmath90 .    we will prove the @xmath84-matching property in @xmath2 by constructing a new bipartite graph @xmath18 as follows .",
    "label the edges connected to each vertex in @xmath91 as @xmath92 . for each vertex @xmath93 in @xmath91 , create @xmath68 vertices @xmath94 in @xmath18 . for every vertex @xmath95 in @xmath83 in the graph @xmath2 , form a vertex @xmath95 in the graph @xmath18 .",
    "let @xmath96 correspond to the set of vertices in @xmath18 that correspond to the copies of vertices in @xmath97 and let @xmath98 be the set of vertices in @xmath18 that correspond to the vertices in @xmath83 in @xmath2",
    ". for a vertex @xmath93 in @xmath2 , connect the vertex @xmath99 , @xmath100 , to a node @xmath101 if and only if the @xmath102 edge of @xmath93 is connected to @xmath103 in @xmath2 .",
    "( note that the @xmath68 vertices in @xmath18 that correspond to a node in @xmath55 correspond to @xmath68 edges incident on that node in @xmath2 .",
    "furthermore , since @xmath2 does not contain multiple edges , each of those @xmath68 edges are connected to a distinct node in @xmath83 , which means that each of the @xmath68 copies in @xmath18 corresponding to a node in @xmath55 are connected to a distinct node in @xmath98 . ) now , for any subset @xmath104 , we will always have that @xmath105 in @xmath18 .",
    "this can be seen by the following argument : since the graph @xmath2 is an @xmath89 expander and @xmath106 , therefore any subset @xmath107 has the property that @xmath108 in @xmath2 .",
    "choose @xmath4 such that the set of vertices in @xmath3 in @xmath18 correspond to the set of vertices in @xmath4 in the graph @xmath2 .",
    "we have @xmath109 since @xmath110 by construction and @xmath111 by construction .",
    "thus , for any subset @xmath104 in the graph @xmath18 , we have @xmath105 .",
    "therefore , by hall s ( marriage ) theorem , there is a matching of all nodes in @xmath96 ( which corresponds to the @xmath112 copies of vertices in @xmath113 ) to the set in @xmath98 ( or @xmath83 ) . since @xmath114 by the choice of @xmath115 , this means that the matching in @xmath18 corresponds to a @xmath84-matching for the set @xmath116 in the graph @xmath2 .",
    "+ consider all of the check nodes in @xmath117 that are incident with edges from @xmath81 that are also incident with the vertices in @xmath55 .",
    "let us call this set of check nodes @xmath118 .",
    "we now apply the inequality in equation ( [ eqn_basic ] ) at each of the check nodes in @xmath118 and combine the inequalities by summing them . for each check node , the left - hand side of equation ( [ eqn_basic ] )",
    "is chosen to be a component of the pseudocodeword corresponding to a vertex in @xmath55 if the edge from @xmath81 that is incident with the check node is also incident with that vertex in @xmath55 .",
    "after combining all such inequalities in all of the above check nodes , we obtain an inequality that has @xmath119 on the left hand side since there are at least @xmath68 edges from each vertex in @xmath55 that are incident with @xmath81 .",
    "furthermore , by the same argument , there are most @xmath120 edges from each vertex in @xmath55 that are not in @xmath81 but are possibly also incident with the above check nodes . moreover ,",
    "at most @xmath121 edges from each vertex in @xmath82 are possibly incident with the above check nodes and at most @xmath121 edges from each vertex in @xmath122 are possibly incident with the above check nodes by the definition of @xmath116 .",
    "therefore , we have the following inequality when we sum the inequalities obtained above at all the above check nodes :    @xmath123    the above inequality implies that @xmath124 from the choice of @xmath115 .",
    "thus , the desired contradiction is achieved . from the definition of pseudocodeword weight on the bsc ( definition [ bsc_pscw_wt ] )",
    ", we have @xmath125 .    * the proof of the above theorem can also be inferred directly by the result in @xcite .",
    "however , we believe the proof presented here is somewhat simpler than the indirect approach in @xcite . * for the case when @xmath126 , the lower bound on the minimum pseudocodeword weight @xmath127 matches the lower bound on @xmath66 and @xmath12 presented in lemmas [ dmin_a ] and [ smin_a ] . this is particularly appealing since an expander code achieving the lower bound on the minimum distance will also achieve the lower bound on the minimum pseudocodeword and will have no pseudocodewords of weight less than the minimum distance .",
    "let a @xmath1-regular bipartite graph @xmath2 with @xmath52 left vertices and @xmath53 right vertices be a @xmath54 expander .",
    "( see definition  [ expander_a ] . )",
    "an ldpc code is obtained from @xmath2 by interpreting the degree @xmath5 vertices in @xmath2 as variable nodes and the degree @xmath6 vertices as sub - code constraints imposed by a @xmath43 $ ] linear block code$ ] binary linear block code are the block length @xmath52 , the dimension @xmath128 , and the minimum distance @xmath6 . ] .",
    "a valid assignment of values to the variable nodes is one where the ( binary ) values assigned to the variable nodes connected to each constraint node satisfy all the constraints imposed by the subcode , meaning that the binary assignments from the variable nodes connected to each constraint node form a codeword in the subcode .",
    "( see figure  [ caseb ] . )",
    "such an ldpc code is called a _ generalized ldpc code_.    degree @xmath5 vertices : variable nodes , degree @xmath6 vertices : sub - code constraints of a @xmath43 $ ] code .",
    "@xcite if @xmath129 , the ldpc code obtained from the @xmath54 expander graph @xmath2 as above has minimum distance @xmath60 .",
    "a generalized stopping set is as defined in definition [ sset_gen ] in section 2 . under the assumption that the @xmath43",
    "$ ] subcode has no idle components , meaning that there are no components that are zero in all of the codewords of the subcode , definition [ sset_gen ] reduces to the following : _ a stopping set in a generalized ldpc code is a set of variable nodes such that every node that is a neighbor of some node @xmath11 is connected to @xmath10 at least @xmath130 times .",
    "_    if @xmath129 , the ldpc code obtained from the @xmath54 expander graph @xmath2 as above has a minimum stopping set size @xmath61 .",
    "suppose the contrary that there exists a stopping set @xmath10 of size smaller than @xmath62 .",
    "then by definition [ sset_gen ] , there is a pseudocodeword @xmath29 whose support has a size smaller than @xmath62 . by the expansion property of the graph ,",
    "the size of the set of neighbors of @xmath10 is @xmath63 .",
    "the average number of times a vertex in @xmath64 is connected to the set @xmath10 is @xmath131 .",
    "this means that there is at least one vertex in @xmath64 that is connected to the set @xmath10 less than @xmath132 times .",
    "therefore , there are less than @xmath132 non - zero pseudocodeword components connected to that constraint node in @xmath64 . if we choose the @xmath133 largest components among them , then their sum is greater than the sum of the remaining pseudocodeword components at that constraint node .",
    "this is a contradiction to the inequality in equation [ eqn_gen2 ] , meaning @xmath29 can not be a pseudocodeword and therefore @xmath10 can not be a stopping set .",
    "thus , the size of @xmath10 can not be less than @xmath62 .",
    "if @xmath134 such that @xmath68 is an integer , then the ldpc code obtained from the @xmath54 expander graph @xmath2 has a minimum pseudocodeword weight @xmath135 [ case_b_thm ]    the proof is by contradiction .",
    "suppose @xmath2 is an @xmath89-expander , where @xmath136 .",
    "then , assuming @xmath29 is a pseudocodeword of the ldpc constraint graph @xmath2 , the proof follows that of case a by choosing a set of variable nodes @xmath55 corresponding to the @xmath47 dominant components of the pseudocodeword and letting @xmath137 , where @xmath138 . we need to show that @xmath139 . by using a strong subcode , the @xmath140 required is less than that in case a , thereby allowing @xmath141 to be larger and yielding a larger bound overall .",
    "the argument is the same as in the proof of case a , where now we set @xmath142 .    following the proof of theorem 1",
    ", we will first show that if @xmath143 , then @xmath144 .",
    "suppose to the contrary , @xmath145 , then that means there is some subset @xmath146 such that @xmath147 .",
    "this means that @xmath148 .",
    "since @xmath2 is an @xmath89 expander , we then have @xmath149 .",
    "however , observe that @xmath150 since @xmath151 and @xmath152 by definition . combining the above inequalities",
    ", we have @xmath153 , implying @xmath154 .",
    "this contradicts the choice of @xmath155 above .",
    "thus , if @xmath137 , then @xmath144 .    following the rest of the proof of theorem 1 and using the inequality in equation [ eqn_gen ] for the pseudocodeword components , the first inequality in equation ( [ eqn_*1 ] ) in the proof of case a now becomes    this yields @xmath156 from the choice of @xmath115 .",
    "thus , by definition [ bsc_pscw_wt ] , the weight of @xmath29 is @xmath157 .",
    "* since @xmath158 for any judicious choice of subcode , the lower bound in theorem 2 is always greater than the lower bound in theorem 1 .",
    "further , the graph need not be as good an expander in case b as in case a for the lower bound to hold .",
    "thus , using strong subcodes is advantageous for constructing good ldpc codes from expander graphs . *",
    "note that for @xmath159 , the lower bound on the pseudocodeword weight equals the lower bound on the minimum distance and minimum stopping set size .",
    "a connected , simple , graph @xmath2 is said to be a _",
    "@xmath160 expander _",
    "if @xmath2 has @xmath52 vertices , is @xmath6-regular , and the second largest eigenvalue of @xmath2 ( in absolute value ) is @xmath161 .    let a @xmath6-regular graph @xmath2 be an @xmath160 expander .",
    "an ldpc code is obtained from @xmath2 by interpreting the edges in @xmath2 as variable nodes and the degree @xmath6 vertices as constraint nodes imposing constraints of an @xmath43 $ ] linear block code .",
    "( see figure  [ casec ] . )",
    "the resulting ldpc code has block length @xmath162 and rate @xmath163 .",
    "edges : variable nodes , degree @xmath6 vertices : constraints of a @xmath43 $ ] code .",
    "we now state a particularly useful result by alon and chung @xcite describing the expansion of a @xmath6-regular graph .",
    "( alon - chung ) let @xmath2 be a @xmath6-regular graph on @xmath52 vertices and let @xmath161 be the second largest eigenvalue of its adjacency matrix .",
    "then every subset @xmath10 of @xmath164 vertices contains at most @xmath165 edges in the subgraph induced by @xmath10 in @xmath2 .",
    "[ alon_chung_lemma ]      @xcite the ldpc code obtained from an @xmath160 expander graph @xmath2 as above has minimum distance @xmath166 .",
    "note that the above result of sipser and spielman can be improved by a tighter bound in the last step of their proof in @xcite to @xmath167 .",
    "the ldpc code obtained from an @xmath160 expander graph @xmath2 has a minimum stopping set size @xmath168 .",
    "[ case_c_lemma ]    note that we again use definition [ sset_gen ] for stopping sets in @xmath2 .",
    "let @xmath10 be a subset of variable nodes ( edges in @xmath2 ) of size @xmath169 representing a stopping set in @xmath2 . then @xmath10 is the support of some pseudocodeword @xmath170 in @xmath2 . by the alon - chung lemma ,",
    "the set @xmath10 has at least @xmath164 constraint node neighbors @xmath64 .",
    "since each edge in @xmath10 has two constraint node neighbors in @xmath64 , this implies that the average number of edges in @xmath10 connected to a constraint node in @xmath64 is at most @xmath171 .",
    "however if @xmath172 then there is at least one node in @xmath64 that is connected to @xmath10 fewer than @xmath130 times to @xmath10 .",
    "that means that fewer than @xmath130 non - zero components of @xmath29 are connected to a constraint node .",
    "it can now be shown that the inequality in equation [ eqn_gen2 ] is violated , implying that @xmath29 can not be a pseudocodeword ( and , @xmath10 is not a stopping set . )",
    "the above inequality in equation ( [ eqn_**2 ] ) holds for @xmath173 . substituting the value of @xmath174 in @xmath175",
    ", we infer that the graph can not contain a stopping set of size less than @xmath176 .",
    "hence , @xmath177      the ldpc code obtained from an @xmath160 expander graph @xmath2 has a minimum bsc pseudocodeword weight lower bounded as follows : @xmath178 [ case_c_thm ]    for sake of simplicity , we assume that @xmath179 is an integer . however , it is easy to extend the proof for any value of @xmath132 .",
    "the @xmath6-regular graph @xmath2 can be transformed to a @xmath180-regular bipartite graph @xmath181 by representing every edge in @xmath2 by a vertex in @xmath181 ( _ the variable nodes _ ) and every vertex in @xmath2 by a vertex in @xmath181 ( _ the constraint nodes _ ) and connecting the variable nodes to the constraint nodes in @xmath181 in a natural way .",
    "the variable nodes have degree two and they represent codebits of the ldpc code @xmath182 , whereas the constraint nodes have degree @xmath6 and each represents a @xmath43$]-subcode constraints .",
    "let @xmath183 be a pseudocodeword , where @xmath184 is the number of edges in @xmath2 and also the length of the ldpc code .",
    "without loss of generality , let us assume that @xmath185 .",
    "let @xmath47 be the smallest number such that @xmath186 .",
    "let @xmath187 be the set of edges in @xmath2 that correspond to the support of the @xmath47 largest components of @xmath29 , and let @xmath188 be the set of vertices incident on @xmath187 .",
    "note that in the transformed graph @xmath181 , @xmath187 is a subset of the variable nodes , and @xmath188 is its set of neighbors .",
    "let @xmath189 , where @xmath190 . since @xmath2 is an @xmath160 graph , we have @xmath191 .",
    "we now claim that there is a set of edges @xmath81 in @xmath181 called an @xmath192-matching such that ( i ) every vertex in @xmath187 in the graph @xmath181 is incident with at least one edge from @xmath81 and ( ii ) every vertex in @xmath188 in the graph @xmath181 is incident with at most @xmath193 edges from @xmath81 .",
    "given the claim , we can apply the pseudocodeword inequality from equation [ eqn_gen3 ] at each of the vertices in @xmath188 that is incident with edges from @xmath81 . for each such vertex @xmath95 in @xmath188 , the left - hand side of equation ( [ eqn_gen3 ] )",
    "is chosen to have the @xmath193 or less components of the pseudocodeword that correspond to the vertices in @xmath187 that are connected to @xmath95 via an edge from @xmath81 .",
    "after combining all such inequalities in all of the above constraint nodes , we obtain an inequality that has @xmath194 on the left hand side .",
    "furthermore , there is at most one edge from each vertex in @xmath187 that is not in @xmath81 but is possibly also incident with the above constraint nodes in @xmath188 . moreover , at most two edges from each vertex in @xmath195 are possibly incident with the above constraint nodes .",
    "therefore , after applying the pseudocodeword inequality ( equation [ eqn_gen3 ] ) as above at each of these constraint nodes and summing these inequalities , we obtain the following inequality : @xmath196 simplifying , we get @xmath197    by the definition of the pseudocodeword weight on the bsc channel ( see definition [ bsc_pscw_wt ] ) , we have that the pseudocodeword weight of @xmath29 is @xmath198 . since @xmath199 , for @xmath200 , we have @xmath201 .",
    "this proves the desired lower bound on @xmath127 .    to prove the claim ,",
    "observe that for any set @xmath3 of left vertices in @xmath181 such that @xmath202 where @xmath203 , we have @xmath204 . in other words , for every @xmath3 such that @xmath205 where @xmath203 , we have @xmath206 thus , for any @xmath207 , we have @xmath208    we now prove the claim that there is an @xmath192-matching for the set @xmath187 using contradiction .",
    "the proof is very similar to the converse of hall s marriage theorem .",
    "we want to show that there is a set of edges @xmath81 in @xmath181 such that : ( i ) every @xmath209 is incident with at least one edge from @xmath81 and ( ii ) every @xmath210 is incident with at most @xmath193 edges from @xmath81 .",
    "we will prove this by showing that there is a matching @xmath81 such that : ( i ) every @xmath209 is incident with exactly one edge from @xmath81 and ( ii ) every @xmath210 is incident with either exactly @xmath193 edges from @xmath81 or zero edges from @xmath81 .",
    "we consider the induced subgraph @xmath211 of @xmath187 in @xmath181 .",
    "suppose to the contrary no such matching exists , then we will assume that there is a maximum matching @xmath212 such that the maximum number of vertices in @xmath187 are matched to the vertices in @xmath188 as described above .",
    "that is , @xmath212 is the maximum matching such that as many vertices in @xmath187 are each incident with one edge from @xmath212 and all the vertices in @xmath188 are incident with either zero or exactly @xmath193 edges from @xmath212 . since we assume that not all the vertices in @xmath187 are incident with edges in @xmath212 ,",
    "there is a vertex @xmath209 that is not incident with any edge from @xmath212 .",
    "now , we let @xmath10 be the set of vertices in @xmath187 that are connected to @xmath93 by an @xmath212-alternating path - alternating path . ] in @xmath211 and let @xmath118 be the set of vertices in @xmath188 that are connected to @xmath93 by an @xmath212-alternating path in @xmath211 .",
    "then , it is clear that @xmath213 and @xmath214 .",
    "furthermore , every vertex in @xmath215 has one edge incident from @xmath212 that is connected to some vertex in @xmath118 and every vertex in @xmath118 has @xmath193 edges incident from @xmath212 that are connected to vertices in @xmath215 .",
    "( since @xmath212 is a maximum - matching , it is easy to show that there is no @xmath212-augmenting path as defined in @xcite . )",
    "this means that @xmath216 , which contradicts equation [ eqn_casec_new2 ] .",
    "this proves that there exists a matching @xmath81 as described above .",
    "the above proof holds even when @xmath193 is not an integer . in that case",
    "we simply replace @xmath179 with @xmath217 in the above when @xmath218 . in the case",
    "when @xmath219 , the proof is trivial since the @xmath192-matching condition follows directly from hall s marriage theorem .",
    "* note that the lower bound on the minimum pseudocodeword weight closely resembles the lower bound on the minimum distance and the minimum stopping set size .",
    "the only difference is a factor of two in the @xmath192 term within the braces in lemma [ case_c_lemma ] and theorem [ case_c_thm ] . *",
    "the lower bound suggests that if one were to use good expanding graphs such as the ramanujan graphs from the construction in @xcite and choose an appropriate choice of subcodes having minimum distance at least twice the second eigenvalue of the expander then the resulting code will have a good pseudocodeword weight and a good minimum distance .",
    "this is interesting for designing codes that are good for iterative decoding or lp decoding .",
    "a @xmath1-regular bipartite graph @xmath2 on @xmath53 left vertices and @xmath52 right vertices is a _",
    "@xmath220 expander _ if the second largest eigenvalue of @xmath2 ( in absolute value ) is @xmath161 .",
    "let a @xmath1-regular bipartite graph @xmath2 be an @xmath220 expander .",
    "an ldpc code is obtained from @xmath2 by interpreting the edges in @xmath2 as variable nodes , the degree @xmath5 left vertices as sub - code constraints imposed by an @xmath221 $ ] linear block code , and the degree @xmath6 vertices as constraint nodes imposing constraints of an @xmath222 $ ] linear block code .",
    "( see figure  [ cased ] . )",
    "the resulting ldpc code has block length @xmath223 and rate @xmath224 .",
    "edges : variable nodes , degree @xmath5 vertices : @xmath225 $ ] constraints , degree @xmath6 vertices : @xmath226 $ ] constraints .",
    "we state a useful result by janwa and lal @xcite describing the edge - expansion of a regular bipartite graph @xmath2 .",
    "( janwa - lal , edge - expansion ) let @xmath2 be a @xmath1-regular bipartite graph on @xmath53 vertices on the left and @xmath52 vertices on the right and let @xmath161 be its second largest eigenvalue .",
    "if @xmath10 and @xmath118 are two subsets of the left and the right vertices , respectively , of @xmath2 , then the number of edges in the induced sub - graph of @xmath10 and @xmath118 in @xmath2 is at most @xmath227 [ janwa_lal_lemma ]      @xcite if @xmath228 , the ldpc code obtained from the @xmath220 expander graph @xmath2 as above has minimum distance @xmath229      we again use the generalized definition of stopping set in definition [ sset_gen ] . under the assumption that the @xmath222 $ ] and @xmath230 $ ] subcodes have no idle components , meaning that there are no components that are zero in all of the codewords of either of the subcodes , definition [ sset_gen ]",
    "reduces to the following : _ a stopping set in a generalized ldpc code as in case d is a set of variable nodes such that every node that is a degree @xmath5 neighbor of some node @xmath11 is connected to @xmath10 at least @xmath231 times and every node that is a degree @xmath6 neighbor of some node @xmath11 is connected to @xmath10 at least @xmath232 times .",
    "_    the ldpc code obtained from the @xmath220 expander graph @xmath2 has a minimum stopping set size @xmath233    note that when @xmath234 , the lower bound in the above is positive and meaningful .",
    "let @xmath3 be a stopping set corresponding to a subset of edges in @xmath2 and let @xmath10 and @xmath118 be the set of left and right neighbors , respectively , of @xmath3 in @xmath2 .",
    "then @xmath3 is the support of some pseudocodeword @xmath29 in @xmath2 .",
    "suppose there is some node in @xmath10 that is connected fewer that @xmath235 times to the edges in @xmath3 , then the inequality in equation [ eqn_gen2 ] is violated by the pseudocodeword components at that constraint node .",
    "similarly , if some node in @xmath118 is connected fewer than @xmath236 times to the edges in @xmath3 , then the corresponding pseudocodeword components will not satisfy all the inequalities in equation [ eqn_gen2 ] .",
    "thus , every node in @xmath10 is connected to @xmath3 at least @xmath235 times and every node in @xmath118 is connected to @xmath3 at least @xmath236 times .",
    "this means @xmath237 and @xmath238 . by lemma [ janwa_lal_lemma ]",
    ", we have @xmath239 this can be further bounded as @xmath240 simplifying , we obtain @xmath241      if @xmath242 , the ldpc code obtained from the @xmath220 expander graph @xmath2 has a minimum pseudocodeword weight @xmath243 [ case_d_thm ]    note that the above lower bound is positive and meaningful when @xmath244 .",
    "let @xmath183 be a pseudocodeword .",
    "without loss of generality , let us assume that @xmath185 .",
    "let @xmath47 be the smallest number such that @xmath245    let @xmath187 be the set of edges in @xmath2 that correspond to the support of the @xmath47 largest components of @xmath29 .",
    "now we define a set @xmath10 as the set of left neighbors ( degree @xmath5 neighbors ) to the edges in @xmath187 , and similarly define a set @xmath118 as the set of right neighbors ( degree @xmath6 neighbors ) to @xmath187 .",
    "the @xmath1-regular graph @xmath2 can be transformed to a graph @xmath181 by representing every edge in @xmath2 by a vertex ( called a left - vertex ) in @xmath181 , every vertex of degree c in @xmath2 by a vertex ( called a right - left vertex ) in @xmath181 , every vertex of degree @xmath6 in @xmath2 by a vertex ( called a right - right vertex ) in @xmath181 and by connecting the edges from the left vertices to the right - left and right - right vertices in @xmath181 in a natural way .",
    "the left vertices have degree two and they represent variable nodes of the ldpc code @xmath182 , whereas the right - left vertices have degree @xmath5 and represent @xmath230$]-subcode constraints and the right - right vertices have degree @xmath6 and represent @xmath222$]-subcode constraints .",
    "note that @xmath246 in @xmath181 .",
    "let @xmath247 now let us consider two cases .",
    "suppose @xmath248 .",
    "then , since @xmath2 is a @xmath220 graph , we have @xmath249 note that @xmath250 .",
    "hence , we have @xmath251 on simplifying , the above yields @xmath252 this inequality contradicts the assumption on the size of @xmath187 .",
    "suppose @xmath253 .",
    "then we claim that there is a set of edges @xmath81 in @xmath181 called an @xmath254-matching such that ( i ) every vertex in @xmath187 in the graph @xmath181 is incident with at least one edge from @xmath81 and ( ii ) every vertex in @xmath255 in the graph @xmath181 is incident with at most @xmath256 edges from @xmath81 .",
    "the rest of the proof is similar to that for theorem 3 .",
    "given the claim , it is easy to show that by applying the pseudocodeword inequality from equation [ eqn_gen3 ] at all the nodes in @xmath257 that are incident with edges from @xmath81 and summing them , we can arrive at at an inequality of the form @xmath258 this will prove that the weight of @xmath29 is @xmath259 implying that the minimum pseudocodeword weight is @xmath260 hence @xmath261    the proof for the matching also follows the same arguments as that in theorem 3 .",
    "we derive the condition for proving the matching as follows : for any subset @xmath262 , let @xmath263 be the set of right - left neighbors of @xmath3 in @xmath181 and let @xmath264 be the set of right - right neighbors of @xmath3 in @xmath181 .",
    "note that @xmath265 .",
    "otherwise , using the argument in case 1 and the fact that @xmath2 is a @xmath220 expander , it can be shown that latexmath:[$|x|",
    "> n\\frac{c}{2d}\\epsilon_1(\\frac{\\epsilon_1}{2}-\\frac{\\mu}{c } ) \\ge    @xmath207 , we have @xmath267 the rest of the proof is similar to that in theorem 3 .",
    "* note that if @xmath268 , then it can be shown using a similar proof as in theorem 4 that @xmath269 . *",
    "observe that the lower bound on the minimum pseudocodeword weight is slightly weaker compared to the lower bound on the minimum distance and the minimum stopping set size , since the proof in theorem 4 exploits the strength of only one the subcodes  namely , the subcode with the smaller distance .",
    "we however believe that this can be improved to give a much stronger result as stated below .",
    "* note that in the case where @xmath270 , @xmath271 , and @xmath272 , the result in theorem 4 closely resembles the result in theorem 3 and is almost equal to the lower bounds on the minimum distance and the minimum stopping set size . * the lower bound suggests that if one were to use good expanding graphs such as the bipartite ramanujan graphs from the construction in @xcite and choose an appropriate choice of subcodes having minimum distance at least twice the second eigenvalue of the expander then the resulting code will have a good pseudocodeword weight and a good minimum distance .",
    "once again , this is interesting for designing codes that are good for iterative decoding or lp decoding .",
    "furthermore , with different choices of @xmath5 and @xmath6 , there is greater flexibility in the designing good codes using the construction in case d than that in case c.    we believe that theorem 4 can be improved to a stronger result as follows :    if @xmath273 , the ldpc code obtained from the @xmath220 expander graph @xmath2 has a minimum pseudocodeword weight @xmath274",
    "the weight of a pseudocodeword @xmath275 of an ldpc constraint graph @xmath2 on the awgn channel is defined as @xcite @xmath276    the following bound on the minimum pseudocodeword weight on the awgn channel is an adaptation of tanner s parity - oriented lower bound on the minimum distance @xcite .",
    "further , this bound complements the bit - oriented bound obtained by vontobel and koetter @xcite which is also a lower bound on the minimum pseudocodeword weight in terms of the eigenvalues of the adjacency matrix of @xmath2 , obtained using a slightly different argument .",
    "let @xmath2 be a connected @xmath277-regular bipartite graph representing an ldpc code with an @xmath278 parity check matrix @xmath279 .",
    "then the minimum pseudocodeword weight on the awgn channel is lower bounded as @xmath280 where @xmath281 and @xmath282 are the largest and second - largest eigenvalues ( in absolute value ) , respectively , of @xmath283 .",
    "[ parity_oriented_bnd ]    let @xmath284 be a pseudocodeword of @xmath2 , and let @xmath285 be a real - valued vector of length @xmath286 .",
    "the first eigenvector of @xmath283 is @xmath287 .",
    "let @xmath288 be the projection of @xmath29 onto the @xmath289th eigenspace .",
    "we will now upper bound @xmath290 . converting @xmath291 into eigenspace representation , we get @xmath292 @xmath293    note that @xmath294 @xmath295 the first equality follows from the choice of @xmath29 and the regularity of the parity check matrix @xmath279 .",
    "the second inequality follows by applying the identity @xmath296 to the terms in the expansion of @xmath297 .",
    "the above set of equations yield @xmath298 we now lower bound @xmath290 as follows @xmath299    this bound may be seen by observing that for each @xmath300 in the outer summation , the inner sums over the indices @xmath289 and @xmath17 contribute @xmath301 @xmath302 terms and @xmath303 terms involving other @xmath304 s .",
    "when @xmath300 is fixed , for each @xmath289 wherein @xmath305 , we have @xmath302 and @xmath306 other @xmath304 s that contribute to the inner sum . since @xmath302 and the @xmath306 other @xmath304 s",
    "are involved in the @xmath289th constraint node and since @xmath307 is a pseudocodeword , we have @xmath302+sum of @xmath306 other @xmath304 s @xmath308 .",
    "since there are @xmath301 values of @xmath289 wherein @xmath305 , for a fixed @xmath300 , the inner sum over @xmath289 and @xmath17 can be lower bounded by @xmath309 .",
    "thus , @xmath310 .    combining the upper and lower bounds , we get @xmath311 since @xmath312",
    ", we obtain the desired lower bound .    note",
    "that this lower bound is not as strong as the bit - oriented bound in @xcite .",
    "it equals the bit - oriented bound for the case when @xmath313 .",
    "however , we believe that by a different but judicious choice of @xmath29 in the above proof and by using stronger intermediate bounding steps , a much stronger parity - oriented bound can be obtained .",
    "in this paper , the expander - based ( i.e. , eigenvalue - type ) lower bounds on the minimum distance of expander codes were extended to lower bound the minimum stopping set size and the minimum pseudocodeword weight of these codes . a new parity - oriented lower bound in terms of the eigenvalues of the parity - check matrix was also obtained for the minimum pseudocodeword weight of ldpc codes on the awgn channel .",
    "these lower bounds indicate that ldpc codes constructed from expander graphs provide a certain guaranteed level of performance and error - correction capability with graph - based iterative decoding as well as linear programming decoding .",
    "further , the results indicate that if the underlying ldpc constraint graph is a good expander , then the corresponding expander code has a minimum bsc pseudocodeword weight that is linearly growing in the block length .",
    "this is in general a very hard criterion to ensure in the construction of good error correcting codes at large block lengths .",
    "it would be interesting to derive upper bounds on the distance , stopping set size , and pseudocodeword weight of expander codes to examine how tight the derived lower bounds are .",
    "we thank joachim rosenthal and the reviewers for a careful proof - reading of this paper and their valuable comments .",
    "we believe their feedback has greatly improved the paper .",
    "we also thank reviewer 1 for providing the more intuitive definition of a stopping set in a generalized ldpc code .",
    "n. linial , a. wigderson , _ expander graphs and their applications _ , lecture notes of a course given at the hebrew university , 2003 , available at http://www.math.ias.edu/~avi/talks/ n. alon , _ eigenvalues and expanders _ , combinatorica , * 6 * ( 1986 ) , 8396 .",
    "a. lubotzky , r. phillips and p. sarnak , _ ramanujan graphs _ ,",
    "combinatorica , * 8 * ( 1988 ) , 261277 .",
    "n. alon , a. lubotzky and a. wigderson , _ semi - direct product in groups and zig - zag product in graphs : connections and applications ( extended abstract ) _ , in  42nd ieee symposium on foundations of computer science \" ( las vegas , nv , 2001 ) , ieee computer soc . , los alamitos , ca , ( 2001 ) , 630637 .",
    "o. reingold , s. vadhan and a. wigderson , _ entropy waves , the zig - zag product , and new constant - degree expanders and extractors in graphs : connections and applications _ , annals of mathematics , * 155 * ( 2002 ) , 157187 .",
    "j. lafferty , d. rockmore , _ codes and iterative decoding on algebraic expander graphs _ ,  proceedings of isita 2000 , \" honolulu , hawaii , 2000 , available at http://www-2.cs.cmu.edu/afs/cs.cmu.edu/user/lafferty/www/pubs.html                  c. di , d. proietti , t. richardson , e. teletar and r. urbanke , _ finite - length analysis of low - density parity - check codes on the binary erasure channel _ , ieee trans .",
    "theory , * 48 * ( 2002 ) , 15701579",
    ".    g. d. forney , jr . , r. koetter , f. kschischang and a. reznik , _ on the effective weights of pseudocodewords for codes defined on graphs with cycles , _ in  codes , systems and graphical models \" ( eds . b. marcus and j. rosenthal ) , springer - verlag , * 123 * ( 2001 ) , 101112 ."
  ],
  "abstract_text": [
    "<S> four different ways of obtaining low - density parity - check codes from expander graphs are considered . for each case , lower bounds on the minimum stopping set size and the minimum pseudocodeword weight of expander ( ldpc ) codes are derived . </S>",
    "<S> these bounds are compared with the known eigenvalue - based lower bounds on the minimum distance of expander codes . </S>",
    "<S> furthermore , tanner s parity - oriented eigenvalue lower bound on the minimum distance is generalized to yield a new lower bound on the minimum pseudocodeword weight . </S>",
    "<S> these bounds are useful in predicting the performance of ldpc codes under graph - based iterative decoding and linear programming decoding .    </S>",
    "<S> christine a. kelley    department of mathematics    the ohio state university    columbus , oh 43210 , usa    deepak sridhara    seagate technology    1251 waterfront place    pittsburgh , pa 15222 , usa    ( communicated by marcus greferath ) </S>"
  ]
}
{
  "article_text": [
    "the study of subblock - constrained codes has recently gained attention as they are suitable candidates for varied applications such as simultaneous energy and information transfer  @xcite , powerline communications  @xcite , and design of low - cost authentication methods  @xcite . a special class of subblock - constrained codes",
    "are codes where each codeword is partitioned into equal sized subblocks , and every subblock has the same fixed composition .",
    "such codes were called _ constant subblock - composition codes _ ( csccs ) in  @xcite , and were labeled as multiply constant - weight codes ( mcwc ) in  @xcite .    _ subblock energy - constrained codes _ ( seccs ) were proposed in  @xcite for providing real - time energy and information transfer from a powered transmitter to an energy harvesting receiver . for binary alphabet , seccs",
    "are characterized by the property that the weight of every subblock exceeds a given threshold .",
    "the cscc and secc capacities , and computable bounds , were presented in  @xcite for discrete memoryless channels . in this paper , we study bounds on the size and asymptotic rate for binary csccs and seccs with given error correction capability , i.e. , minimum distance of the code .",
    "the input alphabet is denoted @xmath0 which comprises of @xmath1 symbols .",
    "an @xmath2-length , @xmath1-ary _ code _ @xmath3 over @xmath0 is a subset of @xmath4 .",
    "the elements of @xmath3 are called _ codewords _ and @xmath3 is said to have _ distance _",
    "@xmath5 if the _ hamming distance _ between any two distinct codewords is at least @xmath5 . a @xmath1-ary code of length @xmath2 and distance @xmath5 is called an @xmath6-code , and the largest size of an @xmath6-code is denoted by @xmath7 . for binary alphabet ( @xmath8 ) , an @xmath9-code is just called an @xmath10-code , and the largest size for this code is simply denoted @xmath11 .    a _ constant weight code _ ( cwc ) with parameter @xmath12 is a binary code where each codeword has weight exactly @xmath12 .",
    "we denote a cwc with weight parameter @xmath12 , blocklength @xmath2 , and distance @xmath5 by @xmath13-cwc , and denote its maximum possible size by @xmath14 . a _ heavy weight code _ ( hwc )",
    "@xcite with parameter @xmath12 is a binary code where each codeword has weight _ at least _",
    "we denote a hwc with weight parameter @xmath12 , blocklength @xmath2 , and distance @xmath5 by @xmath13-hwc , and denote its maximum possible size by @xmath15 . since an @xmath13-cwc is an @xmath13-hwc , we have that @xmath16 .",
    "a subblock - constrained code is a code where each codeword is divided into subblocks of equal length , and each subblock satisfies a fixed set of constraints . for a subblock - constrained code , we denote the codeword length by @xmath2 , the subblock length by @xmath17 , and and the number of subblocks in a codeword by @xmath18 . for the binary alphabet @xmath19 , a cscc is characterized by the property that each subblock in every codeword has the same _ weight _ , i.e. each subblock has the same number of ones . a binary cscc with codeword length @xmath20 , subblock length @xmath17 , distance @xmath5 , and weight @xmath21 per subblock is called an @xmath22-cscc .",
    "we denote the maximum possible size of @xmath22-cscc by @xmath23 . since an @xmath22-cscc is an @xmath24-cwc ,",
    "we have that @xmath25 .    for providing regular energy content in a codeword for the application of simultaneous energy and information transfer from a powered transmitter to an energy harvesting receiver , the use of csccs was proposed in  @xcite .",
    "when _ on - off keying _ is employed , with bit-1 ( bit-0 ) represented by the presence ( absence ) of a high energy signal , regular energy content in a cscc codeword can be ensured by appropriately choosing the weight @xmath21 per subblock .",
    "a natural extension of binary csccs are binary seccs , which allow the weight of each subblock to exceed @xmath21 , thereby ensuring that the energy content within every subblock duration is sufficient  @xcite . a binary secc with codeword length @xmath20 , subblock length @xmath17 , distance @xmath5 , and weight at least @xmath21 per subblock is called an @xmath22-secc .",
    "we denote the maximum possible size of an @xmath22-secc by @xmath26 .",
    "since an @xmath22-secc is an @xmath24-hwc , we have that @xmath27 .",
    "also , since an @xmath22-cscc is an @xmath22-secc , we have that @xmath28 .",
    "the relation among code sizes is summarized below . for all @xmath18 , and @xmath29",
    ", we have @xmath30{90}{$\\ge$}}}&&{\\mathbin{\\rotatebox[origin = c]{90}{$\\ge$}}}\\\\ h(ml , d , mw_s ) & \\ge & a(ml , d , mw_s ) \\end{array}\\ ] ]    we also analyze bounds on the rate in the asymptotic setting where the number of subblocks @xmath18 tends to infinity , @xmath5 scales linearly with @xmath18 , but @xmath17 and @xmath21 are fixed . in the following , the base for @xmath31 is assumed to be 2 .",
    "formally , for fixed @xmath32 , the asymptotic rates for csccs and seccs with fixed subblock length @xmath17 , subblock weight parameter @xmath21 , number of subblocks in a codeword @xmath33 , and distance @xmath5 scaling as @xmath34 are defined as @xmath35    these rate can be compared with related exponents : @xmath36    the relation between asymptotic rates can be obtained by using the relation among code sizes in , and the above rate definitions . for all @xmath37 and @xmath38 ,",
    "we have @xmath39{90}{$\\ge$ } } } & & \\text{\\scriptsize ( d)}~{\\mathbin{\\rotatebox[origin = c]{90}{$\\ge$}}}\\\\ \\eta(\\delta , w_s / l ) & \\overset{\\text{(a)}}{\\ge } & \\alpha(\\delta , w_s / l ) \\end{array}\\ ] ]    we summarize our notation on code size and asymptotic rates for cwcs , hwcs , csccs and seccs in table [ table : variables ] .    .95|c|l|",
    "& + @xmath17 & subblock length + @xmath18 & number of subblocks in a codeword + @xmath2 & codeword length ( @xmath20 ) + @xmath5 & minimum distance of the code + @xmath40 & relative distance of the code ( @xmath41 ) + @xmath21 & weight per subblock + @xmath12 & weight per codeword ( @xmath42 ) + @xmath43 & fraction of ones in a codeword ( @xmath44 ) + @xmath45 & binary entropy function + @xmath6-code & general @xmath1-ary code + @xmath7 & maximum size of @xmath6-code + @xmath10-code & general _ binary _ code + @xmath11 & maximum size of @xmath10-code + @xmath46 & asymptotic rate of @xmath10-code + @xmath13-cwc & constant weight code ( each codeword has weight @xmath12 ) + @xmath14 & maximum size of @xmath13-cwc + @xmath47 & asymptotic rate of @xmath13-cwc + @xmath48 & lower bound on @xmath47 using gilbert varshamov bound for @xmath13-cwc + @xmath49 & upper bound on @xmath47 using sphere packing bound for @xmath13-cwc + @xmath13-hwc & heavy weight code ( each codeword has weight _ at least _",
    "@xmath12 ) + @xmath15 & maximum size of @xmath13-hwc + @xmath50 & asymptotic rate of @xmath13-hwc + @xmath22-cscc & binary constant subblock - composition code ( each subblock has weight @xmath21 ) + @xmath23 & maximum size of @xmath22-cscc + @xmath51 & space of all cscc words + @xmath52 & asymptotic rate of @xmath22-cscc + @xmath53 & lower bound on @xmath52 using gilbert varshamov bound for @xmath22-cscc + @xmath54 & upper bound on @xmath52 using sphere - packing bound for @xmath22-cscc + @xmath22-secc & binary subblock energy - constrained code ( each subblock has weight _ at least _",
    "@xmath21 ) + @xmath26 & maximum size of @xmath22-seccc + @xmath55 & space of all secc words + @xmath56 & asymptotic rate of @xmath22-secc + @xmath57 & lower bound on @xmath56 using gilbert varshamov bound for @xmath22-secc + @xmath58 & upper bound on @xmath56 using sphere - packing bound for @xmath22-secc + @xmath59 & asymptotic rate gap between cwc and cscc , @xmath60 + @xmath61 & lower bound on the asymptotic rate gap between cwc and cscc + @xmath62 & asymptotic rate gap between hwc and secc ,",
    "@xmath63 + @xmath64 & lower bound on the asymptotic rate gap between hwc and secc + @xmath65 & asymptotic rate gap between secc and cscc , @xmath66 + @xmath67 & lower bound on the asymptotic rate gap between secc and cscc +      among the codes discussed above , although cwcs have been widely studied , the exact characterization of @xmath47 , for @xmath68 , has remained elusive . a good upper bound for @xmath47",
    "was given in @xcite , by using a linear programming bound for the cwc code size .",
    "the class of hwcs was introduced by cohen _",
    "@xcite , motivated by certain asynchronous communication problems .",
    "the asymptotic rates for hwcs was later established by bachoc _",
    "_ @xcite .",
    "[ thm : bachoc ] let @xmath69 . then @xmath70    if view of the above theorem , the inequality ( a ) in is in fact an equality for @xmath71 .",
    "chee _ et al . _",
    "@xcite introduced the class of csccs and provided rudimentary bounds for @xmath23 .",
    "later , constructions of csccs were proposed by various authors @xcite . the asymptotic rate for csccs",
    "was also studied in @xcite .",
    "however , an inconsistent asymptotic rate definition in @xcite led to an erroneous claim regarding the cscc rate ( see ( * ? ? ?",
    "6.1 ) ) . in this paper",
    ", we also provide a correct statement for the cscc rate in the scenario where the subblock length tends to infinity via proposition  [ prop : chee ] in section  [ sec : rates ] .",
    "seccs were proposed in @xcite , owing to their natural application in real - time simultaneous energy and information transfer .",
    "as shown in section  [ sec : secc_codesize ] , the secc space , comprising of words where each subblock has weight exceeding a given threshold , has an interesting property that different balls of same radius may have different sizes .",
    "the lower bound on the code size for such spaces , where balls of same radius may have different sizes , was studied in @xcite , where a _ generalized gilbert - varshamov bound _ was presented .",
    "the _ generalized sphere - packing bound _ , providing an upper bound on the code size in such spaces , has been recently presented in @xcite , using graph - based techniques .",
    "the contributions of this paper are as follows :    1 .   by studying the space of cscc and secc codewords ,",
    "we compute both upper and lower bounds for the optimal cscc code size @xmath23 and the optimal secc code size @xmath26 in section [ sec : bounds ] .",
    "we analyze the limiting behavior of ball sizes for these spaces in high dimensions , to derive both upper and lower bounds on the asymptotic rates for cscc and secc in section [ sec : rates ] .",
    "3 .   for fixed @xmath17 and @xmath21",
    ", we demonstrate the existence of an @xmath72 such that the inequalities ( b ) , ( c ) , and ( d ) in are _ strict _ for all @xmath73 ( refer section [ sec : penalty ] ) .",
    "this result implies the following : ( i ) relative to codeword - based weight constraint for cwcs ( resp .",
    "hwcs ) , the stricter subblock - based weight constraint for csccs ( resp .",
    "seccs ) , lead to a rate penalty .",
    "( ii ) relative to csccs , higher rates are provided by seccs due to greater flexibility in choosing bits within each subblock ( in contrast to theorem  [ thm : bachoc ] ) .",
    "we quantify the rate penalty due to subblock - based constraints in section [ sec : numerical ] , by numerically evaluating the corresponding rate bounds .",
    "we also provide a correction to a result by chee _",
    "@xcite , on the asymptotic cscc rate in the scenario where the subblock length tends to infinity ( see proposition  [ prop : chee ] in section  [ sec : rates ] ) .",
    "we derive novel bounds for @xmath23 and @xmath26 .",
    "while bounds for the former were also discussed in @xcite , those results are insufficient to provide good bounds on the asymptotic rates @xmath52 . among other bounds ,",
    "we derive the gilbert - varshamov ( gv ) bound and the sphere - packing bound for both csccs and seccs in this section , and their respective asymptotic versions in section [ sec : rates ] .      for an @xmath22-cscc ,",
    "it is easy to see from symmetry , via complementing bits in codewords , that we have the relation @xmath74    let @xmath51 denote the space of all binary words comprising of @xmath18 subblocks , each subblock having length @xmath17 , with weight @xmath21 per subblock . for @xmath75 , we define a ball centered at @xmath76 and having radius @xmath77 as @xmath78 the following lemma shows that the size of the cscc ball , @xmath79 , is independent of choice of @xmath75 .",
    "we will see later in sec .",
    "[ sec : secc_codesize ] that this is not true for the space comprising of secc words .",
    "[ lemma : cscc_balls_equal ] if @xmath76 and @xmath80 are two words in @xmath51 , then @xmath81 .    for @xmath82 ,",
    "let @xmath83}$ ] ( resp .",
    "@xmath84}$ ] ) denote the @xmath85th subblock of @xmath76 ( resp .",
    "@xmath80 ) . as @xmath83}$ ] and @xmath84}$ ] have constant weight @xmath21 , there exists a permutation @xmath86 on @xmath17 letters such that @xmath84 } = \\pi_i(\\mathbf{x}_{[i]})$ ] .",
    "now , if @xmath87 denotes the permutation on @xmath88 letter , induced by @xmath89 , defined as @xmath90 } ) \\cdots \\pi_m(\\mathbf{x}_{[m ] } ) ] , \\ ] ] then , @xmath91 .",
    "the proof is complete by observing that @xmath92    in view of the above lemma , the size of cscc ball is independent of the center word .",
    "thus , we have the following gv bound for @xmath23 .",
    "if @xmath93 , then @xmath94 [ prop : cscc_gv ]    using standard gilbert construction in the space @xmath51 , we have the lower bound    @xmath95    where @xmath76 is any word in @xmath51 , and @xmath96 . from lemma  [ lemma : cscc_balls_equal ]",
    "we note that @xmath97 is independent of the choice of @xmath76 .",
    "the proposition then follows if we show that the denominator in   is equal to @xmath98 . towards this , let @xmath83}$ ] be the @xmath85th subblock of @xmath76 .",
    "then the distance of @xmath83}$ ] from any length @xmath17 binary vector of weight @xmath21 is always even , and the number of length @xmath17 binary vectors of weight @xmath21 at a distance @xmath99 from @xmath83}$ ] is @xmath100 when @xmath101 ( and 0 otherwise ) .",
    "now , if @xmath102 , and distance between @xmath85th subblocks of @xmath76 and @xmath103 is @xmath104 , then @xmath105 if and only if @xmath106 .",
    "hence , the size of cscc ball of radius @xmath107 is given by the denominator in  .",
    "the following proposition provides the sphere - packing bound for csccs .",
    "if @xmath93 and @xmath108 , then @xmath109 [ prop : cscc_sp ]    the claim follows from the standard sphere - packing argument that for any @xmath22-cscc , the balls of radius @xmath110 around codewords should be non - intersecting , and the fact that the denominator in is equal to @xmath111 .",
    "let @xmath55 denote the space of all binary words comprising of @xmath18 subblocks , each subblock having length @xmath17 , with weight per subblock _ at least _ @xmath21 . for @xmath112",
    ", we define a ball centered at @xmath113 and having radius @xmath77 as @xmath114 unfortunately , in contrast to csccs , the size of @xmath115 depends on @xmath76 .",
    "take for example , @xmath116 , @xmath117 , @xmath118 and @xmath119 .",
    "we have that @xmath120 , while @xmath121 .",
    "we denote the smallest and the average ball size in the secc space as follows : latexmath:[\\ ] ] where @xmath262 follows using   ( as the constraint @xmath263 is stricter than the constraint @xmath101 ) , and @xmath264 in   is defined as @xmath265 .",
    "note that asymptotically we get the following limits @xmath266 using , , and , we have @xmath267 the theorem is proved by combining proposition  [ prop : cscc_sp ] ,  , and  .",
    "_ remark _ : for @xmath268 , we have @xmath269 , which also follows from @xmath189 and then applying the standard sphere - packing bound for unconstrained binary codes .    _ remark _ : for @xmath270 , simplifies to @xmath271      recall the definitions of @xmath56 and @xmath272 given by and .",
    "we have the following inequality    @xmath273    the gap @xmath274 denotes the rate penalty on hwc due to the additional constraint on sufficient weight within every _",
    "subblock duration_. the asymptotic rates of hwcs were studied in  @xcite where theorem [ thm : bachoc ] was established .",
    "therefore , it follows that for @xmath275 we have @xmath276 in the following , we present the asymptotic gv bound and the sphere - packing bound on @xmath277 .",
    "[ prop : secc_gv_rate ] we have @xmath278 where @xmath279    a simple upper bound on the average secc ball size of radius @xmath107 is given by @xmath280 using proposition  [ prop : secc_gv_codesize ] and , we get @xmath281 the proposition now follows by combining   and .",
    "the above proposition presents a lower bound on @xmath277 .",
    "next , in theorem  [ thm : secc_sp_rate ] we present the sphere - packing upper bound on @xmath277 for relatively small values of @xmath40 .",
    "we will use the following lemma towards proving this theorem .",
    "[ lemma : secc_subblocks_d12 ] let @xmath282 be a binary vector of length @xmath17 whose weight @xmath283 satisfies @xmath284 . then the number of binary vectors with length @xmath17 , weight at least @xmath21 , which are at a distance of either 1 or 2 from @xmath282 is lower bounded by @xmath285 .",
    "let @xmath286 ( resp .",
    "@xmath287 ) be the number of @xmath17 length vectors of weight at least @xmath21 which are at a distance 1 ( resp .",
    "2 ) from @xmath282 .",
    "we consider three different cases :    1 .",
    "@xmath288 :  in this case @xmath289 .",
    "if @xmath290 , then @xmath291 , else @xmath292 .",
    "@xmath293 :  in this case @xmath294 .",
    "if @xmath290 , then @xmath291 , else @xmath292 .",
    "@xmath295 :  in this scenario , @xmath294 and @xmath296 .    for all the above three cases",
    ", it can easily be verified that @xmath297 .",
    "[ thm : secc_sp_rate ] for @xmath298 , we have @xmath299 where @xmath300    the theorem will be proved by using prop .",
    "[ prop : secc_sp_codesize ] and providing a lower bound on @xmath301 where @xmath110 and distance @xmath5 scales as @xmath302 .",
    "we define @xmath303 and note that the constraint @xmath304 implies that @xmath305 . for a given @xmath112 , let @xmath306}$ ] denote the @xmath133-th subblock of @xmath76 , i.e. @xmath307 } \\ , \\mathbf{x}_{[2 ] } \\cdots \\mathbf{x}_{[m]})$ ] .",
    "let @xmath308 be the set of vectors which satisfy the following conditions :    a.   for every @xmath309 , exactly @xmath264 subblocks of @xmath103 differ from corresponding subblocks of @xmath76 .",
    "b.   if @xmath310 } \\neq \\mathbf{x}_{[j]}$ ] , then @xmath311 } , \\mathbf{y}_{[j ] } ) \\in \\{1,2\\}$ ] .    from the above conditions",
    ", it follows that if @xmath309 , then @xmath312 , and hence @xmath313 with @xmath314^{\\tilde{m } } , \\ ] ] where @xmath225 follows from lemma  [ lemma : secc_subblocks_d12 ] . because the above inequality holds for all @xmath112",
    ", we have @xmath315^{\\tilde{m } } .",
    "\\label{eq : secc_minballsizebound}\\ ] ] now , @xmath316 and hence the claim is proved by combining , prop .",
    "[ prop : secc_sp_codesize ] , , and .    for the case",
    "where @xmath183 and @xmath152 , the asymptotic sphere - packing bound for seccs reduces to @xmath317",
    "in this section , we quantify the penalty in rate due to imposition of subblock constraints , relative to the application of corresponding constraints per codeword . here",
    ", we use the notation @xmath318^+$ ] to imply @xmath319 .      the rate penalty due to constant weight per _ subblock _ , relative to the constraint requiring constant weight per _ codeword _ , is quantified by @xmath59 , defined as @xmath320 a lower bound to this rate gap is given by @xmath321^+ , \\label{eq : g_alpha_gamma_def}\\ ] ] where @xmath54 is defined in   and @xmath322 with @xmath323 denoting the asymptotic gv lower bound for cwcs  @xcite .",
    "the sphere - packing upper bound on the asymptotic rate for cwcs is given by @xmath49 , defined as @xmath324    if @xmath183 and @xmath152 , then using   we have the strict inequality @xmath325 for @xmath191 . for relatively large values of the subblock length , @xmath17 , the following theorem shows that rate penalty is strictly positive when @xmath40 is sufficiently small .",
    "[ thm : gap - cwc - cscc - positive ] for even @xmath17 with @xmath326 , we have the strict inequality @xmath327 for @xmath328 , where @xmath329 is the smallest positive root of @xmath330 defined as @xmath331    using , , and , we have @xmath332 when @xmath333 .",
    "we observe from   that @xmath330 is a continuous function of @xmath40 with @xmath334 further , when @xmath335 , we have @xmath336 where @xmath225 and @xmath262 follow from",
    "5.8 ) . now using  , , and the intermediate value theorem  @xcite",
    ", it follows that the equation @xmath337 has a solution in the interval @xmath338 .",
    "the theorem now follows by denoting the smallest positive root of @xmath330 by @xmath329 .",
    "the following proposition addresses the converse question on identifying an interval for @xmath40 when the rate gap between cwcs and csccs is provably zero .",
    "[ prop : cwc_cscc_rate0 ] the rate gap between cwcs and csccs , @xmath59 , is identically zero when @xmath339 .    follows from and .    in  @xcite , the gap between cwc capacity and cscc capacity on noisy binary input channels was upper bounded by the rate penalty term , @xmath340 , defined as @xmath341 where @xmath342 .",
    "further , it was shown in  @xcite that the actual capacity gap is equal to @xmath340 for a noiseless channel .",
    "the following proposition shows that @xmath61 tends to @xmath343 as @xmath40 tends to 0 .",
    "[ prop : cwc_cscc_gap_eq_rlp ] for @xmath344 , we have @xmath345    from   we have @xmath346 , while using   we obtain the limit @xmath347 , and hence the claim follows from definitions   and .    the lower bound on the rate gap between cwcs and csccs , @xmath61 , is tight when @xmath348 .",
    "an upper bound on @xmath59 is given by @xmath349 .",
    "using , , and , we observe that this upper bound on the rate gap also tends to @xmath343 as @xmath40 tends to 0 .",
    "the proof is complete by combining this observation with proposition  [ prop : cwc_cscc_gap_eq_rlp ] .      in seccs ,",
    "the fraction of ones in every subblock is at least @xmath247 , and hence the fraction of ones in the entire codeword is also at least @xmath247 .",
    "relative to the constraint requiring at least @xmath247 fraction of bits to be 1 for all _ codewords _ , the rate penalty due to the constraint requiring minimum weight @xmath21 per _ subblock _ is quantified by @xmath62 , defined as @xmath350 for @xmath275 , using theorem [ thm : bachoc ] , we note that @xmath62 can equivalently be expressed as @xmath351 .",
    "thus , a lower bound for @xmath62 , for @xmath275 , is given by @xmath352^+ , \\label{eq : g_eta_sigma_def}\\ ] ] where @xmath323 and @xmath58 are defined in   and , respectively .",
    "when @xmath353 , we have @xmath354 , and in this case , the corresponding rate gap lower bound is defined as @xmath355^+ .\\label{eq : g_eta_sigma_def2}\\ ] ]    the following theorem shows that rate gap between hwcs and seccs is strictly positive when @xmath40 is sufficiently small .",
    "[ thm : gap - hwc - secc - positive ] for even @xmath17 with @xmath356 , we have the strict inequality @xmath357 for @xmath358 , where @xmath359 is the smallest positive root of @xmath360 defined as @xmath361    using , , and , we have @xmath362 for @xmath333 .",
    "we observe from   that @xmath360 is a continuous function of @xmath40 with @xmath363 as @xmath364 , for @xmath356 we have @xmath365 where @xmath225 follow using  ( * ? ? ?",
    "5.8 ) . now from   and , it follows that the equation @xmath366 has a solution in the interval @xmath367 .",
    "the theorem now follows by denoting the smallest positive root of @xmath360 by @xmath359 .    when @xmath183 and @xmath152 , it can be verified using   that @xmath368 for @xmath369 .",
    "theorem  [ thm : gap - hwc - secc - positive ] considers the case where @xmath370 . using a similar argument",
    ", it can be shown that in a general setting where @xmath344 , the rate gap between hwcs and seccs is strictly positive for sufficiently small @xmath40 .",
    "the following proposition addresses the converse question on identifying an interval for @xmath40 when this gap is provably zero .",
    "[ prop : hwc_secc_rate0 ] for @xmath353 , the rate gap between hwcs and seccs , @xmath62 is identically zero when @xmath371 , while for @xmath275 , this gap is zero when @xmath339 .",
    "the claim for @xmath353 follows from and the asymptotic plotkin bound , while the claim for @xmath275 follows from and .",
    "the lower bound on the rate gap between hwcs and seccs , @xmath64 , is tight when @xmath348 .",
    "for @xmath353 , from we have that @xmath372 now , from and the relation @xmath373 , an upper bound on @xmath62 is given by @xmath374 . for @xmath353 , from   and",
    ", we note that this upper bound tends to the right hand side of as @xmath348 .",
    "this proves the claim for @xmath353 .    for @xmath275 , from we have that @xmath375 for @xmath275 , an upper bound on the rate gap @xmath62 is given by @xmath376 ( using ) , and this upper bound tends to the right hand side of as @xmath348 .",
    "the seccs , relative to csccs , provide the flexibility of allowing different subblocks to have different weights . in this subsection , we show that this flexibility leads to an improvement in asymptotic rate when the relative distance of the code is sufficiently small .",
    "the gap between secc rate and cscc rate is quantified by @xmath65 , defined as @xmath377 a lower bounded to this rate gap is given by @xmath378^+ , \\label{eq : g_sigma_gamma_def}\\ ] ] where @xmath57 and @xmath54 are given by and , respectively .",
    "the following theorem shows that @xmath67 is strictly positive when @xmath40 is small .",
    "[ thm : gap - secc - cscc ] for even @xmath17 with @xmath326 , we have the strict inequality @xmath379 for @xmath380 , where @xmath381 is the smallest positive root of @xmath382 defined as @xmath383    using , , and , we have @xmath384 for @xmath333 .",
    "from we note that @xmath382 is a continuous function of @xmath40 with @xmath385 further , comparing and , we observe that @xmath386 , in particular , for @xmath335 we have @xmath387 where the last inequality follows from . from and it follows that the equation @xmath388 has a solution in the interval @xmath338 .",
    "the proof is complete be denoting the smallest positive root of @xmath382 by @xmath381 .    for the case",
    "when @xmath183 and @xmath152 , we have @xmath389^+ , \\label{eq : g_sigma_gamma_l2}\\ ] ] and @xmath390 is strictly positive for @xmath391 .    from proposition",
    "[ prop : secc_gv_rate ] and theorem  [ thm : secc_sp_rate ] , note that for @xmath392 , we have @xmath393 , and hence it follows from definitions  , , and that @xmath394    although theorem  [ thm : gap - secc - cscc ] only considers the case @xmath370 , a similar argument can be applied to show that the rate gap between seccs and csccs is strictly positive in a general setting where @xmath344 , provided @xmath40 is sufficiently small .",
    "the following converse , providing an interval for @xmath40 which results in zero rate gap , is obtained by using an argument similar to that in proposition  [ prop : hwc_secc_rate0 ] .",
    "[ prop : secc_cscc_rate0 ] for @xmath353 , the rate gap between seccs and csccs , @xmath65 , is identically zero when @xmath371 , while for @xmath275 , this gap is zero when @xmath339 .",
    "the following proposition establishes the tightness of @xmath67 when @xmath40 tends to 0 .",
    "the lower bound on the rate gap between seccs and csccs , @xmath67 , is tight when @xmath348 .    from   and",
    ", we have that @xmath395 an upper bound on @xmath65 is given by @xmath396 . from  , , and , we note that this upper bound tends to the right hand side of   as @xmath348 .",
    "in this section , we provide numerical bounds on rate penalties due to weight constraint per subblock , relative to imposing similar constraint per codeword .     versus subblock length , @xmath17.,scaledwidth=55.0% ]     as a function of subblock weight , @xmath21.,scaledwidth=55.0% ]",
    "is strictly positive.,scaledwidth=55.0% ]    fig .",
    "[ fig : g_cwc_cscc_versus_l ] plots the lower bound on the rate gap between cwcs and csccs , @xmath397 , as a function of the subblock length .",
    "the upper bound on the gap between cwc capacity and cscc capacity on noisy binary input channels for @xmath370 , given by @xmath398 ( see  ) , is also plotted in red . as suggested by proposition  [ prop : cwc_cscc_gap_eq_rlp ]",
    ", the figure shows that @xmath397 tends to @xmath398 as @xmath40 gets close to zero . for a fixed value of @xmath247 , note that @xmath323 is independent of @xmath17 .",
    "thus , for a given @xmath40 , the decrease in @xmath397 with increasing @xmath17 is due to an increase in cscc rate .",
    "this is intuitively expected , because an increase in @xmath17 allows for greater flexibility in the choice of bits within every subblock .",
    "further , from proposition  [ prop : chee ] , it follows that @xmath399 as @xmath400 .",
    "[ fig : g_cwc_cscc_versus_omega ] plots @xmath61 when the subblock length is fixed at @xmath401 , and @xmath21 varies from @xmath402 to @xmath403 .",
    "note that @xmath404 and @xmath405 ( see   and , respectively ) , and thus @xmath406 .",
    "note that figs .",
    "[ fig : g_cwc_cscc_versus_l ] and [ fig : g_cwc_cscc_versus_omega ] illustrate that @xmath61 decreases with @xmath40 .",
    "[ fig : delta_l_tilde ] depicts the region where the gap between cwc rate and cscc rate is provably strictly positive .",
    "note that @xmath329 is the smallest value of @xmath40 for which the lower bound @xmath61 is zero , when @xmath17 is fixed , and @xmath407 ( see theorem  [ thm : gap - cwc - cscc - positive ] ) .",
    "the figure shows that @xmath329 decreases with @xmath17 , and from proposition  [ prop : chee ] it follows that @xmath408 when @xmath400 .",
    "moreover , using proposition  [ prop : cwc_cscc_rate0 ] , it is seen that the actual rate gap @xmath409 is provably zero for @xmath193 .     as a function of subblock length , @xmath17.,scaledwidth=55.0% ]     as a function of @xmath21.,scaledwidth=55.0% ]     is strictly positive.,scaledwidth=55.0% ]    fig .",
    "[ fig : g_hwc_secc_versus_l ] plots @xmath64 , lower bound for the rate gap between hwcs and seccs , as a function of @xmath17 , with @xmath407 . for a given @xmath40 ,",
    "it is seen from the figure that @xmath410 decreases with @xmath17 .",
    "note that for @xmath275 , using proposition  [ prop : bachocchee ] , we have @xmath411 as @xmath412 .",
    "[ fig : g_hwc_secc_versus_omega ] plots @xmath64 versus @xmath21 , for fixed @xmath401 .",
    "the shaded area in fig .  [ fig : delta_l_hat ] depicts the region where the rate gap between hwc and secc is provably strictly positive .",
    "here , @xmath359 is the smallest value of @xmath40 for which the lower bound @xmath64 is zero , when @xmath17 is fixed , and @xmath407 ( see theorem  [ thm : gap - hwc - secc - positive ] ) .",
    "the figure shows that @xmath359 decreases with @xmath17 , and from proposition  [ prop : bachocchee ] it follows that @xmath413 when @xmath400 .",
    "moreover , using proposition  [ prop : hwc_secc_rate0 ] , it is seen that the actual rate gap @xmath414 is provably zero for @xmath193 .     versus subblock length , @xmath17.,scaledwidth=55.0% ]     as a function of @xmath21.,scaledwidth=55.0% ]",
    "is strictly positive.,scaledwidth=55.0% ]    relative to csccs , the seccs allow for greater flexibility in choice of bits within each subblock , by allowing the subblock weight to vary , provided it exceeds a certain threshold .",
    "this flexibility results in higher rate for seccs and fig .",
    "[ fig : g_secc_cscc_versus_l ] plots @xmath415 , lower bound on the rate gap between seccs and csccs .",
    "the figure shows that for a given @xmath40 , the rate gap bound decreases with @xmath17 , and we have @xmath416 as @xmath400 .",
    "the last assertion follows by combining theorem  [ thm : bachoc ] , proposition  [ prop : chee ] , and the fact that @xmath417 . additionally , comparing figs .",
    "[ fig : g_cwc_cscc_versus_l ] , [ fig : g_hwc_secc_versus_l ] , and [ fig : g_secc_cscc_versus_l ] , we observe that the inequality in is satisfied .    fig .",
    "[ fig : g_secc_cscc_versus_omega ] plots @xmath67 versus @xmath21 , for fixed @xmath401 , and @xmath418 . on comparing figs .",
    "[ fig : g_cwc_cscc_versus_omega ] , [ fig : g_hwc_secc_versus_omega ] , and [ fig : g_secc_cscc_versus_omega ] , it is observed that lower bounds on respective rate gaps satisfy .",
    "[ fig : delta_l_grave ] depicts the region where the rate gap between secc and cscc is provably strictly positive .",
    "here , @xmath381 is the smallest value of @xmath40 for which the lower bound @xmath67 is zero , when @xmath17 is fixed , and @xmath407 ( see theorem  [ thm : gap - secc - cscc ] ) .",
    "[ fig : delta_l_grave ] shows that @xmath381 decreases with @xmath17 , and from thm .",
    "[ thm : bachoc ] , prop .",
    "[ prop : chee ] , and prop .  [ prop : bachocchee ] it follows that @xmath419 when @xmath400 .",
    "moreover , using proposition  [ prop : secc_cscc_rate0 ] , we see that the true gap @xmath420 is provably zero for @xmath193 .",
    "we derived upper and lower bounds for the sizes of csccs and seccs . for a fixed subblock length @xmath17 and weight parameter @xmath21",
    ", we demonstrated the existence of some @xmath329 , @xmath359 , and @xmath381 such that the gaps @xmath421 furthermore , we provide estimates on @xmath329 , @xmath359 , and @xmath381 via theorems [ thm : gap - cwc - cscc - positive ] , [ thm : gap - hwc - secc - positive ] , and [ thm : gap - secc - cscc ] .",
    "these gaps then reflect the rate penalties due to imposition of subblock constraints , relative to the application of corresponding constraints per codeword .",
    "the converse problem , on identifying an interval for @xmath40 where the respective rate penalties are provably zero , is addressed via propositions  [ prop : cwc_cscc_rate0 ] , [ prop : hwc_secc_rate0 ] , and [ prop : secc_cscc_rate0 ] .",
    "an interesting but unsolved problem in this regard is to characterize the smallest @xmath40 beyond which the respective rate penalties are zero .",
    "we can get some insight from the numerical computations in @xcite , which indicate that there is a nonzero gap between cscc and cwc capacities and a nonzero gap between cscc and secc capacities .",
    "this suggests that , for a fixed subblock length @xmath17 , the rate penalties are zero if and only if the respective asymptotic rates themselves are zero .",
    "however , this remains an open problem .",
    "a.  tandon , m.  motani , and l.  r. varshney , `` subblock - constrained codes for real - time simultaneous energy and information transfer , '' _ ieee trans .",
    "inf . theory _ , vol .",
    "62 , no .  7 , pp . 42124227 , jul .",
    "2016 .",
    "y.  m. chee , z.  cherif , j .- l .",
    "danger , s.  guilley , h.  m. kiah , j .- l .",
    "kim , p.  sole , and x.  zhang , `` multiply constant - weight codes and the reliability of loop physically unclonable functions , '' _ ieee trans .",
    "inf . theory _ ,",
    "60 , no .  11 ,",
    "pp . 70267034 , nov .",
    "2014 .",
    "r.  mceliece , e.  rodemich , h.  rumsey , and l.  welch , `` new upper bounds on the rate of a code via the delsarte - macwilliams inequalities , '' _ ieee trans .",
    "inf . theory _ ,",
    "23 , no .  2 ,",
    "157166 , mar ."
  ],
  "abstract_text": [
    "<S> the study of subblock - constrained codes has recently gained attention due to their application in diverse fields . </S>",
    "<S> we present bounds on the size and asymptotic rate for two classes of subblock - constrained codes . </S>",
    "<S> the first class is binary _ constant subblock - composition codes _ ( csccs ) , where each codeword is partitioned into equal sized subblocks , and every subblock has the same fixed weight . </S>",
    "<S> the second class is binary _ subblock energy - constrained codes _ ( seccs ) , where the weight of every subblock exceeds a given threshold . </S>",
    "<S> we present novel upper and lower bounds on the code sizes and asymptotic rates for binary csccs and seccs . for a fixed subblock length and small relative distance , </S>",
    "<S> we show that the asymptotic rate for csccs ( resp .  </S>",
    "<S> seccs ) is strictly lower than the corresponding rate for constant weight codes ( cwcs ) ( resp .  </S>",
    "<S> heavy weight codes ( hwcs ) ) . </S>",
    "<S> further , for codes with high weight and low relative distance , we show that the asymptotic rates for csccs is strictly lower than that of seccs , which contrasts that the asymptotic rate for cwcs is equal to that of hwcs . </S>",
    "<S> we also provide a correction to an earlier result by chee et al . </S>",
    "<S> ( 2014 ) on the asymptotic cscc rate . </S>",
    "<S> additionally , we present several numerical examples comparing the rates for csccs and seccs with those for constant weight codes and heavy weight codes . </S>"
  ]
}
{
  "article_text": [
    "given a set of items @xmath1 , the quantile of a value @xmath4 is the fraction of items in the stream such that @xmath5 .",
    "it is convenient to define the rank of @xmath4 , @xmath10 , as the _ number _ of items such that @xmath5 .",
    "an additive error @xmath11 for @xmath10 is an @xmath12 approximation of its rank .",
    "the literature distinguishes between several different definitions of this problem . in this manuscript",
    "we distinguish between the single quantile approximation problem and the all quantiles approximation problem .",
    "the single quantile approximation problem : given @xmath1 in a streaming fashion in arbitrary order , construct a data structure for computing @xmath13 . by the end of the stream , receive a single element @xmath4 and compute @xmath13 such that @xmath14 with probability @xmath3 .",
    "there are variations of this problem in which , the algorithm is not given @xmath4 ( as a query ) but rather a rank @xmath15 .",
    "it should be able to provide an element @xmath16 from the stream such that @xmath17 .",
    "there are also variants that make the value @xmath15 , or @xmath18 known to the algorithm in advance . for example , one could a priori choose to search for an approximate median .",
    "the solution we propose solves all the above variants by solving a harder task called the _ all quantiles _ problem .",
    "the all quantiles approximation problem : given @xmath1 in a streaming fashion in arbitrary order , construct a data structure for computing @xmath13 . by the end of the stream , with probability @xmath3 , for all values of @xmath4",
    "simultaneously it should hold that @xmath19 .    observe that approximating a set of @xmath20 single queries well suffices for solving the all quantiles approximation problem .",
    "therefore , solving the single quantiles approximation problem with failure probability at most @xmath21 constitutes a valid solution for the all quantiles approximation problem simply by invoking the union bound .",
    "two recent surveys @xcite@xcite on this problem give ample motivation and explain the state of the art in terms of algorithms and theory in a very accessible way .",
    "in what follows , we shortly review some of the prior work that is most relevant in the context of this manuscript . for readability ,",
    "space complexities of randomized algorithms apply for a constant success probability unless otherwise stated .",
    "manku , rajagopalan and lindsay @xcite built on the work of munro and paterson @xcite and gave a randomized solution which uses at most @xmath22 space .",
    "a simple deterministic version of their algorithm achieves the same bounds .",
    "this was pointed out , for example , by @xcite .",
    "we refer to their algorithm as mrl . greenwald and khanna @xcite created an intricate deterministic algorithm that requires @xmath23 space .",
    "this is the best known deterministic algorithm for this problem .",
    "we refer to their algorithm as gk .",
    "allowing randomness enables sampling .",
    "a uniform sample of size @xmath24 from the stream suffices to produce an all quantiles sketch .",
    "feeding the sampled elements into a gk sketch yields an @xmath25 solution .",
    "however , to produce such samples , one must know @xmath26 ( at least approximately ) in advance .",
    "this observation was already made by manku et al .",
    "since @xmath26 is not known in advance it is not a trivial task to combine sampling with gk sketches .",
    "recently , felber and ostrovsky @xcite managed to do exactly that .",
    "they achieved space complexity of @xmath27 by using sampling and several gk sketches in conjunction in a non trivial way . to the best of our knowledge ,",
    "this is the best known space complexity result to date .",
    "[ [ mergeability ] ] mergeability : + + + + + + + + + + + + +    an important property of sketches is called mergability @xcite .",
    "informally , this property allows one to sketch different sections of the stream independently and then combine the resulting sketches",
    ". the combined sketch should be as accurate as a single sketch one would have computed had the entire stream been consumed by a single sketcher .",
    "this is formally stated in definition  [ def : merge ] .",
    "[ def : merge ] let @xmath28 denote a sketching algorithm mapping a stream @xmath29 to a summary @xmath30 , and denote by @xmath31 the error associated with the summary @xmath30 on the stream @xmath29 .",
    "let @xmath32 denote two sequences of items , and let @xmath33 $ ] denote the sequence obtained by concatenating @xmath32 .",
    "a sketching algorithm @xmath28 is mergeable if there exists a merge operation @xmath34 such that @xmath35    this property is extremely important in practice since large datasets are often distributed across many machines .",
    "agarwal et al @xcite conjecture that the gk sketch is not mergeable .",
    "they describe a mergeable sketch of space complexity @xmath36 .",
    "it is worth noting that this results predates that of @xcite .",
    "[ [ model ] ] model : + + + + + +    different sketching algorithms perform different kinds of operations on the elements in the stream .",
    "the most restricted model is the comparison model . in this model",
    ", there is a strong order imposed on the elements and the algorithm can only compare two items to decide which is larger .",
    "this is the case , for example , for lexicographic ordering of strings .",
    "all the cited works above operate in this model .",
    "another model assumes the total size of the universe is bounded by @xmath37 .",
    "an @xmath38 space algorithm was suggested by @xcite in that model .",
    "if the items are numbers , for example , one could also compute averages or perform gradient descent like algorithms such as @xcite . in machine learning , a quantile loss function refers to an asymmetric or weighted @xmath39 loss .",
    "predicting the values of the items in the stream with the quantile loss converges to the correct quantiles .",
    "such methods however only apply to randomly shuffled streams .",
    "[ [ lower - bounds ] ] lower bounds : + + + + + + + + + + + + +    for any algorithm , there exists a ( trivial ) space lower bound of @xmath40 . hung and ting @xcite showed that any _ deterministic _ comparison based algorithm for the  single quantile   approximation   problem must store @xmath41 items .",
    "felber and ostrovsky @xcite suggest , as an open problem , that the @xmath42 lower bound could potentially hold for randomized algorithms as well . prior to this work",
    ", it was very reasonable to believe this conjecture is true .",
    "for example , no @xmath43 space algorithm was known even for randomly permuted streams .",
    "solution is easy .",
    "namely , save the first @xmath27 items and , from that point on , only count how many items fall between two consecutive samples .",
    "due to coupon collector , at least one sample will fall in each stretch of @xmath11 items which makes the solution trivially correct . ]",
    "we begin by re - explaining the work of @xcite and the deterministic version of @xcite from a slightly different view point .",
    "the basic building block for these algorithms is a single compactor .",
    "a compactor can store @xmath44 items all with the same weight @xmath45 .",
    "it can also compact its @xmath44 elements into @xmath46 elements of weight @xmath47 as follows .",
    "first , the items are sorted .",
    "then , either the even or the odd elements in the sequence are chosen .",
    "the unchosen items are discarded .",
    "the weight of the chosen elements is doubled ( set to @xmath47 ) .",
    "consider a single query @xmath4 .",
    "its rank estimation before and after the compaction defers by at most @xmath45 regardless of @xmath44 .",
    "this is illustrated in figure  [ compactor ] .",
    "items performing a single compaction operation .",
    "the rank of a query remains unchanged if its rank with in the compactor is even .",
    "if it is odd , its rank is increased or decreased by @xmath45 with equal probability by the compaction operation.,scaledwidth=80.0% ]    this already gives a deterministic algorithm .",
    "assume we use such a compactor .",
    "when it outputs items , we feed them into another compactor and so on .",
    "since each compactor halves the number of items in the sequence , there could be at most @xmath48 compactors chained together .",
    "let @xmath49 denote the height of a compactor where the last one created has height @xmath50 and the first one has height @xmath51 .",
    "let @xmath52 be the weight of items compactor @xmath49 gets .",
    "then , the number of compact operations it performs is at most @xmath53 .",
    "summing up all the errors in the system @xmath54 .",
    "since we have @xmath55 compactors , the space usage is @xmath56 . setting @xmath57 yields error of @xmath11 with space @xmath58 .    one conceptual contribution of agarwal et al .",
    "@xcite is to have each compactor delete the odd or even items with equal probability .",
    "this has the benefit that the expected error is zero .",
    "it also lets one use standard concentration results to bound the maximal error .",
    "this eliminates one @xmath59 factor from the worst case analysis",
    ". however , the dependence on the failure probability adds a factor of @xmath60 . in the all quantiles problem",
    "this translates into an additional @xmath61 factor for constant failure probability .",
    "intuitively agarwal et al .",
    "@xcite also show that when @xmath62 one can sample items from the stream before feeding them to the sketch .",
    "this gives total space usage of @xmath63 for the single quantile problem and @xmath64 for the all quantiles problem .",
    "the first improvement we provide to the algorithms above is to use different compactor capacities in different heights , denoted by @xmath65 .",
    "we show that @xmath65 can , for example , decrease exponentially @xmath66 .",
    "that is , compactors in lower levels in the hierarchy can operate with significantly less capacity . surprisingly enough",
    ", this turns out to not effect the asymptotic statistical behavior of the error at all .",
    "moreover , the space complexity is clearly improved .",
    "the capacity of any functioning compactor must be at least @xmath67 .",
    "this could contribute @xmath68 to the space complexity . to remove this dependence",
    ", we notice that a sequence of @xmath69 compactors with capacity @xmath67 essentially perform sampling . out of every @xmath70 elements they select one at random and output that element with weight @xmath70 .",
    "this is clearly very efficiently computable and does not truly require memory complexity of @xmath71 but rather of @xmath72 .",
    "the total capacity of all compactors whose capacity is more than @xmath67 is bounded by @xmath73 .",
    "this yields a total space complexity of @xmath74 .",
    "setting @xmath75 gives an algorithm with space complexity @xmath76 for the single quantile problem and @xmath77 for the all quantiles problem , which constitutes our first result .",
    "interestingly , our algorithm can be thought of a smooth interpolation between carful compaction of heavy items and efficient sampling for light items .",
    "we believe this idea would be potentially useful in other geometric coreset construction problems .",
    "the next improvement comes from special handling of the top @xmath78 compactors .",
    "intuitively , the number of compaction operations ( and therefore random bits ) in those levels is so small that one could expect the worst case behavior .",
    "for worst case analysis a fixed @xmath65 is preferred to diminishing values of @xmath65 .",
    "therefore , we suggest to set @xmath79 when @xmath80 and @xmath81 otherwise . by analyzing the worst case error of the top @xmath78 compactors separately from the bottom @xmath82 we improve our analysis to @xmath83 .",
    "this sketch is fully mergeable .",
    "interestingly , the worst case analysis of the top @xmath78 compactors is identical to the analysis of the mrl sketch above .",
    "this last observation leads us to our third and final improvement .",
    "if one replaces the top @xmath78 compactors with a gk sketch , the space complexity can be shown to reduce to @xmath84 . however",
    ", this prevents the sketch from being mergeable because the gk sketch is not known to have this property .    another way to view",
    "this algorithm is as a concatenation of three sketches .",
    "the first , receiving the stream of elements is a sampler that simulates all the compactors of capacity @xmath67 .",
    "its output is fed into a sketch composed of a sequence of compactors of increasing sizes , as described above .",
    "we refer to such a sketch as a _ kll _ sketch .",
    "this sketch outputs @xmath85 items that are fed into an instance of gk .",
    "this idea is illustrated in figure  [ three ] .    .",
    "the second from the top is explained in section  [ reducing ] .",
    "the two bottom figures correspond to our main contributions and are explained in sections  [ reducing1 ] and  [ reducing2 ] respectively.,title=\"fig:\",scaledwidth=80.0% ] + . the second from the top",
    "is explained in section  [ reducing ] .",
    "the two bottom figures correspond to our main contributions and are explained in sections  [ reducing1 ] and  [ reducing2 ] respectively.,title=\"fig:\",scaledwidth=80.0% ]    .the table describes the space complexity of several streaming quantiles algorithms in big-@xmath86 notation .",
    "the randomized algorithms are required to succeed with constant probability .",
    "they all work in the comparison model and for arbitrarily ordered streams .",
    "the non - mergeability of some of these algorithms is due to the fact that they use gk , which is not known to be mergeable , as a subroutine . [",
    "cols=\"<,^,^,^,^,^\",options=\"header \" , ]",
    "as mentioned above , our sketching algorithm ( kll ) includes a hierarchy of compactors with varying capacities .",
    "consider a run of the algorithm that terminates with @xmath55 different compactors .",
    "the compactors are indexed by their hight @xmath87 .",
    "the weight of items at hight @xmath49 is @xmath88 .",
    "denote by @xmath65 the smallest number of items that the compactor at height @xmath49 contains during a compact operation",
    ". for brevity , denote @xmath89 . for reasons that will become clear",
    "later assume that @xmath90 for @xmath91 .",
    "since the top compactor was created , we know that the second compactor from the top compacted its elements at least once . therefore @xmath92 which gives @xmath93 using the above we can bound the number of compact operations @xmath94 at height @xmath49 .",
    "every compact procedure call is performed on at least @xmath65 items and the items have a weight of @xmath52 .",
    "therefore , @xmath95    to analyze the total error produced by the sketch , we first consider the error generated in each individual level .",
    "define by @xmath96 the rank of @xmath4 among the following weighted set of items .",
    "the items yielded by the compactor at height @xmath49 and all the items stored in the compactors of heights @xmath97 at end of the stream . for convenience @xmath98 is the exact rank of @xmath4 in the input stream .",
    "define @xmath99 to be the total change in the approximated rank of @xmath4 due to level @xmath49 .",
    "note that each compaction operation in level @xmath49 either leaves the rank of @xmath4 unchanged or adds @xmath100 or subtracts @xmath100 with equal probability . to be more explicit ,",
    "if @xmath4 has an even rank among the item inside the compactor , the total mass to the left of it ( its rank ) is unchanged by the compaction operation .",
    "if its rank inside the compactor is odd however and the odd items are chosen , this mass increases by @xmath100 .",
    "if its rank inside the compactor is odd and the even items are chosen , its mass decreases by @xmath100 .",
    "therefore , @xmath101 where @xmath102 = 0 $ ] and @xmath103 .",
    "the final discrepancy between the real rank of @xmath4 and its approximation @xmath104 is @xmath105    [ hoeffding ] [ lem : hoeffding ] let @xmath106 be independent random variables , each with an expected value of zero , taking values in the range @xmath107 $ ] .",
    "then for any @xmath108 we have @xmath109 \\le 2\\exp\\left ( -\\frac{t^2}{2 \\sum_{i=1}^m w_i^2 } \\right)\\ ] ] with @xmath110 being the natural exponent function .",
    "we now apply hoeffding s inequality to bound the probability that the bottom @xmath111 compactors contribute more than @xmath11 to the total error .",
    "the reason for considering only the bottom levels and not all the levels will become apparent in section  [ reducing ] .",
    "@xmath112 =   \\pr\\left [ \\sum_{h=1}^{h ' } \\sum_{i=1}^{m_h } w_h x_{i , h } >   { \\varepsilon}n \\right ] \\le 2\\exp\\left ( -\\frac{{\\varepsilon}^2 n^2}{2 \\sum_{h=1}^{h ' } \\sum_{i=1}^{m_h } w^2_h } \\right)\\ ] ] a straight forward computation shows that @xmath113    substituting @xmath114 and recalling that @xmath115 we get that @xmath116    substituting equation  [ sumw ] into equation  [ epsn ] and setting @xmath117 we get the following convenient form @xmath118 \\le 2 \\exp \\left ( -c{\\varepsilon}^2 k^2 2^{2(h - h ' ) } \\right)\\ ] ]    [ kll0 ] there exists a streaming algorithm that computes an @xmath12 approximation for the rank of a single item with probability @xmath3 whose space complexity is @xmath119 .",
    "this algorithm also produces mergeable summaries .",
    "let @xmath120 .",
    "note that @xmath65 changes throughout the run off the algorithm .",
    "nevertheless , @xmath55 can only increase and so @xmath65 is monotonically decreasing with the length of the stream .",
    "this matches the requirement that @xmath90 where @xmath55 is the final number of compactors .",
    "notice that @xmath65 is at least @xmath67 .    setting @xmath121 in equation  [ nice1 ] and requiring failure probability at most @xmath8",
    "we conclude that it suffices to set @xmath122 .",
    "the space complexity of the algorithm is @xmath123 .",
    "@xmath124 setting @xmath125 suffices to union bound over the failure probabilities of @xmath20 different quantiles .",
    "this provides a mergeable sketching algorithm for the all quantiles problem of space @xmath126 .",
    "the kll sketch provides a _",
    "mergeable summary_. in a merge operation , same height compactors are concatenated together . then",
    ", each level that contains more than @xmath65 elements is compacted .",
    "the value of @xmath65 is based on the new maximal height @xmath55 which is derived from the combined lengths of the two streams . in either of the two merged sketches , each compaction at level @xmath49 involved at least @xmath65 items which means the proof above still holds .",
    "note that this result already improves on the best known prior art in the parameter setting where @xmath127 .",
    "[ kll0 ] there exists a streaming algorithm that computes an @xmath12 approximation for the rank of a single item with probability @xmath3 whose space complexity is @xmath128 .",
    "the kll sketch maintains a total of @xmath129 sketches .",
    "note , however , that only @xmath130 compactors have capacity greater than @xmath67 .",
    "more accurately the bottom @xmath131 all have capacity exactly @xmath67 .",
    "each of those receives two items at a time , performs a random match between them , and sends the winner of the match to the compactor of the next level .",
    "hence , the compactor of level @xmath69 simply selects one item uniformly at random from every @xmath70 elements in the stream and passes that item with weight @xmath70 to the compactor at hight @xmath132 .",
    "this is easily simulated using @xmath72 space which replaces the bottom @xmath69 compactors and reduces the space complexity of the algorithm .",
    "there is , however , a drawback in replacing the bottom @xmath69 compactors with a simple sampler .",
    "when merging two sketches , it is not clear how to merge the samplers in a correct way . the next section explains how to do exactly that .",
    "in the new sketch we have , in addition to the compactors , a new object we call a sampler .",
    "the sampler supports an @xmath133 method that introduces an item of weight @xmath45 to the sketch . when observing items in a stream the weight is always set to @xmath134 .",
    "however , when merging two sketches we require supporting an update of arbitrary weights . at any time the sampler has an associated height @xmath49 .",
    "it outputs items of weight @xmath135 as inputs to the compactor of level @xmath136 .",
    "this associated height will increase over time to eventually being roughly @xmath137 .",
    "apart for sampler of height @xmath49 , the sketch maintains compactors at heights greater than @xmath49 .",
    "the sampler keeps a single item in storage along with a weight of at most @xmath138 .",
    "when merging two sketches , the sketch with the sampler of smaller height will feed its item with its appropriate weight to the sampler of the other sketch . also , all compactors with height @xmath139 in the ` smaller ' sketch will feed the items in their buffers to the sampler of the ` larger sketch ' .",
    "the @xmath133 operation is performed as follows .",
    "denote by @xmath140 the weight of the internal item stored in the sampler and by @xmath45 the weight of the newly introduced item . if @xmath141 , the sampler replaces its stored item with the new one with probability @xmath142 as in reservoir sampling .",
    "if @xmath143 the sampler outputs the stored item and sets the internal weight @xmath45 to @xmath144 . if however @xmath145 ( notice this can only happen if @xmath146 ) the sampler discards the heavier item , and keeps the lighter item with a weight of @xmath147 . with probability",
    "@xmath148 it also outputs the heavier item with weight @xmath135 .",
    "it is easy to verify that the above described sketching scheme corresponds to the following offline operations .",
    "the sampler outputs items by performing the action _ sample _ ; it takes as input a sequence of items @xmath149 items such that @xmath150.with probability @xmath151 it outputs one of the observed items chosen at random .",
    "with probability @xmath152 it outputs nothing . before analyzing the error associated with a _ sample _",
    "operation we mention that , if no merges are performed , it suffices to restrict the value of @xmath149 to be exactly @xmath135 .",
    "however , in order to account for merges we must let @xmath149 obtain values in the range @xmath153 $ ] .",
    "let @xmath154 be the rank of @xmath4 after sample operation @xmath155 of the sampler of height @xmath49 , where the rank is computed based on the stream elements that did not undergo a sample operation , and the weighted items outputted by the sample operations @xmath134 through @xmath155 .",
    ". then @xmath157 = 0 $ ] and @xmath158 .",
    "let @xmath15 be the exact rank of @xmath4 among the input items before the sampling operation .",
    "denote by @xmath149 the sum of weights of the input items .",
    "after the sampling , those input items are replaced with a single element .",
    "the rank of @xmath4 after the sampling is @xmath135 with probability @xmath159 and @xmath144 otherwise .",
    "the first term is the probability of outputting anything .",
    "the second is of selecting an element smaller than @xmath4 .",
    "therefore , the expected value of the rank of @xmath4 after the sample operation is @xmath160 , hence the expected value of the difference mentioned in the claim is @xmath144 . clearly , the maximal value of this difference is bounded by @xmath135 .",
    "let @xmath94 be total number of times a _ sample _ operation can be performed at height @xmath49 .",
    "since the sampler at that height takes items with a total minimum weight of @xmath161 and there are a total of @xmath26 items ( with overall weight @xmath26 ) @xmath162 it follows that the expression of the error accounted for samplers of heights up to . ] @xmath69 can be expressed as @xmath163 = \\sum_{h=1}^{h '' } \\sum_{i=1}^{m_h } 2^{h } y_{i , h}\\ ] ] with @xmath164 being independent , @xmath165=0 $ ] and @xmath166 .",
    "we compute the sum of weights appearing in hoeffding s inequality ( lemma  [ lem : hoeffding ] ) in order to apply it .",
    "@xmath167 hence , @xmath168",
    "\\leq 2\\exp\\left(- c { \\varepsilon}^2 k 2^{h - h''}/32 \\right ) \\ . \\ ] ]    the following is immediate from equations  [ nice1 ] and  [ eq : nice_sampler ] .",
    "[ thm : space_saved ] assume we apply a kll sketch that uses @xmath55 levels of compactors , with capacity @xmath169 . also , assume that an arbitrary subset of the stream is fed into samplers of heights @xmath134 through @xmath69 , while the output of these samplers is fed to appropriate compactors .",
    "then for any @xmath170 it holds that @xmath171 < 2\\exp\\left(- c { \\varepsilon}^2 k 2^{h - h''}/32 \\right ) + 2\\exp \\left ( -c{\\varepsilon}^2 k^2 2^{2(h - h ' ) } \\right)\\ ] ] here , @xmath172 denotes the error of the stream outputted by the compactors of level @xmath173 , and @xmath117 .    by taking @xmath121 , @xmath174 , and",
    "@xmath175 we obtain the following corollary .",
    "[ kll1 ] there exists a streaming algorithm that computes an @xmath12 approximation for the rank of a single item with probability @xmath3 whose space complexity is @xmath76 .",
    "this algorithm also produced mergeable summaries .",
    "in this section we take full advantage of theorem  [ thm : space_saved ] to obtain a streaming algorithm with asymptotically better space complexity . notice that the lion share of the contribution to the error is due to the top compactors . for those ,",
    "however , hoeffding s bound is not tight",
    ". let @xmath176 be a small number of top layers . for the bottom @xmath177 layers we use theorem  [ thm : space_saved ] , applied on @xmath178 and corresponding @xmath69 , to bound their error . for the top @xmath179",
    "we simply use a deterministic bound .",
    "[ kll2 ] there exists a streaming algorithm that computes an @xmath12 approximation for the rank of a single item with probability @xmath3 whose space complexity is @xmath180 .",
    "this algorithm also produces mergeable summaries .    using theorem  [ thm : space_saved ] we see that the bottom compactors of height at most @xmath178 and the sampler , when set to be of height at most @xmath181 , contribute at most @xmath11 to the error with probability @xmath3 at long as @xmath182 for sufficiently small constant @xmath183 . for the top @xmath179 compactors , we set their capacities to @xmath79 . that is",
    ", we do not let their capacity drop exponentially .",
    "those levels contribute to the error at most @xmath184 . requiring that this contribution is at most @xmath11 as well we obtain the relation @xmath185 . setting @xmath186 and @xmath187 satisfies both conditions .",
    "the space complexity of this algorithm is dominated by maintaining the top @xmath179 levels which is @xmath188 .",
    "interestingly , the analysis of the top @xmath179 levels is identical to the equal capacity compactors used in the mrl sketch . in the next section",
    "we show that one could replace the top @xmath179 levels with a different algorithm and reduce the dependence on @xmath8 even further .",
    "the most space efficient version of our algorithm , with respect to the failure probability , operates as follows . for",
    "@xmath8 being the target error probability we set @xmath189 as in the section above but set @xmath190 . at any time point",
    "we keep 2 different copies of the gk sketch , tuned for a relative error of @xmath12 .",
    "they are correspondingly associated with the compactors of heights @xmath191 which are the two largest height values that are multiples of @xmath179 .",
    "the gk sketch associated with height @xmath49 receives as input the outputs of the compactor of layer @xmath192 . for @xmath193 the gk sketch associated with it receives as input the stream elements .",
    "when a new gk sketch is built due to a new compactor being formed the bottom one is discarded .",
    "[ kll3 ] there exists a streaming algorithm that computes an @xmath12 approximation for the rank of a single item with probability @xmath3 whose space complexity is @xmath84 .",
    "notice that the height of @xmath194 is at least @xmath195 .",
    "it follows that the total number of items that is ever fed into a single gk sketch at most @xmath196 . applying theorem  [ thm : space_saved ] again , on @xmath197 , and @xmath181 , the error w.r.t .  to the output of the compactor feeding elements into the gk sketch",
    "matching @xmath194 is at most @xmath198 , with @xmath199 .",
    "therefore , the sum of errors is still @xmath198 .",
    "the memory required by the gk sketch with respect to its input is at most @xmath200 , which dominates the memory of our sketch with @xmath199 .",
    "the claim follows .",
    "we note that the @xmath201 sketch is not known to be fully mergeable and so that property of the sketch is lost by this construction .",
    "that being said , we point out that the @xmath201 sketch is _ one - way mergeable_. one - way mergeability is a weaker form of mergeability that informally states that the following setting can work : the data is partitioned among several machine , each creates a summary of its own data , and a single process merges all of the summaries into a single one .",
    "for example , stated in terms of definition  [ def : merge ] , when the error @xmath31 is linear in the size of the sketch @xmath29 , i.e. , @xmath202 , a merge operation resulting in an error of @xmath203 rather than @xmath204 is one - way mergeable , while it is not ( fully ) mergeable .",
    "it was pointed out by  @xcite that any sketch for the all quantiles approximation problem is one - way mergeable .",
    "in @xcite a lower bound is given for deterministic algorithms .",
    "a more precise statement of their result , implicitly shown in the proof of their theorem 2 , is as follows    [ implicit in @xcite , theorem 2 ] [ lem : lb_specific ] let @xmath205 be deterministic comparison based algorithm solving single quantile @xmath12 approximate for all streams of length at most @xmath206 for some sufficiently large universal constant @xmath207",
    ". then @xmath205 must store at least @xmath208 elements from the stream for some sufficiently small constant @xmath209 .",
    "below we obtain a lower bound matching our result completely for the case of single quantile problem and almost completely for the case of @xmath12 approximation of all quantiles .",
    "let @xmath210 be a randomized comparison based algorithm solving the @xmath12 approximate single quantile problem with probability at least @xmath3",
    ". then @xmath210 must store at least @xmath211 elements from the stream .",
    "assume by contradiction that there exists a randomized algorithm @xmath210 that succeeds in computing a single quantile approximation up to error @xmath12 with probability @xmath3 while storing @xmath212 elements from the stream .",
    "let @xmath26 be the length of the stream and @xmath213 .",
    "with probability @xmath214 the randomized algorithm succeeds simultaneously for all @xmath215 possible inputs .",
    "let @xmath15 denote a sequence of random bits used by @xmath210 in one of these instances .",
    "it is now possible to construct a deterministic algorithm @xmath216 which is identical to @xmath217 but with @xmath15 hardcoded into it .",
    "note that @xmath216 deterministically succeeds for streams of length @xmath26 .",
    "let @xmath218 for the same @xmath207 as in lemma  [ lem : lb_specific ] .",
    "we obtain that @xmath216 succeeds on all streams of length @xmath206 while storing @xmath219 elements from the stream .",
    "this contradicts lemma  [ lem : lb_specific ] above .",
    "the lower bound above perfectly matched the single quantile approximation result we achieve .",
    "for the all quantiles problem , using the union bound over a set of @xmath20 quantiles shows that @xmath220 elements suffice .",
    "this leaves a potential gap of @xmath221 for that problem .",
    "the authors want to thank sanjeev khanna , rafail ostrovsky , jeff phillips , graham cormode , andrew mcgregor and piotr indyk for very helpful discussions and pointers .",
    "lu  wang , ge  luo , ke  yi , and graham cormode .",
    "quantiles over data streams : an experimental study . in _ proceedings of the 2013 acm",
    "sigmod international conference on management of data _ , sigmod 13 , pages 737748 , new york , ny , usa , 2013 .",
    "michael  b. greenwald and sanjeev khanna .",
    "quantiles and equidepth histograms over streams . in j.",
    "gehrke m.  garofalakis and r.  rastogi , editors , _ in data stream management : processing high - speed data streams_. springer , 2016 .",
    "michael greenwald and sanjeev khanna .",
    "space - efficient online computation of quantile summaries . in _ proceedings of the 2001 acm",
    "sigmod international conference on management of data _ , sigmod 01 , pages 5866 , new york , ny , usa , 2001 .",
    "david felber and rafail ostrovsky . a randomized online quantile summary in @xmath222 words . in _",
    "approximation , randomization , and combinatorial optimization .",
    "algorithms and techniques , approx / random 2015 , august 24 - 26 , 2015 , princeton , nj , usa _ , pages 775785 , 2015 .",
    "pankaj  k. agarwal , graham cormode , zengfeng huang , jeff phillips , zhewei wei , and ke  yi .",
    "mergeable summaries . in",
    "_ proceedings of the 31st symposium on principles of database systems _ , pods 12 , pages 2334 , new york , ny , usa , 2012 .",
    "nisheeth shrivastava , chiranjeeb buragohain , divyakant agrawal , and subhash suri .",
    "medians and beyond : new aggregation techniques for sensor networks . in _ proceedings of the 2nd international conference on embedded networked sensor systems",
    "_ , sensys 04 , pages 239249 , new york , ny , usa , 2004 ."
  ],
  "abstract_text": [
    "<S> this paper resolves one of the longest standing basic problems in the streaming computational model . </S>",
    "<S> namely , optimal construction of quantile sketches . </S>",
    "<S> an @xmath0 approximate quantile sketch receives a stream of items @xmath1 and allows one to approximate the rank of any query up to additive error @xmath2 with probability at least @xmath3 . </S>",
    "<S> the rank of a query @xmath4 is the number of stream items such that @xmath5 . </S>",
    "<S> the minimal sketch size required for this task is trivially at least @xmath6 . </S>",
    "<S> felber and ostrovsky obtain a @xmath7 space sketch for a fixed @xmath8 . to date </S>",
    "<S> , no better upper or lower bounds were known even for randomly permuted streams or for approximating a specific quantile , e.g. ,  the median . </S>",
    "<S> this paper obtains an @xmath9 space sketch and a matching lower bound . </S>",
    "<S> this resolves the open problem and proves a qualitative gap between randomized and deterministic quantile sketching . </S>",
    "<S> one of our contributions is a novel representation and modification of the widely used merge - and - reduce construction . </S>",
    "<S> this subtle modification allows for an analysis which is both tight and extremely simple . </S>",
    "<S> similar techniques should be useful for improving other sketching objectives and geometric coreset constructions . </S>"
  ]
}
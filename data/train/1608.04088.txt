{
  "article_text": [
    "_ hfs _  ( * * h**yper**f**ine * * s**tructure ) @xcite is a tool to fit the hyperfine structure of spectral lines , with the possibility of fitting simultaneously multiple velocity components .",
    "the _ hfs_nh3 _",
    "procedures included in _ hfs _  fit simultaneously the hyperfine quadrupole and magnetic structure of the nh@xmath0  @xmath1 and @xmath2 inversion transitions .",
    "the assumptions made by _ hfs",
    "_  are that the beam filling factor @xmath6 , the excitation temperature @xmath7 , the hyperfine lines linewidth @xmath8 , and the central velocity @xmath9 are the same for all the hyperfine lines .    for _ hfs_nh3 _ these assumptions hold for the hyperfine lines of both nh@xmath0inversion transitions , @xmath10 and @xmath2 .",
    "in addition , the results of the fit are used by _ hfs_nh3 _  to derive physical parameters including the excitation temperature , nh@xmath0  column density , rotational and kinetic temperature , with the assumption that the emitting region is homogeneous along the line of sight .",
    "_ hfs _  is written in fortran 77 and 90/95 ( mainly for the dynamical storage of arrays ) .",
    "the graphic interface uses the pgplot graphics subroutine library , and some procedures have a multiprocessor version running under open mpi .",
    "the interactive procedures are menu driven , allowing to select options with the keyboard , and for some actions , with the mouse cursor and buttons .",
    "one of the advantages of _ hfs _  when compared with other packages performing hyperfine fitting , like for instance , the widely used class of gildas is that it is well documented , easy to install , and with a simple interface .",
    "_ hfs _  can fit , in a single run , multiple velocity components to the spectra of a fits data cube , and obtain the maps of the parameters fitted and derived from the fit , in a short computing time taking advantage of the multiple processors of current computers .    a preliminary version of _ hfs _  was briefly described and used for fitting nh@xmath0@xmath10 and @xmath2 spectra in @xcite .",
    "the structure of the paper is as follows : the fit parameters used by _ hfs _",
    "are described in  [ sfitparam ] , the fitting strategy in  [ sfitting ] , the calculation of the synthetic spectrum in  [ ssynt ] , the line parameters derived from the fit parameters in  [ sderived ] , the nh@xmath0  physical parameters derived by _ hfs_nh3 _  in  [ sphyspar ] , the error estimation for the fit parameters in  [ sconf ] and for the derived parameters in  [ snum ] .",
    "a comparison with the results obtained with class and the @xcite routine is presented in  [ scomp ] .",
    "the different procedures that compose _ hfs _  are described in  [ sproc ] .",
    "finally , in several appendices we describe the requisites and installation instructions ( appendices [ ainstall ] to [ amp ] ) , and examples of use of _ hfs _ , and of input and output files ( appendices [ afitrun ] to [ aoutput ] ) .",
    "the general _ hfs _  procedures fit simultaneously , for every velocity component of a transition with hyperfine structure , four independent parameters ,    * @xmath8 , hyperfine lines linewidth , assumed to be the same for all the hyperfine lines , * @xmath9 , main line central lsr velocity , * @xmath11 , main line peak intensity ( for hyperfine lines wider than the hyperfine separation and the channel width ) , where @xmath12 is the amplitude ( see  [ sderived ] ) , * @xmath13 , where @xmath14 is the optical depth of the main line .",
    "the _ hfs_nh3 _",
    "procedures included in _ hfs _  fit simultaneously the hyperfine structure of a pair of spectra of the nh@xmath0  inversion transitions @xmath1 and @xmath2 ( see table [ thyp ] ) .",
    "differences in central velocity of the order of a tenth of km  s@xmath15 are usually found between the @xmath10 and @xmath2 emissions ( see for instance * ? ? ?",
    "thus , a different @xmath16 is fitted for the @xmath10 and the @xmath2 spectra , resulting in two additional parameters for the @xmath2 transition , fitted simultaneously with the four parameters for the @xmath10 transition , @xmath8 , @xmath17 , @xmath18 , @xmath19 , already described ,    * @xmath20 , central lsr velocity of the @xmath2 transition , * @xmath21 , peak intensity of the @xmath2 main line ( for hyperfine lines wider than the hyperfine separation and the channel width ) .    for each set of fit parameters , the optical depth of the @xmath2 main line",
    "is obtained from the relation @xmath22",
    ".[thyp ] relative velocity @xmath23 , and optical depth @xmath24 with respect to that of the main line , @xmath14 , of the hyperfine lines of the nh@xmath0 @xmath1 and @xmath2 inversion transitions @xcite .",
    "( os : outer satellite , is : inner satellite , m : main ) [ cols=\"<,>,^,^,>,^ \" , ]     assuming that the model fits well the observations , i.e.@xmath25 , the condition @xmath26 can be written as @xmath27 this expression is useful since it can be given in terms of the weighted rms fit residual , @xmath28 , @xmath29 ^ 2 } { \\sum_{i=1}^n 1/\\sigma_i^2}= \\frac{\\chi^2}{\\sum_{i=1}^n 1/\\sigma_i^2},\\ ] ] for which we obtain that the confidence region is given by the parameter values that increase the rms fit residual to @xmath30 this last expression can be used even when the errors of the observations are unknown .",
    "let us assume that around its minimum value , the residual @xmath31 can be approximated by a quadratic function , @xmath32 where @xmath33 are the increment of the parameter values from their best - fit values .",
    "the confidence region of the @xmath34-dimensional parameter space will be the region inside the surface @xmath35 which is the general equation of a @xmath34-dimensional quadric @xcite .",
    "this equation depends on a total of @xmath36 coefficients : @xmath37 symmetric @xmath38 coefficients ( @xmath39 ) , and @xmath34 coefficients @xmath40 .    in array form",
    ", the quadric equation can be expressed as @xmath41 with @xmath42 , or , with the obvious definitions for arrays @xmath43 , @xmath44 , and @xmath45 , @xmath46    in order to estimate the uncertainties of the fit parameters , @xmath47 , we have to calculate the projections of the quadric onto each axis @xmath48 .",
    "if the fit residual is well behaved , we may expect that the quadric is an ellipsoid , i.e.  its projections onto the plane defined by any pair of parameters is an ellipse , and the ellipsoid has finite projections onto any axis .",
    "the projections of the ellipsoid onto each coordinate axis can be found as the intersections of the hyperplane perpendicular to the axis , tangent to the ellipsoid .",
    "the equation of the tangent hyperplane at a point @xmath49 of the ellipsoid is given by @xcite @xmath50 or @xmath51 the equation of an hyperplane perpendicular to the @xmath48 axis is @xmath52 constant , so that the equation of the tangent hyperplane is @xmath53 x_k+   \\sum_{i= 1}^m b_i \\",
    ", x^0_i + c = 0,\\ ] ] and the coefficients of @xmath54 for @xmath55 have to be zero , @xmath56 eqs .  [ eqcoef ] form a system of @xmath57 linear equations with @xmath34 unknowns , the coordinates of the tangent point .",
    "we can consider that @xmath58 ( @xmath55 ) are the @xmath57 unknowns of the system , which can be derived as a function of @xmath59 .",
    "the system of equations can be written with arrays of size @xmath34 , @xmath60 where @xmath61 is the array @xmath43 with zeros in the @xmath48 row and column , @xmath62 , and 1 in the diagonal term , @xmath63 , and @xmath64 and @xmath65 have @xmath66 and 0 respectively in the @xmath48 row ,",
    "@xmath67 from the system we can derive the solution giving @xmath58 in terms of @xmath59 , @xmath68 which can be expressed as @xmath69 where @xmath70 and @xmath71 .",
    "the tangent point must fulfill the tangent hyperplane equation , eq.[eqtangent ] . by substitution of eq .",
    "[ eqsystem ] in the tangent hyperplane equation , and setting @xmath72 , we get a second degree equation in @xmath59 , @xmath73 \\left(x^0_k\\right)^2 & + & \\left[\\sum_{i= 1}^m\\left(a_{ki } \\ ,",
    "e_{ik } + b_i \\,d _ { ik}\\right ) + b_k\\right ]    x^0_k + \\nonumber\\\\ & + & \\left[\\sum_{i= 1}^m b_i \\ , e_{ik } + c\\right ] = 0 .",
    "\\ ] ] the two solutions of the equation provide the two @xmath48-coordinates of the projections of the ellipsoid onto the @xmath48 axis .      since we are assuming that we know that the minimum residual @xmath31 is well determined , the quadratic function of eq .  [ eqquadric ] must have a minimum at the origin , and the linear terms in the variables vanish because the partial derivatives at the origin must be zero .",
    "this means that we can assume that the quadric is centered , and its equation becomes @xmath74 in this case , the equation of the tangent plane is simpler , since @xmath75 , @xmath76 , and @xmath77 .",
    "the second degree equation ( eq .  [ eq2nd ] ) becomes @xmath78 \\left(x^0_k\\right)^2 + c = 0,\\ ] ] and the projections are symmetric , @xmath79 .",
    "the centered ellipsoid depends on @xmath37 symmetric @xmath38 coefficients .",
    "let us examine a sufficient number of constraints to derive these coefficients .",
    "[ [ diagonal - coefficients - a_ii . ] ] diagonal coefficients @xmath80 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    for each parameter @xmath81 we can obtain constraints from the values of the residual @xmath31 increment for different increments @xmath82 of the parameter @xmath83 , while keeping the rest of parameters constant , @xmath84 for each value of the increments of the parameter and the residual @xmath31 increment , @xmath85 , @xmath86 , we have a constraint on @xmath80 , @xmath87 although a single value is enough to determine @xmath80 , at least two are recommended , above and below the best - fit value , i.e.  with @xmath88 and @xmath89 . in general ,",
    "the best approximation for @xmath80 ( so that the sum of the squares of @xmath90 $ ] is minimum ) is given by @xmath91 where the sums are for all increments evaluated .",
    "note that , provided that the @xmath86 are positive , the diagonal term @xmath80 will always be positive . for",
    "a good characterization of the behavior of @xmath31 , at least two values of @xmath86 should be close to @xmath92 .",
    "the intersections of the ellipsoid with the coordinate axis @xmath81 are @xmath93 . for the case of statistically independent parameters",
    ", these intersections will coincide with the projections of the ellipsoid , since the coordinate axes are the principal axes of the ellipsoid and the cross - terms of the ellipsoid vanish .",
    "however , in general , there will be some dependence among the parameters , and the cross terms will not be zero .    [ [ cross - coefficients - a_ij - ineq - j . ] ] cross - coefficients @xmath38 ( @xmath94 ) .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the constraints to derive the cross terms @xmath38 can be obtained from the value of the residual @xmath31 for the simultaneous increment of the two parameters @xmath81 and @xmath95 , while keeping the rest of parameters constant , @xmath96 for each pair of increments of the parameters and the residual @xmath31 increment , @xmath85 , @xmath97 , @xmath98 , we have a constraint on @xmath38 , @xmath99 taking into account eq .",
    "[ eqakk ] , and defining @xmath100 , we have @xmath101 although a single pair of values @xmath82 , @xmath54 , is enough to determine @xmath38 , at least four are recommended , above and below the best - fit value for each parameter , i.e.  with the four combinations of @xmath88 , @xmath89 , @xmath102 , and @xmath103 . in general ,",
    "the best approximation for @xmath38 ( in the same sense as for the diagonal term ) is given by @xmath104 where the sums are for all the pairs of increments evaluated .",
    "a practical implementation of the procedure is as follows .",
    "let us call @xmath105    1 .   for each parameter @xmath83",
    "we estimate a positive and a negative increment , @xmath106 and @xmath107 , such that the increment of the residual @xmath31 is close to @xmath92 , @xmath108 the diagonal coefficient @xmath80 ( eq .  [ eqakk ] ) is given by @xmath109 2 .",
    "for each pair of parameters @xmath83 , @xmath110 ( @xmath94 ) we calculate @xmath111 the cross - coefficient @xmath38 ( eq .  [ eqaij ] ) is given by @xmath112 3 .   for each parameter",
    "@xmath48 we construct the arrays @xmath61 , @xmath64 ( eq .  [ eqakzk ] ) , and solve the system of linear equations @xmath113 .",
    "finally , we calculate the quadratic coefficient , @xmath114 ( eq .  [ eqx02 ] ) , and the projection @xmath115^{1/2}$ ] .    in some cases , the quadratic approximation of @xmath31 is not good enough , and the determination of the projections can fail : for some parameter @xmath116 the array @xmath61 may have null determinant , or the quadratic coefficient of eq .",
    "[ eqx02 ] may be negative .",
    "in these cases , a rough estimation of the uncertainty in @xmath116 can still be given as the intersection with the @xmath48 axis , @xmath117^{1/2}$ ] .",
    "all the derived parameters depend on @xmath34 fit parameters ( four or six times the number of velocity component ) .",
    "let us call @xmath118 the values of the fit parameters , and @xmath47 their errors , found from the increase in the fit residual @xmath31 ( see  [ sconf ] ) .",
    "let @xmath119 be any of the parameters derived from the fit parameters , @xmath120 , for instance @xmath14 or @xmath121 .",
    "for every fit parameter @xmath122 ( @xmath123 ) we evaluate the values of the derived parameter when we increase and decrease the value of the @xmath48-th fit parameter by its error @xmath47 , @xmath124 assuming that the errors of the fit parameters are statistically independent , we can estimate the error @xmath125 as @xmath126",
    "lccccccl & @xmath8 & @xmath9 & @xmath127 & & @xmath128 & & + i d . &",
    "( km  s@xmath15 ) & ( km  s@xmath15 ) & ( k ) & @xmath129 & ( k ) & @xmath14 & rout . + 1 & @xmath130 & @xmath131 & @xmath132 & @xmath133 & @xmath134 & @xmath135 & _ hfs _ + & @xmath136 & @xmath137 & & & @xmath138 & @xmath139 & c + 2 & @xmath140 & @xmath141 & @xmath142 & @xmath143 & @xmath144 & @xmath145 & _ hfs _ + & @xmath146 & @xmath147 & & & @xmath148 & @xmath149 & c + 3 & @xmath150 & @xmath151 & @xmath152 & @xmath153 & @xmath154 & @xmath155 & _ hfs _ + & @xmath156 & @xmath157 & & & @xmath158 & @xmath159 & c + 4 & @xmath160 & @xmath161 & @xmath162 & @xmath163 & @xmath164 & @xmath165 & _ hfs _ + & @xmath156 & @xmath166 & & & @xmath167 & @xmath168 & c + 5 & @xmath169 & @xmath170 & @xmath171 & @xmath172 & @xmath173 & @xmath174 & _ hfs _ + & @xmath175 & @xmath176 & & & @xmath177 & @xmath178 & c +    lccccccccl & & & & & & & & + & @xmath179 & @xmath9 & @xmath180 & & @xmath7 & @xmath181 & & + i d . &",
    "( km  s@xmath15 ) & ( km  s@xmath15 ) & ( k ) & @xmath182 & ( k ) & ( k ) & ( @xmath183 ) & ( @xmath184 ) & rout . + 16 & @xmath185 & @xmath186 & @xmath187 & @xmath188 & @xmath189 & @xmath190 & @xmath191 & @xmath192 & _ hfs _ + & @xmath193 & @xmath194 & @xmath195 & & & @xmath196 & & @xmath197 & r + 31.1 & @xmath198 & @xmath199 & @xmath200 & @xmath201 & @xmath202 & @xmath203 & @xmath204 & @xmath205 & _ hfs _ + & @xmath206 & @xmath207 & & @xmath208 & & @xmath209 & & @xmath210 & r + 31.2 & @xmath211 & @xmath212 & @xmath213 & @xmath214 & @xmath215 & @xmath216 & @xmath217 & @xmath218 & _ hfs _ + & @xmath219 & @xmath220 & & @xmath221 & & @xmath222 & & @xmath223 & r + 47 & @xmath224 & @xmath225 & @xmath226 & @xmath227 & @xmath228 & @xmath229 & @xmath230 & @xmath231 & _ hfs _ + & @xmath232 & @xmath233 & & @xmath234 & @xmath235 & @xmath236 & & @xmath237 & r + 89 & @xmath238 & @xmath239 & @xmath240 & @xmath241 & @xmath242 & @xmath243 & @xmath244 & @xmath245 & _ hfs _ + & @xmath246 & @xmath247 & & @xmath248 & @xmath249 & @xmath250 & & @xmath251 & r + 93 & @xmath252 & @xmath253 & @xmath254 & @xmath255 & @xmath256 & @xmath257 & @xmath258 & @xmath259 & _ hfs _ + & @xmath260 & @xmath261 & & @xmath262 & @xmath263 & @xmath264 & & @xmath265 & r + 95 & @xmath266 & @xmath267 & @xmath268 & @xmath269 & @xmath270 & @xmath271 & @xmath272 & @xmath273 & _ hfs _ + & @xmath274 & @xmath275 & & @xmath276 & @xmath277 & @xmath278 & & @xmath279 & r +    the fits obtained with _",
    "hfs _  and",
    "_ hfs_nh3 _  were compared with those obtained with other commonly used routines . in tables",
    "[ tcompclass ] and [ tcompros08 ] we show some examples of fits performed with _",
    "hfs _  and class for the nh@xmath0@xmath10 line , and the rosolowsky routine @xcite for the simultaneous fit of the nh@xmath0@xmath10 and @xmath2 lines .",
    "the fits shown cover cases of low and high optical depth , and narrow and wide linewidths . as can be seen in the tables , there is in general agreement between the _ hfs _  results and the other routines .",
    "regarding the comparison with class , in the case of linewidths lower than the channel width ( spectra 3 and 4 in table [ tcompclass ] ) , class gives a fixed value for the linewidth , higher than the channel width and much higher than the actual linewidth . as a consequence",
    "the values of @xmath128 and @xmath14 given by class are scaled down by roughly the same factor , so that class is consistent with _ hfs _  in the values of @xmath280 and @xmath281 . in general",
    ", the errors given by class appear to be underestimated .",
    "the comparison with the rosolowsky routine was performed for the examples of fits given in @xcite .",
    "the fitted parameters were taken from table 3 of the electronic edition of @xcite , and the raw spectral data were retrieved from the complete web site . for the _ hfs_nh3 _",
    "fits , the data were hanning - smoothed with @xmath282 and fitted using @xmath283 ( see below ) . for the parameters obtained specifically from the simultaneous fit of the nh@xmath0@xmath10 and @xmath2 lines , there is a good agreement in the values obtained for @xmath181 , and the values of ammonia column density reported in @xcite lie between the two limiting cases given by _ hfs_nh3 _ , for filling factors @xmath183 and @xmath184 .",
    "while the _ hfs_nh3 _  procedures fit the nh@xmath0@xmath10 and @xmath2 transitions simultaneously , the general _ hfs _  procedures fit a single transition , selected among those stored in the file ` hfs_transitions.dat ` .",
    "this file has to be located in the working directory , or in the directory pointed at by the environment variable ` hfs_dir ` ( see appendix [ ainstall ] ) .",
    "the first transition in the file is a single line at @xmath284 , useful for fitting a single gaussian line .",
    "other transitions in the file include nh@xmath0@xmath10 and @xmath2 , nh@xmath285d@xmath286 , n@xmath285h@xmath287(10 ) , cn , hcn , h@xmath288cn , c@xmath285h , c@xmath285d , c@xmath289o , and more transitions can be added easily to the file .",
    "the criterion for defining the `` main component '' of a transition is , in general , all the hyperfines with a velocity offset less than 0.001 km  s@xmath15 , and for nh@xmath0@xmath10 and @xmath2 , less than 0.6 km  s@xmath15 .",
    "any transition not appearing in the file is assumed to be single .",
    "an optional hanning smoothing of the spectrum can be performed prior to fitting .",
    "you can select the hanning filter half - width , ` hfhw ` . for @xmath290",
    "no smoothing is performed .",
    "@xmath291 is the standard 3-point hanning smoothing , and the resulting spectrum has half the initial number of channels . in general , the hanning smoothing encompasses ` 2*hfhw+1 ` points , resulting in a final number of channels ` hfhw+1 ` times smaller .",
    "the iterative process is controlled by two parameters , ` nksample ` , the number of thousands of samples of the parameter space , and ` final_range ` , the ratio of ranges of the last loop and initial search ranges .",
    "the number of loops is taken as @xmath292 , and the number of seeds and descendants is taken as @xmath293 , so that @xmath294 .",
    "for each loop the ranges will be decreased a factor of @xmath295 .",
    "the initial values for the fit are guessed from the intensity , position , and width of the data peak for the first component , and of the residual ( data minus previous components ) for the rest of components ( up to a maximum of 9 ) .",
    "the main line optical depth is set arbitrarily to 0.7 ( @xmath296 ) , or to an arbitrary low value ( @xmath297 ) for a single gaussian fit .",
    "values for the initial search ranges are calculated by the procedures . for fitting a single gaussian line the search range of @xmath298",
    "is made 0 to keep it constant .",
    "additional constraints for the search ranges of the parameters are @xmath299 ; @xmath300 ; and @xmath301 , where @xmath302 is the thermal linewidth for a kinetic temperature @xmath303 of a large molecule ( for the general _ hfs _  procedures , 0.025 km  s@xmath15  for a mass of 200 @xmath304 ) , or of nh@xmath0  ( 0.086 km  s@xmath15  for the _ hfs_nh3 _  procedures ) .",
    "note that the final value of a fit parameter can be outside the initial range for the parameter .",
    "for an initial range @xmath305 , and a range decreasing factor per loop @xmath6 , the final value of a parameter can can be up to roughly @xmath306 apart from its initial value .",
    "for instance , for the default values @xmath307 ( corresponding to @xmath308 ) , and @xmath309 , we have @xmath310 and @xmath311 .    the different procedures that compose _ hfs _  are described in the following .",
    "these are interactive graphic procedures for fitting simultaneously multiple velocity components of an spectral line with hyperfine structure , or to a pair of nh@xmath0@xmath10 and @xmath2 , to spectra read from data files , and generating files with the synthetic spectra .",
    "see an example of a fitting run of ` hfs_fit ` in appendix [ afitrun ] and of ` hfs_nh3 ` in appendix [ anh3run ] .",
    "you can set any number of velocity components , for which the procedures propose a first guess .",
    "alternatively , you can use the cursor to add or delete components .",
    "the position of a new component is set at the cursor position , its intensity is the intensity at the cursor position , and the fwhm is estimated around the cursor position .",
    "the values of the initial search ranges can be changed .",
    "any of the parameters can be kept constant by setting its range to 0 .",
    "the spectra to fit are read from ascii files with a pair of values ( velocity , intensity ) per line .",
    "lines beginning with `` ! '' or `` # '' are ignored .",
    "the file(s ) can be given as argument(s ) to ` hfs_fit ` and ` hfs_nh3 ` :    .... $ hfs_fit < source>.dat $ hfs_nh3 < source_11>.dat < source_22>.dat ....      * ` hfs_fit.log ` or ` hfs_nh3.log ` , log file with the details of the fitting session .",
    "* ` < source>.synt",
    "` , or ` < source_11>.synt ` and ` < source_22>.synt ` , ascii files with the synthesized spectra .",
    "the files have a header ( lines beginning with `` ! '' ) with the values of the parameters of the fitted spectra for each velocity component .",
    "the files are readable by greg of the package gildas.the file is overwritten for every new fit .",
    "see an example in appendix [ aoutput ] . * ` < source>.eps ` , plot showing the data , the components fitted , and the residual .",
    "see some examples in fig .",
    "the file is overwritten for every new fit .",
    "this is a batch procedure to fit the hyperfine structure of the same transition ( and a single velocity component ) for a set of data files , and generating a list of files with the synthetic spectra .",
    "the fit procedure is the same as that of ` hfs_fit ` , but it is not interactive .      the input is a parameter file that can be given as argument when running the procedure :    .... $ hfs_file < file_list>.par ....    the contents of the file is as follows :",
    "transition name , e.g.  ` nh3(1,1 ) ` .",
    "iteration parameters : ` nksample ` , ` final_range ` .",
    "3 .   and following lines : list of files , one file per line    see an example of ` < file_list>.par ` in appendix [ ainput ] .      * `",
    "< file_list>.log ` , log file with the details of the fitting process for all the files in ` < file_list>.par ` . * ` < file_list>.out ` , ascii file with the values and uncertainties of the parameters fitted for each file of the list .",
    "the first lines beginning with `` ! '' are the header and give information about the transition and the column headers . * ` < file_list>.ps ` , postscript file with plots of the data , the components fitted , and the residual for all the files in the list . * ` < file_#>.synt ` , an ascii file for each file in ` < file_list>.par ` , with the synthesized spectrum . the file has a header ( lines beginning with `` ! '' ) with the values of the parameters of the fitted spectrum .",
    "these are single processor batch procedures for fitting simultaneously multiple velocity components of spectra from 3-axes fits data cubes .",
    "a subimage of the fits data cube can be selected , and optional boxcar averaging of pixels and hanning filtering of the spectra can be performed .",
    "the procedures are similar to ` hfs_fit ` and ` hfs_nh3 ` , but they are not interactive .",
    "the maximum dimension of the image and the maximum number of channels of the data cube is arbitrary , i.e.  the only limitation is the amount of memory available by the computer .",
    "the input is a parameter file that has to be given as argument when running the procedures :    .... $ hfs_cube_sp < parameter>.par",
    "< parameter>.par ....    the parameter file for ` hfs_cube_sp ` has 10 lines ( see an example in appendix [ ainput ] ) :    1 .",
    "transition name , e.g.  ` c17o(1 - 0 ) ` .",
    "2 .   fits data cube file to read .",
    "the file must have 3 non - degenerate axes , in this order : x position , y position , velocity channel .",
    "rms of channels without emission , minimum snr of spectra to be fitted .",
    "components with a peak intensity below snr times rms are not fitted .",
    "4 .   number of velocity components to fit , ` ncomp ` , between 1 and 9 .",
    "range of channels for each component : @xmath312 values , with the first and last channel of the velocity range for each component .",
    "the channel ranges must be non overlapping . for the first component , 0 defaults to 1 ( first ) , ` nchan ` ( last ) .",
    "6 .   hanning filter half - width ( channels ) , 0 for no filtering . 7 .",
    "boxcar smoothing radius ( pixels ) , 0 for no smoothing .",
    "subimage to be fitted : first x pixel , last x pixel , x increment .",
    "0 defaults to 1 ( first ) , ` ndim1 ` ( last ) , 1 ( increment ) .",
    "subimage to be fitted : first y pixel , last y pixel , y increment .",
    "0 defaults to 1 ( first ) , ` ndim2 ` ( last ) , 1 ( increment ) . 10 .",
    "iteration parameters : ` nksample ` , ` final_range ` .",
    "the parameter file for ` hfs_nh3_cube_sp ` has 11 lines ( see an example in appendix [ ainput ] ) :    1 .",
    "@xmath10 fits data cube file to read .",
    "the file must have 3 non - degenerate axes , in this order : x position , y position , velocity channel .",
    "@xmath10 rms of channels without emission , minimum snr of spectra to be fitted . components with a peak intensity below snr times rms are not fitted .",
    "3 .   number of velocity components to fit , ` ncomp ` , between 1 and 9 .",
    "@xmath10 range of channels for each component : @xmath312 values , with the first and last channel of the velocity range for each component .",
    "the channel ranges must be non overlapping . for the first component , 0 defaults to 1 ( first ) , ` nchan ` ( last ) .",
    "@xmath2 fits data cube file to read .",
    "the file must have the same geometry as that of the @xmath10 fits file .",
    "6 .   @xmath2 rms of channels without emission , minimum snr of spectra to be fitted .",
    "components with a peak intensity below snr times rms are not fitted .",
    "the 5 following lines are the same as for the case of ` hfs_cube_sp ` .      * ` log/<parfile>.log ` , log file in folder ` log ` with the details of the fitting process for all the pixels of the subimage . * ` < parfile>_comp#.out ` , an ascii file for each velocity component with the values of the parameters fitted and the line and physical parameters for each pixel of the subimage , and their uncertainty .",
    "the first lines beginning with `` ! '' are the header and give information about the parameter file , fits files , velocity component number , velocity range of the component , hanning filtering applied , smoothing boxcar radius , and column headers .",
    "the files are used by ` hfs_view ` , and are readable by greg .",
    "see an example in appendix [ aoutput ] .",
    "* ` ps/<parfile>_<xoffset>.ps ` , postscript files in folder ` ps ` , with plots of the data , the components fitted , and the residual for all pixels of the subimage with a given ` < xoffset > ` in arcsec .",
    "* ` maps/<parfile>_<parameter>_comp#.fits ` , fits files in folder ` maps ` , with maps , for each velocity component , of the parameters fitted and the line and physical parameters , and their uncertainty .",
    "each fits file has two planes , the first plane with the values of the parameter , and the second plane with the uncertainties .",
    "see in fig .",
    "[ fcube ] an example of the the maps obtained from a 2-velocity - components fit of the c@xmath313o line for a fits data cube .",
    "these are multiprocessor procedures that use open mpi ( see appendix [ ainstall ] ) and run in parallel using a number of processors available in the machine , or in more than one host .",
    "the multiprocessor procedures are naked versions of the single - processor versions , ` hfs_cube_sp ` and ` hfs_nh3_cube_sp ` , without any graphic output .",
    "the instructions for running these procedures can be found in appendix [ amp ] .",
    "these are interactive graphic procedures for displaying spectra from fits data cubes and the corresponding synthetic spectra fitted with ` hfs_cube ` or ` hfs_nh3_cube ` .",
    "a plot of the integrated intensity is shown , and you can select with the mouse the position for which the the spectrum ( data and synthetic ) is shown . you can select to show the integrated intensity for all channels , or for the channel ranges of each velocity component .",
    "the data and synthetic spectra at any pixel can be extracted in ascii files .",
    "the input is the same parameter file used as input to ` hfs_cube ` or ` hfs_nh3_cube ` . from the information in this file , ` hfs_view ` reads the corresponding fits data cubes and the ` < parfile>_comp#.out ` file for each velocity component ( created by ` hfs_cube ` or ` hfs_nh3_cube ` ) , with the parameters of the fitted spectra .",
    "for any pixel you can extract the data and synthetic spectra :    * ` < parfile>_<xoffset>_<yoffset>.spec ` , or + ` < parfile>_11_<xoffset>_<yoffset>.spec ` and ` < parfile>_22_<xoffset>_<yoffset>.spec ` , data spectra for the pixel selected , with the hanning filtering and boxcar smoothing given in the ` < parfile>.par ` file . see an example in appendix [ aoutput ] . * ` < parfile>_<xoffset>_<yoffset>.synt ` , or + ` < parfile>_11_<xoffset>_<yoffset>.synt ` and ` < parfile>_22_<xoffset>_<yoffset>.synt ` , synthetic spectra fitted for the pixel selected .",
    "this is an auxiliary procedure to flag the output fits files of ` hfs_cube ` and ` hfs_nh3_cube ` , according to the parameter values , errors , or snr .",
    "the fits files have two planes , the first one with the values of the parameter at each pixel , and the second one with with the error of the value .",
    "the procedure reads the values and errors in the fits files , and allows you to blank the pixels that fulfill a criterion on parameter error , value , or value / error , above or below a cutoff value .      `",
    "< parfile>_<parameter>_comp#.fits ` , any fits file created by ` hfs_cube ` or ` hfs_nh3_cube ` , for each velocity component and parameter .      `",
    "< parfile>_<parameter>_comp#_blank.fits ` , output 2-axes fits file , with the values of the parameter for non - flagged pixels , and nan for flagged - out pixels .",
    "auxiliary procedure to create a synthetic spectrum , with the option of adding gaussian noise .",
    "you can select the transition , number of channels , spectral resolution , line parameters , and noise level .",
    "* ` hfs_synt.synt ` , ascii file with the synthetic spectrum generated .",
    "the file has a header ( lines beginning with `` ! '' ) with the values of the parameters used for generating the synthetic spectrum . * ` hfs_synt.eps ` , plot of the synthetic spectrum .",
    "the author thanks pau estalella for suggesting the use of pseudo - random sequences , ferran sala for helpful discussions on the projections of a quadric , and salvador curiel for helping with the implementation of the multiprocessor procedures . thanks also to lvaro snchez - monge for reading the manuscript and , together with aina palau , gemma busquet and carmen jurez , for testing _ hfs _ , finding bugs , and suggesting improvements .",
    "this work has been partially supported by the spanish mineco grant aya2014 - 57369-c3 ( cofunded with feder funds ) and mdm-2014 - 0369 of iccub ( unidad de excelencia ` mara de maeztu ' ) .",
    "anglada , g. , estalella , r. , mauersberger , r. , torrelles , j. m. , rodrguez , l. f. , cant , j. , ho , p. t. p. , dalessio , p. 1995 , apj , 443 , 682    avni , y. 1976 , apj , 210 , 642    cant , j. , curiel , s. , martnez - gmez , e. 2009 , a&a , 501 , 1259    danby , g. , flower , d. r. , valiron , p. , schilke , p. , & walmsley , c. m. 1988 mnras , 235 , 229    estalella , r. 2016 , hfs : hyperfine structure fitting tool , astrophysics source code library , record ascl:1607.011    estalella , r. , anglada , g. 1997 , `` introduccin a la fsica del medio interestelar '' , col@xmath314lecci textos docents , n.  50 , 2nd edition : edicions de la universitat de barcelona , spain    estalella , r. , lpez , r , anglada , g. , gmez , g. , riera , a. , carrasco - gonzlez , c. 2012 , aj , 144 , 61    faure , a. , hily - blant , p. , le gal , r. , rist , c. , pineau des forts , g. 2013 , apj , 770 , l2    goddi , c. , zhang , q. , moscadelli , l. 2015 , a&a , 573 , a108    halton , j. h. 1964 , commun .",
    "acm , 7 , 701    ho , p. t. p. , townes , c. h. 1983 , araa , 21 , 239    kukolich , s. g. 1967 , phys .",
    ", 156 , 83    mangum , j. g. , shirley , y. l. 2015 , pasp , 127 , 266    maret , s. , faure , a. , scifoni , e. , & wiesenfeld , l. 2009 , mnras , 399 , 425    mcconnell , a. j. 2011 , `` applications of tensor analysis '' , dover publications    osorio , m. , anglada , g. , lizano , s. , dalessio , p. 2009",
    ", apj , 694 , 29    palau , a. , estalella , r. , girart , j. m. , fuente , a. , fontani , f. , commeron , b. , busquet , g. , bontemps , s. , snchez - monge ,  . , zapata , l. a , zhang , q. , hennebelle , p. , di francesco , j. 2014 , apj , 785 , 42    poynter , r. l. , kakar , r. k. 1975 , apj , 29 , 87    rosolowsky , e. w. , pineda , j. e. , foster , j. b. , borkin , m. a. , kauffmann , j. , caselli , p. , myers , p. c. , goodman , a. a. 2008 , apjss , 175 , 509    snchez - monge ,  . ,",
    "palau , a. , fontani , f. , busquet , g. , jurez , c. , estalella , r. , tan , j. c. , seplveda , i. , ho , p. t. p. , zhang , q. , kurtz s. 2013 , mnras , 432 , 3288    seplveda , i. , anglada , g. , estalella , r. , lpez , r. , girart , j.m . , yang , j. 2011 , a&a , 527 , a41    svoboda , b. e. , shirley , y. l. , battersby , c. , rosolowsky , e. w. , ginsburg , a. g. , ellsworth - bowers , t. p. , pestalozzi , m. r. , dunham , m. k. , evans , n. j. , ii , bally , j. , glenn , j. 2016 , apj , 822 , 59    sobol , i. 1967 , ussr computational mathematics and mathematical physics , 7 , 86    swift , j. j. , welch , w. j. , & di francesco , j. 2005 apj , 620 , 823    walmsley , c. m. & ungerechts , h. , 1983 .",
    "a&a , 122 , 164    wall , j. v. & jenkins , c. r. 2003 , `` practical statistics for astronomers '' , cambridge university press",
    "the _ hfs _  procedures run on a linux or mac os x system with a fortran 90 compiler ( for instance ` gfortran ` ) , and use the pgplot graphics subroutine library compiled with ` gfortran ` ( see appendix [ apgplot ] ) , for the graphic output , and open mpi for the multiprocessor procedures ` hfs_cube_mp ` and ` hfs_nh3_cube_mp ` .",
    "_ hfs _  can be freely downloaded as a file ` hfs.tgz ` from the astrophysics source code library , record ascl:1607.011 once you have downloaded ` hfs.tgz ` , untar the file in your installation directory ( as root or using ` sudo ` ) , for instance ` /usr",
    "/ local / hfs ` ,    .... $ mkdir /usr",
    "/ local / hfs $ mv hfs.tgz /usr / local / hfs $ cd /usr / local / hfs $ tar -xzvf hfs.tgz ....    if necessary ,",
    "edit the first lines of the shell script ` hfs_compile ` to change the lines    .... compiler=\"gfortran \" libraries =\"- lpgplot -lx11 \" ....    you may need to give the location of the pgplot library with the option    .... libraries =\"- lpgplot -lx11 -l / usr / local / lib / pgplot \" ....",
    "mac os x users may need to indicate the location of the x11 library too    .... libraries =\"- lpgplot -lx11 -l / usr / local / lib / pgplot -l / usr / x11/lib \" ....    run the compile script    .... $ ./hfs_compile ....    the shell script ` hfs_links ` create symbolic links in ` $ exe_dir ` pointing at the hfs procedures .",
    "if necessary , change the line    .... exe_dir=\" / usr / local / bin \" ....    and run the links script    .... $ ./hfs_links ....    define the environment variable ` hfs_dir ` , pointing at your installation directory .",
    "it is used by _ hfs _  to find the files ` hfs_transitions.dat ` and ` hfs_fit.help ` .",
    "this can be done by adding to your ` .bashrc ` or ` .bash_profile ` the lines    .... # hfs export hfs_dir=/usr / local / hfs ....",
    "once you have downloaded the pgplot distribution file , follow the normal installation procedure ( as root or using ` sudo ` ) :    .... $ mv pgplot5.2.tar.gz /usr",
    "/ local / src $ cd /usr / local / src $ tar xzvf pgplot5.2.tar.gz $ mkdir /usr",
    "/ local / pgplot $ cd /usr / local / pgplot",
    "$ cp /usr / local / src / pgplot / drivers.list .",
    "....    edit the file ` drivers.list ` and uncomment ( select ) the drivers + ` /null ` ( null device ) , + ` /ps , /vps , /cps , /vcps ` ( postscript drivers ) , and + ` /xwindow , /xserve ` ( x window drivers ) .",
    "+ run ` makemake ` to prepare the makefile for a linux system with ` g77_gcc ` compiler ,    .... $ /usr / local / src / pgplot / makemake /usr / local / src / pgplot linux g77_gcc ....    edit the file ` makefile ` and replace lines 25 and 26 :    .... fcompl = g77 fflagc =- u -wall -fpic",
    "-o ....    by the following lines :    .... fcompl = gfortran fflagc =- ffixed - form -ffixed - line - length - none -u -wall -fpic -o ....    continue the normal installation procedure ,    .... $ make $ make clean ....    and , assuming that ` ld_library_path ` points at ` /usr",
    "/ local / lib ` ,    .... $ cd /usr / local / lib $ ln -s /usr / local / pgplot / libpgplot.so .",
    "....    define the environment variable ` pgplot_dir ` , pointing at your installation directory .",
    "this can be done by adding to your ` .bashrc ` or ` .bash_profile ` file the lines    .... # pgplot export pgplot_dir='/usr / local / pgplot ' ....    additionally , you can customize pgplot by adding the following lines to your ` .bashrc ` or ` .bash_profile ` :    .... # default xwindow device export pgplot_dev='/xwin ' # default white background export pgplot_background='white ' # default black foreground export pgplot_foreground='black ' # marking text written in the ps file so it can be be edited export pgplot_ps_verbose_text='yes ' # starting pgxwin_server with 256 colors , server window not visible /usr / local / pgplot / pgxwin_server -win_maxcolors 256 -server_visible false ....",
    "you need to have open mpi installed to be able to run ` hfs_cube_mp ` or ` hfs_nh3_cube_mp ` . to run the procedures , type    .... $ mpirun -np < n >",
    "hfs_cube_mp < parfile>.par $ mpirun -np < n > hfs_nh3_cube_mp",
    "< parfile>.par ....    where ` < n > ` is the number of processors to use . to know the number ( and characteristics ) of processors in a linux system , you can type    .... $ cat /proc",
    "/ cpuinfo ....    for running in more than one host , for example , in ` localhost ` and another host ` < otherhost > ` , type    .... $ mpirun -np < n > -host localhost,<otherhost >",
    "hfs_cube_mp < parfile>.par $ mpirun -np < n > -host localhost,<otherhost > hfs_nh3_cube_mp < parfile>.par ....    here ` < n > ` is the total number of processors to use , distributed among the hosts listed after ` -host ` . if you want to know which are the processes run in each host , add the option ` -display - map `",
    ".    requisites for running in a remote host ` < otherhost > ` :    * ` ssh ` access to ` < otherhost > ` , without having to enter the password , i.e.  with your local ` id_rsa_pub ` added to ` < otherhost>:.ssh / authorized_keys2 ` . * open mpi installed in ` < otherhost > ` .",
    "your ` path ` and ` ld_library_path ` in ` < otherhost > ` have to point at the openmpi ` bin ` and ` lib ` folders in the installation directory .",
    "for example , if openmpi is installed in ` /usr / local / openmpi `",
    ", you can include in the file ` < otherhost>:.bashrc ` the lines + .... export path=$path:/usr / local / openmpi / bin export ld_library_path=$ld_library_path:/usr / local / openmpi / lib .... * the same data file structure in ` < otherhost > ` and in ` localhost ` ,",
    "i.e.  the same directory from where you run ` hfs_cube_mp ` or ` hfs_nh3_cube_mp ` , with the same parameter file ` < parfile>.par ` and data files . the log files of the different processors , ` log/<parfile>_##.log ` , will be written in the host where each processor runs .",
    ".... $ hfs_fit nh311_thin.dat _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ hfs_fit .",
    "hyperfine spectra multicomponent fit robert estalella , 2015/06 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ * * * * * *   use a terminal with at least 94 columns   * * * * * * date : 2016/03/22 time : 12:45:04    data file : nh311_thin.dat                                                    n. of data points read :          87 reference channel ( v=0 ) :    59.6269 channel width ( km s^-1 ) :     0.3089 off - line rms :                0.2104 transition :              nh3(1,1 )                          tau_tot / tau_m :               2.0000    fit rms :        0.3933 present values and search ranges ( ncomp= 1 ) param :         delta_v        v_lsr a(1-e^-t_m )   1-e^-tau_m comp :    1 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ value :          1.2103      -2.9734       6.1716       0.5000 range :          1.2103       1.2103       0.3841       0.5000    hfs fit menu _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 0 . quit 1 .",
    "read data file :     nh311_thin.dat                                                    3 .",
    "select transition : nh3(1,1 )                          4 .",
    "hanning smoothing 5 .",
    "select plot ( 1:data + 2:comp + 4:res + 8:synt ) :    7 6 .",
    "change nksample , final_range :        200     0.050 7 .",
    "change ncomp= 1 and make initial guess 8 .",
    "change initial values or ranges 9 .",
    "fit 1 component(s ) and estimate errors choose option ( 0 - 9 ) : 9    iteration parameters read nksample :                 200 final_range :            0.050 iteration parameters used nseed :                    118 ndesc :                    118 nloop :                     14 range_fact :             0.794 fitting ncomp= 1 component(s ) loop comp      delta_v        v_lsr",
    "a(1-e^-t_m )   1-e^-tau_m          rms _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _     0     1       1.2103      -2.9734       6.1716       0.5000       0.3933     1     1       2.1267      -3.9476       6.3392       0.9930       0.3933     2     1       1.4883      -2.9911       5.8081       0.3219       0.3784     3     1       1.1926      -3.1046       6.1852       0.2803       0.3766     4     1       1.2946      -2.9713       6.0164       0.1679       0.3762     5     1       1.2304      -3.0472       5.9933       0.1664       0.3762     6     1       1.1915      -2.9995       6.3971       0.2483       0.3762     7     1       1.2597      -3.0325       5.9275       0.2578       0.3762     8     1       1.1783      -3.0519       6.2819       0.3125       0.3762     9     1       1.1862      -3.0152       6.2391       0.3103       0.3761    10     1       1.2051      -3.0217       6.3489       0.1883       0.3761    11     1       1.2628      -3.0253       6.1733       0.1857       0.3760    12     1       1.2043      -3.0294       6.2455       0.2270       0.3760    13     1       1.2196      -3.0238       6.1633       0.2602       0.3760    14     1       1.2284      -3.0299       6.1945       0.2700       0.3760    error estimation in progress fit rms :           0.3760 n. fitted par :          4 target rms :        0.3865 single parameters ........ pairs of parameters ......... par    intersect   projection    1       0.1105       0.1938    2       0.0585       0.0608    3       0.4400       0.7270    4       0.2665       0.5207 derived parameters done    fit rms :        0.3760 best fit and errors _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ derived parameters _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ param :         delta_v        v_lsr",
    "a(1-e^-t_m )   1-e^-tau_m       atau_m        tau_m            a comp :    1 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ value :          1.2188      -3.0303       6.2258       0.2479       7.1547       0.2849   2.5114e+01 error :          0.1938       0.0608       0.7270       0.5207       3.4903       0.8576   4.4023e+06 ....",
    ".... $ hfs_nh3 nh3_11.dat nh3_22.dat _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ nh3 ( 1,1 ) and ( 2,2 ) multicomponent fit and analysis robert estalella .",
    "2015/12 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ * * * * * *   use a terminal with at least 118 columns   * * * * * * date : 2016/03/22 time : 12:04:18    data file 1 : nh3_11.dat n. of data points read :         413 reference channel ( v=0 ) :   208.0598 channel width ( km s^-1 ) :     0.2059    data file 2 : nh3_22.dat n. of data points read :         413 reference channel ( v=0 ) :   207.9984 channel width ( km s^-1 ) :     0.2057    fit rms 1,2 :    0.0582       0.0157 present values and search ranges ( ncomp= 1 ) ( j , k ) :     ( 1,1)&(2,2 )        ( 1,1 )        ( 1,1 )        ( 1,1 )        ( 2,2 )        ( 2,2 ) param :         delta_v        v_lsr",
    "a(1-e^-t_m )   1-e^-tau_m        v_lsr a(1-e^-t_m ) comp :    1 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ value :          0.9006       0.3998       1.5594       0.5000       0.4120       0.2892 range :          0.9006       1.0000       0.0580       0.5000",
    "1.0000       0.0157    hfs nh3(1,1)&(2,2 ) fit menu _",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 0 . quit 1 . help 2 .",
    "read data files : nh3_11.dat , nh3_22.dat 3 .",
    "physical parameter estimation 4 . hanning smoothing 5 .",
    "select plot ( 1:data + 2:comp + 4:res + 8:synt ) :   15 6 .",
    "change nksample , final_range :        200     0.050 7 .",
    "change ncomp= 1 and make initial guess 8 .",
    "change initial values or ranges 9 .",
    "fit 1 component(s ) and estimate errors choose option ( 0 - 9 ) : 9    iteration parameters read nksample :                 200 final_range :            0.050 iteration parameters used nseed :                    118 ndesc :                    118 nloop :                     14 range_fact :             0.794    fitting ncomp= 1 component(s ) loop comp      delta_v       v_lsr1 a(1-e^-t1 m )   1-e^-tau1 m       v_lsr2 a(1-e^-t2 m )      rms_tot _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _     0     1       0.9006       0.3998       1.5594       0.5000       0.4120       0.2892       0.0603     1     1       1.0775      -0.4231       1.5179       0.9924       1.3918       0.3027       0.0543     2     1       0.8312       0.4102       1.5944       0.6611       1.3326       0.2791       0.0351     3     1       0.8878       0.3940       1.6405       0.8201       0.5550       0.2785       0.0310     4     1       0.7420       0.4763       1.6033       0.8780       0.0978       0.3075       0.0310     5     1       0.5446       0.3985       1.5672       0.9798       1.9346       0.3106       0.0305     6     1       0.6609       0.4237       1.5769       0.9845       0.3772       0.2785       0.0305     7     1       0.5775       0.3836       1.5560       0.9914       0.5027       0.2989       0.0294     8     1       0.5718       0.4494       1.7124       0.9730       0.2922       0.2766       0.0287     9     1       0.6237       0.4140       1.5783       0.9651       0.4681       0.3009       0.0285    10     1       0.5559       0.4449       1.4869       0.9923       0.2012       0.3003       0.0285    11     1       0.5236       0.4082       1.5732       0.9881       0.4519       0.2765       0.0285    12     1       0.5844       0.4423       1.5001       0.9866       0.4943       0.3013       0.0283    13     1       0.5683       0.4253       1.5108       0.9860       0.2885       0.2976       0.0282    14     1       0.5828       0.4155       1.4899       0.9862       0.4128",
    "0.3338       0.0282    error estimation in progress fit rms :           0.0282 n. fitted par :          6 target rms :        0.0283 single parameters ............ pairs of parameters .................... par    intersect   projection    1       0.0144       0.0361    2       0.0094",
    "0.0099    3       0.0318       0.0000    4       0.0017       0.0000    5       0.0754       0.0754    6       0.0696       0.0725 derived parameters done    fit rms 1,2 :    0.0232       0.0164 best fit and errors _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ( j , k ) :     ( 1,1)&(2,2 )        ( 1,1 )        ( 1,1 )        ( 1,1 )        ( 2,2 )        ( 2,2 ) param :         delta_v        v_lsr a(1-e^-t_m )   1-e^-tau_m        v_lsr a(1-e^-t_m ) comp :    1 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ value :          0.5560       0.4218       1.4801       0.9910       0.4158       0.3228 error :          0.0361       0.0099       0.0318       0.0017       0.0754       0.0725    derived parameters _",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ( j , k ) :           ( 1,1 )        ( 1,1 )        ( 2,2 )        ( 2,2 ) ( 1,1)&(2,2 ) param :          atau_m        tau_m       atau_m        tau_m            a comp :    1 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ value :          7.0371       4.7118       0.3638       0.2436   1.4935e+00 error :          0.3068       0.1865       0.0927       0.0623   3.2230e-02    physical parameters _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ param :       ( f=1)t_ex        t_rot          t_k   ( f<1)n(11 )   ( f=1)n(11 )   ( f<1)n(22 )   ( f=1)n(22 ) ( f<1)n(nh3 ) ( f=1)n(nh3 )                    ( k )          ( k )          ( k )      ( cm^-2 )      ( cm^-2 )      ( cm^-2 )      ( cm^-2 )      ( cm^-2 )      ( cm^-2 ) comp :    1 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ value :          4.2276       9.6960       9.9724   1.0236e+14   2.9150e+14   2.4889e+12   7.0877e+12   4.5732e+14   1.3023e+15 error :          0.0324       0.5968       0.6588   8.0026e+12   2.2179e+13   6.5442e+11   1.8673e+12   6.5753e+13   1.8463e+14 ....",
    ".... \" nh3(1,1 ) \"                     !",
    "transition             400 0.05                       !",
    "nksample , final_range 00117 + 6412.nh311.clump1.spt    !",
    "1st data file        afgl5142.nh311.clump1.dat      !",
    "2nd data file cepa.nh311.clump1.spt          ! ... on1.nh311.clump1.spt           !",
    "last data file    ....      .... \" n2h+(1 - 0 ) \"                    ! transition \" n2hp-merged-lmv-clean.fits \"   !",
    "input data cube file 0.06 8.0                       !",
    "rms , minimum snr to analyze the spectrum 1                              !",
    "number of components 104 108                        !",
    "range of channels to search for peak 0                              ! hanning filter half - width ( chan ) : 0=no ; > 0=yes 0                              !",
    "boxcar smoothing radius ( pixels ) : 0=no ; > 0=yes 20 236 4                       ! xpix_ini ,",
    "xpix_fin , xpix_inc 20 236 4                       !",
    "ypix_ini , ypix_fin , ypix_inc 400 0.05                       !",
    "nksample , final_range ....      .... \" l1287_11_kv.fits \"             ! ( 1,1 ) input nh3(1,1 ) data cube file 0.30   4.0                      ! ( 1,1 ) rms , minimum snr to analyse the spectrum 3                              ! number of components 27 29   30 32   33 35            ! ( 1,1 ) range of channels to search for peak \" l1287_22_kv.fits \"             ! ( 2,2 ) input nh3(2,2 ) data cube file 0.30   4.0                      ! ( 2,2 ) rms , minimum snr to analyse the spectrum 0                              ! hanning filter half - width ( chan ) : 0=no ; > 0=yes 1",
    "! boxcar smoothing radius ( pixels ) : 0=no ; > 0=yes 128 384 3                      ! ( 1,1)&(2,2 ) xpix_ini , xpix_fin , xpix_inc 128 384 3                      ! ( 1,1)&(2,2 ) ypix_ini , ypix_fin , ypix_inc 400 0.05                       !",
    "nksample , final_range ....",
    ".... ! created by hfs_nh3 ! date        = 2016/01/12 !",
    "time        = 12:59:00 ! transition = nh3(2,2 ) ! nchan       =           120 !",
    "dvchan      =       0.30851 ! ncomp",
    "=             2 ! dvline__1   =       1.05310    !",
    "vlsr____1   =     -18.38200",
    "! a*tau_m_1   =       0.00226    ! tau_m___1   =       0.13445    ! dvline__2   =       0.00000    ! vlsr____2   =       0.00000",
    "! a*tau_m_2   =       0.00000    ! tau_m___2   =       0.00000    !    velocity    synthetic       comp_1       comp_2     -36.50216      0.00002      0.00002      0.00000     -36.19365      0.00006      0.00006      0.00000     -35.88514      0.00011      0.00011      0.00000     -35.57662      0.00014      0.00014      0.00000     -35.26811      0.00011      0.00011      0.00000     -34.95960      0.00006      0.00006      0.00000     -34.65109      0.00002      0.00002      0.00000     -34.34258      0.00000      0.00000      0.00000 ....      ....",
    "! created by hfs_view !",
    "date            = 2016/01/12 !",
    "time            = 12:59:00 !",
    "fits_file       = test1.fits ! nchan           =           124 !",
    "dvchan          =       0.30888 !",
    "hanning_hwdth   =             0 !",
    "boxcar_radius   =             0 ! x_pixel         =            30 ! y_pixel",
    "=            40 !",
    "velocity    intensity     -36.83265     -0.00740     -36.52377     -0.00101     -36.21490      0.00281     -35.90602      0.00570     -35.59714",
    "-0.00071     -35.28827      0.00164     -34.97939     -0.00221     -34.67051     -0.00472     -34.36163      0.00010     -34.05275     -0.00056     -33.74388     -0.00011     -33.43500     -0.00030     -33.12612      0.00054 ....      .... ! created by hfs_cube !",
    "date                 = 2016/01/12 !",
    "time                 = 13:20:56 ! par_file             = test2_cube.par                                                    !",
    "fits_file            = test1.fits                                                        !",
    "transition           = nh3(1,1 )                          !",
    "tau_tot / tau_m        =      2.0000",
    "! ncomp                =           2 !",
    "component            =           1 ! velocity_range_min   =    -23.3965 ! velocity_range_max   =    -18.7633 !",
    "hanning_half_width   =           0 !",
    "boxcar_radius        =          10 !     delta_v        error        v_lsr        error      a*tau_m        error        tau_m        error          rms   xoffset   yoffset   xpix   ypix    8.9086e-01   1.3444e-01 -1.9046e+01   9.7873e-02   1.9160e-02   4.7257e-03   4.8878e+00   1.1600e+00   4.7246e-04    -10.35    -16.56   0079   0041    7.6377e-01   1.6969e-01 -1.8974e+01   1.2493e-01   2.0565e-02   5.2096e-03   7.2750e+00   1.6474e+00   4.9455e-04    -10.35    -14.49   0079   0044    7.6430e-01   1.2049e-01 -1.9173e+01   8.5182e-02   1.7090e-02   4.2795e-03   3.7879e+00   9.4660e-01   4.3300e-04    -12.42    -18.63   0082   0038    8.4162e-01   1.3756e-01 -1.9058e+01   9.8269e-02   1.7949e-02   5.1669e-03   4.6527e+00   1.2671e+00   4.5164e-04    -12.42    -16.56   0082   0041    8.7368e-01   1.5091e-01 -1.8891e+01   1.0841e-01   1.7925e-02   5.0000e-03   4.8505e+00   1.3107e+00   4.7948e-04    -12.42    -14.49   0082   0044 ...."
  ],
  "abstract_text": [
    "<S> _ hfs _ is a tool to fit the hyperfine structure of spectral lines , with multiple velocity components . </S>",
    "<S> the _ hfs_nh3 _ procedures included in _ hfs _ fit simultaneously the hyperfine structure of the nh@xmath0 @xmath1 and @xmath2 transitions , and perform a standard analysis to derive @xmath3 , nh@xmath0 column density , @xmath4 , and @xmath5 . </S>",
    "<S> _ hfs _ uses a monte carlo approach for fitting the line parameters . </S>",
    "<S> especial attention is paid to the derivation of the parameter uncertainties . </S>",
    "<S> _ hfs _ includes procedures that make use of parallel computing for fitting spectra from a data cube . </S>"
  ]
}
{
  "article_text": [
    "the problem of efficiently computing straight - line drawings of planar graphs has attracted a lot of attention over the last two decades .",
    "two combinatorial concepts for planar triangulations turn out to be the basis of many classical straight - line drawing algorithms : the _ canonical ordering _ ( a special ordering of the vertices obtained by a shelling procedure ) and the closely related _ schnyder wood _ ( a partition of the inner edges of a triangulation into @xmath11 spanning trees with specific incidence conditions ) .",
    "algorithms based on canonical ordering  @xcite are typically incremental , adding vertices one by one while keeping the drawing planar .",
    "algorithms based on schnyder woods  @xcite are more global , the ( barycentric ) coordinates of each vertex have a clear combinatorial meaning ( typically the number of faces in certain regions associated to the vertex ) .",
    "algorithms of both types make it possible to draw in linear time a planar triangulation with @xmath1 vertices on a grid of size @xmath12 .",
    "they can also both be extended to obtain ( weakly ) convex drawings of @xmath11-connected maps on a grid of size @xmath12 .",
    "the problem of obtaining planar drawings of higher genus graphs has been addressed less frequently  @xcite , from both the theoretical and algorithmic point of view .",
    "recently some methods for the straight - line planar drawing of genus @xmath13 graphs with polynomial grid area ( of size @xmath14 , in the worst case ) have been described in  @xcite ( to apply these methods the graph needs to be unfolded planarly along a _ cut - graph _ ) .",
    "however , it does not yield ( at least easily ) periodic representations : for example , in the case of a torus , the boundary vertices ( on the boundary of the rectangular polygon ) might not be aligned , so that the drawing does not give rise to a periodic tiling .",
    "our main contribution is to generalize the notion of canonical ordering and the incremental straight - line drawing algorithm of de fraysseix , pach and pollack  @xcite ( shortly called fpp algorithm thereafter ) to triangulations on the cylinder . for any triangulation @xmath0 of the cylinder , our algorithm yields in linear time",
    "a crossing - free straight - line drawing of @xmath0 on a regular grid ( on the flat cylinder ) of the form @xmath15 $ ] , with @xmath3 and @xmath4 , where @xmath1 is the number of vertices of @xmath0 and @xmath5 is the ( graph- ) distance between the two boundaries of @xmath0 . by a reduction to the cylindric case ( the reduction is done with the help of a so - called _ tambourine _",
    "@xcite ) , we also get a drawing algorithm on the torus .",
    "precisely , for any toroidal triangulation @xmath0 , we can obtain in linear time a crossing - free straight - line drawing of @xmath0 on a regular grid ( on the flat torus ) @xmath16 , with @xmath3 and @xmath17 , where @xmath1 is the number of vertices of @xmath0 and @xmath8 is the length of a shortest non - contractible cycle . since @xmath18 as shown in  @xcite , we have @xmath19 , so that the grid area is @xmath10 .    for the toroidal case we mention that a notion of canonical ordering has been introduced in  @xcite ( this actually works in any genus and yields an efficient encoding procedure ) but we do not use it here .",
    "we also mention that , independently , an elegant periodic straight - line drawing algorithm for toroidal triangulations has been very recently described in  @xcite , based on so - called _ toroidal schnyder woods _ and face - counting operations ; in their case the area of the periodic grid is @xmath20 .",
    "[ [ graphs - embedded - on - surfaces . ] ] graphs embedded on surfaces .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + +    a _ map _ of genus @xmath13 is a connected graph @xmath0 embedded on the compact orientable surface @xmath21 of genus @xmath13 , such that all components of @xmath22 are topological disks , which are called the _ faces _ of the map .",
    "the map is called _ planar _ for @xmath23 ( embedding on the sphere ) and _ toroidal _ for @xmath24 ( embedding on the torus ) .",
    "the _ dual _ of a map @xmath0 is the map @xmath25 representing the adjacencies of the faces of @xmath0 , i.e. , there is a vertex @xmath26 of @xmath25 in each face @xmath27 of @xmath0 , and each edge @xmath28 of @xmath0 gives rise to an edge @xmath29 in @xmath25 , where @xmath27 and @xmath30 are the faces on each side of @xmath28 .",
    "a _ cylindric map _ is a planar map with two marked faces @xmath31 and @xmath32 whose boundaries @xmath33 and @xmath34 are simple cycles ( possibly @xmath33 and @xmath34 share vertices and edges ) .",
    "the faces @xmath31 and @xmath32 are called the _ boundary - faces_. boundary vertices and edges are those belonging to @xmath33 ( black circles in fig .",
    "[ fig : cylindriccanonicalordering ] ) or @xmath34 ( gray circles in fig .",
    "[ fig : cylindriccanonicalordering ] ) ; the other ones are called _ inner _ vertices ( white circles in fig .  [",
    "fig : cylindriccanonicalordering ] ) and edges .     and @xmath35 .",
    "left : annular representation .",
    "right : @xmath36-periodic representation.,width=377 ]    [ [ periodic - drawings . ] ] periodic drawings .",
    "+ + + + + + + + + + + + + + + + + +    here we consider the problem of drawing a cylindric triangulation on the flat cylinder and drawing a toroidal triangulation on the flat torus . for @xmath37 and @xmath38 , the _ flat cylinder _ of width @xmath39 and height",
    "@xmath40 is the rectangle @xmath41\\times[0,h]$ ] where the vertical sides are identified . a point on this cylinder",
    "is located by two coordinates @xmath42 and @xmath43 $ ] .",
    "flat torus _ of width @xmath39 and height @xmath40 is the rectangle @xmath41\\times[0,h]$ ] where both pairs of opposite sides are identified . a point on this torus",
    "is located by two coordinates @xmath42 and @xmath44 .",
    "assume from now on that @xmath39 and @xmath40 are positive integers .",
    "for a cylindric triangulation @xmath0 , a _ periodic straight - line drawing _ of @xmath0 of width @xmath39 and height @xmath40 is a crossing - free straight - line drawing ( edges are drawn as segments , two edges can meet only at common end - points ) of @xmath0 on the flat cylinder of width @xmath39 and height @xmath40 , such that the vertex - coordinates are in @xmath2 $ ] ( i.e. , are integers ) .",
    "similarly for a toroidal triangulation @xmath0 , a _ periodic straight - line drawing _ of @xmath0 of width @xmath39 and height @xmath40 is a crossing - free straight - line drawing ( edges are drawn as segments , two edges can meet only at common end - points ) of @xmath0 on the flat torus of width @xmath39 and height @xmath40 , such that the vertex - coordinates are in @xmath6 ( i.e. , are integers ) .",
    "a _ cylindric triangulation _ is a cylindric map with no loops nor multiple edges and such that all non - boundary faces are triangles ( in section  [ sec : allow ] we will allow such triangulations to have @xmath45-cycles or @xmath46-cycles separating the two boundary - faces ) .",
    "we introduce at first a notion of canonical ordering for cylindric triangulations :    [ def : cylindriccanonicalordering ] let @xmath0 be a cylindric triangulation with boundary - faces @xmath31 and @xmath32 , and such that the cycle @xmath33 has no chords ( i.e. , there is no edge that is not on @xmath33 and has both ends on @xmath33 ) .",
    "an ordering @xmath47 of the vertices of @xmath48 is called a _ ( cylindric ) canonical ordering _",
    "if it satisfies :    * for each @xmath49 the map @xmath50 induced by @xmath33 and by the vertices @xmath51 is a cylindric triangulation . * the other boundary - face @xmath52 of @xmath50 ( the one different from @xmath31 ) , whose contour is denoted @xmath53 , contains @xmath32 ( to clarify the meaning of  @xmath52 contains @xmath32 \" , remember that a cylindric map is a special kind of map on the sphere ; since @xmath50 is a submap of @xmath0 , any face of @xmath50 is made of a set of faces of @xmath0 ) . *",
    "the vertex @xmath54 is on @xmath53 , and its neighbours in @xmath55 are consecutive on @xmath56 .",
    "the notion of canonical ordering makes it possible to construct a cylindric triangulation @xmath0 incrementally , starting from @xmath57 and adding one vertex ( and incident edges ) at each step .",
    "this is similar to canonical orderings for planar triangulations , as introduced by de fraysseix , pach and pollack  @xcite ( the main difference is that for a planar triangulation one starts with @xmath58 being an edge , called the _ base - edge _ , whereas here one starts with @xmath58 being a cycle , seen as a cylindric map without non - boundary faces ) .",
    "* shelling procedure .",
    "* we now describe a shelling procedure to compute a canonical ordering of a cylindric triangulation @xmath0 with boundary - faces @xmath59 . at each step",
    "the graph formed by the remaining vertices is a cylindric triangulation , one boundary face remains @xmath31 all the way , while the other boundary - face ( initially @xmath32 ) has its contour , denoted by @xmath53 , getting closer to @xmath33 .",
    "a vertex @xmath60 is _ free _ if @xmath61 is incident to no chord of @xmath53 and if @xmath62 ( see fig .  [",
    "fig : shelling ] top left ) .",
    "the shelling procedure goes as follows ( @xmath1 is the number of vertices in @xmath48 ) : for @xmath63 from @xmath1 to @xmath45 , choose a free vertex @xmath61 on @xmath53 , assign @xmath64 , and then delete @xmath61 together with all its incident edges .",
    "the existence of a free vertex at each step follows from the same argument as in the planar case  @xcite .",
    "indeed , if there is no chord incident to @xmath53 , then any vertex @xmath65 is free , while if there is a chord @xmath28 for @xmath53 , then the set of chords incident to @xmath53 forms a system of archs ( relative to @xmath53 ) .",
    "if we look at a chord @xmath66 that is `` innermost '' ( i.e. , seen as an arch , no other arch is nested inside ) , then the path between @xmath67 and @xmath61 on @xmath53 contains at least one vertex , which has to be free ( see fig .",
    "[ fig : shelling ] top right ) .",
    ".,width=491 ]    * underlying forest and dual forest . * given a cylindric triangulation @xmath0 ( with boundary faces @xmath31 and @xmath32 ) endowed with a canonical ordering @xmath68 , define the _ underlying forest _",
    "@xmath69 for @xmath68 as the oriented subgraph of @xmath0 where each vertex @xmath70 has outdegree @xmath71 , and where each @xmath72 has exactly one outgoing edge , which is connected to the adjacent vertex of @xmath61 of largest label in @xmath68 .",
    "the forest @xmath69 can be computed on the fly during the shelling procedure : when treating a free vertex @xmath54 , for each neighbour @xmath61 of @xmath54 such that @xmath73 , add the edge @xmath74 to @xmath69 , and orient it from @xmath61 to @xmath54 .",
    "since the edges are oriented in increasing labels , @xmath69 is an oriented forest ; it spans all vertices of @xmath75 and has its roots on @xmath34 . the _ augmented map _",
    "@xmath76 is obtained from @xmath0 by adding a vertex @xmath77 inside @xmath31 , a vertex @xmath78 inside @xmath32 , and connecting all vertices around @xmath31 to @xmath77 and all vertices around @xmath32 to @xmath78 ( thus triangulating the interiors of @xmath31 and @xmath32 , see fig .",
    "[ fig : shelling ] bottom middle ) .",
    "define @xmath79 as @xmath69 plus all edges incident to @xmath77 and all edges incident to @xmath78 .",
    "define the _ dual forest _",
    "@xmath80 for @xmath68 as the graph formed by the vertices of @xmath81 ( the dual of @xmath76 ) and by the edges of @xmath81 that are dual to edges not in @xmath79 .",
    "since @xmath79 is a spanning connected subgraph of @xmath76 , @xmath80 is a spanning forest of @xmath81 .",
    "precisely , each of the trees ( connected components ) of @xmath80 is rooted at a vertex `` in front of '' each edge of @xmath31 , and the edges of the tree can be oriented toward this root - vertex ( see fig .",
    "[ fig : shelling ] bottom right ) .",
    "* drawing algorithm . * given a cylindric triangulation @xmath0 such that @xmath33 has no chord , we first compute a canonical ordering of @xmath0 , and then draw @xmath0 in an incremental way .",
    "we start with a cylinder of width @xmath82 and height @xmath71 ( i.e. , a circle of length @xmath82 ) and draw the vertices of @xmath33 equally spaced on the circle ( space @xmath46 between two consecutive vertices ) .",
    "then the strategy for each @xmath83 is to compute the drawing of @xmath50 out of the drawing of @xmath55 by first stretching the cylinder ( increasing the width by @xmath46 ) and then placing the vertex @xmath54 and its incident edges ( in @xmath50 ) in a planar way .",
    "define the _",
    "@xmath36-span _ of an edge @xmath28 in the cylindric drawing as the number of columns @xmath84\\times[0,+\\infty]$ ] that meet the interior of @xmath28 ( we have no need for a more complicated definition since , in our drawings , a column will never meet an edge more than once ) .",
    "( each one along a path in the dual forest ) are inserted in order to make the slopes of @xmath85 and @xmath86 smaller than @xmath45 in absolute value .",
    "then the new vertex and its edges connected to the upper boundary can be drawn in a planar way.,width=510 ]    consider the dual forest @xmath80 for the canonical ordering restricted to @xmath55 .",
    "note that the set of vertices of @xmath56 that are neighbours of @xmath54 form a path on @xmath56 . traversing this path @xmath87 with the boundary - face of @xmath55 ( the one different from @xmath31 ) to the left ,",
    "let @xmath85 be the first edge of @xmath87 and @xmath86 be the last edge of @xmath87 .",
    "let also @xmath88 be the starting vertex and let @xmath89 be the ending vertex of @xmath87 .",
    "let @xmath90 ( resp .",
    "@xmath91 ) be the path in @xmath80 from @xmath92 ( resp .",
    "@xmath93 ) to the root in its connected component ( which is a vertex `` in front of '' an edge of @xmath31 ) ) .",
    "we stretch the cylinder by inserting a vertical strip of length @xmath45 along @xmath90 and another along @xmath91 ( see fig .  [",
    "fig : one_step ] ) .",
    "this comes down to increasing by @xmath45 the @xmath36-span of each edge of @xmath50 dual to an edge in @xmath90 , and then increasing by @xmath45 the @xmath36-span of each edge dual to an edge in @xmath94 ( note that @xmath90 and @xmath91 are not necessarily disjoint , in which case the @xmath36-span of an edge dual to an edge in @xmath95 is increased by @xmath46 ) . after these stretching operations ,",
    "whose effect is to make the slopes of @xmath85 and @xmath86 strictly smaller than @xmath45 in absolute value , we insert ( as in the planar case ) the vertex @xmath54 at the intersection of the ray of slope @xmath45 starting from @xmath88 and the ray of slope @xmath96 starting from @xmath89 , and we connect @xmath54 to all vertices of @xmath87 by segments and @xmath86 smaller than @xmath45 is formulated as a shift of certain subgraphs described in terms of the underlying forest @xmath69 .",
    "the extension of this formulation to the cylinder would be quite cumbersome .",
    "we find the alternative formulation with strip insertions more convenient for the cylinder ( it also gives rise to a very easy linear - time implementation ) . ] .",
    "these two rays actually intersects at a grid point since the manhattan distance between any two vertices on @xmath56 is even .",
    "[ fig : drawingoncylinder ] shows the execution of the algorithm on the example of fig .",
    "[ fig : cylindriccanonicalordering ] .    ) to compute an @xmath36-periodic drawing of a cylindric triangulation ( no chordal edges incident to @xmath31 ) .",
    "the vertices are treated in increasing label ( the canonical ordering is the one computed in fig .",
    "[ fig : shelling]).,width=498 ]    [ thm : cylindricdrawing1 ] for each cylindric triangulation @xmath0 with no chord incident to @xmath33 , one can compute in linear time a crossing - free straight - line drawing of @xmath0 on an @xmath36-periodic regular grid @xmath15 $ ] where with @xmath1 the number of vertices of @xmath0 and @xmath5 the ( graph-)distance between the two boundaries @xmath97 and @xmath4 , such that : every @xmath98 has @xmath99 ( so every edge in @xmath33 has slope @xmath71 ) , and every edge belonging to @xmath100 has slope @xmath101 .",
    "the fact that the drawing remains crossing - free relies on the slope - property for the upper boundary and on the following inductive property , which is easily shown to be maintained at each step @xmath63 from @xmath45 to @xmath1 :    * pl * : for each edge @xmath28 on @xmath53 ( the upper boundary of @xmath50 ) , let @xmath102 be the path in @xmath80 from @xmath103 to the root , let @xmath104 be the set of edges dual to edges in @xmath102 , and let @xmath105 be any nonnegative integer . then the drawing remains planar when successively increasing by @xmath105 the @xmath36-span of all edges of @xmath104 , for all @xmath106 .",
    "we now prove the bounds on the grid - size . if @xmath107 then the initial cylinder is @xmath108 ; and at each vertex insertion , the grid - width grows by @xmath46 . hence @xmath97 .",
    "in addition , due to the slope conditions ( slopes of boundary - edges are at most @xmath45 in absolute value ) , the @xmath109-span ( vertical span ) of every edge @xmath28 is not larger than the current width at the time when @xmath28 is inserted in the drawing .",
    "hence , if we denote by @xmath61 the vertex of @xmath34 that is closest ( at distance @xmath5 ) to @xmath33 , then the ordinate of @xmath61 is at most @xmath110 . and due to the slope conditions , the vertical span of @xmath34 is at most @xmath111 .",
    "hence the grid - height is at most @xmath112 .",
    "the linear - time complexity is shown next .",
    "* linear - time implementation .",
    "* an important remark is that , instead of computing the @xmath36-coordinates and @xmath109-coordinates of vertices in the drawing , one can compute the @xmath109-coordinates of vertices and the @xmath36-span of edges ( as well as the knowledge of which extremity is the left - end vertex and which extremity is the right - end vertex ) . in a first pass ( for @xmath63 from @xmath45 to @xmath1 )",
    "one computes the @xmath109-coordinate of vertices and the @xmath36-span @xmath113 of each edge @xmath114 at the time @xmath115 when it appears on @xmath50 ( as well one gets to know which extremity of @xmath28 is the left - end vertex ) . afterwards",
    "if @xmath116 , the @xmath36-span of @xmath28 might further increase due to insertion of new vertices .",
    "precisely , let @xmath117 be a vertex inserted afterwards ( i.e. , @xmath118 ) , and ( with the notations @xmath119 of the drawing algorithm description ) let @xmath120 and @xmath121 .",
    "note that @xmath28 is stretched due to the insertion of the strip along @xmath90 iff @xmath122 is in the subtree @xmath123 of @xmath80 formed by the edges descending from @xmath103 .",
    "similarly @xmath28 is stretched due to the insertion of the strip along @xmath94 iff @xmath124 is in @xmath123 . to state it more clearly",
    ", each edge in @xmath123 is responsible for an increase ( by @xmath45 ) of the @xmath36-span of @xmath28 .",
    "hence the total @xmath36-span of each edge @xmath114 is given by @xmath125 , where @xmath126 if @xmath127 , and , if @xmath116 , @xmath128 is the number of edges in @xmath123 . since all quantities @xmath128",
    "can easily be computed in linear time , this gives a linear - time implementation .    .",
    "to make enough space to place the component under @xmath129 , one takes @xmath130 ( instead of @xmath46 ) as the initial @xmath36-span of @xmath129.,width=468 ]    * allowing for chordal edges at @xmath131 .",
    "* we finally explain how to draw a cylindric triangulation when allowing for chords incident to @xmath132 ; it is good to view @xmath32 as the top boundary - face and @xmath31 as the bottom - boundary face ( and imagine a standing cylinder ) . for each chordal edge @xmath28 for the cycle @xmath133 , the _ component under @xmath28 _ is the face - connected part of @xmath0 that lies below @xmath28 ; such a component is a quasi - triangulation ( polygonal outer face , triangular inner faces ) rooted at the edge @xmath28 .",
    "a chordal edge @xmath28 of @xmath133 is _ maximal _ if the component @xmath134 under @xmath28 is not strictly included in the component under another chordal edge for @xmath133 .",
    "the _ size _ of such an edge @xmath28 is defined as @xmath135 .",
    "( the size @xmath136 is actually the width of the drawing of @xmath134 using the fpp algorithm ) .",
    "if we delete the component under each maximal chordal edge ( i.e. , delete everything from the component except for the chordal edge itself ) we get a new bottom cycle @xmath137 that is chordless , so we can draw the reduced cylindric triangulation @xmath138 using the algorithm of proposition  [ thm : cylindricdrawing1 ] . as we have seen in section  [ sec : cylindric_drawing ] ( implementation paragraph ) , for each edge @xmath28 of @xmath137 , the initial @xmath36-stretch is @xmath139 and then the further increase @xmath128 of the @xmath36-stretch equals the number of edges descending from @xmath103 in the dual forest @xmath80 . note that we have actually some freedom to choose the initial @xmath36-stretch @xmath113 of each edge @xmath140 ( just it has to be a positive even number since at each step of the incremental algorithm the vertices of the current upper boundary have to be at even manhattan distance ) . if @xmath140 is on @xmath133 we take @xmath139 . if @xmath140 is not on @xmath133 ( i.e. , @xmath28 was a maximal chordal edge for @xmath133 ) , we take for @xmath113 the minimal even positive number such that @xmath141 , i.e. , @xmath142 . hence ,",
    "at the end of the execution of the drawing of @xmath138 , the length @xmath143 of each maximal chord @xmath28 satisfies @xmath144 .",
    "then for each maximal chord @xmath28 of @xmath133 , we draw the component @xmath134 under @xmath28 using the fpp algorithm . this drawing has width @xmath136 , with @xmath28 as horizontal bottom edge of length @xmath136 and with the other outer edges of slopes @xmath101 .",
    "we shift the left - extremity of @xmath28 so that the drawing of @xmath134 gets width @xmath145 , then we rotate the drawing of @xmath134 by @xmath146 degrees and plug it into the drawing of @xmath138 ( see fig .",
    "[ fig : drawingwithchords ] ) .",
    "the overall drawing of @xmath0 is clearly planar .",
    "we obtain :    [ thm : cylindricdrawingbis ] for each cylindric triangulation @xmath0 , one can compute in linear time a crossing - free straight - line drawing of @xmath0 on an @xmath36-periodic regular grid @xmath147 $ ] , where with @xmath1 the number of vertices and @xmath5 the ( graph- ) distance between the two boundaries @xmath3 and @xmath4 .",
    "the drawing is x - monotone ( the intersection with any vertical line is an interval ) and the slopes of boundary - edges are at most @xmath45 in absolute value .",
    "let @xmath0 be a toroidal triangulation .",
    "a _ non - contractible cycle _ of @xmath0 is a cycle of edges of @xmath0 that does not delimit a topological disk .",
    "note that a pair @xmath148 of oriented noncontractible cycles that are parallel ( i.e. , are homotopic and are oriented in a parallel way ) delimits a cylindric triangulation @xmath149 , which is formed by the faces to the right of @xmath150 and to the left of @xmath151 .",
    "the pair @xmath148 is called a _ tambourine _",
    "if the edges dual to those of @xmath152 form a non - contractible cycle @xmath153 that is homotopic to @xmath150 and @xmath151 ( see dark - blue faces and dashed edges in fig .  [",
    "fig : toroidaldrawing ] top - middle ) .",
    "the edges of @xmath152 are said to be _ inside _ the tambourine .",
    "it can be shown ( see  @xcite , the master s thesis of the third author arnaud labourel , and the next paragraph ) that for each non - contractible cycle @xmath154 of @xmath0 , there exists a tambourine whose two cycles are parallel to @xmath154 . deleting the edges that are strictly inside the tambourine , one obtains a cylindric triangulation @xmath138 with @xmath150 and @xmath151 as the contours of the boundary - faces . note also that the distance @xmath5 between @xmath150 and @xmath151 is smaller than the length of a shortest non - contractible cycle not parallel to @xmath154 .",
    "we now apply the algorithm of theorem  [ thm : cylindricdrawingbis ] to @xmath138 . if we augment the height @xmath40 of the drawing to @xmath155 , and then wrap the @xmath36-periodic grid @xmath2 $ ] into a periodic grid @xmath156 , and finally insert the edges inside the tambourine as segments in the unique way such that , looking from bottom to top , at least one edge in @xmath149 goes strictly to the right , and all edges going strictly to the right have @xmath36-span at most @xmath39 ; in this way it is easy to check that the @xmath36-span of all edges in @xmath149 is at most @xmath39 . ] , then the slope properties ( edges on @xmath150 and @xmath151 have slope at most @xmath45 in absolute value while edges inside the tambourine have slopes greater than @xmath45 in absolute value ) ensure that the resulting drawing is crossing - free ( see fig .",
    "[ fig : toroidaldrawing ] ) . observe that we can choose @xmath154 so that the graph - distance between the two boundaries @xmath150 and @xmath151 ( in @xmath138 ) is smaller than the length @xmath87 of a shortest non - contractible cycle in @xmath0 ; and this choice for @xmath154 can be done without computing a shortest non - contractible cycle . indeed ,",
    "let @xmath157 be a basis of non - contractible cycles ( computable in linear time , using for instance a cut - graph ) . denoting by @xmath158 a shortest non - contractible cycle of @xmath0 , for sure at least one of @xmath159 or @xmath160 is not parallel to @xmath158 .",
    "hence , for @xmath159 or for @xmath160 , the distance between the boundary - cycles ( after deleting edges of the parallel tambourine ) is smaller than @xmath161 . in other words",
    "if we choose the one cycle ( among @xmath157 ) that yields the smaller distance between the two boundaries of @xmath138 , then this distance will be smaller than @xmath87 .",
    "we obtain :    [ cor : toroidaldrawing ] for each toroidal triangulation @xmath0 , one can compute in linear time a crossing - free straight - line drawing of @xmath0 on a periodic regular grid @xmath6 , where ( with @xmath1 the number of vertices and @xmath87 the length of a shortest non - contractible cycle ) @xmath3 and @xmath162 . since @xmath163 ( as shown in  @xcite ) , the grid area is @xmath10 .    *",
    "existence of a tambourine .",
    "* for the sake of completeness",
    "we include a proof of existence of a tambourine , which slightly extends the proof given in the master s thesis of arnaud labourel . a toroidal map is called _",
    "weakly @xmath11-connected _ if its periodic representation in the plane is @xmath11-connected .",
    "let @xmath0 be such a map and let @xmath154 be a non - contractible cycle of @xmath0 .",
    "we are going to show that @xmath0 has a tambourine parallel to @xmath154 .",
    "let @xmath138 be the cylindric map obtained after cutting @xmath0 along @xmath154 ; we take the annular representation of @xmath138 , calling @xmath150 ( resp .",
    "@xmath151 ) the copy of @xmath154 that is the outer ( resp .",
    "inner ) boundary .",
    "let @xmath153 be the smallest ( in terms of the enclosed area ) cycle that strictly encloses @xmath151 ( i.e. , encloses @xmath151 and is vertex - disjoint from @xmath151 ) .",
    "let @xmath164 be the largest ( in terms of the enclosed area ) cycle that is strictly enclosed in @xmath153 ( i.e. , is enclosed by @xmath153 and is vertex - disjoint from @xmath153 ) .",
    "note that by minimality @xmath153 has no chord inside , and by maximality @xmath164 has no chord outside .",
    "hence , if we can show that there is no vertex in the area @xmath165 ( strictly ) between @xmath153 and @xmath164 , then we can conclude that , in @xmath0 , @xmath153 and @xmath164 form a tambourine parallel to @xmath154 .",
    "assume there is a vertex @xmath61 in @xmath165 .",
    "vertex of attachment for @xmath153 _ a vertex @xmath166 such that there is a path from @xmath61 to @xmath39 visiting only vertices of @xmath165 before reaching @xmath39 .",
    "again by minimality of @xmath153 it is easy to see that there is a unique vertex of attachment @xmath167 for @xmath153 . similarly",
    "( by maximality of @xmath164 ) there is a unique vertex of attachment @xmath168 for @xmath164 . then ( again by minimality of @xmath153 and maximality of @xmath164 ) there is a closed curve @xmath87 that meets @xmath138 only at the vertices @xmath169 , and such that the interior of @xmath87 contains @xmath61 but does not contain any of the two boundary - faces .",
    "such a curve @xmath87 yields a @xmath46-separator in the periodic representation of @xmath0 , a contradiction .",
    "for a cylindric map , a _ non - contractible cycle _ is a cycle that separates the two boundary - faces ( i.e. , there is a boundary - face on one side and a boundary - face on the other side of the cycle ) .",
    "other cycles are called _",
    "contractible_. a _ weakly simple _ cylindric triangulation is a cylindric map whose non - boundary faces are triangles , whose contractible cycles have length at least @xmath11 , and such that each vertex has at most one incident non - contractible loop . a",
    "_ weakly - simple toroidal triangulation _ is a toroidal map with triangular faces , with all contractible cycles of length at least @xmath11 , and such that any two ( non - contractible ) loops incident to the same vertex can not be homotopic .",
    "these are the necessary and sufficient conditions for the triangulation ( whether on the cylinder or on the torus ) to have no loops nor multiple edges in the periodic representation ; hence these are the conditions under which one can aim at a periodic crossing - free straight - line drawing . for weakly simple cylindric triangulations without loops ( nor chords incident to @xmath33 ) , exactly the same shelling procedure and iterative drawing algorithm can be taken as for simple cylindric triangulations . in case",
    "there are loops we have to explain how to deal with them ( see fig .",
    "[ fig : allowloops ] for an example ) . for the shelling procedure , if the current upper boundary @xmath53 is a loop call @xmath61 the incident vertex then one deletes the loop and immediately takes @xmath61 as the next free vertex ( the fact that @xmath61 is free is due to the fact that there is no other loop at @xmath61 ) . in the drawing procedure ( how to insert @xmath61 and its incident loop into the drawing ) , one first adds @xmath61 without its loop ( by a classical one - step iteration of the drawing algorithm , involving two strip insertions ) , and then one draws the loop at @xmath61 as an horizontal segment spreading over the whole width of the current periodic drawing ( the loop is added without inserting any vertical strip ) .",
    "finally one can deal with chords incident to @xmath33 in the same way as for simple cylindric triangulations . about weakly simple toroidal triangulated maps , the procedure is also the same as for simple toroidal triangulations since the above proof of existence of a tambourine holds in that case . and the grid bounds ( for the cylindre and for the torus ) are the same as for simple triangulations .",
    "* acknowledgments . *",
    "the authors thank d. gonalves and b. lvque , and ( independently ) b. mohar for interesting discussions about toroidal schnyder woods , and n. bonichon for explanations on the computation of a tambourine in a toroidal triangulation ."
  ],
  "abstract_text": [
    "<S> we extend the notion of canonical orderings to cylindric triangulations . </S>",
    "<S> this allows us to extend the incremental straight - line drawing algorithm of de fraysseix , pach and pollack to this setting . </S>",
    "<S> our algorithm yields in linear time a crossing - free straight - line drawing of a cylindric triangulation @xmath0 with @xmath1 vertices on a regular grid @xmath2 $ ] , with @xmath3 and @xmath4 , where @xmath5 is the ( graph- ) distance between the two boundaries . as a by - product </S>",
    "<S> , we can also obtain in linear time a crossing - free straight - line drawing of a toroidal triangulation with @xmath1 vertices on a periodic regular grid @xmath6 , with @xmath3 and @xmath7 , where @xmath8 is the length of a shortest non - contractible cycle . </S>",
    "<S> since @xmath9 , the grid area is @xmath10 . </S>",
    "<S> our algorithms apply to any triangulation ( whether on the cylinder or on the torus ) with no loops nor multiple edges in the periodic representation . </S>"
  ]
}
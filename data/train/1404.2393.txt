{
  "article_text": [
    "low - density parity - check ( ldpc ) convolutional codes @xcite , also known as spatially coupled ldpc ( sc - ldpc ) codes @xcite , can be obtained from a sequence of individual ldpc block codes by distributing the edges of their tanner graphs over several adjacent blocks @xcite .",
    "the resulting spatially coupled codes exhibit a threshold saturation phenomenon , which has attracted a lot of interest in the past few years : the threshold of an iterative belief propagation ( bp ) decoder , obtained by density evolution ( de ) , is improved to that of the optimal maximum - a - posteriori ( map ) decoder @xcite . as a consequence , it is possible to achieve capacity with simple regular ldpc codes , which show without spatial coupling a significant gap between bp and map threshold .",
    "the concept of spatial coupling is not limited to ldpc codes .",
    "spatially coupled turbo - like codes , for example , can be obtained by replacing the block - wise permutation of a turbo code by a convolutional permutation @xcite . in combination with a windowed decoder for the component code ,",
    "a continuous streaming implementation is possible @xcite .",
    "the self - concatenated convolutional codes in @xcite are closely related structures as well .",
    "a variant of spatially coupled self - concatenated codes with block - wise processing , called laminated codes was considered in @xcite .",
    "they have the advantage that an implementation similar to uncoupled turbo codes is possible , without the need for a streaming implementation of the decoder . a block - wise version of braided convolutional codes @xcite , a class of spatially coupled codes with convolutional components , has recently been analyzed in @xcite .",
    "the aim of this paper is to investigate the impact of spatial coupling on the thresholds of _ classical _ turbo codes . for this purpose",
    "we introduce some special block - wise spatially coupled ensembles of parallel concatenated codes ( sc - pccs ) and serially concatenated codes ( sc - sccs ) , which are spatially coupled versions of the ensembles by berrou _ et al .",
    "_ @xcite and benedetto _ et al . _",
    "@xcite , respectively . with a slight abuse of the term ,",
    "we call both parallel and serial ensembles spatially coupled turbo codes ( sc - tcs ) . for these ensembles",
    "we derive exact de equations from the transfer functions of the component decoders @xcite and perform a threshold analysis for the binary erasure channel ( bec ) , analogously to @xcite . to compare the results for sc - pcc and sc - scc ensembles with each other some ensembles with puncturing",
    "are also considered .",
    "the bp thresholds of the different ensembles are presented and compared to the map thresholds for different coupling memories .",
    "in this section , we introduce spatially coupled turbo codes .",
    "we first describe spatial coupling for both parallel and serially concatenated codes , and then address their iterative decoding .",
    "we consider the spatial coupling of @xmath0 parallel concatenated codes , built from the parallel concatenation of two rate-@xmath1 recursive systematic convolutional encoders , denoted by @xmath2 and @xmath3 ( see fig .  [ encoder ] ) . for simplicity ,",
    "we describe spatial coupling with coupling memory @xmath4 .",
    "consider a collection of @xmath5 turbo encoders at time instants @xmath6 , as illustrated in fig .",
    "[ encoder](a ) .",
    "@xmath5 is called the coupling length .",
    "we denote by @xmath7 the information sequence , and by @xmath8 and @xmath9 the code sequences of @xmath10 and @xmath11 , respectively , at time @xmath12 .",
    "the output of the turbo encoder is given by the tuple @xmath13 . a sc - pcc ensemble ( with @xmath4 )",
    "is obtained by connecting each turbo code in the chain to the one on the left and to the one on the right as follows .",
    "divide the information sequence @xmath14 into two sequences , @xmath15 and @xmath16 by a demultiplexer .",
    "also divide a copy of the information sequence , which is properly reordered by the permutation @xmath17 , into two sequences , @xmath18 and @xmath19 by another demultiplexer . at time @xmath12 , the information sequence at the input of encoder @xmath2 is @xmath20 , properly reordered by a permutation @xmath21 .",
    "likewise , the information sequence at the input of encoder @xmath3 is @xmath22 , properly reordered by the permutation @xmath23 .        in fig .",
    "[ encoder ] the blue lines represent the information bits from the current time slot @xmath12 that are used in the next time slot @xmath24 and the green lines represent the information bits from the previous time slot @xmath25 . in order to terminate the encoder of the sc - pcc to the zero state ,",
    "the information sequences at the end of the chain are chosen in such a way that the output sequence at time @xmath26 becomes @xmath27 .",
    "analogously to conventional convolutional codes this results in a rate loss that becomes smaller as @xmath5 increases .    using the procedure described above a coupled chain ( a convolutional structure over time ) of @xmath5 turbo encoders with coupling memory @xmath4",
    "is obtained .",
    "an extension to larger coupling memories @xmath28 is presented in section  [ secmem ] .",
    "we consider the coupling of serially concatenated codes ( sccs ) built from the serial concatenation of two rate-@xmath1 recursive systematic convolutional encoders .",
    "the overall code rate of the uncoupled ensemble is therefore @xmath29 . a block diagram of the encoder is depicted in fig .",
    "[ encoder](b ) for coupling memory @xmath4 . as for sc - pccs ,",
    "let @xmath7 be the information sequence at time @xmath12",
    ". also , denote by @xmath30 and @xmath31 the encoded sequence at the output of the outer and inner encoder , respectively , and by @xmath32 the sequence @xmath33 after permutation .",
    "the sc - scc with @xmath4 is constructed as follows .",
    "consider a collection of @xmath5 sccs at time instants @xmath6 .",
    "divide the sequence @xmath32 into two parts , @xmath34 and @xmath35 . then , at time @xmath12 the sequence at the input of the inner encoder @xmath36 is @xmath37 . in order to terminate the encoder of the sc - scc to the zero state , the information sequences at the end of the chain are chosen in such a way that the output sequence at time @xmath26 becomes @xmath38 .    using this construction method ,",
    "a coupled chain of @xmath5 sccs with coupling memory @xmath4 is obtained . an extension to larger coupling memories @xmath28",
    "is presented in section  [ secmem ] .      as standard turbo codes",
    ", sc - tcs can be decoded using iterative message passing ( belief propagation ) decoding , where the component encoders of each turbo code are decoded using the bcjr algorithm .",
    "the bp decoding of sc - pccs can be easily visualized with the help of fig .",
    "[ factorp ] , which shows the factor graph of a single section of the sc - pcc .",
    "we denote by @xmath39 and @xmath40 the decoder of the upper and lower encoder , respectively .",
    "the decoder @xmath39 receives at its input information from the channel for both systematic and parity bits .",
    "furthermore , it also receives a - priori information on the systematic bits from other decoders .",
    "as described above , at time @xmath12 the information sequence at the input of @xmath2 consists of two parts , @xmath41 and @xmath42 .",
    "correspondingly , @xmath39 at time instant @xmath12 receives a priori information from @xmath40 at time instants @xmath25 , @xmath12 and @xmath24 .",
    "based on the information from the channel and from the companion decoders , @xmath39 computes the extrinsic information on the systematic bits using the bcjr algorithm .",
    "since the structure of sc - pccs is symmetric , the decoding of the lower encoder is performed in an identical manner .",
    "similarly to sc - pccs , the decoding sc - sccs can also be described with the help of a factor graph .",
    "the factor graph of a section of a sc - scc with @xmath4 is shown in fig .",
    "[ factors ] .",
    "in this section , we analyze the asymptotic performance of sc - tcs using de .",
    "we consider transmission over a bec with erasure probability @xmath43 , denoted by bec@xmath44 .",
    "we derive the exact de equations for both ( unpunctured ) sc - pccs and sc - sccs and discuss the modification of the equations when puncturing is applied for achieving higher rates .",
    "let @xmath45 and @xmath46 be the average ( extrinsic ) erasure probability on the systematic bits at the output of the upper and lower decoder , respectively .",
    "likewise , we define @xmath47 and @xmath48 for the parity bits .    the erasure probabilities @xmath45 and @xmath47 at iteration @xmath49 and time instant @xmath12 can be written as @xmath50 where @xmath51 and @xmath52 and @xmath53 denote the upper decoder transfer functions for the systematic and parity bits , respectively .",
    "note that the upper decoder transfer function at time @xmath12 depends on both the channel erasure probability and the extrinsic erasure probability on the systematic bits from the lower decoder at time instants @xmath12 , @xmath25 and @xmath24 , due to the coupling . because of the symmetric design , the lower decoder update is identical to that of the upper decoder by interchanging @xmath54 and @xmath55 , and substituting @xmath56 in ( [ eq : upperupdates])([eq : upperupdate3 ] ) .    finally , the a - posteriori erasure probability on the information bits at time @xmath12 and iteration @xmath49 is @xmath57    for the bec it is possible to compute analytic expressions for the exact ( extrinsic ) probability of erasure of convolutional encoders , using the method proposed in @xcite and @xcite . here",
    ", we use this method to derive the exact expressions for the transfer functions of the component decoders .",
    "de is then performed by tracking the evolution of @xmath58 with the number of iterations , with the initialization @xmath59 for @xmath60 and @xmath61 , and 1 otherwise .",
    "the bp threshold corresponds to the maximum channel parameter @xmath43 for which successful decoding is achieved , i.e. , @xmath58 tends to zero for all time instants @xmath12 as @xmath49 tends to infinity .",
    "similarly to the parallel case , de equations can be derived for sc - sccs .",
    "let @xmath62 and @xmath63 be the average ( extrinsic ) erasure probability on the systematic bits at the output of the outer and inner decoder , respectively .",
    "likewise , we define @xmath64 and @xmath65 for the parity bits at the output of the outer and inner decoder , respectively .    the erasure probabilities @xmath63 and",
    "@xmath65 can be written as @xmath66 where @xmath67 and @xmath68 and @xmath69 denote the inner decoder transfer functions for the systematic and parity bits , respectively .",
    "likewise , @xmath62 and @xmath64 are @xmath70 where @xmath71    the a - posteriori erasure probability on the information bits at time @xmath12 after @xmath49 iterations is @xmath72    de is then performed by tracking the evolution of @xmath58 with the number of iterations , with the initialization @xmath73 for @xmath60 and @xmath61 and 1 otherwise .",
    "higher rates can be obtained by applying puncturing . here , we consider random puncturing .",
    "assume that a code sequence @xmath74 is randomly punctured such that a fraction @xmath75 $ ] of the coded bits survive after puncturing , and then transmitted over a bec@xmath44 .",
    "@xmath76 will be referred to as the _ permeability rate_. for the bec , puncturing is equivalent to transmitting @xmath74 through a bec@xmath77 resulting from the concatenation of two becs , bec@xmath44 and bec@xmath78 , where @xmath79 .",
    "the de equations derived in the previous subsections can be easily modified to account for puncturing .",
    "consider first the case of sc - pccs .",
    "we consider only puncturing of the parity bits , and that both @xmath2 and @xmath3 are equally punctured with permeability rate @xmath76 .",
    "the code rate of the ( uncoupled ) punctured parallel concatenated code ( pcc ) is @xmath80 .",
    "this results in a slight modification of the de equations , substituting @xmath81 in ( [ eq : upperupdates ] ) , ( [ eq : upperupdatep ] ) .    for sc - sccs",
    "we consider puncturing as proposed in @xcite , which results in better sccs as compared to standard sccs .",
    "let @xmath82 and @xmath83 be the permeability rate of the systematic and parity bits , respectively , of @xmath84 sent directly to the channel ( see ( * ? ? ?",
    "* fig .  1 ) ) , and @xmath85 the permeability rate of the parity bits of @xmath36 .",
    "the code rate of the ( uncoupled ) punctured , i.e. , the overall code is systematic . ]",
    "scc is @xmath86 .",
    "the de for punctured sc - sccs is obtained by substituting @xmath87 in ( [ eq : lowerupdates ] ) , ( [ eq : lowerupdatep ] ) , and modifying ( [ eq : innerupdate3 ] ) to @xmath88 and ( [ eq : outerupdates ] ) , ( [ eq : outerupdatep ] ) to @xmath89 where @xmath90 is given in ( [ eq : outerupdate3 ] ) and @xmath91",
    "the results from the previous sections can easily be generalized to larger coupling memories @xmath92 .",
    "let us first consider sc - pccs . in the general case",
    "the information sequences @xmath93 from @xmath94 different time instances are used by the encoders at time @xmath12 .",
    "this is achieved by dividing the information sequence @xmath7 into the sequences @xmath95 , @xmath96 by a multiplexer , and also dividing a properly reordered copy of the information bits into @xmath97 , @xmath98 , which can be accomplished by permutation @xmath99 followed by a multiplexer . at the input of the upper encoder @xmath2 at time @xmath12 the sequences @xmath100 are multiplexed and reordered by the permutation @xmath101 . the lower encoder @xmath3 receives the information sequences @xmath102 , multiplexed and reordered by @xmath103 .",
    "the encoder in fig .  [ encoder](a ) corresponds to the special case @xmath4 .    in the de recursion we now have to modify to @xmath104 and the a - posteriori erasure probability on the information bits at time",
    "@xmath12 and iteration @xmath49 ( [ eq : apppcc ] ) becomes @xmath105    likewise , for sc - sccs the code sequence @xmath106 of @xmath84 is divided randomly into the sequences @xmath107 , @xmath96 .",
    "@xmath36 receives at time @xmath12 the sequences @xmath108 after passing a multiplexer and a permutation .",
    "the encoder in fig .",
    "[ encoder](b ) corresponds to the special case @xmath4 .",
    "equations and in the de recursion are modified accordingly to @xmath109 and @xmath110 the a - posteriori erasure probability on the information bits at time @xmath12 after @xmath49 iterations ( [ eq : appscc ] ) becomes @xmath111",
    "in this section , we give numerical results for some sc - tcs , using the de described in section  [ secde ] and  [ secmem ] . in our examples",
    "we consider sc - tcs with identical rate-@xmath1 , @xmath112-states component encoders .",
    "in particular , we consider component encoders with generator polynomials @xmath113 in octal notation . for notational simplicity , we denote the uncoupled pcc ensemble by @xmath114 and the corresponding coupled ensemble by @xmath115 . for sc - sccs ,",
    "we denote by @xmath116 , and @xmath117 the uncoupled and coupled ensembles , respectively . note that since the two component encoders are identical , @xmath118 and @xmath119 for sc - pccs , and @xmath120 and @xmath121 for sc - sccs .",
    "all presented thresholds correspond to the stationary case @xmath122 , which lower bounds the thresholds for finite @xmath5",
    ". for small @xmath5 the threshold can be considerably larger but at the expense of a higher rate loss .    in table  [ tab : pcc ] we give the bp threshold for several sc - tcs and coupling memory @xmath4 and @xmath123 , denoted by @xmath124 and @xmath125 .",
    "we also report in the table the bp threshold ( @xmath126 ) and the map threshold ( @xmath127 ) of the uncoupled ensembles .",
    "the map threshold was computed applying the area theorem @xcite . in all cases",
    "we observe an improvement of the bp threshold when coupling is applied .",
    "we remark that for @xmath115 the bp threshold of the uncoupled ensemble is already close to the map threshold , therefore the potential gain with coupling is limited .",
    "however , it is interesting to observe that the bp threshold of @xmath115 with @xmath4 is very close to @xmath127 , suggesting threshold saturation .",
    "the results for the ensemble @xmath117 are also given in table  [ tab : pcc ] for coupling memory @xmath4 and @xmath123 .",
    "we observe that the ensemble @xmath116 has a poor bp threshold as compared to the map threshold .",
    "this is a well - known phenomenon for sccs , for which the gap between the bp and the map threshold is large .",
    "a significant improvement is obtained by applying coupling with @xmath4 .",
    "however , there is still a gap between @xmath126 and @xmath127 , meaning that threshold saturation has not occurred .",
    "the bp threshold can be further improved by increasing the coupling memory to @xmath128 . in this case",
    "the bp threshold is very close to the map threshold , suggesting that threshold saturation occurs for large enough coupling memory .",
    "this behavior is similar to the threshold saturation phenomenon of sc - ldpc codes , which occurs for smoothing parameter @xmath129 @xcite .",
    ".thresholds for sc - tcs [ cols=\"^,^,^,^,^,^ \" , ]     [ tab : pccpunctured ]    in table  [ tab : pccpunctured ] we show the bp thresholds of punctured sc - tcs , in order to compare sc - pccs and sc - sccs for a given code rate .",
    "we consider @xmath130 and @xmath131 , and coupling memory @xmath132 .",
    "the sc - pcc is not punctured . ] for the sc - scc we used @xmath133 and @xmath134 for @xmath130 and @xmath135 and @xmath136 for @xmath131 .",
    "again , in all cases an improvement of the bp threshold is observed when coupling is applied .",
    "as expected , for a given rate the pcc ensemble shows a better threshold than the scc ensemble .",
    "however , the improvement in the bp threshold due to coupling for the latter is very significant . for @xmath130 and @xmath4",
    "the bp threshold of @xmath117 is very close to that of the ( unpunctured ) ensemble @xmath115 , while a large gap is observed for the uncoupled ensembles . for",
    "@xmath128 @xmath117 achieves a better bp threshold than @xmath115 .",
    "the result is even more remarkable for @xmath131 . in this case , while the uncoupled scc ensemble shows a very poor threshold , @xmath117 shows a superior threshold than @xmath115 already for @xmath4 .",
    "in this paper we have introduced some block - wise spatially coupled ensembles of parallel and serially concatenated convolutional codes and performed a density evolution analysis on the bec . in all",
    "considered cases spatial coupling results in an improvement of the bp threshold and our numerical results suggest that threshold saturation occurs if the coupling memory is chosen significantly large . the threshold improvement is larger for the serial ensembles , which are known to have poor bp thresholds without coupling but are stronger regarding the distance spectrum . puncturing the serial and parallel ensembles to equal code rates , we observe that the threshold of the serial ensemble can surpass the one of the parallel ensemble .",
    "s.  moloudi and m.  lentmaier , `` density evolution analysis of braided convolutional codes on the erasure channel , '' in _ proc .",
    "ieee international symposium on information theory _ ,",
    "honolulu , hi , usa , july 2014 .    c.  berrou , a.  glavieux , and p.  thitimajshima , `` near shannon limit error - correcting coding and decoding : turbo - codes ( 1 ) , '' in _ proc .",
    "ieee international conference on communications _ , geneva , switzerland , may 1993 , vol .  2 ,",
    "10641070 .",
    "kurkoski , p.h .",
    "siegel , and j.k .",
    "wolf , `` exact probability of erasure and a decoding algorithm for convolutional codes on the binary erasure channel , '' in _ proc .",
    "ieee global telecommunications conference , 2003 .",
    "globecom 03 . _ ,",
    "2003 , vol .  3 .",
    "j.  shi and s.  ten brink , `` exact exit functions for convolutional codes over the binary erasure channel , '' in _ proceedings of the 44th allerton conference on communication , control , and computing _ ,",
    "monticello , il , usa , 2006 ."
  ],
  "abstract_text": [
    "<S> in this paper , we introduce the concept of spatially coupled turbo codes ( sc - tcs ) , as the turbo codes counterpart of spatially coupled low - density parity - check codes . </S>",
    "<S> we describe spatial coupling for both berrou _ et al . _ and benedetto _ et al . _ </S>",
    "<S> parallel and serially concatenated codes . for the binary erasure channel , we derive the exact density evolution ( de ) equations of sc - tcs by using the method proposed by kurkoski _ </S>",
    "<S> et al . </S>",
    "<S> _ to compute the decoding erasure probability of convolutional encoders . using de , we then analyze the asymptotic behavior of sc - tcs . </S>",
    "<S> we observe that the belief propagation ( bp ) threshold of sc - tcs improves with respect to that of the uncoupled ensemble and approaches its maximum a posteriori threshold . </S>",
    "<S> this phenomenon is especially significant for serially concatenated codes , whose uncoupled ensemble suffers from a poor bp threshold . </S>"
  ]
}
{
  "article_text": [
    "consider the following stochastic differential equation describing the kinetics of the proportion @xmath0 of one of two possible forms of certain proteins @xmath1 where @xmath2 is interaction coefficient of the two proteins , @xmath3 is the amplitude of the random gaussian perturbation , and @xmath4 is the standard brownian motion .",
    "the small circle @xmath5 before @xmath6 denotes the stochastic integral of stratonovich sense ( @xcite ) .",
    "there is no explicit solution to this equation , wherefore numerical computations simulating the propagation of @xmath0 is needed .",
    "one of the most well - known numerical methods for solving stochastic differential equations ( sdes ) is the euler - maruyama method , which is , however , only consistent to sdes of it type . for sdes of stratonovich type ,",
    "the consistent method is the midpoint rule , which , when applied to ( [ 1.1 ] ) , takes the form : @xmath7 where @xmath8 is the uniform time step size , and @xmath9 obeying the gaussian distribution @xmath10 and independent for different @xmath11 .",
    "the mean - square convergence of this method can be proved ( @xcite ) .",
    "the deterministic midpoint rule is an a - stable method suitable for dealing with stiff equations .",
    "for example , for the deterministic version of the equation ( [ 1.1 ] ) , i.e. , the equation ( [ 1.1 ] ) with @xmath12 @xmath13 @xmath14 is an asymptotically stable solution as @xmath15 .",
    "with @xmath16 we get the linearized equation of ( [ 1.3 ] ) @xmath17 which can be very stiff as @xmath18 is large , e.g. , @xmath19 . then in this case , the original non - linear equation ( [ 1.3 ] ) is also stiff , meaning that its numerical simulation may need the choice of very small step size @xmath20 . to illustrate this",
    ", we use the euler method @xmath21 and the midpoint rule @xmath22 to solve ( [ 1.3 ] ) numerically , and observe the effect in fig .",
    "[ f1 ] .    in fig .",
    "[ f1.1 ] , @xmath23 , we see that both the euler method ( blue dotted ) and the midpoint rule ( red dash - dotted ) produce significant oscillating simulation error , while in fig .",
    "[ f1.2 ] , where @xmath24 , the midpoint rule creates a reasonable numerical solution remaining close to the true solution .",
    "note that there is no explicit true solution for ( [ 1.3 ] ) , we just use the midpoint rule with a tiny step size @xmath25 to approximate the true solution ( blue solid ) .",
    "however , if the step size is small enough , e.g. @xmath26 as used in fig .",
    "[ f1.3 ] , both of the two methods give very accurate simulations which coincide visually with the true solution .",
    "in fact , as @xmath18 gets larger and larger , the needed @xmath20 for effective computation becomes smaller and smaller .",
    "this illustrates that the simulation of the equation ( [ 1.3 ] ) is sensitive to the time step size @xmath20 , due to stiffness of the equation .",
    "meanwhile , it can be seen that the midpoint rule is more stable than the euler method .",
    "for the stochastic protein kinetic equation ( [ 1.1 ] ) , @xmath14 is also a stochastically asymptotically stable solution if @xmath15 .",
    "this can be seen from its linearized stochastic differential equation with @xmath27 ( @xcite ) @xmath28 the solution of which is @xmath29 .",
    "thus the lyapunov exponent @xmath30 of ( [ 1.7 ] ) is ( @xcite ) @xmath31 due to @xmath32 with probability 1 .    at the same time ,",
    "similar to its deterministic counterpart ( [ 1.4 ] ) , the equation ( [ 1.7 ] ) can also be very sensitive to its simulation time step size @xmath20 as @xmath18 is large , e.g. @xmath19 .",
    "in other words , we say ( [ 1.7 ] ) is stiff for large @xmath18 . in this case , the original non - linear equation ( [ 1.1 ] ) is also stiff ( @xcite ) .",
    "this can be seen by numerical experiments , which we show in section 3 , where we see that although the stochastic midpoint rule ( [ 1.2 ] ) is applied , cautious choice of small time step size @xmath20 is still needed , which increases computational cost and accumulates round - off errors , especially for large time intervals .",
    "therefore it is meaningful to investigate effective measures to reduce the stiffness of the stochastic differential equations , such as the equation ( [ 1.1 ] ) , for efficient numerical simulation of such equations .",
    "for the purpose mentioned above , we employ the technique of variable transformation .",
    "[ lem2.1 ] for @xmath15 , the linearized stochastic differential equation ( [ 1.7 ] ) is equivalent to the following linear sde @xmath33 via the variable transformation @xmath34    * proof .",
    "* since the ordinary differential chain rule holds for sdes of stratonovich type , a direct calculation yields @xmath35\\\\ & = -zdt-\\frac{\\sigma}{1+\\lambda}z\\circ dw(t ) .",
    "\\end{split}\\ ] ]    note that , for large @xmath18 , the equation ( [ 1.7 ] ) is much more stiff than its equivalent equation ( [ 2.1 ] ) , since the lyapunov exponent for ( [ 2.1 ] ) is @xmath36 , obtained in the same way as in ( [ 1.8 ] ) .",
    "we thus find a way of reducing the stiffness of ( [ 1.7 ] ) via the variable transformation ( [ 2.2 ] ) . here , @xmath15 is to guarantee that @xmath37 is the stochastically asymptotically stable solution of ( [ 1.7 ] ) , and that the transformation ( [ 2.2 ] ) is meaningful at @xmath37 .    applying the same transformation to the original non - linear stochastic protein kinetic equation ( [ 1.1 ] ) ,",
    "we obtain the following result .",
    "[ prop2.2 ] for @xmath15 , the stochastic protein kinetic equation ( [ 1.1 ] ) is equivalent to the following sde @xmath38 via the variable transformation @xmath39 the linearized equation of ( [ 2.4 ] ) at its stochastically asymptotically stable solution @xmath40 is the equation ( [ 2.1 ] ) .",
    "* proof . *",
    "the inverse transformation of ( [ 2.5 ] ) is @xmath41 using the differential chain rule together with ( [ 2.5])-([2.6 ] ) we obtain @xmath42\\\\ & = \\frac{-1}{1+\\lambda}[(x+\\lambda xx)dt+\\sigma xx\\circ dw(t)]\\\\ & = ( -x+\\frac{\\lambda}{1+\\lambda}x^{2+\\lambda})dt-(\\frac{\\sigma}{1+\\lambda}x-\\frac{\\sigma}{1+\\lambda}x^{2+\\lambda})\\circ dw(t ) .",
    "\\end{split}\\ ] ] the condition @xmath15 can ensures that the transformation ( [ 2.5 ] ) and its inverse ( [ 2.6 ] ) are meaningful at @xmath14 and @xmath40 , respectively",
    ". meanwhile , it makes @xmath40 a stochastically asymptotically stable solution of ( [ 2.4 ] ) .",
    "the linearized equation of ( [ 2.4 ] ) at @xmath40 is @xmath43 which is just the equation ( [ 2.1 ] ) .",
    "+ from proposition [ prop2.2 ] , it is clear that the equation ( [ 2.4 ] ) is much less stiff than the original equation ( [ 1.1 ] ) , since the linearized equation ( [ 2.1 ] ) of ( [ 2.4 ] ) is much less stiff than the linearized equation ( [ 1.7 ] ) of ( [ 1.1 ] ) for @xmath18 large ( @xcite ) .",
    "thus , for the simulation of the stochastic protein kinetic equation , we can firstly apply the stochastic midpoint rule to the transformed equation ( [ 2.4 ] ) to get @xmath44 , and then use the inverse transform ( [ 2.6 ] ) to get back to @xmath45 .    in the following section ,",
    "we perform numerical tests to illustrate the difference the transformation ( [ 2.5 ] ) makes , that is , different degree of stiffness of ( [ 1.1 ] ) and ( [ 2.4 ] ) , reflected in the dependence on time step size @xmath20 in the numerical simulations of them using the stochastic midpoint rule .",
    "in this section we compare the effect of numerical simulation of the stochastic protein kinetic equation based on the original equation ( [ 1.1 ] ) and its transformed equation ( [ 2.4 ] ) , respectively .",
    "we apply the stochastic midpoint rule to both equations , with varying time step sizes for @xmath19 and @xmath46 .",
    "the results are shown in fig .",
    "[ f2 ] , for which we take @xmath47 , @xmath48 , and the number of iterations in each time step for the realization of the implicit stochastic midpoint rule is 10 .     +    in fig .",
    "[ f2.1 ] and [ f2.2 ] , @xmath19 .",
    "as @xmath49 , the midpoint rule applied to the equation before transform , i.e. , the original equation ( [ 1.1 ] ) loses accuracy severely , as shown by the blue dotted line in fig .",
    "[ f2.1 ] , while that applied to the equation after transform , i.e. , the equation ( [ 2.4 ] ) together with the inverse transformation ( [ 2.6 ] ) produces much better simulation as illustrated by the red dash - dotted line in the same figure .",
    "however , as @xmath20 is small enough , e.g. @xmath26 , the midpoint rule applied to both equations gives good numerical results , which can be seen in fig .",
    "[ f2.2 ] .",
    "as the stiffness increases by enlarging the absolute value of @xmath2 , for example , @xmath46 , we see in fig .",
    "[ f2.3 ] that the time step size @xmath26 loses its effectiveness if the numerical simulation is performed on the original equation ( [ 1.1 ] ) without transformation , while remains valid if the numerical simulation is performed on the transformed equation ( [ 2.4 ] )",
    ". however , for a much smaller time step size @xmath25 , both simulations work fairly well again , with the cost of much more computations , as shown by fig .",
    "[ f2.4 ] .",
    "note that , there is no explicit true solution for ( [ 1.1 ] ) or ( [ 2.4 ] ) .",
    "the solution lines ( blue solid ) are simulated by the midpoint rule approximation based on the original equation ( [ 1.1 ] ) with @xmath25 in fig .",
    "[ f2.1]- [ f2.3 ] , and @xmath50 in fig .",
    "[ f2.4 ] .    to conclude , the numerical results show superiority of reducing stiffness of the sde ( [ 1.1 ] ) by variable transformation in the numerical computation of the equation .",
    "it permits larger time step sizes , and therefore reduces computational costs and increases computational robustness .",
    "the more general stochastic protein kinetic equations involve a varying parameter @xmath51 in the drift part @xmath52 in which case @xmath14 is not a stochastic stationary solution if @xmath53 .",
    "however , if we still employ the variable transformation ( [ 2.5 ] ) , obtaining the transformed equation @xmath54 instead of ( [ 2.4 ] ) , we can still observe the effect of stiffness - reduction in the numerical tests for @xmath55 $ ] , as shown by fig .",
    "[ f3 ] .    as @xmath18 is small , or @xmath56 ,",
    "the transformation is not recommended .",
    "in fact , this method of reducing stiffness can be generalized to a more general class of sdes , e.g. , of the form @xmath57 where the functions @xmath58 and @xmath59 are regular enough for the following discussion .",
    "this class of equations may cover many stochastic differential equation models in biology , chemistry , physics and so on .",
    "assume that there exists a constant @xmath60 such that @xmath61 , and @xmath62 is a stochastically stationary solution of ( [ 4.1 ] ) .",
    "thus , with @xmath63 , the linearized equation of ( [ 4.1 ] ) is ( @xcite ) @xmath64 if @xmath65 is large , then the equation ( [ 4.2 ] ) is stiff , and so is the original equation ( [ 4.1 ] ) .",
    "we search for a variable transformation @xmath66 such that @xmath67 which is an ordinary differential equation with solution @xmath68 for the purpose of having inverse transformation , we take @xmath69 for @xmath70 , and @xmath71 for @xmath72 . in both cases",
    "we have the following transformed equation of ( [ 4.2 ] ) @xmath73 which is less stiff than ( [ 4.2 ] ) for large @xmath65 .",
    "based on these , we perform the transformation @xmath74 for @xmath75 and @xmath76 for @xmath77 on the equation ( [ 4.1 ] ) , to get its transformed equation @xmath78 for @xmath75 and @xmath79 for @xmath77 .",
    "note that , if @xmath80 switches sign in the time interval of observation , then the transformation has no global inverse , which is a limitation of this method . to show that ( [ 4.12 ] ) or ( [ 4.13 ] ) is less stiff than the original equation ( [ 4.1 ] ) , we need to have the linearized equation of them at @xmath81 , which is just the equation ( [ 4.9 ] ) for both ( [ 4.12 ] ) and ( [ 4.13 ] ) , for @xmath82 . the less stiffness of ( [ 4.9 ] ) than ( [ 4.2 ] ) implies the less stiffness of ( [ 4.12 ] ) and ( [ 4.13 ] ) than ( [ 4.1 ] ) .",
    "note that the condition @xmath82 is also to guarantee that the drift parts of both ( [ 4.12 ] ) and ( [ 4.13 ] ) tends to @xmath83 as @xmath84 , and that @xmath62 is a stochastically asymptotically stable solution of ( [ 4.1 ] ) .",
    "the author is supported by the nnsfc ( no.11071251 , no.91130003 , no .",
    "11471310 ) and the 2013 headmaster funds of ucas .    klden p.e . , platen e. , numerical solution of stochastic differential equations , springer - verlag berlin heidelberg ( 1992 ) .",
    "mao x. , stochastic differential equations and their applications , horwood , chichester ( 1997 ) .",
    "milstein g.n . , numerical integration of stochastic differential equations , kluwer academic publishers ( 1995 ) ."
  ],
  "abstract_text": [
    "<S> the stochastic protein kinetic equations can be stiff for certain parameters , which makes their numerical simulation rely on very small time step sizes , resulting in large computational cost and accumulated round - off errors . </S>",
    "<S> for such situation , we provide a method of reducing stiffness of the stochastic protein kinetic equation by means of a kind of variable transformation . theoretical and numerical analysis show effectiveness of this method . </S>",
    "<S> its generalization to a more general class of stochastic differential equation models is also discussed . + * ams subject classification : * 65c20 , 65c30 . + * key words : * numerical methods for sdes ; stochastic protein kinetic equation ; stiffness ; midpoint rule . </S>"
  ]
}
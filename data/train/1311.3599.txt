{
  "article_text": [
    "the foundation of quantum computation @xcite involves the encoding of computational tasks into the temporal evolution of a quantum system .",
    "a register of qubits , identical two - state quantum systems , is employed , and quantum algorithms can be described by unitary transformations and projective measurements acting on the state vector of the register . in this context ,",
    "unitary matrices ( transformations ) are called quantum gates . mathematically , a two - state quantum system has vector states @xmath4 in @xmath5 , known as qubits .",
    "the two vectors in the standard basis @xmath6 for @xmath5 correspond to two physically measurable quantum states .",
    "an @xmath0-qubit system containing registers of @xmath0-qubits has vector states in the euclidean space @xmath7 with basis vectors @xmath8 corresponding to the @xmath9 physically measurable states .    for a single qubit",
    ", one can use quantum gates corresponding to unitary transformations to manipulate ( transform ) the qubit .",
    "for an @xmath0-qubit system with large @xmath0 , it is challenging and expensive to implement quantum gates .",
    "one often has to decompose a general quantum gate into the product of simple / elementary unitary gates which can be readily created physically . for a discussion on decomposing a unitary matrix into sets of elementary quantum gates ,",
    "see , for example , @xcite , @xcite , @xcite , @xcite , and their references . by elementary linear algebra",
    ", it is known that every @xmath10 unitary matrix can be written as the product of no more than @xmath1 2-level unitary matrices ( given s transforms ) , i.e. , unitary matrices obtained from the identity matrix by changing a @xmath11 principal submatrix . for example , if @xmath12 is unitary , then there are unitary matrices of the form @xmath13 so that @xmath14 has a zero @xmath15 entry , @xmath16 has zero entries at the @xmath15 and @xmath17 positions , and @xmath18 has zero entries at the @xmath19 positions , and @xmath20 entry equal to one . because @xmath18 is unitary , it will be of the form",
    "@xmath21 \\oplus \\tilde u$ ] with @xmath22 .",
    "we can then find unitary matrices of the form @xmath23 so that @xmath24 has the form @xmath25 with @xmath26 and @xmath27 .",
    "it follows that @xmath28    in the context of quantum information science , not all 2-level unitary matrices are easy to implement . in this context ,",
    "one considers matrices of sizes @xmath2 labeled by binary sequences @xmath29 corresponding to the measurable quantum state @xmath30 . then certain two level",
    "unitary matrices correspond to quantum operations acting on the @xmath31th qubit provided the other qubits @xmath32 assume specified values in @xmath6 .",
    "these are known as the fully controlled qubit gates .",
    "for example , when @xmath33 , we label the rows and columns of matrices by @xmath34 .",
    "there are four types of fully - controlled 2-qubit gates : @xmath35 with the unitary @xmath36 .",
    "in particular , a @xmath37-gate corresponds to the unitary operator @xmath38 .",
    "similarly , a @xmath39-gate corresponds to the unitary operator @xmath40 .",
    "the @xmath41-gate and @xmath42-gate have the same physical interpretation .",
    "one can associate the 4 types of controlled qubit gates with the following circuit diagrams :    @xmath43 0.5 cm    ( 0,0 )  ( 0.3,0 ) ; ( 0.3,-0.2 )  ( 0.3,0.2 )  ( 0.7,0.2 )  ( 0.7,-0.2 )  cycle ; ( 0.5,0 ) node @xmath44 ; ( 0.7,0 )  ( 1,0 ) ; ( 0,-0.5 )  ( 1,-0.5 ) ; ( 0.5,-0.5 ) circle ( 3pt ) ; ( 0.5,-0.2 )  ( 0.5,-0.6 ) ;    1.5 cm @xmath45 0.5 cm    ( 0,0 )  ( 0.3,0 ) ; ( 0.3,-0.2 )  ( 0.3,0.2 ) ",
    "( 0.7,0.2 )  ( 0.7,-0.2 )  cycle ; ( 0.5,0 ) node @xmath44 ; ( 0.7,0 ) ",
    "( 1,0 ) ; ( 0,-0.5 ) ",
    "( 1,-0.5 ) ; ( 0.5,-0.5 ) circle ( 3pt ) ; ( 0.5,-0.2 ) ",
    "( 0.5,-0.6 ) ;    1.5 cm @xmath46 0.5 cm    ( 0,0 )  ( 0.3,0 ) ; ( 0.3,-0.2 )  ( 0.3,0.2 )  ( 0.7,0.2 )  ( 0.7,-0.2 )  cycle ; ( 0.5,0 ) node @xmath44 ; ( 0.7,0 )  ( 1,0 ) ; ( 0,0.5 )  ( 1,0.5 ) ; ( 0.5,0.5 ) circle ( 3pt ) ; ( 0.5,0.2 )  ( 0.5,0.6 ) ;    1.5 cm @xmath47 0.5 cm    ( 0,0 )  ( 0.3,0 ) ; ( 0.3,-0.2 )  ( 0.3,0.2 )  ( 0.7,0.2 )  ( 0.7,-0.2 )  cycle ; ( 0.5,0 ) node @xmath44 ; ( 0.7,0 )  ( 1,0 ) ; ( 0,0.5 )  ( 1,0.5 ) ; ( 0.5,0.5 ) circle ( 3pt ) ; ( 0.5,0.2 )  ( 0.5,0.6 ) ;    1.5 cm    for @xmath48 , we have fully - controlled qubit gates of the types :",
    "@xmath49 one easily extends this idea and notation to define fully - controlled gates acting on @xmath0-qubits .    in @xcite ( see also @xcite )",
    ", it was shown that one can decompose a quantum gate into the product of 2-level matrices corresponding to fully - controlled qubit gates . while fully - controlled qubit gates are relatively simple , it is still not easy to implement because the qubit gate @xmath44 can only act on the target bit after verifying that the other @xmath50-qubits satisfy the controlled bits .",
    "as mentioned in @xcite , in practice it is desirable to replace fully controlled qubit gates by qubits gates as few controls as possible .",
    "for example , when @xmath33 , the following types of unitary gates with no controls @xmath51 are easier to implement .",
    "note that a @xmath37-gate is applied on the left of a matrix @xmath52 , only rows @xmath53 and @xmath54 are affected .",
    "similarly , a @xmath39-gate will only affect the @xmath55 and @xmath56 gate of @xmath57 .",
    "however , a @xmath58-gate and @xmath59-gate will affect all rows of @xmath57 .    in general",
    ", we can consider a @xmath60-unitary gate with @xmath61 , where only one of the terms is @xmath44 , and the number of terms in @xmath62 is the total number of controls .",
    "for example , a @xmath63-unitary gate acting on 6-qubit states has 4 controls , and the target qubit is the fifth one .    in @xcite , a recurrence scheme was proposed to decompose a unitary gate as the product of controlled qubit gates with small number of controls .",
    "the purpose of this paper is to present another simple recurrence scheme , which provide an alternative choice for implementation .",
    "moreover , the ideas and techniques in the construction may be helpful for further research in this and related problems .",
    "our paper is organized as follows . in section 2",
    ", we will illustrate our scheme for the 2-qubit and 3-qubit case , and discuss how it can be extended . in section 3",
    ", we present the general scheme with detailed description of the implementation steps and explanation of their validity . in section 4 ,",
    "we obtain formulas for the number of @xmath3-controlled single qubit gates in the decomposition and compare our results to those in scheme in @xcite .",
    "concluding remarks and future research directions are mentioned in section 5 .",
    "for an @xmath0-qubit unitary gate @xmath64 with @xmath2 , we will describe a recurrence scheme for generating controlled single qubit unitary gates @xmath65 with @xmath66 such that @xmath67 . consequently , @xmath68 .",
    "our scheme is done as follows .",
    "assume we have the reduction scheme for the @xmath50-qubit case .",
    "* step 1 * partition @xmath69 into a @xmath11 block matrix with each block lying in @xmath70 .",
    "* step 2 * use the scheme of the @xmath50-qubit case to help reduce @xmath71 to the form @xmath72 with @xmath73    * step 3 * apply the scheme of the @xmath50-qubit case to transform @xmath74 to @xmath75 .    in * step 2 * , we need to eliminate the nonzero off - diagonal entries of @xmath71 for the first @xmath76 columns .",
    "we will do these elimination column by column . in each column",
    ", we first eliminate the off - diagonal entries with row indices smaller than @xmath77 using the scheme in the @xmath50-qubit case .",
    "then we again use the elimination schemes of lower dimension cases to eliminate the entries with row indices larger than @xmath76 .    in the following tables ,",
    "we indicate the order of the entries to be eliminated in our scheme , and also the @xmath78-gates used to do the elimination .",
    "@xmath79    column 2 .",
    "@xmath80    column 3 .",
    "@xmath81    here we first eliminate the @xmath82 entry as in the 1-qubit case . in a similar manner ,",
    "annihilate the @xmath15 entry , treating it as the second entry of the lower left half of the first column . to keep the @xmath82 entry zero",
    ", we use a gate with a @xmath83 in the leftmost bit .",
    "finally we annihilate the @xmath17 entry with the help of the @xmath20 entry . in this case , we can use a control - free gate to do so . at this point ,",
    "the current form of the matrix is @xmath21\\oplus u'$ ] , where @xmath84 .",
    "then we move to the second column .",
    "we adapt the procedure of eliminating the @xmath15 and @xmath17 entries to eliminate the @xmath85 and @xmath86 entries .",
    "the gates used must not change the zero entries in the first column .",
    "after this , the matrix takes the form @xmath87 with @xmath88 .",
    "we can deal with the matrix @xmath89 as in the 1-qubit case using a @xmath39-gate so that the first two rows will not be affected .    in this case , we have 3 types of unitary gates with no control : @xmath90 @xmath91 types of unitary gates with 1 control ( @xmath92 or @xmath93 ) and 1 target qubit : @xmath94 and 12 types of unitary gates with 2 controls and 1 target qubit : @xmath95    we execute the reduction scheme for three qubit gates as follows .",
    "@xmath96    column 2 .",
    "@xmath97    column 3 .",
    "@xmath98    column 4 .",
    "@xmath99    column 5 .",
    "@xmath100    column 6 .",
    "@xmath101    column 7 .",
    "@xmath102    [ n3 ]   here we give some remarks about the reduction of a 3-qubit unitary gate to help illustrate our recurrence scheme and how it can be extended .",
    "the comments are numbered according to the major steps 13 of our scheme described in the beginning of this section .",
    "* step 1 * we partition the @xmath103 unitary matrix into 2-by-2 block matrix so that each block is @xmath104 .",
    "* step 2 * we consider column 1 , 2 , 3 , 4 ,    * for column 1 * , the elimination of @xmath105 entries will be done as in the @xmath104 ( 2-qubit ) case by changing the 2-qubit @xmath78-gates to @xmath106-gates in these steps .",
    "we then annihilate the @xmath107 and @xmath108 entries the same way we annihilated the @xmath109 and @xmath17 entries by treating the lower half as a @xmath104 matrix",
    ". however , we have to ensure that the @xmath20 entry will not interact with the zero entries at the @xmath110 positions in these steps .",
    "so , we adapt the 2-qubit @xmath78-gates to @xmath111-gates , we will use the following rule :    _ let @xmath112 if @xmath78 is @xmath58 or @xmath59 ; otherwise , let @xmath113 .",
    "so , a @xmath114-gate can be used to annihilate the @xmath115 entry , a @xmath116-gate can be used to annihilate the @xmath117 entry and a @xmath118-gate to annihilate the @xmath108 entry . finally , we can apply a @xmath119-gate to eliminate the the @xmath120 entry using the @xmath20 entry .    note that the @xmath111-gates used in the column 1 satisfy @xmath121 with @xmath122 .",
    "this property will hold for the general case .",
    "once all off - diagonal entries in column 1 are annihilated , we obtain a matrix of the form @xmath21\\oplus u'$ ] , where @xmath123",
    ". we can proceed to column 2 .    * for column 2 * , we can annihilate the @xmath85 and @xmath86 entries using the scheme for annihilating the second column in the @xmath104 case by changing the 2-qubit @xmath78-gates to @xmath106-gates in these steps .",
    "next , we adapt the scheme of annihilating the @xmath124 entries to annihilate the lower half entries of the second column .",
    "note that it is imperative that the @xmath125 entry be the last entry to be annihilated since it is the only entry in the lower half of the column that can be annihilated using the @xmath126 entry . in view of this",
    ", we will change the order of annihilation of the entries to : @xmath127 if we identify @xmath128 with the binary sequences @xmath129 , then    @xmath130 corresponds to @xmath131 , and @xmath132 corresponds to @xmath133 .",
    "the conversion can be easily realized by @xmath134 where @xmath135 is an entry - wise addition such that @xmath136 and @xmath137 .",
    "note that we will use a similar conversion for columns 3 and 4 .",
    "we also need to modify the @xmath111-gates used for the annihilation of the @xmath138 entries to annihilate the @xmath139 entries . to accomodate the change in the order of annihilation",
    ", one must modify any control found in @xmath140 .",
    "we also have to prevent the @xmath20 entries interacting with the @xmath110 entries , and also prevent the @xmath126 entries interacting with the @xmath85 and @xmath86 entries .",
    "this can be done by making sure that at least one of @xmath141 and @xmath142 is equal to @xmath93 .",
    "thus , we modify @xmath111 by the following rules :    _ change @xmath142 to 1 if none of @xmath143 is 1 ; change @xmath140 to 0 if @xmath144 .",
    "_    however , one sees that applying these rules will not change the @xmath111-gates in view of the fact that @xmath122 .",
    "hence we can use exactly the same set of @xmath111-gates to eliminate the @xmath139 entries of column 2 .",
    "thus , we will use @xmath145 gates to annihilate the @xmath146 and @xmath147 entries , respectively .    to annihilate the @xmath125 entry",
    ", we need to utilize the nonzero @xmath126 entry .",
    "these two entries correspond to rows @xmath148 and @xmath149 .",
    "this means that the target bit of the gate we need is the third bit ( leftmost ) .",
    "because we do not want to change the form of the upper half of the first column , we need to make sure that the the gate is not satisfied by @xmath150 but is satisfied by @xmath149 and @xmath148 .",
    "thus , we use a @xmath151-gate .",
    "once this is done , the matrix is now reduced to the form @xmath152 where @xmath153 .",
    "* for column 3 * , the @xmath154 entry is annihilated using the scheme for the third column of the @xmath104 case .",
    "similar to the case in column 2 , we can adapt the scheme of eliminating the @xmath155 entries to annihilate the @xmath156 entries .",
    "the conversion @xmath130 to @xmath157 is done by performing @xmath158 using the binary number correspondence of the indices .",
    "we also need to modify the @xmath111-gates used for the annihilation of the @xmath138 entries to annihilate the @xmath159 entries . in these steps",
    ", we have to prevent the @xmath20 entries interacting with the @xmath110 entries , the @xmath126 entries interacting with the @xmath160 entries , and the @xmath161 entry interacting with the @xmath154 entry .",
    "one can do this by adjusting the @xmath142 and @xmath141 values in the @xmath111-gates used for the annihilation of the @xmath155 entries by the following rules :    _ change @xmath142 to 1 if @xmath142 is not 1 ; change @xmath141 to @xmath92 if @xmath162 . _    since @xmath142 is 1 , for @xmath163 , the @xmath164 entry will not interact with other @xmath165 entries for @xmath166 and @xmath167 .",
    "note that a @xmath111-gate corresponds to a unitary matrix @xmath168 . changing a control bit in the position of @xmath141 corresponds to changing @xmath169 by a permutation similarity @xmath170 , where @xmath171 corresponds to the change of the basis @xmath172 to @xmath173 , here we change @xmath174 to @xmath175 .",
    "thus , the modified @xmath111-gates can be used for column 3 .",
    "we will give a general description of this procedure in the next section .",
    "here , we obtain the @xmath176 gates , which can be used to annihilate the @xmath177 entries .",
    "finally , to annihilate the @xmath178 entry , we use the @xmath161 entry .",
    "hence , the target bit of the gate we need is the leftmost bit . to avoid changing the form of the first and second columns , we need to use controls that are not satisfied by @xmath150 and @xmath149 but is satisfied by @xmath179 and @xmath180",
    "thus , we use the gate @xmath181 .    * for column 4",
    "* , we need not do anything about the first four entries at this point .",
    "we will adapt the scheme for the @xmath155 entries to annihilate the @xmath182 entries .",
    "the conversion @xmath130 to @xmath183 is done by performing @xmath184 using the binary number correspondence of the numbers .",
    "we adjust the @xmath111-gates used for the @xmath138 entries to annihilate the @xmath185 entries as follows ,    _ change @xmath142 to 1 if @xmath142 is not 1 ; for @xmath186 , change @xmath187 to @xmath92 if @xmath188 .",
    "_    note that column 4 is associated to the binary sequence @xmath189 .",
    "we will obtain the @xmath190 gates , which can be used to annihilate the @xmath185 entries .-",
    "gates are the same as those used in column 3 before the final step .",
    "we will also explain this in the next section .",
    "] finally use a @xmath191-gate to annihilate the @xmath192 entry using the @xmath193 entry while avoiding any change in the form of the first three columns .",
    "* step 3 * note that after column 4 is dealt with , the matrix takes the form @xmath194 where @xmath195 .",
    "we can then use the scheme for the @xmath196-qubit case to transform @xmath197 to @xmath198 . however , to avoid changing the form of the first four columns , we need to extend the @xmath78-gates used in the @xmath104 case to @xmath199-gates for the remaining steps .",
    "this explains the tables for columns 5 to 7 .",
    "in this section , we present the general recurrence scheme for the annihilation of the off - diagonal entries of an @xmath0-qubit unitary gate by adapting the reduction scheme of the @xmath50-qubit case",
    ". we will carry out * steps 1  3 * described at the beginning of section 2 , as illustrated in the 3-qubit case and explained in remark 2.1 , * step 2 * of the scheme requires some careful attention . for each column @xmath200 with @xmath2",
    ", we can always annihilate the off - diagonal entries in the upper half of column @xmath201 using the scheme for annihilating the first column for an @xmath50 qubit unitary gate .",
    "one only needs to change a @xmath202-gate to a @xmath203-gate .    for the lower half of column @xmath201 , we have to refine * step 2 * to the following steps .",
    "* step 2.1 * for column 1 , use the reduction scheme for an @xmath50-qubit to eliminate the off - diagonal entries in the upper half of the column by changing the @xmath204-gates used in the @xmath50-qubit gate case to @xmath205-gates in these steps .",
    "next , we apply the same scheme to eliminate the entries in the lower half except for the @xmath206 entry , which will be eliminated last .",
    "this is done by changing the @xmath204-gates in the @xmath50-qubit case to @xmath207-gates , where @xmath208 the @xmath209-gate constructed in this way will ensure that the @xmath20 entry will not interact with @xmath210 entries when we annihilate the @xmath211 entry for @xmath212 because @xmath213 .",
    "finally , apply a @xmath214-gate to annihilate the @xmath206 entry .",
    "an easy inductive argument will verify that the @xmath215-gates used in column 1 satisfy @xmath216 with @xmath122 .",
    "the annihilation steps of column 1 can be summarized in the following .",
    "15.2pt    * procedure 2.1 *    .",
    "@xmath217    let @xmath218 for @xmath219 .",
    "the annihilation steps of column 1 can be summarized in table 1 , where @xmath220 and @xmath221 for all @xmath222 .",
    "@xmath223    * step 2.2 * for column @xmath201 with @xmath224 , we can use the same scheme as that of the @xmath50-qubit case to eliminate the off - diagonal entries in the upper half .",
    "then we can adapt the scheme for eliminating the entries in the lower half of column 1 to other columns . to this end , we need to modify    * the order of the elimination of the entries in the lower half so that the last entry in the lower half will be eliminated by the @xmath225 entry . * the control gates used to do the elimination so that +   ( b.i ) they will not affect the zero entries obtained in the previous steps ; and +  ( b.ii ) they will annihilate the entries in the order prescribed in ( a ) .    to achieve ( a ) and ( b ) , identify @xmath226 with the binary sequence @xmath227 so that @xmath228 for ( a ) ,",
    "if we annihilate the entries in the lower half of column 1 in the order of @xmath229 , then we will annihilate the entries in the lower half of column @xmath201 in the order of @xmath230 where the binary sequence of @xmath231 is obtained by entry - wise addition @xmath232 ( without carried digits ) of the two binary sequences of @xmath233 and @xmath201 such that @xmath234 and @xmath137 .",
    "is the sum of ( using @xmath232 ) the binary sequence @xmath235 and the binary form of @xmath236 ; the binary form of @xmath237 is the sum of the binary sequence @xmath238 and the binary form of @xmath236 ; @xmath239 , and the binary form of @xmath240 is the sum of the binary sequence @xmath241 and the binary form of @xmath236 .",
    "] note that @xmath242 , and hence @xmath243 , so that @xmath244 is the last entry in the lower half of column @xmath201 to be eliminated .    for ( b ) ,",
    "suppose @xmath245 with @xmath246 and @xmath247 .",
    "we adjust the @xmath215-gate used to annihilate the @xmath248 entry with @xmath249 to the @xmath250-gates for annihilating the @xmath251 entry as follows , where @xmath252 because at least one of @xmath253 is 1 , for @xmath254 the @xmath255 entries will not interact with other @xmath256 entry with @xmath257 and @xmath258 .",
    "note also that a @xmath215-gate with @xmath259 corresponding to the unitary matrix @xmath260 where @xmath261 for the @xmath215-gates used in the first columns , we have @xmath262 with @xmath122 .",
    "so , changing the @xmath93-control in the @xmath187 position whenever @xmath263 in our rule is equivalent to applying a unitary similarity transform to change @xmath169 to @xmath264 , where @xmath265 is the permutation matrix changing the basis @xmath266 to @xmath267 , where @xmath268 is the binary number corresponding to @xmath201 .",
    "so , the modified gates can be used to annihilate @xmath269 entries for @xmath270 .",
    "after that , only the @xmath225 and @xmath244 entries are nonzero in column @xmath201 .",
    "we annihilate the @xmath271 entry using the @xmath272-gate to ensure that the annihilation in these steps will not affect the zero entries in the previous steps , where @xmath273 is obtained from the binary sequence correspondence @xmath274 of @xmath201 by changing all 0 terms to @xmath275 . to @xmath276 by changing only @xmath140 and @xmath277 because @xmath196 corresponds to @xmath278 , and @xmath279 ; for column 3 , we change @xmath207 to @xmath280 by changing only @xmath141 and @xmath277 because @xmath281 corresponds to @xmath282 , and @xmath283 ; for column 4 , we change @xmath207 to @xmath284 by changing only @xmath285 and @xmath277 because @xmath286 corresponds to @xmath287 , and @xmath288 . ]",
    "note also that except for the last step one will always get the same set of @xmath215-gates for the the elimination of the lower half of the entries in columns @xmath289 and @xmath290 because the modification in ( [ tcj ] ) will have the same effects in these columns .",
    "this follows from the fact that the @xmath207-gates for column 1 satisfy @xmath262 with @xmath122 .",
    "the annihilation steps of column @xmath201 can be summarized in the following .",
    "* procedure 2.2 *    .",
    "@xmath291    let @xmath292 satisfying ( [ tcj ] ) .",
    "the annihilation steps of column @xmath201 can be summarized in the tables @xmath293 ( cf . table 1 for column 1 scheme ) .",
    "@xmath294    @xmath295    @xmath296    * step 3 * once we are done with step 2 , the matrix has the form @xmath297 .",
    "then we can easily finish step 3 by applying the @xmath50-qubit result to @xmath44 by changing the @xmath298-gates to @xmath299-gates .",
    "this is illustrated in table 5 .",
    "@xmath300    thus , given the scheme table for the @xmath301 case , one can easily build the scheme table for the @xmath0 case .",
    "even the modification of the orders and gates of those for column 1 for other columns is pretty straight forward .",
    "several remarks concerning procedures 1 and 2 are in order .    1 .",
    "in column 1 , it is easy to determine the order of the entries to be eliminated and the @xmath207-gates used .",
    "2 .   for the lower half of column @xmath201 with @xmath224",
    ", we change the order of entries to be eliminated to @xmath302 , and change the @xmath215-gates to @xmath303-gates .",
    "3 .   the @xmath207-gates used in column 1 satisfy @xmath262 with @xmath122 .",
    "4 .   the @xmath215-gates used to eliminate the entries in the lower half of column @xmath289 and @xmath290 are always the same before the last step , for @xmath304 .",
    "the @xmath215-gates used in the last steps of columns @xmath305 satisfy @xmath306 , and @xmath298 is obtained from the binary sequences @xmath307 of length @xmath301 by replacing @xmath92 with @xmath275 .    the recurrence scheme easy to do .",
    "even the most non - trivial steps of adapting the procedures of eliminating the entries in the lower half of the first column to other columns are quite straight forward .",
    "we illustrate this for the case @xmath308 .    *",
    "four qubit case , lower left block *    * * col 1 , steps 8 - 15**@xmath309 + * * col 2 , steps 7 - 14**@xmath310 + * * col 3 , steps 6 - 13**@xmath311 + * * col 4 , steps 5 - 12**@xmath312 + * * col 5 , steps 4 - 11**@xmath313 + * * col 6 , steps 3 - 10**@xmath314 + * * col 7 , steps 2 - 9**@xmath315 + * * col 8 , steps 1 - 8**@xmath316",
    "the following theorem gives the formula for the number @xmath317 of @xmath3-controlled qubit gates used in the recurrence scheme of our decomposition for a unitary matrix @xmath318 , where @xmath319 .",
    "[ counting ]    1 .",
    "@xmath320 2 .",
    "@xmath321 3 .",
    "@xmath322 for all @xmath323 4 .",
    "@xmath324 for all @xmath325 5 .",
    "@xmath326 for all @xmath327    note that @xmath328 . by convention @xmath329 .",
    "in general , if @xmath330 , @xmath331 where @xmath332 is the number of @xmath317 gates used to annihilate entries in the upper left block of the matrix , @xmath333 is the number of @xmath317 gates used to annihilate entries of the lower half of columns @xmath334 excluding the entries of the form @xmath244 .",
    "the number @xmath335 is the number of @xmath317 gates used to annihilate entries @xmath244 , where @xmath336 .",
    "finally @xmath337 is the number of @xmath317 gates used to annihilate the lower right block entries of the matrix .",
    "for example , we saw in section 2 that @xmath338 and @xmath339    [ count ] immediately , we can see the following recursive properties .",
    "1 .   @xmath340 for @xmath341 and @xmath342 as illustrated in tables 2 and 3 . 2 .",
    "@xmath343 for @xmath344 and @xmath345 as seen from table 2 and 5 . 3 .",
    "@xmath346 for @xmath347 , because @xmath348 is the number of column indices @xmath201 , with @xmath349 , such that the binary sequence of @xmath201 of length @xmath0 has exactly @xmath3 digits equal to @xmath93 .",
    "4 .   observe that the gate @xmath350 , @xmath351 , in table 1 has exactly one @xmath93-control .",
    "all other gates accounted for by @xmath333 are obtained from the @xmath352 s via the transformation @xmath353 , for @xmath354 .",
    "but notice that @xmath355 either has the same number of controls as @xmath352 or has one more control than @xmath352 .",
    "hence @xmath356 for @xmath357 and @xmath358 .",
    "let us observe the recursive scheme for the first column ( see table 1 ) .",
    "the following lemma can be proven inductively from this scheme .",
    "[ lemcol1 ] if @xmath359 then @xmath360 where @xmath361 when @xmath362 , otherwise @xmath363 .    [ lem1 ]",
    "let @xmath364 be as in remark 4.2.4 .",
    "suppose @xmath352 is a @xmath365-gate .",
    "then the following holds @xmath366    we want to know how many of the @xmath352 s have a @xmath93-control in the @xmath367 bit . by lemma [ lemcol1 ] , we know that the @xmath352 s satisfying this annihilate entries @xmath368 of the form given in equation ( [ ann1 ] ) , where @xmath369 and @xmath370 . if @xmath371 , then @xmath372 and thus we have @xmath50 choices for @xmath373 . if @xmath374 , we have @xmath375 choices for @xmath373 and we are free to choose which ones in @xmath376 to include in the sum defining @xmath368 .",
    "the conclusion then follows    next , let us look at the gates used to annihilate entries of column @xmath377 that contribute to @xmath378 .",
    "[ lem2 ] let @xmath379 with @xmath380 and @xmath381 be as in lemma [ lem1 ] .",
    "then @xmath382    if @xmath383 , then @xmath384 . recall that @xmath385 has exactly one control if @xmath386 has its one @xmath93-control in @xmath387 . thus @xmath388 the conclusion follows from lemma [ lem1 ] .",
    "* proof of theorem [ counting ] *    1 .",
    "a control - free gate can only be utilized in column 1 .",
    "this is because when we transform the matrix to the form @xmath21\\oplus u'$ ] , the succeeding gates must make sure that the first row does not interact with other rows .",
    "as mentioned in lemma [ lemcol1 ] and illustrated in table 1 , these gates with no control are the gates that annihilate the entries of the form @xmath389 for @xmath390 .",
    "indeed @xmath320 .",
    "we have shown that @xmath391 , @xmath392 and @xmath393 . from remark [ count ]",
    "we deduce that @xmath394 for all @xmath395 and hence @xmath396 3 .",
    "now , assume @xmath397 . from remark [ count",
    "] , we get @xmath398 .",
    "4 .   when @xmath399 , we know that that @xmath400 .",
    "+ now , assume @xmath401 . from remark [ count ] , @xmath402 .",
    "let us look at the summation defining @xmath378 . from remark [ count].4",
    ", column 1 contributes @xmath403 gates to @xmath378 . from lemma [ lem2 ]",
    ", we deduce that @xmath404\\\\ & = & \\left(2^{n-1}-1\\right)n+\\left[2^{n-3}n(n-3)-2^{n-2}+n\\right ] = 2^{n-3}(n+2)(n-1 ) .",
    "\\end{array}\\ ] ] thus @xmath405 . using a telescoping sum",
    ", we get @xmath406\\\\ & = & ( 2^{n-2}+1)(n)(n-1 ) . \\end{array}\\ ] ] 5 .   if @xmath407 , @xmath408 .",
    "now , assume @xmath409 .",
    "from remark [ count ] and equation ( [ b1 ] ) , @xmath410 then @xmath411 and hence @xmath412\\\\ & = & \\dfrac{1}{3}(4^n-4)-2^n(n-1)+\\dfrac{n(n-1)(n-2)}{2}. \\end{array}\\ ] ]    -.3 in @xmath413    .5 in    in @xcite , the gray code basis was utilized to achieve the same goal of this paper .",
    "let us denote the total number of gates with @xmath3 controls in the decomposition scheme presented in @xcite by @xmath414 .",
    "the recursion formula presented in the said study is @xmath415 with the conditions that @xmath416 and @xmath417 for all @xmath0 .",
    "let us compare values for small @xmath0 .",
    "@xmath418    here , @xmath419 ( respectively , and @xmath420 ) is the total number of controls in the decomposition of a unitary @xmath318 using the scheme in this paper ( respectively , the scheme in @xcite ) .",
    "starting from @xmath407 , we get a small advantage in our decomposition and because both methods are recursive , the discrepancy becomes large as @xmath0 gets larger .",
    "for example , @xmath421 .    in figure 1 , we plot the difference between @xmath422 and @xmath423 for @xmath0 from 1 to 50 .",
    "we use the log scale in the @xmath424-axis .",
    ".3 in         * figure 1 *",
    "in this paper , we present a recurrence scheme for generating controlled single qubit unitary gates @xmath65 with @xmath66 such that @xmath67 .",
    "consequently , @xmath68 .",
    "we have the following .",
    "* we first generate the @xmath215-gates for eliminating the off - diagonal entries : + for @xmath426 use @xmath44 to eliminate the @xmath82 entry ; for @xmath427 modify the @xmath298-gates to @xmath203-gates to eliminate the off - diagonal entries in upper half of column 1 in the @xmath0-qubit case , and @xmath428-gates to eliminate the entries in the lower half .",
    "* once , we have the @xmath215-gates for column 1 , we can modify them to eliminate the off - diagonal entries for the leading @xmath429 blocks for @xmath430 , using steps 2.1 and 2.2 described in section 3 .      for future research",
    ", it might be interesting to design other recurrence schemes , which are easy to implement and use even less controls .",
    "moreover , there might be other optimality criteria depending on the physical implementation of qubits .",
    "one may take this into consideration and assign a cost @xmath431 for implementing @xmath3-controlled single qubit gates , and then study the optimal decomposition by minimizing the cost instead of number of controls .",
    "matlab programs for the decomposition using our scheme is posted at http://ckixx.people.wm.edu/mathlib.html .",
    "the program _",
    "decomposition.m _ displays the order of entries to be annihilated , the @xmath432-gate used and the single qubit gate @xmath433 used for the controlled gates .",
    "one types ` [ u , a , x , y , controls , num , v]=decomposition(n ) ; ` in the command line , where @xmath0 is the number of bits and the program will prompt for the user to either choose to create a random unitary matrix or input the unitary matrix manually .",
    "the variable @xmath434 is the unitary matrix being decomposed .",
    "the variable @xmath435 is an array of strings that describe the form of the gate , and @xmath436 are the row and column indices arranged according to their order of annihilation .",
    "the variable ` controls ` gives the total number of controls used and @xmath437 is the number of nontrivial unitary controlled gates used .",
    "the variable @xmath438 is the product of the controlled gates and hence , must always equal to the identity matrix .",
    "this is used to help the user check that the decomposition is correct .",
    "the matlab program _",
    "gatecount.m _ counts the total number of controls in our scheme and that of @xcite ."
  ],
  "abstract_text": [
    "<S> a recurrence scheme is presented to decompose an @xmath0-qubit unitary gate to the product of no more than @xmath1 single qubit gates with small number of controls , where @xmath2 . </S>",
    "<S> detailed description of the recurrence steps and formulas for the number of @xmath3-controlled single qubit gates in the decomposition are given . </S>",
    "<S> comparison of the result to a previous scheme is presented , and future research directions are discussed .    </S>"
  ]
}
{
  "article_text": [
    "several theoretical studies have tried to give a probabilistic explanation for the speed of changes in transcriptional gene regulation ( e.g. @xcite , @xcite ) .",
    "behrens and vingron  @xcite infer how long one has to wait until a given transcription factor ( tf for short ) binding site emerges at random in a promoter sequence . using a bernoulli probabilistic model denoted by m0 and estimating evolutionary substitution rates based on multiple species promoter alignments for the three species _ homo sapiens _",
    ", _ pan troglodytes _ and _ macaca mulatta _ , they compute the expected waiting time for every @xmath0-mer , @xmath0 ranging from 5 to 10 , until it appears in a human promoter . they conclude that the waiting time for a tf binding site is highly determined by its composition and that indeed tf binding sites can appear rapidly , i.e.  in a time span below the speciation time of human and chimp .    however , in their approach , behrens and vingron  @xcite rely on the assumption that if a @xmath0-mer of interest appears more than once in a promoter sequence , it does not overlap with itself .",
    "this particularly affects the waiting times for highly autocorrelated words like e.g. aaaaa or ctctctctct . using automata , behrens _",
    "et al . _",
    "@xcite relaxed this assumption and , thus , more accurately compute the expected waiting times until appearance of @xmath0-mers in a promoter of length 1000 .    while behrens and vingron  @xcite and all preceding works were mostly interested in sequences of fixed length @xmath5 , behrens _",
    "et al . _",
    "@xcite realized that @xmath2 behaves asymptotically linearly with @xmath1 for a wide range of lengths .",
    "this observation followed from a singularity analysis performed by the author of the present article ; this property is biologically important , since the lengths of promoters are in an approximate range from 1000 base pairs to 2000 base pairs ; moreover , it can not be deduced easily from the rigorous computations by automata of behrens _ et al .",
    "_  @xcite .",
    "we give here proofs of this property that are based on clump analysis and use either combinatorics and language decompositions or automata constructions .",
    "our adaptation of previous methods is new and has theoretical and practical interests .",
    "we present the model in section  [ sec : prelim ] .",
    "we recall in section  [ sec : prevwork ] the behrens - vingron equations ( 2010 ) and the automaton approach of behrens _ et al . _",
    "the main part of the article is devoted in section  [ sec : clumps ] to counting the number @xmath6 of putative - hit positions in random sequences of length @xmath1 ; at first order , the probability @xmath2 is then a linear function of @xmath6 .",
    "we provide in this section the background for the guibas - odlyzko language decomposition and its extension to clump analysis , and a parallel construction by automata .",
    "this section also contains the translation to generating functions of the formal languages used and states our result of quasi - linearity of @xmath2 ; the proof of this result is given in section  [ sec : lingen ] of the appendix .",
    "section  [ sec : markovauto ] sketches a proof by automaton that does not rely on clump constructions .",
    "\\a ) estimations for @xmath7 , @xmath8 : +    .*parameter estimations .",
    "* numbers taken from @xcite.[estimations ] [ cols=\"^,^,^,^\",options=\"header \" , ]     ( 0,0 ) ( 0,-4.6 )    ' '' ''    table  [ tab : corrank5 ] provides the top 10 @xmath9-mers with respect with the correction done by behrens _",
    "( 2012 ) with respect to behrens - vingron ( 2010 ) .    considering the minimal period @xmath10 of a @xmath0-mer @xmath11 , such that @xmath12 and noting @xmath13-periodic a word with minimal period @xmath13 , half of the 5-mers , two - thirds of the 7-mers and all of the 10-mers with @xmath14 are either 1- or 2-periodic , i.e. show a high degree of autocorrelation .",
    "this implies that , for only @xmath15 of the @xmath9-mers , @xmath16 of the @xmath17-mers and @xmath18 of the @xmath19-mers , the exact computations of behrens _ et al . _",
    "( 2012 ) differ by more than @xmath20 of the approximate computations of behrens - vingron ( 2010 ) .",
    "however , as shown in behrens _",
    "( 2012 ) , a non negligible number of transcription factors are highly correlated .",
    "table  [ tab : corrank5 ] shows clearly the importance of autocorrelation .",
    "-5ex    ( 0,0 ) node[anchor = west ] ( main ) ` ccaacacacaaccc ` ; ( 0,-.7 ) node[anchor = west ] ( below2 ) `  cc  ac  ac ` ; ( 0,-1.05 ) node[anchor = west ] ( below3 ) `  ac ` ; ( 0,-1.4 ) node[anchor = west ] ( below4 ) `  ac ` ; ( 0,-.35 ) node[anchor = west ] ( below1 ) ` cc  ac  ac  ac  ac ` ;    ( 0.1,-.4 ) ",
    "( 0.1,-1.87 ) ; ( 0.88,-.4 ) ",
    "( 0.88,-1.87 ) ; ( 0.12,-1.8 )  node[below]i ( 0.90,-1.8 ) ;    ( 1.05,-.4 )  ( 1.05,-1.87 ) ; ( 1.58,-.4 )  ( 1.58,-1.87 ) ; ( 1.06,-1.8 )  node[below]ii ( 1.60,-1.8 ) ;    ( 1.78,-.4 )  ( 1.78,-1.87 ) ; ( 2.56,-.4 )  ( 2.56,-1.87 ) ; ( 1.80,-1.8 )  node[below]iii ( 2.58,-1.8 ) ;    ( 3.12,-.4 )  ( 3.12,-1.87 ) ; ( 2.58,-1.8 )  node[below]iv ( 3.12,-1.8 ) ;    ( 3.51,-.4 )  ( 3.51,-1.87 ) ; ( 5.0,-.4 )  ( 5.0,-1.87 ) ; ( 3.52,-1.8 )  node[below]v ( 5.0,-1.8 ) ;    ( 0,0 ) node[anchor = west ] ( main ) ` ccaaaaaaccccccaaaccaa ` ; ( 0,-.35 ) node[anchor = west ] ( below1 ) `  aa  aa  aa ` ; ( 0,-.7 ) node[anchor = west ] ( below2 ) `  aa  aa ` ; ( 0,-1.05 ) node[anchor = west ] ( below2 ) `  aa  aa ` ; ( 0,-1.4 ) node[anchor = west ] ( below4 ) `  aa ` ; ( 0,-1.75 ) node[anchor = west ] ( below5 ) `  aa ` ; ( 0,-2.1 ) node[anchor = west ] ( below6 ) `  aa ` ; ( 0,-2.45 ) node[anchor = west ] ( below7 ) `  aa ` ;    ( .5,-.4 )  ( .5,-2.87 ) ; ( 2.4,-.4 )  ( 2.4,-2.87 ) ; ( .52,-2.8 )  node[below]i ( 2.38,-2.8 ) ;    ( 3.47,-.4 ) ",
    "( 3.47,-2.87 ) ; ( 4.42,-.4 ) ",
    "( 4.42,-2.87 ) ; ( 3.49,-2.8 )  node[below]ii ( 4.4,-2.8 ) ;    ( 4.8,-.4 )  ( 4.8,-2.87 ) ; ( 5.38,-.4 )  ( 5.38,-2.87 ) ; ( 4.78,-2.8 ) ",
    "node[below]iii ( 5.36,-2.8 ) ;    ( 0,0 ) ( 0,-6.4 )    ' '' ''    assuming a four letters alphabet with a uniform probability distribution , founding an occurrence of @xmath4 at a position , up to boundary effects , we have a probability @xmath21 of finding an occurrence shifted by one position .",
    "in contrast , considering an occurrence of @xmath22 , we need reading at least @xmath9 new letters to find a new occurrence , and the probability of finding two consecutive occurrences is @xmath23 .",
    "this is a well known fact in combinatorics of words ; words occur by clumps and , while clumps of a non - overlapping word have only one occurrence of the word , clumps of an overlapping word may have several ; since the probability ( in a uniform model ) of occurrence of any word of a given size at any position is the same , the proportion of text covered by clumps of a non - overlapping word will be larger than this of an self - overlapping word .",
    "this property extends to sets of words depending of their self - overlap structure .",
    "we show here that the number of positions in @xmath24 that can mutate and provide an occurrence of a @xmath0-mer @xmath11 in @xmath25 , or putative - hit positions , is not a function of the number of occurrences of @xmath11 in @xmath25 or of the neighbours of @xmath11 in @xmath24 , but that this number can be computed by a variant of clump analysis .",
    "[ [ notations . ] ] notations .",
    "+ + + + + + + + + +    given a word @xmath11 , we note @xmath26 the set of its neighbours at edit distance @xmath27 ( by substitution of one letter ) , and @xmath28 the vector resulting of a lexicographic sort of @xmath26 . therefore ,",
    "for an alphabet @xmath29 , we have @xmath30 and @xmath31 .",
    "the correlation set @xmath32 of two words @xmath33 and @xmath34 is defined as usual , @xmath35 when we have @xmath36 , we get @xmath37 ( the autocorrelation of @xmath38 ) .",
    "[ [ putative - hit - positions . ] ] putative - hit positions .",
    "+ + + + + + + + + + + + + + + + + + + + + + +    given a sequence @xmath24 not containing a @xmath0-mer @xmath11 , a putative - hit position is any position of @xmath24 that can lead by a mutation to an occurrence of @xmath11 in @xmath25 , where we assume that a single mutation has occurred .",
    "we have for instance @xmath39 where the putative - hit positions are underlined in @xmath40 . mutating",
    "any single putative - hit position of @xmath40 leads to a sequence @xmath25 with an occurrence of @xmath41 .",
    "examples of sequences @xmath24 for the @xmath42-mers @xmath43 and @xmath44 ( see figure  [ fig : aaa - acc ] ) reveal that the right method to carry on the computation of putative - hit positions is clump analysis  @xcite .    [",
    "[ aim - of - the - computation . ] ] aim of the computation .",
    "+ + + + + + + + + + + + + + + + + + + + + + +    in the following , @xmath6 is the random variable counting the number of putative - hit positions in a random sequence of length @xmath1 .",
    "we consider the generating function @xmath45 that counts the number of putative - hit positions for the @xmath0-mer @xmath11 in texts avoiding this @xmath0-mer , @xmath46 where @xmath47 is the set of sequences of any length that do not contain the @xmath0-mer @xmath11 and @xmath48 is the number of putative - hit positions of the word @xmath38 .",
    "note that , up to probability of second order small magnitude , only one putative - hit position will mutate .      considering a reduced set of words ( no word is factor of another word in the set ) , rgnier and szpankowski  @xcite and rgnier  @xcite use ( as an evolution of guibas and odlyzko previous work  @xcite ) a natural parsing or decomposition of texts with respect to the occurrences of the set .",
    "we follow here the corresponding presentation of lothaire  @xcite ( chapter 7 ) .",
    "let @xmath49 be a reduced set of words .",
    "we have , formally    right , minimal , ultimate and not languages .",
    "[ def : rmulang ]    * the `` right '' language @xmath50 associated to the word @xmath51 is the set of words @xmath52 * the `` minimal '' language @xmath53 leading from a word @xmath51 to a word @xmath54 is the set of words @xmath55 * the `` ultimate '' language of words following the last occurrence of the word @xmath51 ( such that this occurrence is the last occurrence of @xmath56 in the text ) is the set of words @xmath57 * the `` not '' language @xmath58 is the set of words with no occurrences of @xmath59 , @xmath60    it is possible to obtain the generating functions of these languages by combinatorics and by new automata constructions .      considering the matrix @xmath61 and using @xmath62 as a shorthand , we have @xmath63 where the kronecker symbol @xmath64 is @xmath27 if @xmath65 and @xmath66 elsewhere .",
    "these equations are non - ambiguous and translate to generating functions , where for a language @xmath67 and its generating function @xmath68 , we have @xmath69 translating the system of equations ( [ eq : lotvw1],@xmath70[eq : lotvw5 ] ) to generating functions and solving the resulting system provide the generating functions @xmath71 , @xmath72 , @xmath73 and @xmath74 of the right , minimal , ultimate and not languages .",
    "the parsing by languages is now reflected in the following equation @xmath75 where @xmath76 is the generating function of @xmath77 , the set of all texts .",
    "the languages @xmath78 are recognized by the following automata ( where @xmath79 is the usual automaton product ) : @xmath80      [ [ language - approach . ] ] language approach .",
    "+ + + + + + + + + + + + + + + + + +    considering the word @xmath81 , and @xmath82 , we can compute from the vector of words @xmath83 a row vector of right languages @xmath84 , a matrix of minimal languages @xmath85 with @xmath13 and @xmath86 from @xmath27 to @xmath87 and a column vector of ultimate languages @xmath88 .",
    "extracting the languages with indices from @xmath27 to @xmath42 provides us for @xmath89 with the right @xmath90 , minimal @xmath91 and ultimate @xmath92 languages avoiding the word @xmath44 .",
    "the construction given here is fully general .",
    "for any finite alphabet @xmath93 and any word @xmath11 , it is ( at least theoretically ) possible to solve the rgnier - szpankowski equations for the extended sequence @xmath94 where @xmath95 , which provides the constrained languages for @xmath28 .",
    "[ [ automata - approach . ] ] automata approach .",
    "+ + + + + + + + + + + + + + + + + +    it is also immediate to construct by automata the constrained languages .",
    "for instance , we have , for @xmath96 , @xmath97 and the general case follows also easily .",
    "bassino _ et al . _",
    "@xcite modify the rgnier - szpankowski analysis of reduced sets to more specifically consider clumps of occurrences , where a clump is constituted either ( _ i_@xmath70 ) of a single isolated ( with no overlap with other occurrences ) occurrence of a word of the pattern , or ( _ ii_@xmath70 ) of a maximal set of occurrences where each occurrence overlaps at least another one .",
    "we consider the _ residual _ language @xmath98 as @xmath99 . considering two languages @xmath100 and @xmath101",
    ", we write @xmath102 .",
    "the clumps can be generated by a matrix of codes @xmath103 . with @xmath104                                                     & \\mb_{ii}=(\\cc_{ii}-\\epsilon)\\cap \\cm_{ii},\\end{array}\\right.\\ ] ]",
    "the language decomposition by clumps for a pattern @xmath49 is @xmath105   \\bg= \\begin{pmatrix }   v_i \\bs_{ij } \\end{pmatrix}\\end{array}\\right.\\ ] ]    for the word @xmath106 , we have @xmath107 . for the pattern @xmath108",
    ", we have @xmath109 @xmath110 and @xmath111 . for the pattern @xmath112",
    ", we have @xmath113 and @xmath114 .    [ [ constrained - clumps . ] ] constrained clumps .",
    "+ + + + + + + + + + + + + + + + + + +    the finite code languages generating the correlation languages of two words are easy to compute directly ; one must however also avoid the forbidden word @xmath11 while extending clumps .",
    "we therefore define for @xmath51 ( resp .",
    "@xmath54 ) the @xmath13-th ( resp .",
    "@xmath86-th ) entry of the sequence @xmath28 + @xmath115 + where @xmath116 is again the number of occurrences of the word @xmath11 in the word @xmath117 . since the sets @xmath118",
    "are finite , the computations of the codes @xmath119 can be done by string - matching .    gathering everything",
    ", we obtain a constrained version of equation ( [ eq : clump ] ) for the language @xmath120 of texts avoiding the word @xmath11 , + @xmath121\\vdots\\\\\\overline{\\cu}_r \\end{pmatrix},\\ \\text{with}\\       \\left\\{\\begin{array}{l }      \\overline{\\bk}=(\\overline{\\ck}_{ij}),\\\\ \\overline{\\bs}=\\overline{\\bk}^{\\star},\\\\   \\overline{\\bg}= \\begin{pmatrix }   v_i\\overline{\\bs}_{ij } \\end{pmatrix}\\end{array}\\right.\\ ] ]      we prove that the computation of the generating function @xmath45 of equation  [ eq : gfputpos ] follows from equation . indeed , taking in consideration the lengths of the words and the number of occurrences of putative - hit positions",
    ", we have first @xmath122 for each @xmath123 .",
    "next , for each @xmath124 , we can compute by string matching the number of putative - hit positions in each word of @xmath125 .",
    "this gives @xmath126 where we substracted the putative - hit position occurring within @xmath51 .    from the last equation and equation ,",
    "we get @xmath127    substituting in equation @xmath128 by @xmath129 and @xmath130 and @xmath131 with @xmath132 by their translations to generating functions ( that depend only of the variable @xmath133 ) provides the expression of @xmath45 that has been formally defined in equation .",
    "we also have   + @xmath134   + where @xmath135 is the probability that a random sequence of length @xmath1 does not contain the word @xmath11 .",
    "this implies that the conditionned for two events @xmath136 and @xmath137 such that @xmath138 .",
    "] expectation @xmath139 of the number of putative - hit positions verifies @xmath140\\left.\\frac{\\partial f_b(z , t)}{\\partial t}\\right|_{t=1 } \\big/ \\overline{f}_n^{(b)}.\\ ] ] considering again the evolution matrix @xmath141 with @xmath142 , we state the following proposition that we prove in the appendix , section  [ sec : lingen ] .    [",
    "prop : linear ] for ( i ) @xmath143 and ( ii ) @xmath1 large enough with @xmath144 , the probability that a @xmath0-mer occurs at time @xmath27 while not occuring at time @xmath66 in a sequence of length @xmath1 behaves quasi - linearly with respect to the length @xmath1 .",
    "the convergence to this quasi - linear regime is exponential .",
    "( chi ) at ( 3,3 ) @xmath145 ; ( q00 ) at ( 4,8 ) @xmath66 ; ( q01 ) at ( 7,9 ) @xmath27 ; ( q02 ) at ( 10,10 ) @xmath146 ; ( q03 ) at ( 13,11 ) @xmath42 ; ( q04 ) at ( 16,12 ) @xmath87 ; ( q05 ) at ( 19,12 ) @xmath9 ; ( q06 ) at ( 10,7.5 ) @xmath147 ; ( q07 ) at ( 13,7.5 ) @xmath17 ; ( q08 ) at ( 16,9 ) @xmath148 ; ( q09 ) at ( 19,9 ) @xmath149 ; ( qchi ) at ( 7,6.5 ) @xmath150 ; ( q10 ) at ( 16,6 ) @xmath19 ; ( q11 ) at ( 19,6 ) @xmath151 ; ( q12 ) at ( 10,5 ) @xmath152 ; ( q13 ) at ( 13,4 ) @xmath153 ; ( q14 ) at ( 16,3 ) @xmath154 ; ( q15 ) at ( 19,3 ) @xmath155 ;    ( q00 ) edge node[above]@xmath156 ( q01 ) ( q01 ) edge node[above]@xmath156 ( q02 ) ( q02 ) edge node[above]@xmath157 ( q03 ) ( q03 ) edge node[above]@xmath156 ( q04 ) ( q04 ) edge node[above]@xmath156 ( q05 ) ( q04 ) edge[bend left ] node[left , pos=0.2]@xmath158 ( q10 ) ( q01 ) edge node[above]@xmath158 ( q06 ) ( q06 ) edge node[above]@xmath159 ( q07 ) ( q07 ) edge node[above]@xmath156 ( q08 ) ( q07 ) edge node[above]@xmath158 ( q10 ) ( q08 ) edge node[above]@xmath157 ( q09 ) ( q09 ) edge[bend right ] node[right , pos=0.2]@xmath156 ( q15 ) ( q10 ) edge node[below]@xmath159 ( q11 ) ( q11 ) edge[bend right ] node[above]@xmath158 ( q10 ) ( q00 ) edge node[below]@xmath158 ( qchi ) ( qchi ) edge[loop below ] node[below]@xmath158 ( qchi ) ( qchi ) edge node[below]@xmath156 ( q12 ) ( q12 ) edge node[below]@xmath159 ( q13 ) ( q12 ) edge node[left]@xmath158 ( q06 ) ( q13 ) edge node[below]@xmath157 ( q14 ) ( q14 ) edge node[below]@xmath156 ( q15 ) ( q15 ) edge[bend right ] node[right]@xmath156 ( q05 ) ( q15 ) edge node[below]@xmath158 ( q10 ) ;    ( 0,0 ) ( 0,-3.4 )    ' '' ''      we can alternatively use the construction of clumps by automata given in bassino _ et al . _  @xcite .    for a set @xmath160 with correlation sets",
    "@xmath161 we construct a kind of `` aho - corasick '' automaton on the following set of words @xmath162 @xmath163 the considered automaton @xmath164 is built on @xmath162 with set of states @xmath165 and start or initial state @xmath166 .",
    "the transition function is defined ( as in the aho - corasick construction ) by @xmath167 we build with this construction , for any @xmath0-mer @xmath11 , the automaton recognizing the clumps of the neighbours @xmath26 of @xmath11 while avoiding occurrences of @xmath11 ; this last condition can be made effective by doing an automaton product .",
    "assuming that the set of states of the resulting automaton @xmath164 is @xmath168 and that the initial state is labelled @xmath66 , we set all the states of the automaton @xmath164 to terminal to recognize all sequences avoiding @xmath11 .",
    "therefore , we have @xmath169 see figure  [ fig : autodaaa ] for an example with the alphabet @xmath170 , the @xmath0-mer @xmath171 and @xmath172 .",
    "transitions with a `` tilde '' correspond to finding a new putative - hit position in the last recognized occurrence of a word of @xmath26 .",
    "[ [ clump - core . ] ] clump - core .",
    "+ + + + + + + + + + +    we consider the set of states @xmath173 that recognize an occurrence of @xmath26 , @xmath174 we also consider the set of states @xmath175 that do not belong to a clump extension , @xmath176 where @xmath177 is the set of strict prefixes of words of @xmath26 .",
    "we define finally the @xmath178 of the automaton by its set of states @xmath179 which verifies @xmath180 referring to the automaton of figure  [ fig : autodaaa ] , we have @xmath181 and @xmath182 .    [ [ markov - property . ] ] markov property .",
    "+ + + + + + + + + + + + + + + +    by construction of the automaton , for any word @xmath38 with @xmath183 , we have the following property , @xmath184       \\text{such that } \\delta(q_1,w)=\\delta(q_2,w')=e .",
    "\\end{array}\\right.\\ ] ] this property can be proved iteratively with respect to the length of the words .",
    "[ [ handling - the - putative - hit - positions . ] ] handling the putative - hit positions .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    for simplicity , we assume that there is only one type of mutation , but the method extends to the general case .",
    "we count as previously the putative - hit positions by the variable @xmath185 .    for each state",
    "@xmath186 ( recognizing an occurrence of @xmath26 ) , let @xmath187 be the word @xmath38 with @xmath183 , of maximal length , and verifying ,    1 .",
    "there exists @xmath188 such that @xmath189 , 2 .",
    "there is no @xmath190 such that @xmath191 .    by the markovian property",
    ", this defines a unique word .",
    "referring to figure  [ fig : autodaaa ] , we have @xmath192 , @xmath193 , @xmath194 , and @xmath195",
    ". moreover , the markovian property asserts that reading backward @xmath196 transitions from any state @xmath186 does a reverse spelling of a unique word of @xmath26 .",
    "we can next locate the putative - hit position within this word and check if it belongs to @xmath187 .",
    "the adjacency matrix @xmath197 associated to the automaton @xmath164 is then defined as follows : @xmath198 if there is no transition from @xmath13 to @xmath86 ; elsewhere , assume that @xmath199 .",
    "we have then @xmath200       \\pr(\\alpha)\\times t",
    "\\text { elsewhere}.     \\end{array}\\right.\\ ] ] the generating function @xmath45 defined in equation ( [ eq : gfputpos ] ) verifies @xmath201",
    "we sketch a proof that does not make use of clumps .",
    "the construction is computationally very costly .",
    "we build the ( pruned ) knuth - morris - pratt automaton @xmath202 recognizing @xmath203 ( the set of sequences avoiding the @xmath0-mer @xmath11 ) .",
    "next we compute the order-@xmath204 markov automaton @xmath205 of @xmath202 .",
    "the transitions of this automaton are words of size @xmath206 .",
    "it is possible by reading the transitions to know when a new putative - hit position is present , and to multiply the corresponding entry in the associated adjacency matrix by the counting variable @xmath185 .",
    "let @xmath207 be this matrix .",
    "the matrix associated to the automaton @xmath202 is positive , irreducible and transitive ; so is the matrix @xmath207 , disregarding a trie - like structure leading to its recurrent part .",
    "writing @xmath208 the probability of mutation , we can make the substitution @xmath209 .",
    "we then have for the recurrent part @xmath210 of @xmath207 , @xmath211 assuming that @xmath212 , we get for a polynomial @xmath213 @xmath214 writing @xmath215 and @xmath216 the dominant eigenvalues of @xmath217 and @xmath218 , the property @xmath219 entails that @xmath220 .",
    "we then deduce from equation ( [ eq : brn ] ) that @xmath221(1,0,\\dots,0)\\bu^n(x)\\mathbf{1}^t}{(1,0,\\dots,0)\\bu^n(1)\\mathbf{1}^t } = ( \\alpha+\\beta\\!\\times\\ !",
    "n ) \\times(1+o(1)).\\ ] ]",
    "we provided several methods for analysing waiting times in dna evolution that give insights in the structure of the problem .",
    "we showed that clump analysis and generating functions are powerful and convenient tools for this aim and used either language analysis methods or automata constructions .",
    "in particular we proved the property of quasi - linearity related to the probability of first occurrence of a @xmath0-mer after a unit time .",
    "[ [ acknowledgements . ] ] acknowledgements .",
    "+ + + + + + + + + + + + + + + + +    we thank sarah behrens and cyril nicaud for helpful discussions and technical help .",
    "10    constructions for clump statistics . in _ proceedings of the fifth colloquium on mathematics and computer science , blaubeuren , germany _ ( 2008 ) , p.  jacquet , ed . , dmtcs , pp .",
    "an automaton approach for waiting times in dna evolution .",
    ", 5 ( 2012 ) , 550562 .    studying the evolution of promoters : a waiting time problem . , 2 ( 2010 ) , 15911606 .",
    "+ .    waiting for regulatory sequences to appear . , 1 ( 2007 )",
    ", 132 .",
    ". cambridge university press , 2009 .",
    "periods in strings . , 30 ( 1981 ) , 1942 .",
    "strings overlaps , pattern matching , and non - transitive games . , 30 ( 1981 ) , 108203 .    .",
    "academic press , 1975 .",
    "second edition , 557 pages .    .",
    "encyclopedia of mathematics .",
    "cambridge university press , 2005 .",
    "motif statistics . , 2 ( 2002 ) , 593618 .    a unified approach to word occurrences probabilities . , 1 ( 2000 ) , 259280 .    on the approximate pattern occurrences in a text .",
    "sequences 97 : proceedings of the compression and complexity of sequences 1997 _ ( washington , dc , usa , 1997 ) , ieee computer society , p.  253 .    on pattern frequency occurrences in a markovian sequence . , 4 ( 1998 ) , 631649 .    rapid evolution of cis - regulatory sequences via local point mutations . ,",
    "9 ( 2001 ) , 17641770 .",
    "the methods developed in section  [ sec : gf ] apply to any @xmath0-mer with any finite alphabet . moreover , using the additivity of expectations , we could split the putative - hit positions along their types ; with the toy alphabet @xmath222 , we would get two putative - hit positions type , @xmath223 and @xmath224 . by following the same footsteps as in section  [ sec : gf ] , we can now compute the expectations of putative - hit positions @xmath225 and @xmath226 which correspond to the two types of mutation . considering only the case @xmath223 , we can by pattern - matching compute @xmath227 we have as previously @xmath228 .",
    "we write in the following for sake of simplicity @xmath229 , and consider the generating function @xmath230 where the function @xmath45 is defined in equation .",
    "the solutions of the rgnier - szpankowski equations provide functions that are rational  .",
    "similarly , each term of the matrix equation ( [ eq : consclump ] ) is rational and so are the corresponding extensions to counts of putative - hit positions that lead to the explicit value of @xmath231 .",
    "we can therefore write for two polynomials @xmath232 and @xmath233 @xmath234 where , again , @xmath135 is the probability that a random sequence of length @xmath1 has no occurrence of @xmath11 .",
    "we have @xmath235 this series has only positive coefficients and by pringsheim theorem  @xcite[th .",
    "iv.6 , p.240 ] , it has a real positive singularity on the circle of convergence that we note @xmath236 ; by considering the automaton recognizing @xmath203 , the associated irreducible and primitive matrix , and perron - frobenius properties of positive matrices  @xcite , this real positive singularity is dominant .",
    "the singularity @xmath236 is also the smallest positive solution of @xmath237 .    therefore ,",
    "extracting the @xmath1th taylor coefficient of the generating functions @xmath238 and @xmath239 by cauchy integrals along a circle of radius @xmath240 , where @xmath241 is the value of the second largest singularity(ies ) in modulus , we obtain for constants @xmath242 , @xmath243 and @xmath244 @xmath245 @xmath246e(z )   = \\tau^{-n}(\\phi_1\\!\\times \\!n   + \\phi_2)\\times\\left(1+\\mathcal{o}\\left(b^n\\right)\\right).\\ ] ] it follows then immediately that @xmath247 in the more general case , we have , for @xmath248 , @xmath249 where @xmath250 and @xmath251 are constants , and @xmath252 is the maximum of the @xmath253 constants @xmath137 used when applying the equation to the @xmath253 types of mutation .",
    "this proves proposition  [ prop : linear ] .",
    "( 20,40)(0,0 ) ( -51,0 ) asymptotic linear behaviour of the unconditionned @xmath254 ( left ) and conditionned",
    "@xmath255 ( right ) expectations of the number of putative - hit positions for @xmath256 ( plain red lines ) and @xmath257 ( blue dots ) with the alphabet @xmath258 and @xmath259 .",
    "see equations , and .",
    ", title=\"fig:\",width=181,height=181 ] ( -11.5,0 ) asymptotic linear behaviour of the unconditionned @xmath254 ( left ) and conditionned @xmath255 ( right ) expectations of the number of putative - hit positions for @xmath256 ( plain red lines ) and @xmath257 ( blue dots ) with the alphabet @xmath258 and @xmath259 .",
    "see equations , and .",
    ", title=\"fig:\",width=181,height=181 ] ( 28,0)asymptotic linear behaviour of the unconditionned @xmath254 ( left ) and conditionned @xmath255 ( right ) expectations of the number of putative - hit positions for @xmath256 ( plain red lines ) and @xmath257 ( blue dots ) with the alphabet @xmath258 and @xmath259 .",
    "see equations , and .",
    ", title=\"fig:\",width=181,height=181 ] ( -12,11)@xmath1 ( 27,13)@xmath1 ( 67,11)@xmath1 ( -48,39)@xmath260 ( -6,39 ) @xmath261 ( 2,36)@xmath262 ( 31,39)@xmath263    ( 0,0 ) ( -6.3,5.7 )    ' '' ''    -9ex",
    "we consider the following toy example + @xmath264   + we want to estimate the expectations of the _ total _ number of putative - hit positions @xmath265 and @xmath266 for the words @xmath11 and @xmath267 .",
    "l|l @xmath256 & @xmath257 + @xmath273 & @xmath274 + @xmath275            \\frac{z^3t}{8}\\!+\\!\\frac{z^2}{2 } & \\frac{z^3t}{8 } & \\frac{z^3t}{8 } & 0\\\\[1ex ]            0 & 0 & 0 & \\frac{z^3t}{8}\\!+\\!\\frac{z^2}{2}\\\\[1ex ]            0 & \\frac{z^2t}{4 } & \\frac{z^2t}{4 } & \\frac{z^3t}{8 }     \\end{array } \\right)}$ ] & @xmath276            \\frac{z^3t}{8 } & \\frac{z^3t}{8}&0 & \\frac{z^2t}{4}\\\\[1ex ]            0 & 0 & 0 &   \\frac{z^3t}{8}\\\\[1ex ]            0 & 0 & \\frac{zt}{2 } & \\frac{z^3t}{8 }   \\end{array } \\right)}$ ] +   +    the last equations   as in @xmath277 leads to _ no new _ putative - hit position .",
    "the same remark applies to the extension @xmath278 . ]",
    "intuitively suggests that there should be more putative - hit positions in a random sequence for @xmath256 than for @xmath257 .",
    "this is verified in figure [ fig : gammakm ] ( left ) where we plot the unconditionned expectations of the number of putative - hit positions for both @xmath87-mers . however , when conditionning as in figure [ fig : gammakm ] ( right ) , the @xmath87-mer @xmath279 get lower expectations than the @xmath87-mer @xmath280 ; this follows from the values of the constants @xmath250 for @xmath11 and @xmath267 that respectively are @xmath281 for @xmath256 and @xmath282 for @xmath257 ."
  ],
  "abstract_text": [
    "<S> transcription factors are short stretches of dna ( or @xmath0-mers ) mainly located in promoters sequences that enhance or repress gene expression . with respect to an initial distribution of letters on the dna alphabet , behrens and vingron  </S>",
    "<S> @xcite consider a random sequence of length @xmath1 that does not contain a given @xmath0-mer or word of size @xmath0 . under an evolution model of the dna , </S>",
    "<S> they compute the probability @xmath2 that this @xmath0-mer appears after a unit time of 20 years . </S>",
    "<S> they prove that the waiting time for the first apparition of the @xmath0-mer is well approximated by @xmath3 . </S>",
    "<S> their work relies on the simplifying assumption that the @xmath0-mer is not self - overlapping . </S>",
    "<S> they observe in particular that the waiting time is mostly driven by the initial distribution of letters . </S>",
    "<S> behrens _ </S>",
    "<S> et al . _  </S>",
    "<S> @xcite use an approach by automata that relaxes the assumption related to words overlaps . </S>",
    "<S> their numerical evaluations confirms the validity of behrens and vingron approach for non self - overlapping words , but provides up to 44% corrections for highly self - overlapping words such as @xmath4 . </S>",
    "<S> we devised an approach of the problem by clump analysis and generating functions ; this approach leads to prove a quasi - linear behaviour of @xmath2 for a large range of values of @xmath1 , an important result for dna evolution . </S>",
    "<S> we present here this clump analysis , first by language decomposition , and next by an automaton construction ; finally , we describe an equivalent approach by construction of markov automata . </S>"
  ]
}
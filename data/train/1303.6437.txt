{
  "article_text": [
    "the * traveling salesman problem ( tsp ) * is one of the best known and most fundamental problems in combinatorial optimization .",
    "determining how well it can be approximated in polynomial time is therefore a major open problem , albeit one for which the solution still seems elusive . on the algorithmic side ,",
    "the best known efficient approximation algorithm for the symmetric case is still a 35-year old algorithm due to christofides  @xcite which achieves an approximation ratio of @xmath4 . however , recently there has been a string of improved results for the interesting special case of graphic tsp , improving the ratio to @xmath5 @xcite . for the asymmetric case ( atsp ) , it is not yet known if a constant - factor approximation is even possible , with the best known algorithm achieving a ratio of @xmath6 @xcite .",
    "unfortunately , there is still a huge gap between the algorithmic results mentioned above and the best currently known hardness of approximation results for tsp and atsp . for both problems ,",
    "the known inapproximability thresholds are small constants ( @xmath0 and @xmath1 ( cf .",
    "@xcite ) , respectively ) . in this paper",
    ", we try to improve this situation somehow by giving modular hardness reductions that slightly improve the hardness bounds for both problems to @xmath2 and @xmath3 , respectively .",
    "the latter bound is the first , for more than a decade now , improvement of papadimitriou and vempala bound @xcite for the atsp .",
    "the method of our solution differs essentially from that of @xcite and uses some new paradigms of the bounded occurrence optimization which could be also of independent interest in other applications .",
    "similarly to @xcite , the hope is that the modularity of our construction , which goes through an intermediate stage of a bounded - occurrence constraint satisfaction problem ( csp ) , will allow an easier analysis and simplify future improvements .",
    "indeed , one of the main new ideas we rely on is a certain new variation of the wheel amplifiers first defined by berman and karpinski @xcite to establish inapproximability for 3-regular csps .",
    "this construction , which may be of independent interest , allows us to establish inapproximability for a 3-regular csp with a special structure .",
    "this special structure then makes it possible to simulate many of the constraints in the produced graph essentially `` for free '' , without using gadgets to represent them .",
    "thus , even though for the remaining constraints we mostly reuse gadgets which have already appeared in the literature , we are still able to obtain improved bounds .",
    "let us now recall some of the previous work on the hardness of approximation of tsp and atsp .",
    "papadimitriou and yannakakis  @xcite were the first to construct a reduction that , combined with the pcp theorem  @xcite , gave a constant inapproximability threshold , though the constant was not more than @xmath7 for the tsp with distances either one or two .",
    "engebretsen  @xcite gave the first explicit approximation lower bound of @xmath8 for the problem .",
    "the inapproximability factor was improved to @xmath9 by bckenhauer and seibert  @xcite , who studied the restricted version of the tsp with distances one , two and three .",
    "papadimitriou and vempala  @xcite proved that it is -hard to approximate the tsp with a factor better than @xmath10 .",
    "presently , the best known approximation lower bound is @xmath0 due to lampis  @xcite .    the important restriction of the tsp , in which we consider instances with distances between cities being values in @xmath11 , is often referred to as the @xmath12-tsp .",
    "the best known efficient approximation algorithm for the @xmath13-tsp has an approximation ratio @xmath14 and is due to berman and karpinski  @xcite . as for lower bounds , engebretsen and karpinski  @xcite gave inapproximability thresholds for the @xmath12-tsp problem of @xmath15 for @xmath16 and @xmath17 for @xmath18 .",
    "more recently , karpinski and schmied  @xcite obtained improved inapproximability factors for the @xmath13-tsp and the @xmath19-tsp of @xmath20 and @xmath21 , respectively .    for atsp",
    "the currently best known approximation lower bound was @xmath1 due to papadimitriou and vempala  @xcite .",
    "when we restrict the problem to distances with values in @xmath11 , there is a simple approximation algorithm with approximation ratio @xmath22 that constructs an arbitrary tour as solution .",
    "blser  @xcite gave an efficient approximation algorithm for the @xmath23-atsp with approximation ratio @xmath24 .",
    "karpinski and schmied  @xcite proved that it is -hard to approximate the @xmath25-atsp and the @xmath19-atsp within any factor less than @xmath26 and @xmath27 , respectively .",
    "for the case @xmath18 , engebretsen and karpinski  @xcite gave an inapproximability threshold of @xmath28 .",
    "* overview : * in this paper we give a hardness proof which proceeds in two steps .",
    "first , we start from the max - e3-lin2 problem , in which we are given a system of linear equations mod @xmath29 with exactly three variables in each equation and we want to find an assignment such as to maximize the number of satisfied equations .",
    "optimal inapproximability results for this problem were shown by hstad  @xcite .",
    "we reduce this problem to a special case where variables appear exactly @xmath30 times and the linear equations have a particular structure .",
    "the main tool here is a new variant of the wheel amplifier graphs of berman and karpinski @xcite .    in the second step ,",
    "we reduce this @xmath30-regular csp to tsp and atsp .",
    "the general construction is similar in both cases , though of course we use different gadgets for the two problems .",
    "the gadgets we use are mostly variations of gadgets which have already appeared in previous reductions .",
    "nevertheless , we manage to obtain an improvement by exploiting the special properties of the @xmath30-regular csp . in particular , we show that it is only necessary to construct gadgets for roughly one third of the constraints of the csp instance , while the remaining constraints are simulated without additional cost using the consistency properties of our gadgets",
    ". this idea may be useful in improving the efficiency of approximation - hardness reductions for other problems .",
    "thus , overall we follow an approach unlike that of @xcite , where the reduction is performed in one step , and closer to @xcite .",
    "the improvement over @xcite comes mainly from the idea mentioned above , which is made possible using the new wheel amplifiers , as well as several other tweaks .",
    "the end result is a more economical reduction which improves the bounds for both tsp and atsp .",
    "an interesting question may be whether our techniques can also be used to derive improved inapproximability results for variants of the atsp and tsp ( cf .",
    "@xcite,@xcite and @xcite ) or other graph problems , such as the steiner tree problem .",
    "in the following , we give some definitions concerning directed ( multi-)graphs and omit the corresponding definitions for undirected ( multi-)graphs if they follow from the directed case . given a directed graph @xmath31 and @xmath32 , for @xmath33 , we define @xmath34 and @xmath35 . for convenience , we abbreviate a sequence of edges @xmath36 , @xmath37 by @xmath38 . in the undirected case ,",
    "we use sometimes @xmath39 instead of @xmath40 , @xmath41 . given a directed ( multi-)graph @xmath42 , an _",
    "cycle in @xmath42 is a directed cycle that traverses all edges of @xmath42 exactly once .",
    "we refer to @xmath42 as _ eulerian _ , if there exists an eulerian cycle in @xmath42 . for a multiset @xmath43 of directed edges and @xmath44",
    ", we define the outdegree ( indegree ) of @xmath45 with respect to @xmath43 , denoted by @xmath46 ( @xmath47 ) , to be the number of edges in @xmath43 that are outgoing of ( incoming to ) @xmath45 .",
    "the _ balance _ of a vertex @xmath45 with respect to @xmath43 is defined as @xmath48 . in the case of a multiset @xmath43 of undirected edges ,",
    "we define the balance @xmath49 of a vertex @xmath44 to be one if the number of incident edges in @xmath43 is odd and zero otherwise .",
    "we refer to vertices @xmath44 with @xmath50 as _ balanced _ with respect to @xmath43 .",
    "it is well known that a ( directed ) ( multi-)graph @xmath31 is eulerian if and only if all edges are in the same ( weakly ) connected component and all vertices @xmath51 are balanced with respect to @xmath52 .    given a multiset of edges @xmath43 , we denote by @xmath53 the number of ( weakly ) connected components in the graph induced by @xmath43 .",
    "quasi - tour _ @xmath43 in a ( directed ) graph @xmath42 is a multiset of edges from @xmath52 such that all vertices are balanced with respect to @xmath43 and @xmath54 .",
    "we refer to a quasi - tour @xmath43 in @xmath42 as a _ tour _ if @xmath55 .",
    "given a cost function @xmath56 , the cost of a quasi - tour @xmath43 in @xmath42 is defined by @xmath57 .",
    "in the asymmetric traveling salesman problem ( atsp ) , we are given a directed graph @xmath31 with positive weights on edges and we want to find an ordering @xmath58 of the vertices such as to minimize @xmath59}d_g(v_i , v_{i+1})$ ] , where @xmath60 denotes the shortest path distance in @xmath42 .    in this paper , we will use the following equivalent reformulation of the atsp : given a directed graph @xmath42 with weights on edges , we want to find a tour @xmath43 in @xmath42 , that is , a spanning connected multi - set of edges that balances all vertices , with minimum cost .",
    "the metric traveling salesman problem ( tsp ) is the special case of the atsp , in which instances are undirected graphs with positive weights on edges .",
    "in this section , we define the bi - wheel amplifier graphs which will be our main tool for proving hardness of approximation for a bounded occurrence csp with some special properties .",
    "bi - wheel amplifiers are a simple variation of the wheel amplifier graphs given in @xcite .",
    "let us first recall some definitions ( see also @xcite ) .",
    "if @xmath42 is an undirected graph and @xmath61 a set of vertices , we say that @xmath42 is a _ @xmath62-regular amplifier _ for @xmath63 if the following conditions hold :    * all vertices of @xmath63 have degree @xmath64 and all vertices of @xmath65 have degree @xmath62 . * for every non - empty subset @xmath66",
    ", we have the condition that @xmath67 , where @xmath68 is the set of edges with exactly one endpoint in @xmath69 .",
    "we refer to the set @xmath63 as the set of _ contact _ vertices and to @xmath65 as the set of _ checker _ vertices .",
    "amplifier graphs are useful in proving inapproximability for csps , in which every variable appears a bounded number of times . here",
    ", we will rely on @xmath30-regular amplifiers . a probabilistic argument for the existence of such graphs",
    "was given in @xcite , with the definition of wheel amplifiers .",
    "a wheel amplifier with @xmath70 contact vertices is constructed as follows : first construct a cycle on @xmath71 vertices .",
    "number the vertices @xmath72 and select uniformly at random a perfect matching of the vertices whose number is not a multiple of 7 .",
    "the matched vertices will be our checker vertices , and the rest our contacts .",
    "it is easy to see that the degree requirements are satisfied .",
    "berman and karpinski  @xcite gave a probabilistic argument to prove that with high probability the above construction indeed produces an amplifier graph , that is , all partitions of the sets of vertices give large cuts .",
    "here , we will use a slight variation of this construction , called a bi - wheel .",
    "a * bi - wheel amplifier * with @xmath70 contact vertices is constructed as follows : first construct two disjoint cycles , each on @xmath73 vertices and number the vertices of each @xmath74 .",
    "the contacts will again be the vertices whose number is a multiple of 7 , while the remaining vertices will be checkers . to complete the construction , select uniformly at random a perfect matching from the checkers of one cycle to the checkers of the other .    intuitively , the reason that amplifiers are a suitable tool here is that , given a csp instance , we can use a wheel amplifier to replace a variable that appears @xmath70 times with @xmath71 new variables ( one for each wheel vertex ) each of which appears 3 times .",
    "each appearance of the original variable is represented by a contact vertex and for each edge of the wheel we add an equality constraint between the corresponding variables .",
    "we can then use the property that all partitions give large cuts to argue that in an optimal assignment all the new vertices take the same value .",
    "we use the bi - wheel amplifier in our construction in a similar way .",
    "the main difference is that while cycle edges will correspond to equality constraints , matching edges will correspond to inequality constraints .",
    "the contacts of one cycle will represent the positive appearances of the original variable , and the contacts of the other the negative ones .",
    "the reason we do this is that we can encode inequality constraints more efficiently than equality with a tsp gadget , while the equality constraints that arise from the cycles will be encoded in our construction `` for free '' using the consistency of the inequality gadgets .",
    "before we apply the construction however , we have to prove that the bi - wheel amplifiers still have the desired amplification properties .",
    "[ thm : biwheel ]    with high probability , bi - wheels are 3-regular amplifiers .",
    "exploiting the similarity between bi - wheels and the standard wheel amplifiers of @xcite , we will essentially reuse the proof given there .",
    "first , some definitions : we say that @xmath69 is a _",
    "bad set _ if the size of its cut is too small , violating the second property of amplifiers .",
    "we say that it is a _ minimal bad set _",
    "if @xmath69 is bad but removing any vertex from @xmath69 gives a set that is not bad .",
    "recall the strategy of the proof from @xcite : for each partition of the vertices into @xmath69 and @xmath75 , they calculate the probability ( over the random matchings ) that this partition gives a minimal bad set .",
    "then , they take the sum of these probabilities over all potentially minimal bad sets and prove that the sum is at most @xmath76 for some constant @xmath77 .",
    "it follows by union bound that with high probability , no set is a minimal bad set and therefore , the graph is a proper amplifier .",
    "our first observation is the following : consider a wheel amplifier on @xmath71 vertices where , rather than selecting uniformly at random a perfect matching among the checkers , we select uniformly at random a perfect matching from checkers with labels in the set @xmath78 to checkers with labels in the set @xmath79 .",
    "this graph is almost isomorphic to a bi - wheel .",
    "more specifically , for each bi - wheel , we can obtain a graph of this form by rewiring two edges , and vice - versa .",
    "it easily follows that properties that hold for this graph , asymptotically with high probability also hold for the bi - wheel .",
    "thus , we just need to prove that a wheel amplifier still has the amplification property if , rather than selecting a random perfect matching , we select a random matching from one half of the checker vertices to the other .",
    "we will show this by proving that , for each set of vertices @xmath80 , the probability that @xmath80 is a minimal bad set is roughly the same in both cases .",
    "after establishing this fact , we can simply rely on the proof of @xcite .",
    "recall that the wheel has @xmath81 checker vertices . given a set @xmath80 with @xmath82 ,",
    "what is the probability that exactly @xmath83 edges have exactly one endpoint in @xmath80 ? in a standard wheel amplifier the probability is @xmath84 where we denote by @xmath85 the product of all odd natural numbers less than or equal to @xmath86 , and we assume without loss of generality that @xmath87 is even . let us explain this : the probability that exactly @xmath83 edges cross the cut in this graph is equal to the number of ways we can choose their endpoints in @xmath80 and in its complement , times the number of ways we can match the endpoints , times the number of matchings of the remaining vertices , divided by the number of matchings overall .",
    "how much does this probability change if we only allow matchings from one half of the checkers to the other ? intuitively , we need to consider two possibilities : one is that @xmath80 is a balanced set , containing an equal number of checkers from each side , while the other is that @xmath80 is unbalanced .",
    "it is not hard to see that if @xmath80 is unbalanced , then , we can easily establish that the cut must be large .",
    "thus , the main interesting case is the balanced one ( and we will establish this fact more formally ) .",
    "suppose that @xmath82 and @xmath80 contains exactly @xmath88 checkers from each side .",
    "then the probability that there are exactly @xmath83 edges crossing the cut is @xmath89 let us explain this . if @xmath80 is balanced and there are @xmath83 matching edges with exactly one endpoint in @xmath80 , then , exactly @xmath90 of them must be incident on a vertex of @xmath80 on each side , since the remaining vertices of @xmath80 must have a perfect matching .",
    "again , we pick the endpoints on each side , and on the complement of @xmath80 , select a way to match them , select matchings on the remaining vertices and divide by the number of possible perfect matchings .    using stirling formulas ,",
    "it is not hard to see that @xmath91 .",
    "also @xmath92 .",
    "it follows that @xmath93 is roughly the same as @xmath94 in this case , modulo some polynomial factors which are not significant since the probabilities we are calculating are exponentially small .",
    "let us now also show that if @xmath80 is unbalanced , the probability that it is a minimal bad set is even smaller .",
    "first , observe that if @xmath80 is a minimal bad set whose cut has @xmath83 edges , we have @xmath95 .",
    "the reason for this is that since @xmath80 is bad , then , @xmath83 is smaller than the number of contacts in @xmath80 minus the number of cycle edges cut .",
    "it is not hard to see that , in each fragment , that is , each subset of @xmath80 made up of a contiguous part of the cycle , two cycle edges are cut .",
    "thus , the extra edges we need for the contacts the fragment contains are at most @xmath96 of its checkers .",
    "suppose now that @xmath80 contains @xmath97 checkers on one side and @xmath98 checkers on the other .",
    "the probability that @xmath83 matching edges have one endpoint in @xmath80 is @xmath99 the reasoning is the same as before , except we observe that we need to select more endpoints on the side where @xmath80 is larger , since after we remove checkers matched to outside vertices @xmath80 must have a perfect matching .",
    "observe that for @xmath100 this gives @xmath93 .",
    "we will show that for the range of values we care about @xmath101 achieves a maximum for @xmath100 , and can thus be upper - bounded by ( essentially ) @xmath94 , which is the probability that a set is bad in the standard amplifier .",
    "the rest of the proof follows from the argument given in @xcite . in particular",
    ", we can assume that @xmath102 , since @xmath103 edges are cut with probability 1 . to show that the maximum is achieved for @xmath100",
    ", we look at @xmath104 .",
    "we will show that this is less than 1 . using the identity @xmath105",
    ", we get @xmath106 using the fact that @xmath107 , we end up needing to prove the following .    @xmath108",
    "combining that without loss of generality @xmath109 holds with the bounds of @xmath83 and @xmath110 we have already mentioned , the inequality  @xmath111 is straightforward to establish .",
    "by using the bi - wheel amplifier from the previous section , we are going to prove hardness of approximation for a bounded occurrence csp with very special properties .",
    "this particular csp will be well - suited for constructing a reduction to the tsp given in the next section .",
    "as the starting point of our reduction , we make use of the inapproximability result due to hstad  @xcite for the , which is defined as follows : given a system @xmath112 of linear equations mod 2 , in which each equation is of the form @xmath113 with @xmath114 , we want to find an assignment to the variables of @xmath112 such as to maximize the number of satisfied equations .",
    "let @xmath112 be an instance of the  and @xmath115 the set of variables , that appear in @xmath112 .",
    "we denote by @xmath116 the number of appearances of @xmath117 in @xmath112 .    for every @xmath118 , there exists a constant @xmath119 such that given an instance @xmath112 of the  with @xmath120 equations and @xmath121 } d(i)\\leq b_{\\epsilon}$ ] , it is -hard to decide whether there is an assignment that leaves at most @xmath122 equations unsatisfied , or all assignment leave at least @xmath123 equations unsatisfied .",
    "similarly to the work by berman and karpinski  @xcite ( see also @xcite and @xcite ) , we will reduce the number of occurrences of each variable to @xmath30 .",
    "for this , we will use our amplifier construction to create special instances of the hybrid problem , which is defined as follows : given a system @xmath124 of linear equations mod @xmath29 with either three or two variables in each equation , we want to find an assignment such as to maximize the number of satisfied equations .",
    "in particular , we are going to prove the following theorem .",
    "[ thm : hybrid ] for every constant @xmath125 and @xmath126 , there exist instances of the hybrid problem with @xmath127 equations such that : @xmath128 each variable occurs exactly three times .",
    "@xmath130 equations are of the form @xmath131 , @xmath132 equations are of the form @xmath133 and @xmath120 equations are of the form @xmath134 .",
    "@xmath135 it is -hard to decide whether there is an assignment to the variables that leaves at most @xmath136 equations unsatisfied , or every assignment to the variables leaves at least @xmath137 equations unsatisfied .",
    "let @xmath118 be a constant and @xmath112 an instance of the  with @xmath121 } d(i ) \\leq b_{\\epsilon}$ ] .",
    "for a fixed @xmath126 , we can flip some of the literals such that all equations in the instance @xmath112 are of the form @xmath138 , where @xmath139 are variables or negations . by constructing three more copies of each equation , in which all possible pairs of literals appear negated",
    ", we may assume that each variable occurs the same number of times negated as unnegated .",
    "let us fix a variable @xmath117 in @xmath112 .",
    "then , we create @xmath140 new variables @xmath141 .",
    "in addition , we construct a bi - wheel amplifier @xmath142 on @xmath143 vertices ( that is , a bi - wheel with @xmath116 contact vertices ) with the properties described in theorem [ thm : biwheel ] . since @xmath144 is a constant , this can be accomplished in constant time . in the remainder , we refer to _ contact _ and _ checker _ variables as the elements in @xmath145 , whose corresponding index is a contact and checker vertex in @xmath142 , respectively .",
    "we denote by @xmath146 the associated perfect matching on the set of checker vertices of @xmath142 .",
    "in addition , we denote by @xmath147 and @xmath148 the set of edges contained in the first and second cycle of @xmath142 , respectively .",
    "let us now define the equations of the corresponding instance of the hybrid problem .",
    "for each edge @xmath149 , we create the equation @xmath150 and refer to equations of this form as _ matching equations_. on the other hand , for each edge @xmath151 in the cycle @xmath152 with @xmath153 , we introduce the equation @xmath154 . equations of this form will be called _",
    "cycle equations_. finally , we replace the @xmath155-th unnegated appearance of @xmath117 in @xmath112 by the contact variable @xmath156 with @xmath157 , whereas the @xmath155-th negated appearance is replaced by @xmath158 .",
    "the former construction yields @xmath120 equations with three variables in the instance of the hybrid problem , which we will denote by @xmath124 . notice that each variable appears in exactly @xmath30 equations in @xmath124 . clearly , we have @xmath159 equations , thereof @xmath132 matching equations , @xmath130 cycle equations and @xmath120 equations of the form @xmath160 .",
    "a consistent assignment to @xmath145 is an assignment with @xmath161 and @xmath162 for all @xmath163 $ ] , where @xmath126 .",
    "a consistent assignment to the variables of @xmath124 is an assignment that is consistent to @xmath145 for all @xmath164 $ ] . by standard arguments using the amplifier constructed in theorem  [ thm : biwheel ] ,",
    "it is possible to convert an assignment to a consistent assignment without decreasing the number of satisfied equations and the proof of theorem  [ thm : hybrid ] follows .",
    "this section is devoted to the proof of the following theorem .",
    "[ thm : tspmain ]    it is -hard to approximate the tsp to within any constant approximation ratio less than @xmath2 .",
    "let us first sketch the high - level idea of the construction .",
    "starting with an instance of the hybrid problem , we will construct a graph , where gadgets represent the equations .",
    "we will design gadgets for equations of size three ( figure [ fig : eqn3 ] ) and for equations of size two corresponding to _ matching _ edges of the bi - wheel ( figure [ fig : eqn2 ] ) .",
    "we will not construct gadgets for the cycle edges of the bi - wheel ; instead , the connections between the matching edge gadgets will be sufficient to encode these extra constraints .",
    "this may seem counter - intuitive at first , but the idea here is that if the gadgets for the matching edges are used in a consistent way ( that is , the tour enters and exits in the intended way ) then it follows that the tour is using all edges corresponding to one wheel and none from the other .",
    "thus , if we prove consistency for the matching edge gadgets , we implicitly get the cycle edges `` for free '' .",
    "this observation , along with an improved gadget for size - three equations and the elimination of the variable part of the graph , are the main sources of improvement over the construction of @xcite .",
    "we are going to describe the construction that encodes an instance @xmath124 of the hybrid problem into an instance of the tsp problem .",
    "due to theorem  [ thm : hybrid ] , we may assume that the equations with three variables in @xmath124 are all of the form @xmath165 .    in order to ensure that some edges are to be used at least once in any valid tour ,",
    "we apply the following simple trick that was already used in the work by lampis  @xcite : let @xmath166 be an edge with weight @xmath167 that we want to be traversed by every tour .",
    "we remove @xmath166 and replace it with a path of @xmath168 edges and @xmath169 newly created vertices each of degree two , where we think of @xmath168 as a large constant .",
    "each of the @xmath168 edges has weight @xmath170 and any tour that fails to traverse at least two newly created edges is not connected . on the other hand , a tour that traverses",
    "all but one of those edges can be extended by adding two copies of the unused edge increasing the cost of the underlying tour by a negligible value . in summary",
    ", we may assume that our construction contains _ forced _ edges that need to be traversed at least once by any tour . if @xmath171 and @xmath172 are vertices , which are connected by a forced edge @xmath166 , we write @xmath173 or simply @xmath174 . in the following ,",
    "we refer to unforced edges @xmath166 with @xmath175 as _ simple_. all unforced edges in our construction will be simple .",
    "let us start with the description of the corresponding graph @xmath176 : for each bi - wheel @xmath177 , we will construct the subgraph @xmath178 of @xmath176 . for each vertex of the bi - wheel",
    ", we create a vertex in the graph and for each cycle equation @xmath179 , we create a simple edge @xmath180 . given a matching equation between two checkers @xmath181 , we connect the vertices @xmath182 and @xmath183 with two forced edges @xmath184 and @xmath185 .",
    "we have @xmath186 for each @xmath187 .",
    "additionally , we create a central vertex @xmath188 that is connected to gadgets simulating equations with three variables .",
    "let @xmath189 be the @xmath155-th equation with three variables in @xmath124 .",
    "we now create the graph @xmath190 displayed in figure  [ fig : eqn3 ]  @xmath191 , where the ( contact ) vertices for @xmath192 have already been constructed in the cycles . the edges",
    "@xmath193 with @xmath194 and @xmath195 are all forced edges with @xmath196 .",
    "furthermore , we have @xmath197 for all @xmath194 .",
    "@xmath198 and @xmath199 are both forced edges , whereas all remaining edges of @xmath190 are simple .",
    "this is the whole description of @xmath176 .",
    "c|c    &     + @xmath191 & @xmath200      given an instance @xmath124 of the hybrid problem and an assignment @xmath201 to the variables in @xmath124 , we are going to construct a tour in @xmath176 according to @xmath201 and give the proof of one direction of the reduction .",
    "in particular , we are going to prove the following lemma .",
    "[ lem : tsp1 ]    if there is an assignment to the variables of a given instance @xmath124 of the hybrid problem with @xmath127 equations and @xmath202 bi - wheels , that leaves @xmath110 equations unsatisfied , then , there exists a tour in @xmath176 with cost at most @xmath203 .",
    "before we proceed , let us give a useful definition .",
    "let @xmath42 be an edge - weighted graph and @xmath43 a multi - set of edges of @xmath52 that defines a quasi - tour .",
    "consider a set @xmath204 .",
    "the local edge cost of the set @xmath205 is then defined as    @xmath206    in words , for each vertex in @xmath205 , we count half the total weight of its incident edges used in the quasi - tour ( including multiplicities ) . observe that this sum contains half the weight of edges with one endpoint in @xmath205 but the full weight for edges with both endpoints in @xmath205 ( since we count both endpoints in the sum ) . also note that for two sets @xmath207 , we have @xmath208 ( with equality for disjoint sets ) and that @xmath209 .    first , note that it is sufficient to prove that we can construct a quasi - tour of the promised cost which uses all forced edges exactly once .",
    "since all unforced edges have cost 1 , if we are given a quasi - tour we can connect two disconnected components by using an unforced edge that connects them twice ( this is always possible since the underlying graph we constructed is connected ) .",
    "this does not increase the cost , since we added two unit - weight edges and decreased the number of components . repeating this results in a connected tour .",
    "let @xmath210 be the associated set of bi - wheels of @xmath124 .",
    "for a fixed bi - wheel @xmath177 , let @xmath211 be its associated set of variables .",
    "due to the construction of instances of the hybrid problem in section  [ sec : hybrid ] , we may assume that all equations with two variables are satisfied by the given assignment .",
    "thus , we have @xmath212 , @xmath213 and @xmath214 for all @xmath215 $ ] .",
    "assuming @xmath216 for some @xmath217 , we use once all simple edges @xmath218 with @xmath219 $ ] and the edge @xmath220 .",
    "we also use all forced edges corresponding to matching equations once . in other words , for each biwheel we select the cycle that corresponds to the assignment 1 and use all the simple edges from that cycle .",
    "this creates a component that contains all checker vertices from both cycles and all contacts from one cycle .",
    "c|c    &     + @xmath191 & @xmath200    as for the next step , we are going to describe the tour traversing @xmath190 with @xmath221 $ ] given an assignment to contact variables .",
    "let us assume that @xmath190 simulates @xmath222 . according to the assignment to @xmath171 , @xmath172 and @xmath223",
    ", we will traverse @xmath190 as follows : in all cases , we will use all forced edges once . + * case ( @xmath224 ) : * then , we use @xmath225 for all @xmath226 and @xmath227 with @xmath228 . for @xmath229 with @xmath230",
    ", we use @xmath231 for all @xmath226 . + * case ( @xmath232 with @xmath126 ) : * in both cases , we traverse @xmath233 for all @xmath234 and @xmath235 . + * case ( @xmath236 ) : * we use @xmath237 with @xmath238 .",
    "furthermore , we include @xmath239 for both @xmath226 .",
    "let us now analyze the cost of the edges of our quasi - tour given an assignment .",
    "for each matching edge @xmath240 consider the set of vertices made up of its endpoints .",
    "its local cost is 5 : we pay 4 for the forced edges and there are two used simple edges with one endpoint in the set .",
    "let us also consider the local cost for a size - three equation gadget , where we consider the set to contain the contact vertices @xmath241 as well the other 8 vertices of the gadget . the local cost here is 9.5 for the forced edges .",
    "we also pay 6 more ( for a total of 15.5 ) when the assignment satisfies the equation or 7 more when it does not .",
    "thus , we have given a covering of the vertices of the graph by @xmath132 sets of size two , @xmath120 sets of size 11 and @xmath242 .",
    "the total edge cost is thus at most @xmath243 . to obtain an upper bound on the cost of the quasi - tour , we observe that the tour has at most @xmath244 components ( one for each bi - wheel and one containing @xmath188 ) . the lemma follows .      in this section",
    ", we are going prove the other direction of our reduction . given a tour in @xmath176",
    ", we are going to define an assignment to the variables of the associated instance of the hybrid problem and give the proof of the following lemma .",
    "[ lem : tsp2 ]    if there is a tour in @xmath176 with cost @xmath245 , then , there is an assignment to the variables of the corresponding instance of the hybrid problem that leaves at most @xmath110 equations unsatisfied .",
    "again , let us give a useful definition .",
    "consider a quasi - tour @xmath43 and a set @xmath204 .",
    "let @xmath246 be the number of connected components induced by @xmath43 which are fully contained in @xmath205 .",
    "then , the full local cost of the set @xmath205 is defined as @xmath247 . by the definition , the full local cost of @xmath248 is equal to the cost of the quasi - tour ( plus 2 ) .",
    "intuitively , @xmath249 captures the cost of the quasi - tour restricted to @xmath205 : it includes the cost of edges and the cost of added connected components .",
    "note that now for two disjoint sets @xmath207 we have @xmath250 since @xmath251 could contain more connected components than @xmath207 together .",
    "if we know that the total cost of the quasi - tour is small , then @xmath252 is small ( less than @xmath253 ) .",
    "we can use this to infer that the sum of the local full costs of all gadgets is small .",
    "the high - level idea of the proof is the following : we will use roughly the same partition of @xmath248 into sets as in the proof of lemma [ lem : tsp1 ] .",
    "for each set , we will give a lower bound on its full local cost for any quasi - tour , which will be equal to what the tour we constructed in lemma [ lem : tsp1 ] pays .",
    "if a given quasi - tour behaves differently its local cost will be higher .",
    "the difference between the actual local cost and the lower bound is called the credit of that part of the graph .",
    "we construct an assignment for @xmath124 and show that the total sum of credits is higher that the number of unsatisfied equations . but using the reasoning of the previous paragraph , the total sum of credits will be at most @xmath110 .",
    "we are going to prove a slightly stronger statement and show that if there exists a quasi - tour in @xmath176 with cost @xmath245 , then , there exists an assignment leaving at most @xmath110 equations unsatisfied .",
    "recall that the existence of a tour in @xmath176 with cost @xmath254 implies the existence of a quasi - tour in @xmath176 with cost at most @xmath254 .",
    "we may assume that simple edges are contained only once in @xmath43 due to the following preprocessing step : if @xmath43 contains two copies of the same simple edge , we remove them without increasing the cost , since the number of components can only increase by one .    in the following ,",
    "given a quasi - tour @xmath43 in @xmath176 , we are going to define an assignment @xmath255 and analyze the number of satisfied equations by @xmath255 compared to the cost of the quasi - tour .",
    "the general idea is that each vertex of @xmath176 that corresponds to a variable of @xmath124 has exactly two forced and exactly two simple edges incident to it .",
    "if the forced edges are used once each , the variable is called honest .",
    "we set it to 1 if the simple edges are both used once and to 0 otherwise .",
    "it is not hard to see that , because simple cycle edges connect vertices that represent the variables , this procedure will satisfy all cycle equations involving honest variables .",
    "we then argue that if other equations are unsatisfied the tour is also paying extra , and the same happens if a variable is dishonest .",
    "let us give more details .",
    "first , we concentrate on the assignment for checker variables .",
    "let us consider the following equations with two variables @xmath256 , @xmath257 , @xmath258 , @xmath259 and @xmath260 .",
    "we are going to analyze the cost of a quasi - tour traversing the gadget displayed in figure  [ fig : eqn2 ]  @xmath191 and define an assignment according to @xmath43 .",
    "let us first assume that our quasi - tour is honest , that is , the underlying quasi - tour traverses forced edges only once .",
    "* honest tours : * for @xmath261 , we set @xmath262 if the quasi - tour traverses both simple edges incident on @xmath171 and @xmath263 , otherwise .",
    "since we removed all copies of the same simple edge , we may assume that cycle equations are always satisfied .",
    "if the tour uses @xmath264 , we get @xmath265 , @xmath266 and @xmath267 satisfied equations . given @xmath268",
    ", we obtain @xmath267 satisfied equations as well .",
    "let us define @xmath269 .",
    "notice that in both cases , we have local cost @xmath270 .",
    "we claim that @xmath271 for a valid quasi - tour . in order to obtain a valid quasi - tour ,",
    "we need to traverse both forced edges in @xmath272 and use at least two simple edges , as otherwise , it implies @xmath273 .",
    "given a quasi - tour @xmath43 , we introduce a local credit function defined by @xmath274 . if @xmath275 forms a connected component , we get @xmath276 satisfied equations and @xmath277 , which is sufficient to pay for the unsatisfied equation @xmath278 . on the other hand , assuming @xmath265 and @xmath279 , we get @xmath280 and @xmath281 unsatisfied equation . +",
    "* dishonest tours : * we are going to analyze quasi - tours , which are using one of the forced edges twice . by setting @xmath282",
    ", we are able to find an assignment that always satisfies @xmath278 and two other equations out of the five that involve these dishonest variables .",
    "the local cost in this case is at least @xmath283 .",
    "hence , the credit @xmath284 is sufficient to pay for the two unsatisfied equations .",
    "again , we will distinguish between honest tours ( which use forced edges exactly once ) and dishonest tours .",
    "this time we are interested in seven equations : the size - three equation @xmath285 and the six cycle equations containing the three contacts .",
    "observe that the local cost of @xmath286 is at least 15.5 .",
    "the local edge cost of any quasi - tour is 9.5 for the forced edges . for each component",
    "@xmath287 with @xmath288 , we need to pay at least 2 more because there are two vertices with odd degree ( @xmath289 ) and we also need to connect the component to the rest of the graph ( otherwise the component already costs 2 more ) .",
    "let us define the credit of @xmath290 with respect to @xmath43 by @xmath291 .",
    "+   + * honest tours : * for each @xmath234 , we set @xmath228 if the tour uses both simple edges incident on @xmath292 and @xmath293 , otherwise . notice that in the case @xmath294 with @xmath295 , this satisfies all seven equations and the tour has local cost at least @xmath296 .",
    "case @xmath297 the assignment now failed to satisfy the size - three equation , so we need to prove that the quasi - tour has local cost at least 16.5 .",
    "since all vertices are balanced with respect to @xmath43 , the quasi - tour has to use at least one edge incident on @xmath298 and @xmath299 besides @xmath300 and @xmath301 .",
    "if the quasi - tour takes @xmath302 for a @xmath303 and all @xmath304 , since all simple edges incident on @xmath192 are used , we get at total cost of at least 16.5 , which gives a credit of 1 .    case @xmath305 without loss of generality , we assume that @xmath306 holds . again , only the size - three equation is unsatisfied , so we must show that the local cost is at least @xmath307 .",
    "we will discuss two subcases .",
    "@xmath128 there is a connected component @xmath308 for some @xmath309 .",
    "we obtain that @xmath310 and therefore , a lower bound on the total cost of @xmath307 .",
    "@xmath129 since we may assume that @xmath311 , @xmath312 , @xmath313 and @xmath314 are balanced with respect to @xmath43 , we have that @xmath315 for all @xmath316 and @xmath317 . because @xmath318 are also balanced , we obtain @xmath319 for all @xmath316 , which implies a total cost of @xmath307",
    ". + * dishonest tours : * let us assume that the quasi - tour uses both of the forced edges @xmath320 and @xmath321 for some @xmath322 twice . we delete both copies and add @xmath323 instead which reduces the cost of the quasi - tour .",
    "hence , we may assume that only one of the two incident forced edges is used twice .",
    "first , observe that if all forced edges were used once , then there would be eight vertices in the gadget with odd degree : @xmath324 .",
    "if exactly one forced edge is used twice , then seven of these vertices have odd degree .",
    "thus , it is impossible for the tour to make the degrees of all seven even using only the simple edges that connect them .",
    "we can therefore assume that if a forced edge is used twice , there exists another forced edge used twice .",
    "we will now take cases , depending on how many of the vertices @xmath192 are incident on forced edges used twice .",
    "note that if one of the forced edges incident on @xmath171 is used twice , then exactly one of the simple edges incident on @xmath171 is used once .",
    "so , first suppose all three of @xmath192 have forced edges used twice .",
    "the local cost from forced edges is at least @xmath325 .",
    "furthermore , there are three vertices of the form @xmath326 , for @xmath288 and @xmath327 with odd degree .",
    "these have no simple edges connecting them , thus the quasi - tour will use three simple edges to balance their degrees .",
    "finally , the used simple edges incident on @xmath192 each contribute @xmath328 to the local cost .",
    "thus , the total local cost is at least @xmath329 , giving us a credit of @xmath30 .",
    "it is not hard to see that there is always an assignment satisfying four out of the seven affected equations , so this case is done .",
    "second , suppose exactly two of @xmath192 have incident forced edges used twice , say , @xmath330 . for @xmath223 ,",
    "we select the honest assignment ( 1 if the incident simple edges are used , 0 otherwise ) and this satisfies the cycle equations for this variable . we can select assignments for @xmath330 that satisfy three of the remaining five equations , so we need to show that the cost in this case is at least @xmath331 .",
    "the cost of forced edges is at least @xmath332 , and the cost of simple edges incident on @xmath330 adds @xmath281 to the local cost .",
    "one of the vertices @xmath333 and one of @xmath334 have odd degree , therefore the cost uses two simple edges to balance them .",
    "finally , the vertices @xmath335 have odd degree .",
    "if two simple edges incident to them are used , we have a total local cost of 17.5 .",
    "if the edge connecting them is used , then the two simple edges incident on @xmath223 must be used , again pushing the local cost to 17.5 .",
    "finally , suppose only @xmath171 has an incident forced edge used twice . by the parity argument given above , this means that one of the forced edges incident on @xmath188 is used twice .",
    "we can satisfy the cycle equations for @xmath336 by giving them their honest assignment , and out of the three remaining equations some assignment to @xmath171 satisfies two .",
    "therefore , we need to show that the cost is at least 16.5 .",
    "the local cost from forced edges is @xmath337 and the simple edge incident on @xmath171 contributes @xmath328 .",
    "also , at least one simple edge incident on @xmath312 or @xmath311 is used , since one of them has odd degree . for @xmath334 ,",
    "either two simple edges are used , or if the edge connecting them is used the simple edges incident on @xmath172 contribute @xmath281 more . with similar reasoning for @xmath335 , we get that the total local cost is at least @xmath338 .",
    "+ let us now conclude our analysis .",
    "consider the following partition of @xmath339 : we have a singleton set @xmath242 , @xmath132 sets of size @xmath29 containing the matching edge gadgets and @xmath120 sets of size @xmath340 containing the gadgets for size - three equations ( except @xmath188 ) .",
    "the sum of their local costs is at most @xmath341 .",
    "but the sum of their local costs is ( using the preceding analysis ) equal to @xmath342 .",
    "thus , the sum of all credits is at most @xmath110 .",
    "since we have already argued that the sum of all credits is enough to cover all equations unsatisfied by our assignment , this concludes the proof .",
    "we are ready to give the proof of theorem  [ thm : tspmain ] .",
    "we are given an instance @xmath112 of the  with @xmath202 variables and @xmath120 equations .",
    "for all @xmath343 , there exists a @xmath110 such that if we repeat each equation @xmath110 time we get an instance @xmath344 with @xmath345 equations and @xmath202 variables such that @xmath346 .",
    "then , from @xmath344 , we generate an instance @xmath124 of the hybrid problem and the corresponding graph @xmath176 . due to lemmata  [ lem : tsp1 ] ,",
    "[ lem : tsp2 ] and theorem  [ thm : hybrid ] , we know that for all @xmath347 , it is -hard to tell whether there is a tour with cost at most @xmath348 or all tours have cost at least @xmath349 .",
    "the ratio between these two cases can get arbitrarily close to @xmath2 by appropriate choices for @xmath350 .",
    "in this section , we prove the following theorem .    [ thm : atspmain ]    it is -hard to approximate the atsp to within any constant approximation ratio less than @xmath3 .",
    "let us describe the construction that encodes an instance @xmath124 of the hybrid problem into an instance of the atsp .",
    "again , it will be useful to have the ability to force some edges to be used , that is , we would like to have bidirected forced edges .",
    "a bidirected forced edge of weight @xmath167 between two vertices @xmath171 and @xmath172 will be created in a similar way as undirected forced edges in the previous section : construct @xmath169 new vertices and connect @xmath171 to @xmath172 through these new vertices , making a bidirected path with all edges having weight @xmath170 .",
    "it is not hard to see that without loss of generality we may assume that all edges of the path are used in at least one direction , though we should note that the direction is not prescribed . in the remainder",
    ", we denote a directed forced edge consisting of vertices @xmath171 and @xmath172 by @xmath351 , or @xmath352 .    let @xmath124 consist of the collection @xmath353 of bi - wheels .",
    "recall that the bi - wheel consists of two cycles and a perfect matching between their checkers .",
    "let @xmath354 be the associated set of variables of @xmath177 .",
    "we write @xmath355 to denote the function which , given the index of a checker variable @xmath182 returns the index @xmath155 of the checker variable @xmath183 to which it is matched ( that is , the function @xmath356 is a permutation function encoding the matching ) .",
    "we write @xmath357 to denote the inverse function @xmath358 .    now , for each bi - wheel @xmath177 , we are going to construct the corresponding directed graph @xmath359 as follows .",
    "first , construct a vertex for each checker variable of the wheel . for each matching equation @xmath360 , we create a bidirected forced edge @xmath361 with @xmath362 .    for each contact variable @xmath363 , we create two corresponding vertices @xmath364 and @xmath365 , which are joined by the bidirected forced edge @xmath366 with @xmath367 .",
    "next , we will construct two directed cycles @xmath368 and @xmath369 .",
    "note that we are doing arithmetic on the cycle indices here , so the index @xmath370 should be read as equal to @xmath281 . for @xmath368 , for any two consecutive checker vertices @xmath371 on the un - negated side of the bi - wheel , we add a simple directed edge @xmath372 . if the checker @xmath182 is followed by a contact @xmath373 in the cycle , then we add two simple directed edges @xmath374 and @xmath375 .",
    "observe that by traversing the simple edges we have just added , the forced matching edges in the direction @xmath376 and the forced contact edges for the un - negated part in the direction @xmath377 we obtain a cycle that covers all checkers and all the contacts of the un - negated part .",
    "we now add simple edges to create a second cycle @xmath369 .",
    "this cycle will require using the forced matching edges in the opposite direction and , thus , truth assignments will be encoded by the direction of traversal of these edges .",
    "first , for any two consecutive checker vertices @xmath378 on the un - negated side of the bi - wheel , we add the simple directed edge @xmath379 .",
    "then , if the checker @xmath380 is followed by a contact @xmath381 in the cycle then we add the simple directed edges @xmath382 and @xmath383 .",
    "now by traversing the edges we have just added , the forced matching edges in the direction @xmath384 and the forced contact edges for the negated part in the direction @xmath385 , we obtain a cycle that covers all checkers and all the contacts of the negated part , that is , a cycle of direction opposite to @xmath368 .",
    "what is left is to encode the equations of size three .",
    "again , we have a central vertex @xmath188 that is connected to gadgets simulating equations with three variables . for every equation with three variables ,",
    "we create the gadget displayed in figure  [ fig : eqn3 ] @xmath200 , which is a variant of the gadget used by papadimitriou and vempala  @xcite .",
    "let us assume that the @xmath155-th equation with three variables in @xmath386 is of the form @xmath387 .",
    "this equation is simulated by @xmath388 .",
    "the vertices used are the contact vertices @xmath389 , which we have already introduced , as well as the vertices @xmath390   \\}$ ] . for notational simplicity , we define @xmath391 , \\gamma\\in \\{x , y , z\\ } , { \\alpha}\\in \\{r , l\\ } \\big\\}$ ] .",
    "all directed non - forced edges are simple .",
    "the vertices @xmath392 and @xmath393 are connected to @xmath188 by forced edges with @xmath394 , where @xmath395 is a small fixed constant . to simplify things",
    ", we also force them to be used in the displayed direction by deleting the edges that make up the path of the opposite direction .",
    "this is the whole description of the graph @xmath396 .",
    "we are going to construct a tour in @xmath396 given an assignment to the variables of @xmath124 and prove the following lemma .",
    "[ lem : atsp1 ]    given an instance @xmath124 of the hybrid problem with @xmath202 bi - wheels and an assignment that leaves @xmath110 equations in @xmath124 unsatisfied , then , there exists a tour in @xmath396 with cost at most @xmath397 .",
    "before we proceed , let us again give a definition for a local edge cost function .",
    "let @xmath42 be an edge - weighted digraph and @xmath43 a multi - set of edges of @xmath52 that defines a tour .",
    "consider a set @xmath204 .",
    "the local edge cost of the set @xmath205 is then defined as    @xmath398    in words , for each vertex in @xmath205 we count the total weight of its outgoing edges used in the quasi - tour ( including multiplicities ) .",
    "thus , that this sum contains the full weight for edges with their source in @xmath205 , regardless of where their other endpoint is .",
    "also note that again for two sets @xmath207 we have @xmath208 ( with equality for disjoint sets ) and that @xmath209 .",
    "let @xmath177 be a bi - wheel with variables @xmath399 .",
    "given an assignment to the variables of @xmath124 , due to theorem  [ thm : hybrid ] , we may assume that either @xmath400 for all @xmath215 $ ] or @xmath401 for all @xmath215 $ ] .",
    "we traverse the cycle @xmath368 if @xmath402 and the cycle @xmath369 otherwise .",
    "this creates @xmath202 strongly connected components .",
    "each contains all the checkers of a bi - wheel and the contacts from one side .    for each matching edge gadget ,",
    "the local edge cost is @xmath30 .",
    "we pay two for the forced edge and @xmath281 for the outgoing simple edge .",
    "we will account for the cost of edges incident on contacts when we analyze the size - three equation gadget below .",
    "let us describe the part of the tour traversing the graph @xmath388 , which simulates @xmath403 . recall that if @xmath171 is set to true in the assignment we have traversed the bi - wheel gadgets in such a way that the forced edge @xmath404 is used , and the simple edge coming out of @xmath312 is used .    according to the assignment to @xmath171 , @xmath172 and @xmath223 , we traverse @xmath388 as follows :    * case @xmath405 : *",
    "let us assume that @xmath406 holds .",
    "then , we use @xmath407 .",
    "the cost is @xmath408 for the forced edges , @xmath409 for the simple edges inside the gadget , plus @xmath281 for the simple edge going out of @xmath312 .",
    "total local edge cost cost : @xmath410 .",
    "* case @xmath411 : * then , we use @xmath412 .",
    "again we pay @xmath408 for the forced edges , @xmath276 for the simple edges inside the gadget and @xmath30 for the outgoing edges incident on @xmath413 .",
    "total local edge cost : @xmath414 .",
    "* case @xmath415 : * let us assume that @xmath416 holds .",
    "then , we use @xmath417 with total local edge cost @xmath418 .    * case @xmath419 : * we use @xmath420 with @xmath418 .",
    "the total edge cost of the quasi - tour we constructed is @xmath421 .",
    "we have at most @xmath422 strongly connected components : one for each bi - wheel and one containing @xmath188 . a component representing a bi - wheel",
    "can be connected to @xmath188 as follows : let @xmath333 be two contact vertices in the component .",
    "add one copy of each edge from the cycle @xmath423 .",
    "this increases the cost by @xmath424 but decreases the number of components by one .      in this section",
    ", we are going to prove the other direction of the reduction .",
    "[ lem : atsp2 ]    if there is a tour with cost @xmath425 , then , there is an assignment that leaves at most @xmath110 equations unsatisfied .",
    "given a tour @xmath43 in @xmath396 , we are going to define an assignment to checker and contact variables . as in lemma",
    "[ lem : tsp2 ] , we will show that any tour must locally spend on each gadget at least the same amount as the tour we constructed in lemma [ lem : atsp1 ] .",
    "if the tour spends more , we use that credit to satisfy possible unsatisfied equations .",
    "let us consider the following equations with two variables @xmath426 , @xmath427 , @xmath428 , @xmath429 , @xmath430 and the corresponding situation displayed in figure  [ fig : eqn2 ] @xmath200 . since @xmath43 is a valid tour in @xmath396 , we know that @xmath431 is traversed and due to the degree condition , for each @xmath261 , the tour uses another incident edge @xmath166 on @xmath171 with @xmath432 . therefore , we have that @xmath433 .",
    "the credit assigned to a gadget is defined as @xmath434 .",
    "let us define the assignment for @xmath182 and @xmath183 .",
    "a variable @xmath182 is honestly traversed if either both the simple edge going into @xmath182 is used and the simple edge coming out of @xmath183 is used , or neither of these two edges is used . in the first case , we set @xmath182 to @xmath281 , otherwise to @xmath293 .",
    "similarly , @xmath183 is honest if both the edge going into @xmath183 and the edge out of @xmath182 are used , and we set it to @xmath281 in the first case and @xmath293 otherwise .",
    "* honest tours : * first , suppose that both @xmath182 and @xmath183 are honest .",
    "we need to show that the credit is at least as high as the number of unsatisfied equations out of the five equations that contain them .",
    "it is not hard to see that if we have set @xmath282 all equations are satisfied .",
    "if we have set both to @xmath281 , then the forced edge must be used twice , making the local edge cost at least @xmath409 , giving a credit of @xmath30 , which is more than sufficient .    * dishonest tours : * if both @xmath182 and @xmath183 are dishonest the tour must be using the forced edge in both directions .",
    "thus , the local cost is @xmath267 or more , giving a credit of @xmath29 .",
    "there is always an assignment that satisfies three out of the five equations , so this case is done .",
    "if one of them is dishonest , the other must be set to @xmath281 to ensure strong connectivity .",
    "thus , there are two simple edges used leaving the gadget , making the local cost @xmath276 ( perhaps the same edge is used twice ) .",
    "we can set the honest variable to @xmath281 ( satisfying its two cycle equations ) , and the other to @xmath293 , leaving at most one equation unsatisfied .",
    "first , we note that for any valid tour , we have @xmath435 .",
    "this is because the two forced edges of weight @xmath436 must be used , and there exist @xmath437 vertices in the gadget for which all outgoing edges have weight @xmath281 .",
    "let us define the credit @xmath438 .",
    "* honest traversals : * we assume that the underlying tour is honest , that is , forced edges are traversed only in one direction .",
    "we set @xmath171 to @xmath281 if the forced edge is used in the direction @xmath404 and @xmath293 otherwise . in the first case",
    "we know that the simple edges going into @xmath311 and out of @xmath312 are used . in the second , the edges @xmath439 and @xmath440 are used .",
    "we do similarly for @xmath336 .",
    "we are interested in the equation @xmath441 and the six cycle equations involving @xmath192 .",
    "the assignment we pick for honest variables satisfies the cycle equations , so if it also satisfies the size - three equation we are done .",
    "if not , we have to prove that the tour pays at least @xmath442 .",
    "* case @xmath443 : * due to our assumption , we know that @xmath444 is a part of the tour . since @xmath43 is a tour , there exists a vertex in @xmath445 that is visited twice and we get @xmath446 .",
    "thus , we can spend the credit @xmath447 on the unsatisfied equation @xmath441 .",
    "* case @xmath415 : * without loss of generality , let us assume that @xmath416 holds .",
    "then , we know that @xmath448 is a part of the tour .",
    "but , this implies that there is a vertex in @xmath449 that is visited twice .",
    "hence , we have that @xmath450",
    ".    * dishonest traversals : * consider the situation , in which some forced edges @xmath451 are traversed in both directions for some variables @xmath227 . for the honest variables",
    ", we set them to the appropriate value as before , and this satisfies their cycle equations .",
    "observe now that if a forced edge @xmath452 is also used in the opposite direction , then there must be another edge used to leave the set @xmath225 .",
    "thus the local edge cost of this set is at least @xmath30 .",
    "it follows that the credit we have for the gadget is at least as large as the number of dishonest variables .",
    "we can give appropriate values to them so each satisfies one cycle equation and the size - three equation is satisfied .",
    "thus , the number of unsatisfied equations is not larger than our credit .",
    "in summary , for every tour @xmath43 in @xmath396 , we can find an assignment to the variables of @xmath124 such that all unsatisfied equations are paid by the credit induced by @xmath43 .",
    "we are ready to give the proof of theorem  [ thm : atspmain ] .",
    "we are again given an instance @xmath112 of the  with @xmath202 variables and @xmath120 equations .",
    "for all @xmath343 , there exists a @xmath110 such that if we repeat each equation @xmath110 time we get an instance @xmath344 with @xmath345 equations and @xmath202 variables such that @xmath453 .",
    "then , from @xmath344 , we generate an instance @xmath124 of the hybrid problem and the corresponding directed graph @xmath396 . due to lemmata  [ lem : atsp1 ] ,",
    "[ lem : atsp2 ] and theorem  [ thm : hybrid ] , we know that for all @xmath347 , it is -hard to tell whether there is a tour with cost at most @xmath454 or all tours have cost at least @xmath455 , for some @xmath456 depending only on @xmath457 .",
    "the ratio between these two cases can get arbitrarily close to @xmath3 by appropriate choices for @xmath458 .",
    "in this paper , we proved that it is hard to approximate the atsp and the tsp within any constant factor less than @xmath3 and @xmath2 , respectively .",
    "the proof method required essentially new ideas and constructions from the ones used before in that context . since the best known upper bound on the approximability is @xmath459 for atsp and @xmath4 for tsp , there is certainly room for improvements .",
    "especially , in the asymmetric version of the tsp , there is a large gap between the approximation lower and upper bound , and it remains a major open problem on the existence of an efficient constant factor approximation algorithm for that problem .",
    "furthermore , it would be nice to investigate if some of the ideas of this paper , and in particular the bi - wheel amplifiers , can be used to offer improved hardness results for other optimization problems , such as the steiner tree problem .",
    "c. papadimitriou and s. vempala , _ on the approximability of the traveling salesman problem _ , in proc .",
    "32nd acm stoc ( 2000 ) , pp .",
    "126133 , 2000 ; see also a corrected version in combinatorica 26 , pp . 101120 , 2006 ."
  ],
  "abstract_text": [
    "<S> in this paper , we study the approximability of the metric traveling salesman problem ( tsp ) and prove new explicit inapproximability bounds for that problem . </S>",
    "<S> the best up to now known hardness of approximation bounds were @xmath0 for the symmetric case ( due to lampis ) and @xmath1 for the asymmetric case ( due to papadimitriou and vempala ) . </S>",
    "<S> we construct here two new bounded occurrence csp reductions which improve these bounds to @xmath2 and @xmath3 , respectively . </S>",
    "<S> the latter bound is the first improvement in more than a decade for the case of the asymmetric tsp . </S>",
    "<S> one of our main tools , which may be of independent interest , is a new construction of a bounded degree wheel amplifier used in the proof of our results . </S>"
  ]
}
{
  "article_text": [
    "cooperative control of multi - agent systems is an active research area with broad and relevant applications in commercial , academic and military areas  @xcite .",
    "the design of decentralized and scalable control algorithms provides the necessary coordination for a group of agents to outperform agents operating independently . in multiple scenarios where communication among agents is limited , decentralized computation of the time instants that each agent needs to transmit",
    "relevant information is also necessary .",
    "continuous actuation and continuous measurement of local states may also be restricted by particular hardware limitations .",
    "consensus problems with limited communication have been studied using the sampled - data ( periodic ) approach @xcite , @xcite , @xcite , and @xcite .",
    "an important drawback of periodic transmission is that it requires synchronization between the agents , that is , all agents need to transmit their information at the same time instants and , in some cases , it requires a conservative sampling period for worst case situations .    in the present paper , in lieu of periodic approaches , we use an asynchronous communication scheme based on event - triggered control strategies and we consider agents that are described by general linear dynamics which are subject to limited actuation update rates and also to limited local sensor measurement update rates .",
    "in addition , we consider the case where communication among agents is subject to communication delays .",
    "in contrast to periodic ( or time - triggered ) implementations , in the context of event - triggered control , information or measurements are not transmitted periodically in time but they are triggered by the occurrence of certain events . in event - triggered broadcasting @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , and @xcite , a subsystem sends its local state to the network only when it is necessary , that is , only when a measure of the local subsystem state error is above a specified threshold .",
    "event - triggered control strategies have been used for stabilization of multiple coupled subsystems as in @xcite , @xcite , and @xcite .",
    "consensus problems have also been studied using these techniques @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite .",
    "event - triggered control provides a more robust and efficient use of network bandwidth .",
    "its implementation in multi - agent systems also provides a highly decentralized way to schedule transmission instants which does not require synchronization compared to periodic sampled - data approaches .",
    "one important restriction related to event - triggered control techniques is that continuous measurement of state variables and continuous computation of state errors and time - varying thresholds is required .",
    "one solution explored by different researchers is self - triggered control @xcite , @xcite , @xcite , @xcite .",
    "the main difference with respect to event - triggered control is that a measure of the state is not being compared constantly against a predefined threshold . instead",
    ", the current state measurement is used to determine its next deadline , i.e. the next time that the sensor is required to send a measurement to the controller . a recent extension to event - triggered control",
    "is the so called _ periodic event - triggered control _",
    "@xcite , @xcite , where measurements of states and computations of errors and thresholds occur , not continuously in time , but only at periodic time instants .",
    "the decision to transmit the current measurement is taken at the sampling instants based on current measurements and computed thresholds .",
    "consensus problems where all agents are described by general linear models have been considered by different authors @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , @xcite , and @xcite . in these papers",
    "it is assumed that continuous communication between agents is possible .",
    "the work in @xcite considers the consensus problem of agents with linear dynamics under communication constraints .",
    "specifically , the authors consider the existence of continuous communication among agents for finite intervals of time and the total absence of communication among agents for other time intervals , and the minimum rate of continuous communication to no communication is given .",
    "event - triggered consensus of agents with linear dynamics and limited communication was recently explored in @xcite and @xcite . in our previous work @xcite and",
    "@xcite we proposed a novel approach in which each agent implements models of the decoupled dynamics of each one of its neighbors and uses the model states to compute the local control input .",
    "this approach offered better performance than zero - order - hold ( zoh ) approach used in @xcite and @xcite where the updates from neighbors are kept constant by the local agent .",
    "a similar model - based framework was proposed in @xcite where only constant thresholds were used .",
    "one of the main limitations of the zoh approach @xcite , @xcite is that it is not capable to keep up with unstable trajectories and updates need to be generated more frequently . in consensus with general linear dynamics , unstable systems",
    "are one of the most interesting cases to analyze .",
    "the model - based approach in @xcite , @xcite provides better estimates of neighbors and reduces generation of events as agents converge to similar unstable trajectories .",
    "communication delays using the event - triggered approach in these papers were addressed in @xcite .",
    "the present paper offers complete proofs with respect to @xcite and , more importantly , it extends the consensus protocol in that paper in order to consider limited actuation and sensing update rates .",
    "a periodic event - triggered control technique for consensus of linear multi - agent systems is proposed in the present paper where each agent implements discretized and decoupled models of the states of neighbors .",
    "communication delays are also considered .",
    "the case shown in @xcite represents only a particular case of the approach described here , when continuous actuation and continuous measurements are possible to implement and obtain , respectively .    in the present paper decentralized event thresholds that guarantee practical consensus and strictly positive inter - event times",
    "are designed .",
    "the lower - bounds on the inter - event time intervals are independent of the particular system trajectories , therefore they hold for any two consecutive local events .",
    "the main contribution of this paper is the design of periodic event - triggered strategies for consensus of linear systems with limited sensing and actuation updates and with communication delays .",
    "the periodic event - triggered control technique automatically avoids the presence of zeno behavior .",
    "however , and for completeness , we establish the relationship between a selected sampling period and the performance of the consensus protocol with respect to the bounds on the state disagreement .",
    "the present paper addresses the several problems that were not considered by @xcite :    1 .",
    "time - varying communication delays .",
    "the transmitted event - based measurement updates are subject to communication delays .",
    "2 .   constrained sensing and event computation rate .",
    "each agent does not need to continuously measure its own state but only at finite time instants .",
    "similarly , continuous computation of errors and events is not necessary and these operations are performed only at discrete - time instants .",
    "3 .   constrained actuation rate .",
    "this event - based approach also provides sampled actuation time instants instead of continuous actuation .",
    "continuous measurement , actuation , and computation of events severely restrict the operation of the subsystems ; therefore , the relaxations addressed in this paper offer a significant advantage in terms of implementation and resource management .",
    "the remainder of this paper is organized as follows .",
    "section  [ sec : two ] provides a brief background on graph theory and describes the problem and the consensus protocol .",
    "section  [ sec : three ] gives a result assuming continuous communication which will be used in the main results of this paper in sections  [ sec : four ] and  [ sec : five ] .",
    "design of periodic decentralized event thresholds for systems with limited sensing and actuation capabilities is addressed in section  [ sec : four ] .",
    "section  [ sec : five ] extends this approach in order to consider time - varying , but bounded , communication delays .",
    "section  [ sec : six ] presents illustrative examples and section  [ sec : seven ] concludes the paper .",
    "consider a graph @xmath0 consisting of a set of vertices or nodes @xmath1 and a set of edges @xmath2 .",
    "an edge between nodes @xmath3 and @xmath4 is represented by the pair @xmath5 . a graph @xmath6 is called undirected if @xmath7 and the nodes are called adjacent .",
    "the adjacency matrix @xmath8 is defined by @xmath9 if the nodes @xmath3 and @xmath4 are adjacent and @xmath10 otherwise . if @xmath11 , then @xmath4 is said to be a neighbor of @xmath3 .",
    "the set @xmath12 is called the set of neighbors of node @xmath3 , and @xmath13 is its cardinality .",
    "a node @xmath4 is an element of @xmath12 if @xmath11 .",
    "a path from node @xmath3 to node @xmath4 is a sequence of distinct nodes that starts at @xmath3 and ends at @xmath4 , such that every pair of consecutive nodes is adjacent .",
    "an undirected graph is connected if there is a path between every pair of distinct nodes .",
    "the laplacian matrix @xmath14 of @xmath6 is defined as @xmath15 where @xmath16 represents the degree matrix which is a diagonal matrix with entries @xmath17 . for undirected graphs ,",
    "@xmath14 is symmetric and positive semi - definite .",
    "@xmath14 has zero row sums and , therefore , zero is an eigenvalue of @xmath14 with associated eigenvector @xmath18 ( a vector with all its @xmath19 entries equal to one ) , that is , @xmath20 . if an undirected graph is connected then @xmath14 has exactly one eigenvalue equal to zero and all its non - zero eigenvalues are positive ; they can be set in increasing order @xmath21 , with @xmath22 .",
    "[ lm : lyapfn ] let @xmath14 be the symmetric laplacian of an undirected and connected graph .",
    "then , consensus is achieved if and only if @xmath23 where @xmath24 , @xmath25 is a symmetric positive definite matrix , @xmath26 @xmath27 , and @xmath28 denotes the kronecker product .    _",
    "proof_. see appendix .",
    "consider a group of @xmath19 agents with fixed communication graphs and fixed weights .",
    "each agent s dynamics are described by the following : @xmath29 with @xmath30 where @xmath31 , @xmath32 , @xmath33 is the state of agent @xmath3 , and @xmath34 is the control input for agent @xmath3 .",
    "@xmath35 and @xmath36 are design parameters that are defined below .",
    "the variables @xmath37 represent a model of the @xmath38 agent s state using the decoupled and discretized dynamics : @xmath39 for @xmath40 where @xmath41 , @xmath42 , and @xmath43 .",
    "we refer to @xmath44 as the discretization or sampling period since it is used to obtain the discrete - time model @xmath45 and the state of each agent , @xmath46 , @xmath47 , is sampled every @xmath44 time units .",
    "the discretization period @xmath44 is constant but the communication intervals for each agent are not constant .",
    "the transmission time intervals are non - periodic and are determined by event - triggered rules .",
    "this means that at every time instant @xmath48 each agent samples its own state and updates its control input .",
    "it also uses its sampled state to compute its local state error and to determine if it is necessary or not to transmit the current state @xmath49 to its neighbors .",
    "an example showing this relationship is shown in fig .",
    "[ fig : tutki ] .",
    "this figure shows the continuous - time state @xmath50 and its discrete - time model @xmath51 .",
    "two event - triggered model updates are shown , at time @xmath52 and at time @xmath53 .",
    "the first event - triggered model update occurs at sampling time @xmath48 while the following event time instant is equivalent , in this example , to sampling time @xmath54 , that is , @xmath55 sampling time instants occur between @xmath52 and @xmath53 in this example .",
    "note that at the event time instants the model is updated and it takes the current value of @xmath56 .",
    "the main advantage of using a periodic event - triggered control scheme is that measuring the state of each agent ( and the associated computations that require evaluation of state errors and thresholds ) is only performed at some periodic time instants ( every @xmath44 time units ) instead of doing it continuously as it is common in most event - triggered control schemes .",
    "there are additional advantages of using discrete - time models of the continuous - time system dynamics compared to @xcite , @xcite where continuous - time models were used . for instance",
    ", continuous actuation is not required and the operations related to implementing discrete - time models at every node are simplified with respect to implementing continuous - time models .    every agent in the network implements a model of itself @xmath51 and also models of its neighbors @xmath57 , @xmath58 .",
    "the model state @xmath51 is not used by agent @xmath3 for control since the real state , @xmath59 , is locally available at every sampling time @xmath48 .",
    "however , the local model state , @xmath51 , is used to trigger local events .",
    "this way of defining the local control input represents a difference with respect to the approach in @xcite and @xcite where the control input is a function of model variables , including @xmath60 .",
    "local events for agent @xmath3 are defined as follows .",
    "when an event is triggered , agent @xmath3 will transmit its current state @xmath56 to its neighbors and each one of the neighbors updates the model state they have of agent @xmath3 . at the same time instant ,",
    "agent @xmath3 will update its local model using the same state measurement .",
    "the notation @xmath52 represents the local broadcasting time instants , i.e. when agent @xmath3 triggers an event and transmits its current state .",
    "since we check for events not continuously but only at sampling times @xmath48 , then @xmath52 is equal to some sampling instant @xmath48 but , in general , not every time instant @xmath48 is a broadcasting instant @xmath52 .",
    "the decision to trigger an event in order to broadcast the current state is given by the event - triggered schemes described in the following sections .",
    "for negligible communication delays , agent @xmath3 and its neighbors will all update their local models @xmath51 at the same time instant .",
    "since agent @xmath3 and its neighbors use the same measurements to update the models , say , @xmath56 and the model dynamics   represent the decoupled dynamics where all agents use the same state matrix , then the model states @xmath51 implemented by agent @xmath3 and by its neighbors are the same . in the presence of communication delays the previous statement will not hold and we will differentiate between @xmath61 , the model state of agent @xmath3 as seen by agent @xmath3 , and @xmath62 , the model state of agent @xmath3 as seen by agents @xmath4 , @xmath63 . more details concerning communication delays are presented in section [ sec : five ] .",
    "the model update process is similar for all agents @xmath47 .",
    "the local control input   is decentralized since it only depends on local information , that is , on the sampled state of the local agent and on the discretized model states of its neighbors .",
    "continuous or even periodic access to the states of neighbors is not needed .",
    "note that the difference between zoh periodic samples of the agent dynamics   and our proposed models   is given by the input term in   and this input decreases as the agents approach a consensus state .",
    "it can also be seen that in the particular case when systems   represent single integrator dynamics , then our models degenerate to zoh models as in @xcite , @xcite .",
    "this section provides an important result in lemma [ lm : conslin ] that will be useful in the following sections .",
    "let us assume in this section that continuous actuation by each agent and continuous communication between agents are possible , then the agent dynamics are now driven by the local control inputs @xmath64 assume that the pair ( @xmath65 ) is controllable .",
    "then , for @xmath66 there exists a symmetric and positive definite solution @xmath67 to @xmath68 let @xmath69 and @xmath70 .",
    "[ th : consensus ] assume the pair ( @xmath65 ) is controllable and the communication graph is connected and undirected .",
    "define @xmath71 as in   and @xmath70 .",
    "then the following symmetric matrix @xmath72 has only @xmath73 eigenvalues equal to zero and the rest of its eigenvalues are negative . in addition , the eigenvectors associated with its @xmath73 zero eigenvalues belong to the subspace spanned by the eigenvectors associated with the @xmath73 zero eigenvalues of @xmath74 , where @xmath75 , @xmath76 , @xmath77 , @xmath78 , and @xmath79 is an identity matrix of size @xmath19 .    _",
    "proof_. see appendix .",
    "[ lm : conslin ] assume the pair ( @xmath65 ) is controllable and the communication graph is connected and undirected . then , protocol , with @xmath71 defined in   and @xmath70 , solves the consensus problem for agents described by .",
    "furthermore , the lyapunov function defined by @xmath80 has a time derivative along the trajectories of   with inputs   given by @xmath81 .    from theorem [ th : consensus",
    "] it can be seen that @xmath82 is negative when the overall system is in disagreement and is equal to zero only when the corresponding states are in total agreement . in the latter case we also have @xmath83 ,",
    "see lemma [ lm : lyapfn ] .",
    "different from consensus with single integrators , where the agents converge to a constant value , here it is only required that the difference between states of agents tends to zero , regardless of the particular response of the systems . as with many consensus algorithms , an estimate of the second smallest eigenvalue of the laplacian matrix is required ; this is the only global information needed by the agents .",
    "algorithms for distributed estimation of the second eigenvalue of the laplacian have been presented in @xcite , @xcite .",
    "readers are referred to these papers for details .",
    "in this section we consider the case when agents use event - triggered communication strategies in order to reduce the frequency of transmissions . every agent implements discrete - time models and samples its own state every @xmath44 time units in order to compute its local control input and check its local thresholds .",
    "it is assumed in this section that communication delays are negligible .",
    "we derive decentralized thresholds that depend only on local information and can be measured and applied in a decentralized way .",
    "additionally , it is shown how the choice of the period @xmath44 affects the bounds on the disagreement between states of agents and how to select the threshold parameters to determine lower bounds on the inter - event time intervals .",
    "define @xmath84 and @xmath85 , @xmath86 , @xmath87 , where @xmath88 represents the hypothetical continuous - time model @xmath89 definition is only used for analysis of the event - triggered controller ; it is not used for implementation of the event - triggered consensus algorithm .",
    "let us define the discretization errors @xmath90 for @xmath91 . also define @xmath92 , @xmath93 , @xmath94 . instead of @xmath95 , the new coupling factor @xmath96 is now used in the inputs .    [",
    "th : decent ] assume the pair ( @xmath65 ) is controllable and the communication graph is connected and undirected . define @xmath71 in   and @xmath96 where @xmath97 . then agents   with inputs   and discrete - time models achieve a bounded consensus error where the difference between any two states is bounded by @xmath98 for @xmath99 and for any @xmath100 , if the local events are triggered when @xmath101 where @xmath102 , @xmath103 , @xmath104 @xmath105 , @xmath106 and @xmath107 furthermore , the agents do not exhibit zeno behavior and the inter - event times @xmath108 for every agent @xmath47 are bounded as follows @xmath109 if @xmath110 where @xmath111 @xmath112 , @xmath113 , @xmath114 , and @xmath42 is the discretization period .    _",
    "proof_. by implementing the coupling factor @xmath96 in , we can write - in compact form as follows : @xmath115 where @xmath116 , @xmath117 , @xmath118 .",
    "the overall system dynamics is written in terms of the closed - loop state @xmath119 plus two error variables that are introduced in the system dynamics because of the sampled inputs and the event - based communication strategies .",
    "the error @xmath120 is due to the fact that each agent only communicates its local state at some local event time instants and the error @xmath121 is due to the fact that only discrete models of neighbors and periodic samples of the local state are used to compute the control input instead of continuous variables . in other words , the first error results from limiting the communication between agents and the second error results from reducing actuation time instants at each local node .",
    "let us denote the time just before the actuation update as @xmath143 , so we check the discretization errors in using @xmath144 and @xmath145 , i.e. the errors just before they are reset to zero .",
    "thus , we can write @xmath146   \\label{eq : vdot4}\\end{aligned}\\ ] ] where @xmath147 , @xmath148 , and the variables @xmath149 , @xmath150 , and @xmath151 , for @xmath63 can be obtained locally ( see fig . [",
    "fig : discerr ] ) at every time @xmath48 using the current and previous samples of the local state and the local models as follows @xmath152 the variables @xmath124 and @xmath153 , @xmath154 , can not be measured continuously but only at times @xmath48 as it is illustrated in fig .",
    "[ fig : discerr ] .",
    "when threshold   holds , say , at time @xmath52 then the error resets to zero , that is , @xmath155 , since @xmath156 .",
    "also , since @xmath157 for some non - negative integer @xmath158 ( recall that communication events can only occur at the sampling times @xmath48 ) , then , the control input is updated and the discretization errors are equal to zero , that is , @xmath141 .",
    "this means that @xmath159 , then the following holds @xmath160 consequently , @xmath161\\end{aligned}\\ ] ]",
    "since @xmath162 we have that @xmath163 for @xmath47 and @xmath164 we use the fact that @xmath74 is positive semi - definite and it has @xmath73 zero eigenvalues with corresponding eigenvectors @xmath165 .",
    "let @xmath166 such that @xmath167 and @xmath168 , that is , @xmath169 belongs to the subspace spanned by @xmath165 .",
    "consider @xmath170 also @xmath171 from theorem  [ th : consensus ] we know that @xmath172 is positive semi - definite with @xmath73 zero eigenvalues and @xmath173 .",
    "we can see that @xmath174 and @xmath175 where @xmath176 is the minimum eigenvalue of @xmath172 other than zero . combining the expressions above we have @xmath177 then @xmath82 can be bounded as follows : @xmath178 solving   we have that @xmath179 expression   represents a bound on the consensus states as a function of the initial separation of the agents @xmath180 .",
    "we can express @xmath181 and a direct bound on the difference between any two states @xmath182 can be obtained as follows .",
    "since the graph is undirected the term @xmath183 appears twice in the summation @xmath184 , then we can write @xmath185 finally , the difference between any two states can be bounded as in .",
    "we will now prove that the inter - event times are lower bounded by the sampling period as in .",
    "first note that @xmath186 where @xmath187 and @xmath188 .",
    "for the first term in we have that the following holds @xmath189 te second term in can be written as follows @xmath190 then we can write as follows @xmath191 for any time @xmath48 .",
    "in particular , at the local event times @xmath52 we have that @xmath155 and @xmath192 .    in order to prove we need to guarantee",
    "that does not grow from zero at time @xmath52 to @xmath193 at time @xmath194 and will not trigger an event at @xmath194 .",
    "in other words , for a given sampling period @xmath44 , we need to find the value of @xmath193 that guarantees .",
    "consider the error dynamics of agent @xmath3 from @xmath52 to @xmath194 as follows : @xmath195 note that @xmath155 since the error is reset at the event time @xmath52 , then we have that @xmath196 the effect of the discretization errors is considered before they are reset to zero at time @xmath194 because of the actuation update , so we have @xmath197 now , let us analyze the term @xmath139 .",
    "consider @xmath198 note that @xmath199 we use , , and to analyze the growth of the term @xmath200 from @xmath52 to @xmath194 @xmath201 then , by the selection of @xmath193 in we can guarantee that after an event instant at @xmath52 the term @xmath200 can not grow from zero to @xmath193 and threshold is not triggered .",
    "then , the inter - event times are greater than @xmath202 and , obviously , we can guarantee that zeno behavior does not occur at any node .",
    "@xmath203    _ remark_. the design parameter @xmath193 provides a tradeoff between performance as measured by the consensus error and the bound on the inter - event intervals .",
    "also note that the variables used to compute the threshold  , which define the events at node @xmath3 , are available locally .",
    "concerning global information we only need an estimate of the second eigenvalue of the laplacian , as it was mentioned earlier .    _",
    "remark_. note that the triggering of a local event by agent @xmath3 , i.e. the transmission of a measurement @xmath56 , does not change the local control input @xmath204 beyond the local actuation update , since @xmath204 is not a function of @xmath60 .",
    "the transmission of a new measurement updates the control inputs of neighbor agents and for the local agent , it only resets its local state error @xmath205 and @xmath200 .    _",
    "remark_. the results provided in this paper hold for agents described by general linear dynamics .",
    "the common cases of single integrators and double integrators are particular cases covered by this framework .",
    "the single integrator is modeled as a zoh and the double integrator is modeled similar to @xcite , that is , velocity as a zoh and position as a first - order - hold model .",
    "_ remark_. the event - triggered consensus algorithm provides a bound on the difference between any two states not only at the sampling time instants but for any @xmath100 .",
    "also note that @xmath193 can be made arbitrarily small ( thus decreasing the bound ) and still satisfy by choosing a small discretization period @xmath44 since we have that both @xmath206 and @xmath207 ( therefore @xmath208 ) as @xmath209 .",
    "in this section we consider the presence of time - varying but bounded communication delays .",
    "since the measurement updates will be delayed , the neighbors of an agent @xmath3 will have a version of agent @xmath3 s model state that is different than agent @xmath3 s version .",
    "it is necessary to distinguish between the model state as seen by the local agent , itself , and as seen by its neighbors .",
    "define the dynamics and update law of the model state of agent @xmath3 as seen by agent @xmath3 as @xmath210 the measurement @xmath211 is transmitted by agent @xmath3 at time @xmath52 and will arrive at agents @xmath4 , @xmath63 , at time @xmath212 . for a given update instant all receiving agents experience the same delay @xmath213 .",
    "however , this is not a constraint and the communication delays can be generalized so , for the same update instant @xmath52 , the neighbors are updated at different time instants .",
    "this is described at the end of this section .",
    "assume without loss of generality that @xmath214 and @xmath215 is an integer , that is , the delay is an integer multiple of the sampling period @xmath44 . if the delay is not an integer multiple of the sampling period the receiving agent uses the corresponding delayed measurement at the next sampling period to update the corresponding model which effectively makes the delay to be an integer multiple of @xmath44 .",
    "define the dynamics of the model state of agent @xmath3 as seen by agent @xmath4 , @xmath63 , as @xmath216 the states of these models are updated when a delayed measurement of agent @xmath3 is received by agent @xmath4 , @xmath63 .",
    "the state measurement @xmath56 transmitted by agent @xmath3 at time instant @xmath52 is received by agent @xmath4 , @xmath63 , at time instant @xmath217 .",
    "let us define the update law of the model state of agent @xmath3 as seen by agent @xmath4 , @xmath63 , as @xmath218 where @xmath52 represents the update instants triggered by agent @xmath3 and @xmath219 represents the communication delay associated to the triggering instant @xmath52 .",
    "define a positive and constant upper bound on the communication delays by @xmath220 , that is , @xmath221 for any triggering instant @xmath52 and for @xmath47 . later in this section",
    "we will define the design parameters that bound the inter - event times as a function of the delay @xmath222 .",
    "note that @xmath223 , for @xmath47 .",
    "assume that the current delay , @xmath224 , is known to the receiving agents , for instance , by applying time - stamping techniques .",
    "since both , @xmath225 and @xmath226 , use the same state matrix to compute their response between their corresponding update instants , then we define @xmath227 that is , the delayed measurement is propagated forward in time and the result is used to update the state of the model as shown in . by definition , we have that the following _ local _ triggering event will occur at time @xmath228 , this means that @xmath229 because no other local event has been triggered since time instant @xmath52 .",
    "therefore , we have that @xmath230 for @xmath231 and @xmath232 for @xmath233 .",
    "define the state errors @xmath234 note that @xmath235 and @xmath236 , for @xmath237 .",
    "these relations are pictured in fig .",
    "[ fig : figuremoderr ] .    also define @xmath238 and @xmath239 , where the components @xmath240 in @xmath241 represent the errors defined in , that is , the error of agent @xmath3 as seen by its neighbors @xmath242 , @xmath243 .",
    "define the discretization errors @xmath244 , @xmath245 , @xmath246 , @xmath247 , @xmath248 , @xmath249 , @xmath250 , @xmath251 .",
    "the dynamics of every agent in with communication delays captured by the new input definitions ( which are functions of delayed model states @xmath252 ) : @xmath253 can be written in compact form as follows : @xmath254 where the coupling strength @xmath96 has been used .",
    "note that if we follow the same analysis as in theorem [ th : decent ] we can arrive at an expression similar to involving the local control inputs @xmath128 , the local discretization errors , and the delayed errors @xmath255 .",
    "the latter will create a major difficulty in designing the local events since the local agent @xmath3 does not have access to the errors @xmath255 as seen by its neighbors .",
    "more importantly , the local agent is not able to reset the error @xmath255 but only the local error @xmath256 .",
    "the following theorem provides a method to design local events in the presence of communication delays and using the local state errors @xmath256 to locally evaluate the events .",
    "[ th : decentdelay ] assume the pair ( @xmath65 ) is controllable and the communication graph is connected and undirected .",
    "define @xmath71 in   and @xmath96 where @xmath97 .",
    "then agents   with inputs   achieve , in the presence of communication delays @xmath257 , a bounded consensus error where the difference between any two states is bounded by for @xmath99 , if the events are triggered when @xmath258 where @xmath102 , @xmath259 @xmath260 @xmath261 the terms @xmath262 and @xmath263 are given by @xmath264 , \\label{eq : deltadd } \\end{array } \\right.\\end{aligned}\\ ] ] @xmath265 , \\label{eq : deltacur } \\end{array } \\right.\\end{aligned}\\ ] ] where @xmath105 , @xmath266 , @xmath267 , @xmath114 , @xmath268 , @xmath269 , @xmath270 .",
    "furthermore , the agents do not exhibit zeno behavior and the inter - event times @xmath108 for every agent @xmath47 are bounded by @xmath271 , that is @xmath272 if @xmath273    _ proof_. consider the candidate lyapunov function @xmath80 and evaluate the derivative along the trajectories of systems   with inputs  .",
    "@xmath274 following similar steps to - in the proof of theorem [ th : decent ] and using the inequality @xmath130 , for @xmath105 , we can write @xmath275       \\end{array } \\label{eq : vdotdelay2 } \\right.\\end{aligned}\\ ] ] where @xmath276 represents the state error , at time instants @xmath48 , of agent @xmath4 as seen by agent @xmath3 , for @xmath58 .",
    "we can write as follows @xmath277 .",
    "\\end{array } \\label{eq : vdotdelay2a } \\right.\\end{aligned}\\ ] ] using the inequality @xmath130 , for @xmath105 , once again , we obtain @xmath278 \\\\     & = x^t\\bar{\\mathcal{l}}x + \\sum^{n}_{i=1}\\big[-c_1z_i^tpbb^tpz_i    \\\\    & ~~+c_1(1\\!+\\!b)^2\\breve{z}_i^tpbb^tp\\breve{z}_i \\big ] \\\\      & ~~+c_1(1\\!+\\!\\frac{1}{b})\\zeta_d^t(t_\\mu)(\\mathcal{a}\\otimes b^tp)^t(\\mathcal{a}\\otimes b^tp)\\zeta_d^t(t_\\mu )   \\\\      & ~~+c_1(1\\!+\\!b)(1\\!+\\!\\frac{1}{b})\\breve{\\zeta}_d^t(\\mathcal{a}\\otimes b^tp)^t(\\mathcal{a}\\otimes b^tp)\\breve{\\zeta}_d^t .",
    "\\end{array } \\label{eq : vdotdelay2b } \\right.\\end{aligned}\\ ] ] the variables @xmath128 and @xmath139 can be computed locally by every node .",
    "let us then focus on the delayed error terms @xmath279 and @xmath280 . define @xmath281 , then we have that @xmath282 for the term @xmath283 the following holds : @xmath284 with @xmath285 .",
    "the notation @xmath286 represents the event time @xmath52 but just before the local error is reset to zero .",
    "this update of the variable @xmath287 at time @xmath52 is obtained by simply realizing that @xmath288 ( the local error just before it resets to zero ) , since the local model @xmath225 is updated using @xmath56 and @xmath289 .",
    "define @xmath290^t$ ] and we have that @xmath291 consider the worst case scenario ( greatest difference between @xmath292 and @xmath293 ) given when all agents transmit at the same instant @xmath294 and the greatest possible delay @xmath295 is present .",
    "then , we have the following @xmath296 \\\\   & \\leq \\sum_{i=1}^n\\big[e_{ii}^t(t_{k_i}^-)(g^p)^tg^pe_{ii}(t_{k_i}^- )      + 2\\left\\|g^pe_{ii}(t_{k_i}^-)\\right\\|\\upsilon z_{i , m } + ( \\upsilon z_{i , m})^2 \\big ]      \\end{array }   \\right .",
    "\\label{eq : errij - errii}\\end{aligned}\\ ] ] where @xmath297 .",
    "the local error @xmath298 represents the error just before the update instant , i.e. , before it is reset to zero because of the update at time @xmath52 . on the other hand",
    ", @xmath299 represents the error _",
    "after _ the update at time @xmath52 and it can only be estimated using @xmath300 where @xmath235 and @xmath301 represents an upper - bound on the the local control input for the time interval @xmath302 $ ] , that is , @xmath303 for @xmath304 .",
    "since the worst case is given by the maximum delay @xmath222 we can use and the current local error @xmath256 to bound the delayed error @xmath305 for any sampling time @xmath306 , therefore the term is used as a part of the overall threshold . in other words ,",
    "we propagate the current error @xmath256 forward in time using the worst case delay @xmath222 , as if we had an event at time @xmath48 , then we check . if holds then an event is triggered ; otherwise , no event is needed and we repeat the same process at the following sampling time instant @xmath307 .",
    "now , we consider the discretization error @xmath308 corresponding to the delayed state errors @xmath292 .",
    "the discretization errors are reset at every sampling time @xmath48 ; therefore , we only need to consider the effect of these errors at time @xmath309 for the worst case delay @xmath295 . in other words , we need to evaluate the difference @xmath310 as a function of the state errors @xmath311 .",
    "this can be done as follows : @xmath312   \\\\",
    "= \\sum_{i=1}^n\\big[e_{ii}^t(t_{k_i}^-)((g - i)g^{p-1})^t(g - i)g^{p-1}e_{ii}(t_{k_i}^- )   \\\\   ~~ + 2\\left\\|(g\\!-\\!i)g^{p-1}e_{ii}(t_{k_i}^-)\\right\\| ( \\left\\|g\\!-\\!i\\right\\|\\upsilon_h \\!+\\ !",
    "\\left\\|e\\right\\|)z_{i , m } \\\\      ~~ + \\big((\\left\\|g - i\\right\\|\\upsilon_h + \\left\\|e\\right\\|)z_{i , m}\\big)^2   \\big ]      \\end{array } \\label{eq : discdelerr } \\right.\\end{aligned}\\ ] ] since we want to guarantee for any sampling time @xmath48 then we use the current error @xmath256 and we include in the overall threshold .",
    "then , the following holds : @xmath313 .",
    "\\label{eq : vdotdelay2 - 6 } \\end{aligned}\\ ] ] then , the local thresholds can be defined based on the local errors @xmath256 as in with @xmath200 given by . when an event is triggered the error",
    "@xmath314 is reset to zero and the following holds @xmath315 and the bound on the difference between any two states follows .",
    "also note that @xmath316 expression can also be written as @xmath317 from we have that @xmath318 and since the right hand side of increases as @xmath319 increases from @xmath320 to @xmath321 , then we can conclude that @xmath322 for @xmath304 .",
    "the final task is to determine @xmath193 such that the inter - event times satisfy for a given @xmath222 that satisifies @xmath323 . at time",
    "@xmath52 we have that the local error is reset , i.e. @xmath235 , and no event is to be triggered by the local agent @xmath3 during the time interval @xmath324 .",
    "then , the error @xmath299 can be estimated as in .",
    "now , the term @xmath325 can be bounded as follows : @xmath326 following similar steps as in the term @xmath327 can be estimated as follows : @xmath328 then , by the selection of @xmath193 in we can guarantee that after an event instant at @xmath52 the term @xmath200 does not grow enough to reach the value @xmath193 at time @xmath329 and threshold is not triggered before or at @xmath329 .",
    "then , the inter - event times are greater than @xmath222 as shown in and , obviously , we can guarantee that zeno behavior does not occur at any node .",
    "@xmath203    the communication delays are time - varying , that is , the value of the delays @xmath224 and @xmath330 , for any @xmath331 , are not the same in general .",
    "however , it was assumed in this section that for a given update time instant @xmath52 the neighbors of agent @xmath3 will all receive the measurement @xmath56 at time @xmath217 .",
    "this can be generalized to consider different delays from agent @xmath3 to each one of its neighbors at the same update time instant .",
    "in other words , we can consider the delays @xmath332 and @xmath333 to be different in general , for @xmath334 .",
    "thus , the models @xmath226 and @xmath335 may differ during some time intervals , when one is updated sooner than the other . fig .",
    "[ fig : diffdel ] shows a simple example where agents @xmath320 , @xmath336 , and @xmath337 are neighbors of agent @xmath3 . in general , we have that @xmath338 and the delayed models are updated at different time instants .",
    "assuming that @xmath339 for @xmath340 , then it is clear that the same results in this section apply to the more general case under discussion since the growth on each error is still bounded by the error difference propagated using the upper - bound on the delay @xmath341 , for any @xmath340 .",
    "consider a decentralized model - based implementation of four second - order agents ( @xmath342 ) with unstable linear dynamics given by : @xmath343 solving we obtain @xmath344 the continuous - time state matrix is unstable with complex eigenvalues @xmath345 .",
    "the discretization period is @xmath346 seconds , the delay bound is @xmath347 seconds , and we compute @xmath348 .",
    "the nonzero elements of the undirected adjacency matrix are @xmath349 , ( the corresponding symmetric elements are also equal to one ) .",
    "the initial condition of each agent are as follows    @xmath350 @xmath351 fig .",
    "[ fig : states ] shows the response of the agents where it can be seen that the agents synchronize their states in each one of their two dimensions .",
    "communication delays for each agent are time - varying and they take random values form the finite set : @xmath352 seconds . fig [ fig : comm ] shows the time instants where each agent broadcasts a measurement . here , it can be seen that agents transmit information less frequently as they transition into a consensus state .",
    "the inter - event times for every agent are lower - bounded by the delay bound , that is , @xmath353 seconds . due to a higher density of transmissions at the beginning of the simulation , a new figure , fig .",
    "[ fig : comm_zoom ] , has been included to show with more clarity the first @xmath337 seconds of the simulation and to show that the inter - event time intervals for any agent are always greater than the delay bound @xmath222 .",
    "synchronization of state trajectories of linear multi - agent systems was studied in this paper .",
    "multiple issues affecting the convergence to common trajectories were considered such as : limited sensing and actuation capabilities , limited communication , and time - varying communication delays .",
    "event - triggered control schemes were proposed in this paper which not only provide decentralized control inputs but also allow for decentralized design of transmission instants where each agent decides , based only on local information , when to broadcast its current measurements .",
    "then , global knowledge of communication periods and communication time instants is not needed as in sampled - data approaches .",
    "the use of discretized and decoupled models and the implementation of periodic event - triggered techniques provides a formal framework that limits actuation and sensing update rates and reduces communication .",
    "this method also provides the necessary freedom to each agent in order to determine its own broadcasting instants .",
    "_ proof of lemma [ lm : lyapfn]_. sufficiency : we can express @xmath354 using the following : @xmath355 since the graph is undirected   can be written in the following form : @xmath356 since @xmath357 and the graph is connected it is clear that if @xmath83 then @xmath358 for @xmath359 .",
    "necessity : consider the following expression : @xmath360 where @xmath361 represents an @xmath362dimensional consensus state and is given by @xmath363 , where @xmath364^{t}$ ] .",
    "then we have : @xmath365 we can conclude that if consensus is achieved then @xmath366 .",
    "@xmath203    _ proof of theorem [ th : consensus]_. since the communication graph is undirected and connected @xmath14 is symmetric and there exists a similarity transformation @xmath367 such that @xmath368 is diagonal with one eigenvalue equal to zero . define @xmath369 then @xmath370 is block diagonal with @xmath73 eigenvalues equal to zero .",
    "let us now consider the following : @xmath371 the term @xmath372 is of the form @xmath373 in our case since @xmath374 is diagonal then @xmath375 is block diagonal .",
    "furthermore , each block is given by @xmath376 , @xmath377 .",
    "then we have that   is given by the block diagonal matrix : @xmath378 , where @xmath379 for @xmath380 .",
    "since @xmath70 and @xmath67 is the solution of   we can conclude that @xmath381 for @xmath377 .",
    "we can see that @xmath382 has @xmath73 zero eigenvalues and the rest of its eigenvalues are negative .",
    "consider the following : @xmath383 where @xmath384 is an eigenvector of @xmath74 given by @xmath385 associated with a zero eigenvalue of @xmath74 where @xmath364^{t}$ ] .",
    "then we have : @xmath386 similarly , @xmath387 .",
    "then it is clear that @xmath384 is an eigenvector of @xmath382 associated with a zero eigenvalue . @xmath203",
    "y.  cao and w.  ren , `` multi - vehicle coordination for double integrator dynamics under fixed undirected / directed interaction in a sampled - data setting , '' _ international journal of robust and nonlinear control _ , vol .",
    "9871000 , 2010 .",
    "h.  liu , g.  xie , and l.  wang , `` necessary and sufficient conditions for solving consensus of double integrator dynamics via sampled control , '' _ international journal of robust and nonlinear control _ , vol .  20 , no .  15 , pp . 17061722 , 2010 .",
    "j.  qin and h.  gao , `` a sufficient condition for convergence of sampled - data consensus for double integrator dynamics with nonuniform and time - varying communication delays , '' _ ieee transactions on automatic control _ , vol .",
    "57 , no .  9 , pp . 24172422 , 2012 .",
    "m.  c.  f. donkers and w.  p. m.  h. heemels , `` output - based event - triggered control with guaranteed linfty - gain and improved event - triggering , '' in _",
    "49th ieee conference on decision and control _ , 2010 , pp .",
    "32463251 .",
    "e.  garcia and p.  j. antsaklis , `` model - based event - triggered control for systems with quantization and time - varying network delays , '' _ ieee transactions on automatic control _",
    "58 , no .  2 ,",
    "pp . 422434 , 2013 .",
    "e.  garcia and p.  j. antsaklis,``parameter estimation and adaptive stabilization in time - triggered and event - triggered model - based control of uncertain systems , '' _ international journal of control _ , vol .",
    "85 , no .  9 , pp .",
    "13271342 , 2012 .",
    "e.  garcia and p.  j. antsaklis,``output feedback model - based control of uncertain discrete - time systems with network induced delays , '' in _",
    "51st ieee conference on decision and control _ , 2012 , pp .",
    "66476652 .",
    "m.  guinaldo , d.  v. dimarogonas , k.  h. johansson , j.  sanchez , and s.  dormido , `` distributed event - based control for interconnected linear systems , '' in _",
    "2011 50th ieee conference on decision and control and european control conference ( cdc - ecc)_.1em plus 0.5em minus 0.4emieee , 2011 , pp .",
    "25532558 .",
    "e.  garcia , y.  cao , h.  yu , p.  j. antsaklis , and d.  w. casbeer , `` decentralized event - triggered cooperative control with limited communication , '' _ international journal of control _ , vol .  86 , no .  9 , pp . 14791488 , 2013 .",
    "x.  yin and d.  yue , `` event - triggered tracking control for heterogeneous multi - agent systems with markov comunication delays , '' _ journal of the franklin institute _",
    "350 , no .  5 ,",
    "pp . 13121334 , 2013 .",
    "z.  li , z.  duan , g.  chen , and l.  huang , `` consensus of multiagent systems and synchronization of complex networks : a unified viewpoint , '' _ ieee transactions on circuits and systems - i : regular papers _ , vol .",
    "57 , no .  1 ,",
    "pp . 213224 , 2010 .",
    "g.  wen , z.  duan , w.  ren , and g.  chen , `` distributed consensus of multi - agent systems with general linear node dynamics and intermittent communications , '' in _ international journal of robust and nonlinear control _ , 2013 .",
    "e.  garcia , y.  cao , and d.  w. casbeer , `` cooperative control with general linear dynamics and limited communication : centralized and decentralized event - triggered control strategies , '' in _ american control conference _",
    ", 2014 , pp .",
    "159164 .",
    "r.  aragues , g.  shi , d.  v. dimarogonas , c.  sagues , and k.  h. johansson , `` distributed algebraic connectivity estimation for adaptive event - triggered consensus , '' in _ american control conference _ , 2012 , pp .",
    "m.  franceschelli , a.  gasparri , a.  giua , and c.  seatzu , `` decentralized laplacian eigenvalues estimation for networked multi - agent systems , '' in _",
    "48th ieee conference on decision and control and 28th chinese control conference _ , 2009 , pp ."
  ],
  "abstract_text": [
    "<S> multi - agent systems cooperation to achieve global goals is usually limited by sensing , actuation , and communication issues . at the local level , continuous measurement and actuation </S>",
    "<S> is only approximated by the use of digital mechanisms that measure and process information in order to compute and update new control input values at discrete time instants . </S>",
    "<S> interaction with other agents or subsystems takes place , in general , through a digital communication channel with limited bandwidth where transmission of continuous - time signals is not possible . additionally , communication channels may be subject to other imperfections such as time - varying delays . </S>",
    "<S> this paper considers the problem of consensus ( or synchronization of state trajectories ) of multi - agent systems that are described by general linear dynamics and are connected using undirected graphs . </S>",
    "<S> an event - triggered consensus protocol is proposed , where each agent implements discretized and decoupled models of the states of its neighbors . </S>",
    "<S> this approach not only avoids the need for continuous communication between agents but also provides a decentralized method for transmission of information in the presence of time - varying communication delays where each agent decides its own broadcasting time instants based only on local information . </S>",
    "<S> this method gives more flexibility for scheduling information broadcasting compared to periodic and sampled - data implementations . </S>",
    "<S> the use of discretized models by each agent allows for a periodic event - triggered strategy where continuous actuation and continuous measurement of the states are not necessary . </S>"
  ]
}
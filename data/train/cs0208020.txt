{
  "article_text": [
    "_ diff _ , a software program that detects differences between two sets of data , has numerous applications in natural language processing . in this paper , we first describe _ diff _ and then give several examples of how _ diff _ can be used in natural language processing .",
    "these examples include the detection of differences , the merging of two sets of different data , the extraction of rewriting rules , and the best matching of two different sets of data .",
    "we summarize the value of this paper below .",
    "* since _ diff _ is one of the basic programs that comes with unix systems , it is readily available and very easy to use . as this paper shows , _ diff",
    "_ is also applicable to various kinds of studies in the field of natural language processing .",
    "this combination makes the program particularly valuable . *",
    "paraphrasing has been become an active area of study @xcite .",
    "section [ sec : kakikae ] shows that we can use _ diff _ to examine the differences between a spoken language and the corresponding written language and in acquiring the rules for the transformations between the spoken and written languages . _",
    "diff _ is not only useful for such studies , but is also applicable to other kinds of studies in the field of paraphrasing .",
    "this paper will provide a basis for such further application of _ diff_. * in general , _ diff _ is used to detect differences between two data .",
    "however , it can also be used to merge data and to match data optimally .",
    "section [ sec : merge ] covers several interesting studies of the use of _ diff _ in merging and best - matching tasks .",
    "these examples are the alignment of a paper and a corresponding presentation and a question - answering system .",
    "this paper thus has originality in terms of topics researched and approach to the research .",
    "in this section , we describe _ diff_.",
    "_ diff _ is a software program of unix systems that is used to compare files",
    ". the program displays line - by - line differences between a pair of text files while retaining the order of the data . for example , suppose we have the following two files :    ....      file 1 :                file 2 :      i                      i      go                     go      to                     to      school .",
    "university . ....    when we give these data to _ diff _ , the difference is displayed in the following way .    ....",
    "< school .",
    "> university .",
    "....    _ diff _ has a _",
    "-d _ option , which is very useful .",
    "when we use _ diff _ with this option , common parts as well as differences are displayed .",
    "that is , files can be merged by using this option .",
    "however , the output of _ diff -d _ is in a form which is used for c preprocessor such as `` ifdef '' and this is difficult for people to read .",
    "therefore , in this paper , we give the differences in the following way :    ....      ; = = = = = begin = = = = =      ( the parts which only exist in the first file )      ; -----------------      ( the parts which only exist in the second file )      ; = = = = =   end   = = = = = ....    where , `` ` ; = = = = = begin = = = = = ` '' indicates the beginning of the differences , `` ` ; = = = = ` ` =   end   = = = = = ` '' indicates the end of the differences , and `` ` ; ----------------- ` '' indicates the boundary between the two sets of data . in this paper",
    ", we refer to _ diff _ in the case where the files are merged by using the ` -d ` option and the differences are displayed in the above form as _",
    "mdiff_.    when we give our earlier pair of files to _ mdiff _ , we obtain the following result .    ....",
    "i      go       to       ; = = = = = begin = = = = =      school .      ;",
    "-----------------      university .",
    "; = = = = =   end   = = = = = ....    `` i go to '' matchs while `` school '' and `` university '' are differences .",
    "the output of _ mdiff _ is easy to examine and understand because it also displays , unlike _ diff _ , the common parts .",
    "we can reproduce the two original files from the output of _",
    "mdiff_. when we take the common part and the upper part of the differences , we obtain the content of the first file .",
    "when we take the common part and the lower part of the differences , we obtain the content of the second file .",
    "we can reproduce all of the original data in this way .",
    "since _ mdiff _ only displays the common part of the data once , it is able to reduce the amount of data . since it is possible to fully reproduce the original data from _ mdiff _ s output",
    ", we are able to say that _ mdiff _ compresses the data while retaining the original information .    since the output of _ diff _ is difficult to read and the output of _ mdiff _ contains all information output by _ diff _ , we use _ mdiff _ for our explanations in the following sections . in the following sections ,",
    "let s look at some actual examples of the application of _ mdiff _ to natural language processing .",
    "in this section , we describe the studies where we used _ mdiff _ to detect differences and then acquired transformation rules from the differences . in more concrete terms , we give the following two examples .",
    "* detection of differences between the outputs of multiple systems * examination of differences to acquire transformation rules      we have been using multiple morphological analyzers to improve the quality of the results of morphological analysis .",
    "suppose that we use two morphological analyzers to analyze `` we like apples . ''",
    "; the results are as follows .",
    "....      system 1                  system 2      we        noun             we        noun      like      verb             like      preposition      apples    noun             apples    noun ....    the word , `` like '' is ambiguous in terms of part of speech ( pos ) and can take `` verb '' or `` preposition '' .",
    "the pos of `` like '' in the above sentence is `` verb '' and the analysis by system 2 was wrong . here ,",
    "when we give the two results to _ mdiff _ , we obtain the following results .    ....",
    "we       noun      ; = = = = = begin = = = = =      like     verb      ; -----------------      like     preposition      ; = = = = =   end   = = = = =      apples   noun ....    _ mdiff _ makes it easy for us to detect differences between the results produced by multiple systems . in this case , we notice that there are differences in the line for `` like '' . here , we determine beforehand that a worker corrects the outputs and judges which is correct when such differences are detected .",
    "when the output of the first system is correct he does nothing and when the output of the second system is correct he marks the beginning of `` ;  '' with an `` x '' .",
    "when we do so , we can automatically select the better result of each difference from the results marked by the worker .",
    "we simply delete the lower part of the difference where there is no `` x '' and delete the upper part of the difference when there is an `` x '' . as a result , we produce a more accurate overall result than either of the two original results .",
    "there are many cases when both parts of a difference are incorrect . in such cases ,",
    "we manually rewrite the data correctly above `` ;  '' .",
    "when we use this method , the only incorrect data that is not corrected are the data on which both the systems have performed exactly the same wrong analysis .",
    "many errors can thus be corrected .",
    "what we want to say here is that we must prepare multiple systems that have different characteristics .",
    "if we use two systems that often produce the same wrong analysis , we will fail to correct a large number of errors .    _",
    "diff3 _ , which is another unix program , is available for analysing the outpus of three systems .",
    "_ diff3 _ detects differences among three files .",
    "although we have given an example of morphological analysis , we can also use _ mdiff _ to detect differences between the results of other forms of analysis as long as the results are expressed in a line - by - line form .",
    "although we have described a study where we detected differences between the outputs of multiple systems , we are also able to detect and correct errors in tagged corpora by comparing the tagged corpora and the results of analysis of the corpora by a certain system .     in + this + paper , +",
    "we + describe + the + meaning + sort .",
    "+ in + general , + sorting + is + performed + by + using +     today + i d + like + to + describe + uh + the + meaning + sort . + in + general , + sorting + is + done + by +    .the result of applying _ mdiff _ to the written - language sample and the corresponding spoken - language sample [ cols= \" < \" , ]     ` < chapter 1 > `    ( content of the presentation only )    ( content of the paper and presentation )    ( content of the presentation only )    ` < /chapter 1 > `    ` < chapter 2 > `    ( content of the presentation only )      in this section , we align a paper with the corresponding presentation @xcite .",
    "the paper and corresponding presentation is the same example as was used in describing the acquisition of the rules for transformation from written to spoken - language data ( section [ sec : diff_spoke_written ] ) .",
    "the presentation was made at an academic conference and the paper corresponds to this presentation .",
    "when we are able to align each part of a presentation with a corresponding part of the paper , this form of alignment is very useful .",
    "for example , when we listen to a presentation , we are able to refer to the part of the paper that corresponds to the part of we are now listening . when we read a paper , we are able to refer to the part of the presentation that corresponds to the part of the paper we are now reading @xcite . in this section ,",
    "we consider the use of _ mdiff _ to align a paper with the corresponding presentation .    here",
    ", let s try to determine the parts of the presentation to which each chapter of the paper corresponds by using _",
    "mdiff_. we suppose that the content is laid out in the same order in the paper and in the presentation . in advance",
    ", we place symbols such as ` < chapter 1 > ` , as shown in figure [ tab : youkou_kousei ] , into the paper .",
    "this is so that we are easily able to recognize the chapters of the paper . by applying _",
    "mdiff _ to the data set that consists of a presentation after both have been transformed so that each line has one word , we obtained the results shown in figure [ tab : youkou_mdiff ] .",
    "next , we obtained the results shown in figure [ tab : youkou_mdiff2 ] by eliminating the upper parts of the differences , i.e. , those that correspond to the paper , and leaving symbols such as ` < chapter 1 > ` in place . the symbols such as ` < chapter 1 > ` are only inserted in the data of the presentation .",
    "we are then able to recognize the chapter of the paper that corresponds with a given part of the presentation .    to put this simply , we place information to indicate chapters in the data of presentations .",
    "we then use the merging function of _ mdiff _ to match the parts of the paper and presentation .",
    "then , by eliminating the content of the paper , we are left with information on the chapters .",
    "we can easily align a paper with a corresponding presentation at the level of chapters by using _",
    "mdiff_.      in this section , we describe our question - answering system that utilizes _ mdiff _ s best - matching function @xcite .",
    "a question - answering system receives a question and outputs an answer . for example , when `` where is the capital of japan ? ''",
    "is given , it returns `` tokyo '' .",
    "when we consider now much knowledge is in written natural language form , we see that the system only has to match a given question with a sentence ( a knowledge sentence ) that includes the knowledge then select the word in the sentence that corresponds to the interrogative pronoun of the question sentence . for example",
    ", in the case of the previous question , the system detects this knowledge sentence in a knowledge database : `` tokyo is the capital of japan . ''",
    "`` tokyo '' is output as the answer since corresponds to the interrogative pronoun in the sentence . here",
    ", we consider the use of _ mdiff _ in answering questions .    ....      ; = = = = = begin = = = = =      x      ; -----------------      tokyo      ; = = = = =   end   = = = = =      is      the       capital      of       japan .   ....",
    "\\(a ) case 1    ....      ; = = = = = begin = = = = =      x      ; -----------------      tokyo      ; = = = = =   end   = = = = =      is      the       capital      ; = = = = = begin = = = = =      of       ; -----------------      in      ; = = = = =   end   = = = = =      japan .   ....",
    "\\(b ) case 2    firstly , we transform the interrogative pronoun in the question sentence into x and change `` ? '' into `` . '' at the end of the sentence .",
    "we then obtain `` x is the capital of japan . '' .",
    "we thus obtain `` tokyo is the capital of japan . '' from the knowledge base .",
    "we obtain the results in figure [ tab : qa_result ] ( a ) by applying _",
    "mdiff _ to the two sentences .",
    "we consider the part that is paired with x in the differences as the answer and correctly obtain `` tokyo '' .",
    "even if there are differences between the compared sentences , we can still use _ mdiff _ to correctly extract the answer .",
    "for example , suppose that the knowledge sentence is `` tokyo is the capital in japan . '' in this case",
    ", the result of _ mdiff _ is as in figure [ tab : qa_result ] ( b ) .",
    "although the number of differences increased , the part that corresponds to x remains `` tokyo '' and the correct answer has been detected .",
    "the question - answering system we have proposed repeats to transform the question sentence and knowledge sentence so that the two sentences are as similar as possible .",
    "it then extracts the answer by matching the sentences when they are at this point .",
    "since we use the similarity between two sentences in that time , we have to define the degree of the similarity between sentences . since we can recognize the common parts and the different parts by using _ mdiff _",
    ", we can calculate the degree of similarity as ( the number of characters in the common part)/(the number of all characters ) . here ,",
    "if we suppose that we have a rule for transforming `` in '' to `` of '' , we match the data after transforming `` tokyo is the capital in japan . '' to `` tokyo is the capital of japan . ''",
    "and we are able to obtain the answer more reliably by decreasing the number of differences .",
    "in this paper , we describe a lot of examples of the use of _ diff _ in various problems of natural language processing . in section [ sec :",
    "system ] , we describe how we apply _ diff _ to a system that combines multiple systems and thus obtain higher precisions than from any of individual systems .",
    "studies on combination of systems are very well known .",
    "we describe how such combination can easily be performed by _",
    "diff_. in section [ sec : kakikae ] , we showed that _",
    "is easily able to examine the differences between a spoken and written language and acquire rules for the transformation between the spoken and written language .",
    "we handled the paraphrasing of written language into spoken language .",
    "however , the study on paraphrasing covers a wide range : automatic extraction of compressed sentences , sentence polishing - up to modify sentences correctly , and transformations from difficult sentences to plain sentences . in these studies , too , it will be easy to apply _ diff _ to various forms of examination and to the extraction of various transformation rules . this paper will become a basis for studies of paraphrasing , an area in which there has been increasing activity . in section [ sec : merge ] , we showed examples of the merging of data and the optimal matching of data . since _",
    "diff _ is generally used to detect differences , section [ sec : merge ] , which shows applications of _ diff _ to merging and matching , presents a new and original approach . in the section",
    ", we showed that it is easy to apply _ diff _ to interesting studies of two kinds , the alignment of a paper with a corresponding presentation and a question - answering system .    in this paper , we have described many examples of the application of _ diff _ to natural language processing .",
    "we hope that _ diff _ will be applied to an ever - widening range of studies .",
    "we were given data for the experiments on alignment of a paper with a corresponding presentation by kiyotaka uchimoto of the communications research laboratory .",
    "masaki murata and hitoshi isahara .",
    "universal model for paraphrasing : using transformation based on a defined criteria . in _",
    "nlprs2001 workshop on automatic paraphrasing : theories and applications _ , 2001 .",
    "masaki murata , masao utiyama , kiyotaka uchimoto , qing ma , and hitoshi isahara .",
    "correction of the modality corpus for machine translation based on machine - learning method .",
    "( in japanese ; an english translation of this paper is available at http://arxiv.org/abs/cs/0105001 ) .",
    "kiyotaka uchimoto , chikashi nobata , kimiko ohta , masaki murata , qing ma , and hitoshi isahara .",
    "segmenting the transcription of a talk by aligning the transcription with its corresponding paper . ,",
    "pages 317321 , 2001 ."
  ],
  "abstract_text": [
    "<S> _ diff _ is a software program that detects differences between two data sets and is useful in natural language processing . </S>",
    "<S> this paper shows several examples of the application of _ </S>",
    "<S> diff_. they include the detection of differences between two different datasets , extraction of rewriting rules , merging of two different datasets , and the optimal matching of two different data sets . since _ </S>",
    "<S> diff _ comes with any standard unix system , it is readily available and very easy to use . </S>",
    "<S> our studies showed that _ </S>",
    "<S> diff _ is a practical tool for research into natural language processing .    </S>",
    "<S> # 1 </S>"
  ]
}
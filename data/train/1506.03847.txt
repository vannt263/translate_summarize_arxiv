{
  "article_text": [
    "an important support for graph exploration is interactive visualization , which can help to quickly identify the main components of a graph , its outliers , the most important edges and communities of related nodes .",
    "interaction - enabled visualization allows to pick detailed and contextualized information on demand , interact with nodes and edges and determine topology aware arrangements for clearer inspection .    however , up - to - date applications have produced graphs on the order of hundred thousand nodes and possibly million edges ( referenced from here on as large graphs ) .",
    "large graphs can be found in numerous real - life settings : web graphs ( web pages , pointing to others with hypertext links )  @xcite , computer communication graphs ( ip addresses sending packets to other ip addresses ) , recommendation systems  @xcite , who - trusts - whom networks  @xcite , bipartite graphs of web - logs of who visits what page ; blogs and similar . at this magnitude ,",
    "efficient graph visualization becomes prohibitive because of the excessive processing power requirements that prevent interaction . besides that , hundred - thousand - node drawings result in unintelligible cluttered images that do not aid the user s cognition . to face these challenges we present a system that explores two new ideas to address scalability in large graph visualization .",
    "the first idea establishes a hierarchical partitioned arrangement from a graph in order to allow multi - resolution visualization .",
    "the second idea utilizes an innovative algorithm to extract a subgraph of interest based on an initial set of target nodes .",
    "our system uses either or both of these ideas to process large graphs bypassing the aforementioned limitations of massive graph drawing . the proposed interface permits to navigate through the levels of a graph hierarchy and also to mine subgraphs information for targeted graph exploration .",
    "the remaining of this paper is structured as follows .",
    "section [ dataset ] introduces the dblp dataset that will be used along this work .",
    "section [ hierarchical ] describes our multi - resolution visualization idea and section [ subgraph ] illustrates our subgraph extraction algorithm .",
    "section [ conclusions ] concludes the work .",
    "throughout this text we employ the dblp dataset to illustrate the functionalities of our system .",
    "this dataset originates from the digital bibliography & library project ( or dblp ) .",
    "dblp is a publicly available database of publication data that embraces authors ( also co - authors ) from the computer science community and their published works .",
    "its content is periodically updated and detailed information from dblp can be achieved at _ http://dblp.uni - trier.de/_. the version of dblp dataset that we use defines a graph with @xmath0 nodes and @xmath1 edges , where each node represents an author of a publication and each edge denotes a co - authoring relationship between two authors .",
    "our first idea to deal with massive graphs is the use of a commu - nities - within - communities structured visualization . in the next sections we overview the steps to come up with such proposal at the same time that we describe its features for visualization and interaction .      for this work",
    ", initially we need to recursively and hierarchically partition a given graph .",
    "we adopted the methodology named _ k - way _ partitioning ( however any partitioning methodology fits our system ) .",
    "that is , given a graph @xmath2 with @xmath3 , we want to have @xmath4 subsets @xmath5 of @xmath6 , such that @xmath7 for @xmath8 , @xmath9 and @xmath10 .",
    "also , the partitioning must minimize the number of edges of @xmath11 whose incident vertices belong to different subsets .",
    "this partitioning methodology is implemented by metis , whose details are found in the work by karypis and kumar @xcite and in related works .    hence , given a graph , we perform a sequence of recursive partitionings to achieve a hierarchy of communities - within - communities . at each recursion , each partition is submitted to a new partitioning cycle that will create another set of partitions .",
    "this process repeats until we get the desired granularity for the partitions ( communities ) . for each new set of partitions ,",
    "a new subtree is embedded in an r - tree like structure . at each new level of the tree",
    ", the tree nodes ( communities ) just created will have the formerly partitioned tree node as their parent .",
    "we call this structure g - tree ( named after graph - tree ) , which is the data structure that supports our system , illustrated in figure [ r - tree ] .",
    "the references for the graph nodes properly said are at the bottom level of the tree .",
    "the entire structure is stored in a single file and the nodes are transferred to main memory only when necessary .        to demonstrate our methodology , we recursively partition dblp dataset into @xmath12 hierarchy levels each with @xmath12 partitions .",
    "the dataset , thus , is broken into @xmath13 , or @xmath14 , communities with an average of @xmath15 nodes per community .",
    "the communities reflect the connectivity ( number of edges ) among their members according to metis partitioning algorithm .",
    "we propose an innovative interactive presentation for large graphs . for this purpose , our system promotes the navigation across the levels of the tree that represents the hierarchical partitioning of a large graph .",
    "as the user interacts with the visualization , the system keeps track of the connectivity among communities of nodes at different levels of the partitioned graph . when the user changes the focus position on the tree structure , the system works on demand to calculate and present contextual information .",
    "when we display a graph as communities - within - communities , we have new representations for graph drawing , as illustrated in figure [ nodesandedges ] . besides conventional nodes and edges that appear only at the bottom level of the tree ( leaf nodes ) , we also have community nodes , that comprehend a number of sub communities and nodes , and we have connectivity edges , that represent the number of edges between community nodes .",
    "these connectivity edges represent the number of edges between nodes from the original graph , but that are in different communities .",
    "the storage and management of this information is out of the scope of this demonstration paper .",
    "these features are illustrated in figure [ dblpcomplete ] , which presents a sequence of interactive actions taken by the user when navigating in dblp dataset . in figure [ dblpcomplete](a ) , it is possible to see dblp partitioned into @xmath12 communities in its first hierarchy level , and other @xmath16 , or @xmath17 communities in its second hierarchy level . at this point , @xmath18 communities",
    "are highly connected to every other community and also highly connected among their @xmath12 sub communities .",
    "the other @xmath19 first - level communities are relatively isolated from the other @xmath18 and totally isolated among their sub communities .",
    "one can conclude that the @xmath18 highly connected communities hold long term active and collaborating authors , while the other @xmath19 hold casual , less productive authors who seldom interact with each other . in figure [ dblpcomplete](b )",
    "we focus on community _ s034 _ and verify that its sub communities are isolated from each other",
    ". a deeper focus in community _",
    "_ in figure [ dblpcomplete](c ) shows that among its sub communities ( highlighted ) , only two of these sub communities present an edge .",
    "our system allows to inspect this specific outlier edge to reveal that authors `` d. b. miller '' and `` r. g. stockton '' define this co - authoring relation for their unique dblp publication dated from @xmath20 .",
    "it is also possible to execute a label query to locate a specific author within the hierarchy , as for example author jiawei han in figure [ dblpcomplete](d ) . in figure [ dblpcomplete](e )",
    "we go to its subgraph community and verify other important nodes surrounding this author .",
    "in figure [ dblpcomplete](f ) we interact with the graph to discover author ke wang , which is another very active author who has worked for years with author jiawei han .",
    "main communities and its @xmath17 sub communities .",
    "( b ) contextualization of community _ s034_. ( c ) closer look and complete expansion of community _ s034_. ( d ) we locate author jiawei han .",
    "( e ) subgraph community of author jiawei han .",
    "( f ) interaction with the subgraph reveals co - author ke wang as one of the main contributors to jiawei han . ]",
    "the exploration of communities of nodes instead of all the nodes at a time , the way we are doing , allows the perception of the relationships among communities of nodes . this way it is possible to trace the distribution of edges among communities , their connectivity degree and their scope of connectivity .",
    "it is also possible to pick outlier edges for suspicious connections between communities .",
    "the user can focus at different communities of nodes according to his / her interest and browse the levels of the hierarchy in order to identify interesting connections or to inspect specific graph nodes .    at the bottom level of the tree ,",
    "the user can access a subgraph that is part of the larger graph being analyzed . to do so",
    ", the system brings the correspondent graph nodes from disk to memory and draws them inside the region attributed to its parent community ( tree node ) .",
    "then this area of the visualization scene becomes a regular area for graph drawing .",
    "for this subgraph , besides basic interaction ( zoom , pan and details on demand ) the user can also ask for the calculation of metrical features corresponding to this subgraph only .",
    "our system supports the following calculations : degree distribution , number of hops , number of weak components , number of strong components and page rank calculation for the nodes .",
    "gmine also offers pop up node information , edge expansion and edition of nodes and edges .",
    "the presentation of the node communities together with the edges that connect them may cause sensory overload .",
    "this is due to the fact that every community can potentially be connected to every other community .",
    "this problem is aggravated if the graph has many hierarchy levels exhibited simultaneously when communities are expanded to show their content . to cope with this aspect of our multi - resolution graph visualization ,",
    "we propose to display a small , but carefully chosen set of communities .",
    "we refer to this method as the `` tomahawk '' principle , because the chosen nodes remind of a tomahawk ax when shown on g - tree method , illustrated in figure [ tomahawk ] .",
    "that is , in order to limit the number of items presented at a time , we make use of g - tree structure to determine a well - established context every time in response to user interaction .",
    "thus , as the user chooses a community node to focus on , we traverse the tree in order to gather the desired node of interest , its sons and its siblings .",
    "then we plot only these items inside the minimum node that bears this contextualization , see figure [ dblpcomplete](b ) .",
    "we argue that the tomahawk principle can provide a minimum contextualization to the user by presenting nodes above , beneath and by the side of a node of interest .",
    "our second idea to deal with massive graphs is the use of a novel algorithm for connection subgraph extraction .",
    "our algorithm , which is not to be detailed in this demonstration work , aims to maximize what we call `` goodness score '' of the nodes within a subgraph . to reach this goal , an independent random walk with restart",
    "is simulated for each source node , and the goodness score of a node is computed by the steady - meeting probability that the random particles will finally meet each other at the given node .",
    "then , a dynamic programming is used to discover important paths iteratively .",
    "the proposed algorithm can deal with multi - source queries , while the existing one  @xcite is restricted to pairwise source queries .    a typical scenario to apply connection subgraph extraction is `` given an initial set of interesting individuals , find a small number of individuals from a large social network that can best capture the relationship among the individuals of the initial set '' . for large graphs ,",
    "extracting a small ( say , with tens of nodes ) yet representative connection subgraph brings feasibility to large graph visual exploration . also , due to the multi - faced nature of many real life relationships , connection subgraphs provide a better way to describe such kind of relationships if compared to single path descriptions .    for ( limited static ) demonstration , a connection subgraph with @xmath21 nodes extracted from the whole dblp dataset",
    "is plotted in figure  [ connsubgraph ] . the initial query set in figure  [ connsubgraph ]",
    "is composed of three authors from the database community : `` philip s. yu '' , `` flip korn '' and `` minos n. garofalakis '' . in figure",
    "[ connsubgraph ] , instead of a thousand nodes graph , one can concentrate on a subgraph of interest extracted from the original graph .",
    "the magnitude of the subgraph is thousand fold smaller than the original dataset and the subgraph being visualized is directly related to the interconnection defined by our initial set of target nodes .    on the visualization ,",
    "if the user moves the mouse over a node , gmine pops up more information about that node - in the example , one can see prof . h. v. jagadish data and his edges highlighted .",
    "jagadish has direct connection with flip korn , and 1-step - away connections with dr .",
    "philip yu and dr .",
    "minos garofalakis .        in our system ,",
    "subgraph extraction can be utilized alone or combined to communities - within - communities visualization .",
    "alone , one can extract a subgraph of interest from a given large graph .",
    "combined , ( see figure [ dblppartial ] ) , it can be used to generate a subgraph to be hierarchically partitioned for visualization or , alternatively , it can be used to generate a subgraph from an existing graph partition .",
    "figure [ dblppartial ] illustrates the combination of subgraph extraction and com - munities - within - communities visualization .",
    "figure , [ dblppartial](a ) displays a @xmath22 nodes subgraph extracted from the dblp dataset . in figure [ dblppartial](b ) it possible to see this subgraph partitioned into @xmath18 main communities . in figures [ dblppartial](c ) and",
    "[ dblppartial](d ) we go deeper into the hierarchy to analyze the connectivity between communities and , finally , the very nodes of the graph .",
    "nodes subgraph extracted from dblp dataset .",
    "( b ) the same graph presented as three partitions .",
    "( c ) one level down the hierarchy and we have three other communities inside the community highlighted in ( b ) .",
    "( d ) zoom in the community highlighted in ( c ) and another level down the hierarchy .",
    "we reach the very nodes of the graph.,scaledwidth=46.0% ]",
    "we have demonstrated a system that supports the visualization of large graphs in an interactive environment . in our tool",
    "the user can navigate through the graph structure in a hierarchical fashion , having different perspectives of the graph arrangement , varying from multiple resolution levels to detailed inspection of specific graph nodes .",
    "the system also supports an innovative subgraph extraction algorithm that can speed up large graph exploration by concentrating on a targeted subset of the graph .",
    "the benefits of our ideas come from its compartmented graph management that promotes scalability while keeping visual comprehension .",
    "the scalability is due to the fact that smaller parts of the graph are processed one at a time instead of the whole graph at every cycle .",
    "visual comprehension derives from limited visual data presentation in contrast to cluttered visualizations generated when large graphs are entirely drawn .    due to",
    "space limitations it is not possible to show all the gmine functionalities",
    ". therefore , for a better exposition , we have gmine available online at  _ ` http://www.cs.cmu.edu/~junio/gmine ` _ , where the software , datasets and videos can be downloaded . for vldb demonstration session",
    ", we plan to let the interested vldb participants interact directly with the system , possibly checking for their name , their connection - subgraphs with their colleagues , and zooming in and out their corresponding communities .",
    "this work has been supported by fapesp ( so paulo state research foundation ) , cnpq ( brazilian national research foundation ) , capes ( brazilian committee for graduate studies ) , national science foundation , ( pita ) pennsylvania infrastructure technology alliance and donations from intel , ntt and hewlett - packard .",
    "any opinions , findings and conclusions or recommendations expressed here are those of the author(s ) and do not necessarily reflect the views of the funding parties ."
  ],
  "abstract_text": [
    "<S> several graph visualization tools exist . however , they are not able to handle large graphs , and/or they do not allow interaction . </S>",
    "<S> we are interested on large graphs , with hundreds of thousands of nodes . </S>",
    "<S> such graphs bring two challenges : the first one is that any straightforward interactive manipulation will be prohibitively slow . </S>",
    "<S> the second one is sensory overload : even if we could plot and replot the graph quickly , the user would be overwhelmed with the vast volume of information because the screen would be too cluttered as nodes and edges overlap each other . </S>",
    "<S> gmine system addresses both these issues , by using summarization and multi - resolution . </S>",
    "<S> gmine offers multi - resolution graph exploration by partitioning a given graph into a hierarchy of com - munities - within - communities and storing it into a novel r - tree - like structure which we name _ g - tree_. gmine offers summarization by implementing an innovative subgraph extraction algorithm and then visualizing its output . </S>"
  ]
}
{
  "article_text": [
    "frequent graph pattern mining ( fpm ) is an important topic in data mining research .",
    "it has been increasingly applied in a variety of application domains such as bioinformatics , cheminformatics and social network analysis . given a graph dataset @xmath0 , where each @xmath1 is a graph , let @xmath2 be the set of ids of graphs in @xmath3 which contain @xmath4 as a subgraph .",
    "@xmath4 is a frequent pattern if its count @xmath5 ( also called _ support _ ) is no less than a user - specified _ support threshold _ @xmath6 .",
    "frequent subgraphs can help the discovery of common substructures , and are the building blocks of further analysis , including graph classification , clustering and indexing .",
    "for instance , discovering frequent patterns in social interaction graphs can be vital to understand functioning of the society or dissemination of diseases .",
    "meanwhile , publishing frequent graph patterns may impose potential threat to privacy , if the graph dataset contains sensitive information of individuals .",
    "in many applications , identities are associated with individual graphs ( rather than nodes or edges ) which are considered private .",
    "for example , the click stream during a browser session of a user is typically a sparse subgraph of the underlying web graph ; in location - based services , a database may consist of a set of trajectories , each of which corresponds to the locations of an individual in a given period of time .",
    "other scenarios of frequent pattern mining with sensitive graphs may include mobile phone call graphs @xcite and xml representation of profiles of individuals .",
    "therefore , extra care is needed when mining and releasing frequent patterns in these graphs to prevent leakage of private information of individuals .",
    "it has been well recognized that simple anonymization schemes that only remove obvious identifiers carry serious risks to privacy . even privacy - preserving graph mining techniques ( e.g.@xcite ) based on @xmath7-anonymity @xcite",
    "are now often considered to offer insufficient privacy under strong attack models .",
    "recently , the model of differential privacy @xcite was proposed to restrict the inference of private information even in the presence of a strong adversary .",
    "it requires that the output of a differentially private algorithm is nearly identical ( in a probabilistic sense ) , whether or not a participant contributes her data to the dataset . for the problem of frequent graph mining ,",
    "it means that even an adversary who is able to actively influence the input graphs can not infer whether a specific pattern exists in a target graph .",
    "although tremendous progress has been made in processing _",
    "flat _ data ( e.g. relational and transactional data ) in a differentially private manner , there has been very few work on differentially private analysis of graph data , due to the inherent complexity in handling the structural information in graphs .    in this paper",
    "we propose the first algorithm for privacy - preserving mining of frequent graph patterns that guarantees differential privacy .",
    "recently several techniques @xcite have been proposed to publish frequent _ itemsets _ in a transactional database in a differentially private manner .",
    "it would seem attractive to adapt those techniques to address the problem of frequent _ subgraph _ mining .",
    "unfortunately , compared with private frequent itemset mining , the private fpm problem imposes much more challenges .",
    "first , graph datasets do not have a set of well - defined dimensions ( i.e.,_items _ ) , which is required by the techniques in @xcite .",
    "second , counting graph patterns is much more difficult than counting itemsets ( due to graph isomorphism ) , which makes the size of the output space not immediately available in our problem .",
    "this prevents us from applying the techniques in @xcite .",
    "we will explain the distinction between @xcite and our work with more details in section  [ subsec : challenges ] .",
    "* contributions . *",
    "the major contributions of this paper are summarized as follows :    1 .",
    "for the first time , we introduce a differentially private algorithm for mining frequent patterns in a graph database .",
    "our algorithm , called _ diff - fpm _ , makes novel use of a markov chain monte carlo ( mcmc ) random walk method to bypass the roadblock of an output space with unknown size .",
    "this enables us to apply the _ exponential mechanism _ , which is a general approach to achieving differential privacy .",
    "moreover , unlike @xcite that relies on the output of a non - private itemset mining algorithm , our technique integrates the process of graph mining and privacy protection as a whole .",
    "this is due to the observation that both frequent pattern mining and the application of exponential mechanism can be unified into an mcmc sampling framework .",
    "our approach provides provable privacy and utility guarantee on the output of our algorithm .",
    "we first show that our algorithm gives @xmath8-differential privacy , which is a relaxed version of @xmath9-differential privacy .",
    "we then show that when the random walk has reached its steady state , _ diff - fpm _ gives @xmath9-differential privacy .",
    "for utility analysis , because a private frequent graph mining algorithm usually does not output the exact answer , we quantify the quality of our result by providing a high - probability upper bound on how far the support of the reported patterns can be from the support threshold specified by the user .",
    "3 .   the most costly operation in our algorithm is counting the support of a pattern in the graph dataset , due to the fact that subgraph isomorphism test is np - complete . in order to propose more efficiently a neighboring pattern in mcmc sampling ,",
    "we develop optimization techniques that significantly reduce the number of invocations to the subgraph isomorphism test subroutine .",
    "4 .   we conduct an extensive experimental study on the effectiveness and efficiency of our algorithm . with moderate amount of privacy budget ,",
    "_ diff - fpm _ is able to output private frequent graph patterns with at least 80% precision .",
    "the paper is organized as follows : the basic concept and techniques for differential privacy , as well as a formal definition of the fpm problem are introduced in section  [ sec : prelim ] .",
    "section  [ sec : algo ] and section  [ sec : detail ] introduces our _ diff - fpm _ algorithm , whose privacy and utility analysis is provided in section  [ sec : analysis ] .",
    "the experiment result is presented in section  [ sec : exp ] .",
    "we review related work in section  [ sec : related ] and section  [ sec : conclusion ] concludes our discussion .",
    "frequent graph pattern mining ( fpm ) aims at discovering the subgraphs that frequently appear in a graph dataset .",
    "formally , let @xmath0 be a sensitive graph database which contains a multiset of graphs .",
    "each graph @xmath10 has a unique identifier .",
    "let @xmath11 be a ( sub)graph pattern , the graph identifier set @xmath12 includes all ids of graphs in @xmath3 that contain a subgraph isomorphic to @xmath4 .",
    "we call @xmath5 the _ support _ of @xmath4 in @xmath3 .",
    "the fpm algorithm can be defined either as returning all subgraph patterns whose supports are no less than a user - specified threshold @xmath6 , or as returning the top @xmath7 frequent patterns given an integer @xmath7 as input .",
    "one can easily convert one version to the other .",
    "all graphs we consider in this paper are undirected , connected and labeled .",
    "note that each node has a label and multiple nodes can have the same label . depending on the application",
    ", the patterns considered may be subject to a set @xmath13 of rules which are related to domain knowledge or user specifications .",
    "it is common to place an upper bound on the number of nodes and/or edges in the patterns , or specify the set of possible labels .",
    "for example , if the graphs represent chemical compounds , a rule may require the degree of a vertex labeled ` _",
    "c(arbon ) _ ' be no greater than 4 .",
    "another rule may specify that any output contains at least 5 vertices , in order to filter out some trivial patterns .",
    "many non - private algorithms have been proposed for finding frequent subgraphs .",
    "the most representative approaches include apriori algorithm @xcite and the gspan @xcite algorithm .",
    "the apriori algorithm exploits the observation that if a graph pattern @xmath4 is frequent , all its subgraphs must also be frequent .",
    "the algorithm works by exploring the search space , i.e. , generating candidate patterns and pruning infrequent ones .",
    "the gspan algorithm maps each graph to a unique minimum dfs code , which skips the candidate generation process . for a detailed review of graph pattern mining and other related work ,",
    "please refer to section  [ sec : related ] .",
    "differential privacy @xcite is a recent privacy model which provides strong privacy guarantee .",
    "informally , a data mining or publishing procedure is differentially private if the outcome is insensitive to any particular record in the dataset . in the context of graph pattern mining ,",
    "let @xmath14 be two _ neighboring datasets _",
    ", i.e. , @xmath3 and @xmath15 differ in only one graph , written as @xmath16 .",
    "let @xmath17 be the space of graph datasets containing @xmath18 graphs .",
    "[ def : dp1 ] a randomized algorithm @xmath19 is @xmath9-differentially private if for all neighboring datasets @xmath3,@xmath15 @xmath20 , and any set of possible output @xmath21 : @xmath22\\leq e^{{{\\varepsilon}}}\\;\\pr[{{\\cal a}}({{\\cal d}}')\\in \\mathcal{o}].\\ ] ]    the parameter @xmath23 allows us to control the level of privacy",
    ". a smaller @xmath9 suggests more limit posed on the influence of a single graph .",
    "typically , the value of @xmath9 should be small ( @xmath24 ) .",
    "@xmath9 is usually specified by the data owner and referred as the _ privacy budget_. in section [ subsec : privacy ] our discussion is related to a weaker notion called @xmath8-differential privacy @xcite , which allows a small additive error factor of @xmath25 .",
    "[ def : dp2 ] a randomized algorithm @xmath19 is @xmath8-differential private if for all neighboring datasets @xmath3,@xmath15 @xmath20 , and any set of possible output @xmath21 : @xmath22\\leq e^{{{\\varepsilon}}}\\;\\pr[{{\\cal a}}({{\\cal d}}')\\in \\mathcal{o}]+\\delta.\\ ] ]     * laplace mechanism . *",
    "the most common technique for designing differentially private algorithms is to add random noise to the true output of a function @xcite .",
    "the noise is calibrated according to the _ sensitivity _ of the function , which is defined as the maximum difference in the output for any neighboring datasets .",
    "formally ,    [ def : sensitivity ] for any function @xmath26@xmath27 , the sensitivity of @xmath6 is @xmath28    given a dataset @xmath3 and a numeric function @xmath6 , the laplace mechanism achieves @xmath9-differential privacy by releasing @xmath29 , where @xmath30 denotes a random variable drawn from the laplace distribution with mean of 0 and variance of @xmath31 .    applying the laplace mechanism requires the output of a function being numeric . in many applications ,",
    "however , the output may be models , classifiers or graphs which contain structural information that are not easily perturbed by the laplace mechanism .",
    "thus it can not be directly applied to the problem of frequent subgraph mining . still , we can use this technique to report the frequencies of the patterns we output .     * exponential mechanism .",
    "* a more general technique of applying differential privacy is the exponential mechanism @xcite .",
    "it not only supports non - numeric output but also captures the full class of differential privacy mechanisms .",
    "the exponential mechanism considers the whole _",
    "output space _ and assumes that each possible output is associated with a real - valued utility score . by sampling from a distribution where the probability of the desired outputs are exponentially amplified , the exponential mechanism ( approximately )",
    "finds the desired outputs while ensuring differential privacy .",
    "formally , given input space @xmath17 and output space @xmath32 , a score function @xmath33 assigns each possible output @xmath34 a score @xmath35 based on the input @xmath36 .",
    "the mechanism then draws a sample from the distribution on @xmath32 which assigns each @xmath37 a probability mass proportional to @xmath38 , where @xmath39 is the sensitivity of the score function .",
    "intuitively , the output with a higher score is exponentially more likely to be chosen .",
    "it is shown that this mechanism satisfies @xmath9-differential privacy @xcite .",
    "[ thm : exp - mech ] @xcite given a utility score function @xmath33 for a dataset @xmath3 , the mechanism @xmath19 , @xmath40 gives @xmath9-differential privacy .",
    "the exponential mechanism has been shown to be a powerful technique in finding private medians @xcite , mining private frequent itemset @xcite and more generally adapting a deterministic algorithm to be differentially private @xcite .",
    "as discussed in section  [ sec : intro ] , it is infeasible to find frequent graph patterns privately using the laplace mechanism by adding noise to the support of each possible pattern .",
    "our _ diff - fpm _ algorithm works by carefully applying the exponential mechanism . in this process",
    "we must overcome several critical challenges , which are identified next .",
    "there has been work @xcite on mining frequent _ itemsets _ in a transaction dataset under differential privacy .",
    "however , the shift from transactions to graphs poses significant new challenges , which make the previous techniques no longer suitable in our problem . in @xcite ,",
    "transaction datasets are viewed as high - dimensional tabular data , and the proposed approach projects the input database onto lower dimensions . however , graph datasets do not have a well defined set of _ items _ , i.e. , dimensions , which renders the approach in @xcite inapplicable in our fpm problem . in @xcite ,",
    "two methods are proposed which make use of a notion of truncated frequency .",
    "however , those methods can not be used in our problem due to the following fundamental challenges :     * support counting . *",
    "obtaining the support of a graph pattern is much more difficult than counting itemsets .",
    "an itemset pattern can be represented by an ordered list or a bitmap of item ids and does not contain structural information as in graphs .",
    "checking the existence of an itemset in a transaction only takes @xmath41 time ( after simple data structures such as bitmaps have been built ) , while checking whether a subgraph pattern exists in a graph is np - complete due to subgraph isomorphism .     * unknown output space . *",
    "the output space @xmath32 in our problem contains a finite number of graph patterns which may or may not exist in the input dataset . under differential privacy , any pattern in the output space should have non - zero probability to be in the final output .",
    "the knowledge of the output space is essential in applying the exponential mechanism , in which we need to sample a pattern @xmath37 with probability @xmath42 where @xmath43 is the normalizing constant according to theorem  [ thm : exp - mech ] .",
    "the most straightforward way to compute @xmath44 requires enumerating all the patterns in the output space . in @xcite ,",
    "a technique is proposed to apply the exponential mechanism without enumerating if the size of the output space is known . however , unlike @xcite , in which the output space size can be obtained by simple combinatorics ( i.e.,@xmath45 patterns of size @xmath46 given an alphabet of size @xmath47 ) , _ the size of the output space @xmath32 in our problem is not immediately available ( due to graph isomorphism vertices is @xmath48 .",
    "( 2 ) if the graph is unlabeled , the problem is considerably harder due to graph isomorphism .",
    "plya enumeration theorem provides an algorithm to compute the number of isomorphism classes of graphs with @xmath18 vertices and @xmath47 edges @xcite .",
    "but it gives neither a formula nor a generating function .",
    "( 3 ) when the labels are not unique , the problem is at least as hard as the unlabeled case . ] ) _ , which prohibits us from applying exponential mechanism directly .",
    "therefore we can not apply the same techniques as in @xcite . given the analysis above ,",
    "we need to develop new ways to overcome the issue of an unknown @xmath49 .",
    "note that although the _ global _ information on the output space is not accessible , we do have the _",
    "information on any specific pattern  given any pattern @xmath37 , we can immediately calculate its utility score @xmath50 ( related to @xmath51 , see section  [ sec : algo ] for details ) .",
    "in addition , the unknown normalizing constant @xmath44 is common to all patterns .",
    "that is , given any pair of patterns @xmath52 , the ratio of probability mass @xmath53 is available without knowing the exact probabilities , according to eq.([eq : exp - mech ] ) .",
    "such scenarios , where one needs to draw samples from a probability distribution known up to a constant factor , also arise in statistical physics when analyzing dynamic systems , where markov chain monte carlo ( mcmc ) methods are often used .",
    "inspired by that , our idea is to perform a random walk based on locally computed probabilities . by carefully choosing the neighbor and the probability of moving in each step using the metropolis - hastings ( mh ) method @xcite",
    ", the random walk will converge to the target distribution , from which we can output samples .",
    "next we discuss the details of our _ diff - fpm _ algorithm .",
    "the key challenge of handling graph datasets is the unknown output space when applying the exponential mechanism .",
    "the _ diff - fpm _ algorithm meets the challenge by unifying frequent pattern mining and applying differential privacy into an mcmc sampling framework .",
    "the main idea of _ diff - fpm _ is to simulate a markov chain by performing an mcmc random walk in the output space .",
    "our goal is that when the random walk reaches its steady state , the stationary distribution of the markov chain matches the target distribution @xmath54 in eq.([eq : exp - mech ] ) . in section  [ sec : mh ]",
    "we will explain in detail how to apply the metropolis - hastings ( mh ) method in our problem to achieve this goal . before that",
    ", we need to define the state space in which we perform the random walk .",
    "* partial order full graph . * to facilitate the mh - based random walk in the output space ,",
    "we define the partial order full graph ( pofg ) as the state space of the markov chain on which the sampling algorithm run the simulation .",
    "each node in pofg corresponds to a unique graph pattern and each edge in pofg represents a possible ` extension ' ( add or remove one edge ) to a neighboring pattern . naturally , each node in the pofg has three types of neighbors : _ sub - neighbor _ ( by removing an edge ) , _ super - backward neighbor _",
    "( by connecting two existing nodes ) and _ super - forward neighbor _",
    "( by adding and connecting to a new node ) .",
    "figure  [ fig : example ] shows a simple graph dataset containing 3 graphs and its pofg .",
    "the dashed patterns have support smaller than 2 in the dataset .",
    "pattern @xmath55 has two sub - neighbors , one super - backward neighbor and several super - forward neighbors ( only one shown in figure  [ fig : pofg ] ) .",
    "self - loops and multi - edges are not considered in this example and thus are excluded from the output space .    at a higher level ,",
    "the random walk starts with an arbitrary pattern and proceeds to an adjacent pattern with certain probability in each step .",
    "since the transition decision is made solely based on local information , there is no need to construct the global pofg explicitly .",
    "when the random walk has reached its steady state , the probability of being in state @xmath37 follows exactly the target distribution @xmath56 in eq.([eq : exp - mech ] ) .",
    "then the current state is drawn as a sampled pattern .",
    "since the frequent patterns have larger probabilities in the target distribution , they are more likely to appear in the final output .    before introducing the details ,",
    "we need to make sure that the random walk on pofg we design indeed converges to a stationary distribution .",
    "a random walk needs to be finite , irreducible , and aperiodic to converge to a stationary distribution @xcite .",
    "the analysis is similar to that in @xcite .",
    "a markov chain is a discrete - time stochastic process defined over a set of states @xmath32 .",
    "@xmath32 can be finite or countably infinite .",
    "the markov property requires that given the present state , the past and the future are independent .",
    "the stochastic process is characterized by the _ transition matrix _ @xmath57 , which defines the probability of transition between any two states in @xmath32 , i.e. , @xmath58 is the probability that the next state will be @xmath59 , given that the current state is @xmath37 .",
    "for all @xmath60 , we have @xmath61 , and @xmath62 , i.e. , @xmath57 is row - stochastic .",
    "a stationary distribution of a markov chain with transition probability @xmath57 is a probability distribution @xmath54 ( a row vector of size @xmath49 ) , such that @xmath63 .",
    "if a markov chain is finite , irreducible and aperiodic , regardless of where it begins , the chain will converge to the stationary distribution .",
    "we also say it has reached the _ steady state _ when the chain has converged .",
    "if the state space @xmath32 of a markov chain is the set @xmath64 of a graph @xmath65 , and if for any @xmath66 , @xmath67 implies @xmath68 , then the process is also called a _ random walk _ on the graph @xmath69 . in other words ,",
    "transitions only occur between adjacent nodes .",
    "+    the mh method is a markov chain monte carlo ( mcmc ) method for obtaining a sequence of random samples from a target probability distribution for which direct sampling is difficult .",
    "it only requires that a function proportional to the probability mass be calculable .",
    "the main idea of the mh method is to simulate a markov chain such that the stationary distribution of the chain matches the target distribution @xcite .",
    "suppose we want to generate a random variable @xmath70 taking values in @xmath71 , according to a target distribution @xmath54 , with @xmath72 where all @xmath73 are strictly positive , @xmath49 is large , and the normalizing constant @xmath74 is difficult to calculate .",
    "the mh method first constructs an @xmath49-state markov chain @xmath75 on @xmath32 whose evolution relies on an arbitrary proposal transition matrix @xmath76 in the following way :    * when @xmath77 , generate a random variable @xmath78 satisfying @xmath79 , @xmath80 * if @xmath81 , let @xmath82    where @xmath83 .",
    "it means that given a current state @xmath37 , the next state is proposed according to the proposal distribution @xmath84 .",
    "@xmath85 is the probability mass of state @xmath59 among all possible states given the current state is @xmath37 . with probability @xmath86 ,",
    "the proposal is accepted and the chain moves to the new state @xmath59 .",
    "otherwise it remains at state @xmath37 .",
    "it follows that @xmath75 has a one - step transition probability matrix @xmath57 : @xmath87    it can be shown that for the above @xmath57 , the markov chain is reversible and has a stationary distribution @xmath54 , equal to the target distribution .",
    "therefore , once the chain has reached the steady state , the sequence of samples we get from the mh method should follow the target distribution .",
    "next we use an example to explain how the state transition works in our _ diff - fpm _ algorithm .    consider a random walk on the pofg illustrated in figure  [ fig : pofg ] .",
    "suppose the current state of the walk is ` a - a - d ' ( pattern @xmath37 ) . following the mh method , one of pattern @xmath37 s neighbors",
    "needs to be proposed according to a proposal distribution @xmath85 . for simplicity , in this example each neighbor has an equal probability to be proposed , i.e. , @xmath88 , where @xmath89 is the neighbor set of @xmath37 .",
    "assuming ` a - d ' ( pattern y ) is proposed and @xmath90 , @xmath91 , @xmath92 , the probability of accepting the proposal is calculated as @xmath93@xmath94 @xmath95 .",
    "we can then draw a random number between 0 and 1 to decide whether walking to pattern @xmath59 or staying at @xmath37 .",
    "the ability to generate a sample without knowing the normalizing constant of proportionality is a major virtue of the mh method .",
    "this salient feature fits perfectly the scenario when direct application of the exponential mechanism is formidable due to an unmanageable output space .",
    "( optional ) for each pattern in @xmath96 , perturb its true support by laplace mechanism with privacy budget @xmath97    the description of the _ diff - fpm _ algorithm above can be summarized in algorithm 1 .",
    "the input consists of the raw graph dataset @xmath3 , a support threshold @xmath6 and the privacy budget @xmath98 . if the top-@xmath7 frequent patterns are desired , we first run non - private fpm algorithms such as gspan @xcite to get the support threshold @xmath6 , i.e. , the support of the @xmath7th frequent pattern .",
    "if one only needs @xmath7 patterns whose supports are no less than a threshold , @xmath6 can be directly provided to the algorithm . at a higher level ,",
    "algorithm 1 consists of two phases : sampling and perturbation .",
    "the sampling phase includes @xmath7 applications of the exponential mechanism via mh - based random walk in the output space .",
    "initially , we select an arbitrary pattern in the output space to start the walk ( line 2 ) . at each step , we propose a neighboring pattern @xmath59 of the current pattern @xmath37 according to a _",
    "proposal distribution _ ( line 4 )",
    ". the proposal distribution does not affect the correctness of the mh method , so we defer the details to section  [ sec : proposal ] ( it does affect the speed of convergence though ) .",
    "the proposed pattern is then accepted with probability @xmath86 as in the mh - algorithm ( line 5 ) , where @xmath99 is the score function with @xmath100 being the sensitivity of @xmath99 .",
    "we explore the design space of the score function in the next paragraph .",
    "when the markov chain has converged ( see section  [ sec : converge ] for convergence diagnostic ) , we output the current pattern and remove it from the output space ( line 6 to 8) .",
    "we then start a new walk until @xmath7 patterns have been sampled .",
    "finally , if one wants to include the support of each output pattern as well , the count of each pattern is perturbed by adding @xmath101 noise ( line 9 ) .",
    "choosing the utility score function is vital in our approach as it directly affects the target distribution .",
    "a general guideline is that the patterns with higher supports should have higher utility scores in order to have larger probabilities to be chosen according to exponential mechanism . under this guideline , given an input database @xmath3 ,",
    "the most straightforward choice is to let @xmath102 for any pattern @xmath37 . in this case , the sensitivity @xmath100 is exactly 1 since the support of any subgraph pattern may vary by at most 1 with the addition or removal of a graph in the dataset .",
    "other choices include assigning the same utility scores to all patterns having supports no less than @xmath6 , or deliberately lowering the scores of the infrequent patterns .",
    "for example , let @xmath103 if @xmath104 , where @xmath105 , @xmath106 , and @xmath107 if @xmath108 . in this case , the infrequent patterns have even less probability to be sampled . however , this will also increase @xmath100 and thus deteriorate the utility , according to theorem  [ thm : exp - mech ]",
    ". we will further study the impact of various score functions in the experiment section .",
    "although in theory the proposal distribution can be arbitrary , it can essentially impact the efficiency of the mh method by affecting the mixing time ( time to reach steady state ) .",
    "a good proposal distribution can improve the convergence speed by increasing the accept rate @xmath86 in the mh method .",
    "on the contrary , if the proposed pattern is often rejected , the chain can hardly move forward .",
    "it has been suggested that one should choose a proposal distribution close to the target distribution @xcite . in our problem setting , it is preferable to make a distinction between the patterns having support no less than @xmath6 ( referred as _",
    "frequent _ patterns ) and those whose supports are lower ( referred as _",
    "infrequent _ patterns ) . given a current state @xmath37",
    ", we denote the set of _ frequent _ neighbors of @xmath37 as @xmath109 and the set of _ infrequent _ neighbors as @xmath110 .",
    "since @xmath111 is usually larger than @xmath112 , we will balance the probability mass assigned to @xmath109 and @xmath110 by introducing a tunable parameter @xmath113 .",
    "for the same reason , we use @xmath114 to control the bias toward either the sub - neighbors @xmath115 or the super - neighbors @xmath116 within the desired set @xmath109 .",
    "our heuristic based proposal distribution is formally described below : @xmath117 the best values of @xmath113 and @xmath114 can be tuned experimentally .",
    "if any of the three sets of neighbors in eq.[eqn : prop ] is empty , its probability mass will be re - distributed ( by setting @xmath118 , @xmath119 and @xmath120 respectively ) .      in line 6 to 8 of algorithm 1 ,",
    "after the convergence conditions are met and a sample pattern @xmath121 is outputted , we need to exclude @xmath121 from the output space by connecting @xmath121 s neighbors and removing @xmath121 in the pofg . in our implementation",
    "this is done by replacing @xmath121 by all the neighbors of @xmath121 whenever @xmath121 appears in some pattern s neighborhood .",
    "note that we do not output multiple patterns when the chain has converged .",
    "this is because once a pattern is sampled , it should be excluded from the output space and thus have zero probability to be chosen .",
    "therefore adjustment to the output space is necessary after each sample .",
    "for the same reason we do not run multiple chains at once .",
    "the theory of mcmc sampling requires that samples are drawn when the markov chain has converged to the stationary distribution , which is also our target distribution @xmath54 .",
    "the most straightforward way to diagnose convergence is to monitor the distance between the target distribution @xmath54 and the distribution of samples @xmath122 . in practice ,",
    "however , @xmath54 is often known only up to a constant factor . to deal with this problem ,",
    "several online diagnostic tests have been developed in the mcmc literature @xcite and used in random walk based sampling on graphs @xcite .",
    "online diagnostics rely on detecting whether the chain has lost its dependence on the starting point .",
    "in particular , two standard convergence tests geweke diagnostic @xcite and gelman and rubin diagnostic @xcite are commonly used , which are based on analysis of intra - chain and inter - chain properties respectively . since our problem setting",
    "does not support running multiple chains at the same time , we will focus on the geweke diagnostic .    the geweke diagnostic takes two non - overlapping parts ( usually the first 0.1 and last 0.5 proportions ) of the markov chain and compares the means of both parts to see if they are from the same distribution .",
    "specifically , let @xmath70 be a sequence of samples of our metric of interest and @xmath123 be the two non - overlapping subsequences .",
    "geweke computes the @xmath124-score : @xmath125 . with increasing number of iterations , @xmath126 and @xmath127",
    "should move further apart and become less and less correlated .",
    "when the chain has converged , @xmath126 and @xmath127 should be identically distributed with @xmath128 by law of large numbers .",
    "we can declare convergence when @xmath124 has continuously fallen in the @xmath129 $ ] range .",
    "since the samples in our problem are graph patterns rather than a scalar , we may need to monitor multiple scalar metrics related to different properties of the sampled pattern and declare convergence when all these metrics have converged .",
    "we need to acknowledge that these convergence diagnostic tools from the mcmc literature are heuristic _ per se_. verifying the convergence remains an open problem if the distribution of samples is not directly observable .",
    "even so , _ diff - fpm _ still achieves @xmath8-differential privacy if there exists a small distance between the target and simulation distributions , as we will show in lemma  [ thm : error ] in section  [ sec : analysis ] .",
    "[ sec : een ] we have discussed so far the core of the _ diff - fpm _ algorithm and seemingly it could be run straightforwardly . however , without certain optimization , the computation cost might render the algorithm impractical to run .",
    "the most costly operation in the _ diff - fpm _ algorithm is proposing a neighbor of the current pattern @xmath37 . according to the proposal distribution in eq.[eqn : prop ] ,",
    "this requires knowledge on the support of each pattern in @xmath37 s neighborhood . due to the fact that subgraph isomorphism test is np - complete ,",
    "obtaining the support of each neighbor might become a computation bottleneck . to overcome this problem ,",
    "we have developed an efficient algorithm ( called een ) , which aims at minimizing the number of invocations to the subgraph isomorphism test subroutine .",
    "experimental result in section  [ sec : exp ] shows that the time cost per iteration can be reduced by up to an order of magnitude using this optimization .      in order to propose a neighbor @xmath59 of a pattern @xmath37 according to the proposal distribution",
    ", we need to investigate the neighbor set @xmath89 of @xmath37 and test the frequentness of each neighbor @xmath130 .",
    "the task of neighbors exploration can be described as : given a pattern @xmath37 , find the set of frequent sub - neighbors @xmath131 , frequent super - neighbors @xmath132 and infrequent neighbors @xmath110 , as introduced in the proposal distribution ( see eq.[eqn : prop ] ) .",
    "the neighbor set @xmath89 is composed of two parts - super - neighbors @xmath133 and sub - neighbors @xmath134 .",
    "a pattern @xmath59 is a super - neighbor of @xmath37 if @xmath135 and @xmath136 ( we use @xmath137 to denote subgraph relationship ) , where @xmath138 is a new edge and @xmath139 is an extension operation .",
    "if @xmath138 connects two existing nodes in @xmath37 , it is called a back edge .",
    "otherwise , a new node is created with a random label from a label set @xmath140 and then connected to an existing node in @xmath37 . in this case the new edge is called a forward edge . thus @xmath141 , where @xmath142 and @xmath143 are the sets of super - back and super - forward neighbors of @xmath37 respectively .",
    "similarly , pattern @xmath59 is a sub - neighbor of @xmath37 if @xmath144 and @xmath145 .",
    "there are two types of edge removals as well .",
    "back edge removal removes an edge and keeps the remaining pattern connected with no vertex removed , while forward edge removal isolates exactly one vertex which is also removed from the resulting pattern .",
    "the above neighbors generation process ensures the random walk is reversible ( which is sufficient for the chain to have a stationary distribution ) , i.e. , for any neighboring patterns @xmath37 and @xmath59 , if there is a walk from @xmath37 to @xmath59 , @xmath59 can also walk to @xmath37 and vice versa .",
    "initialize @xmath146,@xmath147,@xmath148 ( @xmath37 omitted for brevity ) find membership bitmap @xmath149 using vf2 isomorphism test populate sub - neighbors @xmath150 , super - back neighbors @xmath151 , super - forward neighbors @xmath152 @xmath153 ( 1,0)230 + * function *      a naive way to populate @xmath131,@xmath132 and @xmath110 is to test each neighbor of @xmath37 against the graph dataset @xmath3 .",
    "however , this is extremely inefficient since @xmath154 isomorphism tests are required , where @xmath155 is the number of graphs in @xmath3 .",
    "a simple optimization would be using the monotonic property of frequent patterns : if @xmath37 is a frequent pattern , any subgraph of @xmath37 should be frequent too ; likewise , an infrequent pattern s super - graph must be infrequent .",
    "however , the naive method is still required for exploring @xmath156 if @xmath37 is frequent or @xmath157 if @xmath37 is infrequent .",
    "the een algorithm is able to further optimize the number of isomorphism tests .",
    "observing that @xmath37 and @xmath59 only differ in one edge for all @xmath130 , the main idea is to re - use the isomorphic mappings between @xmath37 and @xmath158 and examine whether any of the isomorphic mappings can be retained after extending an edge .",
    "the een algorithm is formally presented in algorithm 2 and is described in the following .",
    "algorithm 2 takes pattern @xmath37 , graph dataset @xmath3 and support threshold @xmath6 as input and returns @xmath115 , @xmath116 and @xmath110 .",
    "first , pattern @xmath37 is tested against each graph in @xmath3 and the result is stored in @xmath159 , which is the set of ids of graphs containing pattern @xmath37 ( line 2 ) .",
    "the subgraph isomorphism algorithm we use is the vf2 algorithm @xcite .",
    "next we populate three types of neighbors of @xmath37 : sub - neighbors @xmath150 , super - back neighbors @xmath151 and super - forward neighbors @xmath152 ( line 3 ) , and handle them differently .",
    "* explore sub - neighbors ( line 4 to 7 ) . * for @xmath150 , if @xmath37 is frequent , the entire set @xmath150 should be frequent .",
    "if @xmath37 is infrequent , each pattern in @xmath150 is examined by the boolean sub - procedure sub_is_freq ( line 40 to 44 ) .",
    "sub_is_freq takes a sub - neighbor @xmath160 of @xmath37 and @xmath149 as input and returns the frequentness of @xmath160 .",
    "first we find @xmath161 , the intersection of i d sets of all edges in pattern @xmath160 .",
    "then subgraph isomorphism test is only needed for the graphs @xmath162 .",
    "the set @xmath44 of ids of graphs that succeed the test together with @xmath149 comprise @xmath163 .",
    "finally the procedure returns the frequentness of @xmath160 by comparing @xmath6 and the size of @xmath163 .",
    "* explore super - back neighbors ( line 8 to 22 ) . * for @xmath151 , if @xmath37 is infrequent , the entire @xmath151 must be infrequent .",
    "otherwise , we test whether @xmath164 is a subgraph of @xmath1 for each @xmath1 . in this part",
    ", the een algorithm does not require any additional subgraph isomorphism test at all .",
    "this is achieved by re - using the isomorphism mappings between the base pattern @xmath37 and @xmath1 and reasoning upon that . in line 12",
    "we find the subgraph isomorphism mappings @xmath165 , which can be obtained at the same time when computing @xmath149 in line 2 .",
    "suppose @xmath37 is extended to @xmath160 by connecting node @xmath166 and @xmath167 ( line 15 ) .",
    "if any of the isomorphism mappings @xmath168 is preserved with the edge extension ( i.e. , @xmath169 and @xmath170 are adjacent in @xmath1 ) , then @xmath160 must be a subgraph of @xmath1 . otherwise if none of the mappings can be preserved",
    ", @xmath160 is not a subgraph of @xmath1 .    in the above process",
    ", we use a dictionary @xmath171 to keep track of the number of graphs in @xmath3 so far which contains @xmath160 as a subgraph , i.e. , @xmath172 $ ] maintains @xmath173 for the @xmath1 tested so far .",
    "line 14 ensures that the isomorphism extension test is only performed when @xmath172 $ ] has not and is able to reach @xmath6 .",
    "* explore super - forward neighbors ( line 23 to 37 ) . * for @xmath152 ,",
    "the algorithm is similar to the procedures of exploring super - back neighbors , except that the extension test is now on a forward edge instead of a back edge .",
    "specifically , let @xmath167 be the new node extended from @xmath166 ( line 30 ) , if there exists a node @xmath174 satisfying 1 ) has the same label as @xmath166 ; 2 ) is adjacent to @xmath169 ; and 3 ) is not part of the mapping @xmath47 , then the isomorphism can be extended , meaning @xmath175 .",
    "in this part we establish the privacy guarantee of _ diff - fpm _ described above .",
    "we show both the sampling and perturbation phases preserve privacy , and then we use the composition property of differential privacy to show the privacy guarantee of the overall algorithm .",
    "in the sampling phase , our target probability distribution @xmath176 equals @xmath177 for a given dataset @xmath3 .",
    "if samples were drawn directly from this distribution , it would achieve strict @xmath178-differential privacy due to the exponential mechanism .",
    "since we use mcmc based sampling , the distribution of the samples @xmath179 will _ approximate _",
    "@xmath176 , i.e. the two distributions are _ asymptotically _ identical . in real simulation , there may be a small distance between the two distributions . to quantify the impact on privacy when a small error is present",
    ", we use the _ total variation distance _",
    "@xcite to measure the distance of the two distributions at a given time : @xmath180 and @xmath181 can assign to the same event .",
    "let @xmath182 denote the process of sampling one pattern according to algorithm 1 ( line 4 to 10 ) .",
    "the privacy guarantee that @xmath183 offers is described by the following lemma :    [ thm : error ] let @xmath184 and @xmath181 denote the target distribution and the distribution of samples from @xmath183 respectively .",
    "suppose @xmath185 , procedure @xmath183 gives @xmath186-differential privacy , where @xmath187 .",
    "@xmath188 , the ratio of density at @xmath37 for two neighboring input @xmath3 and @xmath15 can be bounded as @xmath189 therefore , @xmath190 giving @xmath191-differential privacy .",
    "note that @xmath192 is a function of simulation time @xmath193 .",
    "the following lemma describes the asymptotic behavior and the speed of convergence of the chain :    [ thm : asympto ] @xcite if a markov chain on a finite state space is irreducible and aperiodic , and has a transition kernel @xmath57 and stationary distribution @xmath184 , then for @xmath194 , @xmath195 for some @xmath196 and @xmath197 .",
    "and @xmath198    the theorem above means @xmath192 is decreasing at least at a geometric speed and approximates to zero when the simulation is running long enough .",
    "since the sampling process in algorithm 1 consists of @xmath7 successive applications of exponential mechanism based on random walk , we need the following well - known composition lemma to provide privacy guarantee for the entire sampling phase .",
    "@xcite[thm : epscomp ] let @xmath199 be @xmath193 algorithms such that @xmath200 satisfies @xmath201-differential privacy , @xmath202 then their sequential composition @xmath203 satisfies @xmath9-differential privacy , for @xmath204 .",
    "equipped with the results in previous lemmas , we are able to provide the privacy guarantee for algorithm 1 .",
    "[ thm : main - privacy ] algorithm 1 satisfies @xmath9-differential privacy .    according to lemma  [ thm : asympto ] ,",
    "when the chain has reached the steady state , @xmath192 in lemma  [ thm : error ] becomes zero , giving @xmath178-differential privacy in each output pattern . using the composition lemma , the sample phase satisfies @xmath205-differential privacy as a whole . in the perturbation step ,",
    "we add laplace noise @xmath101 independently on each of the true supports of the @xmath7 patterns . again by lemma  [ thm : epscomp ] , the perturbation phase gives @xmath206-differential privacy .",
    "therefore the entire algorithm 1 achieves @xmath9-differential privacy since @xmath207 .      because neighboring inputs must have similar output under differential privacy , a private algorithm usually does not return the exact answers . in the scenario of mining top-@xmath7 frequent patterns , the _ diff - fpm _",
    "algorithm should return a noisy list of patterns which is close to the real top-@xmath7 patterns . to quantify the quality of the output of _ diff - fpm _ ,",
    "we first define two utility parameters , following @xcite . recall that @xmath6 is the support of the @xmath7th frequent pattern , and let @xmath208 be an additive error to @xmath6 . given @xmath209",
    ", we require that with probability at least @xmath210 , ( 1 ) no pattern in the output has true support less than @xmath211 and ( 2 ) all patterns having support greater than @xmath212 exist in the output .",
    "the following theorems provide the utility guarantee of _ diff - fpm_. a score function @xmath107 is assumed .    at the end of the sampling phase in algorithm 1 , for all @xmath209 , with probability at least @xmath210 , all patterns in set @xmath96 have support greater than @xmath211 , where @xmath213 and @xmath214 is an upper bound on the size of output space .",
    "in any of the @xmath7 rounds of sampling , the probability of choosing a pattern with support @xmath211 given that a pattern having support @xmath215 is still present is at most @xmath216 .",
    "although the size @xmath47 of the output space is unknown without enumeration , one can usually get an upper bound @xmath214 without considering the isomorphism classes .",
    "since there are at most @xmath214 patterns with support less than @xmath211 , after @xmath7 rounds of sampling the probability is upper bounded by @xmath217 .",
    "then @xmath218    the following theorem provides the upper bound of noise added to the true support of each output pattern .    for all @xmath209 , with probability of at least @xmath210 ,",
    "the noisy support of a pattern differs by at most @xmath208 , where @xmath219 .",
    "this is a property directly followed by integrating the laplace distribution : @xmath220 , which transforms to @xmath221 .",
    "in this section , we evaluate the performance of _ diff - fpm _ through extensive experiments on various datasets .",
    "since this is the first work on differetially private mining of frequent graph patterns , the quality of the output is compared with the result from a non - private fpm algorithm and the accuracy is reported .",
    "in addition , we demonstrate the effectiveness of the een algorithm by comparing the time cost per iteration to two basic methods .",
    "we also discuss the running time and scalability of _ diff - fpm _ and the impact of various parameters such as privacy budget , the number of output patterns and the size of the graph dataset . in this section",
    "we consider the scenario of mining the top-@xmath7 frequent patterns .",
    "* datasets . *",
    "the following three datasets are used in our experiment : _ dtp _ is a real dataset containing dtp aids antiviral screening dataset , which is frequently used in frequent graph pattern mining study .",
    "it contains 1084 graphs , with an average graph size of 45 edges and 43 vertices .",
    "there are 14 unique node labels and all edges are considered having the same label .",
    "the _ click _ dataset consists of 20k small tree graphs ( 4 nodes and 3 edges on average ) obtained by a graph generator developed by zaki @xcite . to a certain extent , this synthetic dataset simulates user click graphs from web server logs @xcite , which is a suitable type of data requiring privacy - preserving mining .",
    "all the tree graphs in this dataset are sampled from a master tree . in our experiment",
    "the master tree has 10,000 nodes with a depth of 10 and a fanout of 6 .",
    "the above two datasets contain graphs that are relatively sparse . to test our algorithm on _ dense _ graphs",
    ", we also use a dataset containing 5k graphs , in which the average node degree is 7 .",
    "each graph contains 10 vertices and 35 edges on average . the graph generator @xcite we use",
    "is specially designed for generating graph datasets for evaluation of frequent subgraph mining algorithms .",
    "the size of this graph dataset is comparable to the largest datasets used in previous works @xcite .",
    "* utiliy metrics . *",
    "we evaluate the quality of the output of _ diff - fpm _ by employing the following two utility metrics :    * _ precision .",
    "_ precision is defined as the fraction of identified top @xmath7 graph patterns that are in the actual top @xmath7 , i.e. , @xmath222 this is the complementary measure of the false negative rate used in @xcite . * _ support accuracy . _",
    "the measure of precision reflects the percentage of desired / undesired patterns in the output , yet it can not indicate how good or bad the output patterns are in terms of their supports .",
    "for example , if @xmath223 , it is much more undesirable if a pattern with support 10 appears in the output compared to a pattern with support 980 , even though the precision may be the same in these two cases .",
    "we first define the _ relative support error ( rse ) _ as @xmath224 where @xmath225 and @xmath226 are the sum of the supports of the real top-@xmath7 patterns and sum of the supports of the sampled patterns respectively .",
    "this measure reflects the average deviation of an output pattern s support with respect to the support threshold @xmath6 . in the plots , the _ support accuracy _",
    "is reported , which equals @xmath227 .",
    "all experiments were conducted on a pc with 3.40ghz cpu with 8 gb ram . the random walk in the _ diff - fpm",
    "_ algorithm consumes only a small amount of memory due to its markovian nature , i.e. , earlier states in the walk do not need to be remembered .",
    "we can , however , allocate extra memory to cache some of the patterns and their neighbors .",
    "we implemented our algorithm in python 2.7 with the jit compiler pypy to speed up .",
    "the default parameters of @xmath228 and @xmath229 were used unless specified otherwise . in the experiment",
    "we do not release the noisy supports of the patterns in the output ( line 9 in algorithm 1 ) , so all the privacy budget is used in the sampling phase .",
    "* comparison of neighbor exploration methods . * in section  [ sec : een ] we proposed the een algorithm to efficiently explore the neighborhood of a pattern .",
    "we now compare it with two other methods : a _ naive _ approach which finds the support of each neighbor of the current pattern @xmath37 and a _ basic _ approach which uses the monotonic property of frequent patterns ( see section  [ sec : een - details ] ) .",
    "figure  [ fig : een ] shows the average iteration time in logarithm of the three methods over three datasets . in each iteration ,",
    "a neighboring pattern is proposed and then accepted or rejected according to the mh algorithm .",
    "clearly , een takes significantly less time in each iteration than the other methods in both datasets , reducing the iteration time by at least an order of magnitude compared to the naive approach .",
    "thus all subsequent results are presented with een enabled .",
    "* run time and scalability .",
    "* figure  [ fig : n_time ] illustrates the average time taken to output one frequent pattern as the size of the dataset increases . for the full datasets , _ click _",
    "takes 20 seconds , _ dtp _ takes about 1 minute and _ dense _ sits in the middle , although the _ click _ dataset contains 20k graphs compared to only 1k in the _",
    "dtp_. it indicates that the size of each individual graph and the size of the neighborhood have a larger impact on the run time than the total number of graphs in the dataset ( note that _ dtp _ has 14 labels and thus a larger neighborhood of a pattern compared to _ dense _ ) . for scalability , all datasets",
    "are observed to have linear scale - up in time as the size of graph dataset increases .     * precision and support accuracy .",
    "* we now examine the quality of the output by studying the precision and support accuracy ( _ sa _ ) of the _ diff - fpm _ algorithm under various parameter settings .",
    "first , figure  [ fig : n_pre ] and figure  [ fig : n_err ] show the precision and _ sa _ when we increase the size of the graph dataset from 10% to 100% .",
    "an increasing trend of the output quality can be clearly observed here .",
    "this is in line with our expectation because achieving differential privacy is more demanding in a small dataset ",
    "the larger the number of records in the database , the easier it is to hide an individual record s impact on the output .",
    "for all three full datasets , _ diff - fpm _ is able to achieve at least 80% on both precision and _",
    "sa_.    figure  [ fig : eps_pre ] shows the precision when varying privacy budget @xmath9 . with a very limited budget ( @xmath230 ) , only about 30% of samples are from the real top-@xmath7 patterns for _ dtp _ and _ dense_. this is inevitable due to the privacy - utility tradeoff .",
    "as more privacy budget is given , the precision of _ diff - fpm _ increases fast . at @xmath228 ,",
    "the precisions from all datasets have reached 80% . further increase in privacy budget",
    "does not provide significant benefit on the precision .",
    "we observed a similar trend in the support accuracy plot ( figure  [ fig : eps_err ] ) , with less dramatic changes for @xmath9 from 0.1 to 0.5 .",
    "figures  [ fig : k_pre ] and [ fig : k_err ] illustrate the impact of the number of patterns in the output . recall that in each round of sampling , a budget of @xmath231 is consumed ( cf .",
    "proof of theorem  [ thm : main - privacy ] ) . given a certain privacy budget , the more patterns to output ,",
    "the less privacy budget each sample can use .",
    "thus we expect the average quality of the output to drop as @xmath7 increases , which is confirmed in the result .",
    "meanwhile , the support accuracy of the output holds well with the increasing number of output , which can be seen in figure  [ fig : k_err ]",
    ".         * score function . * in section  [ sec : overview ] we discussed the principles of designing the score function .",
    "here we experimentally compare several basic choices on the synthetic dataset . figures [ fig : score_pre ] and [ fig :",
    "score_err ] show the precision and support accuracy of two score functions _ linear _ and _ plateau_. _ linear _ represents the most straightforward choice : @xmath107 for any pattern @xmath37 , with @xmath232 . _ plateau _",
    "treats all the patterns in @xmath233 the same , i.e. , @xmath234 , if @xmath108 ; @xmath107 , if @xmath104 . the random walk with the _ plateau _",
    "score function is able to traverse more patterns in the pofg .",
    "however , as shown in the plots , this does not lead to better precision and support accuracy in the result . over the range of different graph dataset sizes , the _ linear _ score function consistently performs better due to the exponentially amplified probability mass for more frequent patterns .",
    "therefore we use the _ linear _ score function for the rest of the experiment .     *",
    "impact of proposal distribution . *",
    "recall that two parameters have impact on our proposal distribution ( section  [ sec : proposal ] ) : @xmath113 balances the weight on frequent / infrequent neighbors and @xmath114 balances the weight on sub - neighbors / super - neighbors within the frequent neighbors .",
    "note that the proposal distribution does not affect the correctness of the mh sampling , but it does affect the speed of convergence . here",
    "the impact of @xmath113 is measured by the average accept rate in the entire walk , i.e. , the rate that a proposed pattern is accepted on average . since",
    "frequent patterns have exponentially large probability mass to be sampled , a larger value of @xmath113 should be desired .",
    "this is reflected in figure  [ fig : eta ] , in which the average accept rate increases from about 35% when @xmath235 to more than 60% at @xmath236 .",
    "the other parameter @xmath114 controls the probability mass of sub - neighbors given that a frequent pattern will be proposed . in graph pattern mining , the smaller graphs usually have larger support",
    ". therefore a @xmath114 of at least 0.5 is preferred , which can be seen by the drop of average accept rate from 60% to less than 40% when @xmath114 decreases from 0.5 to 0.4 in figure  [ fig : gamma ] .",
    "interestingly , as we deviate away from 0.5 , the acceptance rate slowly drops and adversely affects the sampling performance .",
    "this is because a balanced sub - neighbor / super - neighbor proposal allows faster transition from one pattern to another , making the chain well mixed instead of lingering in a local region .",
    "* convergence analysis . *",
    "a decision we have to make is when to stop the random walk and output a sample . in section  [ sec : converge ] we introduced z - score based geweke diagnostic , which compares the distribution at the beginning and end of the chain . since mcmc is typically used to estimate a function of the underlying random variable instead of structural data like graphs , we need to choose some properties of the patterns which we will monitor using the geweke test .",
    "the three metrics we use in the experiment are the number of neighbors @xmath89 , the number of frequent neighbors @xmath109 and the number of nodes in the pattern @xmath237 .",
    "figure  [ fig : converge ] shows the convergence traces of a sample run with @xmath238 and @xmath228 on the _ dtp _ dataset .",
    "each curve corresponds to the z - score of a chain over the number of iterations .",
    "it can be seen that the markov chain we design has pretty fast convergence rate thanks to the tuning of the proposal distribution . for each chain",
    ", convergence is declared when the z - scores of all three metrics have fallen within the @xmath129 $ ] range for 20 iterations continuously . in figure",
    "[ fig : converge ] , this happens around 150 iterations for most chains .",
    "in a broad sense , our paper belongs to the general problem of privacy - preserving data mining - a topic that has been studied extensively for a decade because of its numerous applications to a wide variety of problems in the literature .",
    "a general overview of various research works on this topic can be found in @xcite .",
    "below we briefly review the results relevant to this paper .",
    "* data mining with differential privacy . * ever since differential privacy @xcite was proposed and embraced by the database community , the privacy requirement that various works try to achieve has shifted from syntactic models like @xmath7-anonymity @xcite to the more rigorous model of differential privacy .",
    "a formal introduction to differential privacy can be found in section  [ subsec : dp ] .",
    "there exist two basic approaches to differentially private data mining . in the first approach , the data owner releases an anonymized version of the original dataset under differential privacy .",
    "and the user has the freedom of conducting any data mining task on the anonymized dataset .",
    "we call this the ` publishing model ' .",
    "examples include releasing anonymized version of contingency tables @xcite , data cubes @xcite and spatial data @xcite .",
    "the general idea in these work is to release tables of noisy counts ( histograms ) and study how to ensure they are sufficiently accurate for different query workloads . in the other approach ,",
    "differential privacy is applied to a specific data mining task , such as decision tree induction @xcite , social recommendations @xcite and frequent itemset mining @xcite .",
    "the problem addressed in this paper falls into this category . in these works",
    ", randomness is often injected to the intermediate results or sub - procedures of a mining algorithm .",
    "while the output of the first approach is more versatile , the second approach often leads to better utility ( for specific data mining tasks ) since privacy - preserving techniques are particularly designed for that data mining algorithm .",
    "* privacy - protection of graphs . * the aforementioned works on differentially private data mining all deal with structured data ( tables or set - valued data ) . for graph data , there are research efforts @xcite to anonymize a social network graph to prevent node and edge re - identification .",
    "but most of them focus on modifying the graph structure to satisfy @xmath7-anonymity , which has been proved to be insufficient @xcite .",
    "recently , several works @xcite emerge to provide differentially private analysis of graph data , which releases some statistics such as the number of triangles about a single ( large ) graph .",
    "two types of differential privacy have been introduced to handle graph data : node differential privacy and edge differential privacy .",
    "it is still open whether any nontrivial graph statistics can be released under node differential privacy due to its inherent large sensitivity ( e.g. , removing a node in a star graph may result in an empty graph ) .",
    "_ @xcite consider the problem of releasing the degree distribution of a graph under a variant of edge differential privacy .",
    "more recently , karwa _ et al .",
    "_ @xcite propose algorithms to output approximate answers to subgraph counting queries , i.e. , given a query graph @xmath171 , returning the number of edge - induced isomorphic copies of @xmath171 in the input graph .",
    "the technique they use is to calibrate noise according to the smooth sensitivity @xcite of @xmath171 in the input graph .",
    "karwa et al . the cases when @xmath171 is triangle , @xmath7-star or @xmath7-triangle are studied in @xcite . unfortunately , their work does not support the case when @xmath171 is an arbitrary subgraph yet .",
    "in contrast , we have a different problem setting from @xcite in this paper .",
    "first , like @xcite , our privacy - preserving algorithm is associated with a specific and more complicated data mining task .",
    "second , we consider a graph database containing a collection of graphs related to individuals .",
    "the only work we can find on privacy protection for a graph database is @xcite , which follows the ` publishing model ' .",
    "their goal is to achieve @xmath7-anonymity by first constructing a set of super - structures and then generating synthetic representations from them .",
    "* graph pattern mining . * finally",
    ", we briefly discuss relevant works on traditional non - private graph pattern mining .",
    "a more comprehensive survey can be found in @xcite .",
    "earlier works which aim at finding all the frequent patterns in a graph database usually explore the search space in a certain manner .",
    "representative approaches include _ a priori_-based ( e.g. @xcite ) and pattern growth based ( e.g. gspan @xcite ) . an issue with this direction is that the search space grows exponentially with the pattern size , which may reach a computation bottleneck .",
    "thus later works aim at mining _ significant _ or _ representative _ patterns with scalability .",
    "one way of achieving this is through random walk @xcite , which also motivates our use of mcmc sampling for privacy preserving purpose .",
    "another remotely related work is @xcite , which connects probabilistic inference and differential privacy .",
    "it differs from this work by focusing on inferencing on the output of a differentially private algorithm .",
    "we have presented a novel technique for differentially private mining of frequent graph patterns .",
    "the proposed solution integrates the process of graph mining and privacy protection into an mcmc sampling framework .",
    "we have explored the design space of the proposal distribution and the score function and their impact on the performance of the algorithm .",
    "moreover , we have established the theoretical privacy and utility guarantee of our algorithm .",
    "an efficient algorithm for counting the neighbors of a pattern has been proposed to greatly reduce the time - consuming subgraph isomorphism tests .",
    "experiments on both synthetic and real datasets show that with moderate amount of privacy budget , _ diff - fpm _ is able to output frequent patterns with over 80% precision and support accuracy .",
    "we also notice the drop in utility with the increase of the number of outputs or the decrease in dataset size , which is inevitable under the requirement of differential privacy .",
    "a.  nanavati , s.  gurumurthy , g.  das , d.  chakraborty , k.  dasgupta , s.  mukherjea , and a.  joshi . on the structural properties of massive telecom call graphs : findings and implications . in _ proceedings of cikm _ ,",
    "pages 435444 .",
    "acm , 2006 ."
  ],
  "abstract_text": [
    "<S> discovering frequent graph patterns in a graph database offers valuable information in a variety of applications . however , if the graph dataset contains sensitive data of individuals such as mobile phone - call graphs and web - click graphs , releasing discovered frequent patterns may present a threat to the privacy of individuals . _ </S>",
    "<S> differential privacy _ has recently emerged as the _ de facto _ standard for private data analysis due to its provable privacy guarantee . in this paper </S>",
    "<S> we propose the first differentially private algorithm for mining frequent graph patterns .    </S>",
    "<S> we first show that previous techniques on differentially private discovery of frequent _ itemsets _ can not apply in mining frequent graph patterns due to the inherent complexity of handling structural information in graphs . </S>",
    "<S> we then address this challenge by proposing a markov chain monte carlo ( mcmc ) sampling based algorithm . </S>",
    "<S> unlike previous work on frequent itemset mining , our techniques do not rely on the output of a non - private mining algorithm . instead </S>",
    "<S> , we observe that both frequent graph pattern mining and the guarantee of differential privacy can be unified into an mcmc sampling framework . in addition </S>",
    "<S> , we establish the privacy and utility guarantee of our algorithm and propose an efficient neighboring pattern counting technique as well . </S>",
    "<S> experimental results show that the proposed algorithm is able to output frequent patterns with good precision . </S>"
  ]
}
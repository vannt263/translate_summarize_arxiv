{
  "article_text": [
    "in 1965 , buchberger developed the method of grbner bases for solving systems of multivariate non - linear polynomials .",
    "since then , computing power has grown , and improved algorithms developed , but , even now , the method remains impractical for many problems .",
    "the main approach to improvement has been to develop algorithms which avoid unnecessary computation culminating in faugre s f5 algorithm . on the other hand , various methods of representing polynomials",
    "have been explored and the impact of data structures on algorithm performance evaluated .",
    "a central element of the method is that it is based on the ordering of _ power products _",
    "( known as _",
    "terms _ in faugre s papers ) .",
    "orderings that have been used include lexicographic , total degree and variations on these .",
    "prime - based ordering does not appear to have been exploited , and it is the purpose of this paper to explore this case .    the plan of this article is as follows .",
    "first , we introduce prime - based ordering as the natural ordering of power products imposed by encoding the indeterminates as distinct prime numbers .",
    "then , we show that this ordering is admissible .",
    "we report our implementation of buchberger s improved algorithm using both total degree ordering and prime - based ordering .",
    "experimental measurements show that significant gains are achieved by using prime - based ordering .",
    "total orderings used in grbner basis algorithms are required to be _",
    "admissible_. that is they must satisfy the conditions : @xmath0 @xmath1    common admissible total orderings include lexicographical , total degree lexicographical and degree reverse lexicographical .",
    "variations of these and other orderings are possible [ @xcite ] .",
    "an ordering that , to the best of our knowledge , has not been used in implementations of buchberger s algorithm for grbner bases is one based on prime numbers .",
    "given a power product , @xmath2 , each indeterminate @xmath3 is mapped to a unique prime number : @xmath4 so that @xmath5 . for example , @xmath6 .",
    "we define @xmath7 in other words , the ordering of @xmath8 and @xmath9 is determined by the natural ordering of the integers @xmath10 and @xmath11 .",
    "we call the integer @xmath11 the _ prime image _ of @xmath9 .    now , if all the exponents of @xmath8 are zero , @xmath12 and @xmath13 . similarly , if @xmath14 , at least one exponent of @xmath9 is positive , so that @xmath15 .",
    "this establishes condition ( 1 ) .",
    "similarly , from ( 4 ) , @xmath16 , establishing condition ( 2 ) .",
    "hence , the mapping of indeterminates onto a set of prime numbers is an admissible ordering .",
    "prime - based order is neither a total degree nor a lexicographical ordering .",
    "for example , in total degree , @xmath17 ; but , in prime - based ordering , @xmath18 ; so @xmath19 .",
    "similarly , @xmath20 in lexicographical ordering ; but , @xmath21 , implying @xmath22 in prime - based ordering .",
    "we have developed four versions of buchberger s improved algorithm [ @xcite ] , which generate a reduced grbner basis .",
    "they are written in the object oriented programming language eiffel so that the algorithm is the same but the implementations of power products and coefficients differ in each version .",
    "hence , variations can be readily created and verified not only by comparing output but also by using eiffel s built - in preconditions and postconditions .",
    "eiffel allows these conditions to be discarded during compilation so that the algorithm can run at full speed .",
    "furthermore , mathematical constructs can be represented as structures of interconnected objects .",
    "the versions differ in the power - product representation and the integer precision used for the coefficients . in the first version , monomials are represented as structures consisting of a rational coefficient and a power product , @xmath2 .",
    "the coefficient is represented by a pair of 64 bit integers  numerator and denominator  and the power product is represented as a string of characters , in expanded form .",
    "for example , @xmath23 is stored as the string `` aaabbc '' .",
    "power products are compared using total degree in this case .",
    "this representation was chosen for simplicity , and , because object oriented programming methods are used , may be changed easily to any other form of representation , such as a vector of powers , @xmath24}$ ] or as a list .",
    "operations on power products are implemented as iterations or recursions on the underlying data structure .",
    "for example , multiplying @xmath23 by @xmath25 involves merging the strings `` aaabbc '' and `` abc '' to yield `` aaaabbbcc '' , representing @xmath26 .    in the second version , primes are used to represent the indeterminates .",
    "power products are ordered by their integer image .",
    "this avoids iteration or recursion in the basic operations , which reduce to integer operations .",
    "for example , multiplication of power products is integer multiplication , as in @xmath27 .",
    "similarly , the functions of division , lowest common multiple and greatest common divisor also reduce to integer operations .",
    "the same is true for boolean operations such as comparison , equality , divisibility and so on .",
    "the prime based implementation of power - products is the same as the original total degree version , but for replacing the routine bodies with the prime based equivalent .",
    "as very large coefficients are often generated , the gnu multiple precision library , gmp , is used to create the other implementations of the algorithm .",
    "this was done by changing the coefficient implementation to use the multiple - precision integer type in the gmp library .",
    "steps were taken to demonstrate that our version of buchberger s improved algorithm generates grbner bases .",
    "the necessary and sufficient condition to be met by a grbner basis , @xmath28 , is : @xmath29 where @xmath30 is the normal form or reduction function , and @xmath31 is leading term cross - reduction function as defined by definition 6.4 in [ @xcite ] . in the case of",
    "a _ reduced _ grbner basis , in addition to the above , it is also necessary that @xmath32    all sets of polynomials generated by the algorithm were tested for these conditions .",
    "it was also verified that each result set reduced the given polynomial set , confirming that the ideal was unchanged , and that the basis generated by the grbner bases package supplied with maple reduced the result , hence providing independent confirmation .",
    "we found one problem with the implementation of the algorithm as presented in [ @xcite ] .",
    "this was that the set of pairs of polynomials was not updated after a new polynomial was generated by reduction in the @xmath33 @xmath34 .",
    "to the best of our knowledge , this has not been previously pointed out .",
    "when this deficiency was remedied , results proved to be consistent .",
    "our timing tests have been performed using the four implementations as shown in table 1 .",
    "examples 1 , 2 and 3 are simple manufactured examples , while most of the others are taken from [ @xcite ] .",
    "the examples entitled  arnold \" are taken from [ @xcite ] .",
    "care was taken in the ordering of the indeterminates in the case of  parametric curve \" as it includes the power product @xmath35 .",
    "this power product can be encoded as @xmath36 when using 64-bit integers , but it can not be encoded as @xmath37 , which requires 72-bits .",
    "the main result is that representing the indeterminates by prime numbers and the power products by unique integers significantly reduces the computation time in most cases . in eight cases ,",
    "the computations complete successfully when the coefficients are encoded as 64-bit integers , and the reduction in time is at least 30% , or a 40% speedup . the greatest reduction , (  gerdt 1 \" ) , is 96.8% , or more than a @xmath38 speedup . as there are more efficient coding schemes than the one used for the total degree implementation , these speedups are on the optimistic side .",
    "a second result is that the number of polynomials may be different .",
    "for example ,  gerdt 1 \" reduces to 56 polynomials when total - degree ordering is used .",
    "when prime - based ordering is used , only 36 polynomials are generated .",
    "however , this is not a general rule , as  gerdt 3 \" generates 21 polynomials for total - degree and 23 for prime - based ordering .",
    "for some examples , integer overflow problems arise because the coefficients are encoded as pairs of 64-bit integers . to counter this , the gnu multiple precision ( gmp ) library",
    "is used to support coefficients based on very large integers .",
    "using the library allows eleven cases to be compared because they complete successfully with both prime - based and string based power products .",
    "a twelfth was completed when garbage collection was turned off .",
    "+ time ( ms)/ & & + & & reduction & & reduction + & total degree & prime based & ( % ) & total degree & prime based & ( % ) + example 1 & 13.22/1 & 9.19/1 & 30.5 & 29.92/1 & 34.09/1 & 12.2 + example 2 & 2.93/6 & 1.98/6 & 32.4 & 7.32/6 & 6.4/6 & 12.6 + example 3 & 9.44/6 & 6.35/6 & 32.7 & 24.82/6 & 20.26/6 & 18.4 + cyclic 4 & 10.73/7 & 5.43/7 & 49.4 & 21.4/7 & 15.54/7 & 27.4 + cyclic 5 & 12855/20 & & & & 14289/24 & + gerdt 1 & 345790/56 & 11059/36 & 96.8 & 387004/56 & 14975/36 & 96.1 + gerdt 2 & 56.8/8 & 4.91/5 & 91.4 & 146.55/8 & 17.74/5 & 87.9 + gerdt 3 & 2693/21 & 1886/23 & 30.0 & & 3217/23 & + gerdt @xmath39 & 4596/21 & 3051/23 & 33.6 & 5584/21 & 4564/23 & 18.3 + arnborg - lazard & & & & 3042/15 & 2476/11 & 18.6 + parametric curve & 420.7/16 & 17.72/10 & 95.8 & 522.5/16 & 35.15/10 & 93.3 + katsura 4 & & & & 1059/13 & 873/13 & 21.1 + arnold 1 & 153.78/3 & & & 2276563/3 & 264810/3 & 88.4 + arnold 2 & & & & 2919337/2 & 1499222/2 & 48.6 +    \\a .",
    "integer overflow .",
    "gmp problem .",
    "garbage collection turned off .",
    "memory exhausted when garbage collection is turned off .",
    "total degree based ordering faster than prime - based ordering .    with the  katsura 4 \" example",
    ", we chanced upon a case in which the algorithm using total - degree ordering was faster than that with prime - based ordering .",
    "so , we have carried out a limited investigation of the effect of permuting the relative ordering of the indeterminates of the two polynomial sets , for  example 2 \" with three indeterminates , and for  katsura 4 \" with five indeterminates .",
    "we found permutations in which the prime - based ordering was faster than the fastest total - degree ordering in both cases .",
    "the effects of permuting the relative order of the indeterminates for  example 2 \" are presented in table 2 . in all cases using the 64 bit coefficients ,",
    "the prime - based ordering version is faster by as much as 46% . when using gmp , the prime - based ordering is faster by as much as 30% in all but one case , when it is 16.7% slower .",
    "the fastest computation was the prime - based 64 bit case of 1.98ms when the indeterminate order was @xmath40 .",
    "the ratio of maximum to minimum times is given for each implementation .",
    "for example , the ratio of the slowest prime - based 64 bit case to the fastest is 11 .",
    "& & + & & reduction & & reduction + & total degree & prime based & ( % ) & total degree & prime based & ( % ) + @xmath41 & 15.85 & 10.56 & 33.6 & 38.22 & 33.57 & 12.2 + @xmath40 & 2.93 & 1.98 & 32.4 & 7.32 & 6.4 & 12.6 + @xmath42 & 24.06 & 18.76 & 22.0 & 60.95 & 58.73 & 3.6 + @xmath43 & 41.48 & 22.29 & 46.3 & 125.42 & 88.22 & 29.7 + @xmath44 & 3.71 & 2.62 & 29.4 & 9.42 & 8.36 & 11.3 + @xmath45 & 15.08 & 13.15 & 12.8 & 37.50 & 45.01 & @xmath46 + max / min & 14 & 11 & & 17 & 14 & +    \\a .",
    "total degree based ordering faster than prime - based ordering .    in the case of  katsura 4",
    "\" , there are five indeterminates , and 120 orders to consider . only the multiple precision implementations work , as the 64-bit coefficient implementations overflow .",
    "the fastest case is prime based , with a duration 17.6% less than fastest total degree based case .",
    "the ratio of the slowest to fastest is 1.9 for the total degree based implementation and 3 for the prime - based implementation .    in the  gerdt 3 \" example and some other examples , using the gmp library triggered a fault which caused the program to crash .",
    "this crash occurs when objects are collected by the garbage collector while running or when the program terminates .",
    "this is believed to be a problem in the interface between eiffel and the gmp library rather than gpm itself . turning off garbage collection avoided the fault , but proved costly , as it is faster to re - allocate memory internally than by repeatedly requesting additional memory from the operating system . secondly , with garbage collection",
    "off , if memory is exhausted , the computation becomes disk - bound ; these cases were abandoned .",
    "prime - based ordering , based on ordering power products by encoding the indeterminates as prime numbers and using the natural number order , is an admissible ordering .",
    "prime - based ordering is not a lexicographical or total degree ordering .",
    "implementations of this ordering reduce power product operations to integer operations .",
    "several versions of buchberger s improved algorithm have been developed and tested .",
    "each result has been verified to satisfy the necessary and sufficient conditions to be a reduced grbner basis .",
    "resulting bases also reduce their respective given polynomial sets , confirming that the ideal is correctly preserved .",
    "they were also shown to be reduced by bases generated using the grbner package in maple .",
    "duration reductions measured using the improved buchberger algorithm range from 30% ( 40% speedup ) to 96.8% ( @xmath38 speedup ) .",
    "the number of polynomials can differ according to the ordering scheme .",
    "for example , in the  gerdt 1 \" case , prime - based ordering generates a grbner basis with 36 polynomials , whereas the total degree result has 56 polynomials .    finally , we have also explored the effect of permuting the indeterminates in some examples , and have found that the duration of computation varies significantly . in these examples , the fastest case was always using the prime - based ordering .",
    "we are continuing to investigate this matter together with issues associated with large coefficient size .",
    "buchberger ( 1985 ) arnold , e. a. , 2003 , _ modular algorithms for computing grbner bases _ , journal of symbolic computation 35 ( 2003 ) 403 - 409 buchberger , b. , 1985 ,  grbner bases : an algorithmic method in polynomial ideal theory \" , in _ multidimensional system theory _",
    ", bose , n. k. ( ed ) , 184 - 232 faugre , j - c , http://fgbrs.lip6.fr/jcf/software/benchs/index.html , visited 3 june , 2008 giovini , a. et al . , _",
    "`` one sugar cube , please '' or selection strategies in the buchberger algorithm _ , proceedings of the 1991 international symposium on symbolic and algebraic computation , 49 - 54"
  ],
  "abstract_text": [
    "<S> prime - based ordering which is proved to be admissible , is the encoding of indeterminates in power - products with prime numbers and ordering them by using the natural number order . using eiffel , four versions of buchberger s </S>",
    "<S> improved algorithm for obtaining grbner bases have been developed : two total degree versions , representing power products as strings and the other two as integers based on prime - based ordering . </S>",
    "<S> the versions are further distinguished by implementing coefficients as 64-bit integers and as multiple - precision integers . by using prime - based power product coding , iterative or recursive operations on power products </S>",
    "<S> are replaced with integer operations . </S>",
    "<S> it is found that on a series of example polynomial sets , significant reductions in computation time of 30% or more are almost always obtained .        </S>",
    "<S> grbner basis , buchberger s algorithm , admissible order , prime - based ordering </S>"
  ]
}
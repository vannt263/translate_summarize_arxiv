{
  "article_text": [
    "motivated by an attempt to understand the moduli space of flat connections on a vector bundle over a surface , goldman constructed in @xcite a lie bracket on the free vector space spanned by homotopy classes of ( basepoint - free ) loops on a surface , together with a lie homomorphism ( by taking trace of holonomy ) to the poisson algebra of functions on the aforementioned moduli space .    in @xcite , turaev discovered that one may define , in a similar way , a cobracket on the aforementioned space of loops , which is compatible with goldman s bracket and yields a lie bialgebra .",
    "he also constructed a quantization of this lie bialgebra in terms of link diagrams on the surface .",
    "this left open the question to find an interpretation of the lie coalgebra . in @xcite",
    ", turaev discovered a relation between his lie coalgebra and connes and kreimer s renormalization algebras @xcite , which form part of the algebraic foundations of perturbative quantum field theory .",
    "specifically , he found a homomorphism from an up - to - isotopy , pointed version of his lie coalgebra of loops to connes and kreimer s lie coalgebra of trees , and constructed from this a commutative hopf algebra on the loop side mapping to connes and kreimer s renormalization hopf algebra .",
    "this allows one to interpret the combinatorics of loops and turaev s lie coalgebra as feynman diagrams connected to renormalization .",
    "turaev found that additional structure from the construction is preserved , and accordingly generalized connes and kreimer s algebras to include the extra data .",
    "this attached to the trees the following : ( 1 ) a homotopy class of loops assigned to each vertex ; ( 2 ) orientations on the edges ; and ( 3 ) a ribbon graph structure . an essential step of the above construction is the observation that , when one has a basepoint , turaev s lie coalgebra actually arises from a more fundamental pre - lie coalgebra structure . in the basepoint - free case",
    ", turaev constructed an `` oriented trees '' version of connes and kreimer s lie coalgebra ( which does * not * come from a pre - lie coalgebra ) , so that one is still equipped with a homomorphism .",
    "there is a known analogue for quivers of the goldman / turaev lie bialgebra of loops , called the necklace lie bialgebra . here , the lie algebra was discovered for much the same reason as the goldman algebra : because of its representation into the poisson algebra of functions on the corresponding quiver variety @xcite ( the lie algebra was independently discovered in @xcite ) . in @xcite , the second author constructed the cobracket and quantized the resulting lie bialgebra , following in analogy with @xcite .",
    "it is thus natural to ask for an interpretation of the cobracket in terms of representations , and in particular , if all of the above results from @xcite can be generalized to the quiver setting .    in this note",
    ", we answer this question affirmatively , and present quiver analogues of the results of @xcite .",
    "we define a pre - lie coalgebra on the quiver side in the rooted ( basepointed ) case .",
    "we also define a commutative `` renormalization '' hopf algebra associated to any quiver .",
    "then , our main theorem ( theorem [ homt1 ] ) is the construction of a natural monomorphism from these quiver algebras and the ( oriented ) necklace lie coalgebra to the connes and kreimer algebras , with additional quiver - theoretic structure we define .",
    "we explain how the pre - lie and hopf algebra structures are essentially equivalent , in all cases ( necklaces , trees ( connes - kreimer ) , and loops ( turaev ) ) , using a general result about pre - lie algebras @xcite . unlike in turaev",
    "s case , for quivers , there is no distinction between `` up to isotopy '' and `` up to homotopy , '' so there is only one lie coalgebra to consider in each of the oriented / rooted cases , which is the one that is compatible with the necklace bracket in the oriented case . in contrast , the isotopy coalgebra from @xcite is * not * compatible with the goldman lie bracket ( compatibility requires passing to homotopy classes ) .    for quivers ,",
    "we find that introducing a basepoint is the same as cutting a necklace and considering algebras of paths , so our algebras in the rooted case are actually algebras of paths in the quiver .",
    "the additional structure attached to trees in our setting replaces the loops ( with basepoint ) attached to vertices with cyclic paths ( paths ) in the quiver .",
    "the rest of the structure  the ribbon graph structure and orientation of edges  is unchanged .",
    "furthermore , we discover that the monomorphisms factor through a `` chord algebra '' we define , which essentially is the span of necklaces with certain chord diagrams ( theorem [ homt2 ] ) .",
    "this clarifies the construction and the reason that it exists .",
    "we also briefly describe the corresponding geometric object , in the setting of @xcite , where the chord diagrams become geometric chord diagrams @xcite ( the chord algebras were not mentioned in @xcite ) .",
    "finally , we briefly give a noncommutative version of the hopf algebra , analogous to section 8.5 of @xcite , which maps to foissy s noncommutative algebra of labeled rooted trees @xcite .",
    "in particular , this shows that paths and loops have a noncommutative ( = ordering ) structure which does not exist for rooted trees without labels .",
    "the noncommutative hopf algebras , unlike their commutative counterparts , are * not * determined by the pre - lie structure alone ( which essentially forgets about the `` labelings '' on the associated trees ) .",
    "the organization of the paper is as follows : in section 2 , we briefly recall the necessary definitions from @xcite ( for the tree side ) , and from @xcite ( for the quiver side ) . then , in section 3 , we define the new quiver - theoretic hopf algebra and pre - lie coalgebra , state our main result , and generalize it through chord algebras .",
    "we also explain the equivalence of pre - lie coalgebras and commutative hopf algebras of a special form , and give the noncommutative version of the constructions in this paper .",
    "finally , in section 4 , we provide the postponed proofs ( e.g. , of the main theorem ) .",
    "we are grateful to victor ginzburg for connecting the authors and for some useful comments .",
    "we thank muriel livernet for helpful comments and references .",
    "the first author was partially supported by nsf grant dms-0726154 .",
    "the second author was partially supported by an nsf grf .      throughout",
    ", @xmath0 denotes a fixed commutative ring with unit .",
    "[ tauntn ] for any permutation @xmath1 , we define @xmath2 as the permutation of components corresponding to @xmath3 .",
    "our permutations use cycle notation .",
    "thus , @xmath4 denotes the permutation @xmath5 .",
    "in this section , we recall the needed constructions of @xcite .",
    "we recall the lie coalgebra and hopf algebra of rooted trees from @xcite , following @xcite , where the former is generalized to a pre - lie coalgebra , and to the setting of oriented trees .",
    "we recall first the definition of pre - lie algebras ( independently discovered by @xcite and @xcite ) and their dual , pre - lie coalgebras ( following @xcite ) .",
    "note that there are a wide variety of important pre - lie algebras , including the hochschild cochain complex of an algebra , vector fields , and the examples in this paper .",
    "a ( left ) pre - lie algebra over @xmath0 is a @xmath0-module with a @xmath0-bilinear product @xmath6 satisfying @xmath7 if @xmath6 is a pre - lie multiplication , then @xmath8 : = x \\star y - y \\star x$ ] must be a lie bracket .    to obtain the definition of pre - lie coalgebra , we dualize in the sense of determining what structure exists on @xmath9 if @xmath10 is a pre - lie algebra",
    "precisely , a ( left ) pre - lie coalgebra , @xmath10 , over @xmath0 is a @xmath0-module with a @xmath0-linear map @xmath11 satisfying @xmath12 if @xmath13 is a pre - lie comultiplication , then @xmath14 must be a lie cobracket .",
    "a rooted tree @xmath15 is a collection of vertices @xmath16 and edges @xmath17 , and a map @xmath18 from edges to unordered pairs of vertices , such that the resulting graph is connected and has no cycles ( or loops ) , together with a distinguished vertex , called the root .",
    "an oriented tree is the same but without the distinguished vertex , and whose edge map is actually a map @xmath19 , from edges to ordered pairs of vertices .",
    "let @xmath20 be the free @xmath0-module with basis given by the isomorphism classes of rooted trees . in @xcite ( @xcite for the `` pre- '' )",
    ", the following pre - lie comultiplication @xmath21 is defined on @xmath20 : @xmath22 where @xmath23 are the trees obtained by deleting the edge @xmath24 , and @xmath25 is the tree which contains the root .",
    "the root of @xmath26 is the vertex which was incident to @xmath24 , and the root of @xmath25 is the root of @xmath15 .",
    "@xcite the map @xmath21 is a pre - lie comultiplication .",
    "thus , one deduces that the skew - symmetrization , @xmath27 , is a lie cobracket , which was already discovered in @xcite ( and motivated the above result )",
    ".    in @xcite , a version for oriented trees is also given .",
    "let @xmath28 be the free @xmath0-module with basis given by the isomorphism classes of oriented trees .",
    "then , a lie cobracket @xmath29 is defined by the same formula as the skew - symmetrization of , except letting @xmath25 be the subtree that @xmath24 points to , and @xmath26 be the subtree that @xmath24 points away from ( note that there is no pre - lie comultiplication @xmath30 ) .",
    "finally , we will need the generalization given in @xcite : let @xmath31 be the categories whose objects are rooted and oriented trees , respectively , and whose morphisms are embeddings of trees ( maps of rooted or oriented trees , that preserve incidence and are injective on vertices and edges ; the root must get sent to the vertex of the image subtree which is closest to the root of the whole tree ) .",
    "then , we have    for any contravariant functor @xmath32 ( called a * rooted tree - structure * ) , we let @xmath33 be the free @xmath0-module spanned by isomorphism classes of pairs @xmath34 where @xmath15 is a rooted tree and @xmath35 . here , an isomorphism of pairs @xmath36 is an isomorphism of trees @xmath37 whose pullback carries @xmath38 to @xmath39 . in the oriented case ,",
    "one similarly defines @xmath40 .",
    "@xcite for any rooted tree - structure @xmath41 , the following formula defines a pre - lie comultiplication @xmath21 on @xmath42 : @xmath43 where @xmath44 and @xmath25 contains the root .",
    "similarly , the skew - symmetrization of this defines a lie coalgebra in the case of oriented trees , where now @xmath25 is the tree that @xmath24 points to .",
    "we briefly recall connes and kreimer s hopf algebra on rooted trees @xcite , as formulated with tree structures in @xcite .",
    "let @xmath45 be the symmetric algebra on @xmath20 ( polynomials in rooted trees ) .",
    "@xcite a * cut * @xmath46 of a rooted tree @xmath15 with root @xmath47 is a subset @xmath48 of edges .",
    "it is a * simple cut * if each connected component of @xmath49 contains at most one edge in @xmath46 .",
    "( the empty cut @xmath50 is included , and is simple . )    @xcite for any simple cut @xmath46 of @xmath15 , let @xmath51 be the set of connected components of @xmath52 , where @xmath53 is the component containing the root @xmath54 , and @xmath55 is the other connected component which was adjacent to @xmath24 as a subset of @xmath15 .",
    "@xcite for any rooted tree - structure @xmath56 , define a map @xmath57 by the formula @xmath58 here , by definition , @xmath59 and @xmath60 , for all @xmath61 .",
    "@xcite this defines a commutative hopf algebra structure on @xmath62 for any rooted tree - structure @xmath41 , with counit @xmath63 for any @xmath64 .",
    "note that comultiplication has the form ( for @xmath64 ) @xmath65 where @xmath66 is the projection of @xmath67 away from @xmath68 ( that is , @xmath69 , with @xmath70 the unit map ) .",
    "furthermore , using the natural grading by total number of edges in the trees , @xmath71 has strictly lower degree than @xmath72 if @xmath72 is a tree .",
    "thus , one may easily verify ( cf .",
    "@xcite ,  3.9 ) that the following general formula for the antipode @xmath73 holds ( with @xmath64 ) : @xmath74 ( where @xmath75 is the multiplication , and @xmath76 is the iterated application of the coassociative @xmath66 ) .",
    "this extends to products of trees anti - multiplicatively .",
    "so , it is enough to check the bialgebra condition above .",
    "we now proceed to the quiver versions of the preceding and formulate our results .",
    "we recall the definition of the necklace lie coalgebra from @xcite , which will correspond to the `` oriented '' case .",
    "let @xmath77 be any quiver ( with edge set also denoted by @xmath77 ) , and let @xmath78 be the double quiver , @xmath79 , where if @xmath24 is an arrow from @xmath80 to @xmath81 ( denoted @xmath82 ) , then @xmath83 is the reverse .",
    "the double quiver has the same set @xmath84 of edges as @xmath77 .",
    "let @xmath85 be the path algebra on the double quiver .",
    "precisely , one has @xmath86 , where @xmath87 is the @xmath88-bimodule with basis @xmath89 , so that @xmath90 is the space with basis those edges @xmath91 . for each edge",
    "@xmath91 let @xmath92 ( the `` source '' and `` target , '' respectively ) .",
    "let @xmath93 = hh_0(p)$ ] be the @xmath0-module with basis the cyclic paths in the quiver @xmath89 ( forgetting the initial edge ) .",
    "we call such cyclic paths `` necklaces , '' and the cobracket operation will involve splitting necklaces into two necklaces ( by making two cuts and gluing the endpoints of the two resulting strands = paths in the quiver ) .",
    "then , one defines the cobracket @xmath94 ( or = oriented ) as follows : @xmath95 ) = \\sum_{i      < j }    \\omega(a_i , a_j ) [ ( a_j)_t a_{j+1 } \\cdots a_{i-1 } ] \\wedge [ ( a_i)_t    a_{i+1 } \\cdots a_{j-1}],\\ ] ] where @xmath96 for @xmath97 , and @xmath98 if @xmath99 ( we use the notation @xmath100 ) .",
    "a typical summand is depicted in figure [ lie - fig ] .",
    "we define `` rooted '' versions of the necklace lie coalgebra . by being rooted , we will actually obtain a pre - lie structure , as in the rooted tree case .    to add a basepoint to a necklace , one should pick an initial edge .",
    "equivalently , one can replace the necklace with a closed path . in this generality",
    ", one may actually speak of non - closed paths as well , which we do .    in @xcite ,",
    "a ( loday or lie ) cobracket is defined in this way by the following idea : when one makes two cuts in a path and joins the cut ends the same way we did before for necklaces , one obtains one path and one necklace .",
    "this is depicted in figure [ loday - fig ] .",
    "this will not give a pre - lie coalgebra , however : to get one , one needs ( as in @xcite ) to split a path into two paths ( resp . a rooted tree into two rooted trees by cutting ) .",
    "to do this , we make two cuts in the path , but only glue once : the left strand to the right , obtaining two strands ( figure [ prelie - fig ] ) .    precisely , we define the rooted pre - lie comultiplication @xmath101 and lie cobracket @xmath102 by the formulas @xmath103    the maps @xmath104 are lie cobrackets , and @xmath101 is a pre - lie comultiplication .",
    "it suffices to check that @xmath105 is a pre - lie comultiplication ( @xmath106 is a lie cobracket by @xcite ) .",
    "this follows along similar lines to the proof that @xmath106 is a lie cobracket in @xcite ,  2.2 .",
    "note that , while in the rooted case , one may consider paths that are not closed , the first component of the image of @xmath101 lies in the span of closed paths .",
    "we now define a hopf algebra which completes the analogy `` pre - lie coalgebra of rooted trees : : renormalization hopf algebra = = necklace pre - lie coalgebra of paths ( rooted ) : : ? ? ''",
    "note that this does not have an oriented version ( since there is no pre - lie coalgebra in the oriented case , cf .",
    "proposition [ preleqhop ] ) .    given a path @xmath107 , a _ cut _",
    "@xmath46 is a choice of pairs @xmath108 such that    1 .",
    "@xmath109 are distinct , 2 .   for all @xmath110 , @xmath111 , 3 .",
    "the pairs do not cross : that is , there do not exist @xmath112 such that @xmath113 , and 4 .   for all @xmath110 ,",
    "there exists @xmath114 such that @xmath115 .",
    "a cut is called * simple * if there do not exist @xmath116 with @xmath117 : that is , as in figure [ dualtree - fig ] , no added ( semicircular ) edge contains another such .    for any cut @xmath46 of a path @xmath118 , let @xmath119 be the collection of paths obtained by applying figure [ prelie - fig ] repeatedly ( cut each pair of edges @xmath120 and glue one pair of endpoints each , as in ) . by definition , @xmath121 is the unique path which shares the endpoints of the original path ( beginning at @xmath122 and ending at @xmath123 ) , and @xmath124 for @xmath125 is the unique path which begins at the target @xmath126 of @xmath127 , and ends at the source @xmath128 of @xmath129 .    for any cut @xmath130 of a path @xmath131 , let @xmath132 be defined by @xmath133    define the coproduct @xmath134 on a path @xmath135 by @xmath136 where @xmath137 .",
    "[ sympishopf ] the map @xmath67 endows @xmath138 with the structure of a commutative hopf algebra with antipode given by ( where @xmath72 is a path ) .",
    "this proposition will be proved in section [ sympishopfs ] .",
    "note that the result also follows from theorem [ homt1 ] , since the map @xmath70 gives a monomorphism of hopf algebras ( i.e. , without knowing @xmath138 is hopf , the theorem shows that @xmath70 is injective and carries the proposed multiplication , comultiplication , unit , and counit to those for connes and kreimer s hopf algebra ) .",
    "following in analogy with @xcite , we define a pre - lie coalgebra map @xmath139 and a lie coalgebra map @xmath140 for certain rooted ( resp . oriented )",
    "tree - structures @xmath141 .",
    "the former induces a hopf algebra map @xmath142 , as we explain . as a result of the pre - lie coalgebra map ,",
    "one also obtains a lie coalgebra map on the associated lie coalgebra @xmath143 ( by skew - symmetrizing the pre - lie comultiplication ) .",
    "a * ribbon graph structure * on a tree is a choice , for each vertex of the tree , of a fixed cyclic ordering of the edges incident with that vertex .",
    "let @xmath144 be the oriented tree - structure which assigns to each oriented tree a choice of ribbon graph structure on the tree , and to each vertex of the tree a cyclic path in @xmath89 ( which is a basis element of @xmath145 ) .",
    "@xcite a * * corner * * of a vertex of a ribbon graph is a choice of initial edge at the vertex ( giving a linear ordering of the incident edges ) .    let @xmath146 be the rooted tree - structure which assigns to each rooted tree a choice of ribbon graph structure with a corner at the root , together with an orientation of all edges , and a labeling of vertices by paths in @xmath89 ( basis elements of @xmath85 ) .",
    "instead of assigning ( cyclic ) paths to each vertex , an alternative would be to assign a single element of @xmath147 or @xmath148 to the tree , where @xmath149 means taking @xmath150 with components labeled by @xmath151 .",
    "then , @xmath152 would obtain a @xmath0-module structure , and we could work with the quotient @xmath153 of @xmath154 by the relation @xmath155 .",
    "note that , at all vertices other than the root of a rooted tree with a ribbon - graph structure , the cyclic ordering actually has a canonical lifting to a linear ordering ( i.e. , a corner ) , by choosing as initial the edge that lies between the given vertex and the root . so with the corner at the root , one obtains rooted trees with linear orderings at all vertices ( rather than merely cyclic orderings ) .",
    "in order to define the homomorphisms of pre - lie coalgebras and hopf algebras , we first need to construct from a simple cut of a path ( or later , a cyclic path ) , the dual tree to the chord diagram associated to this cut :    for any path @xmath135 of length @xmath156 , associate to this a line segment @xmath157 with edges @xmath158 $ ] for all @xmath159 , and vertices @xmath160 . the _ root _ is defined to be @xmath161 .",
    "( see figure [ dualtree - fig ] ) .",
    "we also think of the vertex @xmath162 as the root , essentially considering it to be the same vertex as @xmath163 .",
    "that is , a circle with basepoint is essentially equivalent to a line by cutting at the basepoint : then , the endpoints of the line are both the basepoint .",
    "we chose @xmath163 rather than @xmath164 for the root only for definiteness : the choice makes no difference .",
    "for any cut @xmath165 of a path @xmath166 , consider the associated * chord diagram * @xmath167 , obtained from @xmath168 by adding interior vertices @xmath169 to the edges @xmath170 , and a new edge with endpoints @xmath169 for each @xmath110 , as in figure [ dualtree - fig ] .",
    "the edges are chosen so as to not intersect ( giving a planar graph ) .    for any cut @xmath46 as above , let the * dual rooted tree * @xmath171 be obtained by dualizing the chord diagram : place one vertex inside each face of the chord diagram , and one edge crossing each edge of the chord diagram , connecting the vertices associated to the two faces .",
    "the root corresponds to the unbounded face ( which is included as a face ) .    for any cut @xmath46 of a path as above with dual rooted tree",
    "@xmath171 , we define an element @xmath172 of @xmath173 as follows : first , orient the edges of the chord diagram , by assigning the edge with endpoints @xmath169 the orientation @xmath174 if @xmath175 and @xmath176 otherwise . then , the orientation of the edge @xmath24 of @xmath171 which crosses an edge @xmath177 of the chord diagram is such that @xmath178 is the positive orientation on @xmath179 .",
    "next , the unbounded face is still considered a face , and its vertex is declared the root .",
    "this is naturally a ribbon graph .",
    "the linear ordering of the edges at the root ( choice of corner ) is given by the usual linear ordering of the endpoints of the edges of the unbounded face of the chord diagram in the interval @xmath180 $ ] .",
    "finally , the labeling of the vertices is given as follows : to each face @xmath177 of the chord diagram , @xmath181 $ ] is a union of closed intervals ; let @xmath182 be the interior and @xmath183 the set of integers incident to the face which are not incident to any of the edges of the chord diagram ( not including @xmath180 $ ] ) .",
    "let @xmath184 be the vertex of the quiver which is the left endpoint of @xmath185 : that is , @xmath186 .",
    "then , @xmath187 is the path associated to the vertex attached to @xmath177 ( it is the path which remains in that face after performing cuts as in figure [ dualtree - fig ] ) .",
    "the dual tree is depicted ( without the tree - structure ) in figure [ dualtree - fig ] .",
    "we proceed to define the dual oriented tree :    for any cut @xmath46 as above , the * dual oriented tree * is the dual tree @xmath171 , forgetting the root , together with the orientation of edges given by the element of @xmath173 above . call it @xmath188 .    for any closed path @xmath189 with dual oriented tree @xmath188 , define an element @xmath190 of @xmath191 from @xmath172 by taking the image of the labels of vertices in cyclic paths ( @xmath192 $ ] ) , and forgetting the corner structure .",
    "one may easily verify the    for any closed path @xmath189 , the space of cuts of @xmath189 is naturally isomorphic to that of @xmath193 for all @xmath80 , in a way that yields a natural isomorphism of dual oriented trees which carries the elements @xmath191 to each other .",
    "one may therefore define a    cut of the cyclic path @xmath194 $ ] and its associated dual oriented tree @xmath188 , with associated element @xmath195 .",
    "finally , we may define the homomorphisms and state the first theorem .    for any path @xmath131 , define the element @xmath196 as follows : @xmath197    for any cyclic path @xmath198 $ ] , define the element @xmath199 ) \\in { \\mathcal{t}}_{or}(\\phi_{or})$ ] as follows : @xmath200 ) = \\sum_{\\text{cuts } h } ( t_{h , or } , s_{h , or}).\\ ] ]    [ homt1 ] the maps @xmath201 and @xmath202 extend linearly to an injective pre - lie coalgebra homomorphism @xmath203 and an injective lie coalgebra homomorphism @xmath204 , respectively .",
    "furthermore , @xmath202 extends multiplicatively ( and linearly ) to a hopf algebra monomorphism @xmath205 .",
    "this theorem will be proved in section [ homt12ps ] .",
    "m. livernet pointed out to us that , by @xcite , the pre - lie coalgebra of decorated trees @xmath42 is a cofree pre - lie coalgebra , for any @xmath41 .",
    "this explains why morphisms such as the above must always exist ( although the one we construct is particularly natural ) .",
    "it turns out that one can understand the @xmath70 homomorphisms ( and their injectivity ) through a factorization as follows : @xmath206 where @xmath207 and @xmath208 , called _ chord algebras _ , are spanned by chord diagrams on necklaces or paths , and the first maps in , take a necklace ( resp .",
    ", path ) to the sum of all possible chord diagrams on that necklace or path .",
    "we will equip @xmath208 and @xmath207 with the appropriate pre - lie and lie coalgebra structures , and @xmath209 with the appropriate hopf algebra structure , so that one obtains the following sequence of hopf algebra homomorphisms : @xmath210 we also briefly explain how this construction can also be done in the context of @xcite , yielding the space of geometric chord diagrams .",
    "a necklace chord diagram is a necklace ( = cyclic monomial ) @xmath198",
    "\\in l$ ] , for @xmath211 , together with a cut @xmath46 of @xmath198 $ ] .",
    "denote the necklace chord diagram by @xmath212,h)$ ] .",
    "a path chord diagram is a path @xmath107 for @xmath211 , together with a cut @xmath46 of @xmath131 .",
    "the path chord diagram is denoted by @xmath213 .",
    "the chord algebra @xmath208 is defined(as a linear space ) to be the free @xmath0-module with basis the path chord diagrams .",
    "similarly , @xmath207 is defined to have basis the necklace chord diagrams .",
    "[ chord ] define @xmath214 as follows .",
    "let @xmath135 be a path , for @xmath215 , and let @xmath130 be a cut .",
    "for any @xmath216 , let @xmath217 , and let @xmath218 be the two subcuts obtained by removing @xmath219 from @xmath46 : @xmath220 is the collection of @xmath221 on the inside of @xmath222 ( in particular @xmath223 ) , and @xmath224 is the collection on the outside of @xmath222 .",
    "explicitly , @xmath225 iff @xmath226 ( equivalently , @xmath227 ) .",
    "finally , we then let @xmath228 be two chord diagrams thus obtained : @xmath229 and @xmath230 .",
    "then , we define @xmath231    [ chrtd ] define @xmath232 as follows .",
    "let @xmath233 $ ] be a necklace , for @xmath215 , and let @xmath46 be a cut of @xmath72 , which corresponds to the cut @xmath234 of @xmath131 .",
    "for any @xmath216 , let @xmath228 be the two chord diagrams obtained by removing @xmath235 from @xmath46 , defined as in definition [ chord ] , except adding braces @xmath236 $ ] around the obtained paths .",
    "then , define @xmath237    define the coproduct @xmath67 on @xmath209 as follows : for any chord diagram @xmath238 , with @xmath239 , and any simple cut @xmath240 with @xmath241 , let @xmath242 be the collection of chord diagrams obtained by cutting out the chords in @xmath240 : each time we cut out a chord from @xmath240 , we divide a cut into two separate cuts , as in definition [ chord ] , and divide the corresponding path into two paths .",
    "then , @xmath121 is the obtained chord diagram which contains the basepoint ( @xmath122 and @xmath123 ) , and @xmath243 is the other chord diagram which is cut from the chord @xmath244 .",
    "then , we define @xmath245    finally , we have the following theorem , which is a strengthening of theorem [ homt1 ] .",
    "[ homt2 ] the algebra @xmath246 is a pre - lie coalgebra and @xmath247 is a lie coalgebra , and @xmath209 is a hopf algebra given by , ( with counit given by @xmath248 for any chord diagram @xmath72 ) .",
    "then , the diagrams , , and are homomorphisms , where @xmath249 takes a path or necklace to the sum over all chord diagrams over that path or necklace , and @xmath250 takes a chord diagram with cut @xmath46 to @xmath251 times its dual tree , assigning data as in section [ homs ] .    this theorem will be proved in section [ homt12ps ] .",
    "we briefly indicate the geometric counterpart of theorem [ homt2 ] ( since algebras of chord diagrams were not discussed in @xcite ) .",
    "we consider geometric chord diagrams with a single loop : this means ( @xcite ) a smooth map of a loop with chords into a surface , such that the map is constant on the chords .",
    "then , we let @xmath208 be the algebra which , as a free @xmath0-module , has basis the isotopy classes of geometric chord diagrams with a single loop with basepoint ( the isotopies must be through such geometric chord diagrams ) , and @xmath207 is , as a @xmath0-module , the space of isotopy classes of geometric chord diagrams with a single loop without basepoint .",
    "one may then form the sequences of homomorphisms , , and : the map @xmath252 takes an isotopy class of loops to the sum of all isotopy classes of chord diagrams whose underlying isotopy class of loops is the original class , and the map @xmath250 takes a geometric chord diagram to the dual tree , which then has all the structure required of @xmath253 .",
    "we note that the hopf algebras considered here all have the following special form : as an algebra , they are @xmath254 for some vector space @xmath151 , and the comultiplication @xmath67 and counit @xmath255 have the form @xmath256 we claim that such hopf algebras are in one - to - one correspondence with pre - lie comultiplications on the vector space @xmath151 , as follows ( this was essentially observed in @xcite in the dual setting , but not quite formulated the same way ) :    [ preleqhop ] let @xmath151 be any @xmath257-graded vector space .    1 .   for any hopf algebra on @xmath254 satisfying ,",
    "the map @xmath258 given by the composition of @xmath66 with the projection to @xmath259 , is a pre - lie comultiplication .",
    "conversely , given any pre - lie comultiplication @xmath258 which preserves the total grading ( induced by the grading on @xmath151 ) , there exists a unique graded comultiplication on @xmath254 of the form , which yields @xmath21 as in part ( i ) .",
    "moreover , we describe an inductive procedure for computing the @xmath67 guaranteed in part ( ii ) .    in all parts ,",
    "let subscripts @xmath260 denote the standard ( not total ) grading on @xmath254 , so that @xmath261 , extended to @xmath262 and @xmath263 by @xmath264    \\(i ) let us formally write @xmath265 where @xmath266 for @xmath267 and @xmath268 for any @xmath269 ( and @xmath270 ) ; for any @xmath269 , only finitely many of the @xmath271 can be nonzero . also , let @xmath272 ( thus , @xmath273 for any @xmath274 ) .",
    "then , modulo @xmath275 , one has @xmath276 this equation says that , setting @xmath277 , @xmath21 is pre - lie ( since @xmath278 is symmetric in the first and second components ) .",
    "( ii , iii ) suppose we are given @xmath279 for @xmath267 such that @xmath280 , extended multiplicatively to @xmath254 , is coassociative modulo @xmath281 .",
    "we would like to find @xmath282 such that @xmath283 is coassociative modulo @xmath284 .",
    "this is equivalent to @xmath285 in particular , @xmath282 exists iff the first two components live in @xmath286 , and in this case @xmath282 is unique , and may be computed algorithmically as indicated .",
    "existence follows from the dual version of the construction of @xcite .",
    "we note that we used the grading above only to guarantee finiteness of the sum @xmath287 on any vector @xmath269 : without assuming gradedness , the above proposition still holds if we work in the completed tensor product @xmath288 with respect to the grading @xmath289 .",
    "alternatively , one could assume that iterated applications of @xmath21 on any @xmath269 eventually yield zero .    as a result of the proposition , proving the main results of this paper ( or @xcite ) on the pre - lie level",
    "is in fact equivalent to proving them on the hopf algebra level , as one can translate between the two using the above proposition .",
    "this explains why one must arrive at ( resp . , the formulas from @xcite ,  8.3 ) for coproduct given the choice of pre - lie comultiplication .",
    "we see that the fact that the pre - lie structure fails to exist in the oriented case is the same as the fact that the renormalization hopf algebra does not exist without using rooted trees",
    ".      in @xcite ,  8.5 , a `` noncommutative '' version of the hopf algebras was defined , using the tensor algebras over @xmath151 instead of the symmetric algebras . in this version",
    ", @xmath290 is the usual `` shuffle '' coproduct on @xmath291 generated multiplicatively by @xmath268 for @xmath269 . in this case ,",
    "proposition [ preleqhop ] is no longer true ( for instance , @xmath292 for any @xmath293 , so that one would have a choice of @xmath294 ) .",
    "however , in the case of paths , as in turaev s case of loops , one has a canonical choice of @xmath67 .",
    "namely , in @xmath295 , we can define the coproduct by , except replacing @xmath296 by an ordered tensor product , choosing the left - to - right order of components induced by the original ordering on the path . as in @xcite , it is easy to check that this gives a hopf algebra , and that a suitable version of the homomorphism @xmath70 maps this hopf algebra to foissy s noncommutative algebra of labeled rooted trees @xcite ( the rooted trees must have labeled edges , or equivalently , labeled vertices , in order to capture the left - to - right order that we obtain in paths )",
    ". so more `` noncommutative '' or `` ordering '' information is included in paths or loops than in rooted trees without labels .",
    "on the other hand , one can obtain a generalization of proposition [ preleqhop ] if one imposes the additional condition that @xmath297 . in this case",
    ", there is not really anything new to check since coassociativity is proved in @xmath298 and extends to all of @xmath291 using the bialgebra condition ( since we define @xmath299 )",
    ". this might be the dual version of the noncommutative structure hinted at in remark 2.14 of @xcite",
    ". however , this is not the way to construct the noncommutative hopf algebras described above , since it uses extra structure ( the ordering in paths , or in the case of trees , the labeling on edges and/or vertices ) , and does not map @xmath151 to @xmath300 .",
    "for any path @xmath166 , any cut @xmath46 of @xmath72 , and any vertex @xmath301 of @xmath168 ( so @xmath302 and @xmath303 ) , define the * order * @xmath304 to be the minimum number of chords ( the edges connecting @xmath305 and @xmath306 if @xmath307 ) of the chord diagram @xmath167 that must be crossed by any path from @xmath301 to the root which intersects the chord diagram @xmath167 only transversely .",
    "if @xmath301 is the root , we define @xmath308 .        for two disjoint cuts @xmath310 of a path @xmath135",
    ", we say that @xmath311 if , from all points , there is a path , intersecting @xmath312 and @xmath313 transversally , to the root that does not intersect chords from @xmath312 after those from @xmath313 .",
    "in other words , the chords from @xmath313 are not separated from the root by any chords from @xmath312 .",
    "we now may give the formula @xmath317 where @xmath318 is the product of all paths along @xmath168 cut from the chord diagram for @xmath46 which lie between a chord from @xmath312 and a chord from @xmath313 .",
    "this implies the result .",
    "first , we show that @xmath252 is a homomorphism of pre - lie or lie coalgebras . for this",
    ", we note that a cut @xmath46 together with a specified chord @xmath320 is the same information as a specified chord @xmath321 together with two cuts @xmath310 , one on each side of @xmath321 , under the correspondence @xmath322 .",
    "the datum @xmath323 corresponds to a summand in the expression for @xmath324 of a given ( cyclic ) path , while the datum @xmath325 corresponds to a summand in the expression for @xmath326 .",
    "it is then easy to see that the two summands are identical .",
    "next , we show that @xmath327 extends to a homomorphism of hopf algebras .",
    "we only need to check that @xmath327 sends the coproduct on @xmath138 to the coproduct on @xmath209 . for this , we extend the observation of the previous paragraph : the datum @xmath328 of a cut @xmath46 and a simple subcut @xmath312 ( corresponding to a summand of @xmath329 ) yields the same information as the datum @xmath330 , where @xmath312 is a simple cut , and @xmath331 is a collection of cuts on the connected components @xmath332 which result from cutting @xmath72 along @xmath312 ( corresponding to a summand of @xmath333 ) .",
    "this correspondence is given by @xmath334 .",
    "corresponding data give identical summands of @xmath329 and @xmath335 , given by @xmath336 where the subscripts of @xmath337 indicate which chord diagrams to attach to the corresponding paths in the above monomial of paths .",
    "next , we show that @xmath250 is a homomorphism .",
    "first we tackle the pre - lie , lie cases . for any chord diagram @xmath167 , we need to show that @xmath338 .",
    "first , note that a choice of chord of a chord diagram is the same as a choice of edge of the dual tree .",
    "it is easy to see that the same tree - structure is obtained by either cutting along this chord and then applying @xmath250 ( dualizing ) , or applying @xmath250 first and then removing the corresponding edge .",
    "it remains to show that , for any chord @xmath320 , we have @xmath339 which follows from the definition ( and was first noticed in @xcite ) .    in the hopf",
    "algebra setting , showing @xmath340 is a homomorphism amounts to showing , for any chord diagram @xmath167 , that @xmath341 .",
    "first , we note that a simple subcut of a chord diagram is the same as a simple cut of the dual tree . as before",
    ", it remains to show that the signs work out correctly , that is , if @xmath312 is a simple subcut of @xmath46 , @xmath342 this identity , noticed in @xcite , is obvious from the definition .    finally , we show that @xmath319 is injective .",
    "this follows because , for any ( cyclic ) path @xmath72 , the trivial chord diagram yields a summand of @xmath343 which is the trivial tree ( a point ) whose rooted or oriented tree - structure at that point includes @xmath72 itself .",
    "all other summands are trees with @xmath344 edges .",
    "so if we compose @xmath319 with the projection to the space spanned by the trivial tree with arbitrary structure , we easily obtain the ( cyclic ) path @xmath72 .    note",
    "that , if the tree - structure is forgotten and we take the map to the @xcite algebra of trees itself , the composition is * not * injective ; e.g. , any path without any pair of edges of the form @xmath345 for @xmath97 must map to the trivial tree ."
  ],
  "abstract_text": [
    "<S> we give a natural monomorphism from the necklace lie coalgebra , defined for any quiver , to connes and kreimer s lie coalgebra of trees , and extend this to a map from a certain quiver - theoretic hopf algebra to connes and kreimer </S>",
    "<S> s renormalization hopf algebra , as well as to pre - lie versions . </S>",
    "<S> these results are direct analogues of turaev s results in 2004 , by replacing algebras of loops on surfaces with algebras of paths on quivers . </S>",
    "<S> we also factor the morphism through an algebra of chord diagrams and explain the geometric version . </S>",
    "<S> we then explain how all of the hopf algebras are uniquely determined by the pre - lie structures , and discuss noncommutative versions of the hopf algebras . </S>"
  ]
}
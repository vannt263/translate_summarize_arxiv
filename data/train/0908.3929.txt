{
  "article_text": [
    "vehicle motion planning in dynamic environments arises in many important autonomous vehicle applications . in areas such as environmental monitoring , surveillance and perimeter defence ,",
    "the vehicle must re - plan its motion as it acquires information on its surroundings .",
    "in addition , remote operators may add tasks to , or remove tasks from , the vehicle s mission in real - time . in this paper",
    "we consider a problem in which a vehicle must defend a boundary in a dynamic environment with approaching targets .",
    "static vehicle routing problems consider planning a path through a fixed number of locations .",
    "examples include the traveling salesperson problem ( tsp )  @xcite , the deadline - tsp and vehicle routing with time - windows  @xcite .",
    "recently , researchers have looked at the tsp with moving objects . in",
    "@xcite the authors consider objects moving on straight lines and focus on the case when the objects are slower than the vehicle and when the vehicle moves parallel to the @xmath0- or @xmath1-axis .",
    "the same problem is studied in  @xcite , but with arbitrary vehicle motion , and it is called the translational tsp . the authors of  @xcite propose a polynomial - time approximation scheme to catch all objects in minimum time .",
    "other variations of the problem are studied in  @xcite and  @xcite .",
    "dynamic vehicle routing ( dvr ) is a class of problems in which vehicles must plan paths through service demand locations that arrive sequentially over time .",
    "an early dvr problem was the dynamic traveling repairperson problem  @xcite , where each demand assumes a fixed location upon arrival , and the vehicle must spend some amount of on - site service time at each location .",
    "this problem has also been studied from the online algorithm perspective  @xcite .",
    "other recent dvr problems include dvr with demands that disappear if left unserviced for a certain amount of time  @xcite , and demands with different priority levels  @xcite . in our earlier work",
    "@xcite , we introduced a dvr problem in which demands arrive on a line segment and move in a perpendicular direction at a fixed speed slower than the vehicle .",
    "we derived conditions on the demand arrival rate and demand speed for the existence of a vehicle routing policy which can serve all demands , and a proposed a policy based on the translational minimum hamiltonian path .",
    "[ [ contributions ] ] contributions + + + + + + + + + + + + +    in this paper we introduce the following problem ( see fig .  [",
    "fig : problem_setup ] ) : targets ( or demands ) arrive according to a stochastic process on a line segment of length @xmath2 . upon arrival",
    "the demands move with fixed speed @xmath3 towards a deadline which is at a distance @xmath4 from the generator .",
    "a unit speed service vehicle seeks to capture the demands before they reach the deadline ( i.e. , within @xmath5 time units of being generated ) .",
    "the performance metric is the fraction of demands that are captured before reaching the deadline .    .",
    "the service vehicle is a square . ]",
    "we assume that the arrival process is uniform along the line segment and temporally poisson with rate @xmath6 . in the case when the demands are faster than the service vehicle ( i.e. , @xmath7 ) we introduce the novel longest path policy , which is based on computing longest paths in a directed acyclic _",
    "reachability graph_. when @xmath8 , we derive a lower bound on the capture fraction as a function of the system parameters .",
    "we show that the longest path policy is the optimal policy when @xmath4 is much greater than @xmath9 . in the case",
    "when the demands are slower than the service vehicle ( i.e , @xmath10 ) , we propose a policy based on the translational minimum hamiltonian path called the tmhp - fraction policy . in the limit of low demand speed and high arrival rate , the capture fraction of this policy",
    "is within a small constant factor of the optimal .",
    "we present numerical simulations which verify our results , and show that the longest path policy performs very near the optimal even when @xmath11 .",
    "the paper is organized as follows . in section  [ sec : prob_form ] we formulate the problem and in section  [ sec : prelims ] we review some background material . in section  [ sec : fast_demand ] we consider the case of @xmath7 and introduce the longest path policy . in section",
    "[ sec : slow_demand ] we study @xmath12 and introduce the tmhp - fraction policy .",
    "finally , in section  [ sec : simu ] we present simulations results .",
    "consider an environment @xmath13\\times[0,l ] \\subset { { \\mathbb{r}}}^2 $ ] as shown in figure  [ fig : problem_setup ] .",
    "the line segment @xmath14\\times \\{0\\}\\subset { \\mathcal{e}}$ ] is termed the _ generator _ , and the segment @xmath14\\times \\{l\\}\\subset { \\mathcal{e}}$ ] is termed the _",
    "deadline_. the environment contains a single vehicle with position @xmath15^t \\in { \\mathcal{e}}$ ] , modeled as a first - order integrator with unit speed .",
    "demands ( or targets ) arrive in the environment according to a temporal poisson process with rate @xmath16 . upon arrival ,",
    "each demand assumes a uniformly distributed location on the generator , and then moves with constant speed @xmath17 in the positive @xmath1-direction towards the deadline .",
    "if the vehicle intercepts a demand before the demand reaches the deadline , then the demand is captured . on the other hand , if the demand reaches the deadline before being intercepted by the vehicle , then the demand escapes .",
    "thus , to capture a demand , it must be intercepted within @xmath5 time units of being generated .",
    "we let @xmath18 denote the set of all outstanding demand locations at time @xmath19 .",
    "if the @xmath20th demand to arrive is captured , then it is removed from @xmath21 and placed in the set @xmath22 with cardinality @xmath23 .",
    "if the @xmath20th demand escapes , then it is removed from @xmath21 and placed in @xmath24 with cardinality @xmath25 .    [",
    "[ causal - policy ] ] causal policy + + + + + + + + + + + + +    a causal feedback control policy for the vehicle is a map @xmath26 , where @xmath27 is the set of finite subsets of @xmath28 , assigning a commanded velocity to the service vehicle as a function of the current state of the system : @xmath29 .    [",
    "[ non - causal - policy ] ] non - causal policy + + + + + + + + + + + + + + + + +    in a non - causal feedback control policy the commanded velocity of the service vehicle is a function of the current and future state of the system .",
    "such policies are not physically realizable , but they will prove useful in the upcoming analysis .    formally , let the generation of demands commence at time @xmath30 , and consider the sequence of demands @xmath31 arriving at increasing times @xmath32 , with @xmath0-coordinates @xmath33 .",
    "we can also model the arrival process by assuming that at time @xmath30 , all demands are located in @xmath14\\times(-\\infty,0]$ ] , move in the @xmath1-direction at speed @xmath3 for all @xmath34 , and are revealed to the service vehicle when they cross the generator .",
    "thus , at time @xmath30 , the position of the @xmath20th demand is @xmath35 .",
    "we can define a set containing the position of all demands in the region @xmath14\\times(-\\infty,0]$ ] at time @xmath19 as @xmath36 .",
    "then , a non - causal policy is one for which @xmath37 .",
    "[ [ problem - statement ] ] problem statement + + + + + + + + + + + + + + + + +    the goal in this paper is to find causal policies @xmath38 that maximize the fraction of demands that are captured @xmath39 , termed the _ capture fraction _",
    ", where @xmath40$}}.\\ ] ]",
    "we now review the longest path problem , the distribution of demands in an unserviced region , and optimal tours / paths through a set of points .      a directed graph @xmath41 consists of a set of vertices @xmath42 and a set of directed edges @xmath43 .",
    "an edge @xmath44 is directed from vertex @xmath3 to vertex @xmath45 .",
    "a _ path _ in @xmath46 is a sequence of vertices such that from each vertex in the sequence , there is an edge in @xmath47 directed to the next vertex in the sequence .",
    "a path is _ simple _ if it contains no repeated vertices .",
    "a _ cycle _ is a path in which the first and last vertex in the sequence are the same .",
    "a graph @xmath46 is _ acyclic _ if it contains no cycles .",
    "the longest path problem is to find a simple path of maximum length ( i.e. , a path that visits a maximum number of vertices ) . in general",
    "this problem is np - hard as its solution would imply a solution to the well known hamiltonian path problem  @xcite .",
    "however , if the graph is a dag , then the longest path problem has an efficient dynamic programming solution  @xcite with complexity @xmath48 , that relies on topologically sorting  @xcite the vertices .",
    "demands arrive uniformly on the generator , according to a poisson process with rate @xmath6 .",
    "the following lemma describes the distribution of demands in an unserviced region . for a finite set @xmath21 , we let @xmath49 denote its cardinality .    [",
    "lem : poisson ]    suppose the generation of demands commences at time @xmath50 and no demands are serviced in the interval @xmath51 $ ] .",
    "let @xmath21 denote the set of all demands in @xmath14\\times [ 0,vt]$ ] at time @xmath19 .",
    "then , given a measurable compact region @xmath52 of area @xmath53 contained in @xmath14\\times [ 0,vt]$ ] , @xmath54 = \\frac{\\mathrm{e}^{-\\bar\\lambda        a}(\\bar\\lambda a)^n}{n ! } , \\quad \\text{where } \\bar \\lambda : =    \\lambda/(v w).\\ ] ]    the previous lemma tells us that number of demands @xmath55 in an serviced region of area @xmath53 is a poisson distributed with parameter @xmath56 .",
    "in addition , conditioned on @xmath55 , the demands are independently and uniformly distributed .",
    "given a set @xmath21 of @xmath57 points in @xmath58 , the euclidean traveling salesperson problem ( etsp ) is to find the minimum - length tour ( i.e. , cycle ) of @xmath21 .",
    "letting @xmath59 denote the minimum length of a tour of @xmath21 , we can state the following result .",
    "[ thm : etsp_length ] consider a set @xmath21 of @xmath57 points independently and uniformly distributed in a compact set @xmath28 of area @xmath60 .",
    "then , there exists a constant @xmath61 such that , with probability one , @xmath62    the constant @xmath61 has been estimated numerically as @xmath63 ,  @xcite .",
    "the euclidean minimum hamiltonian path ( emhp ) problem is to compute the shortest path through a set of points . in this paper",
    "we consider a constrained emhp problem : given a start point @xmath64 , a set of @xmath57 points @xmath21 , and a finish point @xmath65 , all in @xmath58 , determine the shortest path which starts at @xmath64 , visits each point in @xmath21 exactly once , and terminates at @xmath65 .",
    "we let @xmath66 denote the length of the shortest path .",
    "[ cor : emhp_length ] consider a set @xmath21 of @xmath57 points independently and uniformly distributed in a compact set @xmath28 of area @xmath60 , and any two points @xmath67 .",
    "then with probability one , @xmath68 where @xmath61 is defined in theorem  [ thm : etsp_length ] .    the above corollary states that the length of the emhp and the etsp tour are asymptotically equal , and it follows directly from the fact that as @xmath69 , the diameter of @xmath28 is negligible when compared to the length of the tour / path .",
    "the tmhp problem is posed as follows .",
    "given initial coordinates ; @xmath64 of a start point , @xmath70 of a set of points , and @xmath65 of a finish point , all moving with speed @xmath710,1[$ ] in the positive @xmath1-direction , determine a minimum length path that starts at time zero from point @xmath64 , visits all points in the set @xmath21 and ends at the finish point .",
    "the following gives a solution  @xcite for the tmhp problem .",
    "+ ( i ) define the map @xmath72 by @xmath73 ( ii ) compute the emhp that starts at @xmath74 , passes through @xmath75 and ends at @xmath76 .",
    "+ ( iii ) to reach a translating point with initial position @xmath77 from the initial position @xmath78 , move towards the point @xmath79 , where @xmath80 the length @xmath81 of the path is as follows .",
    "[ lem : ttsp ] let the initial coordinates @xmath82 and @xmath83 , and the speed of the points @xmath840,1[}$ ] .",
    "then , @xmath85",
    "here we develop a policy for the case when the demand speed @xmath86 . in this policy ,",
    "the service vehicle remains on the deadline and services demands as per the longest path in a directed acyclic reachability graph . in this section",
    "we begin by introducing the reachability graph , and then proceed to state and analyze the longest path policy .",
    "consider a demand generated at time @xmath87 at position @xmath88 .",
    "the demand moves in the positive @xmath1-direction at speed @xmath7 , and thus @xmath89 for each @xmath90 $ ] , where @xmath91 is either the time of escape ( i.e. , @xmath92 ) , or it is the time of capture .",
    "now , given the service vehicle location @xmath93 , a demand with position @xmath94 is reachable if and only if @xmath95 that is , the service vehicle must be at a height of at least @xmath96 above the demand in order to capture it .",
    "the reachable set from a position @xmath97 is @xmath98 if the service vehicle is located at @xmath78 , then a demand can be captured if and only if it lies in the set @xmath99 .",
    "an example of the reachable set is shown in figure  [ fig : reachability ] .",
    "+      next , given a demand in the reachable set , the following motion gives a method of capture .",
    "consider a vehicle position @xmath100 and a demand position @xmath101 at time @xmath102 . in intercept motion",
    ", the service vehicle captures the demand by first moving horizontally at unit speed to the position @xmath103 , and then waiting at the location for the demands arrival .",
    "[ lem : opt : intercept ] consider @xmath104 , and let the service vehicle be initially positioned on the deadline .",
    "then , there is an optimal policy in which the service vehicle uses only intercept motion .",
    "let the service vehicle be positioned at @xmath105 , and consider a demand at @xmath106 . from equation  ( [ eq : capture_cond ] ) , we have @xmath107 . if @xmath108 , then deadline motion is the only way in which the demand can be captured .",
    "thus , assume that @xmath109 , and consider two cases ; case  1 in which intercept motion is used , and case  2 in which the demand is captured at a location @xmath110 , where @xmath111 .",
    "notice that the position of each outstanding demand relative to the service vehicle position at capture is the same in case  1 as in case  2 .",
    "thus , the reachable set in case  2 is a strict subset of reachable set in case  1 and the vehicle gains no advantage by moving off of the deadline .",
    "next , consider the set of demands in @xmath112 , and suppose the vehicle chooses to capture demand @xmath20 , with position @xmath113 . upon capture at time @xmath91 , the service vehicle can recompute the reachable set , and select a demand that lies within .",
    "since all demands translate together , every demand that was reachable from @xmath114 , is reachable from @xmath115 .",
    "thus , the service vehicle can `` look ahead '' and compute the demands that will be reachable from each captured demand position .",
    "this idea motivates the concept of a reachability graph .    for @xmath104 ,",
    "the reachability graph of a set of points @xmath116 , is a directed acyclic graph with vertex set @xmath117 , and edge set @xmath47 , where for @xmath118 , the edge @xmath119 is in @xmath47 if and only if @xmath120 and @xmath121 .",
    "given a set @xmath21 of @xmath57 outstanding demands , and a vehicle position @xmath78 , we can compute the corresponding reachability graph ( see fig .",
    "[ fig : reachability ] ) in @xmath122 computation time .",
    "in addition , by section  [ sec : dag_longest ] we can compute the longest path in a reachability graph in @xmath122 computation time .      to derive an upper bound for @xmath7",
    ", we begin by considering a non - causal policy . in the online algorithms literature , such a policy",
    "would be referred to as an _ offline algorithm _",
    "figure  [ fig : noncausal_path ] shows an example of a path generated by the non - causal longest path policy .",
    "note that the service vehicle will intercept each demand on the deadline , and thus the path depicts which demands will be captured , and in what order .    compute the reachability graph of the vehicle position and all demands in @xmath123 .",
    "compute a longest path in this graph , starting at the service vehicle location .",
    "capture demands in the order they appear on the path , intercepting each demand on the deadline .",
    "if @xmath104 , then the non - causal longest path policy is an optimal non - causal policy .",
    "moreover , if @xmath104 , then for every causal policy @xmath38 , @xmath124    the reachability graph @xmath123 contains every possible path that the service vehicle can follow .",
    "when @xmath104 the graph is a directed acyclic graph and thus the longest path ( i.e. , the path which visits the most vertices in the graph ) is well defined .",
    "the vehicle uses intercept motion , and thus by lemma  [ lem : opt : intercept ] the nclp policy is an optimal non - causal policy , and its capture fraction upper bounds every causal policy .",
    "we now introduce the longest path policy . in the lp policy ,",
    "the fraction @xmath125 is a design parameter .",
    "the lower @xmath125 is chosen , the better the performance of the policy , but this comes at the expense of increased computation .",
    "compute the reachability graph of the vehicle position and all demands in @xmath126 .",
    "compute a longest path in this graph , starting at the service vehicle location . capture demands in the order they appear on the path , intercepting each demand on the deadline .",
    "once a fraction @xmath1270,1]}$ ] of the demands on the path have been serviced , recompute the reachability graph of all outstanding demands and return to step 2 .    in the following theorem",
    ", we relate the longest path policy to its non - causal relative .",
    "such a bound is referred to as a _ competitive ratio _ in the online algorithms literature  @xcite .",
    "[ thm : lp_to_nclp ] if @xmath104 , then @xmath128 and thus the lp policy is optimal as @xmath129 .",
    "suppose that the generation of demands begins at @xmath30 and let us consider two scenarios ; ( a ) the vehicle uses the longest path policy , and ( b ) the vehicle uses the non - causal longest path policy .",
    "then , at any instant in time @xmath130 we can compare the number of demands captured in scenario ( a ) to the number captured in scenario ( b ) ( refer to fig .  [ fig : scenario_ab ] ) .    .",
    "path ( a ) visits five demands and thus @xmath131 .",
    "path ( b ) visits four demands , yielding @xmath132 .",
    "the demand @xmath133 is the highest on path ( b ) that can be captured from @xmath134 .",
    "thus , @xmath135 , and @xmath136 . ]    let us consider a time instant @xmath137 where in scenario ( a ) , the vehicle is recomputing the longest path through all outstanding demands @xmath138 .",
    "let us denote by @xmath134 and @xmath139 , the vehicle position in scenario ( a ) and scenario ( b ) , respectively , at time @xmath137 .",
    "in scenario ( b ) , let the path that the vehicle will take through @xmath138 be given by @xmath140 .",
    "the demand @xmath141 is reachable from @xmath139 , but it may not be reachable from @xmath134 .",
    "however , a lower bound on the length of the longest path in scenario ( a ) is : @xmath142 , where @xmath143 , @xmath144 , is the highest demand that can be captured from @xmath134 , see fig .",
    "[ fig : scenario_ab ] .",
    "thus , the length of the longest path in scenario ( a ) , @xmath145 , is at least @xmath146 where @xmath147 is the length of the path in scenario ( b ) .",
    "now , since the deadline has width @xmath2 , the vehicle in scenario ( a ) can capture any demand @xmath77 with @xmath148 .",
    "thus , the demands @xmath149 must all have @xmath1-coordinates in @xmath150l - vw , l]}$ ] . let the total number of outstanding demands at time @xmath137 be @xmath151 .",
    "then , conditioned on @xmath151 , by lemma  [ lem : poisson ] , the expected number of outstanding demands contained in @xmath14\\times { ] l - vw , l]}$ ] is @xmath152 .",
    "hence , @xmath153 $ } } = { { n}_{\\textup{tot } } } \\frac{vw}{l }    { { { \\mathbb{f}}_{\\textup{cap}}}}(\\mathrm{nclp}).\\ ] ] similarly , for the length of the path through @xmath138 in scenario ( b ) , we have @xmath154 $ } } = { { n}_{\\textup{tot } } }      { { { \\mathbb{f}}_{\\textup{cap}}}}(\\mathrm{nclp}).\\ ] ] combining equations  ( [ eq : n_expect ] ) and  ( [ eq : m_expect ] ) with equation  ( [ eq : length_sc_a ] ) we obtain @xmath155 $ } } & \\geq { { n}_{\\textup{tot } } }      \\left(1-\\frac{v w}{l}\\right ) { { { \\mathbb{f}}_{\\textup{cap}}}}(\\mathrm{nclp } ) , \\\\      { \\mbox{$\\mathbb{e}\\left[\\frac{{\\mathcal{l}}_a}{{{n}_{\\textup{tot}}}}|{{n}_{\\textup{tot}}}\\right]$ } } & \\geq      \\left(1-\\frac{v w}{l}\\right ) { { { \\mathbb{f}}_{\\textup{cap}}}}(\\mathrm{nclp } ) .    \\end{aligned}\\ ] ] but @xmath156 is the fraction of outstanding demands in @xmath138 that will be captured in scenario ( a ) , and it does not depend on the value of @xmath151 . by the law of total expectation",
    "@xmath157 $ } } =    { \\mbox{$\\mathbb{e}\\left[{\\mbox{$\\mathbb{e}\\left[\\frac{{\\mathcal{l}}_a}{{{n}_{\\textup{tot}}}}|{{n}_{\\textup{tot}}}\\right]$}}\\right]$ } }    \\geq \\left(1-\\frac{v w}{l}\\right )    { { { \\mathbb{f}}_{\\textup{cap}}}}(\\mathrm{nclp}).\\ ] ] each time the longest path is recomputed , the path in scenario ( a ) will capture at least this fraction of demands .",
    "thus , we have @xmath158$}}$ ] and have proved the result .",
    "the bound in theorem  [ thm : lp_to_nclp ] is conservative .",
    "this is primarily due to bounding the expected distance between the causal and non - causal paths by @xmath2 .",
    "the distance between two independently and uniformly distributed points in @xmath14 $ ] , is @xmath159 .",
    "the distance is even less if the points are positively correlated ( as is likely the case for the distance between paths ) .",
    "thus , it seems that it may be possible to increase the bound to @xmath160 where @xmath161 .",
    "the previous theorem establishes the performance of the longest path policy relative to a non - causal policy",
    ". however , the lp policy is difficult analyze directly .",
    "this is due to the fact that the position of the vehicle at time @xmath19 depends on the positions of all outstanding demands in @xmath162 .",
    "thus , our approach is to lower bound the capture fraction of the lp policy with a greedy policy :    compute the reachability set @xmath163 .",
    "capture the demand in @xmath163 with the highest @xmath1-coordinate using intercept motion .",
    "repeat .    given a set of outstanding demands @xmath162 at time @xmath19 ,",
    "the greedy path policy generates a suboptimal longest path through @xmath162 .",
    "in addition , the vehicle position is independent of all outstanding demands , except the demand currently being captured .",
    "thus , the capture fraction of the greedy path policy provides a lower bound for the capture fraction of the longest path policy .",
    "we are now able to establish the following result .",
    "[ thm : lp_lower_bd ] if @xmath164 , then for the longest path policy @xmath165 where @xmath166 and @xmath167 $ ] is the error function .",
    "we begin by looking at the expression for the capture fraction .",
    "notice that if @xmath168 for some @xmath34 , then @xmath169 $ } }    & = \\limsup_{t\\to+\\infty }    { \\mbox{$\\mathbb{e}\\left[\\frac{1}{1+\\frac{n_{{\\textup{esc}}}(t)}{n_{{\\textup{capt}}}(t)}}\\right]$ } } \\\\    & \\geq \\left(1+\\limsup_{t\\to+\\infty }      { \\mbox{$\\mathbb{e}\\left[\\frac{n_{{\\textup{esc}}}(t)}{n_{{\\textup{capt}}}(t)}\\right]$}}\\right)^{-1 } , \\end{aligned}\\ ] ] where the last step comes from an application of jensen s inequality  @xcite .",
    "thus , we can determine a lower bound on the capture fraction by studying the number of demands that escape per captured demand .",
    "let us study the time instant @xmath19 at which the service vehicle captures its @xmath20th demand , and determine an upper bound on the number of demands that escape before the service vehicle captures its @xmath170th demand . since we seek a lower bound on the capture fraction of the lp policy , we may consider the path generated by the greedy path policy .",
    "in addition , we consider the worst - case service vehicle position ; namely , the position @xmath171 ( or equivalently @xmath172 ) .    from the position @xmath171 , the reachable set is @xmath173 let @xmath174 denote the reachable set intersected with @xmath14\\times[l - y , l]$ ] , where @xmath175 $ ] , and let @xmath176 denote its area .",
    "then , @xmath177 an illustration of the set @xmath174 is shown in figure  [ fig : lower_bound_prf ] .    .",
    "the service vehicle is located at @xmath171 .",
    "all demands in the region @xmath178 escape while capturing the demand with the highest @xmath1-coordinate . ]",
    "let @xmath179 be the @xmath1-distance to the reachable demand with the highest @xmath1-coordinate .",
    "that is , @xmath180 where @xmath162 is the set of outstanding demands at time @xmath19 . by lemma  [ lem : poisson ] , the probability that a subset @xmath181 with area @xmath182 contains zero demands",
    "is given by @xmath183 = { \\mathrm{e}}^{-\\lambda |{\\mathcal{b}}|/(vw)},\\ ] ] where @xmath184 denotes the cardinality of the finite set @xmath185 .",
    "thus , @xmath186 = { \\mathbb{p}}[|r_y\\cap{\\mathcal{q}}(t)| = 0 ] = { \\mathrm{e}}^{-\\lambda |r_y|/(vw)}.\\ ] ] the probability density function of @xmath179 for @xmath187 is @xmath188 ) & = \\frac{d}{dy}{\\mathrm{e}}^{-\\lambda y^2/(2v^2w ) } \\\\ & = \\frac{\\lambda}{v^2 w}y { \\mathrm{e}}^{-\\lambda y^2/(2v^2w)}.\\end{aligned}\\ ] ]    now , given @xmath179 , all demands residing in the region @xmath189\\times[l - y_d , l ] ) \\setminus r_{y_d}$ ] will escape ( see fig .  [",
    "fig : lower_bound_prf ] ) .",
    "the area of @xmath178 is @xmath190    from section  [ sec : poisson_dist ] , the expected number of outstanding demands in an unserviced region of area @xmath53 is @xmath56 .",
    "thus , given that the vehicle is located at @xmath171 , the expected number of demands that escape while the service vehicle is capturing its @xmath170th demand is given by @xmath191 $ } } = \\frac{\\lambda}{vw}{\\mbox{$\\mathbb{e}\\left[|{\\textup{esc}}_{y_d}|\\right]$ } } \\\\ & = \\frac{\\lambda}{vw}\\left[\\int_0^{vw}\\left(yw - \\frac{y^2}{2v}\\right ) f(y ) dy + \\frac{vw^2}{2}{\\mathbb{p}}[y_d > vw]\\right].\\end{aligned}\\ ] ] applying the probability density function and cumulative distribution function of @xmath179 we obtain @xmath192$}}=\\frac{\\lambda^2}{v^3w^2 } \\int_0^{vw}\\left(yw - \\frac{y^2}{2v}\\right ) y { \\mathrm{e}}^{-\\lambda    y^2/(2v^2w)}dy \\\\ + \\frac{\\lambda w}{2}{\\mathrm{e}}^{-\\lambda w/2}.\\end{gathered}\\ ] ] to evaluate the integral , consider the change of coordinates @xmath193 , and define @xmath194 .",
    "after simplifying , the integral becomes @xmath195 integrating by parts we obtain @xmath196 where @xmath167 $ ] is the error function : @xmath197 substituting equation   into equation  ( [ n_int_exp ] ) we obtain @xmath198 $ } } = \\sqrt{\\pi \\alpha } { \\operatorname{erf}}(\\sqrt{\\alpha } ) + { \\mathrm{e}}^{-\\alpha } -1.\\ ] ] since @xmath199$}}$ ] is computed for the worst - case vehicle position @xmath171 , and since this expression holds at every capture , we have that @xmath200 $ } } \\leq \\sqrt{\\pi \\alpha } { \\operatorname{erf}}(\\sqrt{\\alpha } ) + { \\mathrm{e}}^{-\\alpha } -1,\\ ] ] and thus by equation   we obtain the desired result .",
    "[ sec : slow_demand ]    in this section we study the case when the demand speed @xmath201 . for this case ,",
    "an upper bound on the capture fraction has been derived in @xcite .",
    "we introduce a policy which is a variant of the tmhp - based policy in  @xcite , and lower bound its capture fraction in the limit of low demand speed and high demand arrival rate .",
    "the following theorem upper bounds the capture fraction of every policy for the case of @xmath10 .",
    "[ thm : lower_v_upper ] if @xmath202 , then for every causal policy @xmath38 @xmath203    the proof of the above theorem is contained in  @xcite , and relies on a computation of the expected minimum distance between demands . notice that for low demands speed , i.e. , @xmath204 , it may be possible to achieve a capture fraction of one , even for high arrival rates .",
    "in section  [ sec : tmhp_rev ] we reviewed the translational minimum hamiltonian path ( tmhp ) through a set of demands .",
    "the following policy utilizes this path to service demands .",
    "compute a translational minimum hamiltonian path through all outstanding demands in @xmath14\\times[0,l/2]$ ] , starting at the service vehicle position , and terminating at the demand with the lowest @xmath1-coordinate .",
    "service all outstanding demands by following the computed path .",
    "service outstanding demands along the computed path for @xmath205 time units . repeat .",
    "figure  [ fig : tmhp_fraction ] shows an example of the tmhp - fraction policy .",
    "in contrast with the lp policy , where the vehicle remains on the deadline , in the tmhp - fraction policy the vehicle follows the tmhp using minimum time motion between demands as described in section  [ sec : tmhp_rev ] .",
    "time units and recomputes its path , allowing some demands to escape.,title=\"fig : \" ]   time units and recomputes its path , allowing some demands to escape.,title=\"fig : \" ]    notice that none of the demands in the region @xmath14\\times [ 0,l/2]$ ] at time @xmath19 will have escaped before time @xmath206 .",
    "thus , the vehicle is guaranteed that for the first @xmath205 time units , all demands on the tmhp path are still in the environment . for the tmhp - fraction policy",
    "we have the following result .",
    "[ thm : tmhp_lower_bd ] in the limit as @xmath207 and @xmath208 , the capture fraction of the tmhp - fraction policy satisfies @xmath209    consider the beginning of an iteration of the policy , and assume that the duration of the previous iteration was @xmath205 . in this case",
    ", the vehicle has @xmath1-coordinate @xmath210 $ ] , and by lemma  [ lem : poisson ] , the region @xmath211\\times[0,l/2]$ ] contains a number of demands @xmath55 that is poisson distributed with parameter @xmath212 .",
    "conditioned on @xmath55 , the demands are independently and uniformly distributed in @xmath52 .",
    "now , we make use of the following three facts . first , as @xmath207 , the length of the tmhp constrained to start at the vehicle location and end at the lowest demand , is equal to the length of the emhp in the corresponding static instance , as described in lemma  [ lem : ttsp ] .",
    "second , from corollary  [ cor : emhp_length ] , for uniformly distributed points , the asymptotic length of a constrained emhp is equal to the asymptotic length of the etsp tour . third , as @xmath207 , and @xmath213 , we have that @xmath55 tends to @xmath214 with probability one . using the above facts we obtain that the length of the tmhp starting at the vehicle position , passing through all demands in @xmath52 , and terminating at the demand with the lowest @xmath1-coordinate , has length @xmath215 in the limiting regime as @xmath207 , and @xmath213 .",
    "the vehicle will follow the tmhp for at most @xmath205 time units , and thus will service @xmath216 demands , where @xmath217    now , the random variable @xmath55 has expected value @xmath218 $ } } =    \\lambda l/(2v)$ ] and variance @xmath219 . by the chebyshev inequality , @xmath220$}}| \\geq \\alpha ] \\leq \\sigma^2_n/\\alpha^2 $ ] , and thus letting @xmath221$}}$ ] , we have @xmath222 $ } } ] \\leq    \\frac{1}{v{\\mbox{$\\mathbb{e}\\left[n\\right]$ } } } = \\frac{2}{\\lambda l}.\\ ] ] thus , we have @xmath223 with probability at least @xmath224 . in the limit as @xmath225 , with probability 1 , @xmath226 therefore , if the previous iteration had duration at least @xmath205 , then the total fraction of demands captured in the current iteration is given by equation  ( [ eq : c_frac ] ) .",
    "the other case is that the previous iteration had duration @xmath227 . in this case , all outstanding demands in the region @xmath211\\times[0,l/2]$ ] lie in a subset @xmath14\\times[0,vt]$ ] , and the subset contains a number of demands @xmath55 that is poisson distributed with parameter @xmath228 .",
    "thus , in this case there are fewer outstanding demands , and the bound on @xmath229 still holds .",
    "thus , @xmath230 , and we obtain the desired result .    in the limit as @xmath207 , and @xmath208 , the capture fraction of the tmhp - fraction policy is within a factor of @xmath231 of the optimal .",
    "we now present two sets of results from numerical experiments .",
    "the first set compares the longest path policy with @xmath232 to the non - causal longest path policy and to the theoretical lower bound in theorem  [ thm : lp_lower_bd ] .",
    "the second set compares the tmhp - fraction policy to the policy independent upper bound in theorem  [ thm : lower_v_upper ] and the lower bound in theorem  [ thm : tmhp_lower_bd ] .    to simulate the lp and the nclp policies , we perform @xmath233 runs of the policy , where each run consists of @xmath234 demands .",
    "a comparison of the capture fractions for the two policies is presented in figure  [ fig : lp_simu ] . when @xmath235 , the capture fraction of the lp policy is nearly identical to that of the nclp policy . even in figure",
    "[ fig : lp_simu_2 ] , where @xmath236 , the capture fraction of the lp policy is within @xmath237 of the nclp policy , and thus the optimal .",
    "this suggests that the longest path policy is essentially optimal over a large range of parameter values .    to simulate the tmhp - fraction policy ,",
    "the linkern solver is used to generate approximations to the optimal tmhp . for each value of arrival rate ,",
    "we determine the capture fraction by taking the mean over @xmath233 runs of the policy .",
    "a comparison of the simulation results with the theoretical results from section  [ sec : tmhp ] are presented in figure  [ fig : tmhp_simu ] .    for @xmath238 in fig .",
    "[ fig : tmhp_simu_01 ] , the experimental results are in near exact agreement with the theoretical lower bound in theorem  [ thm : lower_v_upper ] . for @xmath239 in fig .  [",
    "fig : tmhp_simu_05 ] , the experimental results are within @xmath240 of the theoretical lower bound .",
    "however , notice that the experimental capture fraction is smaller than the theoretical lower bound .",
    "this is due to several factors .",
    "first , we have not reached the limit as @xmath241 and @xmath208 where the asymptotic value of @xmath242 holds .",
    "second , we are using an approximate solution to the optimal tmhp , generated via the linkern solver .",
    "in this paper we introduced a pursuit problem in which a vehicle must guard a deadline from approaching demands .",
    "we presented novel policies in the case when the demand speed is greater than the vehicle speed , and in the case when the demand speed is less than the vehicle speed . in the former case we introduced the longest path policy which is based on computing longest paths in the directed acyclic reachability graph , and in the latter case we introduced the tmhp - fraction policy . for each policy",
    ", we analyzed the fraction of demands that are captured .",
    "there are many areas for future work .",
    "the longest path policy has promising extensions to the case when demands have different priority levels , and to the case of multiple vehicles .",
    "we would also like to fully characterize the capture fraction when @xmath11 , and tighten our existing bounds to reflect the near optimal performance shown in simulation .",
    "n.  bansal , a.  blum , s.  chawla , and a.  meyerson , `` approximation algorithms for deadline - tsp and vehicle routing with time - windows , '' in _ acm symposium on the theory of computing _ ,",
    "chicago , il , 2004 , pp .",
    "166  174 .",
    "m.  pavone , n.  bisnik , e.  frazzoli , and v.  isler , `` a stochastic and dynamic vehicle routing problem with time windows and customer impatience , '' _ acm / springer journal of mobile networks and applications _ , 2008 , to appear .",
    "[ online ] .",
    "available : http://ares.lids.mit.edu/papers/pavone.bisnik.ea.mone08.pdf      s.  d. bopardikar , s.  l. smith , f.  bullo , and j.  p. hespanha , `` dynamic vehicle routing for translating demands : stability analysis and receding - horizon policies , '' _ ieee transactions on automatic control _ , mar .",
    "2009 , submitted ."
  ],
  "abstract_text": [
    "<S> we introduce a problem in which a service vehicle seeks to guard a deadline ( boundary ) from dynamically arriving mobile targets . </S>",
    "<S> the environment is a rectangle and the deadline is one of its edges . </S>",
    "<S> targets arrive continuously over time on the edge opposite the deadline , and move towards the deadline at a fixed speed . </S>",
    "<S> the goal for the vehicle is to maximize the fraction of targets that are captured before reaching the deadline . </S>",
    "<S> we consider two cases ; when the service vehicle is faster than the targets , and ; when the service vehicle is slower than the targets . in the first case </S>",
    "<S> we develop a novel vehicle policy based on computing longest paths in a directed acyclic graph . </S>",
    "<S> we give a lower bound on the capture fraction of the policy and show that the policy is optimal when the distance between the target arrival edge and deadline becomes very large . </S>",
    "<S> we present numerical results which suggest near optimal performance away from this limiting regime . in the second case , when the targets are slower than the vehicle , we propose a policy based on servicing fractions of the translational minimum hamiltonian path . in the limit of low target speed and high arrival rate , the capture fraction of this policy </S>",
    "<S> is within a small constant factor of the optimal . </S>"
  ]
}
{
  "article_text": [
    "in this paper we attempt to find an approach to the problem formulated , e.g. , in @xcite .",
    "the problem consists in calculating the number of independent components of an indexed object @xmath6 with symmetries ( for example , @xmath7 ) .",
    "the importance of this problem for computer algebra systems for indicial tensor computations can be clarified by the following example given in @xcite . in many packages for indicial tensorial calculations",
    "one can define an object @xmath8 with 3 indices and the following two symmetry properties : @xmath9    and @xmath10    one can easily check that these two symmetry properties imply that all components of @xmath8 is zero . however",
    ", none of the packages available to the author can automatically recognize this fact .",
    "in many cases , however , if the software could recognize such and similar situations , it could simplify many kinds of calculations . on the other hand , it is often quite important to find not only the number of independent components , but also the independent components themselves ( for example , to store the components of an object in the best possible way ) . in this paper",
    "we will give efficient algorithms for both finding and counting the independent components of an object with symmetries .",
    "here the following problem with linear symmetries is considered .",
    "let @xmath11 be an object with @xmath1 indices .",
    "each index @xmath12 can take values from @xmath13 , where @xmath14 is the dimensionality of the space where the object is defined .",
    "the object has @xmath15 symmetries defined by equations of the form @xmath16    where @xmath17 and @xmath18 are numbers characterizing the @xmath19-th symmetry , and @xmath20 is a permutation of the @xmath1 indices @xmath21 , @xmath22 is the number of terms in the @xmath19-th symmetry . clearly , the maximal number of the terms in one symmetry and the maximal number of linearly independent symmetries are constrained as ( otherwise the individual terms and the whole symmetries linearly depend on the other terms and symmetries , respectively ) @xmath23    in principle , the number of symmetries @xmath15 can be larger than @xmath5 , but in this case either the additional symmetries are linearly dependent on the first @xmath5 symmetries or at least one of the additional symmetries are incompatible with the first @xmath5 ones and such an object does not exist . a component of @xmath11",
    "is called independent if it is not constrained by symmetries ( [ symmetries ] ) to be a number and if it can not be calculated as a function of other independent components .",
    "the set of independent components is obviously not unique ( if a symmetry requires @xmath24 any of these two components can be considered as independent ) .",
    "the size of this set is , however , independent of this non - uniqueness , and it is sufficient to find any version of it .",
    "the problem consists in computing of the number @xmath25 of independent components of @xmath11 as a function of @xmath2 : @xmath0 . since the total number of components of @xmath11 for a fixed @xmath2 is @xmath26 , one concludes @xmath27",
    "in order to understand the problem more clearly , let us consider first all possible objects with one and two indices .",
    "the case of @xmath28 is quite trivial .",
    "an object @xmath29 has at most @xmath2 components .",
    "if the object has no symmetries of the form ( [ symmetries ] ) , the number of independent components @xmath30 . the only possible symmetry reads @xmath31    where @xmath32 and @xmath33 can not vanish simultaneously ( otherwise the object has again no symmetry ) . clearly , if @xmath34 and @xmath35 the symmetry can not be satisfied .",
    "such symmetries will be called incompatible . in case of incompatible symmetries",
    "we will symbolically write @xmath36 . if @xmath37 then @xmath38 , i.e. all components for any @xmath2 are constrained to be number @xmath39 .",
    "this can be summarized as follows @xmath40    the case of @xmath41 is a bit less trivial . for an object @xmath42 with no symmetries @xmath43 .",
    "each of the two possible symmetries is of the form @xmath44    let us consider first only one symmetry ( [ symmetry-2 ] ) . for @xmath45 `` diagonal '' components with @xmath46 one can write this symmetry as ( no implicit summation is assumed here ) @xmath47    this symmetry can be analyzed in the same way as we did for ( [ symmetry-1 ] ) above .",
    "the @xmath2 `` diagonal '' components are constrained independently of each other ( but clearly in the same way ) .",
    "therefore , it is sufficient to analyze ( [ symmetry-2-diagonal ] ) for one fixed @xmath48 and then multiply the result ( either 0 or 1 independent components ) by @xmath2 . among the other @xmath49 `` off - diagonal '' components with @xmath50 there",
    "exist @xmath51 pairs of components , @xmath52 being the binomial coefficient .",
    "it is only the components within each of these pairs which could be potentially constrained by ( [ symmetry-2 ] ) .",
    "indeed , for any fixed @xmath53 and @xmath48 ( @xmath50 ) only two combinations of indices , @xmath54 and @xmath55 , are connected to each other by a permutation and appear in ( [ symmetry-2 ] ) .",
    "therefore , it is sufficient to consider any of these pairs and multiply the results ( one can have 0 , 1 or 2 independent components within each pair ) by @xmath56 . therefore , the number of independent components of @xmath42 for an arbitrary @xmath2 can always be calculated as @xmath57 with two integers @xmath58 and @xmath59 depending on the symmetries of the object .",
    "let @xmath60 and @xmath61 .",
    "then ( [ symmetry-2 ] ) give two linear equations constraining @xmath62 and @xmath63 : @xmath64    analyzing ( [ symmetry-2-diagonal ] ) and ( [ symmetry-2-exp ] ) one gets the number of independent components of an object with @xmath41 and one symmetry ( [ symmetry-2 ] ) : @xmath65                 { 1\\over 2}\\,k\\,(k+1),\\ & \\",
    "b=0,\\\\[3pt ]                 { 1\\over 2}\\,k\\,(k-1),\\ & \\",
    "a_1=a_2\\neq0,\\\\[3pt ]                 0,\\ & \\ |a_1|\\neq|a_2|,\\\\[3pt ]                 \\emptyset,\\ & \\ a_1+a_2=0\\ \\&\\",
    "b\\neq 0 .",
    "\\end{array }         \\right.\\ ] ]    clearly , for @xmath66 the symmetry ( [ symmetry-2 ] ) can be written as @xmath67 .",
    "this means that the `` diagonal '' components are not constrained at all , and the `` off - diagonal '' components are pairwise equal .",
    "we have thus a symmetric `` matrix '' . for @xmath68 one",
    "has @xmath69 .",
    "this means that the `` diagonal '' components are all equal to @xmath70 and the `` above - diagonal '' components can be computed from the `` below - diagonal '' ones as @xmath71 . for @xmath72 we have a skew - symmetric `` matrix '' here . in case @xmath73",
    "all components are equal to the same number : @xmath74 .",
    "it is easy to see that for objects @xmath42 with two symmetries @xmath75    @xmath0 also takes the same 5 possible values as in ( [ f(k)-2 ] ) .",
    "the ideas found in these examples will allows us to formulate several important theorems and algorithms below .",
    "let us first leave aside the question whether the symmetries of the object are compatible and consider that @xmath76 for any @xmath2 .",
    "this will be further discussed in section [ section - compatibility ] .",
    "the results of the previous section suggest to formulate the following    [ theorem-1 ] for an object @xmath11 with arbitrary @xmath1 and arbitrary compatible linear symmetries the number of independent components @xmath0 is a polynomial of the dimensionality @xmath2 .",
    "the degree of this polynomial does not exceed @xmath1 .    from ( [ f(k)-upper ] )",
    "it is obvious that if @xmath0 is a polynomial its degree can not exceed @xmath1 .",
    "let us denote the set of all possible values of each of the indices @xmath77 as @xmath78 .",
    "its cardinality is @xmath79 .",
    "let us also denote the set of all independent components of an object @xmath11 with all @xmath80 as @xmath81 .",
    "the cardinality of @xmath81 is clearly @xmath0 .",
    "it is clear that we can change @xmath82 to any set @xmath83 with the same cardinality @xmath2 and number of independent components of @xmath11 with @xmath84 will be again @xmath0 .",
    "that is , for any @xmath83 one has @xmath85 .",
    "let @xmath86 , @xmath87 are the @xmath88 subsets of @xmath82 such that @xmath89 . clearly , @xmath90 .",
    "any two components can be potentially related to each other according to ( [ symmetries ] ) only if their sets of @xmath1 indices are related by a permutation .",
    "thus , if @xmath91 the set @xmath81 of independent components of @xmath11 with @xmath80 is the union of the @xmath2 sets @xmath92 of independent components with @xmath93 : @xmath94 . for the same reason for any two sets @xmath95 and @xmath96 one has @xmath97 . applying the inclusion - exclusion principle @xcite to the @xmath2 sets",
    "@xmath92 one gets",
    "@xmath98    this formula immediately implies @xmath99    since this last formula is valid for any @xmath91 one can compute @xmath0 for @xmath91 from the @xmath1 values @xmath100 for @xmath101 .",
    "this means that the @xmath0 is a polynomial of @xmath2 of degree @xmath1 or less .    from the computational point of view",
    "it is useful to explicitly compute the above - mentioned representation of @xmath0 through the @xmath1 values @xmath100 for @xmath101 .",
    "[ theorem - poly - formula - n ] for an object @xmath11 with arbitrary @xmath1 and arbitrary compatible linear symmetries the number of independent components @xmath0 for any @xmath91 can be computed as @xmath102    a straightforward way to prove ( [ f(k)-f(1)- ... -f(n ) ] ) is by induction . for @xmath103 eq .",
    "( [ f(k)-f(1)- ... -f(n ) ] ) coincides with ( [ f(k)-via - f(k-1 ) ] ) and is thus correct .",
    "suppose that eq .",
    "( [ f(k)-f(1)- ... -f(n ) ] ) is valid for some @xmath2 .",
    "let us prove that it is also valid for @xmath104 . applying eq .",
    "( [ f(k)-via - f(k-1 ) ] ) one gets @xmath105    since for all @xmath100 with @xmath106 eq .",
    "( [ f(k)-f(1)- ... -f(n ) ] ) is supposed to be correct , one has @xmath107 \\nonumber\\\\ & = & \\sum_{i=1}^{n}(-1)^{n - i}\\,f(i)\\,c_{k+1}^i\\,c_{k - i}^{n - i}.\\end{aligned}\\ ] ]    here we used the well - known properties of the binomial coefficients @xcite . in particular , we used @xmath108    therefore , eq .",
    "( [ f(k)-f(1)- ... -f(n ) ] ) is correct for any @xmath91 .    a more elegant proof of eq . ( [ f(k)-f(1)- ... -f(n ) ] )",
    "directly follows from theorem  [ theorem-1 ] : if a function is a polynomial of degree @xmath1 or less , one can take its first @xmath1 values @xmath100 for @xmath109 and construct a polynomial of degree @xmath1 having these values for @xmath109 ( and @xmath110 ) using the lagrange interpolation formula .",
    "indeed , @xmath111    which is exactly the lagrange form of the coefficients of the interpolation polynomial .",
    "up to now we have ignored the question of compatibility of the symmetry properties ( [ symmetries ] ) .",
    "one can easily check if the symmetries are compatible for @xmath112 .    for an object @xmath11 with arbitrary @xmath1 its symmetry properties ( [ symmetries ] ) are incompatible for @xmath112 if and only if at least one of the two conditions are met :    * for at least one symmetry @xmath113 and @xmath114 with @xmath115 * there exist at least two symmetries for which @xmath116 and @xmath117 , and @xmath118 .    for @xmath112",
    "any of the symmetries can be written as @xmath119    @xmath120 being defined by ( [ c_l ] ) .",
    "these properties can be analyzed in the same way as we did for ( [ symmetry-1 ] ) .",
    "the theorem immediately follows from this analysis .",
    "another two important results are :    [ theorem - comp - if - k->k-1 ] if symmetries of an object @xmath11 with arbitrary @xmath1 are compatible for dimension @xmath121 , they are also compatible for any dimension @xmath122 .",
    "this is obvious since the whole system of symmetry - induced equations for any @xmath122 is a part of the corresponding system for @xmath121 .",
    "[ theorem - comp - if - k = n->k ] if symmetries of an object @xmath11 with arbitrary @xmath1 are compatible for dimension @xmath123 , they are also compatible for any dimension @xmath2 .    for @xmath124",
    "this follows from theorem [ theorem - comp - if - k->k-1 ] while for @xmath91 from theorem [ theorem - poly - formula - n ] .",
    "the algorithmic usage of theorem [ theorem - comp - if - k = n->k ] is clear : one has to check if the symmetries are compatible for @xmath123 .",
    "below three different algorithms to find the independent components of an indexed object are discussed .",
    "the first algorithm is a straightforward one . for a fixed @xmath2",
    "all possible combinations of the numerical values of all @xmath1 indices are substituted into each of the symmetries ( [ symmetries ] ) .",
    "thus , one obtains a system of linear equations for all @xmath26 components of the object .",
    "the total number of equations is @xmath125 , where @xmath15 is the number of symmetries ( @xmath126 ) .",
    "each equation involves at most @xmath5 components .",
    "then , the system is solved and the independent components are found explicitly . counting them",
    "allows one to get @xmath0 for that fixed @xmath2 for which the system was generated .",
    "it is clear that if @xmath1 , @xmath2 or @xmath15 are large the calculations can be very time - consuming . the only reason to implement such an algorithm is the possibility to check better algorithms described below .      from the algorithmic point of view , eq .",
    "( [ f(k)-f(1)- ... -f(n ) ] ) allows one to calculate @xmath0 for any @xmath91 as soon as one has calculated @xmath0 for all @xmath127 .",
    "moreover , having the set of the independent components for @xmath123 one can count the number of components among them with indices @xmath128 , @xmath129 for @xmath130 .",
    "the number of such components is exactly @xmath131 , and , therefore , it is sufficient to have the set of independent components for @xmath123 to compute @xmath0 for any @xmath2 .",
    "such an algorithm requires solving at most @xmath132 linear equations with at most @xmath5 unknowns in each equation and at most @xmath133 unknowns in the whole system ( note that each of the @xmath126 symmetries ( [ symmetries ] ) generates at most @xmath133 linear equations for at most @xmath5 unknowns ) . although , this algorithm is better than straightforward calculation of the independent components for some large @xmath91 , it is still quite time - consuming for larger @xmath1 .",
    "another point is that this algorithm does not allow to list the independent components and to represent the other components as functions of the independent ones for @xmath91 .",
    "it is certainly possible to augment the algorithm in this direction .",
    "however , attempts to do so allowed the author to formulate much more efficient algorithm for both computing @xmath0 and finding the dependencies in explicit form .",
    "this algorithm described in the next section .      here",
    "we suggest a much faster algorithm based on the fact that the sequences of indices of the components which could be potentially constrained by a symmetry of the form ( [ symmetries ] ) are related with each other by a permutation .",
    "this obvious fact has been already mentioned and used above .",
    "therefore , we can split the whole set of @xmath26 components into such subsets within which the sequences of indices are related by a permutation and then generate and solve the corresponding linear equations only for the components within each of these subsets .",
    "moreover , one can drastically reduce the number of the subsets to be considered since many of them are similar to each other ( e.g. , they can be obtained from each other by changing , say , value 4 for all indices into value 5 ) .",
    "let us consider a component @xmath11 with some fixed indices @xmath134 .",
    "any sequence of indices @xmath135 can be characterized by sequence @xmath136 , where each @xmath137 is the number of such @xmath77 in @xmath135 that @xmath138 .",
    "clearly , one has @xmath139 with constrains @xmath140 . for fixed @xmath1 and @xmath2",
    "there are @xmath141 different solutions of this equation with these constrains , and , therefore , @xmath141 different sequences @xmath142 .",
    "it is clear that two components @xmath143 and @xmath144 can be related to each other by a symmetry of the form ( [ symmetries ] ) , only if both sequences of indices @xmath135 and @xmath145 correspond to the one and same sequence @xmath142 .",
    "the number of components @xmath11 corresponding to the same @xmath142 is the multinomial coefficient @xmath146 with @xmath139 .",
    "the subsets of the components corresponding to two different @xmath147 and @xmath148 can be treated in the same way if @xmath147 and @xmath148 are related to each other by a permutation .",
    "such a permutation corresponds just to renaming all indices having , say , value 1 to , say , 5 , and so on .",
    "the two subsets corresponding to two such @xmath147 and @xmath148 have the same number of independent components and the same dependence of the other components on the independent ones .",
    "therefore , it is sufficient to calculate the dependence of the components only for one @xmath142 among all of them related to each other by a permutation .",
    "we will consider only the sorted version @xmath149 of @xmath142 : @xmath150 with @xmath151 .",
    "let @xmath152 be the sequence @xmath149 with exactly @xmath19 nonzero elements : @xmath153 , @xmath154 , @xmath155 .",
    "it is obvious that @xmath156 .",
    "each @xmath152 corresponds to a partition of @xmath1 into @xmath19 parts .",
    "there exists @xmath157 different partitions of this kind .",
    "now , let @xmath158 denote the number of distinct values among @xmath159 , and @xmath160 , @xmath161 is how many times the value number @xmath162 ( which is one of the @xmath163 distinct values in @xmath152 ) appears among @xmath164 .",
    "then the number of different @xmath142 which can be obtained by permutations from @xmath152 is @xmath165 .",
    "combining all the results discussed above one gets the following formula for the number of independent components @xmath166\\,c_k^l,\\ ] ]    where the inner sum goes over all the partitions of @xmath1 into @xmath19 parts , each such partition corresponds to @xmath167 , the numbers @xmath168 , @xmath169, ",
    "@xmath170 is calculated for @xmath167 , and @xmath171 is the number of independent components among @xmath172 components @xmath11 corresponding to @xmath167 : @xmath173    two identities can be used to check the internal consistency of ( [ algorithm-2 ] ) and ( [ algorithm-2-g ] ) .",
    "first , the total number of sequences @xmath142 for fixed @xmath1 and @xmath2 can be calculated from ( [ algorithm-2 ] ) with @xmath174 and should be @xmath141 as discussed above .",
    "one can see that this is true : @xmath175\\,c_k^l = c_{k+n-1}^n.\\ ] ]    second , for an object without symmetries @xmath176 , and the total number of components for fixed @xmath2 and @xmath1 calculated according to ( [ algorithm-2 ] ) should be @xmath26 .",
    "indeed , it is also true : @xmath177\\,c_k^l = k^n.\\ ] ]    combining ( [ algorithm-2 ] ) and ( [ f(k)-f(1)- ... -f(n ) ] ) it is clear that in order to calculate @xmath0 for arbitrary @xmath2 it is sufficient to calculate the number of independent components within the subsets of @xmath143 corresponding to @xmath178 different sequences @xmath167 , @xmath3 being the total number of partitions of @xmath1 .",
    "the size of the subsets of @xmath11 does not exceed @xmath5 .",
    "therefore , in the worst case one should solve @xmath4 linear equations ( each symmetry ( [ symmetries ] ) generates at most @xmath5 distinct equations , and there are at most n !",
    "symmetries ) with @xmath5 unknowns .",
    "this is much better that for the algorithms a and b.      a simple idea allows one to reduce further the number of equations in the system generated by the symmetries before solving that system of these equation .",
    "one can put the equations into a canonical form in which it is trivial to check if any two equations are equivalent ( e.g. , the numerical coefficient at the lexicographically first component should be equal to unity ) and retain only one among the equivalent equations possibly appearing in the set of generated equations .",
    "for example , the symmetry @xmath179 for @xmath180 produces two equations @xmath181 and @xmath182 which are equivalent and can be considered as one equation . on the other hand , the symmetry @xmath183 for @xmath180 gives two linearly independent equations @xmath184 and @xmath185 whose canonical forms are different : @xmath186 and @xmath187 , respectively",
    ". how many equations can be eliminated from the system of equations using this simple equivalence test depends on the symmetry properties ( note , that even two different symmetry properties can produce equivalent equations ) . this reduction scheme for the system of linear equations can be used in all three algorithms described above .",
    "in order to check the performance and cross - check the results all three algorithms a , b , and c were implemented in  with the idea that the best one should be incorporated into the package  for calculations with indexed objects @xcite .",
    "the main parts of the implementation are :    1 .",
    "two routines defobject and defsymmetries allowing one to define objects with arbitrary symmetries , 2 .",
    "routine constraincomponents which explicitly generates and solves the linear equations for individual components induced by the symmetries for some fixed @xmath2 , 3 .",
    "routine guesspolynomial implementing algorithm a by calling constraincomponents for a sufficient number of different values of @xmath2 to check if a polynomial of degree @xmath1 or less can be fitted to the results , 4 .",
    "routine countindependentcomponents implementing algorithm b by calling constraincomponents for @xmath123 and analyzing the resulted independent components to compute @xmath0 from ( [ f(k)-f(1)- ...",
    "-f(n ) ] ) , and 5 .",
    "routine listindependentcomponents implementing algorithm c and providing for any @xmath2 both @xmath0 and , if requested , a list for the independent components and the dependence of the other components .",
    "all the routines allow one to control all the steps of the corresponding algorithms and , if desired , provide the user with various additional information .",
    "the implementation consists of about 1000 lines of  top level code and is available form the author upon request .    to give a practical example let us consider the covariant riemann tensor @xmath188 with @xmath189 and with its four symmetry properties @xmath190    the well - known result @xcite for the covariant riemann tensor is @xmath191 .",
    "algorithm a ( guesspolynomial ) explicitly computes the independent components subsequently for @xmath112 , @xmath192 ,  ,",
    "@xmath193 to verify that a polynomial of degree @xmath194 or less really fits the results .",
    "for example , for @xmath193 this requires solving of a system of @xmath195 linear equations ( 2526 distinct ones ) with for 1296 unknowns .",
    "this is quite a heavy task even for a modern pc ( note that the system is underdeterminated and should be solved exactly ) .",
    "algorithm b ( countindependentcomponents ) requires solving a total of @xmath196 linear equations ( 504 distinct ones ) for @xmath197 unknowns among which 112 components turn out to be zero and another 124 turn out to be functions of 20 independent components : @xmath198 , @xmath199 , @xmath200 , @xmath201 , @xmath202 , @xmath203 , @xmath204 , @xmath205 , @xmath206 , @xmath207 , @xmath208 , @xmath209 , @xmath210 , @xmath211 , @xmath208 , @xmath212 , @xmath213 , @xmath214 , @xmath215 , @xmath216 .",
    "this list allows one to conclude that @xmath217 , @xmath218 , @xmath219 , and @xmath220 .",
    "these set of values allows one to compute the above - mentioned result for @xmath0 directly from ( [ f(k)-f(1)- ... -f(n ) ] ) .",
    "algorithm c ( listindependentcomponents ) required solving of @xmath221 systems of linear equations :    1 .   a system of 4 equations ( only one distinct equation ) with 1 unknown ( corresponding to @xmath222 ) , 2 .",
    "one system of 16 equations ( 9 distinct ones ) with 4 unknowns ( corresponding to @xmath223 ) , 3 .   a system of 24 equations ( 10 distinct ones ) with 6 unknowns ( corresponding to @xmath224 ) , 4 .   a system of 48 equations ( 24 distinct ones ) with 12 unknowns ( corresponding to @xmath225 ) , 5 .   a system of 96 equations ( 44 distinct ones ) with @xmath226 unknowns ( corresponding to @xmath227 ) .",
    "clearly , algorithm c produces the same results for @xmath0 as the other two algorithms , but requires much less resources .",
    "this demonstrates the efficiency of algorithm c. it is planned to include algorithm c into the next release of .",
    "certainly , algorithm c can be further improved in certain cases if the structure of particular symmetries are taken into account . up to now the algorithms does not account for any properties which the symmetries may have . here",
    "one can use the group - theoretic approach for manipulations with indexed objects developed in @xcite .",
    "certain further improvement could be achieved if an algorithm to generate only distinct equations could be found .",
    "however , it is doubtful that such an algorithm would be computationally cheaper as the currently used algorithm to find and to drop equivalent equations before solving the system of linear equations ( see , section [ section : reduction ] ) .",
    "it is interesting also to check if the results of section [ section - compatibility ] can be improved so that the incompatibility of symmetries ( [ symmetries ] ) could be seen in an easier way .",
    "another interesting question is whether , for arbitrary symmetries , one can express algorithmically the combinatorial `` finger exercises '' allowing one to derive @xmath218 , @xmath219 and @xmath228 for the covariant riemann tensor as given , for example , in section 92 of @xcite .",
    "the considered form ( [ symmetries ] ) of the symmetries does not allow us to consider some important cases .",
    "for example , the definition of a symmetric trace - free ( stf ) tensor required that a contraction of @xmath229 with the kronecker symbol @xmath230 vanishes for any @xmath32 and @xmath33 .",
    "such a symmetry can not be written in the form ( [ symmetries ] ) and is out of the scope of this paper .",
    "on the other hand , stf tensors plays very important role in modern physics @xcite and it is important to have efficient algorithms to store them and manipulate with them",
    ". it can be demonstrated that the main results of this paper can be also used for symmetries involving contractions with objects each component of which has some numerical value .",
    "that is , one can consider symmetries of the form      where @xmath232 and @xmath33 are numbers , @xmath233 , @xmath234 ,  , @xmath235 are dummy indices over which the contraction is performed , @xmath236 is a number for any values of its indices ( this can be , e.g. the kronecker @xmath237 or the fully antisymmetric levi - civita symbol @xmath238 , or anything else ) , and @xmath239 is an arbitrary permutation of @xmath1 indices containing @xmath162 dummy indices @xmath233 , @xmath234 ,  , @xmath235 and @xmath240 free ones .",
    "this case will be treated in a separate publication .",
    "ilyin , v. , kryukov , a. : symbolic simplification of tensor expressions using symmetries , dummy indices and identities . in : watt , s. ( ed . )",
    "issac91 , proceedings of the 1991 international symposium on symbolic and algebraic computation ( bonn , 1991 ) , acm press , singapore ( 1991 ) 224228                    rodionov , a. , taranov , a. : combinatorial aspects of simplification of algebraic expressions . in : davenport , j. ( ed . ) , eurocal87 , european conference on computer algebra ( berlin , 1987 ) , springer , berlin ( 1987 ) 192201"
  ],
  "abstract_text": [
    "<S> the problem of finding independent components of an indexed object ( e.g. , a tensor ) with arbitrary number of indices and arbitrary linear symmetries is discussed . </S>",
    "<S> it is proved that the number of independent components @xmath0 is a polynomial of degree not greater than the number of indices @xmath1 , @xmath2 being the dimension of the space . several algorithms to compute @xmath0 for arbitrary @xmath2 are described and discussed . </S>",
    "<S> it is shown that in the worst case finding @xmath0 for arbitrary @xmath2 requires solving at most @xmath3 systems of linear equations with at most @xmath4 equations for at most of @xmath5 unknowns , @xmath3 being the number of partitions of @xmath1 . as a by - product , an efficient algorithm to parametrize all components of the object through its independent components </S>",
    "<S> is found and implemented in . </S>"
  ]
}
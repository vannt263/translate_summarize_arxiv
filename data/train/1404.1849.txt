{
  "article_text": [
    "dynamic digital maps , in which users can navigate by continuously zooming , panning , or rotating their personal map view , opened up a new era in cartography and geographic information science ( gis ) from professional applications to personal mapping services on mobile devices .",
    "the continuously animated map view adds a temporal dimension to the map layout and thus many traditional algorithms for static maps do not extend easily to dynamic maps . despite the popularity and widespread use of dynamic maps ,",
    "relatively little attention has been paid to provably good or experimentally evaluated algorithms for dynamic maps .    in this paper",
    "we consider _ dynamic map labeling _ for points , i.e. , the problem of deciding when and where to show labels for a set of point features on a map in such a way that visually distracting effects during map animation are kept to a minimum .",
    "in particular , we study rotating maps , where the mode of interaction is restricted to changing the map orientation , e.g. , to be aligned with the travel direction in a car navigation system .",
    "( right).,title=\"fig : \" ]   ( right).,title=\"fig : \" ]    [ fig : example ]    been et al .",
    "@xcite defined a set of _ consistency desiderata _ for labeling zoomable dynamic maps , which include that ( i ) labels do not _ pop _ or _ flicker _ during monotone zooming , ( ii ) labels do not _ jump _ during the animation , and ( iii ) the labeling only depends on the current view and not its history . in our previous paper",
    "@xcite , we adapted the consistency model of been et al .",
    "to rotating maps , showed np - hardness and other properties of consistent labelings in this model , and provided efficient approximation algorithms .",
    "similar to the ( np - hard ) label number maximization problem in static map labeling  @xcite , the goal in dynamic map labeling is to maximize the number of visible or _ active _ labels integrated over one full rotation of @xmath1 .",
    "the value of this integral is denoted as the _ total activity _ and defines our objective function .",
    "figure  [ fig : example ] shows an example seen from two different angles . without any consistency restrictions , we can select the active labels for every rotation angle @xmath0 independently of any other rotation angles .",
    "clearly , this may produce an arbitrarily high number of flickering effects that occur whenever a label changes from active to inactive or vice versa .",
    "depending on the actual consistency model , the number of flickering events per label is usually restricted to a very small number .",
    "our goal in this paper is to evaluate several possible labeling strategies , where a labeling strategy combines both a consistency model and a labeling algorithm .",
    "first , we want to evaluate the loss in total activity caused by using a specific consistent labeling model rather than an unrestricted one .",
    "second , we are interested in evaluating how close to the optimum total activity our proposed algorithms get for real - world instances in a given consistency model .",
    "[ [ related - work . ] ] related work .",
    "+ + + + + + + + + + + + +    most previous work on dynamic map labeling covers maps that allow panning and zooming , e.g. ,  @xcite ; there is also some work on labeling dynamic points in a static map  @xcite .",
    "as mentioned above , the dynamic map labeling problem for rotating maps has first been considered in our previous paper  @xcite .",
    "we introduced a consistency model , and proved np - completeness even for unit - square labels . for unit - height labels we described an efficient 1/4-approximation algorithm as well as a ptas .",
    "yokosuka and imai  @xcite considered the label size maximization problem for rotating maps , where the goal is to find the maximum font size for which all labels can be constantly active during rotation .",
    "finally gemsa et al .",
    "@xcite studied a trajectory - based labeling model , in which a locally consistent labeling for a viewport moving along a given smooth trajectory needs be computed .",
    "their model combines panning and rotation of the map view .    [",
    "[ our - contribution . ] ] our contribution .",
    "+ + + + + + + + + + + + + + + + +    in this paper we take a practical point of view on the dynamic map labeling problem for rotating maps . in section  [ sec : prelim ] we formally introduce the algorithmic problem and discuss our original rather strict consistency model  @xcite , as well as two possible relaxations that are interesting in practice .",
    "section  [ sec : algos ] summarizes the known 1/4-approximation algorithm  @xcite , introduces three greedy heuristics ( one of which is a 1/8-approximation for unit square labels ) , and presents a formulation as an integer linear program ( ilp ) , which provides us with optimal solutions against which to compare the algorithms .",
    "our main contribution is the experimental evaluation in section  [ sec : exper - eval ] .",
    "we extracted several real - world labeling instances from openstreetmap data and make them available as a benchmark set .",
    "based on these data , we evaluate both the trade - off between the consistency and the total activity , and the performance of the proposed labeling algorithms .",
    "the experimental results indicate that a high degree of labeling consistency can be obtained at a very small loss in activity .",
    "moreover , our greedy algorithms achieve a high labeling quality and outperform the running times of the other methods by several orders of magnitude .",
    "we conclude with a suggestion of the most promising labeling strategies for typical use cases .",
    "in this section we describe a general labeling model for rotating maps with axis - aligned rectangular labels .",
    "this model extends our earlier model  @xcite .",
    "let @xmath2 be an ( abstract ) map , consisting of a set @xmath3 of points in the plane together with a set @xmath4 of pairwise disjoint , closed , and axis - aligned rectangular labels in the plane .",
    "each point @xmath5 must coincide with a corner of its corresponding label @xmath6 ; we denote that corner ( and the point @xmath5 ) as the _ anchor _ of label @xmath6 .",
    "since each label has four possible positions with respect to @xmath5 this widely used model is known in the literature as the 4-position model ( 4p )  @xcite .",
    "as @xmath2 rotates , each label @xmath6 in @xmath7 must remain horizontally aligned and anchored at  @xmath5 .",
    "thus , new label intersections form and existing ones disappear during the rotation of @xmath2 .",
    "we take the following alternative perspective on the rotation of @xmath2 . rather than rotating",
    "the points , say clockwise , and keeping the labels horizontally aligned we may instead rotate each label counterclockwise around its anchor point and keep the set of points fixed .",
    "both rotations are equivalent in the sense that they yield exactly the same intersections of labels and occlusions of points .",
    "we consider all rotation angles modulo  @xmath1 . for convenience",
    "we introduce the interval notation @xmath8 $ ] for any two angles @xmath9 $ ] .",
    "if @xmath10 , this corresponds to the standard meaning of an interval , otherwise , if @xmath11 , we define @xmath8 : = [ a,2\\pi ] \\cup [ 0,b]$ ] . for simplicity",
    ", we refer to any set of the form  @xmath8 $ ] as an interval .",
    "we define the length of an interval @xmath12 $ ] as @xmath13 if @xmath10 and @xmath14 if @xmath11 .",
    "a _ rotation _ of @xmath7 is defined by a rotation angle @xmath15 .",
    "we define @xmath16 as the set of all labels , each rotated by an angle of  @xmath17 around its anchor point .",
    "a _ rotation labeling _ of @xmath2 is a function @xmath18 such that @xmath19 if label @xmath20 is visible or _ active _ in the rotation of @xmath7 by @xmath17 , and @xmath21 otherwise .",
    "we call a labeling  @xmath22 _ valid _ if , for any rotation @xmath17 , the set of labels @xmath23 consists of pairwise disjoint labels .",
    "if two labels @xmath20 and @xmath24 in @xmath16 intersect , we say that they have a ( soft ) _ conflict _ at @xmath17 , i.e. , in a valid labeling at most one of them can be active at @xmath17 .",
    "we define the set @xmath25 as the _ conflict set _ of @xmath20 and @xmath24 .",
    "further , we call a contiguous range in @xmath26 a _ conflict range_. the begin and end of a maximal conflict range are called",
    "_ conflict events_.    for a label @xmath20 we call each maximal interval @xmath27 with  @xmath19 for all  @xmath28 an _ active range _ of label  @xmath20 and define the set @xmath29 as the set of all active ranges of @xmath20 in @xmath22 .",
    "we call an active range where both boundaries are conflict events a _ regular _ active range .",
    "our optimization goal is to find a valid labeling @xmath22 that shows a maximum number of labels integrated over one full rotation from @xmath30 to @xmath1 .",
    "the value of this integral is called the _ total activity _ @xmath31 and can be computed as @xmath32 .",
    "the problem of optimizing @xmath31 is called _ total activity maximization problem _ ( maxtotal ) .",
    "a valid labeling is not yet consistent in terms of the definition of been et al .",
    "@xcite : while labels clearly do not jump and the labeling is independent of the rotation history , labels may still _ flicker _ multiple times during a full rotation from @xmath30 to @xmath1 , depending on how many active ranges they have in @xmath22 . in the most restrictive consistency model , which avoids flickering entirely , each label is either active for the full rotation @xmath33 or never at all .",
    "we denote this model as _ 0/1-model_. in our previous paper  @xcite we defined a rotation labeling as consistent if each label has only a single active range , which we denote here as the _ 1r - model_. this immediately generalizes to the _ @xmath34r - model _ that allows at most @xmath34 active ranges for each label .",
    "analogously , the unrestricted model , i.e. , the model without restrictions on the number of active ranges per label , is denoted as the _ @xmath35r - model_.    we may apply another restriction to our consistency models , which is based on the occlusion of anchors . among the conflicts in set",
    "@xmath36 we further distinguish _ hard conflicts _ , i.e. , conflicts where label @xmath20 intersects the anchor point of label @xmath24 .",
    "if a labeling @xmath22 sets @xmath20 active during a hard conflict with @xmath24 , the anchor of @xmath24 is occluded .",
    "this may be undesirable in some situation in practice , e.g. , if every point in @xmath37 carries useful information in the map , even if it is unlabeled .",
    "thus we may optionally require that @xmath21 during any hard conflict of a label @xmath20 with another label @xmath24 at angle @xmath17 .",
    "note that we can include other obstacles ( e.g. , important landmarks on a map ) which must not be occluded by a label in form of hard conflicts .",
    "note that a soft conflict is always a label - label conflict , while a hard conflict is always a label - point conflict ( in our definition every label - point conflict induces also a label - label conflict ) .",
    "we showed earlier  @xcite that maxtotalis np - hard in the 1r - model avoiding hard conflicts and presented approximation algorithms .",
    "in this section we describe five algorithmic approaches for computing consistent active ranges that we evaluate in our experiments .",
    "section  [ sec : heuristics - maxtotal ] describes three simple greedy heuristics .",
    "then , we sketch in section  [ sec:.25-apprx ] our 1/4-approximation algorithm which we described in more detail in  @xcite . it is based on the shifting technique by hochbaum and maass  @xcite , where instances are decomposed into small independent cells that are then solved optimally .",
    "finally , we give an ilp formulation in section  [ sec : ilp : maxtotal ] that that we use primarily for evaluating the quality of the other solutions .      in this section",
    "we describe three new greedy algorithms to construct valid and consistent labelings with high total activity .",
    "these algorithms are conceptually simple and easy to implement , but in general we can not give quality guarantees for the solutions computed by these algorithms .",
    "all three greedy algorithms follow the same principle of iteratively assigning active ranges to all labels .",
    "the algorithm first initializes a set  @xmath38 with all labels in  @xmath7 .",
    "then it computes for each label @xmath20 its _ maximum active range _ @xmath39 , which is the active range of maximum length @xmath40 such that ( i ) @xmath20 is not active while in conflict with another active label that was already considered by the algorithm , and ( optionally ) such that ( ii ) @xmath20 is not active while it has a hard conflict with another label .",
    "initially the maximum active range of each label is either the full interval @xmath41 $ ] or the largest range that avoids hard conflicts",
    ". then the algorithm repeats the following steps .",
    "it selects and removes a label @xmath20 from @xmath38 , assigns it the active range @xmath39 , and updates those labels in @xmath38 whose maximum active range is affected by the assignment of @xmath20 s active range . if we consider the @xmath34r - model with @xmath42 , we keep a counter for the number of selected active ranges and add another copy of @xmath20 with the next largest active range to @xmath38 if the counter value is less than @xmath34 .",
    "the three algorithms differ only in the criterion that determines which label is selected from @xmath38 in each iteration .",
    "the first algorithm we propose is called . in each step",
    "the algorithm selects the label with the largest maximum active range among all labels in  @xmath38 .",
    "ties are broken arbitrarily .",
    "the second algorithm , , determines for the maximum active range of each label the cost of adding it to the solution .",
    "this means that for each label @xmath43 with maximum active range @xmath39 the algorithm determines for all labels @xmath44 that are in conflict with @xmath20 during @xmath39 by how much their maximum active range would shrink .",
    "the sum of this is the _ cost _ @xmath45 of assigning the active range @xmath39 to @xmath20 . among all labels in @xmath38 chooses the one with lowest cost .",
    "finally , the last algorithm , is a combination of the two preceding ones . in each step",
    "the algorithm chooses the label @xmath20 whose ratio @xmath46 is maximum among all labels in @xmath38 .",
    "we conclude with a brief performance analysis of our algorithms .    in the @xmath34r - model with constant @xmath34 the algorithm can be implemented to run in time @xmath47 and the algorithms and",
    "can be implemented to run in time @xmath48 , where @xmath49 is the number of labels and @xmath50 is the maximum number of conflicts per label in the input instance .",
    "the space consumption of all algorithms is  @xmath51.[thm : greedy ]    we begin by describing the time complexity for and sketch how to adapt the proof for and .    for the initialization we need to compute the maximum active range for all labels which can be done in @xmath52 time .",
    "note that this is only necessary in the hard - conflict model , since in the soft - conflict model the maximum active range is for all labels is the full rotation . to efficiently query for the label with longest maximum active range we maintain a maximum heap  @xmath53 in which we store all labels from the set @xmath38 with the length of their maximum active range as key .",
    "initially we need to add all labels from @xmath7 into @xmath53 , which requires @xmath54 time .    in each step of the algorithm it first selects the label  @xmath20 with maximum active range still left in  @xmath38 .",
    "then , it needs to update the maximum active range of those labels in @xmath38 that have a conflict with @xmath20 .",
    "since we maintain all labels contained in @xmath38 in the heap @xmath53 , we can find and remove the label with maximum active range in @xmath38 in @xmath55 time . to determine the new maximum active ranges for those labels in @xmath38 that are in conflict with @xmath20 , we conduct a simple linear sweep over @xmath56 .",
    "note that there are at most @xmath57 conflict events and hence a single sweep requires @xmath57 time .",
    "finally , we need to update the value of the maximum active ranges in the global heap .",
    "this requires @xmath58 time .",
    "thus , a single step in the algorithm requires @xmath59 time . since there are @xmath49 steps , the claimed running time follows .    for and we use the same approach ,",
    "but we store the labels with their cost and gain - cost ratio as key , respectively .",
    "the main difference compared to is the necessity to compute the cost of selecting a maximum active range , which can be done straightforwardly in @xmath60 time per label . after selecting a label and assigning it its maximum active range ,",
    "the maximum active ranges of at most @xmath57 labels still left in @xmath38 may change . for these labels ,",
    "the algorithm needs to recompute the cost of selecting their maximum active ranges and update these values in the maximum heap . in total a single step for or requires @xmath61 time . the claimed time complexity follows .",
    "the required space is dominated by the storage required to store for each label its relevant conflict events .",
    "this takes  @xmath52 space .    by using a more efficient encoding of the maximal disjoint intervals that can be assigned to label  @xmath6 in a heap , the running time of",
    "can be further improved to  @xmath62 .",
    "can be implemented with time complexity @xmath62 and space requirement in @xmath52 .",
    "similar to the proof of theorem  [ thm : greedy ] , we maintain a global heap that contains the maximum possible active range for each label . in the following",
    "we describe the modified representation of the possible active ranges for the individual labels .",
    "we maintain for _ each _ label  @xmath63 a maximum heap  @xmath64 that maintains all maximal disjoint intervals the label  @xmath6 can be assigned as active range .",
    "further , _ each _ label also maintains a balanced binary tree @xmath65 on the same set of intervals , i.e. , we store the left and right endpoints of the intervals in @xmath65 .",
    "should one of the intervals span over @xmath1 , we split it into two intervals at @xmath1 .",
    "since there are @xmath57 conflict events per label , both @xmath65 and @xmath64 can contain at most @xmath57 elements .",
    "for the initialization we first need to compute all possible maximal active ranges for each label which can be done in @xmath52 time .",
    "initializing the global heap can be done as before in @xmath66 time , and since each label specific heap  @xmath64 and binary tree @xmath65 can contain at most @xmath57 elements , their initialization requires @xmath67 time in total .",
    "now , when the algorithm has chosen a label @xmath20 with maximum active range  @xmath68 with left and right endpoints  @xmath69 and  @xmath70 , respectively , it needs to update the maximum active range of each label @xmath6 that is in conflict with @xmath20 .",
    "so , for each label @xmath6 in conflict with  @xmath20 , we query @xmath6 s binary search tree @xmath65 with @xmath69 and @xmath70 .",
    "this allows us to obtain all @xmath34 maximal intervals of @xmath6 that partly overlap with , or are completely contained in @xmath68 .",
    "the intervals completely contained in @xmath68 need to be removed from @xmath65 and @xmath64 , while the intervals ( at most two ) that are only partly contained in @xmath68 are shrunk or split .",
    "the query on the binary search tree requires @xmath71 time , where @xmath34 is the number of reported intervals .",
    "updating both @xmath65 and @xmath64 requires then @xmath72 time for the intervals that get shrunk ( or split ) .",
    "deleting the elements is more costly , but since in both the binary tree as well as the heap there can be at most @xmath57 elements , and we insert and remove each element at most once , we can conclude that inserting and deleting requires per binary tree and heap each in total at most @xmath73 time .",
    "since there are @xmath74 heaps and trees , this requires in total @xmath67 time .",
    "we now summarize these results .",
    "the initialization can be done in @xmath62 time . in each step",
    "we require @xmath55 time to determine and remove the label @xmath20 with maximum active range from the global heap .",
    "then , we shrink or split the intervals of labels that are in conflict with @xmath20 in @xmath73 time .",
    "we need to update the global heap since the maximum active range of the @xmath57 labels that are in conflict with @xmath20 might have changed .",
    "this update requires @xmath75 time .",
    "finally , we need to repeat this step @xmath74 times , yielding @xmath76 time . as stated above , the insertion and deletion into the label s own binary trees and maximum heaps requires in total @xmath62 time , yielding a total time complexity of @xmath62 .",
    "the space consumption is dominated by the  @xmath74 trees , each of size  @xmath57 .",
    "thus the algorithm requires  @xmath52 space .",
    "[ [ approximation - for - unit - square - labels . ] ] approximation for unit square labels .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    although it was stated at the beginning of the section  [ sec : heuristics - maxtotal ] that , in general , we can not prove any quality criteria for the presented algorithms , for the special case that labels are unit squares , we can show that is an approximation algorithm with approximation ratio  @xmath77 .",
    "this is due to a result by gemsa et al .",
    "* lemma 1 and lemma 2 ) in which the authors consider a similar problem .",
    "the results of both lemmas imply the following .",
    "[ lem : gemsaetal ] let  @xmath7 be a set of unit square labels and let  @xmath78 . for any rotation angle  @xmath79",
    "there are at most eight pairwise disjoint unit square labels in  @xmath16 that overlap with  @xmath20 .",
    "since , in each step of the algorithm , we select the label @xmath20 with maximum active range , we can conclude by lemma  [ lem : gemsaetal ] that the cost of choosing @xmath20 is at most eight times its maximum active range .",
    "we summarize this in the following .",
    "is a 1/8-approximation algorithm for maxtotalin the case that all labels are unit squares .",
    "our previous 1/4-approximation  @xcite is based on the _ line stabbing _ or _ shifting _ technique by hochbaum and maass  @xcite , which has been applied before to _",
    "static _ labeling problems for ( non - rotating ) unit - height labels , e.g. ,  @xcite .",
    "we sketch the idea of the algorithm for unit squares , but note that it applies in a similar way to rectangular labels with bounded aspect ratio and that it can be generalized to a ptas  @xcite .",
    "the first step of the algorithm is to subdivide the plane into square grid cells with side length  @xmath80 .",
    "each cell is addressed by a row and column index .",
    "we obtain a partition of the initial instance into four different subsets by deleting the points in every other row and every other column . in each subset",
    "the cells now have a distance to each other that is at least @xmath80 and thus , labels that are in different cells _ can not _ intersect each other ; see figure  [ fig : qapx ] .",
    "note that for hard conflicts we need to consider the area within distance @xmath81 of each cell .",
    "if we solve all four subsets optimally , at least one of the solutions is a 1/4-approximation for the entire instance due to the pigeon - hole principle .",
    "to the cell  ( 3 ,  2 ) . ]    to find the optimal solution for a single grid cell we observed that there can only be a constant number of labels in each grid cell  @xcite .",
    "further , we observed that this implies that also the number of conflict events in each grid cell is constant which int combination with ( * ? ? ? * lemma",
    "4 ) means that the optimal solution can be obtained by a simple brute force approach in @xmath82 time per cell , which results in an overall running time of @xmath83 .      in this section",
    "we present an ilp - based approach to find optimal solutions for maxtotal .",
    "this is justified since maxtotalis np - hard and we can not hope for an efficient algorithm unless @xmath84 .",
    "we note that the same ilp formulation can also be used in the 1/4-approximation algorithm to compute an optimal solution within each grid cell .",
    "the ilp formulation given is similar to that of gemsa et al .",
    "@xcite .",
    "the key idea of the ilp presented here is to determine regular active ranges induced by the ordered set of all conflict events .",
    "our model contains for each label @xmath20 and each interval @xmath85 a binary decision variable , which indicates whether or not @xmath20 is active during  @xmath85 .",
    "we add constraints to ensure that ( i ) no two conflicting labels are active at the same time within their conflict range and ( ii ) at most @xmath34 disjoint contiguous active ranges can be selected for each label as required in the @xmath34r - model .",
    "[ [ model . ] ] model .",
    "+ + + + + +    for simplicity we assume in this section that the length of each conflict range is strictly larger than  0 .",
    "this assumption is not essential for our ilp formulation , but makes the description easier .",
    "let @xmath86 be the ordered set of conflict events that also contains  0 and  @xmath1 , and let @xmath87 $ ] be the interval between the @xmath88-th and the @xmath89-th element in @xmath86 .",
    "we call such an interval @xmath87 $ ] an _ atomic interval _ and always consider its index @xmath88 modulo @xmath90 . for each label @xmath63 and for each atomic interval",
    "@xmath87 $ ] we introduce two binary variables @xmath91 and @xmath92 to our model .",
    "we refer to the variables of the form @xmath91 as _ activity variables_. the intended meaning of @xmath91 is that its value is  1 if and only if the label @xmath6 is active during the @xmath88-th atomic interval ; otherwise @xmath91 has value  0 .",
    "we use the binary variables @xmath92 to indicate the start of a new active range and to restrict their total number to @xmath34 .",
    "this is achieved by adding the following constraints to our model . @xmath93",
    "the effect of constraint   is that it is only possible to start a new active range for label @xmath6 with atomic interval @xmath87 $ ] ( i.e. , @xmath94 and @xmath95 ) if we account for that range by setting @xmath96 . due to constraint",
    "this can happen at most  @xmath34 times per label .",
    "we can also allow arbitrarily many active ranges per label as in the @xmath35r - model by completely omitting the variables @xmath92 and the above constraints .",
    "it remains to guarantee that no two labels can be active when they are in conflict .",
    "this can be done straightforwardly since we can compute for which atomic intervals two labels are in conflict and we ensure that not both activity variables can be set to  1 . more specifically , for every pair of labels  @xmath97 and for every atomic interval @xmath88 during which they are in conflict , we add the constraint @xmath98    optionally , incorporating hard conflicts can also be done easily as a hard conflict simply excludes certain atomic intervals from being part of an active range .",
    "we determine for each label all such atomic intervals in a preprocessing step and set the corresponding activity variables to  0 .    among all feasible solutions that satisfy the above constraints , we maximize the following objective function : @xmath99|$ ] , which is equivalent to the total activity @xmath31 of the induced labeling @xmath22 .",
    "this ilp considers only regular active ranges , since label activities change states only at conflict events .",
    "however , by  ( * ? ? ?",
    "* lemma 4 ) , there always exists an optimal solution that is regular , and hence we are guaranteed to find a globally optimal solution .",
    "[ [ minimizing - the - number - of - active - ranges - in - the - ilp . ] ] minimizing the number of active ranges in the ilp .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in section  [ sec : prelim ] we explained that , in order to reduce flickering , we require that each label has at most one active range",
    ". however , we might be able to reduce flickering even more by finding among all optimal solutions the one that has the fewest active ranges .",
    "we can modify our ilp to accommodate for this by modifying the objective function slightly .",
    "let  @xmath100 denote the length of a shortest atomic interval ( recall that all atomic intervals are assumed to have positive length ) .",
    "thus , whenever a label is active during an atomic interval , the total activity increases by at least  @xmath101 . to minimize the number of active ranges , we substract @xmath102 from the objective function for each active range . in this way , a solution with larger total activity is always preferred over a solution with less total activity , while among two solutions with the same total activity the one with fewer active ranges has the greater objective value",
    "hence , to minimize the number of active ranges while maintaining optimality , we modify the objective function to @xmath103| - b_i^j \\cdot s/2 \\right)$ ] . to ensure that if label  @xmath6 is active at any time , then at least one of the variables  @xmath92 is  @xmath104 , we also add the following constraints . @xmath105 without this constraint , it would be possible to have a label  @xmath6 active for the whole range  @xmath33 but with  @xmath106 for all  @xmath107 .",
    "we note that it follows from the proof of lemma 4 in  @xcite that also for the modified problem there always exists an optimal solution that is regular .",
    "hence an optimal solution to the above ilp is indeed a global optimum .",
    "we have now given a complete description of our ilp model , and now turn towards the analysis of the number of variables and constraints necessary for our model . let  @xmath108 be the number of conflict events and @xmath50 be the maximum number of conflict events per label in a maxtotalinstance , respectively . in the worst case",
    "the number of constraints that ensure that the solution is conflict - free ( i.e. , constraint  ) is @xmath109 per label , whereas we require only @xmath110 constraints of the other types of constraints per label .",
    "we conclude the results of this section in the following theorem .",
    "the ilp ( 1)(3 ) solves maxtotaland has at most @xmath111 variables and @xmath112 constraints , where @xmath49 is the number of labels , @xmath108 the number of conflict events , and @xmath50 the maximum number of conflicts per label .",
    "in this section we present the experimental evaluation of different labeling strategies based on the consistency models and algorithms introduced in sections  [ sec : prelim ] and  [ sec : algos ] .",
    "we implemented our algorithms in c++ and compiled with gcc  4.7.1 using optimization level ` -o3 ` .",
    "as ilp solver we used gurobi 5.6 ] .",
    "the running time experiments were performed on a single core of an amd opteron 2218 processor running linux 2.6.34.10 .",
    "the machine is clocked at @xmath113{ghz}$ ] , has @xmath114{gib}$ ] of ram and @xmath115{mib}$ ] of l2 cache .",
    "before we discuss our results we introduce the benchmark instances .",
    "the reported running times in the following are always measured as wall - clock time ( as opposed to pure cpu time ) .      since our labeling problem is immediately motivated by dynamic mapping applications , we focus on gathering real - world data for the evaluation . as data source we used the publicly available data provided by the openstreetmap project ] .",
    "we extracted the latitudes , longitudes and names of _ all _ cities with a population of at least @xmath116 for six countries ( france , germany , italy , japan , united kingdom , and the united states of america ) and created maps at three different scales .    to obtain a valid labeling instance several additional steps are necessary .",
    "first , the width and height of each label need to be chosen .",
    "second , we need to map latitude and longitude to the two - dimensional plane .",
    "third , recall that the input is a statically labeled map , and hence we need to compute such a static input labeling . for the first issue we used the same font that is used in google maps , i.e. , ` roboto thin ` ] .",
    "the dimensions of each label were obtained by rendering the label s corresponding city name in ` roboto thin ` with font size  13 , computing its bounding box , and adding a small additional buffer . for obtaining two - dimensional coordinates from the latitude and longitude of each point , we use the popular mercator projection . for the map",
    "scales we again wanted to be close to google maps .",
    "hence , we used the mercator projection ( where we approximate the ellipsoid with a sphere of radius @xmath117 km ) for three different scales ( 65 pixel @xmath118 20 km , 50 km , 100 km ) for each country .",
    "for simplicity we refer to the scale of 65 pixel @xmath118 20 km only by 20 km ( and likewise for the remaining scales ) .",
    "the last remaining step was to compute a valid input labeling .",
    "for this we used the 4p fixed - position model  @xcite and solved a simple ilp model to obtain a weighted maximum independent set in the label conflict graph , in which any two conflicting label positions are linked by an edge and weights are proportional to the population .",
    "table  [ tab : exp : input : countries ] shows the characteristics of our benchmark data .",
    "we also obtained much larger instances than the country instances described in table  [ tab : exp : input : countries ] .",
    "we chose berlin , new york , london , and paris and extracted the names , as well as longitude and latitude , of all restaurants in each of these cities from openstreetmap . to obtain valid input data we conducted the same steps as described for the country instances with `",
    "roboto thin ` but with font size  8 and the three scales 65pixel @xmath118 20 m , 50 m , 100 m .",
    "we report the number of labels for these instances in table  [ tab : exp : input : restaurants ] .",
    "both sets of benchmark data can be downloaded from our website ] .",
    ".number of labels in each country instance , the number of labels in the largest connected component ( lcc ) and the number of connected components ( cc ) in the conflict graph . [ cols= \" < ,",
    "< , < , < , < , < , < \" , ]     we observe that the results for all algorithms in both models are very close to the maximal achievable total activity in the @xmath35r model . even in the most dense instance in the 1r hard - conflict model ,",
    "the worst greedy algorithm achieves still on average about 86% of the maximal achievable total activity with a running time of about 0.8s .",
    "the quality of the greedy algorithms is slightly better in the 1r soft - conflict model and the running time is much smaller ( around 3040ms ) .",
    "the combination of 1/4-approximation and greedy heuristic does perform slightly better , but the difference is minuscule .",
    "however , the running time differs drastically .",
    "while in the country instances before , the average running time was less than 1s in both the 1r hard - conflict and the 1r soft - conflict model , the running time for the combination of 1/4-approximation and greedy heuristic is much slower . for the most dense instances the running time is on average one minute in the hard - conflict model and for the soft - conflict model about 20 minutes .",
    "however , at this point we need to mention that the running times for the instances vary quite significantly and the only conclusion we can draw safely from the detailed data is that this approach is much slower ( even for the easiest instance the approach required for the soft - conflict model about 1 minute to compute the solution ) , but drawing conclusions beyond this is impossible .",
    "the results indicate that the greedy algorithms in the 1r soft - conflict model produce solutions that are very close to the maximum possible total activity while the algorithms require only few milliseconds in running time .",
    "this strengthens our conclusion that the 1r model in combination with any of the three greedy algorithms is the best strategy for labeling rotating maps . whether to use the soft - conflict model or",
    "the hard - conflict model is a design choice that should depend on the requirements of the actual application .    in order to give a final recommendation for an algorithm , it is necessary to make a choice on the time - quality trade - off that is acceptable in a particular situation .",
    "if running time is not the primary concern , e.g. , for offline applications with high computing power available , we can recommend the ilp , which ran reasonably fast in our experiments , at least for the smaller country instances . on the other hand ,",
    "if computing power is limited , instances are large , or real - time labeling is necessary , e.g. , on a mobile device , all three greedy heuristics can be recommended as the methods of choice ; a slight advantage of was observed in our experiments .",
    "all three algorithms run very fast ( a few milliseconds ) and empirically produce high activities of more than @xmath119 of the optimum solution .",
    "if one wants to invest some extra running time , the combination of with a greedy algorithm may be of interest as it produces slightly better solutions than the stand - alone greedy algorithms and is much faster than the ilp .",
    "in this work , we evaluated different strategies for labeling dynamic maps that allow continuous rotation , where a labeling strategy consists of a consistency model and a labeling algorithm . in the first part of the evaluation , we considered the quality of optimal solutions in different consistency models .",
    "it turned out that the restriction to one or two active ranges per label ( 1r- and 2r - models ) yields the best compromise in terms of low flickering and high total activity value of more than 95% of the upper bound obtained from the unrestricted model ( @xmath35r ) .",
    "additionally , treating all pairwise label conflicts as soft conflicts increased the total activity values between 8% and 32% at the cost of occasional occlusion of unlabeled point features .",
    "in the second part of the evaluation , we investigated the performance of three new greedy heuristics and our previous 1/4-approximation algorithm  @xcite in terms of labeling quality and running time .",
    "it turned out that the greedy heuristics performed very well in both total activity ( well above 90% ) and running time ( a few ms ) .",
    "the unmodified 1/4-approximation performs much worse , but the combination of 1/4-approximation and greedy heuristics yields slightly higher total activity than the greedy heuristics alone ; the running time , however , can grow to several seconds . in conclusion , we believe that the 1r model in combination with any of the three greedy algorithms is , in most cases , the best labeling strategy for labeling dynamic rotating maps . whether the soft - conflict or the hard - conflict model is more appropriate depends on requirements of the application .",
    "m.  berg and d.  h. gerrits . labeling moving points with a trade - off between label speed and label overlap . in h.",
    "bodlaender and g.  italiano , editors , _ proc .",
    "21th annu .",
    "european symp .",
    "algorithms ( esa13 ) _ , volume 8125 of _ lecture notes comput .",
    "_ , pages 373384 .",
    "springer verlag , 2013 .",
    "a.  gemsa , b.  niedermann , and m.  nllenburg . .",
    "in _ proc .",
    "alg . and comput .",
    "( isaac13 ) _ , volume 8283 of _ lecture notes comput .",
    "_ springer verlag , 2013 .",
    "full version available at http://arxiv.org/abs/1309.3963 .",
    "a.  gemsa , m.  nllenburg , and i.  rutter . .",
    "in f.  dehne , j.  iacono , and j .-",
    "r . sack , editors , _ proc .",
    "12th internat .",
    "workshop on algorithms and data structures ( wads11 ) _ , volume 6844 of _ lecture notes comput .",
    "_ , pages 451462 .",
    "springer verlag , august 2011 .",
    "full version available at http://arxiv.org/abs/1104.5634 .",
    "m.  vaaraniemi , m.  treib , and r.  westermann .",
    "temporally coherent real - time labeling of dynamic scenes . in _ proc .",
    "3rd internat .",
    "conf . on computing for geospatial research and applications _",
    ", com.geo 12 , pages 17:117:10 .",
    "acm , 2012 ."
  ],
  "abstract_text": [
    "<S> we consider the following problem of labeling points in a dynamic map that allows rotation . </S>",
    "<S> we are given a set of points in the plane labeled by a set of mutually disjoint labels , where each label is an axis - aligned rectangle attached with one corner to its respective point . </S>",
    "<S> we require that each label remains horizontally aligned during the map rotation and our goal is to find a set of mutually non - overlapping _ active _ labels for every rotation angle @xmath0 so that the number of active labels over a full map rotation of @xmath1 is maximized .    </S>",
    "<S> we discuss and experimentally evaluate several labeling models that define additional consistency constraints on label activities in order to reduce flickering effects during monotone map rotation . </S>",
    "<S> we introduce three heuristic algorithms and compare them experimentally to an existing approximation algorithm and exact solutions obtained from an integer linear program . </S>",
    "<S> our results show that on the one hand low flickering can be achieved at the expense of only a small reduction in the objective value , and that on the other hand the proposed heuristics achieve a high labeling quality significantly faster than the other methods . </S>"
  ]
}
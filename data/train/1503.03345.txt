{
  "article_text": [
    "tower of hanoi is a classical puzzle , a one - player game @xcite . here",
    "we let two players , @xmath2  ( first player ) and @xmath3  ( second player ) , alternate turns and play a game on three or more pegs with various numbers of disks .",
    "we will begin by analyzing games under the following _ impartial _ rules @xcite .",
    "let @xmath4 and @xmath5 be positive integers .",
    "two players alternate in transferring precisely one out of @xmath1 disks ( of different sizes ) on @xmath6 pegs .",
    "the starting position is as usual for the tower of hanoi ; _ the tower _",
    "( i.e. , all the disks ) are placed on the starting peg in decreasing size , and at each stage of the game , a larger disk can not be placed on top of a smaller .",
    "the current player can not move the disk that the previous player just moved .",
    "the game ends when the tower has been transferred to some predetermined final peg .",
    "it is not allowed to transfer the tower to a non - final peg .",
    "we detail five ending conditions in section  [ s2 ] .",
    "let us exemplify our game with a position on seven disks and three pegs , and where the disk at the dashed peg has just been moved by the previous player and hence can not be moved by the current player ; below it we find its two legal options .",
    "( 25,0 ) ; ( 4.5,0 )  ( 4.5,4 ) ; ( 12.5,0 ) ",
    "( 12.5,4 ) ; ( 20.5,0 ) ",
    "( 20.5,4 ) ; ( 1,0 ) rectangle ( 8,0.5 ) ; ( 1.5,0.5 ) rectangle ( 7.5,1 ) ; ( 2,1 ) rectangle ( 7,1.5 ) ; ( 10.5,0 ) rectangle ( 14.5,0.5 ) ; ( 19,0 ) rectangle ( 22,0.5 ) ; ( 19.5,0.5 ) rectangle ( 21.5,1 ) ; ( 20,1 ) rectangle ( 21,1.5 ) ;    move options :    ( 0,0 )  ( 25,0 ) ; ( 4.5,0 )  ( 4.5,4 ) ; ( 12.5,0 )  ( 12.5,4 ) ; ( 20.5,0 )  ( 20.5,4 ) ; ( 1,0 ) rectangle ( 8,0.5 ) ; ( 1.5,0.5 ) rectangle ( 7.5,1 ) ; ( 2,1 ) rectangle ( 7,1.5 ) ; ( 10.5,0 ) rectangle ( 14.5,0.5 ) ; ( 12,.5 ) rectangle ( 13,1 ) ; ( 19,0 ) rectangle ( 22,0.5 ) ; ( 19.5,0.5 ) rectangle ( 21.5,1 ) ;    ( 0,0 )  ( 25,0 ) ; ( 4.5,0 )  ( 4.5,4 ) ; ( 12.5,0 )  ( 12.5,4 ) ; ( 20.5,0 )  ( 20.5,4 ) ; ( 1,0 ) rectangle ( 8,0.5 ) ; ( 1.5,0.5 ) rectangle ( 7.5,1 ) ; ( 2,1 ) rectangle ( 7,1.5 ) ; ( 4,1.5 ) rectangle ( 5,2 ) ; ( 10.5,0 ) rectangle ( 14.5,0.5 ) ; ( 19,0 ) rectangle ( 22,0.5 ) ; ( 19.5,0.5 ) rectangle ( 21.5,1 ) ;    in a two - player game , a given winning condition usually provides the incitement to play .",
    "we can adapt the winning condition from the one - player game : the player who plays the last disk ( on top o the rest of the tower ) wins . and",
    "indeed , this corresponds to a classical convention for two - player games , that a player who can not move loses ; this is called _",
    "normal play_. if no player can force a win in this setting , then the game is declared drawn .",
    "one of our first observations , in section  [ s2 ] , is that in spite of the loopy nature of our game(s ) , if we play on just three pegs , @xmath2  will win the normal play ( given perfect play ) . @xmath3",
    "s moves will be forced throughout the game and the proof is an adaptation of the well known one - player result .",
    "in fact , @xmath2 s moves also have a restriction ; she will always have to move the smallest disk .",
    "but , as we will see , it will not limit her capacities in the slightest . in that section",
    ", we also note that the game is drawn on four or more pegs .    as a side note , a complete theory of the disjunctive sum of loopy impartial games ( on finite numbers of positions )",
    "has recently been developed @xcite . in a disjunctive sum of tower of hanoi games ,",
    "@xmath2  would not be able to control all moves , because the move sequence is not necessarily alternating in each game component .",
    "therefore , in spite of the simple solutions of these normal play games , the disjunctive sum of games should offer new insights .",
    "we also note that it is non - trivial to count the minimal number of moves between two arbitrary tower of hanoi positions on three pegs @xcite , so we guess that a computation of generalized sprague - grundy values of the game will be difficult . in this paper , however , we build on another recent development of the original tower of hanoi .    in @xcite ,",
    "some variations of tower of hanoi with some weighted cost are studied : in @xcite , the authors consider the recurrence relations generalized from the one by the frame - stewart algorithm for the @xmath7-peg tower of hanoi problem , by giving arbitrary positive integers as coefficients of the recurrences and obtained the exact formula for them . in @xcite ,",
    "the authors consider another generalization for the three - peg tower of hanoi problem , where each undirected edge between pegs has a positive weight and the problem is to transfer all the disks from one peg to another with the minimum sum of weights , instead of the minimum number of moves , and obtain an optimal algorithm for that problem .",
    "a two - player interpretation of the weighted setting becomes the following _ scoring game _",
    ", where the gain for a move from peg  @xmath8 to peg  @xmath9 ( or reverse ) , equals a given real weight @xmath10 .",
    "play the above impartial game , but the player who obtains the largest score when the game ends wins ; if the game terminates and none of the players can claim a victory then the game is a tie .",
    "we also adapt the convention of drawn games from normal play , so a game is declared a draw if no player can force a win , by terminating the game .",
    "disjunctive sum theory for scoring games has been studied e.g. @xcite , and partial theories have been developed in different settings , but none yet for loopy scoring games .",
    "we will only consider the solution of a single game in this paper .",
    "our main result is that @xmath2  wins nearly all scoring two - player tower of hanoi games on three pegs .",
    "the reason is partly the same as for the normal play setting , but in this setting the optimal move sequence varies depending on the given weights , and the proof is non - trivial .",
    "the only case when @xmath2  can not force a win is when all weights are equal and non - positive ; otherwise she can attain an arbitrary high score by adhering to certain intermediate repetitive patterns .",
    "questions of termination are often very hard ( e.g. turing machines ) , but in our three - peg setting it will be easy to distinguish drawn from winning .",
    "the first player , namely @xmath2 , controls all the moves under optimal play ; if she can not win , it will be easy to play drawn ( see also section  [ s4 ] ) .",
    "the question of minimizing the number of moves in the two - player setting is studied in section  [ s6 ] .",
    "consider the following variations of the two - player tower of hanoi ; a winning condition is invoked when the tower has been transferred to    1 .",
    "[ ec1 ] a given peg , distinct from the starting peg ; 2 .",
    "[ ec5 ] the starting peg , but the largest disk has to be moved at least once ; 3 .",
    "[ ec6 ] the starting peg , but the smallest disk has to be moved at least once ; 4 .",
    "[ ec3 ] any peg , but the largest disk has to be moved at least once ; and 5 .",
    "[ ec4 ] any peg , but the smallest disk has to be moved at least once .    by convention , it is not meaningful to pile up all disks on a final peg .",
    "we disallow such moves in the two - player setting . therefore ( ec2 ) and ( ec3 ) are not applicable when @xmath11 .",
    "this rule is a natural extension of the one - player setting . in figure  [ f1 ] to figure  [ f4 ] , we illustrate the idea of going from the one - player setting to the two - player setting using the standard graph representation",
    ". each edge will now be directed , and the direction depends on the previous move .",
    "we did not indicate the directed edges in figure  [ f3 ] , because it depends on the initial choice , once the first move is made the minimal path is given . in figure  [ f5 ]",
    "we sketch how the tower of hanoi game converges to the sierpinski gasket .",
    "( 7,10 ) ; ( 0,0 ) ",
    "( 14,0 ) ; ( 7,10 ) ",
    "( 14,0 ) ;    ( 0,0 ) ",
    "( 8,0 ) ; ( 1.5,0 ) ",
    "( 1.5,2 ) ; ( 4,0 ) ",
    "( 4,2 ) ; ( 6.5,0 ) ",
    "( 6.5,2 ) ; ( 1,0 ) rectangle ( 2,0.5 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 ) ",
    "( 1.5,2 ) ; ( 4,0 ) ",
    "( 4,2 ) ; ( 6.5,0 )  ( 6.5,2 ) ; ( 3.5 , 0 ) rectangle ( 4.5 , 0.5 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 )  ( 1.5,2 ) ; ( 4,0 )  ( 4,2 ) ; ( 6.5,0 )  ( 6.5,2 ) ; ( 6 , 0 ) rectangle ( 7 , 0.5 ) ;    ( 0,0 )  ( 7,10 ) ; ( 0,0 )  ( 14,0 ) ; ( 7,10 )  ( 14,0 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 )  ( 1.5,2 ) ; ( 4,0 )  ( 4,2 ) ; ( 6.5,0 )  ( 6.5,2 ) ; ( 1,0 ) rectangle ( 2,0.5 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 )  ( 1.5,2 ) ; ( 4,0 )  ( 4,2 ) ; ( 6.5,0 )  ( 6.5,2 ) ; ( 3.5 , 0 ) rectangle ( 4.5 , 0.5 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 )  ( 1.5,2 ) ; ( 4,0 )  ( 4,2 ) ; ( 6.5,0 )  ( 6.5,2 ) ; ( 6 , 0 ) rectangle ( 7 , 0.5 ) ;    ( 0,0 )  ( 7,10 ) ; ( 0,0 )  ( 14,0 ) ; ( 7,10 )  ( 14,0 ) ; ( 4.6 , 6.6 ) ",
    "( 9.4 , 6.6 ) ; ( 4.6 , 0 )  ( 2.3 , 3.3 ) ;",
    "( 9.4 , 0 )  ( 11.7 , 3.3 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 ) ",
    "( 1.5,2 ) ; ( 4,0 ) ",
    "( 4,2 ) ; ( 6.5,0 ) ",
    "( 6.5,2 ) ; ( 0.5,0 ) rectangle ( 2.5,0.5 ) ; ( 6,0 ) rectangle ( 7,0.5 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 )  ( 1.5,2 ) ; ( 4,0 )  ( 4,2 ) ; ( 6.5,0 ) ",
    "( 6.5,2 ) ; ( 3,0 ) rectangle ( 5,0.5 ) ; ( 6,0 ) rectangle ( 7,0.5 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 )  ( 1.5,2 ) ; ( 4,0 )  ( 4,2 ) ; ( 6.5,0 )  ( 6.5,2 ) ; ( 1,0 ) rectangle ( 2,0.5 ) ; ( 5.5,0 ) rectangle ( 7.5,0.5 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 ) ",
    "( 1.5,2 ) ; ( 4,0 ) ",
    "( 4,2 ) ; ( 6.5,0 ) ",
    "( 6.5,2 ) ; ( 3,0 ) rectangle ( 5,0.5 ) ; ( 1,0 ) rectangle ( 2,0.5 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 )  ( 1.5,2 ) ; ( 4,0 )  ( 4,2 ) ; ( 6.5,0 )  ( 6.5,2 ) ; ( 0.5,0 ) rectangle ( 2.5,0.5 ) ; ( 1,0.5 ) rectangle ( 2,1 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 )  ( 1.5,2 ) ; ( 4,0 ) ",
    "( 4,2 ) ; ( 6.5,0 ) ",
    "( 6.5,2 ) ; ( 0.5,0 ) rectangle ( 2.5,0.5 ) ; ( 3.5,0 ) rectangle ( 4.5,0.5 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 )  ( 1.5,2 ) ; ( 4,0 )  ( 4,2 ) ; ( 6.5,0 )  ( 6.5,2 ) ; ( 3.5,0 ) rectangle ( 4.5,0.5 ) ; ( 5.5,0 ) rectangle ( 7.5,0.5 ) ;    ( 0,0 ) ",
    "( 8,0 ) ; ( 1.5,0 ) ",
    "( 1.5,2 ) ; ( 4,0 ) ",
    "( 4,2 ) ; ( 6.5,0 ) ",
    "( 6.5,2 ) ; ( 3.5,0.5 ) rectangle ( 4.5,1 ) ; ( 3,0 ) rectangle ( 5,0.5 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 ) ",
    "( 1.5,2 ) ; ( 4,0 ) ",
    "( 4,2 ) ; ( 6.5,0 )  ( 6.5,2 ) ; ( 5.5,0 ) rectangle ( 7.5,0.5 ) ; ( 6,0.5 ) rectangle ( 7,1 ) ;    ( 0,0 )  ( 7,10 ) ; ( 0,0 )  ( 14,0 ) ; ( 7,10 )  ( 14,0 ) ; ( 0,0 ) ",
    "( 4.6 , 6.6 ) ; ( 0,0 ) ",
    "( 9.4 , 0 ) ; ( 11.7 , 3.3 ) ",
    "( 9.4 , 6.6 ) ; ( 4.6 , 6.6 ) ",
    "( 9.4 , 6.6 ) ; ( 4.6 , 0 )  ( 2.3 , 3.3 ) ; ( 9.4 , 0 )  ( 11.7 , 3.3 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 )  ( 1.5,2 ) ; ( 4,0 )  ( 4,2 ) ; ( 6.5,0 )  ( 6.5,2 ) ; ( 0.5,0 ) rectangle ( 2.5,0.5 ) ; ( 6,0 ) rectangle ( 7,0.5 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 )  ( 1.5,2 ) ; ( 4,0 )  ( 4,2 ) ; ( 6.5,0 )  ( 6.5,2 ) ; ( 3,0 ) rectangle ( 5,0.5 ) ; ( 6,0 ) rectangle ( 7,0.5 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 )  ( 1.5,2 ) ; ( 4,0 )  ( 4,2 ) ; ( 6.5,0 ) ",
    "( 6.5,2 ) ; ( 1,0 ) rectangle ( 2,0.5 ) ; ( 5.5,0 ) rectangle ( 7.5,0.5 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 )  ( 1.5,2 ) ; ( 4,0 )  ( 4,2 ) ; ( 6.5,0 )  ( 6.5,2 ) ; ( 3,0 ) rectangle ( 5,0.5 ) ; ( 1,0 ) rectangle ( 2,0.5 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 )  ( 1.5,2 ) ; ( 4,0 )  ( 4,2 ) ; ( 6.5,0 )  ( 6.5,2 ) ; ( 0.5,0 ) rectangle ( 2.5,0.5 ) ; ( 1,0.5 ) rectangle ( 2,1 ) ;    ( 0,0 ) ",
    "( 8,0 ) ; ( 1.5,0 ) ",
    "( 1.5,2 ) ; ( 4,0 ) ",
    "( 4,2 ) ; ( 6.5,0 ) ",
    "( 6.5,2 ) ; ( 0.5,0 ) rectangle ( 2.5,0.5 ) ; ( 3.5,0 ) rectangle ( 4.5,0.5 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 ) ",
    "( 1.5,2 ) ; ( 4,0 ) ",
    "( 4,2 ) ; ( 6.5,0 ) ",
    "( 6.5,2 ) ; ( 3.5,0 ) rectangle ( 4.5,0.5 ) ; ( 5.5,0 ) rectangle ( 7.5,0.5 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 )  ( 1.5,2 ) ; ( 4,0 ) ",
    "( 4,2 ) ; ( 6.5,0 ) ",
    "( 6.5,2 ) ; ( 3.5,0.5 ) rectangle ( 4.5,1 ) ; ( 3,0 ) rectangle ( 5,0.5 ) ;    ( 0,0 )  ( 8,0 ) ; ( 1.5,0 )  ( 1.5,2 ) ; ( 4,0 )  ( 4,2 ) ; ( 6.5,0 )  ( 6.5,2 ) ; ( 5.5,0 ) rectangle ( 7.5,0.5 ) ; ( 6,0.5 ) rectangle ( 7,1 ) ;    ( 0,0 )  ( 7,10 ) ; ( 0,0 ) ",
    "( 14,0 ) ; ( 7,10 )  ( 14,0 ) ;    ( 0,0 ) ",
    "( 7,10 ) ; ( 0,0 ) ",
    "( 14,0 ) ; ( 7,10 ) ",
    "( 14,0 ) ; ( 4.6 , 6.6 ) ",
    "( 9.4 , 6.6 ) ; ( 4.6 , 0 )  ( 2.3 , 3.3 ) ; ( 9.4 , 0 )  ( 11.7 , 3.3 ) ;    ( 0,0 )  ( 7,10 ) ; ( 0,0 )  ( 14,0 ) ; ( 7,10 )  ( 14,0 ) ; ( 4.6 , 6.6 )  ( 9.4 , 6.6 ) ; ( 4.6 , 0 )  ( 2.3 , 3.3 ) ; ( 9.4 , 0 )  ( 11.7 , 3.3 ) ;    ( 0,0 )  ( 7,10 ) ; ( 0,0 ) ",
    "( 14,0 ) ; ( 7,10 ) ",
    "( 14,0 ) ; ( 4.6 , 6.6 ) ",
    "( 9.4 , 6.6 ) ; ( 4.6 , 0 )  ( 2.3 , 3.3 ) ; ( 9.4 , 0 )  ( 11.7 , 3.3 ) ;",
    "in this section we regard ` an odd or even number of moves ' in the one - player game in the same sense as for the two - player games ; no disk will be moved twice unless some other disk has been moved between .",
    "each odd numbered move thus moves the smallest disk , and in fact we could equivalently have chosen to let @xmath2  lead the game .",
    "the initial position throughout the paper is all disks on peg  1 .",
    "[ thm:1 ] for three pegs , @xmath12 disks can be transferred from an initial position to any position using an odd number of moves .",
    "that is , in the two - player version , the first player can force play to any position in an odd number of moves .",
    "we use induction on @xmath1 and the fact that the smallest disk is always moved on the odd numbered moves . for @xmath13 ,",
    "table  [ table:1 ] gives examples of sequences for transferring the two disks from peg  1 to each of the nine possible positions , using in each case an odd number of moves .",
    "suppose now that the result is true for @xmath12 disks .",
    "we want to transfer @xmath14 disks from an initial position , say from peg  1 , to a position @xmath15 .",
    "we distinguish different cases depending on the position of the largest disk ld in @xmath15 .",
    "if ld is on peg  1 in @xmath15 , we have just to transfer the @xmath1 other disks from peg  1 to the position @xmath15 and we do it by using an odd number of moves by induction hypothesis .",
    "otherwise , if ld is on , say peg  2 in @xmath15 , we transfer the @xmath1 smallest disks from peg  1 to peg  3 using @xmath16 moves , the ld from peg  1 to peg  2 , and finally the @xmath1 smallest disks from peg  3 to the position @xmath15 using @xmath17 moves .",
    "thus , we have transferred the @xmath14 disks from peg  1 to the position @xmath15 using @xmath18 moves and , since @xmath16 and @xmath17 are odd by induction hypothesis , this number of moves is odd .",
    "if ld is on peg 3 , the argument is the same .",
    "this completes the proof .",
    "( 8,0 ) ; ( 1.5,0 )  ( 1.5,2 ) ; ( 4,0 ) ",
    "( 4,2 ) ; ( 6.5,0 )  ( 6.5,2 ) ; ( 0.5,0 ) rectangle ( 2.5,0.5 ) ; ( 1,0.5 ) rectangle ( 2,1 ) ;    & @xmath19 & @xmath20 +    ( 0,0 ) ",
    "( 8,0 ) ; ( 1.5,0 ) ",
    "( 1.5,2 ) ; ( 4,0 ) ",
    "( 4,2 ) ; ( 6.5,0 ) ",
    "( 6.5,2 ) ; ( 0.5,0 ) rectangle ( 2.5,0.5 ) ; ( 3.5,0 ) rectangle ( 4.5,0.5 ) ;    & @xmath21 & @xmath22 +    ( 0,0 ) ",
    "( 8,0 ) ; ( 1.5,0 ) ",
    "( 1.5,2 ) ; ( 4,0 )  ( 4,2 ) ; ( 6.5,0 ) ",
    "( 6.5,2 ) ; ( 0.5,0 ) rectangle ( 2.5,0.5 ) ; ( 6,0 ) rectangle ( 7,0.5 ) ;    & @xmath23 & @xmath22 +    ( 0,0 ) ",
    "( 8,0 ) ; ( 1.5,0 ) ",
    "( 1.5,2 ) ; ( 4,0 ) ",
    "( 4,2 ) ; ( 6.5,0 ) ",
    "( 6.5,2 ) ; ( 1,0 ) rectangle ( 2,0.5 ) ; ( 3,0 ) rectangle ( 5,0.5 ) ;    & @xmath24 & @xmath25 +    ( 0,0 ) ",
    "( 8,0 ) ; ( 1.5,0 ) ",
    "( 1.5,2 ) ; ( 4,0 ) ",
    "( 4,2 ) ; ( 6.5,0 )  ( 6.5,2 ) ; ( 3.5,0.5 ) rectangle ( 4.5,1 ) ; ( 3,0 ) rectangle ( 5,0.5 ) ;    & @xmath26 & @xmath25 +    ( 0,0 ) ",
    "( 8,0 ) ; ( 1.5,0 ) ",
    "( 1.5,2 ) ; ( 4,0 ) ",
    "( 4,2 ) ; ( 6.5,0 ) ",
    "( 6.5,2 ) ; ( 3,0 ) rectangle ( 5,0.5 ) ; ( 6,0 ) rectangle ( 7,0.5 ) ;    & @xmath27 & @xmath28 +    ( 0,0 ) ",
    "( 8,0 ) ; ( 1.5,0 ) ",
    "( 1.5,2 ) ; ( 4,0 )  ( 4,2 ) ; ( 6.5,0 ) ",
    "( 6.5,2 ) ; ( 1,0 ) rectangle ( 2,0.5 ) ; ( 5.5,0 ) rectangle ( 7.5,0.5 ) ;    & @xmath29 & @xmath25 +    ( 0,0 ) ",
    "( 8,0 ) ; ( 1.5,0 ) ",
    "( 1.5,2 ) ; ( 4,0 ) ",
    "( 4,2 ) ; ( 6.5,0 ) ",
    "( 6.5,2 ) ; ( 3.5,0 ) rectangle ( 4.5,0.5 ) ; ( 5.5,0 ) rectangle ( 7.5,0.5 ) ;    & @xmath30 & @xmath28 +    ( 0,0 ) ",
    "( 8,0 ) ; ( 1.5,0 ) ",
    "( 1.5,2 ) ; ( 4,0 ) ",
    "( 4,2 ) ; ( 6.5,0 ) ",
    "( 6.5,2 ) ; ( 5.5,0 ) rectangle ( 7.5,0.5 ) ; ( 6,0.5 ) rectangle ( 7,1 ) ;    & @xmath31 & @xmath25 +    [ cor:1 ] for three pegs , @xmath12 disks can be transferred from an initial position to any intermediate position using an even number of moves .",
    "let @xmath15 be an intermediate position and suppose that the smallest disk is on peg  p. since @xmath15 is an intermediate position , we know that one of the two other pegs , peg  q or peg  r , contains at least one disk .",
    "let qd be the smallest disk of the disks on peg  q and peg  r and suppose wlog that qd is on peg  q. let @xmath32 be the position where all the disks are positioned like in @xmath15 , except qd which is on peg  r , instead of peg  q in @xmath15 .",
    "since all the disks can be transferred from peg  1 to the position @xmath32 using an odd number moves by theorem  [ thm:1 ] , we reach the position @xmath15 by only adding one move of transferring qd from peg  r to peg  q. indeed , the smallest disk was moved in the previous move to achieve the position @xmath32 .",
    "thus , we have transferred all the disks from peg  p to the position @xmath15 using an even number of moves .",
    "in the normal play variation of the two - player tower of hanoi , @xmath2   can avoid drawn simply by adhering to the well known _ minimal algorithm _ for the one - player tower of hanoi ( @xmath3 s moves will be forced all through the game ) , using precisely @xmath0 moves .",
    "however , she can also choose freely among all odd - length move paths .",
    "[ cor:2 ] for three pegs and @xmath4 disks , the two - player tower of hanoi game terminates and the first player wins .",
    "this is true for any ending condition and also from any non - final position , provided that the previous player did not move the smallest disk .    from theorem  [ thm:1 ] ,",
    "the number of moves for the one - player tower of hanoi can be odd .",
    "we use any such sequence in the two - player game . in the one - player game , every odd move transfers the smallest of the @xmath1 disks , which here means that , in each move , @xmath2  will move the smallest of the @xmath1 disks on top of an empty peg or a larger disk .",
    "this forces @xmath3  to move a larger disk at each stage of the game .",
    "precisely one such move is possible since @xmath2 s move of the smallest disk occupies one out of precisely three pegs .",
    "since the number of moves used here is odd , @xmath2  wins .    games on four pegs are mostly loopy .",
    "[ thm:2 ] the two - player tower of hanoi on four or more pegs is a draw game if the number of disks is three or more , given any ending condition .",
    "suppose that there are three or more disks .",
    "then @xmath3 s moves are never forced ; he never has to place the second smallest disk on top of the third smallest ( analogously for @xmath2 ) .    for completeness ,",
    "let us also give the rest of the four - peg observations . for ( ec1 - 3 ) , if there are two disks , @xmath3  never has to move the largest disk to a final peg and hence the game is drawn . for ( ec1 ) , if there is only one disk , then @xmath2  wins in the first move . for ( ec2,3 ) , if there is only one disk , the special rule is invoked and @xmath3  wins in his first move . for ( ec4,5 ) , if there are two disks , @xmath3  has to move the largest disk to a final peg and hence loses .",
    "if there is only one disk , then @xmath2  wins in the first move .",
    "as stated in the introduction , for the scoring variation of the normal play setting , we provide real weights to the _ move edges _ , in the three - peg case , @xmath33 and @xmath34 respectively . as usual ,",
    "the two players alternate in moving , and a player gets @xmath10 points for a move along edge @xmath35 .",
    "the player who has most points when the game ends wins .",
    "we begin by giving the solution of the game with less than three disks .",
    "we will use @xmath36 and @xmath37 , for the total points for @xmath2  and @xmath3  respectively , of the two - player tower of hanoi game , for transferring @xmath1 disks from peg  @xmath8 to peg  @xmath9 by a given algorithm , for example the minimal algorithm , and we let the _ total score _",
    "be @xmath38 , or just @xmath39 .",
    "hence , if @xmath40 then @xmath2  wins , if @xmath41 , then the game is tie , and otherwise @xmath3  wins .",
    "[ thm:3 ] consider the two - player tower of hanoi game on two disks , three pegs and three weights of real numbers @xmath42 , @xmath43 , and @xmath34 . in case of ( ec4 ) or ( ec5 )",
    ", the first player wins if either of the following inequalities holds : @xmath44 in case of ( ec2 ) or ( ec3 ) , she wins if ( [ tag5 ] ) holds . in case of ( ec1 )",
    ", she wins if ( [ tag1 ] ) or ( [ tag2 ] ) holds .",
    "otherwise the game is a draw .",
    "if the game is played on only one disk , then ( ec2,3 ) are not applicable .",
    "for ( ec1 ) the first player wins if @xmath45 ; loses if @xmath46 ; and the game is a tie otherwise .",
    "the second player wins ( ec4,5 ) if @xmath47 and @xmath46 .",
    "the game is a tie if at least one of these weights is 0 and the others are non - positive .",
    "otherwise the first player wins .",
    "notice that in this game , @xmath2  will only move the small disk and @xmath3  will only move the large one .",
    "there are only six possibilities .",
    "if @xmath2  is not able to force a win , then she will resort to drawn , using either of the two possibilities : @xmath48 or @xmath49 where @xmath50 denotes the current player s move between peg  @xmath8 to peg  @xmath9 , and where @xmath51 denotes an infinite repetition of a given move sequence .",
    "but , in case it is to her advantage , she can interrupt either of these two sequences of moves , and use either of the following six sequences : @xmath52 @xmath53 @xmath54 @xmath55 @xmath56 @xmath57 for @xmath7 a non - negative integer . in the first two cases she will end the game on peg  3 for ( ec1,4,5 ) , corresponding to the cases ( [ tag1 ] ) and ( [ tag2 ] ) respectively . for the two middle move sequences",
    ", she will end on peg  2 for ( ec4,5 ) , corresponding to the cases ( [ tag3 ] ) and ( [ tag4 ] ) respectively . to terminate the game on peg  1 , only valid for ( ec2 - 5 ) ,",
    "she uses one of the two last move sequences .",
    "they are symmetric and both result in the inequality ( [ tag5 ] ) . in either case",
    ", the largest disk has been moved .    in each of the above cases we evaluate the value of @xmath58 and",
    "then the triangular inequalities appear , and it is clear that the difference of total points is independent of the choice of @xmath7 in each case .    . here",
    "@xmath59 and the other weights represent the @xmath60- and @xmath61-axes .",
    "the game is drawn in the white area .",
    "compare this picture with the result for @xmath62 in theorem  [ thm:4 ] , where the class of drawn games would have been represented by a single white dot at @xmath63.,scaledwidth=40.0% ]    it turns out that the case @xmath64 has fewer drawn games , allowing a simpler description ; it relies on the general ideas in section  [ s2 ] . by relabeling the pegs",
    ", it suffices to analyze the case of transferring the disks from peg  1 to peg  3 and the case from peg  1 to peg  1 .",
    "[ thm:4 ] given @xmath64 disks , three pegs and three weights of real numbers @xmath43 , @xmath42 , and @xmath34 .",
    "then , for the two - player tower of hanoi game , the first player wins any game , except in the case @xmath65 for which the game is a draw .",
    "if @xmath66 , it is easy to see that , with any strategy , if the game is not drawn ( because of infinite play ) , then the total score is @xmath67 for any @xmath4 because the total number of moves is always odd if the game finish .",
    "the result follows in this case .",
    "let @xmath68 and suppose that @xmath69 is the smallest integer among @xmath69 , @xmath70 and @xmath71 .",
    "then , we have @xmath72 .",
    "let @xmath15 be an intermediate position where the two smallest disks are on peg  @xmath7 and let the smallest disk among the disks on peg  @xmath8 and peg  @xmath9 be on peg  @xmath8 .",
    "we know , from corollary  [ cor:1 ] , that the @xmath64 disks can be transferred from the initial position on peg  1 to the intermediate position @xmath15 using an even sequence of moves @xmath73 and , from theorem  [ thm:1 ] , that all the disks can be transferred from the final position on peg  f to the intermediate position @xmath15 using an odd sequence of moves @xmath74 .",
    "then , it is clear that the reverse sequence of @xmath74 is an odd sequence @xmath75 of moves transferring all the disks from the intermediate position @xmath15 to the final position .",
    "thus , the sequence of moves @xmath76 is a finite strategy for transferring @xmath64 disks from peg  1 to peg  f. let @xmath77 be the total score @xmath39 associated with this strategy . if @xmath78 , @xmath2  wins following this strategy and the result is then proved .",
    "suppose now that @xmath79 .",
    "we consider a new strategy where @xmath2  forces @xmath3  to play as follows :    1 .",
    "@xmath2  starts the game and forces @xmath3  to play the even number of moves of @xmath73 , where the @xmath1 disks are transferred from the initial position on peg  1 to the intermediate position @xmath15 .",
    "after that , since @xmath73 is even , it is @xmath2 s turn . 2 .",
    "@xmath2  continues by forcing @xmath3  to play an even number of moves , whose sequence is denoted as @xmath80 and for which the total score @xmath39 is incremented by a positive value and where the @xmath1 disks are always at the position @xmath15 after @xmath80 . note that after this",
    ", it is always @xmath2 s turn since @xmath80 is even .",
    "this step is repeated until the total score @xmath39 is sufficiently large .",
    "3 .   @xmath2  finishes the game by forcing @xmath3  to play the odd number of moves of @xmath75 , where the @xmath1 disks are transferred from the intermediate position @xmath15 to the final position on peg  f.    it remains to detail the sequence @xmath80 and to verify that it effectively increments the total score @xmath39 by a positive value .",
    "in fact , the sequence @xmath80 consists of the 7 moves that transfer the two smallest disks from peg  @xmath7 to peg  @xmath7 , as already seen in the proof of theorem  [ thm:1 ] , and the move of the smallest disk of peg  @xmath8 and peg  @xmath9 from peg  @xmath8 to peg  @xmath9 , and we repeat these @xmath81 moves twice so that we return to the intermediate position @xmath15 .",
    "there are two possible sequences for @xmath80 , that are @xmath82 in both cases , the total score @xmath39 is incremented by @xmath83 , which is strictly positive by hypothesis .",
    "so we have proved that @xmath2  wins the game by using the following strategy @xmath84 , where @xmath85 this completes the proof .",
    "we can adapt this proof to scoring play from an arbitrary position of disks for the three - peg case .",
    "but we have to remember that in the two - player setting a position carries also a memory of the last move .",
    "consider an arbitrary tower of hanoi position on @xmath64 disks , three pegs and three weights of real numbers @xmath43 , @xmath42 , and @xmath34 .",
    "then the first player wins , unless @xmath65 , and provided the previous player did not move the smallest disk .",
    "apply theorem  [ thm:1 ] and the proof of theorem  [ thm:4 ] ( omitting @xmath73 ) .",
    "traditionally , in the one - player setting , the interest has often been focused on the minimal number of moves for transferring the tower . in this section",
    "we analyze our variations of the two - player game in this sense .",
    "it is not a big surprise that the minimal number of moves required for @xmath2  to win normal play is the same as the number of moves in the one - player minimal algorithm , but let us sum up the state of the art before we move on to the more challenging analysis of minimum number of moves for winning scoring play .",
    "[ thm:5 ] the minimum number of moves for transferring @xmath4 disks from one peg to another peg is @xmath86 .",
    "the minimum number of moves for transferring @xmath12 disks from one peg to the same peg is @xmath87 , if the largest disk has to be moved ; and it is seven if only the smallest disk has to be moved .    if we want to transfer @xmath4 disks from peg  1 to peg  3 , it is well known that the minimum number of moves needed is exactly @xmath86 .",
    "recall here in few words how to obtain this result .",
    "we prove it by induction on @xmath1 . for @xmath11 ,",
    "the result is clear . now , suppose that the result is true for transferring @xmath88 disks from one peg to another peg",
    ". if we want to transfer the @xmath1th disk from peg  1 to peg  3 , the @xmath88 smallest disks must be on peg  2 .",
    "so , we transfer the @xmath88 smallest disks from peg  1 to peg  2 using @xmath89 moves by induction hypothesis , the largest disk from peg  1 to peg  3 and finally the @xmath88 smallest disks from peg  2 to peg  3 using also @xmath89 moves by induction hypothesis .",
    "this is the reason why the minimal number of moves needed for transferring @xmath1 disks from peg  1 to peg  3 is @xmath86 .",
    "now , we want to transfer @xmath12 disks from peg  1 to peg  1 with the condition that all disks have been moved at least twice ( the largest disk has to be moved ) .",
    "we proceed by induction on @xmath12 . for @xmath13 ,",
    "it is easy to check that the two minimal sequences of moves are of length @xmath20 , that are @xmath90 suppose that the result is true for transferring @xmath88 disks from one peg to the same peg .",
    "first , if we want to transfer the @xmath1th disk from peg  1 to another peg , peg  @xmath8 with @xmath91 , the @xmath92th smallest disks have to be transferred from peg  1 to peg  @xmath9 using at least @xmath89 moves .",
    "then , we distinguish two cases .",
    "if we want to transfer the largest disk from peg  @xmath8 to peg  1 , the @xmath88 smallest disks have to be transferred from peg  @xmath9 to peg  @xmath9 using at least @xmath0 moves by induction hypothesis . finally , we transfer the @xmath88 smallest disks from peg  j to peg  1 with at least @xmath89 moves .",
    "so , the number of moves is at least @xmath87 if we follow this strategy .    if we want to transfer the largest disk from peg  @xmath8 to peg  @xmath9 , the @xmath88 smallest disks have to be transferred from peg  @xmath9 to peg  1 using at least @xmath89 moves .",
    "after that , for transferring the largest disk from peg  @xmath9 to peg  1 , the @xmath88 smallest disks have to be transferred from peg  1 to peg  @xmath8 using at least @xmath89 moves . finally , we transfer the @xmath88 smallest disks from peg  @xmath8 to peg  1 using at least @xmath89 moves .",
    "thus , the number of moves is at least @xmath87 if we follow this strategy .    in all cases",
    ", we have proved that the minimal number of moves for transferring @xmath1 disks from peg  1 to peg  1 is exactly @xmath87 , following the two possible strategies that have been represented in figure  [ fig:1 ] .",
    "if we only require that the smallest disk , instead of the largest disk , has to be moved , the minimal number of moves for transferring @xmath12 disks from one peg to the same peg is seven .",
    "the result is obtained when we only move the two smallest disks and let the @xmath93 largest disks unmoved on the starting peg .",
    "& of moves +    ( 0,0 )  ( 14,0 ) ; ( 2.5,0 )  ( 2.5,3 ) ; ( 7,0 ) ",
    "( 7,3 ) ; ( 11.5,0 ) ",
    "( 11.5,3 ) ; ( 0.5,0 ) rectangle ( 4.5,0.5 ) ; ( 1,0.5 ) rectangle ( 4,1 ) ; ( 1.5,1 ) rectangle ( 3.5,1.5 ) ; ( 2,1.5 ) rectangle ( 3,2 ) ;    & 0 +    ( 0,0 ) ",
    "( 14,0 ) ; ( 2.5,0 ) ",
    "( 2.5,3 ) ; ( 7,0 ) ",
    "( 7,3 ) ; ( 11.5,0 )  ( 11.5,3 ) ; ( 5,0 ) rectangle ( 9,0.5 ) ; ( 10,0 ) rectangle ( 13,0.5 ) ; ( 10.5,0.5 ) rectangle ( 12.5,1 ) ; ( 11,1 ) rectangle ( 12,1.5 ) ;    & @xmath94 +    ( 0,0 )  ( 14,0 ) ; ( 2.5,0 ) ",
    "( 2.5,3 ) ; ( 7,0 ) ",
    "( 7,3 ) ; ( 11.5,0 ) ",
    "( 11.5,3 ) ; ( 0.5,0 ) rectangle ( 4.5,0.5 ) ; ( 10,0 ) rectangle ( 13,0.5 ) ; ( 10.5,0.5 ) rectangle ( 12.5,1 ) ; ( 11,1 ) rectangle ( 12,1.5 ) ;    & @xmath95 +    ( 0,0 )  ( 14,0 ) ; ( 2.5,0 )  ( 2.5,3 ) ; ( 7,0 )  ( 7,3 ) ; ( 11.5,0 )  ( 11.5,3 ) ; ( 0.5,0 ) rectangle ( 4.5,0.5 ) ; ( 1,0.5 ) rectangle ( 4,1 ) ; ( 1.5,1 ) rectangle ( 3.5,1.5 ) ; ( 2,1.5 ) rectangle ( 3,2 ) ;    & @xmath89 + total & @xmath87 +     & of moves +    ( 0,0 ) ",
    "( 14,0 ) ; ( 2.5,0 ) ",
    "( 2.5,3 ) ; ( 7,0 )  ( 7,3 ) ; ( 11.5,0 )  ( 11.5,3 ) ; ( 0.5,0 ) rectangle ( 4.5,0.5 ) ; ( 1,0.5 ) rectangle ( 4,1 ) ; ( 1.5,1 ) rectangle ( 3.5,1.5 ) ; ( 2,1.5 ) rectangle ( 3,2 ) ;    & 0 +    ( 0,0 )  ( 14,0 ) ; ( 2.5,0 )  ( 2.5,3 ) ; ( 7,0 )  ( 7,3 ) ; ( 11.5,0 ) ",
    "( 11.5,3 ) ; ( 5,0 ) rectangle ( 9,0.5 ) ; ( 10,0 ) rectangle ( 13,0.5 ) ; ( 10.5,0.5 ) rectangle ( 12.5,1 ) ; ( 11,1 ) rectangle ( 12,1.5 ) ;    & @xmath94 +    ( 0,0 ) ",
    "( 14,0 ) ; ( 2.5,0 ) ",
    "( 2.5,3 ) ; ( 7,0 ) ",
    "( 7,3 ) ; ( 11.5,0 ) ",
    "( 11.5,3 ) ; ( 9.5,0 ) rectangle ( 13.5,0.5 ) ; ( 1,0 ) rectangle ( 4,0.5 ) ; ( 1.5,0.5 ) rectangle ( 3.5,1 ) ; ( 2,1 ) rectangle ( 3,1.5 ) ;    & @xmath94 +    ( 0,0 ) ",
    "( 14,0 ) ; ( 2.5,0 ) ",
    "( 2.5,3 ) ; ( 7,0 ) ",
    "( 7,3 ) ; ( 11.5,0 ) ",
    "( 11.5,3 ) ; ( 0.5,0 ) rectangle ( 4.5,0.5 ) ; ( 5.5,0 ) rectangle ( 8.5,0.5 ) ; ( 6,0.5 ) rectangle ( 8,1 ) ; ( 6.5,1 ) rectangle ( 7.5,1.5 ) ;    & @xmath94 +    ( 0,0 )  ( 14,0 ) ; ( 2.5,0 )  ( 2.5,3 ) ; ( 7,0 )  ( 7,3 ) ; ( 11.5,0 )  ( 11.5,3 ) ; ( 0.5,0 ) rectangle ( 4.5,0.5 ) ; ( 1,0.5 ) rectangle ( 4,1 ) ; ( 1.5,1 ) rectangle ( 3.5,1.5 ) ; ( 2,1.5 ) rectangle ( 3,2 ) ;    & @xmath89 + total & @xmath87 +    now , we estimate the minimal number of moves for winning the normal play two - player tower of hanoi .",
    "let @xmath96 denote the minimal number of moves needed for winning a normal play game on @xmath5 pegs and @xmath4 disks .",
    "then , @xmath97    apply the results in this section to the two - player setting .",
    "when the players move blindly ( ignoring winning ) and just follows the classical minimal algorithm , we obtain the total scores according to the following two lemmas .",
    "[ lem:1 ] given @xmath98 disks , three pegs and three weights of real numbers @xmath42 , @xmath43 , and @xmath34 .",
    "then , for the two - players weighted tower of hanoi game of transferring @xmath1 disks from peg @xmath22 to peg @xmath25 by the minimal algorithm , the total score is    * @xmath99 if @xmath1 is odd ; * @xmath100 if @xmath1 is even .",
    "the statement is that @xmath2  gets @xmath43 ( or @xmath101 ) more points than @xmath3  when @xmath1 is odd ( or @xmath1 is even , resp . ) .",
    "we prove it by induction on @xmath1 .",
    "when @xmath11 , @xmath2  gets @xmath102 points by moving one disk from peg  1 to peg  3 .",
    "when @xmath13 , by using the usual minimal algorithm , the difference of points is @xmath103 .",
    "now suppose that the statement is true for @xmath88 .",
    "@xmath2  takes the strategy based on the minimal algorithm .",
    "when @xmath1 is odd , then the movement of the smaller @xmath88 disks from peg  1 to peg  2 gives @xmath2  @xmath104 more points since @xmath88 is even and by the assumption of induction .",
    "then , @xmath3  gets @xmath43 points by moving the largest disk from peg  1 to peg  3 .",
    "finally , the movement of the smaller @xmath88 disks from peg  2 to peg  3 gives @xmath2  @xmath105 more points .",
    "so , the difference of the total points is @xmath106 , when @xmath1 is odd .",
    "when @xmath1 is even , using the same argument , @xmath2  gets @xmath42 and @xmath34 more points in the phases of moving the smaller @xmath88 disks from peg  1 to peg  2 and peg  2 to peg  3 , respectively by the assumption of induction .",
    "so , the difference of the total points is @xmath107 .    given @xmath12 disks , three pegs and three weights of real numbers @xmath42 , @xmath43 , and @xmath34 .",
    "then , for the two - players weighted tower of hanoi game of transferring @xmath1 disks from peg @xmath22 to peg @xmath22 by the minimal algorithm , if we suppose that the largest disk be moved , the total score is    * @xmath108 if @xmath1 is odd ; * @xmath109 if @xmath1 is even .    by induction on @xmath12 . for @xmath13 ,",
    "we have already seen in the proof of theorem  [ thm:1 ] that the two minimal sequences of moves for transferring two disks from peg  1 to peg  1 are @xmath90 in all cases , we obtain that @xmath110 .",
    "suppose now that the result is true for @xmath111 .",
    "there are two minimal algorithms for transferring @xmath1 disks from peg  1 to peg  1 .",
    "we recall them below .",
    "the first minimal algorithm is :    a.   the @xmath88 smallest disks are transferred from peg  1 to peg  3 using the @xmath89 moves of the minimal algorithm , b.   the largest disk is transferred from peg  1 to peg  2 , c.   the @xmath88 smallest disks are transferred from peg  3 to peg  1 using the @xmath89 moves of the minimal algorithm , d.   the largest disk is transferred from peg  2 to peg  3 , e.   the @xmath88 smallest disks are transferred from peg  1 to peg  2 using the @xmath89 moves of the minimal algorithm , f.   the largest disk is transferred from peg  3 to peg  1 , g.   the @xmath88 smallest disks are transferred from peg  2 to peg  1 using the @xmath89 moves of the minimal algorithm .",
    "thus , we have @xmath112{l }   = \\delta_{13}(n-1 ) -w_{12 } + \\delta_{31}(n-1 ) - w_{23 } + \\delta_{12}(n-1 ) - w_{13 } + \\delta_{21}(n-1 ) \\\\   = 2\\left(\\delta_{13}(n-1 )",
    "+ \\delta_{12}(n-1)\\right ) - \\left(w_{12}+w_{13}+w_{23}\\right ) .",
    "\\\\ \\end{array}\\ ] ] then , from lemma  [ lem:1 ] , if @xmath1 is even , we obtain that @xmath113 and , if @xmath1 is odd , we have @xmath114 finally , we consider the second minimal algorithm , that is :    a.   the @xmath88 smallest disks are transferred from peg  1 to peg  3 using the @xmath89 moves of the minimal algorithm , b.   the largest disk is transferred from peg  1 to peg  2 , c.   the @xmath88 smallest disks are transferred from peg  3 to peg  3 using the @xmath0 moves of the minimal algorithm , d.   the largest disk is transferred from peg  2 to peg  1 , e.   the @xmath88 smallest disks are transferred from peg  3 to peg  1 using the @xmath89 moves of the minimal algorithm .    thus , we have @xmath115 then , from lemma  [ lem:1 ] for @xmath116 and by induction hypothesis for @xmath117 , if @xmath1 is even , we have @xmath118 and , if @xmath1 is odd , we have @xmath119 this completes the proof .",
    "we estimate the minimal number of moves for winning scoring tower of hanoi under the five ending conditions ( ec1 - 5 ) .",
    "we recall that the starting peg is peg  1 and for ( ec1 ) we suppose the tower is transferred to peg  3 .",
    "[ thm:7 ] let @xmath120 denote the minimal number of moves needed for a winning game on three pegs and @xmath4 disks .",
    "then , for @xmath121 ,    * for ( ec1 ) : @xmath122 @xmath123 * for ( ec2,3 ) : @xmath124 @xmath125 * for ( ec4,5 ) : @xmath126 @xmath127    for @xmath64 , if @xmath66 , we have @xmath128 otherwise , suppose that @xmath129 @xmath130 @xmath131 @xmath132 then ,    * for ( ec1 ) : @xmath133 otherwise , @xmath134 except for @xmath135 with ( i ) @xmath136 and ( ii ) @xmath137 , where @xmath138 * for ( ec2 ) : @xmath139 @xmath140 * for ( ec3 ) : @xmath141 @xmath142 * for ( ec4 ) : @xmath143 otherwise , @xmath144 except for ( i ) @xmath135 and @xmath136 , where @xmath145 @xmath146 for ( ii ) @xmath135 and @xmath147 , where @xmath148 @xmath146 and for ( iii ) @xmath135 and @xmath137 , where @xmath149 @xmath150 * for ( ec5 ) : @xmath151 otherwise , @xmath152 except for the cases ( i ) , ( ii ) , and ( iii ) that are the same with ( ec4 ) .",
    "we first prove the results for @xmath11 and @xmath153 . for ( ec1 ) and @xmath11 ,",
    "the number of moves for a winning game is 1 if @xmath154 because what anh can do in the first turn is to only move the disk from peg  1 to peg  3 ( note that if @xmath155 , bao wins ) . for @xmath13 and if @xmath156 , the minimal algorithm for transferring the two disks from peg  1 to peg  3 is used for anh to win . for @xmath13 and if @xmath157 , the move sequence @xmath158 with @xmath159 is used . for ( ec2,3 ) , in the case of @xmath11 , the game can not be started because the disk is not allowed to be moved from peg  1 . for @xmath13 and if @xmath160 , one of the sequences with seven moves used in the proof of theorem [ thm:5 ] is adopted , resulting in @xmath161 . for ( ec4,5 ) , the result for @xmath11 is obtained by combining the conditions for moving the disk to peg  2 and to peg  3 . for @xmath13 , the result is obtained by considering all the cases of anh completing the tower on peg  1 , 2 , and 3 and by employing the move sequences in ( ec1 - 3 ) .    for @xmath64 ,",
    "if @xmath162 , anh can not get a positive score so she uses the strategy of escaping the game to end and achives a draw .",
    "if @xmath163 , anh wins using the minimal algorithm with difference of score @xmath164 . otherwise , that is , when @xmath64 and not all @xmath42 , @xmath43 , and @xmath34 are equal , anh uses the common strategy for all ending conditions ( ec1 - 5 ) of using the minimal algorithm for transferring the tower from peg 1 to a final peg if that algorithm can be regarded as the concatenation of the move sequences @xmath73 and @xmath165 used in the proof of theorem  [ thm:4 ] . for all",
    "( ec1 - 5 ) and @xmath166 , and for most of the cases with @xmath135 , this strategy works .",
    "otherwise , that is , in some exceptional cases with @xmath135 , we construct new move sequences .",
    "we state the detail for each of the ending conditions below .    for ( ec1 ) and @xmath64 , except for the two cases ( @xmath135 and @xmath136 ) and ( @xmath135 and @xmath137 ) , the minimal algorithm for transferring the tower from peg  1 to peg  3 can be used as concatenation of @xmath73 and @xmath165 because the minimal algorithm reaches the intermediate position satisfying the condition for @xmath15 in theorem  [ thm:4 ] with an even number of moves .",
    "then it is further divided into two subcases depending on whether @xmath39 is positive .",
    "when @xmath167 , the minimal algorithm results in anh s win with @xmath168 .",
    "otherwise , the move sequence @xmath80 in the proof of theorem  [ thm:4 ] is additionally used @xmath169 times in the notation of theorem  [ thm:4 ] for anh to win , where by lemma  [ lem:1 ] , @xmath170 therefore , the minimal number of moves is bounded as @xmath171 for @xmath135 and @xmath136 , that is , if @xmath42 is the smallest weight , the minimal algorithm can not reach the position satisfying the condition for @xmath15 , having the two smallest disks on peg  3 and the largest disk on either of the remaining pegs . so the following two move sequences are considered instead as candidates for @xmath172 .",
    "the sequence with a smaller number of moves is then actually used ( we write the sequences in the format ( @xmath73)-(@xmath165 ) .",
    "@xmath173 the total scores for these sequences are @xmath174 and @xmath175 , respectively .",
    "therefore , @xmath176 is bounded as stated .",
    "next , for @xmath135 and @xmath137 , similarly to the exceptional case just mentioned , the minimal algorithm can not be used as @xmath177 .",
    "so , the following two sequences are considered as candidates for @xmath73 and @xmath165 and the one with a smaller number of moves is actually used .",
    "@xmath178 for the first and the second sequences , the total scores are @xmath174 and @xmath175 , respectively .",
    "therefore , @xmath176 is bounded as stated .    for ( ec2 ) and @xmath64 , the minimal algorithm for transferring the tower from peg  1 to itself , where the largest disk has to be moved ,",
    "can be used as concatenation of @xmath73 and @xmath165 .",
    "more precisely , if @xmath147 , the first minimal algorithm in lemma  2 in which the role of peg  2 and peg  3 is exchanged is used . then after the procedure ii ) of the algorithm with an even number of moves , it reaches the intermediate position @xmath15 , so this algorithm can be @xmath177 .",
    "next , if @xmath136 , the first minimal algorithm in lemma  2 can be @xmath177 . finally , if @xmath137 , after the procedure iv ) of the minimal algorithm with an even number of moves , it reaches the intermediate position @xmath15 .",
    "so the minimal algorithm can be @xmath177 .",
    "similarly to ( ec1 ) , it is further divided into two subcases depending on whether @xmath39 is positive .",
    "when @xmath167 , anh wins with the minimal algorithm with @xmath179 . otherwise , by lemma  2 the minimal number of moves is bounded as @xmath180    for ( ec3 ) , recall that the tower is moved to itself , but only the smallest disk has to be moved at least once .",
    "first , we examine the case when only the two smallest disks are to be moved during the game .",
    "then anh can win with the 7 moves in table  1 if @xmath181 .",
    "next , when more than two disks are moved during the game , then anh uses the minimal algorithm of transferring the smallest three disks from peg  1 to itself with 15 moves .",
    "then , as shown in ( ec2 ) with @xmath135 , if @xmath182 @xmath183 for all @xmath64 .",
    "otherwise , @xmath184    for ( ec4 ) , in which one can win by completing the tower at peg  1 , 2 , or 3 , the algorithms and results for ( ec1 ) with peg  2 or peg  3 as the final peg and ( ec2 ) are employed .",
    "first , recall that @xmath185 when @xmath186 , anh can win by using the minimal algorithm to reach either of peg  2 or peg  3 with @xmath187 moves . otherwise , if pairs of @xmath1 and @xmath188 are not the exceptional ones in ( ec1 ) and ( ec2 ) , the minimal algorithms for reaching peg  1 , 2 , or 3 with the repetitive part @xmath189 is used .",
    "then , the minimal number of moves is bounded as @xmath190 as stated .",
    "the remaining cases are for ( ec1 ) with peg  2 or peg  3 as the final peg with @xmath135 and with either of the following : ( i ) @xmath191 , ( ii ) @xmath192 , and ( iii ) @xmath193 .",
    "when @xmath191 , we evaluate the numbers of moves for each case of reaching peg  3 , peg  2 , and peg  1 .",
    "when peg  3 is the final peg , this is exactly one of the exceptional cases in ( ec1 ) , so the number of moves should be @xmath194 when peg  2 is the final peg , this case of @xmath191 is not at all exceptional ; thus , the minimal algorithm for transferring the three disks from peg  1 to peg  2 is used as the sequence @xmath172 .",
    "so , the number of moves is @xmath195 when peg  1 is the final peg , there is no exception , so the minimal algorithm is used for @xmath172 and the number of moves is @xmath196 in all , the minimum of these numbers of moves is taken as the upper bound of @xmath197 as stated for ( i ) of ( ec4 ) . for ( ii ) ,",
    "the argument is exactly the same with ( i ) by exchanging the role of peg  2 and peg  3 . for ( iii ) , since @xmath193 has to be treated as an exceptional case for both peg  2 and peg  3 are final pegs , so the bound for @xmath197 is obtained as stated .    finally for ( ec5 ) ,",
    "the algorithms and results used for ( ec1 ) and ( ec3 ) are employed for obtaining the bounds for @xmath198 . since the argument is almost the same with ( ec4 ) , we omit the detail .",
    "we have chosen a number of ending conditions for two player variations of the classical tower of hanoi .",
    "there are probably many other ways to proceed .",
    "but one of the most intriguing questions is if there is some way to release bao from his confinement of forced move play , which gives the two player game still the flavor of a one player game .",
    "indeed each move by bao is automatic without thinking and his input to the game has diminished to a purely mechanical matter .",
    "still anh s winning move paths in the scoring variation are non - trivial ; in particular when it comes to minimizing the number of moves .",
    "theorem  [ thm:7 ] obviously leads to the big open question what the minimal numbers of moves may be in the open cases .",
    "the analysis so far has been disadvantageous for @xmath3 , apart from very special circumstances where @xmath2  was forced to revert to infinite play .",
    "let us discuss minor alternations of the game rules , which gives @xmath3  a greater impact on the game .",
    "we settle with the standard impartial setting and leave possible further scoring analysis for a future study .",
    "a standard variation for impartial games is to play misre rather than normal play , that is , the player who terminates the game loses .",
    "we need to impose a rule that makes such rules meaningful .",
    "a standard technique in combinatorial games is to use ` compulsory ' moves . here :",
    "a player must put a disk on a one size larger disk if such a move is available .",
    "this rule makes misre meaningful , because a final move is forced if the game goes this far .",
    "however there is no guarantee that the game will reach the second last position .",
    "in fact , since @xmath2  still controls the game by always moving the smaller disk she will have to avoid that the game continues until the second last position .",
    "now , the question arises whether she can , at least force drawn .",
    "of course now anh only has a choice every second move , and the analysis is straight forward .",
    "but we leave this to the reader , since we are looking for some rules where bao actually wins .    another variation which gives @xmath3  more impact on the game , is to allow more than one move on a given disk in a direct sequence of moves .",
    "if the previous player moved disk @xmath199 , then the current player can move it as well , unless the position would become exactly the same as another position in the current ` round ' . here",
    "` round ' stands for a circuit where only the given disk has been moved . once another disk has been moved the current circuit is broken , and a new ` round ' starts .",
    "for the three peg case , this gives an immediate advantage for @xmath3 , but he will only be able to use it to play a draw game in the general case .",
    "it turns out , that combining the two modifications in this section , but playing normal ( ec5 ) , @xmath3  can force a win .",
    "let us explain in the three - peg case and with two disks .",
    "@xmath2  plays the smallest disk to peg 3 , say .",
    "@xmath3  moves it to peg 2 , which is legal in this round ( note that he is not forced to put it on top of the larger disk on peg 1 , since this move is not legal ) .",
    "now , @xmath2  has to play the larger disk to peg 3 and hence @xmath3  wins by putting the smaller disk on top of the larger .",
    "note that the forced moves were not important in the case for two disks .",
    "now , we let them play the three - disk case , still on three pegs",
    ". the move sequence will , for example , be @xmath200 where @xmath2 s moves are all forced ( except the first one ) , and @xmath3  wins .",
    "@xmath3  can not immediately adapt this strategy for the cases @xmath201 , because if @xmath202 , then @xmath2  would get a parity advantage .",
    "we leave it as an open question to resolve this game in general .",
    "yet another variation is to play our standard variation with several players . in the case for ( ec1 ) , three players , three pegs and two disks , then the first player can not win under optimal play , but she can decide which one of the other players that will win . if this game is played with three disks , then it is drawn .",
    "this can be seen this way .",
    "no player will be forced to put the second smallest disk on a final peg and thereby giving the player just after the winning move .",
    "this follows because the player who would have moved the supposedly second last move of the smallest disk , can choose to put it on either the second or third smaller disk , either of which prevents a bad forced move of the second smallest disk .",
    "open problems : classify the variations of normal and scoring play where several player tower of hanoi terminates .",
    "demaine , r.a .",
    "hearn , playing games with algorithms : algorithmic combinatorial game theory , m.h .",
    "albert and r.j .",
    "nowakowski ( ed . ) , _ games of no chance 3 , msri publications _ , 56 , 356 , cambridge university press ( 2009 ) ."
  ],
  "abstract_text": [
    "<S> the tower of hanoi game is a classical puzzle in recreational mathematics , which also has a strong record in pure mathematics . in a borderland between these two areas </S>",
    "<S> we find the characterization of the minimal number of moves , which is @xmath0 , to transfer a tower of @xmath1 disks . </S>",
    "<S> but there are also other variations to the game , involving for example move edges weighted by real numbers . </S>",
    "<S> this gives rise to a similar type of problem , but where the final score seeks to be optimized . </S>",
    "<S> we study extensions of the one - player setting to two players , invoking classical winning conditions in combinatorial game theory such as the player who moves last wins , or the highest score wins . here </S>",
    "<S> we solve both these winning conditions on three heaps . </S>"
  ]
}
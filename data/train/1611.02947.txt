{
  "article_text": [
    "intersections are natural bottlenecks and crucially influence the dynamics of urban traffic .",
    "traffic lights trigger a switching process meant to manage conflicting traffic flows .",
    "the coordination is sometimes done dynamically , according to sensor data of currently existing traffic flows ; otherwise it is done statically , by the use of timers . while intersections can be studied in isolation @xcite , the larger picture of networks of multiple intersections is increasingly important , also in view of the rapid growth of urbanization @xcite .",
    "this paper contributes to the theoretical underpinning of traffic networks by extending classical models for isolated intersections to models for networks of intersections with static signaling .",
    "think of a series of traffic lights designed to let traffic flow over several intersections in one main direction .",
    "any vehicle traveling along ( at an approximate prescribed speed ) wants to meet a progressive cascade of green lights , and not have to stop at intersections . in practical use ,",
    "only a group of vehicles  referred to as _ platoon _  can pass the intersection before the time band is interrupted to give way to other traffic flows .",
    "the platoon sizes are governed by the signal times .",
    "our method to model such situations consists of two ingredients : an extension of a classical queueing model for one isolated intersection that can deal with correlated input and that allows for a detailed characterization of the output process of an intersection , and an algorithm for network analysis that decomposes the series of queues into multiple isolated queues . while interesting in their own right , and likely to find more applications in transportation science , network analysis of intersections requires the delicate combination of both ingredients .",
    "we now discuss each of them separately .    * queueing model for one intersection . *",
    "the classical model for an isolated intersection that we adopt and extend in this paper is the fixed - cycle traffic - light ( fctl ) queue ; one of the most well - studied stochastic models in traffic engineering @xcite .",
    "vehicles arrive to an intersection controlled by a traffic light and form a queue .",
    "the time scale is divided into time intervals of unit length , and the traffic light alternates between red and green periods of fixed durations @xmath0 and @xmath1 time units .",
    "delayed vehicles depart during the green period , where it takes one time unit for each delayed vehicle to depart ; departures thus occur at equally spaced times until either the queue dissipates or the green phase terminates .",
    "darroch @xcite obtained the probability generating function ( pgf ) of the steady - state overflow queue ( the number of vehicles waiting in front of the traffic light at the end of a green period ) and the pgf of the steady - state delay was obtained in van leeuwaarden @xcite .",
    "hence , all information about the distribution of the steady - state overflow queue and steady - state delay in the fctl queue can be obtained from the results in @xcite , including all moments of the steady - state queue length and delay , and the distribution of the output process ( the way vehicles leave the intersection ) .",
    "the output process of the first intersection is of crucial importance for the present paper , because it will serve as input process for some other signalized intersection .",
    "moreover , the output process of a second intersection serves as input for a third intersection , and so forth .",
    "this network effect acts as a filter that modifies , and perhaps streamlines , the arrival process at consecutive intersections .",
    "therefore , we shall address in this paper the technical challenge of extending the classical fctl queue to allow for nonuniform and hence time - dependent correlated arrival processes .",
    "we call this extended model the generalized fctl queue",
    ".    * network algorithm . * a network of intersections with correlated input and output processes appears not solvable .",
    "we therefore develop an approximation scheme to evaluate the system performance based on decomposition .",
    "while this approach has been successfully applied to classic queueing networks @xcite , a network of generalized fctl queues poses additional challenges due to the non - synchronized cyclic structures and inherently correlated arrival processes .",
    "we decompose the network into isolated generalized fctl queues , which are then analyzed separately by assuming specific arrival processes , and in particular the output process of one intersection serves as the input process of an upstream intersection , hence creating the correlation structure that comes with network topologies .",
    "* outline of the paper . * in section  [ sec : queuelengths ] we provide a detailed model description of the generalized fctl queue . in section  [ sec : main ] we present the full analytic solution of the generalized fctl queue , both in terms of a formal characterization of the probability generating functions of the queue length distribution , and in terms of practically implementable algorithms for calculating the queue length distribution , for any given correlated arrival pattern . in section  [ sec : networks ] we design the network algorithm based on decomposition and the results in section [ sec : main ] .",
    "we also compare our analytical results with extensive discrete - event simulation of the same network model . in section",
    "[ sec : conclusions ] we present conclusions .",
    "we now present a generalization of the classical fctl queue that can deal with correlated arrivals . in subsection [ s31 ]",
    "we detail the model and its underlying assumptions .",
    "we then discuss in subsection [ s32 ] an example of an arrival pattern that contains some crucial features than are anticipated in network settings .",
    "the numerical calculations for that example were performed with the algorithmic method developed in section  [ sec : main ] .",
    "the first two model assumptions are adopted from the classical fctl queue @xcite :    [ discrete - time ] ( discrete - time assumption ) the time axis is divided into constant time intervals of unit length , so - called slots , where each slot corresponds to the time needed for a delayed vehicle to depart from the queue .",
    "the green and red periods , and thus the cycle time @xmath2 , are assumed to be fixed multiples of one slot .",
    "hence , @xmath3 are integers expressed in slots .",
    "those vehicles that arrive to the queue and are delayed , join the queue at the end of the slot in which they arrive .",
    "[ fctlassumption ] ( fctl assumption ) for those cycles in which the queue clears before the green period terminates , all vehicles that arrive during the residual green period pass through the system and experience no delay whatsoever .",
    "the fctl assumption lets vehicles that arrive during the residual green period pass the intersection without slowing down , and therefore the discharge rate of these vehicles is larger than the discharge rate of the delayed vehicles ( one per time unit ) .",
    "because of the huge difference in discharge rates of delayed vehicles ( these vehicles have to accelerate ) and non - delayed vehicles , the fctl assumption is a sensible assumption .",
    "the next assumption is new :    [ ia ] ( correlated arrivals assumption ) let @xmath4 denote the number of vehicles that arrive to the intersection during slot @xmath5 in cycle @xmath6 .",
    "the random variables @xmath4 are allowed to be dependent within cycle @xmath6 , but we assume that @xmath4 and @xmath7 are independent when @xmath8 .",
    "notice that assumptions [ discrete - time ] and [ ia ] together make that the queue lengths at the end of time slots can be modeled as a discrete - time markov chain .",
    "this feature is exploited in section [ sec : main ] to find a fully analytic characterization for the steady - state queue - length distribution .",
    "it is crucial that assumption [ ia ] is less restrictive than its counterpart in @xcite that assumes the @xmath4 to be independent and identically distributed ( i.i.d . ) .  we need to move beyond this i.i.d .",
    "assumption in order to consider the correlated @xmath4 sequences as they can occur in real network settings , for instance when the output process of one intersection ( or fctl queue ) forms the input process for another intersection .",
    "because the first intersection alters the original arrival pattern , the second intersection is likely to be confronted with platoons of vehicles that have been delayed by the upstream red signal .",
    "the generalized fctl queue defined by assumptions [ discrete - time]-[ia ] is in essence a queueing system with multiple customer types and batch arrivals , where @xmath4 can be interpreted as the number of type @xmath5 customers in batch @xmath6 .",
    "denote the pgf of the joint distribution of @xmath9 by @xmath10.\\ ] ] although arrivals within a batch can be correlated , successive batches are i.i.d .",
    "multi - type queueing models with batch arrivals have been well - studied @xcite .",
    "a marked difference however , is that arrivals in the fctl queue do not join the queue instantaneously , but are dictated when to arrive according to their type : type @xmath5 arrivals join the queue in time slot @xmath5 , for @xmath11 .",
    "another crucial difference is assumption [ fctlassumption ] , of course , which is very specific for traffic - light settings .",
    "we now give an exemplary arrival pattern with features that are anticipated in network settings .",
    "we consider a generalized fixed - cycle traffic light queue with traffic arriving from one synchronized upstream traffic intersection .",
    "the cyclic arrival pattern at this queue , illustrated in figure [ fig : isolatedintersection ] , starts with the arrival of a platoon of delayed vehicles from the major upstream flow .",
    "the settings are synchronized such that the signal turns green at the exact moment that the first car in this platoon arrives .",
    "this platoon is followed by a phase of free flow , with arriving vehicles that were not delayed at the upstream intersection .",
    "after a short period of no arrivals , we have a similar pattern of a platoon followed by free flow , arriving from a minor upstream flow .",
    "a more detailed description of the arrival process can be found in appendix [ appendix : input ] .    in section [",
    "sect : networkexamples ] we show that this specific arrival pattern arises naturally in network settings .",
    "arrivals in the same cycle are correlated , but we assume independence between arrivals in successive cycles .",
    "( 0,0 ) rectangle ( 40,2 ) ; ( 0,0 ) rectangle ( 20,2 ) ; ( 2,0 ) rectangle ( 2,2 ) ; ( 4,0 ) rectangle ( 4,2 ) ; ( 6,0 ) rectangle ( 6,2 ) ; ( 8,0 ) rectangle ( 8,2 ) ; ( 10,0 ) rectangle ( 10,2 ) ; ( 12,0 ) rectangle ( 12,2 ) ; ( 14,0 ) rectangle ( 14,2 ) ; ( 16,0 ) rectangle ( 16,2 ) ; ( 18,0 ) rectangle ( 18,2 ) ; ( 22,0 ) rectangle ( 22,2 ) ; ( 24,0 ) rectangle ( 24,2 ) ; ( 26,0 ) rectangle ( 26,2 ) ; ( 28,0 ) rectangle ( 28,2 ) ; ( 30,0 ) rectangle ( 30,2 ) ; ( 32,0 ) rectangle ( 32,2 ) ; ( 34,0 ) rectangle ( 34,2 ) ; ( 36,0 ) rectangle ( 36,2 ) ; ( 38,0 ) rectangle ( 38,2 ) ; at ( 5,0 ) platoon 1 ; at ( 17,0 ) free flow ; at ( 31,0 ) platoon 2 ; at ( 36.8,0 ) free flow ; ( 0,2 ) ",
    "node[above=0.4ex ] @xmath12 ( 13.9,2 ) ; ( 14.1,2 ) ",
    "node[above=0.4ex ] @xmath13 ( 20,2 ) ; ( 30,2 ) ",
    "node[above=0.4ex ] @xmath14 ( 33.9,2 ) ; ( 34.1,2 ) ",
    "node[above=0.4ex ]  @xmath15 ( 36,2 ) ; in 1, ... ,20 at ( 2 * -1,1.7 ) ;    .",
    "the black dots represent queue lengths obtained via a microscopic simulation of our model and the solid black line is obtained by the algorithm developed in section [ sec : main ] . , scaledwidth=50.0% ]    ( 0,0 ) ( 0,0.3 ) @xmath5 ( -8,5 ) @xmath16 $ ]    figure [ fig : isolatedintersectionql ] shows the mean queue length during a cycle .",
    "the results from a microscopic discrete - event simulation of this generalized fctl queue have been used to validate the analytic method .",
    "the longest queue occurs just before the traffic light turns green , and the queue is typically minimized at the end of green periods .",
    "the graph shows an interesting pattern , where the queue length remains constant for the first part of the red period , due to the absence of arrivals during that period .",
    "the arrival of platoon  2 results in a steep increase in queue length , starting after time slot  15 .",
    "the shape of the graph in figure  [ fig : isolatedintersectionql ] is different from the standard fctl queue , which is typically more v - shaped due to the constant arrival rate throughout the cycle .",
    "the analytic results obtained in the next section allow us to determine the queue - length distribution .",
    "table  [ tbl : queuelengthprobsexample1 ] shows probabilities of the queue length exceeding certain levels during the cycle",
    ". we see that the probability that the queue exceeds five vehicles at the cycle start is @xmath17 . at the end of the green period",
    "this probability is only @xmath18 . at any arbitrary moment ,",
    "the probability that there are more than five delayed vehicles is @xmath19 .",
    "we shall now show that the generalized fctl queue with assumptions [ discrete - time]-[ia ] is analytically solvable . using generating function techniques and complex analysis , we are able to obtain an explicit , analytic characterization for the steady - state queue - length distribution . in order to do so",
    ", we exploit the markovian nature of the queueing model at the level of cycles , and account for the correlations that occur within the cycle . the recursion relation that connects consecutive queue lengths during a cycle",
    "is given in subsection [ s41 ] , along with some further preliminaries .",
    "then in subsection [ s42 ] we derive the generating function for the steady - state queue lengths at the beginning of time slots throughout a cycle .",
    "in particular , we leverage this explicit generating function to create an algorithm for calculating the complete queue - length distribution , at all points in time .",
    "special attention is paid to the mean queue lengths in subsection [ s43 ] .",
    "let @xmath21 denote the queue length at the end of the @xmath5-th time slot in the @xmath6-th cycle with @xmath22 .",
    "let @xmath4 denote the number of arrivals in time slot @xmath5 during the @xmath6-th cycle , as defined in assumption [ discrete - time ] .    for convenience ,",
    "define @xmath23 as the pgf of the queue - length distribution at the start of cycle @xmath24 .",
    "we will determine the the steady - state queue length , in the limit as @xmath25 , at the end of each time slot .",
    "without loss of generality , we assume that the first @xmath1 time slots in the cycle have a green signal , and the last @xmath0 time slots are red .",
    "the queue length in this slot - based system then evolves according to @xmath26    in the classical fctl queue @xcite , with i.i.d .",
    "@xmath27 , the function @xmath28 can be expressed in terms of @xmath29 by conditioning on the event that @xmath30 is equal to zero , or not .",
    "for the generalized fctl queue more detailed information is needed , which is why we will use a lattice path counting approach to describe the queue - length evolution throughout the cycles .",
    "let @xmath31 be the indicator function for event @xmath32 .",
    "define the function @xmath33 for @xmath34 .",
    "the parameters @xmath35 are allowed to be random variables .",
    "we define @xmath36 as the set of @xmath37-dimensional integer - valued vectors @xmath38 for which @xmath39 . for @xmath40 ,",
    "let @xmath41 denote the subset of @xmath42 with elements @xmath38 that satisfy for @xmath43 , @xmath44 notice that @xmath42 contains all possible combinations @xmath45 that will cause @xmath46 to be zero .",
    "out of all these combinations , @xmath47 contains the combinations for which @xmath48 , while @xmath49 all take strictly positive values . adopting the terminology from @xcite",
    ", we say that @xmath47 contains all elements for which the _ effective green time _",
    "equals @xmath50 , which means to say that the queue becomes empty after precisely @xmath50 time slots .",
    "we will subdivide these subsets further by conditioning on their first element , which represents the queue length at the beginning of the cycle .",
    "define @xmath51 as the elements of @xmath47 that have first entry @xmath52 .",
    "note that @xmath53 only needs to be defined for @xmath54 , for otherwise the queue can not be empty at the end of time slot @xmath55 . finally , define @xmath56and notice that @xmath57 implies @xmath58 for any @xmath59 and @xmath60 .",
    "a technical issue is that we allow @xmath50 to be zero in the definition of @xmath61 .",
    "the only way to obtain an effective green time of length zero is when the queue length was zero at the cycle start . as a consequence",
    ", we have @xmath62 where we have used @xmath63 to denote a vector of dimension 0 .",
    "we can now express the queue lengths @xmath30 in terms of @xmath64 .",
    "for @xmath65 , @xmath66 and for @xmath67 , @xmath68      from the recursion relation , and using the fact that @xmath69 is independent of the future arrivals , we find @xmath70 using the definitions of @xmath47 and the independence between @xmath69 and @xmath71 , @xmath72 since @xmath73 we get @xmath74 now , for an arbitrary element @xmath75 in @xmath61 , it should hold that @xmath76 .",
    "we can use this to write @xmath77 where @xmath78 to see the latter , note that by definition @xmath79 and hence @xmath80    we thus obtain the following lemma , where we have omitted the subscript @xmath6 that refers to a particular cycle .",
    "[ thm : xkx0 ] let @xmath81 and @xmath82 for @xmath83 .",
    "then , for @xmath84 , @xmath85    having expressed @xmath86 in terms of @xmath87 , for @xmath88 , we can use to find @xmath89 .",
    "following the same steps as for deriving lemma [ thm : xkx0 ] , we get the lemma below .",
    "[ lemma : xkz ] for @xmath67 , @xmath90 with @xmath91 defined as @xmath92    if the system is in steady state , it should hold that @xmath93 , so we can equate @xmath94 and @xmath95 and solve for @xmath87 to arrive at the following result .",
    "[ thm : x0 ] @xmath96 with @xmath97    to help interpret write @xmath98,\\label{zetal2}\\\\ z^g h_g(z , z,\\dots , z , n_1 , \\dots , n_j)&={\\mathbb{e}}\\left[z^{j+y_{j+1}+\\dots+y_c}\\mathbf{1}_{\\{y_1=n_1 , \\dots , y_j = n_j\\}}\\right],\\label{zetal1}\\end{aligned}\\ ] ] and @xmath99 .",
    "\\label{eqx0alt } \\ ] ]    the first expression on the right hand side of represents the relation @xmath100 in terms of generating functions . the last term in contains all `` correction terms '' for those summands where the queue becomes empty at time slot @xmath50 , because then @xmath101 , which can be written as @xmath102 the last part being the correction term .",
    "the function @xmath103 is composed of all correction terms that correspond to @xmath104 .",
    "each correction term consists of the term , representing the part that should be removed , and its replacement term .",
    "if the @xmath105 are independent ( but not necessarily identically distributed ) random variables , equation can be simplified . in this case ,",
    "@xmath106 , which can be substituted in to find @xmath107 let the random variable @xmath108 denote the effective green time , as defined earlier , and notice that @xmath109    from we then obtain @xmath110    using that @xmath111 , @xmath112 , and @xmath113 , for @xmath114 , can be written as @xmath115 where the unknown probabilities @xmath116 are still to be determined .    when @xmath117 are i.i.d .",
    "random variables , with pgf @xmath118 , this expression simplifies further to the classical result @xcite @xmath119    let us now proceed with the expression in and show how this generating function can be converted into algorithms for the performance analysis of the generalized fctl queue .",
    "first note that there are still @xmath1 unknowns @xmath120 in , which can be found using a classical reasoning . with rouch s theorem @xcite",
    ", it can be shown that the denominator of ( [ maineqqq ] ) has @xmath1 zeros on or within the unit circle @xmath121 . since",
    "a pgf is analytic and well - defined in @xmath121 , the numerator of @xmath87 should vanish at each of the zeros .",
    "this gives @xmath1 equations .",
    "one of the zeros equals 1 , and leads to a trivial equation .",
    "however , the normalization condition @xmath122 provides an additional equation . using lhpital s rule , this condition is found to be @xmath123\\big){\\mathbb{p}}(a_j)=g-\\sum_{i=1}^c{\\mathbb{e}}[y_i],\\ ] ] where we have defined @xmath124 as the event @xmath125 for compactness . from this definition",
    "it follows that @xmath126={\\mathbb{e}}[y_i]$ ] and @xmath127 .",
    "we can write as @xmath128 note that @xmath129 , with @xmath103 as defined in .",
    "denote the @xmath1 roots of @xmath130 on and within the unit circle by @xmath131 .",
    "the @xmath1 unknowns @xmath120 then follow from solving the set of linear equations @xmath132 to make this work , we need an efficient numerical algorithm for finding the roots @xmath133 .",
    "many root - finding algorithms exist , for instance based on successive substitution @xcite or the lagrange inversion theorem @xcite . in the appendix we present a new scheme ( algorithm [ alg : roots ] ) based on the truncation of infinite series in combination with a root - finding procedure for polynomial functions .",
    "we also need to deal with the sets @xmath53 that may have an infinite number of elements . for this ,",
    "notice that @xmath61 has a finite cardinality . finding all elements in @xmath61 is rather straightforward , because they can be found by a simple enumeration . when @xmath134 , the effective green period is zero , meaning that @xmath50 must be zero as well . as a consequence ,",
    "all @xmath135 are empty sets , except for @xmath136 , which is a set containing one element : the empty vector @xmath63 . for @xmath137 ,",
    "the minimum effective green time is at least @xmath52 .",
    "fixing @xmath52 between 1 and @xmath55 , and @xmath50 between @xmath52 and @xmath55 , we note that all elements in @xmath61 must satisfy the following conditions : @xmath138 since @xmath139 are nonnegative integers , these conditions lead to an easy enumeration of all elements @xmath140 in @xmath61 .",
    "see algorithm [ alg : gjl ] in the appendix for efficiently calculating all nonempty sets @xmath61 .    taken everything together",
    ", we can evaluate the generating function @xmath87 as described in algorithm [ alg : x0pgf ] .",
    "input @xmath1 , @xmath2 , and @xmath141 set @xmath142=\\frac{\\text{d}}{\\text{d}z}y(z , z , \\dots , z)\\big|_{z=1}$ ] generate all nonempty sets @xmath61 using algorithm [ alg : gjl ] determine all roots @xmath143 inside the unit circle using algorithm [ alg : roots ] set @xmath144 set @xmath145 compute @xmath146 using equation set @xmath147 set @xmath148 set @xmath149 $ ] find @xmath150 by solving system compute @xmath87 using equation @xmath87      now that we can calculate @xmath87 , we proceed to use algorithm [ alg : x0pgf ] to obtain more information about the queue length .",
    "notice that with lemmas [ thm : xkx0 ] and  [ lemma : xkz ] and algorithm [ alg : x0pgf ] we can evaluate all @xmath86 for @xmath151 . while these are all pgfs at the end of specific time slots , the pgf of the queue length at an arbitrary time slot @xmath152 follows from @xmath153 the queue - length distribution",
    "can then be calculated using a standard inverse theorem such as algorithm [ alg : pgfinversion ] in the appendix .",
    "we have used algorithm [ alg : pgfinversion ] with to generate the results in table [ tbl : queuelengthprobsexample1 ] . in the appendix we also present some compact expressions for the mean queue length at the end of each time slot .",
    "with the algorithms developed in section [ sec : main ] to analyze the output of an intersection with correlated input , we now extend the scope in order to deal with a network of intersections . in subsection [ dec ]",
    "we describe the decomposition approach , a heuristic method to combine multiple isolated intersections into a network model , and in subsection [ sect : networkexamples ] we demonstrate the algorithm for two network scenarios .",
    "let us first quantify the output process of the generalized fctl queue in section [ sec : main ] .",
    "define @xmath154 as the output in time slot @xmath5 ( @xmath155 ) in cycle @xmath6 , so that @xmath156 let @xmath157 denote the pgf of the joint output @xmath158 and @xmath159 denote the effective green time in cycle @xmath6 .",
    "note that the joint output vector @xmath158 , given that @xmath160 , equals @xmath161 we will again omit the subscript @xmath6 denoting the cycle number .",
    "if @xmath75 is an arbitrary vector in @xmath61 , it holds that @xmath76 .",
    "the pgf of the joint output during this cycle follows from summing over all possible @xmath162 and @xmath163 : @xmath164 this then gives @xmath165 with @xmath166 as defined in .",
    "note that @xmath167 and @xmath168 .",
    "the complete program to compute @xmath169 is then given in algorithm [ alg : outputpgf ] .",
    "input @xmath1 , @xmath2 , and @xmath141 find @xmath150 using algorithm [ alg : x0pgf ] set @xmath170 set @xmath145 compute @xmath171 using equation set @xmath172 set @xmath173 set @xmath174 @xmath169    it is evident that correlation in input carries over to correlation in output .",
    "less obvious is that even with independent input , the output processes in consecutive time slots are correlated . in the case of independent @xmath175 ,",
    "the joint output pgf reduces to @xmath176 the correlation follows from the fact that this is not the product of the marginal pgfs @xmath177 for @xmath178 .    to analyze a network of fixed - cycle intersections ,",
    "we decompose the network into isolated generalized fctl queues .",
    "we exclude situations where the output of a queue could become the input of that same queue through some cyclic path in the network , meaning that the network can be represented as a directed acyclic graph where nodes represent queues .",
    "nodes without parents can be modeled as standard fctl queues with independent external arrivals .",
    "figure [ fig : networksidetraffic ] shows an example of three intersections with one main traffic flow , with queues labeled @xmath179 , and @xmath180 , and three minor flows @xmath181 , and @xmath182 representing side traffic .",
    "( 5,0 ) rectangle ( 10,10 ) ; ( 7.5,0 ) to ( 7.5,5 ) ; ( 22.5,0 ) rectangle ( 27.5,10 ) ; ( 25,0 ) to ( 25,5 ) ; ( 40,0 ) rectangle ( 45,10 ) ; ( 42.5,0 ) to ( 42.5,5 ) ; ( 0,5 ) rectangle ( 50,10 ) ; ( 0,7.5 ) to ( 50,7.5 ) ; ( 5,5 ) rectangle ( 10,10 ) ; ( 22.5,5 ) rectangle ( 27.5,10 ) ; ( 39.5,5 ) rectangle ( 45,10 ) ; ( 0.2,6.25 ) to ( 2.2,6.25 ) ; ( 20,6.25 ) to ( 22,6.25 ) ; ( 37.5,6.25 ) to ( 39.5,6.25 ) ; ( 8.75,4.0 ) to [ out=90 , in=180 , distance=2 cm ] ( 11.0,6.25 ) ; ( 26.25,4.0 ) to [ out=90 , in=180 , distance=2 cm ] ( 28.5,6.25 ) ; ( 43.75,4.0 ) to [ out=90 , in=180 , distance=2 cm ] ( 46.0,6.25 ) ;    ( 0,0 ) rectangle ( 1,2 ) ; ( 0.5,1.6 ) circle [ radius=0.3 ] ; ( 0.5,1.0 ) circle [ radius=0.3 ] ; ( 0.5,0.4 ) circle [ radius=0.3 ] ;    ( 0,0 ) rectangle ( 1,2 ) ; ( 0.5,1.6 ) circle [ radius=0.3 ] ; ( 0.5,1.0 ) circle [ radius=0.3 ] ; ( 0.5,0.4 ) circle [ radius=0.3 ] ;    ( 0,0 ) rectangle ( 1,2 ) ; ( 0.5,1.6 ) circle [ radius=0.3 ] ; ( 0.5,1.0 ) circle [ radius=0.3 ] ; ( 0.5,0.4 ) circle [ radius=0.3 ] ;    at ( 1.7,5.3 ) @xmath183 ; at ( 19.2,5.3 ) @xmath184 ; at ( 36.7,5.3 ) @xmath180 ;    ( 0,0 ) rectangle ( 1,2 ) ; ( 0.5,1.6 ) circle [ radius=0.3 ] ; ( 0.5,1.0 ) circle [ radius=0.3 ] ; ( 0.5,0.4 ) circle [ radius=0.3 ] ;    ( 0,0 ) rectangle ( 1,2 ) ; ( 0.5,1.6 ) circle [ radius=0.3 ] ; ( 0.5,1.0 ) circle [ radius=0.3 ] ; ( 0.5,0.4 ) circle [ radius=0.3 ] ;    ( 0,0 ) rectangle ( 1,2 ) ; ( 0.5,1.6 ) circle [ radius=0.3 ] ; ( 0.5,1.0 ) circle [ radius=0.3 ] ; ( 0.5,0.4 ) circle [ radius=0.3 ] ;    at ( 11.7,3.5 ) @xmath185 ; at ( 29.2,3.5 ) @xmath186 ; at ( 46.7,3.5 ) @xmath182 ;    this network can be decomposed into six queues . queues @xmath187 , and @xmath182 are standard fctl queues with poisson input .",
    "the analysis in @xcite can be used to obtain queue length distributions and equation gives the joint output of each of these queues . following the main flow downstream ,",
    "we first determine the input of @xmath184 , which is the superposition of the delayed output processes of @xmath183 and @xmath185 . the analysis in section [ sec : main ]",
    "gives the queue length pgf , and the results from this section give the joint output .",
    "algorithm [ alg : network ] provides a detailed description of this method , which can be used to find approximations for all queue - length pgfs in the network .",
    "input the number of intersections @xmath6 input @xmath188 , @xmath2 , and @xmath189 for @xmath183 compute @xmath190 using algorithm [ alg : x0pgf]compute @xmath191 using algorithm [ alg : outputpgf ] input @xmath192 and @xmath193 for @xmath194 input @xmath195 , the number of red time slots preceding the first green time slot at @xmath194 compute @xmath196 using algorithm [ alg : outputpgf ] set @xmath197 @xmath198 compute @xmath199 using algorithm [ alg : x0pgf]compute @xmath200 using algorithm [ alg : outputpgf ]      consider an idealized network of ten connected generalized fctl queues , @xmath201 , each with a fixed cycle of @xmath202 green and @xmath203 red time slots and a fixed travel time between two consecutive intersections of @xmath204 time slots .",
    "the setting is similar to that in figure  [ fig : networksidetraffic ] without the side traffic .",
    "since all intersections have the same fixed - cycle plan of 10 green and 10 red time slots , the case @xmath205 corresponds to a perfect green wave where vehicles arrive exactly at the moment that the signal turns green , and no queues will build up . in the case",
    "@xmath206 , the vehicles departing during the first five time slots of @xmath207 , will arrive at @xmath208 during time slots 610 .",
    "these vehicles will pass without delay , except when there is a queue of more than five vehicles waiting at the beginning of the cycle .",
    "the vehicles departing in time slots 610 from @xmath207 , will arrive at @xmath208 during time slots 1115 , which means that they arrive during the red period and will be delayed until ( at least ) the next green period .",
    "only @xmath209 has external arrivals , assumed to arrive according to a poisson process with rate @xmath210 per time slot .",
    "the _ occupation rate _",
    "@xmath211 is close to one , indicating that the intersections are operating close to their maximum capacity .",
    "appendix [ appendix : input ] provides more details about the input settings of this example , and how to determine the arrival processes at the other intersections .",
    "observe that in figures [ fig : networknosidetraffic2](a ) and [ fig : networknosidetraffic2](b ) the simulated values ( the black dots ) are indistinguishable from those computed using our generalized fctl analysis , based on the decomposition approach ( the black solid lines ) .",
    "clearly , @xmath206 results in a better traffic flow , with smaller mean queue lengths , than @xmath212 .    [ cols=\"^,^ \" , ]     l|cccccccccc + intersection & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 + load @xmath213 & 0.3 & 0.37 & 0.43 & 0.5 & 0.57 & 0.63 & 0.7 & 0.77 & 0.83 & 0.9 + simulation & 0.493 & 0.232 & 0.260 & 0.293 & 0.335 & 0.395 & 0.491 & 0.665 & 1.046 & 2.192 + decomposition & 0.493 & 0.231 & 0.260 & 0.292 & 0.333 & 0.386 & 0.464 & 0.588 & 0.810 & 1.323 +    l|cccccccccc + intersection & 1 & 2 & 3 & 4 & 5 & 6 & 7 & 8 & 9 & 10 + load @xmath213 & 0.3 & 0.37 & 0.43 & 0.5 & 0.57 & 0.63 & 0.7 & 0.77 & 0.83 & 0.9 + simulation & 0.493 & 0.359 & 1.161 & 0.821 & 1.549 & 1.287 & 1.984 & 1.939 & 2.814 & 3.829 + decomposition & 0.493 & 0.359 & 1.159 & 0.819 & 1.534 & 1.273 & 1.920 & 1.835 & 2.478 & 2.858 +",
    "classical models for fixed - cycle intersections do not cover scenarios where arriving traffic is correlated , as typically encountered in traffic networks . motivated by this observation , we introduced a generalized fixed - cycle traffic model that can deal with an arbitrary arrival patterns such as platoons and non - homogeneous traffic intensities .",
    "generating - function methods for the stationary queue - length distribution were used to develop an efficient numerical scheme for the performance analysis of an isolated intersection .",
    "we also proposed a network algorithm , which decomposes a network of intersections into separate generalized fixed - cycle network models , whose distributional output and input are matched according to the network layout .",
    "extensive simulation experiments for a line network of multiple intersection support the network algorithm , and reveal only a slight loss of accuracy in heavy - traffic scenarios .",
    "we expect our network algorithm to work for many realistic network configurations , the study of which is an interesting topic for further research .",
    "this work is supported by the nwo gravitation networks grant 024.002.003 .",
    "the work of jvl is further supported by an nwo top - go grant and by an erc starting grant .",
    "input @xmath1 and @xmath214 set @xmath215 set the truncation parameter @xmath216 set @xmath217 @xmath218 numerically compute @xmath219 , the @xmath6-th order taylor expansion of @xmath220 about @xmath221 find the roots of @xmath222 using a standard numerical polynomial root finding algorithm denote these roots by @xmath223 @xmath217 numerically find a root @xmath224 for @xmath220 using starting point @xmath225 add @xmath224 to @xmath226 @xmath226    @xmath227 @xmath228 @xmath229 @xmath230 @xmath231 @xmath232 @xmath229    input @xmath233 and @xmath37 @xmath234 @xmath235 @xmath236 @xmath237 @xmath238\\right)$ ] @xmath239",
    "denote by @xmath240 and @xmath220 the numerator and denominator of @xmath87 as given in . by differentiation and lhpital s rule",
    ", it can be shown that @xmath241=\\frac{n''(1)-d''(1)}{2d'(1)},\\ ] ] where we have used that @xmath122 and hence @xmath242 .",
    "define @xmath243 it is readily checked that @xmath244 , \\qquad d''(1)=g(g-1)-{\\mathbb{e}}[y(y-1)].\\ ] ] for the numerator , we find @xmath245 - { \\mathbb{e}}\\left[(j+y^{(j)}+y^{(r)})\\mathbf{1}_{\\{a_j\\}}\\right ] \\right ) \\\\ & = \\sum_{l=0}^{g-1}q_l\\sum_{j=0}^{g-1 } \\sum_{{\\underline{n}}\\in { \\mathcal{g}}_{j , l } } \\left(g - j-{\\mathbb{e}}[y^{(j ) } \\,|\\ , a_j]\\right){\\mathbb{p}}(a_j),\\end{aligned}\\ ] ] where as before @xmath246 .",
    "taking the second derivative yields @xmath247 - { \\mathbb{e}}\\left[(j+y^{(j)}+y^{(r)})^2\\mathbf{1}_{\\{a_j\\}}\\right ] \\right ) -n'(1).\\end{aligned}\\ ] ] using @xmath248-d'(1)$ ] and @xmath242 gives the following result :    @xmath249&=\\frac { { \\mathbb{e}}[y^2]-g^2+\\sum q_l { \\mathbb{p}}(a_j)(g^2-j^2)}{2(g-{\\mathbb{e}}[y])}\\nonumber\\\\ & -\\sum_{l=0}^{g-1}\\sum_{j=0}^{g-1 } \\sum_{{\\underline{n}}\\in { \\mathcal{g}}_{j , l } } \\frac{q_l}{2(g-{\\mathbb{e}}[y])}{\\mathbb{p}}(a_j){\\mathbb{e}}\\left[2(g - j)y^{(r)}-2(j - y^{(r)})y^{(j)}-\\big(y^{(j)}\\big)^2\\,\\big|\\,a_j\\right ] .",
    "\\label{expmean}\\end{aligned}\\ ] ]    observe that depends on the @xmath250 s , @xmath251 $ ] for @xmath252 , and @xmath253 $ ] for @xmath155 and @xmath151 .",
    "the mean queue lengths @xmath254 $ ] for @xmath255 can be found by expressing @xmath254 $ ] in terms of @xmath256 $ ] or @xmath257 $ ] . for queue lengths during the red period , we see that @xmath258={\\mathbb{e}}[x_{k+1}]-{\\mathbb{e}}[y_{k+1 } ] , \\qquad k = c-1,c-2,\\dots , g,\\ ] ] which means that these mean queue lengths can be expressed in @xmath259 $ ] ( and hence @xmath260 $ ] ) by successive substitution .    during the green period ,",
    "the expressions become slightly more involved , but it is possible to express @xmath254 $ ] in terms of @xmath256 $ ] as @xmath258={\\mathbb{e}}[x_{k-1}]+{\\mathbb{e}}[y_{k}]-1 - \\sum_{l=0}^{k-1}q_l \\sum_{j=0}^{k-1 } \\sum_{{\\underline{n}}\\in { \\mathcal{g}}_{j , l } } { \\mathbb{p}}(a_j)\\left({\\mathbb{e}}[y_{k+1}\\,|\\,a_j]-1\\right ) , \\",
    "\\text { for } k=1,\\dots , g-1.\\ ] ]",
    "for completeness and reproducibility , we give a detailed overview of the input parameters of all numerical examples in this paper .      in this example",
    "we consider a generalized fctl queue with a fixed - cycle of @xmath261 time slots .",
    "vehicles may arrive in time slots 110 and 1618 .",
    "the pgf of the joint distribution of @xmath262 is given by @xmath263 where @xmath264 note that the pgfs @xmath265 and @xmath266 both have the form of the joint output pgf in .",
    "each of them can be interpreted as the output of an upstream intersection with independent poisson arrivals with intensities respectively 0.3 and 0.075 and green periods of respectively ten and three time slots .",
    "the probabilities @xmath267 and @xmath268 correspond to the probability mass functions of the lengths of the effective green periods of the two upstream flows .",
    "equivalently , one can also consider them as the distributions of the platoon sizes @xmath12 and @xmath14 , see figure [ fig : platoonsizes ] .",
    "( 0.8,14.2 ) ",
    "( 1.4,15.6 )  ( 2.2,16.6 ) ",
    "( 2.6,23.8 ) ",
    "( 3.2,28.4 ) ",
    "( 5.4,36.2 ) ",
    "( 9,42.4 ) ",
    "( 19.3,43 ) ",
    "( 30.1,43.3 ) ",
    "( 34.8,42.9 ) ",
    "( 38.9,42.1 ) ",
    "( 41.5,41.1 ) ",
    "( 45.8,38.7 ) ",
    "( 56,31.3 ) ",
    "( 65,23.6 ) ",
    "( 66.2,22.1 ) ",
    "( 67.1,19.7 )  ( 67.3,17.5 ) ",
    "( 68.3,16.4 )  ( 68.3,16.4 ) ",
    "( 69.2,14.9 ) ",
    "( 68.7,14 ) ",
    "( 60.6,7.6 ) ",
    "( 50.9,5.6 ) ",
    "( 19.5,5.6 ) ",
    "( 9.7,7.4 )  ( 1.6,13.5 ) ; ( 9.6,7.5 ) circle [ radius=10 ] ; ( 9.6,7.5 ) circle [ radius=8.5 ] ; ( 60.6,7.5 ) circle [ radius=10 ] ; ( 60.6,7.5 ) circle [ radius=8.5 ] ; ( 48.8,27.2 )  ( 20,31.1 )  ( 17.7,32.9 )  ( 16.9,36 )  ( 18.5,39.5 ) ",
    "( 20.6,41.1 ) ",
    "( 22.4,41.6 ) ",
    "( 33.6,41.1 ) ",
    "( 37.6,40.3 ) ",
    "( 40.6,39 ) ",
    "( 49.9,33 ) ",
    "( 51.1,31.9 ) ",
    "( 51.5,30.3 ) ",
    "( 51,28.8 ) ",
    "( 50,28.1 ) ;    ( 0.8,14.2 ) ",
    "( 1.4,15.6 ) ",
    "( 2.2,16.6 ) ",
    "( 2.6,23.8 )  ( 3.2,28.4 ) ",
    "( 5.4,36.2 ) ",
    "( 9,42.4 ) ",
    "( 19.3,43 ) ",
    "( 30.1,43.3 ) ",
    "( 34.8,42.9 ) ",
    "( 38.9,42.1 ) ",
    "( 41.5,41.1 ) ",
    "( 45.8,38.7 ) ",
    "( 56,31.3 ) ",
    "( 65,23.6 ) ",
    "( 66.2,22.1 ) ",
    "( 67.1,19.7 ) ",
    "( 67.3,17.5 ) ",
    "( 68.3,16.4 ) ",
    "( 68.3,16.4 ) ",
    "( 69.2,14.9 )  ( 68.7,14 ) ",
    "( 60.6,7.6 ) ",
    "( 50.9,5.6 ) ",
    "( 19.5,5.6 ) ",
    "( 9.7,7.4 ) ",
    "( 1.6,13.5 ) ; ( 9.6,7.5 ) circle [ radius=10 ] ; ( 9.6,7.5 ) circle [ radius=8.5 ] ; ( 60.6,7.5 ) circle [ radius=10 ] ; ( 60.6,7.5 ) circle [ radius=8.5 ] ; ( 48.8,27.2 )  ( 20,31.1 )  ( 17.7,32.9 )  ( 16.9,36 )  ( 18.5,39.5 )  ( 20.6,41.1 )  ( 22.4,41.6 )  ( 33.6,41.1 ) ",
    "( 37.6,40.3 ) ",
    "( 40.6,39 ) ",
    "( 49.9,33 ) ",
    "( 51.1,31.9 ) ",
    "( 51.5,30.3 ) ",
    "( 51,28.8 ) ",
    "( 50,28.1 ) ;    ( 0.8,14.2 ) ",
    "( 1.4,15.6 ) ",
    "( 2.2,16.6 ) ",
    "( 2.6,23.8 ) ",
    "( 3.2,28.4 ) ",
    "( 5.4,36.2 ) ",
    "( 9,42.4 ) ",
    "( 19.3,43 ) ",
    "( 30.1,43.3 ) ",
    "( 34.8,42.9 ) ",
    "( 38.9,42.1 )  ( 41.5,41.1 )  ( 45.8,38.7 ) ",
    "( 56,31.3 ) ",
    "( 65,23.6 ) ",
    "( 66.2,22.1 )  ( 67.1,19.7 )  ( 67.3,17.5 ) ",
    "( 68.3,16.4 ) ",
    "( 68.3,16.4 )  ( 69.2,14.9 ) ",
    "( 68.7,14 ) ",
    "( 60.6,7.6 ) ",
    "( 50.9,5.6 ) ",
    "( 19.5,5.6 ) ",
    "( 9.7,7.4 ) ",
    "( 1.6,13.5 ) ; ( 9.6,7.5 ) circle [ radius=10 ] ; ( 9.6,7.5 ) circle [ radius=8.5 ] ; ( 60.6,7.5 ) circle [ radius=10 ] ; ( 60.6,7.5 ) circle [ radius=8.5 ] ; ( 48.8,27.2 ) ",
    "( 20,31.1 ) ",
    "( 17.7,32.9 ) ",
    "( 16.9,36 ) ",
    "( 18.5,39.5 ) ",
    "( 20.6,41.1 ) ",
    "( 22.4,41.6 ) ",
    "( 33.6,41.1 ) ",
    "( 37.6,40.3 ) ",
    "( 40.6,39 ) ",
    "( 49.9,33 )  ( 51.1,31.9 )  ( 51.5,30.3 ) ",
    "( 51,28.8 ) ",
    "( 50,28.1 ) ;    ( 0.8,14.2 ) ",
    "( 1.4,15.6 ) ",
    "( 2.2,16.6 ) ",
    "( 2.6,23.8 ) ",
    "( 3.2,28.4 ) ",
    "( 5.4,36.2 ) ",
    "( 9,42.4 ) ",
    "( 19.3,43 )  ( 30.1,43.3 ) ",
    "( 34.8,42.9 ) ",
    "( 38.9,42.1 ) ",
    "( 41.5,41.1 ) ",
    "( 45.8,38.7 ) ",
    "( 56,31.3 ) ",
    "( 65,23.6 ) ",
    "( 66.2,22.1 ) ",
    "( 67.1,19.7 ) ",
    "( 67.3,17.5 ) ",
    "( 68.3,16.4 )  ( 68.3,16.4 ) ",
    "( 69.2,14.9 ) ",
    "( 68.7,14 ) ",
    "( 60.6,7.6 ) ",
    "( 50.9,5.6 ) ",
    "( 19.5,5.6 ) ",
    "( 9.7,7.4 )  ( 1.6,13.5 ) ; ( 9.6,7.5 ) circle [ radius=10 ] ; ( 9.6,7.5 ) circle [ radius=8.5 ] ; ( 60.6,7.5 ) circle [ radius=10 ] ; ( 60.6,7.5 ) circle [ radius=8.5 ] ; ( 48.8,27.2 )  ( 20,31.1 )  ( 17.7,32.9 ) ",
    "( 16.9,36 ) ",
    "( 18.5,39.5 ) ",
    "( 20.6,41.1 ) ",
    "( 22.4,41.6 ) ",
    "( 33.6,41.1 ) ",
    "( 37.6,40.3 ) ",
    "( 40.6,39 )  ( 49.9,33 ) ",
    "( 51.1,31.9 ) ",
    "( 51.5,30.3 ) ",
    "( 51,28.8 ) ",
    "( 50,28.1 ) ;    ( 0.8,14.2 ) ",
    "( 1.4,15.6 )  ( 2.2,16.6 )  ( 2.6,23.8 ) ",
    "( 3.2,28.4 ) ",
    "( 5.4,36.2 ) ",
    "( 9,42.4 ) ",
    "( 19.3,43 ) ",
    "( 30.1,43.3 ) ",
    "( 34.8,42.9 ) ",
    "( 38.9,42.1 ) ",
    "( 41.5,41.1 )  ( 45.8,38.7 ) ",
    "( 56,31.3 ) ",
    "( 65,23.6 ) ",
    "( 66.2,22.1 ) ",
    "( 67.1,19.7 ) ",
    "( 67.3,17.5 ) ",
    "( 68.3,16.4 ) ",
    "( 68.3,16.4 ) ",
    "( 69.2,14.9 ) ",
    "( 68.7,14 ) ",
    "( 60.6,7.6 ) ",
    "( 50.9,5.6 ) ",
    "( 19.5,5.6 ) ",
    "( 9.7,7.4 ) ",
    "( 1.6,13.5 ) ; ( 9.6,7.5 ) circle [ radius=10 ] ; ( 9.6,7.5 ) circle [ radius=8.5 ] ;",
    "( 60.6,7.5 ) circle [ radius=10 ] ; ( 60.6,7.5 ) circle [ radius=8.5 ] ; ( 48.8,27.2 )  ( 20,31.1 )  ( 17.7,32.9 )  ( 16.9,36 )  ( 18.5,39.5 )  ( 20.6,41.1 ) ",
    "( 22.4,41.6 )  ( 33.6,41.1 ) ",
    "( 37.6,40.3 ) ",
    "( 40.6,39 ) ",
    "( 49.9,33 ) ",
    "( 51.1,31.9 ) ",
    "( 51.5,30.3 ) ",
    "( 51,28.8 ) ",
    "( 50,28.1 ) ;    ( 0.8,14.2 ) ",
    "( 1.4,15.6 ) ",
    "( 2.2,16.6 ) ",
    "( 2.6,23.8 )  ( 3.2,28.4 ) ",
    "( 5.4,36.2 ) ",
    "( 9,42.4 )  ( 19.3,43 ) ",
    "( 30.1,43.3 ) ",
    "( 34.8,42.9 ) ",
    "( 38.9,42.1 ) ",
    "( 41.5,41.1 ) ",
    "( 45.8,38.7 ) ",
    "( 56,31.3 ) ",
    "( 65,23.6 ) ",
    "( 66.2,22.1 ) ",
    "( 67.1,19.7 ) ",
    "( 67.3,17.5 ) ",
    "( 68.3,16.4 ) ",
    "( 68.3,16.4 ) ",
    "( 69.2,14.9 ) ",
    "( 68.7,14 ) ",
    "( 60.6,7.6 ) ",
    "( 50.9,5.6 ) ",
    "( 19.5,5.6 ) ",
    "( 9.7,7.4 ) ",
    "( 1.6,13.5 ) ; ( 9.6,7.5 ) circle [ radius=10 ] ; ( 9.6,7.5 ) circle [ radius=8.5 ] ; ( 60.6,7.5 ) circle [ radius=10 ] ;",
    "( 60.6,7.5 ) circle [ radius=8.5 ] ; ( 48.8,27.2 )  ( 20,31.1 ) ",
    "( 17.7,32.9 ) ",
    "( 16.9,36 ) ",
    "( 18.5,39.5 ) ",
    "( 20.6,41.1 ) ",
    "( 22.4,41.6 ) ",
    "( 33.6,41.1 ) ",
    "( 37.6,40.3 ) ",
    "( 40.6,39 ) ",
    "( 49.9,33 ) ",
    "( 51.1,31.9 ) ",
    "( 51.5,30.3 ) ",
    "( 51,28.8 ) ",
    "( 50,28.1 ) ;    ( 0.8,14.2 ) ",
    "( 1.4,15.6 )  ( 2.2,16.6 ) ",
    "( 2.6,23.8 )  ( 3.2,28.4 ) ",
    "( 5.4,36.2 ) ",
    "( 9,42.4 ) ",
    "( 19.3,43 ) ",
    "( 30.1,43.3 ) ",
    "( 34.8,42.9 ) ",
    "( 38.9,42.1 ) ",
    "( 41.5,41.1 ) ",
    "( 45.8,38.7 ) ",
    "( 56,31.3 ) ",
    "( 65,23.6 ) ",
    "( 66.2,22.1 )  ( 67.1,19.7 ) ",
    "( 67.3,17.5 ) ",
    "( 68.3,16.4 ) ",
    "( 68.3,16.4 ) ",
    "( 69.2,14.9 ) ",
    "( 68.7,14 ) ",
    "( 60.6,7.6 )  ( 50.9,5.6 ) ",
    "( 19.5,5.6 ) ",
    "( 9.7,7.4 ) ",
    "( 1.6,13.5 ) ; ( 9.6,7.5 ) circle [ radius=10 ] ; ( 9.6,7.5 ) circle [ radius=8.5 ] ; ( 60.6,7.5 ) circle [ radius=10 ] ; ( 60.6,7.5 ) circle [ radius=8.5 ] ; ( 48.8,27.2 ) ",
    "( 20,31.1 ) ",
    "( 17.7,32.9 ) ",
    "( 16.9,36 ) ",
    "( 18.5,39.5 ) ",
    "( 20.6,41.1 ) ",
    "( 22.4,41.6 ) ",
    "( 33.6,41.1 ) ",
    "( 37.6,40.3 ) ",
    "( 40.6,39 ) ",
    "( 49.9,33 ) ",
    "( 51.1,31.9 ) ",
    "( 51.5,30.3 ) ",
    "( 51,28.8 ) ",
    "( 50,28.1 ) ;    ( 0.8,14.2 ) ",
    "( 1.4,15.6 ) ",
    "( 2.2,16.6 ) ",
    "( 2.6,23.8 ) ",
    "( 3.2,28.4 ) ",
    "( 5.4,36.2 ) ",
    "( 9,42.4 ) ",
    "( 19.3,43 ) ",
    "( 30.1,43.3 ) ",
    "( 34.8,42.9 ) ",
    "( 38.9,42.1 ) ",
    "( 41.5,41.1 ) ",
    "( 45.8,38.7 ) ",
    "( 56,31.3 ) ",
    "( 65,23.6 ) ",
    "( 66.2,22.1 ) ",
    "( 67.1,19.7 ) ",
    "( 67.3,17.5 ) ",
    "( 68.3,16.4 ) ",
    "( 68.3,16.4 ) ",
    "( 69.2,14.9 )  ( 68.7,14 ) ",
    "( 60.6,7.6 ) ",
    "( 50.9,5.6 ) ",
    "( 19.5,5.6 ) ",
    "( 9.7,7.4 ) ",
    "( 1.6,13.5 ) ; ( 9.6,7.5 ) circle [ radius=10 ] ; ( 9.6,7.5 ) circle [ radius=8.5 ] ; ( 60.6,7.5 ) circle [ radius=10 ] ; ( 60.6,7.5 ) circle [ radius=8.5 ] ; ( 48.8,27.2 ) ",
    "( 20,31.1 ) ",
    "( 17.7,32.9 ) ",
    "( 16.9,36 ) ",
    "( 18.5,39.5 ) ",
    "( 20.6,41.1 ) ",
    "( 22.4,41.6 ) ",
    "( 33.6,41.1 ) ",
    "( 37.6,40.3 )  ( 40.6,39 ) ",
    "( 49.9,33 ) ",
    "( 51.1,31.9 ) ",
    "( 51.5,30.3 ) ",
    "( 51,28.8 ) ",
    "( 50,28.1 ) ;    ( 0.8,14.2 ) ",
    "( 1.4,15.6 )  ( 2.2,16.6 ) ",
    "( 2.6,23.8 ) ",
    "( 3.2,28.4 ) ",
    "( 5.4,36.2 ) ",
    "( 9,42.4 ) ",
    "( 19.3,43 )  ( 30.1,43.3 ) ",
    "( 34.8,42.9 ) ",
    "( 38.9,42.1 ) ",
    "( 41.5,41.1 ) ",
    "( 45.8,38.7 ) ",
    "( 56,31.3 ) ",
    "( 65,23.6 ) ",
    "( 66.2,22.1 ) ",
    "( 67.1,19.7 ) ",
    "( 67.3,17.5 ) ",
    "( 68.3,16.4 ) ",
    "( 68.3,16.4 ) ",
    "( 69.2,14.9 ) ",
    "( 68.7,14 ) ",
    "( 60.6,7.6 ) ",
    "( 50.9,5.6 ) ",
    "( 19.5,5.6 ) ",
    "( 9.7,7.4 ) ",
    "( 1.6,13.5 ) ; ( 9.6,7.5 ) circle [ radius=10 ] ; ( 9.6,7.5 ) circle [ radius=8.5 ] ; ( 60.6,7.5 ) circle [ radius=10 ] ; ( 60.6,7.5 ) circle [ radius=8.5 ] ; ( 48.8,27.2 ) ",
    "( 20,31.1 ) ",
    "( 17.7,32.9 ) ",
    "( 16.9,36 ) ",
    "( 18.5,39.5 ) ",
    "( 20.6,41.1 ) ",
    "( 22.4,41.6 ) ",
    "( 33.6,41.1 ) ",
    "( 37.6,40.3 ) ",
    "( 40.6,39 ) ",
    "( 49.9,33 ) ",
    "( 51.1,31.9 ) ",
    "( 51.5,30.3 ) ",
    "( 51,28.8 ) ",
    "( 50,28.1 ) ;    ( 0.8,14.2 ) ",
    "( 1.4,15.6 ) ",
    "( 2.2,16.6 ) ",
    "( 2.6,23.8 ) ",
    "( 3.2,28.4 ) ",
    "( 5.4,36.2 ) ",
    "( 9,42.4 ) ",
    "( 19.3,43 ) ",
    "( 30.1,43.3 ) ",
    "( 34.8,42.9 ) ",
    "( 38.9,42.1 ) ",
    "( 41.5,41.1 ) ",
    "( 45.8,38.7 ) ",
    "( 56,31.3 ) ",
    "( 65,23.6 ) ",
    "( 66.2,22.1 ) ",
    "( 67.1,19.7 ) ",
    "( 67.3,17.5 ) ",
    "( 68.3,16.4 ) ",
    "( 68.3,16.4 ) ",
    "( 69.2,14.9 ) ",
    "( 68.7,14 ) ",
    "( 60.6,7.6 ) ",
    "( 50.9,5.6 ) ",
    "( 19.5,5.6 ) ",
    "( 9.7,7.4 ) ",
    "( 1.6,13.5 ) ; ( 9.6,7.5 ) circle [ radius=10 ] ; ( 9.6,7.5 ) circle [ radius=8.5 ] ; ( 60.6,7.5 ) circle [ radius=10 ] ; ( 60.6,7.5 ) circle [ radius=8.5 ] ; ( 48.8,27.2 ) ",
    "( 20,31.1 ) ",
    "( 17.7,32.9 ) ",
    "( 16.9,36 ) ",
    "( 18.5,39.5 ) ",
    "( 20.6,41.1 ) ",
    "( 22.4,41.6 ) ",
    "( 33.6,41.1 ) ",
    "( 37.6,40.3 ) ",
    "( 40.6,39 ) ",
    "( 49.9,33 ) ",
    "( 51.1,31.9 )  ( 51.5,30.3 ) ",
    "( 51,28.8 ) ",
    "( 50,28.1 ) ;    ( 0.8,14.2 ) ",
    "( 1.4,15.6 ) ",
    "( 2.2,16.6 ) ",
    "( 2.6,23.8 ) ",
    "( 3.2,28.4 ) ",
    "( 5.4,36.2 ) ",
    "( 9,42.4 ) ",
    "( 19.3,43 ) ",
    "( 30.1,43.3 ) ",
    "( 34.8,42.9 ) ",
    "( 38.9,42.1 ) ",
    "( 41.5,41.1 ) ",
    "( 45.8,38.7 ) ",
    "( 56,31.3 ) ",
    "( 65,23.6 )  ( 66.2,22.1 ) ",
    "( 67.1,19.7 ) ",
    "( 67.3,17.5 ) ",
    "( 68.3,16.4 ) ",
    "( 68.3,16.4 ) ",
    "( 69.2,14.9 ) ",
    "( 68.7,14 ) ",
    "( 60.6,7.6 ) ",
    "( 50.9,5.6 ) ",
    "( 19.5,5.6 ) ",
    "( 9.7,7.4 ) ",
    "( 1.6,13.5 ) ; ( 9.6,7.5 ) circle [ radius=10 ] ; ( 9.6,7.5 ) circle [ radius=8.5 ] ; ( 60.6,7.5 ) circle [ radius=10 ] ; ( 60.6,7.5 ) circle [ radius=8.5 ] ; ( 48.8,27.2 )  ( 20,31.1 ) ",
    "( 17.7,32.9 ) ",
    "( 16.9,36 ) ",
    "( 18.5,39.5 ) ",
    "( 20.6,41.1 ) ",
    "( 22.4,41.6 ) ",
    "( 33.6,41.1 ) ",
    "( 37.6,40.3 ) ",
    "( 40.6,39 ) ",
    "( 49.9,33 ) ",
    "( 51.1,31.9 ) ",
    "( 51.5,30.3 ) ",
    "( 51,28.8 ) ",
    "( 50,28.1 ) ;        ccc , and the probability distributions of the two platoon sizes @xmath12 and @xmath14 .",
    "( a ) graphical representation of the arrival pattern ; ( b ) distribution of platoon 1 size ; ( c ) distribution of platoon 2 size.,title=\"fig:\",height=151 ]      & & , and the probability distributions of the two platoon sizes @xmath12 and @xmath14 .",
    "( a ) graphical representation of the arrival pattern ; ( b ) distribution of platoon 1 size ; ( c ) distribution of platoon 2 size.,title=\"fig:\",height=151 ]        [ [ network - example - without - side - traffic - subsection - sectnetworkexamples . ] ] network example without side traffic , subsection [ sect : networkexamples ] .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in this network all ten intersections have synchronized settings with @xmath261 .",
    "the first intersection has external arrivals from a poisson process with intensity @xmath210 , @xmath271 let @xmath272 denote the occupation rate , which can be interpreted as the fraction of utilized capacity at each intersection .",
    "take @xmath210 and hence @xmath273 .",
    "the arrival patterns at the downstream intersections depend on the delay parameter @xmath204 .",
    "for example , when @xmath206 , we have @xmath274 again , @xmath275 represent the probabilities that the platoon from the first intersection consists of , respectively , 0 , 1 , 2 ,  , 10 vehicles .",
    "due to the fact that the first intersection operates close to its maximum capacity , the maximum platoon size of ten vehicles is most likely to occur .",
    "[ [ network - example - with - side - traffic - subsection - sectnetworkexamples . ] ] network example with side traffic , subsection [ sect : networkexamples ] .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in this network we have ten queues in the main flow , @xmath276 , with synchronized settings @xmath277 for @xmath278 .",
    "the first intersection has external arrivals from a poisson process with intensity @xmath279 , @xmath280 for @xmath281 , the input of @xmath282 consists of the delayed output of @xmath283 and @xmath194 , see figure [ fig : networksidetraffic ] .",
    "the minor flows @xmath284 have cycle lengths of twenty time slots , which makes it possible to synchronize them with the major flows .",
    "however , they have different green periods of _ three _ time slots taking place in time slots 16 , 17 , and 18 to avoid conflicts with the main traffic flow .",
    "the input to each of these minor flows is a poisson process with intensity @xmath285 , for @xmath286 , @xmath287 we use @xmath288/g^{(i,0)}$ ] to denote the occupation rate of the main flow of intersection @xmath5 .",
    "due to the inflow of side traffic , the occupation rate of the main flows increases linearly from @xmath289 to @xmath290 ."
  ],
  "abstract_text": [
    "<S> we present an algorithmic method for analyzing networks of intersections with static signaling , with as primary example a line network that allows traffic flow over several intersections in one main direction . </S>",
    "<S> the method decomposes the network into separate intersections and treats each intersection in isolation using an extension of the fixed - cycle traffic - light ( fctl ) queue . </S>",
    "<S> the network effects are modeled by matching the output process of one intersection with the input process of the next ( downstream ) intersection . </S>",
    "<S> this network analysis provides insight into wave phenomena due to vehicles experiencing progressive cascades of green lights and sheds light on platoon forming in case of imperfections . </S>",
    "<S> our algorithm is shown to match results from extensive discrete - event simulations and can also be applied to more complex network structures .    * </S>",
    "<S> keywords : * fixed - cycle traffic - light queue ; performance evaluation ; queueing theory ; steady - state distribution ; traffic engineering ; transform solution ; stochastic networks + * ams 2000 subject classification*. 60e10 , 60j10 , 60k25 , 68m20 , 90b20 </S>"
  ]
}
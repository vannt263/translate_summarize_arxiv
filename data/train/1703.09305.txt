{
  "article_text": [
    "software packages usually report the significance of statistical tests using p - values .",
    "most users will base further steps of their analyses on where those p - values lie with respect to certain thresholds . to facilitate this",
    ", many tests in statistical software such as _ r _ @xcite , _ sas _ @xcite or _ spss _ @xcite translate the significance to a star rating system , in which typically @xmath2 $ ] is denoted by * , @xmath3 $ ] is denoted by * * and @xmath4 is denoted by * * * .    in this article , we consider statistical tests whose p - values can only be approximated by sequentially drawn monte carlo samples . among others ,",
    "this scenario arises in bootstrap or permutation tests , see @xcite for recent examples .",
    "standard implementations of monte carlo tests in software packages usually take a fixed number of samples and estimate p - values using the number of exceedances over the observed value of the test statistic .",
    "examples of this approach include the computation of bootstrap p - values inside the function _",
    "chisq.test _ in _ r _ or the function _",
    "t - test _ in _",
    "spss_. however , the p - value returned by the aforementioned functions is computed in a rather ad - hoc fashion : in particular , there is no control of the _ resampling risk _ , meaning the probability that the exact and the approximated p - value lie on two opposite sides of the testing threshold ( usually @xmath5 , @xmath6 or @xmath7 ) .",
    "resampling techniques to approximate p - values while controlling the resampling risk have already been studied in the literature . following early work on stopping criteria @xcite , @xcite and @xcite present truncated monte carlo tests which bound the resampling risk .",
    "a bayesian approach has been proposed in @xcite .",
    "several articles have suggested improvements of these methods @xcite .    however , the aforementioned methods compute decisions in expected infinite runtime and solely focus on whether the p - value @xmath0 lies above or below one given threshold @xmath8 : control of the resampling risk with respect to multiple thresholds or finite runtime results are not derived . in the present article , we present algorithms having those two properties . instead of thresholds ,",
    "we consider a finite set of user - specified intervals ( called `` p - value buckets '' ) which cover the interval @xmath1 $ ] and which can be overlapping .",
    "our algorithms return one of those p - value buckets which is guaranteed to contain the unknown ( true ) p - value ( up to a uniformly bounded error ) .",
    "we find that suitably chosen overlapping buckets allow guaranteed decisions in finite time .",
    "such finite time decisions come at the expense of softening the classical way of reporting the significance of a hypothesis . for this",
    "we suggest specific choices of p - value buckets which lead to an extension of the classical star rating ( * , * * , * * * ) to indicate the significance of a hypothesis .",
    "the article is structured as follows .",
    "section  [ section_setting ] introduces the mathematical setting and section  [ section_general_algorithm ] presents a general algorithm to decide the location of a p - value @xmath0 with respect to several pre - specified p - value buckets .",
    "this algorithm relies on the construction of certain confidence sequences for @xmath0 for which we present two approaches : one based on likelihood martingales @xcite in section  [ sec : robbinslai ] and one based on the _ simctest _ algorithm of @xcite in section  [ sec : simctest ] .",
    "we consider non - overlapping p - value buckets in section  [ section_nonoverlapping ] and overlapping buckets in section  [ section_overlapping ] .",
    "the article concludes with a data example in section  [ section_example ] and a discussion in section  [ section_discussion ] .",
    "our algorithms are implemented in the r - package ` simctest ` available on cran , the _ comprehensive r archive network_. the supplementary material includes r - code to reproduce all figures and tables displayed in the article .",
    "we consider one hypothesis @xmath9 which we would like to test with a given statistical test .",
    "let @xmath10 denote the test statistic and let @xmath11 be the evaluation of @xmath10 on some given data . for simplicity , we assume that @xmath9 should be rejected for large values of @xmath11 . in this case the p - value is commonly defined as the probability of observing a statistic at least as extreme as @xmath11 , i.e.@xmath12 where @xmath13 is a probability measure under the null hypothesis .",
    "we assume that the p - value @xmath0 under investigation is not available analytically but can be approximated using monte carlo simulation . to this end",
    ", we assume it is possible to draw independent samples under @xmath9 : evaluating the test statistic @xmath10 on each of them and comparing the result to the observed realization of @xmath10 then allows to approximate the p - value as @xmath14 , where @xmath15 is the estimated null - distribution based on @xmath16 samples ( for instance , using bootstrap tests ) . the exceedances over the observed realization of @xmath10",
    "can equivalently be modeled using a stream of independent random variables @xmath17 , @xmath18 , having a bernoulli@xmath19 distribution .",
    "let @xmath20 be a set of sub - intervals of @xmath1 $ ] that cover @xmath1 $ ] , i.e. @xmath21 $ ] .",
    "we call any such @xmath20 a set of _ p - value buckets_. the goal of our algorithms is to find a @xmath22 such that @xmath23 .    for example , suppose @xmath24,(10^{-3},0.01],(0.01,0.05],(0.05,1]\\}.\\ ] ] finding a @xmath25 such that @xmath23 is equivalent to deciding where @xmath0 lies in relation to the three levels @xmath26 , @xmath27 and @xmath28 traditionally employed in hypothesis testing .",
    "using the intervals in @xmath29 can result in an infinite runtime ( if @xmath0 lies exactly on a boundary ) .",
    "however , section  [ section_overlapping ] shows that decisions in finite runtime can be obtained by using _",
    "auxiliary _ overlapping p - value buckets .",
    "for instance , consider the set of p - value buckets given by @xmath30,(4\\cdot 10^{-3},0.03],(0.03,0.1]\\}\\ ] ] which has the property that any @xmath31 is contained in the interior of a @xmath32 ( for @xmath33 , we require that there exists @xmath22 and @xmath34 such that @xmath35 , and similarly for @xmath36 ) .",
    "the choice of @xmath29 and @xmath37 is , of course , arbitrary .",
    "any set @xmath38 of disjoint intervals with endpoints given by ( traditional ) testing levels can be employed in our framework . likewise , finite runtimes can be achieved by extending @xmath38 with any choice of auxiliary intervals as long as any @xmath31 is contained in the interior of a @xmath32 .",
    "the algorithms we consider will return a confidence interval @xmath39 upon stopping and are constructed such that for every realization @xmath39 there exists @xmath22 such that @xmath40 .",
    "we suppose that for each @xmath41 , we can compute a confidence interval @xmath42 for @xmath0 based on @xmath43 such that the joint coverage probability of the sequence @xmath42 , @xmath44 , is at least @xmath45 , for some @xmath34 . in other words , we require @xmath46 for all @xmath47 $ ] . in sections  [ sec :",
    "robbinslai ] and  [ sec : simctest ] we will consider two constructions satisfying this property .    in order to compute a decision for @xmath0 with respect to the p - value buckets @xmath20 we define the general stopping time @xmath48 which denotes the minimal number of samples @xmath16 needed until a confidence interval for @xmath0 is fully contained in a @xmath49 .    for @xmath29 ,",
    "the time @xmath50 is the number of samples until @xmath42 is between two consecutive thresholds in @xmath51 , thus leading to a complete decision of @xmath9 with respect to all thresholds .",
    "likewise , the time @xmath52 can be interpreted as the number of samples needed until a decision of @xmath0 with respect to all but one of the thresholds @xmath26 , @xmath27 , or @xmath28 is computed .",
    "we let @xmath53 if @xmath54 and @xmath55 if @xmath56 , assuming that the limit exists . if @xmath57 is bounded , meaning if there exists @xmath58 such that @xmath59 , we can relax ( [ eqn : covprob ] ) to @xmath60 for all @xmath47 $ ] .",
    "a natural error criterion one might wish to control when computing is the risk of a _",
    "wrong _ a decision , meaning the probability that the decision based on the unknown @xmath0 and the decision based on any interval @xmath39 ( in particular , for @xmath61 ) do not coincide .",
    "we call this the _ resampling risk _ , defined as @xmath62 and will require our methods to bound the resampling risk at @xmath63 , i.e.  @xmath64 for all @xmath47 $ ] .",
    "the following sections present two approaches to compute a sequence of intervals for @xmath0 with bounded resampling risk .",
    "confidence sequences can be constructed from likelihood martingale inequalities @xcite . to be precise , @xcite proves that the following inequality @xmath65 holds true for all @xmath31 and @xmath66 , where @xmath67 and @xmath68 .",
    "therefore , @xmath69 : ( n+1)b(n , p , s_n)>\\epsilon\\}$ ] is a sequence of confidence sets for @xmath0 with the desired coverage probability of @xmath45 .    @xcite",
    "further shows that solving the left hand side of yields @xmath70 where @xmath71 are the two distinct roots @xcite of @xmath72 .",
    "indeed , if @xmath73 , a sequence of confidence intervals for @xmath0 is given by @xmath74 . in the case @xmath75 , the equation @xmath72 has only one root @xmath76 , leading to @xmath77 .",
    "likewise for the case @xmath78 which leads to the confidence interval @xmath79 $ ]",
    ".    for our purposes , the computation of the two roots @xmath80 and @xmath81 in can usually be avoided . for this",
    "we define the set of all inner boundaries of intervals @xmath82 , @xmath83 where @xmath84 ( @xmath85 ) denote the lower ( upper ) limit of the interval @xmath86 , respectively . using @xmath87 , the stopping time @xmath88",
    "can be rephrased as @xmath89 for a single threshold this approach has been suggested in @xcite .",
    "@xcite constructed stopping boundaries to compute a decision for a p - value with respect to a single threshold @xmath90 $ ] .",
    "we revisit this method before showing how it can be extended to p - value buckets .    before observing monte carlo samples , two integer sequences @xmath91 and",
    "@xmath92 serving as lower and upper stopping boundaries are computed .",
    "the algorithm then proceeds to draw samples @xmath93 until the trajectory @xmath94 hits either boundary .",
    "the stopping time for this method is thus @xmath95 .",
    "the two boundaries @xmath91 and @xmath92 are a function of both the threshold @xmath8 and some resampling risk @xmath96 .",
    "they are computed recursively in such a way that , given @xmath97 ( @xmath98 ) , the probability of hitting the upper ( lower ) boundary is less than @xmath96 . starting with @xmath99 , @xmath100 , the two sequences are recursively defined as @xmath101 where @xmath102 is a non - decreasing sequence satisfying @xmath103 as @xmath104 and @xmath105 .",
    "it controls how the overall error @xmath96 is spent over all iterations of the algorithm ( called a _ spending sequence _ in @xcite ) . in the remaining sections of this article we use @xmath106 with @xmath107 , which is",
    "the _ default spending sequence _ suggested in @xcite .",
    "the aforementioned method has a finite expected stopping time ( for @xmath108 ) and the probability of hitting the _ wrong _ boundary ( leading to a decision not equal to the one obtained based on the unknown @xmath0 ) is bounded by @xmath96 ( under the conditions @xmath109 and @xmath110 as @xmath104 , see ( * ? ? ?",
    "* theorem 1 ) ) .",
    "thus , upon stopping we define @xmath111 $ ] in case of hitting the lower boundary ( @xmath112 ) and @xmath113 $ ] in case of hitting the upper boundary ( @xmath114 ) . by construction",
    ", the interval @xmath39 has a coverage probability of @xmath115 .    to extend the approach of @xcite to multiple thresholds",
    "we construct the above stopping boundaries for each @xmath116 , denoted as @xmath117 and @xmath118 , using the same @xmath96 .",
    "we define the corresponding stopping times as @xmath119 ( based on the same sequence @xmath120 , see section  [ section_setting ] ) . we then define @xmath121&\\text{if } n<\\sigma_{\\alpha},\\\\      [ 0,\\alpha]&\\text{if } n\\geq\\sigma_{\\alpha } , s_{\\sigma_{\\alpha}}\\leq   l_{\\sigma_{\\alpha},\\alpha},\\\\      ( \\alpha,1]&\\text{if } n\\geq\\sigma_{\\alpha } , s_{\\sigma_{\\alpha}}\\geq   u_{\\sigma_{\\alpha},\\alpha } ,    \\end{cases}\\ ] ] and let @xmath122 .",
    "the following theorem shows that @xmath42 indeed has the desired joint coverage probability given in or when setting @xmath123 .",
    "this is useful , for instance , for stopping boundaries constructed to yield a finite runtime ( see section  [ section_setting ] ) .",
    "[ theorem_2epsilonnew ] let @xmath124 .",
    "suppose that @xmath125 and @xmath126 for all @xmath127 , @xmath128 , and @xmath129 ( computed as in with overall error @xmath96 for each @xmath116 ) .",
    "then for all @xmath47 $ ] , @xmath130    the proof can be found in appendix  [ section_proofs ] .",
    "the condition on the monotonicity of the boundaries ( @xmath125 and @xmath126 for all @xmath41 and @xmath131 with @xmath128 ) can be checked for a fixed spending sequence @xmath132 in two ways : for finite @xmath133 , the two inequalities can be checked manually after constructing the boundaries .    for @xmath134",
    ", the following lemma shows that under conditions , the monotonicity of the boundaries holds true for all @xmath135 , where @xmath136 can be computed as a solution to inequality , given in the appendix . for @xmath137",
    ", the inequalities again have to be checked manually .",
    "[ le : eventual_ineqbounds ] suppose @xmath109 and @xmath110 as @xmath104 .",
    "let @xmath138 with @xmath128 .",
    "then there exists @xmath139 such that for all @xmath140 , @xmath141    the condition on the spending sequence in lemma  [ le : eventual_ineqbounds ] is identical to the condition imposed in theorem 1 of @xcite and is satisfied by the default spending sequence ( [ eq : defaultspending ] ) .",
    "therefore , our default spending sequence ( [ eq : defaultspending ] ) with the p - value buckets used in this article ( @xmath142 , @xmath143 and @xmath144 ) satisfies the boundary conditions of theorem  [ theorem_2epsilonnew ] .",
    "the p - value buckets @xmath144 will be defined in ( [ eq : def_jn ] ) .",
    "for simctest ( gray ) and for robbins - lai ( additional region in black ) .",
    "right : expected effort to decide @xmath20 for both simctest and robbins - lai as a function of @xmath0 . ]     for simctest ( gray ) and for robbins - lai ( additional region in black ) .",
    "right : expected effort to decide @xmath20 for both simctest and robbins - lai as a function of @xmath0 . ]",
    "this section investigates the non - overlapping p - value buckets @xmath20 ( corresponding to the classical thresholds @xmath5 , @xmath6 and @xmath7 ) with respect to their implied stopping boundaries and expected runtime .",
    "figure  [ fig : nonoverlapping ] ( left ) displays the non - stopping regions for the buckets in @xmath20 . by construction",
    ", those regions bound the resampling risk at @xmath63 , where in this and all following simulations we always use @xmath145 .",
    "such non - stopping regions can be constructed for any algorithm , in principle , by checking on a grid of steps @xmath16 and possible observed exceedances @xmath146 whether or not an algorithm would have stopped .",
    "the gray region represents the non - stopping region for our general algorithm ( section  [ section_general_algorithm ] ) in connection with the simctest approach ( section  [ sec : simctest ] ) to compute a confidence sequence for @xmath0 .",
    "we observe that the non - stopping region for the robbins - lai approach ( section  [ sec : robbinslai ] ) is uniformly larger than the one for simctest ; we thus represent the additional region ( by which it extends simctest ) in black .",
    "as expected , the stopping regions are infinite for both approaches .",
    "since the stopping region for simctest is contained within the one for robbins - lai , simctest will always stop earlier than the latter approach , thus leading to faster decisions .    using the non - stopping regions depicted in figure  [ fig : nonoverlapping ] ( left )",
    ", the right plot of figure  [ fig : nonoverlapping ] shows the expected effort ( measured in terms of the number of samples drawn ) to compute a decision with respect to @xmath20 as a function of @xmath147 $ ] . for any given @xmath0 ,",
    "the expected effort is computed by iteratively ( over @xmath16 ) updating the distribution of @xmath146 conditional on not having stopped up to time @xmath16 . using this distribution , we work out the probability of stopping at step @xmath16 and add the appropriate contribution to the overall effort .    as expected , the effort for simctest is uniformly smaller than the one for robbins - lai .",
    "the effort diverges as @xmath0 approaches any of the thresholds in @xmath20 .",
    "this section takes a closer look at the overlapping p - value buckets given in @xmath148 .",
    "we show that overlapping buckets lead to decisions on @xmath0 in finite time but come at the cost of softening the classical star rating system to report significances ( * , * * and * * * ) . to suitably report decisions of monte carlo tests we propose an extension of the star rating system .",
    "finally , we calculate the probability of observing certain decisions on @xmath0 using three choices of p - value buckets and moreover , compare them with respect to their expected overall effort for three p - value distributions .      .",
    "maximal effort depicted as vertical lines for simctest ( dotted ) and robbins - lai ( dashed ) .",
    "right : expected effort to decide @xmath0 with respect to @xmath148 for both simctest and robbins - lai as a function of @xmath0 . ]    .",
    "maximal effort depicted as vertical lines for simctest ( dotted ) and robbins - lai ( dashed ) .",
    "right : expected effort to decide @xmath0 with respect to @xmath148 for both simctest and robbins - lai as a function of @xmath0 . ]    similarly to section  [ section_nonoverlapping ] , we repeat the computation of the non - stopping region and the expected effort for the set @xmath148 of overlapping p - value buckets .",
    "figure  [ fig : overlapping ] ( left ) shows that for @xmath148 , the non - stopping regions are finite . as in the non - overlapping case ( figure  [ fig : nonoverlapping ] , left ) , the non - stopping region of simctest is uniformly contained within the one of simctest .",
    "figure  [ fig : overlapping ] ( left ) also depicts the maximal effort ( that is , the worst - case number of steps needed to stop ) for both approaches as vertical lines . as visible from the plot ,",
    "the worst - case effort is considerably smaller for simctest ( dotted vertical line ) than for robbins - lai ( dashed vertical line ) .",
    "figure  [ fig : overlapping ] ( right ) depicts the expected effort as a function of @xmath0 .",
    "this effort is finite even in the case that @xmath0 coincides with one of the thresholds in @xmath148 .",
    "the effort is maximal in a neighborhood around each threshold , while in - between thresholds , the effort slightly decreases . for p - values",
    "larger than the maximal threshold in @xmath148 , the effort decreases to zero .",
    "as observed in section  [ section_nonoverlapping ] the effort for simctest is uniformly smaller than the one for robbins - lai .      .reporting the significance of a hypothesis : the classical way ( @xmath20 , first row ) from * ( weakly significant ) to * * * ( highly significant ) and an alternative approach ( @xmath148 , second row ) . for any threshold @xmath11 which remains undecided",
    ", we propose to report the significance of @xmath9 using the symbol above / below @xmath11 . [ cols=\"^,^,^,^,^,^,^,^,^ \" , ]     where @xmath149 $ ] , ps . @xmath150 $ ] for @xmath151 , and ps .",
    "@xmath152 $ ] for @xmath144 .",
    "we conduct @xmath153 runs to investigate the stability of the results . in each run",
    ", we use the same trajectory for all algorithms . table [",
    "pbucket_two_way_table ] displays the mean stopping time ( or equivalently , the average effort measured as number of samples ) and the distribution of the returned p - value buckets for @xmath0 .",
    "the table shows that while decisions for @xmath20 are stable using both robbins - lai and simctest , they are less so for @xmath37 and @xmath144 .",
    "notably , the decisions obtained with @xmath37 and @xmath144 are contradictory : using @xmath37 we obtain a ps .",
    "significance in most cases , whereas for @xmath144 we obtain * .",
    "both decisions are valid outcomes in the sense that they were computed with an @xmath63 bound on the resampling risk .",
    "however , the decision based on @xmath144 is considerably more stable than the one based on @xmath37 .",
    "moreover , figure  [ fig : outcomes ] shows that the decision regions corresponding to classical decisions are larger for @xmath144 than for @xmath37 while ensuring the same @xmath63 bound on the resampling risk .",
    "we therefore conclude that the decision based on @xmath144 is the more useful one of the two .",
    "indeed , a nave approximation of @xmath0 with @xmath154 monte carlo samples leads to a p - value estimate of @xmath155 , thus confirming the above result .    due to the uniformly larger non - stopping regions of robbins - lai in comparison to simctest ( see figures  [ fig : overlapping ] and  [ fig : jnarrow ] ) , as expected , the average effort ( stopping time ) is higher for robbins - lai than for simctest when applied to the same p - value buckets .",
    "however , the number of samples is not necessarily indicative of the runtime : due to the larger computational overhead to compute stopping boundaries in simctest , the runtime for robbins - lai or merely a nave approach with a constant number of samples can be faster in practice , especially when sampling is computationally cheap .",
    "this article shows that the generalization of testing thresholds to p - value buckets offers a flexible means to compute both guaranteed decisions for a given hypothesis in the classical sense as well as finite time decisions in an extended star rating system .    as @xmath0 approaches any threshold in the set of classical buckets @xmath20 , the effort for computing the correct bucket containing @xmath0 diverges . the effort with respect to @xmath37 and @xmath144",
    ", however , always stays finite for any @xmath156 $ ] .",
    "we propose to always use @xmath144 instead of @xmath37 due to ( 1 ) the reasonable effort of less than @xmath157 samples for @xmath144 in realistic scenarios ( table  [ tab : effort ] ) and ( 2 ) its tuned decision regions ( figure  [ fig : outcomes ] ) allowing for a higher probability of obtaining classical decisions .",
    "the present article leaves scope for a variety of further research directions .",
    "for instance , how should the p - value buckets be optimized in order to maximize the probability of obtaining a classical decision as opposed to one of the ( less interesting ) auxiliary thresholds ( see figure  [ fig : outcomes ] ) ?",
    "we show that the simctest approach for computing confidence intervals of @xmath0 computes decisions with less computational effort than the one of robbins - lai ( figures  [ fig : overlapping ] and  [ fig : jnarrow ] ) . whereas the approach based on robbins - lai",
    "is rather rigid , the spending sequence used in simctest offers a considerable degree of flexibility for tuning the method ( see section  [ sec : simctest ] ) .",
    "how can the simctest approach be optimized in such a way as to obtain , for instance , the lowest expected effort possible under @xmath158 or the lowest worst - case effort for any possible @xmath156 $ ] ?",
    "tuning simctest could involve , for instance , a parameterization of the spending sequence and an optimization of its parameters .",
    "by arguments in ( * ? ? ?",
    "* proof of theorem 1 ) , we have @xmath159 as @xmath104 , where @xmath160 . since @xmath161 there exists @xmath136 such that @xmath162 splitting @xmath163 and multiplying by @xmath16 yields @xmath164 from which @xmath165 follows by .      for a given threshold @xmath169 ,",
    "let @xmath170 be the event that the upper boundary is hit first before time @xmath133 and likewise let @xmath171 be the event that the lower boundary is hit first .",
    "then , for all @xmath172 with @xmath173 the following holds : @xmath174    indeed , to see @xmath175 , we can argue as follows . on the event @xmath176 , as @xmath125 for all @xmath41 , the trajectory @xmath177 must hit the upper boundary @xmath118 of @xmath8 no later than @xmath178 , hence @xmath179 .",
    "it remains to prove that the trajectory does not first hit the lower boundary @xmath117 of @xmath8 .",
    "indeed , if the trajectory does hit the lower boundary of @xmath8 before hitting its upper boundary , it also hits the lower boundary of @xmath180 ( as @xmath126 for all @xmath181 ) before time @xmath178 , thus contradicting being on the event @xmath176 .",
    "hence , we have @xmath182 .",
    "the proof of @xmath183 is similar .    using this notation , for all @xmath47",
    "$ ] , @xmath184 if @xmath185 then the first term is equal to @xmath186 .",
    "otherwise , let @xmath187 .",
    "then , by , @xmath188 the second term on the right hand side of ( [ le : splithitting ] ) can be dealt with similarly ."
  ],
  "abstract_text": [
    "<S> software packages usually report the results of statistical tests using p - values . </S>",
    "<S> users often interpret these by comparing them to standard thresholds , e.g.  0.1% , 1% and 5% , which is sometimes re - inforced by a star rating ( * * * , * * , * ) . in this article </S>",
    "<S> , we consider an arbitrary statistical test whose p - value @xmath0 is not available explicitly , but can be approximated by monte carlo samples , e.g. bootstrap or permutation tests . </S>",
    "<S> the standard implementation of such tests usually draws a fixed number of samples to approximate @xmath0 . </S>",
    "<S> however , the probability that the exact and the approximated p - value lie on different sides of a threshold ( thus changing the interpretation ) can be high , particularly for p - values close to a threshold . </S>",
    "<S> we present a method to overcome this . </S>",
    "<S> we consider a finite set of user - specified intervals which cover @xmath1 $ ] and which can be overlapping . </S>",
    "<S> we call these p - value buckets . </S>",
    "<S> we present algorithms that , with high probability , return a p - value bucket containing @xmath0 . suitably chosen </S>",
    "<S> overlapping buckets allow decisions in finite time and lead to an extension of the star rating . </S>",
    "<S> the proposed methods are suitable for use in standard software and can be computationally more efficient than standard implementations . </S>",
    "<S> we illustrate our methods using a contingency table example .    _ </S>",
    "<S> keywords : _ algorithms , bootstrap / resampling , hypothesis testing , sampling </S>"
  ]
}
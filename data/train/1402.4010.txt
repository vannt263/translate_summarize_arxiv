{
  "article_text": [
    "gordon moore s well - known and often cited prediction still holds @xcite , the fact is that for the past few years , cpu speeds have hardly been improving .",
    "instead , the number of cores within a single cpu is increasing .",
    "this situation poses a challenge for software development in general and research in particular : a hardware upgrade will , most of the time , fail to double the serial execution speed of its predecessor .",
    "however , since this commodity hardware is present in practically all modern desktop computers , it creates an opportunity for the parallel exploitation of these computing resources to enhance the performance of complex algorithms over large data sets .",
    "the challenge is thus to deliver the computing power of multi - core systems in order to tackle a computationally time - consuming problem , the completion of which is unfeasible using traditional serial approaches .",
    "moreover , by accessing many such computing nodes through a network connection , even more possibilities are available .",
    "a traditional approach when dealing with computationally expensive problem solving is to simplify the models in order to be able to execute their calculations within a feasible amount of time .",
    "clearly , this method increases the introduced error level , which is not an option for a certain group of simulations , e.g. , those dealing with disaster contingency planning and decision support @xcite .",
    "the conducted simulations during the planning phase of a radio network also belong to this group .",
    "their results are the basis for the decision making prior to physically installing the base stations and antennas that will cover a certain geographical area . a greater deviation of these results increases the probability of making the wrong decisions at the time of the installation , which may considerably increase the costs or even cause mobile - network operators to incur losses .",
    "various groups have successfully deployed high - performance computing ( hpc ) systems and techniques to solve different problems dealing with spatial data @xcite . this research has confirmed that a parallel paradigm such as master - worker , techniques like work pool ( or task farming ) and spatial - block partitioning are applicable when dealing with parallel implementations over large spatial data sets .",
    "however , it is well known that parallel programming and hpc often call for area experts in order to integrate these practices into a given environment @xcite . moreover , the wide range of options currently available creates even more barriers for general users wanting to benefit from hpc .    in this paper , we combine some of the known principles of hpc and introduce a new approach in order to improve the performance speed of a gis module for radio - propagation predictions .",
    "the efficiency improvement is based on overlapping process execution and communication in order to minimize the idle time of the worker processes and thus improve the overall efficiency of the system . to this end",
    ", we save the intermediate calculation results into an external database ( db ) instead of sending them back to the master process .",
    "we implement this approach as part of a parallel radio - prediction tool ( prato ) for the open - source geographic resources analysis support system ( grass ) @xcite . for its architecture ,",
    "we have focused on scalability , clean design and the openness of the tool , inspired by the grass gis .",
    "this makes it an ideal candidate for demonstrating the benefits and drawbacks of several reviewed patterns , while tackling the radio - coverage predictions of big problem instances , e.g. , real mobile networks containing thousands of transmitters over high - resolution terrains , and big - scale simulations covering the whole country .      in order to assess the benefits and drawbacks of various reviewed approaches from the performance point of view , we evaluate prato in a distributed computing environment . furthermore , by presenting a detailed description of its design and implementation , we provide an analysis of the patterns achieving higher efficiency levels , so that they can be adopted for general task parallelization in the grass gis .",
    "the paper is organized as follows .",
    "section [ sec : related - work ] gives an overview of the relevant publications , describing how they relate to our work .",
    "section [ sec : description - of - the - radio - coverage - prediction - tool ] gives a description of the radio - coverage prediction problem , including the radio - propagation model .",
    "section [ sec : design - and - implementation ] concentrates on the design principles and implementation details of the radio - propagation tool , for the serial and parallel versions . section [ sec : simulations ] discusses the experimental results and their analysis .",
    "finally , section [ sec : conclusion ] draws some conclusions .",
    "the task - parallelization problem within the grass environment has been addressed by several authors in a variety of studies .",
    "for example , in @xcite , the authors present a collection of grass modules for a watershed analysis .",
    "their work concentrates on different ways of slicing raster maps to take advantage of a message passing interface ( mpi ) implementation .    in the field of high - performance computing",
    ", the authors of  @xcite presented implementation examples of a grass raster module , used to process vegetation indexes for satellite images , for mpi and ninf - g environments .",
    "the authors acknowledge a limitation in the performance of their mpi implementation for big processing jobs .",
    "the restriction appears due to the computing nodes being fixed to a specific spatial range , since the input data are equally distributed among worker processes , creating an obstacle for load balancing in heterogeneous environments .    using a master - worker technique , the work by @xcite abstracts the grass data types into its own _ struct _ and mpi data types , thus not requiring the grass in the worker nodes .",
    "the data are evenly distributed by row among the workers , with each one receiving an exclusive column extent to work on .",
    "the test cluster contains heterogeneous hardware configurations .",
    "the authors note that data - set size is bounded by the amount of memory on each of the nodes , since they allocate the memory for the whole map as part of the set - up stage , before starting the calculation .",
    "regarding the data sets during the simulations , the largest one contains 3,265,110 points .",
    "they conclude that the data - set size should be large enough for the communication overhead to be hidden by the calculation time , so that the parallelization pays off .    in @xcite ,",
    "the authors employ a master - worker approach , using one worker process per worker node .",
    "the complete exploitation of the computing resources of a single computing node is achieved with openmp .",
    "the experimental environment features one host .",
    "the horizon - composition algorithm presents no calculation dependency among the spatial blocks .",
    "consequently , the digital elevation model ( dem ) may be divided into separate blocks to be independently calculated by each worker process .",
    "the authors present an improved algorithm that can also be used to accelerate other applications like visibility maps .",
    "the tasks are dynamically assigned to idle processes using a task - farming paradigm over the mpi .",
    "also , in @xcite there is no calculation dependency among the spatial blocks .",
    "the experimental evaluation is made over multiple cores of one cpu and a gpu , communicated using a master - worker setup .    in @xcite ,",
    "the authors present a parallel framework for gis integration . based on the principle of spatial dependency , they lower the calculation processing time by backing it with a knowledge database , delivering the heavy calculation load to the parallel back - end if a specific problem instance is not found in the database .",
    "there is an additional effort to achieve the presented goals , since the implementation of a fully functional gis ( or `` thick gis '' as the authors call it ) is required on both the desktop client and in the parallel environment .",
    "an agent - based approach for simulating spatial interactions is presented in @xcite .",
    "the authors approach decomposes the entire landscape into equally - sized regions , i.e. , a spatial - block division as in @xcite , which are in turn processed by a different core of a multi - core cpu .",
    "this work uses multi - core cpus instead of a computing cluster .",
    "some years ago , grid computing received the attention of the research community as a way of accessing the extra computational power needed for the spatial analysis of large data sets @xcite .",
    "however , several obstacles are still preventing this technology from being more widely used .",
    "namely , its adoption requires not only hardware and software compromises with respect to the involved parts , but also a behavioral change at the human level @xcite .",
    "the coverage planning of radio networks is a key problem that all mobile operators have to deal with .",
    "moreover , it has proven to be a fundamental issue , not only in lte networks , but also in other standards for mobile communications @xcite .",
    "one of the primary objectives of mobile - network planning is to efficiently use the allocated frequency band to ensure that some geographical area of interest can be satisfactorily reached with the base stations of the network . to this end ,",
    "radio - coverage prediction tools are of great importance as they allow network engineers to test different network configurations before physically implementing the changes . nevertheless , radio - coverage prediction is a complex task , mainly due to the several combinations of hardware and configuration parameters that have to be analyzed in the context of different environments .",
    "the complexity of the problem means that radio - coverage prediction is a computationally - intensive and time - consuming task , hence the importance of using fast and accurate tools ( see section [ sub : computational - complexity ] for a complexity analysis of the algorithm ) .",
    "additionally , since the number of deployed transmitters keeps growing with the adoption of modern standards @xcite , there is a clear need for a radio - propagation tool that is able to cope with larger work loads in a feasible amount of time ( see section [ sub : computational - complexity ] for the running time of the serial version ) .    in this work ,",
    "we present prato : a high - performance radio - propagation prediction tool for gsm ( 2 g ) , umts ( 3 g ) and lte ( 4 g ) radio networks .",
    "it is implemented as a module of the grass gis .",
    "it can be used for planning the different phases of a new radio - network installation , as well as a support tool for maintenance activities related to network troubleshooting in general and optimization in particular .",
    "specifically , automatic radio - coverage optimization requires the evaluation of millions of radio - propagation predictions in order to find a good solution set , which is unfeasible using other serial implementations of academic or commercial tools @xcite .    as a reference implementation",
    ", we used the publicly available radio - coverage prediction tool , developed in @xcite .",
    "the authors of this work developed a modular radio - coverage tool that performs separate calculations for radio - signal path loss and antenna radiation patterns , also taking into account different configuration parameters , such as antenna tilting , azimuth and height .",
    "the output result , saved as a raster map , is the maximum signal level over the target area , in which each point represents the received signal from the best serving transmitter .",
    "this work implements some well - known radio - propagation models , e.g. , okumura - hata  @xcite and cost 231  @xcite . the latter is explained in more detail in section [ sub : cost-231-model ] . regarding the accuracy of the predicted values , the authors  @xcite report comparable results to those of a state - of - the - art commercial tool . to ensure that our implementation is completely compliant with the previously mentioned reference ,",
    "we have designed a comparison test that consists of running both tools with the same set of input parameters .",
    "the test results from prato and the reference implementation were identical in all the tested cases .",
    "prato uses the cost-231 walfisch - ikegami radio - propagation model @xcite , which was introduced as an extension of the well - known cost hata model @xcite .",
    "the suitability of this model comes from the fact that it distinguishes between line - of - sight ( los ) and non - line - of - sight ( nlos ) conditions .    in this work , as well as in the reference implementation",
    "@xcite , the terrain profile is used for the los determination . in this context",
    ", a nlos situation appears when the first fresnel zone is obscured by at least one obstacle @xcite .",
    "we include a correction factor , based on the land usage ( clutter data ) , for accurately predicting the signal - loss effects due to foliage , buildings and other fabricated structures .",
    "this technique is also adopted by other propagation models for radio networks , like the artificial neural networks macro - cell model developed in  @xcite .",
    "consequently , we introduce an extra term for signal loss due to clutter ( @xmath0 ) to the walfisch - ikegami model  @xcite , defining the path loss as    @xmath1    where @xmath2 is the attenuation in free space and is defined as    @xmath3    if there is los between the transmitter antenna and the mobile , the path loss @xmath4 is defined as    @xmath5    whereas the path loss for nlos conditions is determined as    @xmath6    here , @xmath7 is the distance ( in kilometers ) from the transmitter to the receiver point , @xmath8 is the frequency ( in mhz ) , @xmath9 represents the diffraction from rooftop to the street , and @xmath10 represents the diffraction loss due to multiple obstacles .",
    "consequently , the total path loss from the antenna to the mobile device is calculated as in equation  ( [ eq : cost231 ] ) , where the attenuation in free space and due to clutter are also taken into account .",
    "this section describes the different functions contained in the serial version of prato , which is implemented as a grass module .",
    "their connections and data flow are depicted in , where the parallelograms of the flow diagram represent the input / output ( i / o ) operations .",
    "our design follows a similar internal organization as the radio - planning tool presented in @xcite , but with some important differences .",
    "first , the modular design was avoided in order to prevent the overhead of i / o operations between the components of a modular architecture .",
    "second , our approach employs a direct connection to an external database server for intermediate result saving , instead of the slow , built - in grass database drivers . to explicitly avoid tight coupling with a specific database vendor ,",
    "the generated output is formatted in plain text , which is then forwarded to the db .",
    "any further processing is achieved by issuing a query over the database tables that contain the partial results for each of the processed transmitters .    ]",
    "this step starts by calculating which receiver points , @xmath11 , are within the specified transmission radius ( see `` _ _ transmission radius _ _ '' in ) .",
    "the transmission radius is defined around each transmitter in order to limit the radio - propagation calculation to a reasonable distance . for these points ,",
    "the los and nlos conditions are calculated with respect to the transmitter ( see `` calculate los / nlos '' in ) .",
    "the following step consists of calculating the path loss for an isotropic source ( or omni antenna ) .",
    "this calculation is performed by applying the walfisch - ikegami model , which was previously defined in equation ( [ eq : cost231 ] ) , to each of the points within the transmission radius around the transmitter .",
    "shows an example result of the isotropic path - loss calculation , only including the map area within the transmission radius .",
    "the color scale is given in db , indicating the signal loss from the isotropic source of the transmitter , located at the center .",
    "notice the hilly terrain is clearly distinguished due to los and nlos conditions from the signal source .",
    "this step considers the antenna radiation diagram of the current transmitter and its influence over the isotropic path - loss calculation ( see `` calculate antenna influence '' in ) .",
    "working on the in - memory results generated by the previous step , the radiation diagram of the antenna is taken into account , including the beam direction , the electrical and the mechanical tilt .",
    "shows the map area within the transmission radius , where this calculation step was applied to the results from .",
    "notice the distortion of the signal propagation that the antenna has introduced .      in this step ,",
    "the path - loss prediction of the transmitter is saved in its own database table ( see `` save transmitter path - loss to db '' in ) .",
    "this is accomplished by connecting the standard output of the developed module with the standard input of a database client .",
    "naturally , the generated plain text should be understood by the db itself .",
    "the final radio - coverage prediction , containing the aggregation of the partial path - loss results of the involved transmitters , is created in this step ( see `` create final coverage prediction '' in ) .",
    "the received signal strength from each of the transmitters is calculated as the difference between its transmit power and the path loss for the receiver s corresponding position .",
    "this is done by executing an sql query over the tables containing the path - loss predictions of each of the processed transmitters .",
    "finally , the output is generated , using the grass built - in modules @xmath12 and @xmath13 , which create a raster map using the query results as the input .",
    "the final raster map contains the maximum received signal strength for each individual point , as shown in . in this case , the color scale is given in dbm , indicating the strongest received signal strength from the transmitters .    ]",
    "@xmath14 digital elevation model ( dem ) of the whole area .",
    "@xmath15 @xmath16 signal losses due to land usage of the whole area .",
    "@xmath15 @xmath17 transmitter configuration data .",
    "@xmath18 @xmath19 @xmath20 dem area within transmission radius of @xmath21 @xmath22 @xmath23 clutter area within transmission radius @xmath21 @xmath22 @xmath24 lineofsight ( @xmath25 ) @xmath26 @xmath27 pathloss ( @xmath28 ) @xmath26 @xmath29 antenna diagram of @xmath21 @xmath30 @xmath27 antennainfluence ( @xmath31 ) @xmath22 @xmath32 @xmath33 pathlossaggregation ( @xmath34 ) @xmath22 @xmath35    in this section , the time complexity of the radio - coverage prediction algorithm is presented , for which the pseudo code is listed in table [ tab : pseudocode - radio_coverage_algorithm ] .",
    "the algorithm starts by loading the input , i.e. , the dem and the clutter data . both regular square grids ( rsgs )",
    "should account for the same area and resolution , consequently containing the same number of pixels , @xmath36 .",
    "the transmitter data is then loaded into set @xmath37 , the cardinality of which is denoted as @xmath38 . for each transmitter @xmath39 , a smaller subarea of the dem and clutter data ( denoted @xmath40 and @xmath41 , respectively ) is delimited around @xmath21 , based on a given transmission radius .",
    "the number of pixels within this sub - area is denoted as @xmath42 , and its value is the same for all @xmath39 .",
    "the visibility for an rsg cell is computed using the _ lineofsight _ function , by walking from the antenna of the transmitter to the given element , along the elements intersected by a los , until either the visibility is blocked , or the target is reached  @xcite . regarding the _ pathloss _ function ,",
    "whenever a receiver point is in nlos , the walking path from the transmitter has to be inspected for obstacles , calculating the diffraction losses for each of them , i.e. , @xmath10 from equation ( [ eq : cost231_nlos ] ) .",
    "hence , its quadratic complexity , which dominates the complexity of the algorithm , together with _ lineofsight _ , resulting in an algorithmic complexity denoted by    @xmath43    although @xmath44 will generally be many orders of magnitude smaller than @xmath45 , its computational - time complexity is relevant for practical use . for example , assuming the radio - coverage prediction for one transmitter completes in around 15  seconds using a serial implementation , the prediction for a mobile network comprising 10,240 transmitters would have an execution time of almost two days .",
    "the implementation methodology adopted for prato follows a multi - paradigm , parallel programming approach in order to fully exploit the resources of each of the nodes in a computing cluster .",
    "this approach combines a master - worker paradigm with an external db . to efficiently use a shared memory multi - processor on the worker side , and to effectively overlap the calculation and communication , prato uses posix threads  @xcite .    to use the computing resources of a distributed memory system , such as a cluster of processors",
    ", prato uses the mpi  @xcite .",
    "the mpi is a message - passing standard that defines the syntax and semantics designed to function on a wide variety of parallel computers .",
    "the mpi enables multiple processes , running on different processors of a computer cluster , to communicate with each other .",
    "it was designed for high performance on both massively parallel machines and on workstation clusters .    in order to make the text clearer and to differentiate between the programming paradigms used from here on",
    ", we will refer to a posix thread simply as a ` thread ' and a mpi process as a ` process ' .      by maintaining our focus on the practical usability and performance of prato",
    ", we are introducing a parallel implementation to overcome the computational - time constraints that prevent a serial implementation of the radio - coverage prediction algorithm from tackling big problem instances in a feasible amount of time .",
    "a major drawback of the grass as a parallelization environment is that it is not thread - safe , meaning that concurrent changes to the same data set have an undefined behavior  @xcite .",
    "one technique to overcome this problem is to abstract the spatial data from the grass .",
    "for example , in  @xcite , the authors achieve the grass abstraction by introducing a _ point _ structure with four _ double _ attributes , where each pixel of the rsg is mapped to an instance of this structure .",
    "another possibility is for one of the processes , e.g. , the master , to read entire rows or columns of data before dispatching them for processing to the workers  @xcite . in this case ,",
    "an independence between row / column calculations is required , which is a problem - specific property . in our case",
    ", we propose to achieve the grass abstraction by loading the spatial data into a 2d matrix ( or matrices ) of basic data - type elements , e.g. , _ float _ or _",
    "double _ depending on the desired accuracy .",
    "the geographical location of each element is calculated as the geographical location of the matrix plus the element offset within it .",
    "the advantage of this technique is having the geographical location of each pixel readily available with a minimum memory footprint .",
    "moreover , a convenient consequence of this abstraction schema is that worker processes are completely independent of the grass , thus significantly simplifying the deployment of the parallel implementation over multiple computing hosts .    in the area of geographical information science ,",
    "the master - worker paradigm has been successfully applied by several authors @xcite .",
    "however , sometimes this technique presents certain issues that prevent the full exploitation of the available computing resources when deployed over several networked computers .",
    "additionally , such issues are difficult to measure when the parallelization involves only one computing node @xcite , i.e. , no network communication is required , or only a few processes deployed over a handful of nodes @xcite .",
    "specifically , we are referring to network saturation and idle processes within the master - worker model . generally speaking ,",
    "a single communicating process , e.g. , the master , is usually not able to saturate the network connection of a node .",
    "using more than one mpi process per node might solve this problem , but possible rank - ordering problems may appear , thus restricting the full utilization of the network @xcite .",
    "another issue appears when the master process executes the mpi code , in which case other processes sleep , making a serial use of the communication component of the system .",
    "consequently , the master process becomes the bottleneck of the parallel implementation as the number of worker processes it has to serve grows .",
    "this situation is also common when dealing with the metadata of a spatial region , which may relate to several elements of a rsg , making it a frequent cause of load imbalance @xcite . in our case ,",
    "the transmitter configuration and its antenna diagram represent metadata that are complementary to the sub - region that a transmitter covers .",
    "hybrid mpi - openmp implementations @xcite , in which no mpi calls are issued inside the openmp - parallel regions , also fail to saturate the network @xcite . a possible solution to this problem is to improve the communication overlap among the processes .",
    "to this end , we have implemented non - blocking point - to - point mpi operations , and an independent thread in the worker process to save the intermediate results to a db .",
    "we use one such database system per computer cluster , which also serves the input data to the grass , in order to aggregate the partial results of the path - loss predictions or to visualize them .",
    "it is important to note that any kind of database system may be used . by this we mean relational , distributed  @xcite or even those of the nosql type  @xcite .",
    "nevertheless , in this study we use a central relational database system , since they are the most popular and widely available ones . additionally , the non - blocking message - passing technique used to distribute the work - load among the nodes provides support for heterogeneous environments . as a result , computing nodes featuring more capable hardware receive more work than those with weaker configurations , thus ensuring a better utilization of the available computing resources despite hardware diversity and improved load balancing .",
    "the master process , for which the flow diagram is given in , is the only component that runs within the grass environment .",
    "as soon as the master process starts , the input parameters are read .",
    "this step corresponds to `` read input data '' in , and it is carried out in a similar way as in the serial version .",
    "the next step delivers the metadata that is common to all the transmitters and the whole region to all the processes ( see `` metadata broadcasting '' in ) . before distributing the work among the worker processes",
    ", the master process proceeds to decompose the loaded raster data into 2d matrices of basic - data - type elements , e.g. , _ float _ or _ double _ , before dispatching them to the multiple worker processes . in this case",
    ", the decomposition applies to the dem and the clutter data only , but it could be applied to any point - based data set . in the next step ,",
    "the master process starts an asynchronous message - driven processing loop ( see `` processing loop '' in ) , the main task of which is to assign and distribute the sub - region and configuration data of different transmitters among the idle worker processes .    the flow diagram shown in illustrates the `` processing loop '' step of the master process . in the processing loop ,",
    "the master process starts by checking the available worker processes , which will calculate the radio - coverage prediction for the next transmitter .",
    "it is worth pointing out that this step also serves as a stopping condition for the processing loop itself ( see `` any worker still on ? '' in ) .",
    "the active worker processes inform the master process that they are ready to compute by sending an idle message ( see `` wait for idle worker '' in ) .",
    "the master process then announces to the idle worker process that it is about to receive new data for the next calculation , and it dispatches the complete configuration of the transmitter to be processed ( see `` send keep - alive message '' and `` send transmitter data '' steps , respectively , in ) .",
    "this is only done in the case that there are transmitters for which the coverage prediction has yet to be calculated ( see `` any transmitters left ? '' in ) .",
    "the processing loop of the master process continues to distribute the transmitter data among the worker processes , which asynchronously become idle as they finish the radio - prediction calculations they have been assigned by the master process .",
    "when there are no more transmitters left , all the worker processes announcing they are idle will receive a shutdown message from the master process , indicating to them that they should stop running ( see `` send stop message '' in ) .",
    "the master process will keep doing this until all the worker processes have finished ( see `` any worker still on ? '' in ) , thus fulfilling the stopping condition for the processing loop .",
    "finally , the last step of the master process is devoted to creating the final output of the calculation , e.g. , a raster map ( see `` create final coverage prediction '' in ) .",
    "the final coverage prediction of all the transmitters is an aggregation from the individual path - loss results created by each of the worker processes during the `` processing loop '' phase in , which provides the source data for the final raster map .",
    "the aggregation of the individual transmitter path - loss results is accomplished by issuing an sql query over the database tables containing the partial results , in a similar way as in the serial version .",
    "an essential characteristic of the worker processes is that they are completely independent of the grass , i.e. , they do not have to run within the grass environment nor use any of the grass libraries to work .",
    "this aspect significantly simplifies the deployment phase to run prato on a computer cluster , since no grass installation is needed on the computing nodes hosting the worker processes .",
    "one possibility to overcome the thread - safety limitation of the grass is to save the transmitter path - loss predictions through the master process , thus avoiding concurrent access .",
    "however , for the workers to send intermediate results back to the master process , e.g. , as in @xcite , is a major bottleneck for the scalability of a parallel implementation .",
    "the scalability is limited by the master process , because it must serially process the received results in order to avoid inconsistencies due to concurrent access .",
    "instead , our approach allows each of the worker processes to output its intermediate results into a db , i.e. , each path - loss prediction in its own table .",
    "additionally , worker processes do this from an independent thread , which runs concurrently with the calculation of the next transmitter received from the master process . in this way",
    ", the overlap between the calculation and communication significantly hides the latency created by the result - dumping task , thus making better use of the available system resources .",
    "the computations of the worker processes , for which the flow diagram is given in , begin by receiving metadata about the transmitters and the geographical area from the master process during the initialization time ( see `` receive broadcasted metadata '' in ) .",
    "after the broadcasted metadata are received by all the worker processes , each one proceeds to inform the master process that it is ready ( i.e. , in an idle state ) to receive the transmitter - configuration data that defines which transmitter path - loss prediction to perform ( see `` send idle message '' in ) . if the master process does not give the instruction to stop processing ( see `` has stop message arrived ? '' in ) , the worker process collects the sub - region spatial data and the transmitter configuration ( see `` receive transmitter data '' in ) . in the event that a stop message is received",
    ", the worker process will wait for any result - dumping thread to finish ( see `` wait for result - dump thread '' in ) before shutting down .",
    "the coverage calculation itself follows a similar design as the serial version ( see `` coverage calculation '' in ) .    as mentioned before , the worker process launches an independent thread to save the path - loss prediction of the target transmitter to a database table ( see `` threaded save path - loss to db '' in ) .",
    "it is important to note that there is no possibility of data inconsistency due to the saving task being executed inside a thread , since path - loss data from different workers belong to different transmitters and are , at this point of the process , mutually exclusive .",
    "similar to @xcite , the message - passing technique used in this work enables a better use of the available computing resources , both in terms of scalability and load balancing , while introducing a negligible overhead .",
    "this last point is supported by the experimental results , introduced in section  [ sub : strong - scalability ] .",
    "the first reason to implement the message - passing technique is to support heterogeneous computing environments .",
    "in particular , our approach focuses on taking full advantage of the hardware of each computing node , thus explicitly avoiding the bottlenecks introduced by the slowest computing node in the cluster .",
    "this problem appears when evenly distributing the data among the worker processes on disparate hardware , as in  @xcite , being more noticeable with a larger number of computing nodes and processes . in other words ,",
    "computing nodes that deliver better performance have more calculations assigned to them",
    ". moreover , in real - world scenarios , it is often the case that a large number of dedicated computing nodes featuring exactly the same configuration is difficult to find , i.e. , not every organization owns a computer cluster .    a second reason for selecting a message - passing technique is related to the flexibility it provides for load balancing , which is of greater importance when dealing with extra data or information besides just spatial data @xcite .",
    "this can be seen in , where the master process , before delivering the spatial subset and transmitter - configuration data , sends a message to the worker process , indicating that it is about to receive more work .",
    "this a priori meaningless message plays a key role in correctly supporting the asynchronous process communication .",
    "notice that the subset of spatial data that a worker process receives is directly related to the transmitter for which the prediction will be calculated .",
    "similar to  @xcite , this problem - specific property enables the use of a data - decomposition technique based on a block partition of spatial data , e.g. , the dem and clutter data .    in general , there are many different ways a parallel program can be executed , because the steps from the different processes can be interleaved in various ways and a process can make non - deterministic choices @xcite , which may lead to situations such as race conditions @xcite and deadlocks .",
    "a deadlock occurs whenever two or more running processes are waiting for each other to finish , and thus neither ever does . to prevent prato from deadlocking , message sending and receiving",
    "should be paired , i.e. , an equal number of send and receive messages on the master and worker sides @xcite .",
    "depicts the master - worker message passing , from which the transmitter - data transmission has been excluded for clarity .",
    "notice how each idle message sent from the worker process is paired with an answer from the master process , whether it is a keep - alive or a stop message .",
    "considering the large computational power needed for predicting the radio - coverage of a real mobile network , the use of a computer cluster is recommended .",
    "a computer cluster is a group of interconnected computers that work together as a single system .",
    "computer clusters typically consist of several commodity pcs connected through a high - speed local - area network ( lan ) with a distributed file system , like nfs  @xcite .",
    "one such system is the degima cluster  @xcite at the nagasaki advanced computing center ( nacc ) of the nagasaki university in japan .",
    "this system ranked in the top 500 list of supercomputers until june 2012 , and in june 2011 it held third place in the green 500 list as one of the most energy - efficient supercomputers in the world .",
    "this section presents the simulations and analyses of the parallel version of prato .",
    "our aim is to provide an exhaustive analysis of the performance and scalability of the parallel implementation in order to achieve the objectives of this work .",
    "the most common usage case for prato is to perform a radio - coverage prediction for multiple transmitters .",
    "therefore , a straight - forward parallel decomposition is to divide a given problem instance by transmitter , for which each coverage prediction is calculated by a separate worker process .",
    "the following simulations were carried out on 34 computing nodes of the degima cluster .",
    "the computing nodes are connected by a lan , over a gigabit ethernet interconnect . as mentioned before ,",
    "the reason for using a high - end computer cluster such as degima is to explore by experimentation the advantages and drawbacks of the introduced methods .",
    "however , this does not imply any loss of generality when applying these principles over a different group of networked computers , i.e. , not acting as a computer cluster .",
    "each computing node of degima features one of two possible configurations , namely :    * intel core i5 - 2500 t quad - core processor cpu , clocked at 2.30 ghz , with 16 gb of ram ; and * intel core i7 - 2600k quad - core processor cpu , clocked at 3.40 ghz , also with 16 gb of ram .    during the simulation runs , the nodes equipped with the intel i5 cpu host the worker processes , whereas the master process and the postgresql database server ( version 9.1.4 ) each run on a different computing node , featuring an intel i7 cpu .",
    "the database server performs all its i / o operations on the local file system , which is mounted on an 8  gb ram disk . during the simulations , the path - loss predictions of 5,120 transmitters occupied less than 4  gb of this partition .",
    "all the nodes are equipped with a linux 64-bit operating system ( fedora distribution ) . as the message passing implementation we use openmpi , version 1.6.1 , which has been manually compiled with the distribution - supplied gcc compiler , version 4.4.4 .      to test the parallel performance of prato",
    ", we prepared different problem instances that emulate real radio networks of different sizes . in order to create the synthetic test data - sets with an arbitrary number of transmitters",
    ", we used the real data of a group of 2,000 transmitters , which we randomly replicate and distribute over the whole target area .",
    "the configuration parameters of these 2,000 transmitters were taken from the lte network deployed in slovenia by telekom slovenije , d.d .",
    "the path - loss predictions were calculated using the walfisch - ikegami model .",
    "the digital elevation model has an area of 20,270  km@xmath46 , with a resolution of 25  m@xmath46 .",
    "the clutter data extends over the same area and resolution , containing different levels of signal loss due to land usage .",
    "for all the points within a radius of 20  km around each transmitter , we assume that the receiver is positioned 1.5  m above the ground , and the frequency is set to 1,843  mhz .",
    "this set of simulations is meant to analyze the scalability of the parallel implementation in cases where the workload assigned to each process ( one mpi process per processor core ) remains constant as we increase the number of processor cores and the total size of the problem , i.e. , the number of transmitters deployed over the target area is directly proportional to the number of processor cores and worker processes .",
    "we do this by assigning a constant number of transmitters per core , while increasing the number of cores hosting the worker processes . here",
    "we test for the following numbers of transmitters per worker / core : @xmath47 , by progressively doubling the number of worker processes from 1 to 64 .",
    "problems that are particularly well - suited for parallel computing exhibit computational costs that are linearly dependent on the size of the problem .",
    "this property , also referred to as algorithmic scalability , means that proportionally increasing both the problem size and the number of cores results in a roughly constant time to solution .",
    "the master - worker ( mw ) configuration performs result aggregation continuously , i.e. , while receiving the intermediate results from the worker processes .",
    "in contrast , the master - worker - db ( mwd ) setup performs the result aggregation as the final step . with this set of experiments",
    ", we would like to investigate how the proposed mwd technique compares with the classic mw approach in terms of scalability when dealing with different problem instances and numbers of cores .",
    "an important fact about the presented simulations when using multi - threaded implementations is to avoid oversubscribing a computing node .",
    "for example , if deploying four worker processes over a quad - core cpu , the extra threads will have a counter effect on the parallel efficiency , since the cpu resources would be exhausted , which slows the whole process down .",
    "for this reason , we have deployed three worker processes per computing node , leaving one core free for executing the extra threads .",
    "the results represent the best running time out of a set of 20 independent simulation runs , in which we randomly selected both the transmitters and the rank ordering of the worker processes .",
    "the collected running times for the weak - scalability experiments are shown in .",
    "all the measurements express wall - clock times in seconds for each setup and problem instance , defined as the number of transmitters per process ( tx / process ) .",
    "the wall - clock time represents the real time that elapses from the start of the master process to its end , including the time that passes while waiting for the resources to become available .",
    "the running - time improvements of the master - worker - db against the master - worker setup are shown in table [ tab : weak_scaling - time_gain ] .    ]",
    ".running - time gain ( in percent ) of the simulations for the weak - scalability of the mwd setup relative to the classic mw approach.[tab : weak_scaling - time_gain ] [ cols=\"^,^,^,^,^,^,^,^ \" , ]     the time measurements observed from the weak - scalability results show that the classic mw approach performs well for up to four worker processes . when using eight worker processes , the mw setup is practically equivalent to the mwd approach , indicating that the master process is being fully exploited .",
    "when increasing the problem size and the number of worker processes to 16 , the running - time gain is already clear , favoring the mwd configuration .",
    "this gain keeps growing , although slower , as we increase the number of worker processes to 32 and 64 , confirming our hypothesis that in a classic mw approach , the parallel efficiency is bounded by the capacity of the master process to serve an increasing number of worker processes .",
    "interestingly , the gain when using 32 and 64 worker processes is almost the same .",
    "after further investigation , we found the reason for this behavior was due to the lan being completely saturated by the worker processes .",
    "consequently , they have to wait for the network resources to become available before sending or receiving data , which is not the case when running the mw setup .",
    "therefore , using the mwd approach we hit a hardware constraint , meaning that the bottleneck is no longer at the implementation level .",
    "moreover , since the master process is far from overloaded when serving 64 worker processes , we can expect the mwd approach will keep scaling if we use a faster network infrastructure , e.g. , 10-gigabit ethernet or infiniband .",
    "certainly , the parallel version of prato , when using the mwd approach , scales better when challenged with a large number of transmitters ( 5,120 for the biggest instance ) over 64 cores .",
    "this fact shows prato would be able to calculate the radio - coverage prediction for real networks in a feasible amount of time , since many operational radio networks have already deployed a comparable number of transmitters , e.g. , the 3 g network within the greater london authority area , in the uk @xcite .    not being able to achieve perfect weak scalability using the mwd setup is due to a number of factors .",
    "specifically , the overhead time of the serial sections of the parallel process grow proportionally with the number of cores , e.g. , aggregation of the intermediate results , although the total contribution of this overhead remains low for large problem sizes . moreover , the communication overhead grows linearly with the number of cores used .",
    "consequently , we can confirm the findings of @xcite , who concluded that the data - set size should be large enough for the communication overhead to be hidden by the calculation time , for parallelization to be profitable in terms of a running - time reduction .",
    "this set of simulations is meant to analyze the impact of increasing the number of computing cores for a given problem size , i.e. , the number of transmitters deployed over the target area does not change , while only the number of worker processes used is increased . here",
    "we test for the following number of transmitters : \\{1,280 , 2,560 , 5,120 } , by gradually doubling the number of workers from 1 to 64 for each problem size .      ]",
    "similar to the weak - scalability experiments , these time measurements show that when applying a classic mw approach the running - time reduction starts flattening when more than eight worker processes are used .",
    "moreover , the running times for 16 , 32 and 64 worker processes are the same , i.e. , it does not improve due to the master process being saturated .",
    "in contrast , when using our mwd technique , the running - time reduction improves for up to 32 worker processes , after which there is no further improvement since the network is being fully exploited .",
    "these results clearly show that when applying parallelization using a larger number of worker processes , the master process becomes the bottleneck of the mw approach . when using the mwd configuration , a steady running - time reduction",
    "is observed , until a hardware constraint is hit , e.g. , the network infrastructure .",
    "we have also measured the overhead of sending / receiving asynchronous messages in order to support heterogeneous systems , which is lower than 0.02% of the total running time for the mw experiments , and 0.01% for the mwd experimental set .    in order to further analyze",
    "how well the application scales using the mw and mwd approaches , we measured the performance of the parallel implementation in terms of its speedup , which is defined as    @xmath48    where @xmath49 is the number of cores executing the worker processes . as the base case for comparisons we chose the parallel implementation running on only one core and decided against using the serial implementation .",
    "we consider that the serial implementation is not a good base comparison for the parallel results as it does not reuse the resources between each transmitter - coverage calculation and it does not overlap the i / o operations with the transmitter computations . in practice , this means that several concatenated runs of the serial version would be considerably slower than the parallel but single worker implementation .    ]    ]    using the speedup metric , linear scaling is achieved when the obtained speedup is equal to the total number of processors used .",
    "however , it should be noted that a perfect speedup is almost never achieved , due to the existence of serial stages within an algorithm and the communication overhead of the parallel implementation .",
    "shows the average speedup of the parallel implementation for up to 64 worker processes , using the standard mw method and our mwd approach .",
    "the average speedup was calculated for the three different problem instances , i.e. , 1,280 , 2,560 , and 5,120 transmitters deployed over the target area .",
    "the number of transmitters used in these problem sizes is comparable to several real - world radio networks that were already deployed in england , e.g. , hampshire county with 227 base stations , west midlands with 414 base stations , and greater london authority with 1,086 base stations @xcite .",
    "note that it is common for a single base station to host multiple transmitters .",
    "the plotted average speedup clearly shows the minimal overhead of the mwd approach when using a small number of worker processes .",
    "this overhead accounts for the final aggregation of the intermediate results at the db , which in the mw configuration is performed along worker processing .",
    "like before , the db component allows the parallel implementation to fully exploit the available computing resources when deploying a larger number of worker processes , until the network - speed limit is met .",
    "of course , these results are directly correlated with the wall - clock times shown in .",
    "another measure to study how well prato utilizes the available computing resources considers the parallel efficiency of the implementation , i.e. , how well the parallel implementation makes use of the available processor cores .",
    "the definition of parallel efficiency is as follows    @xmath50    where @xmath51 is the speedup as defined in equation ( [ eq : speedup ] ) , and @xmath49 is the number of cores executing worker processes .",
    "shows the average parallel efficiency of the parallel implementation for different problem sizes as we increase the number of processing cores . like for the speedup measure",
    ", we have calculated the average parallel efficiency from the three problem instances analyzed .    the ideal case for",
    "a parallel application would be to utilize all the available computing resources , in which case the parallel efficiency would always be equal to one as we increase the core count . from the plot in , we can see that the efficiency of the mwd approach is better than in the mw case for larger number of processes and as long as there is still capacity at the lan level .",
    "in accordance to the previous analysis , the under utilization of the computing resources is more significant when the master process is overloaded ( in the mw case ) than when the network infrastructure is saturated ( in the mwd case ) .",
    "the lower efficiency is directly proportional to the number of idle worker processes that are waiting for the master process ( mw case ) or for network access ( mwd case ) .",
    "overall , the experimental results confirm that the objective of fully exploiting the available hardware resources is accomplished when applying our mwd approach , thus improving the scalability and efficiency of prato when compared with a traditional mw method .",
    "we have presented prato , a parallel radio - coverage prediction tool for radio networks .",
    "the tool , as well as the patterns for exploiting the computing power of a group of networked computers , i.e. , a computer cluster , are intended to be used for spatial analysis and decision support .",
    "the introduced mwd technique , which combines the use of a database system with a work - pool approach , delivers improved performance when compared with a traditional mw setup .",
    "moreover , the presented system provides parallel and asynchronous computation , that is completely independent of the gis used , in this case the grass environment .",
    "consequently , a gis installation is needed on only one of the nodes , thus simplifying the required system setup and greatly enhancing the applicability of this methodology in different environments .",
    "the extensive simulations , performed on the degima cluster of the nagasaki advanced computing center , were analyzed to determine the level of scalability of the implementation , as well as the impact of the presented methods for parallel - algorithm design aimed at spatial - data processing .",
    "the conducted analyses show that when using the mwd approach , prato is able to calculate the radio - coverage prediction of real - world mobile networks in a feasible amount of time , which is not possible for a serial implementation . moreover , the experimental results show prato has a better scalability than the standard mw approach , since it is able to completely saturate the network infrastructure of the cluster",
    ". these promising results also show the great potential of our mwd approach for parallelizing different time - consuming spatial problems , where databases form an intrinsic part of almost all gis .",
    "furthermore , the automatic optimization of radio networks , where millions of radio - propagation predictions take part in the evaluation step of the optimization process , are also excellent candidates for this approach .",
    "indeed , this last point is currently undergoing extensive research and it is already giving its first results .",
    "encouraged by the favorable results , further work will include abstracting the introduced mwd principle into a multi - purpose parallel framework such as charm++  @xcite , which provides a functionality for overlapping execution and communication , as well as fault tolerance .",
    "in addition , as prato is also a free and open - source software project , it can be readily modified and extended to support , for example , other propagation models and post - processing algorithms .",
    "this characteristic provides it with a clear advantage when compared to commercial and closed - source tools .",
    "this project was co - financed by the european union , through the european social fund .",
    "hamada acknowledges support from the japan society for the promotion of science ( jsps ) through its funding program for world - leading innovative r&d on science and technology ( first program ) .                          zhaoya gong , wenwu tang , david  a bennett , and jean - claude thill .",
    "parallel agent - based simulation of individual - level spatial interactions within a multicore computing environment .",
    ", 27(6):11521170 , 2013 .",
    "qunying huang , chaowei yang , karl benedict , abdelmounaam rezgui , jibo xie , jizhe xia , and songqing chen . using adaptively coupled models and high - performance computing for enabling the computability of dust storm forecasting . , 27(4 ) , 2013 .",
    "howard xia , henry  l bertoni , leandro  r maciel , andrew lindsay - stewart , and robert rowe .",
    "radio propagation characteristics for line - of - sight microcellular and personal communications . , 41(10):14391447 , 1993 ."
  ],
  "abstract_text": [
    "<S> geographical information systems are ideal candidates for the application of parallel programming techniques , mainly because they usually handle large data sets . </S>",
    "<S> to help us deal with complex calculations over such data sets , we investigated the performance constraints of a classic master - worker parallel paradigm over a message - passing communication model . to this end , we present a new approach that employs an external database in order to improve the calculation / communication overlap , thus reducing the idle times for the worker processes . </S>",
    "<S> the presented approach is implemented as part of a parallel radio - coverage prediction tool for the grass environment . </S>",
    "<S> the prediction calculation employs digital elevation models and land - usage data in order to analyze the radio coverage of a geographical area . </S>",
    "<S> we provide an extended analysis of the experimental results , which are based on real data from an lte network currently deployed in slovenia . </S>",
    "<S> based on the results of the experiments , which were performed on a computer cluster , the new approach exhibits better scalability than the traditional master - worker approach . </S>",
    "<S> we successfully tackled real - world data sets , while greatly reducing the processing time and saturating the hardware utilization .    </S>",
    "<S> grass , gis , parallel , radio , propagation , simulation . </S>"
  ]
}
{
  "article_text": [
    "the problem of sorting @xmath3 numbers has been well studied under a variety of different constraints .",
    "any introductory computer science course will include a discussion of sorting , and probably will begin with the simplest sorting algorithm of all , bubble sort .",
    "bubble sort , which can be described as easily as `` if two adjacent elements are out of order relative to each other , swap them '' is provably optimal in number of transpositions needed if you are only allowed to swap adjacent elements . it can be shown that the number of adjacent transpositions that is needed to sort a given list of numbers is equal to the number of `` inversions '' in the list , i.e. , pairs of elements that are out of order ( but not necessarily adjacent ) .",
    "thus , the @xmath4 bound on the number of inversions in a permutation of length @xmath3 also serves as the bound on the number of adjacent transpositions needed to sort said permutations .",
    "suppose we drop the requirement that the elements we swap be adjacent .",
    "if we allow any two elements to be swapped , then it is known that @xmath5 transpositions will be needed in the worst case",
    ". the algorithm here could be , `` swap the largest number into its proper place , and then sort the remaining @xmath5 elements recursively . ''",
    "there is no equivalent of `` inversions '' in this case , because we can always move at least one element all the way to its proper place ; we do not need a local quantity telling us if two adjacent elements are out of order .    in this paper , we consider the properties of a third set of transpositions to be used for sorting a permutation : the set of all cyclically adjacent transpositions . by cyclically adjacent transpositions , we mean all normal adjacent transpositions plus an additional transposition : the one that swaps the first and last elements in the permutation .",
    "this is a natural extension of the normal case of adjacent transpositions .",
    "consider if you were sorting elements in a data structure that was cyclic , instead of linear in nature .",
    "clearly , bubble sort is an option in this case ; we still have all adjacent transpositions , so we could just ignore the added cyclic transposition and proceed as before .",
    "as one would expect , this is far from an optimal algorithm .",
    "the problem of designing an algorithm to find an optimal sequence of cyclically adjacent transpositions to sort a permutation was examined and solved by jerrum  @xcite . however , while an optimal algorithm is given , the question of an upper bound on the number of swaps that will be required in the worst case remained unanswered . in 2010 , this problem was posed by feng , chitturi and sudborough  @xcite in a paper in which they prove that @xmath6 is a lower bound , and they conjecture that this bound is tight . here , we prove that @xmath6 is indeed an upper bound on the number of cyclically adjacent transpositions needed to sort any permutation of length @xmath3 , thus resolving the open question of feng et al .",
    "we now introduce the notation we will use throughout this note .",
    "let @xmath7 be a permutation of @xmath8 .",
    "we will refer to @xmath9 as the position of element @xmath10 .",
    "if @xmath11 , we have @xmath12 , i.e. , @xmath13 gives the element that is in position @xmath14 .",
    "we will sometimes write @xmath15 as the ordered sequence @xmath16 . in the following , we will use @xmath17 when we want to refer to an element in @xmath8 and @xmath18 to refer to a position in @xmath8 .    given a permutation @xmath7 and @xmath19",
    ", applying the transposition @xmath20 to @xmath7 means that we `` swap '' the elements in positions @xmath14 and @xmath21 to obtain a new permutation @xmath22 , where @xmath23 , and @xmath24 for all @xmath25 .",
    "we say a transposition @xmath20 is adjacent if @xmath26 , and we say a transposition @xmath20 is cyclically adjacent if either @xmath26 , or @xmath27 and @xmath28 .",
    "for ease of exposition , we will use @xmath29 to denote a cyclically adjacent transposition ( i.e. , the fact that @xmath30 is taken modulo @xmath3 is implicit ) .",
    "we will sometimes refer to a transposition @xmath31 when applied to @xmath7 with @xmath32 , as the _ swap _ @xmath33 of elements @xmath10 and @xmath34 .",
    "we remark that a swap is denoted as an ordered pair , where the first element moves `` in clockwise direction '' , i.e. , from position @xmath14 to @xmath30 and the second element moves in `` counterclockwise direction '' , i.e. , from position @xmath30 to @xmath14 .",
    "we say that @xmath35 is a sequence of cyclically adjacent swaps for @xmath7 , if for every @xmath36 we have that @xmath37 is a cyclically adjacent swap for the permutation that results from performing the swaps @xmath38 in order on permutation @xmath7 .",
    "we say a permutation @xmath7 is sorted by a sequence of transpositions , if we obtain the identity after the sequence of transpositions is applied to @xmath7 .",
    "it is well known that any permutation @xmath7 can be sorted by at most @xmath39 adjacent transpositions .    in this note",
    ", we will show the following theorem .",
    "this answers an open question of feng , chitturi and sudborough  @xcite .",
    "given any permutation @xmath7 of @xmath40 , there exists a sequence of at most @xmath41 cyclically adjacent transpositions to sort @xmath7 .    to prove the theorem , we begin by reviewing results by jerrum  @xcite . given a sequence of cyclically adjacent transpositions that sort @xmath7 , we consider the corresponding sequence of swaps of elements .",
    "for this sequence of swaps , we let @xmath42 be the number of times swap @xmath33 occurs minus the number of times swap @xmath43 occurs . we define the net clockwise displacement for element @xmath10 as @xmath44 .",
    "then we have that @xmath45 since @xmath46@xmath47 , where the penultimate equality uses the fact that @xmath48 .",
    "since the sequence of transpositions sorts @xmath7 , it must be the case that @xmath49    jerrum s key result is a characterization of the net displacement vector @xmath50 of a minimum length sequence of cyclically adjacent transpositions to sort @xmath7 .",
    "we first show how , given a displacement vector @xmath50 that satisfies ( [ eq : feas1 ] ) and ( [ eq : feas2 ] ) , we can find a sequence of cyclically adjacent transpositions that sort @xmath7 and have net displacement vector @xmath50 .",
    "we then give the expression given by jerrum for @xmath42 , the net numer of times swap @xmath33 occurs in this sequence , as a function of @xmath7 and @xmath50 .",
    "finally , we give jerrum s main result which characterizes the displacement vector @xmath50 that corresponds to the minimum length sequence of transpositions that sort @xmath7 .",
    "[ lem : sort ] given a displacement vector @xmath50 that satisfies ( [ eq : feas1 ] ) and ( [ eq : feas2 ] ) with respect to some permutation @xmath7 , a sequence of cyclically adjacent swaps that sort @xmath7 and has net displacements given by @xmath50 is found by repeatedly swapping cyclically adjacent elements @xmath33 such that @xmath51 , and decreasing @xmath52 by 1 and increasing @xmath53 by 1 .",
    "note that cyclically adjacent elements @xmath33 such that @xmath51 exist unless @xmath54 for every @xmath55 , since @xmath50 satisfies @xmath56 . after executing the swap ,",
    "we decrease @xmath52 by 1 and we increase @xmath53 by 1 .",
    "let @xmath57 be the new displacement vector .",
    "it is easily verified that the new permutation @xmath58 and displacement vector @xmath57 obtained after executing the swap satisfy ( [ eq : feas1 ] ) and ( [ eq : feas2 ] ) .",
    "hence , if this process terminates , then it will result in a sequence of cyclically adjacent swaps to sort @xmath7 with net displacement vector @xmath50 .",
    "we now argue that @xmath59 , which implies that this process does indeed terminate .",
    "note that @xmath60 now , note that , since @xmath11 and @xmath61 , then @xmath51 implies that @xmath62 , since @xmath7 and @xmath50 satisfy ( [ eq : feas1 ] ) .",
    "hence @xmath63 .",
    "we note that this lemma generalizes sorting @xmath7 by using only adjacent transpositions ( i.e. , bubble sort ) in a natural way : in that case , we take @xmath64 for every @xmath65 . now , let @xmath66 and @xmath67 .",
    "then @xmath68 and @xmath69 , and hence @xmath51 , implies that @xmath70 , and hence , @xmath71 , since @xmath72 .",
    "so in this case , the algorithm in lemma  [ lem : sort ] is simply the bubble sort algorithm , in which we swap adjacent elements @xmath33 if @xmath71 .",
    "we now give two results that were shown by jerrum .",
    "the expression we use in the next lemma gives an expression for @xmath42 , the net number of times swap @xmath33 occurs in the sequence resulting from lemma  [ lem : sort ] .",
    "the expression is essentially the same as the expression derived on page 283 of  @xcite . for completeness",
    ", we give a proof in the appendix .",
    "[ lem : jerrum1 ] given a displacement vector @xmath50 that satisfies ( [ eq : feas1 ] ) and ( [ eq : feas2 ] ) with respect to some permutation @xmath7 , any sequence of cyclically adjacent transpositions that sorts @xmath7 and has net displacement vector @xmath50 has @xmath73    jerrum s main result is a characterization of the net displacement vector @xmath50 of the minimum length sequence of cyclically adjacent transpositions for a given permutation @xmath7 .",
    "the following theorem summarizes the results in corollary 3.7 and theorem 3.9 of  @xcite .    a sequence of cyclically adjacent transpositions that sort permutation @xmath7 is of minimum length if and only if each pair of elements is swapped at most once , and the net displacement vector @xmath50 satisfies @xmath74    we omit the proof since the results in the next section only rely on the fact that for any permutation @xmath7 , there exists a sequence of cyclically adjacent transpositions that sort @xmath7 and for which the net displacement vector @xmath50 satisfies ( [ eq : opt ] ) .",
    "to find this sequence , we initialize @xmath75 for @xmath55 . note that @xmath76 for every @xmath10 .    now ,",
    "if @xmath77 , then @xmath78 and @xmath79 .",
    "if we subtract @xmath3 from @xmath52 and add @xmath3 to @xmath53 , we obtain a new valid displacement vector @xmath80 , which has @xmath81 and @xmath82 .",
    "therefore , @xmath83 .",
    "hence , this process will terminate .",
    "we can then use lemma  [ lem : sort ] to find the corresponding sequence of cyclically adjacent transpositions .",
    "by the results from the previous section , we know that for any permutation @xmath7 of @xmath8 , there exists a sequence of cyclically adjacent transpositions with net displacement vector @xmath50 which satisfies ( [ eq : opt ] ) that sorts @xmath7 .",
    "if we apply a cyclically adjacent swap @xmath33 with @xmath51 , then @xmath52 is decreased by one , and @xmath53 is increased by one .",
    "hence , @xmath84 , where @xmath50 satisfies ( [ eq : feas1 ] ) , ( [ eq : feas2 ] ) and ( [ eq : opt ] ) , is a _ lower bound _ on the number of cyclically adjacent transpositions needed to sort @xmath7 .",
    "the maximum value this lower bound can take is @xmath85 , since @xmath50 satisfies ( [ eq : opt ] ) .",
    "it was shown in  @xcite that this bound is tight for the permutation @xmath86 , where @xmath3 is even .",
    "one might conjecture that there always exists a swap such that @xmath87 decreases by one , which would prove that @xmath41 is also an _ upper bound _ on the number of cyclically adjacent transpositions needed to sort any permutation @xmath7 .",
    "however , this is only if there exists an adjacent swap @xmath33 where @xmath78 and @xmath79 .",
    "the following example shows that such a swap does not always exist : let @xmath88",
    ". then @xmath89 satisfies ( [ eq : feas1 ] ) , ( [ eq : feas2 ] ) and ( [ eq : opt ] ) , but any cyclically adjacent swap does not decrease @xmath90 . in this section ,",
    "we use different techniques to show that the conclusion does hold that at most @xmath41 cyclically adjacent transpositions suffice to sort any permutation @xmath7 .",
    "we begin by stating two auxiliary lemmas . to maintain the flow of the argument",
    ", we defer their proofs until later in this section .",
    "we slightly generalize the notion of permutation to be a bijection of any set @xmath91 of positive integers .",
    "note that the net displacement vector of a sequence of cyclically adjacent swaps is still well defined as @xmath92 .",
    "the following lemma follows from lemma  [ lem : jerrum1 ] .",
    "[ lem : prop ] let @xmath7 be a permutation of @xmath91 , and let @xmath35 be a sequence of cyclically adjacent swaps for @xmath7 , with net displacement vector @xmath50 that satisfies ( [ eq : opt ] ) .",
    "then for any two distinct elements @xmath93 ,    1 .",
    "@xmath94 implies @xmath95 .",
    "2 .   @xmath96 implies @xmath97 .",
    "3 .   @xmath98 implies @xmath99 .",
    "we will prove our main result by induction , and in order to use the inductive hypothesis , we will remove some element @xmath100 from @xmath91 .",
    "we now define what we mean by a permutation corresponding to @xmath7 restricted to @xmath101 .",
    "first of all , we define the relationship `` @xmath10 is directly before @xmath34 in a permutation @xmath7 '' if either @xmath102 and there is no @xmath103 so that @xmath104 , or @xmath105 and @xmath106 , where @xmath107 and @xmath108 are the largest and smallest integer in @xmath91 respectively .",
    "we denote this relationship by @xmath109 .    given a permutation @xmath7 of @xmath91 and a permutation @xmath110 .",
    "we say @xmath111 is a permutation corresponding to @xmath7 restricted to @xmath101 if @xmath111 preserves the @xmath112-relationship , i.e. @xmath109 in @xmath111 for @xmath113 if @xmath109 in @xmath7 , or @xmath114 in @xmath7 .",
    "we note that there are @xmath115 distinct permutations corresponding to @xmath7 restricted to @xmath101 , but this will not be important for our purposes .    [",
    "lem : reduce ] let @xmath7 be a permutation of @xmath91 , and let @xmath35 be a sequence of cyclically adjacent swaps for @xmath7 , resulting in permutation @xmath116 .",
    "let @xmath117 be the sequence of swaps , where all swaps involving element @xmath100 are deleted , and let @xmath111 be any permutation corresponding to @xmath7 restricted to @xmath101 .",
    "then @xmath117 is a sequence of cyclically adjacent swaps for @xmath111 , and performing @xmath117 on @xmath111 results in a permutation corresponding to @xmath116 restricted to @xmath101 .",
    "we now rephrase our main theorem , and use the two previous lemmas to prove it . by the results of the previous section , we have that for any permutation @xmath7 there exists a minimum length sequence of cyclically adjacent transpositions that sorts @xmath7 , so that every pair of elements is swapped at most once , and the net displacement vector satisfies ( [ eq : opt ] ) .",
    "it is therefore sufficient to prove that a sequence of cyclically adjacent swaps with the properties that each pair of elements is swapped at most once , and the net displacement vector satisfies ( [ eq : opt ] ) , has length at most @xmath118 , where @xmath3 is the number of elements .",
    "[ lemma : main ] consider a sequence of cyclically adjacent swaps for a permutation @xmath7 of a set of @xmath3 elements , where each pair of elements is swapped at most once , and for which the net displacement vector @xmath50 satisfies ( [ eq : opt ] ) .",
    "then the sequence consists of at most @xmath119 swaps .",
    "we prove the lemma by induction on @xmath3 .",
    "if @xmath120 , then the lemma is clearly true , as in this case there is only one pair of elements , and this pair can be swapped at most once .",
    "now , assume the lemma is true for @xmath121 .",
    "consider a sequence of cyclically adjacent swaps for a permutation @xmath7 of a set @xmath91 of @xmath3 elements that satisfies the conditions of the lemma .",
    "let @xmath122 and let @xmath123 .",
    "note that @xmath124 by ( [ eq : opt ] ) , and hence either @xmath125 or @xmath126 . in the first case ,",
    "let @xmath100 be an element such that @xmath127 ; in the second case , we let @xmath100 be such that @xmath128 .",
    "in order to use the inductive hypothesis , we remove element @xmath100 from @xmath91 .",
    "we let @xmath117 be the sequence of swaps , where all swaps involving element @xmath100 are deleted , and we let @xmath111 be any permutation corresponding to @xmath7 restricted to @xmath101 . by lemma  [ lem :",
    "reduce ] , @xmath117 is a sequence of cyclically adjacent swaps for @xmath111 .",
    "for the sequence @xmath117 , let @xmath129 be the net clockwise displacement of element @xmath10 for any @xmath130 .",
    "note that @xmath131 .",
    "below , we will show that for any @xmath132 , we have @xmath133 .",
    "hence , @xmath117 corresponds to a sequence of cyclically adjacent swaps for a permutation of @xmath134 with net displacement vector satisfying ( [ eq : opt ] ) in which each pair of elements is swapped at most once . by the inductive hypothesis",
    ", @xmath117 can have at most @xmath135 swaps .",
    "in addition , we will show that @xmath100 is involved in exactly @xmath136 swaps . since @xmath137",
    ", we conclude that the total number of swaps in the original sequence is at most @xmath138 .",
    "since the number of swaps is integer , it can thus be at most @xmath139 .    to prove the two claims , we use lemma  [ lem : prop ] .",
    "first , suppose that @xmath127 .",
    "then @xmath140 the first inequality uses the fact that @xmath141 , so that @xmath142 by property ( a ) of lemma  [ lem : prop ] , and @xmath143 if @xmath144 by property ( b ) .",
    "the second inequality uses the fact that @xmath145 by ( [ eq : opt ] ) , plus the fact that @xmath146 by property ( a ) , and @xmath147 if @xmath148 by property ( c ) .",
    "the proof when @xmath128 is similar , and is included for completeness . in this case , we write @xmath149 the first inequality uses the fact that @xmath150 , by definition of @xmath100 , and property ( a ) and ( b ) in lemma  [ lem : prop ] .",
    "the second inequality uses the fact that @xmath151 by ( [ eq : opt ] ) , plus property ( a ) and ( c ) from lemma  [ lem : prop ] .    finally , note that the number of swaps in which @xmath100 is involved is @xmath152 , and by ( a ) and the definition of @xmath100 , this is exactly equal to @xmath136 .",
    "we conclude by giving the proofs of lemma  [ lem : prop ] and lemma  [ lem : reduce ] . +    [ 1]*proof of # 1 : *",
    "@xmath153    lemma  [ lem : prop ]    let @xmath154 be the permutation of @xmath91 obtained by applying @xmath155 to @xmath7 .",
    "relabel the elements of @xmath91 with @xmath8 so that @xmath154 is equal to the identity , and use the same relabeling on @xmath7 and @xmath155 .",
    "then , @xmath7 is a permutation of @xmath8 and @xmath155 sorts @xmath7 .",
    "hence , the net displacement vector @xmath50 corresponding to @xmath155 and @xmath7 satisfy the conditions of lemma  [ lem : jerrum1 ] . for any @xmath33 we thus have @xmath73",
    "we take @xmath156 such that @xmath94 . note that ( [ eq : opt ] ) implies that @xmath157 .",
    "suppose that @xmath158 .",
    "note that @xmath159 , since @xmath7 is a permutation .",
    "hence @xmath160 so @xmath161 .",
    "moreover , if @xmath96 , then we have @xmath162 , so @xmath97 , and if @xmath163 , then @xmath164 , so @xmath165 .",
    "similarly , if @xmath166 , then @xmath167 since @xmath168 we get that @xmath95 .",
    "if @xmath96 , then @xmath169 , so @xmath97 , and if @xmath163 , then @xmath170 , so @xmath165 .    lemma  [ lem : reduce ]    we prove the lemma by induction on the number of swaps @xmath171 . for @xmath172",
    "the claim is vacuously true . for general @xmath171 ,",
    "denote by @xmath154 the permutation that results from performing the first @xmath173 swaps in @xmath155 on @xmath7 , and @xmath174 the permutation that results from performing the corresponding swaps in @xmath117 on @xmath111 . by the inductive hypothesis",
    "we know that @xmath174 is a permutation corresponding to @xmath154 restricted to @xmath101 .",
    "we now discern two cases .",
    "( case 1 ) @xmath100 is not swapped by @xmath175 , i.e. @xmath176 and @xmath177 .",
    "we note that @xmath109 in @xmath154 because @xmath175 is a valid cyclically adjacent swap for @xmath154 .",
    "then @xmath109 in @xmath174 by the fact that @xmath174 is a restricted permutation , so @xmath178 is also a valid cyclically adjacent swap for @xmath174 .",
    "performing one cyclically adjacent swap only changes the @xmath112-relationship for pairs of elements for which at least one element is in @xmath179 .",
    "let @xmath180 be so that @xmath181 in @xmath154 .",
    "then @xmath182 in the permutation that results after swapping @xmath183 in @xmath154 .",
    "if @xmath184 then @xmath181 in @xmath174 as well , and therefore @xmath182 in the permutation that results after performing swap @xmath21 on @xmath174 .",
    "if @xmath185 , then let @xmath186 be so that @xmath187 in @xmath154 , which means that @xmath188 in @xmath174 .",
    "after performing @xmath178 on @xmath174 , we have @xmath189 .    checking the @xmath190-relations in the restricted permutation for the element right after @xmath34 in @xmath154",
    "proceeds similarly .",
    "( case 2 ) @xmath100 is an element that is swapped by @xmath191 , i.e. @xmath192 .",
    "we let @xmath174 be any permutation corresponding to @xmath154 restricted to @xmath101 .",
    "let @xmath180 be the element in @xmath179 that is not equal to @xmath100 .",
    "let @xmath193 and @xmath194 be so that @xmath195 in @xmath154 .",
    "then @xmath196 in @xmath174 . also , we know that @xmath197 in the permutation @xmath116 obtained after applying @xmath178 to @xmath154 .",
    "this means that a permutation corresponding to @xmath116 restricted to @xmath101 will have @xmath196 as well . in other words",
    ", @xmath174 is a permutation corresponding to @xmath116 restricted to @xmath101 , since it has the required @xmath112-relationship between the elements .",
    "the authors acknowledge chi - kwong li for suggesting this research topic , for leading weekly research meetings , and for numerous helpful discussions .    1    xuerong feng , bhadrachalam chitturi , and hal sudborough . sorting circular permutations by bounded transpositions . ,",
    "volume 680:725736 , 2010 .",
    "mark jerrum .",
    "the complexity of finding minimum - length generator sequences .",
    ", 36:265289 , 1985 .",
    "consider a permutation @xmath7 and a net displacement vector @xmath50 that satisfies the conditions of the lemma .",
    "first , we note that @xmath198 is skew symmetric , i.e. , @xmath48 for any @xmath72 . to see this ,",
    "suppose without loss of generality that @xmath199 , and let @xmath200",
    ". then @xmath201 and @xmath202 ( where the inequality is strict because of ( [ eq : feas2 ] ) ) .",
    "therefore @xmath203 and @xmath204 , so @xmath205 .",
    "applying a transposition @xmath29 results in a new permutation @xmath22 and a new displacement vector @xmath57 .",
    "let @xmath206 and @xmath207 , then @xmath22 and @xmath57 are given by @xmath208 for @xmath209 and @xmath210 is @xmath30 if @xmath211 and @xmath1 if @xmath27 , @xmath212 .",
    "it is clear that @xmath57 satisfies the conditions of the lemma for @xmath22 .",
    "let @xmath213 in order to prove the lemma , we need to show that swapping @xmath214 decreases @xmath215 by one , i.e. , @xmath216 . by skew symmetry , this also implies that @xmath217 .",
    "in addition , we need to show that for any pair @xmath218 , @xmath219 .",
    "we first consider a pair of elements @xmath220 . if @xmath211 , then @xmath221 because @xmath222 for every @xmath223 and the relative order of all pairs of elements , except @xmath214 is the same in @xmath7 and @xmath58 . if @xmath224 , then the relative order of every pair containing @xmath100 or @xmath180 is changed , but it is easily verified that the fact that @xmath225 and @xmath226 implies that @xmath227 unless @xmath228 is @xmath214 or @xmath229 .",
    "we now consider the pair @xmath214 , and show that @xmath230 . if @xmath211 , then @xmath231 and @xmath232 . also , @xmath233 and @xmath234 .",
    "hence , @xmath235 and @xmath236 .",
    "we thus have that @xmath237 . if @xmath27 , then @xmath238 , @xmath239 , @xmath225 and @xmath226",
    "therefore , @xmath240 and @xmath241 .",
    "hence , we again have that @xmath216 ."
  ],
  "abstract_text": [
    "<S> we consider the problem of upper bounding the number of circular transpositions needed to sort a permutation . </S>",
    "<S> it is well known that any permutation can be sorted using at most @xmath0 adjacent transpositions . </S>",
    "<S> we show that , if we allow all adjacent transpositions , as well as the transposition that interchanges the element in position @xmath1 with the element in the last position , then the number of transpositions needed is at most @xmath2 . </S>",
    "<S> this answers an open question posed by feng , chitturi and sudborough ( 2010 ) .    </S>",
    "<S> permutations ; cayley graphs ; diameter ; sorting    [ theorem]lemma [ theorem]corollary [ theorem]conjecture [ theorem]proposition [ theorem]claim </S>"
  ]
}
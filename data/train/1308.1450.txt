{
  "article_text": [
    "contact lines are defined by the triple - point intersection of the rigid boundary , fluid flow and the vacuum state .",
    "flows with the contact line at @xmath0 contact angle were discussed in @xcite , where corresponding solutions of the navier - stokes equations were shown to have no physical meanings . in the recent paper , benilov and vynnycky",
    "@xcite analyzed the behavior of the contact line asymptotically by using the thin film equations .",
    "consider a two - dimensional couette flow shown on figure [ fig - scheme ] , where two horizontal rigid plates are separated by a distance normalized to unity , with the lower plate moving to the right relatively to the upper plate with a velocity normalized to unity .",
    "the space between the plates is filled with an incompressible fluid on the left , and vacuum ( that is , gas with negligible density ) on the right , separated by a free boundary .",
    "the @xmath1-axis is directed along the lower plate , and the contact line is located on the upper plate .",
    "physically relevant flows correspond to the configuration , where the fluid - filled region to the right of the contact line decays monotonically , and is carried away by the lower plate to some residual thickness @xmath2 as @xmath3 .",
    "the velocity of the contact line is @xmath4 and the reference frame on figure [ fig - scheme ] moves to the left with the velocity @xmath4 so that the contact line is placed dynamically at the point @xmath5 .",
    "note that the velocity @xmath4 is an unknown variable to be found as a function of time @xmath6 .",
    "the shape of the fluid - vacuum interface at time @xmath6 is described by the graph of the function @xmath7 for @xmath8 , where @xmath9 is the thickness of fluid - filled region .        by using asymptotic analysis and",
    "the lubrication approximation , benilov and vynnycky @xcite derived the following nonlinear advection  diffusion equation for the free boundary @xmath10 of the fluid flow : @xmath11 = 0 , \\quad x > 0 , \\;\\ ; t > 0,\\ ] ] the boundary conditions @xmath12 and @xmath13 define the normalized thickness and the contact line location , whereas the flux conservation gives the boundary condition for @xmath14 . here and henceforth",
    ", we use the subscript to denote the partial derivative .",
    "in addition , we fix @xmath15 for convenience",
    ". existence of weak solutions of the thin - film equation ( [ model ] ) for constant values of @xmath16 and neumann boundary conditions on a finite interval was recently shown by chugunova _",
    "_ @xcite .    using further asymptotic reductions with @xmath17 benilov and vynnycky @xcite reduced the nonlinear equation ( [ model ] ) with @xmath15 to the linear advection  diffusion equation : @xmath18 subject to the boundary conditions @xmath19    physically relevant solutions corresponds to the monotonically decreasing solutions with @xmath20 and @xmath21 as @xmath22 , where @xmath23 .",
    "we note that any constant value of @xmath2 is allowed thanks to the invariance of the linear advection  diffusion equation ( [ pde ] ) with respect to the shift and scaling transformations .",
    "indeed , if @xmath10 solves the boundary  value problem ( [ pde])([bc - pde ] ) such that @xmath24 as @xmath22 , then @xmath25 given by @xmath26 for any @xmath23 , solves the same advection  diffusion equation ( [ pde ] ) with the same boundary conditions ( [ bc - pde ] ) but with the variable velocity @xmath27 and with the asymptotic behavior @xmath20 as @xmath22 .    with three boundary conditions at @xmath5 and the decay conditions for @xmath9 as @xmath22 , the initial - value problem for equation ( [ pde ] )",
    "is over - determined and the third ( over - determining ) boundary condition at @xmath5 is used to find the dependence of @xmath16 on @xmath6 .",
    "local existence of solutions to the boundary  value problem ( [ pde])([bc - pde ] ) was proved by pelinovsky _",
    "_ @xcite using laplace transform in @xmath1 and the fractional power series expansion in powers of @xmath28 .",
    "we shall consider the time evolution of the boundary  value problem ( [ pde])([bc - pde ] ) starting with the initial data @xmath29 for a suitable function @xmath30 .",
    "for physically relevant solutions , we assume that the profile @xmath31 decays monotonically to a constant value as @xmath22 and that @xmath32 is a non - degenerate maximum of @xmath30 such that @xmath33 , @xmath34 , and @xmath35 .",
    "the solution @xmath10 may lose monotonicity in @xmath1 during the dynamical evolution because of the boundary value @xmath36 crosses zero from the negative side . in this case , we say that the flow becomes non - physical for further times and the model ( [ pde])([bc - pde ] ) breaks .",
    "simultaneously , this may mean that the velocity @xmath4 blows up to infinity , because for sufficiently strong solutions of the advection  diffusion equation ( [ pde ] ) , the velocity @xmath4 satisfies the dynamical equation @xmath37 which follows by differentiation of ( [ pde ] ) in @xmath1 and setting @xmath38 .    based on numerical computations of the thin - film equations ( [ model ] ) , benilov and vynnycky @xcite",
    "claim that for any physically relevant initial data @xmath30 , there is a finite positive time @xmath39 such that @xmath4 tends to negative infinity and @xmath40 approaches zero as @xmath41 , whereas the profile @xmath42 remains a smooth and decreasing function for @xmath8 .",
    "moreover , they claim that @xmath4 behaves near the blowup time as the logarithmic function of @xmath6 : @xmath43 where @xmath44 , @xmath45 are positive constants .",
    "the same properties of the blow up of contact lines were observed in @xcite in numerical simulations of the reduced model ( [ pde])([bc - pde ] ) .",
    "we point out that the numerical simulations in @xcite are based on comsol built - in algorithms .",
    "the goal of this paper is to simulate numerically the behavior of the velocity @xmath4 near the blow - up time under different physically relevant initial data @xmath31 .",
    "our technique is based on the reformulation of the boundary - value problem ( [ pde])([bc - pde ] ) , which will be suitable for an application of the direct finite - difference method .",
    "we will approximate the behavior of the velocity @xmath4 from the dynamical equation ( [ contact - equation ] ) rewritten in finite differences .",
    "the numerical computations reported in this paper were performed by using the matlab software package .    as the main outcome , we confirm that all physically relevant initial data including those with positive initial velocity",
    "will result in blow - up of @xmath4 to negative infinity in a finite time . at the same time , we show that the power function @xmath46 and @xmath47 fits our numerical data better than the logarithmic function near the blow - up time @xmath39 .",
    "we explain why the behavior @xmath48 as @xmath41 is highly expected for solutions of the boundary  value problem ( [ pde])([bc - pde ] ) .",
    "we believe that the incorrect logarithmic law ( [ loglaw ] ) is an artefact of the comsol built - in algorithms used in @xcite .",
    "we shall mention two recent relevant works on the same problem .",
    "firstly , existence of self - similar solutions of the linear advection  diffusion equation ( [ pde ] ) was proved by pelinovsky and giniyatullin @xcite .",
    "the self - similar solutions are given by @xmath49 with @xmath50 and @xmath51 , where @xmath52 is a suitable function .",
    "although the self - similar solutions ( [ self - similar ] ) satisfy the decay condition at infinity , and the first two boundary conditions ( [ bc - pde ] ) , the third boundary condition @xmath53 is not satisfied and is replaced with @xmath54 for a fixed @xmath55 .",
    "consequently , the self - similar solution ( [ self - similar ] ) predicts blows up in a finite time with positive @xmath4 and positive @xmath40 . although the scaling of the self - similar solution ( [ self - similar ] ) is compatible with the scaling transformation ( [ asymptotic - reduction ] ) used in the derivation of the linear advection  diffusion equation ( [ pde ] )",
    ", it does not satisfy the physical requirements of the couette flow on figure [ fig - scheme ] .",
    "secondly , chugunova et al .",
    "@xcite constructed steady state solutions of the boundary  value problem ( [ pde])([bc - pde ] ) and showed numerically that these steady states can serve as attractors of the bounded dynamical evolution of the model .",
    "both the steady states and the initial conditions that lead to bounded dynamics of the model are not physically acceptable as @xmath30 has to be monotonically increasing with @xmath56 as @xmath22 .",
    "note that both @xmath16 and @xmath57 are positive for the steady states of the boundary  value problem ( [ pde])([bc - pde ] ) .    to simulate the boundary  value problem ( [ pde])([bc - pde ] ) , a different numerical method is proposed in @xcite .",
    "this method is still based on finite differences and matlab software package . because the fourth - order derivative term is approximated implicitly and the first - order derivative term is approximated explicitly , the system of finite - difference equations was closed in @xcite without any additional equation on the velocity @xmath4 .",
    "consequently , @xmath4 was found from the system of finite - difference equations .",
    "we also mention that both recent works of @xcite and @xcite used a priori energy estimates and found some sufficient conditions , under which the smooth physically relevant solutions of the boundary  value problem ( [ pde])([bc - pde ] ) blows up in a finite time . in particular ,",
    "if @xmath58 , or @xmath59 , or @xmath60 , the smooth solution @xmath10 blows up in a finite time . however , these sufficient conditions do not eliminate existence of smooth physically relevant solutions , for which @xmath4 oscillates and @xmath40 decays to zero as @xmath61 .",
    "the remainder of our paper is organized as follows .",
    "section 2 outlines the numerical method for approximations of the boundary  value problem ( [ pde])([bc - pde ] ) .",
    "section 3 presents the numerical simulations of the boundary  value problem truncated on the finite interval @xmath62 $ ] for sufficiently large @xmath63 .",
    "section 4 inspects different blow - up rates of the singular behavior of the velocity @xmath4 near the blow - up time .",
    "section 5 summarizes our findings .",
    "in what follows , we set @xmath64 , and reformulate the boundary - value problem  in the equivalent form . differentiating equation with respect to @xmath1 , we obtain @xmath65 we also rewrite boundary conditions in as follows : @xmath66 here the third boundary condition @xmath67 follows from applying the boundary conditions @xmath68 and @xmath69 to the fourth - order equation as @xmath70 . after the reformulation , the dynamical equation ( [ contact - equation ] ) can be recovered by taking the limit @xmath70 in : @xmath71 provided that the solution @xmath72 remains smooth at the boundary @xmath5 .    a suitable two - parameter initial condition @xmath73 for the boundary  value problem  can be chosen in the form @xmath74,\\ ] ] where parameters @xmath75 and @xmath76 are arbitrary . for simplicity",
    ", the constraint @xmath77 at the initial time @xmath78 is standardized to @xmath79 .",
    "note that @xmath80 and its derivatives decay to zero exponentially fast as @xmath22 , which still imply that @xmath81 decays to some constant value @xmath2 as @xmath22 . because @xmath82 for all @xmath8 , @xmath30 is a monotonically decreasing function and @xmath23 .",
    "figure [ fig - initial ] shows a particular example of the initial function ( [ ic ] ) for @xmath83 and @xmath84 .     and",
    "@xmath84.,height=192 ]    we approximate solutions of the boundary  value problem ( [ pde2])([bc2 ] ) with the second - order central - difference method .",
    "consider a set of @xmath85 equally spaced ordered grid points @xmath86 on the interval @xmath87 $ ] , for sufficiently large @xmath63 so that @xmath88 and @xmath89 are approximately zero . for",
    "any fixed @xmath90 , let @xmath91 denote the numerical approximation of @xmath92 at @xmath93 , and let @xmath94 denote the equal step size between adjacent grid points .    by applying the second - order central - difference formulas to partial derivatives in the fourth - order equation at each @xmath93",
    ", we obtain the differential equations : @xmath95 which are accurate up to the @xmath96 truncation error . since @xmath97 and @xmath98 for all @xmath99 , the above formula needs only to be applied to @xmath100 interior points @xmath101 with the necessity to approximate @xmath102 for the grid point @xmath103 and @xmath104 for the grid point @xmath105 .",
    "the value of @xmath102 can be found from the boundary condition : @xmath106 and @xmath104 can be found from the decay condition : @xmath107 which are again accurate up to the @xmath96 truncation error .",
    "it remains to define @xmath4 from the third boundary condition @xmath108 .",
    "the velocity @xmath4 can be expressed by applying the central  difference approximation to the dynamical equation : @xmath109 where @xmath110 can be found from the third boundary condition in : @xmath111    writing the system of differential equations in the matrix form @xmath112 we use heun s method to evaluate solutions of the system of differential equations .",
    "let @xmath113 denote the numerical approximation of @xmath114 at @xmath115 and let @xmath116 denote the time step size ( not necessarily constant ) . by heun s method , we obtain the iterative rule @xmath117,\\ ] ] where the initial vector @xmath118 is obtained from the initial condition .",
    "note that the coefficient matrix @xmath119 depend on @xmath6 since it is defined by the variable velocity @xmath4 .",
    "nevertheless , @xmath120 is constant in @xmath6 .",
    "the global error of heun s method is @xmath121 , so the global truncation error for the numerical approximation is @xmath122 .    the explicit version of heun s method is stable only when @xmath123 therefore , in practice we shall use the implicit heun s method ( which is stable for all @xmath124 ) , by solving the system of linear equations @xmath125 where @xmath126 is the identity matrix .",
    "however , because the coefficient matrix @xmath127 on the left - hand side contains an unknown value of @xmath128 , a prediction - correction method is necessary for solving this system of equations as follows .",
    "first , @xmath127 is approximated using @xmath129 to predict the value of @xmath130 , which is then used to predict the value of @xmath131 using equation .",
    "second , @xmath127 is updated from the prediction @xmath131 to obtain the corrected values of @xmath132 and @xmath128 . since the implicit method is used in both prediction and correction steps , the unconditional stability is preserved .",
    "we use the finite - difference method to compute approximation of the boundary  value problem ( [ pde2])([bc2 ] ) , after truncation on the finite interval @xmath62 $ ] with sufficiently large @xmath63 .",
    "since the time evolution features blow - up in a finite time , an adaptive method is used to adjust the time step @xmath116 after each iteration to maintain the local truncation error of the numerical method at a certain tolerance level .",
    "figure [ fig - num-1 ] shows the numerical approximation of the boundary  value problem ( [ pde2])([bc2 ] ) for the initial function with @xmath83 and @xmath84 ( the one shown on figure [ fig - initial ] ) .",
    "the initial velocity is determined from this initial condition by equation ( [ velocity1 ] ) as @xmath133 .",
    "the top left panel of the figure shows the profile of @xmath92 versus @xmath1 at different values of @xmath6 until the terminal time @xmath134 of our computations .",
    "the top right panel of the figure shows the change of the velocity @xmath4 in time @xmath6 computed dynamically from equation ( [ velocity2 ] ) .",
    "the bottom left panel shows the boundary value @xmath135 versus @xmath6 and the bottom right panel shows the boundary value @xmath136 versus @xmath6 .",
    "it is clear from the top panels that the velocity @xmath16 diverges towards @xmath137 at @xmath138 , whereas the solution @xmath92 remains regular near the blow - up time .",
    "recall that the velocity @xmath4 is determined from equation by the quotient of @xmath139 and @xmath140 , where @xmath40 must be strictly negative for all @xmath90 for physically acceptable solutions .",
    "we can see from the bottom panels that the value of @xmath57 is about to cross zero from the negative side at the blow - up time , whereas @xmath141 is also approaching zero but at a much slower rate than @xmath40 .",
    "this also indicates that @xmath4 is approaching negative infinity at the blow - up time .",
    "+    to measure the error of numerical computations , we shall derive dynamical constraints on the time evolution of a smooth solution of the boundary  value problem ( [ pde2])([bc2 ] ) .",
    "differentiating equation with respect to @xmath1 once and twice and taking the limit @xmath70 , we obtain @xmath142 and @xmath143 using equation , we determine @xmath144 at @xmath145 from the central  difference approximation : @xmath146 then , the value of @xmath147 is approximated from equations and : @xmath148 comparing the value of @xmath149 determined from equation with the central - difference approximation for the numerical derivative @xmath150 we can estimate the numerical error of the solution at the boundary @xmath5 .",
    "figure [ fig - num-2 ] ( left ) compares the value of @xmath149 between equations and .",
    "the error remains small , therefore , the assumption that the solution is smooth ( or at least @xmath151 ) at the boundary @xmath5 is valid up to numerical accuracy .",
    "figure [ fig - num-2 ] ( right ) shows the time step size @xmath116 adjusted to preserve the same level of the local error of @xmath152 .",
    "we set @xmath153 if the error estimation procedure yields larger values of @xmath116 .",
    "this truncation is needed because the error drops significantly near @xmath154 , and the error estimation procedure would otherwise produce large values of @xmath116 .",
    "we have performed computations with other initial conditions from the two - parameter family of functions in ( [ ic ] ) .",
    "figure [ fig - num-3 ] ( left ) shows the dynamical evolution of the velocity @xmath16 starting with a positive velocity @xmath155 , which is determined from the initial function ( [ ic ] ) with @xmath83 and @xmath156 . although the terminal time @xmath157 is much larger compared with the case of the negative initial velocity on figure [ fig - num-1 ] , a blow - up is still detected from this initial condition .",
    "the solution @xmath92 looks similar to the solution shown in figure [ fig - num-1 ] ( top left ) and hence is not shown .",
    "figure [ fig - num-3 ] ( right ) shows the adjusted time step size .",
    "we note that the time step size is small at the initial time because the smooth solution appears from the initial condition , which does not satisfy infinitely many constraints of the boundary  value problem ( [ pde2])([bc2 ] ) .",
    "it is also small near the terminal time because of the blow - up of the smooth solution .",
    "but @xmath116 is not too small at intermediate values of @xmath6 , when the solution is at a slowly varying phase . during this slowly varying phase ,",
    "@xmath4 is nearly constant but @xmath40 changes nearly linearly in time ( similarly to figure [ fig - num-1 ] ( bottom left ) and hence is not shown ) .",
    "figure [ fig - num-4 ] illustrates the dynamical evolution of the velocities @xmath4 under different initial conditions given by the two - parameter function ( [ ic ] ) . from these plots , together with the previous examples , it is clear that the blow - up time depends on the initial velocity @xmath158 and a large positive initial velocity leads to a much longer slowly varying phase before the solution blows up .",
    "nevertheless , the blow - up in a finite time is unavoidable for any physically acceptable initial conditions .",
    "in order to determine numerically the blow - up time @xmath39 and the rate of blow - up of the velocity @xmath16 , we will fit the numerical data near the terminal time @xmath134 of our computations with either the logarithmic function or the power function .    for the logarithmic function ,",
    "we first differentiate both sides of the expression with respect to @xmath6 and take the inverse : @xmath159 then the constants @xmath44 and @xmath39 can be determined from a linear regression applied to equation ( [ regression-1 ] ) .",
    "we will skip the numerical procedure for determining the values of @xmath45 since it does not affect the blow - up behavior of @xmath16 .",
    "for the power function , we can take the logarithm of both sides of the expression @xmath160 and then differentiate the above expression : @xmath161 the constants @xmath162 and @xmath39 can now be determined from a linear regression applied to equation ( [ regression-2 ] ) .    in practice",
    ", we found that the blow - up rate @xmath162 in the power law or the coefficient @xmath44 in the logarithmic law vary with different time windows ( i.e. the range of @xmath6 which is used to fit the data ) .",
    "the following output gives a comparison of numerical data under different time windows and different tolerance levels , using the initial condition ( [ ic ] ) with @xmath83 and @xmath84 . here _ starting time _ means the time @xmath6 at which we start to fit the data , and _ error _ is the mean squared error ( mse ) defined by @xmath163 where @xmath164 is the total number of data points used in the regression .",
    ".... initial condition : a = 0.5 , b = 0 ; initial velocity : v(0 ) = -1.2500    tolerance level : 0.0001 , number of iterations : 330 , terminal time = 1.8729    starting time     blowup time t0     blowup rate p or c1       error powerlaw :           1.8176          1.8749             0.3916            0.000017           1.8356          1.8752             0.3994            0.000003           1.8550          1.8756",
    "0.4104            0.000000 loglaw :           1.8176          1.8678             0.5371           23.732740           1.8356          1.8695             0.6135           33.681247           1.8550          1.8716",
    "0.7578           68.934686    tolerance level : 1e-006 , number of iterations : 1448 , terminal time = 1.8732    starting time     blowup time t0     blowup rate p or c1       error powerlaw :           1.8172          1.8753             0.3927            0.000033           1.8360          1.8757             0.4009            0.000006           1.8547",
    "1.8760             0.4118            0.000000 loglaw :           1.8172          1.8688             0.5500           25.226547           1.8360          1.8705             0.6343           33.937325           1.8547          1.8724             0.7854           58.894321 ....    the above table shows that the errors from the logarithmic law are much larger than the errors from the power law in all cases . also , the error of the power law reduces as the time window moves closer to the blow - up time , whereas the error of the logarithmic law increases .",
    "moreover , the blow - up times @xmath39 determined from the logarithmic law are smaller than the terminal time @xmath134 of our computations .",
    "hence , the logarithmic law deviates from the numerical data near the blow - up time .",
    "as we can see in figure [ fg : datafitting ] , the power function fits our numerical data much better than the logarithmic function .    in order to confirm that the blow - up of the velocity @xmath16 occurs according to the power law ( [ pwrlaw ] ) compared to the logarithmic law ( [ loglaw ] ) , we use the scaling transformations suggested in @xcite and replace the time variable @xmath6 by the new variable @xmath165 where @xmath164 is a positive integer . in new time variable with @xmath166 , the model ( [ pde2 ] ) is rewritten in the form @xmath167 whereas the boundary conditions or the numerical method are unaffected . with the power law ( [ pwrlaw ] ) as @xmath168 , the new time variable @xmath134 in ( [ time - variable ] ) approaches a finite limit if @xmath169 and becomes infinite if @xmath170 . with the logarithmic law ( [ loglaw ] ) , the new time variable @xmath134 would always approach a finite limit for any integer @xmath164 .",
    "figure [ fig - power-1 ] shows the dependence of @xmath16 versus the rescaled time variable @xmath134 for @xmath171 ( left ) and @xmath172 ( right ) .",
    "it is obvious that the blow up occurs in finite @xmath134 time if @xmath171 and in infinite @xmath134 time if @xmath172 , which corroborates well with the previous numerical data suggesting that @xmath173 .",
    "this figure rules out the validity of the logarithmic law ( [ loglaw ] ) .",
    "we have checked that the rescaled time variable @xmath134 for @xmath174 also extends to infinite times , similarly to the result for @xmath172 .",
    "we note that the dependence of @xmath16 versus the original time variable @xmath6 can be obtained by numerical integration of the integral in ( [ time - variable ] ) .",
    "we have checked that both time evolutions of @xmath16 in @xmath134 with @xmath171 and @xmath172 recover the same behavior of @xmath16 in @xmath6 , which resembles the top left panel of figure [ fig - num-1 ] except times near the blow - up time , where the computational error becomes more significant .    using the scaling transformation ( [ time - variable ] ) with @xmath172 in the case",
    "when @xmath175 as @xmath61 , we can define a more accurate procedure of detecting the blow - up rate @xmath162 in the power law ( [ pwrlaw ] ) .",
    "first , we note that if @xmath176 as @xmath168 , then @xmath177 as @xmath168 .",
    "hence @xmath178 as @xmath175 with @xmath179 . using now the linear regression in log - log variables for @xmath134 and @xmath16",
    ", we can estimate the coefficient @xmath180 , and then @xmath162 .",
    "the following table shows several computations of @xmath180 and @xmath162 for different initial and terminal times @xmath134 .",
    "all other parameters are fixed similarly to the previous numerical computations .    .... starting time     terminal time     regression slope q     blow - up rate p       36.0943          723.3424            0.5345               0.4697      121.7362          723.3424            0.5221               0.4797      272.5828        78034.1670            0.5044               0.4956     2393.6301        78034.1670            0.4997               0.5003 ....    the results of data fitting suggest that the power law gives a consistent estimation of the blow - up rate @xmath162 , with @xmath47 .",
    "let us now discuss why the behavior @xmath48 as @xmath41 appears a generic feature of smooth solutions of the boundary  value problem ( [ pde2])([bc2 ] ) .    using equations ( [ velocity1 ] ) and ( [ r5 ] ) , we obtain the dynamical equation on @xmath181 : @xmath182 let us now assume that there is @xmath50 such that @xmath183 where @xmath184 and @xmath185 . solving the differential equation ( [ contact ] ) near the time @xmath186",
    ", we obtain @xmath187 under the constraint that @xmath188 .",
    "the asymptotic rate ( [ asymptotic - rate ] ) corresponds to the power law with @xmath189 .",
    "figure [ fig - power-2 ] shows the behavior of absolute values of @xmath190 ( left ) and @xmath191 ( right ) versus the rescaled time variable @xmath134 given by ( [ time - variable ] ) with @xmath172 .",
    "we can see that the assumption @xmath188 , that is , @xmath191 is bounded away from zero near the blow - up time , is justified numerically .",
    "we note that the time evolution in the rescaled time variable @xmath134 allows us to identify this property better than the time evolution in the original time variable @xmath6 , which is shown on the bottom right panel of figure [ fig - num-1 ] .",
    "we have also checked from the linear regression in log - log coordinates that @xmath192 as @xmath41 with @xmath47 , in consistency with the asymptotic rate ( [ asymptotic - rate ] ) .",
    "we conclude from the numerical simulations of the boundary  value problem ( [ pde2])([bc2 ] ) that , for any suitable initial condition in the two - parameter form , there always exists a finite positive time @xmath39 such that @xmath193 as @xmath168 , although the blow - up time @xmath39 varies from different initial velocity @xmath158 . with a large positive initial velocity @xmath158",
    ", the solution tends to have a longer phase of slow motion before it eventually blows up , whereas a negative initial velocity yields a much smaller value of the blow - up time .",
    "the numerical results also suggest that the behavior of @xmath4 near the blow - up time satisfies the power law , with a blow - up rate @xmath47 .",
    "this numerical observation corroborates a simple analytic theory for the blow - up of the velocity of contact lines in the reduced model ( [ pde])([bc - pde ] ) . based on earlier numerical evidences in @xcite ,",
    "a similar result should also hold for the nonlinear thin - film equation ( [ model ] ) .",
    "an open problem for further studies is to develop a more precise and computationally efficient numerical method for solutions of the boundary  value problem ( [ pde2])([bc2 ] ) . because the model equation is already a fourth - order differential equation",
    ", we shall avoid using any numerical methods that involves higher - order central differences .",
    "in addition , because of the unknown variable @xmath4 , it is difficult to use other higher - order implicit methods to solve the system of differential equations after discretization .",
    "thus , the finite difference method has a limited accuracy .",
    "therefore , a different approach is needed , for instance , by using the collocation method involving the discrete fourier transform .",
    "pelinovsky , a.r .",
    "giniyatullin , and y.a .",
    "panfilova ,  on solutions of a reduced model for the dynamical evolution of contact lines \" , transactions of nizhni novgorod state technical university n.a .",
    "alexeev n.4 ( 94 ) ( 2012 ) , 4560 .",
    "pelinovsky and a.r .",
    "giniyatullin ,  finite - time singularities in the dynamical evolution of contact lines \" , bulletin of the moscow state regional university ( physics and mathematics ) * 2012 * n.3 ( 2012 ) , 1424 ."
  ],
  "abstract_text": [
    "<S> we study numerically a reduced model proposed by benilov and vynnycky ( j. fluid mech . </S>",
    "<S> * 718 * ( 2013 ) , 481 ) , who examined the behavior of a contact line with a @xmath0 contact angle between liquid and a moving plate , in the context of a two - dimensional couette flow . </S>",
    "<S> the model is given by a linear fourth - order advection - diffusion equation with an unknown velocity , which is to be determined dynamically from an additional boundary condition at the contact line .    </S>",
    "<S> the main claim of benilov and vynnycky is that for any physically relevant initial condition , there is a finite positive time at which the velocity of the contact line tends to negative infinity , whereas the profile of the fluid flow remains regular . </S>",
    "<S> additionally , it is claimed that the velocity behaves as the logarithmic function of time near the blow - up time .    </S>",
    "<S> compared to the previous computations based on comsol built - on algorithms , we use matlab software package and develop a direct finite - difference method to study dynamics of the reduced model under different initial conditions . </S>",
    "<S> we confirm the first claim but also show that the blow - up behavior is better approximated by a power function , compared with the logarithmic function . </S>",
    "<S> this numerical result suggests a simple explanation of the blow - up behavior of contact lines . </S>"
  ]
}
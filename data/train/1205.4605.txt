{
  "article_text": [
    "many graph optimisation problems do not admit an exact solution by a fast distributed algorithm . this is true not only for most np - hard optimisation problems , but also for problems that can be solved using sequential polynomial - time algorithms .",
    "this work is a contribution to the _ distributed approximability _ of such a problem : the minimum vertex cover problem on bipartite graphs ",
    "we call it @xmath5 , for short .",
    "our focus is on _ negative _ results : we prove an optimal ( up to constants ) time lower bound @xmath6 for a randomised distributed algorithm to find a close - to - optimal vertex cover on bipartite 2-coloured graphs of maximum degree @xmath7 . in particular , this rules out the existence of a sublogarithmic - time approximation scheme for @xmath5 on sparse graphs .",
    "our lower bound result exhibits the following features :    * the proof is relatively simple as compared to the strength of the result ; this is achieved through an application of _ expander graphs _ in the lower - bound construction . * to explain the source of hardness for @xmath5 we introduce a certain _ distributed cut minimisation problem _ , which might have applications elsewhere .",
    "* many previous distributed inapproximability results are based on the hardness of _ local symmetry breaking_. this is not the case here : the difficulty we pinpoint for @xmath5 is in the semi - global task of _ gluing together _ two different types of local solutions . * our result states that _",
    "knig s theorem is non - local_see section  [ sec : konig ] .",
    "we work in the standard @xmath8 model of distributed computing  @xcite . as input",
    "we are given an undirected graph @xmath9 .",
    "we interpret @xmath10 as defining a communication network : the nodes @xmath11 host processors , and two processors can communicate directly if they are connected by an edge .",
    "all nodes run the same distributed algorithm @xmath12 .",
    "the computation of @xmath12 on @xmath10 starts out with every node @xmath13 knowing an upper bound on @xmath14 and possessing a globally unique @xmath15-bit identifier @xmath16 ; for simplicity , we assume that @xmath17 and @xmath18 . also , we assume that the processors have access to independent ( and unlimited ) sources of randomness .",
    "the computation proceeds in synchronous communication rounds . in each round",
    ", all nodes first perform some local computations and then exchange ( unbounded ) messages with their neighbours . after some @xmath19 communication",
    "rounds the nodes stop and produce local outputs . here",
    "@xmath19 is the _ running time _ of @xmath12 and the output of @xmath20",
    "is denoted @xmath21 .",
    "the fundamental limitation of a distributed algorithm with running time @xmath19 is that the output @xmath21 can only depend on the information available in the subgraph @xmath22\\subseteq g$ ] induced on the vertices in the radius-@xmath19 neighbourhood ball @xmath23 conversely , it is well known that an algorithm @xmath12 can essentially discover the structure of @xmath22 $ ] in time @xmath19 .",
    "thus , @xmath12 can be thought of as a function mapping @xmath19-neighbourhoods @xmath22 $ ] ( together with the additional input labels and random bits on @xmath24 ) to outputs .",
    "while the @xmath8 model abstracts away issues of network congestion and asynchrony , this only makes our _ lower - bound _ result stronger .",
    "below , we concentrate on bipartite 2-coloured graphs @xmath10 .",
    "that is , @xmath10 is not only bipartite ( which is a global property ) , but every node @xmath20 is informed of the bipartition by an additional input label @xmath25 , where @xmath26 is a proper 2-colouring of @xmath10 .    in the @xmath5 problem",
    "we are given a 2-coloured graph @xmath27 and the objective is to output a minimum - size vertex cover of @xmath10 .    a distributed algorithm @xmath12 computes a vertex cover by outputting a single bit @xmath28 on a node @xmath20 indicating whether @xmath20 is included in the solution . this way , @xmath12 computes the set @xmath29 .",
    "moreover , we say that @xmath12 computes an _",
    "@xmath30-approximation _ of @xmath5 if @xmath31 is a vertex cover of @xmath10 and @xmath32 where @xmath33 denotes the size of a minimum vertex cover of @xmath10 .",
    "our main result is the following .",
    "[ thm : main ] there exists a @xmath2 such that no randomised distributed algorithm with running time @xmath3 can find a @xmath4-approximation of @xmath5 on graphs of maximum degree @xmath7 .",
    "a matching time upper bound follows directly from the well - known network decomposition algorithm due to linial and saks  @xcite .    for every @xmath0",
    "a @xmath1-approximation of @xmath5 can be computed with high probability in time @xmath34 on graphs of maximum degree @xmath35 .",
    "the subroutine _",
    "construct_block _ in the algorithm of linial and saks  @xcite computes , in time @xmath36 , a set @xmath37 with the following properties .",
    "each component in the subgraph @xmath38 $ ] induced by @xmath39 has _ weak diameter _ at most @xmath19 , i.e. , @xmath40 for each pair @xmath41 belonging to the same component of @xmath38 $ ] .",
    "moreover , they prove that , w.h.p .",
    ", @xmath42    let @xmath43 be a component of @xmath38 $ ] .",
    "every node of @xmath43 can discover the structure of @xmath43 in time @xmath44 by exploiting its weak diameter .",
    "thus , every node of @xmath43 can internally compute _ the same _ optimal solution of @xmath5 on @xmath43 .",
    "we can then output as a vertex cover for @xmath10 the union of the optimal solutions at the components together with the vertices @xmath45 .",
    "this results in a solution of size at most @xmath46 } + \\epsilon n.\\ ] ] but since @xmath47 for connected @xmath10 , this is a @xmath48-approximation of @xmath5 .",
    "the classic theorem of knig ( see , e.g. , diestel @xcite ) states that , on bipartite graphs , the size of a maximum matching equals the size of a minimum vertex cover .",
    "a modern perspective is to view this result through the lens of linear programming ( lp ) duality .",
    "the lp relaxations of these problems are _ the fractional matching problem _ ( primal ) and _ the fractional vertex cover problem _ ( dual ) : @xmath49 in particular , on bipartite graphs , the above lps do not have an integrality gap ( see , e.g. , papadimitriou and steiglitz @xcite ) : among the optimal feasible solutions are integral vectors @xmath50 and @xmath51 that correspond to maximum matchings and minimum vertex covers .    in the context of distributed algorithms , the following is known on ( bipartite ) _ bounded degree graphs _ :    1 .",
    "_ primal lp and dual lp admit local approximation schemes . _ as part of their general result , kuhn et al .  @xcite give a strictly local @xmath1-approximation scheme for the above lps .",
    "their algorithms run in constant time independent of the number of nodes .",
    "integral primal admits a local approximation scheme .",
    "_ strand et al .",
    "@xcite describe a strictly local @xmath1-approximation scheme for the maximum matching problem on 2-coloured graphs .",
    "again , the running time is a constant independent of the number of nodes .",
    "integral dual does not admit a local approximation scheme .",
    "_ the present work shows  in contrast to the above positive results  that there is no local approximation scheme for @xmath5 even when @xmath7 .",
    "there are relatively few independent methods for obtaining negative results for distributed approximation in the @xmath8 model .",
    "we list three main sources .",
    "[ [ local - algorithms . ] ] local algorithms .",
    "+ + + + + + + + + + + + + + + + +    linial s  @xcite lower bound @xmath52 for @xmath53-colouring a cycle together with the ramsey technique of naor and stockmeyer  @xcite establish basic limitations on finding _ exact solutions _ strictly locally in constant time .",
    "these impossibility results were later extended to finding _ approximate solutions _ on cycle - like graphs by lenzen and wattenhofer  @xcite and czygrinow et al .",
    "a recent work  @xcite generalises these techniques even further and proves that deterministic local algorithms in the @xmath8 model are often no more powerful than algorithms running on anonymous port numbered networks . for more information on this line of research ,",
    "see the survey of local algorithms  @xcite .    here",
    ", the inapproximability results typically exploit the inability of a local algorithm to break local symmetries . by contrast , in this work , we consider the case where the local symmetry is already broken by a @xmath54-colouring .",
    "[ [ kmw - bounds . ] ] kmw - bounds .",
    "+ + + + + + + + + + +    kuhn , moscibroda and wattenhofer  @xcite prove that any randomised algorithm for computing a constant - factor approximation of minimum vertex cover on general graphs requires time @xmath55 and @xmath56 . roughly speaking ,",
    "their technique consists of showing that a fast algorithm can not tell apart two adjacent nodes @xmath20 and @xmath57 , even though it is globally more profitable to include @xmath20 in the vertex cover and exclude @xmath57 than conversely .    the lower - bound graphs of kuhn et al .",
    "are necessarily of unbounded degree : on bounded degree graphs the set of all non - isolated nodes is a constant factor approximation of a minimum vertex cover . by contrast , our lower - bound graphs are of bounded degree and they forbid close - to - optimal approximation of @xmath5 .    [ [ sublinear - time - centralised - algorithms . ] ] sublinear - time centralised algorithms .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    parnas and ron  @xcite discuss how a fast distributed algorithm can be used as _ solution oracle _ to a centralised algorithm that approximates parameters of a sparse graph @xmath10 in sublinear time given a randomised query access to @xmath10 .",
    "thus , lower bounds in this model of computation also imply lower bounds for distributed algorithms .",
    "in particular , an argument of trevisan ( presented in @xcite ) implies that computing a @xmath58-approximation of a minimum vertex cover requires @xmath6 time on @xmath59-regular graphs , where @xmath60 is sufficiently large .",
    "we note that @xmath5 is easy to approximate in this model : nguyen and onak  @xcite give a centralised constant - time algorithm to approximate the size of a maximum matching on a graph @xmath10 . if we are promised that @xmath10 is bipartite , the same algorithm approximates the size of @xmath5 by knig duality .",
    "to best explain the basic idea of our lower bound result , we first prove theorem  [ thm : main ] for a toy model that we define in section  [ ssec : toy ] ; in this model , we only consider a certain class of deterministic distributed algorithms in anonymous networks . later in section  [ sec : randomised ] we will show how to implement the same proof technique in a much more general setting : randomised distributed algorithms in networks with unique identifiers .    in the present section , we find a source of hardness for @xmath5 as follows .",
    "first , we argue that any approximation algorithm for the @xmath5 problem also solves a certain cut minimisation problem called @xmath61 .",
    "we then show that @xmath61 is hard to approximate locally , which implies that @xmath5 must also be hard to approximate locally .      throughout this section",
    "we consider deterministic algorithms @xmath12 running in time @xmath62 that operate on _ input - labelled anonymous networks _",
    "@xmath63 , where @xmath9 and @xmath64 is a labelling of @xmath11 .",
    "more precisely , we impose the following additional restrictions in the @xmath8 model :    * the nodes of @xmath10 are not given random bits as input . *",
    "the output of @xmath12 is invariant under reassigning node identifiers .",
    "that is , if @xmath65 is isomorphic to @xmath10 via a mapping @xmath66 , then for @xmath13 , @xmath67    put otherwise , the only symmetry breaking information we supply @xmath12 is the radius-@xmath19 neighbourhood topology together with the input labelling  the nodes are anonymous and do not have unique identifiers .",
    "we will also consider graphs @xmath10 that are _",
    "directed_. in this case , the directions of the edges are merely additional symmetry - breaking information ; they do not restrict communication .     problem . in this example , we have used a simple distributed algorithm  @xmath12 to find a recut @xmath68 with a small boundary @xmath69 : a node outputs red iff there is a red node within distance @xmath70 in the input . while the solution is not optimal , in a grid graph the boundary will be relatively small .",
    "however , our lower bound shows that any fast distributed algorithm  including algorithm  @xmath12fails to produce a small boundary in some graph . ]      in the following , we consider partitions of @xmath11 into red and blue colour classes as determined by a labelling @xmath71 .",
    "we write @xmath72 for the fraction of edges crossing the red / blue cut , i.e. , @xmath73    in _ the recut problem _ we are given a labelled graph @xmath63 as input and the objective is to compute an output labelling ( _ a recut _ ) @xmath68 that minimises @xmath74 subject to the following constraints : ( a )  if @xmath75 , then @xmath76 .",
    "( b )  if @xmath77 , then @xmath78 .    in words , if we have an all - red input , we have to produce an all - red output , and if we have an all - blue input , we have to produce an all - blue output .",
    "otherwise the output can be arbitrary .",
    "see figure  [ fig : recut ] for an illustration .",
    "needless to say , the global optimum for an algorithm @xmath12 would be to produce a constant output labelling @xmath79 ( either all red or all blue ) having @xmath80 .",
    "however , a distributed algorithm @xmath12 can only access the values of the input labelling @xmath64 in its local radius-@xmath19 neighbourhood : when encountering a neighbourhood @xmath81 with @xmath82 , the algorithm is forced to output red at @xmath20 to guarantee satisfying the global constraint  ( a ) , and when encountering a neighbourhood @xmath81 with @xmath83 , the algorithm is forced to output blue at @xmath20 to satisfy  ( b ) . thus ,",
    "if a connected graph @xmath10 has two disjoint @xmath19-neighbourhoods @xmath84 with @xmath82 and @xmath85 the algorithm @xmath12 can not avoid producing at least some red / blue edge boundary .",
    "indeed , the best we can hope @xmath12 to achieve is a recut @xmath79 of size @xmath86 for some small constant @xmath87 .",
    "[ [ discussion . ] ] discussion .",
    "+ + + + + + + + + + +    the @xmath61 problem models the following abstract high - level challenge in designing distributed algorithms : each node in a local neighbourhood @xmath88 can , in principle , internally compute a completely _ locally optimal _",
    "solution for ( the subgraph induced by ) @xmath89 , but difficulties arise when deciding which of these proposed solution are to be used in the final distributed output .",
    "in particular , when the _ type _ of the produced solution changes from one ( e.g. , red ) to another ( e.g. , blue ) across a graph @xmath10 one might have to introduce suboptimalities to the solution at the ( red / blue ) boundary in order to glue together the different types of local solutions .",
    "in fact , the @xmath61 problem captures the first non - trivial case of this phenomenon with only _ two _ solution types present .",
    "one can think of the input labelling @xmath64 as recording the _ initial preferences _ of the nodes whereas the output labelling @xmath79 records how an algorithm @xmath12 decides to combine these preferences into the final unified output . in the end",
    ", our lower - bound strategy will be to argue that any @xmath12 can be forced into producing too large an edge boundary @xmath90 resulting in too many suboptimalities in the produced output .",
    "next , we show how the above discussion is made concrete in the case of the @xmath5 problem .",
    "we call a graph @xmath10 _ tree - like _ if all the @xmath19-neighbourhoods in @xmath10 are trees , i.e. , @xmath10 has girth larger than @xmath91 . furthermore ,",
    "if @xmath10 is directed , we say it is _ balanced _ if @xmath92 for all vertices @xmath20 .",
    "we note that a deterministic algorithm @xmath12 produces the same output on every node of a balanced regular tree - like digraph @xmath10 , because such a graph is _ locally homogeneous _ : all the @xmath19-neighbourhoods of @xmath10 are pairwise isomorphic .",
    "using this terminology we give the following reduction .",
    "[ thm : reduction ] suppose @xmath12 computes a @xmath1-approximation of @xmath5 on graphs of maximum degree @xmath7 .",
    "then , there is an algorithm ( with running time @xmath19 ) that finds a recut @xmath79 of size @xmath93 on balanced @xmath94-regular tree - like digraphs .",
    "the proof of theorem  [ thm : reduction ] follows the usual route : we give a local reduction ( i.e. , one that can be computed by a local algorithm ) that transforms an instance @xmath63 of @xmath61 into an instance @xmath95 of @xmath5 .",
    "then we simulate @xmath12 on the resulting instance and map the output of @xmath12 back to a solution of the @xmath61 instance @xmath63 .",
    "let @xmath9 be a balanced @xmath94-regular tree - like digraph and let @xmath71 be a labelling of  @xmath10 .",
    "the instance @xmath95 is obtained by replacing each vertex @xmath13 by one of two local gadgets depending on the label @xmath96 .",
    "we first describe and analyse simple gadgets yielding instances of @xmath5 with @xmath97 ; the gadgets yielding instances with @xmath98 are described later .",
    "the red gadget replaces a vertex @xmath13 by two new vertices @xmath99 ( white ) and @xmath100 ( black ) that share a new edge @xmath101 .",
    "the incoming edges of @xmath20 are reconnected to @xmath99 , whereas the outgoing edges of @xmath20 are reconnected to @xmath100 .",
    "note that the @xmath5 instance @xmath102 ( where we denote by @xmath103 the constant labelling @xmath104 ) contains @xmath105 as a perfect matching .",
    "since @xmath106 is locally homogeneous , the solutions output by @xmath12 on the endpoints of @xmath107 are isomorphic across all @xmath20 . assuming @xmath108 it follows that the algorithm @xmath12 must output either the set of all white nodes or the set of all black nodes on @xmath102 .",
    "our reduction branches at this point : we choose the structure of the blue gadget to counteract this white / black decision made by @xmath12 on the red gadgets .",
    "we describe the case that @xmath12 outputs all white nodes on @xmath102 ; the case of black nodes is symmetric .",
    "the blue gadget replacing @xmath13 is identical to the red gadget with the exception that a third new vertex @xmath109 ( white ) is added and connected to @xmath100 .",
    "similarly as above , we can argue that @xmath12 outputs exactly the set of all black nodes on the instance @xmath110 .",
    "this completes the description of @xmath111 .",
    "next , we simulate @xmath12 on @xmath95 .",
    "the output of @xmath12 is then transformed back to a labelling @xmath112 by setting @xmath113 note that @xmath79 satisfies both feasibility constraints ( a ) and ( b ) of @xmath61 .",
    "it remains to bound the size @xmath90 of this recut .",
    "[ [ recut - analysis . ] ] recut analysis .",
    "+ + + + + + + + + + + + + + +    call a red vertex @xmath20 in @xmath114 _ bad _ if @xmath20 has a blue out - neighbour @xmath57 . by the definition of `` @xmath115 '' , the vertex cover produced by algorithm @xmath12",
    "does not contain the white node  @xmath116 .",
    "thus to cover the edge @xmath117 , the vertex cover has to contain the black node  @xmath100 .",
    "but by the definition of `` @xmath118 '' , we must have @xmath99 or @xmath109 in the solution as well .",
    "hence , at least two nodes are used to cover the gadget at  @xmath20 , which is suboptimal as compared to the minimum vertex cover @xmath119 , which uses only one node per gadget .",
    "this implies that we must have at most @xmath120 bad vertices as @xmath12 produces a @xmath1-approximation of @xmath5 on @xmath95 .        on the other hand ,",
    "exactly half of the edges crossing the cut @xmath79 are oriented from red to blue since @xmath10 is balanced .",
    "each bad vertex gives rise to at most two of these edges , so we have that @xmath121 which gives @xmath122 , as required .",
    "this proves theorem  [ thm : reduction ] for @xmath97 .",
    "[ [ gadgets - for - delta-3 . ] ] gadgets for @xmath7 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the maximum degree used in the gadgets can be reduced to 3 by the following modification .",
    "the red gadget replaces a vertex @xmath13 by a path of length 3 .        again , to achieve a @xmath123-approximation of @xmath5 on @xmath102 the algorithm @xmath12 has to make a choice : either leave out the middle black vertex or the middle white vertex from the vertex cover .",
    "supposing @xmath12 leaves out the middle black , the blue gadget is defined to be identical to the red gadget with an additional white vertex connected to the middle black one .",
    "after simulating @xmath12 on an instance @xmath95 we define @xmath124 iff @xmath12 outputs only black nodes at the gadget at @xmath20 .",
    "the recut analysis will then give @xmath125 .",
    "intuitively , the difficulty in computing a small red / blue cut in the @xmath61 problem stems from the inability of an algorithm @xmath12 to overcome the neighbourhood expansion of an input graph in @xmath62 steps  an algorithm can not hide the red / blue boundary as the radius-@xmath19 neighbourhoods themselves might have large boundaries .",
    "to formalise this intuition , we use as a basis for our lower - bound construction an infinite family @xmath126 of @xmath94-regular _ @xmath127-expander graphs _",
    ", where each @xmath128 satisfies the edge expansion condition @xmath129 here , @xmath130 is the number of edges leaving @xmath39 and @xmath2 is an absolute constant independent of @xmath14 . on such graphs",
    "it is enough for us to force an algorithm @xmath12 to output a _ nearly balanced recut _",
    "@xmath79 having both colour classes close to @xmath131 in size .",
    "this is because if the number of , say , the red nodes is @xmath132 then the expansion property implies that @xmath133 that is , @xmath12 computes a recut of size @xmath134 .",
    "indeed , the following simple fooling trick makes up the very core of our argument .",
    "[ lem : fooling ] suppose @xmath12 produces a feasible solution for the @xmath61 problem in time @xmath62 .",
    "then for each @xmath94-regular graph @xmath10 there exists an input labelling for which @xmath12 computes a nearly balanced recut .",
    "fix an arbitrary ordering @xmath135 for the vertices of @xmath10 and define a sequence of labellings @xmath136 by setting @xmath137 iff @xmath138 .",
    "that is , in @xmath139 all nodes are red , in @xmath140 all nodes are blue , and @xmath141 is obtained from @xmath142 by changing the colour of @xmath143 from red to blue .",
    "when we switch from the instance @xmath144 to @xmath145 the change of @xmath143 s colour is only registered by nodes in the radius-@xmath19 neighbourhood of @xmath143 .",
    "this neighbourhood has size @xmath146 , and so the number of red nodes in the outputs @xmath147 and @xmath148 of @xmath12 can only differ by @xmath149 . as , by assumption , we have that @xmath12 computes the labelling @xmath150 on @xmath151 and the labelling @xmath152 on @xmath153 , it follows by continuity that some labelling in our sequence must force @xmath12 to output @xmath154 red nodes .",
    "we now have all the ingredients for the lower - bound proof : we can take @xmath155 if we choose @xmath126 to be the family of @xmath94-regular ramanujan graphs due to morgenstern  @xcite .",
    "these graphs are tree - like , as they have girth @xmath156 .",
    "they can be made into balanced digraphs since a suitable orientation can always be derived from an euler tour .",
    "thus , @xmath126 consists of balanced @xmath94-regular tree - like digraphs .",
    "lemma  [ lem : fooling ] together with the discussion above imply that every algorithm for @xmath61 produces a recut of size @xmath134 on some labelled graph in @xmath126 .",
    "hence , the contrapositive of theorem  [ thm : reduction ] proves theorem  [ thm : main ] for our deterministic toy algorithms .",
    "even though our model of deterministic algorithms in section  [ sec : deterministic ] is an unusually weak one , we can quickly recover the standard @xmath8 model from it by equipping the nodes with independent sources of randomness .",
    "in particular , as is well known , each node can choose an identifier uniformly at random from , e.g. , the set @xmath157 , and this results in the identifiers being globally unique with probability at least @xmath158 .",
    "when discussing randomised algorithms many of the simplifying assumptions made in section  [ sec : deterministic ] no longer apply .",
    "for example , a randomised algorithm need not produce the same output on every node of a locally homogeneous graph .",
    "consequently , the homogeneous feasibility constraints in the @xmath61 problem do not strictly make sense for randomised algorithms .",
    "however , we can still emulate the same proof strategy as in section  [ sec : deterministic ] : we force the randomised algorithm to output a nearly balanced recut with high probability .",
    "below , we describe this strategy in case of the easy - to - analyse `` @xmath97 '' gadgets with the understanding that the same analysis can be repeated for the `` @xmath7 '' gadgets with little difficulty .",
    "fix a randomised algorithm @xmath12 with running time @xmath62 and let @xmath9 , @xmath14 , be a large @xmath94-regular expander .",
    "again , we start out with the all - red instance .",
    "we denote by @xmath159 and @xmath160 the number of black and white nodes output by @xmath12 on @xmath102 . as each of the edges @xmath107",
    "must be covered , we have that @xmath161 hence , by linearity of expectation , at least one of @xmath162 \\geq n/2 $ ] or @xmath163 \\geq n/2 $ ] holds .",
    "we assume that @xmath162 \\geq n/2 $ ] ; the other case is symmetric .    in reaction to",
    "@xmath12 preferring white nodes , the blue gadgets are now defined exactly as in section  [ sec : deterministic ] with an additional white vertex . furthermore , for any input @xmath71 we interpret the output of @xmath12 on @xmath95 as defining an output labelling @xmath79 of @xmath11 , where , again , @xmath124 iff @xmath12 outputs only the black node at the gadget at @xmath20 .",
    "this definition translates our assumption of @xmath162 \\geq n/2 $ ] into @xmath164 \\geq n/2,\\ ] ] where @xmath165 counts the number of gadgets ( i.e. , vertices of @xmath10 ) relabelled red by @xmath12 on @xmath95 .",
    "if @xmath12 relabels a blue gadget red , it must output at least two nodes at the gadget .",
    "this means that the size of the solution output by @xmath12 on @xmath110 is at least @xmath166 .",
    "thus , if @xmath12 is to produce a @xmath167-approximation on @xmath110 in expectation , we must have that @xmath168 \\leq n/2.\\ ] ]    the inequalities and provide the necessary boundary conditions ( replacing the feasibility constraints of @xmath61 ) for the argument of lemma  [ lem : fooling ] : by continuously changing the instance @xmath106 into @xmath169 we may find an input labelling @xmath170 achieving @xmath171 = n/2 - o(n).\\ ] ]    it remains to argue that @xmath12 outputs a nearly balanced recut not only `` in expectation '' but also with high probability .",
    "focusing on the instance @xmath172 we write @xmath173 and @xmath174 where @xmath175 indicates whether @xmath12 relabels the gadget at @xmath20 red .",
    "the variables @xmath176 are not _ too _ dependent : the @xmath177th power of @xmath10 , denoted @xmath178 , where @xmath179 are joined by an edge iff @xmath180 , is _ a dependency graph _ for the variables @xmath176 .",
    "every independent set @xmath181 in @xmath178 corresponds to a set @xmath182 of mutually independent random variables .",
    "since the maximum degree of @xmath178 is at most @xmath183 , this graph can always be partitioned into @xmath184 independent sets .    indeed ,",
    "janson  @xcite presents large deviation bounds for sums of type by applying chernoff  hoeffding bounds for each colour class in a @xmath185-colouring of @xmath178 . for any @xmath0 , theorem 2.1 in janson  @xcite ,",
    "as applied to our setting , gives @xmath186 + \\epsilon n ) \\leq \\exp\\left(-2\\frac{(\\epsilon n)^2}{\\chi(g^{2r})\\cdot n}\\right ) \\to 0,\\quad\\text{as}\\ n\\to \\infty,\\ ] ] and the same bound holds for @xmath187 - \\epsilon n\\right)$ ] .",
    "that is , @xmath188 is concentrated around its expectation .    in conclusion",
    ", the combination of and implies that , for large @xmath189 , the algorithm @xmath12 outputs a nearly balanced recut on @xmath172 with high probability . by the discussion in section  [ sec : deterministic ] , this proves theorem  [ thm : main ] .",
    "many thanks to valentin polishchuk for discussions . this work was supported in part by the academy of finland , grants 132380 and 252018 .",
    "http://arxiv.org/abs/1002.0125[matti strand , valentin polishchuk , joel rybicki , jukka suomela , and jara uitto . local algorithms in ( weakly ) coloured graphs , 2010",
    ". manuscript , arxiv:1002.0125 [ cs.dc ] . ]    http://dx.doi.org/10.1007/978-3-540-87779-0_6[andrzej czygrinow , micha hakowiak , and wojciech wawrzyniak . fast distributed approximations in planar graphs . in _ proc .",
    "22nd symposium on distributed computing ( disc 2008 ) _ , volume 5218 of _ lncs _ , pages 7892 .",
    "springer , berlin , 2008 . ]",
    "http://dx.doi.org/10.1145/1011767.1011811[fabian kuhn , thomas moscibroda , and roger wattenhofer . what can not be computed locally ! in _",
    "23rd symposium on principles of distributed computing ( podc 2004 ) _ , pages 300309 .",
    "acm press , new york , 2004 . ]",
    "http://dx.doi.org/10.1145/1109557.1109666[fabian kuhn , thomas moscibroda , and roger wattenhofer .",
    "the price of being near - sighted . in _ proc .",
    "17th symposium on discrete algorithms ( soda 2006 ) _ , pages 980989 .",
    "acm press , new york , 2006 .",
    "]      http://dx.doi.org/10.1007/978-3-540-87779-0_27[christoph lenzen and roger wattenhofer .",
    "leveraging linial s locality limit . in _ proc .",
    "22nd symposium on distributed computing ( disc 2008 ) _ , volume 5218 of _ lncs _ , pages 394407 .",
    "springer , berlin , 2008 . ]            http://dx.doi.org/10.1109/focs.2008.81[huy  n. nguyen and krzysztof onak .",
    "constant - time approximation algorithms via local improvements . in _ proc .",
    "49th symposium on foundations of computer science ( focs 2008 ) _ , pages 327336 .",
    "ieee computer society press , los alamitos , 2008 . ]"
  ],
  "abstract_text": [
    "<S> knig s theorem states that on bipartite graphs the size of a maximum matching equals the size of a minimum vertex cover . </S>",
    "<S> it is known from prior work that for every @xmath0 there exists a _ constant - time _ distributed algorithm that finds a @xmath1-approximation of a maximum matching on 2-coloured graphs of bounded degree . in this work , </S>",
    "<S> we show  somewhat surprisingly  that no _ sublogarithmic - time _ approximation scheme exists for the dual problem : there is a constant @xmath2 so that no randomised distributed algorithm with running time @xmath3 can find a @xmath4-approximation of a minimum vertex cover on 2-coloured graphs of maximum degree 3 . </S>",
    "<S> in fact , a simple application of the linial  saks ( 1993 ) decomposition demonstrates that this lower bound is tight .    </S>",
    "<S> our lower - bound construction is simple and , to some extent , independent of previous techniques . along the way we prove that a certain cut minimisation problem , which might be of independent interest , is hard to approximate locally on expander graphs . </S>"
  ]
}
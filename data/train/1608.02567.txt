{
  "article_text": [
    "the discontinuous petrov - galerkin ( dpg ) methodology of demkowicz and gopalakrishnan @xcite minimizes the residual of the solution in an energy norm , and has several features facilitating adaptive schemes . for well - posed problems with sufficiently regular solutions , dpg can be shown to converge at optimal rates  the inf - sup constants governing the convergence are mesh - independent , and of the same order as those governing the continuous problem @xcite .",
    "dpg also provides an accurate mechanism for evaluating the residual error which can be used to drive adaptive mesh refinements .",
    "dpg has been studied for a host of pde problems  including poisson @xcite , linear elasticity @xcite , stokes @xcite , and compressible @xcite and incompressible navier - stokes @xcite problems , to name a few . for each of these optimal convergence rates",
    "have either been proved a priori or observed in numerical experiments  in some cases , the solutions are even nearly optimal in terms of the absolute @xmath0 error ( not merely the rate ) . the global system matrices that arise from dpg formulations are symmetric ( hermitian ) positive definite , making them good candidates for solution using the conjugate gradient ( cg ) method",
    ". however , these matrices often have fairly large condition numbers which scale as @xmath1 ( see @xcite for the scaling estimate , and table 9.3 in @xcite for measurements ) , so that a good preconditioner is required before cg can be used effectively .    for us , a key motivation in the present work is the scalability of our solvers in camellia @xcite .",
    "prior to developing the preconditioners presented here , direct solvers were almost exclusively employed .",
    "these solvers only scale to a certain limited system size , and can require substantially more memory than iterative solvers .",
    "this is of particular concern for high - performance computing systems , where the memory per core is increasingly limited  for example , argonne s mira supercomputer has a bluegene / q architecture that has just one gigabyte per core .",
    "the structure of the paper is as follows . in section [ sec : litreview ] , we review some previous work in preconditioning dpg and similar systems . in section [ sec : dpgintro ] , we briefly introduce the dpg methodology and state the variational formulations we use for our numerical experiments . in section",
    "[ sec : gmgdetails ] , we detail our geometric multigrid preconditioners . in section [ sec : numericalexperiments ] , we present a wide variety of numerical experiments demonstrating the effectiveness of the approach .",
    "we examine the scalability of our implementation in section [ sec : scalability ] .",
    "we conclude in section [ sec : conclusion ] .",
    "some notes on our implementation in camellia can be found in [ sec : implementation ] ; for reference , we provide numerical values for the smoother weights we employ in [ sec : schwarzweights ] .",
    "dpg methods incorporate aspects of both least squares and substructured finite element methods .",
    "for least squares finite element methods @xcite , multigrid methods have been the preconditioner of choice .",
    "these were popularized as _ black - box _",
    "solvers for first order least squares ( fosls ) finite element methods , as the elliptic nature of least - squares finite element formulations implies optimal convergence for both additive and multiplicative multigrid methods for second order partial differential equations @xcite . for finite element discretizations based on the mesh skeleton , such as static condensation , mortar , or hybridized methods , schur complement or substructuring preconditioners based on the mesh skeleton",
    "have been developed @xcite . for a comprehensive review of such preconditioners ,",
    "we direct the interested reader to @xcite .",
    "wieners and wohlmuth examine preconditioning of the substructured dpg system @xcite  this is equivalent to the schur complement / static condensation we will discuss in section [ sec : gmgdetails ]  and prove that given an effective preconditioner of the original dpg system , an effective preconditioner for the schur complement system can be derived .",
    "this construction involves three ingredients : a trace operator which extracts boundary traces of functions on the mesh skeleton , a secondary space whose image under the trace operator yields the dpg trace space , and a self - adjoint preconditioner for the secondary space .",
    "since the dual of the trace operator maps traces to the secondary space , a preconditioner for the schur complement system can be applied to trace unknowns by extending them to the secondary space ( using the dual of the trace operator ) , applying the preconditioner on the secondary space , and applying the trace operator to map the results back to the trace space .",
    "the present work differs from the aforementioned literature in that a multi - level preconditioning is directly applied to the schur complement system for the trace unknowns .",
    "the smoother is an overlapping additive schwarz domain decomposition method , for which mesh and order independence has been shown for the poisson equation under a fixed subdomain overlap width @xcite .",
    "fischer and lottes use a multigrid preconditioner with schwarz smoothing for a fractional - step navier - stokes solver , in which the two steps involve poisson solves @xcite .",
    "our approach follows theirs in several respects , though notably we omit a weighting matrix that they introduce ( the one they refer to as @xmath2 ) , as we found it to be detrimental in the context of our solvers .",
    "we note that the preconditioning strategy presented here is _ black - box _ , in the sense that it can be applied to any dpg system matrix .",
    "however , we observe that the performance of this preconditioner worsens for singularly perturbed differential equations , which often require more specialized techniques . examples of singularly perturbed differential equations include the frequency - domain helmholtz equation or convection - diffusion equation with small viscosity .",
    "the preconditioning of helmholtz equations is addressed by gopalakrishnan and schoberl @xcite , who observe wavenumber and @xmath3-independence on a fixed grid for a one - level multiplicative schwarz preconditioner involving forward - backward gauss - seidel sweeps .",
    "similar wavenumber independence is observed by li and xu @xcite for a one - level additive preconditioner .",
    "the preconditioning of dpg for convection - diffusion problems is an open problem , and will likely involve streamline - aware techniques @xcite , though these may be simplified by the self - adjoint nature of the dpg least squares discretization .",
    "in this section , we first provide a brief review of the dpg formulation for the poisson problem .",
    "we then turn to defining the dpg method for an abstract variational formulation , and defining the _ graph norm _ on the test space in the abstract setting .",
    "finally , we state the formulations for poisson , stokes , and navier - stokes that we employ in the numerical experiments that follow . here , we aim simply to specify the operational approach ; for full details of the functional settings , we refer the reader to previous treatments of the poisson @xcite and stokes formulations that we employ here @xcite .",
    "consider the problem @xmath4 first , we rewrite as a first - order system by introducing @xmath5 , giving us : @xmath6 suppose some finite element mesh @xmath7 is given .",
    "we then multiply the strong equations by test functions @xmath8 and @xmath9 and integrate by parts element - wise to get : @xmath10 to satisfy regularity requirements such that we may place @xmath11 , we introduce new unknowns @xmath12 on the mesh skeleton @xmath13 . summing the equations",
    ", we have @xmath14 @xmath15 is then referred to as the _ ultraweak variational formulation _ :",
    "all differential operators have been moved to the test space through integration by parts , and new unknowns ( known as _ trace variables _ ) have been introduced on the mesh skeleton , resulting in an energy setting wherein the variables defined on the volume  the _ field variables_lie in @xmath0 spaces .",
    "suppose now that we have some variational problem @xmath16 where @xmath17 for @xmath18 ( infinite - dimensional ) hilbert spaces .",
    "suppose further that some discretization @xmath19 of the trial space is given on a finite element mesh @xmath7 .",
    "the space @xmath20 is `` broken '' in the sense that test functions @xmath8 are only required to be conforming element - wise ; they are allowed to be discontinuous across elements in @xmath7 .",
    "let @xmath21 be the inner product on the test space .",
    "the _ ideal dpg method _ consists of solving , for every basis function @xmath22 , the problem @xmath23 and using the solutions @xmath24 as the discrete test space for the problem .",
    "the test functions @xmath24 are exactly the riesz representations of the bilinear form @xmath25 , interpreted as a functional on the test space . at this point , @xmath20 is still infinite - dimensional , and therefore solving for @xmath24 is impractical . if we introduce a discrete space @xmath26 , then the problem @xmath27 may be solved discretely and element - wise . using @xmath28 as the discrete test space for the problem",
    ", we arrive at the _ practical dpg method _ @xcite . for this to work well , the `` practical '' test functions @xmath29 should approximate the `` ideal '' @xmath24 . to achieve this in practice",
    ", we enrich the polynomial order of the trial space by some @xmath30 , and use this as the polynomial order for the discrete test space @xmath31see section [ sec : polynomialorder ] for a precise definition of @xmath30 .",
    "the appropriate choice for @xmath30 is problem - dependent ; following previous work on poisson and linear elasticity @xcite , a reasonable starting point is the spatial dimension @xmath32 .",
    "however , as we will see in our navier - stokes experiments , this may have consequences for the behavior of the preconditioners that are the subject of the present work .",
    "in the above , we have left unspecified what the inner product on the test space should be .",
    "dpg minimizes the residual in the energy norm @xmath33 the norm on @xmath20 thus determines the norm in which the residual is minimized . if we want to minimize the error in the @xmath0 norm of the field variables , the _ graph norm _ on the test space @xmath20 is a good choice for many problems .",
    "suppose the original first - order system is of the form @xmath34 .",
    "after we multiply by test variable @xmath8 , integrate by parts , and introduce trace variables , the weak system takes the form @xmath35 where @xmath36 is the adjoint of @xmath37 .",
    "the graph norm of @xmath8 is then defined by @xmath38 where @xmath39 is a scaling parameter . in all our numerical experiments",
    ", we use the graph norm on the test space with @xmath40 . for full details , including a proof that using the graph norm on the test space suffices to guarantee optimal @xmath0 convergence rates for a wide class of problems , see roberts et al .",
    "@xcite .      throughout this paper",
    ", the polynomial order @xmath41 of a mesh refers to the order of the field variables . in the poisson formulation",
    "above , we define two trace variables , @xmath42the trace of an @xmath43 variable  and @xmath44the normal trace of an @xmath45 variable .",
    "when field variables take polynomial order @xmath41 , the @xmath45 traces will then also have order @xmath41 , while the @xmath43 trace variables will have order @xmath46 .",
    "we select the polynomial orders in this way so that all variables will converge in @xmath0 at the same rate  for full details , see ( * ? ? ?",
    "* section 3.1 ) .",
    "a lowest - order mesh will have constant field variables .",
    "the test space enrichment @xmath30 is taken relative to the @xmath43 order , so that an @xmath43 test variable will have order @xmath47 .      here",
    ", we specify the variational formulations we use in our experiments .    [ [ poisson ] ] poisson + + + + + + +    our variational formulation for poisson is as specified above : @xmath14    [ [ stokes ] ] stokes",
    "+ + + + + +    for stokes , we use the velocity - gradient - pressure formulation specified in @xcite : @xmath48 where we define group variables @xmath49 and @xmath50 , and @xmath51 is the ( constant ) viscosity , @xmath52 is the velocity , @xmath3 is the pressure , @xmath53 is the gradient of the @xmath51-weighted velocity , @xmath54 is the velocity trace , and @xmath55 is a pseudo - traction , the trace of @xmath56 .",
    "[ [ navier - stokes ] ] navier - stokes + + + + + + + + + + + + +    for navier - stokes , we also use a velocity - gradient pressure formulation , based on the stokes formulation ( for reynolds number @xmath57 , we take viscosity @xmath58 ) and used in @xcite . the nonlinear formulation is given by @xmath59 linearizing about @xmath60 , we have : @xmath61 we solve the original nonlinear problem by a standard newton iteration ; given an initial guess @xmath62 , we iterate by solving the linearized problem for increment @xmath63 and setting @xmath64 , continuing until some stopping criterion on @xmath63 is met .",
    "because dpg always results in a symmetric ( hermitian ) positive definite system matrix , we may use the conjugate gradient method to solve the global system iteratively . to do so efficiently ,",
    "however , requires a good preconditioner . in camellia",
    ", we aim to provide implementations that are applicable across a wide range of pde problems  essentially , we want to provide good defaults that the user may override when he or she has special requirements .    because of their broad applicability ( especially for the class of least squares finite element methods to which dpg belongs ) , and because our adapted meshes include a natural hierarchy of geometric refinements , we use geometric multigrid preconditioners for conjugate gradient solves .",
    "our numerical experiments suggest that this approach works well in the context of many problems ; we have used this approach with poisson , stokes , linear elasticity , and both compressible and incompressible navier - stokes .",
    "specification of a multigrid operator involves the following choices :    * a prolongation operator @xmath65 to transfer data from the coarse mesh to the fine , * a restriction operator @xmath66 to transfer data from the fine mesh to the coarse , * a smoother @xmath67 to operate locally on the fine mesh , and * a multigrid strategy that specifies the way that the various operators work together .    for the remainder of this work , we take @xmath68 . if the fine - grid system matrix is @xmath69 , then the coarse - grid system matrix is @xmath70 .",
    "the multigrid strategy specifies both the way that the hierarchy is traversed in the course of one multigrid iteration and the way that at each level the result of the coarse solve is combined with the result of the smoother .",
    "hierarchy traversal choices include v - cycle , w - cycle , and full multigrid ; the standard combination choices are multiplicative and additive .",
    "additive combinations ( also known as two - level ) apply both smoother and coarse operator to the same residual , while multiplicative combinations apply them in sequence , recomputing the residual in between .",
    "additive combinations have the advantage of avoiding recomputation of the residual , typically with the tradeoff that more iterations are required to achieve a specified tolerance .",
    "our preferred multigrid strategy is the multiplicative v - cycle , decreases or the polynomial order @xmath41 increases , the iteration counts required to achieve a specified residual tolerance grow without bound . ]",
    "which for iteration @xmath71 with current solution @xmath72 proceeds as follows :",
    "1 .   compute the residual : @xmath73 .",
    "2 .   apply the smoother : @xmath74 .",
    "3 .   recompute the residual : @xmath75 .",
    "apply the coarse operator : @xmath76 .",
    "5 .   recompute the residual : @xmath77 .",
    "apply the smoother : @xmath78 .    at the coarsest level",
    ", @xmath79 is a direct solve ; at intermediate levels , @xmath80 will be the application of steps 1 - 6 with the operators corresponding to the next - coarsest grid .",
    "it remains to specify the prolongation operator @xmath65 , the smoother @xmath67 , and the smoother weight @xmath81 .",
    "we describe our choices for each of these in turn .",
    "a natural , minimal requirement for the prolongation operator @xmath65 is that a solution which is exact on the coarse mesh should , when prolongated to the fine mesh , remain an exact solution . in the usual finite element case with nested discrete spaces ,",
    "this is straightforward for both @xmath82 and @xmath3 refinements : each variable in the fine mesh is also defined on the coarse , and every coarse basis function may be represented exactly in terms of fine basis functions .",
    "the prolongation operator is then the one that takes a coarse basis function to its representation in terms of fine basis functions .    in the case of dpg for @xmath3 refinements ,",
    "the same facts hold .",
    "however , for @xmath82 refinements , we have an additional complication : the introduction of new faces implies the introduction of new trace variables on the fine mesh , which have no predecessor on the coarse mesh .",
    "simply using the prolongation operator as defined in the usual case would violate our exact solution requirement : the new trace variables on the fine mesh would be initialized to zero , resulting in a nonzero residual .",
    "now , each trace variable , as the term implies , is a trace of some combination of field variables .",
    "regularity , of which we may not take a trace .",
    "we do not yet have theoretical justification for this formal violation of regularity requirements , though we would note that in the discrete setting all the basis functions are polynomials , so that the trace operator is well - defined . ]    for each interior face in an @xmath82-refinement , we may therefore define an operator @xmath83 that maps the field variables @xmath84 to the traces @xmath85 . wherever new variables are defined on the interior of a coarse - grid element",
    ", we use @xmath86 to prolongate from the field bases on the interior of the coarse - grid element to the trace variables on the newly - defined interfaces of the fine grid . to prolongate field degrees of freedom to the trace degrees of freedom that lie strictly in the interior of the coarse element  when an @xmath43 trace lies on the interface between an interior face and the exterior of the coarse element , for example , the coarse element s trace degrees of freedom suffice for prolongation . ]",
    "this allows us to satisfy our exact solution requirement .",
    "we have found it beneficial to employ _ static condensation _ , which reduces the size of the global system by locally eliminating the interior degrees of freedom on each element ( for ultra - weak dpg , these are precisely the field degrees of freedom ) .",
    "suppose that our discrete dpg system is of the form @xmath87 .",
    "the matrix can be reordered to take the form @xmath88 where @xmath89 is block diagonal , @xmath90 represents the degrees of freedom corresponding to field variables , and @xmath91 represents those corresponding to the trace variables . noting that @xmath92",
    ", we can substitute this into the equation @xmath93 to obtain the schur complement system for the trace degrees of freedom : @xmath94 since @xmath89 is block - diagonal , its inversion can be carried out element - wise and in parallel ; usually , @xmath95 is a significantly smaller matrix and the computational cost of the global solve is reduced .",
    "the principal benefit of static condensation is that the operators @xmath65 and @xmath67 become less expensive to store and to apply .",
    "the computational cost to determine @xmath65 in the context of @xmath82-refinements does increase , however , because before we may apply the coarse field to fine trace operator @xmath86 we must first compute and apply the coarse trace to coarse field operator , which is given by the static condensation formula @xmath96 .",
    "( note that in an iterative context , @xmath97 may be neglected . )      for both @xmath82 and @xmath3-multigrid , we employ an overlapping additive schwarz preconditioner . in the context of our two - grid experiments",
    ", we have found that for many problems a minimal - overlap operator scales for @xmath3-multigrid , while for @xmath82-multigrid a 1-overlap schwarz operator is required . by minimal overlap , we mean that each schwarz block corresponds to the degrees of freedom seen by an element , including those shared with its neighbors ( the overlap region is therefore the element boundary ) . by 1-overlap , we mean that each schwarz block corresponds to the degrees of freedom seen by an element and its face neighbors .",
    "we have found it important to weight our schwarz - preconditioned matrix , @xmath98 , with a weight @xmath81 such that the maximum eigenvalue of @xmath99 is at most 1 .",
    "( if we do not do this , our preconditioner is no longer guaranteed to be positive definite . ) below , we describe first a conservative choice for @xmath81one for which we can prove the bound in general  and a more aggressive choice that we have found to work well in practice .",
    "smith et al .",
    "@xcite have shown that the largest eigenvalue of @xmath100 is bounded above by @xmath101 , where @xmath102 is the number of colors required to color the schwarz domains such that no two adjacent domains have like color .",
    "if we consider the adjacency graph @xmath103 for the schwarz domains , it is clear that if we count the number @xmath104 of schwarz blocks in which degree of freedom @xmath105 participates , then @xmath106 , where @xmath107 is the maximum degree in the graph .",
    "supposing that @xmath103 is neither complete nor an odd cycle  which is almost always true in practice  then @xmath108 ( this is brooks s theorem @xcite ) .",
    "we then may take @xmath109 to bound the eigenvalue of @xmath99 as desired .",
    "it is worth noting that the bound on the eigenvalue may be loose , and the above @xmath81 may therefore be suboptimal . in the present work , we employ a more aggressive choice for @xmath81 that is computed as follows . for each schwarz domain , count the _ face neighbors _ of cells in that domain ( including the cells that belong to the domain ) .",
    "call the maximum such count @xmath110 ; we then take @xmath81 to be @xmath111 . for reference ,",
    "values of @xmath81 on uniform grids are provided in [ sec : schwarzweights ] .",
    "given a particular fine mesh with polynomial order @xmath112 , how do we determine an appropriate mesh hierarchy ?    as noted above , in our two - grid experiments , we have found that for many problems minimal - overlap additive schwarz scales for @xmath3-multigrid but not for @xmath82-multigrid ( for @xmath82-multigrid typically 1-overlap additive schwarz is required ) . because 1-overlap additive schwarz can be fairly expensive for higher - order meshes ,",
    "we therefore prefer a mesh hierarchy that performs @xmath3-coarsening first , followed by @xmath82-coarsenings .",
    "this allows us to limit our application of 1-overlap operators to lower - order meshes .    here ,",
    "we describe camellia s default approach for generating a mesh hierarchy from a provided fine mesh ",
    "we produce a stack of meshes , from coarse to fine .",
    "we usually take the polynomial order on the coarsest mesh , @xmath113 , to be @xmath114 or @xmath115 .",
    "we also define a boolean parameter , ` skipintermediatep ` , which governs whether more than one @xmath3-coarsening in performed .",
    "( we recommend choosing ` skipintermediatep = true ` ; while iteration counts are generally a bit higher , the computational cost of determining , storing , and applying the operator is reduced . )    1 .",
    "let the coarsest mesh be the set of original , unrefined cells ( the `` root '' mesh geometry ) , with polynomial order @xmath116 . add it to the stack .",
    "2 .   while there are elements in the last mesh on the stack coarser in @xmath82 than the fine mesh : 1 .   duplicate the last mesh .",
    "2 .   @xmath82-refine ( once ) any elements that are coarser in @xmath82 than the fine mesh .",
    "3 .   add the resulting mesh to the stack .",
    "if ` skipintermediatep ` is ` true ` : add the fine mesh to the stack .",
    "4 .   if ` skipintermediatep ` is ` false ` : while there are elements in the last mesh on the stack coarser in @xmath3 than the fine mesh : 1 .   duplicate the last mesh .",
    "2 .   for any element for which @xmath117 , @xmath3-refine to @xmath118 .",
    "3 .   add the resulting mesh to the stack .",
    "an example mesh hierarchy can be found in the context of our cavity flow experiments , in figure [ fig : cavityflowhierarchy ] .      as is standard practice , in all our experiments we employ a stopping criterion based on the @xmath119-norm of the discrete residual vector @xmath120 , scaled by the @xmath119-norm of the discrete right - hand side , @xmath121 .",
    "however , it is worth noting that this choice may not be optimal in terms of minimizing the error in the discrete energy norm ; arioli has proposed an alternative stopping criterion @xcite , which we are considering adopting in future work .",
    "[ sec : numericalexperiments ] we present a series of numerical experiments with the multigrid - preconditioned conjugate gradient solver described above and implemented in camellia . for each of poisson , stokes , and navier - stokes ,",
    "we consider smooth non - polynomial solutions . to gain some insight into the behavior of the individual operators , we begin by using exactly two grids .",
    "we then turn to multigrid experiments , first with uniform refinements , then with adaptive refinements . all experiments are carried out using hypercube meshes  quadrilateral meshes in two dimensions , and hexahedral meshes in three dimensions . for both trial and test space basis functions , we use the conforming nodal bases provided by the intrepid package @xcite , with nodes defined at the lobatto points .      in almost all the experiments that follow ,",
    "we use problems with non - polynomial smooth solutions .",
    "the one exception is in the adaptive refinements , where we use a lid - driven cavity flow problem .",
    "the problems we use are described below .          for the analytic stokes solution , in three dimensions we employ the manufactured solution @xmath127 on domain @xmath128 , taking @xmath129 .",
    "this solution is an extension of the two - dimensional manufactured solution employed by cockburn et al .",
    "@xcite , which we have also previously used @xcite ; the two - dimensional version can be arrived at by dropping the terms involving the @xmath130 coordinate . for our two - dimensional experiments , this is the solution we use . for the pressure , in lieu of a zero - mean constraint ,",
    "we impose the discrete condition that @xmath131 at the origin ( which is also the center of the domain ) .",
    "+      for the analytic navier - stokes solution , we use the classical two - dimensional solution due to kovasznay @xcite : @xmath132 where @xmath133 .",
    "we use @xmath134 as our domain , and choose the constant @xmath135 to agree with the discrete constraint on the pressure ( here , that it is zero at ( 0.5,1 ) ) . as is common when studying kovasznay flow , we use @xmath136 .",
    "+      for the experiments involving adaptivity , we use the stokes and navier - stokes lid - driven cavity flow problem in two dimensions .",
    "details of the problem setup can be found in section [ sec : adaptivecavityflow ] .      to investigate the behavior at each level of multigrid , we begin by examining the simplest case of two - level multigrid for @xmath82 and @xmath3 . for the @xmath82 case ,",
    "we coarsen the fine grid once to produce a coarse grid . for the @xmath3 case",
    ", we use a field polynomial order @xmath137 .",
    "we use the smooth non - polynomial solutions described above for poisson , stokes , and navier - stokes .",
    "we perform conjugate gradient iterations until we reach a tolerance of @xmath138 , as measured in the discrete @xmath119 norm , relative to the discrete problem s right hand side .",
    "the results for poisson in one , two , and three space dimensions can be found in tables [ table : poissonptwogridresults ] and [ table : poissonhtwogridresults ] . in every case ,",
    "the @xmath3-multigrid and @xmath82-multigrid operators _ scale _ : as @xmath41 increases or @xmath82 decreases , the number of iterations required do not go up .     & @xmath41 & mesh width & iterations & + & 0,1,2,4,8,16 & 2,4,8,16,32,64 & 1 & +   + @xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations + 1 & 2 & 4 & 2 & 2 & 4 & 4 & 2 & 6 + & 4 & 11 & & 4 & 10 & & 4 & 13 + & 8 & 17 & & 8 & 13 & & 8 & 14 + & 16 & 18 & & 16 & 13 & & 16 & 13 + & 32 & 18 & & 32 & 12 & & 32 & 13 + & 64 & 16 & & 64 & 12 & & 64 & 12 +   + @xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations & + 1 & 2 & 8 & 2 & 2 & 9 & + & 4 & 21 & & 4 & 17 & + & 8 & 24 & & 8 & 18 & + & 16 & 24 & & 16 & 17 & + & 32 & 23 & & 32 & 16 & +     @xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations & + 1 & 2 & 2 & 2,4,8,16 & 2 & 1 & + & 4 & 3 & & 4 & 3 & + & 8 & 5 & & 8 & 5 & + & 16 & 6 & & 16 & 5 & + & 32 & 7 & & 32 & 7 & + & 64 & 7 & & 64 & 6 & +   + @xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations + 1 & 2 & 5 & 2 & 2 & 5 & 4 & 2 & 5 + & 4 & 12 & & 4 & 13 & & 4 & 14 + & 8 & 16 & & 8 & 15 & & 8 & 15 + & 16 & 16 & & 16 & 14 & & 16 & 15 + & 32 & 16 & & 32 & 14 & & 32 & 14 + & 64 & 16 & & 64 & 13 & & 64 & 14 +   + @xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations & + 1 & 2 & 7 & 2 & 2 & 8 & + & 4 & 18 & & 4 & 18 & + & 8 & 20 & & 8 & 19 & + & 16 & 21 & & 16 & 19 & + & 32 & 21 & & 32 & 17 & +    the two - grid results for stokes in two and three space dimensions can be found in tables [ table : stokesptwogridresults ] and [ table : stokeshtwogridresults ] .",
    "as with poisson , all the @xmath3-multigrid and @xmath82-multigrid operators scale , and the number of iterations required is relatively modest .",
    "@xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations + 1 & 2 & 16 & 2 & 2 & 12 & 4 & 2 & 14 + & 4 & 23 & & 4 & 16 & & 4 & 18 + & 8 & 24 & & 8 & 17 & & 8 & 19 + & 16 & 24 & & 16 & 16 & & 16 & 19 + & 32 & 24 & & 32 & 16 & & 32 & 19 + & 64 & 24 & & 64 & 16 & & 64 & 19 +   + @xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations & + 1 & 2 & 34 & 2 & 2 & 23 & + & 4 & 47 & & 4 & 29 & + & 8 & 46 & & 8 & 29 & + & 16 & 44 & & 16 & 23 & + & 32 & 42 & & 32 & 22 & +     @xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations + 1 & 4 & 16 & 2 & 4 & 15 & 4 & 4 & 15 + & 8 & 18 & & 8 & 17 & & 8 & 17 + & 16 & 20 & & 16 & 17 & & 16 & 16 + & 32 & 20 & & 32 & 16 & & 32 & 16 + & 64 & 21 & & 64 & 16 & & 64 & 16 +   + @xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations & + 1 & 4 & 27 & 2 & 4 & 23 & + & 8 & 31 & & 8 & 24 & + & 16 & 31 & & 16 & 20 & + & 32 & 30 & & +    navier - stokes is of particular interest because it involves spatially varying material data .",
    "after the first newton step in navier - stokes , the background flow will be non - zero , and therefore the material data will vary in space . to focus on this case ,",
    "we start with a linear mesh and take three newton steps ; we use this as the background flow for the solve on our fine mesh ",
    "this is the solve for which we report iteration counts .    as is our default throughout this paper , in the first set of experiments we use a test space enrichment @xmath139 , where @xmath140 is the spatial dimension .",
    "the results for @xmath3 and @xmath82 operators can be found in tables [ table : navierstokesptwogridresultsdeltak2 ] and [ table : navierstokeshtwogridresultsdeltak2 ] .",
    "here , the multigrid preconditioner appears to be robust in @xmath82 , but not in @xmath3 ( though in the @xmath3 case the iteration counts do not grow by too much ) ; the @xmath141 results have higher iteration counts than do the @xmath142 results , for example .",
    "@xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations + 1 & 2 & 18 & 2 & 2 & 18 & 4 & 2 & 21 + & 4 & 32 & & 4 & 26 & & 4 & 32 + & 8 & 37 & & 8 & 29 & & 8 & 35 + & 16 & 36 & & 16 & 29 & & 16 & 38 + & 32 & 33 & & 32 & 29 & & 32 & 39 + & 64 & 30 & & 64 & 28 & & 64 & 40 +     @xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations + 1 & 4 & 19 & 2 & 4 & 20 & 4 & 4 & 21 + & 8 & 24 & & 8 & 24 & & 8 & 21 + & 16 & 23 & & 16 & 22 & & 16 & 21 + & 32 & 23 & & 32 & 22 & & 32 & 20 + & 64 & 24 & & 64 & 24 & & 64 & 23 +    if we repeat our experiment , now with @xmath143 , we get essentially the same results for the @xmath82 preconditioners , but markedly better results for the @xmath3 preconditioners , as can be seen in tables [ table : navierstokesptwogridresultsdeltak4 ] and [ table : navierstokeshtwogridresultsdeltak4 ] . here , for both sets of preconditioners , we see results that closely resemble what we saw for stokes and poisson : the higher - order meshes have generally lower iteration counts , and the finer meshes at a given polynomial order have a roughly fixed iteration count .    it is straightforward to show that dpg is equivalent to a non - standard mixed formulation involving the test space @xcite .",
    "dahmen et al",
    ".  showed that the convergence of the uzawa iteration for this mixed formulation depends on the approximation of the test space @xcite .",
    "this suggests that increasing the degree of enrichment @xmath30 for the dpg test functions improves the effectiveness of the preconditioner ; this was observed independently by gopalakrishnan in the preconditioning of dpg for maxwell s equations .",
    "@xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations + 1 & 2 & 17 & 2 & 2 & 16 & 4 & 2 & 17 + & 4 & 28 & & 4 & 20 & & 4 & 20 + & 8 & 33 & & 8 & 20 & & 8 & 21 + & 16 & 31 & & 16 & 19 & & 16 & 21 + & 32 & 32 & & 32 & 20 & & 32 & 21 + & 64 & 28 & & 64 & 19 & & 64 & 21 +     @xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations & @xmath41 & mesh width & iterations + 1 & 4 & 18 & 2 & 4 & 18 & 4 & 4 & 18 + & 8 & 22 & & 8 & 19 & & 8 & 20 + & 16 & 22 & & 16 & 19 & & 16 & 19 + & 32 & 23 & & 32 & 20 & & 32 & 19 + & 64 & 24 & & 64 & 22 & & 64 & 19 +        for the uniform refinement cases , we use the same problems as described in section [ sec : problemdefinitions ] for stokes and navier - stokes , and construct mesh hierarchies as described in section [ sec : meshhierarchy ] .",
    "we are particularly interested in the effect of the number of grids in the hierarchy on the iteration count .",
    "results for stokes with the full @xmath3-hierarchy ( i.e. , with parameter ` skipintermediatep ` is taken to be false ) can be found in table [ table : stokesmultigridresults ] ; the iteration counts do grow as the number of grids increases , with more rapid growth as the number of @xmath82 levels increases , but the total iteration counts remain modest .",
    "results with ` skipintermediatep = true ` are shown in table [ table : stokesmultigridresultsskipintermediate ] . in most cases ,",
    "the iteration counts are slightly higher with this option .",
    "however , this is the computationally cheaper case : fewer smoother and prolongation operators need to be computed and stored ; this is the approach we advocate in practice .",
    "as suggested by our results above , we run navier - stokes both for @xmath144 and for @xmath145 .",
    "we again begin by taking ` skipintermediatep ` to be false .",
    "the results for @xmath144 can be found in tables [ table : navierstokesmultigridresultsdeltak2 ] ; here , the iteration counts grow more rapidly in the number of multigrid levels than they do for stokes .",
    "table [ table : navierstokesmultigridresultsdeltakfine ] shows the results for @xmath145 ; here , the higher - order results are roughly in line with those for stokes .    repeating the navier - stokes experiments with ` skipintermediatep = true ` , we find that iteration counts are again somewhat higher than for the alternative  the results are shown in tables [ table : navierstokesmultigridresultsdeltak2skipintermediate ] and [ table : navierstokesmultigridresultsdeltakfineskipintermediate ] . again we see a significant reduction in iteration count by taking @xmath145 .",
    ".stokes solves for multigrid ( 2d ) .",
    "we see some growth in iteration counts as the number of @xmath82 and @xmath41 levels increases ; the growth is more pronounced for the @xmath82-level increases . [",
    "cols=\"^,^,^,^,^,^,^ \" , ]          andrew  t barker , susanne  c brenner , eun - hee park , and li - yeng sung . a one - level additive schwarz preconditioner for a discontinuous petrov - galerkin method . in",
    "domain decomposition methods in science and engineering xxi _ ,",
    "pages 417425 .",
    "springer , 2014 .",
    "jesse chan , leszek demkowicz , and robert moser .",
    "a dpg method for steady viscous compressible flow .",
    ", 98:69  90 , 2014 .",
    "12th usnccm mini - symposium of high - order methods for computational fluid dynamics - a special issue dedicated to the 80th birthday of professor antony jameson .",
    "jay gopalakrishnan and joachim schberl .",
    "degree and wavenumber [ in ] dependence of schwarz preconditioner for the dpg method . in _",
    "spectral and high order methods for partial differential equations icosahom 2014 _ , pages 257265 .",
    "springer , 2015 .",
    "michael  a. heroux , roscoe  a. bartlett , vicki  e. howle , robert  j. hoekstra , jonathan  j. hu , tamara  g. kolda , richard  b. lehoucq , kevin  r. long , roger  p. pawlowski , eric  t. phipps , andrew  g. salinger , heidi  k. thornquist , ray  s. tuminaro , james  m. willenbring , alan williams , and kendall  s. stanley . .",
    ", 31(3):397423 , 2005 ."
  ],
  "abstract_text": [
    "<S> the discontinuous petrov - galerkin ( dpg ) methodology of demkowicz and gopalakrishnan @xcite guarantees the optimality of the solution in an energy norm , and provides several features facilitating adaptive schemes . </S>",
    "<S> a key question that has not yet been answered in general  though there are some results for poisson , e.g.is how best to precondition the dpg system matrix , so that iterative solvers may be used to allow solution of large - scale problems .    in this paper , </S>",
    "<S> we detail a strategy for preconditioning the dpg system matrix using geometric multigrid which we have implemented as part of camellia @xcite , and demonstrate through numerical experiments its effectiveness in the context of several variational formulations . </S>",
    "<S> we observe that in some of our experiments , the behavior of the preconditioner is closely tied to the discrete test space enrichment .    </S>",
    "<S> we include experiments involving adaptive meshes with hanging nodes for lid - driven cavity flow , demonstrating that the preconditioners can be applied in the context of challenging problems . </S>",
    "<S> we also include a scalability study demonstrating that the approach  and our implementation  scales well to many mpi ranks .    </S>",
    "<S> = 4pt    * key words : * discontinuous petrov galerkin , adaptive finite elements , iterative solvers , geometric multigrid    * ams subject classification : *    [ [ acknowledgments ] ] acknowledgments + + + + + + + + + + + + + + +    this work was supported by the office of science , u.s . department of energy , under contract de - ac02 - 06ch11357 . </S>",
    "<S> this research used resources of the argonne leadership computing facility , which is a doe office of science user facility supported under contract de - ac02 - 06ch11357 . </S>"
  ]
}
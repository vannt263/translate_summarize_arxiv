{
  "article_text": [
    "more than @xmath4 of the human genome consists of repeated sequences  @xcite",
    ". two important types of common repeats are i ) interspersed repeats and ii ) tandem repeats .",
    "interspersed repeats are caused by transposons .",
    "a transposon ( jumping gene ) is a segment of dna that can copy or cut and paste itself into new positions of the genome .",
    "tandem repeats are caused by slipped - strand mispairings  @xcite .",
    "slipped - strand mispairings occur when one dna strand in the duplex becomes misaligned with the other .",
    "tandem repeats are common in both prokaryote and eukaryote genomes .",
    "they are present in both coding and non - coding regions and are believed to be the cause of several genetic disorders .",
    "the effects of tandem repeats on several biological processes is understood by these disorders .",
    "they can result in generation of toxic or malfunctioning proteins , chromosome fragility , expansion diseases , silencing of genes , modulation of transcription and translation  @xcite and rapid morphological changes  @xcite .",
    "a process that leads to tandem repeats , e.g.  through slipped - strand mispairing , is called _ tandem duplication _ , which allows substrings to be duplicated next to their original position .",
    "for example , from the sequence @xmath5 , a tandem duplication of length @xmath3 can give @xmath6 , which , if followed by a duplication of length @xmath7 may give @xmath8 .",
    "the prevalence of tandem repeats and the fact that much of our unique dna likely originated as repeated sequences  @xcite motivates us to study the capacity and expressiveness of string systems with tandem duplication , as defined below .",
    "the model of a _ string duplication system _ consists of a _ seed _ ,",
    "i.e.  a starting string of finite length , a set of duplication rules that allow generating new strings from existing ones , and the set of all sequences that can be obtained by applying the duplication rules to the seed a finite number of times .",
    "the notion of _ capacity _ , introduced in  @xcite and defined more formally in the sequel , represents the average number of @xmath9-ary symbols per sequence symbol that are asymptotically required to encode a sequence in the string system , where @xmath9 is the _ alphabet _ size ( for dna sequences the alphabet size is 4 ) .",
    "the maximum value for capacity is 1 .",
    "a duplication system is _ fully expressive _ if all strings with the alphabet appear as a substring of some string in the system . as we will show , if a system is not fully expressive , then its capacity is strictly less than  1 .",
    "before presenting the notation , definitions , and the results more formally , in the rest of this section , we present two simple examples to illustrate the notions of expressiveness and capacity for tandem duplication string systems .",
    "furthermore , we also outline some useful tools as well as some of the results of the paper .",
    "[ exm:1 ] consider a string system on the binary alphabet @xmath10 with @xmath11 as the seed that allows tandem duplications of length up to 2 .",
    "it is easy to check that the set of strings generated by this system start with @xmath12 and end with @xmath13 .",
    "in fact , it can be proved that all binary strings of length @xmath14 which start with @xmath12 and end with @xmath13 can be generated by this system .",
    "the proof is based on the fact that every such string can be written as @xmath15 , where each @xmath16 and @xmath17 is even . a natural way to generate",
    "this string is to duplicate @xmath11 @xmath18 times and then duplicate the 0s and 1s as needed via duplications of length 1 .    _",
    "expressiveness : _ from the preceding paragraph , every binary sequence @xmath19 can be generated as a substring in this system as @xmath20 .",
    "for example , although @xmath21 can not be generated by this system , it can be generated as a substring of @xmath22 in the following way : @xmath23 hence this system is fully expressive .",
    "_ capacity : _ the number of length-@xmath14 strings in this system is @xmath24 .",
    "thus , encoding sequences of length @xmath14 in this system requires @xmath25 bits .",
    "the capacity , or equivalently the average number of bits ( since the alphabet @xmath26 is of size 2 ) per symbol , is thus equal to  1 .",
    "this is not surprising as the system generates almost all binary sequences .",
    "9999    observing these facts for an alphabet of size @xmath3 , one can ask related questions on expressiveness and capacity for higher alphabet sizes and duplication lengths .",
    "however , counting the number of length-@xmath14 sequences for capacity calculation and characterizing fully expressive systems for larger alphabets are often not straightforward tasks . in this paper , we study these questions and develop methods to answer them .",
    "a useful tool in this study is the theory of finite automata . as a simple example note that the string system over binary alphabet in the preceding example can be represented by the finite automaton given in figure [ fig000 ] .",
    "the regular expression for the language defined by the finite automaton is @xmath27 which represents all binary strings that start with @xmath12 and end with @xmath13 . here , for a sequence @xmath19",
    ", @xmath28 denotes one or more concatenated copies of @xmath19 .    , where @xmath29 , including the system of example [ exm:1 ] .",
    "notation used here is described in detail in section [ sec : prelim ] .",
    ", width=134 ]    [ fig000 ]    one can use the perron - frobenius theory  @xcite to count the number of sequences which can be generated by a finite automaton .",
    "this enables us to use finite automata as a tool to calculate capacity for some string duplication systems with tandem repeats over larger alphabet .    in our results , we find that the exact capacity of the tandem duplication string system over ternary alphabet with seed @xmath30 and duplication length at most @xmath7 equals @xmath31 .",
    "moreover , we generalize this result by characterizing the capacity of tandem duplication string systems over an arbitrary alphabet and a seed with maximum duplication length of 3 .",
    "namely , we show that if the maximum duplication length is 3 and the seed contains @xmath32 as a substring , where @xmath33 , @xmath34 , and @xmath35 are distinct symbols , then the capacity @xmath36 . if such a substring does not exist in the seed , then the capacity is given by @xmath37 , unless the seed is of the form @xmath38 , in which case the capacity is @xmath12 .",
    "some of these results are highlighted in table  [ table : cap ] .",
    "our next example presents a system that , unlike that of example  [ exm:1 ] , is not fully expressive .",
    "consider a tandem duplication string system over the ternary alphabet @xmath39 with seed @xmath30 and maximum duplication length @xmath7 .",
    "this system is not fully expressive as it can not generate 210 , 102 , or 021 , even as a substring .",
    "it is not difficult to see that to generate any of these strings , at least one of the other two must be already present as a substring of the seed .",
    "since 012 does not contain any , by induction , it follows that the system is not fully expressive .",
    "9999    based on the previous example , one may ask what happens if we start with a seed that contains one of the strings 210 , 102 , or 021 , e.g.  if we let the seed be 01210 ?",
    "does the system become fully expressive ? while this system can generate all strings of length 3 as substrings , the answer is still no as shown in theorem [ thm:2 ] : regardless of the seed , a ternary system with maximum duplication length of 3 is not fully expressive .",
    "we show in theorem  [ thm:4 ] , that a maximum duplication length of at least @xmath40 is needed to arrive at a fully expressive ternary system .    while for alphabets of size 2 or 3 , increasing the maximum length on duplications turns a system that is not fully expressive to one that is , for alphabets of size 4 or more , these systems are not fully expressive regardless how large the bound on duplication length is .",
    "the main tool in constructing quaternary strings that do not appear independently or as substrings in these systems is thue s result proving the existence of ternary square - free sequences of any length .",
    "note that unary and binary square - free sequences of arbitrarily large length do not exist .",
    "the existence of such sequences underlies the significant shift in the behavior of tandem duplication systems with regards to expressiveness as a function of alphabet size .",
    "some of our results on expressiveness are summarized in table  [ table : div ] .    as part of this paper",
    ", we also study regular languages for tandem duplication string systems . in @xcite",
    ", it was shown that the tandem duplication string system is not regular if the maximum duplication length is 4 or more when the seed contains @xmath7 consecutive distinct symbols as a substring .",
    "however for maximum duplication length @xmath7 , this question remained open . in this paper , we show in theorem [ thm:5 ] that if the maximum duplication length is 3 , a tandem duplication string system is regular irrespective of the seed and the alphabet size .",
    "moreover , we characterize the exact capacity for all these systems .",
    ".capacity values tandem duplication string systems @xmath41 . here",
    "@xmath42 , and @xmath43 are distinct . [",
    "cols=\"^,^,^,^\",options=\"header \" , ]     [ table : cap2 ]    we first show that @xmath44 by proving @xmath45 .",
    "to do so , we show by induction that @xmath46 .",
    "first note that this holds for @xmath47 , from the proof of theorem  [ thm:1 ] .",
    "assuming that it holds for @xmath48 , to show that this also holds for @xmath49 , where @xmath50 .",
    "we write @xmath51 here we have used the fact that @xmath52 which follows from .",
    "hence , @xmath44 .",
    "we now show that @xmath53 .",
    "note that the seed @xmath19 is in @xmath54 .",
    "it thus suffices to show that if @xmath55 , then @xmath56 , where @xmath57 and @xmath58 .",
    "we have the following five cases :    1 .",
    "@xmath59 , @xmath60 or @xmath61 , for some @xmath62 : since each symbol in the regular expression @xmath63 is followed by a @xmath64 or @xmath65 as a superscript , if @xmath66 represents a run and @xmath67 , then so is @xmath68 .",
    "2 .   @xmath69 for distinct @xmath70 here @xmath66 represents a length-@xmath3 path in the finite automaton for a regular expression of the form @xmath71 , @xmath72 , @xmath73 , @xmath74 , @xmath75 , @xmath76 , @xmath77 , @xmath78 or @xmath79 .",
    "we know from the proof of theorem [ thm:1 ] that @xmath80 is duplicable in @xmath71 , @xmath74 , @xmath75 , @xmath76 , @xmath77 and @xmath78 . for @xmath72 and @xmath73",
    ", we enter a state in the finite automaton for @xmath81 and @xmath77 respectively with incoming edge labeled by @xmath35 . in this state",
    ", we can again duplicate path @xmath80 and return back to the same state .",
    "+ the finite automaton for @xmath79 is followed by the finite automaton for @xmath71 , so @xmath80 can be duplicated in the automaton for @xmath71 .",
    "the duplicate @xmath69 generated here in @xmath71 ends in some state @xmath82 which is a superstate of the state @xmath83 in which the original @xmath66 in @xmath84 ended .",
    "since @xmath82 is a superstate of @xmath83 , @xmath85 can also be generated from @xmath82 .",
    "hence @xmath86 .",
    "@xmath87 or @xmath88 for distinct @xmath89 here @xmath66 represents a length-3 path .",
    "we only consider @xmath90 ; the other case is similar . if @xmath91 , then @xmath92 as well , since every symbol in @xmath93 is followed by a @xmath64 or @xmath65 as a superscript .",
    "now we already know from case 2 above if @xmath94 can be generated then @xmath95 can also be generated . now from case 1 above , we also know if @xmath95 can be generated then @xmath96 can also be generated .",
    "further using case 1 again , we can generate @xmath97 from @xmath96 . hence @xmath98 4 .",
    "@xmath99 for distinct @xmath100 here @xmath66 represents a length-@xmath7 path in the finite automaton for @xmath101 ( @xmath102 represents any permutation of @xmath103 ) , @xmath104 , @xmath105 , @xmath106 , @xmath107 , @xmath108 or @xmath109 .",
    "we know from the proof of theorem [ thm:1 ] that @xmath32 is duplicable in @xmath101 .",
    "the same reasoning holds for @xmath105 and @xmath108 .",
    "+ the finite automaton for @xmath104 , @xmath106 , @xmath107 and @xmath109 is followed by a finite automaton for @xmath74 , so @xmath66 can be duplicated in the finite automaton for @xmath74 .",
    "the duplicate @xmath66 ends in some state @xmath110 which is the superstate of the state @xmath111 in which the original @xmath66 in @xmath84 ended . since , @xmath110 is a superstate of @xmath111 , therefore @xmath85 can also be generated from @xmath110 .",
    "hence @xmath112 . 5 .",
    "@xmath113 for distinct @xmath114 here @xmath66 represents a length-@xmath7 path that can be generated by the finite automaton for @xmath81 , @xmath71 , @xmath115 , @xmath116 or @xmath117 .",
    "we know from the proof of theorem 1 that @xmath118 is duplicable in @xmath119 and @xmath115 . as the state where @xmath66 in @xmath84 ends lies in the finite automata for either @xmath120",
    ", it can be duplicated again the same finite automaton .",
    "the duplicate @xmath66 ends in the superstate of the state in which the original @xmath66 in @xmath84 ended .",
    "hence @xmath86 .",
    "this completes the proof of @xmath121 .",
    "we have proved the statement of theorem [ thm:5 ] assuming all @xmath122 s in the seed @xmath19 to be distinct .",
    "now assume the symbols of @xmath19 are not distinct .",
    "we color the symbols of @xmath19 so that they become distinct and obtain the system @xmath123 . applying the preceding proof for distinct symbols to @xmath124 , we find that @xmath124 is regular .",
    "let @xmath125 be a mapping that removes the colors .",
    "by @xcite , we have that @xmath126 is also regular .",
    "an immediate corollary on the capacity of tandem duplication string system considered in theorem [ thm:5 ] is    [ cor:1 ] if for @xmath127 in theorem  [ thm:5 ] , @xmath19 contains @xmath32 as a substring such that @xmath128 and @xmath129 are distinct , then @xmath130 .",
    "otherwise , except for the seed of the form @xmath38 , @xmath131 . if @xmath132 , @xmath133 .    by the perron - frobenius theory @xcite , @xcite , for a regular language @xmath54",
    ", the capacity is given by the log of the maximum eigenvalue of the adjacency matrix of the strongly connected components .",
    "in the case when @xmath32 occurs as a substring of the seed @xmath19 such that @xmath134 and @xmath135 are distinct , then the adjacency matrix of the finite automaton for @xmath136 ( strongly connected component of the finite automaton for @xmath137 ) has the maximum eigenvalue .",
    "therefore , the @xmath130 ( see proof of theorem  [ thm:1 ] for the adjacency matrix ) .    for the case",
    "when no @xmath7 consecutive symbols in the seed @xmath19 are all distinct and @xmath138 , the maximum capacity component is a finite automaton only over 2 distinct symbols as in figure [ fig000 ] .",
    "hence the capacity is @xmath139 .",
    "when seed @xmath132 , there is at most one sequence of any given length in the system .",
    "hence @xmath140    the following examples illustrate the statement of theorem  [ thm:5 ] and an application of its proof method .",
    "the string system @xmath141 is regular by theorem  [ thm:5 ] and the regular expression is given by @xmath142 by corollary  [ cor:1 ] , the capacity of this system @xmath143 9999    the string system @xmath144 is regular by theorem  [ thm:5 ] , and the regular expression is given by @xmath145 by corollary  [ cor:1 ] , the capacity of this system is given by @xmath146 9999    when @xmath122 s are assumed to be distinct it can be verified from the regular expression @xmath147 in the proof of thereom [ thm:5 ] that the last occurence of @xmath122 is before the first occurence of @xmath148 for any @xmath149 for all @xmath150 .",
    "motivated by this , we state the following lemma regarding the structure of words in tandem duplication systems with bounded duplication lengths    [ lem:1 ] let @xmath151 , where @xmath152 are distinct .",
    "then for any @xmath153 and any @xmath154 , the last occurrence of @xmath122 is before the first occurrence of @xmath155 and the gap between them is at least k-1 ( not counting @xmath122 and @xmath155 ) .",
    "fix the value of @xmath48 .",
    "we prove the lemma by induction .",
    "clearly , the lemma holds for @xmath156 . assuming that it holds for @xmath157",
    ", we show that it also holds for @xmath158 for any @xmath159 .",
    "assume @xmath160 , where @xmath161 and where @xmath122 and @xmath155 in this expression refer to the last occurrence of @xmath122 and the first occurrence of @xmath155 in @xmath162 , respectively . since , by assumption @xmath163 , the tandem duplication @xmath164 can not contain a substring that contains both the last occurrence of @xmath122 and the first occurrence of @xmath155 .",
    "if the tandem duplication @xmath164 duplicates a substring of @xmath165 , then the gap between the last @xmath122 and the first @xmath155 in @xmath166 is larger than that of @xmath162 . in every other case",
    ", the gap stays the same .",
    "so the gap in @xmath166 is at least as large as the gap in @xmath162 , which is @xmath167 .",
    "the following example follows for maximum duplication length @xmath3 using the same idea as in theorem [ thm:5 ]    [ exm:9 ] the string system @xmath168 is regular .",
    "this can be proved using the same method as used in the proof of theorem  [ thm:5 ] .",
    "the regular expression @xmath169 for @xmath170 is given by @xmath171 9999    the finite automaton for a special case of example [ exm:9 ] with @xmath172 is given in figure [ fig0 ] .",
    "[ cor:2 ] the capacity for @xmath173 is given by @xmath139 , except for the case in which seed @xmath132 for @xmath174 .",
    "in that case , the capacity is @xmath12 .    as in proof of corollary  [ cor:1 ] , by the perron - frobenius theory , for a regular language",
    ", the capacity is given by the log of the maximum eigenvalue of the adjacency matrix of the strongly connected components .",
    "except for the case when seed @xmath132 , for all other cases @xmath175 ( @xmath176 ) occurs as a substring of the seed @xmath19 such that @xmath177 .",
    "hence , the maximum capacity component in the finite automaton for @xmath169 is @xmath178 for which the capacity is @xmath139 .    .",
    "the regular expression @xmath179,width=288 ]    our capacity results are listed in table [ table : cap2 ] .",
    "in this paper , we showed that for tandem duplication string systems with bounded duplication length if the maximum duplication length is @xmath7 or less , the language described by the string system is regular .",
    "further , we computed exact capacities for these systems . as a future work",
    ", we would like to calculate capacities for bounded tandem duplication string systems with maximum duplication length greater than @xmath7 .",
    "using thue s result  @xcite , we showed that a tandem duplication string system can not be fully expressive if the alphabet size is @xmath180 .",
    "however , for an alphabet of size @xmath7 or less such systems can be fully expressive . this way , we completely characterized fully expressive and non - fully expressive tandem duplication string systems with bounded duplication length . as a future work",
    ", we would like to generalize the notion of expressiveness by counting the asymptotic number of _ substrings _ of length @xmath14 that a string system can generate .",
    "mathematically , we define the expressiveness @xmath181 of a string system @xmath127 as @xmath182here @xmath183 represents the number of substrings of length @xmath14 that can be generated by @xmath127 .",
    "it is notable here that with this definition of expressiveness , a fully expressive string system @xmath127 has @xmath184 .    in this paper",
    ", we looked at questions related to the generation of a diversity of sequences from a seed given a tandem duplication rule .",
    "one can also study the minimum number of steps required to deduplicate a given sequence of length @xmath14 to a squarefree seed and therefore define the notion of distance between a sequence and its seed given a tandem duplication rule .",
    "it is notable here that the same sequence can be deduplicated to more than one squarefree seed given a tandem duplication rule .",
    "for example : the sequence @xmath185 can be deduplicated to @xmath30 as well as @xmath186 under bounded tandem duplication with maximum duplication length @xmath187 in the following way @xmath188 @xmath189 here the underlined portion represents the repeat that is being deduplicated in a given step .",
    "99 j. dassow , v. mitrana , and g. paun , `` on the regularity of duplication closure , '' _ bulletin of the eatcs _ ,",
    "133 - 136 , 1999 .",
    "j. dassow , v. mitrana , and a. salomaa , `` operations and language generating devices suggested by the genome evolution , '' _ theoretical computer science _ , vol .",
    "270 , no.1 , pp .",
    "701 - 738 , 2002 .",
    "f. farnoud , m. schwartz , and j. bruck , `` the capacity of string duplication systems , '' in proceedings of _ ieee international symposium on information theory _ ,",
    "1301 - 1305 , 2014",
    ". j. w. fondon and h. r. garner,``molecular origins of rapid and continuous morphological evolution , '' _ proceedings of the national academy of sciences _ , vol .",
    "52 , pp . 18 058  18 063 , 2004 .",
    "k. a. s. immink , _",
    "codes for mass data storage systems_. shannon foundation publishers , 2004 .",
    "e. s. lander , l. m. linton , b. birren , c. nusbaum , m. c. zody , j. baldwin , k. devon , k. dewar , m. doyle , w. fitzhugh et al .",
    ", `` initial sequencing and analysis of the human genome , '' _ nature _ , vol .",
    "6822 , pp .",
    "860 - 921 , 2001 .",
    "p. leupold , c. martin - vide , and v. mitrana , `` uniformly bounded duplication languages , '' _ discrete applied mathematics _ , vol .",
    "301 - 310 , 2005 .",
    "p. leupold , v. mitrana , and j. m. sempere , `` formal languages arising from gene repeated duplication , '' in _ aspects of molecular computing _ , springer , 2004 , pp",
    ". 297 - 308 .",
    "d. lind and b. h. marcus , _ an introduction to symbolic dynamics and coding_. cambridge university press , 1985 .",
    "n. mundy and a. j. helbig , `` origin and evolution of tandem repeats in the mitochondrial dna control region of shrikes ( lanius spp . ) , '' _ journal of molecular evolution _ ,",
    "250 - 257 , 2004 .",
    "j. shallit , _ a second course in formal languages and automata theory_. cambridge university press , 2008",
    ". a. thue , `` ber unendliche zeichenreihen , '' _ kra .",
    "i. mat .- nat .",
    ", cristiana _ 7 , 1906",
    ". k. usdin , `` the biological effects of simple tandem repeats : lessons from the repeat expansion diseases , '' _ genome research _ , vol . 18 , no . 7 , pp . 1011 - 1019 , 2008 ."
  ],
  "abstract_text": [
    "<S> the majority of the human genome consists of repeated sequences . </S>",
    "<S> an important type of repeated sequences common in the human genome are tandem repeats , where identical copies appear next to each other . </S>",
    "<S> for example , in the sequence @xmath0 , @xmath1 is a tandem repeat , that may be generated from @xmath2 by a tandem duplication of length @xmath3 . in this work , </S>",
    "<S> we investigate the possibility of generating a large number of sequences from a _ seed _ , </S>",
    "<S> i.e.  a small initial string , by tandem duplications of bounded length . </S>",
    "<S> we study the capacity of such a system , a notion that quantifies the system s generating power . </S>",
    "<S> our results include _ exact capacity _ values for certain tandem duplication string systems . </S>",
    "<S> in addition , motivated by the role of dna sequences in expressing proteins via rna and the genetic code , we define the notion of the _ expressiveness _ of a tandem duplication system as the capability of expressing arbitrary substrings . </S>",
    "<S> we then _ completely _ characterize the expressiveness of tandem duplication systems for general alphabet sizes and duplication lengths . </S>",
    "<S> in particular , based on a celebrated result by axel thue from 1906 , presenting a construction for ternary square - free sequences , we show that for alphabets of size 4 or larger , bounded tandem duplication systems , regardless of the seed and the bound on duplication length , are not fully expressive , i.e.  they can not generate all strings even as substrings of other strings . </S>",
    "<S> note that the alphabet of size 4 is of particular interest as it pertains to the genomic alphabet . </S>",
    "<S> building on this result , we also show that these systems do not have full capacity . </S>",
    "<S> in general , our results illustrate that duplication lengths play a more significant role than the seed in generating a large number of sequences for these systems .    </S>",
    "<S> capacity , expressiveness , tandem repeats , tandem duplication , finite automaton , irreducible strings . </S>"
  ]
}
{
  "article_text": [
    "despite the lack of accuracy that prevent it from being used as an ode solver , the euler method is known to be very easy to implement @xcite .",
    "many efficient methods have been successfully implemented to solve odes in a parallel way . for this purpose",
    ", the parareal algorithm @xcite introduces the possibility of parallelizing the computations requested to solve efficiently odes using e.g. an euler scheme .",
    "this method uses a predictor - corrector algorithm , applied to an implicit euler scheme , and allows faster simulations , especially if parallel computing is available @xcite .",
    "further analysis and stability proofs can be found e.g. in @xcite @xcite @xcite @xcite @xcite .",
    "the parareal method uses originally coarse and fine implicit propagators to evaluate iteratively the solution of the considered odes , whose precision increases according to the iterations .    to extend the original properties , the proposed method uses , after the first iteration , an explicit euler solver for both coarse and fine propagators in order to avoid difficulties related to matrix inversion and thus to keep the advantages of the simplest euler scheme",
    "the fine propagator recomputes iteratively and corrects the solution using different time - steps , that can be extrapolated using a convergence acceleration method in order to reach a more accurate solution .",
    "the use of extrapolation algorithms has been already considered to improve the accuracy of the solution of odes considering the extrapolation of the expansion of the error relating to the powers of the time - step in the case of explicit and implicit numerical integration methods ( e.g. @xcite @xcite ) .",
    "other derivations of the parareal method , including e.g. a symplectic derivation @xcite , an adjoint - based approach @xcite , a relaxation - based derivation @xcite and a multiscale approach @xcite have been also successfully applied .",
    "the paper is structured as follows .",
    "section 2 presents the outline of the method applied to the explicit euler scheme .",
    "section 3 gives a brief overview of the acceleration algorithm used to increase the precision of the solution of odes regarding the application to the explicit euler scheme .",
    "section 4 reviews the standard parareal algorithm and describes the proposed derivation including some illustrations with numerical simulations .",
    "some concluding remarks may be found in section 5 .",
    "in this section , the proposed method is applied to the simple explicit euler scheme before being applied to the parareal algorithm using the same principle .    consider an ordinary differential equation , eventually non - linear , such as : @xmath0 , \\quad y(0 ) = y_0\\ ] ] the quantities @xmath1 and @xmath2 represent respectively the input and the solution of ( [ eq : edp_fond ] ) , which can be a scalar or a vector . to solve ( [ eq : edp_fond ] ) and to compute an _ initial _ solution over @xmath3",
    "$ ] , we use the forward euler method , for which we assume _ initially _ that the time - step @xmath4 is large and ensure the stability .",
    "the equation ( [ eq : edp_fond ] ) is rewritten in the discrete time - domain : @xmath5 whose solution @xmath6 verifies ( @xmath7 is the identity matrix whose size is compatible with the size of @xmath8 ) : @xmath9 the coefficient @xmath4 is the _ initial _ time - step such as the solution @xmath6 is calculated at each instant @xmath10 , @xmath11 .",
    "@xmath12 and @xmath13 are `` connected '' to @xmath14 and @xmath15 and are described by specific relationships that depend on the smoothness of @xmath14 and @xmath15 . in this paper , we consider @xmath8 and @xmath16 that do not depend on the time .",
    "we call @xmath17 , the dynamic matrix of the explicit euler scheme",
    ". the value @xmath18 is considered as the initial condition . to solve accurately the explicit euler scheme ,",
    "one performs a first resolution using a high time - step @xmath4 .",
    "then , for each instant @xmath19 of the initial solution , the initial time - step @xmath4 is divided by a finite number @xmath20 of subdivisions @xmath21 such as @xmath22 .",
    "some power computations of ( @xmath23 ) give a sequence for which , the limit , and therefore , a good estimation of the true solution , is deduced using a convergence accelerator .",
    "we denote : @xmath24 the series that contains the points of the calculated solution ( with the time - step @xmath4 ) at each instant @xmath25 .",
    "consider now a smaller time - step @xmath26 , with @xmath27 , for which we obtain the series of the calculated solutions : @xmath28 at each instant @xmath29 .",
    "we have thus @xmath30 .",
    "therefore , by induction , we can deduce that for any time - step @xmath31 with @xmath32 , the series of the calculated solutions : @xmath33 at each instant @xmath34 and thus @xmath35 .",
    "similarly , we denote by @xmath36 the series of the points that correspond to the `` true '' solution : @xmath37 at each instant @xmath38 .",
    "note that since @xmath4 is the initial time - step and thus the `` reference '' time - step , @xmath39 is computed at the same instants @xmath40 .",
    "therefore , at each instant @xmath40 , the solution is described as a finite series composed of terms that are computed only from the power computations of the dynamic matrix ( the time - step scaling factor @xmath21 allows computing each series @xmath41 at the same instants @xmath40 as taken for the solution @xmath42 ) . at each instant @xmath40 , the solution ( [ eq : edp_disc ] )",
    "is described as @xmath43-series ( composed of the underlined terms of each @xmath44 ) : @xmath45 with : @xmath46 to obtain an accurate estimation of the limit @xmath47 , we will describe the @xmath48-algorithm , which is a convergence accelerator algorithm , whose purpose is to estimate the limit @xmath47 from only a few terms of @xmath49 .",
    "consider @xmath50 ( also simply @xmath51 ) , a real series that converges to a limit @xmath52 for @xmath53 . to accelerate the convergence",
    ", one defines the transformation @xmath54 : @xmath55 , such as @xmath56 , whose limit is @xmath57 , implies that @xmath58 . in other words , we define the transformation @xmath54 , such as the transformed series @xmath59 from the series @xmath51 reaches its limit @xmath52 faster than @xmath51 . among the different methods that has been established to accelerate the convergence of a series @xcite @xcite",
    ", we consider the @xmath48-algorithm @xcite @xcite @xcite based on the shanks transform @xcite @xcite @xcite @xcite , that is reputed to be one the most powerful algorithm @xcite to accelerate nonlinear series .",
    "consider a series @xmath51 , for which we aim to estimate the limit @xmath52 taking into that @xmath60 is the @xmath61th element of the series . from a few terms of @xmath51 , the limit @xmath52 can be extrapolated using the following algorithm @xcite : @xmath62 where @xmath51 could be a one - dimension series or a multidimensional series .",
    "the @xmath48-algorithm can be described as a function @xmath63 that extrapolates @xmath51 and gives a new series @xmath64 that converges faster to @xmath52 ( the limit @xmath52 should be reached after a few terms of @xmath64 ) , where @xmath51 is the series for which we aim to estimate the limit @xmath52 .",
    "the parameters of the extrapolation function @xmath65 and @xmath61 are respectively the index of @xmath66 ( @xmath65 is also the order of the associated shanks transform ) and the initial index of @xmath51 .",
    "table [ table : ep_algo ] gives the number of terms of @xmath51 and the corresponding number of computations ( `` nb . of cmp . '' ) that are requested in order to compute @xmath67 .",
    "only even @xmath65 number are considered @xcite and any index @xmath61 from @xmath51 may be considered @xmath68 .",
    ".[table : ep_algo ] table of computations of @xmath69 . [ cols=\"^,^,^,^,^,^,^,^,^,^,^\",options=\"header \" , ]     the estimated limit @xmath70 is compared to the limit @xmath71 given by the asymptotic behavior of @xmath72 ( via the euler scheme ) and the true solution @xmath73 .",
    "the results show that a better estimation of the limit @xmath70 is obviously obtained for a high value of @xmath21 but in other hand , the corresponding @xmath74-distance has to be properly bounded .",
    "in particular , we deduce a rough approximation of the lower bound such as @xmath75 .",
    "table [ table : omega_acc_20 ] presents the results for which the best estimations of the limits have been obtained .",
    "these results confirm that the same @xmath76 can be used to treat all @xmath77 .",
    "[ [ remark ] ] remark + + + + + +    in the case where the system ( [ eq : para_sol ] ) has to be solved over a large time - interval , the initialization step can be applied periodically to `` refresh '' the optimized parameters and thus to ensure good performances .",
    "we presented a derivation of the parareal algorithm scheme that uses a convergence accelerator algorithm in order to improve the precision of the resulting solution at each instant .",
    "the main improvements concern the use of an explicit solver for the @xmath78 and @xmath79 operators and the use of an acceleration technique , like the wynn algorithm , to improve the convergence .",
    "the proposed method has the following features :    * the computations are based essentially on the power computation of the dynamic matrix @xmath80 .",
    "* since the power computations involve several time - steps ( the initial time - step @xmath4 , and the different division @xmath81 requested by the @xmath48-algorithm ) , these computations may be parallelized .",
    "* multidimensional odes can be considered .",
    "future investigations include the improvement of the series accelerator algorithm relating to the alternating series , the development of an adaptive scheme ( e.g. a variable time - step scheme ) , the development of a symplectic approach and the extension of the method to solve daes / stiff systems",
    ". moreover , the association and implementation with existing innovative methods are also of interest .",
    "a demonstration code is available upon request to the author .",
    "lions , y. maday , g. turinici , rsolution dedp par un schma en temps pararel , comptes rendus de lacadmie des sciences - series i - mathematics , 332 , ( 2001 )",
    ". y. maday , g. turinici , the parareal in time iterative solver : a further direction to parallel implementation , domain decomposition methods in science and engineering , lecture notes in computational science and engineering , springer berlin heidelberg , 40 , 441 - 448 ( 2005 ) .",
    "y. maday and g. turinici .",
    "a parareal in time procedure for the control of partial differential equations , comptes rendus de lacadmie des sciences - series i - mathematics , 335 , 387 - 392 ( 2002 ) .",
    "g. staff and e. r@xmath82nquist .",
    "stability of the parareal algorithm , domain decomposition methods in science and engineering , lecture notes in computational science and engineering , springer , 40 , 449 - 456 ( 2005 ) .",
    "s. vandewalle , m. gander , analysis of the parareal time - parallel time - integration method , siam journal on scientific computing , 29 , 556 - 578 ( 2007 ) .",
    "m. gander , s. vandewalle , on the superlinear and linear convergence of the parareal algorithm , domain decomposition methods in science and engineering , lecture notes in computational science and engineering , springer , 55 , 291 - 298 ( 2007 ) .",
    "p. deuflhard , recent progress in extrapolation methods for ordinary differential equations , siam rev .",
    ", 27 , 505 - 535 ( 1985 ) .",
    "e. m. constantinescu , a. sandu , extrapolated implicit - explicit time stepping , siam j. sci .",
    ", 31 , 4452 - 4477 ( 2010 ) .",
    "g. bal , q. wu , symplectic parareal , domain decomposition methods in science and engineering , lecture notes in computational science and engineering , 60 , 401 - 408 ( 2008 ) .",
    "j. liu , y .- l .",
    "jiang , a parareal algorithm based on waveform relaxation , mathematics and computers in simulation , 82 , 2167 - 2181 ( 2012 ) .",
    "f. legoll , t. lelievre , g. samaey , a micro / macro parareal algorithm for singularly perturbed ordinary differential equations , siam journal on scientific computing , 35 , 1951 - 1986 ( 2013 ) .",
    "d. a. smith and w. f. ford , numerical comparisons of nonlinear convergence accelerators , mathematics of computation ( ams ) , 38 , 481 - 499 ( 1982 ) .",
    "j. wimp , sequence transformations and their applications .",
    "math in science & engineering , academic press n - y , 514 , ( 1984 ) .",
    "p. wynn , on a device for computing the em(sn ) transformation , american mathematical society , 10 , 91 - 96 ( 1956 ) .",
    "p. wynn , on the convergence and stability of the epsilon algorithm , siam journal on numerical analysis , 3 , 91 - 122 ( 1966 ) .",
    "graves - morris , d.e .",
    "roberts , a. salam , the epsilon algorithm and related topics , journal of computational and applied mathematics , 122 , 51 - 80 ( 2000 ) .",
    "d. shanks , non - linear transformation of divergent and slowly convergent sequences , journal of mathematics and physics , 34 , 1 - 42 ( 1955 ) .",
    "s. singh , r. singh , on the use of shank s transform to accelerate the summation of slowly converging series , ieee transactions on microwave theory and techniques , 39 , 608 - 610 ( 1991 ) .",
    "a. sidi , survey of numerical stability issues in convergence acceleration , applied numerical mathematics , 60 ( 2010 ) .",
    "a. sidi , acceleration of convergence of general linear sequences by the shanks transformation , j. numerische mathematik , springer - verlag , 119 , ( 2011 ) . c. brezinski , accelration de la convergence en analyse numrique .",
    "lecture notes in mathematics , springer - verlag , heidelberg , 584 , ( 1977 ) ."
  ],
  "abstract_text": [
    "<S> the parareal algorithm is used to solve time - dependent problems considering multiple solvers that may work in parallel . </S>",
    "<S> the key feature is a initial rough approximation of the solution that is iteratively refined by the parallel solvers . </S>",
    "<S> we report a derivation of the parareal method that uses a convergence acceleration technique to improve the accuracy of the solution . </S>",
    "<S> our approach uses firstly an explicit ode solver to perform the parallel computations with different time - steps and then , a decomposition of the solution into specific convergent series , based on an extrapolation method , allows to refine the precision of the solution . </S>",
    "<S> our proposed method exploits basic explicit integration methods , such as for example the explicit euler scheme , in order to preserve the simplicity of the global parallel algorithm . </S>",
    "<S> the first part of the paper outlines the proposed method applied to the simple explicit euler scheme and then the derivation of the classical parareal algorithm is discussed and illustrated with numerical examples . </S>"
  ]
}
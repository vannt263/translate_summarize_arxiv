{
  "article_text": [
    "during the last decades , considerable efforts have been made to elucidate the genetic basis of rare and common human diseases .",
    "the discovery of so - called _ disease genes _ , whose disruption causes congenital or acquired disease , is indeed important both towards diagnosis and towards new therapies , through the elucidation of the biological bases of diseases .",
    "traditional approaches to discover disease genes first identify chromosomal regions likely to contain the gene of interest , e.g. , by linkage analysis or study of chromosomal aberrations in dna samples from large case - control populations .",
    "the regions identified , however , often contain tens to hundreds of candidate genes . finding the causal gene(s ) among these candidates",
    "is then an expensive and time - consuming process , which requires extensive laboratory experiments .",
    "progresses in sequencing , microarray or proteomics technologies have also facilitated the discovery of genes whose structure or activity are modified in disease samples , on a full genome scale .",
    "however , again , these approaches routinely identify long lists of candidate disease genes among which only one or a few are truly the causative agents of the disease process , and further biological investigations are required to identify them . in both cases , it is therefore important to select the most promising genes to be further studied among the candidates , i.e. , to _ prioritize _ them from the most likely to be a disease gene to the less likely . + gene prioritization is typically based on prior information we have about the genes , e.g. , their biological functions , patterns of expression in different conditions , or interactions with other genes , and follows a `` guilt - by - association '' strategy : the most promising candidates genes are those which share similarity with the disease of interest , or with other genes known to be associated to the disease .",
    "the availability of complete genome sequences and the wealth of large - scale biological data sets now provide an unprecedented opportunity to speed up the gene hunting process @xcite .",
    "integrating a variety of heterogeneous information stored in various databases and in the literature to obtain a good final ranking of hundreds of candidate genes is , however , a difficult task for human experts .",
    "unsurprisingly many computational approaches have been proposed to perform this task automatically via statistical and data mining approaches .",
    "while some previous works attempt to identify promising candidate genes without prior knowledge of any other disease gene , e.g. , by matching the functional annotations of candidate genes to the disease or phenotype under investigation @xcite , many successful approaches assume that some disease genes are already known and try to detect candidate genes which share similarities with known disease genes for the phenotype under investigation @xcite or for related phenotypes @xcite .",
    "these methods vary in the algorithm they implement and in the data they use to perform gene prioritization . for example , endeavour and related work @xcite use state - of - the - art machine learning techniques to integrate heterogeneous information and rank the candidate genes by decreasing similarity to known disease genes , while prince @xcite uses label propagation over a protein - protein interaction ( ppi ) network and is able to borrow information from known disease genes of related diseases to find new disease genes .",
    "we refer the reader to @xcite for a recent review of gene prioritization tools available on the web .",
    "+ here we propose prodige , a new method for prioritization of disease genes based on the guilt - by - association concept .",
    "prodige assumes that a set of gene - disease associations is already known to infer new ones , and brings three main novelties compared to existing methods .",
    "first , prodige implements a novel machine learning paradigm to score candidate genes .",
    "while existing methods like those of @xcite score independently the different candidate genes in terms of similarity to known disease genes , prodige exploits the relative similarity of both known and candidate disease genes to jointly score and rank all candidates .",
    "this is done by formulating the disease gene prioritization problem as an instance of the problem known as _ learning from positive and unlabeled examples _ ( pu learning ) in the machine learning community , which is known to be a powerful paradigm when a set of candidates has to be ranked in terms of similarity to a set of positive data @xcite .",
    "second , in order to rank candidate genes for a disease of interest , prodige borrows information not only from genes known to be associated to the disease , but also from genes known to play a role in diseases or phenotypes related to the disease of interest .",
    "this again differs from @xcite which treat diseases independently from each other .",
    "it allows us , in particular , to rank genes even for _ orphan diseases _ , with no known gene , by relying only on known disease genes of related diseases . in the machine learning jargon",
    ", we implement a _ multi - task _ strategy to share information between different diseases @xcite , and weight the sharing of information by the phenotypic similarity of diseases .",
    "third , prodige performs heterogeneous data integration to combine a variety of information about the genes in the scoring function , including sequence features , expression levels in different conditions , ppi interactions or presence in the scientific literature .",
    "we use the powerful framework of _ kernel methods _ for data integration @xcite , akin to the work of @xcite .",
    "this differs from approaches like that of @xcite , which are limited to scoring over a gene or protein network .",
    "+ we test prodige on real data extracted from the omim database @xcite .",
    "it is able to rank the correct disease gene in the top 5% of the candidate genes for 69% of the diseases with at least one other known causal gene , and for 67% of the diseases when no other disease genes is known , outperforming state - of - the - art methods like endeavour and prince .",
    "we first assess the ability of prodige to retrieve new disease genes for diseases with already a few known disease genes , without sharing information across different diseases . as a gold standard we extracted all known disease - gene associations from the omim database @xcite , and we borrowed from @xcite nine sources of information about the genes , including expression profiles in various experiments , functional annotations , known protein - protein interactions ( ppi ) , transcriptional motifs , protein domain activity and literature data .",
    "each source of information was encoded in a kernel functions , which assesses pairwise similarities between each pair of genes according to each source of information .",
    "we compare two ways to perform data integration : first by simply averaging the nine kernel functions , and second by letting prodige optimize itself the relative contribution of each source of information when the model is estimated , through a multiple kernel learning ( mkl ) approach .",
    "we compare both variants with the best model of @xcite , namely , the mkl1class model which differs from prodige in this case only in the machine learning paradigm implemented : while prodige learns a model from positive and unlabeled examples , mkl1class learns it only from positive examples .",
    "we tested these three algorithm in a leave - one - out cross - validation ( loocv ) setting .",
    "in short , for each disease , each known disease gene was removed in turn , a model was trained on using the remaining disease genes as positive examples , and all 19540 genes in our database were ranked ; we then recorded the rank of the positive gene that was removed in this list .",
    "we focused on the 285 diseases in our dataset having at least 2 known disease genes , because all three methods require at least one known disease gene for training , and for the purpose of loocv we need in addition one known disease gene removed from the training set . + figure 1 presents the cumulative distribution function ( cdf ) of the rank of the left - out positive gene , i.e. , the number of genes that were ranked in the top @xmath0 genes of the list as a function of @xmath0 , for each method .",
    "note that the rank is always between @xmath1 ( best prediction ) and @xmath2 , where @xmath3 is the number of genes known to be associated to the disease of interest .",
    "the right panel zooms on the beginning of this curve which corresponds to the distribution of small values of the rank .",
    "we see clearly that both prodige variants outperform mkl1class in the sense that they consistently recover the hidden positive gene at a better rank in the list .",
    "a wilcoxon signed rank test confirms these visual conclusions at @xmath4 level with p - values @xmath5 and @xmath6 , respectively , for the average and mkl variants of prodige .",
    "this illustrates the benefits of formulating the gene ranking problem as a pu learning problem , and not as a 1-class learning one , since apart from this formulation both mkl1class and prodige1 use very similar learning engines , based on svm and mkl .",
    "+ both prodige1 variants recover roughly one third of correct gene - disease associations in the top @xmath7 genes among almost @xmath8 , i.e. , in the top @xmath9 . however , we found no significant difference between the mean and mkl variants of prodige in this setting ( p - value=0.619 ) .",
    "this means that in this case , assigning equal weights to all data sources works as well as trying to optimize these weights by mkl . supported by this result and by the fact that mkl is much more time - consuming than a svm with the mean kernel , we decided to restrict our experiments to the mean kernel in the following experiments .",
    "+          in a second run of experiments , we assess the performance of prodige when it is allowed to share informations across diseases .",
    "we tested three variants of prodige , as explained in material and methods : prodige2 , which uniformly shares information across all diseases without using particular informations about the diseases , prodige3 , which weights the sharing of informations across diseases by a phenotypic similarity between the diseases , and prodige4 , a variant of prodige3 which additionally controls the sharing of information between diseases that would have very similar phenotypic description but which remain different diseases .",
    "all variants are based on the same methodological backbone , namely , the use of a multitask learning strategy , and only differ in a function used to control the sharing of information .",
    "we limit ourselves to the 1873 diseases in the disease - gene association dataset which were also in the phenotypic similarity matrix that we used .",
    "this corresponds to a total of 2544 associations between these diseases and 1698 genes .",
    "we compare these variants to prince @xcite , a method recently proposed to rank genes by sharing information across diseases through label propagation on a ppi network .",
    "+ figure 2 shows the cdf curves for the four methods . comparing areas under the global curve , i.e. , the average rank of the left - out disease gene in loocv",
    ", the four methods can be ranked in the following order : prodige4 ( 1682 ) @xmath10 prodige3 ( 1817 ) @xmath10 prodige2 ( 2246 ) @xmath10 prince ( 3065 ) .",
    "the fact that prodige3 and prodige4 outperform prodige2 confirms the benefits of exploiting prior knowledge we have about the disease phenotypes to weight the sharing of information across diseases , instead of following a generic strategy for multitask learning .",
    "the fact that prodige4 outperforms prodige3 is not surprising and illustrates the fact that the diseases are not fully characterized by the phenotypic description we use .",
    "zooming to the beginning of the curves ( right picture ) , we see that the relative order between the methods is conserved except for prince which outperforms prodige2 in that case .",
    "in fact , prodige2 has a very low performance compared to all other methods for low ranks , confirming that the generic multitask strategy should not be pursued in practice if phenotypic information is available . + the fact that prodige3 and prodige4 outperform prince for all rank values confirm the competitiveness of our approach . on the other hand ,",
    "the comparison with prince is not completely fair since prodige exploits a variety of data sources about the genes , while prince only uses a ppi network . in order to clarify",
    "whether the improvement of prodige over prince is due to a larger amount of data used , to the learning algorithm , or to both , we ran prodige3 with only the kernel derived from the ppi network which we call prodige - ppi in figure 2 . in that case , both prodige and prince use exactly the same information to rank genes .",
    "we see on the left picture that this variant is overall comparable to prince ( no significant difference between prince and prodige - ppi with a wilcoxon paired signed rank test ) , confirming that the main benefit of prodige over prince comes from data integration .",
    "interestingly though , at the beginning of the curve ( right picture ) , prodige - ppi is far above prince , and even behaves comparably to the best method prodige4 .",
    "since prodige - ppi and prince use exactly the same input data , this means that the better performance of prodige - ppi for low ranks comes from the learning method based on pu learning with svm , as opposed to label propagation over the ppi network .",
    "+        to better visualize the differences between the different variants of prodige , the scatter plots in figure 3 compare directly the ranks obtained by the different variants for each of the 2544 left - out associations . note that smaller ranks are better than large ones , since the goal is to be ranked as close as possible to the top of the list .",
    "on the left panel , we compare prodige3 to prodige4 .",
    "we see that many points are below the diagonal , meaning that adding a dirac kernel to the phenotype kernel ( prodige4 ) generally improves the performance as compared to using a phenotype kernel ( prodige3 ) alone . on the right panel ,",
    "the prodige2 is compared to the prodige3 .",
    "we see that the points are more concentrated above the diagonal , but with large variability on both sides of the diagonal .",
    "this indicates a clear advantage in favor of the phenotype kernel compared to the generic multitask kernel , although the differences are quite fluctuant .",
    "+          in order to check whether sharing information across diseases is beneficial , we restrict ourselves to diseases with phenotypic informations and with at least two known associated genes in the omim database .",
    "this way , we are able to share information across diseases and , at the same time , to run methods that do not share information because we ensure that there is at least one training gene in the loocv procedure .",
    "this leaves us with 265 diseases , corresponding to 936 associations .",
    "+ figure 4 shows the cdf curves of the rank for the various methods on these data , including the two methods mkl1class and prodige1 ( with the mean kernel for data integration ) , which do not share information across diseases , and prodige 2 , 3 , 4 and prince , which do share information .",
    "interestingly , we observe different retrieval behaviors on these curves , depending on the part of the curve we are interested in . on the one hand , if we look at the curves globally , prodige 4 and 3 perform very well , having high area under the cdf curve , i.e. , a low average rank ( respectively 1529 and 1770 ) . prince and mkl1class have the worse average ranks ( respectively 3220 and 3351 ) . a systematic test of differences between the methods , using a wilcoxon paired signed rank test over the ranks for each pair of methods , is summarized in figure 5 . in this picture",
    ", an arrow indicates that a method is significantly better than another at level @xmath4 .",
    "this confirms that prodige 4 is the best method , significantly better than all other ones except prodige 1 .",
    "three variants of prodige are significantly better than prince and mkl1class .",
    "+ on the other hand , in the context of gene prioritization , it is useful to focus on the beginning of the curve and not on the full cdf curves .",
    "indeed , only the top of the list is likely to deserve any serious biological investigation .",
    "therefore we present a zoom of the cdf curve in panel ( b ) of figure 4 .",
    "we see there that the local methods prodige1 and mkl1class present a sharper increase at the beginning of the curve than the global methods , meaning that they yield more often truly disease genes near the very top of the list than other methods . additionally , we observe that prodige1 is in fact the best method when we focus on the proportion of disease genes correctly identified in up to the top 350 among 19540 , i.e. , in up to the top 1.8% of the list .",
    "these results are further confirmed by the quantitative values in table [ tab : precision ] , which show the recall ( i.e. , cdf value ) as a function of the rank .",
    "prodige 1 , which does not share information across diseases , is the best when we only focus at the very top of the list ( up to the top 1.8% ) , while prodige 4 , which shares information , is then the best method when we go deeper in the list .",
    "+    .*recall of different methods at different rank levels , for diseases with at least one known disease gene . *",
    "the recall at rank level @xmath0 is the percentage of disease genes that were correctly ranked in the top @xmath0 candidate genes in the loocv procedure , where the number of candidate genes is near @xmath8 .",
    "top 1 and top 10 ( first two columns ) correspond respectively to the recall at the first and first ten genes among 19540 , while top x% ( last three columns ) refer to the recall at the first x% genes among 19540 . [ cols=\"<,^,^,^,^,^\",options=\"header \" , ]     when heterogeneous sources of information for genes are available , the two strategies proposed in section [ sec : prodigemkl ] can be easily combined with each of the four prodige variants , since each particular gene kernel translates into a particular disease - gene kernel through . in the experiments below",
    ", we only implement the mkl approach for prodige1 to compare it to the mean kernel strategy .",
    "for other variants of prodige , we restrict ourselves to the simplest strategy where the different information sources are fused through kernel averaging .",
    "+      we assess the performance of various gene prioritization methods by leave - one - out cross - validation ( loocv ) on the dataset of known disease - gene association extracted from the omim database .",
    "given the list of all disease - gene associations @xmath11 in omim , we remove each pair @xmath12 in turn from the training set , train the scoring function from the @xmath13 remaining positive pairs , rank all genes @xmath14 not associated to @xmath15 in the training set by decreasing score @xmath16 , and check how well @xmath17 is ranked in the list .",
    "note that in this setting , we implicitly assume that the candidate genes for a disease are all genes not known to be associated to the disease , i.e. , @xmath18 . in the loocv",
    "setting , each time a pair @xmath12 is removed from the training set , the ranking is then performed on @xmath19 .",
    "we monitor the success of the prioritization by the rank of @xmath17 among candidate genes in @xmath20 . since we are doing a loocv procedure , the rank of the left - out sample is directly related to the classical area under the receiver operating characteristics curve ( auc ) , via the formula @xmath21 .",
    "therefore , an easy way to visualize the performance of a gene prioritization method is to plot the empirical cumulative distribution function ( cdf ) of the ranks obtained for all associations in the training set in the loocv procedure . for a given value of the rank @xmath0 ,",
    "the cdf at level @xmath0 is defined as the proportion of associations @xmath22 for which gene @xmath17 ranked among the top @xmath0 in the prioritization list for disease @xmath15 , which can also be called the _ recall _ as a function of @xmath0 .",
    "+      we compare prodige to two state - of - the - art gene prioritization methods .",
    "first we consider the 1-svm l2-mkl from @xcite , which extends and outperforms the endeavour method @xcite , and which we denote mkl1class below .",
    "this method performs one - class svm @xcite while optimizing the linear combination of gene kernels with a mkl approach in the same time .",
    "we downloaded a matlab implementation of all functions from the supplementary information website of @xcite .",
    "we used as input the same 9 kernels as for prodige , and we set the regularization parameter of the algorithm @xmath23 , as done by @xcite .",
    "second , we compare prodige to the prince method introduced by @xcite , which is designed to share information across the diseases .",
    "prior information consists in gene labels that are a function of their relatedness to the query disease .",
    "they are higher for genes known to be directly related to the query disease , high but at a lesser extent for genes related to a disease which is very similar to the query , smaller for genes related to a disease that bears little similarity to the query and zero for genes not related to any disease .",
    "prince propagates these labels on a ppi network and produces gene scores that vary smoothly over the network .",
    "we used the same ppi network for prince as the one used by prodige .",
    "the first type of data required by prodige is the description of the set @xmath24 of human genes .",
    "we borrowed the dataset of @xcite , based on ensembl v39 and which contains multiple data sources .",
    "we removed genes whose i d had a `` retired '' status in ensembl v59 , leaving us with 19540 genes .",
    "these genes are described by microarray expression profiles from @xcite and @xcite ( ma1 , ma2 ) , expressed sequence tag data ( est ) , functional annotation ( go ) , pathway membership ( kegg ) , protein - protein interactions from the human protein reference database ( ppi ) , transcriptional motifs ( motif ) , protein domain activity from interpro ( ipr ) and literature data ( text ) . for ppi data which consists in a graph of interactions , a diffusion kernel with parameter 1",
    "was computed to obtain a kernel for genes @xcite .",
    "all other data sources provide a vectorial representation of a gene .",
    "the inner product between these vectors defines the kernel we create from each data source .",
    "all kernels are normalized to unit diagonal to ensure that kernel values are comparable between different data sources , using the formula : @xmath25    second , to define the phenotype kernel between diseases we borrow the phenotypic similarity measure of @xcite . the measure they propose",
    "is obtained by automatic text mining .",
    "a disease is described in the omim database by a text record @xcite . in particular , its description contains terms from the mesh ( medical subject headings ) vocabulary . @xcite",
    "assess the similarity between two diseases by comparing the mesh terms content of their respective record in omim .",
    "we downloaded the similarity matrix for 5080 diseases from the mimminer webpage .",
    "finally , we collected disease - gene associations from the omim database @xcite , downloaded on august 8th , 2010 .",
    "we obtained 3222 disease - gene associations involving 2606 disorders and 2182 genes .",
    "we are grateful to lon - charles tranchevent , shi yu and yves moreau for providing the gene datasets , and to roded sharan and oded magger for making their matlab implementation of prince available to us .",
    "this work was supported by anr grants anr-07-blan-0311 - 03 and anr-09-blan-0051 - 04 .",
    "linghu b , snitkin e , hu z , xia y , delisi c ( 2009 ) genome - wide prioritization of disease genes and identification of disease - disease associations from an integrated human functional linkage network .",
    "genome biol 10 : r91 .",
    "hwang t , kuang r ( 2010 ) a heterogeneous label propagation algorithm for disease gene discovery . in : proceedings of the siam international conference on data mining , sdm 2010 , april 29 - may 1 , 2010 , columbus , ohio , usa . pp",
    ". 583594 .",
    "liu b , lee ws , yu ps , li x ( 2002 ) partially supervised classification of text documents . in : icml 02 : proceedings of the nineteenth international conference on machine learning .",
    "san francisco , ca , usa : morgan kaufmann publishers inc . , pp .",
    "387394 .",
    "calvo b , lpez - bigas n , furney s , larraaga p , lozano j ( 2007 ) a partially supervised classification approach to dominant and recessive human disease gene prediction .",
    "comput methods programs biomed 85 : 229237 .",
    "kondor ri , lafferty j ( 2002 ) diffusion kernels on graphs and other discrete input . in : proceedings of the nineteenth international conference on machine learning .",
    "san francisco , ca , usa : morgan kaufmann publishers inc . , pp . 315322 ."
  ],
  "abstract_text": [
    "<S> elucidating the genetic basis of human diseases is a central goal of genetics and molecular biology . </S>",
    "<S> while traditional linkage analysis and modern high - throughput techniques often provide long lists of tens or hundreds of disease gene candidates , the identification of disease genes among the candidates remains time - consuming and expensive . </S>",
    "<S> efficient computational methods are therefore needed to prioritize genes within the list of candidates , by exploiting the wealth of information available about the genes in various databases . here </S>",
    "<S> we propose prodige , a novel algorithm for prioritization of disease genes . </S>",
    "<S> prodige implements a novel machine learning strategy based on learning from positive and unlabeled examples , which allows to integrate various sources of information about the genes , to share information about known disease genes across diseases , and to perform genome - wide searches for new disease genes . </S>",
    "<S> experiments on real data show that prodige outperforms state - of - the - art methods for the prioritization of genes in human diseases . </S>"
  ]
}
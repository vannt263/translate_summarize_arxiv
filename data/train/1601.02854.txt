{
  "article_text": [
    "the software presented here was used to produce results from paper @xcite and therefore it is advisable to study the paper before start to experiment with the programs . in @xcite",
    "there is also all theory required to understand the output .",
    "the software is available at @xcite .",
    "this paper is organized as follows . in the next section requirements for running the software",
    "is provided .",
    "then a short example follows .",
    "next , general idea of the software design is described .",
    "finally a short introduction to the parallel version based on mpi is presented for those who want to experiment with parallel computation .",
    "the software requires rather standard and free software available in most unix - like systems . in order to compile and",
    "run programs mandatory tools are as follows    * unix - like system - posix compatible , e.g. , linux ; * make compatible system , e.g. , gnu make @xcite ; * g++ compiler from gnu compiler collection @xcite ; * root library @xcite .",
    "there is also additional software that is required to perform more advanced operations    * doxygen @xcite ( optional ) if documentation from the code is required to generate ; * valgrind @xcite ( optional ) if advanced debugging is required ; * mpi @xcite , e.g. , openmpi ( optional ) if the user wants to experiment with parallel version of the program ;",
    "simplified version of the program was constructed to familiarize new users with its philosophy of design .    in order to run the program",
    "go to _ simple _ directory and then type in the console _ make run_. when the program run ends , which should take no more than 1 minute , you will be able to see the example plot in _",
    "simpleplot.eps _ file , see fig .",
    "[ fig : simpleploteps ] .",
    "reaction , the born term convoluted with the gaussian distribution for the energy spread @xmath2 and similar plot with isr corrections included .",
    "the lower panel plot shows ratios of the last two plots by the born term.,scaledwidth=50.0% ]    these plots are only a small number of capabilities of the library of functions in the full program .",
    "now we will analyze the code .",
    "please open the _",
    "main.cxx _ file in your favorite editor .",
    "it is good to choose such an editor that has support for c / c++ programming .",
    "let us start analysis of the code - scroll down the code and stop at the beginning of the _ main ( ) _ function .",
    "the first relevant instruction is    ....   long nevtot = 10000000 ; ....    which sets up the statistic for monte carlo integrator .",
    "the error of integration for isr corrections or convolution with beam center energy spread is roughly proportional to @xmath3 . on the other hand",
    "the time of integration is proportional to the statistics .    in the next lines ,",
    "histograms are created .",
    "the line    ....   makeborn(string(\"bornh \" ) ) ; ....    creates the born term histogram and saves it in _",
    "bornh.root _ file .",
    "then in the line    ....   makeconvborn ( string(\"histo - sig04-born \" ) , 0.0042 , nevtot ) ; ....    the histogram for born term convoluted with the gaussian distribution for the energy spread @xmath4 is saved in the file _ histo - sig04-born.root_. finally , the similar plot including isr corrections is created in    ....   makeisr ( string(\"histo - sig04-isr2 \" ) , 2 , 3 , 0.0042 , nevtot ) ; ....    and it is saved in _",
    "histo-sig04-isr2.root _ file .",
    "now we can create plot in the function    ....   plotsimplefigs ( ) ; ....    this function is customized by the user to adjust the plots to the user needs .",
    "we will analyze main parts of the function .",
    "please scroll the code to _ plotsimplefigs ( ) _ function . the first part    .... tfile diskfileborn (   \" ./histo - sig04-born.root \" ) ;   tfile diskfileisr2 (   \" ./histo - sig04-isr2.root \" ) ;   tfile diskfilebornh (   \" ./bornh.root \" ) ;       th1d * h_born         = ( th1d*)diskfilebornh.get(\"h_sigene \" ) ; th1d * h_sigeneborn   = ( th1d*)diskfileborn.get(\"h_sigene \" ) ; th1d * h_sigeneisr2   = ( th1d*)diskfileisr2.get(\"h_sigene \" ) ; ....    is responsible for retrieving histograms from the root files .",
    "next , the values of the higss mass(_m_mh _ ) and width ( _ m_gamh _ ) is retried from the _ tdesity _ object    .... tdensity * density = new tdensity ( ) ; double mh    = density->m_mh ; double gamh = density->m_gamh ; ....    the class _ tdensity _ is contained in an appropriate header and class implementations files .",
    "this class contains integrand function and all relevant physical constants .    in the next part root",
    "specific operations are performed in order to format plots .    the same idea on the large scale",
    "is used in the full software - there s is more cases for data generation and more plot functions that prepare customized plots ; fig .",
    "[ fig : flowchart ] describes general concept .",
    "in this section we give description of general software from _ full _ directory .",
    "the software contains a few parts :    * _ makefile _ compatible with gnu make ; * class _ tdensity _ in files _",
    "tdensity.h _ and _ tdensity.cxx _ that contains integrands for born convolution and isr contribution .",
    "it inherits from _ tfoamintegrand _ class as it is required by foam @xcite ; * main program and function library in _",
    "main.cxx _ that contains functions described below and _ main ( ) _ function .",
    "the following commands are defined in _",
    "makefile _ :    * _ make run _ - compile and run program ; * _ make clean _ - clean executables ; * _ make cleanest _ - clean executables , root , pdf and eps files ; * _ make generate - doc _ - generate documentation from the code and display html version in firefox web browser ;    makefile is set up for parallel compilation on maximal number of cores available on the computer .",
    "foam @xcite adaptive integrator requires the density distribution . the class _ tdensity _ implements density distribution for the sole born distribution , the born distribution with convolution with the gaussian distribution and with additional isr corrections @xcite . the class can calculate cross section for electron and muon higgs production .",
    "the type of reaction can be switched by ( un)commenting appropriate _ define _ statement in _ tdensity.h _ file ,",
    "e.g. , default setup for @xmath5 reaction is as follows    .... # define electron //#define",
    "muon   ....    the class _ tdensity _ contains fields which are responsible for selecting appropriate distributions :    * _ m_isron _ - @xmath6 - isr corection is off , only the born shape ; @xmath7 - isr correction on ; * _ m_keyisr _ - selects isr type of @xcite : @xmath6 -(a ) ; @xmath7- ( b ) ; @xmath8- ( c ) ; * _ m_kdim _ - dimension of distribution to integrate .",
    "there are the following combinations possible : * * if _",
    "m_isron=0 _ then _",
    "m_kdim = 2 _ - convolution of the gauss distribution with born . * * if _ m_isron=1 _ then _",
    "m_kdim = 2 _ - machine energy spread off ; 3 - machine energy spread on ; * _ m_sige _ - energy spread in @xmath9 if applicable(_kdim = 3 _ ) .",
    "let us give a few examples of combinations :    * _ m_isron = 0 , m_kdim = 2 , m_sige = 0.0042 _ - born convoluted with the gaussian distribution for the energy spread @xmath2 ; * _ m_isron = 1 , m_kdim = 2 , m_keyisr=2 _ - born with isr ( c ) ; * _ m_isron = 1 , m_kdim = 3 , m_keyisr=2 , m_sige = 0.0042 _ - born with isr ( c ) convoluted with the gaussian distribution for the energy spread @xmath2 ;    however , there is no necessity to remember these combinations as there are available functions that set up all legitimate combinations .",
    "they were used in the simplified example and described below .",
    "let us now focus on _ main.cxx _ file .",
    "the file contains two types of functions .",
    "the first kind of functions generates cross section distribution and save them into root file .",
    "these functions set up appropriately _ tdesity _ object , and use foam to integrate distributions , create histograms and save them into root file .",
    "this root file contains two histograms    * h_ene - contains histograms of cross section as a function of energy ; * h_norm - contains two bins : the first one at @xmath10 that contains luminosity , and the second one at @xmath11 that contains number of events in h_ene histogram .",
    "the functions are as follows .",
    "the first function create born term histogram and save it in a root file    .... void makeborn ( string filename = \" bornh \" ) ....    the second function makes born term convolution with the gauss distribution and save it into root file    ....   void makeconvborn ( string filename = \" histo1 \" ,    double_t sige = 0.0041 , long nevtot =   1000000 )   ....    the last important production function makes bron term with isr contribution convoluted with the gaussian distribution and save it into root file    ....   void makeisr ( string filename = \" histo1 \" , int_t keyisr = 2 ,   int_t kdim = 3 , double_t sige = 0.0041 , long nevtot =   1000000 ) ....    the second kind of functions retrieve these histograms , do formating and save histograms into eps files .",
    "these includes    ....   void plotisrabc ( void ) ....    which prepares plots for three types of isr contributions and save it in eps file _ israbc.eps_. the next one    ....",
    "void plotisr123 ( void ) ....    prepares plots with isr contribution and its convolution for @xmath12 and @xmath13 .",
    "plots are saved in _ isr123.eps_.",
    "next two functions    .... void plotborndelta ( void ) void plotisrdelta ( void ) ....    prepare born and isr convolution plots with the gauss distributions for different beam energy spread values .",
    "the last two functions are responsible for creating and plotting cross section dependence on the beam energy spread value    ....   int makeisrsigedistribution ( int nbins = 100 , long nevtot =   1000000 )   int plotisrsigedistribution ( int nbins = 100 , long nevtot =   1000000 ) ....",
    "these plot functions prepare plots that can be seen in paper @xcite .",
    "in this section description of parallel version of programs will be provided .",
    "it can be interesting for those who wants experiment with this idea .",
    "they are located in _",
    "mpi _ directory .",
    "the processes of generation of histograms are separate , independent and require large amount of time for large statistic .",
    "therefore , they are ideally suitable for parallelization",
    ". there are different approaches to the issue .",
    "our approach is not very sophisticated one , however , conceptually simple .",
    "it relies on mpi(message passing interface)@xcite , specifically openmpi technology for c / c++ .",
    "mpi creates software infrastructure for communication between processes by mpi library calls .",
    "it is popular standard in high performance computing .",
    "process management is implemented using the well known producer consumer design pattern @xcite .",
    "the number of processed used in computations is controlled by _ nop _",
    "variable in _",
    "makefile_.    there are two programs .",
    "the first one in the subdirectory _ basic _ generates plots for all types of cross sections and the second one in the subdirectory _ sigeplots _ , which generates plots for dependence of cross section on the center of mass beam energy spread .    in the first program ,",
    "the histograms are created according to the data in the array _",
    "data_. every cell of this array is of the struct type _",
    "gendata _ which contains parameters of generation , e.g. , beam energy spread .",
    "then every process depending on its unique identification number generates histograms for its range of data in the array , see fig .",
    "[ fig : arraydistribution ]",
    ".        the starting and ending index for every process can be calculated by rather standard functions    .... int startindex ( int n , int workers , int rank ) ; int stopindex ( int n , int workers , int rank ) ; ....    where _ n _ is the dimension of the array , _",
    "workers _ is the number of all processes and _ rank _ is the unique rank of the process .",
    "simple check for the speedup for the first program is presented in fig .",
    "[ fig : speedup ] .",
    "cores therefore there is inefficient to run more than @xmath14 processes at the same time . here",
    "@xmath15 is the time of computation for @xmath16 processes.,scaledwidth=50.0% ]    in the second program every process generates the values of cross section for given range of values of beam energy spread from the whole energy spread range .",
    "the value of energy spread for the bin centers are stored in shared array - every process calculates cross section for given range of energy spread at given beam energies .",
    "these computed values are stored by processes in the arrays shared by processes .",
    "the values are gathered by the main process .",
    "this process then generates plots . in this program",
    "it is important that the size of the arrays shared between processes has to have multiplicity of the number of processes used in computation . here",
    "the speedup of calculations is significant .",
    "however as the number of computations for process is the multiplicity of the number of processes therefore there is no simple measure of this speedup .    in the implementation",
    "the static scheduling of tasks was used , which is the simplest and the most ineffective type of scheduling .",
    "therefore there is a big field for improvements .",
    "description of library and program for calculations of beam energy spread influence on cross section lineshape of higgs boson was provided .",
    "structure of the program can be easily adapted to other similar calculations . in the end",
    "simple parallelization of the program was described ."
  ],
  "abstract_text": [
    "<S> simple software for monte carlo(mc ) calculation of the higgs boson lineshape and its beam broadening effect by the beam energy dispersion was described . </S>",
    "<S> the software bases on foam @xcite adaptive mc integrator from root library @xcite . </S>",
    "<S> the software is intended for those who want to reproduce results from paper @xcite and experiment with different parameters for the lineshapes and qcd correction factors . </S>",
    "<S> parallel version of the software based on mpi @xcite is also described .    </S>",
    "<S> = 1    * software for calculations of the higgs boson lineshape + in future lepton colliders *    s.  jadach@xmath0 and r.a .  </S>",
    "<S> kycia@xmath1     +   +    _ keywords : _ qcd , the higgs boson cross section , energy scan , monte carlo , foam , beam spread , initial radiation state . </S>"
  ]
}
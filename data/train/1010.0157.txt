{
  "article_text": [
    "the quadratic assignment problem ( qap ) is a combinatorial optimization problem first introduced by koopmans and beckman @xcite .",
    "it is np - hard and is considered to be one of the most difficult problems to be solved optimally .",
    "the problem is defined in the following context : a set of @xmath0 facilities are to be located at @xmath0 locations .",
    "the distance between locations @xmath1 and @xmath2 is @xmath3 and the quantity of materials which flow between facilities @xmath1 and @xmath2 is @xmath4 .",
    "the problem is to assign to each location a single facility so as to minimize the cost @xmath5 where @xmath6 represents the location to which facility @xmath1 is assigned .",
    "there is an extensive literature which addresses the qap and is reviewed in @xcite . with the exception of specially constructed cases ,",
    "optimal algorithms have solved only relatively small instances ( @xmath7 ) .",
    "various heuristic approaches have been developed and applied to problems typically of size @xmath8 or less .",
    "two of the most successful heuristics to date for the qap are tabu search ( ts ) and simulated annealing ( sa ) .",
    "they are basic heuristics which are used alone or as components in hybrid and iterative metaheuristics .",
    "comparisons of the performance of sa and ts for the qap have been inconclusive . in this work",
    ", we are able to successfully characterize the relative performance of these heuristics by performing the comparisons for various values of solution quality and by setting the number of iterations for each heuristic to the optimal one for the target solution quality .",
    "as is common practice , we define the quality , @xmath9 of a solution @xmath10 where @xmath11 is the value of the objective function for the solution and @xmath12 is the best known value of the objective function for the instance . the lower the value of @xmath9 , the higher the quality .",
    "we find that for each problem instance , there is a value of @xmath9 , @xmath13 , above which ( lower quality ) tabu search performs better  requires less time  than simulated annealing and below which ( higher quality ) simulated annealing performs better .",
    "the tabu search heuristic for the quadratic assignment problem consists of repeatedly swapping locations of two nodes . a single iteration of the heuristic consists of making the swap which most decreases the total cost . under certain conditions ,",
    "if a move which lowers the cost is not available , a move which raises the cost is made . to ensure that cycles of the same moves are avoided , the same move is forbidden ( _ taboo _ ) until a specified later iteration",
    "; we call this later iteration the _ eligible iteration _ for a given move .",
    "this eligible iteration is traditionally stored in a _",
    "tabu list _ or _",
    "tabu table_. the process is repeated for a specified number of iterations .",
    "the simulating annealing heuristic also consists of swapping locations of two facilities . in the simulated annealing approach",
    "used here @xcite , each possible swap is considered in turn and @xmath14 , the change in cost for the potential swap , is calculated . the swap is made if @xmath14 is negative or if @xmath15 where @xmath16 is an analog of temperature in physical systems that is slowly decreased according to a specified _ cooling schedule _ after each iteration and @xmath17 is a uniformly distributed random variable between 0 and 1 . randomly making moves which increase the cost is done to help escape from local minima .",
    "pardalos @xcite compared the performance of four algorithms including simulated annealing and tabu search and found that `` all of these approaches have almost the same performance '' .",
    "paulli @xcite compared simulated annealing and tabu search and found that `` when cpu time is taken into consideration , simulated annealing is clearly preferable to tabu search '' . on the other hand",
    ", @xcite finds that  rts ( reactive tabu search ) needs less cpu time than sa to reach average results in the @xmath18 [ of the best known value ] region \" . in 1998 , summarizing the situation , cela @xcite commented that `` there is no general agreement concerning the comparison of the performance of simulated annealing approaches with that of tabu search approaches for the qap '' .",
    "we are not aware of any later work which has clarified the issue .",
    "we address the question of whether tabu search or simulated annealing performs better for the quadratic assignment problem by recognizing that the answer depends on desired solution quality and by :    * defining a performance metric that ensures a fair comparison of different heuristics , * determining the optimal number of iterations for a given target quality for ts and sa for each problem instance ; for a fair comparison of heuristics , it is critical to run each heuristic at its optimal number of iterations for a given target solution quality . * measuring the performance of ts and sa at multiple target qualities .",
    "to fairly compare heuristics , solution quality and time must be taken into account . simulated annealing and tabu search are _ multi - start _ heuristics ; many runs of the heuristic are executed , each with a different random starting configuration .",
    "a commonly used performance metric for multi - start heuristics is the percentage of these runs which attain a specified value of the quality @xmath9 ( typically @xmath19 ) .",
    "however , this metric does nt take run time into account . sometimes , the runs times for individual runs of the heuristics are constrained to be equal but",
    "this is problematic because , as we show below , for a fair comparison each heuristic should be run at the optimal number of iterations for the quality goal @xmath9 .",
    "one method of characterizing the performance of multistart heuristics with different run times employs _ run - time distributions _ of the times needed across multiple runs to achieve a certain quality goal ( see e.g. @xcite ) . instead of using distributions ,",
    "we define the performance metric @xmath20 as the _ average _ time to attain a quality goal of @xmath9 during a set of runs , each run with @xmath21 iterations : @xmath22 where @xmath23 is the cpu time for run @xmath1 and @xmath24 is the number of runs which attain a quality goal of @xmath9 or better .    because one heuristic may perform better depending on the quality goal",
    ", we calculate this performance metric not just for a single quality goal ( e.g. @xmath19 ) but for a range of quality goals .",
    "we use c++ implementations of sa and ts in the public domain to perform our computational experiments . both implementations are by taillard , and are available at http://mistic.heig-vd  .ch",
    "/ taillard/. the ts code implements the robust tabu search of @xcite ; the sa code implements the simulated annealing heuristic of @xcite .",
    "both implementations are straightforward and a few pages each in length .",
    "we run the ts heuristic with parameter settings as described in @xcite ) : tabu list size between @xmath25 and @xmath26 and aspiration function parameter equal to @xmath27 ; there are no settable parameters for the sa implementation .      given a fixed time in which a heuristic can be executed",
    ", there is a tradeoff between the number of iterations per run and the number of runs which can be performed .",
    "the optimal number of iterations per run to reach a quality goal of @xmath9 , @xmath28 , is the value of @xmath21 which minimizes @xmath20 .",
    "we determine @xmath29 as follows : for various values of @xmath21 , @xmath30 , we run each heuristic multiple times and calculate @xmath31 .",
    "then , @xmath32 where @xmath33 thus @xmath34 is the value of the performance metric when the heuristic is run at @xmath28 iterations .    in fig .",
    "[ pi](a ) , using the tai100a problem instance from qaplib @xcite as an example , we illustrate the process of finding the optimal number of simulated annealing iterations for @xmath35 and @xmath36 .",
    "the optimal number of iterations , @xmath37 , for each value of @xmath9 is the well defined minimum value of @xmath38 for each plot . for a given value of @xmath9",
    ", we note the large variation in @xmath38",
    ". we also note the large variation in @xmath37 for the different values of @xmath9 .",
    "thus , choosing a non - optimal value of iterations ( e.g. a single value for the number of iterations for different @xmath9 ) will result in an unfair characterization of the performance of the heuristic .",
    "similarly , fig .",
    "[ pi](b ) , illustrates the process of finding the optimal number of tabu iterations for the instance tai100a for @xmath39 and @xmath40 .    in fig .",
    "[ pi](c ) , we plot @xmath37 , versus q for sa and ts .",
    "for ts , @xmath37 increases as @xmath9 decreases but does not increase below @xmath41 .",
    "we infer that for ts there is no benefit to increasing the number of iterations below this point ; any improvements in quality are gained by running more random starting configurations . on the other hand , sa benefits by increasing the number of iterations as @xmath9 is decreased over the complete range of @xmath9 studied .",
    "the subject of an optimal number of iterations for the quality goal @xmath42 for simulated annealing is treated analytically in @xcite .",
    "we perform computational experiments on the following problem instances from qaplib @xcite representing a range of problem difficulty , type and size .    * tai100a @xcite is a totally unstructured instance consisting of random distance and flow matrices .",
    "* nug30 @xcite , sko100a @xcite , and tho150 @xcite are instances in which the distances are the manhattan distances between locations on a grid .",
    "* lipa90a @xcite is a generated problem instance with a known optimal solution . *",
    "dre110 @xcite is a structured instance consisting of a `` grid '' flow matrix with non - zero entries for nearest neighbors only .",
    "it is part of a series of instances that are specifically designed to be difficult for heuristics .",
    "for each problem instance we execute a series of runs for various values of @xmath21 including : @xmath21 = @xmath43 , @xmath44 , @xmath45 , @xmath46 , @xmath47 , @xmath48 , and @xmath49 for sa and @xmath21 = @xmath50 , @xmath51 , @xmath52 , @xmath53 , @xmath54 , @xmath55 , and @xmath43 for ts . for some instances , additional values of @xmath21",
    "as described above , for each problem instance we determine the value of @xmath34 for various values of @xmath9 .    by plotting @xmath34 for each heuristic",
    "we can compare the performance of the heuristics when they are run with the optimal number of iterations .",
    "[ pcro ] plots @xmath34 versus @xmath9 for the instances studied .",
    "despite differences in details , they all share the characteristic that for each problem instance , there is a value of @xmath9 , @xmath13 , above which ( lower quality ) tabu search performs better  requires less time  than simulated annealing and below which ( higher quality ) simulated annealing performs better .",
    "sa achieves lowest known costs for all but the tai100a instance .",
    "ts achieves the lowest known cost for three of the six instances .    in table",
    "[ table1 ] we list the values of @xmath13 for each of the instances studied . note that if only the value @xmath56 were considered , the conclusion would be simply that sa is better for some instances and ts for others .",
    "this explains why earlier studies of relative performance where not able to draw clear conclusions .      to compare the relative _ hardness _ of the problem instances studied , in fig .",
    "[ pall ] we plot @xmath38 versus @xmath9 for the problem instances in a single panel .",
    "the relative hardness of the instances for a given solution quality is given by the relative value of @xmath38 at that quality .",
    "comparing this figure with table [ table1 ] note that @xmath13 appears to be correlated with the hardness of the problem . with the exception of tai100a , the harder the problem , the higher the value of @xmath13 and thus the wider the range of @xmath9 in which sa performs better than ts .",
    "how do we explain our results that , for each problem instance studied , there is a value of the quality @xmath9 , @xmath13 , above which ts performs better than sa and below which sa performs better ?",
    "a possible qualitative explanation is that ts essentially uses a steepest descent method to quickly find an initial local minimum while sa finds the local minima in a more random way  sometimes making moves which increase the total cost even when moves which reduce the cost could be made first .",
    "hence for high @xmath9 , ts performs better .",
    "once a local minimum is found , however , sa is better able to escape and find a lower minimum .",
    "as opposed to ts , to attain better solution quality it is always better to run fewer sa runs with a higher number of iterations .",
    "areas for future research might address the following questions :    * is similar behavior observed when comparing sa and ts applied to other combinatorially complex problems ? * when optimal numbers of iterations are used for sa and ts within such hybrid heuristics as hybrid genetic search , is the performance of the hybrid heuristic improved ? * how does the performance of other heuristics ( e.g. hybrid , iterated , ant ) compare when taking solution quality into account ? * how are our findings changed if variants of ts are used ?",
    "can sa be modified to also outperform ts at high values of @xmath9 ?",
    "we thank jia shao and eric lascaris for helpful discussions and the defense threat reduction agency ( dtra ) for support .",
    "999                    z. drezner , p.m. hahn ,  .",
    "d. taillard , recent advances for the quadratic assignment problem with special emphasis on instances that are difficult for meta - heuristic methods , annals of operations research 139 ( 2005 ) 65 - 94 .    c. fleurent , j.a .",
    "genetic hybrids for the quadratic assignment problem , in p. pardalos and h. wolkowicz , editors , quadratic assignment and related problems 16 , 173 - 187 .",
    "dimacs series in discrete mathematics and theoretical computer science , 1994 .",
    "t. james , c. rego , f. glover .",
    "multistart tabu search and diversification strategies for the quadratic assignment problem , ieee tran . on systems ,",
    "man , and cybernetics part a : systems and humans bf 39 ( 2009 ) 579 - 596 .",
    "p.m. pardalos , f. rendl , h. wolkowicz .",
    "the quadratic assignment problem : a survey and recent developments .",
    "pardalos , p.m. , wolkowicz , h. , eds .",
    "quadratic assignment and related problems .",
    "dimacs series on discrete mathematics and theoretical computer science 16 , amer .",
    "soc . , baltimore , md .",
    "( 1994 ) 1 - 42 .",
    "p.m. pardalos , l. s. pitsoulis , m. g. c. resende .",
    "algorithm 769 : fortran subroutines for approximate solution of sparse quadratic assignment problems using grasp , acm transactions on mathematical software ( toms ) 23 ( 1997 ) 196 - 208 .",
    "j. paulli . a computational comparison of simulated annealing and tabu search applied to the quadratic assignment problem , in ren v. v. vidal ( ed . ) , applied simulated annealing .",
    "springer - verlag , lecture notes in economics and mathematical systems ( 1993 ) 85 - 102 .",
    "thonemann , a. blte .",
    "an improved simulated annealing algorithm for the quadratic assignment problem .",
    "working paper , school of business , department of production and operations research , university of paderborn , germany , 1994 ."
  ],
  "abstract_text": [
    "<S> for almost two decades the question of whether tabu search ( ts ) or simulated annealing ( sa ) performs better for the quadratic assignment problem has been unresolved . to answer this question satisfactorily , we compare performance at various values of targeted solution quality , running each heuristic at its optimal number of iterations for each target . </S>",
    "<S> we find that for a number of varied problem instances , sa performs better for higher quality targets while ts performs better for lower quality targets .    </S>",
    "<S> combinatorial optimization , computing science , heuristics , tabu search , simulated annealing </S>"
  ]
}
{
  "article_text": [
    "numerical cosmological simulations are now widely used to assess properties of various cosmological models and to study theoretical aspects of large - scale structure evolution . the variety of numerical methods employed ranges from high resolution collisionless @xmath1-body simulations ( e.g.  davis et al .",
    "1985 ; park 1990 ; bertschinger & gelb 1991 ; gelb & bertschinger 1994a , 1994b ; xu 1995 ) to sophisticated gas dynamics methods ( e.g.  cen & ostriker 1992a ; katz , hernquist , & weinberg 1992 ; evrard , summers , & davis 1994 ; bryan et al . 1994 ; summers , davis , & evrard 1995 ) to numerical algorithms that at some level include galaxies together with collisionless dark matter and intergalactic gas as a distinct third component of a simulation ( cen & ostriker 1992b , 1993a , 1993b ; frenk et al . 1995 ; gnedin 1996a , 1996b )",
    ".    however , not all of these simulation methods are reliably tested and well understood .",
    "historically , collisionless @xmath1-body methods have been subjected to the most detailed study and testing .",
    "the theory of @xmath1-body methods is well developed and their errors and limitations are well understood ( hockney & eastwood 1981 ; efstathiou et al .",
    "cosmological hydrodynamics methods range from eulerian hydrodynamic techniques borrowed from engineering applications ( cen et al .",
    "1990 ; ryu et al .",
    "1993 ; bryan , norman , & ostriker 1995 ) to quasi - lagrangian methods that include the `` smooth particle hydrodynamics '' ( sph ) method ( evrard 1988 ; hernquist & katz 1989 ) and `` moving mesh approach '' ( mma ) ( gnedin 1995 ; pen 1995b ) .",
    "unfortunately , currently there is no full understanding of errors and specifics of various hydrodynamic methods . the first comparisons between various cosmological methods ( kang et al .",
    "1994 ; see also gnedin 1995 ) demonstrated that differences between various methods can be so substantial that only a few statistical quantitative results are consistent between different methods .",
    "further work on comparison of various numerical techniques is therefore required to support quantitative results of cosmological hydrodynamical simulations .",
    "since the moving mesh approach is the most recent and therefore least understood , it requires special attention in comparing it with other existing numerical techniques . in this paper",
    "we concentrate on comparing an implementation of the moving mesh approach called softened lagrangian hydrodynamics ( slh ; gnedin 1995 ) with existing @xmath1-body techniques .",
    "one possible advantage of the moving mesh approach is that it offers a way to calculate gravitational forces with high resolution without employing a `` particle '' approach like p@xmath0 m or tree .",
    "since the moving mesh represents a single - valued coordinate transformation from quasi - lagrangian space into real ( physical ) space , the poisson equation in real space can be reduced to an elliptic partial differential equation in quasi - lagrangian space , which can then be solved by the standard numerical techniques . in the slh method thus calculated the gravity force has also the virtue of having _ exactly _ the same resolution as the hydrodynamic solver has ( we elaborate below what this actually means ) .",
    "there are also efforts under way to develop a purely @xmath1-body version of the moving mesh approach ( pen 1995a ) .",
    "the moving mesh approach looks very promising since it has higher spatial resolution in dense regions than eulerian codes for the same amount of computational resources and is substantially faster than sph methods for the same spatial resolution .",
    "we , therefore , undertook to investigate its accuracy by comparing slh with the p@xmath0 m gravity solver .",
    "our detailed tests however have uncovered two serious problems with the moving mesh gravity solver which have not been discussed in the literature ; the problems we found may appear in a wide range of algorithms , so we report them in this paper .",
    "the first problem is the discreteness noise ( shot noise ) in high density regions .",
    "it is well known that the shot noise does not represent a serious problem in traditional gravity solvers ( hernquist , hut , & makino 1993 ) , where force errors effectively average out in high density regions ; however , in the moving mesh approach the relationship between the density and the gravitational force is nonlinear , with the nonlinearity coming from the nonlinear dependence of the volume of a mesh element on the force acting on it . in this case",
    "the shot noise does not necessarily average out as in the linear case , leading to spurious numerical heating of high density regions .",
    "secondly , a solution to the finite - difference realization of the poisson equation on a strongly deformed mesh does not necessarily converge to the true solution , giving the incorrect force law .",
    "we propose a solution to the first problem in  2 , but can not resolve the second one .",
    "we have therefore been forced to abandon the moving mesh gravity solver and have turned instead to a p@xmath0 m gravity solver that is known to work correctly and accurately .",
    "however , while developing the new slh - p@xmath0 m code , we encountered another problem which is generic for ( and potentially present in ) any self - gravitating hydrodynamic code , not only a moving mesh code : since the gravity force solver and the hydrodynamic solver may treat spatial gradients differently , they are not a priori consistent with each other",
    ". this inconsistency may lead to a serious local nonconservation of energy even if , globally , energy is well conserved .",
    "we discuss this effect in detail in  3 , where we also derive the `` consistency condition '' that every cosmological hydrodynamic code must obey in order to be energy conserving and apply it in  4 to develop a new slh - p@xmath0 m code . finally , we repeat some of the kang et al . ( 1994 ) tests for the new code in  5 .",
    "we summarize our conclusions in  6 .",
    "the softened lagrangian hydrodynamics method was extensively tested in gnedin ( 1995 ) ; however , the main emphasis there was on the hydrodynamic properties of the code .",
    "later , we proceeded to test the gravitational solver of the slh code and discovered interesting problems with the moving mesh gravity solver and potentially with self - gravitating hydrodynamic solvers in general .",
    "the purpose of this paper is to report the results of those tests and our solutions to the problems .",
    "we have chosen a cdm+@xmath2 model as a framework for our tests .",
    "the cosmological parameters we use are as follows : @xmath3 , @xmath4 , and @xmath5 .",
    "we use the bbks transfer function ( bardeen et al . 1986 ) to set up initial conditions .",
    "the model is _",
    "cobe_-normalized and is in a reasonable agreement with all existing large- and intermediate - scale observations ( kofman , gnedin , & bahcall 1993 ; peacock & dodds 1994 ; ostriker & steinhardt 1995 ) .",
    "we have run several simulations with @xmath6 and @xmath7 grids all of them having the initial ( eulerian ) comoving cell size ( or , equivalently , the mean interparticle separation ) equal @xmath8 , and , thus , a @xmath6 simulation has a @xmath9 box size and a @xmath7 simulation has a @xmath10 box size .",
    "we set both the p@xmath0 m and slh softening parameter to @xmath11 ( the softening length is @xmath12 ) and keep it constant throughout our tests .",
    "our simulations have box sizes too small to be of interest for large - scale structure formation at the current epoch , but they have sufficient resolution to push simulations into the highly nonlinear regime to test the slh method in challenging conditions .",
    "in addition , we assume that the gas is `` adiabatic '' , i.e.  no radiative processes like cooling or ionization are taken into account . our current goal is to investigate in detail gravitational properties of the slh code and , therefore , we do not need to complicate our tests with radiative physics .",
    "we mostly concentrate on properties of the largest clumps found in our simulations , unlike kang et al .",
    "( 1994 ) , who mainly concentrated on some average statistical properties of gas simulations with different sizes .",
    "first , we have run slh and p@xmath0 m @xmath6 simulations with identical initial conditions and with @xmath13 for the slh code ( the slh code is thus used as a collisionless @xmath1-body solver , however , the hydrodynamic part is used to follow the mesh deformation as the mesh is tied to baryonic gas in the slh method ) .",
    "fig.[figsf ] shows dark matter particles in a subvolume of these simulations containing the largest clump at current epoch .",
    "the lower left panel shows particle positions for a slh simulation , and the lower right position shows p@xmath0 m particles .",
    "one can easily see that the slh method fails to produce a clump nearly as dense as the p@xmath0 m clump . in our comparison",
    "we explicitly assume that the p@xmath0 m gives results that are correct for dark matter ( @xmath13 ) up to the softening length and we use it as a template against which to compare the slh results .    for comparison",
    ", we have also run the same slh simulation but with @xmath14 , which implies that the dark matter does not gravitate .",
    "the corresponding subvolume is plotted in fig.[figsf ] , upper left panel , and , as can be easily seen , there is much better agreement between the slh and p@xmath0 m simulations in that case .",
    "we must therefore ask ourselves what is the difference between the slh @xmath13 and slh @xmath15 cases that causes such a significant deviation .",
    "there are two principal differences between dark matter only and gas only simulations with slh .",
    "first , the dark matter density assignment uses the cloud - in - cell method to assign the dark matter density on a quasi - lagrangian mesh ( as explained below ) , and this assignment suffers from discreteness noise ( or , in other words , shot noise ) .",
    "second , the baryonic pressure tensor is isotropic , whereas the dark matter pressure tensor is not .",
    "however , the second reason can not explain why a cluster failed to form with @xmath13 slh , since in the p@xmath0 m simulation the dark matter has anisotropic pressure tensor as well , but a dense cluster forms .",
    "we conclude therefore that it is the slh density assignment scheme that is responsible for the cluster diffusion problem .    in order to elaborate on this effect , we recall the basic ingredients of the moving mesh approach in general and the slh method in particular ( the reader should refer to gnedin ( 1995 ) for complete explanation of notation and terminology ) .",
    "let us consider a general coordinate transformation , which connects the real space coordinates , @xmath16 , with some other coordinate system @xmath17 , which we will call `` quasi - lagrangian '' hereafter , @xmath18 there are no restrictions on @xmath17 up to now , but we will assume in the following that the new coordinate system @xmath17 has the property that it redistributes numerical resolution into high density regions . the important quantity that controls the degree of deformation between coordinate systems @xmath16 and @xmath17 is the _ deformation tensor _",
    ", @xmath19 then the density of gas or dark matter can be represented as @xmath20 where @xmath21 is the determinant of the deformation tensor @xmath22 , @xmath23 and @xmath24 is the quasi - lagrangian density , or , in other words , the mass of a fluid element having a unit volume in quasi - lagrangian space @xmath17 .",
    "note that quasi - lagrangian coordinates may deviate significantly from exactly lagrangian ones ; i.e. , for a given mass element @xmath17 need not be constant .    in a moving mesh approach ( and , therefore , in the slh code as well ) , coordinates @xmath16 are real space images of vertices of a uniform mesh in quasi - lagrangian space , @xmath25 , @xmath26 , @xmath27 .",
    "since @xmath21 , as a function of the deformation tensor , is the property of the mesh , it is a smooth function of position ( as smooth as the actual mesh equation allows it to be ) . for baryonic gas",
    ", @xmath28 is also a smooth function of position since it represents the mass of the gas in a cell ; for a fully lagrangian flow @xmath29 .",
    "however , this is not necessarily true for the dark matter density , which may , therefore , have large gradients in @xmath30-space . in the slh approach the dark matter density that sources the right hand side of the poisson equation is determined by assigning dark matter mass to cells in the quasi - lagrangian space with the cloud - in - cell technique : @xmath31 in voids where , by construction , there are always almost the same number of dark matter particles per cell ( since in voids the baryonic flow is lagrangian and the pressure is negligible , dark matter velocity is equal to the gas velocity at the same position and , therefore , both the dark matter and baryons move simultaneously in voids ) , and , therefore , @xmath32 is a smooth function of position and is almost constant .",
    "( it would be exactly constant before dark matter shell crossing and before gas shocking if the pressure in voids was zero and quasi - lagrangian space was exactly lagrangian . )",
    "this is not so in high density regions .",
    "dark matter particles wander around in a cluster while the mesh does not move substantially .    in eulerian pm codes",
    "the density fluctuations are a less severe ( while still existing ) problem since there are many dark matter particles per one pm cell in a high density region and the dark matter density is determined accurately with the cloud - in - cell method . however , in the moving mesh approach , if the number of dark matter particles is equal to the number of baryonic cells , there is on average one ( or slightly more than one if the dark matter is more concentrated than the baryons ) dark matter particle per cell even in the highest density region since the high density is achieved not by collecting many particles in one immobile cell but by shrinking a cell to small volume keeping its mass approximately constant .",
    "if these particles are distributed randomly with respect to the mesh , i.e.  if all @xmath33 are random positions , equation ( [ dmdencic ] ) would predict that @xmath32 fluctuates on a scale of one cell with the amplitude comparable with its mean value .",
    "that means that the density @xmath34 in clusters would fluctuate with the amplitude comparable with its mean value even in the cluster center . since particles move , the dark matter density will fluctuate both spatially and temporally .",
    "the temporal fluctuations , however , seem to be less serious since the gravitational time scale in clusters is usually larger than the hydrodynamic courant time scale .    such enormous fluctuations will produce fluctuations in the gravitational potential ; it has been shown ( hernquist , hut , & makino 1993 ) that those fluctuations effectively average out for traditional gravity solvers . however , in the moving mesh approach the situation is different . since the mesh is usually driven by gravity force , and the gravity force itself is calculated on the mesh , there is a nonlinear dynamical relation between the gravitational force and , say , the density defined on the mesh ( with nonlinearity coming from the nonlinear dependence of the deformation tensor on the gravitational force ) .",
    "therefore , the traditional analysis ( hernquist , hut , & makino 1993 ) , where the relation between the force and the density is linear , does not apply and force errors do not necessarily average out as in the linear case .",
    "the nonlinearity between the density and the force also serves as a dissipative numerical mechanism , which leads to eventual blowing up of a cluster .",
    "we would like to stress here that this effect is a direct consequence of the shot noise effect in clusters , when in the moving mesh approach there are only a few dark matter particles per cell even in the highest density regions .",
    "it is easy to demonstrate that this shot noise effect is indeed present in moving mesh gravity solvers .",
    "first , we noticed above , that this effect is absent when the baryons instead of the dark matter is gravitationally dominant , and @xmath28 is always a smooth function of position .",
    "second , we can define @xmath32 as a smooth function of position if we smooth it in quasi - lagrangian space .",
    "this procedure will not significantly degrade the resolution since it is @xmath21 , not @xmath32 , that carries the high resolution .",
    "the smoothing will not affect voids since @xmath32 is almost constant in voids ; it will affect places where the dark matter density is physically different from the baryon density , i.e.  near shocks .",
    "we can hope however that these regions occupy a small fraction of the total volume , and , what is more important , they do not dominate the gravitational potential .    to test the shot noise hypothesis",
    "we have run another slh simulation where we have smoothed the quasi - lagrangian dark matter density @xmath32 entering the right hand side of the poisson equation with a gaussian filter with width equal to three cell sizes in quasi - lagrangian space ( we would like to stress that this is _ not _ equivalent to smoothing the dark matter density , since the factor @xmath21 remains unsmoothed ) . the resulting particle positions are plotted in fig.[figsf ] , upper right panel .",
    "one can easily see that a cluster is now formed .",
    "fig.[figsp ] shows density profiles for the clusters in these four cases after the cluster was identified with the denmax algorithm ( bertschinger & gelb 1991 ) . the slh gravity with smoothing is perhaps a factor of 1.5 softer than the plummer law for these simulations .    in order to test the moving mesh gravity further ,",
    "we have performed two @xmath7 simulations with the parameters described above : one is a p@xmath0 m simulation and the other one is a slh simulation with @xmath13 and dark matter smoothing as explained in the previous paragraph .",
    "particles around the heaviest cluster in the two simulations are plotted in fig.[figst ] in the right and left hand panels respectively .",
    "one can see that at higher resolution ( @xmath7 vs @xmath6 in fig.[figsf ] ) the slh cluster again diffuses outwards .",
    "fig.[figsq ] shows the density profile for the cluster .",
    "obviously , the slh gravity effectively softens at a scale a factor of 6 or 7 larger than the formal softening length .",
    "since the effect of shot noise in high density regions is eliminated in the slh simulation , one has to admit the existence of yet another problem with the slh gravity .    in order to investigate the accuracy of the slh poisson solver we calculated point mass gravitational forces for ten randomly chosen positions on the slh mesh taken from the @xmath7 slh simulation at @xmath35 .",
    "the corresponding force laws are plotted in fig.[figgf ] , left panel .",
    "since points are chosen randomly on a mesh , their effective smoothing lengths are different ( for example in a void gravitational smoothing is larger than the original cell size since a cell in a void has expanded during the evolution ) ; in general , however , there is an acceptable agreement between the slh point mass force and @xmath36 law ( dotted line in fig.[figgf ] ) .",
    "now , instead of ten randomly chosen points , we picked up two points that lay close to the center of the biggest cluster in the slh simulation .",
    "their point mass force laws are plotted in fig.[figgf ] with solid lines .",
    "these laws deviate significantly from the @xmath37 law at 5 to 6 softening lengths even if these cells have sizes of the order of a softening length .    what causes these errors in gravity in a cluster ?",
    "in order to test if it is due to the loss of accuracy in the finite differencing of the gravitational potential , instead of solving the poisson equation @xmath38 we solved three poisson equations for each of force component separately , @xmath39 which eliminates the need to differentiate the potential but requires at least three times the cpu time used by the potential solver",
    ". the corresponding point mass force law is plotted with the thin dashed line in the right panel of fig.[figgf ] . while there is some improvement in solving for the force compared to solving for the potential , it is obviously insufficient to improve the moving mesh gravity solver .",
    "we specifically stress here that in this test , the specifics of the slh algorithm come only with the strongly deformed mesh ; the poisson solver is a _",
    "generic _ feature of any moving mesh approach and it is this that fails .",
    "we , thus , have encountered another problem with the moving mesh gravity : when the mesh is strongly deformed , the poisson solver occasionally gives incorrect results .",
    "it seems quite difficult to find out what specifically is wrong with the poisson solver or what properties of the mesh cause such a big error .",
    "it is also not clear if the less deformed mesh has the same problem but less pronounced so that it avoids clear recognition .    even if the problem we have highlighted appears only in small volume of the whole simulation",
    ", there is no guarantee that the rest of a simulation is correct or has a specified resolution . until the specific problem with the moving mesh gravity",
    "is identified and resolved , we feel that it is unsafe to use the moving mesh gravity solver for cosmological simulations .",
    "the full analysis of poisson solver errors on strongly deformed meshes is beyond the frame of this paper and , therefore , we have decided to abandon the moving mesh gravity solver and proceed into combining the slh hydrodynamic method with the p@xmath0 m solver which is known to give correct results ( bertschinger 1991 ) .",
    "we shall see that merging these codes introduces another problem to solve .",
    "we now imagine building a cosmological hydrodynamic code by combining separate hydrodynamic and gravity solvers together . both methods can calculate hydrodynamic and gravitational forces on a resolution element scale quite differently , and there is a priori no guarantee that these two methods would be consistent with each other .",
    "let us consider an example .",
    "let us imagine that we constructed an isothermal gas sphere ; we utilize so many resolution elements ( cells or particles ) , that we do not have to worry about relaxation processes .",
    "we now insert this object into a hydro+gravity code which has gravitational force softening much shorter than the pressure force softening .",
    "the object , which would be in real physical equilibrium ( i.e.  in equilibrium with exact force laws for both gravity and pressure force ) , would collapse further since the softened gravity force would be stronger than the softened pressure force due to larger pressure force softening .",
    "the object would thus form a small and dense clump that is a purely numerical artifact .",
    "this process is an example of a more general inconsistency between hydro and gravity solvers that we discuss in detail below .",
    "let us consider the hydrodynamic equations with self - gravity in a general coordinate system @xmath17 as defined above ( at this point we do not require that the coordinate system @xmath17 be close to lagrangian ; in particular , it may be fully eulerian when @xmath40 ) .",
    "let @xmath41 be the density , @xmath42 be the velocity , @xmath43 be the pressure , @xmath44 be the total energy density , and @xmath45 be the gravitational force per unit mass of the fluid with the polytropic index @xmath46 .",
    "the euler equations in a coordinate system @xmath17 read :    @xmath47    @xmath48    and @xmath49 where [ mixed ]    the deformation tensor @xmath22 has been defined above , @xmath50 is the matrix inverse to @xmath22 , @xmath51 @xmath52 is the determinant of the deformation tensor , which is equal to the volume in real space of a fluid element with the unit volume in quasi - lagrangian space @xmath17 , @xmath53 , @xmath54 is the quasi - lagrangian mass density , @xmath55 @xmath56 is the quasi - lagrangian total energy density , @xmath57 and @xmath58 with the dot standing for the partial time derivative , @xmath59 .",
    "if we now consider a hydrodynamic code that solves these equations , we must interpret the spatial derivative @xmath60 as a numerical derivative ( for example , a finite difference derivative for a mesh - based code ) , and we denote it as @xmath61 , and we must include numerical dissipation terms responsible for shock handling and stability .",
    "let us introduce a numerical density flux correction @xmath62 , a numerical momentum flux correction @xmath63 , a numerical total energy flux correction @xmath64 , and a numerical gravitational energy correction @xmath2 through the following formulas :    @xmath65    @xmath66    and @xmath67 among those four , only @xmath62 and @xmath2 will be of interest to us .",
    "[ mixednum ]    we now want to establish the total energy conservation .",
    "the total energy can be represented as the sum of the total gas energy , @xmath68 and the gravitational energy , @xmath69 where we understand integrals in a numerical sense and denote this by index @xmath1 , and @xmath70 is a gravitational potential , and is determined by the following equation : @xmath71 and @xmath72 is a green function for a gravity solver .",
    "it is important to note here that this function is arbitrary , and , therefore , our consideration is equally applicable to a softened gravity law as well as to the @xmath37 law .",
    "moreover , we do not need to specify a softening length for the gravity .",
    "it will be shown below that the problem of inconsistency does not reduce to the problem of different resolution scales for gravity and gas and is more generic .",
    "we now demand ( neglecting cosmological expansion for the moment ) that @xmath73 it can be easily seen that @xmath74 provided the numerical integral of a numerical divergence is zero ( we assume that this is the case ) . for the time derivative of the gravitational energy , we obtain : @xmath75 d^3q .",
    "\\label{dwdt}\\ ] ] it is important to note that the derivative with respect to @xmath16 that enters the last equation is a _ full derivative _ , not the numerical one . we can introduce the new quantity , @xmath76 , defined as : @xmath77 d^3q ,      \\label{hatfidef}\\ ] ] which is the true gradient ( with the minus sign ) of a numerical gravitational potential , i.e.  the gradient which will be computed in a simulation , in which all spatial gradients are computed mathematically exactly ( for example , a p@xmath0 m code possesses this property ) .",
    "note , that due to the finite number of resolution elements in a real simulation , @xmath45 is not necessarily equal to @xmath76 , but rather is a numerical approximation to it . equation ( [ dwdt ] ) can now be written as follows : @xmath78    we now assume that the numerical derivative @xmath79 obeys the product rule , i.e.@xmath80 this is true for dimensionally split mesh codes with central differences and can be true in sph codes with appropriate choice of weightening scheme ; it is generally not true in the slh code since it is not dimensionally split , and , therefore , the slh code has additional energy errors compared to dimensionally split mesh codes .",
    "( these errors are typically small and random and seem not to contribute significantly to the total energy error , although , in principle , nothing prevents them from causing a significant energy error . )",
    "then we can use equation ( [ mixeddnum ] ) to reduce equation ( [ dwdtb ] ) to the following expression : @xmath81 combining both equation ( [ dedt ] ) and equation ( [ dwdtc ] ) with equation ( [ energyconserv ] ) , we finally obtain : @xmath82       d^3q = 0 .",
    "\\label{consista}\\ ] ]    we can immediately derive the form for @xmath2 from the equation ( [ consista ] ) taking into account that @xmath2 is the numerical correction to the gravitational energy change and it must vanish when @xmath62 vanishes : @xmath83 now we are left with the following equation , which must be satisfied if the energy is to be conserved : @xmath84       d^3q = 0 .",
    "\\label{consistb}\\ ] ] let us examine this carefully .",
    "there are three gravitational forces that enter this equation : the original force that a full gravity solver provides , @xmath85 , the force that the hydrodynamic code feels , @xmath45 , and the numerical gradient of the gravitational potential , @xmath86 .",
    "the last expression is the gradient of a scalar function as the hydrodynamic code understands it ; for a mesh - based code it is a finite difference , for a sph - like code it is the function values weighted by the gradients of the kernel , etc .",
    "if we require that the self - gravitating hydrodynamic code should conserve energy everywhere and for all possible cases , we must satisfy the _ gravitational consistency condition _ at every resolution element : @xmath87 strictly speaking , we may add a divergence term , which always can be hidden into @xmath64 .",
    "this condition should be considered as a restriction that the gravitational force @xmath45 should satisfy in order for the self - gravitating hydrodynamic code to be energy conserving .",
    "it is instructive to consider some special cases :    1 .   a fully lagrangian code ( in particular , sph ) .",
    "for a fully lagrangian code @xmath88 and equation ( [ consist ] ) is satisfied if @xmath89 .",
    "thus , any gravitational solver is consistent with the fully lagrangian code ; in other words , a fully lagrangian code is a priori consistent with a gravity solver and no special care should be taken to satisfy the consistency condition .",
    "2 .   a fixed mesh finite - difference code ( in particular , a fully eulerian finite - difference code ) . for this case",
    ", we can assume @xmath90 and the consistency condition is satisfied if @xmath91 we conclude , therefore , that it is essential that the gravitational force in a fixed mesh code be a finite difference gradient of the gravitational potential .",
    "in particular , in a pm + eulerian finite - difference code combination it is the gravitational potential that should be calculated in the pm part , and not the force .",
    "3 .   a riemann solver . in this case",
    "the numerical gradient @xmath61 is actually a riemann solver ; it is not straightforward to represent the gravitational force as the gradient of a potential in this case ; rather it is easier to incorporate the gravitational force into the riemann solver itself as : @xmath92 where notation @xmath93 means the riemann solver with the gravitational force incorporated in it ; in particular , this is the way the kronos code works ( bryan et al .",
    "4 .   a moving mesh gravity code ( i.e.  a code that uses the moving mesh gravity as a gravity solver ) . strictly speaking , for this case equation ( [ phi ] )",
    "does not hold , but we can still consider it here recalling that @xmath94 for a moving mesh gravity code . in that case @xmath45",
    "is also equal to both @xmath76 and @xmath95 and the consistency condition holds .",
    "thus , the consistency condition is usually satisfied for most of currently used numerical techniques .",
    "let us consider here a simple example .",
    "let us imagine that we have a one - dimensional eulerian finite - difference hydrodynamic code ( so that the product rule [ [ productrule ] ] is always satisfied ) that keeps all hydrodynamic quantities at the centers of equal cells numbered by index @xmath96 ( where @xmath1 is the number of cells and the periodic boundary condition is assumed ) , so that the gas density at the cell @xmath97 is @xmath98 , the energy density is @xmath99 etc .",
    "this code is combined with the pm gravity solver that uses the gas density @xmath98 to solve the poisson equation ( using , say , the fft technique ) @xmath100 ( we assume here @xmath101 for simplicity ) to obtain the gravitational potential @xmath102 at the cell centers , derives the gravitational force @xmath45 acting at the cell center by finite differencing the potential , @xmath103 and uses it to update the gas velocity @xmath104 .",
    "the code constructed this way conserves total energy exactly ( provided the hydrodynamic part conserves the kinetic plus thermal energy exactly , as is the case for conservative schemes ) as explained above , i.e.  it satisfies the consistency condition .",
    "now let us imagine that one decides to replace the pm gravity solver with the exact gravity solver , which calculates the exact gravitational potential @xmath105 and force @xmath106 given the density distribution : @xmath107 ( one can achieve this , for example , by using the pm gravity solver with a much finer mesh . ) if one now uses the exact gravitational force @xmath108 to update the gas velocity @xmath104 , the consistency condition will not be satisfied , and local energy errors will be introduced .",
    "however , if one uses the exact gravitational potential @xmath105 and calculates the gravitational force @xmath109 using ( [ ex1force ] ) with the new potential , the energy conservation will be restored even if the exact gravitational potential @xmath105 is different from the potential @xmath70 obtained by solving the poisson equation on the hydrodynamic mesh .",
    "thus , the consistency condition requires a consistent treatment of the gravitational potential and forces in the dark matter and gas .",
    "we would like to stress here again that the consistency condition is not equivalent to having gravity and pressure force softening commensurate ; the green function in ( [ phi ] ) allows for any value for the gravitational softening parameter ; more that that , since the shape of the green function is not specified , it is not required that the force @xmath45 be actually gravitational force ; any potential force solver ( for example , molecular forces ) should satisfy the consistency condition similar to equation ( [ consist ] ) .",
    "this comment would imply that the requirement of having gravitational and pressure softenings commensurate is an _",
    "additional _ requirement a self - gravitational hydrodynamic code must satisfy .",
    "we now turn to constructing a slh - p@xmath0 m code , where the gravity force is calculated by a p@xmath0 m solver and the mesh velocity @xmath110 is not necessarily equal to the fluid velocity @xmath42 . in this case",
    "it is impossible to solve equation ( [ consist ] ) exactly , and only an approximate solution can be proposed .",
    "we start by noting that the slh mesh equation , i.e.  the equation that connects @xmath110 and @xmath42 in the slh approach , @xmath111 ,          \\label{xdotlaplace3d}\\ ] ] is a galilean invariant modification of the following equation : @xmath112 ( here @xmath113 is the softening tensor that vanishes in the lagrangian limit and approaches @xmath114 in the eulerian limit ; for full definitions see gnedin ( 1995 ) or appendix a ) .",
    "if we consider @xmath110 from equation ( [ xdotdirect3d ] ) as an approximation to @xmath110 derived from equation ( [ xdotlaplace3d ] ) and substitute ( [ xdotdirect3d ] ) into ( [ consist ] ) , we obtain the following ( galilean invariant ) equation : @xmath115 this equation will serve as our definition for the gravity force on the gas in the slh - p@xmath0 m code .",
    "both @xmath76 and @xmath70 are obtained by means of a p@xmath0 m code and @xmath45 is the gravitational force applied to the baryonic gas .",
    "the forces on the dark matter particles are given instead by @xmath108 .",
    "tests also show that the following simplified version of equation ( [ ficonsist ] ) is a good choice as well : @xmath116 where @xmath117 is the maximum eigenvalue of the softening tensor @xmath118 .",
    "one can note that , again , in the fully lagrangian ( @xmath119 ) case @xmath120 , while in the fully eulerian ( @xmath121 ) regime @xmath122 .",
    "equations ( [ ficonsist ] ) and ( [ ficonsistmax ] ) have a remarkable feature that they _ guarantee the commensurate softenings for both gravity and pressure _ for the slh code , since the slh code switches from lagrangian to eulerian description as density increases and , therefore , the gravitational force at the resolution limit is the gradient of scalar function in the way the hydrodynamic solver understands a gradient ; gravitational and pressure resolutions for the gas are again _ exactly _ equal as with the original slh code .",
    "however , since the dark matter particles are acted upon by the force @xmath108 , the gravitational resolution for the dark matter component need not be ( but , of course , may be set ) equal to the gravitational resolution for the gas component .",
    "now we turn to the details of implementing slh - p@xmath0 m .",
    "there exist two distinct ways to combine slh hydro and p@xmath0 m gravity codes ( and many intermediate variants ) .    the first one , which we call a `` maximally coupled '' code , implies that dark matter `` lives '' in quasi - lagrangian space like in the original slh code ; then the p@xmath0 m part is used to calculate forces acting on vertices of the mesh , where the mass in a vertex is found by linear interpolation from the cell centers and the mass of a cell is determined by the total mass of dark matter , gas , and , possibly , galaxies in the cell .",
    "this approach requires calculating the p@xmath0 m force only on @xmath123 mesh vertices , however , since the mesh is tied to baryons , the maximally coupled version fails to follow accurately places where the dark matter density differs significantly from the gas density , like cores of big clusters .",
    "the second variant , which we call a `` minimally coupled '' code , allows dark matter to evolve in real space similar to existing sph approaches .",
    "the mesh is then considered to represent the baryonic gas only , and only the gas mass is included in computing the cell mass .",
    "this variant of the slh - p@xmath0 m code does not suffer from the limitations of the minimally coupled mode , but requires substantially more cpu time since computing of the gravitational force acting on both @xmath123 grid cells and @xmath124 dark matter particles is required .",
    "for the most common case @xmath125 this would require twice the pm time and four times the pp time of the maximally coupled code . when combined with the hydrodynamic part , this averages out to a minimally coupled mode being approximately 2.5 times slower than the maximally coupled mode .",
    "we now proceed to testing the slh - p@xmath0 m code .",
    "since , in addition to the mesh softening of slh , the p@xmath0 m gravity solver introduces a plummer softening , the new slh - p@xmath0 m code has two softening lengths . in what follows we set these two softenings equal @xmath11 so that our simulation resolution will not exceed that of a pure @xmath1-body template run ; in principle , the gravitational force acting on the gas can be computed with vanishing plummer softening since the mesh softening will prevent exceedingly small scales from being resolved .",
    "therefore , in the maximally coupled mode , when the dark matter , being placed on the baryonic mesh , is subject to the mesh softening , the plummer softening can be assumed arbitrary small thus squeezing the last drop of resolution from the simulation .",
    "one must note , however , that in that case the resolution becomes even more anisotropic and nonuniform across the simulation volume .",
    "first , we would like to demonstrate the importance of the consistency condition .",
    "figure [ figpt ] shows the gas distribution of the biggest clusters in two 32@xmath0 baryons - only ( @xmath15 ) simulations ( cf .",
    "fig.[figsf ] ) : the left panel shows the results for the simulation where no consistency condition was applied , and the gravitational force acting on gas was directly provided by the p@xmath0 m part of the code ; the right panel shows the same cluster in the simulation where the consistency condition of the form ( [ ficonsistmax ] ) was incorporated in the code ( we remind the reader that the corresponding @xmath1-body result is plotted in the lower right panel of fig.[figsf ] ) .",
    "it is easily seen that without the consistency condition most of the gas sinks to the very center of the cluster thus violating energy conservation .",
    "this effect of gas sinking toward the cluster center can be solved without consistency condition by simply smoothing the gravitational force on a scale of a cell size ; in that case the gravity force would have approximately the same softening as the pressure force .",
    "this , nevertheless , would _ not _ solve the problem since the cluster profile would still be significantly different from the @xmath1-body results due to local nonconservation of energy .",
    "since the original slh method failed substantially only at the resolution of a 64@xmath0 mesh , we ran a 64@xmath0 @xmath15 minimally - coupled slh - p@xmath0 m simulation ( the case @xmath126 coincides with the pure @xmath1-body result ) .",
    "the profiles for the two largest clusters in the simulation shown in fig.[figpq ] together with the pure @xmath1-body result ( the solid line ) .",
    "the dashed line shows the dark matter profile and the dotted line shows the gas profile .",
    "while the dark matter is fairly consistent with the pure @xmath1-body profiles , the gas distribution has much larger cores .",
    "however , we can not attribute this purely to lack of resolution : recent high resolution simulations have also found this effect ( navarro , frenk & white 1995 ) . we thus conclude that the agreement is acceptable and proceed to further test the new slh - p@xmath0 m code .",
    "in this section we repeat all the major tests of kang et al .",
    "( 1994 ) to assess differences between the repaired slh code and other hydrodynamic codes .",
    "we performed three simulation with 32@xmath0 , 64@xmath0 , and 128@xmath0 mesh sizes with initial conditions of kang et al .",
    ", @xmath127 box size ; initial conditions were defined on a 64@xmath0 mesh ; for the 32@xmath0 simulation every other value along each dimension was taken , and for 128@xmath0 simulation linear interpolation was used to determine initial values on a 128@xmath0 mesh .",
    "note , that the latter procedure in fact adds some small scale power to the initial conditions and it is incorrect to say that the 128@xmath0 slh - p@xmath0 m simulation and the 128@xmath0 and 256@xmath0 eulerian simulations of kang et al .",
    "( 1994 ) have the same initial conditions as the 64@xmath0 simulations . in particular , the lack of convergence in the kang et al . ( 1994 ) eulerian simulations is , due at least partially , to this effect . however , we show results of a 128@xmath0 simulation as a comparison with larger eulerian simulations since the initial condition for our 128@xmath0 simulation are similar to 128@xmath0 eulerian simulations of kang et al .",
    "( 1994 ) . ]",
    "the total energy error in terms of the quantity @xmath128 defined in ryu et al .",
    "( 1993 ) for the slh - p@xmath0m64 run is plotted in fig.[figee ] .",
    "one can see that the total energy error fluctuates around 1% , which is better than most existing cosmological hydrodynamic codes ( see table 1 of kang et al .",
    "1994 for comparison ) .",
    "the final data for each simulation were rebinned onto a uniform 16@xmath0 mesh , and integral properties of the resulting 16@xmath0 solution were calculated .",
    "figure [ figcc ] compares these against each other and against other codes shown in earlier work ( kang et al .",
    "1994 ; gnedin 1995 ) .",
    "plotted on four panels are the volume averaged temperature @xmath129 , the mass averaged temperature @xmath130 , the rms density fluctuation @xmath131 , and the total x - ray luminosity @xmath132 in some arbitrary units .",
    "four other cosmological codes are presented together with the slh code described in this paper ; two eulerian hydrodynamic codes : the cen - ostriker - jameson code ( cen et al .",
    "1990 ; filled squares ) , the tvd code ( ryu et al . 1993 ; filled circles ) , and two sph codes : tree - sph of hernquist & katz ( 1989 ; open triangles ) and p@xmath0m - sph of evrard ( 1988 ; open circles ) . the self - evident notation used to designate these codes is fully explained in kang et al .",
    "the bold solid line with open stars tracks the results of the original slh code ( which we shall hereafter call slh - mmg as an abbreviation to slh - moving mesh gravity ) and the bold solid line with solid circles shows the results of the new slh - p@xmath0 m code .",
    "one can easily see that the slh - p@xmath0 m code provides a major improvement in resolution over the original slh - mmg code , with resolution similar to or exceeding that of the sph codes for a 64@xmath0 grid of particles while the temperature is similar to eulerian codes .",
    "the slh - p@xmath0 m code , therefore , manages to reach the high resolution of sph codes while introducing less numerical heating .",
    "the slh - p@xmath0 m code is also a factor of 2 to 3 faster than a sph code for the same resolution .",
    "let us now compare original ( unrebinned ) data for different codes .",
    "fig.[figgs]a shows a one - cell - thick slice of original data of the slh - p@xmath0m64 run rebinned onto a 256@xmath0 mesh ( to facilitate the comparison with the tvd256 run ) ; the slice has @xmath133 points and is @xmath134 thick .",
    "fig.[figgs]b shows the same slice for slh - p@xmath0m128 .",
    "also shown are subslices containing one of the largest clusters found in the whole slice .",
    "these slices are to be compared with corresponding plots from gnedin ( 1995 ) , however , in order to ease comparison , we plot subslices shown on the right side of fig.[figgs]a , b together with corresponding subslices for tvd256 , psph64 , and slh - mmg64 simulations separately in fig.[figgd ] and fig.[figgt ] ; both figures show psph64 and tvd256 results on the bottom ; fig.[figgd ] shows comparison between the original slh - mmg64 simulation ( upper left panel ) and the slh - p@xmath0 m simulation ( upper right panel ) and fig.[figgt ] plots slh - p@xmath0m64 and slh - p@xmath0m128 simulations in the upper row to demonstrate improvement and convergence .",
    "one first notes that there are no significant differences visible between the original slh - mmg64 and slh - p@xmath0m64 results ; the slh - p@xmath0m64 density distribution resembles that of tvd256 slightly better , but shocks seem to be more blurry since the higher resolution of the slh - p@xmath0 m code leads to fewer cells being left in voids and in the vicinity of shocks .",
    "the comparison between slh - p@xmath0m64 and slh - p@xmath0m128 shows little difference in the density distribution but substantial improvement in the shock thickness .",
    "also the slh - p@xmath0m128 result has somewhat higher temperatures and shock extent because the gas was heated to higher entropy by the extra small - scale power .",
    "it is quite instructive to compare the slh - p@xmath0 m results to sph and tvd slices .",
    "one can notice here that , except in the highest density regions , the real resolution of an sph simulation is low ; it is hardly possible to identify filaments at all , whereas they are easily visible in the slh and tvd plots .",
    "in order to understand this somewhat unexpected conclusion one must recall that the hydrodynamic quantities in the sph method are computed by averaging over , say , 30 nearest neighbors , while in the slh approach they defined in every cell and do not require any averaging to compute .",
    "since in the vicinity of filaments the slh mesh closely follows the gas flow , and , therefore , the hydrodynamical description is close to lagrangian , the sph description of the gas is similar to the slh description being smoothed over 30 neighboring cells , which roughly corresponds to @xmath135 of the whole slice size depending on the density .",
    "more than that , only at overdensities above 30 does the sph method acquire higher resolution than the eulerian hydrodynamic code with the same number of cells , and the tvd256 run becomes inferior in spatial resolution to the sph64 run only at overdensities in excess of @xmath136 .    in general , the slh - p@xmath0m128 run compares better to the tvd256 run than both slh - p@xmath0m64 and psph64 . in some places",
    "the correspondence between the former two runs is quite good , but also there are places where the two codes differ substantially .",
    "we therefore conclude that in detail , differences between existing hydrodynamic codes are still substantial , and much work is required in order to achieve the same level of computational accuracy and consistency as is observed within collisionless @xmath1-body codes .",
    "we have demonstrated that moving mesh gravity solvers suffer from two serious limitations : the shot - noise in high density regions and incorrect green functions .",
    "we have proposed a way to solve the former problem and failed to completely identify the source of the latter . since our moving mesh gravity solver can not be trusted now , we have proceeded further by building a combined slh - p@xmath0 m code , where the slh hydrodynamic solver is combined with the p@xmath0 m method for computing gravity .    in order for a self - gravitating hydrodynamic code to conserve energy ,",
    "a special `` consistency condition '' ought to be satisfied .",
    "we have derived the consistency condition for the slh - p@xmath0 m code and showed what errors would appear should this condition be violated .",
    "ignoring this condition can lead to serious errors in dense regions .",
    "finally , we have compared the slh - p@xmath0 m code with existing cosmological hydrodynamic codes including the original slh code .",
    "the slh - p@xmath0 m approach offers a substantial increase in resolution , making it comparable to the sph codes in the highest density regions , while maintaining reasonable accuracy in resolving shocks and hydrodynamic features .",
    "in particular , we have repaired the biggest problem of the original slh method : failure to simulate clusters accurately , which stem out of a faulty moving mesh gravity solver .",
    "we , therefore , conclude that the new slh - p@xmath0 m code is a good numerical tool to investigate the formation of nonlinear structure in the universe including both gas and dark matter .",
    "we are thankful to j.  p.  ostriker for many fruitful discussions ; parallelization of the slh - p@xmath0 m code for a shared memory multiprocessor was improved with suggestions from f.  summers .",
    "supercomputer time was provided by the national center for supercomputing applications .",
    "this work was supported by nsf grant ast-9318185 awarded to the grand challenge cosmology consortium .",
    "at a general point in the flow the softening tensor is a function of the deformation tensor @xmath22 ; let @xmath137 be the conjugate metric of quasi - lagrangian space and let @xmath138 be its eigenvalues . since @xmath139 is a real symmetric matrix , one can introduce a unitary matrix @xmath140 such that @xmath141^{ab } c^j_b ,          \\label{diagonalg}\\ ] ] where @xmath142^{ab}$ ] denotes a diagonal matrix with @xmath143 entries .",
    "we can now introduce the softening tensor @xmath144 built according to the following formula : @xmath145^{ab } c^j_b ,          \\label{sigmaij}\\ ] ] where @xmath146 is defined by the following equation : @xmath147 where @xmath148 is a softening parameter . in two opposite limits , when all three @xmath143 approach zero or infinity , the softening tensor tends to zero or @xmath149 correspondingly ."
  ],
  "abstract_text": [
    "<S> building a self - gravitating hydrodynamic code as a combination of a hydrodynamic solver and a gravity solver is discussed . </S>",
    "<S> we show that straightforward combining those two solvers generally leads to a code that does not conserve energy locally , and instead a special consistency condition ought to be satisfied . </S>",
    "<S> a particular example of combining softened lagrangian hydrodynamics ( slh ) with a p@xmath0 m gravity solver is used to demonstrate the effect of the consistency condition for a self - gravitating hydrodynamic code . the need to supplement the slh method with the p@xmath0 m gravity solver arose because the moving mesh gravity solver , used in conjunction with the slh method previously , was found to produce inaccurated results . we also show that most existing cosmological hydrodynamic codes implicitly satisfy the consistency condition .    </S>",
    "<S> # 1    # 1#1 </S>"
  ]
}
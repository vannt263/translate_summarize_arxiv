{
  "article_text": [
    "evolutionary algorithms ( eas ) have been applied successfully to many optimisation problems @xcite . however , despite several decades of research , many fundamental questions about their behaviour remain open .",
    "one of the central questions regarding eas is to understand the interplay between the selection mechanism and the genetic operators .",
    "several authors have suggested that eas must find a balance between maintaining a sufficiently diverse population to _ explore _ new parts of the search space , and at the same time _",
    "exploit _ the currently best found solutions by focusing the search in this direction @xcite . in fact , the trade - off between exploration and exploitation has been a common theme not only in evolutionary computation , but also in operations research and artificial intelligence in general .",
    "however , few theoretical studies actually exist that explain how to define such trade - off quantitatively and how to achieve it .",
    "our paper can be regarded as one of the first rigorous runtime analyses of eas that addresses the interaction between exploration , driven by mutation , and exploitation , driven by selection .",
    "much research has focused on finding measures to quantify the selection pressure in selection mechanisms  without taking into account the genetic operators  and subsequently on investigating how ea parameters influence these measures @xcite .",
    "one such measure , called the _ take - over time _ , considers the behaviour of an evolutionary process consisting only of the selection step , and no crossover or mutation operators @xcite .",
    "subsequent populations are produced by selecting individuals from the previous generation , keeping at least one copy of the fittest individual .",
    "hence , the population will after a certain number of generations only contain those individuals that were fittest in the initial population , and this time is called the take - over time .",
    "a short take - over time corresponds to a high selection pressure .",
    "other measures of selection pressure consider properties of the distribution of fitness values in a population that is obtained by a single application of the selection mechanism to a population with normally distributed fitness values .",
    "one of these properties is the _ selection intensity _ , which is the difference between the average population fitness before and after selection @xcite .",
    "other properties are _ loss of diversity _",
    "@xcite and higher order cumulants of the fitness distribution @xcite .    to completely understand the role of selection mechanisms , it is necessary to also take into account their interplay with the genetic operators .",
    "there exist few rigorous studies of selection mechanisms when used in combination with genetic operators .",
    "happ et al .",
    "considered fitness proportionate selection , which is one of the first selection mechanisms to be employed in evolutionary algorithms @xcite .",
    "early research in evolutionary computation pointed out that this selection mechanism suffers from various deficiencies , including population stagnation due to low selective pressure @xcite .",
    "indeed , the results by happ et al .  show that variants of the rls and the ( 1 + 1 ) ea that use fitness - proportional selection have exponential runtime on the class of linear functions @xcite .",
    "their analysis was limited to single - individual based eas .",
    "neumann et al .",
    "showed that even with a population - based ea , the problem can not be optimised in polynomial time with fitness proportional selection @xcite .",
    "however , they pointed out that polynomial runtime can be achieved by scaling the fitness function .",
    "witt also studied a population - based algorithm with fitness proportionate selection , however with the objective to study the role of populations @xcite .",
    "chen et al .  analysed the ( @xmath2+@xmath2 )  ea to compare its runtimes with truncation selection , linear ranking selection and binary tournament selection on the  and  problems @xcite .",
    "they found the expected runtime on these fitness functions to be the same for all three selection mechanisms .",
    "none of the results above show how the balance between the selection pressure and mutation rate impacts the runtime .",
    "this paper analyses rigorously a non - elitist , population based ea that uses linear ranking selection and bit - wise mutation .",
    "the main contributions are an analysis of situations where the mutation - selection balance has an exponentially large impact on the runtime , and new techniques based on branching processes for analysing non - elitist population based eas .",
    "the paper is based on preliminary work reported in @xcite , which contained the first rigorous runtime analysis of a non - elitist , population based ea with stochastic selection .",
    "this paper significantly extends this early work .",
    "in addition to strengthening the main result , simplifying several proofs and proving a conjecture , we have added a completely new section that introduces multi - type branching processes as an analytical tool for studying the runtime of eas .",
    "the following notation will be used in the rest of this paper .",
    "the length of a bitstring @xmath3 is denoted @xmath4 .",
    "the @xmath5-th bit , @xmath6 of a bitstring @xmath3 is denoted @xmath7 .",
    "the concatenation of two bitstrings @xmath3 and @xmath8 is denoted by @xmath9 and @xmath10 .",
    "given a bitstring @xmath3 , the notation @xmath11 $ ] , where @xmath12 , denotes the substring @xmath13 .",
    "for any bitstring @xmath3 , define @xmath14 , the fraction of 1-bitsin the bitstring .",
    "we say that an event holds with _ overwhelmingly high probability ( w.o.p . ) _ with respect to a parameter @xmath15 , if the probability of the event is bounded from below by @xmath16 .",
    "in contrast to classical algorithms , the runtime of eas is usually measured in terms of the number of evaluations of the fitness function , and not the number of basic operations . for a given function and algorithm , the _ expected runtime _",
    "is defined as the mean number of fitness function evaluations until the optimum is evaluated for the first time .",
    "the runtime on a class of fitness functions is defined as the supremum of the expected runtimes of the functions in the class @xcite .",
    "the variable name @xmath17 will be used to denote the runtime in terms of number of generations of the ea . in the case of eas that are initialised with a population of @xmath18 individuals , and which in each generation produce @xmath18 offspring ,",
    "variable @xmath17 can be related to the runtime @xmath19 by @xmath20 .",
    "in ranking selection , individuals are selected according to their fitness rank in the population .",
    "a ranking selection mechanism is uniquely defined by the probabilities @xmath21 of selecting an individual ranked @xmath5 , for all ranks @xmath5 @xcite . for mathematical convenience , an alternative definition due to goldberg and deb @xcite",
    "is adopted , in which a function @xmath22\\rightarrow\\mathbb{r}$ ] is considered a ranking function if it is non - increasing , and satisfies the following two conditions    1 .",
    "@xmath23 , 2 .",
    "@xmath24 .",
    "individuals are ranked from 0 to 1 , with the best individual ranked 0 , and the worst individual ranked 1 . for a given ranking function @xmath25 ,",
    "the integral @xmath26 gives the probability of selecting an individual with rank between @xmath3 and @xmath8 . by defining the linearly decreasing ranking function @xmath27 , where @xmath0 and @xmath28 are parameters , one obtains _ linear ranking selection_.",
    "the first condition implies that @xmath29 , and the second condition implies that @xmath30 .",
    "hence , for linear ranking selection , we have @xmath31 note that since @xmath25 is non - increasing , , @xmath32 , we must have @xmath33 .",
    "also , the special case @xmath34 of the first condition implies that @xmath35 . the selection pressure , measured in terms of the take - over time , is uniquely given by , and monotonically decreasing in the parameter @xmath0 @xcite .",
    "the weakest selection pressure is obtained for @xmath36 , where selection is uniform over the population , and the highest selection pressure is obtained for @xmath37 .",
    "we therefore assume that @xmath38 .",
    "sample @xmath3 uniformly at random from @xmath40 .",
    "sort @xmath42 according to fitness @xmath43 , such that + @xmath44 .",
    "sample @xmath45 in @xmath46 with @xmath47 .",
    "@xmath48 . flip each bit position in @xmath49 with prob .",
    "@xmath50 . @xmath51 .",
    "[ fig : ea ]    we consider a population - based non - elitist ea which uses linear ranking as selection mechanism . the crossover operator will not be considered in this paper .",
    "the pseudo - code of the algorithm is given above .",
    "after sampling the initial population @xmath52 at random in lines 1 to 5 , the algorithm enters its main loop where the current population @xmath42 in generation @xmath53 is sorted according to fitness , then the next population @xmath54 is generated by independently selecting ( line 9 ) and mutating ( line 10 ) individuals from the previous population @xmath42 .",
    "the analysis of the algorithm is based on the assumption that parameter @xmath1 is a constant with respect to @xmath15 .",
    "linear ranking selection is indicated in line 9 , where for a given selection pressure @xmath0 , the cumulative probability of sampling individuals with rank less than @xmath55 is @xmath56 .",
    "it can be seen from the definition of the functions @xmath25 and @xmath57 , that the upper bound @xmath58 , holds for any @xmath59 where @xmath60 .",
    "hence , the expected number of times a uniformly chosen individual ranked between @xmath55 and @xmath61 is selected during one generation is upper bounded by @xmath62 .",
    "we leave the implementation details of the sampling strategy unspecified , and assume that the ea has access to some sampling mechanism which draws samples perfectly according to @xmath57 .",
    "( 0cm,0 cm )  ( 8cm,0 cm ) ; ( 1cm,-0.1 cm ) ",
    "( 1cm,0.1 cm ) ; ( 1cm,-0.2 cm )  node [ below ] @xmath63 ( 0cm,-0.2 cm ) ;    ( 3.5cm,-0.1 cm ) ",
    "( 3.5cm,0.1 cm ) ; ( 4.5cm,-0.1 cm ) ",
    "( 4.5cm,0.1 cm ) node [ above ] @xmath64 ; ( 5.5cm,-0.1 cm )  ( 5.5cm,0.1 cm ) ; ( 6.5cm,-0.1 cm ) ",
    "( 6.5cm,0.1 cm ) ; ( 7.5cm,-0.1 cm ) ",
    "( 7.5cm,0.1 cm ) ;    ( 3.5cm,-0.2 cm )  node [ below ] @xmath65 ( 1cm,-0.2 cm ) ; ( 4.5cm,-0.2 cm )  node [ below ] @xmath66 ( 3.5cm,-0.2 cm ) ; ( 5.5cm,-0.2 cm )  node [ below ] @xmath66 ( 4.5cm,-0.2 cm ) ; ( 6.5cm,-0.2 cm )  node [ below ] @xmath66 ( 5.5cm,-0.2 cm ) ; ( 7.5cm,-0.2 cm )  node [ below ] @xmath66 ( 6.5cm,-0.2 cm ) ;    ( 5.5cm,0.2 cm )  node [ above ] @xmath67-bits ( 6.5cm,0.2 cm ) ; ( 0cm,0.2 cm )  node [ above ] 0-bits ( 1cm,0.2 cm ) ; ( 1cm,0.2 cm )  node [ above ] 1-bits ( 3.5cm,0.2 cm ) ;    for any constants @xmath68 , @xmath69 , and integer @xmath70 , define the function @xmath71 where the set of optimal solutions @xmath72 is defined to contain all bitstrings @xmath73 satisfying @xmath74\\| & = 0,\\\\      \\|x[k+4 , ( \\sigma-\\delta)n-1]\\| & = 1 , \\text { and}\\\\      \\|x[(\\sigma+\\delta)n,(\\sigma+2\\delta)n-1]\\| & \\leq 2/3 .",
    "\\end{aligned}\\ ] ]    except for the set of globally optimal solutions @xmath75 , the fitness function takes the same values as the well known fitness function , the number of leading 1-bits in the bitstring .",
    "the form of the optimal search points , which is illustrated in fig .",
    "[ fig : fitness ] , depends on the three problem parameters @xmath76 and @xmath77 .",
    "the @xmath77-parameter is needed for technical reasons and can be set to any positive constant arbitrarily close to 0 .",
    "hence , the globally optimal solutions have approximately @xmath64 leading 1-bits , except for @xmath63 leading 0-bits .",
    "in addition , globally optimal search points must have a short interval after the first @xmath64 bits which does not contain too many 1-bits .",
    "[ thm : main - result ] for any constant integer @xmath70 , let @xmath19 be the runtime of the linear ranking ea with population size @xmath78 with a constant selection pressure of @xmath79 , and bit - wise mutation rate @xmath50 , for a constant @xmath80 , on function with parameters @xmath81 and @xmath77 , where @xmath69 .",
    "let @xmath82 be any constant .    1 .",
    "if @xmath83 , then for some constant @xmath84 , @xmath85 2 .   if @xmath86 , then @xmath87 3 .   if @xmath88 , then @xmath89 } = e^{\\omega(n)}.      \\end{aligned}\\ ] ]    the theorem follows from theorem  [ thm : succprob - corr - selpres ] , theorem  [ thm : runtime - high - selpres ] , and corollary  [ cor : runtime - low - selpres ] .",
    "theorem  [ thm : main - result ] describes how the runtime of the linear ranking ea on fitness function depends on the main problem parameters @xmath81 and @xmath90 , the mutation rate @xmath1 and the selection pressure @xmath0 .",
    "the theorem is illustrated in figure  [ fig : finalresult ] for problem parameter @xmath91 .",
    "each point in the grey area indicates that for the corresponding values of mutation rate @xmath1 and selection pressure @xmath0 , the ea has either expected exponential runtime or exponential runtime with overwhelming probability ( is highly inefficient ) .",
    "the thick line indicates values of @xmath1 and @xmath0 where the runtime of the ea is polynomial with overwhelmingly high probability ( is efficient ) .",
    "the runtime in the white regions is not analysed .",
    "the theorem and the figure indicate that setting one of the two parameters of the algorithm ( @xmath0 or @xmath1 ) independently of the other parameter is insufficient to guarantee polynomial runtime .",
    "for example , setting the selection pressure parameter to @xmath92 only yields polynomial runtime for certain settings of the mutation rate parameter @xmath1 , while it leads to exponential runtime for other settings of the mutation rate parameter .",
    "hence , it is rather the balance between the mutation rate @xmath1 and the selection pressure @xmath0 , the _ mutation - selection balance _",
    ", that determines the runtime for the linear ranking ea on this problem .",
    "more specifically , a too high setting of the selection pressure parameter @xmath0 can be compensated by increasing the mutation rate parameter @xmath1 .",
    "conversely , a too low parameter setting for the mutation rate @xmath1 can be compensated by decreasing the selection pressure parameter @xmath0 .",
    "furthermore , the theorem shows that the runtime can be highly sensitive to the parameter settings .",
    "notice that the margins between the different runtime regimes are determined by the two parameters @xmath93 and @xmath77 that can be set to any constants arbitrarily close to 0 .",
    "hence , decreasing the selection pressure below @xmath94 by any constant , or increasing the mutation rate above @xmath95 by any constant , will increase the runtime from polynomial to exponential .",
    "finally , note that the optimal mutation - selection balance @xmath96 depends on the problem parameter @xmath81 .",
    "hence , there exists no problem - independent optimal balance between the selection pressure and the mutation rate .    before proving theorem  [ thm : main - result ] , we mention that also previous analyses have shown that the runtime of randomised search heuristics can depend critically on the parameter settings . in the case of eas , it is known that the population size is important @xcite .",
    "in fact , even small changes to the population size can lead to an exponential increase in the runtime @xcite .",
    "another example is the evaporation factor in ant colony optimisation , where a small change can increase the runtime from polynomial to exponential @xcite .",
    "a distinguishing aspect of the result in this paper is that the runtime is here shown to depend critically on the relationship between _ two _ parameters of the algorithm .",
    "( 0,0 ) rectangle ( 10,4.5 ) ; plot[id = equal ] function(t / log(4))*10,4.50*(exp(t/2)-1 ) node[midway , sloped , above ] ; plot[id = upper ] function(t",
    "/ log(4))*10,4.50*(2*exp(t/2)-2 ) ",
    "( 0,4.5 ) ",
    "( 0,0 ) ; plot[id = lower ] function(t / log(4))*10,4.50*(exp(t/2 - 0.02)-1 )  ( 10,0.0 ) ",
    "( 0,0 ) ;    ( 0,0 ) ",
    "( 10,4.5 ) ",
    "( 0,4.5 )  ( 0,0 ) ; at ( 5,5.3 ) runtime of ea ( @xmath97 ) . ; at ( 5,-1.5 ) mutation rate @xmath1 . ; at ( 0 , -0.75 ) 0 ; at ( 10,-0.75 ) @xmath98 ; at ( -1.5 , 2.25 ) selection pressure @xmath0 . ; at ( 0 , 0 ) 1 ; at ( 0 , 4.5 ) 2 ;    ( 5.6,2.3 )  ( 6.2,3.0 ) ; at ( 2.3,3.65 ) _ exponential in expectation _ ; at ( 7.4,3.65 ) _",
    "polynomial w.o.p .",
    "_ ; at ( 7.6,0.70 ) _ exponential w.o.p .",
    "this section gives the proofs of theorem  [ thm : main - result ] .",
    "the analysis is conceptually divided into two parts . in sections",
    "[ sec : equilibrium ] and [ sec : balance ] , the behaviour of the main `` core '' of the population is analysed , showing that the population enters an equilibrium state .",
    "this analysis is sufficient to prove the polynomial upper bound in theorem  [ thm : main - result ] .",
    "sections  [ sec : embeddings ] and [ sec : too - high ] analyse the behaviour of the `` stray '' individuals that sometimes move away from the core of the population .",
    "this analysis is necessary to prove the exponential lower bound in theorem  [ thm : main - result ] .",
    "( 2.5,3.55 ) ",
    "( -3,3.55 ) node [ left=0.1cm , black ] @xmath99 ; ( 0.5,0.00 )  ( -3,0.00 ) node [ left=0.0cm , black ] @xmath100 ; ( 0.5,5.05 )  ( -3,5.05 ) node [ left=0.1cm , black ] @xmath101 ;    ( 0.00 , 0.05 ) rectangle ( 0.20 , 3.00 ) ; ( 0.00 , 3.10 ) rectangle ( 0.20 , 4.00 ) ; ( 0.00 , 4.10 ) rectangle ( 0.20 , 5.00 ) ; at ( 0,-0.4 ) @xmath42 ;    ( -0.2,0.0 )  node[left=0.1 cm ] @xmath102 ( -0.2,3.0 ) ; ( -0.2,3.1 )  node[left=0.1cm , fill = white ] @xmath103 ( -0.2,4.0 ) ; ( -0.2,4.1 )  node[left=0.1 cm ] @xmath104 ( -0.2,5.0 ) ;    at ( 0.3,5.5 ) fitness ; at ( 0.3,3.55 ) @xmath105 ; at ( 0.3,4.55 ) @xmath106 ; at ( 0.3,1.55 ) @xmath107 ;    ( 2.00 , 0.05 ) rectangle ( 2.20 , 2.00 ) ; ( 2.00 , 2.10 ) rectangle ( 2.20 , 3.00 ) ; ( 2.00 , 3.10 ) rectangle ( 2.20 , 5.00 ) ; at ( 2,-0.4 ) @xmath54 ;    at ( 2.3,5.5 ) fitness ; at ( 2.3,2.55 ) @xmath105 ; at ( 2.3,3.90 ) @xmath106 ; at ( 2.3,1.00 ) @xmath107 ;    ( -3,0 )  ( -2.4,0 )  ( -1.5,5 )  ( -3,5 )  ( -3,0 ) ; ( -3,0.05 ) rectangle ( -1.5,3 ) ; ( -3,4.05 ) rectangle ( -1.5,5 ) ; at ( -2.5,4.5 ) @xmath108 ; at ( -2.5,1.5 ) @xmath109 ;    ( -2.4,-0.4 ) node @xmath110 ; ( -1.5,-0.4 ) node @xmath0 ; ( -1.5,5 )  ( -1.5,0 ) ;    ( -3,0 ) (-1,0 ) ; ( -3,0 ) (-3,5.5 ) node[above ] rank ;    as long as the global optimum has not been found , the population is evolving with respect to the number of leading 1-bits . in the following , we will prove that the population eventually reaches an equilibrium state in which the population makes no progress with respect to the number of leading 1-bits .",
    "the population equilibrium can be explained informally as follows .",
    "on one hand , the selection mechanism increases the number of individuals in the population that have a relatively high number of leading 1-bits . on the other hand",
    ", the mutation operator may flip one of the leading 1-bits , and the probability of doing so clearly increases with the number of leading 1-bits in the individual .",
    "hence , the selection mechanism causes an influx of individuals with a high number of leading 1-bits , and the mutation causes an efflux of individuals with a high number of leading 1-bits . at a certain point ,",
    "the influx and efflux reach a balance which is described in the field of population genetics as mutation - selection balance",
    ".    our first goal will be to describe the population when it is in the equilibrium state .",
    "this is done rigorously by considering each generation as a sequence of @xmath18 bernoulli trials , where each trial consists of selecting an individual from the population and then mutating that individual .",
    "each trial has a certain probability of being successful in a sense that will be described later , and the progress of the population depends on the sum of successful trials , the population progress is a function of a certain bernoulli process .",
    "we will associate a bernoulli process with the selection step in any given generation of the non - elitist ea , similar to chen et al .",
    "@xcite . for notational convenience",
    ", the individual that has rank @xmath55 in a given population , will be called the @xmath99-ranked individual of that population . for any constant @xmath111 ,",
    "assume that the @xmath99-ranked individual has @xmath112 leading 1-bitsfor some constant @xmath113 .",
    "as illustrated in fig .",
    "[ fig : selection - bernoulli ] , the population can be partitioned into three groups of individuals : @xmath104-individuals with fitness higher than @xmath114 , @xmath103-individuals with fitness equal to @xmath114 , and @xmath102-individuals with fitness less than @xmath114 . clearly , @xmath115 , and @xmath116 .",
    "the following theorem makes a precise statement about the position @xmath117 for a given rank @xmath118 , in which the population equilibrium occurs .",
    "informally , the theorem states that the number of leading 1-bitsin the @xmath99-ranked individual is unlikely to decrease when it is below @xmath119 , and is unlikely to increase , when it is above @xmath119 .",
    "[ thm : eq - pos ] for any constant @xmath118 , and any @xmath120 , define for all @xmath121 the random variable @xmath122 as the number of leading 1-bitsin the @xmath99-ranked individual in generation @xmath123 . for any @xmath124 ,",
    "define @xmath125 , where @xmath19 is the number of generations until an optimal search point is found .",
    "furthermore , for any constant mutation rate @xmath126 define @xmath127 , where the function @xmath56 is as given in eq .",
    "( [ eq : beta ] ) .",
    "then for any constant @xmath128 , it holds that @xmath129 where @xmath84 is some constant .    for _ the first statement _ , define @xmath130 .",
    "consider the events @xmath131 and @xmath132 , defined for @xmath133 by @xmath134 the first probability in the theorem can now be expressed as @xmath135 where the first inequality follows from the union bound .",
    "the second inequality follows from the definition of conditional probability , which is well - defined in this case because @xmath136 clearly holds .    to prove the first statement of the theorem , it now suffices to choose a not too large constant @xmath28 , and show that for all @xmath137 , @xmath138    to show this , we consider each iteration of the selection mechanism in generation @xmath139 as a bernoulli trial , where a trial is successful if the following event occurs :    * an individual with at least @xmath140 leading 1-bits is selected , and none of the initial @xmath140 bits are flipped .",
    "let the random variable @xmath141 denote the number of successful trials .",
    "notice that the event @xmath142 implies that the @xmath99-ranked individual in the next generation has at least @xmath140 leading 1-bits , , that event @xmath143 does not occur . from the assumption that @xmath144",
    ", we get @xmath145 hence it follows that @xmath146 }      & = \\lambda\\cdot { \\pr\\left(\\mathcal{e}^+_1\\mid \\mathcal{g}_j^-\\wedge l_0\\geq \\xi_0 n\\right)}\\\\     & \\geq \\beta(\\gamma)\\lambda\\cdot \\left(1-\\frac{\\chi}{n}\\right)\\left(1-\\frac{\\chi}{n}\\right)^{\\xi n-1}\\\\     & \\geq \\beta(\\gamma)\\lambda\\cdot \\left(1-\\frac{\\chi}{n}\\right)\\cdot e^{-\\xi\\chi}\\\\     & \\geq \\gamma\\lambda\\cdot \\left(1-\\frac{\\chi}{n}\\right)\\cdot e^{\\delta\\chi}\\\\     & \\geq \\gamma\\lambda\\cdot ( 1+\\delta\\chi)\\cdot \\left(1-\\frac{\\chi}{n}\\right).\\end{aligned}\\ ] ] for sufficiently large @xmath15 , a chernoff bound @xcite therefore implies that @xmath147    for _ the second statement _ , define @xmath148 .",
    "consider the events @xmath149 and @xmath150 , defined for @xmath133 by @xmath151 similarly to above , the second statement can be proved by showing that @xmath152 for all @xmath153 to show this , we define a trial in generation @xmath139 successful if one of the following two events occurs :    * an individual with at least @xmath154 leading 1-bits is selected , and none of the initial @xmath154 bits are flipped . *",
    "an individual with less than @xmath154 leading 1-bits is selected , and the mutation of this individual creates an individual with at least @xmath154 leading 1-bits .    let the random variable @xmath155 denote the number of successful trials .",
    "notice that the event @xmath156 implies that the @xmath99-ranked individual in the next generation has no more than @xmath140 leading 1-bits , , that event @xmath157 does not occur .",
    "furthermore , since the @xmath99-ranked individual in the current generation has no more than @xmath140 leading 1-bits , less than @xmath55 individuals have more than @xmath140 leading 1-bits .",
    "hence , the event @xmath158 occurs with probability @xmath159 if the selected individual has @xmath70 0-bits within the first @xmath160 bit positions , then the probability of mutating this individual into an individual with at least @xmath154 leading 1-bits , and hence also the probability of event @xmath161 , is bounded from above by @xmath162 from the assumption that @xmath163 , we get @xmath164 hence , for any constant @xmath165 , we have @xmath166 }        & =      \\lambda\\cdot { \\pr\\left(\\mathcal{e}_2^+\\mid\\mathcal{g}_j^+\\wedge l_0\\leq \\xi_0n\\right)}\\\\       & \\quad + \\lambda\\cdot{\\pr\\left(\\mathcal{e}_2 ^",
    "-\\mid\\mathcal{g}_j^+\\wedge l_0\\leq \\xi_0n\\right)}\\\\       & \\leq \\lambda \\left(\\beta(\\gamma)+\\frac{\\chi}{n}\\right)\\cdot e^{-\\xi \\chi}\\\\       & \\leq \\gamma\\lambda \\left(1+\\frac{\\chi}{n\\beta(\\gamma)}\\right)\\cdot e^{-\\delta\\chi}\\\\       & \\leq \\gamma\\lambda ( 1-\\delta ' ) \\left(1+\\frac{\\chi}{n\\beta(\\gamma)}\\right).\\end{aligned}\\ ] ] for sufficiently large @xmath15 , a chernoff bound therefore implies that @xmath167    in the following , we will say that the @xmath99-ranked individual @xmath3 is in the _ equilibrium position _ with respect to a given constant @xmath168 , if the number of leading 1-bits in individual @xmath3 is larger than @xmath169 and smaller than @xmath170 , where @xmath117 .",
    "theorem  [ thm : eq - pos ] states that when the population reaches a certain region of the search space , the progress of the population will halt and the ea enters an equilibrium state .",
    "our next goal is to calculate the expected time until the ea enters the equilibrium state .",
    "more precisely , for any constants @xmath111 and @xmath168 , we would like to bound the expected number of generations until the fitness @xmath114 of the @xmath99-ranked individual becomes at least @xmath171 .",
    "although the fitness @xmath114 will have a tendency to drift towards higher values , it is necessary to take into account that the fitness can in general both decrease and increase according to stochastic fluctuations .",
    "drift analysis has proven to be a powerful mathematical technique to analyse such stochastically fluctuating processes @xcite .",
    "given a distance measure ( sometimes called potential function ) from any search point to the optimum , one estimates the drift @xmath172 towards the optimum in one generation , and bounds the expected time to overcome a distance of @xmath173 by @xmath174 .",
    "however , in our case , a direct application of drift analysis with respect to @xmath114 will give poor bounds , because the drift of @xmath114 depends on the value of a second variable @xmath104 .",
    "the probability of increasing the fitness of the @xmath99-ranked individual is low when the number of individuals in the population with higher fitness , @xmath104 , is low .",
    "however , it is still likely that the sum @xmath175 will increase , thus increasing the number of good individuals in the population .",
    "several researchers have discussed this alternating behaviour of population - based eas @xcite .",
    "witt shows that by taking into account replication of good individuals , one can improve on trivial upper runtime bounds for the ( @xmath176+@xmath100 ) ea , e.g. from @xmath177 on into @xmath178 @xcite .",
    "chen et al .",
    "describe a similar situation in the case of an elitist ea , which goes through a sequence of two - stage phases , where the first stage is characterised by accumulation of leading individuals , and the second stage is characterised by acquiring better individuals @xcite .",
    "generalised to the non - elitist ea described here , this corresponds to first accumulation of @xmath104-individuals , until one eventually gains more than @xmath55 individuals with fitness higher than @xmath114 . in the worst case , when @xmath179 , one expects that @xmath114 has a small positive drift .",
    "however , when @xmath104 is high , there is a high drift .",
    "when the fitness is increased , the value of @xmath104 is likely to decrease . to take into account this mutual dependency between @xmath104 and @xmath114",
    ", we apply drift analysis in conceptually two dimensions , finding the drift of both @xmath114 and @xmath104 . similar in vein to this two dimensional drift analysis ,",
    "is the analysis of simulated annealing due to wegener , in which a gambler s ruin argument is applied with respect to a potential function having two components @xcite .",
    "the drift analysis applies the following simple property of function @xmath57 which follows from its definition in eq .",
    "( [ eq : beta ] ) .",
    "[ lem : beta - property ] for all @xmath180 and @xmath181 , the function @xmath57 defined in eq .",
    "( [ eq : beta ] ) satisfies @xmath182    the following theorem shows that if the @xmath99-ranked individual in a given population is below the equilibrium position , then the equilibrium position will be reached within expected @xmath183 function evaluations .    [ thm : eq - time - below ] let @xmath99 and @xmath77 be any constants with @xmath184 and @xmath168 .",
    "the expected number of function evaluations until the @xmath99-ranked individual of the linear ranking ea with population size @xmath185 , for some constant @xmath84 that depends on @xmath99 , attains at least @xmath186 leading 1-bits or the optimum is reached , is @xmath183 .",
    "recall from the definition of the ea that @xmath42 is the population vector in generation @xmath187 .",
    "we consider the drift by to the potential function @xmath188 , which is composed of a horizontal component @xmath189 , and a vertical component @xmath190 , defined as @xmath191 where @xmath192 is the @xmath99-ranked individual in population @xmath42 .",
    "the horizontal @xmath193 and vertical @xmath194 drift in generation @xmath53 are @xmath195 } , \\text { and}\\\\      \\delta_{y , t}(i ) & : = { \\mathbf{e}\\left[h_y(p_t)-h_y(p_{t+1})\\mid h_y(p_t)=i\\right]}.    \\end{aligned}\\ ] ] the horizontal and vertical drift will be bounded independently in the following two cases ,    * @xmath196,and * @xmath197 ,    where @xmath198 is a constant that will be specified later ,    assume that the @xmath99-ranked individual has @xmath140 leading 1-bits , where it holds @xmath199 . by the first statement of theorem  [ thm : eq - pos ] , the probability of reducing the number of leading 1-bitsin the @xmath99-ranked individual , i.e. , of increasing the horizontal distance , is @xmath200 .",
    "the horizontal distance can not increase by more than @xmath15 , so @xmath201 holds in both cases .",
    "we now bound the horizontal drift @xmath193 for case 2 .",
    "let the random variable @xmath202 be the number of selection steps in which an individual with fitness strictly higher than @xmath203 is selected , and none of the leading @xmath140 bits are flipped . then @xmath204 } & \\geq \\lambda \\cdot \\beta(\\gamma / l)\\cdot e^{-\\xi\\chi}\\cdot\\left(1-\\frac{\\chi}{n}\\right)\\\\      & \\geq \\gamma\\lambda \\cdot ( 1+\\chi\\delta)\\cdot\\frac{\\beta(\\gamma / l)}{\\beta(\\gamma)}\\cdot\\left(1-\\frac{\\chi}{n}\\right)\\\\      & \\geq \\gamma\\lambda \\cdot \\frac{(1+\\chi\\delta)}{l}\\cdot\\left(1-\\frac{\\chi}{n}\\right ) .",
    "\\end{aligned}\\ ] ] by defining @xmath205 , there exists a constant @xmath206 such that for sufficiently large @xmath15 , we have @xmath207}\\geq    ( 1+\\delta')\\cdot \\gamma\\lambda.$ ] hence , by a chernoff bound , with probability @xmath208 , the number @xmath202 of such selection steps is at least @xmath55 , in which case @xmath209 .",
    "the unconditional horizontal drift in case 2 therefore satisfies @xmath210 .",
    "we now bound the vertical drift @xmath194 for case 1 . in order to generate a @xmath104-individual in a selection step ,",
    "it is sufficient that a @xmath104-individual is selected and none of the leading @xmath211 1-bits are flipped .",
    "we first show that the expected number of such events is sufficient to ensure a non - negative drift .",
    "if @xmath212 , then the vertical drift can not be negative .",
    "let us therefore assume that @xmath213 for some @xmath214 which is not necessarily constant .",
    "the expected number of times a new @xmath104-individual is created is at least @xmath215 hence , for sufficiently large @xmath15 , this is at least @xmath216 , and the expected drift is at least positive .",
    "in addition , a @xmath104-individual can be created by selecting a @xmath103-individual , and flipping the first 0-bit and no other bits .",
    "the expected number of such events is at least @xmath217 .",
    "hence , the expected vertical drift in case 1 is @xmath218 .",
    "finally , for case 2 , we use the trivial lower bound @xmath219 .",
    "the horizontal and vertical drift is now added into a _ combined drift _ @xmath220 which in the two cases is bounded by    * @xmath221,and * @xmath222 .",
    "given a population size @xmath185 , for a sufficiently large constant @xmath28 with respect to @xmath99 , the combined drift @xmath223 is therefore in both cases bounded from below by @xmath224 the maximal distance is @xmath225 , hence , the expected number of function evaluations @xmath19 until the @xmath99-ranked individual attains at least @xmath186 leading 1-bitsis no more than @xmath226}\\leq \\lambda\\cdot b(n)/\\delta_t = o(\\lambda    n^2)$ ] .      in the previous section",
    ", it was shown that the population reaches an equilibrium state in @xmath183 function evaluations in expectation .",
    "furthermore , the position of the equilibrium state is given by the selection pressure @xmath0 and the mutation rate @xmath1 . by choosing appropriate values for the parameters @xmath0 and @xmath1",
    ", one can ensure that the equilibrium position occurs close to the global optimum that is given by the problem parameter @xmath81 .",
    "theorem [ thm : unlikely - above ] , that will be proved in section  [ sec : too - low ] , also implies that no individual will reach far beyond the equilibrium position .",
    "it is now straightforward to prove that an optimal solution will be found in polynomial time with overwhelmingly high probability .",
    "[ thm : succprob - corr - selpres ] the probability that linear ranking ea with population size @xmath227 , for any constant integer @xmath70 , selection pressure @xmath0 , and bit - wise mutation rate @xmath50 for a constant @xmath80 satisfying @xmath228 , finds the optimum of within @xmath229 function evaluations is @xmath16 .",
    "we divide the run into two phases .",
    "the first phase lasts the first @xmath230 function evaluations , and the second phase lasts the remaining @xmath231 function evaluations .",
    "we say that a failure occurs during the run , if within these two phases , there exists an individual that has more than @xmath232 leading 1-bits , or more than @xmath233 1-bitsin the interval from @xmath232 to @xmath234 .",
    "we first claim that the probability of this failure event is exponentially small . by theorem  [ thm : unlikely - above ] , no individual reaches more than @xmath232 leading 1-bitswithin @xmath235 function evaluations with probability @xmath16 .",
    "hence the bits after position @xmath232 will be uniformly distributed . by a chernoff bound , and a union bound over all the individuals in the two phases , the probability that any individual during the two phases has more than @xmath236 1-bitsin the interval from @xmath237 to @xmath238 is exponentially small .",
    "we have therefore proved the first claim .",
    "let @xmath239 be a constant such that @xmath240 .",
    "we say that a failure occurs in the first phase , if by the end of this phase , there exists a non - optimal individual with rank between 0 and @xmath99 that has less than @xmath241 leading 1-bits .",
    "we will prove the claim that the probability of this failure event is exponentially small .",
    "by theorem  [ thm : eq - time - below ] , the expected number of function evaluations until the @xmath99-ranked individual has obtained at least @xmath241 leading 1-bits is no more than @xmath242 , for some constant @xmath84 .",
    "we divide the first phase into sub - phases , each of length @xmath243 . by markov",
    "s inequality , the probability that the @xmath99-ranked individual has not obtained @xmath241 leading 1-bitswithin a given sub - phase is less than @xmath244 .",
    "the probability that this number of leading 1-bitsis not achieved within @xmath245 such sub - phases , by the end of the first phase , is no more than @xmath246 , and the second claim holds .",
    "we say that a failure occurs in the second phase , if a non - optimal individual with rank better than @xmath99 has less than @xmath247 leading 1-bits , or the optimum is not found by the end of the phase .",
    "we claim that the probability of this failure event is exponentially small . the first part of the claim follows from the first part of theorem [ thm : eq - pos ] with the parameters @xmath248 and @xmath249 .",
    "assuming no failure in the previous phase , it suffices to select an individual with rank between @xmath101 and @xmath99 , and flip the leading @xmath63 1-bits , and no other bits .",
    "the probability that this event happens during a single selection step , assuming that @xmath250 , , @xmath251 , is @xmath252^{2\\chi}\\\\      &   \\geq \\frac{\\beta(\\gamma)}{e^{2\\chi}}\\left(\\frac{\\chi}{n}\\right)^{k+3}.    \\end{aligned}\\ ] ] the expected number of selection steps until the optimum is produced is @xmath253 for some constant @xmath254 .",
    "similarly to the first phase , we consider sub - phases , each of length @xmath255 . by markov",
    "s inequality , the probability that the optimum has not been found within a given sub - phase is less than @xmath244 .",
    "the probability that the optimum has not been found within @xmath256 sub - phases , before the end of the second phase , is @xmath257 , and the third claim holds .",
    "if none of the failure events occurs , then the optimum has been found by the end of the second phase .",
    "the probability that any of the failure events occurs is @xmath258 , and the theorem then follows .",
    "( 0.5,1 ) ",
    "( 3.5,1 ) ",
    "( 2,3.5 ) ",
    "( 0.5,1 ) ;    ( 2,3.5 ) .. controls ( 1.5,2.75 ) .. ( 2,2.0 ) .. controls ( 2.5,2.75 ) .. ( 2,3.5 ) ;    ( -0.2,1.0 ) ",
    "node[left=0.1 cm ] @xmath259 ( -0.2,3.5 ) ;    ( 2,5 ) circle ( 1.2 cm ) node core . ;",
    "( 2,4.0 ) circle ( 1.5pt ) ; ( 2,3.5 ) circle ( 1.5pt ) node[anchor = west ] @xmath3 ; ( 2,4.0 )  ( 2,3.55 ) ;    ( 2,0.5 ) circle ( 1.5pt ) node[anchor = west ] @xmath260 ( global optimum ) . ;",
    "while theorem [ thm : eq - pos ] describes the equilibrium position of any @xmath99-ranked individual for any positive constant @xmath99 , the theorem can not be used to analyse the behaviour of single `` stray '' individuals , including the position of the fittest individual ( @xmath261 ) .",
    "this is because the tail inequalities obtained by the chernoff bounds used in the proof of theorem [ thm : eq - pos ] are too weak for ranks of order @xmath262 .    to analyse stray individuals",
    ", we will apply the technique of non - selective family trees introduced in @xcite .",
    "this technique is different from , but related to , the _ family tree _",
    "technique described by witt @xcite .",
    "a family tree has as its root a given individual @xmath3 in some generation @xmath53 , and the nodes in each level @xmath90 correspond to the subset of the population in generation @xmath263 defined in the following way .",
    "an individual @xmath8 in generation @xmath263 is a member of the family tree if and only if it was generated by selection and mutation of an individual @xmath264 that belongs to level @xmath265 of the family tree . in this case",
    ", individual @xmath264 is the parent node of individual @xmath8 .",
    "if there is a path from an individual @xmath264 at level @xmath90 to an individual @xmath8 at level @xmath266 , then individual @xmath8 is said to be a _ descendant _ of individual @xmath264 , and individual @xmath264 is an _ ancestor _ of individual @xmath8 .",
    "a directed path in the family tree is called a _",
    "lineage_. a family tree is said to become _ extinct _ in generation @xmath267 if none of the individuals in level @xmath268 of the tree were selected . in this case",
    ", @xmath268 is called the _ extinction time _ of the family tree .    the idea for proving that stray individuals do not reach a given part of the search space can be described informally using fig .",
    "[ fig : core ] .",
    "one defines a certain subset of the search space called the _ core _",
    "within which the majority of the population is confined with overwhelming probability . in our case ,",
    "an appropriate core can be defined using theorems [ thm : eq - pos ] and [ thm : eq - time - below ] .",
    "one then focuses on the family trees that are outside this core , but which have roots within the core .",
    "note that some descendants of the root may re - enter the core .",
    "we therefore prune the family tree to those descendants which are always outside the core .",
    "more formally , the pruned family tree contains node @xmath3 if and only if @xmath3 belongs to the original family tree , and @xmath3 and all its ancestors are outside the core .",
    "we would then like to analyse the positions of the individuals that belong to the pruned family tree .",
    "however , it is non - trivial to calculate the exact shape of this family tree .",
    "let the random variable @xmath269 denote the number of offspring of individual @xmath3 .",
    "clearly , the distribution of @xmath269 depends on how @xmath3 is ranked within the population .",
    "hence , different parts of the pruned family tree may grow at different rates , which can influence the position and shape of the family tree . to simplify the analysis , we embed the pruned family tree into a larger family tree which we call the _ non - selective family tree_. this family tree has the same root as the real pruned family tree , however it grows through a modified selection process . in the real pruned family tree ,",
    "the individuals have different numbers of offspring according to their rank in the population . in the non - selective family tree ,",
    "the offspring distribution @xmath269 of all individuals @xmath3 is identical to the offspring distribution @xmath270 of an individual @xmath264 which is best ranked among individuals outside the core .",
    "we will call the expectation of this distribution @xmath270 the _ reproductive rate _ of the non - selective family tree . hence , each individual in the non - selective family tree has at least as many offspring as in the real family tree .",
    "the real family tree will therefore occur as a sub - tree in the non - selective family tree .",
    "the probability that the real family tree reaches a given part of the search space is upper bounded by the probability that the non - selective family tree reaches this part of the search space . a related approach , where faster growing family trees are analysed , is described by jgerskpper and witt  @xcite .    approximating the family tree by the non - selective family tree has three important consequences .",
    "first _ consequence is that the non - selective family tree can grow faster than the real family tree , and in general beyond the population size @xmath18 of the original process .",
    "second _ consequence is that since all individuals in the family tree have the same offspring distribution , no individual in the family tree has any selective advantage , hence the name non - selective family tree .",
    "the behaviour of the family tree is therefore independent of the fitness function , and each lineage fluctuates randomly in the search space according to the bits flipped by the mutation operator .",
    "such mutation random walks are easier to analyse than the real search process .",
    "to bound the probability that such a mutation random walk enters a certain region of the search space , it is necessary to bound the extinction time @xmath268 of the non - selective family tree .",
    "third _ consequence is that the sequence of random variables @xmath271 describing the number of elements in level @xmath53 of the non - selective family tree is a discrete time branching process @xcite .",
    "we can therefore apply the techniques that have been developed to study branching processes to bound the extinction time @xmath268 .    before introducing branching processes",
    ", we summarise the main steps in a typical application of non - selective family trees , assuming the goal is to prove that with overwhelming probability , an algorithm does not reach a given search point @xmath260 within @xmath272 generations for some constant @xmath84 .",
    "the first step is to define an appropriate core , which is a subset of the search space that is separated from @xmath260 by some distance .",
    "the second step is to prove that any non - selective family tree outside the core will become extinct in @xmath268 generations with overwhelmingly high probability .",
    "this can be proved by applying results about branching processes , e.g. lemma  [ lemma : branching - width ] and lemma  [ lemma : branching - size - tail ] in this paper .",
    "the third step is to bound the number of different lineages that the family tree has within @xmath268 generations .",
    "again , results about branching processes can be applied .",
    "the fourth step involves bounding the probability that a given lineage , starting inside the core reaches search point @xmath260 within @xmath268 generations .",
    "this can be shown in various ways , depending on the application .",
    "the fifth , and final step , is to apply a union bound over all the different lineages that can exist within @xmath272 generations .    in the second step",
    ", one should keep in mind that there are several causes of extinction . a reproductive rate",
    "less than @xmath100 is perhaps the most evident cause of extinction .",
    "such a low reproductive rate may occur when the fitness outside the core is lower than the fitness inside the core , as is the case for the family trees considered in section  [ sec : too - high ] . with a majority of the population inside the core , each individual outside the core",
    "is selected in expectation less than once per generation .",
    "however , a low reproductive rate is not the only cause of extinction .",
    "this is illustrated by the core definition in section  [ sec : too - low ] , where the fitness is generally higher outside , than inside the core .",
    "while the family tree members may in general be selected more than once per generation , the critical factor here is that their offspring are in expectation closer to the core than their parents .",
    "hence , the lineages outside the core will have a tendency to drift back into the core where they are no longer considered part of the family tree due to the pruning process .",
    "a single - type branching process is a markov process @xmath273 on @xmath274 , which for all @xmath187 , is given by @xmath275 , where @xmath276 are i.i.d .",
    "random variables having @xmath277}=:\\rho$ ] .",
    "a branching process can be thought of as a population of identical individuals , where each individual survives exactly one generation .",
    "each individual produces @xmath113 offspring independently of the rest of the population during its lifetime , where @xmath113 is a random variable with expectation @xmath278 .",
    "the random variable @xmath279 denotes the population size in generation @xmath53 . clearly , if @xmath280 for some @xmath53 , then @xmath281 for all @xmath282 .",
    "the following lemma gives a simple bound on the size of the population after @xmath121 generations .",
    "[ lemma : branching - width ] let @xmath273 be a single - type branching process with @xmath283 and mean number of offspring per individual @xmath278 .",
    "define random variables @xmath284 , the extinction time , and @xmath285 the number of different lineages until generation @xmath53 . then for any @xmath286 , @xmath287 furthermore , if @xmath288 , then @xmath289 } \\leq \\frac{\\rho}{1-\\rho } , \\quad\\text { and } \\quad      { \\pr\\left(x_t\\geq k\\right ) } \\leq \\frac{\\rho}{k(1-\\rho)}.    \\end{aligned}\\ ] ]    by the law of total expectation , we have @xmath290 }        =     { \\mathbf{e}\\left[{\\mathbf{e}\\left[z_t\\mid z_{t-1}\\right]}\\right ] }        =     \\rho\\cdot { \\mathbf{e}\\left[z_{t-1}\\right]}.    \\end{aligned}\\ ] ] repeating this @xmath53 times gives @xmath291 } =   \\rho^t\\cdot { \\mathbf{e}\\left[z_0\\right]}$ ] .",
    "the first part of the lemma now follows by markov s inequality , @xmath292}}{k } = \\frac{\\rho^t}{k}.        \\end{aligned}\\ ] ] the second part of the lemma is a special case of the first part for @xmath293 , @xmath294 . for the last two parts , note that since each lineage must contain at least one individual that is unique to that lineage , we have @xmath295 . by linearity of expectation and the previous inequalities",
    ", we can therefore conclude that @xmath296 }       \\leq \\sum_{i=1}^t { \\mathbf{e}\\left[z_i\\right ] }       \\leq \\sum_{i=1}^\\infty \\rho^i       = \\frac{\\rho}{1-\\rho}.    \\end{aligned}\\ ] ] finally , it follows from markov s inequality that @xmath297    from the preceding lemma , it is clear that the expected number of offspring @xmath278 is important for the fate of a branching process . for @xmath288",
    ", the process is called _ sub - critical _ , for @xmath298 , the process is called _ critical _ , and for @xmath299 , the process is called _ super - critical_. in this paper , we will consider sub - critical processes .",
    "in this section , it is proved that is hard for linear ranking ea when the ratio between parameters @xmath0 and @xmath1 is sufficiently large .",
    "the overall proof idea is first to show that the population is likely to reach the equilibrium position before the optimum is reached ( proposition  [ prop : prob - opt - in - n - square ] and theorem  [ thm : eq - time - below ] ) . once the equilibrium position is reached , a majority of the population will have significantly more than @xmath300 leading 1-bits , and individuals that are close to the optimum are therefore less likely to be selected ( proposition [ prop : belowcritical ] ) .",
    "the proof of proposition  [ prop : prob - opt - in - n - square ] builds on the result in proposition  [ prop:111-ind ] , which states that the individuals with at least @xmath63 leading 1-bitswill quickly dominate the population .",
    "hence , family trees of individuals with less than @xmath63 leading 1-bitsare likely to become extinct before they discover an optimal search point .",
    "recall that optimal search points have @xmath63 leading 0-bits . in the following , individuals with at least @xmath63 leading 1-bitswill be called @xmath301-individuals .",
    "[ prop:111-ind ] let @xmath302 be any constant @xmath303 , and @xmath304 . if the linear ranking ea with population size @xmath305 , for any constant integer @xmath70 , and bit - wise mutation rate @xmath50 for a constant @xmath80 , is applied to , then with probability @xmath306 , all the @xmath302-ranked individuals in generation @xmath307 to generation @xmath308 are @xmath301-individuals , where @xmath19 is the number of generations until the optimum has been found .",
    "if the @xmath302-ranked individual in some generation @xmath309 is an @xmath301-individual , then by the first part of theorem  [ thm : eq - pos ] with parameter @xmath310 , the @xmath302-ranked individual remains so until generation @xmath311 with probability @xmath208 .",
    "otherwise , we consider the run a failure .    it remains to prove that the @xmath302-ranked individual in one of the first @xmath307 generations is an @xmath301-individual with probability @xmath306 .",
    "we apply the drift theorem with respect to the potential function @xmath312 , where @xmath104 is the number of @xmath301-individuals in the population .    a run is considered failed if the fraction of @xmath301-individuals in any of the first @xmath311 generations is less than @xmath313 the initial generation is sampled uniformly at random , so by a chernoff bound , the probability that the fraction of @xmath301-individuals in the initial generation is less than @xmath314 , is @xmath200 .",
    "given that the initial fraction of @xmath301-individuals is at least @xmath314 , it follows again by the first part of theorem  [ thm : eq - pos ] with parameter @xmath315 that this holds until generation @xmath311 with probability @xmath208 .",
    "hence , the probability of this failure event is @xmath200 .",
    "the @xmath301-individuals are fitter than any other non - optimal individuals .",
    "assume that the fraction of @xmath301-individuals in a given generation is @xmath316 . in order to create a @xmath301-individual in a selection step , it suffices to select one of the best @xmath55 individuals , and to not mutate any of the first @xmath63 bit positions .",
    "the expected number of @xmath301-individuals in the following generation is therefore at least @xmath317 , where we define @xmath318 .",
    "the ratio @xmath319 is linearly decreasing in @xmath99 , and for sufficiently large @xmath15 , strictly larger than @xmath320 , where @xmath84 is a constant .",
    "hence , for all @xmath321 , it holds that @xmath322 the drift is therefore for all @xmath323 where @xmath324 , @xmath325    assuming no failure , the potential must be increased by no more than @xmath326 . by the drift theorem , the expected number of generations until this occurs is @xmath327 . and the probability that this does not occur within @xmath307 generations is @xmath328 by markov s inequality .",
    "taking into account all the failure probabilities , the proposition now follows .",
    "[ prop : prob - opt - in - n - square ] for any constant @xmath329 , the probability that the linear ranking ea with population size @xmath330 , for some constant integer @xmath331 , and bit - wise mutation rate @xmath50 for a constant @xmath80 , has not found the optimum of within @xmath332 function evaluations is @xmath333 .",
    "we consider the run a failure if at some point between generation @xmath307 and generation @xmath334 , the @xmath335-ranked individual has less than @xmath63 leading 1-bitswithout first finding the optimum . by proposition [ prop:111-ind ] ,",
    "the probability of this failure event is @xmath336 .    assuming that this failure event does not occur , we apply the method of non - selective family trees with the set of @xmath301-individuals as core .",
    "recall that the family trees are pruned such that they only contain lineages outside the core . however , to simplify the analysis , the family trees will not be pruned before generation @xmath307 .",
    "therefore , any family tree that is not rooted in an @xmath301-individual , must be rooted in the initial population .",
    "the proof now considers the family trees with roots after and before generation @xmath307 separately .",
    "_ case 1 : _ we firstly consider the at most @xmath337 family trees with roots after generation @xmath307 .",
    "we begin by estimating the total number of lineages , and their extinction times .",
    "the mean number of offspring @xmath278 , of an individual with rank @xmath99 , is no more than @xmath338 , as given in eq .",
    "( [ eq : alpha ] ) . assuming no failure , any non - optimal individual outside the core has rank at least @xmath339 .",
    "hence for any selection pressure @xmath340 , the mean number of offspring of an individual in the family tree is @xmath341 .",
    "we consider the run a failure if any of the @xmath342 family trees survives longer than @xmath343 generations . by the union bound and lemma  [ lemma : branching - width ] ,",
    "the probability of this failure event is no more than @xmath344    let the random variable @xmath345 be the number of lineages in family tree @xmath346 .",
    "the expected number of lineages in a given family tree is by lemma  [ lemma : branching - width ] no more than @xmath347 .",
    "we consider the run a failure if there are more than @xmath348 lineages in all these family trees .",
    "the probability of this failure event is by markov s inequality no more than @xmath349}}{2m\\rho }      \\leq 1/2 .",
    "\\end{aligned}\\ ] ]    we now bound the probability that any given lineage contains a @xmath350-individual , which is necessary to find an optimal search point .",
    "the probability of flipping a given bit during @xmath53 generations is by the union bound no more than @xmath351 , and the probability of flipping @xmath63 bits within @xmath53 generations is no more than @xmath352 .",
    "the probability that any of the at most @xmath348 lineages contains a @xmath350-individual is by the union bound no more than @xmath353    _ case 2 : _ we secondly consider the family trees with roots before generation @xmath307 . in the analysis",
    ", we will not prune these family trees during the first @xmath307 generations .",
    "however , after generation @xmath307 , the family trees will be pruned as usual .",
    "this will only overestimate the extinction time of the family trees .",
    "furthermore , there will be exactly @xmath18 such family trees , one family tree for each of the @xmath18 randomly chosen individuals in the initial population .",
    "we now bound the number of lineages in these family trees , and their extinction times .",
    "the mean number of offspring is no more than @xmath35 during the first @xmath307 generations .",
    "because the family trees are pruned after generation @xmath307 , we can re - use the arguments from case 1 above to show that the mean number of offspring after generation @xmath307 is no more than @xmath278 , for some constant @xmath288 .",
    "let random variable @xmath354 be the number of family tree members in generation @xmath354 .",
    "analogously to the proof of lemma  [ lemma : branching - width ] , we have @xmath291 } \\leq    2^t$ ] if @xmath355 , and @xmath291 } \\leq    2^{\\log \\lambda } \\rho^{t-\\log\\lambda } =    \\lambda\\rho^{t-\\log\\lambda}$ ] for @xmath356 .",
    "we consider the run a failure if any of the @xmath18 family trees survives longer than @xmath357 generations . by the union bound and markov s inequality ,",
    "the probability of this failure event is no more than @xmath358}=e^{-\\omega(\\sqrt{n})}$ ] .",
    "let the random variable @xmath345 be the number of lineages in family tree @xmath359 .",
    "similarly to the proof of lemma  [ lemma : branching - width ] , the expected number of different lineages in the family tree is no more than @xmath360 } \\leq       \\sum_{t=1}^{\\log \\lambda}{\\mathbf{e}\\left[z_t\\right ] } +       \\sum_{t=\\log\\lambda+1}^\\infty { \\mathbf{e}\\left[z_t\\right ] }      \\leq       2\\lambda + \\frac{\\rho\\lambda}{1-\\rho } = o(\\lambda ) .",
    "\\end{aligned}\\ ] ] we consider the run a failure if there are more than @xmath361 lineages in all family trees . by markov",
    "s inequality , the probability of this failure event is no more than @xmath362 } / \\lambda^3 = o(1/\\lambda ) .    \\end{aligned}\\ ] ]    we now bound the probability that a given lineage finds an optimal search point .",
    "define @xmath363 . to find the optimum ,",
    "it is necessary that all the bits in the interval of length @xmath364 , starting from position @xmath365 , are 1-bits .",
    "we consider the run a failure if any of the individuals in the initial population has less than @xmath366 0-bits in this interval . by a chernoff bound and the union bound ,",
    "the probability of this failure event is no more than @xmath367 .",
    "the probability of flipping a given 0-bitwithin @xmath357 generations is by the union bound no more than @xmath368 .",
    "hence , the probability that all of the at least @xmath366 0-bitshave been flipped is less than @xmath369 .",
    "the probability that any of the at most @xmath361 lineages finds the optimum within @xmath357 generations is by the union bound no more than @xmath370 .",
    "if none of the failure events occur , then no globally optimal search point has been found during the first @xmath334 generations .",
    "the probability that any of the failure events occur is by union bound less than @xmath371 .",
    "the proposition therefore follows .",
    "once the equilibrium position has been reached , we will prove that it is hard to obtain the global optimum .",
    "we will rely on the fact that it is necessary to have at least @xmath372 0-bitsin the interval from @xmath232 to @xmath234 , and that any individual with a 0-bit in this interval will be ranked worse than at least half of the population .",
    "[ prop : belowcritical ] let @xmath81 and @xmath77 be any constants that satisfy @xmath69 . if the linear ranking ea with population size @xmath18 , where @xmath78 , for any constant integer @xmath70 , with selection pressure @xmath0 and constant mutation rate @xmath80 satisfying @xmath373 is applied to , and the @xmath335-ranked individual reaches at least @xmath234 leading 1-bitsbefore the optimum has been found , then the probability that the optimum is found within @xmath272 function evaluations is @xmath258 , for some constant @xmath84 .",
    "define @xmath339 , and note that @xmath374 hence , we have @xmath375 let @xmath376 .",
    "again , we apply the technique of non - selective family trees and define the _ core _ as the set of search points with more than @xmath377 leading 1-bits . by the first part of theorem  [ thm : eq - pos ] ,",
    "the probability that the @xmath99-ranked individual has less than @xmath378 leading 1-bitswithin @xmath272 generations is @xmath258 for sufficiently small @xmath28 .",
    "if this event does happen , we say that a _ failure _ has occurred . assuming no failure , each family tree member is selected in expectation less than @xmath379 times per generation .",
    "we first estimate the extinction time of each family tree , and the total number of lineages among the at most @xmath380 family trees . the reproductive rate is bounded from above by a constant @xmath288 .",
    "hence , by lemma [ lemma : branching - width ] , the probability that a given family tree survives longer than @xmath381 generations is @xmath382 . by union bound , the probability that any family tree survives longer than @xmath53 generations is less than @xmath383 , and we say that a failure has occurred if a family tree survives longer than @xmath53 generations . for each @xmath384 where @xmath385 let the random variable @xmath345 denote the number of lineages in family tree @xmath5 . by lemma [ lemma : branching - width ] and markov s inequality , the probability that the number of lineages in all the family trees exceeds @xmath386 , is @xmath387}}{\\rho e^{2cn } }      \\leq \\lambda e^{-cn}.    \\end{aligned}\\ ] ] if this happens , we say that a failure has occurred .",
    "we then bound the probability that any given member of the family tree is optimal . to be optimal ,",
    "it is necessary that there are at least @xmath372 0-bitsin the interval from @xmath100 to @xmath377 .",
    "we therefore optimistically assume that this is the case for the family tree member in question .",
    "however , none of these 0-bitsmust occur in the interval from bit position @xmath365 to bit position @xmath241 , otherwise the family tree member is not optimal .",
    "the length of this interval is @xmath388 .",
    "since the family tree is non - selective , the positions of these 0-bits are chosen uniformly at random among the @xmath377 bit positions .",
    "in particular , the probability of choosing a 0-bit within this interval , assuming no such bit position has been chosen yet , is at least @xmath389 , for some constant @xmath254 . and",
    "the probability that none of the at least @xmath372 0-bits are chosen from this interval is no more than @xmath390 .",
    "there are at most @xmath53 family tree members per lineage .",
    "the probability that any of the @xmath391 family tree members is optimal is by union bound no more than @xmath392 , assuming that @xmath28 is a sufficiently small constant .",
    "taking into account all the failure probabilities , the probability that the optimum is found within @xmath272 generations is @xmath258 , for a sufficiently small constant @xmath84 .    by combining the previous , intermediate results",
    ", we can finally prove the main result of this section .",
    "[ thm : runtime - high - selpres ] let @xmath81 and @xmath77 be any constants that satisfy @xmath69 .",
    "the expected runtime of the linear ranking ea with population size @xmath393 , for any integer @xmath70 , and selection pressure @xmath0 and constant mutation rate @xmath80 satisfying @xmath373 is @xmath394 .",
    "define @xmath339 and @xmath395 . by eq .",
    "( [ eq : xistar ] ) in the proof of proposition  [ prop : belowcritical ] , it holds that @xmath396 by theorem  [ thm : eq - time - below ] and markov s inequality , there is a constant probability that the @xmath99-ranked individual has reached at least @xmath397 leading 1-bitswithin @xmath334 generations , for some constant @xmath45 . by proposition  [ prop : prob - opt - in - n - square ] ,",
    "the probability that the optimum has not been found within the first @xmath334 generations is @xmath333 .",
    "if the optimum has not been found before the @xmath99-ranked individual has @xmath234 leading 1-bits , then by proposition  [ prop : belowcritical ] , the expected runtime is @xmath394 .",
    "the unconditional expected runtime of the linear ranking ea is therefore @xmath394 .",
    "this section proves an analogue to theorem  [ thm : runtime - high - selpres ] for parameter settings where the equilibrium position @xmath398 is below @xmath399 .",
    ", it is shown that is also hard when the selection pressure is too low . to prove this",
    ", it suffices to show that with overwhelming probability , no individual reaches more than @xmath400 leading 1-bitsin exponential time , for appropriately chosen constants @xmath401 .",
    "again , we will apply the technique of non - selective family trees , but with a different core than in the previous section .",
    "the core is here defined as the set of search points with prefix sum less than @xmath402 , where the _ prefix sum _ is the number of 1-bitsin the first @xmath400 bit positions of the search point .",
    "clearly , to obtain at least @xmath400 leading 1-bits , it is necessary to have prefix sum exactly @xmath400",
    ". we will consider individuals outside the core , , the individuals with prefix sums in the interval from @xmath402 to @xmath400 .",
    "note that choosing @xmath403 and @xmath404 to be constants slightly larger than 1 implies that this interval begins slightly above the equilibrium position @xmath405 given by theorem  [ thm : eq - pos ] ( see fig .",
    "[ fig : branchingtypes ] ) .",
    "single - type branching processes are not directly applicable to analyse this drift process , because they have no way of representing how far each family tree member is from the core .",
    "instead , we will consider a more detailed model based on _ multi - type branching processes _",
    "( see e.g. haccou et al .",
    "such branching processes generalise single - type branching processes by having individuals of multiple types . in our application , the type of an individual corresponds to the prefix - sum of the individual . before defining and studying this particular process",
    ", we will describe some general aspects of multi - type branching processes .",
    "[ def : multi - type - branching - process ] a multi - type branching process with @xmath406 types is a markov process @xmath273 on @xmath407 , which for all @xmath187 , is given by @xmath408 where for all @xmath409 , @xmath410 are i.i.d .",
    "random vectors having expectation @xmath411 } = : { { ( m_{j1},m_{j2}, ... ,m_{jd})}^{\\ensuremath{\\mathsf{t}}}}$ ] .",
    "the associated matrix @xmath412 is called the _",
    "mean matrix _ of the process .",
    "definition [ def : multi - type - branching - process ] states that the population vector @xmath413 for generation @xmath414 is defined as a sum of offspring vectors , one offspring vector for each of the individuals in generation @xmath53 . in particular , the vector element @xmath415 denotes the number of individuals of type @xmath416 in generation @xmath53 .",
    "and @xmath417 denotes the offspring vector for the @xmath5-th individual , @xmath418 of type @xmath139 .",
    "the @xmath90-th element , @xmath419 of this offspring vector @xmath420 represents the number of offspring of type @xmath90 this individual produced .",
    "analogously to the case of single - type branching processes , the expectation of a multi - type branching process @xmath271 with mean matrix @xmath421 follows @xmath422}}^{\\ensuremath{\\mathsf{t } } } }        = { { { \\mathbf{e}\\left[{\\mathbf{e}\\left[z_{t}\\mid z_{t-1}\\right]}\\right]}}^{\\ensuremath{\\mathsf{t } } } }          = { { { \\mathbf{e}\\left[z_{t-1}\\right]}}^{\\ensuremath{\\mathsf{t}}}}m          = { { { \\mathbf{e}\\left[z_0\\right]}}^{\\ensuremath{\\mathsf{t}}}}m^t .",
    "\\end{aligned}\\ ] ] hence , the long - term behaviour of the branching - process depends on the matrix power @xmath423 .",
    "calculating matrix powers can in general be non - trivial .",
    "however , if the branching process has the property that for any pair of types @xmath424 , it is possible that a type @xmath139-individual has an ancestor of type @xmath5 , then the corresponding mean matrix is _",
    "@xcite .",
    "[ def : irreducible ] a @xmath425 non - negative matrix @xmath421 is _ irreducible _ if for every pair @xmath424 of its index set , there exists a positive integer @xmath53 such that @xmath426 , where @xmath427 are the elements of the @xmath53-th matrix power @xmath423 .",
    "if the mean matrix @xmath421 is irreducible , then theorem  [ thm : perron - frobenius ] implies that the asymptotics of the matrix power @xmath423 depend on the largest eigenvalue of @xmath421 .",
    "[ thm : perron - frobenius ] if @xmath421 is an irreducible matrix with non - negative elements , then it has a unique positive eigenvalue @xmath278 , called the _ perron root _ of @xmath421 , that is greater in absolute value than any other eigenvalue .",
    "all elements of the left and right eigenvectors @xmath428 and",
    "@xmath429 that correspond to @xmath278 can be chosen positive and such that @xmath430 and @xmath431 .",
    "in addition , @xmath432 where @xmath433 and @xmath434 are matrices that satisfy the conditions    1 .",
    "@xmath435 2 .",
    "there are constants @xmath436 and @xmath437 such that none of the elements of the matrix @xmath438 exceeds @xmath439 .",
    "a central attribute of a multi - type branching process is therefore the perron root of its mean matrix @xmath421 , denoted @xmath440 .",
    "a multi - type branching process with mean matrix @xmath421 is classified as _ sub - critical _ if @xmath441 , _ critical _ if @xmath442 and _ super - critical _ if @xmath443 .",
    "theorem [ thm : perron - frobenius ] implies that any sub - critical multi - type branching process will eventually become extinct .",
    "however , to obtain good bounds on the probability of extinction within a given number of generations @xmath53 using theorem [ thm : perron - frobenius ] , one also has to take into account matrix @xmath444 that is defined in terms of both the left and right eigenvectors . instead of directly applying theorem [ thm : perron - frobenius ] , it will be more convenient to use the following lemma .",
    "[ lemma : branching - size - tail ] let @xmath445 be a multi - type branching process with irreducible mean matrix @xmath446 . if the process started with a single individual of type @xmath447 , then for any @xmath448 and @xmath121 , @xmath449 where @xmath450 denote the standard basis vectors , @xmath440 is the perron root of @xmath421 with the corresponding right eigenvector @xmath451 , and @xmath452 .",
    "the proof follows @xcite . by theorem  [ thm : perron - frobenius ]",
    ", matrix @xmath421 has a unique largest eigenvalue @xmath440 , and all the elements of the corresponding right eigenvector @xmath451 are positive , implying @xmath453 .",
    "the probability that the process consists of more than @xmath90 individuals in generation @xmath53 , conditional on the event that the process started with a single individual of type @xmath447 , can be bounded as @xmath454 markov s inequality and linearity of expectation give @xmath455}\\cdot\\frac{1}{kv^*}\\\\      &   =      \\sum_{j=1}^d{\\mathbf{e}\\left[z_{tj}\\mid z_0=e_h\\right]}\\cdot \\frac{v_j}{kv^*}.    \\end{aligned}\\ ] ] as seen above , the expectation on the right hand side can be expressed as @xmath456}}^{\\ensuremath{\\mathsf{t } } } } = { { { \\mathbf{e}\\left[z_0\\mid z_0=e_h\\right]}}^{\\ensuremath{\\mathsf{t}}}}m^t .",
    "\\end{aligned}\\ ] ] additionally , by taking into account the starting conditions , @xmath457 and @xmath458 , for all indices @xmath459 , this simplifies further to @xmath460}\\cdot \\frac{v_j}{kv^ * }        & = \\sum_{j=1}^d\\sum_{i=1}^d { \\mathbf{e}\\left[z_{0i}\\mid z_0=e_h\\right]}\\cdot m_{ij}^{(t)}\\cdot \\frac{v_j}{kv^*}\\\\       & = \\sum_{j=1}^d m_{hj}^{(t)}\\cdot \\frac{v_j}{kv^*}.    \\end{aligned}\\ ] ] finally , by iterating @xmath461 which on coordinate form gives @xmath462 one obtains the final bound @xmath463    ( 0cm,0 cm ) ",
    "( 8.25cm,0 cm ) ;    ( 1.0 cm , 1.0 cm ) node[text width=1.5 cm ] prefix sum ; ( 1.0cm,-1.0 cm ) node[text width=1.5 cm ] branching process type ;    ( 2.0cm,-0.1 cm )  ( 2.0cm,0.1 cm ) node[above ] @xmath464 ;    ( 3.5cm,-0.1 cm ) node[below ] @xmath465 ",
    "( 3.5cm,0.1 cm ) node[above ] @xmath466 ;    ( 7.5cm,-0.1 cm ) node[below ] @xmath101 ",
    "( 7.5cm,0.1 cm ) node[above ] @xmath467 ;    ( 4.5cm,0 cm ) node[below ] @xmath139 circle ( 2pt ) ; ( 6.5cm,0 cm ) node[below ] @xmath5 circle ( 2pt ) ; ( 6.5,0 cm ) .. controls ( 5.75cm,0.5 cm ) and ( 5.25cm,0.5 cm ) .. ( 4.6cm,0.1 cm ) ; ( 5.5,0.75 ) node @xmath468 ;    we will now describe how to model a non - selective family tree outside the core as a multi - type branching process ( see fig .",
    "[ fig : branchingtypes ] ) . recall that the prefix sum of a search point is the number of 1-bitsin the first @xmath400 bit positions of the search point , and that the core is defined as all search points with prefix - sum less than @xmath402 1-bits .",
    "the process has @xmath469 types .",
    "a family tree member has type @xmath5 if its prefix sum is @xmath470 .",
    "the element @xmath471 of the mean matrix @xmath444 of this branching process represents the expected number of offspring a type @xmath5-individual gets of type @xmath139-individuals per generation .",
    "since we are looking for a lower bound on the extinction probability , we will over - estimate the matrix elements , which can only decrease the extinction probability . by the definition of linear ranking selection , the expected number of times during one generation in which any individual is selected is no more than @xmath0 .",
    "we will therefore use @xmath472 , where @xmath468 is the probability that mutating a type @xmath5-individual creates a type @xmath139-individual . to simplify the proof of the second part of lemma [ lemma : perron - bound ] , we overestimate the probability @xmath468 to @xmath473 for the indices @xmath5 and @xmath139 where @xmath474 .",
    "note that the probability that none of the first @xmath402 bits are flipped is less than @xmath475 .",
    "in particular , this means that @xmath476 . the full definition of the mean matrix is as follows .",
    "[ def : selpresmeanmatrix ] for any integer @xmath477 and real numbers @xmath478 where @xmath479 and @xmath480 , define the @xmath481 matrix @xmath482 as @xmath483    in order to apply lemma  [ lemma : branching - size - tail ] to mean matrix @xmath444 defined above , we first provide upper bounds on the perron root of @xmath444 and on the maximal ratio between the elements of the corresponding right eigenvector .",
    "[ lemma : perron - bound ] for any integer @xmath477 , and real numbers @xmath484 @xmath80 , and @xmath485 , there exist real numbers @xmath403 and @xmath404 , @xmath480 , such that matrix @xmath444 given by definition [ def : selpresmeanmatrix ] has perron root bounded from above by @xmath486 for some constant @xmath487 . furthermore , for any @xmath447 , @xmath488 , the corresponding right eigenvector @xmath451 , where @xmath489 , satisfies @xmath490    set @xmath491 . since @xmath492 for all @xmath424 , matrix @xmath444 is by definition  [ def : irreducible ] irreducible , and theorem  [ thm : perron - frobenius ] applies to the matrix .",
    "expressing the matrix as @xmath493 , where @xmath494 , and @xmath495 is the identity matrix , the perron root is @xmath496 .",
    "the frobenius bound for the perron root of a non - negative matrix @xmath497 states that @xmath498 @xcite , where @xmath499 is the @xmath139-th column sum of @xmath421 .",
    "however , when applied directly to our matrix , this bound is insufficient for our purposes .",
    "instead , we can consider the transformation @xmath500 , for an invertible matrix @xmath501 to see why this transformation is helpful , note that for any matrix @xmath444 with the same dimensions as @xmath502 , we have @xmath503 .",
    "so if @xmath278 is an eigenvalue of @xmath434 , then @xmath504 and @xmath278 must also be an eigenvalue of @xmath500 .",
    "it follows that @xmath505 .",
    "we will therefore apply the frobenius bound to the matrix @xmath500 , which has off - diagonal elements @xmath506 define @xmath507 where @xmath508 for some constant @xmath509 that will be specified later .",
    "since @xmath510 for some @xmath84 , the constant @xmath511 is bounded as @xmath512    the sum of any column @xmath139 can be bounded by the three sums @xmath513 the perron root of matrix @xmath444 can now be bounded by @xmath514 choosing @xmath404 sufficiently small , such that @xmath515 , and defining the constant @xmath516 , we have @xmath517    ( 0.0 , 0.0 ) rectangle ( 3.0,3.0 ) ; ( 0.1,-0.1 ) rectangle ( 2.9,3.1 ) ;    ( 0.1 , 2.9 )  ( 2.9,0.1 )  ( 0.1,0.1 )  ( 0.1 , 2.9 ) ; ( 0.8 , 2.9 )  ( 2.9,0.8 )  ( 2.9,2.9 )  ( 0.8 , 2.9 ) ;    ( 2.3 , 0.1 )  ( 2.3,2.9 ) ;    ( 0.0 , 3.1 ) ",
    "node[above ] @xmath518 ( 0.7,3.1 ) ; ( 2.3,-0.1 ) ",
    "node[below ] @xmath519 ( 0.0,-0.1 ) ;    at ( 1.50 , 2.60 ) 1a ; at ( 1.15 , 2.20 ) 2a ; at ( 0.70 , 1.80 ) 3a ;    at ( 2.60 , 1.50 ) 1b ; at ( 2.60 , 0.75 ) 2b ; at ( 2.60 , 0.25 ) 3b ;    the second part of the lemma involves for any @xmath447 , to bound the ratio @xmath520 where @xmath451 is the right eigenvector corresponding to the eigenvalue @xmath278 . in the special case where the index @xmath447 corresponds to the eigenvector element with largest value , this ratio is called the _ principal ratio_. by generalising minc s bound for the principal ratio @xcite , one obtains the upper bound @xmath521 it now suffices to prove that the matrix elements of @xmath444 satisfy @xmath522    to prove that these inequalities hold , we first find a lower bound @xmath523 on the minimal element along any column , @xmath524 for any column index @xmath139 . as illustrated in fig .",
    "[ fig : matrix - structure ] , the matrix elements of @xmath444 can be divided into six cases according to their column and row indices , for case 1a and 1b , where @xmath525 , @xmath526 for case 2a and 2b , where @xmath527 , @xmath528 for case 3a and 3b , where @xmath529 , @xmath530 hence , we can use the lower bound @xmath531    we then upper bound the ratio @xmath532 for all column indices @xmath139 .",
    "all elements of the matrix satisfy @xmath533 .",
    "therefore , in case 1b , 2b and 3b , where @xmath534 , @xmath535 in case 1a and 2a , where @xmath536 , @xmath537 finally , in case 3a , where @xmath538 and @xmath539 , @xmath540 the second part of the lemma therefore holds .",
    "having all the ingredients required to apply lemma  [ lemma : branching - size - tail ] to the mean matrix in definition [ def : selpresmeanmatrix ] , we are now ready to prove the main technical result of this section . note that this result implies that conjecture 1 in @xcite holds .",
    "[ thm : unlikely - above ] for any positive constant @xmath93 , and some positive constant @xmath28 , the probability that during @xmath272 generations , linear ranking ea with population size @xmath541 , selection pressure @xmath0 , and mutation rate @xmath50 , there exists any individual with at least @xmath542 leading 1-bitsis @xmath258 .    in the following ,",
    "@xmath403 and @xmath404 are two constants such that @xmath543 , where the relative magnitudes of @xmath403 and @xmath404 are as given in the proof of lemma  [ lemma : perron - bound ] .",
    "let the _ prefix sum _ of a search point be the number of 1-bitsin the first @xmath400 bits .",
    "we will apply the technique of non - selective family trees , where the core is defined as the set of search points with prefix sum less than @xmath402 1-bits . clearly ,",
    "any non - optimal individual in the core has fitness lower than @xmath402 .    to estimate the extinction time of a given family tree , we consider the multi - type branching process @xmath544 having @xmath545 types , and where the mean matrix @xmath444 is given by definition [ def : selpresmeanmatrix ] .",
    "let the random variable @xmath546 be the family size in generation @xmath53 .",
    "by lemma  [ lemma : branching - size - tail ] and lemma  [ lemma : perron - bound ] , it is clear that the extinction probability of the family tree depends on the type of the root of the family tree .",
    "the higher the prefix sum of the family root , the lower the extinction probability .",
    "the parent of the root of the family tree has prefix sum lower than @xmath402 , hence the probability that the root of the family tree has type @xmath447 , is @xmath547    by lemma [ lemma : branching - size - tail ] and lemma [ lemma : perron - bound ] , the probability that the family tree has more than @xmath90 members in generation @xmath53 is for sufficiently large @xmath15 and sufficiently small @xmath404 bounded by @xmath548 by lemma  [ lemma : perron - bound ] , the perron root of matrix @xmath444 is bounded from above by a constant @xmath549 .",
    "hence , for any constant @xmath550 , the constant @xmath404 can be chosen sufficiently small such that for large @xmath15 , the probability is bounded by @xmath551 .    for @xmath293 and @xmath552 , the probability that the non - selective family tree is not extinct in @xmath15 generations , , that the _ height _ of the tree is larger than @xmath15 , is @xmath553 .",
    "furthermore , the probability that the _ width _ of the non - selective family tree exceeds @xmath554 in any generation is by union bound less than @xmath555 .",
    "we now consider a phase of @xmath272 generations . the number of family trees outside the core during this period is less than @xmath556 .",
    "the probability that any of these family trees survives longer than @xmath15 generations , or are wider than @xmath557 , is by union bound @xmath558 for a sufficiently small constant @xmath28 .",
    "the number of paths from root to leaf within a single family tree is bounded by the product of the height and the width of the family tree .",
    "hence , the expected number of different paths from root to leaf in all family trees is less than @xmath559 .",
    "the probability that it exceeds @xmath560 is by markov s inequality @xmath561 .",
    "the parent of the root of each family tree has prefix sum no larger than @xmath402 . in order to reach at least @xmath400 leading 1-bits ,",
    "it is therefore necessary to flip @xmath545 0-bits within @xmath15 generations .",
    "the probability that a given 0-bitis not flipped during @xmath15 generations is @xmath562 for some constant @xmath563 .",
    "hence , the probability that all of the @xmath545 0-bitsare flipped at least once within @xmath15 generations is no more than @xmath564 for some constant @xmath254 .",
    "hence , by union bound , the probability that any of the paths attains at least @xmath565 leading 1-bitsis less than @xmath566 for sufficiently small @xmath28 and @xmath567 .    using theorem [ thm : unlikely - above ] , it is now straightforward to prove that is hard for the linear ranking ea when the ratio between the selection pressure @xmath0 and the mutation rate @xmath1 is too small .",
    "[ cor : runtime - low - selpres ] the probability that linear ranking ea with population size @xmath568 , bit - wise mutation rate @xmath50 , and selection pressure @xmath0 satisfying @xmath569 for any @xmath82 , finds the optimum of within @xmath272 function evaluations is @xmath258 , for some constant @xmath84 .    in order to reach the optimum ,",
    "it is necessary to obtain an individual having at least @xmath570 leading 1-bits .",
    "however , by theorem  [ thm : unlikely - above ] , the probability that this happens within @xmath272 generations is @xmath258 for some constant @xmath84 .",
    "the aim of this paper has been to better understand the relationship between mutation and selection in eas , and in particular to what degree this relationship can have an impact on the runtime . to this end",
    ", we have rigorously analysed the runtime of a non - elitist population - based ea that uses linear ranking selection and bit - wise mutation on a family of fitness functions .",
    "we have focused on two parameters of the ea , @xmath0 which controls the selection pressure , and @xmath1 which controls the bit - wise mutation rate .",
    "the theoretical results show that there exist fitness functions where the parameter settings of selection pressure @xmath0 and mutation rate @xmath1 have a dramatic impact on the runtime . to achieve polynomial runtime on the problem , the settings of these parameters need to be within a narrow critical region of the parameter space , as illustrated in fig .",
    "[ fig : finalresult ] .",
    "an arbitrarily small increase in the mutation rate , or decrease in the selection pressure can increase the runtime of the ea from a small polynomial ( highly efficient ) , to exponential ( highly inefficient ) .",
    "the critical factor which determines whether the ea is efficient on the problem is not individual parameter settings of @xmath0 or @xmath1 , but rather the ratio between these two parameters .",
    "a too high mutation rate @xmath1 can be balanced by increasing the selection pressure @xmath0 , and a too low selection pressure @xmath0 can be balanced by decreasing the mutation rate @xmath1 .",
    "furthermore , the results show that the ea will also have exponential runtime if the selection pressure becomes too high , or the mutation rate becomes too low .",
    "it is pointed out that the position of the critical region in the parameter space in which the ea is efficient is problem dependent .",
    "hence , the ea may be efficient with a given mutation rate and selection pressure on one problem , but be highly inefficient with the same parameter settings on another problem .",
    "there is therefore no balance between selection and mutation that is good on all problems .",
    "the results shed some light on the possible reasons for the difficulty of parameter tuning in practical applications of eas",
    ". the optimal parameter settings can be problem dependent , and very small changes in the parameter settings can have big impacts on the efficiency of the algorithm .",
    "informally , the results for the functions studied here can be explained by the occurrence of an equilibrium state into which the non - elitist population enters after a certain time . in this state , the ea makes no further progress , even though there is a fitness gradient in the search space .",
    "the position in the search space in which the equilibrium state occurs depends on the mutation rate and the selection pressure .",
    "when the number of new good individuals added to the population by selection equals the number of good individuals destroyed by mutation , then the population makes no further progress .",
    "if the equilibrium state occurs close to the global optimum , then the ea is efficient .",
    "if the equilibrium state occurs far from the global optimum , then the ea is inefficient .",
    "the results are theoretically significant because the impact of the selection - mutation interaction on the runtime of eas has not previously been analysed .",
    "furthermore , there exist few results on the runtime of population - based eas , in particular those that employ both a parent and an offspring population .",
    "our analysis answers a challenge by happ et al .",
    "@xcite , to analyse a population - based ea using a non - elitist selection mechanism .",
    "although this paper analyses selection and mutation on the surface , it actually touches upon a far more fundamental issue of the trade - off between exploration ( driven by mutation ) and exploitation ( driven by selection ) .",
    "the analysis presented here could potentially by used to study rigorously the crucial issue of balancing exploration and exploitation in evolutionary search .",
    "in addition to the theoretical results , this paper has also introduced some new analytical techniques to the analysis of evolutionary algorithms . in particular , the behaviour of the main part of the population and stray individuals are analysed separately .",
    "the analysis of stray individuals is achieved using a concept which we call non - selective family trees , which are then analysed as single- and multi - type branching processes .",
    "furthermore , we apply the drift theorem in two dimensions , which is not commonplace .",
    "as already demonstrated in @xcite , these new techniques are applicable to a wide range of eas and fitness functions .    a challenge for future experimental work is to design and analyse strategies for dynamically adjusting the mutation rate and selection pressure .",
    "can self - adaptive eas be robust on problems like those that are described in this paper ? for future theoretical work , it would be interesting to extend the analysis to other problem classes , to other selection mechanisms , and to eas that use a crossover operator .",
    "the authors would like to thank tianshi chen for discussions about selection mechanisms in evolutionary algorithms and roy thomas , lily kolotilina and jon rowe for discussions about perron root bounding techniques .",
    "thomas bck .",
    "selective pressure in evolutionary algorithms : a characterization of selection mechanisms . in _ proceedings of the 1st ieee conference on evolutionary computation ( cec  1994 ) _ , pages 5762 .",
    "ieee press , 1994 .",
    "tianshi chen , jun he , guangzhong sun , guoliang chen , and xin yao . a new approach for analyzing average time complexity of population - based evolutionary algorithms on unimodal problems .",
    ", 39(5):10921106 , oct .",
    "benjamin doerr and daniel johannsen .",
    "refined runtime analysis of a basic ant colony optimization algorithm . in _ proceedings of 2007 ieee congress on evolutionary computation ( cec  2007 ) _ , pages 501507 , 2007 .",
    "benjamin doerr , frank neumann , dirk sudholt , and carsten witt . on the runtime analysis of the 1-ant aco algorithm . in _ proceedings of the 9th annual conference on genetic and evolutionary computation ( gecco  2007 ) _ , pages 3340 , new york , ny , usa , 2007 .",
    "acm .",
    "edda happ , daniel johannsen , christian klein , and frank neumann .",
    "rigorous analyses of fitness - proportional selection for optimizing linear functions . in _ proceedings of the 10th annual conference on genetic and evolutionary computation ( gecco  2008 ) _ , pages 953960 , new york , ny , usa , 2008 .",
    "acm .",
    "jens jgerskpper and carsten witt .",
    "rigorous runtime analysis of a ( @xmath176 + 1 ) es for the sphere function . in _ proceedings of the 2005 conference on genetic and evolutionary computation ( gecco  2005 ) _ , pages 849856 , new york , ny , usa , 2005 .",
    "acm .          per  kristian lehre and xin yao .",
    "on the impact of the mutation - selection balance on the runtime of evolutionary algorithms . in _ proceedings of the tenth acm sigevo workshop on foundations of genetic algorithms ( foga 2009 ) _ , pages 4758 , new york , ny , usa , 2009 .",
    "acm .",
    "frank neumann , pietro  simone oliveto , and carsten witt .",
    "theoretical analysis of fitness - proportional selection : landscapes and efficiency . in",
    "_ proceedings of the 11th annual conference on genetic and evolutionary computation ( gecco  2009 ) _ , pages 835842 , new york , ny , usa , 2009 .",
    "frank neumann and carsten witt .",
    "runtime analysis of a simple ant colony optimization algorithm . in _ proceedings of the 17th international symposium on algorithms and computation ( isaac 2006 ) _ , number 4288 in lncs , pages 618627 , 2006 .",
    "ingo wegener .",
    "simulated annealing beats metropolis in combinatorial optimization . in _ proceedings of the 32nd international colloquium on automata , languages and programming ( icalp 2005 ) _ , volume 3580 of _ lncs _ , pages 589601 , 2005 .",
    "darrell whitley . the genitor algorithm and selection pressure : why rank - based allocation of reproductive trials is best . in j.",
    "d. schaffer , editor , _ proceedings of the third international conference on genetic algorithms _ , san mateo , ca , 1989 .",
    "morgan kaufman ."
  ],
  "abstract_text": [
    "<S> the interplay between mutation and selection plays a fundamental role in the behaviour of evolutionary algorithms ( eas ) . </S>",
    "<S> however , this interplay is still not completely understood . </S>",
    "<S> this paper presents a rigorous runtime analysis of a non - elitist population - based ea that uses the linear ranking selection mechanism . </S>",
    "<S> the analysis focuses on how the balance between parameter @xmath0 , controlling the selection pressure in linear ranking , and parameter @xmath1 controlling the bit - wise mutation rate , impacts the runtime of the algorithm . </S>",
    "<S> the results point out situations where a correct balance between selection pressure and mutation rate is essential for finding the optimal solution in polynomial time . </S>",
    "<S> in particular , it is shown that there exist fitness functions which can only be solved in polynomial time if the ratio between parameters @xmath0 and @xmath1 is within a narrow critical interval , and where a small change in this ratio can increase the runtime exponentially . </S>",
    "<S> furthermore , it is shown quantitatively how the appropriate parameter choice depends on the characteristics of the fitness function . </S>",
    "<S> in addition to the original results on the runtime of eas , this paper also introduces a very useful analytical tool , , multi - type branching processes , to the runtime analysis of non - elitist population - based eas . </S>"
  ]
}
{
  "article_text": [
    "the shortest path problem ( spp ) is the problem of finding a path between two vertices in a directed graph such that the total weight of the arcs on the path is minimized .",
    "the quadratic shortest path problem ( qspp ) is the problem of finding a path between two vertices in a directed graph such that the total weight of the arcs and the sum of interaction costs over all pairs of arcs on the path is minimized .",
    "the spp is a well - studied combinatorial optimization problem , that can be solved in polynomial time if there do not exist negative cycles in the considered graph .",
    "there exist several efficient algorithms for solving the shortest path problem , e.g. , the dijkstra algorithm @xcite and the floyd-warshall algorithm @xcite .",
    "the spp can be applied to various problems such as transportation planning , network protocols , plant and facility layout , robotics , vlsi design etc . on the other hand ,",
    "there are not many results on the quadratic shortest path problem . in the recent paper by rostami et al .",
    "@xcite it is proven that the general qspp can not be approximated unless p = np .",
    "the same result is proven for the adjacent qspp ( aqspp ) , that is a variant of the qspp . in the aqspp interaction costs of all non - adjacent pairs of arcs are equal to zero ,",
    "see @xcite . however , the adjacent qspp is solvable in polynomial time for acyclic graphs and series of parallel graphs .",
    "although the qspp was only recently introduced , several variants of the spp that are related to the qspp were studied in @xcite . in particular sivakumar and batta @xcite consider a variance - constrained shortest path , and sen et al .",
    "@xcite a route - planning model in which the choice of a route is based on the mean as well as the variance of the path travel - time .",
    "the qspp is also related to the reliable shortest path problem , see e.g. , nie and wu @xcite .",
    "the qspp appears in a study on network protocols .",
    "namely , murakami and kim @xcite study different restoration schemes of survivable asynchronous transfer mode networks that can be formulated as the qspp . for detailed overview on applications of the qspp see @xcite .",
    "buchheim and traversi @xcite , and rostami et al .",
    "@xcite present several approaches to solve the general qspp . in particular , the authors in @xcite consider separable underestimators that can be exploited for solving binary quadratic programming problems , including the qspp .",
    "several lower bounding approaches for the qspp , including a glimore - lawler - type bound and reformulation - based bound are presented in @xcite . in this paper",
    "we do not investigate computational aspects for solving the qspp in general .",
    "+ * main results and outline .",
    "* + in section [ sect : probl_form ] , we formulate the quadratic shortest path problem as an integer programming problem .",
    "complexity results for the general and adjacent qspp are given in section [ section : nphard ] .",
    "in particular , in section [ section : general ] we derive a new polynomial - time reduction from the well known quadratic assignment problem ( qap ) to the qspp .",
    "our reduction differs from the one given by rostami et al .",
    "namely , our approach results in an instance for the qspp with @xmath3 arcs , while the reduction from @xcite derives an instance with @xmath4 arcs . here , @xmath5 is the order of the data matrices in the quadratic assignment problem .",
    "the here presented polynomial - time reduction from the qap , in combination with the library of the qap @xcite , provides a source of difficult qspp test instances .    in section [ section : aqspp ]",
    ", we describe the polynomial - time algorithm for solving the adjacent qspp from @xcite .",
    "we also show that the algorithm fails for the adjacent qspp considered on directed cyclic graphs , while it performs well on directed acyclic graphs ( dags ) .",
    "further , we provide a polynomial - time reduction from the 2-arc - disjoint paths problem , that is known to be np - hard , to the adjacent qspp considered on a directed cyclic graph .",
    "our proof of inapproximability is considerable simpler than the proof from @xcite .    in section [ section : linearqspp ]",
    ", we consider special cases of the qspp .",
    "in particular , we prove that the qspp considered on a directed cycle is linearizable i.e. , an optimal solution for a qspp instance on a directed cycle can be found by solving the corresponding instance of the spp . here",
    ", we also show that a qspp instance on a digraph for which every @xmath6-@xmath7 path has the same length and whose quadratic cost matrix is a symmetric weak sum matrix is linearizable . finally ,",
    "we prove that a solution of the qspp whose quadratic cost matrix is a nonnegative symmetric product matrix can be obtained by solving the corresponding spp .",
    "we provide sufficient and necessary conditions for an instance of the qspp on a complete digraph with four nodes to be linearizable in section [ sect : completegraphs ] . in the same section",
    "we give several properties of linearizable qspp instance on complete digraphs with more than four nodes .",
    "in section [ sect : dgg ] , we present an algorithm that examines whether a qspp instance on the directed grid graph @xmath8 ( @xmath1 ) is linearizable .",
    "if the instance is linearizable , then our algorithm provides the corresponding linearization vector .",
    "the complexity of the algorithm is @xmath2 .",
    "let @xmath9 be a directed graph with vertex set @xmath10 ( @xmath11 ) and arc set @xmath12 ( @xmath13 ) .",
    "a walk is defined as an ordered set of vertices @xmath14 , @xmath15 such that @xmath16 for @xmath17 .",
    "the length of a walk equals to the number of visited arcs .",
    "a walk is called a path if it does not contain repeated vertices .",
    "given a source vertex @xmath18 and a target vertex @xmath19 , a @xmath6-@xmath7 path is a path @xmath20 such that @xmath21 and @xmath22 .",
    "the quadratic cost of a @xmath6-@xmath7 path @xmath23 is calculated as follows .",
    "we are given a nonnegative vector @xmath24 indexed by the arc set @xmath12 , and a nonnegative symmetric matrix of order @xmath25 @xmath26 with zero - diagonal whose rows and columns are indexed by the arc set .",
    "an arc @xmath27 has the linear cost ( weight ) @xmath28 , and a pair of arcs @xmath29 the interaction cost @xmath30 .",
    "the total cost of the @xmath6-@xmath7 path @xmath23 is given by @xmath31 if @xmath32 is a zero - matrix , then the cost of a @xmath6-@xmath7 path @xmath23 is denoted by @xmath33 .",
    "we assume that the graph @xmath34 does not contain a directed cycle of cost zero .",
    "let us introduce the quadratic shortest path problem in a formal way .",
    "let @xmath23 be a @xmath6-@xmath7 path , and @xmath35 a binary vector of length @xmath25 such that @xmath36 is one if the arc @xmath37 is on the @xmath6-@xmath7 path @xmath23 and zero otherwise .",
    "now , the quadratic cost of the @xmath6-@xmath7 path @xmath23 with the characteristic vector @xmath35 , is given by @xmath38 given a vertex @xmath39 , the set of predecessor and successor vertices of @xmath40 are denoted by @xmath41 and @xmath42 , respectively .",
    "the path polyhedron is defined as follows : @xmath43 where @xmath44 is a vector of length @xmath5 such that @xmath45 if @xmath46 , @xmath47 if @xmath48 , and @xmath49 if @xmath50 .",
    "now the qspp can be modeled as the following quadratic integer programming problem : @xmath51 if @xmath32 is a zero - matrix , then the problem reduces to the shortest path problem . due to the flow conservation law , one can remove one of the equations in @xmath52 .    a qspp instance @xmath53 ( resp .",
    "spp instance @xmath54 ) can be specified by the tuple @xmath55 ( resp .",
    "@xmath56 ) .",
    "note that we use both , @xmath57 and @xmath58 , to denote an arc @xmath59 .",
    "sometimes one is more convenient than another .",
    "in section [ section : general ] we present a polynomial - time reduction from the quadratic assignment problem to the qspp .",
    "our reduction results in a significantly smaller number of arcs in the constructed qspp instance , than the number of the arcs in the qspp instance provided by the reduction from @xcite .",
    "section [ section : aqspp ] and [ section : aqspp_disjoint ] consider the adjacent qspp . in section [ section : aqspp ]",
    "we review the algorithm from @xcite on solving the aqspp on directed graphs , and show that it fails when the digraph under consideration contains a cycle .",
    "further , we provide a proof showing that the aqspp on cyclic digraphs can not be approximated unless p = np , see section [ section : aqspp_disjoint ] . our proof is simpler than the proof from @xcite .",
    "in @xcite it is proven that the qspp is np - hard by providing a polynomial - time reduction from the qap .",
    "the size of so constructed qspp instance in @xcite is considerably larger than the size of the input qap instance . in particular ,",
    "if a qap instance consists of @xmath5 facilities and @xmath5 locations , then the constructed qspp instance as described in @xcite has @xmath60 vertices and @xmath61 arcs .",
    "we present here another polynomial - time reduction from the qap to the qspp .",
    "our reduction yields a qspp instance with @xmath62 vertices and @xmath3 arcs , where @xmath5 is the order of the data matrices in the qap .",
    "this enables us to derive qspp test instances of reasonable sizes , from the qap instances given in the qap library @xcite .",
    "note that the qap library contains solutions and/or bounds for many qap instances , and is therefore a source of test instances for the qspp .",
    "the quadratic assignment problem is the following optimization problem : @xmath63 where @xmath64 , @xmath65 are given symmetric @xmath66 matrices , @xmath67 , and @xmath68 is the set of @xmath69 permutation matrices .",
    "the quadratic assignment problem has the following interpretation .",
    "suppose that there are @xmath5 facilities and @xmath5 locations .",
    "the flow between each pair of facilities , say @xmath70 , and the distance between each pair of locations , say @xmath71 , are given by @xmath72 and @xmath73 , respectively .",
    "the cost of placing a facility @xmath40 to location @xmath74 is @xmath75 .",
    "the qap problem is to find an assignment of facilities to locations such that the sum of the distances multiplied by the corresponding flows together with the total cost is minimized .",
    "let us now allow a directed multigraph in the definition of the qspp problem .",
    "a multigraph is a graph which is permitted to have multiple arcs from one to another vertex .",
    "we can now prove the following theorem .",
    "[ qaptoqspp2 ] @xmath76 .",
    "suppose we are given a qap instance with @xmath77 input matrices @xmath78 and that the diagonal entries of @xmath79 are zero .",
    "we construct a qspp instance on the graph @xmath9 whose vertex and arc sets are defined as follows : @xmath80 where the superscript @xmath40 indicates the @xmath40th arc between vertices @xmath81 and @xmath82 .",
    "the starting and ending vertices are @xmath83 and @xmath84 , respectively .",
    "the linear cost of the arc @xmath57 is defined as @xmath85 the interaction cost between the pair of arcs @xmath86 and @xmath87 is defined : @xmath88 where @xmath89 is a big number .",
    "all the other pairs of arcs have zero interaction costs .",
    "if we have a feasible qap instance , say facility @xmath40 is mapped into location @xmath90 , then we take the feasible qspp instance with arcs @xmath91 ( @xmath92 ) . by construction ,",
    "those two instances have the same objective value .",
    "conversely , a @xmath6-@xmath7 path in @xmath34 corresponds to the assignment for the qap with the same objective value .",
    "it follows from the above construction that for a given input instance of the qap with @xmath66 data matrices , one can construct a qspp instance with @xmath62 vertices and @xmath3 arcs .",
    "the adjacent qspp is a variant of the qspp , where interaction costs of all non - adjacent pairs of arcs are equal to zero . in other words , only the interaction cost of the form",
    "@xmath93 with @xmath94 and @xmath95 , or with @xmath96 and @xmath97 can have nonzero value . a polynomial time algorithm that solves instances of the adjacent qspp on directed acyclic graphs",
    "is presented in @xcite .",
    "it is actually stated in @xcite that the proposed algorithm finds an optimal solution for the aqspp on any digraph in polynomial time , which turns to be true only for directed acyclic graphs .    in this section",
    "we first describe the approach from @xcite , and then provide an example to show that the algorithm fails if the graph under consideration is not acyclic .",
    "let @xmath34 be a directed acyclic graph and @xmath55 an instance of the aqspp .",
    "we construct the graph @xmath98 from @xmath99 in the following way : @xmath100 where @xmath101 and @xmath102 represent vertices @xmath6 and @xmath7 , respectively .",
    "the costs of the arcs in the graph @xmath103 are given as follows @xmath104 now , the _ linearized instance _ of @xmath53 is the following spp instance @xmath105 .",
    "the following theorem shows that the optimal @xmath6-@xmath7 path for the aqspp instance @xmath53 on a directed acyclic graph can be obtained by solving the spp instance @xmath106 .",
    "[ radjacentdagtheorem ] let @xmath34 be a directed acyclic graph , @xmath55 an aqspp instance , and @xmath105 the linearized instance of @xmath53 .",
    "then , an optimal solution of @xmath53 can be obtained by solving the spp for @xmath106 .",
    "( see also @xcite . )",
    "we first show that any @xmath6-@xmath7 path in @xmath34 corresponds to a @xmath101-@xmath102 path in @xmath103 , and vice - versa . for ease of notation we set @xmath107 and @xmath108 .",
    "let @xmath109 be a @xmath110-@xmath111 path in @xmath34 .",
    "then it is not difficult to verify that @xmath112 is a @xmath113-@xmath114 path in the graph @xmath103 .",
    "the cost of the path @xmath115 is given by @xmath116 , which is exactly the cost of the path @xmath23 .",
    "conversely , let @xmath117 be a @xmath113-@xmath114 path in @xmath103 .",
    "take the ordered set of vertices @xmath109 .",
    "let us verify that @xmath23 is a walk that does not contain repeated vertices . from the definition of @xmath118 and @xmath119 , see , it follows that @xmath120 for all @xmath40 , and @xmath121 for @xmath122 .",
    "it remains now to verify that there do not exist @xmath123 ( @xmath124 ) for which @xmath125 .",
    "indeed , since @xmath34 is acyclic this is not possible .",
    "thus @xmath23 is a @xmath6-@xmath7 path in @xmath34 whose total cost equals to the linear cost of @xmath115 .",
    "note that if @xmath34 is not acyclic , then there may exist a @xmath101-@xmath102 path in the linearized graph for which does not exist a corresponding @xmath6-@xmath7 path in @xmath34 .",
    "let us give an example .",
    "consider a qspp instance on the directed graph @xmath34 from figure @xmath126 .",
    "the costs are given as follows .",
    "set @xmath127 for some @xmath128 and @xmath129 .",
    "all other linear and interaction costs are zero .",
    "set for the source and target vertex @xmath130 and @xmath131 , respectively .",
    "clearly , we have a well defined aqspp instance .",
    "moreover , @xmath132 is the unique @xmath6-@xmath7 path in @xmath34 , whose cost is two .",
    "[ scale=.8,auto = left , every node/.style = draw , circle ] ( n1 ) at ( 0,0 ) 1 ; ( n2 ) at ( 3,0 ) 2 ; ( n3 ) at ( 4.5,3 ) 3 ; ( n4 ) at ( 1.5,3 ) 4 ; ( n5 ) at ( 6,0 ) 5 ;    /in n1/n2,n2/n3,n3/n4,n4/n2,n2/n5 ( )  ( ) ;    we construct the graph @xmath103 from @xmath34 , see figure @xmath133 .",
    "it is not difficult to verify that @xmath134 is a @xmath135-@xmath136 path in @xmath103 , whose cost is @xmath137 .",
    "however this @xmath135-@xmath136 path does not correspond to a path in @xmath34 .",
    "[ scale=.6,auto = left , every node/.style = draw , circle , scale=0.8 ] ( n1 ) at ( 0,0 ) @xmath135 ; ( n2 ) at ( 3,0 ) @xmath138 ; ( n3 ) at ( 3,3 ) @xmath139 ; ( n4 ) at ( 6,3 ) @xmath140 ; ( n5 ) at ( 9,3 ) @xmath141 ; ( n6 ) at ( 9,0 ) @xmath142 ; ( n7 ) at ( 12,0 ) @xmath136 ; /in n1/n2,n2/n3,n3/n4,n4/n5,n5/n6,n6/n7,n2/n6 ( )  ( ) ;      in this section , we prove that the adjacent qspp that is not restricted to dags can not be approximated unless p = np .",
    "in particular , we show that the @xmath143-arc - disjoint paths problem polynomially transforms to the aqspp .",
    "rostamin et al .",
    "@xcite provide a polynomial - time reduction from 3sat to the aqspp .",
    "our reduction is considerably shorter ( and simpler ) than the reduction from @xcite .",
    "the @xmath144-arc - disjoint paths problem is defined as follows : let @xmath145 be a directed graph and @xmath146 pairs of vertices in @xmath34 .",
    "the @xmath144-arc - disjoint paths problem asks for pairwise arc - disjoint paths @xmath147 where @xmath148 is a @xmath149-@xmath150 path @xmath151 .",
    "an instance of the @xmath144-arc - disjoint paths problem can be specified via the tuple @xmath152 .",
    "fortune et al .",
    "@xcite prove that the @xmath144-arcs - disjoint paths problem is np - complete even for @xmath153 .",
    "we use this to prove the main result in this section .",
    "[ aqspp - nphard ] the adjacent qspp can not be approximated unless p = np .",
    "we provide a polynomial - time reduction from the 2-arc - disjoint paths problem to the adjacent qspp .",
    "let @xmath154 such that @xmath155 and @xmath156 be an instance of the @xmath143-arc - disjoint paths problem on the graph @xmath99 .",
    "we construct a directed graph @xmath157 , where the vertex set is given as follows @xmath158 in particular , for each vertex @xmath159 there are two vertices @xmath160 in @xmath118 , and for each arc @xmath161 there is the vertex @xmath162",
    ". the arc set @xmath119 is given by @xmath163 i.e. , for each arc @xmath164 there are two pairs of arcs @xmath165 , @xmath166 @xmath167 , and additionally the arc @xmath168 .",
    "now we define the cost functions @xmath169 and @xmath170 , @xmath171 as follows .",
    "the linear cost of each arc in @xmath119 is zero , i.e. , @xmath172 for every @xmath173 .",
    "for every two pairs of arcs @xmath165 and @xmath166 , @xmath167 the interaction cost is : @xmath174 the interaction costs of all other pairs of arcs are zero .",
    "clearly , the non - adjacent arcs have zero interaction costs .",
    "now , the constructed aqspp instance is @xmath175 .",
    "it remains to show that @xmath53 is a yes - instance of the @xmath143-arc - disjoint paths problem on @xmath34 if and only if @xmath106 has a @xmath176-@xmath177 path of cost zero .",
    "now if @xmath53 is a yes - instance , then there exists a @xmath6-@xmath7 path @xmath178 of length , say , @xmath179 with @xmath107 and @xmath180 and a @xmath181-@xmath182 path @xmath183 of length , say , @xmath184 with @xmath185 and @xmath186 , such that @xmath187 and @xmath188 are arc - disjoint . clearly , the following ordered set of vertices @xmath189 is a @xmath190-@xmath191 path of cost zero .",
    "conversely , a @xmath176-@xmath177 path @xmath115 in @xmath103 of cost zero is given by .",
    "we take the following ordered sets of vertices @xmath178 and @xmath183 in @xmath34 .",
    "it is not difficult to verify that @xmath187 and @xmath188 are two paths .",
    "it remains to show that @xmath187 and @xmath188 are arc - disjoint .",
    "let us assume this is not the case .",
    "then there exists an arc @xmath192 visited by both paths @xmath193 and @xmath194 . from the construction of @xmath115",
    ", it follows that the arcs @xmath195 , @xmath196 , @xmath197 and @xmath198 are visited by the path @xmath115 .",
    "this means that the vertex @xmath199 is visited twice in the @xmath176-@xmath177 path @xmath115 in @xmath103 , which contradicts to the fact that @xmath115 is a walk that does not contain repeated vertices .",
    "finally , the inapproximability result follows since the objective value of any feasible solution of the constructed aqspp is either zero or at least two .",
    "in this section we investigate easy cases of the quadratic shortest path problem . here",
    "we prove , among other things , that all qspp instances on a directed cycle can be solved by solving an appropriate instance of the spp . in section [ sec : costmatr ]",
    "we consider special cost matrices such as sum and product matrix .",
    "an instance of the qspp is said to be _",
    "linearizable _ if there exists a corresponding instance of the spp such that associated costs are equal i.e. , @xmath200 for every @xmath6-@xmath7 path @xmath23 in @xmath34 .",
    "we call @xmath201 the _ linearization vector _ of the qspp instance .",
    "linearizable instances for the quadratic assignment problem were considered in e.g. , @xcite , and linearizable instances for the quadratic minimum spanning tree problem in @xcite .",
    "we start this section by proving several basic results .",
    "[ linear : czero ] if the qspp instance @xmath202 is linearizable , and @xmath203 is a vector such that @xmath204 , then the qspp instance @xmath205 is also linearizable .",
    "since @xmath53 is linearizable , there exists a linear cost vector @xmath201 such that @xmath206 for every @xmath6-@xmath7 path @xmath23 in @xmath34 .",
    "let @xmath207 , then we have @xmath208 for every @xmath6-@xmath7 path @xmath23 .",
    "thus @xmath106 is also linearizable .    if two qspp instance @xmath209 and @xmath210 are linearizable , then the qspp instance @xmath211 is also linearizable for all nonnegative scalars @xmath212 , @xmath213 .",
    "similar to the proof of lemma [ linear : czero ] .",
    "an instance of the qspp may be linearizable if the underlying graph has special structure and/or the corresponding quadratic cost matrix has special properties .",
    "let us give a class of the qspp instances that is linearizable for any pair of cost matrices @xmath214 .",
    "the directed cycle @xmath215 of order @xmath5 is a graph with the vertex set @xmath216 and arc set @xmath217 where addition is modulo @xmath5 .",
    "we show below that any qspp instance on @xmath215 is linearizable .",
    "[ prop : dircycle ] let @xmath215 be the directed cycle of order @xmath5 with vertex set @xmath216 , @xmath218 .",
    "the qspp instance @xmath219 ( @xmath220 ) is linearizable , for any two distinct vertices @xmath221 , and any pair of cost matrices @xmath214 .",
    "the case @xmath222 is trivial .",
    "assume without loss of generality that @xmath223 and @xmath224 and @xmath225 .",
    "there is only one @xmath110-@xmath226 path , namely @xmath227 .",
    "the cost of this path is given by @xmath228 let us define the linear cost vector @xmath229 as follows @xmath230 then @xmath231 for every @xmath110-@xmath226 path in @xmath215 .",
    "directed cycles are not the only digraphs on which qspp instances are linearizable .",
    "they seem to be easiest cases . in the following sections we show under which conditions a qspp instance on a directed complete graph , tournament , and grid graph is linearizable .",
    "if the interaction cost matrix has a special structure , then the associated qspp instance may be solved efficiently .",
    "we consider here two types of cost matrices for which qspp instances are linearizable .",
    "we say that a matrix @xmath232 is a _ sum matrix _ generated by vectors @xmath233 and @xmath234 if @xmath235 for every @xmath236 and @xmath237 . a matrix is called a _ weak sum matrix _ if the condition above is not required for the diagonal entries .",
    "it is not difficult to show that if a sum matrix @xmath89 of order @xmath5 is symmetric , then there exists a vector @xmath238 such that @xmath239 for all @xmath240 .",
    "similarly , if the weak sum matrix @xmath89 of order @xmath5 is symmetric , then there exists a vector @xmath238 such that @xmath239 for all @xmath241 .",
    "recognition of a ( weak ) sum matrix can be done efficiently .",
    "sum matrices are also considered in the context of the qap @xcite , and the quadratic minimum spanning tree problem @xcite .",
    "the following result shows that symmetric weak sum matrices provide linearizable qspp instances under a certain condition .",
    "[ prop : weaksum ] let @xmath55 be a qspp instance . if every @xmath6-@xmath7 path in @xmath34 has the same length and @xmath32 is a symmetric weak sum matrix , then @xmath53 is linearizable .",
    "suppose that every @xmath6-@xmath7 path in @xmath34 has length @xmath242 . since @xmath32 is a symmetric weak sum matrix , there exists a vector @xmath233 such that @xmath243 for all @xmath244 .",
    "let @xmath23 be a @xmath6-@xmath7 path in @xmath34 with the arc set @xmath245 .",
    "then the cost of @xmath23 is : @xmath246 now , define the linear cost @xmath247 for every arc @xmath248 .",
    "thus , @xmath231 for every @xmath6-@xmath7 path @xmath23 in @xmath34 .",
    "let us give two examples of graphs whose all @xmath6-@xmath7 paths have constant length .",
    "[ def : gridgraph]the _ directed grid graph _",
    "@xmath249 is defined as follows .",
    "the set of vertices and the set of arcs are given as follows : @xmath250 a = &   \\left   \\ { ( v_{i , j},v_{i+1,j } ) \\;|\\ ; 1 \\leq i \\leq p - 1 , \\ ; 1 \\leq j \\leq q   \\right \\ } \\\\[1ex ]   & \\cup    \\left   \\ { ( v_{i , j},v_{i , j+1 } ) \\;|\\ ; 1 \\leq i \\leq p , \\ ; 1 \\leq j \\leq q-1   \\right \\}. \\end{array}\\ ] ] note that @xmath251 and @xmath252 . if @xmath253 and @xmath254 , then every @xmath6-@xmath7 path has length @xmath255 .",
    "the _ directed hypercube graph _",
    "@xmath256 is defined as follows .",
    "there is a vertex for each binary string of length @xmath5 , there is an arc @xmath257 if the vertices @xmath258 and @xmath259 differ in exactly one bit position and the binary value of @xmath258 is less than the binary value of @xmath259 .",
    "note that @xmath256 has @xmath260 vertices , @xmath261 arcs .",
    "if @xmath6 is an all - zeros string and @xmath7 is an all - ones string , then every @xmath6-@xmath7 path has length @xmath5 .    let us consider another special cost matrix .",
    "a matrix @xmath262 is called a _ symmetric product matrix _ if @xmath263 for some vector @xmath233 .",
    "a nonnegative product matrix with integer values plays a role in the wiener maximum qap , see @xcite .",
    "if @xmath264 is a positive semidefinite matrix , then the tuple @xmath265 is a convex qspp instance . here",
    ", the diag operator maps a @xmath25-vector to the diagonal matrix , by placing the vector on the diagonal of the @xmath266 matrix . in @xcite",
    ", it is shown that the convex qspp is apx - hard , but can be approximated within a factor of @xmath267 .",
    "the following result shows that one can solve the qspp efficiently whenever @xmath264 is a symmetric product matrix , thus positive semidefinite matrix of rank one .",
    "[ prop : productmatrix ] let @xmath55 be a qspp instance .",
    "if @xmath268 is a nonnegative symmetric product matrix , then @xmath53 is solvable in @xmath269 time .    since @xmath270 is a nonnegative symmetric product matrix , there exists a vector @xmath271 such that @xmath272 .",
    "let @xmath273 be the characteristic vector of a @xmath6-@xmath7 path @xmath23 in @xmath34 .",
    "the cost of this path satisfies @xmath274 let us define the linear cost vector @xmath275 by taking @xmath276 for every @xmath57 .",
    "thus , we have @xmath277 for every @xmath6-@xmath7 path @xmath23 in @xmath34 , and the complexity of solving the shortest path problem by dijkstra s algorithm is @xmath269 .",
    "in this section we analyze the qspp on the complete symmetric digraph @xmath278 , that is a digraph in which every pair of vertices is connected by a bidirectional edge .",
    "it is trivial to solve the qspp on @xmath279 for @xmath280 . here",
    ", we provide sufficient and necessary conditions for a qspp instance on @xmath281 to be linearizable . we also derive necessary conditions for linearizable qspp instances on @xmath278 with @xmath282",
    ".    * assumptions . * in this section we assume w.l.o.g .  that the following trivial arcs are removed from @xmath278 : the incoming arcs to @xmath6 , outgoing arcs from @xmath7 , and the arc @xmath283 . for example ,",
    "the removal of these arcs from @xmath284 results in the simplified graph , see figure @xmath285 .",
    "further , we assume that the cost vector @xmath286 is all - zero vector ( see lemma [ linear : czero ] ) , and that interaction costs of pairs of arcs that can not be together included in any @xmath6-@xmath7 path is zero .",
    "for example , the interaction cost of arcs @xmath287 and @xmath288 in graph from figure @xmath285 is zero .",
    "[ scale=.6,auto = left , every node/.style = draw , circle , scale=0.8 ] ( n1 ) at ( 0,0 ) @xmath110 ; ( n2 ) at ( 2,2 ) @xmath289 ; ( n3 ) at ( 2,-2 ) @xmath290 ; ( n4 ) at ( 4,0 ) @xmath291 ; /in n1/n2,n1/n3,n2/n3,n3/n2,n3/n4,n2/n4 ( )  ( ) ;    let @xmath292 ( @xmath293 ) be an instance of the qspp .",
    "we classify @xmath6-@xmath7 paths by their lengths for that instance .",
    "this classification leads us to necessary and/or sufficient conditions for a qspp instance to be linearizable .",
    "let @xmath294 denotes the set of @xmath6-@xmath7 paths of length @xmath144 for @xmath295 .",
    "the total cost of all @xmath6-@xmath7 paths of length @xmath144 is @xmath296 .",
    "the number of @xmath6-@xmath7 paths of the length @xmath144 is @xmath297 . in what follows ,",
    "we show that @xmath298 is bounded from above by @xmath299 for @xmath300 , and several other related results .",
    "[ linear : complete_average ] let @xmath292 be a qspp instance and @xmath301 .",
    "then the average cost of all @xmath6-@xmath7 paths of the length @xmath144 is not greater than the average cost of all @xmath6-@xmath7 paths of the length @xmath302 , i.e. , @xmath303 for @xmath304    we will derive an expression for @xmath305 ( @xmath306 ) in terms of the interaction costs .",
    "then , the claim follows from the fact that the expression is an increasing function for @xmath307 .    given an arc @xmath308",
    ", we define @xmath309 to be the head vertex @xmath40 , and @xmath310 to be the tail vertex @xmath74 .",
    "let @xmath311 be the set of arcs either leaving @xmath6 or entering @xmath7 .",
    "let @xmath312 be the set of distinct unordered pairs of adjacent arcs .",
    "based on the sets @xmath313 and @xmath314 , we define the following sets of distinct unordered pairs of arcs : @xmath315 clearly , @xmath313 and its complement partition the arc set , and @xmath316 partition the arc pairs in @xmath279 .",
    "the sum of interaction costs over the pairs of arcs in @xmath317 is + @xmath318 for @xmath319 .",
    "note that @xmath320 , where @xmath258 is the vector of all - ones .",
    "it holds that every pair of arcs @xmath321 ( @xmath322 ) , which is included in at least one @xmath6-@xmath7 path , is contained in the same number , denoted by @xmath323 , of @xmath6-@xmath7 paths of length @xmath144 .",
    "in particular we have @xmath324 for @xmath306 , the average cost of all @xmath6-@xmath7 paths of length @xmath144 can be written as : @xmath325 here , @xmath326 is the indicator function defined as @xmath327 if condition @xmath35 is true , and zero otherwise .",
    "it is clear that @xmath305 is an increasing function in @xmath307 and this finishes the proof .",
    "note that from it follows that one can easily compute @xmath298 for @xmath328 . as direct consequences of the previous proposition",
    ", we have the following two results .",
    "[ linear : complete_upper ]    1 .",
    "let @xmath292 be a qspp instance and @xmath301 .",
    "then @xmath329 for @xmath304 2 .",
    "let @xmath292 be a qspp instance and @xmath330 .",
    "then @xmath331 for @xmath332    _ proof .",
    "_ the first part follows directly from proposition [ linear : complete_average ] . to show the second part , note that @xmath323 in the proof of proposition [ linear : complete_average ] satisfy @xmath333 , @xmath334 , @xmath335 for @xmath332 thus , @xmath336 from where it follows : @xmath337 from corollary [ linear : complete_upper ] , it follows that @xmath338 is not bounded by @xmath298 for @xmath307 .",
    "this is due to the fact that the interaction costs of arc pairs in @xmath339 only contribute to @xmath338 .",
    "the second inequality in corollary [ linear : complete_upper ] shows that @xmath298 for @xmath340 can be arbitrarily bigger than @xmath341 .",
    "this is because the interaction costs of pairs in @xmath342 and @xmath343 ( respectively @xmath344 ) only contribute to the costs of paths of length greater or equal to four ( respectively five ) .    in what follows ,",
    "we show that linearizability imposes stricter conditions on interaction costs than those given above .",
    "in particular , @xmath338 has to be upper bounded by @xmath345 , and @xmath298 by @xmath341 for @xmath346 with a constant that is tighter than the one from corollary [ linear : complete_upper ] .",
    "let us first introduce the _ path matrix_. given a qspp instance @xmath55 , the @xmath6-@xmath7 _ path matrix _",
    "@xmath347 is a matrix whose rows are the characteristic vectors of the @xmath6-@xmath7 paths in @xmath34 .",
    "thus , the rows and columns of @xmath347 are indexed by the paths and the arcs of @xmath34 , respectively . the _ cost vector",
    "@xmath44 is defined as @xmath348 .",
    "for example , let @xmath349 be a qspp instance such that @xmath350 and @xmath351 , see figure [ linearization ] .",
    "the @xmath6-@xmath7 path matrix and cost vector are given as follows : @xmath352    note that a qspp instance on @xmath34 is linearizable if and only if the linear system @xmath353 , @xmath354 with variable @xmath355 has a solution .",
    "let us consider a qspp instance @xmath349 , see figure [ linearization ] .",
    "let @xmath350 and @xmath351 , and @xmath356 , and @xmath357 for all other pairs of arcs @xmath358 .",
    "then the costs satisfy @xmath359 and @xmath360 .",
    "thus , the sum of the costs of paths of length two is greater than the sum of the costs of paths of length three .",
    "now , for @xmath361 we have that @xmath362 and @xmath363 , and from the farkas lemma it follows that the qspp instance @xmath53 is not linearizable . _    in the following proposition we derive necessary conditions that should satisfy a linearizable qspp instance on complete digraph .",
    "the following conditions require that @xmath338 is bounded by @xmath345 , and also @xmath298 by @xmath341 for @xmath364 .",
    "note that those constraints are not imposed in general , see corollary [ linear : complete_upper ] .",
    "[ necessary_complete ]    1 .",
    "let @xmath292 be a qspp instance and @xmath301 .",
    "if @xmath53 is linearizable , then @xmath365 for @xmath366 .",
    "2 .   let @xmath292 be a qspp instance and @xmath282 .",
    "if @xmath53 is linearizable , then @xmath367 for every @xmath368 .",
    "let us first show the first claim .",
    "define @xmath369 for @xmath306 , and @xmath370    let @xmath313 be the arc set defined in @xmath371 .",
    "it is not difficult to see that for every arc @xmath372 ( resp .",
    "@xmath373 ) , there are @xmath374 ( resp .",
    "@xmath375 ) @xmath6-@xmath7 paths of length @xmath144 containing @xmath57 .",
    "note that @xmath376 and @xmath377 for every @xmath306 , as @xmath378 for @xmath307 .",
    "take the vector @xmath379 such that @xmath380 now , for the path matrix @xmath347 of @xmath278 it follows that @xmath381 , and for the cost vector @xmath382 .",
    "if @xmath53 is linearizable , then @xmath383 from where it follows the first claim .",
    "in a similar fashion , we prove the second claim by taking @xmath384    the results from proposition [ necessary_complete ] indicate that appropriate restrictions on @xmath298 might lead to sufficient conditions for a qspp instance to be linearizable .",
    "indeed , the next proposition provides characterization of linearizable qspp instances on @xmath284 .",
    "[ linear : k4 ] let @xmath349 be a qspp instance .",
    "@xmath53 is linearizable if and only if @xmath385 where @xmath193 , @xmath194 ( resp .",
    "@xmath386 , @xmath387 ) are paths of length two ( resp .",
    "three ) .",
    "let us denote by @xmath388 vertices of @xmath284 , and set @xmath350 and @xmath351 , see figure [ linearization ] .",
    "we denote four paths as follows , @xmath389 , @xmath390 , @xmath391 and @xmath392 .",
    "assume @xmath393 .",
    "we construct a vector @xmath201 s.t .",
    "@xmath394 for every @xmath395 .",
    "case 1 . if @xmath396 and @xmath397 , then we set @xmath398    case 2 . if @xmath399 , then we set @xmath400 the remaining cases can be similarly obtained .",
    "in all these cases , we have @xmath354 and @xmath401 for every @xmath402 .",
    "thus , @xmath53 is linearizable .",
    "conversely , it follows from proposition [ necessary_complete ] .",
    "note that one can easily verify the inequality from proposition [ linear : k4 ] .",
    "the following example shows that conditions from proposition [ necessary_complete ] are not sufficient already for @xmath403 .",
    "the inequalities in proposition [ necessary_complete ] are not sufficient for a qspp instance on @xmath403 to be linearizable .",
    "take @xmath404 , with @xmath350 , @xmath405 , @xmath406 , and @xmath357 for all other pairs of arcs @xmath358 .",
    "the costs of the paths @xmath407 and @xmath408 are two , and all the other paths have zero costs .",
    "thus we have @xmath409 and @xmath410 .",
    "it is readily to check that the both inequalities in proposition [ necessary_complete ] are satisfied .",
    "however this instance is not linearizable .",
    "namely , the paths @xmath411 and @xmath412 have zero costs .",
    "if there would exists a corresponding instance of the spp with the cost vector @xmath201 , then the linear costs of the arcs @xmath413 should be zeros . this leads to @xmath414 , which is not possible .",
    "let us assume now that a complete directed graph under consideration is a tournament , which is a graph in which every pair of vertices is connected by a single uniquely directed edge . then",
    ", all instances of a tournament with four vertices are linearizable .",
    "[ linear : t4 ] let @xmath415 be a qspp instance on a tournament @xmath416 . then",
    ", @xmath53 is linearizable .",
    "the proof is similar to the proof of the proposition [ necessary_complete ] .",
    "there exist qspp instances on a tournament with five vertices that are not linearizable .",
    "directed grid graphs are introduced in section [ sec : costmatr ] .",
    "the directed grid graph @xmath0 ( @xmath1 ) has @xmath417 vertices and @xmath418 arcs , given as in .",
    "every @xmath6-@xmath7 path in @xmath0 has the same length . in section [ sec : costmatr ]",
    "we prove that an instance of the qspp on @xmath8 , whose quadratic cost matrix is a symmetric weak sum matrix or a nonnegative symmetric product matrix can be solved by solving the corresponding spp .    in this section",
    "we present an algorithm that verifies whether a qspp instance on a directed grid graph is linearizable , and if it is linearizable the algorithm returns the corresponding linearization vector .",
    "the complexity of our algorithm is @xmath2 .",
    "kabadi and punnen @xcite present an @xmath419 algorithm for the qap linearization problem , where @xmath5 is the size of the qap .    in this section",
    "we assume that @xmath420 and @xmath421 , unless otherwise specified .",
    "the number of @xmath6-@xmath7 paths in @xmath8 is large for @xmath422 .",
    "in particular , the following result holds .",
    "the number of @xmath6-@xmath7 paths in the directed grid graph @xmath8 is @xmath423 .",
    "let us consider for now only linear costs associated with arcs in @xmath8 .",
    "we say that the linear cost vectors @xmath286 and @xmath203 are _ equivalent _ if @xmath424 for every @xmath6-@xmath7 path in the graph . given a linear cost vector @xmath286 associated with arcs in @xmath8 and a vertex @xmath425 ,",
    "we describe how to construct a new linear cost vector @xmath203 , see @xmath426 , that is equivalent to @xmath286 and whose associated cost of an outgoing arc from @xmath427 equals zero .",
    "in particular , let @xmath428 be the set of incoming arcs to @xmath427 , and @xmath429 the set of outgoing arcs from @xmath427 .",
    "let arc @xmath430 be an outgoing arc from @xmath427 defined as follows : @xmath431 the new linear cost vector @xmath203 is given by @xmath432 in the other words , we redistributed weights of the arcs such that the outgoing arc from @xmath427 that is of the form has zero weight .",
    "one can easily verify that @xmath286 is equivalent to @xmath203 .",
    "note that the shortest path problem on a directed acyclic graph with negative weights remains polynomial - time solvable .",
    "the _ depth _ of a vertex @xmath427 ( @xmath433 @xmath434 ) is defined as @xmath435 .",
    "if we apply the above procedure to a linear cost vector @xmath286 repeatedly for each node @xmath425 starting with the node whose depth is @xmath436 until the node with depth three . (",
    "the order of applying the procedure for the nodes with the same depth is arbitrary . )",
    "then we obtain a linear cost vector , denoted by @xmath437 , such that @xmath438 for all @xmath439 given in .",
    "we say that @xmath437 is the _ reduced from _ of @xmath286 , or @xmath437 is a linear cost vector in reduced form .",
    "as an example , the constructed linear cost vector in lemma [ linear : lemmag2q ] is in reduced form .",
    "[ linear : reducedtime ] if @xmath286 is a linear cost vector on @xmath8 , then its reduced form @xmath437 can be computed in @xmath440 .",
    "the following result shows that there exists unique linear cost vector in reduced form .",
    "[ linear : lemmauniquereducedf ] if the linear cost vectors @xmath286 and @xmath203 on @xmath8 are equivalent , then their reduced forms @xmath437 and @xmath441 are equal , i.e. , @xmath442 .    for any linear cost vector @xmath286 , its reduced form @xmath437 satisfies that @xmath443 whenever @xmath57 does not belong to the set of arcs @xmath444 note that @xmath445 . to every arc @xmath57 from @xmath446 we assign the path in the following way : @xmath447 we call those @xmath448 paths the _",
    "critical paths_. it is not difficult to see that the cost of the critical path @xmath449 for @xmath450 i.e. , @xmath451 uniquely determines the value of @xmath452 for @xmath450 .",
    "however , the reduced form @xmath437 has @xmath443 for @xmath453 .    now if @xmath203 is a linear cost vector that is equivalent to @xmath286 , then @xmath454 for every @xmath6-@xmath7 path @xmath23 in the graph .",
    "in particular , this equality holds for the critical paths .",
    "this implies that @xmath455 for every arc @xmath450 . since @xmath456 for @xmath453",
    ", we have @xmath442 .    if an instance @xmath457 of the qspp is linearizable , then all linearizations of @xmath53 are equivalent to each other .",
    "suppose that the vector @xmath201 is a linearization vector of @xmath53 , then the proof of lemma [ linear : lemmauniquereducedf ] gives a recipe to calculate @xmath458 , which is the unique linearization vector in reduced form .",
    "this recipe uses only the costs of the critical paths to determine @xmath458 .",
    "indeed , the cost of the critical path @xmath449 ( @xmath450 ) satisfies @xmath459 , where @xmath201 is the linearization vector of @xmath53 .",
    "the costs @xmath460 for @xmath450 can be easily obtained from the input instance .",
    "in fact , the above calculation of the unique linear cost vector in reduced form can be implemented even the linearizability of @xmath53 is not known .",
    "we call the resulting vector the _ pseudo - linearization _ vector of @xmath53 , denoted by @xmath461 .",
    "it is not hard to verify that @xmath53 is linearizable if and only if the pseudo - linearization vector @xmath461 is a linearization vector of @xmath53 .",
    "let us assume from now on that the linear cost vector equals the all - zero vector , i.e. , @xmath462 .",
    "[ linear : pseudotime ] let @xmath457 be an instance of the qspp .",
    "the pseudo - linearization vector @xmath461 for @xmath53 can be computed in @xmath463 time .",
    "the quadratic cost of the critical path @xmath464 is calculated straightforward via the formula @xmath465 which costs @xmath466 .",
    "the critical path @xmath467 differs only in two arcs from @xmath23 .",
    "thus , its cost can be computed in @xmath468 steps by using the already obtained cost @xmath469 .",
    "all other costs can be computed iteratively in the same manner in @xmath468 steps . since there are roughly @xmath470 critical paths , the calculation of @xmath461",
    "can be done in @xmath463 .",
    "the following result relates linearizable instances on a directed acyclic graph having the same quadratic costs and source vertices , but different target vertices .",
    "[ linear : gridlemma2 ] let @xmath55 be a linerizable qspp instance on the directed acyclic graph @xmath34 .",
    "we have that @xmath201 is a linearization vector of @xmath53 if and only if the vector @xmath471 given by @xmath472 is a linearization vector of the instance @xmath473 for every vertex @xmath259 such that @xmath474 .",
    "let us assume that there is a vector @xmath201 such that the vector @xmath471 defined in is a linearization vector of @xmath475 for @xmath259 such that @xmath474 .",
    "let @xmath476 be a @xmath6-@xmath7 path , where @xmath477 .",
    "then @xmath478 is a @xmath6-@xmath259 path .",
    "we have that @xmath479 the fourth equation exploits that @xmath480 and @xmath481 .",
    "this shows that @xmath201 is a linearization vector of @xmath53 .",
    "conversely , in a similar way .",
    "note that the above lemma is proven for any directed acyclic graph .",
    "therefore , it is also valid for the directed grid graphs . for the directed grid graphs , we simplify notation and write @xmath482 for the instance @xmath483 , and @xmath484 for the associated linear cost vector @xmath485 .",
    "we also use @xmath486 and @xmath487 . in what follows",
    ", we exploit the previous lemma to derive our linearization algorithm .",
    "we first prove that any instance of the qspp on @xmath488 ( @xmath489 ) is linearizable .",
    "[ linear : lemmag2q ] let @xmath490 be a qspp instance on a directed grid graph @xmath488 and @xmath491",
    ". then @xmath53 is linearizable .",
    "let @xmath148 be the unique @xmath6-@xmath7 path containing arc @xmath492 for @xmath493 .",
    "let us define the linear cost vector @xmath201 as follows : @xmath494 one can readily see that @xmath201 is a linearization of @xmath53 , and thus @xmath53 is linearizable .",
    "note that a qspp instance @xmath490 is linearizable also in the case that @xmath286 is not a zero vector , see lemma [ linear : czero ] .",
    "similarly one can prove that any qspp instance on a directed grid graph @xmath495 is linearizable for every @xmath496 .",
    "the following two results are the main ingredients of our linearizability algorithm .",
    "[ linear : character1 ] let @xmath497 be a qspp instance .",
    "then @xmath201 is a linearization vector of @xmath53 if and only if    1 .",
    "@xmath498 is a linearization vector of the instance @xmath499 , 2 .",
    "@xmath500 for @xmath501 ,    where @xmath502 is the reduced form of the vector derived as in , and @xmath503 is the pseudo - linearization vector of @xmath504 .",
    "assume that @xmath201 is a linearization vector of @xmath53 .",
    "applying lemma [ linear : gridlemma2 ] repeatedly to the instances @xmath505 for @xmath506 , we get that @xmath201 is a linearization vector of @xmath507 if and only if @xmath508 derived as in lemma [ linear : gridlemma2 ] is a linearization vector of @xmath504 for @xmath509 .",
    "let @xmath502 be the reduced form of the linearization vector @xmath508 .",
    "since those two vectors are equivalent , we have that @xmath201 is a linearization vector of @xmath53 if and only if @xmath502 is a linearization vector of @xmath504 for @xmath510 .    from lemma [ linear : gridlemma2 ] , we also know that if @xmath511 is linearizable , then @xmath504 is linearizable for @xmath512 , and in this case @xmath502 is a linearization vector of @xmath504 if and only if @xmath502 equals to the pseudo - linearization vector @xmath503 for @xmath512 .    applying lemma [ linear : character1 ] recursively to the instances @xmath513 for @xmath514",
    ", we obtain the following schema for testing linearizability of a qspp instance on the grid graph @xmath8 .    [ linear : character2 ] let @xmath497 be a qspp instance on @xmath8 .",
    "it holds that @xmath201 is a linearization vector of @xmath53 if and only if    1 .",
    "@xmath515 is a linearization vector of the instance @xmath516 , 2 .",
    "@xmath517 for @xmath518 and @xmath501 ,    where @xmath502 is the reduced form of the vector derived as in , and @xmath503 is the pseudo - linearization vector of @xmath504 .    by exploiting proposition [ linear : character2 ] , we derive an algorithm that verifies if a qspp instance on the directed grid graph @xmath8 is linearizable , see algorithm [ alg : linear ] .",
    "moreover our algorithm returns the linearization vector in reduced form , if such exists .",
    "[ linear : maintheorem ] the algorithm linearize - grid - qspp determines if a qspp instance on the directed grid graph @xmath8 is linearizable , and if so it constructs its linearization vector in @xmath2 time .",
    "recall that a qspp instance is linearizable if and only if the pseudo - linearization vector is a linearization vector .",
    "therefore , the algorithm linearize - grid - qspp iteratively applies proposition [ linear : character2 ] to the pseudo - linearization vector in order to check linearizability of the instance .",
    "the algorithm involves computation of roughly @xmath519 vectors @xmath520 , their reduced forms @xmath521 , and the pseudo - linearization vectors @xmath522 .",
    "it follows from lemma [ linear : gridlemma2 ] , that computing all the vectors @xmath520 can be done iteratively . from lemma [ linear : reducedtime ]",
    "we have that the reduced form vectors @xmath521 obtained from the vectors @xmath520 ( @xmath523 , @xmath524 ) can be computed in @xmath525 . from lemma [ linear : pseudotime ]",
    "it follows that the calculation of all the pseudo - linearization vectors @xmath522 requires @xmath526 .",
    "the costs of all other calculations are small .",
    "thus , the complexity of the algorithm is @xmath526 .    to derive algorithm 1",
    ", we assume that the linear cost vector is equal to the all - zero vector .",
    "clearly , our algorithm also works if the linear cost vector is not equal to zero , see lemma [ linear : czero ] .",
    "the interested reader can download linearize - grid - qspp and/or islinearizable algorithm from the following link and test linearizability of any qspp instance on @xmath0 ( @xmath527 ) .",
    "* input : * a qspp instance @xmath528 .",
    "* output : * the linearization vector of @xmath53 if it exists . @xmath529 pseudo - linearization of @xmath53 @xmath530 pseudo - linearization of @xmath482 by using lemma [ linear : pseudotime ] @xmath531 linear cost vector obtained as in lemma [ linear : gridlemma2 ] @xmath532 get the reduced form of @xmath484 , see lemma [ linear : reducedtime ] ` false ` * end if * * end for * * end for * calculate @xmath515 using prop .",
    "[ linear : character2 ] , and pseudo - linearization @xmath533 using lemma [ linear : lemmag2q ] . `",
    "false ` * end if * * return * ` true ` and @xmath461",
    "in this paper , we study the complexity and special cases of the quadratic shortest path problem . in theorem",
    "[ qaptoqspp2 ] , we present a polynomial - time reduction from the qap to the qspp .",
    "the size of the obtained qspp instance is significantly smaller than the size of the instance obtained from the reduction provided in @xcite .",
    "further , we give a new and simpler proof , in comparison with the proof from @xcite , showing that the general aqspp can not be approximated unless p = np , see theorem [ aqspp - nphard ] .",
    "polynomially solvable special cases of the qspp are considered in section [ section : linearqspp ] .",
    "proposition [ prop : dircycle ] proves that all qspp instances on a directed cycle are linearizable . in proposition",
    "[ prop : weaksum ] , we show that if the quadratic cost matrix is a symmetric weak sum matrix and every @xmath6-@xmath7 path in @xmath34 has the same length , then the qspp is linearizable . in proposition",
    "[ prop : productmatrix ] , it is proven that if the quadratic cost matrix is a nonnegative symmetric product matrix , then the qspp can be solved in @xmath534 time .    in proposition [ necessary_complete ] , we present necessary conditions for a qspp instance on the complete digraph @xmath535 ( @xmath293 ) to be linearizable .",
    "these conditions turn out to be also sufficient for @xmath536 , see proposition [ linear : k4 ] .",
    "finally , we provide a polynomial - time algorithm to check whether a qspp instance on a directed grid graph is linearizable , see theorem [ linear : maintheorem ] .",
    "the interested reader can download and test our algorithm .",
    "k. murakami , h.s .",
    "kim . comparative study on restoration schemes of survivable atm networks , infocom97 .",
    "sixteenth annual joint conference of the ieee computer and communications societies .",
    "driving the information revolution .",
    ", proceedings ieee , vol .  1:345352 , 1997 .",
    "nie , x. wu .",
    "reliable a priori shortest path problem with limited spatial and temporal dependencies . in : w.h.k .",
    "lam , s.c .",
    "wong , h.k .",
    "lo ( eds . ) , _ transportation and traffic theory 2009 : golden jubilee _",
    ", 169195 , 2009 .",
    "b. rostami , f. malucelli , d. frey , c. buchheim . on the quadratic shortest path problem , in : e. bampis ( ed . ) experimental algorithms , lecture notes in computer science , vol .  9125 , springer international publishing 379 390 , 2015 ."
  ],
  "abstract_text": [
    "<S> the quadratic shortest path problem ( qspp ) is the problem of finding a path in a digraph such that the sum of weights of arcs and the sum of interaction costs over all pairs of arcs on the path is minimized . </S>",
    "<S> we first consider a variant of the qspp known as the adjacent qspp . </S>",
    "<S> it was recently proven that the adjacent qspp on cyclic digraphs can not be approximated unless p = np . here </S>",
    "<S> , we give a simple proof for the same result .    </S>",
    "<S> we also show that if the quadratic cost matrix is a symmetric weak sum matrix or a symmetric product matrix , then an optimal solution for the qspp can be obtained by solving the corresponding instance of the shortest path problem . </S>",
    "<S> similarly , it is shown that the qspp on a directed cycle is solvable in polynomial time .    </S>",
    "<S> further , we provide sufficient and necessary conditions for a qspp instance on a complete symmetric digraph with four vertices to be linearizable . we also characterize linearizable qspp instances on complete symmetric digraphs with more than four vertices . </S>",
    "<S> finally , we derive an algorithm that examines whether a qspp instance on the directed grid graph @xmath0 ( @xmath1 ) is linearizable . </S>",
    "<S> the complexity of this algorithm is @xmath2 .    </S>",
    "<S> keywords : quadratic shortest path problem , directed graph , linearizable instances </S>"
  ]
}
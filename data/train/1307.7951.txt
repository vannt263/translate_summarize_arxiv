{
  "article_text": [
    "cellular automaton ( ca ) is a model of information processing system . since cas",
    "have no memory except for cell , all the information necessary to perform computation is stored in its configuration .",
    "that means the complexity of configuration is in some way related with the complexity of information the ca is processing .",
    "therefore it is reasonable to investigate the complexity of configuration for the analysis of computing process by ca .",
    "elementary ca ( eca ) rule 110 is supporting universal computation  @xcite . in this research",
    "we focus on the complexity of configurations during the computing process by rule 110 . in the next section ,",
    "we make a brief explanation of cyclic tag system emulated by rule 110 .",
    "the results of complexity analysis of cyclic tag system are shown in section 3 .",
    "finally we discuss the results and a future plan .",
    "the transition function of eca rule 110 is given by : @xmath0 the upper line represents the state of the neighborhood and the lower line specifies the state of the cell at the next time step .",
    "cook proved the computational universality of rule 110 by showing that rule 110 can emulate cyclic tag systems  @xcite .",
    "a cyclic tag system works on a finite tape which is read from the front and appended to based on what is read .",
    "an appendant is cyclically chosen from the appendant table .",
    "the alphabet on the tape consists of @xmath1 . at each step",
    ", the system reads one character and deletes it , and if that is 1 , then it appends the appendant , while an 0 causes the appendant to be skipped . at the next step ,",
    "the system moves on to the next appendant in the table .",
    "the system halts if the word on the tape is empty . for example , the transition of the initial word 1 with the appendant table ( 1 , 101 ) is given as following : @xmath2 a detailed explanation of the emulation of cyclic tag systems by rule 110 is in ref .  @xcite .",
    "as a measure of complexity , we focus on the compressibility of configuration .",
    "compression - based ca classification was implemented by zenil  @xcite using the deflate algorithm  @xcite .",
    "we use lempel - ziv ( lz ) complexity used in the data compression algorithm called lz78  @xcite . in lz78 ,",
    "a string is divided into phrases . given a string @xmath3 where a substring @xmath4 has already been divided",
    "is constructed by searching the longest substring @xmath5 , @xmath6 and by setting @xmath7 where @xmath8 .",
    "the lz complexity of the string is defined as the number of divided phrases . the complexity analysis based on lz78",
    "was applied to the study of the parity problem solving process by rule 60  @xcite .    ]    in this research , we calculate the lz complexity of configuration at each time step during the computing process of cyclic tag system emulated by rule 110 .",
    "figure  [ lz_evolution ] shows the evolution of lz complexity staring from a random configuration ( left ) and from the one designed to emulate cyclic tag system .",
    "the array size is 65900 in both cases .",
    "we made use of the initial configuration on the web site @xcite from which you can download the file of initial configuration of rule 110 emulating the cyclic tag system exemplified in the previous section .",
    "[ moving_avg ]    in the case of a random initial configuration , the lz complexity starts with the value of 6068 and decreases quickly , meanwhile , it shows a more slighter decrease in the case of cyclic tag system emulation . to investigate the evolution of lz complexity in the process of cyclic tag system emulation , we calculated the simple moving average of the data with period 100 and showed with a finer scale in fig .",
    "[ moving_avg ] .",
    "we can see the repetition of significant decline and temporary equilibrium in the evolution of lz complexity .",
    "figure  [ moving_avg ] , however , does not inform us about the regional difference of lz complexity , because lz complexity is a measure of complexity from a global perspective .",
    "so we divide the array into 20 sections ( section @xmath9 starting from the left ) of 3295 cells and calculate the lz complexity of each section individually .",
    "figure  [ lz_section_cont ] shows the evolution of the lz complexity in section @xmath10 .    by viewing the figures from section 2 to 11 in sequence",
    ", we can observe four bumps are moving from the left to the right .",
    "each bump corresponds to the four packages of @xmath11 gliders that construct an appendant from a moving data .",
    "those packages of @xmath11 gliders are called ossifier ( @xmath12 ) .",
    "the term in the parenthesis is the one according to the naming convention employed in ref  @xcite .",
    "the initial configuration in section 16 contains several patterns such as tape data , table data or leader that separates packages of table data ( fig .",
    "[ space_time_sec16 ] ) .",
    "the group of these complicated structures makes the complexity high in this section .",
    "as time goes by , however , these patterns move to the left and there remains the periodic background called ether that causes the low value of complexity .",
    "for the detailed analysis of section 14 , we divide it into three parts of array size 1100 and calculated the moving average ( period:100 ) of lz complexity for each part during time step from @xmath13 to @xmath14 as shown in fig .",
    "[ moving_avg_sec14 ] . the explanation in this paragraph is shown diagrammatically in fig .",
    "[ diagram_sec14 ] .",
    "the right of fig .",
    "[ moving_avg_sec14 ] shows lz complexity in the part of @xmath15 ( the index of the leftmost cell of the array is given by @xmath16 ) . as a moving",
    "data 0 ( 0add@xmath17 ) is coming from the right , the lz complexity starts increasing from @xmath18 . while the collision between the moving data 0 and an ossifier creates a tape data 0 ( 0ele@xmath19 ) from @xmath20 to @xmath21 , the lz complexity does not vary a lot because tape data do not move . the lz complexity increases from @xmath22 as a leader and three table data come from the left . when the leader collides with a tape data 0 at about @xmath23 , the lz complexity reaches a maximum . while a rejector created by the collision is erasing table data as show in the left of fig .",
    "[ space_time_sec14 ] , the lz complexity decreases a lot from @xmath24 to @xmath25 .",
    "when the moving data 1 created in section 15 pass through the part of @xmath26 to the left , the lz complexity temporarily increase from @xmath22 to @xmath27 as shown in the middle of fig .",
    "[ moving_avg_sec14 ] . finally the moving data 1 collides with an ossifier coming from the left and",
    "converts into tape data 1 as shown in the right of fig .",
    "[ moving_avg_sec14 ] .",
    "that corresponds to the bump at @xmath28 in the part of @xmath29 shown in the left of fig .",
    "[ moving_avg_sec14 ] . the sharp increase from @xmath25 in the right of fig .",
    "[ moving_avg_sec14 ] is caused by leaders and table data moving from the right .",
    "these structures bring a same result from @xmath30 in the middle of fig .",
    "[ moving_avg_sec14 ] and from @xmath31 in the left of fig .",
    "[ moving_avg_sec14 ] , as they move to the left .",
    "they collide with tape data 1 and convert into a moving data 1 that goes away to the left .",
    "that causes the sharp decrease from @xmath32 to @xmath33 in the left of fig .",
    "[ moving_avg_sec14 ] .",
    "since there remains only ether after @xmath33 , the value of lz complexity is low .",
    "as we explained in the previous section , by dividing the whole array into small parts , we can correspond the change of lz complexity to the events occurring on the array such as incoming of propagating patterns , collision between several patterns , and outgoing of them .",
    "in particular the significant decline of lz complexity is caused by a transformation from table data to moving data or an elimination of table data .",
    "figure  [ tabledata_movingdata ] shows the space - time pattern of table data 1 ( 1blop@xmath17 ) ( top ) and moving data 1 ( 1add@xmath17 ) ( bottom ) .",
    "it is apparent that the pattern of table data 1 is more complicated than that of moving data 1. therefore the transformation from table data to moving data brings about the decline of lz complexity .",
    "and the elimination of table data by a rejector has the same result .",
    "it seems that the decline of lz complexity observed in fig .",
    "[ moving_avg ] is caused by the events of either of these two types .    in this research",
    "we employed the periodic boundary conditions .",
    "the ossifiers , the table data , and the leaders are built in advance in the initial configuration .",
    "they are consumed during the evolution and are not supplied from the outside .",
    "it is uncertain about how lz complexity varies in time if they are supplied regularly and eternally .",
    "we are planning to employ `` discharging '' boundary conditions that can supply these patterns from the outside .",
    "martnez , g. j. , mcintosh , h. v. , seck - tuoh - mora , j. c. , vergara , s. v. c. : reproducing the cyclic tag system developed by mattew cook with rule 110 using the phase @xmath34_1 . j. cellular automata 6 , 121161 ( 2011 )"
  ],
  "abstract_text": [
    "<S> it is known that elementary cellular automaton rule 110 is capable of supporting universal computation by emulating cyclic tag system . since the whole information necessary to perform computation is stored in the configuration , it is reasonable to investigate the complexity of configuration for the analysis of computing process . in this research </S>",
    "<S> we employed lempel - ziv complexity as a measure of complexity and calculated it during the evolution of emulating cyclic tag system by rule 110 . as a result </S>",
    "<S> , we observed the stepwise decline of complexity during the evolution . that is caused by the transformation from table data to moving data and the elimination of table data by a rejector . </S>"
  ]
}
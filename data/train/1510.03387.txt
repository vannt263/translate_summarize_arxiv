{
  "article_text": [
    "an _ arithmetic network _ is a computational model aimed to capture the idea of a parallel computation in its simplest form .",
    "it was first proposed by j. von zur gathen @xcite .",
    "we will be dealing with a special class of networks , called _ decision _ arithmetic networks .",
    "the next definition follows @xcite and @xcite .",
    "it combines an arithmetic circuit ( straight - line program ) and a boolean circuit by means of two special types of gates : sign and selection .",
    "[ def : network ] a decision arithmetic network @xmath8 over @xmath9 is an acyclic directed graph with vertices ( called `` gates '' ) of the following four types , classified by the indegree .",
    "1 .   gates of indegree 0 are either _ input gates _ or _ constant gates_. the latter are labelled by real numbers . input and constant gates have the _ output type _ of a real number .",
    "gates of indegree 1 are either the ( unique ) _ output gate _ , or _ sign gates",
    "_ labelled by one of the signs @xmath10 , or _ boolean gates",
    "_ labelled by @xmath11 .",
    "output gate has the boolean input type ( i.e. , * true * or * false * ) and the outdegree 0 .",
    "sign gates have input type of a real number and output type boolean .",
    "boolean gates labelled by @xmath11 have input type boolean and output type boolean .",
    "gates of indegree 2 are either _ arithmetic gates",
    "_ , labelled by one of arithmetic operations @xmath12 , or _ boolean gates",
    "_ , labelled by one of boolean operations @xmath13 .",
    "arithmetic gates have input and output types both of a real number , boolean gates have input and output types both boolean .",
    "gates of indegree 3 are _",
    "selection gates_. in each such gate two of its inputs have the type of a real number while the third input has the boolean type which comes from a boolean or a sign gate .",
    "output type is of a real number .",
    "( see fig .  4 , on which @xmath14 and @xmath15 are real numbers , while @xmath16 is a boolean value .",
    ")    the outdegrees for all gates , except output ones , can be arbitrary positive numbers .",
    "the operational semantics of @xmath8 is clear , except maybe the functioning of the sign and selection gates .",
    "let @xmath17 be a sign gate labelled by a sign @xmath18 .",
    "then for an input @xmath19 of @xmath17 , the output of @xmath17 is * true * if @xmath20 and * false * otherwise .",
    "let @xmath21 be a selection gate , and @xmath22 be its input .",
    "then the output of @xmath21 is @xmath23 if @xmath24 and @xmath25 otherwise .",
    "let the number of input gates be @xmath26 , and let @xmath27 be a particular input .",
    "we say that @xmath8 _ accepts _",
    "@xmath28 if the boolean value at the output gate is * true*.    we interpret the _ complexity ( parallel time ) _ of @xmath8 as its _ depth _ , defined as follows .",
    "the _ size _ @xmath29 of an arithmetic network @xmath8 is the number of all its gates .",
    "the _ depth _ @xmath30 of @xmath8 is the length of the longest ( directed ) path from some input gate to the output gate .",
    "each gate @xmath17 of @xmath8 also has the _ depth _ , which is the length of the longest path from some input gate to @xmath17 .",
    "it is clear that @xmath31",
    ". we will be mostly interested in lower bounds for @xmath30 .",
    "in @xcite one can find an equivalent definition of an arithmetic network , which combines a straight - line program with `` sign gates '' .",
    "such `` sign gate '' takes an input of the type of a real number and outputs 1 if the input is positive and 0 otherwise .",
    "boolean , sign , and selection gates from definition  [ def : network ] can be modelled by arithmetic and `` sign gates '' in the alternative model in a straightforward way . for our purposes",
    "this encoding places an additional layer on the semantics and does not appear to give any advantages .",
    "two models can simulate each other with respect to both size and depth within a constant factor @xcite .    in proposition  [ pr :",
    "semialg - to - network ] below , we will associate with each arithmetic network @xmath8 , having @xmath26 input gates , a formula @xmath32 of the first order theory of the reals , such that @xmath8 accepts exactly all elements in the semi - algebraic set @xmath0 defined by @xmath32 .",
    "we say that @xmath8 _ tests membership _ in @xmath3 . for brevity , in what follows , we will refer to @xmath32 ( and to any other first order formula ) as to _",
    "boolean _ formula .",
    "the first topological lower bound for depths of arithmetic networks appeared in @xcite .",
    "[ pr : mon1 ] let @xmath8 be an arithmetic network testing membership in a semi - algebraic set @xmath0",
    ". then @xmath33 where @xmath34 is the number of connected components of @xmath3 .",
    "this result was then partly expanded in @xcite as follows .",
    "[ pr : mon2 ] let @xmath8 be an arithmetic network testing membership in a locally closed semi - algebraic set @xmath0 .",
    "then @xmath35 where @xmath36 is the sum of borel - moore betti numbers of @xmath3 .",
    "note that for _ compact _ sets , borel - moore homologies coincide with `` ordinary '' singular homologies , in particular , betti numbers coincide ( see , e.g. , @xcite ) . for locally closed sets ,",
    "borel - moore and singular betti numbers are incomparable .",
    "the proofs of bounds in propositions  [ pr : mon1 ] and [ pr : mon2 ] depend heavily on subadditivity property of borel - moore betti numbers which is not generally valid for singular betti numbers .",
    "lower bounds for the membership in locally closed semi - algebraic sets with respect to the algebraic computation tree ( a sequential model ) , in terms of borel - moore betti numbers , were obtained in @xcite .    in this paper",
    "we present two main results .",
    "theorem  [ th : general ] states a lower bound similar to ( [ eq : mon2 ] ) for _ arbitrary _ ( not necessarily locally closed ) semi - algebraic sets in terms of singular homology .",
    "theorem  [ th : proj ] suggests a lower bound of a new type , in terms of singular homology betti numbers of a _ projection _ of a semi - algebraic set to a coordinate subspace .",
    "note that the topology of the image under a projection may be much more complex than the topology of the set being projected .",
    "we are not aware of previous lower bounds of this sort .",
    "this generalization comes at a price of lowering the bound ( as compared to theorem  [ th : general ] ) , namely the term @xmath26 , rather than @xmath37 , appears in the denominator .",
    "note that lower bounds for membership in arbitrary semialgebraic sets with respect to algebraic computation trees in terms of singular homology were obtained in @xcite .",
    "in this section we establish some properties of arithmetic networks , which we need further in the paper .",
    "we will now associate with each arithmetic network @xmath8 a boolean formula @xmath32 .",
    "this semantics follows @xcite , and is simplified and adjusted for our modification of arithmetic networks .",
    "[ def : piecewise ] consider a finite partition of a semi - algebraic set @xmath38 into semi - algebraic sets @xmath39 .",
    "a _ partial piecewise polynomial function _ ( or just _ partial piecewise polynomial _ ) _ with respect to the partition _ ,",
    "@xmath40 , coincides on each @xmath41 with the restriction of some polynomial function @xmath42 to @xmath41 . if @xmath43 we drop the expression `` partial '' in this definition .",
    "arithmetic operations with partial piecewise polynomials having the same domain , and predicates , @xmath44 , where @xmath18 are defined in a usual way , as operations and predicates on functions .",
    "[ def : pieceboolean ] let @xmath15 be a partial piecewise polynomial function with the partition @xmath39 such that for each @xmath45 the set @xmath41 is defined by a boolean formula @xmath46 with atomic subformulae of the kind @xmath47 , where @xmath18 , and @xmath23 is a polynomial .",
    "we use the same notation @xmath20 also for the boolean formula @xmath48 which describes the predicate @xmath20 .",
    "we also say that the partial piecewise polynomial @xmath15 is described by the list @xmath49 .",
    "we now describe the boolean formula @xmath32 associated to a network @xmath8 .",
    "we associate a polynomial ( namely , a variable ) to each input gate and a boolean formula to each sign gate , each boolean gate and to the output gate . with each selection gate and each arithmetic gate",
    "we associate a piecewise polynomial .",
    "we perform these associations by induction on the depth of the gate as follows .",
    "input gates are assigned their input variables , while constant gates  their constants .",
    "this completes the base of the induction .",
    "now we perform the induction step .    *",
    "if @xmath17 is an arithmetic gate labelled by @xmath50 , then it has two parents .",
    "parents may be either arithmetic or selection or input or constant gates in any combination . in any case",
    ", the parents have associated piecewise polynomials , say @xmath15 and @xmath23 .",
    "associate with @xmath17 the piecewise polynomial @xmath51 . * if @xmath17 is a boolean gate labelled by @xmath52 , then it has two parents , either sign or boolean gates , in any combination , with associated boolean formulae , say @xmath16 and @xmath53 .",
    "associate with @xmath17 the boolean formula @xmath54 . * if @xmath17 is a boolean gate labelled by @xmath11 , then it has one parent , either a sign or a boolean gate , with associated boolean formula , say @xmath53 .",
    "associate with @xmath17 the boolean formula @xmath55 . *",
    "if @xmath17 is a sign gate labelled by @xmath56 , then it has either one arithmetic or one selection gate parent with associated piecewise polynomial , say @xmath15 .",
    "associate with @xmath17 the boolean formula @xmath20 ( see definition  [ def : pieceboolean ] ) . * if @xmath17 is a selection gate , then it has three parents .",
    "two of them are either input , or constant , or arithmetic or selection gates ( in any combination ) with associated piecewise polynomial functions , say @xmath15 and @xmath23 .",
    "the third is a boolean parent gate with associated boolean formula , say @xmath53 .",
    "let @xmath57 ( respectively , @xmath58 ) be the partition of @xmath59 corresponding to @xmath15 ( respectively , to @xmath23 ) .",
    "each partition @xmath60 is represented by a list of boolean formulae , each representing an element of the partition .",
    "consider the partition @xmath61 of @xmath59 whose elements are all intersections of the kind @xmath62 , where @xmath63 and @xmath64 , or @xmath65 and @xmath66 . then associate with @xmath17 the piecewise polynomial @xmath25 , having the partition @xmath61 , and coinciding with @xmath15 on @xmath67 and with @xmath23 on @xmath68 . *",
    "if @xmath17 is the output gate , then it has one boolean gate parent with an associated boolean formula , say @xmath53 .",
    "associate with @xmath17 the same boolean formula @xmath53 .",
    "associate with @xmath8 the boolean formula associated with the output gate , and denote this formula by @xmath69 .",
    "the following statement is proved in @xcite . here",
    "we give a proof which uses some concepts we will need further on .",
    "[ pr : semialg - to - network ] a set @xmath0 is semi - algebraic if and only if there is an arithmetic network @xmath8 with @xmath26 input gates , accepting exactly all inputs in @xmath3 .",
    "let @xmath3 be a semi - algebraic set represented by a disjunctive normal form with atomic polynomial equations and strict inequalities .",
    "one can construct an arithmetic network for @xmath3 as follows .",
    "compute `` in parallel '' each atomic polynomial using straight - line programs ( arithmetic circuits ) .",
    "attach to the output gate of each program a sign gate labelled by the sign of the corresponding atomic formula .",
    "then evaluate the resulting boolean disjunctive normal form using a boolean circuit with inputs from all sign gates .    to prove the converse statement , notice that every arithmetic network @xmath8 accepts exactly all inputs in the semi - algebraic set in @xmath59 defined by the boolean formula @xmath32 .",
    "two arithmetic networks @xmath8 and @xmath70 with @xmath26 inputs each are _ equivalent _ if the sets of all accepted inputs for @xmath8 and @xmath70 coincide .",
    "clearly two equivalent networks test membership in the same semi - algebraic set .",
    "[ le : negation ] for every arithmetic network @xmath8 there is an equivalent arithmetic network @xmath70 having no boolean gates labelled by @xmath11 , and such that @xmath71 .    the idea of the proof is to push computing of negations to sign gates , where negations of associated boolean formulae of the kind @xmath20 can be replaced by formulae @xmath72 , thus avoiding an explicit use of negation gates ( cf .",
    "example  [ ex : neg ] ) .",
    "we start with the inductive construction of a directed graph @xmath73 , obtained by attaching new sign or boolean gates of depth at most @xmath74 to graph @xmath75 , constructed by the inductive hypothesis .",
    "each graph @xmath75 differs from an arithmetic network in that it may contain some _ hanging vertices _",
    "( i.e. , gates having no outgoing edges , but different from the output gate ) . for such graphs",
    "we can define semi - algebraic sets of accepting inputs , associated boolean formulae , and the equivalence relation exactly as for the networks .",
    "each graph @xmath75 will be equivalent to @xmath76 .",
    "we will obtain the network @xmath70 from the last @xmath75 in the induction , by removing the irrelevant gates , including all hanging vertices .",
    "for the base of the induction take @xmath77 .",
    "the inductive hypothesis assumes the following .    1 .",
    "let @xmath17 be a boolean gate in @xmath78 labelled by @xmath11 , having depth @xmath79 and the associated boolean formula @xmath80 .",
    "then @xmath17 is a hanging vertex , and there exists a sign or a boolean gate @xmath21 in @xmath75 , having a depth at most @xmath79 , with an associated boolean formula which is equivalent to @xmath80 , and such that @xmath17 is not labelled by @xmath11 .",
    "2 .   let @xmath17 be a sign or a boolean gate in @xmath78 , having depth @xmath79 and the associated boolean formula @xmath80 .",
    "then there exists a sign or a boolean gate @xmath81 in @xmath75 , having the depth at most @xmath74 , with an associated boolean formula which is equivalent to @xmath82 , and such that @xmath81 is not labelled by @xmath11 .",
    "@xmath78 is equivalent to @xmath8 .",
    "observe that since there are no sign or boolean gates with zero depth , the base of induction , for @xmath83 , is trivially true .",
    "we now describe the inductive step by constructing @xmath73 .",
    "let @xmath17 be a sign or a boolean gate in @xmath75 , with @xmath84 .",
    "suppose first that @xmath17 is a sign gate .",
    "then the boolean formula @xmath80 , associated with @xmath17 , is of the kind @xmath20 , where @xmath15 is a piecewise polynomial and @xmath18 .",
    "let , for definiteness , @xmath85 be @xmath86 ( cases of @xmath87 and @xmath88 are considered analogously ) .",
    "since , @xmath17 is not a boolean gate labelled by @xmath11 , the property ( 1 ) for @xmath17 is trivially satisfied .",
    "suppose that there are no sign gates @xmath89 and @xmath90 in @xmath75 , of depths at most @xmath74 , with which the formulae @xmath91 and @xmath92 respectively , are associated .",
    "let @xmath21 be the parent of @xmath17 in @xmath75 ( which is necessarily either an input or a constant or an arithmetic or a selection gate ) .",
    "note that @xmath93 .",
    "attach to @xmath21 , by means of an outgoing edges , two new sign gates , @xmath94 to which associate formulae @xmath91 and @xmath92 respectively .",
    "add to a new boolean gate @xmath21 , labelled by @xmath95 , having @xmath94 as parents .",
    "clearly , @xmath96 , and the condition ( 2 ) is satisfied . since @xmath21 is a hanging vertex , the resulting graph is equivalent to @xmath75 .",
    "if @xmath17 is a boolean gate labelled by @xmath95 and @xmath97 , where @xmath16 and @xmath53 are boolean sub - formulae , then @xmath16 and @xmath53 are associated with sign or boolean gates , say @xmath98 and @xmath99 , with depth less than @xmath74 . the condition ( 1 ) for @xmath17",
    "is trivially satisfied .    if there is a sign or a boolean gate , not labelled by @xmath11 , with depth at most @xmath100 , with associated formula equivalent to @xmath82 , then condition ( 2 ) is satisfied .",
    "suppose otherwise . by the inductive hypothesis",
    ", there are gates @xmath101 and @xmath102 of depth at most @xmath74 , such that the boolean formula @xmath103 ( respectively , @xmath104 ) associated with @xmath101 ( respectively , @xmath102 ) is equivalent to @xmath105 ( respectively , @xmath55 ) .",
    "create a new boolean gate @xmath106 , labelled by @xmath107 , making it a common child of @xmath101 and @xmath102 .",
    "associate boolean formula @xmath108 with @xmath106 .",
    "observe that @xmath109 .",
    "thus , the condition ( 2 ) for @xmath17 is satisfied . since @xmath106 is a hanging vertex ,",
    "the resulting graph is equivalent to @xmath75 .",
    "the similar construction is applied in the case when @xmath110 .",
    "let @xmath17 be a boolean gate labelled by @xmath11 with the associated formula @xmath111",
    ". then formula @xmath16 is associated with a sign or a boolean gate @xmath98 having the depth at most @xmath79 . by the inductive hypothesis , there is a sign or a boolean gate @xmath101 , not labelled by @xmath11 , with the depth at most @xmath74 and the associated boolean formula @xmath103 such that @xmath103 is equivalent to @xmath105 .",
    "detach the outgoing edges from @xmath17 and attach them as outgoing edges to @xmath101 , replacing in boolean formulae , associated with the descendants , the subformula @xmath80 by @xmath103 .",
    "clearly , conditions ( 1 ) and ( 2 ) for @xmath17 are satisfied , and the resulting graph is equivalent to @xmath75 .    performing the above construction for all sign or boolean gates @xmath17 in @xmath75 , with @xmath84 , we obtain a graph @xmath73 , which is equivalent to @xmath75 , hence by the inductive hypothesis the condition ( 3 ) is satisfied .",
    "observe that @xmath112 for each @xmath79 .",
    "this completes the inductive construction .",
    "let @xmath113 .",
    "observe that @xmath114 may not be an arithmetic network graph because it may contain hanging vertices .",
    "a hanging vertex may be one of two types : the ones labelled by @xmath11 from the original network @xmath8 , and new gates created by the construction which remaind unused .",
    "let @xmath21 be the _",
    "last _ boolean or sign gate of the @xmath114 , i.e. , the ( unique ) gate whose unique child is the output gate .",
    "such gate exists since the last boolean or sign gate @xmath17 exists in @xmath8 , and , according to the construction , it either remains the last in @xmath114 , or @xmath17 is a boolean gate labelled by @xmath11 , and its ( unique ) outgoing edge was re - attached to another gate , @xmath101 .",
    "remove from @xmath114 all gates that are not ancestors of @xmath21 , and denote the result by @xmath70 .",
    "this removes , in particular , all hanging vertices from @xmath114 , hence @xmath70 is an arithmetic network .",
    "let @xmath80 ( respectively , @xmath115 ) be the boolean formula associated with @xmath17 in @xmath8 ( respectively , @xmath21 in @xmath70 ) . by the construction ,",
    "@xmath80 and @xmath115 are equivalent boolean formulae , thus they define the same semialgebraic set .",
    "therefore , @xmath8 and @xmath70 are equivalent .    by the construction , @xmath112 for each @xmath79 , hence @xmath116 .",
    "it follows that @xmath71 , since obviously @xmath117 .",
    "[ ex : neg ] consider an application of lemma  [ le : negation ] to a concrete network shown on fig .  1 .",
    "the directed graph @xmath114 is drawn on fig .  2 . note that @xmath114 is _ not _ a network ( it has hanging boolean gates ) .",
    "3 shows the resulting network @xmath70 .",
    "let @xmath8 be an arithmetic network testing membership to a semi - algebraic set @xmath3 .",
    "by lemma  [ le : negation ] , we can assume that it has no gates labelled by @xmath11 . in section  [ sec : lower ] we will need to modify @xmath8 so that the modified network tests membership in a compact semi - algebraic set which is homotopy equivalent to @xmath3 . in this process , the modification of a boolean formula , associated with a gate , and the modification of its negation will not become negations of one another .    for instance ( see details in example  [ ex : boolean ] ) , @xmath118 is equivalent to @xmath119 .",
    "after compactification , @xmath118 will turn into @xmath120 while @xmath121 will turn into @xmath122 , where @xmath123 and @xmath124 are some small positive real numbers with @xmath125 . at the same time , a selection gate having @xmath120 as its boolean input , will automatically produce the implicit complement condition @xmath126 , which is different from the required @xmath122 .    thus we need to separate , for every selection gate , the boolean formula , associated with its boolean parent , from the implicit negation of this formula . to prepare this operation",
    "we now describe a further modification of @xmath8 which results in another equivalent network , @xmath127 , in which each selection gate is coupled with another selection gate , having the contrary boolean parent .    as in the proof of lemma  [",
    "le : negation ] , we can modify @xmath8 so that for each selection gate with a sign or a boolean parent which has an associated boolean formula @xmath16 , the resulting directed graph simultaneously has a sign or a boolean gate with an associated boolean formula @xmath103 which is equivalent to @xmath105 .",
    "more precisely , let @xmath114 be the directed graph defined in the proof of lemma  [ le : negation ] .",
    "for every selection gate in @xmath114 do the following .",
    "replace in @xmath114 the subgraph of the type shown on fig .",
    "4 by another subgraph , shown on fig .  5 .",
    "( note that for this we may need to introduce an additional _ constant gate _",
    "labelled by @xmath128 . )",
    "it is easy to observe that the arithmetic @xmath129-gate in fig .",
    "5 outputs the same numerical value as the selection gate of @xmath8 in fig .  4 .    the output gate in fig .",
    "4 has associated boolean formula @xmath53 .",
    "since @xmath103 is equivalent to @xmath105 , the boolean formula @xmath130 is identically true , hence the truth value of the boolean formula @xmath131 , associated with the output gate in fig .",
    "5 , is always the same as the truth value of @xmath53 .",
    "once the replacement is done for every selection gate in @xmath114 , we take the conjunction of boolean formulae associated with of all output gates in fig .  5 , using a dichotomy ( binary tree ) .",
    "remove from the resulting graph all gates that are not ancestors of the last gate .",
    "denote the obtained network by @xmath127 .",
    "we ve just proved the first half of the following lemma .",
    "[ le : selproc ] networks @xmath127 and @xmath8 are equivalent , and @xmath132 .    the equivalence of @xmath127 and @xmath8 has been proved along with the construction of @xmath127 .",
    "the only reason why the depth of @xmath127 may increase from @xmath30 , is the necessity to take a conjunction of boolean formulae associated with all output gates in subgraphs of the type shown on fig .  5 by a dichotomy , using the additional depth not greater than the logarithm of the number of selection gates in @xmath8 .",
    "since the number of selection gates does not exceed @xmath133 ( the total number of gates ) , the depth will increase by @xmath134 , thus the total depth of @xmath127 becomes @xmath134 .",
    "this section coincides ( up to minor details ) with section  2 in @xcite , and is reproduced for reader s convenience . here",
    "we formulate some results from @xcite which are used further in this paper .    in what follows , for a topological space @xmath135 ,",
    "let @xmath136 be its @xmath137-th betti number with respect to the singular homology group @xmath138 with coefficients in some fixed abelian group .",
    "by @xmath139 we denote the _ total _ betti number of @xmath135 , i.e. , the sum @xmath140 .",
    "[ def : s_delta ] let @xmath141 be a compact semialgebraic set . consider a semialgebraic family @xmath142 of compact subsets of @xmath141 , such that for all @xmath143 , if @xmath144 , then @xmath145 .",
    "denote @xmath146 .    for each @xmath147 ,",
    "let @xmath148 be a semialgebraic family of compact subsets of @xmath141 such that :    * for all @xmath149 , if @xmath150 , then @xmath151 ; * @xmath152 ; * for all @xmath153 sufficiently smaller than @xmath124 , and for all @xmath154 , there exists an open in @xmath141 set @xmath155 such that @xmath156 .",
    "we say that @xmath38 is _ represented _ by the families @xmath157 and @xmath148 in @xmath141 .",
    "consider the following two particular cases .",
    "* case 1.*let a semialgebraic set @xmath38 be given by a boolean formula _ with no negations _ , and with atomic subformulae of the kind @xmath158 or @xmath92 .",
    "let @xmath124 and @xmath123 be some positive constants .",
    "suppose first that @xmath38 is bounded in @xmath59 , take as @xmath141 a closed ball of a sufficiently large radius centered at 0 .",
    "the set @xmath159 is the result of the replacement of all inequalities @xmath160 and @xmath161 by @xmath162 and @xmath163 respectively .",
    "the set @xmath164 is obtained by replacing all expressions @xmath160 , @xmath161 and @xmath165 by @xmath162 , @xmath163 and @xmath166 , respectively . by lemma  1.2 in @xcite , the set @xmath38 ,",
    "is _ represented _ by families @xmath167 and @xmath148 in @xmath141 .",
    "now suppose that @xmath38 is not necessarily bounded . in this case as @xmath141 take the semialgebraic one - point ( alexandrov ) compactification of @xmath59 .",
    "define sets @xmath168 and @xmath164 as in the bounded case , replacing equations and inequalities , and then taking the conjunction of the resulting formula with @xmath169 .",
    "again , @xmath38 is represented by @xmath167 and @xmath148 in @xmath141 .",
    "* case 2.*let @xmath170 be the projection map , and @xmath171 be a semialgebraic set , given as a disjoint union of _ basic _ semialgebraic sets .",
    "the set @xmath38 is represented by families @xmath157 , @xmath172 in the compactification of @xmath173 as described in * case  1*. one can verify @xcite , that the projection @xmath174 is represented by families @xmath175 , @xmath176 in the alexandrov compactification of @xmath59 .    returning to the general case ,",
    "suppose that a semialgebraic set @xmath38 is _ represented _ by families @xmath167 and @xmath148 in @xmath141 .",
    "for a sequence @xmath177 , where @xmath178 , introduce the compact set @xmath179    observe that in * case  2 * , we have the equality @xmath180    in what follows , for two real numbers @xmath181 we write @xmath182 to `` mean @xmath98 is sufficiently smaller than @xmath99 '' ( see formal definition  1.7 in @xcite ) .",
    "[ pr : main ] for any @xmath178 , and @xmath183 we have    * for every @xmath184 , there is an epimorphism @xmath185 , in particular , @xmath186 ; * in * case  1 * , for every @xmath187 , the epimorphism @xmath188 is an isomorphism , in particular , @xmath189 .",
    "moreover , if @xmath190 , then @xmath191 is homotopy equivalent to @xmath38 .      for two maps @xmath192 and @xmath193 ,",
    "the _ fibered product _ of @xmath194 and @xmath195 is defined as @xmath196    [ pr : map ] let @xmath197 be a closed surjective semialgebraic map ( in particular , @xmath15 can be the projection map to a subspace , with a compact @xmath135 ) .",
    "then @xmath198 where @xmath199",
    "[ th : general ] let @xmath8 be an arithmetic network testing membership in a semi - algebraic set @xmath0 . then @xmath200 where @xmath4 are some positive constants .",
    "we first prove two auxiliary lemmas .",
    "let @xmath8 be an arithmetic network , testing membership in a semi - algebraic set @xmath0 .",
    "consider networks @xmath70 and @xmath127 , defined in section  [ sec : elim ] and [ sec : mod ] , which are equivalent to @xmath8 . by lemma  [ le : selproc ] ,",
    "@xmath132 , hence it is sufficient to prove theorem  [ th : general ] for the network @xmath127 .",
    "note that @xmath127 has no boolean gates labelled by @xmath11 .",
    "according to section  [ sec : denotational ] , networks @xmath70 and @xmath127 have associated boolean formulae @xmath201 and @xmath202 respectively , such that @xmath3 coincides with the set of all points in @xmath59 satisfying each of @xmath201 and @xmath202 . in addition , these formulae have no @xmath11-symbols .",
    "observe that @xmath202 is of the kind @xmath203 , where @xmath204 is the conjunction of an identically true boolean formulae of the type @xmath130 from the construction of @xmath127 ( see fig .",
    "3.1 ( b ) ) , for all selection gates in @xmath76 .",
    "denote by @xmath205 ( respectively , by @xmath206 ) the boolean formula obtained from @xmath202 ( respectively , from @xmath204 ) by the rules in section  [ sub : approx ] , case  1 , the subcase of a bounded set .",
    "let @xmath207 be the set of all points in @xmath59 satisfying @xmath205 .",
    "[ le : deltaeps ] there exists an arithmetic network @xmath208 , testing membership in @xmath207 , such that @xmath209 for some positive constants @xmath4 .    for all sign gates",
    "@xmath17 in @xmath127 , taken in arbitrary order , do the following .",
    "let @xmath17 be labelled by a sign @xmath18 .",
    "its parent @xmath21 is either an input gate , or a constant gate , or an arithmetic gate , or a selection gate , and has an associated piecewise polynomial @xmath15 defined on a partition .",
    "replace the directed edge @xmath210 by a directed graph , depending on the sign @xmath85 , as shown on fig .",
    "6 , 7 and 8 .    note that for this we may need to introduce up to two additional _ constant gates",
    "_ labelled by @xmath123 or @xmath124 , depending on @xmath85 .",
    "it is easy to see that the result of all the replacements is an arithmetic network , denote it by @xmath211 , herewith @xmath212 .",
    "there is the following injective map @xmath213 from the set of all gates of @xmath127 to the set of all gates of @xmath211 .",
    "all vertices in the graph of @xmath127 that are not replaced in the construction of @xmath211 ( i.e. , all gates except sign gates ) are mapped identically .",
    "sign gates of @xmath127 with associated boolean formulae @xmath214 and @xmath215 are mapped to boolean @xmath95-gates of @xmath211 with associated boolean formulae @xmath216 , @xmath217 and @xmath218 respectively .",
    "let @xmath219 be the boolean formula associated with @xmath211 .",
    "we prove that @xmath205 is equivalent to @xmath219 : @xmath220    note that @xmath205 and @xmath219 are not necessarily identical ( see example  [ ex : boolean ] below ) .",
    "consider a gate @xmath17 in @xmath127 having the depth @xmath79 .",
    "depending on the type of @xmath17 , it has either an associated boolean formula @xmath53 or an associated piecewise polynomial @xmath15 , represented by a list @xmath221 of polynomials and boolean formulae for elements of the partition . in the case of a boolean formula , let @xmath222 be the boolean formula obtained from @xmath53 by the rules in section  [ sub : approx ] , case  1 .",
    "in the case of a piecewise polynomial , let @xmath223 be the list @xmath224 , where for each @xmath45 , @xmath225 is the boolean formula obtained from @xmath46 by the rules in section  [ sub : approx ] , case  1 . notice that sets @xmath226 are pairwise disjoint",
    ", hence @xmath223 represents a _ partial _ piecewise polynomial @xmath227 defined in their union .",
    "we prove by induction on @xmath79 that , depending on the type of @xmath17 , the gate @xmath228 in @xmath211 either has the associated boolean formula @xmath229 such that @xmath230 is equivalent to @xmath231 , or has the associated piecewise polynomial @xmath232 , defined by a list @xmath233 , such that its restriction @xmath234 coincides with @xmath235 .",
    "the base of induction , for @xmath236 , is trivial .    on the inductive step ,",
    "let @xmath17 be a sign gate with an associated boolean formula @xmath20 , where @xmath15 is a piecewise polynomial .",
    "let , for definiteness , @xmath85 be @xmath87 .",
    "boolean formula @xmath222 is then of the form @xmath237 , where @xmath227 is a partial piecewise polynomial .",
    "observe that @xmath228 is a boolean gate in @xmath211 with the associated formula @xmath229 of the form @xmath238 where @xmath232 is a piecewise polynomial . by the inductive hypothesis , @xmath234 coincides with @xmath235 .",
    "hence @xmath230 is equivalent to @xmath231 .",
    "this completes the inductive step for a sign gate @xmath17 .",
    "cases when @xmath17 is an arithmetic or boolean gate are analogous .",
    "let @xmath17 and @xmath106 be some paired selection gates of @xmath127 , and @xmath239 be their respective boolean parents . let the arithmetic input of @xmath17 ( respectively , of @xmath106 ) be @xmath240 ( respectively , @xmath241 ) . here",
    "@xmath23 and @xmath25 are piecewise polynomials defined by some lists @xmath242 and @xmath243 respectively .",
    "let @xmath244 ( respectively , @xmath245 ) be the boolean formula associated with @xmath21 ( respectively , with @xmath246 ) . both @xmath244 and @xmath245 do nt have the @xmath11-symbol , and one is equivalent to the negation of another",
    "let for each @xmath45 boolean formulae @xmath247 and @xmath248 be obtained from @xmath249 and @xmath250 respectively by the rules in section  [ sub : approx ] .",
    "let @xmath251 and @xmath252 be boolean formulae obtained from @xmath244 and @xmath245 respectively by the rules in section  [ sub : approx ] .",
    "the arithmetic output of the pair @xmath253 is the piecewise polynomial @xmath15 represented by the list @xmath254 hence the corresponding list @xmath223 for @xmath227 is @xmath255 note that the disjunction @xmath256 will appear as a conjunction member in the boolean formula @xmath205 .    on the other hand , for the selection gates",
    "@xmath257 , @xmath258 in @xmath211 the arithmetic output of the pair @xmath253 is the piecewise polynomial @xmath232 represented by the list @xmath259 @xmath260 by the inductive hypothesis , @xmath261 is equivalent to @xmath262 , @xmath263 is equivalent to @xmath264 for every @xmath45 , @xmath265 is equivalent to @xmath266 , and @xmath267 is equivalent to @xmath268 .",
    "observe that the boolean formula @xmath206 is a conjunction , with one of its members being @xmath256 .",
    "taking conjunctions of boolean formulae in both lists , @xmath223 and @xmath233 , with @xmath206 , we get , in particular , an empty set defined by the formula @xmath269 thus , the restrictions of @xmath227 and @xmath232 to @xmath206 coincide .",
    "this completes the induction step in the case of a selection gate @xmath17 .    on the last induction step we get the equivalence of the sets @xmath270 and @xmath271 .    to complete the construction of @xmath272 ,",
    "we need to add the condition @xmath273 for the input vector @xmath274 . using the dichotomy",
    ", we compute the sum @xmath275 with the depth @xmath276 .",
    "squaring and comparing with @xmath277 requires additional constant depth .",
    "attach the resulting graph to @xmath211 in a straightforward way .",
    "the result is the sought network @xmath272 .",
    "the following example illustrates lemma  [ le : deltaeps ] and its proof .",
    "[ ex : boolean ] consider the network @xmath8 on fig  9 .",
    "clearly , @xmath278 a network obtained from it by means of lemma  [ le : selproc ] is shown on fig .",
    "10 , denote it by @xmath127 . in this case ,",
    "@xmath279 and @xmath280 here the boolean formula @xmath204 is @xmath281 , while @xmath206 is @xmath282 .",
    "the network @xmath211 is not shown on a picture , but one can write out @xmath283 @xmath284 the last term , @xmath282 , of @xmath219 kills the third term , @xmath285 , in the first disjunction , thus @xmath219 is equivalent to @xmath205 .    [",
    "le : upper ] let @xmath8 be an arithmetic network testing membership in a semi - algebraic set @xmath0 . then there exist an arithmetic network @xmath286 , testing membership in @xmath287 , such that @xmath288 for some positive constants @xmath4 .",
    "consider @xmath289 copies of @xmath208 from lemma  [ le : deltaeps ] , sharing the same set of input gates . in the @xmath45-th copy of @xmath208 ( @xmath290 ) replace all occurrences of @xmath123 ( respectively , @xmath124 ) by @xmath291 ( respectively , @xmath292 ) to obtain @xmath293 .",
    "note that this requires adding @xmath294 new constant gates , @xmath295 .",
    "each @xmath293 has a single output gate .",
    "collect these gates in one output using a binary tree of depth @xmath276 with @xmath95-boolean gates . as a result",
    "we obtain the arithmetic network @xmath286 accepting the set @xmath287 , and such that @xmath288 for some positive constants @xmath4 .",
    "let @xmath296 be the network constructed in lemma  [ le : upper ] . by proposition  [ pr : mon2 ] , since @xmath297 is compact , we have @xmath298 therefore , by proposition  [ pr : main ] , @xmath299 by lemma  [ le : upper ] , we have @xmath300 for some positive constants @xmath301 , hence @xmath302 for some positive constants @xmath4 .",
    "[ th : proj ] let @xmath8 be an arithmetic network testing membership in a semi - algebraic set @xmath0 .",
    "let @xmath5 , for some @xmath6 , be the projection map .",
    "then @xmath303 for some positive @xmath4 .",
    "let @xmath304 where @xmath305 .",
    "[ le : proj ] let @xmath76 be an arithmetic network for @xmath3 . then for each @xmath305 there exists a network @xmath306 , testing membership in @xmath307 , such that @xmath308 for some positive @xmath4 .",
    "lemma  [ le : upper ] implies that there is an arithmetic network @xmath286 testing membership in @xmath287 with @xmath309 for some positive @xmath4 .",
    "the problem of membership in @xmath307 has input variables @xmath310    construct the network @xmath306 by taking @xmath311 copies of @xmath286 , so that the @xmath45th copy has input variables @xmath312 .",
    "now using a dichotomy with depth @xmath313 compute the conjunction of boolean outputs for all copies of @xmath286 .",
    "clearly the depth of the resulting network @xmath306 is equal to the depth of @xmath286 plus the @xmath313-depth needed to combine @xmath311 copies of @xmath286 into one network , i.e. , @xmath314 for some positive @xmath301 .",
    "it follows that @xmath308 for some positive @xmath4 .",
    "if @xmath315 , considered as a function of @xmath26 , grows asymptotically slower than @xmath316 , then the right hand side of ( [ eq : th ] ) is asymptotically negative for suitable positive @xmath4 , and we are done .",
    "thus , assume this is not the case .    by proposition  [ pr : map ] ,",
    "@xmath317 it follows that @xmath318 let @xmath319 , then @xmath320    since @xmath321 is compact , by ( [ eq : mon2 ] ) we have @xmath322 for some positive constant @xmath323 .",
    "replacing @xmath324 in this inequality by a larger number according to lemma  [ le : proj ] , we get for each @xmath305 : @xmath325 for some positive @xmath301 .",
    "then ( [ eq : proj1 ] ) implies that @xmath326 according to ( [ eq : rho ] ) , @xmath327 , hence @xmath328 while , by proposition  [ pr : main ] , @xmath329 .",
    "it follows that @xmath330 since we assumed that @xmath315 grows faster than @xmath316 , ( [ eq : proj2 ] ) implies ( [ eq : th ] ) for some positive @xmath4 .",
    "in this section we apply the bound from theorem  [ th : general ] to an example of a specific computational problem ( a particular case of `` parity of integers '' problem in @xcite ) .      to obtain a lower bound , consider the integer lattice @xmath334 in @xmath335 and let @xmath3 be the union of all open two - dimensional squares and all vertices .",
    "then the problem is equivalent to deciding membership in @xmath3 .",
    "obviously , the complement @xmath336 is connected .",
    "observe that @xmath3 is not locally closed .",
    "it is homotopy equivalent to a two - plane with @xmath337 punctured points , so @xmath338 . by theorem",
    "[ th : general ] , the depth of any arithmetic network testing membership in @xmath3 is @xmath339 for some positive @xmath323 .",
    "various simple algorithms provide an upper bound @xmath276 for the problem .",
    "for example , for each of @xmath333 in parallel or sequentially , decide whether or not it s one of the numbers @xmath340 , evaluating the disjunction @xmath341 by means of dichotomy .",
    "this requires the depth @xmath276 .",
    "let the result be @xmath128 if @xmath333 is integer and @xmath342 otherwise .",
    "the network computes , with constant depth , the sum of the results .",
    "then the answer is yes if and only if the sum is either 0 or 2 . the depth of the resulting network is @xmath276 .          p. brgisser , f. cucker , variations by complexity theorists on three themes of euler , bzout , betti , and poincar , in complexity of computations and proofs ( jan krajicek ed . ) , quaderini di matematica 13 ( 2005 ) , 73 - 152",
    ".            j. von zur gathen , parallel arithmetic computations : a survey , in mathematical foundations of computer science 1986 , proceedings of the 12th symposium bratislava , czechoslovakia august 25 - 29 , 1986 ( j. gruska , b. rovan , j. wiedermann eds . ) , lecture notes in computer science , 233 ( 1986 ) , 93 - 112 ."
  ],
  "abstract_text": [
    "<S> we prove that the depth of any arithmetic network for deciding membership in a semialgebraic set @xmath0 is bounded from below by @xmath1 where @xmath2 is the sum of the betti numbers of @xmath3 with respect to `` ordinary '' ( singular ) homology , and @xmath4 are some ( absolute ) positive constants . </S>",
    "<S> this result complements the similar lower bound by montaa , morais and pardo @xcite for _ locally closed _ </S>",
    "<S> semialgebraic sets in terms of the sum of _ borel - moore _ betti numbers .    </S>",
    "<S> we also prove that if @xmath5 is the projection map , for some @xmath6 , then the depth of any arithmetic network deciding membership in @xmath3 is bounded by @xmath7 for some positive constants @xmath4 . </S>"
  ]
}
{
  "article_text": [
    "identifying codes , which have been introduced in  @xcite , are dominating sets having the additional property that each vertex of the graph can be uniquely identified using its neighbourhood within the identifying code .",
    "they have found numerous applications , such as fault - diagnosis in multiprocessor networks  @xcite , the placement of networked fire detectors in complexes of rooms and corridors  @xcite , compact routing  @xcite , or the analysis of secondary rna structures  @xcite .",
    "identifying codes are a variation on the earlier concept of locating - dominating sets ( cf .",
    "e.g.  @xcite ) , and a special case of the more general test cover problem  @xcite . identifying codes have been studied in specific graph classes such as cycles  @xcite , trees  @xcite , grids  @xcite or hypercubes  @xcite .",
    "extremal problems regarding the minimum size of an identifying code have been studied in  @xcite .",
    "herein , we further investigate these extremal questions by giving new upper bounds on the size of minimum identifying codes for triangle - free graphs using their maximum degree .",
    "let @xmath12 be a simple undirected graph .",
    "we denote the vertex set of @xmath0 by @xmath13 and its edge set by @xmath14 .",
    "we also denote by @xmath15 the order of @xmath0 and by @xmath16 the maximum vertex degree of @xmath0 .    for a vertex @xmath17 of @xmath0 , the _ ball _ @xmath18 is the set of all vertices of @xmath19 which are at distance at most 1 from @xmath17 .",
    "we denote by @xmath20 , the _ neighbourhood _ of @xmath17 . for a set @xmath21 of vertices of @xmath0",
    ", we define @xmath22 to be the union of the neighbourhoods of all vertices of @xmath21 , that is @xmath23 . whenever we find it necessary to emphasize on the graph @xmath0 for which the neighbourhood is considered , we write @xmath24 , @xmath25 and @xmath26 .",
    "two distinct vertices @xmath27 are called _ twins _ if @xmath28  @xcite .",
    "they are called _ false twins _ if @xmath29 but @xmath30 and @xmath17 are not adjacent  @xcite .    for a subset @xmath31 of vertices of @xmath0 ,",
    "we denote by @xmath32 $ ] the subgraph of @xmath0 induced by @xmath31 . a _ matching _",
    "@xmath33 of a graph @xmath0 is a subset of edges of @xmath0 such that no two edges of @xmath33 have a common vertex .",
    "if within the set of all endpoints of the edges of @xmath33 no other edges than the ones of @xmath33 exist , we call @xmath33 an _ induced matching_.    given a set @xmath31 of vertices of @xmath0 , we say that a vertex @xmath34 of @xmath0 is _ @xmath31-isolated _ if @xmath35 and no neighbour of @xmath34 belongs to @xmath31 .",
    "we say that vertex @xmath30 _ dominates _",
    "vertex @xmath17 if @xmath36 . for two subsets @xmath37 of vertices , @xmath2 _ dominates _",
    "@xmath38 if each vertex of @xmath38 is dominated by some vertex of @xmath2 . set @xmath39",
    "is called a _ dominating set _ of @xmath0 if @xmath2 dominates @xmath19 .",
    "the vertices of a pair @xmath27 of vertices of @xmath19 are _ separated _ by some vertex @xmath40 if @xmath34 dominates exactly one of the vertices @xmath30 and @xmath17 .",
    "we call @xmath41 an _ identifying code _ of @xmath0 if it is a dominating set of @xmath0 , and for all pairs @xmath27 of vertices of @xmath19 , @xmath30 and @xmath17 are separated by some vertex of @xmath2",
    ". the latter condition can be equivalently stated as @xmath42 , or as @xmath43 ( denoting by @xmath44 the symmetric difference of sets ) . in the following , we might simply call an identifying code a _ code _ and a vertex of the code ,",
    "a _ code vertex_. given a graph @xmath0 and a subset @xmath31 of its vertices , we say that a set @xmath45 is an _ @xmath31-identifying code _ of @xmath0 if @xmath2 is an identifying code of @xmath32 $ ] .    a graph is said to be _ identifiable _ if it admits an identifying code .",
    "this is the case if and only if it does not contain any pair of twins  @xcite .",
    "an example of a graph which is not identifiable is the complete graph @xmath46 . for an identifiable graph @xmath0 ,",
    "we denote by @xmath4 the cardinality of a minimum identifying code of @xmath0 .",
    "the problem of determining the exact value of @xmath4 is known to be an np - hard problem , even when @xmath0 belongs to the class of planar graphs of maximum degree  4 having arbitrarily large girth  @xcite , or to the class of planar graphs of maximum degree  3 and girth  9  @xcite .",
    "this paper deals with the study of paramater @xmath47 and its relation with the order and the maximum degree of graphs .",
    "this work is an extension of earlier results .    for any graph @xmath0 on @xmath5 vertices , the lower bound @xmath48",
    "was given in  @xcite .",
    "this bound is tight , and all graphs reaching it have been described in  @xcite . in  @xcite , it was also shown that the bound @xmath49 holds , and all graphs reaching this bound have been described in  @xcite .",
    "this bound is an improvement over the @xmath50-bound whenever @xmath51 , and shows that the maximum degree has a strong influence on the minimum possible value of @xmath47 .",
    "considering upper bounds in terms of @xmath5 and @xmath52 , we conjecture that the following bound on @xmath47 holds .",
    "[ conj ] there exists a constant @xmath10 such that for any nontrivial connected identifiable graph @xmath0 of maximum degree  @xmath52 , @xmath53 .",
    "it is known that there exist examples of specific families of graphs such that @xmath54 ( e.g. the complete bipartite graph @xmath55 , sierpiski graphs  @xcite and other classes of graphs described in the first author s master thesis  @xcite ) .",
    "other classes of graphs with slightly smaller values of parameter @xmath47 are known , including graphs having high girth .",
    "for instance , it is shown in  @xcite that @xmath56 for any complete @xmath8-ary tree @xmath57 on @xmath5 vertices .",
    "for all identifiable graphs having at least one edge , the upper bound @xmath58 holds  @xcite .",
    "this bound is tight , in particular for the star @xmath59 and other graphs which have been recently classified in  @xcite .",
    "hence , for graphs of very high maximum degree ( say  @xmath60 ) , the conjecture holds since @xmath61 .",
    "moreover , for any connected graph @xmath0 of maximum degree  @xmath62 ( i.e. when @xmath0 is either a path or a cycle ) , the exact value of @xmath4 is known ( see  @xcite ) . in this case , the bound @xmath63 holds and is reached for infinitely many values of @xmath5 ( more precisely , this is the case when @xmath0 is a cycle of odd order @xmath64 ) .",
    "hence , the conjecture holds for @xmath65 .",
    "there is some evidence that even the case @xmath66 might be challenging .",
    "indeed , the similar notion of _ identifying open codes _ ( that is , identifying codes on _ open balls _ rather than closed balls , i.e. vertices do not dominate or identify themselves ) was studied very recently in  @xcite for cubic graphs . denoting @xmath67 the minimum size of an identifying open code of a graph @xmath0 , they are able to prove that in a cubic graph @xmath0 admitting an identifying open code , @xmath68 .",
    "moreover , they conjecture that the only ( connected ) examples reaching the bound belong to a set of six graphs , and that otherwise , @xmath69 , which , if true , would be sharp . this result is proved by using a strong connection to _ distinguishing transversals _ of 3-uniform hypergraphs .",
    "it is worth noting that using the same technique in the case of ( classic ) identifying codes in cubic graphs would require to handle distinguishing transversals of 4-uniform hypergraphs , which seems to be a much more difficult task .    it was shown in  @xcite that for any connected identifiable graph @xmath0 of maximum degree  @xmath52 , @xmath70 , and if @xmath0 is @xmath52-regular , @xmath71 . in this paper , we improve these results by showing that the conjectured bound holds asymptotically when @xmath0 is triangle - free .",
    "more precisely , it is proved in theorem  [ th : upperbound_notriangle - new ] that @xmath72 when @xmath0 is a nontrivial connected identifiable triangle - free graph .",
    "this result strongly supports conjecture  [ conj ] .",
    "moreover , the proof is constructive and can be used to build the corresponding code in polynomial time . for some specific subclasses of triangle - free graphs , we are able to show bounds of the form @xmath73 for some constants  @xmath74 .      in section  [ sec : proofideas ]",
    ", we begin by giving an informal overview of the technique and the construction used to prove our results . in sections",
    "[ sec : prelim ] to  [ subsec : lr ] , we introduce some definitions and preliminary results that are needed in the proof of our main result .",
    "this result is proved in section  [ subsec : mainresult ] . in section  [ sec : families ] , we give improved bounds for restricted subfamilies of triangle - free graphs .",
    "finally , section  [ sec : rem ] concludes the paper with a remark on the algorithmic consequences of our proof technique .",
    "the general idea of our proof technique is to construct a sufficiently large independent set of the graph such that some specific conditions hold . taking the complement of this set and performing some local modifications yields an identifying code .",
    "this technique originates from the following proposition , which is to give the reader a first intuition of our technique .",
    "[ prop : iscode ] let @xmath0 be an identifiable ( not necessarily connected ) triangle - free graph , and @xmath31 , an independent set of @xmath0 .",
    "then , if the following conditions hold , @xmath75 is an identifying code of @xmath0 .    1 .",
    "@xmath31 contains no isolated vertex of @xmath0 .",
    "2 .   for any pair @xmath27 of vertices of @xmath31 , @xmath76 ( i.e. @xmath31 does not contain any pair of false twins ) .",
    "3 .   for each vertex @xmath17 of degree  1 in @xmath0",
    ", some vertex at distance  2 from @xmath17 does not belong to @xmath31 .",
    "the graph @xmath77 $ ] has no isolated edges .",
    "let @xmath78 . since @xmath31 is an independent set and does not contain any isolated vertex",
    ", @xmath2 is a dominating set .",
    "let us now check the separation condition .",
    "let @xmath27 be an arbitrary pair of vertices of @xmath3 .",
    "we distinguish several cases .",
    "if @xmath30 and @xmath17 are adjacent and both have degree at least  2 , since they can not form an isolated edge in @xmath79 $ ] , a neighbour of either one of @xmath27 belongs to @xmath2 and separates them .",
    "if @xmath27 are adjacent and one of them , say @xmath30 , has degree  1 , since @xmath0 is identifiable , @xmath17 has at least one neighbour .",
    "then , by the third property of @xmath31 , there is a vertex at distance  2 of @xmath30 in @xmath2 , separating @xmath30 and @xmath17 .",
    "if @xmath30 and @xmath17 are false twins , they do not both belong to @xmath31 and hence they are separated by themselves .    finally ,",
    "if @xmath30 and @xmath17 are not adjacent and are not false twins , if either @xmath30 or @xmath17 belong to @xmath2 , they are separated .",
    "if both @xmath30 and @xmath17 belong to @xmath31 , all their neighbours belong to @xmath2 , and since they have distinct sets of neighbours they are separated .    in order to prove our main result , we show how to build ( large enough ) independent sets in triangle - free graphs such that the three first conditions of proposition  [ prop : iscode ] hold ( see lemma  [ lemm : goodis ] )",
    "however , it seems difficult to also ensure that the last condition holds while keeping the size of @xmath31 reasonably large .",
    "therefore , after building @xmath31 , we compute the set @xmath33 of isolated edges of @xmath80 $ ] and partition @xmath3 into the end - vertices of @xmath33 ( set @xmath81 ) together with their neighbours ( set @xmath82 ) on the one hand , and the remaining vertices , @xmath83 , on the other hand .",
    "we then build a sufficiently small _ @xmath84-quasi - identifying code _",
    "@xmath85 , a variation of an identifying code which will be defined later ( see definition  [ def : quasi ] ) .",
    "this construction is done in lemmas  [ lemma : lrdeg2 ] and  [ lemma : lr ] . setting @xmath86 as the complement of @xmath31 restricted to @xmath83 ,",
    "our final code is @xmath87 .",
    "we also combine this method with another technique ( proposition  [ lemm : falsetwincode ] ) which is suitable for the special case where the graph has a large number of false twins . the whole procedure is sketched in algorithm  [ alg : global_alg ] .",
    "compute the set @xmath21 of vertices having at least one false twin use lemma  [ lemm : goodis ] to compute an independent set @xmath31 of @xmath0 fulfilling the three first properties listed in proposition  [ prop : iscode ] .",
    "compute the set @xmath88 of vertices such that for each @xmath89 , @xmath17 has a neighbour @xmath30 where both @xmath30 and @xmath17 are of degree at least  2 , and all the vertices of @xmath90 belong to @xmath31 . @xmath91",
    "compute an @xmath84-quasi - identifying code @xmath85 of @xmath0 using the constructions of lemmas  [ lemma : lrdeg2 ] and  [ lemma : lr ] .",
    "@xmath92 @xmath93 @xmath94 an identifying code of @xmath0 computed using proposition  [ lemm : falsetwincode ] .",
    "@xmath2    this process is detailed in subsection  [ subsec : mainresult ] ( theorem  [ th : upperbound_notriangle - new ] ) .",
    "all auxiliary results needed for this proof are developed in the next subsections .",
    "the next proposition shows how to build an identifying code of a graph @xmath0 which has relatively small size when @xmath0 contains a large number of false twins .",
    "we let @xmath95 denote the _ false twin relation _ over @xmath3 , where @xmath96 if @xmath27 are false twins .",
    "this relation is an equivalence relation .",
    "we call an equivalence class of @xmath95 _ nontrivial _ if it has at least two elements .",
    "[ lemm : falsetwincode ] let @xmath0 be a nontrivial connected identifiable triangle - free graph on @xmath5 vertices and maximum degree  @xmath52 non isomorphic to @xmath97 .",
    "let @xmath98 be the set of all nontrivial equivalence classes over @xmath95 in @xmath0 .",
    "then @xmath0 has an identifying code of size at most @xmath99 .",
    "first , we may suppose that @xmath0 is not isomorphic to @xmath100 since in that case the lemma holds : @xmath100 has its minimum identifying code of size  2 and @xmath101 .",
    "for each @xmath102 , @xmath103 , let @xmath104 be an arbitrary vertex of @xmath105 , and let @xmath106 .",
    "we claim that if @xmath0 is not isomorphic to @xmath100 or @xmath97 , @xmath107 is an identifying code of @xmath0 .",
    "first , observe that @xmath2 is a dominating set of @xmath0 .",
    "now , consider two vertices @xmath108 . we need to show that they are separated from each other .",
    "if @xmath108 are false twins , the one belonging to the code separates them .",
    "otherwise , since @xmath0 is identifiable , there is a vertex @xmath109 which is able to separate them , say @xmath109 belongs to @xmath110 , but not to @xmath111 .",
    "if @xmath109 belongs to the code , we are done .",
    "otherwise , @xmath112 .",
    "if @xmath109 is a neighbour of @xmath34 , consider a false twin @xmath113 of @xmath109 .",
    "if @xmath114 , @xmath113 belongs to the code and separates @xmath108 , so we are done .",
    "otherwise , since @xmath0 is not isomorphic to @xmath100 and @xmath115 are false twins , one of @xmath34 or @xmath116 has another neighbour , say @xmath117 .",
    "if @xmath117 belongs to the code we are done .",
    "otherwise , if @xmath117 is a neighbour of @xmath116 , since @xmath0 is not isomorphic to @xmath97 , either @xmath34 or @xmath116 has another neighbour .",
    "we can repeat the argument but this time , either this neighbour or its false twin separates @xmath108 . if @xmath117 is a neighbour of @xmath34 , @xmath117 can not be a false twin of @xmath116 and therefore either @xmath117 or its false twin separates @xmath108 .    finally , if @xmath118 , @xmath34 and @xmath116 are not adjacent .",
    "but since they are not false twins , there is another vertex , say @xmath30 , with @xmath119 , such that @xmath30 is adjacent to exactly one of @xmath108 .",
    "now , either @xmath30 belongs to the code and we are done , or a false twin of @xmath30 ( which also is adjacent to exactly one of @xmath108 ) , which completes the proof .    in the proof of our main result",
    ", we first construct an independent set @xmath31 having some given properties .",
    "then , we consider the set @xmath75 as a potential code , and modify it in order to identify those vertices which form isolated edges in @xmath120 $ ] . the following definition introduces a notion which helps to formalize this situation .",
    "[ def : lrmatch ] given a graph @xmath0 together with an induced matching @xmath33 of @xmath0 , we denote by @xmath121 , the set of end - vertices of the edges of @xmath33 and by @xmath122 , the set of neighbours of the vertices of @xmath121 : @xmath123 .",
    "@xmath33 is called a _ strong induced matching _",
    "if the following holds :    * @xmath122 is an independent set in @xmath0 . *",
    "each vertex @xmath34 of @xmath121 has degree at least  2 in @xmath0 ( i.e. @xmath124 ) .",
    "an illustration of a strong induced matching is given in figure  [ fig : lrm ] .",
    "note that in some graphs , one can not necessarily find a strong induced matching .",
    "indeed , if @xmath0 is triangle - free , each edge of such a matching must belong to at least some induced path on four vertices .",
    "note that in any triangle - free graph @xmath0 having a strong induced matching @xmath33 , @xmath125 $ ] has no isolated edge ( i.e. two adjacent vertices of degree  1 ) .",
    "since in a triangle - free graph , a pair of twins necessarily forms an isolated edge , the following observation is immediate .",
    "[ obs : lrm - twinfree ] let @xmath0 be a triangle - free graph having a strong induced matching @xmath33 . then @xmath125 $ ] is identifiable .",
    "in order to construct small identifying codes of a triangle - free graph @xmath0 having a strong induced matching @xmath33 , we will construct special codes for the subgraph of @xmath0 induced by set @xmath126 .",
    "these codes are defined as follows .",
    "[ def : quasi ] let @xmath0 be a triangle - free identifiable graph having a strong induced matching @xmath33 with @xmath127 and @xmath128 .",
    "let @xmath129 $ ] .",
    "we say that @xmath130 is an _ @xmath84-quasi - identifying code _ of @xmath0 if :    1 .",
    "each vertex of @xmath131 is dominated by some vertex of @xmath2.[def : quasi-1 ] 2 .   for each pair @xmath27 of vertices in @xmath131 , @xmath132 , unless @xmath30 and @xmath17 both belong to @xmath82 and @xmath133.[def : quasi-2 ] 3 .   for each edge @xmath134 of @xmath33",
    ", at least one of the vertices of @xmath134 belongs to @xmath2.[def : quasi-3 ]    note that because of condition number  [ def : quasi-2 ] of definition  [ def : quasi ] , an @xmath84-quasi - identifying code of @xmath0 is not necessarily an @xmath135-identifying code of @xmath0 .",
    "conversely , because of condition number  [ def : quasi-3 ] , an @xmath135-identifying code of @xmath0 might not be an @xmath84-quasi - identifying code of @xmath0 .",
    "the following proposition shows that we can use an @xmath84-quasi - identifying code of @xmath0 to construct a valid identifying code of @xmath0 .",
    "[ prop : well - id ] let @xmath12 be an identifiable triangle - free graph having a strong induced matching @xmath33 , with @xmath127 and @xmath128 , and suppose that @xmath82 does not contain any pair of false twins in @xmath0 .",
    "also suppose that there exists an @xmath84-quasi - identifying code @xmath85 of @xmath0 without @xmath85-isolated vertices and a @xmath136-identifying code @xmath86 of @xmath0 where all the neighbours of vertices of @xmath82 within @xmath83 belong to @xmath86.-identifying code @xmath2 exists ( i.e. @xmath137 $ ] is identifiable ) , then adding all neighbours of vertices of @xmath82 to @xmath2 yields an identifying code .",
    "in fact , any superset of an identifying code is still an identifying code . ]",
    "then , @xmath87 is an identifying code of @xmath0 .",
    "we show that each pair of vertices of @xmath0 is separated . since @xmath86 is a @xmath136-identifying code , all pairs of vertices of @xmath83",
    "are separated . since @xmath85 is @xmath84-quasi - identifying and there are no @xmath85-isolated vertices , each vertex @xmath34 of @xmath131 is dominated by at least one vertex of @xmath138 ( see points number  [ def : quasi-1 ] and  [ def : quasi-3 ] of definition  [ def : quasi ] ) , which we denote @xmath139 . moreover , by definition of sets @xmath82 and @xmath81 , no vertex of @xmath83 is dominated by a vertex of @xmath81 .",
    "therefore , all pairs of vertices @xmath108 with @xmath140 and @xmath141 are separated by @xmath139 . it remains to check the pairs of vertices of @xmath131 . by contradiction , suppose there are two vertices @xmath27 of @xmath131 which are not separated . by point number  [ def : quasi-2 ] of definition  [ def :",
    "quasi ] , @xmath30 and @xmath17 belong to @xmath82 and have the same neighbourhood within @xmath131 .",
    "but since we assumed that they are not false twins and all their neighbours in @xmath142 are in @xmath86 , @xmath30 and @xmath17 are separated by the neighbours they do not have in common , a contradiction .      in order to use proposition  [ prop : iscode ] , we need to build ( large enough ) independent sets in triangle - free graphs .",
    "we use the following result of j.  shearer  @xcite to show that triangle - free graphs have large independent sets which fulfill some useful conditions .",
    "note that the proof of the following theorem is constructive .",
    "[ thm : shearer ] let @xmath0 be a triangle - free graph on @xmath5 vertices and average degree  @xmath143 .",
    "then @xmath0 has an independent set of size at least @xmath144 .",
    "the following corollary of theorem  [ thm : shearer ] is an approximate bound which is easier to deal with and which is tight enough for our purposes .",
    "it follows from the facts that @xmath145 and that when @xmath146 , the function @xmath147 is decreasing .",
    "moreover in that case , @xmath148 and for @xmath149 , @xmath150 .",
    "[ cor : shearer ] let @xmath0 be a triangle - free graph on @xmath5 vertices and maximum degree  @xmath6 .",
    "then @xmath0 has an independent set of size at least @xmath151 .",
    "we get the following lemma as a corollary , which we will use in the proof of our main result .",
    "[ lemm : goodis ] let @xmath0 be an identifiable triangle - free graph on @xmath5 vertices and maximum degree  @xmath6 , and let @xmath152 be the set of all vertices of @xmath0 having no false twin . then @xmath153 $ ] has an independent set @xmath31 with the following properties :    1 .   for each vertex @xmath30 of degree  1 in @xmath0 , there exists a vertex of @xmath0 at distance  2 of @xmath30 which does not belong to @xmath31.[lemm : goodis - prop-1 ] 2",
    "@xmath154[lemm : goodis - prop-2 ]    let @xmath155 be the set of vertices of @xmath152 having degree  1 in @xmath0 .",
    "note that since @xmath0 is identifiable , it has no isolated edges and therefore @xmath156 is an independent set in @xmath0 ( and @xmath153 $ ] ) .",
    "moreover since @xmath152 has no vertices having a false twin , all vertices of @xmath156 are at distance at least  3 from each other .",
    "let @xmath157 be the set of vertices constructed as follows .",
    "all the vertices of @xmath156 belong to @xmath157 . for each element @xmath158 of @xmath156 ,",
    "its unique neighbour in @xmath0 belongs to @xmath157 , and some arbitrary neighbour at distance  2 of @xmath158 belongs to @xmath157 . since all the vertices of @xmath156 are at distance at least  3 from each other , for each vertex @xmath158 of @xmath156 there is a vertex at distance  2 of @xmath158 belonging to @xmath159 .",
    "we now set @xmath160 .",
    "note that we have @xmath161 since for each vertex of @xmath156 , at most three vertices of @xmath0 have been inserted into @xmath157 .",
    "now , let @xmath162 .",
    "by the previous construction , @xmath163 neither contains a vertex of degree  1 in @xmath0 , nor a neighbour of such a vertex . by corollary  [ cor : shearer ] , @xmath164 $ ] has an independent set @xmath165 of size at least @xmath166 .",
    "taking @xmath167 , we get an independent set of @xmath153 $ ] fulfilling the first property of the claim .",
    "moreover , @xmath168 and @xmath163 form a partition of @xmath152 , @xmath169 and @xmath170 .",
    "since for all strictly positive @xmath34 , @xmath171 , we have : @xmath172      this subsection is devoted to the construction of small enough quasi - identifying codes .",
    "recall that in order to prove our main result , given a nontrivial identifiable connected triangle - free graph @xmath0 , we will construct an independent set @xmath31 and consider the ( possibly empty ) strong induced matching @xmath33 such that @xmath121 forms the set of isolated edges of @xmath75 . in order to ensure that there are no isolated edges @xmath173 in @xmath77 $ ]",
    ", it would suffice to remove an arbitrary neighbour of either @xmath30 or @xmath17 from @xmath31 . however , this could lead to a very large identifying code .",
    "indeed , consider the example of a complete graph @xmath46 where each edge is subdivided twice , @xmath174 .",
    "the original vertices of @xmath46 form a ( maximal ) independent set @xmath31 and each original edge of @xmath46 corresponds to an isolated edge in the subgraph of @xmath174 induced by the complement of @xmath31 , @xmath175 $ ] .",
    "now , in @xmath174 , getting rid of all isolated edges of @xmath175 $ ] by removing vertices from @xmath31 requires a vertex cover of @xmath46 , that is , @xmath176 vertices .",
    "this would yield an identifying code of size @xmath177 , which is not interesting .",
    "hence , in order to overcome this problem , we show in this subsection how to build an @xmath178-quasi - identifying code of bounded size .",
    "we first deal with the special case where all vertices of @xmath121 have degree exactly  2 ( note that by definition  [ def : lrmatch ] they must have degree at least  2 ) .",
    "[ lemma : lrdeg2 ] let @xmath0 be an identifiable ( not necessarily connected ) triangle - free graph having a strong induced matching @xmath33 where @xmath127 , @xmath128 , and all vertices of @xmath81 have degree exactly  2 .",
    "then , there is an @xmath84-quasi - identifying code @xmath2 of @xmath0 having the following properties :    1 .",
    "@xmath179.[lemma : lrdeg2 - 1 ] 2 .",
    "no vertex of @xmath81 is @xmath2-isolated.[lemma : lrdeg2 - 2 ] 3 .",
    "at least half of the vertices of @xmath82 belong to @xmath2.[lemma : lrdeg2 - 3 ]    in order to simplify its construction , let us first define the multigraph @xmath180 with vertex set @xmath82 and in which there is an edge between two vertices @xmath181 of @xmath82 if and only if there exist two vertices @xmath182 of @xmath81 , such that @xmath183 is a 3-path in @xmath0 . in other words , we contract every path of length  3 of @xmath184 $ ] having both endpoints in @xmath82 , into one edge . there can be multiple edges in @xmath185 ( but no loops ) , since several disjoint 3-paths may join @xmath186 to @xmath187 .",
    "from @xmath185 we will build an oriented multigraph @xmath188 .",
    "given an orientation of @xmath188 , we define the subset @xmath189 of vertices of @xmath131 in the following way : all the vertices of @xmath82 belong to @xmath189 , and for each arc @xmath190 of @xmath188 corresponding to the path @xmath191 in @xmath0 , @xmath192 belongs to @xmath189 . note that @xmath193 .",
    "an illustration is given in figure  [ fig : tfree_digraph ] , where the gray vertices belong to @xmath189 .",
    "our aim is to construct an orientation of @xmath188 for which @xmath189 is the desired @xmath84-quasi - identifying code of @xmath0 .",
    "we start by orienting the arcs of @xmath188 in an arbitrary way .",
    "note that @xmath189 fulfills all three required properties of the statement of the lemma .",
    "hence , if @xmath189 is an @xmath194-quasi - identifying code of @xmath0 , we are done .",
    "so suppose this is not the case .",
    "note that @xmath189 fulfills conditions number  [ def : quasi-1 ] and  [ def : quasi-3 ] of definition  [ def : quasi ] .",
    "hence , there are pairs of vertices of @xmath131 which are not separated by @xmath189 .",
    "the only case where a pair @xmath195 is not separated by @xmath189 , is when @xmath196 , @xmath197 , and both belong to @xmath189 , but they are only dominated by each other and themselves .",
    "this is equivalent to the case where @xmath198 is of in - degree  1 in @xmath188 ( see figure  [ fig : upperbnd_bnd_tfree-3 ] for an illustration ) . in this case , in order to fix this problem , we modify the orientation of @xmath188 as follows .    at first , consider a connected component @xmath199 of @xmath188 , and construct an arbitrary spanning tree @xmath200 of @xmath199 , rooted in some vertex @xmath198 .",
    "now , go through all vertices of @xmath200 , level by level in a bottom - up order from the leaves up to the root . whenever the in - degree of the current vertex , @xmath17 , is equal to  1 , swap the orientation of the arc joining @xmath17 to its parent in @xmath200 .",
    "doing so , the in - degree of @xmath17 in @xmath199 becomes distinct from  1 , and the in - degree of its parent is either incremented or decremented by  1 .",
    "note that except for the root @xmath198 , all vertices of @xmath199 have now an in - degree different from  1 .",
    "this process is repeated for all connected components of @xmath188 .",
    "let @xmath201 be the new set corresponding to the new orientation .",
    "if @xmath2 is an @xmath84-quasi - identifying code of @xmath0 , we are done .",
    "otherwise , as observed earlier , it means that some roots of the spanning trees we built , have in - degree  1 in @xmath188 .",
    "let @xmath198 be such a root with in - degree  1 .",
    "observe that @xmath198 has a unique neighbour in @xmath202 , say @xmath203 .",
    "let @xmath192 be the neighbour of @xmath203 in @xmath81 .",
    "it is sufficient to take out @xmath198 from @xmath2 and to replace it by @xmath192 in order to separate @xmath198 from @xmath203 in @xmath184 $ ] ( see figure  [ fig : upperbnd_bnd_tfree-5 ] for an illustration ) , without changing the cardinality of @xmath2 .",
    "moreover , all neighbours of @xmath198 are still separated from the other vertices because they are all in @xmath204 and therefore have a neighbour in @xmath205 , which itself has at least one neighbour in @xmath206 .",
    "hence @xmath2 is now an @xmath84-quasi - identifying code of @xmath0 .",
    "since the process did not change the cardinality of @xmath2 , we get property number  [ lemma : lrdeg2 - 1 ] of the claim of the lemma .",
    "notice that there are at most @xmath207 connected components in @xmath184 $ ] since each of them contains at least two vertices of @xmath82 .",
    "thus property number  [ lemma : lrdeg2 - 3 ] of the claim of the lemma follows .",
    "property number  [ lemma : lrdeg2 - 2 ] is fulfilled by the construction of @xmath2 since in each pair of adjacent vertices of @xmath81 , either it has a code vertex in @xmath82 as a neighbour if there was no modification done , or in @xmath81 if a switch of two elements of @xmath82 and @xmath81 was necessary . moreover , for each such pair , at least one of its elements belongs to the code .",
    "this shows that @xmath2 is an @xmath84-quasi - identifying code and completes the proof .",
    "we now deal with the general case , where the vertices of @xmath121 have degree _ at least _  2 as required in definition  [ def : lrmatch ] .",
    "[ lemma : lr ] let @xmath0 be an identifiable ( not necessarily connected ) triangle - free graph having a strong induced matching @xmath33 , with @xmath127 and @xmath128 .",
    "there exists a set @xmath208 of vertices of @xmath131 such that @xmath209 , and @xmath210 is an @xmath84-quasi - identifying code of @xmath0 having no @xmath2-isolated vertices .",
    "let us first divide sets @xmath82 and @xmath81 into the following subsets : let @xmath211 be such that @xmath212 if both @xmath203 and its unique neighbour in @xmath81 are of degree  2 .",
    "let @xmath213 be the set of all neighbours of vertices of @xmath214 , let @xmath215 , and let @xmath216 ( see figure  [ fig : upperbnd_bnd_tfree-2 ] for an illustration ) .",
    "we can use lemma  [ lemma : lrdeg2 ] to construct an @xmath217-quasi - identifying code @xmath85 of @xmath0 such that the three properties described in the statement of lemma  [ lemma : lrdeg2 ] are fulfilled .",
    "let @xmath85 be such a code , in particular we have @xmath218 .",
    "let us now describe the construction of two distinct @xmath84-quasi - identifying codes @xmath219 and @xmath220 .",
    "* * construction of code @xmath219 . * + we construct @xmath219 such that @xmath221 , as follows . 1 .   put @xmath85 into @xmath219 .",
    "2 .   put @xmath222 into @xmath219 .",
    "3 .   for each pair @xmath223 of adjacent vertices of @xmath224 , let @xmath225 be one of them",
    "having at least two neighbours in @xmath82 ( by definition of @xmath224 either @xmath203 or @xmath226 has this property ) .",
    "put @xmath225 into @xmath219.[constr - ca-3 ] 4 .",
    "for each pair @xmath223 of adjacent vertices of @xmath224 , let @xmath225 be the one which was put into @xmath219 in the previous step .",
    "check if @xmath225 has less than two neighbours within @xmath227 ( this may happen if some of its neighbours are in @xmath228 , and they do not belong to @xmath85 ) .",
    "if this is the case , pick an additional neighbour of @xmath225  which exists since @xmath203 has at least two neighbours in @xmath82  and put it into @xmath219 .",
    "note that this is done at most @xmath229 times .",
    "moreover , at most @xmath230 new vertices from @xmath228 are put into @xmath219 in such a way since by property number  [ lemma : lrdeg2 - 3 ] of lemma  [ lemma : lrdeg2 ] , there are at most @xmath230 vertices of @xmath228 not in @xmath85.[constr - ca-4 ] 5",
    ".   finally , consider each @xmath219-isolated vertex @xmath198 of @xmath82 , take it out of @xmath219 and put an arbitrary neighbour of @xmath198 into @xmath219 ( this operation does not affect the size of @xmath219 ) .",
    "* * construction of code @xmath220 . * + we construct @xmath220 such that @xmath231 , as follows . 1 .   put @xmath85 into @xmath220 .",
    "2 .   put @xmath224 into @xmath220[constr - cb-2 ] .",
    "3 .   for each pair @xmath223 of adjacent vertices of @xmath224 , one arbitrary neighbour in @xmath82 of either @xmath203 or @xmath226",
    "is put into @xmath220.[constr - cb-3 ] 4 .   finally , in the same way as for the construction of @xmath219 , we get rid of each @xmath220-isolated vertex @xmath198 of @xmath82 by taking @xmath198 out of @xmath220 and putting an arbitrary neighbour of @xmath198 into @xmath220 instead .",
    "let us now prove that @xmath219 and @xmath220 are @xmath84-quasi - identifying codes without @xmath219-isolated or @xmath220-isolated vertices",
    ". first note that in both constructions , the final step consists in replacing some @xmath219-isolated vertices from @xmath219 ( resp .",
    "@xmath220 ) . in order to simplify the proof ,",
    "let @xmath232 ( resp .",
    "@xmath233 ) be the code as it is before this last step .",
    "we first prove that @xmath232 ( resp .",
    "@xmath233 ) have all desired properties except that there remain @xmath232-isolated ( resp .",
    "@xmath233-isolated ) vertices in @xmath82 .",
    "we then prove that performing the last step transforms it into an @xmath84-quasi - identifying code with all required properties .",
    "it can first be noticed that both @xmath232 and @xmath233 are dominating sets , so point number  [ def : quasi-1 ] of definition  [ def : quasi ] holds .",
    "let us now show point number  [ def : quasi-2 ] of definition  [ def : quasi ] ( the separation condition ) . in both codes ,",
    "the vertices of all pairs @xmath27 of vertices of @xmath234 are separated from each other , since @xmath85 is a subset of both @xmath232 and @xmath233 .",
    "now , suppose that @xmath235 and @xmath236 . by definition of @xmath214 ,",
    "no vertex of @xmath214 is adjacent to any vertex of @xmath237 .",
    "therefore , by condition number  [ def : quasi-3 ] of definition  [ def : quasi ] , either @xmath30 or its neighbour in @xmath214 belong to @xmath85 , hence @xmath30 and @xmath17 are separated .",
    "thus , it remains to check if @xmath30 and @xmath17 are separated when @xmath238 and @xmath236 , and when both @xmath30 and @xmath17 belong to @xmath237 .",
    "we deal with @xmath232 and @xmath233 separately .",
    "[ [ code - c_a ] ] code @xmath232 + + + + + + + + + + + + + + + + + + + + + + + +    * suppose @xmath238 and @xmath236 .",
    "note that @xmath30 is dominated by some vertex @xmath34 within @xmath234 since @xmath239 .",
    "if @xmath240 , @xmath30 and @xmath17 are separated by @xmath34 since no vertex of @xmath222 is adjacent to any vertex of @xmath241 .",
    "if @xmath242 and @xmath243 , then @xmath30 and @xmath17 are separated by the neighbour of @xmath17 in @xmath224 , which belongs to @xmath232 .",
    "similarly , if @xmath30 has a neighbour in @xmath214 belonging to @xmath85 , we are done .",
    "otherwise , it means that @xmath244 and @xmath245 ( otherwise @xmath30 would not be dominated by @xmath85 ) .",
    "hence @xmath17 has another neighbour in @xmath82 , say @xmath246 , belonging to @xmath232 , and @xmath246 separates @xmath30 from @xmath17 . indeed , at step  [ constr - ca-4 ] of the construction of @xmath219 , either @xmath17 already had at least two neighbours in @xmath247 , or an additional one has been added .",
    "* now , suppose both @xmath30 and @xmath17 belong to @xmath248 .",
    "+ if both @xmath30 and @xmath249 , they are separated since the whole set @xmath222 , which is independent , belongs to @xmath232 .",
    "+ if both @xmath30 and @xmath17 belong to @xmath224 and they are not adjacent , they are separated since either themselves or their respective neighbours in @xmath224 belong to @xmath232 by step  [ constr - ca-3 ] of its construction .",
    "otherwise , for the same reason one of them ( say @xmath30 ) belongs to the code .",
    "it is ensured in step  [ constr - ca-4 ] that at least one neighbour of @xmath30 in @xmath82 belongs to @xmath232 , therefore @xmath30 and @xmath17 are separated by this neighbour .",
    "+ if @xmath250 and @xmath242 and they are not adjacent , they are separated by @xmath30 since the whole set @xmath222 belongs to @xmath232 . otherwise , if @xmath243 , they are separated by the neighbour of @xmath17 in @xmath224 . otherwise , again by step  [ constr - ca-4 ] of the construction @xmath17 has a second neighbour in @xmath247 , separating them .",
    "[ [ code - c_b ] ] code @xmath233 + + + + + + + + + + + + + + + + + + + + + + + +    * if @xmath238 and @xmath236 , @xmath30 and @xmath17 are separated by a neighbour of @xmath17 belonging to @xmath224 since the whole set @xmath224 is in @xmath233 . * now , suppose @xmath251 .",
    "+ if both @xmath27 belong to @xmath222 , and they have the same set of neighbours within @xmath81 , we are done since they do not need to be separated ( point number  [ def : quasi-2 ] of definition  [ def : quasi ] ) . otherwise , they are separated since all their neighbours within @xmath131 belong to @xmath224 , and @xmath252 .",
    "+ if both @xmath27 belong to @xmath224 , @xmath30 and @xmath17 are separated by themselves if they are not adjacent . otherwise , they are separated by a neighbour of one of them in @xmath253 , added at step  [ constr - cb-3 ] of the construction .",
    "+ finally , if @xmath254 and @xmath240 , then @xmath30 and @xmath17 are either separated by @xmath30 if @xmath30 and @xmath17 are not adjacent , or by the neighbour of @xmath30 in @xmath224 otherwise .",
    "let us now check point number  [ def : quasi-3 ] of definition  [ def : quasi ] , i.e. that for each pair of adjacent vertices in @xmath81 , at least one of them belongs to the code .",
    "this is true for vertices of @xmath214 since @xmath85 is an @xmath217-quasi - identifying code and therefore fulfills this condition .",
    "this is also ensured for vertices of @xmath224 at step  [ constr - ca-3 ] of the construction of @xmath219 and at step  [ constr - cb-2 ] of the construction of @xmath220 .",
    "hence , we have shown that both @xmath232 and @xmath233 are @xmath84-quasi - identifying codes",
    ".    moreover , there are no @xmath232-isolated ( resp .",
    "@xmath233-isolated ) vertices in @xmath81 : there are no such vertices in @xmath214 by lemma  [ lemma : lrdeg2 ] , and no such vertices in @xmath224 for @xmath232 by step  [ constr - ca-4 ] of its construction , and for @xmath233 as well since @xmath252 .",
    "as announced previously , we now have to deal with the last step of the constructions of both @xmath219 and @xmath220 .",
    "it is easily observed that this step does not affect the domination property of both codes .",
    "indeed , the former @xmath219-,@xmath220-isolated vertices themselves are now dominated by some neighbour .",
    "moreover each of their neighbours belongs to @xmath81 , and since @xmath219 and @xmath220 are @xmath84-quasi - identifying its own neighbour in @xmath81 belongs to the code .",
    "let us prove that the separation condition is still satisfied by @xmath219 and @xmath220 .",
    "let @xmath255 ( @xmath256 ) be the considered code and let @xmath196 be a @xmath255-isolated vertex which gets replaced in @xmath255 by one of its neighbours in @xmath81 , say @xmath257 .",
    "the only vertices which might be affected by the modification , are vertices which were previously dominated by @xmath198 , i.e. vertices of @xmath258 : assume , by contradiction , that @xmath259 is no longer separated from some vertex @xmath17 .    if @xmath260 , in @xmath255 , we have @xmath261 . since @xmath262 and the neighbour of @xmath257 in @xmath81 belongs to @xmath255 , @xmath263 .",
    "moreover , observe that @xmath17 was dominated by a vertex of @xmath264 , say @xmath265 , and @xmath266 since @xmath198 is @xmath264-isolated .",
    "hence , it means that @xmath17 was also @xmath264-isolated .",
    "but then , in the last step of the construction of @xmath255 , one of @xmath198 and @xmath17 , say @xmath198 , has been considered first and replaced by @xmath257 , leaving them separated by @xmath265 , a contradiction .",
    "now , if @xmath30 is a neighbour of @xmath198 , @xmath267 and the neighbour of @xmath30 in @xmath81 , call him @xmath246 , belongs to @xmath255 by construction . since @xmath264 is an @xmath84-quasi - identifying code",
    ", @xmath246 has a neighbour belonging to @xmath82 and to the code .",
    "hence @xmath30 and @xmath246 are separated , @xmath268 and @xmath17 must be a neighbour of @xmath246 not belonging to the code .",
    "hence @xmath254 since @xmath246 has degree at least  3 . moreover , @xmath240 ; otherwise , since @xmath269 , @xmath17 would be dominated within @xmath85 and @xmath27 would be separated  a contradiction . now , if @xmath270 , @xmath271 , a contradiction . if @xmath272 , @xmath273 , a contradiction too .",
    "this completes the proof of the separation property .",
    "now , note that point number  [ def : quasi-3 ] of definition  [ def : quasi ] remains verified as no vertex of @xmath81 is removed from neither @xmath219 or @xmath220 in the last step of their construction . finally , observe that thanks to the last step of the constructions , there are no @xmath255-isolated ( @xmath256 ) vertices in @xmath82 anymore .",
    "moreover , this step has not created any @xmath255-isolated vertices in @xmath81 .",
    "indeed , the vertices which are added , did not belong to @xmath264 , and hence their neighbour in @xmath81 did .",
    "this completes the proof of the validity of both constructions @xmath219 and @xmath220 .",
    "let us now determine a lower bound on the cardinality of @xmath274 , for @xmath256 .",
    "taking into account that @xmath275 , we obtain : @xmath276    thus , both following equations hold : @xmath277    similarly ,    @xmath278    hence intuitively , the previous equations show that our two codes fit to two different situations : @xmath219 is useful when either @xmath279 or @xmath280 is large enough compared to @xmath281 , whereas @xmath220 is useful when @xmath282 is small enough compared to @xmath281 .",
    "let @xmath283 be the code having the minimum cardinality . then ,",
    "using inequalities  , and   and denoting @xmath284 we get :    @xmath285    note that @xmath286 .",
    "hence , we get :    @xmath287    note that equality in the previous inequality is achieved when @xmath288 .",
    "putting @xmath289 , we obtain the claim of the lemma .",
    "we are now ready to prove the main theorem of this paper .",
    "the proof has been sketched in algorithm  [ alg : global_alg ] , we now provide all the details .",
    "[ th : upperbound_notriangle - new ] let @xmath0 be a connected identifiable triangle - free graph on @xmath5 vertices with maximum degree  @xmath6",
    ". then @xmath290 .",
    "let @xmath98 be the set of all nontrivial equivalence classes over the false twin relation @xmath95 over @xmath3 .",
    "let @xmath291 and @xmath292 .",
    "we distinguish two cases .",
    "* case 1 : * @xmath293 .",
    "+ in this case , let @xmath31 be an independent set of @xmath153 $ ] given by lemma  [ lemm : goodis ] : we have @xmath294 . consider all pairs @xmath27 of vertices of @xmath0 such that @xmath30 and @xmath17 are adjacent , both @xmath30 and @xmath17 have degree at least  2 , and all the vertices of @xmath90 belong to @xmath31 ( see figure  [ fig : upperbnd_bnd_tfree-1 ] for an illustration ) . since all neighbours of @xmath30 and @xmath17 ( except @xmath30 and @xmath17 themselves ) are in @xmath31 , these neighbours form an independent set .",
    "let @xmath33 be the ( possibly empty ) set of all edges @xmath173 such that @xmath30 and @xmath17 form such a pair . by the previous remark",
    ", @xmath33 is a strong induced matching of @xmath0 .",
    "let us denote @xmath127 and @xmath128 .",
    "note that we have @xmath295 .",
    "let us now partition @xmath3 into two subsets of vertices : @xmath131 on the one hand , and @xmath296 on the other hand .",
    "such a partition is illustrated in figure  [ fig : partitionlr ] .",
    "note that @xmath184 $ ] is identifiable by observation  [ obs : lrm - twinfree ] .",
    "let us show that @xmath297 $ ] is also identifiable . by contradiction ,",
    "suppose it is not the case and let @xmath27 be a pair of vertices such that @xmath298}(u)=b_{g[v(g)\\setminus(l\\cup      r)]}(v)$ ] .",
    "vertices @xmath30 and @xmath17 are therefore adjacent , and since @xmath0 is triangle - free , neither @xmath30 nor @xmath17 has other neighbours within @xmath297 $ ] .",
    "since @xmath0 is identifiable , at least one of them has a neighbour in @xmath82 .",
    "suppose they both have a neighbour in @xmath82 . then by construction of @xmath31 , @xmath30 and @xmath17 both",
    "do not belong to @xmath31 .",
    "but then @xmath30 and @xmath17 should belong to @xmath81 , a contradiction .",
    "thus , one of them , say @xmath30 , has degree  1 in @xmath0 , and all neighbours of @xmath17 belong to @xmath299 . but by the first property of @xmath31 in lemma  [ lemm : goodis ] , at least one vertex at distance  2 of @xmath30 does not belong to @xmath31 , a contradiction .",
    "we will now build two subsets @xmath300 and @xmath301 such that @xmath302 is an identifying code of @xmath0 .    *",
    "* building @xmath300 .",
    "* + if @xmath303 we take @xmath304 .",
    "otherwise , we build @xmath85 using lemma  [ lemma : lr ] : applying it to @xmath0 and @xmath33 , we know that there exists an @xmath84-quasi - identifying code @xmath85 of @xmath0 without @xmath85-isolated vertices . from lemma  [ lemma : lr ] we also know that @xmath305 , where @xmath306 . *",
    "* building @xmath301 .",
    "* + again if @xmath307 we take @xmath308 . otherwise , we take @xmath86 to be the complement of @xmath31 in @xmath296 : @xmath309 .",
    "let us show that @xmath86 is a @xmath310-identifying code of @xmath0 .",
    "+ first , recall that @xmath311 $ ] is identifiable .",
    "note that @xmath31 does not contain any vertex @xmath17 which is isolated in @xmath312 .",
    "indeed , @xmath0 does not contain any isolated vertex , hence if @xmath17 is isolated in @xmath312 , @xmath17 has a neighbour in @xmath82 . but",
    "@xmath299 , a contradiction since @xmath31 is an independent set .",
    "we also claim that for each vertex @xmath17 of degree  1 in @xmath312 , there is a vertex at distance  2 of @xmath17 in @xmath312 not belonging to @xmath31 .",
    "let @xmath313 be the unique neighbour of @xmath17 in @xmath312 .",
    "if @xmath17 is also of degree  1 in @xmath0 , since @xmath312 has no pair of twins , by the first property of @xmath31 in lemma  [ lemm : goodis ] , @xmath313 must have a neighbour @xmath34 not in @xmath31 .",
    "vertex @xmath34 can not belong to @xmath82 , hence it belongs to @xmath312 and we are done .",
    "now , if @xmath17 is not of degree  1 in @xmath0 , all its neighbours in @xmath0 other than @xmath313 belong to @xmath82 .",
    "but since @xmath312 is identifiable , @xmath313 has at least one neighbour other than @xmath17 , belonging to @xmath312 but not to @xmath31 , since otherwise @xmath17 and @xmath313 would belong to set @xmath81 . finally , by construction of @xmath312",
    ", there are no isolated edges in @xmath314 $ ] .",
    "+ under these conditions we can apply proposition  [ prop : iscode ] on @xmath312 and on set @xmath31 restricted to @xmath315 , which shows that @xmath86 is a @xmath310-identifying code of @xmath0 .",
    "we now have an @xmath84-quasi - identifying code @xmath85 of @xmath0 without @xmath85-isolated vertices , and showed that @xmath86 is a @xmath316-identifying code of @xmath0 .",
    "moreover , @xmath31 does not contain any pair of false twins .",
    "furthermore , since @xmath86 is the complement of @xmath31 in @xmath297 $ ] , all neighbours of @xmath82 in @xmath297 $ ] belong to @xmath86 .",
    "therefore , we can apply proposition  [ prop : well - id ] and @xmath302 is an identifying code of @xmath0 .",
    "let us now upper - bound the size of @xmath2 . to this end ,",
    "we lower - bound the size of its complement . from the construction of @xmath85 and @xmath86 , we have @xmath317 .",
    "since @xmath299 and @xmath305 , we have @xmath318 .",
    "hence , we get : @xmath319    hence , @xmath320 .",
    "* case 2 : * @xmath321 .",
    "+ then , @xmath322 .",
    "since each set of @xmath323 has size at most @xmath52 , we have : @xmath324 since @xmath6 , @xmath0 is not isomorphic to @xmath97 and we can apply proposition  [ lemm : falsetwincode ] : @xmath0 has an identifying code of size at most @xmath325 .",
    "it can be noted that the value of the bound of theorem  [ th : upperbound_notriangle - new ] heavily relies on corollary  [ cor : shearer ] . for large values of  @xmath52 , this bound is nearly optimal  @xcite . however , directly using the slightly stronger original bound of j.  shearer ( theorem  [ thm : shearer ] ) or a stronger bound holding for some particular class of graphs , one could obtain a strengthened result as follows .",
    "let @xmath0 be a nontrivial connected identifiable triangle - free graph on @xmath5 vertices having maximum degree  @xmath52 .",
    "suppose each subgraph @xmath326 of @xmath0 has an independent set of size at least @xmath327 .",
    "let @xmath328 .",
    "then , the value @xmath329 in lemma  [ lemm : goodis ] can be replaced by @xmath330 , and the condition for applying case  1 in the proof of theorem  [ th : upperbound_notriangle - new ] can be replaced by @xmath331 .",
    "we then get the following theorem :    [ th : upperbound_notriangle - general ] let @xmath0 be a nontrivial connected identifiable triangle - free graph on @xmath5 vertices with maximum degree  @xmath52 such that each subgraph @xmath326 of @xmath0 has an independent set of size at least @xmath327 .",
    ". then @xmath332 .",
    "it is an easy observation that any @xmath74-colourable graph has an independent set of size at least @xmath333 , and any subgraph of a @xmath74-colourable graph is @xmath74-colourable .",
    "hence we can apply theorem  [ th : upperbound_notriangle - general ] to @xmath74-colourable triangle - free graphs .",
    "examples of large classes of graphs with bounded chromatic number are for example : bipartite graphs , graphs of bounded degeneracy , graphs having no @xmath334-minor  @xcite , or graphs of bounded genus  @xcite  in particular , planar triangle - free graphs are 3-colourable following grtzsch s theorem  @xcite .",
    "we get the following corollary :    [ th : bip - planar ] let @xmath0 be a nontrivial connected identifiable triangle - free graph on @xmath5 vertices with maximum degree  @xmath52 and chromatic number @xmath335",
    ". then @xmath336 . in particular :    * if @xmath0 is bipartite or planar , @xmath337 .",
    "* if @xmath0 is @xmath74-degenerate , @xmath338.-degenerate graph is @xmath339-colourable . ] * if @xmath0 has no @xmath334-minor , @xmath340 , where @xmath341 depends only on @xmath342 .",
    "@xcite , which would be optimal . however it is known that @xmath343  @xcite . ] * if @xmath0 has genus @xmath344 , @xmath345 , where @xmath346 depends only on @xmath347 .",
    "@xcite . ]",
    "let @xmath0 be a triangle - free graph without any pair of false twins .",
    "by considering case  1 of the proof of theorem  [ th : upperbound_notriangle - new ] , we have @xmath348 , which leads to the following bound :    [ thm : nofalsetwins ] let @xmath0 be a nontrivial connected identifiable graph @xmath0 on @xmath5 vertices having maximum degree  @xmath52 and no pair of false twins",
    ". then @xmath349 .",
    "hence any class of connected triangle - free graphs of maximum degree  @xmath52 having its minimum identifying code of size at least @xmath350 should contain false twins .",
    "note that this is the case of the complete @xmath8-ary tree already mentioned in the introduction ( all its leaves are false twins ) , and of the classes of graphs described in  @xcite ( which are built using copies of small complete bipartite graphs @xmath55 joined to each other , and therefore contain many false twins ) .      in this paper , we have considered triangle - free graphs , that is , graphs of girth at least  4 .",
    "it is natural to ask whether much stronger bounds on parameter @xmath47 hold for graphs of larger girth",
    ". however note that the answer to this question is negative because of the complete @xmath8-ary tree on @xmath5 vertices @xmath57 , which was already mentioned earlier .",
    "this graph has infinite girth and @xmath56  @xcite .",
    "however , with an additional condition on the minimum degree of the graph , the question was answered in the positive in  @xcite and recently in  @xcite , where the following bounds are given .",
    "[ thm : mindeg2girth5 ] let @xmath0 be a connected identifiable graph on @xmath5 vertices having minimum degree at least  2 and girth at least  5",
    ". then @xmath351 .",
    "[ thm : girth5 ] let @xmath0 be an identifiable graph on @xmath5 vertices having minimum degree  @xmath352 and girth at least  5 .",
    "then @xmath353 , where @xmath354 is a function of @xmath355 tending to  @xmath356 when @xmath355 tends to infinity .",
    "note that these two bounds are much stronger than any bound of the form @xmath350 , such as the one of conjecture  [ conj ] .",
    "they are best possible in the sense that relaxing either the condition on girth  5 or minimum degree  2 , there are graphs which have much larger identifying codes . if one drops the minimum degree  2 condition , such a graph is the complete @xmath8-ary tree .",
    "if one drops the girth  5 condition , there are @xmath52-regular graphs ( @xmath357 ) having girth  4 and their minimum identifying code of size  @xmath350  @xcite .",
    "we would like to refer the interested reader to  @xcite , where this question is studied in more detail .",
    "we summarize the bounds discussed in this paper in table  [ table ] .",
    "we note that our proofs provide a polynomial - time algorithm to compute the identifying codes of theorem  [ th : upperbound_notriangle - new ] . indeed , their constructions are based on the codes computed in lemmas  [ lemma : lrdeg2 ] , and  [ lemma : lr ] , and the independent set of lemma  [ lemm : goodis ] for the first code , and on the construction of proposition  [ lemm : falsetwincode ] for the second code .",
    "all these constructions are described in the corresponding proofs and can be done in polynomial time .",
    "let us give an explicit complexity bound .",
    "we observe that the running time of the constructions is at most of the order @xmath358 . indeed , the most difficult step is to compute and compare the neighbourhoods of the vertices in order to build the false twin equivalence classes in the proof of theorem  [ th : upperbound_notriangle - new ] . to do",
    "this one can represent each neighbourhood as a binary word of length @xmath5 .",
    "bitwise comparing two of them requires @xmath359 operations , hence a classical sorting algorithm can sort them all in time @xmath358 .",
    "comparing them takes @xmath360 time .",
    "moreover , the construction of the independent set of lemma  [ lemm : goodis ] is based on theorem  [ thm : shearer ] given in  @xcite . there",
    ", the author gives a randomized linear - time algorithm for computing the independent set .",
    "note that the random ( constant - time ) step of this algorithm can be turned into a deterministic linear - time computation , which leads to an @xmath360 algorithm .",
    "all other steps and constructions can also be done in time @xmath360 .",
    "hence , we have the following theorem .    let @xmath0 be a connected identifiable triangle - free graph on @xmath5 vertices with maximum degree  @xmath6 .",
    "then , an identifying code of @xmath0 having cardinality at most @xmath361 can be computed in time @xmath358 .",
    "k.  m.  j. de bontridder , b.  v. halldrsson , m.  m. halldrsson , c.  a.  j. hurkens , j.  k. lenstra , r. ravi and l. stougie .",
    "approximation algorithms for the test cover problem .",
    "_ mathematical programming series b _ , 98:477491 , 2003 .",
    "f.  foucaud , r.  naserasr and a.  parreau .",
    "extremal problems on identifying codes in digraphs and bondy s theorem on induced subsets . accepted in _ graphs and combinatorics _ , 2012 .",
    "available online at http://arxiv.org/abs/1010.2985 .",
    "s.  gravier , m.  kove , m.  mollard , j.  moncel and a.  parreau .",
    "new results on variants of covering codes in sierpiski graphs . submitted for publication , 2011 .",
    "available online at http://arxiv.org/abs/1201.1202 .",
    "h.  grtzsch .",
    "zur theorie der diskreten gebilde .",
    "ein dreifarbensatz fr dreikreisfreie netze auf der kugel ( german ) .",
    "wissenschaftliche zeitschrift der martin - luther - universitt halle - wittenberg .",
    "mathematisch - naturwissenschaftliche reihe 8:109120 , 1958/1959 .",
    "m.  laifenfeld , a.  trachtenberg , r.  cohen and d.  starobinski .",
    "joint monitoring and routing in wireless sensor networks using robust identifying codes .",
    "_ proceedings of ieee broadnets 2007 _ , pages 197206 , september 2007 ."
  ],
  "abstract_text": [
    "<S> in an undirected graph @xmath0 , a subset @xmath1 such that @xmath2 is a dominating set of @xmath0 , and each vertex in @xmath3 is dominated by a distinct subset of vertices from @xmath2 , is called an identifying code of @xmath0 . </S>",
    "<S> the concept of identifying codes was introduced by karpovsky , chakrabarty and levitin in 1998 . for </S>",
    "<S> a given identifiable graph @xmath0 , let @xmath4 be the minimum cardinality of an identifying code in @xmath0 . in this paper </S>",
    "<S> , we show that for any connected identifiable triangle - free graph @xmath0 on @xmath5 vertices having maximum degree @xmath6 , @xmath7 . this bound is asymptotically tight up to constants due to various classes of graphs including @xmath8-ary trees , which are known to have their minimum identifying code of size @xmath9 . </S>",
    "<S> we also provide improved bounds for restricted subfamilies of triangle - free graphs , and conjecture that there exists some constant @xmath10 such that the bound @xmath11 holds for any nontrivial connected identifiable graph @xmath0 .    identifying code , dominating set , triangle - free graph , maximum degree </S>"
  ]
}
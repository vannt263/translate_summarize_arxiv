{
  "article_text": [
    "probabilistic models of application domains are central to pattern recognition , machine learning , and scientific modeling in various fields .",
    "consequently , unifying frameworks are likely to be fruitful for one or more of these fields .",
    "there are also more technical motivations for pursuing the unification of diverse model types . in multiscale modeling",
    ", models of the same system at different scales can have fundamentally different characteristics ( e.g. deterministic vs. stochastic ) and yet must be placed in a single modeling framework .  in machine learning ,",
    "automated search over a wide variety of model types may be of great advantage .",
    "in this paper we propose stochastic parameterized grammars ( spg s ) and their generalization to dynamical grammars ( dg s ) as such a unifying framework .  to this end",
    "we define mathematically both the syntax and the semantics of this formal modeling language .",
    "the essential idea is that there is a `` pool '' of fully specified parameter - bearing terms such as \\{@xmath0 , @xmath1 , @xmath2 } where @xmath3 and @xmath4 might be position vectors .",
    "a grammar can include rules such as @xmath5    which specify the probability per unit time , @xmath6 , that the macrophage ingests and destroys the bacterium as a function of the distance @xmath7 between their centers .",
    "sets of such rules are a natural way to specify many processes .",
    "we will map such grammars to stochastic processes in both continuous time ( section [ xref - section-92874322 ] ) and discrete time ( section [ xref - section-9287443 ] ) , and relate the two definitions ( section [ xref - section-92874423 ] ) .",
    "a key feature of the semantics maps is that they are naturally defined in terms of an algebraic _ ring _ of time evolution operators : they map operator addition and multiplication into independent or strongly dependent compositions of stochastic processes , respectively .",
    "the stochastic process semantics defined here is a mathematical , algebraic object .",
    "it is independent of any particular simulation algorithm , though we will discuss ( section [ xref - section-92871922 ] ) a powerful technique for generating simulation algorithms , and we will demonstrate ( section [ xref - section-92872143 ] ) the interpretation of certain subclasses of spg s as a logic programming language .",
    "other applications that will be demonstrated are to data clustering ( @xcite ) , chemical reaction kinetics ( section [ xref - section-92872456 ] ) , graph grammars and string grammars ( section [ xref - section-92872523 ] ) , systems of ordinary differential equations and systems of stochastic differential equations ( section [ xref - section-926213036 ] ) .",
    "other frameworks that describe model classes that may overlap with those described here are numerous and include : branching or birth - and - death processes , marked point processes , mgs modeling language using topological cell complexes , interacting particle systems , the blog probabilistic object model , adaptive mesh refinement with rewrite rules , stochastic pi - calculus , and colored petri nets .",
    "the mapping @xmath8 to an operator algebra of stochastic processes , however , appears to be novel .",
    "the present paper is an abbreviated summary of @xcite .",
    "consider the rewrite rule @xmath9    where the @xmath10 and @xmath11 denote symbols @xmath12 chosen from an arbitrary alphabet set @xmath13 of `` types '' .",
    "in addition these type symbols carry expressions for parameters @xmath14 or @xmath15 chosen from a base language @xmath16 defined below .",
    "the @xmath17 s can appear in any order , as can the @xmath18 s .",
    "different @xmath17 s and @xmath18 s appearing in the rule can denote the same alphabet symbol @xmath12 , with equal or unequal parameter values @xmath14 or @xmath15 .",
    "@xmath19 is  a nonnegative function , assumed to be denoted by an expression in a base language @xmath20 defined below , and also assumed to be an element of a vector space @xmath21 of real - valued functions .",
    "informally , @xmath19 is interpreted as a nonnegative probability rate : the independent probability per unit time that any possible instantiation of the rule will `` fire '' if its left hand side precondition remains continuously satisfied for a small time .",
    "this interpretation will be formalized in the semantics .",
    "we now define @xmath22 .",
    "each term @xmath23 or @xmath24 is of type @xmath12 and its parameters @xmath14 take values in an associated ( ordered ) cartesian product set @xmath25 of @xmath26 factor spaces chosen  ( possibly with repetition ) from a set of base spaces @xmath27 .",
    "each @xmath28 is a measure space with measure @xmath29 .",
    "particular @xmath28 may for example be isomorphic to the integers @xmath30 with counting measure , or the real  numbers @xmath31 with lebesgue measure .",
    "the ordered choice of spaces @xmath28 in @xmath32 constitutes the type signature @xmath33 of type @xmath12 .",
    "( as an aside , polymorphic argument type signatures are supported by defining a derived type signature @xmath34 .",
    "for example we can regard @xmath30 as a subset of @xmath31 . )",
    "correspondingly , parameter expressions @xmath14 are tuples of length @xmath26 , such that each component @xmath35 is either a constant in the space @xmath36 , or a variable @xmath37 that is restricted to taking values in that same space @xmath38 .",
    "the variables that appear in a rule this way may be repeated any number of times in parameter expressions @xmath14 or @xmath15 within a rule , providing only that all components @xmath35 take values in the same space @xmath36 .  a _ substitution _ @xmath39 of values for variables @xmath40 assigns the same value to all appearances of each variable @xmath40 within a rule .",
    "hence each parameter expression @xmath14 takes values in a fixed tuple space @xmath25 under any substitution @xmath41 .",
    "this defines the language @xmath22 .",
    "we now constrain the language @xmath20 .",
    "each nonnegative function @xmath42 is a probability rate : the independent probability per unit time that any particular instantiation of the rule will fire , assuming its precondition remains continuously satisfied for a small interval of time .",
    "it is a function only of the parameter values denoted by @xmath43 and @xmath44 , and not of time .",
    "each @xmath19 is denoted by an expression in a base language @xmath20 that is closed under addition and multiplication and contains a countable field of constants , dense in @xmath31 , such as the rationals or the algebraic numbers .",
    "@xmath6 is assumed to be a nonnegative - valued function in a banach space @xmath45 of real - valued functions defined on the cartesian product space @xmath46 of all the value spaces @xmath47 of the terms appearing in the rule , taken in a standardized order such as nondeccreasing order of type index @xmath48 on the left hand side followed by nondecreasing order of  type index @xmath48 on the right hand side of the rule .",
    "provided @xmath20 is expressive enough , it is possible to factor @xmath49 within @xmath20 as a product @xmath50=@xmath51@xmath52 of a conditional distribution on output parameters given input parameters @xmath53 and a total probability rate @xmath51 as a function of input parameters only .    with these definitions we can use a more compact notation by eliminating the @xmath17 s and @xmath18 s , which denote types , in favor of the types themselves .",
    "( the expression @xmath54 is called a parameterized _ term , _ which can match to a parameter - bearing _ object _ or _ term instance _ in a `` pool '' of such objects . )",
    "the caveat is that a particular type @xmath55 may appear any finite number of times , and indeed a particular parameterized term @xmath54 may appear any finite number of times .",
    "so we use multisets @xmath56 ( in which the same object @xmath57 may appear as the value of several different indices @xmath58 ) for both the lhs and rhs ( left hand side and right hand side ) of a rule : @xmath59    here the same object @xmath60 may appear as the value of several different indices @xmath58 under the mappings @xmath61 and/or @xmath62 .",
    "finally we introduce the shorthand notation @xmath63 and @xmath64 , and revert to the standard notation @xmath65 for multisets ; then we may write @xmath66 @xmath67 .",
    "in addition to the * with * clause of a rule following the lhs@xmath68rhs header , several other alternative clauses can be used and have translations into * with * clauses .",
    "for example , `` * subject to * @xmath69 '' is translated into `` * with * @xmath70 ''  where @xmath71 is an appropriate dirac or kronecker delta function that enforces a contraint @xmath72 .",
    "other examples are given in @xcite .",
    "the translation of `` * solving * @xmath73 '' or `` * solve * @xmath73 '' will be defined in terms of * with * clauses in section [ xref - section-926213036 ] .  as a matter of definition ,",
    "stochastic parameterized grammars do not contain * solving*/*solve * clauses , but dynamical grammars may include them .",
    "there exists a preliminary implementation of an interpreter for most of this syntax in the form of a _ mathematica _ notebook , which draws samples according to the semantics of section [ xref - section-92795243 ] below .    a stochastic parameterized grammar ( spg ) @xmath74 consists of ( minimally ) a collection of such rules with common type set @xmath75 ,  base space set @xmath76 , type signature specification @xmath77 , and probability rate language @xmath20 .",
    "after defining the semantics of such grammars , it will be possible to define semantically equivalent classes of spg s that are untyped or that have richer argument languages @xmath22 .",
    "we provide a semantics function @xmath78 in terms of an operator algebra that results in a _ stochastic process _ , if it exists , or a special `` undefined '' element if the stochastic process does nt exist .",
    "the stochastic process is defined by a very high - dimensional differential equation ( the master equation ) for the evolution of a probability distribution in continuous time .  on the other hand",
    "we will also provide a semantics function @xmath79 that results in a discrete - time stochastic process for the same grammar , in the form of an operator that evolves the probability distribution forward by one discrete rule - firing event .  in each case",
    "the stochastic process specifies the time evolution of a probability distribution over the contents of a `` pool '' of grounded parameterized terms @xmath80 that can each be present in the pool with any allowed multiplicity from zero to @xmath81 .",
    "we will relate these two alternative  `` meanings '' of an spg ,  @xmath82 in continuous time and @xmath83 in discrete time .",
    "a state of the `` pool of term instances '' is defined as an integer - valued function @xmath84 : the `` copy number '' @xmath85 of parameterized terms @xmath80 that are grounded ( have no variable symbols @xmath40 ) , for any combination @xmath86 of type index @xmath87 and parameter value  @xmath88 .",
    "we denote this state by the `` indexed set '' notation for such functions , @xmath89 . each type @xmath12",
    "may be assigned a maximum value @xmath90 for all @xmath91 , commonly @xmath92 ( no constraint on copy numbers ) or 1 ( so @xmath93 which means each term - value combination is simply present or absent ) .",
    "the state of the full system at time @xmath94 is defined as a probability distribution on all possible values of this ( already large ) pool state : @xmath95 .",
    "the probability distribution that puts all probability density on a particular pool state @xmath96 is denoted @xmath97 .",
    "for continuous - time we define the semantics @xmath98 of our grammar as the solution , if it exists , of the master equation @xmath99 , which can be written out as : @xmath100    and which has the formal solution @xmath101 .    for discrete - time semantics",
    "@xmath83 there is an linear map @xmath102 which evolves unnormalized probabilities forward by one rule - firing time step .",
    "the probabilities must of course be normalized , so that after @xmath103 discrete time steps the probability is : @xmath104    which , taken over all @xmath105 and @xmath106 , defines @xmath83 .  in both cases",
    "the long - time evolution of the system may converge to a limiting distribution @xmath107 which is a key feature of the semantics , but we do not define the semantics @xmath108 as being only this limit even if it exists .  thus semantics - preserving transformations of grammars are  fixedpoint - preserving transformations of grammars but the converse may not be true .",
    "the master equation is completely determined by the _ generators _",
    "@xmath109 and @xmath102 which in turn are simply composed from elementary operators acting on the space of such probability distributions .",
    "they are elements of the operator polynomial ring @xmath110 $ ] defined over a set of basis operators @xmath111 in terms of operator addition , scalar multiplication , and noncommutative operator multiplication .",
    "these basis operators @xmath111 provide elementary manipulations of the copy numbers @xmath112 .",
    "the simplest basis operators @xmath111 are elementary creation operators @xmath113 and annihilation operators @xmath114 that increase or decrease each copy number @xmath112 in a particular way ( reviewed in @xcite ) : @xmath115 where @xmath116is the kronecker delta function .",
    "these two operator types then generate @xmath117 : @xmath118    we can write these operators @xmath119 as finite or infinite dimensional matrices depending on the maximum copy number @xmath90 for type @xmath12 .  if @xmath90=1 ( for a fermionic term ) , and we omit the type which are all assumed equal below , then @xmath120    likewise if @xmath90=@xmath121 ( for a bosonic term ) , @xmath122 . by truncating this matrix to finite size",
    "@xmath123 we may compute that for some polynomial @xmath124 of degree @xmath125 - 1 in @xmath126 with rational coefficients , @xmath127 = \\delta ( x - y ) [ i+n q ( n| n^{\\left ( \\max \\right ) } ) ] \\ ] ]    where @xmath71 is the dirac delta ( generalized ) function appropriate to the ( product ) measure @xmath128 on the relevant value space @xmath46 . eg . if @xmath129=1 then @xmath130 ; if @xmath129=@xmath121 then @xmath131 .      for a grammar rule number `` @xmath132 '' of the form of ( equation [ xref - equation-924145912 ] ) we define the operator that first ( instantaneously ) destroys all parameterized terms on the lhs and",
    "then ( immediately and instantaneously ) creates all parameterized terms on the rhs .",
    "this happens independently of time or other terms in the pool .",
    "assuming that the parameter expressions @xmath3 contain no variables @xmath40 , the effect of this event is : @xmath133 \\ \\ \\",
    "\\left[\\prod \\limits_{j\\in \\operatorname{lhs } ( r ) } a_{b ( j ) } ( y_{j } ) \\right ]   % \\label{xref - equation-922211956}\\ ] ]    if there are variables @xmath134 , we must sum or integrate over all their possible values in @xmath135 : @xmath136 \\ \\ \\",
    "\\left[\\prod \\limits_{j\\in \\operatorname{lhs } ( r ) } a_{b ( j ) } ( y_{j } ( \\left\\ { x_{c}\\right\\ } ) ) \\right ]   % \\label{xref - equation-922212022}\\end{gathered}\\ ] ]    thus , syntactic variable - binding has the semantics of multiple integration .",
    "a `` monotonic rule '' has all its lhs terms appear also on the rhs , so that nothing is destroyed .",
    "unfortunately @xmath137 does nt conserve probability because probability inflow to new states ( described by @xmath137 ) must be balanced by outflow from current state ( diagonal matrix elements ) .",
    "the following operator conserves probability : @xmath138 .    for the entire grammar",
    "the time evolution operator is simply a sum of the generators for each rule : @xmath139    this superposition implements the basic principle that every possible rule firing is an exponential process , all happening in parallel until a firing occurs .",
    "note that ( equation [ xref - equation-922211956 ] ) , ( equation [ xref - equation-922212022 ] ) and @xmath140 are encompassed by the polynomial ring @xmath110 $ ] where the basis operators include all creation and annihilation operators .  ring addition (",
    "as in equation [ xref - equation-922211931 ] or equation [ xref - equation-922212022 ] ) corresponds to independently firing processes ; ring operator  multiplication ( as in equation [ xref - equation-922211956 ] ) corresponds to obligatory event co - ocurrence of the constituent events that define a process , in immediate succession , and nonnegative scalar multiplication corresponds to speeding up or slowing down a process .",
    "commutation relations between operators describe the exact extent to which the order of event occurrence matters .",
    "the operator @xmath102 describes the flow of probability per unit time , over an infinitesimal time interval , into new states resulting from a single rule - firing of any type .",
    "if we condition the probability distribution on a single rule having fired , setting aside the probability weight for all other possibilities , the normalized distribution is @xmath141 .",
    "iterating , the state of the discrete - time grammar after @xmath103 rule firing steps is @xmath142 as given by ( equation [ xref - equation-102111134 ] ) , where @xmath140 as before .",
    "the normalization can be state - dependent and hence dependent on @xmath103 , so @xmath143 .",
    "this is a critical distinction between stochastic grammar and markov chain models , for which @xmath144 .",
    "an execution algorithm is directly expressed by ( equation [ xref - equation-102111134 ] ) .",
    "an indispensible tool for studying such stochastic processes in physics is the time - ordered product expansion @xcite .",
    "we use the following form : @xmath145 \\cdot p_{0}% \\label{xref - equation-92363221}\\end{gathered}\\ ] ]    where @xmath146 is a solvable or easily computable part of @xmath109 , so the exponentials @xmath147 can be computed or sampled more easily than @xmath148 .",
    "this expression can be used to generate feynman diagram expansions , in which @xmath84 denotes the number of interaction vertices in a graph representing a multi - object history .",
    "if we apply ( equation [ xref - equation-92363221 ] ) with @xmath149 and @xmath150 , we derive the well - known gillespie algorithm for simulating chemical reaction networks @xcite , which can now be applied to spg s .",
    "however many other decompositions of @xmath109 are possible , one of which is used in section [ xref - section-926213036 ] below .",
    "because the operators @xmath109 can be decomposed in many ways , there are many valid simulation algorithms for each stochastic process .",
    "the particular formulation of the time - ordered product expansion used in ( equation [ xref - equation-92363221 ] ) has the advantage of being recursively self - applicable .",
    "thus , ( equation [ xref - equation-92363221 ] ) entails a systematic approach to the creation of novel simulation algorithms .",
    "_  proposition .",
    "_ given the stochastic parameterized grammar ( spg ) rule syntax of equation [ xref - equation-924145912 ] ,    ( a ) there is a semantic function @xmath151 mapping from any continuous - time , context sensitive , stochastic parameterized grammar @xmath74 via a time evolution operator @xmath152 to a joint probability density function on the parameter values and birth / death times of grammar terms , conditioned on the total elapsed time , @xmath94 .",
    "( b ) there is a semantic function @xmath142 mapping any discrete - time , sequential - firing , context sensitive , stochastic parameterized grammar @xmath74 via a time evolution operator @xmath153 to a joint probability density function on the parameter values and birth / death times of grammar terms , conditioned on the total discrete time defined as number of rule firings , @xmath103 .",
    "( c ) the short - time limit of the density @xmath78 conditioned on @xmath154 and conditioned on @xmath103 is equal to @xmath83 .    proof : ( a ) : section [ xref - section-92874322 ] .",
    "( b ) : section [ xref - section-9287443 ] .",
    "( c ) equation [ xref - equation-92363221 ] ( details in @xcite , @xcite ) .      given a new kind of mathematical object ( here , spg s or",
    "dg s ) it is generally productive in mathematics to consider the transformations of such objects ( mappings from one object to another or to itself ) that preserve key properties",
    ". examples include transformational geometry ( groups acting on lines and points ) and functors acting on categories . in the case of spg s ,",
    "two possibilities for the preserved property are immediately salient .",
    "first , an spg syntactic transformation @xmath155 could preserve the semantics @xmath156 either fully or just in fixed point form : @xmath157 . preserving the full semantics",
    "would be required of a simulation algorithm .",
    "alternatively , an inference algorithm could preserve a joint probability distribution on unobserved and observed random variables , in the form of bayes rule , @xmath158 where @xmath159 are collections of parameterized terms that are inpuuts to , internal to , and outputs from the grammar @xmath74 respectively ..",
    "a number of other frameworks and formalisms can be expressed or reduced to spgs as just defined .",
    "for example , data clustering models are easily and flexibly described @xcite .",
    "we give a sampling here .      given the chemical reaction network syntax @xmath160    define an index mapping @xmath161 and likewise for @xmath162 as a function of @xmath163 .",
    "then ( equation [ xref - equation-926214051 ] ) can be translated to the following equivalent grammar syntax for the multisets of parameterless terms @xmath164    whose semantics is the time - evolution generator @xmath165 \\ \\ \\ \\left[\\prod",
    "\\limits_{j\\in \\operatorname{lhs } ( r ) } a_{b ( j ) } \\right ] \\ \\ .\\ ] ]    this generator is equivalent to the stochastic process model of mass - action kinetics for the chemical reaction network ( equation [ xref - equation-926214051 ] ) .      consider a logic program ( e.g. in pure prolog ) consisting of horn clauses of positive literals @xmath166    axioms have @xmath167 .",
    "we can _ translate _ each such clause into a monotonic spg rule @xmath168    where each different literal @xmath169 denotes an unparameterized type @xmath12 with @xmath170 . since there is no * with * clause , the fule firing rates default to @xmath171 .",
    "the corresponding time - evolution operator is @xmath172 \\ \\ \\",
    "\\left[\\prod \\limits_{j\\in \\operatorname{lhs } ( r ) } n_{b ( j ) } \\right]\\ ] ]    the semantics of the logic program is its least model or minimal interpretation .",
    "it can be computed ( knaster - tarski theorem ) by starting with no literals in the `` pool '' and repeatedly drawing all their consequences according to the logic program .",
    "this is equivalent to converging to a fixed point @xmath173 ) .",
    "more general clauses include negative literals @xmath174 on the lhs , as @xmath175 , or even more general cardinality constraint atoms @xmath176@xmath177 @xcite .",
    "these constraints can be expressed in operator algebra by expanding the basis operator set @xmath178 beyond the basic creation and annihilation operators @xcite .",
    "finally , atoms with function symbols may be admitted using parameterized terms @xmath179 .",
    "graph grammars are composed of local rewrite rules for graphs ( see for example @xcite ) .",
    "we now express a class of graph grammars in terms of spg s .",
    "the following syntax introduces object identifier ( oid ) labels @xmath180 for each parameterized term , and allows labelled terms to point to one another through a graph of such labels .",
    "the graph is related to two subgraphs of neighborhood indices @xmath181 and @xmath182 specific to the input and output sides of a rule .  like types or variables ,",
    "the label symbols appearing in a rule are chosen from an alphabet @xmath183 .",
    "unlike types but like variables @xmath40 , the label symbols @xmath184actually denote nonnegative integer values - unique addresses or object identifiers .",
    "a graph grammar rule is of the form , for some nonnegative - integer - valued functions @xmath185 ,",
    "@xmath186 , @xmath187 , @xmath188 for which @xmath189 ,  @xmath190 : @xmath191    ( compare to ( equation [ xref - equation-924145912 ] ) ) .",
    "note that the fanout of the graph is limited by @xmath192 .",
    "let @xmath193 be mutually exclusive and exhaustive , and the same for @xmath194 .",
    "define @xmath195 , @xmath196 , and @xmath197 .",
    "then the graph syntax may be translated to the following ordinary non - graph grammar rule ( where nextoid is a variable , and oidgen and null are types reserved for the translation ) : @xmath198    which already has a defined semantics @xmath8 .",
    "note that all set membership tests can be done at translation time because they do not use information that is only available dynamically during the grammar evolution .",
    "optionally we may also add a rule schema ( one rule per type , @xmath12 ) to eliminate any dangling pointers @xcite .",
    "strings may be encoded as one - dimensional graphs using either a singly or doubly linked list data structure .",
    "string rewrite rules are emulated as graph rewrite rules , whose semantics are defined above .",
    "this form is capable of handling many l - system grammars @xcite .",
    "there are spg rule forms corresponding to stochastic differential equations governing diffusion and transport .",
    "given the sde or equivalent langevin equation ( which specializes to a system of ordinary differential equations when @xmath199 ):",
    "@xmath200    under some conditions on the noise term @xmath201 the dynamics can be expressed @xcite as a fokker - planck equation for the probability distribution @xmath202 : @xmath203    let @xmath204 be the solution of this equation given initial condition @xmath205 ( with dirac delta function appropriate to the particular measure @xmath128 used for each component ) .",
    "then at @xmath206 , @xmath207    thus the probability rate @xmath208 is given by a differential operator acting on a dirac delta function . by ( equation [ xref - equation-922212022 ] )",
    "we construct the evolution generator operators @xmath209 , where @xmath210    the second order derivative terms give diffusion dynamics and also regularize and promote continuity of probability in parameter space both along and transverse to any local drift direction .",
    "calculations with such expressions are shown in @xcite .    diffusion / drift rules can be combined with chemical reaction rules to describe reaction - diffusion systems @xcite .",
    "the foregoing approach can be generalized to encompass partial differential equations and stochastic partial differential equations@xcite .",
    "these operator expressions all correspond to natural extended - time processes given by the evolution of continuous differential equations .",
    "the operator semantics of the differential equations is given in terms of derivatives of delta functions .",
    "a special `` * solve * '' or `` * solving * ''",
    "keyword may be used to introduce such ode / sde rule clauses in the spg syntax .",
    "this syntax can be eliminated in favor of a `` * with * '' clause by using derivatives of delta functions in the rate expression @xmath211 , provided that such generalized functions are in the banach space @xmath212 as a limit of functions .",
    "if a grammar includes such de rules along with non - de rules , a solver can be used to compute @xmath213 in the time - ordered product for @xmath148 as a hybrid simulation algorithm for discontinuous ( jump ) stochastic processes combined with stochastic differential equations .",
    "the relevance of the modeling language defined here to _ artificial intelligence _ includes the following points .",
    "first , pattern recognition and machine learning both benefit foundationally from better , more descriptively adequate probabilistic domain models . as an example",
    ", @xcite exhibits hierarchical clustering data models expressed very simply in terms of spg s and relates them to recent work .",
    "graphical models are probabilistic domain models with a fixed structure of variables and their relationships , by contrast with the inherently flexible variable sets and dependency structures resulting from the execution of stochastic parameterized grammars .",
    "thus spg s , unlike graphical models , are variable - structure systems ( defined in @xcite ) , and consequently they can support compositional description of complex situations such as multiple object tracking in the presence of cell division in biological imagery @xcite .",
    "second , the reduction of many divergent styles of model to a common spg syntax and operator algebra semantics enables new possibilities for hybrid model forms .",
    "for example one could combine logic programming with probability distribution models , or discrete - event stochastic and differential equation models as discussed in section [ xref - section-926213036 ] in possibly new ways .    as a third point of ai relevance , from spg",
    "probabilistic domain models it is possible to derive _ algorithms _ for simulation ( as in section [ xref - section-92871922 ] ) and inference either by hand or automatically .",
    "of course , inference algorithms are not as well worked out yet for spg s as for graphical models .",
    "spg s have the advantage that simulation or inference algorithms could be expressed again in the form of spg s , a possibility demonstrated in part by the encoding of logic programs as spg s .",
    "since both model and algorithm are expressed as spg s , it is possible to use spg transformations that preserve relevant quantities ( section [ xref - section - emj001 ] ) as a technique for deriving such novel algorithms or generating them automatically .",
    "for example we have taken this approach to rederive by hand the gillespie simulation algorithm for chemical kinetics .",
    "this derivation is different from the one in section [ xref - section-92871922 ] . because spg s encompass graph grammars it is even possible in principle to express families of valid spg transformations as meta - spg s .",
    "all of these points apply _ a fortiori _ to dynamical grammars as well .",
    "the relevance of the modeling language defined here to _ computational science _ includes the following points .",
    "first , as argued previously , multiscale models must encompass and unify heterogeneous model types such as discrete / continuous or stochastic / deterministic dynamical models ; this unification is provided by spg s and dg s .",
    "second , a representationally adequate computerized modeling language can be of great assistance in constructing mathematical models in science , as demonstrated for biological regulatory network models by cellerator @xcite and other cell modeling languages .",
    "dg s extend this promise to more complex , spatiotemporally dynamic , variable - structure system models such as occur in biological development .",
    "third , machine learning techniques could in principle be applied to find simplified approximate or reduced models of emergent phenomena within complex domain models . in that case",
    "the forgoing ai arguments apply to computational science applications of machine learning as well .    both for artificial intelligence and computational science , future",
    "work will be required to determine whether the prospects outlined above are both realizable and compelling .",
    "the present work is intended to provide a mathematical foundation for achieving that goal .",
    "we have established a syntax and semantics for a probabilistic modeling language based on independent processes leading to events linked by a shared set of objects .  the semantics is based on a polynomial ring of time - evolution operators .",
    "the syntax is in the form of a set of rewrite rules .",
    "stochastic parameterized grammars expressed in this language can compactly encode disparate models : generative cluster data models , biochemical networks , logic programs , graph grammars , string rewrite grammars , and stochastic differential equations among other others .",
    "the time - ordered product expansion connects this framework to powerful methods from quantum field theory and operator algebra .",
    "useful discussions with guy yosiphon , pierre baldi , ashish bhan , michael duff , sergei nikolaev , bruce shapiro , padhraic smyth , michael turmon , and max welling are gratefully acknowledged .",
    "the work was supported in part by a biomedical information science and technology initiative ( bisti ) grant ( number r33 gm069013 ) from the national institue of general medical sciences , by the national science foundation s frontiers in biological research ( fibr ) program award number ef-0330786 , and by the center for cell mimetic space exploration ( cmise ) , a nasa university research , engineering and technology institute ( ureti ) , under award number # ncc 2 - 1364 .",
    "000 mjolsness , e. ( 2005 ) .",
    "_ stochastic process semantics for dynamical grammar syntax_. uc irvine , irvine .",
    "uci ics tr # 05 - 14 , http://computableplant.ics.uci.edu/papers/#frameworks .",
    "[ stochsem05 ] mattis , d. c. , & glasser , m. l. ( 1998 ) .",
    "_ the uses of quantum field theory in diffusion - limited reactions_. reviews of modern physics , * 70 * , 9791001 .",
    "[ mattisglasser98 ] risken , h. ( 1984 ) . _ the fokker - planck equation_. berlin : springer.[riskenfp ] gillespie , d. j. , ( 1976 ) .",
    "22 , 403 - 434 .",
    "[ gillespie76 ] cenzer , d. , marek , v. w. , & remmel , j. b. ( 2005 ) .",
    "_ logic programming with infinite sets_. annals of mathematics and artificial intelligence , volume 44 , issue 4 , aug 2005 , pages 309 - 339 . [ remmel04 ]",
    "cuny , j. , ehrig , h. , engels , g. , & rozenberg , g. ( 1994 ) .",
    "_ graph grammars and their applications to computer science_.  springer.[graphgram94 ] prusinkiewicz , p. , & lindenmeyer , a. ( 1990 ) . _ the algorithmic beauty of plants_. new york : springer - verlag.[prusinkiewiczalgb ] e. mjolsness ( 2005 ) . _",
    "variable - structure systems from graphs and grammars_. uc irvine school of information and computer sciences , irvine .",
    "uci ics tr # 05 - 09 , http://computableplant.ics.uci.edu/papers/vbl-struct_gg_tr.pdf .",
    "[ vsstr05 ] victoria gor , tigran bacarian , michael elowitz , eric mjolsness ( 2005 ) .",
    "_ tracking cell signals in fluorescent images_. computer vision methods for bioinformatics ( cvmb ) workshop at computer vision and pattern recognition ( cvpr ) , san diego .",
    "[ cvprfluor05 ] bruce e. shapiro , andre levchenko , elliot m. meyerowitz , barbara j. wold , and eric d. mjolsness ( 2003 ) .",
    "_ cellerator : extending a computer algebra system to include biochemical arrows for signal transduction simulations_. bioinformatics 19 : 677 - 678 .",
    "[ cellerator ]"
  ],
  "abstract_text": [
    "<S> we define a class of probabilistic models in terms of an operator algebra of stochastic processes , and a representation for this class in terms of stochastic parameterized grammars .  </S>",
    "<S> a syntactic specification of a grammar is mapped to semantics given in terms of a ring of operators , so that grammatical composition corresponds to operator addition or multiplication .  </S>",
    "<S> the operators are generators for the time - evolution of stochastic processes .  within this modeling framework </S>",
    "<S> one can express data clustering models , logic programs , ordinary and stochastic differential equations , graph grammars , and stochastic chemical reaction kinetics . </S>",
    "<S> this mathematical formulation connects these apparently distant fields to one another and to mathematical methods from quantum field theory and operator algebra .    </S>",
    "<S> accepted for : ninth international symposium on artificial intelligence and mathematics , january 2006 </S>"
  ]
}
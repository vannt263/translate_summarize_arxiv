{
  "article_text": [
    "many complex systems can be expressed as networks in which a node represents an object ( e.g. , person , web page , protein ) and an edge represents the relationship between two objects ( e.g. , friendship , hyperlink , physical interaction )",
    ". a network can be characterised by microscale , mesoscale and macroscale structural patterns such as the degree ( i.e. , the number of edges that a node has ) , clustering coefficient , and diameter @xcite . among various structural properties of networks ,",
    "community structure is a representative mesoscale structure of networks @xcite .",
    "a community is a group of densely interconnected nodes while different communities are sparsely interconnected .",
    "a community often corresponds to a group of nodes sharing a role , and identifying communities aids classification of nodes and visualisation of networks @xcite .",
    "core - periphery structure is another mesoscale structure of networks , with which we view a network as being composed of two groups of nodes called the core and periphery .",
    "although the definition varies , a core is often defined as a group of densely interconnected nodes , and a periphery as a group of nodes that are densely connected ( i.e. , adjacent ) to the core nodes but not to other peripheral nodes @xcite .",
    "although a core and community are both a group of densely interconnected nodes , they are different ; a core connects densely to its periphery , whereas a community is not densely connected to other nodes outside it .",
    "core - periphery structure has been found in various networks including brain networks @xcite , metabolic networks @xcite , protein interaction networks @xcite , social networks @xcite , international trade networks @xcite , financial networks @xcite and transportation networks @xcite .",
    "for example , in a co - authorship network among researchers , notable researchers often publish papers with other notable researchers , forming a core , while other researchers tend to publish papers with particular notable researchers such as those in the same research group , forming a periphery @xcite .",
    "borgatti and everett introduced the first quantitative formulation of core - periphery structure @xcite . in the discrete version of core - periphery structure @xcite , which we will focus on in the present study , borgatti and",
    "everett introduced an idealised core - periphery structure in which core nodes are adjacent to all other nodes and peripheral nodes are adjacent to all core nodes but not to any peripheral node .",
    "although it is also realistic to assume that the core - periphery connectivity is sparser than the core - core connectivity @xcite , we use the idealised core - periphery structure in the present study .",
    "then , they sought for the assignment of all nodes in a given network to a core or periphery such that the network is as close as possible to an idealised core - periphery structure . since then",
    ", many core - periphery detection algorithms have been developed @xcite .",
    "these algorithms aim to identify a single core - periphery pair embedded in a network . however , a network may be better regarded as a collection of multiple core - periphery pairs @xcite , which is the focus of the present study .",
    "previous studies in this direction have not provided a tailored scalable algorithm to this end .",
    "a study focussed on a related but different type of multiple core - periphery structure @xcite .",
    "other algorithms aim to detect multiple cores but do not assume that peripheral nodes are sparsely connected to each other @xcite .",
    "a network can also have multiple disjoint cores in the form of @xmath0-cores @xcite , @xmath0-trusses @xcite or dense subgraphs @xcite .",
    "however , the corresponding algorithms do not tell how densely peripheral nodes are connected to each other or to which core a peripheral node belongs . another algorithm to find various mesoscale structure of networks including multiple core - periphery pairs @xcite is computationally costly and only feasible for small networks ( supplementary note  1 ) .",
    "we present a scalable algorithm to detect multiple non - overlapping core - periphery pairs in networks , each of which is as close as possible to an idealised core - periphery structure .",
    "our algorithm automatically determines the number and the size of the core - periphery pairs .",
    "various algorithms to detect core - periphery structure in networks are classified to density - based and transport - based algorithms @xcite .",
    "densely - based algorithms posit that a core is a densely connected group of nodes , whereas transport - based algorithms posit that a core is a group of nodes that can be reached to other nodes along short paths . in the present study ,",
    "we focus on density - based algorithms .",
    "we extend the idealised core - periphery structure introduced by borgatti and everett @xcite to the case of multiple pairs of a core and a periphery . in the borgatti ",
    "everett ( be ) algorithm , one considers a graph ( i.e. , network ) composed of @xmath1 nodes and @xmath2 edges .",
    "let @xmath3 be the adjacency matrix , i.e. , @xmath4 if node @xmath5 and @xmath6 are adjacent by an edge , and @xmath7 otherwise .",
    "we assume an undirected and unweighted network without self - loops , i.e. , @xmath8 and @xmath9 for all @xmath5 and @xmath6 .",
    "let @xmath10 be a vector of length @xmath1 , where @xmath11 if node @xmath5 is a peripheral node , and @xmath12 if node @xmath5 is a core node .",
    "we define the idealised core - periphery structure as the network where each core node is adjacent to all core and all peripheral nodes , and each periphery node is adjacent to all core nodes but no peripheral node . the corresponding adjacency matrix , @xmath13 , is given by @xmath14 the discrete version of the borgatti - everett ( be ) algorithm , which we consider in the present study , seeks @xmath15 that maximises similarity between @xmath16 and @xmath17 .",
    "we will explain the similarity measure in section [ sec : stest ] .",
    "we extend the idealised core - periphery structure to the case of multiple core - periphery pairs .",
    "let @xmath18 be the number of core - periphery pairs and @xmath19 be a vector of length @xmath1 , where @xmath20 is the index of the core - periphery pair to which node @xmath5 belongs .",
    "we exclude overlaps between core - periphery pairs , and between the core and periphery in each core - periphery pair . the corresponding adjacency matrix , @xmath21 , is given by @xmath22 where @xmath23 is kronecker delta .",
    "we seek @xmath24 that makes @xmath21 the closest to @xmath16 by maximising @xmath25 where @xmath26 $ ] is the density of edges in the network .",
    "the term @xmath27 represents the number of edges that are present in both the given network and the idealised core - periphery structure .",
    "the null - model term @xmath28 is the expected number of edges that are present in both the idealised core - periphery structure and an random graph @xcite , in which each pair of nodes is adjacent with probability @xmath29 .",
    "a large @xmath30 value indicates that the given network and the idealised core - periphery structure share more edges than by chance .",
    "we use a label switching heuristic @xcite to maximise @xmath30 .",
    "first , we assign each node to a different core by setting @xmath31 ( @xmath32 ) . then",
    ", we scan all nodes in a random order . for each scanned node @xmath5 , we calculate the increment in @xmath30 when we tentatively update @xmath33 to the core of the core - periphery pair that a neighbour of node @xmath5 , denoted by @xmath6 , belongs to , i.e. , @xmath34 .",
    "we also calculate the increment in @xmath30 when we tentatively update @xmath33 to @xmath35 .",
    "note that we experiment on these two cases regardless of whether @xmath36 or @xmath37 .",
    "we carry out this procedure for all neighbours of @xmath5 to measure the increment in @xmath30 in each case .",
    "finally , we update @xmath33 to the label that has yielded the largest tentative increment in @xmath30 ( i.e. , @xmath35 or @xmath34 for a neighbour @xmath6 ) .",
    "if any relabelling does not increase @xmath30 , we do not update @xmath38 .",
    "when we have scanned all nodes , we stop the entire procedure if no node has changed its label in the present round .",
    "otherwise , we draw a new random order of nodes and scan all nodes again according to the new random order .    the increment in @xmath30 by changing node @xmath5 s label from @xmath39 to @xmath40",
    "is given by @xmath41 \\nonumber \\\\      & - [ \\tilde{d}_{i,(c , 1 ) } + x \\tilde{d}_{i,(c , 0 ) } - p (   \\tilde{n}_{(c , 1 ) }   + x \\tilde{n}_{(c , 0)}-x ) ] , \\end{aligned}\\ ] ] where @xmath42 is the number of neighbours of node @xmath5 that have label @xmath39 , and @xmath43 is the number of nodes with label @xmath39 .",
    "for each scanned node @xmath5 , we calculate equation  ( [ eq : dq ] ) at most @xmath44 times , where @xmath45 is the degree of node @xmath5 . therefore , the time complexity for scanning all nodes in one round is @xmath46 , and that of the entire algorithm is @xmath47 , where @xmath48 is the number of rounds .",
    "we run this algorithm 20 times starting from the same initial condition stated above and adopt the node labelling that produces the largest value of @xmath30 .",
    "a detected core - periphery structure may be statistically insignificant @xcite .",
    "therefore , we adapt a statistical test in the case of a single core - periphery pair @xcite to the case of multiple core - periphery pairs .",
    "we first describe the statistical test for a single core - periphery pair @xcite .",
    "we measure the significance of a core - periphery pair by a quality function based on the pearson correlation coefficient @xcite , which is defined by @xmath49 where @xmath50 $ ] . a core - periphery pair detected for the given network",
    "is deemed to be significant if @xmath51 is statistically larger than @xmath51 values calculated for a null model .",
    "one uses the random graph as the null model , in which the number of edges is the same as that of the original network .",
    "one generates many networks using the random graph and maximises @xmath51 for each network .",
    "the kernighan - lin ( kl ) algorithm @xcite is used for maximising @xmath51 .",
    "the core - periphery pair detected for the original network is significant at a significance level of @xmath52 $ ] if the @xmath51 value for the original network is larger than a fraction @xmath53 of the @xmath51 values for the randomised networks .    in case of multiple core - periphery pairs , we apply essentially the same statistical test to each core - periphery pair detected in the original network . for each detected core - periphery pair",
    ", we first calculate @xmath51 .",
    "second , we generate 3,000 networks using the random graph , which have the same number of nodes and edges as those of the core - periphery pair . in counting the number of edges , we only consider the edges connecting nodes within the core - periphery pair .",
    "third , we detect a single core - periphery pair in each randomised network by maximising @xmath51 using the kl algorithm .",
    "fourth , we compare the obtained @xmath51 values between the original and randomised networks . if a core - periphery pair is judged to be insignificant , we call the corresponding nodes the residual nodes , i.e. , those not belonging to any significant core - periphery pair .",
    "if we test @xmath18 core - periphery pairs at a significance level of @xmath54 , the probability of making at least one false positive ( i.e. , an insignificant core - periphery pair is judged to be significant ) is @xmath55 , which increases as @xmath18 increases . to remedy this multiple comparison problem",
    ", we adopt the idk correction , with which we test each core - periphery pair at a significance level of @xmath56 , which is equivalent to @xmath57 @xcite .",
    "we set @xmath58 .",
    "we have decided to use @xmath51 maximised by the kl algorithm as the test statistic to compare the original and randomised networks .",
    "however , we can also use different algorithms to maximise @xmath51 .",
    "we can also use a different test statistic including @xmath30 restricted to the case of the one core - periphery pair ( i.e. , @xmath59 ) .",
    "for the synthetic networks with planted core - periphery structure , we measure the difference between the true core - periphery structure @xmath24 and the inferred core - periphery structure @xmath60 by the variation of information ( vi ) @xcite . the vi is given by @xmath61 ^ 2      } {          \\left[\\sum_{(\\hat c',\\hat x')}p(c , x;\\hat c',\\hat x')\\right ] \\times          \\left[\\sum_{(c',x')}p(c',x';\\hat c,\\hat x)\\right ]      }       , \\end{aligned}\\ ] ] where @xmath62 is the fraction of nodes that have the true label @xmath39 and inferred label @xmath63 .",
    "the vi value is equal to zero if and only if the inferred core - periphery structure is the same as the true one .",
    "we measure the performance of an algorithm by averaging vi values over the 100 generated networks .",
    "we compare the proposed algorithm with a previous algorithm , which detects a single core - periphery pair by maximising @xmath51 using the kl algorithm @xcite .",
    "we refer to the latter algorithm as the be ",
    "kl algorithm .",
    "we also compare our algorithm with another ad - hoc two - step in which we divide a network into a core and a periphery , and also divide the same network into non - overlapping communities by maximising modularity using the louvain algorithm @xcite .",
    "then , we regard the core and peripheral nodes in each detected community as a core - periphery pair . to divide the network into a core and a periphery",
    ", we use the be  kl algorithm .",
    "we apply the statistical test ( section [ sec : stest ] ) to the core - periphery pairs detected by the three algorithms .",
    "we do not compare these algorithms with the algorithm introduced by  and verma @xcite because of a low speed and insufficient performance of their algorithm on model networks with planted core - periphery structure ( supplementary note  1 ) .",
    "we compare the performance of the three algorithms on four different types of synthetic networks with a planted core - periphery structure schematically shown in fig .",
    "[ fig : sb ] .",
    "we generate the synthetic networks using stochastic block models @xcite .",
    "we draw label @xmath38 for the @xmath5th node @xmath64 from a distribution @xmath65 ( @xmath66 and @xmath67 ) , where @xmath68 is the probability that @xmath69 and satisfies @xmath70 . then",
    ", we place edges between each pair of nodes with label @xmath39 and @xmath71 with probability @xmath72 . for each type of the stochastic block model , we generate 100 networks and detect core - periphery pairs by the three algorithms .    as a first example , we consider a network composed of a single core - periphery pair ( fig .",
    "[ fig : sb]a ) .",
    "we set @xmath73 , @xmath74 , @xmath75 and @xmath76 , where @xmath77 .",
    "we note that the core - periphery structure is evident for a large @xmath78 value .",
    "for this network model , the vi value , quantifying the discrepancy between the true and inferred core - periphery structure , is compared for the three algorithms in fig .",
    "[ fig : exp]a .",
    "the vi values for the be  kl algorithm are approximately equal to zero for most of @xmath78 values ( @xmath79 ) .",
    "the vi values for the two - step algorithm are large even for a large @xmath78 value because the two - step algorithm divides the single core - periphery pair into communities .",
    "in contrast , the vi values for the proposed algorithm are close to zero when @xmath80 .",
    "therefore , the performance of the proposed algorithm on this network model is comparable to that of the be  kl algorithm when @xmath78 is not too small .",
    "as a second example , we examine networks composed of two core - periphery pairs ( fig .  [",
    "fig : sb]b ) .",
    "we set @xmath81 , @xmath82 , @xmath83 , and @xmath84 for @xmath85 and @xmath86 .",
    "the vi values for this network are shown in fig .",
    "[ fig : exp]b .",
    "the vi for the be ",
    "kl algorithm is large for all @xmath78 values because the be ",
    "kl algorithm is not designed for multiple core - periphery pairs .",
    "the vi values for the two - step algorithm and those for the proposed algorithm are similar and close to zero for @xmath87 .    in empirical networks",
    ", there may be nodes that are better regarded not to belong to any core or periphery .",
    "therefore , as a third example , we consider a network composed of a single core - periphery pair and residual nodes ( fig .",
    "[ fig : sb]c ) .",
    "we regard the block of the residual nodes as a single group of nodes , like a core or periphery , when calculating the vi value .",
    "let @xmath88 be the index for the block of the residual nodes .",
    "we set @xmath89 , @xmath90 , @xmath75 and @xmath91 for @xmath92 .",
    "the vi values for this model are shown in fig .",
    "[ fig : exp]c .",
    "the vi for the be ",
    "kl algorithm is large because the residual nodes are classified as peripheral nodes .",
    "the vi for the two - step algorithm is large for the entire range of @xmath78 .",
    "in contrast , the vi for our algorithm is close to zero for @xmath93 .    as a fourth example , we consider networks composed of two core - periphery pairs and residual nodes ( fig .  [ fig : sb]d ) .",
    "we set @xmath94 , @xmath95 , @xmath83 for @xmath96 and all other @xmath97 values to 0.01 .",
    "the vi values for this network model are shown in fig .",
    "[ fig : exp]d .",
    "the vi for the be ",
    "kl algorithm is large for all @xmath78 .",
    "the vi for the two - step and proposed algorithm decreases as @xmath78 increases .",
    "the proposed algorithm attains smaller values of vi than the two - step algorithm in almost the entire range of @xmath78 .",
    "we apply the three algorithms to three empirical networks . for",
    "directed and weighted networks , we disregard the direction and the weight of edges .",
    "consider the karate club network @xcite , which has @xmath98 nodes and @xmath99 edges ( edge density @xmath100 ) .",
    "a node represents a member of a karate club at a university .",
    "two members are adjacent if they have socially interacted outside club activities during the observation period . during the study ,",
    "a conflict occurred between the instructor ( node 1 ) and the president ( node 34 ) , which fissured the club .",
    "based on self - reports , each member was labelled the instructor side ( 15 members ) , the president side ( 16 members ) or neutral ( 3 members ) @xcite .",
    "the core - periphery structure detected by the three algorithms is shown in fig .",
    "[ fig : karate ] .",
    "the be  kl algorithm detects a single core - periphery pair such that both the instructor and president are core nodes ( fig .",
    "[ fig : karate]a ) , neglecting the fissure of the club .",
    "the two - step algorithm detects two core - periphery pairs , each of which consists mostly of the members with the same leanings ( fig .",
    "[ fig : karate]b ) . in particular ,",
    "the instructor and the president belong to the core of the different core - periphery pairs .",
    "two neutral members , nodes 10 and 19 , are assigned to the president s core - periphery pair , which does not agree with the self - reports by the members .",
    "the residual nodes consist of the members on the instructor side , those on the president side and a neutral member .",
    "our algorithm detects almost the same two core - periphery pairs as that detected by the two - step algorithm ( fig .",
    "[ fig : karate]c ) .",
    "the second example is a political blog network @xcite , which has @xmath101 nodes and @xmath102 edges ( edge density @xmath103 ) .",
    "a node is a blog on the united states president election in 2004 , and two blogs are adjacent if one blog cites the other blog on its front page .",
    "each blog was labelled with one of the political leanings , liberal ( 586 blogs ) or conservative ( 636 blogs ) , determined by automated categorisations by several weblog directories @xcite . if a blog was uncategorised or classified to conflicting categories , the authors of ref .",
    "@xcite manually judged the political leaning .    the core - periphery structure detected by the three algorithms",
    "is shown in fig .",
    "[ fig : poliblog ] .",
    "the unique core detected by the be ",
    "kl algorithm is a mixture of liberal and conservative blogs ( fig .",
    "[ fig : poliblog]a ) .",
    "the peripheral blogs are mostly adjacent to blogs with the same political leaning",
    ". however , the structure detected by the be ",
    "kl algorithm alone does not tell this unless we refer to the political learning of the individual blogs . a different algorithm for a single core - periphery structure yielded similar results for the same network @xcite .",
    "the two - step algorithm detects three core - periphery pairs , each of which mostly comprises the blogs with the same political leanings ( fig .",
    "[ fig : poliblog]b ) .",
    "two core - periphery pairs are much larger than the third one and have the opposite political leanings . the third small core - periphery pair is mainly composed of liberal blogs . in each core - periphery pair , a majority of the peripheral nodes is densely interconnected , which is against the idealised core - periphery structure .",
    "this is due to the community detection step that partitions a network into communities with dense intra - community edges .",
    "our algorithm detects two core - periphery pairs , each of which mostly comprises the blogs with the same political leaning ( fig .  [",
    "fig : poliblog]c ) .",
    "the detected two core - periphery pairs are smaller than those detected by the two - step algorithm .",
    "more nodes are classified as residual nodes than by the two - step algorithm . with our algorithm ,",
    "the edges between peripheral nodes within each core - periphery pair are sparser than those detected by the two - step algorithm , respecting the notion of the idealised core - periphery structure .",
    "our third example is a network of airports , which has @xmath104 nodes and @xmath105 edges ( edge density @xmath106 ) @xcite .",
    "a node represents an airport .",
    "two airports are adjacent if there is a direct commercial flight between them .",
    "figure  [ fig : airport ] shows the core - periphery structure detected by the three algorithms .",
    "kl algorithm detects a dense core composed of 89 airports scattered in different geographical regions ( fig .",
    "[ fig : airport]a ) .",
    "the peripheral airports are rarely adjacent to the core airports in other regions .",
    "furthermore , the peripheral airports tend to be adjacent to other peripheral airports in the same region , which is inconsistent with the notion of the periphery .",
    "the two - step algorithm detects 16 geographically concentrated core - periphery pairs ( fig .",
    "[ fig : airport]b ) .",
    "our algorithm detects ten geographically concentrated core - periphery pairs ( fig .",
    "[ fig : airport]c ) .",
    "the partition of the world - wide airport network into geographically distinct groups of airports found here is consistent with the previous results derived with community detection algorithms @xcite .",
    "compared to the two - step algorithm , the peripheral airports detected by our algorithm are not densely interconnected .",
    "we further analyse the core - periphery structure obtained by our algorithm .",
    "figure  [ fig : map_world ] maps the locations of the core and peripheral airports .",
    "the three largest core - periphery pairs labelled 1 , 2 and 3 are mainly based in europe , east asia and the united states , respectively .",
    "the core - periphery pairs 1 , 2 and 3 consist of the airports in 125 , 35 and 47 countries , respectively .",
    "each of the other core - periphery pairs labelled 410 consists of the airports in one country .",
    "the location of the airports and metropolises in europe , east asia , the united states and their surroundings are shown in fig .",
    "[ fig : map ] .",
    "here the metropolis is defined as the capital city of all countries , the provincial capitals of china and the state capitals of the united states because china and the united states have many airports .",
    "core - periphery pair 1 contains 333 core airports and 378 peripheral airports , of which 405 ( 57% ) airports are located in europe ( fig .",
    "[ fig : map]a ) .",
    "however , this core - periphery pair excludes most airports in the nordic countries ( 84 airports ; 68% ) .",
    "there are 89 airports within 20 miles from a metropolis in europe , among which there are 51 core airports ( 57% ) , 28 peripheral airports ( 31% ) and ten residual airports ( 11% ) . as a comparison ,",
    "if we select the same number of the european airports with the largest degrees as that of the european core airports , 64 airports ( 72% ) are contained in the set of 89 airports within 20 miles from a metropolis , which is more than the number of the core airports ( 51 airports ; see above ) contained in the same set of airports .",
    "this result indicates that hub metropolitan airports , which are common , are not necessarily core airports .",
    "the second core - periphery pair contains 161 core airports and 240 peripheral airports , among which 217 ( 54% ) airports are located in east asia ( fig .",
    "[ fig : map]b ) . in this core - periphery pair ,",
    "31 airports are located within 20 miles from a metropolis in east asia , among which there are 23 core airports ( 74% ) , eight peripheral airports and no residual airport ( fig .",
    "[ fig : map]b ) .",
    "the third core - periphery pair contains 150 core airports and 312 peripheral airports , among which 210 ( 45% ) airports are located in the united states ( fig .",
    "[ fig : map]c ) . in this core - periphery pair , 71 airports",
    "are located within 20 miles from a metropolis in the united states , among which there are 29 core airports ( 41% ) , 30 peripheral airports ( 42% ) and 12 residual airports ( 17% ) ( fig .",
    "[ fig : map]c ) . we have not found the partitioning of airports into core - periphery pairs corresponding to different major airline groups ( e.g. , american airlines , delta airlines , southwest airlines and united airlines in the united states ) .",
    "table  [ ta : profile ] lists the size of core - periphery pairs and the fractions of different types of edges .",
    "the airports in a large core are not densely interconnected compared to those in small core - periphery pairs , probably due to the limited capacity of the airports ( e.g. , a small number of runways ) .",
    "core - periphery pairs 1 , 2 and 3 contain hub airports in each region .",
    "the other small core - periphery pairs consist of a small number of core airports , i.e. , at most 20% of the airports in each core - periphery pair . in these core - periphery pairs ,",
    "most of the peripheral airports are adjacent to the core airports but not to other peripheral airports in the same core - periphery pair .",
    "this observation suggests that a small number of core airports relays most of the flights into these regions as gateway airports .",
    "for example , the representative core airport ( i.e. , the core airport that has the largest number of neighbours in the core - periphery pair ) in pair 4 , mnl ( philippines ) , and that in pair 8 , los ( nigeria ) , serve most of the domestic airports in the respective countries . such a structure is evident in small core - periphery pairs such as core - periphery pairs 410 .",
    "the subnetwork within the philippines is shown in fig .",
    "[ fig : philippines_thailand]a ; see supplementary table 1 for properties of all airports in the philippines .",
    "most of the airports ( 34 airports ; 92% ) in core - periphery pair 4 ( shown in orange in figs .",
    "[ fig : map_world ] , [ fig : map]b and [ fig : philippines_thailand]a ) only serve domestic flights . core airport 1 ( labelled in fig .",
    "[ fig : philippines_thailand]a ) has most of the edges ( 41 edges ; 84% ) between core - periphery pair 4 and the rest of the network .",
    "therefore , core airport 1 functions as a gateway airport in the philippines . core airport 2 also functions as a gateway airport , but to a lesser extent than core airport 1 does .",
    "core - periphery pairs located in alaska ( core - periphery pair 6 in table  [ ta : profile ] ) , russia ( pair 7 ) and ecuador ( pair 9 ) also contain a few core airports serving as gateway airports in the respective regions ( supplementary note  2 ) .",
    "core airports 8 and 21 in the philippines ( fig .",
    "[ fig : philippines_thailand]a ) have a small degree , which is counterintuitive .",
    "core nodes having degree one or two are also found in core - periphery pair 6 ( supplementary fig .",
    "3c ) . the airports 8 and 21 in the philippines are adjacent to one peripheral airport 7 and 4 , respectively .",
    "if we assign airport 8 to the periphery , two peripheral airports 7 and 8 would be adjacent .",
    "similarly , if we assign airport 21 to the periphery , two peripheral airports 4 and 21 would be adjacent . to avoid edges between peripheral nodes ,",
    "our algorithm has identified airports 8 and 21 as core nodes .",
    "however , airports 8 and 21 may be better regarded as peripheral airports given that they are not densely interconnected to other core airports .",
    "previous studies provided remedies for this issue @xcite ( see section  [ sec : discussion ] for further discussion ) .",
    "the subnetwork within thailand is shown in fig .",
    "[ fig : philippines_thailand]b ; see supplementary table 2 for properties of all airports in thailand .",
    "two major airports 1 and 14 are located in the capital city , bangkok , and belong to different core - periphery pairs . all international airports in thailand belong to core - periphery pair 2 ( shown in blue in figs .",
    "[ fig : map_world ] , [ fig : map]b and [ fig : philippines_thailand]b ) , including core airport 14 .",
    "most of the domestic airports ( 13 airports ; 59% ) belong to core - periphery pair 10 ( shown in magenta ) , including core airport 1 .",
    "the subnetwork composed of core - periphery pair 10 is largely separated from the other airports in thailand , which belong to core - periphery pair 2 , and the rest of the world .",
    "the separation of the domestic and international airports and their respective subnetworks is also observed in the philippines ( fig .",
    "[ fig : philippines_thailand]a ) , iran and nigeria ( supplementary note  2 ) .",
    "we compare the speed of the three algorithms on the synthetic and empirical networks .",
    "we implement all the algorithms in matlab and run simulations on a computer with intel 2.6ghz sandy bridge processors and 4 gb of memory .",
    "we measure the speed of an algorithm by averaging the cpu time over 100 runs .",
    "we do not run the statistical test because it is common to all the algorithms .",
    "the average cpu time of the three algorithms is compared in table  [ ta : cputime ] .",
    "kl algorithm is the fastest on all the synthetic and karate club networks .",
    "however , it is slower than our algorithm on the political blog and airport networks .",
    "the two - step algorithm is the slowest on all the networks .",
    "our algorithm is approximately two times slower than the be ",
    "kl algorithm on the synthetic and karate club networks .",
    "however , on the political blog and airport networks , it runs much faster than the be ",
    "kl algorithm .",
    "our algorithm runs in @xmath47 time , where @xmath48 is the number of rounds ( section  [ sec : algorithm ] ) .",
    "therefore , our algorithm is expected to be fast on large sparse networks .",
    "we proposed a scalable algorithm to detect multiple core - periphery pairs in networks by maximising a novel quality function @xmath30 .",
    "the quality function @xmath30 compares the number of edges of different types in the given network with the expected number for an random graph .",
    "in the airport network , we have found several core nodes having degree one or two ( e.g. , airport 8 and 21 in fig .",
    "[ fig : philippines_thailand]a ) , which contradicts the intuition that core nodes would have a large degree .",
    "our algorithm assigned these nodes to a core to suppress the edges between peripheral nodes . however , these nodes may be better regarded as peripheral nodes because they are not adjacent to all but one core node .",
    "one remedy is to weaken the suppression of the edges between peripheral nodes @xcite .",
    "adapting this idea to the case of multiple core - periphery structure warrants future research .",
    "we used the random graph as the null model to define @xmath30 .",
    "the random graph is also used as a null model for detecting communities in networks . in the inference of a stochastic block model without degree corrections (",
    "i.e. , without assuming a heterogeneous degree distribution ) , one compares the distribution of edges within and across different blocks , between the given network and an random graph @xcite . in a community detection algorithm based on the potts model ,",
    "one compares the number of edges within proposed communities in the given network and that for an random graph @xcite .",
    "our @xmath30 is equivalent to the quality function used in the latter algorithm if we enforce that all nodes are core nodes , i.e. , @xmath107 .",
    "the configuration model , with which we randomly rewire edges conserving the degree of each node , is a more commonly used null model for community detection @xcite .",
    "if we adopt the configuration model as the null model in our algorithm , the quality function will be given by @xmath108 .",
    "we have used the random graph because the maximisation of @xmath109 does not yield the true core - periphery structure for synthetic networks having a single core - periphery pair .",
    "this is because @xmath109 involves @xmath110 , which makes @xmath109 small when node @xmath5 and @xmath6 have a large degree . because core nodes tend to have a large degree , maximisation of @xmath109 tends to assign core nodes that should belong to the same core - periphery pair to different core - periphery pairs ( i.e. , @xmath111 ) or a periphery ( i.e. , @xmath112 ) . to support this argument , we maximise @xmath109 using a label switching heuristic ( section [ sec : algorithm ] ) for the synthetic networks with a single core - periphery pair ( fig .  [ fig : sb]a ) .",
    "the obtained vi values are larger than 0.5 in the entire range of @xmath78 ( fig .",
    "[ fig : conf ] ) .",
    "this result contrasts to that obtained from our algorithm ( with the random graph null model ) , which is shown by the rectangles in fig .",
    "[ fig : exp ] .    previous studies provided algorithms to detect multiple core - periphery pairs based on community detection algorithms .",
    "yang and leskovec used an algorithm for detecting overlapping communities in networks @xcite .",
    "they regarded the nodes belonging to many communities as core nodes and nodes belonging to few communities as peripheral nodes .",
    "these algorithms may detect densely interconnected peripheral nodes because the detected peripheral nodes in a single core - periphery pair belong to the same community .",
    "in addition , a periphery may belong to multiple cores in these algorithms .",
    "these properties are shared by the algorithms proposed in refs .",
    "@xcite . in contrast",
    ", our algorithm detects disjoint core - periphery pairs such that peripheral nodes are interconnected sparsely within each core - periphery pair and across different core - periphery pairs .",
    "yan and luo focussed on a different type of structure consisting of multiple cores and a single periphery @xcite .",
    "in contrast , a core detected by our algorithm owns its exclusive periphery , including the case of an empty periphery .                                                                                                        0.45   and zero otherwise .",
    "the empty blocks correspond to the entries that are equal to one with probability 0.01 and zero otherwise .",
    "the diagonal entries are always set to zero and shown as empty entries in the figure for the sake of simplicity .",
    "the dashed lines indicate the borders separating different blocks .",
    "the labels @xmath113 are also indicated at the top and left of the adjacency matrices .",
    "label r represents a block of residual nodes .",
    "the networks are composed of ( * a * ) a single core - periphery pair , ( * b * ) two core - periphery pairs , ( * c * ) a single core - periphery pair and residual nodes , and ( * d * ) two core - periphery pairs and residual nodes . in all cases , we set @xmath114 .",
    ", title=\"fig : \" ]      0.45   and zero otherwise .",
    "the empty blocks correspond to the entries that are equal to one with probability 0.01 and zero otherwise .",
    "the diagonal entries are always set to zero and shown as empty entries in the figure for the sake of simplicity .",
    "the dashed lines indicate the borders separating different blocks .",
    "the labels @xmath113 are also indicated at the top and left of the adjacency matrices .",
    "label r represents a block of residual nodes .",
    "the networks are composed of ( * a * ) a single core - periphery pair , ( * b * ) two core - periphery pairs , ( * c * ) a single core - periphery pair and residual nodes , and ( * d * ) two core - periphery pairs and residual nodes . in all cases ,",
    "we set @xmath114 . ,",
    "title=\"fig : \" ]      0.45   and zero otherwise .",
    "the empty blocks correspond to the entries that are equal to one with probability 0.01 and zero otherwise .",
    "the diagonal entries are always set to zero and shown as empty entries in the figure for the sake of simplicity .",
    "the dashed lines indicate the borders separating different blocks .",
    "the labels @xmath113 are also indicated at the top and left of the adjacency matrices .",
    "label r represents a block of residual nodes .",
    "the networks are composed of ( * a * ) a single core - periphery pair , ( * b * ) two core - periphery pairs , ( * c * ) a single core - periphery pair and residual nodes , and ( * d * ) two core - periphery pairs and residual nodes . in all cases ,",
    "we set @xmath114 . ,",
    "title=\"fig : \" ]      0.45   and zero otherwise .",
    "the empty blocks correspond to the entries that are equal to one with probability 0.01 and zero otherwise .",
    "the diagonal entries are always set to zero and shown as empty entries in the figure for the sake of simplicity .",
    "the dashed lines indicate the borders separating different blocks .",
    "the labels @xmath113 are also indicated at the top and left of the adjacency matrices .",
    "label r represents a block of residual nodes .",
    "the networks are composed of ( * a * ) a single core - periphery pair , ( * b * ) two core - periphery pairs , ( * c * ) a single core - periphery pair and residual nodes , and ( * d * ) two core - periphery pairs and residual nodes . in all cases , we set @xmath114 .",
    ", title=\"fig : \" ]              0.5   and @xmath7 , respectively .",
    "the solid lines indicate the partition into core - periphery pairs .",
    "the dashed lines indicate the partition into the core and periphery within a core - periphery pair .",
    "the colour indicates the leaning of the members .",
    "the instructor ( i.e. , node 1 ) and president ( i.e. , node 34 ) are indicated by the arrows .",
    ", title=\"fig : \" ]      0.5   and @xmath7 , respectively .",
    "the solid lines indicate the partition into core - periphery pairs .",
    "the dashed lines indicate the partition into the core and periphery within a core - periphery pair . the colour indicates the leaning of the members .",
    "the instructor ( i.e. , node 1 ) and president ( i.e. , node 34 ) are indicated by the arrows .",
    ", title=\"fig : \" ]      0.5   and @xmath7 , respectively .",
    "the solid lines indicate the partition into core - periphery pairs .",
    "the dashed lines indicate the partition into the core and periphery within a core - periphery pair .",
    "the colour indicates the leaning of the members .",
    "the instructor ( i.e. , node 1 ) and president ( i.e. , node 34 ) are indicated by the arrows .",
    ", title=\"fig : \" ]      0.5   and @xmath7 , respectively .",
    "the solid lines indicate the partition into core - periphery pairs .",
    "the dashed lines indicate the partition into the core and periphery within a core - periphery pair .",
    "the colour indicates the leaning of the members .",
    "the instructor ( i.e. , node 1 ) and president ( i.e. , node 34 ) are indicated by the arrows .",
    ", title=\"fig : \" ]                                                                .",
    "the average cpu time of the three algorithms on different networks .",
    "we generate synthetic networks 14 using the stochastic block models schematically shown in figs .",
    "[ fig : sb]a , [ fig : sb]b , [ fig : sb]c and [ fig : sb]d , respectively . for each of them , we set @xmath117 and measure the cpu time for one generated network .",
    "[ cols=\"<,^,^,^,^,^ \" , ]"
  ],
  "abstract_text": [
    "<S> with a core - periphery structure of networks , core nodes are densely interconnected , peripheral nodes are connected to core nodes to different extents , and peripheral nodes are sparsely interconnected . </S>",
    "<S> core - periphery structure composed of a single core and periphery has been identified for various networks . </S>",
    "<S> however , analogous to the observation that many empirical networks are composed of densely interconnected groups of nodes , i.e. , communities , a network may be better regarded as a collection of multiple cores and peripheries . </S>",
    "<S> we propose a scalable algorithm to detect multiple non - overlapping groups of core - periphery structure in a network . </S>",
    "<S> we illustrate our algorithm using synthesised and empirical networks . </S>",
    "<S> for example , we find distinct core - periphery pairs with different political leanings in a network of political blogs and separation between international and domestic subnetworks of airports in some single countries in a world - wide airport network . </S>"
  ]
}
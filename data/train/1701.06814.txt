{
  "article_text": [
    "index coding , introduced in @xcite , considers the problem of efficiently broadcasting a set of messages available at a source , to a collection of receivers each of which already has a subset of the messages ( called _ side - information _ ) and demands certain other subset of messages .",
    "based on the configuration of the messages available as side - information and the demand sets , the general index coding problem is classified into various types including unicast @xcite ( with disjoint demand sets ) , uniprior @xcite ( with disjoint side - information sets ) , and the most general _ groupcast _ index coding problems ( arbitrary side - information and demand sets ) .",
    "the goal of index coding is to find optimal index codes , where optimality means that the number of channel uses is minimum . to determine the maximum rate ( inversely related to minimum number of channel uses ) of an index coding problem is np - hard .",
    "the landmark paper @xcite famously connected the scalar linear index coding problem to finding a quantity called _ minrank _ associated with the _ side - information graph _ related to the given single unicast index coding problem .",
    "the minrank problem is np - hard too , but several approaches have been taken to address this problem , most popularly via graph theoretical ideas to bound the maximum rate ( see , for example , @xcite ) .",
    "the techniques used in these works to derive bounds on maximum rate naturally lead to constructions of ( scalar and vector ) linear index codes .",
    "we focus on scalar linear codes in this paper . in @xcite",
    "the index coding problem has been reformulated in the interference alignment framework , where constructing a scalar linear code was shown to be equivalent to assigning precoding vectors to the messages .",
    "the precoding vectors are assigned such that the space spanned by vectors assigned to interfering messages is linearly independent of the vector assigned to the demanded message .",
    "an index code is said to be a rate @xmath2 code ( for some positive integer @xmath3 ) if the messages are scalars ( from some field @xmath6 ) and precoding vectors are @xmath3-length . in @xcite , a necessary and sufficient condition for index codes of rate @xmath7 was presented based on the structure of the interference ( messages not available as side - information ) , which is modeled using a _ conflict graph_. consequently , a polynomial time algorithm to identify the feasibility of rate @xmath7 ( or equivalently , minrank two ) for a given index coding problem was given in @xcite .    unlike the rate @xmath7 feasibility problem which has a polynomial time solution ,",
    "the rate @xmath5 feasibility problem was shown to be np - hard @xcite , when the finite field is fixed .",
    "a simple necessary condition for rate @xmath5 feasibility was given in @xcite .",
    "a class of rate @xmath5 feasible index coding problems was shown in @xcite . in @xcite ,",
    "a stricter necessary condition was derived than what was previously known in @xcite .",
    "in addition , a larger class of index coding problems which are rate @xmath5 feasible was presented , which include those given in @xcite .",
    "both the necessary and sufficient conditions obtained in @xcite are based on the following two ideas ( i ) _ conflict hypergraphs _ , which preserve all the required information in the index coding problem ( as opposed to conflict graph ) ( ii ) _ type-2 alignment sets _ , which are special subsets of messages which must necessarily be assigned vectors from a two dimensional space .    in this work ,",
    "we make further progress on the rate @xmath5 index coding problem .",
    "our contributions are as follows .    *",
    "_ strictly rate @xmath2 feasible subsets : _ we introduce the notion of strictly rate @xmath2 feasible subsets of messages of an index coding problem @xmath8 .",
    "a subset of messages is said to be strictly rate @xmath2 feasible if for any rate @xmath5 solution , there are always @xmath3 linearly independent vectors amongst the precoding vectors assigned to the subset ( definition [ def : strict_rate ] in section [ sec : nec_condition ] makes this precise ) . * _ necessary condition based on strictly rate @xmath2 feasible subsets : _ we show that a certain method of ` stitching ' strictly rate @xmath7 feasible subsets together generates larger message subsets which should be strictly rate @xmath7 feasible .",
    "( theorem [ thm : converse ] , section [ subsec : nec_condition ] ) . using this result , we recapture the main result of @xcite , while significantly generalizing it to include new configurations which must be strictly rate @xmath7 .",
    "this , in turn , results in a general necessary condition for rate @xmath5 feasibility . * _ contraction of an index coding problem : _ we develop the notion of a _ contraction _ of an index coding problem @xmath8 .",
    "a contraction of an index coding problem @xmath8 is another index coding problem @xmath9 such that any solution for @xmath9 gives a solution for @xmath8 ( section [ sec : suff_condition ] gives a formal definition ) . * _ sufficient condition based on contractions : _ we give sufficient conditions on rate @xmath5 feasibility of @xmath8 based on the structure of type-2 alignments sets of a maximal contraction of @xmath8 ( theorem [ thm : suff_condition ] , section [ sec : suff_condition ] ) .",
    "these conditions result in a larger class of problems which are rate @xmath5 feasible .    _",
    "notations : _ throughout the paper , we use the following notations .",
    "let @xmath10 $ ] denote @xmath11 .",
    "for a set of vectors @xmath12 , @xmath13 denotes their span . for a vector space @xmath14",
    ", @xmath15 denotes its dimension .",
    "an arbitrary finite field is denoted by @xmath16 . a vector from the @xmath17-dimensional vector space @xmath18",
    "is said to be picked _ at random _ if it is selected according to the uniform distribution on @xmath18 .",
    "formally , the general index coding problem , called a _ groupcast _ index coding problem , consists of a broadcast channel which can carry symbols from @xmath16 , along with ( i ) a set of @xmath19 receivers ( ii ) a source which has messages @xmath20\\}$ ] , each of which takes values from @xmath16 , ( iii ) for each receiver @xmath21 , a set @xmath22 denoting the set of messages demanded by the receiver @xmath21 , ( iv ) for each receiver @xmath21 , a set @xmath23 denoting the set of side - information messages available at the @xmath24 receiver . _ a scalar linear index code of symmetric rate _ @xmath2 ( for some integer @xmath25 ) for a given index coding problem consists of an encoding function @xmath26 mapping the messages ( @xmath27 ) to some @xmath3-length codeword which is broadcast through the channel , as well as decoding functions at the receivers which use the codeword and the available side - information symbols to decode the demands . the encoding function of a scalar linear index code can be expressed as @xmath28 , where @xmath29 is a @xmath3-length vector over @xmath16 called the precoding vector assigned to @xmath30 . finding a scalar linear index code of length @xmath3",
    "( i.e. , with a feasible rate @xmath31 ) is equivalent to finding an assignment of these @xmath29s to the @xmath32 messages such that the receivers can all decode their demanded messages .    for some receiver @xmath21 and for some message @xmath33 ,",
    "let @xmath34 denote the set of messages ( except @xmath35 ) not available at the receiver @xmath21 .",
    "the sets @xmath36 are called the _ interfering sets at receiver _ @xmath21 .",
    "if receiver @xmath21 does not demand message @xmath35 , then we define @xmath37 .",
    "if a message set @xmath38 is not available at a receiver @xmath21 demanding at least one message @xmath39 , then @xmath38 is said to _ interfere at receiver _",
    "@xmath21 , and @xmath38 and @xmath35 are said to be _ in conflict_.    for a set of vertices @xmath40 , let @xmath41 denote the vector space spanned by the vectors assigned to the messages in @xmath12 , under the specified encoding function @xmath42 .",
    "if @xmath43 , we define @xmath41 as the zero vector .",
    "a message subset @xmath12 is said to be @xmath3-dimensional ( under the code @xmath42 ) if @xmath44    for a given assignment of vectors to the messages ( or equivalently , for a given encoding function @xmath42 ) , we say that all the conflicts _ are resolved _ if @xmath45 .",
    "it can easy to show that successful decoding at the receivers is possible if and only if all the conflicts are resolved @xcite .",
    "we alternatively refer to a collection of messages by only their indices ( for example , @xmath46 is referred to as @xmath47 ) .",
    "in @xcite , we developed a new framework for studying the rate @xmath5 feasibility of groupcast index coding problems .",
    "we recall the basic definitions and results from @xcite .",
    "we build on these results in this paper .",
    "the conflict hypergraph is an undirected hypergraph with vertex set @xmath48 ( the set of messages ) , and its hyperedges defined as follows .    * for any receiver @xmath21 demanding any message @xmath35 , @xmath35 and @xmath49 are connected by a hyperedge ( shown dotted in our figures ) , which is denoted by @xmath50 .",
    "it was shown in @xcite that the conflict hypergraph sufficiently captures the essence of the index coding problem .",
    "the alignment graph is an undirected graph with vertex set @xmath48 and edges defined as follows .",
    "the vertices @xmath30 and @xmath51 are connected by an edge ( called an _ alignment edge _ , shown in our figures by a solid edge ) when the messages @xmath30 and @xmath51 are not available at a receiver demanding a message other than @xmath30 and @xmath51",
    ". a connected component of the alignment graph is called an _ alignment set_.",
    "let @xmath52 denote an index coding problem with message set @xmath48 . for some @xmath53 , a @xmath54__-restricted index coding problem _",
    "_ is defined as the index coding problem @xmath55 consisting of ( i ) the messages @xmath54 , ( ii)the subset @xmath56 of the receivers of @xmath52 which demand messages in @xmath54 , ( iii ) for each @xmath57 the demand sets @xmath58 and the side - information sets @xmath59 are restricted within @xmath54 , i.e. , @xmath60 and @xmath61    the alignment graph and the alignment sets of the restricted index coding problem @xmath55 are called the @xmath54-_restricted alignment graph _ and @xmath54-_restricted alignment sets _ respectively . a @xmath54-_restricted internal conflict _",
    "is a conflict between any two messages within a restricted alignment set of @xmath54 .",
    "a subset @xmath62 of size three is said to be a _ triangular interfering set _",
    "if all the messages in @xmath63 interfere simultaneously at some receiver , and at least two of the messages in @xmath63 are in conflict .",
    "two distinct triangular interfering sets @xmath64 and @xmath65 are said to be _ adjacent _ if @xmath66 such that @xmath30 and @xmath51 are in conflict .",
    "[ type2align ] two triangular interfering sets @xmath64 and @xmath65 are said to be _ connected _ if there exists a",
    "( i.e. , a sequence ) of adjacent triangular interfering sets starting from @xmath64 and ending at @xmath65 . a _ type-2 alignment set _ is a maximal set of triangular interfering sets which are connected to each other .",
    "the following theorem gives a necessary and sufficient condition for assigning vectors from a two dimensional space to the type-2 alignment sets .",
    "[ norestrconflictstype2 ] let @xmath54 be a type-2 alignment set of the given index coding problem @xmath52 .",
    "if @xmath52 is rate @xmath5 feasible , then @xmath55 must be rate @xmath7 feasible which holds if and only if there are no @xmath54-restricted internal conflicts .",
    "[ thm : main ] a rate @xmath7 infeasible index coding problem @xmath52 is rate @xmath5 feasible if every alignment set of @xmath52 satisfies _ either _ of the following conditions .",
    "1 .   it does not have both forks and cycles ( a _ fork _ is a vertex connected by three or more edges ) .",
    "2 .   it is a type-2 alignment set with no restricted internal conflicts .",
    "we begin with the formal definition of strictly rate @xmath2 feasible and infeasible subsets .",
    "[ def : strict_rate ] let @xmath8 be an index coding problem with message set @xmath67 .",
    "a subset @xmath53 is said to be _ strictly rate _",
    "@xmath2 _ feasible _ ( or simply ,",
    "_ strictly rate _",
    "@xmath2 ) if for any rate @xmath5 code given by an encoding function @xmath42 ( if it exists ) , we have @xmath68 .",
    "a subset @xmath54 is called strictly rate @xmath2 infeasible if @xmath69 for any rate @xmath5 encoding function @xmath42 .",
    "examples of strictly rate @xmath7 subsets include triangular interfering sets and type-2 sets .",
    "in the forthcoming part of this paper , we also construct other classes of strictly @xmath7 subsets as well as examples of strictly rate @xmath70 and rate @xmath5 subsets .",
    "some of such sets help us to further characterize index coding problems which are rate @xmath5 feasible based on the existence of some substructures , like the type-2 set conditions given by theorem [ norestrconflictstype2 ] .      here , we will present two interference configurations ( i ) successive triangular interference configuration ( stic ) and ( ii ) square pyramid interference configuration ( spic ) .",
    "we will identify strictly rate @xmath2 feasible ( and infeasible ) subsets in these two configurations .",
    "we will also present an example based on two stic subsets which is rate @xmath5 infeasible .",
    "a collection of messages @xmath71 is said to be a _ successive triangular interference configuration _ ( stic ) subset ( fig .",
    "[ fig : sticseta ] ) if the following conditions hold .    *",
    "the sets @xmath72 , @xmath73 , and @xmath74 interfere at some receivers demanding messages other than @xmath75 . * the sets @xmath47 and @xmath76 interfere at @xmath77 , @xmath78 and @xmath79 interfere at @xmath80 , and @xmath81 and @xmath82",
    "interfere at @xmath83 ( and there are no other conflicts amongst @xmath75 ) .",
    "[ sticlemma ] let @xmath75 be a stic set as in fig .",
    "[ fig : sticseta ]",
    ". then the following statements are true .    1 .",
    "the set @xmath84 is strictly rate @xmath7 infeasible .",
    "the sets @xmath72 , @xmath73 , and @xmath74 are strictly rate @xmath7 feasible .",
    "proof of 1 ) : suppose @xmath84 is two dimensional for some rate @xmath5 index code given by @xmath42 .",
    "wlog , let us assume that @xmath85 and @xmath86 are linearly independent , and thus @xmath87 . furthermore",
    ", @xmath88 as @xmath72 is interfering at some receiver .",
    "now , if @xmath89 for some @xmath90 both non - zero , then it must be that @xmath91 ( or a scalar multiple ) .",
    "otherwise @xmath92 and @xmath93 will be independent , and hence we will have @xmath94 and thus @xmath95 , which is not allowed .",
    "similarly , we should have @xmath96 too .",
    "this means that @xmath97 , which is not allowed .",
    "hence we can not have @xmath89 with @xmath98 both non - zero .",
    "thus , wlog , let @xmath99 ( or equivalently , some constant multiple ) .",
    "suppose @xmath100 ( which is in @xmath101 as @xmath86 and @xmath93 are independent ) and @xmath93 are independent . then @xmath102 which is not allowed .",
    "thus @xmath103 .",
    "however this means that @xmath104 for any choice of @xmath105 , which is not allowed again .",
    "a similar contradiction arises if @xmath106 .",
    "this concludes proof of 1 ) .",
    "proof of 2 ) : clearly as the sets @xmath72 , @xmath73 , and @xmath74 are all interfering sets , we must have that each of them is strictly rate @xmath5 infeasible .",
    "suppose @xmath72 is one dimensional",
    ". then @xmath84 must also be one dimensional as @xmath84 can not be two dimensional by 1 ) .",
    "but then , @xmath107 which is not allowed .",
    "thus @xmath72 must be two dimensional , and a similar argument applies for the other two sets .",
    "the following example , based on stic sets , gives a rate @xmath5 infeasible problem based on an alignment structure constructed using two stic sets , but does not have any triangular interfering sets ( unlike all known previous examples ) .",
    "this also suggest the hardness of deciding the feasibility of rate @xmath5 index coding .",
    "consider an index coding problem @xmath8 containing the alignment set structure shown in fig .",
    "[ fig : sticsetdouble ] .",
    "there are two stic sets @xmath75 and @xmath108 which share the common set @xmath73 .",
    "consider the index coding problems @xmath109 ( respectively , @xmath110 ) restricted to the stic set @xmath75 ( equivalently , @xmath108 ) and all the messages at which these messages interfere .",
    "clearly , by lemma [ sticlemma ] , @xmath73 is strictly rate @xmath7 feasible in @xmath109 , while the same set is strictly rate @xmath7 infeasible in @xmath110 .",
    "note that any rate @xmath5 feasible code for @xmath8 is also feasible for @xmath109 and @xmath110 .",
    "this means @xmath73 is simultaneously two dimensional and also not so .",
    "this is meaningless , hence we have that @xmath8 is rate @xmath5 infeasible .    as a general rule ,",
    "if there is a subset of messages which is strictly rate @xmath2 infeasible in a restricted index coding problem of the given problem , and strictly rate @xmath2 feasible in another restricted problem , then the given problem must clearly be rate @xmath5 infeasible .",
    "we now define the spic sets , using which we obtain a new class of strict @xmath7 feasible sets .     and",
    "@xmath84 are conflicting , are suppressed .",
    "definition [ squareinterferenceconfig ] has the complete details.,width=144 ]    [ squareinterferenceconfig ] a collection of messages @xmath111 is said to be a _",
    "square pyramid interference configuration ( spic ) _ set ( see fig . [",
    "fig : squareset ] ) if the following conditions hold .    * message sets @xmath112 and @xmath84 interfere at some receivers which do not demand the messages @xmath113 .",
    "* message set @xmath47 ( denoted by @xmath114 ) interferes at a receiver demanding @xmath115 , and @xmath81(denoted by @xmath116 ) interferes at a receiver demanding @xmath117 .",
    "* messages @xmath83 and @xmath118 are in conflict . * no conflicts other than the above exist between the messages @xmath113 .",
    "we now show that any spic set has to be strictly rate @xmath7 , and also give other properties which it must satisfy , in the following lemma .",
    "[ lemmaspicconditions ] a spic set @xmath119 as shown in fig .",
    "[ fig : squareset ] satisfies the following conditions .    1",
    ".   the triangular interfering sets @xmath120 and the set @xmath121 are strictly rate @xmath7 .",
    "@xmath119 is strictly rate @xmath7 .",
    "3 .   the sets @xmath122 and @xmath123 are strictly rate @xmath7 .",
    "4 .   the sets @xmath81 and @xmath47 must be strictly rate @xmath70 .    proof of 1 )",
    ": this follows by theorem [ norestrconflictstype2 ] as @xmath121 must be a subset of a type-2 alignment set , and also because @xmath84 is a triangular interference set .",
    "thus , we must have @xmath124 for any rate @xmath5 feasible assignment @xmath42 .",
    "proof of 2 ) : let @xmath42 be the encoding function of some rate @xmath5 index code .",
    "clearly @xmath125 .",
    "suppose that @xmath126 . by 1 )",
    ", we must therefore have that @xmath93 is independent of the space @xmath127 .",
    "clearly , @xmath85 and @xmath92 must be linearly independent , as @xmath117 and @xmath80 are in conflict . by 1 )",
    ", we have @xmath128 .",
    "it is easy to see that any such assignment for @xmath86 makes at least one of the sets @xmath129 and @xmath84 as three dimensional , which is not allowed .",
    "this proves 2 ) .",
    "proof of 3 ) and 4 ) : by 2 ) , it must be that @xmath130 must also be assigned vectors from the space spanned by @xmath131 . now ,",
    "if @xmath105 and @xmath85 are linearly independent , then the conflicts will not be resolved at @xmath115 .",
    "thus , we must have @xmath132 ( or a constant multiple ) . by the similar arguments",
    ", we must have @xmath133 ( for some @xmath134 ) .",
    "this is the only assignment which is possible and it can be checked that 3 ) and 4 ) hold .      in the following theorem",
    ", we show that if the strictly rate @xmath7 subsets are appended together in a certain way , then the resultant subset must be strictly rate @xmath7 .",
    "this can also be seen as a general necessary condition for rate @xmath5 feasibility based on the properties of strictly rate @xmath7 sets and their intersections .",
    "[ thm : converse ] let @xmath135 ( @xmath136 ) be strictly rate @xmath7 sets of a rate @xmath5 feasible index coding problem @xmath8 with message set @xmath67 , such that the following holds .",
    "* the sets @xmath137 are strictly rate @xmath70 infeasible .",
    "then the set @xmath138 must be strictly rate @xmath7 .",
    "thus , if the index coding problem @xmath8 restricted to @xmath139 has any @xmath140-restricted internal conflicts , then @xmath8 is not rate @xmath5 feasible .    if we are given that @xmath138 is strictly rate @xmath7 , then the claim about rate @xmath5 infeasibility follows from the necessary condition for rate @xmath7 feasibility in @xcite .",
    "hence , it is enough to show that @xmath138 is strictly rate @xmath7 .",
    "let @xmath42 be the encoding function of some @xmath5 index code .",
    "it is clear that @xmath141 , as each set @xmath38 is strictly rate @xmath7 .",
    "we prove the claim by induction on @xmath142 .",
    "the claim is true for @xmath143 by assumption that each set @xmath38 is strictly rate @xmath7 .",
    "now suppose that the statement is true upto @xmath144 .",
    "then we have @xmath145 and @xmath146 are strictly rate @xmath7 and @xmath147 is strictly rate @xmath70 infeasible .",
    "this means that @xmath148 must be strictly rate @xmath7 feasible as @xmath146 is strictly rate @xmath7 .",
    "thus , we have @xmath149 .",
    "thus @xmath150 as well , and hence @xmath151 must be strictly rate @xmath7 .",
    "now , we will give three examples of sets ( corollary [ cor : type2],[cor : xtype2 ] , and [ cor : spic ] ) which satisfy the condition in theorem [ thm : converse ] .",
    "[ cor : type2 ] any type-2 alignment set of an index coding problem @xmath8 is strictly rate @xmath7 .    let @xmath152 be the set of all triangular interfering sets in the given type-2 set .",
    "clearly each one of them is strictly rate @xmath7 .",
    "furthermore , as the type-2 set is a maximally connected set of triangular interfering sets , we can assume wlog that the sets @xmath38 are in an order such that @xmath153 contains a conflict , and thus is strictly rate @xmath70 infeasible .",
    "the corollary follows by applying theorem [ thm : converse ] .",
    "consider @xmath152 be a maximal collection of type-2 alignment sets such that @xmath153 contains at least one conflict .",
    "then the union @xmath154 is termed as extended type-2 alignment set ( xtype-2 set in short ) .",
    "we then have the following corollary , which we state without proof as it is a direct application of theorem [ thm : converse ] .",
    "[ cor : xtype2 ] any xtype-2 set of an index coding problem @xmath8 is strictly rate @xmath7 .    for our final corollary , we define spic alignment sets as follows , similar to type-2 alignment sets ( definition [ type2align ] ) .",
    "two spic subsets of @xmath64 and @xmath65 are said to be _ adjacent _ spic subsets if @xmath155 is strictly rate @xmath70 infeasible .",
    "the spic sets @xmath64 and @xmath65 are called connected if there exists a sequence of adjacent spic sets from @xmath64 to @xmath65 .",
    "a spic alignment set is a maximal set of spic subsets which are connected to each other .",
    ", @xmath156 , @xmath157 , @xmath158 and @xmath159 are all spic sets .",
    "the pair - wise intersections in the same sequence are @xmath160,@xmath123,@xmath161 and @xmath162 respectively , and all such intersections are strictly rate @xmath70 infeasible .",
    "the messages within the ellipses interfere at the messages as mentioned in the ellipse.,width=336 ]    fig .",
    "[ fig : squaresetconnected ] shows an example shows an example of a spic alignment set .",
    "we now give the related result .",
    "[ cor : spic ] a spic alignment set of @xmath8 is strictly rate @xmath7 .    let @xmath163 be the spic alignment set .",
    "let @xmath152 be the set of all spic sets which comprise @xmath164 , ordered such that @xmath165 is connected to @xmath166 ( we can assume this wlog as @xmath164 is maximally connected set of spic sets ) .",
    "the corollary follows by applying theorem [ thm : converse ] .",
    "the sets described in corollaries [ cor : type2 ] , [ cor : xtype2 ] , [ cor : spic ] are only a few examples of the possible configurations of strictly rate @xmath7 sets in @xmath8 .",
    "we can imagine several other configurations as well , involving a mixture of xtype-2 sets , spic sets , and other strictly rate @xmath7 sets ( if they exist ) , satisfying the conditions in theorem [ thm : converse ] , leading to bigger structures which must be strictly rate @xmath7 .",
    "an interesting open question is to determine if there a finite number of basic substructures , like the triangular interfering sets , spic sets , such that their maximally connected versions should satisfy specific properties for rate @xmath5 feasibility .",
    "in this section , we introduce the notion of contraction of an alignment edge and contraction of an index coding problem .",
    "we prove that an index code for the contraction of an index coding problem can be extended to that of the original index coding problem .",
    "we also give a sufficient condition in terms of xtype-2 sets in the maximal contraction of an index coding problem for the original index coding problem to be rate @xmath5 feasible .",
    "[ def : contraction ] an alignment edge connecting two vertices ( messages ) @xmath30 and @xmath51 which are not in conflict is said to be _ contracted _ by identifying the vertices as a single vertex thereby making all the edges ( alignment edges and conflict hyperedges ) that were incident on @xmath30 and @xmath51 now incident on the newly created vertex .    when we contract any alignment edge , note that we get a derived index coding problem with one less the number of messages . the derived index coding problem is completely characterised by the contracted alignment graph and the correspondingly altered conflict graph .",
    "we can envision a sequence of such derived index coding problems , obtained by a sequence of contractions of the alignment set of the original problem , each with one lesser message than the previous . abusing the definition ,",
    "an index coding problem @xmath9 is said to be a _ contraction of _ an index coding problem @xmath8 if it is obtained by a finite sequence of contractions of the alignment edges of @xmath8 .",
    "the following definition captures the maximal cases after which we can not contract anymore .",
    "let @xmath52 be a given index coding problem .",
    "let @xmath167 be an index coding problem obtained by a sequence of contractions of @xmath8 , such that any two messages of @xmath167 connected by an alignment edge are also in conflict in @xmath167 .",
    "then @xmath167 is said to be a maximal contraction of @xmath8 .",
    "[ lem : contract ] let @xmath9 be a contraction of @xmath8 . any scalar linear index coding solution of rate @xmath168 for @xmath9 can extended to a scalar linear index coding solution of rate @xmath168 for @xmath8 .",
    "wlog , consider that symbols @xmath170 and @xmath171 in @xmath8 were contracted to get @xmath9 .",
    "we denote the new symbol ( vertex ) which is created as the message @xmath172 . the vector of messages , the demand sets , the side - information sets and the interfering sets of @xmath9 ( denoted as @xmath173 and @xmath174 respectively ) can be obtained from those of @xmath8 by replacing @xmath175 with @xmath176 , and replacing @xmath177 with @xmath172 .",
    "we note that the number of receivers remains unchanged in @xmath9 .",
    "consider the encoding function @xmath183 for @xmath8 defined as follows .",
    "@xmath184 we will now show that this assignment resolves all conflicts .",
    "consider a message @xmath35 for some @xmath185 demanded at some receiver @xmath21 .",
    "thus @xmath186 .",
    "for some message @xmath35 demanded at receiver @xmath21 , suppose @xmath187 does not contain @xmath177",
    ". then @xmath188 ( except for the ` dashes ' ) .",
    "if @xmath187 contains @xmath189 then @xmath174 contains @xmath172 in the place of @xmath171 , apart from having other ` dashed ' messages corresponding to those in @xmath187 . in any case",
    ", we must have @xmath190 by ( [ eqn100 ] ) and ( [ eqn101 ] ) , we have @xmath191 .",
    "now we consider @xmath170 ( equivalently , @xmath177 ) demanded at receiver @xmath21 .",
    "the receiver @xmath21 in @xmath9 demands the symbol @xmath172 , and it is given that ( [ eqn100 ] ) holds .",
    "clearly , @xmath192 does not contain @xmath172 .",
    "this means that @xmath193 ( equivalently , @xmath194 ) does not contain @xmath171 or @xmath170 .",
    "thus , by similar arguments as above , we must have @xmath195 ( equivalently , @xmath196 ) . by assignment @xmath183 , we have @xmath197 ( equivalently , @xmath198 ) .",
    "thus all the conflicts in @xmath8 are resolved .",
    "this concludes the proof .",
    "[ thm : suff_condition ] a rate @xmath7 infeasible index coding problem @xmath52 is rate @xmath5 feasible if there exists a maximal contraction @xmath199 of the index coding problem @xmath52 such that the following conditions hold :    a.   any xtype-2 set in @xmath199 has no restricted internal conflicts .",
    "b.   no three xtype-2 sets have a message vertex in common .",
    "c.   for any distinct xtype-2 sets @xmath200 , if @xmath201 , then there is no conflict between any two messages in @xmath202 .    to prove the theorem , we will give a solution to index coding problem @xmath199 and then apply lemma [ lem : contract ] to extend the solution to the actual index coding problem @xmath52 .",
    "for notational convenience , we will drop the dash associated with the variables corresponding to the index coding problem @xmath199 ( we will however refer to index coding problem as @xmath199 ) .",
    "let @xmath203 denote the xtype-2 sets of @xmath9 . by assumption , we have @xmath204 , for all distinct @xmath205 .",
    "note that the condition ( c ) implies that there is no alignment edge between any two messages in @xmath202 , as @xmath199 is a maximal contraction .    consider a graph which has @xmath142 vertices , where each vertex represents an xtype-2 set .",
    "there is an edge between two vertices in this graph , if the two xtype-2 sets intersect in one or more messages .",
    "we will refer to this graph as the extended type-2 intersection graph ( etig ) .",
    "we will first assign vectors to the edges in etig and then use that in turn to come up with an assignment for the messages in the index coding problem @xmath199 .",
    "the algorithm to assign vectors to the edges of the etig is as follows .",
    "we start with the assumption that the edge set is non - empty , else the algorithm terminates straightaway .",
    "we repeat the below steps until all edges have been assigned vectors .    1 .",
    "pick an unassigned edge @xmath206 between vertices @xmath207 and @xmath21 .",
    "let @xmath208 denote the set of vectors already assigned to edges incident on vertex @xmath207 and similarly @xmath209 .",
    "2 .   suppose both @xmath210 and @xmath211 are not @xmath212-dimensional , then assign a random @xmath213 vector to the edge .",
    "3 .   suppose exactly one of @xmath210 or @xmath211 is @xmath212-dimensional .",
    "for example , let @xmath210 be @xmath212-dimensional .",
    "then , a random @xmath214 vector from @xmath210 is assigned to the edge .",
    "4 .   suppose both @xmath210 and @xmath211 are @xmath212-dimensional .",
    "then , a @xmath214 vector from the intersection @xmath215 is assigned to the edge .",
    "such a vector always exists in the intersection since both @xmath210 and @xmath211 are @xmath212-dimensional subspaces of a @xmath216-dimensional space .",
    "we note that at the end of the algorithm , each vertex with degree at least one in etig has a set of vectors associated with edges incident on them , the span of which is either @xmath70-dimensional or @xmath212-dimensional .",
    "an example etig and assignment of vectors to the edges in the graph is illustrated in fig .",
    "[ fig : xtype2_vectors ] .      1 .",
    "firstly , vectors are assigned to the messages in the intersections of xtype-2 sets .",
    "we assign the same vector to all the messages in the intersection @xmath202 .",
    "we pick the vector which was assigned to the edge which joined the vertices corresponding to @xmath217 and @xmath218 xtype-2 set in etig and assign it to all the messages in the intersection @xmath202 .",
    "this step is repeated for all intersections of xtype-2 sets .",
    "2 .   at the end of the above step , the messages in @xmath38s maybe partially assigned . to assign vectors to remaining messages ( if such non - assigned messages exist ) in",
    "the xtype-2 sets @xmath38s , we consider the following three subcases : 1 .   for any @xmath207 , if there is just one index @xmath21 such that @xmath201 , then we have assigned only one vector to @xmath38 at the end of step 1 ) .",
    "let the vector be denoted by @xmath219 .",
    "now , we pick another @xmath214 random vector @xmath220 .",
    "then , we assign a random vector in the span of @xmath219 and @xmath220 to each message in @xmath38 .",
    "2 .   for any @xmath207 ,",
    "if there is more than one index @xmath21 such that @xmath201 , then we have assigned a @xmath212-dimensional space to messages in @xmath38 at the end of step 1 ) . to each of the remaining messages in @xmath38",
    ", we assign a random vector from the same @xmath212-dimensional space .",
    "3 .   for any @xmath207 , if there is no index @xmath21 such that @xmath201 ( corresponds to isolated vertices in etig ) , then we first pick a randomly generated @xmath212-dimensional space . then",
    ", we assign a random @xmath213 vector in the @xmath212-d space to each message in the @xmath217 xtype-2 set .",
    "3 .   for all other messages in @xmath9 ( not in xtype-2 sets )",
    ", we assign a random @xmath213 vector .",
    "let @xmath42 denote the encoding function corresponding to this assignment and @xmath221 denote the vector assigned to the message @xmath35 .",
    "we now show that this assignment resolves all conflicts in @xmath199 , i.e. , with high probability @xmath222 .",
    "consider a receiver @xmath21 which requests a message @xmath35 .",
    "we will classify all the conflicts into the following cases and verify that conflicts are resolved in each case .    1 .",
    "if @xmath223 , then the conflict is resolved , since any two messages which are in conflict are assigned linearly independent vectors according to the scheme .",
    "it is only the intersections of xtype-2 sets which are assigned the same vector and we have already noted earlier that all the messages in any given intersection do not have any conflicts within them .",
    "2 .   consider the case when @xmath224 .",
    "the two messages within the set @xmath49 should have a conflict between them since @xmath199 is the maximal contraction .",
    "now , we have the following two sub cases : 1 .",
    "both @xmath35 and @xmath49 belong to a xtype-2 alignment set .",
    "this is not possible since then the xtype-2 set will have a restricted internal conflict .",
    "2 .   for any configuration of @xmath35 and @xmath49",
    "other than the case considered above , the conflict is resolved .",
    "this is true because any three messages which do not all belong to an xtype-2 alignment set and which have conflicts between them are assigned three linearly independent vectors according to the scheme . here again , note that @xmath49 can not be contained within the intersection of two xtype-2 sets ( since all the messages in any given intersection do not have any conflicts within them ) .",
    "3 .   consider the case when @xmath225 .",
    "we note that in the maximal contraction @xmath199 , any triangular interfering set of @xmath199 has to be contained within a type-2 alignment set and hence within a xtype-2 set .",
    "thus , @xmath49 is contained within a xtype-2 set . also since xtype-2 sets of @xmath199 are assumed to have no restricted internal conflicts",
    ", @xmath35 has to be outside the xtype-2 set .",
    "since @xmath49 lies within a xtype-2 set and the messages within a xtype-2 set are assigned vectors from a two dimensional space , @xmath226 is a two dimensional space .",
    "noting that @xmath221 is a random @xmath213 vector , we have that @xmath222 with high probability .",
    "hence , the conflict is resolved .",
    "thus , all the conflicts in @xmath199 are resolved .",
    "now , the solution given above can be extended to give a solution of the original index coding problem @xmath52 by uncontracting one alignment edge at a time and doing an assignment as described in the proof of lemma [ lem : contract ] .",
    "this concludes the proof .",
    "we claim that theorem [ thm : main ] can be seen as a special application of theorem [ thm : suff_condition ] ( which is the most general result known so far for rate @xmath5 feasible problems ) , and this can be shown using the proof details of theorem [ thm : main ] which is available in @xcite .",
    "we leave the details to the reader .",
    "160 y. birk and t. kol ,  coding on demand by an informed source ( iscod ) for efficient broadcast of different supplemental data to caching clients  , ieee transactions on information theory , vol .",
    "6 , june , 2006 , pp .",
    "2825 - 2830 .",
    "l. ong , c. k. ho , and f. lim ,  the single - uniprior index - coding problem : the single - sender case and the multi - sender extension , \" ieee transactions on information theory , vol .",
    "62 , no . 6 , june 2016 , pp .",
    "3165 - 3182 .",
    "k. shanmugam , a. g. dimakis , and m. langberg , `` local graph coloring and index coding '' , proceedings of ieee international symposium on information theory ( isit ) 2013 , istanbul , turkey , jul 7 - 12 , pp .",
    "1152 - 1156 .",
    "a. blasiak , r. kleinberg , and e. lubetzky ,  broadcasting with side information : bounding and approximating the broadcast rate  , ieee transactions on information theory , vol .",
    "2013 , pp .",
    "5811 - 5823 ."
  ],
  "abstract_text": [
    "<S> linear index coding can be formulated as an interference alignment problem , in which precoding vectors of the minimum possible length are to be assigned to the messages in such a way that the precoding vector of a demand ( at some receiver ) is independent of the space of the interference ( non side - information ) precoding vectors . </S>",
    "<S> an index code has rate @xmath0 if the assigned vectors are of length @xmath1 . in this paper , we introduce the notion of strictly rate @xmath2 message subsets which must necessarily be allocated precoding vectors from a strictly @xmath3-dimensional space ( @xmath4 ) in any rate @xmath5 code . we develop a general necessary condition for rate @xmath5 feasibility using intersections of strictly rate @xmath2 message subsets . </S>",
    "<S> we apply the necessary condition to show that the presence of certain interference configurations makes the index coding problem rate @xmath5 infeasible . </S>",
    "<S> we also obtain a class of index coding problems , containing certain interference configurations , which are rate @xmath5 feasible based on the idea of _ contractions _ of an index coding problem . our necessary conditions for rate @xmath5 feasibility and the class of rate @xmath5 feasible problems obtained subsume all such known results for rate @xmath5 index coding . </S>"
  ]
}
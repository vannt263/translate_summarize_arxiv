{
  "article_text": [
    "evolution has traditionally been a formidable subject to study due to its gradual pace in the natural world .",
    "one successful method uses microscopic organisms with generational times as short as an hour , but even this approach has difficulties ; it is still impossible to perform measurements without disturbing the system , and the time - scales to see significant adaptation remain on the order of weeks , at best .",
    "recently , a new tool has become available to study these problems in a computational medium  the use of populations of self - replicating computer programs .",
    "these `` digital organisms '' are limited in speed only by the computers used , with generations in a typical trial taking a few seconds .",
    "of course , many differences remain between digital and simple biochemical life , and we address one of the critical ones in this paper . in nature , many chemical reactions and genome expressions occur simultaneously , with a system of gene regulation guiding their interactions .",
    "however , in digital organisms only one instruction is executed at a time , implying that no two sections of the program can directly interact . due to this , an obvious extension is to examine the dynamics of adaptation in artificial systems that have the capacity for more than one thread of execution ( i.e. , an independent cpu with its own instruction pointer , operating on the same genome ) .",
    "work in this direction began in 1994 with thearling and ray using the program tierra  @xcite .",
    "these experiments were initialized with an ancestor that creates two threads each copying half of its genome , thereby doubling its replication rate .",
    "evolution then produces more threads up to the maximum allowed  @xcite . in subsequent papers  @xcite this research extended to organisms",
    "whose threads are not performing identical operations .",
    "this is done in an enhanced version of the tierra system ( *  network tierra * ",
    "@xcite ) , in which multiple `` islands '' of digital organisms are processed on real - world machines across the internet . in these later experiments ,",
    "the organisms exist in a more complex environment in which they have the option of seeking other islands on which to place their offspring .",
    "the ancestor used for these experiments reproduces while searching for better islands using independent threads .",
    "thread differentiation persists only when island - jumping is actively beneficial ; that is , when a meaningful element of complexity is present in the environment .    in experiments reported on here ,",
    "we survey the initial emergence of multiple threads and study their subsequent divergence in function .",
    "we then investigate the hypothesis that environmental complexity plays a key role in the pressure for the thread execution patterns to differentiate .",
    "we use the avida platform to examine the development of multi - threading in populations exposed to different environments at distinct levels of complexity , comparing them to each other and to controls that lack the capacity for multiple threads .",
    "avida is an auto - adaptive genetic system designed for use as a platform in artificial life research .",
    "the avida system comprises a population of self - reproducing strings of instructions that adapt to both an intrinsic fitness landscape ( self - reproduction ) and an externally imposed ( extrinsic ) bonus structure provided by the researcher .",
    "a standard avida organism is a single genome composed of a sequence of instructions that are processed as commands to the cpu of a virtual computer .",
    "this genome is loaded into the memory space of the cpu , and the execution of each instruction modifies the state of that cpu .",
    "in addition to the memory , a virtual cpu has three integer registers , two integer stacks , an input / output buffer , and an instruction pointer . in standard avida experiments ,",
    "an organism s genome has one of 28 possible instructions at each line .",
    "the virtual cpus are turing - complete , and therefore do not explicitly limit the ability for the population to adapt to its computational world . for more details on avida , see  @xcite .    to allow different sections of a program to be executed in parallel ,",
    "we have implemented three new instructions .",
    "a new thread of execution is initiated with fork - th .",
    "this thread has its own registers , instruction pointer , and a single stack , all initialized to be identical to the spawning thread .",
    "the second stack is shared to facilitate communication among threads .",
    "only the new thread will execute the instruction immediately following the fork - th ; the original will skip it enabling the threads to act and adapt independently .",
    "if , for example , a jump instruction is at this location , it may cause the new thread to execute a different section of the program ( _ segregated differentiation _ ) , whereas a mathematical operation could modify the outcome of subsequent calculations ( _ overlapping differentiation _ ) . on the other hand ,",
    "a no - operation instruction at this position allows the threads to progress identically ( _ non - differentiated _ ) .",
    "we have also implemented kill - th , an instruction that halts the thread executing it , and id - th , which places a unique thread identification number in a register , allowing the organism to conditionally regulate the execution of its genome .",
    "we performed experiments on three environments of differing complexity , with both the extended instruction set that allows multiple expression patterns and the standard instruction set as a control . as individual trials can differ extensively in the course of their evolution , each setup was repeated in two hundred trials to gain statistical significance .",
    "the experiments were performed on populations of 3600 digital organisms for 50,000 updates .",
    "mutations are set at a probability of 0.75% for each instruction copied , and a 5% probability for an instruction to be inserted or removed in the genome of a new offspring .",
    "the first environment ( i ) is the least complex , with no explicit environmental factors to affect the evolution of the organisms ; that is , the optimization of replication rate is the only adaptive pressure on the population . the next environment ( ii ) , has collections of numbers that the organisms may retrieve and manipulate .",
    "we can view the successful computation of any of twelve logical operations that we reward as beneficial metabolic chemical reactions , and speed - up the virtual cpu accordingly ; more complex tasks result in larger speed - ups .",
    "if the speed increase is more than the time expended to perform the task , the new functionality is selected for . the final environment ( iii ) studied is the most complex , with 80 logic operations rewarded .",
    "a record is maintained of the development of the population , including the genomes of the most abundant organisms .",
    "for each trial , these dominant genomes are analyzed to produce a time series of thread use and differentiation .",
    "the following measures and indicators keep track of the functional differentiation of codes .",
    "we keep this initial analysis manageable by setting a maximum of two threads available to run simultaneously .",
    "the relaxation of this constraint does lead to the development of more than two threads with characteristically similar interactions .",
    "* thread distance * measures the spatial divergence of the two instruction pointers .",
    "this measurement is the average _ distance _ ( in units of instructions ) between the execution positions of the individual threads .",
    "if this value becomes high relative to the length of the genome , it is an indication that the threads are segregated , executing different portions of the genome at any one time , whereas if it is low , they likely move in lock - step ( or sightly offset ) with nearly identical executions .",
    "note , however , that if two instruction pointers execute the code offset by a fixed number of instructions , but otherwise identically , the thread distance is an inflated measure of differentiation because the temporal offset does not translate into differing functionality .",
    "* code differentiation * distinguishes execution patterns with differing _ behavior_. a count",
    "is kept of how often each thread executes each portion of the genome .",
    "the code differentiation is the fraction of instructions in the genome for which these counts differ between threads .",
    "thus , this metric is insensistive to the ordering of execution .    * execution differentiation * is a more rigorous measure than code differentiation .",
    "it uses the same counters , taking into consideration the _ difference _ in the number of times the threads execute each instruction .",
    "thus , if one thread executes a line 5 times and the other executes it 4 times , it would not contribute as much towards differentiation as an instruction executed all 9 times by one thread , and not at all by the other .",
    "this metric totals these differences in execution counts at each line and then divides the sum by the total number of multi - threaded executions .",
    "thus , if the threads are perfectly synchronized , there is zero execution differentiation , and if only one thread exclusively executes each line , this metric is maximized at one .",
    "an execution differentiation of 0.5 indicates that half of the instructions did not have matched executions in each thread .",
    "for our initial investigations , we focus on the 200 trials in environment iii ( the most complex ) , with the extended instruction set , allowing for multi - threading .",
    "describing a universal course of evolution in any medium is not feasible due to the numerous random and contingent factors that play key roles .",
    "however , there are a number of distinct trends , which will be discussed further .",
    "let us first consider the transition of organisms from a purely linear execution to the use of multiple threads . in fig .",
    "[ firstfig]a , we see that most populations do develop a secondary thread near the beginning of their evolution .",
    "secondary threads come into use as soon as they grant any benefit to the organisms .",
    "the most common way this occurs is by having a fork - th and a kill - th appear around a section of code , which the threads thereby move through in lock - step , performing computations twice .",
    "multiple completions of a task provide only a minor speed bonus , but this is often sufficient to warrant a double execution .",
    "once multiple execution has set in , it will be optimized with time .",
    "smaller blocks of duplicated code will be expanded , and larger sections will be used more productively , sometimes even shrinking to improve efficiency . once multiple threads are in use , differentiation follows .",
    "a critical question is `` what effect does a secondary thread have on the process of evolution ? ''",
    "the primary measure to denote a genome s level of adaptation to an environment is its _ fitness_. the fitness of a digital organism is measured as the number of offspring it produces per unit time , normalized to the replication rate of the ancestor . in all experiments ,",
    "the fitness of the dominant genotype starts at one and increases as the organisms adapt .",
    "fitness improvements come in two forms : the maximization of cpu speed by task completion , and the minimization of gestation time .",
    "as all tasks must be computed each gestation cycle to maintain a reward , this gestation time minimization includes the _ optimization _ of tasks in addition to speed - ups in the replication process .",
    "the average progression of fitness with time is shown in fig .",
    "[ statsfig]a for both the niche with the expanded instruction set that allows multiple threads , and the standard , linear execution niche as a control .",
    "contrary to expectations , the niche that has additional threads available gives rise to a slower rate of adaptation .",
    "however , the average length of the genomes ( fig .  [ statsfig]b ) reveals that the code for these marginally less fit organisms is stored using 40% fewer instructions , indicating a denser encoding .",
    "indeed , the very fact that multi - threading develops spontaneously implies that it is beneficial .",
    "how then can a beneficial development be detrimental to an organism s fitness ?",
    "inspection of evolved genomes has allowed us to determine that this code compression is accomplished by overlapping execution patterns that differ in their final product .",
    "[ mapfig]a displays an example genome .",
    "the initial thread of execution ( the inner ring ) begins in the @xmath0 `` gene '' and proceeds clockwise .",
    "the execution of @xmath0 divides the organism when it has a fully developed copy of itself ready .",
    "this is not the case for this first execution , so the gene fails with no effect to the organism .",
    "execution progresses into gene @xmath1 where computational tasks are performed , increasing the cpu speed . near the center of @xmath1 ,",
    "a fork - th instruction is executed initiating secondary execution ( of the same code ) at line 27 , giving rise to gene @xmath2 .",
    "the primary thread continues to line 55 , the @xmath3 gene , where genome size is calculated and the memory for its offspring is allocated .",
    "next , the primary instruction pointer runs into gene @xmath4 , the copy loop , where replication occurs .",
    "it is executed once for each of the 99 instructions in the genome ( hence its dark color in the figure ) .",
    "when this process is complete , it moves on through gene @xmath5 shuffling numbers around , and re - enters gene @xmath0 for a final division .    during this time , the secondary thread executes gene @xmath2 computing a few basic logical operations .",
    "@xmath2 ends with a jump - f ( jump forward ) instruction that initially fails . passing through gene @xmath6 ,",
    "numbers are shuffled within the thread and the jump at line 72 diverts the execution back to the beginning of the organism . from this point on ,",
    "its execution loops through @xmath7 and @xmath2 for a total of 10 times , using the results of each pass as inputs to the next , computing different tasks each time . note that for this organism , the secondary thread is never involved in replication .",
    "similar overlapping patterns appear in natural organisms , particularly viruses .",
    "[ mapfig]b exhibits a gene map of the phage @xmath8x174 containing portions of genetic code that are expressed multiple times , each resulting in a distinct protein  @xcite .",
    "studies of evolution in the overlapping genes of @xmath8x174 and other viruses have isolated the primary characteristic hampering evolution .",
    "multiple encodings in the same portion of a genome necessitate that mutations be neutral ( or beneficial ) in their net effect over _ all _ expressions or they are selected against .",
    "fewer neutral mutations result in a reduced variation and in turn slower adaptation .",
    "it has been shown that in both viruses  @xcite and avida organisms  @xcite , overlapping expressions have between 50 and 60% of the variation of the non - overlapping areas in the same genome , causing genotype space to be explored at a slower pace .    in higher organisms , multiple genes",
    "do develop that overlap in a portion of their encoding , but are believed to be evolved out through gene duplication and specialization , leading to improved efficiency  @xcite .",
    "unfortunately , viruses and avida organisms are both subject to high mutation rates with no error correction abilities .",
    "this , in turn , causes a strong pressure to compress the genome , thereby minimizing the target for mutations . as this is an immediate advantage ,",
    "it is typically seized , although it leads to a decrease in the adaptive abilities of the population in the long term .",
    "now that we have witnessed the development of multiple threads of execution in avida , let us examine the impact of environmental complexity on this process .",
    "populations in all environments learn to use their secondary thread quite rapidly , but show a marked difference in their ability to diverge the threads into distinct functions . in fig",
    "[ difffig]a , average thread distance is displayed for all trials in each environment showing a positive correlation between the divergence of threads and the complexity of the environment they are evolving in .",
    "more complex environments provide more information to be stored within the organism , promoting longer genomes  @xcite , and possibly biasing this measure . to account for this , we consider this average thread distance normalized to the length of the organisms , displayed in fig  [ difffig]b .",
    "when threads fully differentiate , they often execute neighboring sections of code , regardless of the length of the genome they are in , biasing this measurement in the opposite direction .",
    "longer genomes need their threads to be further spatially differentiated in order to obtain an equivalent fractional thread distance .",
    "thus , the fact that more complex environments give rise to a marginally higher fractional distance is quite significant .",
    "interestingly , code differentiation ( fig  [ difffig]c ) does not firmly distinguish the environments , averaging at about 0.5 .",
    "in fact , the distribution of code differentiation turns out to be nearly uniform .",
    "this indicates that the portion of the genomes that are involved with the differentiated threads are similarly distributed between complexity levels .",
    "execution differentiation ( the measure of the fraction of executions that occurred differently between threads , shown in fig  [ difffig]d ) , however , once again positively correlates environments with thread divergence .",
    "the degree of differentiation between the execution patterns is much more pronounced in the more complex environments .",
    "we have witnessed the development and differentiation of multi - threading in digital organisms , and exhibited the role of environmental complexity in promoting this differentiation .",
    "although this is an inherently complex process , the ability to examine almost any detail and dynamic within the framework of * avida * provides insight into what we believe are fundamental properties of biological and computational systems .",
    "the patterns of expression ( lock - step , overlapping , and spatial differentiation ) are selected by balancing the `` physiological '' costs of execution and differentiation against the implicit effects of mutational load .",
    "clearly , multiple threads executing single regions of the genome provides for additional use of that region .",
    "the benefit is in the form of additional functionality and a reduction in the mutational load required for that functionality . within the context of this thinking ,",
    "the correlation between environmental complexity and the usage of multiple threads makes a great deal of sense : multiple threads are advantageous only if they can provide additional functionality .",
    "however , we have witnessed the cost side in this equation : when a gene or gene product is used in multiple pathways , variations are reduced as the changes to each gene must result in a net benefit to the organism .",
    "we observed a negative correlation between rates of adaptation and use of multiple threads .",
    "furthermore , the ability to analyze the entropy of each site in the genome quantifies the loss in variability predicted by this hypothesis .",
    "this entropy analysis has been carried out in a biological context by schneider  @xcite , opening up opportunities to verify our results .",
    "implications of this work with potentially far reaching consequences for computer science involve the study of _ how _ the individual threads interact and what techniques the organisms implement to obtain mutually robust operations .",
    "the internal interactions within computer systems lack the remarkable stability of biological systems to a noisy , and often changing environment .",
    "life as we know it would never have reached such vast multi - cellularity if every time a single component failed or otherwise acted unexpectedly , the whole organism shut down .    clearly , we are still taking the first steps in developing systems of computer programs that interact on similarly robust levels . here",
    "we have performed experiments on a simple evolutionary system as a step towards deciphering these biological principles as applied to digital life . in the future , we plan to add explicit costs for multi - threading that depend on the _ local _ availability of resources for thread execution .",
    "systems at levels of integration anywhere near that of biological life are still a long way off , but more concrete concepts such as applying principles from gene regulation to develop self - scheduling parallel computers may be much closer .",
    "0.2 cm this work was supported by the national science foundation under grant no .",
    "g.h . was supported in part by a surf fellowship from caltech .",
    "access to a beowulf system was provided by the center for advanced computing research at the california institute of technology .",
    "we would like to thank an anonymous referee for useful comments .",
    "ofria c and adami c , evolution of genetic organization in digital organisms , _ proc . of dimacs workshop on evolution as computation _ , jan 11 - 12 , princeton university , landweber l and winfree e , eds .",
    "( springer - verlag , ny , 1999 ) .",
    "ray ts and hart j , evolution of differentiated multi - threaded digital organisms , in _ proc .",
    "of artificial life vi _ , adami c , belew rk , kitano h , and taylor ce , eds .",
    "( mit press , cambridge , ma , 1998 ) , p. 295 ."
  ],
  "abstract_text": [
    "<S> we investigate the evolutionary processes behind the development and optimization of multiple threads of execution in digital organisms using the avida platform , a software package that implements darwinian evolution on populations of self - replicating computer programs . </S>",
    "<S> the system is seeded with a linearly executed ancestor capable only of reproducing its own genome , whereas its underlying language has the capacity for multiple threads of execution ( i.e. , simultaneous expression of sections of the genome . ) </S>",
    "<S> we witness the _ evolution _ to multi - threaded organisms and track the development of distinct expression patterns . </S>",
    "<S> additionally , we examine both the evolvability of multi - threaded organisms and the level of thread differentiation as a function of environmental complexity , and find that differentiation is more pronounced in complex environments . </S>"
  ]
}
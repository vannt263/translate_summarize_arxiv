{
  "article_text": [
    "_ motivation . _",
    "a fundamental theoretical task in the study of boolean functions is to relate the size of their encodings in different representation languages . in particular , the representation of circuits as binary decision diagrams ( also known as branching programs ) has been the subject of intense study in complexity theory ( see , for instance  ( * ? ? ?",
    "* chapter  14 ) and ( * ? ? ?",
    "* part v ) ) . in this paper , we study the _ ordered binary decision diagram ( obdd ) _ representations of boolean functions given as propositional formulas in _ conjunctive normal form ( cnf)_. in contrast to other variants of binary decision diagrams , equivalence of obdds can be decided in polynomial time , a crucial feature for basic applications in the areas of verification and synthesis @xcite .",
    "perhaps somewhat surprisingly , the question of which classes of cnfs can be represented as ( or _ compiled _ into , in the jargon of knowledge representation ) obdds of polynomial size is largely unexplored  ( * ? ? ?",
    "* chapter  4 ) .",
    "we approach this classification problem by considering _ structurally _ characterized cnf classes , that is , classes of cnf formulas defined in terms of properties of their _ incidence graphs _ ( the incidence graph of a formula is the bipartite graph on clauses and variables where a variable is adjacent to the clauses it occurs in ) .",
    "figure  [ fig : hierarchy ] depicts a hierarchy of wellstudied bipartite graph classes as considered by lozin and rautenbach  ( * ? ? ?",
    "* figure  2 ) .",
    "this hierarchy is particularly wellsuited for our classification project as it includes prominent cases such as beta acyclic cnfs  @xcite and bounded cliquewidth cnfs @xcite .",
    "when located within this hierarchy , the known bounds on the obdd size of structural cnf classes leave a large gap ( depicted _ on the left _ of figure  [ fig : hierarchy ] ) :    * on the one hand , we have a polynomial upper bound on the obdd size of bounded treewidth cnf classes proved recently by razgon @xcite .",
    "the corresponding graph classes are located at the bottom of the hierarchy .",
    "* on the other hand , there is an exponential lower bound for the obdd size of general cnfs , proved two decades ago by devadas  @xcite .",
    "the corresponding graph class is not chordal bipartite , has unbounded degree and unbounded cliquewidth , and hence is located at the top of the hierarchy .    _ contribution . _ in this paper , we tighten this gap as illustrated _ on the right _ in figure  [ fig : hierarchy ] .",
    "more specifically , we prove new bounds for two structural classes of cnfs .",
    "our first result is a polynomial upper bound :    * result 1 .",
    "* cnfs whose incidence graphs are _",
    "variable convex _ have polynomial obdd size ( theorem  [ th : leftconvex ] ) .    convexity is a property of bipartite graphs that has been extensively studied in the area of combinatorial optimization  @xcite , and that can be detected in linear time  @xcite . to prove result  1",
    ", we define a property of cnf classes , called the _",
    "few subterms _ property , that naturally arises as a sufficient condition for polynomial size compilability when considering obdd representations of cnf formulas ( theorem  [ th : psizeimpliesptime ] ) , and then prove that cnfs with variable convex incidence graphs have this property ( lemma  [ lemma : convexsmallproj ] ) . the few subterms property can also be invoked in proving the previously known result that classes of cnfs with incidence graphs of _ bounded treewidth _ have obdd representations of polynomial size ( lemma  [ lemma : twfewsubterms ] ) .",
    "in fact , both the result on variable convex cnfs and the result on bounded treewidth cnfs can be improved to polynomial _ time _",
    "compilation by appealing to a stronger version of the few subterms property ( theorem  [ th : leftconvex ] and theorem  [ th : twpolytime ] ) .    in an attempt to push the few subterms property",
    "further , we adopt the language of _ parameterized complexity _ to formally capture the idea that cnfs close  to a class with few subterms have small  obdd representations .",
    "more precisely , defining the _ deletion distance _ of a cnf from a cnf class as the number of its variables or clauses that have to be deleted in order for the resulting formula to be in the class , we prove that cnfs have fixedparameter tractable obdd size parameterized by the deletion distance from a cnf class with few subterms ( theorem  [ th : fptsizecompiln ] ) .",
    "this result can again be improved to fixedparameter _ time _",
    "compilation under additional assumptions ( theorem  [ th : fptcompil ] ) , yielding for instance fixedparameter tractable time compilation of cnfs into obdds parameterized by the _",
    "feedback vertex set _ size ( corollary  [ cor : fvs ] ) .",
    "our second result is an exponential lower bound :    * result 2 .",
    "* there is a class of cnf formulas with incidence graphs of bounded degree such that every formula  @xmath0 in this class has obdd size at least @xmath1 , where @xmath2 denotes the number of variable occurrences in @xmath0 ( theorem  [ thm : mainnontechnical ] ) .",
    "observe that this bound is tight : every cnf on @xmath3 variables has an obdd of size @xmath4 . to establish the lower bound we use the powerful combinatorial machinery of _ expander graphs_. despite expander graphs appearing in many areas of mathematics and computer science @xcite , including circuit and proof complexity  @xcite ,",
    "their application in this setting is novel and allows us to improve the best known lower bound on the obdd size of cnfs  @xcite in two ways .    *",
    "first , the formulas used to prove the latter bound give rise to obdds of size @xmath5 but `` only '' yield lower bounds of the form @xmath6 . *",
    "second , our lower bound is established for cnf formulas that satisfy strong syntactic restrictions : each clause has exactly two positive literals and each variable occurs at most @xmath7 times ; in particular , it holds for _ read @xmath7 times monotone @xmath8cnf _ formulas .",
    "this nicely complements the known fact that readonce formulas have polynomial obdd size  @xcite ; to the best of our knowledge , it was not even known that @xmath7 times formulas have superpolynomial obdd size .",
    "_ organization . _",
    "the paper is organized as follows . in section",
    "[ sect : prel ] , we introduce basic notation and terminology . in section  [",
    "sect : positive ] , we prove that the few subterms property implies polynomial obdd size for cnf classes , and prove that variableconvex cnfs ( and bounded treewidth cnfs ) have the few subterms property ( fixedparameter tractable size and time compilability results based on the few subterms property are presented in section  [ sect : fpt ] ) . in section  [",
    "sect : negative ] , we prove an exponential lower bound on the obdd size of cnf formulas based on expander graphs . finally , we present our conclusions in section  [ sect : conclusion ] .",
    "let @xmath9 be a countable set of _",
    "variables_. a _ literal _ is a variable @xmath10 or a negated variable @xmath11 . if @xmath10 is a variable we let @xmath12 .",
    "a _ clause _ is a finite set of literals . for a clause @xmath13",
    "we define @xmath14 .",
    "if a clause contains a literal negated as well as unnegated it is _",
    "tautological_. a _ conjunctive normal form ( cnf ) _ is a finite set of nontautological clauses .",
    "if @xmath0 is a cnf formula we let @xmath15 .",
    "the _ size _ of a clause @xmath13 is @xmath16 , and the _ size _ of a cnf @xmath0 is @xmath17",
    "assignment _ is a mapping @xmath18 , where @xmath19 ; we identify @xmath20 with the set @xmath21 .",
    "an assignment @xmath20 _ satisfies _ a clause @xmath13 if @xmath22 ; for a cnf @xmath0 , we let @xmath23 $ ] denote the cnf containing the clauses in @xmath0 not satisfied by @xmath20 , restricted to variables in @xmath24 , that is , @xmath23 = \\ { c \\setminus \\ { x , \\neg x \\mid x \\in \\mathsf{var}(f ) \\ } \\mid \\text{$c \\in f$ , $ f \\cap c = \\emptyset$ } \\}\\text{;}$ ] then , @xmath20 _ satisfies _",
    "@xmath0 if @xmath23 = \\emptyset$ ] , that is , if it satisfies all clauses in @xmath0 . if @xmath0 is a cnf with @xmath25 we define the boolean function @xmath26 _ computed by @xmath0 _ as @xmath27 if and only if the assignment @xmath28 given by @xmath29 satisfies the cnf @xmath0 .    a _ binary decision diagram ( bdd ) _ @xmath30 on variables @xmath31 is a labelled directed acyclic graph satisfying the following conditions : @xmath30 has at at most two vertices without outgoing edges , called _ sinks _ of @xmath30 . sinks of @xmath30 are labelled with @xmath32 or @xmath33 ; if there are exactly two sinks , one is labelled with @xmath32 and the other is labelled with @xmath33",
    ". moreover , @xmath30 has exactly one vertex without incoming edges , called the _ source _ of @xmath30 .",
    "each nonsink node of @xmath30 is labelled by a variable @xmath34 , and has exactly two outgoing edges , one labelled @xmath32 and the other labelled @xmath33 .",
    "each node @xmath35 of @xmath30 represents a boolean function @xmath36 in the following way .",
    "let @xmath37 and let @xmath38 be a node labelled with @xmath34 .",
    "we say that @xmath39 _ activates _ an outgoing edge of @xmath38 labelled with @xmath40 if @xmath41 .",
    "since @xmath39 activates exactly one outgoing edge of each nonsink node , there is a unique sink that can be reached from @xmath35 along edges activated by @xmath39 .",
    "we let @xmath42 , where @xmath40 is the label of this sink .",
    "the function _ computed by @xmath30 _ is @xmath43 , where  @xmath44 denotes the ( unique ) source node of @xmath30 .",
    "the _ size _ of a bdd is the number of its nodes .",
    "an _ ordering _ @xmath45 of a set @xmath46 is a total order on @xmath46 . if @xmath45 is an ordering of @xmath31 we let @xmath47",
    "let @xmath45 be the ordering of @xmath48 given by @xmath49 .",
    "for every integer @xmath50 , the _ length @xmath51 prefix _ of @xmath45 is the ordering of @xmath52 given by @xmath53 .",
    "prefix _ of @xmath45 is a length @xmath51 prefix of @xmath45 for some integer @xmath54 . for orderings @xmath55 of @xmath46 and @xmath56 of @xmath57 , we let @xmath58 denote the ordering of @xmath59 given by @xmath60 .",
    "let @xmath30 be a bdd on variables @xmath31 and let @xmath61 be an ordering of @xmath62 .",
    "the bdd @xmath30 is a _",
    "@xmath45ordered binary decision diagram ( @xmath45obdd ) _ if @xmath63 ( with respect to @xmath45 ) whenever @xmath30 contains an edge from a node labelled with @xmath34 to a node labelled with @xmath64 .",
    "a bdd @xmath30 on variables @xmath31 is an _ ordered binary decision diagram ( obdd ) _ if there is an ordering @xmath45 of @xmath65 such that @xmath30 is a @xmath45obdd . for a boolean function @xmath66 ,",
    "the _ obdd size _ of @xmath0 is the size of the smallest obdd on @xmath31 computing @xmath0 .",
    "we say that a class @xmath67 of cnfs has _",
    "polynomialtime compilation into obdds _ if there is a polynomialtime algorithm that , given a cnf @xmath68 , returns an obdd computing the same boolean function as @xmath0 .",
    "we say that a class @xmath67 of cnfs _ has polynomial size compilation into obdds _ if there exists a polynomial @xmath69 such that , for all cnfs @xmath68 , there exists an obdd of size at most @xmath70 that computes the same function as @xmath0 .    for standard graph theoretic terminology , see  @xcite .",
    "let @xmath71 be a graph .",
    "( open ) neighborhood _ of @xmath72 in @xmath73 , in symbols @xmath74 , is defined by @xmath75 we freely use @xmath76 as a shorthand for @xmath77 , and we write @xmath78 instead of @xmath74 if the graph @xmath73 is clear from the context .",
    "a graph @xmath79 is _ bipartite _ if it its vertex set @xmath80 can be partitioned into two blocks @xmath81 and @xmath82 such that , for every edge @xmath83 , we either have @xmath84 and @xmath85 , or @xmath86 and @xmath87 . in this case we may write @xmath88 . the _ incidence _ graph of a cnf @xmath0 , in symbols @xmath89 , is the bipartite graph @xmath90 such that @xmath91 if and only if @xmath92 , @xmath93 , and @xmath94 ; that is , the blocks are the variables and clauses of @xmath0 , and a variable is adjacent to a clause if and only if the variable occurs in the clause .",
    "a bipartite graph @xmath95 is _ left convex _ if there exists an ordering @xmath45 of @xmath80 such that the following holds : if @xmath96 and @xmath97 are edges of @xmath73 and @xmath98 ( with respect to the ordering @xmath45 ) then @xmath99 is an edge of @xmath73 .",
    "the ordering  @xmath45 is said to _ witness _ left convexity of @xmath73 .",
    "a cnf @xmath0 is _ variable convex _ if @xmath100 is left convex .    for an integer @xmath101 ,",
    "a cnf @xmath0 has _ degree _",
    "@xmath101 if @xmath89 has degree at most @xmath101 .",
    "a class @xmath67 of cnfs has _ bounded degree _ if there exists an integer @xmath101 such that every cnf in @xmath67 has degree @xmath101 .",
    "in this section , we introduce the _ few subterms _ property , a sufficient condition for a class of cnfs to have polynomial size compilation into obdds ( section  [ sect : fewsubterms ] ) .",
    "we prove that the classes of variable convex cnfs and bounded treewidth cnfs have the few subterms property ( section  [ sect : convex ] and section  [ sect : tw ] ) . finally , we establish fixed - parameter tractable size and time obdd compilation results for cnfs , where the parameter is the distance to a few subterms cnf class ( section  [ sect : fpt ] ) .      in this section ,",
    "we introduce a property of classes of cnfs called the _ few subterms _ property ( definition  [ def : fst ] ) , and prove that classes of cnfs with the few subterms property admit polynomial time compilation into obdds ( corollary  [ cor : fewsubtermsptime ] ) .",
    "[ def : fst ] let @xmath0 be a cnf , let @xmath102 , and let @xmath103 .",
    "the cnf @xmath23 $ ] is called a _",
    "@xmath80-subterm _ of @xmath0 .",
    "the set of @xmath80-subterms of @xmath0 is denoted by @xmath104 \\mid f \\colon v \\to \\{0,1\\ } \\}\\text{.}\\ ] ] let @xmath45 be an ordering of @xmath105 .",
    "subterm width _ of @xmath0 with respect to @xmath45 , in symbols @xmath106 , is equal to @xmath107 the _ subterm width _ of @xmath0 is the minimum subterm width of @xmath0 with respect to @xmath45 , where @xmath45 ranges over all orderings of @xmath105 .",
    "let @xmath67 be a class of cnfs .",
    "a function @xmath108 is called a _",
    "subterm bound _ of @xmath67 if for all @xmath68 , the subterm width of @xmath0 is bounded above by @xmath109 .",
    "let @xmath108 be a subterm bound of @xmath67 , let @xmath68 , and let @xmath45 be an ordering of @xmath105 .",
    "we call @xmath45 a _ witness _ of subterm bound @xmath110 with respect to @xmath0 if @xmath111 .",
    "the class @xmath67 has _ few subterms _ if it has a polynomial subterm bound @xmath69 ; if , in addition , for all @xmath68 , an ordering @xmath45 of @xmath105 witnessing @xmath112 with respect to @xmath0 can be computed in polynomial time , @xmath67 is said to have _ constructive few subterms_.    the following statement describes how the few subterms property naturally presents itself as a sufficient condition for a polynomial size construction of obdds from cnfs .",
    "[ th : psizeimpliesptime ] there exists an algorithm that , given a cnf @xmath0 and an ordering @xmath45 of @xmath105 , returns a @xmath45obdd for @xmath0 of size at most @xmath113 in time polynomial in @xmath114 and @xmath115 .",
    "let @xmath0 be a cnf and @xmath116 be an ordering of @xmath105 .",
    "the algorithm computes a @xmath45-obdd @xmath30 for @xmath0 as follows .    at step @xmath117 ,",
    "create the source of @xmath30 , labelled by @xmath0 , at the level @xmath32 of the diagram ; if @xmath118 ( respectively , @xmath119 ) , then identify the source with the @xmath32-sink ( respectively , @xmath33-sink ) of the diagram , otherwise make the source an @xmath120-node .    at step @xmath121 for @xmath122 ,",
    "let @xmath123 be the @xmath124-nodes at level @xmath125 of the diagram , respectively labelled @xmath126 .",
    "for @xmath127 and @xmath128 , compute @xmath129 $ ] , where @xmath130 denotes the assignment @xmath131 mapping @xmath34 to @xmath110 . if @xmath129 $ ] is equal to some label of an @xmath132-node @xmath35 already created at level @xmath133 , then direct the @xmath110-edge leaving the @xmath124-node labelled @xmath134 to @xmath35 ; otherwise , create a new @xmath132-node @xmath35 at level @xmath133 , labelled @xmath129 $ ] , and direct the @xmath110-edge leaving the @xmath124-node labelled @xmath134 to @xmath35 .",
    "if @xmath135 $ ] , then identify @xmath35 with the @xmath32-sink of @xmath30 , and if @xmath136 $ ] , then identify @xmath35 with the @xmath33-sink of @xmath30 .    at termination ,",
    "the diagram obtained computes @xmath0 and respects @xmath45 .",
    "we analyze the runtime . at step @xmath121 ( @xmath137 )",
    ", the nodes created at level @xmath133 are labelled by cnfs of the form @xmath23 $ ] , where @xmath20 ranges over all assignments of @xmath138 not falsifying @xmath0 ; that is , these nodes correspond exactly to the @xmath138-subterms @xmath139 of @xmath0 not containing the empty clause , whose number is bounded above by @xmath115 . as level @xmath133",
    "is processed in time bounded above by its size times the size of level @xmath125 , and @xmath114 levels are processed , the diagram @xmath30 has size at most @xmath140 and is constructed in time bounded above by a polynomial in @xmath114 and @xmath115 .",
    "[ cor : fewsubtermsptime ] let @xmath67 be a class of cnfs with constructive few subterms . then @xmath67 has has polynomial time compilation into obdds .",
    "let @xmath67 be a class of cnfs with constructive few subterms , and let @xmath69 be a polynomial subterm bound of @xmath67 .",
    "the algorithm , given a cnf @xmath0 , computes in polynomial time an ordering of @xmath105 witnessing @xmath112 with respect to @xmath0 , and invokes the algorithm in theorem  [ th : psizeimpliesptime ] , which runs in time polynomial in @xmath114 and @xmath115 . since @xmath141",
    "the overall runtime is polynomial in @xmath2 .      in this section",
    ", we prove that the class of variable convex cnfs has the constructive few subterms property ( lemma  [ lemma : convexsmallproj ] ) , and hence admits polynomial time compilation into obdds ( theorem  [ th : leftconvex ] ) ; as a special case , cnfs whose incidence graphs are cographs admit polynomial time compilation into obdds ( example  [ ex : cographs ] ) .    [ lemma : convexsmallproj ] the class @xmath67 of variable convex cnfs has the constructive few subterms property .",
    "let @xmath68 , so that @xmath89 is left convex , and let @xmath45 be an ordering of @xmath105 witnessing the left convexity of @xmath89 .",
    "let @xmath142 be any prefix of @xmath45 . call a clause @xmath93 _ @xmath143-active _ in @xmath0",
    "if @xmath144 and @xmath145 .",
    "let @xmath146 denote the cnf containing the @xmath143-active clauses of @xmath0 .",
    "for all @xmath147 , let @xmath148 .",
    "let @xmath149 .",
    "then , @xmath150 or @xmath151 .",
    "let @xmath149 .",
    "assume for a contradiction that the statement does not hold , that is , there exist variables @xmath152 , @xmath153 , such that @xmath154 and @xmath155 .",
    "assume that @xmath156 ; the other case is symmetric .",
    "since @xmath147 , by definition there exists a variable @xmath157 such that @xmath158 .",
    "it follows that @xmath159 .",
    "therefore , we have @xmath160 , where @xmath161 and @xmath162 , contradicting the fact that @xmath45 witnesses the left convexity of @xmath89 .",
    "we now introduce a partially ordered set @xmath163 , representing the entailment relation among @xmath143-active clauses restricted to literals on variables in @xmath143 .",
    "formally , we define @xmath163 as follows :    * the elements are equivalence classes @xmath164_\\equiv$ ] of the equivalence relation on @xmath146 defined as follows . for all @xmath149 , @xmath165 if and only if , for all @xmath166 , @xmath167 in words , literals on @xmath35 occur identically in @xmath13 and @xmath168 .",
    "* the order is defined by putting , for all elements @xmath164_\\equiv$ ] and @xmath169_\\equiv$ ] , @xmath170_\\equiv \\leq [ c']_\\equiv$ if and only if $ \\ { l \\in c \\mid \\mathsf{var}(l ) \\in \\mathsf{var}(\\pi)\\ } \\subseteq \\ { l \\in c ' \\mid \\mathsf{var}(l ) \\in \\mathsf{var}(\\pi)\\}$;}\\ ] ] in words , upon restriction to literals on variables in @xmath143 , every clause in @xmath164_\\equiv$ ] entails every clause in @xmath169_\\equiv$ ] .",
    "observe that @xmath171 , because @xmath172 and @xmath173 .",
    "we now establish a correspondence between the @xmath143-subterms of @xmath0 and the elements in @xmath163 , which allows to bound above the size of @xmath174 by the size of @xmath163 .",
    "let @xmath175 be an assignment not satisfying @xmath146 .",
    "* there exists @xmath147 such that @xmath164_\\equiv$ ] is maximal in @xmath163 with the property that @xmath20 does not satisfy @xmath13 .",
    "* let @xmath176 be such that @xmath177_\\equiv$ ] is maximal in @xmath163 with the property that @xmath20 does not satisfy @xmath178 .",
    "then , @xmath179=\\ { c \\in [ s]_\\equiv \\mid [ s]_\\equiv \\leq [ t]_\\equiv \\}[f]\\text{.}\\ ] ]    for the first part , let @xmath175 be an assignment not satisfying @xmath146 . by the first claim , there is a unique inclusion maximal clause @xmath13 among the clauses in @xmath146 not satisfied by @xmath20 .",
    "if @xmath164_\\equiv$ ] is maximal in @xmath163 , then we are done .",
    "otherwise , assume that @xmath164_\\equiv$ ] is not maximal in @xmath163 , and assume for a contradiction that there exists @xmath180_\\equiv$ ] such that @xmath164_\\equiv < [ d]_\\equiv$ ] and @xmath20 does not satisfy @xmath101 .",
    "since @xmath164_\\equiv < [ d]_\\equiv$ ] , it holds that @xmath101 contains at least one literal @xmath181 , on a variable in @xmath143 , such that @xmath181 is not in @xmath13 ; a contradiction , since @xmath13 is chosen inclusion maximal among the clauses in @xmath146 not satisfied by @xmath20 .    for the second part ,",
    "let @xmath176 be such @xmath177_\\equiv$ ] is maximal in @xmath163 with the property that @xmath20 does not satisfy @xmath178 . by definition ,",
    "if @xmath182_\\equiv$ ] and @xmath183_\\equiv \\leq [ t]_\\equiv$ ] , then @xmath13 entails @xmath178 upon restriction to variables in @xmath143 .",
    "hence , if @xmath20 does not satisfy @xmath178 , it holds that @xmath20 does not satisfy @xmath13 .",
    "hence , @xmath184 $ ] is equal to the clauses in @xmath185_\\equiv \\mid [ s]_\\equiv \\leq [ t]_\\equiv \\}$ ] , restricted to variables not in @xmath143 , which is exactly the effect of applying @xmath20 to @xmath185_\\equiv \\mid [ s]_\\equiv \\leq",
    "[ t]_\\equiv \\}$ ] .",
    "the claim is settled .",
    "let @xmath175 be any assignment .",
    "if @xmath20 does not satisfy @xmath146 , then , by the second claim , @xmath184 $ ] corresponds to an element in @xmath163 .",
    "hence , the number of @xmath143-subterms of @xmath0 generated by assignments not satisfying @xmath146 is bounded above by the number of elements in @xmath163 ; we observed that @xmath171 .",
    "otherwise , if @xmath20 satisfies @xmath146 , then @xmath184=\\emptyset$ ] .",
    "it follows that @xmath186    note that @xmath0 is the disjoint union of @xmath146 , clauses @xmath187 whose variables are all in @xmath143 , and clauses @xmath188 whose variables are all outside @xmath143 .",
    "also , @xmath189 , and @xmath190 .",
    "it follows that @xmath191    this shows that @xmath115 is linear in the size of @xmath0 , where @xmath45 is an ordering witnessing left convexity of @xmath89 .",
    "this proves that the class of variable convex cnfs has few subterms .",
    "moreover , an ordering witnessing the left convexity of @xmath89 can be computed in polynomial ( even linear ) time  @xcite , so the class of variable convex cnfs even has the constructive few subterms property .",
    "[ th : leftconvex ] the class of variable convex cnf formulas has polynomial time compilation into obdds .",
    "immediate from corollary  [ cor : fewsubtermsptime ] and lemma  [ lemma : convexsmallproj ] .",
    "[ ex : cographs ] let @xmath0 be a cnf such that @xmath89 is a cograph . note that @xmath89 is a complete bipartite graph .",
    "indeed , cographs are characterized as graphs of clique - width at most @xmath8 @xcite , and it is readily verified that if a bipartite graph has cliquewidth at most @xmath8 , then it is a complete bipartite graph .",
    "a complete bipartite graph is trivially left convex .",
    "then theorem  [ th : leftconvex ] implies that cnfs whose incidence graphs are cographs have polynomial time compilation into obdds .      in this section",
    ", we prove that if a class of cnfs has _ bounded treewidth _ , then it has the constructive few subterms property ( lemma  [ lemma : twfewsubterms ] ) , and hence admits polynomial time compilation into obdds ( theorem  [ th : twpolytime ] ) .    a _ tree decomposition _ @xmath192 of a graph @xmath73 is a rooted tree whose elements , called _ bags _ , are subsets of the vertices of @xmath73 satisfying the following :    * for every vertex @xmath35 of @xmath73 , there is a bag containing @xmath35 ; * for every edge @xmath193 of @xmath73 , there is a bag containing @xmath35 and @xmath38 ; * for every three bags @xmath194 , if @xmath195 , then @xmath196 .",
    "a graph @xmath73 has _ treewidth _ @xmath197 if it has a tree decomposition @xmath192 such that each bag contains at most @xmath198 vertices ; @xmath192 is said to _ witness _ treewidth @xmath197 for @xmath73 .",
    "the notions of _ path decomposition _ and _ pathwidth _ are defined analogously using paths instead of trees .",
    "let @xmath0 be a cnf .",
    "we say that @xmath199 has treewidth ( respectively , pathwidth ) @xmath197 if the graph @xmath200 has treewidth ( respectively , pathwidth ) @xmath197 .",
    "we identify the pathwidth ( respectively , treewidth ) of a cnf with the pathwidth ( respectively , treewidth ) of its incidence graph .",
    "if @xmath89 has pathwidth @xmath197 , then an ordering @xmath45 of @xmath105 is called a _",
    "forget _ ordering for @xmath0 if , with respect to an arbitrary linearization of some path decomposition witnessing pathwidth @xmath197 for @xmath89 , if the first bag containing @xmath35 is less than or equal to the first bag containing @xmath201 , then @xmath156 .",
    "a proof of the following lemma already appears , in essence , in previous work by ferrara , pan , and vardi ( * ? ? ?",
    "* theorem  2.1 ) and razgon ( * ? ? ?",
    "* lemma  5 ) .",
    "[ lemma : activebounded ] let @xmath0 be a cnf of pathwidth @xmath202 , and let @xmath45 be a forget ordering for  @xmath0",
    ". then @xmath203 .",
    "let @xmath0 be a cnf such that @xmath89 has pathwidth @xmath202 , let @xmath45 be a forget ordering for  @xmath0 , and let @xmath142 be any prefix of @xmath45 .",
    "let @xmath35 be the last variable in @xmath143 relative to the ordering @xmath45 , and let @xmath204 be the first bag ( in the total order of @xmath163 ) that contains @xmath35 .",
    "a clause @xmath93 is called _ @xmath143-active _ in @xmath0 if @xmath205 and @xmath206 .",
    "let @xmath146 denote the cnf containing the @xmath143-active clauses of @xmath0 .",
    "let @xmath207 in words , @xmath208 contains @xmath143-active clauses in the bag @xmath204 , and @xmath209 contains @xmath143-active clauses occurring only in bags strictly larger than @xmath204 in the total order of @xmath163 . clearly , @xmath210 .",
    "@xmath211 .",
    "first observe that a @xmath143-active clause @xmath13 can not occur only in bags strictly smaller than @xmath204 in the total order of @xmath163 .",
    "for otherwise , since @xmath212 , let @xmath213 ; if @xmath214 is the first bag that contains @xmath201 , then @xmath215 ( by the choice of @xmath35 ) , hence @xmath201 is not contained in any bag strictly smaller than @xmath204 , and the edge @xmath216 is not witnessed in @xmath163 , a contradiction .",
    "thus @xmath143-active clauses either occur in @xmath204 ( including the case where they occur in @xmath204 and in bags smaller or larger than @xmath204 in @xmath163 ) , or occur only in bags strictly larger than @xmath204 in @xmath163 .",
    "thus , @xmath217 ; the other inclusion holds by definition .    the claim and the fact that @xmath210 imply that @xmath218 thus , suffices to bound above the size of the two sets on the right so that the product of the individual bounds is at most @xmath219 .",
    "let @xmath220 .",
    "obviously ,    @xmath221 .",
    "let @xmath222 and let @xmath223 .",
    "@xmath224 .",
    "let @xmath13 be a @xmath143-active clause occurring only in bags strictly larger than @xmath204 in @xmath163 .",
    "let @xmath225 . by the choice of @xmath35 and the properties of the forget ordering @xmath45",
    ", it holds that the first bag containing @xmath201 is less than or equal to @xmath204 .",
    "since @xmath204 is the first bag that contains @xmath35 , it holds that @xmath226 by the properties of @xmath163 ( the edge @xmath216 is witnessed in a bag strictly larger than @xmath204 in @xmath163 ) .",
    "@xmath227 .",
    "define an equivalence relation on @xmath143-assignments as follows : for all @xmath228 , @xmath229 if and only if , for all @xmath84 , @xmath230 . since @xmath231 , the equivalence relation has @xmath232 many equivalence classes . moreover , if @xmath229 , then @xmath233=c''[f']$ ] , because @xmath234 .",
    "the claim follows .    since @xmath235 and @xmath236",
    ", it holds that @xmath237 .",
    "hence , @xmath238    note that @xmath0 is the disjoint union of @xmath146 , clauses @xmath239 whose variables are all in @xmath143 , and clauses @xmath240 whose variables are all outside @xmath143 .",
    "also , @xmath241 , and @xmath242 .",
    "it follows that @xmath243    and the statement is proved .",
    "[ lemma : twfewsubterms ] let @xmath67 be a class of cnfs of bounded treewidth .",
    "then @xmath67 has the constructive few subterms property .",
    "let @xmath244 be the treewidth bound of @xmath67 and let @xmath245 , so that the treewidth of @xmath89 is at most @xmath244 .",
    "we can compute a width @xmath244 tree decomposition of @xmath89 in linear time @xmath246  @xcite . from this decomposition",
    ", we can compute a path decomposition of @xmath89 of width at most @xmath247  ( * ? ? ? * corollary  24 ) and a corresponding forget ordering of @xmath105 in polynomial time . by lemma  [ lemma : activebounded ] ,",
    "the subterm width of @xmath0 with respect to @xmath45 is at most @xmath248 .",
    "thus @xmath67 has a polynomial subterm bound , and a witnessing ordering @xmath45 can be computed for each @xmath68 in polynomial time .",
    "we conclude that @xmath67 has the constructive few subterms property .",
    "[ th : twpolytime ] let @xmath67 be a class of cnfs of bounded treewidth . then , @xmath67 has polynomial time compilation into obdds .",
    "immediate from lemma  [ lemma : twfewsubterms ] and corollary  [ cor : fewsubtermsptime ] .      in this section ,",
    "we use the language of _ parameterized complexity _ to formalize the observation that cnf classes close  to cnf classes with few subterms have small  obdd representations  @xcite .",
    "let @xmath0 be a cnf and @xmath30 a set of variables and clauses of  @xmath0 .",
    "let @xmath249 be the formula obtained by deleting @xmath30 from  @xmath0 , that is , @xmath250 we call @xmath30 the _ deletion set _ of @xmath0 with respect to @xmath249 .",
    "the following lemma shows that adding a few variables and clauses does not increase the subterm width of a formula too much .",
    "[ lemma : deletion ] let @xmath0 and @xmath249 be cnfs such that @xmath30 is the deletion set of  @xmath0 with respect to  @xmath249 .",
    "let  @xmath142 be an ordering of @xmath251 and let @xmath45 be an ordering of @xmath252 .",
    "then @xmath253 .",
    "let @xmath254 and @xmath255 , and let @xmath256 and @xmath257 .",
    "let @xmath258 be a prefix of @xmath259 and @xmath260 .",
    "from @xmath261 we get @xmath262 , which allows us to bound the number of subterms @xmath263 as @xmath264 the number of subterms @xmath265 $ ] for @xmath266 is bounded from above by the number of subsets of @xmath267 , so @xmath268 . recall that @xmath269\\:|\\:f \\in \\{0 , 1\\}^x \\se$ ] . splitting the assignments @xmath20 into two parts",
    ", we can write this as @xmath270[f'']\\:|\\:f ' \\in \\{0 , 1\\}^{v \\cap x } , f '' \\in \\{0 , 1\\}^{x        \\setminus v } \\se . \\label{eq : stbound}\\end{aligned}\\ ] ] let @xmath271 be an assignment .",
    "the formula @xmath249 is obtained from @xmath272 by deleting variables in @xmath80 .",
    "it follows that @xmath273 \\subseteq e$ ] and so @xmath274[f '' ] \\subseteq e[f'']$ ] for any assignment @xmath275 .",
    "this yields @xmath276[f'']\\:|\\:f '' \\in \\{0 , 1\\}^{x \\setminus v }    \\se| \\leq |{\\{\\ , } \\newcommand{\\sm}{\\;{|}\\ ; } \\newcommand{\\se}{\\,\\}}e[f'']\\:|\\:f '' \\in \\{0 , 1\\}^{x \\setminus v }    \\se| , \\label{eq : acbound}\\end{aligned}\\ ] ] and the right hand side of this inequality corresponds to @xmath277 . combining this with  ( [ eq : stbound ] )",
    ", we obtain @xmath278[f'']\\:|\\:f '    \\in \\{0 , 1\\}^{v \\cap x } , f '' \\in \\{0 , 1\\}^{x \\setminus v } \\se| \\\\    & \\leq 2^{k ' } |{\\{\\ , } \\newcommand{\\sm}{\\;{|}\\ ; } \\newcommand{\\se}{\\,\\}}e[f'']\\:|\\:f '' \\in \\{0 , 1\\}^{x \\setminus v } \\se| = 2^{k ' } \\cdot   |\\mathsf{st}(e , x",
    "\\setminus v)| \\\\    & \\leq 2^{k'}\\cdot   \\mathsf{stw}(e , \\pi).\\end{aligned}\\ ] ] inserting into  ( [ eq : prodbound ] ) , we get @xmath279 , and the lemma is proved .    in this section ,",
    "the standard of efficiency we appeal to comes from the framework of _ parameterized complexity _",
    "the parameter we consider is defined as follows .",
    "let @xmath67 be a class of cnf formulas .",
    "we say that @xmath67 is _ closed under variable and clause deletion _ if @xmath280 whenever @xmath249 is obtained by deleting variables or clauses from @xmath68 .",
    "let @xmath67 be a cnf class closed under variable and clause deletion .",
    "the _ @xmath67deletion distance of @xmath0 _ is the minimum size of a deletion set of @xmath0 from any @xmath280 .",
    "an @xmath67deletion set of @xmath0 is a deletion set of @xmath0 with respect to some @xmath280 .",
    "let @xmath67 be a class of cnf formulas with few subterms closed under variable and clause deletion .",
    "we say that cnfs have fixed - parameter tractable obdd size , parameterized by @xmath67deletion distance , if there is a computable function @xmath281 , a polynomial @xmath282 , and an algorithm that , given a cnf @xmath0 having @xmath67deletion distance @xmath197 , computes an obdd equivalent to @xmath0 in time @xmath283 .",
    "[ th : fptsizecompiln ] let @xmath67 be a class of cnf formulas with few subterms closed under variable and clause deletion .",
    "cnfs have fixed - parameter tractable obdd size parameterized by @xmath67deletion distance .",
    "the assumption that @xmath67 is closed under variable and clause deletion is technically necessary to have , for every cnf , a finite deletion distance from @xmath67 ; it is a mild assumption though , as it is readily verified that if @xmath67 has few subterms with polynomial subterm bound @xmath282 , then also the closure of @xmath67 under variable and clause deletion has few subterms with the same polynomial subterm bound .",
    "let @xmath67 be a class of cnf formulas with few subterms closed under variable and clause deletion .",
    "since @xmath67 has few subterms , it has a polynomial subterm bound @xmath282 .",
    "let @xmath197 be the @xmath67deletion distance of @xmath0 .",
    "let @xmath280 be a formula such that the deletion distance of  @xmath0 from @xmath249 is @xmath197 , and let @xmath30 the deletion set of @xmath0 with respect to @xmath249 .",
    "let @xmath142 be an ordering of @xmath251 witnessing @xmath112 for @xmath249 , and let @xmath45 be an ordering of @xmath252 .",
    "by lemma  [ lemma : deletion ] , the subterm width of @xmath0 with respect to @xmath284 is at most @xmath285 , so by theorem  [ th : psizeimpliesptime ] there is a @xmath258obdd for @xmath0 of size at most @xmath286 .",
    "analogously , we say that cnfs have fixed - parameter tractable time computable obdds ( respectively , @xmath67deletion sets ) , parameterized by @xmath67deletion distance , if an obdd ( respectively , a @xmath67deletion set ) for a given cnf  @xmath0 of @xmath67deletion distance @xmath197 is computable in time bounded above by @xmath283 .",
    "[ th : fptcompil ] let @xmath67 be a class of cnfs closed under variable and clause deletion satisfying the following :    * @xmath67 has the constructive few subterms property . *",
    "cnfs have fixed - parameter tractable time computable @xmath67deletion sets , parameterized by @xmath67deletion distance .",
    "cnfs have fixed - parameter tractable time computable obdds parameterized by @xmath67deletion distance .    given an input formula @xmath0 , the algorithm first computes a smallest @xmath67deletion set  @xmath30 of @xmath0 .",
    "let @xmath249 be the formula obtained from @xmath0 by deleting @xmath30 .",
    "the algorithm computes a variable ordering @xmath142 of @xmath249 witnessing a polynomial subterm bound @xmath287 of @xmath67 .",
    "since  @xmath67 has the constructive few subterms property , this can be done in polynomial time .",
    "next , the algorithm chooses an arbitrary ordering @xmath45 of @xmath252 . by lemma  [ lemma : deletion ]",
    "we have @xmath288 , where @xmath197 is the @xmath67deletion distance of @xmath0 . invoking the algorithm of theorem  [ th : psizeimpliesptime ] , our algorithm computes and returns an obdd for @xmath0 in time polynomial in @xmath289 .",
    "since @xmath290 there is a polynomial @xmath291 such that last expression is bounded by @xmath292 .",
    "[ cor : fvs ] let @xmath67 be the class of formulas whose incidence graphs are forests .",
    "cnfs have fixed - parameter tractable time computable obdds parameterized by @xmath67deletion distance .    given a graph @xmath293 , a set @xmath294 is called a _ feedback vertex set _ of @xmath73 if the graph @xmath295 is a forest ; here , @xmath295 is the graph @xmath296 such that @xmath297 if and only if @xmath83 and @xmath298 . for any cnf @xmath0 ,",
    "a subset @xmath30 of its variables and clauses is a feedback vertex set of the incidence graph @xmath89 if and only if it is a @xmath67deletion set , so a smallest feedback vertex set of @xmath89 is a smallest @xmath67deletion set .",
    "there is fixedparameter tractable algorithm that , given a graph @xmath73 and a parameter @xmath197 , computes a feedback vertex set @xmath30 of @xmath73 such that @xmath299 or reports that no such set exists  @xcite .",
    "it follows that there is a fixedparameter tractable algorithm , parameterized by the @xmath67deletion distance , for computing a smallest @xmath67deletion set of an input cnf .",
    "moreover , the incidence graphs of formulas in @xmath67 have treewidth @xmath33 , so @xmath67 has the constructive few subterms property by lemma  [ lemma : twfewsubterms ] .",
    "clearly , @xmath67 is closed under variable and clause deletion .",
    "hence , applying theorem  [ th : fptcompil ] , we conclude that cnfs have fixed - parameter tractable time computable obdds parameterized by @xmath67deletion distance .",
    "in this section , we introduce the _ subfunction width _ of a graph cnf , to which the obdd size of the graph cnf is exponentially related ( section  [ sect : manysubf ] ) , and prove that _ expander graphs _ yield classes of graph cnfs of _ bounded degree _ with linear subfunction width , thus obtaining an exponential lower bound on the obdd size for graph cnfs in such classes ( section  [ sect : degree ] ) .      in this section , we introduce the _ subfunction width _ of a graph cnf ( definition  [ def : spatious ] ) , and prove that the obdd size of a graph cnf is bounded below by an exponential function of its subfunction width ( theorem  [ th : epsilonspatious ] ) .    a _",
    "graph cnf _ is a cnf @xmath0 such that @xmath300 for some graph @xmath71 without isolated vertices .",
    "[ def : spatious ] let @xmath0 be a graph cnf .",
    "let @xmath45 be an ordering of @xmath105 and let @xmath142 be a prefix of @xmath45 .",
    "we say that a subset @xmath301 of clauses in @xmath0 is _ subfunction productive _ relative to @xmath45 and @xmath142 if there exist @xmath302 and @xmath303 such that for all @xmath304 , @xmath305 , and all @xmath93 ,    * @xmath306 ; * @xmath307 and @xmath308 .",
    "the _ subfunction width _ of @xmath0 , in symbols @xmath309 , is defined by @xmath310 where @xmath45 ranges over all orderings of @xmath105 and @xmath142 ranges over all prefixes of @xmath45 .",
    "intuitively , in the graph @xmath73 underlying the graph cnf @xmath0 in definition  [ def : spatious ] , there is a matching of the form @xmath311 with @xmath312 and @xmath313 , @xmath314 ; such a matching is almost  induced , in that @xmath73 can contain edges of the form @xmath315 , but no edges of the form @xmath316 or @xmath317 , @xmath304 , @xmath305 .",
    "[ th : epsilonspatious ] let @xmath0 be a graph cnf .",
    "the obdd size of @xmath0 is at least @xmath318 .",
    "let @xmath0 be a graph cnf .",
    "let @xmath30 be any obdd computing @xmath0 , let @xmath45 be the ordering of @xmath105 respected by @xmath30 , and let @xmath142 be a prefix of @xmath45 such that @xmath319 is subfunction productive relative to @xmath45 and @xmath142 and @xmath320 .",
    "let @xmath302 and @xmath303 be as in definition  [ def : spatious ] , so that in particular @xmath306 , @xmath314 .",
    "let @xmath321 in words , @xmath322 is the set containing , for each assignment of @xmath323 , its extension to @xmath143 that sends all variables in @xmath324 to @xmath33 .",
    "let @xmath325 and let @xmath93 be such that @xmath326 .",
    "then , @xmath20 satisfies @xmath13 .    otherwise , since @xmath0 is a graph cnf and by ( [ eq : foolingset ] ) the only variables sent to @xmath32 by @xmath20 are in @xmath323 , it is the case that @xmath327 for some @xmath304 , @xmath305 , which is impossible by the second item in definition  [ def : spatious ] .",
    "let @xmath20 and @xmath328 be distinct assignments in @xmath322 .",
    "then , @xmath20 and @xmath328 lead to different nodes in @xmath30 .",
    "let @xmath20 and @xmath328 be distinct assignments in @xmath322 . by the previous claim , @xmath20 and",
    "@xmath328 satisfy each clause in @xmath0 whose variables are contained in @xmath143 .",
    "thus , the computation paths activated by @xmath20 and @xmath328 in @xmath30 lead to some nodes in @xmath30 distinct from the @xmath32-sink of @xmath30 .",
    "since @xmath20 and @xmath328 are distinct assignments in @xmath322 , they differ on at least one variable in @xmath323 ; say without loss of generality that @xmath329 .",
    "let @xmath330 be such that @xmath331 if and only if @xmath332 .",
    "we show that that @xmath333 does not satisfy @xmath0 , but @xmath334 satisfies @xmath0 ; it follows that @xmath20 and @xmath328 lead to different nodes in @xmath30 .",
    "clearly , @xmath333 does not satisfy @xmath0 , because by definition  [ def : spatious ] the clause @xmath335 is in @xmath0 , and by construction @xmath336 .",
    "we show that @xmath334 satisfies @xmath0 .",
    "let @xmath93 .",
    "if @xmath326 , then @xmath328 satisfies @xmath13 by the previous claim . if @xmath337 , then @xmath338 satisfies @xmath13 , because @xmath13 contains two distinct variables , hence at least one of its variables differs from @xmath339 and is assigned to @xmath33 by @xmath338",
    "otherwise , @xmath340 and @xmath341 .",
    "if @xmath13 contains a variable in @xmath342 distinct from @xmath339 , then @xmath338 satisfies @xmath13 .",
    "otherwise , @xmath343 for some @xmath344 . in this case , if @xmath345 , then @xmath346 by definition  [ def : spatious ] , and @xmath328 satisfies @xmath13 via @xmath347 .",
    "else , @xmath348 and by definition of @xmath322 we have @xmath349 , so that again @xmath328 satisfies @xmath13 .",
    "it is readily observed that @xmath350 .",
    "then , by the above claims , the computation paths activated by the assignments in @xmath322 lead to @xmath351 different nodes in @xmath30 .",
    "we observed that @xmath320 .",
    "then @xmath30 has size at least @xmath318 .",
    "it follows that the obdd size of @xmath0 is at least @xmath318 .      in this section ,",
    "we use the existence of a family of _ expander graphs _ to obtain a class of graph cnfs with linear subfunction width ( lemma  [ lemma : lowerbound ] ) , thus obtaining an exponential lower bound on the obdd size of a class of cnfs of _ bounded degree _ ( theorem  [ thm : mainnontechnical ] ) .",
    "let @xmath3 and @xmath101 be positive integers , @xmath352 , and let @xmath353 be a positive real .",
    "a graph @xmath293 is a @xmath354-_expander _ if @xmath73 has @xmath3 vertices , degree at most @xmath101 , and for all subsets @xmath355 such that @xmath356 , the inequality latexmath:[\\[\\label{eq : expansion }    integers @xmath352 , there exists a real @xmath358 , and a sequence @xmath359 such that @xmath360 is an @xmath361-expander ( @xmath362 ) , and @xmath363 tends to infinity as @xmath133 tends to infinity ( * ? ? ?",
    "* section 9.2 ) .",
    "[ lemma : lowerbound ] let @xmath0 be a graph cnf whose underlying graph is a @xmath364-expander ( @xmath365 , @xmath366 , @xmath352 ) .",
    "then , @xmath367    let @xmath0 be a graph cnf whose underlying graph @xmath73 is a @xmath364-expander ( @xmath365 , @xmath366 , @xmath352 ) .",
    "let @xmath45 be any ordering of @xmath105 , and let @xmath142 be the length @xmath368 prefix of @xmath45 .",
    "there exists a subset @xmath301 of clauses in @xmath0 , subfunction productive relative to @xmath45 and @xmath142 , such that @xmath369 .",
    "we construct size @xmath370 sets @xmath371 , @xmath372 , and @xmath373 by iterating the following ( @xmath374 ) :    * pick an edge @xmath375 between @xmath376 and @xmath377 . *",
    "settle @xmath378 , @xmath379 , and @xmath380 .",
    "* delete @xmath381 and @xmath382 .    clearly , @xmath302 and @xmath303 .",
    "each iteration deletes at most @xmath383 vertices in @xmath143 ( the neighbors of @xmath384 in @xmath143 , at most @xmath101 vertices , and the neighbors of @xmath385 in @xmath143 , at most @xmath101 vertices , including @xmath386 ) , and at most @xmath101 vertices in @xmath387 ( the neighbors of @xmath384 in @xmath387 , including @xmath388 ) . since @xmath389 and @xmath390 by ( [ eq : expansion ] ) ,",
    "the number of steps is @xmath391 since @xmath365 .",
    "we now check definition  [ def : spatious ] . by construction , @xmath380 for all @xmath392 .",
    "moreover , let @xmath393 , @xmath394 , and let @xmath93 .",
    "say without loss of generality that @xmath395 .",
    "assume that @xmath396 .",
    "then there exist @xmath397 at step @xmath51 , and @xmath398 at step @xmath399 , such that @xmath400 .",
    "then , @xmath401 , so that it is deleted at step @xmath51 ; but @xmath402 exists at step @xmath403 , a contradiction . finally assume that @xmath404 or @xmath405 .",
    "if @xmath404 , then there exist @xmath397 at step @xmath51 , and @xmath406 at step @xmath399 , such that @xmath407 .",
    "then , @xmath408 is deleted at step @xmath51 , but it exists at step @xmath403 , a contradiction . if @xmath405 , then there exist @xmath409 at step @xmath51 , and @xmath398 at step @xmath399 , such that @xmath410",
    ". then , @xmath411 is deleted at step @xmath51 , but it exists at step @xmath403 , a contradiction .",
    "the claim implies that @xmath412 .",
    "[ thm : mainnontechnical ] there exist a class @xmath67 of cnf formulas and a constant @xmath413 such that , for every @xmath68 , the obdd size of @xmath0 is at least @xmath414 .",
    "in fact , @xmath67 is a class of read @xmath7 times , monotone , @xmath8-cnf formulas .",
    "let @xmath415 be a family of graphs as in ( [ eq : expanders ] ) , so that for all @xmath362 the graph @xmath360 is a @xmath416-expander ( @xmath417 , @xmath418 , @xmath366 ) and @xmath419 as @xmath420 .",
    "note that , using the expansion property , it is readily verified that each graph in @xmath421 is connected ; in particular , it does not have isolated vertices .",
    "therefore @xmath422 is a class of graph cnfs ; indeed , it is a class of read @xmath7 times , monotone , @xmath8-cnf formulas .",
    "let @xmath68 .",
    "by lemma  [ lemma : lowerbound ] , we have that @xmath423 since the underlying graph of @xmath0 has degree at most @xmath101 and @xmath114 vertices , the @xmath0 contains at most @xmath424 clauses ( each variable occurs in at most @xmath101 clauses ) , and each clause contains at most @xmath8 literals .",
    "therefore , @xmath425 .",
    "thus , @xmath426    it follows from theorem  [ th : epsilonspatious ] that the obdd size of @xmath0 is at least @xmath427 where @xmath428 , and we are done .",
    "we have proved new lower and upper bound results on the obdd size of structurally characterized cnf classes , pushing the frontier significantly beyond the current knowledge , as depicted in figure  [ fig : hierarchy ] .",
    "we conclude mentioning that tightening the gap left by this work in the considered hierarchy of structural cnf classes seems to require new ideas .",
    "as far as upper bounds are concerned , the few subterms property is a natural source of polynomial upper bounds ; for instance , the width measure recently introduced by oztok and darwiche in the compilation of cnfs into dnnfs ( a more general formalism than obdds ) , once instantiated to obdds , is closely related to our subterm width measure @xcite .",
    "however , the frontier charted in this work seems to push the few subterms property to its limits , in the sense that natural variable orderings do not yield the few subterms property for classes lying immediately beyond the frontier , namely ( clause ) convex cnfs and bounded cliquewidth cnf classes .    as for lower bounds ,",
    "the technique based on expander graphs essentially requires bounded degree , but the candidate classes for improving lower bounds in our hierarchy , bounded cliquewidth cnfs and beta acyclic cnfs , have unbounded degree .",
    "in fact , in both cases , imposing a degree bound leads to classes of bounded treewidth  @xcite and thus polynomial bounds on the size of obdd representations ."
  ],
  "abstract_text": [
    "<S> we present new results on the size of obdd representations of structurally characterized classes of cnf formulas . </S>",
    "<S> first , we identify a natural sufficient condition , which we call the _ few subterms _ property , for a class of cnfs to have polynomial obdd size ; we then prove that cnfs whose incidence graphs are _ </S>",
    "<S> variable convex _ have few subterms ( and hence have polynomial obdd size ) , and observe that the few subterms property also explains the known fact that classes of cnfs of _ bounded treewidth _ have polynomial obdd size . </S>",
    "<S> second , we prove an exponential lower bound on the obdd size of a family of cnf classes with incidence graphs of _ bounded degree _ , exploiting the combinatorial properties of _ expander graphs_. </S>"
  ]
}
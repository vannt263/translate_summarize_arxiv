{
  "article_text": [
    "there is an on - going research effort to identify the quantum features responsible for the computational advantage of quantum over classical computers . one way of doing that is to propose restricted quantum scenarios which can be efficiently simulated on a classical computer , and then add further resources that provably enable universal quantum computation .",
    "this classical - to - quantum transition in computational power happens , for example , when we add entangling gates to the set of all single - qubit unitaries or when we add a generic gate to the clifford group of unitaries .",
    "another motivation for this approach is the possibility of identifying alternative implementations of quantum computers , which may be more practical , versatile or especially suited to a given physical system .",
    "here we investigate the transition from classical to quantum computational power in the context of matchgates , a group of two - qubit gates that were proposed in graph - theoretical terms by valiant in 2002 @xcite .",
    "matchgates acting only on nearest - neighbors on a 1d chain of qubits are classically simulatable , a fact that was traced back to their equivalence to a system of non - interacting fermions via the jordan - wigner transformation @xcite .",
    "interestingly , they allow for universal quantum computation if next - nearest neighbor matchgate interactions are possible , or by the equivalent use of the swap gate @xcite or other non - matchgate unitaries @xcite .",
    "in this paper we ask what happens when matchgates act on nearest - neighboring qubits arranged in geometries other than the linear chain .",
    "we prove that there are many possible interaction geometries which enable matchgates to do universal quantum computation , ranging from near - trivial modifications of the chain to quite different graph families , such as star graphs and binary trees .",
    "this also partially answers the question of whether the classical simulability of nearest - neighbor matchgates holds beyond the linear chain , an open question up until now ( due , in part , to the fact that the jordan - wigner transformation can not be trivially generalized to nonlinear geometries ) .",
    "matchgates arise naturally from interactions in various physical systems , especially in the form of the much studied anisotropic heisenberg ( or xy ) interaction @xcite , which indicates that the geometrical arrangements we propose may be suitable for practical implementations of quantum computers .",
    "let @xmath0 denote the 2-qubit gate that acts as unitaries @xmath1 and @xmath2 , respectively , on the even and odd parity subspaces of the 2-qubit hilbert space : @xmath3 if it satisfies the additional constraint that det@xmath1 = det@xmath2 , @xmath0 is a _",
    "matchgate_.    valiant introduced matchgates in graph - theoretical terms and provided an explicit algorithm for efficiently simulating matchgates between nearest - neighboring qubits on a linear chain @xcite .",
    "curiously , this theoretical construction was later shown to be exactly equivalent to the simulation of non - interacting fermions ; one problem is mapped onto the other via the jordan - wigner transformation @xcite . in 2008",
    "jozsa and miyake complemented this simulability result with the missing element for universal quantum computation : the swap gate , or alternatively the possibility of acting with matchgates between next - nearest - neighbors on the linear chain @xcite .",
    "while their main result required encoding each logical qubit into 4 physical qubits , a more economical 2-to-1 encoding was also presented , but which required matchgate interactions between third neighbors .",
    "these results can alternatively be stated in terms of the geometrical arrangement of the qubits .",
    "remark that nearest- and next - nearest neighbors of the 1d chain can be mapped into nearest - neighbors in the  triangular ladder \" graph of fig .",
    "[ triangladder ] .",
    "thus , as was already implicit in previous works @xcite , the computational power of nearest - neighbor matchgates jumps from ( sub-)classical @xcite to quantum universal by rearranging the qubits of the linear chain to form a triangular ladder . in what follows",
    "we identify many other graph families that also allow for universal computation with matchgates acting only between nearest - neighbors , including much simpler alternatives to the triangular ladder .",
    "we need first to develop a couple of tools .",
    "the swap gate [ @xmath4 is parity - preserving but is not a matchgate , as it does not satisfy the determinant condition . this is why the connectivity restrictions are so important  quantum information is not free to move around if all we have is matchgates .",
    "there is , however , a matchgate which is similar to the swap , which is the fermionic - swap ( f - swap ) : @xmath5 it can not be used to swap the states of two arbitrary qubits , as the minus sign induced in the @xmath6 state can have an entangling effect ( the f - swap is actually a perfect entangler @xcite ) .",
    "if , however , we know for certain that one of the input qubits is in the @xmath7 state , then the f - swap acts exactly as the swap , a trick which was already exploited in @xcite with this exact purpose . given the simulability of nearest - neighbor matchgates on the 1d chain , this f - swap trick clearly can not be used to replace next - nearest neighbor interactions . however , if we modify the geometry by introducing a t structure on the chain ( see fig .",
    "[ figt]-a ) , we can initialize the appended ancilla in the @xmath7 state and use it to circumvent the need for next - nearest neighbor interactions . to implement any matchgate @xmath8 between qubits @xmath9 and @xmath10 of fig .",
    "[ figt]-a , we can apply the sequence :     +    @xmath11 } \\otimes i_{a } = f_{[a , i ] } f_{[i , i-1 ] } g_{[i , i+1 ] } f_{[i , i-1 ] } f_{[a , i]},\\ ] ]    where @xmath12 is a shorthand for the f - swap and subscripts represent the pair of qubits on which the gate acts , as labeled in fig .",
    "[ figt]-a .",
    "we see that the f - swap and @xmath7 ancilla effectively simulate a next - nearest neighbor interaction by temporarily `` hiding '' the information of qubit @xmath13 in the appended qubit .",
    "we dub this use of the f - swap trick on the t structure a ",
    "f - swap gadget \" .",
    "if the states of all qubits can be selectively  hidden \" in ancillas , all next - nearest neighbor interactions become possible and we achieve universal quantum computation with matchgates only , by the result of jozsa and miyake @xcite . this can be done by introducing multiple t structures on the chain , resulting in the `` hair comb '' graph of fig .",
    "[ haircomb ] .",
    "furthermore , a trivial extension of the sequence of eq . ( [ swapgadget ] ) enables us to interact qubits which were originally third neighbors , which means we can use the more economical 2-to-1 encoding of @xcite .",
    "this is our first result of a graph for universal quantum computation with matchgates .",
    "a quick resource count shows that the protocol described enables universal computation using @xmath14 additional f - swaps for each swap and the same number of qubits as the encoded quantum circuit of @xcite , in a simpler graph than the triangular ladder of fig .",
    "[ triangladder ] .    an interesting alternative demonstration of this result can be given as follows .",
    "a standard universal set for quantum computing consists of single - qubit @xmath15-rotations , the hadamard ( @xmath16 ) gate and any two - qubit entangling gate @xcite .",
    "as noted in @xcite , matchgates include all single - qubit @xmath15-rotations and many perfect entanglers , which means that matchgates become universal when supplemented by @xmath16 .",
    "we now propose a scheme to implement the hadamard @xmath16 gate with matchgates only , based on a simple observation : @xmath17 since @xmath18 is a matchgate , this means that initializing ancilla qubits in the @xmath19 state can replace the need for @xmath16 gates .",
    "this clearly can not be used for universal computation on the 1d chain , as in this geometry we can not arrange the required @xmath19 ancillas so as to apply @xmath16 wherever necessary . however , as shown in fig .",
    "[ figt]-b , we can again modify the geometry and introduce t structures where appended @xmath19 ancillas effectively apply a @xmath16 gate using the matchgate sequence of eq .",
    "( [ hgadget ] ) .",
    "we dub this use of the @xmath18 gate on the t structure an `` h - gadget '' , see fig .",
    "[ figt]-b . by repeating this structure at every chain qubit",
    "we can implement the @xmath16 gate on any of them , again enabling universal quantum computation with nearest - neighbor matchgates on the hair comb graph of fig .",
    "[ haircomb ] .",
    "resource - wise , this scheme requires as many gates as the original quantum circuit and twice as many qubits , and does not require encoding as the f - swap gadget scheme does .",
    "+   +   +    we can extend these results by noticing that , in both cases , the ancilla s state is left unaltered by the gadgets [ cf .",
    "( [ swapgadget ] ) and ( [ hgadget ] ) ] .",
    "physically , this means that some computational qubits can share the same ancilla , going as far as the wheel graph , where a single ancilla is connected to every qubit on the cycle ( see fig . [ examples]-f ) .",
    "note that the ancillas used in h - gadgets never get entangled with other qubits , and so can be prepared , used and discarded on the fly if necessary .",
    "as we have seen , the `` hair comb '' and wheel graphs allow efficient schemes for universal computation using matchgates only .",
    "a large number of graphs which arise naturally in physical systems can be trivially shown to contain those graphs as subgraphs , such as all 2d regular lattices common in solid state physics , and all demi- , semi- and regular tessellations @xcite .    however , as we show now , there are strikingly simpler graphs which are also universal for quantum computation if we allow for a larger ( but still polynomial ) overhead in resources .",
    "consider first a modification of the cycle graph of @xmath20 vertices @xmath21 , where a single additional vertex is appended to any chosen vertex @xmath13 of the cycle ( see fig .",
    "[ examples]-b ) .",
    "locally , this appended vertex is equivalent to the t structure of fig .",
    "[ figt ] , which means we can use the h - gadget on it , as before .",
    "notice also that if we assign one qubit of the cycle as a @xmath7 ancilla , we can use the f - swap trick to move it freely around the cycle .",
    "each complete clockwise cycle of the ancilla shifts the state of all other qubits by one step in the counter - clockwise direction ( and vice - versa ) . by f",
    "- swapping the ancilla around a sufficient number of times , we can place any qubit on position @xmath13 , where it can undergo an @xmath16 gate via our h - gadget . as before , this allows for universal computation , since the overhead in resources amounts to 2 additional qubits and at most @xmath22 f - swap gates for every @xmath16 gate in the original circuit .",
    "this also proves the universality of any graph family with a sufficiently large cycle ( i.e. one that grows polynomially with the size of the graph ) , with the obvious exception of the cycle graph itself .    together with the previous results concerning the t structure",
    ", this cycle result provides a powerful toolbox for demonstrating the universality of more general families of graphs .",
    "for instance , it is easy to show that any graph which contains a polynomially long path where every vertex has degree greater than @xmath23 is universal .",
    "this becomes clear by recognizing that every vertex in this long path is either part of a cycle or of a t structure , and our previous results can be combined to provide a universal scheme .",
    "notice that these tools may not be sufficient to decide whether an arbitrary graph is universal , as it is np - hard to find the longest path or cycle in a general graph @xcite .",
    "nevertheless , they still contemplate any graph family which is known to have a polynomially long path .",
    "let us now consider a very slight deviation from the linear chain : we connect a single extra vertex to the central chain vertex , as in fig .",
    "[ examples]-d .",
    "we can assign the first half of the vertices of the chain as computational , the rest of the chain as @xmath7 states and the appended vertex as a @xmath19 state so as to apply the h - gadget on the central qubit .",
    "by using the f - swap trick we can move the state of the computational qubits back and forth , placing any chosen qubit state at the h - gadget site .",
    "this results in universal quantum computation with an overhead of at most @xmath24 f - swaps per @xmath16 gate .",
    "the scheme , as described , works as long as the extra vertex is sufficiently far away from the endpoints of the chain .",
    "if the vertex is logarithmically close to one of the endpoints , the number of qubit states that can be placed at the h - gadget site is logarithmic , and thus insufficient .",
    "however , in the appendix we show an alternative universal scheme that works with the extra vertex placed at any point ( with the natural exception of the endpoints ) , at the cost of using a 2-to-1 encoding for the logical qubits .",
    "it is surprising that such small deviations from the linear chain already result in universal quantum computation . starting with the chain",
    ", it is sufficient to either add a single edge ( creating a cycle ) or append a single ancilla qubit - which can even be just one vertex away from the endpoint .",
    "this is similar in spirit to a result in the context of quantum control theory @xcite , where it is shown that , if all neighboring qubits in the linear chain interact with each other via a specific background ( hence uncontrollable ) two - qubit interaction , it suffices to have full control of only the two first qubits of the chain .",
    "fast , arbitrary gates on the first two qubits are enough to control the state of the whole chain , driving it to do universal computation .",
    "all graph families we have proven so far to be universal for matchgate quantum computation use a long path as a `` backbone '' for the computation , and consist of progressively small deviations from the linear chain .",
    "our tools can also be used to prove similar results for a number of graph families which differ significantly from the chain .",
    "take the complete binary tree @xcite with @xmath20 leaves , for which the longest path is of size @xmath25 . by assigning the leaves as computational qubits and filling the branches with @xmath7 ancillas",
    ", we can use f - swap to move the states of any pair of computational qubits together , interact them and return to the original configuration . this scheme implements each computational matchgate at a cost of a logarithmic number of f - swap gates .",
    "it is clear that any graph family where a polynomial - sized set of vertices can be connected to all other vertices in the set by a path of @xmath7 ancilla qubits will be universal for matchgate quantum computation . an interesting , extremal example is the star graph ( see fig .",
    "[ examples]-e ) , where the only edges are those between a central vertex and all others .    fig .",
    "[ examples ] displays various qualitatively different examples of graph families we have proven to be universal for quantum computation using nearest - neighbor matchgates only . in each of these graphs",
    "we mark some vertices as @xmath7 or @xmath19 ancillas to highlight one possible universal scheme . for what follows it",
    "is important to point out that , while we used the h - gadget in several cases in the interest of displaying economical protocols , it is not strictly necessary in order to demonstrate universality in any situation we have considered . the f - swap gadget can replace the h - gadget on any geometry with only a polynomial overhead in space and time due respectively to the use of encoding and additional f - swap gates .",
    "our results will be experimentally relevant in any situation where matchgate interactions arise naturally .",
    "as is well - known , the group of matchgates is generated by the set of two - qubit hamiltonians : @xmath26 @xcite . as a practical example , let us consider the much - studied anisotropic heisenberg hamiltonian @xmath27 @xcite .",
    "it was proven in @xcite that the matchgates generated by this hamiltonian are universal for quantum computation when allowed to act on next - nearest neighbors on the chain , or equivalently between nearest - neighbors on the triangular ladder of fig .",
    "[ triangladder ] .",
    "now let us write the f - swap gate in a form that explicits the underlying interactions : @xmath28 \\textrm{exp } \\left [ i \\frac{\\pi}{4 } ( xx + yy ) \\right].\\ ] ] we see that besides the @xmath27 interaction , the f - swap gate also requires single - qubit @xmath15 rotations .",
    "this is a possibility in a number of quantum computer implementations , such as cavity qed with atoms @xcite or quantum dots @xcite , and electrons in liquid helium @xcite .",
    "given the result of @xcite , our work suggests multiple choices of interaction geometries that may simplify the design of universal quantum computers using these systems .",
    "we have also described an alternative matchgate quantum computing scheme that uses h - gadgets instead of the f - swap trick .",
    "one advantage of this alternative is that the required @xmath19 ancillas never get entangled with the other qubits , and so can be replaced at will between uses or may even consist of a single , recyclable moving ancillary qubit .",
    "we note that the @xmath18 gate can not be decomposed in terms of the same interactions as the f - swap ; it would be interesting to identify a physical implementation where it occurs naturally .",
    "in summary , we have proven that nearest - neighbor matchgates are universal for quantum computation in very diverse geometrical settings : on a graph with a large enough cycle , on the star graph , and on a chain with a single appended vertex , for example .",
    "the difference between this last case and the simulatable linear chain is minimal , as the single extra qubit may remain in the @xmath19 state during the computation , never entangling with the chain qubits .    as a consequence ,",
    "now we know that it is not possible to efficiently simulate matchgates between nearest - neighbors in all these graph families",
    ". it would be interesting if one could find graph families where matchgates are neither simulatable nor universal for quantum computation , an intermediate case of computing power that has drawn much recent interest @xcite .",
    "as we have seen , useful sets of matchgates can be generated with the @xmath27 hamiltonian supplemented with single - qubit @xmath15 rotations , present naturally in systems such as cavity qed with quantum dots and atoms , and electrons in liquid helium .",
    "our results then suggest different architectures that could enable universal quantum computation in these systems .",
    "we leave as an open question whether our tools can be adapted to obtain new architectures where only a single interaction is used ( as in @xcite and @xcite ) .",
    "finally we point out that , by applying the jordan - wigner transformation on the 1d chain , one can show that nearest - neighbor matchgates correspond to noninteracting fermions , while matchgates between more distant qubits translate into fermionic interactions @xcite .",
    "as our results show the need for only very small deviations from the linear chain , it would be interesting to investigate the implications for proposals for quantum computation with fermions @xcite .        in this appendix",
    "we show how to use codification and the f - swap gate to achieve universal computation with matchgates on the chain with an appended vertex of fig .",
    "[ examples]-d , even if the appended vertex is placed near the chain endpoints . for this , we need to encode each logical qubit into the even parity subspace of two physical qubits as done in @xcite : @xmath29 where subscript @xmath30 denotes a logical qubit .",
    "let @xmath31 and @xmath32 represent the arbitrary states of a physical and a logical qubit , respectively .",
    "then , it is easy to check that @xmath33 } f_{[2,3 ] } { \\left| \\psi \\right > } { \\left| \\phi \\right>}_l = { \\left| \\phi \\right>}_l { \\left| \\psi \\right>},\\ ] ] where @xmath34}$ ] denotes the f - swap acting on qubits @xmath13 and @xmath35 .",
    "that is , consecutive applications of the f - swap can move the state of an arbitrary qubit `` through '' a logical qubit .",
    "this only works if a complete logical qubit is traversed at a time .",
    "the reason behind this is that the f - swap gate will either act as the swap ( if the logical qubit is in the @xmath36 state ) or , if it induces a minus sign , it does so twice ( if the logical qubit is in the @xmath6 state ) . thus , the f - swap can be used to move blocks of two physical qubits around , as long as they comprise the same logical qubit .",
    "now consider the universal set constructed in @xcite .",
    "a logical single - qubit gate @xmath1 is implemented by the matchgate @xmath37 acting on the two physical qubits that form a logical qubit .",
    "a logical entangling gate can be implemented by the sequence : @xmath38 where the first logical qubit is encoded in physical qubits @xmath39 and @xmath23 , and the second logical qubit is encoded in physical qubits @xmath40 and @xmath14 .",
    "all gates in the above equation are between qubits @xmath23 and @xmath40 , and this @xmath41}$ ] gate induces an effective @xmath42 gate between the encoded qubits .",
    "this can not be implemented in the linear chain with only matchgates because of the swap gate in eq .",
    "( [ controlz ] ) .",
    "however , as mentioned in section iv of @xcite , this swap gate can be decomposed in terms of matchgates and hadamard gates on both qubits @xmath23 and @xmath40 .",
    "it is clear that we can adapt this result to our context using the tools developed in the main text .",
    "suppose that the qubits are aligned on a linear chain , ordered such that every pair @xmath43 comprises logical qubit @xmath13 . since logical single - qubit gates are easy to implement with matchgates , all that is necessary is to implement a logical @xmath42 gate between the two logical qubits at the chain s end , which involve only physical qubits @xmath39 to @xmath14 .",
    "if the computation being performed requires a @xmath42 gate between another pair of logical qubits , we simply use the trick of eq .",
    "( [ logicalswap ] ) to swap their state to the endpoint .",
    "as shown in @xcite , the logical @xmath42 can be implemented by a physical @xmath42 between any pair consisting of one physical qubit from each logical qubit . by the previous discussion and section iv of @xcite ,",
    "this reduces to implementing the @xmath16 gate on both these physical qubits . to achieve that ,",
    "consider the configuration of fig .",
    "[ figappend ] , where we appended two ancilla qubits , one in the @xmath7 and one in the @xmath19 state , to the endpoint of the chain .",
    "assume w.l.o.g . that the logical qubits we wish to act with the @xmath42 on already occupy positions @xmath44 and @xmath45 , labeled as in fig .",
    "[ figappend ] . the scheme to implement the @xmath42 proceeds as follows .      using two consecutive f - swaps ,",
    "swap the state of physical qubit @xmath40 across the first logical qubit ( i.e. to position @xmath39 ) . at this point ,",
    "positions @xmath39 and @xmath23 are each occupied by one component of a different logical qubit . now use the f - swap trick described in the main text first to swap pair @xmath46 and then pair @xmath47 .",
    "this places the @xmath19 ancilla adjacent to the two qubits we wish to apply the @xmath16 on .",
    "thus , by repeating this process back and forth we can alternatively implement a matchgate between these two physical qubits or a @xmath16 gate on each of them .",
    "consequently , by the result of @xcite , this effectively allows us to implement an entangling gate between the two logical qubits .",
    "notice that , after application of the @xmath16 gate , the physical qubits temporarily leave the encoded space . at this point eq .",
    "( [ logicalswap ] ) no longer applies , and any swapping must be made with the aid of the @xmath7 ancilla , as done throughout the main text . only at the end of the sequence of eq .",
    "( [ controlz ] ) do the qubits return to the encoded space and the trick of eq .",
    "( [ logicalswap ] ) can be used to return the logical qubits to their original positions .",
    "the scheme described above allows us to implement a logical entangling gate between the first two logical qubits and , by extension , between any pair of logical qubits throughout the circuit .",
    "this shows that the 1d chain with a single vertex appended to the second chain vertex is universal for quantum computation with matchgates .",
    "in fact , by the previous reasoning it is easy to see that this extra vertex can be appended absolutely anywhere , with the exception of the chain endpoints , completing the demonstration for the claim made in the main text ."
  ],
  "abstract_text": [
    "<S> matchgates are a group of two - qubit gates associated with free fermions . </S>",
    "<S> they are classically simulatable if restricted to act between nearest neighbors on a one - dimensional chain , but become universal for quantum computation with longer - range interactions . </S>",
    "<S> we describe various alternative geometries with nearest - neighbor interactions that result in universal quantum computation with matchgates only , including subtle departures from the chain . </S>",
    "<S> our results pave the way for new quantum computer architectures that rely solely on the simple interactions associated with matchgates . </S>"
  ]
}
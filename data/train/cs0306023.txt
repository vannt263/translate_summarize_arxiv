{
  "article_text": [
    "the purpose of the event store is to provide durable persistence for physics event data  @xcite  @xcite .",
    "the system must scale as the experiment continues , which currently means billions of physics events organized in millions of collections .",
    "all data must be persisted , and none of it may be thrown away .",
    "the system must allow access to data generated at any point in the experiment from its inception to what s currently being generated .",
    "the system should always be available .",
    "it must provide reliable and robust operation without regular outages . since the system is available to collaborators from over 70 institutions around the world , any outage is disruptive .",
    "data analysis and other high - level access is separated from event store persistence via an abstraction layer .",
    "this split in dependency permits the asynchronous development in transient and persistent code that is necessary in such a large and complex system .",
    "without such a split , this redesign could be far more disruptive .",
    "this paper describes the redesign of the babar event store , detailing the current situation , the motivation , the techniques , and implementation .",
    "section  [ sec - intro ] provides an overview of the paper , and section  [ sec - past ] describes the current system . section  [ sec - general ] details the motivation and overall design of the redesign project .",
    "section  [ sec - impl ] details the implementation , and sections [ sec - impt ] and [ sec - status ] describe the estimated impact of this redesign and the status of this project , respectively .",
    "section  [ sec - concl ] summarizes the project .",
    "the current , production babar event store is written on top of an objectivity / db object - oriented database management system ( odbms )  @xcite . using the objectivity persistence gives our system useful primitives for atomic transactions , consistent fault - tolerant state , and durable storage that is designed to survive software and hardware faults .",
    "the current system abstracts the persistence layer in an effort to reduce dependence on the particulars of the underlying database implementation .",
    "this strategy stabilizes the client code against upgrades and other version changes of the persistent system .",
    "the current system was designed to accomodate the demands of a new experiment that had not established specific needs or usage characteristics .",
    "the designers planned for these unknowns by building flexibility in many parts of the system , thus allowing the system to evolve as requirements and demands evolved . for event storage , this flexibility",
    "is centered around the concept of an `` event . ''",
    "transient events are represented very generally as typed bags of objects .",
    "the transient structure enforces nothing but this .",
    "arbitrary types of data objects can be inserted in transient events with or without keys to identify them .",
    "this flexible interface is what is exported to high - level analysis code . in practice",
    ", objects stored in transient events can be categorized as : identification data , analysis data ( `` micro '' and `` mini '' levels ) , and event store metadata .",
    "identification data provides information about the event , i.e. the when ? and where ? of the event .",
    "analysis data includes actual event data to be analyzed , i.e. the what ? of the data .",
    "event store metadata includes objects stored in the transient event to aid in conversion to and from persistence .      the flexibility allowed by the transient event structure implies a certain level of flexibility in the persistent layer .",
    "an important vehicle of this flexibility is the concept of event headers , which provide indirection between the navigational and data parts of events , insulating both sides from each other s code development . in the current system ,",
    "the headers are actual persistent structures .      to manage and make sense of billions of physics events , the event store exports an organizational concept of _ collections _ of events .",
    "collections are named sets of events .",
    "a particular event is part of one or more collections , although it is only `` owned '' by one .",
    "collections are identified through a hierarchical naming system , which allows the system to export some lightweight access control .",
    "with a successful production system in place , what are the motivations for redesigning the system ?",
    "the answers are threefold : _ cost _ , _ performance _ , _",
    "features_.      the event store currently grows at an estimated rate of 500 gb per day  @xcite .",
    "as the experiment continues , upgrades are made in data collecting , and the number of events collected grows .",
    "if past experience is any indication , this number grows faster than the famous moore s law .",
    "the redesign aims to stem the resulting deluge of data by reducing the amortized footprint per - event .",
    "this is the primary reason for the redesign .",
    "the production system includes great flexibility , based on assumptions and expectations based on previous hep experiments .",
    "some aspects of this hailed flexibility had implementations that were costly in terms of both space and performance . by streamlining the persistent event structure and removing unneeded indirection ,",
    "the redesign should yield significant gains in performance .      with the needs of maintaining a stable production system a top priority",
    ", some features can not be added without significant code changes .",
    "the redesign provides a convenient point at which a few important features may be added .",
    "the redesign aims to utilize the accumulated administrative and maintenance experience of the running system to produce an optimized persistency system .",
    "simple changes that produce simpler and more maintainable code are preferred over more elaborate designs . to be clear",
    ", the babar database group is not a physics analysis group by any definition , so the redesign is tightly focused on the structural parts of the event that are hidden to analysis .",
    "a lot of data is identical in successive events .",
    "hand analysis of production events has identified a subset of fields in event objects that are changing slowly , if at all .",
    "sharing these fields should result in substantial space savings .",
    "some event fields are obsolete . though we are not the experts on event data , we have identified a few parts to be obsolete with the help of physicists in babar . some fields and data structures",
    "were borrowed from previous experiments and thus are good candidates for elimination .",
    "some existing data structures can be restructured into significantly more efficient structures , in terms of size and performance .",
    "for example , data structures whose contents rarely change can be stored more tightly , saving on precious persistent footprint , at the cost of more intelligent access code . in some cases",
    ", flexibility will be increased when the data is structured more appropriately for the usage that has been observed .",
    "* figure  [ fig : bdbevent ] * illustrates the current situation .",
    "the flexibility of the original design is obvious .",
    "indirection is common , allowing the structure to scale to large numbers of data objects and arbitrary types without problems .",
    "the only problem is that its flexibility is heavyweight .",
    "much of the structure is redundant , and identical over successive events .",
    "* figure  [ fig : bdbevent_002 ] * illustrates the redesigned event model .",
    "much indirection has been eliminated .",
    "the flexibility of the old system exists , but has been shared among events , making heavy demands on flexibility expensive , while the occasional utilization of flexibility is small to almost - negligible .",
    "the original design allowed essentially the same flexibility in persistency that the transient system provided .",
    "the redesign takes advantage of the fact that events and their associated data , once created , are very rarely changed . each event s",
    "set of data objects is different in content , but the _ types _ of data objects attached to an event are stable and almost identical over the life of a particular job . with this in mind , we have altered the persistent event structure to reuse data where possible , and store data more space efficiently .",
    "no single analysis task involves processing the entire contents of the event store .",
    "some form of coarse pre - selection is necessary in order to efficiently arrange events and collections into logical hierarchies , and provide a suitable jump - off point for end - user analysis jobs that focus on a sample of events .",
    "event tags facilitate this coarse pre - selection .",
    "when an event is reconstructed from raw detector information or simulation data , its corresponding event tag is also created and associated with it .",
    "* definition * a tag contains arrays of attributes that effectively summarize an event s state .",
    "tags are intended to be relatively small compared to the overall event size to facilitate rapid filtering .",
    "tag attributes ( also known as _ bits _ or _ fields _ )",
    "have a value of a distinct data type and are identified by a string name .",
    "* descriptors * each tag is considered to be unique but attribute names are common among large runs of events so we choose to store these names in a single object shared among many events .",
    "this object is called a tag descriptor and is simply a look - up table for tag attributes .",
    "each attribute name has a unique key that is used to dereference the arrays in each tag and access the value associated with the attribute .    in the current event store , a single tag descriptor",
    "is held in each event collection .",
    "this seemed like a reasonable solution back in 1997 but it has some serious implications .",
    "analysis jobs can read events from multiple input sources and produce new output collections .",
    "these output collections are described as sparse because they can refer to a diverse group of events that may have very little in common .",
    "events tags may even have different attributes but because they are stored in the same collection they must share one tag descriptor instance .",
    "this results in the creation of bloated tag objects that contain every single possible attribute in order to ensure consistency throughout the collection .",
    "not only does this waste space , it is very misleading since we have no real way of determining if an attribute is valid for a given tag .",
    "careful analysis of currently persisted events in the system show that many fields in the event change slowly i.e. their values are identical over hundreds(or more ) of events .",
    "why not place these fields in a single object , and store a reference to that object in each event with those fields ?",
    "this is the idea behind the common object .",
    "the current redesign system allows for a single common object for event data , eschewing different common objects for different fields ( providing a higher granularity of sharing ) because potential gain is limited , and probably smaller than the extra pointers needed to store , not to mention the added maintenance complexity .",
    "transient events each store a standard object called abseventid , which contains fields used to identify an event .",
    "since babar event jobs require , and thus assume existence of this object , its contents can be stored directly in the event without incurring the overhead of a separate persistent object .",
    "some fields of this object(the event i d ) change often , and others rarely .",
    "the latter fields are placed in the common object .",
    "these sets of fields are labeled the _ dynamic _ and _ static _ fragments of the event i d .",
    "the multi - leveled `` event header '' structure is flexible and allows simple updating .",
    "however , the structure involves many persistent objects .",
    "since the structure is constant over many objects , it makes sense to store a compacted representation of the structure instead of the structure itself .",
    "this makes updating the structure expensive , but since structural updates are rare , the benefits in size are worth it .",
    "an event s data objects are stored in `` headers '' , which have arbitrary keys(names in character - string format ) .",
    "the data objects themselves are keyed according to key(character - string format again ) and type . in the redesign , all of an event s data objects are stored in a single array , and the keying information is stored in packed strings and offloaded to the common object , where they can be shared .      for the redesign , we decided to apply the common object concept by removing the single tag descriptor from the collection and sharing it directly among event tags that have identical attribute lists",
    ". there would be no possibility of adding attributes to a tag descriptor .",
    "if a matching tag descriptor could not be found for an event tag , a new one would be created .",
    "a sparse collection can now contain event tags that use different descriptors .        as event store database developers",
    ", we do not have the expertise to declare data obsolete , unneeded , or unnecessary .",
    "however , we can observe the system , and our observations point to a number of fields and values which do not seem used .",
    "babar physicists have confirmed that many of these fields and values are , indeed , obsolete .",
    "thus the redesign includes elimination of these fields .",
    "any field may be added or restored , but the redesigned system will no longer include these unused fields by default .",
    "* tag attributes * on average , more than 500 attributes are defined for each event tag in the production system .",
    "we contacted the physics group who confirmed that several attributes were obsolete .",
    "also , some attributes were used during the initial creation of events but were not needed for any subsequent filtering . in order to handle such cases , the redesign will feature an updated tag interface that will allow the creation of _ transient - only _ attributes that are never stored in persistent tags / descriptors .",
    "since 2000 , babar disk space has been slac s largest single computing budget expense . the event store ( navigational + data components ) accounts for 97% of the 800tb+ babar database .",
    "most of these files are migrated to tape but event store navigation objects  the target of this redesign are the most frequently accessed so they should be disk resident when possible .",
    "conservative estimates indicate that the redesign results in an 80% reduction in the navigation component size ( 2.2 kb to 0.5 kb per event ) . without benchmarks ,",
    "performance gains are hard to quantify but using fewer , smaller and less frequently accessed persistent objects will only improve i / o latency .",
    "we look forward to running head - to - head comparisons .",
    "the implementation is progressing at a rapid pace .",
    "we will soon halt schema development and focus on testing core functionality while establishing backward compatibility guidelines to ensure that users can access data produced by the original event store . up to this point , we have kept our code independent of the central babar development release cycle to avoid disruption .",
    "the eventual merge will take place soon .",
    "the original babar event store was designed before its operation and use were understood .",
    "its successful design has enabled it to well exceed the original design requirements , scaling to a level beyond anyone s expectations . using its generous flexibility , babar event store developers were able to extend , modify and tune the system every step of the way .",
    "as the experiment continued and the event store grew , accumulated experience showed room for improvement in size .",
    "now armed with this experience , the redesign aims to dramatically reduce the event store s persistent footprint .",
    "the event store redesign project has succeeded in meeting its goals .",
    "the overall size of the persistent event has been significantly reduced by eliminating redundancy via common objects , removing obsolete data and carefully re - organizing for more efficient access to persistent data .",
    "most importantly , backwards compatibility has been preserved .",
    "we wish to acknowledge david quarrie and simon patton for their work on the original babar event store  @xcite . with their careful design ,",
    "the system has been able to scale well beyond the original specifications ."
  ],
  "abstract_text": [
    "<S> as the babar experiment progresses , it produces new and unforeseen requirements and increasing demands on capacity and feature base . </S>",
    "<S> the current system is being utilized well beyond its original design specifications , and has scaled appropriately , maintaining data consistency and durability . </S>",
    "<S> the persistent event storage system has remained largely unchanged since the initial implementation , and thus includes many design features which have become performance bottlenecks . </S>",
    "<S> programming interfaces were designed before sufficient usage information became available . </S>",
    "<S> performance and efficiency were traded off for added flexibility to cope with future demands . with significant experience in managing actual production data under our belt </S>",
    "<S> , we are now in a position to recraft the system to better suit current needs . </S>",
    "<S> the event store redesign is intended to eliminate redundant features while adding new ones , increase overall performance , and contain the physical storage cost of the world s largest database . </S>"
  ]
}
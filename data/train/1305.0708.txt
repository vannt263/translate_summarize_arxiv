{
  "article_text": [
    "the start - up of the cern large hadron collider ( lhc ) opens a new discovery era of high energy particle physics . with proton beams colliding at unprecedented energy ,",
    "it provides us with great opportunities to discover the higgs boson and new physics beyond the standard model ( sm ) , with typical signals involving multiple high @xmath0 @xmath1 s , jets , @xmath2 s and @xmath3 s .",
    "reliable searches for these signatures require a good understanding of all sm background processes , which is usually done by simulations performed by monte carlo ( mc ) event generators , such as madgraph  @xcite .",
    "however , the complicated event topology expected for some new physics signals makes their background simulation time consuming , and it is important to increase the computational speed for simulations in the lhc data analysis .",
    "in previous studies  @xcite , the gpu ( graphics processing unit ) has been used to realize economical and powerful parallel computations of cross sections by introducing a c - language version of the helas  @xcite codes , heget ( * h*elas * e*valuation with * g*pu * e*nhanced * t*echnology ) .",
    "heget is based on the software development system cuda  @xcite introduced by nvidia  @xcite . for pure qed processes , @xmath4 , with @xmath5",
    "to 8 , the calculations ran 40 - 150 times faster on the gpu than on the cpu  @xcite .",
    "for pure qcd processes , @xmath6 with @xmath7 up to 4 , @xmath8 and @xmath9 with @xmath7 up to 5 , 60 - 100 times better performance was achieved on the gpu  @xcite . in this paper",
    ", we extend these exploratory studies to cover general sm processes , opening the way to perform the complete matrix element computation of madgraph on the gpu .",
    "the complexity of the calculations is increased due to new interaction types and complicated event topologies expected in background simulations for various new physics scenarios .",
    "we introduce additional heget functions to cover all of the sm particles and their interactions , and a phase space parameterization suited for gpu computations . in order to test all of the new functions and the efficiency of the gpu computation in semi - realistic background simulations , we systematically study multi - jet processes associated with the production of sm heavy particles(s ) , followed by its ( their ) decay into final states including light quarks and leptons , including full spin correlations . in particular , we report numerical results on the following processes :    [ eq : process ] @xmath10    for the processes ( [ eq : process - v ] ) to ( [ eq : process - httbar ] ) ,",
    "we examine all of the major subprocesses at the lhc , while for the multiple higgs production ( [ eq : process - hwbf ] ) , we study only the weak - boson fusion ( wbf ) subprocesses to test the higgs self interactions .    we present numerical results for the cross sections of processes in eqs .",
    "( [ eq : process - v])-([eq : process - hwbf ] ) computed by using the gpu version of the monte carlo integration program , gbases  @xcite , with the new heget functions in the amplitude calculations , and compare the results with those obtained running two different programs on the cpu , the fortran version bases  @xcite programs with helas subroutines and the latest version of madgraph ( ver.5 )  @xcite .",
    "we also compare the performance of two versions of the bases program , one on the gpu and the other on the cpu .",
    "the paper is structured as follows . in sect .",
    "[ sec : physics_processes ] , we present the cross section formulae for general sm production processes at the lhc , and list all of the subprocesses we study in this report . in sect .",
    "[ sec : algorithm ] , we briefly describe a new phase space parameterization for efficient gpu computation . in sect .",
    "[ sec : heget ] , we introduce new heget functions for all sm particles and their interactions . in sect .",
    "[ sec : mg2cuda ] , we introduce the software used to generate cuda codes with heget functions from fortran amplitude programs with helas subroutines obtained by madgraph . in sect .  [",
    "sec : computation ] , we review the computing environment , basic parameters of the gpu and cpu machines used in this analysis .",
    "section  [ sec : results ] gives numerical results of computations of cross sections and comparisons of performance of gpu and cpu programs .",
    "section  [ sec : summary ] summarizes our findings .",
    "[ sec : ps ] explains in more detail our phase space parameterization introduced in sect .",
    "[ sec : algorithm ] .",
    "[ sec : rng ] explains our method for generating random numbers on gpu .",
    "[ sec : new - heget - codes ] lists all the new heget codes introduced in this paper .",
    "in order to test not only the validity and efficiency of our gpu computation but also its robustness , we examine a series of multi - jet production processes in association with the sm heavy particle(s ) ( @xmath2 , @xmath3 , @xmath11 and @xmath12 ) , followed by their decays into light quarks and leptons , that can be backgrounds for discoveries in many new physics scenarios . in this section , we list all the subprocesses we study in this paper and give the definition of multi - jet cross sections that are calculated both on the cpu and on the gpu at later sections .    at the lhc with a collision energy of @xmath13 ,",
    "the cross section for general production processes in the sm can be expressed as @xmath14 where @xmath15 and @xmath16 are the parton distribution functions ( pdf s ) , @xmath17 is the factorization scale , @xmath18 and @xmath19 are the momentum fractions of the partons @xmath20 and @xmath21 , respectively , in the right- and left - moving protons , @xmath22 is the subprocess center of mass energy , and @xmath23 gives the differential cross section for the @xmath24 subprocess @xmath25    the subprocesses cross section can be computed in the leading order as @xmath26 where @xmath27 is the invariant @xmath7-body phase space , @xmath28 are the helicities of the initial and final partons , @xmath29 and @xmath30 are the color degree of freedom of the initial partons , @xmath20 and @xmath21 , respectively .",
    "@xmath31 are the helicity amplitudes for the process ( [ eq : hprocess ] ) , which can be generated automatically by madgraph and expressed as @xmath32 where the summation is over all the feynman diagrams .",
    "the subscripts @xmath28 stand for a given combination of helicities ( @xmath33 for higgs bosons , @xmath34 for quarks and leptons , @xmath35 for photons and gluons ) , and the subscripts @xmath36 correspond to a set of color indices ( none for colorless particles , 1 , 2 , 3 for flowing - in quarks , @xmath37 for flowing - out quarks , and 1 to 8 for gluons ) .",
    "details on color summation in madgraph can be found in ref .",
    "@xcite .    in this paper",
    ", we are interested in general sm processes , typically involving the production of heavy resonances with decays , associated with multiple jet production , which often appear as major sm background for new physics signals . the limitation in the number of extra jets , @xmath7 or @xmath38 in eqs .",
    "( [ eq : process - v])-([eq : process - hwbf ] ) , is primarily due to limitations in the amount of memory available to the gpu as reported in previous studies  @xcite .",
    "correlated decays of the heavy particles into the following channels are calculated :    [ eq : decay ] @xmath39    we do not consider @xmath40 decays in this report for brevity .",
    "the same selection cuts are imposed for @xmath41 , so that the higgs boson production cross sections listed in this report can be used as a starting point for realistic simulations .",
    "a higgs boson mass of 125  and its branching fraction into , 0.0405 , are used throughout this report decay , based on the @xmath40 decay helicity amplitude is available in the framework of madgraph5  @xcite . ] .    for definiteness",
    ", we impose the following final state cuts at the parton level . for jets",
    ", we require the same conditions as in refs .",
    "@xcite :    @xmath42    [ eq : jet - cuts ]    where @xmath43 and @xmath44 are the pseudo - rapidity and the transverse momentum of the @xmath45-th jet , respectively , in the @xmath46 collisions rest frame along the right - moving ( @xmath47 ) proton momentum direction , and @xmath48 is the relative transverse momentum  @xcite between the jets @xmath45 and @xmath49 defined by    @xmath50    [ eq : isolation - cuts ]    here @xmath51 measures the boost - invariant angular separation between the @xmath45 and @xmath49 jets , and @xmath52 and @xmath53 are defined as differences of pseudorapidities and azimuthal angles of the two jets . for @xmath21 jets from @xmath11 decay ,",
    "we require    @xmath54    [ eq : bjet - cuts ]    note that we do not require them to be isolated from other jets via ( [ eq : jet - cuts - ptjj ] ) . for charged leptons , we require    @xmath55    [ eq : lepton - cuts ]    and for simplicity we treat @xmath40 the same as @xmath56 and @xmath57 . like @xmath21 jets from @xmath11",
    "decays , we do not impose isolation cuts for leptons , since performing realistic simulations is not the purpose of this study .",
    "we use the set cteq6l1  @xcite parton distribution functions ( pdf ) for all processes .",
    "the following four types of @xmath2 production subprocesses are studied in this paper :    @xmath58    [ eq : w ]    the subprocess ( [ eq1:w ] ) starts with the leading order @xmath59 , the subprocess ( [ eq2:w ] ) starts with the next order @xmath60 , and those of ( [ eq3:w ] ) and ( [ eq4:w ] ) start with the @xmath61 order . these subprocesses give the dominant contributions in @xmath46 collisions .",
    "the corresponding  production cross sections are smaller in @xmath46 collisions since an incoming @xmath62-quark in the subprocesses ( [ eq1:w ] ) to ( [ eq3:w ] ) should be replaced by a @xmath63-quark , whose pdf is significantly softer than the up - quark pdf in the proton .",
    "similarly , the following subprocesses are studied for @xmath3 production :    @xmath64    [ eq : z ]    as in the case of @xmath65+@xmath7-jets , we examine all of the dominant contributions up to 4-jets .",
    "it should be noted that the down quark contribution to the @xmath3+jets cross section is less suppressed than the @xmath66+jets case , since the @xmath3-boson couples stronger to the down - quarks than the up - quarks ( cf .",
    "@xmath67 ) .      for the @xmath2 boson pair production",
    ", we study the following subprocesses :    @xmath69    [ eq : ww ]    the subprocess ( [ eq1:ww ] ) starts with the leading order , the subprocess ( [ eq2:ww ] ) starts with the next order , and those of ( [ eq3:ww ] ) to ( [ eq5:ww ] ) start with the  order . the subprocesses ( [ eq4:ww ] ) are included as the dominant same sign @xmath2-pair production mechanism in @xmath46 collisions .",
    "similarly , the following subprocesses are studied for  production :    @xmath70    [ eq : wz ]    as in the @xmath71+@xmath7-jets case , we consider all of the dominant @xmath72 production subprocesses up to 3 associated jets . note again that the down quark contribution to the @xmath73+jets cross section can be significant because of the large @xmath3 coupling to the @xmath63-quarks .",
    "the following @xmath74 production subprocesses are also studied :    @xmath75    [ eq : zz ]    all of the dominant @xmath74 production subprocesses up to 3 associated jets are studied .",
    "note , however , that the down - quark contribution to the @xmath76 collision subprocess ( [ eq2:zz ] ) has the coupling enhancement factor of @xmath77 .",
    "although we study only 4 lepton final states , @xmath74+jets processes can be backgrounds for new physics signals with a @xmath3 boson plus jets and large missing .      for @xmath79 production ,",
    "we consider the following subprocesses :    @xmath80    [ eq : ttbar ]    the subprocess ( [ eq1:ttbar ] ) starts with the leading order , the subprocess ( [ eq2:ttbar ] ) starts with the next order , and those of ( [ eq3:ttbar ] ) and ( [ eq4:ttbar ] ) start with the  order .",
    "again , only those subprocesses which give dominant contributions in @xmath46 collisions are studied in each order .      as for the associate production of the higgs boson and the @xmath2",
    ", we consider the following subprocesses :    @xmath81    [ eq : wh ]    all of the subprocesses ( [ eq1:wh ] ) to ( [ eq4:wh ] ) are obtained by replacing one gluon in the @xmath82jets subprocesses ( [ eq1:w ] ) to ( [ eq4:w ] ) by @xmath12 , respectively .",
    "the @xmath83+jets subprocesses corresponding to ( [ eq1:wh ] ) to ( [ eq3:wh ] ) are suppressed since an incoming @xmath62-quark would be replaced by a softer @xmath63-quark in the proton .",
    "likewise , the following subprocesses are studied for @xmath84 production :    @xmath85    [ eq : zh ]    all of the four subprocesses are obtained from the corresponding @xmath3+jets subprocesses ( [ eq1:z ] ) to ( [ eq4:z ] ) , by replacing one final gluon by @xmath12 .",
    "again , the down quark contributions to the subprocesses ( [ eq1:hz ] ) to ( [ eq3:hz ] ) are less suppressed than those to the @xmath86 production processes ( [ eq1:hw ] ) to ( [ eq3:hw ] ) due to the large @xmath3 coupling to the @xmath63-quark .      for the @xmath87 production process , the following subprocesses are examined in this paper :    @xmath88    [ eq : th ]    all of the subprocesses ( [ eq1:th ] ) to ( [ eq4:th ] ) are obtained , respectively , from the @xmath89jets subprocesses ( [ eq1:ttbar ] ) to ( [ eq4:ttbar ] ) by replacing one gluon in the final state by a higgs boson .",
    "in all of the above subprocesses we consider only qcd interactions for production of jets and top quarks , while the weak interactions contribute only in @xmath2 , @xmath3 , @xmath12 productions and in decays . for higgs@xmath90jets processes , we study weak - boson fusion ( wbf ) subprocesses which can be identified at the lhc for various decay modes  @xcite .",
    "@xmath68 fusion contributes to the subprocesses ( [ eq1:hw ] ) , @xmath74 fusion contributes to the subprocesses ( [ eq2:hw ] ) , both contribute to the subprocesses ( [ eq3:hw ] ) and ( [ eq4:hw ] ) :    @xmath91    [ eq : hw ]    the subprocesses ( [ eq1:hw ] ) and ( [ eq2:hw ] ) start with the leading order , those in ( [ eq3:hw ] ) start with the next order , the subprocess ( [ eq4:hw ] ) occurs at the  order .",
    "we do not consider @xmath92 fusion process , because its simulation requires non - renormalizable vertices  @xcite which are absent in the minimal set of helas codes  @xcite .",
    "the following multiple higgs boson production processes are studied in this paper as a test of cubic and quartic vertex functions among scalar and vector bosons :    @xmath93    [ eq : hh ]    the quartic scalar boson vertex appears only in the subprocesses ( [ eq3:hh ] ) and ( [ eq4:hh ] ) .",
    "in this section , we briefly introduce our phase space parame - trization , designed for efficient gpu computing .",
    "details are given in [ sec : ps ] .",
    "optimizing code to run efficiently on the gpu requires several special considerations .",
    "in addition to the careful use of memory mentioned earlier , one needs to consider that each `` batch '' of calculations processed on the gpu must undergo identical operations .",
    "that has particular consequences when one considers generating momentum in phase space that satisfy the appropriate cuts .",
    "the efficiency of generating momenta that pass cuts is not particularly important on the cpu , since one can simply repeatedly generate momenta until a set is found that pass the cuts .",
    "the structure of the gpu however does not allow such flexibility .",
    "if the generation program is running on multiple processors , each processor has one opportunity to generate a valid phase space point before moving forward to calculate the amplitude .",
    "so if the efficiency for generating a point in phase space that passes cuts is only 10% then you loose a factor of 10 in computing speed .    in previous studies  @xcite for pure qed and qcd processes at hadron colliders : @xmath94 the following phase space parameterization has been used including the integration over the initial parton momentum fractions ( see [ sec : ps ] for details ) : @xmath95 with this parameterization , when all the final particles are massless partons , we can generate phase space points that satisfy the rapidity constraints , @xmath96 , for all partons ( @xmath97 to @xmath7 ) and the  constraints , @xmath98 , for @xmath99 partons ( @xmath97 to @xmath99 ) . only those phase space points which violate the conditions , @xmath100 , @xmath101 or @xmath102 , will be rejected .",
    "studies in refs .",
    "@xcite find that , for example , 78% , 58% , 42% and 29% of generated phase space points satisfy the final state cuts , @xmath103 , for @xmath7-photons or @xmath7-gluons .",
    "it is then only @xmath104 which can go up to @xmath105 .",
    "] , for 2 - 5 photon productions at the lhc , when we choose @xmath106 ( @xmath97 to @xmath7 ) , @xmath107 and @xmath108 ( @xmath97 to @xmath99 ) as integration variables .",
    "we adopt this parameterization of the generalized phase space in this report , which is extended to account for the production and decay of several breit - wigner resonances .",
    "in particular , for process with @xmath7-jet plus @xmath109-resonance production @xmath110 when the resonance @xmath111 decays into a final state @xmath112 , we parameterize the generalized phase space as follows : @xmath113 here @xmath114 is the invariant phase space for the @xmath115 decay when the invariant mass of the final state @xmath112 is @xmath116 , and @xmath117 is the @xmath7-body generalized phase space for @xmath118 massless particles and @xmath109 massive particles of masses @xmath116 ( @xmath119 = 1 to m ) .",
    "integration over the invariant mass squared @xmath120 is made efficient by using the standard breit - wigner formalism @xmath121 and the transverse momenta are generated as @xmath122    finally , we note that s - channel splitting of massless partons can be accommodated by using the same parameterization eq .",
    "( [ ps2-resonance ] ) , where @xmath111 in eq .",
    "( [ ps2-resonance ] ) is a virtual parton of mass @xmath116 and @xmath112 is a set of partons . instead of the breit - wigner parameterization  ( [ ps4-resonance ] )",
    ", we simply use @xmath123 as integration variables .",
    "in this section , we explain the new heget functions for computing the helicity amplitudes for arbitrary sm processes . all of the heget functions that appear in this report are listed in [ sec : new - heget - codes ] as list  [ list : ixxxxx ] to list  [ list : hsssxx ] .      in the previous works  @xcite , the wave functions for massless particles , which are named ` ixxxx`@xmath119 , ` oxxxx`@xmath119 and ` vxxxx`@xmath119 ( @xmath124 ) , have been introduced for fermions and vector bosons . in this report , we introduce wave functions for massive spin 0 , 1/2 and 1 particles , which can also be used for massless particles by setting the mass parameters to zero .",
    "the naming scheme for heget functions follows that of helas subroutines : the heget ( helas ) function names start with ` i(i ) ` and ` o(o ) ` for flow - in and flow - out fermions , respectively , ` v(v ) ` for vector boson wave functions , and ` s(s ) ` for scalar boson wave functions .",
    "all of the heget functions for external lines are summarized in table  [ tab : wavefc ] .",
    "the function ` vvsxxx ` ( list  [ list : vvsxxx ] ) computes an amplitude of the ` vvs ` coupling . the arguments of this function as : @xmath126 where the inputs and the outputs are : @xmath127 } & \\textrm{first vector wavefunction}\\\\      \\texttt{cmplx v2[6 ] } & \\textrm{second vector wavefunction}\\\\      \\texttt{cmplx sc[3 ] } & \\textrm{input scalar}\\\\      \\texttt{cmplx gc }     & \\textrm{coupling constant of \\texttt{vvs}}\\\\      & \\\\      \\textsc{outputs : } & \\\\",
    "\\texttt{cmplx\\ & vertex } & \\textrm{amplitude}\\\\      & \\gamma(\\texttt{v1},\\texttt{v2},\\texttt{s } )       \\label{eq : vvsxxx }     \\end{array}\\ ] ]      the function ` jvsxxx ` ( list  [ list : jvsxxx ] ) computes an off - shell vector current from the ` vvs ` coupling .",
    "the vector propagator is given in feynman gauge for a massless vector and in unitary gauge for a massive vector .",
    "the arguments of this function as : @xmath128 where the inputs and the outputs are : @xmath129 } & \\textrm{input vector wavefunction}\\\\      \\texttt{cmplx sc[3 ] } & \\textrm{input scalar wavefunction}\\\\      \\texttt{cmplx gc }     & \\textrm{coupling constant of \\texttt{vvs}}\\\\      \\texttt{double vmass } & \\textrm{mass of output vector } \\\\      \\texttt{double vwidth } & \\textrm{width of output vector } \\\\      & \\\\      \\textsc{outputs : } &",
    "\\\\      \\texttt{cmplx jvs[6 ] } & \\textrm{vector current}\\\\      & j^\\mu(\\texttt{v$^\\prime$ } : \\texttt{vc } , \\texttt{sc } )       \\label{eq : jvsxxx }     \\end{array}\\ ] ]      the function ` hvvxxx ` ( list  [ list : hvvxxx ] ) computes an off - shell scalar current from the ` vvs ` coupling .",
    "the arguments of this function as : @xmath130 where the inputs and the outputs are : @xmath127 } & \\textrm{input first vector wavefunction}\\\\      \\texttt{cmplx v2[6 ] } & \\textrm{input second vector wavefunction}\\\\      \\texttt{cmplx gc }     & \\textrm{coupling constant of \\texttt{vvs}}\\\\      \\texttt{double smass } & \\textrm{mass of output scalar } \\\\",
    "\\texttt{double swidth } & \\textrm{width of output scalar } \\\\      & \\\\      \\textsc{outputs : } &",
    "\\\\      \\texttt{cmplx hvv[3 ] } & \\textrm{scalar current}\\\\      & j(\\texttt{s$^\\prime$ } : \\texttt{v1 } , \\texttt{v2 } )       \\label{eq : hvvxxx }     \\end{array}\\ ] ]          the function ` vvssxx ` ( list  [ list : vvssxx ] ) computes an amplitude of the ` vvss ` coupling . the arguments of this function as : @xmath132 where the inputs and the outputs are : @xmath133 } & \\textrm{first vector wavefunction } \\\\      \\texttt{cmplx v2[6 ] } & \\textrm{second vector wavefunction } \\\\      \\texttt{cmplx s1[3 ] } & \\textrm{first scalar wavefunction } \\\\      \\texttt{cmplx s2[3 ] } & \\textrm{second scalar wavefunction } \\\\      \\texttt{cmplx gc }     & \\textrm{coupling constant of \\texttt{vvss}}\\\\      & \\\\      \\textsc{outputs : } & \\\\",
    "\\texttt{cmplx\\ & vertex } & \\textrm{amplitude of the \\texttt{vvss}}\\\\      & \\gamma(\\texttt{v1},\\texttt{v2},\\texttt{s1},\\texttt{s2 } )       \\label{eq : vvss }     \\end{array}\\ ] ]      the function ` jvssxx ` ( list  [ list : jvssxx ] ) computes an off - shell massive vector current from the ` vvss ` coupling .",
    "the vector propagator is given in unitary gauge for a massive vector .",
    "the arguments of this functions as : @xmath134 where the inputs and the outputs are : @xmath135 } & \\textrm{input vector wavefunction } \\\\      \\texttt{cmplx s1[3 ] } & \\textrm{first scalar wavefunction } \\\\      \\texttt{cmplx s2[3 ] } & \\textrm{second scalar wavefunction } \\\\",
    "\\texttt{cmplx gc } & \\textrm{coupling constants of \\texttt{vvss }       vertex } \\\\",
    "\\texttt{double vmass } & \\textrm{mass of output vector}\\\\",
    "\\texttt{double vwidth } & \\textrm{width of output vector}\\\\\\\\      \\textsc{outputs : } & \\\\",
    "\\texttt{cmplx jvss[6 ] } & \\textrm{vector current}\\\\      & j^\\mu ( \\texttt{v}^\\prime:\\texttt{vc},\\texttt{s1},\\texttt{s2 } )   \\\\",
    "\\label{eq : jvss }     \\end{array}\\ ] ]      the function ` hvvsxx ` ( list  [ list : hvvsxx ] ) computes an off - shell scalar current of ` vvss ` coupling .",
    "the arguments of this function as : @xmath136 where the inputs and the outputs are : @xmath133 } & \\textrm{first vector wavefunction } \\\\",
    "\\texttt{cmplx v2[6 ] } & \\textrm{second vector wavefunction } \\\\",
    "\\texttt{cmplx sc[3 ] } & \\textrm{input scalar wavefunction } \\\\",
    "\\texttt{cmplx gc }     & \\textrm{coupling constant of \\texttt{vvss } }",
    "\\\\      \\texttt{double smass } & \\textrm{mass of output scalar}\\\\      \\texttt{double swidth } & \\textrm{mass of output scalar } \\\\ \\\\",
    "\\textsc{outputs : } & \\\\      \\texttt{cmplx hvvs[3 ] } & \\textrm{scalar current}\\\\      & j(\\texttt{s}^\\prime:\\texttt{v1 } , \\texttt{v2},\\texttt{sc } ) \\\\",
    "\\label{eq : hvvsxx }     \\end{array}\\ ] ]          the function ` sssxxx ` ( list  [ list : sssxxx ] ) computes an amplitude of the three - scalar coupling , ` sss ` .",
    "the arguments of this function as : @xmath138 where the inputs and the outputs are : @xmath139 } & \\textrm{first scalar wavefunction}\\\\      \\texttt{cmplx s2[3 ] } & \\textrm{second scalar wavefunction}\\\\      \\texttt{cmplx s3[3 ] } & \\textrm{third scalar wavefunction}\\\\      \\texttt{cmplx gc }     & \\textrm{coupling constant of \\texttt{sss}}\\\\      & \\\\      \\textsc{outputs : } & \\\\",
    "\\texttt{cmplx\\ & vertex } & \\textrm{amplitude}\\\\      & \\gamma(\\texttt{s1 } , \\texttt{s2 } , \\texttt{s3 } )       \\label{eq : sssxxx }     \\end{array}\\ ] ]      the function ` hssxxx ` ( list  [ list : hssxxx ] ) computes an off - shell scalar current from the three - scalar coupling , ` sss ` .",
    "the arguments of this function as : @xmath140 where the inputs and the outputs are : @xmath139 } & \\textrm{first scalar wavefunction}\\\\      \\texttt{cmplx s2[3 ] } & \\textrm{second scalar wavefunction}\\\\      \\texttt{cmplx gc }     & \\textrm{coupling constant of \\texttt{sss}}\\\\      \\texttt{double smass } & \\textrm{mass of output scalar}\\\\",
    "\\texttt{double swidth } & \\textrm{width of output scalar}\\\\      & \\\\",
    "\\textsc{outputs : } & \\\\      \\texttt{cmplx hss[3 ] } & \\textrm{scalar current}\\\\       & j(s^\\prime:\\texttt{s1 } , \\texttt{s2 } )       \\label{eq : hssxxx }     \\end{array}\\ ] ]          the function ` ssssxx ` ( list  [ list : ssssxx ] ) computes an amplitude of the four - scalar , ` ssss ` , coupling .",
    "the arguments of ` ssssxx ` as : @xmath142 where the inputs and the outputs are : @xmath143 } & \\textrm{first scalar wavefunction } \\\\      \\texttt{cmplx s2[3 ] } & \\textrm{second scalar wavefunction } \\\\      \\texttt{cmplx s3[3 ] } & \\textrm{third scalar wavefunction } \\\\      \\texttt{cmplx s4[3 ] } & \\textrm{fourth scalar wavefunction } \\\\      \\texttt{cmplx gc }     & \\textrm{coupling constants of \\texttt{ssss }       vertex } \\\\ \\\\      \\textsc{outputs : } & \\\\      \\texttt{cmplx\\ & vertex } & \\textrm{amplitude of four scalar coupling}\\\\      & \\gamma(\\texttt{s1},\\texttt{s2},\\texttt{s3},\\texttt{s4 } )       \\\\",
    "\\label{eq : ssssxx }     \\end{array}\\ ] ]      the function ` hsssxx ` ( list  [ list : hsssxx ] ) computes an off - shell scalar current from ` ssss ` coupling .",
    "this function has the argument as : @xmath144 where the inputs and the outputs are : @xmath143 } & \\textrm{first scalar wavefunction } \\\\",
    "\\texttt{cmplx s2[3 ] } & \\textrm{second scalar wavefunction } \\\\      \\texttt{cmplx s3[3 ] } & \\textrm{third scalar wavefunction } \\\\      \\texttt{cmplx gc    } & \\textrm{coupling constant \\texttt{ssss } } \\\\",
    "\\texttt{double smass } & \\textrm{mass of output scalar}\\\\",
    "\\texttt{double swidth } & \\textrm{width of output scalar}\\\\      & \\\\",
    "\\textsc{outputs : } & \\\\      \\texttt{cmplx hsss[3 ] } & \\textrm{scalar current}\\\\      & j(\\texttt{s}^\\prime:\\texttt{s1},\\texttt{s2},\\texttt{s3 } )       \\\\",
    "\\label{eq : hsssxx }     \\end{array}\\ ] ]    j.  alwall , m.  herquet , f.  maltoni , o.  mattelaer and t.  stelzer , jhep * 1106 * ( 2011 ) 128 [ arxiv:1106.0522 [ hep - ph ] ] .",
    "j.  alwall , p.  demin , s.  de visscher , r.  frederix , m.  herquet , f.  maltoni , t.  plehn and d.  l.  rainwater _",
    "et al . _ ,",
    "jhep * 0709 * ( 2007 ) 028 [ arxiv:0706.2334 [ hep - ph ] ] .",
    "t.  stelzer and w.  f.  long , comput .",
    "commun .",
    "* 81 * ( 1994 ) 357 [ hep - ph/9401258 ] .",
    "f.  maltoni and t.  stelzer , jhep * 0302 * ( 2003 ) 027 [ hep - ph/0208156 ]",
    ". k.  hagiwara , j.  kanzaki , n.  okamura , d.  rainwater and t.  stelzer , eur .",
    "j.  c * 66 * ( 2010 ) 477 [ arxiv:0908.4403 [ physics.comp-ph ] ] .",
    "k.  hagiwara , j.  kanzaki , n.  okamura , d.  rainwater and t.  stelzer , eur .",
    "j.  c * 70 * ( 2010 ) 513 [ arxiv:0909.5257 [ hep - ph ] ] .",
    "h.  murayama , i.  watanabe and k.  hagiwara , kek-91 - 11 . ` http://www.nvidia.com/content/global/global.php ` ` http://www.nvidia.com/object/cuda\\_home\\_new.html ` j.  kanzaki , eur .",
    "j.  c * 71 * ( 2011 ) 1559 [ arxiv:1010.2107 [ physics.comp-ph ] ] .",
    "s.  kawabata , comput .",
    "commun .   * 41 * ( 1986 ) 127 .",
    "k.  hagiwara , t.  li , k.  mawatari and j.  nakamura , eur .",
    "j.  c * 73 * ( 2013 ) 2489 [ arxiv:1212.6247 [ hep - ph ] ] .",
    "s.  catani , y.  l.  dokshitzer , m.  h.  seymour and b.  r.  webber , nucl .",
    "b * 406 * ( 1993 ) 187 .",
    "j.  pumplin , d.  r.  stump , j.  huston , h.  l.  lai , p.  m.  nadolsky and w.  k.  tung , jhep * 0207 * ( 2002 ) 012 [ hep - ph/0201195 ] .",
    "d.  l.  rainwater and d.  zeppenfeld , jhep * 9712 * ( 1997 ) 005 [ hep - ph/9712271 ] .",
    "d.  l.  rainwater , d.  zeppenfeld and k.  hagiwara , phys .",
    "d * 59 * ( 1998 ) 014037 [ hep - ph/9808468 ] .",
    "n.  kauer , t.  plehn , d.  l.  rainwater and d.  zeppenfeld , phys .",
    "b * 503 * ( 2001 ) 113 [ hep - ph/0012351 ] .",
    "w.  giele , g.  stavenga and j.  -c .",
    "winter , eur .",
    "j.  c * 71 * ( 2011 ) 1703 [ arxiv:1002.3446 [ hep - ph ] ] .",
    "j.  kanzaki , in preparation .",
    "g.  marsaglia , journal of statistical software vol.8 , issue  14 ( july 2003 ) 1 .",
    "m. matsumoto and y. kurita , acm trans . on modeling and computer simulation , 2(1992),179194 doi:10.1145/146382.146383 ; m. matsumoto and y. kurita , acm trans .",
    "on modeling and computer simulation , 4(1994),254266 doi:10.1145/189443.189445 ; m. matsumoto and t. nishimura , acm trans . on modeling and computer simulation vol .",
    "1 , january pp.3 - 30 ( 1998 ) doi:10.1145/272991.272995 ; see also ` http://www.math.sci.hiroshima - u.ac.jp/~ m - mat / mt/ ` ` emt.html ` ."
  ],
  "abstract_text": [
    "<S> continuing our previous studies on qed and qcd processes , we use the graphics processing unit ( gpu ) for fast calculations of helicity amplitudes for general standard model ( sm ) processes . </S>",
    "<S> additional heget codes to handle all sm interactions are introduced , as well as the program mg2cuda that converts arbitrary madgraph generated helas amplitudes ( fortran ) into heget codes in cuda . </S>",
    "<S> we test all the codes by comparing amplitudes and cross sections for multi - jet processes at the lhc associated with production of single and double weak bosons , a top - quark pair , higgs boson plus a weak boson or a top - quark pair , and multiple higgs bosons via weak - boson fusion , where all the heavy particles are allowed to decay into light quarks and leptons with full spin correlations . </S>",
    "<S> all the helicity amplitudes computed by heget are found to agree with those computed by helas within the expected numerical accuracy , and the cross sections obtained by gbases , a gpu version of the monte carlo integration program , agree with those obtained by bases ( fortran ) , as well as those obtained by madgraph . </S>",
    "<S> the performance of gpu was over a factor of 10 faster than cpu for all processes except those with the highest number of jets . </S>"
  ]
}
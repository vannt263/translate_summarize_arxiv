{
  "article_text": [
    "let @xmath0 be a non - negative random variable .",
    "the distribution of @xmath0 is said to be infinitely divisible ( i d ) if for any positive integer @xmath3 , we can find i.i.d .",
    "random variables @xmath4 , @xmath5 such that @xmath6 for background , see @xcite , @xcite .",
    "there are many examples of such distributions , including the gamma distribution , compound poisson distributions , inverse gaussian distribution and right - skewed stable distributions .",
    "these distributions are also central in the study of non - decreasing lvy processes . in this paper",
    ", we give a method for numerically computing the probability density function ( pdf ) and cumulative distribution function ( cdf ) of a non - negative infinitely divisible random variable .",
    "our starting point is the lvy - khintchine ( lk ) formula ( @xcite , @xcite,@xcite ) , which in the case of non - negative i d random variables states that the laplace transform of @xmath0 , @xmath7 has an exponent @xmath8 which is called the laplace exponent , which can be written as @xmath9 here , @xmath10 is a shift and @xmath11 is a measure on @xmath12 which satisfies @xmath13 since we are interested primarily in pdfs and cdfs , we will assume that @xmath14 throughout , since a positive @xmath15 only shifts the pdf / cdf .",
    "let @xmath16 and @xmath17 denote the pdf and cdf of @xmath0 , respectively ( we will promptly drop the subscript @xmath0 on these functions when it is clear from the context ) .",
    "the laplace transforms of the pdf and cdf can be easily obtained from the lk formula ( we will use a tilde to denote a laplace transform ) : @xmath18 and a simple application of fubini s theorem implies @xmath19    thus , obtaining @xmath20 and @xmath21 is a matter of inverting a laplace transform . generally , this task is not easy .",
    "typically it is done by complex integration of the laplace transform ( see @xcite ) , which can be difficult if the integrands are slowly - decaying , oscillatory functions .",
    "this causes many numerical integration methods to converge slowly . here",
    ", we apply a different method of laplace inversion known as the _ post - widder ( pw ) method _",
    "( @xcite , theorem 2 or @xcite , section vii.6 ) .",
    "it is based on the fact that under weak conditions on a function @xmath20 , we have @xmath22 where @xmath23 denotes the @xmath24 derivative of @xmath25 evaluated at @xmath26 .",
    "thus , instead integrating the laplace transform , we are taking arbitrarily high derivatives .",
    "the obvious challenge in using this method is computing high derivatives of @xmath25 in ( [ e : pwformula ] ) to approximate the limit .",
    "some methods have been developed to do this in general ( see for instance , @xcite or @xcite ) , however most involve complex integration .",
    "the method we describe here for the case of infinitely divisible distributions is both easy to implement , and only involves ( at worst ) integration of a real valued non - negative exponentially decaying function .",
    "the method we use here combines both computation of a finite number of terms of the sequence in ( [ e : pwformula ] ) and an numerical extrapolation method to approximate the limit , @xcite .",
    "a similar method was used to compute mean first - passage times of lvy subordinators in @xcite .",
    "this paper is organized as follows . in section [ s : pwmet ]",
    "we give an overview of the approximation method used based on the ( pw ) formula . in section [ s : implementation ] , we outline the algorithm for finding @xmath20 and @xmath21 , as well as numerical issues that may arise in the computation .",
    "we test the method in cases where the pdf and cdf are known in closed form in section [ s : testit ] . in section [",
    "s : examples ] we apply our method to a collection of examples .",
    "the software for implementing the methods described here is freely available form the authors and its use it described in section [ s : guidetosoft ] .",
    "given a continuous function @xmath27 , which is bounded as @xmath28 , we will denote its @xmath29 pw approximation as @xmath30 the fact that @xmath31 as @xmath32 can be seen by approximating @xmath33 by @xmath34 , where @xmath35 , and the @xmath36 s are i.i.d .",
    "gamma random variables with mean @xmath37 and variance @xmath38 and then applying the law of large numbers ( see section vii.6 in @xcite ) .",
    "the convergence of @xmath39 to @xmath33 is slow in general . to illustrate this point ,",
    "let @xmath40 be a pdf @xmath20 of an inverse gaussian distribution for which the laplace transform is given by @xmath41 ( in this case the density @xmath42 is known in closed form , see section [ s : testit ] ) . in figure [ f : pwapprox ] , we plot the exact formula for @xmath20 as well as @xmath43 for @xmath44 . notice that even with @xmath45 derivatives of @xmath25 , the approximation is still poor .",
    "in fact , this is a general feature of the pw formula , as it has been shown ( @xcite ) that the errors @xmath46 have a power series expansion : @xmath47 where the coefficients @xmath48 are given by @xmath49 where @xmath50 are the associated stirling numbers of the first kind ( @xcite , chapter 4 , section 4 ) .",
    "thus , the convergence of @xmath43 is in general @xmath51 corresponding to the @xmath52 term .",
    "this method alone is thus inadequate for computing the inverse laplace transform to a high level of precision .",
    "together with the pw approximations @xmath53 , @xmath54 and @xmath55 ]    to obtain high precision , it is necessary to couple the pw approximations with a convergence acceleration method which extrapolates the limit in ( [ e : pwformula ] ) based on a finite collection of terms in the sequence .",
    "thus , our method for computing the pdf @xmath20 at @xmath56 involves two components :    * for some sequence @xmath57 , compute the approximates @xmath58 .",
    "* use the points @xmath59 to extrapolate @xmath60 .    and for the cdf , replace @xmath20 with @xmath21 above .",
    "we focus first on step 1 , which in sight of ( [ e : fk ] ) involves computing high derivatives of @xmath61 or @xmath62 .",
    "next , we ll discuss two methods of convergence acceleration to address step 2 .",
    "* remark : * our method produces the best results if the pdf and/or cdf are smooth functions for @xmath63 .",
    "that being said , this method still produces useful results in the non - smooth case , however it may fail to converge near points where the function lacks smoothness .",
    "this method should _ not _",
    "be used for distributions which contain atoms , such as the poisson distribution , or even distributions whose density lacks smoothness , such as a compound poisson distributions with bounded jump distribution . for such distributions",
    "another method based on numerically solving a kolmogorov - feller forward equation , is more suitable , see @xcite .",
    "we begin by presenting two methods of computing derivatives of @xmath64 .",
    "the first method is based on the simple observation that @xmath65 thus , leibnitz s formula implies that for any @xmath66 , the @xmath67 derivative of @xmath61 is given by @xmath68 notice that for @xmath69 fixed , the values of @xmath70 can be computed recursively using ( [ e : derofpsi ] ) if one has first computed @xmath71 for @xmath72 .    alternatively , the @xmath29 derivative of @xmath73 can be given directly in terms of the derivatives of @xmath2 using fa di bruno s formula ( @xcite , chapter 2 , section 8) , which yields in our case @xmath74 where the sum runs over all @xmath75 such that @xmath76 .",
    "this can expressed more simply in terms of the @xmath29 _ complete bell polynomial , _",
    "@xmath77 , as @xmath78 see @xcite or @xcite .",
    "furthermore , @xmath79 can be given in terms of the following @xmath80 determinant : @xmath81 this provides another way for computing @xmath82 .",
    "both methods above require the derivatives of the laplace exponent @xmath2 .",
    "fortunately , these can be computed directly , since the lk formula implies that for any @xmath83 , @xmath84 notice that passing derivatives through the integrals above is justified by the integrability assumption ( [ e : intassum ] ) , since for any @xmath85 , @xmath86 uniformly on @xmath87 for some constant @xmath88 . for many examples , these integrals have a closed form expression and",
    "can be computed easily .",
    "if a closed form is not available , many numerical integration methods are effective as these integrands are non - negative , exponentially decaying functions . in this case , it is important to use a small _ relative _ error tolerance , as @xmath89 can become extremely small for large @xmath69 .      for @xmath62 defined in ( [ e : derpsi ] ) , we again apply leibnitz s formula to ( [ e : derpsi ] ) and obtain @xmath90 when combined with the post - widder formula ( [ e : fk ] ) , we see a good deal of cancellation : @xmath91 \\nonumber \\\\ & = \\sum_{j = 0}^{k-1 } \\frac { ( -1)^{k+j-1}}{(k - j - 1 ) ! } \\left ( \\frac{k}{x } \\right)^{k - j-1 } \\psi^{(k - j-1)}(k / x ) \\label{e : pwcdf}\\end{aligned}\\ ] ] note that this requires the values @xmath92 , which can be computed using ( [ e : derofpsi ] ) and ( [ e : derofphi ] ) hence the recursive formula ( [ e : derofpsi ] ) is more convenient here than ( [ e : belleqn ] ) since it computes all derivatives of @xmath61 .      in some applications ,",
    "the derivatives of the pdf are also of interest .",
    "assuming the first @xmath93 derivatives of @xmath20 vanish at @xmath94 , i.e. @xmath95 , then @xmath96 has laplace transform @xmath97 where @xmath98 . in which case , leibnitz s formula gives @xmath99 thus , ( [ e : derofpsi ] ) and ( [ e : derofphi ] ) can be applied to compute the derivatives of @xmath20 .",
    "we want to compute the pdf @xmath42 or cdf @xmath100 by approximating the limit as @xmath101 in the post widder formula ( [ e : pwformula ] ) . by letting @xmath102 , ( [ e : pwerror ] )",
    "implies that @xmath42 can be written as @xmath103 we shall truncate the error series @xmath104 at @xmath105 and consider non - consecutive @xmath106 .",
    "if @xmath107 , @xmath108 , we can use the points @xmath109 to estimate the first @xmath110 unknown coefficients @xmath111 .",
    "indeed , the ( approximate ) @xmath112 system @xmath113 can be solved for the @xmath114 unknowns @xmath115 .",
    "since we are only interested in @xmath42 , it is enough to only compute the first row of the inverse of the matrix corresponding to the system ( [ e : sysas ] ) .",
    "this is essentially done in the polynomial extrapolation method described below in order to obtain an accurate approximation of the limit @xmath116 .",
    "there is a vast literature on such extrapolation methods and the errors associated to them , see @xcite for a review .",
    "below , we briefly review two techniques for approximating @xmath42 also used in @xcite .",
    "we call these methods of extrapolation . the first is based on polynomial interpolation , and the second based on rational function ( pad ) interpolation .",
    "not surprisingly , the rational extrapolation provides faster convergence in many cases , however we found it more susceptible to numerical instability for larger @xmath114 and @xmath117 .",
    "therefore , the `` better '' choice depends on the particular example and the desired accuracy .",
    "given the points @xmath109 , the @xmath110 degree lagrange polynomial @xmath118 which passes through these points is given by @xmath119 thus , taking @xmath120 ( or , @xmath121 ) in this polynomial provides the approximation @xmath122 we thus use a linear combination of the approximations @xmath58 to obtain a more accurate approximation of @xmath42 .",
    "as an alternative to polynomial extrapolation , on may instead fit a rational function to the points @xmath123 , @xmath124,@xmath125 of the form @xmath126 where @xmath127 is a polynomial of degree @xmath128 and @xmath129 is a polynomial of degree @xmath130 . here ,",
    "the coefficients @xmath131 are chosen so @xmath132 . when implementing this method , these coefficients are not computed directly like in the polynomial extrapolation case , but instead @xmath133 is computed iteratively in a triangular array using the following recursive formulas ( see @xcite , section 13 ) @xmath134 we then take @xmath135 as our approximation since @xmath136 corresponds to @xmath32 .",
    "notice that unlike the polynomial extrapolation , this transformation is _ nonlinear _ in the @xmath58 .",
    "one major drawback to using extrapolation techniques is that the error made in the approximation is difficult to bound analytically ( see , for instance , theorem 3 in @xcite and equation ( 13 ) in @xcite ) .",
    "one can however , obtain an asymptotic error bound for a rational or polynomial approximation .",
    "let @xmath137 be a sequence for which the approximant @xmath58 can be computed with @xmath138 .",
    "also , let @xmath139 be the approximation of @xmath42 obtained by using polynomial extrapolation with @xmath140 , with @xmath141 ( all the following formulas also hold with rational extrapolation by replacing @xmath139 with @xmath133 ) . in @xcite , bulirsch and stoer ( bs )",
    "construct a _",
    "second _ estimate of @xmath42 , @xmath142 , with the property that @xmath143 thus , asymptotically , @xmath142 is as good an approximation to @xmath42 as @xmath139 , except that it approaches @xmath42 from the opposite direction .",
    "this second approximation is obtained using a linear combination of the form @xmath144 and choosing the constant @xmath145 to change the sign of the leading term in the error @xmath146 .",
    "bs show this constant @xmath145 is given by @xmath147 this allows us to construct a numerical bound on the relative error made in this method . from ( [ e : asyerrorbound ] ) , we have @xmath148 fix any @xmath149 . from ( [ e : goto2 ] ) and since @xmath150",
    ", there exists @xmath151 large enough such that for @xmath152 , @xmath153 . using a similar argument",
    ", there also exists @xmath154 large enough such that for @xmath155 , @xmath156 . moreover , since @xmath157 and @xmath158 , we can pick @xmath159 large enough such that @xmath160 for all @xmath161 .",
    "we thus can refine our estimate as @xmath162 . if @xmath163 , @xmath164 and if @xmath165 , @xmath166    therefore ,    suppose @xmath167 and let @xmath139 be an approximation of @xmath42 obtained using either polynomial extrapolation or rational extrapolation , and let @xmath142 be defined as in ( [ e : newp0 ] ) . for @xmath114 large enough , we have @xmath168 where the right hand sides converge to 0 as @xmath169 .",
    "this provides a numerical bound on the absolute and relative errors of the approximation and suggests increasing @xmath114 until either @xmath170 or @xmath171 is smaller than a prescribed value .",
    "we begin with a description of the algorithm for computing the pdf and cdf based using the recursive formula ( [ e : derofpsi ] ) and the polynomial extrapolation method .",
    "this method is implemented in matlab and _ mathematica_. the method using rational extrapolation is also an option in the matlab implementation , but is not described here .",
    "* choose the sequence @xmath172 and a relative error tolerance @xmath173 .",
    "we found @xmath174 , with @xmath114 lying around @xmath175 to be effective for @xmath176 .",
    "initialize the following arrays : @xmath177 set @xmath178 . *",
    "compute @xmath179 as @xmath180 * for @xmath181 , compute the @xmath182 row of @xmath183 as @xmath184 @xmath185 is computed using the integrals in ( [ e : derofphi ] ) .",
    "the @xmath186 row of @xmath187 is then computed as @xmath188 * compute the @xmath189 post - widder approximation : @xmath190 * if @xmath178 , set @xmath191 , @xmath192 , and go to step 3 .",
    "otherwise , compute the @xmath189 extrapolation as @xmath193 set @xmath194 . if @xmath195 or if @xmath196 , return @xmath197 . otherwise , set @xmath198 and go to step 3 .",
    "the method for computing the cdf is similar , except that ( [ e : pwcdf ] ) is used instead for step 4 .",
    "follow steps for pdf computation above except replace step 4 . with",
    "in this section we use _ mathematica _ and consider two examples for which it is possible to compute the pdf and cdf exactly .",
    "the first example is the chi - squared distribution @xmath206 with one degree of freedom . for this distribution , @xmath207 du .",
    "\\\\ & \\phi^{(n)}_{\\chi^2}(\\lambda ) =   ( -1)^{n+1 } \\int_0^\\infty u^n e^{-\\lambda n } \\left",
    "[ \\frac{e^{-u/2}}{2 u } \\right ] du   \\\\ & \\qquad =    \\frac{(-1)^{n+1}}{2 } \\int_0^\\infty   u^{n-1 } e^{-u(\\lambda    + 1/2 ) }   du = \\frac{(-1)^{n+1 } ( n-1 ) !   } { 2 } \\left ( \\frac{1}{2 } + \\lambda \\right)^{-n } , \\quad n \\geq 1.\\end{aligned}\\ ] ]     @xmath37 & @xmath208 & @xmath209 & @xmath210 & @xmath211 & @xmath212 & @xmath213 + & @xmath214 & 1.20 & 0.242 & @xmath215 & @xmath216 & @xmath217 + & 4 & 4 & 4 & 6 & 9 & 14 + & 8 & 8 & 9 & 12 & 15 & 21 + & @xmath218 & 0.248 & 0.683 & 0.998 & @xmath219 & @xmath220 + & 3 & 3 & 3 & 4 & 4 & 1 + & 8 & 8 & 8 & 11 & 11 & 12 +   + @xmath37 & @xmath221 & @xmath222 & @xmath223 & @xmath210 & @xmath203 & @xmath224 + & @xmath225 & @xmath226 & 0.732 & 0.220 & @xmath227 & @xmath228 + & 12 & 8 & 6 & 5 & 6 & 6 + & 21 & 17 & 14 & 11 & 10 & 11 + & @xmath229 & @xmath230 & 0.025 & 0.480 & 0.944 & 0.982 + & 12 & 9 & 6 & 4 & 4 & 3 + & 21 & 17 & 13 & 10 & 8 & 8 +    results over a range of inputs is shown in table [ t : nval ] .",
    "we show the @xmath37-values considered as well as the value of @xmath114 required to obtain a relative precision of @xmath231 and @xmath232 . in figure [ f : c2errplots ] , we also plot the relative error as a function of @xmath114 .",
    "notice that the value of @xmath114 required is substantially higher when the value of the pdf or cdf takes on very small values , in particular , when @xmath233 .",
    "this is because @xmath234 over approximates @xmath20 at these points .",
    "the second example we considered is the inverse gaussian ( ig ) distribution ( @xcite , example 1.3.21 ) , for which @xmath235 du \\\\ & \\phi^{(n)}_{ig}(\\lambda ) = \\frac { ( -1)^{n+1}}{2 \\sqrt{\\pi } } \\int_0^\\infty u^{n - 3/2 } e^{-\\lambda u } du = \\frac{(-1)^{n+1}}{2 \\sqrt{\\pi } } \\gamma(n - 1/2 )",
    "\\lambda^{1/2 - n } =   \\frac{(-1)^{n+1 }    ( 2n-3 ) !   } { 2^{2(n-1 ) }   ( n-2 ) !   }",
    "\\lambda^{1/2 - n }    \\end{aligned}\\ ] ] table [ t : nval ] also shows the values of @xmath37 considered , the value of @xmath236 , and the value of @xmath114 needed to obtain relative errors of @xmath231 and @xmath232 .",
    "figure [ f : igeplots ] shows how the relative error behaves as a function of @xmath114 for three values of @xmath37 .",
    "similarly to the @xmath206 distribution , @xmath114 is largest when the value of the pdf is very close to @xmath94 .",
    "we will now consider examples of non - negative i d distributions for which the pdf and cdf are not known in closed form .",
    "we will compute them numerically using our method .",
    "the resulting plots of the pdfs and cdfs are obtained using matlab .",
    "each plot was generated in about 1 second . in order to apply our method ,",
    "we much first write the laplace transform in lk form , and then find @xmath8 and the derivatives @xmath89 by computing the integrals in ( [ e : derofphi ] ) . in almost every case below , these integrals can be given in `` closed form '' , which is to say they can at least be written in terms of special functions for which there are efficient methods for computation .",
    "we will assume through out that the drift @xmath14 in ( [ e : lk2 ] ) .",
    "the following special functions will appear throughout this section , we provide their definitions here for convenience : @xmath237 see @xcite , chapters 25 , 37 , 43 and 45 for more discussion of these functions and methods for efficient computation . for an integer @xmath85 , we have @xmath238 and @xmath239 see @xcite , equation 3.351.1 .      here",
    "we consider the class of examples with laplace exponent given by @xmath240 du,\\ ] ] where @xmath241 is a measure supported on @xmath242 .",
    "the lvy measure @xmath11 has a density is given by @xmath243 mixtures of this form are considered in @xcite and @xcite , in which these distributions are used in models of anomalous diffusion .",
    "the laplace exponent is expressed in ( [ e : st - lap ] ) and the derivatives @xmath200 for @xmath85 can be computed by using ( [ e : derofphi ] ) , a change in the order of integration , and the definition of the gamma function : @xmath244 since @xmath3 takes only integer values , @xmath245 , and so the above can be simplified further as @xmath246 where @xmath247 and @xmath248 , @xmath249 , @xmath250 are the stirling numbers of the first kind ( @xcite , page 162 ) .",
    "these are such that @xmath251 , and can computed with a triangular array similarly to pascal s triangle using the recursion formula @xmath252    let us now consider special cases of @xmath241 ( below , @xmath253 denotes the dirac @xmath253-distribution ) .",
    "indeed , an important example of this distribution is the _",
    "right skewed @xmath145-stable distributions _ ,",
    "for which @xmath241 is a point mass at @xmath255 , with @xmath256 ( using proposition 1.2.11 in @xcite , this distribution corresponds to the stable distribution @xmath257 ) .",
    "these distributions lie in the family of scaling limits for sums of non - negative i.i.d .",
    "random variables with infinite mean .",
    "form ( [ e : asphin ] ) , @xmath200 can be computed in various ways : @xmath258 the pdfs and cdfs of the right skewed @xmath145-stable distribution are plotted using our method in figure [ f : aspdfcdf ] for several values of @xmath145 .",
    "for example , we compute the pdf of a @xmath259-stable distribution at @xmath260 and obtain ( in mathematica ) @xmath261 this is exact to 15 decimal places and the computation took approximately half a second . an alternative method for this case",
    "is given in @xcite .",
    "the previous case can easily be generalized to weighted sums of independent @xmath145-stable random variables . from ( [ e : asphin ] ) it follows that in this case , @xmath263 plot of pdfs of such distributions can be see in figure [ f : sumaspdfcdf ] .",
    "this is an example of a distribution with no finite moments .",
    "the laplace exponent ( [ e : st - lap ] ) is given by @xmath265 and is @xmath210 if @xmath266 .",
    "higher derivatives of @xmath2 can be computed using ( [ e : asphin ] ) .",
    "the coefficients @xmath267 , @xmath268 can be computed in a few different ways .",
    "first , if @xmath269 , we have @xmath270 where @xmath271 is the lower incomplete gamma function ( see above ) . the formula ( [ e : gaminc ] ) can still be used for @xmath272 , however this requires analytic continuation of @xmath273 which is not always easy to compute .    as another approach",
    ", we compute @xmath267 by treating the cases @xmath274 and @xmath275 separately . if @xmath274 notice that @xmath276 if @xmath277 , taking the first 18 terms in this series gives an absolute error of @xmath278 . for @xmath279",
    ", the @xmath280 s can be computed recursively by applying integration by parts : @xmath281 since this procedure involves a division by @xmath282 , it should only be used when @xmath279 .",
    "-stable pdfs ( left ) and cdfs ( right ) for @xmath283 for @xmath284 .",
    "the pdf for @xmath285 corresponds to the right - most peak , and @xmath286 corresponds to the left - most peak ( which is nt visible ) .",
    "the cdf with the steepest slope around @xmath287 corresponds to @xmath285 . ]     for various choices of @xmath288 . by increasing @xmath289 ,",
    "the pdf for @xmath290 ( on the left ) is morphing into the pdf for @xmath291 ( on the right ) .",
    "( right figure ) these are pdfs corresponding to the sums @xmath292 for @xmath293 together with the uniform continuous mixture on @xmath242 , which has the highest peak . ]      in this section we consider the large class of non - negative i d distributions which can be expressed in terms of a poisson stochastic integral of a non random kernel .",
    "for a recent review of these integrals , see @xcite .",
    "let @xmath294 be a probability space let @xmath295 denote the borel sigma field on @xmath296 .",
    "let @xmath297 denote a independently scattered poisson random measure with control measure @xmath298 , that is , @xmath298 is a measure on @xmath295 and @xmath114 is a function @xmath299 such that    * @xmath300 if @xmath301 are disjoint . *",
    "@xmath302 if @xmath303 are disjoint .",
    "* for each @xmath304 , @xmath305 has a poisson distribution with mean @xmath306 .",
    "given such a pair @xmath307 one can define the following stochastic integral @xmath308 for a function @xmath40 on @xmath296 , for which @xmath309 and , for our purposes , is non - negative . in this case , the random variable @xmath310 is also non - negative and has laplace transform @xmath311    in order to compute the pdf and cdf of @xmath310 using our method , ( [ e : poislt1 ] ) must first be rewritten in lk form .",
    "in many cases , this can be done with some suitable change of variables @xmath312 satisfying @xmath313 . in this case , ( [ e : poislt1 ] ) becomes @xmath314 where for any borel set @xmath315 , the lvy measure @xmath316 can be expressed formally as @xmath317 where @xmath318 is the jacobian @xmath319 .    to illustrate this ,",
    "let us now focus on special cases , in dimensions @xmath320 and @xmath321 , where this change of variables can be made and our method applied .",
    "assume @xmath320 and that the integrand @xmath40 is a monotone , non - negative function with inverse @xmath322 .",
    "in this case , ( [ e : poislt1 ] ) can be rewritten in lk form using the change of variables @xmath323 : @xmath324 since @xmath325 , we get @xmath326 and hence , @xmath327 where @xmath328 denotes the image of @xmath12 under @xmath40 .",
    "suppose that we want to get the pdf and cdf of @xmath329 where @xmath330 , @xmath331 is a parameter and the control measure @xmath298 is lebesgue .",
    "in this case , a simple calculation shows that ( [ e : newpi1 ] ) becomes @xmath332}(u )   du.\\ ] ] thus , for this example , @xmath333 where @xmath334 is the entire exponential integral defined earlier .",
    "the derivatives @xmath89 , for @xmath85 can be given in closed form @xmath335 where the last equality follows from ( [ e : lincgam ] ) .",
    "we ve plotted the pdf and cdf of the random variable @xmath336 for various values of @xmath337 in figure ( [ f : oupoispdfcdf ] ) using our method . note that since the range of integration here is @xmath12 , the method described in @xcite does nt readily apply .     with various values of the parameter @xmath337 , which plays the role of a shape parameter",
    "the pdf for @xmath338 is the highest on the left .",
    "[ f : oupoispdfcdf ] ]      in this example , we generalize the previous case by looking at integration with respect to a non - negative lvy process , or equivalently , a one - dimensional non - negative i d random measure @xmath339 with control measure @xmath298 .",
    "@xmath339 is a random measure which satisfies the same conditions as the poisson random measure @xmath114 , except condition @xmath340 is replaced by    * there exists a lvy measure @xmath11 such that for any @xmath304 , the distribution of @xmath341 has laplace transform @xmath342    notice that the poisson random measure @xmath114 corresponds to the choice @xmath343 . for a given function @xmath40 , the stochastic integral @xmath344 can be defined in terms of a two - dimensional poisson stochastic integral : @xmath345 where the control measure of @xmath114 is given now by @xmath346 .",
    "observe that the kernel @xmath40 must now satisfy @xmath347    assume now for simplicity that @xmath348 for some function @xmath11 and that @xmath40 is a non - negative monotone function with inverse @xmath322 . in this case",
    ", we can obtain the lk form corresponding to @xmath349 : @xmath350 where we have made the change of variables @xmath351 , @xmath352 and the measure @xmath353 is given by @xmath354    to demonstrate our method in this case , consider @xmath355 where @xmath356 with @xmath357 , @xmath298 lebesgue , and @xmath358 , which is the lvy measure corresponding to the gamma distribution with shape @xmath359 and scale @xmath360 ( @xcite , example 1.3.22 ) . with the change of variables @xmath361 , ( [ e : newpi2 ] ) implies @xmath362 we can now compute the corresponding laplace exponent for this case : @xmath363 dt   \\nonumber\\\\ & = \\eta \\kappa \\int_0^\\lambda \\frac{1}{t } \\left [ \\int_0^\\infty w^{-1 }    e^{-w/\\theta } ( 1- e^{-w t } ) dw \\right ] dt \\label{e : almostdilog}\\\\ & = \\eta \\kappa \\int_0^\\lambda \\frac{1}{t }   \\int_0^\\infty \\left (    e^{-w/\\theta } \\int_0^t e^{-w s } ds \\right ) dw dt \\nonumber\\\\ & = \\eta \\kappa \\int_0^\\lambda \\frac{1}{t } \\left [ \\int_0^t    \\int_0^\\infty e^{-w ( s + 1/\\theta ) } dw \\",
    "ds \\right ] dt \\nonumber\\\\ & = \\eta \\kappa \\int_0^\\lambda \\frac { \\log ( 1 + t \\theta ) } { t } dt = \\eta \\kappa l_2 ( 1 + \\lambda \\theta )   \\label{e : dilog}\\end{aligned}\\ ] ] the derivatives of @xmath2 can also be computed exactly in this case . using ( [ e : derofphi ] ) and ( [ e : lincgam ] ) , @xmath364 dw \\\\ & =   ( -1)^{n+1 } \\eta \\kappa \\int_0^\\infty   w^{-1 } e^{-w/\\theta } \\left [    \\frac{(n-1)!}{\\lambda^n } - e^{-w \\lambda } \\sum_{m=0}^{n-1 }    \\frac{(n-1)!}{m ! } \\frac{w^m}{\\lambda^{n - m } } \\right ] dw \\\\ & = ( -1)^{n+1 } \\eta \\kappa   \\frac{(n-1)!}{\\lambda^n } \\left [ \\int_0^\\infty w^{-1 } e^{-w/\\theta }    ( 1- e^{-w/ \\theta } ) dw - \\sum_{m=1}^{n-1 } \\frac{\\lambda^m}{m ! }    \\int_0^\\infty w^{m-1 } e^{-w(\\lambda + 1/\\theta ) } dw \\right ] \\\\ & = ( -1)^{n+1 } \\eta \\kappa   \\frac{(n-1)!}{\\lambda^n } \\left [ \\log(1 + \\lambda   \\theta ) -    \\sum_{m=1}^{n-1 } \\frac { ( \\lambda \\theta)^m } { m \\ ( 1 + \\lambda   \\theta)^m } \\right],\\end{aligned}\\ ] ] where the first integral in the second to last line above is computed as in ( [ e : almostdilog ] ) .",
    "alternatively , @xmath89 above can also be given simply in terms of the gauss hypergeometric function @xmath365 ( @xcite , equation 6.455.1 , page 657 ) @xmath366    in figure [ f : ougamma ] we ve plotted the pdf and cdf of ( [ e : ougamma ] ) for @xmath367 and various values of the product @xmath368 using our method .",
    "with various values of the parameter @xmath337 . ]",
    "in this section , we will explain how to use the software written to implement the method discussed in this paper .",
    "versions of this code exist in matlab and mathematica , and are freely available by request form the authors .",
    "each version will include a file containing examples to assist in using the code .",
    "to begin using the code , download the file ` nninfdiv.zip ` and extract the directory ` nninfdiv ` .",
    "this directory contains both the matlab and mathematica programs in separate folders .",
    "we will now focus on these separately .",
    "the main function is called ` nninfdiv ` .",
    "this function takes in 5 arguments in the following order : @xmath370 the last three inputs ` func , method ` and ` tol ` are optional , and take default values ` pdf , polynomial ` and @xmath231 .",
    "the input ` dist ` is a cell array which contains the name of the desired distribution followed by the parameters .",
    "possibilities for ` dist ` are @xmath371\\ } } & \\quad & \\mbox{weighted    sum of chi - squared distributions } \\\\ & \\texttt { \\{'alpha stable',a , c\\ } } & \\quad & \\mbox{alpha - stable    distribution with $ \\alpha$ = a and scaling $ c$}. \\\\ & \\texttt { \\{'alpha stable',[a1, ... ,an],[c1, ... ,cn]\\ } } & \\quad & \\mbox{sum of $ n$ weighted alpha - stable    distributions}. \\\\ & \\mbox{\\texttt { \\{'uniform mix'\\ } } } & \\quad & \\mbox{uniform mix from section    \\ref{s : uniformmix}. } \\\\ & \\mbox{\\texttt { \\{'ou poisson',eta\\ } } } & \\quad & \\mbox{the integral    $ i(e^{-s/\\eta})$ from section \\ref{s : oupoisson } } \\\\ & \\mbox{\\texttt { \\{'ou gamma',eta , kappa\\ } } } & \\quad & \\mbox{the integral $ i_l(e^{-s/\\eta})$ from section \\ref{s : ougamma}}.\\end{aligned}\\ ] ] the scaling constants seen in the alpha - stable and chi - squared examples above compute the pdf / cdf of the scaled random variables @xmath372 for @xmath373 in the single alpha - stable and single chi - squared case .",
    "likewise , in the weighted case , they return the pdf / cdf of @xmath374 with @xmath375 , and @xmath376 is chi - squared with ` df ` degrees of freedom or is alpha - stable with @xmath377`ai ` .",
    "since the input for ` nninfdiv ` is long , it is often useful to define a _ function handle _ in order to call the function more easily .",
    "for example , consider the @xmath145-stable distribution with @xmath378 .",
    "we define the pdf of this distribution in the variable ` f ` by typing      the function ` f ` now computes the pdf of the alpha - stable distribution with @xmath378 to within a relative error of @xmath231 using the polynomial interpolation method . for example",
    ", you may now type @xmath379 ) }   & \\qquad & \\mbox{computes the pdf at $ x=1,2 $ and $ 3$.}\\\\ & \\gg \\texttt{plot([.05:.05:2],f([.05:.05:2 ] ) ) } & \\qquad & \\mbox{plots the pdf    on the interval ( 0,2]}\\end{aligned}\\ ] ]    * remark : * obtaining relative errors less than @xmath231 is sometimes difficult . if your error tolerance can not be reached , the program will return the best estimate possible in double precision .",
    "if high precision is preferred over speed , the mathematica version should be used .      to use the mathematica version , launch ` mathematica ` open the file ` nninfdiv.nb ` located in the directory ` nninfdiv / mathematica ` . once this file is open , select all its contents by pressing ` alt - a ` on a pc or ` cmd - a ` on a mac . then compile the code by pressing ` shift - return",
    "you are now ready to use the code in a separate notebook .",
    "the main program is called ` nninfdiv ` ( capitalization matters ) .",
    "this program is called with 4 arguments : @xmath380 the last two inputs ` func ` and ` tol ` are optional , taking default values `` ` pdf ` '' and @xmath232 respectively .",
    "possibilities for ` dist ` include @xmath381 the scaling constants seen in the chi - squared and alpha - stable cases above refer to the random variables @xmath382 with @xmath383 in the alpha - stable case and @xmath384 in the chi - squared case , with @xmath376 i.i.d chi - squared .",
    "the function ` f ` now computes the cdf of @xmath145-stable distribution with @xmath378 to a relative precision of @xmath232 .",
    "for example , one can now enter @xmath385 }   & \\qquad & \\mbox{computes the cdf at $ x=1$}\\\\ & \\texttt{table[f[x],\\{x,\\{1,2,3\\}\\ } ] } & \\qquad & \\mbox{computes the cdf    at $ x=1,2 $ and $ 3 $ } \\\\",
    "& \\texttt{listplot[table[\\{x , f[x]\\},\\{x,0,2,.05\\}],joined - > true ] } & \\qquad & \\mbox{plots the cdf    on the interval [ 0,2]}\\end{aligned}\\ ] ]    * remark : * using ` nninfdiv ` with mathematica s ` plot ` function is very slow , which is why we used the ` listplot ` function above . for faster plotting and function evaluation , the matlab version of the code should be used .",
    "j.  abate , g.  l. choudhury , and w.  whitt .",
    "an introduction to numerical transform inversion and its application to probability models . in w.",
    "k. grassman , editor , _ computational probability _ , pages 258322 .",
    "kuwer academic publishers , usa , 2000 .",
    "i.  s. gradshteyn and i.  m. ryzhik . .",
    "elsevier / academic press , amsterdam , seventh edition , 2007 . translated from the russian , translation edited and with a preface by alan jeffrey and daniel zwillinger , with one cd - rom ( windows , macintosh and unix ) .",
    "j.  pitman . , volume 1875 of _ lecture notes in mathematics_. springer - verlag , berlin , 2006 .",
    "lectures from the 32nd summer school on probability theory held in saint - flour , july 724 , 2002 , with a foreword by jean picard ."
  ],
  "abstract_text": [
    "<S> we present a method for computing the pdf and cdf of a non - negative infinitely divisible random variable @xmath0 . </S>",
    "<S> our method uses the lvy - khintchine representation of the laplace transform @xmath1 , where @xmath2 is the laplace exponent . </S>",
    "<S> we apply the post - widder method for laplace transform inversion combined with a sequence convergence accelerator to obtain accurate results . </S>",
    "<S> we demonstrate this technique on several examples including the stable distribution , mixtures thereof , and integrals with respect to non - negative lvy processes . </S>",
    "<S> software written to implement this method is available from the authors and we illustrate its use at the end of the paper . </S>"
  ]
}
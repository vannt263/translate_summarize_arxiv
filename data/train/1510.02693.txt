{
  "article_text": [
    "when machine learning methods are applied to model sequential data such as text , speech and video , it is very important to take advantage of the long - term dependency .",
    "traditional approaches have explored to capture the long - term structure within the sequential data using recurrent feedbacks such as in regular recurrent neural networks ( rnns ) or lstm - based models .",
    "rnns can learn and carry out complicated transformations of data over extended periods of time and store the memory in the weights of the network .",
    "therefore , they are gaining more and more popular in sequential data modeling tasks .",
    "more recently , different from rnns , there has also been a surge in constructing neural computing models with varying forms of explicit memory units @xcite .",
    "for example , in @xcite , the proposed memory networks employ a memory component that can be read from and written to . in @xcite , the proposed neural turing machines ( ntm )",
    "improve the memory of neural networks by coupling with external memory resources , which can learn to sort a small set of numbers as well as other symbolic manipulation tasks .    in this work",
    ", we have proposed a simpler structure for memory neural networks , namely feedforward sequential memory networks ( fsmn ) , which can learn long - term dependency in sequential data without using the recurrent feedback . for fsmn , we extend the standard feedforward neural networks by introducing memory blocks in the hidden layers .",
    "different from rnns , the overall fsmns remain as a feed - forward structure so that they can be learned in much more efficient and stable ways than rnns and lstms . in our work , we have evaluated the performance of fsmn on two language modeling tasks : penn tree bank ( ptb ) and english wiki in large text compression benchmark ( ltcb ) . in both tasks , fsmn based language models",
    "can significantly outperform not only the standard fnn - lms but also the popular recurrent neural network ( rnn ) lms by a significant margin .",
    "feedforward sequential memory network ( fsmn ) is a standard feedforward neural network with single or multiple memory blocks in the hidden layer . for instance , figure [ fig : fsmn ] ( a ) shows an fsmn with one memory block added into its second hidden layer . given a sequence , @xmath0 , each @xmath1 represents an input data at time instance t. the corresponding hidden layer outputs are denoted as @xmath2 , each @xmath3 .",
    "as shown in figure [ fig : fsmn ] ( b ) , we can use a tapped - delay structure to encode @xmath4 and its previous @xmath5 histories into a fixed - sized representation in the memory block : @xmath6 where all coefficients form an n - dimension learnable vector @xmath7 , and @xmath8 is the activation function ( sigmoid or relu ) .",
    "furthermore , as shown in figure [ fig : fsmn ] ( a ) , @xmath9 may be fed into next hidden layer in the same way as @xmath4 . from the viewpoint of signal processing",
    ", the memory block in fsmn can be regarded as a high - order finite impulse response ( fir ) filter while the recurrent layer in rnns , namely @xmath10 , may be viewed as a first - order infinite impulse response ( iir ) filter , see figure [ fig : fsmn ] ( c ) .",
    "obviously , the vector @xmath11 may be regarded as the coefficients of an n - order fir filter .",
    "we know iir filters are more compact than fir filters",
    ". however , iir filters may be difficult to implement . in some cases",
    ", iir filters may become unstable but fir filters are always stable .",
    "moreover , the learning of iir - filter - like rnns requires to use the so - called back - propagation through time ( bptt ) which significantly increases the computational complexity of the learning and also causes the problems of gradient vanishing and exploding @xcite . on the other hand , the proposed fir - filter - like fsmns can be efficiently learned using the standard back - propagation procedure .",
    "therefore , the learning of fsmns is more stable and efficient than that of rnns .",
    "the goal in language modeling is to predict the next word in a text sequence given all previous words .",
    "we now explain how to implement fsmns for this task .",
    "fsmn is a standard feedforward neural network ( fnn ) except the additional memory blocks .",
    "we will show that the memory block can be efficiently implemented as sentence - by - sentence matrix multiplications , which are suitable for the mini - batch based stochastic gradient descent ( sgd ) method running on gpus .",
    "suppose the n - order fir filter coefficients in the memory block are denoted as @xmath12 .",
    "for a given sentence @xmath13 consisting of @xmath14 words , we may construct a @xmath15 square matrix @xmath16 as follow : @xmath17\\ ] ] therefore , the sequential memory operations in eq.([eq.1 ] ) for the whole sequence can be computed with one matrix multiplication as : @xmath18 .",
    "similarly , we may extend the idea to a mini - batch composed of @xmath19 sentences , @xmath20 , we can compute the sequential memory representation for all sentences in the mini - batch as follows : @xmath21\\cdot\\left [ \\begin{gathered } { \\bf m}_1 \\hfill \\\\",
    "\\qquad   { \\bf m}_2 \\hfill \\\\",
    "\\qquad \\qquad   \\ddots   \\hfill \\\\",
    "\\qquad \\qquad \\qquad   { \\bf m}_k\\hfill \\\\",
    "\\end{gathered }   \\right ] ) = f({\\bf \\bar{h}}\\cdot { \\bf \\bar{m}})\\ ] ]    in the backward pass , except the weights in the network , we also need to calculate the gradients of @xmath22 , which is then used to update the filter coefficients @xmath11 .",
    "we can calculate the gradients using the standard back - propagation ( bp ) algorithm .",
    "therefore , all computation in fsmns can be formulated as large matrix multiplications , which can be efficiently conducted in gpus . as a result ,",
    "fsmn based lms have the same computational complexity as the standard nn lms in training , which is much more efficient than rnn - lms .",
    "we have evaluated fsmns on two benchmark lm tasks : i ) the penn treebank ( ptb ) corpus of about 1 m words , following the same setup as @xcite .",
    "ii ) the large text compression benchmark ( ltcb ) @xcite . in ltcb",
    ", we use the _ enwik9 _",
    "dataset , which is composed of the first @xmath23 bytes of enwiki-20060303-pages-articles.xml .",
    "we split it into three parts : training ( 153 m ) , validation ( 8.9 m ) and test ( 8.9 m ) sets .",
    "we limit the vocabulary size to 80k for ltcb and replace all out - of - vocabulary words by @xmath24unk@xmath25 .    for fsmns ,",
    "the hidden units employ the rectified linear activation function , i.e. , @xmath26 .",
    "the nets are initialized based on the normalized initialization in @xcite , without using any pre - training .",
    "we use sgd with a mini - batch size of 200 and 500 for ptb and ltcb tasks respectively .",
    "the initial learning rate is 0.4 and 0.002 for the weights and filter coefficients respectively , which is kept fixed as long as the perplexity on the validation set decreases by at least 1 .",
    "after that , we continue six more epochs of training , where the learning rate is halved after each epoch . in ptb task",
    ", we also use momentum ( 0.9 ) and weight decay ( 0.00004 ) to avoid overfitting .",
    "we have first evaluated the performance of fsmn - lms on the ptb task .",
    "we have trained fsmn with an input context window of two , where the previous two words are used to predict the next word .",
    "the fsmn contains a linear projection layer ( of 200 nodes ) , two hidden layers ( of 400 nodes pre layer ) and a memory block in the first hidden layer . for the memory block ,",
    "we use a 20-order fir filter . in table 1",
    ", we have summarized the perplexities on the ptb test set for various language models .    for the ltcb task ,",
    "we have trained several baseline systems : i ) two n - gram lms ( 3-gram and 5-gram ) using the modified kneser - ney smoothing without count cutoffs ; ii ) several traditional feedforward nnlms with different model sizes and input context windows ( bigram , trigram , 4-gram and 5-gram ) ; iii ) an rnn - lm with one hidden layer of 600 nodes using the toolkit in @xcite ; iv ) 2nd - order fofe based fnnlm @xcite with different hidden layer sizes .",
    "moreover , we have examined our fsmn based lms with different architectures .",
    "we have trained a 3-hidden - layer fsmn with a memory block in the first hidden layer , second hidden layer or both .",
    "the order of the fir filter is 30 in these experiments . in table 2 , we have summarized the perplexities on the ltcb test set for various models .",
    "experimental results in table 1 and table 2 have shown that the fsmn based lms can significantly outperform the baseline higher - order feedforward neural network ( fnn ) lms , fofe - based fnn lms as well as the popular rnn - based lms by a quite significant margin .",
    ".perplexities on ltcb for various language models .",
    "( m ) denotes a hidden layer with memory block . [ cols=\"<,^\",options=\"header \" , ]     [ tab : wiki_summary ]",
    "in this work , we have proposed a novel neural network architecture , namely feedforward sequential memory networks ( fsmn ) , which use fir - filter - like memory blocks in the hidden layer of standard feedforward neural networks .",
    "experimental results on language modeling tasks have shown that the fsmn can effectively learn the long term history .",
    "for the future work , we will try to apply this model to other sequential data modeling tasks , such as acoustic modeling in speech recognition .",
    "s. hochreiter , j. schmidhuber .",
    "_ long short - term memory_. neural computation , 1997 , 9(8 ) : 1735 - 1780 .",
    "a. graves .",
    "_ generating sequences with recurrent neural networks_. arxiv:1308.0850 , 2013 .",
    "j. chung , c. gulcehre , k. h. cho , et al .",
    "_ empirical evaluation of gated recurrent neural networks on sequence modeling_. arxiv:1412.3555 , 2014 .",
    "t. mikolov , a. joulin , s. chopra , et al .",
    "_ learning longer memory in recurrent neural networks_. arxiv:1412.7753 , 2014 .",
    "a. graves , g. wayne , i. danihelka .",
    "_ neural turing machines_. arxiv:1410.5401 , 2014 .",
    "j. weston , s. chopra , a. bordes .",
    "_ memory networks_. arxiv:1410.3916 , 2014 .",
    "s. sukhbaatar , a. szlam , j. weston .",
    "_ end - to - end memory networks_. arxiv:1503.08895 , 2015 .",
    "a. joulin , t. mikolov .",
    "_ inferring algorithmic patterns with stack - augmented recurrent nets_. arxiv:1503.01007 , 2015 .",
    "a. bordes , n. usunier , s. chopra , j. weston . _ large - scale simple question answering with memory networks_. arxiv:1506.02075 , 2015 .",
    "y. bengio , p. simard , p. frasconi .",
    "_ learning long - term dependencies with gradient descent is difficult_. ieee transactions on neural networks .",
    "volume 5 , no 2 , pages 157 - 166 , 1994 .",
    "t. mikolov , s. kombrink , l. burget , j. cernocky and s. khudanpur .",
    "_ extensions of recurrent neural network language model_. in proc . of international conference on acoustics , speech and signal processing ( icassp ) ,",
    "pages 5528 - 5531 , 2011 .",
    "m. mahoney .",
    "_ large text compression benchmark_. in http://mattmahoney.net/dc/textdata.html , 2011 .",
    "g. xavier , y. bengio .",
    "_ understanding the difficulty of training deep feedforward neural networks_. in proc .",
    "of aistats , 2010 .",
    "s. zhang , h. jiang , m. xu , j. hou and l.r .",
    "dai . _ the fixed - size ordinally - forgetting encoding method for neural network language models_. in proceedings of the 53rd annual meeting of the association for computational linguistics ( acl ) , pp.495 - 500 , 2015 . t. mikolov , m. karafit , l. burget , j. cernocky and s. khudanpur .",
    "_ recurrent neural network based language model_. in proc . of interspeech , pages 1045 - 1048 , 2010 ."
  ],
  "abstract_text": [
    "<S> we introduce a new structure for memory neural networks , called feedforward sequential memory networks ( fsmn ) , which can learn long - term dependency without using recurrent feedback . </S>",
    "<S> the proposed fsmn is a standard feedforward neural networks equipped with learnable sequential memory blocks in the hidden layers . in this work , we have applied fsmn to several language modeling ( lm ) tasks . </S>",
    "<S> experimental results have shown that the memory blocks in fsmn can learn effective representations of long history . </S>",
    "<S> experiments have shown that fsmn based language models can significantly outperform not only feedforward neural network ( fnn ) based lms but also the popular recurrent neural network ( rnn ) lms . </S>"
  ]
}
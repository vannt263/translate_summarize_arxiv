{
  "article_text": [
    "recent advances in micro - electromechanical systems ( mems ) and wireless communications have enabled the development of very small , smart , low cost sensing devices ( @xcite ) with sensing , data - processing and wireless transmission capabilities .",
    "they are meant to be pervasively deployed into forming ad - hoc wireless sensor networks that collect information from the ambient environment and make it available to the user .",
    "some applications imply deployment in remote or hostile environments ( battle - field , tsunami , earth - quake , isolated wild - life island , space exploration ) to assist in tasks such as target tracking , enemy intrusion detection , forest fire detection , environmental or biological monitoring .",
    "some other applications imply deployment indoors or in urban or controlled environments .",
    "examples of such applications are industrial supervising , indoor micro - climate monitoring ( e.g. to reduce heating cost by detecting poor building thermal insulation ) , smart - home applications , patient - doctor health monitoring or blind and impaired assisting .",
    "sensor networks imply distributed and collaborative data - processing , because of the small utility of each sensor individually and the severe resource constraints , mainly with respect to energy but also memory and computation capabilities .",
    "we wish to solve the problem of tracking objects moving in a domain over a certain period of time i.e. we want the wireless sensor network to be able to detect the position of any moving object in the domain at any time in the monitoring period .",
    "location tracking is the current standard approach to the tracking problem in sensor networks .",
    "location tracking includes several phases : target detection , distance estimation , position evaluation and trajectory estimation .",
    "the target detection is performed individually by sensor nodes in the network and does not need any synchronization .",
    "the distance estimation uses either an empiric law ( e.g. based on signal attenuation estimations ) translating the sensing intensity into a real valued distance , or uses a special hardware device performing this translation . the position estimation phase is typically addressed with trilateration .",
    "at least three nodes are periodically chosen among the sensors located next to the target .",
    "each of these three nodes gives an estimate of its distance to the target .",
    "finally , another node ( that can be one of the three ) performs trilateration based on the distance estimates and computes the position estimate . the position evaluation is then sent to a base - station in order to estimate the trajectory of the moving object .",
    "while this method can give very precise results when the network is dense enough ( at least 3 nodes have to be located next to the target as it moves ) , it has several drawbacks .",
    "first , this technique does not scale to the case of tracking multiple objects , for instance a group of objects moving in formation , or several individual objects .",
    "protocols designed to compute in a precise manner the position of an individual target are not able to cope with the question `` detect any of the members of a given group '' .",
    "second , the protocol overhead is high in terms of communication .",
    "each time a position is estimated , three nodes are chosen .",
    "then , among these three nodes another node is chosen to perform the position evaluation .",
    "this is done through exchange of protocol messages and can be quite energy consuming .",
    "while precision may be needed in some applications , other applications need only rough information on the location area .",
    "for instance , if the target is represented by a group of several objects , we may want to detect just an arbitrary location within this area .",
    "finally , this technique assumes the existence of a base station with powerful computational resources , generally supposed to be fixed .",
    "although this is sometimes realistic , many of the tracking applications do not respect this hypothesis .",
    "for instance , soldiers tracking an enemy would be moving to follow it .",
    "another example is habitat monitoring : a group of biologists tracking an antelope herd also needs to move towards the detected herd .",
    "in fact , many natural tracking applications actually use a mobile sink .    in order to cope with these problems",
    "we broaden the hypothesis defining the tracking problem : a ) the target can be an individual object ( e.g. a patient in a hospital ) as well as a large group of several objects ( e.g. an animal herd ) .",
    "b ) the tracking precision becomes a parameter of the problem .",
    "we are primarily concerning ourselves with fuzzy tracking applicable to large group of objects , where the degree of precision needs not be high .",
    "but our techniques can use any sort of location information attached to sensors to enhance our solution s quality ( for instance , if in a hospital sensor nodes are aware of their location in terms of building wing and room number , and we can use this information for the tracking results ) .",
    "c ) the sink can be either fixed or mobile and there can be more than one sink ( for instance , troopers or a group of biologists ) . as the fixed sink case is rather well studied , we are concerning ourselves mainly with the mobile sink problem , which is useful in applications but also more challenging to cope with .",
    "the main idea of our approach is to avoid actively involving sensors in the tracking process .",
    "instead , we exploit `` traces '' of target presence that are anyway left around its moving trajectory .",
    "the role of sensors in our protocol is rather passive : they just locally decrease trace intensities with time ( to take into account the fact that the target was detected but then moved away ) and also propagate them appropriately , in order to spread then in a balanced way in the network at a low energy cost . the active role in our tracking approach",
    "is performed by the tracking agent , that greedily follows trace gradients to locate the moving target .    as shown by the simulation findings ,",
    "our approach achieves significant improvements over well known methods in the state of the art .",
    "first , our protocol is successful ( i.e. the target is indeed located ) , even in the case of multiple targets and mobile sinks .",
    "also , our protocol is very efficient , since it reduces energy a lot ( by avoiding active sensor participation ) while keeping latency low ( by spreading trace intensities in a way that `` covers '' the network in a balanced way ) .      a standard centralized approach to tracking ( @xcite ) , is `` sensor specific '' , in the sense that it uses some smart powerful sensors that have high processing abilities . in particular",
    ", this algorithm assumes that each node is aware of its absolute location ( e.g. via a gps ) or of a relative location .",
    "the sensors must be capable of estimating the distance of the target from the sensor readings .",
    "the process of tracking a target has three distinct steps : detecting the presence of the target , determining the direction of motion of the target and alerting appropriate nodes in the network .",
    "thus , in their approach a very large part of the network is actively involved in the tracking process , a fact that may lead to increased energy dissipation . also , in contrast to our method that can simultaneously handle multiple targets , their protocol can only track one target in the network at any time .",
    "overall , their method has several strengths ( reasonable estimation error , precise location of the tracked source , real time target tracking , but there are weaknesses as well ( intensive computations , intensive radio transmissions ) .    our method is entirely different to the network architecture design approach for centralized placement / distributed tracking ( see e.g. the book @xcite for a nice overview ) . according to that approach , optimal ( or as efficient as possible ) sensor deployment strategies are proposed to ensure maximum sensing coverage with minimal number of sensors , as well as power conservation in sensor networks . in one of the centralized methods ( @xcite ) , that focuses on deployment optimization , a grid manner discretization of the space",
    "is performed .",
    "their method tries to find the gridpoint closest to the target , instead of finding the exact coordinates of the target .",
    "in such a setting , an optimized placement of sensors will guarantee that every gridpoint in the area is covered by a unique subset of sensors .",
    "another network design approach for tracking is provided in @xcite , that tries to avoid an expensive massive deployment of sensors , taking advantage of possible coverage ovelaps over space and time , by introducing a novel combinatorial model ( using set covers ) that captures such overlaps .",
    "the authors then use this model to design and analyze an efficient approximate method for sensor placement and operation , that with high probability and in polynomial expected time achieves a @xmath0 approximation ratio to the optimal solution .    clearly ,",
    "in contrast to our direct approach to tracking , such network design solutions can provide full tracking only when combined with collaborative processing methods , to process and synthesize individual target location estimations .",
    "as opposed to centralized processing , in a distributed model sensor networks distribute the computation among sensor nodes .",
    "each sensor unit acquires local , partial , and relatively coarse information from its environment .",
    "the network then collaboratively determines a fairly precise estimate based on its coverage and multiplicity of sensing modalities .",
    "several such distributed approaches have been proposed . in @xcite ,",
    "a cluster - based distributed tracking scheme is provided .",
    "the sensor network is logically partitioned into local collaborative groups .",
    "each group is responsible for providing information on a target and tracking it .",
    "sensors that can jointly provide the most accurate information on a target ( in this case , those that are nearest to the target ) form a group . as the target moves , the local region must move with it ; hence groups are dynamic with nodes dropping out and others joining in .",
    "it is clear that time synchronization is a major prerequisite for this approach to work .",
    "furthermore , this algorithm works well for merging multiple tracks corresponding to the same target .",
    "however , if two targets come very close to each other , then the mechanism described will be unable to distinguish between them .",
    "another nice distributed approach is the dynamic convoy tree - based collaboration ( dctc ) framework that has been proposed in @xcite .",
    "the convoy tree includes sensor nodes around the detected target , and the tree progressively adapts itself to add more nodes and prune some nodes as the target moves .",
    "in particular , as the target moves , some nodes lying upstream of the moving path will drift farther away from the target and will be pruned from the convoy tree . on the other hand , some free nodes lying on the projected moving path will soon need to join the collaborative tracking . as the tree further adapts itself according to the movement of the target , the root will be too far away from the target , which introduces the need to relocate a new root and reconfigure the convoy tree accordingly . if the moving target s trail is known a priori and each node has knowledge about the global network topology , it is possible for the tracking nodes to agree on an optimal convoy tree structure ; these are at the same time the main weaknesses of the protocol , since in many real scenarios such assumptions are unrealistic .",
    "finally , a `` mobile '' agent approach is followed in @xcite , i.e. a master agent is traveling through the network , and two slave agents are assigned the task to participate to the trilateration . as opposed to our method , their approach is quite complicated , including several sub - protocols ( e.g. election protocols , trilateration , fusion and delivery of tracking results , maintaining a tracking history ) .",
    "although by using mobile agents , the sensing , computing and communication overheads can be greatly reduced , their approach is not scalable in randomly scattered networks and also for well connected irregular networks , since a big amount of offline computation is needed finally , the base that receives the tracking results is assumed fixed ( in a tracking application this can be a problem ) .",
    "the interested reader is referred to @xcite , the nice book by f. zhao and l. guibas , that even presents the tracking problem as a `` canonical '' problem for wireless sensor networks .",
    "also , several tracking approaches are presented in @xcite .",
    "the intuitive idea behind our tracking protocol is inspired by a natural model : the way a tiger tracks an antelope in a savannah .",
    "antelope traces are initially stored into the environment as the antelope moves .",
    "the intensity of these initial traces decreases with time .",
    "these traces are partially spread through the savannah ( e.g. due to the wind action ) and the intensity of a spread trace decreases with the distance from the initial trace .",
    "thus , the only role of the environment is to store and to rather passively spread traces .",
    "it represents a passive actor of the tracking process .",
    "the active actor of the tracking process is the tiger , which senses the traces stored into the environment and tries to track the antelope by following the trace gradient .",
    "the correspondence to our problem is the following : the sensor network is the environment , the tiger is a tracking agent and the antelope is the tracking object .",
    "using this natural model has the advantage that as long as no tracking demand is issued , no ( or few resources ) are used into the network , as opposed to the location tracking algorithms where the network is continuously tracking the object in a proactive manner , hence consuming valuable energy .",
    "a passive network is the key to our energy optimisation . on the other hand , when the tracking is ( reactively ) in progress , only local computations and very light computation resources are needed in order to follow the trace gradient .",
    "when the tracking is needed , a tracking agent starts to walk through the network .",
    "this agent follows the trace gradient in a greedy manner",
    ". the agent can be either a pure software agent originated by a mobile sink , or a human provided with a special device communicating with the network , or even a mobile robot interacting directly with the network .",
    "the case of a software agent is somehow more complicated , because it has to send the results back to the originator of the agent , typically a mobile sink .",
    "that is the reason why we focus on the case of a software agent in the present work .",
    "each trace can be represented by the following record :    .attributes of traces [ cols=\"^,<\",options=\"header \" , ]     [ simulation parameters ]      the default value value for the density is @xmath1 . in the first experiment set",
    ", we test the algorithm with the following densities : @xmath2 , @xmath1 , @xmath3 and @xmath4 , which means that the expected number of neighbours in the communication graph is about @xmath5 , @xmath6 , @xmath7 and @xmath8 respectively , since we use the disc graph model for our simulations ( c.f .",
    "section [ sec simuls ] ) , whereas each point of the network can be roughly expected to be sensing covered by @xmath9 to @xmath10 sensor nodes .",
    "( i.e. we choose density parameters which always guarantee that the network is connected with high probability , however the sensing coverage goes from being partial to dense ) .",
    "the results are shown on figure [ fig dens ] .    in figure",
    "[ dist1 ] , we see that the tracker frequently localizes the target ( each time the distance is @xmath11 ) , whatever the density tested except for the lower density . in figure",
    "[ messages1 ] , we see that the total number of messages per node is very reasonable for all densities .",
    "it is also inter sting to notice that the number of spreading messages seems to be correlated with density .",
    "the correlation is not extremely strong ( in reticular above a possible threshold density ) , because other random factors are quite important too ( like the motion pa tern of the target ) .",
    "however , we do observe that the number of messages diminishes with the density .",
    "this is due to the way the heuristic spanning tree is constructed and is a desirable feature ( specifically the way one of the nodes always tries to go the further possible from the repulsion point , c.f .",
    "section [ trace spreading ] ) .",
    "[ fig dens ]      the default value value for the target speed is @xmath12 km / h . in the second experiment",
    "set , we test the algorithm with the following speeds : @xmath13 , @xmath14 , @xmath15 , @xmath16 km / h . the results are shown on figure [ fig speed ] .",
    "[ fig speed ]    again , we notice that for all the tested target speeds , the target is often localised by the tracker .",
    "this is quite nice , since it could have been feared that for the highest target speeds the tracker would never have localized the target .",
    "also , the number of messages is kept low .",
    "when the target s speed increases , more detection occurs and thus more traces need to be spread , which explains the increased number of messages with increased speed from figure [ messages2 ] .      the default value value for the sensing radius is @xmath15 m. in the third experiment set , we test the algorithm with the following sensing radii : @xmath6 , @xmath8 , @xmath17 , @xmath18 .",
    "the results are shown on figure [ fig sens ] .",
    "[ fig sens ]    we observe the same kind of favorable behavior .",
    "the target is being exactly localised pretty often , for all sensing radii . for increasing sensing radius there are more detections by the sensors and thus more",
    "messages are being generated , but in every case the number of messages is kept very reasonable .",
    "the default value value for the message frequency is @xmath19 second , i.e. the tracking agent moves every second and traces are spread every second . in the third experiment set , we test the algorithm with the following message propagation frequencies : @xmath19 , @xmath20 , @xmath13 , @xmath6 , @xmath7 .",
    "the results are shown on figure [ fig freq ] .",
    "[ fig freq ]    the most important observation is that , not surprisingly , is that for long propagation delays ( e.g. when a message is only sent every @xmath7 seconds ) , it is more difficult to localise the target .",
    "this is so because with increasing message propagation delay , the tracking agent becomes slower and is thus less efficient at tracking the target .",
    "still , except for the longest propagation delays , the target is being localised regularly .",
    "a very nice result is that the number of messages sent increases only slowly with reducing propagation delays .",
    "that is , if messages are sent twice more often , the total number of messages is far from doubling .",
    "this is due to the inhibition mechanism : when messages are sent quickly , the spreading of a trace is more likely to be inhibited by a previous trace which has not yet vanished with time . on the contrary , when propagation delay are long , the spreading of a new trace is likely to span a larger portion of the network , since previous trace intensities will be low due to the time - intensity dissipation implied by our model .",
    "therefore , precision can be traded for increased traffic .",
    "we used a ` ruby ` implementation to make our simulations . in our simulations , we use the unit disc graph model for building a high level abstratcion of the communication graph associated with the sensor network",
    ". the target movement is modelled using the random waypoint model . in this model ,",
    "the target chooses a random point and moves to it at the chosen speed ( which was a fixed adjustable parameter in our simulations ) . as a consequence ,",
    "the target moves along line segments .",
    "if the target is moving from point @xmath21 to point @xmath22 , starting at time @xmath23 and arriving at time @xmath24 , we used the following model for target detection by the sensor nodes : if a sensor node @xmath25 is at distance @xmath26 of the segment @xmath27 and that @xmath26 is smaller than than the sensing radius @xmath28 ( c.f .",
    "table [ simulation parameters ] ) , then the node detects the presence of the target at time @xmath29 , where @xmath30 , where @xmath31 is the only point of the segment @xmath27 such that @xmath32 .",
    "this means that an event can occur at times taking value in the real numbers ( or at least their floating point representation in the programming language ) .",
    "we feel that this fairly complicated simulation environment , when compared to an approach that would discretize time in rounds , is much more precise . at the cost of complicating the implementation of the simulation platform and putting higher computation loads on its execution",
    ", we thus used a fairly detailed simulation environment .",
    "although events occur at real number valued times , there is only a finite number of event during each time interval .",
    "we use this to store events on an _ scheduled events stack _ ordered by time , and execute the events starting at the top of the stack .",
    "for example , when the target starts moving from point @xmath21 to @xmath22 , we first compute all detections by sensor nodes and put them on the scheduled events stack , ordered by time .",
    "we then `` execute '' the first detection by picking the scheduled event at the top of the stack .",
    "the top event , assuming it is an target detection by a sensor node , implies initializing a trace on the detecting node .",
    "because this trace will have to be spread a few seconds later ( depending on the simulation parameters ) , we create a `` spreading '' event and insert it on the scheduled event stack and sort the stack according to the scheduled execution time of the event ( a full sorting is not required , since the stack is always kept sorted , it in fact suffices to introduce the new event at the proper place in the stack ) . summarizing ,",
    "the executing flow of the simulator is ( 1 ) pick the event at the top of the stack , ( 2 ) execute the event ( e.g initialize a trace ) ( 3 ) determine all future events implied by the execution and insert them on the scheduled events stack .",
    "start at point ( 1 ) again .",
    "we have proposed a lightweight target tracking protocol for wireless sensor networks . inspired by an analogy with the way a lion tracks down an antelope in the savannah by following it s smell . in our protocol ,",
    "targets leave traces behind them .",
    "the intensity of those traces ( like the odor of the antelope ) decreases with time .",
    "the sensor network propagates those traces ( like the wind propagates the smell of the antelope ) using an innovative propagating process aiming at spanning the network with a tree of degree 2 with non overlapping branches .",
    "the protocol was evaluate trough extensive simulations under representative network operation regimes .",
    "it was shown that the protocol is successful at letting a tracking agent localize the target regularly , and that the message overhead was kept low .",
    "more precisely , it was shown that the protocol scales particularly well in terms of network density since the localization process is efficient and the message overhead is low , for all tested densities .",
    "we also show that the network is capable of tracking targets moving at different speeds ( from slow to quite fast ) .",
    "we have also tested different sensing coverage regimes ( from not well covered to redundantly covered ) , and showed that although traffic increases with increased sensing range , target localisation is achieved for all regimes with reasonable message overhead .",
    "finally , an important finding is that diminishing propagation delays ( e.g. by increasing the duty cycle of sensor nodes ) does not augment too much the message overhead because of the trace spreading inhibition mechanism .",
    "j. liu , j. liu , j. reich , p. cheung , and f. zhao , distributed group management for track initiation and maintenance in target localization applications , proc .",
    "workshop on information processing in sensor networks ( ipsn ) , 2003 ."
  ],
  "abstract_text": [
    "<S> we study the important problem of tracking moving targets in wireless sensor networks . </S>",
    "<S> we try to overcome the limitations of standard state of the art tracking methods based on continuous location tracking , i.e. the high energy dissipation and communication overhead imposed by the active participation of sensors in the tracking process and the low scalability , especially in sparse networks . </S>",
    "<S> instead , our approach uses sensors in a passive way : they just record and judiciously spread information about observed target presence in their vicinity ; this information is then used by the ( powerful ) tracking agent to locate the target by just following the traces left at sensors . </S>",
    "<S> our protocol is greedy , local , distributed , energy efficient and very successful , in the sense that ( as shown by extensive simulations ) the tracking agent manages to quickly locate and follow the target ; also , we achieve good trade - offs between the energy dissipation and latency .    oddfootto evenfootto </S>"
  ]
}
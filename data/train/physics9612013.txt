{
  "article_text": [
    "consider a structure  @xcite made of @xmath0 sites connected by @xmath1 bars in @xmath5 dimensions . determining the rigid properties of such systems",
    "constitutes a problem of obvious technological interest , which has been under study for a long time already .",
    "the first formal results date back to maxwell@xcite , who discussed the connections between statics and geometry .",
    "posterior theoretical work in the field  @xcite , has been accomplished by mathematicians and not widely known among physicists , although the concept of rigidity appears in many fields of physics as for example glasses  @xcite , critical phenomena  @xcite and granular materials  @xcite among others . + the physicist s treatment of this problem often reduced to a brute - force solution of the elastic equations , because of the lack of a simple integer algorithm for the identification of the rigid clusters . in this work ,",
    "recent progress in the design of such algorithms for the analysis of rigid properties of generic lattices is reported .",
    "to do so , let us start by briefly introducing some of the basics of rigidity . in this section the main ideas will we qualitatively described , leaving for next section more precise definitions , which will be done with the aid of the rigidity matrix .",
    "the interested reader is referred to the recent literature for more complete descriptions  @xcite , alternative approaches  @xcite and recent results  @xcite in the field of rigidity . +",
    "a structure@xcite is _ flexible _ if it admits a continuous deformation ( a finite _ flexing _ ) preserving all bar lenghts , other than the trivial translations and rotations in euclidean space .",
    "otherwise it is _ rigid_. obviosuly if a structure admits a finite flexing , then it also admits an infinitesimal flexing .",
    "if a structure admits no non - trivial infinitesimal flexing , it is said to be _ infinitesimally rigid_. obviously a flexible structure is also infinitesimally flexible .",
    "the converse is not always true , since there may be special situations in which a structure is infinitesimally flexible but does not have finite flexings .",
    "figure  [ fig : gtriangle]a shows an example of a structure that admits a finite flexing , and therefore is not rigid .",
    "if one more bar is added , the extra degree of freedom corresponding to the flexing may be eliminated .",
    "figure  [ fig : gtriangle]b is an example of a structure which is both rigid and infinitesimally rigid .",
    "but the same triangle has special combinations of site locations for which infinitesimal rigidity is lost .",
    "this is exemplified in figure  [ fig : gtriangle]b , in which the three sites are aligned . as a consequence site @xmath6",
    "may be displaced by a small amount in the direction of the normal to bar @xmath7 , and all bar lenghts remain unchanged _ to first order in the displacement_. therefore this structure is infinitesimally flexible though it is rigid to second order in the displacement .",
    "+ these situations for which rigidity does not imply infinitesimal rigidity are very rare .",
    "they only occurr for a small set of site locations , which are called _ degenerate _ configurations .",
    "the complement of this set , the _ generic _ configurations , form an open dense subset of space . for a generic configuration , infinitesimal rigidity",
    "is equivalent to rigidity .",
    "configurations in which all site coordinates are randomly chosen are with probability one generic ( a precise definition will be provided in next section ) .",
    "[ fig : gtriangle ]    the importance of infinitesimal rigidity can be easily understood in physical terms .",
    "one can define a structure to be _ statically rigid _ if it is able to compensate , by means of suitable finite stresses in its bars , any equilibrated load applied to its nodes .",
    "it is a classical ingeneering result that static rigidity is equivalent to infinitesimal rigidity ( see @xcite ) for a proof . )",
    ". therefore infinitesimal rigidity , and not rigidity , is the relevant concept in the linear approximation of elasticity . case a ) in fig .",
    "[ fig : gtriangle ] is obviously not statically rigid .",
    "case c ) is also not statically rigid because a load normal to bar @xmath7 applied on site @xmath6 can not be compensated by finite stresses on the bars , which are all parallel to @xmath7 .",
    "+ when studying the oscillatory properties of a structure in the harmonic oscillator approximation , infinitesimal flexibility is equivalent to the existence of degenerate , zero - frequency modes .",
    "note that cases a ) and c ) in figure  [ fig : gtriangle ] both have zero - frequency modes , but for different reasons . in case",
    "a ) because there is no restoring force , and in case c ) because the restoring force is zero in the linear approximation . + throughout this work we will be concerned with the property of infinitesimal rigidity , and therefore we drop the prefix in the following . as suggested by the example in fig .",
    "[ fig : gtriangle ] , a structure can fail to be rigid for two different reasons . in the first place , because it has too few bars , or they are not correctly distributed .",
    "this has to do with the topology of the lattice , that is , depends on its connectivity only , and not on the geometry of the structure .",
    "we will say that a given structure is _ generically rigid _ if it has the required minimum number of `` correctly distributed '' bars .",
    "generic rigidity is a necessary condition for rigidity , but not a sufficient one .",
    "the importance of generic rigidity resides in the fact that a generically rigid structure will be rigid for generic site locations .",
    "generic rigidity depends only on the number and location of the bars , and not on site locations . in other words ,",
    "generic rigidity depends only on the topological properties of the structure .",
    "+ topological information about a structure is conveniently represented by means of a graph @xmath8 .",
    "each site of the lattice is associated to a node @xmath9 , while bars are associated to edges @xmath10 .",
    "nodes @xmath11 and @xmath1 are _ adjacent _ if edge @xmath12 exists .",
    "edge @xmath12 is said to be _ incident _ to nodes @xmath11 and @xmath1 and , conversely , nodes @xmath11 and @xmath1 are incident to edge @xmath12 . graphs as described here contain no information about the geometry of the system ( site locations ) , but only about its connectivity properties .",
    "+ a graph contains enough information about a structure if we are only willing to discuss its generic properties , i.e. those which are valid for `` almost all '' sets of site locations , except for those few degenerate configurations , which will be ignored .",
    "it is only meaningful to do this if degenerate configurations , and therefore lattices which are generically rigid but not rigid , are `` exceptional '' .",
    "a context in which this is justified is when site locations ( an assignment of site locations to the nodes of a graph is called a _",
    "realization _ of the graph ) are randomly chosen .",
    "this ensures that degenerate configurations have zero probability to appear , i.e. degenerate realizations are a zero measure set . in view of this",
    "we would like to determine , from topological information only , whether a given graph is generically rigid .",
    "a first condition that must be satisfied is that the number @xmath1 of bars be large enough .",
    "since @xmath0 points in @xmath5 dimensions have @xmath13 degrees of freedom and each bar restricts one degree of freedom , @xmath1 has to be at least equal to @xmath14 , where @xmath15 is the number of distance - preserving linear transformations in @xmath5 dimensions ( @xmath5 translations and @xmath16 rotations ) .",
    "but a right global count of bars is not enough to ensure rigidity , since bars could be `` crowded '' on certain subsets of the graph , while others have less bars than needed to make them rigid .",
    "if a certain subgraph has more bars than necessary , some of them are _ redundant _ , and this subgraph is _ overconstrained_. bars which are not redundant are said to be _ ( generically ) independent_. a sufficient condition for ( generic ) rigidity is that the graph possesses @xmath14 ( generically ) independent bars .",
    "we see that the key point is being able to identify independent bars .",
    "the basic theoretical tool for doing this in 2 dimensions is provided by a theorem due to laman  @xcite .",
    "[ laman ] [ th : laman ] the edges of a bar and joint graph @xmath8 are generically independent in two dimensions if and only if no subgraph @xmath17 has more than 2n-3 edges .",
    "laman s theorem constituted the first graph - theoretic characterization of rigidity in 2 dimensions , but in its original form it would give a very bad algorithm since it requires testing all possible subgraphs , of which there is an exponentially large number .",
    "there are some equivalent restatements of this theorem  @xcite , some of which give rise to polynomial - time algorithms .",
    "using one such equivalence due to sugihara , hendrickson  @xcite has recently proposed an algorithm for testing generic rigidity of two - dimensional graphs , which is simple enough to admit an on - lattice implementation  @xcite .",
    "roughly described , hendrickson s algorithm consists in adding edges one by one to the graph and matching  @xcite them to the nodes .",
    "if the matching succeeds , the new edge is independent and is left on the system . if the matching fails , then a ) the set of edges visited during the failed search is mutually rigid , and b ) the last edge is redundant .",
    "this algorithm has a worst - case time complexity that scales as @xmath18 .",
    "one factor of @xmath0 arises as edges are added one at a time , while the degree to which the computational time is greater than @xmath0 is determined by the typical size of the search that must be performed in order to match each added edge .",
    "if @xmath19 sites are mutually rigid , this size is of order @xmath0 , and the algorithm is of order @xmath2 .",
    "however in this case there is considerable time spent in searching over edges that have been previously identified as mutually rigid .",
    "there is thus room for improvement , and this work is devoted to the description of such an improved algorithm .    to avoid the need to search over edges which have already been identified as mutually rigid ,",
    "it is natural to combine mutually rigid edges into clusters or `` bodies ''  @xcite . to develop this idea into a workable algorithm",
    ", we note that any bar and joint graph can be considered as being composed of bodies and bars , where eventually some of the bodies may be `` trivial '' bodies with just one site .",
    "each body is represented by a node in a _",
    "multigraph_. an example of this is shown in fig .",
    "[ fig : bodies ] . each body , composed of several sites rigidly connected by bars , is shown as a node in the multigraph of fig .",
    "[ fig : bodies]c .",
    "one of the advantages of the body - bar representation is that the number of elements in the graph is smaller , and may be reduced each time a cluster of rigidly connected bodies is identified , by replacing them by just one node in a process we will call _ condensation_. + of course we have now to demonstrate that the idea is sound , and for that we must restate the relevant theoretical results  @xcite in terms of bodies and bars .",
    "we start in section  [ sec : rigmat ] by introducing the _ rigidity matrix _ , which will help us to more precisely define the concepts of infinitesimal rigidity , generic rigidity , generic configurations and of redundant and independent bars , and also to discuss the necessary conditions for generic rigidity . in section  [ sec : laman ] we express laman s theorem in the body - bar language , while section  [ sec : algorithm ] shows how hendrickson s algorithm is generalized for this case .",
    "section [ sec : implementation ] discusses some practical implementation details .",
    "also in this section the performance of the body - bar algorithm here introduced is compared to that of the previously existing joint - bar version .",
    "we will see that the body - bar algorithm has much better scaling properties for the two examples analyzed , even when its worst - case behavior is the same as that of the joint - bar algorithm , that is , @xmath18 .",
    "we will in the following only consider two - dimensional structures , unless explicitly stated otherwise . consider fig .",
    "[ fig : bodies ] , in which the relationship between a bar - joint and a bar - body representation is explicitly drawn .",
    "any subset of rigidly connected bars and sites can be replaced by a _ body _ , a rigid object that in two dimensions has 3 degrees of freedom , two displacements and one rotation .",
    "we call all remaining bars _ external_. each body has a set of joints on its surface , to which external bars are incident .",
    "we let @xmath20 be the location of joint @xmath21 belonging to body @xmath11 .",
    "an infinitesimal motion is a set of instantaneous velocities @xmath22 , one for each joint , which leave all bar lengths unaltered .",
    "this condition is written : @xmath23 for every bar @xmath24 with @xmath25 .",
    "we now express the velocities of the joints in terms of the velocities of the body to which they belong .",
    "for this we select an arbitrary point @xmath26 for each body @xmath11 , and say that the velocity @xmath27 of any joint @xmath21 of a body is equal to the velocity @xmath28 of @xmath26 plus a rotational component , which is @xmath29 , where @xmath30 is the angular velocity ( a vector normal to the plane ) of body @xmath11 , and @xmath31 indicates vector product . @xmath32 without loss of generality , we can choose all those arbitrary reference points @xmath26 to be at the origin and get , @xmath33 now let us rewrite ( [ eq : condition ] ) by using ( [ eq : v ] ) , so that @xmath34 a little algebra shows that ( [ eq : rewritten ] ) can be reduced to , @xmath35 this set of equations can be formally written as @xmath36 where @xmath37 is the vector of velocities and contains 3 entries for each body .",
    "each row in @xmath38 corresponds to a bar @xmath24 .",
    "conditions ( [ eq : condition ] ) , when written in the bar - joint representation , also give rise to a matrix equation of the form ( [ eq : matform ] ) . in the bar - joint representation",
    "only the first term in ( [ eq : final ] ) occurs , each row of the rigidity matrix is associated with the vector @xmath39 , and there are 4 non - zero elements per row . in the body - bar case , each row of the rigidity matrix is associated with the ` line - bound vector' @xmath40 and there are 6 non - zero elements per row since @xmath41 is a pseudoscalar in two dimensions .",
    "line - bound vectors represent a force acting along a line  @xcite and , in contrast to vectors , are not translationally invariant .",
    "they are only invariant under translations in the direction ( @xmath42 ) , meaning that a force can be moved along its line of action without changing its effect .",
    "line - bound vectors have three independent components in 2d , two of them are needed to determine the vector and the third one locates its line of action in the plane .",
    "+ we will consider the general case of multigraphs formed by @xmath0 bodies and @xmath43 point - like ( or `` trivial '' ) bodies , as in fig .",
    "[ fig : generic ] , which we denote as @xmath44 . the general equations ( [ eq : final ] ) or ( [ eq : matform ] ) hold for @xmath44 with the additional constraint that the angular velocity @xmath45 for each of the @xmath43 point - like bodies .",
    "these additional constraints reflect the fact that rotation is irrelevant for them , so their angular velocities can be arbitrarily fixed , thus reducing the dimension of @xmath37 . counting the number of degrees of freedom ,",
    "we then find ( 3n + 2 m ) .",
    "the space of solutions of ( [ eq : matform ] ) has at least dimension 3 , since two rigid translations and a rotation of the system as a whole leave all bar lengths unchanged .",
    "this means that the rank of @xmath38 can not be larger than @xmath46 .",
    "the system is said to be ( infinitesimally ) rigid if the rigidity matrix has this maximal rank @xmath47 , which means that the _ only _ infinitesimal motions are the euclidean rigid transformations .",
    "+ a _ realization _ is an assignment of site locations to all nodes of a graph . for certain ( degenerate ) realizations",
    ", the rank of the rigidity matrix may be accidentally lowered by the existence of algebraic dependencies between the node coordinates ( degeneracies ) .",
    "this will only happen if a determinant is zero , and given that determinants of the rigidity matrix are polynomials in the site coordinates , degenerate realizations must satisfy a finite number of polynomial equations .",
    "therefore the subset of configurations for which the rigidity matrix attains the maximum possible rank over all sets of coordinates constitutes an open dense subset .",
    "we say that a realization is _ generic _",
    "if all site coordinates are algebraically independent over the rationals .",
    "therefore at a generic configuration the rank of the rigidity matrix attains its maximum value over the site coordinates .",
    "[ fig : gbodies ]    a set of edges is _ independent _ if their associated rows in @xmath48 are linearly independent in an algebraic sense .",
    "this means that an edge will be independent if and only if by removing it the rank of the rigidity matrix is decreased by one .",
    "cases a ) and b ) in fig .",
    "[ fig : gbodies ] are independent , but case a ) is flexible while case b ) is infinitesimally rigid .",
    "+ if the removal of a given edge @xmath49 does not alter the rank of @xmath48 , @xmath49 is _ dependent _ or _",
    "redundant_. dependencies can arise because there are too many bars ( for example the edge set in fig .",
    "[ fig : gbodies]c ) or because of degenerate configurations .",
    "( for example three bars with a comon point as in fig .",
    "[ fig : gbodies]d ) .",
    "the difference is that case c ) is infinitesimally rigid while case d ) is not .",
    "the dependency produced by the coincident intersection point has reduced the rank of the rigidity matrix from its maximum value of @xmath6 to a value of @xmath50 .",
    "there is therefore one extra infinitesimal motion , which can be identified as a relative rotation of the two bodies around the intersection point of the bars .",
    "a similar reasoning holds for the example shown in fig .",
    "[ fig : gtriangle]c . +",
    "once the atypical character of degeneracies is recognized , we are justified in ignoring them , and concentrate on generic properties only . therefore we define generic rigidity by saying that : _ a structure is generically rigidy if its rigidity matrix attains its maximum rank @xmath47 at a generic configuration . _",
    "the relevance of generic properties is ensured by a theorem due to gluck  @xcite .",
    "[ gluck ] [ th : gluck ] if a graph has a single infinitesimally rigid realization , then all its generic realizations are rigid .    in other words ,",
    "+ _ at a generic realization , a structure is infinitesimaly rigid if and only if it is higher - order rigid if and only if its multigraph is generically rigid _ + in addition to the already defined property of generic site locations , we will assume the following _ generic incidence condition _ to hold : _ no 3 bars can be incident to the same joint of a _ non - trivial _",
    "body_. this condition means that bars incident to the same body are located on generic lines . in the following , whenever we refer to generic realizations of multigraphs we will be assuming generic joint locations as well as generic incidence . notice that multiple incidences are allowed if they occur on trivial ( single - site ) bodies .",
    "an example of a multigraph that is generic in the sense required here is shown in fig .",
    "[ fig : generic ] . throughout this work",
    "we will assume all multigraphs @xmath44 to contain at least one non - trivial body or two point - like ones , that is , @xmath51 . excluded are then the graph with no nodes and those with just one trivial ( point - like ) body . under this condition",
    "the following results follow almost trivially from our discussion of the rigidity matrix .",
    "[ th : hask ] every rigid multigraph @xmath44 has a subset of @xmath47 independent bars .",
    "[ th : ifmore ] if a multigraph @xmath44 has more than @xmath47 bars , some are dependent .",
    "[ th : ifrigid ] if a multigraph @xmath44 with exactly @xmath52 bars is rigid , then there is no subgraph @xmath53 with more than @xmath54 bars .    in the process of obtaining the bar - body representation from the bar - joint representation ,",
    "we have replaced subsets of rigidly connected sites by bodies with 3 degrees of freedom .",
    "this does not change the number of independent infinitesimal motions of the system , since these subsets , being rigid , had 3 degrees of freedom each .",
    "this means that the dimension of the null space of the rigidity matrix is the same in the bar - joint and bar - body representations .",
    "a consequence of this is the following .",
    "[ th : alwaysdep ] a set @xmath55 of external edges is dependent in the body - bar representation if and only if it is dependent in the corresponding joint - bar representation .",
    "* proof . *",
    "the removal of an independent edge causes the rank of the rigidity matrix to change , increasing by one the number of independent infinitesimal motions . assuming a given edge @xmath56 to be dependent in one representation but not in the other",
    "would then conflict with our discussion above.@xmath57 + another result which we need for later use is the following .",
    "[ th : four ] if an edge @xmath49 incident to a non - trivial(trivial ) body @xmath11 and to some other body @xmath58 is dependent , then there exist at least 3(2 ) other edges @xmath59 incident to @xmath11 which are also dependent .",
    "* proof : * let @xmath11 be a non - trivial body and assume that and edge @xmath49 incident to @xmath11 is dependent .",
    "take the row of @xmath38 corresponding to @xmath49 , which under the hypothesis can be expressed as a linear combination of other rows of @xmath38 , and consider its 3 components associated to the 3 degrees of freedom of @xmath11 .",
    "these are the 3 components of a line - bound vector , and are independent degrees of freedom in a generic realization so that at least 3 other line - bound vectors ( rows of @xmath38 ) are needed to express it as a linear combination .",
    "the demonstration for the case in which @xmath11 is a trivial body is similar , except that vectors ( 2 degrees of freedom ) take the place of line - bound vectors , and therefore only 2 other edges are needed .",
    "@xmath57 + we have introduced the rigidity matrix @xmath38 through a discussion of infinitesimal rigidity , but it also appears in the context of static rigidity , describing how external loads are resolved into stresses on bars .",
    "dependent subgraphs can then be identified to be those that can sustain equilibrated internal stresses even in the absence of external loads .",
    "a general graph - theoretic characterization of rigidity for linkages of bodies in @xmath0-space was first provided by tay  @xcite .",
    "we will derive a similar result in two dimensions , which holds for the case of mixed multigraphs , and which we need for our algorithm .",
    "mixed multigraphs are those including point - like bodies as well as non - trivial ones . our derivation is based on laman s theorem for bar - joint systems .",
    "theorems [ th : hask ] and [ th : ifrigid ] imply that a rigid system must have a set of @xmath47 well distributed bars , where the meaning of `` well distributed '' is that no subgraph has `` too many '' bars .",
    "this condition is known , in the context of bar - joint systems , as laman s condition , and is a _ necessary _ condition for rigidity in _ any _ space dimension ( in a suitably generalized form ) .",
    "the converse , i.e. @xmath47",
    "well distributed bars @xmath60 rigid does not hold in any dimension above 2 .",
    "a counterexample in 3 dimensions , due to whiteley , is shown in fig .",
    "[ fig : counterexample ] .",
    "this structure satisfies @xmath61 for all subgraphs with @xmath62 , yet it is dependent and therefore non - rigid .",
    "+ laman was able to show  @xcite that the `` correct distribution '' of bars is a sufficient condition for rigidity in 2 dimensions ( theorem [ th : laman ] above ) .",
    "here we translate his result to the body - bar case and show that    [ th : extended ] the edges of a multigraph @xmath63 are independent in 2d if and only if there is no submultigraph @xmath64 with more than edges",
    ".    * proof . *",
    "the demonstration of necessity , i.e. independent @xmath60 well distributed , follows trivially from theorem [ th : ifmore ] above . in order to demonstrate sufficiency",
    ", we will transform the body - bar graph to a bar - joint graph and use laman s theorem to show that , if a multigraph is dependent , there is a subset of it with too many bars , i.e. a bad submultigraph .",
    "+ assume that a multigraph @xmath65 contains a subset @xmath66 of dependent bars .",
    "let @xmath67 be the submultigraph of @xmath68 defined by restricting the edge set to @xmath66 and the node sets to those nodes incident to some edge in @xmath66 .",
    "for each non - trivial body @xmath69 , let the cardinality @xmath70 be the number of joints on its surface to which bars @xmath71 are incident . according to theorem  [ th : four ] , in order for a non - trivial body @xmath11 to belong to @xmath72 ,",
    "at least 4 of its incident bars must belong to @xmath66 .",
    "this together with the condition of generic incidence ( section  [ sec : rigmat ] ) implies a body of cardinality can be replaced by an isostatic bar - joint graph @xmath73 made up of well distributed `` internal '' bars and @xmath70 point - like bodies , these last taking the place of surface joints . doing this for each of the @xmath74 non - trivial bodies in @xmath53 leads to the _ expanded _",
    "graph @xmath75 .",
    "theorem  [ th : alwaysdep ] implies that @xmath66 is also dependent in the expanded graph @xmath75 , and since laman s theorem in its original form applies to it , there must be a subgraph @xmath76 of @xmath75 with @xmath77 bars and @xmath78 joints such that    we will have in general @xmath79 , where @xmath80 is the number of external edges and @xmath81 the number of internal edges in @xmath82 .",
    "@xmath82 can not be entirely formed by internal edges since they are well distributed , and therefore it must contain one or more external edges .",
    "two cases are possible : + * a ) * there are no internal bars in @xmath82 .",
    "+ if this is the case none of the nodes of @xmath83 can be the surface joint of a body .",
    "the reason for this is theorem  [ th : four ] .",
    "at least 3 bars incident to a point are dependent if one of them is .",
    "but if none of them is internal the point can not be a surface joint since at most 2 incident bars are allowed per surface joint in generic multigraphs .",
    "this means that no bar in @xmath82 is incident to a subgraph @xmath73 . in this case",
    "the bad subgraph is entirely formed by point - like bodies and the result follows immediately since laman s theorem is a particular case of this one ( with @xmath84 ) . +",
    "* b ) * there are one or more internal bars in @xmath82 , or equivalently , there is at least one edge @xmath85 incident to @xmath73 for some body @xmath11 .",
    "+ if this edge @xmath49 has both ends incident to the same @xmath73 , then we have identified the bad sub - multigraph as being formed by body @xmath11 and this edge with both ends connected to it , since then assume that no edge @xmath85 has both ends connected to the same @xmath73 . for each body @xmath11 to which some edge @xmath85 is incident , let @xmath86 with @xmath87 nodes and @xmath88 edges , be the subgraph of @xmath73 contained in @xmath83 .",
    "let @xmath89 be the number of such bodies , and @xmath90 the number of joints in @xmath83 other than surface joints .",
    "the condition that @xmath91 be a bad subgraph is then rewritten @xmath92 theorem  [ th : four ] , together with the generic incidence condition , ensure that @xmath93 .",
    "since @xmath73 are independent by construction laman s condition then implies @xmath94 . using this and ( [ eq : bad ] ) we get @xmath95 , or @xmath96 which finishes the demonstration for generic body - bar graphs .",
    "@xmath57 + non - generic graphs , i.e. those with more than 2 bars incident to a joint of a body ( we call this `` multiple incidence '' ) can also be handled by transforming them into an equivalent generic graph in the following form .",
    "notice that there is no limitation on the number of bars incident to point - like bodies .",
    "thus we can simply replace each multiple - incidence joint of a body by an auxiliary structure made of a point - like node connected to the body by two new bars , like in fig .",
    "[ fig : auxiliary ] .",
    "the graph obtained by transforming in this way all multiple - incidence joints is generic in the sense required here , and therefore the extended laman s theorem ( theorem  [ th : extended ] above ) applies to it .",
    "it is easy to see that this transformed graph has equivalent rigid properties .",
    "laman s theorem constitutes a graph - theoretic characterization of rigidity , but a naive implementation of it , namely checking all possible subgraphs , would give a very poor algorithm .",
    "sugihara  @xcite and later hendrickson  @xcite have used a reformulation of laman s theorem to propose efficient ( polynomial - time ) algorithms for this problem .",
    "this section follows hendrickson s approach , adapting his arguments to the body - bar case where needed .",
    "+ we first define the bipartite graph @xmath97 generated by a graph @xmath98 in the following way : @xmath97 is composed of two sub - sets of nodes @xmath99 and @xmath100 , and a set of edges connecting nodes of @xmath99 with nodes of @xmath100 .",
    "there are no edges between nodes in the same subset ( that is what defines a bipartite graph ) . the first subset @xmath99 is the set of edges @xmath55 of @xmath68 , while @xmath100 is composed of 3 copies of the set of non - trivial nodes @xmath101 plus 2 copies of the set of point - like nodes @xmath102",
    ". edges of @xmath97 connect the edges @xmath103 of @xmath68 ( @xmath99 nodes ) to all copies ( @xmath100 nodes ) of the bodies @xmath11 and @xmath1 to which @xmath103 is incident .",
    "an example of this is shown in fig .",
    "[ fig : bipartite ] .",
    "we now briefly describe some concepts from graph theory which we need for our algorithm .",
    "the reader is referred to the literature on the subject ( @xcite,@xcite ) for detailed accounts .",
    "a _ matching _",
    "@xmath104 of a graph is a subset of edges , no two of which share a node .",
    "edges in @xmath104 are said to be _ matched _ , and edges not in @xmath104 _",
    "unmatched_. nodes incident to a matched edge are _ covered _ , while the rest are _",
    "exposed_. if @xmath105 , nodes @xmath11 and @xmath1 are _ mates_. a matching @xmath104 is _ maximum _ if it has the largest possible number of edges .",
    "a matching is _ perfect _ or _ complete _ if no node is exposed .",
    "obviously , a perfect matching is also maximum .",
    "the _ matching problem _ ( finding maximum matchings ) is a classic in graph theory , and has many practical applications .",
    "a _ path _ is a chain of edges of the form @xmath106 , and it is _ alternating _ if matched and unmatched edges follow each other in the succession .",
    "an alternating path @xmath107 is an _ augmenting path _ if both @xmath11 and @xmath108 are exposed nodes . the name is due to the obvious fact that any such path allows one to increment the number of edges in the matching by one , simply by interchanging along the path .",
    "moreover , the problem of finding a maximum matching can be reduced to that of finding augmenting paths , since    [ th : noaugmenting ] @xmath104 is maximum @xmath109 there are no augmenting paths .",
    "then a maximum matching is found by repeatedly discovering and inverting augmenting paths .",
    "a particularly simple case is the matching of bipartite graphs , i.e. those whose node set @xmath110 can be partitioned into two subsets @xmath99 and @xmath100 such that no edge is incident to two nodes in the same subset .",
    "the search for augmenting paths can be efficiently done by growing _",
    "hungarian trees _ from exposed nodes .",
    "they are built by breadth first search ( bfs ) in the following way .",
    "consider fig .",
    "[ fig : matching ] in which thick lines represent edges in the current matching .",
    "we start the search for augmenting paths from an exposed node @xmath111 .",
    "take node @xmath112 for example .",
    "following all unmatched ( thin ) edges incident from @xmath113 , go to nodes @xmath114 in @xmath100 . since @xmath113 is exposed it is incident to unmatched edges only . in our example of fig .",
    "[ fig : matching ] these edges lead to @xmath115 .",
    "if any of these @xmath114 nodes is exposed , we have found an augmenting path . if not , their mates in @xmath113 are sent to a _ queue _ @xmath116 for further inspection .",
    "these mates are @xmath117 in this case .",
    "nodes @xmath114 are marked _",
    "visited_. once all neighbors of @xmath112 have been exhausted without finding an exposed node , the next element @xmath113 in queue @xmath116 is taken .",
    "say it is node @xmath50 .",
    "all unmatched edges incident to @xmath50 are followed to @xmath114 in @xmath100 and , if some of them leads to an exposed node , the search is over . otherwise , and if @xmath114 was not visited before , it is marked visited and its mate in @xmath99 is sent to @xmath116 . in our example",
    "this would result in node @xmath6 being sent to @xmath116 .",
    "the search proceeds in this way until either an exposed node in @xmath100 is found , or @xmath116 is depleted . in our example , after taking node @xmath118 from @xmath116 we would find node @xmath119 exposed .",
    "the matching can then be enlarged to cover node @xmath112 by inverting the path @xmath120 .",
    "if on the other hand @xmath116 is depleted without finding an exposed node in @xmath100 , there is no augmenting path from @xmath112 .",
    "we say in this case that @xmath121 can not be matched .",
    "now we are ready to discuss some results needed for our algorithm . using the relation between @xmath68 and @xmath97 we can give an equivalent formulation for the extended laman s theorem , which will provide the basis for our algorithm .",
    "[ th : equivalences ] the following are equivalent : + a ) the edges of @xmath68 are independent in 2 dimensions .",
    "+ b ) for every edge @xmath12 in @xmath68 , the multigraph @xmath122 formed by quadrupling @xmath12 has no subgraph with @xmath123 .",
    "+ c ) for each edge @xmath12 in @xmath68 , the bipartite graph @xmath124 has no subset of @xmath99 that is adjacent only to a smaller subset of @xmath100 .",
    "+ d ) for each edge @xmath12 in @xmath68 , @xmath124 has a complete matching from @xmath99 to @xmath100 .",
    "* proof : * the equivalence of a ) and b ) is a trivial consequence of laman s theorem in its extended form . the equivalence of b ) and c ) is an immediate consequence of the way in which @xmath122 is constructed .",
    "if such a subset exists , one would have @xmath125 nodes of @xmath99 connected only to @xmath126 nodes of @xmath100 . to prove that c ) and d ) are equivalent , it is easy to first see that c ) is necessary for d ) . to prove that d ) is necessary for c ) , assume that no complete matching exists .",
    "then there exists at least one exposed node @xmath127 in @xmath99 .",
    "do a breadth first search ( bfs ) in the following way : starting from @xmath127 , follow all _ unmatched _ edges from @xmath99 to the nodes in @xmath100 , and from them all _ matched _ edges back to @xmath99 and so on . for",
    "each new node in @xmath99 found ( including @xmath127 ) , increment in @xmath112 a variable @xmath128 , and for each new node in @xmath100 do the same with @xmath129 .",
    "both @xmath128 and @xmath129 start from zero .",
    "each new node in @xmath100 leads automatically to a new node in @xmath99 , because the hypothesis implies that no exposed node can be found .",
    "therefore when the bfs comes to an end ( because all @xmath100 nodes have been visited once ) we have that @xmath130 and we have identified a subset of @xmath128 nodes of @xmath99 adjacent to only @xmath131 nodes of @xmath100 .",
    "@xmath132 + theorem",
    "[ th : hask ] means that , in order to recognize whether a given graph is rigid , we have to count the number of independent bars it has , or equivalently , be able to detect how many of them are dependent .",
    "our rigidity testing algorithm will be based upon , and consists in adding edges @xmath49 one at a time to a set of independent edges @xmath133 , and testing whether this enlarged @xmath134 is independent .",
    "if this is the case , @xmath49 it is definitively added to @xmath133 , otherwise @xmath49 is identified as a dependent edge ( @xmath49 is not independent of @xmath133 ) and removed from the graph .",
    "+ adding a new edge @xmath49 to @xmath133 produces the graph @xmath68 , and its associated bipartite graph @xmath97 .",
    "we know by theorem  [ th : equivalences].d that @xmath49 is independent of @xmath133 if and only if a complete matching from @xmath99 to @xmath100 exists in @xmath135 when any edge @xmath12 in @xmath136 is quadrupled .",
    "fortunately only the last edge @xmath49 needs be quadrupled , as the following result due to hendrickson  @xcite demonstrates .",
    "[ th : eonly ] add a new edge @xmath49 to an independent edge set @xmath133 .",
    "if a complete matching in the sense of exists when @xmath49 is quadrupled , then @xmath134 is independent .",
    "_ proof : _ assume @xmath134 is not independent . then there must exist some edge @xmath137 whose quadrupling causes some subgraph @xmath53 of @xmath68 to have `` too many edges '' .",
    "this subgraph _ must _ include @xmath49 since @xmath133 is an independent set .",
    "but this subgraph would have the same number of edges if @xmath49 is quadrupled instead of @xmath138 , therefore a complete matching would not be possible if @xmath49 is quadrupled .",
    "@xmath139 + then in order to determine if a new edge @xmath49 is independent of a set @xmath133 we have to enlarge a bipartite matching to cover the 4 copies of the new edge @xmath49 in @xmath99 .",
    "if this can not be done , @xmath49 is redundant .",
    "we have then an algorithm which enables us to identify redundant bars .",
    "but we also need a means to identify rigid clusters in the system .",
    "the advantage of the body - bar representation over the original formulation in terms of joints is that each new rigid cluster which is identified may be replaced by one node , therefore reducing the size of the system .",
    "we will now see how these rigid clusters are detected . for this",
    "we need the following results@xcite .",
    "[ th : only3 ] if @xmath6 copies of a new edge @xmath49 are added to an independent set @xmath133 generating a graph @xmath140 , then @xmath141 has a complete matching from @xmath99 to @xmath100 .",
    "* proof : * assume there is no matching when @xmath49 is tripled . then there is some subgraph @xmath64 of @xmath140 for which . remove the @xmath6 copies of @xmath49 and quadruple any of the other edges .",
    "this graph has the same number of edges as @xmath142 so it can also not be matched .",
    "but this is a contradiction if @xmath133 is assumed to be independent .",
    "@xmath139 +    [ th : isostatic ] if the edge @xmath49 is dependent and @xmath49 is quadrupled , the failing hungarian tree spans a minimal subset of edges in @xmath133 which form an isostatic subgraph .    * proof . * since we added 4 copies of the new edge , the number of @xmath113 nodes visited by the failing hungarian tree is @xmath143 , where @xmath125 of them belong to @xmath55 .",
    "the number of @xmath114 nodes visited is by construction of the bipartite graph but in a previous demonstration , we saw that when a bfs fails , it visits @xmath128 nodes in @xmath99 and @xmath129 nodes in @xmath100 with therefore , @xmath144 , or @xmath145 , which is the condition for an isostatic subgraph .",
    "this subgraph is minimal , since removing any of its edges would make the matching possible , by freeing one @xmath114 node . @xmath139",
    "+ the algorithm then proceeds as follows : starting from a ( possibly empty ) set @xmath133 of independent edges , test new edges @xmath49 one by one by adding them to @xmath133 and trying to enlarge an already existing matching of @xmath146 , which contains four copies of @xmath49 in @xmath99 .",
    "* if all four copies can be matched , the new edge @xmath49 is independent .",
    "remove the three extra copies and add @xmath49 to the set of independent edges @xmath133 . *",
    "if the matching fails for the fourth copy of @xmath49 ( the first three can always be matched ) , @xmath49 is dependent and the failing hungarian tree identifies a rigid subset of nodes .",
    "remove all four copies .",
    "the rigid subgraph @xmath73 identified by a failed search may be _ condensed _ to a unique body @xmath147 .",
    "this condensation step simply amounts to a deletion of all bars and bodies visited during the failed search , and replacing them by a unique body .",
    "therefore the amount of work involved in one condensation is equivalent to that needed for one bfs .",
    "all bars incident to @xmath73 are , after the condensation , incident to body @xmath147 .",
    "condensation is only possible because we are able to handle bodies , and is a key step in our algorithm .",
    "+ bars whose both ends are found to be connected to the same rigid body are not tested because they are obviously dependent .",
    "this means that the same subset of nodes is not condensed twice , so that each condensation involves at least one node which has never been condensed .",
    "therefore there will be at most @xmath0 condensations .",
    "the condensation step requires just deleting all bars and bodies in the failed hungarian tree , therefore the total amount of work needed for condensations is at most @xmath19 , since there are at most @xmath19 bars in @xmath133 , and no bar is condensed twice . +",
    "a new bar leads either to a condensation or to a new element in @xmath148 . both happen at most @xmath19 times , so that at most @xmath19 tests are needed .",
    "since each test involves growing four hungarian trees , each one taking ( at most ) a time proportional to the number @xmath19 of edges in @xmath133 , the algorithm has a worst - case time complexity of @xmath18 . +",
    "this theoretical bound is the same as for hendrickson s algorithm  @xcite .",
    "it is not difficult to understand why the worst - case complexity of the body - bar algorithm can not be better than @xmath18 . if no condensations ever occur , our algorithm is the same as hendrickson s . but",
    "this would only happen if there are no redundant bars , since each redundant bar identifies a rigid subgraph and leads to a condensation .",
    "we can see that while the joint - bar algorithm has its worst - case performance in all cases in which there is long - range rigidity  @xcite , the body - bar algorithm can only be pushed towards @xmath18 behavior in the improbable case of long - range rigidity without redundancies ( long - range isostatic rigidity ) .",
    "this situation is not frequent in physical systems with disorder , where rigidity is always redundant .",
    "therefore we expect the body - bar version here introduced to perform much better than the original joint - bar version on practical applications such as rigidity percolation  @xcite , glasses  @xcite or granular materials  @xcite .",
    "the body - bar algorithm described in this work has been recently applied  @xcite to study rigidity percolation on site diluted - triangular lattices . in this work",
    "we will present the comparison of performance between this algorithm and the original site - and - joint version , for bond and site dilution on triangular lattices .",
    "bonds or sites are present on the lattice with probability @xmath149 .",
    "initially random numbers are assigned to bonds in the following manner : in the bond dilution case , each bond ` ij ` is assigned a random number ` brn(ij ) ` . for site dilution ,",
    "sites ` i ` are given a random number ` srn(i ) ` and afterwards bonds are assigned . in both cases , bonds are sorted in order of increasing ` brn ` and tested in that order .",
    "the rest of the procedure is the same for bond or site dilution .",
    "this scheme allows one to exactly detect the percolation point  @xcite , but is not the only possible .",
    "for example , one could fix @xmath149 to a certain value and , starting form an empty system , test all bonds for which ` brn ` @xmath150 in arbitrary order .",
    "the time - complexity of the algorithm depends on the order in which bonds are tested , although its results do not .",
    "+ the graph data structure is stored using based ( pointer ) variables because in contrast to the regular lattice which originates it , the multigraph has no regularity , and its size changes during the procedure , which makes static allocation of memory impractical .",
    "a new bond is tested by adding four copies of it ( @xmath99 nodes ) to the bipartite graph and attempting to match them to the bodies ( @xmath6 copies of each exist on the graph ) or sites ( @xmath50 copies of each ) in @xmath100 .",
    "if the four copies are matched , the new bond is marked independent and its three additional copies are removed from the graph . if the fourth copy is not matched , the new bond is marked redundant .",
    "the set of bonds covered in the last search is in this case a rigid subgraph .",
    "this rigid subgraph is _ minimal _ , which means that if any of its edges is removed then the matching would be possible .",
    "this subgraph identifies then the subset of @xmath55 upon which @xmath49 is dependent .",
    "the concept of dependence can be recast to mean that a self - stress is possible , therefore the failing bfs identifies the set of edges of @xmath68 which would be stressed if the new edge @xmath49 is say , too long or too short .",
    "this feature of the algorithm is very important in , for example , rigidity percolation  @xcite , since it provides a means to identify the stress - carrying part of a rigid cluster .",
    "+ each time a rigid subgraph is identified a routine ` condensation ` is called , which replaces all its elements ( enclosed bars and bodies ) by a single body , putting three copies of it in the graph . all external bars ( bars incident to an enclosed body from a non - enclosed body ) are now incident to the new body . at a practical level the only difference with hendrickson s original algorithm is this condensation step .",
    "if the replacement of rigid objects by one node is not done , one has the original bar - joint algorithm .",
    "one must in this case  @xcite mark all enclosed objects with the new rigid label to avoid the need to test bonds whose both ends are connected to the same rigid graph .",
    "+ as mentioned in section  [ sec : laman ] , multiple incidence joints must be replaced by an auxiliary structure in order to have an equivalent graph which is generic .",
    "in fact it is necessary to do this only in the bond - diluted case , since for site dilution no multiple incidence points are possible . for simplicity",
    "we always use auxiliary structures for incidence points to bodies , although they are only necessary if the number of incident bars is larger than two ( section  [ sec : laman ] ) . in this way",
    "the procedure is much simpler ( otherwise the number of incident bars should be checked after each condensation or addition of a new edge ) while the performance is not seriously affected . + we saw already that rigid clusters will only be detected if a bond is tested on them , that is , if a bond is found to be redundant . in other words ,",
    "the algorithm naturally identifies self - stressed ( hyperstatic ) regions , while isostatic rigid clusters would go unnoticed if no bond is tested on them . in the study of rigidity percolation",
    "@xcite , one is interested in detecting the exact concentration @xmath151 of bonds at which an isostatic rigid connection between two sides of the system first appears .",
    "this is not automatically provided by the algorithm . a possible way to do",
    "it would be the following : after testing each edge @xmath49 , test a _ fictitious _ bond connecting opposite sides of the sample .",
    "if the fictitious bond is independent , then these sides are not rigidly connected .",
    "otherwise the first time that the fictitious bond is found dependent , a rigid connection is identified between the two sides of the system .",
    "this method doubles the number of tests ( bfs s ) needed .",
    "we now describe a better option , which allows the detection of the rigidity percolation point without extra effort  @xcite . +",
    "two rigid bus - bars are assumed to exist on the upper and lower edges of the sample .",
    "these are represented as two bodies @xmath152 and @xmath153 , and their corresponding three copies are set in @xmath154 .",
    "next a fictitious bond @xmath155 connecting the two bus - bars is added to the graph .",
    "a node @xmath156 represents this fictitious bond in the bipartite graph @xmath97 , and is adjacent to three copies of @xmath152 and @xmath153 .",
    "this node @xmath157 ( just one copy of it ) is matched to one of these nodes before starting to test any other edges .",
    "next edges in the system are tested in order of increasing random number ` rn ` .",
    "the first time that an _",
    "isostatic _ rigid connection exists between the bus - bars , because of the existence of this bond @xmath155 that already restricts one relative degree of freedom between the busses , a dependent subgraph will be found including the fictitious bond .",
    "thus the method to detect isostatic percolation is simply checking , at each failed matching , whether the fictitious bond @xmath157 has been visited during the last search .",
    "if so , the last added edge @xmath49 is independent ( the number ` rn ` associated to this bond is @xmath151 ) , and the subgraph visited in the failed search is exactly the _",
    "_ elastic backbone _ _ and @xmath153 .",
    "the subset of it that would be stressed if a pair of forces is applied between the busses is called the _ elastic backbone_. ] .",
    "all bars in this subgraph except @xmath155 are _ cutting bonds _ ,",
    "that is , bonds whose individual removal would produce the loss of rigidity ( called _ red bonds _ in scalar percolation ) . at the percolation point the fictitious bond is removed .",
    "+ both the body - bar and the bar - joint algorithms have a worst - case time complexity that scales as @xmath18 .",
    "but we argued that the body - bar representation has a more convenient average - case behavior , since searches are now done in a graph of much reduced number of elements whenever there are rigidly connected subsets of sites . in this section",
    "these differences are quantified . in order to do",
    "so we take as a test case the randomly diluted triangular lattice .",
    "total cpu times are measured as a function of @xmath149 for the bond- and site - dilution cases .",
    "bonds are assigned a random number ` rn ` as described in section  [ sec : implementation ] , and tested sequentially in order of increasing ` rn ` . in figure",
    "[ fig : cmpcpu ] we see a plot of cpu times required on typical lattice of linear size @xmath158 for both algorithms in the above mentioned cases .",
    "as expected , the body - bar algorithm is more advantageous only in the rigid phase , since the search for an exposed node takes place in a region which is typically of the size of rigidly connected clusters .",
    "each such region is represented by one node in the body - bar case , and therefore searched over in just one step . at larger scales ,",
    "further collections of bodies are found to be rigidly connected and therefore replaced by one body , so that the size of the typical searches is kept almost @xmath159 .",
    "+ in section  [ sec : intro ] we mentioned that the time - complexity of this procedure is of order @xmath160 ( number of bonds tested ) times the size of the typical search for an augmenting path , which generally scales as @xmath161 , with @xmath162 a function of @xmath149 .",
    "the overall cpu time then scales as @xmath163 with @xmath164 .",
    "we estimate this ( @xmath149-dependent ) exponent by measuring cpu times for sizes @xmath165 and @xmath166 .",
    "averages were done over @xmath167 to @xmath168 samples .",
    "figure  [ fig : exponent ] shows the value of the exponent @xmath169 for the four cases under consideration , as a function of @xmath149 .",
    "we see that the body - bar algorithm has a time complexity that scales approximately as @xmath3 , while the bar - joint algorithm scales approximately as @xmath4 , which is not much better than the theoretical worst - case limit @xmath2 .",
    "my interest in the problem of rigidity was started by p.  m.  duxbury , and many of the ideas in this work were inspired by discussions with him .",
    "an anonymous referee provided helpful advice concerning the presentation of material in sections [ sec : intro ] and [ sec : rigmat ] .",
    "i thank the doe under contract de - fg02 - 90er45418 and the prf for financial support .",
    "i also acknowledge support from the conselho nacional de desenvolvimento cientfico e tecnolgico , cnpq , brazil .",
    "+    the words _ structure _ or _ lattice _ are used in this work to describe a set of point - like objects ( called joints or nodes ) connected by bars ( also called bonds or edges ) .",
    "bars are only able to transmit forces in the direction of their axis . no regularity is assumed whatsoever . in the ingeneering context",
    "this is usually called a",
    "_ framework_. by long - range rigidity we mean that @xmath19 sites are rigidly connected , and therefore the size of most bfs s is @xmath19 , since rigidly connected subgraphs contain no free ( unmatched ) @xmath114 nodes .",
    "this situation pushes the joint - bar algorithm towards its worst - case behavior , @xmath18 , when edges are tested in random order .",
    "j.  c.  maxwell , _ on reciprocal figures and diagrams of forces _",
    "series 4 , * 27 * ( 1864 ) , 250 - 261 .",
    "we are assuming @xmath170 .",
    "g.  laman , _ on graphs and rigidity of plane skeletal structures _ , j.  eng",
    ".  math . * 4 * , ( 1970 ) , 331 - 340 .",
    "h.  gluck , _",
    "almost all simply connected closed surfaces are rigid _ , in `` geometric topology '' , lecture notes in mathematics , no .",
    "225 - 239 .",
    "springer - verlag , heidelberg , 1975 .",
    "l.  asimov and b.  roth , _ the rigidity of graphs _ ,",
    "soc . * 245 * , ( 1978 ) , 279 - 288 .",
    "+ _ the rigidity of graphs ii _ , j.  math .  anal .",
    "appl . * 68 * , ( 1979 ) , 171 - 190 .",
    "henry crapo , _ structural rigidity _",
    ", structural topology * 1 * ( 1979 ) , 26 - 45 .",
    "walter whiteley , _ realizability of polyhedra _ , structural topology , * 1 * ( 1979 ) , 46 - 58 . k.  sugihara , _ on redundant bracing in plane skeletal structures _",
    "electrotech .  lab .",
    ", * 44*(1980 ) , 376 - 386 . t.  s.  tay , _ rigidity of multigraphs , i : linking rigid bodies in n - space _ ,",
    "j.  combinatorial theory * b36*(1985 ) , 95 - 112 .",
    "t.  s.  tay and w.  whiteley , _ generating isostatic frameworks _ , structural topology * 11 * ( 1985 ) , 21 - 69 . m.  f.  thorpe,_rigidity percolation _ , in `` physics of disordered materials '' , institute for amorphous studies series , plenum press , 1985 .",
    "s.  feng and p.  n.  sen , _",
    "percolation on elastic networks : new exponent and threshold _ , phys .",
    "* 52 * ( 1984 ) , 216 .",
    "+ s.  feng , _ percolation properties of granular elastic networks in two dimensions _ , phys .",
    "* b32 * ( 1985 ) , 510 , 513 .",
    "+ a.  day , r.  tremblay and a .- m .",
    "tremblay , _ rigid backbone : a new geometry for percolation _ , phys",
    ".  rev .",
    "* 56 * ( 1986 ) , 2501 .",
    "+ a.  hansen and s.  roux , _ universality class of central - force percolation _ , phys .",
    "* b40 * ( 1989 ) , 749 . + s.  p.  obukov , _ first order rigidity transition in random rod networks _ ,",
    "* 74 * ( 1995 ) , 4472 .",
    "e.  guyon _ et al _ , _ non - local and non - linear problems in the mechanics of disordered systems : application to granular media and rigidity problems _ , rep .",
    "* 53 * ( 1990 ) , 373 - 419 .",
    "bruce hendrickson , _",
    "conditions for unique graph realization _ , siam j.   comput .",
    ", * 21 * ( 1992 ) , 65 - 84 . c.  h.  papadimitriou and k.  sleiglitz ,",
    "_ combinatorial optimization : algorithms and complexity _ , prentice hall ( 1982 ) , chapter 10 .",
    "j. van leeuwen , _ handbook of theoretical and computer science _",
    ", elsevier science publishers ( 1990 ) , chapter 10 .",
    "c.  moukarzel and p.  m.  duxbury , _ stressed backbone of random central - force systems _ , phys .",
    "* 75 * ( 1995 ) , 4055 .",
    "d.  j.  jacobs and m.  f.  thorpe , _ generic rigidity percolation : the pebble game _",
    "* 75 * ( 1995 ) , 4051 .",
    "henry crapo , _ on the generic rigidity of structures in the plane _ , adv .",
    "materials , to appear .",
    "d.  franzblau , _ combinatorial algorithm for a lower bound on frame rigidity _ , siam j.  disc .  math .",
    "* 8 * ( 1995 ) , 388 - 400 .",
    "d.  franzblau , _ computing degrees of freedom of a molecular frame : when is greediness sufficient ? _ , 1995 preprint , dimacs , rutgers university .",
    "h.  gabow and h.  h.  westerman , _",
    "forests , frames and games : algorithms for matroid sums and applications _ in : proceedings of the 20th symposium on the theory of computing , acm , 1988 , 47 - 421 .",
    "t.  s.  tay and w.  whiteley , _ recent advances in generic rigidity of structures _",
    ", structural topology * 9 * ( 1985 ) , 31 - 38 . n.  white and w.  whiteley , _ the algebraic geometry of bar - and - body frameworks _ , siam j.  algebraic discr .",
    "methods * 8 * ( 1987 ) , 1 - 32 . w.  whiteley , _ matroid unions and rigidity _ , siam j.  discr .  math .   * 1 * ( 1988 ) , 237 - 255 ."
  ],
  "abstract_text": [
    "<S> given a structure made up of @xmath0 sites connected by @xmath1 bars , the problem of recognizing which subsets of sites form rigid units is not a trivial one , because of the non - local character of rigidity in central - force systems . even though this is a very old problem of statics , no simple algorithms are available for it so the most usual approach has been to solve the elastic equations , which is very time - consuming for large systems . </S>",
    "<S> recently an integer algorithm was proposed for this problem in two dimensions , using matching methods from graph theory and laman s theorem for two - dimensional graphs . </S>",
    "<S> the method is relatively simple , but its time complexity grows as @xmath2 in the worst case , and almost as fast on practical cases , so that an improvement is highly desirable . </S>",
    "<S> i describe here a further elaboration of that procedure , which relies upon the description of the system as a collection of rigid _ bodies _ connected by bars , instead of sites connected by bars . </S>",
    "<S> sets of rigidly connected objects are replaced by a unique body , and this is done recursively as more rigid connections between bodies are discovered at larger scales . as a consequence of this `` rescaling transformation '' , </S>",
    "<S> our algorithm has much improved average behavior , even when its worst - case complexity remains @xmath2 . </S>",
    "<S> the time complexity of the body - bar algorithm is found to scale as @xmath3 for the randomly diluted triangular lattice , while the original site - bar version scales as @xmath4 on the same problem .    </S>",
    "<S> [ gluck ] theorem [ gluck ] theorem [ gluck ] lemma </S>"
  ]
}
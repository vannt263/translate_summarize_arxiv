{
  "article_text": [
    "watermarking digital content allows distributors of copyrighted digital data to embed so - called fingerprints into their data in such a way that each copy of the data can be uniquely identified .",
    "these watermarks are made in a robust way , so that users can not change or remove them from the content .",
    "if a copy of the data is then illegally distributed to unauthorized users and intercepted by the distributor , he can extract the fingerprint from the copy and find the person whose fingerprinted data was distributed .",
    "actions can then be taken against this user , to prevent further illegal distribution .    to be able to trace the watermarked data back to the user , we need that the embedded fingerprints for each user are different",
    ". however , by comparing their differently watermarked copies of the content , multiple malicious users can form a coalition and detect differences in their content . assuming that besides the watermarks all copies are the same , this allows coalitions to detect part of the watermark . by editing this data",
    ", they can then create a forged copy , which contains the same digital content as their original copies , but has a forged fingerprint that can not be traced back to them directly . under the marking assumption , which says that colluders can only detect and edit fingerprint positions if their fingerprints do not all match on that position , there are ways to construct fingerprinting schemes such that any forged copy can be traced back to at least one of the colluders .",
    "this involves finding a construction for fingerprints for each of the users , and finding a way to trace back forged copies to guilty users .",
    "let @xmath3 denote the set of the @xmath4 users that received watermarked content . here",
    "a user corresponds to one watermarked copy of the content , so a person who possesses several differently watermarked copies of the data is assumed to control multiple users . for each user",
    "@xmath5 the distributor generates a fingerprint ( also called a codeword ) , which is usually denoted by @xmath6 .",
    "this codeword is a vector of length @xmath7 ( the codelength ) of symbols from an alphabet @xmath8 of size @xmath9 .",
    "the case @xmath10 corresponds to the binary alphabet , which is usually taken as @xmath11 .",
    "all fingerprints together form the fingerprinting code @xmath12 .",
    "a common way of representing this code is by putting all codewords as rows in a matrix @xmath13 according to @xmath14 .    after assigning codewords to users and distributing the watermarked copies ,",
    "a subset @xmath15 of @xmath16 users ( called colluders or pirates ) may form a coalition to create a forged copy .",
    "using some pirate strategy @xmath17 , a function @xmath18 , they construct a forged copy , which has some unknown distorted fingerprint @xmath19 called the forgery . for the pirate strategy @xmath17 , we assume that the marking assumption holds , i.e. if for all @xmath20 the pirates have @xmath21 for some position @xmath22 and symbol @xmath23 , then the coalition is forced to output @xmath24 . on other positions",
    ", we assume that colluders are free to choose any of the symbols from the alphabet .    finally , after the coalition has created a forged copy , we assume the distributor intercepts it and extracts the forgery @xmath25 from the data",
    ". he then runs some tracing algorithm @xmath26 on the forgery , to get a subset @xmath27 of users that are accused .",
    "the accusation is said to be successful if no innocent users are accused ( i.e. @xmath28 ) and at least one guilty user is accused ( i.e. @xmath29 ) .    in the setting of probabilistic schemes , the code @xmath13 and the tracing algorithm @xmath26 may depend on some random variables . the events of not accusing any innocent users ( soundness ) and accusing at least one guilty user ( completeness ) then also depend on these random variables .",
    "then , instead of demanding that a fingerprinting scheme is always sound and complete , we may demand that the probability of failure is bounded by some small value @xmath30 , where the probability is taken over these random variables .",
    "this leads to the following definitions of @xmath31-soundness and @xmath32-completeness .",
    "[ def : secureness ] let @xmath15 be a coalition of size at most @xmath16 , and let @xmath17 be some pirate strategy employed by this coalition .",
    "then a traitor tracing scheme @xmath33 is called @xmath31-sound if @xmath34 \\leq { \\epsilon}_1 .",
    "\\end{aligned}\\ ] ] similarly , a fingerprinting scheme is called @xmath32-complete if @xmath35 \\leq { \\epsilon}_2 .",
    "\\end{aligned}\\ ] ]    as we will see later , @xmath36 and @xmath32 are closely related in the tardos fingerprinting scheme .",
    "therefore it is convenient to introduce the notation @xmath37 such that @xmath38 , which describes how big @xmath32 is , compared to @xmath36 .",
    "also , we sometimes simply say a scheme is secure , to denote that it is sound and complete for certain ( implicit ) parameters @xmath31 and @xmath32 .      since the scheme of tardos had a constant @xmath39 in front of the @xmath40 in the codelength , many papers focused on constructing a scheme with the same order codelength , but with a smaller constant . for example , using a discrete distribution function in the tardos scheme , nuida et al .  showed in @xcite that one can achieve codelengths of @xmath41 in some cases with small @xmath16 , while for large @xmath16 they achieved an asymptotic codelength of @xmath42 . using a different approach , amiri and tardos showed in @xcite that with a computation - heavy construction , one can approach the theoretical lower bound of @xmath43 for large @xmath16 .    in this paper",
    "we will focus on the binary tardos scheme with the arcsine distribution function from @xcite , which was introduced in @xcite and further analyzed and improved in e.g. @xcite .",
    "we will focus on two improvements in particular . in @xcite ,",
    "blayer and tassa made the proofs of @xcite tighter by introducing several auxiliary variables which were to be optimized later , instead of fixing them in advance . in that paper",
    "the construction of the tardos scheme essentially remained the same , but it was shown that a codelength of @xmath44 is also sufficient to prove soundness and completeness . in @xcite , kori et al .",
    "did change the scheme , by making the score function of the tardos scheme symbol - symmetric .",
    "this also lead to shorter codelengths , giving asymptotic codelengths of @xmath45 for large @xmath16 , while maintaining soundness and completeness . furthermore assuming that the scores of innocent users and the joint coalition score are normally distributed , kori et al",
    ".  showed in ( * ? ? ?",
    "* section 6 ) that an asymptotic codelength of @xmath46 is then both sufficient and necessary . since by the central limit theorem these scores will in fact converge to normal distributions for asymptotically large @xmath16 , this also provides a lower bound on the codelength , when using the arcsine distribution function and the symmetric score function .      combining the symbol - symmetric score function from kori et al .  with blayer and tassa s sharp analysis",
    ", we will prove @xmath31-soundness and @xmath32-completeness for all @xmath47 and @xmath48 with a codelength of @xmath49 .",
    "this improves upon the codelength from blayer and tassa by a factor more than @xmath50 , and it improves upon the original tardos scheme by a factor of more than @xmath0 .",
    "furthermore , for bigger @xmath16 and smaller @xmath51 the constant in front of the @xmath40 in @xmath7 further decreases , easily leading to a factor @xmath52 improvement over the original tardos scheme and a factor slightly less than @xmath0 improvement over the blayer and tassa analysis .",
    "similar to work of kori et al . , we also look at the asymptotics of our scheme , and show that for large @xmath16 , we can prove soundness and completeness for a codelength of @xmath53 .",
    "this improves upon the asymptotic results from kori et al .  by a factor @xmath1 , and we achieve the asymptotic optimal codelength which kori et al .",
    "proved to be sufficient and necessary under the added assumption that the distributions of scores are normal distributions .",
    "we therefore close the gap of a factor @xmath1 between the best known provably secure codelength and the asymptotic optimal codelength , for tardos original arcsine distribution function and the symmetric score function .",
    "these results also improve upon the asymptotic codelengths from nuida et al .",
    ", who used different discrete distribution functions , by more than @xmath54 .",
    "the paper is organized as follows . in section",
    "[ sec : construction ] we first give the construction of the ( symmetric ) tardos scheme , and compare our results with earlier results from literature . in sections [ sec : soundness ] and [ sec : completeness ] we then prove that the soundness and completeness properties hold under our assumptions on the parameters . in section [ sec : optimization ]",
    "we then give results similar to those in ( * ? ? ?",
    "* section 2.4.5 ) on how to find the optimal set of parameters that satisfies the conditions for our proof method to work , and minimizes the codelength .",
    "there we also give such minimal codelengths , for several values of @xmath16 and @xmath51 .",
    "finally in section [ sec : asymptotics ] we prove the results stated above for asymptotically large @xmath16 , and show that the optimal rate of convergence is of order @xmath55 .",
    "this paper is mainly based on results from the first author s master s thesis @xcite .",
    "first we present the construction of the tardos traitor tracing scheme , as in @xcite , where we use auxiliary variables @xmath56 for the codelength @xmath7 , accusation offset @xmath57 and cutoff parameter @xmath58 respectively .",
    "the only difference between our construction and that of blayer and tassa is in the score function we use .",
    "while blayer and tassa used the asymmetric score function from tardos original scheme , we use the symbol - symmetric score function from kori et al .",
    "let @xmath59 be positive integers , and let @xmath60 be the desired upper bounds for the soundness and completeness error probabilities respectively .",
    "let us write @xmath61 so that @xmath62 .",
    "let @xmath56 be positive constants , with @xmath63 .",
    "then the symmetric tardos fingerprinting scheme works as follows .    1 .",
    "* initialization * 1 .",
    "take the codelength as @xmath64 .",
    "may not be integral , while the codelength of a code of course has to be integral .",
    "see appendix [ sec : integralcodelengths ] for a short note on how to solve this minor problem in our construction . ] 2 .",
    "take the accusation offset parameter as @xmath65 .",
    "3 .   take the cutoff parameter as @xmath66 , and compute @xmath67 such that @xmath68 .",
    "4 .   for each fingerprint position @xmath69 , select @xmath70 $ ] independently from the distribution defined by the following cdf @xmath71 and pdf @xmath72 :",
    "@xmath73 the function @xmath72 is biased towards @xmath58 and @xmath74 and symmetric around @xmath75 .",
    "2 .   * codeword generation * 1 .   for each position",
    "@xmath69 and for each user @xmath76 , select the @xmath22th entry of the codeword of user @xmath5 according to @xmath77 = p_i$ ] and @xmath78 = 1 - p_i$ ] .",
    "* accusation * 1 .   for each position",
    "@xmath69 and for each user @xmath76 , calculate the score @xmath79 according to : @xmath80 2 .   for each user @xmath76 , calculate the total accusation sum @xmath81 .",
    "user @xmath5 is accused if and only if @xmath82 .    under certain conditions on the parameters @xmath56 , which are specified in subsections [ sub : construction - asymtardos ] and [ sub : construction - symtardos ] , one can prove soundness and completeness , using ( a modified version of ) tardos proof construction .",
    "note that , since this proof method uses several non - tight bounds , it is very well possible that there exist sets of parameters that do not satisfy these conditions , but still guarantee soundness and completeness .",
    "so if the conditions are not satisfied , we can only conclude that the proof method does not work in that case .      in the original tardos scheme , and in several papers discussing the tardos scheme ,",
    "the score function is asymmetric in @xmath83 , as only the positions with @xmath84 are taken into account for the accusations .",
    "the construction of this asymmetric tardos scheme is the same as in subsection [ sub : construction - tardos ] , but with the scores from replaced by : @xmath85 blayer and tassa performed an extensive analysis of this scheme in @xcite , and showed that under the following assumptions , one can prove soundness and completeness for given @xmath16 and @xmath51 . in these theorems , the function @xmath86 is defined by @xmath87 , while the function @xmath88 denotes its inverse function as in @xcite , so that @xmath89 for all @xmath90 .",
    "* theorem 1.1 ) let the tardos scheme be constructed as in subsection [ sub : construction - tardos ] , but with the asymmetric score function from .",
    "let @xmath91 be positive constants , with @xmath92 , such that @xmath93 and @xmath94 satisfy the following two requirements : @xmath95 then the scheme is @xmath31-sound .",
    "* theorem 1.2 ) let the tardos scheme be constructed as in subsection [ sub : construction - tardos ] , but with the asymmetric score function from .",
    "let @xmath96 be positive constants such that @xmath97 and @xmath98 satisfy the following two requirements : @xmath99 then the scheme is @xmath32-complete .",
    "tardos original choice of parameters was the following , which allowed him to prove his scheme is @xmath31-sound and @xmath32-complete for all @xmath47 and @xmath100 ( * ? ? ?",
    "* theorems 1 and 2 ) : @xmath101 blayer and tassa proved that to achieve @xmath31-soundness and @xmath32-completeness for all @xmath47 and @xmath48 , the following choice of parameters is also provably secure ( * ? ? ?",
    "* section 2.4 ) : @xmath102 in ( * ? ? ? * corollary 1 ) , kori et al .  showed that the following choice of parameters suffices to prove soundness and completeness for asymptotically large @xmath16 : @xmath103 according to the central limit theorem , the scores of innocent users and the total score of the coalition converge to certain normal distributions . under the assumption that the scores behave exactly like these normal distributions , kori et al",
    ".  showed in ( * ? ? ?",
    "* corollary 3 ) that the following choice of parameters is then sufficient and necessary to prove soundness and completeness : @xmath104 applying the analysis from section [ sec : asymptotics ] to the asymmetric tardos scheme , we can prove that the following choice of parameters is provably sufficient for large @xmath16 : to blayer and tassa s original analysis for the asymmetric tardos scheme .",
    "the main difference is that then one needs @xmath105 instead of @xmath106 , which causes an extra factor @xmath0 for @xmath107 and extra factors @xmath1 for @xmath108 and @xmath109 . ]",
    "@xmath110 so with blayer and tassa s proof construction , we obtain a @xmath1 times shorter asymptotic codelength compared to the shortest provable codelength of kori et al .  for the asymmetric tardos scheme , and we achieve the asymptotic optimal codelength for the asymmetric tardos scheme which kori et al .  only achieved when they added the assumption that scores behave like normal distributions .",
    "we will prove in sections [ sec : soundness ] and [ sec : completeness ] that with the following assumptions on the parameters , we can also prove soundness and completeness for the symmetric tardos scheme .",
    "[ thm : soundness ] let the tardos scheme be constructed as in subsection [ sub : construction - tardos ] , and let @xmath91 be positive constants , with @xmath92 , such that @xmath93 and @xmath94 satisfy the requirements from and .",
    "then the scheme is @xmath31-sound .",
    "[ thm : completeness ] let the tardos scheme be constructed as in subsection [ sub : construction - tardos ] , and let @xmath96 be positive constants , such that @xmath97 and @xmath98 satisfy and the following requirement : @xmath111 then the scheme is @xmath32-complete .    using the above results , in section [ sec : optimization ] we will prove @xmath31-soundness and @xmath32-completeness for all @xmath47 and @xmath48 for the following set of parameters : @xmath112 this improves upon the constants from blayer and tassa by a factor more than @xmath50 , and it improves upon the original tardos scheme by a factor more than @xmath0 .",
    "furthermore , for bigger @xmath16 and smaller @xmath51 the values of @xmath107 further decrease , easily leading to a factor @xmath52 improvement over the original tardos scheme .",
    "kori et al . showed that for asymptotically large @xmath16 , the following set of parameters is sufficient for proving soundness and completeness in the symmetric tardos scheme ( * ? ? ?",
    "* corollary 1 ) : @xmath113 with the added assumption that the scores of innocent users and the joint score of guilty users are normally distributed , kori et al",
    ".  also showed that the following set of parameters is sufficient for soundness and completeness , for asymptotically large @xmath16 ( * ? ? ? * corollary 2 ) : @xmath114 since by the central limit theorem these scores will also converge to normal distributions , this shows that the asymptotic optimal codelength for the symmetric tardos scheme is @xmath115 .",
    "we show in section [ sec : asymptotics ] that for asymptotically large @xmath16 , we can actually prove soundness and completeness for this optimal codelength , without any added assumptions . in the asymptotic case of @xmath116 ,",
    "our construction gives the following parameters : @xmath117 similar to the asymmetric case , we thus get a factor @xmath1 improvement over kori et al.s best provable asymptotic codelength , and we achieve the asymptotic optimal codelength which kori et al .  only proved with the added assumption that the scores behave like normal distributions .",
    "this also improves upon results from nuida et al .  in @xcite , who showed that with certain discrete distribution functions @xmath118 , one can prove soundness and completeness for @xmath42 for large @xmath16 .",
    "with our construction , we show a codelength of @xmath119 is provably secure for large @xmath16 .",
    "here we will prove theorem [ thm : soundness ] , i.e. prove the soundness property from definition [ def : secureness ] , under the assumptions and .",
    "we will closely follow the proof of soundness of blayer and tassa of ( * ? ? ? * theorem 1.1 ) .",
    "we will first prove an upper bound on @xmath120 $ ] , with @xmath121 and using only , and then use this result together with to prove upper bounds on @xmath122 $ ] for innocent users @xmath5 , and @xmath123 $ ] .",
    "[ lem : soundness ] let @xmath109 and @xmath94 be positive constants , with @xmath92 , such that @xmath124 and @xmath94 satisfy equation .",
    "let @xmath5 be an innocent user , and let @xmath125 be the user s score in the tardos scheme from subsection [ sub : construction - tardos ] .",
    "let @xmath121 . then @xmath126 \\leq e^{+r \\alpha^2",
    "\\ell}. \\label{eq : lem1}\\end{aligned}\\ ] ]    first we fill in @xmath81 and use that @xmath125 does not depend on @xmath127 for @xmath128 to get @xmath126 = { e}_{\\vec{y},\\vec{x}_j,\\vec{p}}\\left[\\prod_{i=1}^{\\ell } e^{\\alpha s_{ji}}\\right ] = \\prod_{i=1}^{\\ell } { e}_{y_i , x_{ji},p_i}\\left[e^{\\alpha s_{ji}}\\right].\\end{aligned}\\ ] ] since @xmath129 it follows that @xmath130 . from",
    "we know that @xmath131 for our choice of @xmath94 , hence @xmath132 . from the definition of @xmath133",
    "we know that @xmath134 exactly when @xmath135 . using this with @xmath136 we get @xmath137 \\leq { e}\\left[1 + \\alpha s_{ji } + r ( \\alpha s_{ji})^2\\right ] = 1 + \\alpha { e}[s_{ji } ] + r \\alpha^2 { e}[s_{ji}^2].\\end{aligned}\\ ] ] we can easily calculate @xmath138 $ ] and @xmath139 $ ] , as @xmath83 and @xmath140 are independent for innocent users @xmath5 . as in (",
    "* lemmas 2 and 3 ) , we obtain @xmath141 = 0 , \\quad { e}[s_{ji}^2 ] = 1 .",
    "\\label{sound1}\\end{aligned}\\ ] ] so it follows that @xmath142 \\leq 1 + r \\alpha^2 \\leq e^{r \\alpha^2}$ ] , and @xmath143 \\leq",
    "e^{r \\alpha^2 \\ell}$ ] , which was to be proven .",
    "we prove that the probability of accusing any particular innocent user is at most @xmath36 .",
    "since there are at most @xmath4 innocent users , the probability of not accusing any innocent users is then at least @xmath144 , which then proves the scheme is @xmath31-sound .    since a user is accused if and only if his score @xmath125 exceeds @xmath57 , we need to prove that @xmath145 \\leq { \\epsilon}_1/n$ ] for innocent users @xmath5 .",
    "first of all , we write @xmath121 , and we use the markov inequality and lemma [ lem : soundness ] to obtain @xmath146 = { p}[s_j > z ] = { p}\\left[e^{\\alpha s_j } > e^{\\alpha z}\\right ] \\leq e^{-\\alpha z } { e}\\left[e^{\\alpha s_j}\\right ] \\leq e^{-\\alpha z + r \\alpha^2 \\ell}.\\end{aligned}\\ ] ] since we want to prove that @xmath122 \\leq { \\epsilon}_1/n$ ] , the proof would be complete if @xmath147 , i.e.  if @xmath148 . filling in @xmath149 and @xmath64 , and dividing both sides by @xmath150 , we get @xmath151 this is exactly inequality , which was assumed to hold .",
    "this completes the proof .",
    "compared to the original proof in @xcite , this proof has barely changed .",
    "the only difference is that now the scores are counted for all positions @xmath22 , instead of only those positions where @xmath84 .",
    "however , since in the proof in @xcite this number of positions was bounded by @xmath7 , the result remains the same .",
    "this explains why we can prove @xmath31-soundness with the symmetric score function under the same assumptions , as in @xcite .",
    "for the proof of theorem [ thm : completeness ] , we will again closely follow the proof of blayer and tassa of ( * ? ? ? * theorem 1.2 ) , and make changes where necessary to incorporate the symbol - symmetric score function .",
    "we first give a lemma to bound the expectation value of @xmath152 $ ] with @xmath153 and @xmath154 , and then use this lemma to prove completeness .",
    "[ lem : completeness ] let @xmath155 and @xmath98 be positive constants such that @xmath156 and @xmath98 satisfy .",
    "let @xmath153 , let @xmath157 be a coalition of size @xmath16 , and let @xmath154 be their total coalition score in the tardos scheme from subsection [ sub : construction - tardos ] .",
    "then @xmath158 \\leq e^{-g \\beta \\ell}. \\label{eq : lem2}\\end{aligned}\\ ] ]    the proof of lemma [ lem : completeness ] is quite lengthy and can be found in appendix [ sec : lemmacompleteness ] . using this lemma we can easily prove theorem [ thm : completeness ] .",
    "we will prove that for a coalition of size @xmath16 , with probability at least @xmath159 the algorithm will accuse at least one of the colluders . note that",
    "if no colluders are accused , then the score of each colluder is below @xmath57 .",
    "hence if the total coalition score @xmath160 exceeds @xmath161 , then at least one of the pirates is accused .",
    "so to prove @xmath32-soundness , it suffices to prove that @xmath162 \\leq { \\epsilon}_2 $ ] .",
    "we first use the markov inequality and lemma [ lem : completeness ] with @xmath163 to get @xmath164 \\leq { p}[s < cz ] = { p}\\left[e^{-\\beta s } > e^{-\\beta c z}\\right ] \\leq e^{\\beta c z } { e}_{\\vec{y},x,\\vec{p}}\\left[e^{-\\beta s}\\right ] \\leq e^{\\beta c z - g \\beta \\ell}.\\end{aligned}\\ ] ] since we want to prove that @xmath162 \\leq e^{-\\eta k } \\leq ( { \\epsilon}_1/n)^{\\eta } = { \\epsilon}_2 $ ] , the proof would be complete if @xmath165 . filling in @xmath166 and writing out both sides ,",
    "we get @xmath167 this is exactly inequality , which was assumed to hold .",
    "this completes the proof .",
    "compared to @xcite , we see that instead of using , we now need that inequality holds .",
    "comparing these two inequalities , we see that a term @xmath168 has changed to a @xmath169 , and a term @xmath170 has changed to a @xmath171 .",
    "the most important change is the @xmath168 changing to a @xmath169 , since that term is the most dominant factor ( and the only positive term ) on the left hand side of . by increasing this by a factor @xmath1",
    ", we get that @xmath172 instead of @xmath173 . especially for large @xmath16",
    ", this will play an important role , and it will basically be the reason why the required codelength can then be reduced by a factor @xmath0 , compared to blayer and tassa s analysis for the asymmetric scheme .    while the other change ( the @xmath170 changing to @xmath171 ) does not have a big impact on the optimal choice of parameters for large @xmath16 , this change does influence the required codelength for smaller @xmath16 . because of this change , we now subtract more from the left hand side of , so that the value of @xmath98 is bounded sharper from above .",
    "this means that for finite @xmath16 we can not reduce the codelength of blayer and tassa by a factor @xmath0 , but only by a factor slightly less than @xmath0 .",
    "finally , after using in the proof above , the analysis remained the same as in @xcite .",
    "so under the same assumption as in @xcite , we could also complete the proof for the symmetric tardos scheme .",
    "similar to the analysis done by blayer and tassa in ( * ? ? ?",
    "* section 2.4 ) , we also investigate the optimal choice of parameters such that all requirements are satisfied , and @xmath107 is minimized . as only one of the inequalities has changed , and it changed only on two positions , the formulas for the optimal values of @xmath174 in the following theorem are almost the same as in ( * ? ? ?",
    "* section 2.4.5 ) . we do not give a proof here , as it would be nearly identical to the analysis done in ( * ? ? ?",
    "* section 2.4 ) .",
    "[ thm : optimization ] let @xmath175 be given , and let @xmath176 be fixed , satisfying @xmath177 .",
    "then the optimal choice of @xmath178 , minimizing @xmath107 and satisfying conditions , , , , is given by : @xmath179 @xmath180    so to find the optimal septuple @xmath181 for given @xmath182 , satisfying all requirements and minimizing @xmath183 , one only has to find the triple @xmath184 with @xmath185 and @xmath186 that minimizes the right hand side of .",
    "[ [ example ] ] example + + + + + + +    an optimal solution to , , , for @xmath47 and @xmath187 , minimizing @xmath107 , is given by @xmath112 this means that with these constants , we can prove soundness and completeness for all @xmath47 and @xmath48 , with a codelength of @xmath49 .",
    "compared to the original tardos scheme , which had a codelength of @xmath188 , this gives an improvement of a factor more than @xmath0 .",
    "furthermore we can prove that this scheme is @xmath31-sound and @xmath32-complete for any value of @xmath47 and @xmath48 , while tardos original proof only works for @xmath47 and @xmath100 .",
    "[ [ example-1 ] ] example + + + + + + +    in practice , one usually has @xmath189 instead of @xmath187 .",
    "for example , it could be that @xmath190 is sufficient , while @xmath191 is desired and there are @xmath192 users , so that @xmath193",
    ". then the optimizations give us @xmath194 for @xmath195 .",
    "so with this larger value of @xmath32 , a codelength of @xmath196 is sufficient to prove the soundness and completeness properties for any @xmath47 .",
    "this is then already a factor more than @xmath197 improvement compared to the original tardos scheme .",
    "if we let @xmath16 increase in inequalities , , , , i.e. if we only want provable soundness and completeness for @xmath198 for some @xmath199 , then one can easily see that the inequalities become weaker and    , for several values of @xmath16 between @xmath1 and @xmath200 .",
    "the different lines correspond to the cases @xmath201 respectively , where higher values of @xmath51 correspond to higher values of @xmath183 . ]",
    "an even shorter codelength can be achieved .",
    "figure [ fig : fig1 ] shows the optimal values of @xmath107 against different values of @xmath16 , for several values of @xmath51 .",
    "one can see that for large @xmath16 , a codelength of @xmath202 can be sufficient . in the next section , we will see that for large @xmath16 , the optimal values of @xmath107 will converge to @xmath203 .",
    "here we show that with the symmetric tardos construction , for @xmath204 we can prove soundness and completeness for @xmath205 .",
    "we calculate the optimal first order error term explicitly , and also show explicitly the dependence on @xmath51 , as the choice of @xmath51 may depend on the particular application .",
    "note that at least @xmath48 , but it may be considerably smaller and it may depend on @xmath16 as well .",
    "[ thm : firstorder ] let @xmath206 .",
    "the optimal asymptotic ( for @xmath116 ) value for @xmath107 , and the accompanying values for @xmath207 , are @xmath208 and the choices for @xmath209 leading to them are given by @xmath210    we have optimized for @xmath107 , and one could get slightly better error terms for @xmath108 or @xmath211 .",
    "for example , optimizing for @xmath108 yields an optimal value of @xmath212 , for a suboptimal @xmath107 of @xmath213 , where @xmath214 .",
    "it is remarkable that the error terms for @xmath107 and @xmath108 scale with @xmath215 , while kori et al .  found error terms scaling with @xmath216 .",
    "it turns out that in @xcite an error term in @xmath217 was not taken into account , and if one does do , their analysis for the binary case will also yield error terms scaling with @xmath215 .",
    "also note that @xmath211 ( related to the cutoff ) scales with @xmath218 , i.e.  the cutoff @xmath219 scales with @xmath220 rather than with @xmath221 as one might have guessed .",
    "an immediate consequence of theorem [ thm : firstorder ] is the following result , which shows that asymptotically we will achieve codelengths of @xmath119 , i.e. codelengths that are about @xmath2 of tardos original codelengths .",
    "[ cor : asymptotics ] for @xmath116 the above construction gives an @xmath31-sound and @xmath32-complete scheme with parameters @xmath222    this proves that our analysis is asymptotically tight , since for large @xmath16 we achieve the optimal codelength of @xmath46 .",
    "[ [ remark ] ] remark + + + + + +    in the proof of theorem [ thm : firstorder ] , we use that @xmath94 can be taken in the neighborhood of @xmath223 to get the final result , @xmath224 . in @xcite",
    "however , no such variable @xmath94 was used , as it was simply fixed at @xmath225 . if they had taken @xmath94 as a parameter in their analysis and",
    "had taken it close to @xmath223 in the asymptotic case , then they would have obtained the same asymptotic results as we did above , but still with different first order terms .",
    "the authors would like to thank boris kori , jeroen doumen and peter roelse for useful discussions and valuable comments .",
    "one detail we have not taken care of and which is often `` swept under the carpet ''  in other literature , is that the codelength @xmath7 by definition has to be integral . in the construction of the tardos scheme",
    "however , we said we take @xmath226 , while @xmath227 and @xmath107 may not be integral . to solve the problem of non - integral codelengths , tardos rounded up @xmath227 and took @xmath228 in his original scheme .",
    "blayer and tassa also rounded up @xmath227 and took @xmath229 , presumably also to guarantee that @xmath7 is integral exists that satisfies all requirements of blayer and tassa . ] .",
    "however , rounding up @xmath107 and @xmath227 could drastically increase the codelength .",
    "for example , suppose @xmath230 , and @xmath231 .",
    "then @xmath232 and @xmath233 , and numerical optimizations give @xmath234 . without rounding",
    "we would get a codelength of @xmath235 , while with rounding we get @xmath236 .",
    "so then the codelength @xmath237 is more than @xmath238 higher than @xmath7 , only because we rounded up both @xmath227 and @xmath107 .",
    "instead of rounding up inbetween , rounding up the entire codelength to @xmath239 makes more sense .",
    "the codelength is then increased by less than @xmath225 symbol , so we hardly notice the difference in the codelength . however , the proofs we give in section [ sec : soundness ] and [ sec : completeness ] are based on @xmath226 , which corresponds to using @xmath240 .",
    "if we take @xmath241 , then we get @xmath242 ( for @xmath243 ) , so that with the same parameters @xmath57 and @xmath58 we may not be able to prove soundness and completeness anymore",
    ". in particular , equation might not be satisfied if @xmath107 is increased , since implies that @xmath244 .",
    "increasing the left hand side may violate this bound , if we do not also increase @xmath108 .",
    "the following theorem takes care of this minor problem , by showing that if we can find a solution to , , , with a fractional codelength @xmath7 , then we can also find a solution to these inequalities with the integral codelength @xmath245 .",
    "in particular , we show which scheme parameters @xmath246 and @xmath58 one could take to achieve this result .",
    "let the tardos scheme be constructed as in subsection [ sub : construction - tardos ] , and let @xmath247 be a septuple satisfying conditions , , , giving scheme parameters @xmath248 and @xmath249 .",
    "then the tardos scheme from subsection [ sub : construction - tardos ] with parameters @xmath250 is @xmath31-sound and @xmath32-complete .",
    "let us write @xmath251 .",
    "we prove that if the equations hold for @xmath247 , then they also hold for @xmath252 , where @xmath253 .",
    "since for this set of parameters we get @xmath254 and @xmath58 as in , the result then follows .",
    "first note that since @xmath156 and @xmath98 did not change , both sides of inequality remain the same and this inequality is still satisfied . for inequality , note that both sides also remained the same , since @xmath255 . for , we rewrite this inequality as a quadratic inequality in @xmath256 : @xmath257 this inequality is satisfied if and only if @xmath256 lies between the two roots of @xmath258 , which therefore must exist .",
    "these roots exist if and only if @xmath259 . since we know",
    "that @xmath260 the inequality follows if @xmath261 from and we know that @xmath262 , i.e. @xmath263 .",
    "so it follows that @xmath264 , which proves the second inequality .",
    "the third inequality then follows from .    finally for , we prove that @xmath265 , while the right hand side remains the same , so that this inequality is still satisfied .",
    "note that @xmath109 is also at most the largest root of , so @xmath266 is bounded by @xmath267 here the second inequality follows from earlier calculations that @xmath268 .",
    "so this choice of @xmath256 is at least as high as @xmath109 , so inequality is satisfied .",
    "this completes the proof .",
    "for proving lemma [ lem : completeness ] we will again closely follow the analysis of blayer and tassa , and make changes where necessary .    first , we write the total accusation sum of all colluders together as follows : @xmath269 here @xmath270 is the number of ones on the @xmath22th positions of all colluders , @xmath83 is the output symbol of the pirates on position @xmath22 , and we introduced the notation @xmath271 . following the analysis from e.g.  blayer and tassa , and tardos , but using that @xmath272 for positions @xmath22 where @xmath273 ( instead of @xmath274 , as with the asymmetric score function ) , we can bound the expectation value by @xmath158 \\leq \\left(\\sum_{x=0}^c \\binom{c}{x } m_x\\right)^{\\ell } , \\label{comp1}\\end{aligned}\\ ] ] where @xmath275 and , for some random variable @xmath276 distributed according to @xmath118 , @xmath277 , \\\\ e_{1,x } & = { e}_p\\left[p^x ( 1 - p)^{c - x } e^{-\\beta\\left(x q - \\frac{c - x}{q}\\right)}\\right].\\end{aligned}\\ ] ]    now , using @xmath278 , we bound the exponents in @xmath279 and @xmath280 as follows .",
    "@xmath281 so @xmath282 for our choice of @xmath283 .",
    "so we can use the inequality @xmath284 which holds for all @xmath285 , with @xmath286 , to obtain @xmath287 , \\\\",
    "e_{1,x } & \\leq { e}_p\\left[p^x ( 1 - p)^{c - x } \\left(1 - \\beta \\left(x q - \\frac{c - x}{q}\\right ) + h^{-1}(s ) \\beta^2 \\left(x q - \\frac{c - x}{q}\\right)^2\\right)\\right].\\end{aligned}\\ ] ] introducing more notation , this can be rewritten to @xmath288 where @xmath289 , \\\\",
    "f_{1,x } & = { e}_p\\left[p^x ( 1 - p)^{c - x } \\left(x q - \\frac{c - x}{q}\\right)\\right ] , \\\\",
    "f_{2,x } & = { e}_p\\left[p^x ( 1 - p)^{c - x } \\left(x q - \\frac{c - x}{q}\\right)^2\\right].\\end{aligned}\\ ] ] we first calculate @xmath290 explicitly . writing out the expectation value and using the definition of @xmath72 from , we get @xmath291 the primitive of the integrand is given by @xmath292 , so we get @xmath293 for @xmath294 , we bound @xmath290 from above and below as @xmath295 using these bounds for @xmath296 , with @xmath294 , we get @xmath297 since @xmath298 , the maximum of the two terms is the first term when @xmath299 , and it is the second term when @xmath300 .",
    "note that this bound is different from the one of blayer and tassa , since in their analysis they do not have this maximum over two terms , but just the first of these two terms .",
    "we can not prove the same upper bound as blayer and tassa , and therefore our bound for @xmath301 , is slightly weaker than blayer and tassa s .",
    "for the positions where the marking assumption applies , i.e.  @xmath302 and @xmath303 , we do not use the bounds on @xmath290 , but use the exact formula from to obtain @xmath304 the value of @xmath305 is the same as that of blayer and tassa , but whereas blayer and tassa had @xmath306 , we get a lower upper bound on @xmath307 .",
    "this is essentially the reason why with the symmetric score function we get shorter codelengths than blayer and tassa .",
    "substituting the bounds on @xmath296 in the summation over @xmath296 from gives us @xmath308 gathering all terms with @xmath309 and @xmath310 , and using the substitution @xmath311 for the summation over @xmath312 terms , we get @xmath313 for the summation over @xmath310 , let us define a sequence of random variables @xmath314 according to @xmath315 with probability @xmath276 and @xmath316 with probability @xmath317 .",
    "similar to the inequalities from , we get that @xmath318 = 0 $ ] and @xmath319 = 1 $ ] . also ,",
    "since @xmath320 and @xmath321 are independent for @xmath322 , we have that @xmath323 = 0 $ ] for @xmath322 .",
    "therefore we can write @xmath324 = \\sum_{i=1}^c { e}_p\\left[t_i^2\\right ] + \\sum_{i \\neq j } { e}_p\\left[t_i t_j\\right ] = c.\\end{aligned}\\ ] ] but writing out the definition of the expected value , we see that the left hand side is actually the same as the summation over @xmath310 , so that we get @xmath324 = \\sum_{x=0}^c \\binom{c}{x } p^x ( 1 - p)^{c - x } \\left(x q - \\frac{c - x}{q}\\right)^2 = \\sum_{x=0}^c \\binom{c}{x } f_{2,x } = c.\\end{aligned}\\ ] ] also we trivially have that @xmath325 = { e}_p\\left[\\sum_{x=0}^c \\binom{c}{x } p^x ( 1 - p)^{c - x}\\right ] = 1.\\end{aligned}\\ ] ] for the summation over @xmath326 terms we use the following upper bound , which then also holds for the summation over @xmath327 terms : @xmath328 note that this first inequality is quite sharp . in most cases @xmath329 , so that the summation is dominated by the terms with low values of @xmath330 . adding the terms with @xmath331 ( i.e. terms with high powers of @xmath58 ) to the summation",
    "has an almost negligible effect on the value of the summation .    now applying the previous results to , and using @xmath332 , which holds for all @xmath16 , we get @xmath333 we want to prove that , for some @xmath334 , @xmath335 filling in @xmath278 and @xmath66 and writing out the second inequality , this leads to the requirement that @xmath336 this is exactly inequality , which is assumed to hold .",
    "combining the results from equations and gives us @xmath158",
    "\\leq \\left(\\sum_{x=0}^c \\binom{c}{x } m_x\\right)^{\\ell } \\leq",
    "e^{-g \\beta \\ell}.\\end{aligned}\\ ] ] this completes the proof .",
    "we introduce parameters @xmath337 , a priori depending on @xmath16 , to enable us to write @xmath338 clearly @xmath337 are positive , and we will assume that @xmath339 and @xmath340 are @xmath341 for @xmath204 .",
    "this assumption will be validated later on .",
    "note that we do not demand this for @xmath342 ( and indeed , it will turn out that @xmath343 ) .",
    "note that @xmath344 , so that , with for convenience @xmath345 , we have @xmath346 next , for convenience we put @xmath347 , and then we have from ( o1 ) that @xmath348 , where @xmath349 note that @xmath350 is a decreasing function of @xmath342 , with limiting value @xmath351 .",
    "from ( o2 ) we see that @xmath352 , where @xmath353 .",
    "note that @xmath354 where we used that @xmath355 .",
    "note that ( o3 ) and ( o4 ) imply @xmath356 , and that by @xmath357 we have @xmath358 , with equality if and only if @xmath359 .",
    "so in order to minimize @xmath107 we minimize @xmath360 , and show that there is a solution to this with @xmath359 , which then must be the optimum . for this optimal solution , by and we get @xmath361 to find the main terms in the optimal values for @xmath56 , for the moment we neglect error terms . the fact that @xmath359 implies that @xmath362 , and",
    "this is asymptotically equivalent to @xmath363 .",
    "this can be expanded into @xmath364 , and this leads to @xmath365 , which actually is two conditions : @xmath366 this shows that it is impossible to choose both @xmath339 and @xmath340 close to @xmath367 , and that it is certainly possible to choose them @xmath341 as @xmath116 .",
    "note that optimizing @xmath368 implies taking @xmath155 as large as possible , but this means taking @xmath342 as small as possible , which is limited by the above condition .",
    "indeed , in minimizing @xmath369 we would like to minimize @xmath339 and @xmath340 , leading to growing @xmath342 , while also @xmath155 preferably keeps growing .",
    "we will see that this is possible .    in optimizing @xmath369 , to find the main term we also neglect for the moment the term @xmath370 , as it also tends to @xmath371 .",
    "so we optimize @xmath372 under the constraint @xmath373 .",
    "the minimal value for @xmath374 is reached for @xmath375 , where @xmath376 is a convenience constant . in this case @xmath377 , so @xmath343 , and @xmath378 .",
    "it follows that @xmath379 .",
    "let us next be more careful , and not throw away the term @xmath370 and the error terms .",
    "@xmath369 as in is a priori a function of @xmath380 and @xmath155 .",
    "we can take for @xmath342 its exact optimal value according to , viz .",
    "@xmath381 so that @xmath382 . note that allows us to eliminate from @xmath369 the variable @xmath339 .",
    "this yields @xmath383    we now minimize @xmath369 by setting the partial derivatives w.r.t .",
    "@xmath155 and @xmath340 to @xmath371 .",
    "indeed , @xmath384 , and this being @xmath371 implies @xmath385 further , by @xmath386 we find @xmath387 , and this being @xmath371 implies @xmath388    from and we eliminate @xmath340 , and thus obtain an equation in @xmath155 only , viz .",
    "@xmath389 the first term on the left hand side is @xmath390 , and the right hand side is @xmath391 , and as @xmath392 and @xmath393 the right hand side clearly is smaller , so vanishes in the @xmath394 .",
    "so we find @xmath395 , and this yields @xmath396 in turn this implies @xmath397 and @xmath398 indeed we find that @xmath342 and @xmath155 both tend to @xmath399 .    to get the proper value for @xmath340 we turn to , and introduce @xmath400 such that @xmath401 , so that @xmath400 will tend to @xmath371 .",
    "then becomes a cubic equation in @xmath400 : @xmath402 when @xmath393 and @xmath343 , this ultimately becomes @xmath403 , with the quadratic term being positive definite , showing that for finite large @xmath155 has exactly one real solution , which will be close to @xmath371 .",
    "for this solution we have , using , , @xmath404 hence @xmath405 putting everything together , using , we find @xmath406 the result now easily follows .    1 e. amiri and g. tardos ,  high rate fingerprinting codes and the fingerprinting capacity , \" , _ proc . _ 20__th acm - siam symp . on discrete algorithms _ _ , pp . 336345 , 2009 . o. blayer and t. tassa ,  improved versions of tardos fingerprinting scheme , \" _ des .",
    "codes cryptogr .",
    "1 , pp . 79103 , 2008 . y. huang and p. moulin ,  saddle - point solution of the fingerprinting capacity game under the marking assumption , \" _ proc .",
    "_ 2009 ieee int .",
    "information theory , vol .",
    "4 , pp . 22562260 , 2009 . t. laarhoven ,  collusion - resistant traitor tracing schemes , \" m.sc .",
    "thesis , dept .",
    "comp . sc .",
    ", eindhoven univ .",
    "eindhoven , the netherlands , 2011 .",
    "_ ,  an improvement of discrete tardos fingerprinting codes , \" _ des .",
    "codes cryptogr .",
    "3 , pp . 339362 , 2009 . b. kori _",
    "_ ,  symmetric tardos fingerprinting codes for arbitrary alphabet sizes , \" _ des .",
    "codes cryptogr .",
    "2 , pp . 137166 , 2008 . b. kori _",
    "_ ,  tardos fingerprinting is better than we thought , \" _ ieee trans .",
    "inform . theory _",
    "54 , no . 8 , pp . 36633676 , 2008 . g. tardos ,  optimal probabilistic fingerprint codes , \" _ proc .",
    "_ 35__th acm symp . on theory of computing _ _ , 2003 , pp",
    ". 116125 ."
  ],
  "abstract_text": [
    "<S> for the tardos traitor tracing scheme , we show that by combining the symbol - symmetric accusation function of kori et al .  with the improved analysis of blayer and tassa we get further improvements . </S>",
    "<S> our construction gives codes that are up to @xmath0 times shorter than blayer and tassa s , and up to @xmath1 times shorter than the codes from kori et al . </S>",
    "<S> asymptotically , we achieve the theoretical optimal codelength for tardos distribution function and the symmetric score function . for large coalitions , </S>",
    "<S> our codelengths are asymptotically about @xmath2 of tardos original codelengths , which also improves upon results from nuida et al . </S>"
  ]
}
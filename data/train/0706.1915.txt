{
  "article_text": [
    "in this short note we show how to endow with a canonical hopf algebra structure the tensor product @xmath0 of two braided hopf algebras living in a monoidal category , provided that there is an isomorphism @xmath1 satisfying suitable conditions ( see proposition  [ prop1.1 ] ) . in particular",
    ", the square tensor @xmath2 is always a braided hopf algebra with this structure . also , the tensor product of two hopf algebras living in a braided category is again a braided hopf algebra ( although in a new braided category ) . when seen in this context ,",
    "the key point is to replace the braid @xmath3 with @xmath4 .",
    "we work in a monoidal category @xmath5 , for instance , the category of vector spaces over a field @xmath6 .",
    "we write @xmath7 and @xmath8 for the tensor product and the unit of @xmath5 , respectively .",
    "the associativity and unit constraints are assumed without referring to them .",
    "we assume the reader is familiar with the notions of algebras and coalgebras in monoidal categories .",
    "all the algebras are associative unitary and the coalgebras are coassociative counitary . given an algebra @xmath9 and a coalgebra @xmath10 , we let @xmath11 , @xmath12 , @xmath13 and @xmath14 denote the multiplication , the unit , the comultiplication and the counit , respectively , specified with a subscript if necessary .",
    "we are going to use the nowadays well known graphic calculus for monoidal and braided categories .",
    "as usual , morphisms will be composed downwards and tensor products will be represented by horizontal concatenation in the corresponding order .",
    "the identity map of an object will be represented by a vertical line . given an algebra @xmath9 , the diagrams @xmath15 and stand for the multiplication map and the unit of @xmath9 respectively .",
    "given a coalgebra @xmath10 , the comultiplication and the counit of @xmath10 will be represented by the diagrams @xmath16 and respectively .",
    "let @xmath17 , @xmath18 be objects in @xmath19 and let @xmath20 be an arrow .",
    "* if @xmath17 is an algebra , then we say that @xmath21 is _ compatible _ with the algebra structure of @xmath17 if @xmath22 and @xmath23 . *",
    "if @xmath17 is a coalgebra , then we say that @xmath21 is compatible with the coalgebra structure of @xmath17 if @xmath24 and @xmath25 .",
    "of course , there are similar compatibilities when @xmath18 is an algebra or a coalgebra .",
    "recall that a braided bialgebra in @xmath5 is an object @xmath26 of @xmath5 endowed with an algebra structure , a coalgebra structure and an isomorphism @xmath27 ( called the braid of @xmath26 ) satisfying the braid equation @xmath28 such that : @xmath29 is compatible with the algebra and coalgebra structures of @xmath26 , @xmath30 is a coalgebra morphism , @xmath31 is an algebra morphism and @xmath32 .",
    "if moreover there exists a map @xmath33 which is the inverse of the identity in the monoid @xmath34 with the convolution product , then we say that @xmath26 is a braided hopf algebra and we call @xmath35 the antipode of @xmath26 .",
    "let @xmath26 be a braided bialgebra in @xmath19 .",
    "it is well known that if the braid of @xmath26 is involutive ( i.e. , @xmath36 ) , then @xmath37 is a braided bialgebra in a natural way .",
    "the following proposition is the main result in this note .",
    "it shows in particular that the involutivity hypothesis can be removed .",
    "[ prop1.1 ] let @xmath26 and @xmath38 braided bialgebras in @xmath19 and let @xmath39 be a invertible arrow . if @xmath40 and @xmath41 is compatible with the bialgebras structures of @xmath26 and @xmath38 , then @xmath42 is a braided bialgebra , via    * @xmath43 * @xmath44 , * @xmath45 , * @xmath46 , * @xmath47",
    ".    moreover , if @xmath26 and @xmath38 are braided hopf algebras , then so is @xmath42 , with antipode @xmath48 .",
    "the fact that @xmath0 is an algebra and a coalgebra is well - known and standard .",
    "we check now the compatibility between multiplication and comultiplication : @xmath49\\object{h } & \\step[1]\\object{l } \\\\              \\hh\\operatorname{\\mathsf{id } } & \\xx & \\step[1]\\operatorname{\\mathsf{id}}\\\\              \\hh \\cu & & \\cu \\\\",
    "\\hh \\cd & & \\cd \\\\              \\hh\\operatorname{\\mathsf{id } } & \\x & \\step[1]\\operatorname{\\mathsf{id}}\\\\              \\hh\\object{h } & \\object{l } \\step[1]\\object{h } & \\step[1]\\object{l } \\\\",
    "\\end{tangles }          \\;=\\ ;          \\begin{tangles}{lccr }              \\hh\\step[.5]\\object{h } \\step[2 ] \\object{l } \\step[2]\\object{h } \\step[2]\\object{l }",
    "\\\\              \\step[.5]\\operatorname{\\mathsf{id}}\\step[2]\\xx\\step[2]\\operatorname{\\mathsf{id}}\\\\              \\hh\\cd \\step[1]\\cd \\step[1 ] \\cd \\step[1 ] \\cd \\\\              \\hh \\operatorname{\\mathsf{id}}\\step[1 ] \\xx \\step[1 ] \\operatorname{\\mathsf{id}}\\step[1 ]   \\operatorname{\\mathsf{id}}\\step[1 ]   \\xx \\step[1 ] \\operatorname{\\mathsf{id}}\\\\              \\hh\\cu \\step[1]\\cu \\step[1 ] \\cu \\step[1 ] \\cu \\\\              \\step[.5]\\operatorname{\\mathsf{id}}\\step[2]\\x\\step[2]\\operatorname{\\mathsf{id}}\\\\              \\hh\\step[.5]\\object{h } \\step[2 ] \\object{l } \\step[2]\\object{h } \\step[2]\\object{l } \\\\          \\end{tangles }          \\;=\\ ;          \\begin{tangles}{lccr }              \\hh\\step[.5]\\object{h } \\step[2 ] \\object{l } \\step[2]\\object{h } \\step[2]\\object{l } \\\\              \\hh\\cd \\step[1]\\cd \\step[1 ] \\cd \\step[1 ] \\cd \\\\              \\hh\\operatorname{\\mathsf{id}}\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\xx\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\operatorname{\\mathsf{id}}\\\\              \\hh \\operatorname{\\mathsf{id}}\\step[1 ]   \\operatorname{\\mathsf{id}}\\step[1 ]   \\xx \\step[1 ] \\xx \\step[1 ] \\operatorname{\\mathsf{id}}\\step[1 ]   \\operatorname{\\mathsf{id}}\\\\              \\hh \\operatorname{\\mathsf{id}}\\step[1 ] \\xx \\step[1 ] \\operatorname{\\mathsf{id}}\\step[1 ]   \\operatorname{\\mathsf{id}}\\step[1 ]   \\xx \\step[1 ] \\operatorname{\\mathsf{id}}\\\\              \\hh \\operatorname{\\mathsf{id}}\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\x\\step[1]\\x\\step[1]\\operatorname{\\mathsf{id}}\\step[1 ] \\operatorname{\\mathsf{id}}\\\\              \\hh\\operatorname{\\mathsf{id}}\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\x\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\operatorname{\\mathsf{id}}\\\\              \\hh\\cu \\step[1]\\cu \\step[1 ] \\cu \\step[1 ] \\cu \\\\              \\hh\\step[.5]\\object{h } \\step[2 ] \\object{l } \\step[2]\\object{h } \\step[2]\\object{l } \\\\          \\end{tangles }          \\;=\\ ;          \\begin{tangles}{lccr }              \\hh\\step[.5]\\object{h } \\step[2 ] \\object{l } \\step[2]\\object{h } \\step[2]\\object{l } \\\\              \\hh\\cd \\step[1]\\cd \\step[1 ] \\cd \\step[1 ] \\cd \\\\              \\hh\\operatorname{\\mathsf{id}}\\step[1]\\x\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\x\\step[1]\\operatorname{\\mathsf{id}}\\\\              \\hh\\operatorname{\\mathsf{id}}\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\xx\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\operatorname{\\mathsf{id}}\\\\              \\hh\\operatorname{\\mathsf{id}}\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\xx\\step[1]\\xx\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\operatorname{\\mathsf{id}}\\\\              \\hh\\operatorname{\\mathsf{id}}\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\x\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\operatorname{\\mathsf{id}}\\step[1]\\operatorname{\\mathsf{id}}\\\\              \\hh\\operatorname{\\mathsf{id}}\\step[1]\\xx \\step[1]\\operatorname{\\mathsf{id}}\\step[1 ] \\operatorname{\\mathsf{id}}\\step[1]\\xx \\step[1]\\operatorname{\\mathsf{id}}\\\\              \\hh\\cu \\step[1]\\cu \\step[1 ] \\cu \\step[1 ] \\cu \\\\              \\hh\\step[.5]\\object{h } \\step[2 ] \\object{l } \\step[2]\\object{h } \\step[2]\\object{l } \\\\          \\end{tangles }      \\end{aligned}\\ ] ] we leave to the reader to prove that @xmath50 satisfies the braid equation , and that it is compatible with @xmath51 , @xmath52 , @xmath53 and @xmath54 . the proof of the last assertion in the statement is also straightforward .",
    "the aim of this section is to give a more categorical proof of proposition  [ prop1.1 ]",
    ". the methods presented here could be useful in generalizing this result to braided versions of bicrossproducts , matched pairs , etc .",
    "( see @xcite ) .",
    "let @xmath55 be a family of objects in @xmath5 .",
    "a family @xmath56 of isomorphisms @xmath57 is said to be _ braided _ if @xmath58 the braid equations @xmath59 are satisfied .",
    "given such a family and a string @xmath60 of elements in @xmath61 , we call @xmath62 the _ length _ of @xmath63 , we let @xmath64 denote the string @xmath65 and we put @xmath66 . for each pair @xmath67 of such strings",
    "we define the map @xmath68 , recursively by          let @xmath81 , where @xmath82 is a family of maps compatible with @xmath56 .",
    "we want to embed this datum into a braided category in a natural way .",
    "to this end , let @xmath83 be the category whose objects are pairs @xmath84 , where @xmath18 is an object in @xmath5 and @xmath85 is a family of isomorphisms @xmath86 , subject to                  we consider @xmath103 , the center of @xmath83 , which , we recall from ( * ? ? ?",
    "9.1.6 ) , has as objects the pairs @xmath104 , where @xmath105 is an object in @xmath83 and @xmath106 is a natural isomorphism @xmath107 such that @xmath108 an arrow @xmath109 is an arrow @xmath110 in @xmath83 such that @xmath111            we take @xmath121 .",
    "@xmath56 consists of the arrows @xmath122 , @xmath123 , @xmath124 , @xmath125 and the canonical maps @xmath126 , @xmath127 .",
    "we take also @xmath128 . by proposition  [ pr:32 ] , these data are included , via a map @xmath129 , in a braided category .",
    "moreover , the braiding between @xmath130 and @xmath131 is involutive , i.e. , @xmath132 .",
    "hence , the first item of ( * ? ? ?",
    "* corollary  2.17 ) applies to give the desired result ."
  ],
  "abstract_text": [
    "<S> we show how to define the tensor product of two braided hopf algebras . </S>"
  ]
}
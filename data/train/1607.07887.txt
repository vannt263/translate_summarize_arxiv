{
  "article_text": [
    "quantum computers can solve some computational problems exponentially faster than classical computers which has applications in the fields of cryptography [ 1 ] , machine learning [ 2 ] and physics simulations [ 3 ] .",
    "these high profile applications of quantum computation have lead to a race to build new quantum computing hardware , but does quantum computation require new hardware ?",
    "quantum computation is a model of computation , much like turing machines are a model of computation .",
    "it is widely accepted but not proven that new hardware is needed to efficiently implement quantum computation .",
    "similarly to how other open problems thought to be intractable seem to have an efficient classical implementation , such as graph isomorphism , an efficient implementation of quantum computation on classical computers is a real possibility and we present a new method that takes us closer to this possibility .",
    "we present a new graph theoretic implementation of the quantum computation model based on bayesian networks : qudot nets .",
    "qudot nets implement @xmath4-qubit states as nodes ( or dots ) on a directed , acyclic , weighted multi - graph ( multi - digraph ) .",
    "the nodes are labeled @xmath5 or @xmath6 representing the possible values of a single qubit .",
    "an edge between nodes represents a tensor product and the edge weight represents a probability amplitude to observe the child node given the parent node .",
    "qudot nets are able to represent some @xmath4-qubit states using a linear amount of resources as opposed to the @xmath7 numbers required by a vector implementation .",
    "single qubit quantum gates are implemented as transformations of edge weights thus allowing qudot nets to implement single qubit gates , measurements and semi - quantum control gates in linear time as opposed to requiring @xmath8 matrix multiplications .",
    "coherent ( non semi ) two qubit control gates can be implemented by allowing multiple labeled edges to connect nodes making the qudot net a multi - digraph . the efficiency is still unresolved for these coherent control gates .",
    "the number of edges can still grow exponentially for coherent control gates , however , it remains to be seen if duplicate edges can be efficiently merged .",
    "qudot nets can also provide a deeper theoretical understanding of both quantum and classical computation .",
    "qudot nets allow us to analyze entanglement as a graph coloring problem .",
    "also , if we are ultimately correct and quantum computation can be efficiently implemented on classical computers then @xmath9 and the strong church - turing thesis is further confirmed .",
    "furthermore , since there is strong evidence that @xmath10 , if @xmath9 then it is possible that quantum mechanics can be de - randomized by a deterministic theory thus confirming einstein s conviction that nature does not play dice .",
    "qudot nets are able to represent an @xmath4 qubit quantum state @xmath11 if the quantum state starts in the ground state @xmath12 and can be evolved to the desired state @xmath11 using the quantum gates defined as edge transformations on qudot nets .",
    "a qudot net represents a qubit as two graphical nodes side by side in a layer called a qubit layer .",
    "the number of qubit layers represents the total number of qubits , the topmost qubit layer is the first qubit and the @xmath4-th qubit layer is the @xmath4-th qubit .",
    "the first qubit layer is accessed by a special node called the root node .",
    "the left node of a qubit layer is labeled the 0 node and the right node of the qubit layer is labeled the 1 node .",
    "the two nodes in each qubit layer are called siblings",
    ". directed , weighted edges go from a node in one qubit layer to a node in another qubit layer and represents a tensor product between those qubits .",
    "the weights of the directed edges are complex numbers and correspond to the probability amplitude to observe the child node given the parent node .",
    "there are @xmath13 number of nodes to represent @xmath14 qubits and @xmath15 edges .",
    "therefore , the qudot net representation scales linearly in the number of qubits @xmath14 for qubit systems that are generated by starting in the ground state and evolved by using single qubit quantum gates defined on qudot nets ( @xmath1 , @xmath2 , @xmath3 and swap ) and semi - quantum control gates .",
    "it remains to be seen if we can extend the linear ( or polynomial ) efficiency to coherent control gates .",
    "\\(r ) at ( 1.5,2 ) ; ( rootlabel ) at ( 1.5 , 3 ) @xmath16 ;    \\(00 ) at ( 0,0 ) @xmath5 ; ( 01 ) at ( 3,0 ) @xmath6 ;    \\(10 ) at ( 0,-3 ) @xmath5 ; ( 11 ) at ( 3,-3 ) @xmath6 ;    \\(20 ) at ( 0,-6 ) @xmath5 ; ( 21 ) at ( 3,-6 ) @xmath6 ;    ( n0 ) at ( 0,-9 ) @xmath5 ; ( n1 ) at ( 3,-9 ) @xmath6 ;    \\(r ) edge node[left]@xmath17 ( 00 ) ;",
    "( r ) edge node[right]@xmath17 ( 01 ) ;    \\(00 ) edge node[left]@xmath17 ( 10 ) ; ( 00 ) edge node[right]@xmath17 ( 11 ) ;    \\(01 ) edge node[left]@xmath17 ( 10 ) ; ( 01 ) edge node[right]@xmath17 ( 11 ) ;    \\(10 ) edge node[left]@xmath17 ( 20 ) ; ( 10 ) edge node[right]@xmath17 ( 21 ) ;    \\(11 ) edge node[left]@xmath17 ( 20 ) ; ( 11 ) edge node[right]@xmath17 ( 21 ) ;    ( -1,-1 ) rectangle ( 4,1 ) ; ( q1 ) at ( -2,0 ) @xmath18 ;    ( -1,-4 ) rectangle ( 4,-2 ) ; ( q2 ) at ( -2,-3 ) @xmath19 ;    ( -1,-7 ) rectangle ( 4,-5 ) ; ( q3 ) at ( -2,-6 ) @xmath20 ;",
    "( -1,-10 ) rectangle ( 4,-8 ) ; ( q4 ) at ( -2,-9 ) @xmath21 ;    \\(20 ) to node ( n0 ) ; ( 21 ) to node ( n1 ) ;    graph traversals of a qudot net correspond to quantum mechanical measurements in the computational basis .",
    "a possible traversal of the qudot net is a possible measurement outcome of the qubit state and the edge weights of the specific traversal multiplied together corresponds to the probability amplitude of that measurement .",
    "all possible traversals of the qudot net with a nonzero probability amplitude correspond to all possible measurement outcomes of the qubit state .",
    "a single traversal takes linear time and corresponds to a measurement in quantum mechanics .",
    "obtaining all possible probability amplitudes requires the enumeration of all @xmath7 possible traversals of the qudot net .",
    "this corresponds to the fact that nature `` hides '' the probability amplitudes , therefore , qudot nets are consistent with the framework of quantum mechanics .",
    "consider @xmath22    \\(r ) at ( 1.5,2 ) ;    \\(00 ) at ( 0,0 ) @xmath5 ; ( 01 ) at ( 3,0 ) @xmath6 ;    \\(10 ) at ( 0,-3 ) @xmath5 ; ( 11 ) at ( 3,-3 ) @xmath6 ;    \\(20 ) at ( 0,-6 ) @xmath5 ; ( 21 ) at ( 3,-6 ) @xmath6 ;    \\(r ) edge node[left]@xmath17 ( 00 ) ; ( r ) edge node[right]@xmath17 ( 01 ) ;    \\(00 ) edge node[left]@xmath17 ( 10 ) ; ( 00 ) edge node[right]@xmath17 ( 11 ) ;    \\(01 ) edge node[left]@xmath17 ( 10 ) ; ( 01 ) edge node[right]@xmath17 ( 11 ) ;    \\(10 ) edge node[left]@xmath17 ( 20 ) ; ( 10 ) edge node[right]@xmath17 ( 21 ) ;    \\(11 ) edge node[left]@xmath17 ( 20 ) ; ( 11 ) edge node[right]@xmath17 ( 21 ) ;    [ [ section ] ]    there are eight possible measurement outcomes of @xmath11 corresponding to the possible traversals of the qudot net in figure 2 :    1 .    @xmath23 with probability amplitude @xmath24 2 .",
    "@xmath25 with probability amplitude @xmath24 3 .",
    "@xmath26 with probability amplitude @xmath24 4 .",
    "@xmath27 with probability amplitude @xmath24 5 .",
    "@xmath28 with probability amplitude @xmath24 6 .",
    "@xmath29 with probability amplitude @xmath24 7 .",
    "@xmath30 with probability amplitude @xmath24 8 .",
    "@xmath31 with probability amplitude @xmath24    [ [ section-1 ] ]    consider @xmath32    \\(r ) at ( 1.5,2 ) ;    \\(00 ) at ( 0,0 ) @xmath5 ; ( 01 ) at ( 3,0 ) @xmath6 ;    \\(10 ) at ( 0,-3 ) @xmath5 ; ( 11 ) at ( 3,-3 ) @xmath6 ;    \\(20 ) at ( 0,-6 ) @xmath5 ; ( 21 ) at ( 3,-6 ) @xmath6 ;    \\(r ) edge node[left]@xmath6 ( 00 ) ; ( r ) edge node[right]@xmath5 ( 01 ) ;    \\(00 ) edge node[left]@xmath6 ( 10 ) ; ( 00 ) edge node[right]@xmath5 ( 11 ) ;    \\(01 ) edge node[left]@xmath5 ( 10 ) ; ( 01 ) edge node[right]@xmath5 ( 11 ) ;    \\(10 ) edge node[left]@xmath6 ( 20 ) ; ( 10 ) edge node[right]@xmath5 ( 21 ) ;    \\(11 ) edge node[left]@xmath5 ( 20 ) ; ( 11 ) edge node[right]@xmath5 ( 21 ) ;    [ [ section-2 ] ]    there is only one possible measurement outcome of @xmath33 corresponding to the one nonzero traversal of the qudot net in figure 3 :",
    "@xmath23 with probability amplitude @xmath34    _ qudot net traversal algorithm _ : begin on root , while a node has child edges let @xmath35 , @xmath36 be the edge weights of the child edges directed towards the @xmath5 and @xmath6 child nodes respectively . generate a random number @xmath37 $ ] .",
    "if @xmath38 then visit the @xmath5 child node , else visit the @xmath6 child node .",
    "the labels of the nodes visited is the measured state .",
    "this algorithm will reproduce the probability distribution of the qubit state and is in @xmath39 where @xmath4 is the number of qubits .",
    "qudot nets implement measurements in linear time .",
    "qudot nets allow for the efficient implementation of some single qubit gates by treating them as operations on the edge weights .",
    "the unitary transformations that the quantum circuit model uses as quantum gates are replaced with transformations of edge weights in a qubit layer .",
    "qudot net implementations of single qubit gates define specific rules on how to transform parent and child edge weights of sibling nodes in a qubit layer as outlined in figure 4 .",
    "the @xmath0 , @xmath1 , @xmath3 and @xmath2 single qubit gates are described in detail , however , anyone of ordinary skill in the methods of qudot nets will appreciate that many variations and alterations to the following details may be used to create additional single qubit gates .",
    "we implement our methods for the gates we define using the java programming language and show results for the scalability of qudot net defined quantum gates .",
    "a clear linear scale is shown for all defined gates .",
    "\\(r ) at ( 1.5,2 ) ; ( 00 ) at ( 0,0 ) @xmath5 ; ( 01 ) at ( 3,0 ) @xmath6 ;    \\(10 ) at ( 0,-3 ) @xmath5 ; ( 11 ) at ( 3,-3 ) @xmath6 ;    \\(20 ) at ( 0,-6 ) @xmath5 ; ( 21 ) at ( 3,-6 ) @xmath6 ;    \\(00 ) edge node[left]@xmath40 ( 10 ) ; ( 00 ) edge node[right]@xmath41 ( 11 ) ;    \\(01 ) edge node[left]@xmath42 ( 10 ) ; ( 01 ) edge node[right]@xmath43 ( 11 ) ;    \\(10 ) edge node[left]@xmath44 ( 20 ) ; ( 10 ) edge node[right]@xmath45 ( 21 ) ;    \\(11 ) edge node[left]@xmath46 ( 20 ) ; ( 11 ) edge node[right]@xmath47 ( 21 ) ;    \\(r ) edge node[left]@xmath48 ( 00 ) ; ( r ) edge node[right]@xmath49 ( 01 ) ;    ( -1,-4 ) rectangle ( 4,-2 ) ; ( q2 ) at ( -3,-3 ) @xmath50 ;    ( r2 ) at ( 9.5,2 ) ; ( 00 ) at ( 8,0 ) @xmath5 ; ( 01 ) at ( 11,0 ) @xmath6 ;    \\(10 ) at ( 8,-3 ) @xmath5 ; ( 11 ) at ( 11,-3 ) @xmath6 ;    \\(20 ) at ( 8,-6 ) @xmath5 ; ( 21 ) at ( 11,-6 ) @xmath6 ;    \\(00 ) edge node[left]@xmath51 ( 10 ) ; ( 00 ) edge node[right]@xmath52 ( 11 ) ;    \\(01 ) edge node[left]@xmath53 ( 10 ) ; ( 01 ) edge node[right]@xmath54 ( 11 ) ;    \\(10 ) edge node[left]@xmath55 ( 20 ) ; ( 10 ) edge node[right]@xmath56 ( 21 ) ;    ( r2 ) edge node[left]@xmath57 ( 00 ) ; ( r2 ) edge node[right]@xmath58 ( 01 ) ;    \\(11 ) edge node[left]@xmath59 ( 20 ) ; ( 11 ) edge node[right]@xmath60 ( 21 ) ;    note that special care must be taken for the first qubit because the parent node for the first qubit is the _ root _ node which is not another qubit node .",
    "the edges of the root node are labeled @xmath48 and @xmath49 for the edges directed towards the zero node and one node respectively .",
    "we show a separate description of the first qubit in our gates below for added clarity .",
    "to apply the @xmath0 gate to qubit @xmath14 in a qudot net :    1 .",
    "go to qubit layer @xmath14 2 .",
    "swap child edge weights of siblings in qubit layer @xmath14 : @xmath61 3 .",
    "if @xmath62 ( root node parent ) : @xmath63 4 .",
    "if @xmath64 swap parent edge weights of siblings in qubit layer @xmath14 : @xmath65     gate in a qudot net up to 118,000 qubits ]      to apply the @xmath1 gate to qubit @xmath14 in a qudot net :    1 .   go to qubit layer @xmath14 2 .   if @xmath62 ( root node parent ) : @xmath66 3 .   if @xmath64 interfere parent edges in qubit layer @xmath14 : @xmath67 4 .",
    "copy nonzero child edges : * if @xmath68 and @xmath69 or @xmath70 and @xmath71 then set @xmath72 * if @xmath73 and @xmath74 or @xmath75 and @xmath76 then set @xmath77     gate in a qudot net up to 118,000 qubits ]      @xmath2 gates are the family of phase gates .",
    "for each @xmath78 we have a distinct gate @xmath2 .",
    "the following method applies to the family of phase gates :    @xmath79    where @xmath80 is the _ phase _ defined as @xmath81    to apply the @xmath2 gate to qubit number @xmath14 in a qudot net :    1 .",
    "go to qubit layer @xmath14 2 .   if @xmath62 ( root node parent ) : @xmath82 3 .",
    "if @xmath64 apply the phase to the parent edges of the 1 node : @xmath83     gate in a qudot net up to 118,000 qubits ]      we tested the accuracy of the single qubit gates @xmath0 , @xmath1 and @xmath2 by directly comparing 10 qubit states to a matrix mechanics emulation .",
    "we use the open source python library _ qudotpy _ for the matrix mechanics emulation .",
    "let @xmath84 be the density matrix of the qudot net quantum state and @xmath85 be the density matrix of the exact state obtained via matrix mechanics emulation .",
    "we use the fidelity measure to compare the output : @xmath86    our testing process starts in the ground state and applies a gate to : entire state , all even qubits , subsets of even qubits , odd qubits , subset of odd qubits ; finally , repeat with a state in a complete superposition . for each test",
    "we run the operation through both qudot nets and a classical emulation and compare the results to obtain the fidelity .",
    "we use the worst fidelity measurement as our fidelity for a gate .",
    "our fidelity results are :    1 .",
    "@xmath0 gate : 0.99999999999999986 2 .",
    "@xmath1 gate : 0.99999999999999730 3 .",
    "@xmath2 gates : 09999998801650631      qudot nets allow for the efficient implementation of the single qubit measurement gate @xmath3 .",
    "the single qubit measurement gate @xmath3 assigns a definite value to the qubit @xmath14 of @xmath5 or @xmath6 .",
    "to apply the single qubit measurement gate @xmath3 to the qubit q :    1 .",
    "go to qubit layer @xmath14 2 .   if the @xmath5 node is the only node with parent edges that have nonzero weights then @xmath87 3 .   if the @xmath6 node is the only node with parent edges that have nonzero weights then @xmath88 4 .",
    "if both the @xmath5 and @xmath6 nodes have parent edges with nonzero weights then calculate the probability of the 0 node , defined as @xmath89 , then generate a random number between 0 and 1 defined as @xmath90 . if @xmath91 then @xmath87 , the @xmath5 node is activated and the @xmath6 node is deactivated . if @xmath92 then @xmath88 , the @xmath6 node is activated and the @xmath5 node is deactivated .",
    "1 .   to calculate @xmath89 :",
    "the 0 node has at most two nonzero parent edges .",
    "let @xmath93 , @xmath94 be the edge weights of those two parents .",
    "let @xmath95 be the number of edge weights that are nonzero . then @xmath96 2 .   to deactivate a node :",
    "set the weight of all parent edges to @xmath5 3 .   to activate a node",
    ": if the node has @xmath97 nonzero parent edges then multiply the parent edges by @xmath98 otherwise leave edge weights the same",
    "qudot nets are able to efficiently implement quantum circuits composed of single qubit gates .",
    "we always begin in the ground state @xmath12 and apply quantum gates one at a time to the qudot net as they appear in our quantum circuits .",
    "then we traverse the qudot net using the traversal algorithm and that traversal is our state measurement .",
    "we illustrate the procedure with a simple example .",
    "consider the quantum circuit in figure 8 :    we initialize our qudot net in the ground state @xmath11 shown in figure 9 .",
    "note that edges having a weight of @xmath5 have been omitted from the drawing of the qudot net to make the graph easier to follow for the reader .",
    "\\(r ) at ( 1.5,2 ) ;    \\(00 ) at ( 0,0 ) @xmath5 ; ( 01 ) at ( 3,0 ) @xmath6 ;    \\(10 ) at ( 0,-3 ) @xmath5 ; ( 11 ) at ( 3,-3 ) @xmath6 ;    \\(20 ) at ( 0,-6 ) @xmath5 ; ( 21 ) at ( 3,-6 ) @xmath6 ;    \\(r ) edge node[left]@xmath6 ( 00 ) ;    \\(00 ) edge node[left]@xmath6 ( 10 ) ;    \\(10 ) edge node[left]@xmath6 ( 20 ) ;    apply @xmath1 to qubit 1 :    \\(r ) at ( 1.5,2 ) ;    \\(00 ) at ( 0,0 ) @xmath5 ; ( 01 ) at ( 3,0 ) @xmath6 ;    \\(10 ) at ( 0,-3 ) @xmath5 ; ( 11 ) at ( 3,-3 ) @xmath6 ;    \\(20 ) at ( 0,-6 ) @xmath5 ; ( 21 ) at ( 3,-6 ) @xmath6 ;    \\(r ) edge node[left]@xmath17 ( 00 ) ; ( r ) edge node[right]@xmath17 ( 01 ) ;    \\(00 ) edge node[left]@xmath6 ( 10 ) ; ( 01 ) edge node[left]@xmath6 ( 10 ) ;    \\(10 ) edge node[left]@xmath6 ( 20 ) ;    apply @xmath0 to qubit 3 :    \\(r ) at ( 1.5,2 ) ;    \\(00 ) at ( 0,0 ) @xmath5 ; ( 01 ) at ( 3,0 ) @xmath6 ;    \\(10 ) at ( 0,-3 ) @xmath5 ; ( 11 ) at ( 3,-3 ) @xmath6 ;    \\(20 ) at ( 0,-6 ) @xmath5 ; ( 21 ) at ( 3,-6 ) @xmath6 ;    \\(r ) edge node[left]@xmath17 ( 00 ) ; ( r ) edge node[right]@xmath17 ( 01 ) ;    \\(00 ) edge node[left]@xmath6 ( 10 ) ; ( 01 ) edge node[left]@xmath6 ( 10 ) ;    \\(10 ) edge node[right]@xmath6 ( 21 ) ;    apply @xmath1 to qubit 2 :    \\(r ) at ( 1.5,2 ) ;    \\(00 ) at ( 0,0 ) @xmath5 ; ( 01 ) at ( 3,0 ) @xmath6 ;    \\(10 ) at ( 0,-3 ) @xmath5 ; ( 11 ) at ( 3,-3 ) @xmath6 ;    \\(20 ) at ( 0,-6 ) @xmath5 ; ( 21 ) at ( 3,-6 ) @xmath6 ;    \\(r ) edge node[left]@xmath17 ( 00 ) ; ( r ) edge node[right]@xmath17 ( 01 ) ;    \\(00 ) edge node[left]@xmath17 ( 10 ) ; ( 00 ) edge node[right]@xmath17 ( 11 ) ;    \\(01 ) edge node[left]@xmath17 ( 10 ) ; ( 01 ) edge node[right ] @xmath17 ( 11 ) ;    \\(10 ) edge node[right]@xmath6 ( 21 ) ; ( 11 ) edge node[right ] @xmath6 ( 21 ) ;    if we now run our qudot net traversal algorithm we will perform a measurement thus concluding the implementation of the quantum circuit in figure 8 . if we perform the qudot net traversal algorithm many times we will obtain different traversal corresponding to the different possible measurement of the state @xmath11 .",
    "the probability distribution we obtain from performing many traversals of the qudot net in figure 12 matches the probability distribution of @xmath11 , for example , we will obtain the traversal _ 011 _ with a probability of @xmath99 .",
    "qudot nets can be used to efficiently implement semi - quantum circuits on classical hardware .",
    "a semi - quantum circuit is defined by how a control-@xmath100 operation ( where @xmath100 is a quantum gate ) is handled . if your method measures the control qubit and uses the result of the measurement to decide whether the @xmath100 gate should be applied to the target qubit ; then it is called a semi - quantum gate and is an application of the _ principle of deffered measurement _ depicted in figure 13 .",
    "after a measurement is performed on the control qubit then it collapses to a definite value and further interference can not occur .",
    "the control qubit becomes a classical bit after measurement , therefore , the only operations allowed after a semi - quantum control gate on the control qubit are other measurements or controls .",
    "circuits that are composed entirely of single qubit gates , semi - quantum control gates and treat the control qubit classically after a control are called _ terminal _ or _ semi - quantum _ circuits .",
    "one such circuit is the quantum fourier transform ( qft ) which we implement using qudot nets .",
    "semi - quantum control gates are implemented with qudot nets by measuring the control qubit using the @xmath3 gate and applying the @xmath100 single qubit gate on the target qubit if the measurement result is @xmath6 .",
    "\\(r ) at ( 1.5,2 ) ; ( rootlabel ) at ( 1.5 , 3 ) @xmath16 ;    \\(00 ) at ( 0,0 ) @xmath5 ; ( 01 ) at ( 3,0 ) @xmath6 ;    \\(10 ) at ( 0,-3 ) @xmath5 ; ( 11 ) at ( 3,-3 ) @xmath6 ;    \\(20 ) at ( 0,-6 ) @xmath5 ; ( 21 ) at ( 3,-6 ) @xmath6 ;    \\(r ) edge node[left]@xmath48 ( 00 ) ; ( r ) edge node[right]@xmath49 ( 01 ) ;    \\(00 ) edge node[left]@xmath40 ( 10 ) ; ( 00 ) edge node[right]@xmath41 ( 11 ) ;    \\(01 ) edge node[left]@xmath42 ( 10 ) ; ( 01 ) edge node[right]@xmath43 ( 11 ) ;    \\(10 ) edge node[left]@xmath44 ( 20 ) ; ( 10 ) edge node[right]@xmath45 ( 21 ) ;    \\(11 ) edge node[left]@xmath46 ( 20 ) ; ( 11 ) edge node[right]@xmath47 ( 21 ) ;    \\(00 ) at ( 8,0 ) @xmath5 ; ( 01 ) at ( 11,0 ) @xmath6 ;    \\(10 ) at ( 8,-3 ) @xmath5 ; ( 11 ) at ( 11,-3 ) @xmath6 ;    \\(20 ) at ( 8,-6 ) @xmath5 ; ( 21 ) at ( 11,-6 ) @xmath6 ;    \\(r ) at ( 9.5,-8 ) ; ( rootlabel ) at ( 9.5 , -9 ) @xmath16 ; ( r ) edge node[left]@xmath57 ( 20 ) ; ( r ) edge node[right]@xmath58 ( 21 ) ;    \\(10 ) edge node[left]@xmath40 ( 00 ) ; ( 11 ) edge node[left]@xmath41 ( 00 ) ;    \\(10 ) edge node[right]@xmath42 ( 01 ) ; ( 11 ) edge node[right]@xmath43 ( 01 ) ;    \\(20 ) edge node[left]@xmath44 ( 10 ) ; ( 21 ) edge node[left]@xmath45 ( 10 ) ;    \\(20 ) edge node[right]@xmath46 ( 11 ) ; ( 21 ) edge node[right]@xmath47 ( 11 ) ;    the last quantum gate needed to implement the qft with qudot nets is the swap gate .",
    "qudot nets can efficiently implement the @xmath4-qubit swap gate where @xmath4 is the number of qubits in the quantum state .",
    "the @xmath4-qubit swap gate is not a collection of two qubit swap gates .",
    "the @xmath4-qubit swap gate operates on the entire state .",
    "qudot nets efficiently implement the swap gate by reversing the direction of all the edges in the qudot net and pointing the root node edges to the @xmath101 qubit layer .",
    "this is best illustrated in a diagram , see figure 14        the qft ( and its inverse ) is one of the most well studied algorithms in quantum computation .",
    "if the qft is the last element of a quantum circuit then it is known as the _ terminal _ qft or _ semi - quantum _ qft and can be classically implemented [ 4 ] .",
    "qudot nets can also efficiently implement the semi - quantum qft .",
    "we first re - write the qft circuit in its semi - quantum form .",
    "figure 15 shows the three qubit qft .",
    "we use three qubits for the illustration    we now re - write the three qubit qft in its semi - quantum form depicted in figure 16 :    similarly , we rewrite the iqft in its semi - quantum form :    the qft and iqft require @xmath102 number of gates where @xmath4 is the number of qubits . an efficient implementation of the qft and iqft would require to scale as @xmath103 .",
    "we show quadratic scaling for the qft and its inverse in our qudot net implementation for 6,000 qubits .",
    "we test the accuracy of the qudot net implementation of the qft by comparing to exact results against small four qubit test cases .",
    "we define six quantum states and show their expected probability distribution after the qft is performed .",
    "we then run the qudot net implementation of the qft on an ensemble of each state and perform a measurement . as the ensemble size increases for each state",
    "we observe that the expected probability distribution matches the observed probability distribution thus confirming the accuracy of the qudot net qft implementation shown if figure 21 .",
    "@xmath104 is obtained by applying @xmath1 to qubits 1 and 2 .",
    "@xmath105 is obtained by applying @xmath1 to qubits 2 and 4 . the same mechanism is used to generate the other states . expected probability distributions are shown in the appendix .",
    "figure 21 shows percent error of expected probability distribution vs measured probability distribution as ensemble size increases to 500,000 states .",
    "1 .   @xmath106 2 .",
    "@xmath107 3 .",
    "@xmath108 4 .",
    "@xmath109 5 .",
    ".   @xmath111",
    "so far we have described semi - quantum computation which can be efficiently implemented using qudot nets .",
    "implementing a universal quantum computer ( uqc ) requires coherent control gates .",
    "coherent control gates are control-@xmath100 gates when the control qubit is not measured .",
    "qudot nets can implement coherent control gates by using labeled , directed multi - digraphs .",
    "once multiple labels are established single qubit gates operate on edge labels separately . also , traversal must stay with the same edge labels .",
    "for example , suppose qubit 3 has edges with labels @xmath112 and @xmath113 .",
    "if we apply an @xmath1 gate to qubit 3 then we apply the @xmath1 gate to all edges with label @xmath112 and then to all edges with label @xmath113 separately .",
    "the efficiency of our implementation of coherent control-@xmath100 gates requires further study .",
    "our results so far show that in the worst case the number of edges grows as @xmath7 where @xmath4 is the number of control qubits .",
    "this may explain why quantum computation can not always provide an asymptotic increase for any algorithm .",
    "however , it remains to be seen if our multi - digraph implementation can be enhanced to remove duplicate edges and provide a speedup for the bqp class of algorithms such as shor s algorithm .",
    "if this is the case then qudot nets can show that bpp = bqp thus confirming the strong church - turing thesis .",
    "it is worth noting that even certain specialized quantum hardware scales as @xmath7 for coherent control gates as explained by martinis [ 5 ] and it is our position that coherent control gates will be the most difficult gates to scale with any custom hardware solution .    to apply a coherent control-@xmath100 gate where the control qubit is @xmath95 and",
    "the target qubit is @xmath114 :    1 .",
    "go to qubit @xmath95 2 .",
    "for every incoming edge with label @xmath115 re - label as @xmath116 3 .",
    "recursively add an edge with label @xmath116 to every ancestor node with an edge label @xmath115 4 .",
    "for every outgoing edge with label @xmath115 re - label as @xmath116 5 .",
    "recursively add an edge with label @xmath116 to every descendant node with an edge label @xmath115 6 .",
    "go to qubit @xmath114 7 .",
    "apply the @xmath100 gate to the edges of qubit @xmath114 that have label @xmath116    for illustration purposes we will use colors as our labels but any unique identifier will do .",
    "colors as labels should not be confused with edge coloring of a graph which will be used later in a different context .",
    "qudot nets alway start with a default label @xmath117 .",
    "we show an example of a coherent control gate by following the circuit in figure 22 .",
    "\\(r ) at ( 1.5,2 ) ;    \\(00 ) at ( 0,0 ) @xmath5 ; ( 01 ) at ( 3,0 ) @xmath6 ;    \\(10 ) at ( 0,-3 ) @xmath5 ; ( 11 ) at ( 3,-3 ) @xmath6 ;    \\(r ) edge node[left]@xmath17 ( 00 ) ; ( r ) edge node[right]@xmath17 ( 01 ) ;    \\(00 ) edge node[left]@xmath6 ( 10 ) ; ( 01 ) edge node[left]@xmath6 ( 10 ) ;    \\(r ) at ( 1.5,2 ) ;    \\(00 ) at ( 0,0 ) @xmath5 ; ( 01 ) at ( 3,0 ) @xmath6 ;    \\(10 ) at ( 0,-3 ) @xmath5 ; ( 11 ) at ( 3,-3 ) @xmath6 ;    \\(r ) edge node[left]@xmath17 ( 00 ) ; ( r ) edge node[right]@xmath17 ( 01 ) ;    \\(00 ) edge node[left]@xmath6 ( 10 ) ; ( 01 ) edge node[left]@xmath6 ( 10 ) ;    \\(r ) at ( 1.5,2 ) ;    \\(00 ) at ( 0,0 ) @xmath5 ; ( 01 ) at ( 3,0 ) @xmath6 ;    \\(10 ) at ( 0,-3 ) @xmath5 ; ( 11 ) at ( 3,-3 ) @xmath6 ;    \\(r ) edge node[left]@xmath17 ( 00 ) ; ( r ) edge node[right]@xmath17 ( 01 ) ;    \\(00 ) edge node[left]@xmath6 ( 10 ) ; ( 01 ) edge node[right]@xmath6 ( 11 ) ;    \\(r ) at ( 1.5,2 ) ;    \\(00 ) at ( 0,0 ) @xmath5 ; ( 01 ) at ( 3,0 ) @xmath6 ;    \\(10 ) at ( 0,-3 ) @xmath5 ; ( 11 ) at ( 3,-3 ) @xmath6 ;    \\(r ) edge node[left]@xmath118 ( 00 ) ; ( r ) edge node[left]@xmath118 ( 00 ) ;    \\(r ) edge node[right]@xmath119 ( 01 ) ; ( r ) edge node[right]@xmath118 ( 01 ) ;    \\(00 ) edge node[left]@xmath6 ( 10 ) ; ( 01 ) edge node[right]@xmath6 ( 11 ) ;    \\(00 ) edge node[right]@xmath6 ( 11 ) ; ( 01 ) edge node[left]@xmath6 ( 10 ) ;    qudot net traversals must now stay on paths where edges have the same label .",
    "we have four possible traversals :    1 .",
    "@xmath120 2 .",
    "@xmath121 3 .",
    "@xmath122 4 .",
    "@xmath123    qudot nets make it clear that control gates split the computational path .",
    "an interesting point of further study would be to see if quantum algorithms that achieve exponential speed up over their classical counterparts have a way to recombine certain computational paths which qudot nets represent as different labels on a multigraph .",
    "entanglement has been shown to be an important resource for quantum algorithms that achieve an exponential speedup over their classical counterparts [ 6 ] . therefore ,",
    "detecting and analyzing the extent of entanglement in a quantum system is an important task in quantum computation .",
    "we present new methods to analyze entanglement using qudot nets .",
    "specifically , we show that _ persistency of entanglement _ can be quantified by an edge coloring of the computational branches of a qudot net and bipartite qudot nets correspond to bipartite entangled states .    to detect",
    "if the quantum state is bipartite entangled we look at the corresponding qudot net .",
    "if the active edges of the qudot net make a bipartite graph , then the quantum state is bipartite entangled . since bipartite matching can be done in polynomial time we have an efficient method of detecting bipartite entanglement .",
    "an interesting area of further research would be to map multipartite entanglement to multipartite graph matching .",
    "multipartite graph matching is a well know np - complete problem and thus would shed light as to why multipartite entanglement is difficult to analyze .",
    "another way to analyze entanglement is through the _ persistency of entanglement _ @xmath124 .",
    "we use the definition of rieffel and polak [ 7 ] where the @xmath124 is defined as the minimum number of qubits that need to be measured to guarantee that the resulting state is unentangled .",
    "let @xmath95 be the chromatic index of the qudot net multigraph via edge coloring .",
    "let @xmath113 be the number of labels needed for the multigraph ( computational branches ) then @xmath125",
    "we saw how the circuit model of quantum computation can be mapped to a special type of multi - digraph inspired by bayesian networks called a qudot net . with a qudot net ,",
    "possible measurements are possible traversals where the probability amplitude is the product of each edge weight in the traversal .",
    "single qubit gates can be implemented by providing rules for the manipulation of edge weights in a qubit layer .",
    "two qubit control gates can be implemented by splitting the computational path making the qudot net a multi - digraph .",
    "we saw that semi - quantum computation can be efficiently implemented using qudot nets and we provided results for the efficient implementation of the qft and inverse qft .    what makes the quantum model of computation exponentially more powerful than the classical model of computation ?",
    "this is still an open area of research .",
    "qudot nets show us that it is control gates that provide us with more power .",
    "a control gate splits the computational path and nature somehow keeps track of all the different edges .",
    "the most interesting question regarding qudot nets is  can we control the number of computational paths so they do not grow exponentially ? \" .",
    "if we can then quantum computation can be efficiently implemented using classical hardware .",
    "if we can not , can we at least approximate the answer using well know approximation techniques common in other np - complete graph theoretic problems such as traveling salesmen and the knapsack problems ?",
    "even if there are errors in the approximations we still may be able to beat quantum hardware since quantum hardware also has errors but further work is needed to explore this possibility .",
    "einstein said many times `` god does not play dice with the world '' [ 8 ] . how would someone go about proving this ?",
    "einstein was making a precise computational statement @xmath126 , however , computation complexity theory did not exist at the time .",
    "if we are able to show that @xmath126 then we confirm einstein s statement . qudot nets may provide a way to show that @xmath127 , that is , quantum computational randomness can be reduced to coin flipping .",
    "if we can control the exponential increase of the computational paths of qudot nets in bounded - error probabilistic polynomial time then we are a major step closer to proving einstein s statement .",
    "since there is much evidence suggesting that @xmath128 ( which means randomized algorithms can be de - randomized ) showing @xmath127 would take us very close to @xmath126 which would have implications to quantum foundations .",
    "general relativity ( gr ) and quantum mechanics ( qm ) are the pillars of modern physics .",
    "however , we have not been able to unite them .",
    "suppose we try to unite them , should we quantize gr or relativize qm ? the physics community has been trying to do the later for the most part .",
    "computationally , this takes the view that @xmath129 .",
    "however , if we show that @xmath126 this implies that quantum mechanics can be de - randomized .",
    "therefore , there is a deterministic theory that gives equivalent results as qm .",
    "perhaps this theory is easier to unite with gr .",
    "physics has historically progressed forward with unifications such as electricity and magnetism .",
    "perhaps the next unification in physics is the unification of the computational complexity classes @xmath130 and @xmath131 .",
    "table of expected probability distributions after applying qft to test states used in figure 21 .        1",
    ".   pw . shore , siam rev .",
    ", * 41(2 ) * , 303 - 332 ( 1999 ) ; 2 .",
    "p. rebentrost , m. mohseni , and s. lloyd , phys .",
    "lett . , * 113 * , 130503 ( 2014 ) 3 .",
    "feynman , international journal of theoretical physics , * 21(6 ) * , 467 - 488 ( 1982 ) 4 .",
    "griffiths and c. niu , phys .",
    "lett . * 76 * , 3228 ( 1996 ) 5 .",
    "martinis , http://web.physics.ucsb.edu/  martinisgroup / papers / martinis2012.pdf ( 2012 ) 6 .",
    "r. jozsa , n linden , proceedings of the royal society a , * 459(2036 ) * ( 2003 ) 7 .",
    "e. rieffel and w. polak , mit press , 226 ( 2011 ) 8 .",
    "w. hermanns , branden press , 58 ( 1983 )"
  ],
  "abstract_text": [
    "<S> we present a new implementation of quantum computation that treats quantum computers as a special type of bayesian network called a qudot net . </S>",
    "<S> qudot nets allow for the efficient representation of some qubit systems . </S>",
    "<S> single qubit quantum gates can be implemented as edge transformations on qudot nets . </S>",
    "<S> the @xmath0 , @xmath1 , @xmath2 , @xmath3 and swap gates are discussed in detail and results show linear scaling as the number of qubits are increased . </S>",
    "<S> we show that measurement and semi - quantum control gates can be efficiently implemented using qudot nets and present results from a qudot net implementation of the terminal quantum fourier transform . </S>",
    "<S> we show how qudot nets can implement coherent control gates using multi - digraphs by labelling parallel edges . </S>",
    "<S> lastly , we discuss implications to quantum foundations if a classical implementation of quantum computation is realized . </S>"
  ]
}
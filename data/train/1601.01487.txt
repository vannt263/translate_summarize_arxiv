{
  "article_text": [
    "gdel s incompleteness theorem is undoubtedly one of the most important theorems in logic .",
    "it speaks about absolute provability , i.e. , about proofs without any restriction on their size .",
    "the question whether there is a `` finite '' or `` feasible '' version of the incompleteness theorem , where the complexity of proofs is bounded , has certainly intrigued many people , but very little has been published about it . with the advent of computers and theories developed for them , in particular",
    "complexity theory , the question about a finite version of the incompleteness theorem became even more interesting .",
    "the concept of polynomial time computations turned out to be the most important concept in complexity theory .",
    "the distinction between functions decidable in polynomial time and those computable only in exponential time plays a similar role as the distinction between computable and non - computable in the computability theory .",
    "the successful use of polynomial bounds suggested that one should also study which theorems have polynomial size proofs . a natural version of a finite incompleteness theorem was formulated by harvey friedman in  1979 .",
    "let @xmath1 be a natural formalization of the statement _ `` there is no derivation of contradiction of length @xmath2 from the axioms of @xmath3''_. friedman proved a lower bound of the form @xmath4 for some @xmath5 and asked whether such sentences have proofs in @xmath3 of polynomial length  @xcite .",
    "it turned out that the answer to his question is yes  @xcite , but this is not important , because for natural variations of this question it is still possible , and seems very plausible , that there are no polynomial length proofs .",
    "namely , this should be true if we ask about the lengths of proofs of @xmath1 in a theory @xmath6 sufficiently _ weaker _ than @xmath3 .",
    "however , proving such a claim must be extremely difficult , because it implies @xmath7 ( and even more than that ) .",
    "we have to face the fact that the present - day mathematics lacks methods to solve such problems .",
    "nevertheless there there is something we can do .",
    "the fundamental question is _ what is the connection between logical strength of theories and computational complexity ? _ which is basically what the field of _ proof complexity _ is studying .",
    "for example , buss s witnessing theorem states that one can construct polynomial time algorithms from proofs of certain sentences in the theory @xmath8",
    "such theorems have been proven for a number of other theories and complexity classes .",
    "another connection is the feasible interpolation theorem of krajek  @xcite . according to this theorem",
    ", one can construct circuits from proofs of certain tautologies in various proof systems , in particular , in resolution .",
    "( such theorems have been proven also for other proof systems . ) a high level form of these results is that if something is provable in a weak formal system , i.e. , the logical strength of the system is bounded , we can give bounds on some computational problems associated with the systems .",
    "if we state it contrapositively it suggest that increasing strength of logical formal systems is correlated with increasing complexity of the associated computational tasks .",
    "thus a more specific question is : _ find general principles of which these results are special instances .",
    "_    in constructive mathematics there is a very close connection between proofs and computations .",
    "there are also results that show interesting connections with computational complexity .",
    "for example , buss and mints  @xcite proved that given an intuitionistic proof of a disjunction @xmath9 in propositional logic ( say , in the sequent calculus ) , then one can find _ in polynomial time _ a proof of either @xmath10 or @xmath11 .",
    "however , in this paper we will only consider classical logic .",
    "the reason is that in what we study here , the underlying logic is not important .",
    "what is essential are proof systems and axioms used . considering intuitionistic logic would only be a restriction on the systems we could use , while we are interested in formal systems that are as general as possible .",
    "the general principles that we study are connected with notoriously open and probably very difficult problems in computational complexity theory , so we can not prove or disprove them with the currently available means .",
    "they can only be stated as hypotheses or conjectures without any formal supporting evidence .",
    "alternatively , we can view them as axioms .",
    "there are , essentially , two reasons for stating some sentences as conjectures .",
    "first , we believe that some basic theorems of proof theory should also hold true with suitable bounds on the lengths of proofs .",
    "the prime example is the second incompleteness theorem discussed above .",
    "second , some results in proof complexity and bounded arithmetic seem to follow a general pattern .",
    "for example , as we noted above , polynomial time computations are associated with the theory @xmath8 by a witnessing theorem . if we take @xmath12 , which we believe is a stronger theory , then the corresponding function class is @xmath13 , which we believe is a larger class than * p*. the form of this result suggests that @xmath12 requires more complex functions .",
    "( we are not able to prove it formally , because a formal proof would give us @xmath14 , which is equivalent to @xmath15 . )",
    "although we have to treat the most interesting statements only as hypotheses , there are some interesting problems that we can study and solve with the currently available means .",
    "these are problems about relationships among various conjectures . in particular",
    ", we would like to know whether there is one general principle that would cover all instances , or there is an infinite hierarchy . if there is a hierarchy , is it linear , or does it branch ?",
    "if it branches , is there a natural classification of conjectures ?",
    "we will address some questions of this kind in this paper .",
    "furthermore , one can study relativizations of these conjectures .",
    "several results about relativizations have been proven , but much more is needed .",
    "we are primarily interested in these question , because we want to understand the essence of fundamental problems .",
    "however , there is also a practical aspect of this research .",
    "the general conjectures suggest what specific problems in proof complexity we should study",
    ". then we can `` test '' the conjectures on weak formal systems for which we do have means to prove results connecting them with computational complexity .",
    "in fact the main conjectures  con and  tfnp represent what researchers in proof complexity believe is likely to be true .",
    "all conjectures that we consider in this paper state something about unprovability , although they often have a natural equivalent version stated in purely complexity - theoretical terms .",
    "the `` finite domain '' in the title refers to the fact that the lengths of computations and lengths of proofs of instances of the problems that we consider are at most exponential , hence there is a _",
    "finite _ bound on them .",
    "perhaps , a more precise term would be `` exponential domain '' . in previous presentations of this topic ,",
    "in particular in  @xcite , we used the term _",
    "`` feasible incompleteness '' , _ which should be understood as _ `` being incomplete with respect to feasible proofs '' .",
    "_ in  @xcite we also stated _ the feasible incompleteness thesis _",
    ", which is an informal statement saying that unprovability of a sentence in a weak formal system may be caused by high computational complexity of a computational problem naturally associated with the sentence",
    ".    here is a brief outline of this paper .",
    "after two introductory sections , in section  [ sec3 ] , we recall the conjecture about finite consistencies and introduce a new conjecture about finite reflection principles . in section  [ sec4 ]",
    "we present another important conjecture about total polynomial search problems .",
    "we discuss equivalent and stronger statements based on propositional proof systems and disjoint * np * and * conp * pairs of sets in section  [ sec5 ] .",
    "we introduce a classification of conjectures in section  [ sec6 ] and show that uniform conjectures can be stated as statements about unprovability , which suggests a way towards general conjectures .",
    "section  [ sec8 ] is about the role of reductions in the statements of conjectures .",
    "we conclude the paper with some open problems .",
    "we will need the concept of a sufficiently strong arithmetical theory , where theory means a set of axioms in first order logic .",
    "this concept appears in the classical incompleteness theorems .",
    "restricting to arithmetical theories is not essential .",
    "fragments of arithmetic , as those theories are called , are used , because one can easily refer to standard formalizations of basic syntactical concepts .",
    "being able to formalize syntactical concepts , such as first order formulas and proofs , is the essential property of the theories that we need .",
    "the concept of a sufficiently strong arithmetical theory is used in conjectures that we study in this paper .",
    "the form of these statements guarantees that they do not depend on a particular formalization of the concept of a sufficiently strong theory ; nevertheless , it is good to be more precise .",
    "we denote by @xmath16 the class of all _ consistent _ theories that extend buss s theory @xmath8 by a set of axioms that is decidable in polynomial time .    for a lack of a good name , we will only use the symbol @xmath16 to denote this class of theories .",
    "theory @xmath8 is one of the fragments of bounded arithmetic @xmath17 defined by buss  @xcite ( see also @xcite ) .",
    "formally , it is not a fragment of @xmath18 ( peano arithmetic ) , because it is formalized in a slightly richer language , but it is interpretable in it . it is a natural fragment of arithmetic in which polynomial time computations can be defined .",
    "since the choice of the base theory is not essential , the reader not familiar with @xmath8 can safely replace it , e.g. , by the much stronger theory @xmath18 . the theory @xmath8 is a natural choice for the base theory , also because in this theory one can easily define some classes of formulas that we will need .",
    "we assume that the theories in @xmath16 are formalized in the language of @xmath17 .",
    "we could allow extensions by symbols representing other polynomial time computable functions and relations , but it would not give any advantage .",
    "we will assume that proofs are formalized in a standard hilbert - style proof system for first order logic .",
    "we will view the proofs as strings of formulas such that each formula is either an axiom ( logical or an axiom of the theory in question ) or is derived from previous formulas by an application of a deduction rule .",
    "the particular choice of the system makes little difference , but note that we do need to consider proof systems with the rules of modus ponens , or cut , and the proofs must be linear , not trees . a proof in a theory @xmath3 will be simply called a _ @xmath3-proof_.    an essential property of our theories and the proof system",
    "is that given a sentence @xmath10 and a string of symbols @xmath19 , it is possible to decide in polynomial time if @xmath19 is a proof of @xmath10 .",
    "this is also the reason why we only use theories with sets of axioms in * p*.    further we need to define * np * and * p * predicates and relations in theories from the class  @xmath16 . having @xmath8 as the base theory , the natural choice of formulas for *",
    "np * are @xmath20 formulas defined by buss .",
    "the hierarchy of formulas @xmath21 is similar the the arithmetical hierarchy @xmath22 the difference being that we count the alternation of _ bounded quantifiers_. in @xmath20 ( and similarly in higher classes ) bounded existential quantifiers may alternate with sharply bounded universal quantifiers where sharply bounded means that the bound is polylogarithmic .",
    "this complication can be avoided by slightly extending @xmath8 with more function symbols and axioms .",
    "if we do this , then we can move all sharply bounded universal quantifiers after the bounded existential ones .",
    "the @xmath23 formulas where all sharply bounded quantifiers are after all bounded quantifiers are called _ strict-_@xmath23 , or @xmath24 formulas .",
    "the language of @xmath17 has a function symbol for the binary function @xmath25 which from two numbers of length @xmath26 and @xmath27 produces a number of length @xmath28 .",
    "thus the terms in bounded quantifiers give polynomial upper bounds on the _ binary lengths _ of the quantified numbers , rather than polynomial bound on the numbers , as the terms of @xmath18 do . in order to simplify formulas we will sometimes use quantifiers with a superscript @xmath29 to indicate that the lengths of the quantified variables are polynomially bounded in the formula that follows .",
    "for example , @xmath30 means that @xmath31 is equivalent to a formula @xmath32 for some formula @xmath33 and some polynomial @xmath34 .    for * p * , there is no simple definition of a class of formulas .",
    "formulas from the class @xmath35 have only sharply bounded quantifiers .",
    "these bounds imply that they define sets and relations computable in polynomial time , but we can not define all sets in * p * by such formulas . the standard approach is to extend the language by function symbols for every polynomial time algorithm as it is in cook s theory @xmath36  @xcite .",
    "this requires also adding infinitely many axioms specifying the intended interpretation of each function symbols .",
    "the relation of @xmath36 to @xmath17 is similar to the relation of primitive recursive arithmetic to peano arithmetic . in this paper",
    "we will use a different approach , one that does not need an infinite number of function symbols and axioms . a formula",
    "@xmath37 is @xmath38 provably in a theory @xmath3 if @xmath39 and , for some @xmath40 , there exists a @xmath3-proof of the sentence @xmath41 _ in this paper @xmath38 will always mean provably in @xmath8 . _ by buss s witnessing theorem , the provability of the equivalence in @xmath8 ensures that @xmath37 defines a set in  * p*. we should stress that it is essential that the proof is in @xmath8 .",
    "the equivalence @xmath42 in general only ensures that @xmath37 defines a set in @xmath43 which is believed to be larger than * p*. ( again , this particular representation of predicates in * p * is not essential . )",
    "we will also need to represent binary relations computable in polynomial time .",
    "the definition of the corresponding @xmath38 formulas is the same , except that one uses two variables instead of one .",
    "polynomial time computable functions will be formalized by @xmath38 formulas defining the graphs of these functions .",
    "we will use _ binary numerals_. a binary numeral is a suitably chosen closed term @xmath44 whose value is @xmath2 and whose length is @xmath45 .",
    "our computation model is the standard turing machine , where the inputs are words in the alphabet @xmath46 .",
    "when computing with numbers , we assume the binary representation . we will use numbers instead of binary strings when we formalize computations . for @xmath47 ,",
    "we denote by @xmath48 the length of the binary representation of @xmath2 .",
    "there is a symbol for this function in the language of @xmath8 .",
    "let @xmath49 . we will denote by @xmath50 a formula expressing ( in a natural way ) the fact that there is no @xmath3-proof of contradiction of length @xmath51 . in particular , we will need @xmath1 , for @xmath47 .",
    "the question mentioned in the introduction is :    what is the length of the shortest @xmath3-proof of @xmath1 ?",
    "using the analogy with gdel s incompleteness theorem , it is natural to conjecture that the proof must be long , specifically , not polynomial .",
    "friedman also proved a lower bound @xmath4 for some @xmath5 .",
    "is @xmath45 . ]",
    "this lower bound was improved to @xmath52 for a proof system with the rule @xmath53 where @xmath54 is a new constant  @xcite .",
    "this rule enables one to refer to an element satisfying @xmath10 without having to mention @xmath10 .",
    "the same asymptotic bound is probably true for some other systems where this rule can be simulated . in particular , in natural deduction systems , we can start with an assumption @xmath55 and argue about @xmath56 without having to repeat the assumption in each proof line .",
    "the idea of the proofs of these lower bounds is to adapt the original proof of gdel for the finite setting .",
    "thus instead of the original diagonal formula , one uses a formula @xmath57 with intended meaning _",
    "`` i do not have a @xmath3-proof of length @xmath58''_. one can easily prove that @xmath59 is true and any proof of it must be longer than @xmath2 .",
    "then one proves that @xmath59 can be derived from @xmath1 by a short proof .",
    "this is essentially the same as in the proof of gdel s theorem , except that one has to prove good _ upper bounds _ on the lengths of proofs of certain true sentences .",
    "the shorter proofs one is able to find , the larger the lower bound is .    in @xcite",
    "a linear upper bound @xmath60 was proved for sequential theories .",
    "this bound is based on partial truth definitions . in the standard proofs of the consistency of a theory @xmath3 ( without any bound on the lengths of proofs ) ,",
    "one uses a truth definition for all formulas . since in proofs",
    "of bounded length only formulas of bounded complexity can occur , it suffices to use a partial truth definition that define truth only for sentences of limited complexity .",
    "the fact that partial truth definition exist is well - known .",
    "however , to obtain such bounds one has to carefully estimate the size of the formulas and the lengths of proofs of particular statements .    in spite of the linear upper bound",
    ", we still believe that the incompleteness phenomenon of gdel s theorem should manifest itself also in the finite domain .",
    "we conjecture that if @xmath3 is stronger than a theory @xmath6 , then @xmath6-proofs of @xmath1 can not be polynomially bounded .",
    "since it is not clear how much stronger @xmath3 must be , we proposed the following conjecture in  @xcite :    con@xmath61[conn ] for every @xmath62 , there exists @xmath49 such that @xmath6-proofs of @xmath1 can not be polynomially bounded .",
    "stands for `` nonuniform '' whose meaning will be explained in section  [ sec6 ] . ]    of course , we would also like to know how much stronger @xmath3 must be than @xmath6 so that there are no polynomial size @xmath6-proofs of @xmath63 .",
    "it has been conjectured that it suffices that @xmath3 proves the consistency of @xmath6 , i.e. , the following seems to be true :    con@xmath64 for every @xmath65 , if @xmath3 proves @xmath66 , then @xmath6-proofs of @xmath1 can not be polynomially bounded .",
    "it is well - known  @xcite that if @xmath3 is stronger ( proves more sentences ) than @xmath6 , then some sentences provable in both theories have much shorter proofs in @xmath3",
    ". this may suggest that it would suffice to make @xmath3 just a little stronger than @xmath6 in order to ensure that @xmath6-proofs of @xmath1 do not have polynomial proofs . however , recently pavel hrube proved , using a rosser - type selfreferential sentence , that in general it is not so [ personal communication ] .",
    "his result is even stronger than the mere refutation of that statement .    for every @xmath65",
    ", there exists a true @xmath67 sentence @xmath68 such that @xmath68 is not provable in @xmath3 , yet the lengths of @xmath6-proofs of @xmath69 can be bounded by a polynomial .    in particular , if @xmath70 , we get @xmath71 unprovable in @xmath6 with polynomially bounded @xmath6-proofs of @xmath69 .",
    "recall that the sentences expressing consistency of a theory @xmath3 are special cases of _ reflection principles _",
    "( see  @xcite ) .",
    "there are many versions of reflection principles . here",
    "we will focus on the uniform @xmath72-reflection principles .",
    "the _ uniform @xmath72-reflection principle for @xmath3 _ is the following schema for all @xmath72 sentences @xmath37 with one free variable @xmath51 @xmath73 where @xmath74 denotes the function that assigns the gdel number to formula @xmath10 and @xmath75 says that @xmath76 is a proof of @xmath10 in @xmath3 .",
    "the principle is true if @xmath3 is @xmath72-sound , i.e. , @xmath3 does not prove a false @xmath72 sentence .",
    "the schema can be axiomatized by a single sentence using a partial truth definition for @xmath72 formulas . in order to get a meaningful finite version of @xmath77 we have to make a couple of modifications .",
    "we start by defining a finite @xmath78 reflection principle for one formula .",
    "let @xmath3 be a theory , let @xmath79 be a @xmath20 formula and let @xmath47 .",
    "then @xmath80 will denote the sentence : @xmath81    having defined the reflection principle for one formula , we can study the schema , i.e. , the set of sentences @xmath80 for all @xmath20 formulas , but it is more interesting to have a single sentence for every @xmath2 from which all instances are derivable by short proofs . to this end",
    "we need a universal @xmath20 formula .",
    "one can construct a formula @xmath82 such that for every @xmath20 formula @xmath79 there exist a natural number @xmath83 and a polynomial @xmath84 such that |z|p(|x|)((x )  _ 1(|e , x , z ) ) is provable in @xmath8 ( see  @xcite ) .",
    "the sentences that we are going to define are essentially @xmath85 .",
    "the _ finite uniform @xmath20 principle _ is the sequence of sentences @xmath86 , @xmath47 , defined by @xmath87    [ l-3.2 ] for every @xmath20 formula @xmath79 , there exist polynomials @xmath88 and @xmath89 such that @xmath8-proofs of the sentences @xmath90 can be constructed in time @xmath91 .",
    "let @xmath92 and @xmath84 be such that ( [ e - univ ] ) is provable in @xmath8 .",
    "let @xmath47 be such that @xmath93 and let @xmath94 .",
    "the following argument can be done in @xmathsuppose @xmath95 and @xmath96 .",
    "then we also have @xmath97 and , since ( [ e - univ ] ) is provable in @xmath3 , we have @xmath98 for some @xmath99 .",
    "the proof @xmath99 is constructed from @xmath76 using the proof of ( [ e - univ ] ) in @xmath3 , which adds only a constant to the length and a small part in which this sentence is instantiated for the numerals @xmath100 and",
    "this makes the proof @xmath99 at most polynomially longer than @xmath102 .",
    "let @xmath103 be this polynomial bound .",
    "applying @xmath104 , we get @xmath105 . then using ( [ e - univ ] ) in @xmath8",
    ", we finally get @xmathnow we only need to observe that the above @xmath8 proof was explicitly constructed and the number of steps and the size of the formulas involved are of length polynomial in @xmath48 .",
    "[ l - rfn ] let @xmath65 .",
    "suppose that    @xmath107 , where @xmath108 , and    @xmath6-proofs of the sentences @xmath86 can be constructed in polynomial time",
    ". then @xmath6-proofs the sentences @xmath109 can be constructed in time @xmath110 for some polynomial  @xmath89 .    since @xmath111 is provable in @xmath3 , the sentences @xmath109 have @xmath3-proofs of length bounded by @xmath112 for some polynomial @xmath88 .",
    "this is provable in @xmath8 , so also in @xmath6 .",
    "according to the assumption about @xmath6 and by lemma  [ l-3.2 ] , one can construct in polynomial time proofs of @xmath113 in polynomial time in @xmath114 .",
    "thus we get @xmath6-proofs of @xmath109 in polynomial time .",
    "using @xmath86 , we can state a conjecture similar to our conjecture about @xmath1 .",
    "rfn@xmath115[rfnn ] for every @xmath62 , there exists @xmath49 such that the lengths of @xmath6-proofs of @xmath86 can not be polynomially bounded .    when @xmath116 is @xmath117 , then @xmath80 is equivalent to @xmath1 with a polynomial size proof in a base theory",
    ". thus there exists a polynomial @xmath84 such that @xmath118 implies @xmath1 with a polynomial size proof .",
    "consequently , conjecture  con@xmath61 implies conjecture  rfn@xmath115 .",
    "we will prove that conjecture  rfn@xmath115 implies * np@xmath119*conp**.    if * np@xmath120*conp * * , then there exists @xmath62 such that for all @xmath49 , the lengths of @xmath6-proofs of @xmath121 can be bounded by a polynomial .",
    "the basic idea is to take some base theory and add all sentences of the form @xmath86 that are true as axioms , disregarding whether or not @xmath3 is consistent .",
    "let @xmath3 be any theory that satisfies all conditions for being in @xmath16 , except that it does not have to be consistent .",
    "there is a computable function that enumerates such theories .",
    "if * np@xmath120*conp * * , then there exists a nondeterministic turing machine @xmath122 that accepts sentences @xmath86 iff they are true , and @xmath122 runs in time @xmath123 for some polynomial @xmath124 . in order to get one machine @xmath125 for all theories , we add padding to the sentences @xmath86 . specifically , we consider sentences of the form _ 1^brfn_t(|n)(0=1_p_t(n ) ) , where @xmath126 is some formula of length @xmath123 , say a conjunction of sentences @xmath117 . to define  @xmath6 , we take those sentences of the form above for which @xmath125 verifies that they are true .",
    "thus we get an * np * axiomatization . using additional padding ( encoding accepting computations of @xmath125 ) , we get a set of axioms decidable in polynomial time .",
    "this is our theory @xmath6 .",
    "clearly , every true instance of @xmath86 has a polynomial size proof from  ( [ e - rfn ] ) in the predicate calculus , so it has a polynomial size @xmath6-proof too",
    ". for sentences where @xmath3 is consistent , i.e. , @xmath127 , the instances of the reflection principle are always true , so they have polynomial size @xmath6-proofs .",
    "the reason for introducing the conjecture about @xmath128 is that it enables us to connect diverging branches of so far postulated conjectures , as we will see shortly .",
    "one can certainly study similar statements based on stronger reflection principles for classes of formulas @xmath129 .",
    "the strength of these principles decreases with increasing indexes , so they are not interesting if we are looking for stronger conjectures .",
    "however , the study of these principles may reveal further interesting connections .",
    "we finish this section with a remark concerning the question what should be called the finite gdel theorem .",
    "if conjecture  con@xmath61 were proven true , we would certainly advocate to call it the finite gdel theorem .",
    "however , one can also argue that the connection is different .",
    "note that if @xmath3 proves @xmath66 , then @xmath3-proofs of @xmath130 are very short ; they are of logarithmic length , because the length of @xmath130 is logarithmic ( recall that we are using binary numerals ) and this sentence follows from @xmath66 by substitution ( if we formalize @xmath66 as @xmath131 ) . using this fact , we can derive gdel s theorem from friedman s lower bound @xmath4 on the lengths of @xmath3-proofs of @xmath1 .",
    "so friedman s lower bound can also be viewed as the finite gdel theorem .",
    "proving gdel s theorem in this roundabout way is certainly not natural , but in some cases it may be useful . using estimates on finite consistency statements , we proved  @xcite that @xmath17 does not prove bounded consistency of apparently weaker theory @xmath8 , which ruled out an approach to the separation problem of these two theories .",
    "( bounded consistency means that we only consider proofs in which all formulas are bounded . )",
    "an important property of first - order theories studied in classical proof theory is their strength measured by the set of arithmetical sentences provable in them . among the arithmetical sentences",
    "the most important role is played by @xmath67 and @xmath132 sentences . a proper @xmath132 sentence , a sentence that is not equivalent to a @xmath67 sentence , expresses the fact that some function is total .",
    "specifically , @xmath133 , where @xmath10 is a bounded formula , can be interpreted as saying that there exists a computable function such that @xmath134 .",
    "if we can not write it equivalently using a formula @xmath135 , where in @xmath11 all quantifiers are bounded , then @xmath136 has to grow faster than all functions defined by the terms of the theory .",
    "moreover , for pairs of natural theories @xmath6 and @xmath3 with @xmath3 essentially stronger than @xmath6 , there are provably total computable functions in @xmath3 that can not be bounded by computable functions provably total in @xmath6 .",
    "one can say that _ `` @xmath3 proves the existence of larger numbers than @xmath6 '' .",
    "_ this intuition can be made more precise using cuts of nonstandard models of arithmetic in which the arithmetical theories of @xmath6 are @xmath3 , are satisfied : in general , @xmath3 requires longer cuts than @xmath6 .",
    "we are interested in the exponential domain , which means that we only consider functions @xmath136 such that the length of @xmath137 is bounded by @xmath138 for some polynomial @xmath84 , so it does not make sense to compare the growth rate of the functions .",
    "instead , we study the complexity of these functions .",
    "the class of sentences corresponding to @xmath132 are @xmath139 sentences  the sentences starting with unbounded universal quantifier followed by a @xmath140 sentence . essentially , this class consists of sentences of the form xy , |y|p(|x|).(x , y ) , where @xmath10 is a formalization of a polynomial time relation ( i.e. , @xmath141 ) and @xmath84 is some polynomial .",
    "there is a computational task naturally associated with such sentences .",
    "since this is important , we define it formally .",
    "a _ total polynomial search problem _ is given by a pair @xmath142 , where @xmath84 is a polynomial and @xmath143 is a binary relation such that    @xmath143 is decidable in polynomial time ,    @xmath144 .",
    "the computational task is , for a given @xmath51 , find @xmath56 such that @xmath145",
    ".    the class of all total polynomial search problems will be denoted by * tfnp*. here are two examples of * tfnp * problems .",
    "this example is based on the pigeon - hole principle , which says that there is no one - to - one mapping from an @xmath146-element set to an @xmath147-element set . the computational task associated with this principle",
    "is : given a mapping from an @xmath146-element set to an @xmath147-element set , find a `` collision '' , which is a pair @xmath148 such that @xmath149 .",
    "this problem is algorithmically trivial if the mapping is given as a list of pairs @xmath150 . in this case",
    "@xmath147 is less than the input size .",
    "however , if the problem is presented so that @xmath147 is exponential in the input size , no polynomial time algorithm is known .",
    "such a representation can be defined using boolean circuits , or polynomial time algorithms that compute the function @xmath136 .",
    "in fact , researchers in cryptography believe that the problem is hard even if the mapping is from @xmath151 $ ] to @xmath152 $ ] for @xmath125 much smaller than @xmath147 . these _ hash functions _ are used in various protocols .",
    "a * tfnp * problem based on the pigeon - hole principle can formally be defined as follows .",
    "take a polynomial time computable function @xmath153 ; think of @xmath136 as a set of polynomial time computable functions of one variable @xmath51 parametrized by @xmath89 . define a binary relation computable in polynomial time by @xmath154 in this formula",
    ", @xmath76 is a witness of the fact that @xmath136 does not map @xmath155 into @xmath156 or a witness of a collision .",
    "a polynomial bound on @xmath157 is determined by a polynomial bound on the lengths pairs of elements less than @xmath89 .",
    "our second example is based on the problem of factoring integers .",
    "again the problem is nontrivial only if the number to be factored is presented in binary ( decimal etc . )",
    "notation , in which case it is exponential in the input size .",
    "since the search problem must have a solution for every number @xmath147 , we have to distinguish the cases when @xmath147 is prime and when it is composite .",
    "it is well - known that this is decidable in polynomial time .",
    "formally , we define a binary relation computable in polynomial time by @xmath158 the bound on @xmath125 is simply @xmath159 .",
    "a solution is any number if @xmath147 is prime , or a proper factor if @xmath147 is composite .    having the concept of a total polynomial search problem",
    ", we can now replace the _ growth rate _ of functions by the _",
    "computational complexity _ of finding solutions .",
    "not surprisingly , the situation is much less clear than in the classical setting .",
    "firstly , we can only hypothesize about the computational complexity of specific search problems . but",
    "this is what we expected and are ready to face .",
    "secondly , we do not have a quantitative measure of complexity that we could apply to this kind of computational problems .",
    "we can distinguish problems for which the task is solvable in polynomial time from those for which it is nt , but some evidence suggests that there are also distinct classes of problems that are not solvable in polynomial time and have different complexity . to compare the complexity of different problems",
    ", we use reductions .",
    "polynomial reductions are known for sets and used , in particular , in the theory of * np * completeness . for * tfnp",
    "* there is also a natural concept of polynomial reduction .",
    "( note that * tfnp * is not a class of sets , so we do need a different concept . )",
    "[ d-5 ] let @xmath143 and @xmath6 be total polynomial search problems .",
    "we say that @xmath143 is _ polynomially reducible _ to @xmath6 if @xmath143 can be solved in polynomial time using an oracle that gives solutions to @xmath6 .",
    "we say that @xmath143 and @xmath6 are _ polynomially equivalent _ if there are polynomial reductions in both ways .",
    "we say that @xmath143 is _ many - one polynomially reducible _ to @xmath6 , if it is polynomially reducible using one query to the oracle for  @xmath6 .    many - one polynomial readability can be equivalently defined by the condition : _ there are functions @xmath136 and @xmath160 computable in polynomial time such that for all @xmath51 and @xmath161 , _ @xmath162 were we are assuming that polynomial bounds on the lengths of numbers involved are implicit in the relations @xmath143 and @xmath6 .",
    "reductions enable us to study the structure of * tfnp * and define subclasses .",
    "we are interested in classes that are closed under polynomial reductions .",
    "one important class is * php * , the class of all * tfnp * problems reducible to an instance of the pigeon - hole problem as described in example  1 above . several other classes were defined already in the seminal paper  @xcite .",
    "they enable one to show that a problem is probably not solvable in polynomial time .",
    "specifically , if one proves that a problem is complete in one of the well - known classes , it implies that the problem is not solvable in polynomial time unless the class collapses to the bottom class consisting of all problems solvable in polynomial time .    from the point of view of computational complexity , it is natural to identify polynomially equivalent problems .",
    "however , we should bear in mind that from the point of view of a particular theory , two definition of the same problem may behave differently , as we noted above .",
    "we will consider definitions of * tfnp * by @xmath38 formulas and for a given theory we will take `` the best possible definition '' .",
    "formally , this is defined as follows .    a @xmath38 _ definition of a * tfnp * problem _ @xmath142 is a pair @xmath163 where @xmath88 is a polynomial and @xmath10 is a @xmath38 formula such that @xmath164    we say that @xmath165*tfnp * is _ provably total in a theory @xmath3 _ , if for some @xmath38 definition @xmath163 of @xmath166 , @xmath3 proves that @xmath167    the set of all @xmath165*tfnp * provably total in @xmath3 will be denoted by * tfnp*@xmath168 .",
    "the set of all @xmath169*tfnp * polynomially reducible to some @xmath170*tfnp*@xmath168 will be denoted by @xmath171 .",
    "note that according to our definition of the class @xmath38 , the formula @xmath172 must be a @xmath173 formula equivalent to a @xmath174 _ provably in @xmath8 _ ( to ensure that it defines a set in * p * it does not suffice to have a proof in @xmath3 ) .",
    "on the other hand , we do _ not _ require that a problem @xmath175 in @xmath171 is _ provably _ reducible to some @xmath170*tfnp*@xmath168 .",
    "the difference between * tfnp*@xmath168 and @xmath171 is small ; in fact , if we defined * tfnp * using * np * relations ( see * tfnp*@xmath176 below ) , these classes would be the same . to characterize low complexity theorems of fragments of arithmetic",
    "is an important problem studied in proof complexity is . in particular , we are interested in sentences that are universal closures of @xmath20 formulas .",
    "naturally , we want to identify sentences that express the same fact . the best way to do that is to focus on provably total polynomial search problems .",
    "provably total polynomial search problems of all fragments of bounded arithmetic @xmath177 , @xmath178 have been characterized using combinatorial principles  @xcite .",
    "for @xmath8 they are all * tfnp * problems that are solvable in polynomial time ( the lowest class in * tfnp * ) .",
    "the class of provably total problems of @xmath12 turned out to be surprisingly the class _ polynomial local search _",
    ", a class that had been introduced in  @xcite .    here is another important conjecture .",
    "tfnp[tfnp ] for every theory @xmath49 there exists a * tfnp * problem @xmath175 that is not polynomially reducible to any * tfnp * problem provably total in @xmath3 . stated in symbols @xmath179 .    in plain words the conjecture says that , for every theory @xmath49 , there exists a total polynomial search problem @xmath142 such that @xmath3 can not prove that the problem is total for any proper definition ( definition by a @xmath38 formula ) of @xmath142 .",
    "this means that the unprovability in @xmath3 is not caused by a particular way we define the problem , but by a semantic property of it that we imagine as high computational complexity .",
    "let us compare this conjecture with the corresponding statement about fast growing recursive functions .",
    "one can easily prove by diagonalization that for every @xmath49 , there exists a computable function @xmath136 which grows faster than any computable function provably total in @xmath3 .",
    "this means that for any computable function @xmath160 provably total in @xmath3 , there exists an @xmath180 such that @xmath181 for all @xmath182 .",
    "thus for any formalization of @xmath136 by a @xmath72 formula @xmath3 can not prove that @xmath136 is total . in the above conjecture , the condition that @xmath136 can not be bounded by provably total functions",
    "is replaced by the condition that a * tfnp * problem is not polynomially reducible to * tfnp * problems that are provably total in @xmath3 .",
    "all conjectures in this area can be stated in purely complexity theoretical terms .",
    "the above conjecture has an especially simple equivalent form , which we state now .",
    "equivalent to tfnp there is no complete problem in * tfnp * , i.e. , there exist no * tfnp * problem to which all * tfnp * problems can be reduced .",
    "the proof of the equivalence of the versions is easy .",
    "to prove that the first version implies the second , suppose the second is false .",
    "let @xmath175 be a complete problem in * tfnp*. then take a fragment of arithmetic and add the axiom that ( a formalization of ) @xmath175 is total .",
    "the converse implication follows immediately from the following fact .",
    "[ l-4.1 ] for every @xmath49 , there exists a * tfnp * problem @xmath166 such that all * tfnp * problems provably total in @xmath3 are many - one polynomially reducible to @xmath166 .    the proof is based on a standard diagonal technique .",
    "we include a proof here , because it demonstrates a method that can be applied in other similar situations ( in particular , we will use it in proposition  [ pr-6.2 ] ) .",
    "the basic idea is to connect all provably total problems into one .",
    "we can recognize a definition of a provably total problem by finding a proof of the totality for this definition .",
    "a minor complication is that different provably total problems may require different polynomials as bounds on the witnesses and bounds in the @xmath38 formulas .",
    "this can easily be solved by suitable padding .",
    "now we present the argument in more detail . recall that from the point of view of provability in a theory , it does not matter if we use @xmath38 formulas or , more generally , @xmath20 in the definition of the problems .",
    "so , for the sake of simplicity , we will diagonalize over @xmath20 formulas .",
    "given a @xmath20 formula @xmath183 , we say that @xmath184 is a syntactic nondeterministic time bound for @xmath11 if the bounds at quantifiers in the formula ensure that @xmath183 is decidable by a nondeterministic turing machine in time @xmath184 where @xmath2 is the length of @xmath51 .",
    "since @xmath11 is a @xmath20 formula , there always exists a polynomial @xmath89 that is such a bound for @xmath11 .",
    "let @xmath49 be given .",
    "we define a binary relation @xmath185 by the following condition :    if @xmath186 is a quintuple such that @xmath10 is a @xmath20 formula , @xmath88 is a polynomial , @xmath19 is @xmath187-proof of @xmath188 and @xmath189 , where @xmath89 is a syntactic nondeterministic time bound for @xmath190 , then @xmath191 .",
    "the relation @xmath143 is computable in nondeterministic polynomial time , because the condition on @xmath192 is a simple syntactical condition and if the condition is satisfied , @xmath191 can be computed in nondeterministic polynomial time bounded by @xmath193 .",
    "further , for every @xmath76 there exists some @xmath194 , @xmath195 such that @xmath185 holds true , because if the condition on @xmath192 is satisfied , then for every @xmath196 there exists @xmath194 , @xmath197 that satisfies @xmath191 , and if the condition is not satisfied , then one can take @xmath198 .    the fact that we only know that @xmath143 is computable in _ nondeterministic _ polynomial time is not a problem .",
    "clearly , there exists a ternary relation @xmath199 computable in polynomial time and a polynomial @xmath200 such that @xmath201 so we define @xmath202    let a * tfnp * problem @xmath203 be given and suppose that it is provably total in @xmath3 .",
    "we have a @xmath20 formula @xmath10 and a polynomial @xmath88 that defines the problem and a @xmath3-proof of totality @xmath19 for this representation .",
    "also we have a nondeterministic polynomial time bound @xmath89 for @xmath190 .",
    "we define a reduction of @xmath203 to @xmath166 by @xmath204 given a witness @xmath205 for @xmath206 we get a witness for @xmath207 simply by taking the first element from the pair @xmath205 .",
    "we are indebted to to emil jebek for the following proposition .",
    "there exists a complete problem in * tfnp * w.r.t .",
    "polynomial reductions if and only if there exists a complete problem in * tfnp * w.r.t .",
    "_ many - one _ polynomial reductions .",
    "the proposition is an immediate corollary of the following lemma .    for every",
    "* tfnp * problem @xmath175 , there exists a * tfnp * problem @xmath199 such that for every * tfnp * problem @xmath208 , if @xmath208 is polynomially reducible to @xmath175 , then @xmath208 is many - one polynomially reducible to @xmath199 .",
    "let @xmath175 be given by a relation @xmath143 ( w.l.o.g .",
    "we will assume that the polynomial bound is implicit in @xmath143 ) .",
    "we define a binary relation @xmath209 as follows .",
    "interpret a string @xmath76 as an encoding of a string @xmath51 and an oracle boolean circuit @xmath210 .",
    "then @xmath211 will be defined to be true if @xmath194 encodes a computation of @xmath210 on input @xmath51 with the oracle queries and answers to be pairs @xmath212 such that @xmath213 holds true .",
    "suppose @xmath208 is reducible to @xmath175 using a polynomial time query machine @xmath125 .",
    "for each input @xmath51 for the problem @xmath175 , we can construct in polynomial time an oracle boolean circuit @xmath210 that simulates computations of @xmath125 on @xmath51 . given a string @xmath194 such that @xmath211",
    ", we get an output string @xmath56 of the computation of @xmath125 that satisfies @xmath214 , because @xmath125 is a polynomial reduction of @xmath208 to @xmath143 .",
    "furthermore , jebek noted that we also get an equivalent conjecture if we use the following modification .",
    "let us denote by * tfnp*@xmath176 the class of search problems defined in the same way as * tfnp * except that the binary relations are only required to be in * np*. is in * np*. ] many - one polynomial reductions for * tfnp*@xmath176 are defined exactly in the same way as for * tfnp*.    there exists a complete problem in * tfnp * if and only if there exists a complete problem in * tfnp*@xmath176 .",
    "every problem @xmath175 in * tfnp * is , by definition , also in * tfnp*@xmath176 .",
    "let @xmath215 .",
    "let @xmath208 be given by a binary relation @xmath216 .",
    "then the binary relation @xmath217 defined by @xmath218 defines a problem in * tfnp*. using these two observations as a hint , it is very easy to finish the proof .",
    "we leave it to the reader .",
    "it is always difficult to justify a mathematical conjecture .",
    "either the sentence is true , or it is false , but unlike in physics , in mathematics there are no experiments that may support one or the other . thus the belief in a conjecture is based on subjective feelings . here",
    "are our reasons why we believe that the conjecture should be true .",
    "every * tfnp * problem is based on some mathematical principle that ensures that for every input there exists a solution .",
    "although theses principles are simple for the basic classes of * tfnp * problems , it seems likely that there is no universal mathematical principle that would work for every * tfnp * problem .",
    "combinatorial characterizations of provably total polynomial search problems have been characterized for some fragments of bounded arithmetic .",
    "the description of these combinatorial problems suggest that their strength increases with increasing strength of the theories . of bounded arithmetic increases with increasing  @xmath219 , but this hypothesis is supported by a connection with the polynomial hierarchy in computational complexity  @xcite . ]    an oracle",
    "has been constructed relative to which the conjecture holds true  @xcite .",
    "the connection with search problems verifying the consistency of a theory that we describe below can also be viewed as a supporting argument .",
    "conjecture  tfnp has another equivalent form in which the concept of consistency plays a key role . according to herbrand s theorem",
    "a universal sentence @xmath220 is consistent if and only if for every family of terms @xmath221 , @xmath222 , @xmath223 @xmath224 is satisfiable as a propositional formula .",
    "thus every consistent universal sentence defines a natural * tfnp * problem .",
    "let @xmath220 be a consistent universal sentence .",
    "then @xmath225 , the _ herbrand consistency search for @xmath172 _ , is the following total polynomial search problem .",
    "given terms @xmath221 in the language of @xmath172 , @xmath222 , @xmath226 , find a truth assignment to the atomic subformulas occurring in @xmath227 , for @xmath222 , that makes @xmath228 true .",
    "for simplicity , we define herbrand consistency search only for universal sentences in this paper , but using skolemization , one can easily extend this definition to conjunctions of prenex formulas . in @xcite",
    "we proved the following theorem .",
    "[ t - hcon ] for every total polynomial search problem @xmath175 , there exist a consistent universal sentence @xmath172 such that the problem @xmath175 is many - one polynomially reducible to @xmath225 .    using this theorem we can state conjecture  tfnp in the following equivalent form .",
    "equivalent to tfnp for every theory @xmath49 there exists a consistent universal sentence @xmath172 such that @xmath225 is not polynomially reducible to any * tfnp * problem provably total in @xmath3 , i.e. , @xmath229 .",
    "as with conjecture  con@xmath61 , one can ask how much stronger @xmath3 must be than @xmath6 in order to be able to prove the totality of more polynomial search problems .",
    "but we can also ask : what is a search problem whose totality is not provable in @xmath3 ?",
    "the following could be an answer to both questions .",
    "tfnp@xmath230 suppose @xmath49 is axiomatized by a universal sentence",
    ". then @xmath3 does not prove that @xmath231 is total for any formalization of it by a @xmath38 formula .",
    "note that if @xmath3 is strong enough to prove herbrand s theorem , then it does not prove the totality of @xmath231 formalized in a natural way , because if it did , it would prove its own consistency .",
    "however , this does not exclude the possibility that it proves the totality for some contrived definition .",
    "although we call it a conjecture , we are not very confident that it is true . but suppose it were true and suppose that @xmath62 is axiomatized by a universal formula and @xmath3 is a theory that proves herbrand s theorem and the consistency of @xmath6",
    ". then we would have @xmath232 . thus according to this conjecture , adding the consistency of a theory to itself produces more provably total polynomial search problems .",
    "in bounded arithmetic we are interested not only in @xmath139 sentences , but also in sentences of higher complexity , namely , sentences of the form @xmath233 for @xmath234 . in  @xcite",
    ", n. thapen noted that one can view these sentences as generalized polynomial search problems .",
    "for the sake of simplicity , we will only consider @xmath235 sentences as an example ; the reader is invited to generalize it to higher complexity sentences .",
    "let @xmath236 be the sentence @xmath237 where @xmath238 .",
    "the computational task associated with @xmath172 is , for a given @xmath51 , to find some @xmath239 such that @xmath240 holds true .",
    "let another sentence @xmath241 of the form @xmath242 where @xmath243 , be given .",
    "we can define a reduction of @xmath172 to @xmath244 in the same way as we defined it for * tfnp * in definition  [ d-5 ] using the binary relations @xmath240 and @xmath245 , but a more natural concept is the following one .",
    "@xmath172 is many - one reducible to @xmath244 _ if there are polynomial time computable functions @xmath246 such that @xmath247 if we ignore sharply bounded quantifiers in @xmath10 and @xmath11 , then we can view the sentence above as a skolemization of @xmath248 .    one can now state similar conjectures as conjecture  tfnp , but we will not do it in this paper .",
    "we conclude this section with a remark about quantitative measures of complexity of * tfnp*s . in subsection  [ subsec4.1 ]",
    "we noted that we probably can not classify problems in * tfnp * by time or space complexities .",
    "therefore we only use the quasiorder by polynomial reductions .",
    "however , the hypothesized connection with first order theories suggests another possibility . in classical proof theory the growth rate of computable functions is measured by constructive ordinals . in a typical situation ,",
    "the provably total computable functions of a theory @xmath3 have ordinals less than the proof - theoretic ordinal of @xmath3 . in principle",
    ", we can use proof - theoretical ordinals to also measure the complexity of total polynomial search problems . define the ordinal of a polynomial search problem @xmath175 to be the least proof theoretical ordinal @xmath116 of a theory @xmath3 such that @xmath249 .",
    "of course , this only makes sense if the computational complexity increases with increasing ordinals . in order to prove it",
    ", we would need to assume more than just some connection of computational complexity with provability .",
    "for example , if conjecture  tfnp@xmath230 were true , we would obtain an increasing hierarchy indexed by constructive ordinals by using transfinite progressions based on adding consistency",
    ". however , this scale would be very coarse and would not distinguish problems near the bottom of the hierarchy , where there are problems we are most interested in and which we can describe explicitly . for fragments of bounded arithmetic ,",
    "the jump @xmath250 is too big .",
    "( @xmath251 is not provable in the full bounded arithmetic @xmath17 , even if we add an axiom saying that exponentiation is total  @xcite . )",
    "we need a smaller jump and a plausible stronger conjecture corresponding to this jump",
    ". then we may be able to define a hierarchy of total polynomial search problems based on transfinite ordinals that would classify problems provably total in fragments of bounded arithmetic .",
    "so far we were concerned with first order theories . in this section",
    "we will show that one can also use other formal systems , namely , propositional proof systems , in order to state and study conjectures about incompleteness in the finite domain .",
    "let a language for classical propositional logic be fixed ; say , we take connectives @xmath252 and variables @xmath253 . let _ taut _ be the set of all tautologies and _ sat _ be the set of all satisfiable propositions .",
    "following  @xcite , we say that _ a proof system is a polynomial time computable function @xmath175 from @xmath254 onto * taut*_. denotes @xmath255 , but in principle it can be any finite alphabet of size at least 2 .",
    "] if @xmath256 , we say that @xmath257 is a proof of @xmath10 in the proof system @xmath175 .",
    "this elegant definition captures three basic properties of proof systems :    the relation _",
    "`` @xmath257 is a proof of @xmath10 '' _ is decidable in polynomial time ;    the system is sound ;    the system is complete . in the rest of this section",
    "the term `` proof system '' will always refer to `` _ _ propositional _ _ proof system '' .    according to this definition",
    ", a proof can be any evidence that shows logical validity of a proposition .",
    "the standard formalizations of propositional calculus based on axioms and logical rules are systems from a special class of proof systems , called _ frege systems .",
    "_    we say that _ a proof system @xmath175 is polynomially bounded _ if there exists a polynomial @xmath84 such that every tautology @xmath10 has a @xmath175-proof of length at most @xmath258 . since _ taut _ is * conp*-complete , the existence of a polynomially bounded proof system is equivalent to * np*=*conp*.    a weaker concept is length optimality .",
    "we say that _ a proof system @xmath175 is length - optimal _ if for every proof system @xmath208 , there exists a polynomial @xmath84 such that if @xmath10 has a proof of length @xmath2 in @xmath175 , then it has a proof of length at most @xmath259 in @xmath208 . in  @xcite we showed that conjecture  con@xmath61 is equivalent to the following one .",
    "equivalent to con@xmath61 there exists no length - optimal proof system .",
    "why do we believe that this conjecture is true ?",
    "an argument that we can give is based on a construction of proof systems used to prove that the two statements of conjecture  con@xmath61 are equivalent . given an arithmetical theory @xmath3 , we can formalize the concept of a propositional tautology by some formula @xmath260 . for a given tautology @xmath261",
    "we take its gdel number @xmath2 and treat any first order proof of @xmath262 as a proof in a propositional proof system .",
    "then it seem plausible that in stronger theories we can prove some tautologies by shorter proofs .",
    "moreover , one can show that these proof systems are in a sense universal .",
    "so the fact that the logical strength of theories can not be bounded is likely to be projected into these proof systems .",
    "another argument supporting the conjecture is from our experience with specific proof systems studied in proof complexity .",
    "most systems are based on some class of formulas and deduction rules .",
    "if we enlarge the class of formulas then , usually , the system becomes stronger .",
    "for example , if we use quantified boolean formulas instead of ordinary boolean formulas , the system seems much stronger . for some weak systems , in particular , bounded depth frege systems , this has actually been proven  @xcite . as , apparently , there is no limit on how strong expressive power formulas can have , we also believe that there is no limit on how efficient a proof system can be .      in @xcite razborov defined the _",
    "canonical pair of a proof system _ @xmath175 to be the pair of sets @xmath263 where @xmath264 , and @xmath265 .",
    "note that it is a pair of two disjoint * np * sets .",
    "if a proof system @xmath175 simulates a proof system @xmath208 , then @xmath266 is polynomially reducible to @xmath263 in the following sense .",
    "we say that _ a disjoint * np * pair @xmath267 is polynomially reducible to a disjoint * np * pair @xmath268 _ if there exists a polynomial time computable function @xmath136 that maps @xmath269 into @xmath210 and @xmath270 into @xmath271 .",
    "it is not difficult to show that canonical pairs of proof systems are universal in the class of all disjoint * np * pairs , which means that every disjoint * np * pair @xmath267 is polynomially reducible to the canonical pair of some proof system @xmath175 .",
    "in fact , even more is true .",
    "for every disjoint * np * pair @xmath267 , there exists a proof system whose canonical pair is polynomially _ equivalent _ to @xmath267 .",
    "furthermore , if @xmath175 and @xmath208 are proof systems and there exists a polynomial @xmath84 such that for every tautology @xmath10 , if @xmath10 has a @xmath175-proof of length @xmath2 , then @xmath10 has a @xmath208-proof of length at most @xmath259 , then the canonical pair of @xmath175 is polynomially reducible to the canonical pair of  @xmath208 .",
    "indeed , the mapping @xmath272 is such a reduction .",
    "thus we get :    [ disjnp - con - n ] if @xmath175 is a length - optimal proof system , then its canonical pair is a complete disjoint * np * pair with respect to polynomial reductions ( i.e. , every disjoint * np * pair is reducible to it ) . below ) ; kbler , messner and torn improved it to length optimal proof systems . ]",
    "therefore the following conjecture is a strengthening of conjecture  con@xmath61 .",
    "disjnp there exist no complete disjoint * np * pair ( with respect to polynomial reductions ) .",
    "glaer et al .",
    "@xcite constructed an oracle relative to which there is no complete disjoint * np*-pair .",
    "other than that , we have little supporting evidence . a combinatorial characterization of the canonical pair has only been found for the resolution proof system . in  @xcite",
    "they also constructed an oracle relative to which there exists a complete disjoint * np*-pair , but no length - optimal proof system exists , i.e. , conjecture  disjnp fails , but conjecture  con@xmath61 holds true .",
    "we now turn to disjoint * conp * pairs .",
    "when comparing different disjoint * conp*-pairs , one can use the same polynomial reduction as used for disjoint * np*-pairs ; hence one can also ask similar questions . in particular",
    ", are there disjoint * conp * pairs inseparable by a set in * p * ? are there complete disjoint * conp * pairs ?",
    "we believe that the answer to the first question is yes , because we accept @xmath273 as a very likely fact .",
    "the answer to the second question is less clear , but we still lean to the negative answer .",
    "disjconp there exist no complete disjoint * conp * pair ( with respect to polynomial reductions ) .",
    "next proposition states that conjecture  tfnp is a consequence of the above conjecture .",
    "[ tfnp - conp ] if there exists a complete * tfnp * problem , then there exists a complete disjoint * conp * pair .",
    "the proposition follows from the two lemmas below .",
    "first we need a definition .",
    "let a * tfnp * problem @xmath142 be given .",
    "assume that @xmath274 .",
    "canonical disjoint * conp * pair of @xmath142 _ is the pair @xmath275 defined as follows .",
    "the elements of @xmath276 are pairs @xmath277 where @xmath51 is an arbitrary binary string and @xmath210 is a boolean circuit with @xmath138 bit - inputs and one bit - output .",
    "the sets @xmath278 and @xmath279 are defined by ( x , c)a_i  y ( r(x , y)c(y)= i ) .",
    "the condition that , for a given @xmath51 , all elements @xmath56 satisfying @xmath280 have the same length is , clearly , not essential , because we can always pad the string @xmath56 to the maximal length @xmath138 .    for every disjoint *",
    "conp * pair @xmath281 there exists a * tfnp * problem @xmath142 such that @xmath281 is polynomially reducible to the canonical disjoint * conp * pair of @xmath142 .",
    "let a disjoint * conp * pair @xmath281 be given .",
    "suppose that @xmath282s are defined by @xmath283 for @xmath284 , where @xmath285 is computable in polynomial time and @xmath286 is a polynomial .",
    "let the binary relation @xmath143 be defined by @xmath287 since @xmath285s are computable in polynomial time , so is also @xmath143 and the length of every @xmath161 satisfying @xmath288 is polynomially bounded in the length of @xmath51 .",
    "furthermore , since @xmath289 and @xmath290 are disjoint , @xmath143 is total .",
    "again , by suitably padding @xmath161 we may ensure that @xmath291 for some polynomial @xmath84 .",
    "let @xmath275 be the canonical pair of @xmath142 .",
    "the pair @xmath281 is reducible to @xmath275 by the mapping @xmath292 where @xmath210 is a circuit such that @xmath293 , because for this @xmath210 , @xmath294 iff @xmath295 .",
    "let @xmath296 and @xmath297 be two * tfnp * problems such that @xmath274 and @xmath298 .",
    "let @xmath275 respectively @xmath281 be their canonical * conp * pairs and suppose that @xmath296 is polynomially many - one reducible to @xmath297 .",
    "then @xmath275 is reducible to @xmath281 .",
    "let @xmath296 , @xmath297 and a polynomial many - one reduction @xmath299 of @xmath296 to @xmath297 be given .",
    "let @xmath275 and @xmath281 be the canonical * conp * pairs of @xmath296 and @xmath297 .",
    "we define a polynomial reduction of @xmath275 to @xmath281 as follows . for an input of the form @xmath277 where @xmath210 is a boolean circuit",
    ", we put @xmath300 where @xmath301 is a boolean circuit with @xmath302 bit inputs such that for all @xmath56 of length @xmath302 , d_x(y ) = c(g(x , y ) ) . if an input @xmath161 does not have the required form , we put @xmath303 .",
    "we will check that this defines a polynomial reduction of @xmath275 to @xmath281 .",
    "let @xmath304 and let @xmath56 be any number such that @xmath305 and @xmath306 . since @xmath307 , we have @xmath308 by the definition of @xmath309 . by ( [ e54 ] ) , @xmath310 .",
    "this proves that @xmath311 .      a class closely related to * tfnp * and the question whether there exists a complete problem in this class were studied by beyersdorff , kbler and messner  @xcite .",
    "we need a couple of preliminary definitions .",
    "a multivalued partial function @xmath136 is called _ * np * multivalued function _ if it is computed by a nondeterministic polynomial time turing machine @xmath125 in the following sense .",
    "@xmath125 stops in two possible states : accept and reject . for a given input value @xmath51 , the values of @xmath136 are those words on the output tape which appear when the state accept is reached . for a function @xmath312",
    "we denote by @xmath313 the set of all values for the input @xmath51 .",
    "thus @xmath136 is total iff @xmath314 for all @xmath51 . the class of * np * _ multivalued functions _ is denoted by * npmv*. the class of _ total _ * np * _ multivalued functions _ is denoted by * npmv*@xmath315 .    by their nature ,",
    "* npmv*@xmath315 functions are * tfnp * problems , but there is an essential difference in how one defines reduction . for @xmath316 , we say that @xmath136 is polynomially reducible to @xmath160 if there exists a polynomial time computable function @xmath317 such that for all @xmath51 , @xmath318    a relation to our conjecture  tfnp is given by the following proposition .",
    "[ tfnp - npmv ] the existence of a complete function in * npmv*@xmath315 implies the existence of a complete * tfnp * problem . let @xmath160 be a complete function in * npmv*@xmath315 .",
    "we can represent @xmath160 using a polynomial time computable ternary relation as follows . @xmath319",
    "recall that the superscript at the existential quantifier means that we tacitly assume that there exists a polynomial bound @xmath84 such that @xmath320 is satisfied only if the lengths of @xmath56 and @xmath161 are bounded by @xmath138 .",
    "define @xmath321 we claim that @xmath208 defines a complete * tfnp * problem .",
    "let @xmath322 be a binary relation computable in polynomial time viewed as a * tfnp * problem ( again , we tacitly assume an implicit polynomial bound on the length of @xmath56 ) . define a function @xmath323 by @xmath324 since @xmath136 is reducible to the complete function @xmath160 , there exists a polynomial time computable function @xmath317 such that @xmath325 , which is equivalent to @xmath326 thus the pair of functions @xmath327 , where @xmath328 , is a polynomial reduction of @xmath6 to @xmath208 .",
    "we do not know if the opposite implication holds true .",
    "beyersdorff et al .",
    "@xcite proved that if there exists a complete function in * npmv*@xmath315 , then there exists a complete disjoint * conp * pair .",
    "this is now a consequence of propositions [ tfnp - conp ] and [ tfnp - npmv ] .",
    "a more natural way to compare proof systems than just comparing the lengths of proofs is polynomial simulation .",
    "this is a concept , introduced in  @xcite , is similar to polynomial reductions used in the theory of * np*-completeness and those we used to compare * tfnp * problems .",
    "[ def8 ] we say that _ a proof @xmath175 system polynomially simulates a proof system @xmath208 _ if there exists a polynomial time computable function such that given a @xmath208-proof @xmath19 of @xmath10 , @xmath329 is a @xmath175-proof of ( the same ) @xmath10 .",
    "we say that _ a proof system @xmath175 is p - optimal _ if it polynomially simulates every proof system .",
    "using this concept we can state a conjecture slightly weaker than conjecture  con@xmath61 .",
    "con there exists no p - optimal proof system .",
    "in  @xcite we proved that this conjecture is equivalent to the following uniform version of conjecture  con@xmath61 .",
    "equivalent to con for every @xmath62 , there exists @xmath49 such that @xmath6-proofs of @xmath1 can not be constructed in polynomial time .",
    "a uniform version of conjecture  rfn@xmath115 is obtained in the same way .",
    "rfn@xmath330 for every @xmath62 , there exists @xmath49 such that @xmath6-proofs of @xmath86 can not be constructed in polynomial time .    except for modifications of these conjectures , such as conjecture  con@xmath64 , we do not know of any other pair of uniform and nonuniform conjectures . in particular , tfnp is apparently uniform , but we do not know if it has a nonuniform companion .",
    "it may seem strange that according to this classification @xmath331 should be a nonuniform conjecture , in spite of the fact that both * np * and * conp * are uniform complexity classes .",
    "indeed , @xmath331 is implied by the nonuniform conjectures con@xmath61 and rfn@xmath115 , while the uniform versions con and rfn@xmath330 are only known to imply @xmath332 .",
    "but if we look at @xmath331 from the point of view of proof complexity , then it is clearly a nonuniform version of @xmath332 . just consider the following equivalent formulations of these conjectures :    @xmath332 @xmath333 there exists a proof system @xmath175 such that for every tautology @xmath334 a @xmath175-proof of @xmath334 can be constructed in polynomial time ;    @xmath331 @xmath333 there exists a proof system @xmath175 such that every tautology @xmath334 has a @xmath175-proof of polynomial length .",
    "however , although conjecture  disjnp seems to be uniform , it does imply the nonuniform conjecture  con@xmath61 ( see proposition  [ disjnp - con - n ] ) .",
    "we do not have an explanation for this .",
    "we started with statements about finite consistency , statements that express facts about logic , and eventually arrived at statements about disjoint sets of certain complexity , statements from structural complexity theory that apparently have nothing to do with the main theme of incompleteness .",
    "but one should realize that expressing these conjectures using concepts from computational complexity theory is just a convenient way to state them .",
    "it seems that it should be possible to present all uniform conjectures as statements about unprovability of certain sentences in theories from the class @xmath16 .",
    "the following proposition shows how to state conjecture  con in this way .",
    "[ pr-6.1 ] there exists a @xmath84-optimal proof system ( for _ taut _ ) if and only if there exists a theory @xmath49 such that for every proof system @xmath175 there exists a definition of @xmath175 by a @xmath38 formula such that @xmath3 proves the soundness of @xmath175 represented by this formula . for the proof , see @xcite , pages 578 - 9 .",
    "next proposition shows how to express conjecture  disjnp as a statement about unprovability of certain sentences .",
    "[ pr-6.2 ] there exists a complete disjoint * np * pair if and only if there exists a theory @xmath49 such that for every disjoint * np * pair @xmath281 there are @xmath20 definitions of @xmath289 and @xmath290 for which @xmath3 proves that they define disjoint sets .",
    "suppose that there exists a complete disjoint * np * pair @xmath275 .",
    "let @xmath335 be @xmath20 definitions of @xmath309 , @xmath284 .",
    "define a theory @xmath3 to be @xmath336 let @xmath281 be an arbitrary disjoint * np * pair .",
    "let @xmath337 be some @xmath20 definitions of @xmath282 , @xmath284 .",
    "since @xmath275 is complete , there exists a polynomial time reduction @xmath136 of @xmath281 to @xmath275 . consider the following definitions of @xmath282 , @xmath284 , by @xmath20 formulas : @xmath338 it is clear that they define the sets @xmath282 correctly and that @xmath3 proves that sets defined by these formulas are disjoint .",
    "the proof of the converse implication is a standard diagonalization argument that we have already presented in the proof of lemma  [ l-4.1 ] , so we will be very brief .",
    "let @xmath3 be a theory with the property stated in the proposition . for @xmath284 ,",
    "let @xmath309 be the set of tuples @xmath339 such that    @xmath340 and @xmath341 are @xmath20 formulas , @xmath19 is a @xmath3-proof of the disjointness of the sets defined by @xmath340 and @xmath341 , @xmath342 is a nondeterministic time bound for @xmath340 and @xmath341 , and @xmath337 holds true .",
    "we leave to the reader to verify that these conditions define a disjoint * np * pair and that every disjoint * np * pair is polynomially reducible to it .",
    "the non - existence of a complete disjoint * conp * pair , conjecture  disjconp , can be expressed as a statement about provability in the same way .",
    "conjecture  tfnp was , in fact , introduced as a sentence about unprovability in theories in @xmath16 .",
    "thus a natural way to classify such conjectures is according to the logical complexity of sentences that are claimed to be unprovable .",
    "the two most important classes are @xmath343 and @xmath344 ( i.e. , the sentences of the form : universally quantified @xmath174 and @xmath345 formulas ) .",
    "our uniform conjectures are classified as follows :    @xmath343  con , disjnp ;    @xmath344  rfn@xmath330 , tfnp , disjconp .",
    "several concepts related to our conjectures have been studied .",
    "we will present some of these sentences here .",
    "we will call them conjectures , since we believe that they are true , but we do not have essentially any supporting argument for their truth .",
    "we have observed that conjecture  con@xmath61 can be strengthened to conjecture  disjnp .",
    "its uniform version , conjecture  con , can , furthermore , be strengthened in a different way .",
    "recall that * up * , _ unambiguous _ * p * , is the class of languages that are accepted by polynomial time _",
    "nondeterministic _ turing machines that satisfy the property that for every accepted input , there is a _",
    "unique _ accepting computation .",
    "kbler , messner and torn  @xcite proved that if there exists a p - optimal proof system , then * up * has a complete set with respect to many - one reductions .",
    "hence the following is a strengthening of conjecture  con .",
    "up there is no complete set , with respect to many - one reductions , in * up*.    so far we only talked about proof systems for _ taut_. in the same way one can define proof systems and polynomial simulations for any set . in particular , a _ proof systems for _ sat _ _ is a polynomial time computable function from @xmath254 onto _ sat_. there is one essential difference between proof systems for _ taut _ and _ sat_the latter does have polynomially bounded proof systems .",
    "in fact , the definition of _ sat _ itself gives one such proof system ; in this system a satisfying assignment of a formula @xmath10 is a proof ( of the satisfiability of ) @xmath10 .",
    "this is called the _ standard _ proof system for _",
    "sat_.    here is an example of a nonstandard proof system @xmath175 for _ sat_. in @xmath175 a proof of @xmath10 is either a satisfying assignment , or it is @xmath10 itself in the case when @xmath10 is a proposition @xmath346 expressing , in a natural way , the fact that @xmath2 is a composite number . note that in the standard proof system the proof of @xmath346 encodes a nontrivial factor of @xmath2 .",
    "hence , if the standard proof system simulated @xmath175 , then factoring would be in polynomial time .    beyersdorff et al .",
    "@xcite proved that the existence of a p - optimal proof system for _ sat _ implies the existence of a complete function in * npmv*@xmath315 .",
    "hence , by our proposition  [ tfnp - npmv ] , it also implies the existence of a complete problem in * tfnp*. to put the conjecture about complete sets in _ sat _ into a context , we need the following proposition .",
    "let @xmath62 be a theory such that for every theory @xmath49 , @xmath6-proofs of @xmath86 can be constructed in polynomial time . then there exists a p - optimal proof system for _",
    "sat_.    let @xmath347 be a @xmath38 formula expressing the fact that @xmath56 is a satisfying assignment of a propositional formula @xmath51 .",
    "suppose that @xmath6 satisfies the assumption of the proposition .",
    "we define a proof system @xmath175 for _ sat _ by : @xmath348 given a proof system @xmath136 for _ sat _ , we take @xmath49 such that it proves the soundness of @xmath136 , i.e. , t  yz.sat(f(y),z ) . by corollary",
    "[ l - rfn ] , @xmath6-proofs of @xmath349 can be constructed in polynomial time for every  @xmath19 .",
    "thus , given an @xmath136-proof @xmath19 of @xmath329 , we can construct in polynomial time a proof in  @xmath175 . hence @xmath175 is a p - optimal proof system for _",
    "sat_.    the above two conjectures are related to our main conjectures con and tfnp .",
    "here is an example of a plausible conjecture that is apparently incomparable with con and tfnp .",
    "np@xmath350conp there is no complete set in @xmath43 .",
    "beyersdorff et al .",
    "@xcite proved that if both _",
    "taut _ and _ sat _ have p - optimal proof systems , then there exists a complete set in @xmath43 .",
    "hence conjecture  np@xmath350conp is above conjecture  rfn@xmath330 .",
    "the implications between the most important uniform conjectures considered in this paper are depicted in the figure below . recall that con is equivalent to the nonexistence of a p - optimal proof system for _",
    "taut_.    @xmath351\\\\   { \\sf disjnp}\\ar[rd]&{\\sf up}\\ar[d ] & & & { \\sf tfnp}\\ar[ld]&\\\\   & { \\sf con } \\ar[rd]&{\\sf np}\\cap{\\sf conp}\\ar[d ] & { \\sf sat}\\ar[ld]&&\\\\   & & { \\sf con}\\vee{\\sf sat}\\ar[d]&&&\\\\ & & { \\sf rfn}_1\\ar[d]&&&\\\\ & & { \\bf p}\\neq{\\bf np } & & & } \\ ] ]      we will focus on uniform conjectures , because the situation there seems to be clearer . we have seen that our uniform conjectures are statements about unprovability of particular sentences .",
    "the structure of these sentences is determined by    some class @xmath352 of sentences    associated with computational problems @xmath353 , and    some complexity hierarchy @xmath354 of the associated problems .",
    "the conjectures say that the more difficult the associated computational problem is , the more difficult is to prove the sentence .",
    "consider , for example , conjecture  disjnp .",
    "in this conjecture we have sentences expressing that two sets defined by @xmath20 sentences are disjoint .",
    "these sentences are of the form : @xmath355 where @xmath10 and @xmath11 are @xmath20 sentences defining the two sets .",
    "these sentences are equivalent to universally quantified @xmath174 sentence , but they are just some specific universally quantified @xmath174 sentences . for such sentences , a natural task is , for a given @xmath51 , to decide which of the two @xmath356 or @xmath357 is true .",
    "the complexity hierarchy of the computational problems is defined using polynomial time reductions .    in conjecture  con , the sentences expressing that a propositional proof system @xmath175 is sound are also universally quantified @xmath174 sentences .",
    "they have the form @xmath358 where @xmath359 is a @xmath38 formula expressing that @xmath56 is a @xmath175-proof of @xmath51 .",
    "the structure of these sentences is similar , but the length of @xmath56 in the second formula is not polynomially bounded in the length of @xmath51 .",
    "we associate with these formulas the same computational task , but we use a different kind or reductions to define the hierarchy ( in the first case , a reduction can map @xmath51 to another element , but we do not care about the witnesses of the @xmath20 formulas ; in the second case , @xmath51 does not change , but we map a witness @xmath56 to another witness ) .    ideally , we would like to state a general conjecture from which our current conjectures would follow as special cases .",
    "however , to be able to do that , we first need to fully understand what are the classes @xmath352 whose sentences can be associated with computational tasks , what are the computational problems @xmath353 , and what are the complexity hierarchies @xmath354 .",
    "so far we only have examples .",
    "in propositions  [ pr-6.1 ] and  [ pr-6.2 ] we saw that conjectures whose statements used reductions can be equivalently stated without referring to any concept of polynomial reduction . in this section",
    "we will explain how polynomial reductions naturally appear when we compare the logical strength of sentences .    when we are comparing sentences from some class @xmath352 , we do it with respect to some base theory @xmath3 .",
    "thus for some @xmath360 , we are asking whether @xmath361 .",
    "one can show that at least for some type of sentences and some theory @xmath3 , the provability implies the existence of a reduction .",
    "let the base theory be @xmath8 and the sentences have the form @xmath362 , where @xmath10 is @xmath20 .",
    "we will show that provability of one sentence from the other implies the existence of a polynomial reduction of one * tfnp * problem to the other .",
    "the following is a well - known fact ( see  @xcite ) , but we will still give a proof , because we want to argue that it can be generalized to stronger theories .",
    "suppose that @xmath363 and s^1_2x^py.(x , y)u^pv.(u , v ) , where @xmath10 and @xmath11 define polynomial time computable relations .",
    "then the * tfnp * problem defined by @xmath11 is polynomially reducible to the * tfnp * problem defined by @xmath11 .",
    "this proposition is an immediate consequence of the following result ( see  @xcite ) . if @xmath364 , where @xmath116 is @xmath365 , then for a given @xmath51 , one can compute @xmath56 such that @xmath366 using a polynomial time oracle turing machine with any oracle that , for a given @xmath51 and @xmath56 such that @xmath367 holds true , produces some @xmath161 such that @xmath368 holds true .",
    "write the implication in  ( [ pr - red ] ) in the following prenex form @xmath369 by the lemma , there is a polynomial time turing machine @xmath125 that computes @xmath51 and @xmath194 from a given @xmath76 using any oracle that whenever @xmath370 holds true produces a witness for @xmath56 .",
    "we want to use an oracle that only produces witnesses for @xmath371 .",
    "clearly , such an oracle suffices .",
    "if @xmath125 asks a query @xmath372 such that @xmath373 is true , then we can stop , because we already have a witness for @xmath374 .",
    "if no such query occurs during the computation of @xmath125 , we get @xmath51 and @xmath194 such that @xmath375 is true , which is equivalent to @xmath376 .",
    "but the antecedent is always true , so we have @xmath373 .    if the base theory @xmath3 is stronger than @xmath8 , we believe that we nevertheless get some class of reductions that is probably stronger than polynomial time computable reductions , but still somewhat restricted so that the classes of * tfnp * equivalent with respect to these reductions do not completely collapse .",
    "these reductions should be defined using the provably total search problems of  @xmath3 .",
    "the idea is that the provably total polynomial search problems of @xmath8 are the problems solvable in polynomial time and this gives us reductions that are polynomial time computations with oracle queries to which we substitute solutions of the problem to which we are reducing the given problem .",
    "similarly , if @xmath377 is the class of provably total polynomial search problems of @xmath3 , then provability in @xmath3 should give us reductions that are problems from @xmath377 with oracle queries .",
    "a special case of this appeared in  @xcite ( not quite explicitly ) where the theory was @xmath378 and the class of search problems was * pls*. although it may be interesting to study such reductions in general , we believe that they would give the same conjectures if used instead of polynomial reductions .",
    "in this paper we put forward the thesis that there exists a connection between the complexity of problems associated with first order sentences and their logical strength manifested as impossibility to prove them in weak theories .",
    "if we interpret this thesis in a broad sense , then the thesis is true ; e.g. , we can not prove in a weak theory that some computation stops if the problem requires extremely long time to be solved . however , our argument here is that there may be such a connection already on the very low level , namely in the domain of problems solvable in nondeterministic polynomial time .",
    "since the current state of research into such low complexity classes does not have means to prove separations of low complexity classes , we can only state and compare hypotheses about such a connection .",
    "there are two basic conjectures which have equivalent formulations and come in some flavors .",
    "the first one is about finite consistency statements and was proposed already a long time ago  @xcite .",
    "the second one is more recent and concerns provably total polynomial search problems .",
    "we showed how they are related to some weaker statements and some stronger ones .",
    "some of these statements had already been studied before .",
    "there are still may problems that need to be solved if we want to fully understand this topic ; some are of a fundamental nature , some are more specific .",
    "some problems have already been mentioned in previous sections .",
    "below we briefly mention some more .",
    "the main problem , mentioned in subsection  [ sec - general ] , is to find a general conjecture about incompleteness and computational complexity .",
    "the conjectures we studied in this paper should be special cases of it .",
    "construct an oracle with respect to which conjecture  disjconp is true .",
    "construct oracles that show that relativized conjectures are different or show that they are equivalent for pairs of conjectures presented in this paper .",
    "apparently the only separation that is known is a separation of conjectures  con and  disjnp , see  @xcite .    in order to get more evidence for conjecture  tfnp , characterize provably total polynomial search problems in stronger systems of bounded arithmetic .",
    "the strongest theory for which a combinatorial characterization has been found is @xmath379 , see  @xcite .",
    "characterize more canonical pairs of propositional proof systems in order to get more evidence for conjecture  disjnp .",
    "a combinatorial characterization of the canonical pair has only been found for resolution , see  @xcite .",
    "characterize canonical pairs of some total polynomial search problems ( as defined in this paper ) in order to get some evidence for conjecture  disjconp .",
    "nothing is known in this direction .",
    "we would also be interested in seeing connections between the non - existence of complete problems in some probabilistic classes and our main conjectures .",
    "kbler et al  @xcite proved that if _ taut@xmath380 _ ( or _ sat@xmath380 _ ) have a p - optimal proof system , then * bpp * , * rp * and * zpp * have many - one complete problems .",
    "( _ taut@xmath380 _ and _ sat@xmath380 _ are the sets of @xmath132 and @xmath381 quantified boolean tautologies . ) but most researchers believe that these probabilistic classes do have complete problems , because they are in fact equal to * p*.            a. beckmann and s.r .",
    "buss : improved witnessing and local improvement principles for second - order bounded arithmetic .",
    "acm transactions on computational logic 15 , 1 article 2 ( 2014 ) a. beckmann , p. pudlk and n. thapen : parity games and propositional proofs .",
    "acm transactions on computational logic , vol 15:2 , article 17 ( 2014 )        s.r .",
    "buss : bounded arithmetic .",
    "bibliopolis , naples ( 1986 ) s.r .",
    "buss and g. mints : the complexity of the disjunction and existence properties in intuitionistic logic .",
    "pure and applied logic 99 , 93104 , ( 1999 ) .",
    "cook : feasibly constructive proofs and the propositional calculus . in : proc .",
    "seventh annual acm symposium on theory of computing , acm new york , 8397 ( 1975 ) s.a .",
    "cook and r.a .",
    "reckhow : the relative efficiency of propositional proof systems . j. symbolic logic 44(1 ) , 3650 , ( 1979 ) a. ehrenfeucht and j. mycielski : abbreviating proofs by adding new axioms . bulletin of the american mathematical society , 77 , pp .",
    "366367 ( 1971 ) friedman , h. : on the consistency , completeness and correctness .",
    "unpublished typescript , ( 1979 )    c. glaer , a. l. selman , and l. zhang .",
    "canonical disjoint np - pairs of propositional proof systems .",
    ", 370(1 - 3):6073 ( 2007 ) c. glaer , a. l. selman , s. sengupta and l. zhang .",
    "disjoint np - pairs .",
    "siam j. computing , 33(6 ) , 1369 - 1416 ( 2004 ) p. hjek and p. pudlk : metamathematics of first order arithmetic , springer - verlag / asl perspectives in logic ( 1993 ) j. hanika : herbrandizing search problems in bounded arithmetic .",
    "mathematical logic quarterly 50 ( 6):577586 ( 2004 ) johnson , d. , papadimitriou , c. , yannakakis , m. : how easy is local search ?",
    "j. comput .",
    "system sci .",
    "37 , 79100 , ( 1988 ) j. krajek and r. impagliazzo : a note on conservativity relations among bounded arithmetic theories .",
    "mathematical logic quarterly , 48(3 ) , 3757 ( 2002 ) j. kbler , j. messner and j. torn : optimal proof systems imply complete sets for promise classes .",
    "information and computation 184 , 7192 ( 2003 ) l. koodziejczyk , p. nguyen and n. thapen .",
    "the provably total np search problems of weak second order bounded arithmetic .",
    "annals of pure and applied logic , vol 162:6 , 419446 ( 2011 )    krajek , j. : bounded arithmetic , propositional logic , and complexity theory .",
    "encyclopedia of mathematics and its applications , vol.60 , cambridge university press , cambridge - new york - melbourne , ( 1995 ) j. krajek : interpolation theorems , lower bounds for proof systems , and independence results for bounded arithmetic . j.",
    "symbolic logic 62(2 ) , 457486 ( 1997 ) j. krajek , p. pudlk : propositional proof systems , the consistency of first order theories and the complexity of computations . j. symbolic logic 54(3 ) , 10631079 ( 1989 ) j. krajek , p. pudlk and g. takeuti : bounded arithmetic and polynomial hierarchy .",
    "pure appl .",
    "logic 52 , 143154 ( 1991 ) p.",
    "pudlk : on the length of proofs of finitistic consistency statements in first order theories . in : logic colloquium 84 .",
    "north holland , 165196 ( 1986 ) p. pudlk : improved bounds to the length of proofs of finitistic consistency statements . in : contemporary mathematics vol.65 , american math .",
    "soc . , 309 - 331 ( 1987 ) p. pudlk : a note on bounded arithmetic , fundamenta mathematicae , vol.136 , no.2 , 8689 ( 1990 ) p.",
    "pudlk : some relations between subsystems of arithmetic and the complexity theory , proc .",
    "conf . logic from computer science , springer - verlag , 499519 ( 1992 ) p. pudlk : gdel and computations .",
    "acm sigact news vol .",
    "37/4 , 1321 ( 2006 ) p.",
    "pudlk : logical foundations of mathematics and computational complexity , a gentle introduction .",
    "springer - verlag , ( 2013 ) p. pudlk : on the complexity of finding falsifying assignments for herbrand disjunctions .",
    "archive for mathematical logic 54(7 ) , 769783 ( 2015 ) p. pudlk and n. thapen : alternating minima and maxima , nash equilibria and bounded arithmetic .",
    "annals of pure and applied logic , vol 163(5 ) , 604614 ( 2012 ) a.a .",
    "razborov : on provably disjoint np - pairs .",
    "eccc technical report trr94 - 006 ( 1994 ) a. skelley and n. thapen : the provably total search problems of bounded arithmetic .",
    "proceedings of the london mathematical society , vol 103(1 ) , 106138 ( 2011 ) c. smoryski : the incompleteness theorems . in : barwise , j. ( ed . )",
    "handbook of mathematical logic .",
    "north - holland , 821865 ( 1977 ) n. thapen : higher complexity search problems for bounded arithmetic and a formalized no - gap theorem .",
    "archive for mathematical logic , vol 50(7 - 8 ) , 665680 , ( 2011 ) a.j . wilkie and j.b .",
    "paris : on the schema of induction for bounded arithmetical formulas . annals of pure and applied logic , 35:261302 , ( 1987 )"
  ],
  "abstract_text": [
    "<S> motivated by the problem of finding finite versions of classical incompleteness theorems , we present some conjectures that go beyond @xmath0 . these conjectures formally connect computational complexity with the difficulty of proving some sentences , which means that high computational complexity of a problem associated with a sentence implies that the sentence is not provable in a weak theory , or requires a long proof . </S>",
    "<S> another reason for putting forward these conjectures is that some results in proof complexity seem to be special cases of such general statements and we want to formalize and fully understand these statements . in this paper </S>",
    "<S> we review some conjectures that we have presented earlier  @xcite , introduce new conjectures , systematize them and prove new connections between them and some other statements studied before . </S>"
  ]
}
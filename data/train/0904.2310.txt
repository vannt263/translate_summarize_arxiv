{
  "article_text": [
    "in this paper , we study special geometric set cover problems and capacitated set cover problems .",
    "in particular , the shapes of geometric sets we consider correspond to those of potential directional antenna ranges .",
    "several geometric covering problems where a planar point set is to be covered with a minimum number of objects of a given shape have been studied in the literature , e.g. , in @xcite .    on the other hand ,",
    "a capacitated set cover problem can be seen as a generalization of the classical bin packing problem ( e.g. , see @xcite ) to include several types of bins .",
    "thus , we are given a set of elements @xmath4 , each with a demand @xmath5 and a set of subsets of @xmath4 ( equivalently , types of bins ) , and the goal is to partition the elements into a minimum number of copies of the subsets ( bins ) so the total demand of elements assigned to each set copy does not exceed a fixed upper bound @xmath6    capacitated set cover problems are useful abstraction in studying the problems of minimizing the number of directional antennas .",
    "the use of directional antennas in cellular and wireless communication networks steadily grows @xcite .",
    "although such antennas can only transmit along a narrow beam in a particular direction they have a number of advantages over the standard ones .",
    "thus , they allow for an additional independent communication between the nodes in parallel @xcite , they also attain higher throughput , lower interference , and better energy - efficiency @xcite .",
    "we consider the following problem of optimal placement of directional antennas in wireless networks .",
    "there is a base station coupled with a network infrastructure .",
    "the station transfers information to and from a number of customers within the range of directional antennas placed at this station .",
    "each customer has fixed position and demand on the transmission capacity .",
    "the demands are unsplittable , thus a customer can be assigned only to a single antenna .",
    "one can choose the orientation and the angular range of an antenna .",
    "when the angular range is narrower an antenna can reach further so the area covered by any antenna is always the same .",
    "there is a common limit on the total bandwidth demand that can be assigned to an antenna .",
    "the objective is to minimize the number of antennas .",
    "berman et al .",
    "termed this problem as minantvarand provided an approximation polynomial - time algorithm with ratio @xmath7 @xcite .",
    "they also observed in @xcite that even when the angular range of antennas is fixed , minantvarcannot be approximated in polynomial time with ratio smaller than 1.5 by a straightforward reduction from partition(see @xcite ) .",
    "we provide a substantially better polynomial - time approximation algorithm for minantvarachieving the ratio of @xmath3 our algorithm is based on two new results which are of independent interest in their own rights .",
    "the first of these results states that a cover of the set of customers with the minimum number of antennas without the demand constraint can be found in polynomial time .",
    "previously , only a polynomial - time approximation with ratio @xmath8 as well as an integrality gap with set cover ilp were established for this problem in @xcite .",
    "the second result shows that generally , given an approximate solution with ratio @xmath0 to an instance of ( uncapacitated ) set cover , one can find a solution to a corresponding instance of the capacitated set cover , where each set has the same capacity , within @xmath1 of the optimum .",
    "berman et al . considered also the following related problem which they termed as binschedule@xcite .",
    "there is a number of items to be delivered .",
    "the @xmath9-th item has a weight @xmath10 , arrival time @xmath11 and patience @xmath12 , which means that it has to be shipped at latest by @xmath13 given a capacity of a single shipment , the objective is minimize the number of shipments .    similarly as berman et al .",
    "could adopt their approximation for minantvarto obtain an approximation with ratio @xmath7 for binschedule@xcite , we can adopt our approximation for minantvarto obtain a polynomial - time approximation algorithm with ratio @xmath14 for binschedule .",
    "our third main result is a ptas for a dual problem to capacitated set cover where the number of sets ( e.g. , antennas ) to use is fixed and the task is to minimize the maximum set load , in case the sets correspond to line intervals or arcs . in the application to directional antennas , the aforementioned correspondence comes from fixing the radius and hence also the angular range of the antennas and the problem has been termed as minantloadin @xcite .",
    "the task is to minimize the maximum load of an antenna . in @xcite ,",
    "there has been solely presented a polynomial - time approximation with ratio @xmath15 for minantload .",
    "* organization : * in section [ firs ] we present problem definitions and notations . in section [ sec : uncap ]",
    ", we derive our polynomial - time dynamic programming method for the uncapacitated variant of minantvar . in section [ sec : cap ] , we show our general method of the approximate reduction of the capacitated vertex cover to the corresponding uncapacitated one . by combing it with the method of section [ sec : uncap ]",
    ", we obtain the @xmath14 approximation for minantvar .",
    "finally , in section [ sec : dual ] , we present the ptas for minantload , or more generally , for minimizing the maximum load in capacitated set cover of bounded cardinality , in case the sets correspond to intervals or arcs .",
    "this section presents terminology and notation used throughout this paper .",
    "we use @xmath16 to denote @xmath17 . if @xmath18 are defined for @xmath19 and @xmath20 , @xmath21 .",
    "an instance of the set cover problem is given by family @xmath22of subsets of @xmath23 ; a cover is @xmath24 such that @xmath25 .",
    "we minimize @xmath26 .",
    "an instance of capacitated set cover also specifies @xmath10 for @xmath19 ; a capacitated cover is a family of sets @xmath27 such that ( i ) for each @xmath28 there exists @xmath29 s.t .",
    "@xmath30 , while @xmath31 ; ( ii ) @xmath25 .",
    "again , we minimize @xmath26 .",
    "if for each @xmath32 we define radial coordinates @xmath33 , we define angle sector with radius bound as    @xmath34    in minantvaras well as its uncapacitated variant , @xmath16 is the set of customers with radial coordinates defined in respect to the position of the base station .",
    "this is a variant of capacitated ( or uncapacitated ) set cover where @xmath22consists of sets of customers that can be within range of a single antenna , _ i.e._of the form @xmath35 , where @xmath36 is the angular width of an antenna with radial reach @xmath0 .    the trade - off function @xmath37 is decreasing ; to simplify the proofs , we assume that @xmath38 , we can change the @xmath0-coordinates to obtains exactly the same family of antenna sets as for arbitrary @xmath37 .",
    "to simplify proofs , we will ignore the fact that the radial coordinate has a `` wrap - around '' .",
    "we also renumber the customers so @xmath39 for @xmath40 .",
    "observe that if @xmath41 and @xmath42 then every antenna set that contains @xmath9 also contains @xmath43 , so we can remove @xmath43 from the input .",
    "it suffices to consider only @xmath44 different antenna sets .",
    "for such an antenna set @xmath45 , let @xmath46 , @xmath47 . if @xmath48 , we denote @xmath45 as @xmath49=\\{i\\}$ ] , and if @xmath50 , we set @xmath51 and define @xmath52={{\\mathcal r}}(r(i , j),\\theta_i,1/r(i , j))$ ] .",
    "( this definition is more complicated when the `` wrap - around '' is allowed . ) because @xmath53 $ ] we can use @xmath52 $ ] in our set cover instead of @xmath45 .",
    "we say that points @xmath9 and @xmath43 are compatible , denoted @xmath54 , if @xmath55 and there exists an antenna set that contains @xmath56 . if @xmath48 then @xmath54 is obvious ; if @xmath50 then @xmath57\\equiv r_i , r_j\\le r(i , j)$ ] .",
    "if @xmath54 , we define @xmath58=\\{k:~i\\le k\\le j\\ } \\setminus a[i , j]$ ] .",
    "we solve our minimum cover problem by dynamic programming .",
    "our recursive subproblem is specified by a compatible pair @xmath59 and its objective is to compute the size of minimum cover @xmath60 $ ] of @xmath58 $ ] with antenna sets .",
    "if we modify the input by adding the points @xmath61 and @xmath62 with coordinates @xmath63 and @xmath64 then our original problem reduces to computing @xmath65 $ ] .    if @xmath58=\\varnothing$ ] then @xmath66 .",
    "otherwise , @xmath58=\\{a_0,\\ldots , a_{m-1}\\}$ ] , where @xmath67 for @xmath68 .",
    "we define a weighted graph @xmath69 , where @xmath70 , @xmath71 iff @xmath72 and for an edge @xmath73 we define the cost @xmath74 $ ] .",
    "note that @xmath75 is acyclic .",
    "therefore , we can find a shortest ( i.e. , of minimum total cost ) path from @xmath61 to @xmath76 in time @xmath77 @xcite .",
    "let @xmath78 be the length of this path .",
    "we will argue that @xmath60=d$ ] .",
    "first , we show a cover of @xmath58 $ ] with @xmath78 antenna sets .",
    "a path from 0 to @xmath76 in @xmath75 is an increasing sequence , and a path edge @xmath79 with cost @xmath80 corresponds to a cover of @xmath81 with @xmath82 $ ] and @xmath83 antenna sets that cover @xmath84 $ ] .",
    "conversely , given a cover @xmath27of @xmath58 $ ] , we can obtain a path with cost @xmath26 in @xmath75 that connects @xmath61 with @xmath85    for @xmath86\\in{{\\mathcal c}},$ ] we say that @xmath87 is its _",
    "width_. to make a conversion from a cover @xmath27of @xmath58 $ ] to a path in @xmath75 , we request that @xmath27has the minimum sum of widths among the minimum covers of @xmath58 $ ] .    this property of @xmath27implies that if @xmath86\\in{{\\mathcal c}}$ ] then :    1 .   @xmath88 $ ] , 2 .",
    "@xmath89 and @xmath90 are not covered by @xmath91\\}$ ] ( otherwise we eliminate @xmath86 $ ] from @xmath27or replace it with a set that has a smaller width ) .    from this we can conclude that for each pair of sets @xmath86 , a[k',\\ell']\\in{{\\mathcal c}}$ ] , where @xmath92 , one of two following cases applies :    1 .",
    "@xmath93 , i.e. , @xmath86 $ ] precedes @xmath94 $ ] ; 2 .",
    "@xmath95 , i.e. , @xmath94 $ ] is nested in @xmath86 $ ] .",
    "let @xmath96be the family of those sets in @xmath27that are not nested in others .",
    "clearly @xmath96can be ordered by the leftmost elements in the sets . note that if @xmath86\\in{{\\mathcal d}}$ ] then for some @xmath97 , we have    1 .   @xmath98 $ ] , 2 .   @xmath99 $ ] , 3 .",
    "@xmath83 sets of @xmath27are nested in @xmath86 $ ] and they cover @xmath58 $ ] , 4 .   @xmath100 is an edge in @xmath75 with cost @xmath80 , 5 .",
    "@xmath101 or @xmath102\\in{{\\mathcal d}}$ ] for some @xmath103 .",
    "these @xmath100 edges form a path that connects @xmath61 with @xmath76 with cost @xmath26 .",
    "our dynamic programming algorithm solves the @xmath44 subproblems specified by compatible pairs @xmath104 in a non - decreasing order of the differences @xmath105 in the reduction of a subproblem to already solved subproblems the most expensive is the construction of the graph @xmath75 and finding the shortest path in it , both take quadratic time .",
    "hence , we obtain our main result in this section .    the uncapacitated version of the problem of minimum covering with antenna sets @xmath2 points , i.e.",
    ", the restriction of minantvarto the case where all point demands are zero , can be solved in time @xmath106 and space @xmath107    previously , only a polynomial - time approximation algorithm with ratio two was known for the uncapacitated version of minantvar@xcite .",
    "by the discussion in the previous section , it is sufficient to consider only @xmath108 antenna sets in an instance of minantvaron @xmath2 points . hence , minantvaris a special case of minimum capacitated set cover .",
    "since we can determine a minimum uncapacitated set cover of an instance of minantvarby ignoring the demands and running the dynamic programming method given in the previous section , we shall consider the following more general situation .",
    "we are given an instance of the general problem of minimum capacitated set cover and a minimum set cover of the corresponding instance of minimum set cover obtained by removing the demands .",
    "the objective is to find a good approximation of a minimum capacitated set cover of the input instance .",
    "we obtain an approximation with ratio 2.692 for minimum capacitated set cover on the base of minimum uncapacitated set cover @xmath110by running a simple greedy ffd algorithm ( see fig .",
    "[ greedy ] ) .",
    "our analysis of this algorithm in part resembles that of the first - fit heuristic for bin - packing @xcite , but the underlying problems are different .",
    "123456= 1234= 1234= 1234= 1234= @xmath111 + * for *  ( @xmath112 ) + * while *  ( @xmath113 ) + @xmath114 + * for *  ( @xmath19 , with @xmath10 non - decreasing ) + * if *  ( @xmath115 + insert @xmath9 to @xmath116 + remove @xmath9 from @xmath16 and @xmath117 + insert @xmath116 to @xmath118 +    [ lem : 2.692 ] given an instance of capacitated set cover on @xmath2 elements and an approximation with ratio @xmath0 for minimum set cover of the uncapacitated version of the instance obtained by removing the demands , a capacitated set cover of the input instance of size at most @xmath109 times larger than the optimum can be determined in time @xmath107    to analyze ffd , we introduce a `` slack function '' @xmath119 , and we also apply it to elements that we cover using notation notation @xmath120 .",
    "slack function has the following two properties :    172    if @xmath121 then @xmath122 ;    if * while *  ( @xmath113 ) loop produces @xmath123 solution sets , say @xmath124 then @xmath125 .",
    "let @xmath126be the optimum solution .",
    "property implies that we start with @xmath127 .",
    "property implies that algorithm ffd produces at most @xmath128 sets .",
    "it remains to prove and .",
    "we define intervals @xmath129 , @xmath130 , and we use them to divide @xmath117 into classes , @xmath131 .",
    "now we define the slack function : @xmath132 .",
    "we also introduce @xmath133 and @xmath134 ; observe that    @xmath135 ;    @xmath136 for @xmath137 .    to prove , we look for the maximum possible @xmath138 . if @xmath121 and @xmath139 , then for some @xmath140 we have @xmath141 , hence @xmath142 , so @xmath143 for some @xmath144 and @xmath145 .",
    "it remains to find maximum possible @xmath146 where @xmath147 .",
    "note that @xmath148 , ( thus @xmath149 ) .",
    "if @xmath150 then for some @xmath151 we have @xmath152 , hence @xmath153 and @xmath154 for some @xmath144 .",
    "we can repeat the reasoning with @xmath155 and conclude that it contains @xmath156 , and then with @xmath157 we can conclude that it contains @xmath158 , etc .",
    "subsequent terms contribute very little to the overall result , so we can approximate the maximum possible @xmath138 as @xmath159 .",
    "the proof of property is in appendix a.    since @xmath160 @xmath110@xmath161 our simple algorithm can be implemented in time @xmath107      ffd algorithm achieves the worst case behavior if the sets of the optimum solutions have demands of the form @xmath163 and the uncapacitated cover @xmath110has sets that either have very small @xmath164 , or group together all elements with a particular weight .",
    "e.g. , for @xmath16 that contains elements with @xmath165 , algorithm ffd creates one - element sets .",
    "we can improve the approximation by preceding ffd with a phase in which we attempt to create `` better sets '' .",
    "if @xmath121 and @xmath149 , the maximum @xmath138 is obtained with demands @xmath166 , @xmath166 , @xmath167 , @xmath168 , and this yields @xmath169 .",
    "we can achieve the same even if there exists @xmath170 if we reduce @xmath171 from @xmath172 by about @xmath173 , to about @xmath174 .",
    "then we need to modify the algorithm so it produces sets with @xmath175 .",
    "this is not necessarily possible , after all , @xmath126may even contain singleton sets . for this reason ,",
    "we add the third term to our amortization of sets . for @xmath176",
    "we define    @xmath177 is the set in @xmath126such that @xmath178 ;    @xmath179 ;    @xmath180 .",
    "for @xmath181 we set @xmath182 . clearly , @xmath183 while @xmath184 .",
    "thus it will suffice to produce sets such that @xmath185 , and for that , we just need to modify the way we create sets that contain elements of @xmath186 .",
    "let us consider what we ( nondeterministically ) can do , and what we need to do .",
    "consider @xmath176 and assume that @xmath187 .",
    "then we can find @xmath188 and @xmath189 such that @xmath190 , @xmath191 and @xmath192 .",
    "however , it suffices to find @xmath45 such that @xmath193 , less than 40% of what we can do .",
    "if we increase @xmath194 , @xmath195 or @xmath196 by some @xmath197 , both what we can do and what we should do decrease by @xmath197 , hence the ratio decreases .    we can find a good candidate for @xmath45 by `` guessing '' @xmath188 and running an approximation algorithm for the knapsack problem @xcite in which items are elements @xmath198 , the weights are @xmath10 , the values are @xmath199 .",
    "it suffices to have 80% approximation .",
    "when we find a set @xmath200 that has the maximum value ( as returned by the approximation algorithm ) , we form set @xmath201 .",
    "we do the following `` accounting trick '' . for each @xmath202 and @xmath203 ,",
    "if @xmath204 and @xmath205 , then we increase @xmath206 by @xmath207 .",
    "thus we achieve @xmath208 , while for the remaining elements @xmath203 the ratio of what `` they can do '' ( maximum possible @xmath209 ) to what `` they need to do '' ( the difference @xmath210 ) remains bounded by 40% .    after creating @xmath211 for each @xmath176",
    "we run ffd algorithm with the remaining elements .    in this preliminary version",
    "we omit details how to implement this refined algorithm in time @xmath212 .",
    "[ lem : 2.423 ] given an instance of capacitated set cover on @xmath2 elements and an approximation with ratio @xmath0 for minimum set cover of the uncapacitated version of the instance obtained by removing the demands , a capacitated set cover of the input instance of size at most @xmath162 times larger than the optimum can be determined in polynomial time .",
    "one can observe that algorithm ffd has worst performance when some peculiar combinations of demands occur in sets of the optimum solutions , in terms of our classes , the worst pattern is @xmath213 .",
    "our second algorithm has an initial phase that handles all sets with an element from @xmath186 ; we decrease the slack for elements of @xmath186 and spend more effort forming the sets , so even with the smaller slack we can amortize the cost of each set of our solution .    intuitively , members of @xmath186 were troublemakers and our added phase took care of that .    because knapsack problem has fully polynomial - time approximation schema we could run a version with , say , 99% approximation , and this would allow to decrease the slack in @xmath186 by almost @xmath214 .",
    "this would give an approximation ratio of about @xmath215 .",
    "however , at this point we get another worst case  with the pattern @xmath216 .",
    "we say that @xmath217 is a troublemaker if for some @xmath116 we have @xmath218 and @xmath219 . here both elements of @xmath220 are troublemakers , we call them siblings",
    ".    now we will describe how to add a second phase to the algorithm so that the case of sibling troublemakers will cease to be the worst one . at that point",
    "we will have two classes of worse cases : @xmath221 , because they are compatible only with approximation ratios that are at least @xmath222 , and @xmath223 .",
    "the worst of the latter is @xmath224 .",
    "one can see that the slack of the latter is almost like the slack of the worst case of ffd , except that we have replaced a demand from @xmath186 with two from @xmath225 , @xmath226 with two @xmath167 .",
    "thus this slack is approximately @xmath227 .",
    "the second phase is similar to the first phase : we `` guess '' a set @xmath188 , elements @xmath228 and we run an approximation algorithm to find @xmath229 such that @xmath230 , while we maximize @xmath231 . for all possible guesses ,",
    "we pick one with maximum @xmath232 , form set the @xmath233 , insert @xmath116 to our solution and remove @xmath116 from @xmath117 .",
    "we repeat it as long as there exists @xmath188 with @xmath234 .",
    "after the second phase is completed , we finish by running ffd with the remaining @xmath117 , the set of still uncovered elements .    to analyze the second phase we introduce a negative slack for each pair of sibling troublemakers , 0.1 .",
    "when we form a set that contains troublemakers , we amortize it with the sum of the demands and slacks of elements , plus the slacks ( and extra terms ) of the troublemaker sibling pairs that are involved .",
    "one can see that the sum of slacks in @xmath235 that has a pair @xmath236 of troublemakers is at most @xmath237  we specifically decreased it by @xmath238 .",
    "we also define the extra terms similarly as before :    @xmath239 ;    @xmath240 .",
    "if @xmath241 , then the pair @xmath236 `` needs to find '' 0.1 , and it `` can find '' 0.423 , so it suffices if it finds 25% of what it can find .",
    "when @xmath242 ( or @xmath243 ) is positive , it decreases the  need to find  and  can find  by the same amount , so the ratio only improves ( decreases ) .    now",
    "suppose that we form a set , and in the competition of `` guesses '' the winners were some @xmath244 .",
    "the critical case is when they are both troublemakers , each with its sibling , @xmath245 and @xmath246 respectively , and needs , @xmath247 and @xmath248 .",
    "because @xmath249 could find @xmath250 , @xmath251 could find @xmath252 , they could find at least the average , @xmath253 . by applying @xmath254 approximation",
    ", they found at least @xmath255 , the use @xmath256 of that to satisfy their needs , and @xmath257 of that to compensate the troublemakers whose now can find less .",
    "the compensated troublemakers maintain their 25% ratio of need / can .    in this way",
    ", we obtain our strongest approximation results .",
    "let an instance of capacitated set cover be specified by a universe set @xmath258 , demands @xmath259 for each @xmath260 , and a family @xmath22of subsets of @xmath261 if an approximation with ratio @xmath0 for minimum set cover of the uncapacitated version of the instance ( i.e. , where the demands are removed ) is given then a capacitated set cover of the input instance of size at most @xmath1 times larger than the optimum can be determined in polynomial time .",
    "there exists a polynomial - time approximation algorithm for the problem of minantvarwith ratio @xmath14 .    by the reduction of binscheduleto minantvargiven in @xcite",
    ", we also obtain the following corollary .",
    "there exists a polynomial - time approximation algorithm for the problem of binschedulewith ratio @xmath14 .",
    "in minantloadproblem , the radius of antennas is fixed and the number @xmath76 of antennas that may be used is specified . the task is to minimize the maximum load of an antenna . in @xcite ,",
    "there is presented a polynomial - time approximation with ratio @xmath262    in the dual problem minant , the maximum load is fixed and the task is to minimize the number of antennas .",
    "recall that achieving an approximation ratio better than @xmath15 for the latter problem requires solving the following problem equivalent to partition .",
    "suppose that all demands can be covered with a single set , the load threshold is @xmath263 and the sum of all demands is to @xmath264 .",
    "decide whether or not two antennas are sufficient ( which holds if and only if one can split the demands into two equal parts ) .",
    "however , in case of the corresponding instance of minantload , we can apply fptas for the subsetsum problem @xcite in order to obtain a good approximation for the minimization of the larger of the two loads .",
    "if all demands can be covered by a single antenna set ( and the sum of demands is arbitrary ) then minantloadproblem is equivalent to that of minimizing the makespan while scheduling jobs on @xmath76 identical machines .",
    "hochbaum and shmoys showed a ptas for this case in @xcite .",
    "interestingly enough , the ptas of hochbaum and shmoys can be modified for minantload , while it does not seem to be the case with their practical algorithms that have approximation ratios of 6/5 and 7/6 @xcite .    because radial coordinate does not matter in minantload , the input is a sequence of pairs @xmath265 .",
    "initially , we ignore the issue of `` wrap - around '' so the antenna sets are of the form @xmath266 . without loss of generality",
    "we assume that @xmath23 and @xmath267 .    in our ptas",
    ", we try different values of the maximum load @xmath263",
    ". we can start using simple factor 2 approximation and then we can apply binary search",
    ". we will find an exact solution for a transformed problem in such a way that ( a ) the cost of the optimum can not increase , ( b ) a solution for the transformed problem can be converted to an actual solution while increasing the cost by a factor of @xmath268 .    for a fixed @xmath269 we will describe an @xmath270-approximation algorithm that runs in time @xmath271 , where @xmath80 is a universal constant , while @xmath272 .",
    "we start by defining thresholds @xmath273 and classes : + @xmath274 , @xmath275 ( _ large _ demands ) and + @xmath276 ( _ small _ demands ) .",
    "we also set @xmath277 and @xmath278 .",
    "one can show that @xmath279 is minimized when @xmath280 and @xmath281 .",
    "we will find exact solution to a problem where we have the same input but we re - define the cost / load of sets so ( a ) it can not decrease and ( b ) if the new cost of @xmath116 satisfies @xmath282 then @xmath283 . we call this problem decreased .    intuitively , we divide elements into small and large . in the case of large elements , with @xmath284 , we decrease @xmath285 to @xmath286 to have a small number of distinct values . in the case of small elements ,",
    "we want to apply `` greedy packing '' and we `` decrease '' their contribution by not counting the last of them .",
    "more formally , we define decreased / relaxed instance decreasedas follows :    for @xmath287 , we set @xmath286 to @xmath288    if @xmath289 , we set @xmath290 to @xmath291 i.e. , @xmath292 , otherwise    if @xmath293 , we set @xmath290 to @xmath294    the task is to minimize @xmath295 .    clearly , the optimum of our decreasedinstance can not be larger than the optimum for the initial minantloadinstance . also , since if @xmath287 for @xmath296 then @xmath297 and otherwise @xmath298 we conclude that @xmath299 implies @xmath300 thus , an exact polynomial - time algorithm for decreasedyields a ptas for minantload .",
    "we say that a partition @xmath118 of @xmath16 is _ ordered _ if we have the following implication : if @xmath301 , @xmath302 , @xmath303 , @xmath304 , then @xmath305 .    for every solution @xmath306 of minantloadthere",
    "exists an ordered solution @xmath118 of decreasedsuch that @xmath307",
    ".    we can transform @xmath306 to an ordered @xmath118 in such a way that during that process for every @xmath308 we will preserve @xmath309 for each @xmath310 and we will not increase @xmath311 . before @xmath116",
    "is `` finalized '' we will allow fractional values for statements @xmath312 $ ] if @xmath313 .",
    "consider @xmath308 that has minimal @xmath314 and suppose that there exists @xmath315 and @xmath316 , @xmath305 such that @xmath317>0 $ ] and @xmath318>0 $ ] . if @xmath296 , we move @xmath43 to @xmath116 and @xmath319 to @xmath320 ; this does not change @xmath321 and @xmath322",
    ". if @xmath323 , let @xmath324,[j'\\in q]\\}$ ] , we increase @xmath312 $ ] and @xmath325 $ ] by @xmath326 and we decrease @xmath318 $ ] and @xmath317 $ ] by the same amount .",
    "this does not change @xmath311 and @xmath327 .",
    "when such @xmath328 do not exists , suppose that there exists @xmath313 such that @xmath329<1 $ ] ; in this case @xmath293 ; we increase @xmath312 $ ] to 1 and for @xmath330 we decrease @xmath317 $ ] to 0 .",
    "this does not increase @xmath290 because @xmath331 does not count the last small element in @xmath116 .",
    "now @xmath116 and any other @xmath320 satisfy the condition of _ ordered _ and we can remove @xmath116 and its elements from further consideration  and insert @xmath116 to @xmath118 .",
    "we repeat this until all sets are removed from @xmath332    the algorithm based on the lemma can be as follows .",
    "we represent a partial solution as counts @xmath333 , that mean @xmath334 elements of class @xmath335 were covered . the are at most @xmath336 such partial solutions . because we add sets to a solution in order of increasing @xmath337",
    ", a partial solution covers @xmath334 smallest elements of @xmath335  smallest in terms of their @xmath43 s , or , equivalently , @xmath338 s .    adding a set to a partial solution @xmath333 is an edge to another such vector , @xmath339 .",
    "such an edge is determined by the sequence @xmath340 , because then we can find maximum possible @xmath341 .",
    "an edge is valid if it implies the increase in the maximum index of a covered element , and @xmath342 .",
    "because a new set can cover at most @xmath343 large demands , the number of possible edges is below @xmath344 .",
    "we need to find the shortest path from @xmath345 to @xmath346 , and we can use breadth first search ; thus the time is proportional to the number of edges , or @xmath347 . by @xmath272 , the time can be also expressed as @xmath348 hence , we obtain our ptas for minantload .",
    "[ theo : ptas ] minantloadfor @xmath2 points admits an approximation with ratio @xmath268 in time @xmath348    note that the only geometric property of antennas with fixed radius that we used to design the ptas for minantloadis their correspondence to intervals or arcs .",
    "hence , we obtain the following generalization of theorem [ theo : ptas ] .    [",
    "theo : gptas ] the problem of minimizing the maximum load in a capacitated set cover where the sets correspond to intervals or arcs admits a ptas .",
    "we are quite convinced that our general method of approximating with ratio @xmath1 minimum capacitated set cover on the base of an approximate solution with ratio @xmath0 to the corresponding minimum ( uncapacitated ) set cover can ultimately achieve the ratio @xmath349 in particular , this would improve the ratio for minantvarto @xmath350 it seems however that some new ideas are needed to obtain , if possible , ratios below @xmath351 and @xmath352 respectively .",
    "our aforementioned method can be also used to approximate optimal solutions to the natural extension of minantvarto include several base stations by combining it with known approximation algorithms for geometric set cover in the plane , e.g. , @xcite .",
    "the authors are grateful to matin wahlen for discussions on minantloadand to david ilcinkas , jurek czyzowicz and leszek gasieniec for preliminary discussions on minantvar .",
    "10    l.  bao and j.  garcia - luna - aceves .",
    "transmission scheduling in ad hoc networks with directional antennas .",
    "acm mobicom 2002 , pp .",
    "48 - 58 .",
    "p. berman , s.p .",
    "kasiviswanathan and b. urgaonkar . packing to angles and sectors .",
    "spaa 2007 .",
    "h.  brnnimann and m.t .",
    "goodrich . almost optimal",
    "set covers in finite vc - dimension discrete and computational geometry , 14(4 ) , pp .",
    "463 - 479 , 1995 .",
    "k.  l.  clarkson and k.  r.  varadarajan .",
    "improved approximation algorithms for vertex cover .",
    "acm socg 2005 , pp .",
    "135 - 141 , 2005 .",
    "e. g. coffman and m. r. garey and d. s. johnson .",
    "approximation algorithms for bin packing : a survey . in _",
    "approximation algorithms for np - hard problems _ , editor d.s .",
    "hochbaum , pws publishing , pp .",
    "46 - 93 , 1997 .",
    "cormen , c.e .",
    "leiserson and r.l .",
    "introduction to algorithms . the mit press , cambridge 1990 .",
    "garey , r.l .",
    "graham , d.s .",
    "johnson and a.c .",
    "yao , resource constrained scheduling as generalized bin - packing , j. comb . th .",
    "a , 21 , pp .",
    "257 - 298 , 1976 , cited from e. g. coffman , m.r .",
    "garey and d.s .",
    "johnson , approximation algorithms for bin packing : a survey , page 50 , in approximation algorithms for np - hard problems , d.s .",
    "hochbaum ( ed . ) .",
    "garey and d.s .",
    "computers and intractability . a guide to the theory of np - completeness .",
    "freeman and company , new york 2003 .",
    "d.  s.  hochbaum and w.  maass .",
    "approximation schemes for covering and packing in image processing and vlsi .",
    "journal of the acm , 32(1 ) , pp .",
    "130 - 136 , 1985 .",
    "d.  s.  hochbaum and d.  b.  shmoys . using dual approximation algorithms for scheduling problems : theoretical and practical results .",
    "journal of the acm , 34(1 ) , pp .",
    "144 - 162 , 1987 .",
    "h. kellerer , u. pfershy and m. speranza , an efficient approximation scheme for the subset sum problem .",
    "jcss , 66(2):349 - 370 , march 2003 .",
    "h. kellerer and u. pferschy , improved dynamic programming in connection with an fptas for the knapsack problem .",
    "8(1 ) : 5 - 11 ( 2004 ) .    c.  peraki and s.  servetto . on the maximum stable throughput problem in random networks with directional antennas . proc .",
    "acm mobihoc 2003 , pp .",
    "76 - 87 , 2003 .",
    "a.  spyropoulos and c.s .",
    "energy efficient communication in ad hoc networks using directional antennas .",
    "ieee infocom 2002 .",
    "s.  yi , y.  pei , and s.  kalyanaraman . on the capacity improvement of ad hoc wireless networks using directional antennas .",
    "acm mobihoc 2003 , pp .",
    "108 - 116 , 2003 .",
    "173            if @xmath362 at time @xmath359 , the algorithm would insert @xmath363 elements of @xmath361 to @xmath364 , as each @xmath365 satisfies @xmath366 , this would lead to in @xmath367 ; a contradiction because we removed such sets from consideration .",
    "hence @xmath368 at time @xmath359 and the algorithm inserts entire remaining @xmath361 to @xmath364 as well as at least one smaller element .",
    "this shows that @xmath363 is increasing with @xmath43 .",
    "first , we estimate @xmath370 in terms of @xmath371 .",
    "while we form set @xmath364 , we can always insert an element from @xmath372 , unless @xmath373 , so @xmath364 has a subset @xmath320 with @xmath374 and @xmath375 , hence @xmath376 .",
    "@xmath377 is decreasing with @xmath378 , starting with @xmath379 .",
    "the case of @xmath380 is not possible , because it implies that @xmath364 has an element of @xmath186 , hence , @xmath381 .",
    "because @xmath397 , @xmath398 , this shows that we have positive deficits only for @xmath399 ( for @xmath400 the estimate refers to @xmath401 and this set contributes to the surplus ) .",
    "thus it suffices to show that @xmath402 :"
  ],
  "abstract_text": [
    "<S> first , we study geometric variants of the standard set cover motivated by assignment of directional antenna and shipping with deadlines , providing the first known polynomial - time exact solutions .    </S>",
    "<S> next , we consider the following general capacitated set cover problem . </S>",
    "<S> there is given a set of elements with real weights and a family s of sets of elements . </S>",
    "<S> one can use a set if it is a subset of one of the sets on our lists and the sum of weights is at most one . </S>",
    "<S> the goal is to cover all the elements with the allowed sets .    </S>",
    "<S> we show that any polynomial - time algorithm that approximates the un - capacitated version of the set cover problem with ratio @xmath0 can be converted to an approximation algorithm for the capacitated version with ratio @xmath1 .    </S>",
    "<S> in particular , the composition of these two results yields a polynomial - time approximation algorithm for the problem of covering a set of customers represented by a weighted @xmath2-point set with a minimum number of antennas of variable angular range and fixed capacity with ratio @xmath3    finally , we provide a ptas for the dual problem where the number of sets ( e.g. , antennas ) to use is fixed and the task is to minimize the maximum set load , in case the sets correspond to line intervals or arcs </S>",
    "<S> .    cirant1.eps /mvmovetodef </S>",
    "<S> / rmrmovetodef / rlrlinetodef / cucurrentpointdef /rad 3 def / step 10 def /fdotmv </S>",
    "<S> cu 0 rad rm rad 0 360 arc filldef /hourdup cos 2 index mul exch sin 3 2 roll muldef /orig210 410def 1 setlinewidth orig mv 120 20 hour rl orig 120 20 55 arc closepath orig mv 100 40 hour rl orig 100 40 80 arc closepath orig mv 80 70 hour rl orig 80 70 120 arc closepath orig mv 140 140 hour rl orig 140 140 160 arc closepath stroke 100 460 fdot 110 470 fdot 130 470 fdot 185 470 fdot 205 460 fdot 225 465 fdot 245 490 fdot 255 490 fdot 265 465 fdot 262 475 fdot 273 473 fdot 248 452 fdot 315 454 fdot orig mv 10 0 rm orig 10 0 360 arc 1 1 1 setrgbcolor fill orig mv 10 0 rm orig 10 0 360 arc 0 0 0 setrgbcolor stroke    cirant1.eps    cirant3.eps /mvmovetodef </S>",
    "<S> / rmrmovetodef / rlrlinetodef / cucurrentpointdef /rad 2 def /fdotmv cu 0 rad rm rad 0 360 arc cu fill mvdef /edotmv </S>",
    "<S> cu rad 0 rm rad 0 360 arc cu stroke mvdef /qdotmv cu rad dup rm 0 rad -2 mul rl rad -2 mul 0 rl 0 rad 2 mul rl closepath stroke mv 2 0 rmdef /sh2 -3.5 rm showdef    /x 40 def /y 30 def </S>",
    "<S> /z 60 def /helvetica findfont 9 scalefont setfont    100 500 mv cu 0 z rl mv 190 0 rl -8 4 rl 0 -8 rm 8 4 rl 100 560 mv -4 -8 rl 8 0 rm -4 8 rl stroke    0.5 setlinewidth    190 515 edot ( 7 ) sh 197 522 edot ( 3 ) sh 178 555 fdot ( 3 ) sh 220 525 fdot ( 2 ) sh 227 515 fdot ( 1 ) sh 227 555 qdot ( 8) sh 267 510 qdot ( 1 ) sh 260 530 qdot ( 1 ) sh    200 230 270 3500 mv cu z neg z rl mv 0 z rl strokerepeat [ 2 3]1 setdash 100 x add 500 y add mv cu cu cu cu fdot mv x neg 0 rl mv 0 y neg rl mv y y neg rl stroke    cirant1.eps </S>"
  ]
}
{
  "article_text": [
    "the conjugacy problem in the @xmath4-string braid group @xmath5 is the following decision problem :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ given two braids @xmath6 , determine , in a finite number of steps , whether @xmath7 for some @xmath8 .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    in the late sixties garside  @xcite solved the ( word and ) conjugacy problems in @xmath5 .",
    "his solution to both problems was exponential in both word length and braid index .",
    "subsequently , the efficiency of his algorithm was improved by thurston  @xcite and elrifai - morton  @xcite to give a solution to the word problem which is polynomial in both word length and braid index .",
    "all three papers @xcite ,  @xcite and  @xcite work with the following well - known presentation of @xmath5 , which we will call the _ old presentation _ :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath9 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    there is also a parallel and slightly more efficient solution to the word and conjugacy problems in @xcite , due to the authors of this paper .",
    "it uses a different presentation which we call the _ new presentation _ :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ @xmath10 _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    the terms _ old _ and _ new _ are due to krammer , who used the new presentation in @xcite . both the old and new solutions to the word problem are polynomial in word length and braid index , but the best estimates obtained for the complexity of the solution to the conjugacy problem ( see @xcite ) were rough exponential bounds .",
    "it was clear that better answers could not be obtained without more detailed information about the combinatorics , using either the old or new presentation .",
    "let @xmath11 denote the letter length of @xmath12 , as a word in the given set of generators of @xmath5 .",
    "the main result in this note is an algorithm which is polynomial in both @xmath11 and @xmath4 for computing two key integer invariants of the conjugacy class @xmath13 $ ] of @xmath12 .",
    "the invariants in question are known as the _ infimum _ and _ supremum _ ( or more informally _",
    "inf _ and _ sup _ ) , using either presentation .",
    "see @xmath142 below for precise definitions .",
    "we will also be able to compute the _ geodesic length _ ( defined in @xmath142,4 below ) for the conjugacy class in polynomial time .",
    "the reason we are able to do this requires some explanation .",
    "the method for finding _ inf _ ( resp .",
    "_ sup _ ) in both @xcite and @xcite rests on a procedure which is known as _ cycling _",
    "_ decycling _ ) .",
    "while cycling and decycling are clearly finite processes , it had not been known how many times one must iterate them to either increase inf(@xmath15 ) ( resp .",
    "decrease sup(@xmath15 ) ) for a word @xmath16 $ ] or to guarantee that a maximum ( resp .",
    "minimum ) value , denoted by inf(@xmath13 $ ] ) ( resp .",
    "sup(@xmath13 $ ] ) ) , for the conjugacy class has already been achieved . for the old presentation",
    "it had been claimed in  @xcite that the bound is 1 , however an example was given in  @xcite for which 2 cyclings were needed to increase the infimum .",
    "up to now , there were no published results which gave bounds , except for a very crude estimate in @xcite .",
    "our main result in this note is to find upper and lower bounds for the number of times one must cycle ( resp .",
    "decycle ) , using either presentation , in order to replace a given word @xmath12 with @xmath17 $ ] , where @xmath18 ( resp .",
    "@xmath19 , or be sure that @xmath12 realizes inf(@xmath13 $ ] ) ( resp .",
    "sup(@xmath13 $ ] ) ) .",
    "for the new presentation we will prove that our upper bound is the best possible one .",
    "here is an outline of this paper . in @xmath14[sec : statement of results ] we review the background and state our results in a precise way .",
    "see theorem [ thm : cyclbd ] , corollary [ cor : complexity estimates ] and corollary [ cor : geodesic length ] . in  [ sec : proof ] , we prove these three results . in  [ sec : ex ] , we give examples which prove that the bound in corollary [ cor : complexity estimates ] is sharp for the new presentation , with somewhat weaker results for the old . in @xmath14[sec : complexity issues ] we discuss the open problem of whether the solutions which we know to the conjugacy problem are polynomial in word length and braid index , and state several conjectures relating to that matter and also to the ` shortest word problem ' in @xmath5 , defined in that section .",
    "in this section we state our results precisely . to do so we need to review what has already been done .",
    "since almost all the machinery is identical in the two theories , it will be convenient to introduce unified notation , so that we may review both theories at the same time .",
    "the symbol @xmath12 will be used to indicate a word in the generators of @xmath5 , using either presentation .",
    "the element and conjugacy class which @xmath12 represents will be denoted @xmath20 and @xmath13 $ ] .",
    "the letter length of @xmath12 is @xmath11 .    1 .",
    "note that the relations in the old and new presentations are equivalences between positive words with same word - length .",
    "so the word - length is easy to compute for positive words .",
    "let @xmath21 be the semigroup defined by the same generators and relations in the given presentation .",
    "the natural map @xmath22 is injective .",
    "2 .   there is a _",
    "fundamental braid _ @xmath23 . in the old presentation , @xmath23 has length @xmath24 and is the half - twist @xmath25 in the new presentation it has length @xmath26 and it is the @xmath27-twist @xmath28 the fundamental braid admits many many braid transformations , in both the old and the new presentations , and so can be written in many ways as a positive word in the braid generators . as a result of this flexibility , it has two important properties : 1 .",
    "for any generator @xmath29 , there exist @xmath30 such that : + @xmath31 ; 2 .   for each generator @xmath29 we have @xmath32 and also @xmath33 , where @xmath34 is the automorphism of @xmath5 which is defined by @xmath35 for the old presentation and @xmath36 for the new presentation .",
    "3 .   @xmath37 .",
    "3 .   there are partial orderings ` @xmath38 ' and ` @xmath39 ' in @xmath5 . for two words @xmath40 and @xmath12 in @xmath5 we say that @xmath41 ( resp .",
    "@xmath42 ) if @xmath43 ( resp .",
    "@xmath44 ) for some @xmath45 . note that @xmath12 is a positive word if and only if @xmath46 .",
    "we denote @xmath47 ( resp .",
    "@xmath48 ) if @xmath49 ( resp .",
    "@xmath41 ) and @xmath50 . in general @xmath41 is not equivalent to @xmath42 , although if either @xmath12 or @xmath40 is a power of @xmath23 the two ordering conditions are equivalent because powers of @xmath23 commute with elements of @xmath5 up to powers of the index - shift automorphism @xmath34 .",
    "note that @xmath34 preserves the partial ordering .",
    "the symbol @xmath51 denotes the set of all initial subwords of @xmath23 , and @xmath52 the cardinality @xmath53 is @xmath54 , whereas the cardinality @xmath55 is the @xmath56 catalan number .",
    "note that @xmath57 , also @xmath58 .",
    "these are the main reasons why it is sometimes easier to work with the new presentation than the old .",
    "the _ geodesic length _",
    "@xmath59 was introduced and investigated by ruth charney in @xcite .",
    "it is the smallest integer @xmath60 such that there is a word @xmath61 representing @xmath20 , with each @xmath62 .",
    "define the geodesic length of the conjugacy class @xmath63)$ ] to be the shortest such representation for words in the conjugacy class @xmath13 $ ] .",
    "6 .   for each positive word @xmath64",
    ", there is a decomposition , called the _ left - greedy decomposition _ , @xmath65 for @xmath66 and @xmath67 , where @xmath68 has maximal length among all such decompositions , i.e.  if @xmath69 , where @xmath70 and @xmath71 , then @xmath72 .",
    "the term ` greedy ' suggests that @xmath68 has absorbed as many letters from @xmath73 as it can without leaving @xmath51 .",
    "the canonical factor @xmath68 is called the _ maximal head _ of @xmath64 . if @xmath74 in left greedy form , then @xmath75 and @xmath76 .",
    "( remark : the term _ left - canonical decomposition _ was used in @xcite and @xcite , however in recent years _ left - greedy decomposition _ has become the term of choice for the same concept in the literature , hence we now change our notation . )",
    "any word @xmath12 in the generators admits a unique _ normal form _ which solves the word problem in @xmath5 .",
    "the normal form is : @xmath77 where for each @xmath78 , the product @xmath79 is a left - greedy decomposition . the integer @xmath80 ( resp .",
    "@xmath81 ) is called the _ infimum _ of @xmath12 ( resp._supremum _ of @xmath12 ) and denoted by @xmath82 ( resp .",
    "@xmath83 ) . 8 .   to solve the conjugacy problem",
    ", we need to study the maximum and minimum values of inf and sup for the conjugacy class rather than for the word class .",
    "we consider the following two operations @xmath84 and @xmath85 , called _ cycling _ and _ decycling _ , respectively . for a given braid in normal form @xmath86 ,",
    "we define : @xmath87 in general the braids on the right hand side will _ not _ be in normal form , and must be rearranged into normal form before the operation can be repeated .",
    "* theorem * ( see  @xcite ) : [ thm : cycl ] 1 .   if @xmath12 is conjugate to @xmath40 and if @xmath88 , then repeated cycling will produce @xmath89 with @xmath90 .",
    "2 .   if @xmath12 is conjugate to @xmath40 with @xmath91 , then repeated decycling will produce @xmath92 with @xmath93 .",
    "the maximum value of @xmath94 and the minimum value of @xmath95 can be achieved simultaneously . 10 . the _ super summit set _",
    "sss(@xmath13 $ ] ) ( @xcite ) is the set of all conjugates of @xmath12 which have the maximal infimum and the minimal supremum in the conjugacy class @xmath13 $ ] .",
    "it is a proper subset of the _ summit set _",
    "ss@xmath96)$ ] which was introduced in by garside in @xcite . 11 . * theorem * ( see @xcite ) : [ thm : convex ] let @xmath97 be any two words in sss(@xmath13 $ ] = sss@xmath98)$ ]",
    ". then there is a sequence @xmath99 such that each intermediate braid @xmath100)$ ] and each @xmath101 is a conjugate of @xmath102 by a single member of @xmath51 .",
    "12 . by the theorems in @xmath142.9 and @xmath142.11",
    "one can compute sss(@xmath13 $ ] ) as follows : * obtain an element @xmath15 in the super summit set by iterating cyclings and decyclings , starting with any given word @xmath12 . *",
    "compute the whole super summit set from @xmath15 as follows : compute @xmath103 for all @xmath104 and collect the braids in the super summit set .",
    "repeat the same process with each newly obtained element , until no new elements are obtained .",
    "+ therefore there is a finite time algorithm to generate sss@xmath105 .",
    "this algorithm solves the conjugacy problem in @xmath5 .",
    "the integers @xmath106)$ ] and @xmath107)$ ] are the same for all members of sss@xmath105 and so are partial invariants of the conjugacy class @xmath13 $ ] .    in this article",
    ", we obtain an upper bound for the necessary number of cyclings and decyclings in the theorem in @xmath142.9 above .",
    "for both the old presentation and the new presentation .",
    "we denote the word length of @xmath12 by @xmath11 .",
    "our main result is :    [ thm : cyclbd ] let @xmath108 .",
    "if @xmath82 is not maximal for @xmath13 $ ] , then @xmath109 . if @xmath83 is not minimal for @xmath13 $ ] , then @xmath110 .    as immediate applications",
    ", we have :    [ cor : complexity estimates ] given any braid word @xmath108 , there is an algorithm which is polynomial in both word length and braid index for the computation of @xmath111 $ ] and @xmath112 $ ] . using the new presentation",
    "the complexity of the algorithm is @xmath113 .",
    "[ cor : geodesic length ] there is an algorithm which is polynomial in both word length and braid index for the computation of the geodesic length @xmath63)$ ] of the conjugacy class of @xmath12 , using either presentation .",
    "using the new presentation the complexity is @xmath113 .",
    "* proof of theorem [ thm : cyclbd ] : * we focus on cycling because the proof and the difficulties are essentially identical for decycling .    here is the plan of the proof .",
    "we begin with a word @xmath114 which is in normal form , so that @xmath115 and @xmath116 . by hypothesis @xmath106 ) > u$ ] , so there exists an integer @xmath1 such that @xmath117 , but @xmath118 .",
    "each instance of cycling can be realized by conjugation of @xmath12 by an element in @xmath119 , so we know there are @xmath120 such that after conjugating @xmath12 , successively , by @xmath121 we obtain @xmath122 with @xmath123 .",
    "( see lemma [ lemm : existence of r ] below . )",
    "write @xmath124 in normal form .",
    "( see lemmas [ lemm : inf(r ) ] and [ lemm : poswd ] . )",
    "our plan is to show that the sequence of lengths of the canonical factors @xmath125 for @xmath124 satisfies @xmath126 . since each @xmath127",
    ", we have @xmath128 .",
    "this places a limit on the length of the chain , i.e. @xmath129 or @xmath130 , as claimed .",
    "we used the symbols @xmath131 in the description above , but in the actual proof we will use symbols @xmath132 which differ a little bit from @xmath131 because we wish to focus on the changes in the positive part @xmath64 of @xmath12 , rather than on changes in @xmath133 :    [ lemm : existence of r ] choose any @xmath108 . let @xmath134 , where @xmath115 .",
    "then @xmath106 ) > \\inf(w)$ ] if and only if there exists a positive word @xmath135 such that @xmath136 .    by hypothesis @xmath106 ) > \\inf(w)$ ] , so there exists @xmath137 with @xmath138 let @xmath139 , where @xmath140 .",
    "then : @xmath141 which implies ( via part ( ii ) of ( 3 ) above ) that : @xmath142 set @xmath143 , so that @xmath144",
    ". then @xmath145 and @xmath146 as claimed .",
    "we will need to understand the structure of the positive word @xmath135 in lemma [ lemm : existence of r ] , and to learn how the normal form of @xmath135 is related to that of @xmath12 and its images under repeated cycling .",
    "once we understand all these issues , we will be able to extract information from @xmath135 about repeated cycling .",
    "we begin our work with several preparatory lemmas ( i.e. lemmas [ thm : head ] , [ lemm:|w|+1 ] and [ thm : inv ] . ) :    [ thm : head ] suppose that @xmath147 and that @xmath148 for some @xmath145 .",
    "let @xmath65 be in left - greedy form",
    ". then @xmath149 .",
    "see proposition 3.9 ( iv ) of  @xcite for the new presentation and proposition 2.10 of  @xcite for the old presentation .",
    "[ lemm:|w|+1 ] if @xmath108 and @xmath104 , then @xmath150    since @xmath151 and @xmath152 the assertion follows .    for each @xmath153 ,",
    "let @xmath154 denote the unique member of @xmath51 which satisfies @xmath155 .",
    "[ thm : inv ] let @xmath156 be the normal form for @xmath157",
    ". then @xmath158 and the normal form for @xmath159 is @xmath160    observe that @xmath161 implies that @xmath162 for every @xmath163 .",
    "therefore : @xmath164 because @xmath165    we continue the proof of theorem [ thm : cyclbd ] . by @xmath142.8 and lemma [ lemm:|w|+1 ] there",
    "exists a nonnegative integer @xmath1 such that @xmath166 but @xmath167 . to prove theorem  [ thm : cyclbd ] , we must show that @xmath168 is bounded above by @xmath169 .",
    "let @xmath170 , where @xmath147 and @xmath171 .",
    "by lemma [ lemm : existence of r ] we know that @xmath106 ) > \\inf(w)$ ] if and only if there exists a positive word @xmath135 such that @xmath136 . assume that among all such words we have chosen @xmath135 so that @xmath172 is minimal .",
    "we wish to describe this shortest word @xmath135 as a specific product ( in general not left - greedy ) of canonical factors .",
    "our first observation is :    [ lemm : inf(r ) ] @xmath173 .    if not , then @xmath174 for some @xmath175 and @xmath176 which contradicts the minimality of @xmath172 .",
    "[ lemm : poswd ] let @xmath177 , where @xmath178 is the maximal head of @xmath179 .",
    "then the positive word @xmath135 whose existence is guaranteed by lemma [ lemm : existence of r ] is related to the @xmath178 s as follows : @xmath180    our starting point is : @xmath181 which implies that @xmath182 . since @xmath65",
    "is left - greedy , lemma [ thm : head ] then implies that @xmath183 and so @xmath184 for some positive word @xmath185 .",
    "now : @xmath186    since @xmath187 , we conclude that : @xmath188 iterating the construction , we obtain @xmath189 for some positive word @xmath190 , also @xmath191 . putting all of these together we learn that : @xmath192 for some positive word @xmath193 .",
    "let @xmath194 so that @xmath195 a straightforward calculation shows that @xmath196 since @xmath197 , we have @xmath198 by the minimality of @xmath172 , we must have @xmath199 .",
    "lemma [ lemm : poswd ] is proved .",
    "the expression given for @xmath135 in the statement of lemma [ lemm : poswd ] is in general not in normal form .",
    "we now study the maximal head @xmath200 of @xmath201 , and related canonical factors @xmath202 . to define them ,",
    "let @xmath203 be the maximal head of @xmath204    [ thm : headne ] @xmath205    our first observation is that @xmath173 ( see lemma [ lemm : inf(r ) ] ) .",
    "since @xmath200 is the maximal head of @xmath135 , it follows that @xmath206 our second observation is that by hypothesis @xmath207 and @xmath208 is left - greedy , so that @xmath209 , which implies that @xmath210 and so : @xmath211 our third observation is that by the definition of @xmath203 we must have : @xmath212 therefore the only thing that we need to prove is that @xmath213 for @xmath214 .",
    "+ we first prove the assertion for @xmath215 .",
    "assume that @xmath216 .",
    "we will show that this leads to a contradiction to our choice of @xmath135 .",
    "+ we are given that : @xmath217 where the decomposition on the left comes from lemma [ lemm : poswd ] and the one on the right is the normal form for @xmath135 . by lemma [ thm : inv ] the normal form for @xmath218 is @xmath219    by hypothesis @xmath220 , so @xmath221 for some @xmath222 . since @xmath223 , it follows that @xmath224 and so @xmath225 let @xmath226 be the infimum of @xmath227",
    ". then    1",
    ".   @xmath228 by the above discussion , 2 .",
    "@xmath229 by lemma  [ thm : head ] , and 3 .   if @xmath230 , then @xmath231 since @xmath232 is left - greedy .    if @xmath233 , then @xmath234 which contradicts the minimality of @xmath172 .",
    ". then @xmath230 for some @xmath236 and so @xmath237 so that @xmath238 .",
    "however , by our choice of @xmath135 , we know that @xmath239 . retracing our steps we conclude that the assumption @xmath240 is impossible , so @xmath241 .",
    "it remains to attack the cases @xmath242 .",
    "the method is identical to the case @xmath215 .",
    "set @xmath243 and let @xmath40 play the role of @xmath244 .",
    "the proof of theorem  [ thm : cyclbd ] is almost complete .",
    "we have learned that @xmath245 .",
    "this implies that : @xmath246 thus the length @xmath168 of the chain must be smaller than @xmath247 , that is @xmath248 .",
    "the proof of theorem  [ thm : cyclbd ] is complete .",
    "* proof of corollary [ cor : complexity estimates ] : * the proof follows directly from theorem [ thm : cyclbd ] and the estimates in @xcite . in theorem 4.4 of @xcite",
    "it is shown that for the new presentation there is an algorithm rewriting a word into its left greedy form that is a @xmath249 solution to the word problem .",
    "the initial preparation of our algorithm puts a given word @xmath12 into its left greedy form and takes @xmath249 .",
    "notice that the number of factors is proportional to @xmath11 in the worst case . in order to compute inf",
    "we need to cycle at most @xmath3 times . after each cycling",
    "the new word so - obtained must be put into left greedy form but this time it takes only @xmath250 by corollary 3.14 of @xcite .",
    "thus the test to determine whether inf is maximal takes @xmath251 .",
    "if it is not the entire process must be repeated , but the number of such repeats , i.e. , the total increase of inf , is clearly bounded by the number of factors so the entire calculation is @xmath113 .",
    "we note that if @xmath12 is a positive word , the total increase of inf is the maximum number of powers of @xmath252 formed cyclically from @xmath12 but this number is clearly bounded by @xmath253 , so the entire calculation is @xmath249 .",
    "the discussion for the old presentation is similar and is left to the reader .",
    "* proof of corollary [ cor : geodesic length ] : * let @xmath254 be a word which is in normal form and which realizes the maximum value @xmath80 of inf and the minimum value @xmath60 of sup for the word class @xmath20 .",
    "the geodesic length @xmath59 of @xmath20 is computed in @xcite ( or see @xcite ) as follows :    * if @xmath255 then @xmath12 is a positive word of geodesic length @xmath256 . *",
    "if @xmath257 , then we may use the fact that for every @xmath258 there exists @xmath259 with @xmath260 . from this",
    "it follows that @xmath261 .",
    "using the additional fact that if @xmath34 is the index shift automorphism of @xmath142.2 , then @xmath262 , it follows that we may eliminate all of the powers of @xmath23 and replace @xmath80 of the factors @xmath263 with appropriate elements of @xmath264 , thereby achieving a shorter word .",
    "so in this case @xmath265 . * if @xmath266 then every factor @xmath263 is replaced by an appropriate element of @xmath264 .",
    "after all of these reductions the new word will be entirely negative .",
    "its geodesic length is @xmath267 .",
    "* the three cases may be combined into a single formula : + @xmath268    the above considerations relate to the length of a word class @xmath20 . however , observe that the normal form for elements in the conjugacy class @xmath13 $ ] is identical to that for the word class , moreover if @xmath269 are in the super summit set of @xmath13 $ ] then @xmath270 and @xmath271 .",
    "since the complexity of computing @xmath63)$ ] is identical to the complexity of computing @xmath106)$ ] and @xmath107)$ ] , the assertion then follows from corollary [ cor : complexity estimates ] .",
    "note that the bound we obtained for the number of cyclings and decyclings in theorem  [ thm : cyclbd ] is @xmath3 for the new presentation and @xmath272 for the old presentation . in this section",
    "we investigate whether these bounds are sharp .",
    "we first give an example of @xmath4-braid written in the new generators for which @xmath3 cyclings are required to increase the infimum .",
    "this shows that the bound given in theorem  [ thm : cyclbd ] is sharp for the new presentation . to simplify notation , use @xmath273 $ ] instead of @xmath274 consider the example @xmath275[5,4,3])([3,2])$ ] in normal form .",
    "then    @xmath276 ) ( [ 2,1][5,4,3 ] ) = ( [ 3,2,1][5,4 ] ) ( [ 4,3])\\\\ \\cycl^2(w ) & = & ( [ 4,3 ] ) ( [ 3,2,1][5,4 ] ) = ( [ 4,3,2,1 ] ) ( [ 5,4])\\\\ \\cycl^3(w ) & = & ( [ 5,4 ] ) ( [ 4,3,2,1 ] ) = [ 5,4,3,2,1 ] = \\delta\\end{aligned}\\ ] ]    so @xmath277 but @xmath278 . more generally , if @xmath279 [ n , n-1,\\ldots,3,2 ] = ( [ 2,1 ] [ n , n-1,\\ldots , 3])([3,2]),\\ ] ] then @xmath280 but @xmath281 . see figure  [ fig : ex](a ) for a sketch of the braid @xmath12 in the case @xmath282 .    in the old presentation",
    ", the example in  @xcite shows that @xmath283 but @xmath284 .",
    "there are plenty of examples for which more than 2 cyclings are required to increase the infimum .",
    "let @xmath285 denote the permutation braid corresponding to the permutation @xmath286 on @xmath287 defined by @xmath288 , consider the following example , with @xmath289 .",
    "@xmath290 then @xmath291 but @xmath292",
    ". see figure [ fig : ex](b ) for a sketch of this example in the case @xmath282 .",
    "@xmath293    for another example let @xmath289 be such that @xmath294 see figure  [ fig : ex](c ) .",
    "then @xmath295 cyclings are needed to increase the infimum .",
    "so if @xmath4 is odd , there is an example for which @xmath296 cyclings are needed .",
    "therefore the lower bound for the old presentation is at least linear in @xmath4 .",
    "we do not know an exact bound that works for every @xmath4-braid written in the old generators .",
    "it is easy to see that the upper bound in @xmath297 is 1 , that is , if @xmath298 for @xmath299 , then the infimum is already maximized . in an exhaustive search",
    ", we learned that the upper bound for @xmath300 , using the old presentation , is 2 for positive words whose normal form contains up to 5 canonical factors .",
    "in this section we consider implications of the work in the preceding sections for the complexity of the conjugacy problem in @xmath5 .      before discussing the problem",
    ", it will be helpful to review what is known about the cases @xmath301 and @xmath302 , since well - chosen examples always help one to arrive at a better understanding of a problem . in the manuscript",
    "@xcite p.j .",
    "xu introduced the new presentation for @xmath297 and used it to solve the word and conjugacy problems in @xmath297 and to study the letter lengths of shortest words in a word and conjugacy class in @xmath297 , using the new presentation .",
    "her main result in this regard was that words of shortest ` geodesic length ' ( she does nt use the term geodesic length , which was introduced after she completed her work ) are , without further work , also words of shortest letter length in the new generators .",
    "she also found growth functions for @xmath297 , both for word classes and conjugacy classes , proved that they were rational , and computed the rational functions which described them .",
    "her algorithm for the conjugacy problem was clearly polynomial in @xmath11 .",
    "in @xcite the word and conjugacy problems were solved in @xmath300 , using the new presentation and following the methods of @xcite .",
    "the authors also solved the shortest word problem in conjugacy classes . in a forthcoming paper the second and third author of this paper",
    "will prove that the algorithm for the conjugacy problem in @xcite is polynomial in @xmath11 .      in @xmath142.10 above the super summit set sss@xmath96)$ ] of the conjugacy class of @xmath108 is defined .",
    "it is a finite set and it can be computed in a systematic manner in a finite number of steps from any braid word @xmath12 which realizes @xmath106)$ ] and @xmath107)$ ] .",
    "the theorem which is quoted in @xmath142.11 above asserts that @xmath12 is conjugate to @xmath40 in @xmath5 if and only if @xmath106 ) = \\inf([v ] ) , \\ \\ \\sup([w ] ) = \\sup([v])$ ] and sss@xmath96 ) = { \\rm sss}([v])$ ] .",
    "the super summit set has a fairly transparent structure when @xmath301 , the main reason being that words in @xmath303 all have length 1 . in @xmath300",
    "the situation is a little bit more complicated , but still within reach .",
    "let @xmath304 be in the super summit set of @xmath13 $ ] and be in normal form , and let @xmath305 be the ` positive part ' of @xmath12 .",
    "notice that @xmath252 has letter length 3 and the @xmath306 are elements of @xmath119 , and so have letter length 1 or 2 .",
    "let @xmath307 ( resp .",
    "@xmath308 ) be the number of factors in @xmath309 which have length 1 ( resp .",
    "2 ) . let @xmath310 be the exponent sum of @xmath12 .",
    "clearly @xmath310 is a class invariant .",
    "since @xmath311 and since @xmath312 it follows that @xmath307 and @xmath308 are determined by the triplet @xmath313 .",
    "this makes the sss somewhat easier to understand in the case @xmath314 than in the general case .    in the general case",
    "the super summit set sss@xmath96)$ ] splits into orbits under cycling and decycling . clearly the number of such orbits and their sizes are class invariants , but unfortunately we have examples to show that they are not complete invariants .",
    "the orbits are complicated by the fact that @xmath119 contains elements of letter length @xmath315 , and the number @xmath316 of elements of letter length @xmath317 of a member of sss@xmath96)$ ] is no longer controlled by @xmath318 .",
    "we do nt know whether @xmath319 are orbit invariants , and if they can vary from one orbit to another . also , while it is known that one can pass from any orbit to any other orbit by conjugating by an appropriate product of elements of @xmath51 , it is difficult to understand which products do the job . while the super summit set is a great improvement over the summit set of @xcite , it is still too big to make it possible to study many examples .",
    "for all these reasons the complexity of the conjugacy problem remains open at this time .",
    "nevertheless , based on what we know , we conjecture :    [ con : complexity of the conjugacy problem ] there is an algorithmic solution to the conjugacy problem in @xmath5 , using the combinatorial approach which is described in this paper , which is polynomial in word length @xmath11 for each fixed braid index @xmath4 .                  w. thurston , _ finite state algorithms for the braid group _ , chapter 9 of ` word processing in groups ' , d. b. a. epstein , j. w. cannon , d. f. holt , s. v. f. levy , m. s. patterson and w. thurston .",
    "jones and bartlett , boston and london ( 1992 ) ."
  ],
  "abstract_text": [
    "<S> algorithmic solutions to the conjugacy problem in the braid groups @xmath0 were given in @xcite and in @xcite . </S>",
    "<S> this note concerns the computation of two integer class invariants , known as ` inf ' and ` sup ' . a key issue in both algorithms is the number @xmath1 of times one must ` cycle ' ( resp . ` decycle ' ) in order to either increase inf ( resp . </S>",
    "<S> decrease sup ) or to be sure that it is already maximal ( resp . </S>",
    "<S> minimal ) for the class . </S>",
    "<S> our main result is to prove that @xmath1 is bounded above by @xmath2 in the situation of @xcite and by @xmath3 in the situation of @xcite . </S>",
    "<S> it follows immediately that the computation of inf and sup is polynomial in both word length and braid index , in both algorithms . </S>",
    "<S> the integers inf and sup determine ( but are not determined by ) the shortest geodesic length for elements in a conjugacy class , as defined in @xcite , and so we also obtain a polynomial - time algorithm for computing this length .    </S>",
    "<S> march 21 , 2000 </S>"
  ]
}
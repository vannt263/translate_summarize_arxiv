{
  "article_text": [
    "in the abstract interpretation - based static analysis of logic programs , many abstract domains for encoding sharing information have been proposed .",
    "for instance , in the original and most studied @xmath1 domain of , the substitution @xmath2 is abstracted into @xmath3 , where the sharing group @xmath4 means that @xmath5 , @xmath6 , and @xmath7 share a common variable , namely @xmath8 .",
    "since @xmath1 is not very precise , it is often combined with other domains handling freeness , linearity , groundness or structural information ( see for a comparative evaluation ) .",
    "in particular , adding some kind of linearity information seems to be very profitable , both for the gain in precision and speed which can be obtained , and for the fact that it can be easily and elegantly embedded inside the sharing groups ( see ) .",
    "for example , if we know that @xmath9 , @xmath10 and @xmath11 do not share , nothing can be said after the unification with @xmath12 .",
    "however , if we also know that @xmath11 is linear , then we may conclude that @xmath9 and @xmath10 do not share after the unification .",
    "recently , the new abstract domain @xmath0 has been proposed by as a generalization of @xmath1 .",
    "it is able to encode the _ amount _ of non - linearity in a substitution , by keeping track of the exact number of occurrences of the same variable in a term .",
    "the above substitution @xmath13 is abstracted into @xmath14 by @xmath0 , with the the additional information that the variable @xmath8 occurs three times in @xmath7 .",
    "the authors provide a constructive characterization of the optimal abstract unification operator for single - binding substitutions ( i.e. , substitutions @xmath15 with a single variable @xmath9 ) .",
    "such operator is used to derive optimal ( single - binding ) abstract unification operators for both the domains @xmath16 @xcite and @xmath17 @xcite .",
    "these were the first optimality results for domains combining aliasing and linearity information .",
    "in the same paper the authors claim that computing abstract unification over @xmath0 one binding at a time yields the best abstract unification for multi - binding substitutions . in this paper",
    "we prove this claim .    to this purpose",
    ", we introduce a parallel abstract unification operator , which computes the abstract unification over @xmath0 by considering all the bindings at the same time .",
    "we prove that ( 1 ) the parallel unification operator and the standard ( sequential ) one do coincide over @xmath0 and that ( 2 ) the parallel unification operator is optimal .",
    "given a set @xmath18 , we use @xmath19 for the powerset of @xmath18 , @xmath20 for the set of finite subsets of @xmath18 and @xmath21 for the cardinality of @xmath18 .",
    "@xmath22 is the set of natural numbers with zero .",
    "a _ multiset _ is a set where repetitions are allowed .",
    "we denote by @xmath23 a multiset , where @xmath24 is a sequence with ( possible ) repetitions .",
    "we denote by @xmath25 the empty multiset .",
    "we will often use the polynomial notation @xmath26 , where @xmath27 is a sequence without repetitions , to denote a multiset @xmath18 whose element @xmath28 appears @xmath29 times .",
    "the set @xmath30 is called the _ support _ of @xmath18 and is denoted by @xmath31 .",
    "we also use the functional notation @xmath32 , where @xmath33 .    in this paper , we only consider multisets whose support is _ finite_. we denote with @xmath34 the set of all the multisets whose support is _ any finite subset _ of @xmath35 . for example , both @xmath36 and @xmath37 are elements of @xmath38 .    the new fundamental operation for multisets is the _ sum _ , defined as @xmath39 for instance , the sum of @xmath36 and @xmath37 is @xmath40 . given a multiset @xmath18 and @xmath41 ,",
    "the _ restriction _ of @xmath18 over @xmath35 , denoted by @xmath42 , is the only multiset @xmath43 such that @xmath44 and @xmath45 for each @xmath46 .",
    "we call ( directed ) _ multigraph _ a graph where multiple distinguished edges are allowed between nodes .",
    "we use the definition of multigraph which is customary in category theory @xcite .",
    "a _ multigraph _ @xmath47 is a tuple @xmath48 where @xmath49 and @xmath50 are the sets of _ nodes _ and _ edges _ respectively , @xmath51 is the _ source _ function which maps each edge to its starting node , and @xmath52 is the _ target _",
    "function which maps each edge to its ending node .",
    "we write @xmath53 to denote an edge @xmath54 such that @xmath55 and @xmath56 .",
    "we call _ in - degree _",
    "( respectively _ out - degree _ ) of a node @xmath57 the cardinality of the set @xmath58 ( respectively @xmath59 ) .    given a multigraph @xmath47 , a _ path _",
    "@xmath60 is a _ non - empty _ sequence of nodes @xmath61 such that , for each @xmath62 , there is either an edge @xmath63 or an edge @xmath64 .",
    "nodes @xmath65 and @xmath66 are the _ endpoints _ of @xmath67 , and we say that @xmath67 _ connects _ @xmath65 and @xmath66 .",
    "a multigraph is _ connected _ when all pairs of nodes are connected by at least one path .",
    "consider the multigraph @xmath47 such that @xmath68 , @xmath69 , @xmath70 and @xmath71 .",
    "it may be depicted as follows : @xmath72 \\node[group ] ( v1 ) at ( 0,0 ) { 1 } ; \\node[group ] ( v2 ) at ( 2,0 ) { 2 } ; \\node[group ] ( v3 ) at ( 1,2 ) { 3 } ; \\path ( v1 ) edge[loop left ] node{\\small a } ( v1 ) ; \\path ( v1 ) edge node{\\small b } ( v2 ) ; \\path ( v1 ) edge node{\\small e } ( v3 ) ; \\path ( v2.110 ) edge[swap , bend left ] node{{\\footnotesize}c } ( v3.270 ) ; \\path ( v2.70 ) edge[swap , bend right ] node{{\\footnotesize}d } ( v3.300 ) ; \\end{tikzpicture}\\ ] ] note that the edges @xmath73 and @xmath74 have the same starting and ending nodes , but different names .",
    "according to our definition , the graph is connected .",
    "given two sets @xmath75 and @xmath18 of concrete and abstract objects respectively , an _ abstract interpretation _",
    "@xcite is given by an approximation relation @xmath76 .",
    "when @xmath77 holds , this means that @xmath78 is a correct abstraction of @xmath73 .",
    "we work in a framework where : ( 1 ) @xmath18 is a complete lattice , ( 2 ) @xmath77 and @xmath79 imply @xmath80 , ( 3 ) each @xmath73 has a least correct abstraction in @xmath18 given by @xmath81 .",
    "given a function @xmath82 , we say that @xmath83 is a correct abstraction of @xmath84 , and we write @xmath85 , when @xmath86 we say that @xmath83 is the _ optimal _ abstraction of @xmath84 when it is correct and , for each @xmath87 , @xmath88 with the standard pointwise ordering .",
    "in the following , we fix a first order signature and a denumerable set of variables @xmath89 . given a term or other syntactic object @xmath90 , we denote by @xmath91 the set of variables occurring in @xmath90 and by @xmath92 the number of occurrences of @xmath93 in @xmath90 .",
    "when it does not cause ambiguities , we abuse the notation and prefer to use @xmath90 itself in the place of @xmath91 .",
    "for example , if @xmath94 is a term and @xmath95 , then @xmath96 should be read as @xmath97 .",
    "we denote by @xmath98 the empty substitution , by @xmath99 a substitution @xmath13 with @xmath100 , and by @xmath101 and @xmath102 the domain and range of @xmath13 respectively .",
    "let @xmath103 be the set @xmath104 , and given @xmath105 , let @xmath106 be the projection of @xmath13 over @xmath107 , i.e. , the unique substitution such that @xmath108 if @xmath109 and @xmath110 otherwise . given @xmath111 and @xmath112 two substitutions with disjoint domains , we denote by @xmath113 the substitution @xmath13 such that @xmath114 and @xmath115 if @xmath116 , for each @xmath117 .",
    "the application of a substitution @xmath13 to a term @xmath94 is written as @xmath118 or @xmath119 . given two substitutions @xmath13 and @xmath120 , their composition , denoted by @xmath121 , is given by @xmath122 .",
    "a substitution @xmath13 is idempotent when @xmath123 or , equivalently , when @xmath124 .",
    "a substitution @xmath125 is called renaming if it is a bijection from @xmath89 to @xmath89 ( this is equivalent to saying that there exists a substitution @xmath126 such that @xmath127 ) .",
    "the sets of idempotent substitutions and renamings are denoted by @xmath128 and @xmath129 respectively .",
    "given a set of equations @xmath130 , we write @xmath131 to denote that @xmath13 is a most general unifier of @xmath130 .",
    "conversely , @xmath132 .",
    "a _ position _ is a sequence of positive natural numbers .",
    "given a term @xmath94 and a position @xmath133 , we define @xmath134 inductively as follows : @xmath135 for any variable @xmath9 , an _ occurrence _ of @xmath9 in @xmath94 is a position @xmath133 such that @xmath136 .    in the rest of the paper",
    ", we use : @xmath107 , @xmath137 , @xmath138 to denote finite sets of variables ; @xmath139 for variables ; @xmath140 for term symbols ; @xmath94 for terms ; @xmath141 for substitutions ; @xmath125 for renamings .",
    "the denotational semantics of logic programs is not generally interested in substitutions , but in appropriate equivalence classes which abstract away from the particular renaming of clauses used during sld derivations . among the many choices available in the literature ( e.g.   ) , we adopt the domain of existential substitutions @xcite . given @xmath142 and @xmath143 , consider the equivalence relation @xmath144 given by @xmath145 and let @xmath146 be the quotient set of @xmath128 w.r.t .",
    "the domain @xmath147 of _ existential substitutions _ is defined as the union of all the @xmath146 for @xmath105 , namely : @xmath148 in the following we write @xmath149_{u}$ ] for the equivalence class of @xmath13 w.r.t .",
    "@xmath144 . to ease notation",
    ", we often omit braces from the sets of variables of interest when they are given extensionally .",
    "so we write @xmath149_{x , y}$ ] instead of @xmath149_{\\{x , y\\}}$ ] . given @xmath143 , @xmath150_u \\in { \\mathit{isubst}}_{\\sim}$ ] and @xmath151 , the most general unifier of @xmath13 and @xmath150_u$ ] may be obtained from the mgu of @xmath13 and a suitably chosen representative for @xmath120 , where variables not of interest are renamed apart . in formulas : @xmath152_u,\\theta)=    [ { \\mathrm{mgu}}(\\delta ' , \\theta)]_{u \\cup { \\mathit{vars}}(\\theta ) } \\enspace , \\ ] ] where @xmath153 and @xmath154 .",
    "the domain @xmath0 @xcite generalizes @xmath1 by recording multiplicity of variables in sharing groups . we will call a multiset of variables ( an element of @xmath155 ) an _ @xmath156-sharing group_. given a substitution @xmath13 and a variable @xmath157 , we denote by @xmath158 the @xmath156-sharing group @xmath159 , which maps each variable @xmath160 to the number of occurrences of @xmath93 in @xmath161 .",
    "given a set of variables @xmath107 and a set of @xmath156-sharing groups @xmath162 , we say that @xmath163_u$ ] _ correctly approximates _ a substitution @xmath149_w$ ] if @xmath164 and for each @xmath165 , @xmath166 .",
    "we write @xmath163_u \\rightslice    [ \\theta]_w$ ] to mean that @xmath163_u$ ] correctly approximates @xmath149_w$ ] .",
    "therefore , @xmath163_u \\rightslice [ \\theta]_u$ ] when @xmath167 contains all the @xmath156-sharing groups in @xmath13 , restricted to the variables in @xmath107 .",
    "the domain @xmath0 is defined as @xmath168_u \\mid u \\in { \\wp_f}({\\mathcal{v } } ) , s \\subseteq { \\wp_m}(u ) ,    s \\neq \\emptyset \\rightarrow { { \\{\\!\\!\\ { } \\newcommand{\\multir}{\\}\\!\\!\\}}\\multir}\\in s\\ } \\enspace , \\ ] ] and ordered by @xmath169_{u_1 } \\leq_\\omega [ s_2]_{u_2}$ ] iff @xmath170 and @xmath171 .    in order to ease the notation , we write @xmath172_u$ ] as @xmath173_u$ ] by omitting the braces and the empty multiset .",
    "moreover , if @xmath174 , we write @xmath175 in place of @xmath176_u \\wedge b \\in s$ ] .",
    "the best correct abstraction of a substitution @xmath149_u$ ] is @xmath177_u)=[\\ { \\theta^{-1}(v)|_u \\mid v \\in { \\mathcal{v}}\\}]_u    \\enspace .\\ ] ]    given @xmath178 and @xmath179 , we have @xmath180 , @xmath181 , @xmath182 and @xmath183 for all the other variables ( included @xmath160 ) . projecting over @xmath107 we obtain @xmath184_u)=[xz^2,x^2y , w]_u$ ] .",
    "the _ multiplicity _ of an @xmath156-sharing group @xmath43 in a term @xmath94 is defined as : @xmath185    for instance , @xmath186 .",
    "we want to find the optimal abstract operator in @xmath0 corresponding to unification .",
    "define the operator @xmath187 , which is optimal for single - binding substitutions .",
    "the cornerstone of their abstract unification is the concept of _ sharing graph _ which plays the same role of alternating paths @xcite for pair sharing analysis .",
    "the authors claim that , by applying @xmath187 one binding at a time , we get an optimal operator for multi - binding substitutions .    here , in order to prove this claim , we proceed along these steps :    1 .   we define a new operator @xmath188 which computes the abstract unification with a multi - binding substitution in one step .",
    "this is based on a generalization of the concept of sharing graph with multiple layers .",
    "for this reason , we speak of _ parallel sharing graph _ and _ parallel abstract unification _ ; 2 .   we prove that parallel abstract unification ( @xmath188 ) is actually the same as the _ sequential abstract unification _ ( @xmath187 ) ; 3 .",
    "we prove that parallel abstract unification is optimal w.r.t .",
    "concrete unification .    if @xmath163_u \\rightslice [ \\delta]_u$ ] and we unify @xmath150_u$ ] with @xmath13 , some of the @xmath156-sharing groups in @xmath167 may be glued together to obtain a bigger resultant group .",
    "it happens that the gluing may be represented by special families of labeled multigraphs which we call _ parallel sharing graphs_.    [ def : parallelsharingraph ] a _ parallel sharing graph _ for a set of @xmath156-sharing groups @xmath167 and the idempotent substitution @xmath189 is a family @xmath190}$ ] of multigraphs over the same set of nodes @xmath191 , equipped with a labeling function @xmath192 , such that    * for each node @xmath193 and each @xmath194 $ ] , the out - degree of @xmath57 in @xmath195 is equal to @xmath196 and the in - degree of @xmath57 in @xmath195 is equal to @xmath197 ; * the sets of edges @xmath198 are all pairwise disjoint ; * @xmath199 ( the _ flattening _ of @xmath200 ) is connected .    in the last condition",
    ", @xmath199 is defined as the multigraph @xmath201 where @xmath202 } e_{g^i}$ ] and @xmath203 maps @xmath204 to @xmath205 ( @xmath206 is defined analogously ) .",
    "each of the @xmath195 s which make up @xmath200 is called a _ layer _ of the sharing graph .",
    "since in this paper we only use parallel sharing graphs , in the following we will call them just _ sharing graphs_.    [ ex : psharing ] let @xmath207 and @xmath208 . consider the sharing graph @xmath209 over the set of nodes @xmath210 labeled by @xmath211 : @xmath212     \\node at ( 1,1 ) { $ g^1 $ } ;     { \\node[group , label=30:{\\tiny 0},label=330:{\\tiny   1},label = north west:{a } ] } ( xvl ) at ( 0,0 ) { $ vx$ } ;     { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   0},label = north west:{d } ] } ( yz )   at ( 0,-2 ) { $ yz$ } ;     { \\node[group , label=30:{\\tiny 0},label=330:{\\tiny   1},label = north west:{b } ] } ( xvr ) at ( 2,0 ) { $ vx$ } ;     { \\node[group , label=30:{\\tiny 0},label=330:{\\tiny   0},label = north west:{c } ] } ( u2z ) at ( 1,-1 ) { $ u^2z$ } ;     { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   0},label = north west:{e } ] } ( yuz ) at ( 2,-2 ) { $ uyz$ } ;     \\path ( xvl ) edge node{$e_1 $ } ( yz ) ;     \\path ( xvr ) edge node{$e_2 $ } ( yuz ) ;    \\end{tikzpicture }    \\hspace{2 cm }    \\begin{tikzpicture}[shgraph ]      \\node at ( 1,1 ) { $ g^2 $ } ;      { \\node[group , label=30:{\\tiny 0},label=330:{\\tiny   0},label = north west:{a } ] } ( xvl ) at ( 0,0 ) { $ vx$ } ;      { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   0},label = north west:{d } ] } ( yz )   at ( 0,-2 ) { $ yz$ } ;      { \\node[group , label=30:{\\tiny 0},label=330:{\\tiny   0},label = north west:{b } ] } ( xvr ) at ( 2,0 ) { $ vx$ } ;      { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   2},label = north west:{c } ] } ( u2z ) at ( 1,-1 ) { $ u^2z$ } ;      { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   1},label = north west:{e } ] } ( yuz ) at ( 2,-2 ) { $ uyz$ } ;      \\path ( u2z ) edge node{$e_3 $ } ( yz.0 ) ;      \\path ( u2z ) edge[bend right ] node[swap]{$e_4 $ } ( yuz ) ;      \\path ( yuz ) edge[bend right ] node[swap]{$e_5 $ } ( u2z ) ;    \\end{tikzpicture}\\ ] ] the left layer ( @xmath213 ) is for the binding @xmath214 , while the right one ( @xmath215 ) is for the binding @xmath216 .",
    "each node is annotated with its name , label , in- and out - degree .",
    "its flattening is the following connected multigraph : @xmath212        { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{a } ] } ( xvl ) at ( 0,0 ) { $ vx$ } ;        { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{d } ] } ( yz )   at ( 0,-2 ) { $ yz$ } ;        { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{b } ] } ( xvr ) at ( 2,0 ) { $ vx$ } ;        { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{c } ] } ( u2z ) at ( 1,-1 ) { $ u^2z$ } ;        { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{e } ] } ( yuz ) at ( 2,-2 ) { $ uyz$ } ;        \\path ( u2z ) edge node { $ e_3 $ } ( yz.0 ) ;        \\path ( xvl ) edge node { $ e_1 $ } ( yz ) ;        \\path ( xvr ) edge   node { $ e_2 $ } ( yuz ) ;        \\path ( u2z ) edge[bend right ] node[swap]{$e_4 $ } ( yuz ) ;",
    "\\path ( yuz ) edge[bend right ] node[swap]{$e_5 $ } ( u2z ) ;        \\end{tikzpicture}\\ ] ]    let us motivate the three conditions of definition  [ def : parallelsharingraph ] . if @xmath163_u \\rightslice [ \\delta]_u$ ] and we compute @xmath217_u,\\theta)$ ] , each @xmath195 represents a possible way the sharing groups in @xmath120 may be joined together as a result of binding @xmath218 , that is unifying @xmath219 and @xmath220 .",
    "we may restrict our attention to the case when , as a result of the unification , variables are only bound to other variables , not to composed terms . in other words , we assume that , for each position @xmath133 , the term @xmath221 is a variable iff @xmath222 is a variable .",
    "each node in the sharing graph represents a variable @xmath223 such that @xmath224 is the node label .",
    "each edge @xmath225 in @xmath195 represents a position @xmath133 such that @xmath226 and @xmath227 .",
    "the result is that the variables @xmath228 and @xmath229 are aliased , hence the @xmath230-sharing groups @xmath231 and @xmath232 are joined together .    according to this correspondence",
    ", the number of edges departing from @xmath57 should be equal to the number of occurrences of @xmath223 in @xmath219 , that is @xmath196 .",
    "analogously for the in - degree of nodes .",
    "this justifies the first condition in the definition .",
    "the second condition ensures that , in the flattening , no edges share the same identifier and therefore @xmath233 and @xmath206 are well defined .",
    "remember that , since an edge is just an element of a set with associated source and target nodes , this does not preclude the possibility to have different edges with the same source and target nodes .",
    "finally , the third condition is needed since we want each sharing graph to represent a single non - empty sharing group .",
    "if the flattening were not connected , some pairs of variables would not be aliased , and the result of the unification of @xmath13 with @xmath120 would contain more than one non - empty sharing group .    [ ex : psharing2 ] consider the sharing graph in example [ ex : psharing ] .",
    "let us associate to each node @xmath57 the variable @xmath223 , and consider the substitution @xmath234 this substitution is built according to the variables that appear in the nodes .",
    "for instance , the first binding @xmath235 suggests that the variable @xmath8 appears in the nodes @xmath73 ( twice ) and @xmath236 .",
    "we now want to unify @xmath120 with @xmath13 .",
    "the first binding @xmath214 in @xmath13 unifies @xmath237 with @xmath238 .",
    "this causes variables @xmath239 and @xmath240 to be aliased , exactly as described by the arrows @xmath241 and @xmath242 in the left graph .",
    "the second binding @xmath216 unifies @xmath243 with @xmath244 , which yields the aliasing of the pairs @xmath245 , @xmath246 and @xmath247 , as described by the arrows @xmath248 , @xmath249 and @xmath250 . by transitivity , all pairs of variables are aliased .",
    "the _ resultant @xmath156-sharing group _ of the sharing graph @xmath200 is @xmath251    consider again the sharing graph in example [ ex : psharing ] .",
    "the resultant sharing group is @xmath252 .",
    "this is exactly the only non - empty sharing group in @xmath253_u)$ ] where @xmath254 and @xmath255    given a set of @xmath156-sharing groups @xmath167 and an idempotent substitution @xmath13 , the _ abstract parallel unification _ of @xmath167 and @xmath13 is given by @xmath256 this is lifted to the domain @xmath257 : @xmath258_u,\\theta ) = [ { \\mathrm{mgu_p}}(s   \\cup \\ { { \\{\\!\\!\\ { } \\newcommand{\\multir}{\\}\\!\\!\\}}v \\multir \\mid       v \\in { \\mathit{vars}}(\\theta ) \\setminus u\\ } , \\theta)]_{u \\cup { \\mathit{vars}}(\\theta ) }       \\enspace .\\ ] ]    it is worth noting that , given any set of @xmath156-sharing groups @xmath167 and substitution @xmath13 , there exist many different sharing graphs for @xmath167 and @xmath13 .",
    "each sharing graph yields a resultant sharing group which must be included in the result of the abstract unification operator .",
    "of course , different sharing graphs may give the same resultant sharing group .",
    "the abstract unification operator is defined by collecting all the resultant sharing groups .",
    "[ ex : two ] we show another sharing graph for the same @xmath167 and @xmath13 of example  [ ex : psharing ] .",
    "we omit from the picture the names of edges and nodes , since they are not relevant here : @xmath212",
    "\\node at ( 0.5,1 ) { $ g^1 $ } ;      { \\node[group , label=30:{\\tiny 0},label=330:{\\tiny   1},label = north west : { } ] } ( xv ) at ( 0,0 ) { $ vx$ } ;      { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   0},label = north west : { } ] } ( yz )   at ( 0,-2 ) { $ yz$ } ;      { \\node[group , label=30:{\\tiny 0},label=330:{\\tiny   0},label = north west : { } ] } ( u2z ) at ( 1,-1 ) { $ u^2z$ } ;      \\path ( xvl ) edge   ( yz ) ;    \\end{tikzpicture }    \\hspace{4 cm }    \\begin{tikzpicture}[shgraph ]      \\node at ( 0.5,1 ) { $ g^2 $ } ;      { \\node[group , label=30:{\\tiny 0},label=330:{\\tiny   0},label = north west : { } ] } ( xv ) at ( 0,0 ) { $ vx$ } ;      { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   0},label = north west : { } ] } ( yz )   at ( 0,-2 ) { $ yz$ } ;      { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   2},label = north west : { } ] } ( u2z ) at ( 1,-1 ) { $ u^2z$ } ;      \\path ( u2z ) edge[bend left ]   ( yz ) ;      \\path ( u2z ) edge[loop right ] ( u2z ) ;    \\end{tikzpicture}\\ ] ] the resultant sharing group is @xmath259 .",
    "it is worth noting that the domain @xmath0 is not amenable to a direct implementation .",
    "actually , it may be the case that , even the mgu of a finite set of @xmath156-sharing groups with a single - binding substitution generates an infinite set of @xmath156-sharing groups ( see example  [ ex : infinite ] later ) .",
    "however , it is an invaluable theoretical device to study the abstract operators for its abstractions , such as @xmath16 and @xmath17 .",
    "[ ex : infinite ] it holds that @xmath260 . actually , for each @xmath261 , the following is a single - layer sharing graph : @xmath212    { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   1},label = north west : { } ] } ( v1 ) at ( 1,0 ) { $ xy$ } ;    { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   1},label = north west : { } ] } ( v2 ) at ( 2,0 ) { $ xy$ } ;    \\node ( vnull ) at ( 3,0 ) { $ \\cdots$ } ;    { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   1},label = north west : { } ] } ( v3 ) at ( 4,0 ) { $ xy$ } ;    { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   1},label = north west : { } ] } ( v4 ) at ( 5,0 ) { $ xy$ } ;    \\path ( v1 ) edge ( v2 ) ;    \\path ( v2 ) edge ( vnull ) ;    \\path ( vnull ) edge ( v3 ) ;    \\path ( v3 ) edge ( v4 ) ;    \\draw [ rounded corners](v4 ) -- + + ( 0,0.6 ) -- + + ( -4,0 ) -- ( v1 ) ;    \\draw [ decorate , decoration = brace , aspect=3,- ] ( 5.5,-0.6 ) -- ( 0.5,-0.6 ) ;    \\node at ( 3,-1 ) { $ i$ nodes } ; \\end{tikzpicture}\\ ] ]      for concrete substitutions , unification may be performed one binding at a time . on an abstract domain ,",
    "computing one binding at a time generally incurs in a loss of precision .",
    "however , there are well known domains when this does not happen , such as @xmath262 @xcite and @xmath1 .",
    "we will show that computing one binding at a time does not cause loss of precision on the abstract domain @xmath0 .",
    "given a set of @xmath156-sharing groups @xmath167 and an idempotent substitution @xmath13 , the _ abstract sequential unification _ of @xmath167 and @xmath13 , denoted by @xmath263 , is given by : @xmath264    the definition may be lifted to the domain @xmath257 as for @xmath188 .",
    "it is immediate to check that @xmath188 and @xmath187 are equivalent for single - binding substitutions .",
    "we will prove that this holds for any substitution .",
    "in @xcite the abstract sequential unification @xmath187 has been introduced starting from the definition of a sharing graph for single - binding unification .",
    "this is essentially a sharing graph with a single layer .",
    "hence , it is immediate to check that the definition of @xmath187 given above is the same as the definition of @xmath187 given by .    before introducing the formal proof of coincidence between sequential and parallel abstract unification , we try to convey the intuitive idea behind it with an example .",
    "consider again the sharing graph @xmath200 given in example [ ex : psharing ] for @xmath265 and @xmath208 .",
    "for the sake of conciseness , we can draw @xmath200 with a single picture , omitting the in- and out - degree annotations on the nodes , and with the edges in different styles , according to the layers they come from : @xmath212        { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{a } ] } ( xvl ) at ( 0,0 ) { $ vx$ } ;        { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{d } ] } ( yz )   at ( 0,-2 ) { $ yz$ } ;        { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{b } ] } ( xvr ) at ( 2,0 ) { $ vx$ } ;        { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{c } ] } ( u2z ) at ( 1,-1 ) { $ u^2z$ } ;        { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{e } ] } ( yuz ) at ( 2,-2 ) { $ uyz$ } ;        \\path ( u2z ) edge node { $ e_3 $ } ( yz.0 ) ;        \\path ( xvl ) edge[dashed ] node { $ e_1 $ } ( yz ) ;        \\path ( xvr ) edge[dashed ]   node { $ e_2 $ } ( yuz ) ;        \\path ( u2z ) edge[bend right ] node[swap]{$e_4 $ } ( yuz ) ;        \\path ( yuz ) edge[bend right ] node[swap]{$e_5 $ } ( u2z ) ;        \\end{tikzpicture}\\ ] ] as we said before , the resultant sharing group of @xmath200 is @xmath252 .",
    "the same sharing group may be obtained by first computing @xmath266 and later @xmath267 .",
    "consider the three connected components in the multigraph @xmath213 , corresponding to the dashed arrows : @xmath212                  { \\node[group , label=30:{\\tiny 0},label=330:{\\tiny   1},label = north west:{a } ] } ( xvl ) at ( 0,0 ) { $ vx$ } ;          { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   0},label = north west:{d } ] } ( yz )   at ( 0,-2 ) { $ yz$ } ;          { \\node[group , label=30:{\\tiny 0},label=330:{\\tiny   0},label = north west:{b } ] } ( xvr ) at ( 4,0 ) { $ vx$ } ;          { \\node[group , label=30:{\\tiny 0},label=330:{\\tiny   1},label = north west:{c } ] } ( u2z ) at ( 2,0 ) { $ u^2z$ } ;          { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   0},label = north west:{e } ] } ( yuz ) at ( 4,-2 ) { $ uyz$ } ;          \\node at ( 0,1 ) { $ g_1 ^ 1 $ } ;          \\node at ( 2,1 ) { $ g_1 ^ 2 $ } ;          \\node at ( 4,1 ) { $ g_1 ^ 3 $ } ;          \\path ( xvl ) edge[dashed ] node { $ e_1 $ } ( yz ) ;          \\path ( xvr ) edge[dashed ] node { $ e_2 $ } ( yuz ) ;    \\end{tikzpicture}\\ ] ] each of them alone may be viewed as a sharing graph with a single layer for the substitution @xmath268 . therefore , @xmath269 , @xmath270 and @xmath271 are elements of @xmath272 .",
    "now , in the original sharing graph , we collapse these connected components : @xmath212       { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{a } ] } ( xvl ) at ( 0,0 ) { $ vx$ } ;       { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{d } ] } ( yz )   at ( 0,-2 ) { $ yz$ } ;       { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{b } ] } ( xvr ) at ( 4,0 ) { $ vx$ } ;       { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{c } ] } ( u2z ) at ( 2,0 ) { $ u^2z$ } ;       { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{e } ] } ( yuz ) at ( 4,-2 ) { $ uyz$ } ;       \\node[group , fit={(xvl)(yz ) } , inner sep=10pt , label = north west:$n_1 $ ] ( vxyz ) { } ;       \\node[group , fit={(u2z ) } , inner sep=10pt , label = north west:$n_3 $ ] ( u2zbig ) { } ;       \\node[group , fit={(xvr ) ( yuz ) } , inner sep=10pt ,   label = north west:$n_3 $ ] ( uvxyz ) { } ;       \\path ( xvl ) edge[dashed ] node { $ e_1 $ } ( yz ) ;       \\path ( xvr ) edge[dashed ] node { $ e_2 $ } ( yuz ) ;       \\path ( u2z ) edge node { $ e_3 $ } ( yz.0 ) ;       \\path ( u2z ) edge[bend right ] node[swap]{$e_4 $ } ( yuz ) ;       \\path ( yuz ) edge[bend right ] node[swap]{$e_5 $ } ( u2z ) ;    \\end{tikzpicture}\\ ] ] and we get @xmath212       { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   0},label = north west:{$n_1 $ } ] } ( vxyz )   at ( 0,-1 ) { $ vxyz$ } ;       { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   2},label = north west:{$n_2 $ } ] } ( u2z ) at ( 2,0 ) { $ u^2z$ } ;       { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   1},label = north west:{$n_3 $ } ] } ( uvxyz ) at   ( 4,-1 ) { $ uvxyz$ } ;       \\path ( u2z ) edge node { $ e_3 $ } ( vxyz.0 ) ;       \\path ( u2z ) edge[bend right ] node[swap]{$e_4 $ } ( uvxyz ) ;       \\path ( uvxyz ) edge[bend right ] node[swap]{$e_5 $ } ( u2z ) ;       \\end{tikzpicture}\\ ] ] which is a sharing graph for @xmath272 and @xmath273 .",
    "note that , in this new sharing graph , the nodes correspond to the connected components of @xmath213 and the edges are the same as in the original @xmath215 , but with different source and target .",
    "the edge @xmath248 from @xmath73 to @xmath74 is now an edge from @xmath274 to @xmath65 , since @xmath74 is in the first connected component and @xmath73 in the second one .",
    "we obtain , as expected , that @xmath275 .",
    "[ ex : three ] we now show an example of the converse , i.e. , how to move from sequential to parallel unification .",
    "assume @xmath276 and @xmath277 . the following are single - layer sharing graphs for @xmath167 and @xmath268 : @xmath212               { \\node[group , label=30:{\\tiny 0},label=330:{\\tiny   1},label = north west:{a } ] } ( xvl ) at ( 0,0 ) { $ vx$ } ;       { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   0},label = north west:{d } ] } ( yz )   at ( 0,-2 ) { $ uvyz$ } ;       { \\node[group , label=30:{\\tiny 0},label=330:{\\tiny   1},label = north west:{b } ] } ( xuv ) at ( 4,0 ) { $ uvx$ } ;       { \\node[group , label=30:{\\tiny 0},label=330:{\\tiny   0},label = north west:{c } ] } ( u2z ) at ( 2,0 ) { $ u^2 $ } ;       { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   0},label = north west:{e } ] } ( yu ) at ( 4,-2 ) { $ uy$ } ;       \\node at ( 0,1 ) { $ { { \\mathcal g}}_1 $ } ;       \\node at ( 2,1 ) { $ { { \\mathcal g}}_2 $ } ;       \\node at ( 4,1 ) { $ { { \\mathcal g}}_3 $ } ;       \\path ( xvl ) edge node{$e_1 $ } ( yz ) ;       \\path ( xuv ) edge node{$e_2 $ } ( yu ) ;    \\end{tikzpicture}\\ ] ] note that we have chosen disjoint sets of nodes @xmath278 , @xmath279 and @xmath280 , and disjoint sets of edges @xmath281 , @xmath282 and @xmath283 . by definition ,",
    "the corresponding resultant sharing groups , i.e. , @xmath284 , @xmath285 and @xmath286 are elements of @xmath287 . now consider the following sharing graph @xmath200 for @xmath272 and the binding @xmath288 : @xmath289              \\node at ( 2,1.5 ) { $ { { \\mathcal g}}$ } ;      { \\node[group , label=30:{\\tiny 4},label=330:{\\tiny   1},label = north west:{$n_1 $ } ] } ( vxyz ) at ( 0,0 ) { $ uv^2xyz$ } ;            { \\node[group , label=30:{\\tiny 0},label=330:{\\tiny   2},label = north west:{$n_2 $ } ] } ( u2z ) at ( 2,0 ) { $ u^2 $ } ;      { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   2},label = north west:{$n_3 $ } ] } ( u2vxy ) at ( 4,0 ) { $ u^2vxy$ } ;      \\path ( vxyz ) edge[loop left ] node{$e_7 $ } ( vxyz ) ;      \\path ( u2z.north ) edge[bend right ] node[swap]{$e_3 $ } ( vxyz.north ) ;      \\path ( u2z ) edge node{$e_4 $ } ( vxyz ) ;      \\path ( u2vxy ) edge[loop right ] node{$e_5 $ } ( u2vxy ) ;      \\path ( u2vxy.south ) edge[bend left ] node[swap]{$e_6 $ } ( vxyz.south ) ;     \\end{tikzpicture}\\ ] ] we need to build a sharing graph for @xmath167 and @xmath290 from these pieces .",
    "the idea is to replace , in the graph @xmath200 , the nodes @xmath65 , @xmath274 and @xmath291 with the graphs @xmath292 , @xmath293 and @xmath294 respectively : @xmath212         { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{a } ] } ( xvl ) at ( 0,0 ) { $ vx$ } ;      { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{d } ] } ( yz )   at ( 0,-2 ) { $ uvyz$ } ;      { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{b } ] } ( xuv ) at ( 4,0 ) { $ uvx$ } ;      { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{c } ] } ( u2zbis ) at ( 2,0 ) { $ u^2 $ } ;      { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{e } ] } ( yu ) at ( 4,-2 ) { $ uy$ } ;           \\path ( xvl ) edge[dashed ] node{$e_1 $ } ( yz ) ;      \\path ( xuv ) edge[dashed ] node{$e_2",
    "$ } ( yu ) ;      { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{$n_1$}]}[fit={(xvl)(yz ) } , inner sep=10pt ] ( vxyz )       { } ;            { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{$n_2$}]}[fit={(u2zbis ) } , inner sep=10pt ] ( u2z ) { } ;      { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{$n_3$}]}[fit={(xuv)(yu ) } , inner sep=10pt ] ( u2vxy ) { } ;      \\path ( u2z ) edge[bend right ] node[swap]{$e_3 $ } ( vxyz ) ;      \\path ( u2z ) edge[bend left ] node{$e_4 $ } ( vxyz ) ;      \\path ( u2vxy ) edge[loop right ] node{$e_5 $ } ( u2vxy ) ;      \\path ( u2vxy ) edge[bend left ] node[swap]{$e_6 $ } ( vxyz ) ;      \\path ( vxyz ) edge[loop left ]   node{$e_7 $ } ( vxyz ) ;     \\end{tikzpicture}\\ ] ] for each edge in @xmath200 we need to specify its target and source as a node in @xmath295 , since giving only the connected component is not enough .",
    "for example , the target of @xmath241 should be either @xmath78 or @xmath74 .",
    "we may choose the targets freely , subject to the conditions on the in-/out- degree of nodes .",
    "since @xmath296 and @xmath297 , among @xmath248 , @xmath249 , @xmath298 and @xmath299 , three edges should be targeted at @xmath300 and one should be targeted at @xmath301 . among the many others , this is a possible sharing graph , where the different layers are depicted trough different line styles : @xmath212         { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{a } ] } ( xvl ) at ( 0,0 ) { $ vx$ } ;      { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{d } ] } ( yz )   at ( 0,-2 ) { $ uvyz$ } ;      { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{b } ] } ( xuv ) at ( 4,0 ) { $ uvx$ } ;      { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{c } ] } ( u2z ) at ( 2,0 ) { $ u^2 $ } ;      { \\node[group , label=30:{\\tiny } , label=330:{\\tiny   } , label = north west:{e } ] } ( yu ) at ( 4,-2 ) { $ uy$ } ;           \\path ( xvl ) edge[dashed ] node{$e_1 $ } ( yz ) ;      \\path ( xuv ) edge[dashed ] node{$e_2 $ } ( yu ) ;      \\path ( u2z ) edge node[swap]{$e_3 $ } ( xv ) ;      \\path ( u2z ) edge[bend left ] node{$e_4 $ } ( yz ) ;      \\path ( xuv ) edge[bend left ] node{$e_6 $ } ( yz ) ;      \\path(yu.east ) edge[bend right ] node[swap]{$e_5 $ } ( xuv.east ) ;      \\path ( yz ) edge[loop left ]   node{$e_7 $ } ( yz ) ;     \\end{tikzpicture}\\ ] ] note that the self loop on the node @xmath291 has become an edge from @xmath302 to @xmath303 .",
    "the ideas presented in the previous examples are formalized in the following result .",
    "given a set of @xmath156-sharing groups @xmath167 and an idempotent substitution @xmath13 , we have that [ lem : mgucomp ] @xmath304 .",
    "if @xmath305 the result easily follows since @xmath306 . in the case",
    "@xmath307 , we separately prove the two sides of the equality .    *",
    "first part : @xmath308 inclusion .",
    "* let @xmath309 .",
    "we want to prove that @xmath310 .",
    "to this aim , we will provide a sharing graph @xmath311 for @xmath312 and @xmath13 such that @xmath313 .",
    "let @xmath314 .",
    "by definition , there exists a sharing graph @xmath315}$ ] such that @xmath316 .",
    "we decompose @xmath213 into its connected components @xmath317 .",
    "note that each @xmath318 , labeled with the obvious restriction of @xmath319 , is a sharing graph for @xmath167 and @xmath320 , therefore @xmath321 .",
    "we now show a sharing graph @xmath311 for @xmath312 and @xmath13 and prove that @xmath313 . for any @xmath322 $ ] , let @xmath323 be the multigraph obtained from @xmath195 by collapsing each of the connected components @xmath324 to a single node . formally :    * @xmath325 ; * @xmath326 ; * @xmath327 iff @xmath328 ; * symmetrically for @xmath329 .",
    "we want to prove that @xmath330}$ ] , endowed with the labeling function @xmath331 , is a sharing graph for @xmath312 and @xmath13 . by definition of sharing graph",
    ", we need to check that : first , the conditions on the out - degree and the in - degree hold for each node ; second , the sets of edges are pairwise disjoint ; third , the flattening is connected .",
    "* first condition .",
    "* we now show that the conditions on the out - degree and the in - degree of the nodes hold . given any node @xmath332",
    "$ ] we have that the out - degree of @xmath333 in @xmath323 is @xmath334 symmetrically , we have that the in - degree of @xmath333 in @xmath323 is @xmath335 .",
    "* second condition . *",
    "it is immediate to check that the sets of edges @xmath336 are pairwise disjoint .",
    "* third condition .",
    "* we prove that @xmath337 is connected .",
    "assume that we want to find a path from @xmath338 to @xmath333 .",
    "since @xmath339 is connected , there is a path @xmath67 from some @xmath340 to some @xmath341 .",
    "a path from @xmath338 to @xmath333 may be obtained in two steps :    1 .   by replacing each node @xmath57 in @xmath67 with @xmath342 where @xmath342 is the unique @xmath343 $ ] such that @xmath344 ; 2 .   by replacing each subsequence @xmath345 with a single node @xmath342 .",
    "such a situation may arise when @xmath67 contains the subsequence @xmath346 with @xmath347 for some @xmath348 .",
    "the corresponding edge @xmath349 may not exists in @xmath350 , but being a self - loop it may be deleted .    finally , we need to show that @xmath313 .",
    "it is easy to check that @xmath351 } l_{{{\\mathcal g}}'}(i)={\\biguplus}_{i \\in [ 1,k ] } { \\mathit{res}}(g^1_i)=    { \\biguplus}_{i \\in [ 1,k ] } { \\biguplus}_{n \\in n_{g^1_i } } l_{{{\\mathcal g}}}(n)=    { \\biguplus}_{n \\in n_{{{\\mathcal g } } } } l_{{{\\mathcal g}}}(n)={\\mathit{res}}({{\\mathcal g}})$ ] .    *",
    "second part : @xmath352 inclusion .",
    "* let @xmath353 and @xmath354 where @xmath355 .",
    "we show that there exists a sharing graph @xmath350 for @xmath167 and @xmath356 such that @xmath313 .    by definition",
    ", there is a sharing graph @xmath357}$ ] for @xmath272 and @xmath13 such that @xmath358 . since @xmath353",
    ", for each node @xmath359 we have a sharing graph @xmath360 such that @xmath361 . without loss of generality",
    ", we may choose these graphs in such a way that the sets @xmath362 are pairwise disjoint and disjoint from @xmath191 .",
    "for each multigraph @xmath195 , with @xmath322 $ ] , we build a new multigraph @xmath363 obtained by replacing each node @xmath364 in @xmath195 with the set of nodes of the generating graph @xmath360 .",
    "then , we pack the @xmath363 s and @xmath360 s into a sharing graph @xmath200 .",
    "formally , @xmath365}$ ] such that :    * @xmath366 ; * @xmath367 is the union of the graphs @xmath360 ; * for @xmath322 $ ] , @xmath368 ; * for @xmath322 $ ] , @xmath369 is chosen freely , subject to the following conditions : * * if @xmath370 then @xmath371 is a node in @xmath362 ; * * the out - degree of each node @xmath57 in @xmath363 is @xmath372 . +",
    "this is always possible since @xmath373 and therefore @xmath374 .",
    "symmetrically for @xmath375 . *",
    "the labeling function @xmath376 is the disjoint union of all the @xmath377 .",
    "namely , @xmath378 iff @xmath379 .",
    "we now want to prove that @xmath350 is a sharing graph for @xmath380 and @xmath167 .",
    "the only thing we need to prove is that @xmath337 is connected ( the other conditions hold by construction ) .",
    "assume that there is an edge @xmath381 in @xmath382 , and consider nodes @xmath383 and @xmath384 .",
    "we prove that there is a path in @xmath337 from @xmath385 to @xmath386 . actually , there is in @xmath387 at least an edge @xmath388 from a node @xmath389 to @xmath390 .",
    "since @xmath323 and @xmath391 are connected , there are in @xmath392 two paths @xmath393 and @xmath394 .",
    "therefore @xmath395 is a path in @xmath337 from @xmath385 to @xmath386 .",
    "now , given two generic nodes @xmath396 where @xmath397 and @xmath384 , we know there is a path @xmath67 in @xmath199 from @xmath338 to @xmath333 . applying the result of the previous paragraph to each edge in @xmath67",
    ", we immediately get that @xmath385 and @xmath386 are connected .",
    "finally it is easy to check that @xmath313 and this concludes the proof of the theorem .    by exploiting the previous lemma , it is now a trivial task to show that parallel and sequential unification compute the same result .",
    "[ th : coincide ] the abstract operators @xmath187 and @xmath188 coincide .",
    "the proof is by induction on the number of bindings in @xmath13 .",
    "clearly @xmath398 .",
    "assume that @xmath399 for each @xmath167 .",
    "it follows that @xmath400}\\\\      = { \\mathrm{mgu_p}}({\\mathrm{mgu_p}}(s,\\{x / t\\}),\\theta ) \\quad &       \\text{[by induction hypothesis]}\\\\      = { \\mathrm{mgu_p}}(s,\\{x / t\\ } \\cup \\theta ) &       \\text{[by lemma \\ref{lem : mgucomp } ] }    \\end{array}\\ ] ] and this proves the theorem .",
    "an immediate consequence of theorem [ th : coincide ] is that @xmath188 is correct , since it coincides with @xmath187 which has been proved correct in @xcite .",
    "we now want to prove that it is optimal .",
    "first , we prove optimality in the special case of @xmath401_u,\\theta)$ ] with @xmath402 .",
    "next , we extend this result to the general case .    in the example  [ ex : psharing2 ] , we have already shown how to build a substitution @xmath120 which mimics the effect of a sharing graph .",
    "we now give another example , introducing the terminology to be used in the proof of optimality to come .",
    "[ ex : optimality ] we refer to example [ ex : three ] .",
    "let @xmath403 be the set of variables of interest .",
    "we show how to build a substitution @xmath120 such that @xmath163_u \\rightslice [ \\delta]_u$ ] and @xmath404_u,\\theta))$ ] .    for each node @xmath405 of the sharing graph in , we consider a different fresh variable @xmath223 . for any variable @xmath406",
    ", we define @xmath407 as the following term of arity @xmath408 : @xmath409 since @xmath410 is the label of the node @xmath57 and @xmath411 is the multiplicity of @xmath412 in such a label , we have : @xmath413 for the variables in @xmath414 we define @xmath120 in a different way .",
    "consider the first layer of the sharing graph , corresponding to the binding @xmath214 , and denote by @xmath415 an injective map from occurrences of variables @xmath223 in @xmath416 to edges targeted at @xmath57 . in this case",
    ", we have @xmath417 and @xmath418 , where @xmath419 and @xmath420 are the positions of @xmath421 and @xmath422 in @xmath416 .",
    "analogously , we define @xmath423 for the binding @xmath288 . in this case @xmath424 and a possible @xmath423 is @xmath425 . in this case ,",
    "other values for @xmath423 are possible : we could exchange the assignments for @xmath426 , @xmath427 and @xmath428 freely .",
    "we now define @xmath429 . here",
    "we denote with @xmath430 the result of replacing , in the term @xmath94 , the variable in position @xmath133 with the variable associated to the source of @xmath431 .",
    "analogously we define @xmath432 .",
    "note that the terms @xmath433 and @xmath434 are obtained by replacing in @xmath6 and @xmath5 each occurrence @xmath133 of variable @xmath412 with a variant of @xmath407 .",
    "we call @xmath435 the term which replaces @xmath10 in position @xmath436 of @xmath6 , i.e. , @xmath437 .",
    "analogously , we define @xmath438 , @xmath439 , and @xmath440 for the replacements in @xmath5 of @xmath10 in position @xmath436 , @xmath10 in position @xmath441 and @xmath93 in position @xmath442 respectively",
    ". this terminology will be used in the proof .",
    "we have that @xmath163_u \\rightslice [ \\delta]_u$ ] and @xmath443 is @xmath444 in the last formula , we have an equation @xmath445 for each edge @xmath446 in the sharing graph .",
    "since the graph is connected , we pick a variable , say it is @xmath421 , and we solve the set of equations w.r.t .  that variable , obtaining : @xmath447 we get @xmath448_u,\\theta ) ) = [ u^5v^3x^2r^2z]_u$ ] , where @xmath449 .",
    "the above example shows how to find a substitution whose fresh variables are aliased according to the arrows in a sharing graph .",
    "the same idea is exploited in the next theorem for proving the optimality of the abstract unification operator @xmath401_u,\\theta)$ ] .",
    "[ th : lpopt ] the parallel unification @xmath401_u,\\theta)$ ] is optimal w.r.t .",
    "@xmath450 , under the assumption that @xmath402 , that is : @xmath451_u,\\theta)~\\exists [ \\delta]_u \\in { \\mathit{isubst}}_{\\sim}.~[s]_u \\rightslice   [ \\delta]_u \\text { and } b \\in \\alpha_{\\mathrm{\\omega}}({\\mathrm{mgu}}([\\delta]_u,\\theta ) ) \\enspace .\\ ] ]    let @xmath452 and @xmath453_u,\\theta)$ ] . by definition of @xmath188",
    ", there exists a sharing graph @xmath190}$ ] such that @xmath454 .",
    "let @xmath455 .",
    "we want to define a substitution @xmath120 such that @xmath163_u    \\rightslice [ \\delta]_u$ ] and @xmath456_u,\\theta))$ ] .",
    "if @xmath457 this is trivial , just take @xmath458 , hence we assume that @xmath459 .",
    "the structure of the proof is as follows : first , we define a substitution @xmath120 which unifies with @xmath13 ; second , we show that @xmath120 is approximated by @xmath163_u$ ] , namely , @xmath163_u",
    "\\rightslice [ \\delta]_u$ ] ; third , we show that @xmath456_u,\\theta))$ ]",
    ".    * first part .",
    "* we define a substitution @xmath120 which unifies with @xmath13 . for each node",
    "@xmath460 we consider a fresh variable @xmath461 and we denote by @xmath138 the set of all these new variables .    for any @xmath462",
    "we define as @xmath463 the term of arity @xmath464 given by : @xmath465    for any @xmath466 , consider an injective function @xmath467 which maps each occurrence of a variable @xmath223 in @xmath220 to an edge in @xmath198 targeted at @xmath57 .",
    "note that the map exists since the number of occurrences of @xmath223 in @xmath220 is exactly @xmath468 which is the in - degree of @xmath57 .",
    "then , we define @xmath219 as @xmath469 where @xmath469 is the result of replacing , in @xmath220 , the variable in position @xmath133 with the variable associated to the source of @xmath470 .",
    "the image of @xmath467 is the set of all the edges in @xmath195 .",
    "given an edge @xmath225 , the sharing group associated to @xmath274 should contain at least a variable @xmath471 , hence @xmath229 will occur in @xmath463 and @xmath236 will be @xmath470 for some occurrence @xmath133 of @xmath229 in @xmath220 .",
    "* second part .",
    "* now we show that @xmath163_u \\rightslice [ \\delta]_u$ ] .",
    "we need to consider all the variables @xmath157 and check that @xmath472 .",
    "we distinguish several cases :    * let us choose as @xmath93 the variable @xmath223 for some @xmath473 . by construction , for each @xmath462 , we have that @xmath474 .",
    "since @xmath200 is a sharing graph , for any @xmath466 there are @xmath475 edges in @xmath476 departing from @xmath57 .",
    "they are all in the image of @xmath467 , hence @xmath477.we obtain the required result which is @xmath478 . *",
    "if we choose a variable @xmath479 then @xmath480 and @xmath481 ; * finally , if @xmath482 , then @xmath483 and @xmath484 .",
    "* third part .",
    "* we now show that @xmath485_u,\\theta))$ ] .",
    "note that @xmath219 is obtained by replacing , in @xmath486 , each occurrence @xmath133 of a variable @xmath487 with a variant of @xmath463 .",
    "we denote this variant by @xmath488 . by definition of @xmath450 over @xmath147 , we have that @xmath217_u,\\theta)=[{\\mathrm{mgu}}(\\delta,\\theta)]_u$ ] .",
    "we obtain : @xmath489 \\ }                    \\bigr)\\\\        & = \\theta \\circ { \\mathrm{mgu}}\\bigl (              { \\mathrm{eq}}(\\delta|_{u \\setminus { \\mathrm{dom}}(\\theta ) } ) \\cup          \\ { t_i = f^i(\\delta(t_i ) ) \\mid i \\in [ 1,p ]   \\ }              \\bigr)\\\\        & = \\theta \\circ { \\mathrm{mgu}}({\\mathrm{eq}}(\\delta|_{u \\setminus { \\mathrm{dom}}(\\theta ) } ) \\cup { }   \\ { y=\\delta^i_\\xi(y ) \\mid i \\in [ 1,p ] ,                   t_i(\\xi)=y\\}\\bigr)\\\\        & = \\theta \\circ \\delta_{u \\setminus { \\mathrm{dom}}(\\theta ) } \\circ         { \\mathrm{mgu}}\\bigl(\\{\\delta(y)=\\delta^i_\\xi(y ) \\mid i \\in [ 1,p ] , t_i(\\xi)=y         \\}\\bigr ) \\enspace .",
    "\\end{split}\\ ] ]    the set of equations @xmath490 ,     t_i(\\xi)=y \\}$ ] has a solution , given by aliasing some variables .",
    "we show that , for any edge @xmath491 , it follows from @xmath492 that @xmath445 .",
    "since the image of @xmath467 is the set of all the edges in @xmath195 , there is an occurrence @xmath133 of @xmath493 in @xmath220 such that @xmath494 .",
    "occurrence @xmath133 may be written as @xmath495 where @xmath496 is an occurrence of a variable @xmath471 and @xmath497 is an occurrence of @xmath493 in @xmath463 .",
    "therefore @xmath498 , and from this follows @xmath499 is unified with @xmath500 .",
    "since this holds for any edge in @xmath198 and for any @xmath501 $ ] , it follows that for any edge @xmath502 the equation @xmath503 is entailed by @xmath492 .",
    "we know that @xmath199 is connected , hence for any @xmath504 , the set of equations in @xmath492 implies @xmath445 .",
    "we choose a particular node @xmath505 and , for what we said before , we have @xmath506 . we show that @xmath507 .",
    "@xmath508 since @xmath509 is a sharing graph , the total in - degree for @xmath195 , i.e. , @xmath510 , is equal to the total out - degree @xmath511 .",
    "hence @xmath512 this concludes the proof .",
    "the previous proof requires @xmath402 .",
    "however , the same construction also works when this condition does not hold .",
    "let @xmath513 and assume that we want to compute @xmath514_u,\\theta)$ ] . by extending the domain of variables of interest to @xmath515",
    ", we obtain @xmath516_v=     [ x^2,x^2y , z]_{x , y , z}$ ] .",
    "one of the sharing graphs for @xmath13 and @xmath516_v$ ] is @xmath517 { \\node[group , label=30:{\\tiny 0},label=330:{\\tiny   2},label = north west:{a } ] } ( x2 ) at ( 0,0 ) { $ x^2 $ } ; { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   2},label = north west:{b } ] } ( x2y ) at ( 1,0 ) { $ x^2y$ } ; { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   0},label = north west:{c } ] } ( za ) at ( 0,-1 ) { $ z$ } ; { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   0},label = north west:{d } ] } ( zb ) at ( 1,-1 ) { $ z$ } ; { \\node[group , label=30:{\\tiny 1},label=330:{\\tiny   0},label = north west:{e } ] } ( zc ) at ( 2,-1 ) { $ z$ } ; \\path ( x2 ) edge ( x2y ) ; \\path ( x2 ) edge ( za ) ; \\path ( x2y ) edge ( zb ) ; \\path ( x2y ) edge[bend left ] ( zc ) ; \\end{tikzpicture}\\ ] ] following the proof of the previous theorem , we obtain the substitution @xmath518 where @xmath516_v \\rightslice [ \\delta']_v$ ] and @xmath519_v,\\theta))$ ] .",
    "however , what we are looking for is a substitution @xmath120 such that @xmath163_u \\rightslice [ \\delta]_u$ ] and @xmath520_u,\\theta))$ ] .",
    "nonetheless , we may choose @xmath521 ( or , if we prefer , @xmath522 ) to get the required substitution .",
    "this is not a fortuitous coincidence",
    ". we will prove that it happens consistently , and therefore @xmath401_u , \\theta)$ ] is optimal even when @xmath523 .",
    "note that it is not an obvious result .",
    "the operation @xmath401_u,\\theta)$ ] is designed by first extending the set of variables of interest of the abstract object in order to include all the variables in @xmath524 and then performing the real operation .",
    "this construction does not always yield optimal operators .",
    "for example , show that this is not the case for @xmath1 .",
    "the abstract parallel unification @xmath401_u,\\theta)$ ] is optimal , that is : @xmath451_u,\\theta)~\\exists [ \\delta]_u \\in { \\mathit{isubst}}_{\\sim}.~[s]_u \\rightslice     [ \\delta]_u \\text { and } b \\in \\alpha_{\\mathrm{\\omega}}({\\mathrm{mgu}}([\\delta]_u,\\theta ) ) \\enspace .\\ ] ]    given @xmath163_u \\in { \\mathtt{shlin}^{\\omega}}$ ] and @xmath525 , proving optimality amounts to show that , for each @xmath526_u,\\theta)$ ] , there is @xmath150_u\\in { \\mathit{isubst}}_{\\sim}$ ] such that @xmath163_u \\rightslice [ \\delta]_u$ ] and @xmath485_u,\\theta))$ ] . by definition @xmath527_u,\\theta)$ ]",
    "iff @xmath528 for @xmath529 . in the rest of the proof ,",
    "assume @xmath452 , @xmath530 and @xmath528 .",
    "using the previous theorem , we find @xmath120 such that @xmath531_v,\\theta))$ ] and @xmath516_v    \\rightslice [ \\delta]_v$ ] .",
    "we want to prove that @xmath163_u \\rightslice    [ \\delta]_u$ ] and @xmath531_u,\\theta))$ ] .",
    "we first prove @xmath163_u \\rightslice [ \\delta]_u$ ] . given any @xmath157 , since @xmath516_v \\rightslice [ \\delta]_v$ ] , we have @xmath532 .",
    "there are two cases : either @xmath533 or @xmath534 for some @xmath535 . in the first case , @xmath536 , hence @xmath537 . in the latter , @xmath538 .",
    "therefore @xmath163_u \\rightslice [ \\delta]_u$ ] .",
    "in order to prove that @xmath531_u , \\theta))$ ] we need to study the relationship between @xmath217_u , \\theta ) =     [ { \\mathrm{mgu}}(\\delta|_u , \\theta)]_v$ ] and @xmath217_v , \\theta ) = [ { \\mathrm{mgu}}(\\delta ,     \\theta)]_v$ ] .",
    "we split @xmath120 into @xmath539 and @xmath540 . with the same considerations which led to",
    ", we have : @xmath541",
    "if @xmath542 , then @xmath543 appears in @xmath272 only in the multiset @xmath544 .",
    "hence @xmath545 is linear and independent from the other variables , i.e. , no variables in @xmath469 appear in either @xmath13 or other bindings in @xmath120 . as a result , @xmath546 may be rewritten as @xmath547 where @xmath548 is a substitution such that @xmath549 .",
    "we now split @xmath550 into @xmath107 , @xmath551 and @xmath552 where @xmath553 and @xmath554 .",
    "if @xmath555 there exists @xmath556 $ ] and a position @xmath557 such that @xmath558 , @xmath559 and @xmath560 . since @xmath561 , then @xmath463 is linear and independent from @xmath13 and the other bindings in @xmath120 . therefore @xmath562}restricted            to position $ \\xi_y$]}\\\\          & = \\beta ' \\circ { \\mathrm{mgu}}\\bigl({\\mathrm{eq}}(\\theta ) \\cup { \\mathrm{eq}}(\\delta|_{u \\cup u_2 } )           \\bigr)\\\\          & \\qquad \\text{[linearity and independence of $ \\delta(y)$]}\\\\                \\end{split}\\ ] ] where @xmath563 and @xmath564 .",
    "we may proceed as follows : @xmath565}\\\\        & = \\theta|_{{\\mathrm{dom}}(\\theta ) \\setminus u } \\circ { \\mathrm{mgu}}(\\theta|_u , \\delta|_u )         \\circ \\delta|_{u_2}\\\\        & \\qquad \\text{[since $ { \\mathit{vars}}(\\delta|_{u_2})$ is disjoint from           $ { \\mathit{vars}}(\\theta|_u ) \\cup { \\mathit{vars}}(\\delta|_u)$ ] } \\enspace .      \\end{split}\\ ] ] note that @xmath566 is @xmath567 , and will be denoted in the following by @xmath568 .",
    "therefore , we have @xmath569 we check that @xmath570_v)$ ] .",
    "let @xmath93 be the variable such that @xmath571 .",
    "we want to find @xmath572 such that @xmath573 .",
    "first of all , since @xmath548 and @xmath574 have no variables in common with @xmath137 , then @xmath575 . if @xmath576 , then @xmath577 and we get the required result with @xmath578 .",
    "if @xmath579 we know that @xmath93 only occurs once in @xmath580 and never in @xmath568 .",
    "then @xmath581 for the unique @xmath582 such that @xmath583 .",
    "therefore , since @xmath584 , we may choose @xmath585 . finally , if @xmath586 then @xmath587 and we may take @xmath572 to be any variable not in @xmath588 .",
    "proving optimality results for abstract unification operators on domains involving sharing information is a difficult task .",
    "the well - known domain @xmath1 ( without any linearity or freeness information ) is the unique domain whose abstract unification operator has been proved optimal in the general case of multi - binding substitutions ( , later extended by to substitutions with variables out of the set of interest ) .        although @xmath0 is not amenable to a direct implementation , as future work we plan to design suitable abstractions using numerical domains .",
    "the idea is to consider @xmath156-sharing groups with symbolic multiplicities constrained by linear inequalities , such as @xmath589 with @xmath590 .",
    "we plan to implement in our analyzers random @xcite and jandom @xcite an abstract domain based on ( template ) parallelotopes (; ) , exploiting the recent localized @xcite iteration strategies .",
    ", di nardo di maio , s. , and scozzari , f. 2013 . numerical static analysis with soot . in _ proceedings of the acm sigplan international workshop on state of the art in java program analysis_. soap 13 .",
    "acm , new york , ny , usa .    , parton , m. , and scozzari , f. 2010a . deriving numerical abstract domains via principal component analysis . in _",
    "sas 2010 , proceedings _",
    ", r.  cousot and m.  martel , eds . lecture notes in computer science ,",
    "springer , berlin heidelberg , 134150 .    ,",
    "parton , m. , and scozzari , f. 2010b . a tool which mines partial execution traces to improve static analysis . in _",
    "rv 2010 , proceedings _ , h.  barringer and _ et al .",
    "lecture notes in computer science , vol .",
    "springer , berlin heidelberg , 475479 .          2012a .",
    "the abstract domain of parallelotopes . in _ proceedings of the fourth international workshop on numerical and symbolic abstract domains , nsad 2012 _ ,",
    "j.  midtgaard and m.  might , eds . electronic notes in theoretical computer science , vol",
    "elsevier , 1728 .",
    "random : r - based analyzer for numerical domains . in _",
    "lpar-18 , 2012 .",
    "proceedings _ , n.  bjrner and a.  voronkov , eds .",
    "lecture notes in computer science , vol . 7180 .",
    "springer , berlin heidelberg , 375382 .      , marriott , k. , schachte , p. , and sndergaard , h. 1994 .",
    "boolean functions for dependency analysis : algebraic properties and efficient representation . in _",
    "sas 1994 , proceedings _ , b.  le charlier , ed .",
    "lecture notes in computer science , vol .",
    "springer , berlin heidelberg , 266280 .",
    "\\1992 . aliasing and",
    "groundness analysis of logic programs through abstract interpretation and its safety .",
    "technical report 9227 , technical university of aachen ( rwth aachen ) .",
    "available from ` http://sunsite.informatik.rwth-aachen.de/publications/aib ` .",
    "last accessed march 14 , 2013 .",
    "\\1994 . a synergistic analysis for sharing and groundness which traces linearity . in _",
    "esop 1994 , proceedings _",
    ", d.  sannella , ed .",
    "lecture notes in computer science , vol .",
    "springer , berlin heidelberg , 363378 .",
    "an application of abstract interpretation of logic programs : occur check reduction . in _",
    "esop 1986 , proceedings _ , b.  robinet and r.  wilhelm , eds .",
    "lecture notes in computer science , vol . 213 .",
    "springer , berlin heidelberg , 327338 ."
  ],
  "abstract_text": [
    "<S> in the analysis of logic programs , abstract domains for detecting sharing properties are widely used . </S>",
    "<S> recently the new domain @xmath0 has been introduced to generalize both sharing and linearity information . </S>",
    "<S> this domain is endowed with an optimal abstract operator for single - binding unification . </S>",
    "<S> the authors claim that the repeated application of this operator is also optimal for multi - binding unification . </S>",
    "<S> this is the proof of such a claim .    </S>",
    "<S> [ firstpage ]    static analysis , abstract interpretation , sharing , linearity , unification . </S>"
  ]
}
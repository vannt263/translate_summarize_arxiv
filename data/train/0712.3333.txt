{
  "article_text": [
    "let @xmath7 be an undirected graph on the vertex set @xmath8 . a _",
    "vertex cover _ of @xmath1 is a subset @xmath2 of @xmath9 such that each edge of @xmath1 has at least one endpoint in @xmath2 .",
    "the _ vertex cover problem _ ( vcp ) is to compute a vertex cover of smallest cardinality in @xmath1 .",
    "the vcp is np - hard on an arbitrary graph but solvable in polynomial time on a bipartite graph .",
    "a vertex cover @xmath2 is said to be @xmath10-optimal if @xmath11 where @xmath12 and @xmath13 is an optimal solution to the vcp .",
    "it is well known that a 2-optimal vertex cover of a graph can be obtained in polynomial time by taking all the vertices of a maximal ( not necessarily maximum ) matching in the graph or rounding up the lp relaxation solution of an integer programming formulation  @xcite .",
    "there has been considerable work ( see e.g. survey paper @xcite ) on the problem over the past 30 years on finding a polynomial - time approximation algorithm with an improved performance guarantee .",
    "the current best known bound on the performance ratio of a polynomial time approximation algorithm for vcp is @xmath14  @xcite .",
    "it is also known that computing a @xmath15-optimal solution in polynomial time for vcp is np - hard for any @xmath16  @xcite .",
    "in fact , no polynomial - time @xmath17-approximation algorithm is known for vcp for any constant @xmath18 and existence of such an algorithm is one of the most outstanding open questions in approximation algorithms for combinatorial optimization problems . under the assumption that the unique game conjecture  @xcite is true , many researchers believe that a polynomial time @xmath19-approximation algorithm with constant @xmath18 is not possible for vcp . for recent works on approximability of vcp , we refer to  @xcite .",
    "recently asgeirsson and stein  @xcite reported extensive experimental results using a heuristic algorithm which obtained no worse than @xmath20-optimal solutions for all the test problems they considered . also , han , punnen and ye  @xcite proposed a @xmath21-approximation algorithm for vcp , where @xmath22 is an error parameter calculated by the algorithm and reported that no example was known where @xmath23 .    a natural integer programming formulation of vcp can be described as follows : + @xmath24 let @xmath25 be an optimal solution to ( [ vc ] ) .",
    "then @xmath26 is an optimal vertex cover of the graph @xmath1 .",
    "the linear programming ( lp ) relaxation of the above integer program is @xmath27 it is well known that ( e.g. @xcite ) any optimal basic feasible solution ( bfs ) @xmath28 to the problem lpr , satisfies @xmath29 .",
    "let @xmath30 , then it is easy to see that @xmath31 is a @xmath32-approximate solution to the vcp on graph @xmath1 .",
    "nemhauser and trotter @xcite have further proved that there exists an optimal integer solution to ( [ vc ] ) , which agrees with @xmath33 in its integer components .",
    "an @xmath34 is said to be a _ weak edge _ if there exists an optimal vertex cover @xmath35 of @xmath1 such that @xmath36 .",
    "likewise , an @xmath37 is said to be a _ strong edge _ if there exists an optimal vertex cover @xmath35 of @xmath1 such that @xmath38 for any optimal vertex cover @xmath39 note that it is possible for an edge to be both strong and weak . also @xmath0 is uniformly strong if and only if it is not a weak edge . in this paper , we show that the problems of identifying a weak edge and identifying a strong edge are np - hard .",
    "we also present a polynomial time @xmath40-approximation algorithm for vcp where @xmath6 is an appropriate graph theoretic measure ( to be introduced in section 3 ) .",
    "thus for all graphs for which @xmath6 bounded above by a constant , we have a polynomial time @xmath19-approximation algorithm for vcp .",
    "so far we could not identify any class of graphs where @xmath6 is anything but a constant .",
    "we also give examples of graphs satisfying the property that @xmath41 .",
    "however , establishing tight bounds on @xmath6 , independent of graph structures remains an open question .",
    "vcp is trivial on a complete graph @xmath42 since any collection of @xmath43 nodes serves as an optimal solution .",
    "however , the lpr gives an objective function value of @xmath44 only .",
    "we give a stronger relaxation for vcp and complete linear programming description of vcp on a complete graph , wheels , among others .",
    "this relaxation can also be used to find reasonable expected guarantee for @xmath6 .    for any graph @xmath1",
    ", we sometimes use the notation @xmath45 to represent its vertex set and @xmath46 to represent its edge set .",
    "the _ strong edge problem _ can be stated as follows : `` given a graph , identify a strong edge of @xmath1 or declare that no such edge exists . ''    [ th1]the strong edge problem is np - hard .",
    "if @xmath1 is bipartite , then it does not contain a strong edge .",
    "if @xmath1 is not bipartite , then it must contain an odd cycle . for any odd cycle @xmath47 ,",
    "any vertex cover must contain at least two adjacent nodes of @xmath47 and hence @xmath1 must contain at least one strong edge . if such an edge @xmath0 can be identified in polynomial time , then after removing the nodes @xmath3 and @xmath4 from @xmath1 and applying the algorithm on @xmath48 and repeating the process we eventually reach a bipartite graph for which an optimal vertex cover @xmath49 can be identified in polynomial time .",
    "then @xmath49 together with the nodes removed sofar will form an optimal vertex cover of @xmath1 . thus",
    "if the strong edge problem can be solved in polynomial time , then the vcp can be solved in polynomial time .",
    "the problem of identifying a weak edge is much more interesting .",
    "the _ weak edge problem _ can be stated as follows : `` given a graph @xmath1 , identify a weak edge of @xmath1 . ''",
    "it may be noted that unlike a strong edge , a weak edge exists for all graphs .",
    "we will now show that the weak edge problem is np - hard . before discussing the proof of this , we need to introduce some notations and definitions .",
    "let @xmath50 be an optimal bfs of lpr , the linear programming relaxation of the vcp .",
    "let @xmath51 and @xmath52 .",
    "the graph @xmath53 is called the @xmath54-reduced graph of @xmath1 .",
    "the process of computing @xmath55 from @xmath1 is called a _",
    "\\{0,1}-reduction_.    @xcite[z1 ] if @xmath56 is a vertex cover of @xmath55 then @xmath57 is a vertex cover of @xmath1 .",
    "if @xmath56 is optimal for @xmath55 , then @xmath57 is an optimal vertex cover for @xmath1 .",
    "if @xmath56 is an @xmath15-optimal vertex cover of @xmath55 , then @xmath57 is an @xmath15-optimal vertex cover of @xmath1 for any @xmath58 .",
    "let @xmath0 be an edge of @xmath1 .",
    "define @xmath59 , @xmath60 , and @xmath61 .",
    "construct the new graph @xmath62 from @xmath1 as follows . from graph",
    "@xmath63 delete @xmath64 and all the incident edges , connect each vertex @xmath65 to each vertex @xmath66 whenever such an edge is not already present , and delete vertices @xmath3 and @xmath4 with all the incident edges .",
    "the operation of constructing @xmath62 from @xmath1 is called an _",
    "@xmath0-reduction_. when @xmath0 is selected as a weak edge , then the corresponding @xmath0-reduction is called a _ weak edge reduction_. the weak edge reduction is a modified version of the active edge reduction operation introduced in  @xcite .",
    "( 486,257)(30,-296 )    ( 250,-190 )    ( 135,-275 )    ( 205,-255 )    ( 80,-85 )    ( 70,-240 )    ( 165,-60 )    ( 240,-110 )    ( 40,-170 )    ( 85,-85)(160,-60 )    ( 170,-60)(235,-105 )    ( 240,-115)(250,-185 )    ( 207,-251)(250,-195 )    ( 140,-275)(200,-256 )    ( 78,-90)(40,-165 )    ( 40,-175)(68,-235 )    ( 74,-243)(130,-274 )    ( 85,-85)(235,-110 )    ( 85,-85)(250,-185 )    ( 85,-88)(205,-250 )    ( 165,-65)(205,-250 )    ( 165,-65)(75,-240 )    ( 40,-165)(235,-115 )    ( 75,-240)(205,-250 )    ( 240,-115)(208,-250 )    ( 70,-71 )    ( 165,-51 )    ( 250,-110 )    ( 260,-196 )    ( 215,-271 )    ( 135,-296 )    ( 65,-260 )    ( 25,-175 )    ( 380,-105 )    ( 450,-265 )    ( 500,-200 )    ( 380,-200 )    ( 495,-200)(385,-200 )    ( 385,-200)(445,-260 )    ( 380,-110)(380,-195 )    ( 375,-95 )    ( 365,-211 )    ( 510,-206 )    ( 460,-271 )    [ z2]let @xmath0 be a weak edge of @xmath1 , @xmath67 and @xmath68    1 .",
    "if @xmath56 is a vertex cover of @xmath62 , then @xmath69 is a vertex cover of @xmath1 .",
    "if @xmath56 is an optimal vertex cover of @xmath62 , then @xmath69 is an optimal vertex cover of @xmath1 .",
    "if @xmath56 is a @xmath15-optimal vertex cover in @xmath62 , then @xmath69 is a @xmath15-optimal vertex cover in @xmath1 for any @xmath58 .",
    "if @xmath70 then all arcs in @xmath1 incident on @xmath71 except possibly @xmath72 is covered by @xmath56 . then @xmath73 covers all arcs incident on @xmath4 , including @xmath0 and hence @xmath69 is a vertex cover in @xmath1 .",
    "if at least one vertex of @xmath74 is not in @xmath56 , then all vertices in @xmath75 must be in @xmath56 by construction of @xmath62 .",
    "thus @xmath76 must be a vertex cover of @xmath1 .",
    "suppose @xmath56 is an optimal vertex cover of @xmath62 .",
    "since @xmath0 is a weak edge , there exists an optimal vertex cover , say @xmath35 , of @xmath1 containing exactly one of the nodes @xmath3 or @xmath4 . without loss of generality , let this node be @xmath3 .",
    "for each node @xmath77 , @xmath78 is a 3-cycle in @xmath1 and hence @xmath79 for all @xmath77 .",
    "let @xmath80 , which is a vertex cover of @xmath62 .",
    "then @xmath81 for otherwise if @xmath82 we have @xmath83 , a contradiction .",
    "thus @xmath84 establishing optimality of @xmath69 .",
    "suppose @xmath56 is an @xmath15-optimal vertex cover of @xmath62 and let @xmath85 be an optimal vertex cover in @xmath62 . thus @xmath86 let @xmath35 be an optimal vertex cover in @xmath1",
    ". without loss of generality assume @xmath87 and since @xmath0 is weak , @xmath88 let @xmath89 then @xmath90 thus we from ( [ peq1 ] ) , @xmath91 thus @xmath92 thus @xmath69 is @xmath15-optimal in @xmath93",
    "suppose that an oracle , say weak(@xmath94 ) , is available which with input @xmath1 outputs two nodes @xmath3 and @xmath4 such that @xmath0 is a weak edge of @xmath1 . it may be noted that weak(@xmath94 ) do not tell us which node amongst @xmath3 and @xmath4 is in an optimal vertex cover .",
    "it simply identifies the weak edge @xmath0 . using the oracle weak(@xmath94 )",
    ", we develop an algorithm , called _ weak edge reduction algorithm _ or wer - algorithm to compute an optimal vertex cover of @xmath1 .",
    "the basic idea of the scheme is very simple .",
    "we apply @xmath54 and weak edge reductions repeatedly until a null graph is reached , in which case the algorithm goes to a backtracking step .",
    "we record the vertices of the weak edge identified in each weak edge reduction step but do not determine which one to be included in the output vertex cover . in the backtrack step ,",
    "taking guidance from lemma 2 , we choose exactly one of these two vertices to form part of the vertex cover we construct . in this step",
    ", the algorithm computes a vertex cover for @xmath1 using all vertices in @xmath64 removed in the weak edge reduction steps , vertices with value 1 removed in the @xmath54 reduction steps , and the selected vertices in the backtrack step from the vertices corresponding to the weak edges recorded during the weak edge reduction steps . a formal description of the wer - algorithm is given below .    * * the wer - algorithm * * \\ { * } @xmath95 . * \\ { * }  @xmath96 , @xmath97 @xmath98 . 1 .   \\ { * }",
    "solve the lp relaxation problem lpr of vcp on the graph @xmath99 .",
    "let @xmath100 be the resulting optimal bfs , @xmath101 , and @xmath102 . + * if * @xmath103 * goto * step 3 * else * @xmath104 * endif * 2 .",
    "\\ { * } call weak(@xmath105 ) to identify the weak edge @xmath0 . let @xmath106 , where @xmath107 is the graph obtained from @xmath99 using the weak edge reduction operation .",
    "compute @xmath64 for @xmath99 as defined in the weak edge reduction .",
    "let @xmath108 .",
    "+ * if * @xmath109 * then * @xmath110 * goto * beginning of step 2 * endif * * l = k+1 , @xmath111 . * \\ { * } + let @xmath112 , + * if * @xmath113 * then * @xmath114 , where @xmath115 @xmath116 and @xmath117 * endif * + @xmath118 , + * if * @xmath119 * then * * goto * beginning of step 4 * else * output @xmath120 and stop * endif *    using lemma 1 and lemma 2 , it can be verified that the output @xmath120 of the wer - algorithm is an optimal vertex cover of @xmath1 .",
    "it is easy to verify that the complexity of the algorithm is polynomial whenever the complexity of weak(@xmath94 ) is polynomial . since vcp is np - hard we established the following theorem :    [ th3]the weak edge problem is np - hard .",
    "let vcp(@xmath121 ) be the _ restricted vertex cover problem _ where feasible solutions are vertex covers of @xmath1 using exactly one of the vertices from the set @xmath122 and looking for the smallest vertex cover satisfying this property .",
    "more precisely , vcp(@xmath121 ) tries to identify a vertex cover @xmath123 of @xmath1 with smallest cardinality such that @xmath124 let @xmath125 and @xmath126 be the optimal objective function values of vcp and vcp(@xmath121 ) respectively . if @xmath0 is indeed a weak edge of @xmath1 , then @xmath127 .",
    "otherwise , @xmath128 where @xmath129 is a non - negative integer .",
    "further , using arguments similar to the proof of lemma 2 it can be shown that @xmath130 where @xmath131 is the optimal objective function value vcp on @xmath62 .",
    "consider the optimization problem    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx    weak - opt : minimize @xmath129 + subject to @xmath132    weak - opt is precisely the weak edge problem in the optimization form and its optimal objective function value is always zero .",
    "however this problem is np - hard by theorem  [ th3 ] .",
    "we now show that an upper bound @xmath6 on the optimal objective function value of weak - opt and a solution @xmath0 with @xmath133 can be used to obtain a @xmath134-approximation algorithm for vcp .",
    "let almost - weak(@xmath94 ) be an oracle which with input @xmath1 computes an approximate solution @xmath0 to weak - opt such that @xmath133 for some @xmath6 .",
    "consider the wer - algorithm with weak(@xmath94 ) replaced by almost - weak(@xmath94 ) .",
    "we call this the awer - algorithm",
    ".    let @xmath135 be the sequence of graphs generated in step 2(2 ) of the awer - algorithm and @xmath136 be the approximate solution to weak - opt on @xmath137 identified by almost - weak(@xmath138 ) .",
    "[ conclusion2 ] the awer - algorithm identifies a vertex cover @xmath120 such that @xmath139 where @xmath140 is an optimal solution to the vcp .",
    "further , the complexity of the the algorithm is @xmath141 where @xmath142 , @xmath143 is the complexity of lpr and @xmath144 is the complexity of almost - weak(@xmath94 ) .    without loss of generality , we assume that the lpr solution @xmath145 generated when step 2(1 ) is executed for the first time satisfies @xmath146 for all @xmath3 .",
    "if this is not true , then we could replace @xmath1 by a new graph @xmath147 and by lemma 1 , if @xmath148 is a @xmath15-optimal solution for vcp on @xmath55 then @xmath149 is a @xmath15-optimal solution on @xmath1 for any @xmath150 .",
    "thus , under this assumption we have @xmath151 let @xmath152 be the total number of iterations of step 2 ( 2 ) .",
    "for simplicity of notation , we denote @xmath153 and @xmath154 .",
    "note that @xmath155 and @xmath156 are optimal objective function values of vcp and vcp(@xmath157 ) , respectively , on the graph @xmath99 . in view of equations ( [ cj2 ] ) and ( [ peq2 ] )",
    "we have , @xmath158 and @xmath159 from ( [ x2 ] ) and ( [ x3 ] ) we have @xmath160 adding equations in ( [ x5 ] ) for @xmath161 and using the fact that @xmath162 , we have , @xmath163 ) , ( [ x7 ] ) and ( [ x6 ] ) , we have @xmath164 from inequalities  ( [ x1 ] ) and ( [ e2 ] ) , we have @xmath165 where @xmath166",
    ". then we have @xmath167 thus , @xmath168 the complexity of the algorithm can easily be verified .",
    "the performance bound established in theorem  [ conclusion2 ] is useful only if we can find an efficient way to implement our black - box oracle almost - weak(@xmath94 ) that identifies a reasonable @xmath0 in each iteration .",
    "if almost - weak(@xmath169 simply generates a random edge , then @xmath129 could be as large as @xmath170 as given in the example of figure  2 .",
    "for a 3d - wheel on @xmath171 nodes with central axis @xmath172 , @xmath173 . however , when @xmath0 is chosen as any other edge , @xmath174 . a trivial upper bound on @xmath6",
    "is @xmath44 for any graph on @xmath171 nodes .",
    "let us now explore the possibilities of improving this trivial bound .",
    "any vertex cover must contain at least @xmath175 vertices of an odd cycle of length @xmath176 .",
    "this motivates the following _ extended linear programming relaxation _ ( elp ) of the vcp , studied in  @xcite .",
    "@xmath177    where @xmath178 denotes the set of all odd - cycles of @xmath1 and @xmath179 contains @xmath180 vertices for some integer @xmath181 .",
    "note that although there may be an exponential number of odd - cycles in  @xmath1 , since the odd cycle inequalities has a polynomial - time separation scheme , elp is polynomially solvable .",
    "further , it is possible to compute an optimal bfs of elp in polynomial time .",
    "let @xmath182 be an optimal basic feasible solution of elp .",
    "an edge @xmath183 is said to be an _ active edge _ with respect to @xmath182 if @xmath184 .",
    "there may or may not exist an active edge corresponding to an optimal bfs of the elp as shown in  @xcite . for any arc @xmath185",
    ", consider the _ restricted elp _ ( relp(@xmath186 ) ) as follows :    @xmath187    let @xmath188 be the optimal objective function value of relp(@xmath186 ) .",
    "choose @xmath189 such that @xmath190 an optimal solution to relp(@xmath191 ) is called _ a relp solution_. it may be noted that if an optimal solution @xmath33 of the elp contains an active edge , then @xmath33 is also an relp solution .",
    "further @xmath192 is a lower bound on the optimal objective function value of vcp .",
    "the vcp on a complete graph is trivial since any collection of @xmath193 nodes form an optimal vertex cover .",
    "however , for a complete graph , lpr yields an optimal objective function value of @xmath44 only and elp yields an optimal objective function value of @xmath194 .",
    "interestingly , the optimal objective function value of relp on a complete graph is @xmath43 , and the relp solution is indeed an optimal vertex cover on a complete graph .",
    "a stronger version of this observation is proved in the following theorem .    for any",
    "@xmath195 an optimal bfs of the linear program relp(@xmath121 ) gives an optimal vertex cover of @xmath1 whenever @xmath1 is a complete graph or a wheel .",
    "suppose @xmath1 is a complete graph with @xmath196 without loss of generality assume @xmath197 .",
    "thus @xmath198 let @xmath199 be an optimal basic solution of relp(@xmath121 ) .",
    "since @xmath200 by odd cycle inequalities , we have @xmath201 hence @xmath202 for @xmath203 yielding @xmath204 .",
    "now we have to establish that @xmath205 and @xmath206 can not be fractional . if @xmath207 for any @xmath208 then @xmath209 yielding @xmath210 . similarly if @xmath211 for any @xmath208 then @xmath212 yielding @xmath213 .",
    "if @xmath214 for all 3-cycles other than those in ( [ q1 ] ) it can be shown that there must exist an edge inequality , other than ( [ t2 ] ) , satisfied as an equality .",
    "such an equality must be of the form @xmath215 or @xmath216 for @xmath217 and hence @xmath205 and @xmath206 can take only values zero or one . both @xmath218 and @xmath219",
    "are optimal vertex covers for @xmath1 .",
    "the proof for the case of a wheel can be obtained using similar analysis and we skip the details .",
    "it may be noted that an optimal bfs of relp(@xmath121 ) gives an optimal vertex cover on a 3d - wheel ( figure  2 ) when @xmath220 is not the central axis .    extending the notion of an active edge corresponding to an elp solution  @xcite",
    ", an edge @xmath34 is said to be an _ active edge _ with respect to an relp solution @xmath182 if @xmath184 .",
    "unlike elp , an relp solution always contains an active edge . in awer - algorithm ,",
    "the output of almost - weak(@xmath94 ) can be selected as an active edge with respect to a relp solution on @xmath1 .",
    "we believe that the value of @xmath129 , i.e. the absolute difference between the optimal objective function value of vcp and the optimal objective function value of vcp(@xmath121 ) , when @xmath0 is an active edge corresponding to an relp solution is a constant with very high probability , if not with probability one .",
    "if it is a constant , then our algorithm resolves the long standing question on the existence of a polynomial time @xmath221 approximation algorithm for vcp for constant @xmath222 it is an open question to obtain a tight bound , deterministic or probabilistic , on this interesting graph theoretic measure .",
    "nevertheless , our results provide new insight into the approximability of the vertex cover problem .",
    "in this paper , we proved that weak edge and strong edge problems are np - hard .",
    "we also presented a polynomial time @xmath40-approximation algorithm for vcp where @xmath6 is a well defined graph theoretic measure .",
    "obtaining tight upper bounds on @xmath223 deterministic or probabilistic , is an open question .",
    "we also provide simple linear programming representation of vcp on a complete graph , wheel and 3d - wheel , among other graphs .",
    "+ * acknowledgements : * research of qiaoming han was supported in part by chinese nnsf grant , and the return - from - abroad foundation of moe china .",
    "research of abraham p. punnen is partially supported by an nserc discovery grant .",
    "d. s. hochbaum , approximating covering and packing problems : set cover , independent set , and related problems , in _ approximation algorithms for np - hard problems _ , 94 - 143 , edited by d. s. hochbaum , pws publishing company , 1997 ."
  ],
  "abstract_text": [
    "<S> in this paper we show that the problem of identifying an edge @xmath0 in a graph @xmath1 such that there exists an optimal vertex cover @xmath2 of @xmath1 containing exactly one of the nodes @xmath3 and @xmath4 is np - hard . </S>",
    "<S> such an edge is called a weak edge . </S>",
    "<S> we then develop a polynomial time approximation algorithm for the vertex cover problem with performance guarantee @xmath5 , where @xmath6 is an upper bound on a measure related to a weak edge of a graph . </S>",
    "<S> further , we discuss a new relaxation of the vertex cover problem which is used in our approximation algorithm to obtain smaller values of @xmath6 . </S>",
    "<S> we also obtain linear programming representations of the vertex cover problem for special graphs . </S>",
    "<S> our results provide new insights into the approximability of the vertex cover problem - a long standing open problem .    </S>",
    "<S> * keywords : * vertex cover problem , approximation algorithm , lp - relaxation , weak edge reduction , np - complete problems </S>"
  ]
}
{
  "article_text": [
    "[ sec : intro ]    frchet metric is a natural measure of similarity between two curves @xcite .",
    "an intuitive definition of the frchetdistance is to imagine that a dog and its handler are walking on their respective curves .",
    "both can control their speed but can only go forward .",
    "the frchet distance of these two curves is the minimal length of any leash necessary for the handler and the dog to move from the starting points of the two curves to their respective endpoints .",
    "frchet distance and its variants have been widely used in many applications such as in dynamic time - warping @xcite , speech recognition @xcite , signature verification @xcite , and matching of time series in databases @xcite .",
    "alt et al.@xcite present an algorithm to compute the frchetdistance between two polygonal curves of @xmath3 and @xmath8 vertices , respectively , in time @xmath9 . improving this roughly quadratic - time solution for general curves seems to be hard , and so far , no algorithm , exact or approximate , with running time significantly smaller than @xmath10 has been found for this problem for general curves.since the frchet distance essentially requires computing a correspondence between the two curves , it has some resemblance to the edit distance problem ( which asks for the best alignment of two strings ) , for which no substantially subquadratic algorithm is known either .    on the other hand , another similarity measure , the _",
    "hausdorff distance _ , can be computed faster in the plane and approximated efficiently in higher dimensions .",
    "unfortunately , hausdorff distance does not reflect curve similarity well ( see ( a ) for an example ) .",
    "alt et al.@xcite showed that the hausdorff distance and the frchet distance are the same for a pair of closed convex curves .",
    "they also showed that the two measures are closely related for @xmath6-bounded curves . roughly speaking , for any two points @xmath11 on a @xmath6-bounded curve @xmath12 , @xmath13 , the subcurve from @xmath14 to @xmath15 ,",
    "is contained within some neighborhood of @xmath14 and @xmath15 with size roughly @xmath16 ( see ( b ) ; precise definition is introduced later ) .",
    "alt  et  al",
    ".  showed that the frchet distance between any two @xmath6-bounded curves is bounded by @xmath17 times the hausdorff distance between them .",
    "this leads to a @xmath6-approximation algorithm for the frchet distance for any pair of @xmath6-bounded curves , and they also developed an algorithm to compute the reparametrizations of input curves that realize this approximation ( see the definitions below ) .",
    "the algorithm runs is @xmath18 time in two dimensions . in three or higher dimensions ,",
    "the time complexity is dominated by the computation of hausdorff distance between the curves .",
    "not much is known about the frchet distance for other types of curves .",
    "in fact , even for @xmath19-monotone curves in three dimensions , no known algorithm runs in substantially subquadratic time .",
    "the problem of minimizing frchet distance under various classes of transformations has also been studied @xcite . however , even in two dimensions , the exact algorithm takes roughly @xmath20 time for computing the best frchet distance under translations , and roughly @xmath21 time under rigid motions .",
    "approximation algorithms have been studied @xcite , but practical solutions remain elusive .",
    "the basic building block of those algorithms , as well as one of the bottlenecks , is the computation ( or approximation ) of the frchet distance between curves @xmath22 and @xmath23 .",
    "there is a slightly simpler version of the frchet  distance , the _ discrete frchet  distance _ , which only consider vertices of polygonal curves .",
    "its computation takes @xmath24 time and space using dynamic programming @xcite , and no substantially subquadratic algorithm is known either .",
    "frchet distance has also been extended to graphs ( maps ) @xcite , to piecewise smooth curves @xcite , to simple polygons @xcite and to surfaces @xcite . finally , frchet distance was used as the similarity measure for morphing @xcite between curves , and for high - dimensional approximate nearest neighbor search @xcite .",
    "it was also used for efficient curve simplification @xcite .    [ cols=\"^,^,^,^,^ \" , ]     [ fig : dpexplanation ]    given two polygonal chains @xmath22 and @xmath23 and a distance threshold @xmath25 , we construct the following _ free - space diagram _ @xmath26 ; @xmath27 is an @xmath28 matrix ( grid ) and a grid cell @xmath29 $ ] has value @xmath30 if @xmath31 , and value @xmath32 otherwise .",
    "we refer to @xmath30-cells as _ white _ and @xmath32-cells as _ black_. the white cells in the @xmath33th column ( resp .",
    ", @xmath34th row ) correspond to the set of vertices of @xmath23 ( resp . , @xmath22 ) whose distance to @xmath35 ( resp . , @xmath36 ) is less than @xmath37 .",
    "a _ viable _ path in @xmath27 is a path connecting @xmath38 $ ] to @xmath39 $ ] , visiting only white cells of @xmath27 , and moving in one step from @xmath40 to either @xmath41 , @xmath42 , or @xmath43 .",
    "it is easy to check that a complete order - preserving correspondence @xmath44 induces a viable path in @xmath27 and vice versa ( see ) .",
    "hence the problem of deciding `` @xmath45 ? '' is equivalent to deciding the existence of a viable path in @xmath27 .",
    "given @xmath27 , one can extract a viable path , if it exists , in @xmath46 time by a dynamic programming algorithm .",
    "alternatively , one can traverse a directed graph @xmath47 defined as follows : the nodes of @xmath47 are the white cells of @xmath27 .",
    "a white cell is connected to its top , right , or top - right neighbor cells by a directed edge , if they are white .",
    "see ( d ) .",
    "the size of @xmath47 is the bounded by @xmath48 , the number of white cells of @xmath27 , the in - degree ( out - degree ) of each node is at most three , and @xmath49 if and only if there is a directed path in @xmath47 from @xmath50 to @xmath51 .",
    "that is , testing this condition corresponds to a connectivity check in a directed graph in time @xmath52 , once the graph @xmath47 is given .",
    "[ [ approximations . ] ] approximations .",
    "+ + + + + + + + + + + + + + +    we say that @xmath53 is an @xmath4-approximation of @xmath54 if @xmath55 we say that an algorithm _ @xmath4-approximates _ the decision problem `` is @xmath56 ? '' , if it returns ` yes ' whenever @xmath57 and ` no ' whenever @xmath58 . if @xmath59 is a @xmath60-approximation of @xmath61 , the algorithm is allowed to return either ` yes ' or ` no . '",
    "such an algorithm is also called _ an @xmath4-fuzzy _ decision procedure for @xmath54 .",
    "[ sec : approximation : algorithms ]    in this section , we first introduce a general framework for approximating the discrete frchet distance by solving the decision problem approximately .",
    "we then present efficient approximation algorithms for two families of common curves based on this framework : the @xmath6-bounded curves and the backbonecurves , using curve simplifications , packing arguments , and other observations .",
    "[ sec : apprdecision ]    given a set @xmath62 of @xmath63 points in @xmath64 , compute a _",
    "well - separated pairs decomposition ( wspd ) _ of @xmath62 for a separation parameter @xmath65 , which is a collection @xmath66 of pairs of subsets of @xmath62 , with the property that ( 1 ) for every pair of points @xmath67 , there is an index @xmath33 , so that @xmath68 and @xmath69 and ( 2 ) the minimum distance between @xmath70 and @xmath71 is at least 10 times the diameter of either set .",
    "one can compute such a collection of size @xmath72 in @xmath73 time @xcite .",
    "for every pair @xmath74 in the wspd , we choose an arbitrary pair of points @xmath75 and @xmath76 as its representatives .",
    "it is easy to check that the distance between any two points @xmath67 is @xmath77-approximated by the distance between the representatives of the corresponding wspd pair .",
    "if we want to approximately solve an optimization problem using a decision procedure , where the optimal solution @xmath78 is one of the distances induced by a pair of points of @xmath62 , then we can use the above wspd to extract @xmath72 values : for each wspd pair , we take the distance between its representative points .",
    "next , we replace each value @xmath19 by two values @xmath79 and @xmath80 , sort the resulting values , and perform a binary search ( using the decision procedure ) to identify which interval delimited by consecutive values contains @xmath78 . let @xmath81 $ ] be the resulting interval ; obviously @xmath82 .",
    "we now perform another binary search on this interval to identify the interval @xmath83 $ ] containing @xmath78 with @xmath84 , giving rise to an @xmath4-approximation of @xmath78 .",
    "the second binary search invokes the decision procedure @xmath85 times .",
    "interestingly , the decision procedure does not have to be exact , and it can return a _ fuzzy _ answer , in the sense of last section",
    ". an equivalent view of an @xmath4-fuzzy decision procedure is : for a parameter @xmath59 , if it returns `` no '' , then @xmath86 ; otherwise if it returns `` yes '' , then @xmath87 .",
    "it can be shown that the above binary search can be adapted to work with a fuzzy decision procedure with the same performance guarantees ( details omitted and can be found in .",
    "we summarize :    [ theo : fuzzy ] let @xmath62 be a set of @xmath63 points in @xmath64 , and let @xmath88 be an optimization problem , for which the optimal answer is a distance induced by a pair of points of @xmath62 . given an @xmath4-fuzzy decision procedure for @xmath88 , one can @xmath4-approximate the optimal solution in @xmath89 time , where @xmath90 is running time of the fuzzy decision procedure when the required accuracy is @xmath91 .",
    "the algorithm is described above .",
    "the fuzzy decision procedure can be used with constant accuracy in the stage of the algorithm .",
    "higher accuracy of @xmath92 is required only at the second stage , when we perform the binary search over the interval @xmath93 .",
    "on the other hand , observe that there must exist some @xmath94 and @xmath95 such that @xmath96 .",
    "in other words , the solution @xmath97 will be one of the distances induced by a pair of points from @xmath98 vertices from @xmath22 and @xmath99 .",
    "hence the above theorem implies that we now only need a fuzzy decision procedure for @xmath100 in order to approximate @xmath100 .",
    "the remaining question is how to implement fuzzy decision procedure efficiently .",
    "one useful heuristic is curve simplification .",
    "below we first describe the particular simplification we use and how it helps in approximating @xmath100 .",
    "we then show that together with a packing argument and other observations , guaranteed efficiency can be achieved for the two classes of common curves that we investigate .",
    "[ [ greedy - simplification . ] ] greedy simplification .",
    "+ + + + + + + + + + + + + + + + + + + + + +    given a polygonal chain @xmath101 , we simplify @xmath22 to obtain @xmath102 , where vertices of @xmath103 form a subsequence of @xmath22 , with @xmath104 and @xmath105 . more precisely , let @xmath106 if @xmath107 ; the subscript @xmath22 is omitted when it is clear from context .",
    "we say that @xmath103 _ @xmath108-simplifies _ @xmath22 if ( i ) @xmath109 for @xmath110 ( i.e , order - preserving ) , and ( ii ) @xmath111 for any @xmath112 ( see ( c ) ) .",
    "( this definition of @xmath108-simplification is slightly different from the standard definition found in the literature . )",
    "we construct a @xmath108-simplification of @xmath22 , @xmath103 , in a greedy manner : start with @xmath104 . at some stage , suppose we have already computed @xmath113 . in order to find @xmath114 , we check each vertex of @xmath22 starting from @xmath115 in order , and stop when we reach the first edge @xmath116 of @xmath22 such that @xmath117 and @xmath118 .",
    "we set @xmath119 and proceed until we reach @xmath120 , at which point we add @xmath120 as the last vertex of @xmath103 .",
    "the entire procedure takes linear time . by construction ,",
    "the following observation is straightforward .    for any edge @xmath121 in @xmath103 , other than the last edge",
    ", we have @xmath122 .",
    "[ observation : simplength ]     and @xmath123 .",
    "left picture shows part of @xmath22 and @xmath23 and the correspondence @xmath124 ( indicated by dashed segments ) .",
    "right picture shows @xmath103 and @xmath123 ( thick curves ) and the induced correspondence for them ( thick dashed segments ) . ]",
    "[ fig : fig : simpappr ]    now if we @xmath108-simplify both input curves @xmath22 and @xmath23 to obtain @xmath103 and @xmath123 , we have the following lemma :    [ lemma : simpappr ] @xmath125 .",
    "we first consider the right - hand inequality .",
    "let @xmath126 , and @xmath124 be the complete order - preserving correspondence that produces @xmath100 .",
    "obviously , for any pair @xmath127 in @xmath124 , we have that @xmath128 .",
    "@xmath124 can be modified into a correspondence @xmath44 between @xmath103 and @xmath123 as follows : we add the match @xmath129 to @xmath44 if and only if ( c1 ) there exists a match @xmath130 such that @xmath131 , or ( c2 ) there exist a match @xmath132 such that @xmath133 , where @xmath134 ( resp .",
    "@xmath135 ) maps the indices between @xmath22 and @xmath103 ( resp . @xmath23 and @xmath123 ) ( see for an example ) .",
    "it is easy to verify that @xmath44 is both complete and order - preserving . by the triangle inequality",
    ", we have that @xmath136 for case ( c1 ) , implying that @xmath137 ( the case for ( c2 ) is symmetric ) .",
    "since @xmath138 should be smaller than the distance induced by @xmath44 , the right - hand inequality then follows .",
    "the proof for the left - hand inequality is similar but slightly more involved .",
    "details omitted and can be found in the .",
    "the above lemma implies that if the answer to @xmath139 is ` yes ' , then , @xmath140 .",
    "if it is ` no ' , then @xmath141 .",
    "thus the decision problem for @xmath138 ( @xmath142)-approximates that of @xmath100 .",
    "we next show that @xmath138 can be answered asymptotically much faster for two special classes of curves , giving rise to efficient fuzzy decision procedure for them .",
    "[ sec : k - bounded ]    given a polygonal curve @xmath22 , let @xmath143 denote the subcurve of @xmath22 that connects @xmath144 and @xmath145 , and @xmath146 the length of @xmath147 along @xmath22 ; @xmath22 may be omitted from the subscript when clear .",
    "we say that @xmath22 is _ @xmath6-straight _ if @xmath148 , for any @xmath149 .",
    "examples of @xmath6-straight curves include _ curves with increasing chords _ of @xcite and _ self - approaching curves _ of @xcite .",
    "as defined by alt et al .",
    "@xcite , @xmath22 is _ @xmath6-bounded _ if @xmath150 , for all @xmath151 , where @xmath152 is the radius-@xmath153 euclidean ball centered at @xmath19 and where we have slightly abused the notation by treating a curve section as a point set .",
    "see ( b ) for an illustration in two dimensions .",
    "every @xmath6-straight curve is @xmath6-bounded .",
    "we now describe how to construct an @xmath4-fuzzy decision procedure for the problem `` @xmath49 ? '' , where one curve , say @xmath23 , is @xmath6-bounded .",
    "we first @xmath108-simplify @xmath22 and @xmath23 into @xmath103 and @xmath123 respectively , using @xmath154 . by",
    ", the decision problem for @xmath138 is an @xmath4-fuzzy decision procedure for @xmath100 .",
    "hence we now focus on checking whether @xmath139 .",
    "let @xmath3 , @xmath8 , @xmath153 , @xmath155 be the size of @xmath22 , @xmath23 , @xmath103 , and @xmath123 respectively ; @xmath156 and @xmath157 .",
    "[ [ decision - problem - for - ifmmoderm - delta_delsemboxrm - delta_dfiwidetildemathbfpi - widetildemathbfsigma . ] ] decision problem for @xmath138 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    let @xmath158 be the free - space diagram for @xmath103 and @xmath123 with respect to @xmath59 . recall that @xmath139 if there exists a viable path in @xmath158 which can be computed in @xmath52 time once @xmath159 , the set of white cells of @xmath158 are given .",
    "we first bound the size of @xmath159 .",
    "for every @xmath160 , let @xmath161 be the set of points from @xmath123 contained in @xmath162 . obviously , @xmath163 .",
    "consider any two points @xmath164 that lie in @xmath162 for some @xmath160 .",
    "there are two cases : ( i ) @xmath165 is an edge of @xmath123 and ( ii ) otherwise . for case ( i ) ,",
    "we have that @xmath166 by . for case ( ii ) , we know that @xmath167 as @xmath23 is @xmath6-bounded . furthermore , let @xmath168 be the edge with @xmath169 ; @xmath170 by .",
    "it then follows that @xmath171 and therefore @xmath172 .",
    "hence @xmath173 by a straightforward packing argument .",
    "this means that the number of white cells is @xmath174 given that @xmath23 is a @xmath6-bounded curve .",
    "we still need to compute @xmath161 efficiently , that is , to enumerate the set of vertices of @xmath123 contained in @xmath162 for every @xmath160 .",
    "this can be done by a spherical range query .",
    "as there are no known efficient algorithms for spherical range queries , we instead first perform a @xmath175-approximate range query of @xmath162 among all vertices from @xmath123 , such that vertices lying completely inside @xmath162 are guaranteed to be retrieved , those completely outside @xmath176 will not be reported , while those in - between may or may not be returned . by the same packing argument as above , it is easy to verify that the number of vertices returned is still bounded by @xmath177 .",
    "we then inspect each vertex returned , and only mark the corresponding cell in @xmath158 white when it indeed lies in @xmath162 .",
    "we preprocess @xmath123 into a data structure of size @xmath178 , using @xmath179 preprocessing time , such that the resulting data - structure answers @xmath175-approximate range query for @xmath162 in @xmath180 time .",
    "this can be easily achieved by constructing a grid of appropriate size ( which is @xmath181 ) , throwing the points of @xmath123 into this grid ( using hashing ) .",
    "next , an approximate spherical range query is no more than probing all the grid cells that intersects the query ball .",
    "the number of cells being probed in a single query is @xmath180 .",
    "therefore the set of white cells in @xmath158 can be computed in @xmath182 time by choosing @xmath183 to be a small constant , say @xmath184 .    putting everything together",
    ", we have an @xmath4-fuzzy decision procedure for @xmath100 that runs in @xmath185 time and space in @xmath186 . by",
    ", we have that :    an @xmath4-approximation of @xmath100 for a polygonal curve @xmath22 and a @xmath6-bounded curve @xmath23 , of size @xmath3 and @xmath8 respectively , can be computed in @xmath187 time and @xmath188 space in @xmath189  dimensions .",
    "[ sec : backbone ]    in molecular biology , it is common to model a protein backbone by a polygonal chain , where each @xmath190 atom becomes a vertex , and each edge represents a covalent bond between two consequent amino acids .",
    "all the bonds have approximately the same bond length , and no two atoms ( thus vertices ) can get too close due to van der waals interactions .",
    "this is the motivation behind the study of the _ backbone _ curves , which have the following properties :    * for any two non - consecutive vertices @xmath191 and @xmath192 of the curve , @xmath193 , * every edge of the curve has length @xmath194 such that @xmath195 , where @xmath196 are constants .",
    "we remark that although proteins lie in three dimensional space , there are simplified models for protein backbones in both two and three dimensions , such as the lattice model which has been widely studied to understand the mechanism behind protein folding @xcite .",
    "now suppose we are given backbonecurves @xmath22 and @xmath23 in @xmath186 . given a distance threshold @xmath25 , we want to know whether @xmath49 .",
    "we @xmath108-simplify @xmath22 and @xmath23 to obtain @xmath103 and @xmath123 as in the previous case , for @xmath197 , and construct the free - space diagram @xmath158 for @xmath103 and @xmath123 with respect to @xmath37 .",
    "@xmath158 is an @xmath198  grid , where by and property p2 , @xmath199 and @xmath200 .",
    "once @xmath158 is given , the decision problem can be solved in time proportional to @xmath48 , where @xmath159 is the set of white cells in @xmath158 .",
    "[ [ the - set - of - white - cells - w . ] ] the set of white cells @xmath159 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    a straightforward bound for @xmath48 is @xmath201 notation sometimes hide factors depending on constants @xmath202 and @xmath203 . ] , as by the packing argument and property p1 , there are at most @xmath204 vertices lying in @xmath37-neighborhood of any vertex of @xmath103 and @xmath123 . if @xmath205 , then the number of white cells is @xmath206 .",
    "hence we now assume that @xmath207",
    ".    we can improve this bound by a more careful counting analysis .",
    "assume without loss of generality that @xmath208 .",
    "for any vertex @xmath160 and its @xmath37-neighborhood @xmath162 , let @xmath209 be the set of edges of @xmath123 intersecting the ball @xmath162 .",
    "the number of vertices of @xmath123 in @xmath162 can be upper bounded by @xmath210 .",
    "furthermore , given any edge @xmath211 , let @xmath212 ( that is , subchain @xmath213 is simplified into edge @xmath214 in chain @xmath123 ) .",
    "@xmath209 can be partitioned into two sets : ( i ) @xmath215 , and ( ii ) @xmath216 .    by property p2 , we know that the number of vertices in @xmath217 is at least @xmath218 for any @xmath219",
    ". therefore @xmath220 . on the other hand , for every edge @xmath221",
    ", there is at least one vertex of @xmath217 that lies in the spherical shell of @xmath222 , as the length of edges in @xmath23 is at most @xmath203 .",
    "since the volume of this spherical shell is @xmath223 , the size of @xmath224 is bounded by @xmath225 .",
    "therefore , we have that @xmath226 . summing it over all @xmath153 vertices of @xmath103 , we have that @xmath227 . furthermore , since this number can not exceed the size of @xmath158 which is @xmath228 , we have @xmath229 . note",
    "that @xmath48 is maximized when the two balancing terms are equal : @xmath230 , that is , when @xmath231 .",
    "this implies that @xmath232 .",
    "we still need to compute these white cells of @xmath158 efficiently .",
    "similar to the case for @xmath6-bounded curves , we preprocess @xmath123 into a data structure of size @xmath179 , using @xmath179 preprocessing time , such that the resulting data structure answers @xmath175-approximate range query for @xmath162 in @xmath180 time , for a small constant @xmath183 , say @xmath184 .",
    "we then check all vertices returned by this approximate range query , and keep only those indeed contained in @xmath162 .",
    "overall , we can compute all white cells in @xmath233 time and space , thus can answer the decision problem `` is @xmath234 '' in the same time and space . putting everything together",
    ", we have :    [ lemma : simpdecision ] given two backbone  curves of sizes @xmath3 and @xmath8 , respectively , we can develop an @xmath4-fuzzy decision procedure for @xmath100 w.r.t . @xmath59 that runs in @xmath235 time and space .",
    "in particular , the time complexity is @xmath236 when @xmath237 , and @xmath238 when @xmath239 .",
    "finally , for backbone  curves , in order to approximate @xmath100 , one can use a binary search procedure ( described in instead of the approach using wspd as described earlier .",
    "the advantage of the binary search procedure is that all results can then be extended for the continuous case @xmath240 by more careful and involved packing arguments .",
    "we conclude with the following theorem .",
    "[ theo : backboneappr ] given two backbonecurves @xmath22 and @xmath23 of @xmath3 and @xmath8 vertices respectively , we can compute an @xmath4-approximation of @xmath240 in @xmath241 time in two dimensions , and @xmath242 time in three dimensions .",
    "[ sec : b : w : cells ] in this section , given curves @xmath22 and @xmath23 of size @xmath3 and @xmath8 , respectively , we present a pseudo - output - sensitive algorithm for computing @xmath100 for general curves . although the worst case complexity may still be @xmath46 , we believe that the observation made within should help to produce efficient ( possibly approximate ) algorithms for frchet  distance in practice . in what follows , we provide results for @xmath2 norm ( which provides a constant factor approximation for optimal solution under @xmath1 norm ) .",
    "the time complexity for exact computation under @xmath1 norm is quite messy and omitted .",
    "suppose we have an algorithm that answer the following _ select - distance _ query in @xmath243 time : given a set of @xmath63 points @xmath62 and a rank @xmath244 , what is @xmath245 , the @xmath244thsmallest distance among all pair - wise distances from @xmath62 .",
    "now given an algorithm to solve the decision problem `` is @xmath246 ? '' in time @xmath247 , we can find the optimal solution @xmath78 in @xmath248 time by querying @xmath245 among @xmath249 points in a binary search manner .",
    "for @xmath2 norm , the distance - selection problem can be solved in @xmath250 in @xmath186 @xcite . for the decision problem , a straightforward bound for time",
    "complexity @xmath251 is @xmath48 plus the time to compute @xmath159 , where @xmath159 is the set of white cells in the free - space diagram @xmath252 for a threshold @xmath253 .",
    "below we provide a tighter bound for @xmath251 although its worst - case complexity is still @xmath46 .",
    "[ [ switching - cells . ] ] switching cells . + + + + + + + + + + + + + + + + +    given an @xmath28  map @xmath27 with respect to some threshold @xmath37 , a _ switching cell _   is a white cell whose immediate neighbor above or below it is black .",
    "so if @xmath29 $ ] is a switching cell , then the edge @xmath254 ( or @xmath255 ) intersects the boundary of @xmath256 exactly once ( one endpoint must lie inside and one must be outside ) . for a vertex @xmath257 , while the set of white cells involving @xmath14 correspond those vertices from @xmath15 falling inside @xmath258 , the switching cells  involving @xmath14 correspond to those vertices inside @xmath258 with one incident edge crossing the boundary of @xmath258 .",
    "let @xmath259 denote the set of switching cells of @xmath260 .",
    "although in worst case @xmath261 , we expect it to be much smaller than @xmath48 in practice . for example , consider the case when vertices of @xmath23 form lines of a cubic lattice of size @xmath262 and @xmath37 is roughly @xmath263 . for a vertex @xmath14 at the center of this cube , the number of white cells in the corresponding column in @xmath27 is @xmath264 , while the number of switching cells  is @xmath265 .",
    "the remaining questions are ( i ) how to compute the set of switching cells  @xmath266 and ( ii ) how to solve the decision problem once @xmath267 is given .",
    "[ [ decision - problem - with - s . ] ] decision problem with @xmath267 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    once the set of switching cells is given , we can solve the decision problem in @xmath268 time and space as follows . instead of representing @xmath27 explicitly",
    ", we now represent each column of @xmath27 , @xmath269 $ ] for @xmath270 , as a set of ordered intervals , where each interval corresponds to a maximal set of consecutive white cells in this column . obviously , the endpoints of these intervals are exactly the switching cells .",
    "let @xmath271 $ ] be the set of ordered intervals , each representing a maximal set of cells in the @xmath33thcolumn reachable from @xmath272 $ ] , and @xmath273|$ ] and @xmath274|$ ] the number of intervals in @xmath269 $ ] and @xmath271 $ ] , respectively .",
    "easy to see that @xmath274| \\le |{c}[i]|$ ] , because all cells covered by intervals from @xmath271 $ ] are white , and because if any cell @xmath275 from an interval @xmath276 $ ] is in some interval @xmath277 $ ] , then all cells of @xmath278 above @xmath275 should also be covered by @xmath279 . our algorithm scans @xmath27 from left to right ( i.e , from column @xmath30 to column @xmath3 ) , and at the @xmath33thround , we compute @xmath271 $ ] by merging @xmath269 $ ] and @xmath280 $ ] in @xmath281| + |{c}[i]|)$ ] time using a merge - sort like procedure ( see details in ) .    [ [ computing - s . ] ] computing @xmath267 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    given @xmath14 and @xmath37 , let @xmath282 denote the set of edges from @xmath23 `` crossing '' the boundary of @xmath258 . here by _ crossing _",
    ", we mean that one endpoint of the edge is inside @xmath258 and one is outside ( so it is not the usual segment / ball intersection problem ) . to compute @xmath267 , we need to perform @xmath3 _ edge / ball crossing queries _",
    ", one for each vertex from @xmath22 . under the @xmath2 norm ,",
    "the basic operation is in fact an edge / cube crossing query , where all cubes are congruent .",
    "we can preprocess the set of edges by building a range - search tree for their endpoints ( similar to the multi - level data structure for orthogonal range reporting problem ) .",
    "the entire data structure has size @xmath283 and given a cube , the set of edges crossing it can be reported in @xmath284 where @xmath244 is the number of such edges .    putting everything together ,",
    "we conclude with the following theorem :    given two arbitrary polygonal curves @xmath22 and @xmath23 in @xmath186 , with @xmath3 and @xmath8 vertices , respectively , one can compute @xmath100 under @xmath2-norm , in @xmath285 time and @xmath286 space , where @xmath287 is an upper bound of the number of switching cells  for any threshold @xmath37 .",
    "we remark that for @xmath1 norm , the running time is @xmath288 for @xmath237 and @xmath289 time for @xmath290 .",
    "the edge / ball crossing query required by computing @xmath267 can be converted into an segment / hyperplane query in one dimension higher .",
    "it is less practical as the solution involves heavy machinery .",
    "nevertheless , if approximation is allowed , one can use the idea from as well as multi - dimensional range trees to obtain an @xmath4-approximation algorithm in @xmath291 time and space where @xmath292 depends on both @xmath4 and @xmath189 .",
    "[ sec : discussion ] in this paper , we considered the problem of computing discrete frchet  distance between two polygonal curves either approximately or exactly . our main contribution is a simple approximation framework that leads to efficient @xmath4-approximation algorithms for two families of common curves : the @xmath6-bounded curves and the backbone  curves .",
    "we also consider the exact algorithm for general curves , and proposed a pseudo - output - sensitive algorithm by observing that only a subset of the white cells from the free - space diagram are necessary for the decision problem .",
    "it will be interesting to investigate whether there are families of curves that are guaranteed to have small @xmath287 , which is the upper bound on the number of switching cells .",
    "we feel that for general curves , it might be hard to develop algorithms that are significantly sub - quadratic in worst case , given that no such algorithm exists for a related and widely studied problem , the edit distance for strings .",
    "hence our future directions will focus on practical variants of frchet  distance so that one can handle outliers and/or partial matching , or so that one can perform efficient multiple - curve alignments .",
    "another important direction is to develop efficient ( approximation ) algorithm for computing smallest frchet  distance under rigid motions ( in particular rotations ) .",
    "[ [ postscript . ] ] postscript .",
    "+ + + + + + + + + + +    since the appearance of this paper in esa 2006 @xcite a lot of research was done on related problems .",
    "driemel et al.@xcite introduced the notion of @xmath275-packed curves , and showed a near linear time algorithm for such curves .",
    "bringmann @xcite proved that frchetdistance can not be computed exactly in subquadratic time under the seth hypothesis .",
    "there is more recent research on the frchetdistance , but surveying it is outside the scope of this note .",
    "ahmw05    o.  aichholzer , f.  aurenhammer , c.  icking , r.  klein , e.  langetepe , and http://page.mi.fu-berlin.de/~rote/[g .",
    "generalized self - approaching curves . , 109(1 - 2):324 , 2001 .    and m.  buchin",
    "semi - computability of the frchet  distance between surfaces . in _ proc .",
    "21st euro .",
    "workshop on comput .",
    "_ , pages 4548 , 2005 .",
    ", http://www.cs.arizona.edu/~alon/[a .",
    "efrat ] , http://page.mi.fu-berlin.de/~rote/[g .",
    "rote ] , and http://www.cs.utsa.edu/~carola/[c .",
    "wenk ] . matching planar maps .",
    ", 49:262283 , 2003 .    and m.  godau .",
    "computing the frchet distance between two polygonal curves .",
    ", 5:7591 , 1995 .",
    "http://cis.poly.edu/~aronov/[b .",
    "aronov ] , http://sarielhp.org[s .",
    "har - peled ] , c.  knauer , http://www.cs.duke.edu/~wys/[y .",
    "wang ] , and http://www.cs.utsa.edu/~carola/[c .",
    "distance for curves , revisited . in _ proc .",
    "14th annu .",
    "european sympos .",
    "algorithms _ _ _ , pages 5263 , 2006 .",
    "http://www.cs.duke.edu/~pankaj[p .",
    "k.  agarwal ] , http://sarielhp.org[s .",
    "har - peled ] , n.  mustafa , and http://www.cs.duke.edu/~wys/[y .",
    "near - linear time approximation algorithms for curve simplification in two and three dimensions .",
    ", 42:203219 , 2005 .    , c.  knauer , and http://www.cs.utsa.edu/~carola/[c .",
    "wenk ] . matching polygonal curves with respect to the frchet distance . in _ proc .",
    "18th internat .",
    "asp . comp .",
    "_ , pages 6374 , 2001 .    ,",
    "c.  knauer , and http://www.cs.utsa.edu/~carola/[c .",
    "comparison of distance measures for planar curves .",
    ", 38(1):4558 , 2004 .",
    "http://www.cs.duke.edu/~pankaj[p .",
    "k.  agarwal ] , http://www.math.tau.ac.il/~michas[m .",
    "sharir ] , and s.  toledo .",
    "applications of parametric searching in geometric optimization . , 17:292318 , 1994 .",
    "k.  buchin , m.  buchin , and http://www.cs.utsa.edu/~carola/[c .",
    "wenk ] . computing the frchet distance between simple polygons in polynomial time . in _ proc .",
    "22nd annu .",
    "_ _ _ , pages 8087 , 2006 .",
    "k.  bringmann .",
    "walking the dog takes time : frechet distance has no strongly subquadratic algorithms unless seth fails ] . in _ proc .",
    "55th annu .",
    "ieee sympos . found .",
    "_ _ _ , pages 661670 , 2014 .    p.  b. callahan and s.  r. kosaraju . a decomposition of multidimensional point sets with applications to @xmath244-nearest - neighbors and @xmath3-body potential fields . , 42:6790 , 1995 .",
    "m.  clausen and a.  mosig .",
    "approximately matching polygonal curves with respect to the frchet  distance .",
    ", 30:113127 , 2005 .",
    "a.  driemel , http://sarielhp.org[s .",
    "har - peled ] , and http://www.cs.utsa.edu/~carola/[c .",
    "wenk ] . approximating the frchet distance for realistic curves in near linear time .",
    ", 48:94127 , 2012 .    http://www.cs.arizona.edu/~alon/[a .",
    "efrat ] , http://geometry.stanford.edu/member/guibas/[l .",
    "j.  guibas ] , http://sarielhp.org[s .",
    "har - peled ] , j.  s.b .",
    "mitchell , and t.m . murali .",
    "new similarity measures between polylines with applications to morphing and polygon sweeping .",
    ", 28:535569 , 2002 .",
    "http://www.cs.arizona.edu/~alon/[a .",
    "efrat ] , http://geometry.stanford.edu/member/guibas/[l .",
    "j.  guibas ] , http://sarielhp.org[s .",
    "har - peled ] , and t.  m. murali .",
    "morphing between polylines . in _ proc .",
    "12th acm - siam sympos",
    ". discrete algs . _ _ _ , pages 680689 , 2001 .    t.  eiter and h.  mannila .",
    "computing discrete frchet distance . tech .",
    "report cd - tr 94/64 , christian doppler lab .",
    "expert sys .",
    ", tu vienna , austria , 1994 .",
    "d.  goldman , s.  istrail , and c.  h. papadimitriou .",
    "algorithmic aspects of protein structure similarity . in _ proc .",
    "40th annu .",
    "ieee sympos . found .",
    "_ _ _ , pages 512522 , 1999 .",
    "http://theory.lcs.mit.edu/~indyk/[p .",
    "approximate nearest neighbor algorithms for frchet  distance via product metrics . in _ proc .",
    "18th annu .",
    "_ , pages 102106 , 2002 .",
    "s.  kwong , q.  h. he , k.  f. man , k.  s. tang , and c.  w. chau .",
    "parallel genetic - based hybrid pattern matching algorithm for isolated word recognition .",
    ", 12(5):573594 , august 1998 .",
    "kim , s.w .",
    "kim , and m.  shin .",
    "optimization of subsequence matching under time warping in time - series databases . in _ proc .",
    "applied comput .",
    "_ , pages 581586 , 2005 .    e.  j. keogh and m.  j. pazzani .",
    "scaling up dynamic time warping to massive dataset . in _ proc .",
    "of the third euro .",
    "data mining and know .",
    "_ , pages 111 , 1999 .",
    "a.  kolinski and j.  skolnick .",
    "monte carlo simulations of protein folding : lattice model and interaction scheme . in _ proteins _ , volume  18 , pages 338352 , 1994 .",
    "m.  parizeau and r.  plamondon . a comparative analysis of regional correlation , dynamic time warping , and skeletal tree matching for signature verification .",
    ", 12(7):710717 , 1990 .",
    "http://page.mi.fu-berlin.de/~rote/[g .",
    "curves with increasing chords . , 115:112 , 1994 .",
    "http://page.mi.fu-berlin.de/~rote/[g .",
    "computing the frchet distance between piecewise smooth curves .",
    "technical report ecg - tr-241108 - 01 , freie universitat , berlin , may 2005 . to appear in comput .",
    ".    j.  s. salowe .",
    "interdistance selection by parametric search .",
    ", 30:914 , 1989 .",
    "http://www.cs.utsa.edu/~carola/[c .",
    "thesis , dept . of comput .",
    ", freie universitat , berlin , 2002 .",
    "[ apnd : a ]    given an @xmath175-fuzzy decision procedure apprdecision(@xmath59 , @xmath175 ) for deciding whether @xmath293 , we combine it with the wspd approach described in to compute an @xmath4-approximation of @xmath78 . in particular , construct the @xmath294 distances using wspd as before , and perform a binary search by querying apprdecision(@xmath192 , @xmath295 ) among these distances to identify the interval @xmath81 $ ] such that apprdecision(@xmath296 ) returns `` no '' while apprdecision(@xmath297 ) returns `` yes '' .",
    "easy to verify that @xmath298 .",
    "we then start with a pair @xmath299 , and @xmath300 , and perform a standard binary search while always maintaining that apprdecision(@xmath301 ) returns `` no '' and apprdecision(@xmath302 ) returns `` yes '' until @xmath303 .",
    "it is easy to verify that the invariant holds when we start , and the number of iterations is at most @xmath304 .",
    "furthermore , because of the invariant that we maintain , we have @xmath305 and @xmath306 .",
    "it then follows that when @xmath307 , @xmath308 this implies that @xmath309 is an @xmath4-approximation of @xmath78 .",
    "hence we can use a fuzzy decision procedure to approximate @xmath78 .",
    "[ apnd : b ]    let @xmath310 be the complete order - preserving correspondence that produce @xmath138 .",
    "we now modify it into a correspondence @xmath311 between @xmath22 and @xmath23 as follows : first we add all matches @xmath312 to @xmath311 if @xmath313 .",
    "next , we take each pair of consecutive matches",
    ". there are three cases as illustrated in .     and @xmath123 .",
    "three cases for two consecutive pairs from @xmath310 between @xmath103 and @xmath123 . for case ( 3 ) , we first add all correspondences between @xmath314 and all vertices between @xmath315 and @xmath316 along @xmath23 , we then add all correspondences between @xmath317 and vertices between @xmath314 and @xmath318 . ]",
    "[ fig : simpapprappendix ]    the first two are symmetric , and we simply add matches @xmath319 ( resp .",
    "@xmath320 ) into @xmath311 for @xmath321 ( resp .",
    "@xmath322 ) . for the third case , we add all matches of the form @xmath319 for @xmath321 , and of the form @xmath323 for @xmath322 and @xmath324 .",
    "it is easy to verify that the resulting matching @xmath44 is both complete and order - preserving .",
    "furthermore , by triangle inequality , each match @xmath127 added for the first two cases satisfies @xmath325 ; while an edge @xmath323 added in last case satisfies @xmath326 this proves the left - hand inequality in .",
    "[ apnd : c ]    let apprdecision(@xmath327 ) denote the @xmath4-fuzzy decision procedure for @xmath100 for two backbone  curves @xmath22 and @xmath23 . in order to find an @xmath4-approximation of @xmath100 , we can simply use .",
    "however , for this particular case , we can have a much simpler binary search procedure within similar time / space complexity that avoids the construction of wspd .",
    "in particular , if @xmath328 , for some constant @xmath175 , say @xmath329 , then we know that there exist a pair of vertices @xmath94 and @xmath95 such that @xmath330 .",
    "we collect the set @xmath331 of all pairs between @xmath22 and @xmath23 with distance smaller than @xmath175 . by similar packing argument as in ( in computing white cells ) , @xmath332 and we can compute @xmath331 in the same time / space . we then simply perform a binary search among @xmath331 to locate @xmath333 and compute @xmath334 exactly in @xmath335 time .",
    "we call this procedure exactfsmall(@xmath336 ) .",
    "[ fig : fig : apprfbackbone ]    for the case when @xmath337 , we perform a different search procedure as described in . easy to verify that loop can be called at most @xmath338 time , as obviously @xmath339 for backbonecurves .",
    "to see that the output of the algorithm is indeed an @xmath4-approximation of @xmath100 , observe that when the algorithm terminates , the sequence of answers from apprdecision ( ) is either a sequence of `` yes '' followed by * one * `` no '' , or a sequence of `` no '' followed by * one * `` yes '' .",
    "let assume that we have the first case ( the second is symmetric ) .",
    "suppose the output of the algorithm is @xmath340 , then we have that @xmath341 . in the previous iteration of the  loop , @xmath342 , as the answer",
    "then was `` yes '' .",
    "hence we have that @xmath343 if @xmath307 .",
    "this implies that @xmath340 @xmath4-approximates @xmath344 . hence follows",
    "[ apnd : d ]    the only step unexplained is how to compute @xmath271 $ ] by merging @xmath269 $ ] and @xmath280 $ ] in @xmath281| + |{c}[i]|)$ ] time .",
    "this can be achieved by a bottom - up scanning for @xmath280 $ ] and @xmath269 $ ] simultaneously .",
    "more specifically , given @xmath280 $ ] and @xmath269 $ ] , we can sort the endpoints of their intervals in @xmath281| + |{c}[i]|)$ ] time using merge sort .",
    "we process them in order and maintain the partial @xmath271 $ ] at any time . for sake of simplicity",
    ", we call an endpoint a _",
    "l - point _",
    "_ h - point _ ) of @xmath280 $ ] or @xmath269 $ ] if it is the low - endpoint ( resp . higher endpoint ) of some interval from @xmath280 $ ] or @xmath269 $ ]",
    "the pseudo - code is shown in , where @xmath345 = @xmath280 $ ] , @xmath346 $ ] , and the output is @xmath347 $ ] .",
    "it is easy to verify the correctness of the algorithm , and the running time is proportional to the sum of interval lists being merged ."
  ],
  "abstract_text": [
    "<S> we revisit the problem of computing frchet distance between polygonal curves under @xmath0 , @xmath1 , and @xmath2 norms , focusing on discrete frchet distance , where only distance between vertices is considered . </S>",
    "<S> we develop efficient algorithms for two natural classes of curves . </S>",
    "<S> in particular , given two polygonal curves of @xmath3 vertices each , a @xmath4-approximation of their discrete frchet distance can be computed in roughly @xmath5 time in three dimensions , if one of the curves is _ </S>",
    "<S> @xmath6-bounded_. previously , only a @xmath6-approximation algorithm was known . </S>",
    "<S> if both curves are the so - called _ backbone  curves _ , which are widely used to model protein backbones in molecular biology , we can @xmath4-approximate their frchet distance in near linear time in two dimensions , and in roughly @xmath7 time in three dimensions . in the second part </S>",
    "<S> , we propose a pseudo  output - sensitive algorithm for computing frchet distance exactly . </S>",
    "<S> the complexity of the algorithm is a function of a quantity we call the _ number of switching cells _ , which is quadratic in the worst case , but tends to be much smaller in practice . </S>"
  ]
}
{
  "article_text": [
    "we consider the following rectangle packing ( rp ) problem : given a set @xmath1 of @xmath0 rectangles , each having width @xmath2 and height @xmath3 , and a rectangular container of width @xmath4 and height @xmath5 , ask whether it is possible to orthogonally place all rectangles into the container without overlapping . if it is possible , we should answer yes and present a non - overlapping packing pattern ; otherwise we should answer no .",
    "note that : ( 1 ) @xmath6 , @xmath3 , @xmath4 and @xmath5 are positive _ real _ numbers .",
    "( 2 ) rectangles are rotatable , i.e. , each rectangle can be horizontally or vertically placed into the container .",
    "the rectangle packing problem arises in many industrial applications , such as cutting wood , glass , paper and steel in manufacturing , packing goods in transportation , arranging articles and advertisements in publishing .",
    "various algorithms have been proposed to solve this problem .",
    "they can be divided into three categories : approximate algorithms , heuristic algorithms and exact algorithms @xcite .",
    "most algorithms solve the rp problem by successively placing an unpacked rectangle into the container .",
    "then a basic problem arises : where to place a new rectangle when the container is already partially occupied by some packed rectangles ? generally , there are two approaches to handle this problem .",
    "the first approach assumes that the parameters of the rp problem are integers and rectangles can only be placed at some lattice sites @xcite .",
    "this approach enumerates all possible positions for a rectangle , thus no feasible solution will be missed . on the other hand , the number of possible positions for a rectangle is usually very large and this approach is not applicable to the real - parameter rp problem .",
    "the second approach adopts some placement heuristic which specifies several candidate positions for a rectangle @xcite .",
    "using placement heuristic is usually more efficient because the number of candidate positions for a rectangle is much smaller , and it is also applicable to the real - parameter rp problem .",
    "however , a risk conceals under the placement heuristic : when there exist feasible solutions , can we achieve one by successively placing a rectangle into the container using the placement heuristic ? if the answer is yes , then we say the placement heuristic is * complete * ; otherwise , * incomplete*. if a placement heuristic is incomplete , then any algorithm based on it is foredoomed to fail on some instances .",
    "for example , @xcite have proved that the bottom - left heuristic , which places a rectangle onto the lowest possible position and left - justify it , is incomplete .",
    "they found an instance for which any feasible solution can not be achieved using the bottom - left heuristic , no matter what ordering of the rectangles is used .",
    "@xcite proposed a placement heuristic and developed an exact algorithm for the three dimensional bin packing problem .",
    "later , @xcite found that some instances can not be solved using the placement heuristic proposed by @xcite .",
    "it is usually very difficult to prove a placement heuristic s completeness or incompleteness . nevertheless , for a special case of the rp problem ,",
    "the 2d rectangular perfect packing problem , @xcite have shown that the bottom - left heuristic is complete .",
    "they presented the following theorem : _ for every perfect packing , there is a permutation of the rectangles that yields that packing using the bottom - left heuristic .",
    "_ an efficient branch and bound algorithm is also developed based on this theorem . besides this result",
    ", we have not found other paper in literature proving a certain placement heuristic s completeness .",
    "particularly , no placement heuristic has been rigorously proved to be complete for the general rp problem .",
    "this paper gives a placement heuristic and rigorously proves its completeness .",
    "we present the following bottom - left placement theorem : _ if it is possible to orthogonally place @xmath0 arbitrarily given rectangles into a rectangular container without overlapping , then we can achieve a feasible packing by successively placing a rectangle onto a bottom - left corner .",
    "_ this theorem lays a solid foundation for many efficient and exact algorithms for solving the rp problem@xcite .",
    "it is also possible to develop efficient and effective heuristic algorithms based on this theorem .",
    "the rest of the paper is organized as follows .",
    "section 2 presents several notations and definitions .",
    "section 3 proves the bottom - left placement theorem .",
    "finally , section 4 concludes this paper and presents some open problems .",
    "we designate the bottom - left corner point of the container as the origin of the @xmath7-plane and let its four sides parallel to @xmath8 and @xmath9 axis , respectively .",
    "a placement of rectangle @xmath10 in the container can be described by three variables @xmath11 , where @xmath12 is the coordinate of its bottom - left corner point , @xmath13 denotes its orientation , @xmath14 means it is vertically placed , @xmath15 otherwise .",
    "a packing pattern of @xmath0 rectangles can be described by a vector of @xmath16 elements : @xmath17 .",
    "we give the following definitions .",
    "a feasible ( or non - overlapping ) packing must satisfy the following three conditions :    1 .",
    "each rectangle must be orthogonally placed into the container .",
    "2 .   each rectangle must not overstep each border of the container .",
    "3 .   the overlapping area between any two rectangles must be zero .        in a feasible packing",
    ", a rectangle is _ bottom - left stable _ if and only if it can not move downwards or leftwards without overlapping others @xcite . a feasible packing is _ bottom - left stable _ if and only if each rectangle in this packing is bottom - left stable .",
    "see fig.[fig : blc ] , each rectangle in the depicted packing has bottom - left stability and the packing is bottom - left stable .    a bottom - left corner is an unoccupied position where an advisably large rectangle has bottom - left stability .",
    "see fig.[fig : blc ] , there are in total five bottom - left corners : a , b , c , d and e.    a bottom - left placement action is an action that places a rectangle onto a bottom - left corner and makes that rectangle bottom - left stable .",
    "we say rectangle @xmath18 is over rectangle @xmath19 if and only if there exists a positive real number @xmath20 such that if rectangle @xmath19 moves upwards by a distance of @xmath20 , then the overlapping area between rectangles @xmath19 and @xmath18 is greater than zero .",
    "see fig.[fig : j - over - i ] , rectangles 2 and 3 are over rectangle 1 , rectangles 4 and 5 are not over rectangle 1 .",
    "we say rectangle @xmath19 _ can move upwards freely _ if and only if no rectangle is over rectangle @xmath19 .",
    "we say rectangle @xmath18 is on the right of rectangle @xmath19 if and only if there exists a positive real number @xmath20 such that if rectangle @xmath19 moves rightwards by a distance of @xmath20 , then the overlapping area between rectangles @xmath19 and @xmath18 is greater than zero .",
    "see fig.[fig : j - on - the - right - of - i ] , rectangles 2 and 3 are on the right of rectangle 1 , rectangles 4 and 5 are not on the right of rectangle 1 .",
    "we say rectangle @xmath19 _ can move rightwards freely _ if and only if no rectangle is on the right of rectangle @xmath19 .",
    "this section proves the bottom - left placement theorem .",
    "we first present two important lemmas .",
    "any feasible packing can be replaced by another feasible packing where each rectangle has bottom - left stability .",
    "see fig.[fig : lemma1 ] , the left packing can be replaced by the right bottom - left stable one . given a feasible packing @xmath21 , we prove that an equivalent bottom - left stable packing can be found from @xmath21 .",
    "keep the orientation of each rectangle unchanged , suppose that each rectangle can move freely and consider the following function : @xmath22 where @xmath23 is the overlapping area between rectangles @xmath19 and @xmath18 .",
    "@xmath24 is the overlapping area between rectangle @xmath19 and the * outside * of the container .",
    "@xmath25 is a continuous function defined on @xmath26 .",
    "let @xmath27 be a set of zero points of @xmath28 : @xmath29 .",
    "then each point in @xmath27 corresponds to a non - overlapping packing .",
    "@xmath27 is a non - empty , closed and bounded set because :    * @xmath21 is a zero point of @xmath28 , so @xmath27 is not empty .",
    "* @xmath28 is a continuous function , thus the limit of a sequence of zero points of @xmath28 is also a zero point , which implies @xmath27 is a closed set . * in any feasible packing , each rectangle must not overstep each border of the container , so @xmath27 is a bounded set .    then let s consider a continuous function defined on @xmath27 : @xmath30 according to real analysis , a continuous function over a non - empty , closed and bounded set must attain its minimum .",
    "let @xmath31 be the point in @xmath27 where @xmath32 attains its minimum .",
    "@xmath33 corresponds to a feasible packing where each rectangle can not move downwards or leftwards without overlapping others ; otherwise , we can find another point in @xmath27 with a smaller @xmath32 , contradicting the fact that @xmath32 attains its minimum on @xmath33 .",
    "@xmath34    note that lemma 1 has been explicitly mentioned by @xcite and implicitly used by almost all algorithms for solving the rectangle packing problem . however , to the best of our knowledge , a rigorous and formal proof is first presented here .    in any feasible packing , if we take away the four borders of the container , then there is a rectangle which can move upwards and rightwards freely .",
    "see fig.[fig : lemma2](a ) , the highlighted rectangle can move upwards and rightwards freely . given a feasible packing with @xmath0 rectangles , we sort the top - right corner points of the rectangles lexicographically by increasing @xmath35 and renumber the rectangles according to this order ( see fig.[fig : lemma2](b ) ) .",
    "we search for the rectangle which can move rightwards and upwards freely as follows .",
    "first , we consider the highest numbered rectangle among all @xmath0 rectangles , i.e. , rectangle @xmath0 ( 12 in fig.[fig : lemma2](b ) ) .",
    "its top - right corner point is the rightmost , thus it can move rightwards freely .",
    "if no rectangle is over rectangle @xmath0 , then @xmath0 is the rectangle we want to find . otherwise , we consider the highest numbered rectangle among all the rectangles over rectangle @xmath0 .",
    "let it be rectangle @xmath19 ( 10 in fig.[fig : lemma2](b ) ) .",
    "its top - right corner point is the rightmost among all the rectangles over rectangle @xmath0 .",
    "therefore , it can move rightwards freely . if no rectangle is over rectangle @xmath19",
    ", then @xmath19 is the rectangle we want to find .",
    "otherwise we consider the highest numbered rectangle among all the rectangles over rectangle @xmath19 and continue the search as described above .    because there are only @xmath0 rectangles ,",
    "the above search will terminate and we can finally find a rectangle which can move upwards and rightwards freely .",
    "@xmath34    for any feasible , bottom - left stable packing , there exists a numbering of @xmath0 rectangles such that rectangle @xmath36 locates on a bottom - left corner formed by rectangles @xmath37 and the four borders of the container .    according to lemma 2",
    ", there is always a rectangle which can move rightwards and upwards freely in any feasible packing .",
    "consequently , for a feasible packing with @xmath0 rectangles , we can empty the container by successively taking out a rectangle which can move rightwards and upwards freely .",
    "we then number the rectangles according to the order in which rectangles are taken out . under this numbering ,",
    "a higher numbered rectangle is not over or on the right of a lower numbered rectangle ( see fig.[fig : theorem1](a ) ) .",
    "now we consider a new numbering which is the reversion of the previous numbering , i.e. , the number of rectangle @xmath36 becomes @xmath38 ( see fig.[fig : theorem1](b ) ) . under this new numbering ,",
    "a lower numbered rectangle is not over or on the right of a higher numbered rectangle .",
    "then , for rectangle @xmath36 , the labeled numbers of the rectangles forming the bottom - left corner where rectangle @xmath19 locates are smaller than @xmath19",
    ".    the new numbering of the rectangles can be taken as an order in which rectangles are placed into the container . under this order , when we place rectangle @xmath19 into the container , rectangles @xmath37 are already in the container and rectangles @xmath39 are not .",
    "then this theorem shows that , any feasible , bottom - left stable packing can be achieved through a sequence of placement actions , among which the @xmath19th @xmath40 action is to place rectangle @xmath19 onto a bottom - left corner formed by rectangles @xmath37 and the four borders of the container .",
    "that is to say , any feasible , bottom - left stable packing can be achieved through a sequence of bottom - left placement actions .",
    "@xmath34    arbitrarily given @xmath41 rectangles and a rectangular container , if it is possible to orthogonally place all rectangles into the container without overlapping , then we can find a feasible packing through a sequence of bottom - left placement actions .    according to lemma 1",
    ", there exists a feasible packing where each rectangle has bottom - left stability . then according to theorem 1 , this bottom - left stable",
    "packing can be found through a sequence of bottom - left placement actions .",
    "@xmath34    the rectangle packing problem can be solved after finite times of bottom - left placement actions . that is to say , the rectangle packing problem can be solved after finite times of basic arithmatic and logical operations on the real input parameters @xmath42 .",
    "the proofs of theorems 1 and 2 show that , if it is possible to place all @xmath0 rectangles into the container without overlapping , then we can find a feasible packing by performing only finite times of bottom - left placement actions .",
    "the number of all possible bottom - left placement actions is less than @xmath43 , where @xmath44 denotes all possible permutations of @xmath0 rectangles , @xmath45 all possible orientations of @xmath0 rectangles , and @xmath46 is an upper bound of all possible bottom - left corners for a rectangle .",
    "@xmath43 is finite , therefore , the search for a feasible packing will finish when all possibilities are checked or once a feasible packing is found . in the end , if a feasible packing is found , we can answer yes and present the found feasible packing ; otherwise , we can answer no , i.e. , it is impossible to orthogonally place all @xmath0 rectangles into the container without overlapping .",
    "note that each bottom - left placement action can be determined by only finite times of basic arithmatic and logical operations , so the theorem is proved .",
    "in this paper , we have proved a bottom - left placement theorem stating that if there exist feasible packings for the rp problem , then we can achieve one by successively placing a rectangle onto a bottom - left corner . in the future ,",
    "we want to develop efficient heuristic algorithms for the rp problem based on this theorem .",
    "e. d. boef , j. korst , s. martello , d. pisinger , d. vigo .",
    "erratum to `` the three - dmensional bin packing problem '' : robot - packable and orthogonal variants of packing problems , operations research 53 ( 4 ) ( 2005 ) 735 .",
    "m. kenmochi , t. imamichi , k. nonobe , m. yagiura , h. nagamochi .",
    "exact algorithms for the two - dimensional strip packing problem with and without rotations , european journal of operational research 198 ( 1 ) ( 2009 ) 73 - 83 ."
  ],
  "abstract_text": [
    "<S> this paper proves a bottom - left placement theorem for the rectangle packing problem , stating that if it is possible to orthogonally place @xmath0 arbitrarily given rectangles into a rectangular container without overlapping , then we can achieve a feasible packing by successively placing a rectangle onto a bottom - left corner in the container . </S>",
    "<S> this theorem shows that even for the real - parameter rectangle packing problem , we can solve it after finite times of bottom - left placement actions . </S>",
    "<S> based on this theorem , we might develop efficient heuristic algorithms for solving the rectangle packing problem .    </S>",
    "<S> rectangle packing , bottom - left , bottom - left placement theorem , np hard </S>"
  ]
}
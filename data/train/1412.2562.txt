{
  "article_text": [
    "in mechanical design , tolerancing analysis consists in simulating the geometric variations due to the manufacturing process . a common way to simulate the variations of an over - constrained mechanical system is to manipulate sets of constraints in @xmath3 , to limit the 6 degrees of freedom ( 3 translations and 3 rotations ) , see @xcite . in order to compute the cumulative stack - up of variations we need to calculate the minkowski sums @xcite and intersections of sets of contraints modelled by polytopes in @xmath3 .",
    "two algorithms were developped in this direction in @xcite and @xcite but only in @xmath4 . in @xcite and @xcite ,",
    "delos and fukuda introduce other methods summing polytopes in @xmath5 but they only work with the polytopes @xmath2-description and in tolerancing analysis , the polytopes are first defined by half - spaces",
    ". we can take advantage of this important property in order to set up the following algorithm .",
    "moreover , making use of the @xmath1-representation can speed up the algorithm and is a key element in computing intersections further on . and finally , as we are in small dimensions , computing the double description is not a problem as stated in @xcite we can find cases where : _ `` the number of facets of the convex hull of a set of k points in euclidean n - space can be of order @xmath6 even when n is considered fixed''_.    the goal of this paper is to describe two ways of computing minkowski sums of polytopes , whether we choose to work in the primal or dual spaces .",
    "the dual space approach has come to an algorithm implemented and tested in c++ while the other one is still under investigation .",
    "we finally introduce some promising perspectives to reach the objective of having a stable algorithm in the field of tolerancing analysis .",
    "given two sets @xmath7 and @xmath8 , let @xmath9 be the minkowski sum of @xmath7 and @xmath8 @xmath10          a _ polytope _ is defined as the convex hull of a finite set of points , called the @xmath2-representation , or as the bounded intersection of a finite number of half - spaces , called the @xmath1-representation .",
    "the minkowski - weyl theorem states that both definitions are equivalent .      for each vertex @xmath11 of a polytope",
    ", we define the set @xmath12 of its edges oriented towards its neighbours . with @xmath13",
    "we build a polyhedral cone @xmath14 named the primal cone of @xmath11 :    @xmath15    we can note that a polytope can be written as the intersection of all the primal cones attached to its vertices .",
    "let @xmath7 be a @xmath5-polytope and @xmath16 the list of its vertices such as @xmath17 :    @xmath18    for each vertex @xmath11 of a polytope , we define the set @xmath19 of the outer normals of its corresponding facets .",
    "with @xmath20 we build a polyhedral cone @xmath21 named the dual cone of @xmath11 :    @xmath22    it is also the set of hyperplane outer normals which find their maximum on this specific vertex :    @xmath23    @xmath24 is defined as the set of all the dual cones of a given polytope , it forms a partition of the whole space @xmath5 which is called the _ normal fan _ of the polytope .",
    "as stated in @xcite by weibel _ `` the normal fan of polytopes contains all of their combinatorial organization .",
    "it is therefore enough to compute the normal fan of a minkowski sum to have its combinatorial properties .",
    "we can then easily deduce the polytope itself by combining these informations with the summand polytopes .",
    "we know that the normal fan of a minkowski sum is the common refinement of the normal fans of its summands . ''",
    "_ this is why we developped such an approach in a previous article named _ algorithm to calculate the minkowski sums of 3-polytopes based on normal fans _ in @xmath5 . to extend the results in @xmath5",
    "we need some theoritical results .",
    "ziegler and gritzmann give the normal fan of the sum of two @xmath5-polytopes in @xcite and @xcite .",
    "let @xmath7 and @xmath8 with their respective lists of vertices @xmath16 and @xmath25 :    @xmath26    where @xmath27 is called the common refinement .",
    "so it is clear that computing the sum of two polytopes can be performed by intersecting polyhedral cones .",
    "this is illustrated in fig .",
    "[ com_raf ] .    in the following",
    "we will emphasize on how finding the minkowski vertices i.e. the vertices of the two operands sum .",
    "let @xmath7 , @xmath8 and @xmath9 be three @xmath5-polytopes such as @xmath28 , let @xmath16 , @xmath25 and @xmath29 be their lists of vertices .",
    "let @xmath30 , from @xcite we know that the vertex @xmath31 can only be the sum of a face from @xmath7 and a face from @xmath8 . for reasons of dimension",
    ", @xmath31 is necessarily the sum of two vertices @xmath32 and @xmath33 .",
    "let s characterize now the dual cone of @xmath31 .",
    "@xmath34    let @xmath35 then @xmath36 and @xmath37 .",
    "so @xmath38 which means that @xmath39 i.e. @xmath40 .    on the other side let @xmath41 , by definition @xmath39 .",
    "if we decompose @xmath31 in a sum of vertices @xmath42 and @xmath43 we get @xmath44 , but we know that in general @xmath45 and @xmath46 so for compatibility reasons with the formula of decomposition of @xmath31 , the inequalities must be equalities .",
    "it gives @xmath36 and @xmath37 which means @xmath35 .",
    "now we have to ask ourselves what are the conditions to get a minkowski vertex when we compute the intersection @xmath47 ?",
    "let @xmath7 and @xmath8 be @xmath5-polytopes of full dimension @xmath0 , @xmath16 and @xmath25 be their vertices lists .",
    "let @xmath48 , and @xmath49 :    @xmath50    in @xcite , fukuda and weibel indicate that _ `` faces of a polytope and their normal cones have dual properties . in particular , if f is a @xmath51-dimensional face of a , then the normal cone @xmath52 is a @xmath53-dimensional cone of @xmath5 . '' _",
    "so @xmath54 as @xmath31 is a @xmath55-face .",
    "reciprocally if @xmath56 then @xmath57 such as @xmath58 and @xmath59 .",
    "so @xmath60 .",
    "hence @xmath61 .    following the same idea",
    "we can find the facets of the polytope @xmath9 from @xmath62 edges .",
    "we now have all the tools to build minkowski vertices and facets .",
    "list of dual cones of a @xmath63 list of dual cones of b @xmath64 compute @xmath65 @xmath66 get the half - spaces passing through @xmath67 from @xmath65 edges      to perform such an operation , in @xcite fukuda gives interesting insights and efficient - to - use strategies despite the fact , as the author says , _ `` that we can hardly state any interesting theorems on its time and space complexities''_. the underlying physical problem we designed this algorithm for , is in low dimension so obtaining the polytopes double description is not a problem . in tolerancing analysis ,",
    "it can even be done in an analytical way but beware that the number of vertices and facets can be exponential according to the dimension of the space we work in . as a example a tetraedon in @xmath5 has only @xmath68 vertices and @xmath68 facets but a cube has @xmath69 facets and @xmath70 vertices . in @xcite one can find an optimum algorithm , when @xmath0 is constant , to compute convex hulls that runs in time @xmath71 for @xmath72 , @xmath73 being the number of vertices .",
    "such an upper bound can not be reduced as it is of the order of the larger output .",
    "so in high dimensions the kind of polytopes you handle can have a very strong impact on the performances of the minkowski sum algorithm .",
    "in @xcite we can find a good introduction on families of polytopes and the way they behave in algorithmic contexts .",
    "this algorithm has been coded in c++ and is available under the gnu general public licence v3.0 at http://i2m.u-bordeaux.fr/politopix .",
    "it has been tested and is now fully operational in @xmath3 in the frame of tolerance analysis in mechanical engineering , as well as it is in any dimension given the limitations we previously described .",
    "the basic idea behind this algorithm is quite simple .",
    "as soon as we get @xmath74 and @xmath75 such as @xmath76 , we do not pick dual cones from @xmath7 in a random way but we rather select the list of @xmath74 neighbours to intersect them with @xmath75 .",
    "while we find intersections of dimension @xmath0 , we keep on picking up the neighbours of the neighbours and so on .",
    "let s assume that the two dual cones @xmath74 and @xmath75 intersects with each other such as , at least one half - space hyperplane @xmath77 of @xmath74 separates @xmath75 .",
    "then it is obvious that the neighbour dual cone @xmath78 that shares @xmath77 with @xmath74 has also a non empty intersection with @xmath75 .",
    "we can take advantage of this neighbourdhood property to speed up the algorithm .",
    "so we introduce the notion of polyhedral cap .",
    "let @xmath7 , @xmath8 and @xmath79 be @xmath5-polytopes and @xmath16 , @xmath25 , @xmath29 their respective lists of vertices . for a given vertex @xmath32 we want to find the list of all the vertices of @xmath8 that will give a minkowski vertex in @xmath9 .",
    "we define the polyhedral cap of the vertex @xmath80 in the polytope @xmath8 this way @xmath81 , its complementary list in @xmath25 is @xmath82 .",
    "let @xmath7 et @xmath8 be two @xmath5-polytopes , @xmath83 :    @xmath84    @xmath85    we want to show that @xmath86 .",
    "by definition @xmath87 so @xmath88 , let @xmath89 be @xmath90 , so @xmath91 we have @xmath92 .",
    "let s admit that for the @xmath93 first dual cones of @xmath8 we have @xmath94 @xmath95 , which means that they do not intersect with @xmath74 or only with its frontier .",
    "given that @xmath96 it must only be the last dual cone in @xmath97 that intersects with @xmath74 interior . as a consequence @xmath98 so @xmath99 .",
    "in all the cases we have at least one vertex in @xmath8 that verifies this property so @xmath100 .    list of dual cones of a @xmath63 list of dual cones of b @xmath64 @xmath101 compute @xmath102 @xmath103 @xmath104 _ // now find @xmath80 polyhedral cap . _",
    "processneighbours(@xmath105 )    we shall proove now that @xmath106 is connected .",
    "let @xmath107 and @xmath108 i.e. @xmath109 and @xmath110 .",
    "is there a path of vertices of @xmath8 , leading from @xmath111 to @xmath112 in @xmath113 ?",
    "we know that @xmath114 and @xmath115 .",
    "we choose in the interiors @xmath116 and",
    "@xmath117 so @xmath118 \\subset int ( c_d(a ) ) $ ] .",
    "we build the list @xmath119 of dual cones in @xmath97 whose intersection is not empty with the segment @xmath120 $ ] and that verify the following property : once we leave one of the bounding half - spaces of the current cone @xmath75 , we add to @xmath119 its neighbour cone that shares with @xmath75 the frontier of this current half - space .",
    "we can note that once we leave a cone , we will never process it again , as we remain on the segment @xmath120 $ ] we can never re - enter a bounding half - space we previously left .",
    "so @xmath119 is a finite ordered list .",
    "we can also say that if @xmath120 $ ] passes through the interior of @xmath75 then @xmath121 is a minkowski vertex in @xmath9 . on the other side",
    "if @xmath120 $ ] intersects @xmath75 only with its frontier then as @xmath118 \\subset int ( c_d(a ) ) $ ] it is easy to build a point still inside @xmath122 that will also be in the interior of @xmath75 , we only have to shift away from @xmath120 $ ] by a very small quantity . in all the cases",
    "@xmath123 , moreover two consecutive dual cones in @xmath119 are connected , so are their corresponding vertices in @xmath8 .",
    "so @xmath119 is a list having for first and last elements @xmath111 and @xmath112 connected through neighbour vertices @xmath124 such that @xmath123 . so @xmath106 is connected .    _ //",
    "find neighbours through common facets _",
    "procedure processneighbours(@xmath105 ) mark @xmath75 as processed _ // at this step @xmath125 and @xmath126 are neighbours in b _",
    "compute @xmath127 @xmath128 processneighbours(@xmath129 )    end procedure",
    "we will now consider the primal cones of the polytopes we handle that is to say , for each vertex @xmath48 , the cones defined by the intersection of the half - spaces @xmath130 attached to this current vertex . in an equivalent manner , we can say that , given @xmath48 , such cones can be generated by all the edges attached to @xmath42 and pointing towards its neighbour vertices @xmath131 .",
    "let s write @xmath132 the set of the vertices of @xmath16 adjacent to @xmath42 , with @xmath133    @xmath134          let @xmath135 and @xmath136 be two cones attached to the origin : @xmath137    let @xmath138 then @xmath139 such as @xmath140 .",
    "yet @xmath141 and @xmath142 which means that any point in @xmath143 can be written as a point included in the convex hull of @xmath135 and @xmath136 hence @xmath144 .",
    "let @xmath145 then @xmath139 and @xmath146 $ ] such as @xmath147 . yet @xmath148 so @xmath149 , @xmath150 hence @xmath151 which means that @xmath152 can be written as the sum of two elements from @xmath7 and @xmath8 so @xmath153 .",
    "it is easy to transpose this property to the case of two cones attached to the vertices @xmath42 and @xmath43 in the polytopes @xmath7 and @xmath8 provided that we translate them first in @xmath154 and hereafter compute the convex hull :    @xmath155    if @xmath156 is a minkowski vertex of @xmath157 then :    @xmath158    from @xcite if @xmath31 and @xmath159 are two adjacent vertices in @xmath9 with their given decomposition in elements of @xmath7 and @xmath8 , @xmath160 et @xmath161 then @xmath42 et @xmath162 are either equal or adjacent ( respectively @xmath43 and @xmath163 ) .",
    "we deduce that the list of edges defining @xmath164 is a sublist of @xmath165 , defined as the list of edges of both @xmath166 and @xmath167 translated in @xmath31 .",
    "so @xmath168 because @xmath169 is entirely defined by @xmath165 .",
    "for the reciprocal we use the dual , we know that @xmath170 so @xmath171    these relations are reversed in the primal space : @xmath172    hence @xmath173 because @xmath164 is convex .",
    "now we can give the property linking primal and dual cones respectively attached to the vertices @xmath87 and @xmath174 when their sum provide a minkowski vertex :    @xmath175 @xmath176    the proof is quite straightforward , as @xmath31 is a minkowski vertex then @xmath170 and the dual of the dual is the primal so @xmath177 .",
    "this property is fundamental in the sense that it can make the connection between a polyhedra intersection problem on one side , and a polyhedra convex hull computation on the other . in the context of the sums of polytopes we re aware that if @xmath156 is a minkowski vertex of @xmath157 then computing the convex hull of the two primal cones @xmath166 and @xmath167 is equivalent to computing the intersection between their corresponding duals @xmath122 and @xmath178 , see fig . [ inter_hull ] . as a consequence we can compute @xmath179 @xmath180 - which means we can find all facets of @xmath9 - with data coming only from the primal space . given that a polytope is entirely determined by its vertices or facets we can write the following property for @xmath7 and @xmath8 two @xmath5-polytopes with respectively @xmath73 and @xmath89 vertices .",
    "let s note @xmath181 the set of indices that provide a minkowski vertex in @xmath182 i.e. @xmath183 .",
    "@xmath184    we can generalize this property to all the sums of vertices as it is easy to proove that whatever @xmath87 and @xmath174 , @xmath185 because we know that @xmath186 and @xmath187 .",
    "so it is clear that :    @xmath188      with the property [ basic_primal ] , it is quite easy to set up an algorithm computing the polytope @xmath79 .",
    "list of primal cones of a @xmath189 list of primal cones of b @xmath190 @xmath191 and @xmath192 such as @xmath193    processcones(@xmath194 )       procedure processcones(@xmath195 ) mark @xmath104 as processed find facets , edges of @xmath196 processcones(@xmath194 )    end procedure    starting from a first minkowski vertex @xmath197 we just need to compute its edges making sure they belong to the convex hull of the cone @xmath198 .",
    "following such edges will leed to @xmath199 neighbours where we will compute their corresponding convex hulls . at this step",
    "it is important to note that , to identify minkowski vertices , if @xmath200 is a neighbour if @xmath199 then @xmath201 and @xmath202 are either equal or adjacent in @xmath7 , @xmath111 and @xmath112 are either equal or adjacent in @xmath8 .",
    "the edges of @xmath9 are either parallel to an edge of @xmath7 or an edge of @xmath8 .",
    "we have reduced our problem to a convex hull algorithm .",
    "however as stated in @xcite _ `` we are still very far from knowing the best ways to compute the convex hull for general dimensions '' _ and the author adds _ `` in the general case , there is no known polynomial algorithm''_. despite the current state - of - the - art we believe we do not have only a theoritical achievement with property [ primal_cones_sum ] .",
    "the reason is due to the fact that it is not just about computing the convex hull of a set of edges coming from cones @xmath135 and @xmath136 but rather computing the convex hull of two sets of edges , each one of them being already convex . as building a convex set from two convex sets",
    "is easier , we plan to explore this track in the future .",
    "we have developped and implemented a dual algorithm based on the intersection of dual cones used in the field of tolerance analysis where it behaves very well in terms of robustness and computation time .",
    "however the fact that we handle the double description to sum polytopes could possibly be a limitation if one needs to work in high dimensions . in the second part",
    ", we introduced new properties to remain in the primal space and proposed another way to perform the operation .",
    "now we plan to work on a parallel version of the first as well as improving the theoritical background of the second ."
  ],
  "abstract_text": [
    "<S> minkowski sums cover a wide range of applications in many different fields like algebra , morphing , robotics , mechanical cad / cam systems ... this paper deals with sums of polytopes in a @xmath0 dimensional space provided that both @xmath1-representation and @xmath2-representation are available i.e. the polytopes are described by both their half - spaces and vertices . </S>",
    "<S> the first method uses the polytope normal fans and relies on the ability to intersect dual polyhedral cones . </S>",
    "<S> then we introduce another way of considering minkowski sums of polytopes based on the primal polyhedral cones attached to each vertex .    </S>",
    "<S> * keywords : * computational geometry , convex polytope , minkowski sum , normal fan , polyhedrical cone . </S>"
  ]
}
{
  "article_text": [
    "quantum algorithms have been proved to be exponentially faster than their classical counterparts in problems such as deutsch s problem@xcite , simon s problem@xcite and super - polynomially faster in order finding@xcite .",
    "all of these problems have some simplifying features and the quantum algorithms which solve these problems make use of such features while exploiting quantum parallelism and , in some cases , entanglement .",
    "if there is no such simplifying feature , quantum algorithms do not perform this well . nevertheless ,",
    "as grover showed , one can obtain at least a quadratic speedup@xcite for searching a single item in an unstructured database .",
    "unfortunately this small - scale speedup is shown to be the upper limit of quantum database search algorithms@xcite ; however wide range of applications compensate for this .    several generalizations and variations of grover s algorithm is explored up to now . in ref .  , the problem of searching for several items , instead of a single item , is studied . in this case",
    ", the algorithm gives one of the solutions randomly at the output . in ref .",
    ", it is shown that using an arbitrary unitary ( instead of the hadamard transform which were used in the original grover algorithm ) does not change the @xmath0 run - time as long as it is used consistently .",
    "if there is an inner structure to be exploited , this unitary can be chosen accordingly to obtain quadratic speedup for the new search space .",
    "further generalized the algorithm such that the initial state@xcite and the phase inversion angle@xcite are arbitrary and obtained similar results .",
    "grover s original algorithm is not deterministic , but with a few tweaks it is possible to obtain solutions with zero error probability@xcite . it does not monotonically converge to a solution ( i.e.",
    ", if you run it too much , it misses the target ) but it can also be altered to become a fixed point algorithm@xcite .",
    "an important problem related to database search is counting the number of roots of a given boolean function @xmath1 . in this problem ,",
    "the aim is to find the number of inputs @xmath2 that gives @xmath3 ( or equivalently the number of the roots of @xmath4 is sought ) .",
    "_ gave a practical method to accomplish this task approximately , by employing grover iteration as well as quantum fourier transform@xcite .",
    "another specific problem in which grover search iteration is used is the weight analysis of boolean functions .",
    "the ratio of the number of solutions of @xmath4 , to the number of all possible inputs is called the weight of a function .",
    "weight analysis of boolean functions has proved to be useful in areas such as cryptanalysis@xcite , coding theory@xcite , fault - tolerant circuit design@xcite , and for built - in self - testing circuits@xcite .",
    "weight analysis using grover algorithm is studied by braunstein _",
    "et al . _ and choi and braunstein in a series of papers@xcite .",
    "they first solve the problem with a restriction where they only consider two `` symmetric '' weights ( i.e. , the function is known to have a weight either equal to @xmath5 or @xmath6 )",
    ". then they generalize it to the asymmetric case where the restriction on the weights is now removed .",
    "this task can also be accomplished by using quantum counting@xcite . however , in that case , one needs to introduce quantum fourier transform and quantum counting is still slightly slower than the weight decision algorithm .    in this contribution ,",
    "the weight decision problem is studied by an alternative approach .",
    "the main motivation is to see which weights could be distinguished by a given number of function evaluations , especially in the regime where only a few evaluations are required . as the algorithm devised by braunstein _",
    "requires at least 3 function evaluations , the approach used in this article covers an unexplored territory .",
    "the organization of the article is as follows .",
    "section [ sec : definitions ] starts with a general grover iteration which consists of unitaries which are more general than the hadamard transform of the original algorithm .",
    "the basic definitions are given and an essential theorem is presented in this section .",
    "the first problem tackled in section [ sec : main - results ] is the decision problem of a zero weight and a non - zero weight .",
    "after that , the decision problem of two non - zero weights by a few iterations is discussed .",
    "exact solutions are given for 1 and 2 iterations .",
    "for 3 or more iterations , the associated equations become too complicated and thus we are forced to present numerical solutions for a few cases . a brief comparison of classical and quantum efficiencies and",
    "a comparison to the algorithms of braunstein _ et al . _",
    "are also included in this section .",
    "finally , brief concluding remarks are given in section [ sec : conclusions ] .",
    "let us first define the problem .",
    "we are given a boolean function @xmath1 of @xmath7 possible inputs @xmath8 .",
    "we somehow know that the function has either the weight @xmath9 or the weight @xmath10 .",
    "in other words , the total number of inputs @xmath2 for which @xmath4 is either @xmath11 or @xmath12 . our job is to determine which one is the case .",
    "note that by `` weight decision problem '' we imply the general case which is usually `` asymmetric '' as in @xcite , that is to say , @xmath13 is not necessarily equal to @xmath7 .",
    "the evaluation is implemented in a quantum computer as a black box .",
    "the function evaluator , upon reading the input register ( which is an @xmath7-level system ) , adds the value of the function on the result qubit .",
    "denoting the unitary transformation of the function evaluation by @xmath14 we have @xmath15 where i denotes the @xmath7-level input register and r denotes the result qubit . using the basis @xmath16",
    ", the action of @xmath17 can also be expressed as @xmath18 therefore , when @xmath4 , the overall phase of the state @xmath19 is rotated by @xmath20 radians .",
    "the phases of the states @xmath21 remain unchanged irrespective of the function @xmath1 .",
    "let a be an ancilla system .",
    "let @xmath22 be a set of orthonormal vectors in the state space of the composite system air .",
    "consider the following unitary operator @xmath23 that acts on the composite system @xmath24 this operator is essentially an inversion operation in an @xmath25-dimensional subspace of the hilbert space , namely the subspace spanned by @xmath26 .",
    "the successive application of @xmath14 and @xmath23 constitute a single iteration step @xmath27 . to express the effect of multiple iterations of @xmath28 on an arbitrary initial state , it is convenient to first define an @xmath29 matrix @xmath30 , which will be called as the `` cosine matrix '' , as @xmath31 as @xmath17 is unitary with real eigenvalues of @xmath32",
    ", it is also hermitian .",
    "this implies that the cosine matrix @xmath33 is hermitian and all of its eigenvalues are in the @xmath34 $ ] interval . in that case",
    ", we can think of @xmath33 as the cosine of an angle matrix @xmath35 , i.e. , @xmath36 .",
    "next , we define @xmath29 matrices @xmath37 for all integer values @xmath38 by @xmath39 which is actually a polynomial function of @xmath33 .",
    "note that all of these matrices depend on the function @xmath1 .",
    "when necessary , this dependence will be shown by @xmath40 , @xmath41 and @xmath42 .",
    "but , the function will not be shown explicitly when there can be no confusion",
    ".    we can express our fundamental result in terms of the @xmath37 matrices as follows .",
    "[ thm : qp ] if the initial state is one of @xmath43 , then , after @xmath38 iterations of @xmath44 , the final state is @xmath45    the proof is rather straightforward . one",
    "first verifies eq .   for @xmath46 and @xmath47 .",
    "after that , showing that the matrices @xmath37 satisfy the following recurrence relation @xmath48 and using these in @xmath49 completes the proof of the theorem .",
    "the details are left to the reader .",
    "a slightly more complicated , but still simple expression can be found for @xmath50 for any arbitrary initial state @xmath51 . however , that general case will not be needed in this contribution",
    ".    the problem is as follows .",
    "we prepare the initial state of the input register i , result qubit r and ancilla a in the state @xmath52 where the amplitudes @xmath53 will be determined later . after that , the evaluation of the unknown function @xmath1 and the unitary @xmath23 are alternatingly applied @xmath38 times . in other words , @xmath54 is applied on the composite system .",
    "the final state of the composite system air is @xmath55 finally , a measurement is carried out on the composite system air for determining the weight of the function @xmath1 .    if this final measurement enables us to measure the correct weight of the function @xmath1 deterministically ( with probability 1 ) , then , it is necessary that all final states corresponding to functions with different weights are orthogonal . in other words ,",
    "if @xmath1 and @xmath56 are any two functions that could be possibly computed by the black box device , we should have @xmath57 whenever @xmath1 and @xmath56 have different weights . in this contribution ,",
    "only the case where the function computed by the black box device has either the weight @xmath58 or @xmath59 will be considered .",
    "therefore , if the correct weight of the unknown function could be determined after @xmath38 iterations , then the set of final states @xmath60 for functions with weight @xmath58 and the corresponding set for functions with weight @xmath59 should be in orthogonal subspaces .",
    "undoubtedly , how the final measurement is carried out is also important from the computation point of view .",
    "however , in this contribution , the primary concern is the possibility of distinguishing functions with different weights and not how the steps of the algorithm can be implemented .",
    "moreover , the length of the algorithm will be measured with the number of evaluations of the unknown function @xmath1 , presumably because this is very costly .",
    "hence , it is assumed that the preparation of the initial state @xmath61 , implementation of the unitary @xmath23 and the final measurement requires a much smaller number of computation steps than carrying out @xmath17 .",
    "for this reason , we are inclined to find only the smallest iteration number @xmath38 that is necessary for distinguishing two given weights @xmath58 and @xmath59 .    for the weight decision problem",
    ", it appears that the following choice for the @xmath43 is sufficient .",
    "@xmath62 here , @xmath63 are real parameters between 0 and 1 and the ancilla states @xmath64 are normalized and mutually orthogonal to each other ( i.e. , @xmath65 ) , so that @xmath66 are also normalized and mutually orthogonal to each other . in that case , the cosine matrix @xmath33 is diagonal .",
    "if the unknown function @xmath1 has weight @xmath58 , then the @xmath67th diagonal entry of @xmath33 is @xmath68 the angle eigenvalues are therefore bounded in the interval @xmath69 the matrices @xmath37 are also diagonal in this case and their @xmath67th diagonal entry are given by @xmath70",
    "first , the case where one of the weights is identically zero , @xmath71 is investigated . in this case , the decidability of distinguishing a function @xmath1 with weight @xmath72 and the zero function @xmath73 ( which is defined as @xmath74 for all @xmath2 ) is studied . in other words , we are given a function @xmath1 and we are told that either the function @xmath1 has weight @xmath58 ( but otherwise arbitrary ) or it is the zero function . we are asked to determine if @xmath1 is the zero function or not with a minimum possible number of function evaluations .",
    "classically , the deterministic algorithms require @xmath75 evaluations in the worst case although a single evaluation is sufficient if we are lucky .",
    "it is of some interest to see how quantum algorithms perform for this problem .    in this case ,",
    "@xmath76 and @xmath77 , thus leading to @xmath78 .",
    "if all functions with weight @xmath58 could be distinguished from @xmath73 after @xmath38 function evaluations , then we should have @xmath79 for all functions @xmath1 with weight @xmath58 .",
    "@xmath80 for any possible iteration number @xmath38 , the equation above can be satisfied with @xmath81 ( i.e. , @xmath23 is an inversion in a one - dimensional subspace spanned by @xmath82 ) . in this case , @xmath83 is a @xmath84 matrix , which we may denote by the value @xmath85 .",
    "we should therefore have @xmath86 for all functions @xmath1 with weight @xmath58 .",
    "if the iteration number @xmath38 is the minimum possible value , then @xmath85 should be independent of @xmath1 ( the definition of @xmath82 in the form in eq .",
    "is consistent with this ) and should be given by @xmath87 .",
    "the minimum iteration number is , therefore , the smallest integer @xmath38 where we can find a number @xmath88 in @xmath89 $ ] interval such that @xmath90 it is then straightforward to show that the smallest iteration number is given by @xmath91 where @xmath92 denotes the smallest integer greater than or equal to @xmath93 .",
    ".minimum weights of functions , which can be distinguished from the zero function @xmath73 by the only @xmath38 function evaluations . [ cols=\"^,^,^\",options=\"header \" , ]     one can also ask the reverse question : which weights @xmath58 can be distinguished by @xmath38 iterations ? in that case , the condition on the weights is found to be @xmath94 for a few small @xmath38 values , the threshold weights @xmath95 are tabulated in table  [ tab : minweightdistfromzerof ] .",
    "it appears that , with a single function evaluation ( i.e. , @xmath47 ) any function @xmath1 with weight @xmath58 can be distinguished from the zero function @xmath73 provided that @xmath96 .",
    "this special case corresponds to a variation of the deutsch - jozsa problem@xcite . in the deutsch - jozsa problem",
    ", one needs to distinguish functions @xmath1 with weight @xmath97 , from the constant functions @xmath73 and @xmath98 where @xmath99 ( i.e. , @xmath100 for all @xmath2 ) .",
    "if the weight @xmath58 is smaller than @xmath101 , more than one function evaluations are necessary .",
    "as it will be discussed below , when the weights to be distinguished @xmath58 and @xmath59 are closer to each other , more function evaluations are needed to identify the weight correctly .",
    "this is also the case for the current problem : when @xmath102 , one needs @xmath103 function evaluations in order to distinguish the weight @xmath58 from the weight @xmath71 .",
    "now , consider the problem of identifying the weight of the function when both of the possible weights @xmath58 and @xmath59 are non - zero . for simplicity , let us consider the choices in eq .",
    "so that the angle matrices @xmath35 are diagonal .",
    "let @xmath1 and @xmath56 be two functions with respective weights @xmath58 and @xmath59 .",
    "the inner product of the final states is given by @xmath104 consider the last term inside the sum of eq . .",
    "the matrix element can be evaluated as @xmath105 where @xmath106 is the number of inputs which make @xmath107 one , i.e. , @xmath108 is the weight of the function @xmath107 . for all possibilities for @xmath1 and @xmath56",
    ", @xmath106 can take on the values @xmath109 .",
    "as eq .   is linear in @xmath106 , the condition in eq .",
    "is reducible to two independent equations @xmath110 subject to the condition @xmath111 where @xmath112 and @xmath113 are given as follows : @xmath114 therefore we have to find @xmath25 tuplets @xmath115 , which are just points on the 2-dimensional plane such that @xmath116 .",
    "geometrically , this means that the origin @xmath117 is in the convex hull of the set of points @xmath118 .",
    "note that , with the choice in eq .  , @xmath119 and @xmath120 depend only on the fixed parameters @xmath38 , @xmath58 and @xmath59 ; and the adjustable parameter @xmath121 . keeping the dependence on the fixed parameters as implicit , and showing the dependence on @xmath121",
    "explicitly we can write @xmath122 and @xmath123 .",
    "therefore , the set of points @xmath124 lie on a continuous curve @xmath125 .",
    "the weights can be distinguished , therefore , if the origin , @xmath126 , is inside the convex hull of the whole curve @xmath125 for @xmath127 .",
    "in such a case , the problem can be solved with @xmath128 , i.e. , one needs to find only two points on the curve @xmath125 such that the line joining them passes from the origin .",
    "the associated values of @xmath88 and @xmath129 enables us to find @xmath82 and @xmath130 .",
    "therefore , the distinguishability problem of two weights @xmath58 and @xmath59 with @xmath38 function evaluations reduces to a problem in convex analysis : determining whether a point lies within the convex hull of a curve .",
    "both coordinates of the curve @xmath125 are actually polynomial functions of @xmath131 , @xmath132 where @xmath133 and @xmath134 denote the chebyshev polynomials that are defined by @xmath135 and @xmath136 and @xmath137 , @xmath138 . however",
    ", determining whether the origin lies in the convex hull of the curve is a complicated problem which can only be solved numerically in most cases .",
    "the case with @xmath47 is the simplest . in that case ,",
    "@xmath139 for all @xmath131 and therefore the origin can never be in the convex hull of the associated curve .",
    "this implies that , it is not possible to distinguish two weights which are both different from @xmath140 or @xmath141 by a single function evaluation .",
    "the curve for the case @xmath142 , @xmath143 and @xmath144 is shown in fig .",
    "[ fig : p2 ] . in this example",
    ", we can see that the parametric curve have @xmath145 at @xmath146 , which turns out to be the case for all situations",
    ". however , where the curve ends is nontrivial . if it cuts the horizontal axis again in the negative part of the axis , a convex combination that gives the origin",
    "is easily achieved .",
    "this simplification covers most of the solution space and can be utilized for a quick analysis . for a complete analysis one",
    "has to find compact inequalities for @xmath58 and @xmath59 .",
    "in order to understand the general case , @xmath142 case is studied first .     vs. @xmath147 for @xmath142 , @xmath143 and @xmath144 ]      for @xmath149 @xmath147 and @xmath150 becomes @xmath151 where we introduced superscripts to emphasize @xmath152 now we require that there exists two points @xmath153 and @xmath154 such that @xmath155 to do this , we must find two values , @xmath88 and @xmath129 , satisfying @xmath156 where @xmath157 and @xmath158 ( and , in parallel , @xmath159 and @xmath160 ) have opposite signs .",
    "it turns out that if there is a solution to eq .  , it can be realized with a single variable @xmath88 , while @xmath129 is set to @xmath141 .",
    "hence , we get @xmath161 where @xmath162 let @xmath163 be the discriminant of this quadratic equation .",
    "suppose that @xmath164 .",
    "all of the following conditions have to be satisfied for being able to distinguish these two weights : @xmath165 , @xmath166 , @xmath167 , and @xmath168 .",
    "the conditions for the case @xmath169 can be obtained simply by using @xmath170 symmetry .",
    "these conditions are found analytically using eq .   and by inspecting all possible orderings of the zeros and poles of @xmath171 .",
    "however , even for @xmath142 , the equation for the conditions on @xmath58 and @xmath59 requires solving a quadratic equation .",
    "calculations for bigger @xmath38 are even more forbidding and therefore numerical computations had to be utilized instead .",
    "numerical results for @xmath142 case is pictured in fig .",
    "[ fig : p2p8 ] among further results from @xmath172 to @xmath173 .",
    "basically the same procedure can be followed for @xmath174 .",
    "solving eq .   would be more and more challenging analytically with increasing @xmath38 .",
    "fortunately this problem is suitable for numerical analysis .",
    "note that solving this problem directly , without applying theorem [ thm : qp ] is also possible , however in that case we would have needed to optimize @xmath175 s . in this formulation , there is only one parameter , @xmath131 , to be optimized and this is a clear advantage .    in fig .",
    "[ fig : p2p8 ] , numerical results showing decidability of weights with several iterations ( @xmath142 to @xmath173 ) are plotted .",
    "it can be seen in the figure that , with each run , more weight combinations can be distinguished .",
    "however the rate of addition of distinguishable weight combinations decreases rapidly with each @xmath38 .     to @xmath173 .",
    "darker areas correspond to higher @xmath38 values and lighter areas correspond to lower @xmath38 values .",
    "lightest region is for @xmath142 .",
    "the disc - like black region on the diagonal corresponds to weight pairs that have no solutions with @xmath176 iterations . ]",
    "notice that for any number of iterations , the area corresponding to distinguishable weights is symmetric with respect to @xmath177 line since we start with the same initial states and we take the inner product of the final states . on the other hand",
    "we may expect one more symmetry .",
    "the problem of distinguishing @xmath58 and @xmath178 should be no different than distinguishing @xmath179 and @xmath180 because flipping function outputs does not change the complexity of the problem , thus the figure should also have been symmetric with respect to the other diagonal .",
    "however possible advantageous output flips does not come out naturally as solutions in our formalism .",
    "this is also a strong indication for the non - optimality of the solutions provided in this contribution .",
    "a quick but rough analysis can be made for comparing the efficiencies of classical and quantum algorithms .",
    "classically , with a non - probabilistic algorithm we need to make @xmath181 queries in the worst case .",
    "however we can do better with a probabilistic algorithm .",
    "in such an algorithm , the weight can be estimated by computing the function @xmath1 for @xmath182 random inputs .",
    "to be able to distinguish two weights @xmath58 and @xmath59 , the variance of the estimate should be smaller than @xmath183 . for large @xmath7",
    ", this process can be approximated as a binomial process , which leads to a value of @xmath184 evaluations . in the quantum case ,",
    "a quick estimate of minimum evaluation number can be obtained as follows : since the @xmath185 curve always starts at the point @xmath186 , we can only look if this curve intersects with the negative @xmath187 axis . for large @xmath38 ,",
    "this approximation is good enough for estimating the order of the run - time of the algorithm .",
    "thus we look for the roots of @xmath188 and see if the value of @xmath187 can be negative at these roots .",
    "as can be seen from eq .",
    "either @xmath189 or @xmath190 is an integer multiple of @xmath20 at the roots of @xmath188",
    ". the value of @xmath187 can be negative for these cases only if @xmath191 .",
    "since we are dealing with weights that are close to each other , we can linearize the expression and finally obtain @xmath192 a comparison of equations and indicate that a quadratic speedup is obtained by using grover iterations for the weight distinuishability problem .",
    "this result is compatible with the bounds given for the grover algorithm @xcite and choi and braunstein s algorithms@xcite .",
    "a comparison of the approaches given in @xcite and the approach in this article is also in order . even though both are sure - success and achieve a square - root speedup , the algorithm given in refs . and needs @xmath193 iterations in the limit where @xmath58 approaches @xmath59 . for moderate values of the weights ,",
    "that number is only slightly bigger than this article s result of eq .",
    "however , their algorithm specifies a complete algorithm that solves the problem exactly , while the study presented in this letter lacks such a clearly constructed algorithm .",
    "a special case where our approach becomes useful is those weights where only @xmath47 or @xmath142 function evaluations are necessary for distinguishability . on the other hand in refs . and",
    ", at least three evaluations are needed .",
    "the sure - success weight decision problem of boolean functions using generalized grover iterations is discussed .",
    "specifically , the pairs of weights that can be distinguished by @xmath47 or @xmath142 function evaluations are analyzed in detail . the decidability problem is reduced to a problem of determining if a point lies in the convex hull of a curve , where the curve is defined by polynomial functions whose order increases with the increasing number of iterations @xmath38 . as a result , only for cases with very small @xmath38",
    "one can obtain analytical expressions . for @xmath194 ,",
    "it becomes necessary to follow the numerical approach .",
    "this analysis may be compared with braunstein and choi s works @xcite and with quantum counting @xcite .",
    "braunstein and choi have shown that their algorithm is 4 times faster than quantum counting@xcite .",
    "being in parallel with their result and the known bounds in the literature , we also show that quadratic speedup is obtained for large values of the number of iterations .",
    "filiol e. and fontaine c. , proceedings of advances in cryptology  eurocrypt 98 , international conference on the theory and application of cryptographic techniques ( lecture notes in computer science ) , * 1403 * , 475 , ( 1998 ) .",
    "chakrabarty , k. and hayes , j.p .",
    "cumulative balance testing of logic circuits .",
    "ieee trans .",
    "vlsi syst . * 3*(1 ) , 72 , ( 1995 ) .",
    "s. l. braunstein , b. s. choi , s. ghosh , and s. maitra , j. phys .",
    "theor . * 40 * , 8441 ( 2007 ) ."
  ],
  "abstract_text": [
    "<S> conditions on sure - success decidability of weights of boolean functions are presented for a given number of generalized grover iterations . </S>",
    "<S> it is shown that the decidability problem reduces to a system of algebraic equations of a single variable . for problems that require a large number of iterations </S>",
    "<S> , it is observed that the iteration number of sure - success quantum algorithms scale as the square root of the iteration number of the corresponding classical probabilistic algorithms . </S>",
    "<S> it is also demonstrated that for a few iterations , quantum algorithms can be more efficient than this .    </S>",
    "<S> # 1|#1 # 1#1| # 1#2#1|#2 # 1#2#3#1|#2|#3 </S>"
  ]
}
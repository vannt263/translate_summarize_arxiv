{
  "article_text": [
    "models are key representations in model - driven engineering ( mde ) , where software engineers use them to represent a system at an abstract level . to a software engineer ,",
    "interacting and refining the design of a system at an abstract level alleviates the complexity of a system from a code level",
    ". the actual implementation can be manually or automatically generated from well designed models .",
    "the introduction of a higher abstraction technique to mde , metamodeling , allows software engineers to describe and refine their designs at a higher level . to a software engineer",
    ", a _ model _ can be regarded as an abstract representation of an aspect of a system , whereas a _ metamodel _ describes a higher abstraction of meaning : it is a model that captures properties of a model .",
    "an example of a model and metamodel can be seen in figure [ fig : example ] . in figure",
    "[ fig : example ] , a person named  jack \" with an age of @xmath0 conforms to a model called @xmath1 .",
    "the model @xmath1 conforms to a model ( metamodel ) which sits at a higher level , and this metamodel has two metaclasses @xmath2 and @xmath3 ( field @xmath4 conforms to @xmath3 ) .",
    "the conformance here means that each element in the @xmath1 model is a type of its metamodel .",
    "for example , @xmath1 is a type of @xmath2 , and @xmath4 is a type of @xmath3 .    in mde , designing a large system begins with a variety of model designs , and thus revealing a system design fault at its model representation has become crucial for producing its implementation . to show the correctness of a model",
    ", a large number of test cases will be needed .",
    "these test cases can be manually or automatically produced based on different techniques . in this paper , we focus on reviewing techniques that are used to generate test cases from a metamodel .",
    "thus , we limit our discussion of these techniques to those used to produce models at level 1 as depicted in figure [ fig : example ] .",
    "this paper is organised as follows .",
    "we present the background of metamodeling and our research questions in section 2 . in section 3",
    ", we describe the methods for collecting and assessing the papers that we have studied , and present our findings . in section 4 ,",
    "selected papers are explained with reference to our research questions .",
    "additionally , we will identify the knowledge gap between model instance generation and metamodelling technique .",
    "finally , we conclude our literature review in section 5 .",
    "metamodeling provides many advantages for software developers such as ease of use and a greater degree of abstraction . for example",
    ", a metamodel can capture the abstract syntax of a programming language . with these advantages ,",
    "this technique has been widely adopted nowadays in software development .",
    "however , the technique has one big disadvantage : it does not offer a way to automatically produce test cases for a metamodel .",
    "such test cases are models , and also referred to as @xmath5 of a metamodel .",
    "thus , @xmath1 in figure [ fig : example ] is an @xmath6 of its metamodel , and producing test cases for a metamodel is equivalent to generating @xmath5 ( @xmath7 ) from a metamodel .",
    "furthermore , software engineers may add constraints on a metamodel to meet specific requirements , and this makes the disadvantage even greater since the models produced should not violate the constraints . to overcome this limitation ,",
    "researchers have proposed a variety of approaches and techniques .",
    "the purpose of this literature review is to identify and analyse the strengths and weaknesses of these techniques .    to help us",
    "reduce the search scope of our literature review , we consider a metamodel in two dimensions : its structure representations and applications .    in the structure dimension ,",
    "we focus on what the various representations of a metamodel could be .",
    "for example , a metamodel can be represented as a uml class digram , or viewed as an abstract syntax tree for a programming language @xcite @xcite . to conform to the meta - object facility ( mof ) standard",
    ", we consider all metamodels in this paper as being represented as uml class diagrams @xcite .",
    "other kinds of models which are out of the scope of our work include state machines and sequence diagrams @xcite .",
    "metamodels we discuss in this paper must posses the features that a uml class diagram can have .",
    "thus , a metamodel must include one or many of the following features :    *   *   *     as an example , the metamodel in figure [ fig : example ] depicts two classes ( @xmath2 and @xmath8 ) and an association relationship @xmath9 indicates each @xmath10 can have multiple @xmath11 .    in the application dimension , we focus on the area of model transformation testing because it requires a large number of sample instance as test cases , thus metamodel instance generation can be applied to test correctness of a model transformation .    within these two dimensions , we will identify and discuss the underlying frameworks and algorithms that are used for generating metamodel instances .",
    "we are also interested in the criteria for selecting models because measuring test cases is a crucial step when determining the qualities of a test suite .",
    "thus , based on these aspects of concern , we formed the following research questions .    1 .",
    "what are the main areas related to metamodel instance generation ? 2 .   what algorithms and theoretical frameworks are used for metamodel instance generation",
    "what criteria are used for selecting instances ?",
    "4 .   what tools exist to produce metamodel instances ?",
    "figure [ fig : rq ] shows the relationship between our four research questions .",
    "first , by identifying the main areas that are related to metamodel instance generation , we gather and review the papers that describe algorithms and theoretical frameworks from these areas .",
    "this includes reviewing the test criteria used and the tools that support the algorithms and theoretical frameworks .",
    "therefore , questions 3 and 4 are within the scope of question 2 .",
    "in this section , we describe the methodologies that we used for searching and assessing the papers we collected from different areas that are related to metamodel instance generation , and present selected papers .    in accordance with systematic review guidelines @xcite",
    ", we have taken the following steps :    identify the need for a systematic literature review    formulate the review research questions    conduct a comprehensive , exhaustive search for the primary studies    assess the quality of the included studies    extract the data from each included study    summarise and synthesise the results of the study    interpret the results and determine their applicability    write - up the study as a report      since metamodel instance generation is not a standalone area and overlaps many areas , our first research question which is `` what are the main areas related to model instance generation and how they are related ? ''",
    "although we defined our search scope according to various representation of a metamodel , some key papers that come from different areas can easily be overlooked . in order to widen our search scope to include more areas",
    ", we form the following search terms which we conjoin to form our search .    1 .",
    "( metamodel test case or data generation or metamodel instance generating or generation or model transformation testing or model measurement ) 2 .",
    "( input test models or automatic model generation or generating ) 3 .",
    "( grammar testing or grammar instance generation or grammar sentence generation or attribute grammar testing ) 4 .",
    "( test data or case generation from uml class diagram ) 5 .",
    "( xml schema testing ) 6 .",
    "( graph grammar instance or graph grammar metamodel or graph grammar testing ) 7 .",
    "( sat / smt or constraint programming or sat / smt uml / ocl verification )    the search terms are derived from three angles .",
    "first , the terms are directly derived from research questions , for example , keywords such as  metamodel instance generation \" .",
    "second , others are formed based on various representations of a metamodel .",
    "for example ,  metamodel represents a programming language \" conveys information of an abstract syntax for a language . thus in this sense , it is very close to the area of grammar testing .",
    "third , the rest of the search terms are constructed to focus on how to deal with the constraints defined on a metamodel , for example sat / smt and constraint programming based approaches are particularly good at solving constraint problems .",
    "the search process can be divided into two phases . in the first phase , we group and input the search terms into search engines provided by the following databases :    google scholar    acm digital library    ieee",
    "explore    sciencedirect    we reduce the number of papers by looking at the title and abstract of each paper . in the second phase of the search ,",
    "we review the citations from the results we get in the first phase for any relevant articles , and we repeat this process until no new papers are identified . in addition , in order not to overlook any papers , we also search through possibly related conferences for a specific time period . for each conference , we widen the time period from the first proceedings of that conference held to the latest proceedings .",
    "the list of the conferences from a specific time period can be seen in table [ tab : conference ] .",
    ".time period searched for each conference [ cols=\"<,<\",options=\"header \" , ]      + alloy is a popular tool used by many modelers to find instances or counter examples of a model .",
    "it was introduced in and it uses a relational logic to capture the semantics of first - order logic , and thus a model is described in a relational logic @xcite .",
    "the later version is an improved version that allows modelers to specify quantifiers over the relational logic @xcite .",
    "the latest version of alloy employs a new engine ( kodkod ) that represents a model as a bounded relational logic , then translates it into a boolean formula that is represented by compact boolean circuits @xcite @xcite , and finally solves the formula by using off - shore sat - solvers @xcite . with the new engine ,",
    "alloy is able to deal with larger models and to find instances or counter examples in seconds . however , one of the main problems with using alloy to find model instances is that it requires a full mapping from the mof metamodels to an alloy specification .",
    "since they are in different formats , such mappings may not be always straightforward .",
    "though much work has been done to deal with the mapping from metamodels to an alloy specification , it still requires considerable work to handle the differences between them @xcite .",
    "use is a tool that can be used to build a variety of uml diagrams such as uml class diagrams , sequence diagrams , etc @xcite .",
    "it also provides the user with a way of creating and checking ocl constraints defined over the model , and fully supports ocl 2.0 @xcite .",
    "the latest research for use involves integrating it with alloy s core engine , kodkod @xcite . the resulting integration with kodkod yields a use model validator plugin .",
    "this plugin provides users with an interface that allows a user to specify a lower and upper bound for each class defined in the uml model .",
    "since this approach is fully depended on the performance of kodkod , it thus requires a translation from uml class diagrams and ocl constraints into relational logic , which complicates the instance generation process .",
    "implement their algorithm into a tool called omogen .",
    "this is a prototype tool and it can be used to generate model instances based on the input of a set of model fragments . however , to generate the model fragments a tool called mmcc is needed @xcite .",
    "this tool is implemented using eclipse modeling framework ( emf ) , and it generates partitions from a source metamodel and model fragments according to particular test criterion which were described in section 4.3 .",
    "the reflective instantiator described in @xcite , parses generated instances from alloy into instances of the java implementation of the metamodel .",
    "furthermore , this tool generates a code implementation of a metamodel .",
    "extend use features by defining a new language to generate snapshots of the models .",
    "these snapshots are treated as test cases and can be validated within use .",
    "their approach allows ocl invariants to be dynamically loaded and certified during the execution .",
    "however , it does not provide any test criteria during the generation of snapshots and the test criteria have to be manually programmed .",
    "the cartier tool @xcite depends on alloy .",
    "it invokes alloy apis to launch the sat solver to generate model instances .",
    "however , cartier does not automatically transform the ocl constraints of the input metamodel into alloy facts .",
    "furthermore , cartier requires that a set of model fragments is generated before generating model instances .",
    "these model fragments are generated by the tool introduced in .",
    "therefore , cartier heavily depends on other tools and this makes the model generation process quite complicated .",
    "the boltzmann method is implemented in a generator as an eclipse plugin @xcite .",
    "this generator produces a valid model by identifying properties , generalisation and references in the metamodel .",
    "this tool is very effective for generating a large uniform sample of models .",
    "however , this tool can not generate models that will satisfy the constraints defined with respect to the metamodel .",
    "most of the research done on instance ( model ) generation techniques comes from three areas : model transformation testing , graph grammars and sat / smt based approaches . in the area of model transformation testing , algorithms , frameworks and tools have been developed for generating or assisting metamodel instance generation @xcite .",
    "however , none of them can handle ocl constraints with respect to the metamodels .    to be able to handle ocl constraints",
    ", sat / smt seems to be more suitable for adapting because ocl constraints can be more naturally expressed as boolean formula than other approaches . among these approaches",
    ", alloy seems the most mature tool to be adapted and many researchers have carried out work using alloy @xcite . however , alloy and the metamodelling technique employ different languages , and therefore a mapping between them is inevitable .",
    "unfortunately , such a mapping is not always straightforward , for example a one - to - one binary association requires users to write additional facts .",
    "though some of the research work has already been conducted , such a mapping can only increase the complexity of the generation process @xcite .",
    "furthermore , using alloy to generate instances to meet the specific coverage criteria in the first place is difficult , since alloy enumerates all `` possible '' solutions .",
    "although this can be achieved by defining facts in alloy , this may slow down the process of finding instances , and it requires that a user has a good knowledge of writing efficient facts to filter out unnecessary solutions .    another area which has been exploited to overcome the disadvantage of metamodelling is the area of graph grammars .",
    "graph grammars offer a natural way to describe the derivation process and so have an advantage for generating metamodel instances .",
    "however , before applying grammar rules , a map from metamodels to graphs is also needed .",
    "furthermore , parsing a graph is expensive in terms of an algorithm s complexity because a graph matching is not always deterministic , as a rule may match several sub graphs @xcite .",
    "another issue is that the current techniques that exist in the graph grammar area can only deal with a limited number of ocl constraints .",
    "these ocl constraints must be manually transformed into graph constraints which causes a problem when one has to deal with a large number ocl constraints @xcite .    by analysing and understanding these papers we collected ,",
    "we have identified that the knowledge gap between metamodel instance generation and metamodelling techniques is that there is no direct way of generating metamodel instances from a metamodel , as all techniques either require a pre - process or extra knowledge about an intermediate language to achieve instance generation .",
    "thus , it requires tools or mappings to naturally support an instance generation process .",
    "it would be a valuable research direction to discover how such a framework or tools could be developed , and could be directly applied to not only generate model instances , but also to meet the constraints defined over the metamodels .",
    "furthermore , it will also be useful to construct such an extensible framework or tool so that the generated instances can meet specific coverage criteria .",
    "in this paper , we conducted a systematic literature review on metamodel instance generation , and the results are also shown in the paper .",
    "the areas that are related to metamodel instance generation techniques were identified and papers from those areas were discussed in detail with a view to answering our research questions .",
    "a knowledge gap in the area was also identified as a potential future research direction .",
    "the papers collected in this literature review cover the areas of metamodel instance generation techniques but we believe that it identifies most of the core papers and the work done in this paper can be easily extended if any core papers appear in the coming years .",
    "anastasakis , k. , bordbar , b. , georg , g.  ray , i. 2007 , uml2alloy : a challenging model transformation , _ in _ ` acm / ieee 10th international conference on model driven engineering languages and systems ' , springer , nashville , tennessee , usa , pp .",
    "436450 .",
    "bardohl , r. , ehrig , h. , de  lara , j.  taentzer , g. 2004 , integrating meta - modelling aspects with graph transformation for efficient visual language definition and model manipulation , _ in _ ` 7th international conference on fundamental approaches to software engineering ' , springer , barcelona , spain , pp .",
    "214228 .",
    "barrett , c. , stump , a. , tinelli , c. , boehme , s. , cok , d. , deharbe , d. , dutertre , b. , fontaine , p. , ganesh , v. , griggio , a. , grundy , j. , jackson , p. , oliveras , a. , krsti , s. , moskal , m. , moura , l.  d. , sebastiani , r. , cok , t.  d.  hoenicke , j. 2010 , the smt - lib standard : version 2.0 , _ in _ ` 8th international workshop on satisfiability modulo theories ' , elsevier science , edinburgh , uk .",
    "baudry , b. , fleurey , f. , jzquel , j .-",
    "le  traon , y. 2002 , automatic test cases optimization using a bacteriological adaptation model : application to .net components , _ in _ ` 17th international conference on automated software engineering ' , ieee computer society , edinburgh , uk , pp .",
    "253256 .",
    "bertolino , a. , gao , j. , marchetti , e.  polini , a. 2007_a _ , automatic test data generation for xml schema - based partition testing , _ in _ ` 2nd international workshop on automation of software test ' , ieee computer society , minneapolis , usa .",
    "bertolino , a. , gao , j. , marchetti , e.  polini , a. 2007_b _ , systematic generation of xml instances to test complex software applications , _ in _ ` 3rd international conference on rapid integration of software engineering techniques ' , springer , geneva , switzerland , pp .",
    "114129 .",
    "brottier , e. , fleurey , f. , steel , j. , baudry , b.  traon , y.  l. 2006 , metamodel - based test generation for model transformations : an algorithm and a tool , _ in _ ` 17th international symposium on software reliability engineering ' , ieee computer society , raleigh , north carolina , usa , pp .",
    "bruttomesso , r. , cimatti , a. , franzn , a. , griggio , a. sebastiani , r. 2008 , the mathsat 4 smt solver , _ in _ ` 20th international conference on computer aided verification ' , springer , princeton , usa , pp .  299303 .",
    "bruttomesso , r. , pek , e. , sharygina , n.  tsitovich , a. 2010 , the opensmt solver , _ in _ ` 16th international conference on tools and algorithms for the construction and analysis of systems ' , springer , paphos , cyprus , pp .  150153 .",
    "cabot , j. , claris , r.  riera , d. 2007 , umltocsp : a tool for the formal verification of uml / ocl models using constraint programming , _ in _ ` 22nd international conference on automated software engineering ' , ieee computer society , atlanta , georgia , usa , pp .",
    "547548 .",
    "cabot , j. , claris , r.  riera , d. 2008 , verification of uml / ocl class diagrams using constraint programming , _ in _ ` ieee international conference on software testing verification and validation workshop ' , ieee computer society , berlin , germany , pp .",
    "7380 .",
    "claessen , k. 2003 , new techniques that improve mace - style finite model finding , _ in _ ` 19th international conference on automated deducation workshop : model computation - principles , algorithms , applications ' , usa , miami , fl .",
    "de  moura , l.  bjrner , n. 2008 , z3 : an efficient smt solver , _ in _ ` 14th international conference on tools and algorithms for the construction and analysis of systems ' , springer , budapest , hungary , pp .",
    "337340 .",
    "dinh - trong , t.  t. , ghosh , s.  france  robert , b. 2006 , a systematic approach to generate inputs to test uml design models , _ in _ ` 17th international symposium on software reliability engineering ' , ieee computer society , raleigh , nroth carolina , usa , pp .",
    "95104 .",
    "drewes , f. , hoffmann , b. , janssens , d. , minas , m.  van  eetvelde , n. 2006 , adaptive star grammars , _ in _ ` 3rd international conference on graph transformations ' , springer , natal , rio grande do norte , brazil , pp .",
    "7791 .",
    "fleurey , f. , steel , j.  baudry , b. 2004 , validation in model - driven engineering : testing model transformations , _ in _ ` first international workshop on model , design and validation ' , ieee computer society , pp .",
    "2940 .",
    "gonzlez  prez , c.  a. , buettner , f. , claris , r. cabot , j. 2012 , emftocsp : a tool for the lightweight verification of emf models , _ in _ ` formal methods in software engineering : rigorous and agile approaches ' , zurich , suisse .",
    "heidenreich , f. , johannes , j. , seifert , m.  wende , c. 2010 , closing the gap between modelling and java , _ in _ ` 2nd international conference on software language engineering ' , springer , denver , colorado , usa , pp .",
    "374383 .",
    "jackson , e. , levendovszky , t.  balasubramanian , d. 2011 , reasoning about metamodeling with formal specifications and automatic proofs , _ in _ ` 14 international conference on model driven engineering languages and systems ' , springer , wellington , new zealand , pp .",
    "653667 .",
    "kuhlmann , m. , hamann , l.  gogolla , m. 2011 , extensive validation of ocl models by integrating sat solving into use , _ in _ ` 49th international conference on objects , models , components , patterns ' , springer , zurich , switzerland , pp .",
    "290306 .",
    "kster , j.  m.  abd - el - razik , m. 2006 , validation of model transformations : first experiences using a white box approach , _ in _ ` 9th international conference on models in software engineering ' , springer , genoa , italy , pp .",
    "193204 .",
    "lmmel , r.  schulte , w. 2006 , controllable combinatorial coverage in grammar - based testing , _ in _ ` 18th international conference on testing of communicating systems ' , springer , new york , usa , pp .",
    "lukman , t. , mernik , m. , demirezen , z. , bryant , b.  gray , j. 2010 , automatic generation of model traversals from metamodel definitions , _ in _ ` 48th annual southeast regional conference ' , acm , oxford , mississippi , usa , pp .",
    "78:178:6 .",
    "mcquillan , j.  a.  power , j.  f. 2008 , a metamodel for the measurement of object - oriented systems : an analysis using alloy , _ in _ ` 1st international conference on software testing verification and validation ' , ieee computer society , lillehammer , norway , pp .",
    "288297 .",
    "moskewicz , m.  w. , madigan , c.  f. , zhao , y. , zhang , l.  malik , s. 2001 , chaff : engineering an efficient sat solver , _ in _ ` 38th design automation conference ' , acm , las vegas , nevada , united states , pp .",
    "530535 .",
    "mougenot , a. , darrasse , a. , blanc , x.  soria , m. 2009 , uniform random generation of huge metamodel instances , _ in _ ` 5th europrean conference on model driven architecture - foundations and applications ' , springer , enschede , the netherlands , pp .  130145 .",
    "samuel , p.  joseph , a. 2008 , test sequence generation from uml sequence diagrams , _ in _ ` 9th international conference on software engineering , artificial intelligence , networking , and parallel / distributed computing ' , ieee computer society , pp .",
    "879887 .",
    "sen , s. , baudry , b.  mottu , j .-",
    "2008 , on combining multi - formalism knowledge to select models for model transformation testing , _ in _ ` 1st international conference on software testing , verification , and validation ' , ieee computer society , lillehammer , norway , pp .",
    "328337 .",
    "sen , s. , baudry , b.  mottu , j .-",
    "2009 , automatic model generation strategies for model transformation testing , _ in _ `",
    "2nd international conference on theory and practice of model transformations ' , springer , pp .  148164 .",
    "soeken , m. , wille , r.  drechsler , r. 2011 _ a _ , encoding ocl data types for sat - based verification of uml / ocl models , _ in _ ` 5th international conference on tests and proofs ' , springer , zurich , switzerland , pp .",
    "152170 .",
    "soeken , m. , wille , r.  drechsler , r. 2011 _ b _ , towards automatic determination of problem bounds for object instantiation in static model verification , _ in _ ` 8th international workshop on model - driven engineering , verification and validation ' , acm , wellington , new zealand , pp .",
    "2:12:4 .",
    "soeken , m. , wille , r. , kuhlmann , m. , gogolla , m.  drechsler , r. 2010 , verifying uml / ocl models using boolean satisfiability , _ in _ ` design , automation test in europe conference exhibition ' , dresden , germany , pp .  13411344 .",
    "torlak , e. 2009 , a constraint solver for software engineering : finding models and cores of large relational specifications , phd thesis , department of electrical engineering and computer science , massachusetts institute of technology , cambridge , ma , usa .      torlak , e.  jackson , d. 2007 , kodkod : a relational model finder , _ in _ ` 13th international conference on tools and algorithms for the construction and analysis of systems ' , springer , braga , portugal , pp .",
    "632647 .",
    "winkelmann , j. , taentzer , g. , ehrig , k.  kster , j.  m. 2008 , ` translation of restricted ocl constraints into graph constraints for generating meta model instances by graph grammars ' , _ electronic notes in theoretical computer science _ * 211 * ,  159170 ."
  ],
  "abstract_text": [
    "<S> modelling and thus metamodelling have become increasingly important in software engineering through the use of model driven engineering . in this paper </S>",
    "<S> we present a systematic literature review of instance generation techniques for metamodels , i.e. the process of automatically generating models from a given metamodel . </S>",
    "<S> we start by presenting a set of research questions that our review is intended to answer . </S>",
    "<S> we then identify the main topics that are related to metamodel instance generation techniques , and use these to initiate our literature search . </S>",
    "<S> this search resulted in the identification of 34 key papers in the area , and each of these is reviewed here and discussed in detail . </S>",
    "<S> the outcome is that we are able to identify a knowledge gap in this field , and we offer suggestions as to some potential directions for future research . </S>"
  ]
}
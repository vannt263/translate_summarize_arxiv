{
  "article_text": [
    "the classical parking functions provide a bijective correspondence between the spanning trees of the complete graph @xmath6 and certain integer - valued functions on the vertices of @xmath6 . a notion of parking functions corresponding to the spanning trees of an arbitrary graph",
    "@xmath2 is more recent and has been independently developed in physics and combinatorics .",
    "it was introduced by bak , tang and wisenfeld @xcite as a self - organized sandpile model on grids , and was generalized to arbitrary graphs by d. dhar @xcite .",
    "see definition  [ defn : park ] below for the precise definition of a @xmath2-parking function , associated with a connected graph @xmath2 .",
    "this notion is already rather powerful ; besides generalizing the classical parking function from @xmath6 to an arbitrary graph , it has been investigated in the context of chip - firing games @xcite and the tutte polynomial @xcite in discrete mathematics , and also investigated in algebra and related fields @xcite . however , some of the combinatorial aspects of this topic appear somewhat scattered in the literature .",
    "several fundamental results concerning the recurrent configurations of chip - firing can be derived without the chip - firing context and terminology . for this reason ,",
    "we shy away from introducing and discussing the chip - firing terminology . instead ,",
    "in this article we describe various interpretations of the @xmath2-parking functions in the most elementary combinatorial ways . using a natural partial order @xmath7 on the set @xmath8 of parking functions , we consider the maximal elements in this poset @xmath9 .",
    "much of our focus in this paper is on understanding the properties of such maximal parking functions .",
    "the first result we describe ( see theorem  [ thm : main ] ) provides a new bijection between the maximal parking functions in the poset and the set @xmath10 of acyclic orientations of @xmath2 with a unique source at @xmath3 . en route",
    ", we describe what we call an extended dhar algorithm ( since it is an extension of an algorithm due to dhar @xcite to recognize @xmath2-parking functions ) in providing an acyclic orientation corresponding to a maximal parking function .",
    "we review various combinatorial consequences and algebraic connections of this correspondence .",
    "for example , using known results ( namely those of greene and zaslavsky @xcite and more recent work of gebhard and sagan @xcite ) , we further identify a 1 - 1 correspondence between the set of maximal parking functions and the set of spanning trees with no  broken circuits , \" or equivalently , the set of  safe \" spanning trees ; see section  [ sec : mpf ] for the definitions of these terms . in this paper , we provide a much simpler bijection ( compared to @xcite ) between the set of safe trees and the set of acyclic orientations with a unique sink ( or equivalently , a unique source ) .",
    "furthermore we generalize this bijection to one between all spanning trees and all @xmath2-parking functions which _ preserves _ the bijection between safe trees and maximal @xmath2-parking functions .",
    "we must remark here that other bijective proofs between the set of @xmath2-parking functions and the set of spanning trees of @xmath2 ( for arbitrary connected @xmath2 ) have been given by chebikin and pylyavskyy @xcite .",
    "however , to our knowledge , the simpler bijection we report here , in theorem  [ main ] below , and its generalization given in theorem  [ thm : bijgen ] , are indeed new .    as an additional contribution",
    ", we describe a simple way to generate maximal parking functions in the cartesian product graph @xmath11 , using maximal functions in the ( factor ) graphs @xmath12 and @xmath13 .",
    "we then specialize our study to understanding the parking functions in the discrete @xmath4-cube @xmath5 on @xmath14 vertices . by describing certain special constructions of maximal parking functions",
    "@xmath15 on @xmath5 , we obtain a natural description of a set , @xmath16 , of parking functions  those dominated , in the partial order given by @xmath7 , by a special maximal parking function @xmath15 .",
    "interestingly enough we shall deduce ( see theorem  [ thm : domnum ] ) that @xmath17    recall that ( [ totalnum ] ) corresponds to the total number of spanning trees of @xmath5 ( see equation ( 5.85 ) in @xcite ) , using the matrix - tree theorem and the explicit knowledge of the corresponding eigenvalues , to help evaluate the determinantal formula . in light of the fact that finding a bijective proof accounting for the number of spanning trees of @xmath5 has been open for several years",
    ", we hope this is a nontrivial step towards such a proof .",
    "the paper is organized as follows . in section  [ sec : dhar ] , we review some preliminaries , including dhar s burn criterion , which determines whether a given function is a parking function . in section  [ sec : ao ] , we show the bijection between maximum parking functions and acyclic orientations with a unique source . in section  [ sec : safe_trees ] , we describe our new and simpler bijection between the set of acyclic orientations with a unique sink and the set of safe trees . in section  [ sec : prod ] , we describe a construction of maximum parking functions on cartesian products of graphs . in section  [ sec : cube ] , we focus our study on the @xmath4-cube @xmath5 , and provide some explicit constructions of maximum parking functions and related bounds . in section  [ sec : diffuse ] , for expository purposes we review a bijection between _ diffuse states _ ( introduced in the context of chip - firing ) and acyclic orientations of a graph .",
    "we conclude with some remarks on research in future directions and a few open problems in section  [ sec : concl ] .",
    "in this section we recall the definition of a @xmath2-parking function and review dhar s ( burning ) algorithm that can be used to determine whether an integer - valued function on the vertices of @xmath2 is a @xmath2-parking function .",
    "[ defn : park ] for a connected graph @xmath2 , a @xmath2-parking function relative to vertex @xmath18 is a function @xmath19 such that @xmath20 and for every non - empty @xmath21 , there exists @xmath22 such that @xmath23 , where @xmath24 is the number of edges @xmath25 with @xmath26 .    herein , we have modified the standard definition of a @xmath2-parking function somewhat .",
    "the function @xmath15 is now defined on all of @xmath27 instead of restricted to simply @xmath28 in order to improve the compatibility between @xmath2-parking functions and cartesian product graphs such as @xmath5 ; due to this change , for @xmath15 to be a @xmath2-parking function , @xmath20 necessarily .",
    "if for a function @xmath29 , for every non - empty _ connected _ subgraph @xmath30 , there exists @xmath31 such that @xmath32 , then @xmath15 is a @xmath2-parking function .    * proof .",
    "* assume that , for all connected @xmath30 , that there exists @xmath31 such that @xmath33 .",
    "proceeding by contradiction , suppose that there is some disconnected @xmath34 such that @xmath35 for every @xmath36 .",
    "consider then any connected component @xmath37 of @xmath38 .",
    "since @xmath37 is connected we have , by the hypothesis of the proposition , that @xmath39 , for some vertex @xmath40 in @xmath37 .",
    "thus @xmath41 , implying that there is a vertex @xmath42 in @xmath43 such that @xmath40 and @xmath42 are connected by an edge in @xmath2 ; otherwise , either @xmath44 or @xmath45 .",
    "this contradicts the choice of @xmath37 .    ' '' ''    throughout we assume that the reference vertex @xmath3 is fixed , and we always consider parking functions with respect to this fixed vertex @xmath3 , without necessarily bringing explicit reference to it .",
    "a natural question to ask is whether a given integer - valued function on the vertices of @xmath2 can easily be tested for being a @xmath2-parking function . in the context of the so - called sandpile models , dhar @xcite provided an algorithm , which can be interpreted as an efficient algorithm to test if a given function is a @xmath2-parking function",
    "this was observed in @xcite , wherein the algorithm was reformulated as follows .",
    "let @xmath46 .",
    "we assume that @xmath20 .",
    "mark any unmarked vertex @xmath40 which has more marked neighbors than @xmath47 .",
    "repeat step 1 until no more vertices can be marked .",
    "step 3 . declare @xmath15 to be a @xmath2-parking function if and only if all the vertices have been marked .",
    "we omit the proof of correctness of the algorithm ( as an exercise ) , which follows in a fairly straightforward way from the definition of a parking function .    on the set @xmath48 of parking functions on @xmath2 with respect to @xmath3 , there is a natural partial order we may define :    given two parking functions @xmath49 , we say @xmath50 , if @xmath51 , for all @xmath52 .",
    "the maximal elements in this partial order will be referred to as _ maximal _",
    "parking functions .",
    "finally , a parking function with the largest sum is called a _ maximum",
    "_ parking function .    for @xmath53 ,",
    "let @xmath54 , and @xmath55 .",
    "furthermore , for @xmath56 , let @xmath57 be the function on vertices , defined as @xmath58 , for each @xmath59 .    while the following propositions are perhaps folk - lore , the first part of proposition  [ prop : dom_park ] and proposition  [ prop : bb ] appear as lemmas  7 and 5 in @xcite .    [ prop : dom_park ] ( a ) let @xmath53 , and suppose @xmath60 such that @xmath61 and @xmath62 , for @xmath63 with @xmath64",
    ". then @xmath65 .",
    "\\(b ) if @xmath49 , then @xmath66 and @xmath67 .    * proof .  *",
    "while part ( a ) is clear from the definition of a @xmath2-parking function , it can also be seen using dhar s algorithm .",
    "note that @xmath68 and so @xmath66 , by part ( a ) .",
    "now @xmath69 and @xmath70 , so @xmath71 implies that @xmath72 .",
    "finally consider , @xmath72 .",
    "then at each vertex @xmath59 , @xmath73 and @xmath74 , so @xmath75 , proving that @xmath76 .    ' '' ''    [ prop : bb ] for every connected graph @xmath0 , every @xmath77 , we have @xmath78 .",
    "more over , the equality is always achieved .    * proof .",
    "* we may prove this by induction on the number @xmath79 of vertices @xmath2 .",
    "the base case consisting of @xmath80 and no edges is trivially true . for the induction case ,",
    "let @xmath81 . given @xmath77 ,",
    "let @xmath82 be the last vertex to be marked by the dhar algorithm . then consider @xmath83 , the graph obtained by removing @xmath82 and its incident edges .",
    "@xmath84 is connected , since dhar successfully marks all vertices before @xmath82 , and more over , the function @xmath85 denoting , @xmath15 restricted to @xmath84 , is an @xmath84-parking function with respect to @xmath86 .",
    "thus we may apply the induction hypothesis to @xmath84 and @xmath85 and complete the proof : @xmath87 where we also used the fact that @xmath88 , for every @xmath40 and parking function @xmath15 .",
    "the proof also suggests that by assigning the maximum possible value , at each step in dhar s marking algorithm , one easily obtains a ( maximum ) parking function which achieves the upper bound .    ' '' ''    note that the quantity @xmath89 is sometimes referred to as the _ cyclomatic number _ or the _ betty number _ of the graph and due to our convention of assigning @xmath90 , we have @xmath91 , as the bound in the above proposition . + proposition [ prop : dom_park ] also gives us a simple ( albeit not necessarily efficient ) , inclusion - exclusion method to relate the set of maximum parking functions with the set of all parking functions .",
    "but this has to wait until the next section , where we observe another basic fact concerning the maximum parking functions .",
    "given a graph @xmath2 , the notion of an acyclic orientation of the edges of @xmath2 is classical , with an extensive literature .",
    "the notion of an acyclic orientation with a _ unique source _ at a fixed vertex is less well - studied .",
    "let @xmath92 denote the set of acyclic orientations of the graph @xmath2 and let @xmath93 be the set of acyclic orientations of @xmath2 with a _ unique source _ at vertex @xmath3 .",
    "finally , let @xmath94 denote the set of maximum @xmath2-parking functions .",
    "[ thm : biject ] there exists a bijection between @xmath93 and the set @xmath94 of maximum @xmath2-parking functions .",
    "* proof .",
    "* given an acyclic orientation @xmath95 with a unique source at @xmath3 , define the function @xmath96 on the vertices of @xmath2 : let @xmath47 be the indegree ( in @xmath97 ) of @xmath40 minus 1 .",
    "we will show that this correspondence provides the necessary bijection .    in any orientation",
    ", the sum of the indegrees equals the number of edges .",
    "hence @xmath98 . by using dhar s algorithm",
    ", we may show that @xmath15 is in fact a parking function : starting with @xmath3 , we may repeatedly mark and remove the current set of source(s ) in the acyclic orientation of the remaining graph ; since a vertex @xmath40 with value @xmath47 becomes a source only when all its @xmath99 in - neighbors have been marked and removed , the dhar criterion is satisfied .",
    "also observe that the procedure stops only after marking all the vertices , since every acyclic orientation has at least one source .",
    "thus @xmath100 .    to see that @xmath101 , whenever @xmath102 , simply recall that an acyclic orientation is uniquely determined by its outdegree sequence : starting with the sinks , orient all edges into the sinks , remove the sinks , and repeat the process by subtracting one from the outdegrees of the neighbors of the sinks .",
    "the proof will be complete once we establish the onto property , that every maximum parking function can be obtained this way . given a maximum parking function @xmath103 , we will construct an orientation @xmath104 using the following modification of dhar s algorithm , and will show that @xmath105 , thus essentially providing an inverse map to the above construction .    * the extended dhar algorithm*.    _ input _ : a maximal parking function @xmath106    _ output _ : an acyclic orientation @xmath104 with a unique source at @xmath3 .",
    "start with @xmath107 .",
    "orient all edges out of @xmath3 .",
    "step 2 . if there exists a vertex @xmath40 which accrued indegree(@xmath40 ) equal to @xmath99 , mark @xmath40 and orient the remaining edges incident at @xmath40 outward from @xmath40 .",
    "repeat step 2 , until all vertices are marked and all edges are oriented .",
    "the correctness of the original dhar algorithm guarantees that all vertices will eventually be marked  indeed , the indegree(@xmath40 ) equals the number of neighbors marked before @xmath40 ; thus all edges will be oriented , meaning that @xmath104 is an orientation of the edges of @xmath2 .",
    "observe that the indegree of a vertex @xmath40 equals @xmath99 . since @xmath3 is unique with @xmath90 , it must be that @xmath3 is the unique source .",
    "it is also easy to see that @xmath104 is acyclic  if there were to be a cycle , considering the first vertex in the cycle which was marked , we obtain a contradiction to the way the edges were oriented ( in step 2 above ) from a marked vertex .    ' '' ''    upon completion of this work , we discovered ( thanks to matt baker ) , that theorem  [ thm : biject ] can also be derived using chip - firing games : as described in @xcite , the notion of a so - called _ diffuse state _ ( introduced by @xcite and see definition  [ defn : diffuse ] below ) helps relate chip - firing configurations to acyclic orientations .",
    "also thanks to an anonymous referee of an earlier version of this work @xcite , we learned that theorem  [ thm : biject ] is lemma  10 ( under the name of _ allowable _ orientations ) of biggs @xcite , where it is mentioned that this in fact goes back to an even earlier result of greene and zaslavsky @xcite .",
    "it is now easy to observe the following fact ( which appears as lemma  8 in @xcite ) .",
    "[ cor : max_max ] every maximal parking function is a maximum parking function .",
    "this follows from the proof of correctness of the extended dhar algorithm described above ",
    "if @xmath15 were maximal , but not maximum , then there must be a vertex in dhar s marking whose indegree is at least @xmath108 .",
    "but then we can increase @xmath47 by one , and obtain a valid parking function , contradicting the maximality of @xmath15 .    ' '' ''",
    "we now return to prove the simple result that was promised at the end of the previous section .",
    "let @xmath2 be a finite graph with @xmath109 maximum @xmath2-parking functions .",
    "then there exist @xmath2-parking functions @xmath110 such that the number of @xmath2-parking functions is @xmath111 where @xmath112 and the sign @xmath113 or @xmath114 is uniquely determined by proposition [ prop : dom_park ] .",
    "* proof .",
    "* let @xmath115 be all the maximum @xmath2-parking functions .",
    "trivially , every non - maximal parking function is dominated by some maximal parking function , and corollary  [ cor : max_max ] lets us observe that , @xmath116 now we may simply use the inclusion - exclusion formula to count the size of the union of the above @xmath109 sets : @xmath117 , completes the proof .    ' '' ''    it would indeed be interesting to see if the above corollary can be used in making progress towards obtaining a bijective proof for the number of spanning trees of @xmath5 , the @xmath4-dimensional hypercube . in section",
    "[ sec : cube ] , we take a modest step towards it .    [",
    "thm : unique ]",
    "let @xmath2 be a simple , connected graph .",
    "then , for a fixed choice of @xmath3 , @xmath2 has a unique maximum @xmath2-parking function if and only if @xmath2 is a tree .",
    "* proof*. if @xmath2 is a tree , then there is only one parking function with respect to any @xmath3 since @xmath2 has no cycles and , thus , each vertex can have at most one marked neighbor in the dhar algorithm .",
    "( note that this is in fact tautological if one uses the bijection between the parking functions and the spanning trees of @xmath2 . )",
    "hence there is only one maximum @xmath2-parking function .",
    "the other direction is less obvious .",
    "however , observe that in light of the bijection established in theorem  [ thm : biject ] , it suffices to show the following .",
    "_ whenever @xmath2 is connected and contains a cycle , then there are at least two acyclic orientations for @xmath2 , with @xmath3 as the unique source .",
    "_ this is easy to establish ( for example , by considering the standard directed acyclic graph ( dag ) representation of the graph ) , and we leave the proof as a simple exercise .    ' '' ''    see remark  [ rmk : unique_fn ] below for another short ( but indirect ) proof of the above theorem .",
    "a simple , connected graph @xmath2 has a unique maximum parking function @xmath15 if and only if the range of @xmath15 is a subset of @xmath118 .",
    "* proof .",
    "* this follows from the observation that any tree has a unique parking function and , for any vertex @xmath64 , @xmath119 .    ' '' ''    for every @xmath2 ,  @xmath120 if and only if @xmath121 .",
    "we now augment our theorem  [ thm : biject ] above to show a bijection between maximal @xmath2-parking functions and spanning trees with no broken circuits . before stating the theorem",
    ", we need to recall several definitions from the literature .",
    "the tutte ( or tutte - whitney ) polynomial of a graph @xmath0 is the two - variable polynomial defined as @xmath122 where @xmath123 and @xmath124 denotes the number of connected components of the graph on @xmath125 using edgeset @xmath126 . for @xmath127 , the chromatic polynomial @xmath128 of a graph @xmath2 is defined as the number of proper vertex colorings of @xmath2 using @xmath129 colors . for a general variable @xmath129 ,",
    "the following relation between the chromatic polynomial and the tutte polynomial is well - known ( see e.g. @xcite ) : @xmath130 where @xmath123 is the number of vertices and @xmath131 is the number of connected components of @xmath2 .",
    "[ broken_circuit ] given a graph @xmath0 and an ordering of all the edges of @xmath2 , a broken circuit @xmath132 is any cycle ( of edges ) of @xmath2 minus the largest ( according to the ordering ) edge in the cycle .",
    "note that since every cycle contains ( or gives rise to ) a broken circuit , a collection of edges _ not _ containing a broken circuit must necessarily be acyclic",
    ". inspired by the terminology of kenyon and winkler @xcite , we call a spanning tree @xmath133 _ safe _ , if it contains no broken circuits . that is , for all edges @xmath134 not in the tree , there is an edge in the unique cycle formed when @xmath134 is added to the tree , which is larger than @xmath134 .",
    "the notion of a broken circuit is more general , and in fact explains the classical terminology : in the context of a matroid , an independent set of elements of the matroid obtained from a circuit , by removing the largest element ( once again , according to some a priori global ordering of all the elements ) of the circuit .",
    "[ thm : main ] for every undirected , connected graph @xmath2 , the following quantities are all the same .    *",
    "\\(a ) the number of maximum @xmath2-parking functions with respect to @xmath3 . *",
    "\\(b ) the number of acyclic orientations with a unique source at @xmath3 . *",
    "\\(c ) the number of spanning trees with no broken circuits , or equivalently , with zero external activity . *",
    "\\(d ) the coefficient ( up to sign ) of the @xmath129-term in the chromatic polynomial @xmath128 . *",
    "\\(e ) the value ( up to sign ) @xmath135 of the tutte polynomial @xmath136 , evaluated at @xmath137 and @xmath138 .    theorem [ thm : biject ] shows the equivalence of ( a ) and ( b ) .",
    "the equivalence between ( c ) and ( d ) is classical and is part of whitney s broken circuit theorem @xcite : that the chromatic polynomial on @xmath4 vertices is given by @xmath139 where @xmath140 is the number of @xmath141-subsets of edges of @xmath2 which contain no broken circuit .",
    "the term @xmath142 corresponds to ( the absolute value of ) the coefficient of @xmath129 ; note that the @xmath143-subsets under consideration being necessarily acyclic , correspond to spanning trees which do not contain a broken circuit .",
    "the equivalence between ( b ) and ( d ) is due to greene and zaslavsky @xcite .",
    "a ( direct ) bijective proof of the equivalence between ( b ) and ( c ) is given by gebhard and sagan @xcite , using a modification of an algorithm of blass and sagan @xcite . in section [ sec : safe_trees ] we provide a much shorter proof of the equivalence between ( b ) and ( c ) .",
    "the equivalence between ( d ) and ( e ) follows from ( [ eqn : chr_tutte ] ) , and using @xmath144 , for a connected @xmath2 .",
    "the equivalence between ( a ) and ( e ) follows from results of @xcite and @xcite , which confirmed a conjecture of biggs @xcite in the context of chip - firing .",
    "an inductive proof ( using edge deletions and contractions ) without involving chip - firing is due to plautz and calderer @xcite .",
    "as described in @xcite , the work of dhar and lopez provides the following result : @xmath145 where @xmath146 , hence the equivalence of ( a ) and ( e ) .",
    "the results in @xcite and @xcite also establish the equivalence between ( c ) and ( e ) , with the minor modification that broken circuits are equivalently described using external acitivities - each broken circuit contributes an external activity of one to a spanning tree .    ' '' ''",
    "in addition to the above , cori and le borgne @xcite describe certain decreasing traversals of vertices and edges and a notion of strong edges to provide a bijection between recurrent chip - firing configurations ( with a fixed  level \" ) and spanning trees with a fixed  external activity \" . while the level corresponds to the sum of the values of a parking function ( up to an additive shift ) ,",
    "the external activity reflects the number of broken circuits , and we refer the interested reader to their paper for additional information .",
    "[ rmk : unique_fn ] observe that the nontrivial part of theorem  [ thm : unique ] follows easily using the equivalence between ( a ) and ( c ) . indeed , let @xmath2 be a connected graph which contains a cycle of length 3 or more . then given a spanning tree which contains no broken circuit , we include an edge not in the tree to form a cycle @xmath37 . since @xmath37 is of length 3 or more , there must be an edge , which is not the largest edge in the cycle , that can be removed , giving another spanning tree with no broken circuits .",
    "hence a ( connected ) graph containing a cycle has more than one parking function .      in this section",
    "we give a shorter proof , of equivalence of ( b ) and ( c ) of theorem  [ thm : main ] , than the ones reported in gebhard and sagan @xcite and gioan and las vergnas @xcite .",
    "note that the bijection in @xcite is not activity - preserving while the one in @xcite is ; also see @xcite .    for ease of presentation",
    ", we will consider orientations with a unique sink rather than a unique source  clearly this is equivalent .",
    "let @xmath147 be any total ordering of the edges of @xmath2 .",
    "given two edges @xmath134 and @xmath15 , we say @xmath134 is _ larger _",
    "than @xmath15 if @xmath148 .",
    "similarly we say @xmath134 is _ smaller _ than @xmath15 , if the inequality is otherwise .",
    "recall , a spanning tree @xmath133 of @xmath2 is called _ safe _ with respect to @xmath147 if for any edge @xmath149 , there exists at least one edge @xmath15 in the unique cycle in @xmath150 such that @xmath15 is larger than @xmath134 .",
    "let @xmath151 be the set of safe trees with respect to @xmath147 , and let @xmath93 be the set of acyclic orientations of @xmath2 with @xmath3 being the _",
    "unique sink_.    [ main ] for any total order @xmath147 , there exists a bijection @xmath152 .    henceforth , we fix @xmath147 and do not write it as a subscript .",
    "before we proceed , we make a few more definitions and observations .",
    "an arborescence with root @xmath3 is a directed spanning tree with all vertices except the root having out - degree exactly @xmath153 , and the root having out - degree @xmath154 .",
    "any spanning tree corresponds to a unique arborescence with root @xmath3 and henceforth we will use the terms interchangeably .",
    "given a vertex @xmath155 , we let @xmath156 denote the unique directed path from @xmath155 to @xmath3 . given vertex @xmath155 and @xmath157 , we let @xmath158 be the first vertex in the intersection of @xmath156 and @xmath159 .",
    "that is , the path from @xmath155 to @xmath158 and the path from @xmath157 to @xmath158 are disjoint except at @xmath158 .",
    "if @xmath157 lies on @xmath156 , we let @xmath157 be @xmath158 . observe that for three vertices @xmath160 , either ( a ) @xmath161 , or ( b ) @xmath162 lies on @xmath156 and @xmath163 , or ( c ) @xmath164 lies on @xmath159 and @xmath165 . given two vertices @xmath155 and @xmath157 , we will denote the largest edge in the path from @xmath155 to @xmath158 as @xmath166 and the largest edge from @xmath157 to @xmath158 as @xmath167 . if @xmath168 , we let @xmath167 be the null edge .",
    "we ( abuse notation and ) say @xmath169 if @xmath166 is larger than @xmath167 .",
    "we will also define @xmath170 to be a null edge .",
    "note that if @xmath169 and @xmath171 , then going over the three possibilities of @xmath162 we see that @xmath172 .",
    "thus @xmath173 is transitive and induces a total ordering of vertices .",
    "we say @xmath155 _ dominates _",
    "@xmath157 , if @xmath169 .",
    "it is instructive to note that @xmath155 dominates all vertices in @xmath156 .",
    "we now describe a mapping @xmath174 from all arborescences with root @xmath3 to acyclic orientations with unique sink @xmath3 .",
    "we will prove that distinct safe trees lead to distinct arborescences .",
    "this proves that the mapping @xmath174 restricted to safe trees is one - to - one .",
    "furthermore , given an acyclic orientation , we describe a procedure @xmath175 which takes an acyclic orientation and returns a safe tree .",
    "moreover , for any orientation @xmath176 , we have @xmath177 .",
    "this shows that @xmath174 is onto and thus it is a bijection . +   + * arborescence to acyclic orientation ( @xmath174 ) * : given an arborescence , orient an edge @xmath178 as @xmath155 to @xmath157 if @xmath179 , or vice - versa . by the transitivity of @xmath173",
    "it is clear that the orientation is acyclic .",
    "also every vertex dominates the root which therefore is the unique sink .",
    "we will call an orientation so obtained as one _ induced _ by the arborescence .",
    "the following lemma will show that two safe arborescences can not lead to the same orientation .",
    "o    let @xmath180 and @xmath181 be two distinct safe arborescences and @xmath182 and @xmath183",
    ". then @xmath184 .",
    "we prove the contrapositive : suppose @xmath185 , then we show that @xmath186 .",
    "consider the trees rooted at @xmath3 ( note that @xmath3 is the unique sink of @xmath187 ) with edges directed towards @xmath3 .",
    "we now show that for each vertex of the graph :    ( * ) the unique out - neighbor in @xmath180 is the same as that in @xmath181 which will imply that both trees are the same .",
    "since @xmath187 is acyclic with a unique sink , the vertices @xmath125 can be decomposed as @xmath188 for some @xmath189 , where @xmath190 is the set of vertices which are sinks in the digraph @xmath191 .",
    "let @xmath190 be the first set ( with the least @xmath155 ) to contain a vertex violating ( * ) .",
    "let this vertex be denoted @xmath155 ( abusing notation ) .",
    "let @xmath178 and @xmath192 be the unique out - neighbors of @xmath155 in @xmath180 and @xmath181 respectively , with @xmath193 , @xmath194 and @xmath195 ( again abusing notation ) .",
    "observe that @xmath196 ( that is , @xmath197 precede @xmath190 ) , by the nature of the decomposition , and the fact that @xmath198 and @xmath199 .",
    "now consider the undirected cycle using the edges @xmath200 and the unique paths , @xmath159 from @xmath157 to @xmath3 and @xmath201 from @xmath109 to @xmath3 .",
    "observe that both @xmath159 and @xmath201 are contained in @xmath180 _ and _ @xmath181 , by the choice of @xmath155 .",
    "also note that the largest edge in this cycle must be either on @xmath159 or on @xmath201 , since both @xmath180 and @xmath181 are safe !",
    "we now get a contradiction  if the largest edge is on @xmath159 , then our definition of @xmath174 demands that @xmath178 be oriented from @xmath157 to @xmath155 in @xmath180 ; similarly if it is on @xmath201 , then the edge @xmath192 be oriented from @xmath109 to @xmath155 in @xmath181 .",
    "* acyclic orientations to safe trees(@xmath175 ) : * now we describe a procedure to get a safe tree from an acyclic orientation @xmath187 with single sink @xmath3 .",
    "let @xmath202 denote the out - degree of vertex @xmath40 .",
    "note that @xmath203 .",
    "for an edge oriented @xmath155 to @xmath157 , we say @xmath157 is a out - neighbor of @xmath155 and @xmath155 is an in - neighbor of @xmath157 . at each step",
    "we maintain a set of _ labeled _ vertices @xmath204 and an arborescence @xmath133 spanning @xmath204 .",
    "we maintain the invariant that there is no edge from a vertex in @xmath204 to a vertex in @xmath205 , ( think of @xmath204 as a large sink ) .",
    "initially , @xmath206 .",
    "note that since the orientation is acyclic , at any step there is at least one vertex @xmath42 in @xmath207 which is a sink in the induced graph @xmath208 $ ] , that is , @xmath42 has no out - neighbors in @xmath207 .",
    "we pick one such @xmath42 arbitrarily .",
    "also , since there is a unique sink @xmath3 , this vertex @xmath42 must have at least one out - neighbor in @xmath204 .",
    "we add @xmath42 to @xmath204 and we connect @xmath42 to the arborescence @xmath133 as follows .",
    "let @xmath209 be the set of out - neighbors of @xmath42 .",
    "let @xmath210 be the vertex which dominates all other vertices in @xmath211 with respect to the current arborescence @xmath133 .",
    "let @xmath212 be the subset of all vertices @xmath40 such that @xmath213 .",
    "that is , the edge @xmath214 is larger than the largest edge in the path from @xmath215 to @xmath216 .",
    "note that @xmath217 and thus @xmath218 is non - empty .",
    "connect @xmath42 to the vertex @xmath40 with the largest @xmath214 among all @xmath40 in @xmath218 .",
    "we end when @xmath219 with an arborescence @xmath133 .",
    "the arborescence @xmath133 obtained at the end is a safe tree .",
    "moreover , @xmath220 , for @xmath221 .    consider an edge @xmath222 not in the tree .",
    "note that at each step exactly one node is added to the arborescence .",
    "also note that for an arc oriented @xmath222 in @xmath187 , @xmath155 is added before @xmath157 .",
    "let @xmath223 be the set of labeled vertices in the step when @xmath157 is added to the arborescence .",
    "note that @xmath224 .",
    "suppose @xmath225 was the dominator of @xmath223 and @xmath226 was the edge added at this step .",
    "observe that whenever the procedure adds a new vertex @xmath157 , the vertex @xmath157 dominates all other vertices in the arborescence .",
    "this is because @xmath227 , that is , the largest edge in the path @xmath215 to @xmath228 and thus @xmath157 dominates @xmath215 and so every other vertex .",
    "thus the tree @xmath133 induces the same orientation @xmath187 .",
    "it remains to show that @xmath133 is safe , that is , @xmath222 is not the largest edge in the cycle @xmath229 .    if @xmath230 , then by choice of @xmath109 ( based on how the edge @xmath226 was added above ) , @xmath231 and thus @xmath222 is not the largest cycle in @xmath229 .",
    "if @xmath232 , this means @xmath233 .",
    "that is , @xmath222 is smaller than the largest edge in the path from @xmath215 to @xmath234 .",
    "also , by definition , @xmath235 that is , @xmath226 is larger than the largest edge in the path from @xmath215 to @xmath236 .",
    "let the path from @xmath215 to @xmath234 be @xmath237 and that from @xmath215 to @xmath236 be @xmath238 .",
    "now consider @xmath162 . if @xmath162 does not lie on @xmath239 , then @xmath240 .",
    "thus , @xmath231 .",
    "if @xmath162 lies on @xmath239 , then it must be @xmath234 or @xmath236 . if the latter , then @xmath241 , and therefore @xmath231 . if @xmath242 , then @xmath243 .",
    "either the largest edge in @xmath237 lies in @xmath238 and we are done as before ; or , the largest lies in @xmath244 , which lies in the cycle formed in @xmath229 .",
    "thus , @xmath222 is smaller than the largest edge in the cycle of @xmath229 , completing the proof .",
    "[ new_remark ] thanks to an anonymous referee , we learnt that biggs and winkler @xcite had actually given a simple bijection somewhat similar to the one we describe above , but unlike ours , their bijection does not preserve the so - called external activity .",
    "this is an important distinction for us , since we extend the above notion in the next subsection to provide a more general bijection .",
    "p in this section we generalize the above to a bijection between @xmath2-parking functions and all spanning trees of @xmath2 , in such a way that it preserves the bijection between maximal parking functions and safe trees .",
    "we use the definitions of the previous section and make a few more definitions and claim below before demonstrating the bijection .    given an arborescence @xmath133 spanning only a subset of vertices @xmath245 , and a vertex @xmath246",
    ", we make a few definitions and observations which will be useful in our bijection .",
    "let @xmath247 be the neighbors of @xmath42 and let @xmath248 .",
    "we now describe an order on the vertices @xmath211 ( which could be different from the total order of the previous paragraph , but is related ) , which we call the _ power order _ of @xmath211 .",
    "intuitively , given two neighbors @xmath40 and @xmath249 of @xmath42 in @xmath211 , if @xmath40 is more powerful than @xmath249 , then in the tree @xmath250 , @xmath42 would dominate @xmath249 _ and _ the edge @xmath251 does nt form a broken circuit with @xmath250 . moreover , in the tree @xmath252 , either @xmath40 dominates @xmath42 _ or _ the edge @xmath214 forms a broken circuit with @xmath252 .",
    "let @xmath215 be the vertex in @xmath211 which dominates all other vertices in @xmath211 with respect to the current arborescence @xmath133 .",
    "let @xmath212 be the subset of all vertices @xmath40 such that @xmath213 .",
    "that is , the edge @xmath214 is larger than the largest edge in the path from @xmath215 to @xmath216 .",
    "note that @xmath217 and thus @xmath218 is non - empty .",
    "let @xmath40 be such that @xmath214 is largest among all @xmath40 in @xmath218 .",
    "call @xmath40 the most _ powerful _ element of @xmath211 .",
    "delete @xmath40 from @xmath211 and repeat till one gets an order on all vertices of @xmath211 .",
    "we call this order the _ power order w.r.t @xmath133_. in figure [ fig : powerorder ] we give an illustrative example .     value .",
    "the dark edges form the tree @xmath133 and @xmath253 .",
    "note that @xmath254 in @xmath133 .",
    "however , the power order of @xmath255 is as follows .",
    "firstly , @xmath256 and @xmath257 .",
    "since @xmath258 is bigger , @xmath259 is the most powerful .",
    "second powerful is @xmath260 .",
    "after that @xmath261 and @xmath262 , and thus the complete power order is @xmath263 . ]",
    "[ claim : power ] given a tree @xmath133 and a vertex @xmath253 with neighbors @xmath211 in @xmath133 , and two vertices @xmath40 and @xmath249 in @xmath211 .",
    "if @xmath40 is more powerful than @xmath249 , then @xmath42 dominates @xmath249 in the tree @xmath250 and @xmath251 does nt form a broken circuit with @xmath250 . in the tree",
    "@xmath252 , either @xmath40 dominates @xmath42 or @xmath214 forms a broken circuit with @xmath252 .",
    "consider the time when the power order of @xmath40 is determined .",
    "let @xmath215 be the dominator at that stage and let @xmath211 the set of neighbors of @xmath42 remaining .",
    "note @xmath264 .",
    "either @xmath265 or @xmath266 and @xmath218 is empty . if the former , @xmath214 is larger than @xmath267 and thus in @xmath250 , @xmath42 dominates @xmath215 which dominates @xmath249 .",
    "moreover @xmath251 is either smaller than @xmath214 if @xmath268 , or smaller than @xmath269 which is smaller than @xmath270 since @xmath42 dominates @xmath215 . in any case",
    ", @xmath251 does nt form a broken circuit in @xmath250 .",
    "also , in @xmath252 , @xmath214 forms a broken circuit since it is larger than the largest edge from @xmath40 to @xmath249 .    if the latter , then @xmath42 dominates @xmath249 in @xmath250 since @xmath266 dominates @xmath249 in @xmath133 .",
    "also since @xmath218 is empty , the edge @xmath251 is smaller than @xmath271 implying @xmath251 does nt form a broken circuit in @xmath250 .",
    "also , in @xmath252 , @xmath40 dominates @xmath42 since @xmath251 is smaller than @xmath271 .",
    "now we are ready to present the next theorem which gives the desired bijection between @xmath2-parking functions and spanning trees of @xmath2 .",
    "let @xmath272 be the set of all spanning trees of @xmath2 . recall that @xmath151 was the set of safe spanning trees with respect to @xmath147 .",
    "[ thm : bijgen ] there exists a bijection @xmath273 such that for all @xmath274 which is maximal , @xmath275 is a safe tree .    as in the proof of theorem",
    "[ thm : main ] , we describe mappings @xmath276 and @xmath273 and show that for any parking function @xmath15 , @xmath277 ( lemma [ lem1 ] ) and for any spanning tree @xmath133 , @xmath278 ( lemma [ lem2 ] ) .",
    "furthermore we show that for a tree @xmath133 , @xmath279 is a maximal parking function iff @xmath133 is safe ( proposition [ prop : safemax ] ) .",
    "this completes the proof of theorem [ thm : bijgen ] + * spanning trees to parking functions ( @xmath174 ) : * given a spanning tree @xmath133 , let @xmath280 be the subset of edges not in @xmath133 which form a broken circuit with @xmath133 .",
    "delete @xmath280 from @xmath281 .",
    "direct the edges of @xmath133 with @xmath3 as the unique source  that is , all vertices except @xmath3 have an out - degree of @xmath153 and @xmath3 has an out - degree of @xmath154 . given this arborescence , for any undirected edge @xmath178 in @xmath282 , orient it as @xmath178 if @xmath179 , or @xmath222 if @xmath283 .",
    "this gives di - graph @xmath284 .",
    "the parking function @xmath285 is defined as @xmath286 in the orientation of the edges of @xmath282 .",
    "[ prop : safemax ] @xmath287 is a maximum parking function iff @xmath133 is a safe tree .",
    "note that if @xmath133 is safe , @xmath280 is empty and therefore all the edges are oriented .",
    "thus @xmath288 and by proposition [ prop : bb ] , @xmath15 is a maximal parking function . on the other hand if @xmath133 is not safe , then @xmath280 is not empty and thus @xmath289 implying @xmath15 is not a maximal parking function .    * parking functions to spanning trees ( @xmath175 ) : * given a valid parking function , we use a modification of dhar s algorithm to obtain the spanning tree .",
    "we maintain a set of vertices @xmath290 connected via an arborescence @xmath291 , with @xmath292 initialized to @xmath293 and @xmath294 is @xmath295 . at each step",
    "we add one vertex to @xmath290 and one edge to @xmath291 . in the end",
    "we get @xmath296 and @xmath297 is the spanning tree returned .",
    "we describe the @xmath298th step .",
    "let @xmath299 denote the neighbors of @xmath40 .    1 .",
    "let @xmath300 .",
    "2 .   for every @xmath301 , @xmath302 and let @xmath303 be the @xmath304th vertex in the power order of @xmath211 with respect to @xmath133 . let @xmath305 be the vertices in @xmath211 more powerful than @xmath303 and @xmath306 be the set of @xmath307 edges of the form @xmath214 where @xmath308 .",
    "3 .   note that adding all edges of the form @xmath309 to @xmath291 gives a new tree @xmath310 . in @xmath310 , let @xmath42 be the vertex in @xmath311 which is dominated by all other vertices in @xmath311 with respect to @xmath310 . add @xmath42 to get @xmath312 and the edge @xmath309 to get @xmath313 .",
    "[ claim : order ] given a parking function @xmath15 , let the vertices be added in order @xmath314 .",
    "that is @xmath315 . then with respect to the tree @xmath291 , @xmath316 dominates @xmath317 which dominates @xmath318 and so on .",
    "the proof is by induction . at stage @xmath155 , let @xmath190 be the set of vertices as defined above .",
    "suppose @xmath316 is added at this stage .",
    "we will be done if we show @xmath316 dominates @xmath317 .",
    "two cases arise : if @xmath317 is not a neighbor of @xmath316 , then @xmath316 must have been in @xmath319 as well implying @xmath316 dominated @xmath317 in @xmath320 and since @xmath321 does nt change , dominates @xmath317 in @xmath291 as well .    if @xmath317 is a neighbor of @xmath316 , then either @xmath322 and @xmath316 connects to the most powerful of its neighbors in @xmath323 and thus dominates @xmath317 which is in @xmath323 . or , @xmath324 , which once again implies @xmath316 was in @xmath319 and moreover , either @xmath321 becomes @xmath317 , or still remains more powerful than @xmath317 . in any case",
    ", @xmath316 dominates @xmath317 in @xmath291 .",
    "[ claim : mainpi ] for any vertex @xmath42 , the set of edges @xmath306 are precisely the set of edges from @xmath42 to @xmath211 which form broken circuits with @xmath133 .    consider vertex @xmath42 connecting to vertex @xmath249 in @xmath211 . from the first part of claim [ claim : power ]",
    "we see that the edges not in @xmath306 do not form broken circuits .",
    "let @xmath214 be an edge in @xmath306 . since @xmath40 is more powerful than @xmath249 , from the second part of claim [ claim : power ] we see either @xmath214 forms a broken circuit with @xmath133 or @xmath40 dominates @xmath42 in @xmath133 .",
    "the second possibility is precluded by claim [ claim : order ] .    [ lem1 ] for any parking function @xmath15 , we have @xmath277 .",
    "let @xmath133 be the arborescence formed by rooting the tree @xmath275 at @xmath3 . fix a vertex @xmath42 .",
    "from claim [ claim : mainpi ] we have that @xmath174 will first remove all the edges in @xmath306 .",
    "after the removal of these edges , @xmath42 will dominate the remaining @xmath325 vertices in @xmath211 and thus its out - degree will be that .",
    "thus , @xmath326 .",
    "[ lem2 ] for any spanning tree @xmath327 , we have @xmath328 .",
    "let @xmath329 .",
    "abuse notation and call the arborescence obtained by rooting @xmath327 at @xmath3 , also @xmath327 . let @xmath280 be the set of edges which form broken circuits with @xmath327 .",
    "let @xmath284 be the di - graph obtained by orienting the edges of @xmath282 with respect to @xmath327 .",
    "given a subset of vertices @xmath204 , let @xmath330 $ ] be the induced sub - forest of @xmath204 .",
    "the proof proceeds by induction on the stages of the algorithm computing @xmath175 .",
    "we assume at stage @xmath155 , the current tree of the algorithm , @xmath133 , is a subtree of the tree @xmath327 .",
    "that is @xmath331 $ ] .",
    "we also assume that for every vertex in @xmath290 , all its out - neighbors in @xmath284 are also in @xmath290 .",
    "these are vacuously true at stage @xmath154 .",
    "we now show that at stage @xmath298 a vertex connects to tree @xmath133 using an edge of @xmath327 and all its out - neighbors of @xmath284 are in @xmath290 .",
    "consider vertices in @xmath332 .",
    "at least one of these vertices @xmath40 must have all its @xmath99 out - neighbors of @xmath284 in @xmath290 for otherwise we would get a cycle in @xmath284 .",
    "call this set of vertices @xmath333 .",
    "note that @xmath334 $ ] is connected as the vertices in @xmath204 can only connect to @xmath327 using some edge of @xmath284 .",
    "let @xmath335 be the vertex which is dominated by all other vertices in @xmath333 in @xmath334 $ ] .",
    "let @xmath336 be the edge in @xmath327 with @xmath337 .",
    "we claim that the algorithm which computes @xmath175 also picks @xmath338 in this stage and @xmath339 is @xmath303 .",
    "note that @xmath340 since each vertex in @xmath333 has at least @xmath325 neighbors in @xmath290 .",
    "in fact , we show for every vertex @xmath341 , the corresponding @xmath249 in @xmath290 where @xmath342 is in fact @xmath303 .",
    "call the set of these @xmath343 out - neighbors of @xmath42 in @xmath290 , @xmath305 . observe that any edge of the form @xmath214 with @xmath344 must form a broken cycle with @xmath327 .",
    "this is because these edges are not directed towards @xmath40 and can not be directed towards @xmath42 by the induction hypothesis .",
    "since they form broken cycles with @xmath327 , these @xmath345 vertices must be more powerful than @xmath249 with respect to the arborescence @xmath327 restricted to vertices of @xmath290 , that is @xmath133 by the induction hypothesis .",
    "this follows from the definition of power",
    ". moreover , @xmath249 must be powerful than all other vertices of @xmath305 with respect to @xmath133 since @xmath42 dominates all these vertices .",
    "thus @xmath249 is the @xmath346th powerful vertex in @xmath211 with respect to @xmath133 , that is , @xmath347 .",
    "we will be done if we show any vertex @xmath348 dominates some vertex in @xmath333 with respect to @xmath327 .",
    "if this is the case , then the algorithm would choose the vertex which is dominated by all vertices in @xmath311 and it has to be the vertex @xmath338 . but this is true since @xmath349 has some out - neighbor of @xmath284 in @xmath332  a path following argument shows we must reach a vertex @xmath350 from @xmath349 using edges in @xmath284 . in other words , @xmath349 dominates @xmath40 with respect to @xmath327 .    in figure",
    "[ fig : example ] below , we give an example of the bijection on a simple @xmath351-vertex @xmath352-edge graph .    .",
    "the graph has @xmath353 spanning trees and they are shown beside the graph . the numbers on each spanning tree correspond to the @xmath353 possible parking functions of the graph .",
    "it is instructive to note that the second row of spanning trees correspond to safe trees w.r.t to @xmath147 and correspond to maximum parking functions  note the sum of the numbers is @xmath153 for the bottom @xmath351 trees .",
    "we now take the first tree and show how it leads to the parking function via the function @xmath174 and then how vice - versa is obtained via the function @xmath175 . @xmath174",
    "first recognizes the edges which form broken circuits with @xmath133  the dotted edge is the only one in this case .",
    "then it orients the tree edges towards the root @xmath260 .",
    "it orients the edge @xmath354 towards @xmath355 because @xmath356 w.r.t @xmath133 . after the orientation",
    ", the parking function is found by subtracting @xmath153 from the out - degrees .",
    "going from the parking function to the tree , the dark vertices denote the set @xmath290 at each step , while the dotted lines enclose the set @xmath190 .",
    "when @xmath190 has size more than @xmath153 ( when it contains vertices @xmath357 ) , it finds @xmath358 and @xmath359 according to the power - order .",
    "it then chooses @xmath360 since @xmath361 dominates @xmath355 in the tree with both @xmath362 and @xmath360 added . ]",
    "we end this section by using the relation between parking function and orientations to prove a property about the poset formed by parking functions .",
    "recall given two parking functions @xmath15 and @xmath363 , we say that @xmath364 iff @xmath365 for all vertices @xmath366 .",
    "also recall the parking function @xmath57 defined as @xmath367 . finally , recall @xmath368 .    given a non - maximum parking function @xmath363 ,",
    "let @xmath369 be the set of maximum parking functions that dominate @xmath363 .",
    "then , @xmath370 .",
    "it is clear that any non - maximum parking function @xmath363 is dominated by the meet of all maximum parking functions which dominate it .",
    "the lemma claims that it is in fact exactly equal to the meet . to show this",
    ", it suffices to show that for any @xmath40 , there exists a parking function @xmath15 such that @xmath371 , @xmath372 for all @xmath373 and @xmath374 for exactly one vertex @xmath375 . continuing this process",
    ", we get a maximum parking function which agrees with @xmath363 on @xmath40 .",
    "since this is true for all @xmath40 , we are done .    to prove the above , note that from the bijection between parking functions and spanning trees , we see that any parking function @xmath363 uniquely corresponds to a _",
    "mixed _ orientation of the edges of @xmath2 , where a _",
    "mixed _ orientation has some edges directed and others undirected .",
    "moreover , the directed edges induce a dag .",
    "consider the mixed orientation with respect to @xmath363 .",
    "let @xmath284 be the dag induced by the set of directed edges .",
    "suppose there is an edge @xmath251 which is not oriented where @xmath42 and @xmath249 are distinct from @xmath40 ; then in @xmath284 if there is a directed path from @xmath42 to @xmath249 , orient the edge from @xmath42 to @xmath249 , else orient the edge from @xmath249 to @xmath42 . if there is no path either way , orient in any of the two ways .",
    "we still have a mixed orientation where the directed edges are acyclic .",
    "moreover , this increases the value of parking function on exactly one of @xmath42 or @xmath249 , and keeps the value the same everywhere else .",
    "thus , the non - trivial case is when the only undirected edges are incident on @xmath40 .",
    "let @xmath214 be such an edge .",
    "note that we do not want to increase @xmath376 , that is , we want to orient @xmath214 without increasing @xmath40 s out - degree . in other words",
    ", we want to orient it from @xmath42 to @xmath40 .",
    "this is a problem if and only if there is a path from @xmath40 to @xmath42 in @xmath284 .",
    "if so , consider the longest such a path @xmath377 , where @xmath249 is the neighbor of @xmath40 on @xmath378 .",
    "note that apart from the edge @xmath379 , there is no path from @xmath40 to @xmath249 .",
    "if there were such a path , it can not use vertices from @xmath378 , for @xmath249  dominates \" ( in the dag ) all vertices in @xmath378 other than @xmath40 .",
    "thus , the path from @xmath40 to @xmath249 must use  new \" vertices making @xmath378 longer , and thus providing a contradiction .",
    "therefore , we can flip @xmath379 to @xmath380 and not create any cycles .",
    "that is , the operation to get @xmath15 is to flip @xmath379 to @xmath380 and orient @xmath381 from @xmath40 to @xmath42 .",
    "this only increases @xmath382 but keeps everything else the same .",
    "given two graphs @xmath12 and @xmath13 , there is a standard notion of the cartesian product @xmath11 of the two graphs . given a @xmath12-parking function and a @xmath13-parking function , we define below a @xmath383-parking function in a natural way that is symmetric in @xmath12 and @xmath13 .    given @xmath384 and @xmath385 , the cartesian product graph @xmath386 is defined on the vertex set @xmath387 , using the edge set @xmath388 , where @xmath389 , and @xmath390 .",
    "it is easy to see from the definition that the number of vertices in @xmath383 is @xmath391 , and that the number of edges is @xmath392 .      while it seems hard to characterize parking functions on @xmath11 , by simply knowing those on @xmath12 and on @xmath13 , the following result gives an explicit way to construct a particular family of maximum parking functions on product graphs .",
    "[ prop : prod ] let @xmath393 and @xmath394 .",
    "then @xmath395 , where @xmath396 , whenever @xmath397 and @xmath398 .",
    "further , if @xmath399 and @xmath400 are maximum parking functions , then @xmath401 is a maximum parking function .",
    "* proof .",
    "* let @xmath402 , @xmath403 , and @xmath404 . to show that @xmath53 , once again we make crucial use of dhar s marking algorithm ; in particular , we will make use of the order in which the vertices of @xmath12 ( and @xmath13 ) are marked in verifying that @xmath405 ( and @xmath406 , respectively ) . using these in turn",
    ", we order the vertices in @xmath11 : let @xmath407 , if @xmath349 is marked before @xmath42 in @xmath12 , or if @xmath408 and @xmath409 is marked before @xmath40 in @xmath13 .",
    "we now prove that @xmath15 is a valid parking function , by showing that the vertices of @xmath383 can be marked , using dhar , in precisely the order given by @xmath410 .",
    "we begin by noting that @xmath411 .",
    "now consider the vertices of @xmath2 inductively , using the order given by @xmath410 . by the time the vertex @xmath214 is considered ,",
    "observe that there are at least @xmath412 neighbors of @xmath214 that have already been marked , since they precede @xmath214 in @xmath410 : indeed , at least @xmath343 neighbors of the form @xmath413 have been marked , ( since the graph induced by fixing the second coordinate @xmath40 is simply @xmath12 ) , and similarly at least @xmath99 neighbors of the form @xmath414 have also been marked .",
    "thus @xmath214 can be assigned the value @xmath415 , and hence @xmath15 is a @xmath2-parking function .    now , suppose that @xmath399 and @xmath400 are _ maximum _ @xmath12- and @xmath13-parking functions respectively .",
    "then , we must show that @xmath15 achieves the genus of @xmath416 minus one .",
    "this is easy to verify : @xmath417      a quintessential product graph is the @xmath4-dimensional cube @xmath5 , obtained by taking the product of an edge @xmath418 with itself @xmath4 times . for the purpose of this section , for integer @xmath79",
    ", we also view the @xmath4-cube @xmath5 as the graph on @xmath14 vertices , which may conveniently be labeled by the @xmath14 binary vectors of length @xmath4 , and with edges between vertices whose hamming distance is one .",
    "we are interested in understanding the parking functions on @xmath5 with respect to the vertex @xmath419 .",
    "[ defn : can ] for @xmath420 , the unique parking function @xmath421 on @xmath418 is canonical . for @xmath422 , the parking function @xmath423 ,",
    "obtained using the product graph construction , is defined as the _ canonical _ @xmath5-parking function .",
    "further , if a @xmath5-parking function @xmath363 is such that there exists a bijection @xmath424 such that @xmath425 for all @xmath426 , then we say that @xmath363 is _ semi - canonical_.    note that by proposition  [ prop : prod ] , the canonical @xmath5-parking function is a maximum parking function , and hence the semi - canonical one is also a maximum .",
    "_ not _ all maximal @xmath5-parking functions are semi - canonical .",
    "for instance , consider the @xmath427-parking function @xmath15 such that @xmath428 .",
    "it is easy to verify that @xmath15 is a @xmath427-parking function , but @xmath15 is not semi - canonical . since , @xmath429 , @xmath15 is maximum ( and thus maximal ) .",
    "recall the partial order on parking functions , and the notion of @xmath430 , for a parking function @xmath77 .",
    "[ thm : domnum ] let @xmath431 denote the canonical @xmath5-parking function",
    ". then @xmath432 , where @xmath433 is the hamming weight ( the number of 1 s in the binary representation ) of the vertex @xmath426 . consequently ,",
    "if @xmath15 is semi - canonical , then @xmath434    * proof .",
    "* the proof is by an easy induction on @xmath435 .",
    "the base case is clear , since @xmath436 takes the values @xmath437 . for the induction step , for @xmath438 , write @xmath439 , which by proposition  [ prop : prod ] implies that , for @xmath440 and @xmath441 , @xmath442 thus for @xmath443 , the value @xmath109 can be obtained in @xmath444 either by taking a @xmath109 from @xmath431 and adding a zero to it ( through , @xmath445 ) , or by taking a @xmath446 from @xmath431 and adding a one to it ( through , @xmath447 ) . by the induction hypothesis",
    ", the number of @xmath109 s is @xmath448 completing the induction step . also note that , by definition , a semi - canonical parking function also has the same distribution of integers .    to complete the proof of the theorem , recall by proposition  [ prop : dom_park ] , that for any @xmath449 , if @xmath450 for @xmath451 , then for @xmath50 , we may have @xmath452 ; this implies that there are @xmath453 possible values for such a @xmath363 with respect to @xmath40 .",
    "since @xmath454 and each value in the range of @xmath15 is independent with respect to obtaining a dominated function @xmath363 , we have that @xmath434    ' '' ''    [ can_semi ] note that it can directly be seen that @xmath15 is a @xmath5-parking function , when @xmath15 is defined as @xmath455 . using dhar s algorithm , starting with @xmath456 , we may proceed by marking vertices level by level ( in the boolean lattice ): every vertex @xmath40 in level @xmath109 has precisely @xmath109 down - neighbors in level @xmath446 , and they have all been marked , so @xmath40 can be marked and given value @xmath446 .",
    "thus there are precisely @xmath457 vertices which obtain the value @xmath446 , in such a canonical parking function on @xmath5 .",
    "note that _ not _ every semi - canonical parking function is canonical  in satisfying the level by level property described in remark  [ can_semi ] .",
    "for instance , consider the @xmath427-parking function @xmath15 such that @xmath458 , and @xmath459 .",
    "it is easy to check that @xmath15 is a @xmath427-parking function , semi - canonical , but not canonical  since , for example , the value 2 is adjacent to a 0 .",
    "we hope the above remarks and examples indicate the difficulty in understanding the _ maximum _ parking functions on even a highly structured , symmetric graph such as the @xmath4-cube . as far as we know",
    ", the number of maximum parking functions of @xmath5 is known only for @xmath460 . for @xmath461 , and 4 , this number is 3 , 133 , and 3040575 , respectively .",
    "as mentioned in the introduction , in the context of chip - firing , the following notion was introduced in @xcite .",
    "[ defn : diffuse ] given a connected graph @xmath2 , a function @xmath462 is called a diffuse state if for every induced subgraph @xmath463=(a , e(a ) ) \\subseteq g$ ] , there exists some @xmath464 such that @xmath465 .",
    "further , let @xmath466 .",
    "note the ( complementary ) similarity with the definition of a parking function , by observing that @xmath465 is equivalent to @xmath467 .",
    "however , we have no special vertex such as @xmath3 . for chip - firing purposes ,",
    "@xmath468 may be thought of as the number of chips on @xmath40 , thus @xmath469 denotes the total number of chips in the graph .",
    "first consider the following algorithm which constructs an acyclic orientation , by using a given diffuse state @xmath470 with @xmath471 chips .",
    "step 1 . since @xmath470 is diffuse , we may find a vertex @xmath40 such that @xmath472 .",
    "orient all of the edges incident to @xmath40 outward ; delete @xmath40 and its incident edges .",
    "the resulting graph is diffuse since it is a subgraph of @xmath2 ; so we may repeat steps 1 - 2 until all edges of the graph are oriented .",
    "note that this process gives an acyclic orientation since we can not orient edges into a vertex which has out edges since this vertex has been deleted from the graph .",
    "[ lem : sinkset ] if @xmath470 is a diffuse state on graph @xmath2 with @xmath473 , then there is a vertex @xmath40 with @xmath474 . for every diffuse state @xmath470",
    ", the set @xmath475 is an independent set in @xmath2 .    the above algorithm which repeatedly removes vertices , removes at least as many chips as the edges at each step . before the last vertex",
    ", all edges ( hence all @xmath471 chips ) must have been removed , which means that the last vertex can has zero chips . for the second part ,",
    "if @xmath476 , and @xmath477 then the set @xmath478 violates the diffuse property .    ' '' ''    with a similar proof , it can also be shown that there exists a vertex @xmath249 such that @xmath479 , under the hypothesis of the above lemma .",
    "[ thm : diffuse ] there is a bijection between the set @xmath480 of diffuse states with @xmath471 chips and the set @xmath481 of acyclic orientations of a connected graph @xmath2 .",
    "let @xmath482 . the proof is based on two injections between the sets , going in each direction .",
    "first , given an acyclic orientation @xmath483 , define the nonnegative function @xmath484 by letting @xmath468 be the out - degree of @xmath40 in the orientation @xmath485 .",
    "clearly , the mapping is one - one , since the out - degree sequence uniquely determines an acyclic orientation ; also @xmath486 , since the sum of out - degrees equals the number of edges . to see that @xmath470 is diffuse",
    ", simply observe that , each induced subgraph @xmath463 \\subseteq g$ ] has a ( local ) source @xmath487 when restricted to the acyclic orientation induced on @xmath126 ; such a source @xmath488 satisfies @xmath489 , since the out - degree of @xmath488 is at least the degree @xmath490 .",
    "for an injection in the other direction , we make use lemma  [ lem : sinkset ] . given a diffuse state @xmath470 with @xmath491 chips , we construct an acyclic orientation , by constructing a dag : lemma  [ lem : sinkset ] guarantees the existence of sink(s )",
    "; so we construct the orientation , by ( i ) repeatedly removing the current set of sinks , and ( ii ) subtracting a chip from each in - neighbor of a removed sink .",
    "it is easy to see that the updated function @xmath470 at each step is still a diffuse state on the remaining graph .",
    "note that this construction is one - one : for @xmath492 different diffuse states , simply consider the first time the current sets of sinks ( in the dags ) differ , when we start with @xmath470 versus @xmath493 ; since the underlying graph is the same , there must be such a time whenever @xmath494 .    ' '' ''    thanks again to an anonymous referee of @xcite , we learnt the following : that diffuse states are also in 1 - 1 correspondence with the critical configurations of the chip - firing game of bjrner - lovsz - shor @xcite , and that the first part of the above proof appears as theorem  3.3 , part ( b ) in @xcite . in addition , it is easy to go between the above theorem and theorem  [ thm : biject ] : simply add a new vertex @xmath3 adjacent to every vertex in @xmath2 and obtain a new graph @xmath495 ; then @xmath495-parking functions ( with respect to @xmath3 , say ) correspond to diffuse states in @xmath2 , and acyclic orientations with a unique source at @xmath3 in @xmath495 correspond to acyclic orientations of @xmath2 .",
    "soon after the completion of this work , igor pak kindly pointed us to the work of olivier bernardi @xcite , where bijective proofs are derived for interpretations of each of the evaluations of the tutte polynomial @xmath136 , for @xmath496 , in terms of orientations .",
    "a key to this seems to be a nice combinatorial embedding of ( the edges of ) the graph and a rewriting of the tutte polynomial using notions of internal and external _ embedding _ activity .",
    "in addition to the questions mentioned in the previous sections , several challenging problems remain open . given an arbitrary graph @xmath2 , it is a classical open problem in the topic of markov chain monte carlo ( mcmc ) algorithms @xcite , to efficiently generate an acyclic orientation _",
    "uniformly at random _ from the set of all such orientations . due to the observations above , a closely related problem would be to generate at random an acyclic orientation with a uniquely identified sink ( or source ) , or equivalently , to sample uniformly from the set of _ safe _ spanning trees of @xmath2 .",
    "the mcmc technique suggests the following natural approach to this problem : it is well known ( see for example , @xcite ) that the so - called bases exchange walk provides an efficient way to sample uniformly from the set of _ all _ spanning trees of a given graph @xmath2 .",
    "however it remains to be seen whether ( and how ) restricting such a random walk to the set of safe trees affects the _ mixing time _ of the walk  the time by which the walk converges to its steady state distribution , uniform on the set of safe trees .",
    "given that the exact enumeration of the number of safe trees of @xmath5 is also open , an interesting first step might be to analyze such a walk on the trees of @xmath5 .",
    "independent of the above approach , other ways of providing asymptotically accurate estimates , for large @xmath4 , of the number ( or even the logarithm of the number ) of maximum parking functions on @xmath5 , remains interesting and presumably a challenging exercise .",
    "* acknowledgements . *",
    "the authors thank matt baker for introducing them to @xmath2-parking functions and for helpful discussions .",
    "the authors also thank adam marcus for helpful discussions , and herb wilf for providing the chromatic polynomial of @xmath497 , which identified the number of maximum parking functions of @xmath497 .",
    "the authors are grateful to the anonymous referees for making several critical remarks which helped improve the presentation here .",
    "the present work originated from a summer 2007 reu , supported by an reu supplement to the last author s nsf grant dms-0701043 .",
    "r. bari , _ a combinatorial approach to graphical polynomials and spanning subgraphs _ , topics in graph theory ( new york , 1977 ) , pp .",
    "2129 , ann .",
    "new york acad .",
    ", 328 , new york acad .",
    ", new york , 1979 .                                          c. greene and t. zaslavsky , _ on the interpretation of whitney numbers through arrangements of hyperplanes , zonotopes , non - radon partitions , and orientations _ , trans .",
    "soc . * 280 * ( 1983 ) , pp . 97126 .",
    "m. jerrum and a. sinclair , _ the markov chain monte carlo method : an approach to approximate counting and integration .",
    "_ in d. hochbaum ( ed . ) ,",
    "approximation algorithms for np - hard problems , pws publishing ( 1996 ) , pp . 482520 .",
    "m. las vergnas , _ a correspondence between spanning trees and orientations in graphs _ , in : b.  bollobas ( ed . ) , graph theory and combinatorics , proceedings of cambridge combinatorial conference in honour of p. erdos , cambridge , 1983 , academic press , london , 1984 , pp ."
  ],
  "abstract_text": [
    "<S> given an undirected graph @xmath0 , and a designated vertex @xmath1 , the notion of a @xmath2-parking function ( with respect to @xmath3 ) was independently developed and studied by various authors , and has recently gained renewed attention . </S>",
    "<S> this notion generalizes the classical notion of a parking function associated with the complete graph . in this work , </S>",
    "<S> we study properties of _ maximum _ @xmath2-parking functions and provide a new bijection between them and the set of spanning trees of @xmath2 with no broken circuit . as a case study </S>",
    "<S> , we specialize some of our results to the graph corresponding to the discrete @xmath4-cube @xmath5 . </S>",
    "<S> we present the article in an expository self - contained form , since we found the combinatorial aspects of @xmath2-parking functions somewhat scattered in the literature , typically treated in conjunction with sandpile models and closely related chip - firing games . </S>"
  ]
}
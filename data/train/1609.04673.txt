{
  "article_text": [
    "the components that make up quantum technologies are inherently sensitive to noise .",
    "this is a problem which , if unresolved , will inhibit the scalability of quantum information processing tasks . to overcome this issue quantum error - correcting codes",
    "have been developed  @xcite , where logical quantum states are redundantly encoded in robust subspaces of the hilbert space of many physical qubits .",
    "as such , there is a considerable number of physical qubits of a scalable quantum computer that are dedicated to the role of error correction",
    ".    given the prohibitive cost of quantum resources , it is important to discover fault - tolerant schemes for universal quantum computation that use as few physical qubits as possible . among other factors ,",
    "the resource cost of fault - tolerant quantum computation is a function of the choice of quantum error - correcting codes into which we choose to encode quantum information , and the different schemes we use to implement a universal set of computational gates . indeed , there has been considerable effort dedicated to minimising the resource cost of quantum computation .    a leading approach to realising fault - tolerant quantum computation is broadly known as topological quantum computation  @xcite . with this approach ,",
    "we protect quantum information by encoding it into non - local degrees of freedom , using objects including non - abelian anyons  @xcite , punctures  @xcite , or by use of extrinsic defects  @xcite , otherwise known as twists . with these schemes ,",
    "encoded information is manipulated by braiding these objects to realise fault - tolerant universal quantum computation .",
    "in addition to schemes where protected quantum information undergoes unitary rotations by braiding , other promising schemes are known where quantum information is encoded over non - contractable cycles of a lattice of physical qubits which are embedded on a manifold non - trivial topology  @xcite .",
    "fault - tolerant entangling gates are then achieved either transversally  @xcite , or by lattice surgery  @xcite .",
    "it is the goal of this manuscript to unify some of these schemes by consideration of specific lattice models .",
    "here we unify two low - overhead approaches to encoding qubits using the surface code , namely , lattice surgery  @xcite , together with defect encoding schemes  @xcite .",
    "this unification is made by observing a correspondence between the corners of the planar code  @xcite and twist defects .",
    "with the observed correspondence , we use the analogy between twist defects and majorana fermions  @xcite to realise a gate set by braiding twist defects . with said analogy , we draw upon known protocols to realise unitary operations by ising anyons  @xcite to achieve fault - tolerant logical operations through code deformation",
    ". we will show that , by drawing this analogy , that we can achieve a fault - tolerant realisation of the full clifford group using lattice surgery methods , and by manipulating twist defects via code deformations .",
    "further to this , we also consider interactions between different topological schemes for encoding quantum information .",
    "in particular , we consider how punctures interact with twist defects , and show that we can use holes to perform fault - tolerant measurement - only topological quantum computation  @xcite with twist defects , by braiding twists and holes .",
    "in addition , we also show that we can encode logical qubits in hybridised schemes that use both holes and twist defects to encode logical qubits .",
    "such encodings are of interest as they may enable new schemes that realise fault - tolerant quantum computation with lower overhead demands .",
    "this work seeks to provide new tools for surface code quantum computation .",
    "however , it is worth commenting on other promising computational schemes .",
    "one class of models of particular recent interest are the color codes  @xcite , which are known to have a particularly versatile set of fault - tolerant logical gates via transversal operations .",
    "notably , the gauge color code  @xcite performs a universal transversal gate set via gauge fixing  @xcite , which may offer a reduction in overhead over other well - studied methods of error correction .",
    "however , the gauge color code is three - dimensional , and as such is challenging to realise with locally interacting qubits that are arranged on a two - dimensional surface .",
    "while some effort has been made to reduce the engineering demands of realising three - dimensional codes via dimension jumping  @xcite , or by finding two - dimensional variants of the gauge color code  @xcite , these schemes still , respectively , require either some three - dimensional components , or come at the expense of the threshold error rate .",
    "while gauge fixing with the gauge color code offers a elegant approach to achieving a universal gate set , the space - time quantum resource cost scales equally  @xcite with other proposals up to a constant factor , and only by use of single - shot error correction  @xcite . as such , despite the apparent advantages of these codes , current proposals for magic - state distillation  @xcite using a surface code architecture remain attractive due to their two - dimensional structure and high error threshold , which is in part due to its low - weight parity check measurements .",
    "the variety of ways of performing clifford gates fault - tolerantly  @xcite is another advantage , and one that this paper seeks to advance .",
    "the paper is organized as follows ; in sec .",
    "[ sec : prelim ] we introduce notation and review the stabilizer formalism , anyon models , the clifford group , and different methods of encoding qubits using the surface code .",
    "we also develop a diagrammatic language that we use to build correspondences between different schemes for encoding qubits . in sec .",
    "[ sctn : singlequbitgates ] we review code deformation , and show that we can braid the corners of the planar code by code deformation to perform clifford gates . in sec .",
    "[ sctn : entanglinggates ] we consider interactions between twists and holes , and show that we can use holes to perform fault - tolerant parity measurements between qubits encoded using twist defects in a measurement - only topological quantum computational scheme . in sec .",
    "[ sctn : surgery ] we illustrate a connection between lattice surgery and measurement - only topological quantum computation .",
    "finally , in sec .",
    "[ sctn : hybrids ] we introduce a new hybrid scheme of encoding qubits and discuss its advantages and drawbacks before giving some concluding remarks in sec .  [ sctn : conclusion ] .",
    "we point out that further details and alternative explanations of some aspects of this manuscript can be found in the masters project work on which it is based , see ref .",
    "in this section we review the backgorund material we use throughout the present paper including stabilizer formalism  @xcite , anyon models  @xcite , the clifford group , and different methods of encoding qubits with the surface code  @xcite .",
    "quantum states are robustly maintained in the code space of a quantum error - correcting code .",
    "we specify the code space of a stabilizer quantum error - correcting code with its stabilizer group , @xmath0 .",
    "the stabilizer group is an abelian subgroup of the pauli group , @xmath1 , with @xmath2 . up to phases",
    ", the pauli group is generated by the standard pauli matrices , @xmath3 , @xmath4 , and @xmath5 , where @xmath6 indexes which qubit of the system the operator acts on .",
    "the code space of a stabilizer code is the common @xmath7 eigenspace of all the elements of the stabilizer group @xmath8 , i.e. @xmath9 where @xmath10 are basis vectors that span the code space",
    ". stabilized states , @xmath10 , are commonly known as codewords .",
    "we act on the code space with logical operators , @xmath11 , which are distinguished from other operators with bar notation .",
    "logical operators commute with all members of the stabilizer group , but are not themselves members of the stabilizer group .",
    "the logical operators generate the logical pauli group which acts on the code space .",
    "they therefore satisfy the following properties ; @xmath12 , and @xmath13 for @xmath14 .    an important quantity to introduce that characterises stabilizer codes is the code distance , which is commonly denoted @xmath15 .",
    "the code distance is the smallest number of qubits which are required to support one non - trivial logical operator of the code . as a first order approximation",
    ", the code distance quantifies the ability of a code to tolerate noise , as it is the smallest number of qubits that must suffer an error to introduce logical errors to the encoded quantum information",
    ".    it will also be helpful to note that the action of a logical operator on the code space is invariant if the logical operator is multiplied by an element of the stabilizer group .",
    "this follows from eqn .",
    "( [ eqn : stabilizer ] ) , and the commutation relation of the elements of stabilizer group with the logical operators",
    ". this will be useful as it allows us to change , or ` clean '  @xcite , the support of logical operators , such that certain qubits of the stabilizer code do not support certain choices of logical operator .",
    "a complementary and natural way to understand schemes of topological quantum error correction is through the language of anyons .",
    "we will frequently make this comparison to elucidate the physics of the error - correcting codes we study .",
    "for detailed description of anyon models , we refer the reader to refs .",
    "@xcite and appendix  e of ref .",
    "here we briefly review two explicit anyon models that will be relevant throughout this manuscript .      the anyon model of the surface codes",
    "is known as @xmath16  @xcite .",
    "it is composed of four anyons , @xmath17 , @xmath18 , and , @xmath19 , together with the vacuum particle , @xmath20 , which denotes ` no particle ' .",
    "all anyon models include the vacuum particle .    for historical reasons , the @xmath17 and @xmath18 anyons are known as the electric and magnetic charges .",
    "these anyons are their own antiparticles , i.e. , if they are fused , which we denote by the binary operation ` @xmath21 ' , we recover the vacuum @xmath22 both @xmath17 and @xmath18 also have bosonic behaviour under exchange with respect to themselves . braiding an @xmath17 and",
    "an @xmath18 however has a non - trivial effect ; a full monodromy of an @xmath17 and an @xmath18 excitation , or vice versa , introduces a global @xmath23 phase to the system .    the @xmath19 anyon is a particle that is composed of an @xmath17 and an @xmath18 @xmath24 the non - trivial exchange behaviour of the component anyons leads causes the @xmath19 to have fermionic exchange statistics .",
    "these are fermions that are their own antiparticles , but nevertheless have distinct creation and annihilation operators .",
    "the ising anyon model  @xcite has two non - trivial anyon types , @xmath25 and @xmath19 .",
    "the particle @xmath19 , as above , is a fermion that is its own antiparticle .",
    "the equivalence between these particles will be used in this work , and so any reference to fermions refers interchangeably to both .",
    "the @xmath25 anyon is non - abelian . fusing two ising anyons , or in general",
    ", any even number of ising anyons , can result either annihilation , and produce the vacuum particle , or the fusion outcome can be one fermion .",
    "this is captured by the fusion rule @xmath26 the @xmath25 particle is also able to absorb a fermion , which is represented by the fusion rule @xmath27 the number of fermions absorbed by a pair of ising anyons can be learned by fusing them .",
    "the @xmath25 anyons are equivalent to majorana modes , and can be well described by majorana operators  @xcite .",
    "we will not require this description in this work .",
    "however , we note one important feature .",
    "this is that the majorana parity operator , which assigns a phase of @xmath28 depending on whether a pair of @xmath25 anyons will fuse to vacuum or a @xmath19 particle , is equivalent , up to a global phase , to the operator which fuses a fermion with each @xmath25 particle .",
    "these operators are also equivalent to a full monodromy of one @xmath25 particle around the other .",
    "it is these operators that are used as the logical pauli operators of qubits encoded in ising anyons .",
    "a single exchange of two ising anyons therefore implements a unitary rotation that corresponds the square root of pauli operator .",
    "such rotations are members of the clifford group , which we next discuss",
    ".      it will also be convenient to define the clifford group , @xmath29 .",
    "elements of the clifford group , @xmath30 , map elements of the pauli group onto elements of the pauli group under conjugation .",
    "it is defined @xmath31 the clifford group can be generated by two single - qubit gates , the phase gate and the hadamard gate , which , respectively , can be expressed in terms of pauli matrices such that @xmath32 and @xmath33 together with a two - qubit controlled - not gate @xmath34 the clifford group act on the pauli matrices as follows .",
    "the phase gate , or ` s - gate ' , obeys the following equations @xmath35 the hadamard gate , which is hermitian , satisfies @xmath36 and for the controlled - not gate we have @xmath37 @xmath38 @xmath39 @xmath40      the planar code  @xcite is defined on an @xmath41 square lattice with one qubit placed on each vertex of the lattice , as shown in fig .",
    "[ fig : wpm ] .",
    "this distance of the code is @xmath42 .",
    "this representation of the planar code is given in ref .",
    "@xcite , but it is easily checked  @xcite that this representation , up to local unitary operations , is equivalent to the more conventional representation of the surface code  @xcite where the qubits lie on the edges of a square lattice .    to specify the stabilizer group we bicolour the faces , @xmath43 , of the lattice black and white as in fig .",
    "[ fig : wpm ] . with this colouring",
    "we can write the two different types of stabilizer that form the stabilizer group , namely , we have the operator @xmath44 on each white face of the lattice , and the operator @xmath45 on each black face of the lattice .",
    "the set @xmath46 denotes the qubits that touch face @xmath43 .",
    "we show an example of an @xmath47 and a @xmath48 operator in figs .",
    "[ fig : wpm](a ) and  [ fig : wpm](b ) , respectively .",
    "is the tensor product of pauli - z operators extending from the top to the bottom of the lattice .",
    "( f )  the logical operator @xmath49 is the tensor product of pauli - x operators along the horizontal dashed line that extends from the left to the right of the lattice . ]    we must also define stabilizers on the boundary of the planar code .",
    "the boundary stabilizers are shown in fig .",
    "[ fig : wpm ] by adding additional faces to the boundary of the lattice .",
    "we have added black faces to the top and the bottom of the lattice , and white faces to the left and right sides of the lattice . with the addition of these extra faces ,",
    "the boundary terms are specified with the definitions given in eqns .",
    "( [ eqn : star ] ) and  ( [ eqn : plaq ] ) .",
    "we show explicit examples of boundary terms in figs .",
    "[ fig : wpm](c ) and  ( d ) .    provided the stabilizer group contains only commuting generators , we have a lot of freedom as to which types of faces we may like to add to the boundary .",
    "indeed , the choice of boundary stabilizers plays a very important role on the encoding properties of the planar code , see  @xcite . to maintain consistency with the terminology used in refs .",
    "@xcite , we call boundaries with black faces on the boundary ` rough boundaries ' and boundaries with white faces on the boundary ` smooth boundaries ' . in fig .",
    "[ fig : wpm ] we have rough boundaries on the top and bottom of the lattice , and smooth boundaries on the left and right sides of the lattice .    with the choice of boundaries shown in fig .",
    "[ fig : wpm ] , the planar code encodes one logical qubit .",
    "the logical operators are strings of pauli operators that extend between different boundaries of the same type .",
    "the logical operator @xmath50 is the tensor product of pauli - z operators that are supported along a string that extends from the top to the bottom of the lattice , between two rough boundaries .",
    "we show @xmath50 in fig .",
    "[ fig : wpm](e ) .",
    "the logical operator @xmath49 is the tensor product of pauli - x operators supported on a string that runs from the left side to the right - hand side of the lattice .",
    "the qubits that support @xmath49 lie on the thick dashed line shown in fig .",
    "[ fig : wpm](f ) . unlike @xmath50 ,",
    "the operator @xmath49 is a string that stretches between two different smooth boundaries of the lattice .",
    "it is easily seen that @xmath49 anti commutes with @xmath50 , as they are commonly supported on only one qubit of the lattice .",
    "it is worth noting that , provided the string operators commute with the stabilizer group , we are free to choose logical operators along any string on the lattice as long as the terminal boundaries of the string are not changed .",
    "this is easily seen by observing that we can manipulate the path of the strings of logical operators shown in fig .",
    "[ fig : wpm ] by multiplying them by elements of the stabilizer group .",
    "we frequently make use of this fact in discussions in later sections of the present manuscript .",
    "the logical operators of the planar code can be understood using the picture of anyonic quasi - particle excitations .",
    "indeed , as it is explained in  @xcite , string - like pauli operators acting on the codewords of the planar code can be regarded as creation operators for anyons .",
    "specifically , a string operator of pauli - z(pauli - x ) operators with end points that lie in the bulk of the lattice create pairs of electric charges ( magnetic charges ) at the end points of the strings , as we have defined in subsubsec .",
    "[ subsubsctn : z2 ] . hopping operators for @xmath17 and @xmath18",
    "excitations also correspond to string - like operators .",
    "unlike the creation and hopping operators we have just mentioned , the string - like logical operators of the planar code do not create quasi - particle excitations .",
    "this is because the string operators terminate at boundaries of the planar code where quasi - particle excitations are absorbed , or ` condensed ' .",
    "specifically , a rough(smooth ) boundary is capable of absorbing @xmath17(@xmath18 ) particles .",
    "we can therefore regard the @xmath50(@xmath49 ) logical operator as the process of creating a single @xmath17(@xmath18 ) excitation at one rough(smooth ) boundary , and subsequently transporting the particle across the lattice where it is then absorbed by the opposite rough(smooth ) boundary .",
    "the braiding statistics of the exchange of these two excitations assure the appropriate commutation relations between these logical operators .",
    "we will frequently draw on this picture to demonstrate different logical operations using the surface code .",
    "our freedom to deform logical operator strings is also elucidated in this picture , as we have argued that it is the role of logical operators to transport excitations between different boundaries .",
    "however , provided charges are transported between the appropriate boundaries , the action of the operator is independent of its path along the lattice .      ]",
    "we can increase the information storage capacity of the surface code by introducing punctures to the lattice .",
    "we show a puncture , or hole , in fig .  [",
    "fig : hole ] .",
    "the qubits inside the puncture , shown as small black points , have been disentangled from the lattice .",
    "we point out that unlike the lattice shown in fig .",
    "[ fig : wpm ] , the punctured lattice has only rough boundaries .",
    "as such , without a hole in the centre of the lattice , this lattice would encode no logical qubits . by introducing a puncture in the centre of the lattice , we are able to encode a single logical qubit on the lattice .",
    "we show the logical operators for the encoded qubit in figs .",
    "[ fig : hole](a ) and  ( b ) .",
    "the logical operator @xmath49 is the tensor product of pauli - x operators supported on a cycle of qubits that enclose the puncture .",
    "the logical operator @xmath50 is the tensor product of pauli - z operators supported along a line that connects the lattice boundary to the boundary of the puncture .",
    "we show such a line in fig .",
    "[ fig : hole](b ) . as with the planar code ,",
    "the logical operators of the punctured surface code are string - like , and as such , like the string - like logical operators of the planar code , we are free to continuously deform the path of the support of these string - like logical operators .    like the planar code",
    ", the logical operators of the punctured planar code can also be interpreted from the point of view of topological excitations . given that both the lattice boundary and the hole in the lattice have rough boundaries , they are both capable of absorbing an @xmath17  particle .",
    "therefore the logical state of the hole relates to the number of electric charges that have been passed from the lattice boundary into the hole .",
    "specifically , the parity of this number gives one two - level logical degree of freedom .",
    "the even case corresponds to vacuum due to the fusion rule @xmath51 , and the odd case correspond to an @xmath17 charge absorbed by the hole .",
    "we measure the charge parity absorbed by the hole with a measurement that encloses the hole , which is able to count the number of pairs of electric excitations that have been shared between the lattice boundary and the hole , thus giving the topological structure of the @xmath49 logical operator .",
    "indeed , this measurement is analogous to gauss law  @xcite .",
    "the distance of a code where qubits are encoded using holes depends on two quantities , the length of the boundary of a given hole , and the separation of a hole from another lattice boundary . as such , to maintain a code distance @xmath15 , all holes with a common boundary type must be separated by a distance of at least @xmath15 , and must maintain a distance of @xmath15 from the boundary of the lattice .",
    "holes must also have a boundary of length @xmath15 .",
    "as such , for the case of ` spherical ' holes , they must have a radius of @xmath52 .",
    "in general , we can consider punctures with smooth boundaries instead of rough boundaries , where smooth boundaries absorb @xmath18 particles instead of @xmath17 particles .",
    "indeed , protocols to implement quantum logic gates have been shown which involve holes with both types of boundary  @xcite .",
    "it is also worth noting the recent work of delfosse  _ et al . _",
    "@xcite where they study the encoding properties of holes which have both rough and smooth boundaries . here",
    "we need only introduce holes with rough boundaries .",
    "in what follows we will see that rough boundaries differ from smooth boundaries only by lattice defects that are introduced in the following subsection .",
    "we next consider encoding qubits using twist defects .",
    "twist defects were introduced for the surface code model by bombn in ref .",
    "other work on twist defects on the surface code is presented in refs .",
    "twist defects have also been introduced in the color code models in ref .",
    "@xcite , and from the point of view of topological quantum field theories in refs .",
    "@xcite and references therein .",
    "see also the second item in section  12 of ref .",
    "@xcite .     ]    in fig .",
    "[ fig : fourtwists ] we show four twists on a lattice which collectively encode a single qubit . on this lattice",
    "the qubits that lie along the two pink lines are removed from the lattice .",
    "we refer to these pink lines as defect lines .",
    "twist defects lie on the double plaquettes where the defect lines terminate .",
    "we show a stabilizer that lies on a twist defect in fig .",
    "[ fig : fourtwists](a ) .",
    "we also show how the weight - four stabilizers are modified along the defect line in fig .",
    "[ fig : fourtwists](b ) . in general , the stabilizers that lie on the defect lines are determined as follows ; we first replace the stabilizers that lie along defect lines with restricted stabilizers where we take the restriction  , the restriction of @xmath53 onto @xmath54 is @xmath55 . ] on the qubits that do not support defect lines .",
    "we then replace the restricted stabilizers with the products of pairs of adjacent restricted stabilizers .",
    "indeed , following this prescription gives the stabilizers shown in figs .",
    "[ fig : fourtwists](a ) and  ( b ) .",
    "we show the logical operator @xmath49 in fig .",
    "[ fig : fourtwists](c ) , and the logical operator @xmath50 is the tensor product of pauli - x operators on all the qubits that support the dashed line in fig .  [ fig : fourtwists](d ) .",
    "if we have a single uniform lattice boundary , we can see from the logical operators that to maintain a distance @xmath15 code , all twist defects must be separated by @xmath52 , see ref .",
    "@xcite .",
    "we now briefly review the properties of twists from the point of view of anyonic quasiparticles .",
    "indeed , the string operators we have studied create either a pair of electric charges or magnetic charges at the two end - points of the string when they act on codewords in the bulk of the lattice . in this sense we see that the surface code model obeys global charge parity conservation law as anyonic charges of the same type must be created in pairs .",
    "interestingly , string operators that cross a defect line create one @xmath17 excitation and one @xmath18 excitation at its end points .",
    "remarkably , it follows from this fact that this property gives twist defects the ability to absorb a dion , a fermionic quasiparticle excitation that is composed of both an @xmath17 particle and an @xmath18 particle .",
    "it was observed by bombn in ref .",
    "@xcite that this behaviour is reminiscent of ising anyons , which we reviewed in subsubsec .",
    "[ subsubsctn : ising ] .",
    "importantly , like twists , ising anyons also have the ability to absorb fermionic excitations .",
    "we can see that twist defects mimic the behaviour of ising anyons by consideration of their logical operators .",
    "indeed , the string of pauli - y operators shown in fig .",
    "[ fig : fourtwists](c ) represents a string operator that transports a fermion from one twist on the lattice to another . the operator @xmath50 on the other hand measures the fermionic charge parity that has been absorbed by the two twist defects that lie on the left of the lattice . with this",
    "we see that the physics of ising anyons is echoed by the simple stabilizer model that we consider here . later we make use of this analogy to find new logical gates by code deformation , which we discuss in the following section .      before moving onto the next section ,",
    "we finally demonstrate a correspondence between twist defects and the corners of the planar code .",
    "more precisely , by corners we mean points on the boundary of the planar code where rough boundaries meet smooth boundaries . in later sections we make use of this correspondence to perform clifford gates with the planar code using code deformations .     a schematic diagram of the planar code lattice with a rough boundary . strings of pauli - z(pauli - x ) operators are marked by red(blue ) lines , respectively . ( a )  and ( b )  respectively show @xmath47 and @xmath48 stabilizer operators .",
    "( c ) an element of the stabilizer group where a string of pauli - z operators follows a trivial path and terminates at the same rough boundary of the lattice .",
    "( d ) a defect line marked by a dashed white line with two twist defects at its end points .",
    "red strings that cross the defect line change to blue and vice versa .",
    "( e ) a stabilizer operator that encloses a single twist .",
    "the string must wind twice around the twist which changes the string from red to blue and back to red again to form a closed loop . ]    to show the correspondence between twists and corners , we will consider the planar code lattice with defect lines in different configurations , where finally the defect lines terminate at the lattice boundary .",
    "we will then show that the logical operators of these two models are equivalent .",
    "we first build a diagrammatic notation without the microscopic details of the underlying lattice .    in fig .",
    "[ fig : anyondiagram ] we show a planar code with a rough boundary that supports a single pair of twist defects . in the diagram , strings of pauli - z(pauli - x ) matrices are shown by red(blue ) strings . with this picture ,",
    "the operator @xmath47(@xmath48 ) can be regarded as a red(blue ) string that follows a trivial cycle , as shown in figs .",
    "[ fig : anyondiagram](a ) and  ( b ) , respectively .",
    "as the lattice has only a single rough boundary , the stabilizer group also contains strings of pauli - z operators that follow trivial cycles and terminate at the boundary of the lattice , as shown in fig .",
    "[ fig : anyondiagram](c ) .",
    "importantly , as the boundary is entirely rough , only red strings can terminate at the boundary .",
    "we show a defect line in fig .",
    "[ fig : anyondiagram](d ) , marked by a thick dashed white line , where two twist defects lie at its termination points . twists are shown as white crosses .",
    "we also show an example of a stabilizer operator that encloses a single twist in fig .",
    "[ fig : anyondiagram](e ) drawn as strings of pauli - x and pauli - z operators , where the string changes colour as it crosses the boundary .    having introduced a simple diagrammatic notation , we can easily demonstrate the equivalence between the corners of the planar code and twists which we summarise in fig .",
    "[ fig : cornersaretwists ] . in fig .",
    "[ fig : cornersaretwists](a ) we show a lattice that encodes one logical qubit using four twist defects .",
    "the logical operator @xmath49 is a string operator that encloses the top two twists .",
    "as previously discussed , this operator corresponds to an operator that transports a fermion between the two enclosed twists .",
    "we see this because the parallel strings are passing an @xmath17 excitation and an @xmath18 excitation between the two twists which is equivalent to passing a dion particle . the operator @xmath50 is shown by a red loop that encloses the two twists to the left of the figure .",
    "this measures the parity of fermonic charges that have been absorbed by the two enclosed twists . from the diagram",
    "we can see that the two logical operators anti commute because there is one single point where the blue segment of @xmath49 intersects the red @xmath50 loop .",
    "( c ) , thus giving the logical operator shown in the picture .",
    "( c )  we consider the lattice shown in  ( a ) and  ( b ) , except where the defect lines terminate at the boundary . in this picture",
    "the twist defects lie at the boundaries of the lattice .",
    "importantly , the logical operators are unchanged from those shown in  ( b ) .",
    "( d )  we finally show the lattice where the defect lines are drawn close to the left and right sides of the lattice .",
    "now , the logical operators are equivalent to those in fig .  [",
    "fig : wpm ] where a string of pauli - x operators runs from the left to the right of the lattice and a string of pauli - z operators runs from the top to the bottom of the lattice .",
    "[ fig : cornersaretwists ] ]    logical operators can be manipulated by multiplying them by stabilizer operators . as we have discussed",
    "stabilizer operators are strings of trivial cycles , or strings that both terminate at the same boundary . in fig .",
    "[ fig : cornersaretwists](b ) we show the logical operators of fig .  [ fig : cornersaretwists](a ) where the logical operators are deformed such that they terminate at the boundary of the lattice . as with fig .",
    "[ fig : cornersaretwists](a ) we see these two logical operators anti commute as there is still a single point where the blue segment of the @xmath49 operator intersects the red string that represents the @xmath50 operator .    indeed , the logical operators in fig .  [ fig : cornersaretwists](b ) are reminiscent of the logical operators of the planar code discussed in subsec .",
    "[ subsec : surfcode ] , where logical operators also terminate at the boundary .",
    "we next consider the same model , except where the defect lines terminate at the boundary of the lattice , such that the four twist defects of the code are located at the boundaries of the lattice .",
    "this is shown in fig .",
    "[ fig : cornersaretwists](c ) . in this picture , the logical operators are unchanged from those shown in fig .  [ fig : cornersaretwists](b ) , which , once again , are logical operators that are very similar to those of a planar code . to make this analogy completely clear",
    ", we show the same model in fig .",
    "[ fig : cornersaretwists](d ) , except where the defect lines have been drawn close to the boundary of the lattice , but where the twist defects remain in the same locations . in this picture , the logical operators are now identical to those of the planar code , where @xmath50 corresponds to moving an @xmath17 excitation from the upper boundary to the lower boundary , and @xmath49 corresponds to moving an @xmath18 excitation from the left boundary to the right boundary . in this sense",
    ", we can regard a smooth boundary as a rough boundary that has been covered by a defect line .",
    "we observe also that the points , or corners , where the rough boundary meets the smooth boundary are the locations of twist defects .",
    "we can therefore regard the corners of the planar code as equivalent to twist defects . in the following section",
    ", we will make use of this analogy to demonstrate how we can perform logical clifford gates on the planar code by code deformations that manipulate the corners of the planar code lattice as though they are twist defects .",
    "we have now introduced several different methods of encoding qubits in the surface code model . however",
    ", quantum computation requires that we also perform logical gates on encoded qubits . a well - studied method for performing fault - tolerant quantum logical operations",
    "is by use of code deformations  @xcite , where we make special measurements to manipulate the logical qubits of a quantum error - correcting code .",
    "in particular , we are going to perform code deformations to manipulate and braid the twist defects that lie at the corners of the planar code , as discussed in the previous section .",
    "given that the twist defects of the planar code are analogous to ising anyons , we can devise code deformation strategies based on known braiding gates that can be achieved using ising anyons  @xcite .",
    "the manipulation of twist defects has been discussed in the following references  @xcite . indeed , like ising anyons , twist defects can achieve the clifford group by braiding which , together with magic state distillation  @xcite , can be used to achieve universal quantum computation . in this section",
    "we begin by reviewing the theory behind code deformations .",
    "we then show explicitly how to move twists by code deformations .",
    "we finally show how to perform single - qubit clifford gates at the end of this section .      here",
    "we briefly review the concept of code deformation .",
    "this is a process by which a code defined with stabilizer group @xmath0 is mapped onto a different code defined by stabilizer group @xmath56 . with a suitable choice of code deformation we can deform logical operators such that logical rotations are made on the code space of a code .",
    "code deformation is achieved simply by measuring the elements of @xmath56 to project onto the new code .",
    "details on performing measurements using the stabilizer formalism are given in chapter  10 of ref .",
    "@xcite .",
    "we require that no stabilizers of @xmath56 measure the logical information encoded in @xmath0 to preserve encoded information .",
    "for all of the instances we consider here , we can perform sequential measurements with weight that is much smaller than the distance of the code .",
    "it then follows that we can always clean logical operators  @xcite away from the qubits that support the stabilizer measurements of @xmath57 .",
    "we therefore focus on how the stabilizer group is modified by the stabilizer measurements of @xmath56 on the code specified by @xmath0 .",
    "we consider the simple case where the generators of @xmath56 differ from @xmath0 by only a single element , @xmath58 .",
    "this is easily generalised to the case where @xmath56 differs from @xmath0 by many elements , as we can sequentially deform the code several times between many different codes .",
    "depending on the choice of @xmath56 , element @xmath58 will do one of two things ; it will either commute with all elements of @xmath59 , or it will anti commute some stabilizers of @xmath0 . in the case that @xmath58 commutes with all elements of @xmath0 , provided @xmath58 is not a logical operator , then it must follow that @xmath60 , which is a trivial deformation .",
    "we next consider the case where @xmath58 anti commutes with some elements of @xmath0 .",
    "we denote the subset of elements of @xmath0 that do not commute with @xmath58 as @xmath61 , where we denote members of the anti commuting set @xmath62 where @xmath63 and @xmath64 is the number of elements in @xmath61 . in this case , we replace elements of @xmath65 with terms of the form @xmath66 for all @xmath67",
    ". then , up to the measurement outcome @xmath68 , we project our encoded state onto the codespace of @xmath56 . in the case that @xmath69 , we project the encoded state onto the @xmath23 eigenstate of @xmath58 .",
    "if this is so then we can apply a unitary correction operator to rotate @xmath56 on the desired state .      ]",
    "we now show that we can move the corners of the planar code onto the bulk of the lattice .",
    "the sequence of measurements we choose are based on the terms in the perturbation expansion used to synthetically introduce twist defects to hamiltonian models  @xcite .    in fig .",
    "[ fig : deformingcorners](a ) we show the single - qubit pauli measurements that we perform along the pink line to move the twist into the bulk of the lattice . upon performing these measurements ,",
    "the twist defect is moved along the pink line . after performing these measurements , the qubits that lie on the pink line",
    "are projected onto a product state , and are thus disentangled from the lattice .    with a few exceptions which we show in fig .",
    "[ fig : deformingcorners ] , the stabilizers along the pink defect line of the deformed lattice are found by the same prescription given in subsec .",
    "[ subsctn : planarcodewithtwists ] .",
    "twist defects are weight - five stabilizers at the terminal point of the defect line , and stabilizers along the straight segments of the defect line are weight - four operators that straddle the line .",
    "we also consider how the stabilizers are modified in the locations where the defect line moves around a corner . in figs .",
    "[ fig : deformingcorners](b ) and  ( c ) we show some explicit examples of one weight - three stabilizer , and one weight - five stabilizer where the twist defect turns around a corner on the lattice .",
    "we also show how the stabilizers are modified close to the corner where the twist defect originated in figs .",
    "[ fig : deformingcorners](d ) and  ( e ) . in fig .",
    "[ fig : deformingcorners](d ) we show a weight - three stabilizer on the boundary of the lattice where the twist defect began , and in fig .  [ fig : deformingcorners](e ) we show two qubits that have been projected into the product state , and are thus removed from the code .       string operator in red which ` snakes ' between the twist defects at the centre of the lattice .",
    "( b )  we deform the position of one twist defect into the bottom - right corner of the lattice .",
    "the logical operator is deformed over the defect line such that it is not supported on any of the qubits where code deformation measurements which move the lowest twist defect from its position in  ( a ) to its position in  ( b ) .",
    "this deformation moves the logical operator over a defect line , and as such changes the colour of the string .",
    "we also multiply the logical operator by a stabilizer that extends from the left - hand side of the lattice to the bottom of the lattice , which is also shown in the figure . ( c )  a small deformation of the logical operator shown in  ( b ) gives the pictured logical operator .",
    "( d )  multiplying the logical operator shown in  ( c ) by a stabilizer that encloses the single twist defect lying at the centre of the lattice deforms the logical operator out of the path of the twist , enabling us to move the twist defect at the centre of the lattice to the bottom left corner of the lattice , thus completing the procedure .",
    "[ fig : performings ] ]    having demonstrated that it is possible to move the corners of planar codes into the bulk of the lattice and braid them like twist defects , we now show that we can complete the generating set of the clifford group using twist defects . in terms of scope and resource usage ,",
    "our scheme can be compared with protocols given in ref .",
    "@xcite where hadamard gates are performed on qubits encoded with pairs of holes .    in fig .",
    "[ fig : performings ] we show that a deformation that exchanges two twists on two adjacent corners maps between different pauli matrices .",
    "specifically , we show that exchanging the two twists at the bottom of the lattice will exchange logical operators @xmath70 and @xmath71 , and where @xmath49 remains invariant .",
    "we work through this manipulation step by step by manipulating the support of the logical operators shown in subsec .",
    "[ subsctn : twistsonboundary ] .",
    "the strategy we will follow will be to deform the logical operator away from the path of the twist defects .",
    "note that , up to phases , the effect of this exchange is equivalent to the braiding of two ising anyons .",
    "as noted in subsection [ subsec : anyons ] , exchanging two ising anyons is equivalent to the square root of the @xmath49 operation associated with these twists .",
    "we first deform the two twists on the corners of the lower boundary into the centre of the lattice , as shown in fig .",
    "[ fig : performings](a ) . upon doing this",
    "we deform the logical operator @xmath50 away from the positions of the twists by multiplying the logical operator by elements of the stabilizer group such that none of the qubits that are measured during the code deformation support the logical operator .",
    "the logical @xmath50 operator is shown in red in fig .",
    "[ fig : performings](a ) snaking between the twists in the centre of the lattice .",
    "next , we continue to move the twist defect that began in the bottom - left corner of the lattice into the bottom - right corner of the lattice .",
    "we therefore continue to deform the logical operator such that one end point terminates on the right - hand side of the lattice .",
    "this forces the logical operator to cross a defect line that has already been drawn on the lattice , which changes its string type from red to blue , as we show in fig .",
    "[ fig : performings](b ) .",
    "we also multiply the logical operator by an element of the stabilizer group which extends from the left boundary to the lower boundary of the lattice . introducing this stabilizer operator at this point will help us see that we can deform the logical operator out of the trajectory of the twist defect that lies in the centre of the code as it moves towards the bottom - corner of the lattice .    in fig .",
    "[ fig : performings](c ) , we show a small deformation of the logical operator shown in fig .  [",
    "fig : performings](b ) , where now we have the product of a string operator running from the top to the bottom of the lattice , and a string that runs horizontally across the lattice that loops around the one twist defect that remains in the bulk of the lattice .",
    "to deform the logical string shown in fig .",
    "[ fig : performings](c ) we multiply the logical operator by a stabilizer that loops around a single twist , as in fig .  [ fig : anyondiagram](e ) , to deform the horizontal string over the central twist .",
    "this allows us to move the central twist defect into the bottom - left corner of the lattice without performing any code deformation measurements over the support of the logical operator . then , recognising that the two parallel defect lines that run along the bottom edge of the lattice are equivalent to a boundary where there is no defect line , we recover the lattice shown in fig .",
    "[ fig : cornersaretwists](d ) .",
    "we finally look at the action of the deformation on the @xmath49 operator .",
    "one can readily check that this logical operator is invariant under the presented transformation , as this logical operator can be supported on the qubits on the lattice that are never acted upon by non - trivial measurements under the code deformation procedure , thus showing the promised action of this code deformation procedure .    to complete the clifford group",
    ", one can also check using a similar argument that exchanging the two twists at the left hand side of the lattice will map the pauli operators such that @xmath72 , @xmath73 , and will leave the operator @xmath74 unchanged .",
    "now , if we denote the exchange of the two twists at the bottom(left - hand side ) of the lattice as @xmath75 ( @xmath76 ) , then , up to pauli - rotations , we have the single - qubit logical phase gate @xmath77 and the logical hadamard gate , @xmath78 such that @xmath79 , and @xmath80 which generate the single - qubit gates of the clifford group .",
    "given that we can achieve logical pauli - matrices either via transversal single - qubit pauli rotations , or , more simply , by updating the pauli - frame  @xcite , we recover a fault - tolerant implementation of the clifford group with code deformation using the planar code .",
    "we can perform both twist exchange operations without reducing the distance beyond a small constant value .",
    "figure shows a distance @xmath81 lattice .",
    "( a )  and ( b )  two twist defects that have been deformed into the centre of the lattice .",
    "( c )  the single - qubit measurements we make to move the twist along the bottom of the lattice .",
    "( d )  a weight - nine logical operator at a moment where the two twists pass each other . the black dashed and dotted lines show the support of conjugate weight - nine logical operators that we find to be minimal in weight .",
    "[ fig : diamondlattice ] ]    upon performing the suggested braiding operations with the square lattice introduced in the previous section we modify the code distance .",
    "recalling that the distance of a logical qubit encoded via twist defects depends on the separation between all the twists on the lattice , it is obvious that we must deform the locations of the twist defects such that they all maintain a large separation . using the lattice shown in fig .",
    "[ fig : wpm ] , we can find paths that the twists follow while undergoing this exchange such that all the twist defects maintain a distance of at least @xmath82 from one another on the considered lattice geometry .",
    "as such , the code distance is @xmath83 as we perform the presented logical operations .",
    "interestingly , we also find that the code with a rotated geometry , as is shown in fig .",
    "[ fig : diamondlattice ] , that we can exchange the corners without more than a small constant loss in code distance .",
    "this comes at the expense of using @xmath84 qubits to achieve a code of distance @xmath15 , which is in contrast to the square geometry we have already introduced which requires only @xmath85 qubits .",
    "it is interesting then that the resource demands of both lattice geometries are similar when we consider performing logical gates by braiding the corners of the lattice .      by regarding the corners of the planar code as twist defects , we have seen that we can braid them to realise a set of gates that generates the single - qubit elements of the clifford group .",
    "we can extend this idea by adding more corners to the planar code , such that it encodes more qubits .",
    "then , we can braid the corners of this extended code to implement entangling gates , as we describe in this subsection .",
    "we believe that the entangling operation we present here may provide a relatively simple procedure to entangle two fault - tolerant qubits in the laboratory using near - future technology .",
    "we look at the example shown in fig .",
    "[ fig : doublediamond ] which encodes two logical qubits which we index qubit @xmath20 and qubit @xmath86 . in the picture",
    "we show a planar code with six twist defects lying on the boundary of the surface code .",
    "the two twist defects at the left of the figure and the twist defect at the bottom centre of the lattice support the logical qubit @xmath20 , and the other three twist defects support qubit @xmath86 .",
    "the logical operators , @xmath87 and @xmath88 , are shown in the figure .",
    "as in the previous subsection , we can generate the single - qubit clifford operations by exchanging the twist defects of a respective qubit .",
    "additionally , we can also perform an entangling operation between the two qubits by exchanging the two twists in the centre of the lattice .",
    "since the entire code contains net anyonic vacuum , for any state within the stabilizer space the net occupancy of the leftmost and rightmost pairs must be the same as that of the central pair .",
    "as such , the central pair represents @xmath89 . consider exchanging these two twists along the dark grey arrows shown in fig .",
    "[ fig : doublediamond ] that are marked with a letter @xmath17 .",
    "explicitly , we find that under the exchange of the central two twists gives rise to the transformation @xmath90 @xmath91 which can be shown using methods similar to those used in subsec .",
    "[ subsec : anyons ] .",
    "this gate is equivalent to a controlled - not gate up to local clifford rotations .",
    "remarkably we can perform both the single - qubit operations , and the entangling gate , without decreasing the distance of the code by using an @xmath92 lattice with square geometry as shown in fig .",
    "[ fig : diamondlattice ] , where we have @xmath93 physical qubits describing two logical qubits with a distance @xmath52 code . as such ,",
    "we believe , given the recent surge in progress in experimental quantum error correction  @xcite , that this example provides a relatively simple experiment to demonstrate the full clifford group that may be implemented in the near future .",
    "note also that by exchanging the leftmost and middle twists using the light grey arrows marked @xmath94 , and doing similar for the right hand side , we can achieve the direct exchange of any twist pair in the center without loss of distance .",
    "the equivalent gates can be achieved without using such rotations , but it could yield superior results in certain cases by keeping the twists slighly more well separated .     and @xmath88 which act on qubit @xmath20 and qubit @xmath86 are shown .",
    "exchanging the two central qubits along the trajectories shown by the dark grey arrows which are marked by @xmath17 entangle the two logical qubits .",
    "this exchange can be performed without decreasing the code distance beyond a small constant amount on an @xmath95 lattice with the square geometry we show in fig .  [",
    "fig : wpm ] .",
    "[ fig : doublediamond ] ]",
    "in addition to single - qubit elements of the clifford group , it is also important to have fault - tolerant schemes that entangle logical qubits . it is known that we can perform entangling operations using two - qubit non - destructive parity measurements  @xcite .",
    "one method of performing a two - qubit parity measurement non - destructively is to prepare a third ancillary qubit which is then entangled to the two qubits we wish to perform a parity measurement over , and then measure the ancilla qubit . in this section",
    "we elaborate upon one of the fault - tolerant entangling schemes in ref .",
    "@xcite which performs a controlled - not gate between two qubits that are encoded using quadruples of twists using a third ancillary logical qubit .",
    "we first show in detail that we can perform a controlled - not gate between a logical qubit encoded to a hole and a logical qubit encoded in over four twist defects by code deformations .",
    "we can then use this entangling gate to perform parity measurements between qubits encoded to twists by performing entangling gates between logical qubits and the ancillary qubit encoded to a pair of holes , and subsequently measuring the ancilla qubit .",
    "we use this entangling operation to perform a controlled - not gate between qubits encoded with twist defects .",
    "we point out that this scheme is much of a likeness to a measurement - only topological quantum computation scheme  @xcite presented by bravyi in ref .",
    "@xcite .       the code deformation scheme to entangle a qubit encoded in a pair of holes to a qubit encoded over four twists .",
    "at the top of the figure we show the logical operators for a quadruple twist qubit encoding , and at the bottom of the figure we show the logical operators for a hole - pair qubit encoding .",
    "we present a scheme to perform a controlled - not gate where the qubit encoded to the twists on the lattice is the control qubit and the qubit encoded using holes is the target qubit . the black dashed line shows the trajectory the hole in the middle of the figure must follow to complete a controlled - not gate between these qubits . ]    we consider the setup shown in fig .",
    "[ fig : onetwistandoneholequbit ] . in the picture",
    "we show two qubits , one encoded over four twists on the lattice , and the other encoded using two punctures . we will call a qubit encoded to four twists the quadruple twist encoding , and a qubit encoded using two punctures as the hole - pair encoding .",
    "we show that deforming one hole along a path that encloses two twists , whose trajectory we show with a dashed line in the figure , will execute a controlled - not gate .",
    "we show the action of the braid operation by demonstrating that tthe logical operators shown in fig .",
    "[ fig : onetwistandoneholequbit ] satisfy the conditions given in the eqns .",
    "( [ eqn : cnot ] )",
    ".    we will not elaborate in detail the sequence of code deformation measurements we perform to move holes , as this has been described in detail in , for instance , refs .",
    "@xcite . for",
    "now , it is enough to understand that holes are moved by first increasing their size along some suitable direction , and then decreasing their size again , such that the hole is displaced along their path of motion .",
    "more specifically , we increase the size of a hole with a rough(smooth ) boundary by measuring the physical qubits of the lattice with single - qubit paui - z(pauli - x ) close to the boundary of the puncture . as such ,",
    "the qubits in the centre of a hole with a rough(smooth ) boundary are measured onto an eigenstate of the pauli - z(pauli - x ) matrix , see fig .",
    "[ fig : hole](c ) . to decrease the size of the hole , we measure stabilizers at the boundary of the puncture",
    "importantly , as we move the hole , we will not change the topology of the puncture while performing these measurements .",
    "we can continually repeat this prescription to transport a hole along the different trajectories described below .",
    "the deformation of the @xmath96 operator under the fault - tolerant entangling operation .",
    "( a ) the logical operator that terminates at the hole moves with the hole , and is thus threaded between the twists .",
    "we also point out that the boundary of the hole changes from a rough boundary to a smooth boundary as it is passed across the defect line . as such",
    ", we draw a white dashed line around the puncture .",
    "( b ) upon moving the puncture back to its initial position we see that we have wrapped the logical string operator around the lower two twists shown in the figure .",
    "one can check that the deformed logical operator is equivalent to @xmath97 , as they are shown in fig .",
    "[ fig : onetwistandoneholequbit ] . ]    having discussed how holes are moved around the lattice , we next show that performing the braid shown in fig .  [",
    "fig : onetwistandoneholequbit ] will perform a controlled - not gate .",
    "we first show that @xmath98 .",
    "this is shown diagrammatically in fig .",
    "[ fig : ztozz ] .",
    "we consider the transformation of the @xmath96 that is shown in fig .",
    "[ fig : onetwistandoneholequbit ] .",
    "as the hole moves , the logical operator stretches to follow the hole .",
    "this causes the logical operator to thread between the twists , as we show in fig .",
    "[ fig : ztozz](a ) .",
    "we note that as the hole passes across a defect line it changes its boundary type such that it now absorbs pauli - x string operators instead of pauli - z string operators . once the deformation procedure is completed and the hole is returned to its initial position , the logical operator is deformed around the lower two twists on the lattice , as we show in ref .",
    "[ fig : ztozz](b ) , which one can easily see is equivalent to @xmath99 as depicted in fig .",
    "[ fig : onetwistandoneholequbit ] .",
    "we next consider the evolution of @xmath100 as the hole is moved around the lattice .",
    "the operator @xmath100 is a string of pauli - z operators that wrap around the two twists shown to the right of fig .",
    "[ fig : onetwistandoneholequbit ] .",
    "while the hole has a rough boundary , it can terminate pauli - z strings , and as such passes transparently through the logical operator .",
    "however , once the puncture passes over the defect line , the boundary changes from rough to smooth , and as such the pauli - z string can no longer terminate on the hole , and must thus deform around the hole , as we see in fig .",
    "[ fig : xtoxx](a ) .",
    "we continue to move the hole around its prescribed trajectory to its initial position , deforming the logical operator further , such that we finally obtain the logical operator shown in fig .",
    "[ fig : xtoxx](b ) .",
    "it is easily checked that this can be deformed by stabilizer manipulations to the logical operator @xmath101 as drawn in fig .",
    "[ fig : onetwistandoneholequbit ] .",
    "finally , it is readily checked that the other two trivial relations , namely that @xmath102 , and @xmath103 , also hold under the code deformation scheme . with this , we show that the proposed braid completes a controlled - not gate between the two qubits shown in fig .",
    "[ fig : onetwistandoneholequbit ] .",
    "we remark that , provided the holes maintain a width of @xmath104 and a separation @xmath52 , and the twists are mutually separated by distance @xmath15 , then this operation is completed without reducing the distance of the code below @xmath15 .",
    "one can also show that we achieve a controlled - phase gate between the hole qubit and the qubit encoded to the quadruple of twists by deforming the hole around the two twists at the left of the diagram .",
    "we leave this as an exercise for the reader .",
    "note that , once again , the effect of the braiding can be interpreted in terms of the anyons of @xmath16 .",
    "given that a hole can support an electric excitation , and since two twists correspond to a single fermionic mode , which may fuse either to vacuum or to a @xmath19 excitation , the twists can be ignored and the braiding around the mode alone can be considered .",
    "the only instance in which a non - trivial braiding occurs is when both the hole and the fermionic mode are occupied by a non - trivial excitation . in this case",
    "the @xmath17 anyon braids around the @xmath19 excitation , which yields a @xmath23 phase , and hence we observe the application of a controlled operation .    as an aside , it may be interesting to reinterpret the proposed entangling operation by code deformation , followed by a logical measurement to teleport logical information between logical qubits as a gauge - fixing operation  @xcite .",
    "specifically , this teleportation fault - tolerantly moves logical information between two different schemes of encoding .",
    "if we can regard the two logical qubits shown in fig .",
    "[ fig : onetwistandoneholequbit ] as one logical qubit , and a second gauge qubit , then suitable preparation , or gauge - fixing , of the gauge qubit , followed by the entangling operation that is achieved by code deformation , and subsequent measurement of the logical qubit will teleport information from the logical qubit to the gauge qubit .",
    "after the operation is completed , the qubit that originally supported the logical information is now a gauge qubit , and the gauge qubit maintains the logical information , and as such , logical information has been switched between two different codes .    to understand this code deformation operation as some special case of gauge fixing , we can interpret the code as the hole is braided to deform the logical operator as some intermediate code , where the qubits that are non - trivially measured to deform the puncture as elements of the gauge group . as before ,",
    "the measurements we make to deform the hole can be regarded as a series of gauge - fixing operations . finally , the measurement that is made to teleport logical information between the two codes after the entangling operation can be thought of as a third gauge fixing operation that completes the transfer of logical information .",
    "it maybe be interesting code consider this example of code switching to help us shed light on the limitations , and the potential applications of gauge fixing .",
    "we discuss this in more detail in subsec .",
    "[ subsctn : hybridqubits ] .",
    "the transformation @xmath100 onto @xmath101 under the code deformation scheme .",
    "( a ) shows how @xmath100 is deformed around the hole when the hole lies in between the four twists .",
    "( b ) once the hole has been deformed around the two lower twists of the lattice , and is returned to its initial position , the logical operator @xmath100 is deformed onto a string operator that is equivalent up to stabilizer multiplication to the logical operator @xmath101 , as we show in fig .",
    "[ fig : onetwistandoneholequbit ] . ]      having shown that we can perform a controlled - not operation between a quadruple - twist encoded qubit , and a hole - pair qubit , we can now use a hole - pair qubit as an ancilla qubit to perform a parity measurement between two quadruple - twist qubits . specifically",
    ", we take the ancilla qubit and perform entangling operations between both of the qubits involved in the parity measurement , and subsequently measure the ancilla qubit .",
    "as we have already seen , we entangle the ancilla qubit to a logical qubit encoded to four twists by braiding the hole around two of the twists that encode the qubit .",
    "it follows from this that , to perform a parity measurement between two logical qubits encoded to a quadruple of twists , we must braid a hole of an encoded ancillary hole pair around two of the twists of each qubit , and then measure the qubit encoded to the two holes by moving the two holes together . given the ability to perform parity measurements , we can perform a controlled - not operation between qubits encoded in quadruples of twists by measurement given an additional ancillary twist - quadruple qubit .",
    "we describe this procedure below .     executing the two qubit parity measurements we need to perform a controlled - not gate .",
    "qubits are encoded in quadruples of twists , where the different logical qubits , the control , target , and ancilla , are labeled in the centre of each twist quadruple .",
    "we measure @xmath105 by braiding a single hole of a hole pair qubit around two twists of the control qubit and two twists of the ancilla qubit , as shown in the figure . upon completing this deformation , measuring the logical data encoded in the hole pair",
    "reveals the outcome of the parity measurement .",
    "measuring @xmath106 completes the controlled - not gate , up to a pauli correction .",
    "we also show the @xmath107 operator we must measure .",
    "this is again achieved by braiding one hole of a hole - pair which is prepared in @xmath49 around the loop followed by the @xmath108 operator . ]    in fig .",
    "[ fig : twistcnot ] we show how to perform a controlled - not gate between twist qubits using parity measurements .",
    "having prepared the ancilla qubit in the @xmath7 eigenstate of @xmath109 , we then measure @xmath105 , followed by @xmath107 before measuring the ancilla qubit in the computational basis , thus projecting it onto an eigenstate of @xmath106 .",
    "each of the three qubits in fig .",
    "[ fig : twistcnot ] ; the control , the ancilla and the target qubit are labeled in the centre of each twist quadruple qubit .",
    "we use an encoding where the logical operator @xmath110(@xmath111 ) is a closed loop enclosing two vertically(horizontally ) separated twists of each quadruple , as fig .",
    "[ fig : cornersaretwists](a ) for @xmath112 .",
    "we remark also that with the chosen encoding , the total anyonic charge of a given quadruple qubit is vacuum .",
    "it follows from this that the stabilizer group contains a closed loop of pauli - x and pauli - z operators that encloses all four twists of each quadruple .",
    "a consequence of this is that it does not matter which pair of vertically(horizontally ) aligned twists the @xmath110(@xmath111 ) enclose ; both are equivalent up to multiplication by stabilizer group elements , and thus have the same action on the code space .    given these facts , together with the discussion earlier in this section where we show that we can entangle a qubit encoded to a pair of holes to a qubit encoded over a quadruple of twists",
    ", we can easily show how to perform a fault - tolerant controlled - not gate by parity measurements .",
    "firstly , to perform @xmath105 we prepare a pair of holes in the @xmath7 eigenvalue eigenstate of logical operator @xmath113 , where we have used a lower - case index to indicate this is the logical qubit encoded by the hole pair .",
    "next , knowing that braiding one of the two holes of the hole pair around two of the vertically aligned twists of a quadruple qubit performs a controlled - phase gate , it follows that braiding a hole around two of the vertically aligned qubits of the ancilla qubit and then two of the vertically aligned qubits of the control qubit , and then returning the hole to its initial position will perform a controlled - phase gate between the hole qubit and the ancilla qubit , and a controlled - phase gate between the hole qubit and the logical control qubit .",
    "finally , measuring the hole - pair qubit in the basis of eigenstates of @xmath113 completes the @xmath114 measurement . in the bottom right - hand side of fig .",
    "[ fig : twistcnot ] we show how the @xmath113 logical operator is deformed into a logical operator which is equivalent up to stabilizers to the logical operator @xmath115 .",
    "finally , measuring @xmath113 returns the value of the fault - tolerant non - destructive parity measurement .",
    "this measurement is completed by moving the two holes of the hole pair back together , as we indicate by the black - dashed arrow in fig .",
    "[ fig : twistcnot ] .",
    "we must also perform a @xmath107 gate to execute the fault - tolerant controlled - not gate .",
    "this high - weight logical operator is also shown in fig .",
    "[ fig : twistcnot ] , where the logical operator is a string of pauli operators that enclose two of the horizontally aligned twists of the ancilla qubit and two of the horizontally aligned qubits of the target qubit . to measure this logical operator fault - tolerantly , once again , we prepare an additional logical qubit using a pair of holes close to both the ancilla qubit and the target qubit in the @xmath7 eigenstate of @xmath113 .",
    "we then deform one of the holes of the pair around two of the horizontally aligned qubits of both the ancilla qubit and the target qubit .",
    "this deformation effectively performs a controlled - not gate between the hole - pair qubit and the ancilla qubit , and a controlled - not gate between the hole - pair qubit and the target qubit . once again , measuring the hole - pair qubit in the basis of eigenstates of the @xmath113 operator completes the @xmath107 parity measurement .    finally , we perform the fault - tolerant @xmath106 measurement by producing a hole - pair qubit in an eigenstate of @xmath113 , performing a controlled - phase gate as we have already described , and then measuring @xmath113 . the outcome of this measurement determines the pauli correction we must apply to complete the measurement - only controlled - not gate . together with the methods we have outlined in subsec .",
    "[ subsctn : singlequbitgates ] , we can generate all of the gates of the clifford group . alongside noisy processes such as magic state distillation  @xcite we can use the clifford group to perform universal quantum computation using our scheme .",
    "and @xmath116 measurements we need to perform lattice surgery in red and blue respectively .",
    "we also show in pale colours the qubits used in the measurement - only scheme above that are not required in the lattice surgery scheme . from this perspective",
    ", we see that lattice surgery is a measurement - only topological quantum computation scheme with a significant reduction in resource costs , as we are able to perform the required parity measurements with only @xmath117 ancillary physical qubits , which is in contrast to @xmath118 qubits if we maintain all of the twist defects on the same lattice .",
    "[ fig : latticesurgery ] ]    finally , with the observation that the corners of the planar code can be regarded as majorana modes , it is interesting to recognise that lattice surgery  @xcite is reminiscent of the measurement - only entangling gate scheme that we discuss in subsec .",
    "[ subsctn : entanglinggate ] . in fig .",
    "[ fig : latticesurgery ] we show how an entangling gate is performed between logical qubits encoded to planar codes via lattice surgery .",
    "the figure depicts three planar codes , an ancilla qubit , a control qubit and a target qubit , together with the @xmath114 operator and the @xmath107 operator shown in red and blue , respectively , that are used to perform entangling gates via lattice surgery  @xcite .",
    "the figure also shows the additional qubits of the lattice used in the original measurement - only topological quantum - computation scheme that we have discussed above .",
    "the qubits used in the scheme above that are not required in lattice surgery are shown in pale colours .",
    "instead , lattice surgery uses only @xmath117 qubits to perform two - qubit parity measurements .",
    "this is in contrast to the measurement - only scheme discussed above where @xmath118 qubits are required in between logical qubits encoded to twist quadruples on the lattice in order to maintain the distance of the code .",
    "details on performing fault - tolerant logical parity measurements by lattice surgery are given in refs .",
    "@xcite .    following this observation",
    ", it may also be interesting to explore this picture further to discover new fault - tolerant schemes for quantum computation with low resource demands using other more exotic topological models  @xcite .",
    "for instance , one might also consider reinterpreting lattice surgery with the color code from the point of view of twist defects .",
    "lattice surgery and twist defects have been considered for the color code in refs .",
    "@xcite and  @xcite , respectively .",
    "]    having considered several different fault - tolerant schemes for encoding and manipulating quantum information , we finally introduce a new method of encoding logical qubits that makes use of both punctures and twist defects .",
    "we call qubits encoded in this fashion hybrid qubits . entangling operations can be achieved without additional ancilla qubits , and we can perform one non - trivial single - qubit element of the clifford group .",
    "instead , we need only braid holes between adjacent hybrid qubits .",
    "more details on hybrid qubits are found in ref .",
    "@xcite .",
    "we show a hybrid qubit in fig .",
    "[ fig : hybridqubit ] , together with its logical operators .",
    "the figure shows two twist defects at the terminal points of a single defect line , together with one hole with a rough boundary , and a second hole with a smooth boundary .",
    "the logical operator @xmath50 extends from one hole , around a single twist defect and terminates at the other hole .",
    "the logical operator must follow this trajectory because the string must cross the defect line such that it can terminate at both of the punctures of the qubit .",
    "the logical operator @xmath49 is a string that forms a loop which encloses a single puncture of the hybrid qubit , as seen in the figure . to achieve code distance @xmath15",
    ", the two holes must each have a circumference @xmath119 , the two twist defects must be separated from each other by distance @xmath52 , and the both defects must be separated from the two holes by a distance @xmath120 .",
    "we entangle pairs of hybrid qubits by exchanging the smooth hole of one hybrid qubit with the rough hole of the second hybrid qubit",
    ". we can also perform the single - qubit clifford operation @xmath75 by braiding the two holes of a hybrid qubit , or by exchanging the two twist defects .",
    "it is interesting that we can combine punctures and dislocation lines to encode qubits .",
    "such a combination could potentially be used to discover better encoding rates of logical qubits to physical qubits than those currently known .",
    "we leave such a calculation to future work .",
    "similar work in this direction is given in ref .",
    "however , finding the optimal rate for encoding qubits remains an open problem . in what follows",
    "we describe how to fault - tolerantly convert between different encodings that may allow us to exploit the benefits of each qubit type .      we have now identified and discussed three distinct methods of encoding logical qubits in the surface code , namely by hole pairs , twist quadruples , and with hybrid qubits ; all of which have distinct capabilities of performing logical operations .",
    "given their complementary properties , it is interesting to see that we can fault - tolerantly switch between these different encodings .",
    "we have already outlined how we can switch between a hole - pair qubit and a twist - quadruple qubit in subsec .",
    "[ subsctn : enganglingtwistsandholes ] . in what follows we briefly describe how to switch between a hybrid encoding , and the other two encodings , thus providing a direct path to switch between any two of the three encodings .",
    "we remark that the switching procedures we give can be understood naturally in the anyonic picture , as they are simply transferring the anyons from one occupational mode to another without allowing them to be measured .",
    "we also point out that this idea of code switching is reminiscent of the ideas presented in ref .",
    "@xcite , where code switching is used to complete a universal gate set with parity measurements for a particular non - abelian anyon model .",
    "we first consider transferring a logical qubit from a hybrid qubit to a twist qubit .",
    "to do so , we first prepare a second pair of twist defects some distance at least @xmath121 from the holes in the hybrid qubit , and a distance at least @xmath119 from the two twist defects of the hybrid qubit .",
    "then , one of the two holes , say the hole with a smooth boundary of the hybrid qubit is braided around one of the two new twist defects by code deformation , and then returned to its initial position .",
    "the braid operation moves the hole across a defect line and thus changes the boundary type of the hole .    after completing the braid",
    ", we can measure a string of pauli - z operators that terminates at the boundaries of the two distinct holes , which maps the logical qubit onto a logical encoding of the four twists that now remain on the lattice , up to some pauli correction .",
    "the pauli correction we must apply is determined by the outcome of the string operator measurement .",
    "the string - operator measurement can be performed fault - tolerantly by moving the two holes together to form a single hole .",
    "the holes can subsequently be closed , leaving a single logical qubit encoded over four twists on the lattice , thus completing the code switching operation .",
    "we can also map from a twist - quadruple qubit to onto a hybrid qubit . to do so",
    ", we prepare a pair of holes on the lattice a distance @xmath121 away from the twist defects .",
    "then , we braid one of the two holes around one of the twist defects of the twist - quadruple qubit and return the hole to its original position .",
    "finally we measure a loop operator that encloses two twists , including the one twist that was braided with the hole , to teleport the encoded logical information onto a hybrid qubit up to a pauli correction which is determined by the outcome of the loop measurement .",
    "remaining on the lattice is a hybrid qubit which is made up of two holes on the lattice , and two twist defects that were not enclosed by the loop operator measurement .",
    "the other two twists that remain on the lattice can be removed by code deformation .",
    "finally , to map between a hybrid qubit and a hole - pair qubit , we simply braid the hole with a smooth boundary of the hybrid qubit around one of the two twist defects of the hybrid qubit which transforms the boundary type of the braided hole .",
    "we are then free to remove the twists from the lattice by code deformation .",
    "the logical information is preserved on the lattice encoded by the pair of holes of the lattice .",
    "the reverse operation can be performed , such that a hole - pair qubit is mapped onto a hybrid qubit by preparing pair of holes on the lattice , and then braiding one of the qubits of the hole pair around one of the new twist defects .",
    "the two twist defects , and the two holes now compose a hybrid qubit describing the logical information that was initially encoded by the hole - pair qubit .    given that the three different encodings of logical qubits on the surface code all have complementary properties , it is interesting to find the most resource efficient method of encoding and manipulating logical qubits . to remind the reader",
    ", the twist qubit can generate all of the single - qubit clifford operations by braiding , but requires a logical ancilla qubit to perform entangling gates using parity measurements , the double code of subsec .",
    "[ subsec : doublediamond ] being a notable exception .",
    "in contrast , hole - pair qubits can be entangled without the use of an ancilla qubit , but do not achieve single - qubit clifford gates by braiding .",
    "hybrid qubits fall in the middle ground of these two examples , as they can be directly entangled without ancilla , and can perform a subset of single - qubit clifford rotations . given that we are also capable of efficiently switching between these different types of qubits",
    ", it may be interesting to try to discover more efficient computational schemes in space - time resource costs using code switching .",
    "we also mention again that it may be an interesting direction of study to reinterpret the examples of code deformation gauge - fixing scheme from a more fundamental point of view .",
    "to summarise , we have unified several methods of encoding and manipulating logical qubits with the surface code . in particular , we have shown an equivalence between twist defects and the corners of the planar code . using this equivalence , and the correspondence between twist defects and ising anyons ,",
    "we have demonstrated new code deformation schemes that implement the clifford group using the planar code architecture .",
    "we have also built on the analogy between the corners of the planar code , twists and ising anyons to show that lattice surgery fits into the more conventional picture of measurement - only topological quantum computation .",
    "we suggest that this observation may be extended to other topological phases with boundaries to develop other low - overhead fault - tolerant quantum computational schemes .",
    "we also introduce a new logical encoding that makes use of both twist defects and punctures .",
    "we argue that our hybridised encoding may allow us to find new encoding schemes with a space - time resource cost when the execution of logical gates is considered . to interrogate our scheme further",
    ", we should examine how the scheme behaves at the circuit level under a more realistic noise model as gates are performed .",
    "we leave such an analysis to future work",
    ". it might also be interesting to adapt the schemes we develop here for use in a fault - tolerant measurement - based scheme  @xcite for quantum computation  @xcite .",
    "such an extension may make some of the present ideas experimentally amenable to a linear optical architecture  @xcite .",
    "the authors acknowledge j. auger , h. bombn , m. kastoryano , d. loss , j. pachos and t. stace for helpful and encouraging conversations , and we thank c. brell for discussions on adapting our proposal to a fault - tolerant measurement - based scheme .",
    "furthermore , we are particularly grateful to b. terhal for an enlightening discussions on code deformation .",
    "we also extend our gratitude to s. bravyi and n. delfosse for comments on earlier drafts of the manuscript which have helped us improve the clarity of our presentation .",
    "bjb is supported by the villum foundation .",
    "jrw is supported by the nccr qsit .",
    "msk acknowledges the hospitality of the university of leeds , where part of this work was completed .",
    "80ifxundefined [ 1 ] ifx#1 ifnum [ 1 ] # 1firstoftwo secondoftwo ifx [ 1 ] # 1firstoftwo secondoftwo `` `` # 1''''@noop [ 0]secondoftwosanitize@url [ 0 ]",
    " + 12$12  & 12#1212_12%12@startlink[1]@endlink[0]@bib@innerbibempty @noop * * ,   ( ) @noop * * ,   ( )  and ,  eds .",
    ", @noop _ _ ( ,  ) @noop * * ,   ( ) @noop * * ,   ( ) http://www.theory.caltech.edu/people/preskill/ph229/#lecture [ `` , ''  ] ( ) @noop * * ,   ( ) @noop _ _  ( ,  ) @noop * * , ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop ( ) @noop * * ,   ( ) @noop * * , ( ) @noop * * , ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * , ( ) @noop ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * , ( ) @noop * * ,   ( ) @noop * * , ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop ( ) @noop ( ) @noop * * ,   ( ) @noop * * ,   ( ) http://bit.ly/2ccxj1z [ `` ''  ] ( ) _ _ ,  @noop ph.d .",
    "thesis ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop ( ) @noop * * ,   ( ) @noop ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop _ _  ( ,  ) @noop * * , ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ( ) @noop * * ,   ( ) \\doibase doi:10.1038/nature14270 [ * * ,   ( ) ] @noop ( ) @noop ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop ( )"
  ],
  "abstract_text": [
    "<S> the surface code is currently the leading proposal to achieve fault - tolerant quantum computation . among its strengths </S>",
    "<S> are the plethora of known ways in which fault - tolerant clifford operations can be performed , namely , by deforming the topology of the surface , by the fusion and splitting of codes and even by braiding engineered majorana modes using twist defects . here we present a unified framework to describe these methods , which is required to better compare different schemes , and to facilitate the design of hybrid schemes . </S>",
    "<S> novel to our unification is the identification of twist defects with the corners of the planar code . </S>",
    "<S> this identification enables us to find new ways of performing single - qubit clifford gates by exchanging the corners of the planar code via code deformation . </S>",
    "<S> we analyse ways in which different schemes can be combined , and propose a novel hybrid encoding . </S>",
    "<S> we also show how all of the clifford gates can be implemented on a single code without loss of distance , thus offering an attractive alternative to ancilla - mediated schemes to complete the clifford group with lattice surgery . </S>"
  ]
}
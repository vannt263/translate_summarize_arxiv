{
  "article_text": [
    "the traffic light control ( tlc ) problem consists of adjusting green and red light cycles in order to control the traffic flow through an intersection and , more generally , through a set of intersections and traffic lights .",
    "the ultimate objective is to minimize congestion ( hence delays experienced by drivers ) at a particular intersection , as well as an entire area consisting of multiple intersections with traffic lights .",
    "recent technological developments have made it possible to collect and process traffic data so that they may be applied in solving the tlc problem in real time .",
    "fundamentally , tlc is a form of scheduling for systems operating through simple switching control actions .",
    "numerous solution algorithms have been proposed and we briefly review some of them .",
    "@xcite used a decision tree model with a rolling horizon dynamic programming ( rhdp ) approach , while @xcite proposed a multiobjective mixed integer linear programming ( milp ) formulation .",
    "optimal tlc was also stated as a special case of an extended linear complementarity problem ( elcp ) by @xcite , and formulated as a hybrid system optimization problem by @xcite .",
    "@xcite modeled a traffic light intersection as a markov decision process ( mdp ) and a game theoretic approach was applied to a finite controlled markov chain model by @xcite . relying on sensor information regarding traffic congestion , @xcite developed a first - order sugeno fuzzy model and incorporated it into a fuzzy logic controller .",
    "perturbation analysis techniques were used by @xcite and @xcite for modeling a traffic light intersection as a stochastic discrete event system ( des ) , while an infinitesimal perturbation analysis ( ipa ) approach , using a stochastic flow model ( sfm ) to represent the queue content dynamics of roads at an intersection , was presented in [ @xcite ] .",
    "our work is also based on modeling traffic flow through an intersection controlled by switching traffic lights as an sfm , which conveniently captures the system s inherent hybrid nature : while traffic light switches exhibit event - driven dynamics , the flow of vehicles through an intersection is best represented through time - driven dynamics . in [ @xcite ] , ipa was applied with respect to controllable green and red cycle lengths for a single isolated intersection and in [ @xcite ] for multiple intersections .",
    "traffic flow rates need not be restricted to take on deterministic values , but may be treated as stochastic processes ( see [ @xcite ] ) , which are suited to represent the continuous and random variations in traffic conditions . using the general ipa theory for stochastic hybrid systems ( shs ) in [ @xcite ] and [ @xcite ] , on - line gradients of performance measures",
    "are estimated with respect to several controllable parameters with only minor technical conditions imposed on the random processes that define input and output flows .",
    "these ipa estimates have been shown to be unbiased , even in the presence of blocking due to limited resource capacities and of feedback control ( see [ @xcite ] ) . it should be emphasized that ipa is not used to estimate performance measures , but only their gradients , which may be subsequently incorporated into standard gradient - based algorithms in order to effectively control parameters of interest .",
    "in contrast to earlier work where the adjustment of light cycles did not make use of real - time state information , @xcite proposed a quasi - dynamic control setting in which partial state information is used conditioned upon a given queue content threshold being reached . in this paper , we draw upon this setting , but rather than controlling the light cycle lengths as in [ @xcite ] , here we focus on the threshold parameters and derive ipa performance measure estimators necessary to optimize these parameters , while assuming fixed cycle lengths .",
    "our goal is to compare the relative effects of the threshold parameters and the light cycle length parameters on our objective function , build upon these results , and ultimately control both the light cycle lengths and the queue content thresholds simultaneously .    in section 2",
    ", we formulate the tlc  problem for a single intersection and present the modeling framework used throughout our analysis for controlling vehicle queue thresholds .",
    "section 3 details the derivation of an ipa  estimator for the cost function gradient with respect to a controllable parameter vector defined by these thresholds .",
    "the ipa estimator is then incorporated into a gradient - based optimization algorithm and we include simulation results in section 4 , showing how the proposed quasi - dynamic control offers considerable improvement over prior results .",
    "the system we consider comprises a single intersection , as shown in fig .",
    "[ ( fig ) : single intersection ] . for simplicity , left - turn and right - turn traffic flows are not considered and yellow light cycles are implicitly accounted for within a red light cycle .",
    "we assign to each queue @xmath0 a guaranteed minimum green cycle length @xmath1 , and a maximum length @xmath2 which ( in contrast to [ @xcite ] ) we assume to be fixed .",
    "we define a state vector @xmath3 $ ] where @xmath4 is the content of queue @xmath0 . for each queue @xmath0",
    ", we also define a clock  state variable @xmath5 , @xmath6 , which measures the time since the last switch from red to green of the traffic light for queue @xmath0 , so that @xmath7 $ ] . setting @xmath8 $ ] , the complete system state vector is @xmath9 $ ] . within the _ quasi - dynamic _ setting considered in this work ,",
    "the controllable parameter vector of interest is given by @xmath10   $ ] , where @xmath11 is a queue content threshold value for road @xmath12 .",
    "the notation @xmath13 $ ] is used to stress the dependence of the state on these threshold parameters . however , for notational simplicity , we will henceforth write @xmath14 when no confusion arises ; the same applies to @xmath15 .",
    "let us now partition the queue content state space into the following four regions : @xmath16@xmath17@xmath18@xmath19    @xmath20    at any time @xmath21 , the feasible control set for the traffic light controller is @xmath22 and the control is defined as:@xmath23{c}1\\\\ 2 \\end{array } \\right .",
    "\\begin{array } [ c]{l}\\text{i.e . , set road } 1\\text { green , road } 2\\text { red}\\\\ \\text{i.e . ,",
    "set road } 2\\text { green , road } 1\\text { red}\\end{array } \\label{(eq ) : control definition}\\ ] ] a _ dynamic _ controller is one that makes full use of the state information @xmath15 and @xmath14 .",
    "obviously , @xmath15 is the controller s known internal state , but the queue content state is generally not observable .",
    "we assume , however , that it is _ partially _ observable .",
    "specifically , we can only observe whether @xmath24 is below or above some threshold @xmath25 ( this is consistent with actual traffic systems where sensors ( typically , inductive loop detectors ) are installed at each road near the intersection ) . in this context",
    ", we shall define a _ quasi - dynamic _ controller of the form @xmath26 , with @xmath27 , as follows :    for @xmath28:@xmath29{c}1\\\\ 2 \\end{array } \\right .",
    "\\begin{array } [ c]{l}\\text{if } z_{1}(t)\\in\\left (   0,\\theta_{1,\\max}\\right )   \\text { and } z_{2}(t)=0\\\\ \\text{otherwise}\\end{array } \\label{(eq ) : control policy i}\\ ] ]    for @xmath30:@xmath29{c}1\\\\ 2 \\end{array } \\right . \\begin{array } [ c]{l}\\text{if } z_{1}(t)\\in\\left (   0,\\theta_{1,\\min}\\right )   \\text { and } z_{2}(t)=0\\\\ \\text{otherwise}\\end{array } \\label{(eq ) : control policy ii}\\ ] ]    for @xmath31:@xmath29{c}2\\\\ 1 \\end{array } \\right .",
    "\\begin{array } [ c]{l}\\text{if } z_{2}(t)\\in\\left (   0,\\theta_{2,\\min}\\right )   \\text { and } z_{1}(t)=0\\\\ \\text{otherwise}\\end{array } \\label{(eq ) : control policy iii}\\ ] ] this is a simple form of hysteresis control to ensure that the @xmath0th traffic flow always receives a minimum green light cycle @xmath1 . clearly , the green light cycle may be dynamically interrupted anytime after @xmath1 based on the partial state feedback provided through @xmath32 .",
    "for instance , if a transition into @xmath33 occurs while @xmath34 and @xmath35 , then the light switches from green to red for road 1 in order to accommodate an increasing backlog at road 2 . for notational simplicity ,",
    "we will write @xmath36 when no confusion arises , as we do with @xmath14 , @xmath37    the stochastic processes involved in this system are defined on a common probability space @xmath38 .",
    "the arrival flow processes are @xmath39 , @xmath12 , where @xmath40 is the instantaneous vehicle arrival rate at time @xmath21 .",
    "the departure flow process on road @xmath41 is defined as:@xmath42{l}h_{n}(x(t),z(t),t)\\\\ \\alpha_{n}(t)\\\\ 0 \\end{array } \\right .",
    "\\begin{array } [ c]{l}\\text{if } x_{n}(t)>0\\text { and } u(t)=n\\\\ \\text{if } x_{n}(t)=0\\text { and } u(t)=n\\\\ \\text{otherwise}\\end{array } \\label{(eq ) : departure process}\\ ] ] where @xmath43 is the instantaneous vehicle departure rate at time @xmath21 ; for notational simplicity , we will write @xmath44 when no confusion arises . we can now write the dynamics of the state variables @xmath45 and @xmath46 as follows , where we adopt the notation @xmath47 to denote the index of the road perpendicular to road @xmath12 , and note that the symbols @xmath48 ( @xmath49 , respectively ) denote the time instant immediately following ( preceding , respectively ) time @xmath21:@xmath50{l}\\alpha_{n}(t)\\\\ 0\\\\ \\alpha_{n}(t)-h_{n}(t ) \\end{array } \\right .",
    "\\begin{array } [ c]{l}\\text{if } z_{n}(t)=0\\\\ \\text{if } x_{n}(t)=0\\text { and } \\alpha_{n}(t)\\leq",
    "h_{n}(t)\\\\ \\text{otherwise}\\end{array } \\label{(eq ) : state dynamics}\\]]@xmath51{c}1\\\\ 0 \\end{array } \\right .",
    "\\begin{array } [ c]{l}\\text{if } z_{\\overline{n}}(t)=0\\\\ \\text{otherwise}\\end{array } \\label{(eq ) : clock dynamics}\\ ] ] @xmath52{l}z_{n}(t^{+})=0\\\\ \\text{if } z_{n}(t)=\\theta_{n,\\max}\\\\ \\text{or } z_{n}(t)=\\theta_{n,\\min},\\text { } x_{n}(t)<s_{n},\\text { } x_{\\overline{n}}(t)\\geq s_{\\overline{n}}\\\\ \\text{or } z_{n}(t)>\\theta_{n,\\min},\\text { } x_{n}(t^{-})>s_{n},x_{n}(t^{+})=s_{n},x_{\\overline{n}}(t)\\geq s_{\\overline{n}}\\\\ \\text{or } z_{n}(t)>\\theta_{n,\\min},\\text { } x_{n}(t)<s_{n},x_{\\overline{n}}(t^{-})<s_{\\overline{n}},x_{\\overline{n}}(t^{+})=s_{\\overline{n}}\\end{array}\\ ] ]    in this context , the traffic light intersection in fig . [ ( fig ) : single intersection ] can be viewed as a hybrid system in which the time - driven dynamics are given by ( [ ( eq ) : state dynamics])-([(eq ) : clock dynamics ] ) and the event - driven dynamics are associated with light switches and with events that cause the value of @xmath45 to change from strictly positive to zero or vice - versa .",
    "it is then possible to derive a stochastic hybrid automaton ( sha ) model as in [ @xcite ] containing 14 modes , which are defined by combinations of @xmath45 and @xmath46 values .",
    "the event set for this sha is @xmath53 , where @xmath54 is the guard condition @xmath55   $ ] ; @xmath56 is the guard condition @xmath57   $ ] ; @xmath58 is the guard condition @xmath59   $ ] ; @xmath60 is the guard condition @xmath61   $ ] ; @xmath62 is the guard condition @xmath63   $ ] ; @xmath64 is a switch in the sign of @xmath65 from non - positive to strictly positive ; @xmath66 is a switch in the sign of @xmath40 from 0 to strictly positive .",
    "note that @xmath67 are the events that induce light switches and , for easier reference , we rename them as @xmath68 , @xmath69 , @xmath70 , and @xmath71 , respectively , where the subscript @xmath41 refers to the road where the event occurred .",
    "if we label light switching events from red to green and green to red as @xmath72 and @xmath73 , respectively , we can specify the following rules for our hysteresis - based controller :    rule 1 : :    the occurrence of event @xmath68 , while    @xmath74 and    @xmath75 , results in event    @xmath72 .",
    "rule 2 : :    the occurrence of event @xmath69 , while    @xmath76 and    @xmath77 , results in event    @xmath73 .",
    "rule 3 : :    the occurrence of event @xmath70 , while    @xmath78 and    @xmath77 , results in event    @xmath73 .",
    "rule 4 : :    the occurrence of event @xmath71 always results in event    @xmath73 .    a partial state transition diagram defined in terms of the aggregate queue content states @xmath32 is shown in fig . [ ( fig ) : sha ] .",
    "a complete state transition diagram for this sha is too complicated to draw and is not necessary for ipa , which focuses on analyzing a typical sample path and observable events in it , as shown in fig .",
    "[ ( fig ) : sample path ] . observe that any such sample path consists of alternating non - empty periods ( neps ) and empty periods ( eps ) , which correspond to time intervals when @xmath79 ( i.e. , queue @xmath41 is non - empty ) and @xmath80 ( i.e. , queue @xmath41 is empty ) , respectively .",
    "let us then label the events corresponding to the end and to the start of an nep as @xmath81 and @xmath82 , respectively , and note that @xmath81 is induced by event @xmath62 , while @xmath82 may be induced by events @xmath64 or @xmath66 or @xmath73 .",
    "@xmath83    let us denote the @xmath84th nep in a sample path of queue @xmath41 , by @xmath85 , where @xmath86 , @xmath87 , is the time of occurrence of the @xmath84th @xmath82 event and @xmath88 is the time of occurrence of the @xmath84th @xmath81 event , as illustrated in fig .",
    "[ ( fig ) : sample path ] . additionally , let the time of a light switching event ( either @xmath72 or @xmath73 ) within the @xmath84th nep be denoted by @xmath89 , @xmath90 .",
    "@xmath91{samplepath}$ ]    recall that the purpose of our analysis is to apply ipa to sample path data in order to obtain unbiased gradient estimates of a system performance measure with respect to the controllable parameter vector * *  * * @xmath92 and subsequently incorporate such estimates into a gradient - based optimization scheme .",
    "in particular , we define a sample function which measures a weighted mean of the queue lengths over a fixed time interval @xmath93$]:@xmath94 where @xmath95 is a weight associated with road @xmath41 , and @xmath96 , @xmath97 are given initial conditions . since @xmath80 during eps of road @xmath41,([(eq ) : sample function ] ) can be rewritten as@xmath98 where @xmath99 is the total number of neps during the sample path of road @xmath41 .",
    "finally , using @xmath100 to denote the usual expectation operator , let us define the overall performance metric as@xmath101   \\label{(eq ) : performance metric}\\ ] ] we note that it is not possible to derive a closed - form expression of @xmath102 without full knowledge of the processes @xmath39 and @xmath103 . on the other hand , by assuming only that @xmath40 and @xmath104 are piecewise continuous w.p .",
    "1 , we can successfully apply the ipa methodology developed for general shs by @xcite and obtain an estimate of @xmath105 by evaluating the sample gradient @xmath106 .",
    "as we will see , no explicit knowledge of @xmath40 , @xmath104 is necessary to estimate @xmath107 , which can then be used to improve current operating conditions or ( under certain conditions ) to compute an optimal @xmath108 through an iterative optimization algorithm of the form@xmath109 where @xmath110 is the step size at the @xmath111th iteration , @xmath112 , and @xmath113 denotes a sample path from which data are extracted and used to compute @xmath114 , which is an estimate of @xmath115 .",
    "we will further assume that that the derivatives @xmath116 exist w.p . 1 for all @xmath117 .",
    "it is also easy to check that @xmath118 is lipschitz continuous for @xmath119 . under these conditions ,",
    "it has been shown by @xcite that @xmath116 is an unbiased estimator of @xmath115 , @xmath6 .",
    "for the sake of completeness we begin with a brief overview of the generalized ipa framework developed for shs in [ @xcite ] ) .",
    "consider a sample path of the system over @xmath120   $ ] and denote the time of occurrence of the @xmath121th event ( of any type ) by @xmath122 , where @xmath123 is a scalar ( for simplicity ) controllable parameter of interest .",
    "we shall also denote the state and event time derivatives with respect to parameter @xmath123 as @xmath124 and @xmath125 , respectively , for @xmath126 .",
    "the dynamics of @xmath127 are fixed over any interevent interval @xmath128 and we write @xmath129 to represent the state dynamics over this interval .",
    "although we include @xmath123 as an argument in the expressions above to stress dependence on the controllable parameter , we will subsequently drop this for ease of notation as long as no confusion arises .",
    "it is shown in [ @xcite ] that the state derivative satisifies@xmath130 with the following boundary condition:@xmath131   \\cdot\\tau_{k}^{\\prime } \\label{(eq ) : boundary condition}\\ ] ] knowledge of @xmath132 is , therefore , needed in order to evaluate ( [ ( eq ) : boundary condition ] ) . following the framework in [ @xcite ]",
    ", there are three types of events for a general stochastic hybrid system .",
    "@xmath133 _ exogenous events . _",
    "these events cause a discrete state transition independent of @xmath123 and satisfy @xmath134 .",
    "@xmath135 _ endogenous events .",
    "_ such an event occurs at time @xmath136 if there exists a continuously differentiable function @xmath137 such that @xmath138 , where the function @xmath139 normally corresponds to a guard condition in a hybrid automaton . taking derivatives with respect to @xmath123 , it is straightforward to obtain@xmath140   ^{-1}\\cdot\\left (   \\frac{\\partial g_{k}}{\\partial\\theta } + \\frac{\\partial g_{k}}{\\partial x}\\cdot x^{\\prime}(\\tau_{k}^{-})\\right ) \\label{(eq ) : endogenous event}\\ ] ] where @xmath141 .",
    "@xmath142 _ induced events .",
    "_ such an event occurs at time @xmath136 if it is triggered by the occurrence of another event at time @xmath143 ( details can be found in [ @xcite ] ) .    returning to our tlc problem",
    ", we define the derivatives of the states @xmath144 and @xmath145 and event times @xmath146 with respect to @xmath147 , @xmath6 , as follows : @xmath148 observe that , based on ( [ ( eq ) : state dynamics ] ) , @xmath149 , @xmath150 so that in ( [ ( eq ) : general state derivative ] ) we have @xmath151 for @xmath152 .",
    "thus , @xmath153 , @xmath154 . in what follows , we derive the ipa state and event time derivatives for the events identified in our sha model",
    ".      we shall proceed by considering each of the event types ( @xmath73 , @xmath72 , @xmath81 , @xmath82 ) identified in the previous section and deriving the corresponding event time and state derivatives .",
    "we begin with a general result which applies to all light switching events @xmath73 and @xmath72 .",
    "let us denote the time of the @xmath155th occurrence of a light switching event by @xmath156 and define its derivative with respect to the control parameters as @xmath157 , @xmath6 .",
    "_ lemma 1 : _ the derivative @xmath158 , @xmath6 , of light switching event times @xmath156 , @xmath159 with respect to the control parameters @xmath160 satisfies:@xmath161{ll}\\frac{\\mathbf{1}\\left [   n = i\\right ]   -x_{n , i}^{\\prime}(\\sigma_{j}^{-})}{\\alpha_{n}(\\sigma_{j } ) } & \\text{if } \\zeta_{n}\\text { occurs at } \\sigma_{j}\\\\ \\frac{\\mathbf{1}\\left [   n = i\\right ]   -x_{n , i}^{\\prime}(\\sigma_{j}^{-})}{\\alpha_{n}(\\sigma_{j})-h_{n}(\\sigma_{j } ) } & \\text{if } \\gamma_{n}\\text { occurs at } \\sigma_{j}\\\\ \\sigma_{j-1,i}^{\\prime } & \\text{otherwise}\\end{array } \\right .",
    "\\label{lemma1}\\ ] ] where @xmath162   $ ] is the usual indicator function .",
    "* proof * : we begin with a @xmath73 light switching event .",
    "this event is induced by one of four possible endogenous events which we analyze separately in what follows .",
    "_ event _ @xmath163 _ occurs at time _",
    "_ in this case , a @xmath164 event occurs , hence also a @xmath165 event . since road 1 must be undergoing a red cycle within a nep , it follows from ( [ ( eq ) : endogenous event ] ) with @xmath166 and ( [ ( eq ) : state dynamics ] ) that @xmath167 and @xmath168 .",
    "_ event _ @xmath169 _ occurs at time _",
    "@xmath156__. _ _ this results in a @xmath170 event and the same reasoning as above applies to verify that @xmath171 and @xmath172 .",
    "_ event _ @xmath173 _ occurs at time _",
    "@xmath156__. _ _ this results in a @xmath170 event .",
    "moreover , since this a light switching event , it follows from ( [ ( eq ) : control policy ii ] ) that @xmath174 and @xmath175 , which means that road 1 must be in a nep with @xmath176 . as a result",
    ", it follows from ( [ ( eq ) : endogenous event ] ) with @xmath166 and ( [ ( eq ) : state dynamics ] ) that @xmath177 and @xmath178 .",
    "_ event _ @xmath179 _ occurs at time _ @xmath156__. _ _",
    "this results in a @xmath164 event and the same reasoning as above applies to verify that @xmath180 and @xmath181 .",
    "_ event _ @xmath70 , @xmath12 , _ occurs at time _ @xmath156__. _ _",
    "let @xmath182 , @xmath159 , where ( without loss of generality ) we set @xmath183 .",
    "therefore , we can write @xmath184 , @xmath159 recall that , by definition , whenever a light switching event is induced by @xmath70 we must have @xmath185 , which is independent of @xmath160 . therefore , @xmath186 for all @xmath159 and @xmath6 .",
    "_ event _ @xmath71 , @xmath12 , _ occurs at time _ @xmath156__. _",
    "_ this is similar to the previous case with @xmath187 and once again we have @xmath186 for all @xmath159 and @xmath6 .",
    "this concludes the proof for a @xmath73 light switching event .",
    "the analysis for a @xmath72 event is similar , due to the fact that the end of a red cycle on road @xmath41 ( @xmath72 event ) must coincide with the start of a red cycle on road @xmath47 ( @xmath188 event ) .",
    "@xmath189    we now proceed by considering each of the event types ( @xmath73 , @xmath72 , @xmath81 , @xmath82 ) .    * ( 1 ) * : :    event @xmath73    two cases must be considered : @xmath190 @xmath73 occurs at @xmath136 while road @xmath41 is undergoing an nep ; @xmath191 @xmath73 occurs at @xmath136 while road @xmath41 is undergoing an ep . in case @xmath190 , the fact that @xmath192 means that @xmath193 . additionally , since road @xmath41 is undergoing a red cycle at time @xmath194 , we must have @xmath195 .",
    "it follows from ( [ ( eq ) : boundary condition ] ) that @xmath196 , @xmath12 , @xmath6 . in case @xmath191 ,",
    "@xmath197 , so that @xmath198 , and it is simple to verify that @xmath199 , @xmath12 , @xmath6 .",
    "moreover , if the @xmath121th event corresponds to the @xmath155th occurrence of a light switching event , we have @xmath200 for some @xmath159 combining these results , we get , for @xmath12 and @xmath6,@xmath201{c}h_{n}(\\tau_{k})\\sigma_{j , i}^{\\prime}\\\\ \\alpha_{n}(\\tau_{k})\\sigma_{j , i}^{\\prime}\\end{array } \\right . \\begin{array } [ c]{c}\\text{if } x_{n}(\\tau_{k})>0\\\\ \\text{if } x_{n}(\\tau_{k})=0 \\end{array } \\label{(eq ) : g2r state derivative}\\ ] ] where @xmath158 is given by ( [ lemma1 ] ) in lemma 1 with @xmath202 .    *",
    "( 2 ) * : :    event @xmath72    once again , two cases must be considered : @xmath190 @xmath72 occurs at @xmath136 while road @xmath41 is undergoing an nep ; @xmath191 @xmath72 occurs at @xmath136 while road @xmath41 is undergoing an ep . in case @xmath190",
    ", the fact that road @xmath41 is undergoing a red cycle within a nep at time @xmath203 means that @xmath204 . additionally ,",
    "since road @xmath41 is undergoing a green cycle at time @xmath194 , we must have @xmath205 , and ( [ ( eq ) : boundary condition ] ) reduces to @xmath206 , @xmath12 , @xmath6 . in case @xmath191",
    ", the fact that road @xmath41 is empty while undergoing a red cycle at time @xmath203 implies that @xmath207 with @xmath208 , while @xmath209 . substituting these expressions into ( [ ( eq ) : boundary condition ] ) yields @xmath210 , @xmath12 and @xmath6 . combining these two cases , we get , for @xmath12 and @xmath6,@xmath211{c}\\alpha_{n}(\\tau_{k})\\sigma_{j , i}^{\\prime}\\\\ \\\\",
    "h_{n}(\\tau_{k})\\sigma_{j , i}^{\\prime}\\end{array } \\right . \\begin{array } [ c]{l}\\text{if } x_{n}(\\tau_{k})=0\\text { and } \\\\ 0<\\alpha_{n}(\\tau_{k})\\leq h_{n}(\\tau_{k})\\\\ \\text{otherwise}\\end{array } \\label{(eq ) : r2 g state derivative}\\ ] ] where again @xmath158 is given by ( [ lemma1 ] ) in lemma 1 with @xmath202 .    *",
    "( 3 ) * : :    event @xmath81    this event corresponds to the end of an nep on road @xmath41 and is induced by @xmath62 , which is an endogenous event at @xmath136 with @xmath212 . since at time",
    "@xmath203 road @xmath41 is in an nep , we must have @xmath193 , and ( [ ( eq ) : endogenous event ] ) implies that @xmath213 .",
    "moreover , the fact that road @xmath41 is in an ep at time @xmath194 implies that @xmath209 , and ( [ ( eq ) : boundary condition ] ) reduces to @xmath214 so that@xmath215    * ( 4 ) * : :    event @xmath82    this event corresponds to the start of an nep and can be induced by a @xmath73 , @xmath66 or @xmath64 event .",
    "these three cases are analyzed in what follows .",
    "@xmath82 _ is induced by a _",
    "suppose that this @xmath73 event initiated the @xmath84th nep on road @xmath41 .",
    "therefore , during the preceding ep , i.e. during the time interval @xmath216 , we have @xmath80 for @xmath217 , and , consequently , @xmath218 for @xmath219 and @xmath6 . as a result , @xmath220 , and since @xmath221",
    "it follows that @xmath222",
    ". therefore , ( [ ( eq ) : g2r state derivative ] ) reduces to@xmath223 the value of @xmath224 above depends on the event inducing @xmath73 .",
    "if the @xmath121th event corresponds to the @xmath155th occurrence of a light switching event , then @xmath200 which is obtained from ( [ lemma1 ] ) .",
    "note , however , that event @xmath82 can not be induced by @xmath69 due to the fact that the occurrence of @xmath69 is conditioned upon road @xmath41 being in an nep , which can not be the case here . as a result , the second case in ( [ lemma1 ] ) is excluded .",
    "@xmath82 _ is induced by an _",
    "event_. recall that @xmath66 corresponds to a switch from @xmath225 to @xmath226 while road @xmath41 is undergoing a red cycle , i.e. @xmath227 . since this is an exogenous event , @xmath228 , @xmath6 , and ( [ ( eq ) : boundary condition ] ) reduces to @xmath229 . we know that @xmath136 corresponds to the time when the nep starts at road @xmath41 , i.e. @xmath230 , and we have shown that @xmath231 .",
    "it thus follows that @xmath222 , so that @xmath232 , @xmath12 , @xmath6 .",
    "@xmath82 _ is induced by an _",
    "@xmath64 corresponds to a switch from @xmath233 to @xmath234 while road @xmath41 is undergoing a green cycle , i.e. , @xmath235 . since this is an exogenous event , @xmath228 , @xmath6 , and the subsequent analysis is similar to that of the previous case .",
    "therefore , @xmath232 , @xmath12 , @xmath6 .",
    "this completes the derivation of all state and event time derivatives required to apply ipa to our tlc  problem .      using the definition of @xmath236 in ( [ ( eq ) : sample function simplified ] )",
    "we can obtain the sample performance derivatives @xmath116 as follows : @xmath237\\end{gathered}\\ ] ] note that @xmath238 .",
    "moreover , we have shown that @xmath239 , @xmath154 , which implies that we can decompose each nep into time intervals of the form @xmath240 .",
    "letting @xmath241 we get@xmath242 it is clear from ( [ ipaestimator ] ) that computing the ipa estimator requires knowledge of : @xmath133 the event times @xmath86 , @xmath88 , and @xmath89 , and @xmath135 the value of the state derivatives @xmath243 , whose expressions were derived in the previous section , during each time interval . the quantities in @xmath133",
    "are easily observed using timers , and those in @xmath135 ultimately depend on the values of the arrival and departure rates @xmath40 and @xmath44 at event times _ only _ , which may be estimated through simple rate estimators . as a result ,",
    "an algorithm for updating the value of @xmath244 after each observed event is straightforward to implement .",
    "we also point out that our ipa estimator is linear in the number of events in the sfm , not in its states .",
    "thus , our method can be readily extended to a network of intersections .",
    "with the intent of showing that performance improvements can be obtained when ipa  is used to control the queue content thresholds , two sets of simulations were performed : one in which the thresholds were optimized considering a priori fixed values of cycle lengths @xmath245 $ ] for each road , and another in which the cycle lengths and thresholds @xmath246 $ ] were optimized sequentially .",
    "thus , first , the ipa algorithm from @xcite was applied to determine optimal @xmath247 ; then the values of @xmath248 and @xmath249 were optimized using the ipa algorithm described in this work .    in all our simulations , we assume that the vehicle arrival process is poisson with rate @xmath250 , @xmath12 , and approximate the departure rate by a constant value @xmath251 when road @xmath41 is non - empty , which amounts to considering that the speed with which vehicles cross an intersection depends only on the behavior of the vehicles themselves .",
    "we emphasize , however , that our methodology applies independently of the distributions chosen to represent the arrival and departure processes .",
    "we estimate the values of the arrival rate at event times as @xmath252 , where @xmath253 is the number of vehicle arrivals during a time window @xmath254 around @xmath136 .",
    "simulations of the intersection modeled as a pure des are thus run to generate sample paths to which the ipa estimator is applied .",
    "we also make use of a brute - force ( bf ) approach to generate a cost surface along which the convergence of the ipa - driven optimization algorithm is depicted .",
    "the bf method consists of discretizing the values of @xmath147 and generating 10 sample paths for each pair of discretized threshold values @xmath255 , from which the average total cost can then be obtained . in all results reported here ,",
    "we set @xmath256 , @xmath257 , @xmath12 , and measure the sample path length in terms of the number of observed light switches , which we choose to be @xmath258 .    in our first set of simulations ,",
    "the green light cycles are fixed and equal on both roads by setting @xmath259 @xmath260 and @xmath261 @xmath260 , @xmath12 .",
    "two scenarios are considered : @xmath262 @xmath263 , in which road @xmath264 exhibits high traffic intensity while road @xmath265 exhibits low traffic intensity : @xmath266 and @xmath267 ; @xmath262 @xmath268 , in which both roads exhibit high but unequal traffic intensity : @xmath266 and @xmath269 .",
    "we further consider two different initial threshold configurations for each scenario .",
    "table [ ( tb ) : results arbitrary theta ] shows the optimal threshold values determined by both the bf method and the ipa - driven optimization algorithm , along with the cost reduction achieved by the latter ( denoted as @xmath270 and computed as a percentage of the initial cost ) .",
    "sample convergence plots of the cost @xmath271 and thresholds @xmath92 are presented in fig . [ ( fig ) : convergence arb 2 ] , while the cost surface referring to @xmath262 @xmath263 , along with curves ( black and yellow ) that represent the trajectories corresponding to each initial configuration , is shown in fig . [ ( fig ) : scenario a ] .",
    "visual inspection of fig .",
    "[ ( fig ) : scenario a ] reveals that both trajectories converge to the same optimal point , namely @xmath272 $ ] , as presented in table [ ( tb ) : results arbitrary theta ] .",
    "[ c]|c|c|c|c|c|c|c|c| & & & + @xmath273 & @xmath274 & @xmath275 & @xmath276 & @xmath277 & @xmath270 & @xmath278 & @xmath279 + @xmath280   $ ] & @xmath281   $ ] & @xmath282 & @xmath283   $ ] & @xmath284 & @xmath285 & @xmath286   $ ] & @xmath287 + @xmath280   $ ] & @xmath288   $ ] & @xmath289 & @xmath283   $ ] & @xmath284 & @xmath290 & @xmath286   $ ] & @xmath287 + @xmath291   $ ] & @xmath292   $ ] & @xmath293 & @xmath294   $ ] & @xmath295 & @xmath296 & @xmath297   $ ] & @xmath298 + @xmath291   $ ] & @xmath299   $ ] & @xmath300 & @xmath294   $ ] & @xmath295 & @xmath301 & @xmath297   $ ] & @xmath298 +    @xmath91{convergencearb2}$ ]    @xmath302{scenarioa}$ ]    in our second set of simulations , we perform a sequential optimization of the cycle lengths and threshold values .",
    "we make use of the optimal light cycle lengths obtained through ipa ( denoted by @xmath303   $ ] ) by @xcite , and subsequently apply the ipa estimator derived in this paper to optimize the queue content thresholds .",
    "the optimal light cycle lengths obtained by @xcite for fixed and predetermined threshold values of @xmath304   $ ] were @xmath305   $ ] for @xmath306 $ ] and @xmath307   $ ] for @xmath308 $ ] . a comparison between ipa and bf results , including a quantitative assessment of the _ additional _ cost reduction achieved ( computed as a percentage of the initial cost and labeled @xmath270 ) is shown in table [ ( tb ) : results sequential optimization ] .",
    "[ c]|c|c|c|c|c|c| & & + @xmath273 & @xmath276 & @xmath309 & @xmath270 @xmath310 & @xmath278 & @xmath279 + @xmath291   $ ] & @xmath311   $ ] & @xmath312 & @xmath313 & @xmath314   $ ] & @xmath315 + @xmath316   $ ] & @xmath317   $ ] & @xmath318 & @xmath319 & @xmath320   $ ] & @xmath321 +    in order to further illustrate the advantage of quasi - dynamically controlling the light cycle lengths and threshold values over a static ipa approach to the tlc problem , we include a comparison of the results generated by our methodology with those obtained when static control ( as described by @xcite ) is applied to determine the optimal cycle lengths @xmath322 .",
    "the static controller defined by @xcite adjusts the green light cycles subject to some lower and upper bounds and determines @xmath323   $ ] , where @xmath324 ( @xmath325 , respectively ) is the green cycle length which should be allotted to road @xmath264 ( road @xmath265 , respectively ) in order to minimize the average queue content on both roads .",
    "table [ ( tb ) : results comparison ] summarizes the results obtained by each of the ipa approaches considered in this work : _ method 1 _ , in which a static controller is used to adjust the light cycles ( results were obtained by using the same setting as in our second set of quasi - dynamic simulations and constraining @xmath326 $ ] ) ; _ method 2 _ , in which only the light cycles are controlled quasi - dynamically ( i.e. fixed and predetermined queue content thresholds are incorporated into the system model ) ; _ method 3 _ , in which a sequential quasi - dynamic optimization of light cycle lengths and threshold values is performed in between two adjustment points .",
    "the columns labeled @xmath327 , @xmath328 , present the cost reduction achieved by the quasi - dynamic methods with respect to the static approach , i.e. @xmath329 .    [ c]|c|c|c|c|c|c| & method 1 & & + @xmath273 & @xmath330 & @xmath331 & @xmath332 @xmath310 & @xmath333 & @xmath334 @xmath310 + @xmath291   $ ] & @xmath335 & @xmath336 & @xmath337 & @xmath312 & @xmath338 + @xmath316   $ ] & @xmath339 & @xmath340 & @xmath341 & @xmath318 & @xmath342 +",
    "we have modeled a single traffic light intersection as an sfm and formulated the corresponding tlc problem within a quasi - dynamic control setting to which ipa techniques were applied in order to derive gradient estimates of a cost metric with respect to controllable queue content threshold values . by subsequently incorporating these estimators into a gradient - based optimization algorithm ,",
    "numerical results were obtained which substantiate our claims that : @xmath133 a considerable reduction in the mean queue content of both roads can be achieved by quasi - dynamically controlling the thresholds in systems with non - optimal cycle lengths ; @xmath135 determining optimal threshold values allows for additional improvements to the performance of systems running under optimal cycle lengths .",
    "such results lead us to believe that a method in which the light cycle lengths and queue content thresholds are controlled _ simultaneously _ is likely to provide improved solutions to the tlc  problem .",
    "our ongoing research is , therefore , focused on deriving an ipa - based optimization algorithm that incorporates all such controllable parameters and ultimately determines the optimal light cycle length / threshold configuration capable of minimizing traffic build - up at a given traffic light intersection .",
    "future work includes applying ipa to an intersection with more complicated traffic flow ( e.g. allowing for left- and right - turns ) , incorporating acceleration / deceleration due to light switches into the flow model , as well as extending our methodology to multiple intersections .",
    "cassandras , c.g .",
    ", wardi , y. , melamed , b. , sun , g. , and panayiotou , c.g .",
    "perturbation analysis for on - line control and optimization of stochastic fluid models .",
    "_ ieee trans .",
    "control _ , 47 , 1234 - 1248 .",
    "choi , w. , yoon , h. , kim , k. , chung , i. , and lee , s. ( 2002 ) . a traffic light controlling flc considering the traffic congestion .",
    "_ proceedings of the afss 2002 international conference on fuzzy systems _ , 69 - 75 .",
    "dujardin , y. , boillot , f. , vanderpooten , d. , and vinant , p. ( 2011 ) .",
    "multiobjective and multimodal adaptive traffic light control on single junctions .",
    "_ proceedings of the ieee conference on intelligent transportation systems _ , 1361 - 1368 .",
    "porche , i. , sampath , m. , sengupta , r. , chen .",
    "l . , and lafortune , s. ( 1996 ) .",
    "a decentralized scheme for real - time optimization of traffic signals .",
    "_ proceedings of the ieee international conference on control applications _ , 582 - 589 .",
    "yao , c. , cassandras , c.g .",
    "perturbation analysis of stochastic hybrid systems and applications to resource contention games .",
    "_ frontiers of electrical and electronic engineering in china _ , 6 , 453 - 467 ."
  ],
  "abstract_text": [
    "<S> we consider the traffic light control problem for a single intersection modeled as a stochastic hybrid system . </S>",
    "<S> we study a quasi - dynamic policy based on partial state information defined by detecting whether vehicle backlogs are above or below certain controllable thresholds . using infinitesimal perturbation analysis ( ipa ) , </S>",
    "<S> we derive online gradient estimators of a cost metric with respect to these threshold parameters and use these estimators to iteratively adjust the threshold values through a standard gradient - based algorithm so as to improve overall system performance under various traffic conditions . </S>",
    "<S> results obtained by applying this methodology to a simulated urban setting are also included .    </S>",
    "<S> stochastic flow model ( sfm ) , perturbation analysis , stochastic hybrid system ( shs ) , traffic light control . </S>"
  ]
}
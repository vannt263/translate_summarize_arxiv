{
  "article_text": [
    "the tcp protocol without an additional encryption and authentication layer is inherently vulnerable to man - in - the - middle attacks .",
    "an attacker that has a way to intercept network traffic between tcp end points , can easily read and alter the communication .",
    "off - path attacks , in which the attacker can not intercept network traffic , are much harder to execute . along the years several weaknesses in the protocol or particular implementations that made off - path attacks easier were disclosed .",
    "protocol specification was improved and many vendors fixed implementations to close discovered holes . a tcp connection between hosts that implement the newest recommendations ( @xcite , @xcite , @xcite ) is believed to be reasonably well protected against off - path attacks .",
    "a tcp session is protected by three secret numbers : a 16-bit ephemeral port and two 32-bit sequence numbers , one for each side of the connection .",
    "other fields , such as ip addresses of end points and a server port , are easy to determine in many scenarios .",
    "each tcp segment exchanged within an established connection carries all three secret values . for a segment to be accepted",
    ", it must contain a correct ephemeral port number , its sequence number must be within receiver s window and a sequence number the segment is acknowledging ( acknowledge number ) must be acceptable . according to the recent recommendations",
    ", an ephemeral port should be randomly picked from a 1025 - 65535 range and an acknowledge number should be accepted only if it is equal to the next octet to be sent or lower by at most largest sender window seen. if an end point follows these recommendations , the attacker needs @xmath0 attempts to generate an acceptable segment .",
    "assuming both windows have 65 kb , about @xmath1 attempts are needed .",
    "if the end point follows strict rst validation rules , which require rst segment to have a sequence number equal to the next expected sequence number , the attacker needs @xmath2 attempts to blindly reset the connection , which is also about @xmath1 .",
    "the number is large enough to make blind attacks impractical in most scenarios .",
    "the attacker would need to push segments for 500 hours at 100gb / s rate to have one segment accepted .",
    "even if a segment is accepted , the probability that it lines up with a start of a window is only @xmath3 .",
    "thus , a successful blind attack can corrupt or reset the session , but it has low chances of inserting a meaningful payload in a correct place .",
    "while the risk of accepting spoofed tcp segments as valid is recognized and well studied , the recommendations and implementations overlook the risk of responding to rejected segments . a tcp layer",
    "can either silently drop a rejected segment or respond to it ( with an ack or a rst ) .",
    "the action to perform differs between different implementations of the protocol .",
    "it was originally specified in the event processing section of rfc 793  @xcite , but new systems , especially firewalls , do not fully follow the rfc , but implement stricter filtering rules , as for example described in  @xcite . these new rules are carefully specified to preserve interoperability between different implementations .    if for a particular tcp implementation conditional response to a rejected segment depends on one of secret values set in the segment , and if an attacker can discover that a system responded to a spoofed segment , the tcp session can be compromised .",
    "the attacker can determine if a tested secret value satisfied certain condition ( an ephemeral port was correct , a sequence number was in window , an acknowledge number was acceptable ) .",
    "the secrets can be revealed in separate steps , each of the steps requires relatively small resources .",
    "congestion of a queue shared between the off - path attacker and the targeted tcp stream is a side channel through which the attacker can determine if the tcp layer responded to spoofed segments .",
    "detecting negligible load caused by a single response would be hard in practice , but the attacker can send a sequence of segments of any desired length . if each segment from the sequence is answered , the answers can cause a substantial traffic spike or even queue overflow .",
    "figure [ reflection_scan ] illustrates the technique .",
    "a high correlation between traffic patterns of users sharing a routing resource was demonstrated in  @xcite . the authors monitored ping round trip time to a router that connected a user to the internet and compared the measurements with traffic patterns generated by the user s online activities . in this technique the eavesdropper was passive and",
    "did not send any packets to trigger traffic spikes and gain additional information .",
    "the attack described in this paper shares a lot of similarities with well known off - path techniques that exploit weak implementations of ip i d generation mechanism .",
    "some legacy systems increase the i d field of subsequent ip packets that leave a machine by one .",
    "this provides a side channel to determine if a host sent a packet in response to incoming traffic .",
    "the channel can be used to perform stealth port scans  @xcite or to execute off - path attacks against established tcp connections  @xcite .",
    "contrary to the technique described in this paper , the exploitation of ip i d channel requires an attacker to establish a legitimate , bidirectional communication channel to a vulnerable host .",
    "today firewalls commonly disallow creation of such channels to client machines .",
    "this document concentrates on compromising tcp session , but the technique can also be used to perform a stealth port scan analogous to the one described in  @xcite .",
    "the authors of  @xcite showed that tcp congestion control mechanism can be exploited by a malicious receiver to improve performance of his / her connection at the cost of others .",
    "applicability of such technique for a denial of service attack was studied in  @xcite . in simulated environment",
    "the authors were able to significantly decrease the bandwidth of participating tcp connections .",
    "security assessment of the tcp  @xcite explains that such attacks can be executed blindly by an off - path attacker .",
    "congestion control mechanism is driven by ack segments and tcp layer can be easily tricked to generate acks by spoofed segments with incorrect sequence numbers .",
    "as in case of most off - path attacks , the attacker must be able to send spoofed ip packets to one end of the targeted connection .",
    "it is also assumed that ip addresses of both ends and a port number of a server are known to the attacker . throughout the paper ,",
    "the end point to which spoofed segments are addressed is called the victim , the second end point is called the victim s peer.    in addition to these usual requirements , the attacker must be able to send legitimate traffic probes through ( or to ) one of the machines ( a router or an end point ) on the path of the targeted tcp traffic .",
    "ideally , the machine should be a bottleneck for the tcp connection .",
    "as described in  @xcite , a good candidate is an edge router connecting the victim to the internet .",
    "the probes can be icmp pings , but also segments exchanged within a legitimate tcp connection , anything that would allow to detect changes in traffic load of the bottleneck",
    ".    there are various factors that influence applicability of the attack :    * available bandwidth and time . the bigger the bandwidth between the attacker and the victim the better .",
    "the smaller the bandwidth between the victim and its peer the better .",
    "* bottleneck s natural traffic patterns .",
    "the attack is harder if the traffic traversing the bottleneck is large or has variable characteristic .",
    "* network topology .",
    "the attack is easier if spoofed segments from the attacker to the victim do not traverse the bottleneck , and thus do not disturb traffic probes sent by the attacker .",
    "* bottleneck s queuing policy .",
    "good isolation of traffic coming from different users can impede the attack . * traffic measuring and analyzing technique .",
    "advanced techniques can increase the attack feasibility in adverse scenarios .",
    "it is beyond the scope of this paper to determine the practical limits of the technique .",
    "the results of performed experiments can provide a reference point for analyzing applicability of the attack in different scenarios .",
    "the proof of concept can be used a starting point for further experiments .",
    "the attack requires much fewer resources than truly blind off - path attack , but the requirements are still significant enough to make it impractical in many real - life scenarios .",
    "the experiments were performed in favorable for the attacker , but not improbable conditions .",
    "the attacker was sharing an edge router with the victim .",
    "the router had 2500kb / s downlink and 320kb / s uplink connection to the internet .",
    "the attacker was connected to the victim with 100mb / s link , but did not have direct access to the victim s traffic .",
    "three different scenarios were considered :    * idle tcp connection with negligible natural traffic traversing the bottleneck .",
    "this scenario was the easiest one , induced responses constituted substantial part of bottleneck s traffic . *",
    "the victim downloading data at full speed ( saturated downlink ) . * the victim uploading data at full speed ( saturated uplink ) .",
    "the attacker sent ping requests to a router one hop beyond the edge router .",
    "this ensured ping packets and segments sent by the victim in response to spoofed traffic shared an outgoing queue of the edge router . when the link to the outside world was idle , the ping round trip time was about 20ms , when the link was saturated , the rtt increased to about 700ms .",
    "two systems were analyzed .",
    "windows xp sp3 with firewall enabled and linux 3.0.0 .",
    "linux had netfilter firewall enabled with following commands :    ....    iptables -a input -m state \\",
    "--state established -j accept ;    iptables -a input -j drop ; ....    this is a common configuration for a client machine .",
    "all incoming traffic that it not directed to connections initiated by the protected machine is dropped .",
    "the two tested systems implement different rules for processing tcp segments . to determine how a host protected by a firewall responds to an incoming segment two steps need to be analyzed : is firewall going to drop the segment and if not , how tcp layer is going to handle the segment ? the differences between the two tested systems come from the first step - netfilter imposes stricter filtering rules ( @xcite ) than windows xp firewall . the second step for both systems",
    "is the same ( in respect to processing rules exploited by the attack ) and closely follows rfc 793 .",
    "processing rules that are important from the attack perspective are briefly explained in following sections .",
    "the proof of concept that was used to obtain experimental results can be found at  @xcite .",
    "the paper does not discuss low level details of the implementation , an interested reader is encouraged to study a documentation accompanying the code .",
    "it is important to note that no bugs in tcp implementations of targeted systems were exploited .",
    "assuming a shared router implements fifo queuing policy , delay introduced by a series of @xmath4 packets of equal size is : @xmath5 the victim is tricked to generate ack segments , which have about 80 bytes ( assuming about 40b for layer two header , 20b for ip and about 20b for tcp headers ) . applying the formula to the experimental setup ,",
    "a theoretical delay introduced by 30 ack segments should be @xmath6 .",
    "it is three times more than the ping rtt for the idle link ( 20ms ) , and should be easily detectable in the easiest experimental scenario .",
    "1000 acks should introduce a delay of @xmath7 .",
    "this is about three times more than the ping rtt for the saturated link ( 700ms ) , and should be easily detectable in the download and upload experiments .",
    "event processing section of rfc 793 requires an ack segment to be sent in response to any segment that belongs to an established connection ( has correct ip addresses and ports ) but is outside of a window ( has an incorrect sequence number ) .",
    "if a host adheres to this specification , and is protected by a firewall that silently drops segments not belonging to any connection ( a common case ) , the attacker can use segments with an incorrect sequence number to determine a client port number .",
    "windows and linux tcp stacks follow the rfc and respond with ack to any segment with an incorrect sequence number .",
    "linux netfilter firewall uses stricter validation rules to drop segments that are not part of a connection :    * segments without ack flag are dropped . *",
    "acknowledge number is validated .",
    "it is accepted only if it is equal to the next octet to be sent or lower by at most @xmath8 .",
    "acknowledge number validation makes it much harder to use segments with an incorrect sequence number to search for a client port .",
    "but there is a hole :    * segments that have both syn and ack flag set are always accepted and passed to the tcp layer .",
    "tcp layer responds with ack to such segments if their sequence number is outside of a window .",
    "this allows to discover an ephemeral port of a netfilter protected host .",
    "the only drawback is that if a sequence number of syn - ack segment accidentally happens to be in - window , linux responds with rst and the connection is closed .",
    "the probability of this is low : @xmath9 .",
    "figure  [ port_scan ] shows how ping rtt increases when a sequence of spoofed segments is directed at the correct ephemeral port .",
    "a spike in rtt occurs reliably , but usually it is not the only detected spike .",
    "proof of concept code repeated all queries for which a spike was detected until a single query was left .",
    "this allowed to reveal an ephemeral port with a high success rate .    the lower bound on a query time is a single ping rtt , because at least one ping needs to be sent to determine the query result . even for a relatively short rtt of 20ms ,",
    "if a full range of 64k ephemeral ports needs to be scanned , the sequential scan would require at least 21 minutes .",
    "when bandwidth from the attacker to the victim is large , continuous range of ports can be probed in each sequence of spoofed segments . such sequence can be interpreted as a query is the connection using a port between x and y?. if a part of the sequence is reflected , the answer is yes , and a sequential search can be used to find the exact port number . in the experimental setup such range queries worked well and considerably reduced time of the scan ( see figure  [ port_scan_range ] ) .",
    "table  [ port_results ] summarizes experimental results .",
    "the results were similar for both tested systems .",
    "the attacker can further improve performance if the targeted connection uses ephemeral port from a smaller range .",
    "[ cols= \" < , < , < , < , < , < , < \" , ]     knowing an acceptable acknowledge number , binary search can be used to find the sequence number of the next octet to be sent by the victim .",
    "this requires @xmath10 queries .    if the victim s peer snd.nxt needs to be known , the attacker has several ways to reveal it :    *",
    "segments with a single byte of data can be used .",
    "netfilter validates sequence numbers of segments that carry data .",
    "if the number is in - window , the segment is passed to the tcp layer which generates ack in response because data is out of order .",
    "if the sequence number is out of the window , netfilter drops the segment .",
    "this technique carries the risk of corrupting the session with the accepted byte . *",
    "if the attacker is able to send spoofed traffic to both ends , and to reliably monitor traffic spikes of both ends , the other end of the connection can be targeted . if the other end follows the rfc 793 ,",
    "only 32 queries are needed to find the second snd.nxt .",
    "if it is protected by netfilter , the steps described in this section can be used again .",
    "* resource intensive search for a sequence number that does not generate any response can be performed in a similar way it was done for a system following rfc 793 in the previous subsection .",
    "the only difference is that acceptable acknowledge number is already known , only in - window sequence number needs to be found .",
    "different tcp stacks may implement different segment processing rules , possibly closing some leaks described in this paper , or opening new ones .",
    "for example , to prevent a blind rst injection attack described in  @xcite , a new recommendation for rst processing was created  @xcite . according to rfc 793 any in - window",
    "rst should be accepted and should reset the connection .",
    "the stricter and safer rules require rst to have sequence number exactly equal to the next expected sequence number , otherwise , in - window rst segment should generate ack in response without resetting the connection .",
    "the document advises to optionally throttle such acks .",
    "if such acks are not throttled , the attacker can query for a window using rst segments with little risk of accidentally resetting the connection .",
    "tcp fast retransmit  @xcite can be exploited to trigger substantial traffic spikes with relatively small number of spoofed segments .",
    "fast retransmit is activated by 3 duplicated acks .",
    "tcp layer interprets such duplicates as a message that a segment was lost but 3 subsequent segments successfully arrived at the destination .",
    "each following duplicated ack is interpreted as an acknowledgement that another segment was successfully received , but the lost segment still did nt reach the destination .",
    "because segments are successfully leaving the network , sender sends a new segment in response to each such duplicated ack . a burst of acks can trick the sender to send a full window of data in a very short time as described in  @xcite .",
    "the amplification factor for a network with mtu 1500 is 37 .",
    "this allows the attacker to trigger observable traffic spikes with much fewer spoofed segments .",
    "the technique can also be used to detect ephemeral port number of a host that does not filter segments addressed to not existing connection but responds with rst to each such segment . a sequence of spoofed segments directed to an incorrect port , results in a sequence of rsts that are silently dropped by the other end point with no side effect . a sequence of spoofed segments directed to the correct port , results in a sequence of acks that trigger the other side to abruptly send a full window of data .",
    "if the attacker can detect the spike in traffic caused by this window of data , the port can be determined .",
    "the technique was not tested in practice .",
    "to be fully protected against side channel information leakage described in this paper , the protocol would need to ensure that not authenticated segments are never answered . if it was the case , the only information that would leak to an off - path attacker , would be that the segment was not authenticated .",
    "providing authentication mechanism is strong enough to make probability of generating acceptable request negligible , the attacker learns nothing through the side channel that could nt be figured out without mounting the attack .",
    "the tcp authentication option  @xcite provides exactly such mechanism , but the option is not widely used .    in case of sequence numbers based authentication",
    ", it can be difficult to ensure in a backward compatible way that the protocol never responds to rejected segments .",
    "sequence numbers have double purpose .",
    "they were intended primary for detecting duplicates , lost and out of order segments .",
    "the use of sequence numbers as a protection mechanism against an adversary was emergent , not even mentioned in the original specification .",
    "if netfilter filtered syn - ack segments addressed to an established connection and dropped ack segments with invalid sequence numbers , the attack against a system protected by netfilter would be probably impossible .",
    "but such stricter filtering rules require very careful analysis to prevent hanged connections in corner cases .",
    "throttling responses to rejected segments should be sufficient to make the information leakage non - exploitable in practice .",
    "throttling mechanism for acks generated in response to in - window rsts and in - window syn - acks was proposed in  @xcite . to be effective , the mechanism would need to throttle also acks generated in response to other rejected segments .",
    "the attack is the easiest if the attacker shares an edge router with the victim .",
    "the first few hops are also the best place to reliably filter spoofed ip packets .",
    "network that is configured to drop such traffic is protected at least against a local attacker .",
    "queueing policy that better isolates traffic coming from different users could make the attack more difficult to execute .",
    "a privacy protecting scheduling policy was studied in  @xcite .",
    "the authors were able to significantly reduce the correlation between traffic patterns of users sharing a routing queue without introducing prohibitive performance degradation .",
    "the designed policy reduced the leakage of information regarding the traffic pattern of a user , but the traffic load of a user was still leaking through the increased packet processing time . to execute the attack described in this paper , it is enough to detect increased traffic load , knowing the exact traffic pattern is not necessary .",
    "further research is needed to assess the effect of different queuing policies on the attack applicability .",
    "the paper demonstrated how changes in processing time of packets that traverse a shared queue can reveal if a host responded to spoofed traffic .",
    "it was shown that in case of the tcp protocol , being able to determine if a system responded to spoofed segments is sufficient to compromise the session , direct interception of the tcp traffic is not required .",
    "two different tcp implementations with different processing rules were examined .",
    "both implementations responded to partially incorrect tcp segments , allowing the attacker to determine values of secret fields in separate steps .",
    "substantial part of the work was dedicated to experiments to determine if the attack is practical in real - life scenario and to provide estimates of resources needed .",
    "the paper concluded with the discussion of possible attack prevention mechanisms .",
    "the work did not try to determine the practical limits of the technique .",
    "there is a lot of room for further experiments in scenarios more adverse for the attacker ( lower bandwidth between the attacker and the victim , busy bottleneck shared between many users , different queuing policies ) .",
    "provided proof of concept can be used as a starting point for such experiments .",
    "the paper also did not attempt to provide a detailed survey of applicability of the technique against popular tcp implementations .",
    "finally , the paper concentrated on compromising tcp session , but the presented technique can be applicable in other scenarios .",
    "the author would like to pass a non - spoofed ack to for reviewing first drafts of the paper , valuable comments and discussions ."
  ],
  "abstract_text": [
    "<S> the paper demonstrates how traffic load of a shared packet queue can be exploited as a side channel through which protected information leaks to an off - path attacker . </S>",
    "<S> the attacker sends to a victim a sequence of identical spoofed segments . </S>",
    "<S> the victim responds to each segment in the sequence ( the sequence is reflected by the victim ) if the segments satisfy a certain condition tested by the attacker . </S>",
    "<S> the responses do not reach the attacker directly , but induce extra load on a routing queue shared between the victim and the attacker . </S>",
    "<S> increased processing time of packets traversing the queue reveal that the tested condition was true . </S>",
    "<S> the paper concentrates on the tcp , but the approach is generic and can be effective against other protocols that allow to construct requests which are conditionally answered by the victim . </S>",
    "<S> a proof of concept was created to assess applicability of the method in real - life scenarios . </S>"
  ]
}
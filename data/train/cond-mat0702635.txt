{
  "article_text": [
    "in this paper , we examine some important issues involved in studies of rigidity of elastic networks in three dimensions . in general , the 3d rigidity problem is much more difficult computationally than its 2d analog that has been studied extensively using an efficient topological algorithm , the pebble game . in a way , this parallels the ising model that is much used for the theory of phase transitions , in that exact solutions are available in 2d but not in 3d  @xcite .",
    "there is an important difference , however , that in rigidity , exact means an algorithmic solution , rather than an analytic one .",
    "we start by giving an extended discussion of the issues involved in 3d rigidity that make it such a challenging problem .",
    "we then develop an exact algorithm for small systems ( up to several hundred or perhaps thousand sites ) where a solution for geometric quantities , such as identifying the rigid clusters and the stressed regions , as well as counting the number of floppy modes , can be obtained .",
    "this serves as a benchmark for a version of the much faster pebble game algorithm that we develop , and shows that while the latter is approximate in general , for central - force randomly diluted lattices its errors are very small indeed and so that it may be regarded as operationally exact .",
    "we then use the pebble game to study bond and site rigidity percolation on fcc and bcc lattices .",
    "the transition appears to be massively first order in all these cases , except for site percolation on the fcc lattice where it is likely second order .",
    "we hope our critical assessment of this important problem will be useful for mathematicians and computer scientists who are trying to develop rigidity algorithms in 3d , for physicists interested in phase transitions , and for those involved in studying the rigidity of 3d systems in the laboratory .",
    "an elastic network is a set of _ sites _ in space and pairwise _ constraints _ between these sites ; a constraint is a statement that the distance between a certain pair of sites has to take on a certain value , and if this value is different , there is an associated potential energy cost .",
    "constraints can be modeled as elastic springs , although whether these springs are harmonic or not is not important .",
    "both static and dynamic properties of such an elastic network depend in principle on the details of the potential energy function . however , there are certain properties that only depend on the geometry of the network . among them : the number of _ floppy modes _ ( linearly independent infinitesimal motions that do not deform any constraints and thus do not cost energy ) ; rigid cluster decomposition ( a rigid cluster is a set of sites that move together as a rigid body in any floppy motion ) ; some aspects of stress ( particularly , what constraints are stressed ) ; and some other related properties .",
    "in fact , typically such properties are determined solely by the network _ topology _",
    "( i.e. , what sites are connected to what sites by constraints ) : most networks with different geometries but the same topology have the same number of floppy modes , same rigid clusters , etc .",
    ", and only an infinitesimal fraction of _ non - generic _ networks that are special in some way ( for instance , having some constraints that are parallel ) may differ in this respect from the rest . _",
    "rigidity theory _",
    "@xcite deals with properties of this type .",
    "below , we outline some aspects of rigidity theory that will be useful to us , without detailed proof or explanation ; for details , see the above references .",
    "we will assume that the networks we are dealing with are always _",
    "generic_. generically , there is also no difference between rigidity with respect to infinitesimal and finite deformations , and we will assume that this is the case as well .",
    "it is , of course , always possible and straightforward in principle to analyze rigidity properties of a network by constructing a particular realization of the potential energy function consistent with the given topology and then , assuming infinitesimal displacements and thus the harmonic approximation , diagonalizing the dynamical matrix to find the zero - frequency ( floppy ) modes ; likewise , stressed constraints can be obtained by relaxing the network , etc .",
    "such methods are , however , relatively slow , often scaling ( particularly in the case of dynamical matrix diagonalization ) as the cube of the network size ; also , they are subject to inevitable round - off errors , which may , for instance , make zero eigenvalues of the dynamical matrix slightly non - zero etc .",
    "yet methods of this type are the only choice if one needs detailed information , such as the actual values of the frequencies of all modes , the eigenvectors of the dynamical matrix , etc .",
    "( assuming , of course , that the actual potential energy function , and not just the topology , is known ) .",
    "but if we are only interested in those properties that depend solely on the topology , clearly such methods are somewhat `` irrational '' : they take some irrelevant information ( all force constants and detailed geometry ) as input , and produce a lot of unnecessary output ( such as all the eigenvalues and eigenvectors of the dynamical matrix , while we only want the number of zero eigenvalues ) .",
    "thus there may be more rational methods that deal with network topology directly , never constructing a physical realization in the process .",
    "such methods may be faster and also , since the topology information is discrete , not subject to round - off errors . indeed , such methods have been found , as discussed below .",
    "historically , the first and simplest of such methods ( but , unfortunately , only approximate ) is _ maxwell counting _",
    "@xcite , due to j.c .",
    "maxwell . consider a @xmath0-dimensional elastic network of @xmath1 sites .",
    "dimensionality @xmath0 here ( and elsewhere in this paper ) refers to the dimensionality of space in which the sites can move , rather than the dimensionality of the network itself .",
    "it is possible that some of the constraints in the network can not be satisfied simultaneously ; it is useful , _ just for the sake of this consideration _ , to change their lengths so that they fit exactly and are not strained ; it turns out that this does not affect the number of floppy modes in generic networks and so can be used for the floppy mode counting that we do here ( but can not be used to find stress , of course ) .",
    "if the network has no constraints , all degrees of freedom correspond to floppy modes whose number is thus @xmath2 .",
    "each constraint , in the linear approximation , is some linear relation between the coordinates of sites in the system .",
    "then , when a constraint is added to the network , it reduces the dimensionality of the space of allowed infinitesimal motions by 1 , _ if _ the relation between the coordinates that this constraint represents is linearly independent from the rest . if one assumes that all constraints are like this ( i.e. , _ independent _ ) , then the number of floppy modes is @xmath3 where @xmath4 is the number of constraints and @xmath5 denotes the number of floppy modes in the maxwell counting approximation .",
    "of course , this result for the number of floppy modes is only approximate , since in reality not all constraints are independent . in a generic network ,",
    "non - independent constraints are those and only those that are inserted between two sites that are already mutually rigid even before the insertion  such a constraint does not restrict floppy motions further and in this sense is _ redundant _ ; it does not decrease the number of floppy modes .",
    "so the correct result for @xmath6 is actually @xmath7 where @xmath8 is the number of redundant constraints .",
    "the maxwell counting approximation neglects @xmath8 ; a more accurate method would require a way to evaluate it . note that if the lengths of constraints are restored ( i.e. , they are no longer required to fit exactly ) , then generically , a redundant constraint inserted in the network becomes strained and introduces stress .",
    "thus ( again generically ) stress is present if and only if there is redundancy ( @xmath9 ) .",
    "since the number of floppy modes in a network of size @xmath10 can never be less than @xmath11 ( the number of motions of a rigid body ) , then it is clear that if @xmath12 for the network _ or _ for any of its subnetworks of size @xmath13 , then @xmath14 ( i.e. , there must be some redundant constraints ) .",
    "a more interesting question is if the converse is also true . in other words ,",
    "if @xmath14 , is it true that there is at least one subnetwork of size @xmath13 , for which @xmath15 ( @xmath16 being the number of constraints within the subnetwork ) ? in 2d ( @xmath17 ) , for generic networks the answer is yes , and this statement is known as the _ laman theorem _",
    "it is also _ conjectured _ to be true for a particular class of 3d networks , known as _ bond - bending _ networks .",
    "a bond - bending network is defined by a set of _ bonds _ ; constraints then connect all first neighbors ( _ bond - stretching _ or _ central - force _ constraints ) and all second neighbors ( _ bond - bending _ or _ angular _ constraints ) .",
    "the conjecture is a part of what is known as the _ molecular framework conjecture _",
    "@xcite ; the origin of this name is the fact that bond - bending networks are a natural model for covalent molecules ( as well as covalent disordered solids ) , since covalent bonds have strong bond - stretching and bond - bending interactions associated with them , and all other interactions are usually weaker .",
    "this conjecture is not proved rigorously ; however , no counterexamples have been found in more than 20 years since its formulation . for general ( non - bond - bending ) 3d networks",
    "there are violations of the molecular framework conjecture , as discussed in detail below .",
    "note that for bond - bending networks , we are making a careful distinction between _ bonds _ and _ constraints _ : the set of bonds specifies what sites are considered first neighbors ( those that are connected by a bond ) , and then constraints connect both first and second neighbors . on the other hand , in _ central - force networks _ that we consider in section  [ cfnets ] ,",
    "there is one constraint per bond and we use `` bonds '' and `` constraints '' interchangeably .",
    "the laman theorem in 2d and the molecular framework conjecture for 3d bond - bending networks enable a convenient and fast approach to finding @xmath8 exactly .",
    "start with the `` empty '' network ( all sites present but no constraints ) .",
    "such a network obviously has @xmath18 .",
    "now , add constraints one by one checking each of them for redundancy by testing all subnetworks that the newly added constraint belongs to .",
    "if the constraint is redundant , @xmath8 is increased by one ; otherwise it is unchanged .",
    "thus , @xmath8 is known at all times during the network construction process .",
    "one very important caveat in the case of 3d bond - bending networks is that even if the final network being analyzed is bond - bending , this is not necessarily true for the intermediate networks obtained during the construction process ( and , in fact , can not in general be true for all of them ) .",
    "for this reason , it is important to keep the networks as close to being bond - bending as possible .",
    "namely , a constraint coinciding with a bond ( a first - neighbor constraint ) should always be inserted first , and all second - neighbor constraints induced by the just inserted first - neighbor constraint ( i.e. , those second - neighbor constraints that span the angle formed by the just inserted first - neighbor constraint with previously inserted first - neighbor constraints ) should follow immediately , before any other first- or second - neighbor constraints are inserted .",
    "while this does not keep the network strictly bond - bending at all times , deviations are as small as possible , and it is assumed ( as a part of the molecular framework conjecture ) that all intermediate networks obey the statement of the conjecture as well .",
    "another issue is rigid cluster decomposition .",
    "rigid clusters in 2d and in 3d bond - bending networks have a useful property : they are always _ rigid by themselves _ , i.e. , they remain rigid when separated from the rest of the network .",
    "a corollary of this is that rigid clusters in such networks are always _ contiguous _ : when moving from any site of the cluster to any other site belonging to it along the network constraints , it is always possible to choose a path such that only sites belonging to the same cluster are passed .",
    "simply stated , rigid clusters always `` come in one piece . ''",
    "these properties mean that , first of all , a rigid cluster of size @xmath19 with all redundant constraints removed will always have exactly @xmath20 constraints within itself ; also , contiguity allows easy cluster mapping , by starting with an arbitrary group of @xmath0 mutually rigid sites and then moving outwards until the region that has emerged is fully surrounded by sites not rigid with respect to at least one of the @xmath0 initial sites .",
    "regarding stress determination , an important fact is that in 2d and 3d bond - bending networks , the set of all stressed constraints can be represented as the union of _ stressed regions _ , each of which is _ stressed by itself _ , i.e. , remains stressed when separated from the rest of the network , and has a property that it is possible to find a set of sites such that all constraints connecting sites within the set belong to the region and all constraints connecting sites at least one of which does not belong to the set do not belong to the region .",
    "in other words , using graph theory terminology , each stressed region is an _ induced subgraph _ of the graph whose vertices are the network sites and whose edges are the constraints .",
    "an algorithm using the above ideas , known as the _ pebble game _ , was proposed first for 2d networks  @xcite and then for 3d bond - bending networks  @xcite .",
    "the idea is to relate the constraints to the degrees of freedom for all subnetworks simultaneously , by assigning _ pebbles _ to degrees of freedom and then matching those pebbles to constraints .",
    "the details of the 3d version of the algorithm are described in the next subsection .    from the description of the pebble game",
    ", it will become clear that it relies significantly on the three special properties of 2d and 3d bond - bending networks stated above : the molecular framework conjecture ; the contiguity of rigid clusters and their being rigid by themselves ; and stressed regions being induced subgraphs . in section  [ nonbb ] we demonstrate that unfortunately , all of these properties are violated in general in 3d networks that are not fully bond - bending .",
    "creation of a pebble - game - type algorithm that does not rely on these properties is problematic and a way to do this has not been found to date . while partial fixes ( covering some but not all possible situations ) are possible , in our generalization of the pebble game that we introduce in section  [ peb ] , we choose to ignore these problems completely .",
    "this , of course , makes the algorithm only approximate , and to estimate the accuracy of the new pebble game , an exact but slower algorithm , the _ relaxation algorithm _ ,",
    "is introduced in section  [ relax ] .",
    "some general considerations on the accuracy of the pebble game and how this accuracy can be estimated using the relaxation algorithm are given in section  [ errors ] .",
    "in the rest of the paper , we look at a few applications of the new algorithms . in section  [ cfnets ]",
    ", we consider central - force networks ( i.e. , those that have only first - neighbor constraints ) obtained by randomly removing bonds ( bond - diluted networks ) or sites ( site - diluted networks ) from regular three - dimensional lattices . in this case , we show that the pebble game is essentially exact for the most interesting quantities , such as the number of floppy modes and the size of the largest rigid cluster , although some very small clusters may be misidentified . on the other hand ,",
    "the pebble game is much less successful in some other cases , as we show in section  [ edgesharing ] .",
    "we use the success of the pebble game for randomly diluted central - force networks to study _ rigidity percolation _ on such networks .",
    "an introduction to the subject of rigidity percolation is given in the last subsection of this section , after the description of the old pebble game algorithm .",
    "the 3d bond - bending version of the pebble game algorithm is as follows  @xcite .",
    "starting with the empty network without constraints , three _",
    "pebbles _ are assigned to each site , so that the total number of pebbles is equal to the total number of degrees of freedom , @xmath21 .",
    "a pebble can be free , or it can cover one of the constraints associated with the site to which the pebble belongs .",
    "initially , there are no constraints , so all pebbles are free . as constraints",
    "are added to the network , all _ independent _ ( non - redundant ) constraints ( detected as described below ) are covered by a pebble from either side and should remain covered at all times during the pebble game process . since the number of independent constraints is @xmath22 , then , according to eq .",
    "( [ maxexact ] ) , the number of free pebbles is equal to the number of floppy modes .",
    "a constraint can be covered at either end , and this allows freeing of pebbles . a pebble covering a constraint",
    "can be freed , if there is a free pebble available at the other end of the constraint ; then that free pebble covers the constraint and the pebble covering it is released ; this process may have to be repeated several times , if a pebble is free not at the end of the constraint , but at one of its neighbors , neighbors of neighbors etc . as a consequence , checking for whether freeing a pebble at a given site is possible starts at that site , then looks at what constraints the pebbles belonging to the site cover and checks the site s neighbors connected to it by those constraints ; if no free pebbles are found there , the procedure is repeated until a free pebble is found or until no unchecked sites connected to checked sites by constraints covered by pebbles belonging to checked sites remain .",
    "if the search for a pebble has failed , the region over which the search has proceeded ( the failed pebble search region ) is recorded , which is important for finding stressed regions , as described below .",
    "each newly inserted constraint is tested for independence in the following way .",
    "first , all three pebbles need to be freed at each of the two ends of the new constraint  this is always possible , unless the new constraint coincides with a previously inserted one , in which case the new constraint is obviously redundant and should not be tested .",
    "then , with all six pebbles kept free , an attempt is made to free one more pebble at each neighbor of the ends of the new constraint in turn .",
    "in fact , even fewer checks are needed : for a bond - stretching ( first - neighbor ) constraint , just first neighbors at one end need to be checked ( second neighbors need not be checked , even though they are connected with a second - neighbor constraint ) ; for a bond - bending ( second - neighbor ) constraint , only the vertex of the angle that the constraint spans needs to be checked .",
    "if _ all _ of these attempts are successful , then the new constraint is independent and should be covered by one of the six pebbles at its ends . otherwise , the constraint is redundant and should not be covered . as a reminder",
    ", constraints should be inserted in a particular order : a first - neighbor constraint is inserted first and then all second - neighbor constraints induced by it should be inserted immediately afterwards before another first - neighbor constraint is inserted . just as the very similar 2d algorithm relies on the laman s theorem , as explained in detail in ref .",
    "@xcite , the above procedure assumes the validity of its generalization , the molecular framework conjecture .",
    "whenever a redundant constraint is inserted , it will create additional stress in the network and may increase the set of constraints that are stressed .",
    "the redundancy is detected when a pebble search fails , and the region of the failed pebble search should be merged with such regions found previously to find the part of the network that is stressed .",
    "once one failure to find the pebble is detected , there is no need to continue further checks in order to find the stressed region  the failed search regions will coincide for all neighbors for which the search fails .",
    "regions of failed pebble search are defined as sets of _ sites _ passed when searching for a pebble , and _ all _ constraints connecting such sites are stressed .",
    "of course , this implies an important property of bond - bending networks that we have already mentioned  that any stressed region is always an induced subgraph of the graph whose vertices are the sites and whose edges are the constraints .    during the pebble game , whenever a large stressed region is detected , the _ tetrahedralization _ procedure  @xcite ( similar to the triangularization procedure in 2d  @xcite )",
    "is commonly done to convert the stressed region into an isostatic ( rigid but unstressed ) one .",
    "this speeds up further pebble searches significantly .",
    "we do not consider this procedure here and do not implement it in our treatment of general ( non - bond - bending ) 3d networks .",
    "this limits the network sizes we can routinely consider to perhaps @xmath23 sites or so , while with tetrahedralization @xmath24-site or even larger networks could be considered , so the implementation of this procedure in the future is desirable .",
    "once the network construction is finished , the information on the number of floppy modes and the stressed constraints is available .",
    "the next stage is rigid cluster decomposition .",
    "one thing to keep in mind is that unlike in the usual _ connectivity _ percolation , a site can belong to several clusters simultaneously ( imagine , for instance , two rigid objects sharing a common point , a _ pivot _ , or a common axis , a _ hinge _ ) ; but choosing three mutually rigid sites identifies a cluster uniquely : any three chosen sites can belong simultaneously to at most one cluster .",
    "bond - bending networks are special : among all clusters to which a given site belongs , there is always one and only one to which all of its neighbors also belong .",
    "for this reason , for a bond - bending network rigid cluster decomposition can be given by specifying for each site the unique cluster to which this site belongs with all of its neighbors .",
    "given the above , it is convenient to start mapping a rigid cluster by choosing a site and two of its first neighbors .",
    "such three sites are always mutually rigid ( indeed , they form an angle and bond angles are constrained in bond - bending networks ) and thus specify a rigid cluster .",
    "a maximum number of pebbles are freed at the three chosen sites .",
    "it is always possible to free exactly 6 pebbles . after this , neighbors of the three chosen sites are picked in turn , and for each of such sites an attempt is made to free a pebble while keeping the six freed pebbles at the first three sites free . if freeing an extra pebble fails , the site being tested is rigid with respect to the first three ; moreover , this is true for the whole region of the failed search .",
    "but if freeing an extra pebble succeeds , then the site is not rigid with respect to the first three sites . after all neighbors of the three initial sites are checked and if at least some are found rigid with respect to the initial sites , neighbors of the neighbors found rigid are checked etc .",
    "the process continues until no unchecked neighbors of the sites deemed rigid with respect to the initial three sites remain . at this point mapping of the cluster",
    "is complete , since all clusters are contiguous .",
    "all sites such that all neighbors of them are found rigid with respect to the original three sites are assigned identical labels to specify the cluster .",
    "then another site is chosen among those that are not yet labeled , together with its two neighbors , and mapping another cluster starts .",
    "this continues until all sites are labeled , at which point rigid cluster decomposition is complete .",
    "note that this procedure uses the contiguity of rigid clusters , but also , less explicitly , their being rigid by themselves , since a region of the network not rigid by itself may contain more than six free pebbles , and thus extra pebbles besides the six freed at the first three sites may be found .",
    "after the rigid cluster decomposition process described above , for each bond in the network its end sites can have either identical or different labels . in the latter case , both ends of the bond are shared between two rigid clusters and such a bond is a _",
    "it is impossible for two clusters in a bond - bending network to share just a single site , so _",
    "pivots _ can not exist in such networks  @xcite",
    ". only first - neighbor constraints coinciding with bonds can be hinges ; this can never happen to second - neighbor constraints .",
    "it is also impossible to have a hinge that does not coincide with any constraint ( such hinges are known as _ implied _ ) .",
    "a hinge can be shared between at most two clusters .",
    "these limitations do not apply to non - bond - bending networks .    to avoid confusion",
    ", we should note that there is also a different variant of the 3d pebble game for bond - bending networks based on an equivalent representation of such networks as _ body - bar _ networks  @xcite .",
    "it is this variant that is used , for instance , in the first software for protein rigidity analysis  @xcite .",
    "however , as the body - bar representation does not apply to non - bond - bending networks , the corresponding variant of the pebble game algorithm does not extend naturally to such networks , and we do not consider it here .",
    "the concept of rigidity percolation was first introduced by thorpe  @xcite in the context of covalent network glasses ; it was subsequently studied soon after in more detail for central force networks by feng and sen  @xcite and by feng , thorpe , and garboczi  @xcite . in network glasses ,",
    "covalent bonds connecting atoms are strongly directional , meaning that there is a strong restoring force associated with changing both bond lengths and bond angles . at the same time , all other interactions are much weaker .",
    "for this reason , covalent glasses can be modeled as 3d bond - bending networks , for which the pebble game is exact .",
    "if the number of bonds per site is increased ( in practice , by changing the chemical composition ) , the networks go from overall floppy to overall rigid as the rigidity percolation threshold is crossed , at which point a percolating rigid cluster emerges .",
    "the fraction of sites in the percolating cluster ( that serves as the order parameter for the rigidity percolation transition ) grows continuously , starting from zero at the threshold , and thus the transition is said to be continuous , or _",
    "second order _",
    "@xcite ( fig .",
    "[ perc3dbb ] ) .",
    "one can also look at _ stress percolation _  whether the set of bonds that are stressed percolates .",
    "the stress percolation in random networks occurs at the same point as rigidity percolation and the behavior is similar ( fig .",
    "[ perc3dbb ] ) , although there are models in which network self - organization leads to these thresholds being different  @xcite .",
    "likewise , rigidity percolation in 2d _ central - force _ networks was considered ( 2d bond - bending percolation is equivalent to the usual , connectivity percolation ) .",
    "the result is also a second order transition  @xcite .",
    "but there are known cases in which the transition is _ first order _ , i.e. , the fraction of sites in the percolating cluster _ jumps _ from zero to a non - zero value at the transition .",
    "this has been found for `` pathological '' bethe lattices or random bond networks  @xcite ( fig .  [ bethe ] ) and networks with chemical order  @xcite , but up to now , there have been no cases where it would be observed for a regular randomly diluted network .    besides the size of the percolating cluster , the order of the rigidity percolation transition can be found by looking at the behavior of the number of floppy modes @xmath6 as a function of _ mean coordination _",
    "@xmath25 ( the average number of bonds connecting a site to other sites ) .",
    "it has been suggested  @xcite that @xmath26 serves as an analog of the free energy of the system .",
    "when a system goes through a phase transition , the free energy is continuous , but in a first order transition , its first derivative is discontinuous ; in a second order transition , the first derivative is continuous , but the second derivative shows a singularity . indeed , in the case of a regular 3d bond - bending network ( fig .",
    "[ perc3dbb ] ) , the number of floppy modes is a continuous and smooth function of @xmath25 , but there is a cusp in the second derivative , which is consistent with a second order transition ; on the other hand , for the random bond network , where the transition is first order , there is a break in the first derivative ( see the lower panel of fig .",
    "[ bethe ] ) .     for the case of random bond dilution of the diamond lattice .",
    "the results are averages over 11 networks of 125 000 sites each . rounding near",
    "the transition is due to finite - size effects .",
    "( bottom ) the number of floppy modes per degree of freedom @xmath27 for randomly bond diluted amorphous silicon ( circles ) and diamond lattices ( diamonds ) .",
    "the dashed line is the maxwell counting result .",
    "the inset shows the second derivative of @xmath28 with respect to @xmath25 .",
    "the upper panel is from ref .",
    "@xcite ; the lower panel is adapted from ref .",
    "@xcite.,width=288 ]     for a bond - bending random bond network consisting of 2- and 3-coordinated sites in 3d .",
    "the solid line is theoretical , the circles are the result of pebble game simulations .",
    "the transition occurs at @xmath29 .",
    "( bottom ) the theoretical number of floppy modes per degree of freedom , @xmath27 , for a bond - bending random bond network consisting of 2- and 3-coordinated sites in 3d .",
    "note the break in the slope at the transition .",
    "these panels are adapted from refs .",
    "@xcite and @xcite.,width=268 ]    there have also been some studies of 3d central - force elastic networks  @xcite .",
    "however , networks used by feng",
    "_ et al . _",
    "@xcite and garboczi and thorpe  @xcite were not large enough to make definite conclusions about the nature of the rigidity transition . while arbabi and sahimi  @xcite used larger networks , they only considered physical properties like elastic moduli and force distributions ; they were not concerned with geometric quantities , such as sizes of rigid clusters .",
    "lack of a fast pebble game - type algorithm made studies of 3d central - force rigidity extremely difficult . since it was known that the pebble game is not exact for 3d networks that are not bond - bending , it was assumed that the errors would make any applications of the pebble game approach unreliable . in section  [ cfnets ] , we show that this is not the case and then use the pebble game to study the rigidity percolation transition in both the bond - diluted and the site - diluted networks in 3d .",
    "for non - bond - bending networks in 3d , unfortunately , the molecular framework conjecture and other statements crucial for the application of pebble - game - type algorithms are not true in general . in this section",
    "we present a few known counterexamples .",
    "some of these were published before ( see , e.g. , ref .",
    "@xcite ) .",
    "figure  [ 2banana ] shows an example of a network for which the generalization of the laman theorem fails .",
    "this is an infamous _ two - banana graph",
    "_  @xcite .",
    "for all subnetworks with @xmath30 , @xmath31 and so there should be no redundant constraints , @xmath18 .",
    "since there are @xmath32 sites and @xmath33 constraints , there should be @xmath34 floppy modes  exactly the number that a rigid body has ( 3 translations and 3 rotations ) , so the network should be rigid .",
    "it is obvious that this is not the case , as the two `` bananas '' can rotate around the axis they share .",
    "thus , there is one internal floppy mode in addition to the 6 rigid body motions , so @xmath35 and then , according to eq .",
    "( [ maxexact ] ) , @xmath36  there is one redundant constraint .",
    "likewise , rigid clusters are no longer necessarily rigid by themselves or even contiguous .",
    "figure  [ 2banana1 ] shows the same network as in fig .",
    "[ 2banana ] , except one constraint is missing .",
    "there is still one internal floppy mode , as in fig .",
    "[ 2banana ] , but as @xmath4 is less by one , @xmath18 , which agrees with the generalization of the laman theorem . yet",
    ", the part of the network shown with thin lines is a rigid cluster , despite not being rigid by itself , when `` detached '' from the rest of the network that rigidifies it .",
    "a straightforward application of the rigid cluster decomposition procedure described above may fail to detect this rigid cluster .",
    "figure  [ 3banana ] shows an even more extreme example of a _ non - contiguous _ rigid cluster  @xcite .",
    "the three `` bananas '' in the figure are `` normal '' , contiguous rigid clusters . but",
    "in addition to that , sites marked 1 , 2 and 3 also form a rigid cluster , being mutually rigid with no other sites in the network rigid with respect to all three .",
    "this cluster is , of course , non - contiguous , and there is no way a rigid cluster decomposition procedure similar to the one described above can detect it , as it marks clusters in a contiguous fashion .",
    "there is one common feature in the networks shown in figs .",
    "[ 2banana][3banana ] . in all three cases , there are _ implied hinges _",
    "( shown in the first two figures with dashed lines ) . as a reminder ,",
    "a hinge is a straight line that for rigid clusters sharing exactly two sites goes through these two sites ; it is the axis of rotation around which the clusters can rotate with respect to each other . in bond - bending networks ,",
    "all hinges coincide with constraints ( i.e. , are _ explicit _ ) , as mentioned above , but in general , this is not necessarily the case , as figs .",
    "[ 2banana][3banana ] illustrate . in figs .",
    "[ 2banana ] and [ 2banana1 ] , there are two rigid clusters , and they share an implied hinge . in fig .  [ 3banana ] , there are three implied hinges , each shared by the non - contiguous cluster 123 with one of the three `` bananas '' .",
    "in fact , it turns out that problems with obeying the generalization of the laman theorem ( or the molecular framework conjecture ) , as well as with contiguity of rigid clusters and their being rigid by themselves are _ always _ due to implied hinges . a network not having implied hinges has no such problems , and if implied hinges are placed explicitly as constraints , the problems are eliminated as well .",
    "this can be checked explicitly for networks in figs .",
    "[ 2banana][3banana ] . if the hinge is placed explicitly as a constraint in fig .",
    "[ 2banana ] , there are now @xmath37 constraints , and condition @xmath38 is now violated , so the redundant constraint is now predicted correctly to exist . when the hinge is placed explicitly in fig .",
    "[ 2banana1 ] , it becomes part of the rigid cluster drawn with thin lines , and this cluster then becomes rigid by itself . finally , in fig .",
    "[ 3banana ] , once the hinges are placed explicitly , the rigid cluster 1 - 2 - 3 becomes contiguous .",
    "the general statement that all problems with floppy mode counting and rigid cluster decomposition are due to implied hinges is related to the so - called _ dress conjecture _",
    "@xcite in rigidity theory .",
    "the dress conjecture actually gives the exact count of the number of floppy modes once all implied hinges are identified .",
    "but since the implied hinges still need to be found first , unfortunately , unlike the molecular framework conjecture , the dress conjecture does not give rise to a straightforward approach to floppy mode counting or finding rigid clusters , and at this time , there is no topological algorithm of the pebble game type that would do that .",
    "of course , there can be much more complicated cases than those shown in figs .",
    "[ 2banana][3banana ]  whole hierarchies of bananas within bananas within bananas  and a way to take all of such cases into account has not been found to date .",
    "there is also a complication related to stress determination .",
    "the pebble game finds stressed regions as sets of sites such that all constraints connecting sites within the same set are stressed and all the rest are unstressed .",
    "as explained above , this involves an implicit assumption that all stressed regions are induced subgraphs .",
    "but in non - bond - bending networks it need not be so .",
    "consider the network consisting of two bananas with one bridging constraint between them , as in fig .",
    "[ bananalocked ] .",
    "all constraints are stressed , with the exception of the `` bridge '' ( a thinner line in the figure ) note that any subset of the set of stressed constraints ( other than the full set ) can not be considered a stressed region , because it would not be stressed in isolation .",
    "for instance , when the two bananas are separated from each other , each banana separately will not remain stressed .",
    "so the whole set of stressed constraints is a single stressed region here .",
    "but this stressed region is not an induced subgraph : it is impossible to find a set of sites such that all constraints but the `` bridge '' connect the sites in the set , but at least one of the `` bridge '' ends is outside the set .",
    "a pebble game procedure based on failed pebble search regions will not be able to identify this stressed region correctly . note that in this case , there are no implied hinges .",
    "so whereas implied hinges are the reason for all problems with floppy mode counting and rigid cluster decomposition , this is not so for stress .",
    "but note also that if the `` problematic '' `` bridge '' constraint is removed , the hinge _ will _ appear .",
    "it can be argued that whenever there are problems in the pebble game determination of stress , they are either due to implied hinges ( or uncovered explicit hinges  see section  [ errors ] ) , or such a hinge would appear if one constraint is removed .",
    "the lack of an exact pebble - game - type algorithm for general 3d networks has been a significant impediment to studying such networks . in section",
    "[ intro ] , we have seen that there are many properties of bond - bending networks that are useful for the pebble game algorithm and that do not hold in general for networks that are not bond - bending .",
    "violation of some of these properties , such as the possibility to specify rigid cluster decomposition by labeling sites , is a mere inconvenience .",
    "crucial , however , is the absence of implied hinges in bond - bending networks and their presence in general non - bond - bending networks , and as a consequence , the violation of the molecular framework conjecture , of the properties of contiguity of rigid clusters and their being rigid by themselves , as well as the induced subgraph property of stressed regions .",
    "these properties are essential for the pebble game approach and it is not known how to avoid using them in a pebble - game - type algorithm .",
    "but even though we know that in some cases application of the pebble game approach would be wrong , a reasonable question to ask is just how wrong such an algorithm would be in various cases of interest . in other words , are the errors frequent and significant or are they rare and negligible ? in much of the remainder of the paper , we will try to answer these questions . in this section , we describe the pebble game algorithm we are going to use , which is mostly a straightforward generalization of the algorithm for bond - bending networks described above , except that it does not rely on certain properties of bond - bending networks that no longer hold for non - bond - bending ones .",
    "this algorithm needs to be compared with the exact result , and for this reason in the next section we introduce a `` physics - based '' approach , the _ relaxation algorithm_. it has all the disadvantages mentioned before , such as slowness and round - off errors ( although it is likely faster than straightforward diagonalization ; see the discussion at the end of section  [ relax ] )  but if the latter are brought under control , the approach is potentially exact and can be used for testing the pebble game .",
    "the first part of the pebble game algorithm , in which the redundant constraints are counted and stress is detected , is very similar to the bond - bending case , but some details differ .",
    "just as for bond - bending networks , a constraint is tested for independence by first freeing six pebbles at its ends and then attempting to free an extra pebble at the neighbors of an end of the constraint in turn . obviously , since the subdivision into first- and second - neighbor constraints is no longer present , a particular order in which constraints are inserted can no longer be enforced  although for networks with partially bond - bending character ( for instance , a bond - bending network with some angular constraints missing ) , following the order ( a first - neighbor constraint inserted first and all associated second - neighbor constraints immediately afterwards ) as much as possible could be beneficial and reduce errors ( but see a counterexample to this in section  [ edgesharing ] ) .",
    "another difference is that , again , for the same reason that there is no longer a strict subdivision into different types of constraints , _ all _ neighbors of at least one of the ends of the constraint being tested should be checked by trying to free a pebble .",
    "but it is still unnecessary to check the neighbors of _ both _ ends  this basically has to do with the fact that any subnetwork containing two given sites and rigid by itself ( thus having only six associated free pebbles ) always includes at least some neighbors of _ both _ of these sites .",
    "there is an important difference regarding the stressed region determination .",
    "it is no longer true that all regions of failed pebble search for each of the neighbors of an end of the constraint being tested are going to coincide .",
    "so even when failure to free an extra pebble is detected for one of the neighbors , the procedure should still be repeated for all of the other neighbors and the _ intersection _ ( not the union ! ) of the regions of failed search is the new stressed region . of course",
    ", we should remember that even this more complicated procedure is not completely error - free : for instance , we still assume that stressed regions are induced subgraphs , but , as explained in the previous section , this is not necessarily true .",
    "the justification for the fact that the intersection of the failed search regions should be taken is as follows .",
    "imagine a network consisting of just those constraints that are covered by a pebble .",
    "as only independent constraints are covered , such a network will have no redundancy and thus no stress .",
    "when a new constraint is inserted , a stressed region appears if this constraint is redundant .",
    "any constraint from such a region can be removed without changing rigidity but making the stressed region unstressed , while any constraint from outside the region will add one floppy mode but the stress will remain . so removing a constraint from inside the stressed region and freeing the associated pebble should make this pebble available to every neighbor of the ends of the newly inserted constraint ( as this constraint should now become independent )  in which case the site to which the pebble belongs is part of _ all _ pebble search regions ; conversely , the pebble from any constraint from outside the region should not become available to _ at least one _ of the neighbors  and then the site to which the pebble belongs is not part of at least one of the pebble search regions .",
    "an example of a network where failed search regions differ and clearly an intersection of those regions needs to be taken is shown in fig .",
    "[ intersec ] . of course , if implied hinges are present or would appear upon removal of a single constraint , this procedure may not work correctly , as for the examples in figs .",
    "[ 2banana ] and [ bananalocked ] .",
    "regarding rigid cluster decomposition , one serious issue is choosing a starting set of three mutually rigid sites for each cluster .",
    "in the bond - bending case , we started with a triple consisting of an arbitrary site ( having at least two neighbors ) and two of its first neighbors knowing that they always form a mutually rigid set .",
    "six free pebbles were then collected at these three sites . in the general case , unfortunately , not every angle is rigid , i.e. , not every triple consisting of a site and its two neighbors is a mutually rigid set .",
    "if we still do the same , i.e. , choose an angle and collect as many pebbles as possible at the three sites forming it , then sometimes it may be possible to collect more than 6 pebbles .",
    "it may be so because the set is not mutually rigid ; but it may also be so when the set is mutually rigid , but only because the rigid cluster that it is a part of is rigidified from outside .",
    "so , if we rely on the number of freed pebbles to determine if the angle is rigid , we may fail to identify some of the rigid clusters .",
    "the simplest example is in fig .",
    "[ trivial ] .",
    "the three explicitly marked sites in this figure , 1 , 2 and 3 , form a rigid cluster , but since it is not rigid by itself , it will always be possible to collect 7 pebbles at these sites , and thus this cluster will be missed . in this particular case , it is easy to detect the error : if one inserts a constraint between sites 2 and 3 , this constraint is redundant , and so sites 2 and 3 are mutually rigid and then all three sites are mutually rigid . however , even if the failure is detected in such a way ( and it is not always possible ) , it is not obvious in general how to proceed from there",
    ". do we keep all 7 pebbles free ?",
    "do we only free six of the pebbles ? both of these choices are potentially problematic .",
    "so we have chosen to limit ourselves to the test based on the number of freed pebbles .",
    "that is , we choose an angle and try to free as many pebbles as possible at the first site and then at both of its neighbors keeping the previously freed pebbles free .",
    "if only 6 pebbles are freed , the angle is deemed rigid and we proceed exactly as in the bond - bending case . otherwise , the angle is deemed non - rigid and another angle is chosen instead .",
    "this means that we are going to miss rigid clusters such as 1 - 2 - 3 in fig .",
    "[ trivial ] , which , however , is of minor importance for most purposes .",
    "some other clusters can be missed , too , but , at least in the examples we consider later in this paper , this is much more rare . note that this problem can still only appear due to implied hinges ( or uncovered explicit hinges  see section  [ errors ] ) , as we show when we analyze possible errors of the pebble game in more detail in section  [ errors ] .",
    "we should note that it is also possible to err on the other side , i.e. , to misidentify a non - rigid region as rigid , for instance , in the double - banana case ( fig .  [ 2banana ] ) , where the whole network is deemed rigid by the pebble game , but there is , in fact , a hinge .",
    "once a rigid angle is found , the associated rigid cluster is mapped as in the bond - bending case .",
    "then another rigid angle is chosen , and so on , until all rigid angles are assigned to clusters .",
    "in order to test the accuracy of the pebble game algorithm described in the previous section , we need a way to do exact rigidity analysis . in this section , we describe one possible method , which we call the _ relaxation algorithm_. like more straightforward methods , such as numerical diagonalization of the dynamical matrix or singular value decomposition ( svd ) of the rigidity matrix  @xcite , our approach is not an integer algorithm and thus potentially subject to round - off errors ( although the method incorporates several consistency checks which make any errors in the final result unlikely ) .",
    "unlike such straightforward methods , the relaxation algorithm also relies on some facts from rigidity theory , in particular , the dress conjecture is used to find the number of floppy modes . also , unlike for the diagonalization and svd procedures and similar to the pebble game ,",
    "the actual eigenmodes ( including the eigenvectors corresponding to the floppy motions ) are not obtained ; on the other hand , rigid cluster decomposition is easier to obtain using the relaxation algorithm .",
    "based on this , it can be said that the relaxation algorithm is `` intermediate '' between the straightforward approaches and the pebble game .",
    "suppose we are given a network topology for which rigidity properties need to be obtained .",
    "consider a particular realization of that topology , i.e. , an elastic network ( modeled as a network of harmonic springs ) with specified equilibrium positions of sites and whose connectivity is consistent with the given topology .",
    "for the first stage in the relaxation algorithm , used to obtain the rigid cluster decomposition and the number of floppy modes , assume that the natural lengths of the springs are chosen to fit exactly between the sites at specified positions , so that initially the network is in equilibrium and unstrained , thus being at the energy minimum .",
    "now , displace all sites by infinitesimal amounts in random directions",
    ". in general , the network will no longer be in equilibrium .",
    "if the network is now relaxed using , for instance , the conjugate gradient algorithm  @xcite , then after the relaxation is complete , the network is again in equilibrium .",
    "however , generally speaking , the positions of sites will not coincide with the initial equilibrium positions .",
    "this is because the equilibrium is not unique : any displacement from the initial equilibrium corresponding to a floppy motion will leave the energy unchanged and thus still equal to its minimum value of zero . thus we can expect the final configuration ( after relaxation ) to differ from the initial one ( before displacing the sites ) by a @xmath21-dimensional vector that belongs to the space of floppy motions . since floppy motions do not change distances between mutually rigid sites , then for any pair of mutually rigid sites , the final distances will be the same as the initial distances .",
    "on the other hand , since the displacement was chosen at random , it is very unlikely that for a pair of sites that are _ not _ mutually rigid , the distances will be the same at the beginning and at the end .",
    "thus the procedure described above allows finding of all mutually rigid pairs of sites .",
    "all displacements have to be sufficiently small ( ideally , infinitesimal ) : otherwise , the system can jump from one local minimum to another .",
    "if initial displacements are infinitesimal , they will remain infinitesimal during and after relaxation .    if the initial position of site @xmath39 is @xmath40 and the infinitesimal displacement from that position is @xmath41 , then to the lowest order in @xmath42 , the change in the distance between sites @xmath39 and @xmath43 is @xmath44 spring constants can be chosen arbitrarily , as the final result does not depend on them .",
    "it is convenient to choose them so that the spring constant for the spring between sites @xmath39 and @xmath43 is equal to @xmath45 .",
    "then the total energy is @xmath46 ^ 2,\\ ] ] where the sum runs over all pairs of sites that have a constraint between them .",
    "after relaxation , for each pair of sites , @xmath47 , the quantity @xmath48 can be used to determine if the distance between these sites has changed : if this quantity is zero , then the distance has not changed and these sites are mutually rigid ; otherwise the distance has changed and the sites are not mutually rigid . note that since @xmath49 is quadratic and @xmath50 linear in displacements @xmath42 , these displacements no longer have to be infinitesimal when using these `` linearized '' equations : indeed , rescaling all displacements by some arbitrary factor does not change the results .",
    "this has an advantage that in the actual implementation of this procedure on a computer , one does not have to worry if the displacements are `` small enough '' ( which would be the case if linearization was not done ) .    in practice ,",
    "the computer precision is always limited , of course , so in an actual implementation , the values of @xmath50 for rigid pairs found numerically will be very small but non - zero .",
    "a possible solution is introducing a _ cutoff _ :",
    "pairs of sites for which @xmath50 is below the cutoff are deemed rigid , and those for which @xmath50 is above the cutoff are not rigid .",
    "however , another complication is possible : if the realization is accidentally very close to a non - generic one or a special initial displacement was chosen , some of the non - rigid pairs may have the corresponding value of @xmath50 below the cutoff . for this reason",
    ", at least two realizations are always run ; the absolute values of @xmath50 are summed up and then it is determined if a gap of at least two decades containing no values of @xmath50 has formed .",
    "if it is , the cutoff is chosen inside the gap and the procedure is finished .",
    "this situation is illustrated in fig .",
    "[ scalar ] .",
    "if the gap has not formed , another realization is run and the absolute values of @xmath50 are added to the previously obtained sums . if the gap is now present , then the procedure is finished , if not , the current run is abandoned , and a new run is started .",
    "a new run is also started if in any of the relaxations , a certain low energy is not achieved in a predetermined number of steps . at most",
    "three runs are done ; if none are successful , the relaxation procedure has failed ; it can then be repeated using a higher precision . even despite always doing at least two runs and even when the self - consistency checks described below succeed , there is still a very small chance of an error . in cases of doubt , for instance , when a discrepancy with the pebble game is detected , the procedure can be done as many times as desired , and lower final energy tolerances and larger gap sizes can be set .     in eq .",
    "( [ scal ] ) for all pairs of sites of a network with 216 sites .",
    "the gap between `` zero '' and `` non - zero '' values is clearly seen .",
    "pairs with the values below the gap are mutually rigid , those with the values above the gap are not.,width=288 ]    once all pairs of mutually rigid sites are found , the next step is finding all hinges , including implied ones .",
    "first , make a list of sites such that among their neighbors , not all are mutually rigid  only such sites can be hinge endpoints . from this list",
    ", choose all pairs of mutually rigid sites . for each such pair , \\{a",
    ", b } , select an arbitrary site c rigid with respect to both a and b. then go through the list of all other sites rigid with respect to both a and b ; if _ any _ of such sites is _ not _ rigid with respect to c , then a  b is a hinge ( an implied one if there is no constraint a  b in the network ) .",
    "if all implied hinges are added to the network explicitly as constraints , the configuration of rigid clusters in the network and the number of floppy modes are not affected .",
    "but , as follows from the dress conjecture , all rigid clusters become contiguous .",
    "so once all implied hinges are identified , it is convenient to add them to the network as constraints and then mark rigid clusters labeling each rigid angle formed by network constraints ( including the just added implied hinges ) so that angles belonging to the same cluster are labeled identically .",
    "recall that sites forming an angle ( or any triple of sites for that matter ) can belong to at most one rigid cluster , so that each rigid angle will be assigned just one label .",
    "because of contiguity of rigid clusters , such labeling retains the full rigidity information ; it is always possible to traverse the network between any two mutually rigid sites by going through angles assigned the same label .",
    "this can be used as a self - consistency check for the algorithm .",
    "constraints that do not form any labeled ( i.e. , rigid ) angles are not rigid with respect to any other sites and form single - constraint clusters on their own ; likewise , isolated ( disconnected ) sites are considered single - site clusters . while finding all mutually rigid pairs of sites does not involve any assumptions from the rigidity theory , the decomposition into rigid clusters , as well as the self - consistency check using this decomposition , do rely on the dress conjecture .",
    "the next stage is finding the number of floppy modes .",
    "the procedure , as described below , is just a convenient interpretation of the dress conjecture that gives the number of floppy modes based on the number of ( explicit and implied ) hinges  @xcite .",
    "intuitively , it follows from the assumption that once implied hinges are added , all clusters become rigid by themselves and redundant constraints in each of them can be counted separately and then added up .",
    "any cluster of 3 sites or more should have 6 floppy modes when isolated from the rest of the network ; then , if it contains @xmath19 sites and @xmath51 constraints , the number of redundant constraints [ according to eq .",
    "( [ maxexact ] ) with @xmath52 , @xmath53 and @xmath54 is @xmath55 .",
    "obviously , the numbers of redundant constraints should be non - negative for all clusters and this serves as another self - consistency check for the algorithm .",
    "after the numbers of redundant constraints are found for each cluster , these numbers are added up .",
    "note that even though some constraints ( namely , hinges ) belong to two or more clusters simultaneously , they are included in the count of constraints for each cluster they belong to when obtaining the numbers of redundant constraints for these clusters .",
    "the total number of redundant constraints @xmath8 is then used in eq .  ( [ maxexact ] ) to obtain the number of floppy modes @xmath6 .",
    "counting redundant constraints in each rigid cluster gives information on the presence or absence of stress within that cluster .",
    "however , even if the presence of stress is detected , the information obtained so far does not indicate where exactly it is located within the cluster .",
    "remember that we have specifically chosen the lengths of constraints so that they fit exactly , so there is no stress in our networks after relaxation even when it has to be present generically . to locate stress ,",
    "we need to carry out another relaxation procedure , this time with constraints that do not fit exactly . in the spirit of the first relaxation procedure ,",
    "we choose constraints with _ infinitesimal _ misfits .",
    "that is , just as in the first procedure , sites are first assigned random positions in space , @xmath40 ; if , according to the given connectivity table , there is a constraint between sites @xmath39 and @xmath43 , its length is chosen equal to @xmath56 , i.e. , there is an infinitesimal misfit @xmath57 .",
    "as the misfits are infinitesimal , it is expected that displacements from the initial position , @xmath41 , will also remain infinitesimal at all times during the subsequent relaxation procedure , as well as in the relaxed network . in the lowest order in @xmath41 ,",
    "the deformation of the constraint between sites @xmath39 and @xmath43 is @xmath58 if we choose the spring constant equal to @xmath45 and introduce @xmath59 , the energy is @xmath60 ^ 2 .",
    "\\label{strpot}\\ ] ] as in the first stage of the relaxation algorithm , we displace all sites at random initially , although now this is not really important , since constraint lengths are themselves random and do not fit exactly between sites . after relaxation with the potential ( [ strpot ] )",
    "is done , quantities @xmath61 are used to find stressed constraints : if @xmath62 , then the constraint between sites @xmath39 and @xmath43 is unstressed , otherwise it is stressed . in practice ,",
    "a cutoff between `` zero '' and `` non - zero '' values is again introduced .",
    "similarly to the first relaxation procedure , since @xmath49 is quadratic and @xmath63 linear in both @xmath64 and @xmath41 , these two latter quantities do not have to be infinitesimal when using these `` linearized '' equations .",
    "finally , we analyze the computational speed of the relaxation algorithm . in theory",
    ", the conjugate gradient algorithm converges to the exact minimum after the number of steps equal to the number of degrees of freedom , which is @xmath21 for a network of @xmath1 sites , or @xmath65 .",
    "each of these steps requires the evaluation of the gradient of the potential , which takes @xmath65 floating - point operations ( flops ) , so that the relaxation procedure proper takes @xmath66 flops overall . in practice , away from the rigidity percolation transition",
    "the number of steps required may be significantly smaller ; on the other hand , very close to the transition a somewhat larger number of steps may be needed , since because of the round - off errors the convergence is not perfect after @xmath21 steps .",
    "another potentially costly part of the algorithm is finding hinges .",
    "formally , this part requires @xmath67 operations ; but in practice , for typical network sizes ( up to a few thousand sites ) , it is usually much faster than the relaxation proper , which in part is explained by the fact that only integer operations are involved .",
    "in fact , it may be possible to optimize this part so that in practice , it is never ( or rarely ) @xmath67 .",
    "these estimates of the computational cost of the relaxation algorithm should be compared to those for diagonalization and svd .",
    "since the computational cost of both diagonalization and svd is @xmath67 ( if the number of constraints is comparable to the number of degrees of freedom )  @xcite , it is likely in view of the above analysis that the relaxation algorithm is faster ( although direct tests need to be done to find out if this is really so for typical problems and network sizes ) .",
    "the advantage of the more traditional approaches is , as mentioned before , the fact that they also find the floppy modes themselves , not just their number ; on the other hand , rigid cluster decomposition is problematic . in fact , even if a traditional approach is used , we suggest combining it with a procedure similar to ours to find rigid clusters .",
    "namely , once floppy modes are obtained , their linear combination with random coefficients can be used as the analog of the outcome of relaxation ; then the values of @xmath50 can be calculated using eq .",
    "( [ scal ] ) and the rest of the procedure for finding rigid clusters is the same as described above .",
    "note also that in the case of diagonalization and svd , a cutoff still needs to be defined between `` zero '' and `` non - zero '' eigenvalues or singular values ; but note that there are only @xmath65 of these values , whereas there are @xmath66 values of @xmath50 used to define the cutoff in the rigidity part of the relaxation algorithm , and the more values are used to define the cutoff , the more confident can one be that the cutoff is chosen correctly .",
    "this is another advantage of the relaxation algorithm , although , unfortunately , it does not apply to the stress determination part , since in this case , the number of values of @xmath63 from eq .",
    "( [ str ] ) is equal to the number of constraints and thus is @xmath65 .    to conclude this section , we should mention certain similarity between the relaxation algorithm for rigid cluster decomposition and the froda algorithm for generating internal motions of proteins  @xcite . in both algorithms ,",
    "the initial configuration is distorted in some way and then relaxed to generate a new configuration .",
    "the details are , of course , different : in the relaxation algorithm , the displacements are effectively infinitesimal , in froda , they are not ; froda uses a different relaxation procedure that makes use of special properties of protein networks ; also , as a consequence of dealing with finite displacements , froda needs to take care of finite atom sizes by avoiding van der waals overlaps .",
    "we are now in a position to analyze the correctness of the approximate pebble game described in section  [ peb ] in different situations .",
    "we start with some general considerations .",
    "first of all , consider what configurations can give rise to pebble game errors . as mentioned before , according to the dress conjecture , all violations of the molecular framework conjecture statement and the associated properties of contiguity of rigid clusters and their being rigid by themselves are due to implied hinges .",
    "however , it is important to remember that during the pebble game , the network is built gradually , constraint after constraint , and the counting of redundant constraints is done during the whole construction process .",
    "so even if the final network does not contain implied hinges , but they were present at some time during the construction process , there still may be errors .",
    "consider first the situation where an implied hinge becomes explicit when a constraint coinciding with it is inserted .",
    "this constraint is always redundant and normally will not be covered by a pebble during the pebble game .",
    "( exceptionally , the pebble game may deem it independent incorrectly and cover it because of errors due to hinges elsewhere in the clusters sharing the given hinge , but in this case the end results of the pebble game are the same as if the constraint was inserted early enough so there was never an implied hinge in its place , so we do not consider this situation separately . ) but any constraint not covered by a pebble is `` invisible '' to the pebble game in the sense that further pebble searches will occur in the same way and with the same outcome as if this constraint was not present in the network .",
    "for this reason , an explicit hinge coinciding with an uncovered constraint will , in fact , always cause the same problems as if it was an implied hinge . note that this is so even if the hinge was _ never _ an implied one .",
    "another potentially troublesome situation would be a hinge that existed at some time during the construction process but ceased to exist altogether when the rotation around it was locked later .",
    "in this case , however , if there was an error in the floppy mode counting due to the hinge , it would be corrected when the hinge is locked .",
    "for instance , the floppy mode count given by the pebble game for the double - banana graph in fig .",
    "[ 2banana ] is 6 , one less than the actual number .",
    "however , 6 is the lowest possible floppy mode count , as it corresponds to the rigid body , so any additional constraints , including those locking the rotation around the implied hinge ( such as the thin constraint in fig .",
    "[ bananalocked ] ) will be ( incorrectly ) deemed redundant , the two errors in the counting will cancel out and the counting will stay at 6 , which is the correct answer when the hinge is locked . as for rigid cluster decomposition ,",
    "it is done at the end of the pebble game ; so if the locking constraint is covered ( as would be the case , e.g. , when the hinge in fig .",
    "[ 2banana1 ] is locked ) , there are certainly no problems , ( as there is no difference in pebble arrangement compared to the case when the locked constraint is inserted even before the hinge had a chance to appear ) ; if , on the other hand , it is deemed redundant and not covered , this means that the two clusters whose mutual rotation the constraint is supposed to lock were ( incorrectly ) found mutually rigid even before locking , so again in the end there are no problems .",
    "so the conclusion is that there are no problems in either the floppy mode count or the rigid cluster decomposition due to hinges that were there but are not there anymore at the end .",
    "but the stress determination may still be wrong in such cases , as fig .",
    "[ bananalocked ] illustrates .",
    "when an implied or an uncovered explicit hinge is present , it may affect both the floppy mode count and the rigid cluster decomposition ( as in fig .",
    "[ 2banana ] ) , or it may only affect the latter ( as in fig .  [ 2banana1 ] ) . to find out what determines the difference ,",
    "recall that according to the dress conjecture , when obtaining the number of floppy modes @xmath6 , redundant constraints are counted in each cluster separately ( after all implied hinges are added ) and then summed up . when counting is done within a given cluster",
    ", the hinge contributes to the number of redundant constraints ( that is , its addition changes this number ) if it is stressed when this cluster ( with the hinge included explicitly ) is taken separately from the rest of the network ( with a caveat mentioned at the end of the paragraph ) .",
    "so the contribution of a hinge to the total number of redundant constraints is equal to the number of times this hinge is found stressed when different clusters sharing this hinge are taken in isolation . on the other hand",
    ", the hinge always contributes 1 to the total number of constraints .",
    "so the net contribution of the hinge to @xmath6 is the number of times the hinge is found stressed minus one .",
    "any implied or uncovered explicit hinge has to be found stressed at least once .",
    "if it is found stressed once , the net contribution is zero .",
    "if it is found stressed more than once , the net contribution is non - zero . in the pebble game , on the other hand , implied hinges do not contribute to either the total number of constraints or the number of redundant constraints , so the net contribution is always zero ; as mentioned above , uncovered explicit hinges are equivalent to implied ones for floppy mode count purposes , so the net contribution is zero for them as well .",
    "the conclusion is then that when an implied or uncovered explicit hinge is found stressed once , the floppy mode count of the pebble game is correct .",
    "this is the case in fig .",
    "[ 2banana1 ] , where the hinge is found stressed when the left banana is considered , but not when the right banana is considered . on the other hand , when a hinge is found stressed more than once , the pebble game count is incorrect ( always lower than the correct one , never higher ) . in fig .",
    "[ 2banana ] , indeed , the hinge is found stressed twice , i.e. , it is found stressed when considered with each of the two bananas . occasionally , the considerations of this paragraph may _ overestimate _ the number of redundant constraints and thus the pebble game error due to implied hinges , if there are several hinges within the same rigid cluster and the same stressed region . for instance , if there are two hinges within the same stressed region , then according to the above considerations , the contribution of these hinges to the number of redundant constraints in the cluster will be equal to 2 ; but it is still possible that the actual constraint count for this region will indicate that it has just one redundant constraint .",
    "note that since the relaxation algorithm finds explicit and implied hinges and also counts redundant constraints within each cluster , we can obtain some information on the possible error in the pebble game floppy mode count even without running the pebble game .",
    "consider each hinge ( explicit or implied ) and determine the number of clusters among those that share this hinge that have a non - zero number of redundant constraints @xmath68 . having",
    "a non - zero @xmath68 is a _ necessary _ condition for the hinge to be found stressed when considered with this cluster .",
    "but it is not a sufficient condition , since a non - zero number of redundant constraints only indicates that stress is present somewhere in the cluster , and this does not necessarily include the hinge . for this reason , if the number of clusters sharing the hinge and having non - zero @xmath68 is zero , the hinge is unstressed ; it is then explicit and moreover , is covered , so it can never spoil finding the number of floppy modes or the configuration of rigid clusters . if the number of clusters with non - zero @xmath68 is 1 , the actual number of times the hinge is found stressed is either 0 or 1 , and then the hinge is either not dangerous at all ( in the first case ) , or can affect the rigid cluster decomposition ( in the second case , provided that it is implied or inserted late enough to be uncovered ) ; it can not affect the floppy mode count .",
    "finally , if the number of clusters with non - zero @xmath68 is 2 or higher , it is possible that the hinge is stressed two or more times , and then the number of floppy modes _ may _ be affected .",
    "the maximum possible error in the number of floppy modes due to the hinge is the number of clusters with non - zero @xmath68 minus 1 .",
    "the advantage of the described procedure of finding dangerous hinges ( as opposed to the straightforward comparison of the pebble game results with the relaxation results ) is that the error determined in this way is at least as high as the maximum possible error ( where the maximum is taken over all possible orders of constraint insertion ) . in other words , this is the worst - case scenario estimate .",
    "regarding stress determination , as mentioned above , there may be problems if a single constraint locks a mutual rotation of two clusters around a hinge , as in fig .",
    "[ bananalocked ] . unfortunately , since in such cases the hinge is not actually present , it is impossible to find such situations , except by doing stress determination through relaxation and then comparing directly with the pebble game result .",
    "another case when problems with finding stress can arise is when the floppy mode count fails , like in the double - banana case .",
    "we should note that problems with stress determination can only arise due to hinges or `` former '' ( i.e. , locked ) hinges that can create problems for the floppy mode count , but not those that can only affect rigid cluster decomposition .",
    "this is because the stress determination procedure is designed to be correct if there are no errors in the floppy mode count for either the given network itself or any network obtained from it by removing a single constraint .",
    "in this section , we consider a particular class of 3d networks , randomly bond - diluted central - force networks , using the algorithms considered in the previous sections . in particular , we study rigidity percolation on such networks .",
    "we first apply the relaxation algorithm to the networks in order to ascertain the possibility of their study with the faster pebble game algorithm , whose use allows studying much larger networks than would be feasible with the relaxation algorithm . at the end of the section ,",
    "we briefly consider _ site - diluted _ networks , with some of the results markedly different from those for bond - diluted networks .",
    "we start with the straightforward maxwell counting in order to guide our search for the rigidity transition .    in a network of @xmath1 sites ,",
    "the number of degrees of freedom is @xmath21 . in central - force networks ,",
    "the number of constraints is equal to the number of bonds and is @xmath69 , where @xmath25 is the mean coordination ( the average number of sites connected to a given site ) .",
    "then @xmath70 this reaches zero at @xmath71 .",
    "even though maxwell counting is not exact , it is assumed that in reality , the number of floppy modes becomes small when @xmath25 approaches this value and a percolating rigid cluster emerges somewhere around this point ( indeed , in 2d central - force and 3d bond - bending networks , the transition occurs very close to the point at which the maxwell counting result turns zero ) .",
    "given that the transition is expected to be located at @xmath72 , to study it by bond - diluting a regular lattice we need a lattice with the coordination number exceeding 6 .",
    "thus the body - centered cubic ( bcc ) lattice with the coordination of @xmath73 and the face - centered cubic ( fcc ) lattice with the coordination of @xmath74 are natural choices . in a regular lattice with coordination number @xmath75 ,",
    "the total number of bonds is @xmath76 .",
    "if bond dilution is done so that fraction @xmath77 of the bonds remain , this gives the number of bonds @xmath78 , and since each bond is shared between the two sites that it connects , the mean coordination is @xmath79 then at the transition we expect @xmath80 for fcc and @xmath81 for bcc .",
    "note , by the way , that eq .",
    "( [ rp ] ) is valid even for finite networks and even non - random ones , if @xmath77 is indeed interpreted as the actual fraction of present bonds and not as the probability that a given bond is present .",
    "one should keep in mind that the approaches to studying rigidity described in this paper are only applicable to _ generic _ networks .",
    "regular lattices like fcc and bcc are not generic , of course , as they have parallel bonds , all bonds are of the same length , etc .",
    "any results described here are therefore applicable not to the diluted regular lattices themselves , but rather to networks topologically equivalent to them , but distorted by introducing bond length disorder .",
    "this is also true for the older results for the diluted diamond lattice bond - bending networks shown in fig .",
    "[ perc3dbb ] .",
    "we first study small bond - diluted bcc and fcc networks using the relaxation algorithm , doing both rigidity and stress runs ( the latter just for those networks where the former detected any redundancy ) . for fcc , we use networks of 500 sites , for all numbers of bonds between 1460 ( @xmath82 or @xmath83 ) and 1490 ( @xmath84 or @xmath85 ) . for each number of bonds",
    ", we generate 100 different networks ; this gives a total of 3100 networks . even though usually much larger networks can be analyzed easily , this is a particularly difficult case for the relaxation algorithm , since close to the transition , there are large regions ( taking up most of the network ) that are isostatic ( i.e. , rigid but unstressed , with constraints exactly balancing degrees of freedom ) or nearly isostatic , and it is very hard computationally to distinguish an exactly isostatic region from one lacking just a single constraint and thus having one floppy mode spread over thousands of degrees of freedom : in the former case , the region is rigid but with extremely low effective elastic moduli ( vanishing in the thermodynamic limit ) ; in the latter case , it is flexible but with the motion limited to a subspace of dimensionality one in a space with thousands of dimensions . for this reason , in rare cases",
    "the relaxation algorithm has failed to converge .",
    "namely , in the rigidity runs , out of 3100 networks , relaxation has failed for 39 , or just over 1% .",
    "all these cases were re - run using more computationally intensive quadruple - precision arithmetic ; all 39 runs succeeded .",
    "likewise , in the stress runs , relaxation has failed in 23 cases , and again , all succeeded using quadruple precision . at the lowest bond number ( 1460 ) ,",
    "all 100 networks have only small rigid clusters and no stress ; at the highest bond number ( 1490 ) , all 100 networks have a rigid cluster taking up almost all the network and 99 out of 100 networks have a stressed region likewise taking up most of the network . in other words ,",
    "the chosen range of mean coordinations indeed contains the rigidity transition . in the bcc case ,",
    "networks of 686 sites were used , with numbers of bonds between 2040 ( @xmath86 or @xmath87 ) and 2060 ( @xmath88 or @xmath89 ) , again with 100 networks for each number of bonds , for the total of 2100 networks . in this case , all runs , both for rigidity and for stress , succeeded without using quadruple - precision arithmetic . again , at the smallest bond number , only small rigid clusters are present and no stress in all networks ; at the highest bond number , all 100 networks have a rigid cluster and a stressed region taking up most of the network .",
    "a remarkable observation is that in all these runs , for both fcc and bcc , only very small and very large rigid clusters are observed , but never those of intermediate size .",
    "namely , in fcc networks , only clusters of 11 and fewer sites or 431 and more sites are found ; in bcc networks , only clusters of 1 , 2 , 3 sites or at least 668 sites are found .",
    "as for stressed regions , small ones are never observed : the smallest regions ever found are of size 388 for fcc and 632 for bcc .",
    "this is a strong indication that the rigidity transition is _ first order _ : instead of the average cluster size growing gradually as the transition is approached , before a percolating cluster ( that first takes up a small part of the network ) arises , here no gradual growth is observed ; the percolating cluster emerges suddenly , upon a single bond addition , and immediately takes up much of the network . likewise , stress is not present at all in the floppy phase and arises suddenly after a single bond is added , again , taking up most of the network .",
    "as we have mentioned , a first order transition was found previously in so - called random bond networks ( rbns ) . in rbns ,",
    "sites are assigned certain coordination numbers and then are connected at random , regardless of the distance between them , consistent with the assigned coordinations .",
    "the reason why the transition is first order in this case has to do with the absence of finite rings and thus finite rigid clusters in rbns ( other than single bonds and single sites with their associated constraints in the bond - bending case ) . without finite clusters ,",
    "the infinite cluster has to emerge suddenly : there is no diverging correlation length typical of second order transitions as the threshold is approached .",
    "of course , rings are certainly present in regular lattices like bcc and fcc , but still , is the situation similar here in some way ? in the appendix",
    ", we analyze this question in detail using a computational procedure for generating maximally rigid configurations of a certain size .",
    "the result is that in the bcc case , the situation is indeed somewhat similar : besides the clusters of sizes 1 , 2 and 3 , the smallest possible cluster has size 90 if standalone or 84 if sharing a hinge with another rigid cluster ( and these are extremely rare ; the frequency per site of observing such a cluster is estimated in the appendix to be very roughly @xmath90 ) ; but in the fcc case , clusters of _ all _ sizes are possible , but the probability of actually observing a cluster of a given size decreases very rapidly as the size increases .",
    "we can now address the question of the accuracy of the pebble game algorithm when applied to bond - diluted central - force bcc and fcc networks .",
    "in the bcc case , when besides the percolating cluster , only clusters of size up to 3 are observed , obviously the only possible kind of hinge is a `` trivial '' one shared between the percolating cluster and the one of size 3 ( the `` triangle '' ) , as shown in fig .",
    "[ trivial ] .",
    "indeed , such hinges are rather frequent : a total of 4822 are observed in the 1276 percolating networks ( out of the total of 2100 networks ) , including two that are shared with the percolating cluster by _ two _ `` triangles '' .",
    "all of these hinges are implied : indeed , triangles of bonds do not exist in bcc lattices , so rigid `` triangles '' actually consist of two `` real '' bonds and an implied hinge . such trivial hinges are also by far the most frequent kind in the fcc case , although in this case , both implied and explicit ones are possible : there are 15179 implied and 3971 explicit `` trivial '' hinges in 1288 percolating networks , including respectively 11 and 5 shared by two triangles . besides these , there are also a very small number ( 13 implied and 1 explicit ) of hinges shared by the percolating cluster with a _ four - site _ cluster ( a tetrahedron ) ; also , the two largest observed `` small '' clusters ( of sizes 10 and 11 ) share a few hinges with triangles . while the total number of hinges is large , none of them can affect the floppy mode count of the pebble game .",
    "such hinges also can not affect determination of the size of the percolating cluster : indeed , since neither the triangle nor the tetrahedron are stressed objects , they can not rigidify the percolating cluster and it has to be rigid by itself ( cf . fig .",
    "[ 2banana1 ] , where the left banana , although not stressed by itself , becomes stressed if the hinge is inserted explicitly and thus has the potential to rigidify the right , `` incomplete '' banana ) , thus the pebble game will have no problem finding the percolating cluster correctly .",
    "the only possible type of error is then failure to identify a rigid triangle or , very rarely , tetrahedron .",
    "since so few types of errors are possible , these errors can easily be taken care of , if needed ; but if we are only interested in the number of floppy modes and the percolating cluster size ( the quantities relevant for determining the order of the transition ) , we need not do this . note also that the above numbers for problematic explicit hinges are likely overestimations , as the rigid cluster decomposition part of the relaxation algorithm overestimates the number of stressed hinges , as explained above .",
    "the actual number can be found if required .    obviously , since clusters of all sizes are possible in the fcc case , other situations involving larger `` small '' clusters are possible in principle .",
    "for example , one can ask if configurations of the double - banana type that would violate the floppy mode count of the pebble game can occur . a method described in the appendix",
    "allows generation of such configurations , even if they are extremely rare in reality .",
    "it turns out that the `` standard '' double - banana graph ( like the one shown in fig .",
    "[ 2banana ] ) that consists of two clusters ( `` bananas '' ) of size 5 is not possible in an fcc network .",
    "however , larger configurations of the same type are possible .",
    "the smallest one consists of two `` bananas '' of size 8 each , as shown in fig .",
    "[ 8plus8 ] . in the appendix ,",
    "the frequency of a single 8-site rigid cluster is estimated .",
    "it is rather low , only @xmath91 per site . to have a double - banana - type configuration , two such clusters need to be located next to each other and in a certain relative orientation ; the probability of this will be roughly @xmath92 per site  a very small number , and even this is probably an overestimation .",
    "another possibility for a double - banana - type configuration is the percolating cluster sharing a hinge with a small cluster , the smallest possibility being a six - site cluster ( an octahedron ) , with the hinge connecting two opposite vertices . note that even though we have observed small clusters of sizes up to 11 , such larger clusters are only present in the floppy phase , when there is no percolating cluster .",
    "the largest clusters coexisting with the percolating cluster that we have seen are of size 4 .",
    "clusters of size 6 have never been seen , and it is clear that the probability of seeing such a cluster is much higher than that of seeing one attached specifically at opposite vertices to the percolating cluster . in the appendix , we give a crude estimate for the frequency of hinges of this kind  at most @xmath93 per site and probably much less  again , extremely rare .",
    "regarding stress determination , as we have mentioned , finding hinges for a particular network alone does not detect all possible errors in finding stress using the pebble game because of configurations with locked hinges , like the one in fig .",
    "[ bananalocked ] .",
    "however , since we have never seen any hinges that cause problems for the floppy mode count in any of the networks we have analyzed , the chance of having a locked hinge is very small  there are no hinges to lock , to start with .",
    "for this reason , we do not expect to see errors in finding stress either .      with the relaxation algorithm",
    ", we can only study rather small networks . while this study gives strong indications",
    "that the rigidity transition in 3d central - force bond - diluted networks is first order , using larger networks is desirable , in particular , to reduce finite - size effects .",
    "based on our results obtained using the relaxation algorithm , we can be confident that the pebble game results are going to be accurate in this case , even though in general the algorithm is only approximate .",
    "we have also confirmed this explicitly , by applying the pebble game to the same networks that we have analyzed using the relaxation algorithm , as described in the previous subsection .",
    "the results of this comparison ( among other results described below ) are shown in fig .",
    "[ bcc ] ( for the bcc lattice ) and in fig .",
    "[ fcc ] ( for the fcc lattice ) . in the upper panels ,",
    "we plot the average number of floppy modes obtained using the relaxation algorithm ( pluses ) and the pebble game ( circles ) . in the lower panels ,",
    "we show the average sizes of the largest rigid cluster ( pluses for the relaxation algorithm , circles for the pebble game ) and of the only stressed region ( x s for the relaxation algorithm , squares for the pebble game ) .",
    "all pluses are inside circles and all x s are inside squares , indicating that the pebble game and the relaxation results coincide .",
    "in fact , the results were checked network by network ; very minor and rare discrepancies ( 2 networks out of 3100 for fcc , none for bcc ) turned out to be due to round - off errors in the relaxation algorithm , rather than any problems with the pebble game ( as we confirmed by using quadruple precision on these networks that eliminated the discrepancies ) .",
    "having ascertained the accuracy of the pebble game , we can now apply it to study larger networks . for the relaxation study ,",
    "networks were generated independently at each mean coordination . here instead , networks are built gradually and intermediate stages are used for obtaining results as well .",
    "we first remove all bonds from the full fcc or bcc lattice and then place them back one by one randomly while testing each for redundancy with the pebble game .",
    "rigid cluster decomposition is done after every bond addition close to the transition , but can be done less frequently away from it . in this way , we can analyze the whole sequence of networks with different @xmath77 in a single pebble game run , which is yet another advantage of the pebble game compared to other algorithms .",
    "the results for the bcc and fcc lattices are shown in figs .",
    "[ bcc ] and [ fcc ] , respectively .",
    "lattice sizes used are 3456 and 54000 sites for bcc and 4000 and 62500 sites for fcc . in both cases ,",
    "the percolation transition is clearly seen as a jump in the size of the percolating rigid cluster and percolating stressed region , as well as a break in slope in the number of floppy modes ( which coincides with the maxwell counting result below the transition , as there are no redundant constraints , but deviates immediately above the transition ) .",
    "the jump gets sharper as the network size increases .",
    "this is consistent with the rigidity transition being _",
    "first order_. the transition occurs at @xmath94 in the bcc case and at @xmath95 in the fcc case .",
    "both values are quite close to the maxwell counting estimates ( @xmath96 and @xmath97 , respectively ) as expected .",
    "note that there is a slight discrepancy between our value in the bcc case and that obtained by arbabi and sahimi  @xcite ( @xmath98 ) , which is probably due to the fact that their simulations were on undistorted non - generic lattices .",
    ", for bond - diluted central - force bcc networks , for three different sizes : small ( 686 sites ; symbols , green online ) ; medium ( 3456 sites ; the thin line without symbols , red online ) ; and large ( 54000 sites ; the thick line ) . for the smallest size , the results obtained by both the pebble game ( circles ) and the relaxation algorithm ( pluses inside the circles ) are shown ;",
    "the same realizations are used in both cases . for the other two sizes ,",
    "the pebble game was used .",
    "the dashed line is the maxwell counting result .",
    "( bottom ) the fraction of sites in the largest rigid cluster and the fraction of bonds in the only stressed region for bond - diluted central - force bcc networks , for three different sizes . for each size",
    ", the top line represents the largest rigid cluster and the bottom line , the stressed region .",
    "the line thicknesses and the color scheme ( in the online version ) are the same as in the top panel . for the smallest size ,",
    "the results obtained by both the pebble game ( circles for the largest rigid cluster , squares for the stressed region ) and the relaxation algorithm ( pluses and x s , respectively ) are shown . for the other two sizes , the pebble game was used . in both panels ,",
    "the results for the small and medium size are averages over 100 networks , with intervals between data points equal to one bond ; the results for the largest size are averages over 10 networks , with intervals between data points equal to one bond in the vicinity of the transition and 10 bonds elsewhere.,width=288 ]    , for bond - diluted fcc networks .",
    "the sizes used are 500 sites ( small ) , 4000 sites ( medium ) , and 62500 sites ( large).,width=288 ]    note that the jumps in the cluster sizes , as presented in figs .",
    "[ bcc ] and [ fcc ] , are not infinitely sharp  there is a slight rounding off .",
    "but this is simply because these results are the _ averages _ over several realizations , and the transitions occur at slightly different points in different networks ( a finite - size effect ) . but",
    "looking at each realization individually , it turns out that in each case ( and for both medium and large networks ) the transition usually happens in a matter of just _ two bond additions_. in the floppy phase , the largest rigid cluster size is very small , usually around 10 ( the maximum observed in the ten realizations for the largest size was 19 ) for fcc and always 2 for bcc , and there are never any stressed bonds ; then all of a sudden , with a _ single bond _ added , a huge cluster taking up more than 90% of the network emerges ; and after just one more bond addition , a huge stressed region , again occupying around 90% of the network , appears .",
    "thus both the rigidity and the stress transitions occur in the most dramatic manner possible , with an enormous jump in the order parameter upon a single bond addition .",
    "this is illustrated in fig .",
    "[ bcc_bond_one ] for bcc and in fig .",
    "[ fcc_bond_one ] for fcc . in each case , the results for a single realization are shown .",
    "note that the interval between adjacent data points is _",
    "one bond_.        , for a single bond - diluted fcc network of 62500 sites.,width=288 ]    the width of the rigidity transition in terms of @xmath77 thus appears to be @xmath99 .",
    "normally , first order transitions are not as sharp , as different parts of the system undergo transitions at slightly different points , resulting in the width that , while decreasing with growing @xmath1 , does so more slowly than @xmath99 .",
    "another interesting point is the absence of the hysteresis problem commonly associated with numerical studies of first order transitions : in thermal phase transitions , for instance , as the temperature is changed to drive the system across the transition , it takes a long time for the system to reach the new phase and equilibrate and so the transition is delayed . with no equilibration required and the pebble game being exact , there is no hysteresis here , of course .",
    "we should also note that previous studies for bond - diluted fcc  @xcite and bcc  @xcite and site - diluted fcc  @xcite networks have indicated that the elastic moduli change continuously at the rigidity transition , without a jump ( fig .",
    "[ garboczi ] ) .",
    "this is expected to be true for site - diluted bcc networks as well .",
    "we can thus say that the transition is _ geometrically first order but physically second order _ , as the geometric order parameters such as the size of the percolating cluster jump at the transition , but the physical quantities such as the elastic moduli do not .",
    "we now describe briefly the results of a similar study for _ site - diluted _ networks .",
    "some of the results are radically different from those for the bond - diluted case .    in site - diluted networks ,",
    "a certain number of sites are deleted with all associated constraints , but all remaining sites retain all connections to other remaining sites .",
    "one can still define the mean coordination @xmath25 as the mean number of remaining neighbors of a site , averaged over all _ remaining _ sites .",
    "in the maxwell counting approximation , the rigidity transition is still at @xmath100 .",
    "if sites are deleted at random and the fraction of remaining sites is @xmath77 , then on average a fraction @xmath77 of neighbors of each present site remain , so @xmath101 , where @xmath75 is the coordination number of the full lattice .",
    "this is the same relation as eq .",
    "( [ rp ] ) for bond - diluted networks , except in that case the relation was exact even for finite networks , whereas in the site - diluted case it is exact only in the thermodynamic limit , but should still be good for large enough networks .",
    "based on maxwell counting , the transition should occur at @xmath80 for fcc and @xmath81 for bcc , just like for bond dilution .    similarly to the bond dilution case , we first use the relaxation algorithm . in the bcc case",
    ", we consider 1000 realizations on site - diluted lattices , originally of 686 sites each , all with 510 present sites ( @xmath102 ) . at this point , both percolating and non - percolating networks are present .",
    "there is no qualitative difference with the case of bond dilution : still , only very small ( up to 3 sites ) or very large ( at least 459 sites ) clusters are present .",
    "this is to be expected : we know that clusters of sizes above 3 and below 84 can not exist in principle , and this does not depend on the dilution procedure , of course ; non - percolating clusters of size 84 or larger , on the other hand , are still expected to be very rare , although not as rare as in the bond case , for reasons explained in the appendix in the discussion of the fcc case . of course ,",
    "no `` dangerous '' hinges , other than the trivial ones shared by the percolating cluster and a triangle , are possible , so no problems in the pebble game are expected , as far as the floppy mode count and the percolating cluster size are concerned .    in the fcc case ,",
    "on the other hand , the situation is very different .",
    "we consider 1000 realizations on site - diluted lattices , originally of 500 sites each , all with 235 present sites ( @xmath103 ) . both percolating and non - percolating networks are present , as well as many percolating in just one or two directions .",
    "in contrast to the case of bond dilution , we now see many clusters of all sizes , not just very small and very large .",
    "this is what one might expect in case of a _ second order _ transition .",
    "some statistics in comparison to the case of bond dilution is given in the appendix .",
    "given that many clusters of all sizes are present in the fcc site - diluted case , one might naively expect many `` dangerous '' hinges with `` bananas '' on all length scales .",
    "fortunately , this turns out not to be the case .",
    "there are still numerous hinges rigidifying triangles and tetrahedra that are also present in the bond - diluted case ( although now they are often shared with another medium - sized cluster , not necessarily with the percolating cluster , which was very rare in the bond - diluted case ) .",
    "like before , the presence of these at most means that the pebble game may fail to detect some triangles or tetrahedra  any larger clusters , including the percolating cluster , are not affected , nor is the floppy mode count .",
    "besides these , only very few other hinges are present . in the same 1000 500-site networks ,",
    "the relaxation algorithm detects 45 hinges involving clusters both of which are larger than a tetrahedron and thus with the potential to introduce more significant errors than missing a triangle or a tetrahedron . of these",
    ", 11 can influence the floppy mode count .",
    "but this is still an overestimate , as we know , and needs to be confirmed by analyzing stress .",
    "this more careful analysis brings the number of `` dangerous '' hinges down to 18 , or roughly one per 13000 present sites , of which _ none _ can affect the floppy mode count .",
    "the largest affected cluster is still fairly small , consisting of 24 sites , so the percolating cluster can never be misidentified .",
    "most misidentifications are , in fact , fairly benign  14 out of 18 involve missing a single triangle from a larger cluster and two more involve missing a single tetrahedron . given this",
    ", we can still safely use the pebble game  chances of the floppy mode count or the percolating cluster size being affected are very slim .",
    "the pebble game results confirm the expectations based on the relaxation study .",
    "the largest rigid cluster size as a function of the fraction of sites present is shown in fig .",
    "[ bcc_site ] for the bcc lattice and in fig .",
    "[ fcc_site ] for the fcc lattice . in the bcc case",
    ", we again see very sharp jumps , with the largest cluster size changing from 2 to almost all network upon addition of a single site , consistent with a first order transition .",
    "but in the fcc case , the largest cluster size grows gradually when sites are added , with only very small jumps present in individual realizations , which is typical of a second order transition .",
    "systems that we have considered in this section differ just in the underlying lattice and/or type of disorder ( site vs. bond ) .",
    "it is usually thought that these properties are irrelevant when determining general properties of a phase transition , such as its order , or , in the case of a second order transition , the critical exponents , unless long - range interactions are introduced .",
    "for instance , in the potts model  @xcite , the order of the transition depends on the dimensionality and the number of states , but not on the lattice type .",
    "it is certainly possible to have a _",
    "tricritical point _ separating regions of first and second order transitions , but this is usually observed when there are several competing interactions whose relative strengths can be varied . this is not the case here , and thus the situation we observe is highly unusual and counter to our intuitive expectations based on universality .",
    "of course , it should be remembered that claims based on numerical simulations can rarely be made with absolute certainty .",
    "while our results in fig",
    ".  [ fcc_site ] give a strong indication that the rigidity transition is second order in the case of fcc site dilution , a first order transition rounded due to finite - size effects can never be ruled out completely . our claim that in the other three cases",
    "the transition is first order looks even stronger given how sharp the transition is ; but even in this case , surprises are possible .",
    "in the previous section , we have shown that in the particular case of randomly diluted central - force networks , there are virtually no errors in the pebble game , except insignificant ones , such as missing a small cluster .",
    "in particular , there are hardly any double - banana - type configurations similar to those shown in figs .",
    "[ 2banana ] and [ 8plus8 ] .",
    "however , such configurations may be quite frequent in certain cases .",
    "for instance , consider two neighboring 4-fold coordinated sites in a bond - bending network .",
    "it is easy to realize that a network consisting of such a pair of sites with their neighbors and associated central - force and bond - bending constraints is topologically equivalent to the double - banana graph plus the explicit hinge ( fig .",
    "[ 2tetra ] ) .",
    "specifically , each banana is formed by the constraints associated with a particular site of the pair , and the constraint connecting these sites is the hinge .",
    "if one inserts constraints in an arbitrary order during the pebble game , it is possible that the hinge is inserted last ( after all other central - force and angular constraints ) , in which case it will not be covered by a pebble and according to the analysis in section  [ errors ] , will cause an error in the pebble game floppy mode count , as well as rigid cluster decomposition ( just as if the hinge were implicit ) .",
    "this is why it is important to insert constraints in a proper order for the pebble game to be correct for bond - bending networks .",
    "another spectacular case is a chain of _ edge - sharing tetrahedra_. consider a covalent network consisting of atoms of valence 4 ( such as si or ge ) and 2 ( se , te , s , or o ) .",
    "suppose there is perfect chemical order , i.e. , each atom of valence 4 is always next to an atom of valence 2 and vice versa .",
    "suppose also that there are both central - force and angular constraints associated with atoms of valence 4 .",
    "then an atom of valence 4 with all its associated constraints forms a rigid object that can be thought of as a rigid tetrahedron , where the atom itself is at its center and the 4 neighbors ( all of which are atoms of valence 2 ) are the vertices . then the network can be represented as a system of connected tetrahedra .",
    "these tetrahedra can be corner - sharing [ fig .",
    "[ tetra ] ( a ) ] or edge - sharing [ fig .  [ tetra ] ( b ) ] .",
    "suppose now that angular constraints at atoms of valence 2 are weaker and can be neglected in a crude approximation ( this is often the case when these are oxygen atoms  @xcite ) .",
    "then in the edge - sharing case one ends up with chains of edge - sharing tetrahedra that can rotate with respect to each other around a common edge .",
    "two tetrahedra with a common edge are topologically equivalent to a double - banana graph , with the common edge being the hinge .",
    "so a chain of edge - sharing tetrahedra is actually a chain of bananas .",
    "there are as many floppy modes ( in addition to rigid body motions of the whole chain ) as there are hinges ( or one less than there are tetrahedra in the chain ) . in the worst - case scenario , about a half of all hinges may end up being uncovered during the pebble game , and then the pebble game will miss about a half of the floppy modes .",
    "note that here the hinges are _ second _ neighbor constraints , so it is safer to insert second - neighbor constraints first to make sure they are covered  the situation opposite to that with purely bond - bending networks .",
    "of course , the worst - case scenario is unlikely  in reality , in the case of random insertion , it can be estimated numerically that in long chains , about 13.5% of the floppy modes are going to be missed .",
    "in this paper , we have described an extension of the pebble game algorithm for rigidity analysis that was used previously for the special class of bond - bending networks in 3d .",
    "the new algorithm is applicable to general 3d networks , but is approximate : there are networks for which there are errors in the number of floppy modes , rigid cluster decomposition and/or finding stress .",
    "we have also introduced a slower but exact algorithm , the relaxation algorithm . unlike the pebble game",
    ", it is not an integer algorithm ( it involves floating point operations ) , but it has a number of built - in consistency checks , so errors due to rounding are unlikely in the final result . the relaxation algorithm can be used for comparison with the pebble game using a few representatives of a particular class of networks , before the latter algorithm is used more extensively .    using the relaxation algorithm and other considerations ,",
    "we have argued that for randomly diluted central - force networks , the pebble game algorithm is essentially exact , as far as the percolating cluster size , stressed bonds , and the number of floppy modes are concerned ; errors are possible , but extremely rare . applying the pebble game to _ bond - diluted _ networks , we conclude that the rigidity percolation transition on such networks is first order , in contrast to bond - bending networks in 3d and central - force networks in 2d .",
    "in fact , the transition is actually first order geometrically , but second order physically , as it is known from previous work that the elastic constants change continuously at the transition . on the other hand , for _ site - diluted _ networks ,",
    "the order of the transition depends on the lattice type : first order for bcc and second order for fcc .",
    "the dependence of the order of the transition on the lattice type and the disorder type would be highly unusual and even though the evidence we present is rather strong , further research is needed to confirm our results .    at the same time , there are networks for which the pebble game is less successful . in particular , this is so for bond - bending networks , when the proper order of constraint insertion is not obeyed , and partially bond - bending networks , one example of which , chains of edge - sharing tetrahedra , is discussed in the paper .",
    "what makes the difference between the `` good '' and the `` bad '' networks ?",
    "in randomly diluted central - force networks , medium - sized and large clusters are relatively rare , even in site - diluted fcc nets in which they are much more frequent than in the other three cases considered here  much of the network is in clusters of sizes below 4 or in the percolating cluster .",
    "it is even more rare for two of such medium or large clusters to touch at exactly two places and form a hinge .",
    "but in bond - bending and partially bond - bending networks , every site of coordination at least 4 with its angular constraints present is associated with a cluster of at least site 5 , moreover , the vicinity of such a site is always stressed .",
    "if at the same time the _ average _ coordination of the network is low so the network is floppy overall , there will be many implied or stressed explicit hinges between such medium - sized clusters that can lead to errors in the pebble game .",
    "arguably , such situations are less frequent than those in which such hinges are rare , but in each case tests should be run before the pebble game algorithm is used .    of course , ideally one would desire an _ exact _",
    "integer algorithm for rigidity analysis .",
    "efforts to design such an algorithm have not paid off so far , and the authors would argue based on this experience that developing a polynomial - time pebble - game - type algorithm , while very interesting for the computer science and mathematical rigidity theory community , would be useless in practice : it is unlikely that such an algorithm would be sufficiently fast to beat the relaxation algorithm which is already appropriate for many purposes .",
    "we should like to thank d.j .",
    "jacobs and w.  whiteley for many discussions and insights over the past 4 years that have contributed many ideas that helped lead to the work described in this paper .",
    "we have also benefited from discussions at the workshop on modeling protein flexibility and motions in banff , alberta , canada ( july 2004 ) .",
    "we also acknowledge support from the nsf under grant dmr-0425970 and the natural sciences and engineering research council of canada ( nserc ) , and thank the rseau qubcois de calcul de haute performance ( rqchp ) for computer resources .",
    "here we look in more detail at possible small rigid clusters and stressed regions in central - force diluted bcc and fcc networks .",
    "as we have mentioned , the reason the rigidity transition is first order in the previously considered case of rbns has to do with the absence of finite rings and thus finite rigid clusters in these networks . while the same clearly can not be true for regular bcc and fcc lattices",
    ", it is interesting to find out if there are any similarities .",
    "we first find what cluster sizes are possible .",
    "for this , we use a computational procedure outlined below . its advantage",
    "compared to just looking at rigid cluster decomposition of many networks is that even if clusters of certain size are extremely rare and would never be seen in reality , they can still be found with our approach .",
    "the problem of generating rigid clusters resembles that of generating lattice animals in ordinary , connectivity percolation  @xcite .    basically , the idea of the approach is to generate the most rigid configuration of a given size through an optimization procedure .",
    "first , note that a rigid cluster with @xmath19 sites should contain at least @xmath104 constraints ( if it is rigid by itself ) , or @xmath105 constraints , if it shares a hinge with some other rigid cluster and is rigidified by it .",
    "so , if rigid clusters of size @xmath19 are possible , the maximum possible number of constraints ( where the maximum is taken over all possible graphs with @xmath19 sites on the full lattice ) should be at least @xmath104 ( or respectively @xmath105 ) . then the purpose is to maximize the number of constraints ( always equal to the number of bonds in central - force networks ) for given @xmath19 .",
    "this is done as follows .",
    "first of all , note that if the positions of the @xmath19 sites on the lattice are fixed , the optimum bond configuration consistent with those fixed positions will be the one containing all possible bonds connecting the sites in these fixed positions .",
    "then the idea is to move sites around on the lattice and while doing so try to maximize the number of possible connections between those sites .",
    "this can be done using an analog of the simulated annealing procedure  @xcite , where the `` energy '' that needs to be minimized is the negative number of connections for the given configuration of sites ( as this is the quantity being optimized ) .",
    "if the optimization is done carefully , we can be sure that the optimum number of bonds for given @xmath19 is reached .",
    "if this optimum number is less than @xmath105 , then a rigid cluster with @xmath19 sites is not possible ( we neglect the possibility of a cluster being rigidified by more than one external rigid cluster : at least in the bond - diluted case , rigid clusters of medium and large size , other than the single percolating cluster , are rare , so two of them coming together to rigidify a third one is even more rare ; even in the fcc site case , when medium - sized clusters are not rare , we have not seen such a situation ) .",
    "if the optimum number is exactly @xmath105 , then a standalone rigid cluster of size @xmath19 is not possible , but a cluster rigidified from the outside ( say , by the percolating cluster ) and sharing a hinge with it ( a situation similar to that in fig .  [ 2banana1 ] )",
    "is possible . if the optimum number of bonds is exactly @xmath104 , then a standalone rigid cluster is possible , but any such cluster will be isostatic ( stress is impossible ) . finally if the optimum number is @xmath106 or higher , then even a stressed region of size @xmath19 is possible .",
    "one caveat is that even a network with , say , @xmath104 bonds may be floppy , if it contains a stressed region .",
    "such situations are , however , easy to detect : start with the smallest @xmath19 , find the maximum number of bonds , then go to @xmath107 , etc . ;",
    "if the difference between the maximum number of bonds and the number of degrees of freedom ( @xmath108 ) ever goes _ down _ with increasing @xmath19 , this means that the network actually became floppier with increasing size and rigid clusters of the last analyzed size are impossible , even if the number of constraints is still @xmath104 or more .    using the above procedure , we have found possible sizes of rigid clusters and stressed regions for both fcc and bcc networks .",
    "for bcc , clusters of size 2 ( single bonds ) are , of course , possible , but standalone clusters of size 3 are not , because the bcc lattice does not contain triangles .",
    "however , clusters of size 3 rigidified by another cluster are possible ( indeed , we have observed many clusters of size 3 sharing a `` trivial '' implied hinge with the percolating cluster , as we have discussed in subsection  [ relaxcf ] )",
    ". clusters of sizes 4 , 5 , etc .",
    "( either standalone or not ) are _ not _ possible , however ; the next possible non - standalone cluster size is 84 and the next possible standalone cluster size is 90 . the smallest possible standalone stressed region has size 96 .",
    "so even though , unlike in rbns , rings of small sizes are possible , small rigid clusters ( other than trivial single sites , single bonds and triangles ) are still not possible , like in rbns . of course",
    ", in rbns clusters of _ any _ finite size are not possible , and here clusters of size 84 and higher can exist at least in principle .",
    "but in practice , such clusters are extremely rare , as we show below .    for fcc , the situation is different .",
    "it turns out that rigid clusters of _ all _ sizes are possible ( except standalone clusters of size 5 are not possible , but non - standalone clusters of this size are still possible ) .",
    "however , using the relaxation algorithm , we have seen that the frequency of clusters decreases very fast with their size : there are a lot of clusters of size 2 and 3 , clusters of size 4 are much more rare and there are almost no clusters of a larger size .",
    "standalone stressed regions , on the other hand , start at size 10 and these are much more rare ( non - standalone stressed regions are essentially double - banana situations , and we discuss them separately , in subsection  [ relaxcf ] and later in this appendix ) .",
    "obviously , the optimization procedure described above not only answers the question about the possibility of a cluster of a certain size , but also produces a realization of such a cluster when the answer is positive .",
    "if the optimization procedure is carried out many times starting from different initial configurations and using different random number sequences in the simulated annealing , eventually the set of final configurations will reproduce the complete set of possible rigid clusters .",
    "this allows an estimate of probabilities of certain clusters .",
    "we consider the case of bond dilution first and then make a comparison to site dilution at the end of this appendix . for simplicity",
    ", we will consider the situation when all clusters of a given size @xmath19 have the same number of bonds @xmath109 equal to the maximum possible one . in fcc , for instance , this will be the case for all clusters of sizes smaller than 10 ( the smallest stressed region ) .",
    "we also consider standalone clusters only at this point .",
    "suppose the total number per site of possible rigid cluster configurations of size @xmath19 is @xmath110 ( this includes all configurations related by symmetry ) .",
    "then the frequency per site of clusters of size @xmath19 , @xmath111 , can be estimated as @xmath112 where @xmath77 is the fraction of present bonds in the network .",
    "this involves three assumptions : ( a ) such clusters are rare so `` excluded volume '' effects can be neglected ; ( b ) the cluster frequency decreases fast with increasing cluster size , so that the probability of clusters of size larger than @xmath19 can be neglected when calculating the probability of clusters of size @xmath19 ; ( c ) there is no percolating cluster .",
    "table  [ table1 ] gives the frequencies observed in simulations for fcc networks using both the relaxation algorithm and the pebble game , compared to the estimates obtained using eq .",
    "( [ freq_bond ] ) with @xmath113 calculated using the `` simulated annealing '' procedure described above and assuming @xmath114 , which is true for @xmath115 ( for this reason , we do not give estimates for @xmath116 and above ) .",
    "for the simulation results , we use just non - percolating networks , since eq .",
    "( [ freq_bond ] ) ignores the possibility of existence of the percolating cluster .",
    "we also note that nearly all clusters in non - percolating networks are standalone , which is another assumption behind eq .",
    "( [ freq_bond ] ) . for the relaxation study",
    ", we use the sample of 3100 500-site networks described in subsection  [ relaxcf ] .",
    "of these , there are 1812 non - percolating networks , with a total of 906 000 sites .",
    "thus , to obtain the frequency per site , the total number of observed clusters of a given size is divided by 906 000 .",
    "for the pebble game study , we also use 500-site networks , but a much higher number of them : @xmath117 networks , of which more than @xmath118 are non - percolating ( a much higher percentage of non - percolating networks compared to the sample used in the relaxation study is simply due to the fact than in the pebble game runs , we fix the bond number to 1470 , which is slightly below the transition , whereas in the relaxation runs , the number of bonds varies between 1460 and 1490 and this spans the whole transition region ) .",
    "much better statistics we are able to obtain with the pebble game illustrates its advantage compared to the relaxation algorithm . at the same time , it can be seen that the frequencies obtained using these two methods are essentially the same , apart from the statistical noise ; this is yet another confirmation of the accuracy of the pebble game algorithm . for the theoretical estimate",
    ", we use @xmath119 ; this corresponds to 1470 bonds , which is the same number used in the pebble game runs and close to the average over the relaxation runs .",
    "it is seen that the frequency tends to be overestimated somewhat , especially for larger sizes , so rare larger clusters , hinges , etc .",
    ", may even be more rare than the estimates below suggest ."
  ],
  "abstract_text": [
    "<S> a fast computer algorithm , the pebble game , has been used successfully to analyze the rigidity of 2d elastic networks , as well as of a special class of 3d networks , the bond - bending networks , and enabled significant progress in studies of rigidity percolation on such networks . </S>",
    "<S> application of the pebble game approach to general 3d networks has been hindered by the fact that the underlying mathematical theory is , strictly speaking , invalid in this case . </S>",
    "<S> we construct an approximate pebble game algorithm for general 3d networks , as well as a slower but exact algorithm , the relaxation algorithm , that we use for testing the new pebble game . </S>",
    "<S> based on the results of these tests and additional considerations , we argue that in the particular case of randomly diluted central - force networks on bcc and fcc lattices , the pebble game is essentially exact . using the pebble game </S>",
    "<S> , we observe an extremely sharp jump in the largest rigid cluster size in bond - diluted central - force networks in 3d , with the percolating cluster appearing and taking up most of the network after a single bond addition . </S>",
    "<S> this strongly suggests a first order rigidity percolation transition , which is in contrast to the second order transitions found previously for the 2d central - force and 3d bond - bending networks . while a first order rigidity transition has been observed for bethe lattices and networks with `` chemical order '' , this is the first time it has been seen for a regular randomly diluted network . in the case of site dilution , the transition is also first order for bcc , but results for fcc suggest a second order transition . even in bond - diluted lattices , while the transition appears massively first order in the order parameter ( the percolating cluster size ) , it is continuous in the elastic moduli . </S>",
    "<S> this , and the apparent non - universality , make this phase transition highly unusual . </S>"
  ]
}
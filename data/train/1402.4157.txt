{
  "article_text": [
    "due to their practical importance , multi - agent collision avoidance and control have been extensively studied across different communities including ai , robotics and control . considering continuous stochastic trajectories , reflecting each agent s uncertainty about its neighbours time - indexed locations in an environment space , we exploit a distribution - independent bound on collision probabilities to develop a conservative collision - prediction module .",
    "it avoids temporal discretisation by stating collision - prediction as a one - dimensional optimization problem .",
    "if mean and standard deviation are computable lipschitz functions of time , one can derive lipschitz constants that allow us to guarantee collision prediction success with low computational effort .",
    "this is often the case , for instance , when dynamic knowledge of the involved trajectories is available ( e.g. maximum velocities or even the stochastic differential equations ) .    to avoid collisions",
    "detected by the prediction module , we let an agent re - plan repeatedly until no more collisions occur with a definable probability . here , re - planning refers to modifying a control signal ( influencing the basin of attraction and equilibrium point of the agent s stochastic dynamics ) so as to bound the collision probability while seeking low plan execution cost in expectation . to keep the exposition concrete",
    ", we focus our descriptions on an example scenario where the plans correspond to sequences of setpoints of a feedback controller regulating an agent s noisy state trajectory .",
    "however , one can apply our method in the context of more general policy search problems .    in order to foster low social cost across the entire agent collective , we compare two different coordination mechanisms .",
    "firstly , we consider a simple fixed - priority scheme @xcite , and secondly , we modify an auction - based coordination protocol @xcite to work in our continuous setting .",
    "in contrast to pre - existing work in auction - style multi - agent planning ( e.g. @xcite ) and multi - agent collision avoidance ( e.g. @xcite ) , we avoid _ a priori _ discretizations of space and time .",
    "instead , we recast the coordination problem as one of incremental open - loop policy search .",
    "that is , as a succession of continuous optimisation or root - finding problems that can be efficiently and reliably solved by modern optimisation and root - finding techniques ( e.g. @xcite ) .",
    "while our current experiments were conducted with linear stochastic differential equation ( sde ) models with state - independent noise ( yielding gaussian processes ) , our method is also applicable to any situation where mean and covariances can be evaluated .",
    "this encompasses non - linear , non - gaussian cases that may have state - dependent uncertainties ( cf .",
    "@xcite ) .",
    "this preprint is an extended and improved version of a conference paper that appeared in _ proc . of the 13th international conference on autonomous agents and multiagent systems ( aamas 2014 ) _",
    "@xcite .",
    "multi - agent trajectory planning and task allocation methods have been related to auction mechanisms by identifying locations in state space with atomic goods to be auctioned in a sequence of repeated coordination rounds ( e.g. @xcite ) .",
    "unfortunately , even in finite domains the coordination is known to be intractable  for instance the sequential allocation problem is known to be np - hard in the number of goods and agents @xcite . furthermore , collision avoidance corresponds to non - convex interactions .",
    "this renders the coordination problem inapplicable to standard optimization techniques that rely on convexity of the joint state space . in recent years",
    ", several works have investigated the use of mixed - integer programming techniques for single- and multi - agent model - predictive control with collision avoidance both in deterministic and stochastic settings @xcite . to connect the problem to pre - existing mixed - integer optimization tools",
    "these works had to limit the models to dynamics governed by linear , time - discrete difference equations with state - independent state noise .",
    "the resulting plans were finite sequences of control inputs that could be chosen freely from a convex set .",
    "the controls gained from optimization are open - loop  to obtain closed - loop policies the optimization problems have to be successively re - solved on - line in a receding horizon fashion . however",
    ", computational effort may prohibit such an approach in multi - agent systems with rapidly evolving states .",
    "furthermore , prior time - discretisation comes with a natural trade - off . on the one hand , one would desire a high temporal resolution in order to limit the chance of missing a collision predictably occurring between consecutive time steps . on the other hand , communication restrictions , as well as poor scalability of mixed - integer programming techniques in the dimensionality of the input vectors , impose severe restrictions on this resolution . to address this trade - off",
    ", @xcite proposed to interpolate between the optimized time steps in order to detect collisions occurring between the discrete time - steps . whenever a collision was detected they proposed to augment the temporal resolution by the time - step of the detected collision thereby growing the state - vectors incrementally as needed . a detected conflict , at time @xmath0 ,",
    "is then resolved by solving a new mixed - integer linear programme over an augmented state space , now including the state at @xmath0 .",
    "this approach can result in a succession of solution attempts of optimization problems of increasing complexity , but can nonetheless prove relatively computationally efficient .",
    "unfortunately , their method is limited to linear , deterministic state - dynamics .",
    "another thread of works relies on dividing space into polytopes @xcite , while still others @xcite adopt a potential field . in not accommodating uncertainty and stochasticity ,",
    "these approaches are forced to be overly conservative in order to prevent collisions in real systems .",
    "in contrast to all these works , we will consider a different scenario .",
    "our exposition focuses on the assumption that each agent is regulated by influencing its continuous stochastic dynamics .",
    "for instance , we might have a given feedback controller with which one can interact by providing a sequence of setpoints constituting the agent s plan .",
    "while this restricts the choice of control action , it also simplifies computation as the feedback law is fixed .",
    "the controller can generate a continuous , state - dependent control signal based on a discrete number of control decisions , embodied by the setpoints .",
    "moreover , it renders our method applicable in settings where the agents plants are controlled by standard off - the - shelf controllers ( such as the omnipresent pid - controllers ) rather than by more sophisticated customized ones . instead of imposing discreteness",
    ", we make the often more realistic assumption that agents follow continuous time - state trajectories within a given continuous time interval . unlike most work @xcite in this field , we allow for stochastic dynamics , where each agent can not be certain about the location of its team - members .",
    "this is crucial for many real - world multi - agent systems .",
    "the uncertainties are modelled as state - noise which can reflect physical disturbances or merely model inaccuracies .",
    "while our exposition s focus is on stochastic differential equations , our approach is generally applicable in all contexts where the first two moments of the predicted trajectories can be evaluated for all time - steps . as noted above",
    ", this paper is an extended version of work that has been published in the proceedings of aamas14 @xcite and an earlier stage of this work was presented at an icml @xcite workshop .",
    "* task*. our aim is to design a collision - detection module that can decide whether a set of ( predictive ) stochastic trajectories is collision - free ( in the sense defined below ) .",
    "the module we will derive is guaranteed to make this decision correctly , based on knowledge of the first and second order moments of the trajectories alone . in particular , no assumptions are made about the family of stochastic processes the trajectories belong to . as the required collision probabilities will generally have to be expressed as non - analytic integrals , we will content ourselves with a fast , _ conservative _ approach .",
    "that is , we are willing to tolerate a non - zero false - alarm - rate as long as decisions can be made rapidly and with zero false - negative rate . of course",
    ", for certain distributions and plant shapes , one may derive closed - form solutions for the collision probability that may be less conservative and hence , lead to faster termination and shorter paths . in such cases",
    ", our derivations can serve as a template for the construction of criterion functions on the basis of the tighter probabilistic bounds .",
    "* problem formalization*. formally , a collision between two objects ( or agents ) @xmath1 at time @xmath2 \\subset { \\mathbb r}$ ] can be described by the event    @xmath3 @xmath4 . here ,",
    "@xmath5 denote the objects diameters , and @xmath6 are two ( possibly uncertain ) trajectories in a common , @xmath7-dimensional interaction space .    in a stochastic",
    "setting , we desire to bound the collision probability below a threshold @xmath8 at any given time in i. we loosely say that the trajectories are _ collision - free _ if @xmath9   < \\delta , \\forall t \\in i$ ] .    * approach . * for conservative collision detection between two agents stochastic trajectories",
    "@xmath10 , we construct a _ criterion function _ @xmath11 ( eq . as per eq .",
    "[ eq : critfctgeneric ] below ) .",
    "a conservative criterion function has the property @xmath12   < \\delta^{\\ensuremath { \\mathfrak a}}$ ]",
    ". that is , a collision between the trajectories with probability above @xmath13 can be ruled - out if @xmath14 attains only positive values .",
    "if one could evaluate the function @xmath15 $ ] , an ideal criterion function would be @xmath16.\\ ] ] it is ideal in the sense that @xmath17 < \\delta$ ] .",
    "however , in most cases , evaluating the criterion function in closed form will not be feasible .",
    "therefore , we adopt a conservative approach : that is , we determine a criterion function @xmath18 such that provably , we have @xmath19 , including the possibility of false - alarms .",
    "that is , it is possible that for some times @xmath0 , @xmath20 , in spite of @xmath21 .",
    "utilising the conservative criterion functions for collision - prediction , we assume a collision occurs unless @xmath22 .",
    "if the trajectories means and standard deviations are lipschitz functions of time then one can often show that @xmath14 is lipschitz as well .",
    "in such cases negative values of @xmath14 can be found or ruled out rapidly , as will be discussed in sec .",
    "[ sec : lipfctnegvalsfind ] . in situations where a lipschitz constant is unavailable or hard to determine",
    ", we can base our detection on the output of a global minimization method such as direct @xcite .",
    "let @xmath23 \\subset { \\mathbb r}$ ] .",
    "assume we are given a lipschitz continuous _ target function _",
    "@xmath24 with lipschitz constant @xmath25 .",
    "that is , @xmath26 .",
    "let @xmath27 and define @xmath28 to be the _ sample grid _ of size @xmath29 consisting of the inputs at which we choose to evaluate the target @xmath30 .",
    "_ our goal is to prove or disprove the existence of a negative function value of target @xmath30_.      as a first , naive method , alg .",
    "[ alg : negdetect_lipschitz ] leverages lipschitz continuity to answer the question of positivity correctly after a finite number of function evaluations .",
    "@xmath31 ; @xmath32 ;    @xmath33 ;    @xmath34 ;    the algorithm evaluates the function values on a finite grid assuming a uniform constant lipschitz number @xmath35 .",
    "the grid is iteratively refined until either a negative function value is found or , the lipschitz continuity of function @xmath36 allows us to infer that no negative function values can exist .",
    "the latter is the case whenever @xmath37 where @xmath38 is the grid of function input ( time ) samples , @xmath39 and @xmath40 a lipschitz number of the function @xmath41 which is to be evaluated .",
    "the claim is established by the following lemma :    let @xmath42\\subset { \\mathbb r}\\to { \\mathbb r}$ ] be a lipschitz function with lipschitz number @xmath43 .",
    "furthermore , let @xmath44 be an equidistant grid with @xmath45 .    we have , @xmath46 if @xmath47 .",
    "since @xmath35 is a lipschitz constant of @xmath36 we have @xmath48 .",
    "now , let @xmath49 and @xmath50 such that @xmath51 $ ] .",
    "consistent with the premise of the implication we aim to show , we assume @xmath52 and , without loss of generality , we assume @xmath53 . let @xmath54 . since @xmath55 we have @xmath56 .",
    "finally , @xmath57 implies @xmath58 .",
    "appart from a termination criterion , the lemma establishes that larger lipschitz numbers will generally cause longer run - times of the algorithm as finer resolutions @xmath59 will be required to ensure non - negativity of the function under investigation .",
    "next , we will present an improved version of the algorithm provided above .",
    "we can define two functions , _ ceiling _ @xmath60 and _ floor _ @xmath61 , such that ( i ) they bound the target @xmath62 , and ( ii ) the bounds get tighter for denser grids .",
    "in particular , one can show that @xmath63 uniformly if @xmath64 converges to a dense subset of @xmath65 $ ] .",
    "define @xmath66 .",
    "it has been shown that @xmath67 and @xmath68 ( see @xcite ) .",
    "it is trivial to refine this to take localised lipschitz constants into account : @xmath69 where @xmath70 is a lipschitz number valid on interval @xmath71 .",
    "this suggests the following algorithm : _ we refine the grid @xmath64 to grid @xmath72 , by including @xmath73 as a new sample .",
    "this process is repeated until either of the following stopping conditions are met : ( i ) a negative function value of @xmath36 is discovered ( @xmath74 ) , or ( ii ) @xmath75 ( in which case we are guaranteed that no negative function values can exist)_.    @xmath31 ; @xmath32 ;    @xmath33 ;    @xmath76 ;    for pseudo - code refer to alg .",
    "[ alg : negdetect_lipschitz_shubertstyle ] .",
    "an example run is depicted in fig .",
    "[ fig : shubert ] .",
    "note , without our stopping criteria , our algorithm degenerates to shubert s minimization method @xcite .",
    "the stopping criteria are important to save computation , especially in the absence of negative function values .",
    "this subsection is dedicated to the derivation of a ( lipschitz ) criterion function . in lieu to the approach of @xcite , the idea is to define hyper - cuboids @xmath77 sufficently large to contain a large enough proportion of each agent s probability mass to ensure that no collision occurs ( with sufficient confidence ) as long as the cuboids do not overlap .",
    "we then define the criterion function so as to negative values whenever the hyper - cuboids do overlap .    for ease of notation",
    ", we omit the time index @xmath0 .",
    "for instance , in this subsection , @xmath78 now denotes random variable @xmath79 rather than the stochastic trajectory .",
    "the next thing we will do is to derive sufficient conditions for absence of collisions , i.e. for @xmath80 < \\delta$ ] .    to this end",
    ", we make an intermediate step : for each agent @xmath81 we define an open hyper - cuboid @xmath82 centred around mean @xmath83 . as a @xmath7-dimensional hyper - cuboid , @xmath82 is completely determined by its centre point @xmath84 and its edge lengths @xmath85 .",
    "let @xmath86 denote the event that @xmath87 and @xmath88 $ ] .",
    "we derive a simple disjunctive constraint on the component distances of the means under which we can guarantee that the collision probability is not greater than the probability of at least one object being outside its hyper - cuboid .",
    "this is the case if the hypercuboids do not overlap .",
    "that is , their max - norm distance is at least @xmath89 .    before engaging in a formal discussion we need to establish a preparatory fact :    [ lem : star ] let @xmath90 denote the @xmath91th component of object @xmath92 s mean and @xmath93 .",
    "furthermore , let @xmath94 be the event that no collision occurs and @xmath95 the event that @xmath96 and @xmath97 .",
    "assume the component - wise distance between the hyper - cuboids @xmath98 is at least @xmath99 , which is expressed by the following disjunctive constraint : @xmath100    then , we have : @xmath101    since @xmath102 we have    @xmath103 @xmath104 .",
    "it remains to be shown that @xmath105 : let @xmath106 .",
    "thus , @xmath107 . for contradiction , assume @xmath108 .",
    "then , @xmath109 for all @xmath110 .",
    "hence , @xmath111 @xmath112 which contradicts our disjunctive constraint in the premise of the lemma . q.e.d .",
    "[ thm : hypercubprobsconstr ] let @xmath90 denote the @xmath91th component of object @xmath92 s mean and @xmath93 .",
    "assume , @xmath113 are random variables with means @xmath114 , respectively . the max - norm distance between hypercuboids",
    "@xmath98 is at least @xmath115 ( i.e. the hypercuboids do not overlap ) , which is expressed by the following disjunctive constraint : @xmath100    then , we have : @xmath116 \\leq p^{\\ensuremath { \\mathfrak a}}+ p^{\\ensuremath { \\mathfrak r}}- p^{\\ensuremath { \\mathfrak r}}\\ , p^{\\ensuremath { \\mathfrak a}}\\leq p^{\\ensuremath { \\mathfrak a}}+ p^{\\ensuremath { \\mathfrak r}}\\ ] ] where @xmath117 , ( { \\ensuremath { \\mathfrak q}}\\in \\{{\\ensuremath { \\mathfrak a}},{\\ensuremath { \\mathfrak r}}\\})$ ] .    as in lem .",
    "[ lem : star ] , let @xmath94 be the event that no collision occurs and let @xmath95 .",
    "we have @xmath118 $ ] @xmath119 = 1- { \\mathrm{pr}}[\\mathfrak f^{{\\ensuremath { \\mathfrak a}},{\\ensuremath { \\mathfrak r}}}]$ ] . by lem .",
    "[ lem : star ] we have @xmath120 and thus , @xmath121 \\leq",
    "1- { \\mathrm{pr}}[\\mathfrak b^{{\\ensuremath { \\mathfrak a}},{\\ensuremath { \\mathfrak r } } } ] = { \\mathrm{pr}}[\\overline { \\mathfrak b^{{\\ensuremath { \\mathfrak a}},{\\ensuremath { \\mathfrak r}}}}]$ ] . now , @xmath122 = { \\mathrm{pr}}[x^{\\ensuremath { \\mathfrak a}}\\notin h^{\\ensuremath { \\mathfrak a}}\\vee x^{\\ensuremath { \\mathfrak r}}\\notin h^{\\ensuremath { \\mathfrak r}}]$ ] @xmath123 . q.e.d .",
    "one way to define a criterion function is as follows :    @xmath124    where @xmath125 is the parameter vector of radii .",
    "( for notational convenience , we will often omit explicit mention of parameter @xmath126 in the function argument . )    for more than two agents , agent @xmath127 overall criterion function is @xmath128    thm .",
    "[ thm : hypercubprobsconstr ] tells us that the collision probability is bounded from above by the desired threshold @xmath13 if @xmath129 , provided we chose the radii @xmath130 ( @xmath131 ) such that @xmath132 .",
    "let @xmath81 .",
    "probability theory provides several distribution - independent bounds relating the radii of a ( possibly partly unbounded ) hypercuboid to the probability of not falling into it .",
    "that is , these are bounds of the form    @xmath133 where @xmath134 is a continuous function that decreases monotonically with increasing radii and @xmath135 represents additional information . in the case of chebyshev - type bounds information about the first two moments",
    "are folded in , i.e. @xmath136 where @xmath137 is the variance ( -covariance ) matrix .",
    "we then solve for radii that fulfil the inequality @xmath138 while simultaneously ensuring collision avoidance with the desired probability .",
    "inspecting eq .",
    "[ eq : critfctgeneric ] , it becomes clear that , in order to maximally diminish conservatism of the criterion function , it would be ideal to choose the radii in @xmath126 such that @xmath139 subject to the constraints @xmath140 . solving this constrained optimisation problem",
    "can often be done in closed form .    in the context where @xmath134 is derived from a chebyshev - type bound ,",
    "we propose to set as many radii as large as possible ( in order to decrease ( @xmath134 to satisfy the constraints ) while setting the radii @xmath141 as small as possible without violating the constraint ( where @xmath142 is some dimension ) .",
    "that is , we define the radii as follows : set @xmath143 .",
    "the remaining unknown variable , @xmath144 , then is defined as the solution to the equation @xmath145 .",
    "the resulting criterion function , denoted by @xmath146 , we obtain with this procedure of course depends on the arbitrary choice of dimension @xmath142 .",
    "therefore , we obtain a less conservative criterion function by repeating this process for each dimension @xmath142 and then constructing a new criterion function as the point - wise maximum : @xmath147 .    a concrete example of this procedure is provided below .",
    "we can use the above derivation as a template for generating criterion functions .    consider the following concrete example .",
    "combining union bound and the standard ( one - dim . )",
    "chebyshev bound yields @xmath148 \\leq \\sum_{j=1}^d \\frac{c_{jj}^{\\ensuremath { \\mathfrak q } } } { r_j^{\\ensuremath { \\mathfrak q}}r_j^{\\ensuremath { \\mathfrak q } } } = : \\beta(r_1^{\\ensuremath { \\mathfrak q}},\\ldots , r_d^{\\ensuremath { \\mathfrak q } } ; c^{\\ensuremath { \\mathfrak q}})$ ] . setting every radius , except @xmath144 ,",
    "to infinitely large values and @xmath134 equal to @xmath149 yields @xmath150 , i.e. @xmath151 .",
    "( note , this a correction of the radius provided in the conference version of this paper . ) finally , inserting these radii ( for @xmath152 ) into eq .",
    "[ eq : critfctgeneric ] yields our first collision criterion function : @xmath153 of course , this argument can be made for any choice of dimension @xmath142 .",
    "hence , a less conservative , yet valid , choice is @xmath154    notice , this function has the desirable property of being lipschitz continuous , provided the mean @xmath155 and standard deviation functions @xmath156 are . in particular",
    ", it is easy to show @xmath157 where , as before , @xmath158 denotes a lipschitz constant of function @xmath30 .    for the special case of two dimensions",
    ", we can derive a less conservative alternative criterion function based on a tighter two - dimensional chebyshev - type bound @xcite :    [ def : collcritfct2d ] let spatial dimensionality be @xmath159 .",
    "choosing    @xmath160    ( @xmath161 ) in eq .",
    "[ eq : critfctgeneric ] yields a valid distribution - independend criterion function .",
    "that is , @xmath12   < \\delta^{\\ensuremath { \\mathfrak a}}$ ]",
    ".    a proof sketch and a lipschitz constant ( for non - zero uncertainty ) are provided in the appendix .",
    "note , the lipschitz constant we have derived therein becomes infinite in the limit of vanishing variance . in that case , the presence of negative criterion values can be tested based on the sign of the minimum of the criterion function .",
    "this can be found employing a global optimiser .",
    "future work will investigate , in how far hoelder continuity instead of lipschitz continuity can be leveraged to yield a similar algorithm as the one provided in sec .",
    "[ sec : adaptivelipshubertstyle ] .",
    "let @xmath162 , @xmath163 such that @xmath164 a subset of agents .",
    "we define the event that @xmath165 collides with at least one of the agents in @xmath166 at time @xmath0 as @xmath167 . by union",
    "bound , @xmath168 \\leq \\sum_{{\\ensuremath { \\mathfrak r}}\\in { \\ensuremath { \\mathfrak a } } ' } { \\mathrm{pr } } [ \\mathfrak c^{{\\ensuremath { \\mathfrak a}},{\\ensuremath { \\mathfrak r}}}(t ) ] $ ] .",
    "[ multi - agent criterion ] let @xmath14 be valid criterion functions defined w.r.t . collision bound @xmath169 .",
    "we define _ multi - agent collision criterion function _ @xmath170 . if @xmath171 then the collision probability with @xmath166 is bounded below @xmath172 .",
    "that is , @xmath168 < \\delta^{\\ensuremath { \\mathfrak a}}|{\\ensuremath { \\mathfrak a}}'|.$ ] [ thm : mascritfct ]    let @xmath162 , @xmath163 such that @xmath164 a subset of agents .",
    "we define the event that @xmath165 collides with at least one of the agents in @xmath166 at time @xmath0 as @xmath173 .",
    "we have established that if @xmath174 then @xmath9   < \\delta^{\\ensuremath { \\mathfrak a}},\\forall { \\ensuremath { \\mathfrak r}}\\in { \\ensuremath { \\mathfrak a } } ' $ ] .",
    "now , let @xmath175 .",
    "thus , @xmath176   < \\delta^{\\ensuremath { \\mathfrak a}})$ ] therefore , @xmath177 \\leq { \\left\\vert{\\ensuremath { \\mathfrak a}}'\\right\\vert } \\delta^{\\ensuremath { \\mathfrak a}}$ ] . by union bound , @xmath168 \\leq \\sum_{{\\ensuremath { \\mathfrak r}}\\in { \\ensuremath { \\mathfrak a } } ' } { \\mathrm{pr } } [ \\mathfrak c^{{\\ensuremath { \\mathfrak a}},{\\ensuremath { \\mathfrak r}}}(t ) ] $ ]",
    ". consequently , we have @xmath168 \\leq { \\left\\vert{\\ensuremath { \\mathfrak a}}'\\right\\vert } \\delta^{\\ensuremath { \\mathfrak a}}$ ] . q.e.d .",
    "moreover , @xmath178 is lipschitz if the constituent functions @xmath14 are ( see appendix [ sec : derlipno ] ) .",
    "plotcritfct_chebyshev_tinyvar_diam1.pdf    our distribution - independent collision criterion functions have the virtue that they work for all distributions  not only the omnipresent gaussian .",
    "unfortunately , distribution - independence is gained at the price of conservativeness ( ref . to fig .",
    "[ fig : whittlecritfct ] ) . in our experiments in sec .",
    "[ sec : sims ] , the collision criterion function as per thm .",
    "[ def : collcritfct2d ] is utilized as an integral component of our collision avoidance mechanisms .",
    "the results suggest that the conservativeness of our detection module does not entail prohibitively high - false - alarm rates for the distribution - independent approach to be considered impractical .",
    "that said , whenever distributional knowledge can be converted into a criterion function .",
    "one could then use our derivations as a template to generate refined criterion functions using eq .",
    "[ eq : critfctgeneric ] with adjusted radii @xmath179,@xmath180 , reflecting the distribution at hand .",
    "in this section we outline the core ideas of our proposed approach to multi - agent collision avoidance . after specifying the agent s dynamics and formalizing the notion of a single - agent plan",
    ", we define the multi - agent planning task .",
    "then we describe how conflicts , picked - up by our collision prediction method , can be resolved . in sec .",
    "[ sec : coord ] we describe the two coordination approaches we consider utilizing to generate conflict - free plans . * i ) model ( example ) .",
    "* we assume the system contains a set @xmath181 of agents indexed by @xmath182 .",
    "each agent @xmath183 s associated plant has a probabilistic state trajectory following stochastic controlled @xmath7-dimensional state dynamics ( we consider the case @xmath184 ) in the continuous interval of ( future ) time @xmath185 $ ] .",
    "we desire to ask agents to adjust their policies to avoid collisions .",
    "each policy gives rise to a stochastic belief over the trajectory resulting from executing the policy . for our method to work ,",
    "all we require is that the trajectory s mean function @xmath186 and covariance matrix function @xmath187 are evaluable for all times @xmath188 .    a prominent class for which closed - form moments can be easily derived",
    "are linear stochastic differential equations ( _ _ sde__s ) .",
    "for instance , we consider the sde @xmath189 where @xmath190 are matrices @xmath191 is the state trajectory and @xmath192 is a vector - valued wiener process . here , @xmath193 could be interpreted as the control policy of a linear feedback - controller parametrised by @xmath194 .",
    "it regulates the state to track a desired trajectory @xmath195 where @xmath196 denotes the indicator function of the half - open interval @xmath197 \\subset [ 0,t^{\\ensuremath { \\mathfrak a}}]$ ] and each @xmath198 is a _",
    "setpoint_. if @xmath199 is positive definite the agent s state trajectory is determined by setpoint sequence @xmath200 ( aside from the random disturbances ) which we will refer to as the agent s _",
    "plan_. for example , plan @xmath201 could be used to regulate agent @xmath165 s _ start state _",
    "@xmath202 to a given _ goal state _ @xmath203 between times @xmath204 and @xmath205 . for simplicity",
    ", we assume the agents are always initialized with plans of this form before coordination commences .",
    "one may interpret a setpoint as some way to alter the stochastic trajectory .",
    "below , we will determine setpoints that modify a stochastic trajectory to reduce collision probability while maintaining low expected cost . from the vantage point of policy search , @xmath194 is agent @xmath165 s policy parameter that has to be adjusted to avoid collisions .",
    "* ii ) task .",
    "* each agent @xmath165 desires to find a sequence of setpoints @xmath206 such that ( i ) it moves from its start state @xmath207 to its goal state @xmath208 along a low - cost trajectory and ( ii ) such that along the trajectory its plant ( with diameter @xmath209 ) does not collide with any other agents plant in state space with at least a given probability @xmath210 .    *",
    "iii ) collision resolution*. an agent seeks to avoid collisions by adding new setpoints to its plan until the collision probability of the resulting state trajectory drops below threshold @xmath13 . for choosing these new setpoints",
    "we consider two methods * wait * and * free*. in the first method the agents insert a time - setpoint pair @xmath211 into the previous plan @xmath212 .",
    "since this aims to cause the agent to wait at its start location @xmath213 we will call the method wait .",
    "it is possible that multiple such insertions are necessary until collisions are avoided . of course , if a higher - priority agent decides to traverse through @xmath207 , this method is too rigid to resolve a conflict . in the second method",
    "the agent optimizes for the time and location of the new setpoint .",
    "let @xmath214 be the plan updated by insertion of time - setpoint pair @xmath215 .",
    "we propose to choose the candidate setpoint @xmath216 that minimizes a function being a weighted sum of the expected cost entailed by executing updated plan @xmath217 and a hinge - loss collision penalty @xmath218 .",
    "here , @xmath219 is computed based on the assumption we were to execute @xmath214 and @xmath220 determines the extent to which collisions are penalized .",
    "since the new setpoint can be chosen freely in time and state - space we refer to the method as free .",
    "we will now consider how to integrate our collision detection and avoidance methods into a coordination framework that determines who needs to avoid whom and at what stage of the coordination process .",
    "such decisions are known to significantly impact the _ social cost _",
    "( i.e. the sum of all agents individual costs ) of the agent collective .",
    "+ * fixed - priorities ( fp ) . * as a baseline method for coordination we consider a basic fixed - priority method ( e.g. @xcite ) . here , each agent has a unique ranking ( or priority ) according to its index @xmath165 ( i.e. agent 1 has highest priority , agent @xmath221 lowest ) . when all higher - ranking agents are done planning , agent @xmath165 is informed of their planned trajectories which it has to avoid with a probability greater than @xmath222 .",
    "this can be done by repeatedly invoking for collision detection and resolution methods described above until no further collision with higher - ranking agents are found .    *",
    "lazy auction protocol ( auc ) .",
    "* while the fp method is simple and fast the rigidity of the fixed ranking can lead to sub - optimal social cost and coordination success .",
    "furthermore , its sequential nature does not take advantage of possible parallelization a distributed method could . to alleviate this we propose to revert the ranking flexibly on a case - by - case basis .",
    "in particular , the agents are allowed to compete for the right to gain passage ( e.g. across a region where a collision was detected ) by submitting bids in the course of an auction .",
    "the structure of the approach is outlined in alg .",
    "[ alg : lazyauctions ] .",
    "assume an agent @xmath165 detects a collision at a particular time step @xmath223 and invites the set of agents @xmath224 to join an auction to decide who needs to avoid whom .",
    "in particular , the auction determines a winner who is not required to alter his plan . the losing agents need to insert a new setpoint into their respective plans designed to avoid all other agents in @xmath225 while keeping the plan cost function low .",
    "the idea is to design the auction rules as a heuristic method to minimize the social cost of the ensuing solution . to this end",
    ", we define the bids such that their magnitude is proportional to a heuristic magnitude of the expected regret for losing and not gaining passage .",
    "that is agent @xmath165 submits a bid @xmath226 .",
    "magnitude @xmath227 is defined as @xmath165 s anticipated cost @xmath228 for the event that the agent will not secure `` the right of passage '' and has to create a new setpoint @xmath216 ( according to ( iii ) ) tailored to avoid all other agents engaged in the current auction . on the other hand",
    ", @xmath229 is the cost of the unchanged plan @xmath212 .",
    "if there is a tie among multiple agents the agent with the lowest index among the highest bidders wins .",
    "acknowledging that @xmath230 is an estimated social cost ( based on current beliefs of trajectories ) after the auction , we see that the winner determination rule greedily attempts to minimize social cost : @xmath231 .",
    "[ cols= \" < , < , < \" , ]     * exp1 .",
    "* collision resolution was done with the wait method to update plans",
    ". draws from the sdes with the initial plans of the agents are depicted in fig .",
    "[ tab : exp1corridor ] ( left ) .",
    "the curves represent 20 noisy trajectories of agents 1 ( red ) and 2 ( blue ) .",
    "each curve is a draw from the stochastic differential dynamics obtained by simulating the execution of the given initial plan .",
    "the trajectories were simulated with the euler - maruyama method for a time interval of @xmath232 $ ] .",
    "the spread of the families of curves is due to the random disturbances each agent s controller had to compensate for during runtime .",
    "agent 1 desired to control the state from start state @xmath233 to goal @xmath234 .",
    "agent 2 desired to move from start state @xmath235 via intermediate goal @xmath236 ( at 1s ) to final goal state @xmath237 . while the agents meet their goals under the initial plans , their execution would imply a high probability of colliding around state @xmath238 ( cf .",
    "[ tab : exp1corridor ] ( left ) , tab .",
    "[ tab : data ] ) .",
    "coordination with fixed priorities ( 1 ( red ) @xmath239 2 ( blue ) ) yields conflict - free plans ( fig . [ tab : exp1corridor ] ( centre ) ) .",
    "however , agent 2 is forced to wait too long at its start location to be able to reach intermediate waypoint @xmath240 in time and therefore , decides to move directly to its second goal .",
    "this could spawn high social cost due to missing one of the designated goals ( tab .",
    "[ tab : data ] ) .",
    "by contrast , the auction method is flexible enough to reverse the ranking at the detected collision point causing agent 1 to wait instead of 2 ( fig . [",
    "tab : exp1corridor ] ( right ) ) .",
    "thereby , agent 2 is able to reach both of its goal states in time .",
    "this success is reflected by low social cost ( see tab . [",
    "tab : data ] ) .",
    "the setup was analogous to exp1 but with three agents and different start and goal states as depicted in fig .",
    "[ tab : exp2 ] .",
    "furthermore , collisions were avoided with the free method with 10 random initializations of the local optimizer .",
    "coordination of plans with fixed priorities ( 1 ( red ) @xmath239 2 ( blue ) @xmath239 3 ( green ) ) caused 2 to avoid agent 1 by moving to the left .",
    "consequently , 3 now had to temporarily leave its start and goal state to get out of the way ( see fig . [",
    "tab : exp2 ] ( centre ) ) . with two agents moving to avoid collisions social cost was relatively high ( see tab .",
    "[ tab : data ] ) . during coordination with the auction - based method agent 2 first chose to avoid agent 1 ( as in the fp method ) .",
    "however , losing the auction to agent 3 at a later stage of coordination , agent 2 decided to finally circumvent 1 by arcing to the right instead of to the left .",
    "this allowed 3 to stay in place ( see tab .",
    "[ tab : data ] ) .",
    "next , we conducted a sequence of experiments for varying numbers of agents ranging from @xmath241 . in each experiment",
    "all agents start locations were placed on a circle .",
    "their respective goals were placed on the opposite ends of the circle .",
    "the eigenvalues of the feedback gain matrices of each agent were drawn at random from a uniform distribution on the range [ 2,7 ] .",
    "an example situation for an experiment with 5 agents is depicted in fig . [",
    "tab : exp35agents ] .",
    "collision avoidance was achieved .",
    "note , that despite this setting being close to worst case ( i.e. almost all agents try to traverse a common , narrow corridor ) the coordination overhead is moderate ( see fig .",
    "[ tab : exp3barplots ] , right ) .",
    "also , all collisions were successfully avoided ( see fig . [",
    "tab : exp3barplots ] , left ) .",
    "this work considered multi - agent planning under stochastic uncertainty and non - convex chance - constraints for collision avoidance .",
    "in contrast to pre - existing work , we did not need to rely on prior space or time - discretisation .",
    "this was achieved by deriving criterion functions with the property that the collision probability is guaranteed to be below a freely definable threshold @xmath8 if the criterion function attains no negative values .",
    "thereby , stochastic collision detection is reduced to deciding whether such negative values exist . for lipschitz criterion functions",
    ", we provided an algorithm for making this decision rapidly .",
    "we described a general procedure for deriving criterion functions and presented two such functions based on chebyshev - type bounds .",
    "the advantage of using chebyshev inequalities is their independence of the underlying distribution .",
    "therefore , our approach is applicable to any stochastic state noise model for which the first two moments can be computed at arbitrary time steps . in particular",
    ", this would apply to models with state - dependent uncertainty and non - convex chance constraints which , to the best to our knowledge , have not been successfully approached in the multi - agent control literature .",
    "nonetheless , future work could build on our results and derive less conservative criterion functions by using more problem - specific probabilistic inequalities .",
    "for instance , in simple cases such as additive gaussian noise , tighter bounds can be given @xcite and used in eq .",
    "[ eq : critfctgeneric ] .    to enforce collision avoidance ,",
    "our method modified the agent s plans until no collisions could be detected . to coordinate the detection and avoidance efforts of the agents , we employed an auction - based as well as a fixed - priority method . +",
    "our experiments are a first indication that our approach can succeed in finding collision - free plans with high - certainty with the number of required coordination rounds scaling mildly in the number of agents . while in its present form ,",
    "the coordination mechanism does not come with a termination guarantee , in none of our simulations have we encountered an infinite loop . for graph routing",
    ", @xcite provides a termination guarantee of the lazy auction approach under mild assumptions .",
    "current work considers if their analysis can be extended to our continuous setting . moreover , if required , our approach can be combined with a simple stopping criterion that terminates the coordination attempt when a computational budget is expended or an infinite loop is detected .",
    "the computation time within each coordination round depends heavily on the time required for finding a new setpoint and for collision detection .",
    "this involves minimizing @xmath242 and @xmath243 , respectively .",
    "the worst - case complexity depends on the choice of cost functions , their domains and the chosen optimizer .",
    "fortunately , we can draw on a plethora of highly advanced global optimisation methods ( eg @xcite ) guaranteeing rapid optimization success . in terms of execution time",
    ", we can expect considerable alleviations from implementation in a compiled language .",
    "furthermore , the collision detection and avoidance methods are based on global optimization and thus , would be highly amenable to parallel processing  this could especially benefit the auction approach .    while our exposition was focussed on the task of defining setpoints of feedback - controlled agents ,",
    "the developed methods can be readily applied to other policy search settings , where the first two moments of the probabilistic beliefs over the trajectories ( that would result from applying the found policies ) can be computed .",
    "10    n.  ayanian and v.  kumar .",
    "decentralized feedback controllers for multiagent teams in environments with obstacles . , 26(5 ) , 2010 .",
    "d.  bareiss and j.  van  den berg .",
    "reciprocal collision avoidance for quadrotor helicopters using lqr - obstacles . in _ aaai-12 workshop on multiagent pathfinding _ , 2012 .",
    "m.  bennewitz , w.  burgard , and s.  thrun . exploiting constraints during prioritized path planning for teams of mobile robots . in",
    "_ iros _ , 2001 .",
    "l.  blackmore , h.  li , and b.  williams . .",
    "in _ american control conference _ , 2006 .",
    "j.  calliess , m. osborne , and s. roberts . towards auction - based multi - agent collision - avoidance under continuous stochastic dynamics .",
    "presented at _",
    "icml-2012 , workshop on markets , mechanisms , and multi - agent models - examining the interaction of machine learning and economics _ , 2012 .",
    "j.  calliess , m. osborne , and s. roberts .",
    "conservative collision prediction and avoidance for stochastic trajectories in continuous time and space . in _ proc .",
    "of the 13th int .",
    "conf . on autonomous agents and multiagent systems ( aamas )",
    "_ , 2014 .",
    "j.  calliess , d.  lyons , and u.  hanebeck .",
    "lazy auctions for multi - robot collision avoidance and motion control under uncertainty .",
    "technical report parg-01 - 11 , dept . of engineering science ,",
    "university of oxford , 2011 .",
    "chang , s.c .",
    "shadden , j.e .",
    "marsden , and r.  olfati - saber .",
    "collision avoidance for multiple agent systems . in _ decision and control , 2003",
    ". proceedings .",
    "42nd ieee conference on _ , volume  1 , pages 539543 .",
    "ieee , 2003 .",
    "dimarogonas , s.g .",
    "loizou , k.j .",
    "kyriakopoulos , and m.m .",
    "zavlanos . a feedback stabilization and collision avoidance scheme for multiple independent non - point agents . , 42(2):229243 , 2006 .",
    "m.  g. earl and r.  dandrea . . , 2005",
    "m.  a. erdmann and t.  lozano - perez .",
    "on multiple moving objects . , 1987 .",
    "c.  gardiner . .",
    "springer , 4th edition , 2009 .",
    "jones , c.d .",
    "peritunen , and b.e .",
    "lipschitzian optimization without the lipschitz constant . , 79(1 ) , 1991 .",
    "sven koenig , craig tovey , x.  zheng , and i.  sungur . .",
    "in _ ijcai _ , 2007 .",
    "d.  kostic , s.  adinandra , j.  caarls , and h.  nijmeijer .",
    "collision - free motion coordination of unicycle multi - agent systems . in _ american control conference",
    "( acc ) , 2010 _ , pages 31863191 .",
    "ieee , 2010 .",
    "m.  lagoudakis , v.  markakis , d.  kempe , p.  keskinocak , s.  koenig , a.  kleywegt , c.  tovey , a.  meyerson , and s.  jain .",
    "auction - based multi - robot routing . in _ int .",
    "conf . on robotics : science and systems _ , 2005 .",
    "y.  li and k.  gupta . motion planning of multiple agents in virtual environments on parallel architectures . in _",
    "icra _ , 2007 .",
    "nick littlestone and manfred  k. warmuth . the weighted majority algorithm . in _",
    "ieee symposium on foundations of computer science _ , pages 256261 , 1989 .",
    "d.  lyons , j.  calliess , and u.  hanebeck .",
    "chance constrained model predictive control for multi - agent systems with coupling constraints . in _ american control conference ( acc ) _ , 2012 .",
    "daniel lyons , j.p .",
    "calliess , and u.d .",
    "hanebeck . . ,",
    "2011 .    s.  mastellone , d.m .",
    "stipanovi , c.r .",
    "graunke , k.a .",
    "intlekofer , and m.w .",
    "formation control and collision avoidance for multi - agent non - holonomic systems : theory and experiments .",
    ", 27(1):107126 , 2008 .",
    "t.  sandholm .",
    "algorithm for optimal winner determination on combinatorial auctions . , 2002 .",
    "b.  shubert . a sequential method seeking the global maximum of a function .",
    ", 9 , 1972 .",
    "n.  srinivas , a.  krause , s.  kakade , and m.  seeger . .",
    "in _ icml _ , 2010 .",
    "stipanovi , p.f .",
    "hokayem , m.w .",
    "spong , d.d .",
    "iljak , et  al .",
    "cooperative avoidance control for multiagent systems .",
    ", 129:699 , 2007 .",
    "c.  tovey , m.  lagoudakis , s.  jain , and s.  koenig . the generation of bidding rules for auction - based robot coordination . in _ multi - robot systems : from swarms to intelligent automata _ , volume  3 , pages 314 , 2005 .",
    "j.  van  den berg , m.  lin , and d.  manocha .",
    "reciprocal velocity obstacles for real - time multi - agent navigation . in _",
    "icra _ , 2008 .",
    "p.  whittle . . , 1958",
    "we will now solve the mean and covariance for the dynamics given by the ito - sde describing the dynamics of the feedback controlled agents considered in the experiments of this paper .",
    "our aim is to obtain closed - form solutions avoiding the need to approximate any integrals .",
    "this ameliorates the computational burden of our method since mean and covariance matrix functions need to be evaluated frequently in the course of collision detection and resolution .    for all @xmath244 $ ] let @xmath245 , @xmath246 , @xmath247 and let @xmath248 be a normally distributed random vector .",
    "the solution to the sde @xmath249 is a gaussian process with vector - valued mean function @xmath250 \\to { \\mathbb r}^d$ ] and matrix - valued covariance function @xmath251 ^ 2 \\to { \\mathbb r}^{d\\times d}$ ] . here",
    "the mean components are @xmath252 and the covariance matrix function is @xmath253 where @xmath254.\\end{aligned}\\ ] ]    let @xmath255 .",
    "owing to the diagonal form of @xmath256 and @xmath257 and the independence of the output dimensions of the vector - valued wiener process , the given sde decomposes into a system of @xmath7 indpendent 1-dimensional sdes @xmath258 ( @xmath131 ) which can be treated separately .    for ease of notation",
    "we omit the subscripts yielding an sde of the form : @xmath259 . to solve each of these sdes",
    "we introduce the substitution @xmath260 . with ito s product rule",
    "we find @xmath261    where the last equality follows from substitution of the sde for @xmath262 and utilization the formal rules @xmath263 .",
    "this sde is solved by @xmath264 where the last integral is to be interpreted as an ito integral .",
    "re - substitution yields    @xmath265 random variables @xmath266 @xmath267)$ ] are given as affine transformations of a wiener process .",
    "since the wiener process is gaussian , the solution is clearly a gaussian process as long as @xmath268 is a normally distributed random variable .",
    "for notational convenience we define @xmath269 therefore , we can write    @xmath270    it remains to find the first and second moments .",
    "owing to the linearity of the expectation and , since the expectation of the ito integral of a non - anticipating integrand is zero , the mean function is : @xmath271    now , we calculate the second moment : @xmath272 where    @xmath273    once again leveraging that the expectation of an ito integral with non - anticipating integrand is zero , the cross - terms @xmath274 ( @xmath275 ) vanish . hence , we obtain @xmath276    hence , @xmath277    it is well - known that for non - anticipating @xmath278 interval @xmath279 we have @xmath280 applying this fact as well as leveraging the independent increments property of the wiener process yields : @xmath281 \\\\ & =   \\frac{\\nu}{2q }   [ e^{q ( 2\\min\\{t , s\\ } - ( s+t ) } - e^{q ( 2 t_0 - ( s+t ) ) } ] \\\\ & =   \\frac{\\nu}{2q }   [ e^{-q { \\left\\vertt - s\\right\\vert } } - e^{q ( 2 t_0 - ( s+t ) ) } ] \\ ] ]    notice , that when altering the plan and hence , @xmath282 , the integral @xmath283 has to be computed .",
    "for general forms of allowable @xmath282 we would have to rely on numerical approximation methods .",
    "since repeated calculations of solutions need to be done in the course of coordination we will want to alleviate the computational burden thereof as much as possible .",
    "this motivated our restriction to plans that give rise to step functions for which we can show that @xmath284 is closed - form .",
    "let @xmath285 $ ] .",
    "given plan @xmath286 where each @xmath287 .",
    "let @xmath288 , @xmath289 and @xmath290 .",
    "furthermore , let @xmath291 denote the jth component of step - function setpoint signal @xmath194 . we have @xmath292",
    "remember , @xmath197 \\subset [ 0,t^{\\ensuremath { \\mathfrak a}}]$ ] .",
    "we have @xmath293 calculation of the anti - derivate and substitution of the integration bounds yields the desired result .",
    "we immediately get the following corollary    [ thm : corlinsdefbindepoutputcomp ] let @xmath162 be an agent with controlled plant dynamics @xmath294 where for all @xmath244 $ ] : @xmath295 , @xmath296 ,    @xmath297 , @xmath247 .",
    "let @xmath298 be a normally distributed random vector .",
    "assume @xmath165 s plan is @xmath299 where each @xmath287 .",
    "let @xmath300 , @xmath288 , @xmath289 and @xmath290 .",
    "furthermore , let @xmath291 denote the jth component of step - function reference signal @xmath194 .",
    "the solution to agent @xmath165 s sde is a gaussian process with vector - valued mean function @xmath250 \\to { \\mathbb r}^d$ ] and matrix - valued covariance function @xmath251 ^ 2 \\to { \\mathbb r}^{d\\times d}$ ] . here",
    "the mean components are    @xmath301    and the covariance matrix function is @xmath253 where @xmath254.\\end{aligned}\\ ] ]",
    "so far , we have established how knowledge of the lipschitz number of a lipschitz function can be utilized to exclude the presence of any negative function values on a compact domain based on a finite number of function evaluations . to employ this insight in the context of collision detection",
    "we will have to know a lipschitz number @xmath35 of the criterion functions @xmath14 .",
    "we may consider two cases :    * we have a belief quantified as a distribution over the smallest lipschitz constant @xmath302 .",
    "let the cumulative distribution function of this belief be denoted by @xmath303 $ ] .",
    "that is , @xmath304 $ ] .",
    "if we desire a guaranteed success of collision detection of at least @xmath8 we invoke @xmath305 with a lipschitz number @xmath306 to detect non - positive values of @xmath14 . *",
    "if we do not have such a belief function or desire complete certainty in collision detection success it may be possible to derive a lipschitz number for the @xmath14 based on the mean and covariance functions of the agent s stochastic trajectories . in turn ,",
    "these may be derived from the agents sdes .",
    "how this can be accomplished is the subject of the remainder of this section .      in preparation of the derivations of lipschitz numbers , we need to establish a few basic properties of lipschitz continuous functions . as a convention , @xmath307 will always denote the lipschitz constant of a lipschitz continuous function @xmath308 .",
    "[ lem : liparithmetic ] let , @xmath309 .",
    "let @xmath310 be lipschitz on @xmath279 with lipschitz number @xmath311 and @xmath312 be lipschitz on @xmath313 with lipschitz number @xmath314 .",
    "we have :    1 .",
    "mapping @xmath315 is lipschitz on @xmath279 with constant @xmath316 .",
    "if @xmath317 is lipschitz on all of @xmath318 the concatenation @xmath319 is lipschitz on @xmath279 with lipschitz constant @xmath320 @xmath321 .",
    "3 .   let @xmath322 .",
    "@xmath323 is lipschitz on @xmath279 having a lipschitz constant @xmath324 .",
    "@xmath325 has lipschitz number at most @xmath326 .",
    "let @xmath327 and @xmath328 .",
    "product function @xmath329 has a lipschitz number on @xmath279 which is at most @xmath330 .",
    "let @xmath331 .",
    "we have @xmath332 .",
    "let @xmath333 and let @xmath334 .",
    "then @xmath335 on @xmath279 .",
    "@xmath30 cont .",
    "differentiable on i @xmath336 @xmath337 9 .",
    "let @xmath338 , @xmath339 . then @xmath340 . 10",
    "@xmath341 . 11 .",
    "@xmath30 cont .",
    "differentiable @xmath342 .",
    "* 1 ) * we show @xmath343 has the same lipschitz number as @xmath30 .",
    "let @xmath344 arbitrary .",
    "we enter a case differentiation :    _ 1st case : @xmath345_.    hence , @xmath346 .",
    "2nd case : @xmath347 .",
    "_    note , @xmath348 , iff @xmath349 .",
    "hence , @xmath350 @xmath351 .",
    "3rd case : @xmath352 .",
    "_ completely analogous to 2nd case .",
    "4th case : @xmath353_.    @xmath354 . + * 2 )",
    "* for arbitrary @xmath344 we have :    @xmath355 where the two inequalities are due to the lipschitz properties of @xmath317 and @xmath30 , respectively .",
    "+ * 3 ) * for arbitrary @xmath356 we have :    @xmath357 . + * 4 ) * for arbitrary @xmath356 we have :    @xmath358 @xmath359 @xmath360 . + * 5 ) * let @xmath344 , @xmath361 .",
    "@xmath362 @xmath363 @xmath364 @xmath365 @xmath366 @xmath367 . +",
    "* 6 ) * proof in `` nick weaver , lipschitz algebras '' .",
    "* 7 ) * let @xmath344 .",
    "@xmath368 @xmath369 @xmath370 @xmath371 . + * 8) * define @xmath372 . in two steps ,",
    "we show that @xmath373 is the smallest lipschitz constant .",
    "firstly , we show that it is a lipschitz constant : let @xmath374 .",
    "due to the mean value theorem @xmath375 \\subset i : \\frac{|f(t ) - f(t')|}{|t - t'| } = | \\dot f ( \\xi )",
    "| \\leq \\ell$ ] .",
    "secondly , we show that @xmath373 is the smallest lipschitz constant : let @xmath376 be another lipschitz constant such that @xmath377 . since @xmath279 is compact and @xmath378 is continuous",
    "there is some @xmath379 such that @xmath380 .",
    "pick any sequence @xmath381 such that @xmath382 .",
    "@xmath383 and @xmath376 is a lipschitz constant on @xmath279 .",
    "hence , @xmath384 .",
    "thus , @xmath385 . + * 9 ) * immediate consequence of 8) . + * 10 ) * @xmath386 where the last inequality follows from property 5 ) .",
    "* 11 ) * @xmath387 .",
    "notice , that several of the inequalities in the lemma are not tight ( eg .",
    "( 5 ) , ( 10 ) ) .",
    "therefore , it may sometimes be better not to apply it if instead one is able to determine the lipschitz constant directly to yield a lower lipschitz number .",
    "[ lem : lipschitzsqrt ] for @xmath388 let @xmath389 be the domain interval of square root function @xmath390 such that @xmath391 and @xmath392 .",
    "we have @xmath393 where @xmath394 denotes the lipschitz constant of the square root function on @xmath313 .    applying lem .",
    "[ lem : liparithmetic ] and leveraging differentiability of the square root function reduces the problem of determining a lipschitz constant to finding @xmath395 . since @xmath396 attains only negative values on @xmath389 we know that the first derivative @xmath397 is strictly monotonously decreasing",
    "thus , @xmath398 .",
    "[ def : collcritfct2d ] let spatial dimensionality @xmath159 .",
    "let @xmath399 denote the maximum upper bound on instantaneous collision probability at time @xmath0 agent @xmath162 is allowed to tolerate .",
    "let @xmath400 be the mean of trajectory @xmath401 and @xmath402 be the spatial between dimensions @xmath142 and @xmath91 at time @xmath0 .",
    "for @xmath403 let @xmath404 .",
    "let @xmath1 be two agents plants whose radii sum to @xmath99 with state trajectories @xmath10 , respectively .",
    "define @xmath405 the function @xmath406 is a valid criterion function .",
    "that is , @xmath12   < \\delta^{\\ensuremath { \\mathfrak a}}$ ] .    ( sketch ) let @xmath188 be an arbitrary but fixed time .",
    "it is straight - forward to adapt the proof of thm . 2 in @xcite to our case showing that @xmath9   < \\delta^{\\ensuremath { \\mathfrak a}}$ ] if @xmath407 for at least one @xmath408",
    "hence , @xmath409 < \\delta^{\\ensuremath { \\mathfrak a}}\\}$ ]",
    ".    for future reference we define @xmath410 and @xmath411 on the space of continuous functions on interval @xmath279 .",
    "[ thm : lipschitzno_whittle_2d ] let @xmath184 be the dimensionality of state space",
    ". for any agent @xmath165 let @xmath412 \\to { \\mathbb r}$ ] denote the @xmath91th component of @xmath165 s mean function and @xmath413 the covariance of agent @xmath165 s trajectory between dimension @xmath91 and @xmath142 at time @xmath0 .    for @xmath414 and all @xmath415 assume the @xmath416 are lipschitz on @xmath279 with lipschitz numbers @xmath417 and lipschitz numbers @xmath418 , respectively .",
    "let @xmath14 denote the collision criterion function between agents @xmath165 and @xmath419 as defined in thm .",
    "[ def : collcritfct2d ] .",
    "then @xmath14 is lipschitz on @xmath279 with lipschitz constant    @xmath420    where @xmath421 are defined as in def .",
    "[ def : collcritfct2d ] and    @xmath422 @xmath423 we have :    1 .",
    "@xmath424 , 2 .",
    "@xmath425 where @xmath426 and + where @xmath427 , and + @xmath428 . here , @xmath429 .",
    "3 .   also , @xmath430 , where @xmath431 , 4 .",
    "@xmath432 if @xmath433 , 5 .   and",
    "similarly , @xmath434 if @xmath435 . 6 .",
    "@xmath436 @xmath437 .",
    "the equalities follow from successively applying lem .",
    "[ lem : liparithmetic ] to the definitions of the parts of the criterion function given in thm .",
    "[ def : collcritfct2d ] . in our derivations",
    "we will note which of the properties of the lemma we utilized as a superscript above the inequality sign .",
    "we have    @xmath438 + @xmath439 + @xmath440 + @xmath441 + @xmath442 + _ proof of ineq .",
    "1 ) : _ by definition , @xmath443 + @xmath444 .    furthermore , to prove the remaining inequalities , assume @xmath445 .",
    "+ _ proof of ineq .",
    "2 ) : _ let @xmath446 . then , @xmath447 @xmath448    where the last inequality follows from lem . [",
    "lem : lipschitzsqrt ] and lem .",
    "[ lem : liparithmetic].(2 ) as before .",
    "furthermore , @xmath449",
    "@xmath450    @xmath451 where according to lem .",
    "[ lem : lipschitzsqrt ] , @xmath452 .",
    "hence , @xmath453 .",
    "+ _ proof of ineq .",
    "3 ) : _ we have @xmath454 + @xmath455 + @xmath456 where @xmath457 .",
    "inequality 2 ) now follows from applying lem .",
    "[ lem : lipschitzsqrt ] .",
    "+ from here we can make two alternative derivations :    \\i ) @xmath458 .",
    "alternatively , one can obtain :    \\ii ) @xmath459 .",
    "+ _ proof of ineq .",
    "@xmath460 @xmath461 @xmath462    @xmath463 where @xmath464 chosen such that @xmath465 = \\emptyset$ ] ( we assume such a @xmath466 exists ) .",
    "a valid choice certainly is @xmath467 .",
    "+ _ proof of ineq .",
    "5 ) : _ completely , analogous to proof of 4 ) .",
    "+ _ proof of ineq .",
    "6 ) : _ consequence of lem .",
    "[ lem : liparithmetic].(10 ) .",
    "the theorem provides a recipe to find a lipschitz bound for the collision criterion function given known lipschitz numbers of the trajectories means and spatial covariance mappings .",
    "however , since most equalities are not tight one should attempt to determine lipschitz numbers directly wherever possible rather than using the inequalities provided in lem .",
    "[ lem : liparithmetic ] .",
    "for instance , if one can determine the best lipschitz number for @xmath468 directly ( e.g. by utilizing lem [ lem : liparithmetic].11 ) this would normally yield a better lipschitz constant than obtained by expanding into @xmath469 due to application of lem .",
    "[ lem : liparithmetic].6 .    examining the terms in the inequalities we notice the occurrence of suprema of covariances @xmath470 or inverted covariances of the form @xmath471 .",
    "the latter requires non - vanishing uncertainty in our model .",
    "furthermore , note , the need to evaluate know the extrema is not to burdensome as they can be rapidly found by pre - existing lipschitz optimizers which are highly efficient .",
    "however , in many cases the optima are known a priori .",
    "for instance , if one knows that the uncertainty monotonously increases over time we have e.g. @xmath472 and @xmath473 .",
    "alternatively , the covariances may allow for an analytic closed - form solution of the extremum which may be analytically derived before run - time .",
    "we will revisit these issues in sec .",
    "[ sec : coll_detect_ex1 ] where we examine a concrete application of the theorem to a multi - agent control scenario .",
    "let @xmath162 be an agent with controlled plant dynamics given by the ito - sde @xmath474 here @xmath475 denotes the agent @xmath127 state ( e.g. location ) , @xmath476 is the agent s setpoint signal at time @xmath477 $ ] .",
    "furthermore , @xmath478 is the controller s gain matrix and @xmath247 reflects the magnitude of the uncertainties ( disturbances ) .",
    "let uncertain start state @xmath298 be a normally distributed random vector .",
    "assume @xmath165 s plan is @xmath299 where each @xmath287 .",
    "let @xmath300 , @xmath288 , @xmath289 and @xmath290 .",
    "furthermore , let @xmath291 denote the jth component of step - function reference signal @xmath194 .    for ease of notation we will drop the agent superscripts throughout the remainder of this subsection .",
    "the solution to agent @xmath165 s sde is a gaussian process with vector - valued mean function @xmath479 \\to { \\mathbb r}^d$ ] and matrix - valued covariance function @xmath480 ^ 2 \\to { \\mathbb r}^{d\\times d}$ ] . by applying ito - calculus to the suitable expectations of the sde",
    "we can show that we have @xmath481 the covariance matrix function is @xmath482 where @xmath483.\\end{aligned}\\ ] ]    using the notation of thm .",
    "[ thm : lipschitzno_whittle_2d ] we have    @xmath484 @xmath485 \\\\ & = e^{-k_j^{\\ensuremath { \\mathfrak a}}2(t - t_0 ) } \\bigl(c_{jj}^{\\ensuremath { \\mathfrak a}}(t_0 ) - \\frac{\\nu_j^{\\ensuremath { \\mathfrak a}}}{2 k_j^{\\ensuremath { \\mathfrak a } } } \\bigr ) + \\frac{\\nu_j^{\\ensuremath { \\mathfrak a}}}{2 k_j^{\\ensuremath { \\mathfrak a}}}.   \\end{aligned}\\ ] ] where @xmath486 is assumed to be a known quantification of the initial state uncertainty .",
    "next we will derive lipschitz constants for the the component means and covariances which is necessary to derive a lipschitz number for the collision criterion function .",
    "firstly , we consider the mean function .",
    "defining @xmath487 , @xmath488 and @xmath489 we we can restate the component mean function @xmath490 as    @xmath491 .",
    "leveraging lem .",
    "[ lem : liparithmetic ] we see that @xmath492 where as before @xmath493 for any function @xmath30 .",
    "evaluation of the suprema depends on the setpoint signal @xmath282 and on the @xmath494 .",
    "for instance , choosing a constant setpoint @xmath282 and @xmath495 would yield :    * @xmath496 } |-k_j^{\\ensuremath { \\mathfrak a}}{\\ensuremath { \\langle{\\ensuremath { { x}}}_j^{\\ensuremath { \\mathfrak a}}(t_0)\\rangle } } e^{k_j^{\\ensuremath { \\mathfrak a}}t_0 } e^{-k_j^{\\ensuremath { \\mathfrak a}}t}|$ ] @xmath497 where the last equality holds since @xmath498 decreases monotonically , * @xmath499 } |k_j^{\\ensuremath { \\mathfrak a}}e^{-k_j^{\\ensuremath { \\mathfrak a}}t}| = |k_j^{\\ensuremath { \\mathfrak a}}| e^{-k_j^{\\ensuremath { \\mathfrak a}}t_0}$ ] , * @xmath500 } |\\xi_j^{\\ensuremath { \\mathfrak a}}\\ , e^{k_j^{\\ensuremath { \\mathfrak a}}t } | = |\\xi_j^{\\ensuremath { \\mathfrak a}}|\\ , e^{k_j^{\\ensuremath { \\mathfrak a}}t_f } ,   $ ] * @xmath501 } |\\int_{t_0}^t e^{k_j^{\\ensuremath { \\mathfrak a}}\\tilde t }",
    "\\xi_j^{\\ensuremath { \\mathfrak a}}d \\tilde t|   = |\\frac{\\xi_j^{\\ensuremath { \\mathfrak a}}}{k_j^{\\ensuremath { \\mathfrak a } } } [ e^{k_j^{\\ensuremath { \\mathfrak a}}t_f } - e^{k_j^{\\ensuremath { \\mathfrak a}}t_0}]|$ ] .",
    "here we leveraged the monotonicity of the exponential function .",
    "+ next , we derive lipschitz constants for the covariances : + note the cross - covariances are zero @xmath502 .",
    "fortunately , the diagonal of the covariance matrix function are also continuously differentiable .",
    "in particular , we have @xmath503",
    ". we can once again utilize lem .",
    "[ lem : liparithmetic ] yielding a lipschitz bound @xmath504 } |k_j^{\\ensuremath { \\mathfrak a}}2 \\bigl(c_{jj}^{\\ensuremath { \\mathfrak a}}(t_0 ) - \\frac{\\nu_j^{\\ensuremath { \\mathfrak a}}}{2 k_j^{\\ensuremath { \\mathfrak a } } } \\bigr )   | e^{-k_j^{\\ensuremath { \\mathfrak a}}2(t - t_0 ) }   \\\\   & =   |k_j^{\\ensuremath { \\mathfrak a}}2 \\bigl(c_{jj}^{\\ensuremath { \\mathfrak a}}(t_0 ) - \\frac{\\nu_j^{\\ensuremath { \\mathfrak a}}}{2 k_j^{\\ensuremath { \\mathfrak a } } } \\bigr )   | . \\end{aligned}\\ ] ] where the last equality follows from the fact that @xmath505 is monotonically decreasing .    in summary",
    ", we have found    @xmath506|.\\end{aligned}\\ ] ]    next , we combine our estimates of the mean and covariances with lem . [",
    "lem : liparithmetic ] and thm .",
    "[ thm : lipschitzno_whittle_2d ] to derive a lipschitz number for the criterion function defined in thm .",
    "[ def : collcritfct2d ] .",
    "let @xmath414 .",
    "since @xmath507 we have @xmath508 . by thm .",
    "[ thm : lipschitzno_whittle_2d].2 , this implies @xmath509 @xmath510 @xmath511 where the last equality is due to lem .",
    "[ lem : liparithmetic].3 and due to the fact that @xmath512 for all constants @xmath513 , functions @xmath30 .",
    "next , we determine @xmath514 . by inspecting its derivative ,",
    "we notice that @xmath515 is strictly monotonously increasing iff @xmath516 and monotonously decreasing otherwise .",
    "also , @xmath517 does not attain negative values implying @xmath518 .",
    "hence , @xmath519",
    "@xmath520 now , we have all the necessary ingredients to utilize thm .",
    "[ thm : lipschitzno_whittle_2d ] in order to wrap - up : + @xmath521 + @xmath522    @xmath523| + |k_j^{\\ensuremath { \\mathfrak r}}\\mu^{\\ensuremath { \\mathfrak r}}_j(t_0)| + |k_j^{\\ensuremath { \\mathfrak r}}| |\\xi_j^{\\ensuremath { \\mathfrak r}}| e^{k_j^{\\ensuremath { \\mathfrak r}}(t_f - t_0 ) } + |\\xi_j^{\\ensuremath { \\mathfrak r}}\\ , [ e^{k_j^{\\ensuremath { \\mathfrak r}}(t_f - t_0 ) } - 1]| + \\frac{1}{2 } \\sqrt{\\frac{1}{2 \\delta^{\\ensuremath { \\mathfrak a } } } } \\frac{1}{\\iota(c^{\\ensuremath { \\mathfrak a}}_{jj } ) }   l ( c^{\\ensuremath { \\mathfrak a}}_{jj } ) + \\frac{1}{2 } \\sqrt{\\frac{1}{2 \\delta^{\\ensuremath { \\mathfrak r } } } } \\frac{1}{\\iota(c^{\\ensuremath { \\mathfrak r}}_{jj } ) }   l ( c^{\\ensuremath { \\mathfrak r}}_{jj } ) \\bigr\\}$ ] .",
    "we can see that this lipschitz number might adopt large values in certain parts of the domain .",
    "therefore , it might be helpful to recompute the lipschitz numbers adaptively for different parts of the domain .",
    "detection of collisions is based on excluding the possibility of negative criterion function values .",
    "however , as these functions are non - convex any numerical procedure executed on a digital computer has to achieve this with only a finite number of function evaluations . given this ,",
    "what is our confidence in not having missed a negative criterion function value ?",
    "thus far , we have proposed using a knowledge ( i.e. a prior ) about a lipschitz number of the criterion function to rule out collisions in continuous time based on a finite number of samples .",
    "in addition to the lipschitz - based method presented above , we will now consider an alternative method that assumes a prior belief about the anticipated change of sign of a criterion function .    before commencing",
    "it will prove helpful to introduce the notion of a _ sign change point ( scp)_. an scp is a time step which is the border between two changes in sign of a function .",
    "more precisely , time @xmath0 is an scp of function @xmath30 if there exist open intervals @xmath524 and @xmath525 such that @xmath526 .    to give an example , consider the function @xmath527}(t)+ ( t-1 ) \\chi_{{\\mathbb r}_{>1}}(t).\\ ] ] as before , @xmath528 denotes the indicator function of set @xmath529 .",
    "function @xmath308 has exactly two scps  at @xmath530 and @xmath531 .    resuming with our discussion ,",
    "assume we are given @xmath532 on a lattice of times @xmath533 .",
    "if @xmath534 for some @xmath535 we will want to conservatively assume a collision has occurred . on the other hand ,",
    "if all evaluations are positive we desire to specify our confidence that all intermittent unobserved values are .",
    "this is the case if no scps occur .",
    "the presence of an odd number of scps between two time steps @xmath536 is detectable by checking @xmath537 .",
    "in fact , if the total number @xmath538 of scps in @xmath539 $ ] is odd we will detect a change of sign .",
    "by contrast , if an even number of scps occur we have @xmath540 and hence , will be oblivious of negative function values in the interval @xmath541",
    ".    now , assume we are given a distribution @xmath542 $ ] representing our belief over the number of occurring scps . by the law of total probability ,",
    "our belief that we will miss the existence of a collision is @xmath543\\ ] ] where @xmath544 denotes the probability of missing the existence of a collision during collision detection given that @xmath538 scps occur in the interior of the lattice .            to generate a partition @xmath554 we need to select a subset of @xmath555 containing @xmath556 two - element sets .",
    "conservatively ( not taking into account that not every n/2 -element subset is an actual partition ) , this could be done in at most @xmath557 ways . hence @xmath558 .",
    "[ thm : collmissprobdue2evenscp ] assume we are given @xmath559 scps @xmath560 whose locations are drawn independently from an identical distribution ( drawn i.i.d . ) .",
    "furthermore , we are given a grid of test points @xmath561 where the intermediate times are chosen such that @xmath562 = 1/k$ ] .",
    "the probability of missing the existence of a collision by looking for non - positive elements in the sample @xmath532 is : @xmath563 where @xmath547 is a function of @xmath538 ( but not of @xmath564 ) as defined in lemma [ lem : nopartitionsintopairs_improved ] . in particular , we have @xmath565 .",
    "we define the sample space @xmath566 where each @xmath567 denotes the index of the time interval ( `` bin '' ) @xmath568 $ ] the @xmath142th scp @xmath569 falls into ( @xmath570 ) . due to the assumption that the assignment of scp to bin is i.i.d .",
    ", each sample has equal probability and we can compute @xmath544 as a laplace probability .",
    "that is , @xmath571 where @xmath572 is the set of events describing that no bin contains an odd number of scps ( because if at least one does contain an odd number we detect the presence of a collision ) .      on the other hand , @xmath574 where @xmath575 denotes the number of scps falling into bin @xmath576 .",
    "we will find an upper bound on @xmath577 cardinality by constructing a finite set @xmath578 for whose cardinality one can easily establish @xmath579 as an upper bound .",
    "we show that one can define an injective function @xmath580 .",
    "the latter establishes that @xmath581 .",
    "thus , @xmath582 which will hence conclude the proof .",
    "we generate @xmath578 by invoking a two - stage process ( where in each stage it is easy to enumerate all possible elements that are generated ) . in the first stage , we partition the scps into @xmath556 pairs ( which we always can since we assumed @xmath538 to be even ) . in the second stage",
    ", we assign these pairs to the bins in which the pairs are merged into joint sets of scps",
    ". therefore , @xmath583 .",
    "let @xmath547 be the number of ways in which one can partition the @xmath538 scps into @xmath556 ( unordered ) pairs i.e. @xmath548 .",
    "[ lem : nopartitionsintopairs_improved ] for a bound ) . in the second stage ,",
    "the pairs are distributed among the @xmath564 bins ( intervals ) ( which can be done in @xmath584 ways ) before the sets within each bin are merged .",
    "the number of different paths the process can take to generate an element in @xmath578 is @xmath547 ( number of partitions into pairs ) multiplied with @xmath585 ( number of ways the pairs constituting the partition can then be distributed into the bins ) .    by construction ,",
    "each final assignment ( subsets of scps to bins ) generated by the two - stage process is an element of @xmath578 .",
    "conversely , let @xmath586 then it is easy to verify it could be generated by the two - stage process ( however , there may be multiple paths in the process generating the same element of @xmath578 ) .",
    "hence , @xmath587 .",
    "we finalize our considerations by defining the function @xmath588 where @xmath589 and for @xmath590 : @xmath591 where @xmath592 .",
    "it is easy to see that @xmath593 maps different @xmath594 to different @xmath586 .",
    "hence , @xmath593 is injective .",
    "since both @xmath578 and @xmath572 are finite this implies @xmath581 .",
    "wrapping up , @xmath595 @xmath596 .",
    "in conjunction with eq .",
    "[ eq : lattice_coll_miss_prob ] , thm .",
    "[ thm : collmissprobdue2evenscp ] can provides a recipe how to do collision detection based on a finite number of criterion function samples such that our confidence in not having overlooked an existing collision is above a certain threshold @xmath597 . to this end",
    "we require a prior @xmath598 over the number of scps .",
    "let @xmath599 be a random variable quantifying the number of occurring scps and let @xmath600 denote the event that we would not detect the existence of an scp .    by the law of total probability we have @xmath601 & =    \\sum_{n\\in { \\mathbb n}_0 } { \\mathrm{pr}}[m | n = n , k ] \\,q[n = n ]   \\\\&= \\sum_{n\\in 2{\\mathbb n}_0 } { \\mathrm{pr}}[m | n = n , k ] \\ ,",
    "q[n = n ]   \\\\&= \\sum_{n\\in 2{\\mathbb n}_0 } p_{n , k } \\,q[n = n ]   \\label{eq : probmissscp}\\end{aligned}\\ ] ] where the last equality follows from @xmath602 = 0 , ( n \\in 2{\\mathbb n}-1 ) , k\\geq 1 $ ] .        as a simplistic example , assume we desire to detect a collision between two agents @xmath1 with plans containing two setpoints each ( stabilizing their start and goal state each ) and with linear dynamics .",
    "we know that at their start and goal locations , no collisions occur . given this our belief over",
    "the number @xmath538 of scps may be @xmath605 = 0.5 $ ] @xmath606 = .1 , q[n=2]=.4 $ ] .",
    "furthermore , in the given time interval [ 0,t ] we assume a flat prior distribution giving rise to an equidistant lattice @xmath561 of samples during collision detection .",
    "that is , @xmath607 for some @xmath564 .",
    "our collision detection method now inspects our criterion function values @xmath608 .",
    "if all values are positive we assume no collision has occurred .",
    "how large should we set @xmath564 in order to ensure that our confidence in this assertion is at least @xmath603 ? by thm .",
    "[ thm : collmissprobdue2evenscp ] , we know that the probability of having missed a collision with this simple method is less than @xmath609 .",
    "therefore , we need to set @xmath564 such that @xmath610 which is equivalent to setting the number @xmath564 of criterion function evaluations to @xmath611"
  ],
  "abstract_text": [
existing work in multi - agent collision prediction and avoidance typically assumes discrete - time trajectories with gaussian uncertainty or that are completely deterministic . </S>",
    "<S> we propose an approach that allows detection of collisions even between continuous , stochastic trajectories with the only restriction that means and covariances can be computed . to this end </S>",
    "<S> , we employ probabilistic bounds to derive criterion functions whose negative sign provably is indicative of probable collisions . for criterion functions that are lipschitz , </S>",
    "<S> an algorithm is provided to rapidly find negative values or prove their absence . </S>",
    "<S> we propose an iterative policy - search approach that avoids prior discretisations and , upon termination , yields collision - free trajectories with adjustably high certainty . </S>",
    "<S> we test our method with both fixed - priority and auction - based protocols for coordinating the iterative planning process . </S>",
    "<S> results are provided in collision - avoidance simulations of feedback controlled plants . </S>",

  ]
}
{
  "article_text": [
    "symmetry breaking is a widely used technique for solving combinatorial problems .",
    "symmetries have been used with great success in satisfiability  ( sat )  @xcite , and are regarded as an essential technique for solving specific classes of problem instances .",
    "symmetries have also been widely used for solving constraint satisfaction problems  ( csps )  @xcite .",
    "more recent work has shown how to apply symmetry breaking in pseudo - boolean  ( pb ) constraints  @xcite and also in soft constraints  @xcite .",
    "it should be noted that symmetry breaking is viewed as an effective problem solving technique , either for sat , pb or cp , that is often used as an alternative technique , to be applied when default algorithms are unable to solve a given problem instance .    in recent years",
    "there has been a growing interest in algorithms for maxsatand variants  @xcite , in part because of the wide range of potential applications .",
    "maxsatand variants represent a more general framework than either sat or pb , and so can naturally be used in many practical applications .",
    "the interest in maxsatand variants motivated the development of a new generation of maxsatalgorithms , remarkably more efficient than early maxsatalgorithms  @xcite . despite the observed improvements , there are many problems still too complex for maxsatalgorithms to solve  @xcite",
    ". natural lines of research for improving maxsatalgorithms include studying techniques known to be effective for either sat , pb or cp .",
    "one concrete example is symmetry breaking . despite its success in sat ,",
    "pb and cp , the usefulness of symmetry breaking for maxsatand variants has not been thoroughly studied .",
    "this paper addresses the problem of using symmetry breaking in maxsatand in its most well - known variants , partial maxsat , weighted maxsatand weighted partial maxsat .",
    "the work extends past recent work on computing symmetries for sat  @xcite and pb constraints  @xcite by computing automorphism on colored graphs obtained from cnf or pb formulas , and by showing how symmetry breaking predicates  @xcite can be exploited .",
    "the experimental results show that symmetry breaking is an effective technique for maxsatand variants , allowing solving problem instances that state of the art maxsatsolvers could not otherwise solve .",
    "the paper is organized as follows .",
    "the next section introduces the notation used throughout the paper , provides a brief overview of maxsatand variants , and also summarizes the work on symmetry breaking for sat and pb constraints .",
    "afterwards , the paper describes how to apply symmetry breaking in maxsatand variants .",
    "experimental results , obtained on representative problem instances from the maxsatevaluation  @xcite and also from practical applications  @xcite , demonstrate that symmetry breaking allows solving problem instances that could not be solved by _ any _ of the available state of the art maxsatsolvers .",
    "the paper concludes by summarizing related work , by overviewing the main contributions , and by outlining directions for future work .",
    "this section introduces the notation used through the paper , as well as the maxsatproblem and its variants . an overview of symmetry identification and symmetry breaking",
    "is also presented .",
    "the paper assumes the usual definitions for sat .",
    "a propositional formula is represented in _",
    "conjunctive normal form _  ( cnf ) . a cnf formula @xmath0 consists of a conjunction of clauses , where each clause @xmath1 is",
    "a disjunction of literals , and a literal @xmath2 is either a propositional variable @xmath3 or its complement @xmath4 .",
    "variables can be assigned a propositional value , either 0 or 1 .",
    "a literal @xmath5 assumes value 1 if @xmath6 and assumes value 0 if @xmath7 .",
    "conversely , literal @xmath8 assumes value 1 if @xmath7 and value 0 when @xmath6 . for each assignment of values to the variables ,",
    "the value of formula @xmath0 is computed with the rules of propositional logic .",
    "a clause is said to be _ satisfied _ if at least one of its literals assumes value 1 .",
    "if all literals of a clause assume value 0 , then the clause is _",
    "unsatisfied_. the propositional satisfiability ( sat ) problem consists in deciding whether there exists an assignment to the variables such that @xmath0 is satisfied .",
    "given a propositional formula @xmath0 , the maxsatproblem is defined as finding an assignment to variables in @xmath0 such that the number of satisfied clauses is maximized .",
    "( maxsatcan also be defined as finding an assignment that minimizes the number of unsatisfied clauses . )",
    "well - known variants of maxsatinclude partial maxsat , weighted maxsatand weighted partial maxsat . for partial maxsat , a propositional formula @xmath0 is described by the conjunction of two cnf formulas @xmath9 and @xmath10 , where @xmath9 represents the _ soft _ clauses and @xmath10 represents the _ hard _ clauses .",
    "the partial maxsatproblem over a propositional formula @xmath11 consists in finding an assignment to the problem variables such that all hard clauses ( @xmath10 ) are satisfied and the number of satisfied soft clauses ( @xmath9 ) is maximized . for _ weighted _ maxsat , each clause in the cnf formula is associated to a non - negative weight .",
    "a weighted clause is a pair @xmath12 where @xmath1 is a classical clause and @xmath13 is a natural number corresponding to the cost of unsatisfying @xmath1 . given a weighted cnf formula @xmath0 , the _ weighted _ maxsatproblem consists in finding an assignment to problem variables such that the total weight of the unsatisfied clauses is minimized , which implies that the total weight of the satisfied clauses is maximized .",
    "for the _ weighted partial _",
    "maxsatproblem , the formula is the conjunction of a weighted cnf formula ( soft clauses ) and a classical cnf formula ( hard clauses ) .",
    "the weighted partial maxsatproblem consists in finding an assignment to the variables such that all hard clauses are satisfied and the total weight of satisfied soft clauses is maximized .",
    "observe that , for both partial maxsatand weighted partial maxsat , hard clauses can be represented as weighted clauses . for these clauses one can consider that the weight is greater than the sum of the weights of the soft clauses .",
    "maxsatand variants find a wide range of practical applications , that include scheduling , routing , bioinformatics , and design automation .",
    "moreover , maxsatcan be used for solving pseudo - boolean optimization  @xcite . the practical applications of maxsatmotivated recent interest in developing more efficient algorithms .",
    "the most efficient algorithms for maxsatand variants are based on branch and bound search , using dedicated bounding and inference techniques  @xcite .",
    "lower bounding techniques include for example the use of unit propagation for identifying necessarily unsatisfied clauses , whereas inference techniques can be viewed as restricted forms of resolution , with the objective of simplifying the problem instance to solve .",
    "given a problem instance , a symmetry is an operation that preserves the constraints , and therefore also preserves the solutions  @xcite . for a set of symmetric states ,",
    "it is possible to obtain the whole set of states from any of the states .",
    "hence , symmetry breaking predicates may eliminate all but one of the equivalent states .",
    "symmetry breaking is expected to speed up the search as the search space gets reduced . for specific problems where",
    "symmetries may be easily found this reduction may be significant .",
    "nonetheless , the elimination of symmetries necessarily introduces overhead that is expected to be negligible when compared with the benefits it may provide .",
    "the elimination of symmetries has been extensively studied in cp and sat  @xcite .",
    "the most well - know strategy for eliminating symmetries in sat consists in adding symmetry breaking predicates ( sbps ) to the cnf formula  @xcite .",
    "sbps are added to the formula before the search starts .",
    "the symmetries may be identified for each specific problem , and in that case it is required that the symmetries in the problem are identified when creating the encoding .",
    "alternatively , one may give a formula to a specialized tool for detecting all the symmetries  @xcite .",
    "the resulting sbps are intended to merge symmetries in equivalent classes . in case",
    "all symmetries are broken , only one assignment , instead of @xmath14 assignments , may satisfy a set of constraints , being @xmath14 the number of elements in a given equivalent class .",
    "other approaches include remodeling the problem  @xcite and breaking symmetries during search  @xcite . remodeling",
    "the problem implies creating a different encoding , e.g. obtained by defining a different set of variables , in order to create a problem with less symmetries or even none at all .",
    "alternatively , the search procedure may be adapted for adding sbps as the search proceeds to ensure that any assignment symmetric to one assignment already considered will not be explored in the future , or by performing checks that symmetric equivalent assignments have not yet been visited .    currently available",
    "tools for detecting and breaking symmetries for a given formula are based on group theory . from each formula",
    "a group is extracted , where a group is a set of permutations .",
    "a permutation is a one - to - one correspondence between a set and itself .",
    "each symmetry defines a permutation on a set of literals . in practice , each permutation is represented by a product of disjoint cycles .",
    "each cycle @xmath15 with size @xmath16 stands for the permutation that maps @xmath17 on @xmath18 ( with @xmath19 ) and @xmath20 on @xmath21 .",
    "applying a permutation to a formula will produce exactly the same formula .",
    "[ ex : cnf1 ] consider the following cnf formula : @xmath22 the permutations identified for @xmath0 are @xmath23 and @xmath24 .",
    "( the permutation @xmath25 is implicit . )",
    "the formula resulting from the permutation @xmath26 is obtained by replacing every occurrence of @xmath27 by @xmath28 and every occurrence of @xmath28 by @xmath27 . clearly , the obtained formula is equal to the original formula .",
    "the same happens when applying the permutation @xmath29 : replacing @xmath30 by @xmath27 , @xmath27 by @xmath30 , @xmath31 by @xmath28 and @xmath32 by @xmath31 produces the same formula .",
    "this section describes how to apply symmetry breaking in maxsat .",
    "first , the construction process for the graph representing a cnf formula is briefly reviewed  @xcite , as it will be modified later in this section .",
    "afterwards , plain maxsatis considered .",
    "the next step is to address partial , weighted and weighted partial maxsat .",
    "symmetry breaking for maxsatand variants requires a few modifications to the approach used for sat  @xcite .",
    "this section summarizes the basic approach , which is then extended in the following sections .",
    "given a graph , the _ graph automorphism _ problem consists in finding isomorphic groups of edges and vertices with a one - to - one correspondence . in case of graphs with colored vertices , the correspondence is made between vertices with the same color .",
    "it is well - known that symmetries in sat can be identified by reduction to a graph automorphism problem  @xcite .",
    "the propositional formula is represented as an undirected graph with colored vertices , such that the automorphism in the graph corresponds to a symmetry in the propositional formula .    given a propositional formula @xmath0 , a colored undirected graph is created as follows :    * for each variable @xmath33 add two vertices to represent @xmath34 and @xmath35 .",
    "all vertices associated with variables are colored with color 1 ; * for each variable @xmath33 add an edge between the vertices representing @xmath34 and @xmath35 ; * for each binary clause @xmath36 , add an edge between the vertices representing @xmath37 and @xmath38 ; * for each non - binary clause @xmath39 create a vertex colored with 2 ; * for each literal @xmath37 in a non - binary clause @xmath40 , add an edge between the corresponding vertices .",
    "[ ex : cgraph1 ] figure  [ fig : graph1 ] shows the colored undirected graph associated with the cnf formula of example  [ ex : cnf1 ] . vertices with shape @xmath41 represent color 1 and vertices with shape @xmath42 represent color 2 .",
    "vertex 1 corresponds to @xmath30 , 2 to @xmath43 , 3 to @xmath27 , 4 to @xmath31 , 5 to @xmath44 , 6 to @xmath28 and 7 to unit clause @xmath45 .",
    "edges 1 - 2 , 2 - 3 , 2 - 4 and 2 - 6 represent binary clauses and edges 1 - 4 , 2 - 5 and 3 - 6 link complemented literals .",
    "let @xmath0 represent the cnf formula of a maxsatinstance .",
    "moreover , let @xmath46 be the cnf formula for the symmetry - breaking predicates obtained with a cnf symmetry tool ( e.g.  shatter  faloul / tools / shatter/ ] ) .",
    "all clauses in @xmath0 are effectively _ soft _ clauses , for which the objective is to maximize the number of satisfied clauses . in contrast , the clauses in @xmath46 are _ hard _ clauses , which must necessarily be satisfied . as a result , the original maxsatproblem is transformed into a partial maxsatproblem , where @xmath0 denotes the soft clauses and @xmath46 denotes the hard clauses .",
    "the solution of the partial maxsatproblem corresponds to the solution of the original maxsatproblem .",
    "[ ex : sbp1 ] for the cnf formula of example  [ ex : cnf1 ] , the generated sbp predicates ( by shatter ) are : @xmath47 as result , the resulting instance of partial maxsatwill be @xmath48 . moreover , @xmath49 and @xmath50 are necessary assignments , and so variables @xmath30 and @xmath27 can be ignored for maximizing the number of satisfied soft clauses .",
    "observe that the hard clauses represented by @xmath46 do not change the solution of the original maxsatproblem . indeed , the construction of the symmetry breaking predicates guarantees that the maximum number of satisfied soft clauses remains unchanged by the addition of the hard clauses .",
    "the maximum number of satisfied clauses for the maxsatproblem @xmath0 and the partial maxsatproblem @xmath51 are the same .",
    "( sketch ) the proof follows from the fact that symmetries map models into models and non - models into non - models ( see proposition  2.1 in  @xcite ) .",
    "consider the clauses as an ordered sequence @xmath52 . given a symmetry , a clause in position @xmath53",
    "will be mapped to a clause in another position @xmath54 .",
    "now , given any assignment , if the clause in position @xmath53 is satisfied ( unsatisfied ) , then by applying the symmetry , the clause in position @xmath54 is now satisfied ( unsatisfied ) .",
    "thus the number of satisfied ( unsatisfied ) clauses is unchanged .      for partial maxsat",
    ", the generation of sbps needs to be modified .",
    "the graph representation of the cnf formula must take into account the existence of hard and soft clauses , which must be distinguished by a graph automorphism algorithm .",
    "symmetric states for problem instances with hard and soft clauses establish a correspondence either between hard clauses or between soft clauses .",
    "in other words , when applying a permutation hard clauses can only be replaced by other hard clauses , and soft clauses by other soft clauses . in order to address this issue",
    ", the colored graph generation needs to be modified .",
    "in contrast to the maxsatcase , binary clauses are not distinguished from other clauses , and are represented as vertices in the colored graph .",
    "clauses can now have one of two colors .",
    "a vertex with color 2 is associated with each soft clause , and a vertex with color 3 is associated with each hard clause .",
    "this modification ensures that any identified automorphism guarantees that soft clauses correspond only to soft clauses , and hard clauses correspond only to hard clauses .",
    "moreover , the procedure for the generation of sbps from the groups found by a graph automorphism tool remains unchanged , and the sbps can be added to the original instance as _ new _ hard clauses .",
    "the resulting instance is also an instance of partial maxsat .",
    "correctness of this approach follows form the correctness of the plain maxsatcase .",
    "the solution for weighted maxsatand for weighted partial maxsatis similar to the partial maxsatcase , but now clauses with different weights are represented by vertices with different colors .",
    "this guarantees that the groups found by the graph automorphism tool take into consideration the weight of each clause .",
    "let @xmath55 denote the distinct clause weights in the cnf formula .",
    "each clause of weight @xmath56 is associated with a vertex of color @xmath57 in the colored graph . in case there",
    "exist hard clauses , an additional color @xmath58 is used , and so each hard clause is represented by a vertex with color @xmath58 in the colored graph .",
    "associating distinct clause weights with distinct colors guarantees that the graph automorphism algorithm can only make the correspondence between clauses with the same weight .",
    "moreover , the identified sbps result in new _ hard _",
    "clauses that are added to the original problem . for either weighted maxsator weighted partial maxsat , the result is an instance of weighted partial maxsat . as before ,",
    "correctness of this approach follows form the correctness of the plain maxsatcase .",
    "[ ex : cgraph2 ] consider the following weighted partial maxsatinstance : @xmath59 for which the last two clauses are hard .",
    "figure  [ fig : graph2 ] shows the colored undirected graph associated with the formula .",
    "clauses with different weights are represented with different colors ( shown in the figure with different vertex shapes ) . a graph automorphism algorithm",
    "can then be used to generate the symmetry breaking predicates @xmath60 , consisting of two hard clauses . as a result , the assignments @xmath50 and @xmath49 become necessary .",
    "table  [ tab : mods ] summarizes the problem transformations described in this section , where ms represents plain maxsat , pms represents partial maxsat , wms represents weighted maxsat , and wpms represents weighted partial maxsat .",
    ".problem transformations due to sbps [ cols=\"^,^\",options=\"header \" , ]     the experimental results allow establishing the following conclusions :    * the inclusion of symmetry breaking is _ essential _ for solving a number of problem instances . we should note that _ all",
    "_ the plain maxsatinstances in table  [ tab : ms ] for which minimaxsat aborted , are also aborted by toolbar and maxsatz .",
    "after adding sbps all these instances become easy to solve by any of the solvers .",
    "for the aborted partial , weighted and weighted partial maxsat instances in table  [ tab : pms+wms+wpms ] this is not always the case , since a few instances aborted by minimaxsat could be solved by toolbar without sbps",
    ". however , the converse is also true , as there are instances that were initially aborted by toolbar ( although solved by minimaxsat ) that are solved by toolbar after adding sbps . * for several instances , breaking only a few symmetries can make the difference .",
    "we have observed that in some cases the symmetries are broken with unit clauses . * adding sbps is beneficial for most cases where symmetries exist .",
    "however , for a few examples , sbps may degrade performance .",
    "* there is no clear relation between the number of sbps added and the impact on the search time .",
    "overall , the inclusion of sbps should be considered when a hard problem instance is known to exhibit symmetries .",
    "this does not necessarily imply that after breaking symmetries the instance becomes trivial to solve , and there can be cases where the new clauses may degrade performance .",
    "however , in a significant number of cases , highly symmetric problems become much easier to solve after adding sbps . in many of these cases the problem instances become _ trivial _ to solve .",
    "symmetries are a well - known research topic , that serve to tackle complexity in many combinatorial problems .",
    "the first ideas on symmetry breaking were developed in the 90s  @xcite , by relating symmetries with the graph automorphism problem , and by proposing the first approach for generating symmetry breaking predicates .",
    "this work was later extended and optimized for propositional satisfiability  @xcite .",
    "symmetries are an active research topic in cp  @xcite .",
    "approaches for breaking symmetries include not only adding constraints before search  @xcite but also reformulation  @xcite and dynamic symmetry breaking methods  @xcite .",
    "recent work has also shown the application of symmetries to soft csps  @xcite .",
    "the approach proposed in this paper for using symmetry breaking for maxsatand variants builds on earlier work on symmetry breaking for pb constraints  @xcite .",
    "similarly to the work for pb constraints , symmetries are identified by constructing a colored graph , from which graph automorphisms are obtained , which are then used to generate the symmetry breaking predicates .",
    "this paper shows how symmetry breaking can be used in maxsatand in its most well - known variants , including partial maxsat , weighted maxsat , and weighted partial maxsat .",
    "experimental results , obtained on representative instances from the maxsatevaluation  @xcite and practical instances  @xcite , demonstrate that symmetry breaking allows solving problem instances that no state of the art maxsatsolver could otherwise solve . for all problem instances considered ,",
    "the computational effort of computing symmetries is negligible . nevertheless , and as is the case with related work for sat and pb constraints , symmetry breaking",
    "should be considered as an alternative problem solving technique , to be used when standard techniques are unable to solve a given problem instance .",
    "the experimental results motivate additional work on symmetry breaking for maxsat .",
    "the construction of the colored graph may be improved by focusing on possible relations among the different clause weights . moreover",
    ", the use of conditional symmetries could be considered  @xcite .",
    "d.  a. cohen , p.  jeavons , c.  jefferson , k.  e. petrie , and b.  m. smith .",
    "symmetry definitions for constraint satisfaction problems . in _ international conference on principles and practice of constraint programming _ , pages 1731 , 2005 .",
    "j.  m. crawford , m.  l. ginsberg , e.  luks , and a.  roy .",
    "symmetry - breaking predicates for search problems . in _ international conference on principles of knowledge representation and reasoning _ , pages 148159 , 1996 .",
    "i.  p. gent , t.  kelsey , s.  linton , i.  mcdonald , i.  miguel , and b.  m. smith .",
    "conditional symmetry breaking . in _ international conference on principles and practice of constraint programming _ ,",
    "pages 256270 , 2005 .            c.  m. li , f.  many , and j.  planes . exploiting unit propagation to compute lower bounds in branch and bound max - sat solvers . in _ international conference on principles and practice of constraint programming _ , pages 403414 , 2005 .",
    "r.  wallace and e.  freuder .",
    "comparative studies of constraint satisfaction and davis - putnam algorithms for maximum satisfiability problems . in d.",
    "johnson and m.  trick , editors , _ cliques , coloring and satisfiability _ , volume  26 of _ dimacs series in discrete mathematics and theoretical computer science _ , pages 587615 .",
    "american mathematical society , 1996 ."
  ],
  "abstract_text": [
    "<S> symmetries are intrinsic to many combinatorial problems including boolean satisfiability ( sat ) and constraint programming ( cp ) . in sat , the identification of symmetry breaking predicates  ( sbps ) </S>",
    "<S> is a well - known , often effective , technique for solving hard problems . </S>",
    "<S> the identification of sbps in sat has been the subject of significant improvements in recent years , resulting in more compact sbps and more effective algorithms . </S>",
    "<S> the identification of sbps has also been applied to pseudo - boolean ( pb ) constraints , showing that symmetry breaking can also be an effective technique for pb constraints . </S>",
    "<S> this paper extends further the application of sbps , and shows that sbps can be identified and used in maximum satisfiability ( maxsat ) , as well as in its most well - known variants , including partial maxsat , weighted maxsatand weighted partial maxsat . as with sat and pb , </S>",
    "<S> symmetry breaking predicates for maxsatand variants are shown to be effective for a representative number of problem domains , allowing solving problem instances that current state of the art maxsatsolvers could not otherwise solve . </S>"
  ]
}
{
  "article_text": [
    "3d well - composed images @xcite enjoy important topological and geometrical properties in such a way that several algorithms used in computer vision , computer graphics and image processing are simpler .",
    "for example , thinning algorithms can be simplified and naturally made parallel if the input image is well - composed @xcite ; some algorithms for computing surface curvature or extracting adaptive triangulated surfaces assume that the input image is well - composed @xcite . however , our main motivation is that of ( co)homology computations on the cell complex representing the 3d image @xcite .",
    "we could take advantage of a well - composed - like representation since computations could be performed only on the boundary subcomplex .    since 3d images",
    "are often not well - composed , there are several methods ( repairing algorithms ) for turning them into well - composed ones @xcite , but these methods do not guarantee the topological equivalence between the original and its corresponding well - composed image .",
    "in fact , the purpose may even be to simplify as much as possible the topology ( in the sense of removing little topological artifacts ) .",
    "however , we are concerned with the fact of preserving the topology of the input image having in mind cases in which subtle details may be important .    in @xcite ,",
    "the authors provide a solution to the problem of topology preservation during digitization of 3d objects .",
    "they use several reconstruction methods that all result in a 3d object with a 2d manifold surface .",
    "more specifically , one of the proposed methods is a voxel - based method called majority interpolation , by which resolution is doubled in any direction and new sampling voxels are added to the foreground under some constraints .",
    "other method is based on the most common reconstruction methods for 3d digital images is the marching cube ( mc ) algorithm @xcite which analyzes local configurations of eight neighboring sampling points in order to reconstruct a polygonal surface . there even exists a mc variant , called asymmetric marching cubes , which generates the reconstruction of manifold surfaces ( see @xcite ) .",
    "a different approach is made in @xcite , where the authors create a polyhedral complex as the continuous analog of a set of voxels with given digital adjacencies .",
    "they also show that such a continuous analog corresponds to the usual definition of iso - surface in the @xmath4 case .    in our approach ,",
    "we first consider a a cubical complex @xmath1 associated to a voxel - based representation of the given image @xmath0 .",
    "then , we develop a new scheme of representation , called extendedcubemap ( ecm ) representation , based on a 3d grayscale image storing the cells and the boundary face relations of cells of @xmath1 .",
    "working on an ecm representation of @xmath1 , we design a procedure to obtain a polyhedral complex @xmath3 homotopy equivalent to @xmath1 .",
    "the importance of our method is that the cells of @xmath3 are totally encoded in a 3d grayscale image @xmath5 , and their boundary face relations in a set of structuring elements @xmath6 .",
    "it is worth to mention that the set @xmath6 remains the same for any polyhedral complex @xmath3 computed using our method .    in our prequel paper @xcite ,",
    "the complex @xmath3 homotopy equivalent to @xmath1 , was a cell complex constructed with more general building blocks than polyhedra depending on the local configuration of voxels . in this paper",
    ", @xmath3 is always a polyhedral complex , constructed with a general procedure ( that is valid for all the local configurations ) , with the advantage that it can be stored in a matrix form ( a 3d grayscale image ) in a way that we do not need to build @xmath3 to obtain face relations between its cells .",
    "section  [ polyhedral ] is devoted to clarify , first , the correspondence between 3d binary digital images and cubical complexes ; the notion of well - composedness is also introduced as well as its extension to complete polyhedral complexes . section  [ representation ] describes a new codification system called ecm representation of cubical complexes which is also valid for other more general polyhedral complexes as we will see later in this paper .",
    "section  [ repairing ] describes the repairing algorithm to get a well - composed polyhedral complex , @xmath3 , starting from the cubical complex @xmath1 associated to a non - well - composed image @xmath0 .",
    "the repairing process is , in fact , accomplished on the ecm representation @xmath7 of @xmath1 to get the ecm representation @xmath8 of @xmath3 .",
    "finally , we draw some conclusions and statements for future work in the last section .",
    "consider @xmath9 as the set of points with integer coordinates in 3d space @xmath2 .",
    "3d binary digital image _ ( or 3d image for short ) is a set @xmath10 ( or @xmath11 , for short ) , where @xmath12 is the _ foreground _ , @xmath13 the _ background _ , and @xmath14 is the adjacency relation for the foreground and background , respectively . a point of @xmath9 can be interpreted as a unit closed cube ( called _ voxel _ ) in @xmath2 centered at the point and with faces parallel to the coordinate planes .",
    "the set of voxels centered at the points of @xmath15 in @xmath2 is called the _ continuous analog _ of @xmath0 and it is denoted by @xmath16 .",
    "the _ boundary surface _ of @xmath16 is the set of points in @xmath2 that are shared by the voxels centered at points of @xmath15 and those centered at points of @xmath17 ( see @xcite ) .",
    "recall that a 3d image @xmath11 is _ well - composed _",
    "@xcite if the _ boundary surface _ of @xmath16 is a 2d manifold , i.e. each point has a neighborhood homeomorphic to @xmath18 ( it  looks \" locally like a planar open set ) .",
    "the set of voxels of @xmath16 , together with all their faces ( squares , edges and vertices ) and the coface relationship between them , constitute a combinatorial structure called _ cubical complex _ , denoted by @xmath1",
    "whose geometric realization is exactly @xmath16 .",
    "the topology of @xmath1 reflects the topology of @xmath0 whenever @xmath19adjacency is considered on @xmath0 .",
    "this way , we will say that the cubical complex @xmath1 associated to a 3d image @xmath0 is well - composed if the corresponding image @xmath0 is well - composed . considering configurations of @xmath20 cubes sharing a vertex ,",
    "one finds eleven different @xmath21cube configurations ( modulo reflections and @xmath22degree rotations ) around a critical vertex , as showed in fig .",
    "[ critical_conf ] , where well - composedness condition is not satisfied . for the eleven @xmath21cube configurations ,",
    "the central vertex @xmath23 is a _",
    "critical vertex _ in the sense that it does not have a neighborhood in the boundary surface of @xmath1 , homeomorphic to @xmath18 .",
    "these eleven @xmath21cube configurations come exactly from the @xmath24configurations which contain one of the just two configurations being presented in ( * ? ? ?",
    "3 ) . a cubical",
    "complex is a specific type of _ polyhedral complex _ ( see @xcite ) .",
    "a polyhedral complex @xmath25 is a combinatorial structure by which a space is decomposed into vertices , edges , polygons and polyhedra ( cells , in general ) that are glued together by their boundaries such that the intersection of any two cells of the complex is also a cell of the complex .",
    "notice that the structure of a polyhedral complex @xmath25 can be considered as purely combinatorial ( i.e. , a set of cells with coface relations between them ) , but in this work , it is associated to a specific geometric realization of @xmath25 in @xmath2 .    the dimension of an @xmath26cell @xmath27 is @xmath28 .",
    "a cell @xmath29 is a _ face _ of a cell @xmath27 if @xmath30 lies in the boundary of @xmath31 and @xmath32 .",
    "the cell @xmath31 is called a _ coface _ of @xmath30 .",
    "a cell @xmath30 is _ maximal _ if it is not a face of any other cell @xmath27 and _ free _ if it is face of exactly one maximal cell of @xmath25 .",
    "the _ boundary subcomplex _",
    "@xmath33 is made up by the free cells of @xmath25 , together with all their faces .",
    "the _ closure _ of a subset @xmath34 of @xmath25 is the smallest subcomplex of @xmath25 that contains each cell in @xmath34 .",
    "it is obtained by repeatedly adding to @xmath34 each face of every cell in @xmath34 .",
    "the _ star of @xmath34 _ ( denoted @xmath35 ) is the set of all cells in @xmath25 that have any faces in @xmath34 .",
    "note that the star is generally not a cell complex itself .",
    "the _ link of @xmath34 _ ( denoted by @xmath36 ) is the closure of the star of @xmath34 minus the star of all faces of @xmath34 .",
    "@xmath25 is an @xmath37d polyhedral complex if for any cell @xmath27 , @xmath38 and for some maximal cell @xmath29 , @xmath39 .",
    "an @xmath37d polyhedral complex is _ complete _ if all its maximal cells have dimension @xmath37 .",
    "observe that if @xmath25 is complete , so it is @xmath33 .",
    "in particular , the cubical complex associated to an image @xmath0 , @xmath1 , and its boundary subcomplex , @xmath40 , are , respectively , 3d and 2d complete polyhedral complexes .",
    "cube configurations around a critical vertex.,width=517 ]    the following definition extends the notion of well - composedness to 3d complete polyhedral complexes .",
    "[ extended - well - composed ] a 3d complete polyhedral complex @xmath25 embedded in @xmath2 is _ well - composed _ if the subcomplex @xmath33 is a disconnected union of 2d manifolds .",
    "[ e1e2 ] a 3d complete polyhedral complex @xmath25 is well - composed if the subcomplex @xmath33 satisfies that :    * any edge has exactly two @xmath41-cofaces in @xmath33 ; * for any vertex @xmath42 , @xmath43 in @xmath33 has exactly one connected component .    take a point @xmath44 .",
    "recall that @xmath33 is made up by a set of @xmath45cells , together with all their faces .",
    "if @xmath46 lies inside a @xmath45cell in @xmath33 , obviously the proposition holds ; if @xmath46 lies on an edge @xmath47 , condition @xmath48 applies and hence the proposition holds , too ; if @xmath46 is a vertex of @xmath33 , the star of @xmath46 in @xmath33 , is homeomorphic to a disk ( thanks to conditions @xmath48 and @xmath49 ) .    notice that conditions @xmath48 and @xmath49 are not satisfied ( simultaneously ) in the configurations showed in fig .",
    "[ critical_conf ] .    given a 3d complete polyhedral complex @xmath25 embedded in @xmath2 ,",
    "a vertex @xmath23 is _ critical _ if either @xmath48 fails for some @xmath50coface of @xmath23 or @xmath49 is not satisfied by @xmath23 .",
    "then , @xmath25 is well - composed if there is not any critical vertex in @xmath33 .",
    "an alternative definition of well - composedness has been presented in @xcite based on adjacency of maximal cells . in this paper",
    ", we use the one involving the notion of critical vertex given above since the repairing process is done on that vertices and their stars .",
    "in @xcite , the authors presented a data - structure ( called _ cubemap representation _ ) designed to compactly store and quickly manipulate cubical complexes .",
    "a similar structure was first introduced in capd library @xcite for computing cubical homology . in that representation , for each cube ( voxel ) , vertices , edges , squares and the cube itself were encoded in a @xmath51 array with values representing the dimension of each cell ( see fig .  [ digimagecell3d].c ) . for a set of voxels , the corresponding array is composed by overlapping copies of arrays of size @xmath51 .",
    "the cubemap representation is , in fact , a 3d generalization of the khalimsky grid , which has already been introduced and extensively used by v. kovalevsky ( e.g. in @xcite ) .    inspired by that representation scheme",
    ", we define a new data - structure , called extendedcubemap representation , that allows to store not only 3d cubical complexes but also the new polyhedral complexes that will be constructed .",
    "this new codification is still presented under a 3d array form , also encoding the dimension of the cells that are represented ( that is , a 3d grayscale image ) . in such a structure ,",
    "the information of boundary relations between represented cells will be extracted by searching for certain structuring elements inside the representation .",
    "an _ @xmath37d grayscale image _ is a map @xmath52 .",
    "given a point @xmath53 , @xmath54 is referred to as the _ color _ of @xmath46 .",
    "a _ structuring element _ is also an @xmath37d grayscale image @xmath55 whose domain contains the origin @xmath56 .",
    "a structuring element will be used to perform a given operation around a certain neighborhood of a point .",
    "[ ecm ] given an @xmath37d complete polyhedral complex @xmath25 , an _ extendedcubemap ( ecm ) _ representation of @xmath25 is a triple @xmath57 where :    * @xmath58 is a bijective function , for a certain domain @xmath59 with as many points as cells in @xmath25 .",
    "for each cell @xmath31 , denote by @xmath60 the point @xmath61 representing @xmath31 ; * @xmath62 is an @xmath37d grayscale image , such that : * * @xmath63 , for any @xmath64 , . * * @xmath65 , for any @xmath66 . *",
    "@xmath67 is a set of structuring elements @xmath68 such that for any @xmath26cell @xmath27 , there exists a single structuring element @xmath69 in @xmath67 such that : * * @xmath70 , for any @xmath71 . in particular , @xmath72 ; * * if @xmath73 and @xmath74 then either @xmath75 or @xmath76 ; * * a point @xmath77 satisfies that @xmath78 and @xmath79 if and only if @xmath46 represents a cell @xmath30 ( that is , @xmath80 ) which is an @xmath81face of @xmath31 .    [ colors ] in order to visualize examples of ecm representations , from now on , a point @xmath77 is colored black if @xmath82 , green if @xmath83 , red if @xmath84 , blue if @xmath85 and white if @xmath86 . for a better understanding of the pictures ,",
    "the reader is referred to the web version of this paper .",
    "an ecm representation of @xmath25 may not exist and may not be unique ( see , for example , fig .",
    "[ digimagecell3d].(c , d ) which shows two different ecm representations of a single cube together with all its faces ) . nevertheless , given a cubical complex @xmath1 and the ecm representation @xmath7 of @xmath1 given in prop .",
    "[ eq ] , the procedures described in the next section will provide a unique polyhedral complex @xmath3 as well as a unique ecm representation @xmath8 of @xmath3 .    ;",
    "b ) the cubical complex @xmath1 associated to @xmath0 ; c ) the color values in the cubemap representation of @xmath1 which is also an ecm representation of @xmath1 ; d ) the color values in the ecm representation @xmath7 of @xmath1 . in both c ) and d ) the central voxel is colored black.,width=453 ]    since the map @xmath87 is bijective , each cell @xmath27 is represented by a single point @xmath88 . moreover , for each @xmath64 , @xmath89 codifies the dimension of the cell in @xmath25 that @xmath46 represents ( that is , the cell @xmath90 ) . finally , observe that the structuring element @xmath91 associated to a cell @xmath92 provides a codification of the boundary face relations for @xmath31 .",
    "therefore , within this codification system , the extraction of boundary faces of any cell @xmath31 can be done by checking if any of the structuring elements of @xmath67 fits around the point @xmath93 ( that is , the point in @xmath94 that represents @xmath31 ) .",
    "this last operation could be seen as a morphological erosion of the 3d grayscale image @xmath95 by the corresponding structuring element .",
    "given an ecm representation @xmath57 of a polyhedral complex @xmath25 , a structuring element @xmath96 is said to _ fit around a point _",
    "@xmath97 if , for any @xmath98 , @xmath99 .",
    "[ structelem ] shows an example of a polyhedral complex @xmath25 , the color values in an ecm representation @xmath100 of @xmath25 and the structuring elements ( modulo @xmath22degree rotations ) associated to the cells of @xmath25 .",
    "( a solid pyramid ) .",
    "middle : the color values of the voxels in an ecm representation of @xmath25 .",
    "bottom : structuring elements ( modulo @xmath22degree rotations ) associated to the cells of @xmath25.,title=\"fig:\",width=132 ] +   ( a solid pyramid ) .",
    "middle : the color values of the voxels in an ecm representation of @xmath25 .",
    "bottom : structuring elements ( modulo @xmath22degree rotations ) associated to the cells of @xmath25.,title=\"fig:\",width=510 ] +   ( a solid pyramid ) .",
    "middle : the color values of the voxels in an ecm representation of @xmath25 .",
    "bottom : structuring elements ( modulo @xmath22degree rotations ) associated to the cells of @xmath25.,title=\"fig:\",width=510 ]    the following result provides an ecm representation of a cubical complex @xmath1 associated to a 3d image @xmath0 .",
    "let @xmath101 be the barycenter of @xmath102 and @xmath103 such that @xmath104 for some @xmath105 .    [ eq ]",
    "let @xmath1 be the cubical complex associated to a 3d image @xmath0 , the triple @xmath106 described below is an ecm representation of @xmath1 .    * @xmath107 , where : * * @xmath103 such that @xmath104 for some @xmath105 ; * * @xmath108 for @xmath102 ; * @xmath109 is given by @xmath110 if @xmath111 , and @xmath86 otherwise .",
    "see fig .",
    "[ digimagecell3d].d ; * @xmath112 , where @xmath113 ( modulo @xmath22degree rotations ) is given by : * * @xmath114 , @xmath115 , @xmath116 for @xmath117 and @xmath116 otherwise .",
    "see fig .",
    "[ rojo - azul].x ; * * @xmath118 , @xmath119 , + @xmath120 for @xmath121 and @xmath122 otherwise .",
    "see fig .",
    "[ verde - rojo].x ; * * @xmath123 , @xmath124 , @xmath125 , @xmath126 , + @xmath127 , @xmath128 , @xmath129 for @xmath121 , @xmath130 and @xmath131 otherwise .",
    "see fig .",
    "[ negro - verde].x .",
    "faces.,width=377 ]    faces.,width=510 ]    faces.,width=377 ]    observe that @xmath1 is constructed by adding unit cubes @xmath31 centered at points @xmath132 .",
    "therefore , the possible coordinates of @xmath133 for the @xmath134-faces @xmath30 of @xmath31 are :    * @xmath135 if @xmath136 ; * @xmath137 , @xmath138 or @xmath139 , if @xmath140 ; * @xmath141 , @xmath142 or @xmath143 , if @xmath144 ;     for the 3d complete cubical complexes corresponding to the eleven @xmath21cube configurations around a critical vertex showed in fig .",
    "[ critical_conf].,width=517 ]    since for any @xmath102 , @xmath101 has either integer or multiple - of@xmath145 coordinates , then @xmath146 .",
    "more specifically ,    * @xmath46 represents a cube in @xmath1 , if and only if @xmath147 ; * @xmath46 represents a square face in @xmath1 , if and only if either @xmath148 , @xmath149 or @xmath150 ; * @xmath46 represents an edge in @xmath1 , if and only if either @xmath151 , @xmath152 or @xmath153 ; * @xmath46 represents a vertex in @xmath1 , if and only if @xmath154 ;    where @xmath155 .",
    "besides , @xmath156 , by definition , relates each point @xmath157 representing a cell @xmath102 with the dimension of @xmath31 .",
    "observe that @xmath158 , @xmath159 , and their @xmath22degree rotations describe six structural elements . for each @xmath160cell @xmath102 , @xmath159 ,",
    "only one of the three @xmath158 is associated to @xmath31 , depending on which axis the cell ( edge or square face ) is parallel to .",
    "@xmath161 is associated to the @xmath162cells of @xmath1 .",
    "now , we have to prove that for each cell @xmath163 , there exists a single structuring element @xmath164 satisfying the conditions in def .  [ ecm ] .",
    "we will prove this just for an edge parallel to the @xmath165axis , since the proof for the rest of the cells is analogous .",
    "suppose that @xmath166 is a unit edge with endpoints @xmath167 and @xmath168 ( where @xmath155 ) .",
    "then , @xmath169 , @xmath170 and @xmath171 .",
    "therefore , @xmath172 since :    * @xmath173 , + @xmath174 + @xmath175 . *",
    "if @xmath176 represents an @xmath81face of @xmath31 , then either @xmath177 , and @xmath178 ; or @xmath179 and @xmath180 .",
    "+ besides , if @xmath181 such that @xmath182 , then @xmath183 and therefore @xmath184 or @xmath185 .",
    "see fig .",
    "[ criticalpointseq ] as an example of the color values in the ecm representations @xmath7 for several 3d complete cubical complexes @xmath1 .",
    "[ remark : coface ] the coface relations between cells can also be codified in terms of structuring elements in the ecm representation . more specifically , given a vertex @xmath186 and its corresponding point @xmath187 in the ecm representation @xmath7 , all the points representing the cofaces of @xmath23 ( see fig .  [ grid ] ) can be found using a structuring element in the set @xmath188 , where @xmath189 and @xmath190 ( modulo @xmath22degree rotations ) are given by :    * @xmath191 ; + @xmath192 , @xmath193 and @xmath194 ; * @xmath195 ; + @xmath196 , @xmath197 and @xmath198 . * @xmath199 ; + @xmath196 , @xmath200 and @xmath201 .",
    "when @xmath23 is shared by @xmath20 cubes.,width=491 ]    [ prop : critical ] given the ecm representation @xmath7 of a cubical complex @xmath1 associated to a binary 3d digital image @xmath0 , consider the set of structuring elements @xmath202 showed in fig .",
    "[ criticalpoints ] ( modulo reflections and @xmath22degree rotations ) and described below :    * @xmath203 ; * @xmath204 , @xmath205 and @xmath206 is either @xmath207 or @xmath208 ( see fig .",
    "[ criticalpoints ] ) .",
    "a point @xmath77 represents a critical vertex in @xmath1 if and only if a structuring element @xmath209 fits around @xmath46 .",
    "consider the @xmath21cube configuration around a vertex showed in upper - left corner of fig .",
    "[ critical_conf ] .",
    "suppose that a vertex @xmath210 is shared by exactly two unit cubes @xmath211 and @xmath212 such that @xmath213 and @xmath214 , where @xmath215 .",
    "then @xmath216 , @xmath217 and @xmath218 .",
    "now consider the structuring element @xmath219 depicted in fig .",
    "[ criticalpoints].(upper - left ) .",
    "points in @xmath220 for which @xmath219 takes value @xmath207 are @xmath221 and @xmath222 .",
    "let us check that @xmath219 fits around @xmath187 :    * @xmath223 ; * @xmath224 ; @xmath225 ; * @xmath226 , for @xmath227 , since @xmath228 does not correspond to the barycenter of any cell in @xmath1 .",
    "the rest of the configurations can be proven using similar arguments than above .",
    "degree rotations ) for the eleven @xmath21cube configurations around a critical vertex in @xmath1 showed in fig .",
    "[ critical_conf].,width=517 ]",
    "in this section , given the cubical complex @xmath1 ( associated to a 3d image @xmath0 ) and the ecm representation @xmath7 of @xmath1 from prop .  [ eq ] , we show how to obtain the ecm representation @xmath229 of a well - composed polyhedral complex @xmath3 homotopy equivalent to @xmath1 . the  repairing \" process that will be explained below consists of running over all the points @xmath77 that represent critical vertices @xmath186 and accomplishing a color - changing operation by modifying the values of @xmath156 in a neighborhood of @xmath46 .",
    "new set of structuring elements , @xmath6 , is then defined to codify the boundary relations between cells in @xmath3 .",
    "let @xmath159 .",
    "the following sets of points in @xmath9 will be useful for different descriptions of points inside the ecm representation @xmath8 :    * @xmath230 s.t . @xmath231 and @xmath232 for @xmath233 .",
    "* @xmath234 s.t .",
    "@xmath235 and @xmath236 for @xmath233 .",
    "* @xmath237 s.t .",
    "@xmath231 for @xmath238 . * @xmath239 s.t . @xmath231 and @xmath240 for @xmath241 * @xmath242 s.t . @xmath243 .    finally , for a set @xmath244 and a point @xmath77 , let us denote by @xmath245 the set @xmath246 such that @xmath247 .",
    "observe that @xmath248 and @xmath249 .",
    "in fact , given a point @xmath250 , @xmath251 is the @xmath252 block of voxels in @xmath9 centered at point @xmath46 . if we consider this block as a big cube @xmath253 composed by @xmath254 unit cubes , then :    * @xmath255 are the faces of such a cube @xmath253 .",
    "* @xmath256 are the @xmath257 endpoints of the @xmath207 segments with mid - point in @xmath46 , length equal to @xmath258 , and parallel to the coordinate axes .",
    "* @xmath259 are the ( totally @xmath260 ) vertices of the @xmath207 squares centered at @xmath46 , edge - length equal to @xmath258 , parallel to the coordinate planes , and whose edges are parallel to coordinate axes .",
    "* @xmath261 are the vertices of the cube @xmath253 .",
    "the following remark ensures that given a point @xmath250 such that @xmath85 ( which corresponds to a vertex @xmath262 ) , the modification of the map @xmath156 on the points in @xmath263 only affects to points that either represent cofaces of @xmath23 or do not represent any cell in @xmath1 .",
    "[ remark : vertice ] let @xmath250 such that @xmath85 .",
    "let @xmath264 be the corresponding vertex in @xmath1 .    * if @xmath265 then @xmath266 * if @xmath267 , then either @xmath268 ( @xmath269 represents a @xmath50coface of @xmath23 ) or @xmath266",
    ". + analogously , if @xmath270 , then either @xmath271 ( @xmath269 represents a @xmath45coface of @xmath23 ) or @xmath266 . + finally , if @xmath272 , then either @xmath273 ( @xmath269 represents a @xmath162coface of @xmath23 ) or @xmath266 .",
    "see , for example , fig .",
    "[ grid ] , which is an example of the values of @xmath156 on the set @xmath263 where @xmath46 represents a vertex shared by eight cubes in @xmath1 .",
    "now , the following method is performed on the ecm representation @xmath7 to construct a new map @xmath274 .",
    "[ methodextended ] start with the ecm representation @xmath106 of a given cubical complex @xmath1 .    1 .   initially , @xmath275 for any @xmath77 .",
    "2 .   compute the set @xmath276 where @xmath277 if @xmath85 and one of the structuring elements showed in fig .",
    "[ criticalpoints ] fits around @xmath46 ( that is , @xmath278 is a critical vertex ) .",
    "for each point @xmath277 : * compute the set @xmath279 such that @xmath280 if one of the structuring elements given in remark  [ remark : coface ] fits around @xmath269 ( that is , @xmath281 is a cell in @xmath282 ) .",
    "* @xmath283 ; + @xmath284 if @xmath285 ; + @xmath286 if @xmath287 ; + and @xmath288 if @xmath289 .",
    "+ see fig .",
    "* for each point @xmath280 such that @xmath268 , let @xmath290 represent the other endpoint of @xmath269 different to @xmath46 .",
    "then : + @xmath291 ; + @xmath292 if @xmath293 ; + and @xmath294",
    "if @xmath295 ; + see fig .",
    "[ op1].b . * for each point @xmath280 such that @xmath271 , let @xmath296 represent the @xmath297-faces of the cell represented by @xmath269 .",
    "then : + @xmath291 ; + and @xmath292 if @xmath298 ; + see fig .",
    "[ op1].c .",
    "notice that the points @xmath280 representing cubes in @xmath1 remain with the same color value , that is , @xmath299 .",
    "the above procedure could be improved by computing the sets @xmath300 and @xmath301 at once , since the coordinates of the different cofaces of a point @xmath46 representing a critical vertex in @xmath1 are known .",
    "for the sake of clarity we have separated the seeking of critical vertices ( the set @xmath300 ) and their cofaces ( the set @xmath302 for each @xmath46 ) .",
    "the map @xmath274 is well - defined .",
    "observe that the 3d space @xmath9 can be decomposed into the following non - overlapping subspaces ( see fig .",
    "[ grid ] ) : @xmath303 then , color - changing process corresponding to a point @xmath304 with @xmath305 , for @xmath306 , is performed on @xmath307 .",
    "in fact , the colors of all the points in @xmath307 are modified .",
    "+ let @xmath308 be points with @xmath309 and @xmath310 .",
    "the subsets @xmath311 and @xmath312 never intersect since :    * @xmath313 if @xmath314 , * @xmath315 if @xmath316 .     to obtain @xmath5.,width=453 ]    fig .",
    "[ op1 ] illustrates the different color - changing operations described in proc .",
    "[ methodextended ] . in fig .",
    "[ caso2arreglado].a , the color values of the ecm representation @xmath317 of the cubical complex @xmath318 represented on the top - left of fig .",
    "[ critical_conf ] , are shown .",
    "[ caso2arreglado].b shows the color values obtained after performing proc .",
    "[ methodextended ] on @xmath317 .",
    ".,width=491 ]    now , we construct a new polyhedral complex @xmath3 and a correspondence @xmath319 between points with color values @xmath320 and cells of @xmath3 , in a way that @xmath321 . any point @xmath77 with @xmath283",
    "will represent a polyhedron such that its faces will be represented by points in its neighborhood @xmath263 .",
    "later , we will define a set of structuring elements @xmath6 for which @xmath322 is an ecm representation of @xmath3 .",
    "associated with a vertex @xmath186 , a unit edge @xmath323 with endpoints @xmath23 and @xmath324 and a unit square @xmath325 with @xmath326faces @xmath23 , @xmath327 , @xmath328 and @xmath329 . , width=510 ]    the following polyhedra will be used in the construction of the polyhedral complex @xmath3 , that will be homotopy equivalent to @xmath1 .",
    "* the size@xmath145 cube @xmath330 centered at point @xmath331 , with faces parallel to the coordinate planes . see fig .  [ poligonos5].a . * the pyramid @xmath332 with apex a point @xmath324 and base the square - face of @xmath330 whose barycenter lies on the edge @xmath333 with endpoints @xmath23 and @xmath324 .",
    "see fig .",
    "[ poligonos5].b . * the polyhedra @xmath334 ( where @xmath335 are four distinct points in @xmath2 forming a unit square @xmath336 ) given as follows : * * @xmath337 is determined by the triangles @xmath338 and @xmath339 , and the edges @xmath340 and @xmath341 where @xmath342 , @xmath343 , is the triangle face of @xmath344 whose barycenter lies on the square @xmath336 .",
    "see fig .",
    "[ poligonos5].d . * * @xmath345 is determined by the triangles @xmath339 and @xmath346 , the square @xmath347 and the edge @xmath341 , where @xmath347 is the square face of @xmath348 whose barycenter lies on the square @xmath336 . see fig .",
    "[ poligonos5].e . *",
    "* @xmath349 is determined by the four triangles @xmath338 , @xmath339 , @xmath350 and @xmath351 .",
    "see fig .",
    "[ poligonos5].f . *",
    "* @xmath352 is determined by the squares @xmath347 and @xmath353 and the triangles @xmath346 and @xmath354 .",
    "see fig .",
    "[ poligonos5].g . * the @xmath355 hexahedra @xmath356 ( where @xmath357 form a unit cube @xmath358 centered at a point @xmath359 , with faces parallel to the coordinate planes ) showed in fig .",
    "[ hexahedron ] . in this picture ,",
    "each bolded point represents the vertex of @xmath360 , for some @xmath361 , which lies inside the cube @xmath358 . for example , the hexahedron on the top - left is @xmath358 and the one on the bottom - right is the size@xmath145 cube @xmath330 .    .",
    "each point in bold represents the vertex of @xmath360 , for some @xmath361 , which lies inside the cube @xmath330.,width=491 ]    the sets of data @xmath362 described below are ecm representations of the above polyhedra , whenever the coordinates of the vertices of the polyhedra are multiple of @xmath363 .",
    "* @xmath364 for @xmath365 . + @xmath366",
    "; @xmath367 if @xmath368 ; @xmath369 if @xmath287 ; @xmath370",
    "if @xmath371 and @xmath372 if @xmath373 . see fig .",
    "[ nuevospolyhedroscubitos].a .",
    "+ @xmath374 ; and @xmath375 if @xmath31 is a face of @xmath330 and @xmath376 .",
    "+ structuring elements ( modulo @xmath22degree rotations ) in @xmath377 are showed in fig .  [",
    "negro - verde].a , fig .",
    "[ verde - rojo].a and fig .  [ rojo - azul].a . *",
    "@xmath378 where @xmath379 and @xmath380 is the closest point to @xmath381 .",
    "+ @xmath382 ; @xmath383 ; @xmath384 if @xmath385 ; @xmath386",
    "if @xmath387 ; @xmath388",
    "if @xmath389 ; and @xmath390 if @xmath391 . see fig .",
    "[ nuevospolyhedroscubitos].b .",
    "+ @xmath392 ; @xmath393 ; and @xmath394 if @xmath31 is an @xmath395-face of @xmath332 , and @xmath396 is the closest point to @xmath397 such that @xmath398 .",
    "+ structuring elements ( modulo @xmath22degree rotations ) in @xmath399 are showed in fig .",
    "[ negro - verde].b , fig .  [ verde - rojo].b and fig .",
    "[ rojo - azul].(a , b ) . * the values of @xmath400 for the rest of the ecm representation @xmath401 , @xmath402 , are showed , respectively , in fig .",
    "[ nuevospolyhedroscubitos].(d , e , f , g ) .",
    "+ the values of @xmath403 are defined in an analogous way as above .",
    "+ structuring elements ( modulo @xmath22degree rotations ) in @xmath404 , @xmath405 @xmath406 , are showed in fig .",
    "[ negro - verde].c , fig .  [ verde - rojo].(c , d ) and fig .  [ rojo - azul].(a , b ) .    ,",
    "@xmath407 , of the polyhedra ( and all their faces ) described in fig .",
    "[ poligonos5].,width=453 ]    the following procedure constructs the polyhedral complex @xmath3 and the map @xmath408 .    [ method ] let @xmath7 be the ecm representation of @xmath1 from prop .  [ eq ] .",
    "let @xmath274 the output of proc .",
    "[ methodextended ] .",
    "let @xmath409 .",
    "let @xmath300 be the set of points in @xmath9 representing the critical vertices in @xmath1 .",
    "let @xmath302 , @xmath277 , be the set of points in @xmath9 representing the cells in @xmath282 ( these sets were computed in proc .",
    "[ methodextended ] ) .",
    "initially , @xmath410 , and @xmath411 for any @xmath250 .    for each @xmath277 ,",
    "* replace @xmath412 by the cube @xmath330 together with all its faces .",
    "see fig .",
    "[ poligonos5].a .",
    "define @xmath413 where @xmath364 and @xmath414 is described above .",
    "* for each @xmath415 such that @xmath416 , let @xmath417 represent the endpoints of @xmath418 .",
    "* * if @xmath324 is non - critical : * * * replace @xmath419 by the pyramid @xmath332 together with its triangular faces .",
    "see fig .",
    "[ poligonos5].b ; * * * define @xmath420 .",
    "* * if @xmath324 is critical : * * * replace @xmath419 by the cube @xmath421 , together with its faces parallel to @xmath333 .",
    "see fig .",
    "[ poligonos5].c . * * * define @xmath413 where @xmath422 .",
    "* for each @xmath415 such that @xmath423 , let @xmath424 represent the @xmath326faces of @xmath425 ( see fig .",
    "[ poligonos5].left ) .",
    "let @xmath426 for @xmath427 . * * if @xmath428 are non - critical , * * * replace @xmath429 by the polyhedron @xmath430 together with its quadrangular faces .",
    "see fig .",
    "[ poligonos5].d . * * * define @xmath431 . *",
    "* if @xmath327 is critical but @xmath328 and @xmath329 are not , * * * replace @xmath429 by the polyhedron @xmath432 together with its quadrangular faces sharing the edge @xmath341 .",
    "see fig .",
    "[ poligonos5].e . * * * define @xmath433 . + an analogous case is when @xmath328 is critical but @xmath327 and @xmath329 are not . * * if @xmath329 is critical but @xmath327 and @xmath328 are not , * * * replace @xmath429 by the polyhedron @xmath434 together with its quadrangular faces .",
    "see fig .",
    "[ poligonos5].f . * * * define @xmath435 . * * if @xmath327 and @xmath328 are critical but @xmath329 is not , * * * replace @xmath429 by the polyhedron @xmath436 together with its quadrangular faces sharing @xmath329 . see fig .",
    "[ poligonos5].g . * * * define @xmath437 . * * if @xmath438 and @xmath329 are critical , * * * replace @xmath429 by the cube @xmath439 together with its square faces parallel to @xmath31 ( see fig .",
    "[ poligonos5].h . ) . * * * define @xmath440 where @xmath422 . * for each @xmath415 such that @xmath441 , the @xmath207-cell @xmath442 is replaced by a @xmath207-cell @xmath30 which is one of the hexahedra showed in fig .",
    "[ hexahedron ] depending on the number and positions of the critical vertices that are faces of @xmath31 .",
    "define @xmath443 .",
    "[ well - composedp ] @xmath3 is a well - composed polyhedral complex homotopy equivalent to @xmath1 .",
    "let us prove that the polyhedral complex @xmath3 is well defined :    * by construction , all the faces of each cell in @xmath3 are also in @xmath3 . *",
    "the intersection of any two cells of @xmath3 is also a cell of @xmath3 , since during proc .",
    "[ method ] , each critical vertex @xmath23 is replaced by @xmath330 ( together with all its faces ) in @xmath3 and each cell in @xmath444 is replaced by a new polyhedron ( together with its faces ) . besides , all the faces of the polyhedron added at each step are used in the next steps as faces of the new added polyhedra .",
    "finally , an hexahedron of fig .",
    "[ hexahedron ] substitutes the corresponding cube in @xmath1 , whose faces are also faces of either previous cubes of @xmath1 or new polyhedra in @xmath3 .",
    "* @xmath3 is complete since the new added cells are always polyhedra together with all their faces .",
    "let us prove now that a homotopy equivalence ( see @xcite ) from @xmath3 to @xmath1 can be constructed .",
    "the key point is that , for each critical vertex @xmath186 , the cube @xmath445 is homotopy equivalent to @xmath446 .",
    "the homotopy equivalence is given by the projection of all the points in @xmath330 onto @xmath23 ( in fact , it is a deformation retraction ) .",
    "the projection of the vertices of each cube @xmath330 to @xmath23 leads , in a natural way , to homotopy equivalences between the rest of the new constructed polyhedra in @xmath3 and the corresponding cells of @xmath1 :    * the pyramid @xmath332 is homotopy equivalent to the edge @xmath333 , by the continuous function that maps the vertices of @xmath447 ( where @xmath447 is the square face of @xmath330 whose barycenter lies on @xmath333 ) to @xmath23 , and @xmath324 to @xmath324 ; and it is extended continuously to all the points of the polyhedron ; * analogously , the cube @xmath421 is homotopy equivalent to the edge @xmath448 @xmath449 , by the continuous function that maps @xmath447 to @xmath23 , and the ones of @xmath450 to @xmath324 . *",
    "each polyhedron @xmath451 ( see fig .  [ poligonos5 ] ) is homotopy equivalent to the corresponding square with vertices @xmath452 by the continuous function that maps the vertices of @xmath453 to @xmath324 for @xmath454 if @xmath324 is critical , or @xmath324 to @xmath324 if not .",
    "it is extended continuously to the rest of the points of the polyhedron * each hexahedron of quadrilateral faces ( see fig .  [ hexahedron ] ) is homotopy equivalent to the corresponding unit cube obtained after mapping each size@xmath145 cube @xmath330 corresponding to a critical vertex @xmath186 , to @xmath23 .",
    "finally the polyhedral complex @xmath3 is well - composed .",
    "observe that after performing proc .",
    "[ method ] , we have replaced each critical vertex @xmath186 by a cube @xmath455 , and the set @xmath456 by @xmath457 ( see , for example , fig .",
    "[ critical_conf ] and fig .",
    "[ stars ] ) .",
    "we have to prove that conditions @xmath48 and @xmath49 of prop .",
    "[ e1e2 ] are satisfied :    * any edge @xmath458 with endpoints @xmath459 and @xmath460 in @xmath461 has exactly two @xmath41-cofaces : * * if @xmath462 was also an edge in @xmath40 satisfying @xmath48 , then neither @xmath459 nor @xmath460 were critical vertices and hence , @xmath462 will have as @xmath41-cofaces either square faces ( that remain the same from @xmath40 ) or quadrilateral faces of the polyhedra d ) or e ) of fig .",
    "[ poligonos5 ] . * * if @xmath462 is an edge of a cube @xmath330 for some critical vertex @xmath23 , then @xmath462 has as @xmath41-cofaces a square face of the cube @xmath330 and either a triangular face of a pyramid @xmath332 for some non critical vertex @xmath324 , or a square face of a cube @xmath421 for some critical vertex @xmath324 . * * if @xmath462 is an edge of a pyramid @xmath463 for some critical vertex @xmath23 , then either @xmath462 is shared by exactly two triangular faces of the pyramid , or it is shared by a triangular face of the pyramid and a quadrilateral face of a polyhedron @xmath464 for some @xmath465 , and @xmath466 for some @xmath467 .",
    "see fig .",
    "[ poligonos5].(d - g ) .",
    "* for any vertex @xmath468 , @xmath469 in @xmath461 has exactly one connected component : * * if @xmath459 was also a vertex in @xmath40 ( that is , @xmath459 was a non - critical vertex and hence , satisfied condition @xmath49 ) , then @xmath470 was a set of edges and vertices in @xmath40 , that are faces of @xmath45cofaces of @xmath459 . in the case that any of those @xmath45cofaces were replaced by a polyhedron @xmath464 for some @xmath465 , some critical vertex @xmath23 and such that @xmath466 for some @xmath467 , only one of the quadrilateral faces @xmath471 of @xmath464 would lie on @xmath461 and the edges and vertices in @xmath470 in @xmath40 would be replaced by the edges and vertices of @xmath330 and @xmath472 shared with @xmath471 .",
    "the way of construction of the new polyhedra guarantees that @xmath470 in @xmath461 is still connected . * * if @xmath459 is a vertex of a cube @xmath330 for some critical vertex @xmath23 of @xmath1 , then , by construction , the @xmath41-cofaces of @xmath459 are either square faces of @xmath330 , or triangular faces of a pyramid @xmath332 , for some non - critical vertex @xmath324 , or square faces of an adjacent cube @xmath421 for some other critical vertex @xmath324 , or quadrilateral faces of the polyhedra @xmath464 showed in fig .",
    "[ poligonos5 ] . then , @xmath469 in @xmath461 , as one can guess from fig .  [ poligonos5 ] , has exactly one connected component .     and proc  [ method ] * * only on the central vertex for the 3d complete cubical complexes showed in fig .",
    "[ critical_conf].**,width=510 ]     associated to a 3d image composed by @xmath257 voxels .",
    "b ) the obtained 3d well - composed polyhedral complex @xmath3.,width=510 ]     where @xmath1 is the cubical complex showed in fig .  [ ejemplo1].a .",
    "b ) the color values in @xmath8 after performing the repairing process explained in proc .",
    "[ methodextended].,width=510 ]    in fig .",
    "[ ejemplo1].a , there is a simple example of a cubical complex @xmath1 associated to a 3d image composed by @xmath257 voxels .",
    "the color values of the ecm representation @xmath7 of @xmath1 is showed in fig .",
    "[ ejemplo].a .",
    "the color values in @xmath8 after performing the repairing process explained in proc .",
    "[ methodextended ] is showed in fig .",
    "[ ejemplo].b . in fig .",
    "[ ejemplo1].b , there is the 3d well - composed polyhedral complex @xmath3 obtained following proc .",
    "[ method ] .",
    "the triple @xmath229 is an ecm representation of @xmath3 .",
    "observe that @xmath3 is constructed by replacing each cell in @xmath1 which is a coface of a critical vertex , by a particular polyhedron defined above .",
    "observe that the color - values in the ecm representations @xmath401 ,",
    "@xmath473 , @xmath474 , @xmath475 , of each new added polyhedron in @xmath3 , used for computing the ecm representation for @xmath3 , coincides with the color - values computed in proc .",
    "[ methodextended ] .",
    "for this reason , for any @xmath476 , @xmath321 .",
    "finally , the new structuring elements stored in @xmath6 are obtained from the ecm representation of each new added polyhedra in proc .  [ method ] .",
    "in this paper , we have presented a representation scheme called ecm representation for storage and manipulate the cells of both an initial cubical complex @xmath1 associated to a 3d digital image @xmath0 and a 3d well - composed polyhedral complex homotopy equivalent to it . using this scheme ,",
    "we have presented a method for constructing the complex @xmath3 .",
    "although the representation of the final polyhedron is @xmath477 times bigger than the input , plus the space required to encode voxel colors , there are several advantages when using our approach as we will see below . in order to compute properties on a polyhedral complex @xmath25 such as homology , we only need to store the map @xmath478 and the structuring elements @xmath67 .",
    "however , the set @xmath6 remain the same for any ecm representation @xmath8 of @xmath3 obtained from a cubical complex @xmath1 after performing proc .",
    "[ method ] .",
    "therefore , proc .",
    "[ methodextended ] provides enough information to compute the homology of @xmath3 .",
    "the overall method is linear in the number of cells of the initial cubical complex @xmath1 .",
    "in fact , the method is linear in the number of critical vertices of @xmath1 and only the points in @xmath479 ( which represent the cells in @xmath480 for any critical vertex @xmath23 ) are modified .",
    "observe that the representation scheme could be improved , considering only the critical vertices of @xmath1 and their cofaces .",
    "besides , we think that voxel colors may not be needed since the dimension of a cell @xmath429 represented by a point @xmath77 may be deduced from the coordinates of @xmath46 .",
    "we let these last tasks for future work .",
    "finally , this way of representation provides a fast access to the cells of @xmath1 and @xmath3 , in terms of the coordinates used to codify it , as well as an efficient way to get all the boundary faces of each cell . and what is more important , to obtain all this information we do not need to build @xmath3 .",
    "wagner h. , chen c. , vucini e. : efficient computation of persistent homology for cubical data , in topological methods in data analysis and visualization ii , mathematics and visualization , 91106 ( 2012 ) proc . of the 4th workshop on topology - based methods in data analysis and visualization ( topoinvis 2011 ) , 2011            gonzalez - diaz r. , umble r. , lamar - leon j. : cup products on polyhedral approximations of 3d digital images . in proc .",
    "of the 14th int .",
    "conf . on combinatorial image analysis ( iwcia11 ) .",
    "lncs 6636 , 107119 ( 2011 )"
  ],
  "abstract_text": [
    "<S> a binary three - dimensional ( 3d ) image @xmath0 is well - composed if the boundary surface of its continuous analog is a 2d manifold . </S>",
    "<S> since 3d images are not often well - composed , there are several voxel - based methods (  repairing \" algorithms ) for turning them into well - composed ones but these methods either do not guarantee the topological equivalence between the original image and its corresponding well - composed one or involve sub - sampling the whole image . in this paper </S>",
    "<S> , we present a method to locally  repair \" the cubical complex @xmath1 ( embedded in @xmath2 ) associated to @xmath0 to obtain a polyhedral complex @xmath3 homotopy equivalent to @xmath1 such that the boundary of every connected component of @xmath3 is a 2d manifold . </S>",
    "<S> the reparation is performed via a new codification system for @xmath3 under the form of a 3d grayscale image that allows an efficient access to cells and their faces .    </S>",
    "<S> keywords : binary 3d image , well - composedness , cubical complex , polyhedral complex , homotopy equivalence , 2d manifold </S>"
  ]
}
{
  "article_text": [
    "erds once wrote , `` my most striking contribution to geometry is , no doubt , my problem on the number of distinct distances , '' @xcite .",
    "the referred question , which asks what is the minimum number of distinct distances determined by @xmath0 points , was first asked in 1946 @xcite and marked the beginning of a chain of variants .",
    "see @xcite and @xcite for a survey on these .",
    "although one would expect all distances between @xmath0 points to be different if they were to be placed in the plane at random , if the distances are regularly placed , such as on a lattice , then many distances may repeat .",
    "erds conjectured lower bound , @xmath12 , attained by a @xmath13 integer lattice , was essentially proven up to a @xmath14 factor by guth and katz in 2010 .",
    "@xcite    the variant we study in this paper is one where the distances have prescribed multiplicities .",
    "one says @xmath0 points are in crescent configuration in @xmath1 if they are in general position and determine @xmath2 distinct distances such that for every @xmath3 , there is a distance that occurs exactly @xmath4 times .",
    "erds conjectured that there exists a sufficiently large @xmath5 such that no crescent configuration exists on @xmath5 or more points @xcite .",
    "though constructions have been provided for @xmath15 by erds , i. palsti and c. pomerance @xcite , little progress has been made towards a construction for @xmath7 .",
    "one problem often encountered in the search for these configurations is the lack of understanding of their properties and the difficulty in exhibiting the configurations information combinatorially .    as such",
    ", we take a new approach to studying these crescent configurations , borrowing techniques from distance geometry and graph theory .",
    "our main theorems are the results of two algorithms that search for and classify all crescent configurations on any @xmath16 up to graph isomorphism and find geometric realizations for each of these isomorphism classes in the plane .",
    "[ thm:3on4 ] given a set of three distinct distances @xmath17 on four points , there are only three allowable crescent configurations up to graph isomorphism . in figure",
    "[ fig : mcr ] we provide graph realizations for each type .",
    "[ thm:27on5 ] given a set of four distinct distances @xmath18 on five points , there are 27 allowable crescent configurations up to graph isomorphism . in figure",
    "[ fig : allfive ] we provide graph realizations for each type .",
    "the advantage of this algorithmic method is that it can be applied in higher dimensions , though we hope that the running time ( @xmath19 ) can still be vastly improved .    in appendix [ app : 5points ]",
    "we include distance sets and realizable distances for each crescent configuration on four and five points .    in section 2 ,",
    "we introduce our distance geometry approach and prove a classification of crescent configurations for a general @xmath0 .",
    "we follow this in section 3 with an outline of the first half of the algorithm used to achieve theorems [ thm:3on4 ] and [ thm:27on5 ] .",
    "we then move to section 4 where we discuss how distance geometry methods may be applied to determine whether a distance set is realizable . in section 5 ,",
    "we outline the second half of the algorithm , completing the proofs for theorems [ thm:3on4 ] and [ thm:27on5 ] .",
    "after the theorems have been established , we discuss another way to verify the uniqueness of our isomorphism classes and also a different method to characterize these configurations through analysis of rigidity in section 6 .",
    "lastly , we discuss potential future work based on our approach using graph theory , rigidity , and distance geometry .",
    "the authors are happy to provide copies of any code referenced in the course of this paper .",
    "please email steven.miller.mc.96@aya.yale.edu .",
    "in this section we provide the key definitions and theorems that we use to classify crescent configurations .",
    "[ def : genpos ] we say that n points are in general position in @xmath1 if no d+1 points lie on the same hyperplane and no d+2 lie on the same hypersphere .",
    "we say @xmath0 points are in crescent configuration ( in @xmath20 ) if they lie in general position in @xmath20 and determine @xmath21 distinct distances , such that for every @xmath22 there is a distance that occurs exactly @xmath4 times .",
    "the notion of general position is very important in the construction of crescent configuration . without this notion ,",
    "the problem of placing @xmath0 points in @xmath1 to determine @xmath2 distinct distances satisfying the prescribed multiplicities becomes trivial . by simply placing @xmath0 points on a line in an arithmetic progression ,",
    "we solve the problem in any dimension .",
    "the _ distance coordinate _",
    ", @xmath23 , of a point @xmath24 is the multiset of all distances , counting multiplicity , between @xmath24 and the other points in a set @xmath25 .",
    "order does not matter .",
    "the _ distance set _ , @xmath26 corresponding to a set of points , @xmath25 , is the multiset of the distance coordinates for each point in the @xmath25 .    [",
    "isomorphism for labeled graph @xcite][def : isomorphism ] graph a is isomorphic to graph b if and only if there exists a bijective function @xmath27 , ( where v(a ) and v(b ) are the vertex spaces ) such that :    1 .",
    "@xmath28 , 2 .",
    "@xmath29 , and 3 .",
    "@xmath30 ,    where @xmath31 and @xmath32 are functions that define the labels of the vertices and edges of a and b respectively .",
    "we note that a crescent configuration on @xmath0 points can be considered a weighted complete graph with @xmath2 distinct weights associated to the edges in a certain manner , so that the configuration can be realized in @xmath1 .",
    "the adjacency matrix , thus , is a natural way to store information about the configuration .",
    "should we rearrange the weights that each vertex is incident to , we would most likely have to draw a configuration differently .",
    "due to this insight , we have the following theorem .",
    "[ thm : graphisom ] let @xmath24 and @xmath33 be two crescent configurations on the same number of points @xmath0 . if @xmath24 and @xmath33 have the same distance sets , then there exists a graph isomorphism from @xmath24 to @xmath33 .",
    "consider two crescent configurations , @xmath24 and @xmath33 , each on @xmath0 points , @xmath34 and @xmath35 , such that @xmath24 and @xmath33 have the same distance sets ( up to order of the entries of the coordinates ) .",
    "we note that we do not yet care about the specific distances and , instead , designate each distance by the points that define them , as will be shown below .",
    "first we show that the ordering of the elements of the distance coordinates does not matter when comparing the distance sets .",
    "then we prove that @xmath24 and @xmath33 are isomorphic when we view them as labeled graphs .",
    "consider @xmath24 .",
    "first , we number each point of @xmath24 from @xmath36 to @xmath0 . for each point @xmath37 , @xmath38 , in the configuration ,",
    "we re - order its distance coordinate so that the distance between @xmath37 and @xmath39 , @xmath40 , is in the first slot , the distance between @xmath37 and @xmath41 , @xmath42 , is in the second slot , and so on , inserting 0 into the @xmath4th slot , representing the distance between @xmath37 and @xmath37 . we will call these _ augmented distance coordinates_. all of our augmented distance coordinates uniquely determine the points that they represent .",
    "note that the arrangement of these augmented coordinates depends on how we choose to index the points of @xmath24 .",
    "the nonzero entries , however , only encode information about the set of distances between a point and all other points in a given configuration . they do not account for relative position . that is to say , until assign a number to each of the points of @xmath24 ( i.e. , @xmath43 , @xmath44 , and so on ) , the order of the entries of the distance coordinates does not matter .",
    "the distance coordinate @xmath17 is the same as the coordinate @xmath45 .",
    "+    next we do the same thing for @xmath33 .",
    "since the distance sets of @xmath24 and @xmath33 are the same , we know that for every augmented coordinate in @xmath24 , there is an augmented coordinate in @xmath33 with the same set of non - zero entries .",
    "thus , let @xmath37 and @xmath46 have the same non - zero entries in their augmented coordinates .",
    "we define each point by its augmented coordinate , @xmath47 @xmath48 since the set of non - zero entries in @xmath49 and @xmath50 are the same , we know that there exists a permutation , @xmath51 such that @xmath52 . since we know that every distance coordinate in @xmath24 has a match in @xmath33 , there exists a permutation function of this sort that maps @xmath49 to some @xmath50 for all @xmath38 .    furthermore , we actually only need one permutation for all of the reordered coordinates of @xmath24 .",
    "this can be quickly seen by recognizing that the ordering of a single augmented distance coordinate of @xmath24 determines the ordering of all augmented distance coordinates if we wish to retain all information . to prove that it this is indeed the case , we point out that the reordered distance coordinates of @xmath24 are , in fact , the rows and columns of a weighted adjacency matrix .",
    "the adjacency matrix below models a configuration on @xmath53 points .",
    "the element in row @xmath36 , column @xmath54 represents the distance between points @xmath43 and @xmath44 .",
    "@xmath55 from this , a proof by induction will show that if we permute the entries of row @xmath36 , the other rows ( and columns ) must undergo the same permutation in order to preserve the symmetry of the matrix .",
    "we now identify each point of @xmath24 and @xmath33 by these augmented and rematched distance coordinates to create two labelled and weighted graphs where the vertices are the points of @xmath24 and @xmath33 , and each edge @xmath56 is weighted by the distance between the two points , @xmath57 . in these graphs ,",
    "the vertex labels are the augmented distance coordinates of each point , where the coordinates of @xmath24 are further transformed by @xmath51 , and the edge labels are the distinct distances , @xmath58 that define our crescent configurations .",
    "given this information , it is very straightforward to prove that these graphs are isomorphic by showing that they satisfy the three conditions in definition [ def : isomorphism ] .",
    "let @xmath59 be such that @xmath60 , where @xmath61 is chosen so that the distance coordinates of @xmath62 and @xmath61 have the same nonzero values .",
    "since we augmented and transformed our distance coordinates by the permutation function @xmath51 , we know that @xmath37 and @xmath46 have the same vertex labels .",
    "thus , we know @xmath63 is one - to - one because the distance sets of @xmath24 and @xmath33 are the same .",
    "furthermore , we know that @xmath63 is onto because @xmath24 and @xmath33 both have @xmath0 points . therefore , @xmath64 , @xmath65 such that @xmath66 .",
    "therefore , f is a bijection .",
    "_ condition 1 : _ let @xmath67 and @xmath68 be defined as in definition [ def : isomorphism ] .",
    "this menas that @xmath69 and @xmath70 .",
    "thus , given @xmath71 , we have that @xmath72 .",
    "_ condition 2 : _ this condition holds because crescent configurations are complete graphs , and @xmath63 is a bijection",
    ". therefore @xmath73 , where @xmath74 and @xmath75 are the edge sets of @xmath24 and @xmath33 respectively .",
    "_ condition 3 : _ to prove this condition , we recall that applying @xmath51 to @xmath62 is equivalent to re - indexing the points of @xmath24 . therefore ,",
    "if we let @xmath76 and @xmath77 be functions that return the edge labels of @xmath24 and @xmath33 , respectively , as defined as in definition [ def : isomorphism ] , then we know that @xmath78 satisfying this condition .",
    "thus a and b are isomorphic .",
    "since the algorithm can only distinguish the similar permutations according to the distance labels , the resulting distance sets may define crescent configurations that are not geometrically realizable .",
    "we address this concern later in the paper ( see section [ sec : geomreal ] on geometric realizability ) .",
    "as a direct result of theorem [ thm : graphisom ] , we now have a method for classifying all crescent configurations on @xmath0 points into isomorphism classes . in this section",
    "we provide a sketch of the algorithm used to find these isomorphism classes . a pseudocode is provided in appendix",
    "[ app : algorithms ] .",
    "consider a set of distances , @xmath79 , associated to a crescent configuration on @xmath0 points .",
    "this set of distances may be threaded through an @xmath80 adjacency matrix like the one shown in the proof of theorem [ thm : graphisom ] .    from this point on , we refer to these matrices as _ distance matrices _ ; however , they are the equivalent of weighted adjacency matrices in graph theory .",
    "let @xmath24 be an @xmath80 matrix .",
    "we say @xmath24 is a * distance matrix * if the following conditions are satisfied    1 .",
    "@xmath24 is symmetric , 2 .",
    "the entries along the main diagonal of @xmath24 are all 0 , and 3 .",
    "@xmath81 ( the entry found in the @xmath82 row and @xmath83 column of @xmath24 ) refers to the distance between points @xmath4 and @xmath84 of the point configuration ( or graph ) defined by @xmath24 .",
    "as each configuration has a distance matrix associated to it , we can generate all possible configurations by threading all permutations of @xmath79 through distance matrices . using standard combinatorial techniques",
    ", we can quickly see that this method will generate 60 configurations on four points , 12,600 on five points , and 37,837,800 on six points .",
    "we would now like to apply theorem [ thm : graphisom ] and group these configurations into isomorphism classes ( via graph isomorphism ) .",
    "a computer program may then be used to group together all distance matrices defining configurations with identical distance sets .",
    "these groups then represent our isomorphism classes , and we can conduct the remainder of our analysis on one representative from each class . for @xmath85 ,",
    "this reduces our initial @xmath86 to @xmath10 classes . for @xmath87",
    ", it reduces our initial @xmath88 to @xmath89 classes .",
    "having finished this classification , we note that there are three degenerate cases that will force the configuration to _ always _ violate general position . these will remain unchanged under graph isomorphism since vertex and edge - set pairings stay the same , allowing us to eliminate entire isomorphism classes if one representative is proven to be degenerate .",
    "these cases are as follows .    1",
    ".   the configuration contains one point at the center of a circle of radius @xmath90 with four or more points on this circle as seen in figure [ fig : star ] .",
    "2 .   the configuration contains three ( or more ) isosceles triangles sharing the same base .",
    "3 .   the configurations contains four points arranged on the vertices of an isosceles trapezoid .",
    ".,scaledwidth=30.0% ]    although there exist other cases that will force a class to violate general position , these three cases may be accounted for by only considering the distance matrices .",
    "case 1 is very simple to account for and is only possible for @xmath91 . in order to eliminate these cases , we remove configurations containing one or more distance coordinates in which a particular distance , @xmath90 , occurs four or more times . in algorithm",
    "[ alg : class ] , this case and case 3 are accounted for in the procedure removecyclic .    as with case 1 , case 2 is only possible for @xmath91 .",
    "if three or more isosceles triangles share the same base , then all of their apexes must reside on the line bisecting this base , forcing them to violate general position .    in a distance matrix ,",
    "an isosceles triangle is indicated by a matching pair of distances occurring in a row .",
    "therefore , we remove all distance matrices in which three or more rows contain a matching pair occurring in the same slots in each row .",
    "this case is accounted for in algorithm [ alg : class ] by the procedure removelinearcase .",
    "case 3 requires us to remove all configurations that contain a subset or subsets of four points defining an isosceles trapezoid , since isosceles trapezoids are always cyclic quadrilaterals . in algorithm",
    "[ alg : class ] , the procedures submatrices and removecyclic are included to account for these cases , which may be identified by their distance matrices using the following lemma .",
    "[ cla : isosceles ] a @xmath92 distance matrix will always define an isosceles trapezoid if and only if one of the following holds :    1 .",
    "the matrix has only one distinct row such that 1 .",
    "the matrix has only two distinct distances , or 2 .",
    "the matrix only has three distinct distances , 2 .",
    "the matrix has two distinct rows , both with multiplicity two , such that 1 .",
    "the matrix has three distinct distances with multiplicity no greater than three ( note that this means each distance occurs no more than six times in the distance matrix ) , or 2 .",
    "the matrix has four distinct distances with multiplicity no greater than two ( each distance occurs no more than four times in the distance matrix ) .",
    "( @xmath93 ) according to halsted @xcite , a necessary and sufficient condition for a quadrilateral to be an isosceles trapezoid is that it has at least one pair of opposite sides with equal length and diagonals of equal length .",
    "it is not possible for these two lengths ( sides and diagonals ) to be equal because this would create two isosceles triangles that would have to be congruent .",
    "therefore there are three cases for isosceles trapezoids : ( 1 ) four distinct distances , ( 2 ) three distinct distances , or ( 3 ) two distinct distances .",
    "figure [ fig : 4dist ] presents possible realizations for each of these cases . from here , it is straightforward to show that each of these quadrilaterals satisfies one of the conditions stated in lemma [ cla : isosceles ] , thus completing this direction of the proof .",
    "( @xmath94 ) we now prove the other direction .",
    "we begin with condition ( 1a ) : one distinct row and two distinct distances .",
    "assume each row represents the distance coordinate @xmath95 ( order of distances may differ among rows ) .",
    "since we require all rows of the distance matrix to have the same distance coordinate , distance @xmath96 must touch every point yet only show up twice .",
    "therefore , it must represent both diagonals or two opposite sides .",
    "both cases yield a quadrilateral with a set of congruent opposite sides and congruent diagonals , a necessary and sufficient condition for an isosceles trapezoid .    for condition 1b - one distinct row and three distinct distances",
    "- all three distances must be common to all points , so they must describe either a set of opposite sides or the diagonals , in all cases yielding an isosceles trapezoid .",
    "the proofs in the other directions all following similar arguments . in each case",
    "there are two distances that must be common to all points and at least one distance that can only be common to two points , implying that one set of opposite sides can not be congruent , therefore the distances common to all points must describe the diagonals and only one set of opposite sides , thus describing an isosceles trapezoid in each case .",
    "once these cases have been eliminated , we are left with three isomorphism classes for four points and @xmath97 for five points .",
    "[ rem : runtime ] it should be noted that the runtime of algorithm [ alg : class ] is @xmath19 , so its use is limited to crescent configurations on relatively few points .",
    "however , we believe that with enough processing power , upper bounds can be established using the algorithm for small @xmath0 such as @xmath98 and @xmath6 . as such , at this time , this does not pose much of an issue to the progress of this research , as no crescent configurations on more than @xmath6 points is yet to be found .",
    "in the previous sections we developed a way to find every isomorphism class of distance sets that corresponded to a crescent configuration on @xmath0 points ; however , it is not clear that given some @xmath99 and one of these distance sets , there exists a set of points in @xmath100 that realizes this distance set .",
    "thus , we formally define geometric realizability .",
    "[ def : geomreal ] a crescent configuration on @xmath0 points is _ geometrically realizable _ in @xmath100 if there exists some distances @xmath101 for which there exist points @xmath102 in @xmath100 that realize the corresponding distance set .",
    "we have thus far established upper bounds on the number of crescent configurations on @xmath0 points based on the combinatorial aspects of this problem .",
    "we now sharpen these bounds by considering criteria for geometric realizability .",
    "@xcite showed that given an @xmath0 , there exists an @xmath99 such that an @xmath103crescent configuration exists in @xmath100 . in this section ,",
    "we fix @xmath99 and determine whether a given distance set is geometrically realizable in @xmath100 .",
    "in section [ sec : counting ] , we classify crescent configurations in terms of the distances between each pair of points .",
    "the problem of determining information about a set of points based on the distances between them is well studied , and is known as the distance geometry problem .",
    "thus , we are now able to use techniques from distance geometry in order to sharpen the bounds on the number of geometrically realizable configurations on @xmath0 points .",
    "we begin by introducing some of these techniques .    the _ cayley - menger matrix _ corresponding to a set of @xmath0 points @xmath104 is an @xmath105 matrix of the following form : @xmath106 where @xmath107 is the distance between @xmath108 and @xmath109 .",
    "the cayley - menger matrix corresponding to a set of points can be used to determine whether those points lie in a @xmath110-dimensional euclidian space .",
    "note that @xmath111 points always lie in a hyperplane of @xmath112 ; thus we only need to consider collections of points of size at least @xmath113 .",
    "[ thm : cayley ] @xcite let @xmath114 be a @xmath115 matrix of the form specified above .",
    "@xmath114 is the cayley - menger matrix of a set of @xmath113 points in @xmath116 if and only if @xmath117 .    [ cor : cayley ] let @xmath114 be a @xmath118 matrix of the form specified above ; @xmath114 is the cayley - menger matrix of a set of @xmath0 points , @xmath119 in @xmath120 , if and only if the cayley - menger matrix corresponding to every size @xmath121 subset has determinant zero .",
    "@xmath94 suppose that @xmath114 is the cayley - menger matrix of @xmath0 points that can be realized in @xmath122 .",
    "thus , every subset of @xmath121 points can also be realized in @xmath100 , and thus has a corresponding cayley - menger matrix with determinant zero .",
    "+ @xmath93 suppose that the cayley - menger matrix corresponding to every size @xmath121 subset has determinant zero .",
    "note that @xmath123 must define an @xmath99-dimensional subspace of any euclidean space .",
    "note that by assumption , for every @xmath4 , the cayley - menger matrix corresponding to @xmath124 has determinant @xmath125 .",
    "thus , as a consequence of theorem [ thm : cayley ] , @xmath108 is in the same @xmath99-dimensional subspace .",
    "thus , our set of @xmath0 points must be realizable in @xmath100 .",
    "submatrices of the cayley - menger matrix can also determine whether the points determined by a set of distances lie on the same hypersphere .",
    "the _ euclidian distance matrix _ corresponding to a set of @xmath0 points @xmath126 is an @xmath127 matrix of the following form :    @xmath128    note that the euclidean distance matrices defined above are slightly different than the general notion of distance matrices used in previous sections .",
    "[ thm : circles ] @xcite let @xmath129 be the euclidean distance matrix corresponding to points @xmath130 in euclidean space .",
    "these points lie on a hypersphere in @xmath131 if and only if @xmath132 .",
    "we apply these techniques to the problem of counting crescent configurations in the following corollary .",
    "[ cor : realize ] let @xmath114 be the cayley - menger matrix corresponding to a distance set on n points , @xmath26 . then @xmath26 is geometrically realizable in general position in @xmath100 if and only if the following conditions hold .    1 .",
    "let @xmath133 be a size @xmath134 subset of @xmath135 that contains @xmath111 .",
    "let @xmath136 be the submatrix of @xmath114 with rows and columns indexed by @xmath133 .",
    "for every choice of @xmath133 , @xmath137 .",
    "2 .   let @xmath133 be a size @xmath121 subset of @xmath138 .",
    "for every such choice of @xmath133 , @xmath139 .    from corollary [ cor : cayley ] ,",
    "a collection of distances between @xmath0 points is geometrically realizable in @xmath100 if and only if the cayley - menger matrix corresponding to each subset @xmath121 points has determinant 0 .",
    "each of these matrices is one of the submatrices specified by the first condition .",
    "we consider the submatrices specified by the second condition in two parts .",
    "first , consider the submatrices @xmath136 for which @xmath140 .",
    "we see that these comprise the cayley - menger matrices for each subset of @xmath141 points .",
    "we now consider the submatrices @xmath136 for which @xmath142 .",
    "we see that these comprise the euclidean distance matrices for each subset of @xmath121 points .",
    "thus , we can see that the submatrices specified by the second condition is the set of all euclidean distance matrices for each size @xmath121 subset of the @xmath0 points together with the set of all cayley - menger matrices for each size @xmath141 subset of the @xmath0 points . by theorem [ thm : circles ] ,",
    "a euclidean distance matrix on @xmath121 points has determinant 0 if and only if these points lie on the same hypersphere in @xmath100 . by theorem [ thm : cayley ]",
    ", the cayley - menger matrix of @xmath141 points has determinant 0 if and only if these points lie on the same hyperplane in @xmath100 .",
    "thus , this second condition holds if and only if the points lie in general position in @xmath100 .    our application of this corollary to the distance sets on @xmath10 and @xmath11 points",
    "have allowed us to determine the geometric realizability of each of the distance sets found using techniques from earlier sections .",
    "these geometrically realizable configurations are discussed in the following section .",
    "thus far , most of our attentions have been focused on crescent configurations in the plane .",
    "however , these techniques can be applied to finding crescent configurations in higher dimensions , furthering the work of burt et .",
    "al . @xcite .",
    "as stated in section [ sec : counting ] , algorithm [ alg : class ] yields three crescent configurations on four points and 51 on five points , unique up to isomorphism . however , these procedures do not guarantee that each isomorphism class contains geometrially realizable configurations .    to check which of these configurations are geometrically realizable , we run algorithm [ alg : check4 ] . a pseudocode of this algorithm can be found in appendix [ app : algorithms ] .",
    "note that we assume @xmath143 in order to simplify the procedure .",
    "algorithm [ alg : check4 ] is an extended application of theorem [ cor : realize ] .",
    "the first step of this algorithm is to take the cayley - menger determinants of all @xmath10-point subsets of each configuration found by algorithm [ alg : class ] and set them equal to zero . doing so yields a system of @xmath144 equations with unknowns : @xmath145 .",
    "if the configuration is realizable in the plane , solving this system of equations will give all possible solutions to these distances in @xmath146 .",
    "note that the values must be positive and real - valued .    for each of these solutions",
    ", we check the cayley - menger determinants of all @xmath53-point subsets of the configuration .",
    "if one or more of these determinants equals zero , that solution forces the configuration to place three points on the same line , violating general position , so we throw it away .",
    "if none of the determinants are zero , we keep the solution .    for each remaining solution",
    ", we take the determinant of the euclidean distance matrix of each @xmath10-point subset of the configuration . if any of these determinants equal zero",
    ", the solution forces four points onto the same circle , violating general position , and we throw it away .",
    "any remaining solutions represent the distances of a geometrically realizable crescent configuration .",
    "applying this algorithm to the configurations returned by algorithm [ alg : class ] completes the proofs of theorems [ thm:3on4 ] and [ thm:27on5 ] , as we find that there are exactly three realizable crescent configurations on four points and 27 realizable crescent configurations on five points .    in appendix",
    "[ app : 5points ] , we provide a set of distances for every configuration on five points that had at least one remaining solution after applying this algorithm .",
    "so far in this paper , we have shown that crescent configurations can be classified into a finite number of isomorphism classes for each positive integer @xmath0 and defined a method to geometrically realize these configurations .",
    "we now turn our attention to testing whether our crescent configurations are rigid , which can help answer questions , such as , whether one distance set could define two different realizations of crescent configurations belonging to the same isomorphism class . for this reason",
    ", we shall treat our configurations as graphs and adopt the following definition of graph rigidity .",
    "@xcite let @xmath147 be a graph @xmath148 on @xmath149 vertices in @xmath112 then @xmath150 is @xmath147 together with the point @xmath151 .",
    "let @xmath152 be the complete graph on @xmath149 vertices .",
    "the graph @xmath150 is _ rigid _ in @xmath112 if there exists a neighbordhood @xmath153 of @xmath154 such that @xmath155 where @xmath156 and @xmath157 are the edge functions of @xmath152 and @xmath147 , which return the distances of edges of the associated graphs .    in other words ,",
    "a rigid graph can not have its vertices be continuously moved to noncongruent positions while preserving the distances .",
    "the rigidity testing of these configurations would not only serve as a verification for our classification under graph isomorphism , but would also give us another way to characterize these crescent configurations .",
    "one important note is that all crescent configurations are complete graphs .",
    "it is a rather direct result of the following theorem and its corollary that all complete graphs are rigid in @xmath158 .",
    "[ thm : rigidr2]@xcite the edges of a graph @xmath159 are independent in two dimensions if and only if no subgraph @xmath160 has more than @xmath161 edges .",
    "a graph with @xmath161 edges is rigid in two dimensions if and only if no subgraph @xmath162 has more than @xmath163 edges .",
    "we can easily check that the complete graph on @xmath36 , @xmath54 and @xmath53 points ( @xmath164 , @xmath165 and @xmath166 respectively ) satisfy the condition and thus are rigid . for @xmath9 , the complete graph on @xmath0 points ( or @xmath167 by convention )",
    "is composed of triangles , which are @xmath166 .",
    "since each @xmath166 composing @xmath167 is rigid , it must also be the case that one can not move the vertices of @xmath167 to noncongruent positions while preserving the distances because this would inevitably change the distances in each @xmath166 subgraph .",
    "therefore , all crescent configurations are rigid .",
    "nonetheless , this fact does not imply our work is over , as there is more than one kind of rigidity for graphs .",
    "thus , we want to study whether all crescent configurations fall into just one category of rigidity or if there are certain crescent configurations that are more rigid than others .",
    "in addition , theorem [ thm : rigidr2 ] can only be used to show the rigidity of crescent configurations in two dimensions . furthermore ,",
    "in the near future , we want to extend our definition of crescent configuration to @xmath168 crescent configurations , where two edges are considered equal if their lengths are within a sufficiently small @xmath168 from each other .",
    "thus we need another method that could accommodate the exploration in higher dimensions and the assessment of stability of an extended family of crescent configurations .",
    "+    this leads us to using * rigidity matrices*. these are an extremely powerful and flexible tool that can be used in @xmath169 for all @xmath170 .",
    "we introduce them and other necessary terminologies in subsection [ sub : prelim ] and apply them to our analysis in subsection [ sub : analysis ] .",
    "the following definitions and theorems will be used through out the rest of the paper to analyze the rigidity of crescent configurations on @xmath10 and @xmath11 points in @xmath158 .",
    "the formulation of each of these definitions have been adopted from one paper by bruce hendrickson @xcite due to their accessible nature .",
    "for other formulations and characterizations of rigidity , see also @xcite .",
    "+    @xcite let @xmath171 be a graph with some pairwise associated distance measurements .",
    "a realization @xmath172 of @xmath147 is a function that maps the vertices of @xmath147 to coordinates in some euclidean space such that the distance measurements are realized .",
    "@xcite a framework is a combination of a graph @xmath159 and a realization of @xmath147 in some euclidean space , denoted @xmath173    in our case , we will mostly be concerned with frameworks in @xmath158 , though the techniques can be generalized to higher dimension and in any euclidean space .",
    "[ def : flex ] @xcite a framework is called flexible if and only if it can be continuously deformed while preserving the distance constraints ; otherwise the framework is rigid .",
    "a framework is redundantly rigid if and only if one can remove any edge and the remaining framework is rigid .",
    "@xcite an * infinitesimal motion * is an assignment of velocity to each vertex such that @xmath174 for all pairs @xmath175 .",
    "a framework @xmath173 is infinitesimally rigid if and only if it does not have any infinitesimal motion .",
    "[ thm : gluck ] @xcite if a graph has a single infinitesimally rigid realization , then all its generic realizations are rigid .",
    "the main tool we will use to study the rigidity of our crescent configurations , as mentioned , are * rigidity matrices*. each framework has a rigidity matrix associated to it .",
    "this matrix is the set of all equations whose solutions are the infinitesimal motions of that framework .",
    "its rows correspond to the edges and its @xmath176 columns correspond to the components of the vertices in @xmath1 .",
    "there are @xmath177 nonzero elements in each row , one for each coordinate of the vertices connected to the corresponding edge .",
    "the differences in the coordinate values for the two vertices are these nonzero values .",
    "[ thm : hend ] @xcite a framework @xmath173 is rigid if and only if its rigidity matrix has rank exactly equal to @xmath178,the number of allowed motions , which is equal to @xmath179 for @xmath180 and @xmath181 otherwise .",
    "all the above theorems and objects are tied together in the following lemma , which provides the basis for our analysis in the next section .",
    "[ lem : bjackson ] @xcite the following statements are equivalent :    1 .",
    "@xmath147 is rigid in @xmath169 , 2 .",
    "some framework @xmath173 in @xmath169 is infinitesimally rigid , 3 .",
    "every generic framework of @xmath147 in @xmath169 is rigid .",
    "the first thing we need to do before we are able to study the rigidity matrix is to construct a realization . by theorem [ thm : gluck ] , it suffices to construct a single realization for each type of crescent configurations on @xmath0 points and study the rigidity of that framework .",
    "figure 6 is a realization of type c obtained by fixing @xmath182 .",
    "we note that since the distances in these configurations must satisfy general position as well as geometric realizability , fixing one distance to calculate the rest of the distances in the distance set does not affect the rigidity characterization of the configuration .",
    ", scaledwidth=50.0% ]    the above realization yield the following rigidity matrix , which we denote @xmath183 : @xmath184 by row reduction operations , we get that rank(@xmath183)@xmath185 . thus by theorem [ thm : hend ] , the framework is infinitesimally rigid .",
    "since the row reduction operations yield the same result whether @xmath186 or @xmath187 , we can conclude that type @xmath188 is rigid for all @xmath189 by lemma [ lem : bjackson ] .",
    "+ similarly , we can carry out the same analysis on type m. there are two realizations of type @xmath114 , which are included in figure 7",
    ".     and @xmath190,scaledwidth=70.0% ]    note that @xmath191 is the only distance that differs in these two realizations .",
    "if we remove @xmath191 and denote the remaining framework as @xmath192 and @xmath193 respectively , we could continuously deform one into the other .",
    "this fact also means that type m can not be redundantly rigid by definition .",
    "therefore , type m is another rigid graph .",
    "last but not least , type r can also be studied using the same method .",
    "we start with a realization that is included in figure 8 and a rigidity matrix @xmath194 to follow :    , scaledwidth=70.0% ]    @xmath195    by carrying out row reduction operations once more , we find that rank(@xmath194 ) @xmath196 . however , since removing any row in the matrix is equivalent to removing any edge in the framework and the rank of any remaining matrix obtained this way is always @xmath11 , we conclude that type r is redundantly rigid by definition [ def : flex ] . by @xcite ,",
    "the conditions for unique realization of a graph is rigidity , @xmath197-connectedness , and redundant rigidity .",
    "since type r satisfies all these conditions , it immediately follows that for each value of @xmath198 that we choose , there is a _ unique realization _ of type r. in conclusion we have found that not all crescent configurations on four points have the same rigidity . as stated above",
    ", only type r has a unique realization in @xmath158 .",
    "similarly , this analysis may be done on all @xmath199 crescent configurations on @xmath11 points to determine which ones have a unique realization in @xmath158 . +",
    "as mentioned previously , rigidity matrices are very accommodating .",
    "suppose we need to lift our crescent configurations into @xmath169 for @xmath200 , which we discuss in subsection [ sub : high ] .",
    "then , the number of rows and columns of the associated rigidity matrices as well as @xmath178 would change but the method of evaluating rigidity would remain the same . similarly , with the extension of our definition from crescent configuration to @xmath168 crescent configuration ( [ sub : epsilon ] ) , we can insert @xmath168 into the matrix by constructing a realization that involves @xmath168 and then solve for @xmath168 depending on what stability type we want the configuration to exhibit .",
    "thus far , we have used our techniques to classify crescent configurations in the plane for @xmath85 and @xmath87 . because of the complexity of our algorithm",
    ", we have not been able to apply our techniques to higher @xmath0 . as mentioned above ,",
    "the runtime of our current algorithm is on the order of @xmath201 , which prevents us from carrying out this process for large @xmath0 .",
    "however , thus far no configurations have been found for @xmath202 , so even running a similar algorithm for @xmath203 would yield significant progress on this problem .",
    "thus , we are interested in the possibility of modifying our algorithm or finding a new technique that would allow us to count crescent configurations on higher @xmath0 . in this way , we could develop a sequence of @xmath204 , where each @xmath205 gives the number of crescent configurations on @xmath4 points .",
    "if erds conjecture is correct , then @xmath204 only has a finite number of non - zero terms",
    ". it would be interesting to see erds conjecture realized as a sequence that goes to zero .",
    "since our techniques yield every possible crescent configuration for a given @xmath0 , we can use these to observe patterns .",
    "for example , one can see from figure [ fig : allfive ] that many of crescent configurations on 5 points contain crescent configurations on 4 points",
    ". we may be able to develop techniques using such patterns that generate some of the possible crescent configurations for larger @xmath0 .",
    "as mentioned earlier , the distance geometry techniques that we use naturally extend to higher dimensions .",
    "thus , we are interested in using these techniques to find the number of crescent configurations on @xmath0 points in a given dimension .",
    "our goal is to construct a sequence for each @xmath110 consisting of the number of crescent configurations on @xmath4 points in @xmath169 for each @xmath4 .",
    "currently , constructions in @xmath206 have been found for 3 , 4 , and 5 points .",
    "thus , even finding a single 6 point configuration in 3d would give new information .",
    "we have attempted to use techniques from distance geometry to find a realization in @xmath206 of a known distance set for @xmath207 in the plane .",
    "however , the resulting systems of equations exceeded our computational resources .",
    "recently , burt et .",
    "al @xcite found that given @xmath110 high enough , one can always construct a crescent configuration on @xmath0 points in @xmath169 .",
    "we can consider similar questions using the concept of distance coordinates .",
    "we are interested in determining whether given a distance set there always exists a dimension in which the set is geometrically realizable .",
    "now that we have developed a way of classifying crescent configurations , we can examine certain properties for each of the types of crescent configurations .",
    "we started to explore in this direction with our rigidity calculations .",
    "+ one direction we are interested in is to develop a concept of stability for these configurations , as we noticed that moving the points of the m , r , and c- type configurations resulted in different amounts of change in the distances .",
    "further , should we define two distances to be equal if they are @xmath168 apart , then our study of the stability of crescent configurations could have some powerful applications to the study of molecules .",
    "crescentclassificationdistances , n[alg : class ] data  all  permutations  of  distances + data w thread  the  list  through  an  n n  matrix  to  create  a  symmetric  matrix  with  diagonal  @xmath125 .",
    "x sort  the  elements  of  each  row  into  canonical  order ,  then  sort  the  rows  by  first  element .",
    "check  all  4-point  subsets  for  isosceles  trapezoids + y k take  all   4 4  submatrices  taken + along  the  diagonal .",
    "+ k z no  i  defines  a  cyclic  quadrilateral  or  circle z 0 z  3  or  more  isosceles  triangles  sharing  the  same  base 0 z i @xmath208 delete  i delete  all  duplicates  of  i ,  keeping  only  first  instance .",
    "geometrycheckdistances , n [ alg : check4 ] y k take  all   4 4  submatrices  taken + along  the  diagonal . + k k s take  cayley - menger  determinants  of  each  4 4  submatrix  and  set + equal  to  zero + s this  generates  the  system  of  equations  used  to  solve  for  \\{d_2,d_3,",
    "... ,d_n}. + s \\{d_2,d_3, ... ,d_n } solution  for  s. + \\{d_2,d_3, ... ,d_n } ( 0 , ) y   y set  of  cayley - menger  determinants  of  all + 3 3  submatrices  of  y  taken  along  the  diagonal + 0  in  y by  [ thm : cayley ] ,  the  cayley - menger  determinant  of  a  3x3  matrix + will  indicate  if  the  three  points  lie  on  the  same  line .",
    "+          the  next  procedure  is  a  direct  application  of  theorem  [ thm : circles ] .",
    "+ k   j the  set  of  determinants  of  all  4x4  submatrices  taken  along  the  diagonal  of  k + 0  j ( x , y ) ( distances , n )      below we provide a list of adjacency matrices and distances for each configuration shown in figures [ fig : mcr ] and [ fig : allfive ] . these represent members from all possible isomorphism classes of configurations on four and five points",
    "we say @xmath209 for all configurations on five points .",
    "note that most of these solutions are irrational and many of them have no _ nice _ form ( we consider @xmath210 and @xmath211 to be _ nice _ forms ) . in these cases ,",
    "numerical values are provided up to four decimal places .",
    "contact the author for a list of mathematica outputs .",
    "( 1)&@xmath239 + ( 2)&@xmath240 + ( 3)&@xmath241 + ( 4)&@xmath242 + ( 5)&@xmath243 + ( 6)&@xmath244 + ( 7)&@xmath245 + ( 10)&@xmath246 + ( 9)&@xmath247 + ( 10)&@xmath248 + ( 11 ) & @xmath249 + ( 12)&@xmath250 + ( 13)&@xmath251 + ( 14)&@xmath252 + ( 15)&@xmath253 + ( 16)&@xmath254 + ( 17)&@xmath255 + ( 18)&@xmath256 + ( 19)&@xmath257 + ( 20)&@xmath258 + ( 21)&@xmath259 + ( 22)&@xmath260 + ( 23)&@xmath261 + ( 24)&@xmath262 + ( 25)&@xmath263 + ( 26)&@xmath264 + ( 27)&@xmath265 +          r. connelly , `` on generic global rigidity '' , _ applied geometry and discrete mathematics , the victor klee festschrift , dimacs series in discrete mathematics and theoretical computer science _ , vol . 4 ( p.gritzmann ad b. sturmfels , eds . ) , ams and acm , 1991 , 147155 .",
    "s. hsieh , c. hsu and l. hsu , `` efficient method to perform isomorphism testing of labelled graphs '' , _ computational science and its aplications iccsa 2006 : international conference , glasgow , uk , may 8 - 11 , 2006 , proceedings _ , part 5 ( m. gavrilova , et al , eds . ) , springer , 2006 , 422431 ."
  ],
  "abstract_text": [
    "<S> let @xmath0 points be in crescent configurations in @xmath1 if they lie in general position in @xmath1 and determine @xmath2 distinct distances , such that for every @xmath3 there is a distance that occurs exactly @xmath4 times . </S>",
    "<S> since erds conjecture in 1989 on the existence of @xmath5 sufficiently large such that no crescent configurations exist on @xmath5 or more points , he , pomerance , and palsti have given constructions for @xmath0 up to @xmath6 but nothing is yet known for @xmath7 . </S>",
    "<S> most recently , burt et . </S>",
    "<S> al . </S>",
    "<S> @xcite had proven that a crescent configuration on @xmath0 points exists in @xmath8 for @xmath9 . in this paper , we study the classification of these configurations on @xmath10 and @xmath11 points through graph isomorphism and rigidity . our techniques , which can be generalized to higher dimensions , offer a new viewpoint on the problem through the lens of distance geometry and provide a systematic way to construct crescent configurations . </S>"
  ]
}
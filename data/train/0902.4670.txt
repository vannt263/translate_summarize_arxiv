{
  "article_text": [
    "let @xmath0 be an ordinary elliptic curve defined over a finite field @xmath1 , and let @xmath6 denote the frobenius endomorphism of @xmath0 .",
    "we may view @xmath6 as an element of norm @xmath7 in the integer ring of some imaginary quadratic field @xmath8 : @xmath9 the trace of @xmath6 may be computed as @xmath10 . applying schoof s algorithm to count the points on @xmath11 ,",
    "this can be done in polynomial time @xcite .",
    "the fundamental discriminant @xmath12 and the integer @xmath13 are then obtained by factoring @xmath14 , which can be accomplished probabilistically in subexponential time @xcite .",
    "the endomorphism ring of @xmath0 is isomorphic to an order @xmath15 of @xmath16 .",
    "once @xmath13 and @xmath12 are known , there are only finitely many possibilities for @xmath15 , since @xmath17}\\subseteq{{\\mathcal{o}({e})}}\\subseteq\\mathcal o_k.\\ ] ] here @xmath18}$ ] denotes the order generated by @xmath6 , with discriminant @xmath19 , and @xmath20 is the maximal order of @xmath16 ( its ring of integers ) , with discriminant @xmath12 .",
    "the discriminant of @xmath15 is then of the form @xmath21 , where the conductor @xmath22 divides @xmath13 and uniquely determines @xmath15 .",
    "we wish to compute @xmath22 .",
    "recall that two elliptic curves over @xmath1 are isogenous if and only if they have the same trace ( * ? ? ?",
    "* ch .  13 , thm .  8.4 ) .",
    "thus the set @xmath23 of elliptic curves defined over @xmath1 with trace @xmath24 constitutes an isogeny class .",
    "each curve in @xmath23 has an endomorphism ring satisfying ( [ equation : endring ] ) , and therefore a conductor dividing @xmath13 .    in his seminal thesis",
    ", kohel describes the structure of the graph of isogenies defined on @xmath23 , and its relationship to the orders in @xmath25 .",
    "he applies this structure to obtain a deterministic algorithm to compute @xmath22 in time @xmath26 , assuming the generalized riemann hypothesis ( grh ) ( * ? ? ?",
    "24 ) .    here",
    "we present two new methods to compute @xmath22 that further exploit the relationship between the isogeny graph and ideal class groups . under heuristic assumptions ( including , but not limited to , the grh ) , we achieve subexponential running times .",
    "both methods yield _ las vegas _ algorithms : probabilistic algorithms whose output is unconditionally correct .",
    "we rely on heuristic assumptions only to bound their expected running times .    in practice",
    "we find the algorithms perform well , and are able to handle problem sizes that were previously intractable .",
    "we give computational examples over finite fields of cryptographic size where @xmath13 is large and not smooth ( the most difficult case ) . over a 200-bit field , for example , the total running time is typically under an hour ( see section  [ section : examples ] for details ) .    to express our complexity bounds",
    ", we adopt the usual notation @xmath27}\\left(x\\right)=\\exp\\left(\\left(c+o(1)\\right)\\left(\\log x\\right)^\\alpha\\left(\\log\\log x\\right)^{1-\\alpha}\\right).\\ ] ] under the heuristic assumptions detailed in section  [ section : complexity ] , we derive the bound @xmath28}(q)\\ ] ] for algorithm  1 ( corollary  [ cor - alg1 ] ) , and the bound @xmath29}(|d_{e}|)\\thickspace + \\thickspace { l\\left[1/3,c_f\\right]}(q)\\ ] ] for algorithm  2 ( proposition  [ prop - alg2 ] ) .",
    "the @xmath30}$ ] term reflects the heuristic complexity of factoring @xmath14 using the number field sieve @xcite .",
    "algorithm  2 is slower than algorithm  1 in general , but may be much faster when @xmath31 .    in certain cryptographic applications",
    "the discriminant @xmath4 is an important security parameter ( see @xcite for one example ) , and it may be necessary for a third party to independently verify its value .",
    "the algorithms we use to compute @xmath4 may additionally generate a short _ certificate _ to aid this verification .",
    "both certification and verification have heuristically subexponential running times , and one may extend the certification phase in order to reduce the verification time , as discussed in section  [ section : complexity ] . under the same heuristic assumptions used in our complexity bounds ,",
    "the size of the certificate is @xmath32 ( corollary  [ cor - cert ] ) .",
    "kohel s algorithm treats each large prime power @xmath33 dividing @xmath13 by computing the kernel of a certain _ smooth isogeny _ of degree @xmath34 .",
    "the prime factors of @xmath34 are small ( polynomial in @xmath35 ) , but @xmath34 itself is large ( exponential in @xmath35 ) , and this leads to an exponential running time ( see ( * ? ? ? * lem .",
    "we replace this computation with a walk in the isogeny graph using isogenies of low degree ( heuristically , subexponential in @xmath35 ) .",
    "this walk computes the cardinality of a certain _ smooth relation _ , and by performing similar computations in class groups of orders in @xmath20 we are able to determine the power of @xmath36 dividing @xmath22 ( via corollary [ cor - piff ] ) .",
    "we adapt an algorithm of mccurley @xcite to efficiently find smooth relations , achieving a heuristically subexponential running time .",
    "first , we present some necessary background .",
    "let us fix an ordinary elliptic curve @xmath0 defined over a finite field @xmath1 , with @xmath24 , @xmath12 , and @xmath13 as in ( [ equation : frob ] ) .",
    "we may verify that @xmath0 is ordinary by checking that @xmath24 is nonzero modulo the characteristic of @xmath1 ( * ? ? ?",
    "4.31 ) .",
    "recall that the @xmath37-invariant @xmath38 may be computed as a rational function of the coefficients of @xmath0 and , in particular , is an element of @xmath1 . over the algebraic closure of @xmath1 ,",
    "the @xmath37-invariant uniquely identifies @xmath0 up to isomorphism , but this is not true over @xmath1 .",
    "however , two ordinary elliptic curves with the same trace are isomorphic over @xmath1 if and only if they have the same @xmath37-invariant ( * ? ? ?",
    "thus we may explicitly represent the set @xmath23 as a subset of @xmath1 , namely , the @xmath37-invariants of all elliptic curves over @xmath1 with trace @xmath24 , and view each element of @xmath23 as a particular elliptic curve representing its isomorphism class .",
    "as noted above , each curve in @xmath23 has an associated @xmath22 dividing @xmath13 that identifies its endomorphism ring , and we may partition @xmath23 into subsets @xmath39 accordingly .",
    "we aim to distinguish the particular subset containing @xmath0 by identifying relations that hold in some @xmath39 but not others .",
    "our main tool is the action of the ideal class group @xmath40 of @xmath41 ( the order of @xmath16 with conductor @xmath22 ) on the set @xmath42 .",
    "here we rely on standard results from the theory of complex multiplication , and the deuring lifting theorem .",
    "[ theorem : action ] with @xmath7 , @xmath24 , @xmath13 , and @xmath12 as in @xmath43 , let @xmath22 be a divisor of @xmath13 and @xmath44 an ideal of @xmath41 with prime norm @xmath45 . then @xmath44 acts on the set @xmath39 via an isogeny of degree @xmath45 , and this defines a faithful group action by @xmath40 .    for a proof , see theorems  10.5 , 13.12 , and 13.14 in @xcite , or chapter  3 of @xcite . for additional background",
    ", we also recommend @xcite and ( * ? ? ?",
    "theorem  [ theorem : action ] implies that the cardinality of @xmath39 is a multiple of the class number @xmath46 , and in fact these values are equal @xcite . in general",
    ", the curves @xmath45-isogenous to @xmath0 need not belong to @xmath39 .",
    "however , when @xmath45 does not divide @xmath13 , we have the following result of kohel ( * ? ? ?",
    "23 ) :    [ top - volcano ] let @xmath45 be a prime not dividing @xmath13 .",
    "there are exactly @xmath47 isogenies of degree @xmath45 starting from @xmath0 , and they all lead to curves with endomorphism ring isomorphic to @xmath15 .    the notation @xmath48 is the kronecker symbol . note that @xmath49 , so we can compute it without knowing @xmath4 .",
    "we are primarily interested in the case @xmath50 , where the prime @xmath45 splits into distinct prime ideals of norm @xmath45 in @xmath15 , and these ideals lie in inverse ideal classes @xmath51 and @xmath52 in @xmath53 ( if @xmath45 splits into principal ideals , then @xmath54 )",
    ". by theorem  1 , the orbit of @xmath0 under the action of @xmath51 corresponds to a cycle of @xmath45-isogenies whose length is equal to the order of @xmath51 in @xmath53 .",
    "additional details on the structure of the isogeny graph can be found in @xcite and , in a more concise way , in @xcite .",
    "we implement class group computations using binary quadratic forms .",
    "for a negative discriminant @xmath55 , the ideals in @xmath56 correspond to primitive , positive - definite , binary quadratic forms @xmath57 ( commonly noted @xmath58 ) with discriminant @xmath59 .",
    "the integer @xmath60 corresponds to the norm of the ideal .",
    "ideal classes in @xmath61 are uniquely represented by reduced forms .",
    "as typically implemented , the group operation has complexity @xmath62 @xcite . , but we do not make use of it . ]    to navigate the isogeny graph , we rely on the classical modular polynomial @xmath63 , which parametrizes pairs of @xmath45-isogenous elliptic curves .",
    "this is a symmetric polynomial with integer coefficients .",
    "for a prime @xmath45 not dividing @xmath7 , two elliptic curves @xmath64 and @xmath65 defined over @xmath1 are connected by an isogeny of degree @xmath45 if and only if @xmath66 ( * ? ?",
    "the polynomial @xmath67 has size @xmath68 @xcite , and may be computed in time @xmath69 @xcite .",
    "when @xmath45 is small we use precomputed @xmath70 $ ] , but for larger @xmath45 we compute @xmath71 , that is , the integer polynomial @xmath67 reduced modulo the characteristic of @xmath1 .",
    "this can be accomplished in time @xmath72 and space @xmath73 using the crt method described in @xcite . in practice",
    "one may consider alternative modular polynomials that are sparser and have smaller coefficients than @xmath67 . to find the curves that are @xmath45-isogenous to @xmath0 , we compute the roots of the univariate polynomial @xmath74 in @xmath1 .",
    "we may restrict ourselves to primes @xmath75 with @xmath50 , so that @xmath76 has exactly two roots , by theorem  [ top - volcano ] .",
    "we find these roots by computing @xmath77 and solving the resulting quadratic , using an expected @xmath78 operations in @xmath1 ( this is the time to compute @xmath79 ) .",
    "given @xmath71 , we use @xmath80 operations in @xmath1 to construct @xmath81 . for @xmath82",
    "this dominates the time to find the roots of @xmath76 and bounds the cost of taking a single step in the @xmath45-isogeny graph .",
    "let us suppose that @xmath83 contains an ideal of prime norm @xmath75 , and has order @xmath84 .",
    "in this situation we say that the relation @xmath85 holds in @xmath53 .",
    "we can not actually compute @xmath86 in @xmath53 , since we do not yet know @xmath4 , but we may apply theorem  [ theorem : action ] to compute the action of either @xmath86 or @xmath87 on @xmath0 by walking a distance @xmath88 along the cycle of @xmath45-isogenies , starting from @xmath89 .    rl + 1 . & set @xmath90 .",
    "& let @xmath91 be one of the two roots of @xmath92 .",
    "& for @xmath93 from 1 to @xmath94 : + 4 . &",
    "let @xmath95 be the root of @xmath96 .",
    "+ 5 . & return @xmath97 .",
    "the roots of @xmath98 are typically distinct ( exceptions require @xmath99 , by ( * ? ? ?",
    "* thm .  2.2 ) ) , but the algorithm applies in any case .    the choice of @xmath91 in step  2 is arbitrary , it may correspond to the action of either @xmath51 or @xmath52 .",
    "nevertheless , since @xmath100 , we have @xmath101 in either case .",
    "a difficulty arises when we consider a relation that is not unary , say @xmath102 , where @xmath103 contains an ideal of prime norm @xmath104 with @xmath105 .",
    "starting from @xmath38 , we walk @xmath106 steps along the @xmath107-isogeny cycle , then walk @xmath108 steps along the @xmath109-isogeny cycle .",
    "we must make two arbitrary choices and may compute the action of @xmath110 , @xmath111 , @xmath112 or @xmath113 .",
    "the actions of these four elements are almost certainly not identical ; even if @xmath102 in @xmath53 , it is unlikely that @xmath111 will fix @xmath38 .",
    "to address this situation , we formally define a _ relation _ @xmath114 as a pair of vectors @xmath115 and @xmath116 , where each @xmath104 is prime , @xmath117 and @xmath118 , and each @xmath119 is a positive integer .",
    "when @xmath104 is very small ( e.g. 2 ) , see @xcite.[small - div - v ] ] the integer @xmath120 is the _ arity _ of the relation . given a discriminant @xmath121 with @xmath122 , choose ideal classes @xmath123 so that @xmath103 contains an ideal of norm @xmath104 .",
    "this ideal need not be the reduced representative of @xmath103 , and may be principal ( implying @xmath124 ) , this depends on @xmath55 .",
    "we now define @xmath125 as the _ cardinality _ of the relation @xmath114 in @xmath61 . when @xmath126 , we say @xmath114 _ holds _ in @xmath61 .",
    "the integer @xmath127 is independent of the choice of the @xmath103 .",
    "it has even parity , since if @xmath128 belongs to the set in ( [ equation : cardinality ] ) , so does @xmath129 .    to compute @xmath130 ,",
    "we enumerate the @xmath131 possible walks we may take in the isogeny graph , starting from @xmath38 , considering all possible sign vectors @xmath128 ( these walks typically form a tree in which each path from root to leaf has @xmath120 binary branch points ) . by the symmetry noted above ,",
    "we may fix @xmath132 .",
    "rl + 1 . & compute @xmath133 and let @xmath134 be the list @xmath135 .",
    "& for @xmath136 from 2 to @xmath120 : + 3 .",
    "& set @xmath137 and then set @xmath134 to the empty list .",
    "& for @xmath138 : + 5 . & set @xmath139 and let @xmath91 and @xmath140 be the two roots of @xmath141 .",
    "& for @xmath93 from 1 to @xmath142 : + 7 .",
    "& let @xmath95 be the root of @xmath143 .",
    "& let @xmath144 be the root of @xmath145 .",
    "& append @xmath146 and @xmath147 to @xmath134 .",
    "& return @xmath148 , where @xmath34 counts the occurrences of @xmath38 in @xmath134 .",
    "given @xmath71 , the complexity of algorithm countrelation is dominated by @xmath149 where @xmath150 is the time to take a single step in the @xmath45-isogeny graph , which for large @xmath45 is bounded by @xmath80 operations in @xmath1 , as noted above .",
    "our algorithms rely on _ smooth _ relations in which @xmath120 , @xmath104 , and @xmath119 are all rather small : in the first example of section  [ section : examples ] we have @xmath151 , @xmath152 , and @xmath153 . as a practical optimization",
    ", we order the couples @xmath154 to minimize ( [ equation : rel - cost ] ) , using an estimate of @xmath150 .",
    "computing @xmath127 in @xmath61 ( where @xmath55 is known ) is straightforward : one computes the set in ( [ equation : cardinality ] ) by evaluating products of powers in @xmath61 .",
    "a total of @xmath155 operations in the class group suffice ( independent of the @xmath104 ) .",
    "we now consider how we may distinguish class groups of orders in @xmath16 by computing the cardinality of suitable relations .",
    "we rely on the following lemma .",
    "[ lemma : rel - div ] suppose @xmath156 .",
    "then for every relation @xmath114 we have @xmath157    let @xmath44 be an @xmath158-ideal with norm prime to the conductor of @xmath159 . the map @xmath160 induces a natural morphism of class groups .",
    "it preserves norms ( see ( * ? ? ?",
    "7.20 ) for a proof in the case @xmath161 is fundamental , from which one easily derives the general case ) and therefore transports relations from @xmath162 to @xmath163 .",
    "[ cor - piff ] let @xmath33 be a prime power dividing @xmath13 , and let @xmath164 and @xmath165 , where @xmath166 .",
    "suppose @xmath167 for some relation @xmath114 , and let @xmath121 where @xmath122",
    ". then @xmath168 if and only if @xmath169 .",
    "provided we have a suitable relation @xmath114 for each prime - power @xmath33 dividing @xmath13 , we can apply the corollary to @xmath170 to determine the prime - power factorization of @xmath22 , and hence the endomorphism ring of @xmath0 .",
    "the computations of @xmath171 and @xmath172 are performed in the class groups @xmath162 and @xmath163 , but the computation of @xmath130 takes place in the isogeny graph via the countrelation algorithm .",
    "notice that we may replace @xmath13 in the corollary by any multiple of @xmath22 dividing @xmath13 .",
    "[ prop - term ] for all primes @xmath173 , there are infinitely many relations satisfying the assumptions of corollary  [ cor - piff ]",
    ".    consider unary relations with @xmath174 and @xmath175 , and denote them @xmath176 .",
    "the relation @xmath176 holds in @xmath61 precisely when @xmath45 splits into principal ideals in @xmath56 . for @xmath177 ,",
    "let @xmath178 be the set of primes @xmath45 such that @xmath179 holds in @xmath180 .",
    "we now show @xmath181 is infinite , referring to material from ( * ? ? ?",
    "the set @xmath178 is equal to the set of primes that split completely in the ring class field @xmath182 of @xmath183 , and recall that @xmath182 is a galois extension of @xmath184 ( * ? ? ?",
    "the chebotarev density theorem asserts that @xmath185 and @xmath186 are infinite , and @xmath181 is finite if and only if @xmath187 ( * ? ?",
    "* thm .  8.19 ) .",
    "but @xmath188 can not be contained in @xmath189 , for @xmath158 is not contained in @xmath190 .",
    "indeed , @xmath33 divides the conductor of @xmath190 but not that of @xmath158 , which implies that @xmath33 divides the conductor of @xmath189 but not that of @xmath188 ( see ( * ? ? ?",
    "9.209.23 ) ) .",
    "in practice , of course , there are many other relations satisfying the requirements of corollary  [ cor - piff ] .",
    "empirically , relations @xmath114 holding in @xmath162 satisfy @xmath191 with probability converging to @xmath192 as @xmath36 grows .",
    "we will not attempt to prove this statement , but as a heuristic assume that this probability is at least bounded above zero , and furthermore that this applies to relations that are smooth ( as defined in section  [ section : complexity ] ) .",
    "note that , independent of this assumption , the above proposition guarantees that our algorithms are always able to terminate .",
    "we now describe our first algorithm to compute @xmath22 , the conductor of the order @xmath15 isomorphic to @xmath5 .",
    "we rely on algorithm @xmath193 , described in section  [ section : findrel ] , to obtain relations to which corollary  [ cor - piff ] may be applied .    for small primes @xmath36 dividing @xmath13 , say all @xmath194 for some @xmath195 , we can efficiently determine the largest prime power @xmath33 dividing @xmath22 by isogeny climbing , as described in ( * ? ? ?",
    "4.2 ) and ( * ? ? ?",
    "this yields an isogenous curve @xmath196 for which the conductor of @xmath197 is @xmath198 , using @xmath199 operations in @xmath1 ( given @xmath200 ) .    for simplicity",
    ", the algorithm below assumes that @xmath13 is not divisible by the square of a prime larger than @xmath195 .",
    "the modification to handle large primes whose square divides @xmath13 is straightforward but unlikely to be needed in practice .",
    "& let schoof s algorithm compute the trace @xmath24 of @xmath0 , then determine @xmath12 , @xmath13 , + & and the prime factors of @xmath13 , by factoring @xmath201 .",
    "+ 2 . & select a bound @xmath195 and set @xmath202 .",
    "& for each prime @xmath194 dividing @xmath13 : + 4 .",
    "& determine the largest power of @xmath36 dividing @xmath22 by isogeny climbing , + & then set @xmath203 , remove all powers of @xmath36 from @xmath13 , and update @xmath22 .",
    "& for each prime @xmath204 that divides @xmath13 : + 6 . & set @xmath205 with @xmath206 , @xmath207 .",
    "+ 7 . & determine whether @xmath36 divides @xmath22 by checking if @xmath208 , + & then update @xmath22 appropriately .",
    "return @xmath22 .",
    "the correctness of algorithm  1 follows from corollary  [ cor - piff ] .",
    "its running time depends on @xmath195 and the complexity of findrelation . using @xmath209}(q)$ ]",
    ", we obtain in section  [ section : complexity ] ( corollary  [ cor - alg1 ] ) a heuristic bound of @xmath28}(q)\\ ] ] on the expected running time of algorithm  1 , using @xmath210}(q)$ ] space .",
    "note that the relations computed in algorithm  1 only depend on the frobenius trace @xmath24 of @xmath0 , not its endomorphism ring , hence they may be reused to compute the endomorphism ring of any curve in the same isogeny class .",
    "these relations also provide a means to subsequently verify the computation of @xmath22 , but for this purpose we may wish to specialize the relations to @xmath22 , a task we now consider .",
    "let us suppose that a particular value @xmath22 is claimed as the conductor of @xmath15 .",
    "this may arise in a situation where @xmath22 is actually known , either via algorithm  1 or from the construction of @xmath0 ( say , by the cm method ) , but may also occur when one wishes to test a provisional value of @xmath22 , as we will do in algorithm  2 .",
    "we first give an algorithm to construct a _ certificate _ that may be used to efficiently check whether a given curve with trace @xmath24 in fact has endomorphism ring @xmath15 with conductor @xmath22 ( equivalently , it allows one to test whether an element of @xmath23 lies in @xmath39 ) .",
    "the construction of this certificate depends only on @xmath22 , @xmath13 , and @xmath12 and does not require an elliptic curve as input .",
    "small prime factors of @xmath22 and @xmath13 may be removed by isogeny climbing prior to calling certify .",
    "& for each prime factor @xmath36 of @xmath211 : + 2 . & set @xmath212 with @xmath213 and @xmath207 .",
    "& for each prime factor @xmath36 of @xmath22 : + 4 . & set @xmath212 with @xmath214 , @xmath215 .",
    "+ 5 . & return @xmath216 .",
    "the relations computed in step  2 may verify that the actual value of @xmath22 divides the claimed value , whereas the relations computed in step  4 may verify that the claimed value of @xmath22 is not a proper divisor of @xmath22 , as shown by algorithm verify .",
    "& for each prime factor @xmath36 of @xmath211 , verify that @xmath217 .",
    "& for each prime factor @xmath36 of @xmath22 , verify that @xmath218 .",
    "+ 3 . & return * true * if all verifications succeed and * false * otherwise .",
    "in addition to the verification of @xmath22 above , one may also wish to verify that @xmath13 and @xmath12 are correct .",
    "this may be accomplished in polynomial time if the trace @xmath24 and the factorizations of @xmath13 and @xmath12 are included in the certificate .",
    "one may additionally wish to certify the primes in these factorizations @xcite , or the verifier may apply a polynomial - time primality test @xcite .",
    "assuming these values are correct , the conductor of @xmath15 is equal to @xmath22 if and only if @xmath219 returns * true*. this statement does not depend on any unproven hypotheses .",
    "the size of the certificate is unconditionally bounded by @xmath220 , and under heuristic assumptions we obtain an @xmath221 bound ( corollary  [ cor - cert ] ) . within this",
    "bound , certificates for primes dividing @xmath13 or @xmath12 can be included , as each certificate requires @xmath222 space and there are @xmath223 such primes .",
    "the expected running times of certify and verify depend on a smoothness parameter @xmath224 used by findrelation .",
    "this parameter may be chosen to balance the cost of certification and verification , as in algorithm  2 below , or one may reduce the verification time by increasing the certification time .",
    "see proposition  [ prop - verify ] and the discussion following for an analysis of this trade - off .",
    "we now present a second algorithm to compute @xmath22 , which may be much faster than algorithm  1 if @xmath22 is small compared to @xmath13 , and is in general only slightly slower .",
    "our basic strategy is to examine each of the divisors @xmath225 of @xmath13 in order , attempting to prove that @xmath226 is the conductor of @xmath15 , by constructing a certificate and verifying it .",
    "this only requires finding relations in class groups with discriminants whose absolute value is at most @xmath227 .",
    "typically @xmath13 has few divisors ( almost always @xmath228 @xcite ) , in which case this basic strategy is quite effective .",
    "however , in order to improve performance in the worst case , we apply isogeny climbing to effectively remove prime factors from @xmath13 as we go , thereby reducing the number of @xmath22 s we must consider . as above",
    ", we suppose @xmath13 is square - free for the sake of presentation .",
    "& let schoof s algorithm compute the trace @xmath24 of @xmath0 , then determine @xmath12 , @xmath13 , + & and the prime factors of @xmath13 by factoring @xmath229 .",
    "+ 2 . & set @xmath230 .",
    "+ 3 . & set @xmath231 .",
    "& for primes @xmath232 : + 5 . & test whether @xmath233 by isogeny climbing , then set @xmath203 and @xmath234 .",
    "& for divisors @xmath22 of @xmath13 less than @xmath235 : + 7 .",
    "& if @xmath236 returns * true * : + & return the product of @xmath22 and the primes determined in step  5 . + 8 . & set @xmath237 and go to step  3 .",
    "+    the variable @xmath238 is used to bound the complexity of isogeny climbing using a known lower bound for @xmath22 that increases as the algorithm proceeds .",
    "initially we have no information about @xmath22 so we use the cost of the factorization computed in step  1 to select @xmath238 .",
    "the running time of algorithm  2 is analyzed in section  [ section : complexity ] , where the bound @xmath29}(|d_{e}| ) + { l\\left[1/3,c_f\\right]}(q)\\ ] ] is obtained under suitable heuristic assumptions .",
    "the same assumptions yield an @xmath239}(|d_{e}|)\\log q$ ] space bound .",
    "given negative discriminants @xmath159 and @xmath161 , we seek a relation @xmath114 satisfying @xmath191 .",
    "we find such an @xmath114 by searching for a relation that holds in @xmath162 and then testing this inequality . as noted at the end of section  [ section : preliminaries ] , this test almost always succeeds , but if not we search for another relation .    to find relations that hold in @xmath162 , we adapt an algorithm of mccurley @xcite .",
    "fix a smoothness bound @xmath195 , and for each prime @xmath240 with @xmath241 , let @xmath242 denote the _ primeform _ with norm @xmath45 . by this",
    "we mean the binary quadratic form @xmath243 of discriminant @xmath159 with @xmath244 , which may be constructed via ( * ? ? ?",
    "we then generate random reduced forms by computing the product @xmath245 where the @xmath246 are suitably constrained ( and mostly zero ) . if the prime factors of @xmath60 are bounded by @xmath195 ,",
    "say @xmath247 , then we may decompose @xmath58 as @xmath248 where for nonzero @xmath249 , @xmath250 is defined by @xmath251 .",
    "recall that @xmath252 is an upper bound on the norm of a reduced imaginary quadratic form ( * ? ? ?",
    "* ex .  5.14 ) .",
    "provided that @xmath253 , the decompositions in ( [ equation : abc1 ] ) and ( [ equation : abc2 ] ) must be different , since @xmath254 .",
    "this yields a non - trivial relation with exponents @xmath255 .    in order to minimize the cost of computing @xmath130 ( via countrelation ) for the relations we obtain , in addition to bounding the primes @xmath45 , we must also bound the exponents @xmath256 , and especially the number of nonzero @xmath256 , which determines the arity @xmath120 of @xmath114 . to achieve this",
    "we require all but a constant number @xmath257 of the @xmath246 to be zero ( we use @xmath258 ) , and note that if we assume @xmath60 is a random @xmath195-smooth integer in @xmath259 $ ] , then we expect it to have approximately @xmath260 distinct prime factors . in the unlikely event that @xmath120",
    "significantly exceeds this expected value , we seek a different relation .",
    "having bounded @xmath120 , the complexity of countrelation then depends on the products @xmath261 appearing in ( [ equation : rel - cost ] ) . for large @xmath45",
    "we have @xmath262 operations in @xmath1 . to make the products @xmath261 approximately equal we may use the bound @xmath263 . in practice",
    "we use a bound @xmath264 that better reflects the cost of @xmath150 for moderate values of @xmath45 ( we typically use @xmath265 ) ; this has no impact on our asymptotic analysis .",
    "the canfield  erds ",
    "pomerance theorem ( * ? ? ?",
    "3.1 ) implies that if we sample uniformly random integers from the interval @xmath259 $ ] until we find one that is @xmath266}(n)$]-smooth , our expected sample size is @xmath267}(n)$ ] , where the implied constants can all be made explicit .",
    "this allows us to compute a lower bound @xmath268 on the number of random integers we must sample from @xmath259 $ ] in order to have a better than @xmath269 chance of finding one that is @xmath195-smooth .",
    "we initially set @xmath270}(n)$ ] , for a suitably chosen @xmath224 , and compute @xmath268 on the heuristic assumption that the norms of the forms we generate are about as likely to be @xmath195-smooth as random integers in the interval @xmath259 $ ] . in practice",
    "we find this to be the case , however , to account for the possibility that none of the elements generated according to our constraints have @xmath195-smooth norms ( or that none of the relations we find are suitable ) , we increase the smoothness bound by a constant factor @xmath271 slightly greater than 1 , if we fail to find a suitable relation after testing @xmath272 elements .",
    "rl + 1 . & set @xmath270}(n)$ ] , where @xmath252 .",
    "+ 2 . & compute primeforms @xmath242 for @xmath273 .",
    "+ 3 . & repeat @xmath272 times : + 4 . & pick random integers @xmath246 with @xmath274 such that at most @xmath257 + & of the @xmath246 are nonzero and @xmath275 .",
    "+ 5 . & compute the reduced form @xmath276 .",
    "& if @xmath60 is @xmath195-smooth : + 7 .",
    "& let @xmath114 be the relation with @xmath277 where @xmath247 , + & and let @xmath120 be the arity of @xmath114 .",
    "& if @xmath278 and @xmath191 , then return @xmath114 .",
    "+ 9 . & set @xmath279 and go to step  2 .    as a practical optimization",
    ", we may choose not to generate completely new values for @xmath246 every time step  4 is executed , instead changing just one bit in one of the nonzero @xmath246 .",
    "this allows the form @xmath58 to be computed in most cases with a single composition / reduction using a precomputed set of binary powers of the @xmath242 .    to implement step  6",
    "one may use the elliptic curve factorization method ( ecm ) to probabilistically identify @xmath195-smooth integers in time @xmath280}(b)={l\\left[1/4,2\\mu\\right]}(n)$ ] , which effectively makes the cost of smoothness testing negligible within the precision of our subexponential complexity bounds .",
    "a faster approach uses bernstein s algorithm , which identifies the smooth numbers in a given list in essentially linear time @xcite .",
    "this does not change our complexity bounds and for the sake of simplicity we use ecm in our analysis .    in practice",
    ", the bound @xmath195 is quite small ( under 1000 in both our examples ) , and very little time is spent on smoothness testing . in our implementation",
    "we used a combination of trial division and a restricted form of bernstein s algorithm .",
    "the complexity bounds derived below depend on the following heuristics :    1 .   * small primes . *",
    "we assume the grh . the effective chebotarev bounds of lagarias and odlyzko then imply that for all @xmath281 there are @xmath282 primes less than @xmath283 that split in @xmath25 , where the implied constants are all effectively computable ( * ? ? ?",
    "* random norms .",
    "* we assume that the norms of the reduced forms computed in step  4 of findrelation have approximately the distribution of random integers in @xmath259 $ ] . under this assumption , we apply the canfield  erds ",
    "pomerance theorem to estimate the probability of generating a form whose norm is @xmath195-smooth .",
    "* random relations . *",
    "if @xmath284 and @xmath285 are sufficiently large discriminants with @xmath286 , and @xmath114 is a random relation for which @xmath287 , with @xmath104 and @xmath119 bounded as in findrelation , then we assume that @xmath191 with probability bounded above zero",
    ". 4 .   * integer factorization .",
    "* we assume that ecm finds a prime factor @xmath36 of an integer @xmath34 in expected time @xmath280}(p)\\log^2{n}$ ] @xcite , and that the expected running time of the number field sieve is @xmath30}(n)$ ] @xcite .    in the propositions and corollaries that follow",
    ", we use the shorthand ( * h * ) to indicate that we are assuming heuristics  14 above .",
    "[ prop - findrel ] @xmath288 @xmath193 has expected running time @xmath289}(|d_1|)\\thickspace + \\thickspace { l\\left[1/2,0\\right]}(|d_1|)\\log^3|d_2|.\\ ] ] the output relation @xmath114 has norms @xmath104 bounded by @xmath290}(|d_1|)$ ] , exponents @xmath119 bounded by @xmath291}(|d_1|)$ ] , and arity @xmath292 .",
    "let @xmath270}(n)={l\\left[1/2,\\mu/\\sqrt{2}\\right]}(|d_1|)$ ] , where @xmath293 . by heuristic  1 , for sufficiently large @xmath195 there are @xmath294 primes @xmath295 with @xmath296 . for these @xmath45 , the value of @xmath297 may range up to @xmath298 , for any @xmath299 .",
    "thus there are more than @xmath300}$ ] distinct elements that may be generated in step  4 , and with high probability at least @xmath268 are .",
    "so heuristic  2 applies , and with probability greater than @xmath301 we generate at least one element with @xmath195-smooth norm each time step  3 is executed .    under heuristic  2",
    ", the expected number @xmath120 of nonzero exponents @xmath119 is at most @xmath302 since we expect a random @xmath195-smooth integer in @xmath259 $ ] to have @xmath303 distinct prime factors ( this may be proven with the random bisection model of @xcite ) .",
    "this , together with heuristic  3 , ensures that when step  8 is reached the algorithm terminates , with some constant probability greater than zero .",
    "thus we expect to reach step  9 just @xmath304 times , and the total number of forms @xmath58 generated by the algorithm during its execution is bounded by @xmath267}(n)$ ] .    for each form @xmath58 , the algorithm tests whether @xmath60 is @xmath195-smooth in step  6 . applying ecm ,",
    "under heuristic  4 we identify a @xmath195-smooth integer ( with high probability ) in time @xmath280}(b)={l\\left[1/4,\\sqrt{2\\mu}\\right]}(n)$ ] @xcite .",
    "this yields @xmath305}(n)={l\\left[1/2,1/(\\sqrt{8}\\mu)\\right]}(|d_1|),\\ ] ] as a bound on the expected time spent finding relations .    the bounds on @xmath120 , the @xmath104 , and the @xmath119 are immediate .",
    "we may bound the cost of computing @xmath306 , for @xmath307 , by @xmath308}(|d_1|)\\log^3|d_j|.\\ ] ] the proposition follows .",
    "[ cor - alg1 ] @xmath288 algorithm  1 has expected running time @xmath309}(q)$ ]",
    ".    we may compute @xmath24 in polynomial time with schoof s algorithm , and under heuristic  4 we factor @xmath201 in expected time @xmath30}(q)$ ] .",
    "we use @xmath209}(q)$ ] in algorithm  1 , and set @xmath310 when calling findrelation .",
    "the cost of isogeny climbing , the calls to findrelation , and the calls to countrelation to compute @xmath130 all have expected complexity @xmath309}(q)$ ] , including the cost of computing the required @xmath71 .",
    "only @xmath223 iterations are required in algorithm  1 ( one for each @xmath311 ) , which does not change the complexity bound .",
    "[ cor - cert ] @xmath288 let @xmath213 and @xmath312 .",
    "the expected running time of @xmath313 is within an @xmath314 factor of the expected complexity of @xmath193 .",
    "the output certificate @xmath315 has size @xmath316 .",
    "algorithm certify makes fewer than @xmath314 calls to with @xmath317 and @xmath318 .",
    "applying the bounds of proposition  [ prop - findrel ] for @xmath104 , @xmath119 , and @xmath120 , each relation has size @xmath319 .",
    "[ prop - verify ] @xmath288 given a certificate @xmath315 produced by algorithm certify with parameter @xmath224 and an elliptic curve @xmath11 , algorithm @xmath320 has expected running time @xmath321}(|u^2d_k|)\\log^{5/2}q.\\ ] ]    the expected time to compute @xmath71 is @xmath322 @xcite . by proposition  [ prop - findrel ] , each relation in the certificate contains @xmath323 distinct @xmath104 , each bounded by @xmath290}(|u^2d_k|)$ ] .",
    "there are at most @xmath223 relations in the certificate , yielding a total time of @xmath321}(|u^2d_k|)\\log^{5/2}{q},\\ ] ] to compute all the @xmath71 needed for verification .",
    "the total cost of all calls to countrelation may be bounded by @xmath324}(|u^2d_k|)\\log^{2+\\epsilon}{q},\\ ] ] using fast multiplication in @xmath1 , which is dominated by the bound above .    to balance the costs of verification and certification , one uses @xmath310 .",
    "the verification time may be reduced ( and the certification time increased ) by choosing a smaller @xmath224 .",
    "for example , with @xmath325 the verification time is @xmath326}(|u^2d_k|)$ ] and the certification time is @xmath327}(|u^2d_k|)$ ] , ignoring logarithmic factors in @xmath7 .",
    "[ prop - alg2 ] @xmath288 algorithm  2 has expected running time @xmath29}(|d_{e}| ) + { l\\left[1/3,c_f\\right]}(q).\\ ] ]    in step  1 we compute @xmath24 in polynomial time and factor @xmath328 in expected time @xmath30}(q)$ ] , by heuristic  4 .",
    "let @xmath310 in all the calls to certify , in order to balance the cost of verify .",
    "the cost of each certification / verification performed in step  7 is then bounded by @xmath309}(|d_{e}|)\\log^{5/2}{q}$ ] , according to proposition  [ prop - verify ] , since we never test a divisor of @xmath13 that is greater than the conductor @xmath22 of @xmath4 . in step  6 , @xmath13 can contain no prime factors less than @xmath329 .",
    "thus the number of divisors is bounded by @xmath330}(v)={l\\left[1/2+o(1),1\\right]}(|d_{e}|)\\text{.}\\ ] ] in the rightmost equality we have used @xmath331 to express the bound in terms of @xmath332 , noting that @xmath333 where @xmath334 and @xmath335 as @xmath336 . the cost of step  7 for all the divisors considered in a single execution of step  6 is bounded by @xmath337}(|d_{e}|)\\log^{5/2}{q}$ ] .",
    "the algorithm may repeat step  6 up to @xmath2 times , but the cost of each iteration dominates all prior ones , so we have bounded the total cost of step  7 .",
    "the cost of isogeny climbing in step  5 during the first iteration is bounded by @xmath338}(q)\\ ] ] ( for any @xmath339 ) , and thereafter can not exceed @xmath340}(v)\\log^3{q}={l\\left[1/2+o(1),1\\right]}(|d_{e}|)\\log^{2+\\epsilon}{q}.\\ ] ] here we have again applied ( [ equation - switch ] ) , and the choice of the constant 1 ( or any constant ) is justified by the fact that @xmath341 as @xmath336 .    to complete the proof",
    ", we note that if @xmath337}(|d_{e}|)\\log^{5/2}{q}$ ] exceeds @xmath30}(q)$ ] we may incorporate the @xmath342 factor into the @xmath343 term . otherwise , the complexity is @xmath30}(q)$ ] , and the proposition holds in either case .    in both algorithms  1 and 2 ,",
    "the space is dominated by the size of the polynomials @xmath71 . as noted in section  [ section : explicit ] , these can be computed in @xmath73 space @xcite . plugging in parameters from the complexity analysis above , and making the same heuristic assumptions , we obtain an @xmath210}(q)$ ] space bound for algorithm  1 , and an @xmath239}(|d_{e}|)\\log{q}$ ] space bound for algorithm  2 .",
    "the rough timings we give here were achieved by a simple implementation running on a single 2.4ghz intel q6600 core .",
    "the algorithm findrelation was implemented using the gnu c / c++ compiler @xcite and the gmp library @xcite , and for countrelation we used a pari / gp script @xcite .",
    "we did not attempt to maximize performance , our purpose was simply to demonstrate the practicality of the algorithms on some large inputs . in a more careful implementation , constant factors would be substantially improved and many steps could be parallelized .",
    "we consider the elliptic curve @xmath11 with weierstrass equation @xmath344 , where @xmath345 its trace @xmath346 is computed by the schoof  elkies  atkin algorithm in a few seconds and , factoring @xmath14 , it is nearly instantaneous to retrieve @xmath347 and @xmath348    let us apply algorithm  1 to compute the conductor @xmath22 of @xmath15 .",
    "first , we use isogeny climbing to handle small prime factors @xmath36 of @xmath13 , those for which @xmath349 can be computed in reasonable time ( or , more likely , have already been precomputed ) ; here , this means @xmath350 and @xmath351 .",
    "it takes roughly 20 seconds to compute @xmath352 and isogeny climbing itself takes less than 2 seconds .",
    "we find none of these primes divide @xmath22 ; hence @xmath353 and we may now assume @xmath354 .    for @xmath355 we set @xmath356 and @xmath357 as in corollary  [ cor - piff ] .",
    "to find a relation satisfying this corollary , we use algorithm @xmath193 with the bound @xmath358 . corollary  [ cor - alg1 ] uses @xmath209}(q)\\approx 1900 $ ] , but , taking into account constant factors in the complexity estimates , we find experimentally that @xmath358 better balances the expected running time of findrelation with that of computing @xmath130 .",
    "the iteration bound @xmath359 has been evaluated via @xmath360 with @xmath361 using table  1 of @xcite , computed by bernstein .",
    "after about 20 minutes , findrelation outputs the relation @xmath114 with @xmath362 for which @xmath363 and @xmath364 .",
    "note that , as suggested by footnote  [ small - div - v ] , we make use of @xmath365 even though it divides @xmath13 ( using the algorithm in ( * ? ? ?",
    "now , to evaluate @xmath130 using algorithm @xmath366 , we need to compute the required modular polynomials .",
    "we use precomputed @xmath67 for @xmath367 , and for @xmath368 apply the algorithm in @xcite ; @xmath369 takes 5 minutes , @xmath370 takes 3 minutes , and the others take less than a minute each .",
    "finally , @xmath371 is evaluated in 6.5 minutes . since @xmath208",
    ", we conclude from corollary  [ cor - piff ] that @xmath355 is a factor of @xmath22 .",
    "we now turn to @xmath372 and set @xmath373 and @xmath374 accordingly .",
    "the relation @xmath375 is found almost instantly by @xmath193 , and we have @xmath363 and @xmath364 . @xmath366 computes @xmath376 in 1.5 seconds , proving that @xmath377 ( since @xmath378 ) .",
    "all in all , we have found the conductor @xmath379 of the elliptic curve @xmath0 defined over a @xmath380-bit prime field in only slightly more than half an hour of computation .",
    "the sizes of the primes @xmath355 and @xmath372 represents nearly a worst - case ; if @xmath372 was 5 or 6 bits larger the remaining part of @xmath13 would be small enough that one could more efficiently use a combination of isogeny climbing and hilbert class polynomials to determine @xmath22 .",
    "we note that , in this example , we could have used the invariant @xmath381 ( or other more favorable invariants @xcite ) in place of @xmath37 , allowing us to use modular polynomials in place of @xmath67 that can be more quickly computed .",
    "doing so would let us increase the bound @xmath195 ( reducing the time to find relations ) , and lead to an overall improvement in the running time .",
    "consider now the elliptic curve @xmath382 defined over the @xmath383-bit prime field @xmath1 where @xmath384 as above , we compute its trace @xmath385 via the sea algorithm in about 10 seconds , and an easy factorization yields @xmath347 and @xmath386    let us run algorithm  2 to compute @xmath15 .",
    "we start with @xmath387 , and first remove the prime factors of @xmath13 less than @xmath388 . as in example  1 , the constant factors make this a slight underestimate , and we are happy to increase this bound to include both 2 and 127 , which we handle by isogeny climbing .",
    "we find that neither of these divide @xmath22 , and therefore @xmath353 , so we now assume that @xmath389 .",
    "we then reach step  6 and consider divisors @xmath22 of @xmath13 less than @xmath390 , namely @xmath355 , @xmath372 and @xmath391 . starting with @xmath392 , the certificate @xmath315 generated in step  7 by @xmath313 consists of @xmath393 and takes negligible time to compute .",
    "the call to @xmath320 takes one second and returns false , proving that @xmath394 .    turning to @xmath395 , @xmath313",
    "quickly outputs the certificate @xmath396 and @xmath320 returns false after 1.5 seconds of computation ; so @xmath397 .",
    "we next consider @xmath398 ; the certificate used is @xmath399 computing and verifying this certificate takes about a second , and in this case the verification succeeds , proving that @xmath398 .    the total running time is less than 15 seconds , most of which is spent point - counting . for comparison",
    ", it takes @xmath400 nearly five minutes to output a relation , followed by a twenty - minute computation to evaluate its cardinality , demonstrating the advantage of algorithm  2 over algorithm  1 in this example .",
    "the authors express their gratitude to pierrick gaudry , takakazu satoh , daniel j. bernstein and tanja lange for their careful reading and helpful comments on an early version of this paper ."
  ],
  "abstract_text": [
    "<S> we present two algorithms to compute the endomorphism ring of an ordinary elliptic curve @xmath0 defined over a finite field @xmath1 . under suitable heuristic assumptions , both have subexponential complexity . </S>",
    "<S> we bound the complexity of the first algorithm in terms of @xmath2 , while our bound for the second algorithm depends primarily on @xmath3 , where @xmath4 is the discriminant of the order isomorphic to @xmath5 . as a byproduct , </S>",
    "<S> our method yields a short certificate that may be used to verify that the endomorphism ring is as claimed . </S>"
  ]
}
{
  "article_text": [
    "we begin by introducing distance games and defining combinatorial games needed in the remainder of the paper , then give an introduction to computational complexity and explain our proof strategy . at the end of the section we will give an overview of the organization of the paper .",
    "distance games were introduced by huntemann and nowakowski @xcite .",
    "they are part of a larger class of combinatorial games called _ placement games _ studied in @xcite and @xcite .",
    "distance games are played on a graph ( board ) .",
    "note that for our purposes all pieces only occupy one vertex .",
    "the _ distance _ between two pieces @xmath3 and @xmath4 is given by the graph distance between the two vertices that @xmath3 and @xmath4 occupy .",
    "in our diagrams , we will use b ( blue ) for a left piece and r ( red ) for a right piece .",
    "the distance game graphdistance(@xmath5 ) is the combinatorial game in which    1 .",
    "the board is empty at the beginning of the game .",
    "2 .   two players , left and right , place pieces on empty vertices of the board so that : * a left piece and a right piece are not allowed to have distance @xmath6 if @xmath7 . *",
    "two left pieces or two right pieces are not allowed to have distance @xmath8 if @xmath9 .",
    "3 .   pieces may not be moved or removed once placed .",
    "the following are well - known combinatorial games of interest to us",
    ". they will be used in the reductions when considering the complexity of distance games .",
    "node - kayles is the impartial distance game graphdistance(@xmath10 ) .",
    "thus players play on a vertex which is not adjacent to any previously chosen one .",
    "bigraph - node - kayles is a partizan version of node - kayles played on a bipartite graph .",
    "the bipartition of vertices @xmath11 into @xmath12 and @xmath13 forces left to choose vertices from @xmath12 and right to choose vertices from @xmath13 .",
    "[ def : snortcol ] snort is the game graphdistance(@xmath14 ) , that is , adjacent vertices can not be coloured with different colours .",
    "col is the game graphdistance(@xmath15 ) , that is , adjacent vertices can not be coloured with the same colour .",
    "more information about node - kayles , snort , and col can be found in @xcite .",
    "computational complexity can be applied to combinatorial games to measure how hard it is to determine whether the next player has a winning strategy .",
    "for some games , such as nim @xcite , polynomial - time ( @xmath16 ) algorithms exist . for other games , such as chess ,",
    "the best algorithms require an exponential amount of time ( @xmath17 ) in the worst case @xcite .",
    "@xmath2 is the set of problems that can be solved using polynomial amount of storage with no restrictions on time .",
    "it is known that @xmath18 , and @xmath19 , but proper relationships from @xmath2 to both @xmath16 and @xmath17 are unknown @xcite .",
    "many decision problems are @xmath2-_hard _ , meaning they are at least as hard as the most difficult problems in @xmath2 .",
    "in other words , if decision problem @xmath20 is @xmath2-hard , then :    * currently , no known algorithm exists to solve @xmath20 in polynomial time , and * if a polynomial - time algorithm exists for @xmath20 , then _ every _ problem in @xmath2 has a polynomial - time solving algorithm ( @xmath21 ) @xcite .",
    "a decision problem is @xmath2-_complete _ if it is both @xmath2-hard and in @xmath2 .    determining the winnability of any distance game on graphs is at worst in @xmath2 since there are at most @xmath22 moves , where @xmath22 is the number of vertices in the graph .",
    "thus any @xmath2-hard distance game is also @xmath2-complete : it is among the hardest problems _ included in _ @xmath2 .",
    "a ruleset @xmath23 can be shown to be @xmath2-hard with the help of another ruleset , say @xmath24 , already known to be @xmath2-hard .",
    "@xmath23 is @xmath2-hard if a function @xmath25 exists where    * @xmath26 positions@xmath27 positions@xmath28 , * @xmath25 can be computed in polynomial time , and * @xmath25 preserves winnability ( e.g. for @xmath29 , left has a winning move going next on @xmath30 exactly when left has a winning move going next on @xmath31 ) @xcite .",
    "such a function @xmath25 is called a _ reduction _ ( from @xmath24 to @xmath23 ) .",
    "finding reductions from @xmath2-hard games to new games is common practice for showing the @xmath2-hardness of these new games .",
    "sometimes these reductions have a stronger property : each move from any position @xmath29 corresponds to exactly one move in @xmath30 ( i.e. the game trees have exactly the same shape ) . due to this injective homomorphism",
    ", we can refer to these reductions as _ play - for - play _ reductions .",
    "readers interested further in the application of computational complexity to combinatorial games should reference @xcite .      in",
    "what follows , we will describe each reduction as a transformation of the graph @xmath32 on which @xmath24 is played to a graph @xmath33 on which @xmath23 is played via the insertion of subgraphs called _ gadgets_. all reductions to be used will be play - for - play , as we will enforce the following two properties in all of our constructions :    * * vertex condition * : none of the vertices that we add to convert @xmath32 to @xmath33 can be playable .",
    "no vertices of the original graph @xmath32 will be deleted . *",
    "* edge condition * : none of the additional edges will result in any restrictions on the play on any of the vertices @xmath34 from the original graph @xmath32 .",
    "that is , for any @xmath34 , a blue / red piece can be played at @xmath35 under ruleset @xmath24 on @xmath32 exactly when it can be played on @xmath35 using ruleset @xmath23 on @xmath33 .",
    "we will use the fact that node - kayles , bigraph - node - kayles , snort , and col are @xmath2-hard @xcite to create reductions showing that the games graphdistance(@xmath5 ) are @xmath2-hard for many pairs @xmath0 and @xmath1 .",
    "we will derive results for the simplest case , namely @xmath36 in section 2 . in section 3",
    ", we introduce the gadgets used in the remaining reductions .",
    "we then consider the more general case @xmath37 with @xmath38 and @xmath39 . in the next section ,",
    "we study the case in which @xmath40 and @xmath0 or @xmath1 equals @xmath41 .",
    "finally , we look at the case @xmath42 with @xmath43 and @xmath44 .",
    "since this reduction requires that col is @xmath2-hard , a claim recently made in @xcite , but not yet peer - reviewed , we give an alternate reduction for a subset of this case , namely when @xmath45 .",
    "we conclude the paper with possible future work .",
    "[ prop : dsmall ] the games graphdistance(@xmath48 ) are @xmath2-hard for @xmath46 and @xmath47 .",
    "since bigraph - node - kayles is @xmath2-hard , we will construct a reduction from a bipartite graph @xmath49 on which bigraph - node - kayles is played to a graph @xmath33 on which graphdistance(@xmath48 ) is played .",
    "we first look at the reduction from @xmath32 to @xmath33 when @xmath50 , which is illustrated in [ fig : d12 ] .",
    "note that we do not show the edges connecting the sets @xmath12 and @xmath13 to better focus on the reduction which preserves @xmath32 as a subgraph .    ) ]    in bigraph - node - kayles , @xmath12 is restricted to only be playable by left and @xmath13 to only be playable by right .",
    "our goal is to create the graph @xmath33 via a play - by - play reduction so that playing graphdistance(@xmath5 ) on @xmath33 is equivalent to playing bigraph - node - kayles on @xmath32 .",
    "we describe the reduction as it relates to the vertices in @xmath12 .",
    "the first goal is to ensure that @xmath12 can not be played by right , hence we connect all vertices in @xmath12 to the terminal vertex of a path of length one , where the external vertex is coloured blue ( labeled b ) and the intermediate vertex @xmath51 is uncoloured . since the vertex labeled b is distance two from all vertices in @xmath12 , no vertex in @xmath12 can be coloured red , and neither can @xmath52 , as it is at distance one from b. we also need to ensure that @xmath52 can not be coloured blue . to do",
    "so we connect @xmath52 to a path on two vertices where the terminal vertex not connected to @xmath52 is coloured red ( labeled r ) .",
    "the intermediate vertex @xmath53 is unplayable by both players as it is distance two from b and hence can not be coloured red , and is adjacent to r and so can not be coloured blue . therefore the gadget consisting of these four vertices satisfies the vertex condition .",
    "we replicate this gadget on the right - hand side , switching the roles of r and b for @xmath13 .",
    "we now turn to the edge condition , checking whether the additional edges create restrictions on vertices @xmath54 for @xmath33 that do not exist for @xmath32 .",
    "note that @xmath52 now connects every pair of vertices in @xmath12 , but this does not create any new restrictions on these vertices because @xmath50 , so the edge condition is satisfied .",
    "we now turn to the case @xmath55 . the additional constraint from the set @xmath1",
    "allows us to simplify the reduction , as shown in [ fig : d12s1 ] .",
    "we again begin with a bipartite graph @xmath32 with bipartition @xmath12 and @xmath13 as described in the case @xmath50 .",
    "we connect all vertices from @xmath12 to a path of length one with an uncoloured connected terminal vertex ( labeled @xmath35 ) and an external vertex labeled b. then @xmath35 and all vertices in @xmath12 can not be coloured red as before .",
    "also , @xmath35 can not be coloured blue because it is distance one from the vertex labeled b. the gadget is replicated on the right - hand side of the bipartite graph with b replaced by r. this completes the reduction for @xmath47 as both the vertex and edge conditions are satisfied .    ) ]    now in both cases , let @xmath56 be the union of all inserted vertices , @xmath57 be the union of all inserted edges , and @xmath58 .",
    "playing graphdistance(@xmath5 ) on @xmath33 is now exactly the same as playing bigraph - node - kayles on @xmath32 .",
    "the only playable vertices are those from @xmath59 , and for all vertices @xmath60 that were played by one player in a previous turn , if @xmath61 , then @xmath62 may not be chosen in subsequent turns by the other player using either ruleset .",
    "for the remaining sets @xmath1 and @xmath0 to be considered in this paper , we will utilize a common construction for the various reductions .",
    "these reductions will not only modify the vertices of the graph @xmath32 as in the case @xmath63 , but the edges as well .",
    "as before , the concern is to make any vertex that is added into the graph unplayable by each of the two players in such a way that the vertices in the original graph @xmath32 from which we reduce are not affected .",
    "we will achieve this by creating a forbidden vertex gadget and a path gadget .",
    "[ lem : gadget ] if @xmath0 or @xmath1 equals the set @xmath64 for some @xmath65 , and the other is a subset , then we can create a _ forbidden vertex gadget _",
    "@xmath66 _ of size @xmath65 _ which creates a vertex @xmath35 such that @xmath35 is uncoloured , but neither player may choose to play at @xmath35 , and the playability of any vertex connected to @xmath35 is not affected by the vertices in the gadget .",
    "furthermore , all vertices in the gadget are either coloured , or uncoloured and unplayable .    , @xmath66 creates a forbidden vertex ( between @xmath67 and @xmath68 ) without affecting the playability of @xmath67 or @xmath68 ]    consider the gadget @xmath66 shown in [ fig : unplayablevertex ] , which is connected to vertices @xmath67 and @xmath68 .",
    "we now prove that any uncoloured vertex in the gadget is unplayable by either player .",
    "since the gadget is symmetric , we assume without loss of generality that @xmath70 . for any @xmath65",
    ", the paths from the vertices labeled r and b , respectively , to vertex @xmath35 are of length @xmath65 , so each of these can not be coloured blue and red , respectively .",
    "this means the vertices common to both paths can not be coloured with either red or blue , and in addition , any vertex connected to @xmath35 is not affected by the vertices labeled r and b as their distance is at least @xmath71 . for the upper portions of the two paths we now need to ensure that these vertices also can not be coloured with the other colour .",
    "when @xmath65 is even , the shortest path from r to b using the dashed edge has length @xmath72 , so each of those vertices is within distance @xmath65 of the r and b vertices and can not be coloured in either colour .",
    "when @xmath65 is odd , then the shortest path from r to b has length @xmath73 .",
    "overall , all the unlabeled vertices in @xmath66 can not be played by either player , as stated .",
    "note that the construction above allows us to insert subgraphs into the graph @xmath32 that consist of vertices that are either labeled or unlabeled but unplayable , and none of the labeled vertices affects the playability of any vertices in the original graph .",
    "we will use a path of an appropriate length made up of forbidden vertex gadgets in the various reductions , where the size of the forbidden vertex gadget is equal to the maximal element in the distance set that consists of consecutive integers .",
    "we refer to a path consisting of @xmath31 forbidden vertices @xmath66 as @xmath74 , as shown in [ fig : forbiddenpath ] .",
    "such a path will be used to replace an edge between two vertices of the original graph , as shown in [ fig : d1234nbipartiteedge ] .",
    "we will refer to this operation as _",
    "edge replacement_. note that inserting either one of these gadgets into the graph @xmath32 automatically satisfies the vertex condition of the play - for - play reduction by [ lem : gadget ] .    : a path of @xmath31 forbidden vertices of size @xmath65 with edges leaving either end ]     in the original graph @xmath32 for the reduction to graph @xmath33 for graphdistance(@xmath5 ) , where @xmath31 and @xmath65 depend on the particular reduction ]    we are now ready to prove that graphdistance(@xmath5 ) is @xmath2-hard for more general sets @xmath0 and @xmath1 .",
    "as in [ sec : dsmall ] , we will first consider the case @xmath46 .",
    "these distance games are generalizations of snort .",
    "[ th : ensnorthard ] ensnort@xmath78:=graphdistance(@xmath79 ) is @xmath2-hard .",
    "ensnort@xmath78 is a generalization of snort , which is @xmath2-hard @xcite , so we will use a reduction from snort to prove the result . let @xmath80 be any graph .",
    "we will construct a graph @xmath33 such that a position of snort played on @xmath32 maps to a position of ensnort@xmath78 played on @xmath33 .",
    "since colouring a vertex in ensnort@xmath78 affects vertices up to distance @xmath22 from the coloured vertex , we need to create a reduction that allows us to increase the distance between the vertices in @xmath32 in such a way that any vertex that is inserted is not playable by either player .",
    "this can be achieved by performing an appropriate edge replacement , namely replacing each edge in @xmath32 with a forbidden path @xmath81 .",
    "let @xmath56 be the union of all vertices in the respective forbidden path gadgets , @xmath57 be the union of all edges in the forbidden path gadgets along with the edges connecting them to vertices in @xmath11 , and @xmath82 .",
    "playing ensnort@xmath78 on @xmath33 is now exactly the same as playing snort on @xmath32 .",
    "the only playable vertices are those already in @xmath11 and for all vertices @xmath60 that were played by one player in a previous turn , if @xmath61 , then @xmath62 may not be chosen in subsequent turns by the other player using either ruleset , as the distance of @xmath60 and @xmath62 in @xmath33 is @xmath22 .",
    "we now consider more general sets @xmath1 , namely @xmath76 with @xmath83 .",
    "[ thm : ssmalld ] graphdistance(@xmath84 ) is @xmath2-hard when @xmath85 and @xmath76 .    the same reduction as in the case @xmath50 works because we only used properties of @xmath0 in the construction of the forbidden vertices @xmath86 and paths @xmath81 .",
    "as long as @xmath87 , colouring restrictions from the set @xmath1 do not impact any of the uncoloured vertices from @xmath11 in @xmath33 , as all vertices from @xmath11 are now at distance @xmath22 from any other vertex from @xmath11 .    note that if @xmath88 , then if a vertex @xmath60 is coloured in one colour , then the vertex @xmath62 such that @xmath89 would now be uncolourable in either colour , not just the opposite colour .",
    "this is why we need a separate reduction in this case , one where the original game played on @xmath32 has the feature that a vertex adjacent to a coloured vertex in @xmath11 can not be coloured in either colour .",
    "this suggests a reduction from node - kayles .",
    "in this section we consider distance games in which the maximum distance not playable by the same and opposite player are identical .",
    "graphdistance(@xmath5 ) is @xmath2-hard when either @xmath0 or @xmath1 equals @xmath90 and the other set is a subset of @xmath90 with @xmath92 .",
    "we reduce from node - kayles , which is @xmath2-hard @xcite .",
    "let @xmath80 be any graph .",
    "we will construct a graph @xmath33 such that a position of node - kayles played on @xmath32 maps to a position of graphdistance(@xmath5 ) played on @xmath33 .",
    "we start with the extreme case where @xmath93 . here",
    "all vertices at distances less than or equal to @xmath94 are unplayable by either player , so we replace each edge @xmath95 by the path gadget @xmath96 connected on one side to @xmath60 and on the other side to @xmath62 .",
    "now let @xmath56 be the union of all vertices in the inserted path gadgets , @xmath57 be the union of all edges in the added path gadgets along with the edges connecting them to vertices in @xmath11 , and @xmath97 .",
    "playing graphdistance(@xmath5 ) on @xmath33 is now exactly the same as playing node - kayles on @xmath32 .",
    "the only playable vertices are those from @xmath11 .",
    "also , for vertices @xmath60 that have been chosen in previous turns , if @xmath98 , then @xmath62 may not be chosen in subsequent turns using either ruleset . indeed , in graphdistance(@xmath5 ) , each such vertex @xmath62 has distance @xmath94 from any previously played vertex @xmath60 .    for the more general case where @xmath99 , the same construction works",
    "as any vertex inserted through the path gadget is unplayable as long as one of the two sets equals @xmath100 by [ lem : gadget ] .",
    "the conclusion follows as in the case @xmath101 since the only relevant distances for play are the maximal distances .",
    "any play restriction on @xmath33 that would arise from a distance @xmath102 in either @xmath0 or @xmath1 would be on one of the forbidden vertices , which are already unplayable .",
    "the final cases to be considered are those where the maximal unplayable distance for the same player is larger than the largest unplayable distance for the opposite player .",
    "this case is very similar to the one treated in [ sec : ssmallerd ] , with the roles of @xmath1 and @xmath0 interchanged . in [ sec : ssmallerd ] , we used a reduction from snort to ensnort@xmath78 .",
    "since the counterpart to snort is col ( see [ def : snortcol ] ) , we would like to reduce from col .",
    "a recent preprint @xcite asserts that col is @xmath2-hard .",
    "[ encolhard ] if col is @xmath2-hard , then encol@xmath104:=graphdistance(@xmath105 ) is @xmath2-hard .",
    "let @xmath106 be any graph on which we play col .",
    "create the graph @xmath33 by performing an edge replacement where the edge @xmath107 is replaced by the path gadget @xmath108 .",
    "if we let @xmath56 , @xmath57 , and @xmath33 be defined as before , then vertices @xmath60 and @xmath62 from @xmath32 are now at distance @xmath109 in @xmath33 , and playing col on @xmath32 is the same as playing encol@xmath104 on @xmath33 .    if col is @xmath2-hard , then graphdistance(@xmath110 ) is @xmath2-hard when @xmath111 and @xmath112",
    ".    follows as in [ encolhard ] as any impact of the set @xmath0 in @xmath33 is only on forbidden vertices , which are unplayable already .    since the result on col being @xmath2-hard",
    "has not yet undergone peer - review , we offer an alternative proof for some of the cases based on a reduction from bigraph - node - kayles which is reminiscent of the reduction in the case @xmath63 , bringing us full circle .",
    "[ prop : altproof ] graphdistance(@xmath5 ) is @xmath2-hard when @xmath115 , @xmath116 , and @xmath42 with @xmath117 .    in the proof , whenever we refer to graphdistance(@xmath5 ) , we assume that @xmath118 , @xmath116 , and @xmath42 with @xmath117 .",
    "we once more reduce from bigraph - node - kayles .",
    "let @xmath49 be a bipartite graph .",
    "we will construct a graph @xmath33 such that a position of bigraph - node - kayles played on @xmath32 maps to a position of the particular games graphdistance(@xmath5 ) played on @xmath33 .",
    "as in the reduction from col , we need to increase the distance between the vertices of @xmath32 . for this to work",
    ", we need to perform the edge replacement @xmath119 for each edge in @xmath32 as shown in [ fig : d1234n ] , which reflects the influences of both @xmath1 and @xmath0 .    )",
    "where @xmath118 , @xmath116 , and @xmath42 with @xmath117 ]    we need forbidden vertex gadgets of size @xmath109 as the set @xmath1 is the one that consists of consecutive integers , which is what is needed to make all the vertices unplayable ( see [ lem : gadget ] ) . on the other hand",
    ", we need to increase the distance between vertices in @xmath12 and @xmath13 to @xmath22 , which is why we use @xmath121 forbidden vertex gadgets in the path gadget .",
    "the requirement that @xmath122 ensures that we do not restrict play on a vertex @xmath123 that is at distance two from a vertex @xmath124 , and which is now at distance @xmath125 in @xmath33 ( see [ ex : nkcond ] ) .",
    "next , as in the case of @xmath63 in [ sec : dsmall ] , we need to add a subgraph for each vertex @xmath126 to ensure that left can only play on @xmath12 and right can only play on @xmath13 . to each vertex in @xmath12",
    ", we attach a path gadget @xmath108 , and then connect all the gadgets to a single terminal vertex coloured r. let s look at the effect of this reduction on the vertices in @xmath12 .",
    "since @xmath127 , the vertices from @xmath12 can not be coloured red .",
    "on the other hand , since @xmath128 , the vertices in @xmath12 can be coloured in blue , exactly what we need to ensure .",
    "we use the same reduction on the right side of the graph , except now the terminal vertex is labeled b. this creates a play - for - play reduction as both the vertex and edge conditions are satisfied . playing graphdistance(@xmath5 ) on @xmath129",
    "is exactly the same as playing bigraph - node - kayles on @xmath32 .",
    "the only playable vertices for left are those from @xmath12 and for right those from @xmath13 .",
    "also , for vertices @xmath60 that have been chosen in previous turns , if @xmath130 , then @xmath62 may not be chosen in subsequent turns using either ruleset .",
    "we now illustrate with an example why the condition @xmath122 is needed in the statement of [ prop : altproof ] .    [",
    "ex : nkcond ] let @xmath131 and @xmath132 , so @xmath133 and @xmath134 .",
    "suppose we have a bipartite graph with a subgraph consisting of vertices @xmath135 , and @xmath136 as shown in  [ fig : doesntwork ] .",
    "when @xmath131 and @xmath132 ]    the reduction described in [ prop : altproof ] requires that each edge of the bipartite graph be replaced by a single forbidden vertex gadget of size four , increasing the distance between vertices in @xmath12 and @xmath13 to two as required by @xmath0 .",
    "however , vertices @xmath60 and @xmath136 are only distance @xmath138 apart , and hence if left moves on @xmath60 it eliminates @xmath136 as an option .    therefore , if @xmath139 the reduction used in [ prop : altproof ] does not work .",
    "to summarize , we used various play - for - play reductions from known @xmath2-hard games to show that graphdistance(@xmath5 ) is @xmath2-hard when @xmath0 or @xmath1 is @xmath41 and the other is a subset .",
    "the games we were reducing from were in most cases the natural choices based on the properties of the distance sets @xmath0 and @xmath1 .",
    "when @xmath1 is larger than @xmath0 , we provided a proof for a subcase based on a known @xmath2-hard game , bigraph - node - kayles , while the more general case relies on the verification that col is @xmath2-hard .",
    "our study leads to a number of open questions . at the heart of the reductions",
    "was the forbidden vertex gadget . to obtain a play - for - play reduction required that the larger of the distance sets consists of consecutive integers .",
    "this leads to the following question :      further , the edge replacement operation we have used in our various reductions results in a planar graph @xmath33 when starting from a planar graph @xmath32 .",
    "thus if planar snort , planar col , or planar node - kayles are shown to be @xmath2-hard , then our constructions show that the corresponding planar graphdistance(@xmath5 ) games are also @xmath2-hard .",
    "thus we are interested in the following problem :      note that this is not an immediate result of our propositions , as a game on a more specialized ( potentially simpler ) graph may be easier to solve , and therefore might not be @xmath2-hard even though the game played on a general graph is @xmath2-hard .",
    "demaine and r.a .",
    "hearn ( 2009 ) playing games with algorithms : algorithmic combinatorial game theory . in : m.h .",
    "albert and r.j .",
    "nowakowski ( eds ) games of no chance 3 .",
    "mathematical sciences research institute publications , vol .",
    "56 , cambride university press , pp 356 .",
    "fraenkel and d.   lichtenstein ( 1981 ) computing a perfect strategy for @xmath140 chess requires time exponential in @xmath141 . in : automata , languages and programming ( akko , 1981 ) .",
    "lecture notes in comput .",
    "115 , springer , berlin - new york , pp 278293 .",
    "papadimitriou ( 1994 ) on the complexity of the parity argument and other inefficient proofs of existence .",
    "31st annual symposium on foundations of computer science ( focs)(st .",
    "louis , mo , 1990 ) .",
    "j. comput .",
    "system sci ."
  ],
  "abstract_text": [
    "<S> we study the computational complexity of distance games , a class of combinatorial games played on graphs . </S>",
    "<S> a move consists of colouring an uncoloured vertex subject to it not being at certain distances determined by two sets , @xmath0 and @xmath1 . </S>",
    "<S> @xmath0 is the set of forbidden distances for colouring vertices in different colors , while @xmath1 is the set of forbidden distances for the same colour . </S>",
    "<S> the last player to move wins . </S>",
    "<S> well - known examples of distance games are node - kayles , snort , and col , whose complexities were shown to be @xmath2-hard . </S>",
    "<S> we show that many more distance games are also @xmath2-hard . </S>"
  ]
}
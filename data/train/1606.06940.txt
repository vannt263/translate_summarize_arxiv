{
  "article_text": [
    "r21em    in this paper , we consider the problem of computing , for a given rectilinear angle sequence , a `` small '' rectilinear polygon that realizes the sequence .",
    "a _ rectilinear angle sequence _",
    "@xmath2 is a sequence of left ( @xmath3 ) turns and right ( @xmath4 ) turns , that is ,  @xmath5 , where @xmath6 is the _ length _ of  @xmath2 .",
    "as we consider only rectilinear angle sequences , we usually drop the term `` rectilinear . ''",
    "a polygon  @xmath7 _ realizes _ an angle sequence  @xmath2 if there is a counterclockwise ( _ ccw _ ) walk along the boundary of  @xmath7 such that the turns at the vertices of  @xmath7 , encountered during the walk , form the sequence @xmath2 .",
    "the turn at a vertex  @xmath8 of @xmath7 is a left or right turn if the interior angle at @xmath8 is @xmath9 ( @xmath8 is convex ) or , respectively , @xmath10 ( @xmath8 is reflex ) .    in order to measure the size of a polygon , we only consider polygons that lie on the integer grid .",
    "then , the _ area _ of a polygon  @xmath7 corresponds to the number of grid cells that lie in the interior of  @xmath7 .",
    "the _ bounding box _ of  @xmath7 is the smallest axis - parallel enclosing rectangle of  @xmath7 .",
    "the _ perimeter _ of  @xmath7 is the sum of the lengths of the edges of  @xmath7 .",
    "the task is , for a given angle sequence  @xmath2 , to find a polygon that realizes  @xmath2 and minimizes    ( the area of ) its bounding box ,    its area , or    its perimeter .",
    "figure  [ fig : example ] shows that , in general , the three criteria can not be minimized simultaneously .    obviously , the angle sequence of a polygon is unique ( up to rotation ) , but the number of polygons that realize a given angle sequence is unbounded .",
    "the formula for the angle sum of a polygon implies that , in any angle sequence ,  @xmath11 , where @xmath12 is the number of right turns , in other words , the number of right turns is exactly four less than the number of left turns .",
    "[ [ related - work . ] ] related work .",
    "+ + + + + + + + + + + + +    bae et al .",
    "@xcite considered , for a given angle sequence  @xmath2 , the polygon  @xmath13 that realizes  @xmath2 and minimizes its area .",
    "they studied the following question : given a number  @xmath6 , find an angle sequence  @xmath2 of length  @xmath6 such that the area of  @xmath13 is minimized ( and let @xmath14 be this minimum area ) , or maximized ( and let @xmath15 be this maximum area ) .",
    "they showed that    @xmath16 if @xmath17 , @xmath18 otherwise , and    @xmath19 for any @xmath20 .    the result for @xmath15",
    "tells us that any angle sequence @xmath2 of length @xmath6 can be realized by a polygon with area at most @xmath21 .",
    "several authors have explored the problem of realizing a turn sequence .",
    "culberson and rawlins  @xcite and hartley  @xcite described algorithms that , given a sequence of exterior angles summing to @xmath22 , construct a simple polygon realizing that angle sequence .",
    "culberson and rawlins algorithm , when constrained to  @xmath23 angles , produces polygons with no colinear edges , implying that any @xmath6-vertex polygon can be drawn with area approximately @xmath24 .",
    "however , as bae et al .",
    "@xcite showed , the bound is not tight .    in his phd thesis ,",
    "sack  @xcite introduced label sequences ( which are equivalent to turn sequences ) and , among others , developed a grammar for label sequences that can be realized as simple rectilinear polygons .",
    "vijayan and wigderson  @xcite considered the problem of efficiently embedding _ rectilinear graphs _ ,",
    "of which rectilinear polygons are a special case , using an edge labeling that is equivalent to a turn sequence in the case of paths and cycles .    in graph drawing ,",
    "the standard approach to drawing a graph of maximum degree  4 orthogonally ( that is , with rectilinear edges ) is the topology  shape  metrics approach of tamassia  @xcite :    compute a planar(ized ) embedding ;    compute an _ orthogonal representation _ , that is , an angle sequence for each edge and an angle for each vertex ;    _ compact _ the graph , that is , draw it inside a bounding box of minimum area .",
    "step  ( 3 ) has been shown to be np - complete by patrignani  @xcite .",
    "note that an orthogonal representation computed in step  ( 2 ) is essentially an angle sequence for each face of the planarized embedding , so our problem corresponds to step  ( 3 ) in the special case that the input graph is a simple cycle .",
    "another related work contains the reconstruction of a simple ( non - rectilinear ) polygon from partial geometric information .",
    "disser et al .  @xcite constructed a simple polygon in @xmath25 time from an ordered sequence of angles measured at the vertices visible from each vertex .",
    "the running time was improved to @xmath26 , which is the worst - case optimal  @xcite .",
    "biedl et al .",
    "@xcite considered polygon reconstruction from points ( instead of angles ) captured by laser scanning devices .",
    "[ [ our - contribution . ] ] our contribution .",
    "+ + + + + + + + + + + + + + + + +    first , we show that finding a minimum polygon that realizes a given angle sequence is np - hard for any of the three measures : bounding box area , polygon area , and polygon perimeter ; see section  [ sec : nph ] .",
    "this extends the result of patrignani  @xcite and settles an open question that he posed .",
    "we also give efficient algorithms for special types of angle sequences , namely @xmath1- and @xmath0-_monotone sequences _ , which are realized by @xmath1-monotone and @xmath0-monotone polygons , respectively .",
    "( for example , ` l``l``r``r``l``l``r``l``l``r``l``r``l``l``r``l``r``l``l``r ` is an @xmath0-monotone sequence , see figure  [ fig : example ] . )",
    "our algorithms minimize area ( section  [ sec : area - algo ] ) and perimeter ( section  [ sec : peri - algo ] ) .",
    "for an overview of our results , see table  [ tbl : summary ] .",
    ".summary of our results .",
    "[ cols=\"^,^,^,^\",options=\"header \" , ]",
    "in this section we show the np - hardness of our problem for all three objectives : for minimizing the perimeter of the polygon , the area of the polygon , and the size of the bounding box .",
    "we first consider the following special problem from whose np - hardness we then derive the three desired proofs .",
    "fitupperright : given an angle sequence  @xmath2 and positive integers  @xmath27 and  @xmath28 , is there a polygon realizing @xmath2 within an axis - parallel rectangle  @xmath29 of width  @xmath27 and height  @xmath28 such that the first vertex of  @xmath2 lies in the upper right corner of  @xmath29 ?",
    "fitupperright is np - hard .",
    "_   our proof is by reduction from 3-partition : given a multiset  @xmath30 of @xmath31 integers with  @xmath32 , is there a partition of  @xmath30 into @xmath33 subsets @xmath34 such that @xmath35 for each @xmath36 ? it is known that 3-partition is np - hard even if @xmath37 is polynomially bounded in  @xmath6 and , for every @xmath38 , we have @xmath39 , which implies that each of the subsets @xmath34 must contain exactly three elements  @xcite .",
    "for the idea of our reduction , see figure  [ fig : hardness ] . for an instance @xmath40 of 3-partition",
    ", we construct an lr - sequence  @xmath2 that can be drawn inside an @xmath41-box  @xmath29 if and only if @xmath30 is a yes - instance .",
    "the sequence  @xmath2 consists of a _ wall _ , and for each number  @xmath42 , a _ snail _ , which in turn consists of a _ connector _ and a _",
    "spiral_.    the wall is a box ( @xmath43 ) whose top right corner corresponds to the start of  @xmath2 .",
    "the connectors are attached to the left side of the wall by introducing two @xmath44-vertices .",
    "a connector is a thin @xmath0-monotone polygon going to the left that can change its @xmath45-position @xmath46 times .    in detail , the lr - sequence  @xmath2 is defined as follows where  @xmath47 is the number of windings of the spirals : @xmath48    r22em     we choose  @xmath27 and  @xmath28 such that the spirals have to be arranged in @xmath33 columns of three spirals each .",
    "note that for any order of the numbers in  @xmath30 , we can route the connectors in a planar way such that the triplets of spirals that we desire end up in the same column .",
    "additionally , in each column there must be enough space for the at most @xmath49 connectors that go from the wall to spirals further left ; see figure  [ fig : hardness ] .",
    "we set @xmath50 and  @xmath51 . if all spirals are tightly wound , their bounding boxes need total area  @xmath52 .",
    "the idea of our proof is to show that if a spiral is not tightly wound , we need too much space . the space that is not occupied by spirals is @xmath53 in any drawing inside  @xmath29 .    it is clear that our construction is polynomial . by construction , there is a polygon realizing  @xmath2 that fits into  @xmath29 if @xmath30 is a yes - instance of 3-partition .",
    "it remains to show that if @xmath2 fits into  @xmath29 , then @xmath30 is a yes - instance of 3-partition .",
    "fix any feasible drawing of  @xmath2 and a spiral  @xmath54 . since the first vertex of  @xmath2 has to lie in the upper right corner of  @xmath29 ,",
    "observe that the @xmath55th @xmath56 of  @xmath54 has to lie in the interior of the bounding box of the first four @xmath56s of  @xmath54 .",
    "inductively it follows that , for @xmath57 , the @xmath58th @xmath56 of  @xmath54 lies in the interior of the bounding box of the last four  @xmath56s of  @xmath54 .",
    "hence , the drawing of  @xmath59 lies in the bounding box of the last four @xmath56s of the @xmath60 sequence of @xmath54 . by repeating a similar argument for the @xmath44 vertices",
    ", we can observe that every @xmath61 edge in  @xmath54 is lying opposite to a longer @xmath62-edge such that the bounding box spanned by both edges is interiorly empty and completely contained in the polygon .",
    "thus , we can move the @xmath61 edge towards the @xmath62 edge and assume that the bounding box has width  @xmath63 . for the last @xmath64",
    "@xmath61 edges in  @xmath54 , we call the bounding box an _ arm_.    hence , any drawing of a spiral consists of a drawing of the ladder and @xmath64 arms around it .",
    "we group the arms into four groups ; top , bottom , left , right , depending to which side of the ladder they are lying .",
    "recall that each arm is represented by a pair of @xmath62 and @xmath61-edges .",
    "we order the arms in each group from the outside to the inside , that is , by the order of their @xmath62 edges in @xmath2 , and define the _ level _ of an arm as its position in this ordering .",
    "we say that _ level  @xmath36 is wound tightly _ if the distance of all arms of level  @xmath36 to the arms of level  @xmath65 is  @xmath63 .",
    "[ obs : levels ] if the first outer  @xmath36 levels are not wound tightly , then the spiral occupies @xmath66 more grid cells than in a tight winding .",
    "we consider only the length increase of the top arms .",
    "since the spiral is not wound tightly , the horizontal distance between two consecutive left arms of the first outer  @xmath36 levels is at least two , one more than in a tightly wound spiral . the same is true for the right arms .",
    "hence , the length of the level-@xmath36 top arm increases at least by  2 , that of the level-@xmath67 top arm at least by  4 , and that of the level-1 top arm at least by  @xmath68 ; see figure  [ fig : spiral - size ]",
    ". summing up the increases yields @xmath66 .",
    "r18em      now , consider any feasible drawing . recall that the space that is not occupied by spirals is @xmath53",
    "hence , it follows by observation  [ obs : levels ] that at most the first  @xmath69 levels of any spiral are not wound tightly .",
    "we simplify the drawing by removing the wall , the connectors and the first  @xmath70 levels of every spiral .",
    "we obtain a set of  @xmath49 disjoint rectangles , one for each snail . the rectangle for snail  @xmath36",
    "is the bounding box of the inner @xmath71 levels of the snail s spiral , namely , those that must be wound tightly .",
    "rectangle  @xmath36 has width  @xmath72 and height @xmath73 .",
    "note that  @xmath74 .",
    "if three rectangles share an @xmath0-coordinate , then the remaining height at this coordinate is at most @xmath75 hence , no four rectangles can be drawn at a common @xmath0-coordinate .",
    "further , if  @xmath33 rectangles share a @xmath45-coordinate , then the remaining width at this coordinate is @xmath76 ; hence , no @xmath77 rectangles can be drawn at a common @xmath45-coordinate .",
    "these two facts combined imply an assignment of the rectangles to three rows of  @xmath33 rectangles each . to see this , consider three rectangles lying above each other .",
    "then , since there is only @xmath78 free vertical space , any rectangle has to be intersected by at least one of the three horizontal lines at @xmath45-coordinates @xmath79 with @xmath80 .",
    "no rectangle can intersect two lines , otherwise at most two rectangles would fit vertically and the third rectangle could not be squeezed in anywhere else .",
    "analogously , we can assign the rectangles to one of the  @xmath33 columns by intersecting them with  @xmath33 vertical lines of distance  @xmath81 .",
    "this assignment of rectangles to lines tells us the solution for the given instance of 3-partition : for  @xmath82 , we put into the set  @xmath83 the numbers @xmath84 represented by the three rectangles in column  @xmath36 . to complete our proof , we claim that  @xmath85 .    in order to see the claim , note that the  @xmath70 removed levels of each spiral have to be wound completely around the corresponding rectangle .",
    "thus , they also intersect the vertical line that goes through the rectangles in column  @xmath36 .",
    "therefore , the height at this @xmath0-coordinate is at least @xmath86 . the height and , hence",
    ", this expression is upperbounded by  @xmath87 since we assumed that the drawing fits into  @xmath29 .",
    "this yields  @xmath88 .",
    "exploiting that the @xmath89 s are integers shows that our above claim holds .",
    "@xmath90    in order to show the np - hardness of our three objectives , we adjust the above proof by attaching a very long spiral ( with @xmath91 , say @xmath92 , windings ) to the wall such that it wraps around our construction above",
    ". let  @xmath93 be the resulting lr - sequence .",
    "we will provide an upper bound for the objective value of  @xmath93 that holds if and only if the corresponding lr - sequence  @xmath2 is a yes - instance of 3-partition .",
    "for this , we will use that any realization of @xmath2 that is a no - instance causes the very long spiral to stretch by at least one unit horizontally or vertically , which makes the value of the objective increase above the mentioned upper bound .    in more detail",
    ", we construct the angle sequence  @xmath93 as follows ( see figure  [ fig : long - spiral ] ) : we tightly draw a spiral around a rectangle of size @xmath94 with  @xmath91 windings . by adding the ladder @xmath95 to the innermost horizontal arm and the ladder @xmath96 to the innermost vertical arm of the spiral ,",
    "we ensure that in any tight drawing with the two ladders being in the inside , the spiral goes around a rectangle of size exactly  @xmath97 .",
    "further , we add the ladder @xmath98 to the outermost horizontal and the ladder @xmath99 to the outermost vertical arm of the spiral . finally , we add  @xmath2 to the spiral by using the appropriate one of the inner - most arms of the spiral as the wall of  @xmath2 .",
    "note that as long as  @xmath2 fits into a bounding box of size @xmath100 it does not stretch the spiral around it .",
    "hence , if and only if @xmath2 is a yes - instance , we can draw  @xmath2 inside the spiral without stretching the spiral .",
    "r12em     consider any one of the two objectives : minimizing the inner area and minimizing the perimeter .",
    "observe that in any drawing of @xmath2 that fits inside the  @xmath101-box , the value of the objective is bounded by @xmath102 .",
    "let  @xmath103 be the value of the objective of the spiral and its ladders when drawn tightly around a rectangle of size  @xmath104 .",
    "then @xmath105 is an upper bound of the value of the objective of  @xmath93 in the case that  @xmath2 is a yes - instance .",
    "now assume that  @xmath2 is a no - instance .",
    "if the spiral is not winding around  @xmath2 , that is , if the bounding box of the first three arms of the spiral ( starting with the arms with the attached @xmath106-ladders ) does not contain  @xmath2 , then the other arms of the spiral have to be drawn outside the bounding box of the two arms .",
    "hence , this increases the total length of the other arms by at least  @xmath91 , thus leading to a value of the objective greater than  @xmath107 .",
    "if the spiral is winding around  @xmath2 , then , given that  @xmath2 is a no - instance , we have to stretch the spiral as argued above . stretching the spiral by one unit in any direction ,",
    "say in the horizontal direction , causes all @xmath91 many horizontal arms to increase by at least one unit .",
    "hence , the value of the objective is at least @xmath107 .",
    "the case of minimizing the bounding box is simpler : let  @xmath108 be the size of the bounding box when the spiral and its ladders are drawn tightly around a rectangle of size @xmath97 .",
    "we claim that @xmath93 can be drawn inside an @xmath109-bounding box if and only if @xmath2 is a yes - instance .",
    "if  @xmath2 is not drawn inside the spiral , then the ladders  @xmath110 lie on the innermost arms of the spiral and the claim follows immediately .",
    "if  @xmath2 is drawn inside the spiral , we recall that  @xmath2 stretches the spiral ( and thus the bounding box of  @xmath93 ) if and only if it is a no - instance .",
    "this concludes the proof .",
    "in this section , we show how to compute , for a monotone angle sequence , a polygon of minimum area .",
    "we start with the simple @xmath1-monotone case and then consider the more general @xmath0-monotone case .",
    "an @xmath1-monotone polygon has four _ extreme edges _ ; its leftmost and rightmost vertical edge , and its topmost and bottommost horizontal edge .",
    "two consecutive edges are connected by a ( possible empty ) @xmath1-monotone chain that we will call a _ stair_. starting at the top extreme edge , we denote the four stairs in counterclockwise order @xmath111 , @xmath112 , @xmath113 , and @xmath114 ; see figure  [ fig : xymonexampleb ] .",
    "we say that an angle sequence consists of @xmath115 nonempty _ stair sequences _ if any @xmath1-monotone polygon that realizes it consists of @xmath115 nonempty stairs ; we also call it a",
    "_ @xmath115-stair sequence_. the extreme edges correspond to the exactly four @xmath62-sequences in an @xmath1-monotone angle sequence and are unique up to rotation .",
    "any @xmath1-monotone angle sequence is of the form  @xmath116 ^ 4 $ ] , where the single  @xmath56 describes the turn before an extreme edge and @xmath117 describes a stair sequence . w.l.o.g .",
    ", we assume that an @xmath1-monotone sequence always begins with  @xmath62 and that we always draw the first @xmath62 as the topmost edge ( the top extreme edge ) . then , we can use @xmath111 , @xmath112 , @xmath113 , @xmath114 also for the corresponding stair sequences , namely the first , second third and forth @xmath117 subsequence after the first @xmath62 in cyclic order .",
    "let @xmath93 be the concatenation of  @xmath111 , the top extreme edge , and @xmath114 ; let @xmath118 , @xmath37 , and  @xmath29 be defined analogously following figure  [ fig : xymonexampleb ] . for a chain  @xmath119 ,",
    "let the  _ @xmath120 _  @xmath121 be the number of reflex vertices on  @xmath119 .",
    "is highlighted .",
    "( a )  notation : the four stairs @xmath122 , @xmath123 , @xmath124 , and @xmath125of an @xmath1-monotone polygon .",
    "the sequences @xmath93 , @xmath29 , @xmath37 , and @xmath118 are unions of neighboring stairs .",
    "( b ) & ( c )  two possible optimum configurations of the polygon.,title=\"fig:\"]is highlighted .",
    "( a )  notation : the four stairs @xmath122 , @xmath123 , @xmath124 , and @xmath125of an @xmath1-monotone polygon .",
    "the sequences @xmath93 , @xmath29 , @xmath37 , and @xmath118 are unions of neighboring stairs .",
    "( b ) & ( c )  two possible optimum configurations of the polygon.,title=\"fig:\"]is highlighted .",
    "( a )  notation : the four stairs @xmath122 , @xmath123 , @xmath124 , and @xmath125of an @xmath1-monotone polygon .",
    "the sequences @xmath93 , @xmath29 , @xmath37 , and @xmath118 are unions of neighboring stairs .",
    "( b ) & ( c )  two possible optimum configurations of the polygon.,title=\"fig : \" ]    [ thm : xyarea ]    given an @xmath1-monotone angle sequence  @xmath2 of length  @xmath6 , we can find a polygon  @xmath7 that realizes  @xmath2 and minimizes its    bounding box or    area    in @xmath126 time , and in constant time we can find the optimum value of the objective if the @xmath120s of the stair sequences are given .",
    "part  ( i ) of theorem  [ thm : xyarea ] follows from the following observation : the bounding box of every polygon that realizes  @xmath2 has width at least @xmath127 and height at least @xmath128 . by drawing three stairs with edges of unit length",
    ", we can meet these lower bounds .    for part",
    "( ii ) , we first consider angle sequences with at most two nonempty stairs . here , the only non - trivial case is when the angle sequence consists of two opposite stair sequences , that is , @xmath111 and @xmath113 , or @xmath112 and @xmath114 .",
    "w.l.o.g . , consider the second case .",
    "[ lem : two - stairs ] let @xmath2 be an @xmath1-monotone angle sequence of length  @xmath6 consisting of two nonempty opposite stair sequences  @xmath112 and @xmath114 . we can find a minimum - area polygon that realizes  @xmath2 in @xmath126 time . if  @xmath129 and @xmath130 are given , we can compute the area of such a polygon in @xmath131 time .",
    "fix a minimum area polygon  @xmath7 that realizes @xmath2 .",
    "let @xmath132 and @xmath133 .",
    "assume ( by rotation if necessary ) that  @xmath134 .",
    "in the following , we consider the bottom and left extreme edge to be part of  @xmath112 and the top and right extreme edge to be part of  @xmath114 .",
    "since @xmath7 is of minimum area , we may assume that all horizontal segments of  @xmath112 are of unit length .",
    "otherwise , consider the leftmost horizontal segment @xmath135 of @xmath112 longer than @xmath63 .",
    "if any horizontal segment of @xmath114 above it is longer than @xmath63 , then we may contract both by one unit and decrease the area of @xmath7 without causing @xmath112 and @xmath114 to intersect ; see figure  [ fig : bl - unit-1 ] .",
    "if all such segments are of unit length then , since @xmath134 , some horizontal segment of @xmath114 must be longer than @xmath63 and have a unit - length horizontal segment of @xmath112 below it ; see figure  [ fig : bl - unit-2 ] .",
    "take the leftmost pair and contract both by one unit , decreasing the area of @xmath7 by at least @xmath63 but removing one reflex vertex from @xmath112 .",
    "add this reflex vertex back to @xmath112 by shifting the unit - length horizontal segments of @xmath112 between its last vertical segment of length at least @xmath136 before @xmath135 and the first unit - length piece of @xmath135 up by one unit ; see figure  [ fig : bl - unit-3 ] .",
    "this also decreases the area of @xmath7 and does not cause @xmath112 and @xmath114 to intersect .",
    "( note : such a vertical length segment must exist and no intersections are created because either @xmath114 consists of unit - length horizontal segments up to the @xmath0-coordinate of the right end of @xmath135 or such a segment has been created in the contraction step . )",
    "let @xmath137 denote the @xmath36-th horizontal segment in @xmath114 ( including the top extreme edge ) .",
    "the length  @xmath138 of @xmath137 is also the number of horizontal @xmath112-segments ( including the bottom extreme edge ) lying under @xmath137 .",
    "we have @xmath139 .",
    "let  @xmath140 denote the area under  @xmath137 in  @xmath7 .",
    "since the left extreme edge in @xmath7 has length at least @xmath63 , the area in @xmath7 under  @xmath141 is @xmath142 . for @xmath143 , @xmath144 .",
    "we can overcome the difference between @xmath145 and @xmath143 , by splitting  @xmath141 into @xmath146 and @xmath147 , such that @xmath148 and @xmath149 .",
    "let @xmath150 for all other @xmath36 .",
    "observe that now @xmath151 .",
    "thus , @xmath152 which is minimized if @xmath153 is minimal . by cauchy - schwarz",
    "we know that this is the case if all @xmath154 are equal to the arithmetic mean ; since we have to use integers , the convexity of the function tells us that all @xmath154 have to be as close to the arithmetic mean as possible , that is , @xmath155 .",
    "hence , @xmath156 where @xmath157 is the quotient and @xmath12 is the remainder when @xmath158 is divided by @xmath159 .",
    "this lower bound can be achieved provided  @xmath160 .",
    "if @xmath161 , one can achieve only @xmath162 , which is @xmath63 more than the bound , since the left extreme edge has length @xmath136 ( not @xmath63 ) if all horizontal edges are unit length .",
    "the proof of lemma  [ lem : two - stairs ] leads to the following observation .",
    "[ obs : two - stairs ] in any polygon @xmath7 of minimum area consisting of two nonempty opposite stairs  @xmath112 and  @xmath114 with  @xmath163 , @xmath112 consists of only unit - length segments and @xmath114 only of segments of lengths @xmath164 and  @xmath165 ( in any order ) .",
    "we now consider the case of four nonempty stairs .",
    "( the case of three nonempty stairs can be solved analogously . )",
    "an @xmath1-monotone polygon @xmath7 with four nonempty stairs @xmath111 , @xmath114 , @xmath112 , and @xmath113 is _ canonical _ if    [ xycanon : adj ] @xmath7 has two non - adjacent nonempty stairs , say @xmath111 and @xmath113 , such that the bounding box  @xmath166 of @xmath111 and its adjacent extreme edges and the bounding box @xmath167 of  @xmath113 and its adjacent extreme edges intersect in at most one point , and    [ xycanon : corner ] the bottom - right corner of  @xmath166 as well as the top - left corner of  @xmath167 coincides with an endpoint of  @xmath114 or  @xmath112 .",
    "[ lem : xycanonical ] for every 4-stair sequence  @xmath2 with @xmath168 , there exists a polygon of minimum area realizing  @xmath2 that is canonical .",
    "consider an optimum polygon realizing angle sequence  @xmath2 .",
    "assume it is not canonical .",
    "observe that all four extreme edges are of length  @xmath63 , otherwise the polygon is not optimum .",
    "first , suppose that the canonical property  [ xycanon : adj ] does not hold . then for any pair of two opposite stairs , the bounding boxes of their adjacent extreme edges intersect in more than one point .",
    "hence , the ( closed ) @xmath0-ranges of the horizontal extreme edges intersect and the ( closed ) @xmath45-ranges of the vertical extreme edges intersect . since the extreme edges have length  @xmath63 , and the bounding boxes intersect in more than one point , we even have that either the ( closed )  @xmath0-ranges of the top and bottom extreme edges are the same , or the ( closed ) @xmath45-ranges of the left and right extreme edges are the same",
    ". suppose ( by rotation if necessary ) it is the latter and also suppose ( by temporary vertical or horizontal reflection and reflecting it back afterwards ) that stair  @xmath114 has @xmath120 greater than  @xmath169 ( since @xmath170 this is possible ) .",
    "let  @xmath171 be the left endpoint of the bottom extreme edge and let  @xmath8 be the reflex vertex that precedes ( in ccw order ) the top extreme edge ; see figure  [ fig : make - canonical-1 ] .",
    "we shift the boundary of  @xmath7 that lies on the ccw walk from  @xmath171 to  @xmath8 down by two units , stretching the vertical edges adjacent to  @xmath171 and  @xmath8 .",
    "the new polygon  @xmath172 still realizes the angle sequence and its area is larger by two units than the area of  @xmath7 .",
    "however , now  @xmath166 and  @xmath167 are intersection - free .",
    "let  @xmath81 be the reflex vertex that follows ( in ccw order ) the right extreme edge and let  @xmath173 be the bottom endpoint of the left extreme edge ; see figure  [ fig : make - canonical-2 ] .",
    "we shift the boundary of  @xmath172 that lies on the ccw walk from  @xmath81 to  @xmath173 to the left by three units , stretching the horizontal edges adjacent to  @xmath81 and  @xmath173 .",
    "the new polygon still realizes the angle sequence and is still simple : the only crossings that can occur by this operation are between  @xmath123and  @xmath125 .",
    "the left extreme edge lies at most three rows above the right extreme edge  @xmath174 ; hence , any crossing must involve the vertical edge  @xmath175 of  @xmath123 in the row above  @xmath174 or the vertical edge  @xmath176 of  @xmath123two rows above  @xmath174 .",
    "since  @xmath177 , we have that ( after the shift ) @xmath178 since each vertical edge of  @xmath125has @xmath0-coordinate at most  @xmath179 , there can be no crossing ; see figure  [ fig : make - canonical-3 ] . however , now the area of the polygon decreased by three units ; a contradiction to the fact that  @xmath180 is optimum .",
    "hence , the canonical property  [ xycanon : adj ] has to hold .",
    "now , assume that there is a bounding box pair having at most one point in common , w.l.o.g .",
    "@xmath166 and @xmath167 .",
    "since the optimum polygon is not canonical , the canonical property  [ xycanon : corner ] has to be violated .",
    "hence , for at least one of the two bounding boxes , say  @xmath166 , neither an endpoint of  @xmath114 nor an endpoint of  @xmath112 lies on a corner of  @xmath166 , that is , their endpoints lie on two different edges of  @xmath166 , and the distance from their endpoints to the closest corner of  @xmath166 is at least  1 .",
    "then , for at least one of the two edges , it holds that the line going through the edge does not cross the interior of  @xmath167 . w.l.o.g . , this holds for the line  @xmath181 that goes through the horizontal edge of @xmath166 .",
    "then , we can also observe that  @xmath181 does not cross any vertical line segment of @xmath114 ; instead , there is a horizontal line segment of @xmath114 lying on  @xmath181 .    to see this ,",
    "assume the contrary .",
    "then , there exists a vertical line segment  @xmath8 of  @xmath114 that is cut by  @xmath181 ; see figure  [ fig : make - c2 - 1 ] .",
    "thus , the two endpoints of  @xmath8 lie at least one unit above and below @xmath181 , respectively . consider the horizontal line segment of  @xmath114 starting at the top endpoint of  @xmath8 .",
    "we can move the horizontal segment downwards and place it on  @xmath181 . by this ,",
    "the angle sequence does not change and the polygon remains simple as all line segments of  @xmath112 , the only segments that might cross  @xmath114 after his operation , lie below  @xmath181 by at least one unit .",
    "hence , by moving the horizontal edge downwards , we in fact shrink the polygon ; a contradiction to its optimality .",
    "thus ,  @xmath181 contains a horizontal line segment of  @xmath114 .",
    "now , we cut the polygon through  @xmath181 into two parts ; see figure  [ fig : make - c2 - 2 ] .",
    "then , we shift the upper part to the left until  @xmath112 intersects the bottom right corner of  @xmath166 .",
    "the resulting polygon realizes the same angle sequence as before and has the same area as before ; see figure  [ fig : make - c2 - 3 ] .",
    "however , now  @xmath112 intersects a corner of  @xmath166 .",
    "if the polygon is not yet canonical , then we repeat the procedure with @xmath167 and get a canonical optimum polygon .",
    "hence , the canonical property  [ xycanon : corner ] holds .",
    "consider the line segment of  @xmath114 and the line segment of  @xmath112 that connect to  @xmath166 in a canonical polygon .",
    "the two line segments are ( a ) both horizontal , ( b ) both vertical , or ( c ) perpendicular to each other . consequently , there is only a constant number of ways in which the stairs outside the two bounding boxes are connected to them .",
    "( the number of combinations is further limited as both case ( a ) and case ( b ) can appear only once . )",
    "consider a ( canonical ) optimum polygon .",
    "we cut the polygon along the edge of  @xmath166 to which  @xmath112 and  @xmath114 are connected .",
    "we also cut along the respective edge of  @xmath167 .",
    "we get three polygons .",
    "the polygons on the outside realize the 1-stair sequence defined by  @xmath111 and  @xmath113 ( including the extreme edges ) , respectively , whereas the middle polygon realizes the 2-stair sequence defined by the concatenation of  @xmath112 , @xmath114 , and the edge segments of  @xmath166 and  @xmath167 that connect them .",
    "this observation leads to the following algorithm : for @xmath182 , we find a solution in constant time by exhaustive search . for larger  @xmath183 , we guess the partition of the extreme edges whose bounding boxes do not intersect in the ( canonical ) optimum polygon that we want to compute . w.l.o.g . , we guessed  @xmath166 and  @xmath167 ( the other case is symmetric ) .",
    "then , we guess how  @xmath114 and  @xmath112 , the two stairs outside  @xmath166 and  @xmath167 , are connected to each of the two bounding boxes ( see ( a)(c ) ) .",
    "this gives us two 1-stair instances and a 2-stair instance .",
    "we solve the instances independently and then put the solutions together to form a solution to the whole instance . by lemma  [ lem : two - stairs ] and observation  [ obs : two - stairs ] ,",
    "we solve the middle instance such that the left extreme edge of our solution is of minimum length , and , if possible , also the top extreme edge .    in detail , we put them together as follows .",
    "let  @xmath184 denote our solution to the instance corresponding to  @xmath166 and let  @xmath185 denote our solution to the middle instance ; see figure  [ fig : xy - decomposition-1 ] .",
    "if we guessed case ( a ) for  @xmath166 , then we put  @xmath184 and  @xmath185 together along their corresponding vertical extreme edges .",
    "if the right extreme edge of  @xmath184 is too short , we make it sufficiently longer by lifting the top extreme edge of  @xmath184 up .",
    "case ( b ) works symmetrically .",
    "if we guessed ( c ) for  @xmath166 , note that either the left or top extreme edge of  @xmath185 has length at least  @xmath136 .",
    "we put  @xmath184 and  @xmath185 along this extreme edge and the corresponding extreme edge of  @xmath184 ; see figure  [ fig : xy - decomposition-2 ] .",
    "we repeat the same process with  @xmath185 and our solution  @xmath186 to the instance corresponding to  @xmath167 .",
    "however , we proceed differently if the following holds : ( a ) we guessed case ( a ) or ( b ) for  @xmath167 and the respective extreme edge of  @xmath186 is too short for the corresponding edge  @xmath187 of @xmath185 , ( b ) we guessed  ( c ) for  @xmath166 or the respective extreme edge of @xmath184 is longer by at least  @xmath136 than the corresponding extreme edge  @xmath188 of @xmath185 , and ( c ) @xmath189 . in this case , by observation  [ obs : two - stairs ] , we solve @xmath185 again such that @xmath187 is of minimum length",
    ". then we proceed as before .",
    "note that @xmath184 and @xmath185 remain feasibly connected .",
    "let @xmath190 . according to observation  [ obs : two - stairs ] , in @xmath185 , all horizontal segments in  @xmath112 are of unit length and all horizontal segments in  @xmath114 are of length  @xmath191 or @xmath192 .",
    "all in all , we get a canonical polygon which realizes the given angle sequence .",
    "it follows immediately that the polygon has minimum area if we did not prolong any extreme edges in cases  ( a ) or  ( b ) .",
    "now , assume that we had to prolong an extreme edge of  @xmath184 . w.l.o.g . , we prolonged the bottom extreme edge of  @xmath184 in case  ( b ) . instead of prolonging the edge",
    ", we could have cut the polygon horizontally through the top endpoint of the left extreme edge ( instead of through the bottom endpoint ) and solve the two resulting instances , a 1- and a 2-stair instance , independently ; see figure  [ fig : xy - decomposition-3 ] .",
    "observe that if we cut our combined solution in the same way , we get optimum solutions to those two instances .",
    "let us consider our solution  @xmath193 to the 2-stair instance .",
    "we increased a ( minimum - length ) top step of  @xmath114 by one and at the same time increased the number  @xmath158 of reflex vertices of @xmath112 by one . for  @xmath112 ( in  @xmath193 ) , all steps are still of unit length , and for @xmath114 ( in @xmath193 ) , only steps of lengths  @xmath194 and  @xmath195 appear .",
    "now , assume that we ( also ) prolonged an extreme edge of  @xmath186 . w.l.o.g . , we are in case  ( a ) .",
    "consider the situation after a possible recomputation of  @xmath185 .",
    "if the rightmost horizontal edge  @xmath181 on the top side of  @xmath185 is of minimum length , then we can apply the same argument as before .",
    "otherwise , we increase the length of any horizontal minimum - length edge on the top side of  @xmath185 by one and reduce the length of  @xmath181 by one ; by observation  [ obs : two - stairs ] , this remains a minimum - length solution .",
    "thus , we computed a polygon of minimum area .",
    "the running time is linear in @xmath6 since our algorithm computes only constantly many 1-stair and 2-stair instances which are themselves solvable in linear time .",
    "given the number of steps for the four stairs , we can even compute the minimum area in constant time since this is true for instances with two or less stairs .      for the @xmath0-monotone case",
    ", we first give an algorithm that minimizes the bounding box of the polygon , and then an algorithm that minimizes the area .",
    "an @xmath0-monotone polygon consists of two _ vertical extreme _",
    "edges , i.e. , the leftmost and the rightmost vertical edge , and at least two _ horizontal extreme _ edges , which are defined to be the horizontal edges of locally maximum or minimum height .",
    "the vertical extreme edges divide the polygon into an upper and a lower hull , each of which consists of  @xmath1-monotone chains that are connected by the horizontal extreme edges .",
    "we call a horizontal extreme edge of type  @xmath61 an _ inner extreme edge _ , and a horizontal extreme edge of type  @xmath62 an _ outer extreme edge _ ; see figure  [ fig : bbarea - canonical1 ] .",
    "similar to the @xmath1-monotone case , we consider a _",
    "stair _ to be an @xmath1-monotone chain between any two consecutive extreme edges ( outer and inner extreme edges as well as vertical extreme edges ) and we denote by _ stair sequence _ the corresponding angle subsequence  @xmath117 . w.l.o.g .",
    ", at least one inner extreme edge exists , otherwise the polygon is  @xmath1-monotone and we refer to section  [ subsec : xymonarea ] . given an @xmath0-monotone sequence , we always draw the first @xmath61-subsequence as the leftmost inner extreme edge of the lower hull . by this , the correspondence between the angle subsequences and the stairs and extreme edges is unique .    ) .",
    "note that the illustrating drawing is not optimal.,title=\"fig : \" ] ) .",
    "note that the illustrating drawing is not optimal.,title=\"fig : \" ] ) .",
    "note that the illustrating drawing is not optimal.,title=\"fig : \" ]    an @xmath0-monotone polygon is _ canonical _ if    [ xcan : outer ] all outer extreme edges are lying on the border of the bounding box ,    [ xcan : vert ] each vertical non - extreme edge that is not incident to an inner extreme edge has length  @xmath63 , and    [ xcan : hor ] each horizontal edge that is not an outer extreme edge has length  @xmath63 .",
    "the following lemma states that it suffices to find a canonical @xmath0-monotone polygon of minimum bounding box ; see figure  [ fig : bbarea - canonicals ] for an illustration .",
    "[ lem : transform ] any @xmath0-monotone polygon can be transformed into a canonical @xmath0-monotone polygon without increasing the area of its bounding box .",
    "let  @xmath7 be an @xmath0-monotone polygon .",
    "we transform it into a canonical polygon in two steps .",
    "first , we move all horizontal edges on the upper hull as far up as possible and all horizontal edges on the lower hull as far down as possible ; see figures  [ fig : bbarea - canonical1]. this establishes condition  [ xcan : outer ] .",
    "furthermore , assume that there is a vertical edge  @xmath196 on the upper hull with @xmath197 .",
    "if the ( unique ) horizontal edge  @xmath198 is not an inner extreme edge , then it can be moved upwards until @xmath199 , which contradicts the assumption that all horizontal edges on the upper hull are moved as far up as possible .",
    "this argument applies symmetrically to the edges on the lower hull .",
    "hence , condition  [ xcan : vert ] is established .",
    "second , we move all vertical edges on a stair as far as possible in the direction of the inner extreme edge bounding the stair , e.g. , if the stair lies on the upper hull and is directed downwards , then all vertical edges are moved as far right as possible ; see figures  [ fig : bbarea - canonical2]. this stretches the outer extreme edges while simultaneously contracting all other horizontal edges to length  1 , which satisfies condition  [ xcan : hor ] .",
    "note that in neither step the bounding box changed .",
    "since all conditions are satisfied , the resulting polygon is canonical .",
    "we observe that the length of the vertical extreme edges depends on the height of the bounding box , while the length of all other vertical edges is fixed by the angle sequence .",
    "thus , a canonical @xmath0-monotone polygon is fully described by the height of its bounding box and the length of its outer extreme edges .",
    "furthermore , the @xmath45-coordinate of each vertex depends solely on the height of the bounding box .",
    "we use a dynamic program that constructs a canonical polygon of minimum bounding box in time @xmath200 . for each possible height",
    "@xmath201 of the bounding box , the dynamic program populates a table that contains an entry for any pair of an extreme vertex  @xmath180 ( that is , an endpoint of an outer extreme edge ) and a horizontal edge  @xmath187 of the opposite hull .",
    "the value of the entry  @xmath202 $ ] is the minimum width  @xmath81 such that the part of the polygon left of @xmath180 can be drawn in a bounding box of height  @xmath201 and width  @xmath81 in such a way that the edge  @xmath187 is intersecting the interior of the grid column left of  @xmath180 .",
    "[ thm : xbbox ] given an @xmath0-monotone angle sequence  @xmath2 of length  @xmath6 , we can find a polygon  @xmath7 that realizes  @xmath2 and minimizes the area of its bounding box in @xmath200 time .    to prove the theorem , we present an algorithm that constructs a canonical polygon of minimum bounding box in time @xmath200 .",
    "the height of any minimum bounding box is at most  @xmath6 ; otherwise , as there are only  @xmath6 vertices , there is a @xmath45-coordinate on the grid that contains no vertex and can be `` removed '' . for any height",
    "@xmath201 of the @xmath6 possible heights of an optimum polygon , we run the following dynamic program in @xmath26 time .",
    "we call the left and right endpoint of an outer extreme edge the _ left extreme vertex _ and the _ right extreme vertex _",
    ", respectively .",
    "the dynamic program contains an entry for any pair of an extreme vertex  @xmath180 and a horizontal edge  @xmath187 of the opposite hull .",
    "consider the part of the polygon between @xmath180 and @xmath187 that includes the left vertical extreme edge , that is , the chain that goes from @xmath180 to @xmath187 over the left vertical extreme edge .",
    "the value of the entry  @xmath202 $ ] is the minimum width  @xmath81 of a bounding box of height  @xmath201 in which this part of the polygon can be drawn in such a way that edge  @xmath187 is intersecting the interior of the grid column left of  @xmath180 and such that  @xmath187 has the same @xmath45-coordinate as it has in a canonical drawing of the whole polygon in a bounding box of height  @xmath201 ; see figure  [ fig : bbarea - dp ] .",
    "we call  @xmath203 an _ extreme column pair_.     and @xmath204 with @xmath202=t[p',e']+w'=w$ ] . the part of the polygon left of  @xmath180 can be drawn in the bounding box of size @xmath205 . ]",
    "we compute  @xmath202 $ ] as follows .",
    "consider a drawing of the part of the polygon between  @xmath180 and  @xmath187 that includes the left vertical extreme edge in a bounding box of height  @xmath201 and minimum width .",
    "let  @xmath206 be the rightmost extreme vertex in this drawing to the left of  @xmath180 , let  @xmath204 be the corresponding extreme column pair , and let  @xmath207 be the horizontal distance between  @xmath180 and  @xmath206 ; see figure  [ fig : bbarea - dp ]",
    ".    we can find  @xmath204 and  @xmath207 from the angle sequence as follows .",
    "if  @xmath180 is a left extreme vertex , then , by condition  [ xcan : hor ] , the pair  @xmath204 and the distance  @xmath207 is fully determined .",
    "otherwise , if  @xmath180 is a right extreme vertex , then  @xmath206 is either the left extreme vertex incident to  @xmath180 , or  @xmath206 is the horizontally closest extreme vertex on the opposite hull ; we test both cases . again , by condition  [ xcan : hor ] , edge  @xmath208 and distance  @xmath207 is fully determined .",
    "when determining  @xmath204 and  @xmath207 , we also test , as we will describe in the next paragraph , whether we can canonically draw the part of the polygon between @xmath204 and @xmath203 in the given space constraints .",
    "if we can , then we call  @xmath204 a feasible pair for @xmath203 .",
    "we find a feasible pair  @xmath204 for  @xmath203 with the smallest value of @xmath209 + w'$ ] and set @xmath210 = t[p',e ' ] + w'~.\\ ] ] if all pairs for  @xmath203 are infeasible , we set  @xmath202=\\infty$ ] .",
    "first , we will argue that if there is such a canonical drawing , then it is unique .",
    "we assume that @xmath209<\\infty$ ] .",
    "we group each pair of stairs that share an inner extreme edge as a _",
    "double stair _ ; see figure  [ fig : bbarea - canonical3 ] .",
    "each remaining stair forms a double stair by itself .",
    "let @xmath211 denote the part of the upper hull between  @xmath204 and @xmath203 .",
    "given the choice of  @xmath206 , it does not contain any endpoint of an outer extreme edge in its interior .",
    "hence , there are only two cases .",
    "either  @xmath211 consists of a single horizontal line segment belonging to an outer extreme edge , or it is a subchain belonging to a double stair . in the first case , by condition  [ xcan : outer ]",
    ", we have to draw  @xmath211 on the top boundary of the bounding box .",
    "further , its left endpoint has @xmath0-coordinate equal to  @xmath209 $ ] and the length of the segment is @xmath207 .",
    "hence , the drawing is unique . in the second case , note that conditions  [ xcan : outer][xcan : hor ] determine the lengths and @xmath45-positions of all edges with exception of the lengths of the outer extreme edges .",
    "thus , given the @xmath0-position of any vertex of a double stair , there is only one canonical way to draw the double stair . in our case ,",
    "the value of @xmath209 $ ] is equal to the @xmath0-position of the leftmost vertex of  @xmath211 .",
    "hence , the drawing of  @xmath211 is unique . by the same arguments",
    ", we have to draw the part  @xmath212 of the lower hull between  @xmath204 and @xmath203 in a unique way .",
    "now , given the unique drawings of  @xmath211 and  @xmath212 , we check for every @xmath0-coordinate whether  @xmath211 is lying above  @xmath212 . if and only if this is the case , then the two drawings together form a feasible canonical drawing and @xmath204 is a feasible pair for  @xmath203 .    in the last step ,",
    "we compute the minimum width  @xmath81 of the bounding box assuming height  @xmath201 .",
    "consider an optimum canonical drawing of the whole polygon in a bounding box of height  @xmath201 .",
    "let @xmath213 be a rightmost ( right ) extreme vertex .",
    "note that for  @xmath213 there are only two candidates , one from the upper hull and one from the lower hull . since  @xmath213 is a rightmost extreme vertex ,",
    "all horizontal edges to the right of  @xmath213 ( on the upper and on the lower hull ) are segments of length  @xmath63 .",
    "thus , given  @xmath213 , we can compute the distance  @xmath214 between  @xmath213 and the right vertical extreme edge .",
    "let  @xmath215 be the  @xmath214th horizontal edge from the right on the hull opposite to  @xmath213 .",
    "observe that edge  @xmath215 is the edge that forms an extreme column pair with  @xmath213 .",
    "hence , the width of the polygon is @xmath216+r^*$ ] .",
    "we compute width  @xmath81 as follows .",
    "for each one of the two candidates for  @xmath213 , we determine @xmath214 and @xmath215",
    ". then we check whether the candidate is feasible . for this , recall that conditions  [ xcan : outer][xcan : hor ] determine the  @xmath45-positions of all edges . also recall that all horizontal edges to the right of  @xmath217 are of length  @xmath63 .",
    "hence , there is only one way to canonically draw the edges right to  @xmath217 .",
    "if the upper hull always stays above the lower hull , candidate  @xmath213 is feasible .",
    "thus , we get the width by @xmath218+r^*\\ } \\cup \\{\\infty\\}~.\\ ] ]    for every height  @xmath201 , we compute the minimum width  @xmath81 and find the bounding box of minimum area @xmath219 .",
    "it remains to show the running time of the algorithm .",
    "the table  @xmath93 consists of  @xmath26 entries . to find the value of an entry",
    "@xmath202 $ ] , we have to find the closest column pair  @xmath204 to the left , the distance  @xmath207 , and we have to test whether we can canonically draw the polygon between @xmath204 and @xmath203 .",
    "we now show that each of these steps is possible in  @xmath131 time by precomputing some values for each point .    1 .",
    "[ precomp : ycoord ] for each point , we store its @xmath45-coordinate . as observed above , the @xmath45-coordinate is fixed , and it can be computed in  @xmath126 time in total by traversing the stairs .",
    "[ precomp : next ] for each point  @xmath180 , we store the next extreme point  @xmath220 to the left on the same hull , as well as the distance  @xmath221 to it .",
    "these can be computed in  @xmath126 time by traversing the upper and the lower hull from left to right .",
    "[ precomp : array ] for each left extreme vertex  @xmath157 , we store an array that contains all horizontal edges between  @xmath157 and  @xmath222 ordered by their appearance on a walk from  @xmath157 to  @xmath222 on the same hull .",
    "we also store the index of the inner extreme edge in this array .",
    "these arrays can be computed in total  @xmath126 time by traversing the upper and the lower hull from right to left .",
    "the precomputation takes  @xmath126 time in total .",
    "given an extreme column pair  @xmath203 , let  @xmath223 be the left endpoint of  @xmath187 .",
    "we can use precomputation  [ precomp : next ] to find in  @xmath131 time the closest extreme vertex  @xmath206 to the left of  @xmath180 , since it is either  @xmath220 or  @xmath224 , as well as the distance  @xmath207 , which is either  @xmath221 or  @xmath225 . to test whether we can canonically draw the polygon between  @xmath204 and  @xmath203 , we make use of the fact that there is no outer extreme edge between them . hence , we only have to test whether a pair of opposite double stairs intersects . to this end",
    ", we observe that a pair of double stairs can only intersect if the inner extreme edge of the lower hull lies ( partially ) above the upper hull or the inner extreme edge of the upper hull lies ( partially ) below the lower hull . with the array precomputed in step  [ precomp : array ]",
    ", we can find the edge opposite of the inner extreme edges , and by precomputation  [ precomp : ycoord ] , each point ( and thus each edge ) knows its @xmath45-coordinate , which we only have to compare to find out whether an intersection exists .",
    "hence , we can compute each table entry in  @xmath131 times after a precomputation step that takes  @xmath126 time .    since we call the dynamic program  @xmath126 times  once for each candidate for the height of the bounding box ",
    "the algorithm takes  @xmath200 time in total .",
    "following lemma  [ lem : transform ] , this proves the theorem .    for the area minimization",
    ", we make two key observations .",
    "first , since the polygon is @xmath0-monotone , each grid column ( properly ) intersects either no or exactly two horizontal edges : one edge from the upper hull and one edge from the lower hull .",
    "second , a pair of horizontal edges share at most one column ; otherwise , the polygon could be drawn with less area by shortening both edges . with the same argument as for the bounding box ,",
    "the height of any minimum - area polygon is at most  @xmath6 .",
    "we use a dynamic program to solve the problem . to this end , we fill a three - dimensional table  @xmath93 as follows .",
    "let  @xmath187 be a horizontal edge on the upper hull , let  @xmath188 be a horizontal edge of the lower hull , and let  @xmath226 .",
    "then , the entry  @xmath227 $ ] specifies the minimum area required to draw the part of the polygon to the left of ( and including ) the unique common column of  @xmath187 and  @xmath188 under the condition that  @xmath187 and  @xmath188 share a column and have vertical distance  @xmath201 .",
    "let  @xmath228 be the horizontal edges on the upper hull from left to right and let  @xmath229 be the horizontal edges on the lower hull from left to right .",
    "we initialize the table with @xmath230=h$ ] for each @xmath226 . to compute any other entry  @xmath231 $ ] , we need to find the correct entry from the column left of the column shared by  @xmath232 and  @xmath233 .",
    "there are three possibilities : this column either intersects  @xmath234 and  @xmath235 , it intersects  @xmath232 and  @xmath235 , or it intersects  @xmath234 and  @xmath233 . for each of these possibilities ,",
    "we check which height can be realized if  @xmath232 and  @xmath233 have vertical distance  @xmath236 and search for the entry of minimum value .",
    "we set @xmath237=\\min_{h '' \\text { valid}}\\{t[e_{i-1},f_{j-1},h '' ] , t[e_i , f_{j-1},h '' ] , t[e_{i-1},f_j , h'']\\}+h'.\\ ] ] finally , we can find the optimum solution by finding  @xmath238\\}$ ] . since the table has  @xmath200 entries each of which we can compute in  @xmath126 time , the algorithm runs in  @xmath239 time .",
    "this proves the following theorem .",
    "[ thm : xbarea ] given an @xmath0-monotone angle sequence  @xmath2 of length  @xmath6 , we can find a minimum - area polygon that realizes  @xmath2 in @xmath239 time .",
    "in this section , we show how to compute a polygon of minimum perimeter for an @xmath1-monotone or @xmath0-monotone angle sequence @xmath2 of length @xmath6 .",
    "let @xmath7 be an @xmath0-monotone polygon realizing @xmath2 .",
    "let @xmath240 be the leftmost vertical edge and let @xmath241 be the rightmost vertical edge of @xmath7 . recall that @xmath7 consists of two @xmath0-monotone chains ; an upper chain @xmath93 and a lower chain @xmath37 connected by @xmath240 and @xmath241 . without loss of generality , we assume for the number of reflex vertices of  @xmath93 and  @xmath37 that @xmath242 .              we transform any minimum - perimeter polygon into a perimeter - canonical form without sacrificing its perimeter in two steps as follows .",
    "first , we shorten every _ long _ vertical edge @xmath243 with @xmath244 so that @xmath245 .",
    "this is always possible : for any long vertical edge @xmath246 , say @xmath247 , if its end vertices have turns @xmath248 in counterclockwise order , then we proceed as in figure  [ fig : mono - hori - edge-1 ] .",
    "we move the subchain @xmath249 from @xmath241 to @xmath187 upward by @xmath250 by shortening @xmath187 and simultaneously by stretching @xmath241 .",
    "this guarantees that @xmath251 decreases , instead @xmath252 increases by the same amount of @xmath250 , so the perimeter remains the same .",
    "we can also shorten any long vertical edge whose end vertices have turns @xmath253 in a symmetric way .",
    "second , we shorten every long horizontal edge @xmath247 with @xmath244 so that its length becomes one .",
    "suppose that  @xmath187 is the rightmost long horizontal edge @xmath187 in @xmath93 .",
    "since @xmath242 , there must be a long horizontal edge @xmath208 in @xmath37 .",
    "we shorten both @xmath187 and @xmath208 by one unit , and move two subchains @xmath254 and @xmath255 together with @xmath241 one unit left .",
    "this move may cause two vertical edges , @xmath256 and @xmath257 , to intersect ; see figure  [ fig : mono - hori - edge-2 ] .",
    "note that exactly one of both vertical edges did not move , say  @xmath258 , as otherwise there would be no intersection between them .",
    "this means  @xmath258 is to the left of @xmath208 , i.e. , @xmath259 .",
    "we also know that the @xmath0-distance between @xmath188 and @xmath258 prior to the move was one , otherwise they would not intersect . since @xmath188 and @xmath258 are of unit length , the lower end vertex of @xmath188 has the same @xmath45-coordinate as the upper end vertex of @xmath258 .",
    "to avoid the intersection , we first move the whole upper chain @xmath93 one unit upward by stretching @xmath241 and @xmath240 each by one unit , as in figure  [ fig : mono - hori - edge-3 ] .",
    "then we can move @xmath254 , @xmath255 , and  @xmath241 without causing any intersection .",
    "we lose two units by shortening @xmath187 and @xmath208 , and gain two units by stretching  @xmath241 and  @xmath240 , so the total perimeter is unchanged . we repeat this until @xmath245 .",
    "suppose that @xmath7 is a minimum - perimeter canonical polygon that realizes @xmath2 with @xmath242 , and @xmath260 denotes its perimeter . by conditions  [ pericanon : vert][pericanon : hor ] ,",
    "every edge in @xmath93 is of unit length , so the length of @xmath93 is @xmath261 .",
    "this implies the width of @xmath37 should be @xmath262 . by condition  [ pericanon : vert ] , the length of the vertical edges in @xmath37 is @xmath263 , so the total length of  @xmath37 is @xmath264 .",
    "thus we can observe the following property .",
    "the first three terms of @xmath260 in lemma  [ lem : peri - equation ] are constant , so we need to minimize the sum of the last two terms ,  @xmath266 and @xmath252 , to get a minimum perimeter . however , once one of them is fixed , the other is automatically determined by the fact that all vertical edges in @xmath93 and @xmath37 are unit segments .",
    "even more , minimizing one of them is equivalent to minimizing their sum , consequently minimizing the perimeter .",
    "we call the length of the left vertical extreme edge of a polygon the _ height _ of the polygon .",
    "let @xmath7 be a minimum - perimeter canonical @xmath1-monotone polygon that realizes an @xmath1-monotone angle sequence @xmath2 of length @xmath6 .",
    "as before , we assume that  @xmath267 . when @xmath268 , i.e. , the number  @xmath12 of reflex vertices is @xmath269 , a unit square @xmath7 achieves the minimum perimeter , so we assume here that @xmath270 .",
    "recall that the boundary of @xmath7 consists of four stairs , @xmath271 , and @xmath113 .",
    "let @xmath272 be a quadruple of the numbers of reflex vertices of @xmath271 , and @xmath113 , respectively .",
    "then @xmath273 , where @xmath274 for each  @xmath36 .",
    "again , we define @xmath118 as the chain consisting of @xmath111 , @xmath240 and @xmath112 and @xmath29 as the chain consisting of @xmath113 , @xmath241 and @xmath114 . in @xmath7 ,",
    "let @xmath275 and @xmath276 denote the widths of  @xmath93 and @xmath37 , respectively , and @xmath277 and @xmath278 the heights of @xmath118 and  @xmath29 , respectively .",
    "hence , the perimeter of  @xmath7 is  @xmath279 .",
    "note that @xmath280 and , by condition  [ pericanon : hor ] , @xmath281 .",
    "thus @xmath282 . similarly , @xmath283 , and , by condition  [ pericanon : vert ] , @xmath284 and @xmath285 .",
    "thus , if  @xmath286 , then @xmath287 , and , if  @xmath288 , then @xmath289 .",
    "further observe that  @xmath286 implies @xmath290 , and that  @xmath288 implies @xmath291 .",
    "hence , if @xmath286 or  @xmath288 , then  @xmath292 and then @xmath293    now , consider the remaining case when @xmath294 and @xmath295 . we will observe that this case can occur only if  @xmath272 is @xmath296 or  @xmath297 .",
    "we will also observe that then @xmath298 .",
    "hence , we get that  @xmath299 for case  @xmath296 , and @xmath300 for case  @xmath297 . for all other cases , equation  [ eq : per - when - height - zero ] holds .    to make these observations",
    ", we first apply the same contraction step as depicted in figure  [ fig : bbarea - canonical2 ] of lemma  [ lem : transform ] .",
    "that is , we contract all horizontal segments of  @xmath112 to length  @xmath63 by moving all their right endpoints as far as possible to the left , and we contract all horizontal segments of  @xmath113 to length  @xmath63 by moving all their left endpoints as far as possible to the right . by this , all edges of  @xmath37 except the bottom extreme edge have length  @xmath63 , and the perimeter does not change .",
    "next , note that @xmath93 and @xmath37 have vertical distance  @xmath63 to each other .",
    "otherwise we could move  @xmath37 at least one unit to the top by simultaneously shrinking @xmath240 and @xmath301 , and thus shrinking the perimeter of  @xmath7 , a contradiction to the minimality of  @xmath260 . as  @xmath93 consists only of unit segments ( conditions  [ pericanon : vert][pericanon : hor ] )",
    ", there is a vertex  @xmath180 in  @xmath93 having distance  @xmath63 to  @xmath37 .",
    "first assume that  @xmath180 belongs to @xmath114 .",
    "we choose the rightmost such @xmath180 .",
    "if  @xmath180 were a convex vertex , then it would be the top endpoint of  @xmath241 , and , hence , we would have @xmath288 ; a contradiction to @xmath295 .",
    "thus , @xmath180 is a reflex vertex and therefore an left endpoint of a horizontal edge  @xmath302 .",
    "hence , the right endpoint  @xmath206 of  @xmath302 is convex .",
    "let  @xmath187 be the edge in  @xmath37 below  @xmath302 , that is , the edge that crosses the same grid column as  @xmath302 .",
    "observe that the distance between  @xmath302 and  @xmath187 is at least  @xmath136 .",
    "if it were  @xmath63 , then the vertical edge  @xmath303 incident to  @xmath206 would connect to  @xmath187 ( recall that  @xmath206 is convex ) . hence ,  @xmath302 and @xmath187 would be incident to  @xmath304 , and again we would have @xmath288 ; a contradiction .",
    "thus , the distance between @xmath180 and  @xmath187 is at least  @xmath136 .",
    "let @xmath157 be the point of @xmath37 directly one unit below @xmath180 .",
    "then @xmath187 lies at least one unit below @xmath157 .",
    "hence ,  @xmath157 has to connect to  @xmath187 via an vertical edge , and , consequently , @xmath157 has to be a reflex vertex and belong to @xmath112 . by condition  [ pericanon : vert ]",
    ", the vertical edge connecting @xmath157 and @xmath187 has length  @xmath63 , hence , the distance between @xmath302 and @xmath187 is exactly  @xmath136 .",
    "but now , either the bottom endpoint  @xmath305 of @xmath303 has distance  @xmath63 to @xmath37 , or @xmath305 lies on  @xmath37 , that is , @xmath306 .",
    "the former case contradicts our assumption that @xmath180 is the rightmost vertex of  @xmath93 having distance  @xmath63 to  @xmath37 .",
    "thus , the latter case holds and @xmath302 and  @xmath187 are incident to  @xmath241 .",
    "hence , @xmath307 ,  @xmath187 is the bottom extreme edge and has length @xmath245 , and @xmath113 is empty , that is , @xmath308 .",
    "thus , all horizontal edges in  @xmath37 have unit length .",
    "this property allows us to use the same argument as above to show that @xmath309 and  @xmath310 .",
    "given  @xmath311 , we get  @xmath312 .",
    "given an @xmath1-monotone angle sequence @xmath2 of length @xmath6 , we can find a polygon @xmath7 that realizes @xmath2 and minimizes its perimeter in @xmath126 time .",
    "furthermore , if the lengths of the stair sequences @xmath313 are given as above , then @xmath260 can be expressed as : @xmath314      a minimum height polygon @xmath7 that realizes @xmath2 can be computed in @xmath26 time using dynamic programming .",
    "recall that a perimeter - canonical polygon of minimum height is a polygon of minimum perimeter .    from right to left ,",
    "let @xmath315 be the horizontal edges in @xmath93 and @xmath316 , @xmath317 , @xmath318 @xmath319 be the horizontal edges in  @xmath37 .",
    "recall that @xmath242 . for  @xmath320 ,",
    "let @xmath321 $ ] be the minimum height of the subpolygon formed with the first @xmath36 horizontal edges from @xmath93 and the first @xmath58 horizontal edges from @xmath37 .",
    "note that the leftmost vertical edge of the subpolygon whose minimum height is stored in @xmath322 $ ] joins the left endpoints of @xmath323 and @xmath324 . to compute @xmath322 $ ] ,",
    "we attach edges @xmath323 and  @xmath324 to the upper and lower chains of the subpolygon constructed so far .",
    "since @xmath323 has unit length , either @xmath323 and @xmath324 are attached to the subpolygon with height of @xmath325 $ ] or just @xmath323 is attached to the subpolygon with height of @xmath326 $ ] . as in figure",
    "[ fig : dp - polygon - perimeter ] , there are four cases  for the first attachment and two cases  for the second attachment , according to the turns formed at the attachments .",
    "let @xmath171 and @xmath8 be the left end vertex of @xmath327 and the right end vertex of @xmath323 , respectively .",
    "let @xmath328 and @xmath329 be the right end vertex of @xmath330 and the left end vertex of @xmath331 , respectively .",
    "notice that both vertical edges @xmath196 and @xmath332 have unit length . as an example , let us explain how to calculate @xmath321 $ ] when @xmath333 and @xmath334 , which corresponds to figures  [ fig : dp - polygon - perimeter-2 ] and .",
    "we set @xmath321 $ ]  to the minimum height of the two possible attachments and .",
    "consider the height for  . if @xmath335>1 $ ] , then @xmath323 and @xmath324 are attached to the subpolygon as illustrated in figure  [ fig : dp - polygon - perimeter-2 ] . since edges @xmath196 and @xmath332 have unit length , @xmath322 = a[i-1,j-1]$ ] .",
    "in the other case , if @xmath335 = 1 $ ] , then we can move the upper chain of the subpolygon one unit upward without intersection so that @xmath323 and @xmath324 are safely attached to the subpolygon with @xmath322 = 2 $ ] .",
    "note that this is the smallest possible value for @xmath322 $ ] given @xmath336 and @xmath334 . thus @xmath322",
    "= \\max(a[i-1,j-1 ] , 2)$ ] .",
    "the height for   should be at least @xmath63 , so it is expressed as @xmath337 - 1 , 1)$ ] .",
    "therefore , @xmath338 = \\min(\\max(a[i-1,j-1],2),\\max(a[i-1,j]-1,1)).\\ ] ] for the other turns at @xmath339 and @xmath340 , we can similarly define the equations as follows : @xmath338=\\left\\ {     \\begin{array}{ll }    \\text{undefined } &   \\text{if $ i = 0 $ , $ j = 0 $ or $ i < j$}\\\\    1 &   \\text{if $ i=1 $ , $ j = 1$}\\\\      a[i-1,j]+1 &   \\text{if $ uv={\\texttt{r}}{\\texttt{l}}$ , $ j = 1$}\\\\      \\max(a[i-1,j]-1 , 1 ) &   \\text{if $ uv={\\texttt{l}}{\\texttt{r}}$ , $ j = 1$}\\\\      \\min(\\max ( a[i-1,j-1 ] , 2 ) , a[i-1,j]+1 ) & \\text{if $ uv={\\texttt{r}}{\\texttt{l}}$ , $ u'v'={\\texttt{r}}{\\texttt{l}}$ } \\\\      \\min(\\max ( a[i-1,j-1 ] ,",
    "2 ) , \\max(a[i-1,j]-1,1 ) ) &   \\text{if $ uv={\\texttt{l}}{\\texttt{r}}$ , $ u'v'={\\texttt{l}}{\\texttt{r}}$ } \\\\      \\min(a[i-1,j-1]+2 , a[i-1,j]+1 ) & \\text{if $ uv={\\texttt{r}}{\\texttt{l}}$ , $ u'v'={\\texttt{l}}{\\texttt{r}}$ } \\\\",
    "\\min(\\max ( a[i-1,j-1]-2 , 1),\\\\     \\phantom{\\min(}\\!\\max(a[i-1,j]-1,1 ) ) &   \\text{if $ uv={\\texttt{l}}{\\texttt{r}}$ , $ u'v'={\\texttt{r}}{\\texttt{l}}$ }    \\end{array } \\right.\\ ] ]          s.  w. bae , y.  okamoto , and c.  shin .",
    "area bounds of rectilinear polygons realized by angle sequences . in k.  chao , t.  hsu , and d.  lee , editors , _ proc .",
    "algorithms comput .",
    "( isaac12 ) _ , volume 7676 of _ lncs _ , pages 629638 .",
    "springer , 2012 ."
  ],
  "abstract_text": [
    "<S> a _ rectilinear _ polygon is a polygon whose edges are axis - aligned . walking counterclockwise on the boundary of such a polygon yields a sequence of left turns and right turns . </S>",
    "<S> the number of left turns always equals the number of right turns plus  4 . </S>",
    "<S> it is known that any such sequence can be realized by a rectilinear polygon . in this paper , we consider the problem of finding realizations that minimize the perimeter or the area of the polygon or the area of the bounding box of the polygon . </S>",
    "<S> we show that all three problems are np - hard in general . </S>",
    "<S> then we consider the special cases of @xmath0-monotone and @xmath1-monotone rectilinear polygons . </S>",
    "<S> for these , we can optimize the three objectives efficiently . </S>"
  ]
}
{
  "article_text": [
    "in the late 1980s the idea of using _ argumentation _ to model nonmonotonic reasoning emerged ( see @xcite as well as @xcite for excellent overviews ) . nowadays argumentation theory is a vibrant subfield of artificial intelligence , covering aspects of knowledge representation , multi - agent systems , and also philosophical questions . among other approaches which have been proposed for capturing representative patterns of inference in argumentation theory @xcite , dung",
    "s abstract argumentation frameworks ( afs ) @xcite play an important role within this research area . at the heart of dung s",
    "approach lie the so - called _ argumentation semantics _",
    "@xcite for an excellent overview ) . given an af @xmath0 , which is set - theoretically just a directed graph encoding arguments and attacks between them , a certain argumentation semantics @xmath1 returns acceptable sets of arguments @xmath2 , so - called @xmath1-_extensions_. each of these sets represents a reasonable position w.r.t .",
    "@xmath0 and @xmath1 .    over the last 20 years a series of abstract argumentation semantics were introduced .",
    "the motivations of these semantics range from the desired treatment of specific examples to fulfilling a number of abstract principles .",
    "the comparison via abstract criteria of the different semantics available is a topic which emerged quite recently in the community ( @xcite can be seen as the first paper in this line ) .",
    "our work takes a further step towards a comprehensive understanding of argumentation semantics .",
    "in particular , we study the following question : do we really need the entire af @xmath0 to compute a certain argumentation semantics @xmath1 ?",
    "in other words , is it possible to unambiguously determine acceptable sets w.r.t .",
    "@xmath1 , given only partial information of the underlying framework @xmath0 . in order to solve this problem let us start with the following reflections :    1 .   as a matter of fact , one basic requirement of almost all existing semantics",
    "is that of conflict - freeness , i.e. arguments within a reasonable position are not allowed to attack each other .",
    "consequently , knowledge about conflict - free sets is an essential part for computing semantics .",
    "2 .   the second step is to ask the following : which information on top on conflict - free sets has to be added ?",
    "imagine the set of conflict - free sets given by @xmath3 .",
    "consequently , there has to be at least one attack between @xmath4 and @xmath5 .",
    "unfortunately , this information is not sufficient to compute any standard semantics ( except naive extensions , which are defined as @xmath6-maximal conflict - free sets ) since we know nothing precise about the neighborhood of @xmath4 and @xmath5 .",
    "the following three afs possess exactly the mentioned conflict - free sets , but differ with respect to other + ( a1 ) at ( -0.6,0 ) [ circle , thick , draw , label = left:@xmath7@xmath4 ; ( b1 ) at ( 0.4,0 ) [ circle , thick , draw]@xmath5 ; + ( a2 ) at ( 2,0 ) [ circle , thick , draw , label = left:@xmath8 @xmath4 ; ( b2 ) at ( 3.0,0 ) [ circle , thick , draw ] @xmath5 ; + ( a3 ) at ( 4.6,0 ) [ circle , thick , draw , label = left:@xmath9 @xmath4 ; ( b3 ) at ( 5.6,0 ) [ circle , thick , draw ] @xmath5 ; + ( a1 ) to [ thick , bend right ] ( b1 ) ; ( b2 ) to [ thick , bend right ] ( a2 ) ; ( a3 ) to [ thick , bend right ] ( b3 ) ; ( b3 ) to [ thick , bend right ] ( a3 ) ; 3 .",
    "the final step is to try to minimize the added information .",
    "that is , which kind of knowledge about the neighborhood is somehow dispensable in the light of computation ?",
    "clearly , this will depend on the considered semantics .",
    "for instance , in case of stage semantics @xcite , which requests conflict - free sets of maximal range , we do not need any information about incoming attacks .",
    "this information can not be omitted in case of admissible - based semantics since incoming attacks require counterattacks .",
    "the above considerations motivate the introduction of so - called verification classes specifying a certain amount of information . in a first step ,",
    "we study the relation of these classes to each other . we therefore introduce the notion of being _ more informative _ capturing the intuition that a certain class can reproduce the information of an other .",
    "we present a hierarchy w.r.t .  this ordering .",
    "the hierarchy contains 15 different verification classes only .",
    "this is due to the fact that many syntactically different classes collapse to the same amount of information .",
    "we then formally define the essential property of a semantics @xmath1 being _ verifiable _ w.r.t .  a certain verification class .",
    "we present a general theorem stating that any _ rational _ semantics is exactly verifiable w.r.t .",
    "one of the @xmath10 different verification classes . roughly speaking ,",
    "a semantics is rational if attacks inbetween two self - loops can be omitted without affecting the set of extensions .",
    "an important aside hereby is that even the most informative class contains indeed less information than the entire framework by itself .",
    "in this paper we consider a representative set of standard semantics .",
    "all of them satisfy rationality and thus , are exactly verifiable w.r.t .  a certain class .",
    "since the theorem does not provide an answer to which verification class perfectly matches a certain rational semantics we study this problem one by one for any considered semantics . as a result , only @xmath11 different classes are essential to classify the considered standard semantics .    in the last part of the paper we study an application of the concept of verifiability .",
    "more precisely , we address the question of strong equivalence for semantics lying inbetween known semantics , so - called intermediate semantics .",
    "strong equivalence is the natural counterpart to ordinary equivalence in monotonic theories ( see @xcite for abstract argumentation and @xcite for other nonmonotonic theories ) .",
    "we provide characterization theorems relying on the notion of verifiability and thus , contributing to a more abstract understanding of the different features argumentation semantics offer . besides these main results",
    ", we also give new characterizations for strong equivalence with respect to naive extensions and strong admissible sets .",
    "an _ argumentation framework _ ( af ) @xmath12 is a directed graph whose nodes @xmath13 ( with @xmath14 being an infinite set of arguments , so - called _ universe _ ) are interpreted as _",
    "arguments _ and whose edges @xmath15 represent _ conflicts _ between them .",
    "we assume that all afs possess finitely many arguments only and denote the collection of all afs by @xmath16 .",
    "if @xmath17 we say that @xmath4 _ attacks _ @xmath5 .",
    "alternatively , we write @xmath18 as well as , for some @xmath19 , @xmath20 or @xmath21 if there is some @xmath22 attacked by @xmath4 or attacking @xmath5 , respectively .",
    "an argument @xmath23 is _ defended _ by a set @xmath24 if for each @xmath25 with @xmath26 , @xmath27 .",
    "we define the _ range _ of @xmath28 ( in @xmath0 ) as @xmath29 .",
    "similarly , we use @xmath30 to denote the _ anti - range _ of @xmath28 ( in @xmath0 ) as @xmath31 .",
    "furthermore , we say that a set @xmath28 is _ conflict - free _ ( in @xmath0 ) if there is no argument @xmath32 s.t .",
    "the set of all conflict - free sets of an af @xmath0 is denoted by @xmath34 . for an af @xmath35",
    "we use @xmath36 and @xmath37 to refer to @xmath38 and @xmath28 , respectively .",
    "furthermore , we use @xmath39 for the set of all self - defeating arguments .",
    "finally , we introduce the union of afs @xmath0 and @xmath40 as @xmath41 .      a _ semantics _",
    "@xmath1 assigns to each @xmath12 a set @xmath42 where the elements are called @xmath1-_extensions_. numerous semantics are available .",
    "each of them captures different intuitions about how to reason about conflicting knowledge .",
    "we consider @xmath43 for admissible , naive , stable , preferred , complete , grounded , semi - stable , stage , ideal , and eager semantics @xcite .",
    "[ def : semantics ] given an af @xmath12 and let @xmath44 .",
    "1 .    @xmath45 iff @xmath46 and each @xmath47 is defended by  @xmath48 , 2 .",
    "@xmath49 iff @xmath46 and there is no @xmath50 s.t .",
    "@xmath51 , 3 .",
    "@xmath52 iff @xmath46 and @xmath53 , 4 .",
    "@xmath54 iff @xmath45 and there is no @xmath55 s.t .",
    "@xmath51 , 5 .",
    "@xmath56 iff @xmath45 and for any @xmath23 defended by  @xmath48 , @xmath47 , 6 .",
    "@xmath57 iff @xmath56 and there is no @xmath58 s.t .",
    "@xmath59 , 7 .",
    "@xmath60 iff @xmath45 and there is no @xmath55 s.t .",
    "@xmath61 , 8 .",
    "@xmath62 iff @xmath46 and there is no @xmath50 s.t .",
    "@xmath61 , 9 .",
    "@xmath63 iff @xmath45 , @xmath64 and there is no @xmath55 satisfying @xmath65 s.t .",
    "@xmath51 , 10 .",
    "@xmath66 iff @xmath45 , @xmath67 and there is no @xmath55 satisfying @xmath68 s.t .",
    "@xmath69 .    for two semantics @xmath1 ,",
    "@xmath70 we use @xmath71 to indicate that @xmath72 for each af @xmath73 .",
    "if we have @xmath74 and @xmath71 for semantics @xmath75 , we say that @xmath1 is _ @xmath76-@xmath70-intermediate_. well - known relations between semantics are @xmath77 , meaning , for instance , that @xmath78 is @xmath79-@xmath80-intermediate .",
    "[ def : semantics_conditions ] we call a semantics @xmath1 _ rational _ if self - loop - chains are irrelevant .",
    "that is , for every af @xmath81 it holds that @xmath82 , where @xmath83 .",
    "indeed , all semantics introduced in definition  [ def : semantics ] are rational .",
    "a prominent semantics that is based on conflict - free sets , but is not rational is the @xmath84-semantics  @xcite , since here chains of self - loops can have an influence on the sccs of an af ( see also @xcite ) .",
    "the following definition captures the two main notions of equivalence available for non - monotonic formalisms , namely _ ordinary _ ( or _ standard _ ) _ equivalence _ and _ strong _ ( or _ expansion _ ) _ equivalence_. a detailed overview of equivalence notion including their relations to each other can be found in @xcite .",
    "given a semantics @xmath1",
    ". two afs @xmath0 and @xmath40 are    * _ standard equivalent _ w.r.t .",
    "@xmath1 ( @xmath85 ) iff @xmath86 , * _ expansion equivalent _ w.r.t .",
    "@xmath1 ( @xmath87 ) iff for all afs  @xmath88 : @xmath89    expansion equivalence can be decided syntactically via so - called _ kernels _ @xcite .",
    "a kernel is a function @xmath90 mapping each af @xmath0 to another af @xmath91 ( which we may also denote as @xmath92 ) . consider the following definitions .",
    "[ def : kernel ] given an af @xmath12 and a semantics @xmath1 .",
    "we define @xmath1-kernels @xmath93 whereby    @xmath94 = @xmath95 , + @xmath96 + @xmath97 , + @xmath98 + @xmath99 , + @xmath100 .",
    "we say that a relation @xmath101 is _ characterizable through kernels _ if there is a kernel @xmath102 , s.t .",
    "@xmath103 iff @xmath104 .",
    "moreover , we say that a semantics @xmath1 is _ compatible with a kernel _",
    "@xmath105 if @xmath106 iff @xmath107 .",
    "all semantics ( except naive semantics ) considered in this paper are compatible with one of the four kernels introduced above . in the next section",
    ", we will complete these results taking naive semantics and strong admissible sets into account .",
    "@xcite [ the : strong ] for any afs @xmath81 and @xmath108 ,    1 .",
    "@xmath109 with @xmath110 , 2 .",
    "3 .   @xmath111",
    "in order to provide an exhaustive analysis of intermediate semantics ( confer penultimate section ) we provide missing kernels for naive semantics as well as strongly admissible sets .",
    "we start with the so - called _ naive kernel _ characterizing expansion equivalence w.r.t .",
    "naive semantics . as an aside",
    ", the following kernel is the first one which adds attacks to the former attack relation .",
    "[ def : naivekernel ] given an af @xmath12 .",
    "we define the _ naive kernel _ @xmath112",
    "whereby @xmath113    the following example illustrates the definition above .",
    "consider the afs @xmath81 and @xmath108 .",
    "note that @xmath114 .",
    "consequently , @xmath115 .",
    "\\(a ) at ( -0.6,0 ) [ circle , thick , draw , label = left:@xmath7@xmath4 ; ( b ) at ( 0.6,0 ) [ circle , thick , draw]@xmath5 ; ( c ) at ( 1.8,0 ) [ circle , thick , draw ] @xmath116 ; ( d ) at ( 3.0,0 ) [ circle , thick , draw ] @xmath117 ;    ( a ) at ( -0.6,-1.0 ) [ circle , thick , draw , label = left:@xmath8@xmath4 ; ( b ) at ( 0.6,-1.0 ) [ circle , thick , draw]@xmath5 ; ( c ) at ( 1.8,-1.0 ) [ circle , thick , draw ] @xmath116 ; ( d ) at ( 3.0,-1.0 ) [ circle , thick , draw ] @xmath117 ;    \\(b ) to [ thick , loop , distance=0.5 cm ] ( b ) ; ( d ) to [ thick , bend right ] ( c ) ; ( b ) to [ thick , loop , distance=0.5 cm ] ( b ) ; ( c ) to [ thick , bend right ] ( d ) ; ( a ) to [ thick , bend right ] ( b ) ; ( b ) to [ thick , bend right ] ( c ) ;    in accordance with definition  [ def : naivekernel ] we observe that both afs possess the same naive kernel @xmath118 .",
    "\\(a ) at ( -0.6,0 ) [ circle , thick , draw , label = left:@xmath9@xmath4 ; ( b ) at ( 0.6,0 ) [ circle , thick , draw]@xmath5 ; ( c ) at ( 1.8,0 ) [ circle , thick , draw ] @xmath116 ; ( d ) at ( 3.0,0 ) [ circle , thick , draw ] @xmath117 ;    \\(b ) to [ thick , loop , distance=0.5 cm ] ( b ) ; ( d ) to [ thick , bend right ] ( c ) ; ( c ) to [ thick , bend right ] ( d ) ; ( a ) to [ thick , bend right ] ( b ) ; ( b ) to [ thick , bend right ] ( a ) ; ( b ) to [ thick , bend right ] ( c ) ; ( c ) to [ thick , bend right ] ( b ) ;    the following theorem proves that possessing the same kernels is necessary as well as sufficient for being strongly equivalent , i.e. @xmath119 .    for all afs @xmath0,@xmath40 , @xmath120    in @xcite",
    "it was already shown that @xmath121 iff jointly @xmath122 and @xmath123 .",
    "consequently , it suffices to prove that @xmath124 implies @xmath122 as well as @xmath123 and vice versa .",
    "( @xmath125 ) given @xmath124 . by definition  [ def : naivekernel ]",
    "we immediately have @xmath122 .",
    "assume now that @xmath126 and without loss of generality let @xmath127 . obviously , for any af @xmath128 , @xmath129 .",
    "hence , there is an @xmath130 , s.t .",
    "@xmath131 . thus , there are @xmath132 , s.t .",
    "@xmath133 . furthermore ,",
    "@xmath134 and since for any af @xmath128 , @xmath135 we obtain @xmath136 . consequently , we have to consider @xmath137 .",
    "since @xmath133 , we obtain @xmath138 .",
    "since @xmath124 is assumed we derive @xmath139 . by definition",
    "[ def : naivekernel ] we must have @xmath140 contradicting the conflict - freeness of @xmath130 in @xmath108 .",
    "( @xmath141 ) we show the contrapositive , i.e. @xmath142 implies @xmath143 or @xmath144 .",
    "observe that for any af @xmath128 , @xmath145 .",
    "consequently , if @xmath146 , then @xmath147 .",
    "assume now @xmath148 .",
    "without loss of generality let @xmath149 . since for any af @xmath128 , @xmath135 we obtain @xmath137 .",
    "furthermore , @xmath150 implies @xmath151 and consequently , for any @xmath152 , @xmath153 . since @xmath154 we deduce @xmath155 .",
    "hence , @xmath156 and thus , there exists a set @xmath157 , s.t .",
    "@xmath158 ( compare ( * ? ? ?",
    "* lemma 3 ) ) witnessing @xmath144 .",
    "we turn now to _ strongly admissible sets _",
    "( for short , @xmath159 ) @xcite",
    ". we will show that , beside grounded @xcite and resolution based grounded semantics @xcite , strongly admissible sets are characterizable through the grounded kernel .",
    "consider the following self - referential definition taken from @xcite .",
    "[ def : strad ] given an af @xmath12 .",
    "a set @xmath24 is _ strongly admissible _ , i.e. @xmath160 iff any @xmath161",
    "is defended by a strongly admissible set @xmath162 .",
    "the following properties are needed to prove the characterization theorem .",
    "the first two of them are already shown in @xcite .",
    "the third statement is an immediate consequence of the former .",
    "[ pro : strad : prop ] given two afs @xmath0 and @xmath108 , then    1 .",
    "@xmath163 , 2 .",
    "if @xmath164 we have : @xmath165 for all @xmath166 , and 3 .",
    "@xmath167 implies @xmath168 .",
    "the following definition provides us with an alternative criterion for being a strong admissible set .",
    "in contrast to the former it allows one to construct strong admissible sets step by step .",
    "thus , a construction method is given .",
    "[ def : stradnew ] given an af @xmath12 .",
    "a set @xmath24 is _ strongly admissible _",
    ", i.e. @xmath160 iff there are finitely many and pairwise disjoint sets @xmath169 , s.t . @xmath170 and @xmath171 is the so - called _ characteristic function _",
    "@xcite with @xmath172 .",
    "the term @xmath173 can be equivalently replaced by @xmath174 . ] and furthermore , @xmath175 .",
    "[ pro : stradnew ] definitions  [ def : strad ] and [ def : stradnew ] are equivalent .",
    "for the proof we use @xmath176 as a shorthand for @xmath160 in the sense of definition  @xmath105 .",
    "@xmath177 given @xmath178 . hence , there is a finite partition , s.t .",
    "@xmath170 , @xmath171 and @xmath175 .",
    "observe that @xmath179 for any @xmath180 .",
    "let @xmath161 .",
    "consequently , there is an index @xmath181 , s.t .",
    "@xmath182 . furthermore , since @xmath183 by definition",
    ", we deduce that @xmath184 defends @xmath4 .",
    "we have to show now that ( the smaller set w.r.t .",
    "@xmath6 ) @xmath185 .",
    "note that @xmath186 .",
    "since we are dealing with finite afs we may iterate our construction . hence ,",
    "no matter which elements are chosen we end up with a @xmath6-chain , s.t . @xmath187 and @xmath188 defends @xmath189 for some index @xmath190 , set @xmath191 and element @xmath192 .",
    "this means , the question whether @xmath193 can be decided positively by proving @xmath194 . since the empty set does not contain any elements we find @xmath194 concluding @xmath195 .",
    "+ @xmath196 given @xmath193 , consider the following sets  @xmath197 : @xmath198 , @xmath199 , @xmath200 , ",
    ", @xmath201 .",
    "since we are dealing with finite afs there has to be a natural @xmath202 , s.t .",
    "@xmath203 . consider now the union of these sets , i.e. @xmath204 .",
    "we show now that @xmath205 and @xmath206 . by construction",
    "we have @xmath207 .",
    "moreover , @xmath208 . this can be seen as follows . by definition @xmath209 .",
    "this means , @xmath210 .",
    "since @xmath211 contains all elements defended by @xmath212 we obtain @xmath205 .",
    "obviously , @xmath213 .",
    "in order to derive a contradiction we suppose @xmath214 .",
    "this means there is a nonempty set @xmath215 , s.t .",
    "let @xmath217 .",
    "observe that no element @xmath218 is defended by @xmath204 ( * ) .",
    "since @xmath193 we obtain a set @xmath219 , s.t . @xmath220 and @xmath221 defends @xmath222 .",
    "we now iterate this procedure ending up with a set @xmath223 , s.t . @xmath224 and @xmath225 defends @xmath226 contradicting ( * ) and concluding the proof .",
    "the following example shows how to use the new construction method .",
    "consider the following af @xmath0 .",
    "\\(a ) at ( -0.6,-0.6 ) [ minimum size = 7 mm , circle , thick , draw , label = left:@xmath227@xmath4 ; ( b ) at ( 0.6,-0.3 ) [ minimum size = 7 mm , circle , thick , draw]@xmath5 ; ( c ) at ( 1.8,0 ) [ minimum size = 7 mm , circle , thick , draw ] @xmath116 ; ( d ) at ( 1.8,-1.2 ) [ minimum size = 7 mm , circle , thick , draw ] @xmath117 ; ( e ) at ( 3.0,-0.6 ) [ minimum size = 7 mm , circle , thick , draw ] @xmath228 ; ( f ) at ( 4.2,-0.6 ) [ minimum size = 7 mm , circle , thick , draw ] @xmath229 ;    \\(e ) to [ thick , loop , distance=0.5 cm ] ( e ) ; ( a ) to [ thick , bend right ] ( b ) ; ( b ) to [ thick , bend left ] ( c ) ; ( c ) to [ thick , bend right ] ( e ) ; ( e ) to [ thick , bend right ] ( f ) ; ( f ) to [ thick , bend right ] ( e ) ; ( d ) to [ thick , bend right ] ( e ) ;    we have @xmath230 .",
    "hence , for all @xmath231 , @xmath160 .",
    "furthermore , @xmath232 , @xmath233 and @xmath234 .",
    "this means , additionally @xmath235 . finally , @xmath236 justifying the last missing set @xmath237 .",
    "the following corollary is an immediate consequence of definition  [ def : stradnew ] .",
    "it is essential to prove the characterization theorem for strongly admissible sets .",
    "[ cor : strad ] given an af @xmath0 and two sets @xmath238 . if @xmath38 defends @xmath239 , then @xmath240 is strong admissible if @xmath38 is .",
    "the following lemma shows that the grounded kernel is insensitive w.r.t",
    ".  strong admissible sets .",
    "[ lem : strad ] for any af @xmath0 , @xmath241 .",
    "the grounded kernel is node- and loop - preserving , i.e.  @xmath242 and @xmath243 .",
    "furthermore , @xmath244 and @xmath245 as shown in ( * ? ? ?",
    "* lemma  6 ) .",
    "+ ( @xmath6 ) given @xmath246 .",
    "the proof is by induction on @xmath247 indicating the number of sets forming a suitable ( according to definition  [ def : stradnew ] ) partition of @xmath28 .",
    "let @xmath248 . in consideration of the grounded kernel we observe @xmath249 , i.e. the set of unattacked arguments does not change .",
    "since @xmath250 is assumed we are done .",
    "assume now that the assertion is proven for any @xmath105-partition .",
    "let @xmath28 be a @xmath251-partition , i.e. @xmath252 . according to induction hypothesis as well as corollary  [ cor : strad ] it suffices to prove @xmath253 defends @xmath254 in @xmath255 .",
    "assume not , i.e. there are arguments @xmath256 , @xmath257 s.t .",
    "@xmath258 and for all @xmath259 , @xmath260 ( * ) .",
    "since @xmath253 defends @xmath254 in @xmath81 we deduce the existence of an argument @xmath261 s.t .",
    "thus , @xmath263 is redundant w.r.t .  the grounded kernel . according to definition  [ def : kernel ] and due to the conflict - freeness of @xmath253 we have @xmath264 and @xmath265 .",
    "consequently , @xmath266 . since @xmath253 is a strong admissible @xmath105-partition in @xmath81 we obtain by induction hypothesis that @xmath253 is strong admissible in @xmath255 and therefore , admissible in @xmath255 ( proposition  [ pro : strad : prop ] ) .",
    "hence there has to be an argument @xmath259 , s.t .",
    "@xmath267 , contradicting  ( * ) .",
    "( @xmath268 ) assume @xmath269 .",
    "we show @xmath246 by induction on @xmath247 indicating that @xmath28 is a @xmath247-partition in @xmath255 . due to",
    "@xmath249 the base case is immediately clear . for the induction step let @xmath28 be a @xmath251-partition ,",
    "i.e. @xmath252 . by induction hypothesis we may assume that @xmath253 is strongly admissible in @xmath81 .",
    "using corollary  [ cor : strad ] it suffices to prove @xmath253 defends @xmath254 in @xmath81 .",
    "assume not , i.e. there are arguments @xmath256 , @xmath257 s.t .",
    "@xmath270 and for all @xmath259 , @xmath271 .",
    "we even have @xmath260 since @xmath272 . consequently",
    ", @xmath273 has to be deleted in @xmath255 . definition  [ def : kernel ] requires @xmath274 contradicting the conflict - freeness of @xmath28 in @xmath255 .",
    "for any two afs @xmath81 and @xmath108 we have , @xmath275    ( @xmath141 ) we show the contrapositive , i.e. @xmath276 . assuming @xmath277 implies @xmath278 ( theorem  [ the : strong ] ) .",
    "this means , there is an af @xmath128 , s.t .",
    "@xmath279 . due to statement 3 of proposition",
    "[ pro : strad : prop ] , we deduce @xmath280 proving @xmath281 .",
    "( @xmath125 ) given @xmath282 . since",
    "expansion equivalence is a congruence w.r.t .",
    "@xmath283 we obtain @xmath284 for any af @xmath128 .",
    "consequently , @xmath285 . due to lemma",
    "[ lem : strad ] we deduce @xmath286 , concluding the proof .",
    "in this section we study the question whether we really need the entire af @xmath81 to compute the extensions of a given semantics .",
    "let us consider naive semantics .",
    "obviously , in order to determine naive extensions it suffices to know all conflict - free sets .",
    "conversely , knowing @xmath287 only does not allow to reconstruct @xmath81 unambiguously .",
    "this means , knowledge about @xmath287 is indeed less information than the entire af by itself .",
    "in fact , most of the existing semantics do not need information of the entire framework .",
    "we will categorize the amount of information by taking the conflict - free sets as a basis and distinguish between different amounts of knowledge about the neighborhood , that is range and anti - range , of these sets .",
    "[ def : classes ] we call a function @xmath288 ( @xmath289 ) which is expressible via basic set operations only _ neighborhood function_. a neighborhood function @xmath290 induces the _ verification class _ mapping each af @xmath81 to @xmath291    we coined the term neighborhood function because the induced verification classes apply these functions to the neighborhoods , i.e. range and anti - range of conflict - free sets .",
    "the notion of _ expressible via basic set operations _ simply means that ( in case of @xmath292 ) the expression @xmath293 is in the language generated by the following bnf : @xmath294 consequently , in case of @xmath248 , we may distinguish eight set theoretically different neighborhood functions , namely @xmath295    a verification class encapsulates a certain amount of information about an af , as the following example illustrates .",
    "[ ex : verification_class ] consider the following af @xmath81 :    \\(a ) at ( -0.6,0 ) [ circle , thick , draw , label = left:@xmath7@xmath4 ; ( b ) at ( 1,0 ) [ circle , thick , draw]@xmath5 ;    \\(c ) at ( 2.6,0 ) [ circle , thick , draw ] @xmath116 ;    \\(b ) to [ thick , loop , distance=0.5 cm ] ( b ) ;    \\(b ) to [ thick , bend right ] ( a ) ; ( a ) to [ thick , bend right ] ( b ) ; ( c ) to [ thick , bend right ] ( b ) ;    now take , for instance , the verification class induced by @xmath296 , that is @xmath297 , storing information about conflict - free sets together with their associated ranges w.r.t .",
    "it contains the following tuples : @xmath298 , @xmath299 , @xmath300 , and @xmath301 .",
    "the verification class induced by @xmath302 contains the same tuples but @xmath303 instead of @xmath299 .",
    "intuitively , it should be clear that the set @xmath304 suffices to compute stage extensions ( i.e. , range - maximal conflict - free sets ) of  @xmath81 .",
    "this intuitive understanding of _ verifiability _ will be formally specified in definition  [ def : verifiable ] .",
    "note that a neighborhood function @xmath290 may return @xmath247-tuples .",
    "consequently , in consideration of the eight listed basic function we obtain ( modulo reordering , duplicates , empty set ) @xmath305 syntactically different neighborhood functions and therefore the same number of verification classes . as usual",
    ", we will denote the @xmath247-ary combination of basic functions @xmath306 as @xmath307 with @xmath308 .    with the following definition we can put neighborhood functions into relation w.r.t .  their information",
    "this will help us to show that actually many of the induced classes collapse to the same amount of information .",
    "[ def : informative ] given neighborhood functions @xmath290 and",
    "@xmath309 returning @xmath247-tuples and @xmath310-tuples , respectively , we say that @xmath290 is _ more informative _ than @xmath309",
    ", for short @xmath311 , iff there is a function @xmath312 such that for any two sets of arguments @xmath313 , we have @xmath314 .",
    "we will denote the strict part of @xmath315 by @xmath316 , i.e.  @xmath317 iff @xmath311 and @xmath318 .",
    "moreover @xmath319 in case @xmath311 and @xmath320 , we say that @xmath290 _ represents _ @xmath309 and vice versa .",
    "\\(a ) [ matrix of math nodes , column sep=0.41 cm , row sep=0.5 cm ] & & & + - + + & + & & & & - & - + + & & & & & & - + & & & + ;    i / in 2 - 1/1 - 4 , 2 - 2/1 - 4 , 2 - 3/1 - 4 , 2 - 5/1 - 4 , 2 - 6/1 - 4 , 2 - 7/1 - 4 , 3 - 1/2 - 1 , 3 - 1/2 - 2 , 3 - 2/2 - 1 , 3 - 2/2 - 3 , 3 - 2/2 - 6 , 3 - 3/2 - 1 , 3 - 3/2 - 5 , 3 - 3/2 - 7 , 3 - 4/2 - 3 , 3 - 4/2 - 5 , 3 - 5/2 - 2 , 3 - 5/2 - 5 , 3 - 5/2 - 6 , 3 - 6/2 - 2 , 3 - 6/2 - 3 , 3 - 6/2 - 7 , 3 - 7/2 - 6 , 3 - 7/2 - 7 , 4 - 4/3 - 1 , 4 - 4/3 - 2 , 4 - 4/3 - 3 , 4 - 4/3 - 4 , 4 - 4/3 - 5 , 4 - 4/3 - 6 , 4 - 4/3 - 7 ( a - i )  ( a- ) ;    [ lemma : verification_classes ] all neighborhood functions are represented by the ones depicted in figure  [ fig : verification_classes ] and the @xmath321-relation represented by arcs in figure  [ fig : verification_classes ] holds .",
    "we begin by showing that all neighborhood functions are represented in figure  [ fig : verification_classes ] .",
    "clearly , each neighborhood function @xmath290 represents itself , i.e. @xmath322 . all neighborhood functions for @xmath248 are are depicted in figure  [ fig : verification_classes ] .",
    "we turn to @xmath323 .",
    "consider the neighborhood functions @xmath324 , @xmath325 , and @xmath326 , defined as @xmath327 , @xmath328 , and @xmath329 for @xmath313 .",
    "observe that @xmath330 .",
    "hence , we can easily define functions in the spirit of definition  [ def : informative ] mapping the images of the function to one another :    * @xmath331 ; * @xmath332 ; * @xmath333 .",
    "therefore , @xmath334 .",
    "in particular , they are all represented by @xmath335 .",
    "we can apply the same reasoning to other combinations of neighborhood functions and get the following equivalences w.r.t .",
    "information content : @xmath336 ; @xmath337 ; @xmath338 ; @xmath339 ; and @xmath340 , with the functions stated first acting as representatives in figure  [ fig : verification_classes ] .    for the remaining functions returning @xmath341-tuples",
    "we get @xmath342 by    * @xmath343 ; * @xmath344 ; * @xmath345 .    finally , every neighborhood function @xmath346 with @xmath347 is represented by @xmath348 since we can compute all possible sets from @xmath28 and @xmath130 .",
    "now consider two functions @xmath290 and @xmath309 such that there is an arrow from @xmath349 to @xmath350 in figure  [ fig : verification_classes ] .",
    "it is easy to see that @xmath320 since , for sets of arguments @xmath28 and @xmath130 , @xmath307 is either contained in @xmath351 or obtainable from @xmath351 by basic set operations .",
    "the fact that @xmath352 , entailing @xmath353 , follows from the impossibility of finding a function @xmath354 such that @xmath355 .",
    "if the information provided by a neighborhood function is sufficient to compute the extensions , we say the semantics is verifiable by the class induced by the neighborhood function .",
    "[ def : verifiable ] a semantics @xmath1 is _ verifiable _ by the verification class induced by the neighborhood function @xmath290 returning @xmath247-tuples ( or simply , @xmath349__-verifiable _ _ ) iff there is a function ( also called _ criterion _ ) @xmath356 s.t .",
    "for every af @xmath357 we have : @xmath358 moreover , @xmath1 is _ exactly @xmath349-verifiable _ iff @xmath1 is @xmath349-verifiable and there is no verification class induced by @xmath309 with @xmath359 such that @xmath1 is @xmath350-verifiable .    observe that if a semantics @xmath1 is @xmath349-verifiable then for any two afs @xmath81 and @xmath108 with @xmath360 and @xmath361 it must hold that @xmath362 .",
    "we proceed with a list of criteria showing that any semantics mentioned in definition  [ def : semantics ] is verifiable by a verification class induced by a certain neighborhood function . in the following , we abbreviate the tuple @xmath363 by @xmath364 .",
    "@xmath365    @xmath366    instead of a formal proof we give the following explanations .",
    "first of all it is easy to see that the naive semantics is verifiable by the verification class induced by @xmath367 since the naive extensions can be determined by the conflict - free sets .",
    "stable and stage semantics , on the other hand , utilize the range of each conflict - free set in addition .",
    "hence they are verifiable by the verification class induced by @xmath296 .",
    "now consider admissible sets . recall that a conflict - free @xmath28 set is admissible if and only if it attacks all attackers .",
    "this is captured exactly by the condition @xmath368 , hence admissible sets are verifiable by the verification class induced by @xmath369 .",
    "the same holds for preferred semantics , since we just have to determine the maximal conflict - free sets with @xmath368 .",
    "semi - stable semantics , however , needs the range of each conflict - free set in addition , see @xmath370 , which makes it verifiable by the verification class induced by @xmath371 . finally consider the criterion @xmath372 .",
    "the first two conditions for a set of arguments @xmath28 stand for conflict - freeness and admissibility , respectively . now assume the third condition does not hold , i.e. , there exists a tuple @xmath373 with @xmath374 and @xmath375 .",
    "this means that every argument attacking @xmath376 is attacked by @xmath28 , i.e. , @xmath376 is defended by @xmath28 .",
    "hence @xmath28 is not a complete extension , showing that @xmath377 for each @xmath378 .",
    "one can verify that all criteria from the list are adequate in the sense that they describe the extensions of the corresponding semantics .",
    "we show now that the formal concepts of verifiability and being more informative behave correctly in the sense that the use of more informative neighborhood functions do not lead to a loss of verification capacity .",
    "if a semantics @xmath1 is @xmath349-verifiable , then @xmath1 is verifiable by all verification classes induced by some @xmath309 with @xmath320 .    as @xmath1 is verifiable by the verification class induced by @xmath290 it holds that there is some @xmath379 such that for all @xmath357 , @xmath380",
    "now let @xmath320 , meaning that there is some @xmath354 such that @xmath381 .",
    "we define @xmath382 and observe that @xmath383 , hence @xmath384 for each @xmath378 .    in order to prove unverifiability of a semantics @xmath1 w.r.t .  a class induced by a certain @xmath290 it suffices to present two afs @xmath81 and @xmath108 such that @xmath385 but , @xmath360 and @xmath386 .",
    "then the verification class induced by @xmath290 does not provide enough information to verify @xmath1 .",
    "in the following we will use this strategy to show exact verifiability .",
    "consider a semantics @xmath1 which is verifiable by a class induced by @xmath290 . if @xmath1 is unverifiable by all verifiability classes induced by @xmath309 with @xmath359 we have that @xmath1 is exactly verifiable by @xmath290 .",
    "the following examples study this issue for the semantics under consideration .",
    "[ ex : exact_verify ] the complete semantics is @xmath387-verifiable as seen before . the following afs show that it is even exactly verifiable by that class .",
    "( a1 ) at ( -0.6,0 ) [ circle , thick , draw , label = left:@xmath388@xmath4 ; ( b1 ) at ( 0.8,0 ) [ circle , thick , draw]@xmath5 ;    ( a1 ) at ( 3.4,0 ) [ circle , thick , draw , label = left:@xmath389 @xmath4 ; ( b1 ) at ( 4.8,0 ) [ circle , thick , draw ] @xmath5 ;    ( b1 ) to [ thick , loop , distance=0.5 cm ] ( b1 ) ; ( b1 ) to [ thick , loop , distance=0.5 cm ] ( b1 ) ;    ( b1 ) to [ thick , bend right ] ( a1 ) ;    ( a2 ) at ( -0.6,-1 ) [ circle , thick , draw , label = left:@xmath390@xmath4 ; ( b2 ) at ( 0.8,-1 ) [ circle , thick , draw]@xmath5 ; ( c2 ) at ( 2,-1 ) [ circle , thick , draw]@xmath116 ;    ( a2 ) at ( 3.4,-1 ) [ circle , thick , draw , label = left:@xmath391 @xmath4 ; ( b2 ) at ( 4.8,-1 ) [ circle , thick , draw ] @xmath5 ; ( c2 ) at ( 6.2,-1 ) [ circle , thick , draw ] @xmath116 ;    ( b2 ) to [ thick , loop , distance=0.5 cm ] ( b2 ) ; ( b2 ) to [ thick , loop , distance=0.5 cm ] ( b2 ) ;    ( b2 ) to [ thick , bend right ] ( c2 ) ; ( c2 ) to [ thick , bend right ] ( b2 ) ; ( a2 ) to [ thick , bend right ] ( b2 ) ; ( c2 ) to [ thick , bend right ] ( b2 ) ; ( b2 ) to [ thick , bend right ] ( c2 ) ;    ( a3 ) at ( -0.6,-2 ) [ circle , thick , draw , label = left:@xmath392@xmath4 ; ( b3 ) at ( 0.8,-2 ) [ circle , thick , draw]@xmath5 ; ( a3 ) at ( 3.4,-2 ) [ circle , thick , draw , label = left:@xmath393 @xmath4 ; ( b3 ) at ( 4.8,-2 ) [ circle , thick , draw ] @xmath5 ;    ( b3 ) to [ thick , loop , distance=0.5 cm ] ( b3 ) ; ( b3 ) to [ thick , loop , distance=0.5 cm ] ( b3 ) ;    ( a3 ) to [ thick , bend right ] ( b3 ) ; ( b3 ) to [ thick , bend right ] ( a3 ) ; ( a4 ) at ( -0.6,-3 ) [ circle , thick , draw , label = left:@xmath394@xmath4 ; ( b4 ) at ( 0.8,-3 ) [ circle , thick , draw]@xmath5 ;    ( a4 ) at ( 3.4,-3 ) [ circle , thick , draw , label = left:@xmath395 @xmath4 ; ( b4 ) at ( 4.8,-3 ) [ circle , thick , draw ] @xmath5 ;    ( b4 ) to [ thick , loop , distance=0.5 cm ] ( b4 ) ; ( b4 ) to [ thick , loop , distance=0.5 cm ] ( b4 ) ;    ( a4 ) to [ thick , bend right ] ( b4 ) ; ( b4 ) to [ thick , bend right ] ( a4 ) ; ( b4 ) to [ thick , bend right ] ( a4 ) ;    ( a5 ) at ( -0.6,-4 ) [ circle , thick , draw , label = left:@xmath396@xmath4 ; ( b5 ) at ( 0.8,-4 ) [ circle , thick , draw]@xmath5 ;    ( a5 ) at ( 3.4,-4 ) [ circle , thick , draw , label = left:@xmath397 @xmath4 ; ( b5 ) at ( 4.8,-4 ) [ circle , thick , draw ] @xmath5 ;    ( b5 ) to [ thick , loop , distance=0.5 cm ] ( b5 ) ; ( b5 ) to [ thick , loop , distance=0.5 cm ] ( b5 ) ;    ( a5 ) to [ thick , bend right ] ( b5 ) ; ( b5 ) to [ thick , bend right ] ( a5 ) ; ( a5 ) to [ thick , bend right ] ( b5 ) ;    ( a6 ) at ( -0.6,-5 ) [ circle , thick , draw , label = left:@xmath398@xmath4 ; ( b6 ) at ( 0.8,-5 ) [ circle , thick , draw]@xmath5 ;    ( a6 ) at ( 3.4,-5 ) [ circle , thick , draw , label = left:@xmath399 @xmath4 ; ( b6 ) at ( 4.8,-5 ) [ circle , thick , draw ] @xmath5 ;    ( b6 ) to [ thick , loop , distance=0.5 cm ] ( b6 ) ; ( b6 ) to [ thick , loop , distance=0.5 cm ] ( b6 ) ;    ( b6 ) to [ thick , bend right ] ( a6 ) ; ( a6 ) to [ thick , bend right ] ( b6 ) ;    first consider the afs @xmath400 and @xmath401 , and observe that @xmath402 . on the other hand @xmath400 and @xmath401",
    "differ in their complete extensions since @xmath403 but @xmath404 .",
    "therefore complete semantics is unverifiable by the verification class induced by @xmath324 .",
    "likewise , this can be shown for the classes induced by @xmath405 , @xmath406 , @xmath407 , @xmath371 , and @xmath408 , respectively :    * @xmath409 @xmath410 @xmath411 @xmath412 , but @xmath413 .",
    "* @xmath414 , but @xmath415 . * @xmath416 , but @xmath417 . *",
    "@xmath418 , but @xmath419 . * @xmath420 , but @xmath421 .",
    "hence the complete semantics is exactly verifiable by the verification class induced by @xmath348 .",
    "[ ex : semi_eager_unverifiable ] consider the semi - stable and eager semantics and recall that they are @xmath422-verifiable in order to show exact verifiability it suffices to show unverifiability by the classes induced by @xmath296 , @xmath423 , and @xmath369 ( cf .",
    "figure  [ fig : verification_classes ] ) ; @xmath424 and @xmath425 are taken from example  [ ex : exact_verify ] above .",
    "* @xmath426 , but @xmath427 . * @xmath428 , but @xmath429 . *",
    "@xmath430 , but @xmath431 and @xmath432 .",
    "( a1 ) at ( -0.6,0 ) [ circle , thick , draw , label = left:@xmath433@xmath4 ; ( b1 ) at ( 0.8,0 ) [ circle , thick , draw]@xmath5 ; ( c1 ) at ( 2,0 ) [ circle , thick , draw]@xmath116 ;    ( a1 ) at ( 3.4,0 ) [ circle , thick , draw , label = left:@xmath434 @xmath4 ; ( b1 ) at ( 4.8,0 ) [ circle , thick , draw ] @xmath5 ; ( c1 ) at ( 6,0 ) [ circle , thick , draw ] @xmath116 ;    ( c1 ) to [ thick , loop , distance=0.5 cm ] ( c1 ) ; ( c1 ) to [ thick , loop , distance=0.5 cm ] ( c1 ) ;    ( b1 ) to [ thick , bend right ] ( a1 ) ; ( a1 ) to [ thick , bend right ] ( b1 ) ; ( b1 ) to [ thick , bend right ] ( a1 ) ; ( a1 ) to [ thick , bend right ] ( b1 ) ; ( b1 ) to [ thick , bend right ] ( c1 ) ;    hence , both the semi - stable and eager semantics are exactly verifiable by the verification class induced by @xmath371 .",
    "[ ex : grd_sad_unverifiable ] now consider the grounded and strong admissible semantics and recall that they are @xmath435-verifiable in order to show exact verifiability we have to show unverifiability by the classes induced by @xmath302 , @xmath436 , and @xmath423 ( cf .",
    "figure  [ fig : verification_classes ] ) ; again , the afs from example  [ ex : exact_verify ] can be reused .",
    "* @xmath437 , but @xmath438 and @xmath439 . * @xmath440 , but @xmath441 and @xmath442 * @xmath428 , but @xmath443 and @xmath444 .",
    "hence , both the grounded and strong admissible semantics are exactly verifiable by the verification class induced by @xmath371 .",
    "[ ex : last_unverifiable ] finally consider stable , stage , admissible , preferred and ideal semantics .",
    "they are either @xmath445-verifiable ( @xmath79 and @xmath446 ) or @xmath447-verifiable ( @xmath448 , @xmath80 , and @xmath449 ) . in order to show that these verification classes are exact we have to show unverifiability w.r.t .  the verification class induced by @xmath367 .",
    "consider , for instance , the afs @xmath450 and @xmath451 from example  [ ex : exact_verify ] .",
    "we have @xmath452 , but @xmath453 , @xmath454 , and @xmath455 for @xmath456 , showing exactness of the respective verification classes .    the insights obtained through examples  [ ex : exact_verify ] ,  [ ex : semi_eager_unverifiable ] ,  [ ex : grd_sad_unverifiable ] , and  [ ex : last_unverifiable ] show that the verification classes obtained from the criteria given above are indeed exact .",
    "figure  [ fig : classes_of_semantics ] shows the relation between the semantics under consideration with respect to their exact verification classes .",
    "node[snode ] ( na ) @xmath457 : @xmath458 + + ( -3,0.8 ) node[snode ] ( stb ) @xmath445 : @xmath79 , @xmath459 + + ( 3,0 ) node[snode ] ( pref ) @xmath447 : @xmath448 , @xmath80 , @xmath460 + + ( -1.5,0.8 ) node[snode ] ( semi ) @xmath461 : @xmath78 , @xmath462 + + ( 4.5,0 ) node[snode ] ( grd ) @xmath463 : @xmath464 , @xmath159 + + ( -3,0.8 ) node[snode ] ( co ) @xmath465 : @xmath466 ; ( na ) edge ( stb ) ( na ) edge ( pref ) ( na ) edge ( grd ) ( pref ) edge ( semi ) ( stb ) edge ( semi ) ( semi ) edge ( co ) ( grd ) edge ( co ) ;    we turn now to the main theorem stating that any _ rational _ semantics ( recall that all semantics we consider in this paper are rational ) is exactly verifiable by one of the @xmath10 different verification classes .",
    "every semantics which is rational is exactly verifiable by a verification class induced by one of the neighborhood functions presented in figure  [ fig : verification_classes ] .",
    "first of all note that by lemma  [ lemma : verification_classes ] , @xmath467 is the least informative neighborhood function and for every other neighborhood function @xmath290 it holds that @xmath468 .",
    "therefore , if a semantics is verifiable by the verification class induced by any @xmath290 then it is exactly verifiable by a verification class induced by some @xmath309 with @xmath469 .",
    "moreover , if a semantics is exactly verifiable by a class , then it is by definition also verifiable by this class .",
    "hence it remains to show that every semantics which is rational is verifiable by a verification class presented in figure  [ fig : verification_classes ] .",
    "we show the contrapositive , i.e. , if a semantics is not verifiable by a verification class induced by one of the neighborhood functions presented in figure  [ fig : verification_classes ] then it is not rational .",
    "assume a semantics @xmath1 is not verifiable by one of the verification classes .",
    "this means @xmath1 is not verifiable by the verification class induced by @xmath348 .",
    "hence there exist two afs @xmath81 and @xmath108 such that @xmath470 and @xmath361 , but @xmath471 . for every argument @xmath4 which is not self - attacking , a tuple @xmath472",
    "is contained in @xmath473 ( and in @xmath474 ) .",
    "hence @xmath81 and @xmath108 have the same not - self - attacking arguments and , moreover these arguments have the same ingoing and outgoing attacks in @xmath81 and @xmath108 .",
    "this , together with @xmath475 implies that @xmath476 ( see definition  [ def : semantics_conditions ] ) holds .",
    "but since @xmath471 we get that @xmath1 is not rational , which was to show .",
    "note that the criterion giving evidence for verifiability of a semantics by a certain class has access to the set of arguments of a given framework .",
    "in fact , only the criterion for stable semantics makes use of that .",
    "indeed , stable semantics needs this information since it is not verifiable by any class when using a weaker notion of verifiability , which rules out the usage of @xmath36 .",
    "a type of semantics which has aroused quite some interest in the literature ( see e.g.  @xcite and @xcite ) are intermediate semantics , i.e.  semantics which yield results lying between two existing semantics .",
    "the introduction of @xmath1-@xmath70-intermediate semantics can be motivated by deleting _ undesired _ ( or add _ desired _ ) @xmath70-extensions while guaranteeing all reasonable positions w.r.t .  @xmath1 .",
    "in other words , @xmath1-@xmath70-intermediate semantics can be seen as sceptical or credulous acceptance shifts within the range of @xmath1 and @xmath70 .",
    "a natural question is whether we can make any statements about compatible kernels of intermediate semantics . in particular ,",
    "if semantics @xmath1 and @xmath70 are compatible with some kernel @xmath102 , is then every @xmath1-@xmath70-intermediate semantics @xmath102-compatible .",
    "the following example answers this question negatively .",
    "[ ex : stagle ] recall from theorem  [ the : strong ] that both stable and stage semantics are compatible with @xmath477 , i.e.  @xmath478 .",
    "now we define the following @xmath79-@xmath446-intermediate semantics , say _ stagle _ semantics : given an af @xmath479 , @xmath480 iff @xmath481 , @xmath482 and for every @xmath483 we have @xmath484 .",
    "obviously , it holds that @xmath485 and @xmath486 as well as @xmath487 , as witnessed by the following af @xmath81 :    \\(a ) at ( 1.0,0.0 ) [ circle , thick , draw , label = left:@xmath7@xmath4 ; ( b ) at ( 2.5,0.0 ) [ circle , thick , draw]@xmath5 ; ( c ) at ( 4.0,0.0 ) [ circle , thick , draw]@xmath116 ;    \\(a ) to [ thick , loop , distance=0.5 cm ] ( a ) ; ( b ) to [ thick , bend right ] ( c ) ; ( c ) to [ thick , bend right ] ( b ) ; ( a ) to [ thick , bend right ] ( b ) ;    it is easy to verify that @xmath488 .",
    "we proceed by showing that stagle semantics is not compatible with @xmath477 . to this end consider @xmath489 , which is depicted below .",
    "\\(a ) at ( 1.0,0.0 ) [ circle , thick , draw , label = left:@xmath490@xmath4 ; ( b ) at ( 2.5,0.0 ) [ circle , thick , draw]@xmath5 ; ( c ) at ( 4.0,0.0 ) [ circle , thick , draw]@xmath116 ;    \\(a ) to [ thick , loop , distance=0.5 cm ] ( a ) ; ( b ) to [ thick , bend right ] ( c ) ; ( c ) to [ thick , bend right ] ( b ) ;    now , @xmath491 witnesses @xmath492 and therefore , @xmath493 .",
    "since @xmath494 we are done , i.e. stagle semantics is indeed not compatible with the stable kernel .",
    "it is the main result of this section that compatibility of intermediate semantics w.r.t .",
    "a certain kernel can be guaranteed if verifiability w.r.t .",
    "a certain class is presumed .",
    "the provided characterization theorems generalize former results presented in @xcite .",
    "moreover , due to the abstract character of the theorems the results are applicable to semantics which may be defined in the future . before turning to the characterization theorems we state some implications of verifiability .",
    "in particular , under the assumption that @xmath1 is verifiable by a certain class , equality of certain kernels implies expansion equivalence w.r.t .",
    "@xmath1 .",
    "[ pro : cf - range - verifiable ] for any @xmath445-verifiable semantics @xmath1 we have @xmath495    in @xcite it was shown that ( i ) .",
    "consider now a @xmath445-verifiable semantics @xmath1 . in order to show @xmath496 ( ii ) we prove @xmath497 ( * ) first .",
    "it is easy to see that @xmath498 iff @xmath499 .",
    "furthermore , since @xmath477 deletes an attack @xmath263 only if @xmath4 is self - defeating we deduce that ranges does not change as long as conflict - free sets are considered .",
    "thus , @xmath500 .",
    "now assume that @xmath501 and let @xmath502 for some af @xmath128 .",
    "we have to show that @xmath503 . applying ( ii )",
    "we obtain @xmath504 .",
    "furthermore , using ( i ) we deduce @xmath505 .",
    "finally , @xmath506 by applying ( ii ) , which concludes the proof .",
    "the following results can be shown in a similar manner .",
    "[ pro : cf - range-?-verifiable ] for any @xmath461-verifiable semantics @xmath1 we have @xmath507    [ pro : cf - range - inrange - verifiable ] for any @xmath465-verifiable semantics @xmath1 we have @xmath508    [ pro : cf - inrange - pm - verifiable ] for any @xmath463-verifiable semantics @xmath1 we have @xmath509    [ pro : cf - verifiable ] for any @xmath457-verifiable semantics @xmath1 we have @xmath510    we proceed with general characterization theorems .",
    "the first one states that @xmath79-@xmath446-intermediate semantics are compatible with stable kernel if @xmath445-verifiability is given .",
    "consequently , stagle semantics as defined in example  [ ex : stagle ] can not be @xmath445-verifiable .",
    "[ the : stablefirst ] given a semantics @xmath1 which is @xmath445-verifiable and @xmath79-@xmath459-intermediate , it holds that @xmath511    ( @xmath141 ) follows directly from proposition  [ pro : cf - range - verifiable ] .",
    "( @xmath125 ) we show the contrapositive , i.e.  @xmath512 . assuming @xmath513 implies @xmath514 , i.e.  there exists an af @xmath128 such that @xmath515 and therefore , @xmath516 . let @xmath517 and @xmath518 .",
    "it is easy to see that @xmath519 and @xmath520 . since now both @xmath521 and @xmath522 it holds that @xmath523 and @xmath524 .",
    "hence @xmath525 , showing that @xmath526 .",
    "the following theorems can be shown in a similar manner .    [",
    "the : admfirst ] given a semantics @xmath1 which is @xmath461-verifiable and @xmath76-@xmath448-intermediate with @xmath527 , it holds that @xmath528    remember that complete semantics is a @xmath78-@xmath448-intermediate semantics .",
    "furthermore , it is not characterizable by the admissible kernel as already observed in @xcite .",
    "consequently , complete semantics is not @xmath461-verifiable ( as we have shown in example  [ ex : exact_verify ] with considerable effort ) .",
    "[ the : grdfirst ] given a semantics @xmath1 which is @xmath463-verifiable and @xmath464-@xmath159-intermediate , it holds that @xmath529",
    "in this work we have contributed to the analysis and comparison of abstract argumentation semantics .",
    "the main idea of our approach is to provide a novel categorization in terms of the amount of information required for testing whether a set of arguments is an extension of a certain semantics .",
    "the resulting notion of verifiability classes allows us to categorize any new semantics ( given it is `` rational '' ) with respect to the information needed and compare it to other semantics .",
    "thus our work is in the tradition of the principle - based evaluation due to @xcite and paves the way for a more general view on argumentation semantics , their common features , and their inherent differences . using our notion of verifiability",
    ", we were able to show kernel - compatibility for certain intermediate semantics .",
    "concerning concrete semantics , our results yield the following observation : while preferred , semi - stable , ideal and eager semantics coincide w.r.t.strong equivalence , verifiability of these semantics differs .",
    "in fact , preferred and ideal semantics manage to be verifiable with strictly less information . for future work",
    "we envisage an extension of the notion of verifiability classes in order to categorize semantics not captured by the approach followed in this paper , such as @xmath84 @xcite .",
    "arieli , o. 2012 .",
    "conflict - tolerant semantics for argumentation frameworks . in _ logics in artificial intelligence - 13th european conference , proceedings _ , volume 7519 of _ lecture notes in computer science _",
    "springer .",
    "baroni , p. , and giacomin , m. 2007a . comparing argumentation semantics with respect to skepticism . in _ symbolic and quantitative approaches to reasoning with uncertainty , 9th european conference , proceedings _ ,",
    "volume 4724 of _ lecture notes in computer science _ , 210221 .",
    "springer .",
    "baumann , r. , and brewka , g. 2013 . analyzing the equivalence zoo in abstract argumentation . in _",
    "14th international workshop on computational logic in multi - agent systems , proceedings _ ,",
    "volume 8143 of _ lecture notes in computer science _ , 1833 .",
    "springer .",
    "baumann , r. , and spanring , c. 2015 .",
    "infinite argumentation frameworks  on the existence and uniqueness of extensions . in _ advances in knowledge representation , logic programming , and abstract argumentation - essays dedicated to g. brewka on the occ . of his 60th birthday _ , volume 9060 of _ lecture notes in computer science _ , 281295 .",
    "springer .      baumann , r. 2016 .",
    "characterizing equivalence notions for labelling - based semantics . in _ principles of knowledge representation and reasoning : proceedings of the 15th international conference_. to appear .",
    "caminada , m. 2014 .",
    "strong admissibility revisited . in _ computational models of argument - proceedings of comma 2014 _ , volume 266 of _ frontiers in artificial intelligence and applications _ , 197208 . press .",
    "dvok , w. ; linsbichler , t. ; oikarinen , e. ; and woltran , s. 2014 .",
    "resolution - based grounded semantics revisited . in _ computational models of argument - proceedings of comma 2014 _ , volume 266 of _ frontiers in artificial intelligence and applications _ , 269280 . press .",
    "turner , h. 2004 .",
    "strong equivalence for causal theories . in _",
    "7th international conference on logic programming and nonmonotonic reasoning , proceedings _ ,",
    "volume 2923 of _ lecture notes in computer science _",
    ", 289301 . springer ."
  ],
  "abstract_text": [
dung s abstract argumentation theory is a widely used formalism to model conflicting information and to draw conclusions in such situations . </S>",
    "<S> hereby , the knowledge is represented by so - called argumentation frameworks ( afs ) and the reasoning is done via semantics extracting acceptable sets . </S>",
    "<S> all reasonable semantics are based on the notion of conflict - freeness which means that arguments are only jointly acceptable when they are not linked within the af . in this paper , we study the question which information on top of conflict - free sets is needed to compute extensions of a semantics at hand . </S>",
    "<S> we introduce a hierarchy of so - called verification classes specifying the required amount of information . </S>",
    "<S> we show that well - known standard semantics are exactly verifiable through a certain such class . </S>",
    "<S> our framework also gives a means to study semantics lying inbetween known semantics , thus contributing to a more abstract understanding of the different features argumentation semantics offer . </S>",

  ]
}
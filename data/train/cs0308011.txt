{
  "article_text": [
    "the idea of connectivity by short cycles emerges in different contexts . in hierarchical decompositions of networks @xcite the long cycles can be violations of the assumed hierarchical structure  and related to general structure these nonhierarhical ( cyclic ) links can be identified .",
    "the symmetric connectivity from paper @xcite is essentially the connectivity by 2-cycles . in @xcite",
    "we were looking at subgraphs formed by complete triads  triangles .",
    "triangular connectivity also appears to be important in different applications @xcite .",
    "the next stimulus was a reference in scott @xcite to the early work of m. everett on this subject @xcite .",
    "it seems that his ideas can be elaborated to provide a powerful and efficient tool for analysis of large networks .    in this paper we first present connectivity by cycles of length 3 ",
    "triangular connectivity .",
    "afterward we generalize the results to connectivity by cycles of length at most @xmath0 , and at the end we propose further generalizations .",
    "the theorems [ equiv.k3 ] , [ max.k3 ] , [ net.k3 ] , [ equiv.l3 ] , [ theorems.3 ] , [ weakstrong.3 ] are generalized by theorems [ equiv.kk ] , [ max.kk ] , [ net.kk ] , [ equiv.lk ] , [ theorems.k ] and [ weakstrong.k ] .",
    "therefore they are stated without proofs .",
    "let @xmath1 denotes the _ connectivity _ relation and @xmath2 denotes the _ biconnectivity _ relation in a given undirected graph @xmath3 .",
    "let @xmath4 denotes the number of vertices and let @xmath5 denotes the number of edges .",
    "vertex @xmath6 is in relation @xmath1 with vertex @xmath7 , @xmath8 , iff @xmath9 or there exists a path in @xmath10 from @xmath11 to @xmath12 .",
    "vertex @xmath6 is in relation @xmath2 with vertex @xmath7 , @xmath13 , iff @xmath9 or there exists a cycle in @xmath10 containing @xmath11 and @xmath12 .",
    "we call a _ triangle _ a subgraph isomorphic to a 3-cycle @xmath14 . a subgraph @xmath15 of @xmath10 is _ triangular _ , if each its vertex and each its edge belong to at least one triangle in @xmath15",
    ".    a sequence @xmath16 of triangles of @xmath10 ( _ vertex _ ) _ triangularly connects _",
    "vertex @xmath6 with vertex @xmath7 , iff    1 .",
    "@xmath17 , 2 .",
    "@xmath18 , and 3 .",
    "@xmath19 for  @xmath20 .",
    "such a sequence is called a ( _ vertex _ ) _ triangular chain _ , see figure [ k3 ] .",
    "vertex @xmath6 is ( _ vertex _ ) _ triangularly connected _ with vertex @xmath7 , @xmath21 , iff @xmath9 or there exists a ( vertex ) triangular chain that ( vertex ) triangularly connects vertex @xmath11 with vertex @xmath12 .",
    "[ equiv.k3 ] the relation @xmath22 is an equivalence relation on the set of vertices @xmath23 .",
    "a triangular connectivity component is _ trivial _ iff it consists of a single vertex .    [ max.k3 ] the sets of vertices of maximal connected triangular subgraphs are exactly nontrivial ( vertex ) triangular connectivity components .    but subgraphs , induced by nontrivial ( vertex ) triangular connectivity components are not necessary triangular subgraphs and therefore they are not maximal connected triangular subgraphs .",
    "we can see this from example in figure [ tri ] , where all vertices are in the same triangular connectivity component , but the graph is not triangular because of edge @xmath24 , which does not belong to a triangle .",
    "an algorithm for determining the relation @xmath22 is simple , see algorithm [ alg : k3 ] .",
    "it partitions the set of vertices into @xmath0 sets ( equivalence classes ) labeled @xmath25 , @xmath26 ,  , @xmath27 .",
    "first we choose any vertex @xmath6 and put it into a new set , which at the end will become one of the equivalence classes .",
    "then we add to it all vertices , which can be reached from vertex @xmath11 by triangles .",
    "we repeat this procedure until all vertices are assigned to equivalence classes .",
    "@xmath28    @xmath29 denotes the set of all neighbors of vertex @xmath11 .",
    "if the sets of neighbours are ordered we can use merging to compute @xmath30 in @xmath31 , @xmath32 is the maximum degree of @xmath10 . in this case",
    "the time complexity of this algorithm is @xmath33 .",
    "we have to assign each vertex to corresponding equivalence class . to assign vertex @xmath11",
    ", we have to visit all its neighbors and for each neighbor @xmath12 we have to find intersection of @xmath34 and @xmath35 .    the _ triangular network _ @xmath36 determined by graph",
    "@xmath37 is a subgraph @xmath38 of @xmath10 which edges are defined by : @xmath39 , iff @xmath40 and @xmath24 belongs to a triangle . for edge",
    "@xmath39 its weight @xmath41 equals to the number of different triangles in @xmath10 to which @xmath24 belongs .",
    "[ net.k3 ] @xmath42    an algorithm for determining @xmath43 and @xmath44 is simple , see algorithm [ alg : e3 ] and figure [ nn ] . if the sets of neighbors are ordered the time complexity of computing @xmath41 is @xmath31 and the total time complexity of the algorithm is @xmath33 .",
    "@xmath45    _ _ ]    with @xmath46 we denote the number of different triangles of @xmath10 that contain vertex @xmath12 .",
    "it is easy to verify the following relation between @xmath47 and @xmath48 .",
    "@xmath49    a sequence @xmath16 of triangles of @xmath10 _ edge triangularly connects _",
    "vertex @xmath6 with vertex @xmath7 , iff    1 .",
    "@xmath17 , 2 .",
    "@xmath18 , and 3 .",
    "@xmath50 for  @xmath20 .",
    "such a sequence is called an _ edge triangular chain _ , see figure [ l3 ] .",
    "vertex @xmath6 is _ edge triangularly connected _ with vertex @xmath7 , @xmath51 , iff @xmath9 or there exists an edge triangular chain that edge triangularly connects vertex @xmath11 with vertex @xmath12 .    in the biconnected graph in figure [ bico ] the vertices @xmath11 in @xmath12",
    "are edge triangularly connected , while the vertices @xmath52 and @xmath53 are not .",
    "the relation @xmath54 is not transitive : @xmath55 , @xmath56 , but not @xmath57 .",
    "[ equiv.l3 ] the relation @xmath54 determines an equivalence relation on the set of edges @xmath58 .    an algorithm for determining the relation @xmath54 is simple , see algorithm [ alg : l3 ] .",
    "it partitions the set of edges into @xmath0 sets ( equivalence classes of the relation on @xmath58 ) labeled @xmath25 , @xmath26 ,  , @xmath27 .",
    "vertex @xmath11 is in relation @xmath54 with vertex @xmath12 , if both vertices are end - points of an edge from the same class .",
    "@xmath59    here @xmath60 denotes the set of end - points of edge @xmath24 .",
    "@xmath28    in each iteration of the inner loop we move one edge from @xmath58 into @xmath27 .",
    "so the inner loop repeats @xmath61-times . each assignment or",
    "comparison takes constant time , except the statement where the intersection of two neibourhoods is determined .",
    "if the sets of neighbours are ordered , this statement has time complexity of @xmath31 , so the total time complexity of the algorithm is @xmath33 .",
    "note , that in the inner loop the edge @xmath24 is actually removed from @xmath58 , so the neighborhoods of vertices are dynamical  they depend on the current set of edges @xmath58 .",
    "this means , that after the edge is removed from @xmath58 ( and from @xmath62 ) , it can not appear in @xmath62 again .",
    "let @xmath63 .",
    "[ theorems.3 ] in graph @xmath10 hold :    xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx a. @xmath64 d. @xmath65 + b. @xmath66 e. @xmath67 + c. @xmath68      if the graph @xmath10 is mixed we replace edges with pairs of opposite arcs . in the following",
    "let @xmath69 be a simple directed graph without loops .    for a selected arc @xmath70",
    "there are four different types of directed triangles : * * cyc**lic , * * tra**nsitive , * * in**put and * * out**put .    [ cols=\"^ \" , ]     for cyclic @xmath71-gones we define ( similarly as for undirected graphs ) :    a sequence @xmath72 of cycles of length at most @xmath0 and at least 2 of @xmath10 ( _ vertex _ ) _ cyclic @xmath0-gonally connects _",
    "vertex @xmath6 with vertex @xmath7 , iff    1 .",
    "@xmath73 , 2 .",
    "@xmath74 , and 3 .",
    "@xmath75 for  @xmath20 .",
    "such a sequence is called a ( _ vertex _ ) _ cyclic @xmath0-gonal chain_.    vertex @xmath6 is ( _ vertex _ ) _ cyclic @xmath0-gonally connected _ with vertex @xmath7 , @xmath76 , iff @xmath9 or there exists a ( vertex ) cyclic @xmath0-gonal chain that ( vertex ) cyclic @xmath0-gonally connects vertex @xmath11 with vertex @xmath12 .",
    "a sequence @xmath72 of cycles of length at most @xmath0 and at least 2 of @xmath10 _ arc cyclic @xmath0-gonally connects _",
    "vertex @xmath6 with vertex @xmath7 , iff    1 .",
    "@xmath73 , 2 .",
    "@xmath74 , and 3 .",
    "@xmath77 for  @xmath20 .",
    "such a sequence is called an _ arc cyclic @xmath0-gonal chain_.    vertex @xmath6 is _ arc cyclic @xmath0-gonally connected _ with vertex @xmath7 , @xmath78 , iff @xmath9 or there exists an arc cyclic @xmath0-gonal chain that arc cyclic @xmath0-gonally connects vertex @xmath11 with vertex @xmath12 .",
    "for @xmath79 and @xmath80 similar theorems hold as for @xmath81 and @xmath82 .",
    "[ weakstrong.k ] a weakly connected cyclic @xmath0-gonal graph is also strongly connected .",
    "take any pair of vertices @xmath11 and @xmath12 .",
    "since @xmath10 is weakly connected there exists a semipath connecting @xmath11 and @xmath12 . each arc on this semipath belongs to at least one @xmath71-cycle .",
    "therefore its end - points are connected by a path in opposite direction ",
    "we can construct a walk from @xmath11 to @xmath12 and also a walk from @xmath12 to @xmath11 .",
    "cyclic @xmath0-gonal connectivity @xmath79 is an equivalence relation on the set of vertices @xmath23 .",
    "reflexivity follows directly from the definition of the relation @xmath79 .",
    "since the reverse of a cyclic @xmath0-gonal chain from @xmath11 to @xmath12 is a cyclic @xmath0-gonal chain from @xmath12 to @xmath11 , the relation @xmath79 is symmetric .",
    "let @xmath11 , @xmath12 and @xmath53 be such vertices , that @xmath83 and @xmath84 . if the vertices are not pairwise different , the transitivity condition is trivialy true .",
    "assume now that they are pairwise different . because of @xmath83 and @xmath84 there exist cyclic @xmath0-gonal chains from @xmath11 to @xmath12 and from @xmath12 to @xmath53 .",
    "their concatenation is a cyclic @xmath0-gonal chain from @xmath11 to @xmath53",
    ". therefore also @xmath85 .",
    "an arc is _ cyclic _ iff it belongs to some cycle ( of any length ) in the graph @xmath86 .",
    "the cyclic arcs that do not belong to some @xmath71-cycle are called _ @xmath0-long _ ( range ) arcs .    if the graph @xmath86 does not contain @xmath0-long arcs then its cyclic @xmath0-gonal reduction @xmath87 , where for @xmath88 , is an acyclic graph .",
    "suppose that cyclic @xmath0-gonal reduction of graph @xmath10 is not acyclic .",
    "then it contains a cycle @xmath89 , which can be extended to a cycle @xmath90 of graph @xmath10 .",
    "let @xmath91 be any arc of @xmath89 and let @xmath92 be a corresponding arc of @xmath90 . because the end - points of @xmath91 are different , the end - points of @xmath92 belong to two different components of the relation @xmath79 .",
    "so @xmath92 does not belong to any cyclic @xmath71-gone .",
    "but @xmath92 is cyclic ( it belongs to cycle @xmath90 ) , so it is a @xmath0-long arc .",
    "this is a contradiction .",
    "therefore , the cyclic @xmath0-gonal reduction of graph @xmath10 must be acyclic .    from this proof",
    "we also see how to identify the @xmath0-long arcs .",
    "they are exactly the arcs that are reduced to cyclic arcs in @xmath93 .",
    "the relation @xmath80 determines an equivalence relation on the set of arcs @xmath94 .",
    "let the relation @xmath95 on @xmath94 be defined as : @xmath96 , iff @xmath97 or there exists an arc cyclic @xmath0-gonal chain @xmath98 , where @xmath99 and @xmath100 .",
    "reflexivity of @xmath95 follows from its definition .    the symmetry is simple too .",
    "let be @xmath96 .",
    "then there exists an arc cyclic @xmath0-gonal chain from @xmath24 to @xmath101 .",
    "its reverse is an arc cyclic @xmath0-gonal chain from @xmath101 to @xmath24 , so @xmath102 .    and transitivity .",
    "let @xmath24 , @xmath101 and @xmath103 be such arcs , that @xmath96 and @xmath104 .",
    "there exist an arc cyclic @xmath0-gonal chain from @xmath24 to @xmath101 and an arc cyclic @xmath0-gonal chain from @xmath101 to @xmath103 .",
    "the concatenation of these two chains is an arc cyclic @xmath0-gonal chain from @xmath24 to @xmath103 ( the @xmath71-cycles in the contact of the chains both contain the arc @xmath101 , so their intersection is not empty ) . therefore also @xmath105 .",
    "the vertices @xmath106 are ( _ vertex _ ) _ strongly @xmath0-gonally connected _ , @xmath107 , iff @xmath9 or there exists strongly connected @xmath0-gonal subgraph that contains @xmath11 and @xmath12 .",
    "it is easy to see that @xmath108 .",
    "the relationships between these relations can be presented by a diagram :    @xmath109    we can define three networks , that can provide us with more detailed picture about the network structure :    * _ feedback network _",
    "@xmath110 where @xmath111 is the number of different @xmath71-cycles containing the arc @xmath92 . *",
    "_ transitive network _",
    "@xmath112 where @xmath113 is the number of different transitive @xmath71-semicycles containing the arc @xmath92 as the transitive arc ( shortcut ) .",
    "* _ support network _",
    "@xmath114 where @xmath115 is the number of different transitive @xmath71-semicycles containing the arc @xmath92 as a nontransitive arc .",
    "let @xmath116 be the relation of strong connectivity , @xmath117 .",
    "then @xmath118    let @xmath83 holds in graph @xmath10 . if @xmath9 , it is also true , that @xmath119 in graph @xmath120 .",
    "if the vertices are different , there exists cyclic @xmath0-gonal chain in @xmath10 from @xmath11 to @xmath12 .",
    "each arc in this chain belongs to at least one @xmath71-cycle , so the whole chain is in @xmath120 .",
    "vertices @xmath11 and @xmath12 are mutually reachable by arcs of this chain , so @xmath119 in @xmath120 .",
    "let @xmath119 holds in graph @xmath120 .",
    "then in graph @xmath120 exists a walk from @xmath11 to @xmath12 .",
    "because @xmath120 is cyclic @xmath0-gonal , each arc on this walk belongs to at least one @xmath71-cycle , so we can construct a cyclic @xmath0-gonal chain from @xmath11 to @xmath12 in @xmath120 . because @xmath120 is subgraph of @xmath10 ,",
    "this chain is also in @xmath10 , which means that @xmath83 holds in graph @xmath10 .",
    "let @xmath121 denotes the @xmath0-transitive reachability relation in a given directed graph @xmath69 .",
    "vertex @xmath12 is _",
    "@xmath0-transitively reachable _ from vertex @xmath11 , @xmath122 , iff @xmath9 or there exists a walk from @xmath11 to @xmath12 in which each arc is @xmath0-transitive  is a base ( shortcut arc ) of some transitive semicycle of length at most @xmath0 .    the vertices @xmath11 and @xmath12 are mutually @xmath0-transitively reachable , if vertex @xmath11 is @xmath0-transitively reachable from vertex @xmath12 , and vertex @xmath12 is @xmath0-transitively reachable from vertex @xmath11 .",
    "we denote this relation by @xmath123 @xmath124    the relation of mutual @xmath0-transitive reachability @xmath125 is an equivalence relation on the set of vertices @xmath126 .",
    "it is well known that if @xmath127 is a reflexive and transitive relation then @xmath128 is an equivalence relation .",
    "the relation @xmath121 is reflexive by definition , so we have only to prove that it is transitive .",
    "let @xmath11 , @xmath12 and @xmath48 be such vertices that @xmath129 and @xmath130 .",
    "if these vertices are not pairwise different , the transitivity condition is trivialy true . otherwise there exists a walk from @xmath11 to @xmath12 and a walk from @xmath12 to @xmath48 , in which every arc is @xmath0-transitive .",
    "their concatenation is a walk from @xmath11 to @xmath48 , in which every arc is @xmath0-transitive , so @xmath131 .",
    "until now we observed the connectivity by triangles and other short cycles .",
    "intersections of two adjacent cycles in the coresponding chains contained at least one vertex ( vertex connectivity ) or at least one edge / arc ( edge / arc connectivity ) .",
    "this can be generalized to other families of grahps .",
    "let @xmath132 and @xmath133 be two families of graphs . a sequence @xmath134 @xmath135 of subgraphs of @xmath10 _ @xmath136 connects _",
    "vertex @xmath6 with vertex @xmath7 , iff    1 .",
    "@xmath137 , 2 .",
    "@xmath138 , 3 .",
    "@xmath139 for  @xmath140 , and 4 .",
    "@xmath141 for  @xmath20 .",
    "for @xmath142 we can define @xmath143-clique connectivity : @xmath144 , @xmath145    all the previous types of connectivity are special cases of the generalized connectivity : @xmath146    for the generalized connectivity similar theorems hold as for triangular and @xmath0-gonal connectivity .",
    "this work was supported by the ministry of education , science and sport of slovenia , project 05120101 .",
    "special thanks to martin g. everett for copies of his papers on the subject .",
    "eckmann and e. moses , _ curvature of co - links uncovers hidden thematic layers in the world wide web _ , pnas , * 99 * ( 2002 ) 58255829 .",
    "http://mpej.unige.ch/\\symbol{126}eckmann/ps_files/elisha.ps[http://mpej.unige.ch/\\symbol\\{126}eckmann/ps_files/elisha.ps ]",
    "b. fritzke , _ growing cell structures  a self - organizing network for unsupervised and supervised learning _ ,",
    "international computer science institute , berkeley , tr-93 - 026 , 1993 .",
    "g. taubin and j. rossignac , _ geometric compression through topological surgery _ , acm transactions on graphics , * 17 * ( 1998 ) 84115 ."
  ],
  "abstract_text": [
    "<S> short cycles connectivity is a generalization of ordinary connectivity . </S>",
    "<S> instead by a path ( sequence of edges ) , two vertices have to be connected by a sequence of short cycles , in which two adjacent cycles have at least one common vertex . </S>",
    "<S> if all adjacent cycles in the sequence share at least one edge , we talk about edge short cycles connectivity .    it is shown that the short cycles connectivity is an equivalence relation on the set of vertices , while the edge short cycles connectivity components determine an equivalence relation on the set of edges . </S>",
    "<S> efficient algorithms for determining equivalence classes are presented .    </S>",
    "<S> short cycles connectivity can be extended to directed graphs ( cyclic and transitive connectivity ) . for further generalization </S>",
    "<S> we can also consider connectivity by small cliques or other families of graphs . </S>"
  ]
}
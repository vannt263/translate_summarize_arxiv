{
  "article_text": [
    "in this note , we provide a listing for our _ sage  _ @xcite program which computes upper and lower bounds for the minimum rank of a graph .",
    "we first include several example _",
    "sage  _ sessions , illustrating the main function of the program , ` minrank_bounds ` . the lines starting with ` sage : ` are input lines ( the `` sage : '' is not typed ) , while the other lines are output lines . without any options ,",
    "the ` minrank_bounds ` function returns two numbers : a lower bound and an upper bound for the minimum rank . in the following example",
    ", we find that @xmath4 has minimum rank 1 ( i.e. , the lower bound and the upper bound are both 1 ) .",
    ".... sage : minrank_bounds(graphs.completegraph(3 ) )   ( 1 , 1 ) ....    with the ` all_bounds ` option set to ` true ` , the function returns two listings in the format `` name : value '' , where the name is the name of a bound and the value is the upper or lower bound . in the following example , we calculate bounds on the minimum rank of the petersen graph . in the second call",
    ", we see that lower bounds are minimally given by the obvious bound on ranks ( i.e. , the rank has to be at least zero ) and also by a minimal zero forcing set ( a lower bound of 5 ) . for upper bounds",
    ", we have a clique cover which gives a bound of 15 , the fact that the graph is not outer planar ( upper bound of 7 ) , the fact that the graph is not a path ( upper bound of 8) , the fact that the graph is not planar ( upper bound of 6 ) , the fact that the minimum rank is at most @xmath5 ( upper bound of 9 ) , and the trivial upper bound on ranks ( i.e. , the rank is at most @xmath6 ) .",
    ".... sage : minrank_bounds(graphs.petersengraph ( ) ) ( 5 , 6 ) sage : minrank_bounds(graphs.petersengraph ( ) , all_bounds = true ) ( { ' rank ' : 0 , ' zero forcing ' : 5 } , { ' clique cover ' : 15 , ' not outer planar ' : 7 , ' not path ' : 8 , ' not planar ' : 6 , ' order ' : 9 , ' rank ' : 10 } ) ....    if the ` tests ` option is set to a list , then only those tests are run . in the following example",
    ", we compute bounds on the minimum rank of the heawood graph by using the zero forcing test and by testing if the graph is not planar .",
    "the `` rank '' tests are always run ( and always give 0 for a lower bound and @xmath6 for an upper bound ) .    .... sage : minrank_bounds(graphs.heawoodgraph ( ) , all_bounds = true ,   sage :    tests=['zero forcing ' , ' not planar ' ] ) ( { ' rank ' : 0 , ' zero forcing ' : 8 } , { ' not planar ' : 10 , ' rank ' : 14 } ) ....    for more complete documentation and a list of tests that can be run , as well as for several more examples , print the help by typing the function name followed by a question mark : ` minrank_bounds ? ` .",
    "this program contains and uses the minimum rank data listed in @xcite .",
    "in the typeset program listing below , some lines are automatically broken that are not actually broken in the source code . if a line is broken into two lines in the listing , but should appear as one line in the program , then the line will end with @xmath7 and the remainder of the line will start with @xmath8 .      *",
    "upload the accompanying ` minrank.sws ` _ sage  _ worksheet into a notebook , or * copy the contents of the accompanying ` minrank.sage ` file into a cell of a _ sage  _ worksheet , or * load the ` minrank.sage ` file into a running _ sage  _ terminal session .",
    "webpage for the 2006 american institute of mathematics workshop  spectra of families of matrices described by graphs , digraphs , and sign patterns , \" available at http://aimath.org/pastworkshops/matrixspectrum.html .",
    "this webpage has links to the aim minimum rank graph catalog : families of graphs ( available directly at http://aimath.org/pastworkshops/catalog2.html and the aim minimum rank graph catalog : small graphs ( http://aimath.org/pastworkshops/catalog1.html ) .",
    "smallgraphs l. deloss , j. grout , l. hogben , t. mckay , j. smith , g. tims .",
    "table of minimum ranks of graphs of order at most 7 and selected optimal matrices .",
    "arxiv:0812.0870v1 [ math.co ] .",
    "also available at @xcite ."
  ],
  "abstract_text": [
    "<S> the minimum rank of a simple graph @xmath0 is defined to be the smallest possible rank over all symmetric real matrices whose @xmath1th entry ( for @xmath2 ) is nonzero whenever @xmath3 is an edge in @xmath0 and is zero otherwise . </S>",
    "<S> minimum rank is a difficult parameter to compute . </S>",
    "<S> however , there are now a number of known reduction techniques and bounds that can be programmed on a computer ; we have developed a program using the open - source mathematics software _ </S>",
    "<S> sage  _ to implement several techniques . in this note </S>",
    "<S> , we provide the source code for this program </S>",
    "<S> .    * keywords . * minimum rank , maximum nullity , zero forcing number , sage program , mathematical software , symmetric matrix , rank , matrix , tree , planar graph , graph . + * ams subject classifications . * </S>",
    "<S> 05c50 , 15a03 </S>"
  ]
}
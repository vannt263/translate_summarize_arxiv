{
  "article_text": [
    "algorithms for hard optimization problems on intersection graphs of systems of geometric objects is a well studied area in computer science motivated by various applications in wireless networks @xcite , computational biology @xcite and map labeling @xcite .",
    "while most problems remain @xmath5-complete even when restricted to such classes , the restriction of a problem to a geometric class is usually much more tractable algorithmically than the unrestricted problem .",
    "for example , for planar graphs and more generally minor closed families of graphs , the bidimensionality theory of demaine et al .",
    "@xcite simultaneously demonstrates the tractability of most natural problems with respect to subexponential time parameterized algorithms  @xcite , approximation  @xcite and kernelization  @xcite .",
    "for related `` geometric '' classes of graphs that are not closed under taking minors , the picture is considerably more heterogenous and the situation is less understood .",
    "the objective of this article is to take a step towards clearing the picture for geometric graph classes .",
    "most of the known approximation schemes that have been obtained for graph problems on geometric graph classes use a variation of the well - known _ shifting _ technique introduced in the classical works of baker @xcite and of hochbaum and maass @xcite .",
    "hunt et al .",
    "@xcite used the shifting technique to give polynomial time approximation schemes ( ptass ) for a number of problems such as maximum independent set and minimum dominating set on unit disk graphs and @xmath6-precision disk graphs . independently ,",
    "erlebach et al .",
    "@xcite and chan  @xcite generalized the shifting technique and gave ptass for maximum independent set and minimum vertex cover on disk graphs and on intersection graphs of fat objects .",
    "marx in @xcite obtained an efficient polynomial time approximation schemes ( eptas ) for minimum vertex cover on unit disk graphs .",
    "chen in @xcite and demaine et al .",
    "@xcite used similar approaches to obtain a ptas for maximum independent set and minimum @xmath7-dominating set on map graphs .",
    "one of the known limitations of the shifting technique is that it generally only applies to local problems such as vertex cover and variants of dominating set , and fails for non - local problems such as feedback vertex set and cycle packing . for problems on planar and @xmath0-minor - free graphs , bidimensionality is able to handle non - locality by applying _",
    "treewidth _ based decomposition .",
    "it is tempting to ask whether treewidth based decomposition can be useful for other graph classes as well .",
    "in this article we use key ideas from bidimensionality and design a general approach that can be used to give eptass and subexponential time parameterized algorithms for many problems on map graphs and for unit disk graphs , and in some cases on even more general geometric classes of graphs .",
    "we present eptass and subexponential time parameterized algorithms for feedback vertex set , vertex cover , connected vertex cover , diamond hitting set , minimum - vertex feedback edge set on map and unit disk graphs , and for cycle packing and minimum - vertex feedback edge set on unit disk graphs .",
    "our approach is based on the concept of _ truly sublinear treewidth _ , recently introduced by the authors in  @xcite as a tool to give eptass for bidimensional problems on minor closed graph classes .",
    "roughly speaking , a graph class has truly sublinear treewidth if adding @xmath8 vertices to any graph in the class such that the resulting graph is in the class as well , increases its treewidth by @xmath9 for @xmath10 .",
    "the techniques in  @xcite can not be applied directly to map graphs and unit disk graphs , because both graph classes contain arbitrarily large cliques and hence do not have truly sublinear treewidth .",
    "we overcome this obstacle by showing that cliques are the only pathological case .",
    "namely , we prove that map graphs and unit disk graphs that exclude large clique subgraphs have truly sublinear treewidth",
    ". our eptass work in two steps , first we  clean \" the input graph for large cliques , and then we apply the decomposition theorems from  @xcite .",
    "the initial application of bidimensionality was in the design of subexponential parameterized algorithms on planar , and more generally , on @xmath0-minor - free graphs @xcite .",
    "demaine et al .",
    "@xcite used bidimensionality to obtain subexponential parameterized algorithms for dominating set , and more generally , for @xmath11-center on map graphs .",
    "we show that after  cleaning \" unit disk and map graphs from large cliques , it is possible to use bidimensionality to solve many parameterized problems in subexponential time on these classes of graphs . to the best of our knowledge , prior to our work parameterized subexponential algorithms on unit disk graphs were known only for vertex cover @xcite",
    ". the important ingredient of our algorithms are the analogues of excluding grid theorems of robertson et al .",
    "for planar graphs @xcite and of of demaine and hajiaghayi for @xmath0-minor free graphs @xcite . we show that the treewidth of every unit disc or map graph excluding a clique of constant size as a subgraph and excluding a @xmath12 grid as a minor , is @xmath13 .",
    "our algorithms do not require geometric representations of the input graphs .",
    "since recognition of unit disk graphs is @xmath5-hard  @xcite and the exponent of the polynomial bounding the running time of map graph recognition algorithm is about 120  @xcite , the robustness of our algorithms is a serious advantage .",
    "we explore to which degree our approach can be lifted to other classes of graphs .",
    "our investigations show that it is unlikely that the full power of our approach can be generalized to disk graphs or to unit ball graphs in @xmath1  intersection graphs of unit - balls in @xmath1 , @xmath2 .",
    "specifically we prove that feedback vertex set on unit - ball graphs in @xmath3 neither admits a ptass unless p = np , nor a subexponential time algorithm unless the exponential time hypothesis fails .",
    "furthermore we show that disk graphs which exclude the clique on four vertices as a subgraph do not have truly sublinear treewidth . on the other hand , an adaptation of our techniques yields eptass and subexponential time parameterized algorithms for vertex cover and connected vertex cover both on disk graphs and on unit disk graphs in @xmath1 for every fixed integer dimension @xmath4 .",
    "a natural question is whether our results can be extended to handle larger classes of problems on map graphs and unit disk graphs .",
    "it appears that the main obstacle to generalizaing our approach is to design more general clique cleaning procedures .",
    "in particular , marx  @xcite showed that dominating set and independent set are w[1]-hard even on unit disk graphs .",
    "this means that the two problems neither admit eptass nor fpt algorithms unless fpt = w[1 ] , a complexity collapse considered very unlikely . while no clique cleaning procedure is known for these two problems , a simple modification of our techniques show that both problems admit both eptass and subexponential time algorithms on map graphs and unit disk graphs excluding large cliques as subgraphs . thus it seems that we are able to handle exactly the problems for which cliques can be removed efficiently .",
    "in this section we give various definitions which we make use of in the paper .",
    "let  @xmath14 be a graph with vertex set @xmath15 and edge set @xmath16 .",
    "a graph  @xmath17 is a _ subgraph _ of",
    "@xmath14 if  @xmath18 and  @xmath19 .",
    "the subgraph  @xmath17 is called an _ induced subgraph _ of  @xmath14 if  @xmath20 , in this case , @xmath17  is also called the subgraph _ induced by  @xmath21 _ and denoted by  @xmath22 $ ] . for a vertex set @xmath23 , by @xmath24 we denote @xmath25 $ ] .",
    "a graph class @xmath26 is _ hereditary _ if for any graph @xmath27 all induced subgraphs of @xmath14 are in @xmath26 . by @xmath28",
    "we denote ( open ) neighborhood of @xmath29 , that is , the set of all vertices adjacent to @xmath29 . similarly , by @xmath30=n(u )",
    "\\cup \\{u\\}$ ] we define the closed neighborhood .",
    "the degree of a vertex @xmath31 in @xmath14 is @xmath32 .",
    "we denote by @xmath33 the maximum vertex degree in @xmath14 . for a subset @xmath34",
    ", we define @xmath35=\\cup_{v\\in d } n[v]$ ] and @xmath36 \\setminus d$ ] . given an edge @xmath37 of a graph @xmath14 , the graph @xmath38 is obtained from @xmath14 by contracting the edge @xmath39 .",
    "that is , the endpoints @xmath40 and @xmath41 are replaced by a new vertex @xmath42 which is adjacent to the old neighbors of @xmath40 and @xmath41 ( except from @xmath40 and @xmath41 ) .",
    "a graph @xmath0 obtained by a sequence of edge - contractions is said to be a _ contraction _ of @xmath14 .",
    "a graph @xmath0 is a _ minor _ of a graph @xmath14 if @xmath0 is the contraction of some subgraph of @xmath14 and we denote it by @xmath43 .",
    "we also use the following equivalent characterization of minors .    [",
    "prop : branchsets ] a graph @xmath0 is a minor of @xmath14 if and only if there is a map @xmath44 such that for every vertex @xmath45 , @xmath46 $ ] is connected , for every pair of vertices @xmath47 , @xmath48 , and for every edge @xmath49 , there is an edge @xmath50 such that @xmath51 and @xmath52 .",
    "let @xmath53 be two graphs .",
    "a subgraph @xmath17 of @xmath14 is said to be a _ minor - model _ of @xmath0 in @xmath14 if @xmath17 contains @xmath0 as a minor .",
    "@xmath54-grid _ is the cartesian product of two paths of lengths @xmath55 .    *",
    "* treewidth * * a _ tree decomposition _ of a graph @xmath14 is a pair @xmath56 , where @xmath57 is a tree and @xmath58 is a collection of subsets of @xmath59 such that the following conditions are satisfied .",
    "1 .   @xmath60 .",
    "2 .   for each edge",
    "@xmath61 , @xmath62 for some @xmath63 .",
    "3 .   for each @xmath64 the set @xmath65 induces a connected subtree of @xmath57 .",
    "each @xmath66 is called the bag of a tree decomposition .",
    "the _ width _ of the tree decomposition is @xmath67 .",
    "the _ treewidth _ of a graph @xmath14 , @xmath68 , is the minimum width over all tree decompositions of @xmath14 .",
    "* plane , unit disk and map graphs . * in this paper we use the expression _ plane graph _ for any planar graph drawn in the euclidean plane @xmath69 without any edge crossing .",
    "we do not distinguish between a vertex of a plane graph and the point of @xmath69 used in the drawing to represent the vertex or between an edge and the curve representing it .",
    "we also consider plane graph @xmath14 as the union of the points corresponding to its vertices and edges .",
    "we call by _ face _ of @xmath14 any connected component of @xmath70 .",
    "the _ boundary _ of a face is the set of edges incident to it .",
    "if the boundary of a face @xmath71 forms a cycle then we call it a _ cyclic face_. a _ disk graph _ is the intersection graph of a family of ( closed ) disks in @xmath69 .",
    "a _ unit disk graph _ is the intersection graph of a family of unit disks in @xmath69 .",
    "the notion of a map graph is due to chen et al .",
    "@xmath72 is a pair @xmath73 , where @xmath74 is a plane graph and each connected component of @xmath74 is biconnected , and @xmath75 is a function that maps each face @xmath71 of @xmath74 to @xmath76 or @xmath77 in a way that whenever @xmath78 , @xmath71 is a closed face . a face @xmath71 of @xmath74",
    "is called _ nation _ if @xmath78 , _ lake _ otherwise .",
    "the graph associated with @xmath72 is a simple graph @xmath14 , where @xmath15 consists of the nations on @xmath72 and @xmath16 consists of all @xmath79 such that @xmath80 and @xmath81 are adjacent ( that is shares at least one vertex ) .",
    "we call @xmath14 a _ map graph_. by @xmath82 we denote the set of nations of @xmath74 .    * counting monadic second order logic . *",
    "[ countmsop ] the syntax of mso of graphs includes the logical connectives @xmath83 , @xmath84 , @xmath85 , @xmath86 , @xmath87 , variables for vertices , edges , set of vertices and set of edges , the quantifiers @xmath88 , @xmath89 that can be applied to these variables , and the following five binary relations :    1 .",
    "@xmath90 where @xmath29 is a vertex variable and @xmath91 is a vertex set variable .",
    "2 .   @xmath92 where @xmath4 is an edge variable and @xmath93 is an edge set variable .",
    "@xmath94 , where @xmath4 is an edge variable , @xmath29 is a vertex variable , and the interpretation is that the edge @xmath4 is incident on the vertex @xmath29 .",
    "@xmath95 , where @xmath29 and @xmath31 are vertex variables , and the interpretation is that @xmath29 and @xmath31 are adjacent .",
    "equality of variables , @xmath96 , representing vertices , edges , set of vertices and set of edges .    _ counting monadic second - order logic _",
    "( cmso ) is monadic second - order logic ( mso ) additionally equipped with an atomic formula @xmath97 for testing whether the cardinality of a set @xmath91 is congruent to @xmath98 modulo @xmath99 , where @xmath98 and @xmath99 are integers independent of the input graph such that @xmath100 and @xmath101 .",
    "we refer to  @xcite for a detailed introduction to cmso .",
    "min - cmso and max - cmso problems are graph optimization problems where the objective is to find a maximum or minimum sized vertex or edge set satisfying a cmso - expressible property .",
    "in particular , in a min / max - cmso graph problem @xmath102 we are given a graph @xmath14 as input .",
    "the objective is to find a minimum / maximum cardinality vertex / edge set @xmath23 such that the cmso - expressible predicate @xmath103 is satisfied . *",
    "bidimensionality and separability .",
    "* our results concern graph optimization problems where the objective is to find a vertex or edge set that satisfies a feasibility constraint and maximizes or minimizes a problem - specific objective function . for a problem",
    "@xmath102 and vertex ( edge ) set @xmath23 let @xmath104 be the feasibility constraint returning * true * if @xmath23 is feasible and * false * otherwise .",
    "let @xmath105 be the objective function . in most cases",
    ", @xmath105 will return @xmath106 .",
    "we will only consider problems where every instance has at least one feasible solution .",
    "let @xmath107 be the set of all graphs .",
    "for a graph optimization problem @xmath102 let @xmath108 be a function returning the objective function value of the optimal solution of @xmath102 on @xmath14 .",
    "we say that a problem @xmath102 is _ minor - closed _ if @xmath109 whenever @xmath0 is a minor of @xmath14 .",
    "we now define bidimensional problems .",
    "a graph optimization problem @xmath102 is minor - bidimensional if @xmath102 is minor - closed and there is @xmath110 such that @xmath111 for the @xmath112-grid @xmath113 .",
    "in other words , the value of the solution on @xmath113 should be at least @xmath114 .",
    "demaine and hajiaghayi  @xcite define the _ separation _ property for problems , and show how separability together with bidimensionality is useful to obtain eptass on @xmath0-minor - free graphs . in our",
    "setting a slightly weaker notion of separability is sufficient .",
    "in particular the following definition is a reformulation of the requirement @xmath115 of the definition of separability in  @xcite and similar to the definition used in  @xcite to obtain kernels for bidimensional problems .",
    "[ def : sep ] a minor - bidimensional problem @xmath102 has the _ separation _ property if given any graph @xmath14 and a partition of @xmath15 into @xmath116 such that @xmath117 and @xmath118 , and given an optimal solution @xmath119 to @xmath14 , @xmath120 ) \\leq \\kappa_\\pi(g[l ] , opt \\cap l ) +   \\mathcal{o}(|s|)$ ] and @xmath121 ) \\leq \\kappa_\\pi(g[r ] , opt \\cap r ) + \\mathcal{o}(|s|)$ ] .    in definition  [ def : sep ]",
    "we slightly misused notation .",
    "specifically , in the case that @xmath119 is an edge set we should not be considering @xmath122 and @xmath123 but @xmath124)$ ] and @xmath125)$ ] respectively .",
    "* reducibility , @xmath126-transversability and graph classes with truly sublinear treewidth .",
    "* we now define three of the central notions of this article .",
    "a graph optimization problem @xmath102 with objective function @xmath127 is called _ reducible _ if there exist a min / max - cmso problem @xmath128 and a function @xmath129 such that    1 .",
    "there is a polynomial time algorithm that given @xmath14 and @xmath130 outputs @xmath17 such that @xmath131 and @xmath132 , 2 .",
    "there is a polynomial time algorithm that given @xmath14 and @xmath130 , @xmath17 and a vertex ( edge ) set @xmath133 such that @xmath134 holds , outputs @xmath23 such that @xmath135 and @xmath136 .",
    "a graph optimization problem @xmath102 is called @xmath126-transversable if there is a polynomial time algorithm that given a graph @xmath14 outputs a set @xmath137 of size @xmath138 such that @xmath139 .",
    "graph class @xmath26 has _",
    "truly sublinear treewidth with parameter _",
    "@xmath6 , @xmath140 , if for every @xmath141 , there exists @xmath142 such that for any graph @xmath27 and @xmath130 the condition @xmath139 yields that @xmath143 .    throughout this paper @xmath144 denotes a complete graph on @xmath145 vertices and we say that a graph @xmath14 is _ @xmath144-free _ if @xmath14 does not contain @xmath144 as an induced subgraph .",
    "in this section we show that unit disk graphs and map graphs with bounded maximum clique size has truly sublinear treewidth .",
    "we start with the following well known observation ( see ( * ? ? ?",
    "* lemma  3.2 ) ) about @xmath144-free unit disk graphs .",
    "[ obs : timpliesd ] if a unit disk graph @xmath14 is @xmath144-free then @xmath146 .",
    "observation  [ obs : timpliesd ] allows us to prove theorems on unit disk graphs of bounded maximum degree and then use these results for @xmath144-free graphs .",
    "let @xmath14 be a unit disk graph generated by @xmath147 and @xmath148 .",
    "we will associate an auxiliary planar graph @xmath149 with @xmath14 such that the treewidth of these two graphs is linearly related .",
    "let @xmath150 be a planar graph defined as follows .",
    "consider the embedding ( drawing ) of the unit disks @xmath147 in the plane .",
    "let @xmath151 be the set of points in the plane such that each point in the set is on the boundary of at least two disks . essentially , this is the set of points at unit distance to centers of at least two disks .",
    "we place a vertex at each point in @xmath151 and regard the curve between a pair of vertices as an edge , then the embedding of unit disks @xmath147 in the plane gives rise to the drawing @xmath150 of a planar multigraph .",
    "furthermore let @xmath152 be the planar dual of @xmath150 ; it is well known that @xmath152 is also planar .",
    "next we define a notion of _ region _ which is essential for the definition of @xmath149 .",
    "we call a face @xmath153 of the plane graph @xmath150 a _ region _ , if there exists a nonempty subset @xmath154 of unit disks such that every point in @xmath153 is an interior point of each disk in @xmath155 .",
    "hence with every region @xmath153 we can associate a set of unit disks . since the vertices of @xmath14 correspond to disks of @xmath156 , we can associate a subset of vertices of @xmath14 , say @xmath157 , to a region @xmath153 .",
    "we remark that there could be two regions @xmath158 and @xmath159 with @xmath160 .",
    "now we are ready to define the graph @xmath149 .",
    "let @xmath161 be the regions of @xmath150 .",
    "these are faces in @xmath150 and hence in the dual graph @xmath152 we have vertices corresponding to them .",
    "that is , in @xmath152 for every region @xmath162 we have a vertex @xmath163 .",
    "we define @xmath164.\\ ] ] thus , @xmath149 is an induced subgraph of @xmath152 obtained by removing non - region vertices .",
    "figure  [ unitdg ] illustrates the construction of graphs @xmath150 and @xmath149 from unit disks drawing .",
    "next we prove some properties of @xmath149 .     formed by the drawing of four disks ; ( b ) the dual graph @xmath152 of @xmath150 ; ( c ) the graph @xmath149 .",
    "]    [ lem : pgisplanar ] let @xmath14 be a unit disk graph of maximum degree @xmath165 . then @xmath149 is a planar graph and every vertex @xmath166 is a part of at most @xmath167 regions .",
    "the graph @xmath149 is a subgraph of @xmath152 , the planar dual of @xmath150 , and hence it is also planar . let @xmath166 be a vertex .",
    "we consider the embedding ( drawing ) of unit disks corresponding to the vertices of the closed neighborhood @xmath168 $ ] in the plane . then @xmath169|\\leq \\delta + 1 $ ] .",
    "let @xmath170 be the set of the points in the plane such that each point in the set is on the boundary of at least two disks with distinct center points .",
    "this is the induced subgraph of @xmath150 formed by the intersection points of the boundaries of disks from @xmath171 $ ] . since every two circles with distinct center points intersect in at most two points , we have that @xmath172|\\choose 2}\\leq 2 { \\delta+1 \\choose 2}= \\delta^2+\\delta$ ] .",
    "consider the planar graph @xmath173 $ ] , which is a subgraph of @xmath150 induced by @xmath174 .",
    "observe that @xmath31 can only be a part of regions defined by faces of @xmath173 $ ] . to obtain an upper bound on the number of faces of",
    "@xmath173 $ ] , we first obtain an upper bound on the number of edges of @xmath173 $ ] .",
    "first observe that between any pair of vertices in @xmath173 $ ] there can at most be two edges and there are at most @xmath175 pairs that have two edges between them .",
    "it is well known that a planar graph on @xmath98 vertices without any parallel edges has at most @xmath176 edges .",
    "thus , the number of edges in @xmath173 $ ] is at most @xmath177 .",
    "now by euler s formula , the number of faces in @xmath173 $ ] is at most @xmath178)|-|{\\cal l}|\\leq 2 + 3 |{\\cal l}|-6\\leq 2 + 3(\\delta^2+\\delta)-6\\leq 3(\\delta^2+\\delta).\\ ] ] thus @xmath31 is a part of at most @xmath167 regions .",
    "we complete the proof by making a remark that the euler s formula also holds for graphs with multiple edges .",
    "[ lem : twofg ] let @xmath14 be a unit disk graph",
    ". then @xmath179 .",
    "let @xmath148 and @xmath180 be a tree decomposition of @xmath149 of width @xmath181 .",
    "we build a tree decomposition @xmath56 of @xmath14 from the tree - decomposition @xmath180 of @xmath149 .",
    "let @xmath182 be the subset of @xmath183 associated with the node @xmath184 of @xmath57 .",
    "we define @xmath185 .",
    "recall that @xmath157 is a subset of vertices in @xmath15 characterizing @xmath153 .",
    "this concludes the description of a decomposition for @xmath14 .",
    "observe that the set @xmath157 is contained in @xmath186 $ ] for every @xmath187 and hence the size of each of them is bounded above by @xmath188 .",
    "hence the size of each of @xmath66 is at most @xmath189 .",
    "this implies that the size of every bag @xmath66 is at most @xmath190 .",
    "now we show that this is indeed a tree - decomposition for @xmath14 by proving that it satisfies the three properties of a tree decomposition . by construction , every vertex of @xmath15 is contained in some @xmath66 . to show that for every edge @xmath191 there is a node @xmath184 such that @xmath192 , we argue as follows .",
    "if there is an edge between @xmath29 and @xmath31 in @xmath14 then unit disks corresponding to these vertices intersect and hence there is a region @xmath153 which is completely contained inside this intersection .",
    "this implies that @xmath193 . for node @xmath184",
    "such that @xmath194 is contained inside @xmath182 , we have that the corresponding bag @xmath66 contains @xmath29 and @xmath31 .",
    "to conclude we need to show that for each @xmath195 the set @xmath196 induces a subtree of @xmath57 .",
    "observe that @xmath31 appears in all the bags corresponding to node @xmath184 such that @xmath182 contains a vertex corresponding to a region which @xmath31 is a part of .",
    "this implies that all these regions are inside the unit disk corresponding to @xmath31 .",
    "hence the graph induced by vertices corresponding to these regions is connected .",
    "thus the set @xmath197 induces a subtree of @xmath57 .",
    "we now show a linear excluded grid theorem for unit disk graphs of bounded degree .",
    "[ lem : udglingrid ] any unit disk graph @xmath14 with maximum degree @xmath165 contains a @xmath198 grid as a minor .",
    "let @xmath14 be a unit disk graph of maximum degree @xmath165 , and define @xmath149 as above . since @xmath149 is planar , by the excluded grid theorem for planar graphs  @xcite",
    ", @xmath149 contains a @xmath199 grid as a minor where @xmath200 . by proposition",
    "[ prop : branchsets ] , we know that there is a minor model of this grid , say @xmath201 : 1\\leq i , j \\leq t\\}$ ] . we know that for every @xmath184,@xmath202 , @xmath203 $ ] is connected , the sets @xmath204 $ ] are pairwise disjoint and finally for every @xmath184,@xmath202,@xmath205,@xmath206 such that @xmath207 there is an edge in @xmath149 with one endpoint in @xmath204 $ ] and the other in @xmath208 $ ] . for every @xmath184,@xmath202 , we build @xmath209 $ ] from @xmath204 $ ] by replacing every vertex @xmath210 $ ] by @xmath157 and removing duplicates .",
    "we set @xmath211 , and observe that for any vertex @xmath31 in @xmath14 , lemma  [ lem : pgisplanar ] implies that there are at most @xmath212 sets @xmath209 $ ] that contain @xmath31 .",
    "we say that an integer pair @xmath213 is _ internal _ if @xmath214 and @xmath215 . we prove that for any two internal pairs @xmath213 and @xmath216 such that @xmath217 the sets @xmath209 $ ] and @xmath218 $ ] are disjoint . to obtain a contradiction",
    "assume that both sets contain a vertex @xmath31 in @xmath14 .",
    "let @xmath219 be the set of vertices @xmath194 such that @xmath220 .",
    "we will show that @xmath221 which contradicts that @xmath31 is part of at most @xmath212 regions . on one hand ,",
    "$ ] is connected . on the other hand , both @xmath204 \\cap x_v$ ] and @xmath208 \\cap x_v$ ]",
    "are non - empty . but",
    "any path in @xmath149 between a vertex in @xmath204 $ ] and a vertex in @xmath208 $ ] must pass through at least @xmath223 cycles of the grid minor and thus the length of a shortest path between a pair of vertices , @xmath224 \\cap x_v)$ ] and @xmath225 \\cap x_v$ ] ) , is at least @xmath223 .",
    "this implies that the length of a shortest path between @xmath40 and @xmath41 in @xmath222 $ ] is at least @xmath223 and hence @xmath221 , yielding the desired contradiction . by an identical argument",
    "one can show that , for any two internal pairs @xmath213 and @xmath216 such that @xmath226 there is no edge with one endpoint in @xmath209 $ ] and the other in @xmath218 $ ] .    for every pair @xmath227 of non - negative integers such that @xmath228 and @xmath229 we define the sets    * @xmath230 = \\bigcup_{i=0}^{2\\delta-1}\\bigcup_{j=0}^{2\\delta-1 } s[\\delta+4\\delta a+i,\\delta+4\\delta b+j]$ ] .",
    "* @xmath231 = \\bigcup_{i=0}^{2\\delta-1 } s[3\\delta+4\\delta a+i,2\\delta+4\\delta b]$ ] . *",
    "@xmath232 = \\bigcup_{j=0}^{2\\delta-1 } s[2\\delta+4\\delta a,3\\delta+4\\delta b+j]$ ] .",
    "one can think of each set @xmath230 $ ] as a vertex of a grid , with each set @xmath231 $ ] being a horizontal edge and each set @xmath232 $ ] being a vertical edge in this grid .",
    "build @xmath233 $ ] from @xmath230 $ ] by replacing every vertex @xmath234 $ ] by @xmath157 and removing duplicates .",
    "construct @xmath235 $ ] from @xmath231 $ ] and @xmath236 $ ] from @xmath232 $ ] similarly .",
    "we list the properties of the sets @xmath233 $ ] , @xmath235 $ ] and @xmath236 $ ] .    1 .",
    "[ pnt : connect ] for every @xmath237 , @xmath238 , @xmath239 $ ] , @xmath240 $ ] and @xmath241 $ ] are connected .",
    "[ pnt : disj1 ] distinct sets @xmath233 $ ] and @xmath242 $ ] are pairwise disjoint , and there is no edge with one endpoint in @xmath233 $ ] and the other in @xmath242 $ ] .",
    "[ pnt : disj2 ] for every @xmath237 , @xmath238 the set @xmath235 $ ] is disjoint from every set @xmath243 $ ] , @xmath244 $ ] and @xmath242 $ ] , except possibly for @xmath233 $ ] and @xmath245 $ ] .",
    "[ pnt : disj3 ] for every @xmath237 , @xmath238 the set @xmath236 $ ] is disjoint from every set @xmath243 $ ] , @xmath244 $ ] and @xmath242 $ ] , except possibly for @xmath233 $ ] and @xmath246 $ ] .",
    "[ pnt : adj ] for every @xmath237 , @xmath238 there is a vertex in @xmath235 $ ] which is adjacent to @xmath233 $ ] and a vertex which is adjacent to @xmath245 $ ] .",
    "furthermore there is a vertex in @xmath236 $ ] which is adjacent to @xmath233 $ ] and a vertex which is adjacent to @xmath246 $ ] .",
    "property  [ pnt : connect ] follows directly from the fact that @xmath247 $ ] , @xmath248 $ ] and @xmath249 $ ] are connected .",
    "properties  [ pnt : disj1 ] , [ pnt : disj2 ] and  [ pnt : disj3 ] follow from the fact that for any two internal pairs @xmath213 and @xmath216 such that @xmath226 the sets @xmath209 $ ] and @xmath218 $ ] are disjoint and have no edges between each other .",
    "finally , property  [ pnt : adj ] follows from the fact that for every @xmath237,@xmath238 there is a vertex in @xmath231 $ ] which is adjacent to @xmath230 $ ] and a vertex which is adjacent to @xmath250 $ ] , and that there is a vertex in @xmath232 $ ] which is adjacent to @xmath230 $ ] and a vertex which is adjacent to @xmath251 $ ] .    for a pair @xmath237 ,",
    "@xmath238 of integers consider the set @xmath235 $ ] .",
    "the properties  [ pnt : connect ] , [ pnt : disj1 ] and  [ pnt : adj ] ensure that some connected component @xmath252 $ ] of @xmath253 \\setminus ( v'[a , b ] \\cup v'[a+1,b])]$ ] contains at least one neighbour of @xmath233 $ ] and one neighbour of @xmath245 $ ] . similarly at least one connected component @xmath254 $ ] of @xmath255 \\setminus ( v'[a , b ] \\cup v'[a , b+1])]$ ] contains at least one neighbour of @xmath233 $ ] and one neighbour of @xmath246 $ ]",
    ". then the family @xmath256 , e^*_h[a , b ] , e^*_v[a , b ] : 4\\delta ' a + 2\\delta ' \\leq t \\mbox { and } 4\\delta ' b + 2\\delta ' \\leq t\\}\\ ] ] of vertex sets in @xmath14 forms a model of a @xmath257 grid minor in @xmath14 with every edge subdivided once . the sets @xmath233 $ ] are models of the vertices of the grid , the sets @xmath252 $ ] are models of the subdivision vertices on the horizontal edges , while @xmath254 $ ] are models of the subdivision vertices on the vertical edges . now by lemma  [ lem : twofg ] , we know that @xmath258 . combining this with the fact that @xmath200 we can show that @xmath14 has a grid of size @xmath198 as a minor .",
    "this concludes the proof .    using lemma  [ lem : udglingrid ] we show the following theorem and then combining this theorem with observation  [ obs : timpliesd ] we get an analogous result for @xmath144-free unit disk graphs .",
    "[ thm : tstdiscgraphs ] let @xmath259 be the class of unit disk graphs such that the maximum degree of every graph @xmath14 in @xmath259 is at most @xmath165",
    ". then @xmath259 has truly sublinear treewidth with @xmath260 .",
    "let @xmath261 have a vertex set @xmath137 such that @xmath139 .",
    "suppose for contradiction that @xmath262 .",
    "then , by lemma  [ lem : udglingrid ] , @xmath14 contains a @xmath263 grid as a minor .",
    "this grid contains @xmath264 vertex disjoint @xmath265 grids .",
    "however , the set @xmath137 must intersect each of these grids , as @xmath139 and the treewidth of each grid is @xmath266 .",
    "but then @xmath267 , a contradiction .",
    "[ cor : tstdiscgraphs ] let @xmath268 be the class of unit disk graphs such that every graph @xmath14 in @xmath268 is @xmath144 free",
    ". then @xmath268 has truly sublinear treewidth with @xmath260 .      in this section",
    "we show that map graphs with bounded clique size have truly sublinear treewidth .",
    "it is known that for every map graph @xmath14 one can associate a map @xmath269 such that ( i ) no vertex in @xmath74 is incident only to lakes ; ( ii ) there are no edges in @xmath74 whose two incident faces are both lakes ( possibly the same lake ) ; ( iii ) every vertex in @xmath74 is incident to at most one lake , and incident to such a lake at most once  @xcite . from now",
    "onwards we will assume that we are given map satisfying the above properties .",
    "for our proof we also need the following combinatorial lemma .",
    "[ lem : mapboundeddegree ] let @xmath14 be a map graph associated with @xmath72 such that the maximum clique size in @xmath14 is at most @xmath145 .",
    "then the maximum vertex degree of @xmath74 is at most @xmath270 .",
    "targeting towards a contradiction , let us assume that there is a vertex @xmath271 of degree at least @xmath272 .",
    "by definition , each connected component of @xmath74 is biconnected and hence there are at least @xmath270 cyclic faces adjacent to @xmath31 . by the properties of @xmath72 , we have that all , except maybe one , adjacent faces are not lakes . however the vertices corresponding to nation faces form a clique of size @xmath273 in @xmath14 , a contradiction .    for our proof",
    "we also need the notions of radial and dual of map graphs .",
    "the _ radial graph _",
    "@xmath274 has a vertex for every vertex of @xmath74 and for every nation of @xmath74 , and @xmath113 is a bipartite graph with bipartition @xmath275 and @xmath82 .",
    "two vertices @xmath276 and @xmath277 are adjacent in @xmath113 if @xmath31 is incident to nation @xmath71 .",
    "the _ dual _ @xmath278 of @xmath72 has vertices corresponding only to the nations of @xmath74 .",
    "the graph @xmath93 has a vertex for every nation of @xmath74 , and two vertices are adjacent in @xmath93 if the corresponding nations of @xmath14 share an edge .",
    "we now show a linear excluded grid theorem for map graphs with bounded maximum clique .",
    "[ lem : maplingrid ] there exists a constant @xmath279 such that any map graph @xmath14 with maximum clique size @xmath145 contains a @xmath280 grid minor .",
    "let @xmath72 be the map such that the graph associated with it is @xmath14 .",
    "we now apply the result from  ( * ? ? ?",
    "* lemma 4 ) that states that the treewidth of the map graph @xmath14 is at most the product of the maximum vertex degree in @xmath74 and @xmath281 . by lemma  [ lem : mapboundeddegree ] , we know that the maximum vertex degree of @xmath74 is at most @xmath270 , and hence @xmath282 .",
    "we now apply  ( * ? ? ?",
    "* lemma 3 ) which bounds the treewidth of a radial graph of a map .",
    "in particular , by  ( * ? ? ? * lemma 3 ) we have that for @xmath113 , the radial graph of @xmath72 , @xmath283 .",
    "this implies that @xmath284 .",
    "observe that the graph @xmath93 , the dual of @xmath72 , is a planar subgraph of @xmath14 . by a result of robertson et al .",
    "@xcite , we have that for every planar graph @xmath0 there exists a constant @xmath4 such that it has @xmath285 grid graph as a minor .",
    "this implies that there exists a constant @xmath4 such that @xmath93 has @xmath286 grid graph as a minor .",
    "this combined with facts that @xmath284 and @xmath93 is a subgraph of @xmath14 implies that there exists a constant @xmath279 such that @xmath14 has @xmath287 grid graph as a minor .",
    "[ thm : tstmapgraphs ] let @xmath288 be the class of map graphs such that the every graph @xmath289 is @xmath144-free",
    ". then @xmath288 has truly sublinear treewidth with @xmath260 .",
    "let @xmath290 have a vertex set @xmath137 such that @xmath139 .",
    "suppose for contradiction that @xmath291 .",
    "then , by lemma  [ lem : maplingrid ] , @xmath14 contains a @xmath263 grid as a minor .",
    "this grid contains @xmath264 vertex disjoint @xmath265 grids .",
    "however , the set @xmath137 must intersect each of these grids , as @xmath139 and the treewidth of each grid is @xmath266 .",
    "but then @xmath267 , a contradiction .      our result in section  [ sec : udgoofbd ] can easily be generalized to disk graphs of bounded degree .",
    "there is another widely used concept of _ ply _ related to geometric graphs which has turned out be very useful algorithmically @xcite .",
    "an intersection graph @xmath14 generated by set of disks @xmath147 ( not necessarily unit disks ) is said to have ply @xmath293 if every point in the plane is contained inside at most @xmath293 disks in @xmath156 . observe that if a unit disk graph has bounded ply then it also has bounded vertex degree but this is not true for disk graphs . here , we show that already disk graphs with ply @xmath115 and @xmath292-free disk graphs do not have truly sublinear treewidth .",
    "[ thm : k4freediscgraphs ] @xmath292-free disk graphs and disk graphs graphs with ply @xmath115 do not have truly sublinear treewidth .",
    "for the proof of theorem  [ thm : k4freediscgraphs ] , we need the concept of a bramble .",
    "bramble _ in a graph @xmath14 is a family of connected subgraphs of @xmath14 such that any two of these subgraphs have a nonempty intersection or are joined by an edge .",
    "the _ order _ of a bramble is the minimum number of vertices required to hit all subgraphs in the bramble .",
    "seymour and thomas  @xcite proved that a graph has treewidth @xmath8 if and only if the maximum order of a bramble of @xmath14 is @xmath294 .",
    "thus a bramble of order @xmath294 is a witness that the graph has treewidth at least @xmath8 .",
    "we will use this characterization to get a lower bound on the treewidth of the graph we construct .",
    "we define a family @xmath295 of disk graphs of ply @xmath115 such that for every @xmath296 we can find a set @xmath297 such that @xmath298 while @xmath299 . given a natural number @xmath300 , our graph @xmath301 is defined as follows .",
    "we give the coordinates for centers of these disks .",
    "* we have  small \" disks of radius @xmath302 centered at @xmath303 for @xmath304 and @xmath305 .",
    "* we have  large \" disks with radius @xmath306 centered at @xmath307 , @xmath308 .     for @xmath309    intuitively , we have small disks stacked in @xmath145 rows , where in each row two consecutive disks intersect . large disks intersect some unit disks in each row and they are pairwise disjoint among themselves",
    ". see figure  [ ply3 ] , for an example of our construction .",
    "let @xmath301 be the disk graph obtained from the intersection of disks placed as above .",
    "observe that every point in the plane only occurs in at most @xmath115 disks and hence the ply of the graph is @xmath115 .",
    "furthermore , since at most @xmath115 disks mutually intersect we have that @xmath14 is also @xmath292-free .",
    "let @xmath310 be the set of vertices corresponding to small disks in rows and @xmath137 be the set of remaining vertices .",
    "observe that the graph induced by @xmath310 is a set of vertex disjoint paths and hence @xmath311 ) = { { \\mathbf{tw}}}(g_t \\setminus x ) = 1 $ ] .",
    "we show that the treewidth of @xmath301 is at least @xmath312 by exhibiting a bramble of order @xmath145 .",
    "let us take the following set @xmath313 , @xmath314 .",
    "the set @xmath313 consists of vertices corresponding to small disks centered at @xmath315 , where @xmath304 and a vertex corresponding to large disk with radius @xmath306 centered at @xmath316 . since the disk with radius @xmath306 intersects at least one small disk in each row we have that the sets @xmath313 mutually intersect .",
    "furthermore @xmath317 for all @xmath318 .",
    "this implies that the smallest number of vertices required to cover all @xmath313 is at least @xmath145 .",
    "this implies that @xmath319 .",
    "in this section we show that every reducible minor - bidimensional problem with the separation property has eptas on unit disk graphs and map graphs with bounded maximum clique .",
    "finally , we will show how we can extend these results to unit disk graphs and map graphs for variety of problems .",
    "we recall that a ptas is an algorithm which takes an instance @xmath320 of an optimization problem and a parameter @xmath321 and , runs in time @xmath322 , produces a solution that is within a factor @xmath323 of being optimal . a ptas with running time @xmath324 , is called an efficient ptas ( eptas ) .          to use this result",
    "we only need to show that every reducible minor - bidimensional problem with the separation property is @xmath126-transversable for some @xmath126 on @xmath268 and @xmath288 . for every fixed integer @xmath126 we define the @xmath126-transversal problem as follows .",
    "input is a graph @xmath14 , and the objective is to find a minimum cardinality vertex set @xmath325 such that @xmath326 .",
    "we now give a polynomial time constant factor approximation for the @xmath126-transversal problem on @xmath268 and @xmath288 .",
    "the proof of the following result is similar to the one in  ( * ? ? ?",
    "* lemma 4.1 ) .",
    "we give the proof here for completeness .",
    "[ lem : transversapproxudcmap ] for every integer @xmath126 there is a constant @xmath327 and a polynomial time @xmath327-approximation algorithm for the @xmath126-transversal problem on @xmath268 and @xmath288 .",
    "[ lem : thelemma ] let @xmath26 be a hereditary graph class of truly sublinear treewidth with parameter @xmath6 . for any @xmath10 there is a @xmath328 such that for any @xmath27 and @xmath130 with @xmath139 there is a @xmath329 satisfying @xmath330 and for every connected component @xmath331 of @xmath332 we have @xmath333 and @xmath334 .",
    "moreover @xmath335 can be computed from @xmath14 and @xmath137 in polynomial time , where the polynomial is independent of @xmath323 , @xmath6 and @xmath126 .",
    "[ proof of lemma  [ lem : transversapproxudcmap ] ] let @xmath137 be a smallest vertex set in @xmath14 such that @xmath139 .",
    "by lemma  [ lem : thelemma ] with @xmath336 there exists a @xmath328 depending only on @xmath145 and @xmath126 and a set @xmath335 with @xmath337 such that for any component @xmath331 of @xmath332 , @xmath333 and @xmath334 . since @xmath137 is the _",
    "smallest _ set such that @xmath139 , there is a component @xmath331 of @xmath332 with treewidth strictly more than @xmath126 .",
    "let @xmath338 and observe that @xmath339 is a set of size at most @xmath328 such that @xmath331 is a connected component of @xmath340 .",
    "the algorithm proceeds as follows .",
    "it tries all possibilities for @xmath197 and looks for a connected component @xmath331 of @xmath340 such that @xmath341 ) = o(\\sqrt{\\gamma})$ ] .",
    "it solves the @xmath126-transversal problem optimally on @xmath342 $ ] by noting that @xmath126-transversal can be formulated as a min - cmso problem and applying the algorithm by borie et al .",
    "let @xmath343 be the solution obtained for @xmath342 $ ] .",
    "the algorithm adds @xmath343 and @xmath344 to the solution and repeats this step on @xmath345 as long as @xmath346 .",
    "clearly , the set returned by the algorithm is a feasible solution .",
    "we now argue that the algorithm is a @xmath347-approximation algorithm .",
    "let @xmath348 , @xmath349 , @xmath350 be the components found by the algorithm in this manner . since @xmath137 must contain at least one vertex in each @xmath351 it follows that @xmath352 .",
    "now , for each @xmath184 , @xmath353 contains at most @xmath328 vertices outside of @xmath354 .",
    "thus @xmath355 . furthermore for each @xmath331 , @xmath356 and hence the size of the returned solution is at most @xmath357 , which proves the lemma .    by exchanging the excluded grid theorem for @xmath0-minor free graphs by linear grid lemmas ( lemmas  [ lem : udglingrid ] and  [ lem : maplingrid ] )",
    ", we can adapt the proof of  ( * ? ? ?",
    "* lemma 3.2 ) to show the following .",
    "[ lem : minor_bidem ] let @xmath102 be a minor - bidimensional problem with the separation property . there exists a constant @xmath126 such that for every @xmath14 in @xmath268 or @xmath288 , there is a subset @xmath325 such that @xmath358 , and @xmath359 .",
    "we prove our result for graphs in @xmath268 .",
    "the result for graphs in @xmath288 is analogous .",
    "since @xmath102 is a minor - bidimensional problem , there exists a constant @xmath365 such that @xmath366 on @xmath367 grid minor .",
    "the definition of minor - bidimensionality together with lemma  [ lem : udglingrid ] imply that for every @xmath368 we have that @xmath369 .",
    "thus , there is a constant @xmath370 depending on @xmath145 and @xmath371 such that @xmath372 .",
    "we want to construct a set @xmath137 such that the treewidth of @xmath378 $ ] is at most @xmath126 ( to be fixed later ) .",
    "let us fix a solution @xmath197 of size @xmath379 for @xmath14 and a weight function @xmath380 that assigns @xmath77 to every vertex in @xmath197 and @xmath76 otherwise .",
    "by lemma  [ lemma : balsep1 ] , there is a partition of @xmath15 into @xmath381 , @xmath23 and @xmath113 such that @xmath382 , @xmath117 , @xmath118 , @xmath383 and @xmath384 . by deleting @xmath23 from the graph @xmath14 , we obtain two graphs @xmath385 $ ] and @xmath386 $ ] with no edges between them",
    ". since @xmath102 is separable , there exists a constant @xmath387 such that @xmath120 ) \\leq",
    "|z\\cap l|+\\beta |s|$ ] and @xmath121 ) \\leq",
    "|z\\cap r|+\\beta |s|$ ] .",
    "thus we put @xmath23 into @xmath137 and then proceed recursively in @xmath385 $ ] and @xmath386 $ ] . since @xmath102 is minor - bidimensional problem with the separation property , we have that in recursive step for a graph @xmath17 with solution of size @xmath293 we find a separator of size @xmath388 .",
    "we set @xmath389 .",
    "then the size of the set @xmath137 we are looking for is governed by the following recurrence .",
    "we first set two constants @xmath391 and @xmath328 which will be used in the proof of above recurrence .",
    "set @xmath392 and @xmath393 .",
    "the base case of the recursion is when @xmath394 and once we reach this case , we do not decompose the graph any further .",
    "thus for the base case we set @xmath395 . now using induction",
    "we can show that the size of @xmath396 and for every component @xmath331 in @xmath378 $ ] we have that @xmath397 . we first show that if @xmath398 then @xmath399 by induction on @xmath8 .",
    "for the base case if @xmath400 then the choice of @xmath328 implies that @xmath401 .",
    "the last inequality holds whenever @xmath408 , which is ensured by the choice of @xmath391 and the fact that @xmath409 .",
    "thus @xmath410 for all @xmath8 .",
    "this proves the bound on the size of @xmath137 .",
    "notice that every component @xmath331 in @xmath378 $ ] has at most @xmath411 vertices and thus by bidimensionality we have that @xmath412 .",
    "we set @xmath126 as the @xmath413 , where @xmath414 is the constant appearing in the term @xmath415 .",
    "this proves the theorem .      combining lemmas [ lem : transversapproxudcmap ] and [ lem : minor_bidem ]",
    "we get that every reducible minor - bidimensional problem @xmath102 with the separation property is @xmath126-transversable for some @xmath126 on @xmath268 and @xmath288 .",
    "thus the theorem follows by applying proposition  [ thm : eptastrans ] in combination with theorem  [ thm : tstmapgraphs ] and corollary  [ cor : tstdiscgraphs ] .      in this section",
    "we give eptas for several problems on unit disk graphs and map graphs .",
    "our first problem is the following generic problem .",
    "let @xmath295 be a finite set of graphs . in the @xmath416-deletion problem ,",
    "we are given an @xmath98-vertex graph @xmath14 as an input , and asked to find a minimum sized subset @xmath417 such that @xmath418 does not contain a graph from @xmath419 as a minor .",
    "we refer to such a subset @xmath23 as a @xmath295-hitting set .",
    "the @xmath416-deletion  problem is a generalization of several fundamental problems .",
    "for example , when @xmath420 , a complete graph on two vertices , this is the vertex cover problem . when @xmath421 , a cycle on three vertices , this is the feedback vertex set problem .",
    "other famous cases are @xmath422 , @xmath423 and @xmath424 , which correspond to removing vertices to obtain outerplanar graphs , planar graphs , and graphs of pathwidth one respectively . here",
    ", @xmath425 denotes the complete bipartite graph with bipartitions of sizes @xmath184 and @xmath202 , and @xmath426 denotes the complete graph on @xmath184 vertices .",
    "further , a @xmath427 is a star on three leaves , each of whose edges has been subdivided exactly once . in literature ,",
    "these problems are known as outerplanar deletion set , planar deletion set and pathwidth one deletion set respectively .",
    "now we show that if @xmath295 contains a planar graph then @xmath416-deletion has eptas on unit disk graphs and map graphs .",
    "it is known from  @xcite that @xmath416-deletion problem is reducible minor - bidimensional problem with the separation property whenever @xmath295 contains a planar graph .",
    "let @xmath14 be the input graph , @xmath428 be a fixed constant and @xmath295 be an obstruction set containing a planar graph of size @xmath429 .",
    "this implies that any optimal @xmath295-hitting set in @xmath14 must contain all but @xmath430 vertices from any clique in @xmath14 .",
    "we outline a proof below only for unit disk graphs , the proof for map graphs is similar .",
    "the algorithm proceeds as follows .",
    "it finds a maximum clique @xmath331 of @xmath14 .",
    "one can find a maximum sized clique in unit disk graphs and map graphs in polynomial time  @xcite .",
    "the algorithm adds @xmath331 to the solution and repeats this step on @xmath431 as long as there is a clique of size @xmath432 .",
    "once we have that the maximum size of a clique is bounded by @xmath433 , we can use the eptas obtained in theorem  [ thm : udmapeptas ] to get a @xmath295-hitting set of @xmath14 of size @xmath434 , where @xmath119 is the size of a minimum @xmath295-hitting set .",
    "clearly , the set returned by the algorithm is a feasible solution .",
    "we now argue that the algorithm is an eptas .",
    "clearly the running time of our algorithm is of desired form .",
    "as the step where we find a clique and add all its vertices in our solution can be done in polynomial time and finally we run an eptas on a graph where the maximum degree is bounded by a function of @xmath323 .",
    "let @xmath137 be an optimal @xmath295-hitting set of @xmath14 .",
    "let @xmath348 , @xmath349 , @xmath350 be the cliques found by the algorithm and @xmath435 be the graph where we apply theorem  [ thm : udmapeptas ] . since @xmath137 must contain at least @xmath436 vertices and @xmath437 , we have that @xmath438 .",
    "thus the size of the solution returned by the algorithm satisfies the following inequality @xmath439 .",
    "this completes the proof .",
    "next we show how we can obtain an eptas for connected vertex cover on unit disk graphs and map graphs . in connected vertex cover",
    "we are given a graph @xmath14 and the objective is to find a minimum size subset @xmath325 such that @xmath440 $ ] is connected and every edge in @xmath16 has at least one endpoint in @xmath23 .",
    "observe that connected vertex cover is @xmath76-transversable . given a graph @xmath14",
    "we find a maximal matching in linear time and output the endpoints of the matching as @xmath137 .",
    "any vertex cover must contain at least one endpoint from each edge in the matching , and thus @xmath441 . also , @xmath442 .",
    "we recall the proof from  @xcite that connected vertex cover is reducible , as we will use this to get an eptas here . given a graph @xmath14 and set @xmath137 , let @xmath443 and let @xmath444 .",
    "the annotated problem @xmath128 is to find a minimum sized set @xmath445 such that every edge in @xmath17 has an end point in @xmath133 and every connected component of @xmath446 $ ] contains a vertex in @xmath113 .",
    "notice that for any connected vertex set @xmath23 of @xmath14 , @xmath447 is a feasible solution to @xmath128 on @xmath17 .",
    "conversely , for any feasible solution @xmath133 of @xmath128 on @xmath17 , we have that @xmath448 is a vertex cover of @xmath14 and has at most @xmath449 connected components . since @xmath23 is a vertex cover it is sufficient to add @xmath450 vertices to @xmath23 in order to make it a connected vertex cover of @xmath14 .",
    "hence , connected vertex cover is reducible .",
    "one can similarly show that the annotated problem @xmath128 is @xmath76-transversable and reducible .",
    "this implies that @xmath128 has eptas on @xmath268 and @xmath288 .    to get our eptas for connected vertex cover we do similar to what we did for @xmath416-deletion problem in theorem  [ lem : fdeptas ]",
    "the only change is that we keep finding clique and including it in our solution until there is no clique of size @xmath451 .",
    "let @xmath348 , @xmath349 , @xmath452 be the cliques found by the algorithm and @xmath435 be the graph on which we apply proposition  [ thm : eptastrans ] .",
    "let @xmath197 be the union of cliques , that is , @xmath453 .",
    "now we define the annotated problem @xmath128 with respect to set @xmath197 and using proposition  [ thm : eptastrans ] obtain a set @xmath454 of size @xmath455 , where @xmath456 is the size of a minimum cardinality set in @xmath435 such that every edge in @xmath435 has an end point in @xmath454 and every connected component of @xmath457 $ ] contains a vertex in @xmath458 .",
    "now consider the set @xmath459 .",
    "this is a vertex cover of @xmath14 such that it has @xmath391 components and hence we can make it connected by adding at most @xmath460 vertices . let the final solution returned by our algorithm be @xmath23 .",
    "let @xmath137 be an optimal connected vertex cover of @xmath14 .",
    "since @xmath137 must contain at least @xmath461 vertices and the size of @xmath462 , we have that @xmath463 .",
    "thus the size of the solution returned by the algorithm satisfies the following inequality @xmath464 eptas for cycle packing on unit disk graphs .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    a _ cycle packing _ in a graph @xmath14 is a collection @xmath465 of pairwise disjoint vertex sets such that for every @xmath184 , @xmath466 $ ] induces a cycle .",
    "the integer @xmath99 is the _ size _ of the cycle packing and in the cycle packing problem the objective is to find a cycle packing of maximum size in the input graph .",
    "cycle packing is known to be minor - bidimensional , separable and reducible  @xcite .",
    "thus by theorem  [ thm : udmapeptas ] , the problem admits an eptas on @xmath268 .",
    "hence , in order to give an eptas for cycle packing on unit disk graphs it is sufficient to prove the following lemma . in particular , the following lemma implies that if we find a sufficiently large clique @xmath137 , partition @xmath137 into triangles and add this partition to our packing , this will give a good approximation of how the optimum solution intersects with @xmath137 . here a _ triangle _ is a cycle on three vertices .",
    "[ lem : cyclepackclique ] let @xmath14 be a unit disk graph and @xmath137 be a clique in @xmath14 .",
    "there is a maximum size cycle packing @xmath467 in @xmath14 such that at most @xmath468 cycles @xmath351 in the packing satisfy @xmath469 and @xmath470 .",
    "let @xmath137 be a clique in @xmath14 .",
    "the centers of all disks corresponding to vertices of @xmath137 must be inside a @xmath471 square .",
    "thus the centers of all disks corresponding to vertices in @xmath472 must be in a @xmath473 square . by  (",
    "* lemma 2 ) , the vertices in @xmath472 can be partitioned into @xmath474 cliques @xmath475 , @xmath476 , ",
    "note that in the definition of unit disk graphs used in  ( * ? ? ?",
    "* lemma 2 ) two vertices are adjacent if the centers of the corresponding disks is at distance at most @xmath77 from each other , while in this paper two vertices are adjacent if the centers of their disks are at distance at most @xmath478 . this difference is taken into account when applying ( * ? ? ?",
    "* lemma 2 ) .",
    "we say that a cycle @xmath331 _ crosses _ @xmath137 if @xmath479 and @xmath480 .",
    "let @xmath481 be a maximum cycle packing in @xmath14 that has the fewest cycles crossing @xmath137 .",
    "observe that any cycle @xmath331 that crosses @xmath137 intersects with @xmath137 in at most two vertices  since otherwise @xmath482 $ ] induces a triangle , say @xmath57 and then we can replace @xmath331 by @xmath57 in the cycle packing and obtain a maximum size cycle packing with fewer cycles that cross @xmath137 . this contradicts the choice of the packing @xmath481 .",
    "we prove that there can be at most @xmath483 cycles in the packing that intersect @xmath137 in exactly @xmath478 vertices .",
    "suppose for contradiction that there are at least @xmath484 such cycles .",
    "each such cycle contains at least one vertex in @xmath472 .",
    "since each vertex in @xmath472 is in one of the @xmath474 cliques @xmath485 the pigeon hole principle implies that there are three cycles @xmath486 , @xmath487 and @xmath488 in the packing which all intersect @xmath137 in exactly two vertices and a clique @xmath313 such that @xmath489 , @xmath490 and @xmath491 .",
    "since all cycles in the packing are vertex disjoint , this means that @xmath492 contains a triangle @xmath493 . on the other hand",
    ", @xmath494 is a clique on @xmath495 vertices , and can be partitioned into two triangles @xmath427 and @xmath496 .",
    "now we can remove @xmath486 , @xmath487 and @xmath488 from the proposed packing and replace them by @xmath493 , @xmath427 and @xmath496 .",
    "the resulting packing has the same size , but fewer cycles that cross @xmath137 .",
    "this contradicts the choice of the packing @xmath481 .",
    "now we show that there can be at most @xmath497 cycles in the packing that intersect with @xmath137 in exactly @xmath77 vertex .",
    "every such cycle contains at least two vertices in @xmath472 . for a pair @xmath213 of integers @xmath498",
    "we say that a cycle @xmath486 is an @xmath213 cycle if @xmath486 contains two distinct vertices @xmath29 and @xmath31 such that @xmath499 and @xmath500 .",
    "if there are more than @xmath501 cycles in the packing that intersect with @xmath137 in exactly @xmath77 vertex then there are @xmath184 and @xmath202 such that there are three @xmath213-cycles @xmath486 , @xmath487 and @xmath488 in the packing that intersect @xmath137 in one vertex .",
    "let @xmath502 , @xmath503 and @xmath504 be three vertices in @xmath505 , @xmath506 and @xmath507 respectively .",
    "similarly , let @xmath508 , @xmath509 and @xmath510 be the three vertices in @xmath511 , @xmath512 and @xmath513 respectively .",
    "now @xmath514 , @xmath515 and @xmath516 are vertex disjoint triangles .",
    "we can replace @xmath486 , @xmath487 , and @xmath488 by @xmath517 , @xmath518 and @xmath519 in the cycle packing and obtain a maximum size cycle packing with fewer cycles that cross @xmath137 , contradicting the choice of @xmath520 .",
    "hence there are at most @xmath521 cycles in the packing that cross @xmath137 .      given a unit disk graph @xmath14 and @xmath323",
    ", we choose @xmath145 to be @xmath522 .",
    "if @xmath14 does not contain a clique of size @xmath145 then we apply the eptas for cycle packing on @xmath268 guaranteed by theorem  [ thm : udmapeptas ] to give a @xmath523-approximation for cycle packing . if @xmath14 contains a clique @xmath137 of size @xmath145 , the algorithm partitions @xmath137 into @xmath524 triangles @xmath525 , recursively finds a @xmath523-approximate cycle packing @xmath526 in @xmath527 and returns @xmath528 as an approximate solution .",
    "clearly , the algorithm terminates in @xmath529 time , so it remains to argue that the returned solution is indeed a @xmath523-approximate cycle packing of @xmath14 .",
    "we prove this by induction on the number @xmath98 of vertices in @xmath14 .",
    "let @xmath119 be the size of the largest cycle packing in @xmath14 .",
    "if there is no clique of size @xmath145 and we apply the eptas for cycle packing on @xmath268 then clearly the returned solution is a @xmath523-approximation .",
    "if the algorithm finds such a clique @xmath137 , lemma  [ lem : cyclepackclique ] ensures that there is a cycle packing of size @xmath119 such that at most @xmath530 cycles in the packing cross @xmath137 .",
    "all cycles in the packing that intersect with @xmath137 but do not cross @xmath137 are triangles in @xmath137 .",
    "hence @xmath527 contains a cycle packing of size at least @xmath531 . by the inductive hypothesis the algorithm returns a cycle packing in @xmath527 of size at least @xmath532 .",
    "now , @xmath137 contains @xmath524 triangles @xmath525 .",
    "hence , the total size of the packing returned by the algorithm is at least @xmath533 since @xmath534 .",
    "this concludes the proof .",
    "[ [ eptas - for - connected - vertex - cover - on - unit - ball - graphs - in - mathbbrd . ] ] eptas for ( connected ) vertex cover on unit ball graphs in @xmath1 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    our results in this section are based on an observation that if for some graph class @xmath535 the size of an optimum solution for a problem @xmath102 and the number of vertices in the input graph are linearly related then to obtain eptas it is sufficient that @xmath535 has sublinear treewidth rather than truly sublinear treewidth .",
    "the crux of this result is based on the following adaptation of the decomposition lemma proved in  ( * ? ? ?",
    "* lemma 3.2 ) .",
    "[ lem : thenewlemma ] let @xmath26 be a hereditary graph class of sublinear treewidth with parameter @xmath536 , that is , for every @xmath537 , @xmath538 . for every @xmath10",
    "there is @xmath328 such that for any @xmath27 there is @xmath130 satisfying @xmath539 and for every connected component @xmath331 of @xmath527 , we have that @xmath540 . moreover @xmath137 can be computed from @xmath14 in polynomial time .",
    "let the number of vertices of @xmath14 be @xmath98 , that is , @xmath541 . for any @xmath542 , define @xmath543 such that @xmath544 is the smallest integer such that if @xmath27 and @xmath545 , then there is a @xmath130 of size at most @xmath544 such that for every connected component @xmath331 of @xmath527 we have @xmath546 .",
    "informally , @xmath544 is the minimum size of a vertex set @xmath137 such that every connected component @xmath331 of @xmath527 has at most @xmath328 vertices .",
    "furthermore , since @xmath26 is a hereditary graph class of sublinear treewidth with parameter @xmath6 there exists a constant @xmath387 such that @xmath547 .",
    "we will make choices for the constants @xmath371 and @xmath328 and @xmath279 based on @xmath6 , @xmath387 and @xmath323 .",
    "our aim is to show that @xmath548 for every @xmath98 .",
    "observe that for any numbers @xmath373 , @xmath374 , we have @xmath376 since @xmath375 .",
    "thus we have @xmath377 .",
    "we choose @xmath549 and @xmath550 . if @xmath551 then we set @xmath552 , so @xmath553 for @xmath554 .",
    "we now show that if @xmath555 then @xmath556 by induction on @xmath98 . for the base case if @xmath557 then the choice of @xmath328 implies the following inequality .",
    "we now consider @xmath544 for @xmath559 .",
    "we know that the treewidth of @xmath14 is at most @xmath560 .",
    "construct a weight function @xmath561 such that @xmath562 , for all @xmath166 . by lemma  [ lemma : balsep1 ]",
    ", there is a partition of @xmath15 into @xmath381 , @xmath23 and @xmath113 such that @xmath563 , @xmath117 , @xmath118 , @xmath564 and @xmath565 .",
    "deleting @xmath23 from the graph @xmath14 yields two graphs @xmath385 $ ] and @xmath386 $ ] with no edges between them .",
    "thus we put @xmath23 into @xmath137 and then proceed recursively in @xmath566 $ ] and @xmath567 $ ] .",
    "this yields the following recurrence for @xmath568 . @xmath569",
    "observe that since @xmath570 we have @xmath571 and @xmath572 .",
    "the induction hypothesis then yields the following inequality .",
    "@xmath573 the last inequality holds whenever @xmath574 , which is ensured by the choice of @xmath371 and the fact that @xmath575 .",
    "thus @xmath548 for all @xmath98 .",
    "hence there exists a set @xmath137 of size at most @xmath576 such that for every component @xmath331 of @xmath527 we have @xmath540 .",
    "what remains is to show that @xmath137 can be computed from @xmath14 in polynomial time .",
    "the inductive proof can be converted into a recursive algorithm . the only computationally hard step of the proof is the construction of a tree - decompositon of @xmath14 in each inductive step . instead of computing the treewidth",
    "exactly we use the @xmath577-approximation algorithm by feige et al .",
    "@xcite , where @xmath578 is a fixed constant .",
    "thus when we partition @xmath15 into @xmath381 , @xmath23 , and @xmath113 using lemma  [ lemma : balsep1 ] , the upper bound on the size of @xmath23 will be @xmath579 instead of @xmath580 .",
    "however , for any @xmath581 there is a @xmath582 such that @xmath583 .",
    "now we can apply the above analysis with @xmath582 instead of @xmath387 and @xmath584 instead of @xmath6 to bound the size of the set @xmath137 output by the algorithm .",
    "this concludes the proof of the lemma .",
    "[ thm : eptastransnew ] let @xmath102 be a reducible graph optimization problem and let @xmath26 be a class of graphs with sublinear treewidth such that for every @xmath537 , @xmath585",
    ". then @xmath102 has an eptas on @xmath26 .",
    "let @xmath14 be the input to @xmath102 , @xmath541 and @xmath586 be fixed . since for every @xmath537 , @xmath587",
    ", we have that @xmath588 , for a fixed constant @xmath589 .",
    "furthermore , since @xmath26 is a hereditary graph class of sublinear treewidth with parameter @xmath6 , there exists a constant @xmath387 such that @xmath547 .",
    "let @xmath590 be a constant to be selected later .",
    "by lemma  [ lem : thenewlemma ] , there exist @xmath328 , @xmath591 and @xmath582 depending on @xmath590 , @xmath6 and @xmath387 such that given @xmath14 a set @xmath137 with the following properties can be found in polynomial time .",
    "first @xmath592 , and secondly for every component @xmath331 of @xmath527 we have that @xmath593 .",
    "thus @xmath594 . since @xmath102 is reducible",
    ", there exists a min / max - cmso problem @xmath128 , a constant @xmath595 and a function @xmath129 such that :    1 .",
    "there is a polynomial time algorithm that given @xmath14 and @xmath130 outputs @xmath17 such that @xmath596 and @xmath597 , 2 .",
    "there is a polynomial time algorithm that given @xmath14 and @xmath130 , @xmath17 and a vertex ( edge ) set @xmath133 such that @xmath134 holds outputs @xmath23 such that @xmath104 holds and @xmath598 .",
    "we constuct @xmath17 from @xmath14 and @xmath137 using the first polynomial time algorithm . since @xmath597 we can use an extended version of courcelle s theorem  @xcite given by borie et al .",
    "@xcite to find an optimal solution @xmath133 to @xmath128 in @xmath599 time . by the properties of the first polynomial time algorithm , @xmath600 where @xmath601 .",
    "we now use the second polynomial time algorithm to construct a solution @xmath23 to @xmath102 from @xmath14 , @xmath137 , @xmath17 and @xmath133 .",
    "the properties of the second algorithm ensure @xmath104 holds and that @xmath602 , and hence @xmath603 . choosing @xmath604 yields @xmath605 , proving the theorem .",
    "[ lem : boundingsolutionsize ] let @xmath14 be an intersection graph of unit balls in @xmath1 , for a fixed @xmath4 . if @xmath14 does not contain an isolated vertex then the size of minimum ( connected ) vertex cover is at least @xmath606 , where @xmath607 .",
    "let @xmath14 be an intersection graph of unit balls in @xmath1 , for a fixed @xmath4 .",
    "for our proof we need the concept of _ kissing number_. the kissing number @xmath608 is the maximum number of non overlapping @xmath4-dimensional unit balls of equal size that can touch a unit ball in @xmath1 .",
    "kabatiansky and levenshtein  @xcite showed that @xmath609 .",
    "this implies that for any vertex @xmath166 , @xmath610 does not contain an independent set of size bigger than @xmath611 .",
    "given a graph @xmath14 we compute a maximal matching , say @xmath612 .",
    "clearly the size of @xmath612 is a lower bound on the size of a minimum ( connected ) vertex cover .",
    "let @xmath613 be the set of end points of edges in @xmath612 and @xmath614 .",
    "clearly @xmath320 is an independent set .",
    "furthermore every vertex in @xmath320 is adjacent to some vertex in @xmath613 .",
    "hence we have that @xmath615 .",
    "this implies that @xmath616 .",
    "the last inequality implies the lemma .",
    "finally , we note that every graph @xmath14 , that is , an intersection graph of unit balls in @xmath1 , with maximum clique size @xmath165 has the property that every point in @xmath1 is in at most @xmath165 unit balls .",
    "this together with result from  @xcite implies that the treewidth of @xmath14 is @xmath617 , where @xmath618 is a constant depending only on @xmath4 .",
    "this implies that an intersection graph of unit balls in @xmath1 with bounded maximum clique has sublinear treewidth .",
    "so an eptas for connected vertex cover and vertex cover can be obtained along the similar lines as in theorems  [ lem : fdeptas ] and [ lem : cvcunitmap ] and finally uses theorem  [ thm : eptastransnew ] instead of theorem  [ thm : eptastrans ] to arrive to the following result .",
    "we can also obtain eptass for connected vertex cover and vertex cover on disk graphs , as on disk graphs of bounded clique size we have that the size of an optimum solution and the number of vertices in the input graph are linearly related .      in this section",
    "we show how to obtain parameterized subexponential time algorithm for several problems . formally , a _",
    "parameterization _ of a problem is assigning an integer @xmath8 to each input instance and a parameterized problem is _ fixed - parameter tractable _ ( fpt ) if there is an algorithm that solves the problem in time @xmath619 , where @xmath620 is the size of the input and @xmath71 is an arbitrary computable function .",
    "we say that a parameterized problem has a parameterized subexponential algorithm if it is solvable in time @xmath621    our basic idea is to find a `` large '' clique and guess the intersection of an optimal solution with this clique .",
    "we recursively do this until we do not have a large clique .",
    "once we do not have large clique we have that the maximum degree of the graph is bounded and thus the treewidth comes into picture .",
    "at that point we use dynamic programming on graphs of bounded treewidth to solve the problem optimally .",
    "we exemplify our approach on @xmath99-feedback vertex set . in this problem",
    "we are given a graph @xmath14 and a positive integer @xmath8 and the question is to check whether there is a subset @xmath622 , @xmath623 , such that @xmath624 is acyclic .",
    "the set @xmath625 is called feedback vertex set of @xmath14 .",
    "we give a subexponential time parameterized algorithm on map graphs .",
    "an algorithm on unit disk graphs is similar .",
    "the algorithm proceeds as follows .",
    "given an instance @xmath626 , it finds a maximum clique @xmath331 of @xmath14 .",
    "recall that we can find a maximum clique in unit disk graphs and map graphs in polynomial time  @xcite .",
    "if @xmath627 , then we return that @xmath14 does not have feedback vertex set of size at most @xmath8 .",
    "next we check whether @xmath628 ( @xmath323 to be fixed later ) . if yes then by theorem  [ thm : tstmapgraphs ] we know that @xmath629 . in this case",
    "we apply the known algorithm for feedback vertex set , that given a tree decomposition of width @xmath145 of a graph @xmath14 on @xmath98 vertices , finds a minimum sized feedback vertex set in time @xmath630 .",
    "hence in this case the running time of our algorithm will be @xmath631 .",
    "now we consider the case when @xmath632 . we know that for any feedback vertex set @xmath625 of @xmath14",
    ", we have that @xmath633 .",
    "so we guess the intersection @xmath634 and recursively solve the problem on @xmath635 .",
    "if for any guess we have an yes answer we return yes , else , we return no .",
    "the running time of this step is guided by the following recurrence @xmath636 , where the terms @xmath637 , @xmath638 , @xmath639 correspond to choosing @xmath640 vertices in @xmath625 from @xmath331 , @xmath641 vertices in @xmath625 from @xmath331 and @xmath642 vertices in @xmath625 from @xmath331 , respectively .",
    "roughly , @xmath643 .",
    "this asymptotically solves to @xmath644 , which is equal to @xmath645 .",
    "hence as @xmath642 increases we have that the function @xmath646 decreases .",
    "thus the worst case running time is achieved when @xmath647 and hence this is equal to @xmath648 .",
    "now we choose @xmath323 in a way that the running time for branching on clique is same as when we run a dynamic programming algorithm on graphs of bounded treewidth .",
    "thus we choose an @xmath323 such that @xmath649 .",
    "this gives us that @xmath650 is asymptotically best possible .",
    "thus our algorithm runs in time @xmath651 .",
    "the algorithm proceeds as follows .",
    "given an instance @xmath626 , we first check whether @xmath652 , where @xmath607 . by lemma  [ lem : boundingsolutionsize ] we know that if @xmath653 , then there is no connected vertex cover of size at most @xmath8 and hence the answer is no .",
    "else we have that @xmath654 . to implement our algorithm",
    "we need a slight generalization of problem .",
    "we keep a triple @xmath655 for this problem , where @xmath17 is the current graph and the objective is to find a set @xmath656 such that @xmath623 , @xmath625 is a vertex cover of @xmath17 and @xmath657 $ ] is a connected vertex cover of @xmath14 . essentially the graph @xmath17 will be obtained after branching on cliques and the set @xmath137 will store the partially constructed solution so far .",
    "this allows us to check connectedness in the whole graph @xmath14 .",
    "now the algorithm finds a maximum clique @xmath331 of @xmath17 . if @xmath658 , then we return that @xmath17 does not have a desired set @xmath625 of size at most @xmath8 .",
    "next we check whether @xmath659 ( @xmath323 to be fixed later ) .",
    "we first consider the case when @xmath632 .",
    "we know that for any vertex cover @xmath625 of @xmath17 , we have that @xmath660 .",
    "so we guess the intersection @xmath661 and recursively solve the problem on @xmath662 .",
    "if for any guess we have an yes answer we return yes else we return no .",
    "the running time of this step is guided by the following recurrence @xmath663 , where the terms @xmath638 , @xmath639 correspond to choosing @xmath641 vertices in @xmath625 from @xmath331 and @xmath642 vertices in @xmath625 from @xmath331 , respectively . roughly @xmath664 .",
    "this asymptotically solves to @xmath665 , which is equal to @xmath666 .",
    "hence as @xmath642 increases we have that the function @xmath646 decreases .",
    "thus the worst case running time is achieved when @xmath647 and hence this is equal to @xmath648 .    in the other case",
    "we have that @xmath667 . as discussed before lemma  [ lem : alldvccvc ] , by using result from  @xcite we have that the treewidth of @xmath17 is @xmath668 , where @xmath618 is a constant depending only on @xmath4 . in this case",
    "we apply a modification of known algorithm for connected vertex cover , that given a tree decomposition of width @xmath145 of a graph @xmath669 on @xmath98 vertices , finds a minimum sized connected vertex cover in time @xmath630  @xcite . to solve our problem",
    "we do as follows .",
    "we first upper bound the number of connected components , @xmath670 , in @xmath671 $ ] by @xmath672 . recall that @xmath137 has been constructed by branching on cliques of size at least @xmath673 and",
    "thus from each such clique we have at least @xmath674 vertices in @xmath137 and vertices from one clique are in one component .",
    "thus @xmath675 .",
    "now we construct a graph @xmath669 as follows .",
    "consider the graph @xmath676 $ ] and contract every connected component in @xmath671 $ ] to a single vertex . now in the graph @xmath669 the objective is to find a connected vertex cover of size at most @xmath677 such that it contains all the vertices corresponding to connected components in @xmath671 $ ] . now",
    "the @xmath678 .",
    "hence in this case the running time of our algorithm is @xmath679 .",
    "now we choose @xmath323 in a way that the running time for branching on clique is same as when we run a dynamic programming algorithm on graphs of bounded treewidth .",
    "thus , we choose an @xmath323 such that @xmath680 .",
    "this gives us that @xmath681 is asymptotically best possible .",
    "thus , our algorithm runs in time @xmath682 for every fixed @xmath4 .",
    "this gives us the desired result .",
    "it is natural to ask how far our approach can be generalized , and in particular , whether many of the problems discussed so far have eptass and parameterized subexponential time algorithms on unit ball graphs in dimension higher than two . in this section",
    "we show that one should not expect equally general results for unit ball graphs of dimension at least three .",
    "in particular , we show that feedback vertex set on unit ball graphs in @xmath3 does not have an eptas unless @xmath683 , and that the problem does not admit a subexponential time parameterized algorithm under the exponential time hypothesis of impagliazzo , paturi and zane  @xcite .",
    "[ thm : fvshard ] feedback vertex set on unit ball graphs in @xmath3 does not admit a ptas unless @xmath683 , and has no subexponential time parameterized algorithm unless the exponential time hypothesis fails .    a _ unit ball _ model of @xmath0 in @xmath1 is a map @xmath684 such that @xmath29 and @xmath31 are adjacent iff the euclidean distance between @xmath685 and @xmath686 is at most @xmath77 . in the construction it is much more convenient to work with this alternate definition of unit ball graphs rather than saying that @xmath685 and @xmath686 is at most @xmath478 and hence we use this alternate definition in this section . in our constructions",
    "no two vertices will map to the same point , and thus we will often refer to vertices in @xmath0 by the points in @xmath1 which they map to . for the proof of theorem  [ thm : fvshard ] we need the following lemmas .",
    "it appears that the following lemma can easily be derived from the results in  @xcite about the three dimensional orthogonal graph drawings .",
    "however , since we could not find this result explicitly , we give a proof here for completeness .",
    "[ lem : construct ] for any graph @xmath14 on @xmath98 vertices of maximum degree @xmath495 , there is a unit ball graph @xmath0 on @xmath687 vertices such that @xmath0 is a subdivision of @xmath14 .",
    "furthermore , @xmath0 and a unit ball model of @xmath0 in @xmath3 can be constructed from @xmath14 in polynomial time .      in this construction",
    "we envision the @xmath40-axis as being horizontal with positive direction towards the right , the @xmath688-axis being vertical with positive direction upwards .",
    "the intuition behind the proof is that every vertex of @xmath14 is assigned its own `` fat '' @xmath40-@xmath688 plane .",
    "the edges of @xmath14 are routed parallel to the @xmath41 axis in the @xmath689 plane with @xmath690 , and in each `` fat '' @xmath40-@xmath688 plane we ensure that the edges connect to their corresponding vertex .",
    "this local routing of edge endpoints to a vertex happens above the @xmath689 plane with @xmath690 and does not interfere with the global routing of the edges .",
    "for a point with integer coordinates @xmath691 and integer @xmath293 define the set @xmath692_{\\bf x}^\\ell$ ] to be @xmath693 .",
    "in particular , if @xmath293 is positive then @xmath692_{\\bf x}^\\ell$ ] contains @xmath694 , while if @xmath293 is negative then @xmath692_{\\bf x}^\\ell$ ] contains @xmath695 .",
    "similarly we define @xmath692_{\\bf y}^\\ell$ ] to be @xmath696 and @xmath692_{\\bf z}^\\ell$ ] to be @xmath697 . given three integers @xmath40,@xmath41,@xmath688 , the graph @xmath698 $ ] corresponds to the point set @xmath699 & = & l[x , y , z]_{\\bf z}^{-2 } \\cup l[x , y , z-2]_{\\bf x}^{2 } \\\\ & \\cup & l[x , y , z]_{\\bf x}^{2 } \\\\ & \\cup & l[x , y , z]_{\\bf z}^{2 } \\cup l[x , y , z+2]_{\\bf x}^{2 } \\\\ & \\cup & l[x , y , z]_{\\bf x}^{-2 } \\cup l[x-2,y , z]_{\\bf z}^{4 } \\cup l[x-2,y , z+4]_{\\bf x}^{4 } \\\\ & \\cup & l[x , y , z]_{\\bf y}^{-2 }   \\cup l[x , y-2,z]_{\\bf z}^{6 } \\cup l[x , y-2,z+6]_{\\bf y}^{2 } \\cup l[x , y , z+6]_{\\bf x}^2 \\\\ & \\cup & l[x , y , z]_{\\bf y}^{2 }   \\cup l[x , y+2,z]_{\\bf z}^{8 } \\cup l[x , y+2,z+8]_{\\bf y}^{-2 } \\cup l[x , y , z+8]_{\\bf x}^2\\end{aligned}\\ ] ] the set @xmath698 $ ] corresponds to a vertex of degree @xmath495 in @xmath700 $ ] , and there are @xmath495 paths , each starting in @xmath691 and ending in @xmath701 , @xmath702 , @xmath703 , @xmath704 , @xmath705 and @xmath706 respectively .",
    "the @xmath41-coordinate of any intermediate point on the paths is always between @xmath707 and @xmath708 .",
    "any points that are generated twice still correspond only to one single vertex .    for an integer @xmath41 and six integers @xmath709 such that @xmath710",
    "we define @xmath711 $ ] to be the point set @xmath712 & = & p[-2,y,12 ] \\\\ & \\cup & \\bigcup_{i=1}^6 l[0,y,10 + 2(i-1)]_{\\bf x}^{x_i } \\cup l[x_i , y,10 + 2(i-1)]_{\\bf z}^{-10 - 2(i-1)}\\end{aligned}\\ ] ] the set @xmath711 $ ] corresponds to a vertex of degree @xmath495 in @xmath713 $ ] with @xmath495 paths starting in this vertex end ending in @xmath714 $ ] for @xmath715 .",
    "the @xmath41-coordinate of the intermediate vertices on the path is between @xmath707 and @xmath708 . in this sense ,",
    "the paths corresponding to the vertex in @xmath713 $ ] are routed in a `` fat '' @xmath716-plane .",
    "we are now ready to construct @xmath0 given @xmath14 .",
    "we give the construction for @xmath495-regular graphs @xmath14 and then explain how to modify the construction to the case when @xmath14 has maximum degree @xmath495 .",
    "we label the vertices in @xmath14 by @xmath717 and the edges of @xmath14 by @xmath718 with @xmath719 . for every @xmath720 define @xmath721 and @xmath722 such that the endpoints of the edge @xmath723 are @xmath724 and @xmath725 respectively .",
    "now , for every vertex @xmath726 let @xmath727 be integers so that @xmath726 is incident to the edges @xmath728 for @xmath729 . for every vertex @xmath726",
    "we add the point set @xmath730 $ ] .",
    "finally for every edge @xmath723 we add the set @xmath731_{\\bf y}^{10(b(i)-a(i))}$ ] .",
    "this concludes the construction of @xmath0 .",
    "it is easy to see that @xmath0 can be constructed from @xmath14 in polynomial time .",
    "furthermore , it is easy to verify that @xmath0 has @xmath687 vertices since @xmath719 . to see that @xmath0 is a subdivision of @xmath14",
    "observe that when @xmath14 has an edge @xmath732 between @xmath726 and @xmath733 , in @xmath0 there is a path from the point @xmath734 $ ] through @xmath735 $ ] and @xmath736 $ ] to the point @xmath737 $ ] .",
    "this concludes the proof of the lemma .",
    "[ lem : constructfvs ] there is a polynomial time algorithm that given a graph @xmath14 on @xmath98 vertices of maximum degree @xmath115 outputs a unit ball graph @xmath0 together with a unit ball model of @xmath0 in @xmath3 , such that given any vertex cover @xmath331 of @xmath14 , a feedback vertex set @xmath23 of @xmath0 of size at most @xmath642 can be computed in polynomial time , and given any feedback vertex set @xmath23 of @xmath0 , a vertex cover @xmath331 of @xmath14 of size at most @xmath106 can be computed in polynomial time .",
    "given @xmath14 we start by applying the well - known construction for transforming instances of vertex cover to instances of feedback vertex set .",
    "we construct @xmath17 from @xmath14 by adding a vertex @xmath738 for every edge @xmath739 of @xmath14 and making @xmath738 adjacent to @xmath29 and to @xmath31 .",
    "since the maximum degree of @xmath14 was @xmath115 , the maximum degree of @xmath17 is @xmath495 .",
    "now we apply lemma  [ lem : construct ] to @xmath17 obtain the graph @xmath0 and a unit ball model of @xmath0 .",
    "every vertex cover @xmath331 of @xmath14 is a feedback vertex set of @xmath17 , and since @xmath0 is a subdivision of @xmath17 , every vertex cover of @xmath14 is a feedback vertex set of @xmath0 . for the reverse direction ,",
    "it is well - known that given a feedback vertex set @xmath23 in a graph , one can find in polynomial time a feedback vertex set @xmath133 of size at most @xmath106 such that all vertices in @xmath133 have degree at least @xmath115  @xcite .",
    "let @xmath133 be a feedback vertex set of @xmath0 such that every vertex in @xmath133 has degree at least @xmath115 in @xmath0 .",
    "then , every vertex in @xmath133 is also a vertex in @xmath14 .",
    "we claim that @xmath133 is a vertex cover of @xmath14 .",
    "let @xmath739 be an edge in @xmath14 .",
    "then @xmath29,@xmath738,@xmath31 is a cycle in @xmath17 and since @xmath0 is a subdivision of @xmath17 , @xmath0 contains a cycle going through @xmath29,@xmath738 and @xmath31 where all vertices in the cycle except @xmath29 and @xmath31 have degree at most @xmath478 . since @xmath133 is a feedback vertex set of @xmath740 containing no vertices of degree less than @xmath115 , @xmath133 contains either @xmath29 or @xmath31 .",
    "hence @xmath133 is a vertex cover of @xmath14 .",
    "if a subexponential time parameterized algorithm for feedback vertex set on unit ball graphs in @xmath3 existed we could combine it with lemma  [ lem : constructfvs ] to get a subexponential time algorithm for vertex cover on graphs of maximum degree @xmath115 .",
    "similarly , a ptas for feedback vertex set on unit ball graphs in @xmath3 could be combined with lemma  [ lem : constructfvs ] to yield a ptas for vertex cover on graphs of maximum degree @xmath115 . since vertex cover",
    "is known not to admit a @xmath741-factor approximation algorithm , for some fixed @xmath321 , on graphs of degree at most @xmath115 unless @xmath683  @xcite , and not to have subexponential time parameterized algorithms on graphs of degree at most @xmath115 under the exponential time hypothesis  @xcite , we obtain theorem  [ thm : fvshard ] ."
  ],
  "abstract_text": [
    "<S> bidimensionality theory was introduced by demaine et al . [ _ jacm 2005 _ ] as a framework to obtain algorithmic results for hard problems on minor closed graph classes . </S>",
    "<S> the theory has been sucessfully applied to yield subexponential time parameterized algorithms , eptass and linear kernels for many problems on families of graphs excluding a fixed graph @xmath0 as a minor . in this paper </S>",
    "<S> we use several of the key ideas from bidimensionality to give a new generic approach to design eptass and subexponential time parameterized algorithms for problems on classes of graphs which are not minor closed , but instead exhibit a geometric structure . in particular we present eptass and subexponential time parameterized algorithms for feedback vertex set , vertex cover , connected vertex cover , diamond hitting set , on map graphs and unit disk graphs , and for cycle packing and minimum - vertex feedback edge set on unit disk graphs . to the best of our knowledge , these results were previously unknown , with the exception of the eptas and a subexponential time parameterized algorithm on unit disk graphs for vertex cover , which were obtained by marx [ _ esa 2005 _ ] and alber and fiala [ _ j . </S>",
    "<S> algorithms 2004 _ ] , respectively .    </S>",
    "<S> our results are based on the recent decomposition theorems proved by fomin et al . in [ _ </S>",
    "<S> soda 2011 _ ] and novel grid - excluding theorems in unit disc and map graphs without large cliques . </S>",
    "<S> our algorithms work directly on the input graph and do not require the geometric representations of the input graph . </S>",
    "<S> we also show that our approach can not be extended in its full generality to more general classes of geometric graphs , such as intersection graphs of unit balls in @xmath1 , @xmath2 . specifically , we prove that feedback vertex set on unit - ball graphs in @xmath3 neither admits ptass unless p = np , nor subexponential time algorithms unless the exponential time hypothesis fails . </S>",
    "<S> additionally , we show that the decomposition theorems which our approach is based on fail for disk graphs and that therefore any extension of our results to disk graphs would require new algorithmic ideas . on the other hand </S>",
    "<S> , we prove that our eptass and subexponential time algorithms for vertex cover and connected vertex cover carry over both to disk graphs and to unit - ball graphs in @xmath1 for every fixed @xmath4 . </S>"
  ]
}
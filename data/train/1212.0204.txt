{
  "article_text": [
    "the kinetic equations provide a description of non equilibrium gases and more generally of particle systems @xcite . the distribution function , which describes the evolution of the system , depends , in the most general case , on seven independent variables : the time , the physical and the velocity space .",
    "it turns out that the numerical simulation of these kind of equations with deterministic techniques presents several drawbacks due to the large dimension of the problem . on the other side of the spectrum of the numerical techniques",
    "used to approximate kinetic equations , there are the probabilistic methods @xcite .",
    "these methods and in particular monte carlo methods ( dsmc ) are extensively used due to their very low computational cost especially in the multidimensional cases , compared to finite volume , finite difference or spectral methods @xcite .",
    "however , dsmc furnishes only poorly accurate and fluctuating solutions which can not be easily ameliorated .",
    "this is especially true in non stationary situations in which time averages techniques turn to be useless .",
    "many different works have been dedicated to reduce some of the disadvantages of monte carlo methods .",
    "we quote @xcite for an overview on efficient and low variance monte carlo methods .",
    "let us remind to the works of homolle and hadjiconstantinou @xcite and @xcite and of dimarco , pareschi and degond @xcite for some applications of variance reduction techniques to kinetic equations in transitional and general regimes .",
    "we recall also the works of boyd and burt @xcite and of pullin @xcite who developed a low diffusion particle methods for simulating compressible inviscid flows .",
    "in this work , we continue the development of a new deterministic ultra fast method which permits to solve kinetic equations of the boltzmann type @xcite .",
    "the scheme is based on the classical discrete velocity models ( dvm ) approach @xcite .",
    "the dvm models are obtained by discretizing the velocity space into a set of fixed discrete velocities @xcite . as a result of this discretization",
    ", the original kinetic equation is then represented as a set of linear transport equations plus a source term .",
    "the source term describes the collisions or the interactions between the particles and couples all the equations of the resulting system . in order to solve the transport part of the dvm model",
    ", many different techniques can be employed like finite difference , finite volume or fast methods @xcite .",
    "one of the most common strategies for solving this kind of problems is the semi lagrangian approach @xcite which will be also the basis of the method here developed .",
    "unfortunately , for each of the method cited , we recall that , the computational effort needed for solving the full six dimensional equation , prevents still nowadays realistic simulations even with parallel machines .    to overcome the problem of the excessive computational cost , we recently proposed in @xcite to use a splitting method to separate the transport from the collision step @xcite .",
    "then , we used a lagrangian technique which exactly solves the transport step on the entire domain and we projected the solution on a grid to compute the contribution of the collision operator . the resulting scheme ( fast kinetic scheme , fks )",
    "shares many analogies with semi - lagrangian methods @xcite and with monte carlo schemes @xcite , but on the contrary to them , the method is as fast as a particle method while the numerical solution remains fully deterministic , which means that there is no source of statistical error . when used to solve the limiting fluid model , the fks method shares also some analogies with the so - called lattice boltzmann methods @xcite , but on the contrary to them its application is not limited to dense flows , all the regimes from rarefied to dense can be studied with such approach .",
    "thanks to this new scheme , we were able to compute the solution of the full six dimensional kinetic equation on a laptop for acceptable mesh sizes and in a reasonable amount of time ( about ten hours for @xmath0 space @xmath1 @xmath2 velocity space mesh points for @xmath3 time steps up to @xmath4 on the spherical sod - like problem ) .    however , the method developed , exhibited some limitations in term of spatial accuracy .",
    "in fact , it was only poorly accurate when used to compute solutions close to the fluid limit .",
    "we showed in @xcite that , in these cases , the computed solutions laid between a first order and a second order muscl scheme . in the present work , we developed a strategy which permits to preserve a desired high - order of accuracy in space for all the different regimes from the extremely rarefied to the high dense cases .",
    "in particular , it permits to recover the solution of the compressible euler equations , when the number of collisions tends to infinity , with an high order shock capturing scheme .",
    "the modification introduced consists in coupling the fast kinetic scheme ( fks ) to a solver for the compressible euler equations , then to match the moments obtained from the solution of the macroscopic equations with those obtained from the solution of the equilibrium part of the kinetic equation .",
    "finally , the solution , in term of the moments , is recovered as a convex combination of the two contributions : the macroscopic and the microscopic parts .",
    "we will show that the introduction of a macroscopic solver will not increase dramatically the computational cost , instead this modification will represent only a fraction of the time employed for computing the solution . in this work ,",
    "the interaction term between the particles is the bgk collision operator @xcite .",
    "however , the high order version of the fast kinetic scheme can in principle be extended to other collisional operators as the boltzmann one .",
    "+ the article is organized as follows . in section [ sec_boltzmann ] , we introduce the boltzmann - bgk equation and its properties . in section [ sec_dvm ] ,",
    "we present the discrete velocity model ( dvm ) .",
    "then , in section [ sec_num_approx ] , we present the fast kinetic scheme ( fks ) and the high order fast kinetic scheme ( hofks ) .",
    "several test problems which demonstrate the accuracy and the strong efficiency of the new method are presented and discussed in section [ sec_tests ] . some final considerations and future developments",
    "are finally drawn in the last section .",
    "the equation to be solved is the following : _ t f + v_xf = 1 ( m_f - f ) , [ eq : b ] with the initial condition @xmath5 .",
    "the non negative function @xmath6 describes the time evolution of the distribution of particles which move with velocity @xmath7 in the space @xmath8 at time @xmath9 . for simplicity , in the description of the method we will do the hypothesis that the dimension of the physical space is the same of the dimension of the velocity space @xmath10",
    "however , the method is not restricted to this particular choice and it is possible to consider different dimensions between the space and the velocity in order to obtain different simplified models .",
    "the type of interactions term which characterizes the kinetic equation in ( [ eq : b ] ) is the so - called bgk relaxation operator . with this choice the collisions are modeled by a relaxation towards the local thermodynamical equilibrium defined by the maxwellian distribution function @xmath11 m_f = m_f[,u , t](v)= ( ) , [ eq : m ] where @xmath12 and @xmath13 are respectively the density and mean velocity while @xmath14 with @xmath15 the temperature of the gas and @xmath16 the gas constant .",
    "the macroscopic values @xmath17,@xmath18 and @xmath15 are related to @xmath19 by : = _ ^d fdv , u=_^d vfdv , = _ ^d|v - u|^2fdv , [ eq : mo ] while the energy @xmath20 is defined by e= _ ^d|v|^2fdv = |u|^2 + , [ eq : e ] the parameter @xmath21 in ( [ eq : b ] ) is the relaxation time .",
    "we refer to section [ sec_tests ] for the numerical values chosen .",
    "formally , when the number of collision goes to infinity , which means @xmath22 , the function @xmath19 converges towards the maxwellian distribution . in this limit , if we consider the bgk equation ( [ eq : b ] ) and we multiply it by @xmath23 , @xmath24 , @xmath25 , and then we integrate with respect to @xmath24 , we get the so - called euler system of compressible gas dynamics equations + _ x ( u ) = 0 , + _ x ( u u+pi ) = 0 , + _ x ( ( e+p)u ) = 0 , p= , e=+ |u|^2 .",
    "[ eq : sys1 ] in the following , we will combine the bgk equation ( [ eq : b ] ) with the compressible euler equation ( [ eq : sys1 ] ) to get our high order fast kinetic scheme .",
    "the principle of discrete velocity model ( dvm ) is to set a grid in the velocity space and thus to transform the kinetic equation ( [ eq : b ] ) in a set of linear hyperbolic equations with source terms .",
    "we refer to the works of platkowski @xcite and of mieussens @xcite for the description of this approach and we remind to them for the details . in the following",
    ", we will briefly describe the idea and we will introduce the notations which will be used .    let @xmath26 be a set of @xmath27 multi - indices of @xmath28 , defined by @xmath29 , where @xmath30 are some given bounds .",
    "we introduce a cartesian grid @xmath31 of @xmath32 by = \\",
    "{ v_k = kv+a ,  k } , where @xmath33 is an arbitrary vector of @xmath32 and @xmath34 is a scalar which represents the grid step in the velocity space .",
    "we denote the discrete collision invariants on @xmath31 by @xmath35 .",
    "now , in this setting , the continuous distribution function @xmath19 is replaced by a @xmath36vector @xmath37 , where each component is assumed to be an approximation of the distribution function @xmath19 at location @xmath38 : f_(x , t)=(f_k(x , t))_k , f_k(x , t ) f(x , v_k , t ) .",
    "the fluid quantities are then obtained from @xmath39 thanks to discrete summations on @xmath31 : u(x , t)=_km_kf_k(x , t ) v = m_k f_k(x , t)_. [ eq : dm ] the discrete velocity bgk model consists of a set of @xmath40 evolution equations for @xmath41 of the form _",
    "t f_k + v_k _",
    "xf_k = 1 ( _ k[u]-f_k ) ,  k=1, .. ,n [ eq : dm1 ] where @xmath42 $ ] is a suitable approximation of @xmath11 defined next .",
    "the dvm approach deserves some remarks .       *",
    "when dealing with discrete velocity methods , one needs to truncate the velocity space and to fix some bounds .",
    "this gives the number @xmath40 of evolution equations ( [ eq : dm1 ] ) .",
    "of course , the number @xmath40 is chosen as a compromise between the desired precision in the discretization of the velocity space and the computational cost , while the bounds are chosen to give a correct representation of the flow .",
    "this implies that the discrete velocity set must be large enough to take into account large variations of the macroscopic quantities which may appear during the evolution of the problem . on the other hand",
    ", the number of mesh points should be sufficiently large to guarantee that the small variations of the macroscopic quantities are well described . *",
    "the exact conservation of macroscopic quantities is impossible , because in general the support of the distribution function is non compact .",
    "this is the case for instance of the maxwellian equilibrium distribution .",
    "thus , in order to conserve macroscopic variables , different strategies can be adopted , two possibilities are described in @xcite .",
    "moreover , the approximation of the equilibrium distribution @xmath43 by @xmath42 $ ] must be carefully chosen in order to satisfy conservations of physical quantities . in the following section",
    "we will discuss our choices in details .",
    "in this section we recall the fks method and then we will introduce a new class of schemes which enables to get high order spatial accuracy ( hofks ) . before",
    ", we will discuss and propose a solution for the problem of lack of conservation of the macroscopic quantities which characterizes the class of discrete velocity models we are dealing with .",
    "we first of all introduce a cartesian uniform grid in the physical space , fks schemes are in fact based on uniform meshes .",
    "the extension of this class of methods to general meshes is not trivial but nevertheless under study .",
    "the mesh is defined by the set @xmath44 of @xmath40 multi - indices of @xmath28 , which is @xmath45 , where @xmath46 are some given bounds which represent the boundary points in the physical space .",
    "the grid @xmath47 of @xmath32 is then given by = \\",
    "{ x_j = jx+b ,  j } , where @xmath10 represents at the same time the dimension of the physical space and the dimension of the velocity space .",
    "the form of the physical space is determined by the vector @xmath48 of @xmath32 and @xmath49 is a scalar which represents the grid step in the physical space .",
    "we consider a third discretization which is the time discretization @xmath50 with @xmath51 .",
    "we will at the end of the section discuss the time step limitations and the cfl condition .",
    "suppose a continuous in phase space distribution function is given , _",
    "i.e. _ @xmath52 , with moments @xmath53 for every @xmath54 and @xmath55 .",
    "we proceed into two steps .",
    "first we define ^n_j , k = f(x_j , v_k , t_n),which is the pointwise distribution value in phase space .",
    "observe that , due to the truncation of the velocity space and to the finite number of points with which @xmath19 is discretized , the moments of @xmath56 differ from the original moments @xmath53 .",
    "in fact the discrete moments of this distribution are _",
    "m_k_j , k^n v _ u_j^n , ^n_j^n_j , ^n_j^n_j .",
    "different strategies can be adopted to restore the correct moments .",
    "our choice , which is the second step of the conservative dvm model , consists in defining the approximated distribution function @xmath57 as the distribution closer in the discrete @xmath58 norm to @xmath59 for which the moments are exactly the macroscopic quantities we want to preserve , _",
    "i.e _ u_j^n = m_kf_j , k^n v_.    in order to find this distribution we make use of a simple constrained lagrange multiplier method @xcite , where the constraints are mass , momentum and energy of the solution .",
    "let us recall the technique from @xcite .",
    "for each spatial cell , let define the pointwise distribution vector ^n_j = ( ^n_j,1 , ^n_j,2, ",
    ",^n_j , n ) ^t , let also define the vector containing the corrected distribution which fulfills the conservation of moments we are searching for f^n_j = ( f^n_j,1 , f^n_j,2 ,  , f^n_j , n)^t , and the matrix which contains the discretization parameters @xmath60 . at this point , conservation can be imposed in each cell and at any time index @xmath61 solving the following constrained optimization problem : @xmath62    thus , let @xmath63 be the lagrange multiplier vector , the objective function to be minimized , in each cell , is given by l(f^n_j , ) = _",
    "k=1^n    solved explicitly .",
    "the searched distribution function is then @xmath64 is f^n_j = ^n_j + c^t ( cc^t)^-1(u^n_j - c^n_j ) , j. [ eq : minim1 ]    we end this part defining the approximated equilibrium distribution @xmath65 $ ] , or equivalently @xmath66 $ ] .",
    "the discretization of the maxwellian distribution @xmath67 , should satisfy the same properties of conservation of the distribution @xmath19 , _",
    "i.e. _ u_j^n = m_kf_j , k^n v_=m_k_k[u_j^n ] v_. to this aim , observe that the natural approximation @xmath68=m_{f}(x_{j},v_{k},t_{n})=m_f[u^n_j]$ ] can not satisfy these requirements .",
    "thus , the calculation carried out above for the definition of the approximated distribution @xmath19 , should also be performed for the equilibrium distribution @xmath43 .",
    "this should be done each time we invoke the equilibrium distribution during the computation as explained in the next subsection .",
    "the function @xmath69 $ ] is therefore given by the solution of the same minimization problem defined in ( [ eq : minim ] ) , and its explicit value is given mimicking ( [ eq : minim1 ] ) by = m_f[u^n_j ] + c^t ( cc^t)^-1(u^n_j - cm_f[u^n_j ] ) , j. [ eq : minimmax ] notice that the computation of the new distributions @xmath19 and @xmath70 only involves a matrix - vector multiplication .",
    "in fact , matrix @xmath71 only depends on the parameter of the discretization and thus it is constant in time .",
    "in other words matrices @xmath71 and @xmath72 can be precomputed and stored in memory while initializing the problem .       * for fks schemes ,",
    "we need to solve the above minimization problem for the initial data @xmath73 and for the distribution @xmath74 $ ] at each time index @xmath61 .",
    "in fact , once the conservation is guaranteed for @xmath19 for @xmath75 , this is also guaranteed for the entire computation because the exact solution is used for solving the transport step .",
    "* the only possible source of loss of conservation for this type of schemes is due to the solution of collision term and to the way in which the equilibrium distribution is discretized .",
    "this aspects will be detailed in the next subsection . *",
    "the conservation technique described in ( [ eq : minim ] ) does not assure the positivity of the distribution function @xmath76 .",
    "it may happen in fact that during the constrained minimization procedure @xmath77 becomes negative for some values of @xmath78 . in practice",
    ", we did not observe this phenomenon to create instability in the solution .",
    "however , in the cases in which positivity is strictly demanded , as for instance for the full boltzmann operator discretized with spectral methods , alternative techniques should be designed .",
    "the main features of the method developed in @xcite can be summarized as follows :    * the bgk equation is discretized in velocity space by using the dvm model .",
    "the distribution @xmath19 as well as the maxwellian @xmath43 are initialized by the conservative dvm method detailed in section [ sec : conserv ] . *",
    "a time splitting procedure is employed between the transport and the relaxation operators for each of the resulting @xmath40 evolution equations ( [ eq : dm1 ] ) .",
    "first order time splitting is considered . in principle , others more sophisticated splitting can be employed @xcite .",
    "* the transport part is solved exactly and continuously in space , this means that no spatial mesh is involved .",
    "the initial data of this step is given by the solution of the relaxation operator .",
    "* the relaxation part is solved on the spacial grid .",
    "the initial data for this step is given by the value of the distribution function in the center of the cells after the previous transport step .",
    "each time the equilibrium distribution is invoked , conservation is retrieved through equation ( [ eq : minimmax ] ) .",
    "we need to impose conservation of the macroscopic quantities for the equilibrium distribution only .",
    "let us give the details of the method .",
    "we recall that the fks methods are constructed on uniform grids .",
    "let @xmath79 be the pointwise initial data , solution of equation ( [ eq : minim1 ] ) with @xmath80 .",
    "let also @xmath81 $ ] be the initial equilibrium distribution solution of equation ( [ eq : minimmax ] ) with @xmath82 defined at points @xmath83 at @xmath75 as the distribution @xmath19 .",
    "we start describing the first step of the method @xmath84 $ ] starting at @xmath85 .",
    "the scheme is then generalizable to the generic time step @xmath86 $ ] starting from @xmath87 .",
    "[ [ first - time - step - t0t1 . ] ] first time step @xmath84 $ ] .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    let us describe the transport and relaxation stages .",
    "_ transport stage .",
    "_ we solve @xmath40 linear transport equations of the form : _",
    "t f_k + v_k _ xf_k=0 , k=1,  ,n [ eq : dvm ] .",
    "the idea of fks schemes is to solve the transport part continuously in space instead of solving it only on the mesh points . to this aim",
    ", we define for each of the @xmath40 equations a piecewise constant function in space as _",
    "k(x , t^0=0)=f^0_j , k x , k=1,  ,n .",
    "now , the exact solution of the @xmath40 equations at time @xmath88 is given by ^*_k(x)=(x - v_kt ) , k=1,  ,n .",
    "observe that , with this choice , we do not need to reconstruct the distribution function @xmath19 as for instance in the semi - lagrangian schemes @xcite ; the shape of the function in space is in fact known at the beginning of the computation and it remains so through the duration of the computation . to be more precise the distribution function",
    "is transported in time with constant velocity so the discontinuities remain at the same relative locations .",
    "it remains also a piecewise constant function .",
    "the relaxation step , as finite difference methods , is solved only on the grid points .",
    "this means that only the value of the distribution function @xmath19 and the macroscopic quantities in the centers of the cells are needed for this step . from the exact solution of the function",
    "@xmath39 we can immediately recover these values at the cost of one simple vector multiplication .    _ relaxation stage .",
    "_ this step is local to the grid , this means that we solve the following ordinary differential equation : _",
    "t f_j , k = ( _ j , k[u]-f_j , k ) ,  k=1,  ,n ,  j=1,  ,m [ eq : relax ] , where the initial datum is the result of the transport step at points @xmath83 at time @xmath89 [ eq : f_star ] ^*_k(x_j ) = |f ( x_j - v_k t ) ,  k=1,  ,n ,  j=1,  ,m . to solve equation ( [ eq : f_star ] ) we need the value of the equilibrium distribution @xmath70 at the center of the cell after the transport stage .",
    "in order to compute the maxwellian , the macroscopic quantities in the center of the cells , _",
    "i.e. _ the density , the mean velocity and the temperature , are given by summing the local value of the discrete distribution @xmath19 over the velocity set : @xmath90 , for all @xmath91 , where @xmath92 . the discrete equilibrium distribution at time @xmath93 , @xmath94 , is the solution of equation ( [ eq : minimmax ] ) with moments @xmath95 , for all @xmath91 .",
    "observe in fact that , the maxwellian distribution does not change during the relaxation step .",
    "in other words during this step the macroscopic quantities remain constants .",
    "we can now compute the solution of the relaxation stage as f^1_j , k= ( -t/)f^*_j , k+(1-(-t/))^1_j , k[u ] .",
    "the above equation furnishes only the new value of the distribution @xmath19 at time @xmath96 in the center of each spatial cell for each velocity @xmath97 .",
    "however in order to continue the computation , we need the value of the distribution @xmath19 in all points of the space .",
    "let us assume that the equilibrium distribution @xmath43 has the same shape than the distribution @xmath19 in space .",
    "thus , starting from the pointwise value of @xmath70 we define a piecewise constant function in space @xmath98 for each velocity @xmath97 .",
    "the values of this piecewise constant function are the values computed in the center of the spatial cells . in other words",
    ", one defines ^*_k(x)=_k(x , t^1)=^1_j , k , x ^*_k(x)=^*_k(x_j ) ,  j=1,  ,m .",
    "we can now rewrite the relaxation term directly in term of spatial continuous function as ^1_k(x)= _ k(x , t ) = ( -t/)^*_k(x ) + ( 1-(-t/))^*_k(x)[u ] . for each velocity @xmath97 the original shape in space for the distribution @xmath41 is preserved throughout the computation , and , as a consequence it drastically reduces the computational cost because no reconstruction is needed .    the time marching procedure can be now be described .",
    "[ [ generic - time - step - tntn1 . ] ] generic time step @xmath86 $ ] .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    given the value of the distribution function @xmath99 , for all @xmath100 , and all @xmath101 at time @xmath87 , the value of the distribution at time @xmath102 , @xmath103 , is given by _ k^*(x)=^n_k(x - v_kt ) , k=1, ",
    ",n ^n+1_k(x)=(-t/)^*_k(x)+(1-(-t/))^n+1_k(x)[u ] , k=1,  ,n , [ relaxdvm ] where @xmath104 $ ] is a piecewise constant function with the discontinuities located in the same positions as the distribution @xmath105 .",
    "it is computed considering the solution of the minimization problem ( [ eq : minimmax ] ) relative to the moments value in the center of each spatial cell after the transport stage : @xmath106 .",
    "these moments are given by computing @xmath107 where @xmath108 is the value that the distribution function takes after the transport stage in the center of each spatial cell .",
    "* due to the fact that the relaxation stage preserves the macroscopic quantities , the scheme is globally conservative by construction .",
    "in fact , at each time step , the change of density , momentum and energy is only due to the transport step .",
    "this latter being exact , does preserve the macroscopic quantities as well as the distribution function .",
    "* for the same reason , except for the constrained optimization procedure or @xmath109 .",
    "however , the introduction of such a step will cause the minimization step to be solved numerically instead of analytically .",
    "this will means that the computational cost of the method will increase . in the present work",
    ", we did not attack this problem and we remind to the future for the development of strictly positivity preserving fast kinetic schemes . ] , the scheme is also unconditionally positive .",
    "more precisely , if @xmath110 , and @xmath111 and the optimization procedure preserves positivity , then @xmath112 if the initial datum is positive @xmath113 for all @xmath111 .",
    "in fact , the transport maintains the shape of @xmath19 unchanged in space while the relaxation towards the maxwellian distribution is a convex combination of @xmath43 and @xmath114 both being positive . *",
    "the time step @xmath115 is constrained by the cfl condition t _ k ( ) 1 = .",
    "[ eq : time ] observe that this choice is not mandatory , in fact the scheme is stable for every choice of the time step .",
    "however , being based on a time splitting technique the error is of the order of @xmath115 .",
    "this suggests to take the usual cfl condition in order to maintain the time splitting error small enough . * some experiments",
    "have been done on the influence of the cfl condition on the schemes .",
    "the results showed that , for the cases tested , up to @xmath116 in ( [ eq : time ] ) , the fks scheme provides a solution very close to the case @xmath117 for all the values of the knudsen number .",
    "moreover , when the knudsen number is large , _",
    "i.e _ the bgk equations are very close to a free transport equation , using larger values of the cfl number does not cause any more degradation to the global accuracy because _ de facto _ the fks scheme solves the transport term exactly .",
    "as observed in @xcite the fks scheme performs very well in collisionless or almost collisionless regimes . in these cases , in fact , the relaxation stage is neglectable and only the exact transport does play a role .",
    "however , when moving from rarefied to dense regimes the projection over the equilibrium distribution becomes more important .",
    "thus , the accuracy of the scheme was expected to diminish in fluid regimes , because the projection method is only first order accurate .",
    "these behaviors were , in fact , observed in the numerical simulations performed @xcite . in the present paper",
    ", we developed a method which preserves the high spatial accuracy observed with the fks schemes for rarefied regimes and which becomes a high order shock capturing scheme applied to the kinetic equation ( [ eq : b ] ) in the fluid limit .",
    "this means that throughout all possible regimes , from fluid to extremely rarefied flows , the new scheme maintains high accuracy in space .",
    "moreover , the new method does not cause the computational efficiency to drop down . as shown in the numerical test section the high order fast kinetic schemes ( hofks )",
    "still works with computational costs close to the original fks method and , for unsteady problems , in which time averaging are unusable , it is still much faster than dsmc methods .",
    "we recall that we only focus on the spatial accuracy in this paper , we postpone to the future the development of high order schemes both in time and space .",
    "the idea , onto which the method is based , is to solve the equilibrium part of the distribution function with a macroscopic scheme instead of a kinetic scheme .",
    "in fact , observe that at each time step , the relaxation stage consists in computing the distribution function @xmath118 as a convex combination of the transported distribution @xmath119 and a maxwellian distribution @xmath120 .",
    "the maxwellian distribution @xmath120 is computed through the moments of @xmath119 .",
    "then , in order to complete one step in time , the scheme solves the transport part which leads to the new intermediate distribution @xmath119 at time @xmath121 .",
    "so now , in hofks scheme , we replace the moments at time index @xmath121 , obtained from the solution of the transport stage at time @xmath61 with another set of moments .",
    "this new set of moments are computed through the same convex combination of the relaxation stage ( [ relaxdvm ] ) .",
    "however now , to the contrary of ( [ relaxdvm ] ) , the convex combination is performed between the moments which come from the solution of the transport part of the kinetic equation and the moments which are solutions of the compressible euler equations . at this point , if the compressible euler equations are solved with a high order shock capturing scheme in the limit @xmath122 the hofks corresponds to the same method for the macroscopic equations .",
    "we detail this new scheme in the sequel .    in order to keep notations simple and compact",
    "we introduce three operators : the projection operator @xmath123 , the relaxation operator @xmath124 and the transport operator @xmath125 which act on a time step @xmath115 .    from the kinetic variable @xmath19 ( or @xmath11 )",
    "the projection operator computes the macroscopic averages @xmath126 , thus ^n_j(f)=m_kf_j , k^n v_=m_k_k[u_j^n ] v_=^n_j()=u(x_j , t^n ) , since the local maxwellian @xmath43 has the same moments of the distribution function @xmath19 .",
    "the relaxation and transport operators solve the relaxation and transport steps for piecewise constant functions @xmath127 and @xmath128 or equivalently for pointwise functions @xmath129 and @xmath130 $ ] for all velocities @xmath131 .",
    "the relaxation operator has the form _",
    "t()=+(1- ) , where @xmath132 , whereas the transport operator reads _",
    "t()=(x - vt ) .    in order to describe the hofks scheme ,",
    "let us start , to the contrary of fks scheme , from the relaxation step . recall that starting either from the relaxation or from the transport step gives consistent splitting discretizations .",
    "suppose that the distribution function @xmath99 is known as well as the function @xmath133 for all @xmath100 , then , as first step of the splitting we have ^*=_t(^n ) = ^n+ ( 1- ) ^n .",
    "the distribution function @xmath134 is given by a convex combination of the transported distribution and the maxwellian distribution .",
    "then , the transport step , applied to the solution of the relaxation step , produces the so called kinetic solution ( @xmath135 ) at time index @xmath121 _ k^n+1=_t(^*)=_t(^n)+_t((1- ) ^n ) . on the other hand",
    ", the kinetic solution in terms of the macroscopic moments furnishes the following values [ eq : uk ] u_k(x_j , t^n+1)&=&^n+1_j(_t(^ * ) ) + & = & ^n+1_j(_t(^n))+^n+1_j(_t((1- ) ^n ) ) + & = & u_*(x_j , t^n+1)+u_m(x_j , t^n+1 ) . in order to construct the hofks scheme we replace the moments @xmath136 by the moments obtained solving the compressible euler equations that we call @xmath137 .",
    "( the details of the numerical scheme used will be given next . )",
    "+ thus the final moments used in the solution are given by u_h(x_j , t^n+1)= u_*(x_j , t^n+1)+u_e(x_j , t^n+1 ) [ eq : mom]where @xmath138 stands for hybrid . before describing the last step which ensures consistency between the kinetic solver for the maxwellian distribution and the macroscopic solver for the compressible euler equations , we state the following result ( see @xcite for a proof ) :    if we denote by @xmath139 the solution of the euler equations ( [ eq : sys1 ] ) and with @xmath140 the solution of the kinetic equation in which we consider initial thermodynamical equilibrium , _ i.e. _ @xmath141 $ ] .",
    "if in addition we consider as initial data @xmath142 then u_e(x , t+t)=u_m(x , t+t)+o(t^2 ) .",
    "[ eq : est ] [ th:1 ]    by virtue of the above result , we can replace the moments after the transport @xmath143 with @xmath144 at each time step without affecting the overall first order accuracy in time of the splitting method .",
    "however , to have consistency between the macroscopic solution and the kinetic discretized solution , it is necessary that the advected equilibrium satisfies ^n+1_j ( _ t((1- ) ^n ) ) = u_e(x_j , t^n+1 ) , [ eq : cons ] namely the kinetic solution to the fluid equations in one time step should match the direct solution to the limiting fluid equations .",
    "this is not true in general . to solve this problem",
    ", we apply again the minimization method ( [ eq : minimmax ] ) to find the new distribution @xmath145 which shares the same moments than the macroscopic solution @xmath137 .",
    "thus , we search for a distribution @xmath146 which satisfies the following minimization problem : @xmath147 then again , starting from the pointwise solution , we define as in the fks schemes a new piecewise constant equilibrium function @xmath148 sharing its shape with @xmath149 as _t((1-)^n_k ) ( x)=_t ( ( 1-)^n_j , k ) , x ^n_k(x)=^n_k(x_j ) ,  j=1,  ,m . finally , the new distribution @xmath19 , at time index @xmath121 , is defined as ^n+1=_t(^n)+_t((1-)^n_k ) , while the new moments are given by ( [ eq : mom ] ) .",
    "this somehow ends the methodology to design hofks schemes . what remains to be detailed",
    "is how the solution of the compressible euler equations @xmath150 is computed .",
    "remark that at this point any solver for the compressible euler equations can be used .",
    "one example is proposed in the following .      as a first example we propose the muscl finite volume ( fv ) scheme .",
    "this is also the scheme used in the numerical test section .",
    "it reads , starting from @xmath151 , + = 0 , [ eq : discmom ] where discrete fluxes are defined as in @xcite by _ j+1/2(u_e^n ) = ( f(u^n_e , j)+f(u^n_e , j+1 ) ) - ( u^n_e , j+1-u^n_e , j ) + ( ^n,+_j-^n,-_j+1 ) with @xmath152 the flux of the compressible euler equations and ^n,_j=(f(u^n_e , j+1)u^n_e , j+1-f(u^n_e , j)u^n_e , j)(^n,_j ) with @xmath153 being the slope limiter , as instance we use the van leer slope limiter ( ) = , where the variable @xmath154 is defined as following ^n,_j=. the above ratio of vectors is defined componentwise and @xmath155 represent the eigenvalues of the euler system .",
    "we have proposed second order schemes to solve the compressible euler equations . however , any other solver can in principle be used , which could additionally increase the spatial accuracy of the hofks method , for instance weno methods @xcite or a genuine mood scheme @xcite .",
    "+ finally , the time step @xmath115 is chosen such that it satisfies the stability condition of the euler solver , in fact we recall that the fks is stable for all choices of the time step .",
    "this means that the time step is driven for the muscl scheme by t = ( ) .",
    "[ eq : time2 ] with @xmath156 the largest eigenvalue of the euler system .",
    "if a more cfl restrictive euler solver has to be used , as instance with a weno scheme , then the time step will be accordingly reduced .",
    "in this section , we present several numerical tests to illustrate the main features of the method and the improvements with respect to the fks scheme .",
    "the following methodology is adopted    first , we test the hofks method on the one dimensional sod shock tube . in this case",
    ", we compare two kinetic schemes ( the fks , a first order upwind scheme and the hofks a second order scheme ) versus a finite volume ( fv ) upwind scheme , a second order finite volume muscl method ( muscl ) and a third order weno finite difference scheme ( weno ) . for any fluid regime",
    "the goal is threefold : ( i ) the two kinetic schemes produce valide results , ( ii ) the hofks is more accurate than fks and , ( iii ) the accuracy of fks lays in between fv and muscl and the accuracy of hofks lays in between muscl and weno .    in a second test case",
    "we use the exact smooth solution of the advected isentropic vortex of the 2d euler equations to assess the effective numerical accuracy and rate of convergence of fks , hofks and also the unlimited version of hofks .",
    "the solution being smooth an unlimited scheme can be used to measure the maximal accuracy that can be obtained with our choice of euler solver .",
    "then , in a third series of tests we solve a two dimensional - two dimensional bgk equation and we compare our method with a monte carlo scheme ( dsmc ) for @xmath157 , and , in the fluid limit , @xmath158 , with fv and muscl schemes .",
    "the goal is to show that a genuine multi - dimensional solutions with shocks and interaction of waves can be accurately captured with hofks in any fluid regime .",
    "we also report the computational times for the two dimensional simulations for the hofks , the fks and the dsmc methods .",
    "all simulations are performed on a mono - processor laptop machine .     for the density , with @xmath159 ( top left ) , @xmath157 ( top right ) , @xmath160 ( bottom left ) and @xmath158 ( bottom right).,title=\"fig : \" ]   for the density , with @xmath159 ( top left ) , @xmath157 ( top right ) , @xmath160 ( bottom left ) and @xmath158 ( bottom right).,title=\"fig : \" ] +   for the density , with @xmath159 ( top left ) , @xmath157 ( top right ) , @xmath160 ( bottom left ) and @xmath158 ( bottom right).,title=\"fig : \" ]   for the density , with @xmath159 ( top left ) , @xmath157 ( top right ) , @xmath160 ( bottom left ) and @xmath158 ( bottom right).,title=\"fig : \" ] +     for the mean velocity , with @xmath159 ( top left ) , @xmath157 ( top right ) , @xmath160 ( bottom left ) and @xmath158 ( bottom right).,title=\"fig : \" ]   for the mean velocity , with @xmath159 ( top left ) , @xmath157 ( top right ) , @xmath160 ( bottom left ) and @xmath158 ( bottom right).,title=\"fig : \" ] +   for the mean velocity , with @xmath159 ( top left ) , @xmath157 ( top right ) , @xmath160 ( bottom left ) and @xmath158 ( bottom right).,title=\"fig : \" ]   for the mean velocity , with @xmath159 ( top left ) , @xmath157 ( top right ) , @xmath160 ( bottom left ) and @xmath158 ( bottom right).,title=\"fig : \" ] +     for the temperature , with @xmath159 ( top left ) , @xmath157 ( top right ) , @xmath161 ( bottom left ) and @xmath158 ( bottom right).,title=\"fig : \" ]   for the temperature , with @xmath159 ( top left ) , @xmath157 ( top right ) , @xmath161 ( bottom left ) and @xmath158 ( bottom right).,title=\"fig : \" ] +   for the temperature , with @xmath159 ( top left ) , @xmath157 ( top right ) , @xmath161 ( bottom left ) and @xmath158 ( bottom right).,title=\"fig : \" ]   for the temperature , with @xmath159 ( top left ) , @xmath157 ( top right ) , @xmath161 ( bottom left ) and @xmath158 ( bottom right).,title=\"fig : \" ] +      we consider the 1d/1d sod test with @xmath162 mesh points in physical and @xmath163 points in velocity spaces .",
    "the boundaries in velocity space are set to @xmath164 and @xmath165 .",
    "the left and right states are given by a density @xmath166 , mean velocity @xmath167 and temperature @xmath168 if @xmath169 , while @xmath170 , @xmath171 , @xmath172 if @xmath173 .",
    "the gas is , at the initial state , in thermodynamical equilibrium .",
    "we repeat the same test with four different values of the knudsen number , _",
    "i.e. _ @xmath159 , @xmath157 , @xmath160 and @xmath158 .",
    "we plot the results for the final time @xmath174 for the density ( figure [ sod1 ] ) , the mean velocity ( figure [ sod2 ] ) and the temperature ( figure [ sod3 ] ) . in each figure",
    "we compare the hofks method with the fks method .",
    "we reported also the solutions computed with a third order weno method , a second - order muscl method and a first - order upwind method @xcite .",
    "these numerical methods , used as reference , employ the same discretization parameters , except for the time steps which for each scheme is chosen in order to satisfy the stability conditions .    from figures ( [ sod1 ] ) to ( [ sod3 ] ) we observe that the hofks , the fks and the weno methods give identical or almost identical results for @xmath159 , this result was expected .",
    "we build up the method in such a way that for larger @xmath175 it behaves like the original fast kinetic scheme , because we knew that in these regimes the fks already gave very good results . for larger values of @xmath175",
    "we found the same behaviors as for the case @xmath159 , thus we did not report simulations results . starting from @xmath157 , some small differences arise between the hofks and the fks methods , however both schemes are still very close to the weno solution . for @xmath160 , we clearly see differences between the high order fast kinetic scheme and the fast kinetic scheme .",
    "in particular , we see that the hofks remains stick to the third order weno scheme while the fks not .",
    "this aspect is made very clear for @xmath158 . in this latter case",
    ", the hofks gives very good results while the fks scheme lays between a first and a second order space accurate method .",
    "the key point of the schemes developed is their very low cpu time consumption in comparison to other existing methods .",
    "this gain as expected is not so relevant for the one dimensional case , while it becomes very important for the two and the three dimensional cases .",
    "thus , in the next subsection we report some two dimensional simulations together with their computational costs .",
    "this vortex test case is a classical test to assess the accuracy of numerical schemes because this problem produces a genuine 2d smooth solution of euler equations .",
    "the overall error produced by our kinetic schemes associates spacial discretization error , time discretization error and velocity discretization error . in our case the first order time discretization dooms the overall scheme to remain first order accurate only . nevertheless using a time step @xmath115 of the order @xmath176 or even smaller allows to reduce the time discretization error to a negligible quantity by respect to space discretization error . doing so we can effectively measure the spacial accuracy of the overall scheme when the velocity error is kept small enough . + to do so an isentropic vortex is introduced to a uniform mean flow , by small perturbations of velocity , density and temperature variables and is detailed in @xcite , @xcite as instance .",
    "the simulation domain @xmath177 is the square @xmath178\\times [ 0,10]$ ] and we consider an initial gas flow given by the following background condition @xmath179 , @xmath180 , @xmath181 , @xmath182 , with a normalized ambient temperature @xmath183 computed with the perfect gas equation of state and @xmath184 .    ,",
    "@xmath185 with @xmath186 the center of the vortex . , title=\"fig:\",scaledwidth=40.0%,scaledwidth=40.0% ] , @xmath185 with @xmath186 the center of the vortex . ,",
    "title=\"fig:\",scaledwidth=40.0%,scaledwidth=35.0% ]    a vortex centered at @xmath187 is added to the ambient gas at the initial time @xmath75 with the following conditions @xmath188 , @xmath189 , and @xmath190 @xmath191 with @xmath192 , @xmath185 and vortex strength is given by @xmath193 .",
    "consequently , the initial density is given by @xmath194 and the pressure ig given by @xmath195 .",
    "we assume periodic conditions and the exact solution at any time @xmath196 is the same vortex but translated in the direction @xmath197 .",
    "note that @xmath198 generates a static vortex which is usually simpler to solve and can also be misleading . the exact density function for any point at time @xmath15",
    "is denoted by @xmath199 , moreover in figure  [ fig : vortex ] are plotted the exact solution for density , temperature , pressure and velocity as a function of @xmath200 .",
    "a series of refined meshes ( from @xmath201 up to @xmath202 cells ) are successively used to compute the numerical solution where @xmath158 is used .",
    "the meshes are made of @xmath203 points in velocity space with bounds @xmath204^{2}$ ] .",
    "the errors at time @xmath205 for @xmath27 spatial cells in one direction are given by @xmath206 the rates of convergence are computed as @xmath207 for two meshes with @xmath208 and @xmath27 cells . in table",
    "[ tab : isentropic_vortex_error ] are gathered the @xmath209 and @xmath210 errors on the density variables and rates of convergence for fks , the unlimited hofks and hofks at final time @xmath211 .",
    "as expected the fks produces only first order accurate results in @xmath209 and @xmath210 norms .",
    "contrarily the unlimited hofks can reach a genuine higher order of accuracy in both norms ; the high accuracy in @xmath210 norm is due to the fact that the solution is smooth and no limiter is applied therefore extrema are only little diffused compared to limited schemes .",
    "finally the ( limited ) hofks behaves , as expected , like a high order accurate scheme in @xmath209 norm and like a first order scheme in @xmath210 norm .",
    "& & & & + @xmath49 & @xmath27 & @xmath209 err & & @xmath210 err & & @xmath209 err & & @xmath210 err & & @xmath209 err & & @xmath210 err & + 1/25 & 25@xmath212 & 1.26e-02 &  & 2.78e-01 &  & 6.36e-03 &  & 1.16e-01 &  & 4.64e-03 &  & 9.21e-02 & + 1/50 & 50@xmath212 & 8.36e-03 & 0.59 & 2.07e-01 & 0.43 & 2.12e-03 & 1.59 & 3.77e-02 & 1.62 & 2.08e-03 & 1.16 & 5.60e-02 & 0.72 + 1/100 & 100@xmath212 & 5.09e-03 & 0.72 & 1.22e-01 & 0.76 & 5.68e-04 & 1.90 & 1.10e-02 & 1.78 & 6.40e-04 & 1.70 & 2.85e-02 & 0.97 + 1/200 & 200@xmath212 & 2.86e-03 & 0.82 & 6.34e-02 & 0.95 & 1.49e-04 & 1.93 & 3.07e-03 & 1.84 & 1.64e-04 & 1.97 & 1.00e-02 & 1.51 + 1/300 & 300@xmath212 & 2.03e-03 & 0.88 & 4.27e-02 & 1.01 & 7.08e-05 & 1.83 & 1.55e-03 & 1.69 & 7.55e-05 & 1.91 & 6.56e-03 & 1.04 + 1/400 & 400@xmath212 & 1.56e-04 & 0.91 & 3.17e-02 & 1.03 & 4.36e-05 & 1.69 & 9.85e-04 & 1.57 & 4.52e-05 & 1.79 & 4.93e-03 & 0.99 + & & 1 & & 1 & & 2 & & 2 & & 2 & & 1 +    we also display in figure [ fig : convergence_isentropic ] the convergence curves corresponding to the errors of table [ tab : isentropic_vortex_error ] .    [ cols=\"^,^ \" , ]     we consider now the 2d/2d sod test on a square @xmath213\\times[0,2]$ ] .",
    "the velocity space is also a square with bounds @xmath164 and @xmath165 , _",
    "i.e. _ @xmath204^{2}$ ] , discretized with @xmath214 points in each direction which gives @xmath203 points .",
    "the domain is divided into two parts , a disk centered at point @xmath215 of radius @xmath216 is filled with a gas with density @xmath166 , mean velocity @xmath167 and temperature @xmath168 , whereas the gas in the rest of the domain is initiated with @xmath170 , @xmath171 , @xmath172 .",
    "the final time is @xmath217 .",
    "we report results for two different values of the knudsen number @xmath157 and @xmath158 .",
    "for these regimes , we can appreciate the differences between the high order fast kinetic scheme and the fast kinetic scheme . for larger @xmath175 , as expected , the solutions furnished by the two methods are very close and thus we do not show the figures . in the case of @xmath158",
    "we compare the results between the hofks and the fks method with a first order and a second order muscl scheme for the compressible euler equations . in the case of @xmath157",
    "we compare the results between the hofks and the fks method with a dsmc method for the boltzmann - bgk equation . for this latter , we employed on average @xmath163 particles per cell and we averaged the solution over @xmath163 realizations .    in figure  [ sod2d1 ] , we report the profiles fixing @xmath218 for respectively the density , the mean velocity in the @xmath219-direction and in the @xmath220-direction and the temperature using a @xmath221 mesh for @xmath158 . in figure",
    "[ sod2d3 ] , we report the same profiles for the same spatial position , _",
    "i.e. _ @xmath218 , for the same macroscopic quantities but for a larger value of the knudsen number : @xmath157 . in this latter case , for the velocity in the @xmath219-direction , we did not report the solution for the dsmc method because the number of particles employed does not permit to compute the solution with sufficient precision .",
    "observe , in fact , that in this test case , the final value of the @xmath219-velocity is of the order of @xmath222 , which is a value that due to the statistical fluctuations is very difficult to capture with dsmc methods .",
    "moreover in figure  [ sod2d1 ] bottom panels , we report some magnifications of the same profiles which permits to better appreciate the differences between the methods .",
    "we observe that , as in the 1d case , the accuracy of the fks method lies between the first and the second order spatial accuracy for small @xmath175 . on the other hand , we can not see the differences between the hofks scheme and the second order muscl scheme for @xmath158 even with the magnifications .",
    "this is because the same muscl scheme is used for solving the compressible euler equations and for constructing the hofks scheme . in the case",
    "@xmath157 , the hofks method , as in the 1d case , gives sharper solutions with respect the fks method .",
    "this is also the case for the dsmc method which exhibits a larger numerical diffusion with respect to our kinetic scheme . for larger @xmath175 , the hofks , the     and @xmath218 for @xmath158 .",
    "top - middle : density ( top left ) , velocity in the @xmath219-direction ( top right ) , velocity in the @xmath220-direction ( middle left ) and temperature ( middle right ) .",
    "bottom : magnification of the solution .",
    "hofks method continuous line , fks method dash dotted line , first order and second order muscl methods dotted lines.,title=\"fig : \" ]   and @xmath218 for @xmath158 .",
    "top - middle : density ( top left ) , velocity in the @xmath219-direction ( top right ) , velocity in the @xmath220-direction ( middle left ) and temperature ( middle right ) .",
    "bottom : magnification of the solution .",
    "hofks method continuous line , fks method dash dotted line , first order and second order muscl methods dotted lines.,title=\"fig : \" ] +   and @xmath218 for @xmath158 .",
    "top - middle : density ( top left ) , velocity in the @xmath219-direction ( top right ) , velocity in the @xmath220-direction ( middle left ) and temperature ( middle right ) .",
    "bottom : magnification of the solution .",
    "hofks method continuous line , fks method dash dotted line , first order and second order muscl methods dotted lines.,title=\"fig : \" ]   and @xmath218 for @xmath158 .",
    "top - middle : density ( top left ) , velocity in the @xmath219-direction ( top right ) , velocity in the @xmath220-direction ( middle left ) and temperature ( middle right ) .",
    "bottom : magnification of the solution .",
    "hofks method continuous line , fks method dash dotted line , first order and second order muscl methods dotted lines.,title=\"fig : \" ] +   and @xmath218 for @xmath158 .",
    "top - middle : density ( top left ) , velocity in the @xmath219-direction ( top right ) , velocity in the @xmath220-direction ( middle left ) and temperature ( middle right ) .",
    "bottom : magnification of the solution .",
    "hofks method continuous line , fks method dash dotted line , first order and second order muscl methods dotted lines.,title=\"fig : \" ]    fks and the dsmc almost collapse on the same line , if the number of particles is chosen sufficiently large , and thus we did not report any result .     and @xmath218 for @xmath157 .",
    "top - middle : density ( top left ) , velocity in the @xmath219-direction ( top right ) , velocity in the @xmath220-direction ( middle left ) and temperature ( middle right ) .",
    "bottom : magnification of the solution .",
    "hofks method continuous line , fks method dash dotted line , dsmc dotted line .",
    "( dsmc results are not plotted for the y - component of velocity because the noise induced by the method produces oscillations the amplitude of which are far greater than the scale of the figure . ) , title=\"fig : \" ]   and @xmath218 for @xmath157 .",
    "top - middle : density ( top left ) , velocity in the @xmath219-direction ( top right ) , velocity in the @xmath220-direction ( middle left ) and temperature ( middle right ) .",
    "bottom : magnification of the solution .",
    "hofks method continuous line , fks method dash dotted line , dsmc dotted line .",
    "( dsmc results are not plotted for the y - component of velocity because the noise induced by the method produces oscillations the amplitude of which are far greater than the scale of the figure . ) , title=\"fig : \" ] +   and @xmath218 for @xmath157 . top - middle : density ( top left ) , velocity in the @xmath219-direction ( top right ) , velocity in the @xmath220-direction ( middle left ) and temperature ( middle right ) .",
    "bottom : magnification of the solution .",
    "hofks method continuous line , fks method dash dotted line , dsmc dotted line .",
    "( dsmc results are not plotted for the y - component of velocity because the noise induced by the method produces oscillations the amplitude of which are far greater than the scale of the figure . ) , title=\"fig : \" ]   and @xmath218 for @xmath157 .",
    "top - middle : density ( top left ) , velocity in the @xmath219-direction ( top right ) , velocity in the @xmath220-direction ( middle left ) and temperature ( middle right ) .",
    "bottom : magnification of the solution .",
    "hofks method continuous line , fks method dash dotted line , dsmc dotted line .",
    "( dsmc results are not plotted for the y - component of velocity because the noise induced by the method produces oscillations the amplitude of which are far greater than the scale of the figure . ) , title=\"fig : \" ] +   and @xmath218 for @xmath157 .",
    "top - middle : density ( top left ) , velocity in the @xmath219-direction ( top right ) , velocity in the @xmath220-direction ( middle left ) and temperature ( middle right ) .",
    "bottom : magnification of the solution .",
    "hofks method continuous line , fks method dash dotted line , dsmc dotted line .",
    "( dsmc results are not plotted for the y - component of velocity because the noise induced by the method produces oscillations the amplitude of which are far greater than the scale of the figure . ) , title=\"fig : \" ]    to conclude this test case study , we report , in table  [ tab : cpu_sod2d1 ] , the cpu time @xmath15 , as well as the cpu time per time cycle @xmath223 , the cpu time per cycle per cell @xmath224 and the number of cycles needed to perform the computation for different meshes in space for respectively the fks , the hofks and the dsmc method when the knudsen number is @xmath157 . for the hofks and",
    "the fks schemes the meshes are fixed in velocity and made of @xmath203 points . for the dsmc method we choose the same number of particles which has been used to produce the results shown in the previous figures , _",
    "i.e. _ @xmath163 particles in average per cell and @xmath163 realizations .",
    "we computed the computational effort for these three schemes repeating the same test using different meshes in space ranging from @xmath225 to @xmath226 .",
    "the results of this analysis can be summarized as follows .",
    "the hofks method is around @xmath227 times more expensive than the fks method for all the cases studied .",
    "this new scheme is however still very efficient : around @xmath228 minutes to compute the solution on a @xmath221 spacial mesh for a kinetic equation on a mono - processor laptop .",
    "for comparison the dsmc method , which is also known to be a fast method , requires around @xmath229 minutes .",
    "the ratio between the two methods is about @xmath230 .",
    "moreover dsmc gives less accurate solutions as seen on the @xmath220-component of velocity which can not be accurately captured .",
    "@xmath231 & * cycle * & * time * & * time / cycle * & * time / cell * + @xmath232 & @xmath233 & @xmath234 & @xmath235 ( s ) & @xmath223 ( s ) & @xmath224 ( s ) +   + @xmath236 & @xmath237 & @xmath238 & @xmath239s & @xmath240 & @xmath241 + @xmath242 & @xmath243 & & & & + @xmath244 & @xmath245 & @xmath246 & @xmath247s & @xmath248 & @xmath249 + @xmath250 & @xmath251 & & & & + @xmath252 & @xmath253 & @xmath254 & @xmath254s & @xmath23 & @xmath255 + @xmath256 & @xmath257 & & & & + @xmath258 & @xmath259 & @xmath163 & @xmath260s & @xmath261 & @xmath262 + @xmath263 & @xmath264 & & & & +   + @xmath236 & @xmath237 & @xmath238 & @xmath265s & @xmath266 & @xmath267 + @xmath242 & @xmath243 & & & & + @xmath244 & @xmath245 & @xmath246 & @xmath268s & @xmath269 & @xmath270 + @xmath250 & @xmath251 & & & & + @xmath252 & @xmath253 & @xmath254 & @xmath271s & @xmath272 & @xmath273 + @xmath256 & @xmath257 & & & & + @xmath258 & @xmath259 & @xmath163 & @xmath274s & @xmath275 & @xmath276 + @xmath263 & @xmath264 & & & & +   + & @xmath277 & & & & + @xmath236 & @xmath278 & @xmath279 & @xmath280s & @xmath281 & @xmath282 + @xmath242 & @xmath283 & & & & + @xmath244 & @xmath284 & @xmath285 & @xmath286s & @xmath287 & @xmath288 + @xmath250 & @xmath289 & & & & + @xmath252 & @xmath290 & @xmath291 & @xmath292s & @xmath293 & @xmath294 + @xmath256 & @xmath295 & & @xmath296mn & & + @xmath258 & @xmath297 & @xmath298 & @xmath299s & @xmath300 & @xmath301 + @xmath263 & @xmath302 & & @xmath303mn & & +      finally we consider a 2d/2d implosion problem on the square @xmath213\\times[0,2]$ ] discretized with @xmath304 points . as in the previous test ,",
    "the velocity space is a square but with larger bounds , _",
    "i.e. _ @xmath305 and @xmath306 , which means @xmath307^{2}$ ] , discretized with @xmath308 points in each direction which gives @xmath309 points .",
    "the domain is divided into two parts , a disk centered at point @xmath215 of radius @xmath216 is filled with a gas with density @xmath310 , mean velocity @xmath167 and temperature @xmath311 , whereas the gas in the rest of the domain is initiated with @xmath312 , @xmath172 , velocity in the @xmath219-direction @xmath313 for @xmath314 $ ] and @xmath315 for @xmath316 $ ] while the velocity in the @xmath220-direction is initiated with @xmath317 for @xmath318 $ ] and @xmath319 for @xmath320 $ ] .",
    "the final time is @xmath217 .     with @xmath157 .",
    "hofks scheme ( left ) , dsmc scheme ( right ) . from top to bottom : density , temperature , @xmath219-velocity , @xmath220-velocity .",
    ", title=\"fig : \" ]   with @xmath157 .",
    "hofks scheme ( left ) , dsmc scheme ( right ) . from top to bottom : density , temperature , @xmath219-velocity , @xmath220-velocity .",
    ", title=\"fig : \" ]   with @xmath157 .",
    "hofks scheme ( left ) , dsmc scheme ( right ) . from top to bottom : density , temperature , @xmath219-velocity , @xmath220-velocity .",
    ", title=\"fig : \" ]   with @xmath157 .",
    "hofks scheme ( left ) , dsmc scheme ( right ) . from top to bottom : density , temperature , @xmath219-velocity , @xmath220-velocity .",
    ", title=\"fig : \" ]   with @xmath157 .",
    "hofks scheme ( left ) , dsmc scheme ( right ) . from top to bottom : density , temperature , @xmath219-velocity , @xmath220-velocity .",
    ", title=\"fig : \" ]   with @xmath157 .",
    "hofks scheme ( left ) , dsmc scheme ( right ) . from top to bottom : density , temperature , @xmath219-velocity , @xmath220-velocity .",
    ", title=\"fig : \" ]   with @xmath157 .",
    "hofks scheme ( left ) , dsmc scheme ( right ) . from top to bottom : density , temperature , @xmath219-velocity , @xmath220-velocity .",
    ", title=\"fig : \" ]   with @xmath157 .",
    "hofks scheme ( left ) , dsmc scheme ( right ) . from top to bottom : density , temperature , @xmath219-velocity , @xmath220-velocity .",
    ", title=\"fig : \" ]     & * time * & * time / cycle * & * time / cell * + @xmath232 & & @xmath234 & @xmath235 ( s ) & @xmath223 ( s ) & @xmath224 ( s ) +   + & @xmath321 & & & & + @xmath236 & @xmath322 & @xmath323 & @xmath324s & @xmath325 & @xmath326 + @xmath242 & @xmath327 & & & & + @xmath244 & @xmath328 & @xmath329 & @xmath285s & @xmath330 & @xmath331 + @xmath250 & @xmath332 & & & & + @xmath252 & @xmath333 & @xmath334 & @xmath335s & @xmath336 & @xmath337 + @xmath256 & @xmath338 & & & & + @xmath258 & @xmath339 & @xmath340 & @xmath341s & @xmath342 & @xmath343 + @xmath263 & @xmath344 & & @xmath345mn & & +   + & @xmath346 & & & & + @xmath236 & @xmath347 & @xmath268 & @xmath348s & @xmath349 & @xmath350 + @xmath242 & @xmath283 & & & & + @xmath244 & @xmath351 & @xmath306 & @xmath352s & @xmath353 & @xmath354 + @xmath250 & @xmath289 & & & & + @xmath252 & @xmath355 & @xmath356 & @xmath357s & @xmath358 & @xmath359 + @xmath256 & @xmath295 & & @xmath360mn & & + @xmath258 & @xmath361 & @xmath362 & @xmath363s & @xmath364 & @xmath365 + @xmath263 & @xmath302 & & @xmath366h & & +    we report the results for the knudsen number equal to @xmath157 comparing our scheme to the dsmc method for the boltzmann - bgk equation . for this latter ,",
    "we employed on average @xmath367 particles per cell and the solution is averaged over @xmath254 realizations .",
    "+ in figure  [ implosion ] we report the isolines of density , @xmath219-velocity , @xmath220-velocity and temperature , for the hofks method on the left and the dsmc method on the right . we observe that the two methods furnish the same results except for the statistical noise of the dsmc method . on the other hand ,",
    "the computational costs of the two approaches are still very different .",
    "we report , as for the 2d sod test , in table  [ tab : cpu_imp2d1 ] , the cpu time @xmath15 , as well as the cpu time per time cycle @xmath223 , the cpu time per cycle per cell @xmath224 and the number of cycles needed to perform the computation for different meshes in space . for the dsmc method",
    "we choose the same number of particles which has been used to produce the results shown in the figures , _",
    "i.e. _ @xmath367 particles in average per cell and @xmath254 realizations . the results of this last test can be summarized as follows : the hofks method takes around @xmath285 minutes for computing the solution on a @xmath221 mesh for a kinetic equation on a mono - processor laptop .",
    "the augmentation of the computational cost with respect to the 2d sod test is essentially due to : first the augmentation of the mesh points in which the velocity space is discretized and second the reduction of the time step .",
    "the reduction of the time step is caused by the macroscopic solver of the compressible euler equations which needs smaller time steps to ensure stability .",
    "for comparison the dsmc method , which still furnishes fluctuating and somewhat less accurate solutions , requires around @xmath368 minutes .",
    "the ratio of cpu time is around @xmath285 in favor of the hofks for a better overall accuracy .",
    "in this work we have presented an high order in space extension of a new super efficient numerical method for solving kinetic equations .",
    "the method is based on a splitting between the collision and the transport terms .",
    "the collision part is solved on a grid while the transport linear part is solved exactly by following the characteristics backward in time .",
    "the key point is that , conversely to semi - lagrangian methods , we do not need to reconstruct the distribution function at each time step .",
    "this permits to tremendously reduce the computational cost with respect other existing methods for kinetic equations . in this paper , in order to solve the limitations in term of spatial accuracy close to the thermodynamical equilibrium of the original fast kinetic scheme , we coupled the solution of the fks method with the solution of the compressible euler equations .",
    "then , we matched the moments obtained from the solution of the macroscopic equations with the moments obtained from the solution of the equilibrium part of the kinetic equation .",
    "finally , we recovered the solution as a convex combination of the two contributions : the macroscopic and the microscopic parts .",
    "this improvement permits to preserve the desired accuracy in space for all the different regimes studied .",
    "the numerical results show that the hofks method performs as the fks method for large values of the knudsen number and as a high order shock capturing scheme for small knudsen numbers .",
    "moreover , the method requires a small computational effort .",
    "numerical experiments have shown that the computational cost of the new method is around @xmath227 times larger than the previous fks method for a clear gain in accuracy when reached fluid regimes .",
    "most importantly , we showed that this new class of fast kinetic schemes is more accurate and around @xmath369 times faster than dsmc methods which are known to be efficient schemes .",
    "this important result opens the gate to extensive realistic numerical simulations of far from equilibrium physical models .    in this work ,",
    "we only focused on the spatial accuracy of the method and not on the time accuracy , we remind to future works for the development of schemes which are both accurate in time and in space .",
    "we also would like to extend the method to non uniform meshes and different discretizations of the velocity space .",
    "finally , we want to apply this method to other kinetic equations as the boltzmann or the vlasov equation .              , _ a low diffusion particle method for simulating compressible inviscid flows _ , j. comput .",
    "phys . , vol .",
    "227 , ( 2008 ) , pp .",
    "4653 - 4670 , _",
    "monte carlo and quasi - monte carlo methods _ , acta numerica , ( 1998 ) , pp .  1 - 49",
    ".                                                                      c .- w .",
    "shu , essentially non - oscillatory and weighted essentially non - oscillatory schemes for hyperbolic conservation laws , in advanced numerical approximation of nonlinear hyperbolic equations , b. cockburn , c. johnson , c .- w .",
    "shu and e. tadmor ( editor : a. quarteroni ) , lecture notes in mathematics 1697 springer ( 1998 ) 325432 ."
  ],
  "abstract_text": [
    "<S> in a recent paper we presented a new ultra efficient numerical method for solving kinetic equations of the boltzmann type @xcite . </S>",
    "<S> the key idea , on which the method relies , is to solve the collision part on a grid and then to solve exactly the transport part by following the characteristics backward in time . on the contrary to classical semi - lagrangian methods </S>",
    "<S> one does not need to reconstruct the distribution function at each time step . </S>",
    "<S> this allows to tremendously reduce the computational cost and to perform efficient numerical simulations of kinetic equations up to the six dimensional case without parallelization . </S>",
    "<S> however , the main drawback of the method developed was the loss of spatial accuracy close to the fluid limit . in the present work , </S>",
    "<S> we modify the scheme in such a way that it is able to preserve the high order spatial accuracy for extremely rarefied and fluid regimes . </S>",
    "<S> in particular , in the fluid limit , the method automatically degenerates into a high order method for the compressible euler equations . </S>",
    "<S> numerical examples are presented which validate the method , show the higher accuracy with respect to the previous approach and measure its efficiency with respect to well known schemes ( direct simulation monte carlo , finite volume , muscl , weno ) .    </S>",
    "<S> * keywords : * kinetic equations , discrete velocity models , semi lagrangian schemes , boltzmann - bgk equation , euler solver , high - order scheme . </S>"
  ]
}
{
  "article_text": [
    "the earliest attempts at simulating relativistic flows in the presence of strong gravitational fields are attributed to may and white ( 1966 , 1967 ) who investigated gravitational collapse in a one dimensional lagrangian code using artificial viscosity ( av ) methods @xcite to capture shock waves .",
    "wilson ( 1972 , 1979 ) subsequently introduced an alternative eulerian coordinate approach in multi - dimensional calculations , using traditional finite difference upwind methods and artificial viscosity for shock capturing . since these earliest studies ,",
    "av methods have continued to be developed in their popularity and applied to a variety of problems due largely to their general robustness @xcite .",
    "these methods are also computationally cheap , easy to implement , and easily adaptable to multi - physics applications .",
    "however , it has been demonstrated that problems involving high lorentz factors ( greater than a few ) are particularly sensitive to different implementations of the viscosity terms , and can result in large numerical errors if solved using time explicit methods @xcite .",
    "significant progress has been made in recent years to take advantage of the conservational form of the hydrodynamics system of equations to apply godunov - type methods and approximate riemann solvers to simulate ultra - relativistic flows @xcite .",
    "although godunov - based schemes are accepted as more accurate alternatives to av methods , especially in the limit of high lorentz factors , they are not infallible and should generally be used with caution .",
    "they may produce unexpected results in certain cases that can be overcome only with specialized fixes or by adding additional dissipation .",
    "a few known examples include the admittance of expansion shocks , negative internal energies in kinematically dominated flows , ` carbuncle ' effect in high mach number bow shocks , kinked mach stems , and odd / even decoupling in mesh - aligned shocks @xcite .",
    "godunov methods , whether they solve the riemann problem exactly or approximately , are also computationally much more expensive than their simpler av counterparts , and more difficult to extend the system of equations to include additional physics .",
    "hence we have undertaken this current study to explore an alternative approach of using high resolution , non - oscillatory , central difference ( nocd ) methods @xcite to solve the relativistic hydrodynamics equations .",
    "these new schemes combine the speed , efficiency , and flexibility of av methods with the advantages of the potentially more accurate conservative formulation approach of godunov methods , but without the cost and complication of riemann solvers and flux splitting .",
    "the nocd methods are implemented as part of a new code we developed called cosmos , and designed for fully general relativistic problems .",
    "cosmos is a collection of massively parallel , multi - dimensional , multi - physics solvers applicable to both newtonian and general relativistic systems , and currently includes five different computational fluid dynamics ( cfd ) methods , equilibrium and non - equilibrium primordial chemistry , photoionization , radiative cooling , radiation flux - limited diffusion , radiation pressure , scalar fields , newtonian external and self gravity , arbitrary spacetime geometries , and viscous stress .",
    "the five hydrodynamics methods include a godunov ( tvd ) solver for newtonian flows , two artificial viscosity codes for general relativistic systems ( differentiated by mesh or variable centering type : staggered versus zone - centered ) , and two relativistic methods based on non - oscillatory central difference schemes ( differentiated also by the mesh type : staggered versus centered in time and space ) .",
    "the emphasis in the following sections is to review our particular implementations of the av and nocd methods and compare results of various shock wave and accretion test calculations with other published results .",
    "we also explore the accuracy of both av and nocd methods in simulating ultra - relativistic shocks over a wide range of lorentz factors .",
    "both of the artificial viscosity methods in cosmos are based on an internal energy formulation of the perfect fluid conservation equations .",
    "the equations are derived from the 4-velocity normalization @xmath0 , the conservation of baryon number @xmath1 for the fluid rest mass density , the parallel component of the stress  energy conservation equation @xmath2 for internal energy , the transverse component of the stress  energy conservation equation @xmath3 for momentum , and an adiabatic equation of state ( eos ) for the fluid pressure @xmath4 , where @xmath5 is the adiabatic index and @xmath6 is the fluid internal energy density . for a perfect fluid ,",
    "the stress - energy tensor is @xmath7 where @xmath8 is the relativistic enthalpy , @xmath9 is the specific internal energy , @xmath10 is the contravariant 4-velocity , and @xmath11 is the 4-metric .",
    "the resulting equations can be written in flux conservative form as @xcite @xmath12 where @xmath13 is the determinant of the 4-metric , @xmath14 is the relativistic boost factor , @xmath15 is the generalized fluid density , @xmath16 is the transport velocity , @xmath17 is the covariant momentum density , and @xmath18 is the generalized internal energy density .",
    "we use the standard convention in which greek ( latin ) indices refer to 4(3)-space components .    the system of equations ( [ eqn : av_de ] ) ",
    "( [ eqn : av_mom ] ) are complemented by two additional expressions for @xmath19 and @xmath20 that are convenient for numerical computation . introducing a general tensor form for artificial viscosity @xmath21",
    "( see section [ sec : artificial ] ) , and defining @xmath22 ) w \\space , \\label{eqn : m2}\\ ] ] the momentum can be expressed as @xmath23 , and @xmath24 is computed from the normalization of the four  velocity @xmath25 .",
    "the coordinate velocity then becomes @xmath26 with @xmath27 .",
    "also , the time component of the four  velocity @xmath28 can be calculated from the normalization @xmath29 , and used to derive the following expressions for @xmath20 @xmath30 the former expression ( @xmath31 ) is used in the staggered mesh av schemes as it results in more accurate density and velocity jump conditions across shock fronts .",
    "the latter is more convenient for the zone centered nocd methods .",
    "the second class of numerical methods presented in this paper ( the nocd schemes ) are based on a simpler conservative hyperbolic formulation of the hydrodynamics equations . in this case , the equations are derived directly from the conservation of stress - energy @xmath32 expanding ( [ eqn : tmnu2 ] ) into time and space explicit parts yields the flux conservative equations for general stress - energy tensors @xmath33 with curvature source terms @xmath34 substituting the perfect fluid stress tensor ( [ eqn : tmn ] ) into ( [ eqn : tmnu3 ] ) , and including baryon conservation results in the following set of equations @xmath35}{\\partial x^i }    & = & \\sigma^0 ,        \\label{eqn : hr_en } \\\\   \\frac{\\partial { \\cal s}^j}{\\partial t }    + \\frac{\\partial ( { \\cal s}^j v^i)}{\\partial x^i }    + \\frac{\\partial [ \\sqrt{-g}~(g^{ij } - g^{0j } v^i)~p]}{\\partial x^i }    & = & \\sigma^j ,        \\label{eqn : hr_mom}\\end{aligned}\\ ] ] where the variables @xmath36 , @xmath19 , and @xmath13 are the same as those defined in the internal energy formulation . however , now @xmath37 are the new expressions for energy and momenta .",
    "it is convenient to express @xmath38 and @xmath39 in terms of the internal energy formulation variables , especially for initializing data @xmath40 and reconstructing the equation of state @xmath41 where we have explicitly assumed an adiabatic gamma - law fluid .",
    "cosmos is a multi - dimensional ( 1 , 2 or 3d ) code that uses regularly spaced cartesian meshes for spatial finite differencing or finite volume discretization methods .",
    "evolved variables are defined at the zone centers in the nocd , tvd , and non - staggered av methods . in the staggered mesh av method ,",
    "variables are centered either at zone faces ( the velocity @xmath42 and momentum @xmath43 vectors ) or zone centers ( all other scalar and tensor variables ) .",
    "periodic , reflection , constant in time , user - specified , and flat ( vanishing first derivative ) boundary conditions are supported for all variables in the evolutions .",
    "the hydrodynamic equations in both of the formalisms presented in  [ sec : equations ] are solved with time - explicit , operator split methods with second order spatial finite differencing .",
    "single - step time integration and dimensional splitting is used for both av methods .",
    "the nocd schemes use a second order predictor - corrector time integration with dimensional splitting , and the tvd approach utilizes a third order runge - kutta time integration with finite volume representations for source updates . since the main emphasis here is on relativistic hydrodynamics , the following discussion is limited to presenting details relevant for the av and nocd schemes : the tvd method is currently only newtonian .",
    "the order and frequency in which various source terms and state variables are updated in the av methods can affect the numerical accuracy , especially in high boost flows .",
    "the following order composing a complete single cycle or time - step solution has been determined to produce a reasonable compromise between cost and accuracy :    * compute time step @xmath44 from ( [ eqn : timestep ] ) * store current value of boost factor @xmath20 * curvature * * compute pressure and sound speed from the ideal fluid equation of state : + @xmath45 , @xmath46 * * evaluate scalar or tensor artificial viscosity @xmath21 * * normalize velocity and update boost factor : + @xmath47 , using @xmath48w)^2 $ ] to first compute @xmath24 ; + then construct @xmath49 from @xmath50 , @xmath24 , and the evolved @xmath43 ; + and finally use equation ( [ eqn : w2 ] ) to define the boost factor @xmath51 * * update momentum , accounting for curvature : + @xmath52 , using second order finite differencing of @xmath11 * artificial viscosity * * compute pressure * * normalize velocity , update @xmath20 * * compute pressure and sound speed * * evaluate artificial viscosity components @xmath21 * * update momentum and energy equations accounting for @xmath21 : + @xmath53/2 $ ] , and @xmath54 * compression * * compute pressure * * normalize velocity , update @xmath20 * * compute pressure again * * update energy , accounting for compressional heating : + @xmath55 * pressure gradient * * compute pressure * * update momentum , accounting for pressure gradients : + @xmath56 * transport * * compute pressure * * normalize velocity , update @xmath20 * * update transport terms in all variables : + @xmath57 , @xmath58 , and @xmath59 * boost factor * * compute pressure and sound speed * * normalize velocity , final update of @xmath20 * * update energy , accounting for the variation of @xmath20 in time : + @xmath60 \\dot w$ ] * update spacetime metric components @xmath11 and @xmath50 if time dependent    the highly nonlinear coupling of pressure and artificial viscosity to the state and kinematic variables through the lorentz factor makes the relativistic equations much more difficult to solve than their newtonian versions .",
    "it is for this reason that @xcite adopted implicit methods to solve the special relativistic equations .",
    "it is also why we have attempted to maintain a consistent and frequent update of the velocity normalization , boost factor , pressure and artificial viscosity throughout the cycle .    to enforce stable evolutions ,",
    "the time step is defined for all hydro methods as the minimum causality constraint over the entire mesh arising from the sound speed , fluid velocity , magnitude of the artificial viscosity coefficient , and any other physics criteria introduced in the calculation , say from scalar fields , radiation transport , gravity , etc ... also , since the time steps can be nonuniform , a final constraint is added to prevent @xmath44 from increasing by more than 20% per time step . in short ,",
    "@xmath61 , \\label{eqn : timestep}\\ ] ] where the superscript @xmath62 refers to the discrete time level and the maximum velocity @xmath63 ( computed over all zones ) accounts for local sound speed , fluid velocity , and viscous diffusion @xmath64 .",
    "\\label{eqn : vmax}\\ ] ] the courant factor @xmath65 is typically set to @xmath66 , the viscosity strength coefficient @xmath67 ( defined in ( [ eqn : av ] ) ) is set to @xmath68 for all the problems presented in this paper , and the sound speed is defined as @xmath69 for relativistic flows , where we have explicitly used the adiabatic eos in the form @xmath70 .    the artificial viscosity is implemented in a form that mimics a general imperfect fluid stress tensor @xmath71 where @xmath72 and @xmath73 are the shear and bulk viscosity coefficients , @xmath74 is the expansion of fluid world lines , and @xmath75 is the trace - free spatial shear tensor .",
    "artificial viscosity is included as a bulk scalar viscosity so the effective perfect fluid stress energy tensor takes the form @xmath76 which is equivalent to setting @xmath77 in the momentum and energy equations @xmath78 the scalar viscosity @xmath79 is computed as a local quantity in a dimensionally split fashion , and active only in convergent flows for which @xmath80 @xmath81 .",
    "\\label{eqn : av}\\ ] ] the coefficients @xmath67 and @xmath82 control the amount of quadratic and linear ( in velocity ) components of viscosity , @xmath83 is a length scale set to the zone dimension , and @xmath84 represents a limiter bounded by zero and unity that can be applied to reduce the effect of artificial heating and narrow the width of shock fronts .",
    "one could alternatively use @xmath85 in place of @xmath86 in ( [ eqn : av ] ) , which we find to be effective at preventing excessively large jump errors and helps stabilize solutions in highly relativistic shock tube and wall shock calculations .    a more general tensor version of artificial viscosity is also implemented for convergent flows to the form @xcite",
    "@xmath87           \\left[\\frac12(\\nabla_i v^j + \\nabla_j v^i )                               -\\frac{c}{3 } \\nabla_k v^k \\delta_{ij}\\right ] , \\label{eqn : av_tensor}\\ ] ] where @xmath88 is a constant defined as zero or unity depending on whether the viscosity tensor should be traceless or not , and @xmath89 is the kronecker delta .",
    "the equations for energy and momentum with a tensor viscosity are similar to ( [ eqn : av_momq ] ) and ( [ eqn : av_enq ] ) except in the way two of the viscosity terms are computed @xmath90 the scalar form of artificial viscosity ( [ eqn : av ] ) is used in all the tests presented in this paper .",
    "the transport step is solved in a directionally split , flux conservative manner .",
    "for example , considering advection of the density field along the @xmath91-axis in a staggered mesh scheme , the solution to @xmath92 is written @xmath93 , \\ ] ] where @xmath94 is the face - centered velocity between zones @xmath95 and @xmath96 , and @xmath97 is a first order monotonic taylor s approximation of @xmath98 from the upwind cell center to the advection control volume center @xmath99    \\left[d_{i-1 } + \\frac{(\\delta x - v_i\\delta t)}{2 } ( \\nabla_x d)_{i-1}\\right ]     \\nonumber \\\\    & & \\quad     + \\left[\\frac12 - \\mbox{sign}\\left(\\frac12,~v_i\\right)\\right ]    \\left[d_{i } - \\frac{(\\delta x + v_i\\delta t)}{2 } ( \\nabla_x d)_{i}\\right ] .",
    "\\label{eqn : av_upwind}\\end{aligned}\\ ] ] equation ( [ eqn : av_upwind ] ) automatically detects the upwind cell from the sign of the velocity @xmath100 . here",
    ", @xmath101 is fortran notation for @xmath102 , depending on the sign of @xmath103 .",
    "high order @xcite monotonic interpolation is used to reconstruct local gradients @xmath104 and prevent spurious oscillations near regions of sharp gradients @xmath105",
    "\\left(\\frac{2 \\delta d_i~\\delta d_{i-1 } }                          { \\delta d_i + \\delta d_{i-1 } + \\delta}\\right )   .\\ ] ] the constant @xmath106 is introduced to prevent numerical overflow , and @xmath107 are the mesh aligned gradients centered on the cell faces .",
    "similar expressions can easily be derived for zone - centered variables on nonstaggered meshes by face - averaging the velocities , and for face - centered variables on staggered meshes by shifting the spatial indices and control volumes appropriately .",
    "considering the simplicity of equations ( [ eqn : hr_de ] ) - ( [ eqn : hr_mom ] ) , an obvious benefit of the nocd approach is that , unlike the av approach , it is not expected to be particularly sensitive to any ordering of operator updates since the method basically just solves a single first order operator equation with external sources .",
    "we have implemented two variations of this method : the first with non - staggered spatial and temporal meshes with second order reconstruction , and the second with time - staggered meshes in which the variables are updated on a mesh shifted in time to center the solution properly to second order .",
    "a summary of the solver sequence for this class of methods is :    * compute time step @xmath44 from ( [ eqn : timestep ] ) , + redefine @xmath108 for the 2-step , subcycled , staggered mesh scheme * curvature * * compute pressure from the ideal fluid equation of state : + @xmath109          /[\\gamma + ( \\gamma-1 ) g^{00}(\\sqrt{-g}/w)^2]$ ] * * update energy and momentum , accounting for curvature : + @xmath110 and @xmath111 , using second order finite differencing for metric derivatives * flux operator * * compute pressure from eos * * normalize velocity and update boost factor : + @xmath47 , using @xmath112 ^ 2 $ ] and + @xmath113 to first compute @xmath114 , then the boost factor @xmath115 * * compute pressure * * update all variables @xmath116 , + accounting for flux - conservative gradient terms in equations ( [ eqn : hr_de ] ) - ( [ eqn : hr_mom ] ) : + @xmath117 $ ] * * if the mesh is nonstaggered in time : + perform interpolations to recenter variables on the original nonstaggered mesh + @xmath118 * if the mesh is staggered : * * repeat curvature and flux steps to evolve solution from @xmath119 to @xmath120 * * shift array indices to realign final coordinates at @xmath120 with + initial coordinates at @xmath121 by @xmath122 * update spacetime metric components @xmath11 and @xmath50 if time dependent    two essential assumptions built into this method are that the cell - averaged solutions can be reconstructed as muscl - type piece - wise linear interpolants , and that the flux integrals are defined and evaluated naturally on staggered meshes . since we adopt directional splitting for multi - dimensional problems , the basic discretization scheme used to solve equations ( [ eqn : hr_de ] ) - ( [ eqn : hr_mom ] ) can be derived from a simple one - dimensional , first order model equation of the form @xmath123 where @xmath124 represents any of the density , energy or momentum variables , and @xmath125 is the associated flux . a formal solution to ( [ eqn : omega ] )",
    "can be written over a single time cycle @xmath126 on a staggered mesh as @xmath127 .",
    "\\label{eqn : formal}\\ ] ] introducing the notation @xmath128 , the average of the piece - wise linearly reconstructed solutions at the staggered positions @xmath129 in ( [ eqn : formal ] ) is given by @xmath130 where @xmath131 refer to the piecewise linearly interpolated solutions from the upwind and downwind cell centers @xmath132    considering that the time averaged integrals in ( [ eqn : formal ] ) can be approximated using midpoint values @xmath133 immediately suggests a two step predictor - corrector procedure to solve ( [ eqn : omega ] ) : the state variables are predicted at @xmath119 by @xmath134 then corrected on the staggered mesh by @xmath135 , \\label{eqn : corr}\\ ] ] where we have also substituted ( [ eqn : stagger ] ) for @xmath129 in ( [ eqn : formal ] ) .",
    "equations ( [ eqn : pred ] ) and ( [ eqn : corr ] ) represent the complete single cycle solution averaged on a staggered mesh .",
    "the mesh indices can be brought back into alignment by setting @xmath108 , performing two time cycle updates ( computing @xmath136 then @xmath137 ) to time @xmath138 , and re - center the solution on the original zone positions by shifting the array indices as @xmath139 .    as an alternative to mesh staggering",
    ", the solution after applying the corrector step can be reconstructed directly back to the nonstaggered cell centers by a second order piece - wise linear extrapolation @xmath140 to yield for the final single time - step solution @xmath141      - \\frac{1}{8}\\left ( \\omega_{j+1/2}^{n+1 ' } - \\omega_{j-1/2}^{n+1'}\\right ) .",
    "\\label{eqn : nonstag}\\end{aligned}\\ ] ] we have found no substantial differences between the staggered and nonstaggered approaches in all the test calculations we have performed . hence all subsequent results presented in this paper from this class of algorithms are derived with the nonstaggered mesh method using ( [ eqn : pred ] ) and ( [ eqn : nonstag ] ) .",
    "one final important element of this method is that all gradients ( of either the state variables @xmath142 or fluxes @xmath143 ) must be processed and limited for monotonicity in order to guarantee non - oscillatory behavior .",
    "this is accomplished with either the minmod limiter @xmath144 or the van leer limiter @xmath145             \\left(\\omega_{j+1 } - \\omega_j\\right ) , \\ ] ] which satisfy the tvd constraints with appropriate courant restrictions , although we note that steeper limiters can yield undesirable results especially in under - resolved high boost shock tube calculations .",
    "we begin testing the staggered av and nonstaggered nocd methods with one of the standard problems in fluid dynamics , the shock tube .",
    "this test is characterized initially by two different fluid states separated by a membrane . at @xmath146 the membrane",
    "is removed and the fluid evolves in such a way that five distinct regions appear in the flow : an undisturbed region at each end , separated by a rarefaction wave , a contact discontinuity , and a shock wave .",
    "this problem only checks the hydrodynamical elements of the code , as it assumes a flat background metric .",
    "however , it provides a good test of the shock - capturing properties of the different methods since it has an exact solution @xcite against which the numerical results can be compared .",
    "two cases of the shock tube problem are considered first : moderate boost ( @xmath147 ) and high boost ( @xmath148 ) shock waves . in the moderate boost case ,",
    "the initial state is specified by @xmath149 , @xmath150 , and @xmath151 to the left of the membrane and @xmath152 , @xmath153 , and @xmath154 to the right . in the high boost case , @xmath155 , @xmath156 , @xmath151 , and @xmath152 , @xmath157 , @xmath154 . in both cases ,",
    "the fluid is assumed to be an ideal gas with @xmath158 , and the integration domain extends over a unit grid from @xmath159 to @xmath160 , with the membrane located at @xmath161 .",
    "the av shock tube results presented here were run using the scalar artificial viscosity with a quadratic viscosity coefficient @xmath162 , linear viscosity coefficient @xmath163 , and courant factor @xmath164 ( 0.3 for the highest boost cases ) .",
    "for the nocd method we use @xmath165 and the minmod limiter which gives smoother and more robust results than the steeper limiters in simulations of under - resolved highly relativistic shocks .",
    "we have carried out these tests in one , two and three dimensions , lining up the interface membrane along the main diagonals in multi - dimensional runs .",
    "we found it necessary , in order to maintain stability in the highest boost cases , to impose constraints on the pressure and energy density at each cycle to ensure they maintained positive values .",
    "although this was nt necessary at velocities smaller than about 0.95 , we nevertheless enforced these conditions in all the calculations .",
    "figures [ fig : fig1 ] & [ fig : fig2 ] show spatial profiles of the moderate boost results at time @xmath166 on a grid of 400 uniformly spaced zones using the av and nocd methods respectively .",
    "figures [ fig : fig3 ] & [ fig : fig4 ] show the corresponding solutions of both av and nocd methods for the high boost test using a higher resolution grid with 800 zones at time @xmath167 .",
    "the density under - shoot ( about 30% ) in figures [ fig : fig3 ] and [ fig : fig4 ] is due to a lack of sufficient spatial resolution , and improves significantly by increasing the number of zones .",
    "tables [ tab : errors1 ] & [ tab : errors2 ] summarize the errors in the primitive variables @xmath168 , @xmath169 , and @xmath100 for different grid resolutions and cfd methods using the @xmath170 - 1 norm ( i.e. , @xmath171 , where @xmath172 and @xmath173 are the numerical and exact solutions , respectively , and for 1d problems the orthogonal grid spacings are set to unity ) .",
    "included in table [ tab : errors1 ] for comparison are the errors reported by @xcite using marquina s approximate riemann solver @xcite .",
    "they also tested the roe and flux - split approximate solvers and achieved similar results as with marquina s method , so we do not include those numbers here .",
    "we find the errors in table [ tab : errors1 ] are quite comparable between all three methods with convergence rates just under first order as expected for shock capturing methods .",
    "for the high boost case in table [ tab : errors2 ] , our errors are comparable to those reported by @xcite for the same shock tube simulation using an extended high order piecewise parabolic method ( ppm)@xcite with an exact riemann solver .",
    "however , we note that their published errors are for the conserved quantities ( generalized fluid density @xmath36 , generalized energy density @xmath174 , and covariant momentum density @xmath175 ) rather than the primitive variables we report .",
    "their results are included in table [ tab : errors2 ] .",
    "we also note that the slightly larger errors in the 3d av results of table [ tab : errors1 ] are due primarily to boundary effects ( particularly at the grid corners ) and not to shock capturing differences .",
    "in fact , errors computed only along the main diagonal are about the same for the nocd and av methods .",
    "table [ tab : errors3 ] shows the mean - relative errors ( defined as @xmath176 , where again @xmath172 and @xmath173 are the numerical and exact solutions , respectively ) in the primitive variables over a range of boost factors using 800 zones to cover the same unit domain .",
    "the different boost factors are established by systematically increasing the original value of @xmath177 over the moderate boost case .",
    "these errors are also displayed graphically in figure [ fig : fig5 ] , comparing the av and nocd methods up to the maximum boost ( @xmath178 corresponding to a velocity of @xmath179 ) allowed at this grid resolution , which we define as four cells to cover the leading post - shock density plateau using the analytic solution as a guide .",
    "the increasing trend ( with boost ) in error reflects the stronger nonlinear coupling through the fluid velocity and the narrower and steeper leading shock plateau found in the density plots of figures [ fig : fig3 ] and [ fig : fig4 ] . over the range of shock velocities we have simulated , the errors are comparable between the av , nocd , and godunov methods .",
    "a second test presented here is the wall shock problem involving the shock heating of cold fluid hitting a wall at the left boundary ( @xmath159 ) of a unit grid domain .",
    "the initial data are set up to be uniform across the grid with adiabatic index @xmath180 , pre - shocked density @xmath181 , pre - shocked pressure @xmath182 , and velocity @xmath183 , where @xmath184 is the infall velocity parameter .",
    "when the fluid hits the wall a shock forms and travels to the right , separating the pre - shocked state composed of the initial data and the post - shocked state with solution in the wall frame @xmath185 , \\end{aligned}\\ ] ] where @xmath186 is the velocity of the shock front , and the pre - shocked energy and post - shocked velocity were both assumed negligible ( @xmath187 ) . to facilitate a direct comparison between our results and the genesis code of @xcite ( which again uses marquina s approximate riemann solver ) all of the results shown in the figures and tables , unless noted otherwise , were performed on a 200 zone uniformly spaced mesh and ran to a final time of @xmath188 .",
    "also , for the nocd methods , the courant factor is set to @xmath189 , and we use the van leer limiter for gradient calculations , which generally gives smaller errors when compared to the more diffusive minmod limiter ( about a 30% reduction for the lower boost cases we have tried ) . for the av methods , we use the scalar viscosity with @xmath190 , @xmath191 , and @xmath192 for all the runs .",
    "figures [ fig : fig6 ] & [ fig : fig7 ] show spatial profiles for the case with initial velocity @xmath193 and 200 zones for the av and nocd methods , respectively .",
    "table [ tab : errors4 ] summarizes the @xmath170 - 1 norm errors in both methods as a function of grid resolution .",
    "the values given in parentheses are the contributions to the total error in the first twenty zones from the reflection wall at @xmath159 .",
    "these numbers clearly indicate a disproportionate error distribution from wall heating , an effect that is especially evident in the av results , and particularly in the density curve where the first two data points in figure [ fig : fig6 ] differ significantly from the true post - shock state . excluding this contribution may give a more accurate assessment of each method s ability to resolve the actual shock profile .",
    "figure [ fig : fig8 ] plots the mean - relative errors ( using 200 zones ) in density , which are generally greater than errors in either the pressure or velocity , as a function of boost factor up to about the maximum boost that the av methods can be run accurately . although we are not able to extend the av method reliably ( which we define by a 10% mean error threshold , and increased sensitivity to viscosity parameters ) beyond @xmath194 , the nocd methods , on the other hand , are substantially more robust .",
    "in fact , as shown in table [ tab : errors5 ] and figure [ fig : fig9 ] , the nocd schemes can be run up to arbitrarily high boost factors with stable mean relative errors , typically less than two percent with no significant increasing trend .",
    "these errors are generally smaller than those quoted by @xcite .",
    "however , we note that the errors for the av method presented in figure [ fig : fig8 ] and table [ tab : errors5 ] can be improved significantly by either lowering the courant factor or increasing the viscosity coefficients . for example",
    ", decreasing @xmath195 from 0.6 to 0.3 , or increasing @xmath67 from 2 to 3 for the case @xmath196 reduces the @xmath170 - 1 norm in density from 0.116 to 0.048 and 0.033 , respectively .",
    "we have also been able to run accurate wall shock tests with the av method at higher boosts than shown in table [ tab : errors5 ] by choosing different parameter combinations ( e.g. , @xmath197 , @xmath198 and 400 zones can evolve flows with @xmath199 fairly well ) .",
    "however , rather than adjusting parameters to achieve the best possible result for each specific problem , we have opted to keep numerical parameters constant between code tests , boost factors , and numerical methods .      as a test of hydrodynamic flows in spacetimes with nontrivial curvature ,",
    "we consider radial accretion of an ideal fluid onto a compact , strongly gravitating object , in this case a schwarzschild black hole .",
    "the fluid will accrete onto the compact object along geodesics , thus allowing the general relativistic components of our codes to be tested against a well - known analytic stationary solution . assuming a perfect fluid in isotropic schwarzschild coordinates @xmath200 where @xmath201 is the isotropic radius , the exact solution to this problem is dependent on a single parameter , the gravitational binding energy ( @xmath202 ) . in terms of this parameter ( which we set to @xmath203 in our tests )",
    ", the solution can be written @xmath204 where @xmath20 is the boost factor , @xmath205 is the radial infall velocity in isotropic radial coordinates , @xmath36 is the generalized density in isotropic cartesian coordinates , @xmath206 is the generalized internal energy in isotropic cartesian coordinates , @xmath207 is the adiabatic index , and @xmath208 and @xmath209 are constants of integration which we set to @xmath210 and @xmath211 in the simulations .",
    "the computational domain for this problem is constructed to be @xmath212 ( where @xmath213 is the black hole mass ) and centered along the @xmath214-axis with @xmath215 . in the @xmath214-direction",
    "the inner boundary zone @xmath216 is defined to lie outside the event horizon at @xmath217 in isotropic coordinates to guarantee all boundary zones are outside the horizon , and extends to @xmath218 along the @xmath219 line .",
    "calculations are carried out on different resolution grids , ranging from @xmath220 to @xmath221 to check code convergence .",
    "all variables are initially set to negligible values throughout the interior domain ( @xmath222 , @xmath223 , @xmath224 , and @xmath225 ) , and the static analytic solutions are specified as outer boundary conditions at all times . along the inner @xmath214 boundary ,",
    "outflow conditions are maintained by simply setting the first derivatives of all variables to zero at the end of each time step .",
    "thus fluid flows onto the computational grid from all of the analytically - specified ( inflow ) boundaries , and exits from the lower @xmath214-plane closest to the black hole .",
    "all results presented here were generated from simulations run until steady - state was achieved at @xmath226 , and numerical parameters are defined as in previous tests , namely @xmath164 , @xmath227 , @xmath162 in the av runs , and @xmath165 in the nocd results .",
    "table [ tab : errors6 ] summarizes the global mean - relative errors in both methods as a function of grid resolution .",
    "figures [ fig : fig10 ] & [ fig : fig11 ] show spatial profiles of density and velocity along the @xmath214-axis for @xmath228 and @xmath221 zones for the av and nocd methods , respectively .",
    "although the numerical results in table [ tab : errors6 ] converge to the analytic solution with grid resolution , they converge at a rate between first and second order due in part to the treatment of boundary conditions and time discretization errors . in particular , comparing the analytic and numerical solutions , we find that maximum relative errors occur near the event horizon along the inner @xmath214-boundary .",
    "for the av method , the maximum relative errors for density and velocity with @xmath221 zones are 9.16% and 2.49% , respectively , compared to global mean - relative errors of 1.36% and 0.63% . for the nocd method , the maximum relative errors are 24.4% and 7.42% , compared to global mean - relative errors of 2.11% and 0.14% .",
    "the global errors in both methods , in spite of being computed on a nonsymmetric cartesian mesh , are comparable to those reported by other authors . for instance",
    ", @xcite saw relative errors of 1 - 3% in density and velocity near the horizon using an artificial viscosity code on a @xmath229 cylindrical grid .",
    "@xcite saw mean relative errors of 2.67% and 0.99% using a godunov - type method on a @xmath230 spherical grid .",
    "also , decreasing the courant factor from @xmath164 to 0.2 reduces the errors in both av and nocd methods by about a factor of three , consistent with first order time discretization , and increases the rate of spatial convergence closer to second order .",
    "we have developed new artificial viscosity and non - oscillatory central difference numerical hydrodynamics schemes as integral components of the cosmos code framework for performing fully general relativistic calculations of strong field flows .",
    "these methods have been discussed at length here and compared also with published state - of - the - art godunov methods on their abilities to model shock tube , wall shock and black hole accretion problems .",
    "we find that for shock tube problems at moderate to high boost factors , with velocities up to @xmath231 and limited only by grid resolution , internal energy formulations using artificial viscosity methods compare quite favorably with total energy schemes such as the nocd methods , the godunov methods using the marquina , roe , or flux - split approximate riemann solvers , and the piecewise parabolic method with an exact riemann solver .",
    "however , av methods can be somewhat sensitive to parameters ( e.g. , viscosity coefficients , courant factor , etc . ) and generally suspect at high boost factors ( @xmath232 ) in the wall shock problems we have considered here . on the other hand , nocd methods",
    "can easily be extended to ultra - relativistic velocities ( @xmath233 ) for the same wall shock tests , and are comparable in accuracy over the entire range of velocities we have simulated to the more standard but complicated riemann solver codes .",
    "nocd schemes thus provide a robust new alternative to simulating relativistic hydrodynamical flows since they offer the same advantages of godunov methods in capturing ultra - relativistic flows but without the cost and complication of riemann solvers or flux splitting .",
    "they also provide all the advantages of av methods in their speed , ease of implementation , and general applicability ( including straightforward extensions to more general equations of state ) without explicitly using artificial viscosity for shock capturing ."
  ],
  "abstract_text": [
    "<S> high resolution , non - oscillatory , central difference ( nocd ) numerical schemes are introduced as alternatives to more traditional artificial viscosity ( av ) and godunov methods for solving the fully general relativistic hydrodynamics equations . </S>",
    "<S> these new approaches provide the advantages of godunov methods in capturing ultra - relativistic flows without the cost and complication of riemann solvers , and the advantages of av methods in their speed , ease of implementation , and general applicability without explicitly using artificial viscosity for shock capturing . </S>",
    "<S> shock tube , wall shock , and dust accretion tests , all with adiabatic equations of state , are presented and compared against equivalent solutions from both av and godunov based codes . in the process we address the accuracy of time - explicit nocd and av methods over a wide range of lorentz factors . </S>"
  ]
}
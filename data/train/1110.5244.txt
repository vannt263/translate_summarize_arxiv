{
  "article_text": [
    "multi - moment methods for time dependent differential equations aim to increase the accuracy of the numerical solution , and to lower the dispersive and dissipative errors in the numerical solution .",
    "the most distinguishing characteristic of the method is that more than one moment per grid point or per cell , such as function value , its derivatives and the integral over the cell etc , are considered as unknown variables , and they are simultaneously updated by coupling the differential equation and derived differential equations for the derivatives .",
    "a hermite polynomial is usually defined on each cell using such quantities to interpolate the numerical solution , and is used to update the solutions .",
    "such polynomial interpolation , being defined on each cell individually , reduces the numerical stencil width .",
    "the compactness of the stencil makes it feasible to handle the boundary condition and the interface condition numerically .",
    "such schemes were first proposed for one dimensional hyperbolic equations by van - leer @xcite in a framework of a finite difference method , and by takewaki , nishiguchi and yabe @xcite on the basis of the characteristic equation for the first order pde .",
    "the latter method is referred to as cip method .",
    "their works triggered off development of multi moment methods , and it is increasingly becoming an active area of research and have even been applied to various equations .",
    "there is a vast literature developing cip methods and the following is a partial list of papers : nonlinear hyperbolic equations @xcite , multi dimensional hyperbolic equations @xcite , a multi - dimensional the maxwell s equations @xcite , a numerical simulation for solid , liquid and gas @xcite , a new mesh system applicable to non - orthogonal coordinate system @xcite , a variant of cip method @xcite .",
    "cip method uses the cubic interpolation constructed via solution values and its derivative at two end points of a cell to approximate the solution in the cell .",
    "explicit time integration formulas for both the exact solution and its derivative of a one dimensional transport equation with the constant velocity field are coupled with the cubic interpolation to obtain an explicit time integration numerical scheme ( cip scheme ) .",
    "in @xcite we have developed and analyzed a cip scheme for one dimensional hyperbolic equations with variable and discontinuous coefficients .",
    "most of the proposed cip methods so far , when it is applied to higher dimensional equations , relies on the strang splitting technique : it reduces the equation of higher dimension to a sequence of simpler one dimensional equations , repeatedly applies a cip method for the reduced one dimensional equations .    in this paper we develop a multi - moment method for two dimensional maxwell s equations , which does not employ the directional splitting technique at all .",
    "we apply the exact integration method in time by the poisson formula and use the bi - cubic interpolation .",
    "we refer @xcite @xcite @xcite,@xcite , @xcite for numerical integration methods for the maxwell and acoustic wave equations in general .",
    "the original second order yee scheme using the time and space staggered grid is developed in @xcite and a fourth order time and space variant of yee scheme is developed in @xcite .",
    "our contributions are as follows .",
    "the bi - cubic interpolation is combined with the poisson formula to develop a fully explicit time and space numerical method for maxwell , acoustic wave equations as well as the second order wave equation .",
    "we analyze the von - neumann stability of the proposed method and we establish cfl number is one for the proposed method .",
    "the one step of the method involves updating four moments at each grid point and the symbolic formulation and the symmetry of the update is used to reduce operation counts .",
    "the method offers highly efficient to attain the desired accuracy due to the relaxed cfl number limitation and accurate space resolution by the bi - cubic profile .",
    "the method is compared with the fourth order time - space yee s scheme in terms of numerical accuracy at nodes and required operation counts given accuracy .",
    "the numerical convergence rate test shows the method is nearly fourth order and the operation counts are comparable with those for the fourth order yee s scheme in conventional computing . with distributed computing implementation",
    "the method becomes much efficient .",
    "also , the method has the build - in bi - cubic interpolation and thus provides sub - grid resolutions at each cell .",
    "if we use the method with cfl@xmath0 , as shown in section [ sec : numericaltest ] the method preserves sharp profiles in the solution very accurately without any smearing and distortion .",
    "the stability and numerical accuracy are analyzed .",
    "also , the method computes directly the physical quantities e.g. , current and electric field gradient , very accurately .",
    "the building block of our method is the exact integration rule for the poisson formula against the polynomials .",
    "thus , one can use various polynomial approximations locally , including the one using the solution values only . in the paper",
    "we only implement the methods for the periodic boundary condition but it can be extended to the various boundary conditions and class of absorbing boundary conditions .    also , we can also extend the interface treatment in @xcite for piecewise cubic interpolation at the material discontinuity and develop the immersed interface method for discontinuous media .    an outline of our presentation is : in section 2 a cip scheme is proposed , in section 3 the stability and error analysis is presented . finally in section 4",
    "we present our numerical tests and numerical convergent rate .",
    "consider the two dimensional ( te ) maxwell s equation for magnetic field @xmath1 and electric field @xmath2 : @xmath3 where the material coefficients @xmath4 are constants .",
    "let @xmath5 be the speed of light .",
    "our method uses the fact that is equivalent to second order wave equations : @xmath6 under the assumption that div@xmath7 .",
    "similarly , the two dimensional acoustic wave equation for pressure @xmath8 and velocity @xmath9 : @xmath10 can be treated in exactly the same manner .",
    "let @xmath11 be a solution of the wave equation : @xmath12 by the poisson s formula @xcite , we have @xmath13 using change of variable @xmath14 to @xmath15 , the solution @xmath16 is @xmath17 where @xmath18 and @xmath19 = \\frac{1}{2\\pi c\\delta t}\\int_{b}\\frac{u(t,\\xi)}{((c\\delta t)^2-|\\xi|^2)^{\\frac{1}{2}}}d\\xi,\\ ] ] for a function @xmath20 and @xmath21 .",
    "+ the derivatives @xmath22 , @xmath23 , @xmath24 , also satisfy the wave equation @xmath25 as long as the solution is smooth , and thus the higher order derivatives of the solution is advanced via @xmath26 + \\delta t l[\\partial_{\\xi}^{\\alpha}\\partial_tu(t , x+\\cdot)|b].\\ ] ] we obtain the exact integration formula for the solutions and its derivatives of @xmath27 , @xmath28 and @xmath29 at @xmath30 : for @xmath31 and @xmath32 , @xmath33 + \\delta t l[\\partial_{\\xi}^{\\alpha}\\partial_th_z(t , x+\\cdot)|b ]   \\\\ \\\\   & = l [ ( 1 + \\xi\\cdot \\nabla ) \\partial_{\\xi}^{\\alpha}h_z(t , x+\\cdot)|b ]   + \\frac{\\delta t}{\\mu }   l[\\partial_{\\xi}^{\\alpha } ( \\partial_{\\xi_2 } e_x(t , x+\\cdot)-\\partial_{\\xi_1 } e_y(t , x+\\cdot ) ) |b ] , \\\\ \\\\ & \\partial_{x}^{\\alpha}e_x(t+\\delta t , x ) = l [ ( 1 + \\xi\\cdot \\nabla ) \\partial_{\\xi}^{\\alpha}e_{x}(t , x+\\cdot)|b ] + \\frac{\\delta t}{\\varepsilon}l[\\partial_{\\xi_2}\\partial_{\\xi}^{\\alpha}h_z(t , x+\\cdot)|b ] , \\\\ \\\\ & \\partial_{x}^{\\alpha}e_y(t+\\delta t , x ) = l [ ( 1 + \\xi\\cdot \\nabla ) \\partial_{\\xi}^{\\alpha}e_{y}(x+\\cdot)|b]-\\frac{\\delta t}{\\varepsilon } l[\\partial_{\\xi_1 } \\partial_{\\xi}^{\\alpha}h_z(t , x+\\cdot)|b ] .",
    "\\end{array}\\ ] ] here we use to exchange the time derivative and spatial derivatives .",
    "let us define a grid of points in the @xmath34 space .",
    "let @xmath35 and @xmath36 be positive numbers .",
    "the grid is the set of points @xmath37 for arbitrary integers @xmath38 .",
    "we let @xmath39 , @xmath40 and @xmath41 stand respectively for the approximation to the solution @xmath42 , @xmath43 and @xmath44 for @xmath45 .",
    "the basis idea of the multi - moment scheme is to define a higher order polynomials @xmath46 on each cell @xmath47\\times[y_j , y_{j+1}]$ ] using grid values including spatial derivatives at four corners of the cell , and substitute them to the exact time integration formula : we evaluate the integrals of the polynomials over the ball @xmath48 .",
    "henceforth we assume that @xmath49 , and thus the four polynomials are involved in the integration over the ball , and thus the method uses variables at 9 nearest grid points .",
    "we can derive various multi - moment schemes on the basis of .",
    "the resulted scheme depends on the number of unknown variables we employ at each grid and the order of interpolation polynomials ; for instance , if we take the grid values , the firs - order derivatives and their second order mixed derivatives as unknown variables , we use the bi - cubic hermite interpolation , known as boger - fox - schmit element in finite element methods , @xmath50 the coefficients of the polynomial are defined by the usual interpolation condition .",
    "the resulted scheme is written in terms of the bi - cubic polynomial .",
    "let @xmath51 , @xmath52 and @xmath53 denote the bi - cubic polynomials defined in the cell @xmath54\\times [ y_j , y_{j+1}]$ ] by the interpolation condition : @xmath55 for @xmath56 and @xmath57 .",
    "let us number four cells surrounding a gird @xmath58 counter clockwise ; @xmath59\\times [ y_j , y_{j+1}]$ ] , @xmath60\\times [ y_j , y_{j+1}]$ ] , @xmath61\\times [ y_{j-1},y_{j}]$ ] and @xmath62\\times [ y_{j-1},y_{j}]$ ] .",
    "we also number the polynomial defined on each cell accordingly , i.e. , @xmath63 , etc .",
    "we let @xmath64 stand for @xmath65 with these notation , we obtain the cip scheme : @xmath66\\\\ \\\\\\quad   + \\frac{\\delta t}{\\mu } \\sum_{k=1}^4 l[\\partial_{\\xi}^{\\alpha } ( \\partial_{\\xi_2 } { e_x}_{,k}(x_{ij}+\\cdot)-\\partial_{\\xi_1 } { e_y}_{,k}(x_{ij}+\\cdot ) ) |b_k ] , \\\\ \\\\",
    "\\partial_{x}^{\\alpha}{e_x}^{n+1}_{ij } = \\sum_{k=1}^4l [ ( 1 + \\xi\\cdot \\nabla ) \\partial_{\\xi}^{\\alpha}{e_{x}}_{,k}(x_{ij}+\\cdot)|b_k ] + \\frac{\\delta t}{\\varepsilon}\\sum_{k=1}^4l[\\partial_{\\xi_2}\\partial_{\\xi}^{\\alpha}{h_z}_{,k}(x_{ij}+\\cdot)|b_k ] , \\\\ \\\\",
    "\\partial_{x}^{\\alpha}{e_y}^{n+1}_{ij } = \\sum_{k=1}^4l [ ( 1 + \\xi\\cdot \\nabla ) \\partial_{\\xi}^{\\alpha}{e_{y}}_{,k}(x_{ij}+\\cdot)|b_k]-\\frac{\\delta t}{\\varepsilon } \\sum_{k=1}^4l[\\partial_{\\xi_1 } \\partial_{\\xi}^{\\alpha}{h_z}_{,k}(x_{ij}+\\cdot)|b_k ] , \\end{array } \\right.\\ ] ] for @xmath67 ( function value update ) , @xmath68 ( @xmath69 derivative update ) , @xmath70 ( @xmath71 derivative update ) and @xmath72 ( @xmath73 second order mixed derivative update ) . as detailed in the following sections , develops the moments update at time step @xmath74 based on the 9 nearest grid moments at time step @xmath75 , i.e. , update .",
    "one can reduce the number of unknowns at a grid point ; for example , one uses the grid values , the firs - order derivatives as unknowns .",
    "the number of unknowns to be determined at each grid point becomes 9 : each component @xmath76 has 3 unknowns at a grid point .",
    "possible choices for the interpolation are @xmath77 the coefficients @xmath78 are determined by using the grid values , the firs - order derivatives at the four corners of a cell .",
    "the second mixed derivatives being not used , the resulted schemes have less complexity than the bi - cubic hermite polynomial based scheme , however , they produce less accurate numerical solution , and the cfl number is less than 1 . as for the other choice , we consider the bi - liner interpolation : @xmath79 we then obtain a derivative free nine point scheme .      in this section",
    ", we examine the details for computing the integrals in when the bi - cubic interpolation is used for the interpolation , i.e. , the number of unknowns for @xmath80 , @xmath81 and @xmath82 is 4 respectively at a grid point ; the grid value , the firs - order derivatives and the second order mixed derivative .",
    "let us introduce some notation .",
    "for the numerical quantities @xmath83 , @xmath84 , @xmath85 and @xmath86 given at the node @xmath58 , we define a @xmath87 vector ( a _ multi - moment vector _ ) : @xmath88^\\top   \\in \\mathbb{r}^4,\\ ] ] let @xmath89 denote a vector composed of the multi - moment vector assigned at the four corner of the cell @xmath90 \\times [ y_j , y_{j+1}]$ ] : @xmath91^\\top \\in \\mathbb{r}^{16}.\\ ] ]    denote @xmath92 where @xmath93 and @xmath94 .",
    "we construct a bi - cubic polynomial @xmath95 on the cell @xmath96 , where the coefficient vector @xmath97 are ordered as @xmath98 and @xmath99 denotes @xmath100 row vectors @xmath101    \\otimes \\left[1,x_2 , x_2 ^ 2,x_2 ^ 3    \\right],\\ ] ] i.e. , the components of @xmath99 are @xmath102 and are ordered as in .",
    "+ the coefficient @xmath97 of the bi - cubic polynomial @xmath103 is determined by 16 interpolation conditions at four corners @xmath104 , @xmath105 , @xmath106 and @xmath107 of the cell : @xmath108    we obtain then the coefficients @xmath97 of @xmath103 : @xmath109 where @xmath110 $ ] is the interpolation matrix : @xmath111 , q_2 = \\left[\\begin{smallmatrix }   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   3 & -1 & 0 & 0 \\\\   0 & 0 & 3 & -1 \\\\   -9 & 3 & -6 & 2 \\\\   6 & -2 & 3 & -1 \\\\",
    "-2 & 1 & 0 & 0 \\\\   0 & 0 & -2 & 1 \\\\   6 & -3 & 4 & -2 \\\\   -4 & 2 & -2 & 1    \\end{smallmatrix}\\right ] ,    q_3 = \\left[\\begin{smallmatrix }   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   9 & -3 & -3 & 1 \\\\   -6 & 2 & 3 & -1 \\\\   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   -6 & 3 & 2 & -1 \\\\   4 & -2 & -2 & 1    \\end{smallmatrix}\\right ] ,    q_4 = \\left [   \\begin{smallmatrix }   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   3 & 0 & -1 & 0 \\\\   -2 & 0 & 1 & 0 \\\\   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   0 & 3 & 0 & -1 \\\\   0 & -2 & 0 & 1 \\\\   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   -9 & -6 & 3 & 2 \\\\   6 & 4 & -3 & -2 \\\\   0 & 0 & 0 & 0 \\\\   0 & 0 & 0 & 0 \\\\   6 & 3 & -2 & -1 \\\\",
    "-4 & -2 & 2 & 1    \\end{smallmatrix}\\right].\\ ] ] and @xmath112 is a tensor product of the 4 by 4 identity matrix @xmath113 and the diagonal matrix with the diagonal entries @xmath114 $ ] : @xmath115.\\ ] ] thus we obtain the bi - cubic polynomial : @xmath116 next , let us introduce some matrices for basic operations . for a cubic polynomial @xmath117 for @xmath118 , where @xmath119 and @xmath120 , we have @xmath121 where@xmath122,\\quad    m=\\left [        \\begin{array}{cccc }          0 & 0 & 0 & 0 \\\\          1 & 0 & 0 & 0 \\\\          0 & 1 & 0 & 0 \\\\          0 & 0 & 1 & 0 \\\\        \\end{array }      \\right ] ,     d_\\alpha=\\left [        \\begin{array}{cccc }          1 & 0 & 0 & 0 \\\\          0 & \\alpha & 0 & 0 \\\\          0 & 0 & \\alpha^2 & 0 \\\\          0 & 0 & 0 & \\alpha^3 \\\\",
    "\\end{array }      \\right],\\quad        t_x=\\left [     \\begin{array}{cccc } 1 & -x & x^2 & -x^3 \\\\ 0 & 1 & -2x & 3x^2 \\\\   0 & 0 & 1 & -3x \\\\ 0 & 0 & 0 & 1 \\\\ \\end{array }     \\right].\\end{aligned}\\ ] ] below , we will use the commutative properties : @xmath123      now we express the integral in in terms of the grid values .",
    "we compute the integrals @xmath125 for @xmath126 , where @xmath127 denotes one of the operators @xmath128 for @xmath129 , @xmath130 , and we renumber the polynomial ; @xmath131 , @xmath132 , @xmath133 , and @xmath134 .",
    "let us denote the corresponding matrix representation for @xmath127 by @xmath135 , i.e. , @xmath136 for the compact expression , we also number the multi - moment vector accordingly , i.e. , @xmath137 , @xmath138 , @xmath139 , and @xmath140 .",
    "then from the representations @xmath141 and hence we have @xmath142 thus the computation of the integrals is reduced to the computations of @xmath143 using change of variable @xmath144 , the integrals are evaluated as the function of @xmath145 : @xmath146,\\\\ { \\mathbf{{d}_{2,c}}}&:=l(e|b_2 ) = \\left[\\frac{1}{4},\\frac{{d_c}}{8},\\frac{{d_c}^2}{12},\\frac{{d_c}^3}{16},-\\frac{{d_c}}{8},-\\frac{{d_c}^2}{6 \\pi } , -\\frac{{d_c}^3}{32},-\\frac{{d_c}^4}{15 \\pi } , \\frac{{d_c}^2}{12},\\frac{{d_c}^3}{32},\\frac{{d_c}^4}{60},\\frac{{d_c}^5}{96},-\\frac{{d_c}^3}{16},-\\frac{{d_c}^4}{15 \\pi } , -\\frac{{d_c}^5}{96},-\\frac{2 { d_c}^6}{105 \\pi } \\right],\\\\ { \\mathbf{{d}_{3,c}}}&:=l(e|b_3 ) = \\left[\\frac{1}{4},-\\frac{{d_c}}{8},\\frac{{d_c}^2}{12},-\\frac{{d_c}^3}{16},-\\frac{{d_c}}{8},\\frac{{d_c}^2}{6 \\pi } , -\\frac{{d_c}^3}{32},\\frac{{d_c}^4}{15 \\pi } , \\frac{{d_c}^2}{12},-\\frac{{d_c}^3}{32},\\frac{{d_c}^4}{60},-\\frac{{d_c}^5}{96},-\\frac{{d_c}^3}{16},\\frac{{d_c}^4}{15 \\pi } , -\\frac{{d_c}^5}{96},\\frac{2 { d_c}^6}{105 \\pi } \\right],\\\\ { \\mathbf{{d}_{4,c}}}&:=l(e|b_4 ) = \\left[\\frac{1}{4},-\\frac{{d_c}}{8},\\frac{{d_c}^2}{12},-\\frac{{d_c}^3}{16},\\frac{{d_c}}{8},-\\frac{{d_c}^2}{6 \\pi } , \\frac{{d_c}^3}{32},-\\frac{{d_c}^4}{15 \\pi } , \\frac{{d_c}^2}{12},-\\frac{{d_c}^3}{32},\\frac{{d_c}^4}{60},-\\frac{{d_c}^5}{96},\\frac{{d_c}^3}{16},-\\frac{{d_c}^4}{15 \\pi } , \\frac{{d_c}^5}{96},-\\frac{2 { d_c}^6}{105 \\pi } \\right].\\end{aligned}\\ ] ] using these vectors , the integrations are expressed in terms of the vectors and the matrices , i.e. , we obtain @xmath147 from , we have for @xmath148 @xmath149 we compute @xmath150,\\end{aligned}\\ ] ] where @xmath151 and @xmath152 .",
    "we denote the right hand side by @xmath153 , i.e. , @xmath154.\\ ] ] let @xmath155 , @xmath156 , @xmath157 and @xmath158 . then @xmath159 therefore we have for @xmath160 , @xmath161 let us define 16 by 16 matrices @xmath162 , @xmath163 , @xmath164 , @xmath165 : @xmath166,\\quad    a_2= \\left [    \\begin{array}{c }     \\lambda(\\lambda_2,\\mu_2)\\,t_{a}qr_{i , j } \\\\     \\frac{\\lambda(\\lambda_2,\\mu_2)}{d_{1,i-1}^{}}\\,t_{a}(t_{-1}\\otimes i)qr_{i-1,j } \\\\     \\frac{\\lambda(\\lambda_2,\\mu_2)}{d_{2,j}^{}}\\,t_{a}(t_{-1}\\otimes i)qr_{i-1,j } \\\\",
    "\\frac{\\lambda(\\lambda_2,\\mu_2)}{d_{1,i-1}^ { } d_{2,j}^{}}\\,t_{a}(t_{-1}\\otimes i)qr_{i-1,j}\\\\    \\end{array } \\right],\\\\ & a_3= \\left [    \\begin{array}{c }      \\lambda(\\lambda_3,\\mu_3)\\,t_a ( t_{-1}\\otimes t_{-1})qr_{i-1,j-1 } \\\\      \\frac{\\lambda(\\lambda_3,\\mu_3)}{d_{1,i-1}^{}}\\,t_a ( t_{-1}\\otimes t_{-1})qr_{i-1,j-1 } \\\\      \\frac{\\lambda(\\lambda_3,\\mu_3)}{d_{2,j-1}^{}}\\,t_a ( t_{-1}\\otimes t_{-1})qr_{i-1,j-1 } \\\\     \\frac{\\lambda(\\lambda_3,\\mu_3)}{d_{1,i-1}^ { } d_{2,j-1}^{}}\\,t_a ( t_{-1}\\otimes t_{-1})qr_{i-1,j-1 } \\\\",
    "\\end{array } \\right],\\quad a_4= \\left [    \\begin{array}{c }     \\lambda(\\lambda_4,\\mu_4)\\,t_a ( i\\otimes t_{-1})qr_{i , j-1 } \\\\",
    "\\frac{\\lambda(\\lambda_4,\\mu_4)}{d_{1,i}}\\,t_a ( i\\otimes t_{-1})qr_{i , j-1 } \\\\      \\frac{\\lambda(\\lambda_4,\\mu_4)}{d_{2,j-1}}\\,t_a ( i\\otimes t_{-1})qr_{i , j-1 } \\\\      \\frac{\\lambda(\\lambda_4,\\mu_4)}{d_{1,i}^{\\alpha_1 } d_{2,j-1}^{\\alpha_2}}\\,t_a ( i\\otimes t_{-1})qr_{i , j-1 } \\\\    \\end{array } \\right],\\end{aligned}\\ ] ] and",
    "let us define 4 by 4 matrices @xmath167 , @xmath168 : @xmath169 here we use the matlab notation to express a sub matrix of a given matrix , for instance , for 4 by 16 matrix @xmath127 and the index @xmath170 , we denote by @xmath171 the sub matrix @xmath172 $ ] , @xmath173 , @xmath174 of the matrix @xmath127 .",
    "let us label the multi - moment vectors at nearest nine grid points : @xmath175 then the left hand side of for @xmath176 are expressed using the nine vectors and the matrices @xmath167 :",
    "@xmath177= \\sum_{k=1}^9a^{i , j}_k \\mathbf{f}_k.\\ ] ]    as for @xmath178 and @xmath179 , we obtain @xmath180 and @xmath181 similarly , one has @xmath182= \\sum_{k=1}^9b^{i , j}_k \\mathbf{f}_k,\\quad c\\delta t\\left [    \\begin{array}{c }    \\displaystyle   \\sum_{k=1}^4 l(\\partial_{\\xi_2}f_{k}(x_{i , j}+\\cdot ) | b_k ) \\\\ \\displaystyle     \\sum_{k=1}^4 l(\\partial_{\\xi_2}\\partial_{\\xi_1}f_{k}(x_{i , j}+\\cdot ) | b_k ) \\\\ \\displaystyle     \\sum_{k=1}^4   l(\\partial_{\\xi_2}\\partial_{\\xi_2}f_{k}(x_{i , j}+\\cdot ) | b_k ) \\\\   \\displaystyle    \\sum_{k=1}^4   l(\\partial_{\\xi_2}\\partial^2_{\\xi_,\\xi_2}f_{k}(x_{i , j}+\\cdot ) | b_k)\\\\    \\end{array } \\right]= \\sum_{k=1}^9c^{i , j}_k \\mathbf{f}_k,\\quad\\ ] ] with 4 by 4 matrices @xmath183 , @xmath184 , @xmath168 which are defined in the same manner .",
    "suppose the numerical approximations to the exact solutions @xmath185 and its first derivatives @xmath186 and @xmath187 , and the second derivative @xmath188 are known at all grid points @xmath189 at time step @xmath75 , which we denote by @xmath190 similarly , for numerical approximations to @xmath81 and @xmath82 and the derivatives , we use symbols @xmath191 and @xmath192 . let @xmath193 , @xmath194 and",
    "@xmath195 denote the multi moment vectors at grid ; @xmath196^\\top,\\\\ { \\mathbf{e_x}}^n_{ij}&=[{e_x}^n_{ij},\\partial_{x_1}{e_x}^n_{ij},\\partial_{x_2}{e_x}^n_{ij } , \\partial^2_{x_1x_2}{e_x}^n_{ij}]^\\top,\\\\ { \\mathbf{e_y}}^n_{ij}&=[{e_y}^n_{ij},\\partial_{x_1}{e_y}^n_{ij } , \\partial_{x_2}{e_y}^n_{ij},\\partial^2_{x_1x_2}{e_y}^n_{ij}]^\\top . \\end{array}\\ ] ] we number the numerical solutions in the way as above . based on the exact integration formula , and , , we arrive at the multi - moment scheme for the maxwell s equations : @xmath197 thus , the method uses 9 nearest neighbor points for 12 components ( 4 moments ) for @xmath80 , @xmath81 , and @xmath82 .",
    "each @xmath198 matrices @xmath199 $ ] , @xmath200 $ ] and @xmath201 $ ] has 100 nonzero entries .",
    "hence the total cost for the update amounts to 700 .",
    "we would like to emphasis that the multi - moment scheme provides with the first and the second derivatives as we as the function value at each grid .",
    "when displaying the numerical solution , one can construct the bi - cubic polynomial and can evaluate any spacial point with using the interpolation .",
    "we analyze the stability of the multi - moment scheme . for simplicity , we assume that the grid length is uniform , i.e. , @xmath202 for all @xmath203 . in this case , the 4 by 4 matrices @xmath167 , @xmath183 and @xmath184 in remain the same throughout of @xmath204 , and thus we omit the subscript .",
    "suppose that @xmath205 is @xmath206 periodic with respect to @xmath207 , i.e. , @xmath208 for all @xmath209 .",
    "let us consider the discrete fourier transform : @xmath210 : = \\sum_{i=0}^n\\sum^n_{j=0 } \\mathbf{f}_{i , j } e^{-2\\pi i k\\cdot x_{i , j } } = \\sum_{i=0}^n\\sum^n_{j=0}\\left [                                   f_{i , j } ,                                   \\partial_{x_1}f_{i , j } ,                                   \\partial_{x_2}f_{i , j } ,                                   \\partial^2_{x_1x_2}f_{i , j }   \\right]^\\top e^{-2\\pi i k\\cdot x_{i , j}},\\ ] ] where @xmath211 .",
    "the discrete fourier transform of the sequence @xmath212 becomes : @xmath213,\\ ] ] where @xmath214 is @xmath215 matrix depending on @xmath216 , @xmath217 and @xmath218 : @xmath219 now let us assume @xmath220 is periodic .",
    "let @xmath221 , @xmath222 and @xmath223 . from and , the amplification factor @xmath224 ( 12 by 12 matrix ) of the proposed scheme is given by @xmath225,\\ ] ] where @xmath226 , @xmath227 , i.e. , @xmath224 maps @xmath228 to the next step @xmath229 .",
    "let @xmath230 denote the set of eigenvalues of @xmath231 ( 9 eigenvalues ) .",
    "figure [ fig : amp1 ] shows the maximum absolute value of the eigenvalues , @xmath232 , against @xmath233\\in [ -\\pi,0]\\times [ -\\pi,0]$ ] for @xmath234 , @xmath235 and @xmath236 , respectively .",
    "numerically we find that all eigenvalues have the magnitude equal to or less than 1 for arbitrary @xmath237 .",
    "the magnitude is close to 1 in a wide range of @xmath233 $ ] , which indicates that the numerical scheme is less dissipative .",
    "in this section , we show the numerical performance of the multi - moment scheme through some numerical tests .",
    "+ * example 1 .",
    "plane waves . *",
    "+ in this example , we compute the numerical solutions for plane waves .",
    "we compare the numerical solutions with those produced by the fourth order in time and space fdtd ( yee s scheme ) .",
    "the yee s scheme computes e field and h field at different time level , and thus one must provide the exact initial condition at time @xmath238 for e field and @xmath239 for h field to obtain an accurate numerical solution . the plane wave solution is suitable to avoid the issue with the initial condition since the exact solution is easily obtained .    let @xmath240 for @xmath241 .",
    "let @xmath242 also denote its periodic extension to @xmath243 direction with periodicity @xmath124 , i.e. , @xmath244 for all @xmath245 .",
    "we rotate the function with the angle @xmath246 with respect to the origin @xmath247 to construct the one way propagating plane wave solution for maxwell s equation : @xmath248 if we set @xmath249 with @xmath250 for @xmath251 , they are the periodic solution of the maxwell s equation for @xmath252 in the domain @xmath253\\times[-\\frac{1}{2},\\frac{1}{2}]$ ] . in this numerical test",
    "we consider the solutions @xmath254 where @xmath255 .",
    "we test the case @xmath256 .",
    "figure 1 shows the initial profile of @xmath257 , and the four plane waves at @xmath239 , @xmath258 for @xmath259 with @xmath260 , in the domain .",
    "the arrow in each plot shows the direction of wave propagation .",
    "we report the accuracy of the multi moment scheme .",
    "the time step size is fixed to be @xmath261 for each mesh size @xmath262 , @xmath263 .",
    "we report the numerical solutions for @xmath264 and @xmath265 .",
    "the numerical solutions at time @xmath266 are produced by the multi moment scheme and compared to the exact solution .",
    "the number of iteration is @xmath206 for @xmath267 , and @xmath268 for @xmath269 where the numerical solution approximates the solution at time @xmath270 .    the initial value for @xmath271 is provided by the exact solution : @xmath272 similarly , @xmath273 and @xmath274 are given by the exact solution . in a practical situation ,",
    "the initial condition in function form may not be available , and we only have the function value at each grid point .",
    "in that case we employ finite difference of the initial grid function to provide the initial condition for derivatives .    for each mesh size @xmath275 , the error in the numerical solutions",
    "is measured by @xmath276 norm : @xmath277 the multi - moment scheme computes the first derivatives and the second mix derivative as numerical solutions .",
    "we report the relative error in the first derivatives : @xmath278 where @xmath279 .    for comparison , we also report the numerical solution produced by fourth - order in time and space fdtd ( see @xcite ) . in the fdtd numerical simulation",
    ", we employ the cfl number to be @xmath280 with which the fdtd method provides the best performance , i.e. , fdtd with cfl@xmath281 produces most accurate numerical solutions among the other cfl . in this test",
    ", the initial values for @xmath282 , @xmath283 and @xmath284 are given exactly : @xmath285 when the analytic solutions are not available , one must solve the maxwell s equations backward in time to provide an accurate initial condition for @xmath286 and @xmath287 to start the fdtd scheme , by employing another time marching method such as runge - kutta schemes .",
    "we compute the error in the numerical solution : @xmath288 where @xmath289 , @xmath290 and @xmath291 are computed by employing third order finite difference which is used in the fourth order fdtd scheme .",
    "figure [ fig : error500 ] shows the error @xmath292 and @xmath293 of the solutions generated by the multi moment method with @xmath236 and @xmath265 , and the fourth order fdtd with @xmath265 for the initial profile with @xmath260 against the grid number @xmath206 .",
    "the order of accuracy of the numerical solutions for each method is shown in table [ table : order500 ] . and figure [ fig : error1500 ] and table [ table : order1500 ] are numerical results when @xmath294 .",
    "let us consider the total computational cost in the multi - moment scheme to obtain the numerical solution at @xmath266 .",
    "for each time step , @xmath295 operation is required to update @xmath80 , and @xmath296 for each @xmath81 and @xmath82 .",
    "since the number of time integration in the multi - moment scheme with @xmath236 is @xmath297 , the total cost ( operation count ) amounts to @xmath298 .",
    "let us focus on the numerical solutions by the multi - moment scheme and yee s scheme when @xmath299 .",
    "figure [ fig : error500 ] shows that the error in the numerical solution produced by the multi - moment scheme with @xmath236 is @xmath300 while the error by fdtd is @xmath301 .",
    "so , the multi - moment scheme is 10 times more accurate than the fdtd with @xmath265 for this mesh size . to obtain the same accurate numerical solution by fdtd",
    ", we must take the half mesh size @xmath302 . for the fourth order yee s scheme",
    ", the cost for the one step map is 51 and the number of time integration is @xmath303 , thus the total cost for the numerical solution at @xmath266 amounts to @xmath304 .",
    "* example 2 .",
    "sharp profile .",
    "* + next we solve with @xmath252 .",
    "the initial condition is @xmath305 where @xmath306\\times[0.25 , 0.75]$ ] .",
    "the mesh size is @xmath307 .",
    "the initial condition is approximated by bi - cubic polynomial with the first and second derivatives being 0 .",
    "we do not use any other techniques to approximate the initial discontinuous profile .",
    "we use our algorithm with cfl@xmath0 . the initial condition and the numerical solution for @xmath308 at time @xmath309 and @xmath310",
    "are displayed in figure [ fig : square ] .",
    "no oscillation is observed in the numerical solution .",
    "we also employed the fourth order fdtd with the same initial condition .",
    "numerical oscillations were found near the sharp profile . +",
    "* example 3 .",
    "hidden resolution * + we solve with @xmath252 with the initial condition is @xmath311 the mesh size is @xmath312 and cfl@xmath0 , and so @xmath313 . we compute the numerical solutions at @xmath314 . we denote the numerical solutions by @xmath315 , @xmath316 , @xmath317 , @xmath318 . when visualizing the numerical solutions , we usually construct the bi - linear interpolation in each cell using the numerical solution at the grid .",
    "for instance , for the visualization of the solution @xmath315 , we plot the bi - linear interpolation constructed by using the gird value @xmath315 , and for visualizing the numerical solution @xmath319 , we plot the bi - linear interpolation constructed by the gird value @xmath319 .",
    "these two bi - linear interpolations are unrelated . in the left column in figure",
    "[ fig : interp ] , we plot the piece wise bi - linear interpolation for @xmath320 ( top ) and the one for @xmath321 ( bottom )",
    ". one can observe the spiky peaks and dips in the plots .    as have been mentioned repeatedly",
    ", the multi - moment scheme produces the derivatives as well as the function value at each grid .",
    "this is equivalent to state that the multi - moment scheme computes the bi - cubic polynomial in each cell as a numerical solution .",
    "so when plotting the numerical solution , we should use the computed bi - cubic interpolation instead of bi - linear interpolation .",
    "let us construct the bi - cubic polynomial @xmath322 in each cell @xmath323\\times[y_{j-1},y_j]$ ] using the numerical solutions , and let @xmath324 denote the piece wise bi - cubic polynomial defined in the domain @xmath325\\times [ -0.5,-0.5]$ ] , i.e. , @xmath326\\times[y_{j-1},y_j].\\ ] ] in the right column of figure [ fig : interp ] , we show the surface plot of the bi - cubic interpolations @xmath324 ( top ) and @xmath327 ( bottom ) .",
    "the numerical solutions are depicted as smooth functions . +",
    "* derivative free method * + we have also implemented the method using the bi - linear interpolation at each cell @xmath96 : @xmath328 in this way we obtain a derivative free nine point scheme : @xmath329 = \\left[\\begin{array}{ccc } l_1 & \\frac{1}{c\\mu}l_2 & -\\frac{1}{c\\mu}l_3 \\\\ \\frac{1}{c\\varepsilon}l_2 & l_1 & 0\\\\ -\\frac{1}{c\\varepsilon}l_3 & 0 & l_1\\end{array}\\right ] \\left[\\begin{array}{c } \\{h^{n}_{i , j}\\ } \\\\",
    "\\{(e_x)^{n}_{i , j}\\ } \\\\",
    "\\{(e_y)^{n}_{i , j}\\}\\end{array}\\right],\\ ] ] where @xmath330,\\\\ & l_2=\\left [ -\\frac{\\lambda } { 8 } , -\\frac{2-\\lambda}{4 } , -\\frac{\\lambda } { 8 } ,   0 , 0 , 0 , \\frac{\\lambda}{8},\\frac{2-\\lambda}{4},\\frac{\\lambda } { 8}\\right ] , \\quad l_3=\\left [ -\\frac{\\lambda}{8 } , 0 , \\frac{\\lambda}{8 } , -\\frac{2-\\lambda}{4},0 , \\frac{2-\\lambda } { 4 } ,   -\\frac{\\lambda } { 8},0 , \\frac{\\lambda } { 8}\\right].\\end{aligned}\\ ] ] this method is also stable with @xmath331 but is second order accurate .",
    "our numerical tests show that if we let @xmath236 , ( cfl@xmath0 ) then there is no significant dissipation but @xmath235 it has 30% dissipation at @xmath266 with speed one . for oblique plane waves",
    "there is no significant phase error with @xmath331 .",
    "an advantage of this method is that it is simple to be implemented and to be extended to the three dimension case .",
    "we developed a numerical method for solving time - domain maxwell s equation .",
    "it is fully explicit space and time integration method with higher order accuracy and cfl number being one .",
    "the bi - cubic interpolation is used for the solution profile to attain the resolution .",
    "it preserves sharp profiles very accurately without any smearing and distortion due to the exact time integration and high resolution approximation .",
    "the stability of the method were analyzed , and the nearly forth order accuracy were observed .",
    "t.  yabe , t.  ishikawa , p.  y. wang , t.  aoki , y.  kadota , and f.  ikeda , _ a universal solver for hyperbolic equations by cubic - polynomial interpolation .",
    "ii . two- and three - dimensional solvers _ , comput .",
    ", 66 ( 1991 ) , pp .",
    "233242 .",
    "t.  yabe , k.  takizawa , m.  chino , m.  imai , and c.  c. chu , _ challenge of cip as a universal solver for solid , liquid and gas _ , international journal for numerical methods in fluids , 47(2005 ) , pp .",
    "655676 .          .",
    "@xmath234 ( left ) , @xmath235 ( center ) , @xmath236 , ( right ) . , title=\"fig:\",width=188 ] .",
    "@xmath234 ( left ) , @xmath235 ( center ) , @xmath236 , ( right ) . ,",
    "title=\"fig:\",width=188 ] .",
    "@xmath234 ( left ) , @xmath235 ( center ) , @xmath236 , ( right ) .",
    ", title=\"fig:\",width=188 ]               ( left ) and @xmath293 ( right ) in the numerical solutions for the initial condition @xmath260 .",
    "the order of accuracy is shown in table [ table : order500],title=\"fig:\",width=283 ]   ( left ) and @xmath293 ( right ) in the numerical solutions for the initial condition @xmath260 .",
    "the order of accuracy is shown in table [ table : order500],title=\"fig:\",width=283 ]     ( left ) and @xmath293 ( right ) in the numerical solutions for the initial condition @xmath294 .",
    "the order of accuracy is shown in table [ table : order1500],title=\"fig:\",width=283 ]   ( left ) and @xmath293 ( right ) in the numerical solutions for the initial condition @xmath294 .",
    "the order of accuracy is shown in table [ table : order1500],title=\"fig:\",width=283 ]         ( the first column ) and the numerical solution for @xmath308 at time @xmath309 ( the second column ) and @xmath310 ( the third column).,title=\"fig : \" ]   ( the first column ) and the numerical solution for @xmath308 at time @xmath309 ( the second column ) and @xmath310 ( the third column).,title=\"fig : \" ]   ( the first column ) and the numerical solution for @xmath308 at time @xmath309 ( the second column ) and @xmath310 ( the third column).,title=\"fig : \" ]   ( the first column ) and the numerical solution for @xmath308 at time @xmath309 ( the second column ) and @xmath310 ( the third column).,title=\"fig : \" ]   ( the first column ) and the numerical solution for @xmath308 at time @xmath309 ( the second column ) and @xmath310 ( the third column).,title=\"fig : \" ]   ( the first column ) and the numerical solution for @xmath308 at time @xmath309 ( the second column ) and @xmath310 ( the third column).,title=\"fig : \" ]    ( top ) and @xmath321(bottom ) .",
    "right column : the bi - cubic interpolation @xmath324 ( top ) and @xmath327 ( bottom ) .",
    ", title=\"fig:\",width=294 ] ( top ) and @xmath321(bottom ) .",
    "right column : the bi - cubic interpolation @xmath324 ( top ) and @xmath327 ( bottom ) .",
    ", title=\"fig:\",width=294 ] ( top ) and @xmath321(bottom ) .",
    "right column : the bi - cubic interpolation @xmath324 ( top ) and @xmath327 ( bottom ) .",
    ", title=\"fig:\",width=294 ] ( top ) and @xmath321(bottom ) .",
    "right column : the bi - cubic interpolation @xmath324 ( top ) and @xmath327 ( bottom ) .",
    ", title=\"fig:\",width=294 ]"
  ],
  "abstract_text": [
    "<S> we develop a numerical scheme for solving time - domain maxwell s equation . </S>",
    "<S> the method is motivated by cip method which uses function values and its derivatives as unknown variables . </S>",
    "<S> the proposed scheme is developed by using the poisson formula for the wave equation . </S>",
    "<S> it is fully explicit space and time integration method with higher order accuracy and cfl number being one . </S>",
    "<S> the bi - cubic interpolation is used for the solution profile to attain the resolution . </S>",
    "<S> it preserves sharp profiles very accurately without any smearing and distortion due to the exact time integration and high resolution approximation . </S>",
    "<S> the stability and numerical accuracy are investigated . </S>"
  ]
}
{
  "article_text": [
    "dk is supported by an alexander von humboldt professorship of the alexander von humboldt foundation and the bmbf .",
    "ok thanks the imprs for geometric analysis , gravitation & string theory ( potsdam golm ) for support .",
    "in this section , we give a short introduction as well as a presentation and discussion on the type of results we obtain in this paper .",
    "the usual way to compute a physical probability amplitude is to replace each term of the perturbative series in the coupling @xmath1 by a sum of feynman graphs . applying renormalized feynman rules @xmath19 to all such graphs",
    "translates this sum of graphs to the physically observable renormalized feynman amplitude , say a green function @xmath20 , at least as a formal series .",
    "@xmath19 evaluated on a graph is a polynomial in a suitably chosen external scale parameter @xmath21 , @xmath22 .",
    "@xmath2 includes for example the center of mass energy @xmath23 given by the underlying process , with @xmath24 fixing a reference scale for renormalization .",
    "further dependences are scattering angles , collected in @xmath25 by a set of variables @xmath26 .",
    "these are dimensionless parameters incorporating dependences on scalar products @xmath27 or masses @xmath28 . throughout ,",
    "we assume we leave those scattering angles unchanged for the renormalization point .",
    "a discussion of this point can be found in @xcite .",
    "therefore , any renormalized green function @xmath29 can be written as a triangular expansion @xmath30 called ` log - expansion ' . here , @xmath1 denotes the perturbative parameter , a coupling constant say , and @xmath31 are some functions in @xmath26 .",
    "we have @xmath32 . for @xmath33 ,",
    "the @xmath34 may depend on @xmath26 and are obtained from the first @xmath16 terms of a perturbative expansion in the coupling .",
    "@xmath35 is a series in @xmath36   with @xmath37 .",
    "these series are determined from their counterparts in the universal enveloping algebra of feynman graphs that we detail below , see also @xcite .",
    "such a form of the green functions in a renormalizable field theory is a consequence of the hopf algebra structure of feynman graphs @xcite .",
    "one starts from the fact that all superficially divergent one - particle irreducible ( 1pi ) feynman graphs of any physical quantum field theory generate a hopf algebra @xmath38 .",
    "this allows to introduce dyson - schwinger equations ( dses ) as fix - point equations for feynman graphs upon using hochschild cohomology @xcite .",
    "see @xcite for an effective application of these mathematical structures to the automatization of perturbative renormalization , graph generation and graph counting .    given a quantum field theory , one always finds dses whose solution is simply related to the log - expansion * * ( * * eq .",
    "( [ eq : log - expansion ] ) * ) * by applying renormalized feynman rules @xmath19 .",
    "loc foissy classified exhaustively the structure of possible dses @xcite .",
    "we apply our approach to two exemplary cases : first , to the fermion propagator @xmath39 occurring in yukawa theory .",
    "@xmath40 represents an infinite sum of graphs that satisfies the dse @xmath41 secondly , to the photon self - energy @xmath42 occurring in quantum electrodynamics ( qed ) .",
    "the infinite sum of graphs @xmath43 satisfies the dse @xmath44 note that acting with renormalized feynman rules @xmath19 on @xmath40 and @xmath43 yields the log expansions * * ( * * eq .",
    "( [ eq : log - expansion])*)*.    in yukawa theory , one should consider systems of dses because there are no ward identities . here , we restrict to a truncation eliminating vertex divergences for purposes of presentation .",
    "our paper consists of two parts .",
    "first , in section [ sec : preliminaries ]",
    ", we give a brief overview on hopf algebras and dses . in particular , we relate the hopf algebra of feynman graphs to the hopf algebra of words by a morphism of hopf algebras .",
    "once the solution of a dse is given in the hopf algebra of words , we describe the filtration method in section [ sec : filtration - method ] .",
    "there , we rely on properties of renormalized feynman rules that we derive in section [ sec : renormalized - feynman - rules ] . finally , we present the filtration algorithm in section [ sec : filtration - algorithm ] .    in the second part of our paper , we describe a general method to derive the next - to@xmath45-leading log expansion in section [ sec : relat - betw - next ] . in particular , we exemplify up to @xmath46 for the yukawa fermion propagator . in appendix",
    "[ sec : qed - results ] , we collect the respective results for the qed photon self - energy . in the filtrations of the yukawa fermion propagator @xmath40 and the qed photon self - energy @xmath43",
    ", each term comes with a multiplicity .",
    "we list some resulting series in these multiplicities in appendix [ sec : summary ] .    in the remainder of this section , we summarize and discuss our results .",
    "cc7.5cmcc + & * periods @xmath18 * & * yukawa generating functions @xmath17 * & * qed generating functions @xmath17 * + @xmath47 & @xmath48&@xmath49 & @xmath50 + @xmath51 & @xmath52&@xmath53 & @xmath54 + @xmath55 & @xmath56&@xmath57 & @xmath58 + @xmath59 & @xmath60&@xmath61 & @xmath62 + @xmath63 & @xmath64&@xmath65 & @xmath66 + @xmath67 & @xmath68&@xmath69 & @xmath70 + @xmath71 & @xmath72&@xmath73 & @xmath74 + @xmath75 & @xmath76&@xmath77 & @xmath78 + @xmath79 & @xmath80&@xmath81 & @xmath82 + @xmath83 & @xmath84 } } =      \\alpha \\left ( \\phi_r\\left(b_+^{\\gamma_1}(\\gamma_2)\\right ) -        \\phi_r\\left(b_+^{\\gamma_2}(\\gamma_1)\\right ) \\right ) $ ] & @xmath85}(u ) = \\frac{x^3}{4 }      - \\frac{x^5}{4 } + \\frac{x^3}{4}\\log x - \\frac{3x^5}{4}\\log x$ ] & @xmath85}(u ) = \\frac{y}{2 } -      \\frac{y^2}{2}$ ] + @xmath86 & @xmath87 } }      = \\alpha \\bigg ( 2\\phi_r       \\left ( b_+^{\\gamma_1 } \\left ( \\gamma_1 \\cup \\gamma_1",
    "\\right )      \\right ) - \\phi_r \\left (        b_+^{\\gamma_1}\\left(b_+^{\\gamma_1}\\left(\\gamma_1\\right)\\right )      \\right ) -      \\phi_r(\\gamma_1)\\phi_r\\left(b_+^{\\gamma_1}\\left(\\gamma_1\\right)\\right )      \\bigg )      $ ] & @xmath88}(u )      = -\\frac{x^3}{8 } +       \\frac{x^5}{8 } - \\frac{x^3}{8}\\log x + \\frac{3x^5}{8}\\log x $ ] & @xmath88}(u ) = 0 $ ] +      let us first concentrate on yukawa theory , eq .",
    "( [ eq : dse - yuk ] ) . to find the leading log expansion we can simplify to @xmath89 feynman rules @xmath19 with massless internal propagators and a momentum scheme for subtraction turn eq .",
    "( [ eq : dse - yuk ] ) into a differential equation for the corresponding anomalous dimension , which can be solved implicitly @xcite .",
    "if we are only interested in the leading log expansion the situation is even simpler .",
    "we only have to solve @xmath90 indeed , only inserting the one - loop correction for the yukawa fermion propagator , @xmath91 into itself in all possible ways give graphs that contain leading log contributions .    in our paper",
    ", we introduce a convenient matrix notation . @xmath92$]-bracketed matrices with a dot in the upper left entry denote the functions @xmath8 in one variable , say @xmath93 .",
    "these functions occur in the log - expansions * * ( * * eq .  ( [ eq : log - expansion ] ) * ) * setting @xmath94 in section [ sec : relat - betw - next ] , we explain the notation and derive ordinary first order differential equations for these objects .",
    "the respective differential equations depend on the corresponding dses * * ( * * in our case , eq .  ( [ eq : dse - yuk ] ) * ) * and are solved for yukawa theory in section [ sec : relat - betw - next ] . for the leading log order",
    ", we define @xmath95 with corresponding period @xmath14 .",
    "the leading log expansion * * ( * * @xmath13 in eq .",
    "( [ eq : log - expansion ] ) * ) * finally yields @xmath96 @xmath97 and @xmath98 are also given in the first line of table [ tab : results ] .",
    "( [ eq : ll - solution ] ) is obvious as feynman rules in a momentum scheme map the hochschild one - co - cycle @xmath99 to the hochschild one - co - cycle @xmath100 on polynomials in the variable @xmath36 @xcite .    to get the next - to - leading log expansion , we consider two contributions : the insertion of the one - loop propagator graph into itself gives a contribution @xmath101 .",
    "the first term correspond to the leading log and the second term to the next - to - leading log expansion .",
    "there is also a contribution @xmath102 from the next hochschild one - co - cycle provided by @xmath103 .",
    "the latter contribution occurs in eq .",
    "( [ eq : dse - yuk ] ) that have a single appearance of @xmath103 ( beside several @xmath104 ) .",
    "we can therefore simplify to @xmath105    this gives the next - to - leading log expansion * * ( * * @xmath106 in eq .",
    "( [ eq : log - expansion ] ) * ) * , @xmath107 the functions @xmath108 and @xmath109 as well as the corresponding periods are listed in lines @xmath51 and @xmath55 of table [ tab : results ] .    for the next - to - next - to - leading log expansion , there are several contributions , which we do not summarize here . in section [ sec : next - tonext - leading ] , we derive @xmath110 } }     \\begin{bmatrix}\\bullet\\end{bmatrix}_{[a_1,a_2]}(u ) + \\alpha^2    p_2^{\\begin{bsmallmatrix}\\bullet\\end{bsmallmatrix}_{[a_1,\\theta(a_1,a_1 ) ] } }    \\begin{bmatrix}\\bullet\\end{bmatrix}_{[a_1,\\theta(a_1,a_1)]}(u)\\end{aligned}\\ ] ] with generating functions and periods given in lines @xmath111 of table [ tab : results ] .",
    "( [ eq : gr - ll],[eq : gr - nll],[eq : gr - nnll ] ) and the respective periods ( see the first column of table [ tab : results ] ) are in general , valid for any dse . however , the generating functions ( 2nd and 3rd column of table [ tab : results ] ) depend on the dse . _    for the qed photon self - energy ,",
    "the corresponding dse is given in eq .",
    "( [ eq : dse - qed ] ) .",
    "the respective generating functions are listed in the third column of table [ tab : results ] and are much simpler .",
    "this is because there is no insertion point in the hochschild one - co - cycle @xmath99 in qed .",
    "it follows that the mentioned differential equations for generating functions turn out to be ordinary equations .",
    "note that in qed , we have @xmath112 instead of @xmath113 .",
    "the usual perturbative approach to quantum field theory does not suffice in high - energy regimes , where @xmath114 .",
    "there , it becomes significant to consider the log - expansion instead of perturbation theory .",
    "our results simplify the calculation of the log - expansion in eq .",
    "( [ eq : log - expansion ] ) drastically .",
    "one usually needs to compute an infinite number of feynman integrals of any loop - number . using our results ,",
    "the complete next - to@xmath45-leading log expansion only depends on at most @xmath16-loop graphs . for example , the leading log order * * ( * * eq .",
    "( [ eq : gr - ll ] ) * ) * only depends on the feynman graph @xmath104 . the next - to - leading log green function in eq .",
    "( [ eq : gr - nll ] ) only depends on the graphs @xmath104 , @xmath103 and @xmath115 .",
    "the next - to - next - to - leading log expansion only depends on the feynman graphs @xmath116 see eq .",
    "( [ eq : gr - nnll ] ) and the periods in the first column of table [ tab : results ] .    in summary , we filter the images of feynman graphs * * ( * * as in eq .",
    "( [ eq : feynman - graphs ] ) * ) * in a suitable universal enveloping algebra that we construct below .",
    "this decomposition then yields ordinary first order differential equations for generating functions @xmath8 .",
    "we solve for the functions @xmath8 , which are the coefficients for the periods @xmath18 obtained in these filtrations .",
    "the methods presented here are valid in general .",
    "one can apply the described techniques to any dse in any quantum field theory .",
    "one could also compute the log - expansion for systems of dses .",
    "we expect that the generating functions then become solutions in systems of ordinary first order differential equations . here , we are content in exhibiting our approach .",
    "a structural analysis of its mathematical underpinnings is left to future work .",
    "we start with the introduction of necessary preliminaries .",
    "let @xmath38 be the vector space of 1pi feynman graphs and their disjoint unions in a given quantum field theory .",
    "@xmath117 forms an associative and unital algebra , where @xmath118 denotes the empty graph and @xmath119 is the disjoint union of graphs , serving as a product .",
    "this algebra is graded by the loop number ( the first betti number ) as an infinite sum of finite dimensional vector spaces @xmath120 with @xmath121 and augmentation ideal @xmath122 note that cartesian products @xmath123 deliver a decreasing filtration @xmath124 .",
    "the associated graded spaces @xmath125 contain @xmath126 as the linear span of graphs in first degree .",
    "we set @xmath127 .",
    "@xmath38 acquires a co - algebraic structure by introducing a co - product @xmath128 that acts on 1pi graphs @xmath129 as @xmath130 @xmath131 is the set of all proper sub - graphs @xmath132 such that @xmath133 is the disjoint union of divergent 1pi sub - graphs in @xmath129 .",
    "the action of @xmath134 on @xmath118 and products of graphs is given by @xmath135 where @xmath136 flips the second and third element of the fourfold tensor product .",
    "the co - product is co - associative @xcite . together with a co - unit @xmath137 that assigns a non - zero value only for @xmath118 and @xmath138 , @xmath139 forms a co - associative and co - unital co - algebra .",
    "the given construction implies that @xmath140 forms a bi - algebra as well .    finally , @xmath141 forms a hopf algebra , abbreviated by @xmath38 .",
    "@xmath142 is the antipode that fulfills @xmath143 @xmath38 is called the hopf algebra of feynman graphs .",
    "there have been various introductions to hopf algebras and in particular , to the hopf algebra of feynman graphs @xcite .",
    "graphs without sub - divergences form primitive elements . by eq .",
    "( [ eq : delta - fg ] ) , their reduced co - product , @xmath144 vanishes .    for each such primitive element @xmath145 , @xmath146",
    ", we define a grafting operator @xmath147 that linearly inserts its argument graph(s ) into @xmath129 . for example , @xmath148 see figure [ fig : graphs ] for the qed feynman graphs @xmath149 and @xmath150 .",
    "@xmath151    furthermore , we have @xmath152 .",
    "if the insertion is not unique , the result is a sum over all possibilities , for example @xmath153 the graphs @xmath149 , @xmath154 , @xmath155 and @xmath156 are defined in figure [ fig : graphs ] .",
    "the @xmath157 are hochschild one - co - cycles by definition @xcite @xmath158    they generate the co - radical filtration and the associated grading by sub - divergences . to define the co - radical filtration , set @xmath159 and for @xmath160 set @xmath161",
    "this is an increasing filtration , @xmath162 , and we set @xmath163 , so the first degree elements are given as @xmath164 in this filtration , @xmath165 so they are the same element in @xmath166 , an algebraic fact that by @xmath19 is the starting point for the existence of the renormalization group @xcite .",
    "hochschild closedness * * ( * * eq.([eq : hochschild-1-co - cycle ] ) * ) * will also be essential when we relate a general dse and its solution to the hopf algebra of words in section [ sec : isom - betw - mathc ] .",
    "this relation is reminiscent of the flag - decomposition @xcite which appears when analyzing renormalized amplitudes as a limiting mixed hodge structure .",
    "we now turn to the hopf algebra of words , for which the decreasing and increasing filtrations @xmath167 and @xmath168 above exist analogously .",
    "let @xmath169 be the vector space of words and @xmath170 be the sub - space of letters .",
    "we need to collect some properties of @xmath169 . in the remainder of our paper , we abbreviate letters by @xmath171 and words by @xmath172  .",
    "concatenation of letters creates words , e.g. , @xmath173 and @xmath174 form new words .",
    "let furthermore @xmath175 be a commutative and associative map that assigns a new letter to any two given letters .",
    "it is always assumed that @xmath176 is completed if necessary so that it contains all images of @xmath177 .    using this map",
    ", we can recursively define the shuffle product @xmath178 ( also denoted by @xmath179 ) as @xmath180 where on the rhs of eq .",
    "( [ eq : shuffle1 ] ) any word in brackets is concatenated from right to the respective letter . the so defined shuffle product is commutative and associative   @xcite .",
    "thus , @xmath181 forms an associative and unital algebra .",
    "@xmath169 acquires a co - algebraic structure by introducing the co - product @xmath182 and the co - unit @xmath183 acting on words as @xmath184 for example , the co - product of the word @xmath185 is @xmath186    @xmath187 forms a bi - algebra as well .    finally , @xmath188 forms a hopf algebra , called the hopf algebra of words",
    ". the antipode @xmath189 fulfills @xmath190 for more details on the hopf algebra of words , the reader may consult the textbook of reutenauer @xcite .",
    "we finally introduce the grafting operators .",
    "the primitive elements of @xmath169 are all letters , since @xmath191 .",
    "we then define @xmath192 which means that @xmath193 concatenates the letter @xmath194 from left to its argument word ( or sum of words since @xmath193 acts linearly ) .",
    "the reader may check using eqs .",
    "( [ eq : deltaw],[eq : b+ ] ) , that the @xmath193 are indeed , hochschild one - co - cycles , @xmath195    note that @xmath196 is the linear span of words that can not be written as a shuffle product , in analogy to the definitions for @xmath38 .",
    "similarly , @xmath197 can be identified with the completed set of letters .",
    "we can now relate the hopf algebra of feynman graphs to the hopf algebra of words .",
    "indeed , there exists a unique hopf algebra morphism @xmath198 that fulfills @xmath199 it respects the hopf algebraic structures .",
    "the existence of such a morphism is guaranteed by the fact that the grafting operators are hochschild one - co - cycles @xcite .",
    "for example , eqs .",
    "( [ eq : morphism - begin ] , [ eq : morphism - end ] ) give @xmath200 ( @xmath201 assigns the letter @xmath202 to the primitive feynman graph @xmath203 ) .",
    "we give another example .",
    "consider the last graph in figure [ fig : graphs ] . with @xmath204 ,",
    "we find @xmath205    the hopf algebra morphism @xmath201 allows us to translate any dse to the hopf algebra of words .",
    "in particular , applying @xmath201 to eqs .",
    "( [ eq : dse - yuk],[eq : dse - qed ] ) and using eqs .",
    "( [ eq : morphism - begin]-[eq : morphism - end ] ) yields @xmath206 here , we drop any further subscript on letters , hence @xmath207 and @xmath208 .",
    "we finally solve eqs .",
    "( [ eq : dse - yuk - words ] , [ eq : dse - qed - words ] ) via the anstze @xmath209 and obtain @xmath210 the first orders are @xmath211 , @xmath212 and @xmath213 , all others are recursively given .",
    "_ this ansatz can also be used for any other dse @xcite .",
    "_    renormalized feynman rules linearly act on words as @xmath214 and @xmath215 in the log - expansion * * ( * * eq .",
    "( [ eq : log - expansion])*)*. the remaining question is now : which part of @xmath216 maps to which power of the external scale parameter @xmath2 in the log - expansion * * ( * * eq .",
    "( [ eq : log - expansion ] ) * ) * ? we will answer this question in the next section , in full accordance with the blow - ups needed for feynman integrands from the viewpoint of algebraic geometry @xcite .",
    "in the following , we filter the coefficients @xmath217 in the solution of any dse * * ( * * as occurring in eq .",
    "( [ eq : dse - solution])*)*. each filtered term then maps to a certain power of @xmath2 in the log - expansion * * ( * * eq .",
    "( [ eq : log - expansion])*)*.    we derive filtration rules for words ( in general , @xmath217 is a sum of words ) by considering their dual elements in the universal enveloping algebra @xmath218 .",
    "we introduce @xmath219 as the dual hopf algebra to @xmath169 in the next section .",
    "section [ sec : renormalized - feynman - rules ] states and proves the two most important properties of renormalized feynman rules .",
    "this also explains how the filtration of words works . in section [ sec : filtration - algorithm ] , we finally present a canonical filtration algorithm for arbitrary words and prove that it is free of redundancies .",
    "let @xmath220 be a vector space over a field @xmath221 .",
    "let furthermore @xmath222 : \\mathcal{l } \\otimes \\mathcal{l } \\to \\mathcal{l}$ ] be a bi - linear map that fulfills @xmath223 = 0 $ ] as well as the jacobi - identity @xmath224 + [ y,[z , x ] ] + [ z,[x , y ] ] = 0\\ ] ] @xmath225 .",
    "@xmath226)$ ] ( or shortly @xmath220 ) is called a lie algebra and the bi - linear map @xmath222 $ ] ( called lie bracket ) is antisymmetric .",
    "@xmath220 acquires a descending series of sub - algebras @xmath227 , where @xmath228 is generated by all @xmath229 $ ] with @xmath230 and @xmath231 . in the following ,",
    "we denote all basis elements of some lie algebra @xmath220 that are not in @xmath232 by @xmath233 and ask for a complete basis in terms of these @xmath234 . for example , is @xmath235 $ ] or @xmath236 = -[x_1,x_2]$ ] a basis element of @xmath220 ? both are linearly dependent .",
    "we therefore consider the hall basis @xcite , which exists for any lie algebra .",
    "it requires a lexicographical ordering of all elements in @xmath220 , for example , let @xmath237 < \\ldots$ ] ( it does not matter which ordering we take as long as we choose one ) .",
    "we then define @xmath238 $ ] to be a ( hall ) basis element of @xmath220 iff both ,    1 .",
    "@xmath239 are ( hall ) basis elements with @xmath240 , 2 .   if @xmath241 $ ] , then @xmath242    are fulfilled .",
    "for example , @xmath235 $ ] , @xmath243 $ ] and @xmath244 $ ] are ( hall ) basis elements while @xmath236 $ ] , @xmath245 $ ] and @xmath246,x_3]$ ] etc .",
    "are not .",
    "the bracket in @xmath226)$ ] does not comprise an associative product .",
    "however , one can construct enveloping algebras , i.e. an _ algebra _ @xmath247 such that there exists a homomorphism @xmath248 fulfilling @xmath249\\textbf{)}\\ ] ] @xmath250 .",
    "there may be several enveloping algebras but we can always find a unique _ universal enveloping algebra _ @xmath251 up to isomorphism : for each enveloping algebra @xmath252 there exists a unique algebra homomorphism @xmath253 such that the following diagram @xmath254^{\\rho_\\mathcal{u } }          \\ar[dr]_{\\rho_\\mathcal{a } } & \\mathcal{u}(\\mathcal{l } )          \\ar[d]^{\\rho_{\\mathcal{u } \\to              \\mathcal{a } } }   \\\\          & \\mathcal{a}_\\mathcal{l } }      \\end{xy }      \\end{split}\\ ] ] commutes .",
    "@xmath255 is unique * * ( * * assume that there are two universal enveloping algebras @xmath256 and @xmath257 , then the homomorphism @xmath258 turns out to be an isomorphism**)**.    let us now construct the universal enveloping algebra for any lie algebra @xmath220 , which will prove its existence as well . consider the tensor algebra @xmath259 , where @xmath260 we define the sub - space @xmath261 as @xmath262 \\right ) \\otimes t| x , y \\in    \\mathcal{l } ; \\ , s , t \\in t(\\mathcal{l})\\}\\ ] ] ( @xmath263 is a 2-sided ideal ) and introduce equivalent classes of @xmath264 , @xmath265 = \\left\\ { s \\in      t(\\mathcal{l } ) | s - t \\in i    \\right\\}.\\ ] ] for example , @xmath266 \\textbf { ] } = \\ { [ x_1,x_2 ] , x_1 \\otimes x_2 - x_2 \\otimes x_1 , \\ldots \\}$ ] and @xmath267 = \\ { x_1 \\otimes x_2 \\otimes x_3 , [ x_1,x_2 ] \\otimes x_3 + x_2 \\otimes x_1 \\otimes x_3 , \\ldots \\}$ ] etc .",
    "all such equivalent classes together form a vector space , denoted by @xmath268 .",
    "the sum of two elements @xmath269,[t ] \\in t(\\mathcal{l})/i$ ] is well defined as @xmath270 $ ] .",
    "we carefully abbreviate @xmath268 by @xmath255 and define an associative product @xmath271 acting on equivalent classes as @xmath272 \\otimes [ t]\\textbf { ) } : = [ s \\otimes t].\\ ] ]    thus , @xmath273 \\textbf{)}$ ] forms an algebra and together with the homomorphism @xmath274 defined as @xmath275 $ ] @xmath276 , it is an enveloping algebra * * ( * * eq .",
    "( [ eq : enveloping - algebra ] ) holds**)**. finally , @xmath255 is even the universal enveloping algebra of @xmath220 , since @xmath264 fulfills the universality property in eq .",
    "( [ eq : commuting - diagram ] ) as well @xcite .",
    "it turns out that the universal enveloping algebra of a lie algebra acquires a hopf algebra structure . upon setting @xmath277)=[x]\\otimes\\one+\\one\\otimes [ x ]",
    "\\qquad    \\forall x \\in \\mathcal{l},\\ ] ] it is determined from compatibility with the product @xmath278 .    for the hopf algebra of words @xmath169 , there exists a lie algebra @xmath220 such that @xmath255 is dual to @xmath169 ( milnor - moore theorem @xcite ) .    the indicated lie algebra",
    "is easily constructed . for each letter @xmath279",
    ", we name one respective element @xmath280 .",
    "note that @xmath220 contains more elements than @xmath176 ( for example , there is no element @xmath281 $ ] in @xmath176 , but @xmath235",
    "\\in \\mathcal{l}$ ] ) .",
    "this will be crucial in the following .",
    "duality between @xmath169 and @xmath255 allows us to uniquely define a linear and invertable map @xmath282 ( see section [ sec : hall - words ] ) , such that @xmath283 , \\qquad \\eta\\textbf{(}\\theta(a_i , a_j)\\textbf { ) } =    [ \\theta(x_i , x_j ) ] , \\qquad \\eta ( a_i a_j ) = [ x_i \\otimes x_j ] , \\ldots\\ ] ] @xmath284 . in general , concatenation of words is the dual operation of multiplication in @xmath255 .",
    "we now give two crucial properties of renormalized feynman rules , which we need for our filtration method .",
    "the proofs are collected below .    1 .",
    "let @xmath285 and @xmath286\\in \\mathcal{u}(\\mathcal{l})$ ] be its dual element @xmath287\\textbf{)}$ ] .",
    "if @xmath288 is also an element of @xmath289 , then renormalized feynman rules map @xmath9 to the @xmath2-linear part of the log - expansion in eq .",
    "( [ eq : log - expansion ] ) , @xmath290 2 .",
    "renormalized feynman rules are character - like , @xmath291 @xmath292 , where the dot on the rhs of eq .",
    "( [ eq : state2 ] ) represents usual multiplication .",
    "furthermore , @xmath293 is a period @xmath294 .",
    "let us consider some examples before we turn to the proofs ( in the following , @xmath295 ) .",
    "each letter @xmath296 has a dual element @xmath297\\in \\mathcal{u}(\\mathcal{l})$ ] such that @xmath230 * * ( * * by construction of the dual elements , see eq .",
    "( [ eq : dual - map])*)*. thus , @xmath298 and @xmath299 .",
    "more interesting is the dual element of @xmath300 .",
    "it is @xmath301 - [ x_j \\otimes     x_i ] = \\textbf { [ } [ x_i , x_j ] \\textbf{]}\\ ] ] and @xmath302 \\in \\mathcal{l}$ ] .",
    "thus , @xmath303 although @xmath304 also contains terms @xmath305 @xcite .    finally , we _ filter _",
    "the word @xmath306 to @xmath307 - \\frac{1}{2 } \\theta(a_i , a_j).\\ ] ] here , we abbreviated @xmath308 by the concatenation commutator @xmath309 $ ] discussed in section ( [ sec : hall - words ] ) .",
    "we treat concatenation ( multi-)commutators of letters as a letter itself , since the respective dual hopf algebra element is primitive .",
    "note the information content of our filtration .",
    "the first term of eq .",
    "( [ eq : filtration - example ] ) maps to @xmath310 under renormalized feynman rules and eq .",
    "( [ eq : state2 ] ) tells us how to determine this @xmath310-term simply by calculating @xmath311 and @xmath312 .",
    "the other two terms of eq .",
    "( [ eq : filtration - example ] ) map to @xmath2 .",
    "the possibility to calculate the @xmath310-term in eq .",
    "( [ eq : filtration - example ] ) out of the renormalized feynman amplitudes for @xmath313 and @xmath314 * * ( * * eq.([eq : state2 ] ) * ) * finally leads to the desired relations between next - to@xmath45-leading log orders and terms up to @xmath315 in the log - expansion * * ( * * eq .",
    "( [ eq : log - expansion])*)*. we explore this in great detail in section [ sec : relat - betw - next ] .    however , we first give the proofs for the necessary properties of feynman rules stated above in light in particular of the duality of @xmath169 and @xmath255 .",
    "terms linear in @xmath2 can be interpreted in @xmath316 , and higher powers in @xmath2 reflect terms in the quotient algebra @xmath255 .      as we stated before , renormalized",
    "feynman rules map an element @xmath9 that is dual to a lie algebra element as above to the @xmath2-linear part of the log - expansion in eq .",
    "( [ eq : log - expansion ] ) , @xmath317 see eq .",
    "( [ eq : state1 ] ) .",
    "this is a direct consequence of the renormalization group action on a single graph .",
    "in fact , let @xmath129 be a hopf algebra element of fixed co - radical degree @xmath318 , @xmath319 .",
    "then , it allows for an expansion @xmath320 by the renormalization group @xmath321 where @xmath322 is the function @xmath323 .",
    "here , we identified the tensor - product of values with their product ( @xmath324 ) : @xmath325 note that @xmath326 is a symmetric function by construction .",
    "this leads to a strict inequality on the co - radical degrees @xmath327 } < r_{\\gamma_1}+r_{\\gamma_2},\\ ] ] which implies the result , eq .",
    "( [ eq : state1 ] ) .",
    "we also have that renormalized feynman rules are character - like , * * ( * * eq .  ( [ eq : state2 ] ) * ) * , @xmath328 @xmath292 .",
    "this is a direct consequence of chen s lemma @xcite in this context .    to show that @xmath293 is a period @xmath294 is non - trivial only for letters in the image of @xmath177 .",
    "therefore , it suffices to consider feynman graphs ( with fixed labels on their edges ) that are nested insertions of primitive graphs into each other : a hopf algebra element @xmath129 is a flag if there exists a sequence of primitive graphs @xmath329 , @xmath330 , with @xmath331    similarly , we say that a sum @xmath332 of @xmath318 flags @xmath333 , @xmath334 is a symmetrized flag if there exists a sequence of primitive graphs @xmath329 , @xmath330 , with @xmath335 the @xmath336-sum is over @xmath337 unsigned permutations . instead of having the full permutation group acting , one could also make do with permutations so as to make the rhs co - commutative , if so desired .    for a given flag @xmath129 , and",
    "hence given sequence of primitive graphs @xmath329 , @xmath330 , let @xmath338 be the cardinality of the set @xmath339 so @xmath340 .",
    "a symmetrized flag is complete if @xmath341 in eq.([symmflag ] ) .",
    "finally , renormalized feynman rules are a forest sum @xcite in graph polynomials @xmath342 ( see @xcite for notation ) : @xmath343 here , @xmath344 .",
    "the coefficient @xmath345 of the @xmath2-linear term is @xmath346 if the renormalization point preserves scattering angles .",
    "we then have the following result on the angle - independence of symmetrized flags : for any symmetrized flag @xmath332 , @xmath347    this justifies that @xmath348 is primitive in the hopf algebra of feynman graphs : to any set @xmath23 of letters , we can assign a unique complete symmetrized flag @xmath349 of feynman graphs corresponding to the letters in @xmath23 .",
    "we set @xmath350 such that @xmath351 > from eq .",
    "( [ eq : result - sym - flag ] ) follows that @xmath350 can indeed be regarded as a new letter in @xmath169 because it is independent of scattering angles by construction .",
    "we now prove eq .",
    "( [ eq : result - sym - flag ] ) : it follows immediately from writing eq.([linl ] ) as elementary symmetric polynomials in the variables @xmath352 , with @xmath353 ranging over all necessary forests and co - forests , which is possible precisely for symmetrized flags .",
    "indeed , the denominator in eq.([linl ] ) @xmath354 is symmetric under exchange of @xmath355 , while in symmetrized flags , we also have co - commutativity which ensures symmetry under @xmath356 .",
    "hence , in the sum for symmetrized flags , the factor @xmath357 in eq.([linl ] ) turns to unity .",
    "this proves eq.([eq : result - sym - flag ] ) .",
    "let us consider an example : have a look at the first two graphs in figure [ fig : graphs ] .",
    "the graph @xmath149 has three vertices , the graph @xmath358 has five .",
    "accordingly , there are three graphs @xmath359 , @xmath360 , obtained by replacing a vertex of @xmath149 by @xmath358 , and five graphs @xmath361 , @xmath362 , obtained by replacing a vertex of @xmath358 by @xmath149 .",
    "we have the reduced co - products @xmath363 set @xmath364 we have @xmath365 , so @xmath366 is a symmetrized flag , and it is complete . then , @xmath367 using eq.([linl ] ) and the reduced co - products above , we indeed find that the second symanzik polynomial appearing in eq.([linl ] ) drops out in this co - commutative sum of symmetrized graph insertions @xmath368 which is an example of the above result ( see also @xcite ) .",
    "it is not difficult to filter @xmath369 and @xmath370 in the solution of any dse * * ( * * as occurring in eq .",
    "( [ eq : dse - solution])*)*. however , to filter higher order coefficients ( @xmath217 for @xmath371 ) requires a canonical algorithm that we give here .",
    "consider for example @xmath372 for @xmath373 * * ( * * see eq .",
    "( [ eq : dse - solution - yuk ] ) * ) * , @xmath374 we already filtered @xmath375 and @xmath376 without much effort but it is not obvious to see the filtration for @xmath377 .",
    "the required filtration algorithm is the following loop over the length @xmath378 of occurring words :    1 .",
    "bring all words with length @xmath378 into lexicographical order using the concatenation commutator ( respect the hall basis ) .",
    "this introduces words with length @xmath379 , as we treat concatenation ( multi-)commutators as own letters .",
    "repeat step 1 . for",
    "the full shuffle products of the @xmath378 corresponding letters and insert them into the expression .",
    "all words with length @xmath378 drop out , the introduced full shuffle products remain untouched in the remainder .",
    "we start with the maximal length of occurring words down to @xmath380 .",
    "hence , in the case of @xmath217 , we perform the above loop for @xmath381 .",
    "let us illustrate this for @xmath377 .",
    "the only word with length @xmath382 in eq .",
    "( [ eq : w3-yuk ] ) is @xmath383 and it is already given in lexicographical order .",
    "we calculate the corresponding full shuffle product @xmath384 and insert it into @xmath377 such that the word @xmath385 drops out .",
    "hence , @xmath386 and we proceed with @xmath380 .",
    "the term @xmath387 remains untouched during the rest of the filtration .",
    "the words @xmath388 and @xmath389 are not in lexicographical order , we write @xmath390 - 2 a_1    \\theta(a_1,a_1 ) - 3 [ a_1 , a_2 ] + 4 a_1a_2 - \\frac{1}{2 }    \\theta(a_1 , a_1 , a_1 ) + \\frac{1}{2 } a_1 \\shuffle_\\theta a_1    \\shuffle_\\theta a_1,\\ ] ] where we only introduced hall basis elements ( @xmath391 $ ] instead of @xmath392 $ ] etc . ) .",
    "the respective shuffle products are @xmath393 + \\theta(a_1,a_2 ) ,    \\\\ \\label{eq : sh - example2 }    a_1 \\shuffle_\\theta \\theta(a_1,a_1 ) = & 2 a_1 \\theta(a_1,a_1 ) -    [ a_1 , \\theta(a_1,a_1 ) ] + \\theta(a_1,a_1,a_1)\\end{aligned}\\ ] ] ( they are already brought into lexicographical order using the concatenation commutator ) . inserting eqs .",
    "( [ eq : sh - example1 ] , [ eq : sh - example2 ] ) into eq .",
    "( [ eq : w3-yuk2 ] ) finally results in @xmath394 - [ a_1 , a_2 ] + \\frac{1}{2 } \\theta(a_1 , a_1 ,    a_1 ) \\nonumber\\\\    & - 2 \\theta(a_1,a_2).\\end{aligned}\\ ] ]    the explicit filtration algorithm is the basis for section [ sec : relat - betw - next ] .",
    "there , we derive the relations for next - to@xmath45-leading log terms in the log expansion * * ( * * eq .",
    "( [ eq : log - expansion])*)*. however , we first give some basics to hall words and concatenation ( multi- ) commutator letters .",
    "this explains , why the filtration algorithm described above is redundancy - free .      in the hopf algebra of feynman graphs @xmath38",
    ", any @xmath395 evaluates to @xmath396 . here , @xmath397 and the @xmath398",
    "are given through eq.([rge ] ) .",
    "in particular , this amounts for @xmath399 to an evaluation of products of primitive elements .    through @xmath201",
    ", we inherit the same properties for words @xcite : any @xmath285 evaluates to @xmath400 , where @xmath401 and @xmath402 in particular , this amounts for @xmath403 to an evaluation of products of letters .",
    "note that @xmath201 preserves the co - radical degree .",
    "the above filtration algorithm answers the question how to obtain non - leading logs , @xmath404 , from the letters that constitute @xmath9 . for this",
    ", we first have to consider the lower central series filtration @xmath405 of the lie algebra @xmath220 , @xmath406 and its associated grading .",
    "secondly , we have to consider the filtrations and gradings of the universal enveloping algebra : @xmath407 by its augmentation and @xmath408 by its co - radical .",
    "we will use that @xmath409 is isomorphic to the @xmath378-fold symmetric tensor - power of @xmath220 by the poincar  birkoff ",
    "witt theorem : @xmath410    let @xmath411 as before .",
    "we have the commutative diagrams @xmath412^{\\shuffle_\\theta } \\ar[d]_{\\eta\\otimes\\eta }          & \\mathcal{h}_w          \\ar[d]^{\\eta }   \\\\          \\mathcal{u}_{\\mathcal{l}}\\otimes \\mathcal{u}_{\\mathcal{l } }          \\ar[r]^ { m_{\\mathcal{u } } } & \\mathcal{u}_{\\mathcal{l } } }      \\end{xy }      \\qquad\\qquad\\qquad      \\begin{xy } \\xymatrix { \\mathcal{h}_w\\otimes \\mathcal{h}_w          \\ar[d]_{\\eta\\otimes\\eta } & \\mathcal{h}_w\\ar[l]^{\\delta }          \\ar[d]^{\\eta }   \\\\          \\mathcal{u}_{\\mathcal{l}}\\otimes \\mathcal{u}_{\\mathcal{l } } &          \\mathcal{u}_{\\mathcal{l}}\\ar[l]^ { \\delta_{\\mathcal{u } } } }      \\end{xy }      \\end{split}\\ ] ] and two more , by replacing @xmath413 and downward pointing arrows by upward pointing ones .",
    "these determine the action of @xmath414 once we have defined it on letters @xmath415 * * ( * * @xmath416 $ ] , @xmath417\\ldots$]**)**. for example , the degree two image @xmath418 of the word @xmath419 with respect to @xmath407 is @xmath420 $ ] , with @xmath421 $ ] .",
    "we define feynman rules for elements @xmath269 \\in \\mathcal{u}_{\\mathcal{l}}$ ] by @xmath422 \\to \\psi_r\\textbf{(}\\eta^{-1}([s])\\textbf{)}.\\ ] ] in particular for homogeneous elements @xmath269 \\in \\mathfrak{gr}_j ( \\mathcal{u}_\\mathcal{l})$ ] we have @xmath423)\\sim l^j$ ] , by construction .",
    "_ the structure of renormalized feynman rules then allows us to regain the above filtration algorithm on words @xmath424 as _",
    "@xmath425 here , @xmath426 is the projection into the grade @xmath7 piece , @xmath427 .",
    "@xmath428 is the map @xmath429\\to \\eta\\circ\\theta\\textbf{(}\\eta^{-1}([x_1]),\\ldots,\\eta^{-1}([x_j])\\textbf{)}$ ] , where the @xmath430)\\in \\mathcal{h}_l$ ] are letters by construction ( @xmath431 ) .    the lower central series filtration @xmath406 filters in particular @xmath432 .",
    "thus , using the hall basis of @xmath218 and the invertibility of @xmath414 finally allows us to write the filtration algorithm in the word algebra @xmath169 with concatenation multi - commutators .",
    "indeed , the rhs of eq.([strucfil ] ) is of degree one by construction as it is in the image of @xmath428 .",
    "this suffices , as the degree-@xmath7 piece is a product of the corresponding @xmath7 degree - one pieces obtained in @xmath433 .",
    "let us consider an example .",
    "words on three letters @xmath434 have a hall basis , which _ for their degree one part _ can be written in @xmath435),\\quad    y_3:=\\theta(a_2,[a_1,a_3]),\\quad y_4:=\\theta(a_3,[a_1,a_2 ] ) ,    \\nonumber\\\\    y_5:=[a_2,[a_1,a_3]],\\quad y_6:=[a_3,[a_1,a_2]]\\}.\\end{gathered}\\ ] ] in degree one this is the inverse image @xmath436 of the elements @xmath437 ,    x_2[x_1,x_3 ] , x_3[x_1,x_2],[x_2,[x_1,x_3 ] ] , [ x_3,[x_1,x_2]]\\}\\ ] ] in @xmath219 written in hall basis notation ( ordered and omitting the symmetric tensor product ) . these form a standard hall basis on three ` letters ' @xmath438 dual to @xmath434 in @xmath219 .",
    "there are six words on three distinct letters @xmath434 . for their degree one",
    "part , these can be written in the basis above : @xmath439 inverting these equations expresses the degree one elements @xmath440 through the six words on the left .",
    "these correspond to linear combinations of feynman graphs @xmath441 , @xmath442 which map under @xmath201 to the corresponding words .",
    "for example , @xmath443)=\\eta^{-1}p_1\\eta(a_1a_2a_3-a_1a_3a_2+a_2a_3a_1-a_3a_2a_1),\\ ] ] with @xmath444 furthermore @xmath445 so there is no term @xmath446 , whilst the term in @xmath310 is @xmath447)-\\frac{1}{2}\\left(\\psi_r^1(a_2)\\psi_r^1([a_1,a_3 ] )      + \\psi_r^1(a_3)\\psi_r^1([a_2,a_1])\\right).\\ ] ] this gives us a definition in terms of feynman diagrams for @xmath448 which defines a @xmath2-linear term .",
    "let us now describe the standard hall basis for a set of words on @xmath449 distinct letters in general .",
    "the case of repeated letters follows easily .",
    "there are @xmath450 words we can form .",
    "first , we count with the help of the mbius function @xmath451 the number of available concatenation multi - commutators @xmath452 .",
    "@xmath453 with @xmath454 the well - known number of multi - commutators of degree @xmath449 on an alphabet of size @xmath7 .",
    "let @xmath455 be the set of partitions @xmath456 of the integer @xmath449 with the following properties : @xmath457 we allow for at most one such @xmath458 to be marked , which we indicate as @xmath459 .",
    "furthermore , if @xmath460 , @xmath461 must be marked .",
    "if @xmath456 contains such a distinguished marked @xmath462 , we say @xmath456 is marked at @xmath463 , else it is unmarked .",
    "the marking reflects the fact that @xmath464 $ ] is distinguished amongst all @xmath465 .",
    "we say that a partition @xmath466 of a set @xmath467 of @xmath449 letters is compatible with the partition @xmath456 of the integer @xmath449 , if it is a disjoint union of sets @xmath468 of @xmath458 letters according to @xmath456 .",
    "letters in @xmath469 are completely symmetrized , while all other sit in multi - commutators of degree @xmath470 .",
    "assume @xmath471 is unmarked .",
    "then we assign a set of letters @xmath472 on @xmath378 multi - commutators @xmath473 on letters @xmath474 to it .",
    "if @xmath456 is marked at @xmath463 , we assign a set of letters @xmath475 then , summing over all partitions @xmath456 and all partitions of letters @xmath466 compatible with it , we get @xmath450 different words which form a base for the degree one elements of @xmath218 .    if a partition @xmath456 contains an unmarked integer @xmath458 say @xmath476 times , the symmetry factor @xmath477 of @xmath456 is @xmath478 .",
    "then , we indeed count @xmath479 where @xmath480 if @xmath456 is not marked at @xmath463 , and @xmath481 if it is marked at @xmath463 .",
    "we complete this section by giving a final example . for four distinct letters",
    ", we can have the partition @xmath482 with @xmath456 unmarked .",
    "so it will provide six elements in @xmath483 .",
    "for the partition @xmath484 we have @xmath485 possibilities to choose three letters for @xmath486 which itself has two elements , whilst the fourth letter belongs to @xmath487 . for the partition @xmath488",
    "we have @xmath489 possibilities to choose two letters for a one - element @xmath490 while the other two letters constitute @xmath491 .",
    "for @xmath492 we get a non - trivial symmetry factor and have @xmath493 possibilities to form the product @xmath494 .",
    "finally , we have the partition @xmath495 .",
    "this gives a single element - the symmetric sum over all permutations of four letters .",
    "counting , we get @xmath496 all such words are independent by construction and using eq.([mcs ] ) repeatedly there are @xmath450 of them .",
    "they hence form a base .",
    "we now present the main result of our work : how to write the next - to@xmath45-leading log order as a function of terms up to @xmath497 in the log - expansion * * ( * * eq .",
    "( [ eq : log - expansion ] ) * ) * ? we first introduce a convenient notation for multiplicities of full shuffle products in a filtered word .",
    "secondly , we derive generating functions for these multiplicities using the example of the yukawa propagator .",
    "we derive the generating functions for the qed photon self - energy in appendix [ sec : qed - results ] .",
    "we represent the multiplicity of shuffle products in a filtered word by @xmath92$]-bracketed matrices @xmath119 , for example @xmath498 each matrix denotes a number , in our case @xmath499 , @xmath500 * * ( * * see eq .",
    "( [ eq : w2-yuk])*)*. in the following we say that a matrix @xmath119 _ belongs to _ a shuffle product @xmath23 , when it gives the multiplicity of @xmath23 in a filtered word .",
    "we also say that @xmath23 is the _ respective shuffle product _ to @xmath119 .",
    "each matrix @xmath119 with corresponding shuffle product @xmath23 is built as follows : the first row contains the numbers of letters @xmath501 , @xmath502,@xmath503 in @xmath23 .",
    "the other rows represent one letter @xmath504 in @xmath23 each , s.t .",
    "@xmath503 contains @xmath505 letters @xmath314 for the @xmath463-th row .",
    "for example , the filtered word @xmath506 contains the term , @xmath507    we index matrices @xmath119 if the respective shuffle @xmath23 contains ( multi-)commutator letters @xmath222 $ ] by the commutator letters themselves . for example , the filtered word @xmath508 contains the term @xmath509 } a_1 \\shuffle_\\theta    \\theta(a_1,a_1)\\shuffle_\\theta [ a_1,a_2 ] + \\ldots\\ ] ] we treat indexed matrices separately in section [ sec : commutators ] .",
    "first though , we only treat index - free matrices and hence , full shuffle products _ without ( multi-)commutator letters_.    now , consider an _ unfiltered word _ @xmath217 that is recursively defined via a dse . in our case of the yukawa propagator ,",
    "this is eq .",
    "( [ eq : dse - solution - yuk ] ) .",
    "a matrix with @xmath510 brackets represents the number of words in @xmath217 that consists of a given set of letters .",
    "the matrix entries encode the particular set of letters in full analogy to the case of @xmath92 $ ] brackets above .",
    "for example , @xmath511 represents the number of words with four letters @xmath501 , one @xmath502 , one @xmath512 and one @xmath513 in the unfiltered word @xmath217 .",
    "as another example , @xmath377 contains the terms @xmath514 and @xmath515 * * ( * * see eq .",
    "( [ eq : w3-yuk ] ) * ) * , hence @xmath516 .",
    "we always represent a @xmath92$]-bracketed matrix by a lower case letter and the same matrix with @xmath510 brackets by the corresponding capital letter ( @xmath517 ) .",
    "the defined matrices can have any sizes .",
    "filling zeros does not change the multiplicity of the corresponding shuffle product .",
    "we call a row ` @xmath177-row ' when it is not the first row of a matrix .",
    "we consider two matrices with two @xmath177-rows interchanged to be the same object , since they represent the same number ( @xmath179 is symmetric ) .",
    "for example @xmath518    let two matrices @xmath519 , @xmath520 with corresponding shuffle products @xmath521 and @xmath522 be given .",
    "we define the matrix @xmath523 such that it belongs to the shuffle product @xmath524 .",
    "this defines a special summation of matrices , denoted by @xmath525 .",
    "this is realized as follows : @xmath525 adds up each first row as in ordinary matrix summation and writes the @xmath177-rows one below the other .",
    "we can even add matrices with different sizes by filling zeros .",
    "for example , @xmath526    we define matrices @xmath527 as well as the useful vectors @xmath528 with appropriate sizes .",
    "we use these vectors to notate some properties of matrices .",
    "we calculate products of matrices and vectors by ordinary matrix multiplication and not by replacing the matrix by the corresponding number . for example , a matrix @xmath119 that occurs in the filtered word @xmath217 of a dse fulfills @xmath529 .",
    "let @xmath530 be the number of nonzero @xmath177-rows .",
    "then , we define @xmath531 which is the number of letters in the respective shuffle product .",
    "note that once , a matrix representing a number is contracted with a vector , the result is regarded as a real vector , @xmath532    we introduce a function @xmath533 acting on two matrices , say @xmath519 and @xmath520 with respective shuffle products @xmath521 and @xmath522 .",
    "@xmath534 counts the number of combinatorial possibilities to work out some shuffle products in @xmath522 such that the resulting expression contains one term @xmath521 .",
    "for example , @xmath535 we comment on the second example : the corresponding shuffle product of @xmath536 is @xmath537 and there are 4 possibilities to work out one of the shuffle products to derive @xmath538 the last term on the rhs is the respective shuffle product of @xmath539 .",
    "we relate @xmath510-bracketed matrices to @xmath92$]-bracketed matrices .",
    "consider for example @xmath540 and the respective shuffle product @xmath541 .",
    "computing @xmath23 gives @xmath542 words that consists of the letters @xmath501 , @xmath502 and @xmath543 .",
    "ordering these words using the filtration algorithm , @xmath544\\ ] ] does not change the overall number of words with letters @xmath501 , @xmath502 and @xmath543 .",
    "it only introduces new words with commutator letters .",
    "we have thus , @xmath545 in general , @xmath546 where the sum is over all possible matrices @xmath547 . if @xmath119 has only one row , @xmath548 if @xmath549 and @xmath550 otherwise . eq .",
    "( [ eq : curly - square-2 ] ) then reads @xmath551 , as in eq .",
    "( [ eq : curly - square-1 ] ) .",
    "if @xmath119 consists of more than one row , the reader may verify that indeed , eq .  ( [ eq : curly - square-2 ] ) is the correct generalization . note that eq .",
    "( [ eq : curly - square-2 ] ) only holds for index - free matrices .",
    "indeed , the number of words that consist of a certain ( commutator - free ) set of letters does not change when introducing concatenation commutators during the filtration algorithm .",
    "we introduce generating functions for the multiplicities ( matrices ) @xmath119 .",
    "let @xmath8 be a matrix with integer entries except for the upper left entry , which is just a dot .",
    "a matrix @xmath119 is said to be equivalent to @xmath8 , @xmath552 , if replacing the upper left entry to a dot yields @xmath8 .",
    "we define @xmath553 @xmath554 is a function in @xmath555 , represented by a matrix .",
    "it generates all @xmath552 , @xmath556 examples of generating functions are @xmath557    we translate two properties of matrices @xmath119 to generating functions @xmath8 .",
    "first , we sum generating functions @xmath8 in the same special way as matrices @xmath119 .",
    "the dot remains untouched , for example @xmath558 secondly , let @xmath559 with @xmath560 .",
    "we define @xmath561 .",
    "summation and absolute value of generating functions will be useful in section [ sec : index - free - n0 ] .",
    "we find another relation between a @xmath510-bracketed matrix @xmath562 and @xmath92$]-bracketed matrices by use of the recursive equation eq .",
    "( [ eq : dse - solution - yuk ] ) .",
    "let the lhs of eq .",
    "( [ eq : dse - solution - yuk ] ) be an unfiltered word @xmath217 and let the words @xmath563 on the rhs be filtered words .",
    "let @xmath562 be the number of words consisting of a certain set of letters on the lhs , a @xmath510-bracketed matrix hence",
    ". on the rhs , only terms that constitute these words are taken into account .",
    "note that we have @xmath564 .",
    "the recursive relation for @xmath562 is @xmath565 where @xmath119 is still , the same matrix as @xmath562 but with @xmath92 $ ] brackets .",
    "@xmath566 sums integers @xmath567 as in eq .",
    "( [ eq : dse - solution - yuk ] ) and matrices @xmath568 such that @xmath569 we explain the different terms in eq .",
    "( [ eq : curly - square-3 ] ) individually .",
    "first , @xmath570 corresponds to the @xmath202 term in eq .",
    "( [ eq : dse - solution - yuk ] ) .",
    "the integers @xmath7 and @xmath378 range over the same numbers as in eq .",
    "( [ eq : dse - solution - yuk ] ) .",
    "the term @xmath571 gives 1(0 ) if the respective words to @xmath562 do ( not ) contain the letter @xmath314 .",
    "only if they do contain @xmath314 , they may arise from the term @xmath572 in eq .",
    "( [ eq : dse - solution - yuk ] ) .",
    "since we introduce filtered words @xmath563 into the rhs in eq .",
    "( [ eq : dse - solution - yuk ] ) , we obtain expressions @xmath573 , where @xmath23 is a full shuffle product .",
    "@xmath23 is built out of @xmath378 shuffles , namely terms in @xmath574 , @xmath575 , @xmath503 , @xmath576 .",
    "we therefore claim that @xmath23 is the respective shuffle product to @xmath577 .",
    "each matrix @xmath568 belongs to a full shuffle product in @xmath563 .",
    "condition @xmath566 in eq .",
    "( [ eq : star ] ) consists of two parts .",
    "the first three relations correspond to the third sum in eq .",
    "( [ eq : dse - solution - yuk ] ) . the fourth equation together with the factor @xmath578 in eq .",
    "( [ eq : curly - square-3 ] ) ensure that the letters in @xmath23 together with the letter @xmath314 ( matrix @xmath470 ) constitute the set of letters in @xmath562 .",
    "@xmath23 consists of @xmath579 letters , which gives rise to the factor of @xmath580 in eq .",
    "( [ eq : curly - square-3 ] ) .",
    "we now derive an inhomogeneous linear differential equation for the corresponding generating function to @xmath119 , i.e. @xmath554 * * ( * * see eq .",
    "( [ eq : def - generating - function])*)*. therefore , inserting eq .",
    "( [ eq : curly - square-2 ] ) into eq .",
    "( [ eq : curly - square-3 ] ) yields @xmath581 the final step is to multiply with @xmath582 and to sum over all matrices that are equivalent to @xmath119 .",
    "_ this gives the master differential equation .",
    "_ indeed , on the lhs we obtain @xmath583 , @xmath584 see eq .",
    "( [ eq : star ] ) for the summation @xmath566 of integers @xmath567 and matrices @xmath568 . from eq .",
    "( [ eq : def - generating - function ] ) , we read off the initial condition @xmath585    let us consider a first example : for @xmath586 , the first term in eq .",
    "( [ eq : master ] ) vanishes .",
    "the last term only gives a non - zero value for @xmath106 .",
    "@xmath587 , @xmath588 .",
    "the @xmath533 function gives 1 for @xmath589 and 0 otherwise .",
    "together with the initial condition in eq .",
    "( [ eq : initial - condition ] ) , we find @xmath590    we can now derive the homogeneous part of the differential master equation eq .",
    "( [ eq : master ] ) . on the rhs",
    ", the only terms including the function @xmath554 itself occur in the sum for @xmath106 , when @xmath379 of the matrices @xmath568 are equivalent to @xmath591 and the @xmath378-th matrix is equivalent to @xmath119 . using eq .",
    "( [ eq : bullet1 ] ) , we obtain @xmath592 hence , the differential equation eq .",
    "( [ eq : master ] ) reduces to an integration using the ansatz @xmath593 we read off the initial condition for @xmath594 from eq .",
    "( [ eq : initial - condition ] ) .",
    "in particular , the integration is @xmath595 where we obtain @xmath596 from eq .",
    "( [ eq : master ] ) .",
    "@xmath597 is an appropriate integration constant such that @xmath598 .",
    "further general simplifications of the differential master equation are not obvious .",
    "the problem is that the functions @xmath533 in eq .",
    "( [ eq : master ] ) give individual numbers that do not generalize and so have to be worked out case - by - case .",
    "they result in an overall differential operator acting on whatever follows .",
    "we demonstrate this in several examples , which will give us next - to and next - to - next - to - leading log generating functions .",
    "one exception is the case that @xmath8 only contains one row , @xmath599 .",
    "these generate the matrices @xmath119 that belong to full shuffle products @xmath23 without @xmath600 letters . `",
    "index - free ' means that @xmath23 also does not contain @xmath222 $ ] letters .    here",
    ", @xmath601 reduces to 1 if @xmath602 and to 0 otherwise .",
    "thus , the first term in eq .",
    "( [ eq : master ] ) is zero .",
    "the other @xmath533 term constrains @xmath603 hence , @xmath604 .",
    "we denote the generating functions of @xmath568 and @xmath470 by @xmath605 and @xmath606 to be consistent .",
    "we obtain @xmath607 where @xmath608 sums the generating functions @xmath609 , @xmath503 , @xmath610 such that @xmath611 in the following , we give some examples that constitute the next - to@xmath45-leading log expansions .",
    "the first example is @xmath613 .",
    "the respective shuffle products to the matrices @xmath614 are @xmath615 for @xmath616 .",
    "the sum in eq .",
    "( [ eq : master - special ] ) only gives non - zero values if @xmath617 or @xmath618 .",
    "for @xmath617 , @xmath619 and eq .",
    "( [ eq : starstar ] ) is only fulfilled if one @xmath605 matches @xmath8 .",
    "this part belongs to the homogeneous differential equation .    for @xmath618 , @xmath620",
    "and we find @xmath621 @xmath587 from eq .",
    "( [ eq : starstar ] ) .",
    "thus , the inhomogeneous part of eq .",
    "( [ eq : master - special ] ) reads @xmath622 we used eq .",
    "( [ eq : bullet1 ] ) in the last line .",
    "we insert this result into eq .",
    "( [ eq : generating - function - final ] ) and obtain @xmath623      matrices @xmath625 belong to the shuffle products @xmath626 for @xmath627 .",
    "the sum in eq .",
    "( [ eq : master - special ] ) gives non - zero values only if @xmath617 or @xmath628 .",
    "as in the previous example , the @xmath617 part belongs to the homogeneous differential equation .    for @xmath628 , @xmath629 and we find @xmath621 @xmath587 from eq .",
    "( [ eq : starstar ] ) .",
    "thus , the inhomogeneous part of eq .",
    "( [ eq : master - special ] ) reads @xmath630 we insert this result into eq .",
    "( [ eq : generating - function - final ] ) and obtain @xmath631      @xmath633 is the final next - to - next - to - leading log generating function for matrices @xmath634 with @xmath599 .",
    "the matrices @xmath119 belong to the shuffle products @xmath635 for @xmath627 .",
    "thus , the sum in eq .",
    "( [ eq : master - special ] ) gives non - zero values only if @xmath617 or @xmath618 .",
    "if @xmath617 , @xmath636 .",
    "there are two possibilities to choose the matrices @xmath605 such that eq .",
    "( [ eq : starstar ] ) is fulfilled .",
    "however , only one of these belongs to the inhomogeneous part of the differential equation : for two integers @xmath637 , @xmath638 and for all other @xmath463 , @xmath639 .    if @xmath618 , eq .",
    "( [ eq : starstar ] ) is only satisfied if one of the matrices @xmath605 is @xmath640 and the others are equal to @xmath591 .",
    "we finally find the inhomogeneous part of eq .",
    "( [ eq : master - special ] ) , @xmath641 we used the previous results in eqs .",
    "( [ eq : bullet1],[eq : bullet2 ] ) in the last line . inserting this into eq .",
    "( [ eq : generating - function - final ] ) and performing the integration finally results in @xmath642      the respective full shuffle products of index - free matrices @xmath119 with @xmath643 contain at least one letter @xmath600 but no @xmath222 $ ] letters . here",
    ", we have to proceed from the master differential equation eq .",
    "( [ eq : master ] ) to obtain @xmath596 in eq .",
    "( [ eq : generating - function - final ] ) .",
    "we treat the different next - to@xmath45-leading log generating functions in separate subsections .",
    "the first example is the next - to - leading log generating function @xmath645 .",
    "matrices @xmath634 belong to the shuffle products @xmath646 for @xmath647 .    in eq .",
    "( [ eq : master ] ) , we replace the sum over @xmath634 by a sum over @xmath647 such that @xmath648 . in the first term on the rhs ,",
    "only @xmath649 yields a non - vanishing function @xmath533 .",
    "in particular , @xmath650 the other sum only survives if @xmath106 and hence @xmath651 .",
    "the integers @xmath567 in the @xmath566-sum range such that @xmath652 * * ( * * see eq .",
    "( [ eq : star])*)*. furthermore , in the first argument of the function @xmath533 , @xmath653 . for the inhomogeneous part of the differential equation",
    ", this implies that @xmath654 @xmath587 such that @xmath655 .",
    "then , @xmath656 all together , we obtain @xmath657 in the third line , we used the explicit expression for the generating function @xmath591 * * ( * * eq .",
    "( [ eq : bullet1])*)*.    inserting this result into eq .",
    "( [ eq : generating - function - final ] ) , we finally obtain @xmath658    @xmath640 * * ( * * eq .  ( [ eq : bullet2 ] ) * ) * and @xmath659 are the only necessary generating functions to derive relations for the next - to - leading log order .",
    "it is surprising that they are related by a factor of @xmath660 , @xmath661      now , consider the next - to - next - to - leading log generating function @xmath663 .",
    "matrices @xmath634 belong to the shuffle products @xmath664 for @xmath647 .    again in eq .",
    "( [ eq : master ] ) , we replace the sum over @xmath634 by a sum over @xmath647 such that @xmath665 .",
    "the first term consists of two parts , @xmath666 and @xmath667 .",
    "for other @xmath547 , @xmath601 vanishes .",
    "in particular , @xmath668 the sum over @xmath7 only gives a non - zero value for @xmath106 .",
    "hence @xmath669 and the integers @xmath567 in the @xmath566-sum require @xmath670 * * ( * * see eq .",
    "( [ eq : star])*)*. the first argument of the function @xmath533 becomes @xmath671 . for the inhomogeneous part of the differential equation , this implies that either @xmath672 or @xmath673 . the first case is realized if @xmath654 @xmath587 .",
    "the second case implies that one of the matrices @xmath568 is equal to @xmath674 and the rest of the matrices @xmath654 .",
    "we compute @xmath675 we use all these observations to obtain the inhomogeneous part of the differential equation eq .",
    "( [ eq : master ] ) , @xmath676 in the last line , we used the explicit formulas for the generating functions @xmath591 and @xmath659 * * ( * * eqs .",
    "( [ eq : bullet1],[eq : bullet5])*)*.    inserting eq .",
    "( [ eq : bullet6-pre ] ) into the integration in eq .",
    "( [ eq : generating - function - final ] ) finally results in @xmath677      now , consider @xmath679 .",
    "the respective shuffle products to the matrices @xmath634 are @xmath680 for @xmath647 .    in eq .",
    "( [ eq : master ] ) , we replace the sum over @xmath634 by a sum over @xmath647 such that @xmath681 . here",
    ", only @xmath682 contributes to the first sum and we calculate @xmath683 in the second sum , @xmath106 and @xmath651 .",
    "the integers @xmath567 in the @xmath566-sum are constraint by @xmath684 * * ( * * see eq .",
    "( [ eq : star])*)*. the first argument of the function @xmath533 becomes @xmath685 .",
    "the second argument must be @xmath686 since we only consider the inhomogeneous part of the differential equation .",
    "thus , one of the matrices @xmath568 is equal to @xmath687 and the rest of the matrices @xmath654 .",
    "in particular , @xmath688 we deduce the inhomogeneous part of the differential equation eq .",
    "( [ eq : master ] ) , @xmath689 in the last line , we used the explicit formulas for the generating functions @xmath591 and @xmath640 * * ( * * eqs .",
    "( [ eq : bullet1],[eq : bullet2])*)*.    we plug eq .",
    "( [ eq : bullet7-pre ] ) into eq .",
    "( [ eq : generating - function - final ] ) and obtain @xmath690      the function @xmath692 generates the rationals @xmath552 to the respective shuffle products @xmath693 for @xmath647 .",
    "consider eq .",
    "( [ eq : master ] ) .",
    "we replace the sum over @xmath634 by a sum over @xmath647 such that @xmath694 . here , only the matrices @xmath695 and @xmath696 contribute to the first sum and we find @xmath697 in the second sum , @xmath106 and @xmath651 as before .",
    "the integers @xmath567 in the @xmath566-sum range over @xmath698 * * ( * * see eq .",
    "( [ eq : star])*)*. the first argument of the function @xmath533 is @xmath699 . here , there are three possibilities for @xmath700 in the second sum of eq .",
    "( [ eq : master ] ) .",
    "first , @xmath701 and @xmath654 @xmath587 .",
    "secondly , @xmath702 , which implies that one of the matrices @xmath568 is equal to @xmath674 and the rest of the matrices @xmath654 . in the third case , @xmath703 .",
    "note that @xmath704 did not occur in the previous examples because it was part of the homogeneous differential equation eq .",
    "( [ eq : master ] ) . here , we realize @xmath703 within the inhomogeneous part of the differential equation : two of the matrices @xmath568 are equal to @xmath674 and the rest of the matrices @xmath654 . the corresponding functions @xmath578 give @xmath705 we simplify the inhomogeneous part of the differential equation eq .",
    "( [ eq : master ] ) as follows : @xmath706    we use the previous results in eqs .  ( [ eq : bullet1],[eq : bullet5 ] ) and insert the resulting expression into eq .",
    "( [ eq : generating - function - final ] ) .",
    "a little calculation yields @xmath707      the only next - to - next - to - leading log generating function left is @xmath709 .",
    "it generates the rationals @xmath552 with the respective shuffle products @xmath710 for @xmath647 .    in eq .",
    "( [ eq : master ] ) , we replace the sum over @xmath634 by a sum over @xmath647 such that @xmath711 .",
    "the function @xmath533 in the first sum vanishes except for @xmath712 : @xmath713 in the second sum , either @xmath617 or @xmath618 .",
    "this is the main difference to the previous examples .",
    "the sum does not vanish for @xmath714 because @xmath715 . for @xmath106 , @xmath651 as before .",
    "then , the integers @xmath567 in the @xmath566-sum range over @xmath698 * * ( * * see eq .",
    "( [ eq : star])*)*. furthermore , @xmath716 in the first argument of the function @xmath533 , which implies that either @xmath717 or @xmath718 . in the first case ,",
    "there is one @xmath637 such that @xmath719 and for all other @xmath637 , @xmath654 . in the second case ,",
    "one of the matrices @xmath568 must be equal to @xmath720 and another one must be equal to @xmath674 . the rest of the matrices @xmath654 .",
    "the corresponding @xmath533-function factors are @xmath721 for @xmath714 , @xmath722 .",
    "the integers @xmath567 in the @xmath566-sum then require @xmath723 . furthermore , @xmath724 in the first argument of the function @xmath533 .",
    "thus , either @xmath672 or @xmath673 . in the former case , @xmath654 @xmath587 . in the latter case ,",
    "one of the matrices @xmath568 must be equal to @xmath674 and the other matrices @xmath654 .",
    "the corresponding functions @xmath578 give @xmath725 using these observations yields the inhomogeneous part of the differential equation eq .",
    "( [ eq : master ] ) , @xmath726    we insert this into the integration in eq .",
    "( [ eq : generating - function - final ] ) .",
    "we also need eqs .",
    "( [ eq : bullet1],[eq : bullet2],[eq : bullet5 ] ) and after some calculation , we obtain @xmath727      in this paper , we do not give a general method to obtain the generating functions for indexed matrices .",
    "in this section however , we derive the two ` indexed generating functions ' @xmath728 } = \\sum_{n\\geq0 }    \\begin{bmatrix }      n    \\end{bmatrix }    _ { [ a_1,a_2 ] } z^{n+1 } , \\qquad    \\begin{bmatrix}\\bullet\\end{bmatrix}_{[a_1,\\theta(a_1,a_1 ) ] } = \\sum_{n\\geq0 }    \\begin{bmatrix }      n    \\end{bmatrix }    _ { [ a_1,\\theta(a_1,a_1 ) ] } z^{n+1}.\\ ] ] these generate the indexed matrices @xmath729}$ ] and @xmath730}$ ] that belong to the full shuffle products @xmath731,\\qquad    a_1^{\\shuffle_\\theta\\,n } \\shuffle_\\theta[a_1,\\theta(a_1,a_1)]\\ ] ] respectively .",
    "these shuffles make part of the filtered words @xmath732 * * ( * * eq .  ( [ eq : dse - solution - yuk ] ) * ) * and map to the next - to - next - to - leading log order in the log - expansion .",
    "in particular , @xmath733}$ ] and @xmath734}$ ] complete the set of generating functions that are necessary to obtain the next - to - next - to - leading log expansion .",
    "we will work on a general method to derive indexed generating functions in future work .",
    "only words with @xmath736 letters @xmath501 and one letter @xmath502 in the _ unfiltered word @xmath737 _ can contribute to the term @xmath738 } a_1^{\\shuffle_\\theta\\,n-3 }    \\shuffle_\\theta[a_1,a_2]\\ ] ] in the _ filtered word @xmath737_. consider eq .",
    "( [ eq : dse - solution - yuk ] ) and let the words @xmath563 on the rhs be filtered .",
    "then , @xmath739 }      a_1^{\\shuffle_\\theta\\,t_k-3 } \\shuffle_\\theta [ a_1,a_2 ] \\right )    \\nonumber\\\\    & + b_+^{a_1 } \\sum_{k\\geq 1 } \\sum_{\\sum_i t_i = n-1 } k    \\begin{bmatrix }      t_1    \\end{bmatrix }    a_1^{\\shuffle_\\theta\\,t_1 } \\shuffle_\\theta \\ldots    \\shuffle_\\theta    \\begin{bmatrix }      t_{k-1 }    \\end{bmatrix }    a_1^{\\shuffle_\\theta\\,t_{k-1 } }    \\shuffle_\\theta    \\begin{bmatrix }      t_k-2 & 1    \\end{bmatrix } a_1^{\\shuffle_\\theta\\,t_k-2 } \\shuffle_\\theta a_2    \\nonumber\\\\     & + b_+^{a_2 } \\sum_{k\\geq1 }    \\begin{pmatrix }      2 + k \\\\ k     \\end{pmatrix } \\sum_{\\sum_i t_i = n-2 }    \\begin{bmatrix }      t_1    \\end{bmatrix }    a_1^{\\shuffle_\\theta\\,t_1 } \\shuffle_\\theta \\ldots    \\shuffle_\\theta    \\begin{bmatrix }      t_k    \\end{bmatrix }    a_1^{\\shuffle_\\theta\\,t_k } + \\ldots,\\end{aligned}\\ ] ] where the dots represent all missing terms in eq .",
    "( [ eq : dse - solution - yuk ] ) , for example @xmath740 }      a_1^{\\shuffle_\\theta\\,t_k-4 } \\shuffle_\\theta [ a_1,[a_1,a_2 ] ]    \\right).\\ ] ] all these other terms do not contribute to @xmath741 } a_1^{\\shuffle_\\theta\\,n-3 } \\shuffle_\\theta[a_1,a_2]$ ] in the filtered word .",
    "indeed , the only missing terms in eq .",
    "( [ eq : wn - contribution-1 ] ) that give words with @xmath736 letters @xmath501 and one @xmath502 include one of the multi - commutator letters @xmath742\\ldots]$ ] in the shuffle product .",
    "computing all these shuffles and filtrating the resulting words will not give words with @xmath743 letters @xmath501 and one @xmath744 $ ] but words with multi - commutator letters .",
    "given a filtered word @xmath737 , one regains the original unfiltered word by _ first computing all shuffle products in @xmath737 and then , computing all ( multi-)commutators_. this can be seen by a look at the filtration algorithm in section [ sec : filtration - algorithm ] .",
    "for the first term in eq .",
    "( [ eq : wn - contribution-1 ] ) , this implies that we must first compute the shuffle products in the bracket .",
    "secondly , we have to replace the commutator letter @xmath744 $ ] by @xmath745 and finally , we must compute all remaining shuffle products to obtain the respective terms in the unfiltered word @xmath737 * * ( * * eq .",
    "( [ eq : wn - contribution-1])*)*.    let us calculate the unfiltered @xmath737 .",
    "we are only interested in words that contribute to @xmath733}$ ] .",
    "hence , when computing the shuffle products in eq .",
    "( [ eq : wn - contribution-1 ] ) , we shift all words with @xmath600 letters to the @xmath503 terms . in the following ,",
    "it is convenient to define the words @xmath746    \\underbrace{a_1\\ldots a_1}_{q\\times}\\end{aligned}\\ ] ] for @xmath747 .",
    "we note that @xmath748 = & p !",
    "\\textbf{(}a(p+1,0 ) - a(0,p+1)\\textbf { ) } + \\ldots , \\\\    a_1^{\\shuffle_\\theta p}\\shuffle_\\theta a(q , 0 ) = & p!\\sum_{r = 0}^{p }    \\begin{pmatrix }      q + r \\\\ r    \\end{pmatrix } a(q + r , p - r ) + \\ldots,\\\\    a_1^{\\shuffle_\\theta p}\\shuffle_\\theta a(0 , q ) = & p!\\sum_{r =      0}^{p }    \\begin{pmatrix }      q + r \\\\",
    "r    \\end{pmatrix } a ( p -    r , q + r ) + \\ldots , \\\\",
    "a_1^{\\shuffle_\\theta p } \\shuffle_\\theta a_2 = & p ! \\sum_{q = 0}^{p }    a(q , p - q ) + \\ldots\\end{aligned}\\ ] ] the dots collect all words that consist of other letters than one @xmath502 and some @xmath501 . using these relations in eq .",
    "( [ eq : wn - contribution-1 ] ) , we obtain @xmath749 } ( t_k - 3 ) ! ( n-1-t_k ) !",
    "\\sum_{p=0}^{n-1-t_k }    \\begin{pmatrix }      t_k - 2 + p \\\\",
    "p    \\end{pmatrix } \\nonumber\\\\    & \\times \\textbf { ( } a(t_k - 1 + p , n - 1 - t_k - p ) - a ( n - t_k - p , t_k -      2 + p )    \\textbf{)}\\nonumber\\\\    & + \\sum_{k\\geq 1 } \\sum_{\\sum_i t_i = n-1 } k    \\begin{bmatrix }      t_1    \\end{bmatrix }    \\ldots    \\begin{bmatrix }      t_{k-1 }    \\end{bmatrix }    \\begin{bmatrix }      t_k-2 & 1    \\end{bmatrix } ( n-3 ) !",
    "\\sum_{p=0}^{n-3 } a(p + 1 , n - 3 - p ) \\nonumber\\\\    & + \\sum_{k\\geq1 }    \\begin{pmatrix }      2 + k \\\\ k     \\end{pmatrix } \\sum_{\\sum_i t_i = n-2 }    \\begin{bmatrix }      t_1    \\end{bmatrix }    \\ldots    \\begin{bmatrix }      t_k    \\end{bmatrix }    ( n-2 ) !",
    "a(0,n-2 ) + \\ldots\\end{aligned}\\ ] ]    @xmath737 is still unfiltered .",
    "now , the filtration algorithm brings the words @xmath750 into lexicographical order using the concatenation commutator . in our case",
    ", @xmath502 is sorted to the right , @xmath751 in this section , a filtration algorithm that sorts @xmath502 to the left would be more convenient because the last term in eq .",
    "( [ eq : wn - contribution-2 ] ) would already be given in lexicographical order . since the resulting filtered words must not depend on the lexicographical order of letters , we now assume throughout this section that we work with a filtration algorithm that sorts @xmath502 to the left , @xmath752 this change does not effect the final generating functions @xmath733}$ ] and the respective generated matrices .",
    "inserting eq .",
    "( [ eq : sorting ] ) into eq .",
    "( [ eq : wn - contribution-2 ] ) yields @xmath753 } ( t_k - 3 ) ! ( n-1-t_k ) !",
    "\\sum_{p=0}^{n-1-t_k }    \\begin{pmatrix }      t_k - 2 + p \\\\",
    "p    \\end{pmatrix } \\nonumber\\\\    & \\times \\left ( \\sum_{q=0}^{t_k - 2 + p}b(t_k - 2 + p - q , n - 1 -      t_k - p + q ) - \\sum_{q=0}^{n - t_k - p - 1}b ( n - t_k - p - 1 -      q , t_k - 2 + p + q )    \\right)\\nonumber\\\\    & + \\sum_{k\\geq 1 } \\sum_{\\sum_i t_i = n-1 } k    \\begin{bmatrix }      t_1    \\end{bmatrix }    \\ldots    \\begin{bmatrix }      t_{k-1 }    \\end{bmatrix }    \\begin{bmatrix }      t_k-2 & 1    \\end{bmatrix } ( n-3 ) !",
    "\\sum_{q = 0}^{p}b(p - q , n -    3 - p + q ) \\nonumber\\\\    & + \\sum_{k\\geq 1 } \\sum_{\\sum_i t_i = n-1 } k    \\begin{bmatrix }      t_1    \\end{bmatrix }    \\ldots    \\begin{bmatrix }      t_{k-1 }    \\end{bmatrix }    \\begin{bmatrix }      t_k-2 & 1    \\end{bmatrix } ( n-2 ) !",
    "a(0 , n - 2 ) \\nonumber\\\\    & + \\sum_{k\\geq1 }    \\begin{pmatrix }      2 + k \\\\",
    "k     \\end{pmatrix } \\sum_{\\sum_i t_i = n-2 }    \\begin{bmatrix }      t_1    \\end{bmatrix }    \\ldots    \\begin{bmatrix }      t_k    \\end{bmatrix }    ( n-2 ) !",
    "a(0,n-2 ) + \\ldots\\end{aligned}\\ ] ] the last two terms together are equal to @xmath754 , see section [ sec : bullet2 ] .",
    "step 2 of the filtration loop in section [ sec : pres - filtr - algor ] computes @xmath755 and brings all the words @xmath756 on the rhs into lexicographical order using eq .",
    "( [ eq : sorting ] ) .",
    "hence , in eq .",
    "( [ eq : wn - contribution-3 ] ) , @xmath757 is replaced by @xmath758 thus , after step 2 of the respective filtration loop , @xmath759 } ( t_k - 3 ) ! ( n-1-t_k ) !",
    "\\sum_{p=0}^{n-1-t_k }    \\begin{pmatrix }      t_k - 2 + p \\\\",
    "p    \\end{pmatrix } \\nonumber\\\\    & \\times \\left ( \\sum_{q=0}^{t_k - 2 + p}b(t_k - 2 + p - q , n - 1 -      t_k - p + q ) - \\sum_{q=0}^{n - t_k - p - 1}b ( n - t_k - p - 1 -      q , t_k - 2 + p + q )    \\right)\\nonumber\\\\    & + \\sum_{k\\geq 1 } \\sum_{\\sum_i t_i = n-1 } k    \\begin{bmatrix }      t_1    \\end{bmatrix }    \\ldots    \\begin{bmatrix }      t_{k-1 }    \\end{bmatrix }    \\begin{bmatrix }      t_k-2 & 1    \\end{bmatrix } ( n-3 ) ! \\sum_{p=0}^{n-3 } \\sum_{q = 0}^{p}b(p - q ,",
    "n -    3 - p + q ) \\nonumber\\\\    & +    \\begin{bmatrix }      n-2 & 1    \\end{bmatrix } a_1^{\\shuffle_\\theta n-2}\\shuffle_\\theta a_2 -    \\frac{1}{n-1 }    \\begin{bmatrix }      n-2 & 1    \\end{bmatrix } \\sum_{p=1}^{n-2}\\sum_{q = 0}^{p-1 } b(p-1-q , n-2-p+q ) +    \\ldots\\end{aligned}\\ ] ] note that we do not take the filtered term @xmath760 into account because it does not contribute to the term in eq .",
    "( [ eq : cterm ] ) .",
    "we now proceed as in the derivation of the master differential equation in section [ sec : deriv - mast - equat ] .",
    "we denote by @xmath761}$ ] the number of words on the rhs of eq .",
    "( [ eq : wn - contribution-4 ] ) with @xmath743 letters @xmath501 and one letter @xmath744 $ ] . as in section",
    "[ sec : notation ] , @xmath761}$ ] is related to the indexed matrix @xmath741}$ ] by @xmath762 } = \\frac{1}{(n-2 ) ! }    \\begin{bmatrix }      n-3    \\end{bmatrix }    _ { [ a_1,a_2]}.\\ ] ] we obtain @xmath761}$ ] by setting all words @xmath763 on the rhs of eq .",
    "( [ eq : wn - contribution-4 ] ) to 1 , hence @xmath764 } = & \\sum_{k\\geq 1 } \\sum_{\\sum_i t_i = n-1 } \\!\\!\\!\\!\\!\\!\\ ! k    \\begin{bmatrix }      t_1    \\end{bmatrix }    \\ldots    \\begin{bmatrix }      t_{k-1 }    \\end{bmatrix}\\ !    \\begin{bmatrix }      t_k - 3    \\end{bmatrix }    _ { [ a_1,a_2 ] } ( t_k - 3 ) ! ( n-1-t_k ) ! \\!\\!\\ !    \\sum_{p=0}^{n-1-t_k}\\!\\ !    \\begin{pmatrix }      t_k - 2 + p \\\\",
    "p    \\end{pmatrix } \\ ! ( 2t_k + 2p - n - 1)\\nonumber\\\\    & + \\sum_{k\\geq 1 } \\sum_{\\sum_i t_i = n-1 } \\frac{(n-1)!}{2 } k    \\begin{bmatrix }      t_1    \\end{bmatrix }    \\ldots    \\begin{bmatrix }      t_{k-1 }    \\end{bmatrix }    \\begin{bmatrix }      t_k-2 & 1    \\end{bmatrix }   - \\frac{n-2}{2 }    \\begin{bmatrix }      n-2 & 1    \\end{bmatrix}.\\end{aligned}\\ ] ] standard combinatorial calculation yields @xmath765 furthermore , we find @xmath766 from eq .",
    "( [ eq : curly - square-2 ] ) .",
    "we divide eq .",
    "( [ eq : wn - contribution-5 ] ) by @xmath767 and insert eq .",
    "( [ eq : curly - square-4 ] ) on the lhs .",
    "this results in @xmath768 } = & \\sum_{k\\geq 1 } \\sum_{\\sum_i t_i =      n-1 } k    \\begin{bmatrix }      t_1    \\end{bmatrix }    \\ldots    \\begin{bmatrix }      t_{k-1 }    \\end{bmatrix }    \\frac{1}{t_k(t_k-1 ) }    \\begin{bmatrix }      t_k - 3    \\end{bmatrix }    _ { [ a_1,a_2 ] } \\nonumber\\\\    & + \\sum_{k\\geq 1 } \\sum_{\\sum_i t_i = n-1 } \\frac{1}{2 } k    \\begin{bmatrix }      t_1    \\end{bmatrix }    \\ldots    \\begin{bmatrix }      t_{k-1 }    \\end{bmatrix }    \\begin{bmatrix }      t_k-2 & 1    \\end{bmatrix } - \\frac{n-2}{2 }    \\begin{bmatrix }      n-2 & 1    \\end{bmatrix}.\\end{aligned}\\ ] ] finally , we multiply with @xmath769 and sum over all @xmath770 .",
    "this will give us @xmath771 } \\mathrm{d}z$ ] on the lhs with zero integration constant .",
    "on the rhs , we obtain @xmath772 } \\mathrm{d}z \\;=\\ ; &    \\sum_{n=0}^\\infty \\bigg (     \\sum_{k\\geq 1 } \\sum_{\\sum_i t_i = n-1 } k    \\begin{bmatrix }      t_1    \\end{bmatrix }    z^{t_1 } \\ldots    \\begin{bmatrix }      t_{k-1 }    \\end{bmatrix }    z^{t_{k-1 } }    \\frac{1}{t_k(t_k-1 ) }    \\begin{bmatrix }      t_k - 3    \\end{bmatrix }    _ { [ a_1,a_2]}z^{t_k } \\nonumber\\\\    & + \\sum_{k\\geq 1 } \\sum_{\\sum_i t_i = n-1 } \\frac{z}{2 } k    \\begin{bmatrix }      t_1    \\end{bmatrix }    z^{t_1}\\ldots    \\begin{bmatrix }      t_{k-1 }    \\end{bmatrix }    z^{t_{k-1 } }    \\begin{bmatrix }      t_k-2 & 1    \\end{bmatrix } z^{t_k - 1 } -    \\frac{z^2}{2}\\frac{\\mathrm{d}}{\\mathrm{d}z}\\frac{1}{z }    \\begin{bmatrix }      n-2 & 1    \\end{bmatrix}z^{n-1 } \\bigg ) \\nonumber\\\\   \\ ; = \\ ; & \\sum_{k\\geq 1 } k \\begin{bmatrix}\\bullet\\end{bmatrix}^{k-1 } \\int    \\left (      \\int \\begin{bmatrix}\\bullet\\end{bmatrix}_{[a_1,a_2 ] } \\mathrm{d}z    \\right ) \\mathrm{d}z + \\sum_{k\\geq 1 } \\frac{z}{2 } k    \\begin{bmatrix}\\bullet\\end{bmatrix}^{k-1 }    \\begin{bmatrix }      \\bullet & 1    \\end{bmatrix } -    \\frac{z^2}{2}\\frac{\\mathrm{d}}{\\mathrm{d}z}\\frac{1}{z }    \\begin{bmatrix }      \\bullet & 1    \\end{bmatrix } \\nonumber\\\\   \\ ;   = \\ ; & \\frac{1}{1 - 2z}\\int \\left (      \\int \\begin{bmatrix}\\bullet\\end{bmatrix}_{[a_1,a_2 ] } \\mathrm{d}z    \\right ) \\mathrm{d}z + \\frac{1}{4\\sqrt{1 - 2z } } -    \\frac{1}{4\\sqrt{1 - 2z}^3 } + \\frac{1}{2\\sqrt{1 - 2z}}\\log \\left (      \\frac{1}{\\sqrt{1 - 2z } } \\right),\\end{aligned}\\ ] ] where we used the explicit form of the generating functions @xmath591 and @xmath640 in the last line * * ( * * eqs .",
    "( [ eq : bullet1],[eq : bullet2])*)*. again , the integration constants are zero .",
    "( [ eq : dgl - commutator ] ) is an ordinary first order differential equation for @xmath773 }    \\mathrm{d}z \\right ) \\mathrm{d}z$ ] with the same homogeneous part as in the case of index - free generating functions , see section [ sec : deriv - mast - equat ] .",
    "we can thus , use eq .",
    "( [ eq : generating - function - final ] ) to obtain @xmath774 }      \\mathrm{d}z \\right )     \\mathrm{d}z = -\\frac{\\sqrt{1 - 2z}}{4 } + \\frac{1}{4\\sqrt{1 - 2z } } -    \\frac{\\sqrt{1 - 2z}}{4}\\log \\left ( \\frac{1}{\\sqrt{1 - 2z } } \\right ) -    \\frac{1}{4\\sqrt{1 - 2z}}\\log \\left ( \\frac{1}{\\sqrt{1 - 2z } } \\right).\\ ] ] the second derivative finally results in the generating function @xmath775 } =    \\frac{1}{4\\sqrt{1 - 2z}^3 } -     \\frac{1}{4\\sqrt{1 - 2z}^5 } + \\frac{1}{4\\sqrt{1 - 2z}^3}\\log \\left (      \\frac{1}{\\sqrt{1 - 2z } } \\right ) - \\frac{3}{4\\sqrt{1 - 2z}^5}\\log    \\left ( \\frac{1}{\\sqrt{1 - 2z } } \\right).\\ ] ]      in this section , we derive the generating function @xmath734}$ ] for the matrices @xmath777}$ ] .",
    "these belong to the shuffle products @xmath778 $ ] in the filtered word @xmath737 .    in full analogy to the previous section",
    ", we derive an equivalent to eq .",
    "( [ eq : wn - contribution-5 ] ) . in the partly filtered @xmath737 ,",
    "we denote the number of words with @xmath743 letters @xmath501 and one letter @xmath779 $ ] by @xmath780 } = ( n-2 ) !",
    "\\begin{bmatrix }      n-3    \\end{bmatrix }    _ { [ a_1,\\theta(a_1,a_1)]}.\\ ] ] we then find @xmath781 } = & \\sum_{k\\geq 1 } \\sum_{\\sum_i t_i =      n-1 } k    \\begin{bmatrix }      t_1    \\end{bmatrix }    \\ldots    \\begin{bmatrix }      t_{k-1 }    \\end{bmatrix }    \\begin{bmatrix }      t_k - 3    \\end{bmatrix }    _ { [ a_1,\\theta(a_1,a_1 ) ] }    ( t_k - 3 ) ! ( n-1-t_k ) !",
    "\\sum_{p=0}^{n-1-t_k }",
    "\\begin{pmatrix }      t_k - 2 + p \\\\",
    "p    \\end{pmatrix } \\nonumber\\\\    & \\times ( 2t_k + 2p",
    "- n - 1 ) + \\sum_{k\\geq 1 } \\sum_{\\sum_i t_i =      n-1 } \\frac{(n-1)!}{2 } k    \\begin{bmatrix }      t_1    \\end{bmatrix }    \\ldots    \\begin{bmatrix }      t_{k-1 }    \\end{bmatrix }    \\begin{bmatrix }      t_k-2 \\\\ 2    \\end{bmatrix } \\nonumber\\\\    & + \\sum_{k\\geq 1 } \\sum_{\\sum_i t_i = n-1 }    \\mathcal{s }    \\left (      \\begin{bmatrix }        n-3 \\\\ 2      \\end{bmatrix } ,      \\begin{bmatrix }        n-1      \\end{bmatrix }    \\right)\\frac{(n-1)!}{2 }    \\begin{bmatrix }      t_1    \\end{bmatrix }    \\ldots    \\begin{bmatrix }      t_k    \\end{bmatrix }    -    \\frac{n-2}{2 }    \\begin{bmatrix }      n-2 \\\\ 2    \\end{bmatrix}.\\end{aligned}\\ ] ] compared to eq .",
    "( [ eq : wn - contribution-5 ] ) , we made the obvious replacements @xmath782 } \\to    \\begin{bmatrix }      t_k - 3    \\end{bmatrix }    _ { [ a_1,\\theta(a_1,a_1 ) ] } ,    \\qquad \\begin{bmatrix }       t_k-2 & 1    \\end{bmatrix } \\to \\begin{bmatrix } t_k-2 \\\\ 2    \\end{bmatrix } , \\qquad \\begin{bmatrix } n-2 & 1    \\end{bmatrix } \\to    \\begin{bmatrix }      n-2 \\\\ 2    \\end{bmatrix}.\\ ] ] the only new term is the third one .",
    "it arises because on the rhs of eq .",
    "( [ eq : wn - contribution-1 ] ) , one must also consider the term @xmath783 and calculate @xmath784 we divide eq .",
    "( [ eq : wn - contribution-6 ] ) by @xmath767 and use eqs .",
    "( [ eq : curly - square-2],[eq : combinatorics],[eq : curly - square-5 ] ) to obtain @xmath785 } = & \\sum_{k\\geq 1 }    \\sum_{\\sum_i t_i = n-1 } k    \\begin{bmatrix }      t_1    \\end{bmatrix }    \\ldots    \\begin{bmatrix }      t_{k-1 }    \\end{bmatrix }    \\frac{1}{t_k(t_k-1 ) }    \\begin{bmatrix }      t_k - 3    \\end{bmatrix }    _ { [ a_1,\\theta(a_1,a_1 ) ] } \\nonumber\\\\    + & \\sum_{k\\geq 1 } \\sum_{\\sum_i t_i = n-1 } \\frac{1}{2 } k    \\begin{bmatrix }      t_1    \\end{bmatrix }    \\ldots    \\begin{bmatrix }      t_{k-1 }    \\end{bmatrix }    \\begin{bmatrix }      t_k-2 \\\\ 2    \\end{bmatrix}\\nonumber\\\\    + & \\sum_{k\\geq 1 }",
    "\\sum_{\\sum_i t_i = n-1 } \\mathcal{s } \\left (      \\begin{bmatrix }        n-3 \\\\ 2      \\end{bmatrix } ,      \\begin{bmatrix }        n-1      \\end{bmatrix }    \\right)\\frac{1}{2 }    \\begin{bmatrix }      t_1    \\end{bmatrix }    \\ldots    \\begin{bmatrix }      t_k    \\end{bmatrix }    \\nonumber\\\\    - &    \\frac{n-2}{2 }    \\begin{bmatrix }      n-2 \\\\ 2    \\end{bmatrix } - \\frac{n-2}{2 } \\mathcal{s } \\left (      \\begin{bmatrix }        n-2 \\\\ 2      \\end{bmatrix } ,      \\begin{bmatrix }        n      \\end{bmatrix }    \\right )    \\begin{bmatrix }      n    \\end{bmatrix }    .\\end{aligned}\\ ] ]    as in the previous section , we multiply with @xmath769 and sum over all @xmath786 .",
    "with @xmath787 we find @xmath788 }    \\mathrm{d}z = & \\ ,     \\sum_{n=0}^\\infty \\bigg ( \\sum_{k\\geq 1 } \\sum_{\\sum_i t_i = n-1 } k    \\begin{bmatrix }      t_1    \\end{bmatrix }    z^{t_1 } \\ldots    \\begin{bmatrix }      t_{k-1 }    \\end{bmatrix }    z^{t_{k-1 } } \\frac{1}{t_k(t_k-1 ) }    \\begin{bmatrix }      t_k - 3    \\end{bmatrix }    _ { [ a_1,\\theta(a_1,a_1)]}z^{t_k }    \\nonumber\\\\    & + \\sum_{k\\geq 1 } \\sum_{\\sum_i t_i = n-1 } \\frac{z}{2 } k    \\begin{bmatrix }      t_1    \\end{bmatrix }    z^{t_1}\\ldots    \\begin{bmatrix }      t_{k-1 }    \\end{bmatrix }    z^{t_{k-1 } }    \\begin{bmatrix }      t_k-2 \\\\ 2    \\end{bmatrix } z^{t_k - 1 } \\nonumber\\\\    & + \\sum_{k\\geq 1 } \\sum_{\\sum_i t_i = n-1 }    \\frac{z^2}{4}\\frac{\\mathrm{d^2}}{\\mathrm{d}z^2 }    \\begin{bmatrix }      t_1    \\end{bmatrix }    z^{t_1}\\ldots    \\begin{bmatrix }      t_k    \\end{bmatrix }    z^{t_k } -    \\frac{z^2}{2}\\frac{\\mathrm{d}}{\\mathrm{d}z}\\frac{1}{z }    \\begin{bmatrix }      n-2 \\\\ 2    \\end{bmatrix}z^{n-1 } - \\frac{z^2}{4 }    \\frac{\\mathrm{d}^3}{\\mathrm{d}z^3 }    \\begin{bmatrix }      n    \\end{bmatrix }    z^n \\bigg ) \\nonumber\\\\    = & \\ , \\sum_{k\\geq 1 } k \\begin{bmatrix}\\bullet\\end{bmatrix}^{k-1 } \\int    \\left ( \\int      \\begin{bmatrix}\\bullet\\end{bmatrix}_{[a_1,\\theta(a_1,a_1 ) ] }      \\mathrm{d}z \\right ) \\mathrm{d}z + \\sum_{k\\geq 1 } \\frac{z}{2 }    k \\begin{bmatrix}\\bullet\\end{bmatrix}^{k-1 }    \\begin{bmatrix }      \\bullet \\\\ 2    \\end{bmatrix } + \\sum_{k\\geq1 } \\frac{z^2}{4 }    \\frac{\\mathrm{d}^2}{\\mathrm{d}z^2 } \\begin{bmatrix}\\bullet\\end{bmatrix}^k    \\nonumber\\\\     & - \\frac{z^2}{2}\\frac{\\mathrm{d}}{\\mathrm{d}z}\\frac{1}{z }    \\begin{bmatrix }      \\bullet \\\\ 2    \\end{bmatrix } - \\frac{z^2}{4 }    \\frac{\\mathrm{d}^3}{\\mathrm{d}z^3}\\begin{bmatrix}\\bullet\\end{bmatrix }    \\nonumber\\\\     = & \\ , \\frac{1}{1 - 2z}\\int \\left (      \\int \\begin{bmatrix}\\bullet\\end{bmatrix}_{[a_1,\\theta(a_1,a_1 ) ] }      \\mathrm{d}z \\right ) \\mathrm{d}z - \\frac{1}{8\\sqrt{1 - 2z } } +    \\frac{1}{8\\sqrt{1 - 2z}^3 } - \\frac{1}{4\\sqrt{1 - 2z}}\\log \\left (      \\frac{1}{\\sqrt{1 - 2z } } \\right).\\end{aligned}\\ ] ] note that the third and the fifth term on the rhs of the second equation cancel .",
    "this is an interesting incidence . because of eq .",
    "( [ eq : bullet5bullet2 ] ) , the inhomogeneous parts of the differential equations eqs .",
    "( [ eq : dgl - commutator],[eq : dgl - commutator-2 ] ) only differ by a factor of @xmath660 .",
    "we therefore obtain @xmath789 } =    -\\frac{1}{2 }     \\begin{bmatrix}\\bullet\\end{bmatrix}_{[a_1,a_2 ] } =    -\\frac{1}{8\\sqrt{1 - 2z}^3 } +     \\frac{1}{8\\sqrt{1 - 2z}^5 } - \\frac{1}{8\\sqrt{1 - 2z}^3}\\log \\left (      \\frac{1}{\\sqrt{1 - 2z } } \\right ) + \\frac{3}{8\\sqrt{1 - 2z}^5}\\log    \\left ( \\frac{1}{\\sqrt{1 - 2z } } \\right).\\ ] ]      we now demonstrate the power of the generating functions derived in the previous sections : one can write the next - to@xmath45-leading log order as a function of terms up to @xmath315 in the log - expansion * * ( * * eq .",
    "( [ eq : log - expansion])*)*. we will show this for the yukawa fermion propagator * * ( * * eq .",
    "( [ eq : dse - yuk ] ) * ) * up to @xmath790 using the explicit generating functions obtained in the previous section .",
    "they are also collected in the second column of table [ tab : results ] .",
    "we discuss our results for @xmath791 separately .",
    "consider the filtered solution @xmath792 of the dse eq .",
    "( [ eq : dse - yuk - words ] ) , see eq .",
    "( [ eq : dse - solution ] ) .",
    "the leading log order is @xmath793 contributing terms in the filtered words @xmath217 map to @xmath794 under renormalized feynman rules since the leading log order is @xmath795 .",
    "these are only the full shuffle products @xmath796 * * ( * * see section [ sec : renormalized - feynman - rules ] that @xmath797**)**. thus , @xmath798 see the first row of table [ tab : yukawa ] for the explicit multiplicities . acting with renormalized feynman rules @xmath799 on both sides results in @xmath800    we write this equation in terms of feynman graphs",
    ". therefore , set @xmath801 .",
    "we find that @xmath802 on the rhs using the properties of the hopf algebra morphism @xmath803 in eqs .",
    "( [ eq : morphism - begin]-[eq : morphism - end ] ) . on the lhs , @xmath804 , which is the full green function of the fermion propagator .",
    "hence , eq .  ( [ eq : psiw - ll ] ) yields @xmath805 using eq .",
    "( [ eq : bullet1 ] ) for the generating function @xmath591 , we finally obtain @xmath806 without this result , the computation of @xmath807 would be quite more complicated , even impossible .",
    "computing @xmath808 the ordinary way includes to calculate an infinite number of feynman integrals with any number of loops .",
    "for example , the graphs @xmath809 contribute to @xmath808 . using our formula in eq .",
    "( [ eq : gr - ll2 ] ) , _ we only need to compute the one - loop feynman integral @xmath810 to derive the full leading log order green function @xmath808 . _",
    "the next - to - leading log order of eq .",
    "( [ eq : dse - solution ] ) is @xmath811 contributing terms of the filtered words @xmath217 map to @xmath812 under renormalized feynman rules since the next - to - leading log order is @xmath813 .",
    "these are the full shuffle products @xmath814 and @xmath815 . indeed , renormalized feynman rules are character - like . @xmath799 acting on a full shuffle product of @xmath816 letters is @xmath817 in the log - expansion , see section [ sec : renormalized - feynman - rules ] .",
    "thus , @xmath818 acting with renormalized feynman rules @xmath799 on both sides results in @xmath819    again , we write @xmath801 and obtain the full next - to - leading log order renormalized green function of the yukawa fermion propagator on the lhs . on the rhs ,",
    "the only subtle point is that @xmath820 has no single corresponding feynman graph .",
    "however , we find the period @xmath821 thus , @xmath822 using the generating functions in eqs .",
    "( [ eq : bullet2],[eq : bullet5 ] ) , we finally derive @xmath823 this is an enormous simplification : _ we only need to compute the one - loop feynman integral @xmath810 as well as the two - loop integrals @xmath824 and @xmath825 to calculate the full next - to - leading log order green function @xmath826 . _      the next - to - next - to - leading log order of eq .",
    "( [ eq : dse - solution ] ) is @xmath827 contributing terms of the filtered words @xmath217 must map to @xmath828 under renormalized feynman rules since the next - next - to - leading log order is @xmath829 .",
    "these are the full shuffle products @xmath830 , \\qquad    a_1^{\\shuffle_\\theta\\ , ( n-3)}\\shuffle_\\theta [ a_1,\\theta(a_1,a_1)].\\end{gathered}\\ ] ] > from eq .",
    "( [ eq : w - nnll ] ) , @xmath831 } ( \\alpha a_1)^{\\shuffle_\\theta\\ ,      ( n-3)}\\shuffle_\\theta \\left(\\alpha^3 [ a_1,a_2]\\right ) +    \\begin{bmatrix }      n-3    \\end{bmatrix }    _ { [ a_1,\\theta(a_1,a_1 ) ] } ( \\alpha a_1)^{\\shuffle_\\theta\\ ,      ( n-3)}\\shuffle_\\theta \\left ( \\alpha^3 [ a_1,\\theta(a_1,a_1 ) ]    \\right)\\!\\ ! \\bigg).\\end{aligned}\\ ] ] acting with renormalized feynman rules @xmath799 on both sides results in @xmath832 } \\alpha^3 \\psi_r (    [ a_1,a_2 ] ) +     \\begin{bmatrix}\\bullet\\end{bmatrix}_{[a_1,\\theta(a_1,a_1 ) ] } \\alpha^3    \\psi_r (     [ a_1,\\theta(a_1,a_1 ) ] ) \\bigg)\\bigg|_{z \\to \\alpha \\psi_r(a_1)}.\\end{aligned}\\ ] ]    we write @xmath801 and obtain the full next - to - next - to - leading log order green function on the lhs . on the rhs , for example @xmath833 .",
    "however , the letters @xmath834 , @xmath513 , @xmath744 $ ] , @xmath779 $ ] have no obvious corresponding feynman graphs . we therefore write @xmath835 = & \\ ,",
    "b_+^{a_1}(a_2 ) - b_+^{a_2}(a_1 ) , \\\\    [ a_1 , \\theta(a_1,a_1 ) ] = & \\ , 2b_+^{a_1 } \\left ( a_1 \\shuffle_\\theta      a_1 \\right ) - b_+^{a_1}\\left(b_+^{a_1}\\left(a_1\\right)\\right ) +    \\frac{1}{2 } a_1 \\shuffle_\\theta \\theta(a_1,a_1 ) - \\frac{1}{2 }    a_1\\shuffle_\\theta a_1 \\shuffle_\\theta a_1.\\end{aligned}\\ ] ] now , we act with @xmath801 and use eq .",
    "( [ eq : psitheta1 ] ) .",
    "we thus , find the periods @xmath836 ) = & \\ , \\phi_r\\left(b_+^{\\gamma_1}(\\gamma_2)\\right ) -    \\phi_r\\left(b_+^{\\gamma_2}(\\gamma_1)\\right ) , \\\\",
    "\\psi_r([a_1 , \\theta(a_1,a_1 ) ] ) = & \\ , 2\\phi_r \\left ( b_+^{\\gamma_1 }      \\left ( \\gamma_1 \\cup \\gamma_1 \\right ) \\right ) - \\phi_r \\left (      b_+^{\\gamma_1}\\left(b_+^{\\gamma_1}\\left(\\gamma_1\\right)\\right )    \\right ) -    \\phi_r(\\gamma_1)\\phi_r\\left(b_+^{\\gamma_1}\\left(\\gamma_1\\right)\\right).\\end{aligned}\\ ] ] inserting these identities together with eq.([eq : psitheta1 ] ) into eq .",
    "( [ eq : psiw - nnll ] ) , we finally obtain the next - to - next - to - leading log order green function , @xmath837 } \\left (      \\phi_r\\left(b_+^{\\gamma_1}(\\gamma_2)\\right ) -      \\phi_r\\left(b_+^{\\gamma_2}(\\gamma_1)\\right )    \\right ) \\nonumber\\\\    & + \\ , \\begin{bmatrix}\\bullet\\end{bmatrix}_{[a_1,\\theta(a_1,a_1 ) ] }    \\bigg ( 2\\phi_r       \\left (         b_+^{\\gamma_1 } \\left ( \\gamma_1 \\cup \\gamma_1 \\right )       \\right ) -      \\phi_r       \\left (        b_+^{\\gamma_1}\\left(b_+^{\\gamma_1}\\left(\\gamma_1\\right)\\right )      \\right ) \\nonumber\\\\       & - \\phi_r(\\gamma_1 ) \\phi_r      \\left (        b_+^{\\gamma_1}\\left(\\gamma_1\\right )      \\right )    \\bigg )    \\bigg)\\bigg|_{z \\to \\alpha\\phi_r(\\gamma_1)}.\\end{aligned}\\ ] ] we refer to the second column of table [ tab : results ] for the explicit expressions of the generating functions .",
    "_ this shows the explicit dependence of the full next - to - next - to - leading log order green function @xmath838 on the feynman graphs @xmath839 these are at most , three - loop graphs . _",
    "we relate the next - to@xmath45-leading log order to the first @xmath16 terms of perturbation theory in the qed photon self - energy green function @xmath840 .",
    "there are two differences to the yukawa propagator green function . *",
    "* ( * * consider the dses eqs .",
    "( [ eq : dse - solution - yuk],[eq : dse - solution - qed ] ) .",
    "first , there are no insertion points in the one - loop primitive propagator graph .",
    "the sum in eq .",
    "( [ eq : dse - solution - qed ] ) starts with @xmath618 rather than @xmath617 in eq .",
    "( [ eq : dse - solution - yuk ] ) .",
    "this will simplify the following calculations drastically .",
    "secondly , the term @xmath841 in eq .",
    "( [ eq : dse - solution - yuk ] ) is replaced by @xmath842 in eq .",
    "( [ eq : dse - solution - qed ] ) .",
    "this will change the structure @xmath843 in the generating functions of yukawa theory to @xmath844 in qed .    in the first part",
    ", we treat index - free matrices .",
    "the corresponding shuffle products do not contain @xmath222$]-letters .",
    "we repeat the same steps to derive the master differential equation as in yukawa theory .",
    "the two mentioned differences in the respective dses eqs .",
    "( [ eq : dse - solution - yuk],[eq : dse - solution - qed ] ) change eq .",
    "( [ eq : master ] ) to @xmath845 this is an ordinary equation for @xmath583 and no differential equation because the sum starts with @xmath618 .",
    "we therefore call eq .",
    "( [ eq : masterqed ] ) _ master equation_. we must integrate the master equation to obtain @xmath554 such that @xmath846 * * ( * * eq .  ( [ eq : initial - condition])*)*. eqs .  ( [ eq : def - generating - function],[eq : matrices - of - generating - functions ] ) remain valid , @xmath847    consider for example the case @xmath586 .",
    "the matrices @xmath848 belong to the shuffle products @xmath849 . since there is no @xmath850",
    ", we already know that @xmath851 for @xmath852 . in the master equation ,",
    "all terms vanish except for @xmath570 . integrating the remaining equation @xmath853 yields @xmath854 which generates the matrices @xmath855 as expected * * ( * * see eq .",
    "( [ eq : def - generating - function - copy])*)*.    in the following , we derive the generating functions up to next - to - next - to - leading log order for the qed photon self - energy . as in section",
    "[ sec : relat - betw - next ] , we consider the cases @xmath599 and @xmath643 separately . in section [ sec : commutators-1 ] , we treat indexed matrices @xmath119 .",
    "index - free matrices with @xmath599 belong to shuffle products without @xmath600- and @xmath222$]-letters . in full analogy to the yukawa propagator , only one row in @xmath554 reduces the master equation to @xmath856 where @xmath857      let @xmath613 . the sum in eq .",
    "( [ eq : masterqed - special ] ) is non - zero only for @xmath859",
    ". then , @xmath620 and @xmath860 @xmath587 .",
    "we obtain @xmath861      let @xmath863 . the sum in eq .",
    "( [ eq : masterqed - special ] ) is non - zero only for @xmath864",
    ". then , @xmath629 and @xmath860 @xmath587 .",
    "we obtain @xmath865 the term @xmath866 is the integration constant such that @xmath867 .",
    "let @xmath869 .",
    "the sum in eq .",
    "( [ eq : masterqed - special ] ) is non - zero only for @xmath859",
    ". then , @xmath870 .",
    "( [ eq : starstarqed ] ) implies that for one @xmath871 , @xmath872 and for all other @xmath463 , @xmath873 .",
    "we obtain @xmath874      we now treat full shuffle products that contain @xmath600-letters but no @xmath222$]-letters . here , we have to proceed from the master equation eq .",
    "( [ eq : masterqed ] ) .",
    "the following generating functions simplify to zero , @xmath875 the reason is that the sum in the master equation starts with @xmath618 .",
    "there is another simplification due to the missing @xmath877-term .",
    "if the first row of a matrix @xmath119 is of the form @xmath878 with arbitrary @xmath879 , then the second ( and more complicated ) term on the rhs of the master equation eq .",
    "( [ eq : masterqed ] ) yields zero .",
    "for example for the next - to - next - to - leading log generating function @xmath880 , eq .",
    "( [ eq : masterqed ] ) reduces to @xmath881 integration with suitable initial conditions and using eq .",
    "( [ eq : bulletqed2 ] ) result in @xmath882      for @xmath884 , the master equation eq .",
    "( [ eq : masterqed ] ) reduces to @xmath885 in the last line , we used eqs .",
    "( [ eq : bulletqed1],[eq : bulletqed2 ] ) .",
    "we integrate with suitable initial conditions and obtain @xmath886      as in yukawa theory , we only calculate the generating functions @xmath733}$ ] and @xmath734}$ ] that belong to the shuffle products @xmath887 $ ] and @xmath888 $ ] .",
    "we find @xmath889 } = 0\\ ] ] because the sum in eq .",
    "( [ eq : dse - solution - qed ] ) starts with @xmath714 .    for the generating function @xmath733}$ ] , eq .",
    "( [ eq : dgl - commutator ] ) reduces to @xmath890 } \\mathrm{d}z = -    \\frac{z^2}{2}\\frac{\\mathrm{d}}{\\mathrm{d}z}\\frac{1}{z }    \\begin{bmatrix }      \\bullet & 1    \\end{bmatrix}\\ ] ] because in eq .",
    "( [ eq : wn - contribution-1 ] ) , the first two terms are missing . here",
    ", the derivation of the generating function is even simpler than in all previous cases .",
    "one only needs to differentiate instead of integrating or solving a differential equation .",
    "we differentiate eq .",
    "( [ eq : integration - commutator ] ) and use the explicit form of @xmath640 in eq .",
    "( [ eq : bulletqed2 ] ) .",
    "this results in @xmath891 } = \\frac{1}{2(1-z ) } -    \\frac{1}{2(1-z)^2}.\\ ] ]      we repeat the steps in section [ sec : results ] to write the next - to@xmath45-leading log order as a function of terms up to @xmath892 in the log - expansion * * ( * * eq .  (",
    "[ eq : log - expansion])*)*. we show this up to @xmath790 and use eqs .",
    "( [ eq : gr - ll1],[eq : gr - nll1],[eq : gr - nnll1 ] ) , which are universally valid ( in the qed case below several terms vanish ) : @xmath893 } \\left (      \\phi_r\\left(b_+^{\\gamma_1}(\\gamma_2)\\right ) -      \\phi_r\\left(b_+^{\\gamma_2}(\\gamma_1)\\right )    \\right ) \\nonumber\\\\    & + \\ , \\begin{bmatrix}\\bullet\\end{bmatrix}_{[a_1,\\theta(a_1,a_1 ) ] }    \\bigg ( 2\\phi_r \\left ( b_+^{\\gamma_1 } \\left ( \\gamma_1 \\cup \\gamma_1",
    "\\right ) \\right ) - \\phi_r \\left (      b_+^{\\gamma_1}\\left(b_+^{\\gamma_1}\\left(\\gamma_1\\right)\\right )",
    "\\right ) \\nonumber\\\\    & -    \\phi_r(\\gamma_1)\\phi_r\\left(b_+^{\\gamma_1}\\left(\\gamma_1\\right)\\right )    \\bigg ) \\bigg)\\bigg|_{z \\to \\alpha\\phi_r(\\gamma_1)}.\\end{aligned}\\ ] ] for the leading log and next - to - leading log expansions , we use the explicit generating functions in the third column of table [ tab : results ] . for the next - to - next - to - leading log order",
    ", we only discard the zero functions .",
    "thus , we finally obtain @xmath894 } \\left (      \\phi_r\\left(b_+^{\\gamma_1}(\\gamma_2)\\right ) -      \\phi_r\\left(b_+^{\\gamma_2}(\\gamma_1)\\right ) \\right )    \\bigg)\\bigg|_{z \\to \\alpha\\phi_r(\\gamma_1)}.\\end{aligned}\\ ] ] see the third column of table [ tab : results ] for the remaining generating functions .",
    "we list some multiplicities @xmath119 that are generated by the generating functions obtained so far , see table [ tab : results ] .",
    "we treat the yukawa fermion propagator and the qed photon self - energy separately .",
    "if sequences are known , we say so explicitly and refer to @xcite .",
    "the generating functions that are necessary to simplify the log - expansion of the yukawa fermion propagator up to next - to - next - to - leading log order are collected in the second column of table [ tab : results ] .",
    "some of the corresponding multiplicities are collected in table [ tab : yukawa ] .",
    "@xmath591 generates the exponential sequence of double factorial odd numbers a001147 , @xmath895    furthermore , @xmath640 generates the exponential series for the scaled sums of odd reciprocals a004041 .",
    "the formula is @xmath896 we finally find @xmath897 ( exponential sequence a001879 ) . as far as we are concerned , there are no known sequences for the other rationals in table [ tab : yukawa ] .",
    "c|cccccccc & 0 & 1 & 2 & 3 & 4 & 5 +   + @xmath898 & 0 & 1 & @xmath899 & @xmath899 & @xmath900 & @xmath901 + @xmath902 & 1 & 2 & @xmath903 & @xmath904 & @xmath905 & @xmath906 + @xmath907 & @xmath908 & @xmath866 & @xmath909 & @xmath910 & @xmath911 & @xmath912 + @xmath913 & 1 & 3 & @xmath914 & @xmath915 & @xmath916 & @xmath917 + @xmath918 & @xmath919 & @xmath920 & @xmath921 & @xmath922 & @xmath923 & @xmath924 + @xmath925 & @xmath899 & @xmath926 & @xmath927 & @xmath928 & @xmath929 & @xmath930 + @xmath931 & @xmath932 & @xmath933 & @xmath934 & @xmath935 & @xmath936 & @xmath937 + @xmath938 & @xmath939 & @xmath940 & @xmath941 & @xmath942 & @xmath943 & @xmath944 + @xmath945 & @xmath946 & @xmath947 & @xmath948 & @xmath949 & @xmath950 & @xmath951 + @xmath952}$ ] & @xmath866 & @xmath953 & @xmath954 & @xmath955 & @xmath956 & @xmath957 + @xmath958}$ ] & @xmath899 & @xmath959 & @xmath960 & @xmath961 & @xmath962 & @xmath963 +      the generating functions that are necessary to simplify the log - expansion of the photon self - energy green function up to next - to - next - to - leading log order are given in the third column of table [ tab : results ] .",
    "some of the corresponding rationals are listed in table [ tab : photon ] .",
    "the reader immediately checks that these numbers look much simpler than in the yukawa case .",
    "indeed , four rows only contain zero numbers ( the first line is almost zero , @xmath964 ) .    we find the trivial sequences @xmath965 } = - \\frac{n+1}{2}.\\ ] ] one also finds that @xmath966 is the exponential series of the generalized stirling numbers a001705 , @xmath967    c|cccccccc & 0 & 1 & 2 & 3 & 4 & 5 +   + @xmath898 & 1 & 0 & 0 & 0 & 0 & 0 + @xmath902 & 1 & @xmath899 & @xmath968 & @xmath969 & @xmath970 & @xmath971 + @xmath907 & 0 & 0 & 0 & 0 & 0 & 0 + @xmath913 & 1 & 1 & 1 & 1 & 1 & 1 + @xmath918 & @xmath899 & @xmath972 & @xmath973 & @xmath974 & @xmath975 & @xmath976 + @xmath925 & 0 & 0 & 0 & 0 & 0 & 0 + @xmath931 & @xmath908 & @xmath977 & @xmath978 & @xmath979 & @xmath946 & @xmath980 + @xmath938 & 0 & 0 & 0 & 0 & 0 & 0 + @xmath945 & @xmath971 & @xmath969 & @xmath981 & @xmath968 & @xmath982 & @xmath940 + @xmath952}$ ] & @xmath908 & @xmath866 & @xmath983 & @xmath932 & @xmath984 & @xmath985 + @xmath958}$ ] & 0 & 0 & 0 & 0 & 0 & 0 +",
    "99 d.kreimer _ quantum fields , periods and algebraic geometry , _ arxiv:1405.4964 [ hep - th ] .",
    "icmat proceedings _ periods and motives _ ,",
    "madrid , july 2012 , publ.by ams _ contemporary mathematics _ , luis lvarez - cnsul et.al . , eds .",
    ", in press .",
    "f.brown , d.kreimer , _ angles , scales and parametric renormalization , _ lett .  math .",
    "* 103 * ( 2013 ) 933 [ arxiv:1112.1180 [ hep - th ] ] .",
    "a.connes , d.kreimer , _ hopf algebras , renormalization and noncommutative geometry , _ commun .  math .",
    "* 199 * ( 1998 ) 203 [ hep - th/9808042 ] .",
    "c.bergbauer , d.kreimer , _ hopf algebras in renormalization theory : locality and dyson - schwinger equations from hochschild cohomology , _ irma lect .",
    "* 10 * ( 2006 ) 133 [ hep - th/0506190 ] .",
    "m.borinsky , _ feynman graph generation and calculations in the hopf algebra of feynman graphs , _ comput .",
    "commun .",
    "* 185 * ( 2014 ) 3317 [ arxiv:1402.2613 [ hep - th ] ] .",
    "l.foissy , _ lie algebra associated to systems of dyson - schwinger equations , _ adv .",
    "math.226 ( 2011 ) , no . 6 , 4702 - 4730 .",
    "d.broadhurst , d.kreimer , _ exact solutions of dyson - schwinger equations for iterated one loop integrals and propagator coupling duality , _ nucl .",
    "b * 600 * ( 2001 ) 403 [ hep - th/0012146 ] .",
    "s.bloch , d.kreimer , _ mixed hodge structures and renormalization in physics , _ commun .",
    "* 2 * ( 2008 ) 637 [ arxiv:0804.4399 [ hep - th ] ] .",
    "t.k.chen , _ iterated path integrals _ , bull.amer.math.soc.83 ( 1977 ) 831 .",
    "d.kreimer , _ anatomy of a gauge theory , _ annals phys .",
    "* 321 * ( 2006 ) 2757 [ hep - th/0509135 ] .",
    "d.kreimer , m.sars , w.van suijlekom , _ quantization of gauge fields , graph polynomials and graph homology , _ annals phys .",
    "* 336 * ( 2013 ) 180 [ arxiv:1208.6477 [ hep - th ] ] .",
    "c.reutenauer , _ free lie algebras _ , lms ( 1993 ) .",
    "a.connes , d.kreimer , _ renormalization in quantum field theory and the riemann - hilbert problem .",
    "2 . the beta function , diffeomorphisms and the renormalization group , _ commun .",
    "* 216 * ( 2001 ) 215 [ hep - th/0003188 ] .",
    "p.hall , _ the algebra of partitions _ , proceedings of the 4th canadian mathematical congress , banff , pp .",
    "w.milnor , j.c.moore , _ on the structure of hopf algebras _ , ann . of math .",
    "( 2 ) , 81 : 2 ( 1965 ) pp . 211264 .",
    "oeis foundation inc .",
    "( 2011 ) , _ the on - line encyclopedia of integer sequences _ , http://oeis.org"
  ],
  "abstract_text": [
    "<S> dyson - schwinger equations determine the green functions @xmath0 in quantum field theory . </S>",
    "<S> their solutions are triangular series in a coupling constant @xmath1 and an external scale parameter @xmath2 for a chosen amplitude @xmath3 , with the order in @xmath2 bounded by the order in the coupling .    </S>",
    "<S> perturbation theory calculates the first few orders in @xmath1 . on the other hand , dyson  </S>",
    "<S> schwinger equations determine next - to@xmath4-leading log expansions , @xmath5 . </S>",
    "<S> @xmath6 sums for any finite @xmath7 a finite number of functions @xmath8 in @xmath9 . here , @xmath9 is the one - loop approximation to @xmath10 , for example , for the ( inverse ) propagator in massless yukawa theory , @xmath11 .    </S>",
    "<S> the leading logs come then from the trivial representation @xmath12 at @xmath13 with @xmath14 . </S>",
    "<S> all non - leading logs are organized by corresponding suppressions in powers @xmath15 .    </S>",
    "<S> we describe an algebraic method to derive all next - to@xmath4-leading log terms from the knowledge of the first @xmath16 terms in perturbation theory and their filtrations . </S>",
    "<S> this implies the calculation of the functions @xmath17 and periods @xmath18 .    in the first part of our paper </S>",
    "<S> , we investigate the structure of dyson - schwinger equations and develop a method to filter their solutions . applying renormalized feynman rules maps each filtered term to a certain power of @xmath1 and @xmath2 in the log - expansion .    </S>",
    "<S> based on this , the second part derives the next - to@xmath4-leading log expansions . </S>",
    "<S> our method is general . here </S>",
    "<S> , we exemplify it using the examples of the propagator in yukawa theory and the photon self - energy in quantum electrodynamics . in particular , we give explicit formulas for the leading log , next - to - leading log and next - to - next - to - leading log orders in terms of at most three - loop feynman integrals . </S>",
    "<S> the reader may apply our method to any ( set of ) dyson - schwinger equation(s ) appearing in renormalizable quantum field theories . </S>"
  ]
}
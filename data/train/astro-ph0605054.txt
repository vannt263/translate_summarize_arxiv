{
  "article_text": [
    "in some @xmath0-body problems one has velocity - dependent perturbations .",
    "examples are the relativistic terms , which are important in black hole dynamics @xcite , or dissipative terms due to tidal friction or atmospheric friction in satellite orbits .",
    "the ks - regularization ( e.g. basic ks : @xcite and the chain - method of @xcite ) can easily handle any additional forces , however in multi - body regularization with the ks - transformation , large mass ratios cause problems . therefore other regularization methods algorithmic regularizations such as the logarithmic hamiltonian method @xcite or the time - transformed leapfrog @xcite must be considered . on the other hand , these methods , when combined with the extrapolation method @xcite can not easily include velocity - dependent forces , except with the help of the implicit midpoint method . since implicit methods may be inefficient , there is motivation to study ways to make the integrations explicit , while at the same time utilizing the good properties of algorithmic regularization .",
    "algorithmic regularization is simpler than ks regularization and , what is most important , versions of it work for arbitrary mass ratios .",
    "this is especially important in simulations of black hole dynamics in galactic nuclei @xcite .    in this paper , we first introduce the problem using a perturbed two - body system as an example . then we suggest a generalized midpoint method to be used as a tool to time - symmetrize any basic algorithm . finally the generalization to the @xmath0-body problem is briefly outlined .",
    "here we discuss the formulation of the basic algorithms , the time - transformed leapfrogs , that are regular in two - body collisions .",
    "then a generalized midpoint method , that can also be used with the bulirsch - stoer ( bs ) extrapolation method @xcite , is introduced .",
    "we first consider the perturbed two - body problem with velocity - dependent forces .",
    "let @xmath1 and @xmath2 be the position and velocity vectors respectively and @xmath3 the mass of the two - body system and @xmath4 the time .",
    "we may then write the equation of motion as @xmath5 this case is simple enough for a detailed discussion ; generalization to the full @xmath0-body problem will be straightforward .",
    "as @xcite and @xcite demonstrated , there is a way to make the leapfrog algorithm exact for two - body orbits , and regular for two - body collisions in more complicated problems , if one introduces a time transformation .",
    "here we concisely re - derive the algorithm and augment it to the case of a general ( not necessarily hamiltonian ) perturbation .",
    "let @xmath6 be the binding ( kepler ) energy of the two - body system .",
    "we have the energy equations @xmath7 this allows the introduction of the two time transformations @xmath8 which are equivalent along the solution trajectory . using the first alternative ( [ tpr1 ] ) to transform the equation of motion for the coordinates @xmath9 , one gets @xmath10 and the second equation gives for @xmath11 and @xmath2 @xmath12 where primes indicate differentiation with respect to the new independent variable @xmath13 and @xmath14 if the perturbation @xmath15 ( hence @xmath16 ) is independent of the velocity @xmath2 , then the above equations allow the use of the leapfrog algorithm : @xmath17 where the subscripts 0 and 1 refer to the beginning and the end of the step , and @xmath18 .",
    "if the perturbation @xmath19 , then the motion is pure kepler motion and the leapfrog algorithm produces an exact trajectory with only a time error @xcite .    in the above equations",
    ", the symbol @xmath20 indicates @xmath21 .",
    "however , if @xmath16 actually depends on the velocity too , then the leapfrog can not be immediately formed .",
    "this problem ( or rather an analogous one ) was solved by @xcite , using the implicit midpoint method , i.e. it was necessary to solve the equation @xmath22 for @xmath23 .",
    "often this solution is possible only by iteration which can be rather expensive if the perturbation is strong and complicated .",
    "this fact motivates a search for ways to find an alternative that is explicit , yet capable of utilizing the algorithmic regularization .",
    "this goal can be achieved with the help of the algorithm we next discuss .",
    "here we introduce a generalization to the well - known modified midpoint method . in this algorithm , the basic approximation to advance the solution is not just the evaluation of the derivative at the midpoints , but any method to approximate the solution .",
    "thus the algorithmic regularization by the leapfrog can be used even when the additional force depends on velocities .",
    "that provides a regular basic algorithm , which is made suitable for the extrapolation method by means of the generalized midpoint method , as follows .",
    "consider the differential equation @xmath24 splitting the above as @xmath25 with the initial values @xmath26 gives the leapfrog - like algorithm @xmath27 however , this is nothing but another way to write the well - known modified midpoint method .    a new interpretation of the above can be obtained by first rewriting it in the form @xmath28 in ( [ yks ] ) the bracketed term is an ( euler - method ) approximation to the increment of @xmath29 over the time interval @xmath30 with the initial value @xmath31 , while in ( [ kaks ] ) the initial value is @xmath32 and the time interval is @xmath33 finally , this increment is added with a minus sign to @xmath31 to obtain an approximation for @xmath34 . in the remaining formulae ( [ kol ] ) , ( [ nel ] ) , the idea is the same but the roles of @xmath29 and @xmath35 have been changed .",
    "a generalization of this is now obvious .",
    "let @xmath36 be an approximation to the solution of eq .",
    "( [ zequ ] ) over a time interval @xmath37 . in euler",
    "s method , @xmath38 which gives the algorithm described in eqs .",
    "( [ yks ] )  ( [ nel ] ) , but in general , @xmath39 could be obtained from any reasonable method for solving the differential equation ( [ zequ ] ) . we thus choose a method and define @xmath40 where @xmath41 is the approximation for @xmath42 obtained with the chosen method",
    ". this generalized midpoint algorithm may be especially useful if one uses a special method that is well - suited to the particular problem at hand .",
    "one step in the generalized midpoint method can now be written @xmath43 or , if we define the mapping ( or `` subroutine '' ) @xmath44 we can write the algorithm with many ( @xmath0 ) steps as @xmath45 thus one simply calls the subroutine @xmath46 alternately with arguments @xmath47 and @xmath48 such that the sequence is time - symmetric ( starts and stops with @xmath29 in eq .",
    "[ aaa ] ) .",
    "this basic algorithm has the correct symmetry  because it was derived from a leapfrog - like treatment  such that the error in integration over a fixed time interval with different timesteps @xmath49 can be written @xmath50 and thus the gragg - bulirsch - stoer extrapolation method can be used to obtain high accuracy .",
    "the great advantage of this generalized midpoint method is that the leapfrog with the implicit midpoint method can be replaced by a method that is not exactly time - symmetric .",
    "the computation of the quantity @xmath20 , when it depends on velocity , can be done in a straightforward way , e.g. by @xmath51 where one may approximate @xmath52 either by @xmath53 or preferably by @xmath54 after which @xmath55 can be used instead of ( [ v1formula1 ] ) ( or [ v1formula2 ] ) .",
    "here it is necessary to stress that only the increments of the variables from the algorithm ( [ lfbegin])([lfend ] ) are to be used as the quantities @xmath39 in the algorithm ( [ aaasubru1])([aaasubru2 ] ) .    ) in a two - black - hole system , with masses and speed of light @xmath56 , integrated from the initial values @xmath57 until the final merger of the two black holes .",
    "the @xmath58-axis is the semi - major axis in units of the schwarzschild radius .",
    "the green curve is for the new method while red and blue illustrate two varieties of the implicit midpoint method ( as described in the text ) .",
    ", width=340,height=264 ]    .",
    "colour coding is the same as in the previous figure .",
    ", width=340,height=264 ]",
    "using a simple perturbed two - body code , written according to the above theory , we carried out some experiments to compare the new alternative with the implicit midpoint method .",
    "tests with an ( initially ) circular orbit of unit radius and with the perturbing ( frictional ) force @xmath59 suggest that for very small @xmath60 ( @xmath61 ) the implicit midpoint method is faster , but for stronger perturbations , the new method is favorable",
    ".    tests with the relativistic ppn2.5 terms from @xcite are illustrated in fig .",
    "[ effigu ] . here",
    "the system was a two - body system with masses @xmath62 , initial semi - major - axis @xmath63 , initial eccentricity @xmath64 and the velocity of light was set to @xmath65 . due to the gravitational radiation term , the semi - major axis shrinks and the computational effort ( @xmath66= number of perturbation evaluations per unit of time ) increases .",
    "the figure illustrates the evolution of @xmath66 ( averages over @xmath67 steps with bs extrapolation ) during the computation ( until final merger of the bodies ) for three different methods .",
    "the results are plotted as a function of the shrinking semi - major axis ( measured in terms of the schwarzschild radius for the combined mass ) . in these integrations",
    "the one - step relative error tolerance was set to @xmath68 and the errors , measured via the quantity @xmath69 , were @xmath70 for the new method and the midpoint method with iteration to convergence ( corresponding to the `` green '' and `` red '' experiments in fig .",
    "[ effigu ] ) . for the restricted iteration method",
    "the error was , however , about @xmath71 suggesting that this method is not to be recommended .",
    "the errors grew secularly , as can be seen from fig .",
    "[ errfigu ] ; the numbers given above refer to the values just at merger , i.e. when the two particles approach more closely than the sum of schwarzschild radii .",
    "it may be seen that in all cases , the new method is somewhat more efficient .",
    "the generalization of the algorithm to the @xmath0-body problem is simple in principle .",
    "one may use the leapfrog algorithms introduced by @xcite or @xcite and simply add the necessary velocity - dependent forces .",
    "a new formulation that effectively unifies the above cited works may be constructed as follows .",
    "let @xmath72 be the kinetic energy , @xmath73 be the potential energy , and @xmath74 an ( in principle ) arbitrary function of of the coordinates , often @xmath75 then one may define , in analogy with ( [ tpr1 ] ) and ( [ tpr2 ] ) , the two time transformations @xmath76 where @xmath77 and @xmath78 are adjustable constants . since @xmath79",
    ", we have @xmath80 , which expression is used only for the initial value of @xmath81 and later this quantity must be obtained by solving the differential equation @xmath82 in the above , @xmath83 are the velocity and position of the body with mass @xmath84 , correspondingly , and the forces additional to @xmath85 are denoted by @xmath86 .    the equations of motion that can be used to construct the leapfrog that provides algorithmic regularization are , for time and coordinates respectively , @xmath87 and for velocities and @xmath81 @xmath88 here the ( possible ) velocity dependence of the additional forces @xmath86 can be handled as in our two - body example above .",
    "however , to account for the ( explicitely written ) @xmath2-dependence of @xmath89 one must follow @xcite , i.e. first the @xmath90 are advanced and then the average @xmath91 is used to evaluate @xmath89 . thus the leapfrog can be constructed in obvious analogy with the perturbed two - body case . however , in @xmath0-body integrations , the roundoff can be a serious source of error and relative coordinates of close bodies must be used to reduce that effect @xcite .",
    "some additional remarks follow .",
    "( i ) : :    if one takes @xmath92 then the    method obtained is the logarithmic hamiltonian method @xcite .",
    "( ii ) : :    if @xmath93 then we have the time    transformed leapfrog ( ttl ) @xcite .",
    "( iii ) : :    if @xmath94 then the method is just    the normal basic leapfrog .",
    "( iv ) : :    if there are no velocity - dependent perturbations , then the normal    leapfrog can be used and it is in fact faster .",
    "this is because our    alternative algorithm then does some ( unnecessary ) calculations back    and forth .",
    "( v ) : :    the question of which combination of the numbers    @xmath95 is best can not be answered in    general , but experimentation is necessary . for @xmath0-body    systems with very large mass ratios ,",
    "however , it seems that one must    have @xmath96 , which means a form of the ttl method .",
    "( vi ) : :    the experiments discussed in section [ experimentsection ] correspond to    the alternative ( i ) , i.e.    @xmath97 .",
    "note that for the    case of only two bodies , there should be not much difference between    alternatives ( i ) and ( ii ) since in this case they are mathematically    equivalent @xcite .",
    "we have demonstrated that the generalized midpoint algorithm can be used to time - symmetrize the algorithmic regularization leapfrog even when the forces depend on velocities .",
    "this permits efficient use of the extrapolation method . for very small perturbations ,",
    "the implicit midpoint method may still be better , and the new method can be recommended only when the velocity dependence of the forces is significant .",
    "finally we note that the generalized midpoint method can be used with any special low order approximation to the differential equations under consideration .",
    "thus it is not restricted to @xmath0-body problems ."
  ],
  "abstract_text": [
    "<S> algorithmic regularization uses a transformation of the equations of motion such that the leapfrog algorithm produces exact trajectories for two - body motion as well as regular results in numerical integration of the motion of strongly interacting few - body systems . </S>",
    "<S> that algorithm alone is not sufficiently accurate and one must use the extrapolation method for improved precision . </S>",
    "<S> this requires that the basic leapfrog algorithm be time - symmetric , which is not directly possible in the case of velocity - dependent forces , but is usually obtained with the help of the implicit midpoint method . </S>",
    "<S> here we suggest an alternative explicit algorithmic regularization algorithm which can handle velocity - dependent forces . </S>",
    "<S> this is done with the help of a generalized midpoint method to obtain the required time symmetry , thus eliminating the need for the implicit midpoint method and allowing the use of extrapolation .    </S>",
    "<S> [ firstpage ]    stellar dynamics  </S>",
    "<S> methods : @xmath0-body simulations  celestial mechanics </S>"
  ]
}
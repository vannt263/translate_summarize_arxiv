{
  "article_text": [
    "a fundamental theoretical and computational challenge in materials modeling is that of concurrently treating phenomena over a wide range of length and time scales .",
    "for example , in studying the mechanical response of polycrystalline materials , one must take into account the dynamics and interactions of vacancies , impurities , dislocations and grain boundaries , on time scales ranging from atomic vibrations to system - wide diffusion times .",
    "numerous approaches to handling the wide range of length scales have been proposed @xcite , including quasi - continuum methods @xcite , the heterogeneous multiscale method @xcite , multi - scale molecular dynamics @xcite , multigrid variants @xcite and phase field models @xcite . in general",
    "one can classify different techniques as being either atomistic or continuum , and differentiate them further by the characteristic time scale : density functional theory ( dft ) , for a quantum mechanical description of processes at the atomic time scale ; molecular dynamics ( md ) or monte carlo ( mc ) methods , appropriate for collective dynamics ; and coarse - grained descriptions involving continuum fields at the mesoscale on diffusive time scales .",
    "the difficulty of merging descriptions at different length and time scales limits the effective application of most of these methods .",
    "lack of a continuous transition between scales can induce artifacts , such as spurious reflections in a transition region between two levels @xcite .",
    "further , any method using molecular dynamics is typically restricted to sub - nanosecond time scales , whereas many interesting phenomena during materials processing , such as microstructural pattern formation , recrystallization , heat and solute diffusion , dislocation glide , etc . , occur over time scales which are typically greater than @xmath0s .",
    "one continuum approach that has been used successfully , especially in the multiscale modeling of solidification problems @xcite , is the _ phase - field method _ @xcite . through the effective use of asymptotics @xcite and adaptive mesh refinement @xcite ,",
    "the phase - field method has been used to span several orders of magnitude in length , from microns to centimeters .",
    "extensions of the method by kobayashi and co - workers @xcite , and warren @xcite also make it possible to model polycrystalline systems .",
    "special forms of the free energy that incorporate strain energy have been used to model the qualitative features of strain - induced phase transformations @xcite .",
    "the phase - field method represents a coarse - graining in space to length scales much greater than those of the interfaces and defects of interest in this work . as a result ,",
    "the kinetic coefficients that emerge in the final continuum equations are phenomenological , and can be related to experimentally - measurable parameters only after a suitable asymptotic matching of the phase field equations with corresponding sharp - interface models @xcite . as such , traditional phase field models do not fundamentally embody the emergent kinetic and elasto - plastic mechanisms that originate at the atomic scale .",
    "perhaps the most important limitation of phase field models is that , in general , they do not preserve any record of the underlying crystal lattice , so that ad hoc approaches must be used to model the variety of phenomena which result from lattice interactions .",
    "the phase field crystal ( pfc ) model @xcite is a promising extension of the phase field model approach , in which the equilibrium configuration of an atomic density field is constructed to be periodic , rather than uniform in space .",
    "the conserved dynamics of the pfc model then naturally reproduce many of the non - equilibrium processing dynamics arising in real polycrystalline materials .",
    "the pfc model is founded on the insight that a free energy functional that is minimized by a periodic field natively includes elastic energy , anisotropy and symmetry properties of that field .",
    "thus the model naturally incorporates all properties of a crystal that are determined by symmetry , as well as vacancies , dislocations , and other defects .",
    "moreover , the pfc model represents the evolution of the system over a time scale that is much longer than the vibrational period of atoms ( @xmath1 ) , but much shorter than the time scale of diffusive processes in the system , such as the viscous glide of dislocations , which typically occur over a time scale of @xmath2 .",
    "the pfc model yields a relatively simple and well - behaved partial differential equation ( pde ) for the evolution of the time - averaged density , giving it access to phenomena occurring on atomic length scales , but over diffusive time scales .",
    "the pfc method is thus able to capture atomic - scale elasticity and the interaction of topological defects on the same time scales that govern diffusive processes during phase transformations in pure materials @xcite and alloys @xcite .    as with any model that resolves at the atomic scale ,",
    "the pfc model is limited in its ability to model systems of realistic dimensions , because the computational grid must resolve the periodicity of the field . for grid converged results , a minimum of 9 grid points per period are required . in a physical system ,",
    "the periodicity represents interatomic distance , @xmath3 .",
    "thus , to simulate a system having a characteristic dimension of one micron would require about @xmath4 degrees of freedom per spatial dimension on a uniform computational mesh .",
    "this would be a heroic computation in 2-d , and well beyond reach in 3d , even with the use of massive parallelization .",
    "furthermore , the periodic lattice precludes the effective use of adaptive mesh refinement ( amr ) algorithms .",
    "the first three authors have recently described an approach to overcome this difficulty @xcite , using the perturbative renormalization group ( rg ) method @xcite to systematically coarse - grain the pfc equation@xcite . the basic idea is to obtain renormalization group equations of motion for the complex amplitude of the periodic density field , a quantity whose modulus and phase are spatially uniform except near regions of lattice disruption , such as at grain boundaries and at topological defects . from the complex amplitude ,",
    "it is possible to reconstruct the atomic - scale density field at least within the one - mode approximation , and to compute non - trivial materials properties and dynamics to high accuracy ( within one percent)@xcite .",
    "this approach , which we will sometimes denote as the pfc - rg method , is much faster than solving the pfc equation directly , because the complex amplitude varies on much larger spatial length scales than the density itself , thus permitting the use of an adaptively - generated coarse mesh over much of the computational domain@xcite .",
    "it is important to appreciate that the equations of motion for the complex amplitude must be rotationally - covariant , in order that a polycrystalline material or heterogeneous microstructure can be represented without any preferred orientations imposed ; this is readily achieved using renormalization group methods@xcite .",
    "however , in a practical computation , the reciprocal lattice vectors of the equilibrium crystal structure are represented within a particular basis , and there is the potential for interference between the density fourier components and the basis@xcite , giving rise to artifactual fringes `` or beats '' in the corresponding fourier components . the overall density does not , of course , exhibit these interference fringes , but their presence in the individual components means that to be properly resolved , an adaptive mesh algorithm must generate grid refinement in their vicinity . as a result ,",
    "efficient computation becomes compromised .",
    "the purpose of this paper is to develop a computationally - efficient formulation of the pfc - rg method that enables the implementation of an amr algorithm up to micro- and meso- length scales , without being deflected by artifacts arising from the choice of basis set .",
    "the approach is to use a hybrid representation of the complex amplitude , switching between cartesian and polar coordinates as appropriate in a seamless fashion to avoid beating and coordinate singularities .",
    "the resultant description is fast , accurate and provides mesh refinement and coarsening in the physically correct locations , without artifacts arising from choice of basis or other implementation - dependent details . as such , our work represents a first step towards providing a systematic description of materials processing using continuum fields across all relevant length scales .",
    "the remainder of this paper is organized as follows : we introduce the complex amplitude equations ( interchangeably called the rg equations ) in section [ sec : cartesian_rg ] and illustrate the interference or beat problem in the cartesian representation of these equations that limits the effectiveness of amr techniques . in section [ sec : polar_rg ] we introduce a polar formulation of the equations that addresses the problem of beats , but also exhibits coordinate singularities that make these equations unwieldy for numerical solution .",
    "we then present a new hybrid formulation in section [ sec : hybrid_rg ] , which is a procedure for solving the cartesian equations of section [ sec : cartesian_rg ] concurrently with a reduced form of the polar equations of section [ sec : polar_rg ] in different parts of the computational domain . in section [ sec : amr ] the hybrid formulation of the rg equations is demonstrated to be amenable to solution using a new finite - difference - based amr algorithm specifically developed for our rg equations . section [ sec : results ] presents numerical simulations and results , including efficiency benchmarks that clearly demonstrate the computational advantage of our amr - rg approach .",
    "section [ sec : conc ] concludes and presents directions for future work .",
    "in the pfc model , the evolution of the density @xmath5 is given by @xmath6 where @xmath7 is the free energy functional , which can be written as @xmath8 , where @xmath9 is the local free energy density , @xmath10 is a constant and @xmath11 is a stochastic noise with zero mean and correlations @xmath12 .",
    "the specific form of @xmath13 is chosen such that at high temperatures @xmath7 is minimized by a spatially uniform liquid state , and at low temperatures by a spatially periodic `` crystalline '' phase .",
    "furthermore , @xmath9 must be chosen such that @xmath7 is independent of crystal orientation .",
    "these constraints naturally incorporate both elastic and plastic deformations .",
    "a free energy form that satisfies these criteria naturally produces mobile regions of liquid / solid coexistence separated by free surfaces , i.e. , phase transformations .",
    "elastic energy and defects in the crystalline phase arise from the requirement that @xmath7 be minimized by a spatially periodic density field that is independent of crystal orientation .",
    "elder et al .",
    "@xcite demonstrated these properties of the model for a variety of applications , including studies of grain boundary energy , liquid phase epitaxial growth and the yield strength of nanocrystalline materials .",
    "the particular model they used made the following choice for the function @xmath9 : @xmath14 where @xmath15 , @xmath16 , @xmath17 and @xmath18 are model parameters that can be specified to match some specific material properties , such as young s modulus and lattice spacing @xcite . in order to discuss the dynamical behavior of the pfc model",
    ", it is useful to rewrite the free energy in dimensionless units : @xmath19 , @xmath20 , @xmath21 , @xmath22 and @xmath23 so that @xmath24\\ ] ] in these units the conservation law of eq .",
    "( [ eq : simph ] ) becomes @xmath25+\\zeta\\ ] ] where @xmath26 and @xmath27 .",
    "( [ eq : dyn ] ) , introduced by elder et al @xcite , will be referred to as the pfc equation in what follows .",
    "this equation can be used in any dimension by simply introducing the appropriate form for the laplacian operators .",
    "the spatial density @xmath28 can be approximated in terms of the complex amplitude @xmath29 as @xmath30 where @xmath31 are the reciprocal lattice vectors of a crystal with hexagonal symmetry , and @xmath32 is the dominant wavenumber of the pattern .",
    "for all the calculations shown in this paper length has been scaled such that @xmath33 , which corresponds to an interatomic spacing of @xmath34 .",
    "the complex amplitude equations , which constitute a coarse - grained approximation to the pfc equation were shown in our earlier work @xcite to be given by @xmath35 where @xmath36 $ ] and @xmath37 \\left[-r-3\\bar{\\psi}^2- \\left\\{\\nabla^2 + 2i{\\mathbf{k}_{j}}\\cdot\\nabla\\right\\}^2\\right]\\ ] ] is a rotationally covariant operator .",
    "the superscript `` @xmath38 '' denotes complex conjugation .",
    "the parameters @xmath39 and @xmath40 control the bifurcation from a uniform liquid phase to a crystalline phase with hexagonal symmetry .",
    "specifically , @xmath41 is proportional to the temperature quench from a critical temperature @xmath42 , while @xmath43 is the mean density in the system .",
    "we refer to this form as the _ cartesian _ representation because the amplitudes are expressed along each coordinate direction .",
    "the rotational covariance of the operator @xmath44 permits the incorporation of multiple crystal orientations using only the basis vectors in eq .",
    "( [ eq : latticevectors ] ) . to see this",
    "consider a density field @xmath28 defined by eq .",
    "( [ eq:1mode ] ) with triangular lattice basis vectors @xmath45 ( where @xmath46 ) that are rotated by an angle @xmath47 from the basis vectors @xmath48 in eq .",
    "( [ eq : latticevectors ] ) , i.e. @xmath49 equation ( [ eq:1mode_theta1 ] ) describes the density field of a grain misoriented with respect to the basis vectors . writing the basis vectors as @xmath50 , where the vector @xmath51 measures the rotation of each lattice vector , we obtain @xmath52 or @xmath53 where",
    "@xmath54 thus grains arbitrarily misoriented from the global basis @xmath48 can still be described in terms of @xmath48 by suitably representing the complex amplitude @xmath29 in polar form according to eq .",
    "( [ eq : amp_theta ] ) .",
    "a straightforward way to include differently oriented grains in the system is to specify an initial condition via eq .",
    "( [ eq:1mode_theta3 ] ) . by making the amplitude a non - uniform complex function with a periodic structure , multiple grain orientations",
    "are automatically included .",
    "[ fig : beats ] illustrates this idea .",
    "[ fig : ramp ] shows the real component of one of the three complex amplitude functions @xmath29 , specified by eq .",
    "( [ eq : amp_theta ] ) , and fig .",
    "[ fig : psi ] shows the corresponding density field constructed using eq .",
    "( [ eq:1mode_theta3 ] ) . since eq .",
    "( [ eq : cmplx_rg ] ) is rotationally covariant , it allows these `` beat '' structures in the amplitudes ( and therefore the corresponding orientation of the grain ) to be preserved as the system evolves , thereby enabling the representation of polycrystalline systems with a single set of basis vectors .      a straightforward approach to solving eq .",
    "( [ eq : cmplx_rg ] ) is to determine the real and imaginary parts of the complex amplitudes @xmath29 directly , using the cartesian definition .",
    "this leads to six equations that can be evolved concurrently using a suitable time integration scheme .",
    "the second order finite difference spatial discretizations of the laplacian and gradient operators are given in the appendix .",
    "this approach leads to limited success of amr techniques because of the beats .    to illustrate this effect",
    ", we simulated heterogeneous nucleation and growth of a two - dimensional film , randomly placing twelve randomly oriented crystals of initial radius @xmath55 in a square domain of side @xmath56 with periodic boundary conditions .",
    "the largest misorientation angle between grains was @xmath57 .",
    "the amplitude equations in cartesian form were solved using an adaptively evolving mesh ( described in detail below ) .",
    "the model parameters were @xmath58 and @xmath59 , the smallest mesh spacing was @xmath60 , while the largest mesh spacing at any given time was @xmath61 corresponding to 5 levels of refinement . on a uniform grid , this simulation requires @xmath62 nodes with the pfc equation , and @xmath63 nodes with the amplitude equations .",
    "a time step of @xmath64 was used .",
    "( color online ) evolution of a polycrystalline film simulated with complex amplitude equations , eq .",
    "( [ eq : cmplx_rg ] ) , on an adaptive grid .",
    "note that the grid does not coarsen inside many of the grains ( misoriented with respect to @xmath48 ) because of the fine scale structure of the `` beats '' .",
    "the colored field plotted is the average amplitude modulus , which is `` red '' inside the crystal phase , `` blue '' in the liquid phase , `` green '' at the crystal / liquid interface , and `` yellow '' near defects .",
    ", title=\"fig:\",scaledwidth=30.0% ]     ( color online ) evolution of a polycrystalline film simulated with complex amplitude equations , eq .",
    "( [ eq : cmplx_rg ] ) , on an adaptive grid .",
    "note that the grid does not coarsen inside many of the grains ( misoriented with respect to @xmath48 ) because of the fine scale structure of the `` beats '' .",
    "the colored field plotted is the average amplitude modulus , which is `` red '' inside the crystal phase , `` blue '' in the liquid phase , `` green '' at the crystal / liquid interface , and `` yellow '' near defects . , title=\"fig:\",scaledwidth=30.0% ]     ( color online ) evolution of a polycrystalline film simulated with complex amplitude equations , eq .",
    "( [ eq : cmplx_rg ] ) , on an adaptive grid .",
    "note that the grid does not coarsen inside many of the grains ( misoriented with respect to @xmath48 ) because of the fine scale structure of the `` beats '' .",
    "the colored field plotted is the average amplitude modulus , which is `` red '' inside the crystal phase , `` blue '' in the liquid phase , `` green '' at the crystal / liquid interface , and `` yellow '' near defects .",
    ", title=\"fig:\",scaledwidth=30.0% ]     ( color online ) evolution of a polycrystalline film simulated with complex amplitude equations , eq .",
    "( [ eq : cmplx_rg ] ) , on an adaptive grid .",
    "note that the grid does not coarsen inside many of the grains ( misoriented with respect to @xmath48 ) because of the fine scale structure of the `` beats '' .",
    "the colored field plotted is the average amplitude modulus , which is `` red '' inside the crystal phase , `` blue '' in the liquid phase , `` green '' at the crystal / liquid interface , and `` yellow '' near defects . , title=\"fig:\",scaledwidth=30.0% ]     ( color online ) evolution of a polycrystalline film simulated with complex amplitude equations , eq .",
    "( [ eq : cmplx_rg ] ) , on an adaptive grid .",
    "note that the grid does not coarsen inside many of the grains ( misoriented with respect to @xmath48 ) because of the fine scale structure of the `` beats '' .",
    "the colored field plotted is the average amplitude modulus , which is `` red '' inside the crystal phase , `` blue '' in the liquid phase , `` green '' at the crystal / liquid interface , and `` yellow '' near defects . , title=\"fig:\",scaledwidth=30.0% ]     ( color online ) evolution of a polycrystalline film simulated with complex amplitude equations , eq .",
    "( [ eq : cmplx_rg ] ) , on an adaptive grid .",
    "note that the grid does not coarsen inside many of the grains ( misoriented with respect to @xmath48 ) because of the fine scale structure of the `` beats '' .",
    "the colored field plotted is the average amplitude modulus , which is `` red '' inside the crystal phase , `` blue '' in the liquid phase , `` green '' at the crystal / liquid interface , and `` yellow '' near defects .",
    ", title=\"fig:\",scaledwidth=30.0% ]    fig .",
    "[ fig : cmplx_adaptive ] shows the crystal boundaries and grid structure at various times during the simulation .",
    "the field plotted is the average amplitude modulus , @xmath65 .",
    "although the grid starts out quite coarse ( @xmath66 and @xmath67 ) at several locations in the computational domain because of the large liquid fraction , this advantage falls off dramatically once the crystals evolve , collide , and start to form grain boundaries . in particular ,",
    "once all the liquid freezes , only a few grains that are favorably oriented with respect to @xmath48 show any kind of grid coarsening at all .",
    "those that are greatly misorientated with respect to @xmath48 lead to frequency beating , causing the number of nodes in the adaptive grid to increase rather than decrease .",
    "the polycrystal mesh shown in fig .  [ fig : cmplx_adaptive](f ) has @xmath68 nodes , which is very near that on a uniform grid",
    ". therefore the adaptive refinement algorithm applied to a cartesian formulation of eq .",
    "[ eq : cmplx_rg ] gives at best a marginal improvement over a fixed grid implementation .",
    "the main purpose of this paper is to present a methodology for overcoming this problem .",
    "we find that the computational benefits of amr are potentially greater if , instead of solving for the real and imaginary components of @xmath29 , we solve for the amplitude moduli @xmath69 , and the phase angles @xmath70 , which are spatially uniform fields irrespective of crystal orientation .",
    "together these two fields constitute a _ polar representation _ of @xmath29 .    in this section",
    "we derive evolution equations for @xmath71 and @xmath72 directly from eq .",
    "( [ eq : cmplx_rg ] ) , by applying euler s formula for a complex number , i.e.  @xmath73 , and then by equating corresponding real and imaginary parts on the left- and right - hand sides of the resulting equations . in this manner",
    "we get the coupled system of equations , @xmath74- \\left[\\mathcal{c}^{\\re\\re}(\\psi_j,\\phi_j)- \\mathcal{c}^{\\im\\im}(\\psi_j,\\phi_j)\\right]\\nonumber\\\\    & & + \\left[\\mathcal{c}^{\\re\\re\\re}(\\psi_j,\\phi_j)-    \\mathcal{c}^{\\re\\im\\im}(\\psi_j,\\phi_j)-    \\mathcal{c}^{\\im\\im\\re}(\\psi_j,\\phi_j)-    \\mathcal{c}^{\\im\\re\\im}(\\psi_j,\\phi_j)\\right]\\nonumber\\\\    & & -3\\psi_j\\left(\\psi_j^2 + 2\\sum_{k\\ne j }    \\psi_k^2\\right)- 6\\frac{\\bar{\\psi}}{\\psi_j }    \\left(\\prod_{k}\\psi_k\\right)\\cos\\left(\\sum_k\\phi_k\\right)\\end{aligned}\\ ] ] and @xmath75\\right.\\nonumber\\\\ & & \\left.+\\left[\\mathcal{c}^{\\im\\re\\re}(\\psi_j,\\phi_j)- \\mathcal{c}^{\\im\\im\\im}(\\psi_j,\\phi_j)+ \\mathcal{c}^{\\re\\im\\re}(\\psi_j,\\phi_j)+ \\mathcal{c}^{\\re\\re\\im}(\\psi_j,\\phi_j)\\right]\\right\\}/\\psi_j\\nonumber\\\\ & & + 6\\frac{\\bar{\\psi}}{\\psi_j^2}\\left(\\prod_{k}\\psi_k\\right)\\sin\\left ( \\sum_k\\phi_k\\right)\\end{aligned}\\ ] ] where @xmath76(\\psi_j e^{i\\phi_j})}{e^{i\\phi_j}}\\right\\}\\nonumber\\\\ \\mathcal{c}^{\\im}(\\psi_j,\\phi_j ) & = & \\im\\left\\{\\frac{\\left[\\nabla^2 + 2i\\mathbf{k}_j\\cdot\\nabla\\right](\\psi_j e^{i\\phi_j})}{e^{i\\phi_j}}\\right\\}\\nonumber\\\\ \\mathcal{c}^{\\re\\re}(\\psi_j,\\phi_j ) & = & \\re\\left\\{\\frac{\\left[\\nabla^2 + 2i\\mathbf{k}_j\\cdot\\nabla\\right ] \\left(\\mathcal{c}^{\\re}(\\psi_j,\\phi_j ) e^{i\\phi_j}\\right)}{e^{i\\phi_j}}\\right\\}\\nonumber\\\\ \\mathcal{c}^{\\im\\re}(\\psi_j,\\phi_j ) & = & \\im\\left\\{\\frac{\\left[\\nabla^2 + 2i\\mathbf{k}_j\\cdot\\nabla\\right ] \\left(\\mathcal{c}^{\\re}(\\psi_j,\\phi_j ) e^{i\\phi_j}\\right)}{e^{i\\phi_j}}\\right\\}\\nonumber\\\\\\end{aligned}\\ ] ] and so on for the remaining @xmath77 s . from here on we refer to the evolution equations for @xmath71 and @xmath72 as the phase / amplitude equations , whereas eq .",
    "( [ eq : cmplx_rg ] ) will be referred to as the complex amplitude equation .",
    "unfortunately , the phase / amplitude equations in eqs .",
    "( [ eq : modamp ] ) and ( [ eq : phase ] ) turn out to be quite difficult to solve globally .",
    "the principal difficulties are summarized below .",
    "+    the field @xmath71 is nearly constant within the individual grains and varies sharply only near grain boundaries , rendering its equation ideally suited for solution on adaptive meshes .",
    "the field @xmath72 on the other hand , if computed naively as @xmath78 , is a periodic and discontinuous function , @xmath79 $ ] , where @xmath80 is the phase vector , constant for a particular orientation of the grain , and @xmath47 is the misorientation angle of the grain .",
    "thus @xmath72 , roughly speaking , has the structure of a sawtooth waveform . ]",
    "bounded between the values @xmath81 and @xmath82 , with a frequency that increases with increasing grain misorientation .",
    "this poses a problem similar to that previously posed by the beats , with the grid this time having to resolve the fine scale structure of @xmath72 .",
    "further , one may need to resort to shock - capturing methods in order to correctly evaluate higher order derivatives , and resolve jumps where @xmath72 changes value from @xmath82 to @xmath81 and vice - versa .",
    "complications are also caused by @xmath72 being undefined in the liquid phase , and the tendency for @xmath71 , which appears in the denominator on the right hand side of eq .",
    "( [ eq : phase ] ) , to approach zero at those locations .",
    "this calls for some type of robust regularization scheme to some small non - zero value , or setting a heuristic upper bound on higher - order derivatives , have the effect of destroying defects and other topological features in the pattern . ] for the phase equations .",
    "these problems are clearly highlighted in fig .",
    "[ fig : phaseamp_issues ] , which shows the impingement of two misaligned crystals and the corresponding values of @xmath83 and @xmath84 .    ideally , one would like to reconstruct from the periodic @xmath72 , a continuous surface @xmath85 ( where @xmath86 is an integer ) which would be devoid of jumps , and therefore amenable to straightforward resolution on adaptive meshes .",
    "the implementation of such a reconstruction algorithm however , even if possible , requires information about individual crystal orientations , and the precise location of solid / liquid interfaces , defects , and grain boundaries at every time step , making it very computationally intensive .",
    "further , such an algorithm would be more appropriate in the framework of an interface - tracking approach such as the level set method @xcite , rather than our phase - field modeling approach .    despite these issues with the polar ( phase / amplitude ) equations progress can be made , under certain non - critical approximations , by solving the phase / amplitude equations in the interior of crystalline regions , in conjunction with the cartesian complex amplitude equations in regions closer to domain boundaries and topological defects .      the main idea that will be developed in this and subsequent sections",
    "is that of evolving the phase / amplitude and complex amplitude equations simultaneously in different parts of the domain , depending on where they can most appropriately be applied .",
    "the phase / amplitude formulation is solved in the crystal interior , away from defects , interfacial regions , and the liquid phase .",
    "the complex amplitude equations are solved everywhere else in the computational domain .",
    "this does away with the need for regularizing the phase equations where @xmath87 ( since @xmath88 in the crystal interior ) as well as the issue of the phase being undefined in certain regions .",
    "we overcome the remaining issues with the phase equation , i.e. the difficulty of evaluating derivatives of the phase and the need to resolve its periodic variations via certain controlled approximations described next .",
    "let us examine the results of a fixed grid calculation performed using the complex amplitude equations , illustrated in fig .",
    "[ fig : frozen_gradient ] , showing a sequence of line plots of the quantity @xmath89 .",
    "@xmath90 inside the growing crystal is seen to be essentially time invariant .",
    "as the crystal on the left grows , it can be seen that @xmath91 stays close to zero inside .",
    "we have verified that this is also true for the @xmath92 component of @xmath93 , and both components of @xmath94 and @xmath95 .    [",
    "cols=\"^,^,^ \" , ]     these results suggest that we may employ a _ locally frozen phase gradient_. note that the assumption of a frozen phase gradient does not mean that @xmath72 itself can not change .",
    "@xmath72 can continue to evolve as per eq .",
    "( [ eq : reduced_phase ] ) under the constraint of a fixed @xmath90 , although the changes may actually be quite small . on the other hand ,",
    "when similarly oriented crystals collide to form a small angle grain boundary , it is energetically more favorable for grains to locally realign ( i.e. for @xmath90 to change close to grain boundaries ) in order to reduce orientational mismatch @xcite , rather than to nucleate dislocations .",
    "since such interaction effects originate at the grain boundary , where the full complex rg equations will be solved , we anticipate that our assumption will not lead to artificially `` stiff '' grains .",
    "this approximation allows us to neglect third and higher order derivatives of @xmath71 and @xmath72 , . ] which allows us to reduce eqs .",
    "( [ eq : modamp ] ) and ( [ eq : phase ] ) to the following second order pdes : @xmath96\\nonumber\\\\ & & -3\\psi_j\\left(\\psi_j^2 + 2\\sum_{k\\ne j}\\psi_k^2\\right)- 6\\frac{\\bar{\\psi}}{\\psi_j}\\left(\\prod_{k}\\psi_k\\right ) \\cos\\left(\\sum_k\\phi_k\\right)\\\\ \\label{eq : reduced_phase } \\frac{\\partial\\phi_j}{\\partial t } & = & \\frac{(r+3\\bar{\\psi}^2)\\mathcal{c}^{\\im}(\\psi_j,\\phi_j)}{\\psi_j}+ 6\\frac{\\bar{\\psi}}{\\psi_j^2}\\left(\\prod_{k}\\psi_k\\right)\\sin \\left(\\sum_k\\phi_k\\right),\\end{aligned}\\ ] ] where @xmath97 and @xmath98 contain only first and second order derivatives of @xmath71 and @xmath72 . eqs .",
    "( [ eq : reduced_amp ] ) and ( [ eq : reduced_phase ] ) are referred to as the reduced phase / amplitude equations .",
    "the task of evolving the phase / amplitude equations is now considerably simplified , as only derivatives up to second order in @xmath72 need to be computed . while the laplacian and gradient of @xmath71 can be computed in a straightforward manner using eqs .",
    "( [ eqn : lapdisc ] ) and ( [ eqn : graddisc ] ) respectively , the gradient of @xmath72 needs to be computed with a little more care ( in order to avoid performing derivative operations on a discontinuous function ) .",
    "the result is that @xmath99 thus , the gradient operation on a discontinuous function @xmath72 is now transformed into gradient operations on the smooth components of the complex amplitude @xmath29 .",
    "further , @xmath100 is computed as @xmath101 , where the divergence operator is discretized using a simple second order central difference scheme .    however , as can be seen from eq .",
    "( [ eq : gradphase ] ) , @xmath90 now depends on gradients of the real and imaginary components of @xmath29 , which may not be properly resolved in the crystal bulk as we intend to coarsen the mesh there . to address this point",
    ", we assume that @xmath90 is frozen temporally in the crystal bulk .",
    "this assumption implies that once @xmath90 is accurately initialized in the crystal interior via eq .",
    "( [ eq : gradphase ] ) , after ensuring adequate resolution of the components of @xmath29 , it need not be computed again . for example , in simulations of crystal growth from seeds , we can start with a mesh that is initially completely refined inside the seeds , so that @xmath90 is correctly computed . once initial transients disappear and the crystals reach steady state evolution , the growth is monotonic in the outward direction . from this point on , @xmath90 hardly changes inside the crystal bulk and the grid can unrefine inside the grains while correctly preserving gradients in @xmath90 . note that the apparent discontinuities in @xmath72 no longer need be resolved by the grid .",
    "in order to implement our idea of evolving eq .",
    "( [ eq : cmplx_rg ] ) , and eqs .",
    "( [ eq : reduced_amp ] ) and ( [ eq : reduced_phase ] ) selectively within different regions , we begin by dividing the computational domain into two regions where each set of equations may be evolved simultaneously in a stable fashion .",
    "the region where @xmath29 is computed in terms of its real and imaginary parts is called x , and the region where @xmath71 and @xmath72 are computed is called p. we ensure that subdomain p is well separated from locations with sharp gradients , such as interfaces and defects . otherwise , errors resulting from our approximations may grow rapidly , causing x to invade p , which will in turn require us to solve the complex equations everywhere .",
    "we will further assume that the decomposition algorithm is implemented after a sufficient time , when initial transients have passed , and that the crystals are evolving steadily , which implies that @xmath71 inside the crystals has reached some maximum saturation value @xmath102 .",
    "the scenario we have in mind is sketched in fig .",
    "[ fig : domain_div ] , with p constituting the shaded regions and all other regions correspond to x.     sketch illustrating the idea of selectively evolving the complex amplitude and phase / amplitude equations in different regions of the computational domain . @xmath71 and @xmath72 are evolved inside the shaded circles , which fall well inside the crystalline phase , while the real and imaginary components of @xmath29 are evolved everywhere else.,title=\"fig:\",height=240 ]    the pseudo - code shown in algorithm [ alg : divide_domain ] presents a simple algorithm to achieve this decomposition .",
    "the algorithm first determines nodes with @xmath71 exceeding some minimum value @xmath103 , and @xmath104 beneath some limit @xmath105 .",
    "the nodes satisfying these conditions constitute domain p , while those failing to , constitute x. the p nodes are then checked again to see if the quantity @xmath106 is under some limit @xmath107 .",
    "nodes in set p that fail to satisfy this condition are placed in set x. the parameters @xmath108 , @xmath105 , and @xmath107 are chosen to ensure the largest possible size of set p. a small problem is caused by the fields @xmath71 and @xmath109 not being perfectly monotonic .",
    "as the limits @xmath105 and @xmath107 are sharp , several small islands ( clusters of grid points ) of x or p can be produced , which are detrimental to numerical stability .",
    "we have resolved this issue via a coarsening algorithm that eliminates very small clusters of x and p.    compute @xmath102 @xmath110 count = 0 count++ domain = p domain = x count = 0 count++ domain = x     +    fig .",
    "[ fig : dom_div_uni ] shows results from a uniform grid implementation of algorithm [ alg : divide_domain ] .",
    "no islands are present , as the algorithm decomposes the domain in an unsupervised manner .",
    "it is noteworthy that domain boundaries are distorted in figs .",
    "[ dom3 ] and [ dom4 ] in response to the formation of a grain boundary between the two crystals , after being roughly hexagonal at earlier times .",
    "the fact that the domain separatrices maintain a safe distance from the grain boundary ensures that the phase / amplitude equations are not evolved in regions containing sharp gradients in @xmath90 .",
    "parameter values used were @xmath111 , @xmath112 , and @xmath113 .",
    "the remarkable feature of our numerical scheme is that solving different sets of equations in x and p does not require doing anything special near the domain boundaries , such as creating `` ghost '' nodes outside each domain , or constraining solutions to match at the boundaries .",
    "both sets of variables , \\{@xmath114 } and \\{@xmath29 } , are maintained at all grid points irrespective of the domain they belong to , with one set allowing easy computation of the other . }",
    "is the field variable , @xmath69 and @xmath115 , whereas in domain p where \\{@xmath114 } are the field variables , @xmath116 and @xmath117 . ]",
    "therefore the transition between the two domains is a continuous one in terms of field variables , which allows the finite difference stencils in eqs .",
    "( [ eqn : lapdisc ] ) and ( [ eqn : graddisc ] ) to be applied to the respective fields without any modification near domain boundaries .",
    "as highlighted in earlier work @xcite the use of dynamic adaptive mesh refinement alters the numerical mesh resolution dynamically such as to place high resolution near phase boundaries and a very low resolution in bulk regions where there is little activity .",
    "this dramatically reduces computer memory requirements , allowing larger systems to be simulated .",
    "it also significantly reduces overall simulation times .",
    "the determining factor guiding the use or otherwise of an amr technique to solve a particular problem is the simple criterion @xmath118    the phase / amplitude rg equations discussed above are precisely in the class of problems that can benefit from and is amenable to adaptive mesh refinement . indeed , as will be shown below , the speedup in time contained intrinsically by the physics of the pfc equation is complemented by the concomitant bridging of length scales afforded by the rg equations solved adaptively .",
    "we solved the rg equations discussed above using a new c++ adaptive mesh refinement ( amr ) algorithm that uses finite differences ( fd ) to resolve spatial gradients @xcite .",
    "while it is typical to use the finite element method ( fem ) in situations involving non - structured meshes , adaption using finite differences schemes allows approximately a 5 - 10 fold increase in simulation speed ( measured as cpu time per node ) over previous ( fem ) formulations involving traditional phase field models @xcite .",
    "this improvement increases further still in cases where model equations contain spatial gradients or order higher than two , such as in the case of eqs .",
    "( [ eq : cmplx_rg ] ) ,  ( [ eq : reduced_amp ] ) and ( [ eq : reduced_phase ] ) .",
    "the basic reason for the difference in speeds is that fem formulations generally have more overhead due to their reliance on local matrix multiplication at multiple gauss quadrature points .",
    "this overhead time becomes even more pronounced when using elements of order higher than two , as is required if an fem formulation is to be used to resolve the spatial derivatives involved with the rg equations in this work .",
    "at the heart of our algorithm is a routine that creates a non - uniform mesh that increases nodal density in specific regions according to a local error estimator .",
    "nodes are grouped into pseudo - elements , managed by dynamic tree data structures , as used in a finite element formulation by provatas et al @xcite .",
    "the quad - tree structure illustrated in figure [ fig23 ] is a hierarchy of elements where every level deeper in the tree results in elements of higher refinement .",
    "every element has associated with it 4 corner ` nodes ' and 5 ` ghost ' nodes : 4 in the center of each edge and 1 in the center of the element .",
    "the ghost nodes facilitate interpolation when neighboring elements are at different levels of refinement .",
    "each node is a structure containing field values , such as phase , amplitude and the real and complex components of @xmath29 .",
    "a node also contains information about its nearest neighbors .",
    "edge ghost nodes can serve as field nodes if a resolution mismatch occurs across neighbor elements .",
    "this can be seen in the schematic in figure [ fig23 ] .",
    "the field equations are not solved at ghost nodes , but are instead interpolated linearly from the nodal values of the element ( or edge ) to which they belong .",
    "the inclusion of ghosts nodes simplifies the calculation of local derivatives .",
    "an adapter algorithm refines / unrefines the tree structure by using a user - defined error estimator computed for each element .",
    "refinement is done by bisection as shown in figure [ fig23 ] , and unrefinement is done by fusing four child elements into their parent element .",
    "once refinement / unrefinement of all elements is complete , the adapter produces an array of nodes , each of which is the center of a local grid .",
    "the equation solver accepts this array as input and then solves the equations at these nodal points .",
    "this method of node organization modularizes our algorithm and allows the solver and adapter to be separately parallelized .",
    "the mesh data structure contains nodes with detailed knowledge of their local neighbors , each of which exist at the center of a @xmath119 uniform mesh ( see fig .  [ fig : unstructured ] ) . during adaptation",
    ", the data structure applies rules that either increase ( if higher accuracy is needed ) or decrease ( to decrease memory requirements ) the size of this local nodal mesh . also during adaptation , the data structure and its associated elements and nodes",
    "respect the following six rules ( 3 applied to each element and 3 to each node ) . rule 1 ensures mesh cohesion and maintains accuracy in the solution of the pdes .",
    "rule 1 : : :    neighboring elements can vary by at most one level rule 2 : : :    all elements contain 9 nodes , real or ghost rule 3 : : :    element neighbors are all at the same level ( therefore elements may    have @xmath120 as a neighbor ) rule 4 : : :    node neighbors are all at the same level ( nodes will never have    @xmath120 as a neighbor , but may instead have a ghost as a    neighbor ) rule 5 : : :    each node is at the center of what is defined as a uniform mini - mesh rule 6 : : :    each node is assigned the resolution ( @xmath121 ) of the    most refined element attached to it .",
    "the adaptive process is controlled primarily at the tree level , but invokes function calls inside of the element and node structures .",
    "its basic flow is illustrated in algorithm [ alg : regrid ] .",
    "this process allows an element - by - element examination using recursion to maintain the rules above .",
    "once the process of adaptation is complete the adapter creates an array of nodes each with the index of its neighbors in the array , which is then used to solve the equations before adapting again .",
    "we also note that element ` leaves ' are stored by their resolution level in an array of element lists .",
    "element resolution is restricted to vary by at most one level compared to the element neighbors ( rule 1 ) .",
    "delete the ghost pointer list check all elements for unsplitting criteria check all elements for splitting criteria update node neighbors build ghost list set ghost averaging information    element splitting ( refinement ) is the dominant process in the algorithm , taking precedence over element coarsening ( i.e. fusing four children elements into their parent ) .",
    "elements are searched one refinement level at a time , starting from the second highest level of resolution .",
    "each element is considered for splitting using an error criterion computed for that element .",
    "if splitting is required , an element data structure it is pushed onto a stack , where its neighbors are subsequently checked against rule 1 . if splitting will violate rule 1 , the neighbors are recursively split until all refined elements satisfy rule 1 .",
    "when an element is split , it and its updated neighbor elements generate new real and ghost nodes , as well as information about their neighbors .",
    "the splitting algorithm is illustrated in algorithm [ alg : split ] .",
    "push element onto stack push needed neighbors onto stack pop the element from the stack create 4 new children elements push children onto elementlevel+1 add new nodes to the node list remove former ghosts from ghost list    the unrefinement algorithm starts at the lowest level of refinement .",
    "again , rule 1 above must be imposed .",
    "the elements are examined to see if a parent requires splitting .",
    "if it does not , the parent has its four child elements eliminated , assuming their relationship with the neighbors allows it ( i.e. rule 1 ) .",
    "recursive unsplitting of elements is not allowed . as in the case of refinement , during unrefinement , element neighbors and node neighbors are updated .",
    "the flow of unsplitting is shown in algorithm [ alg : unsplit ] .",
    "add parent to elementlevel+1 remove parent s children from elementlevel remove unneeded nodes from node list remove ghosts from ghost list center node becomes a ghost edge nodes become ghosts depending on neighbor levels delete children    as discussed above , nodes follow rules 4 , 5 and 6 .",
    "this is enforced by the introduction of ghost nodes in elements and by maintaining rule 1 .",
    "rule 5 is maintained by creating a list of local nodes ( ghost or real ) and by maintaining rule 1 during splitting .",
    "rule 6 determines which node neighbors are chosen and the local node spacing ( @xmath121 ) . a real node will contain the minimesh on which is applied the governing equations ; a ghost node provides instructions on how to interpolate the values needed for real node calculations .",
    "a very useful feature of the amr implementation outlined in the previous section is that each node sits at the center of a uniform @xmath119 mini - grid , illustrated in fig .",
    "[ fig : unstructured ] .",
    "let us focus on the node represented by the lightly shaded circle ( labeled f ) .",
    "the data structure ensures that node f has access to all other nodes on the wireframe .",
    "the advantage of this construction is that it allows us to use the uniform grid finite difference stencils for the laplacian and gradient operators in eqs .",
    "( [ eqn : lapdisc ] ) and ( [ eqn : graddisc ] ) respectively , instead of modifying them node - wise to accommodate variations in grid spacing .",
    "this requires the introduction of ghost nodes , shown as open circles in figure  [ fig : unstructured ] .",
    "schematic showing a portion of the adaptive grid where the refinement level changes .",
    "filled circles ( and node f ) are real nodes where the fields are computed , whereas the open circles are non - computational ghost nodes where the fields are interpolated.,title=\"fig:\",height=240 ]    the scheme used to interpolate values at the ghost nodes is a potential source of error in the numerical solution , and must be chosen carefully .",
    "@xmath71 , @xmath122 , @xmath123 , @xmath124 and @xmath125 are very smoothly varying functions , and therefore we _ linearly _ interpolate their values to the ghost nodes .",
    "values at ghosts residing on element edges , for example node m in fig .",
    "[ fig : unstructured ] , are obtained by averaging values of the two end nodes q and s , whereas values at ghosts residing at the center of an element , node n for example , are obtained by averaging the values at the four corner nodes , p , q , r , and s. we have found this interpolation scheme to be quite stable .",
    "we note however that , given the near - periodic variations in @xmath124 and @xmath125 , especially in misoriented grains , higher order interpolation functions ( such as cubic splines ) could improve solution accuracy , while strongly enforcing continuity of fields across elements .",
    "this issue will be examined in future work .",
    "the interpolation of @xmath72 at the ghost nodes is a little more delicate .",
    "since @xmath72 is a discontinuous function , a simple average of the values at the neighboring real nodes may not always give the correct answer , especially because the grid does not resolve the discontinuities .",
    "even if it did , a simple average could lead to the wrong result . as an example , consider the two real nodes q and s in fig .",
    "[ fig : unstructured ] , with values @xmath126 and @xmath127 where @xmath128 and @xmath129 are very small but positive real numbers , on either side of a discontinuity in @xmath84 .",
    "we wish to determine the value at the ghost node m that lies between q and s. although the values of @xmath84 at q and s are essentially equivalent in phase space , differing in magnitude by approximately @xmath130 , a simple average gives @xmath131 , which is quite wrong .    in order to interpolate",
    "correctly we need to make use of @xmath90 .",
    "for example in the above case , the total change in the phase from q to s is obtained by integrating the directional derivative of @xmath84 along the edge qs , i.e. @xmath132 eq .",
    "( [ eq : phase_inter ] ) can be evaluated numerically , and the accuracy of the result depends on how well @xmath133 is approximated .",
    "consistent with our earlier assumptions , we approximate @xmath134 as piecewise constant where @xmath135 which leads to @xmath136 since @xmath134 is constant along the edge qs , @xmath84 must vary linearly along qs . hence at node m , @xmath137.\\ ] ] interpolation of @xmath72 at element center ghost nodes , such as n , is done in a similar manner by interpolating linearly from ghost nodes at the centers of opposite element edges . once again",
    ", this scheme might be improved by choosing higher order polynomials to approximate @xmath90 inside elements .      traditionally , amr algorithms rely on some kind of local error estimation procedure to provide a criterion for grid refinement .",
    "zienkiewicz and zhu @xcite developed a simple scheme for finite element discretization of elliptic and parabolic pdes by computing the error in the gradients of the fields using higher order interpolation functions .",
    "berger and oliger @xcite on the other hand estimated the local truncation error of their finite difference discretization of hyperbolic pdes via richardson extrapolation .",
    "depending on the equations being solved and the numerical methods being used , one scheme may be more effective than another .",
    "we use a very simple and computationally inexpensive refinement criterion that works nicely for our equations , based purely on gradients in the various fields .    the outline of the algorithm used to decide whether or not to split an element is given in algorithm [ alg : refine ] .",
    "the algorithm initially computes absolute changes in the real and imaginary parts of @xmath29 , and the @xmath138 and @xmath92 components of @xmath90 in each element .",
    "we use absolute differences in place of derivatives in order for the refinement criterion to be independent of element size .",
    "we note that prior to implementing this algorithm , the domain decomposition algorithm described above ( see figure [ alg : divide_domain ] ) needs to be called first in order to split the computational domain into subdomains x and p.    the process begins by examining an element flag to see if the element lies on the separatrix between x and p , or in @xmath139 layers from the boundary , within the p subdomain . if so this element is split .",
    "this ensures that the fields are always resolved on the interface between x and p , and just within the boundary on the p side .",
    "the latter is required because of the higher order derivative operations that need to be performed while evolving the complex amplitude equations in x.    latexmath:[$dr_i = |\\mbox{n1}\\rightarrow\\re(a_i)-\\mbox{n2}\\rightarrow\\re(a_i)| +    latexmath:[$+ |\\mbox{n3}\\rightarrow\\re(a_i)-\\mbox{n4}\\rightarrow\\re(a_i)| +    latexmath:[$di_i = |\\mbox{n1}\\rightarrow\\im(a_i)-\\mbox{n2}\\rightarrow\\im(a_i)| +    latexmath:[$+ |\\mbox{n3}\\rightarrow\\im(a_i)-\\mbox{n4}\\rightarrow\\im(a_i)| +    latexmath:[$dgpx_i = |\\mbox{n1}\\rightarrow\\partial\\phi_1/\\partial x-\\mbox{n2}\\rightarrow\\partial\\phi_1/\\partial x| +    latexmath:[$+ |\\mbox{n3}\\rightarrow\\partial\\phi_1/\\partial x-\\mbox{n4}\\rightarrow\\partial\\phi_1/\\partial x|",
    "+    latexmath:[$dgpy_i = |\\mbox{n1}\\rightarrow\\partial\\phi_1/\\partial y-\\mbox{n2}\\rightarrow\\partial\\phi_1/\\partial y| +    latexmath:[$+ |\\mbox{n3}\\rightarrow\\partial\\phi_1/\\partial y-\\mbox{n4}\\rightarrow\\partial\\phi_1/\\partial y| +    split element and exit count=0 count++ split element and exit count = 0 count++ split element and exit    if the element does not split and belongs to x ( where @xmath29 are the field variables ) , the variations in the real and imaginary parts of @xmath29 are checked to see if they exceed a certain bound @xmath105 .",
    "if any one of them does , this element is split .",
    "if , on the other hand , the element belongs to p where the phase / amplitude equations are solved , variations in the @xmath138 and @xmath92 components of @xmath90 are checked to see if they exceed another limit @xmath107 .",
    "if they do , this element is split .",
    "if none of the above criteria are satisfied , the element is not split and is placed in the list of elements to be checked for coarsening . since refinement criteria are recursively applied to the quadtree , the finest elements are automatically placed around domain separatrices , solid / liquid interfaces , and defects .",
    "using the various approximations and algorithms described in the previous sections we solved the phase / amplitude and complex equations simultaneously in different parts of our computational domain using adaptive mesh refinement .",
    "algorithm [ alg : main ] shows the flow of control in the main routine .",
    "the complex amplitude equations , eq .",
    "( [ eq : cmplx_rg ] ) , are initially evolved everywhere until time @xmath141 , when initial transients have dissipated , and the crystals evolve steadily outward .",
    "the domain is then split into subdomains x and p , following which the reduced phase / amplitude equations , eqs .",
    "( [ eq : reduced_amp ] ) and ( [ eq : reduced_phase ] ) , are evolved using a forward euler time stepping scheme in subdomain p. the grid is refined after a predetermined number of time steps @xmath142 , which is chosen heuristically .",
    "we note that the current implementation can handle only periodic boundary conditions .",
    "work is currently underway to enable handling of more general boundary conditions .",
    "initvar ( ) initgrid ( ) updateghostsfv ( ) computephasegradients(1 ) updateghostspg ( ) adaptgrid ( ) evolvecomplexamp ( ) updateallfields ( ) updateghostsfv ( ) computephasegradients(1 ) updateghostspg ( ) dividedomain ( ) dividedomain ( ) adaptgrid ( ) evolvecomplexamp ( ) evolvephaseamp ( ) updateallfields ( ) updateghostsfv ( ) computephasegradients(i ) updateghostspg ( )     ( color online ) evolution of a polycrystalline film simulated with eq .",
    "( [ eq : cmplx_rg ] ) , and eqs .",
    "( [ eq : reduced_amp ] ) and ( [ eq : reduced_phase ] ) , using our adaptive mesh refinement algorithm . the conditions in this simulation are identical to those in section [ sec : polycryst_cart ] and fig .",
    "[ fig : cmplx_adaptive ] . note that the grid now coarsens inside grains that are misoriented with respect to @xmath48 , and `` beats '' are no longer a limitation .",
    "the colored field plotted is the average amplitude modulus , which is `` red '' inside the crystal phase , `` blue '' in the liquid phase , `` green '' at the crystal / liquid interface , and `` yellow '' near defects . , title=\"fig:\",scaledwidth=30.0% ]     ( color online ) evolution of a polycrystalline film simulated with eq .",
    "( [ eq : cmplx_rg ] ) , and eqs .",
    "( [ eq : reduced_amp ] ) and ( [ eq : reduced_phase ] ) , using our adaptive mesh refinement algorithm . the conditions in this simulation are identical to those in section [ sec : polycryst_cart ] and fig .",
    "[ fig : cmplx_adaptive ] . note that the grid now coarsens inside grains that are misoriented with respect to @xmath48 , and `` beats '' are no longer a limitation .",
    "the colored field plotted is the average amplitude modulus , which is `` red '' inside the crystal phase , `` blue '' in the liquid phase , `` green '' at the crystal / liquid interface , and `` yellow '' near defects . , title=\"fig:\",scaledwidth=30.0% ]     ( color online ) evolution of a polycrystalline film simulated with eq .",
    "( [ eq : cmplx_rg ] ) , and eqs .",
    "( [ eq : reduced_amp ] ) and ( [ eq : reduced_phase ] ) , using our adaptive mesh refinement algorithm . the conditions in this simulation are identical to those in section [ sec : polycryst_cart ] and fig .",
    "[ fig : cmplx_adaptive ] .",
    "note that the grid now coarsens inside grains that are misoriented with respect to @xmath48 , and `` beats '' are no longer a limitation .",
    "the colored field plotted is the average amplitude modulus , which is `` red '' inside the crystal phase , `` blue '' in the liquid phase , `` green '' at the crystal / liquid interface , and `` yellow '' near defects . , title=\"fig:\",scaledwidth=30.0% ]     ( color online ) evolution of a polycrystalline film simulated with eq .",
    "( [ eq : cmplx_rg ] ) , and eqs .",
    "( [ eq : reduced_amp ] ) and ( [ eq : reduced_phase ] ) , using our adaptive mesh refinement algorithm .",
    "the conditions in this simulation are identical to those in section [ sec : polycryst_cart ] and fig .",
    "[ fig : cmplx_adaptive ] .",
    "note that the grid now coarsens inside grains that are misoriented with respect to @xmath48 , and `` beats '' are no longer a limitation .",
    "the colored field plotted is the average amplitude modulus , which is `` red '' inside the crystal phase , `` blue '' in the liquid phase , `` green '' at the crystal / liquid interface , and `` yellow '' near defects . , title=\"fig:\",scaledwidth=30.0% ]     ( color online ) evolution of a polycrystalline film simulated with eq .",
    "( [ eq : cmplx_rg ] ) , and eqs .",
    "( [ eq : reduced_amp ] ) and ( [ eq : reduced_phase ] ) , using our adaptive mesh refinement algorithm . the conditions in this simulation are identical to those in section [ sec : polycryst_cart ] and fig .",
    "[ fig : cmplx_adaptive ] .",
    "note that the grid now coarsens inside grains that are misoriented with respect to @xmath48 , and `` beats '' are no longer a limitation .",
    "the colored field plotted is the average amplitude modulus , which is `` red '' inside the crystal phase , `` blue '' in the liquid phase , `` green '' at the crystal / liquid interface , and `` yellow '' near defects . , title=\"fig:\",scaledwidth=30.0% ]     ( color online ) evolution of a polycrystalline film simulated with eq .",
    "( [ eq : cmplx_rg ] ) , and eqs .",
    "( [ eq : reduced_amp ] ) and ( [ eq : reduced_phase ] ) , using our adaptive mesh refinement algorithm . the conditions in this simulation are identical to those in section [ sec : polycryst_cart ] and fig .",
    "[ fig : cmplx_adaptive ] .",
    "note that the grid now coarsens inside grains that are misoriented with respect to @xmath48 , and `` beats '' are no longer a limitation .",
    "the colored field plotted is the average amplitude modulus , which is `` red '' inside the crystal phase , `` blue '' in the liquid phase , `` green '' at the crystal / liquid interface , and `` yellow '' near defects . , title=\"fig:\",scaledwidth=30.0% ]    using this implementation , we simulated the same problem ( same initial and boundary conditions and problem parameters ) that was solved adaptively in section [ sec : polycryst_cart ] using only the complex amplitude equations .",
    "figure  [ fig : mixed_adaptive ] shows the crystal boundaries and grid structure at various times during the simulation .",
    "@xmath141 was chosen to be 3000 for this simulation . with @xmath64 , this implies that this simulation is identical to the previous one until @xmath143 .",
    "thus , figs .",
    "[ fig : mixed_adaptive](a ) and [ fig : mixed_adaptive](b ) are identical to figs .",
    "[ fig : cmplx_adaptive](a ) and [ fig : cmplx_adaptive](b ) .",
    "the advantage of the hybrid implementation starts to appear from fig .",
    "[ fig : mixed_adaptive](c ) , whenceforth , unlike in fig .",
    "[ fig : cmplx_adaptive ] , even grains that are misoriented with respect to the basis @xmath48 show grid unrefinement within .",
    "it is also noteworthy that the grid remains refined near solid / liquid interfaces , grain boundaries and defects , ensuring that key topological features are correctly resolved .",
    "we now compare solutions from the two simulations quantitatively .",
    "we find it more informative to make a pointwise comparison of the two solutions along cross sections of the domain , rather than comparing solution norms , as we believe that this is a more stringent test of our implementation .",
    "we choose two random cuts , one running parallel to the @xmath92 axis at @xmath144 , and the other parallel to the @xmath138 axis at @xmath145 .",
    "the solutions are compared along these cuts at two different times , @xmath146 and @xmath147 in figs .",
    "[ fig : xcut ] and [ fig : ycut ] respectively .",
    "the solid curves in the figures ( labeled `` hybrid '' ) are variations in @xmath83 and @xmath148 along the entire length of the domain as computed with the current (  hybrid \" ) implementation , whereas the symbols ( labeled `` complex '' ) are variations in the same variables as computed using fully complex equations ( section [ sec : polycryst_cart ] ) .",
    "the agreement is essentially perfect , indicating that our simplifications based on approximations in the preceding sections work reasonably well .    because the performance of our algorithm is sensitively tied to the type of problem that is being solved , it is difficult to come up with a simple metric that quantifies its computational efficiency .",
    "the difficulty lies in accounting for the change in cpu time per time step , which increases with the number of mesh points .",
    "for example , fig .",
    "[ fig:12seedsnodes ] shows the number of nodes in this simulation over time .",
    "clearly , an adaptive grid implementation has a significant computational advantage over an equivalent fixed grid implementation at the early stages of the simulation .",
    "( color online ) number of computational nodes in the grid as a function of time , for simulations in fig .",
    "[ fig : cmplx_adaptive ] ( black curve ) and fig .",
    "[ fig : mixed_adaptive ] ( red curve ) .",
    "the number of nodes reaches a constant value after all the liquid freezes .",
    "the dashed line shows the number of nodes required by a uniform grid implementation of the complex amplitude equations for the same problem.,title=\"fig:\",scaledwidth=40.0% ]    one performance measure is the projected speed of our implementation compared to a uniform grid implementation of the pfc equation .",
    "this speedup is estimated by the simple formula , @xmath149 where @xmath150 is the number of grid points required to solve the pfc equation , @xmath151 is the number of grid points required in a hybrid implementation of the amplitude / rg equations , @xmath152 and @xmath153 are the time steps used in the respective implementations , the factor 1/6 comes from solving six rg equations in place of the [ one ] pfc equation directly , and @xmath154 $ ] is the overhead of the amr algorithm .",
    "the difficulty lies in fixing @xmath151 which is constantly changing with time .",
    "one estimate for @xmath151 is the number of nodes averaged over the entire simulation .",
    "this can be computed easily by dividing the area under the hybrid curve in fig .",
    "[ fig:12seedsnodes ] by the total number of time steps taken , which gives @xmath155 .",
    "further , based on heuristics collected while running our code , we conservatively estimate mesh refinement / coarsening to constitute about 3% of the cpu time , which gives @xmath156 .",
    "therefore , from eq .",
    "( [ eq : speedup_form ] ) we have @xmath157 we do recognize that for a more accurate estimate of @xmath158 we would also need to consider overhead costs that may come from sub - optimal cache and memory usage owing to the data structures used . hence these numbers should only be considered as rough estimates of true speedup .    while a speedup factor of 8 may not seem to be a great improvement in computational efficiency",
    ", one should bear in mind that the number of nodes in the amr algorithm scales ( roughly ) linearly with interface / grain boundary length , which is quite substantial in the system we just simulated .",
    "thus , one should not expect to derive the maximum computational benefit when simulating small systems with large numbers of grains . on the other hand , with this new method",
    ", we can now simulate the growth of a few crystals in a much larger system .",
    "we choose a square domain of side @xmath159 , which in physical dimensions translates to 0.722 @xmath160 m , if we assume an interatomic spacing of 4  .",
    "we initiate three randomly oriented crystals , two a little closer together than the third , so that a grain boundary forms quickly .",
    "the crystals are shown at different times in fig .",
    "[ fig : micro ] .",
    "the simulation was terminated at @xmath161 when memory requirements exceeded 1 gb , after running on a dedicated 3.06 ghz intel xeon processor for about one week .",
    "let us calculate the speedup factor for this simulation as we did previously , after @xmath162 time steps ( @xmath163 , fig .",
    "[ fig : micro](f ) ) . fig .",
    "[ fig : bigproblem_nodes ] shows that the number of nodes in the adaptive grid varies nearly linearly with the number of time steps , and we estimate the average number of nodes @xmath164 to be @xmath165 .",
    "the same simulation on a uniform grid using the pfc equation would have required @xmath166 nodes ( not possible on our computers ) .",
    "we estimate @xmath167 . in this case",
    "the speedup is about three orders of magnitude , @xmath168 fig .",
    "[ fig : multiscale ] shows vividly the range of length scales from nanometers to microns spanned by our grid in this simulation , highlighting its `` multiscale '' capability .",
    "we would like to emphasize that as with any adaptive grid implementation , refinement criteria can change @xmath158 by a factor that is approximately constant . in order to enable testing our implementation on a much larger domain subject to the available memory resources , the criteria were relaxed .",
    "note however , that even if we had roughly doubled the number of finely spaced nodes near the interfaces and the grain boundary , which would lead to a significantly more accurate calculation , @xmath158 would still be about 500 times faster than an equivalent implementation of the pfc equation on a uniform grid .",
    "( color online ) micro - scale simulation of two dimensional crystal growth with amplitude equations using amr.,title=\"fig:\",scaledwidth=30.0% ]     ( color online ) micro - scale simulation of two dimensional crystal growth with amplitude equations using amr.,title=\"fig:\",scaledwidth=30.0% ]     ( color online ) micro - scale simulation of two dimensional crystal growth with amplitude equations using amr.,title=\"fig:\",scaledwidth=30.0% ]     ( color online ) micro - scale simulation of two dimensional crystal growth with amplitude equations using amr.,title=\"fig:\",scaledwidth=30.0% ]     ( color online ) micro - scale simulation of two dimensional crystal growth with amplitude equations using amr.,title=\"fig:\",scaledwidth=30.0% ]     ( color online ) micro - scale simulation of two dimensional crystal growth with amplitude equations using amr.,title=\"fig:\",scaledwidth=30.0% ]     number of computational nodes in the grid as a function of time for the 1 @xmath160 m @xmath169 1@xmath160 m domain .",
    "the growth is almost linear.,title=\"fig:\",scaledwidth=50.0% ]     ( color online ) the above grid spans roughly three orders of magnitude in length scales , from a nanometer up to a micron .",
    "the leftmost box resolves the entire computational domain whereas the rightmost resolves dislocations at the atomic scale.,title=\"fig:\",scaledwidth=80.0% ]",
    "in this article , we have presented an efficient hybrid numerical implementation that combines cartesian and polar representations of the complex amplitude with adaptive mesh refinement , and allows the modeling capabilities of the pfc equation to be extended to microscopic length scales .",
    "depending on the choice of application , we have shown that our scheme can be anywhere from @xmath170 orders of magnitude times faster than an equivalent uniform grid implementation of the pfc equation , on a single processor machine .",
    "we anticipate that this advantage will be preserved when both implementations are migrated to a parallel computer , which is an important next step required to give the rg extension of the pfc model full access to micro- and meso- scale phenomena .    in conclusion",
    ", we have shown that multiscale modeling of complex polycrystalline materials microstructure is possible using a combination of continuum modeling at the nanoscale using the pfc model , rg and related techniques from spatially - extended dynamical systems theory and adaptive mesh refinement .",
    "we regard this work as only a first step for our modeling approach with the rg extension of the pfc to be successfully applied for studying important engineering and materials science applications .",
    "we have identified a few issues that require immediate attention .",
    "the first , although an implementation issue , is critical , and has to do with using amplitude equations for applications involving externally applied loads and displacements to a polycrystal that has been evolved with our equations .",
    "simple applications could be , subjecting the polycrystal to shear , uniaxial , or biaxial loading states @xcite .",
    "such boundary conditions are difficult enough to apply to the scalar field @xmath28 in the pfc equation @xcite .",
    "meaningful translation to equivalent boundary conditions on the amplitudes and phases of @xmath28 can be a very difficult task , requiring the solution of systems of nonlinearly coupled equations at the boundaries.we have not yet investigated this issue in any detail .",
    "our derivation of the amplitude equations @xcite was based on a one mode approximation to the triangular lattice , and as we always chose parameters fairly close to the boundary between the triangular phase and coexisting triangular and constant phases , i.e.  @xmath171 , the amplitude equations we derived were within their domain of validity and our results were quite accurate .",
    "it is almost certain that a one - mode approximation will not give similarly accurate results when @xmath172 ( although it would be interesting to see how much the error actually is ) .",
    "it is not clear if this in any way precludes certain phenomena from being studied with our equations , as we can always choose parameters to stay in the regime where the one - mode approximation is valid , but if it does , amplitude equations for dominant higher modes need to be systematically developed .",
    "an important assumption made in the derivation of our so called `` hybrid '' formulation of the complex amplitude equations is that of locally freezing the phase gradient vector @xmath90 .",
    "in fact , it is this assumption that allows us to effectively unrefine the interior of grains and gain significant speedup over the pfc equation .",
    "if for example , the problem we are studying involves the application of a large external shear strain that could change @xmath90 in the grain interior via grain rotation , it is uncertain whether our algorithm would continue to maintain its computational efficiency over the pfc .",
    "this is again a matter worth investigating .",
    "we thank ken elder and nicholas guttenberg for several useful discussions .",
    "this work was partially supported by the national science foundation through grant number nsf - dmr-01 - 21695 .",
    "one of the authors ( np ) wishes to acknowledge support from the national science and engineering research council of canada .",
    "the laplacian of a function @xmath173 is discretized at point @xmath174 using a nine point finite difference stencil as shown below , where @xmath121 is the mesh spacing . @xmath175 a fourier transform of this _ isotropic _ discretization , described by tomita in @xcite , is shown to very nearly follow the @xmath176 isocontours .",
    "the gradient of a function @xmath173 is discretized at point @xmath174 using a nine point second order finite difference stencil as shown below , where @xmath121 is the mesh spacing .",
    "the stencil is designed to minimize effects of grid anisotropy which can introduce artifacts in the solution , especially on adaptive grids .",
    "we have @xmath177 but @xmath178 and hence we also have @xmath179 using the discrete forms for the gradient in eqs .",
    "( [ eqn : graddisc1 ] ) and ( [ eqn : graddisc2 ] ) we can write the isotropic second order discretization as @xmath180 a discretization scheme similar to eq .",
    "( [ eqn : graddisc ] ) is given by sethian and strain @xcite ."
  ],
  "abstract_text": [
    "<S> we implement an adaptive mesh algorithm for calculating the space and time dependence of the atomic density field during materials processing . </S>",
    "<S> our numerical approach uses the systematic renormalization - group formulation of the phase field crystal model to provide the underlying equations for the complex amplitude of the atomic density field  a quantity that is spatially uniform except near topological defects , grain boundaries and other lattice imperfections . </S>",
    "<S> our algorithm is a hybrid formulation of the amplitude equations , combining cartesian and polar decompositions of the complex amplitude . </S>",
    "<S> we show that this approach leads to an acceleration by three orders of magnitude in model calculations of polycrystalline domain formation in two dimensions . </S>"
  ]
}
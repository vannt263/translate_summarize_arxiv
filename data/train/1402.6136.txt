{
  "article_text": [
    "_ pursuit / evasion _ ( pe ) and related problems ( search , tracking , surveillance ) have been the subject of extensive research in the last fifty years and much of this research is connected to mobile robotics @xcite .",
    "when the environment is represented by a graph , the original pe  problem is reduced to a _",
    "graph game _ played between the pursuers and the evader .    in the current paper , inspired by isler and karnad s recent work @xcite",
    ", we study the role of _ information _ in _ cops - and - robber _ ( cr )  games , an important version of graph - based pe . by information",
    "we mean specifically the players _",
    "location_. for example , we expect that when the cops know the robber s location they can do better than when the robber is invisible .",
    "our goal is to make  precise the term better .",
    "reviews of  the graph theoretic cr  literature appear in @xcite . in the classical  cr  variant",
    "@xcite it is assumed that the cops always know the robber s location and vice versa .",
    "the invisible  variant , in which the cops can not see the robber ( but the robber always sees the cops ) has received less attention in the graph theoretic literature ; among the few papers which treat this case we mention @xcite and also @xcite in which _ both _ cops and robber are invisible .",
    "both the visible and invisible cr  variants are natural models for discretized robotic pe  problems ; the connection has been noted and exploited relatively recently @xcite .",
    "if it is further assumed that the robber is not actively trying to avoid capture ( the case of _ drunk _ robber ) we obtain a _",
    "one - player _ graph game ; this model has been used quite often in mobile robotics @xcite and especially ( when assuming random robber movement ) in publications such as @xcite , which utilize _ partially observable markov decision processes _ ( pomdp , @xcite ) .",
    "for a more general overview of pursuit / evasion and search problems in robotics , the reader is referred to @xcite ; some of the works cited in this paper provide a useful background to the current paper .",
    "this paper is structured as follows . in section [ sec02 ]",
    "we present preliminary material , notation and the definition of the classical  cr game ; we also introduce several node and edge cr _ variants_. in section [ sec03 ] we define rigorously the _ cop number _ and _ capture time _ for the classical cr game and the previously introduced cr  variants . in section [ sec04 ]",
    "we study the _ cost of visibility _ ( _ cov _ ) . in section [ sec05 ]",
    "we present algorithms which compute capture time and optimal strategies for several cr  variants . in section [ sec06 ]",
    "we further study cov using computational experiments . finally , in section [ sec07 ] we summarize and present our conclusions .",
    "1 .   we use the following notations for sets:@xmath1 denotes @xmath2 ; @xmath3 denotes @xmath4 ; @xmath5   $ ] denotes @xmath6 ; @xmath7 ; @xmath8 denotes the _ cardinality _ of @xmath9 ( i.e. , the number of its elements ) .",
    "2 .   a _ graph _ @xmath10 consists of a _ node set _ @xmath11 and an _ edge set _",
    "@xmath12 , where every @xmath13 has the form @xmath14 .",
    "in other words , we are concerned with finite , undirected , simple graphs ; in addition we will always assume that @xmath0 is connected and that @xmath0 contains @xmath15 nodes :  @xmath16 .",
    "furthermore , we will assume , without loss of generality , that the node set is @xmath17 .",
    "we let @xmath18 .",
    "we also define @xmath19 by @xmath20 ( it is the set of diagonal  node pairs ) .",
    "3 .   a _ directed graph _ ( _ digraph _ )",
    "@xmath10 consists of a _ node set _ @xmath11 and an _ edge set _",
    "@xmath12 , where every @xmath13 has the form @xmath21 .",
    "in other words , the edges of a digraph are _ ordered _ pairs .",
    "4 .   in graphs ,",
    "the ( _ open _ ) _ neighborhood _ of some @xmath22 is @xmath23 ; in digraphs it is @xmath24 . in both cases , the _ closed neighborhood _ of @xmath25is @xmath26   = n\\left (   x\\right )   \\cup\\left\\ {   x\\right\\ }   $ ] .",
    "5 .   given a graph @xmath27 , its _ line graph _",
    "@xmath28 is defined as follows : the node set is @xmath29 , i.e. , it has one node for every edge of @xmath0 ; the edge set is defined by having the nodes @xmath30 connected by an edge @xmath31 if and only if @xmath32 ( i.e. , if the original edges of @xmath0 are adjacent ) .",
    "we will write @xmath33 if and only if @xmath34 . note that in this _ asymptotic _ notation @xmath15 denotes the parameter with respect to which asymptotics are considered .",
    "so in later sections we will write @xmath35 , @xmath36 etc .",
    "the classical  cr  game can be described as follows .",
    "player c controls @xmath37 cops ( with @xmath38 ) and player r  controls a single robber .",
    "cops and robber are moved along the edges of a graph @xmath27 in discrete time steps @xmath39 .  at time @xmath40 , the robber s location is @xmath41 and the cops locations are @xmath42 ( for @xmath43 and @xmath44   $ ] ) . the game is played in _ turns _ ; in the 0-th turn first c places the cops on nodes of the graph and then r places the robber ; in the @xmath40-th turn , for @xmath45 , _ first _ c moves the cops to @xmath46 and _ then _ r moves the robber to @xmath47 .",
    "two types of moves are allowed :  ( a )  sliding along a single edge and ( b )  staying in place ; in other words , for all @xmath40 and @xmath48 , either @xmath49 or @xmath50 ; similarly , @xmath51 or @xmath52 .",
    "the cops win if they _",
    "capture _ the robber , i.e. , if there exist @xmath39 and @xmath44   $ ] such that @xmath53 ; the robber wins if for all @xmath39 and @xmath44   $ ] we have @xmath54 . in what follows",
    "we will describe these eventualities by the following shorthand notation : @xmath55 and @xmath56 ( i.e. , in this notation we consider @xmath46 as a _ set _ of cop positions ) .    in the classical game",
    "both c and r  are _ adversarial _ :  c plays to effect capture and r plays to avoid it .",
    "but there also exist _ drunk robber _",
    "versions , in which the robber simply performs a _ random walk _ on @xmath0 such that , for all @xmath57 we have@xmath58{ll}\\frac{1}{\\left\\vert n\\left (   v\\right )   \\right\\vert } & \\text{if and only if } u\\in n(v)\\\\ 0 & \\text{otherwise}\\end{array } \\right .   .\\label{eq022a}\\ ] ] in this case we can say that no r player is present ( or , following a common formulation , we can say that the r player is nature ) .    if an r player exists , the cops locations are always known to him ; on the other hand , the robber can be either _ visible _ ( his location is known to c ) or _",
    "invisible _ ( his location is unknown ) .",
    "hence we have four different cr  variants , as detailed in table [ table01 ] .",
    "[ c]|l|l|adversarial visible robber & av - cr + adversarial invisible robber & ai - cr + drunk visible robber & dv - cr + drunk invisible robber & di - cr +    in all of the above cr  variants both cops and robber move from node to node .",
    "this is a good model for entities ( e.g. , robots )  which move from room to room in an indoor environment .",
    "there also exist cases ( for example moving in a maze or a road network )  where it makes more sense to assume that both cops and robber move from edge to edge .",
    "we will call the classical version of the edge cr game _ edge av - cr _ ;  it has attracted attention only recently @xcite .",
    "edge ai - cr , dv - cr and di - cr variants are also possible , in analogy to the node versions listed in table [ table01 ] .",
    "each of these cases can be reduced to the corresponding node variant , with the edge game taking place on the line graph @xmath59 of @xmath0 .",
    "two graph parameters which can be obtained from the av - cr game are the _ cop number _ and the _ capture time_. in this section we will define these quantities in game theoretic terms and also consider their extensions to other cr variants . before examining each of these cr variants in detail , let us mention a particular modification which we will apply to all of them .",
    "namely , we assume that ( every variant of ) the cr game is played for an _ infinite number of rounds_. this is obviously the case if the robber is never captured ; but we also assume that , in case the robber is captured at some time @xmath60 , the game continues for @xmath61 with the following restriction :  for all @xmath62 , we have @xmath63 ( where @xmath64 is the number of cop who effected the capture)-th cop forces the robber to follow  him . ] .",
    "we will define cop number and capture time in game theoretic terms . to this end",
    "we must first define _ histories _ and _",
    "strategies_.    a particular instance of the cr  game can be fully described by the sequence of cops and robber locations ; these locations are fully determined by the c and r  moves .",
    "so , if we let @xmath65 ( resp .",
    "@xmath66 ) denote the nodes into which c ( resp .",
    "r )  places the cops ( resp .",
    "the robber )  at time @xmath40 , then a _ history _ is a sequence @xmath67 .",
    "such a sequence can have finite or infinite length ; we denote the set of all finite length histories by @xmath68 ; note that there exists an infinite number of finite length sequences . by convention @xmath69",
    "also includes the _ zero - length _ or _ null _ history , which is the _ _ empty sequence__. ] , denoted by @xmath70 .",
    "finally , we denote the set of all infinite length histories by @xmath71 .",
    "since both cops and robber are visible and the players move sequentially , av - cr is a game of _ perfect information _ ; _ _ in such a game c loses nothing by limiting himself to _ pure _",
    "( i.e. , deterministic )  _ strategies _ @xcite . a pure cop strategy is a function @xmath72 ; a pure robber strategy is a function @xmath73 . in both cases",
    "the idea is that , given a finite length history , the strategy produces the next cop or robber move , the number of cops . ]",
    "; for example , when the robber strategy @xmath74 receives the input @xmath75 , it will produce the output @xmath76 ; when it receives @xmath77 , it will produce @xmath78 and so on .",
    "we will denote the set of all legal cop strategies by @xmath79 and the set of all legal robber strategies by @xmath80 ; a strategy is legal  if it only provides moves which respect the cr  game rules .",
    "the set @xmath81 ( resp .",
    "@xmath82 ) is the set of _ memoryless _ legal cop ( resp .",
    "robber )  strategies , i.e. , strategies which only depend only on the current cops and robber positions ; we will denote the memoryless strategies by greek letters , e.g. , @xmath83 , @xmath84 etc .",
    "in other words@xmath85   , \\\\ \\sigma_{r } &   \\in\\widetilde{\\mathbf{s}}_{r}^{\\left (   k\\right )   } \\rightarrow\\left [   \\forall t : y_{t+1}=\\sigma_{r}\\left (   x_{0}y_{0}\\ldots .x_{t}y_{t}x_{t+1}\\right )   = \\sigma_{r}\\left (   y_{t}x_{t+1}\\right )   \\right ]   .\\end{aligned}\\ ] ]    it seems intuitively obvious that both c  and r  lose nothing by playing with memoryless strategies ( i.e. , computing their next moves based on the current position of the game , not on its entire history ) .",
    "this is true but requires a proof .",
    "one approach to this proof is furnished in @xcite .",
    "but we will present another proof by recognizing that the cr  game belongs to the extensively researched family of _ reachability games _ @xcite .",
    "a reachability game is played by two players ( player 0 and player 1 )  on a _ digraph _ @xmath86 ; each node @xmath87 is a _ position _ and each edge is a _ move _ ; i.e. , the game moves from node to node ( position ) along the edges of the digraph .",
    "the game is described by the tuple @xmath88 , where @xmath89 , @xmath90 and @xmath91 . for @xmath92 ,",
    "@xmath93 is the set of positions ( nodes )  from which the @xmath94-th player makes the next move ; the game terminates with a win for player 0 if and only if a move takes place into a node @xmath95 ( the _ target set _ of player 0 ) ; if this never happens , player 1 wins - th player slides the token if and only if it is currently located on a node @xmath96 ( @xmath97 ) ; player 0 wins if and only if the token goes into a node @xmath98 ; otherwise player 1 wins . ] . the following is well known @xcite .",
    "[ prp0301a]let @xmath99 be a reachability game on the digraph @xmath100 .",
    "then @xmath101 can be partitioned into two sets @xmath102 and @xmath103 such that ( for @xmath97 )  player @xmath94 has a _ memoryless _ strategy @xmath104 which is winning whenever the game starts in @xmath105 .",
    "we can convert the av - cr game with @xmath37 cops to an equivalent reachability game which is played on the _ cr  game digraph_. in this digraph every node corresponds to a _",
    "position _ of the original cr  game ; a ( directed ) edge from node @xmath106 to node @xmath107 indicates that it is possible to get from position @xmath106 to position @xmath107 in a single move .",
    "the cr  game digraph has three types of nodes .",
    "1 .   nodes of the form @xmath108 correspond to positions ( in the original cr  game ) with the cops located at @xmath109 , the robber at @xmath110 and player @xmath111 being next to move .",
    "there is single node @xmath112 which corresponds to the starting position of the game : neither the cops nor the robber have been placed on @xmath0 ; it is c s turn to move ( recall that @xmath70 denotes the empty sequence ) .",
    "3 .   finally , there exist @xmath15 nodes of the form @xmath113 : the cops have just been placed in the graph ( at positions @xmath114 ) but the robber has not been placed yet ; it is r s turn to move .",
    "let us now define@xmath115 and let @xmath116 consist of all pairs @xmath117 where @xmath118 and the move from @xmath106 to @xmath107 is legal .",
    "finally , we recognize that c s target set is @xmath119 i.e. , the set of all positions in which the robber is in the same node as at least one cop .    with the above definitions , we have mapped the classical cr  game ( played with @xmath37 cops on the graph @xmath0 ) to the reachability game @xmath120 . by theorem [ prp0301a ] , player @xmath94 ( with @xmath97 )  will have a _ winning set _ @xmath121 , i.e. , a set with the following property :  whenever the reachability game starts at some @xmath122 , then player @xmath94 has a winning strategy ( it may be the case , for specific @xmath0 and @xmath37 that either of @xmath123 , @xmath124 is empty ) .",
    "recall that in our formulation of cr  as a reachability game , player 0 is c. in reachability terms , the statement c  has a winning strategy in the classical cr  game  translates to @xmath125 @xmath123  and , for a given graph @xmath0 , the validity of this statement will in general depend on @xmath37 .",
    "it is clear that @xmath123 is increasing with @xmath37 : @xmath126 it is also also clear that @xmath127 because , if c has @xmath128 cops , he can place one in every @xmath129 and win immediately , we have @xmath130 , because from every position @xmath131 , c  can move the cops so that one cop resides in each @xmath132 , which guarantees immediate capture . ] .",
    "based on ( [ eq0341 ] )  and ( [ eq0342 ] ) we can define the _ cop number _ of @xmath0 to be the minimum number of cops that guarantee capture ; more precisely we have the following definition ( which is equivalent to the classical  definition of cop number @xcite ) .",
    "[ prp0302a]the _ cop number _ of @xmath0 is @xmath133    while a cop winning strategy @xmath134 guarantees that the token will go into ( and remain in )  @xmath135 , we still do not know how long it will take for this to happen .",
    "however , it is easy to prove that , if @xmath136 and c uses a _ memoryless _",
    "winning strategy , then no game position will be repeated until capture takes place .",
    "hence the following holds .",
    "[ prp0302b]for every @xmath0 , let @xmath137 and consider the cr  game played on @xmath0 with @xmath37 cops .",
    "there exists a a memoryless cop winning strategy @xmath83 and a number @xmath138 such that , for every robber strategy @xmath74 , c  wins in no more than @xmath139 rounds .",
    "let us now turn from winning to _ time optimal _ strategies . to define these , we first define the _ capture time _",
    ", which will serve as the cr _",
    "payoff function_.    [ prp0302d]given a graph @xmath0 , some @xmath140 and strategies @xmath141 , @xmath142 the _ av - cr capture time _ is defined by@xmath143   \\text { such that } y_{t}=x_{t}^{k}\\right\\ }   ; \\label{eq0301}\\ ] ] in case capture never takes place , we let @xmath144 .",
    "we will assume that r s _ payoff _ is @xmath145 and c s payoff is @xmath146 ( hence av - cr is a _ two - person zero - sum game _ ) .",
    "note that capture time ( i ) obviously  depends on @xmath37 and ( ii ) for a fixed @xmath37 is fully determined by the @xmath134 and @xmath74 strategies .",
    "now , following standard game theoretic practice , we define _ optimal _ strategies .",
    "[ prp0303a]for every graph @xmath0 and @xmath140 , the strategies @xmath147 and @xmath148 are a pair of _ optimal strategies _ if and only if @xmath149 the _ value _ of the av - cr game played with @xmath37 cops is the common value of the two sides of ( [ eq0302 ] ) and we denote it @xmath150 .    we emphasize that the validity of ( [ eq0302 ] ) is not known _ a priori_. c ( resp .",
    "r )  can guarantee that he loses no more than @xmath151 ( resp .",
    "gains no less than @xmath152 ) .",
    "we always have@xmath153 but , since av - cr is an _",
    "infinite _ game ( i.e. , depending on @xmath134 and @xmath74 , it can last an infinite number of turns ) it is not clear that equality holds in ( [ eq0303 ] ) and , even when it does , the existence of optimal strategies @xmath154 which achieve the value is not guaranteed .",
    "in fact it can be proved that , for @xmath137 , av - cr has both a value and optimal strategies .",
    "the details of this proof will be reported elsewhere , but the gist of the argument is the following .",
    "since av - cr  is played with @xmath137 cops , by theorem [ prp0302b ] , c  has a _ memoryless _ strategy which guarantees the game will last no more than @xmath139 turns . hence av - cr  with @xmath155 essentially is a _",
    "finite _ zero - sum two - player game ; it is well known @xcite that every such game has a value and optimal memoryless strategies . in short , we have the following .    [ prp0308a]given any graph @xmath0 and any @xmath137 , for the av - cr game there exists a pair @xmath156 of _ memoryless time optimal strategies _ such that @xmath157    hence we can define the capture time of a graph to be the value of av - cr when played on @xmath0 with @xmath158 cops .    [ prp0303]the _ adversarial visible capture time _ of @xmath0 is @xmath159 with @xmath158 .      in this game",
    "the robber is visible and performs a random walk on @xmath0 ( _ drunk _ robber )  as indicated by ( [ eq022a ] ) . in the absence of cops",
    ", @xmath47 is a markov chain on @xmath11 , with transition probability matrix @xmath160 , where for every @xmath161 we have @xmath162 in the presence of one or more cops , @xmath163 @xmath164is a _ markov decision process _ ( mdp ) @xcite with state space @xmath165 ( where @xmath166 is the _ capture state _ ) and transition probability matrix @xmath167 ( obtained from @xmath160 as shown in @xcite ) ; in other words , @xmath46 is the _ control _ variable , selected by c.    since no robber strategy is involved , the capture time on @xmath0 only depends on the ( @xmath37-cops strategy ) @xmath134 : namely : @xmath168",
    "\\text { such that } y_{t}=x_{t}^{k}\\right\\ } , \\label{eq0332}\\ ] ] which can also be written as @xmath169 where @xmath170 equals @xmath171 if @xmath47 does not belong to @xmath46 ( taken as a set of cop positions )  and 0 otherwise .",
    "since the robber performs a random walk on @xmath0 , it follows that @xmath172 is a random variable , and c wants to minimize its expected value:@xmath173 the minimization of ( [ eq0331 ] )  is a typical _ undiscounted , infinite horizon _ mdp  problem .",
    "using standard mdp  results @xcite we see that ( i ) c loses nothing by determining @xmath174 through a memoryless strategy @xmath175 and ( ii ) for every @xmath38 , @xmath176 is well defined .",
    "furthermore , for every @xmath140 there exists an optimal strategy @xmath177 which minimizes @xmath178 ; hence we have the following .    [ prp0310a]given any graph @xmath0 and @xmath140 , for the dv - cr  game played on @xmath0 with @xmath37 cops there exists a memoryless strategy @xmath179 such that @xmath180    the _ drunk visible capture time _ of @xmath0 is @xmath181 with @xmath158 .",
    "note that , even though a single cop suffices to capture the drunk robber on any @xmath0 , we have chosen to define @xmath182 to be the capture time for @xmath158 cops ; we have done this to make ( in section [ sec04 ] ) an equitable comparison between @xmath183 and @xmath182 .",
    "this is _ not _ a perfect information game , since c  can not see r s moves . hence c and",
    "r  must use _ mixed _ strategies @xmath134 , @xmath74 .",
    "a mixed strategy @xmath134 ( resp .",
    "@xmath74 ) specifies , for every @xmath40 , a conditional probability @xmath184 ( resp .",
    "@xmath185 ) according to which c ( resp .",
    "r )  selects his @xmath40-th move .",
    "let @xmath186(resp .",
    "@xmath187 ) be the set of all mixed cop ( resp .",
    "robber )  strategies .",
    "a strategy pair @xmath188 , specifies probabilities for all events @xmath189 and these induce a probability measure which in turn determines r s expected gain ( and c s expected loss ) , namely @xmath190 .",
    "let us define@xmath191 similarly to av - cr , c ( resp .",
    "r )  can guarantee an expected payoff no greater than @xmath192 ( resp .",
    "no less than @xmath193 ) .",
    "if @xmath194 , we denote the common value by @xmath195 and call it the _ value _ of the ai - cr game ( played on @xmath0 , with @xmath37 cops ) .",
    "a pair of strategies @xmath154 is called optimal if and only if @xmath196 .    in @xcite",
    "we have studied the ai - cr game and proved that it does indeed have a value and optimal strategies .",
    "we give a summary of the relevant argument ; proofs can be found in @xcite .    first , _ invisibility does not increase the cop number_. in other words , there is a cop strategy ( involving @xmath197 cops )  which guarantees bounded expected capture time for every robber strategy @xmath74 .",
    "more precisely , we have proved the following .",
    "[ prp0307]on any graph @xmath0 let @xmath198 denote the strategy in which @xmath37 cops random - walk on @xmath0 .",
    "then @xmath199    now consider the @xmath200-truncated  ai - cr@xmath164game which is played exactly as the regular  ai - cr@xmath164but lasts at most @xmath200 turns .",
    "strategies @xmath201 and @xmath202 can be used in the @xmath200-truncated game : c and r use them only until the @xmath200-th turn .",
    "let r receive one payoff unit for every turn in which the robber is not captured ; denote the payoff of the @xmath200-truncated game ( when strategies @xmath134,@xmath203 are used ) by @xmath204 .",
    "clearly @xmath205 the expected payoff of the @xmath200-truncated game is @xmath206 . because it is a _",
    "finite _ , two - person , zero - sum game , the @xmath200-truncated game has a value and optimal strategies .",
    "namely , the value is @xmath207 and there exist optimal strategies @xmath208 , @xmath209 such that @xmath210 in @xcite we use the truncated games to prove that the regular  ai - cr game has a value , an optimal c strategy and @xmath211-optimal r strategies .",
    "more precisely , we prove the following .    [ prp0308]given any graph @xmath0 and @xmath137 , the ai - cr  game played on @xmath0 with @xmath37 cops",
    "has a value @xmath212 which satisfies@xmath213 furthermore , there exists a strategy @xmath214 such that @xmath215 and for every @xmath216 there exists an @xmath217 and a strategy @xmath218 such that @xmath219    having established the existence of @xmath212 we have the following .",
    "the _ adversarial invisible capture time _ of @xmath0 is @xmath220 with @xmath158 .      in this game",
    "@xmath47 is unobservable and drunk ; call this the regular  di - cr game and also introduce the @xmath200-truncated di - cr game .",
    "both are one - player  games or , equivalently , @xmath47 is a _ partially observable mdp  _ ( pomdp ) @xcite .",
    "the target function is @xmath221 which is exactly the same as ( [ eq0331 ] ) but now @xmath47 is _ unobservable_. ( [ eq0311a ] ) can be approximated by @xmath222 the expected values in ( [ eq0311a])-([eq0312 ] )  are well defined for every @xmath134 .",
    "c must select a strategy @xmath202 which minimizes @xmath223 .",
    "this is a typical _ infinite horizon , undiscounted _",
    "pomdp  problem @xcite for which the following holds .",
    "[ prp0310b]given any graph @xmath0 and @xmath140 , for the di - cr  game played on @xmath0 with @xmath37 cops there exists a strategy @xmath224 such that @xmath225    hence we can introduce the following .    the _ drunk invisible capture time _ of @xmath0 is @xmath226 with @xmath158 .",
    "as already mentioned , every edge cr  variant can be reduced to the corresponding node variant played on @xmath59 , the line graph of @xmath0 .",
    "hence all the results and definitions of sections [ sec0301 ] - [ sec0304 ] hold for the edge variants as well .",
    "in particular , we have an edge cop number @xmath227 and capture times @xmath228 in general , all of these edge cr  parameters  will differ from the corresponding node cr parameters .",
    "as already remarked , we expect that ai - cr is more difficult ( from c s point of view ) than av - cr ( the same holds for the drunk counterparts of this game ) .",
    "we quantify this statement by introducing the _ cost of visibility _",
    "( _ cov _ ) .",
    "[ prp0401]for every @xmath0 , the _ adversarial cost of visibility _  is @xmath229 and the _ drunk cost of visibility _ is @xmath230 .",
    "clearly , for every @xmath0 we have @xmath231 and @xmath232 ( i.e. , it is at least as hard to capture an invisible robber than a visible one ) .",
    "the following theorem shows that in fact both @xmath233 and @xmath234 can become arbitrarily large . in proving the corresponding theorems",
    ", we will need the family of _ long star graphs _ @xmath235 .",
    "for specific values of @xmath236 and @xmath237 , @xmath235 consists of @xmath237 paths ( we call these _ rays _ ) each having @xmath236 nodes , joined at a central node , as shown in fig.[fig001b ] .",
    "[ prp0402]for every @xmath238 we have @xmath239 .    . in av - cr , for every @xmath238 we have @xmath240 :",
    "the cop starts at @xmath241 , the robber starts at some @xmath242 and , at @xmath243 , he is captured by the cop moving into @xmath106 ; i.e. , @xmath244 ; on the other hand , since there are at least two vertices ( @xmath245 ) , clearly @xmath246 .    .",
    "let us now show that in ai - cr we have @xmath247 .",
    "c places the cop at @xmath241 and r places the robber at some @xmath242 .",
    "we will obtain @xmath248 by bounding it from above and below .",
    "for an upper bound , consider the following c strategy . since c",
    "does not know the robber s location , he must check the leaf nodes one by one .",
    "so at every odd @xmath40 he moves the cop into some @xmath249 and at every even @xmath40 he returns to @xmath250 .",
    "note that r can not change the robber s original position ; in order to do this , the robber must pass through 0",
    "but then he will be captured by the cop ( who either is already in 0 or will be moved into it just after the robber s move ) . hence c can choose the nodes he will check on odd turns with uniform probability and _ without repetitions_. equivalently , we can assume that the order in which nodes are chosen by c is selected uniformly at random from the set of all permutations ; further , we assume that r ( who does not know this order ) starts at some @xmath251",
    ". then we have @xmath252 for a lower bound , consider the following r strategy . the robber is initially placed at a random leaf that is different than the one selected by c ( if the cop did not start at the center ) . knowing this , the best c strategy is to check ( in any order ) all leaves without repetition .",
    "if the cop starts at the center , we get exactly the same sum as for the upper bound .",
    "otherwise , we have @xmath253    . hence , for all @xmath238 we have @xmath254 .",
    "[ prp0402b]for every @xmath255 we have @xmath256 where the asymptotics is with respect to @xmath236 ; @xmath237 is considered a fixed constant .    .",
    "we will first show that , for any @xmath238 , we have @xmath257 ( recall that the parameter @xmath237 is a fixed constant whereas @xmath258 . )",
    "suppose that the cop starts on the @xmath94-th ray , at distance @xmath259 from the center ( for some constant @xmath260 $ ] ) .",
    "the robber starts at a random vertex .",
    "it follows that for any @xmath261 such that @xmath262 , the robber starts on the @xmath261-th ray with probability @xmath263 .",
    "it is a straightforward application of chernoff bounds has a binomial distribution @xmath264 , then @xmath265 for any @xmath266 .",
    "suppose the robber starts at distance @xmath267 from the center . during @xmath268 steps",
    "the robber makes in expectation @xmath269 steps towards the center , and @xmath269 steps towards the end of the ray .",
    "the probability to make during @xmath237 steps more than @xmath270 steps towards the center , say , is thus at most @xmath271 , and the same holds also by taking a union bound over all @xmath272 steps .",
    "hence , with probability at least @xmath273 he will throughout @xmath272 steps remain at distance @xmath274 from his initial position . ] to show that with probability @xmath275 the robber will not move by more than @xmath276 in the next @xmath277 steps , which suffice to finish the game .",
    "hence , the expected capture time is easy to calculate .    * with probability @xmath278 ,",
    "the robber starts on the same ray as the cop but farther away from the center .",
    "conditioning on this event , the expected capture time is @xmath279 . * with probability @xmath280 ,",
    "the robber starts on the same ray as the cop but closer to the center .",
    "conditioning on this event , the expected capture time is @xmath281 . * with probability @xmath282 ,",
    "the robber starts on different ray than the cop .",
    "conditioning on this event , the expected capture time is @xmath283 .",
    "it follows that the expected capture time is @xmath284 which is maximized for @xmath285 , giving @xmath286 .    .",
    "the initial placement for the robber is the same as in the visible variant , that is , the uniform distribution is used .",
    "however , since the robber is now invisible , c has to check all rays .",
    "as before , by chernoff bounds , with probability at least @xmath273 ( for some constant @xmath287 ) during @xmath272 steps the robber is always within distance @xmath274 from its initial position .",
    "if the robber starts at distance @xmath267 from the center , he will thus with probability at least @xmath273 not change his ray during @xmath272 steps .",
    "otherwise , he might change from one ray to the other with bigger probability , but note that this happens only with the probability of the robber starting at distance @xmath274 from the center , and thus with probability at most @xmath288 .",
    "keeping these remarks in mind , let us examine reasonable  c  strategies .",
    "it turns out there exist three such .    *",
    "( ii.1 ) * suppose c starts at the end of one ray ( chosen arbitrarily ) , goes to the center , and then successively checks the remaining rays without repetition , with probability at least @xmath289 , the robber will be caught .",
    "if the robber does not switch rays ( and is therefore caught ) , the capture time is calculated as follows :    * with probability @xmath263 , the robber starts on the same ray as the cop . conditioning on this event , the expected capture time is @xmath290 . * with probability @xmath263 ,",
    "the robber starts on the @xmath261-th ray visited by the cop .",
    "conditioning on this event , the expected capture time is @xmath291 .",
    "( @xmath236 steps are required to move from the end of the first ray to the center , @xmath292 steps are ` wasted ' to check @xmath293 rays , and @xmath294 steps are needed to catch the robber on the @xmath261-th ray , on expectation . )    hence , conditioned under not switching rays , the expected capture time in this case is @xmath295 otherwise , if the robber is not caught , c just randomly checks rays : starting from the center , c chooses a random ray , goes until the end of the ray , returns to the center , and continues like this , until the robber is caught .",
    "the expected capture time in this case is @xmath296 since this happens with probability @xmath288 , the contribution of the case where the robber switches rays is @xmath276 , and therefore for this strategy of @xmath297 , the expected capture time is @xmath298 * ( ii.2 ) * now suppose @xmath297 starts at the center of the ray , rather than the end , and checks all rays from there . by the same arguments as before , the capture time is@xmath299 which is worse than in the case when starting at the end of a ray .",
    "* ( ii.3 ) * similarly , suppose the cop starts at distance @xmath300 from the center , for some @xmath260 $ ] .",
    "if he first goes to the center of the ray , and then checks all rays ( suppose the one he came from is the last to be checked ) , then the capture time is @xmath301 which is minimized for @xmath302 . and",
    "if c goes first to the end of the ray , and then to the center , the capture time is @xmath303 which for @xmath304 is also minimized for @xmath302 ( in fact , for @xmath305 the numbers are equal ) .    in short , the smallest capture time is achieved when c starts at the end of some ray and therefore @xmath306    .",
    "it follows that for all @xmath255 we have @xmath307 completing the proof .",
    "the cost of visibility in the edge cr  games is defined analogously to that of node games .",
    "[ prp0403]for every @xmath0 , the _ edge adversarial cost of visibility _ is @xmath308 and the _ edge drunk cost of visibility _ is defined as @xmath309 .    clearly , for every @xmath0 we have @xmath310 and @xmath311 .",
    "the following theorems show that in fact both @xmath312 and @xmath313 can become arbitrarily large .",
    "to prove these theorems we will use the previously introduced star graph @xmath314 and its line graph which is the clique @xmath315 .",
    "these graphs are illustrated in figure [ fig004a ] for @xmath316 .",
    "[ prp0404]for every @xmath255 we have @xmath317 .",
    "we have @xmath318 and , since @xmath304 , clearly @xmath319 .",
    "let us now compute @xmath320 .    for an upper bound on @xmath320 , c might just move to a random vertex .",
    "if the robber stays still or if he moves to a vertex different from the one occupied by c , he will be caught in the next step with probability @xmath321 , and thus an upper bound on the capture time is @xmath322 .    for a lower",
    "bound , suppose that the robber always moves to a randomly chosen vertex , different from the one occupied by @xmath297 , and including the one occupied by him now ( that is , with probability @xmath321 he stands still , and after his turn , he is with probability @xmath321 at each vertex different from the vertex occupied by @xmath297 .",
    "hence @xmath297 is forced to move , and since he has no idea where to go , the best strategy is also to move randomly , and the robber will be caught with probability @xmath321 , yielding a lower bound on the capture time of @xmath322 . therefore @xmath323    hence @xmath324    [ prp0404b]for every @xmath255 we have @xmath325 .",
    "this is quite similar to the adversarial case .",
    "we have @xmath326",
    ". clearly we have @xmath327 ( with probability @xmath328 the robber selects the same vertex to start with as the cop and is caught before the game actually starts ; otherwise is caught in the first round ) .    for @xmath329 ,",
    "it is clear that the strategy of constantly moving is best for the cop , as in this case there are two chances to catch the robber ( either by moving towards him , or by afterwards the robber moving onto the cop ) . it does not matter where he moves to as long as he keeps moving , and we may thus assume that he starts at some vertex @xmath107 and moves to some other vertex @xmath330 in the first round",
    ", then comes back to @xmath107 and oscillates like that until the end of the game .",
    "when the cop moves to another vertex , the probability that the robber is there is @xmath321 .",
    "if he is still not caught , the robber moves to a random place , thereby selecting the vertex occupied by the cop with probability @xmath321 .",
    "hence , the probability to catch the robber in one step is @xmath331 .",
    "thus , this time the capture time is a geometric random variable with probability of success equal to @xmath332 .",
    "we get @xmath333 and so @xmath334 which can become arbitrarily large by appropriate choice of @xmath237 .",
    "for graphs of relatively simple structure ( e.g. , paths , cycles , full trees , grids ) capture times and optimal strategies can be found by analytical arguments @xcite . for more complicated graphs ,",
    "an algorithmic solution becomes necessary . in this section",
    "we present algorithms for the computation of capture time in the previously introduced node cr variants .",
    "the same algorithms can be applied to the edge variants by replacing @xmath0 with @xmath59 .",
    "the av - cr capture time @xmath335 can be computed in polynomial time .",
    "in fact , stronger results have been presented by hahn and macgillivray ; in @xcite they present an algorithm which , given @xmath37 , computes for every @xmath336 the following :    1 .",
    "@xmath337 , the optimal game duration when the cop / robber configuration is @xmath338 and it is c s turn to play ; 2 .",
    "@xmath339 , the optimal game duration when the cop / robber configuration is @xmath338 and it is r s turn to play . , there exist @xmath340 such that @xmath341 ; hahn and macgillivray s algorithm computes this correctly , as well . ]",
    "the av - cr capture time can be computed by @xmath342 ; the optimal search strategies @xmath343 , @xmath344 can also be easily obtained from the _ optimality equations _ , as will be seen a little later .",
    "we have presented in @xcite an implementation of hahn and macgillivray s algorithm , which we call caar ( cops against adversarial robber ) . below",
    "we present the algorithm for the case of a single cop ( the generalization for more than one cop is straightforward ) .    -",
    "* input * : @xmath10    ` 01for all ` @xmath345    ` 02`@xmath346    ` 03`@xmath347    ` 04endfor `    ` 05for all ` @xmath348    ` 06`@xmath349    ` 07`@xmath350    ` 08endfor `    ` 09`@xmath351    ` 10while ` @xmath352    ` 11for all ` @xmath348    ` 12`@xmath353   } r^{\\left (   i-1\\right )   } \\left ( x^{\\prime},y\\right )   $ ]    ` 13`@xmath354   } c^{\\left (   i\\right )   } \\left ( x , y^{\\prime}\\right )   $ ]    ` 14endfor `    ` 15if ` @xmath355 ` and`@xmath356    ` 16break `    ` 17endif `    ` 18`@xmath357    ` 19endwhile `    ` 20`@xmath358    ` 21`@xmath359    * * output * * ` : ` @xmath297 ` , ` @xmath360    -    the algorithm operates as follows . in lines ` 01 - 08 ` @xmath361 and @xmath362 are initialized to @xmath363 , except for diagonal  positions @xmath345 ( i.e. , positions with @xmath364 ) for which we obviously have @xmath365 . then a loop is entered ( lines ` 10 - 19 ` ) in which @xmath366 is computed ( line ` 12 ` ) by letting the cop move to the position which achieves the smallest capture time ( according to the currently available estimate @xmath367 ) ; @xmath368 is computed similarly in line ` 13 ` , looking for the largest capture time .",
    "this process is repeated until no further changes take place , at which point the algorithm exits the loop and terminates . ] .",
    "it has been proved in @xcite that , for any graph @xmath0 and any @xmath140 , caar  always terminates and the finally obtained @xmath369 pair satisfies the _ optimality equations _ @xmath370   } r\\left (   x^{\\prime},y\\right ) , \\label{eq0502}\\\\ \\forall\\left (   x , y\\right )    &   \\in v_{d}^{2}:r\\left (   x , y\\right ) = 0;\\quad\\forall\\left (   x , y\\right )   \\in v^{2}-v_{d}^{2}:r\\left (   x , y\\right ) = 1+\\max_{y^{\\prime}\\in n\\left [   y\\right ]   } c\\left (   x , y^{\\prime}\\right ) .\\label{eq0504}\\ ] ] the optimal memoryless strategies @xmath371 , @xmath372 can be computed for every position @xmath338 by letting @xmath373 ( resp .",
    "@xmath374 ) be a node @xmath375 $ ] ( resp .",
    "$ ] ) which achieves the minimum in ( [ eq0502 ] ) ( resp .",
    "maximum in ( [ eq0504 ] ) ) .",
    "the capture time @xmath335 is computed from@xmath377      for any given @xmath37 , _ value iteration _  can be used to determine both @xmath378 and the optimal strategy @xmath379 ; one implementation is our cadr  ( cops against drunk robber ) algorithm @xcite which is a typical value - iteration @xcite mdp algorithm ; alternatively , cadr can be seen as an extension of the caar idea to the dv - cr .",
    "below we present the algorithm for the case of a single cop ( the generalization for more than one cops is straightforward ) .    -",
    "* input * : @xmath10 , @xmath211    ` 01 for all ` @xmath345    ` 02 ` @xmath380    ` 03 endfor `    ` 04 for all ` @xmath381    ` 05 ` @xmath382    ` 06 endfor `    ` 07 ` @xmath351    ` 08 while ` @xmath352    ` 09for all ` @xmath381    ` 10`@xmath353   } \\sum_{y^{\\prime}\\in v}p\\left ( \\left (   x^{\\prime},y\\right )   \\rightarrow\\left (   x^{\\prime},y^{\\prime}\\right ) \\right )   c^{\\left (   i-1\\right )   } \\left (   x^{\\prime},y^{\\prime}\\right )   $ ]    ` 11endfor `    ` 12if ` @xmath383    ` 13break `    ` 14endif `    ` 15`@xmath357    ` 16 endwhile `    ` 17 ` @xmath358    * * output * * ` : ` @xmath297    -    the algorithm operates as follows ( again we use @xmath337 to denote the optimal expected game duration when the game position is @xmath384 ) . in lines ` 01 - 06 ` @xmath385 is initialized to @xmath363 , except for diagonalpositions @xmath386 . in the main loop",
    "( lines ` 08 - 16 ` ) @xmath387 is computed ( line ` 10 ` ) by letting the cop move to the position which achieves the smallest expected capture time ( @xmath388 in line ` 10 ` indicates the transition probability from@xmath389 to @xmath390 ) .",
    "this process is repeated until the maximum change @xmath391 is smaller than the _ termination criterion _ @xmath211 , at which point the algorithm exits the loop and terminates .",
    "this is a typical _ value iteration _ mdp algorithm @xcite ; the convergence of such algorithms has been studied by several authors , in various degrees of generality @xcite . a simple yet strong result , derived in @xcite , uses the concept of _ proper _ strategy : a strategy is called proper if it yields finite expected capture time .",
    "it is proved in @xcite that , if a proper strategy exists for graph g , then cadr - like algorithms converge . in the case of dv - cr",
    "we know that c has a proper strategy : it is the random walking strategy @xmath392 mentioned in theorem [ prp0307 ] .",
    "hence cadr converges and in the limit , @xmath393 satisfies the _ optimality equations _",
    "@xmath394   } \\sum p\\left (   \\left (   x^{\\prime } , y\\right )   \\rightarrow\\left (   x^{\\prime},y^{\\prime}\\right )   \\right )   c\\left ( x^{\\prime},y^{\\prime}\\right )   .\\ ] ] the optimal memoryless strategy @xmath371 can be computed for every position @xmath338 by letting @xmath395 be a node @xmath396   $ ] ( resp .",
    "@xmath376 $ ] ) which achieves the minimum in ( [ eq0502 ] ) ( resp .",
    "maximum in ( [ eq0504 ] ) ) .",
    "the capture time @xmath397 is computed from@xmath398        we have not been able to find an efficient algorithm for solving the ai - cr game . several algorithms for _ imperfect information stochastic games _ could be used to this end but we have found that they are practical only for very small graphs .      in the case of the drunk invisible robber we are also using a game tree search algorithm with pruning , for which some analytical justification can be provided .",
    "we call this the _ pruned cop search _ ( pcs ) algorithm . before presenting the algorithm we will introduce some notation and then prove a simple fact about expected capture time .",
    "we limit ourselves to the single cop case , since the extension to more cops is straightforward .",
    "we let @xmath399 be an infinite history of cop moves .",
    "letting @xmath40 being the current time step , the probability vector @xmath400 contains the probabilities of the robber being in node @xmath401 or in the _ capture state _",
    "@xmath166 ; more specifically :  @xmath402   $ ] and @xmath403 .",
    "hence @xmath400 depends ( as expected ) on the _ finite _ cop history @xmath404 .",
    "the expected capture time is denoted by @xmath405 ; the conditioning is on the infinite cop history .",
    "the pcs  algorithm works because @xmath406 can be approximated from a finite part of @xmath407 , as explained below .",
    "we have @xmath408 @xmath407  in the conditioning is the _",
    ". however , for every @xmath40 we have@xmath410 let us define @xmath411   = \\sum_{\\tau=0}^{t}\\left [   1-p_{n+1}\\left (   \\tau\\right )   \\right ]   , \\ ] ] where @xmath412 is the probability that the robber is in the _ capture state _",
    "@xmath166 at time @xmath413 ( the dependence on @xmath414 is suppressed , for simplicity of notation ) .",
    "then for all @xmath40 we have @xmath415 update ( [ eq0512 ] ) can be computed using only the previous cost @xmath416 and the ( previously computed )  probability vector @xmath417 . while @xmath418 , we hope that ( at least for the good  histories ) we have @xmath419 this actually works well in practice .",
    "the pcs algorithm is given below in pseudocode .",
    "we have introduced a structure @xmath420 with fields @xmath421 , @xmath422 , @xmath423 .",
    "also we denote concatenation by the @xmath424 symbol , i.e. , @xmath425 .    -",
    "* input * : @xmath10 ` , ` @xmath75 ` , ` @xmath426 ` , ` @xmath211    ` 01  ` @xmath427    ` 02  ` @xmath428 , @xmath429 , @xmath430    ` 03  ` @xmath431    ` 04  ` @xmath432    ` 05  while ` @xmath352    ` 06`@xmath433    ` 07for all ` @xmath434    ` 08`@xmath435 ` , ` @xmath436 ` , ` @xmath437    ` 09for all ` @xmath438   $ ]    ` 10`@xmath439    ` 11`@xmath440    ` 12`@xmath441    ` 13`@xmath442 ` , ` @xmath443 ` , ` @xmath444    ` 14`@xmath445    ` 15endfor `    ` 16endfor `    ` 17`@xmath446    ` 18`@xmath447=\\mathbf{best}(\\mathbf{s})$ ]    ` 19if `",
    "@xmath448    ` 20break `    ` 21else `    ` 22`@xmath449    ` 23`@xmath450    ` 24endif `    ` 25  endwhile `    * * output * * ` : ` @xmath451 ` , ` @xmath452 ` . `    -    the pcs  algorithm operates as follows . at initialization ( lines ` 01 - 04 ` ) , we create a single @xmath420 structure ( with @xmath421 being the initial cop position , @xmath422 the initial , uniform robber probability and @xmath430 ) which we store in the set @xmath453 . then we enter the main loop ( lines ` 05 - 25 ` ) where we pick each available cop sequence @xmath407 of length @xmath40 ( line ` 08 ` ) .",
    "then , in lines ` 09 - 15 ` we compute , for all legal extensions @xmath439 ( where @xmath438   $ ] ) of length @xmath454 ( line ` 10 ` ) , the corresponding @xmath455 ( line ` 11 ` )  and @xmath456 ( by the subroutine @xmath457 at line ` 12 ` ) .",
    "we store these quantities in @xmath458 which is placed in the temporary storage set @xmath459 ( lines ` 13 - 14 ` ) . after exhausting all possible extensions of length @xmath454",
    ", we prune the temporary set @xmath460 , retaining only the @xmath461 best cop sequences ( this is done in line ` 17 ` by the subroutine * prune * which computes best  in terms of smallest @xmath462 ) . finally , the subroutine @xmath463 in line ` 18 ` computes the overall smallest expected capture time @xmath464 .",
    "the procedure is repeated until the termination criterion @xmath448 is satisfied .",
    "as explained above , the criterion is expected to be always eventually satisfied because of ( [ eq0513 ] ) .",
    "we now present numerical computations of the drunk cost of visibility for graphs which are not amenable to analytical computation with the caar algorithm , we do not have an efficient algorithm to compute @xmath465 ; hence we can not perform experiments on @xmath466 .",
    "the difficulty with @xmath465 is that ai - cr is a stochastic game of imperfect information ; even for very small graphs , one cop and one robber , ai - cr  involves a state space with size far beyond the capabilities of currently available stochastic games algorithms ( see @xcite ) . ] . in section [ sec0601 ]",
    "we deal with node games and in section [ sec0602 ] with edge games .      since @xmath467",
    ", we use the cadr algorithm to compute @xmath468 and the pcs algorithm to compute @xmath469 .",
    "we use graphs @xmath0 obtained from _ indoor environments _ , which we represent by their _",
    "floorplans_. in fig .",
    "[ fig060100 ] we present a floorplan and its graph representation .",
    "the graph is obtained by decomposing the floorplan into convex _ cells _ , assigning each cell to a node and connecting nodes by edges whenever the corresponding cells are connected by an open space .",
    "we have written a script which , given some parameters , generates random floorplans and their graphs .",
    "every floorplan consists of a rectangle divided into orthogonal rooms .",
    "if each internal room were connected to its four nearest neighbors we would get an @xmath470 grid @xmath471 .",
    "however , we randomly generate a spanning tree @xmath472 of @xmath471 and initially introduce doors only between rooms which are connected in @xmath472 . our final graph @xmath0",
    "is obtained from @xmath472 by iterating over all missing edges and adding each one with probability @xmath473   $ ] .",
    "hence each floorplan is characterized by three parameters :  @xmath236 , @xmath237 and @xmath474 .",
    "we use the following pairs of @xmath475 values :  ( 1,30 ) , ( 2,15 ) , ( 3,10 ) , ( 4,7 ) , ( 5,6 ) .",
    "four of these pairs give a total of 30 nodes and the pair ( @xmath476 , @xmath477 ) gives @xmath478 nodes ; as @xmath479 increases , we progress from a path to a nearly square grid . for each @xmath475 pair",
    "we use five @xmath474 values : 0.00 , 0.25 , 0.50 , 0.75 , 1.00 ; note the progression from a tree ( @xmath480 )  to a full grid ( @xmath481 ) .",
    "for each triple @xmath482 we generate 50 floorplans , obtain their graphs and for each graph @xmath0 we compute @xmath397 using cadr , @xmath483 using pcs and @xmath484 ; finally we average @xmath234 over the 100 graphs . in fig .",
    "[ fig060101 ] we plot @xmath397 as a function of the probability @xmath474 ; each plotted curve corresponds to an @xmath475 pair . similarly , in fig .",
    "[ fig060102 ] we plot @xmath485 and in fig .",
    "[ fig060103 ] we plot @xmath486 .",
    "we can see in fig .",
    "[ fig060101]-[fig060102 ] that both @xmath487 and @xmath469 are usually decreasing functions of the @xmath479 ratio .",
    "however the cost of visibility @xmath234 _ increases _ with @xmath479 .",
    "this is due to the fact that , when the @xmath479 ratio is low , @xmath0 is closer to a path and there is less difference in the search schedules and capture times between dv - cr and di - cr . on the other hand , for high @xmath479 ratio , @xmath0 is closer to a grid , with a significantly increased ratio of edges to nodes ( as compared to the low @xmath479 , path - like instances ) .",
    "this , combined with the loss of information ( visibility ) , results in @xmath488 being an increasing function of @xmath479 .",
    "the increase of @xmath489 with @xmath474 can be explained in the same way , since increasing @xmath490 implies more edges and this makes the cops task harder .",
    "next we deal with @xmath491 .",
    "we use graphs @xmath0 obtained from _",
    "mazes _ such as the one illustrated in fig .",
    "[ fig060200 ] .",
    "every _ corridor _ of the maze corresponds to an edge ; corridor intersections correspond to nodes .",
    "the resulting graph @xmath0 is also depicted in fig.[fig060200 ] . from @xmath0 we obtain the line graph @xmath492 , to which we apply cadr  to compute @xmath493 and pcs to compute @xmath494 .",
    "we use graphs of the same type as the ones of section [ sec0601 ] but we now focus on the edge - to - edge movements of cops and robber . hence from every @xmath0 ( obtained by a specific @xmath495 triple )",
    "we produce the line graph @xmath492 , for which we compute @xmath496 using the cadr and pcs algorithms .",
    "once again we generate 50 graphs and present average @xmath397 , @xmath483 and @xmath234 results in figures [ fig060201]-[fig060203 ] .",
    "these figures are rather similar to figures [ fig060101]-[fig060103 ] , except that the increase of @xmath497 as a function of @xmath479 is greater than that of @xmath489 .",
    "this is due to the fact that @xmath492 has more nodes and edges than @xmath0 , hence the loss of visibility makes the edge game significantly harder than the node game .",
    "there is one exception to the above remarks , namely the case @xmath498 ; in this case both @xmath0 and @xmath492 are paths and @xmath489 is essentially equal to @xmath499 ( as can be seen by comparing figures [ fig060103 ] and [ fig060203 ] ) .",
    "in this paper we have studied two versions of the cops and robber game : the one is played on the nodes of a graph and the other played on the edges . for each version , we studied four variants , obtained by changing the visibility and adversariality assumptions regarding the robber ; hence we have a total of eight cr games . for each of these we have defined _ rigorously _ the corresponding optimal capture time , using game theoretic and probabilistic tools .    then , for the node games we have introduced the adversarial cost of visibility @xmath500 and the drunk cost of visibility @xmath501 .",
    "these ratios quantify the increase in difficulty of the cr  game when the cop is no longer aware of the robber s position ( this situation occurs often in mobile robotics ) .",
    "we have studied analytically @xmath504 and @xmath505 and have established that both can get arbitrarily large .",
    "we have established similar results for @xmath506 and @xmath507 .",
    "in addition , we have studied @xmath234 and @xmath507 by numerical experiments which support both the game theoretic results of the current paper and the analytical computations of capture times presented in @xcite .",
    "dariusz dereniowski , danny dyer , ryan  m tifenbach , and boting yang , _ zero - visibility cops and robber game on a graph _ , frontiers in algorithmics and algorithmic aspects in information and management , springer , 2013 , pp .",
    "175186 .",
    "h.  lau , s.  huang , and g.  dissanayake , _ probabilistic search for a moving target in an indoor environment _ , intelligent robots and systems , 2006 ieee / rsj international conference on , ieee , 2006 , pp .",
    "33933398 .",
    "littman , a.r .",
    "cassandra , and l.p .",
    "kaelbling , _ efficient dynamic - programming updates in partially observable markov decision processes _ , tech .",
    "report cs-95 - 19 , comp .",
    "science dep .",
    ", brown university , 1996 .",
    "a.  sarmiento , r.  murrieta , and s.a .",
    "hutchinson , _ an efficient strategy for rapidly finding an object in a polygonal world _ , intelligent robots and systems , 2003.(iros 2003 ) . proceedings .",
    "2003 ieee / rsj international conference on , vol .  2 , ieee , 2003 , pp ."
  ],
  "abstract_text": [
    "<S> the _ cops - and - robber _ ( cr )  game has been used in mobile robotics as a discretized model ( played on a graph @xmath0 ) of _ pursuit / evasion _ problems . </S>",
    "<S> the classic  cr version is a _ perfect information game _ : the cops ( pursuer s ) location is always known to the robber ( evader ) and vice versa . </S>",
    "<S> many variants of the classic game can be defined : the robber can be _ </S>",
    "<S> invisible _ and also the robber can be either _ adversarial _ ( tries to avoid capture ) or _ drunk _ ( performs a random walk ) . furthermore , the cops and robber can reside in either nodes or edges of @xmath0 . </S>",
    "<S> several of these variants are relevant as models or robotic pursuit / evasion . in this paper </S>",
    "<S> , we first define carefully several of the variants mentioned above and related quantities such as the _ cop number _ and the _ capture time_. then we introduce and study the _ cost of visibility _ </S>",
    "<S> ( _ cov _ ) , a quantitative measure of the increase in difficulty ( from the cops point of view ) when the robber is invisible . </S>",
    "<S> in addition to our theoretical results , we present algorithms which can be used to compute capture times and cov of graphs which are analytically intractable . finally , we present the results of applying these algorithms to the numerical computation of cov . </S>"
  ]
}
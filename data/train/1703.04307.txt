{
  "article_text": [
    "we consider a general problem of adding a budgeted set of new edges to a graph , that each new edge connects an existing node in the graph to a newly introduced _ target node _ , so that the target node can be _ discovered _ easily by existing nodes in the new graph .",
    "we refer to this problem as the target node _",
    "discoverability optimization problem _ in networks",
    ".    * motivations . *",
    "the problem of optimizing node discoverability in networks appears in a wide range of applications .",
    "for example , a youtube video maker may wish his videos to have a large audience and click traffic . in youtube , each video is related to a set of recommended videos , and the majority of youtube videos are discovered and watched by viewers following related videos  @xcite .",
    "hence , if a video maker could make his video related to a set of properly chosen videos , his video may have more chance to be discovered and watched .",
    "this task is known as the _ related video optimization problem _",
    "@xcite , and in practice , a video maker indeed has some ability to make his video related to some other videos through writing proper descriptions , choosing the right title , adding proper meta - data and keywords  @xcite . in this application",
    ", we can build a video network , where a node represents a video , and a directed edge represents one video relating to another .",
    "then , making a target video related to a set of existing videos is equivalent to adding a set of edges from existing nodes to the target node in the video network .",
    "therefore , optimizing related videos of a target video can be formulated as a target node discoverability optimization problem in networks .    as another application ,",
    "let us consider the advertising service provided by many retail websites , such as amazon  @xcite and taobao  @xcite .",
    "a major concern of product sellers is that whether customers could easily discover their products on these retail websites  @xcite .",
    "one important factor that affects the discoverability of an item in a retail website is _",
    "what other items detail pages display this item_. for example , on amazon , a seller s product could be displayed on a related product s detail page in the list `` sponsored products related to this item '' .",
    "if an item was displayed on several popular or best selling products detail pages , the item would be easily discovered by many customers , and have good sells .",
    "a product seller has some control to decide how strong his item is related to some other items , e.g. , a book writer on amazon can choose proper keywords or features to describe her book , set her interests , other similar books , and cost - per - click bid  @xcite . in this application",
    ", we can build an item network , where a node represents an item , and a directed edge represents one item relating to another .",
    "therefore , optimizing the discoverability of an item by relating to other proper items in a retail website can be formulated as the target node discoverability optimization problem in networks .    in the third application",
    ", we consider the message forwarding processes on a follower network , such as tweet re - tweeting on twitter  @xcite or status re - posting on douban  @xcite . in a follower network , a person ( referred to as a _ follower _ ) could follow another person ( referred to as a _ followee _ ) , and then the follower could receive messages posted or re - posted by the followee . in this way",
    ", messages diffuse on a follower network through forwarding by users ( with direction from a followee to his followers ) . hence , what followees a person chooses to follow determines what messages he could receive and how soon the messages could arrive at the person . the problem of choosing an optimal set of followees for a new user to maximize information coverage and minimize time delay is known as the _ whom - to - follow problem _  @xcite on a follower network . on the other hand , if we consider this problem from the perspective of a message , we are actually optimizing the discoverability that a message could `` _ _ discover _ _ '' the new user , through adding new edges in the follower network .",
    "therefore , the whom - to - follow problem could also be formulated as the target node discoverability optimization problem in networks .",
    "* present work . * in this work , we study the general problem of target node discoverability optimization in networks .",
    "we will formally define a node s discoverability , and propose a unified framework that could address this problem efficiently over large networks .",
    "* measuring node discoverability by random walks . * to quantify the target node s discoverability , we propose two measures based on random walks  @xcite .",
    "more specifically , we measure discoverability of the target node by analyzing a collection of random walks that start from existing nodes in the network , and we state ( 1 ) the probability that a random walk could finally hit the target node , and ( 2 ) the average number of steps that a random walk finally reaches the target node . intuitively ,",
    "if a random walk starting from a node @xmath0 could reach the target node with high probability , and use few steps on average , then we say that the target node can be easily discovered by node @xmath0 .",
    "using random walks to measure discoverability is general , because many real world processes are suitable to be modeled as random walks , e.g. , user watching youtube videos by following related videos  @xcite , people s navigation and searching behaviors on the internet  @xcite and peer - to - peer networks  @xcite , and some diffusion processes such as letter forwarding in milgram s small - world experiment  @xcite .",
    "* efficient optimization via estimating - and - refining . * the optimization problem asks us to add a budgeted set of new edges to the graph that each new edge connects an existing node to the target node , to optimize the target node s discoverability with regard to the two random walk measures .",
    "the optimization problem is np - hard , which inhibits us to find the optimal solutions for a large network . while the two objectives are proved to be submodular and supermodular , respectively .",
    "the optimization problem thus lends itself to be approximately optimized by a greedy algorithm  @xcite .",
    "the computational complexity of the greedy algorithm is dominated by the time cost of an _ oracle call _ ,",
    "i.e. , calculating the marginal gain of a given node . to scale up the oracle call over large networks , we propose an efficient _ estimation - and - refinement _ approach that is empirically demonstrated to be hundreds of times faster than a naive approach based on dynamic programming .",
    "* contributions . *",
    "we make following contributions in this work :    * we formally define a node s discoverability in networks , and formulate the target node discoverability optimization problem .",
    "the problem is general and appears in a wide range of practical applications ( ) .",
    "* we prove the objectives satisfying submodular and supermodular properties , respectively .",
    "we propose an efficient estimation - and - refinement approach to implement the oracle call when using the greedy algorithm to find quality - guaranteed solutions .",
    "our implementation is hundreds of times faster than a naive implementation based on dynamic programming ( ) .",
    "* we conduct extensive experiments on real networks to verify our method .",
    "the experimental results demonstrate the proposed estimation - and - refinement approach has a good trade off between estimation accuracy and computational efficiency , which enables us to handle large networks with millions of nodes / edges ( ) .",
    "in this section , we first formally define a node s discoverability .",
    "then , we formulate the target node discoverability optimization problem .",
    "finally , we analyze several properties of the proposed discoverability measures .",
    ".notations[tab : notations ] [ cols=\"^,<\",options=\"header \" , ]      in the first experiment , we evaluate the d - ap and d - ht estimation accuracy by different methods .",
    "we set @xmath1 , i.e. , connect every node in the graph to target node @xmath2 .",
    "this corresponds to the case that @xmath3 is maximum and @xmath4 is minimum .",
    "dp is an exact method which hence allows us to obtain the ground truth on each graph .",
    "we quantify the estimation accuracy by normalized rooted mean squared error ( nrmse ) .",
    "nrmse of an estimator @xmath5 given ground truth @xmath6 is defined by : nrmse@xmath7 . instead of evaluating the nrmse of @xmath8 or @xmath9",
    ", we propose to use the following form of nrmse : avg - nrmse@xmath10 , and avg - nrmse@xmath11 .",
    "avg - nrmse is a stricter metric than nrmse , and can distinguish the performance of different methods more clearly according to our experiments .",
    "+     +    we conduct experiments on the hepth and gowalla graphs respectively , and show the ratios between estimates and ground truths versus the number of walks per node in figs .  [",
    "fig : fap_nrmse ] and  [ fig : fht_nrmse ] .",
    "we observe that both the rw estimation approach and the estimation - and - refinement approach provide good estimates about d - ap and d - ht ; the estimates become more accurate when the number of walks per node increases .",
    "these results demonstrate the unbiasedness of the two methods .    to compare the estimation accuracy of different methods",
    ", we also depict the avg - nrmse in figs .",
    "[ fig : fap_nrmse ] and  [ fig : fht_nrmse ] .",
    "the nrmse curves clearly show the difference of performance of the two methods .",
    "first , we observe that when the number of walks per node increases , the estimation error of each method decreases , indicating that the estimates become more accurate .",
    "second , the estimation - and - refinement approach can provide more accurate estimates than the rw estimation approach .",
    "when the refinement depth @xmath12 increases , we could obtain even better estimates of d - ap and d - ht .",
    "these results demonstrate that the estimation - and - refinement approach can provide more accurate estimates than the rw estimation approach .      in the second experiment",
    ", we evaluate the oracle call accuracy and efficiency implemented by different methods . here",
    ", oracle call accuracy is still measured by avg - nrmse , and oracle call efficiency is measured by speedup , i.e. , @xmath13 to evaluate the estimation accuracy , we randomly sample @xmath14 nodes as the benchmark nodes from the hepth and gowalla graphs , respectively .",
    "we then calculate the marginal gain ground truth of these benchmark nodes using dp , and we set @xmath15 .",
    "the avg - nrmse and speedup of different methods are depicted in figs .",
    "[ fig : gain_ap ] and  [ fig : gain_ht ] .",
    "+     +    from the avg - nrmse curves , we observe similar results as we estimate d - ap and d - ht in the previous experiment : ( 1 ) when the number of walks per node increases , every method obtains more accurate estimates ; ( 2 ) the estimation - and - refinement approach can obtain more accurate estimates than the rw estimation approach , and the estimation accuracy improves when refinement depth @xmath12 increases .    from the speedup curves",
    ", we can observe that both the rw estimation approach and the estimation - and - refinement approach are significantly more efficient than dp . on average ,",
    "the two estimation approaches are hundreds of times faster than dp .",
    "we also observe something interesting : when we increase the refinement depth , the oracle call efficiency decreases in general , as expected ; however , we observe that the estimation - and - refinement approach with @xmath16 is actually more efficient than the rw estimation approach .",
    "this is because that when we use the estimation - and - refinement approach , we simulate shorter walks , and this could slightly improve the oracle call efficiency . as we further increase refinement depth to @xmath17 , because we need to expand a large part of a node s neighborhood , the estimation - and - refinement approach becomes slower than the rw estimation .",
    "equipped with the verified oracle call implementations , we are now ready to solve the node discoverability optimization problem using the greedy algorithm . in the third experiment , we run the greedy algorithm on each of the four graphs , and choose a subset of connection sources @xmath18 to optimize the target node s discoverability , i.e. , maximizing d - ap , and minimizing d - ht . for each graph , we simulate @xmath14 walks from each node , and we use the estimation - and - refinement approach with @xmath16 to implement the oracle call .",
    "we set edge weight @xmath19 if node @xmath20 is connected to target node @xmath2 .",
    "to better understand the performance of the greedy algorithm , we compare the results with two baseline methods : ( 1 ) a random approach that randomly pick connection sources from the graph ; and ( 2 ) a top - degree approach that always choose the top-@xmath21 largest degree nodes from the graph as connection sources .",
    "we show the results in figs .",
    "[ fig : greedy_ap ] and  [ fig : greedy_ht ] .",
    "+     +    we can clearly see that the greedy algorithm indeed performs much better than the two baseline methods on all the four graphs : the greedy algorithm could choose connection sources with larger d - ap , and smaller d - ht . in general , the degree approach is better than random approach , however , we also observe an exception on the hepth graph where the random approach is slightly better than the degree approach .",
    "this section is devoted to review some related literature .",
    "our work is based on the classic results of absorbing markov chains  @xcite , and the absorbing markov chain is also used in several recent work  @xcite .",
    "the work most related to ours is the optimal tagging problem  @xcite , where the goal is to choose a subset of tags for an item in an item - tag network , so that the probability of a user reaching the item is maximized , through searching tags or navigating items .",
    "this problem is modeled as maximizing the absorbing probability of nodes in a graph with a cardinality constraint .",
    "thus , the optimal tagging problem is actually a special case of d - ap maximization problem when @xmath22 , and the knapsack constraint degenerates to a cardinality constraint . in our work , we consider d - ap and d - ht as two measures of node discoverability , and study the node discoverability optimization under a unified framework .",
    "@xcite proposes the absorbing random walk centrality , which can be used to measure a node s importance in a graph .",
    "@xcite studies node reachability in communication networks , and proposes several measures based on hitting times .",
    "our work is also related to work considering related problems from the perspective of graph algorithms .",
    "@xcite studies the web discoverability problem , which aims to connect less popular items to popular items so that less popular items can be discovered by customers , and this problem is formulated as a bipartite graph matching problem .",
    "we think that it is more practical to model an item graph as a general graph rather than a bipartite graph , and a customer could discover an item by random walks .",
    "we thus propose the d - ht minimization problem which uses hitting time to measure how easily one could reach the target node . hitting time",
    "is also used in measuring node similarity  @xcite , reachability  @xcite , and finding dominating sets of a graph  @xcite .",
    "this work considers a general problem of node discoverability optimization problem , that appears in a wide range of applications . to measure the discoverability of a node",
    ", we propose two measures : d - ap based on absorbing probabilities , and d - ht based on hitting times . while optimizing a target node s discoverability with regard to the two measures is np - hard",
    ", we find that the two measures satisfy submodularity and supermodularity respectively .",
    "this enables us to use the greedy algorithm to find provably near - optimal solutions to the optimization problem .",
    "we propose an efficient estimation - and - refinement implementation of the oracle call .",
    "experiments conducted on real graphs demonstrate that our method provides a good trade - off between estimation accuracy and computational efficiency , and our method achieves hundreds of times faster than an exact method using dynamic programming .",
    "10 [ 1]#1 url@samestyle [ 2]#2 [ 2]l@#1=l@#1#2    r.  zhou , s.  khemmarat , and l.  gao , `` the impact of youtube recommendation system on video views , '' in _ imc _",
    ", 2010 .    `` how to optimize youtube related videos , '' http://tubularinsights.com/optimize-youtube-related-videos , ( accessed feb 2017 ) .",
    "`` grow your audience , '' https://creatoracademy.youtube.com/page/course/get-discovered , ( accessed feb 2017 ) .",
    "`` amazon , '' https://www.amazon.com , ( accessed feb 2017 ) .",
    "`` taobao , '' https://www.taobao.com , ( accessed feb 2017 ) .",
    "a.  antikacioglu , r.  ravi , and s.  sridhar , `` recommendation subgraphs for web discovery , '' in _ www _ , 2015 .",
    "`` amazon marketing services for kdp authors : attract readers , build fans , sell books , '' https://advertising.amazon.com/kindle-select-ads , ( accessed feb 2017 ) .",
    "p.  gupta , a.  goel , j.  lin , a.  sharma , d.  wang , and r.  zadeh , `` wtf : the who to follow service at twitter , '' in _ www _ , 2013 .",
    "j.  zhao , j.  c. lui , d.  towsley , x.  guan , and y.  zhou , `` empirical analysis of the evolution of follower network : a case study on douban , '' in _ netscicom _ , 2011 .",
    "j.  zhao , j.  c. lui , d.  towsley , and x.  guan , `` whom to follow : efficient followee selection for cascading outbreak detection on online social networks , '' _ computer networks _ , vol .  75 , pp . 544559 , 2014 .",
    "l.  lovsz , `` random walks on graphs : a survey , '' _ combinatorics , paul erds is eighty _ , vol .  2 , pp .",
    "353397 , 1993 .",
    "r.  kumar , a.  tomkins , s.  vassilvitskii , and e.  vee , `` inverting a steady - state , '' in _ wsdm _ , 2015 .",
    "a.  t. scaria , r.  m. philip , r.  west , and j.  leskovec , `` the last click : why users give up information network navigation , '' in _ wsdm _ , 2014 .    c.  gkantsidis , m.  mihail , and a.  saberi ,",
    "`` random walks in peer - to - peer networks : algorithms and evaluation , '' _ performance evaluation _ , vol .",
    "63 , no .  3 , pp .",
    "241263 , 2006 .",
    "j.  travers and s.  milgram , `` an experimental study of the small world problem , '' _ sociometry _ , vol .",
    "32 , no .  4 , pp . 425443 , 1969 .",
    "g.  nemhauser , l.  wolsey , and m.  fisher , `` an analysis of approximations for maximizing submodular set functions - i , '' _ mathematical programming _ , vol .",
    "265294 , 1978 .",
    "g.  l. nemhauser and l.  a. wolsey , `` best algorithms for approximating the maximum of a submodular set function , '' _ mathematics of operations research _ , vol .  3 , no .  3 , pp .",
    "177188 , 1978 .",
    "m.  minoux , `` accelerated greedy algorithms for maximizing submodular set functions , '' _ optimization techniques _ , vol .",
    "7 , pp . 234243 , 1978 .",
    "p.  sarkar and a.  w. moore , `` a tractable approach to finding closest truncated - commute - time neighbors in large graphs , '' in _ uai _ , 2007 .",
    "p.  sarkar , a.  w. moore , and a.  prakash , `` fast incremental proximity search in large graphs , '' in _ icml _ , 2008 .",
    "n.  rosenfeld and a.  globerson , `` optimal tagging with markov chain optimization , '' in _ nips _ , 2016 .",
    "s.  khuller , a.  moss , and j.  s. naor , `` the budgeted maximum coverage problem , '' _ information processing letters _ , vol .",
    "70 , no .  1 , pp . 3945 , 1999 .",
    "m.  sviridenko , `` a note on maximizing a submodular set function subject to a knapsack constraint , '' _ operations research letters _ , vol .  32 , pp . 4143 , 2004 .",
    "p.  sarkar and a.  w. moore , `` fast nearest - neighbor search in disk - resident graphs , '' in _ kdd _ , 2010 .",
    "a.  kyrola , `` drunkardmob : billions of random walks on just a pc , '' in _ recsys _ , 2013 .",
    "p.  g. doyle and l.  snell , _ random walks and electric networks _",
    ", 1st  ed .",
    "carus mathematical monographs.1em plus 0.5em minus 0.4em mathematical assn of america , 1984 , vol .  22 .",
    "`` snap graph repository , '' http://snap.stanford.edu/data , ( accessed feb 2017 ) .",
    "k.  s. trivedi , _ probability and statistics with reliability , queuing and computer science applications _ , 2nd  ed.1em plus 0.5em minus 0.4emwiley , 2016 .",
    "c.  mavroforakis , m.  mathioudakis , and a.  gionis , `` absorbing random - walk centrality : theory and algorithms , '' in _ icdm _ , 2015 .",
    "g.  golnari , y.  li , and z .-",
    "zhang , `` pivotality of nodes in reachability problems using avoidance and transit hitting time metrics , '' in _ simplex _ , 2015 .",
    "li , j.  x. yu , x.  huang , and h.  cheng , `` random - walk domination in large graphs : problem definitions and fast solutions , '' in _ icde _ , 2014 .",
    "because the d - ap maximization problem generalizes the optimal tagging problem  @xcite , which has been proven to be np - hard .",
    "thus , the d - ap maximization problem is np - hard .",
    "next , we prove the np - hardness of d - ht minimization problem .",
    "we show the decision problem of d - ht minimization problem is np - complete by a reduction from the vertex cover problem .",
    "the decision problem asks : given a graph @xmath23 and some threshold @xmath24 , does there exist a solution @xmath18 such that @xmath25 ?",
    "we will prove that , given threshold @xmath26 , there exists a solution @xmath18 for the decision problem iff a vertex cover problem has a cover @xmath18 of size at most @xmath27 .",
    "the vertex cover problem is defined on an undirected graph @xmath28 , where @xmath29 , and @xmath30 .",
    "let @xmath31 denote a subset of vertices of size @xmath27 .",
    "we construct an instance of the d - ht minimization problem on directed graph @xmath32 , where @xmath33 and edge set @xmath34 includes both @xmath35 and @xmath36 for each edge @xmath37 .",
    "@xmath34 contains additional edges : for each @xmath38 , we add an edge @xmath39 with proper weight to make the transition probabilities @xmath40 ; we add self - loop edges to vertices @xmath41 and @xmath2 , and thus @xmath41 and @xmath2 become two absorbing vertices , i.e. , transition probabilities @xmath42 .",
    "for this particular instance of d - ht minimization problem , we need to choose connection sources @xmath18 from @xmath43 ; once a source @xmath20 is selected , we set transition probability @xmath44 , which is equivalent to set edge weight @xmath45 .",
    "assume @xmath18 is a vertex cover on graph @xmath46 .",
    "then , for each vertex @xmath47 , a walker starting from @xmath0 hits @xmath2 using one step with probability @xmath48 . for each vertex @xmath49 ,",
    "a walker starting from @xmath0 hits @xmath41 and becomes absorbed on @xmath41 with probability @xmath50 ( the corresponding hitting time is @xmath51 ) ; the walker passes a neighbor in @xmath43 , which must be in @xmath18 , and then hits @xmath2 , with probability @xmath52 ( the corresponding hitting time is @xmath53 ) .",
    "this achieves the minimum d - ht , denoted by @xmath54 $ ] ( where we let @xmath55 ) .",
    "if a solution @xmath18 satisfies @xmath56 on graph @xmath23 , then @xmath18 must be a vertex cover on graph @xmath46 . otherwise , assume @xmath18 is not a vertex cover on graph @xmath46",
    ". then there must be an edge @xmath35 such that @xmath57 .",
    "the probability that a walker starting from @xmath0 and becoming absorbed at vertex @xmath41 will be strictly larger than @xmath50 , and becomes absorbed at vertex @xmath2 using two steps will be strictly smaller than @xmath52 . as a result , the hitting time from @xmath0 will be strictly larger than @xmath58 whenever @xmath59 .",
    "thus , @xmath60 .",
    "the above analysis indicates that if there exists an efficient algorithm for deciding whether there exists a set @xmath61 such that @xmath62 on graph @xmath23 , we could use the algorithm to decide whether graph @xmath46 has a vertex cover of size at most @xmath27 , thereby demonstrating the np - hardness of the d - ht minimization problem .",
    "the monotonicity and submodularity of a set function is both closed under non - negative linear combinations .",
    "hence , for @xmath63 , we only need to prove that @xmath64 is non - decreasing and submodular .",
    "* monotonicity . * to show that @xmath64 is non - decreasing @xmath65 , we use induction on @xmath51 . let @xmath66 , and @xmath38 . for @xmath67",
    ", it holds that @xmath68 .",
    "( also notice that @xmath69 . )",
    "assume the conclusion holds for @xmath70 , i.e. , @xmath71 .",
    "consider the case when @xmath72 , @xmath73 \\\\    & \\leq \\sum_k\\left [ p_{ik}(s_1 ) - p_{ik}(s_2 ) \\right]p_k^t(s_2 ) \\\\    & = \\sum_{k\\neq n}\\left[p_{ik}(s_1 ) - p_{ik}(s_2)\\right]p_k^t(s_2 ) \\\\    & \\hspace{30pt } + \\left [ p_{in}(s_1 ) - p_{in}(s_2 ) \\right]p_n^t(s_2 ) \\\\    & \\leq\\sum_{k\\neq n}\\left[p_{ik}(s_1 ) - p_{ik}(s_2)\\right ]      + p_{in}(s_1 ) - p_{in}(s_2 ) \\\\    & = \\sum_k\\left[p_{ik}(s_1 ) - p_{ik}(s_2)\\right ] \\\\    & = 0.\\end{aligned}\\ ] ] the first inequality holds due to the induction assumption , and the last inequality holds because @xmath74 for @xmath75 , @xmath76 , and @xmath77 .",
    "thus , by induction , we conclude that @xmath64 is non - decreasing .",
    "* submodularity . *",
    "to show that @xmath64 is submodular @xmath65 , we also use induction .",
    "let @xmath78 , and @xmath79 .",
    "notice that @xmath80 . for @xmath67 , because @xmath81 , then @xmath82 . assuming @xmath83 holds for @xmath70",
    ", we consider the case when @xmath72 .",
    "@xmath84 . in this case ,",
    "probability transitions @xmath85 are all constants , i.e. , @xmath86 .",
    "so , @xmath87 \\\\    & = \\sum_kp_{ik}\\delta_k^t(s;s_1 ) \\\\    & \\geq \\sum_kp_{ik}\\delta_k^t(s;s_2 ) \\\\    & = \\delta_i^{t+1}(s;s_2).\\end{aligned}\\ ] ]    @xmath88 . in this case ,",
    "probability transitions have relation @xmath89 , for @xmath75 .",
    "hence , @xmath90\\\\    & \\hspace{25pt }      -p_{ik}(s_2)\\left [ p_k^t(s_2')-p_k^t(s_2 ) \\right ] \\biggr\\ } \\\\    & = \\sum_{k\\neq n}\\left [      p_{ik}(s_1 ) \\delta_k^t(s;s_1 ) - p_{ik}(s_2)\\delta_k^t(s;s_2 ) \\right ] \\\\    & \\geq\\sum_{k\\neq n}p_{ik}(s_2)\\left [      \\delta_k^t(s;s_1)-\\delta_k^t(s;s_2 ) \\right ] \\\\    & \\geq 0.\\end{aligned}\\ ] ]    @xmath91 .",
    "in this case , probability transitions have relation @xmath92 , for @xmath75 .",
    "so , @xmath93\\\\    & \\hspace{30pt }      -p_{ik}(s_1 ' ) \\left [ p_k^t(s_2 ' ) - p_k^t(s_1 ' ) \\right]\\biggr\\ } \\\\    & \\geq\\sum_{k\\neq n}p_{ik}(s_1)\\left [      \\delta_k^t(s;s_1 ) -",
    "\\delta_k^t(s;s_2)\\right]\\\\    & \\geq 0.\\end{aligned}\\ ] ] the three cases above have covered each @xmath38 . by induction , we then conclude that @xmath64 is a submodular set function , and this completes the proof of theorem  [ thm : fap ] .",
    "the monotonicity and supermodularity of a set function is both closed under non - negative linear combinations .",
    "hence , for @xmath94 , we only need to prove that @xmath95 is non - increasing and supermodular .",
    "* monotonicity . * to show that @xmath95 in is non - increasing for each @xmath38 , we use induction . let @xmath66 . according to the definition of hitting time given in def .",
    "[ def : ht ] , we find that , for @xmath67 , @xmath96 .",
    "now we assume that the conclusion holds for @xmath70 , i.e. , @xmath97 holds for every @xmath38 .",
    "( notice that @xmath98 . )",
    "consider the case when @xmath72 , @xmath99 the inequality holds because @xmath100 and @xmath74 for @xmath75 both hold .",
    "the first holds due to the induction assumption , and the second holds because that the transition probability from a transit state @xmath0 to transit state @xmath27 is impossible to increase when more nodes in @xmath101 are connected to the absorbing state @xmath2 , i.e. , @xmath74 for @xmath75 .    by induction",
    ", we conclude that @xmath95 is non - increasing .",
    "* supermodularity .",
    "* we use induction to show that @xmath95 is a supermodular set function .",
    "let @xmath102 and @xmath103 , where @xmath104 .",
    "let @xmath105 denote the marginal gain .",
    "( notice that @xmath80 . ) for @xmath67 , @xmath106 .",
    "assume the conclusion holds for @xmath70 , i.e. , @xmath107 . to show that the conclusion holds for @xmath72",
    ", we need to consider three cases :    @xmath84 . in this case ,",
    "probability transitions @xmath85 are constants , i.e. , @xmath108 , for @xmath75 .",
    "so , @xmath109 \\\\    & = \\sum_{k\\neq n } p_{ik}\\delta_k^t(s;s_1 ) \\\\    & \\leq \\sum_{k\\neq n } p_{ik}\\delta_k^t(s;s_2 ) \\\\    & = \\delta_i^{t+1}(s;s_2).\\end{aligned}\\ ] ]    @xmath110 . in this case ,",
    "probability transitions satisfy relation @xmath89 .",
    "so , @xmath111 \\\\    & \\leq \\sum_kp_{ik}(s_2)\\left [ \\delta_k^t(s;s_1 ) - \\delta_k^t(s;s_2 ) \\right ] \\\\    & \\leq 0.\\end{aligned}\\ ] ] ( note that @xmath112 due to monotonicity . )",
    "@xmath91 . in this case ,",
    "probability transitions have relation @xmath113 , for @xmath75 .",
    "so , @xmath114\\\\    & \\hspace{25pt }      -p_{ik}(s_1 ) \\left [ h_k^t(s_1 ) - h_k^t(s_2 ) \\right]\\biggr\\ } \\\\    & \\leq\\sum_{k\\neq n } p_{ik}(s)\\left[\\delta_k^t(s;s_1 ) - \\delta_k^t(s;s_2)\\right ] \\\\",
    "& \\leq 0.\\end{aligned}\\ ] ] the three cases above have covered each @xmath38 . by induction , we conclude that @xmath95 is a supermodular set function , and this completes the proof of theorem  [ thm : fht ] .",
    "define random variable @xmath115 $ ] , and note that @xmath116 .",
    "the hoeffding inequality yields @xmath117 . letting the probability be less than @xmath50 , we get @xmath118 .    similarly , to show the bound of @xmath119 in case of d - ht , we can define another random variable @xmath120 $ ] . applying the hoeffding inequality yields @xmath121 .",
    "given @xmath31 , for a node @xmath122 , we have @xmath123 where we have used shortcuts @xmath124 and @xmath125 . the relation @xmath126 yields @xmath127 let @xmath115 $ ] , and notice that @xmath128 .",
    "applying the hoeffding inequality , we obtain @xmath129 this implies @xmath130 applying the union bound , we obtain @xmath131 letting the upper bound be less than @xmath50 , we get @xmath132 ."
  ],
  "abstract_text": [
    "<S> many people dream to become famous , youtube video makers also wish their videos to have a large audience , and product retailers always hope to expose their products to customers as many as possible . </S>",
    "<S> do these seemingly different phenomena share a common structure ?    </S>",
    "<S> we find that fame , popularity , or exposure , could be modeled as a node s _ discoverability _ in some properly defined network , and all of the previously mentioned phenomena can be stated as : a target node wants to be discovered easily by existing nodes in the network . in this work , </S>",
    "<S> we explicitly define the _ node discoverability _ in a network , and formulate a general _ node discoverability optimization _ problem . while the optimization problem is np - hard , we find that the defined discoverability measures satisfy good properties that enable us to use a greedy algorithm to find provably near - optimal solutions </S>",
    "<S> . the computational complexity of a greedy algorithm is dominated by the time cost of an _ oracle call _ , i.e. , calculating the marginal gain of a given node . to scale up the oracle call over large networks </S>",
    "<S> , we propose an _ estimation - and - refinement _ approach , that provides a good trade - off between estimation accuracy and computational efficiency . </S>",
    "<S> experiments conducted on real graphs demonstrate that our method is hundreds of times faster than an exact method using dynamic programming , thereby allowing us to solve the optimization problem on large networks . </S>"
  ]
}
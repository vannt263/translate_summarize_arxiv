{
  "article_text": [
    "modern , highly specialised experimental systems often require extensive original software development .",
    "this is true for all tasks from direct hardware control through to data reduction .",
    "whilst individual research groups often approach such software development from an isolated perspective , the proliferation of digital hardware and wide - area networking makes global cooperative software development far more attractive , provided suitable common ground exists .",
    "both cooperative software development and the adoption of standard packages provide a number of distinct advantages to the research community .",
    "for instance , as less effort is wasted unnecessarily duplicating the work of others , cooperative development can lead to more efficient allocation of resources .",
    "in addition , supporting the requirements of a larger user community promotes the development of basic , general purpose routines that may be used in a wider variety of situations .",
    "these influences result in more modular and extensible software .",
    "+ however , it should be noted that a greater level of care and cooperation is required in collaborative software development , especially the open source approach advocated in this paper .",
    "for example , in contrast to most commercial software , `` black box '' modularity is undesirable in scientific analysis , especially when the application of certain algorithms requires experienced judgment .",
    "open , well - documented code provides researchers with an accurate understanding of third - party analytical tools .",
    "therefore , contributing developers must be willing to put their code in the public domain , making it freely available for non - commercial use by any other academic organisation .",
    "although this facilitates the exchange of ideas , it also raises the issue of potential loss of intellectual property , which might discourage some authors . + it is also the case that collaborative development tends to become de - centralised , especially when multiple developers have the ability to commit fundamental changes to the code .",
    "effective communication between the core developers becomes essential to the smooth running of the project , necessitating greater attention to version control , the maintenance of stable releases , and the development of extensive and concise documentation .",
    "also , when a wider user community is affected by modifications to the software , exhaustive methods must be employed to ensure the validity of changes and the integrity of the system as a whole .",
    "although each of these issues tend to increase the workload of the collaborative developer , a much larger body of users will benefit from the effort .",
    "the global pulsar community is ideally suited to adopt a collaborative approach to software development .",
    "it consists of a relatively small number of locally centralised groups that deal with different telescopes and instruments , leading to several parallel but incompatible software development paths .",
    "as each path tends to be built around a highly specific data storage format , cross examination of data and algorithms is problematic .",
    "in addition , because such software is generally designed for a limited purpose , it is often difficult to extend its functionality without introducing obfuscated code .",
    "this is especially true when the program develops in an experimental fashion , as is often the case with scientific applications . in order to avoid future inflexibility , sufficient time and care",
    "must be invested during the planning stage , calling on input from both experienced software developers and pulsar astronomers .",
    "radio pulsars are broadband point sources of highly polarised emission that exhibit rapid pulsations with a characteristic period anywhere between one millisecond and ten seconds .",
    "they are thought to be rotating neutron stars with a strong dipolar magnetic field whose axis is not aligned with the rotation axis of the star ( gold 1968 ) .",
    "intense beams of emission originate at the magnetic poles , which sweep across the sky with each rotation of the star and produce the pulsed radio signal observed at earth .",
    "+ the characteristic _ signature _ of any radio pulsar is its integrated polarimetric pulse profile , given by the observed stokes parameters averaged ( folded ) as a function of pulse longitude over several thousand individual pulses ( helfand , manchester , & taylor 1975 ) . under the influence of electrons in the interstellar medium ( taylor & cordes 1993 ) ,",
    "this pulsed signal is broadened by dispersive frequency smearing , which must be corrected in order to infer the shape of the characteristic profile at the source .",
    "this is normally done by dividing the observed bandwidth into narrow frequency channels , which are appropriately delayed relative to each other before summing the detected flux densities in each channel . however , as the dispersion measure may vary with time or may not be known with sufficient accuracy at the time of the observation , it is often necessary to store the individual pulse profiles observed in each frequency channel . + additionally , it is possible to create a mean pulse profile only if a suitably accurate model of the pulsar s spin frequency and phase is available .",
    "the apparent pulse period is affected by a number of phenomena , including the spin - down , timing noise , and/or glitches intrinsic to the pulsar , variations in the interstellar dispersion , and doppler effects introduced by the relative motions of the earth and pulsar .",
    "inaccuracies in the model that describes these effects introduce phase errors that accumulate with time and cause the integrated profile to become smeared .",
    "therefore , it is often beneficial to store multiple , shorter integrations of the mean pulse profile instead of a single , long integration .",
    "furthermore , when a pulsar is bright enough , a great deal of additional information about the characteristics of the pulsar emission can be obtained by recording and analysing each individual pulse .",
    "therefore , a useful pulsar data format must be able to represent pulse profiles observed over multiple epochs of arbitrary length .",
    "+ in summary , pulsar observations generally consist of a four - dimensional array of data indexed by polarization component , pulse phase , frequency , and epoch .",
    "software support for sensible groupings in other dimensions , such as orbital phase , is also highly desirable .",
    "in addition , data from a number of telescopes can be combined to increase sensitivity and contribute to the eventual detection of new phenomena , such as the cosmic background of stochastic gravitational radiation ( e.g. hellings & downs 1983 ; stinebring et al .",
    "therefore , the data storage format should have a flexible structure that provides efficient access to key parameters , removed from any considerations of individual instruments or signal processing schemes .",
    "pulsars are observed for a variety of reasons , from studying the nature of their structure and emission mechanism ( dodson , mcculloch , & lewis 2002 ) to utilising them as highly stable clocks and astrophysical probes ( taylor & weisberg 1982 ) .",
    "consequently , the same pulsar observation can be used in a number of different contexts , one focusing on the variation of polarization with frequency , another measuring general relativistic effects on pulse times of arrival , etc .",
    "nevertheless , our experience has shown that there exist many common tasks associated with pulsar data analysis that can be standardised within a modern open source development environment . + as a demonstration of the types of operations performed on pulsar data , consider the specific example of pulse time of arrival calculation . in order to increase the signal - to - noise ratio ( s / n ) of each observation , data are often integrated ( scrunched ) by several factors in one or more of the available dimensions . each resultant profile",
    "is then cross - correlated with a high s / n standard profile known as a template , yielding an estimate of the longitudinal offset between the two .",
    "this offset is added to the reference epoch associated with a fiducial point in the observed pulse profile , yielding an arrival time in the reference frame of the observatory , which is later converted into a barycentric arrival time using a solar system ephemeris .",
    "this data reduction operation involves a number of typical tasks , including loading the arrays of numbers that represent the folded profiles and computing sums , products , rotations , weighted averages , and correlations of these arrays ; sometimes in the fourier domain .",
    "most of these various operations must be performed in a manner consistent with the observational parameters , taking into account dispersive delays , observation time stamps and relative weightings of different frequency channels , for example . at each step",
    ", the software must also ensure that all parameters are updated accordingly .",
    "it should be noted that the pulsar data under consideration represents a point near the end of the typical pulsar data reduction chain .",
    "the software presented in this paper is not intended for the direct handling of radio data such as that recorded by baseband systems , or for the purposes of performing computationally expensive offline searching , although some support for the storage of such data is provided in psrfits .",
    "the code is also not designed to perform any phase - coherent dispersion removal or formation of filter - bank data ; these techniques are treated as separate computational tasks .",
    "code for such data reduction is also available from the repository at the swinburne centre for astrophysics and supercomputing under the umbrella name of baseband dsp , a general library for use in digital signal processing .",
    "+ the psrchive and psrfits schemes were designed from the beginning to form an object - oriented framework into which existing algorithms and data structures could be transplanted . by introducing layers of abstraction between the various levels of responsibility , the design remains both flexible and extensible .",
    "for example , different telescopes and instruments require the storage of different types of information , including configuration parameters , observatory and instrumental status information , and other site - specific data . because there is no way of knowing exactly what future systems might include , both psrchive and psrfits implement a generalised scheme for incorporating arbitrarily complex data extensions , as described in sections  [ sec : abstraction ] and  [ sec : psrfits_defn ] . + in addition , a basic framework of crucial parameters common to all pulsar observations and a wide variety of fundamental data reduction algorithms , such as those described in section  [ sec : processing ] ,",
    "have been implemented .",
    "each of these basic data structures and reduction operations may be used in the composition of more complex scientific processing algorithms . by virtue of continued development amongst the authors , the psrchive library includes an extensive array of such high - level algorithms for use in the calibration , visualisation , and analysis of pulsar data ; these can be used immediately on any of the supported file formats .",
    "+ psrchive and psrfits were developed in parallel and are presented in the hope that they will promote increased data portability .",
    "the psrfits file format also serves as an example of how to incorporate other , pre - existing file formats into the new scheme , as described in section  [ sec : plugin ] . after two years of development ,",
    "the code is now ready for formal release to the wider pulsar community . in the following sections",
    ", we describe the implementation of the new schemes and outline the specific advantages that they offer .",
    "the modularity and extensibility required of our new scheme suggested an object - oriented approach .",
    "since much of the existing swinburne analysis code had already been written in both the c and c++ programming languages , it seemed a natural step to progress in c++ .",
    "the concepts of object classes and inheritance provided and enforced by the syntax of this language offer a sound foundation on which to develop .",
    "in particular , object - oriented design has aided in the realization of simultaneous support of multiple file formats .",
    "we are aware that a majority of pulsar research groups prefer to write a more procedural style of code , using fortran or c. however , we feel that the benefits of an object - oriented approach to data processing significantly outweigh the potential learning curve involved in becoming proficient with c++ .",
    "the required functionality of psrchive is built around a core framework of c++ object classes .",
    "the fundamental unit of all pulsar observations is the individual pulse * profile * , a one - dimensional array of floating point numbers , indexed by pulse phase .",
    "the * integration * is a two dimensional vector of * profile * instances , indexed by frequency and polarisation , as measured over a particular epoch . in turn , the * archive * is a one dimensional vector of * integration * instances , indexed in one of a number of possible ways ( normally time ) . each of these classes implement a wide range of basic data manipulation and processing operations . + in the language of c++ , we define the namespace * pulsar * , which contains the three _ base classes _ : * pulsar::archive * , * pulsar::integration * , and * pulsar::profile*. in addition , there are other object classes in the * pulsar * namespace that deal with specific tasks related to pulsar data analysis . for example , the * pulsar::calibration * class employs various mathematical models of the instrumental response to calibrate polarimetric observations ( van straten 2004 ) .      the three base classes implement a wide variety of basic algorithms , known as _ methods _ , that are commonly used in pulsar data analysis .",
    "however , they do not require knowledge of any specific details related to system architecture , enabling their use as templates upon which to base lower - level development .",
    "these templates define the minimum set of parameters , known as _ attributes _ , required to implement the data analysis methods , including observational parameters such as the name of the source , centre frequency , bandwidth , etc . at the level of the * pulsar::archive * and * pulsar::integration * base classes , nothing is known about how data are stored on permanent media or in computer memory .",
    "+ the necessary task of translating between the two realms is performed by _ derived classes _ that _ inherit _ the base classes . in order to inherit a base class ,",
    "it is necessary for the derived class to provide access to the required attributes and to implement the methods used to read and write the data stored on disk .",
    "therefore , for each specific file format represented in the psrchive scheme , there corresponds a derived class that inherits * pulsar::archive*. the syntax for the data access and file input / output methods is defined by the base class and enforced by the c++ compiler , allowing all derived classes to be treated as equal .",
    "therefore , high - level code can be written in the language of the base class definition without the need for considering the implementation details of the derived classes .",
    "this abstraction , which is crucial to the flexibility of the psrchive scheme , is demonstrated by the unified modeling language ( uml ) class diagram shown in figure  [ fig : class_diagram ] .      in order to take full advantage of this level of data abstraction ,",
    "the psrchive scheme makes use of dynamic shared object libraries , or _",
    "plug - ins_. these libraries are compiled using special options that allow them to be linked into a program at run - time .",
    "perhaps the best known example of such a system is the plug - in scheme used to add functionality to many web browsers . within psrchive , the machine code that defines a * pulsar::archive*-derived class",
    "is stored inside a single plug - in file .",
    "the plug - in files corresponding to different file formats are held in a central location that is scanned on the first attempt to load pulsar data .",
    "the available plug - ins determine which file formats are understood by providing a test routine that returns true if a file on disk is of its own format .",
    "in this way , psrchive applications can quickly scan a given data file , select the appropriate derived class and load the pulsar data .",
    "this ensures that , as the number of supported file formats grows , the size and complexity of any given application program remains the same .",
    "we encourage all interested research groups that currently maintain separate data formats to gain experience with the psrchive scheme by developing their own file format plug - ins . by making the plug - in code publicly available",
    ", research groups will be able to exchange data already stored using different file formats .",
    "+ in order to accommodate the stringent reliability requirements of observatory online processing and monitoring systems , we also offer the option of compiling all psrchive applications using a static linkage scheme .",
    "this makes the binary executables larger on disk but removes the possibility of problems arising should a shared object file be accidentally deleted or recompiled .",
    "either option can be selected by simply editing one line in the makefile scheme .",
    "one of the motivating factors behind the development of the psrchive scheme was the alleviation of problems associated with highly specific and non - portable data storage formats .",
    "this effort has highlighted several compelling reasons for the pulsar community to move towards a more modular and standardised storage format .",
    "for instance , the existence of a standard file format would significantly decrease the amount of effort required to integrate and test new instrumentation .",
    "historically , file formats have accreted features as they became desirable or necessary .",
    "given the wealth of past experience available , it seems a logical step to define a new format that encompasses a wide range of features from the beginning and is written in a modular way so as to enable rapid , backwards - compatible upgrades .",
    "indeed , one particular standard storage format has already won wide acclaim within the astronomical community ; the flexible image transport system ( fits ) ( hanisch et al . 2001 ) has been in widespread use for approximately three decades and has evolved into a highly adaptable data storage scheme .",
    "the format has been placed under the administration of the iau fits working group and a wide array of software is available for fits file manipulation .",
    "the nasa high energy astrophysics science archive research centre provides useful libraries and applications for manipulation and interrogation of fits - based files .",
    "for example , the program * fv * has made the process of testing and debugging the relevant psrchive software much more straight forward .",
    "+ in accordance with fits standards , a psrfits file consists of a primary header - data unit ( hdu ) followed by a series of extension hdus .",
    "the primary hdu contains basic information such as telescope identification and location , observation start time etc .",
    "extension hdus , formatted as binary tables , contain specific information related to the observation such as the pulsar ephemeris , calibration data , and the pulsar data .",
    "although psrfits is primarily designed to store folded or single - pulse profile data , it can also accommodate continuous time series data .",
    "a useful feature of the standard fits input / output routines is that new hdus and header parameters may be added transparently  if they are unknown to the reading program , they are ignored .",
    "furthermore , unused hdus need not be written , even though they are present in the definition .",
    "this feature allows , for example , a user group to add information particular to a certain instrument without compromising use of the definition by other groups .",
    "a novel feature of the psrfits definition is the inclusion of hdus containing ` history ' information .",
    "for example , the first line of processing history hdu contains information about the data acquisition program and the initial structure of the file .",
    "subsequent lines record details of modifications to the structure or data ( for example , partial or complete de - dispersion or interference excision )",
    ". a permanent record of the steps that have been applied during data reduction has proven to be of great value when later assessing the quality and validity of observational data .",
    "the current version of the psrfits definition file is available on the atnf web pages .",
    "table  [ tb : psrfits ] describes the header - data units included in the current definition ( version 1.18 ) .",
    "+ in addition to the main and processing history hdus , a number of optional hdus have been defined for general use with a variety of instrumentation .",
    "these enable the storage of important status and diagnostic information about the observation , and demonstrate the modularity and extensibility of the psrfits file format .",
    "the physical parameters stored in the ephemeris history hdu are based on the pulsar timing program , * * tempo**. from the ephemeris parameters are derived the polynomial coefficients ( polyco ) used to predict the apparent pulsar period and phase at the epoch of the observation ; these coefficients are stored in the polyco history hdu . as improved physical parameters become available , the data may be reprocessed , leading to new rows in the ephemeris and polyco history tables .",
    "the calibration and feed cross - coupling hdus are designed to work with the routines in the * pulsar::calibration * class . owing to the intrinsic modularity of fits , these additional hdus are all optional ; in fact , it is not even strictly necessary to include any integration data in a psrfits file .",
    "for example , the polarimetric calibration modeling program creates a file containing only the feed cross - coupling , injected calibration polarisation , and flux calibration hdus .",
    "this modularity is similar to that made available through the use of votable xml standards and it is likely that psrfits could in future be incorporated into the international virtual observatory system with a minimum of effort .",
    "llhdu title & +   + main header & observer , telescope and receiver information , + & source name and observation date and time +   + processing history & date , program and details of data acquisition + & and each subsequent processing step +   + digitiser statistics & digitiser mode and count statistics +   + digitiser counts & digitiser mode and count rate distribution +   + original bandpass & observed bandpass in each polarisation + & averaged over the observation +   + coherent de - dispersion & parameters for coherent de - dispersion of + & baseband data +   + ephemeris history & pulsar parameters used to create or modify + & profile data +   + polyco history & elements of the polyco file used to predict + & the apparent pulsar period +   + flux calibration & system temperature and injected noise + & calibration data as a function of frequency + & across the bandpass +   + injected calibration polarisation & apparent polarisation of the injected + & noise calibration signal as a function + & of frequency +   + feed cross - coupling & parameters of feed cross - coupling as a + & function of frequency +   + integration data & pulse profiles or fast - sampled data as a function + & of time , frequency and polarisation +   +",
    "the psrchive scheme includes an extensive set of pre - written application programs that can be used to manipulate pulsar data in various ways .",
    "these include both command line tools and graphical user interfaces built using trolltech s qt , a c++ toolkit for multi - platform gui and application development .",
    "table [ tb : psrapps ] presents a list of applications included in the package at the time of publication , with a brief description of each .",
    "1.0 @ll    application & +   + * pav * & archive data visualisation . based on the pgplot graphics + & subroutine library with a simple command line interface +   + * vap * & archive header examination , allowing multiple user + & selectable header parameters to be printed as ascii to + & the terminal +   + * pam * & archive manipulation , compression and processing +   + * pat * & pulse profile arrival time calculation , based on cross + & correlation with a standard template profile +   + * pas * & standard profile phase alignment , for timing with multiple + & standard template profiles +   + * paz * &",
    "radio frequency interference mitigation tool including + & manual and automated channel zapping and sub - integration + & removal +   + * pac * & archive polarimetric and flux calibration tool based on a + & user - selectable set of advanced algorithms +   + * pcm * & polarimetric calibration modeling , creates instrumental + & response transformations for use with * pac * +   + * psrgui * & interactive point - and - click data visualisation with a qt + & graphical interface +   + * psradd * & combination of multiple archives for formation of high + & s / n profiles +   + * rhythm * & a graphical interface for pulse arrival time fitting based + & on * tempo * +   +    readers may note that the modular philosophy at the heart of psrchive extends all the way through to the user level applications .",
    "each program tends to be small and focused on a specific task , be it data compression , timing , rfi mitigation , etc .",
    "this greatly simplifies development and maintenance compared to having one monolithic program with multiple purposes .",
    "psrchive was designed to provide users with more than just a set of pre - made applications .",
    "the classes , libraries and examples provided are intended to simplify the task of building new processing tools . to a large extent , developers who build on the psrchive scheme do not have to directly manipulate the arrays of pulse profile amplitudes .",
    "instead , member functions of the various classes can be called to perform basic operations like baseline removal and phase rotation .",
    "this has the dual benefit of labour saving both in the initial development phase and in the debugging phase , as both the authors and other users have already verified and tested the provided routines . in case direct access to the profile amplitudes",
    "is required , we also provide interface functions that return c style arrays . in the experience of the authors , the extra layer of abstraction provided by the psrchive scheme can cut down the time between program concept and full implementation to a matter of hours .",
    "new applications can be built with only a few lines of code .",
    "for example , to remove the system noise floor , compress all frequency channels and output the processed archive :    .... # include \" pulsar / archive.h \"    int main ( ) {      pulsar::archive * arch = 0 ;      arch = pulsar::archive::load(\"filename \" ) ;      arch->remove_baseline ( ) ;    arch->fscrunch ( ) ;      arch->unload ( ) ;    } ....    this simple program defines a pointer to a * pulsar::archive * and calls the generic * pulsar::archive::load * routine , which takes a filename argument , applies a number of tests to the file on disk ( depending on the available plug - ins ) and decides whether or not it understands the particular format .",
    "if so , it summons the appropriate derived class to read the data from disk .",
    "once the data have been loaded , the * pulsar::archive::remove_baseline * function is called .",
    ".... void pulsar::archive::remove_baseline ( float phase , float width ) {    try {        if ( phase = = -1.0 )        phase = find_min_phase ( width ) ;        for ( unsigned isub=0 ; isub < get_nsubint ( ) ; isub++ )        get_integration(isub ) - > remove_baseline ( phase , width ) ;      }    catch ( error & error ) {      throw error + = \" pulsar::archive::remove_baseline \" ;    } } ....    the * pulsar::archive::remove_baseline * function takes two arguments : the phase and width of the off - pulse baseline .",
    "both arguments are assigned default values in the archive.h header file ; if phase is left unspecified , then the off - pulse baseline phase will be found using the * pulsar::archive::find_min_phase * method ; if width is unspecified , then a default value will be used .",
    "the * pulsar::archive::remove_baseline * method makes multiple calls to the * pulsar::integration::remove_baseline * routine , which performs the actual modification of amplitudes as follows :    .... void pulsar::integration::remove_baseline ( float phase , float width ) {      if ( pulsar::integration::verbose )      cerr < < \" pulsar::integration::remove_baseline entered \" < < endl ;      try {        if ( phase = = -1.0 )        phase = find_min_phase ( width ) ;        vector < float > phases ;      dispersive_phases ( this , phases ) ;        for ( unsigned ichan=0 ; ichan < get_nchan ( ) ; ichan++ ) {          float chanphase = phase + phases[ichan ] ;          for ( unsigned ipol=0 ; ipol < get_npol ( ) ; ipol++ )          * ( profiles[ipol][ichan ] ) -=            profiles[ipol][ichan ] - > mean ( chanphase , width ) ;        }      }    catch ( error & error ) {      throw error + = \" integration::remove_baseline \" ;    } } ....    this nested structure reduces the length of high - level routines , allowing actual computations to be done at the level of abstraction that best suits the task .",
    "likewise , the * pulsar::integration::remove_baseline * routine calls various member functions of both the * pulsar::integration * and * pulsar::profile * classes , computing the pulse phase at which the minimum baseline level occurs in the total intensity of the entire band .",
    "adjustments for dispersive delays in each channel are performed and the mean level at this phase is individually removed from each * pulsar::profile * stored in the * pulsar::integration*. developers should also note the extensive use of * try / catch * blocks and a specifically designed * error * class that carries descriptive information about any exceptions thrown back to the calling procedure .",
    "psrchive is freely available to the worldwide academic community .",
    "it is held in a repository at swinburne university of technology in melbourne , australia and may be accessed via the concurrent versions system . as it is distributed as source code ,",
    "some experience with programming and compilation is necessary ; however , installation can be done in a fairly simple step - by - step manner thanks to the standard makefile scheme included with the package .",
    "the code is compatible with all versions of the gnu compiler collection between 2.95 and 3.2.2 and is routinely tested on both the linux and solaris operating systems .",
    "every effort will be made to ensure compatibility with future gcc releases .",
    "+ the psrchive scheme makes use of several external libraries , including the starlink project slalib package .",
    "it also requires at least one external fft library and includes wrappers that provide compatibility with either fftw 2.1.5 ( available under the gpl ) or intel mkl ( commercially available from intel ) .",
    "the pgplot graphics subroutine library is also an integral part of the scheme . + full documentation including instructions for download and installation are available online by following the menu options at the swinburne centre for astrophysics and supercomputing web site .",
    "read - only access to the repository is granted upon receipt by the developers of a secure shell v2.0 public key that is used to allow remote entry to the server .",
    "write permissions to the repository require a computing account with the swinburne centre for astrophysics and supercomputing .",
    "please direct all enquiries regarding access to * psrchive@astro.swin.edu.au*.      psrchive reference documentation is maintained online .",
    "in addition to the online descriptions , each command line application has a * -h * option that displays a quick summary of how to use the program .",
    "the library of c++ classes is extensively documented using the doxygen system ; the source code contains tagged comments from which the online manual is automatically generated .",
    "this manual is intended as a reference to programmers as it primarily describes the member functions available in each class and the syntax of their arguments .",
    "although we provide no official support for the software , we are willing to assist with psrchive related problems as time permits .",
    "general queries regarding installation or operation can be addressed to * psrchive@astro.swin.edu.au*. we also provide a mechanism for reporting serious bugs via an online interface known as yaq , which can be found at the swinburne pulsar group web site .",
    "the task of organising astronomical data into a logical format lends itself surprisingly well to the object - oriented programming paradigm .",
    "the combination of psrchive and psrfits provides a powerful , ready - to - use pulsar data archival and reduction system that can be rapidly adapted to new instruments .",
    "we hope that the ready availability of an open source data reduction framework will facilitate large scale collaborative projects , such as an extended pulsar timing array ( foster and backer 1990 ) .",
    "therefore , we encourage both scientists and engineers involved with pulsar data acquisition and reduction to consider taking advantage of these packages .",
    "we have benefited greatly from the advice and assistance of many colleagues in developing the scheme described . in particular , we thank matthew bailes and others in the swinburne pulsar group and nina wang at the australia telescope national facility .",
    "thanks also to ben stappers , russell edwards and george hobbs for constructive feedback during development .",
    "we would also like to thank the referee for insightful comments which have led to important improvements to this manuscript .",
    "dodson , r. g. , mcculloch , p. m. & lewis , d. r. 2002 , apj , 564 , 85"
  ],
  "abstract_text": [
    "<S> a new set of software applications and libraries for use in the archival and analysis of pulsar astronomical data is introduced . </S>",
    "<S> known collectively as the psrchive scheme , the code was developed in parallel with a new data storage format called psrfits , which is based on the flexible image transport system ( fits ) . </S>",
    "<S> both of these projects utilise a modular , object - oriented design philosophy . </S>",
    "<S> psrchive is an open source development environment that incorporates an extensive range of c++ object classes and pre - built command line and graphical utilities . </S>",
    "<S> these deal transparently and simultaneously with multiple data storage formats , thereby enhancing data portability and facilitating the adoption of the psrfits file format . here </S>",
    "<S> , data are stored in a series of modular header - data units that provide flexibility and scope for future expansion . as it is based on fits , various standard libraries and applications </S>",
    "<S> may be used for data input / output and visualisation . both psrchive and psrfits </S>",
    "<S> are made publicly available to the academic community in the hope that this will promote their widespread use and acceptance .    </S>",
    "<S> = 2em = 15.5 cm = 22.6 cm = -1.0 cm = 0.5 cm = 0.5 cm    @xmath0 swinburne centre for astrophysics & supercomputing , + mail # 31 , po box 218 , hawthorn , vic 3122 , australia + ahotan@astro.swin.edu.au + @xmath1 australia telescope national facility , + po box 76 , epping , nsw 1710 , australia , + dick.manchester@csiro.au + @xmath2 netherlands foundation for research in astronomy , + po box 2 , 7990 aa dwingeloo , the netherlands , + straten@astron.nl +    * keywords : pulsars : general , methods : data analysis * </S>"
  ]
}
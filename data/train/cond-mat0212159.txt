{
  "article_text": [
    "first - principles calculations of alloy thermodynamic properties have been successfully employed in a variety of contexts for metallic , semi - conductor and ceramic systems , including the computation of : composition - temperature phase diagrams , thermodynamic properties of stable and metastable phases , short - range order in solid solutions , thermodynamic properties of planar defects ( including surfaces or antiphase and interphase boundaries ) , and the morphology of precipitate microstructures @xcite .",
    "although the formalism that allows the calculation of thermodynamic properties from first - principles has been known for decades @xcite , its practical implementation remains tedious .",
    "these practical issues limit the accuracy researchers are able to obtain without spending an unreasonable amount of their time writing input files for various computer codes , monitoring their execution and processing their output .",
    "these practical difficulties also limit the community of researchers that use these methods solely to those that possess the necessary expertise to carry out such calculations .",
    "the alloy theoretic automated toolkit ( atat ) @xcite drastically simplifies the practical use of these methods by implementing decision rules based on formal statistical analysis that free the researchers from a constant monitoring during the calculation process and automatically `` glues '' together the input and the output of various codes , in order to provide a high - level interface to the calculation of thermodynamic properties from first - principles . in order",
    "the make this powerful toolkit available to the wide community of researchers who could benefit from it , this article present a concise user guide to this toolkit .",
    "while there exist numerous methodologies that enable the calculation of thermodynamic properties from first - principles , we will focus on the following two - step approach ( see figure [ mapsemc2 ] ) .",
    "first , a compact representation of the energetics of an alloy , known as the cluster expansion @xcite , is constructed using first - principles calculations of the formation energies of various atomic arrangements .",
    "second , the cluster expansion is used as a hamiltonian for monte carlo simulations @xcite that can provide the thermodynamic properties of interest , such as the free energy of a phase or short - range - order parameters as a function of temperature and concentration .",
    "this two - step approach is essential , because the calculation of thermodynamic quantities through monte carlo involves averaging the property of interest over many different atomic configurations and it would be infeasible to calculate the energy of each of these configurations from first - principles .",
    "the cluster expansion enables the prediction of the energy of any configuration from the knowledge of the energies of a small number of configurations ( typically between 30 and 50 ) , thus making the procedure amenable to the use of first - principles methods .",
    "formally , the cluster expansion is defined by first assigning occupation variables @xmath2 to each site @xmath3 of the _ parent lattice _ , which is defined as the set of all the atomic sites that can be occupied by one of a few possible atomic species . in the common case of a binary alloy system",
    ", the occupation variables @xmath4 take the value @xmath5 or @xmath6 depending on the type of atom occupying the site . a particular arrangement of these `` spins '' on the parent lattice",
    "is called a _ configuration _ and can be represented by a vector @xmath7 containing the value of the occupation variable for each site in the parent lattice .",
    "although we focus here on the case of binary alloys , this framework can be extended to arbitrary multicomponent alloys ( the appropriate formalism is presented in @xcite ) .",
    "the cluster expansion then parametrizes the energy ( per atom ) of the alloy as a polynomial in the occupation variables : @xmath8 where @xmath9 is a cluster ( a set of sites @xmath3 ) .",
    "the sum is taken over all clusters @xmath9 that are not equivalent by a symmetry operation of the space group of the parent lattice , while the average is taken over all clusters @xmath10 that are equivalent to @xmath9 by symmetry .",
    "the coefficients @xmath11 in this expansion embody the information regarding the energetics of the alloy and are called the effective cluster interaction ( eci ) .",
    "the _ multiplicities _ @xmath12 indicate the number of clusters that are equivalent by symmetry to @xmath9 ( divided by the number of lattice sites ) .    it can be shown that when _ all _ clusters @xmath9 are considered in the sum , the cluster expansion is able to represent any function @xmath13 of configuration @xmath7 by an appropriate selection of the values of @xmath11 . however , the real advantage of the cluster expansion is that , in practice , it is found to converge rapidly .",
    "an accuracy that is sufficient for phase diagram calculations can be achieved by keeping only clusters @xmath9 that are relatively compact ( _ e.g. _ short - range pairs or small triplets ) .",
    "the unknown parameters of the cluster expansion ( the eci ) can then be determined by fitting them to the energy of a relatively small number of configurations obtained through first - principles computations .",
    "this approach is known as the structure inversion method ( sim ) or the collony - williams @xcite method .",
    "the cluster expansion thus presents an extremely concise and practical way to model the configurational dependence of an alloy s energy .",
    "a typical well - converged cluster expansion of the energy of an alloy consists of about 10 to 20 eci and necessitates the calculation of the energy of around 30 to 50 ordered structures ( see , for instance , @xcite ) .",
    "once the cluster expansion has been constructed , the energy of any configuration can be calculated using equation [ eq_ce ] at a very small computational cost .",
    "this enables the use of various statistical mechanical techniques such as monte carlo simulations @xcite , the low - temperature expansion ( lte ) @xcite , the high - temperature expansion ( hte ) @xcite , or the cluster variation method ( cvm ) @xcite to calculate thermodynamic properties and phase diagrams .",
    "the atat software implements monte carlo simulations , the lte and the hte .    paralleling the two - step approach described in the previous section , atat consists of two main computer programs ( see figure [ mapsemc2 ] ) .",
    "the cluster expansion construction is performed by the mit _ ab initio _ phase stability ( maps ) code @xcite , while the monte carlo simulations are driven by the easy monte carlo code ( emc2 ) , developed at northwestern university @xcite .",
    "each of these codes will be discussed in turn .",
    "while the present user guide describes how the atat software can be used to carry out all the steps necessary for the calculation of thermodynamic properties from first - principles , it must be emphasized that each part of the toolkit can be used as a stand - alone code .",
    "for instance , many users may have access to an existing cluster expansion obtained through the sim or other popular methods , such as concentration - wave - based methods ( see , for instance , @xcite ) .",
    "it is then staightforward to setup the appropriate input files to run the emc2 monte carlo code . alternatively , after obtaining a cluster expansion using the maps code , users could choose to calculate thermodynamic properties with the cluster variation method ( cvm ) @xcite , as implemented in the imr - cvm code @xcite .",
    "the modularity of the toolkit actually extends below the level of the maps and emc2 codes  many of the subroutines underlying these codes can be accessed through stand - alone utilities @xcite .",
    "the maps code implements the so - called structure inversion method ( sim ) , also known as the connolly - williams method @xcite . while the algorithms underlying the maps code are described in @xcite , the present section focuses on its practical use .",
    "the maps code needs two input files : one that specifies the geometry of the parent lattice ( lat.in ) and one that provides the parameters of the first - principles calculations ( xxxx.wrap , where xxxx is the name of the first - principles code used ) .",
    "the clear separation between the thermodynamic and first - principles calculations is a distinguishing feature of atat that enables the package to be easily interfaced with any first - principles code .",
    "table [ exlatin ] gives two annotated examples of a lattice geometry input file .",
    "the package includes ready - made lattice files for the common lattice types ( _ e.g. _   bcc , fcc , hcp ) .",
    "it also includes an utility that automatically constructs multiple lattice geometry input files for common lattices .",
    "for instance ,    * makelat al , ti fcc , bcc , hcp    creates 3 subdirectories containing the appropriate input files for each specified lattice .    example 1 : hcp ti - al system    .examples of lattice geometry input file lat.in .",
    "typically , the coordinate system entry is used to define the conventional unit cell so that all other entries can be specified in the normalized coordinates that are the most natural for the symmetry of the lattice .",
    "the input lattice parameters do not need to be exact , as the first - principles code will optimize them.[exlatin ] [ cols= \" < , < \" , ]      the maps code is started using the command    * maps -d &    where the option -d indicates that all default values of the input parameters should be used , which is what most users will ever need .",
    "( the optional parameters can be displayed by typing maps by itself and further help is available via the command maps -h . )",
    "the trailing & character cause the command to execute in `` background '' mode . in this fashion , maps can continuously be on the lookout , responding to various `` signals '' , while the user performs other tasks .",
    "( the ongoing discussion assumes that the code is run under a unix environment within a shell such as sh , csh , tcsh or bash . )",
    "the process of constructing a cluster expansion from first - principles calculations can be summarized as follows .    1 .",
    "determine the parameters of the first - principles code that provide the desired accuracy .",
    "2 .   let maps refine the cluster expansion .",
    "3 .   decide when the cluster expansion is sufficiently accurate .",
    "typically , one calibrates the accuracy of the first - principles calculations using the `` pure '' structures of the alloy system of interest . to generate the two `` pure '' structures ,",
    "type    * touch ready    this creates a file called ready which tells maps that you are ready to calculate the energy of a structure . within 10 seconds , maps replies with    * finding best structure ... * done !",
    "maps has just created a directory called 0 and , within it , a file called str.out that contains the geometry of one of the two `` pure '' structures .",
    "if you type touch ready once more , the other `` pure '' structure is written to 1/str.out .",
    "you now need to launch the first - principles code to calculate the energy of each structure . type    * cd 0    to go into the directory of the first structure . assuming that your first - principles code is called xxxx , type    * runstruct_xxxx &    after this command has successfully terminated , display the energy of that structure and go back to the initial directory    * cat energy * cd ..    and edit the file defining the first - principles code parameters    * emacs xxxx.wrap &    so that the precision of the calculation is increased ( _ e.g. _  increase the @xmath14-point density or the cut - off of the plane - wave energy ) .",
    "then you rerun the calculations to check by how much the calculated energy has changed :    * cd 0 * runstruct_xxxx & * cat energy ( after the calculations are completed ) * cd ..    this process is repeated until the user is satisfied with the precision of the calculation ( that is , if the energy has become insensitive to changes in the input parameters within the desired accuracy ) .",
    "a similar study should also be performed for the other `` pure '' structure ( labeled structure 1 ) and , if one is really concerned with precision , for a few structures with intermediate concentrations .",
    "once the appropriate _ ab initio _ code parameters have been determined , the fully automated process can begin . from within the directory",
    "where maps was started , type    * pollmach runstruct_xxxx    to start the job manager that will monitor the load on your local network of workstations and ask maps to generate new structures ( _ i.e. _  atomic arrangements ) whenever a processor becomes available .",
    "note that the first time the command is run , instructions will appear on screen that explain how to configure the job dispatching system in accordance to your local computing environment .",
    "once this configuration is complete , the above command should be invoked in the background by appending a `` & '' to it .",
    "while the calculations are running , you can check on the status of the best cluster expansion obtained so far .",
    "the file log.out contains a brief description of the status of the calculations , such as the accuracy of the cluster expansion and various warning messages .",
    "most of the messages pertains to the accurate prediction of the so - called ground states of the alloy system .",
    "the ground states , which are the structures that have the lowest energy for each given concentration , are extremely important to predict accurately because they determine which phases will appear on the phase diagram .",
    "the four possible messages are described below .    *",
    "not enough known energies to fit ce . before displaying any results",
    ", maps waits until enough structural energies are known to fit a minimal cluster expansion containing only nearest - neighbor pair interactions and test its accuracy .",
    "thus , the first cluster expansion is typically constructed after at least 4 structural energies have been computed ( this number may vary as a function of the symmetry of the lattice ) . * among structures of known energy , true ground states differ from fitted ground + states .",
    "the current cluster expansion incorrectly predicts which structures have the lowest energy for given concentrations , among structures whose first - principles energy is known .",
    "the code has built - in checks to avoid this .",
    "however , in rare instances , it may be mathematically impossible to satisfy all the constraints that the code imposes for a cluster expansion to be acceptable .",
    "this problem becomes increasingly unlikely as the number of calculated structural energies increases , so the user should just wait until the problem fixes itself .",
    "* among structures of known energy , true and predicted ground states agree .",
    "opposite of the previous message .",
    "when this message is displayed , maps also displays either one of the following two messages .",
    "* new ground states of volume less or equal to @xmath15 predicted , see predstr.out .",
    "this indicates that the cluster expansion predicts that , at some concentration , there exist other structures that should have an energy even lower than the one of the structures whose energy has been calculated from first - principles . in this case",
    ", maps will investigate the matter by generating those structures and requesting that their energy be calculated .",
    "once again , the user should just wait for the problem to fix itself .",
    "the predicted ground states are flagged by a g in the predstr.out file , so that you can display their energy by typing * * grep g predstr.out * no other ground states of @xmath15 atoms / unit cell or less exist .",
    "the energies of all ground states predicted by the cluster expansion have been confirmed by first - principles calculations . because it can be computationally intensive to perform a full ground state search when interactions extend beyond the nearest - neighbor shell @xcite , maps uses a search algorithm that merely enumerates every possible structures having @xmath15 atoms or less per unit cell and uses the cluster expansion to predict their energies .",
    "the upper limit @xmath15 increases automatically as calculations progress .",
    "the log.out file also contains two other pieces of information :    * concentration range used for ground state checking : [ @xmath16,@xmath17 this displays the user - selected range of concentration over which ground state checking is performed ( which can be specified as a command - line option of the maps command : -c0=@xmath16 -c1=@xmath18 ) .",
    "it may be useful to relax the constraints that ground states be correctly reproduced over the whole concentration range when it is known that other parent lattices are stable in some concentration range .",
    "in this fashion , the code can focus on providing a higher accuracy in the concentration range where the user needs it . *",
    "crossvalidation score : @xmath19 .",
    "this provides the predictive power of the cluster expansion .",
    "it is analogous to the root mean square error , except that it is specifically designed to estimate the error made in predicting the energy for structures not included in the least - squares fit @xcite .",
    "it is defined as @xmath20 where @xmath21 is the calculated energy of structure @xmath3 , while @xmath22 is the predicted value of the energy of structure @xmath3 obtained from a least - squares fit to the @xmath23 other structural energies .",
    "the maps code also outputs quantitative data in various output files .",
    "the simplest way to analyze this data is by typing    * mapsrep    as illustrated in figure [ mapsrep ] , this command displays , in turn    * the log.out file described earlier . *",
    "the formation energy of all structures whose energy is known from first - principles calculations , as well as the predicted energy of all structures maps has in memory .",
    "the convex hull of the ground states among structures of known energy is overlaid while the new predicted ground states ( if any ) are marked by an `` @xmath24 '' .",
    "( note that this ground state line is only meaningful if the log.out file contains `` among structures of known energy , true and predicted ground states agree . '' ) * the formation energy of all structures calculated from first - principles and associated ground state line . * a plot of the magnitude of the effective cluster interactions ( eci ) as a function of the diameter of their associated cluster ( defined as the maximum distance between any two sites in the cluster ) .",
    "pairs , triplets , etc . are plotted consecutively .",
    "this plot is useful to assess the convergence of the cluster expansion .",
    "when the magnitude of the eci for the larger clusters has clearly decayed to a negligible value ( relative to the nearest - neighbor pair eci ) , this is indicative of a well - converged cluster expansion . * a plot of the residuals of the fit ( _ i.e. _  the fitting error ) for each structure .",
    "this information is useful to locate potential problems in the first - principles calculations . indeed",
    ", when first - principles calculations exhibit numerical problems , this typically results in calculated energies that are poorly reproduced by the cluster expansion .",
    "when the user is satisfied with the results ( which are constantly updated ) , maps can be stopped by creating a file called stop in the current directory using the command :    * touch stop    while the job dispatching system can be stopped by typing :    * touch stoppoll    a cluster expansion can be considered satisfactory when    1 .",
    "all ground states are correctly reproduced and no new ground states are predicted .",
    "( the log.out file would then indicate that among structures of known energy , true and predicted ground states agree .",
    "no other ground states of @xmath15 atoms / unit cell or less exist . )",
    "the crossvalidation score , as given in the log.out file , is small ( typically less than 0.025 ev ) .",
    "optionally , it is instructive to verify that the magnitude of the eci decays as a function of the diameter of the corresponding cluster and as a function of the number of sites it contains .",
    "the emc2 code implements semi - grand canonical monte carlo simulations @xcite , where the total number of atoms is kept fixed , while the concentration is allowed to adapt to an externally imposed difference in the chemical potential of the two types of atoms .",
    "the chemical potential difference will be simply referred to as the `` chemical potential '' in what follows .",
    "this ensemble offers the advantage that , for any imposed chemical potential , the equilibrium state of the system is a single phase equilibrium , free of interfaces .",
    "it also simplifies the process of calculating free energies through thermodynamic integration .",
    "while a detailed description of the algorithm underlying this code can be found in @xcite , the current section focuses on the practical usage of the code .",
    "the monte carlo code needs the following files as an input    1 .",
    "a lattice geometry file ( lat.in ) , which is the same as the input for maps ( see table [ exlatin ] ) .",
    "2 .   files providing the cluster expansion ( the clusters used are listed in the clusters.out file while the corresponding eci are listed in the eci.out file . ) .",
    "these files are automatically generated by maps , although users can supply their own cluster expansion , if desired .",
    "a description of the format of these files is available by typing maps -h .",
    "3 .   a list of ground states ( gs_str.out ) , which merely provide convenient starting configurations for the simulations . maps also automatically creates this file .",
    "the parameters controlling the simulation are specified as command - line options .",
    "the first input parameter(s ) needed by the code are the phase(s ) whose thermodynamic properties are to be determined",
    ". there are two ways to invoke the monte carlo simulation code .",
    "when the command emc2 is used , a single monte carlo simulation is run to allow the calculation of thermodynamic properties of a single phase for the whole region of chemical potential and temperature where that phase is stable .",
    "the phase of interest is specified by a command - line option of the form    * -gs=@xmath15 ,    where @xmath15 is a number between @xmath5 and @xmath25 ( inclusive ) , where @xmath26 is the number of ground states .",
    "the value @xmath5 indicates the disordered phase while values ranging from @xmath27 to @xmath25 indicate the phases associated with each ground states ( @xmath27 denoting the ground state with the smallest composition ) .",
    "when the command phb is used , two monte carlo simulations are run simultaneously to enable the determination of the temperature - composition phase boundary associated with a given two - phase equilibrium .",
    "the two phases are specified by    * -gs1=@xmath28 -gs2=@xmath29 .",
    "it is possible to compute a two - phase equilibrium between phases defined on a different parent lattice . in this case",
    ", the user needs to specify the directories where the cluster expansions of each lattice resides using the options of the form    * -d1=_directory 1 _ -d2=_directory 2 _    the accuracy of the thermodynamic properties obtained from monte - carlo simulations is determined by two parameters : the size of the simulation cell and the duration of the simulation .",
    "the size of the simulation cell is specified by providing the radius @xmath30 of a sphere through the command - line option    * -er=@xmath30 .    as illustrated in figure [ mcparam]a",
    ", the simulation cell size will be the smallest supercell that both contains that sphere and that is commensurate with the unit cell of the ground state of interest .",
    "this way of specifying the simulation cell size ensures that the system size is comparable along every direction , regardless of the crystal structure of the ground state of interest .",
    "it also frees the user from manually checking the complicated requirement of commensurability .",
    "it is important that the user check that the simulation cell size is sufficiently large for the thermodynamic properties of interest to be close to their infinite - system - size limiting value .",
    "this can be done by gradually increasing the system size until the calculated quantities become insensitive to the further increases in system size , within the desired accuracy .",
    "the duration of the simulations is automatically determined by the code from a user - specified target precision on the atomic composition of the phase , indicated by a command - line option of the form    * -dx=@xmath31 .",
    "alternatively , the user may also manually set the number @xmath32 of monte carlo steps the system is allowed to equilibrate before thermodynamic averages are computed over a certain number @xmath33 of monte carlo steps using the options    * -eq=@xmath32 -n=@xmath33 .",
    "the monte carlo code also needs additional parameters that specify which portion of a phase s free energy surface needs to be computed . with emc2 ,",
    "the range of temperatures to be scanned are specified in either one of the following two ways :    *",
    "-t0=@xmath34 -t1=@xmath35 -dt=@xmath36 ( for steps in direct temperature ) * or -t0=@xmath34 -t1=@xmath35 -db=@xmath37 ( for steps in reciprocal temperature ) .    the temperature steps in reciprocal temperature ( @xmath37 )",
    "can be useful when calculations are started from infinite temperatures down to a finite temperature .",
    "the -t1 and -dt ( or -db ) options can be omitted if calculations at a single temperature are desired . since the program automatically stops when a phase transition is detected , it is not necessary to know in advance the temperature range of stability of the phase .",
    "the user only needs to ensure that the initial temperature lies within the region of stability of the phase of interest .",
    "an obvious starting point is @xmath38 , since the ground state is then stable , by definition . with the phb code",
    ", the syntax is    * -t=@xmath39 -dt=@xmath36    if the -t option is omitted , calculations start at absolute zero .",
    "the energy and temperature units used are set by specifying the boltzman s constant with the command - line option    * -k=@xmath40 .",
    "a value of @xmath41 corresponds to energies in ev and temperatures in kelvin .    with emc2 ,",
    "the range of chemical potentials to be scanned needs to be specified . once again , only the starting point really matters , because the code will stop when a phase transition is reached . by default ,",
    "chemical potentials are given in a dimensionless form , so as to facilitate the link between the value of the chemical potential and the phase that it stabilizes .",
    "for instance , a chemical potential equal to @xmath42 is such that it would stabilize a two phase equilibrium between phase number @xmath43 and phase number @xmath44 at absolute zero ( see figure [ mcparam]b ) .",
    "a chemical potential between @xmath42 and @xmath45 stabilizes phase number @xmath44 at absolute zero . while these ranges of stability are no longer exact at finite temperature , this dimensionless chemical potential still provides easy - to - interpret input parameters .",
    "the syntax is    * -mu0=@xmath46 -mu1=@xmath47 -dmu=@xmath48    where @xmath48 is the chemical potential step between each new simulation .",
    "chemical potentials can also be entered in absolute value ( say in ev , if the energies are in ev ) by specifying the -abs option .",
    "note that the output files always give the absolute chemical potentials , so that thermodynamic quantities can be computed from them .",
    "with phb , the initial chemical potential is optional when starting from absolute zero because the code can determine the required value from the ground state energies .",
    "it can nevertheless be specified ( in absolute value ) with the -mu=@xmath49 option , if a finite temperature starting point is desired .",
    "a list of the command line options of either the emc2 or phb codes can be displayed by simply typing either command by itself .",
    "more detailed help is displayed using the -h option .",
    "we now give simple examples of the usage of these commands .",
    "consider the calculation of the free energy of the phase associated with ground state number @xmath50 as a function of concentration and temperature .",
    "then , the required commands could , for instance , be    * emc2 -gs=1 -mu0=1.5 -mu1=0.5 -dmu=0.04 -t0=300 -t1=5000 -dt=50 -k=8.617e-5 -dx=1e-3 -er=50 -innert -o = mc10.out * emc2 -gs=1 -mu0=1.5 -mu1=2.5 -dmu=0.04 -t0=300 -t1=5000 -dt=50 -k=8.617e-5 -dx=1e-3 -er=50 -innert -o = mc12.out    ( the only difference in the two command lines is the value of -mu1 and the output file name , specified by the -o option . ) these commands separately compute the two `` halfs '' of the free energy surface , corresponding to the values of the chemical potential below and above the `` middle '' value of @xmath51 which stabilizes ground state @xmath50 at absolute zero",
    ". this natural separation allows you to run each half calculation on a separate processor and obtain the results in half the time .",
    "the values of -dmu , -dt , -dx and -er given here are typical values .",
    "the user should ensure that these values are such that the results are converged .",
    "note that , thanks to the way these precisions parameters are input , if satisfying values have been found for one simulation , the same values will provide a comparable accuracy for other simulations of the same system .",
    "the option -innert indicates that the inner loop of the sequence of simulations scans the temperature axis while the outer loop scans the chemical potential . in this fashion , the point of highest temperature in the region of stability of the phase",
    "will be known early during the calculations .",
    "if the user is more interested in obtaining solubility limits early on , this option can be omitted and the inner loop with scan the chemical potential axis . in either cases , the code exits the inner loop ( and the outer loop , if appropriate ) when it encounters a phase transition .",
    "the emc2 code thus enables the automated calculation of the whole free energy surface of a given phase , as illustrated in figure [ mcout]a . such free energy surfaces can be used as an input to construct thermodynamic databases or supplement existing ones . to facilitate this process , a utility that converts the output of emc2 into input files for the fitting module of thermocalc",
    "is provided .",
    "while the above examples focus on the calculation of a phase s thermodynamic properties over its whole region of stability , one may be interested in directly computing the temperature - composition phase boundary without first constructing a full free energy surface .",
    "to accomplish this task , a typical command - line for the phb program would be    * phb -gs1=0",
    "-gs2=1 -dt=25 -dx=1e-3 -er=50 -k=8.617e-5 -o = ph01.out    this command computes the two phase equilibrium between phase 0 and phase 1 , starting at absolute zero and incrementing temperature in steps of @xmath52 k. the output file ph01.out contains the temperature - composition phase boundary of interest , as well as the chemical potential stabilizing the two - phase equilibrium as a function of temperature .",
    "this output can be used to generate phase diagrams , as illustrated in figure [ mcout]b .",
    "the program automatically terminates when the `` end '' of the two - phase equilibrium has been reached .",
    "if the two - phase equilibrium disappears because of the appearance of a third phase , two new two - phase equilibria have to be separately calculated .",
    "to do so , one uses the final temperature @xmath39 and chemical potential @xmath49 given in the output file as a starting point for two new phb runs :    * phb -t=@xmath39 -mu=@xmath49-gs1=0 -gs2=-1 -dt=25 -dx=1e-3 -er=50 -k=8.617e-5 -o = ph0d.out * phb -t=@xmath39 -mu=@xmath49-gs1=-1 -gs2=1 -dt=25 -dx=1e-3",
    "-er=50 -k=8.617e-5 -o = phd1.out    in the above example , it is assumed that the new phase appearing is the disordered phase ( indicated by the number @xmath5 ) , which will usually be the case .",
    "of course , it is also possible that a given two - phase equilibrium terminates because one of the two phases disappears . in this case",
    ", only one new calculation needs to be started , as in the following example :    * phb -t=@xmath39-mu=@xmath49-gs1=0 -gs2=2",
    "-dt=25 -dx=1e-3 -er=50 -k=8.617e-5 -o = phd1.out    note that phase @xmath50 has been replaced by phase @xmath43 . finally , it is also possible that the two - phase equilibrium terminates because the concentration of each phase converges to the same value , a situation which requires no further calculations .",
    "the user can easily distinguish these three cases by merely comparing the final composition of each phase .",
    "the output file of emc2 reports the value of all calculated thermodynamic functions for each value of temperature and chemical potential scanned .",
    "the quantities reported include    * statistical averages over monte carlo steps , such as energy , concentration , short - range and long - range order parameters . * integrated statistical averages , such as the gibbs free energy @xmath26 or the semi - grand - canonical potential @xmath53 . * the result of common approximations , namely , the low temperature expansion ( lte ) @xcite , the mean - field ( mf ) approximation and the high temperature expansion ( hte ) ( see , for instance , @xcite ) .",
    "while quantities obtained from statistical averages over monte carlo steps are valid for all temperatures and chemical potentials , caution must be exercised when interpreting the result of the various approximations or when looking at the integrated quantities .",
    "the lte , mf and hte approximations are only accurate in a limited range of temperature and it is the responsibility of the user to assess this range of validity .",
    "also , the free energy or the semi - grand - canonical potential are obtained from thermodynamic integration and are thus only valid if the starting point of the integration is chosen appropriately . by default",
    ", the low temperature expansion value is used as a starting point whenever the phase of interest is a ground state , while the high temperature expansion is used when the phase of interest is the disordered state .",
    "hence , to obtain absolute values of the semi - grand - canonical potential , one must ensure that the calculations are started at a sufficiently low temperature ( or sufficiently high temperature , in the case of the disordered phase ) .",
    "this can be checked by comparing the monte carlo estimates with the lte ( or hte ) estimates and verifying that they agree for the first few steps of the thermodynamic integration .",
    "a user - specified starting point for @xmath54 ( _ e.g. _  obtained from an earlier monte carlo simulation ) can be indicated using the option    * -phi0=@xmath54    note that , unlike emc2 , the phb code automatically makes use of the low temperature expansion whenever it is sufficiently accurate in order to save a considerable amount of computational time .    by default , the code reports the thermodynamic quantities associated with the semi - grand - canonical ensemble , such as the semi - grand - canonical potential @xmath54 .",
    "the command - line option -can , instructs the code to add @xmath55 to all appropriate thermodynamic quantities , so that the code outputs the more commonly used canonical quantities , such as the gibbs free energy @xmath26 and the internal energy @xmath56 .",
    "at the present time , atat only handles binary systems . however , a multicomponent version of the toolkit is under development .",
    "about 75% of the code has already been written with multicomponent systems in mind .",
    "although the present tutorial does not discuss the topic , atat also implements reciprocal space cluster expansions and , in particular , the constituent strain formalism @xcite .",
    "a tutorial on the use of this feature will be available shortly on our web site @xcite .    in its current stage of development ,",
    "the atat package only focuses on configurational sources of entropy . to obtain quantitative agreement with experimental measurements ( such as calorimetry )",
    ", it may be necessary to explicitly add the vibrational and electronic contributions to the free energy @xcite . a simple correction that makes the calculated free energy comparable to experiments would be to add a concentration - weighted average of the known experimental free energies of the appropriate elements .",
    "of course , such a shift does not affect the calculated phase diagram , unless it exhibits phases that are superstructures of distinct parent lattices . in the near future , a module that computes electronic and vibrational free energy contributions from first - principles will be added .",
    "( in fact , the monte carlo code already includes all the features required to accommodate nonconfigurational entropy , such as allowing for temperature - dependent eci . )",
    "the alloy theoretic automated toolkit ( atat ) drastically simplifies the practical implementation of the connolly - williams method , in combination with semi - grand - canonical monte carlo simulations , thus providing a high - level interface to the calculation of thermodynamic properties from first - principles .",
    "this toolkit enables researcher to focus on higher - level aspects of first - principles thermodynamic calculations by encapsulating the intricate details of the calculations under an easy - to - use interface .",
    "it also makes these powerful methodologies readily available to the wide community of researchers who could benefit from it .",
    "this work was supported by the nsf under program dmr-0080766 and by the u.s .",
    "department of energy , office of basic energy sciences , under contract no .",
    "de - f502 - 96er 45571 ."
  ],
  "abstract_text": [
    "<S> although the formalism that allows the calculation of alloy thermodynamic properties from first - principles has been known for decades , its practical implementation has so far remained a tedious process . </S>",
    "<S> the alloy theoretic automated toolkit ( atat ) drastically simplifies this procedure by implementing decision rules based on formal statistical analysis that frees the researchers from a constant monitoring during the calculation process and automatically `` glues '' together the input and the output of various codes , in order to provide a high - level interface to the calculation of alloy thermodynamic properties from first - principles . </S>",
    "<S> atat implements the structure inversion method ( sim ) , also known as the connolly - williams method , in combination with semi - grand - canonical monte carlo simulations . in order to make this powerful toolkit available to the wide community of researchers who could benefit from it , </S>",
    "<S> this article present a concise user guide outlining the steps required to obtain thermodynamic information from _ ab initio _ calculations .    * the alloy theoretic automated toolkit : a user guide *    a. van de walle,@xmath0 m. asta,@xmath0 and g. ceder@xmath1 + @xmath0 department of materials science and engineering , + northwestern university , evanston , il 60208 - 3108 + avdw@alum.mit.edu + @xmath1 department of materials science and engineering , + massachusetts institute of technology , cambridge , ma 02139 </S>"
  ]
}
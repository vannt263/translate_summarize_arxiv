{
  "article_text": [
    "the usual methods for finding the hartree - fock ( hf ) minima of nuclear hamiltonians focus on the equations that must be satisfied at the minimum , = 0 here @xmath1 is the hartree - fock expression for the energy , eq .",
    "( [ ehf ] ) below , and @xmath2 is the set of variational parameters .",
    "convergence problems can easily arise , as documented in sect .",
    "5.4 of ref .",
    "they may be overcome by sophisticated iteration schemes such as the broyden method @xcite , but we find that the gradient method advocated in ref .",
    "@xcite and adopted refs .",
    "@xcite is simple and effective .",
    "the gradient method is implemented in  by constructing the vector @xmath3 and using it to guide the iteration process .",
    "this is described in sect . 3 below .",
    "we consider a basis of shell - model wave functions labeled by @xmath4 and @xmath5 and distinguished by an index @xmath6 .",
    "the orbitals are linear combinations of the shell - model wave functions ; they are indexed by greek letters @xmath7 .",
    "the many - body wave function is characterized by an orthogonal matrix @xmath8 that transforms from the shell basis to the orbital basis |= _",
    "i u_,i |iand a diagonal matrix @xmath9 specifying the occupation factors in the orbital basis [ p ] p _ = _",
    "f_. in the zero - temperature code , @xmath10 or 0 depending on whether the orbital is occupied or not , while it the finite temperature code it can vary between these limits .",
    "the fundamental physical quantity associated with the hf solution is the single - particle density matrix @xmath11 , given by [ rho ] = u^t p u. the nominal dimension of the matrix is @xmath12 , where @xmath13 is the number of states in the shell - model basis .",
    "however , the restriction in the code to axially symmetric configurations with good parity considerably reduces the number of nonzero terms ; the code takes advantage of the symmetry by separating the matrix into blocks .",
    "the code treats hamiltonians that can be represented as a sum of a diagonal one - body operator in fock space together with a two - body interaction given by its @xmath14-coupled matrix elements .",
    "the basis states are the shell - model states @xmath15 where @xmath5 is the isospin , @xmath16 is the angular momentum , @xmath17 is the parity and @xmath18 is the @xmath19-component of angular momentum .",
    "the input hamiltonian may be written h = k + v where = _ i _ i a^_i a_i = _ i < j , k < l v_ij , kl a^_i a^_j a_l a_k and [ vijkl ] v_ij , kl = d_ij d_kl_jm(ij|v|kl)_j ( j_i j_j m_i m_j|j m)(j_k j_l m_k m_l|j m ) here @xmath20 are the @xmath14-coupled interaction matrix elements , @xmath21 are clebsch - gordon recoupling coefficients , and @xmath22 .",
    "only the elements @xmath23 with @xmath24 are kept in the array representing the density matrix ; the imposed symmetries require that other elements are zero .",
    "similarly , only terms that can give nonzero contributions to the interaction energy are kept in the array representing @xmath25 .",
    "both the energy and the gradient are compute using the single - particle potential @xmath26 as an intermediate array .",
    "it is defined [ v ] v_ik = _ ijkl ( v_ij , kl - v_ij , lk ) _ jl .",
    "the gradient is derived from the single - particle hamiltonian [ hsp ] h^sp = k + v , a matrix with nominal dimension @xmath27 .    besides @xmath11 , the matrices @xmath28 and @xmath29 are block - diagonal with the blocks determined by @xmath30 .",
    "the code takes advantage of the structure to store these matrices in packed arrays .",
    "the two - body interaction is also stored in a packed array that allows eq .",
    "( [ v ] ) to be evaluated by ordinary matrix - vector multiplication .    for convenience the code",
    "is split into two driver modules , hfgradz.py for hf at zero temperature and hfgradt.py for finite temperature .",
    "the zero - temperature code minimizes the hf energy [ ehf ] e = h = k+ 12 _ 2 v .",
    "the finite - temperature code minimizes the grand potential . in terms of @xmath11 and @xmath31 ,",
    "the grand potential at inverse temperature @xmath32 is given by [ omega ] = e - ^-1 s + ( _ _ z _ _ z n__z ) with @xmath33 from eq .",
    "( [ ehf ] ) , entropy @xmath34 given by [ s ] s = _",
    "( f_f_+ ( 1-f _ ) ( 1 - f _ ) ) , and the expectation values of particle number @xmath35 in the last term .",
    "the latter are segregated in parentheses because that term has no role in the gradient evaluation ; the minimization will be carried out at fixed @xmath35 .",
    "the minimization with respect to the elements of @xmath8 is same in both codes .",
    "the constraint that @xmath8 is orthogonal is satisfied in the iterative process by starting with an orthogonal matrix and updating it by an explicitly orthogonal transformation .",
    "the update from @xmath8 to @xmath36 can be expressed as a thouless transformation of @xmath8 , [ z ] u = e^z u. here @xmath37 is a skew - symmetric matrix of the independent variables @xmath38 ( @xmath39 ) , giving @xmath40 variational parameters in the general case , i.e. without any conserved quantum numbers .",
    "the block structure associated with the @xmath41 quantum numbers greatly reduces that number .",
    "the gradient of @xmath33 ( eq . ( [ ehf ] ) with respect to the elements of the @xmath37 matrix is performed analytically to arrive at the expression = h^orb_(f_- f _ ) . here",
    "@xmath42 is the single - particle hamiltonian in the orbital basis , [ horb ] h^orb = u h^sp u^t . given the gradient , the simplest algorithm to update @xmath8 is the steepest descent method . here",
    "one would use eq .",
    "( [ z ] ) with [ eta ] z _ = _ z e z_. where @xmath43 is some small numerical parameter that controls the stability of the algorithm and its convergence rate . however , convergence of the steepest descent iteration is often poor .",
    "a much more efficient algorithm is used by robledo in his hfb code @xcite .",
    "it takes into account approximately the curvature of the energy surface by introducing a preconditioner into right - hand side of eq .",
    "( [ eta ] ) .",
    "the present code employs a different method that achieves the same purpose , which we call the hybrid method . at each iteration step",
    ", the code diagonalizes a modified orbital hamiltonian @xmath44 with the same diagonal elements as @xmath42 but reduced off - diagonal elements : [ hybrid ] h^orb_|_ij = _ ij h^orb_ii+ _ z ( 1-_ij ) h^orb_ij . the transformation matrix @xmath45 that diagonalizes @xmath44",
    "is used to update @xmath8 , [ update ] u = u_u in the limit @xmath46 the method amounts to a perturbative approximation to the @xmath45 , equivalent to robledo s preconditioned form z _ = _ z 1 |h^orb_-h^orb_| e z_. one caveat : the @xmath45 must keep orbitals ordered by the diagonal elements @xmath47 .",
    "the hybrid method also transforms the empty and filled orbitals among themselves , but that does not change @xmath11 or affect any hf observables .    in another limit , namely @xmath48 , the method amounts to a straightforward diagonalization of the single - particle hamiltonian .",
    "this is often part of the update process in non - gradient methods .",
    "thus , the hybrid method achieves both update techniques under the control of a single parameter .",
    "part of the update may require forcing a change in the expectation value of a single - particle operator . for that purpose ,",
    "@xmath8 is updated by a direct approximation to eq .",
    "( [ eta ] ) , as discussed in the next section .",
    "typically , there are many local minima of the hartree - fock energy functional",
    ". they will also be present in the grand potential , becoming weaker as the temperature of the ensemble increase .",
    "it is important to permit additional constraints on the solutions beyond those for the number operators , in order to explore the energy surface and locate the possible minima .",
    "this is facilitated in the code by allowing the user to numerically define a single - particle operator @xmath49 and constrain its expectation value or just add it as fixed external field . as an external field ,",
    "the user supplies a lagrange multiplier @xmath50 and the gradient is derived from the single - particle hamiltonian [ lamq ] h^sp_= k + v - _ q q the other option , constraining @xmath51 to some value @xmath52 , requires the gradient updating algorithm to carry out two tasks .",
    "the first is to correct the wave function to bring @xmath53 closer to its target value .",
    "this step is based on a @xmath37 matrix with elements given by [ reset ] z _ = q - q q^ph(q^ph)^t q^ph where [ qph ] q^ph _ = q^orb _ ( f_-f _ ) and @xmath54 is the operator in the orbital basis as in eq .",
    "( [ horb ] ) .",
    "the updating matrix must be orthogonal , but need only approximate the exponential @xmath55 .",
    "the code uses a simple pad approximant to preserve the orthogonal character @xcite [ unitary ] e^z ( 1+z/2)(1-z/2)^-1 .    in the presence of the constraint ,",
    "the @xmath8 update for minimization must also be modified to project @xmath37 to a direction that keeps @xmath51 fixed .",
    "this is carried out by replacing @xmath42 by [ horb ] h^orb = h^orb - ( h^orb q^ph ) ( q^ph(q^ph)^t ) q^ph .      at zero temperature , the occupation numbers @xmath31 are zero or one for each orbital . for the input data ,",
    "the set @xmath56 is specified by the particle number in each block rather than orbital - by - orbital .",
    "the neutron and proton numbers for the nucleus is determined by the initial @xmath56 array , @xmath57 .",
    "any change in @xmath56 is discontinuous so there can be no gradient method to effect a change .",
    "the code permits two alternatives to deal with the situation .",
    "the @xmath56 can be kept fixed throughout the iteration process . as will be shown in the examples",
    ", this option gives a very good control to locate nearly degenerate local minima .",
    "the code also permits updates of the occupations numbers . in that option , in each iteration cycle the code populates the orbitals with the lowest single - particle energies .",
    "those determined by the diagonalization of @xmath42 or its constrained forms @xmath58 and @xmath59 .",
    "the finite - temperature code minimizes the grand potential @xmath60 or equivalently the partition function of the grand canonical ensemble .",
    "the occupation factors are now real numbers satisfying @xmath61 . rather than using @xmath31",
    "directly , the code uses variables @xmath62 related to @xmath63 by f_= 11 + e^_. the gradient of @xmath60 with respect to the @xmath64 variables can be carried out independently of the gradient with respect to @xmath19 .",
    "the latter has the same form as in the zero - temperature minimization , = e z _",
    "f _ ) , the gradient with respect to @xmath64 is given by [ grad - alpha ] _",
    "= ( _ - h^orb _ , ) f_(1 - f _ ) . in the code ,",
    "the updated set @xmath65 is computed as [ alpha ] _  = ( 1- _ ) _ + _ ( _ - h^orb _ , ) + _ _ z . here",
    "@xmath66 is the coefficient of the gradient .",
    "the second term is proportional to the gradient times the preconditioner @xmath67 . the last term is an @xmath5-dependent constant that can be interpreted as @xmath32 times the chemical potential .",
    "it is determined from the equation @xmath68 where @xmath35 are the proton and number numbers in the data input . to @xmath53 at the same time in the @xmath64 update would be more complicated ( see eq .",
    "( 21 ) of ref .",
    "@xcite ) and was not implemented in hfgradt.py .    in practice , we have not found any convergence difficult with respect to the @xmath64 update taking @xmath69 as in other iteration schemes .",
    "still , it is reassuring to have a gradient method available for the @xmath63 variables : it guarantees that every cycle of @xmath8 and @xmath63 updates lowers the grand potential for sufficiently small @xmath43 and @xmath66 .",
    "the user must supply files that specify the shell - model space and the one - body and two - body matrix elements of the hamiltonian in the space .",
    "the files defining the shell - model space and the shell - model hamiltonian follow the convention defined in ref .",
    "note that hamiltonian interaction matrix elements are input in the neutron - proton formalism rather than the isospin formalism .",
    "the input data also includes files of the initial occupation numbers @xmath56 and the initial basis - to - orbital transformation @xmath8 . for hfgradz",
    ", the occupation numbers refer to blocks and the size of the array is equal to the number of blocks . for the hfgradt , the input occupation numbers refer to orbitals and the size of the array is the dimension of the orbital space .",
    "note that only the orbitals with positive @xmath18 are included in the array ; the orbitals with negative @xmath18 are treated assuming that the wave function is invariant under time reversal .    in practice",
    ", the initial transformation matrix can be quite crude , as long as it is an orthogonal matrix .",
    "in several of the examples below , the initial @xmath8 is taken as the unit matrix .",
    "one last array required by the code is the matrix of some one - body field @xmath49 such as the quadrupole operator .",
    "both @xmath8 and @xmath49 inputs are in the packed - block array format .",
    "the command line input file contains 6 or more lines as follows : + line 1 .",
    "name of file defining the shell - model space ; + line 2 .",
    "name of the file defining the shell - model hamiltonian ; + line 3 .",
    "name of file giving the initial occupation numbers @xmath63 of the single - particle hf orbitals , followed by a flag : ` f ' for fixed occupation numbers , ` u ' to update occupation numbers ; + line 4 . name of file defining the initial transformation matrix @xmath70 ; + line 5 .",
    "ground - state code : @xmath43 , conv , itermax ; or + line 5. finite - temperature code : @xmath43 , @xmath66 , conv , itermax , @xmath37 , @xmath71 ; + line 6 .",
    "name of file defining a single - particle field @xmath49 , flag for constraint status ( none = ` n',lagrange = ` l ' , constrained = ` c ' ) , @xmath50 or @xmath51 ; + line 7 + .",
    "@xmath32 ( mev@xmath72 ) ( one or more lines in hfgradt ) .",
    "the principal outputs of the code , written to the terminal , are the number of iterations niter , the final energy @xmath33 , and the expectation value of the quadrupole operator @xmath49 or other single - particle operator provided in the input data .",
    "the finite - temperature code also reports the entropy of the ensemble , @xmath34 in eq .",
    "( [ s ] ) .",
    "the code also writes to terminal a table of orbital properties .",
    "the columns are : + 1 ) index for the orbital ; + 2 ) index of the block containing the orbital ; + 3 ) charge of the nucleon ( 0 or 1 ) ; + 4 ) @xmath73 quantum number ; + 5 ) parity @xmath17 : 0 or 1 for even or odd parity respectively ; + 6 ) occupation number @xmath63 , integer for zero temperature and floating - point for finite temperature ; + 7 ) single - particle energy .",
    "+ in addition , the code writes the final @xmath8 matrix and @xmath63 array to files u_new.dat and n_new.dat , respectively .",
    "in the zero - temperature code the file has two lines .",
    "the first line gives the number of occupied orbitals in each block and can be used as an input file to hfgradz . .",
    "the second line give the occupation number for each orbital in the format needed by hfgradt .",
    "apart from that , the two files are in proper format to be used as input to rerun the minimization .",
    "if the minimization is converged , the rerun should only require one iteration step .",
    "the examples use input hamiltonians for @xmath74dy and @xmath75sm , taken from refs .",
    "@xcite . the shell scripts below illustrate the various options available when running the codes .",
    "dy162z.sh : this script runs the zero - temperature code allowing occupation number changes during the iteration . the final energy , @xmath76 agrees with table ii of ref .",
    "+ dy162_def - sph.sh : this script runs the finite temperature code for several @xmath32 values in the vicinity of the deformed - spherical phase transition .",
    "the output quadrupole moments @xmath77 are shown in fig .",
    "a phase transition at @xmath78 mev@xmath72 is evident .",
    "this is a well - known artifact of mean - field theory and is absent in more refined treatments @xcite , + dy162zl.sh,dy162zc.sh,dy162tz.sh : + these scripts exhibit the use of a constraining field . the scripts with an  l \" add the field with a lagrange multiplier . the scripts with a ",
    "c \" constrain the expectation value of the field .",
    "the zero - temperature input parameters have been chosen to show convergence to the same state by both methods . here",
    "the the converged solution has @xmath79 and @xmath80 .",
    "dy as computed by the hfgradt.py code . ]",
    "sm148u.sh : this script shows that the iteration process may fail to converge when the occupation numbers numbers are allowed to change at each iteration step .",
    "it turns out that the update cycles between two sets of occupation numbers .",
    "the two sets differ by a single pair of neutrons moving between block @xmath81 and block @xmath82 .",
    "+ sm148f.sh : this script runs the code for each of the occupation number sets from the previous script .",
    "there is no longer an oscillation , and both runs converge .",
    "the total energies of the two minima are very close to the entry for that nucleus in table ii of ref .",
    "the two solutions can be distinguished more clearly by their quadrupole moments , 314 and 341 @xmath83 respectively .",
    "the coded equations from the text above are listed here , together with their location in the code . + eq .",
    "( [ rho ] ) : util.calcrho + eq .",
    "( [ vijkl ] ) : hfsetup.mk_vv + eq .",
    "( [ v ] ) : util.calcv + eq .",
    "( [ hsp],[lamq ] ) : util.calchsp + eq .",
    "( [ ehf ] ) : util.totale + eq .",
    "( [ omega ] ) : hfgradt + eq .",
    "( [ s ] ) : util2.entropy + eq .",
    "( [ horb ] ) : util.calcorbop + eq .",
    "( [ hybrid],[update ] ) : util2.updateu + eq .",
    "( [ reset],[qph],[unitary ] ) : util2.resetq + eq .",
    "( [ horb ] ) : util2.projectz4 + eq .",
    "( [ alpha ] ) : util2.updatef +",
    "we would to thank y. alhassid and l. robledo for discussions leading to this work , and h. nakada for the use of his hartree - fock code to validate the codes presented here .",
    "support for this work was provided by the us department of energy under grant no .",
    "de - fg02 - 00er41132 .",
    "00 m.  warda , et al . ,",
    "c * 66 * 014310 ( 2002 ) l.m .",
    "robledo and g.f .",
    "bertsch , phys .",
    "c * 84 * 014312 ( 2011 ) . p. ring and p. schuck , _ the nuclear many - body problem _ , ( springer , 1980 ) .",
    "b. a. brown and w. a. richter , phys .",
    "c 74 , 034315 ( 2006 ) .",
    "y.  alhassid , et al .",
    ", arxiv : 1512.03773.pdf ( 2015 ) .",
    "a. baran , et al .",
    "c * 78 * 014318 ( 2008 ) .",
    "y. alhassid , l. fang and h. nakada , phys .",
    "lett . * 101 * , 082501 ( 2008 ) .",
    "[ 15 ] c. zen , y. alhassid , and h. nakada , phys .",
    "lett . * 110 * , 042502 ( 2013 ) .",
    "l.  robledo ( private communication ) ."
  ],
  "abstract_text": [
    "<S> the codes hfgradz.py and hfgradt.py find axially symmetric minima of a hartree - fock energy functional for a hamiltonian supplied in a shell model basis . </S>",
    "<S> the functional to be minimized is the hartree - fock energy for zero - temperature properties or the hartree - fock grand potential for finite - temperature properties ( thermal energy , entropy ) . </S>",
    "<S> the minimization may be subjected to additional constraints besides the neutron and proton numbers . </S>",
    "<S> a single - particle operator can be used to constrain the minimization by adding it to the single - particle hamiltonian with a lagrange multiplier . </S>",
    "<S> one can also constrain its expectation value in the zero - temperature code . </S>",
    "<S> also the orbital filling can be constrained in the zero - temperature code , fixing the number of nucleons having given @xmath0 quantum numbers . </S>",
    "<S> this is particularly useful to resolve near - degeneracies among distinct minima .    </S>",
    "<S> hartree - fock , shell model , gradient method , nuclear levels , nuclear structure    * program summary *    _ manuscript title : _ a finite - temperature hartree - fock code for shell - model hamiltonians + _ authors : _ g.f . </S>",
    "<S> bertsch and j.m . </S>",
    "<S> mehlhaff + _ program title : _ </S>",
    "<S> hfgradz.py , hfgradt.py + _ journal reference : _ </S>",
    "<S> + _ catalogue identifier : _ </S>",
    "<S> + _ licensing provisions : _ none + _ programming language : _ python ( 2.7 ) + _ computer : _ pcs + _ operating system : _ unix , apple osx + _ ram : _ 10 mby + _ keywords : _ hartree - fock , shell model , gradient method , nuclear levels + _ classification : 4.9 minimization and fitting , 17.22 hartree - fock _ + _ external routines / libraries : _ numpy ( 1.6 ) + _ nature of problem : _ </S>",
    "<S> + find hartree - fock minima of shell - model hamiltonians + _ solution method : _ + gradient method with a preconditioner + _ running time : _ </S>",
    "<S> + a few minutes + </S>"
  ]
}
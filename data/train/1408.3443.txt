{
  "article_text": [
    "in this article we are concerned with some recognition and representation problems for unit interval and unit circular - arc graphs .",
    "a _ proper circular - arc ( pca ) model _ is a pair @xmath3 where @xmath4 is a circle and @xmath5 is a family of inclusion - free arcs of @xmath4 in which no pair of arcs in @xmath5 cover @xmath4 .",
    "if some point of @xmath4 is crossed by no arcs , then @xmath0 is a _ proper interval ( pig ) _ model . _ unit circular - arc ( uca ) _ and _ unit interval ( uig ) _ models correspond to the pca and pig models in which all the arcs have the same length , respectively .",
    "every pca model @xmath0 is associated with a graph @xmath6 that contains a vertex for each of its arcs , where two vertices are adjacent if and only if their corresponding arcs have a nonempty intersection .",
    "a graph @xmath7 is a _ proper circular - arc ( pca ) _ graph when it is isomorphic to @xmath6 for some pca model @xmath0 . in such a case",
    ", @xmath7 is said to _ admit _ the model @xmath0 , while @xmath0 is said to _ represent _ @xmath7 .",
    "_ proper interval ( pig ) _ , _ unit circular - arc ( uca ) _ , and _ unit interval ( uig ) _ graphs are defined analogously .",
    "the recognition problem is well solved for uig graphs .",
    "indeed , roberts pig = uig theorem states that every pig graph admits a uig model  @xcite .",
    "hence , it suffices to determine if @xmath7 is a pig graph , a task that can be accomplished in linear time ( e.g.  @xcite ) or logspace  @xcite",
    ". moreover , there are _ certifying _ algorithms that exhibit either a pig model or a forbidden induced subgraph according to whether the input graph is pig or not .",
    "knowing that @xmath7 is a uig graph tells us nothing about its uig models . in this article",
    "we deal with the stronger _ ( unrestricted )",
    "representation _ ( rep ) problem in which a uig model @xmath1 equivalent to an input pig model @xmath0 is to be found . by _",
    "equivalent _ we mean that the extremes of @xmath1 must appear in the same order as in @xmath0 .",
    "the representation problem can be generalized to the _ partial representation extension _ ( repext ) problem in which some arcs of @xmath0 are _ pre - drawn _ , and @xmath1 must contain these arcs .",
    "repext is in turn a special case of the more general _ bounded representation _ ( boundrep )",
    "problem in which a length @xmath8 is given together with lower and upper bounds @xmath9 for each arc @xmath10 of @xmath0 , and the goal is to produce a uig model @xmath1 in which all the arcs have length @xmath11 in such a way that @xmath12 for every arc @xmath10 . here",
    "@xmath13 represents the beginning point of @xmath10 . in this article",
    "we consider a further generalization of boundrepin which @xmath11 , @xmath14 , @xmath15 are integers , and each beginning point @xmath16 of @xmath1 is required to be an integer as well .",
    "we refer to this problem as the intboundrep ; as far as we know , intboundrep has not been considered before .",
    "repis a classical problem whose research is even older than pig graphs .",
    "indeed , repis one of the motivations in the pioneering philosophical work by goodman  @xcite , which dates back to the 1940 s",
    ". moreover , fine and harrop  @xcite developed , in 1957 , an effective method to transform a weak mapping of an array ( i.e. , a pig model ) into a uniform mapping of the same array ( i.e. , a pig model of a power of a path ) ; this algorithm is actually the first proof of robert s pig = uig theorem , as far as our knowledge extends .",
    "linear time algorithms for repare known since more than two decades  @xcite and , recently , a logspace implementation has been devised  @xcite .",
    "the research on repext and boundrepdid not begin until recently and , consequently , they are not as studied as rep .",
    "we remark that these problems are defined not only for uig graphs , but for several graph classes with geometric representations . in the last few years",
    ", the partial representation extension and the bounded representation problems were studied for several graph classes  @xcite . concerning pig graphs , balko et al .",
    "@xcite show that the bounded representation problem is solvable in @xmath2 time .",
    "regarding uig graphs , klavk et al .",
    "@xcite designed an @xmath17 time algorithm for boundrep , where @xmath18 is the cost of multiplying large numbers ( requiring @xmath19 bits , where @xmath19 is the total space consumed by the bounds ) . as the main open problem",
    ", the authors inquire if there exists an algorithm running in less than @xmath17 time . in  @xcite ,",
    "a generalization of boundrepin which the output uig model @xmath1 needs not be equivalent to the input pig model @xmath0 is also considered ; what the authors ask is for @xmath20 to be isomorphic to @xmath6 .",
    "whereas boundrepis polynomial , this generalization is np - complete  @xcite .    while introducing their research on repext , klavk et al .",
    "state that `` specific properties of unit interval representations were * never * investigated since it is easier to work with combinatorially equivalent proper interval representations ''  @xcite . however , in 1990 , pirlot proved that every pig graph admits a _ minimal _ uig model  @xcite .",
    "tough pirlot s work is not of an algorithmic nature , the main tool he uses is a space efficient representation of pig models called the _ synthetic graph_. with the aid of an appropriate weighing ,",
    "this graph reflects the separation constraints that all the equivalent uig models must satisfy . as part of his work",
    ", pirlot solves the problem of determining if a pig graph admits a uig model in which all the arcs have integer endpoints and a given length @xmath11 .",
    "clearly , this is a specific property of uig models .",
    "moreover , pirlot introduces synthetic graphs to solve the linear program in  ( * ? ? ?",
    "* proposition 5.4 ) ( except for the bound constraints ) and , vice versa , the graph used in  ( * ? ? ?",
    "* proposition 5.4 ) is a synthetic graph ( plus two vertices for modeling the bounds ) .",
    "similarly as above , in  @xcite gardi claimed that , up to 2007 , the algorithm by corneil et al .  @xcite was the * only * one able to solve repin linear time .",
    "again , by pirlot s theorem , it makes sense to consider the _ minimal uig representation _ ( minuig ) problem , in which an input pig model has to be transformed into an equivalent minimal uig model . by taking a deeper look to synthetic graphs , mitas",
    "@xcite devised a linear time algorithm to solve minuigand , thus , rep . in the present manuscript",
    "we show that mitas algorithm sometimes fails to find the minimal model .",
    "yet , her algorithm correctly solves repin linear time .",
    "we remark that mitas ( 1994 ) algorithm is contemporary to the one by corneil et al .",
    "( 1995 ) .",
    "minuigis implicitly solved in a recent article by costa et al .",
    "@xcite , where the authors devise an @xmath2 time and space algorithm to solve the minp@xmath21problem . in the minp@xmath21problem",
    "we are given a pig model @xmath0 and the goal is to find a uig model @xmath1 representing a power of a path @xmath22 in such a way that @xmath0 is equivalent to some induced subgraph @xmath23 of @xmath1 and @xmath24 are as minimum as possible .",
    "as proven in  @xcite , minp@xmath21is always solvable .",
    "moreover , @xmath1 needs not be explicitly constructed , as it is implied by @xmath23 .",
    "in fact , @xmath23 is the solution to minuig , as it follows from  @xcite ( see also section  [ sec : powers ] ) . in  (",
    "* chapter  9 ) , soulignac mentions that mitas algorithm can be used to find @xmath23 in linear time .",
    "yet , costa et al .",
    "do not mention this fact in  @xcite although they reference  @xcite to explain the strong relation between repand minp@xmath21 .    in this article",
    "we consider the unrestricted , bounded , and minimal representation problems for the broader class of unit circular - arc graphs .",
    "as far as our knowledge extends , only the unrestricted version has been considered , while lin and szwarcfiter leave some open problems related to the minimal representation problem  @xcite .    as for pig graphs , the recognition problem for pca graphs is solvable in linear time  @xcite or logspace  @xcite .",
    "again , a pca model or a forbidden induced subgraph is obtained according to whether the input graph is pca or not .",
    "we remark , however , that solving the recognition problem for pca graphs is not enough to solve the recognition problem for uca graphs , as not every pca graph is uca . in 1974 , tucker showed a characterization by forbidden subgraphs of those pca graphs that are uca  @xcite .",
    "his proof yields an effective method to transform a pca model @xmath0 into an equivalent uca model @xmath1 .",
    "unfortunately , the extremes of @xmath1 are not guarantied to be of a polynomial size and , thus , the corresponding representation algorithm can not be regarded as polynomial .",
    "more than three decades later , in 2006 , durn et al .",
    "@xcite described how to obtain a forbidden subgraph in @xmath2 time , thus solving the recognition problem .",
    "the representation problem remained unsolved until lin and szwarcfiter showed how to transform any pca model into an equivalent uca model in linear time  @xcite .",
    "their algorithm , however , does not output a _ negative _ certificate when the input graph is not uca .",
    "the problem of finding a forbidden subgraph in linear time was solved by kaplan and nussbaum in  @xcite . yet , up to this date , there is no _ unified _ algorithm for solving the transformation problem while providing a negative certificate when the input model has no equivalent uca models . in  @xcite ,",
    "kbler et al .",
    "mention that the representation problem in logspace is still open .",
    "synthetic graphs appeared more than two decades ago , and they are covered in detail in a book by pirlot and vincke  ( * ? ? ?",
    "* chapter  4 ) .",
    "pirlot and mitas articles are written in terms of semiorders ; their emphasis is on preference modeling and order theory .",
    "this could be , perhaps , the reason why synthetic graphs have gone unnoticed for many researchers in the field of algorithmic graph theory . in this manuscript",
    "we generalize synthetic graphs to pca models and we apply them to solve rep , ( int)boundrep , minuig(and its generalization minuca ) , and minp@xmath21(and its generalization minc@xmath21 ) for uca graphs .",
    "one of our goals is to show that synthetic graphs provide a simpler theoretical ground for understanding pca models with separation constraints .",
    "for this reason , we re - prove some known theorems or rewrite some known algorithms in terms of synthetic graphs .",
    "the manuscript is organized as follows . in section  [ sec : preliminaries ] we describe the terminology employed . in section  [ sec : synthetic graph ]",
    "we introduce synthetic graphs and show how to use them to solve boundrepand intboundrep in @xmath2 time , improving over the algorithm in  @xcite even when restricted to uig graphs . in section  [ sec : tucker ] we show a new version of tucker s characterization which implies a linear time representation algorithm with negative certification , thus solving the problem posed in  @xcite .",
    "the implementation of this algorithm appears in section  [ sec : linear algorithm ] , while section  [ sec : logspace algorithm ] contains a logspace implementation that solves the open problem of  @xcite . to apply our algorithm we need to find , as we call it , the ratio of the input model .",
    "this ratio can be computed by invoking the recognition algorithm of  @xcite .",
    "however , we show an alternative implementation in section  [ sec : kaplan and nussbaum ] , by taking advantage of synthetic graphs . the forbidden structure that we employ to characterize uca graphs is a cycle of the synthetic graph which , a priori , is unrelated to the @xmath25-independents and @xmath26-circuits employed by tucker . in section  [ sec : circuits and independents ] we show that , in fact , these structures are strongly related . in section  [ sec : minimal uca ] we extend the concept of minimal models to uca graphs , and prove that every uca graph admits a minimal model .",
    "an algorithm to generate such a model in polynomial time is also exhibited . in section  [ sec : minimal uig ] , we consider the minuigproblem .",
    "we show that , even though mitas algorithm correctly solves rep , it sometimes fails to provide a minimal model .",
    "we propose a patch but , unfortunately , the new algorithm runs in @xmath2 time . in section  [ sec : powers ] we show how minuigand minucacan be used so as to solve minp@xmath21and minc@xmath21 , respectively . the obtained algorithm for minp@xmath21runs in @xmath2 time but it consumes only linear space .",
    "finally , we include some further remarks and open problems in section  [ sec : remarks ] .",
    "as discussed in  @xcite , every pca model @xmath0 can be encoded with @xmath27 bits , @xmath28 being the number of arcs in @xmath0 .",
    "thus , in theory , an algorithm on @xmath0 is linear when it applies @xmath27 operations on bits .",
    "however , it is a common practice to assume that @xmath0 is implemented with @xmath29 pointers in such a way that the extremes of an arc can be obtained in @xmath30 time when the other extreme is given ( see  @xcite ) . following this tradition , we state that an algorithm is linear when it performs @xmath27 operations on pointers of size @xmath31 .",
    "in this article we consider simple ( undirected ) graphs and multidigraphs with no loops . for the sake of simplicity",
    ", we refer to the latter as _ digraphs _ and to its directed edges as _ edges _ , unless otherwise stated . for a ( di)graph @xmath7 we write @xmath32 and @xmath33 to denote the sets of vertices and bag of edges of @xmath7 , respectively , while we use @xmath28 and @xmath34 to denote @xmath35 and @xmath36 , respectively . for any pair @xmath37",
    ", we denote the ( directed ) edge between @xmath38 and @xmath39 ( _ from or starting at _ @xmath38 _ to or ending at _ @xmath39 ) by @xmath40 .",
    "this notation is used regardless of whether @xmath40 is an edge of @xmath7 or not . to avoid confusions ,",
    "we write @xmath41 as an equivalent of @xmath40 when @xmath7 is a digraph ; the _ in- _ and _ out - degrees _ of @xmath39 are the number of vertices @xmath38 such that @xmath41 and @xmath42 , respectively .    a walk @xmath43 of a ( di)graph @xmath7 is a sequence of vertices @xmath44 such that @xmath45 is an edge of @xmath7 , for every @xmath46 . walk @xmath43 goes _ from ( or starts at ) _ @xmath47 _ to ( or ends at ) _",
    "each walk can be regarded as the bag of edges @xmath49 . for the sake of simplicity",
    ", we make no distinctions about @xmath43 begin a sequence of vertices or a bag of edges .",
    "we say that @xmath43 is a circuit when @xmath50 , that @xmath43 is a _ path _ when @xmath51 for every @xmath52 , and that @xmath43 is a _ cycle _ when it is a circuit and @xmath53 is a path .",
    "sometimes we also say that @xmath43 is a circuit when @xmath54 , to mean that @xmath55 is a circuit .",
    "if @xmath7 contains no cycles , then @xmath7 is an _",
    "acyclic _ digraph .    an _ edge weighing _ , or simply a _ weighing _ , of a ( di)graph @xmath7 is a function @xmath56 . the value @xmath57 is referred to as the _ weight _ of @xmath40 ( with respect to @xmath58 ) . for any bag of edges ,",
    "the _ weight _ of @xmath59 ( with respect to an edge weighing @xmath58 ) is @xmath60 .",
    "we use two distance measures on a ( di)graph @xmath7 with a weighing @xmath58 . for @xmath61 , we denote by @xmath62 the maximum among the weights of the walks from @xmath38 to @xmath39 , while @xmath63 denotes the maximum among the weights of the paths starting at @xmath38 and ending at @xmath39 . note that @xmath64 for every @xmath65 , while @xmath66 when @xmath7 contains no cycle of positive weight  @xcite . for a weighing @xmath67 ,",
    "we write @xmath68 . in other words",
    ", @xmath69 measures the @xmath58-distance from @xmath38 to @xmath39 when only those walks that impose the maximum @xmath67-distance from @xmath38 to @xmath39 are considered . for the sake of notation",
    ", we omit the parameter @xmath7 when there are no ambiguities .    a _ straight plane _ ( di)graph , or simply a _ plane _",
    "( di)graph , is a ( di)graph whose vertices are coordinates in the plane and whose edges are non - crossing straight lines .",
    "similarly , a _ toroidal _",
    "( di)graph is a ( di)graph whose vertices and edges can be placed on the surface of a torus in such a way that no pair of edges intersect .    a _ proper circular - arc _ ( pca )",
    "model @xmath0 is a pair @xmath70 , where @xmath4 is a circle and @xmath5 is a collection of inclusion - free arcs of @xmath4 such that no pair of arcs in @xmath5 cover @xmath4 .",
    "when traversing the circle @xmath4 , we always choose the clockwise direction . if @xmath71 are points of @xmath4 , we write @xmath72 to mean the arc of @xmath4 defined by traversing the circle from @xmath73 to @xmath74 ; @xmath73 and @xmath74 are the _ extremes _ of @xmath72 , while @xmath73 is the _ beginning point _ and @xmath74 the _ ending point_. for @xmath75 , we write @xmath76 .",
    "the _ extremes _ of @xmath5 are those of all arcs in @xmath5 , and two extremes @xmath77 of @xmath0 are _ consecutive _ when there is no extreme @xmath78 ( note that @xmath79 is not consecutive in this case ) .",
    "we assume @xmath4 has a special point @xmath80 that is used for describing the bounds on the extremes ( cf .",
    "this point is only denotational for the unbounded case . for every pair of points @xmath81",
    ", we write @xmath82 to indicate that @xmath83 appears before @xmath84 in a traversal of @xmath4 from @xmath80 . similarly , we write @xmath85 to mean that @xmath86 for any pair of arcs @xmath87 on @xmath4 .    a _ unit circular - arc _ ( uca )",
    "model is a circular - arc model @xmath0 in which all the arcs have the same length .",
    "let @xmath88 be the arcs of @xmath3 , @xmath89 , @xmath90 , and @xmath91 .",
    "we say that @xmath0 is a _",
    "@xmath92-ca model _ when :    1 .",
    "@xmath4 has circumference @xmath93 , [ def : unit-1 ] 2 .",
    "all the arcs of @xmath5 have length @xmath11 , [ def : unit-2 ] 3 .",
    "@xmath94 has length at least @xmath95 for every pair of consecutive extremes @xmath96 , [ def : unit-3 ] 4 .",
    "@xmath97 has length at least @xmath98 for any pair of beginning points @xmath99 , and [ def : unit-3s ] 5 .",
    "@xmath100 for every @xmath101 .",
    "[ def : unit-4 ]    intuitively , @xmath0 is a uca model in which the extremes are separated by at least @xmath95 space , the beginning points are separated by @xmath102 space , and @xmath103 and @xmath104 are lower bounds of the separation from @xmath80 to @xmath105 and from @xmath105 to @xmath80 , respectively .",
    "we simply write that @xmath0 is a _",
    "@xmath106-ca model _ to indicate that @xmath107 , and that @xmath0 is a @xmath108-ca model to mean that @xmath0 is a @xmath109-ca model . to further simplify the notation , we refer to the tuple @xmath110 as a _",
    "uca descriptor _ , and we say that @xmath111 is _ integer _ when @xmath93 , @xmath11 , @xmath95 , @xmath112 , @xmath113 , and @xmath114 are integers .",
    "similarly , a @xmath111-ca model @xmath0 is _ integer _ when @xmath93 , @xmath11 and all the extremes of @xmath0 are integers .",
    "a _ proper interval _",
    "( pig ) model is a pca model @xmath0 in which no arc crosses @xmath80 ; if @xmath0 is also uca , then @xmath0 is a _ unit",
    "_ interval ( uig ) model .",
    "any uig model @xmath0 is a @xmath111-ca model for some large enough @xmath93 ; for simplicity , we just write @xmath115 in this case .",
    "for this reason , we say that @xmath0 is an @xmath116-ig ( resp .",
    "@xmath117 , @xmath11-ig ) model when @xmath0 is a @xmath118-ca ( resp .",
    "@xmath119 , @xmath120-ca ) model .",
    "that is , @xmath0 is an @xmath116-ig model when all the arcs have length @xmath121 , every pair of consecutive extremes is separated by @xmath95 space , every pair of beginning points is separated by @xmath98 space , and @xmath113 and @xmath114 impose lower and upper bounds on the beginning points of @xmath0 .",
    "each pca model @xmath0 _ represents _ a _ proper circular - arc _",
    "graph @xmath6 that contains a vertex for each arc of @xmath0 where two vertices are adjacent if and only if their corresponding arcs have nonempty intersection .",
    "conversely , we say that a graph @xmath7 _ admits _ a pca model @xmath0 to mean that @xmath7 is isomorphic to @xmath6 .",
    "if @xmath0 is uca , then @xmath6 is a _",
    "unit circular - arc ( uca ) _",
    "graph , while if @xmath0 is pig ( resp .",
    "uig ) , then @xmath6 is a _ proper interval ( pig ) _ ( resp .",
    "_ unit interval _ ; _ uig _ ) graph .    clearly , two pca models @xmath122 and @xmath123 are equal when @xmath124 and @xmath125 .",
    "we say that @xmath126 is _ equivalent _ to @xmath127 when the extremes of @xmath126 appear in the same order as in @xmath127 .",
    "formally , @xmath126 and @xmath127 are equivalent if there exists @xmath128 such that @xmath129 are consecutive if and only if @xmath130 are consecutive , for @xmath131 . by definition , @xmath126 and @xmath127 are equivalent whenever they are equal .    in this manuscript we consider several related recognition problems . in the _ representation _ ( rep )",
    "problem a uca model equivalent to an input pca model @xmath0 must be generated .",
    "of course , repis unsolvable when @xmath0 is equivalent to no uca model , a _ negative certificate _ is desired in such a case . in the @xmath111-repproblem , a ( an integer ) uca descriptor @xmath111 is given together with @xmath0 , and the goal is to build a ( an integer ) @xmath111-ca model @xmath1 .",
    "we remark that an integer @xmath1 equivalent to @xmath0 exists whenever @xmath111 is integer and @xmath111-repis solvable .",
    "the _ bounded representation _ ( boundrep ) is a slight variation of @xmath111-repin which a feasible @xmath132 must be found by the algorithm , as it is not given as input . that is ,",
    "we are given a pca model @xmath3 together with @xmath133 , @xmath134 and @xmath135 , and we ought to find a @xmath111-ca model equivalent to @xmath0 for some uca descriptor @xmath110 with @xmath136 .",
    "integer bounded representation _",
    "( intboundrep ) problem is a generalization of boundrepin which all the input values are integers and the output model must be integer as well .",
    "we also study the minuig , minuca , minp@xmath21 , and minc@xmath21problems that are related to _ minimal _ models .",
    "we postpone their definitions to sections [ sec : minimal uca ]  and  [ sec : powers ] .      as it is customary in the literature , in this article",
    "we assume that all the arcs of a pca model @xmath0 are open and no two extremes of @xmath0 coincide .",
    "the reason behind these assumptions is that @xmath0 can always be transformed into an equivalent model @xmath137 that satisfies these properties .",
    "a word of caution is required , though , as in this article we deal with the lengths of the arcs . if we allow coincidences in the extremes of @xmath0 , for instance , it is possible to shrink the length of the arcs or the circle of some uca models .",
    "we emphasize , nevertheless , that all the arguments in this article , with the obvious adjustments , work equally well without these assumptions . in particular , note that the articles by klavk et al . , mitas , and pirlot allow coincident extremes  @xcite .    by definition , for us",
    "pca models can not have two arcs covering the circle .",
    "this is a somehow artificial restriction that we impose for the sake of simplicity . in general",
    ", this class of models is said to be _",
    "normal_. however , it is well known that every non - normal pca model can be transformed into a normal pca model in linear time or logspace ( see e.g.  @xcite ) .",
    "moreover , note that if two arcs in a uig model cover the circle , then such a model represents a complete graph .",
    "the complete graph on @xmath28 vertices admits the _ minimal _ uig model @xmath138 , thus we do not lose much by excluding these non - normal models when dealing with rep , minuca , and minuig . in turn",
    ", the fact that @xmath0 is normal is not used in theorem  [ thm : separation constraints ] , thus ( int)boundrepis also solvable for non - normal models .    finally , we require two additional restrictions on the input pca models for technical reasons .",
    "we say that a pca model @xmath0 with arcs @xmath88 is _ trivial _ when either    1 .",
    "@xmath139 , or 2 .",
    "@xmath140 are consecutive for some @xmath101 .    if 1",
    ".  holds , then we can not claim that @xmath141 in section  [ sec : synthetic graph : separation ] .",
    "however , in this case @xmath0 represents a complete graph and @xmath138 is the unique minimal and integer uca model equivalent to @xmath0 . thus all the considered problems are trivial in this case . if 2 .",
    "is true , then @xmath142 is a loop of the digraph @xmath143 defined in section  [ sec : synthetic graph ] .",
    "we can certainly allow the existence of such a loop in @xmath144",
    ". however , this edge plays no role in the considered problems as @xmath145 by @xmath146{{\\ensuremath{\\textrm{sep}}}}_{\\ref{def : sep-3}})$ ] .",
    "pirlot introduced the synthetic graph of a pig model  @xcite to represent the separation constraints of its extremes in any equivalent uig representation . in this section",
    "we extend them to pca models and we show that they correctly reflect the separation constraints in any equivalent uca model .",
    "let @xmath3 be a pca model with arcs @xmath88 .",
    "the _ bounded synthetic graph _",
    "of @xmath0 is the digraph @xmath143 ( see figure  [ fig : synthetic graph ] ) that has a vertex @xmath147 for each @xmath148 and a vertex @xmath149 , and whose edge set is @xmath150 , where :    * @xmath151 , * @xmath152 , * @xmath153 , and * @xmath154 .",
    "the edges in @xmath155 , @xmath156 , @xmath157 , and @xmath158 are said to be the _ steps _ , _ noses _ , _ hollows _ , and _",
    "bounds _ of @xmath143 , respectively .",
    "( note that @xmath155 , @xmath156 and @xmath157 could have a nonempty intersection , even if this is not the common case .",
    "however , @xmath143 has no loops as @xmath0 is not trivial . ) for the sake of simplicity , we usually drop the parameter @xmath0 from @xmath143 when no ambiguities are possible .",
    "moreover , we regard the arcs of @xmath0 as being the vertices of @xmath144 , thus we may say that @xmath159 is a nose instead of writing that @xmath160 is a nose .    ' '' ''     of a pca model .",
    "each gray vertex corresponds to a black vertex ( we separate them for the sake of exposition ) and each edge is drawn only once .",
    "the edges are labeled with @xmath161 , @xmath162 , and @xmath163 according to whether they are noses , hollows , and steps , respectively .",
    "the height of @xmath0 is @xmath164 and each vertex is drawn in a row that corresponds to its height ; the height is indicated to the left .",
    "note that there are @xmath165- , @xmath166- , and @xmath167-noses , @xmath80- , @xmath168- , @xmath169- , and @xmath170-hollows , and @xmath80- , @xmath165- , and @xmath166-steps . ]     of a pca model .",
    "each gray vertex corresponds to a black vertex ( we separate them for the sake of exposition ) and each edge is drawn only once .",
    "the edges are labeled with @xmath161 , @xmath162 , and @xmath163 according to whether they are noses , hollows , and steps , respectively .",
    "the height of @xmath0 is @xmath164 and each vertex is drawn in a row that corresponds to its height ; the height is indicated to the left .",
    "note that there are @xmath165- , @xmath166- , and @xmath167-noses , @xmath80- , @xmath168- , @xmath169- , and @xmath170-hollows , and @xmath80- , @xmath165- , and @xmath166-steps . ]",
    "we classify the edges of @xmath144 in two classes according to the positions of their arcs .",
    "we say a step ( resp .",
    "nose ) @xmath159 is _ internal _ when @xmath171 , while a hollow is _ internal _ when @xmath172 .",
    "non - internal edges are referred to as _ external _ ; in particular , all the bounds are external .",
    "observe that every step is internal except @xmath173 .",
    "similarly , a nose @xmath159 is internal if and only if the arc @xmath174 does not cross @xmath80 , while a hollow @xmath159 is internal if and only if @xmath175 does not cross @xmath80 . since the purpose of @xmath149 is to represent the point @xmath80 of @xmath0 , we can say , in short , that @xmath159 is internal when @xmath80 is not crossed in the traversal of the extremes involved in the definition of @xmath159 .    we define a special edge weighing @xmath176 of @xmath144",
    "whose purpose is to indicate how far or close must @xmath105 and @xmath177 be in any @xmath111-ca model equivalent to @xmath0 , for every edge @xmath159 of @xmath144 . for a uca descriptor @xmath111 , the edge weighing _",
    "@xmath176 _ is such that :    1 .",
    "@xmath178 if @xmath159 is a step , [ def : sep-1 ] 2 .",
    "@xmath179 if @xmath159 is a nose,[def : sep-2 ] 3 .",
    "@xmath180 if @xmath159 is a hollow , and[def : sep-3 ] 4 .",
    "@xmath181 and @xmath182 for every @xmath101,[def : sep-4 ]    where @xmath183 equals @xmath80 if and only if @xmath159 is internal . for the sake of notation",
    ", we omit the subscript @xmath111 from @xmath184 when no ambiguities are possible .",
    "suppose for a moment that @xmath0 is a @xmath111-ca model . by definition , @xmath185 when @xmath159 is a internal nose of @xmath144 , while @xmath186 when @xmath159 is an external nose of @xmath144 .",
    "thus , equation @xmath187{{\\ensuremath{\\textrm{sep}}}}_{\\ref{def : sep-2}})$ ] models the non - intersection constraints imposed by the noses of @xmath144 .",
    "a similar analysis shows that @xmath188{{\\ensuremath{\\textrm{sep}}}}_{\\ref{def : sep-1}})$ ] indicates that all the beginning points must be at distance at least @xmath98 , @xmath146{{\\ensuremath{\\textrm{sep}}}}_{\\ref{def : sep-3}})$ ] models the intersection constraints imposed by the hollows of @xmath144 , and @xmath189{{\\ensuremath{\\textrm{sep}}}}_{\\ref{def : sep-4}})$ ] models the bound constraints , assuming that @xmath149 represents @xmath80 in @xmath0 .    as we shall see in theorem",
    "[ thm : separation constraints ] , a @xmath111-ca model equivalent to @xmath0 exists when the longest path problem with weight @xmath184 has a feasible solution on @xmath144 . in such case ,",
    "a @xmath111-ca model can be generated by observing the distances from @xmath149 . with this in mind , we define @xmath190 to be the @xmath111-ca model with arcs @xmath191 such that @xmath192 , for every @xmath101 ( we assume arithmetic modulo @xmath93 ) . for simplicity ,",
    "we omit @xmath0 and @xmath111 from @xmath1 as usual .",
    "[ thm : separation constraints ] the following statements are equivalent for a pca model @xmath0 with arcs @xmath88 and a ( an integer ) uca descriptor @xmath111 :    a.   @xmath0 is equivalent to a @xmath111-ca model.[thm : separation constraints : equivalence ] b.   @xmath193 for every cycle @xmath194 of @xmath144 .",
    "[ thm : separation constraints : cycles ] c.   @xmath1 is a ( an integer ) @xmath111-ca model equivalent to @xmath0.[thm : separation constraints : model ]    ( [ thm : separation constraints : equivalence ] ) @xmath195 ( [ thm : separation constraints : cycles ] ) .",
    "suppose @xmath0 is equivalent to a @xmath111-ca model @xmath137 with arcs @xmath196 such that @xmath197 corresponds to @xmath198 for @xmath101 .",
    "write @xmath199 to mean the point @xmath80 of @xmath137 .",
    "then , it is not hard to see ( cf .  above )",
    "that @xmath200 for every edge @xmath159 of @xmath144 .",
    "hence , by induction , @xmath201 for every cycle @xmath194 of @xmath144 that contains @xmath198 .",
    "( [ thm : separation constraints : cycles ] ) @xmath195 ( [ thm : separation constraints : model ] ) .",
    "let @xmath202 be the arcs of @xmath1 , @xmath203 , @xmath204 , and note that @xmath205 for every @xmath206 as @xmath144 has no cycles of positive length .",
    "thus , by @xmath189{{\\ensuremath{\\textrm{sep}}}}_{\\ref{def : sep-4}})$ ] , @xmath1 satisfies @xmath207{unit}_{\\ref{def : unit-4}})$ ] as @xmath208 and @xmath209 . since @xmath1 satisfies @xmath210{unit}_{\\ref{def : unit-1}})$]@xmath211{unit}_{\\ref{def : unit-2}})$ ] by definition , it follows that @xmath1 is a @xmath212-ca model for some @xmath213 . to prove that @xmath1 is a @xmath111-ca model equivalent to @xmath0",
    ", it suffices to see that ( a ) @xmath214 for every @xmath101 , ( b ) @xmath215 when @xmath216 are consecutive in @xmath0 , and ( c ) @xmath217 when @xmath218 are consecutive in @xmath0 .",
    "( a ) : :    @xmath219 is a step , thus    @xmath220 .",
    "( b ) : :    @xmath159 is a hollow of    @xmath144 ; let    @xmath183 be @xmath165 if and only if    @xmath175 crosses @xmath80 .",
    "note that ,    equivalently , @xmath221 if and only if    @xmath159 is external .",
    "thus ,    @xmath222 .",
    "( c ) : :    @xmath159 is a nose of    @xmath144 ; if    @xmath183 equals @xmath165 when    @xmath174 crosses @xmath80 , then    @xmath223 .",
    "( [ thm : separation constraints : model ] ) @xmath195 ( [ thm : separation constraints : equivalence ] ) .",
    "trivial .    when restricted to pig models , theorem  [ thm : separation constraints ] is a somehow alternative formulation of proposition 2.5 in  @xcite ; see also proposition  5.4 in  @xcite .",
    "though simple enough , theorem  [ thm : separation constraints ] allows us to solve @xmath111-repas follows .",
    "first , we build the digraph @xmath144 in which every edge @xmath159 is weighed with @xmath224 .",
    "then , we invoke the bellman - ford shortest path algorithm  @xcite on @xmath144 to obtain @xmath225 for every @xmath226 .",
    "if bellman - ford ends in success , then we output @xmath190 ; otherwise , we output the cycle of positive weight found as the negative certificate .",
    "bellman - ford computes each value @xmath227 in an iterative manner . at iteration @xmath228 ,",
    "the value of @xmath229 is updated to @xmath230 for every @xmath226 .",
    "as @xmath144 has @xmath27 edges , a total of @xmath2 arithmetic operations are performed . by @xmath188{{\\ensuremath{\\textrm{sep}}}}_{\\ref{def : sep-1}})$]@xmath189{{\\ensuremath{\\textrm{sep}}}}_{\\ref{def : sep-4}})$ ] , @xmath231 when @xmath111 is integer , thus @xmath30 time is required by each operation .",
    "however , as it was noted by klavk et al .",
    "@xcite , we can not assume @xmath30 time per operation when @xmath111 is non - integer .",
    "the inconvenient is that to compare two fractional values @xmath232 and @xmath233 we have to multiply them with a common multiple of @xmath234 and @xmath235 .",
    "thus , a priori , the number of bits used to represent @xmath236 could be large , and the operations required to compute @xmath237 could take more than constant time .",
    "it turns out that we can represent @xmath229 with @xmath30 bits in a simple manner .",
    "the idea is to use a _ distance tuple _ @xmath238 , [ { \\ensuremath{\\ell } } ] , [ { \\ensuremath{d } } ] , [ { \\ensuremath{{\\ensuremath{d}}_s } } ] \\rangle$ ] with @xmath239 , @xmath240 , [ { \\ensuremath{\\ell } } ] \\in \\mathbb{z}$ ] , and @xmath241 , [ { \\ensuremath{{\\ensuremath{d}}_s } } ] \\in \\mathbb{n}$ ] , in order to represent the rational @xmath242 = b + [ { \\ensuremath{c}}]{\\ensuremath{c}}+ [ { \\ensuremath{\\ell}}]{\\ensuremath{\\ell}}+ [ { \\ensuremath{d}}]{\\ensuremath{d}}+ [ { \\ensuremath{{\\ensuremath{d}}_s}}]{\\ensuremath{{\\ensuremath{d}}_s}}.\\ ] ] so , for instance , we can represent @xmath243 as in the following table , where @xmath183 equals @xmath80 if and only if @xmath159 is internal .    [ cols=\"<,^,^,^,^,^\",options=\"header \" , ]     the converse follow from theorem  [ thm : tucker ] ( [ thm : tucker : equivalence ] ) @xmath195 ( [ thm : tucker : negative - certificate ] ) .",
    "as stated , our algorithm outputs two cycles when @xmath0 is not equivalent to a uca model : a nose cycle @xmath244 with ratio @xmath245 and a cycle @xmath246 of @xmath247 . as in the proofs of implications ( [ thm :",
    "tucker : hollow - cycles ] ) @xmath248 ( [ thm : tucker : cycles ] ) @xmath248 ( [ thm : tucker : negative - certificate ] ) , @xmath246 is a hollow cycle with a nonnegative length factor . moreover , as in implication ( [ thm : tucker : bound ] ) @xmath248 ( [ thm : tucker : hollow - cycles ] ) , @xmath249 .",
    "note that , in principle , this certificate needs not be equal to the one in section  [ sec : kaplan and nussbaum ] , because @xmath246 needs not be the hollow cycle with minimum ratio .",
    "nevertheless , this certificate is somehow analogous to the one provided by the algorithm by kaplan and nussbaum .    rigorously speaking",
    ", the certificate of section  [ sec : kaplan and nussbaum ] is neither equal to the one given by the algorithm by kaplan and nussbaum .",
    "the former is a pair of nose and hollow cycles while the latter is a pair of @xmath25-independent plus @xmath26-circuit .",
    "nose cycles can contain more vertices than the corresponding @xmath25-independents while hollow cycles can contain more vertices than the corresponding @xmath26-circuits .",
    "these added vertices are , nevertheless , redundant and can be eliminated from the certificate so as to obtain a minimal forbidden induced submodel as the negative certificate .",
    "the purpose of this section is to describe the equivalence between nose ( resp .",
    "hollow ) cycles and @xmath25-independents ( resp .",
    "@xmath26-circuits ) and how to transform one into the other and vice versa .",
    "we begin describing what are the @xmath25-independents and @xmath26-circuits .    for two arcs @xmath250 of a pca model @xmath0",
    ", we define the _ @xmath251 arc of @xmath250 _ to be the arc @xmath174 . for a sequence of arcs @xmath252 , the _",
    "@xmath251 traversal of @xmath5 _ is the family of arcs @xmath253 that contains the @xmath251 arc of @xmath254 for every @xmath255 ( where @xmath256 ) .",
    "the number of _ turns _ of @xmath253 is the number of its arcs that contain the point @xmath80 of @xmath257 . in simple terms ,",
    "the @xmath251 traversal of @xmath5 is obtained by traversing @xmath257 from @xmath258 to @xmath259 to  to @xmath260 to @xmath258 , while its number of turns is the number of complete loops to the circle in such a traversal .",
    "an @xmath25-independent of a pca model @xmath0 is a sequence of arcs @xmath261 such that @xmath262 for every @xmath263 and whose @xmath251 traversal takes @xmath264 turns .",
    "similarly , an @xmath26-circuit is a sequence of arcs @xmath265 such that @xmath266 for every @xmath267 and whose @xmath251 traversal takes @xmath268 turns .",
    "note that @xmath269 as no pair of arcs of @xmath0 cover the circle .",
    "an @xmath25-independent is _ maximal _ when @xmath270 is maximum and @xmath271 are relative primes , while an @xmath26-circuit is _ minimal _ when @xmath272 is minimum and @xmath273 are relative primes .",
    "as we shall shortly see , statement ( [ thm : tucker : equivalence ] ) @xmath248 ( [ thm : tucker : bound ] ) of theorem  [ thm : tucker ] is equivalent to the following theorem by tucker .",
    "a pca model @xmath0 is equivalent to an uca model if and only if @xmath274 for every maximal @xmath25-independent and every minimal @xmath26-circuit .",
    "say that an @xmath25-independent @xmath261 is _ standard _ when @xmath275 is immediately preceded by an ending point in @xmath0 , for every @xmath263 .",
    "note that if @xmath275 is preceded by the beginning point of an arc @xmath10 , then @xmath276 is also an @xmath277-independent of @xmath0 .",
    "consequently , @xmath0 has an @xmath25-independent if and only if it has a standard @xmath277-independent .",
    "there is a one - to - one correspondence between the standard @xmath25-independents of @xmath0 and the nose circuits of @xmath278 , as follows .",
    "let @xmath261 be a standard @xmath277-independent and @xmath279 be the step path of @xmath278 that goes from @xmath280 to @xmath281 , where @xmath281 is the arc whose ending point immediately precedes @xmath282 .",
    "clearly , @xmath283 is a nose of @xmath278 , thus @xmath284 is a nose circuit of @xmath278 .",
    "conversely , if @xmath194 is a nose circuit , and @xmath285 are its noses , then @xmath286 is an standard @xmath277-independent for some @xmath264 .",
    "it is not hard to see that @xmath287 and @xmath288 , thus the correspondence is one - to - one .",
    "observe that the number of turns @xmath264 in the @xmath251 traversal of @xmath5 is precisely the number of external noses and steps of @xmath289 .",
    "in other words , @xmath290 similarly , the number @xmath291 of arcs of @xmath5 equals the number of noses of @xmath194 ; by , @xmath292 hence , @xmath293 .",
    "a similar analysis holds for @xmath294-circuits .",
    "say that an @xmath294-circuit @xmath295 is _ standard _ when @xmath275 immediately precedes an ending point @xmath296 in @xmath0 .",
    "note that @xmath0 contains an @xmath26-circuit if and only if it contains an standard @xmath26-circuit ; in such circuit , @xmath297 is a hollow of @xmath278 .",
    "then , @xmath5 is in a one - to - one correspondence with the hollow circuit @xmath289 that goes through @xmath298 where each @xmath279 is the step path going from @xmath299 to @xmath300 .",
    "as before , the number of turns in the @xmath251 traversal of @xmath5 is the number of external hollows minus the number of external steps , i.e. , @xmath301 while the number @xmath302 of arcs in @xmath5 is its number of hollows ; by @xmath303 hence , @xmath304 .",
    "clearly , we can obtain @xmath305 in @xmath27 time for any standard @xmath25-independent ( resp .",
    "@xmath26-circuit ) @xmath5 , and vice versa .",
    "moreover , note that , as stated , @xmath306 if and only if @xmath307 .",
    "we summarize this section in the next theorem .",
    "a pca model @xmath0 contains an @xmath25-independent ( resp .",
    "@xmath26-circuit ) @xmath5 if and only if @xmath278 contains a nose ( resp .",
    "hollow ) circuit @xmath194 with ratio @xmath308 ( resp .",
    "@xmath309 ) .",
    "moreover , such a circuit @xmath194 of @xmath278 can be obtained in @xmath27 time when @xmath5 is given as input .",
    "conversely , @xmath5 can be obtained in @xmath27 time when @xmath194 is given as input .",
    "theorem  [ thm : separation constraints ] gives us a procedure to check if @xmath0 is equivalent to a @xmath111-ca model , when @xmath111 is given as input .",
    "however , not much is known about the sets of feasible values @xmath93 and @xmath11 . in this aspect ,",
    "unit circular - arc models are much less studied than unit interval models . in this section",
    "we prove that every uca model admits an equivalent _ minimal _ uca model .",
    "minimal uca models are a generalization of minimal uig models , as defined by pirlot  @xcite . an @xmath117-ig model with arcs",
    "@xmath88 is _ @xmath310-minimal _ when    1 .",
    "@xmath311 , and [ def : minuig-1 ] 2 .",
    "@xmath312 for every @xmath101 , [ def : minuig-2 ]    for every equivalent @xmath313-ig model .",
    "condition  @xmath314{\\text{min - uig}}_{\\ref{def : minuig-2}})$ ] as expressed above does not make much sense for uca models , as there is not a natural left - to - right order of the arcs ; the @xmath80 point of the circle is just a denotational tool",
    ". however we can translate condition @xmath315 by asking the circumference of the circle to be minimized . with this in mind",
    ", we say that a @xmath106-ca model @xmath0 is _ @xmath310-minimal _ when    1 .",
    "@xmath311 , and [ def : minuca-1 ] 2 .",
    "@xmath316,[def : minuca-2 ]    for every equivalent @xmath317-ca model .",
    "the fact that every uca model is equivalent to a minimal uca model follows from the next lemma .",
    "[ lem : minimal model ] if @xmath0 is equivalent to a @xmath318-ca model and a @xmath319-ca model for @xmath320 , then @xmath0 is also equivalent to a @xmath321-ca model , for every @xmath322 and @xmath323 .    for the sake of notation , write @xmath324 to denote the uca descriptor @xmath325 , for every @xmath326 and @xmath327 .",
    "suppose , to obtain a contradiction , that @xmath0 is equivalent to no @xmath328-ca model for some @xmath329 and @xmath330 .",
    "then , by theorem  [ thm : separation constraints ] , @xmath331 , @xmath332 , and @xmath333 for some cycle @xmath194 of @xmath278 . by  , there exists @xmath334 such that @xmath335 for every @xmath326 and @xmath327 .",
    "thus , by  , @xmath336 recall that @xmath337 by theorem  [ thm : tucker ] . then , as @xmath338 , we obtain that ( v ) @xmath339 ( recall @xmath340 ) , while ( vi ) @xmath341 follows by @xmath342 and ( v ) . then , @xmath343 this is impossible , because @xmath344 as all the extremes of the @xmath345-ca model equivalent to @xmath0 are separated by @xmath95 and each of its @xmath28 beginning points is separated from the next by @xmath102 , while @xmath346 and @xmath347 by definition  .",
    "every uca graph admits a @xmath310-minimal uca model for every @xmath348 .    for the rest of this section ,",
    "we restrict ourselves to the case in which @xmath95 and @xmath112 are integers . by  , @xmath349 for every uig model @xmath0 , thus , by  , @xmath350 if and only if @xmath11 and @xmath93 are integers .",
    "we obtain , therefore , the following corollary that was first proved by pirlot  @xcite .",
    "every @xmath310-minimal uig model is integer for every @xmath351    the above corollary holds for uca models with an integer nose ratio as well .",
    "however , we were not able to prove or disprove the above corollary for the general case .",
    "for this reason , we say that an integer @xmath106-ca model @xmath0 is _ @xmath352-minimal _ when if satisfies @xmath353{\\text{min - uca}}_{\\ref{def : minuca-1}})$ ] and @xmath354{\\text{min - uca}}_{\\ref{def : minuca-2}})$ ] for every integer @xmath317-ca model .",
    "a natural algorithmic problem is minucain which we ought to find a @xmath352-minimal uca model equivalent to an input @xmath106-ca model @xmath0 .",
    "a simple solution is to apply theorem  [ thm : separation constraints ] for every @xmath355 and every @xmath356 with a total cost of @xmath357 time .",
    "we can easily improve this algorithm by replacing the linear search of @xmath358 with a binary search .",
    "[ cor : circle range ] let @xmath0 be a pca model . if @xmath359 for some cycle @xmath194 of @xmath278 , then @xmath0 is not equivalent to a @xmath360-ca model , for every @xmath320 , where @xmath361 is the sign of @xmath362 .",
    "let @xmath363 be such that @xmath364 ; note that @xmath363 needs not be positive . by",
    ", @xmath365 then , by theorem  [ thm : separation constraints ] , @xmath0 can not be equivalent to a @xmath366-ca model .    corollary  [ cor : circle range ] provides us with a somehow efficient algorithm to binary search the minimum @xmath367 such that @xmath0 is equivalent to a @xmath368-ca model , when @xmath369 are given as input . by definition @xmath370 , while we assume @xmath371 as otherwise @xmath6 has no edges and the problem is trivial .",
    "the idea of the algorithm is simply to assume that such a value @xmath358 exists and belongs to some range @xmath372 $ ] ; initially @xmath373 and @xmath374 .",
    "then , we query if @xmath0 is equivalent to some @xmath375-ca model , where @xmath376 is the middle of @xmath377 $ ] .",
    "if affirmative , then @xmath378 $ ] by definition . otherwise , we search some cycle @xmath194 with @xmath379 . by corollary  [ cor : circle range ] , @xmath380 if @xmath381 , while @xmath382 $ ] otherwise . regardless of whether @xmath358 exists or not , this algorithm requires @xmath383 queries .    every time we need to query",
    "if @xmath0 is equivalent to a @xmath384-ca model , we solve @xmath111-repas in section  [ sec : synthetic graph : bounded algorithm ] .",
    "since @xmath385  @xcite , we conclude that the total time required to obtain @xmath386 , thus solving minuca , is @xmath387 .",
    "pirlot proved in  @xcite that every uig model @xmath0 is equivalent to a @xmath388-minimal uig model .",
    "however , it was mitas who showed that such a model can be found in linear time by transforming @xmath0 into an equivalent uig model @xmath389  @xcite .",
    "unfortunately , her proof has a flaw that invalidates the minimality arguments .",
    "though @xmath389 is equivalent to @xmath0 , it needs not be @xmath388-minimal . on the other hand , the algorithm in the previous section can be implemented so as to run in @xmath390 time when applied to @xmath0 .",
    "( below we discuss condition why @xmath314{\\text{min - uig}}_{\\ref{def : minuig-2}})$ ] is satisfied by the unit interval model so obtained . ) in this section we briefly describe mitas algorithm and its counterexample , and propose a patch .",
    "the obtained algorithm runs in @xmath2 time , and its a compromise between mitas algorithm and the algorithm in the previous section .",
    "let @xmath0 be a pig model with arcs @xmath88 .",
    "by definition , no arc of @xmath0 crosses @xmath80 , thus @xmath278 has no external hollows .",
    "similarly , external noses and steps are redundant in @xmath278 for testing if @xmath0 is equivalent to a @xmath11-ig model , as @xmath115 .",
    "therefore , we assume that @xmath278 has only five types of edges , namely @xmath165-noses , @xmath80- and @xmath165-steps , and @xmath80- and @xmath168-hollows .",
    "mitas identifies two special vertices of @xmath278 for each height value .",
    "a _ leftmost _",
    "vertex is a vertex @xmath198 such that either @xmath391 or @xmath392 , while a _ rightmost _",
    "vertex is a vertex @xmath393 such that either @xmath394 or @xmath395 .     while in @xmath278 the maximum cycle has length @xmath396 . ]     while in @xmath278 the maximum cycle has length @xmath396 . ]",
    "suppose @xmath0 is equivalent to some @xmath11-ig model and let @xmath397 be as defined in theorem  [ thm : separation constraints ] , but replacing @xmath144 and @xmath149 with @xmath278 and @xmath398 , respectively .",
    "that is , the arc @xmath399 corresponding to @xmath198 begins at @xmath400 for every @xmath101 . for @xmath401 ,",
    "let @xmath198 and @xmath393 be leftmost and rightmost vertices with @xmath402 , and @xmath403 be a path from @xmath198 to @xmath393 . by definition of @xmath404",
    ", it follows that @xmath405 .",
    "that is , @xmath406 mitas key idea is to take @xmath11 so that holds by equality when @xmath407 is maximum ( recall @xmath184 depends on @xmath11 ) .",
    "the flaw , however , is that she discards @xmath80-hollows and @xmath165-steps before solving  .    to make the above statement more precise ,",
    "let @xmath408 be the digraph obtained from @xmath409 by removing all the @xmath80-hollows and @xmath165-steps , and @xmath410 be a path from @xmath198 to @xmath393 in @xmath253 ( as usual we drop the parameter @xmath0 from @xmath253 ) .",
    "mitas claims ( theorem  5 in  @xcite , although using a different terminology ) that @xmath411 when @xmath412 is maximum and @xmath11 is minimum .",
    "figure  [ fig : mitas counterexample ] shows a counterexample to this fact .",
    "the inconvenient is that @xmath413 is greater than @xmath414 when every maximum path from @xmath398 to @xmath198 contains the @xmath80-hollow or @xmath165-step ending at @xmath198 .",
    "equation   is fundamental for keeping the time and space complexity low .",
    "the main observation is that @xmath253 is acyclic whereas @xmath278 is not .",
    "[ lem : redmitas acyclic ] digraph @xmath408 is acyclic , for any uig model @xmath0 .",
    "given that @xmath253 is acyclic , we can compute the _ column _ that every arc of @xmath0 occupies in a pictorial description of @xmath253 .",
    "column _ of @xmath398 is @xmath415 , while , for every @xmath416 , the _ column _ of @xmath198 is : @xmath417 for a small enough @xmath418 ( say @xmath419 ) ; obviously , if @xmath198 is not the end of a nose ( resp .  hollow , step ) , then the corresponding value in the above equation is @xmath80 .",
    "it is easy to see , by the existence of @xmath80-steps , that @xmath420 when @xmath198 and @xmath393 are the leftmost and rightmost with height @xmath302 , for every @xmath421 . in figure",
    "[ fig : mitas counterexample ] , each vertex @xmath10 of @xmath278 occupies the coordinate @xmath422 on the plane , for some imperceptible @xmath418 , while each directed edge is a straight arrow .",
    "this pictorial description , which we call the _ canonical drawing _ of @xmath253 , was proposed by mitas and it is quite useful for simplifying some geometrical arguments .",
    "the reason is that this drawing is a plane digraph ; we include a proof of this fact as it is not completely explicit in  @xcite .",
    "[ thm : canonical drawing ] the canonical drawing of @xmath253 is a plane digraph .",
    "suppose , to obtain a contradiction , that the canonical drawing of @xmath253 it is not a plane graph .",
    "then , there are two crossing straight lines that correspond to the edges @xmath159 and @xmath423 with @xmath424 . by definition",
    ", @xmath253 has only @xmath165-noses , @xmath168-hollows and @xmath80-steps , while every vertex @xmath10 is positioned in @xmath422 .",
    "hence , it follows that @xmath159 is a @xmath165-nose , @xmath423 is a @xmath168-hollow , and @xmath425 .",
    "but this configuration is impossible because it implies that @xmath218 and @xmath426 are consecutive , while @xmath427 and @xmath428 .",
    "[ cor : toroidal ] if @xmath0 is a pca graph , then @xmath278 is a toroidal digraph .",
    "a torus can be obtained from a rectangle by first pasting its north and south borders together , and then pasting the east end of the obtained cylinder with its west end .",
    "thus , it suffices to show how to draw @xmath278 into a rectangle allowing some edges to escape from the north ( resp .",
    "east ) into the south ( resp .",
    "let @xmath253 be obtained from @xmath278 by removing all the external edges , plus @xmath165-steps and @xmath80-hollows . to draw @xmath278 , first copy the canonical drawing of @xmath253 into the rectangle .",
    "then , draw all the @xmath80-hollows and @xmath165-steps so that they escape through the east , all the @xmath169-hollows and @xmath166-noses so as to run through the north , and the @xmath166-step and all the @xmath170-hollows and @xmath167-noses by going through the north first and then through the east .",
    "it is not hard to see that such a drawing is always possible .    in the next lemma",
    "we take advantage of the canonical drawing to prove that every cycle of @xmath278 contains exactly one @xmath80-hollow or @xmath165-step .",
    "pirlot also studies the shape of the cycles of @xmath278  @xcite , but without taking advantage of mitas canonical drawing .",
    "for the next lemma , recall that @xmath429 for any cycle @xmath194 .",
    "[ lem : one backedge ] if @xmath0 is a pig model , then @xmath430 for any cycle @xmath194 of @xmath278 .",
    "note that @xmath431 , hence , by lemma  [ lem : redmitas acyclic ] , @xmath337 .",
    "suppose , to obtain a contradiction , that @xmath432 .",
    "then , @xmath194 has a subpath @xmath433 with no @xmath80-hollows nor @xmath165-steps such that @xmath434 and @xmath435 each is either a @xmath80-hollow or a @xmath165-step of @xmath194 . among all such possible paths ,",
    "take @xmath194 so that @xmath436 is maximum .",
    "note that @xmath437 , thus @xmath194 has another path @xmath438 such that @xmath439 is its unique leftmost vertex . by the maximality of @xmath436",
    ", it follows that @xmath440 while , since @xmath441 and @xmath437 , it follows that @xmath442 .",
    "call @xmath443 to the curve that results by traversing @xmath433 in the canonical drawing of @xmath253 .",
    "note that @xmath443 is indeed the graph of a continuous function on @xmath444 because @xmath445 for every @xmath446 by .",
    "similarly , the curve @xmath447 that results by traversing @xmath448 in the canonical drawing of @xmath253 is also the graph of a continuous function . since @xmath449 for every @xmath450",
    ", it follows that @xmath443 contains a vertex with height @xmath302 for every @xmath451 and @xmath447 contains a vertex with height @xmath302 for every @xmath452 .",
    "then , taking into account that @xmath453 and @xmath439 are leftmost vertices with @xmath454 and @xmath455 and @xmath456 are rightmost vertices with @xmath442 , we obtain that @xmath443 and @xmath447 intersect .",
    "hence , by theorem  [ thm : canonical drawing ] , @xmath433 and @xmath438 have a nonempty intersection , which implies that @xmath194 is not a cycle .    by lemma  [ lem : one backedge ] and , @xmath457 for every cycle @xmath194 .",
    "then , by theorem  [ thm : separation constraints ] and lemma  [ lem : one backedge ] , the minimum @xmath458 such that @xmath0 is equivalent to an @xmath459-ig model is @xmath460 since @xmath253 is acyclic , we can compute @xmath461 in @xmath27 time and space for any given @xmath165-step or @xmath80-hollow @xmath462 of @xmath278 . then , @xmath458 is obtained in @xmath463 time .    once @xmath458 has been obtained , @xmath464 can be constructed in @xmath2 time and linear space as in section  [ sec : synthetic graph : bounded algorithm ] .",
    "we claim that @xmath1 is a @xmath310-minimal uig model .",
    "indeed , @xmath1 satisfies @xmath465{\\text{min - uig}}_{\\ref{def : minuig-1}})$ ] by the minimality of @xmath458 . to see that @xmath1 satisfies @xmath314{\\text{min - uig}}_{\\ref{def : minuig-2}})$ ] , consider any path @xmath194 of @xmath278 from @xmath398 to @xmath393 .",
    "note that @xmath466 because no leftmost vertex is traversed twice by @xmath194 .",
    "therefore , by , @xmath467 for any @xmath468 .",
    "consequently , since @xmath469 in any @xmath117-uig model equivalent to @xmath1 , it follows that @xmath1 satisfies @xmath314{\\text{min - uig}}_{\\ref{def : minuig-2}})$ ] as well .",
    "we conclude that @xmath2 time and linear space suffices to solve the _ minimal uig representation _ ( minuig ) problem in which @xmath0 and @xmath90 are given and a @xmath310-minimal uig model equivalent to @xmath0 must be generated .",
    "[ thm : minimal algorithm ] minuigcan be solved in @xmath2 time and linear space , for any @xmath348 .",
    "powers of paths and cycles are intimately related to uig and uca graphs , respectively . for any graph @xmath7 , its _ @xmath228-th power _",
    "@xmath470 is the graph obtained from @xmath7 by adding an edge between @xmath39 and @xmath58 whenever there is a path in of length at most @xmath228 joining them . in this section",
    "we write @xmath471 and @xmath472 to denote the path and cycle graphs with @xmath473 vertices , respectively .",
    "lin et al .",
    "@xcite noted that @xmath7 is a uca ( resp .",
    "uig ) graph if and only if @xmath7 is an induced subgraph of @xmath474 ( resp .",
    "@xmath22 ) for some @xmath24 ( see also  @xcite for uig graphs and @xcite for uca graphs ) .    in  @xcite ,",
    "costa et al .",
    "propose a specialized @xmath2 time and space algorithm whose purpose is to find the minimum values @xmath228 and @xmath475 such that a uig graph @xmath7 is an induced subgraph of @xmath476 .",
    "the reason for writing @xmath475 dependent on @xmath228 is to be as truthful to  @xcite as we can ; they always write the number of vertices as a function on the power . this is not important , though , as we know that @xmath473 in independent of @xmath228 by pirlot s minimality theorem  @xcite .",
    "that is , @xmath473 is the minimum such that @xmath7 is an induced subgraph of @xmath22 for every possible @xmath228 .",
    "mitas algorithm could have been applied to obtain @xmath228 and @xmath473 in @xmath27 time and space , under the assumption that it is correct .",
    "interestingly , pirlot s theorem and mitas algorithm predate  @xcite for at least fifteen years . moreover , ( * ? ? ?",
    "* section 9 ) , which is referenced within  @xcite , mentions that mitas algorithm could be adapted to work when the input is a pig model .",
    "the purpose of this section is to apply the minimization algorithms so as to find powers of paths and cycles supergraphs .",
    "let @xmath477 ( resp .",
    "@xmath478 ) be the @xmath479-ca ( resp .",
    "@xmath480-ig ) model that has an arc with beginning point @xmath481 for every @xmath482 .",
    "it is not hard to see that @xmath477 ( resp .",
    "@xmath478 ) is a @xmath388- and @xmath483-minimal model representing @xmath474 ( resp .",
    "@xmath22 ) .",
    "we say that a @xmath108-ca ( resp .",
    "@xmath11-ig ) model @xmath389 is _ completable _ when @xmath389 can be obtained by removing arcs from @xmath477 ( resp .",
    "@xmath478 ) for some @xmath484 . in such case ,",
    "@xmath477 ( resp .",
    "@xmath478 ) is referred to as the _ completion _ of @xmath389 , while @xmath389 is said to be a _",
    "@xmath485-extension _ of @xmath0 for every uca ( resp .",
    "uig ) model @xmath0 equivalent to @xmath389 .",
    "note that @xmath389 is completable if and only if :    1 .",
    "@xmath11 is odd , [ def : ext-1 ] 2 .",
    "@xmath93 is even , and [ def : ext-2 ] 3 .",
    "all its beginning points are even ( thus @xmath389 is a @xmath486-ca model).[def : ext-3 ]    under this new terminology , the result by lin et al .",
    "@xcite states that every uca ( resp .",
    "uig ) model @xmath0 admits a @xmath485-extension @xmath389 for some @xmath484 .",
    "in analogy to minimal models , we say that @xmath389 is a _",
    "minimal extension _ of @xmath0 when @xmath487 and @xmath488 for every @xmath489-extension of @xmath0 .",
    "the _ minimal power of a cycle ( resp .",
    "path ) _ minc@xmath21(resp .",
    "minp@xmath21 ) problem consists of finding @xmath389 when the uca ( resp .",
    "uig ) model @xmath0 is given as input .",
    "a priori , @xmath0 could have no minimal extensions .",
    "but , if @xmath389 is the minimal extension of @xmath0 , then , clearly , @xmath228 and @xmath473 are the minimum values such that @xmath6 is an induced subgraph of @xmath474 ( resp .",
    "@xmath22 ) .",
    "we now discuss how to solve minc@xmath21and minp@xmath21 .",
    "the fact that @xmath0 admits a minimal extension follows by lemma  [ lem : minimal model ] and theorem  [ thm : separation constraints ] . indeed ,",
    "if @xmath458 is the minimum odd number such that @xmath0 is equivalent to a @xmath490-ca model , and @xmath358 is the minimum even number such that @xmath0 is equivalent to a @xmath491-ca model , then , by lemma  [ lem : minimal model ] , @xmath0 is equivalent to a @xmath492-ca model .",
    "furthermore , @xmath493 is even for every edge @xmath159 of @xmath278 , by @xmath188{{\\ensuremath{\\textrm{sep}}}}_{\\ref{def : sep-1}})$]@xmath189{{\\ensuremath{\\textrm{sep}}}}_{\\ref{def : sep-4}})$ ] .",
    "thus , all the beginning points of @xmath494 are even .",
    "then , @xmath389 is completable by @xmath495{ext}_{\\ref{def : ext-1}})$]@xmath496{ext}_{\\ref{def : ext-3}})$ ] , while it is equivalent to @xmath0 by theorem  [ thm : separation constraints ] .",
    "that is , @xmath389 is the minimal extension of @xmath0 and , thus , the solution to minc@xmath21 . the values @xmath458 and @xmath358 can be found @xmath497 time with an algorithm similar to the one in section  [ sec : minimal uca ] .",
    "for the special case in which @xmath0 is a uig model , we observe that any @xmath483-minimal model @xmath389 equivalent to @xmath0 is a minimal extension of @xmath0 .",
    "just recall that the length @xmath458 of the arcs in @xmath389 is equal to @xmath498 for some path @xmath194 of @xmath499 . since @xmath500 is",
    "even , it follows that @xmath458 is odd and , thus , @xmath501 is even for every edge @xmath159 of @xmath499 . by @xmath495{ext}_{\\ref{def : ext-1}})$]@xmath496{ext}_{\\ref{def : ext-3}})$ ] , this implies that @xmath389 is an extension of @xmath0 which , of course , is minimal by @xmath465{\\text{min - uig}}_{\\ref{def : minuig-1}})$ ]  and  @xmath314{\\text{min - uig}}_{\\ref{def : minuig-2}})$ ] . by theorem  [ thm : minimal algorithm ] , minp@xmath21is solvable in @xmath2 time and linear space .",
    "synthetic graphs proved to be an important tool for studying how do the uig representations of pig graphs look like .",
    "the generalization to pca models is direct ; the fact that some arcs wrap around the circle is not important for defining the synthetic graph . to represent the separation constraints that an equivalent uca model must satisfy ,",
    "all we had to include to pirlot s original formulation was the variable @xmath93 representing the circumference of the circle .",
    "generalizations of simple ideas from pig to pca graphs are not always as easy to obtain .",
    "unfortunately , pirlot s ideas were introduced in the context of semiorders and were not exploited in the context of pca graphs ; the recognition problem of uca graphs in polynomial time could have been solved more than a decade earlier . in this closing section",
    "we provide some remarks and discuss some open problems .",
    "our definition of uca descriptors states that every pair of beginning points should be separated by @xmath102 distance .",
    "an obvious generalization to @xmath111-repand ( int)boundrepis to replace @xmath112 with a function @xmath502 that indicates , for each arc @xmath198 , the separation between @xmath105 and the next beginning point @xmath503 .",
    "the reader can check that theorem  [ thm : separation constraints ] holds for this generalization as well .",
    "all we need to do is to replace the value @xmath112 with @xmath504 for each step @xmath505 .",
    "moreover , we can use similar functions to further separate @xmath506 from @xmath177 for every nose @xmath159 , and @xmath105 from @xmath507 for any hollow @xmath159 .",
    "we did not consider these generalization for the sake of simplicity and notation .",
    "in section  [ sec : minimal uca ] we gave a simple polynomial algorithm to transform a uca model @xmath0 into a minimal @xmath508-ca model .",
    "the algorithm works by performing a linear search on @xmath458 and a binary search on @xmath358 . an obvious idea to improve its running time",
    "is to replace the linear search on @xmath458 with a binary search .",
    "unfortunately , this idea is not feasible at first sight because we can not claim @xmath509 to be a range .",
    "for instance , @xmath510 admits a @xmath511-ca model , but it admits no @xmath512-ca model , whatever value of @xmath93 is .",
    "this is just one more example of a property that is lost when the linear structure of pig models is replaced by the circular structure of pca graphs as @xmath513 when @xmath0 is pig .",
    "as calculated in section  [ sec : minimal uca ] , the running time of the minimization algorithm is @xmath514 .",
    "this bound is not tight , as the actual running time is @xmath515 , and @xmath458 could be much lower than @xmath516 . as a matter of fact , we developed a simple program for testing if a uca model is equivalent to some @xmath517-ca model .",
    "we tested it on many input uca models and , in all cases , the program was successful .",
    "in section  [ sec : minimal uig ] we fixed mitas algorithm so as to solve the minimization problem for uig models .",
    "unfortunately , the running time of the patched algorithm is @xmath2 .",
    "there are two bottlenecks in this algorithm .",
    "first , we have to compute the minimum length value @xmath458 .",
    "then , we have to apply the bellman - ford algorithm to compute the actual model .",
    "with respect to the space complexity , it is not hard to observe that @xmath458 can be computed in unambiguous logspace .",
    "indeed , all we have to do is to find the distance between the leftmost and rightmost arcs for every height .",
    "as the canonical drawing is a plane graph with @xmath30 vertices with @xmath80 in - degree , this problem requires unambiguous logspace  @xcite .",
    "finding logspace algorithms to compute @xmath458 and the minimal model remain as open problems .",
    "finally , it should be noted that a uca graph may admit many _ non - equivalent _ minimal uca models .",
    "indeed , a uca graph may admit an exponential number of non - equivalent models , each of which is equivalent to a minimal uca model .",
    "it makes sense , then , to say that a model @xmath0 is _ minimum _ when it satisfies @xmath353{\\text{min - uca}}_{\\ref{def : minuca-1}})$ ] and @xmath354{\\text{min - uca}}_{\\ref{def : minuca-2}})$ ] for every model @xmath137 such that @xmath6 is isomorphic to @xmath518 .",
    "as it was noted by huang  @xcite , every connected and co - connected pca graph admits a unique pca model , up to equivalence and full reversal .",
    "thus , any minimal model of a connected and co - connected pca graph is minimum .",
    "similarly , every disconnected pca graph is pig , and all its models can be obtained from a model @xmath0 by exchanging the order in which their components appear from @xmath80 , and reversing some of the components .",
    "thus , again , any minimal model of @xmath6 is minimum .",
    "co - disconnected pca graphs share a similar property : all their pca models can be obtained from a pca model @xmath0 by exchanging the order in which its co - components appear , plus reversing some co - components  @xcite .",
    "thus , one is tempted to think that all the minimal pca models are minimum , yet this is not the case .",
    "figure  [ fig : minimum model ] shows two @xmath165-minimal @xmath519-ca and @xmath520-ca models that represent the graph whose co - components are @xmath521 and @xmath522 .",
    "we leave as open the problem of computing the minimum uca model .",
    "m.  balko , p.  klavk , and y.  otachi . bounded representations of interval and proper interval graphs . in l.  cai , s .- w .",
    "cheng , and t .- w .",
    "lam , editors , _ algorithms and computation _ , vol .",
    "8283 of _ lecture notes in computer science _ , pp . 535546 .",
    "springer , 2013 .",
    "doi : 10.1007/978 - 3 - 642 - 45030 - 3_50 .",
    "t.  blsius and i.  rutter .",
    "simultaneous pq - ordering with applications to constrained embedding problems . in s.",
    "khanna , editor , _ proceedings of the twenty - fourth annual acm - siam symposium on discrete algorithms , soda 2013 , new orleans , louisiana , usa , january 6 - 8 , 2013 _ , pp .",
    "siam , 2013 .",
    "doi : 10.1137/1.9781611973105.74 .",
    "s.  chaplick , p.  dorbec , j.  kratochvl , m.  montassier , and j.  stacho .",
    "contact representations of planar graph : rebuilding is hard . in _ graph - theoretic concepts in computer science _ , lecture notes in comput .",
    "springer , berlin .",
    "s.  chaplick , r.  fulek , and p.  klavk .",
    "extending partial representations of circle graphs .",
    "in s.  wismath and a.  wolff , editors , _ graph drawing _ , vol .",
    "8242 of _ lecture notes in computer science _ , pp .",
    "springer , 2013 .",
    "doi : 10.1007/978 - 3 - 319 - 03841 - 4_12 .",
    "d.  g. corneil , h.  kim , s.  natarajan , s.  olariu , and a.  p. sprague .",
    "simple linear time recognition of unit interval graphs . _",
    "inform . process .",
    "_ , 550 ( 2):0 99104 , 1995 .",
    "doi : 10.1016/0020 - 0190(95)00046-f .",
    "p.  hell and j.  huang .",
    "certifying lexbfs recognition algorithms for proper interval graphs and proper interval bigraphs .",
    "_ siam j. discrete math . _ ,",
    "180 ( 3):0 554570 ( electronic ) , 2004/05 .",
    "doi : 10.1137/s0895480103430259 .",
    "h.  kaplan and y.  nussbaum . certifying algorithms for recognizing proper circular - arc graphs and unit circular - arc graphs .",
    "_ discrete appl .",
    "_ , 1570 ( 15):0 32163230 , 2009 .",
    "doi : 10.1016/j.dam.2009.07.002 .",
    "p.  klavk , j.  kratochvl , and t.  vyskoil .",
    "extending partial representations of interval graphs .",
    "in _ theory and applications of models of computation _ , vol .",
    "6648 of _ lecture notes in comput .",
    "_ , pp . 276285 .",
    "springer , heidelberg , 2011 .",
    "doi : 10.1007/978 - 3 - 642 - 20877 - 5_28 .",
    "klavk , j.  kratochvl , t.  krawczyk , and b.  walczak . extending partial representations of function graphs and permutation graphs . in _ algorithms ",
    "esa 2012 _ , vol .",
    "lecture notes in comput .",
    "_ , pp . 671682 .",
    "springer , heidelberg , 2012 .",
    "doi : 10.1007/978 - 3 - 642 - 33090 - 2_58 .",
    "p.  klavk , j.  kratochvl , y.  otachi , i.  rutter , t.  saitoh , m.  saumell , and t.  vyskoil .",
    "extending partial representations of proper and unit interval graphs . in r.",
    "ravi and i.  grtz , editors , _ algorithm theory ",
    "swat 2014 _ , vol .",
    "8503 of _ lecture notes in computer science _ , pp . 253264 .",
    "springer , 2014 .",
    "doi : 10.1007/978 - 3 - 319 - 08404 - 6_22 .",
    "j.  kbler , s.  kuhnert , and o.  verbitsky . solving the canonical representation and star system problems for proper circular - arc graphs in logspace . in _",
    "32nd international conference on foundations of software technology and theoretical computer science _ , vol .",
    "18 of _ lipics .",
    "leibniz int .",
    "inform . _ , pp .",
    "387399 . schloss dagstuhl .",
    "leibniz - zent . inform . ,",
    "wadern , 2012 .",
    "m.  c. lin , f.  j. soulignac , and j.  l. szwarcfiter .",
    "short models for unit interval graphs . in _ lagos09v latin - american algorithms , graphs and optimization symposium _ , vol .",
    "35 of _ electron .",
    "notes discrete math .",
    "elsevier sci .",
    "b. v. , amsterdam , 2009 .",
    "doi : 10.1016/j.endm.2009.11.041 .",
    "m.  c. lin , d.  rautenbach , f.  j. soulignac , and j.  l. szwarcfiter .",
    "powers of cycles , powers of paths , and distance graphs .",
    "_ discrete appl .",
    "_ , 1590 ( 7):0 621627 , 2011 .",
    "doi : 10.1016/j.dam.2010.03.012 .",
    ". minimal representation of semiorders with intervals of same length . in _",
    "orders , algorithms , and applications ( lyon , 1994 ) _ , vol .",
    "831 of _ lecture notes in comput .",
    "_ , pp . 162175 .",
    "springer , berlin , 1994 .",
    "doi : 10.1007/bfb0019433 .",
    "m.  pirlot and p.  vincke .",
    "_ semiorders _ , vol .",
    "36 of _ theory and decision library .",
    "series b : mathematical and statistical methods_. kluwer academic publishers group , dordrecht , 1997 .",
    "doi : 10.1007/978 - 94 - 015 - 8883 - 6 .",
    "d.  stolee and n.  v. vinodchandran .",
    "space - efficient algorithms for reachability in surface - embedded graphs . in _",
    "2012 ieee 27th conference on computational complexity ",
    "ccc 2012 _ , pp .",
    "ieee computer soc .",
    ", los alamitos , ca , 2012 .",
    "doi : 10.1109/ccc.2012.15 ."
  ],
  "abstract_text": [
    "<S> we consider the unrestricted , minimal , and bounded representation problems for unit interval ( uig ) and unit circular - arc ( uca ) graphs . in the unrestricted version , a proper circular - arc ( pca ) model @xmath0 </S>",
    "<S> is given and the goal is to obtain an equivalent uca model @xmath1 . we show a linear time algorithm with negative certification that can also be implemented to run in logspace . in the bounded version , @xmath0 is given together with some lower and upper bounds that the beginning points of @xmath1 must satisfy . </S>",
    "<S> we develop a linear space @xmath2 time algorithm for this problem . </S>",
    "<S> finally , in the minimal version , the circumference of the circle and the length of the arcs in @xmath1 must be simultaneously as minimum as possible . </S>",
    "<S> we prove that every uca graph admits such a minimal model , and give a polynomial time algorithm to find it . </S>",
    "<S> we also consider the minimal representation problem for uig graphs . as a bad result </S>",
    "<S> , we show that the previous linear time algorithm fails to provide a minimal model for some input graphs . </S>",
    "<S> we fix this algorithm but , unfortunately , it runs in linear space @xmath2 time . finally , we apply the minimal representation algorithms so as to find the minimum powers of paths and cycles that contain a given uig and uca models , respectively .    </S>",
    "<S> unit circular - arc graphs , unit interval graphs , recognition problem , bounded representation problem , minimal model , powers of paths and cycles . </S>"
  ]
}
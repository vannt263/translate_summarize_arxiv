{
  "article_text": [
    "discrete fractional transforms are the generalizations of the ordinary discrete transforms with one additional fractional parameter . in the past decades ,",
    "various discrete fractional transforms including discrete fourier transform @xcite , @xcite , discrete fractional hartley transform @xcite , discrete fractional cosine transforms and discrete sine transform @xcite have been introduced and found wide applications in many scientific and technological areas including digital signal processing @xcite , image encryption @xcite , @xcite , @xcite and digital watermarking @xcite and others .",
    "different fast algorithms for their implementations have been separately developed to minimize computational complexity and implementation costs . in @xcite",
    "a discrete fractional hadamard transform for the vector of length @xmath3 was introduced , however a fast algorithm for the realization of this transform has not been proposed . in our previous paper @xcite",
    "we describe a rationalized algorithm for dfrht possessing a reduced number of multiplications and additions .",
    "analysis of the mentioned algorithm shows that not all of existing improvement possibilities have been realized . in this paper , we proposed a novel algorithm for the discrete fractional hadamard transform that require fewer total real additions and multiplications than our previously published solution .",
    "a hadamard matrix of order @xmath0 is a @xmath4 symmetric matrix whose entries are either 1 or @xmath5 and whose rows are mutually orthogonal . in this paper",
    "we will use the normalized form of this matrix and we will denote it by @xmath6 . for @xmath7 the hadamard matrices can be recursively obtained due to sylvester s construction @xcite : @xmath8\\!,\\ \\mathbf{h}_{n}=\\frac{1}{\\sqrt{2 } } \\left [ \\begin{array}{cc } \\mathbf{h}_{\\frac{n}{2 } } & \\mathbf{h}_{\\frac{n}{2}}\\\\ \\mathbf{h}_{\\frac{n}{2 } } & -\\mathbf{h}_{\\frac{n}{2 } } \\end{array}\\right]\\ ] ] for @xmath9 .",
    "definition of the discrete fractional hadamard ( dfrht ) transform is based on an eigenvalue decomposition of the dht matrix . any real symmetric matrix ( including the hadamard matrix )",
    "can be diagonalized , e.g. written as a product @xcite    @xmath10    where @xmath11 is a diagonal matrix of order @xmath12 , whose diagonal entries are the eigenvalues of @xmath6    @xmath13\\ ] ]     + @xmath14 $ ] - the matrix whose columns are normalized mutually orthogonal eigenvectors of the matrix @xmath6 . the eigenvector @xmath15 is related to the eigenvalue @xmath16 .",
    "a superscript @xmath17 denotes the matrix transposition .",
    "the dfrht matrix of order @xmath7 with real parameter @xmath18 was first defined in @xcite .",
    "this matrix can be regarded as a power of the dht matrix , where the exponent @xmath19 @xmath20 for @xmath21 the dfrht matrix is converted into the identity matrix , and for @xmath22 it is transformed into the ordinary dht matrix . generally the dfrht matrix is complex - valued .    an essential operation , by obtaining the discrete fractional hadamard matrix , defined by ( [ eq : rozklad2 ] ) , is calculating the eigenvalues and the eigenvectors of the matrix @xmath6 .",
    "the only eigenvalues of the unnormalized hadamard matrix of order @xmath23 are known to be @xmath24 and @xmath25 @xcite , hence the normalized hadamard matrix @xmath26 has only the eigenvalues 1 and @xmath5 .",
    "a method for finding the eigenvectors of hadamard matrix was firstly presented in @xcite , but in @xcite a recursive method for calculation the eigenvectors of the hadamard matrix order @xmath27 based on the eigenvectors of the hadamard matrix of order @xmath12 has been proposed .",
    "we will use this method to obtain the dfrht matrix . here",
    "we will present it briefly .    in @xcite",
    "it was proven that if @xmath28 ( @xmath29 ) is an eigenvector of hadamard matrix of order @xmath23 associated with an eigenvalue @xmath30 , then vector @xmath31 \\label{eq : wektorhat}\\ ] ] will be an eigenvector of the matrix @xmath32 associated with the eigenvalue @xmath30 .",
    "in @xcite it was proven that if @xmath28 is an eigenvector of @xmath6 associated with an eigenvalue @xmath30 , then the vector @xmath33 \\label{eq : wektortilde}\\ ] ] will be an eigenvector of the matrix @xmath32 associated with the eigenvalue @xmath34 .",
    "these two results allow as to generate the eigenvectors of hadamard matrix of order @xmath27 from the eigenvectors of hadamard matrix of order @xmath12 . knowing the straightforward calculated eigenvectors of the matrix @xmath35 @xmath36\\;\\ ; \\mathbf{v}_{2}^{(1)}=\\left [ \\begin{array}{c } 1-\\sqrt{2}\\\\ 1\\\\ \\end{array } \\right ] \\label{eq : wektoryh2}\\ ] ] associated with eigenvalues 1 and @xmath5 respectively , the eigenvectors for hadamard matrix of arbitrary order @xmath23 can be recursively computed .",
    "in @xcite it was also shown so this recursively computed eigenvectors of matrix @xmath26 will be orthogonal .",
    "it should be noted that for any @xmath23 there are only two distinct eigenvalues of hadamard matrix , so for @xmath37 the eigenvalues are degenerated . because of this fact the set of eigenvectors proposed in @xcite and @xcite is not unique .",
    "the igenvectors @xmath28 for @xmath38 , which are columns of the matrix @xmath39 ( after normalization ) , as well as their associated eigenvalues @xmath40 , can be however ordered in different ways . in @xcite",
    "it has been also established a method of ordering the eigenvectors . in many cases ,",
    "including the case of discrete fractional transforms is used so - called sequency ordering of the eigenvectors .",
    "this means that the @xmath41-th eigenvector has @xmath41 sign - changes .",
    "the discrete hermite - gaussians , eigenvectors of discrete fourier transform matrix are ordered this way as well @xcite .",
    "we will show this method of ordering of the eigenvectors in example [ example1 ] .",
    "[ example1 ] the number of sign - changes in eigenvectors @xmath42 and @xmath43 of matrix @xmath35 , determined by ( [ eq : wektoryh2 ] ) , is equal to 0 and 1 respectively . using expressions ( [ eq : wektorhat ] ) and",
    "( [ eq : wektortilde ] ) we obtain the eigenvectors of matrix @xmath44 :    @xmath45\\;\\ ; \\mathbf{\\tilde v}_{4}^{(0)}= \\left [ \\begin{array}{c } -b\\\\ -b^2 \\\\ 1\\\\ b\\\\ \\end{array } \\right]\\;\\ ; \\mathbf{\\hat v}_{4}^{(1)}= \\left [ \\begin{array}{c } -b\\\\ 1 \\\\",
    "-b^2\\\\ b\\\\ \\end{array } \\right]\\;\\ ; \\mathbf{\\tilde v}_{4}^{(1)}=",
    "\\left [ \\begin{array}{c } b^2\\\\ -b \\\\",
    "-b\\\\ 1\\\\ \\end{array } \\right],\\ ] ]    where @xmath46 .",
    "the numbers of sign - changes in the above vectors are 0 , 1 , 3 , 2 respectively ( @xmath47 ) .",
    "therefore , a sequency ordered set of eigenvectors of matrix @xmath44 will be as follows :    @xmath48    the corresponding eigenvalues will be equal to : @xmath49    the relations obtained in example [ example1 ] can be easily generalized as follows :    @xmath50 \\mathbf{v}_{2n}^{(4l+1)}=\\mathbf{\\tilde v}_{2n}^{(2l)}\\\\[6pt ] \\mathbf{v}_{2n}^{(4l+2)}=\\mathbf{\\tilde v}_{2n}^{(2l+1)}\\\\[6pt ] \\mathbf{v}_{2n}^{(4l+3)}=\\mathbf{\\hat v}_{2n}^{(2l+1 ) } \\end{array } \\right.\\ ] ]    for @xmath51 and @xmath52 for @xmath53 .",
    "both the eigenvectors of the matrix @xmath35 and the eigenvectors obtained for higher order hadamard matrices are not normalized .",
    "let the notation @xmath54 means the euclidean norm of vector @xmath28 .",
    "in @xcite it was shown that for any @xmath7 we have the relationship @xmath55 where @xmath38 and @xmath56 .",
    "if we take the designation @xmath57 , then normalized eigenvectors of hadamard matrix of order @xmath7 will take the form @xmath58 using the normalized and sequency ordered eigenvectors of the hadamard matrix , the eigenvalue decomposition ( [ eq : rozklad ] ) of the hadamard matrix can be written as follows :    @xmath59    where @xmath11 is the diagonal matrix whose non - zero elements are @xmath60 for @xmath38 .",
    "hence the definition ( [ eq : rozklad2 ] ) of dfrht matrix will take the form : @xmath61 where @xmath62 for @xmath38 .",
    "our goal is to calculate the discrete fractional hadamard transform for an input signal @xmath63 in which the number of samples is equal to @xmath23 . by @xmath64",
    "we denote an output signal which is calculated using the formula @xmath65 supposing that the matrix @xmath66 is given , to calculate the output signal it is necessary to perform @xmath1 complex multiplications and @xmath67 complex additions .",
    "if the input signal is real , then the number of real multiplications will be equal to @xmath68 , and the number of real additions will be equal to @xmath69 .",
    "if we use the decomposition ( [ eq : rozklad2n ] ) of the matrix @xmath66 by calculating ( [ eq : transformata ] ) and will perform the matrix - vector multiplication from the right side to the left , the most time - consuming operations are multiplications of matrices @xmath70 and @xmath71 by the vector , because those matrices are not diagonal .",
    "if we interchange the columns of the matrix @xmath71 in the prescribed manner , we obtain a matrix @xmath72 of special structure , which can be generated recursively .",
    "we will show it in example [ example2 ] . it will allow to reduce the number of arithmetical operations by calculating the products of matrices @xmath70 and @xmath71 by the vector .",
    "[ example2 ] the matrices @xmath71 for @xmath73 are as follows : @xmath74,\\;\\ ;   \\mathbf{v}_4= \\left [ \\begin{array}{cccc } 1&-b&b^2&-b\\\\ b&-b^2&-b&1\\\\ b&1&-b&-b^2\\\\ b^2&b&1&b\\\\ \\end{array } \\right],\\;\\;\\ ] ] @xmath75.\\ ] ] the matrix @xmath76 has some specific structure .",
    "now we consider the matrix @xmath77 .",
    "if in the matrix @xmath77 the second and fourth columns will be interchange and then the third and fourth columns will be interchange too , we obtain the following matrix : @xmath78 = \\left [ \\begin{array}{cc } \\mathbf{v}_2&-b\\mathbf{v}_2\\\\   b\\mathbf{v}_2&\\mathbf{v}_2\\\\ \\end{array } \\right].\\ ] ] the matrix @xmath77 differs from the matrix @xmath79 only in the order of the columns . therefore , the matrix @xmath77 can be obtained by post - multiplying the matrix @xmath79 by the permutation matrix @xmath80 : @xmath81 where @xmath82.\\ ] ]    now we consider the matrix @xmath83 .",
    "if we perform the following permutation of columns of this matrix : @xmath84 as a result we obtain the following matrix :    @xmath85= \\left [ \\begin{array}{cc } \\mathbf{\\overline{v}}_4&-b\\mathbf{\\overline{v}}_4\\\\   b\\mathbf{\\overline{v}}_4&\\mathbf{\\overline{v}}_4\\\\ \\end{array } \\right].\\ ] ]    as previously , we can write : @xmath86 where @xmath87.\\ ] ]    if we generalize the above considerations for @xmath7 we can write : @xmath88 for @xmath89 . for @xmath90 we can also write @xmath91 where @xmath92 is an identity matrix of order two @xmath93 the permutation matrix @xmath94 of order @xmath95 can be obtained recursively from the permutation matrix @xmath96 of order @xmath97 according to the following relation :    @xmath98,\\ \\mathbf{p}_{n}=\\mathbf{s}_{n } \\left[\\begin{array}{cc } \\mathbf{p}_{\\frac{n}{2}}\\hspace{0.2 cm } & \\mathbf{0}_{\\frac{n}{2}}\\\\ \\mathbf{0}_{\\frac{n}{2}}\\hspace{0.2 cm } & \\mathbf{p}_{\\frac{n}{2}}\\mathbf{j}_{\\frac{n}{2}}\\\\ \\end{array}\\right]\\!\\ ] ]    for @xmath9 .",
    "@xmath99 is the perfect shuffle permutation matrix of order @xmath12 , @xmath100 is the counter - identity matrix of order @xmath101 and @xmath102 is zero matrix .",
    "the perfect shuffle permutation is the permutation that splits the set consisting of an even number of elements into two piles and interleaves them .",
    "it can be written as follows : @xmath103 for example    @xmath104 , \\",
    "\\mathbf{j}_4= \\left [ \\begin{array}{cccc } 0&0&0&1\\\\ 0&0&1&0\\\\ 0&1&0&0\\\\ 1&0&0&0\\\\ \\end{array } \\right].\\ ] ]    if we write the matrix @xmath71 as a product @xmath105 the expression ( [ eq : rozklad2n ] ) will take the form :    @xmath106    the product @xmath107 is a diagonal matrix , which has the same diagonal entries as the matrix @xmath108 but in different order and for a chosen parameter @xmath109 it may be prepared in advance . if we denote this product multiplied by a factor @xmath110 by @xmath111 :    @xmath112    the dfrht algorithm ( [ eq : transformata ] ) will take the following form :    @xmath113    where the matrix @xmath114 can be generated recursively :    @xmath115\\;\\ ;   \\mathbf{\\overline{v}}_{2k}= \\left [ \\begin{array}{cc } \\mathbf{\\overline{v}}_k&-b\\mathbf{\\overline{v}}_k\\\\   b\\mathbf{\\overline{v}}_k&\\mathbf{\\overline{v}}_k\\\\ \\end{array } \\right ] \\label{eq : defvn}\\ ] ]    for @xmath116 .",
    "the most time - consuming operations by calculating the dfrht transform according to ( [ eq : transformatan ] ) are multiplications of matrices @xmath117 and @xmath72 by the vector . since in the matrix @xmath72",
    "occur only following powers of @xmath118 we can write this matrix as follows : @xmath119 in the figure [ fig : figure1 ] it was shown the way of calculating the matrix - vector product @xmath120 , using the expression ( [ eq : sum ] ) . in this paper ,",
    "the graph - structural models and data flow diagrams are oriented from left to right .",
    "straight lines in the figures denote the operation of data transfer .",
    "we use the usual lines without arrows specifically so as not to clutter the picture .",
    "note that the circles in this figure shows the operations of multiplication by a number inscribed inside a circle . in turn , the rectangles indicate the matrix - vector multiplications by matrices    , scaledwidth=70.0% ]    although it may seem strange , we will see that such an operation allows to reduce the number of multiplication and additions by multiplying the matrix @xmath121 by a vector .",
    "it should be noted that because of the recursive relation ( [ eq : defvn ] ) between matrices @xmath122 and @xmath123 , the following recursive relation between the matrices @xmath124 , @xmath125 and @xmath126 occurs : @xmath127=\\mathbf{i}_{n}\\ ] ] @xmath128 \\label{eq : defan}\\ ] ] @xmath129\\ ] ] for @xmath130 and @xmath131=log@xmath2 , where @xmath132=\\mathbf{i}_{2},\\;\\;\\ ; \\mathbf{a}_{2}^{(1)}= \\left [ \\begin{array}{cc } 0&-1\\\\ 1&0\\\\ \\end{array } \\right].\\ ] ] to clarify our idea we show the explicit form of expressions ( [ eq : sum ] ) and ( [ eq : defan ] ) for @xmath90 , @xmath133 and @xmath134 in an example [ example3 ] .    [ example3 ] @xmath135 where the matrices @xmath136 and @xmath137 are presented above .",
    "@xmath138 where @xmath139= \\left [ \\begin{array}{cc } \\mathbf{a}_{2}^{(0)}&\\mathbf{0}_{2}\\\\ \\mathbf{0}_{2}&\\mathbf{a}_{2}^{(0)}\\\\ \\end{array } \\right]= \\mathbf{i}_4,\\ ] ]    @xmath140= \\left [ \\begin{array}{cc } \\mathbf{a}_{2}^{(1)}&-\\mathbf{a}_{2}^{(0)}\\\\ \\mathbf{a}_{2}^{(0)}&\\mathbf{a}_{2}^{(1)}\\\\ \\end{array } \\right],\\ ] ]    @xmath141= \\left [ \\begin{array}{cc } \\mathbf{0}_{2}&-\\mathbf{a}_{2}^{(1)}\\\\ \\mathbf{a}_{2}^{(1)}&\\mathbf{0}_{2}\\\\ \\end{array } \\right ] .\\ ] ]    @xmath142    where @xmath143=",
    "\\left [ \\begin{array}{cc } \\mathbf{a}_{4}^{(0)}&\\mathbf{0}_{4}\\\\ \\mathbf{0}_{4}&\\mathbf{a}_{4}^{(0)}\\\\ \\end{array } \\right]= \\mathbf{i}_8,\\ ] ]    @xmath144= \\left [ \\begin{array}{cc } \\mathbf{a}_{4}^{(1)}&-\\mathbf{a}_{4}^{(0)}\\\\ \\mathbf{a}_{4}^{(0)}&\\mathbf{a}_{4}^{(1)}\\\\ \\end{array } \\right],\\ ] ]    @xmath145= \\left [ \\begin{array}{cc } \\mathbf{a}_{4}^{(2)}&-\\mathbf{a}_{4}^{(1)}\\\\ \\mathbf{a}_{4}^{(1)}&\\mathbf{a}_{4}^{(2)}\\\\ \\end{array } \\right],\\ ] ]    @xmath146= \\left [ \\begin{array}{cc } \\mathbf{0}_{4}&-\\mathbf{a}_{4}^{(2)}\\\\ \\mathbf{a}_{4}^{(2)}&\\mathbf{0}_{4}\\\\ \\end{array } \\right].\\ ] ]    now we will evaluate the number of arithmetical operations , which are necessary to calculate the matrix - vector product @xmath147 .",
    "we note , that in a general case such an operation requires @xmath1 multiplications and @xmath67 additions .",
    "now we will calculate the numbers of multiplications and additions needed for this operation if we use the expression ( [ eq : sum ] ) for the matrix @xmath72 , i.e. @xmath148 since the non - zero entries of matrices @xmath149 , @xmath150 are only 1 and -1 , no multiplications are needed when calculating the matrix - vector products @xmath151 .",
    "the only multiplications we have to perform are multiplications of the vectors @xmath152 by the powers of @xmath153 : @xmath154 by @xmath153 , @xmath155 by @xmath156 by @xmath157 . because the number @xmath153 is constant and known , its powers @xmath158 , @xmath159 may be prepared in advance .",
    "thus , the number of multiplication by calculating the matrix - vector product @xmath160 is equal to @xmath161log@xmath0 .",
    "let us examine the number of additions , we need to perform , when calculating the matrix - vector product @xmath160 .",
    "the total number of additions consist of number of additions by calculating the matrix - vector products @xmath152 , and @xmath162 additions which are needed to calculate the sum of vectors : @xmath163 , @xmath164 , @xmath165 .",
    "since , according to ( [ eq : defan ] ) , the matrices @xmath166 have specific structures , the products @xmath152 can be obtained by subtracting the products @xmath167 , @xmath168 of twice smaller size and summing the products @xmath169 , @xmath170 ( excluding products @xmath163 and @xmath171 which can be obtained even in a simpler way ) . by @xmath172^t$ ] we denote the first half of the input vector @xmath173 and by @xmath174^t$ ] - the second half of this vector , as it was shown , for @xmath134 , in the figure [ fig : figure2 ] .     using the products of twice smaller size : @xmath175 , @xmath176 , @xmath177 , @xmath178 for @xmath179,scaledwidth=100.0% ]    it",
    "should be noted that the products @xmath167 and @xmath170 are used to calculate both products @xmath180 and @xmath181 .",
    "for example the products @xmath182 and @xmath183 are used to calculate @xmath184 and @xmath185 .",
    "it allows to reduce the number of additions , because the some products are used twice .",
    "of course , this procedure can be repeated and each of products @xmath167 , @xmath168 , @xmath169 , @xmath170 can be calculated by summing ( subtracting ) products of twice smaller size and so on .",
    "it can be continued until calculating products of matrices @xmath186 and @xmath187 by two - element sub - vectors of the vector @xmath63 .",
    "the whole process of going down by calculating the product @xmath147 is presented , for @xmath134 , in the figure [ fig : figure3 ] .    , scaledwidth=70.0% ]    the expression ( [ eq : rozklad4 ] ) can be also written as the matrix - vector product , as follows : @xmath188 where @xmath189,\\ ] ] @xmath190\\otimes\\mathbf{i}_n,\\ ] ] @xmath191 the symbol @xmath192 denotes the kronecker product of matrices , and @xmath193 is the matrix ( row vector ) whose all entries are equal to 1 .",
    "the matrix @xmath194 is responsible for multiplications of the matrices @xmath149 , @xmath195 , @xmath196 , @xmath197 by the input vector @xmath173 , the matrix @xmath198 - for multiplications of those products by the proper powers of @xmath153 , and the matrix @xmath199 - for aggregation of results .",
    "the process of going down by calculating the product @xmath160 , which has been presented in figures [ fig : figure2 ] and [ fig : figure3 ] , can be also described in the therm of matrices product .",
    "it means factorisation of the matrix @xmath194 into the product of @xmath131 matrices @xmath200 the matrices which occur on the right side of expression ( [ eq : rozklada ] ) have the following forms : @xmath201\\ ] ] where @xmath202\\otimes\\mathbf{i}_{1}=\\mathbf{a}_{2}^{(0)},\\;\\ ; \\mathbf{\\overline{a}}_{2\\times 2}^{(1)}=\\mathbf{a}_{2}^{(1)}\\otimes\\left [ 1\\right]\\otimes\\mathbf{i}_{1}=\\mathbf{a}_{2}^{(1)}.\\ ] ] @xmath203,\\ ] ] where @xmath204\\otimes\\mathbf{i}_{2},\\;\\ ; \\mathbf{\\overline{a}}_{4\\times 8}^{(1)}=\\mathbf{a}_{2}^{(1)}\\otimes\\left[0\\;\\ ; 1\\right]\\otimes\\mathbf{i}_{2}\\ ] ] and the matrix @xmath205 denotes the matrix @xmath206 which columns were circularly shifted by 2 positions to the right , and the matrix @xmath207 denotes the matrix @xmath206 which columns were circularly shifted by 2 positions to the left . the last matrix @xmath208 is defined as @xmath209\\ ] ] where @xmath210\\otimes\\mathbf{i}_{n/2},\\;\\ ; \\mathbf{\\overline{a}}_{n\\times nn}^{(1)}=\\mathbf{a}_{2}^{(1)}\\otimes\\left[0\\;\\;0\\;\\;\\ldots \\;\\;1\\right]\\otimes\\mathbf{i}_{n/2}.\\ ] ] using the expression ( [ eq : rozklada ] ) the algorithm ( [ eq : rozkladmac ] ) of calculating the product @xmath160 can be written as follows : @xmath211 the expression ( [ eq : productv ] ) allows for evaluating the total number of additions , which are needed to calculate the matrix - vector product @xmath160 .",
    "we assume that the input vector @xmath173 is real - valued .",
    "each of matrices @xmath212 , for @xmath213 , is the direct sum of @xmath214 identical blocks and the single block is the vertical concatenation of @xmath215 matrices .",
    "the firs , indicated by @xmath216 , and the last , indicated by @xmath217 , do not need any additions or subtractions by multiplying them by a vector .",
    "the @xmath218 others matrices , which are sums of @xmath216 and @xmath217 , after circularly shifting their columns , so multiplying each of them by a vector needs @xmath219 additions . to calculate the product @xmath220 we have to perform @xmath221 additions .",
    "the product of the matrix @xmath198 by a vector do not need any additions and the product of the matrix @xmath222 by a vector needs @xmath162 additions .",
    "thus the total number of additions by calculating the products @xmath160 , according to ( [ eq : productv ] ) , is equal to @xmath223 .",
    "example [ example4 ] shows the explicit form of the algorithm ( [ eq : productv ] ) with all occurring in it matrices for @xmath134 .",
    "[ example4 ] the algorithm ( [ eq : productv ] ) of calculating the product of matrix @xmath224 by the vector @xmath225 is as follows : @xmath226 where @xmath227=   \\left [   \\begin{array}{cccccccc }   1&0&0&0&0&0&0&0\\\\   0&1&0&0&0&0&0&0\\\\   0&-1&0&0&0&0&0&0\\\\   1&0&0&0&0&0&0&0\\\\   0&0&1&0&0&0&0&0\\\\   0&0&0&1&0&0&0&0\\\\   0&0&0&-1&0&0&0&0\\\\   0&0&1&0&0&0&0&0\\\\   0&0&0&0&1&0&0&0\\\\   0&0&0&0&0&1&0&0\\\\   0&0&0&0&0&-1&0&0\\\\   0&0&0&0&1&0&0&0\\\\   0&0&0&0&0&0&1&0\\\\   0&0&0&0&0&0&0&1\\\\",
    "0&0&0&0&0&0&0&-1\\\\   0&0&0&0&0&0&1&0\\\\   \\end{array } \\right],\\ ] ] @xmath228=\\ ] ] @xmath229,\\ ] ] @xmath230=\\ ] ] @xmath231,\\ ] ] @xmath232\\otimes \\mathbf{i}_{8},\\ ] ] @xmath233 it is easy to check that in this case the total number of addition is equal to 48 and the number of multiplications is equal to 24 ( we can see it also in the figure [ fig : figure3 ] ) .",
    "now we return to the dfrht algorithm ( [ eq : transformatan ] ) . according to ( [ eq : sum ] ) the matrix @xmath121",
    "can be written as the sum of the matrices @xmath149 , @xmath150 with coefficients @xmath234 .",
    "the transposed matrix @xmath235 can be written as the sum of the transposed matrices @xmath236 ,",
    "@xmath237 with the same coefficients @xmath234 : @xmath238 since the matrices with the even indexes @xmath149 , @xmath239 are symmetric and the matrices with the odd indexes are asymmetric the expression ( [ eq : sumt ] ) can be written as follows : @xmath240 according to ( [ eq : rozkladmac ] ) the matrix @xmath121 from expression ( [ eq : sum ] ) can be transformed into the product @xmath241 so the matrix @xmath235 may by also transformed from ( [ eq : sumt1 ] ) into the following product : @xmath242 where the matrix @xmath243 is defined as follows : @xmath244 and @xmath245.\\ ] ] the others matrices in the expression ( [ eq : rozkladmac1 t ] ) are the same as that in the expression ( [ eq : rozkladmac ] ) .",
    "taking into account the decompositions ( [ eq : rozkladmac1 ] ) and ( [ eq : rozkladmac1 t ] ) of matrices @xmath72 and @xmath117 respectively the dfrht algorithm ( [ eq : transformatan ] ) will take the form : @xmath246 where the matrix @xmath194 is decomposed according to ( [ eq : rozklada ] ) .",
    "for example , for @xmath134 this algorithm will take the following form : @xmath247 figure [ fig : figure4 ] shows a data flow diagram of the algorithm for 8 point dfrht .    ) for @xmath134,scaledwidth=100.0% ]",
    "let us assess the computational complexity in term of numbers of multiplications and additions required for dfrht calculation .",
    "calculation of the discrete fractional hadamard transform for a real - valued vector @xmath63 of length @xmath7 , assuming that the matrix @xmath66 defined by ( [ eq : rozklad2 ] ) is given , requires @xmath248 multiplications of a complex number by a real number and @xmath249 complex additions .",
    "each multiplication of a complex number by a real number needs two real multiplications and each addition of two complex numbers requires two real additions .",
    "hence the numbers of real multiplications and real additions required for computing the dfrht using the naive method are equal to @xmath250 and @xmath251 respectively .",
    "let us now evaluate the computational complexity of the dfrht realization with the help of the procedure ( [ eq : transformata2 ] ) . as it was discussed in the section [ advantages",
    "] , if we use the factorized representation of the matrices @xmath117 and @xmath72 , calculating the product of the real - valued matrix @xmath117 and the real - valued vector @xmath63 requires @xmath162 real multiplications and @xmath223 real additions . as a result ,",
    "we again obtain the real - valued vector .",
    "then there is computed the product of the complex - valued diagonal matrix @xmath252 and the real - valued vector calculated previously ( we assume that for a predetermined parameter @xmath109 , the diagonal elements of this matrix were calculated in advance ) .",
    "the calculation of this product requires @xmath253 real multiplications .",
    "the resulting complex - valued vector is then multiplied by the factorized matrix @xmath72 . this operation requires @xmath254 real multiplications and @xmath255 real additions . the total numbers of arithmetic operations to compute dfrht of size @xmath12 using our new algorithm are @xmath256 real multiplications and @xmath257 real additions .",
    "it is easy to check that even for small @xmath131 the numbers of arithmetic operations required for realization of the proposed algorithm are several times less than in the naive method of computing .",
    "tables [ tab:1 ] and [ tab:2 ] display the numbers of multiplications and additions required for the dfrht transform implementation of the real - valued input signal of the length @xmath7 .",
    "these numbers were calculated for three methods of the transform implementation : the direct multiplication of the dfrht matrix by a vector of the input data , calculation according to authors algorithm described in the work @xcite , and according to the algorithm ( [ eq : transformata2 ] ) proposed in this article .",
    "it is easy to check that for @xmath258 the number of arithmetic operations , required for dfrht transform realization according to the proposed algorithm , is smaller than in the other two methods of dfrht computing .    [ !",
    "h ]    rrrr @xmath7 & direct method & method @xcite & proposed algorithm + 2 & 8 & 6 & 10 + 4 & 32 & 18 & 32 + 8 & 128 & 54 & 88 + 16 & 512 & 162 & 224 + 32 & 2048 & 486 & 544 + 64 & 8192 & 1458 & 1280 + 128 & 32768 & 4374 & 2944 + 256 & 131072 & 13122 & 6656 + 512 & 524288 & 39366 & 14848 + 1024 & 2097152 & 118098 & 32768 +    [ !",
    "h ]    rrrr @xmath7 & direct method & method @xcite & proposed algorithm + 2 & 4 & 5 & 6 + 4 & 24 & 25 & 36 + 8 & 112 & 95 & 144 + 16 & 480 & 325 & 480 + 32 & 1984 & 1055 & 480 + 64 & 8064 & 3325 & 1440 + 128 & 32512 & 10295 & 4032 + 256 & 130560 & 31525 & 10752 + 512 & 523264 & 95855 & 69120 + 1024 & 2095104 & 290125 & 168960 +",
    "the article presents the novel algorithm for the dfrht performing .",
    "the algorithm has a much lower computational complexity than the direct way of the dfrht implementation .",
    "the computational procedure for dfrht calculating is described in kronecker product notation .",
    "the kronecker product algebra is a very compact and simple mathematical formalism suitable for parallel realization .",
    "this notation enables us to represent adequately the space - time structures of an implemented computational process and directly maps these structures into the hardware realization space . for simplicity , we considered the synthesis of a fast algorithm for the dfrht calculation for @xmath259 .",
    "however it is clear that the proposed procedure was developed for the arbitrary case when the order of the matrix is a power of two .",
    "sylvester j.j . : thoughts on inverse orthogonal matrices , simultaneous sign successions , and tessellated pavements in two or more colours , with applications to newton s rule , ornamental tile - work , and the theory of numbers .",
    "philos . mag .",
    "34 , 461 - 475 ( 1867 )"
  ],
  "abstract_text": [
    "<S> we present a novel algorithm for calculating the discrete fractional hadamard transform for data vectors whose size @xmath0 is a power of two . </S>",
    "<S> a direct method for calculation of the discrete fractional hadamard transform requires @xmath1 multiplications , while in proposed algorithm the number of real multiplications is reduced to @xmath0log@xmath2 .    </S>",
    "<S> example.eps gsave newpath 20 20 moveto 20 220 lineto 220 220 lineto 220 20 lineto closepath 2 setlinewidth gsave .4 setgray fill grestore stroke grestore </S>"
  ]
}
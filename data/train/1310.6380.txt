{
  "article_text": [
    "there has been significant recent interest in achieving exotic dynamic response through the careful microstructural design of composites .",
    "the periodic modulation of stress waves results in very rich wave - physics and the potential for novel applications @xcite .",
    "the study of the effects and the applications of such periodic modulations falls within the area of phononics @xcite .",
    "these applications depend upon the ability of calculating the phononic band - structure of unit cells .",
    "recent years have seen extensive developments in the numerical and analytical schemes required for such calculations ( see @xcite for a list of references ) .",
    "the research community is now at a point where in addition to being able to calculate phononic / photonic band - structures , it is desirable to have the capability of executing such computations highly efficiently .",
    "the areas which stand to benefit from such fast computations include phononic / photonic optimization and inverse problems in effective properties ( see @xcite ) . in photonics",
    "the computational requirement is the search for the eigenvalues of the maxwell s equations and in phononics the requirement is the analogous search for the navier equations . by their very nature , these searches , especially in 2- , and 3-d , are highly compute intensive tasks requiring significant computational and time resources . as such any optimization procedure for photonic / phononic crystals is , therefore , hard to implement .",
    "some recent advances have been made in the areas of photonic @xcite and phononic @xcite band - structure optimization .",
    "however , a distributed and efficient computational platform for fast band - structure calculations has not yet been developed . in this paper",
    "we present the mixed - formulation for phononic band - structure computation within the paradigm of gpu - computing .",
    "the formulation @xcite itself has been proven to show fast convergence @xcite and has recently been extended to deal with arbitrary complexities in the unit cell @xcite .",
    "it , therefore , is an ideal candidate for fast - band - structure computations on distributed platforms .",
    "graphical processing units , which are normally used to render graphics on laptops and desktops , have also emerged as a cheap and efficient alternative to massive clusters for performing computational tasks which require a large number of computational processes to be run in parallel .",
    "their suitability for parallel processing algorithms has been exploited in fields as varied as protein folding , molecular dynamics , calculating electrostatic potential maps @xcite , and weather prediction@xcite .",
    "however , the use of gpus in the area of band - structure calculation ( phononic or photonic ) has been limited to few applications to the finite difference time domain method @xcite . in this paper",
    "we report that the gpu - accelerated version of the mixed - formulation shows speed - ups of more than 2 orders of magnitude compared to the serial implementation ( unoptimized ) of the algorithm . to the author s knowledge , this represents the first time that gpus have been used to accelerate a non fe / fdtd band - structure formulation .",
    "we report sub-20 second time ( on a regular desktop pc ) for the complete phononic characterization over the first 18 branches of a 2-d hexagonal unit cell made up of more than thousand different phases . for a simpler unit cell and fewer branches ,",
    "we report computation time of less than 2.5 second for the complete phononic characterization over the ibz .",
    "these results represent considerable savings in computation times and resources and indicate that the algorithm can provide very fast band - structure calculation capabilities for more complex 3-d systems through efficient memory management techniques .",
    "extensions to the gpu - accelerated algorithm for fast dynamic effective property calculations @xcite are natural with the aim being its application to topology optimization problems for dynamic effective properties instead of static effective properties @xcite .",
    "please see @xcite for a comprehensive description of the formulation . in this paper",
    "we present a summary of the same for completeness . in the following treatment",
    "repeated latin indices mean summation , whereas , repeated greek indices do not .",
    "consider the problem of elastic wave propagation in a general 3-dimensional periodic composite .",
    "the unit cell of the periodic composite is denoted by @xmath0 and is characterized by 3 base vectors @xmath1 , @xmath2 .",
    "any point within the unit cell can be uniquely specified by the vector @xmath3 where @xmath4 .",
    "the same point can also be specified in the orthogonal basis as @xmath5 .",
    "the reciprocal base vectors of the unit cell are given by : @xmath6 such that @xmath7 .",
    "( [ fvectors ] ) shows the schematic of a 2-d unit cell , clearly indicating the unit cell basis vectors , the reciprocal basis vectors and the orthogonal basis vectors .    ) , reciprocal basis vectors ( @xmath8 ) , and the orthogonal vectors ( @xmath9 ) are shown . ]    the wave vector for a bloch - wave traveling in the composite are given as @xmath10 where @xmath11 .",
    "the composite is characterized by a spatially varying stiffness tensor , @xmath12 , and density , @xmath13 , which satisfy the following periodicity conditions : @xmath14 where @xmath15@xmath16 are integers .      for harmonic elastodynamic problems",
    "the equations of motion and kinematic relations at any point @xmath17 in @xmath0 are given by @xmath18 where @xmath19 , and @xmath20 are the space and time dependent stress tensor , strain tensor , and displacement vector respectively . the stress tensor is related to the strain tensor through the elasticity tensor , @xmath21 .",
    "the traction and displacement at any point in the composite are related to the corresponding traction and displacement at another point , sperated from the first by a unit cell , through bloch relations .",
    "these relations serve as the homogeneous boundary conditions on @xmath22 .",
    "if the bloch wave vector is @xmath23 then these boundary conditions are given by : @xmath24 where @xmath25 are the components of the traction vector and @xmath26 is the exterior normal vector on @xmath22 .",
    "it has been shown @xcite that the solution to ( [ equationofmotion ] ) that satisfies the boundary conditions , ( [ boundaryconditions ] ) , renders the following functional stationary : @xmath27 where @xmath28 is the compliance tensor and the inner product is given by : @xmath29 where @xmath30 is the complex conjugate of @xmath31 .",
    "we approximate the stress and displacement fields with the following test functions : @xmath32 where the test functions satisfy the boundary conditions , ( [ boundaryconditions ] ) , and are orthogonal in the sense that @xmath33 is proportional to @xmath34 , @xmath35 being the kronecker delta . substituting from ( [ approximation ] ) to ( [ mixedvariational ] ) and setting the derivative of @xmath36 with respect to the unknown coefficients , ( @xmath37 ) , equal to zero , we arrive at the following system of linear homogeneous equations : @xmath38 where @xmath39 .",
    "for the general 3-dimensional case , if @xmath40 vary from @xmath41 to @xmath42 then ( [ equationshomogeneous ] ) represents @xmath43 linear homogeneous equations in the @xmath43 unknown displacement and stress coefficients .",
    "given the symmetry of the stress tensor , these coefficients are @xmath44 number of @xmath45 and @xmath46 number of independent @xmath47 .",
    "to approximate the stress and displacement fields in ( [ approximation ] ) , we use fourier test functions of the following form : @xmath48)}\\ ] ] where @xmath49 .",
    "the band - structure of the composite is given by the @xmath50 pairs which lead to nontrivial solutions of ( [ equationshomogeneous ] ) . to calculate these pairs ( [ equationshomogeneous ] )",
    "is first written in the following equivalent matrix form : @xmath51 column vectors @xmath52 contain the unknown coefficients of the periodic expansions of stress and displacement respectively .",
    "matrices @xmath53 contain the integrals of the various functions appearing in ( [ equationshomogeneous ] ) .",
    "their sizes depend upon whether the problem under consideration is 1- , 2- , or 3-dimensional .",
    "these matrices would be described more clearly in the subsequent sections in which numerical examples are shown .",
    "the above system of equations can be recast into the following traditional eigenvalue problem : @xmath54 whose eigenvalue solutions represent the frequencies ( @xmath55 ) associated with the wave - vector under consideration ( @xmath56 ) .",
    "the eigenvectors of the above equation are used to calculate the displacement modeshapes from ( [ approximation ] ) .",
    "the relation @xmath57 is used to evaluate the stress eigenvector which is subsequently used to calculate the stress modeshape from ( [ approximation ] ) .",
    "the integrals occurring in ( [ equationshomogeneousmatrix ] ) are numerically calculated over @xmath0 .",
    "numerical integration is achieved by dividing the domain @xmath0 into @xmath58 subdomains @xmath59 . the volume integral of any function @xmath60 is then approximated as : @xmath61 where @xmath62 is the value of the function @xmath60 evaluated at the centroid of @xmath63 and @xmath64 is the volume of @xmath63 . for meshing in 2- , and 3-d",
    "we have used a freely available finite element software @xcite .",
    "there are five possible bravais lattices in 2 dimensions .",
    "however , they can be specified using two unit cell vectors ( @xmath65 ) . the reciprocal vector are @xmath8 .",
    "the wave - vector of a bloch wave traveling in this composite is specified as @xmath66 . to characterize the band - structure of the unit cell",
    "we evaluate the dispersion relation along the boundaries of the irreducible brillouin zone . for purposes of demonstration and comparison",
    "we consider the case of plane strain state in the composite .",
    "the relevant stress components for the plane strain case are @xmath67 and the relevant displacement components are @xmath68 .",
    "the equations of motion and the constitutive law are : @xmath69 where @xmath28 is the compliance tensor . for an isotropic material in plane strain @xmath28",
    "is given by : @xmath70;\\quad j , k , m , n=1,2\\ ] ] where @xmath71 are the lame@xmath72 constants of the material .",
    "the stresses and displacements are approximated by the following 2-d periodic functions : @xmath73 where @xmath74 and the square matrix @xmath75 $ ] is the inverse of the matrix @xmath76 $ ] with components @xmath76_{jk}=\\mathbf{h}^j\\cdot\\mathbf{e}^k$ ] .",
    "the matrix form of the eigenvalue problem is given by ( [ equationshomogeneousmatrix ] ) with the following column vectors : @xmath77 since @xmath78 vary from @xmath41 to @xmath42 , the length of the column vector @xmath79 is @xmath80 and the length of @xmath81 is @xmath82 .",
    "corresponding to these column vectors , the size of @xmath83 is @xmath84 , @xmath85 is @xmath86 , and @xmath87 is @xmath88 . to clarify the contents of the matrices @xmath89,[\\mathbf{\\omega}],[\\mathbf{\\phi}]$ ]",
    "we introduce the following modified coordinates : @xmath90 components of the @xmath83 matrix are given by : @xmath91_{i_1j_1}=i2\\pi q^{\\alpha\\beta}_1\\int_\\omega fd\\omega;\\quad [ \\mathbf{h}]_{i_2j_2}=i2\\pi q^{\\alpha\\beta}_2\\int_\\omega fd\\omega;\\quad [ \\mathbf{h}]_{i_1j_3}=[\\mathbf{h}]_{i_2j_2};\\quad [ \\mathbf{h}]_{i_2j_3}=[\\mathbf{h}]_{i_1j_1}\\ ] ] we also have @xmath89^*=-[\\mathbf{h}]^t$ ] where the superscript @xmath92 denotes a matrix transpose .",
    "components of the @xmath85 matrix are given by : @xmath93_{i_1j_1}=\\int_\\omega \\rho(x_1,x_2)fd\\omega;\\quad[\\mathbf{\\omega}]_{i_2j_2}=[\\mathbf{\\omega}]_{i_1j_1}\\ ] ] the rest of the terms in the @xmath85 matrix being zero .",
    "the components of the @xmath87 matrix are given by : @xmath94_{i_1j_1}=\\int_\\omega d_{1111}(x_1,x_2)fd\\omega\\;\\quad [ \\mathbf{\\phi}]_{i_1j_2}=\\int_\\omega d_{1122}(x_1,x_2)fd\\omega;\\quad [ \\mathbf{\\phi}]_{i_1j_3}=2\\int_\\omega d_{1112}(x_1,x_2)fd\\omega\\\\ \\nonumber[\\mathbf{\\phi}]_{i_2j_1}=\\int_\\omega d_{2211}(x_1,x_2)fd\\omega;\\quad [ \\mathbf{\\phi}]_{i_2j_2}=\\int_\\omega d_{2222}(x_1,x_2)fd\\omega;\\quad [ \\mathbf{\\phi}]_{i_2j_3}=2\\int_\\omega d_{2212}(x_1,x_2)fd\\omega\\\\ [ \\mathbf{\\phi}]_{i_3j_1}=2\\int_\\omega d_{1211}(x_1,x_2)fd\\omega;\\quad [ \\mathbf{\\phi}]_{i_3j_2}=2\\int_\\omega d_{1222}(x_1,x_2)fd\\omega;\\quad [ \\mathbf{\\phi}]_{i_3j_3}=4\\int_\\omega d_{1212}(x_1,x_2)fd\\omega\\end{aligned}\\ ] ] where @xmath95}$ ] .",
    "the above relations are provided for the most general case .",
    "for isotropic plane strain case several compliance components go to zero .",
    "this would result in several components of the @xmath87 matrix going to zero .",
    "additionally , given the periodicity of the exponential function , several terms in @xmath89,[\\mathbf{h}]^*$ ] will also go to zero .",
    "we consider a hexagonal unit cell made up of steel cylinders ordered in an epoxy matrix ( fig .",
    "[ fcomphexagonal]a ) .",
    "the diameter of the steel cylinders is 4 mm and the lattice constant is 6.023 mm .",
    "the material properties are taken from @xcite and are reproduced here for reference    1 .",
    "steel : @xmath96 gpa , @xmath97 gpa , @xmath98 kg / m@xmath99 2 .",
    "epoxy : @xmath100 gpa , @xmath101 gpa , @xmath102 kg / m@xmath99        fig .",
    "( [ fcomphexagonal]b ) shows the automatic discretization of the unit cell into 964 triangular elements .",
    "the band - structure is evaluated along the boundaries of the irreducible brouillon zone .",
    "this boundary is denoted by the path @xmath103 and is shown in fig .",
    "( [ fcomphexagonal]c ) in the reciprocal cell . for the band - structure calculations we use a total of 242 terms ( @xmath104 ) .",
    "this results in the simultaneous evaluation of the first 242 eigenvalues for each wavenumber point .",
    "the results in fig .",
    "( [ fcomphexagonal]d ) , however , only show the first 12 eigenvalues .",
    "these results are in very good agreement with the pwe calculations shown in ref.@xcite ( fig . 3 in that paper ) .",
    "we note the existence of the all - angle stop - band for waves traveling in the plane of the unit cell in the frequency ranges of 120 - 262 khz and 427 - 473 khz .",
    "the locations of the stop - bands and the general shape of the pass - bands are shown to match very well with the results in ref.@xcite .",
    "we note that the central computation which is being performed in the formulation presented above is the calculation of the @xmath105 integrals over the geometry of the unit cell .",
    "these integrals are shown more clearly in equations ( [ eh],[eo],[ep ] ) for the 2-d case .",
    "the integrands in each of these equations depend upon the fourier terms @xmath78 and/or the coordinates of the points within the unit cell .",
    "there appears no easy way of computing these integrals once and using the saved value for further calculations . the most straightforward way of implementing integrals is to evaluate the integrands for each set of @xmath78 as they assume values from @xmath106 and for each element - centroid point in the mesh .",
    "these computations present a significant bottleneck in the formulation . for m=6 and with thousand elements in the mesh ,",
    "each integral requires the evaluation of its integrand at @xmath107 different points or at 28.561 million points . to calculate all the integrals in the equations ( assuming that the symmetry of the compliance matrix renders some calculations redundant ) we require the evaluation of the integrands at 228.488 million points .",
    "in addition to this significantly time consuming step , the formulation requires further matrix manipulations to calculate @xmath108 eigen - frequency values for a given wave - vector point . to calculate the entire band - structure along the boundaries of the ibz",
    ", it is required to discretize the boundary at several different wave - vector points and to use the formulation at each of the discretized points .",
    "if the boundary is dicretized at 70 wave - vector points , the mixed - variational formulation requires the calculation of the integrands 16 billion times .    ) , b. @xmath109 for @xmath110 from 2 to 6 . ]    to illustrate the considerable time required to achieve this through traditional loops we present eigen - frequency computation times ( averaged over 5 runs ) for one wave - vector point through a matlab implemented code ( fig .",
    "[ fmatlabtimes]a ) .",
    "the implementation is serial with loops being employed to cycle over the fourier terms and the elements in the mesh .",
    "the results are shown for 3 different levels of mesh discretization and 5 different values of @xmath42 .",
    "for @xmath111 and coarse unit cell discretization ( 168 elements ) matlab returns the results in an average of .07 seconds .",
    "however , such a coarse computation gives unreliable results for the higher branches .",
    "to reliably evaluate higher branches we require more fourier terms and a finer mesh dicretization to accurately represent the spatial variations of the field variables over the unit cell .",
    "this increases the computation times significantly .",
    "an approximate estimate may be obtained for the time required in serial computations for finer meshes and higher @xmath42 values .",
    "if the time taken by the serial computations for @xmath112 elements in the mesh and for @xmath113 is @xmath114 then we should have @xmath115 the approximation results from considering only the assembly of the matrices as the dominant computation .",
    "therefore the approximation should improve for high values of @xmath116 where loop processes dominate .",
    "there is a linear increase in the computation time with increase in the number of elements but a power-4 increase in time with @xmath42 values .",
    "denoting @xmath117 by @xmath109 we note that @xmath109 is always greater than 1 but converges to 1 for large @xmath110 .",
    "this parameter is plotted in fig .",
    "[ fmatlabtimes]b for @xmath110 from 2 to 6 .",
    "it can be seen that the actual computation time factors are very close to the theoretical factors , attesting to the initial assumption that it is the assembly of the matrices which is the dominant computation in the method .",
    "it is clear that the power-4 time complexity involved with @xmath42 in the 2-d case ( and the power-6 time complexity in the 3-d case ) renders the application of the method slow for higher branches .",
    "for instance , 318.9638 seconds are required to compute the eigen - frequencies for @xmath118 and with a mesh discretization of 1000 elements . since the results shown in fig .",
    "[ fmatlabtimes]a pertain to 1 wave - vector point , a rough estimate of the time required to solve the complete band - structure of a 2-d composite may be made by multiplying with the number of distinct wave - vector points at which the computation is desired .",
    "if the boundary of the ibz is discretized at 70 different wave - vector points , it would tentatively require 6.2 hours to do the complete calculation for @xmath118 and for 1000 elements in the mesh .",
    "although some efficiency gains may be achieved on regular cpus by exploiting their multi - core , multi - threaded nature , the time required for the computation would still be far too prohibitive to use the formulation in areas like band - structure optimization and inverse problems in dynamic homogenization where thousands of unit cells potentially need to be analyzed .    in the present form of the formulation",
    "the maximum parallelization that can be achieved is at the level of wave - vector discretization .",
    "given 70 parallel cpu cores each of which is comparable to the the present hardware , it should be possible to analyze the complete band - structure of the 2-d unit cell ( at 70 points on the boundary of the ibz ) in around 318 seconds .",
    "however 70 parallel cpu cores represent a significant financial investment .",
    "moreover , incorporating further parallelization appears difficult even with the availability of more parallel processing capabilities .",
    "our aim in this paper is to present the formulation in a form which is not limited in its parallelizability .",
    "moreover we present it within the context of gpu - acceleration .",
    "since gpus are much cheaper per parallel thread compared to cpus , the formulation presented in this paper can be used for very cost - effective computations .",
    "in the present problem we note that even though billions of computations are required for the complete solution of the band - structure , all of these computations are themselves very simple .",
    "more importantly , all of these computations are independent of each other and hence can be carried out in parallel if the formulation can be properly recast . the ideal requirement from the computational platform , therefore , is that of massive parallel capability .",
    "the highest end desktop cpu processors currently available have 8 independent cores capable of running 16 independent processes in parallel through hyperthreading .",
    "further parallelization may be achieved by assembling clusters of such processors together effectively resulting in many parallel computational cores but it requires significant financial investment .",
    "graphical processors , which are normally used to render graphics on modern laptops and desktops , provide a cheap and efficient alternative to cpu processing when a large number of parallel processes are required to be computed .",
    "we have incorporated the mixed - variational formulation in python and used the cuda parallel computing platform to execute the most computationally intensive parts of the formulation on an nvidia quadro k2000 gpu .",
    "the k2000 has a total of 384 cuda cores each of which can execute multiple processes in parallel .",
    "gpus with more cores are available for cheap and the formulation is presented in a way which makes it easily applicable to higher levels of parallelization .",
    "to achieve such parallelization we have recast the algorithm so as to replace almost all loop operations with equivalent matrix operations .",
    "one of the basic computational unit in the formulation is the calculation of the following @xmath105 integral over the unit cell ( for @xmath83 matrix in [ eh ] ) : @xmath119}d\\omega\\equiv\\sum_{i=1}^{n_{el}}f_i(\\alpha,\\beta,\\theta,\\eta)a_i\\ ] ] where @xmath120 is the evaluation of the integrand at the centroid location of the @xmath121 element in the mesh and @xmath122 is the area of the @xmath121 element .",
    "the calculation of the integral for different values of @xmath78 , if implemented in the most straightforward way possible , represents @xmath123 loops within which the integrand needs to be evaluated . to expedite the computations we view the result of all the evaluations of the integrand at all fourier points as a 3-dimensional matrix @xmath124 $ ] with size [ @xmath125 .",
    "each element [ @xmath126 of this matrix is evaluated from one 2-dimensional matrix and four 1-dimensional vectors .",
    "the first matrix of size [ @xmath127 , denoted by @xmath128 $ ] , represents the centroid values of the mesh .",
    "its [ @xmath129 and [ @xmath130 elements represent the @xmath131 and @xmath132 coordinates , respectively , of the centroid of the @xmath121 mesh - element . the second and third vectors ( @xmath133,[a_2]$ ] ) of length @xmath108",
    "represents the appropriate combination of @xmath134 occurring in the integral .",
    "they are derived by transforming two 2-dimensional matrices of size [ @xmath135 whose [ @xmath136 elements are respectively given by : @xmath137\\quad\\quad\\text{for $ a_1$}\\\\ i2\\pi\\left[t(1,0)(q_1+\\alpha(m ) ) + t(1,1)(q_2+\\beta(n))\\right]\\quad\\quad\\text{for $ a_2$}\\end{aligned}\\ ] ] where @xmath138 are two 1-dimensional vectors of length @xmath139 .",
    "similarly the fourth and fifth vectors ( @xmath140,[b_2]$ ] ) of length @xmath108 represents the appropriate combination of @xmath141 appearing in the integral .",
    "they are derived by transforming two 2-dimensional matrices of size [ @xmath135 whose [ @xmath136 elements are respectively given by : @xmath142\\quad\\quad\\text{for $ b_1$}\\\\ 2i\\pi\\left[t(1,0)(q_1+\\theta(m ) ) + t(1,1)(q_2+\\eta(n))\\right]\\quad\\quad\\text{for $ b_2$}\\end{aligned}\\ ] ] where @xmath143 are two 1-dimensional vectors of length @xmath139 .",
    "expressed in this way the [ @xmath126 value of the integrand matrix ( denoted by @xmath124_{ijk}$ ] ) is given by : @xmath144_{ijk}=e^{\\left[a_1(j)-b_1(k)\\right]c(i,1)+\\left[a_2(j)-b_2(k)\\right]c(i,2)}\\ ] ] with the integral given by : @xmath145_{ijk}a_i;\\quad j , k=1,2, ... (2m+1)^2\\ ] ] to compute this matrix of the integrals the matrices @xmath146 are passed to the gpu . on the gpu",
    "the computational kernels are executed by a grid of thread blocks , where each block is a grid of threads .",
    "each thread has a unique i d which can be used to map it to a unique set of indices @xmath147 .",
    "each thread then performs the simple calculations in ( [ eexp ] ) using the vector and matrix elements which are uniquely identified by the set @xmath147 .",
    "since the actual computation carried out by each thread is relatively simple and many threads are running in parallel , the method displays considerably reduced calculation times in comparison with the straightforward loops method .",
    "the integral appearing in [ eo ] is similarly given by @xmath148_{ijk}a_i;\\quad j , k=1,2, ... (2m+1)^2\\ ] ] where the vector @xmath149 $ ] contains the density information of the elements .",
    "the integrals in [ ep ] can be similarly calculated . through the highly parallel implementation of the mixed - variational formulation we report more than hundred fold efficiency gains in the mixed - variational band - structure algorithm , especially for large @xmath42 values .      )",
    "b. efficiency factor comparing the parallel formulation with the serial formulation ]    to compare the gpu - computation results with the cpu results shown in fig .",
    "[ fmatlabtimes]a , we present in fig . [ fgputimes]a the times taken for the same computations performed on the same desktop computer . in the present case",
    "most of the computationally intensive tasks are performed on the gpu .",
    "each point on fig .",
    "[ fgputimes]a is an average of 5 runs .",
    "we define an efficiency factor which measures the performance improvement through the parallel computations over serial computations in terms of the time it takes to do the same computation through the two methods : @xmath150 these efficiency factors are plotted in fig .",
    "[ fgputimes]b . for @xmath111",
    "the gpu computations take longer than the same cpu computations .",
    "this can be attributed to the time overhead involved in passing the matrices from the host ( cpu ) to the device ( gpu ) .",
    "for @xmath111 the efficiency gained in the parallel evaluation of the integrals is lower than the efficiency lost in passing the required matrices to the gpu . however , for all other values of @xmath42 and for all levels of discretizations considered the parallel computations are faster than their serial counterparts . at @xmath118 ,",
    "the gpu performance is 25 times faster than the cpu computations for the coarse mesh ( 168 elements ) . for the fine mesh with 1000 elements",
    "the gpu computations are almost 112 times faster than cpu computations .",
    "since part of the formulation presented above is executed on the cpu and part of it is executed on the gpu it is not easy to establish a theoretical estimate of the total execution time .",
    "however , in this section we show that the gpu - formulation is i / o bound as opposed to compute bound .",
    "while the serial version of the formulation was dominated by the assembly of the matrices which dictated the execution time , the parallel version is overwhelmingly dominated by the time it takes to pass data between the host and the device .",
    "the time taken in the assembly of the matrices is a negligibly small fraction of the total compute time .",
    "( [ fmemorytimes ] ) shows the total time taken in transferring the data between the host and the device as a percentage of the total execution time for three mesh discretization values and for @xmath151 . for @xmath111 and",
    "the i / o time is less than @xmath152 of the total execution time for all three levels of discretization .",
    "however , the i / o time accounts for more than @xmath153 of the total execution time for @xmath118 and the fine mesh . even though it takes billions ( if not trillions ) of floating point operations to assemble the matrices for @xmath118 and 1000 elements , the time taken by the gpu for the assembly is less than @xmath154 of the total execution time",
    "this translates into an assembly time of less than .57 milliseconds suggesting the potential for further reduction in time if the i / o operations are optimized . in view of the small compute times",
    ", this result becomes particularly significant for cases where thousands of micro - structures may need to be analyzed for the optimization of some dynamic property .",
    "the speed of the computation becomes more apparent when the full band - structure is evaluated through gpu - computing .",
    "[ fgpufullband ] shows the band - structure of the 2-d composite along the boundary of the ibz and for the first 18 branches . for these calculations",
    "we have discretized the boundary of the ibz at 70 wave - vector points and used a mesh with 1000 elements . a similar computation on a cpu with rudimentary loops",
    "is estimated to take 3 hours when @xmath104 .",
    "the gpu accelerated formulation provides the complete set of results in 90 seconds .        from fig .",
    "[ fgpufullband ] it is also evident that for the first 18 branches the solution has acceptably converged even for @xmath155 , a calculation which only takes 42 seconds .",
    "furthermore , the solution computed for @xmath155 when 256 elements are used in the mesh gives accurate results for the first 18 branches and takes less than 15 seconds ( fig .",
    "[ fm2and4]b ) . making the mesh more coarse or using less number of fourier terms in the mixed - variational formulation results in worsening accuracy in the calculation of the branches .",
    "however , if only the first few branches are of interest then the gpu implementation of the mixed - variational formulation provides acceptable results in around 2 seconds ( fig . [",
    "fm2and4]a ) .        to show that the gpu - accelerated mixed - variational method presented in this paper provides a fast band - structure computational tool for unit cells of arbitrary complexity we present the computed results for a hypothetical hexagonal unit cell divided into 1132 mesh - elements where each element has different material properties .",
    "the geometry of the unit cell is given in fig .",
    "[ fcomphexagonal]a except that instead of being made up of 2 phases , the unit cell is made up of possibly 1132 different phases . while the stiffness properties for each phase are taken to be equal ( @xmath96 gpa , @xmath97 gpa ) , the density of each phase is computed from the @xmath132 coordinate of the centroid of its mesh - element ( @xmath156_{i,2}$ ] ) .",
    "the band - structure of this composite is calculated from the formulation presented in this paper and is shown in fig .",
    "[ farbitrary ] . for this case",
    "the solution shows convergence at @xmath157 , a calculation which is performed in 18.5 seconds .",
    "in this paper we have presented a novel implementation of the mixed - variational method within the framework of gpu computing .",
    "we report more than 100 fold performance gains through gpu computing over the unoptimized serial implementation on a cpu .",
    "we showed , by way of an example , that a single mid - range gpu ( k2000 in the present case ) is powerful enough to solve the band - structure of a 2-d phononic composite in a matter of seconds .",
    "for the example chosen in this paper , it was shown that gpu computations result in acceptable band - structure calculations for the first 18 branches in less than 15 seconds .",
    "if only the first few branches are desired then the gpu - accelerated mixed - variational formulation provides the result in around 2 seconds .",
    "finally we presented the application of the gpu - accelerated mixed - variational formulation to a hexagonal unit cell comprising of 1132 different phases .",
    "the speed of the results and the versatility of the method show its strong potential in the areas of band - structure optimization .",
    "we also note that the gpu computations are i / o bound indicating the possibility of further efficiency through the use of optimized data transfer between the host and the device .",
    "additionally we note that the system on which the computations were carried out is not an expensive cluster but a regular desktop computer .",
    "the gpu used in the calculations ( k2000 ) is not the highest end gpu currently available .",
    "additionally memory optimizations which can further accelerate the algorithm were not implemented in this paper . by using parallel gpus with more computational cores , optimized memory management schemes , and precomputed results wherever possible , it should be possible to further decrease the calculation times considerably .",
    "the current gpu was also limited in terms of its internal memory ( 2 gb ) which prevented very large matrices from being manipulated .",
    "such matrices are required for solving the phononic band - structures of 3-d composites .",
    "however , with more gpu memory it is expected that a mixed - variational implementation on distributed gpus can efficiently characterize the phononic properties of arbitrarily complex 3-d unit cells .",
    "36ifxundefined [ 1 ] ifx#1 ifnum [ 1 ] # 1firstoftwo secondoftwo ifx [ 1 ] # 1firstoftwo secondoftwo `` `` # 1''''@noop [ 0]secondoftwosanitize@url [ 0 ]",
    " + 12$12  & 12#1212_12%12@startlink[1]@endlink[0]@bib@innerbibempty @noop * * ,   ( ) @noop * * , ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * , ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * , ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * , ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop",
    "`` , ''   ( ) ,   @noop ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) in  @noop _ _  ( )  pp .   @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( ) @noop * * ,   ( )"
  ],
  "abstract_text": [
    "<S> in this paper we present a graphical processing unit ( gpu ) accelerated mixed variational formulation for fast phononic band - structure calculation of arbitrarily complex unit cells and report speed gains of a hundred fold over unoptimized serial cpu computations . </S>",
    "<S> to the author s knowledge this is the first application of gpu computing to a non - fe / fdtd bandstructure algorithm . the formulation is presented in a form which is applicable to 1- , 2- , and 3-d cases . however , in this paper we concentrate on optimizing the formulation within the paradigm of gpu computing , presenting results for 2-d unit cells . </S>",
    "<S> the mixed - variational formulation has been proven to show faster convergence than variational principles based purely on the displacement field . </S>",
    "<S> additionally the integral nature of the method allows for its application to unit cells of arbitrary complexity . </S>",
    "<S> however , the application of this formulation was limited to fairly simple unit cells until recently when its scope was extended to deal with all bravais lattices and complex micro - structures . in this paper </S>",
    "<S> we describe the application of the formulation within the framework of gpu computing with a long term view towards highly efficient and massively distributed band - structure algorithms suitable for tackling optimization and inverse problems . </S>",
    "<S> we report that the current formulation becomes i / o bound as opposed to compute bound indicating the potential for yet faster computations through optimized data transfer between the host ( cpu ) and the device ( gpu ) . </S>",
    "<S> we report that the accurate band - structure evaluation over the boundary of the irreducible brillouin zone ( ibz ) for the first 18 phononic branches of a complex 2-d unit cell ( with 1132 different phases ) can be achieved in less than 20 seconds on a regular desktop . for a simpler unit cell , </S>",
    "<S> the first few phononic branches are calculated in less than 2.5 seconds on the same system . </S>",
    "<S> the scheme presented in this paper , therefore , represents considerable savings in the computational costs of phononic ( and photonic , through extensions to the current method ) band - structures . </S>",
    "<S> we discuss ways by which the computations can be further accelerated and comment upon the potential use of the fast algorithm presented in this paper to the areas of band - structure optimization and the inverse problem of dynamic homogenization . </S>"
  ]
}
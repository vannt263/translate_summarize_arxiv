{
  "article_text": [
    "private information retrieval protocols make it possible to retrieve a data item from a database without disclosing any information about the identity of the item being retrieved .",
    "the notion of private information retrieval ( pir ) was first introduced by chor , goldreich , kushilevitz , and sudan in  @xcite and has attracted considerable attention since ( see @xcite and references therein ) .",
    "the classic pir model of  @xcite , which we adopt  in  this paper , views the database as a binary string @xmath13 and assumes that the user wishes  to  retrieve a single bit @xmath14 without revealing any information about the index @xmath15 .",
    "a naive solution for the user ( hereinafter , often called alice ) is to download the entire database @xmath16 .",
    "it is shown in  @xcite that in the case of a single database stored on a single server , this solution is essentially the best possible : any pir protocol will require @xmath17 bits  of  communication between the user and the server . in order to achieve sublinear communication complexity , chor , goldreich , kushilevitz , and sudan  @xcite proposed _ replicating the database _ on several servers that do not communicate with each other .",
    "they showed that having two replicas makes it possible to reduce the communication cost to @xmath18 , while @xmath19 servers can achieve communication complexity .",
    "= -1 following the seminal work of  @xcite , the communication complexity of @xmath0-server pir has been further reduced in a  series of groundbreaking papers .",
    "ambainis  @xcite generalized the methods of  @xcite to obtain a communication cost of for all @xmath20 .",
    "this result remained the best known for a while until the -complexity  barrier was finally broken in @xcite .",
    "five years later , came the remarkable work of yekhanin  @xcite who constructed  a  @xmath21-server pir scheme with subpolynomial communication cost , assuming the infinitude of mersenne primes . shortly thereafter",
    ", efremenko  @xcite gave an unconditional @xmath0-server pir scheme with subpolynomial complexity for all @xmath19 .",
    "the recent paper of dvir and gopi @xcite shows how to achieve the same complexity as in  @xcite with only two servers .",
    "= -1 all this work follows the orginal idea , first proposed in  @xcite , of replicating the database in order to reduce the  communication cost .",
    "however , this approach neglects another cost parameter : the _ storage overhead _ , defined  as the ratio between the total number of bits stored on all the servers and the number of bits in the database .",
    "clearly , the storage overhead of the pir protocols discussed above is @xmath22 .",
    "if the database is very large , the necessity to store several replicas of it could be untenable for some applications .",
    "thus , in this paper , we consider the following question .",
    "can one achieve pir with low communication cost but _ without doubling ( or worse ) the number of bits we need to store _ ?",
    "this question has been settled in the affirmative in  @xcite for the case where one is willing to replace information - theoretic guarantees of privacy by computational guarantees .",
    "such computational pir is by now well studied   see @xcite for more information .",
    "however , in this paper , we consider only information - theoretic pir , which provides the strongest form of privacy .",
    "that is , even computationally unbounded servers should not gain any information  from the user queries .",
    "somewhat surprisingly , despite the impossibility proof of  @xcite , the answer to our question turns out to  be affirmative also in the case of information - theoretic pir .",
    "our results do not contradict  @xcite . to achieve  information - theoretic privacy ,",
    "one does need at least two non - communicating servers . however , these servers do not have to hold the entire database , they can store only parts of it .",
    "we show that if these parts are judiciously encoded , rather than replicated , the overall storage overhead can be reduced .",
    "we show that all known @xmath0-server information - theoretic pir protocols can be efficiently emulated , while preserving their privacy and communication - complexity guarantees ( up to a constant ) , but significantly reducing the storage overhead .",
    "in fact , for any fixed @xmath0 and any @xmath23 , we can reduce the storage overhead to under @xmath24 .    in order to achieve these results , we first partition the database into @xmath7 parts and distribute these parts among  non - communicating servers , so that every server stores @xmath5 bits .",
    "why do we partition the database in this manner ?",
    "the main reason is that such partition is necessary to reduce the storage overhead .",
    "if every server has to store all  @xmath3  bits of the database , then the storage overhead can not be reduced beyond @xmath20 . however , in practice , there may be other compelling reasons .",
    "for example , the database may be simply too large to fit in a single server , or it may need to be stored in a distributed manner for security purposes . we observe that the number of parts @xmath7 need not be very large . with @xmath25 parts , we can already achieve significant savings in storage overhead . with @xmath26 parts ,",
    "we get a storage overhead of @xmath27 ( for @xmath1-server pir protocols ) .    given a partition of the database into @xmath7 parts , our construction consists of two main ingredients : 1 ) an existing @xmath0-server pir protocol in which the servers responses are a _ linear function _ of the database bits , and 2 ) a binary  linear code , which we call a _ @xmath0-server pir code _ , with a special property to be defined shortly .",
    "we note that the  first  requirement is very easy to satisfy : _ all _ the existing pir protocols known ( to us ) are linear in this fashion .",
    "thus our primary focus in this paper is on the construction of @xmath0-server pir codes .",
    "the defining property of a @xmath0-server pir code is this : for every message bit @xmath28 , there exist @xmath0 disjoint sets of coded bits from which @xmath28 can be uniquely recovered ( see section[sec : coded_pir ] for a formal definition ) .",
    "although this property is reminiscent of locally recoverable codes , recently introduced in  @xcite , there are important differences . in locally  recoverable codes",
    ", we wish to guarantee that every message bit @xmath28 can be recovered from a _ small set _ of coded bits , and only one such recovery set is needed . here , we wish to have _ many disjoint recovery sets _ for every message  bit , and we do not care about their size . to the best of our knowledge ,",
    "codes with this property have not been previously studied , and they may be of independent interest .    in this paper , we show how @xmath0-server pir codes can be constructed from steiner systems , from one - step majority - logic decodable codes , and from constant - weight codes .",
    "we give an optimal construction of such codes for the case where the number of parts @xmath7 is small .",
    "we also establish several bounds on the parameters of general @xmath0-server pir codes , and tabulate these parameters for all @xmath10 and @xmath11 .",
    "finally , we briefly discuss extensions of our results to nonbinary alphabets , to robust pir , and to @xmath12-private pir .",
    "there are several previous works which construct coded schemes for the purpose of fast or private retrieval .",
    "the first work we know of for the purpose of coded private retrieval is the recent work by shah et al .",
    "the authors showed how to encode files in multiple servers with very low communication complexity .",
    "however , their constructions require an exponentially large number of servers which may depend on the number of files or their size .",
    "in another recent work  @xcite , chan et al . studied the tradeoff between storage overhead and communication complexity , though only for setups in which the size of each file is relatively large . a similar approach to ours",
    "was studied by augot et al .",
    "@xcite , where the authors also partitioned the database into several parts in order to avoid repetition and thereby reduce the storage overhead .",
    "however , their construction works only for the pir scheme using the multiplicity codes by kopparty et al .",
    "@xcite and they did nt encode the parts of the database as we study in this work .",
    "batch codes  @xcite are another method to store coded data in a distributed storage for the purpose of fast retrieval of multiple bits . under this setup ,",
    "the database is encoded into an @xmath29-tuple of strings , called _ buckets _ , such that each batch of @xmath0 bits from the database can be recovered by reading at most some predetermined @xmath12 bits from each bucket .",
    "they are also useful in trading the storage overhead in exchange for load - balancing or lowering the computational complexity in private information retrieval .",
    "another recent work on batch codes was recently studied in  @xcite .",
    "the rest of this paper is organized as follows . in section  [ sec :",
    "prelim ] , we formally define the pir schemes studied in the paper , namely the conventional pir protocol and coded pir protocols . in section  [ sec : coded_pir ] we present our general construction of coded pir protocols and define the requirements on a @xmath0-server pir codes that are used in this protocol .",
    "section  [ sec : cons ] studies several constructions of @xmath0-server pir codes . in section",
    "[ sec : small_s_k ] , we study the storage overhead of @xmath0-server pir codes when the values of @xmath7 and @xmath0 are small , and in section  [ sec : asymp_behavior ] we study the asymptotic behavior when either @xmath7 or @xmath0 is large . finally , section  [ sec : conc ] concludes the paper .",
    "in this section we formally define the pir protocols we study in the paper .",
    "a linear code over @xmath30 of length @xmath3 and dimension @xmath0 will be denoted by @xmath31_q$ ] or by @xmath32_q$ ] where @xmath33 specifies the minimum distance of the code . in case",
    "the code is binary we will omit the field notation . for",
    "a positive integer @xmath3 the notation @xmath34 $ ] will refer to the set @xmath35 .",
    "we denote by @xmath36 the vector with 1 on its @xmath15-th position and 0 elsewhere .",
    "let us revisit and rephrase the formal definition of a pir scheme , based upon the definitions taken from  @xcite and  @xcite .",
    "[ def : pir ] a * @xmath0-server pir scheme * consists of the following :    1 .",
    "@xmath0 servers @xmath37 , each stores a length-@xmath3 database @xmath16 , 2 .",
    "a user ( alice ) @xmath38 who wants to retrieve @xmath14 , for @xmath39 $ ] , without revealing @xmath15 .",
    "a * @xmath0-server pir protocol * is a triplet of algorithms @xmath40 consisting of the following steps :    1 .",
    "[ step 1 ] alice flips coins and based on the flip coins and @xmath15 invokes @xmath41 to generate a randomized @xmath0-tuple of queries @xmath42 , of some predetermined fixed length . for @xmath43 $ ] ,",
    "the query @xmath44 will be also denoted by @xmath45 .",
    "2 .   for @xmath43 $ ]",
    ", she sends the query @xmath44 to the @xmath46-th server @xmath47 .",
    "the @xmath46-th server , for @xmath43 $ ] , responds with an answer @xmath48 of some fixed length .",
    "finally , alice computes its output by applying the reconstruction algorithm @xmath49 .    the protocol should satisfy the following requirements :    * * privacy * - each server learns no information about @xmath15 .",
    "formally , for any @xmath50 $ ] , and a server @xmath51 $ ] , the distributions @xmath52 and @xmath53 are identical , where the distribution is over the coins flip in step  [ step 1 ] of the pir protocol . *",
    "* correctness * - for each @xmath54 and @xmath55 and @xmath56 $ ] , the user deterministically outputs the correct value of @xmath14 , that is @xmath57 .",
    "we follow the common figure of merit to evaluate the system storage efficiency according by its overhead  @xcite .",
    "namely , the _ storage overhead _ of the system is the ratio between the total number of bits stored in the system and the number of information bits .",
    "for example , the storage overhead of a @xmath0-server pir scheme is @xmath0 .",
    "another special property of pir protocols which will be used in our constructions is _",
    "linearity_. this property is formally defined as follows .",
    "[ ded : linear_pir ] a @xmath0-server pir protocol @xmath40 is said to be a * linear pir protocol * if for every @xmath3 , @xmath51 $ ] , @xmath58 , and a query @xmath44 , the following property holds @xmath59    many , if not all existing pir protocols , satisfy this linearity property , see for example  @xcite .",
    "lastly , we assume that the algorithm @xmath60 is public knowledge in the sense that every server can compute the response @xmath61 for any @xmath51 $ ] , database @xmath16 , and query @xmath62 .    before formally defining the coded version of a pir scheme",
    ", we demonstrate the main ideas in the next example .",
    "consider the following 2-server pir scheme where each server stores an @xmath3-bit database @xmath16 and alice wants to read the @xmath15-th bit @xmath14 , for some @xmath39 $ ] .",
    "alice chooses uniformly at random a vector @xmath63 .",
    "the first server receives the query @xmath64 and responds with an answer of the bit @xmath65 .",
    "the second server receives the query @xmath66 and responds with an answer of the bit @xmath67 ; see fig .",
    "[ fig : ex1 ] .",
    "alice receives these two bits and their sum gives the @xmath15-th bit @xmath14 , since @xmath68    if the servers do not communicate with each other then since the vector @xmath64 is chosen uniformly at random , the value of @xmath15 remains private .",
    "moreover , the servers responses are linear functions of the stored data and thus the protocol is a linear pir protocol .",
    "alice had to transmit @xmath69 bits and @xmath1 bits were received , so a total of @xmath70 bits were communicated .",
    "the storage overhead of this scheme is 2 and note also that if one of the servers fails then it is possible to retrieve the database @xmath16 from the other surviving server .",
    "now , assume that the database @xmath16 is partitioned into two equal parts of @xmath71 bits each , @xmath72 and @xmath73 , where @xmath74 , and @xmath75 .",
    "the database is stored in three servers .",
    "the first server stores @xmath72 , the second stores @xmath73 , and the third one is a parity server which stores @xmath76 . if alice wants to read the @xmath15-th bit where @xmath77 $ ] , she first chooses uniformly at random a vector @xmath78 .",
    "the first server receives the query @xmath64 and responds with the bit @xmath79 .",
    "the second server receives the query @xmath80 and responds with the bit @xmath81 , and the third server receives the query @xmath80 and responds with the bit @xmath82 .",
    "alice receives those three bits and calculates the bit @xmath14 according to the sum @xmath83    it is clear that both schemes keep the privacy of @xmath15 . in the first scheme ,",
    "the number of communicated bits is @xmath70 , while in the coded scheme it is @xmath84 .",
    "the storage overhead was improved from 2 to 3/2 , and both schemes can tolerate a single server failure .",
    "however , we note that the coded scheme requires one more server .     and @xmath85 to the servers .",
    "the servers respond with @xmath65 and @xmath86 and alice recovers @xmath14 as their sum .",
    "the value of @xmath15 remains private as the vector @xmath64 is chosen uniformly at random.,width=340 ]    one may claim that the improvement in the last example is the result of using three instead of two servers .",
    "this is indeed correct , however , assume that each server can store only @xmath71 bits . then , the database @xmath16 will have to be stored over two servers and each of them would have to be replicated , resulting with a total of four servers instead of three .",
    "furthermore , the number of communicated bits would still remain the same , @xmath70 .",
    "thus , under this constraint , we can claim that we improved both the number of servers as well as the number of communicated bits .",
    "we are now ready to extend the definition of pir scheme to its coded version .",
    "[ def : coded_pir ] an * @xmath87-server coded pir scheme * consists of the following :    1 .   a length-@xmath3 database @xmath16 which is partitioned into @xmath7 parts @xmath88 , each of length @xmath5 .",
    "@xmath29 servers @xmath89 , where for @xmath90 $ ] the coded data @xmath91 , stored in the @xmath46-th server , is a function of @xmath88 .",
    "3 .   a user ( alice ) @xmath38 who wants to retrieve the @xmath15-th bit from the database @xmath16 , without revealing @xmath15 .",
    "an * @xmath87-server coded pir protocol * is a triplet of algorithms @xmath92 consisting of the following steps :    1 .",
    "alice flips coins such that based on the flip coins and @xmath15 , she invokes @xmath93 to generate a randomized @xmath29-tuple of queries @xmath94 of predetermined fixed length .",
    "2 .   for @xmath95 $ ]",
    ", she sends the query @xmath44 to the @xmath46-th server @xmath47 .",
    "the @xmath46-th server , for @xmath90 $ ] , responds with an answer @xmath96 .",
    "4 .   finally , alice computes its output by applying the reconstruction algorithm @xmath97 .",
    "the protocol should satisfy the privacy and correctness properties as stated in definition  [ def : pir ] .",
    "the next section discusses the construction of coded pir schemes based upon existing linear pir protocols .",
    "in this section we will give a general method to construct coded pir schemes . a key point in the construction of coded pir protocols",
    "is to use existing pir protocols and emulate them in the coded setup .",
    "we first give a detailed example that demonstrates the main principles of the construction .",
    "[ ex : coded_pir ] assume there exists a 3-server linear pir protocol @xmath98 and a length-@xmath3 database @xmath16 .",
    "assume also that each server can store at most @xmath99 bits .",
    "if one wishes to invoke the pir protocol @xmath98 , then first the database @xmath16 will be partitioned into four parts @xmath100 .",
    "thus , each of the four parts will be stored in three servers so it is possible to invoke the 3-server pir protocol .",
    "this results with 12 servers , each stores @xmath99 bits , and thus the storage overhead is @xmath21 .",
    "we will show how it is possible to accomplish the same task with storage overhead 2 , that is only 8 instead of 12 servers .",
    "namely , we construct an @xmath101-server coded pir protocol @xmath102 .",
    "we use a similar partition of the database @xmath16 into four parts @xmath100 and encode them into 8 servers as follows . the @xmath46-th server for @xmath103 $ ] stores the coded data @xmath91 as follows : @xmath104 in a matrix form notation",
    ", these equations can be written in the following way @xmath105 thus , we encode using an @xmath106 $ ] linear code where the last matrix is its generator matrix in a systematic form .",
    "assume alice seeks to read the @xmath15-th bit from the first part of the database @xmath16 , i.e. the bit @xmath107 , or @xmath14 where @xmath108 $ ] .",
    "she first invokes algorithm @xmath109 to receive the following three queries , @xmath110 then , she assigns the 8 queries of the algorithm @xmath111 to the 8 servers as follows @xmath112 next , she sends these queries to the servers , which respond with the following answers as listed in table  [ pir 1st ] .    .pir protocol for retrieving from the first server [ cols=\"^,^,^\",options=\"header \" , ]     [ table : pir_array_comparison ]    the constructions presented in this section are examples for improvements either in the storage overhead or the existence of codes with other parameters which can not be achieved by the non - array pir codes .",
    "we hope that more constructions will appear to further improve these parameters .",
    "in this section we discuss several more constructions of coded pir schemes with special properties .",
    "first we start with the extension of binary coded pir schemes to non - binary codes .",
    "then , we show how other extensions of pir schemes , namely robust pir and coalitions pir , can be adjusted for the coded pir setup .      in this section",
    "we extend the results from section  [ sec : cons ] to the non - binary setup .",
    "since the construction from theorem  [ thm : coded_pir ] consists of a @xmath0-server linear pir protocol and a @xmath0-server pir code we require the protocol and code to be over the same field @xmath30 , where @xmath62 will be a power of a prime number .",
    "in the extension of definitions  [ def : pir ] and  [ def : coded_pir ] we require that the database and the responses of algorithm @xmath60 in the protocol are over the same field @xmath30 .",
    "therefore , in definition  [ ded : linear_pir ] we also require the linearity of @xmath60 to be over @xmath30 .",
    "the definition of @xmath0-server pir codes remains the same while the linearity of the sets is over @xmath30 . for any @xmath7 and @xmath0",
    "we denote by @xmath113 to be the smallest @xmath29 such that an @xmath114 $ ] @xmath0-server pir code exists over the field @xmath30 .",
    "the construction of @xmath0-server pir protocol in theorem  [ thm : coded_pir ] remains almost identical .",
    "we summarize here the required modifications in this proof , under the assumptions mentioned above .    1 .",
    "the database @xmath16 is partitioned into @xmath7 parts @xmath88 which are encoded using a generator matrix @xmath115 over @xmath30 as before to receive the coded data which is stored in the @xmath29 servers @xmath116 .",
    "2 .   alice wants to read the symbol @xmath117 .",
    "she invokes the algorithm @xmath109 and receives the @xmath0 queries as @xmath118 .",
    "we assume that there exist @xmath0 mutually disjoint sets @xmath119 $ ] , such that for @xmath51 $ ] , we can write @xmath120 where the coefficients @xmath121 are over the field @xmath30 .",
    "the output of the algorithm @xmath93 is assigned as before with the queries and the received answers @xmath122 and @xmath123 .",
    "5 .   for @xmath51 $ ] the value of @xmath124",
    "is calculated according to @xmath125 6 .",
    "alice calculates the symbol @xmath117 as before according to @xmath126    we can always use the binary constructions as @xmath0-server pir codes ( assuming for example that the code is given by a parity check matrix ) , so we can conclude that @xmath127 .",
    "however , we note that the definition of @xmath0-server pir codes is very much related to the recently well - studied _ locally recoverable ( lrc ) codes _  @xcite .",
    "a code @xmath128 over @xmath30 is said to have _ locality _",
    "@xmath129 if every symbol in each codeword from @xmath128 can be recovered by a subset @xmath130 of at most @xmath129 other symbols from the codeword .",
    "the set @xmath130 is called a _ recovering set _ of the symbol .",
    "a code @xmath128 is called an _ lrc code with locality @xmath129 and availability @xmath12 _ if every symbol has @xmath12 pairwise disjoint recovering sets , each of size at most @xmath129 . in case",
    "the code is systematic while the locality and availability requirements are enforced only on the information symbols then it is called an _ lrc code with information locality @xmath129 and availability @xmath12 _  @xcite .",
    "our definition of @xmath0-server pir code is closer to lrc codes with information locality , however we do nt require the code to be systematic . furthermore , the major difference is that we do nt restrict the size of the recovering sets .",
    "the connection between @xmath0-server pir codes and lrc codes with availability is stated as follows .",
    "the proof is omitted since it is straightforward .",
    "[ th : lrc_pir ] if a code @xmath128 is an lrc code with information locality @xmath129 ( or locality @xmath129 ) and availability @xmath131 then it is a @xmath0-server pir code .    for the non - binary setup ,",
    "there are several constructions of lrc codes with availability , see for example  @xcite . while it is not necessarily immediate to find examples where we get better results , in terms of the value of @xmath132 , than the binary case , it is still possible to improve the minimum distance of the code .",
    "the following example will example demonstrates this idea .",
    "assume that @xmath25 and @xmath133 , we already sas that @xmath134 , however the minimum distance of such a code is 3 , which is optimal .",
    "let us consider the case @xmath135 , then the two information symbols @xmath136 are encoded to the following five symbols : @xmath137 where @xmath138 is a primitive element in @xmath139 .",
    "it is possible to verify that this is a 3-server pir code , and its minimum distance is 4 , where in the binary case we could only have minimum distance 3 .",
    "lastly , we briefly note here that our constructions of @xmath0-server pir codes can be used also to construct coded pir protocols for _ robust pir _ and _ @xmath12-private pir _  @xcite .",
    "a _ @xmath0-out - of@xmath140 pir protocol _ is a pir protocol with the additional property that alice can compute the value of @xmath14 even though she received only @xmath0 out of the @xmath141 answers . in order to emulate such a protocol @xmath142 we simply use an @xmath114 $ ] @xmath141-server pir code and repeat the same steps as in theorem  [ thm : coded_pir ] .",
    "then , we can emulate the protocol @xmath142 and if at most @xmath143 answers were not received , then alice will still be able to privately recover the value of the bit @xmath14 .",
    "a _ @xmath12-private pir protocol _ is a pir protocol where every collusion of up to @xmath12 servers learns no information on the bit alice seeks to read from the database .",
    "given a @xmath12-private pir protocol @xmath142 , we follow again the same steps of theorem  [ thm : coded_pir ] to construct an @xmath87-server coded pir protocol @xmath144 .",
    "since the protocol @xmath142 is @xmath12-private , we get also that every collusion of @xmath12 servers learns no information on @xmath15 , the bit that alice attempts to read .",
    "this property results from observing that every @xmath12 servers have together at most @xmath12 out of the queries that alice sends to the servers , and according to the @xmath12-privacy property of the protocol @xmath142 , the same privacy is preserved for the protocol @xmath144 as well .",
    "a new framework to utilize private information retrieval in distributed storage systems is introduced in this paper .",
    "the new scheme is based on the idea of using coding instead of the replications in the traditional pir protocols , when the storage size of each server is much less than the size of the database .",
    "we have shown that among the three main parameters in measuring the quality of @xmath0-server pir protocols _",
    "i.e. _ _ communication complexity , computation complexity , _ and _ storage overhead _ , the first two remain the same and the latter improves significantly in the asymptotic regime . in particular , for a fixed @xmath0 and a limited server size , the storage overhead becomes @xmath145 as the number of servers becomes large .",
    "the optimal storage overhead with the coded pir is also studied and the explicit value is derived for many cases .",
    "the presented constructions lead to coded pir schemes with storage overhead @xmath146 for any fixed @xmath0 , where @xmath7 is the ratio between the size of the database and the storage size of each server .",
    "hence , it will be interesting to determine whether this asymptotic behavior can be improved .",
    "another research direction is the construction of other coded schemes which are compatible with existing pir protocols , such as the ones given in sections  [ sec : array_pir ] and  [ app : alter_cons ] .",
    "the authors thank eyal kushilevitz and itzhak tamo for helpful discussions .",
    "a. beimel , y. ishai , e. kushilevitz , and j.f .",
    "raymond ,  breaking the @xmath148 barrier for information theoretic private information retrieval , \" _ proc . of the 43rd symposium on foundations of computer science _ ,",
    "vancouver , b.c .",
    ", ieee computer society , pp.261270 , 2002 .",
    "a. beimel , y. ishai , and t .",
    "malkin ,  reducing the servers computation in private information retrieval : pir with preprocessing , \" _ proc . of the 20th annual international cryptology conference lncs 1880 _ , santa barbara , ca , springer , pp.5573 , 2000 .",
    "e.kushilevitz and r.ostrovsky , `` replication is not needed : single database , computationally - private information retrieval , '' _ proc .",
    "38-th ieee symposium foundations computer science _ ( focs ) , pp.364373 , miami beach , fl . , october 1997 ."
  ],
  "abstract_text": [
    "<S> private information retrieval ( pir ) protocols allow a user to retrieve a data item from a database without revealing any information about the identity of the item being retrieved . </S>",
    "<S> specifically , in information - theoretic @xmath0-server  pir , the database is replicated among @xmath0 non - communicating servers , and each server learns nothing about the item retrieved  by the user . the cost of pir protocols is usually measured in terms of their _ communication complexity _ ,  which is the total number of bits exchanged between the user and the servers . however , another important cost parameter is the _ storage overhead _ , which is the ratio between the total number of bits stored on all the servers and the number of bits in the database . </S>",
    "<S> since single - server information - theoretic pir is impossible , the storage overhead of all  existing pir protocols is at least @xmath1 ( or @xmath0 , in the case of @xmath0-server pir ) .    in this work , we show that information - theoretic pir can be achieved with storage overhead arbitrarily close  to  the optimal value of @xmath2 , without sacrificing the communication complexity . </S>",
    "<S> specifically , we prove that _ all _ known @xmath0-server pir protocols can be efficiently emulated , while preserving both privacy and communication complexity  but  significantly reducing the storage overhead . to this end </S>",
    "<S> , we distribute the @xmath3 bits of the database among @xmath4 servers , each storing @xmath5 _ coded bits _ ( rather than replicas ) . </S>",
    "<S> notably , our coding scheme remains the same , regardless of the specific @xmath0-server pir protocol being emulated . for every fixed @xmath0 , the resulting storage overhead @xmath6 approaches @xmath2 as @xmath7  grows ; explicitly we have @xmath8 . </S>",
    "<S> moreover , in the special case @xmath9 , the storage  overhead isonly . </S>",
    "<S> in order to achieve these results , we introduce  and study a new kind of binary linear codes , called  here _ </S>",
    "<S> @xmath0-server pir codes_. we then show how such codes can be constructed from steiner systems , from one - step majority - logic decodable codes , from constant - weight codes , and from certain locally recoverable codes . </S>",
    "<S> we also establish  several bounds on the parameters of @xmath0-server pir codes , and tabulate the results for all @xmath10 and @xmath11 . </S>",
    "<S> finally , we briefly discuss extensions of our results to nonbinary alphabets , to robust pir , and to @xmath12-private pir . </S>"
  ]
}
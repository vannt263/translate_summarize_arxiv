{
  "article_text": [
    "the _ minimum eccentricity shortest path _ problem asks for a given graph @xmath0 to find a shortest path  @xmath1 such that for each other shortest path  @xmath2 , @xmath3 holds . here , the eccentricity of a set @xmath4 in @xmath5 is @xmath6 .",
    "this problem was introduced in  @xcite .",
    "it may arise in determining a `` most accessible '' speedy linear route in a network and can find applications in communication networks , transportation planning , water resource management and fluid transportation .",
    "it was also shown in  @xcite that a minimum eccentricity shortest path plays a crucial role in obtaining the best to date approximation algorithm for a minimum distortion embedding of a graph into the line .",
    "specifically , every graph  @xmath5 with a shortest path of eccentricity  @xmath7 admits an embedding  @xmath8 of @xmath5 into the line with distortion at most @xmath9 , where @xmath10 is the minimum line - distortion of @xmath5 ( see  @xcite for details ) .",
    "furthermore , if a shortest path of @xmath5 of eccentricity  @xmath7 is given in advance , then such an embedding  @xmath8 can be found in linear time .",
    "note also that every graph has a shortest path of eccentricity at most @xmath11 .",
    "those applications motivate investigation of the minimum eccentricity shortest path problem in general graphs and in particular graph classes .",
    "fast algorithms for it will imply fast approximation algorithms for the minimum line distortion problem .",
    "existence of low eccentricity shortest paths in structured graph classes will imply low approximation bounds for those classes .",
    "for example , all at - free graphs ( hence , all interval , permutation , cocomparability graphs ) enjoy a shortest path of eccentricity at most 1  @xcite , all convex bipartite graphs enjoy a shortest path of eccentricity at most 2  @xcite .    in @xcite , the minimum eccentricity shortest path problem was investigated in general graphs .",
    "it was shown that its decision version is np - complete ( even for graphs with vertex degree at most 3 ) .",
    "however , there are efficient approximation algorithms : a 2-approximation , a 3-approximation , and an 8-approximation for the problem can be computed in @xmath12 time , in @xmath13 time , and in linear time , respectively .",
    "furthermore , a shortest path of minimum eccentricity  @xmath7 in general graphs can be computed in @xmath14 time .",
    "paper  @xcite initiated also the study of the minimum eccentricity shortest path problem in special graph classes by showing that a minimum eccentricity shortest path in trees can be found in linear time .",
    "in fact , every diametral path of a tree is a minimum eccentricity shortest path .    in this paper",
    ", we design efficient algorithms for the minimum eccentricity shortest path problem in distance - hereditary graphs , in chordal graphs , in dually chordal graphs , and in more general graphs with bounded tree - length or with bounded hyperbolicity .",
    "additionally , we give a simple algorithm to compute an additive approximation for graphs with bounded tree - length and graphs with bounded hyperbolicity .",
    "note that our minimum eccentricity shortest path problem is close but different from the _ central path _ problem in graphs introduced in  @xcite .",
    "it asks for a given graph  @xmath5 to find a path  @xmath1 ( not necessarily shortest ) such that any other path of @xmath5 has eccentricity at least @xmath15 .",
    "the central path problem generalizes the hamiltonian path problem and therefore is np - hard even for chordal graphs @xcite .",
    "our problem is polynomial time solvable for chordal graphs .",
    "all graphs occurring in this paper are connected , finite , unweighted , undirected , loopless and without multiple edges . for a graph  @xmath16 ,",
    "we use @xmath17 and @xmath18 to denote the cardinality of the vertex set and the edge set of  @xmath5 . @xmath19",
    "$ ] denotes the _ induced subgraph _ of @xmath5 with the vertex set  @xmath20 .",
    "the _ length _ of a path from a vertex  @xmath21 to a vertex  @xmath22 is the number of edges in the path .",
    "the _ distance _  @xmath23 of two vertices @xmath22 and",
    "@xmath21 is the length of a shortest path connecting @xmath22 and  @xmath21 .",
    "the distance between a vertex  @xmath21 and a set  @xmath24 is defined as @xmath25 .",
    "the _ eccentricity _",
    "@xmath26 of a vertex  @xmath21 is @xmath27 . for a set  @xmath24 ,",
    "its eccentricity is @xmath28 . for a vertex pair @xmath29 ,",
    "a shortest @xmath30-path  @xmath1 has _ minimal eccentricity _",
    ", if there is no shortest @xmath30-path  @xmath2 with @xmath31 .",
    "two vertices @xmath32 and @xmath33 are called _ mutually furthest _ if @xmath34 .",
    "a vertex  @xmath22 is _ @xmath35-dominated _ by a vertex  @xmath21 ( by a set  @xmath36 ) , if @xmath37 ( @xmath38 , respectively ) .",
    "the _ diameter _ of a graph  @xmath5 is @xmath39 .",
    "the diameter  @xmath40 of a set  @xmath24 is defined as @xmath41 .",
    "a pair of vertices @xmath42 of @xmath5 is called a _",
    "diametral pair _ if @xmath43 . in this case , every shortest path connecting @xmath32 and  @xmath33 is called a _ diametral path_.    for a vertex  @xmath44 , @xmath45 is called the _ open neighborhood _ , and @xmath46 = n(v ) \\cup \\ { v \\}$ ] the _ closed neighborhood _ of @xmath21 .",
    "@xmath47 = \\ { u \\in v \\mid d_g(u , v ) \\leq r \\}$ ] denotes the _ disk _ of radius  @xmath7 around vertex  @xmath21 .",
    "additionally , @xmath48 denotes the vertices with distance  @xmath7 from  @xmath21 . for two vertices @xmath22 and  @xmath21 , @xmath49 is the _ interval _ between @xmath22 and  @xmath21 .",
    "the set  @xmath50 is called a _ slice _ of the interval from @xmath22 to  @xmath21 . for any set  @xmath24 and a vertex  @xmath21",
    ", @xmath51 denotes the _ projection _ of @xmath21 on  @xmath20 .    a _ chord _ in a path",
    "is an edge connecting two non - consecutive vertices of the path .",
    "a set of vertices  @xmath20 is a _ clique _",
    "if all vertices in @xmath20 are pairwise adjacent .",
    "a graph is _ chordal _ if every cycle with at least four vertices has a chord .",
    "a graph is _ distance - hereditary _ if the distances in any connected induced subgraph are the same as they are in the original graph .",
    "a graph is _ dually chordal _ if it is the intersection graph of maximal cliques of a chordal graph . for more definitions of these classes and relations between them",
    "see  @xcite .",
    "_ distance - hereditary graphs _ can be defined as graphs where each chordless path is a shortest path  @xcite .",
    "several interesting characterizations of distance - hereditary graphs in terms of metric and neighborhood properties , and forbidden configurations were provided by bandelt and mulder  @xcite , and by datri and moscarini  @xcite . the following proposition lists the basic information on distance - hereditary graphs that is needed in what follows .",
    "[ @xcite ] [ prop : dhg ] for a graph  @xmath5 the following conditions are equivalent :    1 .",
    "@xmath5 is distance - hereditary ; 2 .   the house , domino , gem ( see fig .  [",
    "fig : dhg ] ) and the cycles  @xmath52 of length  @xmath53 are not induced subgraphs of @xmath5 ; 3 .   for an arbitrary vertex  @xmath32 of @xmath5 and every pair of vertices @xmath54 , that are in the same connected component of the graph @xmath55 $ ] , we have @xmath56 .",
    "( 4-point condition ) for any four vertices @xmath57 of @xmath5 at least two of the following distance sums are equal : @xmath58 ; @xmath59 ; @xmath60 . if the smaller sums are equal , then the largest one exceeds the smaller ones at most by 2 .",
    "[ htb ]       as a consequence of statement ( 3 ) of proposition  [ prop : dhg ] we get .",
    "[ cor : pr - size ] let @xmath61 be a shortest path in a distance - hereditary graph  @xmath5 connecting vertices @xmath62 and  @xmath63 , and @xmath64 be an arbitrary vertex of  @xmath5",
    ". let @xmath65 be a vertex of @xmath66 that is closest to @xmath62 , and let @xmath67 be a vertex of @xmath68 that is closest to  @xmath63",
    ". then @xmath69 and there must be a vertex @xmath70 in @xmath5 adjacent to both @xmath65 and  @xmath67 and at distance @xmath71 from  @xmath64 .    as a consequence of statement ( 4 ) of proposition [ prop : dhg ] we get .",
    "[ cor : two - paths ] let @xmath72 be arbitrary vertices of a distance - hereditary graph  @xmath5 with @xmath73 , @xmath74 , and @xmath75 , then @xmath76 .",
    "that is , if two shortest paths share ends of length at least  @xmath77 , then their union is a shortest path .",
    "consider distance sums @xmath78 , @xmath79 and @xmath80 . since @xmath81 , we have @xmath82",
    ". then , either @xmath83 or @xmath84 and @xmath85 . if the latter is true , then @xmath86 and a contradiction arises .",
    "thus , @xmath83 and we get @xmath76 .",
    "[ lm : dhg ] let @xmath42 be a diametral pair of vertices of a distance - hereditary graph  @xmath5 , and @xmath35 be the minimum eccentricity of a shortest path in @xmath5 . if for some shortest path @xmath87 , connecting @xmath32 and @xmath33 , @xmath88 holds , then @xmath89 .",
    "furthermore , if @xmath90 then there is a shortest path @xmath91 between @xmath32 and  @xmath33 with @xmath92 .    consider a vertex @xmath21 with @xmath93 .",
    "let @xmath94 be a vertex of @xmath95 closest to @xmath32 , and @xmath96 be a vertex of @xmath95 closest to @xmath33 . by corollary  [ cor : pr - size ] ,",
    "@xmath97 and there must be a vertex @xmath98 in @xmath5 adjacent to both @xmath94 and @xmath96 and at distance @xmath99 from @xmath21 .",
    "let @xmath100 and @xmath101 be subpaths of @xmath1 connecting vertices @xmath102 and vertices @xmath103 , respectively .",
    "consider also an arbitrary shortest path @xmath104 connecting @xmath21 and @xmath98 in @xmath5 . by choices of @xmath94 and @xmath96 , no chords in @xmath5",
    "exist in paths @xmath105 and @xmath106 .",
    "hence , those paths are shortest in @xmath5 .",
    "since @xmath42 is a diametral pair , we have @xmath107",
    ". that is , @xmath108 . similarly , @xmath109 . combining both inequalities and taking into account that @xmath110 , we get @xmath111",
    ". furthermore , we have @xmath112 if @xmath113 and @xmath114 if @xmath115 . also , if @xmath90 then @xmath116 , @xmath117 , @xmath118 and @xmath119 .",
    "now assume that @xmath90 .",
    "consider sets @xmath120 and @xmath121 .",
    "let @xmath122 be a vertex of @xmath20 that @xmath35-dominates the maximum number of vertices in @xmath123 .",
    "consider a shortest path @xmath91 connecting vertices @xmath32 and @xmath33 and passing through vertex @xmath124 .",
    "we will show that @xmath92 .",
    "let @xmath94 ( @xmath96 ) be the neighbor of @xmath124 in subpath of @xmath91 connecting @xmath124 with @xmath32 ( with @xmath33 , respectively ) .",
    "assume there is a vertex @xmath21 in @xmath5 such that @xmath125 .",
    "as in the first part of the proof , one can show that @xmath126 , i.e.ifnextchar ,  , @xmath127 and @xmath128 .",
    "furthermore , @xmath119 , i.e.ifnextchar ,  , @xmath129 .",
    "also , vertex @xmath98 , that is adjacent to @xmath94 , @xmath96 and at distance @xmath35 from @xmath21 , must belong to @xmath20 .",
    "since @xmath130 but @xmath117 , by choice of @xmath124 , there must exist a vertex @xmath131 such that @xmath132 and @xmath133 . since @xmath134 , @xmath135 must equal @xmath35 and both @xmath136 and @xmath137 must equal @xmath138 .    since @xmath139 and @xmath140 , we must have a chord between vertices of a shortest path @xmath141 connecting @xmath21 with @xmath98 and vertices of a shortest path @xmath142 connecting @xmath22 with @xmath124 .",
    "if no chords exist or only chord @xmath143 is present , then @xmath144 , contradicting with @xmath145 .",
    "so , consider a chord @xmath146 with @xmath147 , @xmath148 , @xmath149 , and @xmath150 is minimum .",
    "we know that @xmath151 must hold since @xmath152 and @xmath153 .",
    "to avoid induced cycles of length @xmath53 , @xmath154 must hold .",
    "but then , vertices @xmath155 form either an induced cycle  @xmath156 , when @xmath124 and @xmath98 are not adjacent , or a house , otherwise . note that , by distance requirements , edges @xmath157 , @xmath158 , @xmath159 , and @xmath160 are not possible .",
    "contradictions obtained show that such a vertex @xmath21 with @xmath125 is not possible , i.e.ifnextchar ,  , @xmath92 .",
    "[ lm : mf ] in every distance - hereditary graph there is a minimum eccentricity shortest path @xmath161 where @xmath62 and  @xmath63 are two mutually furthest vertices .",
    "let @xmath35 be the minimum eccentricity of a shortest path in @xmath5 .",
    "let @xmath162 be a shortest path of @xmath5 of eccentricity  @xmath35 with maximum  @xmath163 , that is , among all shortest paths with eccentricity  @xmath35 , @xmath2 is a longest one .",
    "assume , without loss of generality , that @xmath63 is not a vertex most distant from @xmath62 .",
    "let @xmath164 be the smallest index such that subpath @xmath165 of @xmath2 has also the eccentricity  @xmath35 .",
    "by choice of @xmath166 , there must exist a vertex @xmath21 in @xmath5 which is @xmath35-dominated only by vertex @xmath167 of @xmath168 , i.e.ifnextchar ,  , @xmath169 and @xmath170 .",
    "let @xmath171 be an arbitrary shortest path of @xmath5 connecting @xmath21 with @xmath167 .",
    "by choice of @xmath166 , no vertex of @xmath172 is adjacent to a vertex of @xmath173 .",
    "hence , path obtained by concatenating @xmath168 with @xmath174 is chordless and , therefore , shortest in @xmath5 , and has eccentricity  @xmath35 , too .",
    "note that @xmath21 is now a most distant vertex from @xmath62 , i.e.ifnextchar ,  , @xmath175 .",
    "since @xmath176 , a contradiction with maximality of @xmath163 arises .",
    "the main result of this section is the following .",
    "[ th : dhg ] let @xmath42 be a diametral pair of vertices of a distance - hereditary graph  @xmath5 , and @xmath35 be the minimum eccentricity of a shortest path in @xmath5 .",
    "then , there is a shortest path  @xmath1 between @xmath32 and  @xmath33 with @xmath177 .",
    "we may assume that for some shortest path @xmath178 connecting @xmath32 and @xmath33 , @xmath179 holds ( otherwise , there is nothing to prove ) .",
    "then , by lemma  [ lm : dhg ] , we have @xmath180 .    let @xmath162 be a shortest path of @xmath5 of eccentricity @xmath35 such that @xmath62 and @xmath63 are two mutually furthest vertices ( see lemma  [ lm : mf ] ) .",
    "consider projections of @xmath32 and @xmath33 to @xmath2 .",
    "we distinguish between three cases : @xmath181 is completely on the left of @xmath182 in @xmath2 ; @xmath181 and @xmath182 have a common vertex @xmath64 ; and the remaining case ( see corollary  [ cor : pr - size ] ) when @xmath183 and @xmath184 for some index @xmath166 .",
    "_ case 1 : @xmath181 is completely on the left of @xmath182 in @xmath2 .",
    "_    let @xmath94 be a vertex of @xmath181 closest to @xmath63 and @xmath96 a vertex of @xmath182 closest to @xmath62 .",
    "consider an arbitrary shortest path @xmath100 of @xmath5 connecting vertices @xmath32 and @xmath94 , an arbitrary shortest path @xmath101 of @xmath5 connecting vertices @xmath96 and @xmath33 , and a subpath @xmath185 of @xmath186 between vertices @xmath94 and @xmath96 .",
    "we claim that the path @xmath1 of @xmath5 obtained by concatenating @xmath100 with @xmath185 and then with @xmath101 is a shortest path of eccentricity  @xmath35 .",
    "indeed , by choice of @xmath94 , no edge connecting a vertex in @xmath187 with a vertex in @xmath188 can exist in @xmath5 .",
    "similarly , no edge connecting a vertex in @xmath189 with a vertex in @xmath190 can exist in @xmath5 .",
    "since we also have @xmath180 , @xmath191 and @xmath192 , no edge connecting a vertex in @xmath189 with a vertex in @xmath187 can exist in @xmath5 .",
    "hence , chordless path @xmath193 is a shortest path of @xmath5 .",
    "consider now an arbitrary vertex @xmath21 of @xmath5 .",
    "we want to show that @xmath194 . since @xmath195 , @xmath196 .",
    "consider the projection of @xmath21 to @xmath2 .",
    "we may assume that @xmath197 and , without loss of generality , that vertices of @xmath198 are closer to @xmath62 than vertex @xmath94 .",
    "let @xmath98 be a vertex of @xmath198 closest to @xmath94 .",
    "as before , by choices of @xmath98 and @xmath96 , paths @xmath199 and @xmath200 are chordless and , therefore , are shortest paths of @xmath5 ( here @xmath141 is an arbitrary shortest path of @xmath5 connecting @xmath21 with @xmath98 ) . since @xmath201 , by corollary  [ cor : two - paths ] , @xmath202 .",
    "hence , from @xmath203 , @xmath204 and @xmath205 , we obtain @xmath206 .",
    "_ case 2 : @xmath181 and @xmath182 have a common vertex @xmath64 .",
    "_    in this case , we have @xmath207 . earlier we assumed also that @xmath180",
    "hence , @xmath208 and the statement of the theorem follows from lemma  [ lm : dhg ] .",
    "_ case 3 : remaining case when @xmath183 and @xmath184 for some index @xmath166 . _    in this case",
    ", we have @xmath209 . by lemma  [ lm : dhg ]",
    ", we can assume that @xmath210 , i.e.ifnextchar ,  , @xmath211 .",
    "let @xmath212 and @xmath213 be subpaths of @xmath2 connecting vertices @xmath62 and @xmath214 and vertices @xmath63 and @xmath215 , respectively .",
    "pick an arbitrary shortest path @xmath216 connecting @xmath33 with @xmath217 .",
    "since no chords are possible between @xmath218 and @xmath219 and between @xmath220 and @xmath219 , we have @xmath221 and @xmath222 . inequalities @xmath223 and @xmath224 imply @xmath225 and @xmath226 . if both @xmath227 and @xmath228 equal @xmath35 , then @xmath229 contradicting with @xmath230 .",
    "hence , we may assume , without loss of generality , that @xmath231 .",
    "we will show that shortest path @xmath232 has eccentricity @xmath35 ( here , @xmath233 is an arbitrary shortest path of @xmath5 connecting @xmath32 with @xmath215 ) .",
    "consider a vertex @xmath21 in @xmath5 and assume that @xmath198 is strictly contained in @xmath213 .",
    "denote by @xmath98 the vertex of @xmath198 that is closest to @xmath62 .",
    "let @xmath141 be an arbitrary shortest path connecting @xmath21 and @xmath98 .",
    "as before , @xmath234 is a chordless path and therefore @xmath235 . since @xmath63 is a most distant vertex from @xmath62 , @xmath236 .",
    "hence , @xmath237 , i.e.ifnextchar ,  , @xmath238 .",
    "consider a vertex @xmath21 in @xmath5 and assume now that @xmath198 is strictly contained in @xmath212 .",
    "denote by @xmath98 the vertex of @xmath198 that is closest to @xmath63 .",
    "let @xmath141 be an arbitrary shortest path connecting @xmath21 and @xmath98 .",
    "again , @xmath239 is a chordless path and therefore @xmath240 . since @xmath62 is a most distant vertex from @xmath63 , @xmath241 .",
    "hence , @xmath242 , i.e.ifnextchar ,  , @xmath243 .",
    "thus , all vertices of @xmath5 are @xmath35-dominated by @xmath244 .",
    "it is known  @xcite that a diametral pair of a distance - hereditary graph can be found in linear time . hence , according to theorem  [ th : dhg ] , to find a shortest path of minimum eccentricity in a distance - hereditary graph in linear time , one needs to efficiently extract a best eccentricity shortest path for a given pair of end - vertices . in what follows ,",
    "we demonstrate that , for a distance - hereditary graph , such an extraction can be done in linear time as well",
    ".    we will need few auxiliary lemmas .",
    "[ lem : dhggatevertex ] in a distance - hereditary graph  @xmath5 , for each pair of vertices @xmath62 and @xmath63 , if @xmath32 is on a shortest path from @xmath21 to @xmath245 and @xmath246 , then @xmath247 .",
    "let @xmath248 and  @xmath163 be two vertices in @xmath249 and @xmath250 . by statement  ( 3 ) of proposition",
    "[ prop : dhg ] , @xmath251 .",
    "thus , each vertex @xmath32 on a shortest path from @xmath21 to @xmath249 with @xmath246 ( which is in @xmath252 by definition ) is adjacent to all vertices in @xmath249 , i.e.ifnextchar ,  , @xmath247 .",
    "[ lem : dhgslicejoin ] in a distance - hereditary graph  @xmath5 , let @xmath253 and @xmath254 be two consecutive slices of an interval @xmath255 .",
    "each vertex in @xmath253 is adjacent to each vertex in @xmath254 .",
    "consider statement  ( 3 ) of proposition  [ prop : dhg ] from perspective of  @xmath63 .",
    "thus , @xmath256 for each vertex  @xmath257 . additionally , from perspective of @xmath62 , @xmath258 for each vertex  @xmath259 .",
    "[ lem : dhgprojsliceinter ] in a distance - hereditary graph  @xmath5 , if a projection @xmath245 intersects two slices of an interval @xmath255 , each shortest @xmath30-path intersects @xmath249 .    because of lemma  [ lem : dhggatevertex ] , there is a vertex @xmath32 with @xmath260 and @xmath261 .",
    "thus , @xmath249 intersects at most two slices of interval @xmath255 and those slices have to be consecutive , otherwise @xmath32 would be a part of the interval .",
    "let @xmath253 and @xmath254 be these slices .",
    "note that @xmath262 .",
    "thus , by statement  ( 3 ) of proposition  [ prop : dhg ] , @xmath263 for each @xmath264 . therefore , @xmath265 , i.e.ifnextchar ,  , each shortest path from @xmath62 to  @xmath63 intersects @xmath249 .    from the lemmas above",
    ", we can conclude that , for determining a shortest @xmath30-path with minimal eccentricity , a vertex  @xmath21 is only relevant if @xmath266 and the projection of @xmath21 on the interval @xmath255 only intersects one slice .",
    "algorithm  [ algo : mineccdisthere ] uses this .",
    "[ htb ]    compute the sets @xmath267 for @xmath268 .",
    "each vertex @xmath269 gets a pointer  @xmath270 initialised with @xmath271 if @xmath272 , and @xmath273 otherwise .",
    "set @xmath274 .",
    "[ lm : path - pair ] for a distance - hereditary graph  @xmath5 and an arbitrary vertex pair  @xmath29 , algorithm  [ algo : mineccdisthere ] computes a shortest @xmath30-path with minimal eccentricity in linear time .",
    "the loop in line  [ line : dhgfindgateloop ] determines for each vertex  @xmath21 outside of the interval  @xmath255 a _ gate vertex _",
    "@xmath270 such that @xmath275 and @xmath276 ( see lemma  [ lem : dhggatevertex ] ) . from lemma  [",
    "lem : dhgprojsliceinter ] and lemma  [ lem : dhgslicejoin ] , it follows that for a vertex  @xmath21 which is not in @xmath277 or its projection to @xmath255 is intersecting two slices of @xmath255 , @xmath278 for every shortest path @xmath161 between @xmath62 and @xmath63",
    ". therefore , line  [ line : dhgflagrelevant ] only marks @xmath270 if @xmath279 and its projection @xmath280 intersects only one slice . because only one slice is intersected and each vertex in a slice is adjacent to all vertices in the consecutive slice ( see lemma  [ lem : dhgslicejoin ] ) , in each slice the vertex of an optimal ( of minimum eccentricity ) path @xmath1 can be selected independently from the preceding vertex .",
    "if a vertex  @xmath32 of a slice  @xmath253 has the maximum number of _ relevant _ vertices in @xmath281 , then @xmath32 is good to put in @xmath1 . indeed ,",
    "if @xmath32 dominates all relevant vertices adjacent to vertices of @xmath253 , then @xmath32 is a perfect choice to put in @xmath1 .",
    "else , any vertex @xmath33 of a slice @xmath253 is a good vertex to put in @xmath1 .",
    "hence , @xmath1 is optimal if the number of _ relevant _ vertices adjacent to @xmath1 is maximal .",
    "thus , the path selected in line  [ line : dhgselectploop ] to  line  [ line : dhgselectpaddv ] is optimal .    running algorithm  [ algo : mineccdisthere ] for a diametral pair of vertices of a distance - hereditary graph  @xmath5 , by theorem  [ th : dhg ] , we get a shortest path of @xmath5 with minimum eccentricity .",
    "thus , we have proven the following result .",
    "[ tm : opt - path ] a shortest path with minimum eccentricity of a distance - hereditary graph @xmath0 can be computed in @xmath282 total time .",
    "in a graph  @xmath5 , consider a shortest path  @xmath1 which starts in a vertex  @xmath62 .",
    "each vertex  @xmath32 has a projection  @xmath283 . in case of a tree",
    "this is a single vertex .",
    "however , in general , @xmath284 can contain multiple vertices and does not necessarily induce a connected subgraph . in this case",
    ", there are two vertices @xmath22 and  @xmath64 in @xmath284 such that all vertices  @xmath21 in the subpath  @xmath2 between @xmath22 and  @xmath64 are not in  @xmath284 .",
    "formally , @xmath285 , @xmath286 , and @xmath287 .",
    "now , assume the cardinality of @xmath2 is at most  @xmath288 , i.e.ifnextchar ,  , @xmath289 for each @xmath1 , @xmath32 , @xmath22 and  @xmath64 .",
    "we refer to @xmath288 as the _ projection gap _ of @xmath5 .",
    "[ projection gap ] in a graph  @xmath5 , let @xmath290 be a shortest path with @xmath291 .",
    "the _ projection gap _ of @xmath5 is @xmath288 , @xmath292 for short , if , for every vertex  @xmath32 of  @xmath5 and every two vertices @xmath293 , @xmath294 implies that there is a vertex  @xmath295 with @xmath296 .",
    "based on this definition , we can make the following observation .",
    "[ lem : valprop ] in a graph @xmath5 with @xmath292 , let @xmath1 be a shortest path starting in  @xmath62 , @xmath2 be a subpath of  @xmath1 , @xmath297 , @xmath22 and  @xmath64 be two vertices in @xmath298 such that @xmath299 , and @xmath32 be an arbitrary vertex in  @xmath5 . if @xmath300 , then @xmath301 .",
    "assume that @xmath300 and @xmath302 .",
    "without loss of generality , let @xmath303 for all @xmath304 with @xmath305 .",
    "let @xmath178 be the subpath of @xmath1 from @xmath22 to  @xmath64 .",
    "note that @xmath306 and @xmath307 .",
    "thus , @xmath308 .",
    "this contradicts with @xmath292 .",
    "informally , lemma  [ lem : valprop ] says that , when exploring a shortest path  @xmath1 , if the distance to a vertex  @xmath32 did not decrease during the last @xmath309 vertices of  @xmath1 , it will not decrease when exploring the remaining subpath . based on this",
    ", we will show that a minimum eccentricity shortest path can be found in polynomial time if @xmath310 is bounded by some constant .",
    "for the rest of this section , we assume we are given a graph  @xmath5 with @xmath292 containing a vertex  @xmath62 . we will need the following notions and notations :    * @xmath311 and  @xmath312 are subpaths of length  @xmath288 of some shortest paths starting in  @xmath62 .",
    "they do not need to be subpath of the same shortest path .",
    "let @xmath313 and @xmath314 be the two vertices such that @xmath315 and @xmath316 . without loss of generality ,",
    "let @xmath317 .",
    "we say , @xmath311 is _ compatible _ with @xmath312 ( with respect to  @xmath62 ) if @xmath318 , @xmath217 is adjacent to  @xmath319 , and @xmath320 .",
    "let @xmath321 denote the set of subpaths compatible with  @xmath312 .",
    "* @xmath322 is the set of vertices  @xmath64 such that there is a shortest path from @xmath62 to  @xmath64 containing @xmath312 ( or @xmath323 ) .",
    "* @xmath324 are the vertices that are on a shortest path from @xmath62 to  @xmath312 ( or in  @xmath312 ) .",
    "* @xmath325 is the set of vertices  @xmath32 which are closer to  @xmath312 than to all other vertices in  @xmath326 .",
    "thus , given a shortest path  @xmath1 containing  @xmath312 and starting in  @xmath62 , expanding @xmath1 beyond @xmath312 will not decrease the distance from @xmath32 to  @xmath1 .",
    "note that @xmath327 and @xmath328 .",
    "[ lem : kvaleyvert ] for each vertex  @xmath32 in  @xmath5 , @xmath329 or @xmath330 .",
    "assume , @xmath331 and @xmath332 .",
    "then , there is a vertex  @xmath333 and a vertex  @xmath334 with @xmath335 and @xmath336 . because @xmath337 , @xmath312 , and @xmath338 are on a shortest path starting in  @xmath62 and @xmath339 , this contradicts lemma  [ lem : valprop ] .",
    "[ lem : kvaleyvertsubset ] if @xmath311 is compatible with @xmath312 , then @xmath340 .",
    "assume that @xmath341 , i.e.ifnextchar ,  , there is a vertex  @xmath342 .",
    "then , @xmath332 .",
    "thus , by lemma  [ lem : kvaleyvert ] , @xmath329 . because @xmath343 , @xmath344 . since @xmath345 , @xmath346 .",
    "also , because @xmath347 , @xmath332 .",
    "thus , @xmath348 . on the other hand , because @xmath349 , @xmath350 , and a contradiction arises .    for a subpath @xmath312 ,",
    "let @xmath351 denote the set of shortest paths  @xmath1 which start in  @xmath62 such that @xmath352 .",
    "then , we define @xmath353 as follows : @xmath354 consider a subpath @xmath312 for which @xmath355 , i.e.ifnextchar ,  , a shortest path containing @xmath312 can not be extended any more . then , @xmath356 .",
    "therefore , for any path @xmath357 , @xmath358 .",
    "[ lem : valepsilon ] if @xmath321 is not empty , then @xmath359.\\ ] ]    by definition , @xmath360 let @xmath311 be compatible with  @xmath312 . because , by lemma  [ lem : kvaleyvertsubset ] , @xmath340 , we can partition @xmath361 into @xmath362 and @xmath363 .",
    "thus , @xmath364 @xmath365.\\ ] ] note that we changed the definition of  @xmath1 from @xmath357 to @xmath366 , i.e.ifnextchar ,  , @xmath1 may not contain the last vertex of @xmath312 any more .    if @xmath367 , then @xmath368 .",
    "thus , by lemma  [ lem : kvaleyvert ] , @xmath369 . note that , by definition of  @xmath1 , @xmath370 .",
    "therefore , @xmath371 and @xmath372 for simplicity , we define @xmath373 note that @xmath374 does not depend on @xmath1 . therefore , because @xmath375 = \\max [ c , \\min_{u } f(u ) ] $ ] , @xmath376.\\ ] ] if @xmath345 , then @xmath377 .",
    "therefore , @xmath378 thus , @xmath359.\\ ] ]    based on lemma  [ lem : valepsilon ] , algorithm  [ algo : valmesp ] computes a shortest path starting in  @xmath62 with minimal eccentricity .",
    "the algorithm has two parts .",
    "first , it computes the pairwise distance of all vertices and @xmath379 for each vertex pair @xmath32 and  @xmath21 where , similarly to @xmath326 , @xmath380 .",
    "this allows to easily determine if a vertex  @xmath32 is in  @xmath361 .",
    "second , it computes @xmath353 for each subpath  @xmath312 . for this , the algorithm uses dynamic programming .",
    "after calculating @xmath381 for all subpaths with distance  @xmath166 to  @xmath62 , the algorithm uses lemma  [ lem : valepsilon ] to calculate @xmath353 for all subpaths  @xmath312 which @xmath382 is compatible with .",
    "! ]    determine the pairwise distances of all vertices .",
    "[ line : pairwdistance ]    find a subpath  @xmath312 such that a shortest path containing @xmath312 can not be extended any more and for which @xmath353 is minimal .",
    "[ line : findminqj ]    construct a path  @xmath1 from @xmath312 to @xmath62 using the @xmath383-pointers and output it .",
    "[ line : constructp ]    for a given graph  @xmath5 with @xmath292 and a vertex  @xmath62 , algorithm  [ algo : valmesp ] computes a shortest path starting in  @xmath62 with minimal eccentricity .",
    "it runs in @xmath384 time if @xmath385 , in @xmath386 time if @xmath387 , and in @xmath13 time if @xmath388 .",
    "[ correctness ] the algorithm has two parts . the first part ( line  [ line : pairwdistance ] to line  [ line : distrv ] ) is a preprocessing which computes @xmath379 for each vertex pair @xmath32 and  @xmath21 .",
    "the second part computes @xmath353 which is then used to determine a path with minimal eccentricity .",
    "for the first part , without loss of generality , let @xmath389 , @xmath390 , and let @xmath32 be an arbitrary vertex . by definition of @xmath391",
    ", @xmath392 implies @xmath393 , i.e.ifnextchar ,  , @xmath394 .",
    "therefore , @xmath379 is correct for all vertices  @xmath21 with @xmath392 after line  [ line : defaultr ] . by induction , assume that @xmath395 is correct for all vertices  @xmath396 .",
    "because @xmath397 , @xmath398",
    ". therefore , line  [ line : distrv ] correctly computes  @xmath379 .",
    "the second part of algorithm  [ algo : valmesp ] iterates over all subpaths  @xmath312 in increasing distance to  @xmath62 .",
    "line  [ line : computevsoj ] checks if a given vertex  @xmath32 is in @xmath361 . by definition , @xmath399 where @xmath400 is the vertex in @xmath312 with the largest distance to  @xmath62",
    "thus , @xmath401 . by definition of @xmath402 , @xmath403 if and only if @xmath330",
    ". therefore , @xmath403 if and only if @xmath404 , i.e.ifnextchar ,  , line  [ line : computevsoj ] computes @xmath361 correctly .",
    "recall the definition of @xmath353 : @xmath354 if @xmath405 , @xmath406 .",
    "therefore , @xmath407 as computed in line  [ line : compstartepsilon ] . note that there is no subpath  @xmath382 which is compatible with @xmath312 , if @xmath405 .",
    "therefore , the loop starting in line  [ line : qiloop ] is skipped for these  @xmath312 .",
    "thus , the algorithm correctly computes @xmath353 , if @xmath405 .    by induction , assume that @xmath381 is correct for each @xmath408 .",
    "thus , lemma  [ lem : valepsilon ] can be used to compute @xmath353 .",
    "this is done in the loop starting in line  [ line : qiloop ] .",
    "therefore , at the beginning of line  [ line : findminqj ] , @xmath353 is computed correctly for each subpath  @xmath312 .",
    "recall , if @xmath409 and @xmath355 , then @xmath356 and , therefore , @xmath358 .",
    "thus , @xmath355 implies that @xmath353 is the minimal eccentricity of all shortest paths starting in  @xmath62 and containing  @xmath312 .",
    "therefore , if @xmath312 is picked by line  [ line : findminqj ] , then @xmath353 is the minimal eccentricity of all shortest paths starting in  @xmath62 .",
    "[ complexity ] first , we will analyse line  [ line : pairwdistance ] to line  [ line : distrv ] .",
    "line  [ line : pairwdistance ] runs in @xmath13 time .",
    "this allows to access the distance between two vertices in constant time .",
    "thus , the total running time for line  [ line : defaultr ] is  @xmath410 .",
    "because line  [ line : distrv ] is called at most once for each vertex  @xmath32 and edge  @xmath411 , implementing line  [ line : comprsstart ] to line  [ line : distrv ] can be done in @xmath13 time .    for the second part of the algorithm ( starting in line  [",
    "line : qjloop ] ) , if @xmath385 , let all subpaths be stored in a trie as follows : there are @xmath309 layers of internal nodes .",
    "each internal node is an array of size  @xmath412 ( one entry for each vertex ) and each entry points to an internal node of the next layer representing @xmath412  subtrees .",
    "this requires @xmath413 memory .",
    "leafs are objects representing a subpath .    if @xmath387 , a subpath is a single edge , and",
    ", if @xmath388 , a subpath is a single vertex .",
    "thus , no extra data structure is needed for these cases . in all three cases ,",
    "a subpath can be accessed in @xmath414 time .",
    "next , we analyse the runtime of line  [ line : xqjloop ] to line  [ line : qjepsiloninf ] for a single subpath  @xmath312 .",
    "accessing @xmath312 can be done in @xmath414 time .",
    "line  [ line : computevsoj ] requires at most @xmath414 time for a single call and is called at most @xmath410 times .",
    "line  [ line : compstartepsilon ] requires @xmath415 time and line  [ line : qjepsiloninf ] runs in constant time .",
    "therefore , for a given subpath , line  [ line : xqjloop ] to line  [ line : qjepsiloninf ] require @xmath416 time .    for line  [ line : compepsilonprime ] to line  [ line : setp ] , consider a given pair of compatible subpaths @xmath382 and  @xmath312 . accessing both subpaths",
    "can be done in @xmath414 time . assuming the vertices in @xmath417 and  @xmath361 are sorted and stored with their distance to @xmath382 and  @xmath312 , line  [ line : compepsilonprime ] requires at most @xmath410 time .",
    "note that @xmath382 and @xmath312 intersect in @xmath418 vertices .",
    "thus , @xmath419 where @xmath167 is the vertex in @xmath382 closest to  @xmath62 . line  [ line : comareepsilon ] and line  [ line : setp ] run in constant time . therefore",
    ", for a given pair of compatible subpaths , line  [ line : compepsilonprime ] to line  [ line : setp ] require @xmath410 time .",
    "let @xmath420 be the number of subpaths and @xmath421 be the number of pairs of compatible subpaths .",
    "then , the overall runtime for line  [ line : qjloop ] to line  [ line : setp ] is @xmath422 time , @xmath423 time for line  [ line : findminqj ] , and @xmath410 time for line  [ line : constructp ] .",
    "together with the first part of the algorithm , the total runtime of algorithm  [ algo : valmesp ] is @xmath424 .",
    "because a subpath contains @xmath309 vertices , there are up to @xmath413 subpaths and up to @xmath425 compatible pairs if @xmath385 , i.e.ifnextchar ,  , @xmath426 and @xmath427 .",
    "therefore , if @xmath385 , algorithm  [ algo : valmesp ] runs in @xmath428 time .    if @xmath387 , a subpath is a single edge and there are at most @xmath429 compatible pairs of subpaths , i.e.ifnextchar ,  , @xmath430 and @xmath431 . for the case",
    "when @xmath388 , a subpath is a single vertex ( @xmath432 ) and a pair of compatible subpaths is an edge ( @xmath433 ) .",
    "therefore , algorithm  [ algo : valmesp ] runs in @xmath386 time if @xmath387 , and in @xmath13 time if @xmath388 .    note that algorithm  [ algo : valmesp ] computes a shortest path starting in a given vertex  @xmath62 .",
    "thus , a shortest path with minimum eccentricity among all shortest paths in @xmath5 can be determined by running algorithm  [ algo : valmesp ] for all start vertices  @xmath62 , resulting in the following :    for a given graph  @xmath5 with @xmath292 , a minimum eccentricity shortest path can be found in @xmath434 time if @xmath385 , in @xmath435 time if @xmath387 , and @xmath386 time if @xmath388 .",
    "above , we have shown that a minimum eccentricity shortest path can be found in polynomial time if the projection gap is bounded by a constant . in this subsection",
    ", we will determine the projection gap for some graph classes .",
    "the class of chordal graphs is a well known class which can be recognised in linear time  @xcite . due to the strong tree structure of chordal graphs ,",
    "they have the following property known as @xmath436-convexity :    [ @xcite ] [ lem : chordalmconvex ] let @xmath5 be a chordal graph .",
    "if , for two distinct vertices  @xmath437 in a disk  @xmath438 $ ] , there is a path  @xmath1 connecting them with @xmath439 = \\ { u , v \\}$ ] , then @xmath22 and  @xmath21 are adjacent .    if @xmath5 is a chordal graph , then @xmath440 .",
    "assume @xmath441 .",
    "then , there is a shortest path  @xmath442 and a vertex  @xmath32 with @xmath443 and @xmath444 .",
    "by lemma  [ lem : chordalmconvex ] , @xmath22 and @xmath64 are adjacent .",
    "this contradicts with @xmath444 .    for chordal graphs , a minimum eccentricity",
    "shortest path can be found in @xmath386 time .",
    "dually chordal graphs where introduced in  @xcite .",
    "they are closely related to chordal graphs .    if @xmath5 is a dually chordal graph , then @xmath445 .",
    "assume there is a shortest path  @xmath446 and a vertex  @xmath32 with @xmath447 . to show that @xmath445",
    ", we will show that @xmath448 implies there is a vertex  @xmath449 with @xmath450 .",
    "consider a family of disks @xmath451 , n[v_{1 } ] , \\ldots , n[v_{i } ] , n[w ] , n^r[x ]   \\big \\}$ ] where @xmath452 .",
    "let @xmath453 be the intersection graph of @xmath454 , @xmath65 be the vertex in  @xmath453 representing @xmath455 $ ] , @xmath456 representing @xmath457 $ ] ( for @xmath450 ) , @xmath124 representing @xmath458 $ ] , and @xmath459 representing  @xmath438 $ ] . because the intersection graph of disks of a dually chordal graph is chordal  @xcite",
    ", @xmath453 is chordal , too .",
    "@xmath453 contains the edges @xmath460 and  @xmath461 , @xmath462 , @xmath463 , and @xmath464 for all @xmath465 .",
    "note that , if @xmath466 , @xmath65 and  @xmath124 are not adjacent in  @xmath453 .",
    "however , the path @xmath467 connects @xmath65 and  @xmath124 .",
    "therefore , because @xmath453 is chordal and by lemma  [ lem : chordalmconvex ] , there is a @xmath35 with @xmath450 such that @xmath459 is adjacent to  @xmath456 in  @xmath453 .",
    "thus , @xmath468 , i.e.ifnextchar ,  , @xmath449 .    for dually chordal graphs , a minimum eccentricity shortest path can be found in @xmath435 time .      as defined by robertson and seymour  @xcite , a _ tree - decomposition _ of a graph",
    "@xmath16 is a tree @xmath469 with the vertex set  @xmath470 where each vertex of @xmath469 , called bag , is a subset of  @xmath471 such that : ( i )  @xmath472 , ( ii )  for each edge  @xmath473 , there is a bag  @xmath474 with @xmath475 , and ( iii )  for each vertex  @xmath44 , the bags containing @xmath21 induce a subtree of  @xmath469 .",
    "the _ length _ of a tree  decomposition is smaller than or equal to  @xmath476 if for each bag  @xmath477 , @xmath478 . a graph  @xmath5 has _ tree - length _  @xmath476 , if there exist a tree - decomposition  @xmath469 for  @xmath5 such that @xmath469 has length  @xmath476 .",
    "similarly , the _ breadth _ of a tree  decomposition is smaller than or equal to  @xmath479 if for each bag  @xmath477 there is a vertex  @xmath44 with @xmath480 \\supseteq b$ ] .",
    "a graph  @xmath5 has _ tree - breadth _  @xmath479 , if there exist a tree - decomposition  @xmath469 for  @xmath5 such that @xmath469 has breadth  @xmath476 .    for these graphs",
    ", we use a concept called _ layering partition_. it was introduced in  @xcite .",
    "the idea is to first partition the vertices of a given graph in distance layers  @xmath481 with respect to a given vertex  @xmath32 .",
    "second , partition each layer  @xmath481 into _ clusters _ in such a way that two vertices @xmath22 and  @xmath21 are in the same cluster if they are connected by a path  @xmath1 such that @xmath482 , i.e.ifnextchar ,  , @xmath1 does not contain vertices of layers closer to  @xmath32 than @xmath22 and  @xmath21 .",
    "unfortunately , computing the tree - length of a graph is an np - hard problem  @xcite .",
    "however , for our needs , an approximation of it would suffice .",
    "if @xmath5 has tree - length  @xmath476 or tree - breadth  @xmath479 , a factor  @xmath483 can be computed in @xmath12 time such that @xmath484 or @xmath485 , respectively .    to compute @xmath288 ,",
    "first determine the pairwise distances of all vertices .",
    "then , compute a layering partition for each vertex  @xmath32 .",
    "let @xmath309 be the maximum diameter of all clusters of all layering partitions .",
    "the diameter of each cluster is at most @xmath486 if @xmath5 has tree - length  @xmath476 and at most @xmath487 if @xmath5 has tree - breadth  @xmath479  @xcite .",
    "therefore , for each shortest path  @xmath1 , @xmath488 and @xmath489 , respectively .",
    "thus , @xmath490 and @xmath491 .",
    "computing the pairwise distances of all vertices can be done in @xmath13 time .",
    "a layering partition can be computed in linear time  @xcite . for a given layering partition , the diameter of each cluster",
    "can be computed in @xmath492 time if the pairwise distances of all vertices are known .",
    "thus , @xmath288 can be computed in @xmath12 time .",
    "note that it is not necessary to know the tree - length or tree - breath of  @xmath5 to compute  @xmath288 .",
    "thus , by computing  @xmath288 and then running algorithm  [ algo : valmesp ] for each vertex in @xmath5 , we get :    for graphs with tree - length  @xmath476 or tree - breadth  @xmath479 , a minimum eccentricity shortest path can be found in @xmath493 time or @xmath494 time , respectively .",
    "a graph has _",
    "_  @xmath495 if for any four vertices @xmath22 , @xmath21 , @xmath64 , and  @xmath32 , the two larger of the sums @xmath58 , @xmath59 , and @xmath60 differ by at most  @xmath496 .",
    "[ @xcite ] [ lem : deltahyper ] let @xmath22 , @xmath21 , @xmath64 , and @xmath32 be four vertices in a @xmath495-hyperbolic graph .",
    "if @xmath497 , then @xmath498 .    if @xmath5 is @xmath495-hyperbolic , then @xmath499 .",
    "consider two vertices @xmath22 and  @xmath64 such that @xmath500 for some vertex  @xmath32 and shortest path  @xmath1 .",
    "let @xmath304 be a vertex such that @xmath501 and @xmath502 , i.e.ifnextchar ,  , @xmath21 is a middle vertex on the subpath from @xmath22 to  @xmath64 .    assume , @xmath503 .",
    "thus , @xmath504 and @xmath505 .",
    "therefore , by lemma  [ lem : deltahyper ] , @xmath498 .",
    "this contradicts that @xmath500 .",
    "hence , the diameter of a projection is at most @xmath506 and , therefore , @xmath499 .    for @xmath495-hyperbolic graphs , a minimum eccentricity",
    "shortest path can be found in @xmath507 time .",
    "in the last sections , we have shown how to find a shortest path with minimum eccentricity  @xmath35 for several graph classes . for graphs with tree - length  @xmath476",
    ", this can require up to @xmath508 time . in this section",
    ", we will show that , for graphs with tree - length  @xmath476 , we can find a shortest path with eccentricity at most @xmath509 in at most @xmath510 time and , for graphs with hyperbolicity  @xmath495 , we can find a shortest path with eccentricity at most @xmath511 in at most @xmath512  time .    [",
    "lem : mutualdisthyper ] let @xmath5 be a graph with hyperbolicity  @xmath495 .",
    "two vertices @xmath32 and  @xmath33 in @xmath5 with @xmath513 can be found in @xmath512 time .",
    "let @xmath22 and  @xmath21 be two vertices in @xmath5 such that @xmath514 . for an arbitrary vertex  @xmath515 and for @xmath516 , let @xmath517 be vertices in  @xmath5 such that @xmath518 and @xmath519 . to prove lemma  [ lem : mutualdisthyper ]",
    ", we will show that there is no vertex  @xmath520 .    because @xmath521 , @xmath522 .",
    "therefore , by lemma  [ lem : deltahyper ] , @xmath523 and , thus , @xmath524 . since @xmath519 , there is no vertex  @xmath525 with @xmath526 , otherwise @xmath527 .",
    "therefore , a vertex pair  @xmath42 with @xmath513 can be found in @xmath512  time as follows : pick an arbitrary vertex  @xmath515 and find a vertex  @xmath528 with @xmath529 using a bfs .",
    "next , find a vertex  @xmath530 such that @xmath531 .",
    "repeat this ( at most @xmath496 times ) until @xmath532 .",
    "note that , if a graph has tree - length  @xmath476 , its hyperbolicity is at most @xmath476  @xcite . thus , it follows :    [ cor : mutualdisttreelen ] let @xmath5 be a graph with tree - length  @xmath476 .",
    "two vertices @xmath32 and  @xmath33 in @xmath5 with @xmath513 can be found in @xmath510 time .",
    "the next lemma will show that , in a graph with bounded tree - length , a shortest path between two mutually furthest vertices gives an approximation for the mesp - problem .",
    "[ lem : approxtreelen ] let @xmath5 be a graph with tree - length  @xmath476 having a shortest path with eccentricity  @xmath35 . also , let @xmath32 and  @xmath33 be two mutually furthest vertices , i.e.ifnextchar ,  , @xmath513 .",
    "each shortest path from @xmath32 to  @xmath33 has eccentricity less than or equal to @xmath533 .",
    "let @xmath1 be a shortest path from @xmath62 to  @xmath63 with eccentricity  @xmath35 and @xmath2 be a shortest path from @xmath32 to  @xmath33 .",
    "consider a tree - decomposition  @xmath469 for @xmath5 with length  @xmath476 .",
    "we distinguish between two cases : ( 1 )  there is a bag in  @xmath469 containing a vertex of @xmath1 and a vertex of @xmath2 and ( 2 )  there is no such bag in  @xmath469 .    [ [ case-1-there - is - a - bag - inmathcalt - containing - a - vertex - of - p - and - a - vertex - ofq . ] ] case 1 : there is a bag in  @xmath469 containing a vertex of @xmath1 and a vertex of  @xmath2 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we define bags @xmath534 and @xmath535 as follows : both contain a vertex of  @xmath1 and a vertex of  @xmath2 , @xmath534 is a bag closest to a bag containing  @xmath32 , @xmath535 is a bag closest to a bag containing  @xmath33 , and the distance between @xmath534 and  @xmath535 in  @xmath469 is maximal .",
    "let @xmath536 be a subpath of the shortest path from @xmath534 to  @xmath535 in  @xmath469 such that @xmath537 is a bag closest to a bag containing  @xmath62 , @xmath538 is a bag closest to a bag containing  @xmath63 , @xmath539 is adjacent to  @xmath540 in @xmath469 ( @xmath541 ) , and the distance  @xmath542 between @xmath537 and  @xmath538 is maximal . without loss of generality ,",
    "let @xmath543 .",
    "let @xmath544 be the vertex in @xmath545 which is closest to  @xmath62 in  @xmath5 and let @xmath546 be the vertex in @xmath547 which is closest to  @xmath63 in  @xmath5 .",
    "figure  [ fig : treedecoeg ] gives an illustration .",
    "[ htb ]     for each vertex  @xmath548 with @xmath549 , @xmath550 .",
    "[ claim ] there is a vertex set @xmath551 , where @xmath552 for all positive @xmath553 . because @xmath554 for @xmath555 , @xmath556 .",
    "thus , because @xmath1 is a shortest path , for all @xmath557 with @xmath558 there is a vertex  @xmath559 with @xmath560 such that @xmath561 . by definition of @xmath469 , each bag  @xmath539 ( @xmath555 ) contains a vertex  @xmath562 , i.e.ifnextchar ,  , @xmath563 ( @xmath560 ) .",
    "therefore , for all @xmath557 with @xmath558 there is a vertex  @xmath559 with @xmath560 such that @xmath564 .",
    "consider an arbitrary vertex  @xmath21 in  @xmath5 .",
    "let @xmath98 be a vertex in  @xmath1 closest to  @xmath21 and let @xmath565 be a shortest path from @xmath21 to  @xmath98 . if @xmath98 is between @xmath544 and @xmath546 , i.e.ifnextchar ,  , @xmath566 , by the claim above , @xmath567 .",
    "if @xmath565 intersects a bag containing a vertex  @xmath562 , @xmath568 .",
    "next , consider the case when @xmath565 does not intersect a bag containing a vertex of @xmath2 and ( without loss of generality ) @xmath569 . in this case , each path from @xmath32 to  @xmath21 intersects  @xmath538 .",
    "there is a vertex  @xmath570 such that @xmath571 .",
    "[ claim ] let @xmath96 be a vertex in  @xmath1 that is closest to  @xmath33 and let @xmath572 be a shortest path from @xmath33 to  @xmath96 .",
    "if @xmath572 intersects  @xmath538 , there is a vertex @xmath573 with @xmath574 .    if @xmath572 does not intersect  @xmath538 , there is a subpath of  @xmath1 starting at  @xmath546 , containing  @xmath96 , and ending in a vertex  @xmath575 . because @xmath576 , @xmath577 .",
    "therefore , @xmath578 .",
    "let @xmath22 , @xmath98 , and  @xmath459 be vertices in  @xmath538 such that @xmath571 , @xmath98 is on a shortest path from @xmath32 to  @xmath21 , and @xmath579 . because @xmath580 , @xmath581 . also , by the triangle inequality , @xmath582 and @xmath583 . because @xmath584 and @xmath571 , @xmath585 and therefore @xmath586 .",
    "thus , if there is a bag in  @xmath469 containing a vertex of  @xmath1 and a vertex of  @xmath2 , @xmath587 for all vertices  @xmath21 in  @xmath5 .",
    "[ [ case-2-there - is - no - bag - inmathcalt - containing - vertices - of - p - andq . ] ] case 2 : there is no bag in  @xmath469 containing vertices of @xmath1 and  @xmath2 .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    because there is no such bag , @xmath469 contains a bag  @xmath477 such that each path from @xmath32 and  @xmath33 to  @xmath1 intersects  @xmath477 and there is a vertex  @xmath588 .",
    "consider an arbitrary vertex  @xmath21 . if there is a shortest path  @xmath565 from @xmath21 to  @xmath1 which intersects  @xmath477 , then @xmath589 . if there is no such path , each path from @xmath32 to  @xmath21 intersects  @xmath477 .",
    "let @xmath590 be a vertex on a shortest path from @xmath32 to  @xmath21 and let @xmath591 be a vertex on a shortest path from @xmath33 to  @xmath1 .",
    "note that @xmath592 .    because @xmath580 , @xmath581",
    "also , by the triangle inequality , @xmath582 and @xmath583 . because @xmath593 and @xmath594 , @xmath595 and therefore @xmath596 .",
    "thus , if there is no bag in  @xmath469 containing vertices of  @xmath1 and  @xmath2 , @xmath597 for all vertices  @xmath21 in  @xmath5 .    in  @xcite , it was shown that an @xmath412-vertex @xmath495-hyperbolic graph has tree - length at most  @xmath598 .",
    "[ cor : approxhyperbolic ] let @xmath5 be a graph with hyperbolicity  @xmath495 having a shortest path with eccentricity  @xmath35 . also , let @xmath32 and  @xmath33 be two mutually furthest vertices , i.e.ifnextchar ,  , @xmath513 .",
    "each shortest path from @xmath32 to  @xmath33 has eccentricity less than or equal to k + @xmath598 .",
    "lemma  [ lem : mutualdisthyper ] , lemma  [ lem : approxtreelen ] , corollary  [ cor : mutualdisttreelen ] , and corollary  [ cor : approxhyperbolic ] imply our main result of this section :    let @xmath5 be a graph having a shortest path with eccentricity  @xmath35 .",
    "if @xmath5 has tree - length  @xmath476 , a shortest path with eccentricity at most @xmath509 can be found in @xmath510  time . if @xmath5 has hyperbolicity  @xmath495 , a shortest path with eccentricity at most @xmath511 can be found in @xmath512  time .",
    "a graph is chordal if and only if it has tree - length  @xmath599  @xcite .",
    "if @xmath5 is a chordal graph and has a shortest path with eccentricity  @xmath35 , a shortest path in  @xmath5 with eccentricity at most @xmath600 can be found in linear time .",
    "figure  [ fig : chordaleg ] gives an example that , for chordal graphs , @xmath600 is a tight upper bound for the eccentricity of the determined shortest path .",
    "[ htb ] . a shortest path from @xmath62 to  @xmath21 passing @xmath98 has eccentricity  @xmath77 which is the minimum for all shortest paths in  @xmath5 . the diametral path from @xmath62 to  @xmath22 passing @xmath601 has eccentricity  @xmath602 because of its distance to  @xmath64 .",
    ", title=\"fig : \" ]",
    "we have investigated the minimum eccentricity shortest path problem for some structured graph classes . for these classes , we were able to present linear or polynomial time algorithms .",
    "additionally , we presented a simple algorithm which gives an additve approximation in linear time for chordal graphs , in @xmath510 time for graphs with tree - length  @xmath476 , and in @xmath512 time for graphs with hyperbolicity  @xmath495 .",
    "table  [ tbl : results ] gives an overview of our results .      .",
    "runtime for solving the minimum eccentricity shortest path problem for some graph classes . also ,",
    "if the solution is not optimal , the maximal difference to an optimal solution is shown . [ cols=\"<,<,<\",options=\"header \" , ]     one reason why the runtime to find an optimal path for distance - hereditary graphs is linear is that we can determine the start and end vertices of an optimal path in linear time for these graphs . for the other classes ,",
    "the algorithm iterates over all possible start vertices  @xmath62 . we know",
    "that , for general graphs , the problem remains np - complete even if a start - end vertex pair is given ( see the reduction in  @xcite ) .",
    "also , we have shown that there is a shortest path with minimum eccentricity between every diametral pair of vertices of a distance - hereditary graph ( theorem  [ th : dhg ] ) .",
    "this leads to the following question : how hard is it to determine the start and end vertices of an optimal path ?",
    "this question applies to general graphs as well as to special graph classes like chordal graphs .",
    "another interesting question is , for which other graph classes the problem remains np - complete or can be solved in polynomial time .",
    "the np - completeness proof in  @xcite uses a reduction from sat .",
    "there is a planar version of 3-sat ( see  @xcite ) .",
    "does this imply that the problem remains np - complete for planar graphs ?",
    "chepoi , f.f .",
    "dragan , b. estellon , m. habib , and y. vaxes , diameters , centers , and approximating trees of @xmath495-hyperbolic geodesic spaces and graphs .",
    "_ proceedings of the 24th annual acm symposium on computational geometry ( socg 2008 ) _ ( 2008 ) 5968 .",
    "f.f.dragan , e.khler and a.leitert , line - distortion , bandwidth and path - length of a graph , swat 2014 : _",
    "14th scandinavian symposium and workshops on algorithm theory _",
    ", july 24 2014 .",
    "copenhagen , denmark , _ lecture notes in computer science _ 8503 , 2014 , pp . 146257 .",
    "tarjan and m. yannakakis , simple linear - time algorithms to test chordality of graphs , test acyclicity of hypergraphs , and selectively reduce acyclic hypergraphs , _ siam journal on computing _ 13 ( 1984 ) , 566579 ."
  ],
  "abstract_text": [
    "<S> we investigate the _ minimum eccentricity shortest path _ problem in some structured graph classes . </S>",
    "<S> it asks for a given graph to find a shortest path with minimum eccentricity . </S>",
    "<S> although it is np - hard in general graphs , we demonstrate that a minimum eccentricity shortest path can be found in linear time for distance - hereditary graphs ( generalizing the previous result for trees ) and give a generalised approach which allows to solve the problem in polynomial time for other graph classes . </S>",
    "<S> this includes chordal graphs , dually chordal graphs , graphs with bounded tree - length , and graphs with bounded hyperbolicity . </S>",
    "<S> additionally , we give a simple algorithm to compute an additive approximation for graphs with bounded tree - length and graphs with bounded hyperbolicity . </S>"
  ]
}
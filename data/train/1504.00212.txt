{
  "article_text": [
    "the collatz @xmath13 function is defined as a function @xmath14 on the set of positive integers by @xmath15 +   + let @xmath16 and @xmath17 for @xmath18 .",
    "then the collatz sequence for @xmath19 is @xmath20 .",
    "+   + for example , the starting number @xmath21 generates the collatz sequence @xmath22 a collatz sequence can only assume two possible forms .",
    "either it falls into a cycle or it grows to infinity .",
    "the unproved conjecture to this problem is that each collatz sequence enters the cycle @xmath23 .",
    "collatz s conjecture is equivalent to the conjecture that for each @xmath25 , there exists @xmath18 such that @xmath26 .",
    "the least @xmath18 such that @xmath26 is called the stopping time of @xmath3 , which we will denote by @xmath24 .",
    "it is not hard to verify that +   + @xmath27 if @xmath28 , + @xmath29 if @xmath30 , + @xmath31 if @xmath32 , + @xmath33 if @xmath34 , + @xmath35 if @xmath36 , + @xmath37 if @xmath38 , + @xmath39 if @xmath40 , + and so forth .",
    "+   + let @xmath0 then generally applies for all @xmath41 , that @xmath42 + let @xmath5 be the number of residue classes @xmath2 for each @xmath6 .",
    "then we have @xmath43    * theorem 1 * : let @xmath0 then for each @xmath41 , there exists a set of @xmath5 residue classes @xmath2 of starting numbers @xmath3 with finite stopping time @xmath4 . for each @xmath44",
    "there is @xmath45 . _",
    "( end of theorem ) _",
    "+   + everett[1 ] proves that almost all @xmath18 have finite stopping time , and terras[3 ] gives a probability distribution function for stopping times .",
    "+   + the possible stopping times @xmath24 are listed in the oeis as https://oeis.org/a020914[a020914 ] .",
    "the associated residue classes @xmath2 are listed in the oeis as https://oeis.org/a177789[a177789 ] . the number of residue classes @xmath5 for @xmath46 are listed in the oeis as https://oeis.org/a100982[a100982 ] .",
    "+   + appendix 5.4 shows a list of the first residue classes @xmath2 up to @xmath47 .",
    "+      * theorem 2 * : let @xmath48 with @xmath49 be a finite subsequence of @xmath50 , and let @xmath0 .",
    "then for each @xmath1 an odd starting number @xmath3 has the stopping time @xmath4 , if the appropriate subsequence @xmath51 consists of @xmath52 odd terms , and @xmath53 , if and only if @xmath54 ) in @xmath51 is odd .",
    "then , there is @xmath55 _ ( end of theorem ) _",
    "+   + _ example _ : for @xmath56 there is @xmath57 . for @xmath58",
    "we get by equation ( 1 ) @xmath59 + _ explanation _ : the subsequence @xmath60 consists of four @xmath61 odd terms @xmath62 .",
    "the powers of two @xmath63 yield as follows : @xmath64 is odd , so @xmath65 .",
    "@xmath66 is odd , so @xmath67 .",
    "@xmath68 is even .",
    "@xmath69 is odd , so @xmath70 .",
    "@xmath71 is odd , so @xmath72 .",
    "@xmath73 is even .",
    "@xmath74 is even .",
    "+   + _ note _ : there is @xmath35 not only for @xmath58 , but for every @xmath75 . +",
    "* theorem 3 * : let @xmath76 and @xmath0 for each @xmath77 . according to the conditions of theorem 2 ,",
    "if an odd starting number @xmath3 has the stopping time @xmath4 , then the first @xmath78 terms in @xmath50 represents sufficiently the stopping time of @xmath3 , because all further terms are even before the term @xmath79 is reached .",
    "_ ( end of theorem ) _ +   + to simplify the distribution of the even and odd terms in @xmath50 let `` 0 '' represents an even term and `` 1 '' represents an odd term .",
    "+   + _ example _ : for @xmath56 there is @xmath80 and @xmath57",
    ". then for the subsequences @xmath81 there is @xmath82 + and for the sufficiently subsequences @xmath83 there is @xmath84      let @xmath85 for each @xmath77 .",
    "+   + let @xmath86 be a binary @xmath87-tuple for each @xmath77 , defined by @xmath88 @xmath89 + let @xmath90 be the set of @xmath86 and all permutations in lexicographic ordering of @xmath86 for each @xmath77 , whereby @xmath91 is the number of all these tuples for each @xmath52 , calculated by @xmath92 + let @xmath93 be a binary @xmath94-tuple for each @xmath77 , defined by @xmath95 let @xmath96 be the set of @xmath91 tuples @xmath93 for each @xmath77 , where @xmath97 is equal to exactly one tuple of @xmath90 .",
    "+   + _ example _ : for @xmath98 there is @xmath99 and @xmath100 .",
    "therefore we get the 8-tuple @xmath101 .",
    "there are further 55 permutations in lexicographic ordering of @xmath102 .",
    "because of this @xmath103 contains 56 different 8-tuples , and @xmath104 contains 56 different 10-tuples @xmath105 .",
    "appendix 5.2 shows these example in detail . +      according to theorem 2 ,",
    "the behaviour of a collatz sequence is clearly related to the way in which the powers of 2 are distributed among the powers of 3 in the term @xmath106 of equation ( 1 ) .",
    "+   + according to theorem 3 , for each @xmath107 , only for the @xmath91 binary tuples of @xmath96 the conditions of theorem 2 and equation ( 1 ) are complied . +   + * theorem 4 * : let @xmath0 . by interpreting the binary tuples of @xmath96 as such a binary simplification for the even and odd terms in @xmath83",
    ", there exists for each @xmath77 , according to theorem 2 , for each binary tuple of @xmath96 a diophantine equation @xmath108 which has exactly one integer solution @xmath109 for @xmath110 , so that @xmath111 in @xmath112 . _ ( end of theorem ) _ +   + * theorem 5 * : for each @xmath7 the @xmath91 solutions @xmath109 represent @xmath91 different residue classes of starting numbers @xmath3 with stopping time @xmath113 .",
    "more precise : for each @xmath7 the @xmath91 solutions represent @xmath5 residue classes of starting numbers @xmath3 with the stopping time @xmath4 , and @xmath114 residue classes of starting numbers @xmath3 with stopping time @xmath115 . for the @xmath5 solutions",
    "@xmath109 with @xmath116 , there is @xmath117 the smallest number of the residue class @xmath118_{2^{\\sigma_n}}$ ] . _",
    "( end of theorem ) _",
    "+   + _ example _ : for @xmath119 there are @xmath120 integer solutions @xmath109 .",
    "the next table shows the 10 binary tuples of @xmath121 and the appropriate integer solution @xmath109 .    ....",
    "( 1 , 1 , 0 , 0 , 1 , 1 , 1 )    ( 211 , 202 )               ( 1 , 1 , 0 , 1 , 0 , 1 , 1 )    ( 107 , 103 )               ( 1 , 1 , 0 , 1 , 1 , 0 , 1 )    ( 123 , 118 )               ( 1 , 1 , 0 , 1 , 1 , 1 , 0 )    ( 219 , 209 )               ( 1 , 1 , 1 , 0 , 0 , 1 , 1 )    ( 183 , 175 )               ( 1 , 1 , 1 , 0 , 1 , 0 , 1 )    ( 199 , 190 )               ( 1 , 1 , 1 , 0 , 1 , 1 , 0 )    ( 39 ,   38 )               ( 1 , 1 , 1 , 1 , 0 , 0 , 1 )    ( 79 ,   76 )               ( 1 , 1 , 1 , 1 , 0 , 1 , 0 )    ( 175 , 167 )               ( 1 , 1 , 1 , 1 , 1 , 0 , 0 )    ( 95 ,   91 )     ....    of these 10 solutions , there are @xmath122 solutions for which @xmath117 has the stopping time @xmath123 , and @xmath124 solutions for which @xmath117 has stopping time @xmath125 .",
    "+   + it is @xmath126_{16}$ ] , @xmath127_{32}$ ] and @xmath128_{32}$ ] .",
    "so these 10 solutions represent 10 different residue classes of starting numbers @xmath3 with stopping time @xmath129 . according to chapter 2 ,",
    "there is +   + @xmath31 if @xmath32 , + @xmath33 if @xmath34 , + @xmath37 if @xmath38 . + note that for @xmath37 the 7 residue classes are equal to the values of @xmath117 .",
    "+   + the next table shows the distribution of the solutions @xmath109 to the possible stopping times @xmath130 for @xmath131 .    [ cols=\"^,^,>,>,>,>,>,>,>,>,>\",options=\"header \" , ]     for @xmath132",
    "we need two new binomial coefficients .",
    "note the new colours .",
    "@xmath133 + _ example _ : this example shows the working of equation ( 3 ) for @xmath134 . @xmath135",
    "the results of the analysis of the solutions and equation ( 3 ) enables us to devise an iterative algorithm which generates with only twelve initial numbers @xmath136 each further number @xmath5 and also the number of all integer solutions @xmath109 for @xmath110 from the diophantine equation ( 2 ) with same stopping time @xmath130 as seen in the tables on page 7 and 8 .",
    "+   + the next pari / gp program 4 shows this algorithm , which outputs a list of the numbers @xmath5 for @xmath137 , as listed in the oeis as https://oeis.org/a100982/list[simple list ] of a100982 .",
    "+    the correctness of this algorithm for the values of @xmath5 has been proved with a counting - algorithm by roosendaal / noe[4 ] for each @xmath11 .",
    "the number @xmath12 has 4527 digits .",
    "maybe the algorithm must slightly be modified for higher values of @xmath52 .",
    "but the basic structure as seen in equation ( 3 ) will never been changed . +    ....    { / * program 4 - the winkler stopping time algorithm * /     limit=10000 ;     zn= [ ] ; for(k=1 , limit ,",
    "zn = concat(zn , k ) ) ;     / * 12 initial numbers * /     zn[1]=1 ;    zn[2]=1 ;     zn[3]=2 ;     zn[4]=3 ;     zn[5]=7 ;    zn[6]=12 ;    zn[7]=30 ;    zn[8]=85 ;     zn[9]=173 ; zn[10]=476 ; zn[11]=961 ; zn[12]=2652 ;     / * main algorithm * /     for(n=12 , limit ,       sum=0 ; a=-1 ;       for(k=0 , n-11 , a = a+(-1)^floor(2*(k-2)/3 ) ) ;       for(i=2 , 6 , sum = sum+binomial(floor((3*(n - i)+a)/2),n - i)*zn[i ] ) ;       for(i=7 , 11 , sum = sum+binomial(floor((3*(n - i)+a-1)/2),n - i)*zn[i ] ) ;       for(h=0 , floor((limit-12)/6 ) ,         v=12 ; w=5 ;         if((h<58 ) & & ( frac((h-6)/9)==0 ) , w=4 ) ;         for(k=0 , 5 , if(h>=k*9 + 7 , v-- ) ) ;         c2=58 ;         for(k=1 , floor(n/20 ) ,           if(frac(k/2)!=0 , d=52 ; e=5 , d=61 ; e=6 ) ;           c1=c2 ; c2=c1+d ;           if((h>=c1 ) & & ( h < c2 ) & & ( frac((h-6+k*2)/9)==0 ) , w=4 ) ;           for(f=0 , e , if(h>=f*9+c1 + 1 , v-- ) ) ;         ) ;         p=0 ; q=0 ;         for(i = v+h*6 , v+h*6+w ,           delta = a-2-h ;           sum = sum+binomial(floor((3*(n - i)+delta)/2),n - i)*zn[i ] ;           z_n = binomial(floor(5*(n-2)/3),n-2)-sum ;           r1=0 ; r2=0 ; p++ ;           for(t=0 , floor(n/15 ) ,             c1=5 ; c2=6 ; d=0 ;             if(t > c1 , r1=2 ) ; if(t > c2 , r2=2 ) ;             for(k=2 , floor(n/50 ) ,               if(frac(k/2)==0 , d=6 , d=7 ) ;               c1=c1+d ; c2=c2+d ;               if(t > c1 , r1=k*2 ) ; if(t > c2 , r2=k*2 ) ;             ) ;             for(k = t*9-r2 , t*9 + 8-r1 ,               if((n > k*6-t ) & & ( h==k-2 ) & & ( p==n - k*6+t ) ,                 print(n \" \" z_n ) ; zn[n]=z_n ; q=1 ; break ;               ) ;             ) ;             if(q==1 , break ) ;           ) ;           if(q==1 , break ) ;         ) ;         if(q==1 , break ) ;       ) ;     ) ;    }     ....    the lines 12 , 13 and 28 , 29 of program 4 show the main calculations of equation ( 3 ) .",
    "the only complicated thing is the computation of the pattern of the lower and upper bounds of the index of summation @xmath138 and the appropriate value of @xmath139 .",
    "+   + the upper limits of the _ for loops _ in the lines 19 , 31 and 34 are dependent on the value of @xmath52 or _ limit _ and must be large enough .",
    "the bigger the values of these upper limits , the longer the runtime of the algorithm .",
    "for example , for the small fixed upper limits 2 , 24 and 2 the algorithm computes up to @xmath140 much faster .",
    "+   + the pari / gp programs 5 and 6 in appendix 5.1 show this algorithm with different outputs as seen in the tables on page 7 and 8 .",
    "+   + for another algorithm which generates the values of @xmath5 by a different way see http://mikewinkler.co.nf/collatz_algorithm.pdf[winkler[7 ] ] and http://mikewinkler.co.nf/collatz_teilfolgen_2014.pdf[winkler[10 ] ] .",
    "but this older algorithm from 2011 is not yet immature .",
    "we see that the fact , if an odd starting number @xmath3 has finite stopping time is only dependent on how the first @xmath141 even and @xmath52 odd terms are distributed in @xmath83 and @xmath51 .",
    "now we are able to formulate a general stopping time theorem without the use of equation ( 1 ) .",
    "+   + * theorem 6 * : let @xmath85 and @xmath0 . for all @xmath77 ,",
    "an odd starting number @xmath3 has stopping time @xmath113 , if the binary simplification of the even and odd terms in the subsequence @xmath83 is equal to a binary tuple of @xmath96 and if the subsequence @xmath51 consists of @xmath52 odd terms . _",
    "( end of theorem ) _ +      according to theorem 1 , the collatz conjecture is true , if the set of the residue classes @xmath2 of starting numbers for all @xmath6 is equal to @xmath142 . according to theorem 4 and 5 , all possible residue classes for the stopping times",
    "are given by the diophantine equations as their integer solutions .",
    "therefore the collatz conjecture is true , if there exists for each necessary residue class an appropriate diophantine equation .",
    "+      then , according to theorem 6 , there exist an odd starting number @xmath3 without stopping time .",
    "this starting number @xmath3 has the property that for each @xmath77 , there is no accordance of the binary simplification of the even and odd terms in the subsequence @xmath83 and a binary tuple of @xmath96 , or the subsequence @xmath51 consists not of @xmath52 odd terms . +      because out of the finite sets of diophantine equations for each @xmath7 not until @xmath145 a diophantine equation has the solution @xmath146 or the residue class @xmath147 .",
    "another answer : not until @xmath145 the binary simplification of the even and odd terms in the subsequence @xmath148 is equal to a binary tuple of @xmath96 while the subsequence @xmath149 consists of @xmath52 odd terms .",
    "+      my future work is about the self - reference of the collatz graph .",
    "i have devised two different directed graphs , which illustrate that there exists a self - reference of odd subsequences @xmath150 , clarified by the same background colour between both graphs and arrows in the first graph .",
    "+   + this means on the one hand that odd subsequences @xmath150 with a small number of steps to reach 1 are connected with subsequences @xmath151 or @xmath152 with a big number of steps to reach 1 .",
    "for example @xmath153 and @xmath154 . +   + and on the other hand shows the first graph why and where to find numbers in the second graph .",
    "for example shows the green arrow in the first graph why @xmath155 must hit the subsequence @xmath156 . in the second graph",
    "the subsequence @xmath157 is located in column 9 .",
    "+   + this is only a very brief and insufficient exposition of the theory of self - reference . for details of the construction of the second graph and its correctness",
    "see http://mikewinkler.co.nf/collatz_konstruktion.pdf[winkler[6 ] ] .",
    "click http://mikewinkler.co.nf/collatz_tree2.pdf[here ] for a picture of the second graph which contains all odd numbers up to 341 , and http://mikewinkler.co.nf/collatz_tree1.pdf[here ] for the complete structure up to column 6 .",
    "the programs 1 - 3 use the function `` nextpermutation(a ) '' , which generates all permutations in lexicographic ordering of a binary tuple @xmath86 .    ....",
    "nextpermutation(a)=    {     i=#a-1 ;     while(!(i<1 || a[i]<a[i+1 ] ) , i-- ) ;     if(i<1 , return(0 ) ) ;     k=#a ;     while(!(a[k]>a[i ] ) , k-- ) ;     t = a[k ] ; a[k]=a[i ] ; a[i]=t ;     for(k = i+1 , ( # a+i)/2 ,       t = a[k ] ; a[k]=a[#a+1+i - k ] ; a[#a+1+i - k]=t ;     ) ;     return(a ) ;     }     ....     +   + program 1 computes all integer solutions @xmath109 for @xmath110 from the diophantine equation ( 2 ) for @xmath98 .    ....    { / * program 1 * /     n=7 ;     m = floor(2*(n-2)/3 ) ;     sigma = floor(1+n*log(3)/log(2 ) ) ;     j=(m+(n-2))!/(m!*(n-2 ) ! ) ;     / * vectors for binary tuple * /     alpha=[0,0,0,0,0,0,0 ] ;         a=[0,0,0,1,1,1,1,1 ] ;         b=[1,1,0,0,0,0,0,0,0,0 ] ;     z=0 ; q=0 ;     until(z==j , z++ ;       / * generate b(n ) from a(n ) * /       for(i=1 , m+n-2 , b[2+i]=a[i ] ) ;       / * determine the n values for alpha[i ] * /       i=1 ; for(k=1 , m+n , if(b[k]==1 , alpha[i]=k-1 ; i++ ) ) ;       / * calculate integer solutions from diophantine equation * /       for(x=0 , 2^sigma ,         sum=0 ; for(i=1 , n , sum = sum+3^(n - i)*2^alpha[i ] ) ;         y=(3^n*x+sum)/2^sigma ;         if(frac(y)==0 , print(b \"    ( \" x \" , \" y \" ) \" ) ; q++ ) ;       ) ;       a = nextpermutation(a ) ;     ) ;     print(\"there are \" q \" integer solutions ( x , y ) for n=7 . \" ) ;    }     ....    program 2 computes all integer solutions @xmath109 for @xmath110 from the diophantine equation ( 2 ) for @xmath158 .    ....    { / * program 2 * /     limit=100 ;     for(n=2 , limit ,       m = floor(2*(n-2)/3 ) ;       sigma = floor(1+n*log(3)/log(2 ) ) ;       j=(m+(n-2))!/(m!*(n-2 ) ! ) ;       / * generate vectors for binary tuple * /       alpha= [ ] ; for(i=1 , n , alpha = concat(alpha , i ) ) ;                 for(i=1 , n , alpha[i]=0 ) ;       a= [ ] ; for(i=1 , m+n-2 , a = concat(a , i ) ) ;             for(i=1 , m+n-2 , if(i<=m , a[i]=0 , a[i]=1 ) ) ;       b= [ ] ; for(i=1 , m+n , b = concat(b , i ) ) ;             for(i=1 , m+n , if(i<=2 , b[i]=1 , b[i]=0 ) ) ;       z=0 ; q=0 ;       until(z==j , z++ ;         / * generate b(n ) from a(n ) * /         for(i=1 , m+n-2 , b[2+i]=a[i ] ) ;         / * determine the n values for alpha[i ] * /         i=1 ; for(k=1 , m+n , if(b[k]==1 , alpha[i]=k-1 ; i++ ) ) ;         / * calculate integer solutions from diophantine equation * /         for(x=0 , 2^sigma ,           sum=0 ; for(i=1 , n , sum = sum+3^(n - i)*2^alpha[i ] ) ;           y=(3^n*x+sum)/2^sigma ;           if(frac(y)==0 , print(b \"    ( \" x \" , \" y \" ) \" ) ; q++ ) ;         ) ;         a = nextpermutation(a ) ;       ) ;       print(\"there are \" q \" integer solutions ( x , y ) for n=\"n \" . \" ) ;       print ;     ) ;    }     ....     + program 3 computes all integer solutions @xmath109 for @xmath110 from the diophantine equation ( 2 ) for @xmath159 and counts the solutions with same stopping time @xmath130 .    ....    { / * program 3 * /     for(n=2 , 10 ,       m = floor(2*(n-2)/3 ) ;       sigma = floor(1+n*log(3)/log(2 ) ) ;       j=(m+(n-2))!/(m!*(n-2 ) ! ) ;       / * initialize stopping time counters * /       w1=w2=w3=w4=w5=w6=w7=w8=w9=w10=0 ;       / * generate vectors for binary tuple * /       alpha= [ ] ; for(i=1 , n , alpha = concat(alpha , i ) ) ;                 for(i=1 , n , alpha[i]=0 ) ;       a= [ ] ; for(i=1 , m+n-2 , a = concat(a , i ) ) ;             for(i=1 , m+n-2 , if(i<=m , a[i]=0 , a[i]=1 ) ) ;       b= [ ] ; for(i=1 , m+n , b = concat(b , i ) ) ;             for(i=1 , m+n , if(i<=2 , b[i]=1 , b[i]=0 ) ) ;       z=0 ; q=0 ;       until(z==j , z++ ;         / * generate b(n ) from a(n ) * /         for(i=1 , m+n-2 , b[2+i]=a[i ] ) ;         / * determine the n values for alpha[i ] * /         i=1 ; for(k=1 , m+n , if(b[k]==1 , alpha[i]=k-1 ; i++ ) ) ;         / * calculate integer solutions from diophantine equation * /         for(x=0 , 2^sigma ,           sum=0 ; for(i=1 , n , sum = sum+3^(n - i)*2^alpha[i ] ) ;           y=(3^n*x+sum)/2^sigma ;           if(frac(y)==0 , q++ ;             / * calculate stopping time st of x",
    "* /             st=0 ; c = x ;             until(c < x , if(frac(c/2)<>0 , st++ ; c=(3*c+1)/2 ) ;               if(frac(c/2)==0 , st++ ; c = c/2 ;                 if((frac(c/2)<>0 ) & & ( c < x ) , break ) ;               ) ;             ) ;                if(st==2 , w1++ ) ; if(st==4 , w2++ ) ; if(st==5 , w3++ ) ;             if(st==7 , w4++ ) ; if(st==8 , w5++ ) ; if(st==10 , w6++ ) ;             if(st==12 , w7++ ) ; if(st==13 , w8++ ) ; if(st==15 , w9++ ) ;             if(st==16 , w10++ ) ;           ) ;         ) ;         a = nextpermutation(a ) ;       ) ;       print ;       print(\"there are \" q \" integer solutions ( x , y ) for n=\"n \" . \" ) ;       print(\"number of x with st= 2 : \" w1 ) ;       print(\"number of x with st= 4 : \" w2 ) ;       print(\"number of x with st= 5 : \" w3 ) ;       print(\"number of x with st= 7 : \" w4 ) ;       print(\"number of x with st= 8 : \" w5 ) ;       print(\"number of x with st=10 : \" w6 ) ;       print(\"number of x with st=12 : \" w7 ) ;       print(\"number of x with st=13 : \" w8 ) ;       print(\"number of x with st=15 : \" w9 ) ;       print(\"number of x with st=16 : \" w10 ) ;     ) ;    }     ....    appendix 5.3 shows the output of program 2 for @xmath160 .",
    "program 5 is equal to program 4 from chapter 3.5 but prints the number of all integer solutions as seen in the table on page 8 .    ....    { / * program 5 - the winkler stopping time algorithm * /     limit=10000 ; zn= [ ] ; for(k=1 , limit , zn = concat(zn , k ) ) ;     / * 12 initial numbers * /     zn[1]=1 ;    zn[2]=1 ;     zn[3]=2 ;     zn[4]=3 ;     zn[5]=7 ;    zn[6]=12 ;    zn[7]=30 ;    zn[8]=85 ;     zn[9]=173 ; zn[10]=476 ; zn[11]=961 ; zn[12]=2652 ;     / * main algorithm * /     for(n=12 , limit ,       sum=0 ; a=-1 ;       for(k=0 , n-11 , a = a+(-1)^floor(2*(k-2)/3 ) ) ;       for(i=2 , 6 , sum = sum+binomial(floor((3*(n - i)+a)/2),n - i)*zn[i ] ;         print(binomial(floor((3*(n - i)+a)/2),n - i ) \" * \" zn[i ] ) ;       ) ;       for(i=7 , 11 , sum = sum+binomial(floor((3*(n - i)+a-1)/2),n - i)*zn[i ] ;         print(binomial(floor((3*(n - i)+a-1)/2),n - i ) \" * \" zn[i ] ) ;       ) ;       for(h=0 , floor((limit-12)/6 ) ,         v=12 ; w=5 ;         if((h<58 ) & & ( frac((h-6)/9)==0 ) , w=4 ) ;         for(k=0 , 5 , if(h>=k*9 + 7 , v-- ) ) ;         c2=58 ;         for(k=1 , floor(n/20 ) ,           if(frac(k/2)!=0 , d=52 ; e=5 , d=61 ;",
    "e=6 ) ;           c1=c2 ; c2=c1+d ;           if((h>=c1 ) & & ( h <",
    "c2 ) & & ( frac((h-6+k*2)/9)==0 ) , w=4 ) ;           for(f=0 , e , if(h>=f*9+c1 + 1 , v-- ) ) ;         ) ;         p=0 ; q=0 ;         for(i = v+h*6 , v+h*6+w ,           delta = a-2-h ;           sum = sum+binomial(floor((3*(n - i)+delta)/2),n - i)*zn[i ] ;           if(n>12 , print(binomial(floor((3*(n - i)+a-2-h)/2),n - i ) \" * \" zn[i ] ) ) ;           z_n = binomial(floor(5*(n-2)/3),n-2)-sum ;           r1=0 ; r2=0 ; p++ ;           for(t=0 , floor(n/15 ) ,             c1=5 ; c2=6 ; d=0 ;             if(t > c1 , r1=2 ) ; if(t > c2 , r2=2 ) ;             for(k=2 , floor(n/50 ) ,               if(frac(k/2)==0 , d=6 , d=7 ) ;               c1=c1+d ; c2=c2+d ;               if(t > c1 , r1=k*2 ) ; if(t > c2 , r2=k*2 ) ;             ) ;             for(k = t*9-r2 , t*9 + 8-r1 ,               if((n > k*6-t ) & & ( h==k-2 ) & & ( p==n - k*6+t ) ,                 zn[n]=z_n ; q=1 ; break ;               ) ;             ) ;             if(q==1 , break ) ;           ) ;           if(q==1 , break ) ;         ) ;         if(q==1 , break ) ;       ) ;       print(\"1 * \" z_n ) ; print ; print ; print ;     ) ;    }     ....    program 6 is equal to program 5 but prints the number of all integer solutions as seen in the upper table on page 7 .    ....    { / * program 6 - the winkler stopping time algorithm * /     limit=10000 ; zn= [ ] ; for(k=1 , limit , zn = concat(zn , k ) ) ;     / * 12 initial numbers * /     zn[1]=1 ;    zn[2]=1 ;     zn[3]=2 ;     zn[4]=3 ;     zn[5]=7 ;    zn[6]=12 ;    zn[7]=30 ;    zn[8]=85 ;     zn[9]=173 ; zn[10]=476 ; zn[11]=961 ; zn[12]=2652 ;     / * main algorithm * /     for(n=12 , limit ,       sum=0 ; a=-1 ;       for(k=0 , n-11 , a = a+(-1)^floor(2*(k-2)/3 ) ) ;       for(i=2 , 6 , sum = sum+binomial(floor((3*(n - i)+a)/2),n - i)*zn[i ] ;         print(binomial(floor((3*(n - i)+a)/2),n - i)*zn[i ] ) ;       ) ;       for(i=7 , 11 , sum = sum+binomial(floor((3*(n - i)+a-1)/2),n - i)*zn[i ] ;         print(binomial(floor((3*(n - i)+a-1)/2),n - i)*zn[i ] ) ;       ) ;       for(h=0 , floor((limit-12)/6 ) ,         v=12 ; w=5 ;         if((h<58 ) & & ( frac((h-6)/9)==0 ) , w=4 ) ;         for(k=0 , 5 , if(h>=k*9 + 7 , v-- ) ) ;         c2=58 ;         for(k=1 , floor(n/20 ) ,           if(frac(k/2)!=0 , d=52 ; e=5 , d=61 ; e=6 ) ;           c1=c2 ; c2=c1+d ;           if((h>=c1 ) & & ( h < c2 ) & & ( frac((h-6+k*2)/9)==0 ) , w=4 ) ;           for(f=0 , e , if(h>=f*9+c1 + 1 , v-- ) ) ;         ) ;         p=0 ; q=0 ;         for(i = v+h*6 , v+h*6+w ,           delta = a-2-h ;           sum = sum+binomial(floor((3*(n - i)+delta)/2),n - i)*zn[i ] ;           if(n>12 , print(binomial(floor((3*(n - i)+a-2-h)/2),n - i)*zn[i ] ) ) ;           z_n = binomial(floor(5*(n-2)/3),n-2)-sum ;           r1=0 ; r2=0 ; p++ ;           for(t=0 , floor(n/15 ) ,             c1=5 ; c2=6 ; d=0 ;             if(t > c1 , r1=2 ) ; if(t > c2 , r2=2 ) ;             for(k=2 , floor(n/50 ) ,               if(frac(k/2)==0 , d=6 , d=7 ) ;               c1=c1+d ; c2=c2+d ;               if(t > c1 , r1=k*2 ) ; if(t > c2 ,",
    "r2=k*2 ) ;             ) ;             for(k = t*9-r2 , t*9 + 8-r1 ,               if((n > k*6-t ) & & ( h==k-2 ) & & ( p==n - k*6+t ) ,                 zn[n]=z_n ; q=1 ; break ;               ) ;             ) ;             if(q==1 , break ) ;           ) ;           if(q==1 , break ) ;         ) ;         if(q==1 , break ) ;       ) ;       print(z_n ) ; print ; print ; print ;     ) ;    }     ....      for @xmath98 there is @xmath101 , +   + @xmath161    ....                    { ( 0,0,0,1,1,1,1,1 ) ,      ( 1,0,1,0,1,1,0,1 ) ,                        ( 0,0,1,0,1,1,1,1 ) ,      ( 1,0,1,0,1,1,1,0 ) ,                        ( 0,0,1,1,0,1,1,1 ) ,      ( 1,0,1,1,0,0,1,1 ) ,                        ( 0,0,1,1,1,0,1,1 ) ,      ( 1,0,1,1,0,1,0,1 ) ,                        ( 0,0,1,1,1,1,0,1 ) ,      ( 1,0,1,1,0,1,1,0 ) ,                        ( 0,0,1,1,1,1,1,0 ) ,      ( 1,0,1,1,1,0,0,1 ) ,                        ( 0,1,0,0,1,1,1,1 ) ,      ( 1,0,1,1,1,0,1,0 ) ,                        ( 0,1,0,1,0,1,1,1 ) ,      ( 1,0,1,1,1,1,0,0 ) ,                        ( 0,1,0,1,1,0,1,1 ) ,      ( 1,1,0,0,0,1,1,1 ) ,                        ( 0,1,0,1,1,1,0,1 ) ,      ( 1,1,0,0,1,0,1,1 ) ,                        ( 0,1,0,1,1,1,1,0 ) ,      ( 1,1,0,0,1,1,0,1 ) ,                        ( 0,1,1,0,0,1,1,1 ) ,      ( 1,1,0,0,1,1,1,0 ) ,                        ( 0,1,1,0,1,0,1,1 ) ,      ( 1,1,0,1,0,0,1,1 ) ,                        ( 0,1,1,0,1,1,0,1 ) ,      ( 1,1,0,1,0,1,0,1 ) ,                        ( 0,1,1,0,1,1,1,0 ) ,      ( 1,1,0,1,0,1,1,0 ) ,                        ( 0,1,1,1,0,0,1,1 ) ,      ( 1,1,0,1,1,0,0,1 ) ,                        ( 0,1,1,1,0,1,0,1 ) ,      ( 1,1,0,1,1,0,1,0 ) ,                        ( 0,1,1,1,0,1,1,0 ) ,      ( 1,1,0,1,1,1,0,0 ) ,                        ( 0,1,1,1,1,0,0,1 ) ,      ( 1,1,1,0,0,0,1,1 ) ,                        ( 0,1,1,1,1,0,1,0 ) ,      ( 1,1,1,0,0,1,0,1 ) ,                        ( 0,1,1,1,1,1,0,0 ) ,      ( 1,1,1,0,0,1,1,0 ) ,                        ( 1,0,0,0,1,1,1,1 ) ,      ( 1,1,1,0,1,0,0,1 ) ,                        ( 1,0,0,1,0,1,1,1 ) ,      ( 1,1,1,0,1,0,1,0 ) ,                        ( 1,0,0,1,1,0,1,1 ) ,      ( 1,1,1,0,1,1,0,0 ) ,                        ( 1,0,0,1,1,1,0,1 ) ,      ( 1,1,1,1,0,0,0,1 ) ,                        ( 1,0,0,1,1,1,1,0 ) ,      ( 1,1,1,1,0,0,1,0 ) ,                        ( 1,0,1,0,0,1,1,1 ) ,      ( 1,1,1,1,0,1,0,0 ) ,                        ( 1,0,1,0,1,0,1,1 ) ,      ( 1,1,1,1,1,0,0,0 )   }     ....    @xmath162    ....                { ( 1,1,0,0,0,1,1,1,1,1 ) , ( 1,1,1,0,1,0,1,1,0,1 ) ,                  ( 1,1,0,0,1,0,1,1,1,1 ) , ( 1,1,1,0,1,0,1,1,1,0 ) ,                  ( 1,1,0,0,1,1,0,1,1,1 ) , ( 1,1,1,0,1,1,0,0,1,1 ) ,                  ( 1,1,0,0,1,1,1,0,1,1 ) , ( 1,1,1,0,1,1,0,1,0,1 ) ,                  ( 1,1,0,0,1,1,1,1,0,1 ) , ( 1,1,1,0,1,1,0,1,1,0 ) ,                  ( 1,1,0,0,1,1,1,1,1,0 ) , ( 1,1,1,0,1,1,1,0,0,1 ) ,                  ( 1,1,0,1,0,0,1,1,1,1 ) , ( 1,1,1,0,1,1,1,0,1,0 ) ,                  ( 1,1,0,1,0,1,0,1,1,1 ) , ( 1,1,1,0,1,1,1,1,0,0 ) ,                  ( 1,1,0,1,0,1,1,0,1,1 ) , ( 1,1,1,1,0,0,0,1,1,1 ) ,                  ( 1,1,0,1,0,1,1,1,0,1 ) , ( 1,1,1,1,0,0,1,0,1,1 ) ,                  ( 1,1,0,1,0,1,1,1,1,0 ) , ( 1,1,1,1,0,0,1,1,0,1 ) ,                  ( 1,1,0,1,1,0,0,1,1,1 ) , ( 1,1,1,1,0,0,1,1,1,0 ) ,                  ( 1,1,0,1,1,0,1,0,1,1 ) , ( 1,1,1,1,0,1,0,0,1,1 ) ,                  ( 1,1,0,1,1,0,1,1,0,1 ) , ( 1,1,1,1,0,1,0,1,0,1 ) ,                  ( 1,1,0,1,1,0,1,1,1,0 ) , ( 1,1,1,1,0,1,0,1,1,0 ) ,                  ( 1,1,0,1,1,1,0,0,1,1 ) , ( 1,1,1,1,0,1,1,0,0,1 ) ,                  ( 1,1,0,1,1,1,0,1,0,1 ) , ( 1,1,1,1,0,1,1,0,1,0 ) ,                  ( 1,1,0,1,1,1,0,1,1,0 ) , ( 1,1,1,1,0,1,1,1,0,0 ) ,                  ( 1,1,0,1,1,1,1,0,0,1 ) , ( 1,1,1,1,1,0,0,0,1,1 ) ,                  ( 1,1,0,1,1,1,1,0,1,0 ) , ( 1,1,1,1,1,0,0,1,0,1 ) ,                  ( 1,1,0,1,1,1,1,1,0,0 ) , ( 1,1,1,1,1,0,0,1,1,0 ) ,                  ( 1,1,1,0,0,0,1,1,1,1 ) , ( 1,1,1,1,1,0,1,0,0,1 ) ,                  ( 1,1,1,0,0,1,0,1,1,1 ) , ( 1,1,1,1,1,0,1,0,1,0 ) ,                  ( 1,1,1,0,0,1,1,0,1,1 ) , ( 1,1,1,1,1,0,1,1,0,0 ) ,                  ( 1,1,1,0,0,1,1,1,0,1 ) , ( 1,1,1,1,1,1,0,0,0,1 ) ,                  ( 1,1,1,0,0,1,1,1,1,0 ) , ( 1,1,1,1,1,1,0,0,1,0 ) ,                  ( 1,1,1,0,1,0,0,1,1,1 ) , ( 1,1,1,1,1,1,0,1,0,0 ) ,                  ( 1,1,1,0,1,0,1,0,1,1 ) , ( 1,1,1,1,1,1,1,0,0,0 )   }     ....      this is also the output of program 2 for @xmath160 . +    ....      ( 1 , 1 , 0 , 1 , 1 )    ( 59 , 38 )      ( 1 , 1 , 1 , 0 , 1 )    ( 7 , 5 )      ( 1 , 1 , 1 , 1 , 0 )    ( 15 , 10 )      there are 3 integer solutions ( x , y ) for n=4 .     ....    ....      ( 1 , 1 , 0 , 0 , 1 , 1 , 1 )    ( 211 , 202 )      ( 1 , 1 , 0 , 1 , 0 , 1 , 1 )    ( 107 , 103 )      ( 1 , 1 , 0 , 1 , 1 , 0 , 1 )    ( 123 , 118 )      ( 1 , 1 , 0 , 1 , 1 , 1 , 0 )    ( 219 , 209 )      ( 1 , 1 , 1 , 0 , 0 , 1 , 1 )    ( 183 , 175 )      ( 1 , 1 , 1 , 0 , 1 , 0 , 1 )    ( 199 , 190 )      ( 1 , 1 , 1 , 0 , 1 , 1 , 0 )    ( 39 , 38 )      ( 1 , 1 , 1 , 1 , 0 , 0 , 1 )    ( 79 , 76 )      ( 1 , 1 , 1 , 1 , 0 , 1 , 0 )    ( 175 , 167 )      ( 1 , 1 , 1 , 1 , 1 , 0 , 0 )    ( 95 , 91 )      there are 10 integer solutions ( x , y ) for n=5 .     ....    ....      ( 1 , 1 , 0 , 0 , 1 , 1 , 1 , 1 )    ( 595 , 425 )      ( 1 , 1 , 0 , 1 , 0 , 1 , 1 , 1 )    ( 747 , 533 )      ( 1 , 1 , 0 , 1 , 1 , 0 , 1 , 1 )    ( 507 , 362 )      ( 1 , 1 , 0 , 1 , 1 , 1 , 0 , 1 )    ( 347 , 248 )      ( 1 , 1 , 0 , 1 , 1 , 1 , 1 , 0 )    ( 923 , 658 )      ( 1 , 1 , 1 , 0 , 0 , 1 , 1 , 1 )    ( 823 , 587 )      ( 1 , 1 , 1 , 0 , 1 , 0 , 1 , 1 )    ( 583 , 416 )      ( 1 , 1 , 1 , 0 , 1 , 1 , 0 , 1 )    ( 423 , 302 )      ( 1 , 1 , 1 , 0 , 1 , 1 , 1 , 0 )    ( 999 , 712 )      ( 1 , 1 , 1 , 1 , 0 , 0 , 1 , 1 )    ( 975 , 695 )      ( 1 , 1 , 1 , 1 , 0 , 1 , 0 , 1 )    ( 815 , 581 )      ( 1 , 1 , 1 , 1 , 0 , 1 , 1 , 0 )    ( 367 , 262 )      ( 1 , 1 , 1 , 1 , 1 , 0 , 0 , 1 )    ( 735 , 524 )      ( 1 , 1 , 1 , 1 , 1 , 0 , 1 , 0 )    ( 287 , 205 )      ( 1 , 1 , 1 , 1 , 1 , 1 , 0 , 0 )    ( 575 , 410 )      there are 15 integer solutions ( x , y ) for nthere are 56 integer solutions ( x , y ) for n=7 .     ....      @xmath27 + if  @xmath163  0  @xmath164 +   + @xmath29 + if  @xmath163  1  @xmath165 +   + @xmath31 + if",
    "@xmath163  3  @xmath166 +   + @xmath33 + if  @xmath163  11 , 23  @xmath167 +   + @xmath35 + if  @xmath163  7 , 15 , 59  @xmath168 +   + @xmath37 + if  @xmath163  39 , 79 , 95 , 123 , 175 , 199 , 219  @xmath169 +   + @xmath39 + if  @xmath163  287 , 347 , 367 , 423 , 507 , 575 , 583 , 735 , 815 , 923 , 975 , 999  @xmath170 +   + @xmath171 + if  @xmath163  231 , 383 , 463 , 615 , 879 , 935 , 1019 , 1087 , 1231 , 1435 , 1647 , 1703 , 1787 , 1823 , 1855 , 2031 , 2203 , 2239 , 2351 , 2587 , 2591 , 2907 , 2975 , 3119 , 3143 , 3295 , 3559 , 3675 , 3911 , 4063  @xmath172 +   + @xmath173 + if  @xmath163  191 , 207 , 255 , 303 , 539 , 543 , 623 , 679 , 719 , 799 , 1071 , 1135 , 1191 , 1215 , 1247 , 1327 , 1563 , 1567 , 1727 , 1983 , 2015 , 2075 , 2079 , 2095 , 2271 , 2331 , 2431 , 2607 , 2663 , 3039 , 3067 , 3135 , 3455 , 3483 , 3551 , 3687 , 3835 , 3903 , 3967 , 4079 , 4091 , 4159 , 4199 , 4223 , 4251 , 4455 , 4507 , 4859 , 4927 , 4955 , 5023 , 5103 , 5191 , 5275 , 5371 , 5439 , 5607 , 5615 , 5723 , 5787 , 5871 , 5959 , 5979 , 6047 , 6215 , 6375 , 6559 , 6607 , 6631 , 6747 , 6815 , 6983 , 7023 , 7079 , 7259 , 7375 , 7399 , 7495 , 7631 , 7791 , 7847 , 7911 , 7967 , 8047 , 8103  @xmath174 +   + @xmath47 + if  @xmath163  127 , 411 , 415 , 831 , 839 , 1095 , 1151 , 1275 , 1775 , 1903 , 2119 , 2279 , 2299 , 2303 , 2719 , 2727 , 2767 , 2799 , 2847 , 2983 , 3163 , 3303 , 3611 , 3743 , 4007 , 4031 , 4187 , 4287 , 4655 , 5231 , 5311 , 5599 , 5631 , 6175 , 6255 , 6503 , 6759 , 6783 , 6907 , 7163 , 7199 , 7487 , 7783 , 8063 , 8187 , 8347 , 8431 , 8795 , 9051 , 9087 , 9371 , 9375 , 9679 , 9711 , 9959 , 10055 , 10075 , 10655 , 10735 , 10863 , 11079 , 11119 , 11567 , 11679 , 11807 , 11943 , 11967 , 12063 , 12143 , 12511 , 12543 , 12571 , 12827 , 12967 , 13007 , 13087 , 13567 , 13695 , 13851 , 14031 , 14271 , 14399 , 14439 , 14895 , 15295 , 15343 , 15839 , 15919 , 16027 , 16123 , 16287 , 16743 , 16863 , 16871 , 17147 , 17727 , 17735 , 17767 , 18011 , 18639 , 18751 , 18895 , 19035 , 19199 , 19623 , 19919 , 20079 , 20199 , 20507 , 20527 , 20783 , 20927 , 21023 , 21103 , 21223 , 21471 , 21727 , 21807 , 22047 , 22207 , 22655 , 22751 , 22811 , 22911 , 22939 , 23231 , 23359 , 23399 , 23615 , 23803 , 23835 , 23935 , 24303 , 24559 , 24639 , 24647 , 24679 , 25247 , 25503 , 25583 , 25691 , 25703 , 25831 , 26087 , 26267 , 26527 , 26535 , 27111 , 27291 , 27759 , 27839 , 27855 , 27975 , 28703 , 28879 , 28999 , 29467 , 29743 , 29863 , 30311 , 30591 , 30687 , 30715 , 30747 , 30767 , 30887 , 31711 , 31771 , 31899 , 32155 , 32239 , 32575 , 32603  @xmath175 +   + and so forth . +",
    "\\1 . c. j. everett , iteration of the number - theoretic function f(2n ) = n , f(2n + 1 ) = 3n + 2 , advances in math . 25 ( 1977 ) , 42 . +   + 2 .",
    "l. e. garner , on the collatz 3n + 1 algorithm , proc .",
    "( 1981 ) , 19 - 22 . [ chapter 2 ] + ( http://ams.org/journals/proc/1981-082-01/s0002 -9939 - 1981 - 0603593 - 2/s0002 - 9939- + 1981-0603593-2.pdf ) +   + 3 .",
    "r. terras , a stopping time problem on the positive integers , acta arith . 30 ( 1976 ) , 241 .",
    "+   + 4 . the on - line encyclopedia of integer sequences ( oeis ) + ( http://oeis.org ) a020914 , a177789 , a100982 ( roosendaal / noe ) +   + 5 . the pari group - pari / gp version 2.3.4 + ( http://pari.math.u-bordeaux.fr ) +   + 6 .",
    "m. winkler , die konstruktion der speziellen baumstruktur , may 2010 .",
    "+ ( http://mikewinkler.co.nf/collatz_konstruktion.pdf ) +   + 7 .",
    "m. winkler , on a stopping time algorithm of the 3n + 1 function , may 2011 .",
    "+ ( http://mikewinkler.co.nf/collatz_algorithm.pdf ) +   + 8 .",
    "m. winkler , on the structure and the behaviour of collatz 3n + 1 sequences - finite subsequences and the role of the fibonacci sequence , november 2014 .",
    "+ ( http://arxiv.org/pdf/1412.0519v1.pdf ) +   + 9 .",
    "m. winkler , ber das stoppzeit - verhalten der collatz - iteration , october 2010 .",
    "+ ( http://mikewinkler.co.nf/collatz_algorithm_2010.pdf ) +   + 10 . m. winkler , ber die struktur und das wachstumsverhalten von collatz 3n + 1 folgen , march 2014 .",
    "+ ( http://mikewinkler.co.nf/collatz_teilfolgen_2014.pdf ) +   +   +   +   +   +      the devising and programming of the iterative stopping time algorithm in chapter 3.5 is the most wonderful discovery and work in my mathematical career and research until today . as an amateur mathematician it would be the greatest honour for me if my work could help solve the collatz problem .",
    "+   + i dedicate this paper to my high school math teacher franz hagen who has mediated me the joy of mathematics .",
    "+   + thanks to `` matph '' from matroids matheplanet for the pari / gp function `` nextpermutation(a ) '' .",
    "+ ( http://matheplanet.de ) +   + if you have any questions to this paper please contact me by e - mail .",
    "+   +   +   +   +   +"
  ],
  "abstract_text": [
    "<S> let @xmath0 . for the collatz 3x + 1 function exists for each @xmath1 a set of different residue classes @xmath2 of starting numbers @xmath3 with finite stopping time @xmath4 . </S>",
    "<S> let @xmath5 be the number of these residue classes for each @xmath6 as listed in the oeis as a100982 . </S>",
    "<S> it is conjectured that for each @xmath7 the value of @xmath5 is given by the formula @xmath8 where @xmath9 assumes different values within the sum at intervals of 5 or 6 terms . </S>",
    "<S> this allows to create an iterative algorithm which generates @xmath5 for each @xmath10 . </S>",
    "<S> this has been proved for each @xmath11 . </S>",
    "<S> the number @xmath12 has 4527 digits .    </S>",
    "<S> _ keywords and phrases _ : collatz conjecture , collatz graph , 3x + 1 problem , 3n + 1 function , stopping time , residue class , permutations in lexicographic ordering , binomial coefficients , iterative algorithm , binary tuple , diophantine equation , self - reference , a020914 , a177789 , a100982    _ note _ : this paper is in the first place an analysis of the collatz problem and contains no proofs . but </S>",
    "<S> all theorems in this text are based on algorithms , which are shown in this paper . in the sense of mathematical correctness all theorems and algorithms in this paper are conjectures . </S>"
  ]
}
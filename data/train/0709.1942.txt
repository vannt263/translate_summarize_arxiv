{
  "article_text": [
    "[ sec : introduction ] this paper studies polygonizations of a fixed planar point set @xmath0 of @xmath1 points .",
    "let the @xmath1 points be labeled @xmath3 , @xmath4 .",
    "a _ polygonization _ of @xmath0 is a permutation @xmath5 of @xmath6 that determines a polygon : @xmath7 is a simple ( non - self - intersecting ) polygon .",
    "we will abbreviate `` simple polygon '' to _ polygon _ throughout . as long as @xmath0 does not lie in one line , which we will henceforth assume , there is at least one polygon whose vertex set is @xmath0 .",
    "a point set @xmath0 may have as few as @xmath8 polygonization , if @xmath0 is in convex position , is in convex position if every point in @xmath0 is on the hull of @xmath0 . ] and as many as @xmath9 polygonizations . for",
    "the latter , see fig .",
    "[ fig : one.pocket.polygonization]a .",
    "our goal in this work is to develop a computationally natural and efficient method to explore all polygonizations of a fixed set @xmath0 .",
    "one motivation is the generation of `` random polygons '' by first generating a random @xmath0 and then selecting a random polygonization of @xmath0 .",
    "generating random polygons efficiently is a long unsolved problem ; only heuristics  @xcite or algorithms for special cases  @xcite are known .",
    "our work can be viewed as following a suggestion in the latter paper :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ `` start with a ... simple polygon and apply some simplicity - preserving , reversible operations ... with the property that any simple polygon is reachable by a sequence of operations '' _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    our two operations are called _ stretch _ and _ twang _ ( defined in section  [ sec : stretches.twangs ] ) . neither is simplicity preserving , but they are nearly so in that they produce polygonal wraps defined as follows .",
    "_ a _ polygonal wrap [ def : polygonal.wrap ]    fig .",
    "[ fig : one.pocket.polygonization]b shows a polygonal wrap with five double - contacts ( @xmath10 and @xmath11 ) .",
    "note that a polygon is a polygonal wrap without double - contact points .",
    "stretches and twangs take one polygonal wrap to another . a stretch followed by a natural sequence of twangs , which we call a _ cascade",
    "_ , constitutes a _",
    "forward move_. forward moves ( described in further detail in section  [ sec : twang.cascades ] ) take a polygon to a polygon , i.e. , they are simplicity preserving .",
    "reverse moves will be introduced in section  [ sec : reverse ] .",
    "a _ move _ is either a forward or a reverse move .",
    "we call a stretch or twang an _ atomic move _ to distinguish it from the more complex forward and reverse moves .",
    "our main result is that the configuration space of polygonizations for a fixed @xmath0 is connected by forward / reverse moves , each of which is composed of a number of stretches and twangs , and that the diameter of the space is @xmath2 moves .",
    "we can bound the worst - case number of atomic moves constituting a particular forward / reverse move by the geometry of the point set .",
    "experimental results on random point sets show that , in the practical situation that is one of our motivations , the bound is small , perhaps even constant .",
    "we have also established loose bounds on the worst - case number of atomic operations as a function of @xmath1 : an exponential upper bound and a quadratic lower bound . tightening these bounds",
    "has so far proven elusive and is an open problem .",
    "one can view our work as in the tradition of connecting discrete structures ( e.g. , triangulations , matchings ) via local moves ( e.g. , edge flips , edge swaps ) .",
    "our result is comparable to that in  @xcite , which shows connectivity of polygonizations in @xmath12 edge - edge swap moves through intermediate self - crossing polygons .",
    "the main novelty of our work is that the moves , and even the stretches and twangs , never lead to proper crossings , for polygonal wraps have no such crossings .",
    "we explore the possible application to random polygons briefly in section  [ sec : random.polygons ] . for the majority of this paper ,",
    "we concentrate on defining the moves and establishing connectivity .",
    "points that admits @xmath13 polygonizations .",
    "( b ) polygonal wrap @xmath14 with @xmath15 ( c ) a polygonization with one pocket with lid @xmath16 . ]",
    "[ fig : one.pocket.polygonization ]    we begin by defining pockets , which play a central role in our algorithms for polygonal transformations . then in section  [ sec : swaps.hops ] we describe two natural operations that transform one polygon into another but fail to achieve connectivity of the configuration space of polygonizations , which motivates our definitions of stretches and twangs in section  [ sec : stretches.twangs ] . following these preliminaries , we establish connectivity and compute the diameter in sections  [ sec : single.pocket.reduction][sec : connectivity ] .",
    "we conclude with open problems in section  [ sec : open.problems ] .",
    "[ sec : pockets ] let @xmath17 be a polygonization of @xmath0 .",
    "a hull edge @xmath16 that is not on @xmath18 is called a _",
    "pocket lid_. the polygon external to @xmath17 bounded by @xmath17 and @xmath16 is a _",
    "pocket _ of @xmath17 .",
    "any point set @xmath0 not in convex position has a polygonization with one pocket only  _ @xcite_. [ lemma : one.pocket ]    for a fixed hull edge @xmath16 , we define the canonical polygonization of @xmath0 to be a polygon with a single pocket with lid @xmath16 ( cf . lemma  [ lemma : one.pocket ] ) in which the pocket vertices are ordered by angle about vertex @xmath19 , and from closest to farthest from @xmath19 if along the same line through @xmath19 .",
    "we call this ordering the _ canonical order _ of the pocket vertices ; see fig .",
    "[ fig : one.pocket.polygonization]c .",
    "let @xmath17 be a polygon defined by a circular index sequence @xmath20 .",
    "we examine operations that permute this sequence , transforming @xmath17 into a new polygon with the same set of vertices linked in a different order . throughout the paper we use @xmath21 to denote the closed triangle with corners @xmath19 , @xmath22 and @xmath23 .",
    "[ sec : swaps.hops ] we begin by defining two natural transformation operations , a _ swap _ and a _",
    "hop_. a swap operation is a transposition of two consecutive vertices of @xmath17 that results in a new ( non - self - intersecting ) polygon .",
    "[ fig : swaps]a illustrates the swap operation .",
    "it is well known that transpositions connect all permutations , but this is not the case for swaps .",
    "because we require that the resulting polygon be simple , a vertex pair can not be swapped if the operation results in a self - intersecting polygon . fig .",
    "[ fig : swaps]b shows an example of a polygon for which no vertex pair can be swapped without creating an edge crossing .",
    "thus , swaps do not suffice to connect all polygonizations , which motivates our definition of a more powerful move , which we call a _",
    "hop_.       let @xmath24 and @xmath25 be two pocket vectors .",
    "we define a lexicographic ordering relation on them : @xmath26 iff @xmath27 .",
    "the steady odometer - like decrementing of the pocket vector evident in the above example is the sense in which a twang cascade simplifies pocket structure :        case 1 : : :    @xmath22 is a lid vertex of pocket @xmath29 .",
    "+    we show by contradiction that this case is impossible : since    @xmath22 is a lid vertex of pocket @xmath29 , it must    be a vertex on the hull of the parent of @xmath29 .",
    "but this    contradicts our assumption that @xmath29 is the highest    pocket having @xmath22 on its hull .",
    "( if @xmath22 has no    parent because it is a level-1 pocket , then it must be on the hull of    the entire polygon , which is a contradiction since such vertices are    never twanged . )    +    for example , in fig .",
    "[ fig : subpockets]c , let @xmath31 .",
    "then    @xmath22 is a lid vertex of pocket @xmath32 at    level 3 , but it is also a non - lid hull vertex of pocket    @xmath33 at level 2 .",
    "case 2 : : :    @xmath22 is not a lid vertex of pocket @xmath29 .    +    this case implies that @xmath19 , @xmath22 , and    @xmath23 are all part of pocket @xmath29 s boundary ,    as are edges @xmath16 and @xmath34 .",
    "because a twang is    performed at @xmath22 , we know @xmath22 is a corner    point of hull(@xmath29 ) .",
    "thus after the twang ,    @xmath35 ) loses this corner point and    @xmath36 goes down by one .",
    "+    now we show that the pocket counts for pockets at levels    @xmath37 do not change as a result of @xmath28 ,    and in addition no other pocket besides @xmath29 at level    @xmath38 changes .",
    "first , observe that in addition to    @xmath29 , the only pockets that may include edges    @xmath16 and @xmath34 are @xmath29 s    ancestors and descendents in the hierarchy .",
    "therefore ,    @xmath28 affects only these pockets and no others . of these    pockets ,",
    "only changes in @xmath29 s ancestors could    increase the pocket vector .",
    "we show now that the counts for the    ancestors do not changed .",
    "first observe that only the lid vertices of    a pocket are hull vertices of its parent .",
    "since @xmath22 is not    a lid vertex , @xmath28 can not change the hull of its    parent , and similarly can not change the hull of any of its ancestors .",
    "if the hulls do not change , then the point counts for the pockets do    not change .",
    "let @xmath40 be the maximum length of a pocket vector : @xmath41 . in the worst case , a decrement of @xmath42 by 1",
    "is followed by @xmath43 each being ( somehow ) reset to @xmath1 and counting down through their full range .",
    "if this happens for every decrement , then the `` odometer '' counts through all @xmath44 distinct possible pocket vectors .",
    "note particularly the change in the pocket vector from fig .",
    "[ fig : subpockets]c to  d : although @xmath45 decrements from @xmath46 to @xmath47 , @xmath48 increases from @xmath49 to @xmath50 ( and , in addition , @xmath51 grows in depth ) .",
    "it is this phenomenon that makes establishing a better bound via the pocket hierarchy problematical ."
  ],
  "abstract_text": [
    "<S> we show that the space of polygonizations of a fixed planar point set @xmath0 of @xmath1 points is connected by @xmath2 `` moves '' between simple polygons . each move is composed of a sequence of atomic moves called `` stretches '' and `` twangs '' . </S>",
    "<S> these atomic moves walk between weakly simple `` polygonal wraps '' of @xmath0 . </S>",
    "<S> these moves show promise to serve as a basis for generating random polygons .    </S>",
    "<S> = 1 </S>"
  ]
}
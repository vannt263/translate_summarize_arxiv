{
  "article_text": [
    "this paper deals with a variant of the secretary model , where contracts are temporary .",
    "_ e.g. _ , employees are hired for short - term contracts , or re - usable resources are rented out repeatedly , etc .",
    "if an item is chosen , it  exists \" for a fixed length of time and then disappears .",
    "motivation for this problem are web sites such as airbnb and odesk .",
    "airbnb offers short term rentals in competition with classic hotels .",
    "a homeowner posts a rental price and customers either accept it or not .",
    "odesk is a venture capitalizing on freelance employees .",
    "a firm seeking short term freelance employees offers a salary and performs interviews of such employees before choosing one of them .",
    "we consider an online setting where items have values determined by an adversary , (  no information \" as in the standard model @xcite ) , combined with stochastic arrival times that come from a prior known distribution ( in contrast to the random permutation assumption and as done in @xcite ) .",
    "unlike much of the previous work on online auctions with stochastic arrival / departure timing ( @xcite ) , we do not consider the issue of incentive compatibility with respect to timing , and assume that arrival time can not be misrepresented .",
    "the temp secretary problem can be viewed    1 .   as a problem related to hiring temporary workers of varying quality subject to workplace capacity constraints .",
    "there is some known prior @xmath1 on the arrival times of job seekers , some maximal capacity , @xmath2 , on the number of such workers that can be employed simultaneously , and a bound @xmath3 on the total number than can be hired over time .",
    "if hired , workers can not be fired before their contract is up .",
    "alternately , one can view the temp secretary problem as dealing with social welfare maximization in the context of rentals .",
    "customers arrive according to some distribution . a firm with capacity",
    "@xmath2 can rent out up to @xmath2 boats simultaneously , possibly constrained to no more than @xmath3 rentals overall .",
    "the firm publishes a rental price , which may change over time _",
    "after _ a customer is serviced . a customer will choose to rent if her value for the service is at least the current posted price .",
    "such a mechanism is inherently dominant strategy truthful , with the caveat that we make the common assumption that customers reveal their true values in any case .",
    "we give two algorithms , both of which are quite simple and offer posted prices for rental that vary over time . assuming that the time of arrival can not be manipulated",
    ", this means that our algorithms are dominant strategy incentive compatible .    for rental duration @xmath0 , capacity @xmath4 , no budget restrictions , and arrival times from an arbitrary prior , the _ time - slice algorithm _ gives a @xmath5 competitive ratio . for arbitrary @xmath2",
    "the competitive ratio of the time - slice algorithm is at least @xmath6 .",
    "this can be generalized to more complex settings , see table [ tab : results3 ] .",
    "the time slice algorithm divides time into slices of length @xmath0 .",
    "it randomly decides if to work on even or odd slices . within each slice",
    "it uses a variant of some other secretary problem ( _ e.g. _ , @xcite , @xcite , @xcite ) except that it keeps track of the cumulative distribution function rather than the number of secretaries .",
    "the more technically challenging _ charter algorithm _ is strongly motivated by the @xmath3-secretary algorithm of @xcite . for capacity",
    "@xmath2 , employment period @xmath0 , and budget @xmath7 ( the only relevant values ) , the charter algorithm does the following :    * recursively run the algorithm with parameters @xmath8 on all bids that arrive during the period @xmath9 .",
    "* take the bid of rank @xmath10 that appeared during the period @xmath9 , if such rank exists and set a threshold @xmath11 to be it s value . if no such rank exists set the threshold @xmath11 to be zero .",
    "* greedily accept all items that appear during the period @xmath12 that have value at least @xmath11  subject to not exceeding capacity ( @xmath2 ) or budget ( @xmath3 ) constraints .",
    "for @xmath4 the competitive ratio of the charter algorithm is at least @xmath13 two special cases of interest are @xmath14 ( no budget restriction ) , in which case the expression above is at least @xmath15 .",
    "we also show an upper bound of @xmath16 for @xmath17 . as @xmath0 approaches zero",
    "the two bounds converge to @xmath18 .",
    "another case of interest is when @xmath3 is fixed and @xmath0 approaches zero in which this becomes the guarantee given by kleinberg s @xmath3-secretary algorithm .    for arbitrary @xmath2",
    "the competitive ratio of the charter algorithm is at least @xmath19    we remark that neither the time slice algorithm nor the charter algorithm requires prior knowledge of @xmath20 , the number of items due to arrive .    at the core of the analysis of the charter algorithm we prove",
    "a bound on the expected size of the maximum independent set of a random unit interval graph .",
    "( see table [ tab : results1 ] ) . in this random graph model",
    "we draw @xmath20 intervals , each of length @xmath0 , by drawing their left endpoints uniformly in the interval @xmath21 .",
    "we prove that the expected size of a maximum independent set in such a graph is about @xmath22 .",
    "we say that a set of length @xmath0 segments that do not overlap is @xmath0-independent . similarly , a capacity @xmath2 @xmath0-independent set allows no more than @xmath2 segments overlapping at any point .",
    "note that if @xmath23 then this expected size is about @xmath18 .",
    "this is intuitively the right bound as each interval in the maximum independent set rules out on average one other interval from being in the maximum independent set .",
    "we show that a random unit interval graph with @xmath20 vertices has a capacity @xmath2 @xmath0-independent subset of expected size at least @xmath24 .",
    "we also show that when @xmath25 the expected size of the maximum capacity @xmath2 @xmath0-independent subset is no more than @xmath26 .",
    "these results may be of independent interest .",
    "* related work : * worst case competitive analysis of interval scheduling has a long history , e.g. , @xcite .",
    "this is the problem of choosing a set of non - overlapping intervals with various target functions , typically , the sum of values .",
    "@xcite introduce the question of auctions for reusable goods .",
    "they consider a worst case mechanism design setting .",
    "their main goal is addressing the issue of time incentive compatibility , for some restricted set of misrepresentations .",
    "the secretary problem is arguably due to johannes kepler ( 1571 - 1630 ) , and has a great many variants , a survey by @xcite contains some 70 references .",
    "permutation \" model is that items arrive in some random order , all @xmath27 permutations equally likely . maximizing the probability that the best item is chosen ,",
    "when the items appear in random order , only comparisons can be made , and the number of items is known in advance , was solved by @xcite and by @xcite .",
    "a great many other variants are described in ( @xcite ) , differing in the number of items to be chosen , the target function to be maximized , taking discounting into account , etc .",
    "an alternative to the random permutation model is the stochastic arrival model , introduced by karlin @xcite in a  full information \" ( known distribution on values ) setting .",
    "bruss @xcite subsequently studied the stochastic arrival model in a no - information model ( nothing is known about the distribution of values ) .",
    "recently , @xcite made use of the stochastic arrival model as a tool for the analysis of algorithms in the permutation model .",
    "much of the recent interest in the secretary problem is due to it s connection to incentive compatible auctions and posted prices @xcite .",
    "most directly relevant to this paper is the @xmath3-secretary algorithm by r. kleinberg @xcite . constrained to picking no more than @xmath3 secretaries , the total value of the secretaries picked by this algorithm is at least a @xmath28 of the value of the best @xmath3 secretaries .",
    "babaioff _ et al . _",
    "@xcite introduced the _ knapsack secretary problem _ in which every secretary has some weight and a value , and one seeks to maximize the sum of values subject to a upper bound on the total weight .",
    "they give a @xmath29 competitive algorithm for this problem .",
    "( note that if weights are one then this becomes the @xmath3-secretary problem ) .",
    "the matroid secretary problem , introduced by babaioff et al .",
    "@xcite , constrains the set of secretaries picked to be an independent set in some underlying matroid .",
    "subsequent results for arbitrary matriods are given in @xcite .",
    "another generalization of the secretary problem is the online maximum bipartite matching problem .",
    "see @xcite .",
    "secretary models with full information or partial information ( priors on values ) appear in @xcite and @xcite .",
    "this was in the context of submodular procurement auctions ( @xcite ) and budget feasible procurement ( @xcite ) .",
    "other papers considering a stochastic setting include @xcite .    in our analysis , we give a detailed and quite technical lower bound on the size of the maximum independent set in a random unit interval graph ( produced by the greedy algorithm ) .",
    "independent sets in other random interval graph models were previously studied in @xcite .",
    "each item @xmath30 has a value @xmath31 , we assume that for all @xmath32 , @xmath33 by consistent tie breaking , and we say that @xmath34 iff @xmath35 . given a set of items @xmath36 , define @xmath37 and @xmath38 .",
    "given a set @xmath36 and a density distribution function @xmath39 defined on @xmath21 , let @xmath40 be a random mapping where @xmath41 is drawn independently from the distribution @xmath39 .",
    "the function @xmath42 is called a _ stochastic arrival _ function , and we interpret @xmath41 , @xmath43 , to be the time at which item @xmath30 arrives .",
    "for the special case in which @xmath39 is uniform we refer to @xmath42 as @xmath44 .    in the problems we consider ,",
    "the items arrive in increasing order of @xmath42 .",
    "if @xmath45 the relative order of arrival of @xmath30 and @xmath46 is arbitrary .",
    "an online algorithm may select an item only upon arrival .",
    "if an item @xmath30 was selected , we say that the online algorithm _ holds _",
    "@xmath30 for @xmath0 time following @xmath41 .",
    "an online algorithm @xmath47 for the temp secretary problem may hold at most one item at any time and may select at most @xmath3 items in total .",
    "we refer to @xmath3 as the _ budget _ of @xmath47 .",
    "the goal of the algorithm is to maximize the expected total value of the items that it selects .",
    "we denote by @xmath48 the set of items chosen by algorithm @xmath47 on items in @xmath36 appearing according to stochastic arrival function @xmath42 .",
    "the set of the arrival times of the items selected by an algorithm for the temp secretary problem is said to be _",
    "@xmath49-independent_. formally , a set @xmath50 is said to be _ @xmath49-independent _ if for all @xmath51 , @xmath52 we have that @xmath53 .",
    "given @xmath17 , a budget @xmath3 , a set @xmath36 of items , and a mapping @xmath54 we define @xmath55 to be a @xmath0-independent set @xmath56 , @xmath57 , that maximizes the sum of values .",
    "given rental period @xmath17 , distribution @xmath39 , and budget @xmath3 , the competitive ratio of an online algorithm @xmath47 is defined to be @xmath58 the competitive ratio of the temp secretary problem is the supremum over all algorithms @xmath47 of the competitive ratio of @xmath47 .",
    "note that when @xmath59 , the the temp secretary problem reduces to kleinberg s @xmath3-secretary problem .",
    "we extend the @xmath0-temp secretary problem by allowing the algorithm to hold at most @xmath2 items at any time .",
    "another extension we consider is the _ knapsack temp secretary problem _ where each item has a weight and we require the set held by the algorithm at any time to be of total weight at most @xmath60 .",
    "also , we define the _ matroid temp secretary problem _ where one restricts the set of items held by the algorithm at any time to be an independent set in some matroid @xmath61 .",
    "more generally , one can define a temp secretary problem with respect to some arbitrary predicate @xmath62 that holds on the set of items held by an online algorithm at all times @xmath63 .",
    "this framework includes all of the variants above .",
    "the optimal solution with respect to @xmath62 is also well defined .",
    "in this section we describe a simple time slicing technique .",
    "this gives a reduction from temp secretary problems , with arbitrary known prior distribution on arrival times , to the ",
    "usual \" continuous setting where secretaries arrive over time , do not depart if hired , and the distribution on arrival times is uniform .",
    "the reduction is valid for many variants of the temp secretary problem , including the matroid secretary problem , and the knapsack secretary problem .",
    "we remark that although the matriod and knapsack algorithms are stated in the random permutation model , they can be replaced with analogous algorithms in the continuous time model and can therefore be used in our context .",
    "we demonstrate this technique by applying it to the classical secretary problem ( hire the best secretary ) .",
    "we obtain an algorithm which we call @xmath64 for the temp secretary problem with arbitrary prior distribution on arrival times that is @xmath65 competitive .",
    "consider the @xmath66 time intervals ( _ i.e. _ slices ) @xmath67 , @xmath68 .",
    "we split every such interval into two , @xmath69 , @xmath70 .",
    "is an integer . ]",
    "initially , we flip a fair coin and with probability @xmath18 decide to pick points only from the left halves ( @xmath71 s ) or only from the right halves ( @xmath72 s ) . in each such interval",
    "we pick at most one item by running the following modification of the continuous time secretary algorithm .",
    "the continuous time secretary algorithm @xcite observes the items arriving before time @xmath73 , sets the largest value of an observed item as a threshold , and then chooses the first item ( that arrives following time @xmath73 ) of value greater than the threshold .",
    "the modified continuous time secretary algorithm observes items as long as the cumulative distribution function of the current time is less than @xmath73 , then it sets the largest value of an observed item as a threshold compute a threshold , and choose the next item of value larger than the threshold .",
    "it is clear that any two points picked by this algorithm have arrival times separated by at least @xmath0 .",
    "[ theorem : simple ] the algorithm @xmath64 is @xmath74 competitive .",
    "the analysis is as follows .",
    "fix the mapping of items to each of the left intervals @xmath71 s and to each of the right intervals @xmath72 s ( leaving free the assignment of items to specific arrival times within their the intervals they are assigned to ) . let @xmath75 ( @xmath76 ) be the sum of the items of maximum value over all intervals @xmath71 ( @xmath72 ) .",
    "let @xmath77 be the average optimal value conditioned on this mapping of items to intervals .",
    "clearly , @xmath78    for any interval @xmath79 s ( @xmath71 s ) @xmath64 gain",
    "at least @xmath73 over the top value in the interval conditioned on the event that @xmath64 does nt ignore this interval , this happens with probability @xmath18 .",
    "therefore the expected sum of values achieved by @xmath64 is at least @xmath80 substitution ( [ eq : sumops ] ) into ( [ eq : sliceprelast ] ) we get the lemma .",
    "appropriately choosing times ( rather than number of elements ) as a function of the prior distribution allows us to do the same for other variants of the secretary problem , the knapsack ( achieving a competitive ratio of @xmath81 , see @xcite ) and matriod ( @xmath82 when @xmath83 is the rank of the matroid , see @xcite ) .",
    "in this section we give an improved algorithm , referred as the charter algorithm @xmath84 , for the temp secretary problem with uniform arrival times and capacity @xmath85 ( at most one secretary can be hired at any time ) .",
    "as it is never the case that more than @xmath86 items can be selected , setting @xmath87 effectively removes the budget constraint .",
    "note that @xmath88 is kleinberg s algorithm for the @xmath3-secretary problem , with some missing details added to the description .    to analyze the charter algorithm",
    "we establish a lower bound on the expected size of the maximum @xmath0-independent subset of a set of uniformly random points in @xmath21 .",
    "we apply this lower bound to the subset of the items that kleinberg s algorithm selects .",
    "this charter algorithm , @xmath84 gets parameters @xmath3 ( the maximal number of rentals allowed ) and @xmath0 ( the rental period ) as is described in detail in algorithm [ algo : tempalg ] . as the entire period is normalized to @xmath21 , having @xmath90 is irrelevant .",
    "thus , we assume that @xmath91 .. ]    we show that @xmath92 gains in expectation about @xmath93 of the top @xmath3 values of @xmath36 , which implies that the competitive ratio ( see definition ( [ def : comp_ration ] ) ) of @xmath94 is at least about @xmath93 .",
    "note that for @xmath87 , @xmath94 has a competitive ratio close to @xmath18 , while for @xmath95 , @xmath94 has a competitive ratio close to @xmath85 .",
    "[ algo : tempalg ]    it is easy to see that @xmath84 , chooses a @xmath0-independent set of size at most @xmath3 .",
    "the main theorem of this paper is the following generalization of kleinberg s @xmath3-secretary problem :    theoremmainthm [ theorem : main ] for any set of items @xmath96 , @xmath97 and any positive integer @xmath98 : @xmath99 } \\geq \\frac{1}{1+\\gamma k } { \\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - \\beta(\\gamma , k){\\aftergroup\\egroup\\originalright})t_k(s),\\ ] ] where @xmath100 and the expectation is taken oven all uniform mappings of @xmath56 to the interval @xmath21 .",
    "( note that the right hand side of equation ( [ eq : maintheorem ] ) is negative for @xmath101 . )",
    "we prove theorem [ theorem : main ] by induction on @xmath3 .",
    "for @xmath102 the theorem holds vacuously .",
    "the profit , @xmath103 , on those items that arrive during the time interval @xmath9 is given by the inductive hypothesis is @xmath104 , where @xmath105 the set of items chosen by the algorithm during the time period @xmath9 . ] .",
    "however , the inductive hypothesis gives this profit , @xmath103 , in terms of the top @xmath106 elements that arrive before time @xmath18 , and not in terms of @xmath107 , the value of the top @xmath3 items overall .",
    "thus , we need to relate @xmath103 to @xmath107 . in lemma",
    "[ lem : bobby1 ] we show that @xmath103 is about 1/2 of @xmath107 .",
    "let @xmath108 be the set of items that arrive in the time interval @xmath12 and have value greater than the threshold @xmath11 .",
    "from @xmath108 we greedily pick a @xmath0-independent subset after the arrival time of the last item chosen in the 1st half . ] .",
    "it is easy to see that this set is in fact a maximal @xmath0-independent subset .    to bound the expected profit from the items in @xmath108 we first bound the size of the maximal @xmath0-independent set amongst these items . to do so we use the following general theorem",
    "( see also section [ sec : independent ] and section [ sec : half_details ] ) .",
    "theoremhalfthm [ theorem : half ]",
    "let @xmath109 be a set of independently uniform samples , @xmath110 , from the real interval @xmath21 . for @xmath111 , @xmath112 where @xmath113 denotes the size of the largest @xmath0-independent subset of @xmath114 .",
    "we apply theorem [ theorem : half ] to the items in @xmath108 .",
    "we can apply this theorem since arrival times of items in @xmath108 are uniformly distributed in the 2nd half . specifically , we give a lower bound on the expected profit of the algorithm from the items in the 2nd half as follows :    1 .   condition on the size of @xmath108 .",
    "2 .   subsequently , condition on the set of arrival times @xmath115 of the items in @xmath108 but _ not _ on which item in @xmath108 arrives when .",
    "this conditioning fixes the @xmath0-independent set selected greedily by the algorithm .",
    "we take the expectation over all bijections @xmath44 whose image on the domain @xmath108 is the set @xmath115 . the expected profit ( over the set @xmath108 and over these bijections )",
    "is  approximately \" @xmath116",
    "the  approximately \" is because of some technical difficulties : * we can not ignore the last item amongst those arriving prior to time 1/2 . if one such item was chosen at some time @xmath117 then arrivals during the period @xmath118 can not be chosen .",
    "* we can not choose more than @xmath3 items in total , if the algorithm choose @xmath119 items from the time interval @xmath9 , it can not choose more than @xmath120 items from the time interval @xmath12 , but @xmath120 may be smaller than the size of the @xmath0-independent set from @xmath108 .",
    "4 .   to get an unconditional lower bound we average equation ( [ eq : expectedprofit ] ) over the possible sizes of the @xmath0-independent set as given by theorem [ theorem : half ] .",
    "[ theorem : upperbound ] for the temp secretary problem where item arrival times are taken from the uniform distribution , for any @xmath121 , any online algorithm ( potentially randomized ) has a competitive ratio @xmath122 .",
    "let @xmath47 denote the algorithm .",
    "consider the following two inputs :    1 .",
    "the set @xmath56 of n-1 items of value @xmath85 .",
    "the set @xmath123 where @xmath124 .",
    "note that these inputs are not of the same size ( which is ok as the number of items is unknown to the algorithm ) .",
    "condition the mapping @xmath125 ( but not the mapping of @xmath126 ) .",
    "if @xmath47 accepts an item @xmath30 at time @xmath127 we say that the segment @xmath128 is _",
    "covered_. for a fixed @xmath44 let @xmath129 be the expected fraction of @xmath21 which is not covered when running @xmath47 on the set @xmath56 with arrival times @xmath44 . this expectation is over the coin tosses of @xmath47 .",
    "let @xmath130 be @xmath131 .",
    "the number of items that @xmath47 picks on the input @xmath56 with arrival time @xmath44 is at most @xmath132 .",
    "taking expectation over all mappings @xmath125 we get that the value gained by @xmath47 is at most @xmath133 .    as @xmath134",
    "the optimal solution consists of @xmath135 items of total value @xmath135",
    ". therefore the competitive ratio of @xmath47 is at most @xmath136    note that @xmath129 is exactly the probability that @xmath47 picks @xmath126 on the input @xmath137 ( this probability is over the mapping of @xmath126 to @xmath21 conditioned upon the arrival times of all the items in @xmath138 )",
    ". therefore the competitive ratio of @xmath47 on the input @xmath139 is @xmath140 therefore the competitive ratio of @xmath47 is no more than the minimum of the two upper bounds ( [ eq : bound1 ] ) and ( [ eq : bound2 ] ) @xmath141",
    "recall the definition of @xmath114 and @xmath113 from theorem [ theorem : half ] .    define the random variable @xmath143 , @xmath144 to be the @xmath145th smallest point in @xmath114 .",
    "define the random variable @xmath146 to be the number of points from @xmath114 that lie in the interval @xmath147 .",
    "note that at most one of these points can belong to a @xmath0-independent set .",
    "the _ greedy algorithm _ constructs a maximal @xmath0-independent set by traversing points of @xmath114 from the small to large and adding a point whenever possible .",
    "let @xmath148 be a random variable with binary values where @xmath149 iff @xmath143 was chosen by the greedy algorithm .",
    "it follows from the definition that @xmath150 gives the size of the maximal independent set , @xmath113 , and that @xmath151 .",
    "note that @xmath152 , one for the point @xmath143 itself , and @xmath153 as the expected number of uniformly random points that fall into an interval of length @xmath0 .",
    "if @xmath146 and @xmath148 were independent random variables , it would follow that @xmath154},\\ ] ] and , thus , @xmath155    unfortunately , @xmath146 and @xmath148 are not independent , and the rest of the proof of theorem [ theorem : half ] in section [ sec : half_details ] primarily deals with showing that this dependency is insignificant .",
    "we ve introduced online optimization over temporal items under stochastic inputs subject to conditions of two different types :    *  vertical \" constraints : predicates on the set of items held at all times @xmath63 . in this class ,",
    "we ve considered conditions such as no more than @xmath2 simultaneous items held at any time , items held at any time of total weight @xmath156 , items held at any time must be independent in some matroid . *  horizontal \" constraints : predicates on the set of items over all times . here , we ve considered the condition that no more than @xmath3 employees be hired over time .",
    "one could imagine much more complex settings where the problem is defined by arbitrary constraints of the first type above , and arbitrary constraints of the 2nd type .",
    "for example , consider using knapsack constraints in both dimensions .",
    "the knapsack constraint for any time @xmath63 can be viewed as the daily budget for salaries .",
    "the knapsack constraint over all times can be viewed as the total budget for salaries .",
    "many other natural constraints suggest themselves .",
    "it seems plausible that the time slice algorithm can be improved , at least in some cases , by making use of information revealed over time , as done by the charter algorithm .",
    "10    moshe babaioff , michael dinitz , anupam gupta , nicole immorlica , and kunal talwar .",
    "secretary problems : weights and discounts . in soda 09 ,",
    "pages 12451254 .",
    "moshe babaioff , nicole immorlica , david kempe , and robert kleinberg .",
    "a knapsack secretary problem with applications . in _",
    "approximation , randomization , and combinatorial optimization .",
    "algorithms and techniques _ , volume 4627 of _ lecture notes in computer science _ , pages 1628 , 2007 .",
    "moshe babaioff , nicole immorlica , david kempe , and robert kleinberg .",
    "online auctions and generalized secretary problems .",
    ", 7(2):7:17:11 , june 2008 .",
    "moshe babaioff , nicole immorlica , and robert kleinberg .",
    "matroids , secretary problems , and online mechanisms . in soda 2007 ,",
    "pages 434443 .",
    "ashwinkumar badanidiyuru , robert kleinberg , and yaron singer .",
    "learning on a budget : posted price mechanisms for online procurement . in ec 12 , pages 128145 , 2012 .",
    "s.  boucheron and w.  fernandez de  la vega . on the independence number of random interval graphs .",
    ", 10:385396 , 9 2001 .",
    "f.  thomas bruss . a unified approach to a class of best choice problems with an unknown number of options .",
    ", 12(3):882889 , 08 1984 .",
    "sourav chakraborty and oded lachish .",
    "improved competitive ratio for the matroid secretary problem . in soda 12 , pages 17021712 .",
    "siam , 2012 .",
    "coffman , e.g. , bjorn poonen , and peter winkler . packing random intervals .",
    ", 102(1):105121 , 1995 .",
    "nikhil  r devanur and thomas  p hayes .",
    "the adwords problem : online keyword matching with budgeted bidders under random permutations . in ec9 , pages 7178 .",
    "michael dinitz .",
    "recent advances on the matroid secretary problem . , 44(2):126142 , june 2013 .",
    "the optimal choice of the stopping moment for a markov process .",
    ", pages 238240 , 1963 .",
    "moran feldman , joseph naor , and roy schwartz . improved competitive ratios for submodular secretary problems ( extended abstract ) . in _ approx - random _ , volume 6845 of _ lncs _ , pages 218229 .",
    "springer , 2011 .",
    "moran feldman , ola svensson , and rico zenklusen . a simple _ o_(log log(rank))-competitive algorithm for the matroid secretary problem . in soda 2015 , pp 11891201 .",
    "siam , 2015 .",
    "p.  r. freeman .",
    "the secretary problem and its extensions : a review .",
    ", 51(2):189206 , 1983 .",
    "guillermo gallego and garrett van ryzin . optimal dynamic pricing of inventories with stochastic demand over finite horizons .",
    ", 40(8):9991020 , august 1994 .",
    "oliver gbel , martin hoefer , thomas kesselheim , thomas schleiden , and berthold vcking .",
    "online independent set beyond the worst - case : secretaries , prophets , and periods . in _",
    "volume 8573 of _ lncs _ , pages 508519 .",
    "springer , 2014 .",
    "mohammad  taghi hajiaghayi , robert kleinberg , and david  c. parkes .",
    "adaptive limited - supply online auctions . in ec 04 , pages 7180 , 2004 .",
    "mohammad  taghi hajiaghayi , robert  d. kleinberg , mohammad mahdian , and david  c. parkes .",
    "online auctions with re - usable goods . in ec 05 , pages 165174 , 2005 .",
    "joyce justicz , edward  r. scheinerman , and peter  m. winkler . random intervals . ,",
    "97(10):pp . 881889 , 1990 .",
    "sam karlin .",
    "stochastic models and optimal policy for selling an asset .",
    "pages 148158 , 1962 .",
    "thomas kesselheim , klaus radke , andreas tnnis , and berthold vcking .",
    "an optimal online algorithm for weighted bipartite matching and extensions to combinatorial auctions . in _",
    "volume 8125 of _ lncs _ , pages 589600 .",
    "springer , 2013 .",
    "thomas kesselheim , andreas tnnis , klaus radke , and berthold vcking .",
    "primal beats dual on online packing lps in the random - order model . in _ stoc14 _ , pages 303312 .",
    "acm , 2014 .",
    "robert  d. kleinberg .",
    "a multiple - choice secretary algorithm with applications to online auctions . in _ soda05 _ , pages 630631 .",
    "siam , 2005 .",
    "nitish korula and martin pl .",
    "algorithms for secretary problems on graphs and hypergraphs . in _ icalp09 _ ,",
    "volume 5556 of _ lncs _ , pages 508520 .",
    "springer , 2009 .",
    "oded lachish .",
    "o(log log rank ) competitive - ratio for the matroid secretary problem . ,",
    "abs/1403.7343 , 2014 .",
    "dynamic programming and decision theory . , pages 3952 , 1961 .",
    "r.  lipton .",
    "online interval scheduling . in soda 94 ,",
    "pages 302311 , 1994 .",
    "yaron singer and manas mittal .",
    "pricing mechanisms for crowdsourcing markets . in www 13 ,",
    "pages 11571166 , 2013 .",
    "gerhard  j. woeginger .",
    "on - line scheduling of jobs with fixed start and end times .",
    ", 130(1):5  16 , 1994 .",
    "[ tab : results1 ]        .size of maximal @xmath0-independent set . uniformly prior on arrivals .",
    "[ cols= \" < \" , ]     & @xmath157 & @xcite & theorem [ theorem : simple ] + & & +",
    "the proof is via induction on @xmath3 . for the base case of the induction",
    "we note that for any @xmath158 the theorem holds since @xmath159 .",
    "we hereby assume that the theorem holds for any @xmath160 , and prove the statement for @xmath3 .",
    "the proof is presented top - down .",
    "we refer to lemmata [ lem : sizedoesntmatter ] , [ lem : bobby1 ] and [ lem : second - half ] , whose statement and proof appear subsequently .",
    "let @xmath161 and @xmath162 be the subsets of @xmath36 chosen by algorithm @xmath84 during the time intervals @xmath163 and @xmath164 respectively when applied to @xmath165 .    for the induction step we use the fact that @xmath166 we give a lower bound on the first term in ( [ eq : ind11 ] ) using the induction hypothesis ( after an appropriate transformation ) and we directly lower bound the second term using lemma [ lem : second - half ] .",
    "since lemma [ lem : second - half ] requires that the size @xmath20 of @xmath56 is sufficiently large relative to @xmath3 ( which may not be the case ) we introduce a modification of @xmath84 , algorithm  [ algo : zeroesc ]  denoted by @xmath167 :    [ algo : zeroesc ]    during the time interval @xmath9 , @xmath167 emulates @xmath84 , _",
    "i.e. _ , @xmath168 .",
    "@xmath169 a collection of @xmath170 distinguishable dummy items with zero value .",
    "@xmath171 random uniform mapping @xmath172",
    "@xmath173 @xmath174 @xmath175 next item from @xmath176    by lemma [ lem : sizedoesntmatter ] we have that @xmath177 by definition of @xmath167 above we have that @xmath178    the mapping @xmath179 in equation ( [ eq : induction ] ) , with domain @xmath176 , combines @xmath125 and @xmath180 , this is well defined because @xmath56 and @xmath181 are disjoint .",
    "we give a lower bound for the first term in equation ( [ eq : induction ] ) using the inductive hypothesis .",
    "using lemma [ lem : second - half ] we derive a lower bound for the 2nd term in equation ( [ eq : induction ] ) .    to simplify the notation hereinafter we abbreviate @xmath182 as @xmath183 .",
    "we first give a lower bound on the first term in equation ( [ eq : induction ] ) .",
    "given a set of items @xmath56 , fix the set of items @xmath184 arriving in @xmath9 .",
    "the arrival times of @xmath185 are uniform in @xmath9 .",
    "therefore conditioned on @xmath185 arriving in @xmath9 , the expected profit of @xmath84 from @xmath185 equals @xmath186    by induction we obtain @xmath187    it therefore follows that the expected profit of algorithm @xmath84 from elements arriving in @xmath9 ( without any conditioning on @xmath185 ) , is @xmath188 the set @xmath185 is a uniformly random subset of @xmath56 , therefore applying lemma [ lem : bobby1 ] we get @xmath189 by substituting the lower bound ( [ tamara ] ) into equation ( [ eq : profithalf ] ) we get that @xmath190    where the last inequality in this derivation follows since @xmath191 .",
    "now we give a lower bound on the second term of equation ( [ eq : induction ] ) . by lemma [ lem : second - half ]",
    "( recall that @xmath192 ) we obtain that the expected profit of @xmath84 executed on input @xmath176 during the time interval @xmath193 is at least @xmath194    where @xmath195 as define in theorem [ theorem : half ] .",
    "the last equality follows since @xmath196 , therefore @xmath197 .    substituting the lower bounds (",
    "[ eq : profithalffinal ] ) and ( [ eqn : second - half ] ) into equation ( [ eq : induction ] ) and separating terms that depend on @xmath0 from those that depend on @xmath3 we get    @xmath198    we observe that for all @xmath199 we have @xmath200 similarly for @xmath201 we have @xmath202 substituting ( [ eqn : sumyzstar ] ) into ( [ eq : sizevaluecmp ] ) we obtain the statement of the theorem .",
    "[ lem : sizedoesntmatter ]    for any set @xmath56 @xmath203    since @xmath204 runs exactly as @xmath84 in the time interval @xmath9 the expected value of both of them in this interval will be the same .",
    "hence all we need to prove is @xmath205    the proof splits the probability space @xmath206 into subspaces .",
    "we prove that inequality ( [ eq : lemsecondinterval ] ) holds for each subspace and therefore it holds for the entire probability space .",
    "we break the probability space by conditioning on the following :    * the subset of items of @xmath56 arriving in @xmath9 .",
    "we denote this subset by @xmath185 .",
    "note that once we condition on @xmath185 the following are also fixed * * the subset @xmath207 of the items of @xmath56 arriving in @xmath12 . * * the threshold @xmath11 that @xmath94 use to pick items from @xmath208 . * * the subset @xmath209 of items in @xmath210 with value at least @xmath11 . *",
    "the time @xmath211 in which @xmath84 last chose an element in @xmath9 .",
    "note that given this conditioning @xmath84 ( and @xmath212 ) can first pick an item in @xmath12 after time @xmath213 .",
    "we denote this time by @xmath214 . * the number of elements , @xmath119 , picked by @xmath84 ( and @xmath212 ) in @xmath9 .",
    "* the arrival times @xmath215 , @xmath216 , of the items in @xmath210 .",
    "( note that we do not fix which item of @xmath210 arrives at @xmath217 for any @xmath218 . )",
    "we denote the set @xmath219 by @xmath220 .",
    "this conditioning determines the @xmath0-independent subset @xmath221 of @xmath220 in which @xmath84 picks items of @xmath210 .",
    "let @xmath222 denote the size of the maximum @xmath0-independent subset of @xmath220 .",
    "the size of @xmath221 is the minimum of @xmath120 and @xmath222 .",
    "the expectation of @xmath223 in a subspace defined by the conditioning above is the average over all 1 - 1 mappings of @xmath224 to the arrival times @xmath225 , of the values of the items mapped to @xmath221 . in the following",
    "we denote this conditional expectation by @xmath226 .",
    "hence we get that @xmath227    our conditioning does not fix the @xmath0-independent subset @xmath228 of @xmath220 in which @xmath212 picks items of @xmath210 because @xmath228 depend on @xmath229 .",
    "we denote the expectation of @xmath230 in a subspace defined by the conditioning above by @xmath231 . as before we have @xmath232 where the expectation of @xmath228 is taken over all 1 - 1 mappings of @xmath224 to the arrival times @xmath225 and over @xmath229",
    ".    we can give an upper bound on the value of @xmath233 for every 1 - 1 mappings of @xmath224 to the arrival times @xmath225 and every @xmath229 .",
    "note that @xmath234 can select at most @xmath3 items and therefore @xmath235 .",
    "it also holds that @xmath228 is a @xmath0-independent subset of @xmath220 and therefore @xmath236 hence @xmath237    substituting ( [ eq : gammabound ] ) into ( [ eq : fakeprofit ] ) and comparing it to ( [ eq : originalprofit ] ) we get that @xmath238 .",
    "since this holds for any subspace define by our conditioning on the values of @xmath185 , @xmath214 , @xmath119 and @xmath239 the lemma follows .",
    "[ lem : bobby1 ] let @xmath56 be a set of size @xmath20 and let @xmath240 be a subset of @xmath56 chosen uniformly at random amongst all subsets of @xmath56 .",
    "then for any @xmath241 :    @xmath242    from lemma [ lem : randomsubsets ] we know that @xmath243 we consider even and odd @xmath3 .    for @xmath3",
    "even : @xmath244 }    { \\aftergroup\\egroup\\originalright})\\nonumber\\\\ & = &    \\frac{t_{k}(s)}{2 }    { \\mathopen{}\\mathclose\\bgroup\\originalleft } (      \\sum_{r=0}^{k/2 - 1}{{k - 1\\choose r}\\frac{1}{2^{k-1 } } }      + { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin{\\mathopen{}\\mathclose\\bgroup\\originalleft}(k , \\frac{1}{2}{\\aftergroup\\egroup\\originalright } ) \\geq \\frac{k}{2}+1\\,{\\aftergroup\\egroup\\originalright } ] }    { \\aftergroup\\egroup\\originalright } ) \\nonumber\\\\ & = &    \\frac{t_{k}(s)}{2 }    { \\mathopen{}\\mathclose\\bgroup\\originalleft } (      { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin{\\mathopen{}\\mathclose\\bgroup\\originalleft}(k-1 , \\frac{1}{2}{\\aftergroup\\egroup\\originalright } ) \\leq \\frac{k}{2}-1\\,{\\aftergroup\\egroup\\originalright } ] }      + { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin{\\mathopen{}\\mathclose\\bgroup\\originalleft}(k , \\frac{1}{2}{\\aftergroup\\egroup\\originalright } ) \\geq \\frac{k}{2}+1\\,{\\aftergroup\\egroup\\originalright } ] }    { \\aftergroup\\egroup\\originalright } ) \\nonumber \\\\ & = &    \\frac{t_{k}(s)}{2 }    { \\mathopen{}\\mathclose\\bgroup\\originalleft } (      \\frac{1}{2 }      + \\frac{1}{2 } - { k \\choose k/2}\\frac{1}{2^{k+1 } }    { \\aftergroup\\egroup\\originalright } ) \\label{eq : first_binomial332 } \\\\   & = & \\frac{t_{k}(s)}{2}{\\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - { k \\choose k/2}\\frac{1}{2^{k+1}}{\\aftergroup\\egroup\\originalright}).\\label{eq : first_binomial33}\\end{aligned}\\ ] ] we derive ( [ eq : first_binomial332 ] ) as follows :    * @xmath245 } = 1/2.$ ] + consider @xmath246 coin tosses of a fair coin , the number of heads can be @xmath247 .",
    "the probability that there are @xmath145 heads is equal to the probability that there are @xmath248 heads . as @xmath249 , the set @xmath250 is disjoint from the set @xmath251 and their union is @xmath252 . * @xmath253}=\\frac{1}{2 } - { k \\choose k/2}\\frac{1}{2^{k+1}}.$ ] + consider @xmath3 tosses of a fair coin , the outcome can have @xmath254 heads ( an odd number of outcomes ) . as above , the probability that there be @xmath145 heads , @xmath255 is equal to the probability that there be @xmath256 heads .",
    "ergo , @xmath257}={\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , \\mbox{$\\#$ heads $ \\in k/2 + 1 , \\ldots , k$}\\,{\\aftergroup\\egroup\\originalright}]}$ ] , and @xmath258 } } \\\\      & & + { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , \\mbox{$\\#$ heads $ \\in k/2 + 1 , \\ldots , k$}\\,{\\aftergroup\\egroup\\originalright } ] } \\\\      & & + { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , \\mbox{$\\#$ heads $ = k/2$}\\,{\\aftergroup\\egroup\\originalright}]}=1 .",
    "\\end{aligned}\\ ] ] as the probability that there are exactly @xmath259 heads is @xmath260 , solving for @xmath261}$ ] gives the desired result .",
    "from stirling s formula we get : @xmath262 by substituting ( [ eq : after_binon3 ] ) in ( [ eq : first_binomial33 ] ) we get    @xmath263    finishing the proof for @xmath3 even .    for an odd @xmath3 : @xmath264 }      + \\frac{k-1}{k}{\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin{\\mathopen{}\\mathclose\\bgroup\\originalleft}(k , \\frac{1}{2}{\\aftergroup\\egroup\\originalright } ) \\geq { { \\mathopen{}\\mathclose\\bgroup\\originalleft}\\lfloor{\\frac{k}{2}}{\\aftergroup\\egroup\\originalright}\\rfloor } + 1\\,{\\aftergroup\\egroup\\originalright } ] }    { \\aftergroup\\egroup\\originalright } ) \\nonumber\\\\ & = &    \\frac{t_k(s)}{2 }    { \\mathopen{}\\mathclose\\bgroup\\originalleft } (      { \\mathopen{}\\mathclose\\bgroup\\originalleft}(\\frac{1}{2 } - { { k-1 } \\choose ( k-1)/2}\\frac{1}{2^k}{\\aftergroup\\egroup\\originalright } )      + \\frac{k-1}{k } \\cdot \\frac{1}{2 }    { \\aftergroup\\egroup\\originalright } ) \\nonumber\\\\ & = & \\frac{t_k(s)}{2}{\\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - { \\mathopen{}\\mathclose\\bgroup\\originalleft}({{k-1 } \\choose ( k-1)/2}\\frac{1}{2^k } + \\frac{1}{2k}{\\aftergroup\\egroup\\originalright}){\\aftergroup\\egroup\\originalright } ) .",
    "\\label{eqn : something43}\\end{aligned}\\ ] ] lemma [ lem : induction111 ] shows by induction that for any odd @xmath201 @xmath265 ( note that by ( [ eq : after_binon3 ] ) we get that @xmath266 which is smaller than @xmath267 for @xmath268 . )    substituting ( [ eqn : something45 ] ) into ( [ eqn : something43 ] ) we get @xmath263 finishing the proof for @xmath3 odd .",
    "[ lem : randomsubsets ] let @xmath269 and let @xmath139 be a subset of @xmath56 chosen uniformly at random amongst all subsets of @xmath56 .",
    "let @xmath270 be integers s.t .",
    "then + @xmath272 } \\geq t_{k}(s ) \\sum_{r=1}^{k}{{k \\choose r}\\frac{1}{2^{k } } \\frac{\\min(r , t)}{k } } \\ .\\ ] ]    let @xmath273 be the @xmath3 elements of largest value in @xmath56 . conditioned upon @xmath274 ,",
    "the expectation of @xmath275 is @xmath276 times the sum of the values in @xmath277 which is @xmath278 .",
    "the lemma now follows by summing over all possible values of @xmath279 using the following two facts :    1 .",
    "the probability that @xmath280 is @xmath281 .",
    "2 .   if @xmath282 then @xmath283 and if @xmath284 than @xmath285 .",
    "[ lem : induction111 ] for any odd @xmath201 @xmath286    we prove the lemma by induction on @xmath3    note that this inequality does nt hold for @xmath287 .    for simplicity",
    ", we prove the equivalent inequality : @xmath288 for the basis of the induction we verify this inequality for @xmath289 : @xmath290 we assume that the inequality holds for some odd @xmath3 and show that it holds for @xmath291 . in the following derivation inequality ( [ eqn : here_induction ] ) follows by the induction hypothesis .",
    "@xmath292    * definitions : * the following definitions are used in lemmata ( [ lem : second - half ] )  ( [ lem : notsimplearithmetics2 ] ) .",
    "* let @xmath293 be random variables for the set of items arriving during the time period @xmath9 , * and let @xmath294 be random variables for the set of items arriving during the time period @xmath12 . *",
    "let @xmath295 be the number of elements in @xmath208 greater than the threshold @xmath11 .",
    "in the algorithm  [ algo : tempalg ] we define the threshold @xmath11 where @xmath296 , @xmath297 , if @xmath298 and @xmath299 otherwise ( in this case we consider any item of value @xmath300 as greater than @xmath11 ) .",
    "* let @xmath301 , @xmath302 , be identical independent geometric random variables , such that for any integer @xmath303 , @xmath304 } =      { \\mathopen{}\\mathclose\\bgroup\\originalleft}(\\frac{1}{2}{\\aftergroup\\egroup\\originalright})^{j+1}$ ] .",
    "it follows that the expectation of @xmath301 , @xmath305 , whereas the variance @xmath306 = 2 $ ] .",
    "let @xmath307 .",
    "note also that @xmath308 and @xmath309 = 2\\tau$ ] .",
    "* we abbreviate @xmath182 as @xmath183 as in the proof of theorem [ theorem : main ] .",
    "[ lem : second - half ] given that @xmath310 , for any @xmath311 and any @xmath98 , the expected profit of @xmath84 during time interval @xmath12 is at least @xmath312    where @xmath195 as defined in theorem [ theorem : half ] .    splitting the probability space by conditioning on @xmath313",
    "we obtain @xmath314}\\cdot{\\exp{c_{k , \\gamma}^{[1/2 , 1)}(s ) \\mid q = q } } } \\nonumber \\\\ & \\geq & \\sum_{q = 0}^{2{{\\mathopen{}\\mathclose\\bgroup\\originalleft}\\lceil{k/2}{\\aftergroup\\egroup\\originalright}\\rceil } }      { { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , q = q\\,{\\aftergroup\\egroup\\originalright}]}\\cdot{\\exp{c_{k , \\gamma}^{[1/2 , 1)}(s ) \\mid q =      q } } } \\label{eq : condqq } \\ .\\end{aligned}\\ ] ]    lemma [ lemma : prof_r ] shows that @xmath315 . substituting this",
    "lower bound in ( [ eq : condqq ] ) we obtain    @xmath316}\\cdot \\bigg[\\frac{1}{1 + \\gamma k }          \\bigg(1 - \\sqrt{2}\\cdot\\alpha(\\gamma ) - 4.5\\gamma\\bigg )   \\\\ \\hspace{2.5 cm }            \\cdot          \\bigg(1 - 2\\frac{|q - { { \\mathopen{}\\mathclose\\bgroup\\originalleft}\\lceil{k/2}{\\aftergroup\\egroup\\originalright}\\rceil}|}{k } - \\frac{1}{k}\\bigg )          \\cdot \\frac{t_k(s)}{2 }        \\bigg]\\bigg )     \\\\",
    "\\hspace{2 cm } = \\frac{1}{1 + \\gamma k } \\cdot    { \\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - \\sqrt{2}\\cdot\\alpha(\\gamma ) - 4.5\\gamma{\\aftergroup\\egroup\\originalright } )     \\frac{t_k(s)}{2 } \\nonumber \\\\ \\hspace{2.5 cm } \\cdot   \\sum_{q = 0}^{2{{\\mathopen{}\\mathclose\\bgroup\\originalleft}\\lceil{k/2}{\\aftergroup\\egroup\\originalright}\\rceil } }      {        { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , q = q\\,{\\aftergroup\\egroup\\originalright } ] }        { \\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - 2\\frac{|q - { { \\mathopen{}\\mathclose\\bgroup\\originalleft}\\lceil{k/2}{\\aftergroup\\egroup\\originalright}\\rceil}|}{k } - \\frac{1}{k}{\\aftergroup\\egroup\\originalright } )      }   \\label{eqn : geom } \\end{array}\\ ] ]    lemma [ lem : geometric_equal ] proves that if @xmath317 then for any @xmath318 the probability that @xmath319 is the same as the probability that the sum of @xmath10 identical geometrical random variables is equal @xmath320 .",
    "we denote this sum by @xmath130 and derive the following lower bound on the last sum of equation ( [ eqn : geom ] ) :    @xmath321 }        { \\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - 2\\frac{|q - { { \\mathopen{}\\mathclose\\bgroup\\originalleft}\\lceil{k/2}{\\aftergroup\\egroup\\originalright}\\rceil}|}{k } - \\frac{1}{k}{\\aftergroup\\egroup\\originalright } )      } } \\nonumber \\\\ & = &    \\sum_{q = 0}^{2{{\\mathopen{}\\mathclose\\bgroup\\originalleft}\\lceil{k/2}{\\aftergroup\\egroup\\originalright}\\rceil } }      {        { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , g = q\\,{\\aftergroup\\egroup\\originalright } ] }        { \\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - 2\\frac{|q - { { \\mathopen{}\\mathclose\\bgroup\\originalleft}\\lceil{k/2}{\\aftergroup\\egroup\\originalright}\\rceil}|}{k } - \\frac{1}{k}{\\aftergroup\\egroup\\originalright } )      } \\nonumber \\\\ & = &    \\sum_{r = 0}^{{{\\mathopen{}\\mathclose\\bgroup\\originalleft}\\lceil{k/2}{\\aftergroup\\egroup\\originalright}\\rceil } }      { { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , |g - { { \\mathopen{}\\mathclose\\bgroup\\originalleft}\\lceil{k/2}{\\aftergroup\\egroup\\originalright}\\rceil}| = r\\,{\\aftergroup\\egroup\\originalright}]}\\cdot        { \\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - 2\\cdot\\frac{r}{k } - \\frac{1}{k}{\\aftergroup\\egroup\\originalright } )      } \\label{eq : qexplain1 } \\\\ & \\geq &    \\sum_{r = 0}^{\\infty }      { { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , |g - { { \\mathopen{}\\mathclose\\bgroup\\originalleft}\\lceil{k/2}{\\aftergroup\\egroup\\originalright}\\rceil}| = r\\,{\\aftergroup\\egroup\\originalright}]}\\cdot        { \\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - 2\\cdot\\frac{r}{k } - \\frac{1}{k}{\\aftergroup\\egroup\\originalright } )      } \\label{eq : qexplain2 } \\\\ & = & 1 - 2\\cdot\\frac{\\exp{|g -{{\\mathopen{}\\mathclose\\bgroup\\originalleft}\\lceil{\\frac{k}{2}}{\\aftergroup\\egroup\\originalright}\\rceil}|}}{k }   - \\frac{1}{k } \\nonumber \\\\ & = & 1 - 2\\cdot\\frac{\\exp{|g -\\mathrm{e}[g]|}}{k }   - \\frac{1}{k } \\label{eq : q } \\ \\ .\\end{aligned}\\ ] ]    equality ( [ eq : qexplain1 ] ) follows by the change of variables @xmath322 , inequality ( [ eq : qexplain2 ] ) follows since @xmath323 for any @xmath324 and the last equality follows since @xmath325 .    using the fact that @xmath326}$ ] ( @xmath327 here stands for variance ) for any random variable @xmath60 ( lemma [ lem : random_dist ] ) and the fact that @xmath328 = 2{{\\mathopen{}\\mathclose\\bgroup\\originalleft}\\lceil{k/2}{\\aftergroup\\egroup\\originalright}\\rceil } \\le k+1 $ ] we get @xmath329|}}{k } \\leq   \\frac{\\sqrt{k+1}}{k } =   \\frac{\\sqrt{1 + 1/k}}{\\sqrt{k}}.\\ ] ]    substituting the upper bound of equation ( [ eq : var ] ) into equation ( [ eq : q ] ) , and then substituting the resulting inequality into equation ( [ eqn : geom ] ) we obtain the lemma",
    ".    it may be useful to observe that lower bound given in the following lemma [ lemma : prof_r ] , is approximately equal to the expected size of the @xmath0-independent set chosen from the @xmath320 items arriving during the time interval @xmath12 divided by @xmath320 , multiplied by the expected value of these @xmath320 elements ( @xmath330 ) .    [ lemma : prof_r ] for any @xmath311 , any @xmath331 , any @xmath56 , @xmath332 , and for any @xmath333 we have @xmath334    we condition upon there being @xmath320 items exceeding the threshold in @xmath335 .",
    "let @xmath336 be the set of all items in @xmath56 greater than @xmath11 .",
    "assume @xmath337 ( _ i.e. _ , sufficiently many items arrive before time @xmath18 so as to take @xmath338 as a threshold ) .",
    "therefore there are exactly @xmath339 items @xmath340 in @xmath185 , and from the conditioning there are exactly @xmath320 items @xmath341 in @xmath335 , so @xmath342 is the number items in @xmath56 that are strictly greater than the threshold @xmath338 .",
    "thus , the probability that an item @xmath343 is in @xmath335 is @xmath344 } = \\frac{q}{|s_{>t}|}=\\frac{q}{\\tau + q - 1}\\ .\\ ] ]    if @xmath345 , the threshold is set to be zero , and @xmath346 .",
    "the size of @xmath56 is @xmath347 .",
    "it follows that the probability that an item @xmath343 is in @xmath335 is @xmath344 } =   \\frac{q}{|s_{>t}| } \\geq \\frac{q}{\\tau + q - 1}\\ .\\ ] ]    we now consider two cases : @xmath348 , and @xmath349",
    ".    for @xmath348 the expected sum of the values of the @xmath320 items in @xmath350 is @xmath351}}\\cdot v(x)\\nonumber \\\\&= & \\frac{q}{|s_{>t}| } \\cdot \\sum_{x\\in s_{>t } } v(x)\\nonumber \\\\&\\geq & \\frac{q}{k}\\cdot t_k(s ) \\label{eqn : partial1}\\end{aligned}\\ ] ]    equation ( [ eqn : partial1 ] ) follows since @xmath352 and @xmath353 ( the average value of the @xmath3 largest items ) is smaller or equal to the average value of the items greater than @xmath11 , ( @xmath354 ) .",
    "since @xmath355 , @xmath94 chooses a @xmath0-independent subset of size at least as large as the size of the maximum @xmath0-independent subset of those among the @xmath320 items arriving in the interval @xmath356 .    fixing the arrival times of the @xmath320 items in @xmath208 which are above the threshold ,",
    "the assignment of items to these times is a random permutation .",
    "this implies that the expected value of the items in the @xmath0-independent subset picked by @xmath357 equals to the cardinality of this @xmath0-independent subset divided by @xmath320 , multiplied by the expected value of these items .",
    "lemma ( [ lem : half_gamma_indep ] ) gives a lower bound on the expected size of the @xmath0-independent subset picked by @xmath94 and equation ( [ eqn : partial1 ] ) gives a lower bound on the expected value of the @xmath320 items , therefore : @xmath358    \\cdot    { \\mathopen{}\\mathclose\\bgroup\\originalleft}[\\frac{q}{k}\\cdot t_k(s){\\aftergroup\\egroup\\originalright}]\\label{eq : prevexample } \\\\",
    "& \\geq &    \\frac{1}{1 + \\gamma ( k+1/2 ) }    { \\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - \\sqrt{2}\\alpha(\\gamma ) - 4\\gamma{\\aftergroup\\egroup\\originalright } )    \\cdot{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\frac{q}{k}\\cdot t_k(s){\\aftergroup\\egroup\\originalright } ] \\nonumber \\\\ & = &    \\frac{1}{1+\\gamma k } \\cdot \\frac{1+\\gamma k}{1 + \\gamma ( k+1/2 ) }    { \\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - \\sqrt{2}\\alpha(\\gamma ) - 4\\gamma{\\aftergroup\\egroup\\originalright } )    { \\mathopen{}\\mathclose\\bgroup\\originalleft}[\\frac{q}{k}\\cdot t_k(s){\\aftergroup\\egroup\\originalright } ] \\label{eq : chain1 } \\\\ & = &    \\frac{1}{1+\\gamma k } \\cdot \\frac{1}{1 + \\gamma/2 \\cdot 1/(1+\\gamma k ) ) }    { \\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - \\sqrt{2}\\alpha(\\gamma ) - 4\\gamma{\\aftergroup\\egroup\\originalright } )    { \\mathopen{}\\mathclose\\bgroup\\originalleft}[\\frac{q}{k}\\cdot t_k(s){\\aftergroup\\egroup\\originalright}]\\nonumber \\\\ & \\geq &    \\frac{1}{1+\\gamma k } \\cdot \\frac{1}{1 + \\gamma/2 }    { \\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - \\sqrt{2}\\alpha(\\gamma ) - 4\\gamma{\\aftergroup\\egroup\\originalright } )    { \\mathopen{}\\mathclose\\bgroup\\originalleft}[\\frac{q}{k}\\cdot t_k(s){\\aftergroup\\egroup\\originalright}]\\nonumber \\\\ & \\geq &    \\frac{1}{1+\\gamma k } \\cdot ( 1-\\gamma/2 )    { \\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - \\sqrt{2}\\alpha(\\gamma ) - 4\\gamma{\\aftergroup\\egroup\\originalright } )    { \\mathopen{}\\mathclose\\bgroup\\originalleft}[\\frac{q}{k}\\cdot t_k(s){\\aftergroup\\egroup\\originalright}]\\label{eq : chain3 } \\\\ & \\geq &    \\frac{1}{1+\\gamma k }    { \\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - \\sqrt{2}\\alpha(\\gamma ) - 4.5\\gamma{\\aftergroup\\egroup\\originalright } )    { \\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - 2\\cdot\\frac{|q - { { \\mathopen{}\\mathclose\\bgroup\\originalleft}\\lceil{k/2}{\\aftergroup\\egroup\\originalright}\\rceil}|}{k}{\\aftergroup\\egroup\\originalright } )    \\frac{t_k(s)}{2}\\nonumber \\\\ & \\geq &    \\frac{1}{1+\\gamma k }    { \\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - \\sqrt{2}\\alpha(\\gamma ) - 4.5\\gamma{\\aftergroup\\egroup\\originalright } )    { \\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - 2\\cdot\\frac{|q - { { \\mathopen{}\\mathclose\\bgroup\\originalleft}\\lceil{k/2}{\\aftergroup\\egroup\\originalright}\\rceil}|}{k } - \\frac{1}{k}{\\aftergroup\\egroup\\originalright } )    \\frac{t_k(s)}{2}\\nonumber\\end{aligned}\\ ] ] where inequality [ eq : chain1 ] follow since @xmath355 and inequality ( [ eq : chain3 ] ) follows since @xmath359 for any @xmath30 .",
    "in addition we have that for any @xmath360 @xmath361 therefore all terms in the previous calculations are positive meaning that decreasing any of them decreases the whole product .",
    "this concludes the proof for @xmath355 .    for @xmath349 ,",
    "the expected sum of the values of the @xmath320 items in @xmath350 is @xmath362}}\\cdot v(x ) \\nonumber \\\\&= & \\frac{q}{{{\\mathopen{}\\mathclose\\bgroup\\originalleft}\\lvert{s_{>t}}{\\aftergroup\\egroup\\originalright}\\rvert}}\\sum_{x\\in s_{>t } } v(x)\\nonumber \\\\&\\geq & \\frac{q}{q + \\tau - 1 } \\sum_{x\\in s_{>t } } v(x)\\nonumber \\\\ & \\geq & \\frac{q}{q + \\tau - 1 } t_k(s ) \\label{eqn : partial2 } \\ .\\end{aligned}\\ ] ] if @xmath363 the threshold is zero so @xmath364 and therefore inequality ( [ eqn : partial2 ] ) follows .",
    "otherwise @xmath365 so @xmath336 contains the @xmath3 largest items of @xmath56 , and therefore inequality ( [ eqn : partial2 ] ) follows .",
    "let @xmath366 be the size of the maximum @xmath0-independent subset of the the @xmath320 items larger than @xmath11 arriving in the interval @xmath356 .",
    "since @xmath94 is restricted to choose at most @xmath10 items in the time interval @xmath193 the size of the @xmath0-independent subset that @xmath84 chooses is at least @xmath367 .",
    "therefore , @xmath368 where equation ( [ eq : blabla1 ] ) follows from lemma [ lem : half_gamma_indep ] .",
    "combining equations ( [ eqn : partial2 ] ) and ( [ eq : blabla1 ] ) using the same argument that we used to derive equation ( [ eq : prevexample ] ) we get @xmath369 \\cdot { \\mathopen{}\\mathclose\\bgroup\\originalleft}[\\frac{{{\\mathopen{}\\mathclose\\bgroup\\originalleft}\\lceil{k/2}{\\aftergroup\\egroup\\originalright}\\rceil}}{q } \\cdot \\frac{q}{q+\\tau - 1}t_k(s ) { \\aftergroup\\egroup\\originalright } ] \\label{eqn : haba12}\\end{aligned}\\ ] ]    a simple arithmetic manipulation ( for more details see lemma [ lem : notsimplearithmetics1 ] ) gives us @xmath370 substituting ( [ eqn : arithmeticssub1 ] ) into ( [ eqn : haba12 ] ) we obtain @xmath371 another simple arithmetic manipulation ( for more details see lemma [ lem : notsimplearithmetics2 ] ) gives us @xmath372 by substituting ( [ eqn : arithmeticssub2 ] ) into ( [ eqn : beforearithmeticssub2 ] ) the lemma follows .",
    "[ lem : geometric_equal ] for any set @xmath56 and any @xmath373 @xmath374 } = { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , g = q\\,{\\aftergroup\\egroup\\originalright}]}.\\ ] ] ( @xmath313 and @xmath130 are defined before [ lem : second - half ] ) .",
    "we reinterpret the random schedule as though we schedule the items in @xmath56 in decreasing order .",
    "repeatedly toss a fair coin until @xmath375  tails \" appear .",
    "the length of this sequence is the sum of @xmath375 geometric variables @xmath301 ( number of consecutive  heads \" ) plus @xmath375 ( number of  tails \" ) , let @xmath376 be a random variable for the total number of  heads \" in this sequence .",
    "traverse this sequence until its end or @xmath56 is exhausted , schedule the top item remaining in @xmath56 within the interval @xmath12 if  heads \" , and within the interval @xmath9 if  tails \" .",
    "if @xmath56 has not been exhausted , place remaining items to appear at random times in time interval @xmath377 .    if @xmath56 was exhausted strictly before the end of the sequence",
    " we have that @xmath378 ( total number of coin tosses ) , and the number of items arriving in the time interval @xmath9 is @xmath379 , thus all items arriving during @xmath193 must be counted in @xmath313 and therefore @xmath380 as well .",
    "if @xmath56 was not exhausted strictly before the last coin toss , then @xmath381 , ergo , any item placed in the time interval @xmath193 before the last coin toss contributes to @xmath313 , and any other item must not be counted in @xmath313 ( either it was placed in time interval @xmath9 or its value is less than the threshold value  the minimum of the @xmath375 largest items scheduled during the time interval @xmath9 .",
    "thus , @xmath382 .",
    "we conclude that @xmath383 iff @xmath380 and for any @xmath373 , @xmath384 iff @xmath385 .",
    "so @xmath386 } = { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , q > { { \\mathopen{}\\mathclose\\bgroup\\originalleft}\\lvert{s}{\\aftergroup\\egroup\\originalright}\\rvert}-\\tau\\,{\\aftergroup\\egroup\\originalright}]},\\ ] ] and for any @xmath373 @xmath387 } = { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , q = q\\,{\\aftergroup\\egroup\\originalright}]}.\\ ] ]    [ lem : random_dist ] for any random variable @xmath60 , with mean @xmath388 and standard deviation @xmath389 ,",
    "@xmath390 \\le \\sigma\\ ] ]    by the definition of the variance @xmath391 & = & \\mathrm{e}\\bigr[|w - \\mu|^2\\bigr ] - \\mathrm{e}^2\\bigr[|w - \\mu|\\bigr ]",
    "\\\\ & = & \\mathrm{var}\\bigr[w\\bigr ] - \\mathrm{e}^2\\bigr[|w - \\mu|\\bigr]\\end{aligned}\\ ] ] since @xmath392\\geq 0 $ ] it follows that @xmath393 \\le \\mathrm{var}\\bigr[w\\bigr ] = \\sigma^2\\ .\\ ] ] the lemma follows by taking the square root of both sides .    [ lem : half_gamma_indep ] let @xmath394 and let @xmath395 be a set of items scheduled at uniform times during the interval @xmath193 , and let @xmath396 .",
    "let @xmath397 be the subset of @xmath395 that are scheduled during the time interval @xmath356 .",
    "the expected size of the maximum @xmath0-independent subset of items from @xmath397 is at least @xmath398 where @xmath195 ( as defined in theorem [ theorem : half ] ) .",
    "if @xmath399 the lemma holds since the bound is negative , therefore assume @xmath400 .",
    "let @xmath83 be the size of the maximum @xmath0-independent subset of @xmath395 , and let @xmath401 be the size of the maximal @xmath0-independent subset of @xmath397 ( both @xmath83 and @xmath401 are random variables ) .",
    "it is easy to see that @xmath402 .",
    "let @xmath403 be an indicator variable where @xmath404 if some item in @xmath395 is scheduled during the time interval @xmath405 , and @xmath406 otherwise .",
    "@xmath407 } \\cdot \\exp{\\rho \\mid i=0 } ~~+~~ { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , i=1\\,{\\aftergroup\\egroup\\originalright}]}\\cdot\\bigr(\\exp{\\rho \\mid i=1 } - 1\\bigr ) \\nonumber\\\\ & = & \\exp{\\rho } - { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , i=1\\,{\\aftergroup\\egroup\\originalright}]}. \\nonumber\\end{aligned}\\ ] ]    to bound @xmath408 we recall that @xmath395 consists of @xmath409 points randomly placed in the time interval @xmath12 .",
    "every @xmath0-independent subset of @xmath395 is analogous to a @xmath410-independent subset of @xmath411 where @xmath412 .",
    "_ i.e. _ , the size of the maximal @xmath0-independent subset of @xmath395 is equal to the size of the maximal @xmath410-independent subset of @xmath411 .",
    "ergo , we can apply theorem [ theorem : half ] and hence : @xmath413 } & \\geq & \\frac{\\psi}{1 + 2\\gamma \\psi}(1-\\alpha(2\\gamma ) ) - { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , i=1\\,{\\aftergroup\\egroup\\originalright } ] } \\nonumber\\\\ & = & \\frac{\\psi}{1 + 2\\gamma \\psi}\\bigr(1-\\alpha(2\\gamma)\\bigr ) - ( 1 - ( 1 - 2\\gamma)^\\psi ) \\nonumber\\\\ & = & \\frac{\\psi}{1 + 2\\gamma \\psi}{\\mathopen{}\\mathclose\\bgroup\\originalleft}(1-\\alpha(2\\gamma ) - \\frac{(1 - ( 1 - 2\\gamma)^\\psi)(1 + 2\\gamma \\psi)}{\\psi}{\\aftergroup\\egroup\\originalright } ) \\nonumber\\\\ & = & \\frac{\\psi}{1 + 2\\gamma \\psi}{\\mathopen{}\\mathclose\\bgroup\\originalleft}(1-\\alpha(2\\gamma ) - \\frac{(1 - ( 1 - 2\\gamma)^\\psi)}{\\psi } - 2\\gamma(1 - ( 1 - 2\\gamma)^\\psi){\\aftergroup\\egroup\\originalright } ) \\nonumber\\\\ & \\geq & \\frac{\\psi}{1 + 2\\gamma \\psi}{\\mathopen{}\\mathclose\\bgroup\\originalleft}(1-\\alpha(2\\gamma ) - \\frac{1 - ( 1 - 2\\gamma\\psi)}{\\psi } - 2\\gamma{\\aftergroup\\egroup\\originalright } ) \\label{eq : induc_pow2}\\\\ & = & \\frac{\\psi}{1 + 2\\gamma \\psi}{\\mathopen{}\\mathclose\\bgroup\\originalleft}(1-\\alpha(2\\gamma ) - 4 \\gamma{\\aftergroup\\egroup\\originalright } ) \\nonumber \\\\ & = & \\frac{\\psi}{1 + 2\\gamma \\psi}{\\mathopen{}\\mathclose\\bgroup\\originalleft}(1-{3}\\sqrt{2\\gamma\\ln(1/(2\\gamma ) ) } - 4 \\gamma{\\aftergroup\\egroup\\originalright})\\nonumber \\\\ & \\geq & \\frac{\\psi}{1 + 2\\gamma \\psi}{\\mathopen{}\\mathclose\\bgroup\\originalleft}(1-{3}\\sqrt{2\\gamma\\ln(1/\\gamma ) } - 4 \\gamma{\\aftergroup\\egroup\\originalright})\\nonumber \\\\ & = & \\frac{\\psi}{1 + 2\\gamma \\psi}{\\mathopen{}\\mathclose\\bgroup\\originalleft}(1-\\sqrt{2}\\alpha(\\gamma ) - 4 \\gamma{\\aftergroup\\egroup\\originalright } ) . \\nonumber\\end{aligned}\\ ] ] where the inequality ( [ eq : induc_pow2 ] ) follows since for any @xmath414 and any @xmath415 , @xmath416 .",
    "[ lem : notsimplearithmetics1 ] for any @xmath417 and any @xmath418 @xmath419    @xmath420    where ( [ eq : notsimplearithmeticssub11 ] ) , ( [ eq : notsimplearithmeticssub12 ] ) and ( [ eq : notsimplearithmeticssub13 ] ) follow since @xmath418 .    the following lemma is used in the proof of lemma [ lemma : prof_r ] , for bounding the profit of the algorithm from items in the 2nd half , and conditioned on there being @xmath320 such items above the threshold .",
    "[ lem : notsimplearithmetics2 ] for any @xmath421 , @xmath422 and any @xmath0 that satisfies @xmath98 we have @xmath423    while the factor on the left in the left hand side of ( [ eq : longalgebrastatement ] ) is smaller than factor on the left in the right hand side of ( [ eq : longalgebrastatement ] ) , we show that this is compensated for the factors on the right of both sides of the inequality .",
    "note that for any @xmath422 , @xmath424 the derivation ( [ ineq : notsimple ] ) above follows by substituting the maximal value @xmath320 can take . in equation ( [ eq : longalgebrastatement ] ) both factors @xmath425 ( on the left ) and @xmath426 ( on the right ) are strictly positive since both @xmath320 and @xmath3 are strictly positive .",
    "it therefore follows from ( [ ineq : notsimpleagain ] ) that the left hand side of equation ( [ eq : longalgebrastatement ] ) is non negative .",
    "it also follows that if @xmath427 then the right hand side of equation ( [ eq : longalgebrastatement ] ) is @xmath428 and the lemma holds .",
    "thus , we may assume that the right hand side of equation ( [ eq : longalgebrastatement ] ) is strictly positive , and thus that @xmath429 as @xmath430 it follows that @xmath431 and thus inequality ( [ eq : notsimplepos1 ] ) implies that @xmath432    as @xmath433 we can bound the left hand side of equation ( [ eq : longalgebrastatement ] ) as follows : @xmath434 as the right hand side of equation ( [ eq : longalgebrastatement ] ) is strictly positive , we can multiply and divide the right hand side of ( [ eq : notsimplenoceil ] ) by the right hand side of equation ( [ eq : longalgebrastatement ] ) : @xmath435 note the the right hand side above in equation ( [ eq : shit_term1 ] ) is of the form @xmath436 times some factor @xmath63 . by assumption @xmath437",
    "so , given equation ( [ eq : notsimplenoceil ] ) and that @xmath438 then the lemma holds , so it suffices to show that @xmath438 : @xmath439 as @xmath0 , @xmath3 , @xmath320 are non negative , and given inequalities ( [ eq : notsimplepos1 ] ) and ( [ eq : notsimplepos2 ] ) , it follows that the numerators and denumerators , in both fractions whose product is on the left hand side of equation ( [ eqn : prelast ] ) , are strictly positive .",
    "we substitute @xmath279 for @xmath440 , note that @xmath441 , it now follows that @xmath442 so it suffices to show : @xmath443 or , equivalently , @xmath444 @xmath445 where the last inequality holds since @xmath98 ( and therefore @xmath446 ) and @xmath447 .",
    "define @xmath448    we first give an overview of the proof of theorem [ theorem : half ] , and then give the full proof in detail .",
    "we need the following definitions for the proof of theorem [ theorem : half ] .",
    "let @xmath449 and define the random variable @xmath143 , @xmath144 to be the @xmath145th smallest point in @xmath114 .",
    "define the random variable @xmath146 to be the number of @xmath450 s that lie in the interval @xmath147 . at most one of the @xmath451",
    "can belong to a @xmath0-independent set .",
    "given any set @xmath56 of points we define the following _ greedy algorithm _ that constructs a @xmath0-independent set .",
    "the greedy algorithm initializes the set with the smallest point in @xmath56 and then traverses the remaining points in increasing order and adds the point @xmath30 to the @xmath0-independent set if @xmath30 is larger by at least @xmath0 from any point previously added .",
    "we denote by @xmath452 the @xmath0-independent set computed by applying greedy algorithm to @xmath56 .",
    "let @xmath148 be a random variable with binary values where @xmath149 iff @xmath453 , and define @xmath454}.$ ]    lemma [ lem : greedy_best ] proves the well known fact that the greedy algorithm picks a @xmath0-independent set of largest size .",
    "so @xmath455 .",
    "our proof uses this fact .",
    "we give an outline of the proof of theorem [ theorem : half ] .",
    "the details are in section [ sec : half_details ] .",
    "the proof splits into two main subcases :    *  small @xmath20 \" : * in this case the expected number of non - overlapping intervals of the form @xmath456 $ ] that contain no point @xmath457 , @xmath458 is sufficiently large .",
    "specifically , lemma [ lem : prfot_small_n ] shows that for @xmath459 the expected number of intervals of this form is at least @xmath460 .",
    "all such @xmath110 will be chosen by the greedy algorithm thus proving the theorem for small @xmath20 .    *  larger @xmath20 \" : * for @xmath461 , we need to consider the expected number of points @xmath457  discarded \" when the greedy algorithm chooses some @xmath110 , so the key point in this part of the proof is to bound @xmath462 .    given a set of points @xmath114 , since the greedy algorithm picks a maximal @xmath0-independent set we have that @xmath463 .",
    "therefore @xmath464 .",
    "so to prove the theorem we seek a lower bound for @xmath465 .",
    "we note that @xmath466 .",
    "this follows because ( a ) the @xmath146 for which @xmath149 are non - overlapping so this sum is @xmath467 , and ( b ) @xmath468 implies that the greedy algorithm skipped over a point that should have been chosen .",
    "in particular , the expectation of @xmath469 is also @xmath20 .",
    "contrawise , it must be that @xmath470    if we could show that @xmath471 for all @xmath472 then it would follow that @xmath473 , giving us a lower bound on the sum of the @xmath474 s .",
    "in fact we show ( lemma [ lem : cond_ci_bound ] ) that the bound ( [ eqn : beta ] ) holds for @xmath475 with @xmath476    to get an intuition of why the upper bound @xmath477 holds for @xmath478 , we note that for small @xmath0 it is close to @xmath479 and we expect to see @xmath480 points in an interval of length @xmath0 following any specific point .",
    "specifically , note that when @xmath59 since @xmath481 then @xmath482 and @xmath483 so @xmath484    we prove inequality ( [ eq : outline_c_i ] ) for @xmath485 in two steps .",
    "lemma [ lem : conditional_x_i_bound ] shows that if the greedy algorithm chooses @xmath486 then with high probability @xmath487 ( informally this is to say that @xmath143 is concentrated around its mean , which is @xmath488 ) .",
    "next , lemma [ lem : independent ] and lemma [ lem : ci_cond_xi ] imply that if the greedy algorithm chooses @xmath143 then @xmath489 substituting equation ( [ eqn : mean ] ) in ( [ eqn : mm ] ) we get ( [ eq : outline_c_i ] ) .",
    "the claim that @xmath490 which we mentioned before , extends ( with the same argument ) to partial sums .",
    "_ i.e. _ , for all @xmath491 @xmath492 using this with @xmath493 and substituting the bound ( [ eqn : beta ] ) which we have proven for @xmath494 , we get that @xmath495 .",
    "let @xmath496 , we have that the expected size of the maximal independent set in @xmath47 is at least @xmath497 .    in lemma [ lem : if_eq ]",
    "we show that for any @xmath498 the expected size of the maximal @xmath0-independent set in the point sets @xmath499 are equal ( and thus at least @xmath497 ) .",
    "it therefore follows that in the union @xmath500 the size of the maximal @xmath0-independent set is at least @xmath501 .",
    "ergo , the size of the maximal @xmath0-independent set in @xmath502 is at least @xmath503 .",
    "as the greedy algorithm is optimal ( lemma [ lem : greedy_best ] ) it follows that the greedy algorithm gives a @xmath0-independent set of size at least @xmath504 .",
    "the theorem follows by showing that for  large \" n , @xmath505      first let make the following definitions :    * define @xmath114 be the set @xmath506 where each @xmath110 is sampled uniformly in @xmath21 .",
    "* define the random variable @xmath143 , @xmath144 to be the @xmath145th smallest point in @xmath114 . *",
    "define the random variable @xmath146 to be the number of @xmath450 s that lie in the interval @xmath147 .",
    "note that at most one of the @xmath451 can belong to a @xmath0-independent set .",
    "* given any set @xmath56 of points we define the following _ greedy algorithm _ that constructs a @xmath0-independent set .",
    "the greedy algorithm initializes the set with the smallest point in @xmath56 and then traverses the remaining points in increasing order and adds the point @xmath30 to the @xmath0-independent set if @xmath30 is larger by at least @xmath0 from any point previously added .",
    "we denote by @xmath452 the @xmath0-independent set computed by applying greedy algorithm to @xmath56 .",
    "note that @xmath507 ( lemma ( [ lem : greedy_best ] ) ) .",
    "* let @xmath508 be a random variable which is the @xmath0-independent set obtained by the greedy algorithm when applied to the set @xmath114 .",
    "* let @xmath148 be a random variable with binary values where @xmath149 iff @xmath453 , and define @xmath509}.\\ ] ]    for @xmath510 the statement follows from lemma [ lem : prfot_small_n ] .",
    "so from here to the end of the proof we assume that @xmath511 .",
    "let @xmath512 , @xmath513 , be the set @xmath514 .",
    "note that for any @xmath513 @xmath515    it is easy to verify that @xmath516 by lemma [ lem : if_eq ] , @xmath517 for @xmath518 . by lemma [ lem : greedy_best ]",
    ", @xmath113 is the size of the independent set picked by the greedy algorithm and by the definition of the @xmath474 s we have that @xmath519 .",
    "so we get @xmath520    for simplicity lets @xmath521 be as define is lemma [ lem : half_expect ] @xmath522 where @xmath523 is as defined in lemma [ lem : half_expect ] and @xmath524 is as defined in lemma [ lem : logngamman ] .    substituting the lower bound on @xmath525 given by lemma [ lem : half_expect ] in equation ( [ eq : sumpi ] ) we get    @xmath526    since @xmath527 then @xmath528    now we upper bound the terms @xmath529 , @xmath530 , and @xmath531 for @xmath532 .",
    "we start with @xmath529 . @xmath533 where the last inequality follows since the functions @xmath534 , @xmath535 and @xmath536 are monotonic increasing in @xmath0 .",
    "so we have that @xmath537 where @xmath538 is a constant .",
    "now we look at the term @xmath539 : @xmath540 where the last inequality follows since the function @xmath534 , is monotonic increasing in @xmath0 , and @xmath541 .",
    "similarly for the term @xmath531 @xmath542 where @xmath543 .",
    "summing all three term together we get that @xmath544 substituting this bound back in equation ( [ eq : maineq ] ) completes the proof .    the following lemma is well known and can be proved by induction on @xmath545 .",
    "[ lem : greedy_best ] for any set @xmath56 , @xmath546 .",
    "the following lemma shows that when ",
    "@xmath20 is small \" as a function of @xmath0 , equation ( [ eq : theorem ] ) holds ; thus proving theorem [ theorem : half ] for this case . in the proof of this lemma",
    "we will use some arithmetical lemmas which are proved later ( lemmas [ len:1_min_1_n ] through [ lem:1_min_gamma ] )    [ lem : prfot_small_n ] for any @xmath547 , if @xmath548 , then : @xmath549    first we prove the lemma for @xmath550 ( since we would like to use lemma [ lem:1_min_gamma ] that works only for @xmath551 ) . for @xmath550 ,",
    "@xmath552 is @xmath0-independent so @xmath553 and the right hand side of equation in the statement is at most @xmath85 .",
    "we now prove the lemma for @xmath554 .",
    "for @xmath554 , using lemma [ lem : min_exp ] , we derive that @xmath555 the expression in ( [ eq : lem42 ] ) is no smaller than the expression in ( [ eq : lem43 ] ) since @xmath556 for any @xmath557 , see lemma [ len:1_min_1_n ] .",
    "we now give a lower bound for the terms in equation ( [ eq : lem44 ] ) .",
    "for @xmath558 we have @xmath559 inequality ( [ eq : lem45 ] ) follows since @xmath560 .",
    "inequality ( [ eq : lem46 ] ) follows since the function @xmath561 is smaller than @xmath73 for every @xmath562 , see lemma [ lem : arithmetic_xlnx ] .",
    "inequality ( [ eq : lem47 ] ) follows since @xmath563 for @xmath564 and @xmath565 , see lemma [ lem:1_min_gamma ] .",
    "for @xmath566 , using the taylor expansion of @xmath567 around @xmath300 we get that for any @xmath30 there exists @xmath44 s.t .",
    "@xmath568 , so @xmath569    plugging these lower bounds back into equation ( [ eq : lem44 ] ) we get @xmath570 inequality ( [ eq : lem05_03 ] ) follows since @xmath560 .",
    "inequality ( [ eq : lem05_04 ] ) follows since the function @xmath534 is monotonically increasing with @xmath0 .",
    "inequality ( [ eq : lem05_05 ] ) follows by substituting the value of @xmath571 .",
    "[ lem : min_pi ] @xmath572 } \\geq ( 1-\\gamma)^{n-1}$ ] .",
    "note that for all @xmath573 , the probability that the @xmath3th sample of @xmath114 is the @xmath145th smallest ( i.e.  the probability that @xmath574 ) is exactly @xmath575 . also , note that for any @xmath576 , @xmath577 , the probability that @xmath578 falls into the real interval @xmath579 is at most @xmath0 .",
    "it therefore follows that @xmath580 } & \\geq & \\sum_{k=1}^{n}{{\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , x_i = y_k\\,{\\aftergroup\\egroup\\originalright}]}\\cdot \\mbox{prob}\\bigr[\\mbox{for all\\ } j\\neq k , y_j \\not\\in [ y_k - \\gamma , y_k)\\bigr ] } \\\\ & = & \\frac{1}{n}\\sum_{k=1}^{n}(1-\\gamma)^{n-1 } = \\frac{1}{n}\\cdot n ( 1-\\gamma)^{n-1 } = ( 1-\\gamma)^{n-1 }   \\ .\\end{aligned}\\ ] ]    [ lem : min_exp ]",
    "@xmath581    we have that @xmath582 } \\geq n(1-\\gamma)^{n-1}$ ] , by lemma [ lem : min_pi ] .",
    "[ lem : half_expect ] for any @xmath583 , @xmath584 , and any @xmath585 we have that @xmath586 where @xmath587 and @xmath523 , is defined precisely in the proof below and @xmath524 is define in lemma [ lem : logngamman ] .    from lemma [ lem",
    ": ci_sum ] it follows that @xmath588 . using lemma [ lem : cond_ci_bound ] to upper bound @xmath589 we get that : @xmath590 where @xmath591",
    "now we give an upper bound for the factor @xmath592 in equation ( [ eq : p_i_right ] ) .",
    "the function @xmath593 is increasing with @xmath0 for @xmath594 and decreasing with @xmath20 for @xmath595 ( use lemma [ lem : arithmetic_xlnx ] with @xmath596 ) .",
    "therefore for @xmath585 and for @xmath597 we have that @xmath598 . since for any @xmath599 we have that @xmath600 and since @xmath601 we get that : @xmath602    next , we give an upper bound on @xmath603 .",
    "@xmath604 where @xmath605 and @xmath521 is as defined in the statement of the lemma above .",
    "inequality ( [ eq : long_lemma_3 ] ) follows from lemma [ lem : logngamman ] .    substituting the bound from equation ( [ eq : long_lemma_rgamma ] ) into equation ( [ eq : first_mul_8 ] ) and the bound from equation ( [ eq : first_mul_8 ] ) into equation ( [ eq : p_i_right ] ) we get @xmath606    isolating @xmath607 we obtain @xmath608 where inequality ( [ eq : one_minus_x ] ) follows since @xmath609 for @xmath610 .",
    "[ lem : ci_sum ] for all @xmath611 , @xmath612 .",
    "recall that @xmath450 is a random variable equal to the @xmath613th point from the left . for",
    "a given instantiation of the @xmath450 let @xmath614 be the subset of the @xmath3 leftmost points that were chosen by the greedy algorithm .",
    "note that @xmath615 iff the instantiation of @xmath148 is one .",
    "the union of the intervals @xmath616 , @xmath617 , must include the instantiations of @xmath618 .",
    "this follows since otherwise there would be some point that was not selected by the greedy choice and that could be selected , contradicting the definition of the greedy algorithm . hence : @xmath619 . taking expectations we get that @xmath620}\\cdot\\exp{c_i\\cdot 0 \\mid   i_i = 0 } + { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , i_i = 1\\,{\\aftergroup\\egroup\\originalright}]}\\cdot\\exp{c_i \\cdot 1\\mid   i_i = 1 } } \\\\ & = & \\sum_{i=1}^{k } { p_i \\exp{c_i \\mid i_i = 1}}.\\end{aligned}\\ ] ]    [ lem : cond_ci_bound ] given any @xmath621 , integer @xmath511 , and integer @xmath622 we have that @xmath623",
    "define @xmath624 we have that @xmath625}\\cdot\\exp{c_i \\mid ( x_i < a_i)\\wedge i_i=1}\\nonumber \\\\ & & \\qquad + { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , x_i \\geq a_i\\mid i_i=1\\,{\\aftergroup\\egroup\\originalright}]}\\cdot\\exp{c_i \\mid ( x_i \\geq a_i)\\wedge i_i=1}.\\label{eq : scary_sum}\\end{aligned}\\ ] ] for the second term , from lemma [ lem : conditional_x_i_bound ] , we derive that @xmath626 } \\leq \\frac{1}{n^2}$ ] .",
    "in addition , since the number of points to the right of ( or at ) the @xmath145th point from the left is @xmath627 , we have that @xmath628 hence , for the second term @xmath629}\\cdot\\exp{c_i \\mid ( x_i \\geq a_i ) \\wedge i_i=1 } \\leq \\frac{1}{n}.\\ ] ]    for the first term we apply lemmata [ lem : independent ] ( in equation ( [ eq : integral_1 ] ) ) and [ lem : ci_cond_xi ] ( in inequality ( [ eq : integral_2 ] ) ) to derive @xmath630}\\exp{c_i \\mid   x_i = x \\wedge i_i=1 } dx } \\nonumber \\\\ & = & \\int_{0}^{a_i}{{\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , x_i = x \\mid x_i < a_i \\wedge i_i=1\\,{\\aftergroup\\egroup\\originalright}]}\\exp{c_i \\mid   x_i = x } dx } \\label{eq : integral_1 } \\\\ & \\leq & \\int_{0}^{a_i}{{\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , x_i = x \\mid x_i < a_i \\wedge i_i=1\\,{\\aftergroup\\egroup\\originalright}]}{\\mathopen{}\\mathclose\\bgroup\\originalleft}(1+\\frac{\\gamma}{1-t}(n - i){\\aftergroup\\egroup\\originalright } ) dx } \\label{eq : integral_2 } \\\\ &",
    "\\leq & \\int_{0}^{a_i}{{\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , x_i = x \\mid x_i < a_i \\wedge i_i=1\\,{\\aftergroup\\egroup\\originalright}]}{\\mathopen{}\\mathclose\\bgroup\\originalleft}(1+\\frac{\\gamma}{1-a_i}(n - i){\\aftergroup\\egroup\\originalright } ) dx } \\nonumber \\\\ & \\leq & { \\mathopen{}\\mathclose\\bgroup\\originalleft}(1+\\frac{\\gamma}{1-a_i}(n - i){\\aftergroup\\egroup\\originalright})\\int_{0}^{a_i}{{\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , x_i = x \\mid x_i <",
    "a_i \\wedge i_i=1\\,{\\aftergroup\\egroup\\originalright } ] } dx } \\nonumber \\\\ & = & 1+\\frac{\\gamma}{1-a_i}(n - i ) \\label{eq : c_i_cond_x_i_2}\\end{aligned}\\ ] ] by substituting ( [ eq : first_term11 ] ) and ( [ eq : c_i_cond_x_i_2 ] ) into equation ( [ eq : scary_sum ] ) we get that : @xmath631    substituting the value of @xmath632 from equation ( [ eq : def_ai ] ) in equation ( [ eq : c__i_cond12 ] ) we get @xmath633    since @xmath634 we get that : @xmath635    by the assumption that @xmath636 and @xmath511 it follows that expression ( [ eq : down_bound ] ) is strictly less than one .",
    "thus , we can substitute expression ( [ eq : down_bound ] ) into equation ( [ eq : down ] ) and derive @xmath637    by substituting the upper bound in equation ( [ eq : second_term11 ] ) into inequality ( [ eq : c__i_cond12 ] ) we derive the statement of the lemma .    [",
    "lem : conditional_x_i_bound ] for any @xmath144 ,",
    "@xmath638 \\leq \\frac{1}{n^2}\\ ] ]    define @xmath639 . from bayes rule and lemmata",
    "[ lem : min_pi ] and [ lem : x_i_bound ] we get that @xmath640 } & = & \\frac{{\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , x_i \\geq a_i \\wedge i_i = 1\\,{\\aftergroup\\egroup\\originalright}]}}{{\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , i_i = 1\\,{\\aftergroup\\egroup\\originalright } ] } } \\nonumber \\\\ & \\leq & \\frac{{\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , x_i \\geq a_i\\,{\\aftergroup\\egroup\\originalright}]}}{{\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , i_i = 1\\,{\\aftergroup\\egroup\\originalright } ] } } \\nonumber \\\\ & \\leq & \\frac{\\frac{1}{n^2}(1-\\gamma)^n}{(1-\\gamma)^{n-1 } } \\label{eq : x_i_bound1 } \\\\ & \\leq & \\frac{1}{n^2 } \\ .\\nonumber\\end{aligned}\\ ] ] we use lemma [ lem : x_i_bound ] to bound the numerator in inequality ( [ eq : x_i_bound1 ] ) and lemma [ lem : min_pi ] to bound the denominator in inequality ( [ eq : x_i_bound1 ] ) .",
    "[ lem : x_i_bound ] for @xmath641 , @xmath642 } \\leq \\frac{1}{n^2}(1-\\gamma)^n\\ ] ]    the probability that @xmath643 for some @xmath644 is exactly the probability that for some @xmath645 exactly @xmath3 of the random points lie in @xmath646 $ ] .",
    "that is @xmath647 } = \\sum_{k=0}^{i-1}{{n\\choose k}}p^i(1-p)^{n - k } \\label{eq : binomial}\\ ] ] notice that the right hand side of equation ( [ eq : binomial ] ) is exactly the probability that a binomial random variable with @xmath20 trials and success probability @xmath648 ( @xmath649 ) is at most @xmath650 .",
    "so we can apply hoeffding s inequality } \\le   e^{-2\\epsilon^2 n}$ ] .",
    "we use this with @xmath651 . ] to get @xmath652 } & = & { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin(n , p ) \\leq i-1\\,{\\aftergroup\\egroup\\originalright } ] } \\\\ & = & { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin(n , p ) \\leq { \\mathopen{}\\mathclose\\bgroup\\originalleft}(p - { \\mathopen{}\\mathclose\\bgroup\\originalleft}(p - \\frac{i-1}{n}{\\aftergroup\\egroup\\originalright}){\\aftergroup\\egroup\\originalright})n\\,{\\aftergroup\\egroup\\originalright } ] } \\\\ & \\leq & e^{-2{\\mathopen{}\\mathclose\\bgroup\\originalleft}(p - \\frac{i-1}{n}{\\aftergroup\\egroup\\originalright})^2 n}\\end{aligned}\\ ] ] by choosing @xmath653 we get that @xmath652 } & \\leq & e^{-2{\\mathopen{}\\mathclose\\bgroup\\originalleft}(p - \\frac{i-1}{n}{\\aftergroup\\egroup\\originalright})^2 n } \\\\ & = & e^{-n\\ln{\\frac{1}{1-\\gamma } } - 2\\ln{n } } \\\\ & = & \\frac{(1-\\gamma)^n}{n^2}\\end{aligned}\\ ] ] finishing the proof of the lemma .",
    "[ lem : independent ] for any @xmath654 , conditioned on the event @xmath655 , the random variables @xmath146 and @xmath148 are independent .",
    "formally , @xmath656 } = { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , c_i \\leq k \\mid ( x_i = x)\\,{\\aftergroup\\egroup\\originalright}]}.\\ ] ]    given that @xmath657 , the set @xmath47 of the @xmath145 items arriving at times @xmath658 , and the arrival times of the items in @xmath47 ( that is @xmath659 ) , the action of the greedy algorithm on the @xmath145th item arriving at @xmath30 is determined ( that is @xmath148 is determined ) .",
    "on the other hand , @xmath146 depends only on the arrival times of the points not in @xmath47 ( that is @xmath660 ) .",
    "since this holds for any set @xmath47 , and for any arrival times of these points , it also holds without conditioning on @xmath47 .",
    "[ lem : ci_cond_xi ] for any @xmath654 , @xmath661 \\leq 1 + \\frac{\\gamma}{1-x}(n - i)\\ ] ]    conditioning on @xmath657 , there are exactly @xmath662 points each distributed uniformly in @xmath663 .",
    "let @xmath664 be @xmath662 independent random variables each distributed uniformly in @xmath663 .",
    "since @xmath146 contains the @xmath145th point and any of the following points the falls in @xmath665 we have that @xmath666 } } \\ .\\end{aligned}\\ ] ] if @xmath667 then @xmath668 } = \\frac{\\gamma}{1-x}$ ] , otherwise @xmath668 } = 1 $ ] , therefore @xmath669    [ lem : if_eq ] for all @xmath670 such that @xmath671 , @xmath672    the number of @xmath0-independent points are invariant under translation and rotation , _",
    "i.e. _ , for any real @xmath30 and for every @xmath673 , @xmath674 , and for any set of points @xmath675 , @xmath676    assume that @xmath677 .",
    "the vectors @xmath678 and @xmath679 have the same distribution , and the lemma follows from ( [ eq : minvariant ] ) .    otherwise , ( @xmath680 ) , we condition on @xmath681 .",
    "it now follows that the vectors @xmath678 and @xmath682 have the same distribution .",
    "therefore , it follows from ( [ eq : minvariant ] ) that @xmath683 since the above holds for every @xmath30 , the lemma follows .",
    "we now give several technical lemmata required to conclude the proofs above .",
    "[ len:1_min_1_n ] for any @xmath684 @xmath685    for any @xmath30 such that @xmath686 we have that @xmath687 .",
    "so by integrating from @xmath688 to @xmath85 we get that    @xmath689    inequality ( [ eq : exp04 ] ) follows from ( [ eq : exp03 ] ) by taking the @xmath690 power of both sides and ( [ eq : exp05 ] ) follows from ( [ eq : exp04 ] ) by multiplying both sides by @xmath691 .",
    "[ lem : arithmetic_xlnx ] for @xmath692 , @xmath693 is monotonically decreasing , and for any @xmath694 , @xmath695    let @xmath696 .",
    "then @xmath697 which is positive for any @xmath698 and negative for any @xmath699 .",
    "therefore the maximum of @xmath39 is obtained at @xmath700 .",
    "it follows that for all @xmath701 @xmath702    [ lem:1_min_gamma ] for any @xmath554 and any @xmath703 @xmath704    it suffices to prove the above inequality for @xmath705 , for @xmath706 the right hand side can only decrease whereas the left hand side does not depend on @xmath20 .",
    "now , @xmath707 , and @xmath708 for all @xmath709 so the lemma holds .",
    "[ lem : logngamman ] for any @xmath710 we have that @xmath711 where @xmath536 is defined to be @xmath712 .",
    "fix @xmath713 , define @xmath714 and let @xmath715 .",
    "note that @xmath716 for @xmath713 , we show below that @xmath717 assume that equation ( [ eq : boundsn0 ] ) holds . as both @xmath718 and @xmath719 are monotonically increasing in @xmath20",
    ", it follows that for all @xmath720 @xmath721    where inequality ( [ eq : hn02 ] ) follows from the two bounds in equation ( [ eq : boundsn0 ] ) , equation ( [ eq : hn03 ] ) is the statement of the lemma .",
    "it remains to prove the inequalities in ( [ eq : boundsn0 ] ) .",
    "we show below that for all @xmath722 : @xmath723 , and that for all @xmath724 : @xmath725 , this proves equation ( [ eq : boundsn0 ] ) .",
    "the derivative of @xmath726 ( with respect to @xmath20 ) is @xmath727 as the denominator of @xmath728 is positive , the nominator determines the sign .",
    "ergo , it is enough to look at the sign of @xmath729 and , again , as @xmath730 , this is equal to the sign of @xmath731    for @xmath722 , it must be that @xmath732 , and hence @xmath733 .",
    "as @xmath716 and @xmath734 we have that @xmath735 and @xmath736 . now , we have that @xmath737    thus concluding the proof of ( [ eq : boundsn0 ] ) and the lemma .",
    "a capacity @xmath2 @xmath0-independent set is a set of  feasible rentals \" , given that @xmath2 items can be rented , and each item is rented for a period of length @xmath0 .",
    "equivalently to the definition in section [ sec : def ] , a capacity @xmath2 @xmath0-independent set is a set of points @xmath50 , such that given any subset of intervals @xmath403 , @xmath738 , @xmath739 , the intersection of all intervals in @xmath403 is empty .",
    "the unit interval graph is defined by intervals of length @xmath0 whose left endpoints are the points of @xmath114 .",
    "let @xmath740 denote the size of a maximum capacity @xmath2 @xmath0-independent subset of a set @xmath114 .",
    "in this section we study the expectation of @xmath740 when the points of @xmath114 are chosen uniformly at random in @xmath21 .",
    "specifically we prove :      let @xmath240 be a random subset of @xmath114 of size @xmath744 where + @xmath745 . since for any subset @xmath746 , @xmath747",
    "a lower bound on @xmath748 is also a lower bound on @xmath749 .",
    "as @xmath114 is a random set of points and @xmath240 is a random subset of @xmath114 , choosing @xmath114 first and then choosing @xmath240 gives the same distribution on @xmath240 as does simply choosing @xmath240 at random .",
    "let @xmath750 be the subset of @xmath240 containing only points @xmath30 that do not have @xmath2 points in an interval of length @xmath0 ending at @xmath30 .",
    "so @xmath751 is a capacity @xmath2 @xmath0-independent set ( as the greedy algorithm applied to @xmath751 will pick all the points ) .",
    "therefore for any fixed @xmath114 , @xmath752 since @xmath753 we have @xmath754 from ( [ eq : yprimeind ] ) and ( [ eq : parsedchain ] ) follows that it suffices to show a lower bound on @xmath755 .",
    "@xmath756}}\\nonumber \\\\\\nonumber & \\geq & { { \\mathopen{}\\mathclose\\bgroup\\originalleft}\\lvert{y}{\\aftergroup\\egroup\\originalright}\\rvert}\\cdot{{\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin({{\\mathopen{}\\mathclose\\bgroup\\originalleft}\\lvert{y}{\\aftergroup\\egroup\\originalright}\\rvert}-1,\\gamma ) \\leq d-1\\,{\\aftergroup\\egroup\\originalright } ] } } \\\\\\nonumber & = & { { \\mathopen{}\\mathclose\\bgroup\\originalleft}\\lvert{y}{\\aftergroup\\egroup\\originalright}\\rvert}\\cdot{\\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - { { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin(\\min{(n , t)-1},\\gamma ) \\geq d\\,{\\aftergroup\\egroup\\originalright}]}}{\\aftergroup\\egroup\\originalright } ) \\\\\\nonumber & \\geq & { { \\mathopen{}\\mathclose\\bgroup\\originalleft}\\lvert{y}{\\aftergroup\\egroup\\originalright}\\rvert}\\cdot{\\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - { { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin(t-1),\\gamma ) \\geq d\\,{\\aftergroup\\egroup\\originalright}]}}{\\aftergroup\\egroup\\originalright } ) \\\\\\nonumber & = & { { \\mathopen{}\\mathclose\\bgroup\\originalleft}\\lvert{y}{\\aftergroup\\egroup\\originalright}\\rvert}\\cdot{\\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - { { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin(t-1,\\gamma ) \\geq { \\mathopen{}\\mathclose\\bgroup\\originalleft}(1 + \\frac{d-(t-1)\\gamma}{(t-1)\\gamma}{\\aftergroup\\egroup\\originalright})(t-1)\\gamma\\,{\\aftergroup\\egroup\\originalright}]}}{\\aftergroup\\egroup\\originalright})\\ \\\\&= & { { \\mathopen{}\\mathclose\\bgroup\\originalleft}\\lvert{y}{\\aftergroup\\egroup\\originalright}\\rvert}\\cdot{\\mathopen{}\\mathclose\\bgroup\\originalleft}(1 - { { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin(t-1,\\gamma ) \\geq { \\mathopen{}\\mathclose\\bgroup\\originalleft}(1 + \\frac{\\sqrt{3d\\ln{d}}}{(t-1)\\gamma}{\\aftergroup\\egroup\\originalright})(t-1)\\gamma\\,{\\aftergroup\\egroup\\originalright}]}}{\\aftergroup\\egroup\\originalright})\\ .",
    "\\label{eq : lowerbeforechernoff}\\end{aligned}\\ ] ] the derivation following the 4th line above follows since @xmath757 . applying the multiplicative form of the chernoff bound ( @xmath758}\\leq e^{-\\frac{\\epsilon^2\\mu}{3}}$ ] when @xmath36 is sum of @xmath20 iid random variables and @xmath759 on @xmath760 with @xmath761 we obtain            obviously @xmath770 .",
    "therefore @xmath771 to give un upper bound on the size of @xmath772 notice that if @xmath773 then @xmath774 is a capacity @xmath2 @xmath0-independent set , thus @xmath775 . otherwise , any subset @xmath776 of @xmath774 is capacity @xmath2 @xmath0-independent set iff @xmath777 .",
    "thus @xmath778 .",
    "combining these observations we get @xmath779 @xmath780 count the number of points that fall into the line segment @xmath781 when we throw @xmath25 points uniformly at random into the line segment @xmath21 .",
    "ergo , @xmath782 is distributed as @xmath783 , therefore @xmath784 from lemma ( [ lem : binwithoutmid ] ) ( see below ) and the equation above we conclude that @xmath785 . substituting this bound into ( [ eq : mdmin ] ) and",
    "then into ( [ eq : lowersum ] ) we obtain @xmath786 finishing the proof of the theorem .    the following lemma deals with the following experiment : toss @xmath20 coins with probability @xmath648 of heads , return the number of heads if the number of heads @xmath787 ( the expectation ) , otherwise return @xmath388 .",
    "what is the expected value of this experiment relative to @xmath388 ?",
    "the probability that the outcome exceeds @xmath788 decreases exponentially with @xmath63 , where @xmath389 is the standard deviation ( @xmath789 in our case ) .",
    "this suggests that the expected difference is @xmath65 standard deviations , which is the claim of the next lemma :      @xmath794}\\nonumber\\\\ & = & \\mu\\sum_{k=1}^{\\mu}{\\frac{k}{\\mu}\\cdot\\frac{n}{k}{{{n-1 } \\choose { k-1}}{{p}^{k-1}(1-{p})^{n - k}}}}p      ~+~ \\mu\\cdot{\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin(n , p)\\geq \\mu + 1\\,{\\aftergroup\\egroup\\originalright}]}\\nonumber\\\\ & = & \\mu\\sum_{k=1}^{\\mu-1}{\\frac{np}{\\mu}\\cdot{{{n-1 } \\choose { k}}{{p}^{k}(1-{p})^{{n-1}-{k } } } } }      ~+~ \\mu\\cdot{\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin(n , p)\\geq \\mu + 1\\,{\\aftergroup\\egroup\\originalright}]}\\nonumber\\\\ & = & \\mu\\cdot{\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin(n-1,p)\\leq \\mu -1\\,{\\aftergroup\\egroup\\originalright } ] }      ~+~ \\mu\\cdot{\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin(n , p)\\geq \\mu + 1\\,{\\aftergroup\\egroup\\originalright}]}\\label{eq : midbintarget}\\end{aligned}\\ ] ]    we describe a single experiment with two disjoint events @xmath47 , and @xmath776 , such that @xmath795}={\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin(n-1,p)\\leq \\mu -1\\,{\\aftergroup\\egroup\\originalright}]}$ ] , and @xmath796}={\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin(n , p)\\geq \\mu + 1\\,{\\aftergroup\\egroup\\originalright}]}$ ]",
    ". this will be useful as then the probability of ( @xmath47 or @xmath776 ) is simply the sum of these probabilities .",
    "the experiment is to toss @xmath20 coins , where the probability of heads is @xmath648 ,    * event @xmath47 occurs if amongst the first @xmath797 results there were no more than @xmath798 heads , @xmath795}={\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin(n-1,p)\\leq \\mu -1\\,{\\aftergroup\\egroup\\originalright}]}$ ]",
    ". * event @xmath776 occurs if in total , over @xmath20 coin tosses , there were at least @xmath799 heads , @xmath796}={\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin(n , p)\\geq \\mu + 1\\,{\\aftergroup\\egroup\\originalright}]}$ ] . *",
    "it is easy to see that if @xmath47 holds then @xmath776 can not occur . likewise ,",
    "if @xmath776 holds then @xmath47 can not occur .",
    "thus , @xmath800 } = { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , a\\,{\\aftergroup\\egroup\\originalright } ] } + { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , b\\,{\\aftergroup\\egroup\\originalright } ] } } \\nonumber \\\\ & = & { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin(n-1,p)\\leq \\mu -1\\,{\\aftergroup\\egroup\\originalright } ] } + { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin(n , p)\\geq \\mu + 1\\,{\\aftergroup\\egroup\\originalright}]}\\end{aligned}\\ ] ] on the other hand , the complimentary event to @xmath801 , @xmath802 , occurs if during the first @xmath797 tosses there were exactly @xmath388 heads and the last coin toss gave tails .",
    "therefore @xmath803 } & = & 1 - { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , ~\\overline{a \\vee b}~\\,{\\aftergroup\\egroup\\originalright } ] } \\nonumber \\\\ & = & 1 - { \\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin(1 , p ) = 0\\,{\\aftergroup\\egroup\\originalright } ] } \\cdot{\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin(n-1 , p ) = \\mu\\,{\\aftergroup\\egroup\\originalright}]}\\nonumber \\\\ & = & 1- ( 1-p)\\cdot{\\mbox{\\rm prob}{\\mathopen{}\\mathclose\\bgroup\\originalleft}[\\ , bin(n-1 , p ) = \\mu\\,{\\aftergroup\\egroup\\originalright}]}\\label{eq : midbinleftside}\\end{aligned}\\ ] ] substituting ( [ eq : midbinleftside ] ) into ( [ eq : midbinrightside ] ) and the result into ( [ eq : midbintarget ] ) we obtain @xmath804}\\big).\\ ] ] to finish the proof we bound @xmath805}$ ] , recall that @xmath792 : @xmath806 } } \\nonumber \\\\&= & ( 1-p){{{n-1 } \\choose { np}}{{p}^{np}(1-{p})^{{n-1}-{np } } } } \\nonumber \\\\&= & \\frac{(n-1)!}{(np)!\\cdot(n-1-np)!}p^{np}(1-p)^{n - np}\\nonumber \\\\&= & \\frac{n - np}{n}\\cdot\\frac{n!}{(np)!\\cdot(n - np)!}\\cdot p^{np}(1-p)^{n - np}\\nonumber \\\\&\\geq & \\frac{n - np}{n}\\cdot\\frac{\\sqrt{2\\pi}\\cdot n^n\\sqrt{n}}{e^n}~\\nonumber      \\\\ & & \\qquad\\cdot\\,\\frac{e^{np}}{e\\cdot(np)^{np } \\cdot \\sqrt{np } }          \\,\\cdot\\,\\frac{e^{n - np}}{e\\cdot ( n - np)^{n - np } \\cdot\\sqrt{n - np}}\\cdot p^{np}(1-p)^{n - np } \\label{eq : stirlingleft } \\\\ & = & \\frac{\\sqrt{2\\pi}}{e^2 }      \\cdot\\frac{n - np}{n}\\cdot \\frac{\\sqrt{n}}{\\sqrt{np } \\cdot \\sqrt{n - np } }      \\cdot\\frac{n^n}{n^{np}\\cdot p^{np}\\cdot n^{n - np } \\cdot(1-p)^{n - np } } \\cdot p^{np}(1-p)^{n - np}\\nonumber \\\\ & = & { \\frac{\\sqrt{2\\pi}}{e^2}}\\cdot\\frac{n - np}{n}\\cdot \\frac{\\sqrt{n}}{\\sqrt{np } \\cdot \\sqrt{n - np } }      \\nonumber \\\\ & = & { \\frac{\\sqrt{2\\pi}}{e^2}}\\cdot \\frac{\\sqrt{1-p}}{\\sqrt{\\mu}}\\label{eq : binmidfinallower}\\end{aligned}\\ ] ] where inequality ( [ eq : stirlingleft ] ) follows from stirling s lower bound on @xmath27 in the numerator and stirling s upper bound on @xmath807 and @xmath808 in the denumerator .    a similar proof , using stirling s upper bound on @xmath27 and stirling s lower bound on @xmath807 and @xmath808 yields @xmath809 } \\leq { \\frac{e}{2\\pi}}\\frac{\\sqrt{1-p}}{\\sqrt{\\mu}}\\ ] ] assigning bound ( [ eq : binmidfinalupper ] ) and ( [ eq : binmidfinallower ] ) into equation ( [ eq : midbinlastsub ] ) gives the statement of the lemma ."
  ],
  "abstract_text": [
    "<S> we consider a generalization of the secretary problem where contracts are temporary , and for a fixed duration @xmath0 . </S>",
    "<S> this models online hiring of temporary employees , or online auctions for re - usable resources . </S>",
    "<S> the problem is related to the question of finding a large independent set in a random unit interval graph . </S>"
  ]
}
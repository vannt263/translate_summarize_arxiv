{
  "article_text": [
    "simoututils is a suite of matlab @xcite functions for studying and analyzing time series - like output from stochastic simulation models , as well as for producing associated publication quality figures and tables .",
    "more specifically , the functions bundled with simoututils allow to :    1 .",
    "study and visualize simulation output dynamics , namely the range of values per iteration and the existence or otherwise of transient and steady - state stages .",
    "2 .   perform distributional analysis of focal measures ( fms ) , i.e. of statistical summaries taken from model outputs ( e.g. , maximum , minimum , steady - state averages ) .",
    "3 .   determine the alignment of two or more model implementations by statistically comparing fms .",
    "in other words , aid in the process of _ docking _ simulation models @xcite .",
    "4 .   from the previous points ,",
    "produce publication quality latex  tables and figures ( the latter via the matlab2tikz script @xcite ) .",
    "these utilities were originally developed to study the predator - prey for high - performance computing ( pphpc ) agent - based model @xcite , namely by statistically analyzing its outputs for a number of different parameters and comparing the dynamical behavior of different implementations @xcite .",
    "they were later generalized to be usable with any stochastic simulation model with time series - like outputs .",
    "the utilities were carefully coded in order to be compatible with gnu octave @xcite .",
    "the simoututils suite is implemented in a procedural programming style , and is bundled with a number of functions organized in modules or function groups . as shown in figure  [ fig : simoututils_arch ] , the following function groups are provided with simoututils :    1 .",
    "core functions .",
    "distributional analysis functions .",
    "model comparison functions .",
    "helper and third - party functions ( not shown in figure [ fig : simoututils_arch ] ) .",
    "the next sections describe each group of functions in additional detail .",
    "core functions work directly with simulation output files or perform low - level manipulation of outputs .",
    "the stats_get function is the basic unit of this module , and is at the center of the simoututils suite . from the perspective of the remaining functions , stats_get is responsible for extracting statistical summaries from simulation outputs from one file ( i.e. , from the outputs of one simulation run ) . in practice ,",
    "the actual work is performed by another function , generically designated as stats_get _ , to which stats_get serves as a facade for .",
    "the exact function to use ( and consequently , the concrete statistical summaries to extract ) is specified in a namespaced global variable defined in the simoututils startup script .",
    "this allows researchers to extract statistical summaries and use fms adequate for different types of simulation output .",
    "two stats_get _ functions are provided , namely stats_get_pphpc and stats_get_iters .",
    "the former , set by default , was developed for the pphpc model , and obtains six statistical summaries from each output : maximum , iteration where maximum occurs , minimum , iteration where minimum occurs , steady - state mean and steady - state standard deviation .",
    "it is adequate for time - series outputs with a transient stage and a steady - state stage .",
    "the latter , stats_get_iters , obtains statistical summaries corresponding to output values at user - specified instants .",
    "it is very generic , and is appropriate for cases where it is hard to derive other meaningful statistics from simulation output .",
    "stats_get _ functions are also required to provide the name of the returned statistical summaries .",
    "this metadata is used by higher level functions for producing figures and tables .",
    "the stats_gather function extracts fms from multiple simulation output files , i.e. , for a number of simulation runs , by calling stats_get for individual files .",
    "it returns an object containing a @xmath0 matrix , with @xmath1 observations ( from @xmath1 files ) and @xmath2 fms ( i.e. , statistical summaries from one or more outputs ) .",
    "the returned object also includes metadata , namely a data name tag , output names and statistical summary names ( via stats_get and the underlying stats_get _ implementation ) .",
    "the matrix returned by stats_gather can be feed into the stats_analyze function , which determines , for each sample of @xmath1 elements of individual fms , the following statistics : mean , variance , confidence intervals , @xmath3-value of the shapiro - wilk normality test @xcite and sample skewness .",
    "this function is called by all functions in the distributional analysis module , as discussed in the next section .",
    "plots of simulation output from one or more replications can be produced using output_plot .",
    "this function generates three types of plot : superimposed , extremes or moving average , as shown in figure [ fig : output_plot ] .",
    "superimposed plots display the output from one or more simulation runs ( figures [ fig : output_plot_a ] and [ fig : output_plot_b ] , respectively ) .",
    "extremes plots display the interval of values an output can take over a number of runs for all iterations ( figure [ fig : output_plot_c ] ) .",
    "finally , it is also possible to visualize the moving average of an output over multiple replications ( figure [ fig : output_plot_d ] ) .",
    "this type of plot requires the user to specify the window size ( a non - negative integer ) with which to smooth the output .",
    "a value of zero is equivalent to no smoothing , i.e. , the function will simply plot the averaged outputs .",
    "moving average plots are useful for empirically selecting a steady - state truncation point .",
    "+   +    the provided stats_get _ functions , as well as output_plot , use the dlmread matlab / octave function to open files containing simulation output . as such , these functions expect text files with numeric values delimited by a separator ( automatically inferred by dlmread )",
    ". the files should contain data values in tabular format , with one column per output and one row per iteration .",
    "functions in the distributional analysis module generate tables and figures which summarize different aspects of the statistical distributions of fms .",
    "the dist_plot_per_fm and dist_table_per_fm functions focus on one fm and provide a distributional analysis over several setups or configurations , i.e. , over a number of model scales and/or parameter sets . on the other hand , stats_table_per_setup and dist_table_per_setup offer a distributional analysis of all fms , fixing on one setup .",
    "the dist_plot_per_fm function plots the distributional properties of one fm , namely its estimated probability density function ( pdf ) , histogram and quantile - quantile ( qq ) plot .",
    "the information provided by stats_analyze is shown graphically and textually in the pdf plot .",
    "the main goal of dist_plot_per_fm is to provide a general overview of how the distributional dynamics of an fm vary with different model configurations .",
    "the dist_table_per_fm function produces similar content but is oriented towards publication quality materials .",
    "it outputs a partial latex  table with a distributional analysis for a range of setups ( e.g. , model scales ) and a specific use case ( e.g. , parameter set ) .",
    "these partial tables can be merged into larger tables , with custom features such as additional rows , headers and/or footers .",
    "tables 8 to 11 of reference @xcite were generated with this function .",
    "the stats_table_per_setup function produces a plain text or latex  table with the statistics returned by the stats_analyze function for all fms for one model setup . in turn , dist_table_per_setup generates a latex  table with a distributional analysis of all fms for one model setup . for each fm ,",
    "the table shows the mean , variance , @xmath3-value of the shapiro - wilk test , sample skewness , histogram and qq - plot .",
    "supplementary tables s2.1 to s2.10 of reference @xcite were created with this function .",
    "utilities in the model comparison group aid the modeler in comparing and aligning simulation models through informative tables and plots , also producing publication quality latex  tables containing @xmath3-values yielded by user - specified statistical comparison tests .",
    "the stats_compare_plot function plots the probability density function ( pdf ) and cumulative distribution function ( cdf ) of fms taken from multiple model implementations .",
    "it is useful to visually compare the alignment of these implementations , providing a first indication of the docking process .",
    "the stats_compare function is the basic procedure of the model comparison utilities , comparing fms from two or more model implementations by applying user - specified statistical comparison tests .",
    "it is internally called by stats_compare_pw and stats_compare_table , as shown in figure [ fig : simoututils_arch ] .",
    "the former applies two - sample statistical tests , in pair - wise fashion , to fms from multiple model implementations , outputting a plain text table of pair - wise failed tests .",
    "it is useful when more than two implementations are being compared , detecting which ones may be misaligned .",
    "the latter , stats_compare_table , is a very versatile function which outputs a latex  table with @xmath3-values resulting from statistical tests used to evaluate the alignment of model implementations .",
    "it was used to produce table  8 of reference @xcite and table  1 of reference @xcite .",
    "there are two additional groups of functions , the first containing helper functions , and the second containing third - party functions .",
    "helper functions are responsible for tasks such as determining confidence intervals , histogram edges , qq - plot points , moving averages and whether matlab or octave is being used .",
    "functions for formatting real numbers and @xmath3-values , as well as for creating very simple histograms and qq - plots in ti__k__z@xcite are also included in this group .    a number of third - party functions , mostly providing plotting features , are also included .",
    "the figtitle function adds a title to a figure with several subplots @xcite .",
    "the fill_between function @xcite is used by output_plot for filling the area between output extremes .",
    "the homemade_ecdf function @xcite is a simple octave - compatible replacement for the matlab - specific ecdf , assisting stats_compare_plot in producing the empirical cdfs . in turn",
    ", the kde function @xcite is used to estimate the pdfs plotted by stats_compare_plot and dist_plot_per_fm .",
    "the swtest function is the only third - party procedure not related to plotting , providing the @xmath3-values of the shapiro - wilk parametric hypothesis test of normality @xcite .",
    "some of these functions were modified , in accordance with the respective licenses , for better integration with the goals of simoututils .",
    "all functions have been individually tested for correctness in both matlab and octave , and most are covered by unit tests in order to ensure their correct behavior .",
    "the moxunit framework @xcite is required for running the unit tests .",
    "additionally , all the examples available in the user manual ( bundled with the software ) have been tested in both matlab and octave .",
    "these examples range from simple usage patterns to the concrete use cases of the articles in which simoututils was used @xcite .",
    "issues or bugs can be filed at https://github.com/fakenmc/simoututils/issues .",
    "support for simoututils is provided on best effort basis by emailing the author at nfachada@laseeb.org .",
    "any system capable of running matlab r2013a or gnu octave 3.8.1 , or higher .",
    "matlab r2013a or gnu octave 3.8.1 , or higher .",
    "matlab requires the statistics toolbox .",
    "the software was created by nuno fachada .",
    "name : :    simoututils persistent identifier : :    http://dx.doi.org/10.5281/zenodo.50525 licence : :    mit license publisher : :    zenodo date published : :    26/04/2016      name : :    simoututils identifier : :    https://github.com/fakenmc/simoututils licence : :    mit license date published : :    26/04/2016      english .",
    "these utilities can be used for analyzing any stochastic simulation model with time series - like outputs . as described in  core functions  , output - specific fms can be defined by implementing a custom stats_get _ function and setting its handle in the simoututils_stats_get _ global variable .",
    "the core stats_gather and stats_analyze functions can be integrated into other higher - level functions to perform operations not available in simoututils .",
    "this software uses additional matlab / octave functions written by chad a. greene @xcite , benjamin vincent @xcite , mathieu boutin @xcite , zdravko botev @xcite and ahmed ben sada @xcite .",
    "this work was supported by the fundao para a cincia e a tecnologia ( fct ) projects uid / eea/50009/2013 and uid / mat/04561/2013 , and partially funded with grant sfrh / bd/48310/2008 , also from fct .",
    "the author vitor v. lopes acknowledges the financial support from the prometeo project of senescyt ( ecuador ) .",
    "eaton , j.  w. , bateman , d. , hauberg , s. , and wehbring , r. ( march , 2015 ) gnu octave version 4.0.0 manual : a high - level interactive language for numerical computations , createspace independent publishing platform , fourth edition ."
  ],
  "abstract_text": [
    "<S> simoututils is a suite of matlab / octave functions for studying and analyzing time series - like output from stochastic simulation models . </S>",
    "<S> more specifically , simoututils allows modelers to study and visualize simulation output dynamics , perform distributional analysis of output statistical summaries , as well as compare these summaries in order to assert the statistical equivalence of two or more model implementations . </S>",
    "<S> additionally , the provided functions are able to produce publication quality figures and tables showcasing results from the specified simulation output studies .    210mm(3mm,3 mm ) the peer - reviewed version of this paper is published in the journal of open research software ( http://doi.org/10.5334/jors.110 ) . </S>",
    "<S> this version is typeset by the authors and differs only in pagination and typographical detail .    * </S>",
    "<S> _ keywords _ * simulation ; modeling ; docking ; simulation output analysis </S>"
  ]
}
{
  "article_text": [
    "the high experimental precision reached at the electron - positron machines lep ( cern ) and slc ( slac ) and the hadron collider tevatron ( fermilab ) requires from the theoretical side the evaluation of higher order quantum corrections . in the cases where",
    "perturbative methods are applied the quantum corrections can be expressed through an expansion in the coupling constant of the underlying theory .",
    "the individual terms can in turn be expressed through so - called feynman diagrams , which are often classified as multi - leg or multi - loop diagrams .",
    "vacuum integrals , i.e. integrals without external momenta , constitute an important sub - class and often serve as building blocks in complex calculations .",
    "in general the momentum integration of the loop integrals is divergent in four space - time dimensions . at present the most practical method to cope with this problem in higher loop orders",
    "is based on dimensional regularization  @xcite . there ,",
    "the four space - time dimensions are replaced by @xmath1 dimensions .",
    "then the integrals are solved for a choice of @xmath2 that renders them finite .",
    "finally an expansion for @xmath3 is performed and the divergences manifest themselves as poles in @xmath2 .    important progress in practical computations has been made roughly 20 years ago by establishing an algorithm for the evaluation of propagator - type diagrams up to three loops in the massless case  @xcite .",
    "they are important if there is only one external momentum which sets the mass scale for the problem .",
    "the formulae have been implemented on the computer in the form  @xcite package mincer  @xcite . in 1995 for the first time three - loop diagrams in the opposite limit , i.e. zero external momentum but massive lines , were systematically examined  @xcite .",
    "usually these are denoted as vacuum or tadpole diagrams . in",
    "@xcite all integrals contributing to the photon propagator have been considered .",
    "the main characteristics of this class of diagrams is that the massive line forms a closed loop .",
    "these considerations have been extended to the @xmath4 boson current correlators which led to one of the most prominent applications of three - loop vacuum integrals , namely the @xmath5 parameter at @xmath6  @xcite .",
    "the remaining cases have been considered in  @xcite .",
    "thus it is  at least in principle  possible to treat all problems where exactly one heavy mass is involved .    in this paper",
    "we want to present the program package matad which was designed for the computation of massive tadpoles at one- , two- and three - loop order as pictured in fig .",
    "[ fig : tad123 ] . thereby each line may be massless or carry the mass @xmath7 . in mathematical form",
    "the integrals to be solved by matad read @xmath8 with @xmath9 or @xmath10 .",
    "these expressions correspond to the diagrams in fig .",
    "[ fig : tad123 ] where the momentum @xmath11 flows through the line @xmath12 as indicated by the arrow .",
    "@xmath11 can be expressed as a linear combination of the loop momenta . however , these relations are in our case not of interest .",
    "note that the integrals in eq .",
    "( [ eq : inputints ] ) are defined in euclidean space .    the key idea for the computation of tadpole integrals",
    "is based on the integration - by - parts method  @xcite ( see also appendix  [ app : ibp ] ) .",
    "it can be used for the derivation of recurrence relations which relate vacuum integrals with different denominator structures .",
    "the proper use of the recurrence relations allows the reduction of an arbitrary integral to simple ones , which can be solved by successively using one- and two - loop formulae , and a linear combination of a few so - called master integrals . only for them",
    "a hard calculation is necessary . in the case of three - loop tadpole diagrams",
    "nine master integrals are needed .    at first sight",
    "the applications for vacuum integrals seem to be quite restricted .",
    "however , for diagrams involving several mass scales , which follow a certain hierarchy , it is very often advantageous to apply an asymptotic expansion  @xcite which allows for a systematic expansion in the inverse heavy scale",
    ". then the multi - scale integrals are expressed as products of single scale ones . in  @xcite and  @xcite",
    "the rules for the so - called large - momentum and hard - mass procedure have been automated and computer programs , lmp  @xcite and exp  @xcite , have been developed .",
    "they generate for a given diagram all relevant sub - graphs together with the administrative files which govern the very calculation .",
    "lmp  @xcite is written in perl and can be applied to problems where one large momentum is involved .",
    "exp  @xcite , written in c++ , allows for a successive use of the large - momentum and hard - mass procedure and thus can deal with problems involving many scales .",
    "both programs produce output which can be read into matad and mincer .",
    "thus the combination of both massive vacuum integrals and massless propagator - type diagrams is very powerful to attack problems involving several different mass scales .",
    "we want to mention that matad can be easily linked to a generator for feynman diagrams .",
    "more details  in particular on the automation of the computation of feynman diagrams  can be found in  @xcite .",
    "the outline of the paper is as follows : in section  [ sec : structure ] the structure of matad and the way it works is described . with the help of this section",
    "the reader should be able to use matad for his own problems .",
    "deeper insight into some selected parts is provided in section  [ sec : details ] . in section",
    "[ sec : examples ] explicit examples are discussed and hints for the convenient usage of matad are given . in appendix",
    "[ app : ibp ] the ideas of the integration - by - parts method are reviewed .",
    "appendix  [ app : topfile ] lists all massive / massless combinations which are implemented into the topology files and in appendix  [ app : not ] the notation of the input and output is described . furthermore the results for the master integrals are listed and the switches for the input - file are described .",
    "appendix  [ app : files ] contains a list of all files of matad and , finally , in appendix  [ app : testrun ] the complete output of one of the considered examples is listed .",
    "as matad is completely written in form  @xcite its installation reduces to copying the individual files into the corresponding directories . in the main directory",
    "the following files appear :    .... form.set   inc/   matadform   prc/   problems/ ....    the directories ` inc ` and ` prc ` contain the include - files and procedures , respectively .",
    "they are described in more detail in section  [ sec : details ] and appendix  [ app : files ] . `",
    "matadform ` is a shell script which calls form in such a way that files from sub - directories can be included .",
    "it has to be adjusted by the user by simply specifying the corresponding paths .",
    "the file ` form.set ` contains form - specific settings which have to be adjusted according to the underlying platform . for details concerning the different switches we refer to the form manual  @xcite .",
    "the user - specific files are all contained in the folder ` problems `",
    ".    there are at least two files which should be provided by the user : main < prb > and .dia where stands for the name of the considered problem .",
    "the first one contains apart from some parameters essentially the information which diagram should be treated .",
    "some explicit examples are given below .",
    "all the information about the diagrams , the projectors to be applied , etc.is contained in the file .dia .",
    "it is built up by form folds and splits into two parts so that its generic structure looks as follows    .... * -- # [ treat0 : [ ... ] * -- # ] treat0 :    * -- # [ treat1 : [ ... ] * -- # ] treat1 :    * -- # [ treat2 : [ ... ] * -- # ] treat2 :    * -- # [ treatmain : [ ... ] * -- # ] treatmain :    * * in the following list each diagram is contained in a separate form fold *    * -- # [ d1l1 : [ ... diagram 1 ... ] # define topology \" xy \" * -- # ] d1l1 :    * -- # [ d1l2 : [ ... diagram 2 ... ] # define topology \" xy \" * -- # ] d1l2 :    [ ... ] ....    the first part consists of the first four folds  the so - called special treat files .",
    "they provide the possibility to interact at different stages and thus influence the computation . whereas treat0 , treat1 and treat2 are read before the recurrence relations are applied the content of treatmain",
    "is read right before the results are stored to disk .",
    "the second part of .dia contains a list of all diagrams to be considered where each diagram is written in a separate fold .",
    "the name of these folds is arbitrary .",
    "once these two files are set up the calculation is simply initiated by calling the program main < prb > and the following steps are performed . they are also illustrated in fig .  [ fig : matad ] .    1 .",
    "read global settings .",
    "they are partly contained in inc / main.gen and should not be modified .",
    "others can be set by the user in the file main < prb>. they are described in appendix  [ app : settings ] .",
    "2 .   read the input data for the diagram specified in main < prb > with the help of the variables prb , folder and diagram .",
    "the generic form command reads ` # include problems/'prb'/'folder'.dia # ' diagram ' ` .    as a next step",
    "the file treat.prc is called and the following operations are performed .    1 .   insert feynman rules for functions appearing in the input .",
    "in a first step the fermions ( encoded in the functions s , ss ,  , cf .",
    "appendix  [ app : notin ] ) are resolved .",
    "it is important to do this before any contraction of indices is done .",
    "then the propagators and vertices are treated .",
    "+ in the current version the qcd feynman rules are implemented ( except the four - gluon vertex ; see appendix  [ app : notin ] ) .",
    "it is , however , straightforward to implement new vertices in the user - specific treat files .",
    "2 .   apply projector .",
    "this should be done in one of the special treat files .",
    "the optimal position depends on the integrals to be computed . from now on only scalar integrals without any free indices are present .",
    "3 .   expansion of the scalar denominators in the small quantities ( mass and/or momentum ) .",
    "perform traces .",
    "5 .   do wick rotation .",
    "this is done by multiplying each momentum by the imaginary unit ( see also appendix  [ app : not ] ) . from now on the expression is defined in euclidean space .",
    "apply derivatives in order to factorize the external momentum . in this context",
    "see also the variables dala12 and dalaqn in appendix  [ app : settings ] .    as there is the possibility to interact at three different places",
    " after the fermions are treated ( treat0 ) and before and after the traces are performed ( treat1 , respectively , treat2 ) the order of the commands may slightly be varied by the user .    at this stage",
    "the scalar products in the numerator of the integrals should be formed by either only loop momenta or only external momenta ( which then constitutes a trivial prefactor ) . in the denominator the ( scalar )",
    "propagators may be raised to arbitrary power .",
    "the next steps constitute the main part of matad .    1 .",
    "express the scalar products of the numerator in terms of the denominators .",
    "this produces a `` 1 '' in the numerator of the integrals .",
    "it might be that this step is very time and memory consuming .",
    "2 .   apply recurrence relations to reduce the number of different integrals to simpler ones and to a small set of master integrals .",
    "3 .   expand the result in @xmath2 and store it in the directory + ` problems/'prb'/results/'diagram'.res ` under the name ` ' diagram ' ` .",
    "an expansion in @xmath2 is also done at various intermediate steps . although poles of at most third order may appear for a three - loop vacuum integral terms up to order @xmath13 have to be kept in the expansion as artificial poles",
    "may appear during the application of the recurrence relations ( cf .",
    "step  10 ) .    steps  9 and  10 constitute the central part of matad .",
    "they heavily depend on the loop - order and the topology which has to be specified apart from the very diagram in the folds d1l1 , d1l2 ,  ( see above ) .",
    "thus let us elaborate on this point in the following . in principle",
    "it suffices to define one input topology at one- , two- and three - loop order , where the number of internal lines amount to one , three and six , respectively ( see fig .  [",
    "fig : tad123 ] ) . if one allows each line to be massless and carry the mass @xmath7 at the same time these three topologies are sufficient to cover all possible cases that can occur in the calculation of one- , two- and three - loop vacuum integrals .",
    "note that a partial fractioning for terms like @xmath14 where @xmath15 and @xmath16 are positive integers , leads to the same topologies with the only difference that now each line is either massless of massive .",
    "it is , however , not at all practical to rewrite the input to the notation of fig .",
    "[ fig : tad123 ] before generating the file dia.<prb>. on the contrary it is advantageous to enlarge the input topologies .",
    "currently the topologies shown in fig .  [ fig : intop ] are implemented in matad .",
    "the momentum @xmath11 flowing through line @xmath12 can be expressed as a linear combination of the loop momenta . for our purpose",
    "these relations are , however , not of interest .",
    "the choice of the topologies was guided by the package mincer  @xcite and for convenience the same notation concerning the definition of the momenta @xmath11 has been adopted .",
    "the implemented massive / massless combinations of each topology are listed in appendix  [ app : topfile ] .",
    "after the declaration of the diagram in the folds d1l1 , d1l2 ,  the corresponding topology is specified via    ....    # define topology \" xy \" ....    where ` xy ` corresponds to one of the topologies of fig .  [",
    "fig : intop ] .",
    "the notation concerning the momenta as introduced in fig .",
    "[ fig : intop ] is quite convenient to be used for the input .",
    "however , the very recursion procedure is formulated for the three - loop topology of fig .",
    "[ fig : tad123 ] where the lines are either massive or massless .",
    "this leads to @xmath17 different cases which are classified in  @xcite .",
    "thus before step  9 is performed the momenta are transformed from the notation of fig .",
    "[ fig : intop ] , which is used in the input , to the so - called basic topologies shown in fig .",
    "[ fig : batop ] . for them",
    " after decomposing the scalar products in the numerator into parts of the denominator  the very recursion procedure is performed .",
    "note that at this stage all propagators may be raised to an arbitrary integer power .",
    "actually some of the three - loop diagrams ( e.g.  ` bn3 ` ) can be computed by the successive use of one- and two - loop procedures for massless propagator type diagrams or vacuum integrals , respectively . in such cases",
    "some of the ( one- and two - loop ) routines from mincer  @xcite are used for parts of the computation .",
    "the corresponding procedures are listed in appendix  [ app : files ] . for",
    "other cases ( e.g.  ` e4 ` or ` bn2 ` ) simple relations reduce one of the lines to zero and the resulting diagram can again be solved easily . only for the cases",
    "` d5 , d4 , dn , dm , e3 , bn ` and ` bn1 ` the recursion procedure has to be applied until one arrives at master integrals .",
    "they coincide with the corresponding diagrams of fig .  [",
    "fig : batop ] where all denominators are raised to power one . only the one pictured in fig .",
    "[ fig : master_add ] , which results from ` bn1 ` , is needed in addition . from this diagram",
    "even the @xmath18 part is required .",
    "the analytic expressions are given in appendix  [ app : master ] .",
    "it should be mentioned that the recurrence relations for ` bm ` are quite involved . however , for this topology no difficult master integral is needed .",
    "note that the basic topologies ` bm1 ` and ` bm2 ` actually coincide with ` bn2 ` and ` bn3 ` , respectively .",
    "for convenience partly different codes had been written which actually turned out to be quite useful while debugging matad .",
    "the recurrence relations leading to simple diagrams and master integrals for the three - loop topologies are derived in refs .",
    "@xcite and  @xcite . except the case where all six lines are massive",
    "all of them are implemented into matad .",
    "the reason why this case is missing is simply that it was not yet needed for practical calculations .",
    "all master integrals are listed in appendix  [ app : master ] .    in fig .",
    "[ fig : simple ] the simple integrals are listed which also result from the recursion procedure .",
    "they can all be expressed in terms of @xmath19 functions by the successive use of results for massless one - loop two - point functions , @xmath20 , in combination with one- ( @xmath21 ) and two - loop ( @xmath22 ) vacuum integrals . for convenience",
    "we want to list the explicit results for @xmath23 , @xmath21 and @xmath22 in euclidean space : @xmath24     +    the vacuum integrals occurring at one- and two - loop level are quite simple .",
    "actually most of them can be expressed in terms of @xmath19 functions for arbitrary exponents of the propagators and no recursion relations are needed ( cf .",
    "( [ eq : simpint ] ) ) . only for the two - loop integral in fig .",
    "[ fig : tad123 ] where all three lines carry the mass @xmath7 it is useful to implement simple recurrence relations which reduce the integrals to one master integral where all exponents are raised to the first power only . for three - loop calculations",
    "the result of this integral is needed up to @xmath18 ( t1ep , see appendix  [ app : master ] ) .    for definiteness",
    "we want to consider an explicit example .",
    "let us consider the three - loop diagram of fig .",
    "[ fig : ladder ] which we would like to expand up to fourth order in the external momentum , @xmath25 . for simplicity",
    "we neglect the tensor structure and consider only the scalar integral obtained in the case when the full line represents a massive particle and the curly line a massless one . in the directory problems",
    "/ scalar/ one can find the following files    .... mainscalar   results/   scalar.dia ....    where results/ is a directory to store the result of the diagram .",
    "the file scalar.dia looks as follows    .... * -- # [ treat0 : * -- # ] treat0 :    * -- # [ treat1 : * -- # ] treat1 :    * -- # [ treat2 : * -- # ] treat2 :    * -- # [ treatmain : * -- # ] treatmain :    * -- # [ scalar :          m^4          * s1 m          * s2 m          * s3 m          * dh(p4,q1 )          * dh(p5,q1 )          * dh(p6,q1 )          /p7.p7          /p8.p8",
    ";            # define topology \" la \" * -- # ] scalar : ....    in this case no special treat file is needed .",
    "the very diagram can be found in the fold scalar where the multiplication with @xmath26 is done in order to end up with a dimensionless expression .",
    "the external momentum is routed through the lines 4 , 5 and 6 as can be seen in the arguments of the function ` dh ` .",
    "the other massive propagators are denoted by ` s1 m ` , ` s2 m ` and ` s3 m ` .",
    "the massless lines translate into the factors ` 1/p7.p7 ` and ` 1/p8.p8 ` . for more details on the notation",
    "we refer to appendix  [ app : notin ] .",
    "the file mainscalar looks as follows :    .... # define prb \" scalar \" # define dalaqn \" q1 \" # define gauge \" 0 \" # define power \" 4 \" # define cut \" 0 \" # define folder \" scalar \" # define diagram \" scalar \" # - # include main.gen ....    with the command    .... # define power \" 4 \" ....    we require an expansion up to fourth order in @xmath25 and    .... # define dalaqn \" q1 \" ....    effectively factors out the terms @xmath27 .",
    "the calculation is initiated with the command    .... > matadform problems / scalar / mainscalar ....    and after a few seconds the final result is displayed on the screen    ....     scalar =         - 2 + 2*z3 - q1.q1*z3*m^-2 + 227/216*q1.q1*m^-2 + 1/2*q1.q1 ^ 2*z3*m^-4            - 1876/3375*q1.q1 ^ 2*m^-4 ; ....    as expected it is finite and contains three terms in the expansion in @xmath28 .",
    "the result is stored to the directory problems / scalar / results/ and can be read with the form command load .",
    "details on the notation of the output and the used conventions can be found in appendix  [ app : not ] .",
    "once the recurrence relations are implemented it is in principle possible to compute diagrams of arbitrary complexity .",
    "however , in practice one arrives quite soon at the limits set by the soft- or hardware .",
    "the algebra language form is designed to deal with large expressions .",
    "still it happens quite easily that in internal steps the expressions exceed several megabytes and even approach the order of a few gigabyte .",
    "this significantly slows down the performance and it is advantageous to implement several tricks .",
    "some of them are described in this section .",
    "@xmath29 during the recurrence procedure it happens very often that whole blocks of commands have to be executed until the recursion has reached an end . within form",
    "there are the commands    ....    repeat ;      [ ... ]    endrepeat ; ....    which in principle allows for such a construction .",
    "however , in practice it is not possible to use between ` repeat ` and ` endrepeat ` a command which forces form to combine identical terms like , e.g. , ` .sort ` .",
    "for this reason a preprocessor variable , ` nor ` ( see also appendix  [ app : settings ] ) , has been introduced which in combination with the construction    ....    # do i=1,'nor '      [ ... ]    # enddo ....    allows the use of ` .sort ` in intermediate steps of the recursion commands .",
    "@xmath29 at this point we should also mention that the procedure ` accu ` has been adopted from mincer  @xcite .",
    "it collects in the argument of the function ` acc ( ) ` the polynomials in @xmath2 and thus significantly reduces the number of terms .",
    "e.g. , the expression    ....    x1*x2 + 4*ep*x1*x2 + 12*ep^3*x1*x2 ....    transforms after ` # call accu{test } ` to    ....    acc(1 + 4*ep + 12*ep^3)*x1*x2 ....    and instead of three only one term has to be treated in the following commands .",
    "@xmath29 very often it happens that propagators of the type @xmath30 have to be expanded in the momentum @xmath31 and afterwards derivatives w.r.t .",
    "@xmath31 are applied in order to factor out powers of @xmath32 .",
    "it turns out that it is very useful to expand in a first step only the part @xmath33 and keep the factors @xmath32 unexpanded in the form @xmath34 .",
    "thus less terms have to be considered while the derivatives are applied .",
    "afterwards the expansion in @xmath32 is performed .",
    "a related discussion can also be found in  @xcite .",
    "@xmath29 the expansion of the scalar denominators in a small momentum is also very time consuming  especially for high values of power. in order to do this in an effective way the variable poco , which is an abbreviation for `` power counting '' , is defined via    .... s poco(:'power ' ) ; ....    after the declaration of the preprocessor variable power .",
    "this definition ensures that the terms involving poco@xmath35 with @xmath36`'power ' ` are automatically set to zero .",
    "depending on the problem poco should also be considered in the special treat files .",
    "@xmath29 the application of the recurrence relations can lead to spurious @xmath37 poles ( cf .",
    "appendix  [ app : ibp ] ) which are in general quite dangerous if an expansion in @xmath2 is performed in intermediate steps . in matad at most three @xmath37 poles arise from the recurrence relations . together with a possible @xmath38 term from the three - loop integrals an expansion up to order @xmath13 has to be done in intermediate steps in order to get the correct constant term .",
    "@xmath29 for quite a lot of applications the topology ` bn ` ( cf .",
    "fig  [ fig : batop ] ) plays a crucial role .",
    "the original recurrence procedure for this toplogy to master integrals was proposed in  @xcite : in a first step the exponent of three out of the four massive denominators are reduced to one .",
    "then the exponents of the massless lines are reduced to zero . finally the remaining line is treated and one arrives ( apart from simple integrals ) at an integral consisting of four massive lines connecting two vertices .",
    "it is connected to the corresponding master integral of fig .",
    "[ fig : batop ] through a simple relation .",
    "the equation involved in the last recursion step is quite involved .",
    "it generates from each term more than ten terms at each call .",
    "note that the exponent of the last massive denominator gets increased by the proceeding steps .",
    "this enormously slows down the calculation  in some cases it makes it even impossible .",
    "the idea to circumvent this problem is based on the observation that the massless exponents can be reduced to zero even if none of the massive ones is reduced to one .",
    "the corresponding recurrence relations are short and thus one arrives with only little effort at three - loop integrals with four massive lines , @xmath39 ( cf .",
    "[ fig : master_add ] where all lines are massive and the exponents of the denominators are given by @xmath40 , @xmath41 , @xmath42 and @xmath43 ) .",
    "these diagrams are now treated in the following way : temporarily an external momentum is introduced which flows through one of the lines .",
    "we choose line 3 for definiteness . in a second step",
    "the operator @xmath44 is applied and @xmath31 is set to zero afterwards .",
    "this leads to an equation connecting @xmath39 , @xmath45 and @xmath46 @xmath47 which can be applied until @xmath48 .",
    "as the other indices are not affected the same procedure can be applied to them as well and one ends up with the integrals @xmath49 , @xmath50 , @xmath51 , @xmath52 and @xmath53 .",
    "both their values for @xmath54 and the result for the application of @xmath55 has to be known where the index @xmath56 depends on how often eq .  ( [ eq : bnrec ] ) had to be applied .",
    "the overall number of the integrals needed is still small and for most practical applications well below 100 .",
    "they can be computed once and for all using the method of ref .",
    "@xcite and can be collected in a table .",
    "currently the table contains all results up to @xmath57 and partly for @xmath58 . in case",
    "the table is too small the original recurrence procedure  @xcite has to be used .",
    "this is done by defining the preprocessor variable bnrecold in the main file .",
    "in this section we want to discuss some typical examples which can be treated with matad .",
    "in particular the content of the treat folds and the switches in main.<prb > shall be discussed in detail . in section  [ sec : photon ] two - loop corrections to the photon polarization function are considered and in section  [ sec : hgg ] the calculation of three - loop vertex corrections contributing to the higgs decay into gluons is discussed . as a last example we consider the computation of the fermion propagator in the limit of a small external momentum .      in this section",
    "only a calculation of two - loop diagrams is presented .",
    "however , we want to take this opportunity to show a concept which can also be used for the treatment of more complex problems . in particular it",
    "is shown how the complete calculation can be automated and one can ensure that all results are indeed up - to - date .    to be precise , we want to consider the two - loop diagrams induced by a massive quark to the photon polarization function .",
    "the problem shall be called pi . then the file pi.dia looks as follows :    .... * * problem : pi *    * -- # [ treat0 :    # message project out transversal part    multiply , ( d_(mu1,mu2)-q1(mu1)*q1(mu2)/q1.q1)*deno(3,-2 ) ;    .sort * -- # ] treat0 :    * -- # [ treat1 : * -- # ] treat1 :    * -- # [ treat2 : * -- # ] treat2 :    * -- # [ treatmain : * -- # ] treatmain :    * * 2-loop diagrams for problem pi *    * -- # [ d2l1 :      ( ( -1 )      * dg(nu1,nu2,p5 )      * s(mu1,q1,p1m , nu1,q1,p2m , mu2,p3m , nu2,p4 m )      * 1 ) ;        # define topology \" t1 \" * -- # ] d2l1 :    * -- # [ d2l2 :      ( ( -1 )      * dg(nu1,nu2,p4 )      * s(mu1,q1,-p2m , mu2,p1m , nu2,p3m , nu1,p1 m )      * 1 ) ;        # define topology \" t2 \" * -- # ] d2l2 :    * -- # [ d2l3 :      ( ( -1 )      * dg(nu1,nu2,p4 )      * s(nu1,p3m , nu2,p1m , mu2,-q1,-p2m , mu1,p1 m )      * 1 ) ;        # define topology \" t2 \" * -- # ] d2l3 : ....    the function deno(x , y ) means @xmath59 and can be used for denominators .",
    "treat0 contains the projector to the transversal part and the three contributing diagrams are named d2l1 , d2l2 and d2l3 . the external momentum is denoted by ` q1 ` .",
    "the mass of the quarks , which in the final result appears as m , is introduced through adding the symbol m to the corresponding momentum which is defined through the topologies t1 and t2 in fig .",
    "[ fig : intop ] .",
    "we want to assume that @xmath60 and thus perform an expansion in @xmath25 .",
    "this is achieved with the notation ` s( ... ,q1,p1 m , ... ) ` . for more details concerning the notion we refer to appendix  [ app : not ] .",
    "the file mainpi reads :    .... # define prb \" pi \" # define problem0 \" 1 \" # define dalaqn \" q1 \" # define gauge \" xi \" # define power \" 4 \" # define cut \" 1 \" # define folder \" pi \" * * * # define diagram \" d2l1 \" # - # include main.gen ....    for most of the specified variables we refer to appendix  [ app : settings ] .",
    "we only want to mention that a general gauge parameter ` xi ` is chosen with the command ` # define gauge \" xi \" ` .",
    "this allows for an explicit check that the final result , i.e. the sum of the three diagrams is gauge parameter independent .",
    "the definition ` # define power \" 4 \" ` requests for an expansion up to fourth order in ` q1 ` .",
    "the definition of the variable ` diagram ` is commented as it will be defined during the call of mainpi ( see below ) .",
    "the computation of each diagram could be started separately and the results could be summed at the end .",
    "instead we want to take the opportunity to present a method which is unavoidable for problems where a large number of diagrams contribute . in the following",
    "we want to present two more files which can easily be adopted to other problems .",
    "the first one , makepi , is a so - called gnu make file and could look as follows :    .... shell = /bin / sh    dia2 = \\        problems / pi / results / d2l1.res\\        problems / pi / results / d2l2.res\\        problems / pi / results / d2l3.res    problems / pi / results / pi.2.res : $ ( dia2 )          matadform problems / pi / compi > problems / pi / log / compi.log    ii = $ ( notdir $ ( basename $ @ ) )    $ ( dia2 ) : problems / pi / mainpi          if [ -f problems / pi / results/$(ii).res ] ; \\             then rm problems / pi / results/$(ii).res ; fi          time matadform -d diagram=$(ii ) \\            problems",
    "/ pi / mainpi > problems / pi / log/$(ii).log ;           if [ -f problems / pi / results/$(ii).res ] ; \\             then rm problems / pi / log/$(ii).log ; fi ....    for details concerning the individual commands we refer to the literature  @xcite . for us",
    "it is only important that at the beginning the diagrams we want to compute are listed .",
    "furthermore , after the line `` problems / pi / results / pi.2.res : $ ( dia2 ) ` ' the command is given which specifies what shall be done once the computation of the individual diagrams is finished : the diagrams are summed with the help of the program compi    .... * * compi * # - # include declare.matad # define prb \" pi \" .global    # do i=1,3    load problems/'prb'/results / d2l'i'.res ; # enddo    g res'prb'2 =   # do i=1,3    + d2l'i ' # enddo ;    b ep ; print ; .store    # + save problems/'prb'/results / res'prb'.2.res res'prb'2 ; .end ....    to initiate the calculation one simply has to specify the command    .... > make -f problems / pi / makepi ....    where make has to call the gnu version  @xcite of the make command .",
    "the final result is stored in the file problems / pi / results / respi.2.res .",
    "it reads    ....",
    "respi2 =         + ep^-1 * (   - 6*q1.q1 + 8/5*q1.q1 ^ 2*m^-2 )           + ep * (   - 35/6*q1.q1 - 6*q1.q1*z2 + 8/5*q1.q1 ^ 2*m^-2*z2 + 3116/1215 *           q1.q1 ^ 2*m^-2 )           + 13/3*q1.q1 - 128/405*q1.q1 ^ 2*m^-2 ; ....    indeed , as expected , there is no trace of the gauge parameter ` xi `",
    ".      party for convenience and partly for historical reasons the notation of the input topologies in fig .",
    "[ fig : intop ] is closely connected to two - point functions .",
    "however , matad only deals with vacuum diagrams independent of the number of external legs . in this section",
    "we want to show that also problems involving at first sight three - point functions can be approached using matad .",
    "let us consider qcd corrections to the decay of the standard model higgs boson into two gluons .",
    "it is convenient to construct an effective theory where the top quark is integrated out .",
    "details on the theoretical background can be found in  @xcite .",
    "here it shall only be mentioned that the coefficient function which contains the dependence on the mass of the top quark , @xmath61 , can be computed from triangle diagrams as pictured in fig .",
    "[ fig : hgg ] . according to their lorentz structure",
    "the result can be written as follows @xmath62 where @xmath25 and @xmath63 are the momenta of the gluons with polarization vectors @xmath64 and @xmath65 .",
    "thus the vertex diagrams have to be expanded up to linear order both in @xmath25 and @xmath63 and an appropriate projector has to be applied in order to get @xmath66 .",
    "+    the file containing the diagrams could look as follows    .... * * problem : hgg *    * -- # [ treat0 : multiply , (    a*deno(2,-2)*(q1.q2*d_(mu , nu)-q2(nu)*q1(mu)-q2(mu)*q1(nu ) )   + b*deno(2,-2)*(-q1.q2*d_(mu , nu)+(3 - 2*ep)*q2(nu)*q1(mu)+q2(mu)*q1(nu ) ) ) ; .sort * -- # ] treat0 :    * -- # [ treat1 : * -- # ] treat1 :    * -- # [ treat2 : * -- # ] treat2 :    * -- # [ treatmain : * -- # ] treatmain :    * -- # [ d3l335 :          ( ( -1 )          * m          * dg(nu1,nu2,p1 )          * dg(nu7,nu8,-p4 )          * dg(nu3,nu4,q1,-p1 )          * dg(nu5,nu6,q2,p1 )          * s(-q1,-p3m , nu7,-q1,p5m , nu4,-p2m , nu6,q2,p5m , nu8,q2,-p3 m )          * v3g(mu , q1,nu1,-p1,nu3,p1-q1 )          * v3g(nu , q2,nu2,p1,nu5,-p1-q2 )          * 1 ) ;            # define topology \" o4 \" * -- # ] d3l335 : ....    where the diagram d3l335 corresponds to the one shown in fig .",
    "[ fig : hgg ] .",
    "the fold treat0 contains ( up to an overall factor @xmath67 ) the projector on the coefficients in front of the structures @xmath68 and @xmath69 of eq .",
    "( [ eq : c1 ] ) .",
    "they are marked by the symbols ` a ` and ` b ` , respectively .",
    "thus the transversality of eq .",
    "( [ eq : c1 ] ) can be explicitly checked in the sum of all contributing diagrams ( the result of a single diagram does in general not have a transverse structure ) .",
    "the corresponding main - file is very similar to the one listed in section  [ sec : photon ] .",
    "the only difference ( apart from replacing pi by hgg ) is that the commands    .... # define dalaqn \" q1 \" # define gauge \" xi \" # define power \" 4 \" # define cut \" 1 \" ....    should be replaced by    .... # define dala12 \" 1 \" # define gauge \" 0 \" # define power \" 2 \" # define cut \" 0 \" ....    the third line ensures that an expansion of the integrand up to second order in the external momenta is performed and the first one sets @xmath70 and @xmath71 to zero and factors out the scalar product @xmath72 . ` # define cut \" 0 \" ` sets @xmath2 to zero in the final result as the terms of @xmath18 are anyway not computed completely at three - loop order . in this example",
    "we choose feynman gauge which is achieved with ` # define gauge \" 0 \" ` .",
    "after calling matad it takes of the order of a minute to obtain the result :    ....     d3l335 =         + ep^-2 * ( 40*q1.q2*m^2*a + 344/9*q1.q2 ^ 2*a - 232/9*q1.q2 ^ 2*b )           + ep^-1 * (   - 308/3*q1.q2*m^2*a - 3530/27*q1.q2 ^ 2*a + 1786/27*q1.q2",
    "^ 2 *           b )           + 60*q1.q2*m^2*z2*a + 734/3*q1.q2*m^2*a - 1936/9*q1.q2 ^ 2*z3*a + 1136/9 *           q1.q2 ^ 2*z3*b + 172/3*q1.q2 ^ 2*z2*a - 116/3*q1.q2 ^ 2*z2*b + 46817/81 *           q1.q2 ^ 2*a - 26239/81*q1.q2 ^ 2*b ; ....    note that the terms proportional to ` q1.q2*m^2 ` cancel after adding all contributing diagrams .",
    "in this example we compute the small - momentum expansion of a three - loop diagram which contributes to the fermion propagator .",
    "recently these kind of diagrams have been considered in different kinematical regions in order to obtain the three - loop relation between the @xmath73 and on - shell quark mass  @xcite .",
    "this subsection contains all relevant input information whereas the complete output is given in appendix  [ app : testrun ] .",
    "the fermion self energy , @xmath74 , can be decomposed into a scalar and vector part @xmath75 where @xmath31 is the external momentum and @xmath7 is the mass of the quark .",
    "we are interested in the computation of the scalar functions @xmath76 and @xmath77 .",
    "the file ` mainfp ` looks as follows    .... # define",
    "prb \" fp \" # define problem0 \" 1 \" # define dalaqn \" q1 \" # define gauge \" 0 \" # define power \" 1 \" # define cut \" 0 \" # define folder \" fp \" # define diagram \" d3l79 \" # - # include main.gen ....    the variable ` power ` is defined in such a way that an expansion up to third order is performed .",
    "this leads to the constant and order @xmath78 terms for the functions @xmath76 and @xmath77 as @xmath74 itself has mass dimension one .",
    "the corresponding projectors and the diagram to be computed look as follows ( ` fp.dia ` ) :    .... * * problem : fp *    * -- # [ treat0 :    multiply , 1/4*(1/m + a * g_(1,q1)/q1.q1 ) ; * -- # ] treat0 :    * -- # [ treat1 : * -- # ] treat1 :    * -- # [ treat2 : * -- # ] treat2 :    * -- # [ treatmain : * -- # ] treatmain :    * -- # [ d3l79 :          ( ( 1 )          * dg(nu3,nu4,p5 )          * dg(nu5,nu6,-p6 )          * dg(nu1,nu2,-q1,-p1 )          * s(nu2,-p1m , nu5,-p4m , nu4,-p3m , nu6,-p2m",
    ", nu3,-p1m , nu1 )          * 1 ) ;            # define topology \" o4 \" * -- # ] d3l79 : ....    note that in the fold treat0 the vector part gets multiplied by a in order to distinguish @xmath77 from @xmath76 in the final result .",
    "the input for the diagram corresponds to the one pictured in fig .",
    "[ fig : fp ] .",
    "the complete output appearing on the screen and the result can be found in the appendix  [ app : testrun ] .",
    "it is a pleasure for me to thank k.g .",
    "chetyrkin , r.  harlander , j.h .",
    "khn and t.  seidensticker for many discussions and useful advice within the recent years when matad was developed .",
    "this work was supported in part by dfg under contract ku 502/8 - 1 ( _ dfg - forschergruppe `` quantenfeldtheorie , computeralgebra und monte - carlo - simulationen '' _ ) and by sun microsystems through academic equipment grant no .",
    "i am grateful to the department of theoretical particle physics of the university of karlsruhe for the pleasant atmosphere during a visit when a major part of this project was carried out .",
    "the method of integration - by - parts plays a fundamental role in the computation of multi - loop diagrams  @xcite . for this reason we want to demonstrate its underlying idea by considering a typical example .",
    "the integration - by - parts algorithm uses the fact that the @xmath79-dimensional integral over a total derivative is equal to zero : @xmath80 by explicitly performing the differentiations one obtains recurrence relations connecting feynman integrals of different complexity .",
    "the proper combination of different recurrence relations allows any feynman integral ( at least single - scale ones ) to be reduced to a small set of so - called master integrals .",
    "the latter ones have to be evaluated only once and for all , either analytically or numerically .",
    "+    let us for definiteness consider the scalar two - loop diagram of fig .",
    "[ fig : triangle ] .",
    "the corresponding feynman integral shall be denoted by @xmath81 where @xmath82 are combinations of the loop momenta @xmath83 and the external momentum @xmath31 ( we work in euclidean space here ) .",
    "@xmath84 are called the indices of the integral .",
    "consider the sub - loop defined by the lines 2 , 3 and 5 , and take its loop momentum to be @xmath85 .",
    "if we then apply the operator @xmath86 to the _ integrand _ of @xmath87 , we obtain a relation of the form ( [ eqipgen ] ) , where @xmath88 performing the differentiation and using momentum conservation at each vertex one derives the following equation : @xmath89\\ , i(n_1,\\ldots , n_5 ) \\,\\,=\\,\\ , 0 \\ , , \\label{eqtrianglerec}\\end{aligned}\\ ] ] where the operators @xmath90 are used in order to raise and lower the indices : @xmath91 . in eq .",
    "( [ eqtrianglerec ] ) , generally referred to as the triangle rule , it is understood that the operators to the left of @xmath92 are applied _ before _ integration .",
    "if the condition @xmath93 and @xmath94 holds , increasing one index always means to reduce another one .",
    "therefore this recurrence relation may be used to shift the indices @xmath95 , @xmath41 or @xmath42 to zero which leads to much simpler integrals .",
    "the triangle rule constitutes an important building block for the general recurrence relations .",
    "the strategy is to combine several independent equations of the kind  ( [ eqtrianglerec ] ) in order to arrive at relations connecting one complicated integral to a set of simpler ones .",
    "for example , while the direct evaluation of even the completely massless case for the diagram in fig .",
    "[ fig : triangle ] is non - trivial , application of the triangle rule ( [ eqtrianglerec ] ) leads to @xmath96\\,i(n_1,\\ldots , n_5 ) \\ , .",
    "\\label{eqreci}\\ ] ] repeated application of this equation reduces one of the indices @xmath95 , @xmath41 or @xmath42 to zero .",
    "for example , for the simplest case ( @xmath97 ) one obtains the equation pictured in fig .",
    "[ fig:2loopip ] : the non - trivial diagram on the l.h.s .",
    "is expressed as a sum of two quite simple integrals which can be solved by applying the one - loop formula .",
    "this example also shows a possible trap of the integration - by - parts technique .",
    "in general its application introduces artificial @xmath37 poles which cancel only after combining all terms .",
    "they require the expansion of the individual terms up to sufficiently high powers in @xmath2 in order to obtain , for example , the finite part of the original diagram .",
    "this point must carefully be respected in computer realizations of the integration - by - parts algorithm : one must not cut the series at too low powers because then the result goes wrong ; keeping too many terms , on the other hand , may intolerably slow down the performance .    in our example , the l.h.s .  in fig .",
    "[ fig:2loopip ] is finite , each term on the r.h.s .",
    ", however , develops @xmath98 poles .",
    "the first three orders in the expansion for @xmath99 cancel , and the @xmath18 term of the square bracket , together with the @xmath37 in front of it , leads to the well - known result ( omitting factors @xmath100 ) : @xmath101 , where @xmath31 is the external momentum .    [",
    "cols=\"^,^,^,^,^,^ \" , ]     note that all momenta which occur in the output have to be interpreted in euclidean space .",
    "matad does not insert the complete finite parts of the master integrals automatically .",
    "instead they are parameterized by the symbols d5 , d4 , dm , dn , b4 , ... where the notation is adopted from the one introduced in fig .",
    "[ fig : batop ] . in the following list",
    "one can find the corresponding analytical expressions  @xcite in the second to last equation must read `` @xmath102 '' instead of `` @xmath103 '' . ]",
    "@xmath104 ^ 2     \\ , ,    \\nonumber\\\\    \\verb|d5| & = & 6\\zeta_3-\\frac{469}{27}\\zeta_4    + \\frac{8}{3}\\left[{\\rm cl}_2\\left(\\frac{\\pi}{3}\\right)\\right]^2     -16\\sum_{m > n>0 }",
    "\\frac{(-1)^m \\cos(2\\pi n/3)}{m^3n }    \\nonumber\\\\&\\approx &    -8.2168598175087380629133983386010858249695    \\ , ,    \\nonumber\\\\    \\verb|d4| & = &     6\\zeta_3    -\\frac{77}{12}\\zeta_4     -6 \\left[\\mbox{cl}_2\\left(\\frac{\\pi}{3}\\right ) \\right]^2     \\ , ,    \\nonumber\\\\    \\verb|d3| & = &    6\\zeta_3    -\\frac{15}{4}\\zeta_4     -6 \\left[\\mbox{cl}_2\\left(\\frac{\\pi}{3}\\right ) \\right]^2     \\ , ,    \\nonumber\\\\    \\verb|dm| & = &     6\\zeta_3    -\\frac{11}{2}\\zeta_4     -4 \\left[\\mbox{cl}_2\\left(\\frac{\\pi}{3}\\right ) \\right]^2     \\ , ,    \\nonumber\\\\    \\verb|dn| & = &     6\\zeta_3    - 4\\zeta_2\\ln^2 2    + \\frac{2}{3}\\ln^4 2      - \\frac{21}{2}\\zeta_4      + 16 \\mbox{li}_4\\left(\\frac{1}{2}\\right )    \\ , ,    \\nonumber\\\\    \\verb|b4| & = &     - 4 \\zeta_2 \\ln^2 2    + \\frac{2}{3}\\ln^4 2     - \\frac{13}{2 } \\zeta_4    + 16 \\mbox{li}_4\\left(\\frac{1}{2}\\right )     \\ , ,    \\nonumber\\\\    \\verb|e3| & = &    - \\frac{139}{3 }     - \\frac{\\pi\\sqrt{3 } \\ln^2 3}{8 }     - \\frac{17\\pi^3\\sqrt{3}}{72 }    - \\frac{21}{2}\\zeta_2    + \\frac{1}{3}\\zeta_3    \\nonumber\\\\&&\\mbox { }    + 10\\sqrt{3}{\\rm cl}_2\\left(\\frac{\\pi}{3}\\right )    - 6\\sqrt{3 } { \\rm im}\\left [ { \\rm       li}_3\\left(\\frac{e^{-i\\pi/6}}{\\sqrt{3}}\\right)\\right ]     \\ , ,    \\nonumber\\\\    \\verb|s2| & = & \\frac{4}{9\\sqrt{3 } } \\mbox{cl}_2\\left(\\frac{\\pi}{3}\\right )    \\ , ,    \\nonumber\\\\    \\verb|oeps2| & = &    - \\frac{763}{32 }    - \\frac{9\\pi\\sqrt{3}\\ln^2 3}{16 }    - \\frac{35\\pi^3\\sqrt{3}}{48 }    + \\frac{195}{16}\\zeta_2    - \\frac{15}{4}\\zeta_3    + \\frac{57}{16}\\zeta_4    \\nonumber\\\\&&\\mbox { }    + \\frac{45\\sqrt{3}}{2 } { \\rm cl}_2\\left(\\frac{\\pi}{3}\\right )    - 27\\sqrt{3 } { \\rm im}\\left [ { \\rm       li}_3\\left(\\frac{e^{-i\\pi/6}}{\\sqrt{3}}\\right)\\right ]    \\ , ,    \\nonumber\\\\    \\verb|t1ep| & = &    - \\frac{45}{2 }     - \\frac{\\pi\\sqrt{3 } \\ln^2 3}{8 }     \\nonumber\\\\&&\\mbox { }    - \\frac{35\\pi^3\\sqrt{3}}{216 }    - \\frac{9}{2}\\zeta_2    + \\zeta_3    + 6\\sqrt{3}{\\rm cl}_2\\left(\\frac{\\pi}{3}\\right )    - 6\\sqrt{3 } { \\rm im}\\left [ { \\rm        li}_3\\left(\\frac{e^{-i\\pi/6}}{\\sqrt{3}}\\right)\\right ]     \\label{eq : master }    \\,,\\end{aligned}\\ ] ]    with @xmath105 $ ] .",
    "@xmath106 , @xmath107 and @xmath108 are the di- , tri- and quadrilogarithm , respectively . `",
    "s2 ` both appears in the diagram of fig .",
    "[ fig : master_add ] and the two - loop diagram of fig .",
    "[ fig : tad123 ] where all three lines have the same mass .",
    "their @xmath18 parts , which can contribute to the finite part of the three - loop results , contain ` oeps2 ` and ` t1ep ` , respectively .",
    "we should mention that those expressions of eq .",
    "( [ eq : master ] ) which coincide with an existing topology ( e.g.  d5 @xmath109 topd5 ) indeed agree with the finite part of the corresponding master integral . on the other hand b4 ,",
    "e.g. , comprises the complicated parts of the finite part of the master integral corresponding to topbn , however , not the complete one . `",
    "d6 ` is not yet implemented into matad and listed for completeness only .      in the following a brief description of the switches in the file main <",
    "prb > is given .",
    "in all cases the form syntax reads ` # define < var > \" < val > \" ` where ` < var > ` is the variable to be defined and ` < val > ` the corresponding value .    it is required to define at least the following five variables :    diagram : : :    name of the diagram to be computed . folder : : :    the file containing the special treat files and the diagrams is called    folder.dia .",
    "gauge : : :    determines the choice for the gauge parameter .",
    "the variable    @xmath110 as defined in the function ` dg ` in eq .",
    "( [ eq : sdg ] ) is    replaced by the value of gauge .",
    "in particular ` # define gauge \" 0 \" `    corresponds to feynman gauge and with ` # define gauge \" xi \" ` the    calculation is performed for general gauge parameter .",
    "power : : :    determines the depth of the expansion in the small quantities .",
    "prb : : :    name of problem .",
    "prb corresponds to the name of the fold where the    problem - dependent files can be found .",
    "the definition of the remaining variables is optional :    bnrecold : : :    if this variable is defined the original recurrence procedure of    ref .",
    "@xcite is used for the topology bn .",
    "cut : : :    determines the depth of the expansion in @xmath2 of    the final result . at one- ,",
    "two- and three - loop order at most the terms    of order @xmath111 , @xmath112 ,    respectively , @xmath113 are reliable .",
    "the default    value is `` 2 '' .",
    "dala12 : : :    expansion in @xmath72 .",
    "if this variable is set    @xmath70 and @xmath71 are set to zero and powers    in @xmath72 are factored out .",
    "currently only the    expansion up to order @xmath114 is implemented .",
    "note    that only positive powers of @xmath72 can be treated .",
    "dalaqn : : :    apply dalembert operator ,    @xmath44 ,    in order to factor out powers in @xmath32 . in the argument of    dalaqn the momentum is specified with respect to which the derivatives    are performed . nor : : :    is an abbreviation for number of recursions .",
    "as the naive use of the    repeat  endrepeat construction significantly slows down the performance    the most complicated procedures are buffered by a ` # do``#enddo `    construction .",
    "nor constitutes the upper bound of the do - loop .",
    "the    default value is `` 10 '' .",
    "problem0/1/2/main : : :    if one of these variables is set a special treat file is read at the    corresponding position . the value has to agree with the one defined in    the file ` < prb>.dia ` .",
    "time : : :    if this variable is set the statistics is printed at various steps of    the calculation .",
    "there are more switches in inc / main.gen .",
    "however , they should not be modified as most of them are in an experimental stage and not sufficiently tested .",
    "in this appendix we provide a list of all files belonging to matad .",
    "the directory inc contains essentially the include - files . in particular some of the procedures",
    "are collected in files which are included at the very beginning .",
    "the tables for the topology bn are located in inc / tabledal and inc / tablerec .",
    "the directories inc / treat and inc / topology essentially contain the files treating the individual ( input and basic ) topologies and in the folder prc some auxiliary procedures are collected .    .... form.set   inc/   matadform   prc/   problems/    inc : tabledal/   bnm2 m           expanddr     nombm           reducebm_2   tblbn tablerec/   declare.matad   expepgam     nombn           reducebn topology/   denoexp         expnomdeno   nomdecombn      reducebn1 treat/      expandbn        main.gen     recursion_2     reducebn_2 bnbm2prc    expandbnm       matad.info   redcut          symmetrybm bnbmprc     expandbnm_2     matminprc    redcutnomdeno   symmetrybn    inc / tabledal : bnd.tbl   bnd0.tbl",
    "inc / tablerec : bn.tbl   bnn1.tbl   bnn1n2.tbl   bnn2.tbl",
    "inc / topology : topbe     topbn     topbu   tope3   topm2   topn3   topo4.add   topy3 topbm     topbn1    topd4   tope4   topm3   topno   topt1       topempty topbm1    topbn2    topd5   topl1   topm4   topo1   topt2 topbm2    topbn3    topdm   topla   topm5   topo2   topy1 topbm_2   topbn_2   topdn   topm1   topn2   topo4   topy2    inc / treat : treat.dala12   treatbm2    treatbn2    treatd5   treate4   treatm4 treat.dalaav   treatbm_2   treatbn3    treatdm   treatm1   treatm5 treatbm        treatbn     treatbn_2   treatdn   treatm2   treatn1 treatbm1       treatbn1    treatd4     treate3   treatm3   treatt1    prc : aver.prc    cutep.prc      dalaqn.prc   difvecsc.prc   solves.prc   treat.prc aver1.prc   dala12sc.prc   dalasc.prc   pochtabl.prc   tabbn.prc ....      .... one.prc        simplify.prc   finish.prc      tabtwo.prc accu.prc       dotwo.prc      newtwo.prc      two.prc triangl2.prc   triangle.prc   pochtabl.prc ....",
    "in this appendix we present the complete output of the example discussed in section  [ sub : ferm ] .",
    "calling matad              *      * mainfp      *      # define prb \" fp \"      # define problem0 \" 1 \"      # define dalaqn \" q1 \"      # define gauge \" 0 \"      # define power \" 1 \"      # define cut \" 0 \"      # define folder \" fp \"      # define diagram \" d3l79 \"      # - * ~~   matad -- computation of massive tadpoles * ~~   read generic main file * ~~   read diagram      g dia=      # include problems/'prb'/'folder'.dia # ' diagram '              ( ( 1 )              * dg(nu3,nu4,p5 )",
    "* dg(nu5,nu6,-p6 )              * dg(nu1,nu2,-q1,-p1 )              * s(nu2,-p1m , nu5,-p4m , nu4,-p3m , nu6,-p2m , nu3,-p1m , nu1 )              * 1 ) ;                   # define topology \" o4 \"      * -- # ] d3l79 :      # - * ~~   treat the traces * ~~   include special treat - file 0 * ~~   feynman rules for vertices and propagators : * ~~     gluon - ghost - ghost - vertex * ~~     3-gluon - vertex * ~~     gluon propagator * ~~     ghost propagator * ~~   expand denominators * ~~   dh * ~~   dl * ~~   1 * ~~   1 * ~~   change notation to p1,p2 , ... * ~~   trace 1 * ~~   trace 2 * ~~   trace 3 * ~~   trace 4 * ~~   treat dl(x ) * ~~   do wick - rotation * ~~   apply d alembertian w.r.t .",
    "q1 * ~~   average done * ~~   expand dr(p , q ) * ~~   1 * ~~   q_i - > q_i * ~~   include topology - file * ~~   this is topo4 * ~~   recursion of type d5 * ~~   this is topd5 * ~~   numerator * ~~   do recursion * ~~   - done * ~~   recursion of type d4 * ~~",
    "this is topd4 * ~~   numerator * ~~   do recursion * ~~   - done * ~~   recursion of type dm * ~~   this is topdm * ~~   numerator * ~~   do recursion * ~~   - done * ~~   recursion of type dn * ~~   this is topdn * ~~   numerator * ~~   do recursion * ~~   - done * ~~   recursion of type e4 *",
    "~~   this is tope4 * ~~   numerator * ~~   do recursion * ~~   - done * ~~   recursion of type e3 * ~~   this is tope3 * ~~   numerator * ~~   do recursion * ~~   - done * ~~   recursion of type bn_2 * ~~   this is topbn_2 * ~~   numerator * ~~   do recursion * ~~   use table for bn * ~~   - done * ~~   recursion of type bn1 * ~~   this is topbn1 * ~~   numerator * ~~   do recursion * ~~   - done * ~~   recursion of type bn2 * ~~   this is topbn2 * ~~   numerator * ~~   do recursion * ~~   - done * ~~   recursion of type bn3 * ~~",
    "this is topbn2 * ~~   numerator * ~~   do recursion * ~~   - done * ~~   recursion of type bm_2 * ~~   this is topbm_2 * ~~   numerator * ~~   do recursion * ~~   - done * ~~   recursion of type bm1 * ~~   this is topbm1 * ~~   numerator * ~~   do recursion * ~~   - done * ~~   recursion of type bm2 * ~~   this is topbm2 * ~~   numerator * ~~   do recursion * ~~   - done * ~~   integration of the simple integrals * ~~   recursion of type m1 * ~~   this is topm1 * ~~   recursion of type m2 * ~~   this is topm2 * ~~   recursion of type m3 * ~~   this is topm3 * ~~   recursion of type m4 * ~~   this is topm4 * ~~   recursion of type m5 * ~~   this is topm5 * ~~   perform integration * ~~   recursion of type t1 * ~~   this is treatn1 * ~~   recursion of type n1 * ~~   this is treatn1 * ~~   simplify * ~~   do the \" rest \"- integration                  # 1#2#3_act .",
    "phys .  pol .",
    "_ * b # 1 * ( # 2 ) # 3 # 1#2#3_act .",
    "austr .  _ * # 1 * ( # 2 ) # 3 # 1#2#3_comm .",
    "* # 1 * ( # 2 ) # 3 # 1#2#3_comp .  phys .",
    "commun .  _",
    "* # 1 * ( # 2 ) # 3 # 1#2#3_eur .  phys .",
    "j.  _ * c # 1 * ( # 2 ) # 3 # 1#2#3_fortschr .",
    "phys .  _ * # 1 * ( # 2 ) # 3 # 1#2#3_int .  j.  mod .",
    "phys .  _ * c # 1 * ( # 2 ) # 3 # 1#2#3_int .",
    "j.  mod .",
    "phys .  _ * a # 1 * ( # 2 ) # 3 # 1#2#3_j .  comp .",
    "phys .  _ * # 1 * ( # 2 ) # 3 # 1#2#3_jetp  lett .",
    "_ * # 1 * ( # 2 ) # 3 # 1#2#3_mod .  phys .  lett .",
    "_ * a # 1 * ( # 2 ) # 3 # 1#2#3_nucl .",
    "meth .  _ * a # 1 * ( # 2 ) # 3 # 1#2#3_nucl .",
    "* b # 1 * ( # 2 ) # 3 # 1#2#3_nuovo  cim .",
    "* # 1a * ( # 2 ) # 3 # 1#2#3_phys .",
    "_ * b # 1 * ( # 2 ) # 3 # 1#2#3_phys",
    ".  reports _ * # 1 * ( # 2 ) # 3 # 1#2#3_phys .  rev .  _ * d # 1 * ( # 2 ) # 3 # 1#2#3_phys .",
    "rev .  _ * # 1 * ( # 2 ) # 3 # 1#2#3_phys .",
    "lett .  _ * # 1 * ( # 2 ) # 3 # 1#2#3_phys",
    ".  reports _ * # 1 * ( # 2 ) # 3 # 1#2#3_prog .  theor .",
    "* # 1 * ( # 2 ) # 3 # 1#2#3_sov .",
    "j.  nucl .",
    "phys .  _ * # 1 * ( # 2 ) # 3 # 1#2#3_teor .  mat .",
    "_ * # 1 * ( # 2 ) # 3 # 1#2#3_yad .",
    "fiz .  _ * # 1 * ( # 2 ) # 3 # 1#2#3_z .",
    "_ * c # 1 * ( # 2 ) # 3 # 1#2#3_prog .  part .",
    "phys .  _ * # 1 * ( # 2 ) # 3 # 1#2#3ibid .",
    "* # 1 * ( # 2 ) # 3                                  o.v .",
    "tarasov , talk given at @xmath115 _ international workshop on software engineering and artificial intelligence for high energy and nuclear physics _",
    "( aihenp95 ) , pisa , italy , 3 - 8 april 1995 ; report nos .",
    ": bi - tp-95/19 and hep - ph/9505277 ."
  ],
  "abstract_text": [
    "<S> in the recent years there has been an enormous development in the evaluation of higher order quantum corrections . an essential ingredient in the practical calculations </S>",
    "<S> is provided by vacuum diagrams , i.e. integrals without external momenta . in this paper a program package is described which can deal with one- , two- and three - loop vacuum integrals with one non - zero mass parameter . </S>",
    "<S> the principle structure is introduced and the main parts of the package are described in detail . </S>",
    "<S> explicit examples demonstrate the fields of application .    </S>",
    "<S> 16.cm    * program summary *    * _ title of program : _ matad * _ available from : _ </S>",
    "<S> +   http://www-ttp.physik.uni-karlsruhe.de/progdata/matad/1/ * _ computer for which the program is designed and others on which it is operable : _ any work - station or pc where form is running . </S>",
    "<S> * _ operating system or monitor under which the program has been tested : _ unix , form  2.3 * _ no . of bytes </S>",
    "<S> in distributed program including test data etc . : _ @xmath0 * _ distribution format : _ ascii * _ keywords : _ three - loop computations , vacuum integrals , computer algebra , automation of computations * _ nature of physical problem : _ multi - loop integrals are needed for the evaluation of quantum corrections . an important class of loop diagrams is covered by so - called vacuum integrals which have no external momentum . </S>",
    "<S> matad can analytically compute those one- , two- and three - loop vacuum integrals where one mass scale is present . * _ method of solution : _ the method of integration - by - parts is used in order to obtain recurrence relations which reduce complicated integrals to a small set of so - called master integrals . </S>",
    "<S> they have to be evaluated once and for all . </S>",
    "<S> in addition a user interface is provided which makes it easy to put in complicated diagrams in a rather compact way . * </S>",
    "<S> _ restrictions on the complexity of the problem : _ the restrictions on the complexity are given by the hardware limitations of the computer and the limits on the size of the storage files inside form . * _ typical running time : _ the runtime strongly depends on the complexity of the diagram under consideration . </S>",
    "<S> it may vary form a few seconds to the order of a few weeks .    </S>",
    "<S> * long write - up * </S>"
  ]
}
{
  "article_text": [
    "assume that we have a data set with a graph representation @xmath0 where the vertices represent objects and edges represent some relationship between these objects . may be directed and possess edge - weights .",
    "our algorithm was designed and tested only on undirected , unweighted graphs .",
    "while our algorithm should be able to handle directed graphs , we have no results by which to gauge its performance on such problem instances ] the goal of a community - finding algorithm is to partition the vertices of the graph into groups which , hopefully , provide insight into the structure of the relationships in @xmath1 .",
    "determining community - structure is arguably not a well - defined problem .",
    "it is not obvious how one should rigorously define the notion of a `` community '' .",
    "consequently , interpreting the results of a community - finding algorithm can be a qualitative process in which one can only hope to uncover a meaningful partitioning of the vertices .",
    "however , there is an abundance of research showing that many community - finding algorithms provide similar and sensible results .",
    "moreover , these algorithms can be tested on real world data and , therefore , some measure of correctness can be obtained .",
    "together , these points lend credibility to the idea that such algorithms are indeed consistently measuring some structural property of the graph in question .",
    "many community - finding algorithms have been proposed ; see work done by newman [ 2,3,4,6 ] . in particular , the algorithms in [ 2,3,4 ] have performed well both in terms of the communities found and the running time complexity .",
    "the work presented in this paper differs from these algorithms in two ways .",
    "first , ours is an agent - based approach where , as will be explained later , collective exploration and analysis of the given graph yields the final results .",
    "second , our algorithm is stochastic and so the algorithm can exhibit variability over the same input ; whether this is a useful attribute is open to discussion .",
    "in this section , we provide a general description of our algorithm as well as give some motivation for certain aspects of the algorithm .",
    "later on , we give a more detailed account of the algorithm .",
    "our algorithm employs biased random walks on a graph by many agents which we will refer to as `` ants . ''",
    "ants are initially placed on vertices chosen uniformly at random from @xmath2 .",
    "these ants then perform a random walk of prespecified length and keep a list of the vertices they traverse ; this is the `` exploration phase '' of the algorithm .",
    "this random walk is biased in the sense that an ant may not traverse an edge they most recently crossed unless there is no alternative ; in this way , we deter backtracking .",
    "once each ant has completed its walk , they convene and implement a voting process , detailed in the next section , by which @xmath2 is partitioned .",
    "after this voting process has occurred , communities have been formed and the results may be output by the algorithm . however , if we know how many communities are desired , then the algorithm can enter into a `` cleanup '' stage whereby these communities are merged into larger communities until the appropriate number of communities has been obtained .",
    "as previously mentioned , a `` community '' is not well - defined ; however , this does not prevent us from modeling our algorithm after a qualitative understanding of the term .",
    "intuitively , we would expect there to be a higher degree of connectedness between those nodes within a community compared to those nodes that are not .",
    "those regions of low connectivity between nodes could be viewed as `` bridge areas '' linking communities to one another .",
    "consequently , the motivation for deterring backtracking is that it forces an ant to cross a so - called bridge area and enter into a community .",
    "once inside a community , an ant will be confronted with many more edges that it may choose to follow . due to this high - connectivity , it is reasonable to argue that the ant is likely to spend a significant portion of its walk - length inside the community because there are more ways to stay within the community than there are to leave it .",
    "there are four parameters , one of which is optional , that are set prior to running the algorithm on a problem instance :    * _ population size @xmath3 _ : the number of ants that will explore @xmath1 . * _ walk - length @xmath4 _ : the number of edges an ant traverses before it ends its biased random walk . * _ voting cut - off @xmath5 _ : the value used to discern whether or not a two vertices belong to the same community . *",
    "_ number of desired communities @xmath6 _ : this is an optional parameter that allows the algorithm to output a desired number of communities during the clean - up phase .",
    "we now give a detailed description of how our algorithm works :      1 .",
    "each ant is placed on a vertex chosen uniformly at random .",
    "2 .   each ant performs a biased random walk and maintains a list of those vertices it traverses .",
    "once each ant has finished its walk , a voting phase begins in order to decide how to partition @xmath2 .",
    "for all pairs of vertices @xmath7 and @xmath8 , the algorithm calculates the number of ants that traversed both @xmath7 and @xmath8 , call this number @xmath9 .",
    "the algorithm also calculates the number of ants that traversed one of @xmath7 or @xmath8 ( or both ) , call this value @xmath10 . @xmath7 and @xmath8 are merged into the same component if @xmath11 .",
    "+ of course , it is possible that @xmath7 has already been merged with some other set @xmath12 of vertices prior to its comparison to @xmath8 ( the same is true of @xmath8 ) . if @xmath7 and @xmath8 are merged , then the new community is actually @xmath13 ; that is , both @xmath7 and @xmath8 _ and _ their respective sets are combined .",
    "optional clean - up phase : _ communities are sorted by size from smallest to largest . a smaller community @xmath14",
    "is merged into another community of equal or greater size based on the number of _ edges it shares with such a community_. we say @xmath14 shares @xmath15 edges with community @xmath16 if there are @xmath15 edges linking vertices in @xmath14 to vertices in @xmath16 .",
    "for instance , if @xmath14 shares 10 edges with community @xmath17 , 8 edges with community @xmath18 , and 0 edges with all other communities , then @xmath14 and @xmath17 are combined into a new larger community .",
    "this procedure is executed until @xmath6 communities are formed .",
    "the partitioning of @xmath2 is returned .",
    "our algorithm was tested on three data sets .",
    "the first is the real - world data from the zachary karate club study examined in [ 2,3,4 ] .",
    "this is a good test case for our algorithm because we already know how the actual partitioning occurred and how other algorithms have performed on this data .",
    "figure 1 demonstrates the actual division undergone by the club .",
    "we first ran our algorithm without the clean - up phase and figure 2 depicts the results .",
    "demonstrating the resulting communities pictorially is difficult to do without color ; therefore , we have also provided the data in table 1 which gives the partitioning by vertex number along with some other useful information .",
    "note that we get 11 partitions instead of the desired 2 . while this result is not ideal , it is certainly encouraging .",
    "first of all , while we have seemingly not merged enough , the partitioning our algorithm provides has done no incorrect merging so far .",
    "that is , while more merging is needed to arrive at two groups , no mergings done so far need to be undone in order to obtain the real - world result .",
    "second , it appears that the algorithm is grouping those nodes that share a higher degree of connectedness .",
    "for example , the algorithm consistently returned nodes 5 , 6 , 7 , 11 , and 17 as a community .",
    "this data was obtained with @xmath19 , @xmath20 , and @xmath21 .     & & + 1&1 & 1 , 2 , 3 , 4 , 8 , 12 , 13 , 14 + & 2 & 5 , 6 , 7 , 11 , 17 + & 3 & 22 + & 4 & 18 + & 5 & 20 + 2&6 & 9 , 31 + & 7 & 10 , 15 , 16 , 33 , 34 + & 8 & 23 + & 9 & 21 + & 10 & 19 + & 11 & 24 , 25 , 26 , 27 , 28 , 29 , 30 , 32 +    table 1 - the eleven communities found by our algorithm using the karate club data .",
    "we ran our algorithm with the same parameter values and the cleaning option with @xmath22 .",
    "the resulting partitioning is correct in the sense that the split achieved by our algorithm is exactly that which occurred during the zachary study ; identical to the split demonstrated in figure 1 .",
    "moreover , our algorithm returned fairly consistent results when run numerous times on this data set .",
    "for example , out of ten trials , it returned the correct 16 - 18 split three times , a 17 - 17 split 3 times , a 19 - 15 split 2 times , and an 11 - 23 split once . with the exception of the 11 - 23 split ,",
    "the nodes in contention were consistently 3 , 9 , and 31 .",
    "the next data set that we tested our algorithm on was the _",
    "les miserables _ ; our partitioning is given in figure 3 .",
    "this is not real - world data and , consequently , there is no `` correct '' partitioning .",
    "however , we are able to compare our results to those achieved by newman ; this gives us some idea of how well our algorithm is performing .",
    "due to the difficulty in depicting our partitioning pictorially , we have also provided our results in a table in the appendix at the end of this report .",
    "this table displays our communities alongside those found by one of newman s algorithms .",
    "the results of running our algorithm on the _ les miserables _ data are surprisingly close those achieved by newman . note that in many of the communities , the majority of the members are identical .    with the time we had left , our group tested the algorithm on a small data set involving the _ prelude _ of the @xmath23 suite of the _ bach suites for cello_. much like text has transitions from paragraph to paragraph",
    ", music has phrasings where the character of the music changes .",
    "we selected a passage where such a change occurs and decided to see if our algorithm could partition notes used before and after the transition . in figure 4 , vertices are used to represent those notes playable on the cello ; hence , @xmath24 denotes the lowest g - note available on the cello , @xmath25 is the second lowest , and so on .",
    "edges link vertices @xmath7 and @xmath8 if the associated notes came immediately before or after one another in the score .",
    "our algorithm found the correct partitioning with parameters @xmath19 , @xmath20 , @xmath26 , @xmath22 .",
    "table 2 provides the results in text format .     & + 1 & a1 , b1 , b2b , c1 , c2 , d1 , e2 , e3 , f2 , g2 + 2 & a2 , b2 , c3 , d3 , f2 , f3 , g1 , g3 +    table 2 - the two communities found by our algorithm when tested on the bach data .",
    "our algorithm performed surprisingly well given its simplicity .",
    "we believe that there are the following directions for future work :    1 .",
    "we would like to remove some of the parameters .",
    "in particular , having the algorithm be able to set its own @xmath5 value would be a valuable improvement .",
    "we would also like to avoid the use of the clean - up phase .",
    "perhaps there is a way for our algorithm to perform equally well that does not require a specified @xmath6 .",
    "2 .   a mathematical analysis of the algorithm . it would be nice to have a rigorous treatment of biased intersecting random walks to see what structural property of the graph this algorithm is actually uncovering . is the stochastic nature of the algorithm an advantage or a disadvantage ?",
    "perhaps a mathematical treatment would allow us to determine whether , given a fixed problem instance , the varying results provided by the algorithm have merit .",
    "3 .   testing of more data sets to see the algorithm s behavior along with varying parameters .",
    "this would include a comparison against other community - finding algorithms .",
    "in particular , we would like to know whether this algorithm performs faster than the current algorithms authored by [ 2,3 ] .",
    "one of the nice things about this agent - based approach is that no ant needs to have global knowledge of the graph connectivity .",
    "unlike the calculations required for finding geodesic paths , each ant needs to know only local information in order to complete its walk .",
    "we suspect that on large graphs , the local - search aspect ( short biased random walks ) of our algorithm will permit relatively fast analyses of even very large graphs .",
    "we would like to experiment with other simple voting procedures to see if we can obtain one that provides consistently better results .",
    "extend the exploration phase of the algorithm . instead of having one generation of ants",
    "go out and explore the graph , have many generations .",
    "those vertices that get hit could have a higher probability of being a starting point for ants of the next generation .",
    "this might reinforce the formation of communities while decreasing the inclusion of those nodes that are traversed more than they should be due to the uniform random starting point selection .",
    "this project was the result of work done during four weeks spent at the santa fe institute s 2004 complex systems summer school program .",
    "we thank the santa fe institute as well as the organizers of this event for their help and support .",
    "we also thank mark newman for answering some of our questions and providing testing data .    1    m. girvan and m. e. j. newman .",
    "community structure in social and biological networks . _",
    "_ usa * 99 * , 7821 - 7826 ( 2002 ) .",
    "m. e. j. newman .",
    "fast algorithm for detecting community structure in networks .",
    "_ e * 69 * , 066133 ( 2004 ) .",
    "mejn / recentpubs.html .",
    "m. e. j. newman and m. girvan . finding and evaluating community structure in networks .",
    "_ e * 69 * , 026113 ( 2004 ) .",
    "m. e. j. newman . detecting community structure in networks .",
    "phys . j. _",
    "b * 38 * , 321 - 330 ( 2004 ) .",
    "m. e. j. newman .",
    "coauthorship networks and patterns of scientific collaboration .",
    "usa * 101 * , 5200 - 5205 ( 2004 ) .",
    "m. e. j. newman .",
    "a measure of betweenness centrality based on random walks . submitted to _ social networks . _",
    "[ cols=\"^ \" , ]"
  ],
  "abstract_text": [
    "<S> we present a simple stochastic agent - based community finding algorithm . </S>",
    "<S> our algorithm is tested on network data from the zachary karate club study , data from victor hugo s _ les miserables _ , and data obtained from a musical piece by j.s . </S>",
    "<S> bach . in all three cases , the algorithm partitions the vertices of the graph </S>",
    "<S> sensibly . </S>"
  ]
}
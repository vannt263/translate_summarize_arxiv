{
  "article_text": [
    "for small nuclear experiments or for teaching in lab classes , it is often necessary to be able to quickly setup an instrumentation bench .",
    "the setup usually features logic modules ( discriminators , and gates , or gates , ... ) and delay modules for trigger building as well as scalers . therefore , as a generic building block , a user configurable trigger scaler and delay nim module ( uctm ) has been designed with the objective of being usable by physicists or students having no particular knowledge in any hardware description language ( hdl ) .",
    "the module , which has eight analog inputs , can provide four configurable digital outputs . the solution is composed of two interdependent parts .",
    "the first part is a configurable electronics board relying on a fpga for the digital functions .",
    "[ photocarte ] shows a picture of the electronics board inserted in the module ( left hand side ) and of the front panel ( right hand side ) .         the second part is a graphical user interface ( gui ) allowing scalers readout and easy trigger / delay configuration .",
    "the trigger equations , while permitting any combinatorial operation ( with up to ten operands ) , are directly entered in the gui before usage .",
    "trigger equation examples can be seen in fig .",
    "[ gui_uctm_nb ] .        at each run start up , the equations are used to compute each output truth table which are loaded in the fpga memory blocks .",
    "note that consequently the fpga firmware is never modified , so there is no need for synthesis and placer - router tools to configure the board , thus avoiding any tool licensing issue .",
    "this paper is organized as follows : section  [ hardwaresec ] presents the hardware design , section  [ fpgasec ] describes the fpga contents .",
    "the control and readout software is presented in section  [ softsec ] .",
    "eventually , two typical example applications are described in section  [ exampleapplications ] and a short summary is given in section  [ summarysec ] .",
    "the descriptive block diagram of the electronics is shown in fig .  [ uctmboarddiag ] .",
    "each one of the eight inputs feeds a fast comparator whose threshold is set by a 12 bit dac .",
    "the tuning range lies between -1v and 0v and has a step resolution of 60v .",
    "the outputs of the comparators feed the fpga which hosts the triggering , the delaying / shaping functionality and the counters .",
    "note that the chosen fpga ( xilinx xc3s50pq208 ) contains sufficient amount of user logic and memory block to fulfill the functional requirement ( details in section  [ fpgasec ] ) .",
    "the electronics provide 4 duplicated trigger outputs and one `` run '' output in the still widely used nim standard .",
    "the latter indicates when the scalers are counting .",
    "each input / output is associated with a led to inform visually whether it is toggling or not .",
    "two more leds are used to indicate the `` run '' status and the dead time .",
    "a usb micro - controller is used to communicate with the fpga and dac , and thus to perform slow control and readout .",
    "the micro - controller , which is soft loaded at startup , is also used to configure the fpga .",
    "this feature makes unnecessary for the electronics to hold a fpga dedicated configuration memory and allows easy firmware upgrade .",
    "the ttl to nim conversion is done with a discrete circuit shown fig .",
    "[ ttl2nim ] .",
    "it uses ultra high frequency ( uhf ) transistors to achieve the minimal possible propagation time ( about 2.8ns ) .",
    "the chosen input resistor is high enough to allow proper operation of the fpga output ( low output pad current draw ) and the resistors ratio is chosen to be compatible with a 3.3v ttl standard ( lvttl ) .",
    "in the diagram shown in fig .  [ uctm_firmware ] , the main firmware parts are depicted , i.e. the input synchronization registers , the duplication block , the delay / shaping block and the logic block . the led controllers and the usb micro - controller interface used to configure the blocks are not shown .",
    "each input is used to supply a synchronization register on one side and a 24 bit counter on the other side .",
    "the trigger path , from synchronization to output is clocked at 100mhz .",
    "this clocking eases the fpga design implementation , but induces an added jitter of 10ns .",
    "the `` duplication block '' , which is equivalent to a fanout buffer , uses eight inputs and can provide up to ten signals to the following blocks .",
    "it is used to replicate a chosen input a preprogrammed number of times .",
    "this function is achieved by using the concatenated input signals as an eight bit address which points to a ten bit word containing the duplication result .",
    "this @xmath0 bits duplication matrix is computed beforehand for all input combination to eventually associate each address bit to one or several data output .",
    "the `` delay / shaping '' block is used to delay the signal from 0 to clock cycles and to adjust its width within a range of 1 to clock cycles .",
    "this function is performed by two adjustable monostables ( one for delaying and one for width adjustment ) .",
    "provided that the input signal edge is used as the reference time to perform the delaying and shaping , a signal width can be reduced as well as enlarged . any new input pulse received by a delaying / shaping block while the previous processing is still in progress is ignored .",
    "consequently , a dead time signal is provided at the block output and used to flash a dead time led whenever any of the channel is busy .",
    "the last and most important block of the firmware is the `` logic block '' which behaves in a similar way as a look up table ( lut ) in any fpga .",
    "similarly to the `` duplication block '' , the `` logic block '' is preloaded with a truth table giving the expected output vector as a function of the input vector .",
    "the input vector , composed of the `` delay / shaping block '' output is used for the memory address and the memory data is used as the output vector . hence , each memory output bit is a function of up to ten inputs ( or operands ) and the latency of this block is independent of the trigger equation complexity . in a simplified example shown in table  [ ortable ] , a four words deep memory block",
    "is used to implement a two inputs or gate .",
    "the memory block data output directly reflects the expected behavior when using the two input bit as the address vector and by conveniently preloading the memory content with the or gate truth table .",
    "the trigger output rates are monitored by 24 bit counters . out of the eight trigger outputs ,",
    "only four are actually routed outside of the fpga , the remaining four are feeding the internal counters only .",
    ".example usage of a four words deep memory block to implement an or gate . by conveniently preloading the memory content and by using the 2 input bit as address ,",
    "the data output reflects the expected behavior .",
    "[ cols=\"^,^,^,^ \" , ]     the input and output counters are directly using their inputs as clock signal , thus they can monitor rates higher than the system clock , i.e 100mhz .",
    "all activity counters can be free running or gated by a duration timer which can be adjusted with a step resolution of 1ms from 0 ( not used ) to 2 ^ 32 ^ -1 ( about 50 days ) .",
    "the minimal propagation latency in the fpga ( delays set to zero ) due to this design is four clock cycles , which is equivalent to 40ns .",
    "accounting for all the electronics delays , i.e. fast comparator , fpga input / output delays and ttl to lvttl nim conversion , the total minimal board latency is less than 70ns .",
    "the readout and control software , which is written in c++ , is composed of two layers : the application programming interface ( api ) and the graphical user interface ( gui ) . the api is using open source software drivers to control the usb port @xcite . aside from providing the basic functionality for accessing the electronics memory map , it also provides the trigger equation parser , the truth table and duplication matrix generators .",
    "the main building block of the api is the equation interpreter and computer .",
    "it is designed to interpret equations with up to ten operands and to manage all the basic binary operators , such as and , or , xor ( exclusive or ) , xnor ( complemented exclusive or ) , nor and nand , as well as the unary operators : not ( ) and sup ( ) . sup ( ) is the multiplicity operator , accepting a list of operands and the target multiplicity number .",
    "trigger equation examples can be seen in fig .",
    "[ gui_uctm_nb ] .",
    "the logic calculator operates in two steps . at first , before usage , the formula string is checked for syntax errors and in a second time it is evaluated against an input vector . as depicted in fig .",
    "[ logicinterpreter ] , the calculator parses the equation and uses recursive calls to decompose further and further the equation string in substrings until it can finally return either an operand value or a basic operation result ( unary or binary ) .",
    "the truth table of each trigger equation is built by feeding all possible input vector values to the logic interpreter .",
    "for each identical input condition , the eight computed trigger results are concatenated in a single byte to form the data to be stored in the memory block .        to ease the electronics usage",
    ", efforts were made to design an intuitive gui @xcite , shown in fig .",
    "[ gui_uctm_nb ] .",
    "the upper part of the panel is divided in three zones . on its l.h.s",
    "appears the input scalers , the threshold tuning and their user selectable labels .",
    "the middle part is used to select the duplication / routing and to enter the delaying / shaping settings . finally , on its r.h.s eight trigger equations , using one up to ten operands , can be entered with their associated labels and activity counters .",
    "the lower part of the panel contains the acquisition and the counter controls .      to use this trigger module",
    ", the user should configure the following elements through the gui ( from the left to the right of the panel shown fig .",
    "[ gui_uctm_nb ] )  :    1 .",
    "set the threshold value for each used input .",
    "optionally , each of these input channels can be associated with a text label .",
    "2 .   choose the input channel number that should be used by each delaying / shaping element in the `` channel to copy '' fields of the gui .",
    "this corresponds to the replication or rerouting part of the module .",
    "3 .   adjust the delaying and shaping values for each signal",
    ". each value can be set with a precision of 20ns .",
    "4 .   enter logic equations ( up to eight ) , optionally each equation can be labeled .",
    "the operands used in the equations are the output of the delaying / shaping elements ( named from ` i0 ` to ` i9 ` ) .",
    "while each equation output is associated to an activity counter , only the first four ( named ` s0 ` to ` s3 ` ) are connected to an output . as detailed in section  [ softsec ] ,",
    "any combinatorial equation can be entered .",
    "trigger equation examples can be seen in fig .",
    "[ gui_uctm_nb ] .    additionally , for selecting whether activity rate are presented instead of absolute counts , a periodic reset ( every second ) of the counters can be requested by checking the checkbox located at the bottom left of the panel ,    finally , the last setting is to choose before starting a run whether the counting and trigger generation must be free running or set to last only for a predefined amount a time .",
    "as an illustration of the capabilities of the developed unit , we describe the utilization of the board for two simple lab experiments .      the goal of this lab experiment is to measure the lifetime of the muon particle using cosmic muons from atmospheric shower @xcite .",
    "the detector ( see fig .  [ muonlifetime ] ) is made of a simple tank filled with water having its inner surface covered with tyvek@xcite . a photomultiplier tube ( pmt )",
    "is placed at the top of the tank with its window immersed in the water .",
    "muons crossing the tank produce cerenkov light which is reflected by the tyvek   lining and is then detected by the pmt .",
    "due to ionization , muons are loosing energy in the water and the muons stopped in the tank are decaying in an electron and two neutrinos .",
    "the electron is typically produced with a velocity above the cerenkov threshold and therefore also produces cerenkov light .",
    "consequently the expected signal from a muon decaying in the tank is a succession of two cerenkov pulses . in this experiment ,",
    "the methodology used is to trigger on such events and to digitize the corresponding signal using a data acquisition board or a digital oscilloscope .",
    "the time interval between the two pulses is then measured off line .",
    "the classical way of generating this trigger signal is to use several electronics nim units ( see fig .",
    "[ muonlifetime ] ) :    * a leading edge discriminator to detect the cerenkov pulse , the output is a logic gate ( a ) , * a timer unit to produce a 30s width gate ( b ) trigged by ( a ) , * a logic unit to trigger on the coincidences between ( a ) and ( b ) , * a scaler unit to count the number of coincidences .    the trigger unit presented in this paper can be used to replace all the above nim units .",
    "[ gui_muonlifetime ] shows the configuration enter in the gui to perform this measurement .",
    "the pmt anode is connected to the input  0 of the board .",
    "the threshold value is chosen as -25mv to have a good detection efficiency .",
    "the logic signal is duplicated to form one short pulse having a width of 20ns and a large pulse of 30s delayed by 100ns to avoid auto coincidence .",
    "the equation ( s1 ) is a logical and between the two pulses .",
    "the corresponding output is connected to the digital oscilloscope to trigger the acquisition .",
    ", scaledwidth=90.0% ]      to measure the flux of cosmic ray muons in the lab , we use a set of three plastic scintillator paddles placed one below the other ( see fig .  [ muonflux ] ) .",
    "each paddle is optically connected to a pmt with a light guide .",
    "the use of three plastic detectors allows the simultaneous measurement of four independent quantities that are the number of coincidences occurring during a counting time t and corresponding to the following :    * @xmath1 : coincidences between paddles 1 and 2 , * @xmath2 : coincidences between paddles 1 and 3 , * @xmath3 : coincidences between paddles 2 and 3 , * @xmath4 : coincidences between paddles 1 , 2 and 3 .",
    "these four measurements can be used to estimate the four unknown quantities @xmath5 and @xmath6 where @xmath7 is the detection efficiency for the channel @xmath8 and @xmath6 is the muon flux .",
    "they are related to the measurement by the equations : @xmath9 for @xmath10 and @xmath11 where @xmath12 are the geometric acceptances for the paddles @xmath13 that can be easily computed using monte carlo integration .    using standard nim electronics , the measurement of the four quantities @xmath1 , @xmath2 , @xmath3 and @xmath4 typically requires a four channel discriminator unit , a four channels coincidence unit and a four channels scaler ( see fig .",
    "[ muonflux ] ) .",
    "[ gui_muonflux ] shows the gui configuration to perform the same measurement with the uctm unit . in this example",
    ", the three pmt anodes are connected to the first three input channels of the unit .",
    "a threshold of -20mv is used for the discriminator .",
    "the discriminator outputs are not delayed and have a fixed width of 50ns .",
    "finally , the four equations ( ` s0-s3 ` ) are used to build the different coincidence signals which are connected to the @xmath1 , @xmath2 , @xmath3 and @xmath4 labeled counters .        , scaledwidth=90.0% ]",
    "a configurable trigger scaler and delay nim module has been designed to equip nuclear physics experiments and lab teaching class .",
    "it is configurable through a graphical user interface ( gui ) and provides a large number of possible trigger conditions without any hardware description language ( hdl ) knowledge .",
    "the module has eight discriminator inputs with individually configurable thresholds .",
    "the discriminated version of the inputs can be logically duplicated and used in trigger equations that are entered as plain string in the control and readout gui . out of the eight possible trigger equations ,",
    "four are used as duplicated trigger outputs in the nim standard .",
    "scalers are available on each input and output .",
    "possible future work includes : upgrading the fpga to a faster and up to date version in order to gain in latency and to reduce the jitter .",
    "also with newer fpga , it will be possible to implement time to digital conversion ( tdc ) functions .",
    "moreover dead time and live time counters will be added for each logical equation . the possibility to manage positive inputs and to feature windowed discriminators",
    "is also envisioned .",
    "finally , for long term usage , it may also be desirable to be able to pre - configure a board for a given functionality in order to permanently replace a nim module . a lcd display",
    "would then be added on the front panel to report the module number and configuration file used ."
  ],
  "abstract_text": [
    "<S> a configurable trigger scaler and delay nim module has been designed to equip nuclear physics experiments and lab teaching classes . </S>",
    "<S> it is configurable through a graphical user interface ( gui ) and provides a large number of possible trigger conditions without any hardware description language ( hdl ) required knowledge . </S>",
    "<S> the design , performances and typical applications are presented . </S>"
  ]
}
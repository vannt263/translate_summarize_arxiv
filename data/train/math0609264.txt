{
  "article_text": [
    "a _ general pedigree _ @xmath0 on a set @xmath1 , is a finite directed graph on a vertex set @xmath2 that satisfies the following conditions :    1 .",
    "each vertex has out - degree 0 or 2 ; 2 .",
    "@xmath1 is a subset of @xmath2 , and each vertex in @xmath3 has in - degree 0 ; 3 .",
    "there are no isolated vertices .    the vertices with out - degree",
    "0 are called the _",
    "founders_. the vertices in @xmath1 are called _",
    "extant_. the cardinality of @xmath1 is called the _ order _ of the pedigree . note",
    "that @xmath1 is a subset of the set of vertices with in - degree 0 .",
    "a _ discrete generation pedigree _ on @xmath1 is a pedigree on vertex set @xmath4 , where @xmath5 are disjoint sets , @xmath6 is the set of founders , and every vertex @xmath7 in @xmath8 has outgoing arcs @xmath9 and @xmath10 to vertices @xmath11 and @xmath12 , respectively , in @xmath13 . in this case , @xmath14 is the _ depth _ of the pedigree .",
    "if there is an arc from a vertex @xmath7 to a vertex @xmath11 , then @xmath11 is called a parent of @xmath7 , and @xmath7 is called a child of @xmath11 .",
    "if there is a directed path from a vertex @xmath7 to a vertex @xmath11 in a pedigree , then @xmath11 is said to be an _ ancestor _ of @xmath7 , and @xmath7 is said to be a _ descendent _ of @xmath11 .",
    "trivially , each vertex is its own ancestor as well as its own descendent , but not its own parent or child .",
    "if there is a directed path @xmath15 then @xmath16 is called a @xmath17-th grandparent of @xmath7 , and @xmath7 is called a @xmath17-th grandchild of @xmath16 .",
    "a pedigree @xmath18 with vertex set @xmath19 is said to be _ isomorphic _ to a pedigree @xmath20 with vertex set @xmath2 if there is a one - one map @xmath21 such that @xmath22 is an arc in @xmath18 if and only if @xmath23 is an arc in @xmath20 .",
    "although this is a standard definition of graph isomorphism , we will be interested in pedigrees in which the extant vertices are labelled .",
    "therefore , if @xmath24 then we will be interested only in isomorphisms @xmath25 for which @xmath26 for all @xmath27 .    a motivation to study pedigrees comes from biology , where one is interested in reconstructing pedigrees of populations .",
    "but it is hoped that the main result in this paper - the non - reconstructibility of pedigrees from sub - pedigrees - will also be of interst to combinatorialists interested in the well known reconstruction conjectures .",
    "steel and hein @xcite posed and partially solved reconstruction and enumeration questions about pedigrees .",
    "motivated by results in phylogenetics , a natural question to ask is : is a pedigree determined up to isomorphism from the pairwise distances between extant vertices ?",
    "a pair of extant vertices @xmath28 and @xmath29 in a pedigree may have several common ancestors , therefore , it is assumed that all possible distances ( in the undirected sense ) between all pairs of extant vertices are given .",
    "such a question is not expected to have a positive answer , as demonstrated by a counter example in @xcite . despite the counter example ,",
    "variations of this question are definitely significant in evolutionary biology .",
    "steel and hein considered the following weaker question .",
    "let @xmath18 be a pedigree .",
    "sub - pedigree _",
    "@xmath30 of @xmath18 is obtained by deleting every vertex in @xmath18 that has no descendent in @xmath31 .",
    "now if sub - pedigrees on all two - element subsets of @xmath1 are given up to isomorphism , can we construct the sub - pedigree on @xmath1 up to isomorphism ?",
    "steel and hein presented a counter example in their paper .",
    "they posed the following problem .",
    "[ prob - recon ]    is there an integer @xmath32 such that every pedigree @xmath18 of order @xmath33 determined up to isomorphism if all its sub - pedigrees @xmath30 such that @xmath34 are given up to isomorphism ?",
    "combinatorialists familiar with the reconstruction conjectures might be tempted to dismiss this question , therefore , it must be pointed out that the set @xmath1 in a pedigree is labelled . in other words , `` a sub - pedigree @xmath30 given up to isomorphism '' is to be interpreted as a pedigree in which all vertices except the ones in @xmath31 are unlabelled .",
    "the following definitions are introduced to make this remark more formal .",
    "let @xmath35 be positive integers .",
    "let @xmath0 and @xmath36 be two pedigrees of order @xmath37 .",
    "the two pedigrees are said to be @xmath38-_hypomorphic _ to each other if for every @xmath39 , there is an isomorphism @xmath40 from the sub - pedigree @xmath41 of @xmath0 to the sub - pedigree @xmath42 of @xmath36 such that @xmath43 for all @xmath44 .",
    "a pedigree @xmath0 is said to be @xmath38- _ reconstructible _ if for every pedigree @xmath36 that is @xmath38-hypomorphic to @xmath0 , there is an isomorphism @xmath25 from @xmath0 to @xmath36 such that @xmath45 for all @xmath44 .",
    "[ prob - recon1 ]    is there an integer @xmath46 such that all pedigrees of order @xmath33 are @xmath38-reconstructible ?    in section  [ sec - recon ]",
    ", we present a family of counter examples as well as a few positive results on constant population size pedigrees .",
    "we prove that for every @xmath47 , there are pedigrees of order @xmath37 that are not even @xmath48-reconstructible .",
    "the problem of classification of non - reconstructible pedigrees remains open , and we suspect that it might have an algebraic structure similar to the nash - williams lemma in edge reconstruction theory , see @xcite .",
    "steel and hein considered the question of enumerating mutually non - isomorphic pedigrees of a fixed depth . a lower bound on the number of distinct pedigrees implies , by an information theoretic argument , a lower bound on the number of segregating dna sites that would be necessary in order to reconstruct the pedigree of a population from the sequence data . in section  [ sec - enum ] we prove tighter lower and upper bounds , and show that the information theoretic lower bound does not increase much .",
    "steel and hein leave the problem of enumerating general pedigrees open . here",
    "we enumerate general pedigrees as well , and again show that purely information theoretic arguments as in their paper are not sufficient to show that general pedigrees would necessarily require significantly more segregating sites for their reconstruction from the sequence data .",
    "we solve problem  [ prob - recon ] negatively by constructing an infinite family of pairs of non - isomorphic pedigrees that have correspondingly isomorphic sub - pedigrees .",
    "that is , we prove the following    [ thm - counter ] for every @xmath49 , there are non - isomorphic pedigrees @xmath0 and @xmath36 of order @xmath37 that are @xmath48-hypomorphic .    the proof is divided in two cases .",
    "the case @xmath50 gives the basic idea , which is then generalised to arbitrary values of @xmath37 .",
    "* case @xmath51*.    consider the non - isomorphic graphs @xmath52 and @xmath53 .",
    "let the edges of both graphs be arbitrarily labelled @xmath54 , where , following the standard graph theoretic convention , an edge is a set of two vertices .",
    "it is clear that @xmath55 for all @xmath56 , where @xmath57 denotes deletion of the edge @xmath58 and the resulting isolated vertices .",
    "now suppose that the end vertices of each edge @xmath58 are parents of the vertex @xmath59 in each of the pedigrees @xmath0 and @xmath36 .",
    "then the pedigrees @xmath60 and @xmath61 are isomorphic for all @xmath62 , but the pedigrees @xmath0 and @xmath36 are not isomorphic .",
    "this example proves the theorem for @xmath51 .",
    "the pedigrees @xmath0 , @xmath36 , and their sub - pedigrees are shown in figure  [ fig - base - case ] .     and",
    "@xmath53 ]    * case @xmath64 * + we have to construct hypergraphs that play the role that @xmath65 and @xmath53 play above .",
    "we construct a hypergraph @xmath66 with edge set @xmath67 and a hypergraph @xmath68 with edge set @xmath69 such that the following conditions are satisfied .",
    "1 .   @xmath70 2 .   for each @xmath71 , @xmath72",
    "; moreover , there is an isomorphism between @xmath73 and @xmath74 that _ preserves the edge order _ ,",
    "that is , vertices in an edge @xmath75 in @xmath73 are mapped to vertices in @xmath76 under such an isomorphism , for each @xmath77 .",
    "once such hypergraphs are constructed , we treat each edge in each hypergraph as a founder set .",
    "we construct pedigrees @xmath78 on founder sets @xmath79 , and pedigrees @xmath80 on founder sets @xmath81 such that    1 .",
    "pedigrees @xmath82 are vertex - disjoint except possibly for their founder sets @xmath79 ; 2 .",
    "pedigrees @xmath83 are vertex - disjoint except possibly for their founder sets @xmath81 ; 3 .",
    "pedigrees @xmath78 and @xmath80 are correspondingly isomorphic ; moreover , for all @xmath84 , an isomorphism between @xmath85 and @xmath86 that preserves the edge order extends to an isomorphism between @xmath78 and @xmath80 ; 4 .",
    "each of the pedigrees @xmath78 and @xmath80 contains exactly one extant vertex @xmath87 .    the resulting pedigrees @xmath88 and @xmath89 are non - isomorphic ( since the hypergraphs @xmath66 and @xmath68 are non - isomorphic ) but their sub - pedigrees are correspondingly isomorphic .",
    "* construction of hypergraphs @xmath66 and @xmath68 *    the required hypergraphs are constructed by a simple application of linear algebra .",
    "let each integer in @xmath90 be written in base 2 as an @xmath37-digit number by padding sufficiently many zeros on the left .",
    "we count its digits from the right .",
    "the set of @xmath37-digit binary numbers is denoted by @xmath91 $ ] .",
    "the @xmath56th digit of a number @xmath17 is denoted by @xmath92 , and the number obtained by setting the @xmath56th digit of @xmath17 to 0 ( or 1 ) is denoted by @xmath93 ( or , respectively , @xmath94 ) .",
    "the number of ones and the number of zeros in @xmath17 are denoted by @xmath95 and @xmath96 , respectively .",
    "the isomorphism class of a hypergraph @xmath66 with edge set @xmath97 may be represented by a list of integers @xmath98 $ ] , where @xmath99 is the number of vertices in @xmath100 , where @xmath101 if @xmath102 , and @xmath103 , ( that is , the complement of @xmath79 ) , if @xmath104 . in other words , we have to only specify the number of vertices in each region of the venn diagram of @xmath105 .",
    "let the list of integers @xmath106 $ ] similarly denote the isomorphism class of @xmath68",
    ".    the condition @xmath72 for @xmath27 , with an isomorphism between them that preserves the edge order , may be expressed as @xmath107\\ ] ]    since we are interested in non - isomorphic hypergraphs @xmath66 and @xmath68 , we must find solutions to the above equations so that @xmath108 for some @xmath109 $ ] .",
    "we verify that @xmath110 satisfy equations  ( [ eq - cube ] ) .",
    "it can be easily verified that @xmath65 and @xmath111 do in fact satisfy the above solutions , where we include an isolated vertex in one of the graphs purely for algebraic convenience .",
    "now on we write @xmath91 = [ 2^n]_e \\cup [ 2^n]_o$ ] , where @xmath91_e$ ] is the set of integers having an even number of 1 s in their binary representation , and @xmath91_o$ ] is the set of integers having an odd number of 1 s in their binary representation . in this notation , the hypergraphs @xmath66 and @xmath68 are described as follows : the set @xmath91_e$ ] is the set of vertices of @xmath66 , and a vertex @xmath112_e$ ] is in @xmath79 if and only if @xmath102 .",
    "similarly , the set @xmath91_o$ ] is the vertex set of @xmath68 , and a vertex @xmath112_o$ ] is in edge @xmath81 if and only if @xmath102 .",
    "the vertex @xmath113 is in @xmath66 , but is an isolated vertex , and is included at this stage only for algebraic convenience , and may be deleted after completing the construction of non - reconstructible pedigrees .",
    "it is clear that @xmath66 and @xmath68 are non - isomorphic , since each of them has @xmath114 vertices , but @xmath66 has the isolated vertex 0 , while @xmath68 has no isolated vertex .",
    "what is an isomorphism between @xmath73 and @xmath74 ?",
    "an edge order preserving isomorphism from @xmath73 to @xmath74 must map vertices in a region of the venn diagram of @xmath115 to the corresponding region of the venn diagram of @xmath116 . consider any @xmath109 $ ] .",
    "the vertex @xmath93 is in @xmath75 for some @xmath77 if and only if the vertex @xmath94 is in @xmath76 , because the two vertices differ only in their @xmath56th digit .",
    "therefore , if @xmath93 is in @xmath66 , then an edge order preserving isomorphism between @xmath73 and @xmath74 must map the vertex @xmath93 to the vertex @xmath94 . similarly ,",
    "if the vertex @xmath94 is in @xmath66 , then an edge order preserving isomorphism between @xmath73 and @xmath74 must map the vertex @xmath94 to the vertex @xmath117 .",
    "moreover , this isomorphism is unique . on the standard hypercube on",
    "@xmath91 $ ] , each vertex in @xmath73 is mapped to its neighbour along the @xmath56th axis , which is in @xmath74 .",
    "let @xmath118 , and let the hypergraphs @xmath66 and @xmath68 be defined on vertex sets @xmath119_e$ ] and @xmath119_o$ ] as follows : @xmath120 where @xmath79 are the edges of @xmath66 and @xmath81 are the edges of @xmath68 .",
    "the isomorphism @xmath121 from @xmath122 to @xmath123 that preserves the edge order is given by @xmath124 , @xmath125 , @xmath126 , @xmath127 , @xmath128 , @xmath129 , @xmath130 , @xmath131 .",
    "observe that @xmath132 , @xmath133 , and @xmath134 under this map .",
    "* construction of @xmath78 and @xmath80 *    as stated earlier , for each @xmath56 , pedigrees @xmath78 and @xmath80 must be so constructed that ( the unique ) edge order preserving isomorphism between @xmath85 and @xmath86 extends to an isomorphism between @xmath78 and @xmath80 for all @xmath77 .",
    "let a balanced binary tree @xmath78 be defined so that @xmath87 is its root and @xmath79 is its set of leaves . by convention , the root @xmath87 is the lowest vertex ( at depth 0 ) in @xmath78 , and the leaves are the highest vertices ( at depth @xmath135 ) in @xmath78 . for a vertex @xmath136 in @xmath78 ,",
    "let @xmath137 be the subtree of @xmath78 induced by @xmath136 and all vertices in @xmath78 that are above @xmath136 .",
    "let @xmath138 and @xmath139 be the parents of @xmath136 .",
    "the subtree @xmath137 is a union of subtrees @xmath140 and @xmath141 , where @xmath140 is induced by vertices @xmath136 , @xmath138 , and all vertices above @xmath138 , and the subtree @xmath141 is induced by vertices @xmath136 , @xmath139 , and all vertices above @xmath139 .",
    "we call @xmath140 the _ left subtree _ at @xmath136 , and @xmath141 the _ right subtree _ at @xmath136 .",
    "let @xmath142 be the integers @xmath143 in arbitrary order .",
    "the vertices in @xmath79 are grouped in such a way that for each vertex @xmath136 at depth @xmath144 , if a vertex @xmath145 is a leaf of @xmath140 then @xmath146 , and if a vertex @xmath145 is a leaf of @xmath141 then @xmath147 .",
    "the vertices in @xmath81 are partitioned , and a binary tree @xmath80 is constructed analogously for the same ordering @xmath148 .    for @xmath149 and @xmath150 and the ordering @xmath151 ,",
    "the trees @xmath152 and @xmath153 are shown in figure  [ fig - general - case ] .     and",
    "@xmath153 for @xmath149 ]    we show that for every @xmath77 , the unique isomorphism between @xmath85 and @xmath86 extends to an isomorphism between @xmath78 and @xmath80 .",
    "let @xmath154 be a @xmath155-tuple of 0 s and 1 s .",
    "extending a notation introduced earlier , let @xmath156 denote the set @xmath157 , which is the set of leaves of a binary subtree of @xmath78 rooted at the vertex @xmath158 at depth @xmath155 .",
    "for example ,",
    "when @xmath159 , @xmath156 is the set of leaves above the left parent of @xmath87 , and @xmath158 is the left parent of @xmath87 . the set @xmath160 and the vertex @xmath161 are analogously defined for @xmath80 . by convention , an empty tuple @xmath162 defines the sets @xmath79 and @xmath81 , and the trees @xmath78 and @xmath80 , rooted at @xmath87 ; and a tuple @xmath162 of length @xmath135 defines singleton subsets @xmath163 of @xmath79 , and @xmath164 of @xmath81 .",
    "a tuple @xmath162 of length @xmath135 also uniquely determines the digits @xmath165 and @xmath166 , since we know that @xmath167 is even and @xmath168 is odd . also , if @xmath169 then @xmath170 , and if @xmath171 then @xmath172 .",
    "therefore , the map @xmath173 for all tuples of length at most @xmath135 extends the isomorphism between @xmath174 and @xmath175 .",
    "let @xmath162 be a tuple as above . extending the notation @xmath176 to @xmath162",
    ", we define @xmath177 to be the tuple obtained by setting @xmath178 in @xmath162 , and @xmath179 to be the tuple obtained by setting @xmath180 in @xmath162 .",
    "let @xmath162 be a tuple of length @xmath135 and @xmath181 . by an argument as in the above paragraph ,",
    "we have    1 .   if @xmath182 then @xmath183 ; 2 .   if @xmath184 then @xmath185 ; 3 .   if @xmath186 then @xmath187 ; 4 .   if @xmath188 then @xmath189 .    therefore , for each @xmath190 , the map defined by    1 .",
    "@xmath191 for all tuples of length at most @xmath192 ; 2 .",
    "@xmath193 for all tuples of length at least @xmath155 ; and 3 .",
    "@xmath194 for all tuples of length at least @xmath155    extends the isomorphism between @xmath85 and @xmath86 .",
    "observe that this map sends the vertices in the left subtree @xmath195 in @xmath78 to the vertices in the right subtree @xmath196 in @xmath80 , and the vertices in the right subtree @xmath197 in @xmath78 to the vertices in the left subtree @xmath198 in @xmath80 , for each tuple @xmath162 of length @xmath155 .",
    "since the trees @xmath78 and @xmath199 ( and trees @xmath80 and @xmath200 ) are disjoint except for their founders for all @xmath201 , the isomorphism between @xmath85 and @xmath86 extends to an isomorphism between pedigrees @xmath202 and @xmath203 for all @xmath155 .",
    "an isomorphism between @xmath204 and @xmath205 that extends to an isomorphism between @xmath78 and @xmath80 ; @xmath206 is schematically shown in figure  [ fig - isomorphism ] .",
    "and @xmath205 extends to an isomorphism between @xmath78 and @xmath80 ]    the pedigrees constructed above do not admit a valid gender labelling .",
    "that is , we can not assign labels @xmath207 ( male ) and @xmath208 ( female ) to all vertices so that each vertex ( except founders ) has one male parent and one female parent . for example , in the @xmath50 case , @xmath53 is not a bipartite graph , so a valid gender labelling is impossible .",
    "but the examples can be easily modified to create non - reconstructible pedigrees that also admit valid gender labels .",
    "each vertex in a pedigree constructed above may be duplicated , and one vertex may be treated male and the other female , as shown in figure  [ fig - duplicate ] . at the bottom of the tree @xmath78 ( or @xmath80 ) ,",
    "the vertex @xmath87 is duplicated as vertices @xmath209 and @xmath210 , and the new vertex @xmath87 is a child of @xmath209 and @xmath210 .",
    "[ rem - minimal ] let @xmath211 $ ] be any two adjacent vertices on the hypercube . from equation  ( [ eq - cube ] ) , if @xmath212 for some @xmath213 , then @xmath214 , regardless of which digit @xmath17 and @xmath215 differ at .",
    "in fact , by connectivity of the hypercube , we have @xmath216 for all vertices",
    "@xmath217 $ ] that are at even distance from @xmath17 on the hypercube , and @xmath218 for all vertices @xmath217 $ ] that are at odd distance from @xmath17 on the hypercube .",
    "this further implies that the hypergraphs @xmath66 and @xmath68 constructed in the above counter example have a special structure : for each @xmath219 , @xmath220 .",
    "let @xmath221 be the hypergraph with edge set @xmath222 , where @xmath223 is the set of grandparents of @xmath87 at depth @xmath14 in the pedigree @xmath0 , and let @xmath224 and @xmath225 be similarly defined for the pedigree @xmath36 , then the hypergraphs @xmath221 and @xmath224 must be isomorphic whenever @xmath226 .",
    "we end this subsection with a conjecture motivated by the observations made in remark  [ rem - minimal ] .",
    "[ con - minimal ] the counter example constructed in theorem  [ thm - counter ] is minimal . in other words ,",
    "if a pedigree @xmath0 of order @xmath37 is not @xmath48-reconstructible then it has depth at least @xmath135 , and there are at least @xmath114 ancestors at depth @xmath135 .",
    "[ rem - nash ] let @xmath66 and @xmath68 be simple graphs with edge sets @xmath227 and @xmath228 , respectively , such that @xmath229 for all @xmath230 .",
    "then the edge reconstruction conjecture states that @xmath231 provided @xmath232 .",
    "the condition @xmath232 is required since @xmath65 and @xmath53 - the graphs used as the base case of our construction of non - reconstructible pedigrees - are not _ edge reconstructible_. although no counter examples are yet known , nash - williams @xcite proved a characterisation of ( hypothetical ) counter examples to edge reconstruction .",
    "his characterisation was based on a generalisation of ideas earlier introduced by lovsz @xcite . without going into details , we note that the counter examples presented here have certain similarities with the characterisation by nash - williams",
    ". it may be possible to exploit such similarities to prove conjecture  [ con - minimal ] .",
    "let @xmath0 be a discrete generation pedigree on @xmath1 of order @xmath49 .",
    "let @xmath233 .",
    "consider the edge labelled ( multi ) graph @xmath234 whose vertex set is @xmath235 ( that is , the vertices at depth @xmath236 ) , and vertices @xmath237 are joined by an edge @xmath58 if they are the parents of @xmath87 .    [ lem - same - parents ] if there are vertices @xmath87 and @xmath238 in @xmath1 that have the same parents , then @xmath0 is uniquely determined by @xmath239",
    ".    the situation in the lemma is recognised by looking at @xmath240 , where @xmath241 .",
    "now @xmath0 is uniquely obtained from @xmath242 by joining @xmath87 to the parents of @xmath238 .",
    "[ lem - cycle ] if @xmath64 and if @xmath234 contains a cycle then @xmath0 is uniquely determined @xmath239 .",
    "let @xmath58 be an edge in a cycle in @xmath234 .",
    "the end vertices of @xmath58 are the two parents of @xmath87 .",
    "since the set of half brothers of @xmath87 is known from the collection @xmath243 , the parents of @xmath87 are uniquely recognised in @xmath244 .",
    "note that we need the condition @xmath245 because otherwise we would get a counter example based on @xmath246 or @xmath247 .    if @xmath248 and @xmath249 then @xmath239 determines @xmath0 up to congruence .    if no two vertices in @xmath1 have the same two parents then @xmath234 has @xmath37 simple edges ( that is no two edges are parallel edges ) , and there is a cycle in @xmath234 .",
    "we end this section with another conjecture .",
    "[ con - logn ] discrete generation pedigrees of order @xmath37 that have a constant population in each generation are @xmath38-reconstructible for @xmath250 .",
    "this conjecture is true if conjecture  [ con - minimal ] is true . for suppose that conjecture",
    "[ con - minimal ] is true but conjecture  [ con - logn ] is not true , and that there is a pedigree of order @xmath37 that is not @xmath38-reconstructible for some @xmath251 .",
    "therefore , for some @xmath251 , there is a sub - pedigree of order @xmath252 that is not @xmath38-reconstructible .",
    "such a sub - pedigree must have depth at least @xmath253 , and must have at least @xmath254 vertices at depth @xmath253 , implying that @xmath255 . thus if @xmath256 then we have a contradiction , therefore , all sub - pedigrees of order @xmath252 are @xmath38-reconstructible when @xmath257 , and we can complete the reconstruction inductively .",
    "let @xmath258 be the number of distinct ( mutually non - isomorphic ) discrete generation pedigrees of depth @xmath14 with @xmath37 vertices in each generation . as before ,",
    "the extant vertices are assumed to be labelled , and other vertices are assumed to be unlabelled .    in a general pedigree ,",
    "the depth of a vertex @xmath7 is the largest integer @xmath17 for which @xmath7 is a @xmath17th grandparent of an extant vertex .",
    "the depth of a pedigree is the largest integer @xmath14 for which there is a vertex of depth @xmath14 in the pedigree .",
    "let the number of distinct general pedigrees of depth @xmath14 with constant number @xmath37 of vertices at each depth be @xmath259 .",
    "the purpose of this section is to derive lower and upper bounds on @xmath258 and @xmath259 .",
    "the bounds are relevant to an information theoretic argument that was used by steel and hein in the context of a reconstruction question .",
    "let @xmath18 be a discrete generation pedigree of depth @xmath14 on @xmath1 .",
    "let @xmath5 be the set of vertices at depth @xmath56 .",
    "let @xmath261 for all @xmath262 .",
    "for each @xmath263 , define a graph @xmath264 as follows : the vertex set of @xmath264 is @xmath5 , and @xmath265 is an edge in @xmath264 if @xmath7 and @xmath11 have a child in @xmath266 .",
    "thus @xmath267 for @xmath268 , where @xmath269 denotes the number of edges of a graph @xmath66 .",
    "we restrict ourselves to bipartite graphs @xmath264 so that it is possible to assign valid gender labels to the vertices of pedigrees .",
    "let @xmath270 denote the sterling number of the second kind .",
    "there are @xmath270 partitions of @xmath1 in groups of siblings , where _ siblings _ are vertices that share both parents .",
    "if the vertices of @xmath234 are labelled then there are @xmath271 ways of assigning the groups of siblings to pairs of parents .",
    "therefore , each labelled graph @xmath234 gives @xmath272 labelled pedigrees of depth 1 .",
    "some of those pedigrees may be isomorphic to each other since there may be automorphisms of @xmath234 that permute the edges of @xmath234 non - trivially .",
    "therefore , the number of distinct pedigrees of depth 1 that can be obtained from a labelled graph @xmath234 is given by @xmath273 where @xmath274 denotes the line graph of @xmath234 , and @xmath275 denotes the automorphism group of a graph @xmath66 . if every non - trivial automorphism of @xmath234 permutes the edges of @xmath234 non - trivially then the number of distinct pedigrees of depth 1 that can be obtained from @xmath234 is given by @xmath276 each non - trivial automorphism of a graph @xmath66 permutes the edges of @xmath66 non - trivially if and only if @xmath66 has no isolated edges and not more than one isolated vertices .",
    "therefore , @xmath277 where the summation is over all distinct bipartite graphs @xmath66 having @xmath37 vertices , at least 1 and at most @xmath37 edges , at most one isolated vertex , and no isolated edges .",
    "pedigrees of depth 1 considered above have the additional property that they have no non - trivial automorphisms that fix each vertex in @xmath1 , implying that the vertices of @xmath235 are distinguishable in such pedigrees . therefore , @xmath278 where the summation is over all graphs of the type described above .          1 .",
    "there are @xmath37 vertices at each depth @xmath283 , 2 .",
    "each vertex at depth @xmath284 has exactly one parent at depth @xmath285 , 3 .",
    "distinct vertices at depth @xmath286 have distinct parents at depth @xmath285 , 4 .   at each depth",
    "@xmath287 , there are @xmath288 vertices of each gender , 5 .",
    "the pedigree of depth 1 induced by vertices in @xmath289 has no non - trivial automorphisms that fix vertices in @xmath290 .",
    "the conditions imply that given any vertex @xmath11 at depth @xmath291 there is a unique path of length @xmath17 beginning at some vertex @xmath7 in @xmath1 and ending at @xmath11 .",
    "therefore , vertices at depth at most @xmath292 are distinguishable .",
    "the last condition above makes the vertices at depth @xmath14 distinguishable as well .",
    "therefore , no two pedigrees described by the above conditions are isomorphic .",
    "this allows us to derive a lower bound on @xmath259 .",
    "@xmath293 where the first factor is a lower bound on the number of distinct pedigrees of depth 1 that are induced by @xmath289 , vertices in @xmath290 being labelled . for a vertex at depth @xmath284 , the parent that is not at depth @xmath285 may be chosen from the @xmath294 distinguishable vertices at depth @xmath295 or more .",
    "this explains the second factor .",
    "steel and hein give the information theoretic argument that if there are @xmath296 segregating sites in dna sequences obtained from @xmath37 extant individuals , then there are @xmath297 possible combinations of sequences .",
    "therefore , @xmath297 must be at least @xmath258 ( or @xmath259 ) depending on what assumptions are made about pedigrees ) to be able to reconstruct their pedigree up to depth @xmath14 .",
    "they derive a lower bound on @xmath296 given by @xmath298 for reconstruction of discrete generation constant population size pedigrees .",
    "they comment that in reality the number of sites required is likely to be much higher due to under - counting of isomorphism classes and due to the stochastic nature of sequence evolution .",
    "theorem  [ thm - bounds ] gives an information theoretic lower bound on @xmath296 that is about @xmath299 for discrete generation constant population size pedigrees , and a bound of about @xmath300 for general pedigrees .",
    "moreover , the bounds based on the upper bounds on @xmath258 and @xmath259 are only about @xmath301 and @xmath302 , respectively , for discrete generation and general pedigrees .",
    "if we assume that no vertex at depth @xmath17 has a parent at depth more than @xmath303 then we have @xmath304 this gives a lower bound of about @xmath305 on the number of segregating sites required for pedigree reconstruction .",
    "i would like to thank mike steel for many useful conversations , and for hosting me at the university of canterbury .",
    "oliver will and mike steel read the manuscript carefully and made many helpful comments .",
    "i am supported by the allan wilson centre for molecular ecology and evolution , new zealand .        c.  st .",
    "j.  a. nash - williams . the reconstruction problem . in lowell",
    "w. beineke and robin  j. wilson , editors , _ selected topics in graph theory _ , pages 205236 .",
    "academic press inc .",
    "[ harcourt brace jovanovich publishers ] , london , 1978 ."
  ],
  "abstract_text": [
    "<S> a pedigree is a directed graph in which each vertex ( except the founder vertices ) has two parents . </S>",
    "<S> the main result in this paper is a construction of an infinite family of counter examples to a reconstruction problem on pedigrees , thus negatively answering a question of steel and hein . </S>",
    "<S> some positive reconstruction results are also presented . </S>",
    "<S> the problem of counting distinct ( mutually non - isomorphic ) pedigrees is considered . </S>",
    "<S> the known lower and upper bounds on the number of pedigrees are improved upon , and their relevance to pedigree reconstruction from dna sequence data is discussed . </S>",
    "<S> it is shown that the information theoretic bound on the number of segregating sites in the sequence data that is minimally essential for reconstructing pedigrees would not significantly change with improved enumerative estimates . </S>"
  ]
}
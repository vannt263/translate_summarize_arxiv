{
  "article_text": [
    "algebraic - geometric ( ag ) codes @xcite offer desirable properties such as large code lengths over small finite fields , the potential to find a large selection of codes and good error - correction at high code rates @xcite . in recent years",
    ", an important class of one - point ag codes , called hermitian codes , has been frequently discussed @xcite-@xcite . for a hermitian code defined over @xmath0 , a brute - force way to design",
    "an encoder is to multiply the information vector by a generator matrix .",
    "the space complexity of a serial - in serial - out architecture for this systematic encoder is @xmath3 in terms of finite field multipliers and @xmath4 in terms of memory elements .",
    "the encoder requires @xmath5 clock cycles to generate a codeword of length @xmath6 , thus , the latency is @xmath6 .    by considering a hermitian code as a superposition of several generalized reed solomon ( rs ) codes",
    ", an encoding scheme is introduced in @xcite . in @xcite , an encoding algorithm by forming a bivariate information polynomial and evaluating this polynomial at every finite rational point on the hermitian curve",
    "is proposed .",
    "however , both such schemes are nonsystematic and involve the evaluation of bivariate polynomials at @xmath6 finite rational points , thus , they may not have efficient hardware architecture for implementations .    a computationally efficient approach for systematic encoding",
    "was proposed in @xcite .",
    "a serial - in serial - out architecture for this approach was proposed in @xcite .",
    "this architecture requires @xmath6 clock cycles to encode a codeword of length @xmath6 .",
    "the space complexity for this architecture is @xmath4 , both in terms of finite field multipliers and memory elements .    in this paper , we present an algorithm for systematic encoding and syndrome computation of hermitian codes .",
    "we give an outline for the encoder architecture , which uses @xmath2 varying - rate rs encoders as main blocks and requires @xmath7 clock cycles for encoding a codeword of length @xmath6 .",
    "the space complexity of the architecture is @xmath1 in terms of both , memory elements and finite field multipliers .",
    "we consider codes from a hermitian curve @xmath8 over a finite field @xmath9 .",
    "the space @xmath10 consists of all functions on @xmath11 that have a pole of multiplicity at most @xmath12 only at the unique point at infinity . for @xmath10 ,",
    "we choose a basis @xmath13    let @xmath14 be an element of @xmath9 such that @xmath15 .",
    "the affine rational points on @xmath11 are of the form @xmath16 where @xmath17 is the kronecker - delta and @xmath18 and @xmath19 represent arbitrary elements in @xmath9 and @xmath20 respectively .",
    "let @xmath21 be a primitive element in @xmath9 and let @xmath22 be a primitive element in @xmath20 .",
    "we label the positions in a codeword by the corresponding elements @xmath18 = @xmath23 , @xmath19 = @xmath24 and we thus naturally consider a codeword as a @xmath25 matrix @xmath26 .",
    "occasionally we will index elements in this array by elements of the fields @xmath9 and @xmath27 , otherwise we index starting with @xmath28 .",
    "a hermitian code @xmath29 is defined as @xmath30    for an in - depth treatment of ag codes we refer to @xcite . throughout this paper",
    "we consider @xmath12 and thus the hermitian code as being fixed .",
    "given a @xmath25 matrix @xmath31 we can check if @xmath31 is a codematrix in a hermitian code by computing the syndromes @xmath32 @xmath31 is a code - matrix iff @xmath33 is zero for all @xmath34 . substituting the explicit form of the points we get @xmath35 these equations can further be developed to give specific forms as shown in ( [ eqn_dbl_x ] ) and ( [ eqn_dbl_y ] ) .",
    "@xmath36 @xmath37    from the structure of ( [ eqn_dbl_y ] ) , it comes naturally to define a matrix as in ( [ defa ] ) to convert the expression into a matrix multiplication .",
    "@xmath38    similarly we define a matrix @xmath39 as @xmath40    for later use we give here the following lemma .      _ the @xmath41 submatrices of @xmath42 consisting of the elements indexed by @xmath43 and that of @xmath39 consisting of the elements indexed by @xmath44 , @xmath45 , @xmath46 are non - singular . _",
    "+    this lemma follows in both cases from the properties of vandermonde matrices",
    ".    it will be convenient to define an array @xmath47 of matrices of type @xmath42 and @xmath39 .",
    "@xmath48    given a @xmath25 array @xmath31 with columns @xmath49 , we define a @xmath25 matrix @xmath50 with columns @xmath51 as @xmath52    one of the main ingredients in both the syndrome calculation and a systematic encoding is the use of techniques for cyclic codes which are extended by one extra position .",
    "let @xmath53 .",
    "_ let an ordered set @xmath54 of elements from @xmath27 be given .",
    "we define the code @xmath55 as @xmath56 _    for the natural indexing of elements in @xmath27 and @xmath9 induced by @xmath22 and @xmath21 we have the following lemma .",
    "_ let a @xmath25 matrix @xmath31 be given .",
    "the matrix @xmath31 is a code matrix in the hermitian code @xmath29 iff the @xmath57th row of @xmath58 is a codeword in @xmath59 . _",
    "the proof follows immediately from the syndrome definition",
    ".    codes of type @xmath60 will play a central roll in the sequel .",
    "we define codes @xmath61 as @xmath62    from lemma 2 we can derive an efficient way to compute the syndrome for a hermitian code . given a received matrix * r * we obtain a matrix @xmath58 with columns @xmath63 = @xmath64 . given @xmath58 we can easily solve the task of computing syndromes provided",
    "we can compute the corresponding syndromes for codes @xmath65 .",
    "the idea behind the systematic encoding of hermitian codes is to use the well known techniques for the systematic encoding of cyclic codes .",
    "lemma 2 almost immediately gives a nonsystematic encoding procedure for hermitian codes . to this end",
    "let @xmath58 be a @xmath25 matrix such that the @xmath66th row of @xmath58 is a codeword in @xmath67 .",
    "it follows from lemma 2 that we can obtain a code - matrix for a hermitian code by multiplying the columns of @xmath58 with matrices @xmath68 and @xmath69 respectively .",
    "we can obtain such a matrix @xmath58 using eg .",
    "systematic encoding procedures for codes of type @xmath70    we will need @xmath68 and @xmath69 .      _",
    "_    the matrices @xmath42 and @xmath39 have inverses given in ( [ inva ] ) and ( [ invai ] ) .",
    "@xmath71    @xmath72    the inverse of @xmath39 is straight forward to verify .",
    "we only show the inverse of @xmath42 .",
    "the rows of @xmath68 and the columns of @xmath42 may be thought of as being indexed by elements of @xmath20 .",
    "let @xmath73 be the matrix obtained as @xmath74 .",
    "the entry @xmath75 is thought of as being indexed by @xmath76 .",
    "@xmath77 @xmath78    we note that we are entirely free to choose `` virtual information symbols '' in matrix @xmath58 . let a sequence of information symbols be given that are to be encoded systematically in a codeword of a hermitian code .",
    "the trick in obtaining a systematic encoding procedure is to choose the information symbols in @xmath58 so that the mapping with @xmath68 and @xmath69 respectively , gives the primary information symbols that we really want to encode .    before we derive a systematic encoding procedure for hermitian codes , we treat a somewhat simpler case , which will elucidate the idea of systematic encoding .",
    "let @xmath79 be a code on a hermitian curve defined as @xmath80 the code @xmath79 has dimension @xmath81 .",
    "the following algorithm may be used for systematic encoding of code @xmath79 .      _",
    "write the @xmath81 information symbols in an array @xmath82 of size @xmath83 2 .",
    "compute @xmath84 3 .",
    "encode the @xmath57th row of @xmath85 independently in a systematic way into codewords of the code @xmath86 denote the resulting @xmath25 matrix with @xmath87 .",
    "4 .   compute columns @xmath88",
    "= @xmath89    algorithm 1 yields a systematic encoding procedure for the code @xmath79 because @xmath90 is a code matrix by lemma 2 and the first @xmath91 symbols are the original information symbols .",
    "the first @xmath92 columns of @xmath82 determine the first @xmath92 columns of @xmath85 .",
    "it is the first @xmath92 columns of @xmath85 that contain the virtual information symbols for the encoding of the cyclic codes .",
    "the situation for hermitian codes is complicated by the fact that the codes @xmath61 have different rates .",
    "thus at some instance of the algorithm we have to process the columns that are in one part determined by information symbols and the other part is determined by redundancy symbols generated by the systematic encoders of the codes @xmath61 . for simplicity",
    ", we will restrict our attention to codes @xmath29 of dimension @xmath93 that is less than @xmath94 .",
    "let @xmath95 be a systematic encoder for a code @xmath61 .",
    "the input sequence to the encoder @xmath96 are symbols from an array @xmath97 for @xmath98 .",
    "we want to construct an algorithm that takes as input an array d of size @xmath25 with arbitrarily chosen symbols in positions @xmath99 and zero in the remaining positions and that produces as output a code - array @xmath26 .",
    "let @xmath100 be defined as the number of information symbols in the @xmath66th column of @xmath101 .",
    "the columns of @xmath101 thus have the form @xmath102 .",
    "we give a systematic encoder procedure in the following algorithm . during the procedure",
    "we also construct an array @xmath58 .",
    "the @xmath57th row of @xmath58 is a codeword in @xmath61 .",
    "thus the first @xmath103 positions in the @xmath57th row of @xmath58 determine the @xmath57th row of @xmath58 completely .      the algorithm is shown in ( [ algo2 ] ) .",
    "+ @xmath104    _ _    input : an @xmath25 array @xmath101 .",
    "an empty @xmath25 array @xmath58 .",
    "iterations : for @xmath105    1 .",
    "compute the known part of @xmath63 for @xmath106 as @xmath107 2 .",
    "solve the equation @xmath108 for @xmath109 3 .",
    "set @xmath110 @xmath111    the matrix @xmath58 in the algorithm satisfies the conditions @xmath63 = @xmath112 @xmath113 and the @xmath57-th row of @xmath58 is a codeword in @xmath61 .",
    "thus @xmath90 is a code - array by lemma 2 .",
    "algorithm 2 outlines the mathematical procedure to achieve systematic encoding of a hermitian code .",
    "the real difficulty lies in an efficient implementation of the algorithm .",
    "we give such an implementation in section iv but before proceeding we will need a simple lemma .",
    "let @xmath42 be any @xmath114 matrix with inverse @xmath68 .",
    "we assume that the submatrix of @xmath42 indexed by elements @xmath115 is nonsingular .",
    "this will always be true for the cases that we are interested in by lemma 1 .",
    "let @xmath116 denote the @xmath41 matrix and let @xmath117 be a @xmath114 matrix of the following form : + @xmath118 such that + @xmath119 for a @xmath41 matrix @xmath120 .",
    "we note that @xmath121 is just a systematic encoding matrix for a code which has a parity check matrix the first @xmath122 rows of @xmath68 .          _",
    "_    let @xmath123 and @xmath124 be given .",
    "the solution for @xmath125 and @xmath126 to the linear system of equations @xmath127    can be found with the following algorithm .",
    "algorithm 3 is given as shown in ( [ algo3 ] ) .",
    "+ @xmath128    1 .",
    "@xmath129 2 .",
    "@xmath130 3 .",
    "@xmath131 4 .",
    "@xmath132 5 .",
    "@xmath133    @xmath134 which proves that @xmath135 equal zero .",
    "+ now it follows that + @xmath136",
    "inspecting algorithm 2 and lemma 4 , we see that we need modules for multiplication of an array with matrix @xmath42 , @xmath68 , systematic encoding of codes @xmath67 , and a systematic encoding module for codes @xmath137 defined as @xmath138 before describing the modules in detail we give a black box description and the overall description of the implementation .",
    "the module has as parallel input a vector @xmath82 of length @xmath2 and produces as serial output the numbers @xmath140 during the next @xmath2 clock cycles .",
    "module b has as serial input a vector @xmath82 of length @xmath2 .",
    "after @xmath2 clock cycles the parallel output is a vector @xmath142 .",
    "the module has a serial input of @xmath143 symbols and produce one symbol per clock cycle .",
    "the clocking frequency is @xmath144 of the overall clock rate .",
    "module d takes a serial input of length @xmath122 and produces as serial output a codeword of length @xmath137 .",
    "figure [ fig3 ] outlines the overall implementation . when the left hand input becomes valid , the output of module a is added to the negative output of module c , effectively implementing steps 1 and 2 of algorithm 3 .",
    "the sum is fed to module d which implements step 3 of algorithm 3 .",
    "the output of module d is combined with the output of module a to implement step 4 of algorithm 3 .",
    "simultaneously it is fed to module b of the implementation .",
    "after @xmath2 clock cycles the output of module b is added to the input thus implementing step 5 of algorithm 3 .",
    "module c can be implemented as an obvious modification of a systematic encoding circuits for rs codes @xcite .",
    "module d implements systematic encoding of a code with parity check matrix given by first @xmath122 rows of matrix @xmath68 . from the form of matrices",
    "@xmath68 , we see that code @xmath137 may be defined as @xmath145 and we can use standard encoding techniques for shortened cyclic codes which are modified in the obvious way .",
    "a low complexity algorithm for systematic encoding and syndrome computation of hermitian codes has been presented .",
    "the algorithm has a run time complexity of @xmath146 and is suitable for vlsi implementation .",
    "we give an outline for the encoder architecture , which uses as main blocks , @xmath2 varying - rate reed solomon encoders .",
    "the architecture achieves a much lower space complexity in terms of finite field multipliers and memory elements when compared to earlier reported works .",
    "the authors would like to thank science foundation ireland , claude shannon institute and deutsche forschungsgemeinschaf for supporting parts of this research work .",
    "1 v.  d.  goppa , _ codes on algebraic curves _ , soviet math . dokl . , 1981 , 24 ,",
    "75 - 91 b.  e.  wahlen , and j.  jimenez , performance comparison of hermitian and reed - solomon codes , _ proc .",
    "milcom _ , 1997 .",
    "j.  h.  van  lint and t.  a.  springer , generalized reed - solomon codes from algebraic geometry , _ ieee trans .",
    "inform . theory _",
    "it-33 , pp .",
    "305 - 309 , may 1987 t.  yaghoobian and i.  f.  blake , hermitian codes as generalized reed - solomon codes , _ design , codes , cryptography _ , vol .",
    "2 , pp . 5 - 17 , 1992 b.  z.  shen , on encoding and decoding of the codes from hermitian curves , _ proc . , cryptography and coding iii _ , vol . 45 ,",
    "m. ganley , ed . , oxford , uk , pp . 337 - 356 , 1993 j.  little , k.  saints and c. heegard , on the structure of hermitian codes , _ journal of pure and applied algebra _ , vol . 121 , pp .",
    "293 - 314 , 1997 c. heegard , j. little and k. saints , `` systematic encoding via grbner bases for a class of algebraic - geometric codes , '' _ ieee trans .",
    "theory , _ vol .",
    "it-41 , pp .",
    "1752 - 1762 , nov .",
    "1995 j.  chen and c.  lu , `` a serial - in - serial - out hardware architecture for systematic encoding of hermitian codes via grbner bases '' , _ ieee trans .",
    "info . theory _ ,",
    "52 , no . 8 , pp . 1322 - 1332 , august 2004 h. stichtenoth , _ algebraic function fields and codes _ , springer - verlag , berlin , germany 1993 . g. fettewis and m. hassner , `` a combined reed - solomon encoder and syndrome generator with small hardware complexity '' _ proc .",
    "circuits and systems , _ pp .",
    "1871 - 1874 , 1992 ."
  ],
  "abstract_text": [
    "<S> we present an algorithm for systematic encoding of hermitian codes . for a hermitian code defined over @xmath0 , </S>",
    "<S> the proposed algorithm achieves a run time complexity of @xmath1 and is suitable for vlsi implementation . </S>",
    "<S> the encoder architecture uses as main blocks @xmath2 varying - rate reed - solomon encoders and achieves a space complexity of @xmath1 in terms of finite field multipliers and memory elements .    </S>",
    "<S> hermitian codes , systematic encoding , vandermonde metrices . </S>"
  ]
}
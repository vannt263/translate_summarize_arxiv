{
  "article_text": [
    "the notion of one object avoiding another has been studied in permutations , words , partitions , and graphs .",
    "although pattern avoidance has proven to be a useful language to describe connections between various combinatorial objects , it has also attracted broad interest as a pure enumerative topic .",
    "one combinatorial problem that has received much attention in recent years is to count the number of permutations of length @xmath0 avoiding a certain smaller permutation . here",
    ", permutation @xmath1 avoiding permutation @xmath2 means that @xmath1 has no subsequence that is order - isomorphic to @xmath2 .",
    "although the classical case of the permutation pattern problem allows @xmath2 to be given as _",
    "any _ subsequence of @xmath1 , a special case that can be attacked successfully via a variety of techniques is studying when @xmath1 contains @xmath2 as a consecutive subpermutation .",
    "this latter question can be answered by a variety of techniques including inclusion - exclusion .",
    "there also exist algorithmic techniques , such as the goulden - jackson cluster method @xcite to approach this question using generating functions .",
    "two natural questions arise : `` given a permutation @xmath2 , how many permutations of length @xmath0 avoid @xmath2 ? ''  and `` when do two forbidden permutations @xmath3 and @xmath4 have the same avoidance generating function ? ''    in this paper we consider the analogous questions for plane trees . all trees in the paper are rooted and ordered .",
    "we will focus on ternary trees , that is , trees in which each vertex has 0 or 3 ( ordered ) children .",
    "a vertex with no children is a _ leaf _ and a vertex with 3 children is an _ internal vertex_. a ternary tree with @xmath5 internal vertices has @xmath6 leaves , and the number of such trees is @xmath7 ( oeis http://oeis.org/a001764 [ ] ) .",
    "it is clear then that there only exist ternary trees with an odd number of leaves .",
    "the first few ternary trees are depicted in figure [ f : trees ] .",
    "conceptually , a plane tree @xmath8 avoids a tree pattern @xmath9 if there is no instance of @xmath9 anywhere inside @xmath8 .",
    "pattern avoidance in vertex - labeled trees has been studied in various contexts by steyaert and flajolet @xcite , flajolet , sipala , and steyaert @xcite , flajolet and sedgewick @xcite , and dotsenko @xcite .",
    "recently , khoroshkin and piontkovski @xcite considered generating functions for general unlabeled trees but in a different context .    in 2010 ,",
    "rowland @xcite explored contiguous pattern avoidance in binary trees ( that is , rooted ordered trees in which each vertex has 0 or 2 children ) .",
    "he had two motivations for choosing these particular trees ; first , there is a clear and natural definition of what it means for a rooted ordered tree to contain a contiguous ordered pattern that is unclear for general trees , and second , there is natural bijection between @xmath0-leaf binary trees and @xmath0-vertex trees .",
    "his study had two main objectives .",
    "first , he developed an algorithm to find the generating function for the number of @xmath0-leaf binary trees avoiding a given tree pattern ; he adapted this to count the number of occurrences of the given pattern .",
    "second , he determined equivalence classes for binary tree patterns , classifying two trees @xmath10 and @xmath9 as equivalent if the same number of @xmath0-leaf binary trees avoid @xmath10 as avoid @xmath9 for @xmath11 .",
    "he completed the classification for all binary trees with at most eight leaves , using these classes to develop replacement bijections between equivalent binary trees .    in this paper , we extend rowland s work by exploring pattern avoidance in ternary trees , and in some cases to general @xmath12-ary trees ( that is , trees where each vertex has 0 or @xmath12 children ) .",
    "we first compute recurrence relations to count trees that avoid ternary tree patterns with at most seven leaves .",
    "next , we adapt rowland s algorithm to find functional equations for the avoidance generating functions of arbitrary ternary tree patterns . finally , we give bijections between trees avoiding several pairs of equivalent tree patterns , and begin generalizing this process to fit the more general case of @xmath12-ary trees .",
    "the appendix contains all the equivalence classes of ternary tree patterns with at most nine leaves found using the ` maple ` package ternarytrees .",
    "the ` maple ` package itself is given at the third author s website ( http://faculty.valpo.edu/lpudwell/maple.html ) .",
    "following rowland s definition of avoidance , a ternary tree @xmath8 _ contains _ @xmath9 as a tree pattern if @xmath9 is a contiguous , rooted , and ordered subtree of @xmath8 .",
    "conversely , @xmath8 _ avoids _",
    "@xmath9 if there is no such subtree of @xmath8 .",
    "for example , consider the three trees shown in figure [ feg1 ] .",
    "@xmath8 contains @xmath9 because this pattern occurs beginning at the center child of the root of @xmath8 ( see bolded subtree ) .",
    "however , @xmath8 avoids @xmath10 because no vertex in @xmath8 has children extending from both its left and center children .",
    "@xmath13 @xmath14 @xmath15 @xmath16 @xmath17 @xmath18    we define @xmath19 to be the set of @xmath0-leaf ternary trees that avoid the pattern @xmath9 , and @xmath20",
    ". we will be particularly interested in determining the generating function @xmath21 for various patterns @xmath9 .    before we explore particular ternary tree patterns , we list all of the 3 , 5 , and 7-leaf ternary trees . note , however , if @xmath22 is the left ",
    "right reflection of @xmath9 , then @xmath23 by symmetry , so left ",
    "right reflections are omitted .",
    "we label trees with a double subscript notation .",
    "the first subscript gives the number of leaves of the tree , and the second subscript distinguishes between distinct tree patterns of the same depth .",
    "we will use these labels throughout the remainder of the paper .",
    "@xmath24 @xmath25 @xmath26 @xmath27 @xmath28 @xmath29 + @xmath30 @xmath18 @xmath31 @xmath16 @xmath32 @xmath33 @xmath34 @xmath35 + @xmath36 @xmath37 @xmath38 @xmath39 @xmath40 @xmath41 +",
    "in this section , we find recurrence relations for the number of trees avoiding several of the trees in figure [ f : trees ] . for each tree , we discuss the structure of trees that avoid the given tree pattern , how a recurrence and generating function can be found from this structure , and we list any other equivalent tree patterns . if @xmath9 is clear from context , we will simply write @xmath42 and @xmath43 in lieu of @xmath19 and @xmath44 .      to find @xmath45 ,",
    "let us look at how an @xmath0-leaf tree @xmath8 must be structured in order to avoid @xmath46 .",
    "consider any internal vertex @xmath47 of @xmath8 .",
    "@xmath47 s left child can have no descendants , thus it must be a leaf .",
    "s center child can be the root of a subtree of any number of leaves @xmath5 , where @xmath48 .",
    "finally , @xmath47 s right child can also be the root of a subtree , but because there are @xmath0 total leaves , this subtree must have precisely @xmath49 leaves .",
    "thus , there are @xmath50 possible subtrees beginning at @xmath47 s center child , and @xmath51 possible subtrees at @xmath47 s right child that also avoid @xmath46 .",
    "taking the summation of these over the possible values of @xmath5 gives the recurrence relation @xmath52    our initial conditions for this recurrence are @xmath53 , because there are no ternary trees with 0 leaves ; @xmath54 , because there is one tree with one leaf , and it avoids any tree pattern with more than one leaf ; and @xmath55 , because there are no trees with 2 leaves .",
    "we can now compute @xmath56 using standard techniques to obtain @xmath57 the first few terms of this sequence are ( for @xmath58 ) @xmath59    two things are worth noting about this avoidance sequence .",
    "first , the non - zero terms are the catalan numbers ( oeis http://oeis.org/a000108 [ ] ) .",
    "second , the sequence is interspersed by zeros because there are no ternary trees with an even number of leaves .",
    "this second observation will be true for the avoidance sequence of any ternary tree pattern .    for trees avoiding @xmath60 , we only need to make one alteration ; namely , that it is the center child , instead of the leftmost child , of each vertex that can not have any children .",
    "therefore , we find that @xmath61      next , we find the number of @xmath0-leaf trees that avoid @xmath62 such that @xmath63 . as before , we consider any internal vertex @xmath47 of a tree @xmath8 that avoids @xmath62 .",
    "there are two nonexclusive possibilities for which of @xmath47 s children are internal vertices .",
    "first , @xmath47 s leftmost child has no children , but both its center and right children can .",
    "otherwise , @xmath47 s center child has no children , but both its left and right children can .",
    "these two cases are equivalent to avoiding @xmath46 and @xmath60 , respectively .",
    "however , this double - counts one instance : that is , when both the left and the center child of @xmath47 have no children .",
    "there are exactly @xmath64 trees counted by both of the first two cases . subtracting this from the recurrence relation ,",
    "we are left with    @xmath65    our initial conditions for this recurrence relation are again @xmath53 , @xmath54 , and @xmath55 . using standard techniques , we obtain @xmath66 which gives the little schrder numbers ( oeis http://oeis.org/a001003 [ ] ) , interspersed by zeros : 0 , 1 , 0 , 1 , 0 , 3 , 0 , 11 , 0 , 45 , 0 , 197 , 0,@xmath67    this is also the avoidance sequence for @xmath68 . as before ,",
    "two cases exist for avoiding @xmath68 ( either the left and center or the right and center children of @xmath47 have descendants ) , as well as a term that needs to be subtracted to avoid double - counting ( when neither the left nor the right children of @xmath47 have their own children ) .",
    "thus , we have @xmath69    before considering other tree patterns , we further examine the connection between trees avoiding @xmath68 and the little schrder numbers ( @xmath70 ) .",
    "to do this , we look at one well - known combinatorial interpretation of the little schrder numbers : @xmath70 is the number of binary trees with @xmath0 vertices and with each right edge `` colored '' to be either solid or dashed @xcite .",
    "we note that elsewhere in this paper , we have concerned ourselves with _ strictly _ binary trees ( each internal vertex has precisely 2 children ) or _ strictly _ ternary trees ( each internal vertex has precisely 3 children ) . in the current interpretation of the little schrder numbers , however , these binary trees are not strict ; that is , an internal vertex may have 1 or 2 children .",
    "consider the following map from this set of colored ( _ non - strict _ ) binary trees to the set of the ( _ strict _ ) ternary trees avoiding @xmath68 :    1 .   for each vertex @xmath47 in the binary tree , draw a vertex @xmath71 .",
    "2 .   consider each parent - child pair in the binary tree : * if @xmath72 is the left child of @xmath47 , then @xmath73 is the center child of @xmath71 . *",
    "if @xmath72 is the right child of @xmath47 via a solid edge , then @xmath73 is the left child of @xmath71 . * if @xmath72 is the right child of @xmath47 via a dashed edge , then @xmath73 is the right child of @xmath71 .",
    "3 .   for each vertex",
    "@xmath71 created in step 1 , if @xmath71 has 0 , 1 , or 2 children , add children until @xmath71 has exactly 3 children .",
    "for example , the colored binary tree in figure [ fi : schroder ] is mapped to the ternary tree in the same figure .",
    "@xmath74 @xmath75 @xmath76    note that any ternary tree that is produced by this algorithm certainly avoids @xmath68 since a vertex will not have both a solid right edge and a dashed right edge at the same time , and accordingly a vertex in the resulting ternary tree will never have both a right child and a left child with children of their own .",
    "this process has an obvious inverse .    as an example , look at @xmath77 .",
    "there are eleven 3-vertex colored binary trees , and eleven 5-leaf trees avoiding @xmath68 .",
    "each colored binary tree is shown with its image under our map in figure [ f : sch ] .",
    "@xmath78 @xmath75 @xmath33 @xmath79 @xmath75 @xmath80 @xmath81 @xmath75 @xmath39 + @xmath82 @xmath75 @xmath35 @xmath83 @xmath75 @xmath84 @xmath85 @xmath75 @xmath41 + @xmath86 @xmath75 @xmath37 @xmath87 @xmath75 @xmath88 @xmath89 @xmath75 @xmath90 + @xmath91 @xmath75 @xmath18 @xmath92 @xmath75 @xmath93      to find the number of @xmath0-leaf trees that avoid @xmath94 , @xmath63 , we consider two cases for any internal vertex @xmath47 of a tree @xmath8 that avoids @xmath94 .",
    "first , @xmath47 s left child has no children , while the center and right children are roots of subtrees with @xmath5 leaves and @xmath49 leaves respectively with @xmath48 .",
    "the second case is when @xmath47 s left child has three children ; to avoid @xmath94 , a left - vertex child can not have another consecutive left - vertex child .",
    "the four other vertices ( the center and right children of @xmath47 and the center and right children of @xmath47 s left child ) are the roots of subtrees with @xmath95 , @xmath12 , @xmath5 , and @xmath96 leaves respectively with @xmath97 .",
    "therefore , @xmath98 is given by the sum of these two cases @xmath99    to find the recurrence relation for trees avoiding @xmath100 , we see that instead of avoiding two consecutive left - children vertices , we avoid two consecutive middle - children vertices",
    ". therefore , @xmath101 for @xmath11 . from this recurrence",
    "we compute the avoidance sequence : 0 , 1 , 0 , 1 , 0 , 3 , 0 , 11 , 0 , 46 , 0 , 207 , 0 , @xmath67 ( oeis http://oeis.org/a006605 [ ] interspersed by zeros ) .",
    "clearly , it would be extremely difficult to solve this recurrence directly for the generating function @xmath102 .",
    "it turns out that tree patterns @xmath103 , @xmath104 , and @xmath105 , have the same avoidance generating function as @xmath62 and @xmath68 , but we have not been able to find their recurrence relations by hand with an argument parallel to those above because complex problems arise with overcounting and undercounting . instead , we now adapt rowland s generating function algorithm for trees avoiding binary tree patterns to deal with ternary tree patterns .",
    "as we saw in the previous section , it is straightforward to compute a given ternary tree pattern s avoidance generating function by hand for a few small tree patterns .",
    "however , this type of computation quickly becomes impractical for increasingly complex tree patterns .",
    "for this reason , we develop an algorithm to find a functional equation satisfied by the avoidance generating function @xmath106 for any ternary tree pattern @xmath9 .",
    "first , however , we make one notational adjustment .",
    "now , let @xmath107 be the generating function for the number of @xmath0-leaf ternary trees that avoid @xmath9 and contain the tree pattern @xmath108 at their root .",
    "recall , we have already specified that tree @xmath8 contains @xmath9 as a pattern if @xmath8 contains @xmath9 as a contiguous , rooted , ordered subgraph .",
    "@xmath8 contains pattern @xmath108 at the root if @xmath8 contains a copy of @xmath108 where the root of @xmath108 coincides with the root of @xmath8 .",
    "therefore , with our new notation , the generating function for all trees avoiding @xmath9 is given by @xmath109 , because all ternary trees begin with the single vertex root .",
    "the algorithm we use to find @xmath110 is very similar to rowland s algorithm for binary trees @xcite , but it accounts for an additional child at each internal vertex . the algorithm produces a sequence of generating functions using a recursive method .",
    "initially , @xmath110 , the generating function we are interested in , is written in terms of another generating function .",
    "then , for each new generating function @xmath107 introduced in the recursive step , we deduce another recurrence in terms of other generating functions .",
    "if @xmath9 is a tree pattern , we will use @xmath111 , @xmath112 , and @xmath113 to denote the left , center , and right subtrees of @xmath9 respectively . when appropriate we may write @xmath114 .",
    "we also require one more operation on tree patterns ; we will use @xmath115 to denote the _ intersection _ of tree patterns @xmath10 and @xmath9 .",
    "conceptually , @xmath115 is the tree pattern produced by drawing @xmath10 and @xmath9 so that their roots coincide .",
    "more formally , if @xmath47 is a single vertex , then @xmath116 and recursively @xmath117 .",
    "we note that although considering @xmath10 and @xmath9 as trees makes the intersection notation seem to be a misnomer , the set of trees with tree pattern @xmath10 at their root intersected with the set of trees with tree pattern @xmath9 at their root is indeed the set of trees with tree pattern @xmath115 at their root . with this new notation ,",
    "we are now prepared to give an algorithm to find @xmath110 ( for @xmath9 not equal to the single vertex tree ) .",
    "first notice that @xmath118 .",
    "this is because , unless @xmath9 is the single vertex tree , the generating function for trees with a single vertex at the root will always account for the one tree with one leaf .",
    "then , the rest of the trees avoiding @xmath9 have a @xmath119 pattern at the root , so @xmath120 .",
    "next , we have introduced a new generating function @xmath121 , and we need to derive a new recurrence for this function . to do this , we recognize that a @xmath9-avoiding tree with pattern @xmath108 at its root is made up of three @xmath9-avoiding subtrees with @xmath122 , @xmath123 , and @xmath124 at their respective roots .",
    "however , @xmath125 , @xmath126 , and @xmath127 each account for trees avoiding @xmath9 individually , which overcounts when the trees have root pattern of @xmath128 , @xmath129 , and @xmath130 respectively .",
    "therefore , we have @xmath131 this observation holds not only for the tree pattern @xmath119 , but for any non - trivial tree pattern @xmath108 .",
    "we repeatedly use this observation to derive a new recurrence for each generating function @xmath107 that arises in our computation until we have a complete system of equations .",
    "we are guaranteed that such a system will eventually be complete since if @xmath9 has depth @xmath132 , each pattern @xmath108 introduced in this process has depth at most @xmath132 and there are finitely many tree patterns of depth at most @xmath132 .",
    "once we have a complete system of equations , we eliminate all unwanted variables until we have a functional equation for @xmath110 . here , then , is the algorithm to compute @xmath106 for any non - trivial ternary tree pattern @xmath9 .",
    "1 .   initialize @xmath133 , @xmath134 , @xmath135 , and @xmath136 .",
    "2 .   for @xmath137 ,",
    "do : * let @xmath138 .",
    "* let @xmath139 .",
    "* let @xmath140 .",
    "3 .   if @xmath141 then let @xmath142 , @xmath143 , and go to step 2 .",
    "+ if @xmath143 then eliminate all variables in @xmath144 from the system of equations @xmath145 to compute a functional equation for @xmath110 .",
    "we illustrate this algorithm by using it to compute the avoidance generating function for @xmath94 .    in step 1 , we initialize    @xmath146    in step 2 , we consider @xmath147 to obtain @xmath148    since @xmath141 , relabel @xmath149 as @xmath150 , and consider @xmath151 to obtain    @xmath152    since @xmath143 , we consider the three equations in @xmath145",
    ". let @xmath153 , @xmath154 , and @xmath155 .",
    "then ,    @xmath156    eliminating @xmath157 and @xmath158 gives the equation @xmath159 .",
    "for very simple trees , we can usually solve the resulting functional equation directly for @xmath110 ; however , this quartic functional equation is a more characteristic result for complex tree patterns .",
    "although this functional equation does not have a simple explicit solution , we can use it to compute arbitrarily many coefficients of the generating function @xmath102 by making the substitution @xmath160 , isolating the coefficients of each power of @xmath161 , and setting them each equal to zero . from the functional equation @xmath159",
    ", we find the sequence @xmath43 , @xmath162 , to be 0 , 1 , 0 , 1 , 0 , 3 , 0 , 11 , 0 , 46 , 0 , 207 , 0 , 979 , 0 , 4797 , 0 , 24138 , 0 , 123998 , 0 , 647615 , 0 , 3428493 , 0 , 18356714,@xmath67 ( oeis http://oeis.org/a006605 [ ] interspersed by zeros ) .",
    "a complete classification of ternary trees @xmath9 with up to 9 leaves is given in the appendix , along with functional equations for @xmath106 and 20 terms of the corresponding avoidance sequences",
    ".    note that given a tree pattern @xmath9 , the algorithm given in this section generates a system of equations each of which has maximum total degree 3 .",
    "auxiliary variables in this system will be eliminated to produce a polynomial functional equation for @xmath106 .",
    "this guarantees that @xmath106 is always algebraic .",
    "khoroshkin and piontkovski @xcite independently showed that generating functions are algebraic in the case of general pattern - avoiding trees ; however , their work is done in a different context .",
    "now that we have discussed two methods for enumerating pattern - avoiding trees , we look for connections between specific sets of those trees .",
    "recall that several of the ternary trees in this paper have had the same pattern avoidance sequence as one or more other trees .",
    "that is , for some distinct @xmath163 and @xmath164 , we found that @xmath165 .",
    "such patterns are said to be _",
    "wilf equivalent_. we will now explain why certain pairs of tree patterns @xmath166 are wilf equivalent . as rowland did , we accomplish this through finding bijections between the members of @xmath167 and those of @xmath168 . in order to present these bijections in a clear and concise way , we first present an alternate notation for ternary trees .",
    "we use this notation to describe bijections that explain all wilf equivalences between 5 and 7-leaf ternary tree patterns .",
    "we then generalize these maps .",
    "in this subsection we represent trees as sets of integer words .",
    "this notation easily extends to @xmath12-ary trees ( i.e. , trees where each vertex has 0 or @xmath12 children ) . at the foundation of this word representation",
    "are @xmath12-leaf parents .",
    "an _ @xmath12-leaf parent _ is an internal vertex , @xmath47 , of an @xmath12-ary tree such that @xmath47 has exactly @xmath12 children , all of which are leaves .",
    "for example , @xmath103 has one 3-leaf parent and @xmath62 has two 3-leaf parents .",
    "word notation represents an @xmath12-ary tree with a set of words , where each word follows the path from the root to an @xmath12-leaf parent .",
    "we construct such a set from the following tree - set algorithm :    1 .",
    "label the children of each internal vertex of an @xmath12-ary tree from left to right , @xmath169 through @xmath12 .",
    "( in ternary trees , then , a vertex s left child is labeled @xmath169 , its center child @xmath170 , and its right child @xmath171 . ) 2 .",
    "denote a path from the root of a tree to an @xmath12-leaf parent by an integer word @xmath172 , where @xmath5 is the length of the path from the root to the @xmath12-leaf parent , such that @xmath173 and @xmath174 for @xmath175 .",
    "the first number @xmath176 in the word represents the child of the root labeled @xmath176 ; @xmath177 then refers to the child of the vertex given by @xmath178 that is labeled with the value of @xmath177 .    as an example , let us look again look at @xmath103 and @xmath62 . in @xmath103 , the only @xmath171-leaf parent is reached by a path beginning at the root , going to the root s left child , then to this vertex s center child ; in word notation , @xmath103 is denoted by the set @xmath179 . for @xmath62 , we reach one of its 3-leaf parents by going to the root s left child , and the other by the root s center child ; this becomes a set @xmath180 .",
    "note that an ordered @xmath12-ary tree @xmath8 is uniquely defined by the set of paths from its root to each @xmath12-leaf parent .",
    "the single vertex tree is represented by the empty set , @xmath181 , and the 3-leaf tree ( @xmath182 ) by the set containing the empty word , @xmath183 .",
    "the set @xmath184 denotes the tree @xmath8 given in figure [ feg1 ] and the set @xmath185 denotes the ternary tree given in figure [ fi : schroder ] . also , note that the tree - set algorithm above is clearly reversible .",
    "in particular :    1 .   create an @xmath12-ary tree from each word by the following procedure : 1 .",
    "create a root .",
    "2 .   give the root @xmath12 children , labeled left to right from @xmath169 to @xmath12 .",
    "3 .   for the word @xmath186 give the @xmath176-st child of the root @xmath12 children . label these children 1 through @xmath12 as before , repeating the process at each level where @xmath177 denotes giving @xmath12 children to the @xmath177-th child of the vertex that was given children by @xmath178 .",
    "2 .   take the intersection of all trees obtained from step 1 to find the final @xmath12-ary tree .",
    "we note that representing trees as words or as sets of words is not a new idea .",
    "for example , stanley @xcite shows how to represent plane trees as certain integer sequences and as parenthesizations of words subject to certain constraints .    now that we have this alternate representation of @xmath12-ary trees , we consider specific properties of the word notation that are relevant to our questions of pattern avoidance .",
    "first note that any set of words where one word is a prefix of another is redundant for the representation of trees .",
    "since each word specifies a path within a tree , if word @xmath187 is a prefix of word @xmath188 , the path specified by @xmath187 is necessarily a part of the path specified by @xmath188 , and including @xmath187 is superfluous .",
    "@xmath189 _ be a set of words on the alphabet @xmath190 , such that no word is a prefix of another word in @xmath189 .",
    "namely , @xmath189 is an arbitrary set of words describing an @xmath12-ary tree . we write _",
    "@xmath191 _ for the set of all such sets @xmath189 .",
    "consider a set of words @xmath192 in @xmath191 corresponding to tree pattern @xmath9 .",
    "note that tree @xmath8 , given by @xmath193 , contains @xmath9 if there exist @xmath194 where each @xmath195 begins with the same ( possibly empty ) prefix as all other @xmath195 s , followed by exactly the ordered sequence of elements of @xmath196 ; this may or may not be then followed by an additional sequence of numbers .    for example , the tree pattern @xmath197 , is contained by @xmath198 notice that , after the prefix @xmath199 , the first and third words of @xmath200 have exactly the sequence of each word of @xmath9 .",
    "however , @xmath201 avoids @xmath9 . even though it contains each sequence of numbers from the words of @xmath9 , @xmath202 s words",
    "do not begin with the same prefix before the sequences begin .    in the following subsections",
    ", @xmath203 will denote a bijection from trees avoiding @xmath204 to trees avoiding @xmath205 .",
    "we find such maps by analyzing the word notation for our pattern - avoiding trees .",
    "we are now ready to present bijections between wilf equivalent tree patterns .",
    "a tree avoids @xmath46 if none of its left vertices have children , and avoids @xmath60 if none of its center vertices have children . in order to map a tree",
    "@xmath8 avoiding @xmath46 to a tree avoiding @xmath60 , we define our bijection @xmath206 to `` switch '' the center subtree of every vertex with the left subtree of the same vertex . in terms of word notation",
    ", a tree avoids @xmath46 if it has no 1 s in its words , and avoids @xmath60 if it has no 2 s in its words .",
    "thus , we define @xmath206 to replace every 1 in @xmath8 s words with 2 , and every 2 with a 1 . for example , @xmath207 .",
    "it is clear that this map is one - to - one , onto , and preserves number of leaves .",
    "a tree avoids @xmath94 if no two consecutive left vertices have children , and avoids @xmath100 if no two consecutive center vertices have children . in word notation , then , a tree avoids @xmath94 if it has no pairs of consecutive 1 s , and it avoids @xmath100 if it has no pairs of consecutive 2 s .",
    "thus , we define @xmath208 . that is , for a tree @xmath8 avoiding @xmath94 , @xmath209 replaces each 1 in @xmath8 s set of words with a 2 , and each 2 with a 1 . because we originally defined @xmath206 on @xmath210 defining @xmath209 in this way is reasonable .",
    "for example , @xmath211 . as stated before",
    ", this map is a bijection .      for a tree @xmath8 to avoid @xmath62",
    ", no vertex @xmath47 can have children descending from both its left and center children ; to avoid @xmath68 , no vertex can have children descending from both its left and right children .",
    "therefore , we define a bijection @xmath212 to switch the right and center subtrees of each vertex . using word notation ,",
    "this is equivalent to defining @xmath212 to replace every 2 with a 3 and every 3 with a 2 .",
    "for example , @xmath213 .",
    "again , it is clear that @xmath214 is one - to - one , onto , and preserves number of leaves .      using word notation",
    ", a tree avoids @xmath103 if none of its words have a 1 followed by a 2 ; it avoids @xmath104 if none of its words have a 1 followed by a 3 .",
    "therefore , we define @xmath215 .",
    "that is , @xmath216 replaces each 2 with a 3 , and each 3 with a 2 .",
    "for example , @xmath217 . as in all previous examples ,",
    "it is clear that @xmath218 is a bijection that preserves number of leaves .      using word notation",
    ", a tree avoids @xmath104 if none of its words have a 1 followed by a 3 ; it avoids @xmath105 if none of its words have a 2 followed by a 1 .",
    "therefore , we define @xmath219 to replace every 1 with a 2 , every 2 with a 3 , and every 3 with a 1 .",
    "@xmath220 clearly maps words that do not contain the sequence 13 to words that do not contain the sequence 21 .",
    "for example , @xmath221 . as in all previous examples",
    ", it is again clear that @xmath220 is a bijection that preserves number of leaves .",
    "this bijection is a bit more complicated than the previous maps .",
    "consider the function @xmath222 defined by the following procedure applied each word @xmath223 :    1 .   if @xmath224 contains no 1 followed by a 2 , do nothing to @xmath224 .",
    "2 .   otherwise ,",
    "locate the first copy of @xmath225 in @xmath226 .",
    "in particular , suppose that @xmath227 has no copy of @xmath225 , @xmath228 , @xmath229 and @xmath230 .",
    "we map @xmath224 to the pair of words @xmath231 .",
    "so @xmath232 contains no occurrence of @xmath233 .",
    "iterate step 2 for each new word created until we have produced @xmath234 , none of which contain a 1 followed by a 2 .",
    "for example , if @xmath235 , our first iteration maps @xmath200 to @xmath236 .",
    "our second iteration gives @xmath237 .",
    "all of these words are @xmath225-free , so we have @xmath238    in order to prove that @xmath239 is a bijection , we first construct an inverse function , @xmath240 .",
    "we will start at the root of tree @xmath8 and work downward to consider all occurrences of @xmath62 ; that is , word pairs of the form @xmath241 , where @xmath242 denotes a common prefix in the two words and @xmath243 are suffixes .",
    "note that for each occurrence of @xmath62 it is possible for there to be multiple words of the form @xmath244 .",
    "our inverse map is given by the following process :    1 .",
    "on each level of @xmath8 beginning at the root , replace each occurrence of @xmath244 that is part of an occurrence of @xmath62 with @xmath245 .",
    "if there are multiple occurrences of @xmath62 on the same level , then applying step 2 to one occurrence of @xmath62 does not affect the words denoting any other occurrence of @xmath62 on that level .",
    "therefore , the order with which we apply this step to each occurrence of @xmath62 at the @xmath163th level is irrelevant .",
    "iterate step 1 at each successive level , beginning with the root .",
    "3 .   discard any words that are a prefix of another in @xmath8 s set of words .",
    "for example ,    * for @xmath246 , at the first level we have an occurrence of @xmath247 given by @xmath248 and from @xmath249 .",
    "so , from step 1 , we replace @xmath250 with + @xmath251 . *",
    "we now have the set @xmath252 ; step 2 requires that we check the next levels in order from lowest to highest and we see that @xmath247 does not occur until the sixth level , and is given by the words @xmath253 .",
    "thus , we replace @xmath254 with @xmath255 to obtain @xmath256 . * with the third iteration of step 1 , we replace @xmath257 with @xmath258 .",
    "the fourth iteration replaces @xmath259 with @xmath260 , and we are left with the set @xmath261 . after applying step 3 , we see that @xmath262 .",
    "we note that @xmath263 as expected from our earlier example .",
    "it is easy to see that @xmath264 does in fact map trees avoiding @xmath62 to trees avoiding @xmath103 .",
    "it is also clear that @xmath265 , so @xmath222 has a clear inverse .",
    "thus @xmath222 is a bijection .",
    "we further claim that @xmath222 preserves the numbers of leaves of @xmath8 .",
    "step 1 in our bijection is the only step that changes the structure of @xmath8 .",
    "consider an arbitrary occurrence of @xmath103 such that the path from the root of @xmath8 to the root of the occurrence is given by the prefix @xmath242 and such that there is no occurrence of @xmath103 in @xmath242",
    ". then step 1 in our bijection will map all words with the prefix @xmath266 to the word @xmath267 and words with the prefix @xmath268 .",
    "as a result of no longer having any words with the prefix @xmath266 , we see that the vertex given by the path @xmath267 has one more leaf in @xmath222 than it did in @xmath8 ( namely its second child is a leaf , but was not a leaf in @xmath8 ) .",
    "however we also see that the vertex given by the path @xmath242 has one less child that is a leaf as a result of having words with @xmath268 as a prefix .",
    "there could not have already been a word in @xmath8 with @xmath268 as a prefix since this would entail having an occurrence of @xmath62 at the vertex given by the path @xmath242 .",
    "having the word @xmath267 does not add to or subtract from the number of leaves we have since it is a prefix of the word it replaces and thus creates no new vertices . with each iteration of step 2 on an occurrence of @xmath103 this same reasoning holds .",
    "so we see that the number of leaves in @xmath222 is the same as the number of leaves in @xmath8 .",
    "we have now accounted for all wilf equivalences between tree patterns with 5 or 7 leaves .      in this section ,",
    "we generalize the previous six bijections to bijections for a larger class of tree patterns .",
    "in particular , we present a bijection between certain tree patterns that have the same avoidance generating function and have only one @xmath12-leaf parent .",
    "these are tree patterns that are represented by a single word in word notation .",
    "consider two @xmath12-ary tree patterns @xmath269 and @xmath270 in word notation . if there exists a bijection @xmath271 that maps @xmath272 to @xmath273",
    ", then there is a bijection @xmath274 from the set of trees avoiding @xmath269 to the set of trees avoiding @xmath270 . in particular",
    ", @xmath274 is the map that replaces each letter @xmath163 in the lists of an @xmath272-avoiding tree with @xmath275 .",
    "for example , if @xmath276 , @xmath277 , the map @xmath157 sends @xmath278 , @xmath279 , and @xmath280 . if we consider a tree @xmath8 that avoids @xmath269 given in list notation , then @xmath274 replaces each integer @xmath163 with @xmath275 .",
    "for example @xmath281 .    in general ,",
    "if @xmath8 is a tree denoted by a set of words that avoids @xmath269 , when we apply the bijection @xmath157 to the letters of @xmath8 , we have @xmath274 to be a set of words in which no word contains any instance of @xmath270 , that is , @xmath274 avoids @xmath270 .",
    "[ superpattern ] the map @xmath274 is one - to - one , onto , and preserves the number of leaves of @xmath8 .",
    "the fact that @xmath274 is one - to - one and onto follows from the fact that @xmath274 is induced by the map @xmath157 , which is just a permutation of @xmath282 .    to show that @xmath274 preserves the number of leaves of @xmath8 ,",
    "it is enough to show that for each internal vertex @xmath283 in a given tree @xmath8 there is a unique internal vertex @xmath284 in @xmath274 that has the same number of children that are leaves as does @xmath283 .",
    "consider the word @xmath285 describing the path to @xmath283 in @xmath8 .",
    "let @xmath161 be the number of distinct letters in @xmath282 that follow @xmath108 as a prefix in a word of @xmath8 .",
    "then @xmath283 has @xmath286 children that are leaves .",
    "now consider @xmath287 .",
    "since @xmath161 distinct letters followed @xmath285 in @xmath8 , there must be @xmath161 distinct letters that follow @xmath288 as a prefix in @xmath274 , meaning the vertex whose path from the root is given by @xmath288 has @xmath286 children that are leaves .",
    "this holds true for every vertex of @xmath8 , proving that the number of leaves remains the same .",
    "these generalized bijections for trees have one more interesting property .",
    "consider the word notation for an @xmath12-ary tree .",
    "this can also be read as the word notation for an @xmath289-ary tree for any @xmath290 .",
    "this says that once we have a bijection @xmath274 for a pair of @xmath12-ary trees , we have necessarily discovered a wilf equivalence for corresponding pairs of @xmath289-ary trees for each @xmath290 .      in this section",
    "we have given bijections explaining all non - trivial wilf equivalences between ternary tree patterns with 5 or 7 leaves .",
    "we note that all but one of the bijections given in section [ s : bijections ] are guaranteed to exist by the results of section 4.8 .",
    "the bijection between @xmath62- and @xmath103-avoiding trees is the lone exception to this method , since it involved `` cutting '' the integer words representing trees , rather than just relabeling them . in the appendix",
    ", we also give computational data for equivalent ternary tree patterns with 9 leaves ; it turns out that all 9-leaf ternary tree patterns fall into just three distinct wilf classes .",
    "many , but not all , of these equivalences can also be explained with the generalized bijections of section 4.8 .",
    "moreover , all bijections except the one for @xmath62 and @xmath103 may clearly be seen as replacement bijections in the sense of rowland s binary tree patterns paper @xcite .",
    "in fact , we can see that this last bijection is not a replacement bijection by considering a well - chosen example .",
    "consider the tree whose word representation is @xmath291 , as shown in figure [ nonreplace ] .",
    "this tree contains two copies of the tree pattern @xmath103 , or @xmath292 .",
    "one of those copies is at the root , and the other is near the bottom of the tree , with one copy of @xmath182 appended to its deepest left leaf . on the other hand , the image of this tree is represented by @xmath237 ( also shown in figure [ nonreplace ] ) .",
    "this tree contains two copies of the tree @xmath62 , or @xmath293 , one at the root , and one deeper in the tree .",
    "however , this lower copy has a copy of @xmath46 and a copy of @xmath182 appended to its deepest leaves . in a true replacement bijection",
    ", the copies of @xmath103 should be transformed to copies of @xmath62 , _ and _ the subtrees descending from leaves of a copy of @xmath103 should be moved in entirety to be subtrees descending from leaves of a copy of @xmath62 .",
    "this is clearly not the case in this bijection .",
    "it remains an open question to determine whether there exists a replacement bijection between ternary trees avoiding @xmath62 and ternary trees avoiding @xmath103 .     and",
    "@xmath294    many of our bijections overlap with rowland s idea of replacement bijections ; however , we propose that considering trees as sets of integer words provides more insight into the process of developing wilf equivalent tree patterns .",
    "throughout this paper , we have investigated pattern avoidance in ternary trees , extending previous work for binary trees .",
    "we began by finding recurrence relations and generating functions by hand for several simple ternary tree patterns . to make the computation of avoidance sequences easier",
    ", however , we developed an algorithm , based on rowland s algorithm for binary trees , to find the generating function for trees avoiding any given tree pattern .",
    "next we classified the tree patterns , grouping together those with the same avoidance sequence .",
    "from here , we were able to find bijections between the sets of trees avoiding specific pairs of two equivalent tree patterns , @xmath204 and @xmath205 ; for these pairs of trees , we transformed any tree avoiding @xmath204 into one that avoids @xmath205 . after stating several bijections between specific pairs of tree patterns ,",
    "we then generalized this to bijections between trees avoiding patterns in the same equivalence class of trees under permutations of @xmath190 .",
    "the authors thank eric rowland for a number of presentation suggestions and for support with generating the many tree graphics required for this paper .",
    "this appendix lists ternary trees with at most nine leaves , classifying them by their avoidance generating function and sequence . for each class , we give a functional equation satisfied by @xmath295 , and we list the first 20 terms ( including zeros ) of the corresponding avoidance sequence . if @xmath106 has a simple explicit form it is included , and if the avoidance sequence for a class is listed in the online encyclopedia of integer sequences ( without interspersed zeros ) @xcite , we include the appropriate reference",
    ". for brevity , left ",
    "right reflections are omitted .",
    "p. flajolet , p. sipala , and j. m. steyaert , analytic variations on the common subexpression problem , _ automata , languages , and programming : proc . of icalp 1990",
    "_ , lecture notes in computer science , vol .  443 , springer , 1990 , pp .  220234 ."
  ],
  "abstract_text": [
    "<S> this paper considers the enumeration of ternary trees ( i.e. , rooted ordered trees in which each vertex has 0 or 3 children ) avoiding a contiguous ternary tree pattern . </S>",
    "<S> we begin by finding recurrence relations for several simple tree patterns ; then , for more complex trees , we compute generating functions by extending a known algorithm for pattern - avoiding binary trees . </S>",
    "<S> next , we present an alternate one - dimensional notation for trees which we use to find bijections that explain why certain pairs of tree patterns yield the same avoidance generating function . finally , we compare our bijections to known `` replacement rules '' for binary trees and generalize these bijections to a larger class of trees .    </S>",
    "<S> nathan gabriel + department of mathematics + rice university + houston , tx 77251 , usa +   + katherine peske + department of mathematics and computer science + concordia college + moorhead , mn 56562 , usa +   + lara pudwell + department of mathematics and computer science + valparaiso university + valparaiso , in 46383 , usa + lara.pudwell@valpo.edu +   + samuel tay + department of mathematics + kenyon college + gambier , oh 43022 , usa </S>"
  ]
}
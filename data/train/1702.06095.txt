{
  "article_text": [
    "_ tree - width _ is one of the graph width parameters that plays an important role in graph algorithms .",
    "various problems which are np - hard on general graphs , have been shown to be solvable in polynomial time on graphs of bounded tree - width  @xcite .",
    "a celebrated algorithmic meta - theorem by courcelle  @xcite states that every graph property expressible in monadic second - order logic which allows quantifications over edge and vertex sets ( mso@xmath0 ) can be decided in linear time on graphs of bounded tree - width .",
    "minimum dominating set , @xmath8-coloring , and hamiltonian cycle problems are such graph problems .",
    "courcelle and olariu  @xcite defined the notion of _ clique - width _ of graphs , whose modeling power is strictly stronger than tree - width .",
    "the motivation of clique - width came from the observation that many algorithmic problems are tractable on classes of graphs that can be recursively decomposable along vertex partitions @xmath9 where the number of neighbourhood types between @xmath10 and @xmath11 are small .",
    "courcelle , makowsky , and rotics  @xcite extended the meta - theorem on graphs of bounded tree - width  @xcite to graphs of bounded clique - width , at a cost of a smaller set of problems , namely , the class of problems expressible in mso@xmath12 , which allows quantifications on vertex sets only .",
    "some of the known examples of graph problems that are mso@xmath0-definable , but not mso@xmath12-definable are max - cut , edge dominating set , and hamiltonian cycle problems .",
    "a natural question is whether such problems allow an algorithm with running time @xmath13 for some function @xmath4 , when a clique - width @xmath1-expression of an @xmath2-vertex input graph is given .",
    "this question has been carefully answered by fomin et al .",
    "in particular , they showed that for max - cut and edge dominating set , there is no @xmath5-time algorithm unless the exponential time hypothesis ( eth ) fails , and proposed for both problems algorithms with running time @xmath6 .",
    "they argued that hamiltonian cycle also can not be solved in time @xmath5 , unless eth fails , but left open the question of finding an algorithm running in time @xmath6 .",
    "until now , the best algorithm is the one by espelage , gurski , and wanke  @xcite which runs in time @xmath7 .      in this paper",
    ", we prove that hamiltonian cycle can be solved in time @xmath6 , thereby resolving the open problem in @xcite .",
    "a _ hamiltonian cycle _ in a graph is a cycle containing all vertices of the graph .",
    "we formally define clique - width in section  [ sec : prelim ] .",
    "0.2 cm 0.2 cm    [ thm : main ] given an @xmath2-vertex graph @xmath14 and its clique - width @xmath1-expression , one can solve hamiltonian cycle in time @xmath6 .",
    "a @xmath1-labeled graph is a graph whose vertices are labeled by integers in @xmath15 .",
    "clique - width @xmath1-expressions are expressions which allow to recursively construct a graph with the following graph operations : ( 1 ) creating a graph with a single vertex labeled @xmath16 for some @xmath17 ,  ( 2 ) taking the disjoint union of two @xmath1-labeled graphs ,  ( 3 ) adding all edges between vertices labeled @xmath16 and vertices labeled @xmath18 , for @xmath19 ,  ( 4 ) renaming all vertices labeled @xmath16 into @xmath18 .",
    "the clique - width of a graph is the minimum @xmath1 such that it can be constructed using labels in @xmath15 .",
    "one observes that if a graph contains a hamiltonian cycle @xmath20 , then each @xmath1-labeled graph introduced in the clique - width @xmath1-expression admits a partition of its vertex set into pairwise vertex - disjoint paths , _ path - partitions _ , which is a restriction of the hamiltonian cycle @xmath20 .",
    "a natural approach is to enumerate all such partitions into paths .",
    "furthermore , since the adjacency relations between this @xmath1-labeled graph and the remaining part only depend on the labels , it is sufficient to store for each pair of labels @xmath21 , the number of paths whose end vertices are labeled by @xmath16 and @xmath18 . as the number of paths between two label classes is bounded by @xmath2 , there are at most @xmath7 possible such information .",
    "this is the basic idea of the xp algorithm developed by espelage , gurski , and wanke  @xcite .",
    "the essential idea is to introduce an equivalence relation between two path - partitions . given a path - partition @xmath22 that is a restriction of a hamiltonian cycle @xmath20 , we consider the maximal paths in @xmath23 as another path - partition @xmath24 .",
    "as depicted in figure  [ fig : auxiliary2 ] , we can construct a multigraph associated with @xmath22 and @xmath24 on the vertex set @xmath25 , by adding a red edge @xmath26 ( an undashed edge ) if there is a path in @xmath22 with end vertices labeled by @xmath16 and @xmath18 , and by adding a blue edge @xmath26 ( a dashed edge ) if there is a path in @xmath24 with end vertices labeled by @xmath16 and @xmath18 .",
    "a crucial observation is that this multigraph admits an eulerian trail where red edges and blue edges are alternatively used .",
    "this is indeed a characterisation of the fact that two such path - partitions can be joined into a hamiltonian cycle . to determine the existence of such an eulerian trail , it is sufficient to know the degree of each vertex and the connected components of the corresponding multigraphs of the two path - partitions .",
    "this motivates an equivalence relation between path - partitions . as a byproduct",
    ", we can keep in each equivalence class a representative and since the number of equivalence classes is bounded by @xmath27 , we can turn the naive algorithm into an @xmath6-time algorithm .",
    "a more detailed explanation of our algorithm is provided in section  [ sec : overview ] , after the required definitions .    -labeled graph . the complement part can be considered as another set of paths . ]",
    "the paper is organized as follows .",
    "section  [ sec : prelim ] contains the necessary preliminaries and required notions .",
    "section  [ sec : overview ] is devoted to the overview of the algorithm and the proof of the existence of eulerian trails in two - edge colored multigraphs .",
    "we then introduce in section  [ sec : equivrel ] the equivalence relation between multigraphs on the vertex set @xmath25 , and introduce operations related to the update of path - partitions in clique - width @xmath1-expressions , and prove that they preserve the equivalence relation .",
    "we define the notion of representatives in section [ subsec : equiv ] and give the algorithm in section [ subsec : thmmain ] .",
    "we conclude with more applications of our notion of representatives in section [ sec : conclusion ] .",
    "the size of a set @xmath28 is denoted by @xmath29 , and we write @xmath30 ^ 2 $ ] to denote the set of all subsets of @xmath28 of size @xmath31 .",
    "we denote by @xmath32 the set of non - negative integers .",
    "we essentially follow @xcite for our graph terminology , but we deal only with finite graphs .",
    "the vertex set of a graph @xmath14 is denoted by @xmath33 and its edge set by @xmath34 ^ 2 $ ] . as usual , we write @xmath35 to denote an edge @xmath36 .",
    "let @xmath14 be a graph . for @xmath37",
    ", we denote by @xmath38 $ ] the subgraph of @xmath14 induced by @xmath39 , and for @xmath40 , we write @xmath41 for the subgraph @xmath42 .",
    "the _ degree _ of a vertex @xmath43 , denoted by @xmath44 , is the number of edges incident with @xmath43 . for two sets @xmath45",
    ", @xmath10 is _ complete _ to @xmath11 if for every @xmath46 and @xmath47 , @xmath48 .",
    "cut - edge _ in a connected graph is an edge @xmath49 such that @xmath50 is disconnected .",
    "we recall that a cycle in a graph @xmath14 is a _",
    "hamiltonian cycle _ if it covers all vertices of @xmath14 .",
    "a graph is _ non - trivial _ if it contains an edge , otherwise it is said _",
    "trivial_. a _ walk _ of a graph is an alternating sequence of vertices and edges , starting and ending at some vertices , where for every consecutive pair of a vertex @xmath43 and an edge @xmath49 , @xmath43 is incident with @xmath49 .",
    "a _ trail _ of a graph is a walk where each edge is used at most once .",
    "a trail is _ closed _ if its first and last vertices are the same .",
    "a _ multigraph _ is essentially a graph , but we allow two edges to be incident with the same set of vertices .",
    "formally , a _ multigraph _",
    "@xmath14 is a pair @xmath51 of disjoint sets , also called sets of vertices and edges , respectively , together with a map @xmath52 ^ 2 $ ] , which maps every edge to one or two vertices , still called its end vertices .",
    "note that we admit loops in multigraphs , while we do not in our definition of graphs . if there is @xmath53 such that @xmath54 ( or @xmath55 ) , we use the term _ multiedge _ to refer to @xmath36 ( or @xmath56 ) .",
    "the degree of a vertex @xmath43 in a multigraph @xmath14 , is defined analogously as in graphs , except that each loop is counted twice , and similarly for other notions .",
    "if there are exactly @xmath1 edges @xmath49 such that @xmath54 ( or @xmath55 ) , then we denote these distinct edges by @xmath57 ( or @xmath58 ) ; if @xmath59 , then for the sake of clarity , we write @xmath36 ( or @xmath56 ) instead of @xmath60 ( or @xmath61 ) .",
    "an _ eulerian trail _ in a multigraph is a closed trail containing all edges .",
    "a graph is _",
    "@xmath1-labeled _ if there is a labeling function @xmath62 , and we call @xmath63 the _ label _ of @xmath64 . for a @xmath1-labeled graph @xmath14 , we simply call the set of all vertices with label @xmath16 as the _ label class @xmath16 _ of @xmath14",
    ".    = [ sibling distance=24 mm ] = [ sibling distance=12 mm ] child node @xmath65 child node @xmath66 child node @xmath67 child node @xmath65 child node @xmath68 child node @xmath65 child node @xmath69 child node @xmath70 child node @xmath71 child node @xmath65 child node @xmath72 child node @xmath73 child node @xmath74 ;    the _ clique - width _ of a graph @xmath14 is the minimum number of labels needed to construct @xmath14 using the following four operations :    1 .",
    "creation of a new vertex @xmath64 with label @xmath16 ( denoted by @xmath75 ) .",
    "disjoint union of two labeled graphs @xmath14 and @xmath76 ( denoted by @xmath77 ) .",
    "3 .   joining by an edge each vertex with label @xmath16 to each vertex with label @xmath18 ( @xmath78 , denoted by @xmath79 ) .",
    "4 .   renaming label @xmath16 to @xmath18 ( denoted by @xmath80 ) .",
    "every graph can be defined by an algebraic expression using these four operations .",
    "such an expression is called a _ clique - width @xmath1-expression _ or shortly a _ @xmath1-expression _ if it uses at most @xmath1 distinct labels .",
    "for instance , the cycle @xmath81 of length @xmath82 can be constructed using the following @xmath83-expression : @xmath84 .",
    "we can represent this expression as a tree - structure , depicted in figure  [ fig : c5expression ] .",
    "such trees are known as _ syntactic trees _ associated with @xmath1-expressions .",
    "a clique - width @xmath1-expression is called _ irredundant _ if whenever @xmath79 is applied , the constructed graph contains no prior edges between vertices with label @xmath16 and vertices with label @xmath18 .",
    "courcelle and olariu  @xcite proved that given a clique - width @xmath1-expression , it can be transformed into an irredundant @xmath1-expression in linear time .",
    "therefore , we can assume that a given clique - width expression is irredundant .",
    "for a graph @xmath14 , a set @xmath85 of pairwise vertex - disjoint paths in @xmath14 is called a _ path - partition _ of @xmath14 if @xmath86 .",
    "a path - partition @xmath22 is _",
    "@xmath1-labeled _ if each end vertex of a path in @xmath22 is labeled by some integer in @xmath87 . for a path - partition @xmath22 of a @xmath1-labeled graph @xmath14 , the labeling of @xmath22 _ induced by the labeling of @xmath14 _",
    "consists in assigning to each end vertex of a path in @xmath22 its label in @xmath14 .",
    "lastly , for a @xmath1-labeled path - partition @xmath22 of a graph , we define the auxiliary multigraph @xmath88 with vertex set @xmath89 and edge set @xmath90 where @xmath91 is the number of paths in @xmath22 with end vertices labeled @xmath16 and @xmath18 respectively .",
    "in an irredundant clique - width @xmath1-expression @xmath92 defining a given graph @xmath14 , @xmath14 is recursively constructed using @xmath1-labeled graphs .",
    "such @xmath1-labeled graphs @xmath76 arising in the @xmath1-expression defining @xmath14 are subgraphs of @xmath14 and satisfy the following properties :    1 .   for two vertices @xmath93 with same labels in @xmath76 , @xmath94 , 2 .   for some label class @xmath16 ,",
    "say @xmath95 , and label class @xmath18 , say @xmath96 , in @xmath76 with @xmath78 , if there exist @xmath97 , @xmath98 with @xmath99 , then @xmath95 is complete to @xmath96 in @xmath14 , and there are no edges between @xmath95 and @xmath96 in @xmath76 .    in ( 2 ) , the former statement is because when we add @xmath100 , all vertices in each set of @xmath95 or @xmath96 have same labels , and the latter statement is because of the irredundancy of @xmath92 . given such a @xmath1-labeled subgraph @xmath76 of @xmath14 , for any hamiltonian cycle @xmath20 , the restriction of @xmath20 to @xmath76 induces a @xmath1-labeled path - partition of @xmath76 . because of the two properties ( 1 ) and ( 2 ) , it is sufficient to store the end vertices of each path",
    ". this is naturally represented as a multigraph on @xmath1 vertices , motivating the definition of the auxiliary multigraphs associated with @xmath1-labeled path - partitions .",
    "our algorithm will be based on the following characterization of equivalent path - partitions .",
    "we formally prove the following relations between two path - partitions in section 5 .",
    "let @xmath101 and @xmath102 be @xmath1-labeled path - partitions of @xmath76 whose labelings are induced by the labeling of @xmath76 .",
    "if    * @xmath103 and * @xmath104 is a component of @xmath105 is a component of @xmath106 ,    then the following are equivalent .    1 .",
    "@xmath14 has a hamiltonian cycle @xmath107 containing each path in @xmath101 as a subpath and such that every edge in @xmath108 is contained in @xmath109 .",
    "2 .   @xmath14 has a hamiltonian cycle @xmath110 containing each path in @xmath102 as a subpath and such that every edge in @xmath111 is contained in @xmath109 .",
    "suppose there are two such path - partitions @xmath101 and @xmath102 , and @xmath14 has a hamiltonian cycle @xmath107 containing each path in @xmath101 as a subpath and such that every edge in @xmath108 is contained in @xmath109 .",
    "let @xmath24 be the subpaths of @xmath107 connecting two consecutive paths in @xmath101 .",
    "see figure  [ fig : auxiliary2 ] for an illustration , where dashed edges denote the paths of @xmath24 .",
    "note that if a path in @xmath24 is an edge , then it is an edge between two label classes , and since @xmath92 is an irredundant @xmath1-expression , these two label classes are completely adjacent to each other .",
    "one can observe that there is a one - to - one correspondence between the end - vertices of @xmath101 and those of @xmath24 .",
    "let us label each end vertex of a path in @xmath24 as the label of @xmath76 , we consider the auxiliary multigraph @xmath112 and the auxiliary multigraph @xmath113 by considering @xmath24 as a path - partition of the underlying graph on @xmath114 .",
    "we obtain a multigraph @xmath115 from the disjoint union of @xmath112 and @xmath113 by identifying each @xmath116 .",
    "following the hamiltonian cycle @xmath20 , one easily checks that there is an eulerian trail which alternates between edges in @xmath112 and edges in @xmath113 .",
    "we will prove that if we replace @xmath112 with @xmath117 in @xmath115 , then the new graph also admits an eulerian trail , because of the given conditions in proposition  [ prop : equivalencepp ] . to see this",
    ", we observe the following , which is a strengthen of euler s theorem on eulerian trails .",
    "it is well known that a connected multigraph contains an eulerian trail if and only if every vertex has even degree . moreover ,",
    "when edges are colored by two colors , say red and blue , and each vertex is incident with the same number of edges for both colors , then we can find an eulerian trail where the two colors appear alternatively .",
    "we call such an eulerian trail a _ red - blue alternating eulerian trail_. for a multigraph @xmath14 colored by red and blue and @xmath118 , let @xmath119 denote the number of red edges incident with @xmath64 , and let @xmath120 denote the number of blue edges incident with @xmath64 .    [",
    "lem : alternatingcycle ] let @xmath14 be a connected multigraph whose edges are colored by red and blue .",
    "then the following are equivalent .",
    "then @xmath14 has a red - blue alternating eulerian trail if and only if for every vertex @xmath64 , @xmath121 .",
    "it is clear that if @xmath14 has a red - blue alternating eulerian trail , then for every vertex @xmath64 , @xmath121 .",
    "we prove the other direction .",
    "let @xmath122 be the number of edges in @xmath14 .",
    "we choose a red - blue alternating trail @xmath123 with maximum @xmath16 such that @xmath124 is colored red , and there is exactly one non - trivial component @xmath20 of @xmath125 , and @xmath20 contains @xmath126 and @xmath127 , and in @xmath128 ,    * for each @xmath129 , @xmath130 , * if @xmath131 , and @xmath132 is colored red ( resp .",
    "blue ) , then @xmath133 ( resp .",
    "@xmath134 ) and @xmath135 . * if @xmath136 , then @xmath137 or @xmath138",
    ".    we claim @xmath139 .",
    "suppose @xmath140 .",
    "note that there are at least two edges in @xmath141 .",
    "we observe that there are at most one cut - edge in @xmath142 incident with @xmath127 .",
    "if there are two cut - edges incident with @xmath127 , then one cut - edge @xmath4 satisfies that @xmath143 has a connected component @xmath20 that does not contain @xmath126 and @xmath127 .",
    "however , all vertices @xmath64 in @xmath20 satisfy @xmath130 by the assumption , and in particular , they have even degrees , and this is not possible . therefore , there are at most one cut - edge in @xmath142 incident with @xmath127 .",
    "suppose @xmath131 and @xmath132 is colored red .",
    "the proof is symmetric when @xmath132 is colored blue .",
    "if there is a blue edge @xmath49 incident with @xmath127 in @xmath142 , then we can choose @xmath49 as a next edge to extend the red - blue alternating trail .",
    "thus , we may assume there is only one edge @xmath49 incident with @xmath127 and it is a cut - edge of @xmath142 . by the condition , @xmath127 is not adjacent to any red edge in @xmath142 , and thus it has degree @xmath144 in @xmath142 .",
    "therefore , @xmath145 has only one non - trivial component , and it implies that we can choose @xmath49 as a next edge to extend the red - blue alternating trail .",
    "suppose @xmath136 and @xmath138 . in this case",
    ", @xmath132 should be a red edge .",
    "since there are at least two blue edges incident with @xmath127 in @xmath142 , we can choose a blue edge @xmath49 that is not a cut - edge .",
    "suppose @xmath136 and @xmath137 . in this case",
    ", @xmath132 should be a blue edge .",
    "note that @xmath146 by the condition that there is at least one non - trivial connected component containing @xmath126 and @xmath127 , and thus there is at least one red edge incident with @xmath127 in @xmath142 .",
    "we claim that there is at least one red edge among them that is not a cut - edge .",
    "suppose for contradiction that there is only one red edge incident with @xmath127 in @xmath142 and it is a cut - edge in @xmath142 . by the assumption , there is exactly one blue edge incident with @xmath127 in @xmath142 .",
    "since one of two edges incident with @xmath127 is not a cut - edge , the other one is also not a cut - edge .",
    "it contradicts to the assumption .",
    "thus , we can choose a red edge @xmath49 that is not a cut - edge .    in each case , we can extend the red - blue alternating trail using @xmath49 , which contradicts to the maximality .",
    "therefore @xmath139 , and @xmath127 should be connected to @xmath126 by a blue edge @xmath147 .",
    "thus , @xmath148 is a required red - blue alternating eulerian trail .",
    "indeed , when we replace @xmath112 with @xmath117 in @xmath115 , the set of components does not change ( thus consists of one non - trivial component ) , and each vertex is incident with same number of red and blue edges , and by lemma  [ lem : alternatingcycle ] , the resulting graph has an eulerian trail .",
    "we will argue that one can construct a hamiltonian cycle of @xmath14 from paths of @xmath102 using the properties ( 1 ) and ( 2 ) at the beginning of this section .",
    "motivated by proposition  [ prop : equivalencepp ] , we define in section  [ sec : equivrel ] an equivalence relation between two sets of multigraphs on the same vertex set @xmath25 .",
    "we further define operations on those multigraphs , corresponding to procedures of updating path - partitions , and prove that the equivalence between two sets is preserved under such operations .",
    "these results will form the skeleton of the main algorithm .",
    "for two multigraphs @xmath14 and @xmath76 on the same vertex set @xmath89 and with disjoint edge sets , we denote by @xmath149 the multigraph with vertex set @xmath89 and edge set @xmath150 .    for families",
    "@xmath151 of multigraphs on the vertex set @xmath25 and two distinct integers @xmath152 , we define the following operations :    1 .   @xmath153 is the set of all multigraphs @xmath154 where @xmath154 can be obtained from a multigraph @xmath115 in @xmath155 as follows ( or @xmath156 ) to be equal to @xmath116 ( or @xmath157 ) . ] : choose two distinct edges @xmath158 and @xmath159 , and let @xmath154 be the multigraph on vertex set @xmath89 and edge set @xmath160 with @xmath161 mapped to @xmath162 .",
    "@xmath163 is the set constructed from @xmath155 by doing the operation @xmath164 @xmath165 times .",
    "@xmath166 is the set of all multigraphs @xmath115 where @xmath115 can be obtained from a multigraph in @xmath155 by replacing every edge by an end vertex @xmath116 with an edge with an end vertex @xmath157 .",
    "4 .   @xmath167 .",
    "let @xmath168 and @xmath169 be two families of multigraphs on the vertex set @xmath25 .",
    "we write @xmath170 if for every multigraph @xmath76 on the vertex set @xmath25 ,    * whenever there exists @xmath171 such that @xmath172 and @xmath173 has at most one non - trivial component , there exists @xmath174 such that @xmath175 and @xmath176 has at most one non - trivial component .",
    "we say that @xmath168 is _ equivalent _ to @xmath169 , written @xmath177 , if @xmath170 and @xmath178 .",
    "we prove that the equivalence between two families is preserved by the operation @xmath164 .",
    "[ prop : preservingequiv1 ] let @xmath168 and @xmath169 be two families of multigraphs on the vertex set @xmath25 .",
    "if @xmath177 , then @xmath179 .",
    "suppose @xmath177 .",
    "it is sufficient to prove that @xmath180 . for this , suppose there exist a graph @xmath76 on @xmath25 and @xmath181 such that @xmath172 and @xmath173 has at most one non - trivial component . since @xmath181 , there exist @xmath182 , edges @xmath158 , @xmath159 in @xmath183 such that @xmath184 with @xmath185 mapped to @xmath162 in @xmath186 .",
    "let @xmath187 with @xmath188 mapped to @xmath189 in @xmath76 .",
    "we claim that    * @xmath190 and * @xmath191 has at most one non - trivial component .    by the construction of @xmath186 from @xmath183 , for every @xmath192 , @xmath193 has the same degree in @xmath183 and @xmath186 , and the degrees of @xmath116 and @xmath157 in @xmath186 are one less than the degrees in @xmath183 , respectively . since the degrees of @xmath116 and @xmath157 in @xmath194 are one more than the degrees in @xmath76 , we have @xmath195 .",
    "assume now that @xmath191 has at least two non - trivial components .",
    "first observe that the four vertices @xmath196 are in the same non - trivial component @xmath20 of @xmath191 , and @xmath197 are in a same non - trivial component of @xmath198 .",
    "if @xmath199 is another non - trivial component of @xmath200 , then it does not intersect @xmath201 , , @xmath199 is non - trivial component in @xmath198 that does not intersect the one containing @xmath197 , yielding a contradiction .    since @xmath177",
    ", there exists @xmath202 such that @xmath203 + @xmath204 and @xmath205 has at most one non - trivial component . by lemma  [ lem : alternatingcycle ]",
    ", @xmath205 contains an eulerian trail where edges in @xmath206 and edges in @xmath194 are alternatively used .",
    "let @xmath207 and @xmath208 be the edges where @xmath209 appear in the eulerian trail in this order ( recall that @xmath210 is mapped to @xmath189 ) .",
    "clearly , if we remove the edges @xmath209 and add an edge @xmath4 mapped to @xmath211 in @xmath212 , then the obtained multigraph @xmath213 still admits an alternating eulerian trail .",
    "let @xmath214 with @xmath215 mapped to @xmath216 in @xmath217 .",
    "one easily checks that @xmath218 , and since @xmath213 has an eulerian trail where edges in @xmath217 and edge in @xmath76 are alternatively used , by lemma  [ lem : alternatingcycle ] , @xmath219 and @xmath176 has at most one non - trivial component . because @xmath220 , we can thus conclude that @xmath180 .",
    "we prove a similar property for the other operations .",
    "[ prop : preservingequiv2 ] let @xmath168 and @xmath169 be families of multigraphs on the vertex set @xmath25 and let @xmath152 be two distinct integers . if @xmath177 , then @xmath221 .",
    "suppose @xmath177 .",
    "it is sufficient to prove that @xmath222 .",
    "suppose there exist a graph @xmath76 on @xmath25 and @xmath223 such that @xmath172 and @xmath173 has at most one non - trivial component . by lemma  [ lem : alternatingcycle ]",
    ", there is an eulerian trail @xmath20 where edges of @xmath186 and edges of @xmath76 are alternatively used .",
    "since @xmath223 , there exists @xmath182 such that @xmath186 is obtained from @xmath183 by replacing every edge with an end vertex @xmath116 with an edge with an end vertex @xmath157 . clearly , we can construct @xmath183 from @xmath186 by reversing each of these operations .",
    "we construct the multigraph @xmath194 from @xmath76 as follows :    * following the construction of @xmath183 from @xmath186 , whenever an edge @xmath224 is replaced with @xmath225 for some @xmath193 , we replace the edge @xmath226 with @xmath227 in @xmath76 where @xmath224 and @xmath228 are consecutive edges in @xmath20 .",
    "this operation preserves the existence of an alternating eulerian trail .",
    "it implies that + @xmath190 and @xmath191 also has at most one non - trivial component .",
    "since @xmath177 , there exists @xmath202 such that @xmath203 + @xmath204 and @xmath205 has at most one non - trivial component . in other words , @xmath205 has an eulerian trial where edges in @xmath206 and edges in @xmath194 are alternatively used .",
    "similar to the previous procedure , we can obtain a graph @xmath217 form @xmath206 by following the construction of @xmath76 from @xmath194 , such that @xmath229 and @xmath176 has an eulerian trail where edges in @xmath217 and edges in @xmath76 are alternatively used . by lemma  [ lem : alternatingcycle ]",
    "@xmath219 and @xmath176 has at most one non - trivial component , and we conclude that @xmath222 .    [",
    "prop : preservingequiv3 ] let @xmath230 be families of multigraphs on the vertex set @xmath25 .",
    "if @xmath177 , then @xmath231 .",
    "suppose @xmath177 .",
    "it is sufficient to prove that @xmath232 .",
    "suppose there exist a graph @xmath76 on @xmath25 and @xmath171 and @xmath233 such that + @xmath234 and @xmath235 has at most one non - trivial component .",
    "thus , @xmath235 has an eulerian trail @xmath20 where edges in @xmath236 and edges in @xmath76 are alternatively used .",
    "clearly , @xmath237 .",
    "now , we obtain a graph @xmath194 from @xmath238 by successively repeating the following : if @xmath239 is a maximal path in @xmath20 which alternates between edges of @xmath240 and those of @xmath76 , remove all the edges of @xmath239 and add an edge @xmath241 between the two endpoints of the @xmath239 . notice that by replacing in @xmath20 each maximal path @xmath239 alternating between edges of @xmath240 and of @xmath76 , by the edge @xmath241 , we obtain an eulerian trail alternating between edges of @xmath186 and edges of @xmath194 .",
    "since @xmath177 , there exists @xmath174 such that @xmath242 has an eulerian trail @xmath107 where edges in @xmath217 and edges in @xmath194 are alternatively used .",
    "we can replace each edge @xmath241 of @xmath194 with @xmath239 in @xmath107 , obtaining an eulerian trail of @xmath243 which alternates between edges of @xmath244 and of @xmath76 .",
    "therefore , @xmath245 and @xmath246 has at most one non - trivial component .",
    "this concludes the proof of the statement .",
    "we prove the main result of this paper .    given a graph @xmath14 and its @xmath1-expression , one can solve hamiltonian cycle in time @xmath6 .",
    "we now define formally our notion of representatives based only on the degree sequence and connected components of auxiliary multigraphs associated with @xmath1-labeled path - partitions .",
    "let @xmath14 and @xmath76 be multigraphs on vertex set @xmath247 .",
    "we write @xmath248 whenever @xmath249 + @xmath250 and @xmath104 is a component of @xmath251 is equal to @xmath252 is a component of @xmath253 .",
    "one easily checks that @xmath254 is an equivalence relation on any set @xmath155 of multigraphs on vertex set @xmath89 .    for a family @xmath155 of multigraphs on vertex - set @xmath89 , let @xmath255 be the operation which takes in each equivalence class of @xmath256 a representative .",
    "the goal of this section is to prove the following .",
    "[ prop : equivalencepp ] let @xmath14 be a graph with its irredundant clique - width @xmath1-expression @xmath92 , and let @xmath165 be a node in the syntactic tree .",
    "let @xmath257 be the @xmath1-labeled graph constructed at @xmath165 , and let @xmath101 and @xmath102 be @xmath1-labeled path - partitions of @xmath257 whose labelings are induced by the labeling of @xmath257 . if @xmath258 , then the following are equivalent .    1 .",
    "@xmath14 has a hamiltonian cycle @xmath107 containing each path in @xmath101 as a subpath and such that every edge in @xmath108 is contained in @xmath259 .",
    "@xmath14 has a hamiltonian cycle @xmath110 containing each path in @xmath102 as a subpath and such that every edge in @xmath111 is contained in @xmath259 .    by symmetry ,",
    "it is sufficient to prove that ( 1 ) implies ( 2 ) .",
    "suppose @xmath14 has a hamiltonian cycle @xmath107 containing each path in @xmath101 as a subpath and such that every edge in @xmath108 is contained in @xmath259 .",
    "let @xmath24 be the set of all maximal paths in @xmath260 , and let @xmath261 $ ] .",
    "we consider @xmath24 as the path - partition of @xmath76 where the end vertices of paths in @xmath24 are labeled by their labels in @xmath257 .    since @xmath107 is a hamiltonian cycle , @xmath262 has an eulerian trail where edges in @xmath112 and edges in @xmath113 are alternatively used .",
    "thus @xmath262 has at most one non - trivial connected component , and @xmath263 since @xmath258 by the assumption , @xmath264 has at most one non - trivial connected component and @xmath265 therefore , by lemma  [ lem : alternatingcycle ] , @xmath264 admits an eulerian trail where the edges in @xmath117 and the edges in @xmath113 are alternatively used .",
    "now , we show that @xmath14 has a hamiltonian cycle @xmath110 containing each path in @xmath102 as a subpath and such that every edge in @xmath111 is contained in @xmath259 .",
    "let @xmath266 be the sequence of the edges in an eulerian trail of @xmath264 where edges in @xmath117 and edges in @xmath113 are alternatively used such that @xmath267 . for convenience ,",
    "let @xmath268 and @xmath269 .",
    "for each @xmath270 , let @xmath271 be the vertex incident with @xmath132 and @xmath272 , and let @xmath273 be the vertex incident with @xmath132 and @xmath274 .",
    "for each integer @xmath275 , let @xmath276 be the path in @xmath102 corresponding to @xmath277 , and for each integer @xmath275 , let @xmath278 be the path in @xmath24 corresponding to @xmath279 .",
    "we construct a hamiltonian cycle of @xmath14 from @xmath280 as follows .",
    "let @xmath275 .    1 .",
    "if @xmath278 consists of an edge , then we add an edge between the end vertex of @xmath276 corresponding to @xmath281 and the end vertex of @xmath282 corresponding to @xmath283 .",
    "2 .   suppose @xmath278 is a path of length at least @xmath31 .",
    "let @xmath284 be the end vertices of @xmath278 corresponding to @xmath285 and @xmath286 , respectively .",
    "let @xmath287 be the neighbors of @xmath284 in @xmath278 , respectively .",
    "then , we add @xmath288 to the subgraph , and add an edge between @xmath289 and the end vertex of @xmath276 corresponding to @xmath281 , and add an edge between @xmath290 and the end vertex of @xmath282 corresponding to @xmath283 .",
    "we verify that this is always possible .",
    "suppose @xmath278 consists of an edge . by the assumption of @xmath107 , the edge in @xmath278",
    "is contained in @xmath259 ; in other words , this edge is added in some ascendant node of @xmath165 .",
    "this also implies that @xmath291 , and by the definition of the clique - width expression , the label class with respect to the index of @xmath281 and the label class with respect to the index of @xmath283 are completely adjacent to each other in @xmath14 .",
    "therefore , there is an edge between the end vertex of @xmath276 corresponding to @xmath281 and the end vertex of @xmath282 corresponding to @xmath283 , and furthermore , this edge is not in @xmath257 because @xmath92 is irredundant .",
    "so , we can add it to connect two paths .",
    "now suppose @xmath278 has length at least @xmath31 . by the definition of the clique - width expression , all vertices in a label class in @xmath257",
    "have the same neighborhood in @xmath292 .",
    "so , there are an edge between @xmath289 and the end vertex of @xmath276 corresponding to @xmath281 , and an edge between @xmath290 and the end vertex of @xmath282 corresponding to @xmath283 , and we can add them .",
    "it implies that @xmath14 has a hamiltonian cycle @xmath110 containing each path in @xmath102 as a subpath and such that every edge in @xmath111 is contained in @xmath259 .",
    "we can now prove the following which essentially tells us that if @xmath293 is the set of possible @xmath1-labeled path - partitions at a node @xmath165 of the syntactic tree , it is enough to store @xmath294 .",
    "[ prop : preservingequiv4 ] let @xmath155 be a family of graphs on the vertex set @xmath25",
    ". then @xmath295 .    since @xmath255 is a subset of @xmath155 , it is sufficient to prove that @xmath296 .",
    "let @xmath76 be a multigraph on @xmath89 and let @xmath297 such that @xmath298 and @xmath198 has at most one non - trivial component . by the definition of @xmath255 , there is @xmath299 so that @xmath300 . by definition of @xmath254",
    ", we have @xmath301 .",
    "since the components are the same in @xmath217 and in @xmath186 , and the edges in @xmath76 join components of @xmath186 in @xmath198 as in @xmath302 , we can conclude that @xmath302 has at most one non - trivial component .",
    "we assume that @xmath14 has at least @xmath83 vertices , otherwise we can automatically say it is a no - instance . since every @xmath1-expression can be transformed into an irredundant @xmath1-expression in linear time , we may assume that @xmath14 is given with an irredundant @xmath1-expression . let @xmath92 be the given irredundant @xmath1-expression defining @xmath14 , and @xmath303 be the syntactic tree of @xmath92 .",
    "for every node @xmath165 of @xmath303 , let @xmath257 be the subgraph of @xmath14 defined at node @xmath165 , and for each @xmath17 , let @xmath304 $ ] be the subgraph of @xmath257 induced on the vertices with label @xmath16 .",
    "for each node @xmath165 and each vector @xmath305 , let @xmath306 $ ] be the set of all graphs @xmath115 on the vertex set @xmath25 where    * @xmath307 for some @xmath1-labeled path - partition @xmath22 of @xmath257 , * for each @xmath17 , @xmath308 is the degree of @xmath116 in @xmath115 .    instead of computing the whole set",
    "@xmath309 $ ] , we will compute a subset @xmath310 $ ] of @xmath309 $ ] of size @xmath311 such that @xmath310\\equiv c[t , ( a_1 , \\ldots , a_k)]$ ] .    we explain how to decide whether @xmath14 has a hamiltonian cycle .",
    "let @xmath312 be the root node of @xmath303 , and let @xmath313 be the node that is a node taking the disjoint union of two graphs and closest to the root node .",
    "we can observe that @xmath14 has a hamiltonian cycle if and only if there are some node @xmath165 between @xmath312 and @xmath313 with child @xmath314 and a path - partition @xmath22 of @xmath315 such that    * @xmath165 is a join node labeled by @xmath79 , * @xmath316 and @xmath317 for all @xmath318 .",
    "this is equivalent to that @xmath319\\neq \\emptyset$ ] for some vector @xmath320 where @xmath321 and @xmath322 for all @xmath318 .",
    "therefore , if there is a hamiltonian cycle , then @xmath323\\neq \\emptyset$ ] for such a tuple of @xmath165 , @xmath314 , and @xmath320 , and we can correctly say that @xmath14 has a hamiltonian cycle , and otherwise , there are no such tuples , and we can correctly say that @xmath14 has no hamiltonian cycles .    now , we explain how to recursively generate @xmath310 $ ] .    1 .   ( creation of a vertex @xmath64 with label @xmath16 )",
    "+ if @xmath324 and @xmath325 for all @xmath326 , then @xmath309 $ ] consists of one graph on the vertex set @xmath25 with a loop incident with @xmath116 , and otherwise , it is an empty set .",
    "so , we add the graph @xmath327 to @xmath310 $ ] when @xmath324 and @xmath325 for all @xmath326 , and set @xmath328:=\\emptyset$ ] otherwise .",
    "( disjoint union node with two children @xmath329 and @xmath330 ) + since every path - partition of @xmath257 is obtained by taking the disjoint union of a path - partition of @xmath331 and a path - partition of @xmath332 , we have @xmath333 \\\\ & : = \\bigcup_{(a^1_1 , \\ldots , a^1_k)+(a^2_1 , \\ldots , a^2_k ) = ( a_1 , \\ldots , a_k ) } c[t_1 , ( a^1_1 , \\ldots , a^1_k)]\\uplus c[t_2 , ( a^2_1 , \\ldots , a^2_k)].\\end{aligned}\\ ] ] we assign @xmath334 \\\\ & : = { \\operatorname{reduce}}\\left ( \\bigcup_{(a^1_1 , \\ldots , a^1_k)+(a^2_1 , \\ldots , a^2_k ) = ( a_1 , \\ldots , a_k ) } r[t_1 , ( a^1_1 , \\ldots , a^1_k)]\\uplus r[t_2 , ( a^2_1 , \\ldots , a^2_k ) ] \\right).\\end{aligned}\\ ] ] 3 .",
    "( join node with the child @xmath314 such that each vertex with label @xmath16 is joined to each vertex with label @xmath18 ) + note that every path - partition of @xmath257 is obtained from a path - partition of @xmath315 by adding some edges between end vertices of label @xmath16 and end vertices of label @xmath18 .",
    "we can observe that when we add an edge between an end vertex @xmath64 of a path @xmath335 with label @xmath16 , and an end vertex @xmath336 of a path @xmath337 with label @xmath18 , these two paths @xmath335 and @xmath337 will be unified into a path whose end vertices are end vertices of @xmath335 and @xmath337 other than @xmath64 and @xmath336 .",
    "thus , it corresponds to the operation @xmath164 on auxiliary multigraphs .",
    "we observe that @xmath338 = \\bigcup _ {         \\substack{a_i'-a_i = a_j'-a_j=\\ell\\ge 0 \\\\",
    "a_x'=a_x \\text { for $ x\\neq i , j$ } } } ( c[t ' , ( a_1 ' , \\ldots , a_k')]+\\ell(i , j)).\\end{aligned}\\ ] ] + we take all possible vectors @xmath339 where @xmath340 , and for all @xmath341 , @xmath342 .",
    "assume @xmath343 . for each @xmath344 , we assign @xmath345+(i , j ) ) + ( i , j ) ) \\cdots + ( i , j)),\\ ] ] where we repeat @xmath346 times , and assign @xmath347:= { \\operatorname{reduce}}(r_0\\cup r_1\\cup \\cdots \\cup r_{n}).\\ ] ] 4 .",
    "( renaming node with a child @xmath314 such that the label of each vertex with label @xmath16 is changed to @xmath18 ) + every path - partition of @xmath257 is also a path - partition of @xmath315 , and vice versa .",
    "since just labelings of vertices are changed , we can observe that if @xmath348 , then @xmath306 $ ] is the empty set , and otherwise , we have @xmath349 : = \\bigcup _ {      \\substack {      a_x = a_x ' \\text { for all $ x\\neq i , j$}\\\\      a_i'+a_j'=a_j      } } c[t ' , ( a_1 ' , \\ldots , a_k ' ) ] |_{i\\rightarrow j}.      \\end{aligned}\\ ] ] if @xmath348 , then we assign the empty set to @xmath310 $ ] , and otherwise , we assign @xmath350 : = { \\operatorname{reduce}}\\left (       \\bigcup _ {      \\substack {      a_x = a_x ' \\text { for all $ x\\neq i , j$}\\\\      a_i'+a_j'=a_j      } } r[t ' , ( a_1 ' , \\ldots , a_k ' ) ] |_{i\\rightarrow j } \\right )",
    ".      \\end{aligned}\\ ] ]    to confirm the correctness of our algorithm , we claim the following .",
    "[ claim1 ] let @xmath165 be a node and @xmath351 .",
    "then @xmath328\\equiv c[t , ( a_1 , \\ldots , a_k)]$ ] .",
    "it is clear when @xmath165 is a node that creates a new vertex .",
    "suppose @xmath165 is a disjoint union node with two children @xmath329 and @xmath330 . for two vectors @xmath352 and @xmath353 where @xmath354",
    ", we have @xmath355\\uplus r[t_2 , ( a^2_1 , \\ldots , a^2_k ) ] \\equiv c[t_1 , ( a^1_1 , \\ldots , a^1_k)]\\uplus c[t_2 , ( a^2_1 , \\ldots , a^2_k)]\\ ] ] by proposition  [ prop : preservingequiv3 ] .",
    "thus , we have @xmath328\\equiv c[t , ( a_1 , \\ldots , a_k)]$ ] .",
    "suppose @xmath165 is a join node with the child @xmath314 such that each vertex with label @xmath16 is joined to each vertex with label @xmath18 . by applying propositions  [ prop : preservingequiv1 ] and [ prop : preservingequiv4 ] recursively",
    ", we obtain that @xmath356 $ ] .",
    "lastly , suppose @xmath165 is a renaming node with a child @xmath314 such that the label of each vertex with label @xmath16 is changed to @xmath18 .",
    "we may assume @xmath357 .",
    "in that case , by propositions  [ prop : preservingequiv2 ] and [ prop : preservingequiv4 ] , we have @xmath356 $ ] .    by claim  [ claim1 ]",
    ", we correctly update a representative set @xmath328 $ ] of @xmath309 $ ] for each pair of @xmath165 and @xmath320 .",
    "therefore , we can correctly decide whether @xmath14 has a hamiltonian cycle or not using sets @xmath328 $ ] .    * running time . *",
    "each constructed set @xmath328 $ ] consists of at most @xmath311 graphs , as we keep at most one graph for each partition of @xmath25 after the @xmath358 operation . for the node taking the disjoint union of two graphs , for a fixed vector @xmath320",
    ", there are @xmath6 ways to take two vectors @xmath359 and @xmath360 such that @xmath361 .",
    "so , we can update @xmath362 $ ] in time @xmath363 . for the node joining edges between two classes ,",
    "the value @xmath346 can be taken from @xmath364 to @xmath2 . since each operation",
    "@xmath164 take @xmath365 time , we can update @xmath362 $ ] in time @xmath366 .",
    "clearly , we can update @xmath362 $ ] in time @xmath367 for the relabeling nodes .",
    "therefore , we can solve hamiltonian cycle for @xmath14 in time @xmath6 .",
    "we discuss two variants of hamiltonian cycle , where we can apply the same technique .",
    "let @xmath8 be a positive integer",
    ". the @xmath8-cycle covering problem asks for a given graph @xmath14 whether there is a set of at most @xmath8 pairwise vertex - disjoint cycles in @xmath14 whose union contains all vertices of @xmath14 .",
    "definitely , @xmath144-cycle covering is the hamiltonian cycle problem . in the @xmath8-cycle covering problem",
    ", we relax the definition of path - partitions so that it may contain at most @xmath8 cycles , and we keep the number of cycles in the path - partition . also , we define its auxiliary multigraph @xmath88 using those remaining paths .",
    "one can easily check that two such modified path - partitions @xmath101 and @xmath102 are equivalent for @xmath8-cycle covering if they contain the same number of cycles and @xmath258 .",
    "the second application is for directed hamiltonian cycle .",
    "clique - width was also considered for directed graphs by courcelle and olariu  @xcite .",
    "the clique - width operations for directed graphs are the same as for the undirected graphs , except the one that add edges between two label classes , defined as follows :      the _ clique - width _ of a directed graph @xmath14 is the minimum number of labels needed to construct @xmath14 using these operations . in this case , we use directed auxiliary multigraphs .",
    "similar to lemma  [ lem : alternatingcycle ] , we can show the following .      1 .   for every vertex @xmath64 ,",
    "the number of blue edges leaving @xmath64 is the same as the number of red edges entering @xmath64 , and the number of red edges leaving @xmath64 is the same as the number of blue edges entering @xmath64 .",
    "2 .   @xmath14 has a red - blue alternating eulerian directed trail .",
    "we conclude with one question .",
    "a digraph @xmath370 is an _ out - tree _ if @xmath370 is an oriented tree with only one vertex of in - degree zero ( called the root ) .",
    "the vertices of out - degree zero are called leaves of @xmath370 .",
    "the min leaf out - branching problem asks for a given digraph @xmath370 and an integer @xmath346 , whether there is a spanning out - tree of @xmath370 with at most @xmath346 leaves .",
    "this problem generalizes hamiltonian path by taking @xmath371 .",
    "ganian , hlinen , and obdrzlek  @xcite showed that there is a @xmath372-time algorithm for solving min leaf out - branching problem , when a clique - width @xmath1-expression of a digraph @xmath370 is given .",
    "we ask whether it is possible to drop down the exponential blow - up @xmath373 to @xmath374 .",
    "w.  espelage , f.  gurski , and e.  wanke . how to solve np - hard graph problems on clique - width bounded graphs in polynomial time . in _ graph - theoretic concepts in computer science ( boltenhagen , 2001 ) _ , volume 2204 of _ lecture notes in comput .",
    "_ , pages 117128 .",
    "springer , berlin , 2001 .",
    "r.  ganian , p.  hlinen , and j.  obdrzlek . .",
    "in t.  schwentick and c.  drr , editors , _ 28th international symposium on theoretical aspects of computer science ( stacs 2011 ) _ , volume  9 of _ leibniz international proceedings in informatics ( lipics ) _ , pages 404415 , dagstuhl , germany , 2011 .",
    " leibniz - zentrum fuer informatik ."
  ],
  "abstract_text": [
    "<S> for mso@xmath0-expressible problems like edge dominating set or hamiltonian cycle , it was open for a long time whether there is an algorithm which given a clique - width @xmath1-expression of an @xmath2-vertex graph runs in time @xmath3 for some function @xmath4 . </S>",
    "<S> recently , fomin et al . </S>",
    "<S> ( _ siam . </S>",
    "<S> j. computing _ , </S>",
    "<S> 2014 ) presented several lower bounds ; for instance , there are no @xmath5-time algorithms for edge dominating set and for hamiltonian cycle unless the exponential time hypothesis ( eth ) fails . </S>",
    "<S> they also provided an algorithm running in time @xmath6 for edge dominating set , but left open whether hamiltonian cycle can be solved in time @xmath6 .    in this paper , we prove that hamiltonian cycle can be solved in time @xmath6 . </S>",
    "<S> this improves the naive algorithm that runs in time @xmath7 by espelage et al . ( wg 2001 ) . </S>",
    "<S> we present a general technique of representative sets using two - edge colored multigraphs on @xmath1 vertices . </S>",
    "<S> the essential idea behind is that for a two - edge colored multigraph , the existence of an eulerian trail that uses edges with different colors alternatively can be determined by two information , that are the number of colored edges incident with each vertex and the number of connected components containing an edge . </S>",
    "<S> this allows to avoid storing all possible graphs on @xmath1 vertices with at most @xmath2 edges , which gives the @xmath7 running time . </S>",
    "<S> we can apply this technique to other problems such as @xmath8-cycle covering or directed hamiltonian cycle as well . </S>"
  ]
}
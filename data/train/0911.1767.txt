{
  "article_text": [
    "exchange networks model social and economic relations among individuals under the premise that any relationship has a potential value for its partners . in a purely economic setting",
    ", one can imagine that each relation corresponds to a trading opportunity , and its value is the amount of money to be earned from the trade .",
    "a fascinating question in this context is that of how network structure influences the power balance between nodes ( i.e. their earnings ) .",
    "controlled experiments @xcite have been carried out by sociologists in a set - up that can be summarized as follows . a graph @xmath0 is defined , with positive weights @xmath1 associated to the edges @xmath2 .",
    "a player sits at each node of this network , and two players connected by edge @xmath3 can share a profit of @xmath4 dollars if they agree to trade with each other . each player can trade with at most one of her neighbors ( this is called the _ @xmath5-exchange rule _ ) , so that a set of valid trading pairs forms a matching @xmath6 in the graph @xmath7 .",
    "it is often the case that players are provided information only about their immediate neighbors .",
    "network exchange theory studies the possible outcomes of such a process .",
    "while each instance admits a multitude of outcomes , special classes of outcomes are selected on the basis of ` desirable ' properties . in this paper , we focus on ` balanced outcomes ' , a solution concept that dates back to nash s bargaining theory @xcite , and was generalized in @xcite .",
    "a balanced outcome , or nash bargaining ( nb ) solution , is a pair @xmath8 where @xmath9 is a matching of @xmath7 , and @xmath10 is the vector of players profits .",
    "clearly @xmath11 , and @xmath12 implies @xmath13 .",
    "denote by @xmath14 the set of neighbors of node @xmath15 in @xmath7 .",
    "the pair @xmath16 is a nb solution if it satisfies the following requirements",
    ".    _ stability .",
    "_ if player @xmath15 is trading with @xmath17 , then she can not earn more by simply changing her trading partner .",
    "formally @xmath18 for all @xmath19 .",
    "_ balance .",
    "_ if player @xmath15 is trading with @xmath17 , then the surplus of @xmath15 over his best alternative must be equal to the surplus of @xmath17 over his best alternative . mathematically , @xmath20 for all @xmath12 .",
    "it turns out that the interplay between the @xmath5-exchange rule and the stability and balance conditions results in highly non - trivial predictions regarding the influence of network structure on individual earnings . some of these predictions agree with experimental findings , but alternative predictive frameworks exist as well @xcite .",
    "it is a fundamental open question whether nb solutions describe the outcomes of actual bargaining processes .",
    "the stream of controlled experiments on small networks will surely help to get an answer @xcite . on the other hand ,",
    "an important step forward was achieved by kleinberg and tardos @xcite who proved that nb solutions can be constructed in polynomial time .",
    "however , even a superficial look at experimental conditions reveals that players can not possibly run the algorithm described in @xcite .",
    "there are two possibilities : either there exists a realistic model for the bargaining dynamics that converges to nb solutions , or the solution concept has to be revised . for the former possibility , the underlying dynamics should satisfy the following requirements : @xmath21 it should converge to nb solutions in polynomial time ; @xmath22 it should be _",
    "natural_.    while the first requirement is easy to define and motivate , the second one is more subtle but not less important .",
    "a few properties of a natural dynamics are the following ones : it should be _ local _",
    ", i.e. involve limited information exchange along edges and processing at nodes ; it should be _ time invariant _ , i.e. the players behavior should be the same / similar on identical local information at different times ; it should be _ interpretable _ , i.e. the information exchanged along the edges should have a meaning for the players involved , and should be consistent with reasonable behavior for players .    in the model we propose , at each time @xmath23 , each player sends a message to each of her neighbors .",
    "the message has the meaning of ` best current alternative ' .",
    "we denote the message from player @xmath15 to player @xmath17 by @xmath24 .",
    "player @xmath15 is telling player @xmath17 that she ( player @xmath15 ) can currently earn @xmath24 elsewhere , if she chooses not to trade with @xmath17 .",
    "the vector of all such messages is denoted by @xmath25 .",
    "each agent @xmath15 makes an ` offer ' to each of her neighbors , based on her own ` best alternative ' and that of her neighbor . the offer from node @xmath15 to @xmath17",
    "is denoted by @xmath26 and computed according to    @xmath27    it is easy to realize that this definition corresponds to the following policy : @xmath28 an offer is always non - negative , and a positive offer is never larger than @xmath29 ( no player is interested in earning less than what is currently being offered ) ; @xmath30 subject to the above constraints , the surplus @xmath31 ( if non - negative ) is shared equally .",
    "we denote by @xmath32 the vector of offers .",
    "notice that @xmath33 is just a deterministic coordinate - by - coordinate function of @xmath34 . in the rest of the paper",
    "we shall describe the network status uniquely through the latter vector , and use @xmath35 to avoid ambiguity when required .",
    "each node can estimate its potential earning based on the network status , using @xmath36 the corresponding vector being denoted by @xmath37 .",
    "messages are updated synchronously through the network , according to the rule @xmath38 here @xmath39 is a ` damping ' factor : @xmath40 can be thought of as the inertia on the part of the nodes to update their outgoing messages .",
    "the use of @xmath41 eliminates pathological behaviors related to synchronous updates ( such as oscillations on even - length cycles ) .",
    "we expect that the use asynchronous updates also eliminates such problems .    throughout the paper",
    "we let @xmath42 .",
    "it is easy to see that this implies @xmath43^{2|e|}$ ] , @xmath44^{2|e|}$ ] and @xmath45^{|v|}$ ] at all times ( unless the initial condition violates this bounds ) .",
    "thus we call @xmath46 a ` valid ' message vector if @xmath47^{2|e|}$ ] .",
    "our first result is that fixed points of the update equations ( [ eq : off_def ] ) , ( [ eq : update ] ) ( hereafter referred to as ` natural dynamics ' ) are indeed in correspondence with nash bargaining solutions when such solutions exist .",
    "recall the lp relaxation to the maximum weight matching problem @xmath48    [ thm : fp_dualopt ] let @xmath7 be an instance for which the lp ( [ prob : mwm_relaxation ] ) admits a unique optimum , and this is integer .",
    "let @xmath49 be a fixed point of the natural dynamics .",
    "then @xmath50 is the allocation of a nash bargaining solution ( i.e. there exists a matching @xmath6 , such that the pair @xmath16 is stable and balanced ) .",
    "conversely , every nash bargaining solution @xmath51 , corresponds to a unique fixed point of the natural dynamics with @xmath52 .",
    "the natural dynamics appear to converge rapidly to a fixed point on all the cases we studied .",
    "in particular , we will prove this to be the case whenever the nb solution is unique , and under the assumption of a _ positive gap @xmath53_. the definition of ` gap ' is somewhat technical and is deferred to section [ sec : kt+gap ] .",
    "there we will also argue that the conditions is generic .",
    "further , thanks to @xcite , it can be checked efficiently . in the rest of the paper we use @xmath54 to represent any constant that is independent of the instance @xmath7 , and @xmath55 in particular .",
    "[ thm : convergence ] let @xmath7 be an instance having unique nash bargaining solution with gap @xmath53 , and let @xmath56 denote the corresponding allocation .",
    "then there exists @xmath57 such that , for any initial condition with @xmath58^{2|e|}$ ] , and any @xmath59 the natural dynamics yields earning estimates @xmath60 , with @xmath61 for all @xmath62 .",
    "it is worth stressing that the assumption of unique nb solution seems to be a weakness of our proof technique , rather than a necessary condition for fast convergence . in section [ sec : bipartite ] we show indeed that the natural dynamics _ always converges _ on bipartite graphs if run from extremal initial conditions . on the other hand , the class of instances with unique nb solution already includes a large class of cases .",
    "the previous theorem provides a convergence guarantee for the earnings @xmath60 that players expect .",
    "our last result shows the correct pairing among players also emerges from the dynamics",
    ".    under the hypotheses of theorem [ thm : convergence ] , assume @xmath63 .",
    "then , for each node @xmath62 receiving non - zero offers , there exists a unique neighbor @xmath64 such that the offer @xmath65 from @xmath66 to @xmath15 is strictly larger than the offers @xmath67 from other nodes @xmath68 .",
    "further @xmath69 if and only if @xmath70 . the pairs",
    "@xmath71 thus defined coincide with the ones in the unique nash bargaining solution .",
    "this theorem follows immediately from the proof of theorem [ thm : convergence ] , as we will prove there that , for @xmath72 , @xmath73 , where @xmath46 is the unique fixed point . for @xmath74 ,",
    "this is sufficient to unambiguously determine pairings .      following @xcite , kleinberg and tardos @xcite first considered balanced outcomes on general exchange networks and proved that a network @xmath7 admits a balanced outcome if and only if it admits a stable outcome .",
    "further , the latter happens if and only if a linear programming relaxation of the maximum weight matching problem on @xmath7 admits an integral optimum .",
    "the same paper describes a polynomial algorithm for constructing balanced outcomes .",
    "this is in turn based on the dynamic programming algorithm of aspvall and shiloach @xcite for solving systems of linear inequalities .",
    "our convergence proof exploits the structural decomposition of the network that is produced by this algorithm .",
    "alternative solution concepts for bargaining on networks were studied in @xcite .",
    "azar and co - authors @xcite first studied the question as to whether a balanced outcome can be produced by a local dynamics , and were able to answer positively .",
    "their results left however two outstanding challenges : @xmath75 the bound on the convergence time proved in @xcite is exponential in the network size , and therefore does not provide a solid justification for convergence to nb solutions in large networks ; @xmath76 the algorithm analyzed by these authors first selects a matching @xmath6 in @xmath7 @xcite , corresponding to the pairing of players that trade . in a second phase",
    "the algorithm determines the profit of each player .",
    "while such an algorithm can be implemented in a distributed way , azar et al . point out that it is not entirely realistic .",
    "indeed the rules of the dynamics change after the matching is found .",
    "further , if the pairing is established at the outset , the players lose their bargaining power .",
    "the present paper aims at tackling these challenges .",
    "we next describe the main steps in the proof of our convergence result , theorem [ thm : convergence ] .",
    "this is based on the following strategy :    * 1 . *",
    "prove that , under the positive gap condition , the natural dynamics on different substructures of the networks approximately _ decouples_.    * 2 . *",
    "analyze the dynamics on each structure by comparison with an appropriate random walk process .    an approach based on these two steps",
    "might be applicable to the analysis of a wide class of local algorithms on networks .",
    "step 1 above requires recalling the construction in @xcite , which we do next .",
    "section [ sub : convergence ] describes the main steps of the proof .",
    "the fixed point properties of the natural dynamics are summarized in section [ sec : fixedpoint ] , which outlines the proof of theorem [ thm : fp_dualopt ] . a simple argument for convergence on bipartite graph",
    "is provided in section [ sec : bipartite ] , while the much more challenging case of general graphs is contained in section [ sec : basicstructures ] and the appendices .",
    "let @xmath7 be an instance which admits at least one stable outcome , @xmath77 be the corresponding matching ( recall that this is a maximum weight matching ) , and consider the kleinberg - tardos ( kt ) procedure for finding a nb solution @xcite .",
    "any nb solution @xmath78 can be constructed by this procedure with appropriate choices at successive stages . at each stage ,",
    "a linear program is solved with variables @xmath79 attached to node @xmath15 .",
    "the linear program maximizes the minimum ` slack ' of all unmatched edges and nodes , whose values have not yet been set ( the slack of edge @xmath80 is @xmath81 ) .    at the first stage ,",
    "the set of nodes that remain unmatched ( i.e. are not part of @xmath77 ) is found , if such nodes exist .",
    "call the set of unmatched nodes @xmath82 .        after this , at successive stages of the kt procedure , a sequence of structures @xmath83 , @xmath84 characterizing the lp optimum are found .",
    "we call this the _",
    "kt sequence_. each such structure is a pair @xmath85 with @xmath86 , @xmath87 . according to @xcite @xmath88 belongs to one of four topologies : alternating path , blossom , bicycle , alternating cycle ( figure [ fig : structures ] ) .",
    "the @xmath89-th linear program determines the value of @xmath90 for @xmath91 .",
    "further , one has the partition @xmath92 with @xmath93 consisting of all matching edges along which nodes in @xmath94 trade , and @xmath95 consists of edges @xmath3 such that some @xmath91 receives its second - best , positive offer from @xmath17 .",
    "the @xmath96 values for nodes on the limiting structure are uniquely determined if the structure is an alternating path , blossom or bicycle values ` may not be fully determined ' also in the case of bicycles .",
    "however it is not hard to prove that this is not the case . ] . in case of an alternating cycle",
    "there is one degree of freedom  setting a value @xmath90 for one node @xmath97 fully determines the values at the other nodes .",
    "we emphasize that , within the present definition , @xmath88 is not necessarily a subgraph of @xmath7 , in that it might contain an edge @xmath3 but not both its endpoints . on the other hand",
    ", @xmath94 is always subset of the endpoints of @xmath98 .",
    "we denote by @xmath99 the set of nodes formed by all the endpoints of edges in @xmath98 .    for all nodes @xmath91",
    "the second best offer is equal to @xmath100 , where @xmath101 is the slack of @xmath88 .",
    "therefore @xmath102 the slacks form an increasing sequence ( @xmath103 ) .",
    "we say that @xmath104 has a gap @xmath105 if @xmath106 and if for each edge @xmath3 such that @xmath107 and @xmath108 , @xmath109 it is possible to prove that the positive gap condition is generic in the following sense .",
    "the set of all instances such that the nb solution is unique can be regarded as a subset @xmath110^{|e|}$ ] ( @xmath111 being the maximum edge weight ) .",
    "it turns out that @xmath112 has dimension @xmath113 ( i.e. the class of instances having unique nb solution is large ) and that the subset of instances with gap @xmath53 is both _",
    "open and dense in @xmath112_.      we begin with a basic property . throughout the paper , for a vector @xmath114 , we let @xmath115 .    the natural dynamics never leads to an expansion in the sup - norm . more precisely , for any two initial message vectors @xmath116 and @xmath117 , we have @xmath118    the proof of this fact is elementary and deferred to appendix [ sec : basicconvergence ] . in view of this lemma ,",
    "it is natural to consider the unique ( by assumption ) fixed point @xmath104 and consider the",
    "_ cost function _ @xmath119 .    in order to prove theorem [ thm : convergence ] ,",
    "it is sufficient to show that this cost decreases by a non - negligible amount in a polynomial number of iterations . in particular ,",
    "it is sufficient to prove the following .",
    "[ thm : technicalconvergence ] let @xmath7 be an instance having unique solution @xmath104 with gap @xmath105 and consider an initial condition @xmath116 with @xmath120 .",
    "then there exists @xmath121 such that for all @xmath122 , @xmath123    theorem [ thm : technicalconvergence ] is proved by analyzing sequentially each separate structure in the kt sequence .",
    "the key remark is that such a separate analysis is possible because the convergence of each structure _ decouples _ from all subsequent structures on a scale smaller than @xmath105 .    given a subgraph @xmath124 , we let @xmath125 note that @xmath126 depends @xmath127 only through its edge set @xmath128 .",
    "thus , there will be no ambiguity in the notation @xmath129 .",
    "we let @xmath130 be the directed multi - graph with the same vertex set as @xmath7 and all edges obtained by directing the edges in @xmath7 ( hence for each @xmath3 in @xmath7 we have two directed edges @xmath131 and @xmath132 in @xmath130 ) . with an abuse of notation ,",
    "we shall write @xmath133 also when @xmath134 is a directed subgraph of @xmath130 . we denote by @xmath135 the directed graph including all directed edges between vertices in @xmath136 and all directed edges with the first endpoint in this set of vertices .",
    "we also let @xmath137 be the empty graph .    for @xmath138 , @xmath139 , we define @xmath140 to be the condition @xmath141 in the following",
    ", we will sometimes drop the subscript @xmath142 .",
    "we can now state the key lemma for analyzing the convergence of structures in the kt sequence .",
    "[ lemma : keylemma ] let @xmath7 be an instance having unique solution with gap @xmath105 . consider an initial condition @xmath116 such that @xmath143 holds for some @xmath138 , @xmath144 and for some @xmath145 .",
    "then there exists @xmath146 such that @xmath147 holds for all @xmath148 .",
    "the proof of this lemma is based on a case - by - case analysis of the possible topologies of @xmath88 and can be found in sections [ sec : basicstructures ] , [ app : path ] , [ app : blossom ] , [ app : bicycle ] . using the lemma to prove theorem [ thm : technicalconvergence ] , and hence theorem [ thm : convergence ] is immediate .",
    "we know that @xmath149 .",
    "start with @xmath116 such that @xmath150 at @xmath151 , i.e. @xmath152 .",
    "define @xmath153 , @xmath154 , ",
    ", @xmath155 .",
    "we know that @xmath156 holds by assumption .",
    "we deduce from lemma [ lemma : keylemma ] that @xmath157 holds . proceeding inductively",
    ", it follows that @xmath158 holds .",
    "now , we only need to show @xmath159 , which follows from @xmath160 for all @xmath161 .",
    "the dual problem to ( [ prob : mwm_relaxation ] ) is @xmath162 a feasible point @xmath163 for lp is called _ half - integral _ if for all @xmath164 , @xmath165 .",
    "it is well known that problem ( [ prob : mwm_relaxation ] ) always has an optimum @xmath166 that is half - integral .",
    "we also denote the subset of edges @xmath167 in @xmath168 with @xmath169 by @xmath77 and say @xmath77 is a _ half - integral matching_.    in this paper we consider only those problems that have unique @xmath166 , that has greater weight than any other corner @xmath163 of the primal polytope by at least @xmath170 , i.e. @xmath171 for all half - integral solutions @xmath172 .",
    "we call such lp an _",
    "@xmath173-pointed problem_. further , if @xmath166 is , in fact , integral , we say that the lp relaxation is _",
    "@xmath173-tight_. we will simply use _ pointed _ and _ tight _",
    ", whenever the value of @xmath174 is immaterial ( let us stress that , according to this terminology , tight implies pointed ) .",
    "we call @xmath164 a _",
    "@xmath5-solid edge _",
    "if @xmath175 , a _ @xmath176-solid _ edge if @xmath177 , and a _ non - solid edge _ if @xmath178 .",
    "[ [ proof - of - theorem - thmfp_dualopt - from - fixed - points - to - nb - solutions . ] ] proof of theorem [ thm : fp_dualopt ] : from fixed points to nb solutions .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the direct part follows from the following set of fixed point properties , which hold for pointed problems .",
    "the proofs of these properties are given in appendix [ sec : fixed_point_prop_proofs ] . throughout @xmath49",
    "is a fixed point of the dynamics ( [ eq : off_def ] ) , ( [ eq : update ] ) ( with @xmath50 given by ( [ eq : bargamma ] ) ) .    1 .",
    "two players @xmath179 are called _ partners _ if @xmath13 .",
    "then the following are equivalent : ( a ) @xmath15 and @xmath17 are partners , ( b ) @xmath180 , ( c ) @xmath181 and @xmath182 .",
    "2 .   let @xmath66 be the set of all partners of @xmath15",
    ". then the following are equivalent : ( a ) @xmath183 , ( b ) @xmath184 , ( c ) @xmath185 .",
    "we say that @xmath3 is a _ weak - dotted edge _ if @xmath186 , _ a strong - dotted edge _",
    "if @xmath187 , and a _ non - dotted edge _ otherwise . if @xmath15 has no adjacent dotted edges , then @xmath188 .",
    "@xmath50 is an optimum solution for the dual lp ( [ prob : mwm_dual ] ) and @xmath189 holds for all @xmath179 .",
    "the balance property , holds at every edge @xmath179 ( with both sides being non - negative ) .",
    "an edge is @xmath5-solid ( @xmath176-solid ) iff it is strongly ( weakly ) dotted .",
    "assume that the lp ( [ prob : mwm_relaxation ] ) is tight .",
    "then , by property 6 , the set of strong - dotted edges form the unique maximum weight matching @xmath77 . by properties 4 and 5",
    "the pair @xmath190 is stable and balanced and thus forms a nb solution .",
    "_ remark : _ notice that properties 1 - 6 hold under the weaker condition that the problem is pointed . in this more general setting ,",
    "fixed point correspond to dual optima satisfying the unmatched balance property ( [ eq : balance ] ) .",
    "[ [ proof - of - theorem - thmfp_dualopt - from - nb - solutions - to - fixed - points . ] ] proof of theorem [ thm : fp_dualopt ] : from nb solutions to fixed points .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    consider any nb solution @xmath191 .",
    "construct a corresponding fp as follows .",
    "set @xmath192 for all @xmath179 .",
    "compute @xmath46 using @xmath193 .",
    "we claim that this is a fp and that the corresponding @xmath50 is @xmath56 . to prove that we are at a fixed point",
    ", we imagine updated offers @xmath194 based on @xmath46 , and show @xmath195 .",
    "consider a matching edge @xmath12 .",
    "we know that @xmath196 . also stability and balance tell us @xmath197 and both sides are non - negative .",
    "hence , @xmath198 .",
    "therefore @xmath199 , @xmath200 by symmetry , we also have @xmath201 . hence , the offers remain unchanged .",
    "moreover , @xmath202 .",
    "similarly , @xmath203 . now consider @xmath204 .",
    "we have @xmath205 and , @xmath206 .",
    "similar equation holds for @xmath207 .",
    "the validity of this identity can be checked individually in the cases when @xmath208 and @xmath209 .",
    "hence , @xmath199 .",
    "this leads to @xmath210 . by symmetry",
    ", we know that both the offers remain unchanged .    finally , we show @xmath211 . for all @xmath12 , we already found that @xmath212 and vice versa .",
    "for any edge @xmath213 , we know @xmath214 .",
    "this immediately leads to @xmath211 .",
    "it is worth noting that making use of the uniqueness of lp optimum , we can further show that @xmath215 , @xmath216 iff @xmath217 i.e. the fixed point reconstructs the pairing @xmath215 .",
    "bipartite graphs are natural graphs to consider , since they include the case of ` buyers ' and ` sellers ' negotiating with each other .",
    "this case is substantially easier because of a natural partial ordering on message vectors , and in particular , on the nash bargaining solutions .",
    "this ordering loosely corresponds to the perceived strength or negotiating power of buyers relative to sellers .",
    "further , there are ` extremal ' nb solutions with respect to this partial ordering , which we call the buyer / seller dominant solution .",
    "we show that if the dynamics starts with a sufficiently buyer / seller dominant state , then it always converges to one of these extreme nb solutions .",
    "unfortunately , the partial ordering does not extend to general graphs , and a much more technical analysis is required in that case .",
    "nevertheless , the bipartite graph case suggests that the natural dynamics indeed converges even in instances with multiple nb solutions .",
    "we partition the nodes on a bipartite graph @xmath7 as @xmath218 , representing buyers and seller respectively .",
    "given message vectors @xmath46 and @xmath219 , we define a partial ordering as @xmath220 if inequalities @xmath221 and @xmath222 hold for all @xmath223 , @xmath224 .    for a bipartite graph @xmath7 ,",
    "if @xmath225 then @xmath226 for all @xmath227 i.e. the dynamics preserves partial ordering .",
    "[ lemma : bipartite_monotonicity ]    @xmath228 is non - increasing in @xmath229 and non - decreasing in @xmath230 leading to @xmath231 .",
    "similarly , @xmath232 .",
    "it follows that @xmath233 .",
    "induction completes the proof .",
    "[ corr : monotone_convergence ] assume @xmath116 to be such that @xmath234 .",
    "then @xmath235 for some nb solution @xmath104 .",
    "since @xmath234 , using lemma [ lemma : bipartite_monotonicity ] we have @xmath236 for all @xmath23 . we know that @xmath47^{2|e|}$ ] for all valid message vectors @xmath46 , so the monotone sequence @xmath237 converges to a fixed point of the dynamics ( as the update rules are continuous in @xmath34 ) .",
    "define the message vectors @xmath238 and @xmath239 by : @xmath240 and @xmath241 for all @xmath242 .",
    "therefore , @xmath243 for any valid @xmath47^{2|e|}$ ] .",
    "if @xmath244 then @xmath234 .",
    "it follows from corollary [ corr : monotone_convergence ] that @xmath34 converges , say to @xmath245 .",
    "consider any other fixed point ( i.e. nb solution ) @xmath104 .",
    "hence , @xmath247 .",
    "thus , there exists a ` maximal ' fixed point with respect to the partial ordering .",
    "it is buyer optimal in a strong sense  each buyer earns the most possible at @xmath245 among all nb solutions , and each seller earns the least possible . with a similar argument using @xmath248 , we can show the existence of a ` minimal ' fixed point @xmath249 that is seller optimal .",
    "although the simple monotonicity argument does not imply any bound on the convergence rate , we expect that the methods developed for general graphs ( next section ) can be used to prove polynomial convergence in the present case .",
    "the condition @xmath250 from section [ sec : kt+gap ] means that at a fixed step @xmath23 of the natural dynamics the deviation of @xmath34 from the unique fixed point @xmath104 is at most @xmath142 on all edges of @xmath168 , and is at most @xmath251 on all edges of @xmath252 , or @xmath253 , @xmath254 .",
    "the goal now is to show that if we start with an initial condition that satisfies @xmath255 then after @xmath256 iterations of the natural dynamics we reach the condition @xmath257 .",
    "first we state the following useful properties of the condition @xmath250 with respect to the natural dynamics .",
    "their proofs are given in [ sec : basicconvergence ] .",
    "the first lemma gives an upper bound on offers to nodes in @xmath94 from outside @xmath88 .",
    "this allows us to restrict the analysis to messages on @xmath88 .",
    "let @xmath258 and @xmath259 . if @xmath250 holds then for all @xmath179 with @xmath15 in @xmath94 and @xmath260 : @xmath261 .",
    "[ lemma : outsideoff_ub ]    if @xmath255 holds , then @xmath250 holds for all @xmath262 .",
    "[ lemma : condstrucpersistence ]    assume that @xmath263 holds for some @xmath259 , @xmath264 , and that @xmath265 for all @xmath227 .",
    "then , for any @xmath266 , @xmath267 holds for all @xmath268 .",
    "[ lemma : outgoing_error_bound ]    lemma [ lemma : keylemma ] for @xmath269 follows directly from lemma [ lemma : outgoing_error_bound ] with @xmath270 . for @xmath271 ,",
    "the lemma [ lemma : outgoing_error_bound ] reduces our problem to bounding @xmath272 .",
    "the proof is divided into three cases depending on the structure @xmath88 : path , blossom , bicycle .",
    "next we discuss the main steps in the case of a path .",
    "the blossom and bicycle require a more delicate analysis that uses the same ideas .",
    "these cases are deferred to appendix sections [ app : blossom ] , [ app : bicycle ] in the interest of space .",
    "we prove the bound @xmath273 in three steps :    * step 1 : * define two different dynamics on the path that are simpler to analyze , we call these ` bounding processes ' . each bounding process has a unique fixed point and converges rapidly to it .    * step 2 : * show that the message vector @xmath34 of the natural dynamics on this path is bounded from above and below ( sandwiched ) by these two bounding processes .",
    "* step 3 : * show that the fixed points of the bounding processes have deviations @xmath251 from @xmath104 .",
    "hence , the natural dynamics quickly achieves @xmath273 .",
    "[ [ bounding - processes . ] ] bounding processes .",
    "+ + + + + + + + + + + + + + + + + + +    define a path as @xmath274 with @xmath275 , and @xmath276 with positive weights on the edges , and @xmath277 .",
    "let @xmath278 be a matching on @xmath279 with alternate edges included in @xmath278 .",
    "we define the _ simplified dynamics _ on @xmath279 wrt matching @xmath278 , boundary conditions @xmath280 ( arbitrary real numbers ) by @xmath281    @xmath282    for all @xmath283 .",
    "our bounding processes will be defined later as instances of this simplified dynamics with specially tuned boundary and initial conditions .",
    "but first we state a crucial result on the convergence of the simplified dynamics . its proof is given in [ app : path ] based on the analysis of a random walk on a finite length segment .",
    "[ lemma : simplified_convergence ] consider @xmath279 with @xmath277 .",
    "let @xmath284 be arbitrary constant boundary conditions .",
    "the simplified dynamics on @xmath279 wrt the given boundary conditions and matching @xmath278 has a unique fixed point @xmath285 satisfying @xmath286 .",
    "moreover , for any initial condition @xmath287 , @xmath288    as a consequence , the error term will be smaller than any desired inverse polynomial factor in time @xmath289 .",
    "now we define the bounding processes .",
    "suppose @xmath88 is a path @xmath279 .",
    "let @xmath290 be the restriction of @xmath77 to @xmath279 .",
    "assume @xmath291 , @xmath292 and @xmath293 .",
    "the @xmath294-bounding process on @xmath279 wrt @xmath290 is the sequence of message assignments @xmath295 on @xmath279 produced by the simplified dynamics on @xmath279 wrt the matching @xmath290 , the constant boundary conditions @xmath296 with the initial condition ( for @xmath297 ) @xmath298 , @xmath299 .",
    "when convenient , we include the sign @xmath300 explicitly in the notation for the bounding process as @xmath301 .    as per lemma [ lemma : simplified_convergence ] , the bounding process has a unique fixed point to which it converges fast .",
    "call this fixed point @xmath302 .",
    "it is easy to see that for all @xmath303 : @xmath304 , @xmath305 .",
    "the following lemma establishes that the simplified dynamics and natural dynamics produce the same results when acting on @xmath306 , except when @xmath307 for some @xmath308 .",
    "this property is critical in proving that @xmath306 sandwiches the natural dynamics ( lemma [ lemma : boundingbounds ] ) .",
    "the proof is in appendix [ app : path ] .",
    "[ lemma : correctmatching ] let @xmath295 be the @xmath294-bounding process on @xmath279 .",
    "then for any @xmath309 , we have @xmath310 for @xmath311 and @xmath312 for @xmath313 .",
    "[ [ sandwiching - the - message - vector . ] ] sandwiching the message vector .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    given two message assignments @xmath46 and @xmath219 on @xmath279 , we shall say that @xmath46 dominates @xmath219 ( and write @xmath220 ) if @xmath314 the natural dynamics ( and the simplified dynamics ) on @xmath279 preserve this ordering ( cf .",
    "appendix [ app : path ] ) .",
    "note that @xmath315 by our definition of the bounding processes , where @xmath316 denotes the restriction of @xmath46 to @xmath279 .",
    "the next lemma shows that this sandwich property continues to hold for all @xmath309 . the proof is given in appendix [ app : path ] .",
    "[ lemma : boundingbounds ] let @xmath7 be an instance admitting a unique nb solution with gap @xmath105 , and assume its kt sequence to be @xmath317 , with @xmath318 a path .",
    "let @xmath319 .",
    "further assume @xmath143 holds .",
    "if we denote by @xmath301 the @xmath294 bounding process on @xmath279 , then for any @xmath283 : @xmath320    from lemma [ lemma : boundingbounds ] we have @xmath321 we know that @xmath322 .",
    "since @xmath323 by lemma [ lemma : simplified_convergence ] applied to the bounding processes we can show the right hand side becomes smaller than @xmath324 for all @xmath325 for some @xmath326 finite . finally , we use lemma [ lemma : outgoing_error_bound ] with @xmath327 to show that @xmath328 holds for all @xmath329 , where @xmath330 as required .    * acknowledgements .",
    "* we thank eva tardos for introducing us to network exchange theory and daron acemoglu for several insightful discussions . a large part of this work",
    "was done while yk , mb and am were at msr new england .",
    "this research was partially supported by nsd , grants ccf-0743978 and ccf-0915145 , by a terman fellowship .",
    "yk is supported by a 3com corporation stanford graduate fellowship",
    ".    99    j.  nash , `` the bargaining problem , '' econometrica , * 18 * ( 1950 ) 155 - 162    m.  bayati , d.  shah and m.  sharma , `` max - product for maximum weight matching : convergence , correctness , and lp duality , '' ieee trans .",
    "theory , * 54 * ( 2008 ) 1241 - 1251    m.  bayati , c. borgs , j. chayes , r. zecchina , `` on the exactness of the cavity method for weighted b - matchings on arbitrary graphs and its relation to linear programs , '' arxiv:0807.3159 , ( 2007 )    k.  s.  cook and t. yamagishi , `` power exchange in networks : a power - dependence formulation , '' social networks , * 14 * ( 1992 ) 245 - 265    j.  kleinberg and e.  tardos , `` balanced outcomes in social exchange networks , '' in _ stoc _ , 2008 .",
    "lucas , c.w .",
    "younts , m.j .",
    "lovaglia , and b.  markovsky , `` lines of power in exchange networks , '' social forces , 80 ( 2001 ) 185 - 214    s.c .",
    "rochford , `` symmetric pairwise - bargained allocations in an assignment market , '' in j. economic theory , * 34 * ( 1984 ) 262 - 281 .",
    "y.  azar , b.  birnbaum , l.  elisa celis , n.  r.  devanur and y.  peres , `` convergence of local dynamics to balanced outcomes in exchange networks '' , 50th ieee symposium foundations of computer science , atlanta , november 2009    b.  aspvall and y.  shiloach , `` a polynomial time algorithm for solving systems of linear inequalities with two variables pre inequality '' , 20th ieee symposium foundations of computer science , puerto rico , october 1979    t.  chakraborty , m.  kearns and s.  khanna , `` network bargaining : algorithms and structural results '' 10th acm conference on electronic commerce , stanford , july 2009    d.  willer",
    "( ed . ) _ network exchange theory _ , praeger , 1999    a. schrijver , `` combinatorial optimization '' , springer - verlag , ( 2003 ) , vol .",
    "a.    j.  skvoretz and d.  willer , `` exclusion and power : a test of four theories of power in exchange networks , '' american sociological review , 58 ( 1993 ) 801 - 818    f.  spitzer , _ principles of random walk _ , springer , 2005",
    "in this section we state and prove the fixed point properties that were used for the proof of theorem [ thm : fp_dualopt ] in section [ sec : fixedpoint ] .",
    "@xmath50 satisfies the constraints of the dual problem ( [ prob : mwm_dual ] ) .",
    "[ lemma : gamma_sat_dual_const ]    since offers @xmath331 are by definition non - negative therefore for all @xmath332 we have @xmath333 .",
    "so we only need to show @xmath334 for any edge @xmath335 .",
    "it is to see that @xmath336 and @xmath337 .",
    "therefore , if @xmath338 then @xmath334 holds and we are done . otherwise , for @xmath339 we have @xmath340 and @xmath341 which gives @xmath342 .",
    "recall that for any @xmath343 , we say that @xmath15 and @xmath17 are ` partners ' if @xmath13 and @xmath66 denotes the partners of node @xmath15 .",
    "in other words @xmath344 .",
    "[ lemma : i - jpartners_equivalence ] the following are equivalent :    * @xmath15 and @xmath17 are partners , * @xmath180 , * @xmath181 and @xmath182 .    moreover , if @xmath181 and @xmath345 then @xmath188",
    ".    we will prove @xmath346 .",
    "@xmath347 : since @xmath336 and @xmath348 always holds then @xmath349 .",
    "@xmath350 : if @xmath351 then @xmath352 .",
    "but @xmath353 therefore @xmath182 . the argument for @xmath181 is similar .",
    "@xmath354 : if @xmath355 then @xmath353 and @xmath356 which gives @xmath357 and we are done .",
    "otherwise , we have @xmath358\\leq w_{ij}$ ] which contradicts lemma [ lemma : gamma_sat_dual_const ] that @xmath50 satisfies the constraints of the dual problem ( [ prob : mwm_dual ] ) .    finally",
    ", we need to show that @xmath181 and @xmath345 give @xmath188 . first note that by equivalence of @xmath359 and @xmath360 we should have @xmath361 . on the other hand @xmath362 .",
    "now if @xmath363 we get @xmath364 which is a contradiction .",
    "therefore @xmath365 .    the following are equivalent :    * @xmath183 , * @xmath184 , * @xmath185 .",
    "[ lemma : strong_dotted ]    @xmath366 : @xmath367 means @xmath368 .",
    "it also follows that @xmath369 or @xmath370 .",
    "therefore , @xmath371 which gives @xmath185 or @xmath360 . from this",
    "we can explicitly write @xmath353 which is strictly bigger than @xmath372 .",
    "hence we obtain @xmath359 .    by symmetry",
    "this finishes the proof .",
    "recall that @xmath374 is a weak - dotted edge if @xmath186 , a strong - dotted edge if @xmath187 , and a non - dotted edge otherwise .",
    "basically , for any dotted edge @xmath374 we have @xmath375 and @xmath376 .",
    "one corollary of lemmas [ lemma : i - jpartners_equivalence]-[lemma : strong_dotted ] is that strong - dotted edges are only adjacent to non - dotted edges .",
    "also each weak - dotted edge is adjacent to at least one weak - dotted edge at each end .",
    "if @xmath15 has no adjacent dotted edges , then @xmath188 [ lemma : no_dotted_means_gamma0 ]    assume that the largest offer to @xmath15 comes from @xmath17 .",
    "therefore , @xmath377 . now if @xmath363 then @xmath364 or @xmath374 is dotted edge which is impossible .",
    "thus , @xmath378 and @xmath188 .    the following are equivalent :    * @xmath379 , * @xmath380 , * @xmath381 .",
    "[ lemma : when_alf_equals_gamma ]    @xmath347 : follows from lemma [ lemma : strong_dotted ] , since @xmath379 gives @xmath382 .",
    "@xmath350 : follows from the definition of @xmath331 .",
    "@xmath354 : from @xmath381 we have @xmath380 .",
    "therefore , @xmath383\\leq { \\alpha_{i\\backslash j}}$ ] .",
    "note that ( c ) is symmetric in @xmath15 and @xmath17 , so ( a ) and ( b ) can be transformed by interchanging @xmath15 and @xmath17 .",
    "@xmath379 iff @xmath384 [ corr : alf_gamma_eq ]    @xmath189 holds @xmath385 [ lemma : off_from_gamma ]    if @xmath380 then the result follows from lemma [ lemma : when_alf_equals_gamma ] .",
    "otherwise , @xmath374 is strongly dotted and @xmath386 , @xmath387 .",
    "from here we can explicitly calculate @xmath388 .",
    "the unmatched balance property , equation , holds at every edge @xmath343 , and both sides of the equation are non - negative .",
    "[ lemma : balance_at_fp ]    in light of lemma [ lemma : off_from_gamma ] , can be rewritten at a fixed point as @xmath389 which is easy to verify .",
    "the case @xmath380 leads to both sides of eq .",
    "( [ eq : fp_balance ] ) being @xmath390 by corollary [ corr : alf_gamma_eq ] .",
    "the other case @xmath185 leads to @xmath391 clearly , we have @xmath181 and @xmath182 .",
    "so eq .  ( [ eq : fp_balance ] ) holds .",
    "next lemmas show that dotted edges are in correspondence with the solid edges that were defined in section [ sec : fixedpoint ]",
    ".    a non - solid edge can not be a dotted edge , weak or strong .",
    "[ lemma : no_extra_dotted ]    before proving the lemma let us define alternating paths .",
    "a path @xmath392 in @xmath7 is called _ alternating path _ if : ( a ) there exist a partition of edges of @xmath279 into two sets @xmath393 such that either @xmath394 or @xmath395 .",
    "moreover @xmath396 ( @xmath397 ) consists of all _ odd ( even ) _ edges ; i.e. @xmath398 ( @xmath399 ) .",
    "( b ) the path @xmath279 might intersect itself or even repeat its own edges but no edge is repeated immediately . that is , for any @xmath400 and @xmath401 .",
    "@xmath279 is called an _ alternating cycle _ if @xmath402 .",
    "also , consider @xmath166 and @xmath403 that are optimum solutions for the lp and its dual , and .",
    "the complementary slackness conditions ( see @xcite ) for more details ) state that for all @xmath332 , @xmath404 and for all @xmath405 , @xmath406 .",
    "therefore , for all solid edges the equality @xmath407 holds . moreover , any node @xmath332 is adjacent to a solid edge iff @xmath408 .    we need to consider two cases :    * case ( i ) . *",
    "assume that the optimum lp solution @xmath166 is integer ( having a tight lp ) .",
    "the idea of the proof is that if there exist a non - solid edge which is dotted , we use a similar analysis to @xcite to construct an alternating path consisting of dotted and solid edges that leads to creation of at least two optimal solutions to lp .",
    "this contradicts with uniqueness assumption on the optimum solution of lp .",
    "now assume the contrary : take @xmath409 that is a non - solid edge but it is dotted .",
    "consider an endpoint of @xmath409 .",
    "for example take @xmath410 .",
    "either there is a solid edge attached to @xmath410 or not .",
    "if there is not , we stop .",
    "otherwise , assume @xmath411 is a solid edge . using lemma [ lemma : no_dotted_means_gamma0 ] , either @xmath412 or there is a dotted edge connected to @xmath413 .",
    "but if this dotted edge is @xmath411 then @xmath414 . therefore , by lemma [ lemma : strong_dotted ] there has to be another dotted edge @xmath415 connected to @xmath413 . now , depending on whether @xmath416 has ( has not ) an adjacent solid edge we continue ( stop ) the construction .",
    "similar procedure could be done by starting at @xmath417 instead of @xmath410 .",
    "therefore , we obtain an alternating path @xmath418 with all odd edges being dotted and all even edges being solid . using the same argument as in @xcite one",
    "can show that one of the following four scenarios occur .",
    "* * path : * before @xmath279 intersects itself , both end - points of the path stop .",
    "either the last edge is solid ( then @xmath419 for the last node ) or the last edge is a dotted edg . now consider a new solution @xmath420 to lp by @xmath421 if @xmath422 and @xmath423 if @xmath424 .",
    "it is easy to see that @xmath420 is a feasible lp solution at all points @xmath425 and also for internal vertices of @xmath279 .",
    "the only nontrivial case is when @xmath426 ( or @xmath427 ) and the edge @xmath428 ( or @xmath429 ) is dotted . in both of these cases , by construction @xmath430 which means no solid edge",
    "is attached to @xmath431 outside of @xmath279 so making any change inside of @xmath279 is safe .",
    "now denote the weight of all solid ( dotted ) edges of @xmath279 by @xmath432 ( @xmath433 ) .",
    "hence , @xmath434 but @xmath435 .",
    "moreover , from lemma [ lemma : gamma_sat_dual_const ] , @xmath436 is dual feasible which gives @xmath437 .",
    "we are using the fact that if there is a solid edge at an endpoint of @xmath279 the @xmath96 of the endpoint should be @xmath390 .",
    "now reduces to @xmath438 this contradicts the tightness of lp relaxation since @xmath439 holds at least for @xmath440 . *",
    "* cycle : * @xmath279 intersects itself and will contain an even cycle @xmath441 .",
    "this case can be handled very similar to the path by defining @xmath421 if @xmath442 and @xmath423 if @xmath443 .",
    "the proof is even simpler since the extra check for the boundary condition is not necessary .",
    "* * blossom : * @xmath279 intersects itself and will contain an odd cycle @xmath444 with a path ( stem ) @xmath445 attached to the cycle at point @xmath446 . in this case",
    "let @xmath421 if @xmath447 , and @xmath423 if @xmath448 , and @xmath449 if @xmath450 .",
    "from here , we drop the subindex @xmath451 to simplify the notation .",
    "since the cycle has odd length , both neighbors of @xmath446 in @xmath54 have to be dotted .",
    "therefore , @xmath452 which is again a contradiction .",
    "* * bicycle : * @xmath279 intersects itself at least twice and will contain two odd cycles @xmath444 and @xmath453 with a path ( stem ) @xmath445 that is connecting them . very similar to blossom , let @xmath421 if @xmath454 , @xmath423 if @xmath448 , and @xmath449 if @xmath455 .",
    "the proof follows similar to the case of blossom .",
    "* case ( ii ) . *",
    "assume that the optimum lp solution @xmath166 is not necessarily integer .",
    "everything is similar to case ( i ) but the algebraic treatments are slightly different .",
    "some edges @xmath167 in @xmath279 can be @xmath456-solid ( @xmath177 ) .",
    "in particular some of the odd edges ( dotted edges ) of @xmath279 can now be @xmath456-solid .",
    "but the subset of @xmath456-solid edges of @xmath279 can be only sub - paths of odd length in @xmath279 . on each such sub - path defining @xmath457 means we are not affecting @xmath166 .",
    "therefore , all of the algebraic calculations should be considered on those sub - paths of @xmath279 that have no @xmath456-solid edge which means both of their boundary edges are dotted .",
    "* * path : * define @xmath420 as in case ( i ) . using the discussion above ,",
    "let @xmath458 be disjoint sub - paths of @xmath279 that have no @xmath456-solid edge .",
    "thus , @xmath459.\\ ] ] since in each @xmath460 the two boundary edges are dotted , @xmath461 and @xmath462 .",
    "the rest can be done as in case ( i ) . *",
    "* cycle , blossom , bicycle : * these cases can be done using the same method of breaking the path and cycles into sub - paths @xmath460 and following the case of path .",
    "every @xmath5-solid edge is a strong - dotted edge . also , every @xmath176-solid edge is a weak - dotted edge .",
    "[ lemma : no_extra_solid ]    from lemma [ lemma : no_extra_dotted ] it follows that the set of dotted edges is a subset of the solid edges . in particular",
    ", no node can be adjacent to more than two dotted edges . now using lemma [ lemma : strong_dotted ]",
    "the set of dotted edges is a disjoint union of isolated edges ( strongly dotted ) and cycles ( weakly dotted edges ) .",
    "if we define a @xmath420 to be zero on all non - dotted edges and @xmath463 when @xmath167 is strongly dotted and @xmath449 for weakly dotted ones .",
    "then clearly @xmath420 is feasible to . on the other hand using lemma [ lemma : no_dotted_means_gamma0 ] we have @xmath464 .",
    "but @xmath50 is dual feasible which means @xmath465 which shows that @xmath420 is also an optimum solution to . by uniqueness assumption on @xmath166",
    "we obtain the desired result .",
    "@xmath50 is an optimum for the dual problem ( [ prob : mwm_dual ] ) [ lemma : gamma_opt ]    lemma [ lemma : gamma_sat_dual_const ] guarantees feasibility .",
    "optimality follows from lemmas [ lemma : no_dotted_means_gamma0 ] , [ lemma : no_extra_dotted ] and [ lemma : no_extra_solid ] .",
    "let @xmath7 be an instance admitting a nb solution @xmath104 with gap @xmath105 , and kt sequence @xmath466 .",
    "denote by @xmath77 the max weight matching of @xmath7 .",
    "then for any @xmath467 and any edge @xmath468 @xmath469 further , for any edge @xmath470 for any @xmath89 , s.t .",
    "@xmath471 , @xmath472 , we have @xmath473    consider @xmath474 .",
    "suppose @xmath475 , i.e. @xmath476 .",
    "we know that @xmath477 .",
    "hence the node slacks for each of @xmath15 and @xmath17 are @xmath101 . hence , @xmath478 . also , @xmath479 .",
    "hence @xmath480    suppose @xmath481 , i.e. @xmath482 .",
    "we know that @xmath483 .",
    "( [ eq : edge_slack ] ) now yields @xmath484 as required .",
    "now consider any edge @xmath470 for any @xmath89 .",
    "consider @xmath485 .",
    "we must have @xmath486 .",
    "we know that @xmath487 so @xmath488 . combining , we have @xmath489 .",
    "similarly , @xmath490 .",
    "this completes the proof .",
    "note : if we include the condition given by eq .",
    "( [ eq : extra_sigma_condition ] ) in the definition of @xmath105 , we have the stronger condition @xmath491 when @xmath492 .",
    "in this section we first prove some basic properties of the natural dynamics in section [ sec : basicconvergence ] .",
    "then in sections [ app : path]-[app : bicycle ] the lemmas that are used for the proofs of convergence on basic structures ( path , blossom , and bicycle ) are proved .",
    "consider message vectors @xmath46 and @xmath219 .",
    "suppose , for @xmath343 , @xmath494 and @xmath495 .",
    "we have @xmath496 where @xmath497 ( @xmath498 ) refers to the offers corresponding to message vector @xmath46 ( @xmath219 ) . [",
    "claim : offer_non_expansion ]    this follows from definition [ eq : off_def ] .",
    "@xmath499 , where @xmath500 is defined as @xmath501 it is easy to check that @xmath502 is continuous everywhere in @xmath503 . also , it is differentiable except in @xmath504 , and satisfies @xmath505 hence , @xmath502 is lipschitz continuous in the @xmath506 norm , with lipschitz constant 1 , leading to ( [ eq : offer_non_expansion ] ) .",
    "note that @xmath23 plays no role in this result . as such we can restate it in light of definition [ def : bo_overloaded ] as : ",
    "if @xmath512 holds for @xmath46 then for all @xmath179 with @xmath15 in @xmath94 and @xmath260 : @xmath513 .",
    "\" we prove this below .    for @xmath269",
    ", we have @xmath514 .",
    "consider @xmath515 .",
    "consider any @xmath516 .",
    "we must have @xmath517 for some @xmath518 . also , @xmath519 .",
    "hence , by eq .",
    "( [ eq : edge_different_l ] ) , we know that @xmath520 .",
    "we have @xmath521 . hence , @xmath522 as needed .",
    "consider @xmath539 .",
    "suppose @xmath540 holds .",
    "take any @xmath541 . by lemma [ lemma : outsideoff_ub ] , for any @xmath516 we know that @xmath542 .",
    "it follows that for any @xmath543 , @xmath544 , since we already had @xmath545 . i.e. @xmath546 holds .",
    "we now proceed by induction on @xmath89 .",
    "suppose we know that @xmath547 .",
    "suppose @xmath548 holds .",
    "in particular @xmath549 holds , and hence @xmath550 also holds .",
    "consider @xmath551 .",
    "we know @xmath552 , so there is @xmath553 .",
    "define @xmath554 .",
    "then @xmath555 .",
    "we know that @xmath556 and @xmath557 .",
    "denote this ` second - best ' offer by @xmath558 , with @xmath559 if @xmath560 .",
    "consider @xmath269 .",
    "take any @xmath515 . by lemma [ lemma : outsideoff_ub ] , for any @xmath581 we know that @xmath582 .",
    "hence , @xmath583 for any @xmath584 .",
    "the result follows from @xmath585 and the update rule [ eq : update ] .",
    "consider @xmath271 .",
    "take any @xmath586 .",
    "we know that @xmath587 for some @xmath588 .",
    "it follows from the assumption that @xmath589 that @xmath590 . for any @xmath591 , we know that @xmath592 .",
    "hence , @xmath593 for any @xmath594 .",
    "the result follows .",
    "[ lemma : rw ] let @xmath597 .",
    "suppose we apply arbitrary boundary conditions @xmath280 .",
    "consider the simplified dynamics on @xmath595 wrt given boundary conditions , a valid path matching @xmath278 and two different initial conditions @xmath287 and @xmath598 .",
    "we have ,          firstly , we write update equations for @xmath605 .",
    "we distinguish between the two ` end ' edges that are at the ends of the path and the other ` interior ' edges .",
    "for an interior non - matching edge @xmath606 , @xmath607      for the end edges , we have @xmath610 . in the other direction , i.e. for @xmath611 , and @xmath612 the relevant update rule from eqs .",
    "( [ eq : matching_simple_path ] ) and ( [ eq : nonmatch_simple_path ] ) is applicable , depending on the type of edge .        for the end edges ,",
    "we define @xmath617 . in the other direction ,",
    "i.e. for @xmath618 , and @xmath619 the relevant update rule from eqs .",
    "( [ eq : matching_simple_path_bound ] ) and ( [ eq : nonmatch_simple_path_bound ] ) is applicable , depending on the type of edge .        in light of claim [ claim : rw_bound ] , it is sufficient to prove that @xmath622 .",
    "now , for a normalization @xmath623 , @xmath624 can be thought of as the probability distribution of a particle performing the following random walk .",
    "the particle is positioned on an edge @xmath625 and has a direction ( right or left ) .",
    "it starts at a uniformly random edge , with uniformly random direction .",
    "if the edge is non - matching , the particle keeps its direction and moves along it to the next edge , with probability @xmath626 .",
    "if the edge is matching , with probability @xmath627 it moves forward maintaining direction , with probability @xmath627 it reverses direction and moves forward one step , and with probability @xmath40 retains its status .",
    "the particle is disappears when crossing any of the ends of the path .",
    "notice that the particle position , when watched on matching edges , is a lazy random walk ( i.e. a simple random walk that keeps its position with probability bounded away from @xmath390 and @xmath5 ) , killed at @xmath390 and @xmath628 , with @xmath629 .",
    "hence @xmath630 is not larger than the survival probability of such random walk , which is bounded as in the claim .",
    "let @xmath7 be an instance and @xmath631 be a path in @xmath7 .",
    "consider two initial conditions @xmath116 , @xmath117 on @xmath7 , such that @xmath632 ( they coincide outside @xmath279 ) and @xmath633 ( @xmath46 dominates @xmath219 on @xmath279 ) .",
    "then , after one iteration @xmath634 . [ lemma : monotonicity ]",
    "consider a node @xmath15 on @xmath279 with @xmath15 even .",
    "we compare the offers received by @xmath15 under @xmath46 and @xmath219 at time @xmath390 . clearly , all offers coming in from @xmath635 are identical . if @xmath636 and @xmath15 even , by condition ( [ def : ordering_odd ] ) and the fact that @xmath637 is non - increasing in @xmath638 and non - decreasing in @xmath639 , we know that @xmath640 . hence , @xmath641 as required",
    ". we can argue similarly for all other types of messages on @xmath279 .",
    "consider the simplified dynamics on a path instance @xmath642 wrt a valid path matching @xmath278 .",
    "let @xmath643 denote the message vector resulting at time @xmath227 with initialization @xmath287 and boundary conditions @xmath644 .",
    "similarly , let @xmath645 denote the message vector resulting at time @xmath227 with initialization @xmath598 and boundary conditions @xmath646 . if @xmath647 and @xmath648 then @xmath649 .",
    "[ lemma : monotonicity_simplified ]    we show that @xmath650 .",
    "this follows for ` internal ' messages from the fact that @xmath651 defined in [ eq : simplified_offers ] is monotonic non - increasing in @xmath652 and non - decreasing in @xmath653 .",
    "@xmath654 ensures that @xmath655 and similarly for the other boundary message .          clearly , @xmath660 .",
    "hence , by lemma [ lemma : monotonicity_simplified ] with @xmath661 , we know that @xmath662 for all @xmath227 . also , from ( [ eq : simp_infty_non_expansion ] ) we have @xmath663 leading to @xmath664 .",
    "combining , for all @xmath309 we have @xmath665        it follows from ( [ eq : bounding_range ] ) that for any @xmath673 and all @xmath309 , @xmath674 combining eqs .",
    "( [ eq : bound_delta_close ] ) , and ( [ eq : ktstruct_fp ] ) , and noting that @xmath675 we obtain our result .",
    "we proceed by induction .",
    "clearly , eq .  ( [ eq : real_path_bound ] ) holds at @xmath151 .",
    "suppose it holds at time @xmath23 .",
    "we prove @xmath676 here , the other inequality follows similarly .",
    "we drop @xmath677 from the notation henceforth for convenience .",
    "define @xmath678 by @xmath679 for all @xmath680 i.e. @xmath678 is @xmath306 after thresholding it to keep it in the valid range @xmath681^{2|e|}$ ] .",
    "clearly , @xmath682 in words , the right inequality says that thresholding can only reduce the positively bounding components of @xmath306 and only increase the negatively bounding components .",
    "let @xmath683 .",
    "note that @xmath684 is a valid message vector .",
    "it follows from ( [ eq : bounding_range ] ) and ( [ eq : path_boundthresh_sandwich ] ) that @xmath512 ( cf .",
    "definition [ def : bo_overloaded ] ) holds for @xmath684 .",
    "we let @xmath684 evolve for one time step under the original dynamics .",
    "let the resulting messages on the path be @xmath685 .",
    "by lemma [ lemma : monotonicity ] and the first inequality in ( [ eq : path_boundthresh_sandwich ] ) , we know that @xmath686 . we show that @xmath687 .",
    "consider a node @xmath15 on @xmath279 with @xmath15 even , @xmath688 .",
    "we show that @xmath689 .",
    "firstly , we know that @xmath690 from the first inequality in ( [ eq : bounding_range ] ) . we have , @xmath691 ( a ) follows from lemma [ lemma : correctmatching ] .",
    "( b ) follows from @xmath692 .",
    "( c ) holds since @xmath693 .",
    "( d ) follows since @xmath694 . from lemma [ lemma : outsideoff_ub ] for all @xmath695 we have , @xmath696 thus , @xmath697 . also , @xmath698 .",
    "hence , @xmath699 .",
    "now consider a node @xmath15 on @xmath279 with @xmath15 odd , @xmath688 .",
    "we show that @xmath700 . under the simplified dynamics , in light of lemma [ lemma : correctmatching ] , we know that @xmath701 where we used @xmath702 , @xmath703 . also , @xmath704 .",
    "hence , @xmath705 .",
    "we also generalize our analysis to the case for use in analysis the cases of blossom and bicycle .",
    "suppose @xmath279 is a subgraph of @xmath717 , with the subset @xmath718 of nodes in @xmath719 appropriately given the aliases @xmath720 .",
    "we define the bounding processes as in section [ subsubsec : path_descent ] on p , using the matching @xmath290 that is the restriction of @xmath77 to @xmath279 .",
    "we prove the following refinement of lemma [ lemma : boundingbounds ] .",
    "[ lemma : boundingbounds_refined ] let @xmath7 be an instance admitting a unique nb solution with gap @xmath105 , and assume its kt sequence to be @xmath317 .",
    "let path @xmath721 be a subgraph of @xmath722 for some @xmath723 , such that @xmath724 is identical to @xmath725 i.e. @xmath279 touches the rest of @xmath88 only at its ends .",
    "assume @xmath143 holds .",
    "also , suppose that @xmath726 for @xmath727 $ ] .",
    "if we denote by @xmath301 the @xmath728 bounding process on @xmath279 , then for any @xmath283 : @xmath729    @xmath730 .",
    "the proof here is almost identical to the one for lemma [ lemma : boundingbounds ] , with @xmath731 replacing @xmath732 .",
    "we use induction on @xmath23 .",
    "the required inequalities at @xmath733 for internal messages are proved exactly as before .",
    "this leaves us with the boundary messages .",
    "we must show @xmath734 .",
    "@xmath735 holds by hypothesis .",
    "thus it suffices to show that @xmath736 if @xmath737 and the result follows from lemma [ lemma : condstrucpersistence ] applied to the initial state @xmath34 for one step along with ( [ eq : bounding_range ] ) .",
    "else , @xmath738 .",
    "two cases arise .    case ( i ) : @xmath739 + in this case , there exists a @xmath740 for some @xmath741 s.t .",
    "@xmath742 . + @xmath743 yields the lower bound in ( [ eq : bestoffer_to0_bound ] ) .",
    "+ for any @xmath744 , we have @xmath745 . for any @xmath746 , lemma [ lemma : outsideoff_ub ] yields @xmath747 .",
    "thus we have the required upper bound .",
    "case ( ii ) : @xmath748 + in this case there is no @xmath749 , and we know that @xmath750 and @xmath751",
    ". the lower bound is trivial in this case .",
    "lemma [ lemma : outsideoff_ub ] leads to @xmath752 .",
    "the upper bound follows .",
    "the inequality @xmath753 follows similarly .",
    "the blossom consists of a ` stem ' and a ` cycle ' .",
    "there is a node shared by the stem and the cycle with its matching partner in the stem ; call this node @xmath390 .",
    "starting at @xmath390 and going down the stem to its anchored end , we label the next node @xmath754 , the one after that @xmath755 and so on up to @xmath756 , where @xmath757 is the number of edges in the stem .",
    "we denote by @xmath758 the path @xmath759 .",
    "the matching of interest in @xmath758 is always @xmath760 with every alternate edge matched .",
    "similarly , starting at @xmath390 and going around the cycle in an arbitrary direction , we label the next node @xmath761 , the one after that @xmath762 , and so on up to @xmath763 after which we return to @xmath390 . here",
    "@xmath764 is the ( odd ) number of edges in the cycle .",
    "the cycle can be thought of as a path that is closed on itself i.e. the two ends of the path are the same .",
    "denote by @xmath765 this path @xmath766 , where @xmath767 and @xmath764 are copies of the node @xmath390 .",
    "the matching of interest in @xmath768 is @xmath769 .",
    "note that both end edges @xmath770 and @xmath771 i.e. the edges @xmath772 and @xmath773 in the blossom are unmatched .",
    "let @xmath7 be an instance admitting a unique nb solution @xmath104 with gap @xmath105 .",
    "suppose @xmath88 corresponds to a blossom i.e. @xmath717 is a blossom with stem @xmath758 and cycle mapped to @xmath768 .",
    "nodes in @xmath719 are appropriately given the aliases @xmath774 .",
    "@xmath767 and @xmath764 are copies of node @xmath390 .",
    "we develop a new bounding process for the path @xmath768 and show that this bounding process ` contracts ' reducing the error on @xmath768 .",
    "the fact that the cycle is odd plays a critical role in this contraction .",
    "next , the analysis from section [ subsubsec : path_descent ] is used to show reduction of the error in @xmath758 .",
    "we iterate the reduction in error in the stem and cycle to show that the overall error in the blossom reduces .",
    "let @xmath777 be the restriction of @xmath77 to @xmath768 .",
    "we know that @xmath778 is odd .",
    "assume @xmath291 , @xmath292 , @xmath293 and @xmath779 be a partition of @xmath780 ( i.e. @xmath781 , @xmath782 ) .",
    "let @xmath783 $ ] .",
    "the @xmath784-bounding process on @xmath768 is the sequence of message assignments @xmath295 produced by the simplified dynamics on @xmath768 wrt @xmath777 , and the boundary conditions @xmath785 with the initial condition ( for @xmath297 ) @xmath786 where @xmath787 is given by eq .",
    "( [ eq : bound_fp ] ) .",
    "the fact that only one of the boundary conditions is different from @xmath302 at each time is instrumental in the ` contraction ' of this bounding process .",
    "the odd length of the cycle is crucial in ensuring that such a bounding process , with a ` helpful ' boundary condition at atleast one end , sandwiches the actual dynamics ( cf .",
    "lemma [ lemma : boundingbounds_pc ] ) .          after taking differences with respect to @xmath302 , @xmath794 ,",
    "the initialization becomes @xmath795 the boundary conditions @xmath796 and the dynamics reduces to ( [ eq : matching_simple_path ] ) , ( [ eq : nonmatch_simple_path ] ) for internal edges , and @xmath797 for boundary edges , for @xmath227 .",
    "thus , in order to prove lemma [ lemma : blossom_cycle_bounding_descent ] , it suffices to prove the lemma [ lemma : pc_rw_bound ] which is then combined with the contraction result in lemma [ lemma : simplified_convergence ] .",
    "consider a path @xmath595 ( with no edge weights ) for @xmath709 odd , a valid path matching @xmath278 and arbitrary partition @xmath779 of @xmath798 .",
    "consider the dynamics on the vector @xmath614 defined by ( [ eq : matching_simple_path_bound ] ) and ( [ eq : nonmatch_simple_path_bound ] ) for interior messages and @xmath799 for boundary messages , with @xmath800 assume the initial condition to be @xmath801 .",
    "then for all @xmath227 we have @xmath802 for some @xmath803 not dependent on @xmath709 .",
    "[ lemma : pc_rw_bound ]      in order to prove eq .",
    "( [ eq : bound2rw ] ) , recall the random walk interpretation of the equations ( [ eq : matching_simple_path_bound ] ) and ( [ eq : nonmatch_simple_path_bound ] ) provided in the proof of lemma [ lemma : rw ] . with the new boundary conditions , @xmath804 is the expected number of particles on edge @xmath3 , and directed from @xmath15 to @xmath17 , when the path system is initially empty ( since @xmath801 ) and a particle is injected with probability @xmath626 at times @xmath805 on edge @xmath806 ( directed to the right ) , and at times @xmath805 on edge @xmath807 ( directed to the left ) .    by invariance of the random walk process under time traslation , we can consider a process that is initiated at time @xmath808 , with particles injected according a partition @xmath809 of @xmath810 . in order to prove eq .",
    "( [ eq : bound2rw ] ) it is sufficient to bound the mass on boundary edges at time @xmath390 , @xmath811 . by monotonicity of this quantity with respect to the particle injection , we can consider an extension @xmath812 of the above partition , and focus on the case @xmath813 , which we will do hereafter .",
    "since the random walk process is left unchanged under left - right inversion of the path ( @xmath709 is odd ) , we have @xmath814 , where @xmath815 is the expected number of particles on edge @xmath3 under boundary condition that inverts @xmath816 and @xmath817 .",
    "it is therefore sufficient to bound @xmath818 notice that , by linearity , @xmath819 is the expected number of particles on edge @xmath806 ( directed towards @xmath390 ) when a particle is injected at each time @xmath820 , @xmath821 , @xmath822 at both ends with probability @xmath626 .",
    "it is easy to check that the stationary distribution is , in this case , of @xmath5 expected particle per edge , yielding @xmath823 .",
    "we are left with the task of showing that @xmath824 .",
    "again by monotonicity with respect to the particle injection , it is sufficient to show that there exist at least one time @xmath825 such that the following two facts are true : @xmath21 a particle injected at time @xmath23 on edge @xmath806 is on edge @xmath826 at time @xmath390 with probability larger than @xmath827 ; @xmath22 a particle injected at time @xmath23 on edge @xmath807 is on edge @xmath826 at time @xmath390 with probability larger than @xmath827 .",
    "recall that the process when watched on matching edges , is a lazy random walk .",
    "therefore , we reduced our problem to proving the following elementary fact about the gambler s ruin model : there exists a time @xmath23 such that both probabilities that the gambler has one dollar and that he has @xmath828 dollars ( @xmath829 being the maximum ) are at least @xmath830 .",
    "it is easy to check that this is the case , for some @xmath831 ( see , for example , @xcite ) .",
    "note that this analysis , which holds for @xmath832 for some @xmath833 , suffices  for any fixed value of @xmath709 , we know that @xmath834 such that a particle injected at time @xmath23 on edge @xmath806 is on edge @xmath826 with non - zero probability and a particle injected at time @xmath23 on edge @xmath835 is on edge @xmath826 with non - zero probability .",
    "consider @xmath677 .",
    "we will use lemma [ lemma : monotonicity_simplified ] to bound @xmath306 from both sides .",
    "let @xmath837 denote the boundary conditions for @xmath838 as defined in ( [ eq : boundary_tplus ] ) , ( [ eq : boundary_tminus ] ) .",
    "let @xmath839 .",
    "let @xmath840 .",
    "( recall that @xmath709 is odd . ) clearly , @xmath841 is a fixed point with respect to the constant boundary conditions @xmath842 .",
    "we have , @xmath843 also , @xmath844 . using lemma [ lemma : monotonicity_simplified ] twice we have @xmath845 recall @xmath846 . the rest of the proof mirrors that of lemma [ lemma : correctmatching ] .",
    "[ lemma : boundingbounds_pc ] let @xmath7 be an instance admitting a unique nb solution with gap @xmath105 , and assume its kt sequence to be @xmath317 , with @xmath318 a blossom mapped to stem @xmath758 and cycle @xmath768 .",
    "suppose @xmath143 holds for some @xmath259 .",
    "also , assume @xmath848 for @xmath849 $ ] .",
    "define @xmath850 denote by @xmath301 the @xmath851 bounding process on @xmath768 .",
    "then for any @xmath283 : @xmath852    the proof is by induction on @xmath23 .",
    "( [ eq : real_pc_bound ] ) holds at @xmath151 by assumptions .",
    "suppose it holds at @xmath23 .",
    "the proof of the required inequalities at @xmath733 for internal messages mirrors the proof of lemma [ lemma : boundingbounds ] .",
    "we must show @xmath734 . by hypothesis , @xmath735 . from claim [ claim : offer_non_expansion ] , we know that @xmath853 case ( i ) :",
    "@xmath854 i.e. @xmath855 + it suffices to show that @xmath856\\end{aligned}\\ ] ] the lower bound follows from @xmath857 .",
    "we have @xmath858 ( [ eq : off_1s_0 ] ) and ( [ eq : off_not1s_0 ] ) give the upper bound .",
    "let @xmath7 be an instance admitting a unique nb solution @xmath104 .",
    "suppose @xmath88 corresponds to a blossom and suppose the @xmath864 holds for some @xmath259 .",
    "we have @xmath865 for some @xmath54 finite .",
    "[ lemma : blossom_stem_bound ]            phase i : + use lemma [ lemma : boundingbounds_pc ] and lemma [ lemma : blossom_cycle_bounding_descent ] with @xmath881 .",
    "we have @xmath882 holds after additional time @xmath883 , where @xmath877 does not depend on @xmath15 . hence , ( [ eq : pc_iterative_bound ] ) holds for @xmath880 .",
    "phase ii : + use lemma [ lemma : boundingbounds_refined ] on @xmath758 with @xmath884 and lemma [ lemma : boundconv ] with @xmath885 on the @xmath886-bounding process to show that ( [ eq : ps_iterative_bound ] ) holds for @xmath880 .",
    "the constant @xmath878 is chosen such that @xmath887 , since @xmath888 .",
    "we use lemma [ lemma : blossom_stem_bound ] to bound the error on @xmath758 .",
    "next we use lemma [ lemma : boundingbounds_pc ] and lemma [ lemma : blossom_cycle_bounding_descent ] with @xmath889 to show that @xmath890 after additional time @xmath891 for finite @xmath872 . finally , we use lemma [ lemma : outgoing_error_bound ] with @xmath892 .",
    "this finally gives that @xmath893 holds for all @xmath894 as required .",
    "an almost identical argument works for the bicycle as for the blossom .",
    "we define @xmath758 as the ` rod ' or ` frame ' of the bicycle , joining the two cycles mapped to @xmath895 and @xmath896 , analogously to the definitions of @xmath758 and @xmath768 for the blossom .",
    "lemma [ lemma : blossom_stem_bound ] can be shown to hold for the bicycle as well , with an almost identical procedure . in this case",
    "also , we have an iterative descent , alternating between the ` rod ' and the two cycles ( which descend simultaneously ) , as per @xmath897 where @xmath724 .",
    "phase i works by using lemmas [ lemma : boundingbounds_pc ] and lemma [ lemma : blossom_cycle_bounding_descent ] _ simultaneously for both @xmath895 and @xmath896_. phase ii works exactly as before .",
    "we first use lemma [ lemma : blossom_stem_bound ] .",
    "next , we use lemma [ lemma : boundingbounds_pc ] and lemma [ lemma : blossom_cycle_bounding_descent ] simultaneously for each of @xmath895 and @xmath896 .",
    "finally , we use lemma [ lemma : outgoing_error_bound ] . note that we thus prove an identical bound on the descent time of a bicycle as for a blossom ."
  ],
  "abstract_text": [
    "<S> bargaining networks model the behavior of a set of players that need to reach pairwise agreements for making profits . </S>",
    "<S> nash bargaining solutions are special outcomes of such games that are both stable and balanced . </S>",
    "<S> kleinberg and tardos proved a sharp algorithmic characterization of such outcomes , but left open the problem of how the actual bargaining process converges to them . </S>",
    "<S> a partial answer was provided by azar et al . who proposed a distributed algorithm for constructing nash bargaining solutions , but without polynomial bounds on its convergence rate . </S>",
    "<S> in this paper , we introduce a simple and natural model for this process , and study its convergence rate to nash bargaining solutions .    at each time step , each player proposes a deal to each of her neighbors . </S>",
    "<S> the proposal consists of a share of the potential profit in case of agreement . </S>",
    "<S> the share is chosen to be balanced in nash s sense as far as this is feasible ( with respect to the current best alternatives for both players ) . </S>",
    "<S> we prove that , whenever the nash bargaining solution is unique ( and satisfies a positive gap condition ) this dynamics converges to it in polynomial time .    </S>",
    "<S> our analysis is based on an approximate _ decoupling _ phenomenon between the dynamics on different substructures of the network . </S>",
    "<S> this approach may be of general interest for the analysis of local algorithms on networks . </S>"
  ]
}
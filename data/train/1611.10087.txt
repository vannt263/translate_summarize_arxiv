{
  "article_text": [
    "oblivious transfer ( ot ) is a very important building block for various cryptographic protocols .",
    "oblivious transfer exists in two flavours .",
    "the first one , called _ all - or - nothing _",
    "ot provides a way to transfer a message from alice to bob in such a way that alice , as the sender , does not know whether bob did receive the message .",
    "more precisely , alice sends an encoded message @xmath1 to bob .",
    "bob can decode the message with probability @xmath2 .",
    "importantly , alice shall not learn whether bob was able to read the message , thus the name _",
    "oblivious_.    it is a well - known fact that oblivious transfer can not be executed with unconditional security neither within the classical domain , nor in quantum cryptography .",
    "classically , the security is usually assured by computational complexity arguments based on hardness of factoring ( see _ e.g. _ @xcite ) .",
    "this , however makes the existing protocols vulnerable against attacks using quantum computers utilizing shor s factoring algorithm @xcite .",
    "this naturally motivated the research towards quantum algorithms safe against quantum attacks , such as the result of souto _ et .",
    "there the authors presented a quantum computationaly secure protocol for oblivious transfer under the assumption of at most few - qubits measurements available .",
    "shortly afterwards he in @xcite pointed out the incomplete security of this protocol , mainly due to the fact that alice can assure in certain runs that bob does not receive the message .",
    "souto _ et . al .",
    "_ replied @xcite by arguing that such a partially limited security of the protocol is not of a significant hinder for its use .",
    "although this statement might be true for a subclass of utilizations of this oblivious transfer protocol , for other classes this is certainly not the case .",
    "one of the later examples is its possible utilization in a reduction to the _ 1-out - of-2 _ oblivious transfer protocol .    in 1-out - of-2",
    "oblivious transfer , the task is slightly modified : alice sends two different messages @xmath3 and @xmath4 .",
    "the aim of the protocol is to assure that bob is be able to read exactly one them , whereas alice shall not learn which message was accessed by bob . as shown by the seminal work by crpeau @xcite , all - or - nothing ot and 1-out - of-2 ot protocols are equivalent in the sense that one can be efficiently used to implement the other .",
    "this however only works if the starting protocol is perfectly secure , which is not the case for the protocol introduced in @xcite . as correctly pointed out in @xcite , using the protocol of souto _ et .",
    "together with crpeaus reduction leads to a complete loss of security .",
    "this might have two possible causes  either the protocol of @xcite is unsuitable for reduction to 1-out - of-2 ot protocol per se , or the crpeaus reduction is not appropriate for this flawed protocol . in this paper",
    "we show the latter is the case  we introduce an improved reduction that maintains the level of security of the original quantum protocol throughout the reduction .",
    "this reduction has however a more general use : it shows that the two flavors of ot protocols are equivalent even in the presence of reasonably bounded security flaw .",
    "the paper is organized as follows : in the second section we briefly introduce the protocol from @xcite as well as where its security flaw comes from . in the third section",
    "we introduce a subroutine protocol called _ element choosing protocol _ , which allows a choice of an element from a set shared between alice and bob in such a way that neither of them can influence the choice significantly .",
    "interestingly , this protocol is based on the flawed ot protocol as well .",
    "the fourth section is devoted to the definition of the 1-out - of-2 ot protocol itself and the fifth one to its security analysis . in the last section",
    "we conclude our findings .",
    "first we briefly analyze the protocol introduced in @xcite .",
    "alice wants to send a message , here a bit string @xmath1 , to bob , where bob shall only with probability @xmath2 learn the whole message , otherwise he shall not learn ( almost ) anything .",
    "analysis in @xcite correctly shows that    1 .   if both alice and bob are honest , bob receives the message @xmath1 with probability @xmath2 2 .",
    "bob knows whether he got the message or not 3 .",
    "bob s cheating is limited to a negligible probability 4 .",
    "alice does not know whether bob received the message if she was sending it honestly .    however ,",
    "as correctly pointed out by he in @xcite , alice can perform a more sophisticated attack .",
    "she can decide to use incorrect message in the last step of the protocol , which causes bob s failure to obtain the correct message .",
    "bob can not check whether alice was honest in a single run of the protocol . on the other hand , alice can not increase the probability of bob to obtain the correct message above @xmath5 .",
    "thus , every run of the protocol in which alice decides to cheat causes a decrease of the frequency of bob s successes below @xmath0 .",
    "thus , alice and bob can agree on a constant @xmath6 being a security parameter . with @xmath7 repetitions of the protocol",
    ", bob will terminate the cooperation with alice if he receives less than @xmath8 messages from alice . if alice wants to avoid termination of the protocol , she can act dishonestly only in up to @xmath9 fraction of rounds , which can be made arbitrary small with increasing @xmath7 . as shown in @xcite ,",
    "this is fine for some applications of the protocol , but certainly not for all .",
    "next we show why the reduction to 1-out - of-2 ot protocol due to crpeau @xcite fails .",
    "the original reduction from all - or - nothing to 1-out - of-2 oblivious transfer protocol from @xcite works as follows :    1 .",
    "alice chooses at random @xmath7 bits @xmath10 .",
    "2 .   for each of these @xmath7 bits",
    ", alice uses the all - or - nothing ot protocol to disclose the bit @xmath11 to bob .",
    "3 .   bob selects indices @xmath12 and @xmath13 where @xmath14 with @xmath15 .",
    "additionally , it is required that he knows @xmath16 for each index @xmath17 .",
    "if he did nt receive enough messages to select @xmath18 , the protocol is terminated .",
    "4 .   bob sends @xmath19 if he wants to read @xmath3 and @xmath20 otherwise .",
    "alice computes @xmath21 and @xmath22 .",
    "alice returns to bob @xmath23 and @xmath24 .",
    "bob computes @xmath25 and uses it to get his secret bit @xmath3 or @xmath4 according to his previous choice .    the main idea behind",
    "this reduction is hidden in the step @xmath26 .",
    "if number @xmath7 of the messages sent to bob is large , then it is highly improbable that he will receive less than @xmath27 of the messages correctly . on the other hand",
    ", it is equally improbable that he will receive more than @xmath28 of the messages correctly . therefore , except for a marginal probability , he will be able to produce a subset @xmath18 consisting of one third of rounds for which he knows all the messages , but not both subsets @xmath18 and @xmath29 .",
    "later alice encrypts two bits : one using the messages from @xmath18 as the key , the second using messages from @xmath29 , knowing that bob will be able to decrypt only one .",
    "if the underlying all - or - nothing ot is not compromised , alice will not know which bit bob can decrypt , as she has no information on which of the two sets consist of messages bob has successfully received .",
    "however , as it was pointed out in @xcite , the situation changes drastically if alice can cheat , even to a small extent , as in protocol of @xcite .",
    "alice can choose @xmath6 rounds where she knows bob did not receive the correct message .",
    "when bob chooses rounds for the subset @xmath29 , he can choose roughly @xmath30 indices of received messages ( bob received roughly @xmath31 messages , however he needs @xmath27 of them for @xmath18 ) , but needs to select another roughly @xmath30 indices belonging to the messages he did not receive .",
    "note that each out of the @xmath6 dishonest rounds will be chosen with probability at least @xmath32 .",
    "the probability that bob chooses at least one of these rounds as a member of @xmath29 is thus can be upper bounded as @xmath33 , which quickly approaches unity with increasing @xmath6 .",
    "if there is at least a single element from @xmath6 in @xmath29 , alice can with certainty learn whether @xmath19 or @xmath20 .",
    "thus she can learn which bit bob intents to read with only negligible probability to be caught .      in what follows we analyse the security of different two different protocols implemented with the help of flawed ot protocol of @xcite , where the first analysed protocol is used as a subroutine for the second one .",
    "we are in principle interested in three basic parameters : the probability of the protocols to fail if both parties are honest , denoted @xmath34 , and the probabilities that alice or bob cheat successfully , @xmath35 and @xmath36 respectively ( with the other party being honest ) . in what follows we evaluate the parameters of the protocol depending on these three output parameters . to make the analysis easier to access",
    ", we set @xmath37 and @xmath38 , to get a single security parameter of the respective protocol .",
    "first we introduce a subroutine protocol which uses a possibly compromised all - or - nothing ot as a primitive and allows the parties to choose one element from some large set @xmath39 with cardinality @xmath40 .",
    "this set has two subsets @xmath41 and @xmath42 with @xmath43 and @xmath44 elements respectively .",
    "alice wins if an element from @xmath45 is chosen and bob wins if an element from @xmath46 is chosen .",
    "our goal is to have a protocol in which , with high probability , neither of them wins , thus the chosen element does not belong to either @xmath45 or @xmath46 .",
    "the protocol is defined as follows :    1 .",
    "alice and bob agree on a parameter @xmath47 .",
    "parties count the elements of @xmath39 and label them with integers from @xmath48 to @xmath49 .",
    "alice chooses at random @xmath40 messages @xmath50 , where each of the messages consists of @xmath51 bits .",
    "alice will choose @xmath51 large enough so that the probability of guessing @xmath11 will be low enough in comparison to any other probability within the protocol .",
    "4 .   alice sends each message @xmath11 with the all - or - nothing ot protocol from @xcite .",
    "bob replies by publishing @xmath52 messages he received correctly . if he is not able to do so , the protocol is aborted .",
    "indices of the published @xmath52 messages are used as the new set @xmath39 .",
    "alice and bob repeat points 2 - 5 of this protocol @xmath53 times , in each round keeping an @xmath54 fraction of previously held messages ; they will end up with @xmath55 messages .",
    "alice randomly chooses one of these messages to be the outcome of the protocol .",
    "the protocol aborts if bob announces incorrectly any received message ( which shall not happen for honest players ) or if bob is not able to announce @xmath52 messages in some round . at the end of the protocol , alice and bob choose a single message @xmath11 .",
    "if the players are honest , the probability of failure in the first round @xmath56 is bounded from above by @xmath57 where we used the chernoff bound for @xmath58 . to further simplify the notation we introduce a new symbol @xmath59 , leading to a failure probability of @xmath60 recall that after the first stage , alice and bob will keep @xmath52 indices from the set @xmath39 .",
    "after @xmath53 rounds , the probability of failure of the protocol will be upper bounded by the sum of probability of failures in each respective run @xmath61 where we used @xmath62 , which is a reasonable expectation , otherwise the protocol would fail with high probability already in the first round .",
    "the probability of selecting an index from @xmath46 in the last round ( after @xmath53 round ) is given by @xmath63 , where @xmath64 is the number of messages left from @xmath46 in the last step of the protocol .",
    "we can neglect the probability that bob can pretend to get a message he did not receive ( which can be achieved by choosing a sufficiently high @xmath51 )",
    ". then the number of bob s winning messages is halved on average in each round , as the probability of each message to reach bob is @xmath2 .",
    "thus , the cheating probability of bob is bounded as @xmath65 bob has in fact no possibility of active cheating .",
    "alice can cheat , if there is at least one message from @xmath45 left at the end of the protocol , by simply choosing this message .",
    "the probability of this happening , if she is not actively cheating in the previous runs of the protocol is @xmath66 .",
    "however , in each round she can reduce the number of messages she sends to bob honestly . in this way she can make sure that some messages @xmath67 are not received by bob , thus increasing the chance that bob will choose some of the received messages from @xmath45 for the next round .",
    "every such attempt increases the probability that the protocol fails .",
    "here we upper bound the probability that alice can cheat by showing that either her cheating probability , or the success probability of the whole protocol , are strictly upper bounded .",
    "let us divide the possible strategies of alice in each round into two classes .",
    "the first class contains strategies where she sends less than @xmath68 fraction of all the messages in the given round honestly  we call these strategies _ hard _ and the remaining ones we call _ soft_. in a hard strategy , in principle , alice can send honestly only messages for indices in @xmath45 , however , provided that @xmath45 is small enough , the probability that bob will correctly receive enough messages would be extremely small .    for each round in which alice uses a hard strategy ,",
    "the failure probability of the protocol will be multiplied by @xmath2 ( or higher ) due to the fact that bob will receive enough messages for a reply with probability less than @xmath2 . for each round of a soft strategy ,",
    "at least half of the messages will not be received by bob , so the size of the alice s winning set will be reduced by at least @xmath2 .",
    "therefore with @xmath69 rounds of hard strategy and @xmath70 rounds of a soft one , the protocol successfully passes with @xmath71 and if it passes , alice can cheat with probability @xmath72 @xmath73 .",
    "so in total the probability for alice to successfully cheat is bounded by @xmath74    it is clear that we can not always choose @xmath54 and @xmath53 in such a way that both failure and cheating probabilities will be low .",
    "as this protocol is only a subroutine , we will have to carefully choose parameters @xmath40 , @xmath43 and @xmath44 in order to allow the protocol to work correctly .",
    "now we are ready to formulate the main protocol . in the protocol",
    "both @xmath3 and @xmath4 are single bit messages denoted @xmath75 and @xmath76 .",
    "let us denote @xmath77 the choice of the bit wished by bob  if he wants to learn @xmath78 , he chooses @xmath79 , otherwise he chooses @xmath80 .    1",
    ".   alice and bob agree on the security parameters @xmath81 and @xmath82 .",
    "alice first splits her messages @xmath75 and @xmath76 into groups of random bits @xmath83 and @xmath84 such that @xmath85 and @xmath86 .",
    "3 .   for every pair @xmath83 and @xmath84 , alice chooses @xmath7 single bit messages @xmath87 .",
    "4 .   for each of these @xmath7 messages",
    ", alice uses the all - or - nothing ot protocol to disclose them to bob .",
    "the protocol is terminated if bob did not receive at least @xmath88 messages .",
    "let us denote @xmath89 the set of indices of messages that bob received correctly .",
    "bob chooses @xmath90 pairs of indices @xmath91 , such that @xmath92 if @xmath79 , otherwise he chooses @xmath93 . also , for each pair bob chooses a single random bit @xmath94 .",
    "if @xmath95 , he switches the order of the pair @xmath96 , otherwise he keeps the order intact . after this operation",
    ", bob publishes the set of pairs , but keeps @xmath94 secret . 6 .",
    "alice and bob use the element choosing protocol described above with @xmath39 being the set of pairs of indices announced by bob .",
    "therefore , @xmath97 . let us denote the pair chosen @xmath98 .",
    "bob announces the bit @xmath99 so that alice can switch the order of the selected pair if @xmath100 ; let us denote the final key @xmath101 .",
    "alice sends @xmath102 and @xmath103 to bob .",
    "since he knows one of the messages @xmath104 or @xmath105 , he can calculate @xmath106 of his choice .",
    "steps 2 - 6 are repeated @xmath81 times for all pairs of @xmath83 and @xmath84 . to obtain bit @xmath107",
    "in which bob is interested , he needs to learn all the bits @xmath106 .",
    "the protocol can fail in two different parts .",
    "first , in the step 4 , bob might receive less than @xmath90 messages correctly . for honest parties",
    "this probability is bounded by @xmath108 .",
    "in step 6 the element choosing protocol might fail as well , with the probability ( [ pf_ech ] ) derived in previous section . plugging in @xmath109",
    "we get @xmath110 @xmath111 , recalling @xmath112 .",
    "so the probability of failure in any particular round @xmath113 of the protocol is bounded by @xmath114 for @xmath115 what is a condition on the parameters which will be taken into account by choosing security parameters of the protocol .",
    "further we can bound @xmath116 using @xmath117 . using another condition on the parameters@xmath118",
    "we get @xmath119 thus the final probability to abort an honest protocol is bounded by the sum of probability of failure for individual rounds reading @xmath120      it is fairly hard for bob to successfully cheat in the protocol . to obtain both bits @xmath75 and @xmath76",
    ", he has to learn both bits @xmath83 and @xmath84 in all @xmath81 rounds of the main protocol .",
    "let us here analyze a single round @xmath113 .    from honest alice , bob will successfully receive on average @xmath31 messages , thus the probability that he receives more than @xmath121 is less than @xmath122 .",
    "so with high probability , he can produce no more than @xmath123 pairs of indices , where he received both corresponding messages .",
    "now he has to force the element choosing protocol to select one of these pairs , which happens with a probability ( [ pb_ech ] ) @xmath124    for @xmath125 what is just a more strict limitation on @xmath82 comparing to ( [ beta_bound1 ] ) .",
    "probability of cheating in all rounds of the protocol is thus limited to @xmath126      for alice the cheating is seemingly easier .",
    "it is enough for her to learn the choice of bob in a single round of the protocol .",
    "she can do it by sending a portion of messages that are unreadable to bob .",
    "if one of these messages appears as a pair @xmath101 in one of the @xmath81 instances of the element choosing protocol in step 6 , alice learns that the corresponding bit is not the one that bob is interested in .",
    "similarly to the case of bob , alice can send in each round of the protocol not more than @xmath127 garbage messages , otherwise the success probability will be lower than @xmath122 .",
    "she wins if she selects in the element choosing protocol a pair where one of her garbage messages is present , what happens with probability @xmath128 .",
    "the total probability of cheating is upper bounded by the sum of probabilities in each round@xmath129",
    "let us now analyze how to achieve security of the whole protocol .",
    "we will define the protocol as secure , if the probabilities of cheating of both bob and alice will be bounded by a given constant @xmath130@xmath131 at the same time we expect the protocol to have a reasonable chance to finish successfully if the parties are honest , hence we expect @xmath132    in the following paragraphs we will analyze these conditions with the aim of finding a suitable choice of parameters that fulfill them . equation ( [ pf ] ) is satisfied if both@xmath133 from ( [ pf1 ] ) we can set @xmath134 and from ( [ pf2 ] ) we get @xmath135 plugging these into ( [ pa ] ) we get@xmath136 which is satisfied if @xmath137 where we used @xmath138 .",
    "this can be further plugged into ( [ pb])@xmath139   ^{c}\\leq\\varepsilon .\\label{logbound}\\ ] ] let us now analyze ( [ logbound ] ) in more detail .",
    "a part of this inequality has the form @xmath140 let us now , for a fixed choice of @xmath81 and @xmath130 , implicitly define @xmath141 by @xmath142 clearly , for fixed @xmath81 and @xmath130 all @xmath143@xmath144 this is satisfied for all @xmath143 such that@xmath145   ^{c}\\leq\\varepsilon.\\ ] ] further we know that for all @xmath146@xmath147 using this we can state that ( [ logbound ] ) will be satisfied for all @xmath148 if @xmath149 hence we can choose @xmath150 plugging ( [ c ] ) back to ( [ x0 ] ) we get an implicit definition of @xmath53 @xmath151 which can be efficiently solved numerically .",
    "we can further plug ( [ c ] ) into ( [ beta1 ] ) and get @xmath152 we also can use this result and ( [ dzeta1 ] ) to define @xmath153@xmath154 which involves the numerical solution for @xmath53 . for obtaining a simpler formula we utilize ( [ x ] ) again and get @xmath155 thus fulfilling the condition ( [ dzeta_bound ] ) . and finally we get the solution for @xmath7 by plugging everything into ( [ k1])@xmath156 comparing ( [ beta ] ) and ( [ k ] ) it is obvious that ( [ beta_bound2 ] ) is satisfied for all @xmath148 .",
    "this concludes the proof of the security of the protocol  for a given @xmath130 , we can choose parameters of the protocol according to ( [ c]-[k ] ) to be sure that the failure probability will not be larger than @xmath2 and cheating of both alice and bob will be bounded by @xmath130 .",
    "it is important to stress here that this choice is a mere proof of existence of suitable set of parameters of the protocol  if we would be interested in efficient values , numerical search within the constrains ( [ pa]-[pf ] ) would certainly be more appropriate .",
    "oblivious transfer protocols are important building blocks in cryptography .",
    "perfect all - or nothing ot protocol can be used to construct a 1-out - of-2 ot protocol ( and vice - versa ) , but this is in general not true for protocols with security security flaw as the one in @xcite . and as unconditionally secure ot protocols provably do not exist , it is of utmost importance to investigate protocols with security based on reasonable assumptions .",
    "in this paper we have introduced an improved version of the reduction protocol from all - or - nothing to 1-out - of-2 ot protocol .",
    "contrary to the existing results , this reduction is immune against a security loophole in the original protocol allowing alice to learn partial one - sided information in a small fraction of the protocol runs .",
    "this , in particular , allows the use of the protocol suggested in @xcite for such a reduction .",
    "but our result is more general , opening the possibility for utilizing other imperfect implementations of all - or - nothing ot protocols as well .",
    "mpl and mpi were supported by the project vega 2/0043/15 .",
    "mpl was supported by the czech science foundation gar project p202/12/1142 and mpi by the sas schwarz fund .",
    "mpa acknowledges the support form ncn grant no .",
    "2014/14/e / st2/00020 .          c. crpeau , equivalence between two flavours of oblivious transfers , in advances in cryptology : crypto212287 , edited by c. pomerance , lecture notes in computer science vol .",
    "293 ( springer , berlin , 1988 ) , p. 350 ."
  ],
  "abstract_text": [
    "<S> oblivious transfer ( ot ) is an important tool in cryptography . </S>",
    "<S> it serves as a subroutine to other complex procedures of both theoretical and practical significance . </S>",
    "<S> common attribute of ot protocols is that one party ( alice ) has to send a message to another party ( bob ) and has to stay oblivious on whether bob did receive the message . </S>",
    "<S> specific ( ot ) protocols vary by exact definition of the task  in the _ all - or - nothing _ </S>",
    "<S> protocol alice sends a single bit - string message , which bob is able to read only with @xmath0 probability , whereas in _ 1-out - of-2 _ ot protocol bob reads one out of two messages sent by alice . </S>",
    "<S> these two flavours of protocol are known to be equivalent . recently a computationally secure all - or - nothing ot protocol based on quantum states was developed in [ a. souto _ et . </S>",
    "<S> al . _ , </S>",
    "<S> pra * 91 * , 042306 ] , which however can not be reduced to 1-out - of-2 ot protocol by standard means . here </S>",
    "<S> we present an elaborated reduction of this protocol which retains the security of the original . </S>"
  ]
}
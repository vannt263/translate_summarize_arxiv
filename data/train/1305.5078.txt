{
  "article_text": [
    "the pleasure of listening to music can be very enjoyable , especially if our favorite instruments are playing in the piece of music we are listening to .",
    "therefore , it is desirable to have a tool to find melodies played by a specified instrument .",
    "the task of automatic identification of an instrument , playing in a given audio segment , lies within the area of interest of music information retrieval .",
    "this area has been broadly explored last years @xcite , @xcite , and as a result we can enjoy finding pieces of music through query - by - humming @xcite , and identify music through query - by - example , including excerpts replayed on mobile devices @xcite , @xcite . however ,",
    "recognition of instruments in real polyphonic recordings is still a challenging task ( see e.g. @xcite , @xcite , @xcite ) .    in this paper , we address the recognition of plural instruments in real music recordings of a jazz band , and our goal is to identify possibly all instruments playing in each audio frame ; polyphony in these recordings reaches 4 instruments .",
    "identification of instruments is performed in short frames , with no assumption on onset ( start ) nor offset ( end ) time , nor pitch etc .",
    ", which is often the case in similar research , thus our methodology requires no preprocessing nor initial segmentation of the data , and the computation can be fast .",
    "random ferns are classifiers introduced in 2007 @xcite and named as such in 2008 @xcite .",
    "this classification method combines features of decision trees and bayesian classifiers .",
    "random ferns have been applied so far in image classification tasks , including video data @xcite , @xcite , and they have also been adjusted to be used on low - end embedded platforms , such as mobile phones @xcite . since many audio applications are used in mobile environment , it is advisable to consider such platforms as well .",
    "this is why we decided to use random ferns .",
    "additionally , we would like to compare the performance of random ferns ( rfe ) with random forests ( rfo ) , which yielded quite good results in our previous research @xcite , @xcite , @xcite .",
    "rfe are simpler and more computationally efficient than rfo @xcite .",
    "we want to use a simpler algorithm because , as more computationally efficient , it can possibly be applied to be used on mobile devices , with limited computational power ( utilizing slower cpus and working on battery power ) .",
    "we hope that the accuracy of rfe is not much worse , and therefore it is worth using them and possibly implement on mobile devices , to get quick results without communication with a cloud for cloud computing ( which is an option which can be chosen for low - end platforms ) , thus achieving low latency .",
    "also , such a method would be useful for massive calculations for indexing purposes , e.g. in archives , to achieve fast computation and get quick results which are a good approximation of the results that would be obtained using more computationally expensive search .",
    "the classifiers applied in our research include random ferns and random forests .",
    "rfo performed quite well in the research on instrument identification we performed before @xcite , but their training is time consuming , whereas the training of rfe is faster .",
    "the computational complexity of classification performed using the pre - trained classifiers is similar ( linearly proportional to the number of trees / ferns and to their average height ) , but in the case of ferns there is less branching and memory accesses which should yield faster classification .",
    "rfo is a classifier consisting of a set of weak , weakly correlated and non - biased decision trees , constructed using a procedure minimizing bias and correlations between individual trees @xcite .",
    "each tree is built using a different @xmath0-element bootstrap sample of the training @xmath0-element set .",
    "the elements of the bootstrap sample are drawn with replacement from the original set , so roughly 1/3 ( called _ out - of - bag _ ) of the training data are not used in the bootstrap sample for any given tree . for a @xmath1-element feature vector , @xmath2 attributes ( features )",
    "are randomly selected at each stage of tree building , i.e. for each node of any particular tree in rfo ( @xmath3 , often @xmath4 ) .",
    "gini impurity criterion ( gic ) is applied to find the best split on these @xmath2 attributes .",
    "gic measures how often an element would be incorrectly labeled if randomly labeled according to the distribution of labels in the subset ; the best split minimizes gic .",
    "each tree is grown to the largest extent possible , without pruning . by repeating this randomized procedure @xmath5 times ,",
    "a collection of @xmath5 trees is obtained , constituting a rfo .",
    "classification of an object is done by simple voting of all trees . in this work ,",
    "the rfo implementation from the r @xcite package randomforest @xcite was used .",
    "the computational complexity @xmath6 of training a rfo is @xmath7 where @xmath8 is the number of objects , @xmath2 is the number of attributes tested for each split and @xmath5 is the number of trees in the forest ; the computational complexity @xmath9 where @xmath10 is the average height of a tree in the forest .",
    "a fern is defined as a simplified binary decision tree of a fixed height @xmath11 ( called a _",
    "depth _ of a fern ) and with a requirement that all splitting criteria at a certain depth @xmath12 ( @xmath13 ) are the same .",
    "each leaf node of a fern stores the distribution of classes over objects that are directed to this node .",
    "this way a fern can be perceived as a @xmath11-dimensional array of distributions , indexed by a vector of @xmath11 splitting criteria values , see figure  [ fig : fern ] .    ) , thus the fern tree is equivalent to a 2-dim array ( _ right _ ) .",
    "the leaf nodes contain the counts of objects of each class instead of just the names of dominating classes , as in classic decision trees .",
    ", scaledwidth=70.0% ]        the fern forest is a collection of @xmath14 ferns .",
    "when classifying a new object , each fern in a forest returns a vector of probabilities that this object belongs to particular decision classes .",
    "ferns are treated as independent , thus all those vectors are combined by simple multiplication and the final classification results for the forest is a class which gets the highest probability , see figure  [ fig : ferns ] .",
    "while the original rfe implementation @xcite was written for a problem of object detection in images , we use the rfe generalization implemented in the r @xcite package rferns @xcite ; it trains the fern forest model in the following way .",
    "first , @xmath0 intermediate training sets called _ bags _ are created by drawing objects with replacement from the training set , each bag being of the same size as the original set .",
    "next , each bag is used to train a fern .",
    "all @xmath11 splits are created purely at random ; an attribute is randomly selected and then the splitting threshold is set as a mean of two randomly selected values of this attribute .",
    "the distributions of classes in leafs are calculated on a bag with adding 1 for each class ( i.e. with a dirichlet prior ) ; this way the problem of undefined distributions in leafs containing no objects is resolved .",
    "the computational complexity @xmath15 of training a rfe model is @xmath16 where @xmath11  depth of ferns , @xmath17  number of objects , @xmath18  number of ferns ; the computational complexity @xmath19 of classifying one sample is @xmath20",
    "the identification of musical instruments is performed for short frames of audio data , which are parametrized before applying classifiers for training or testing .",
    "no assumptions on audio data segmentation or pitch extraction have been made .",
    "therefore , no multi - pitch extraction is needed , thus avoiding possible errors regarding labeling particular sounds in polyphonic recording with the appropriate pitches .",
    "the feature vector consists of basic features , describing properties of an audio frame of 40 ms , and additionally difference features , calculated as the difference between the given feature but calculated for a 30 ms sub - frame starting from the beginning of the frame and a 30 ms sub - frame starting 10 ms later .",
    "identification of instruments is performed frame by frame , for consequent frames , with 10 ms hop size .",
    "fourier transform was used to calculate spectral features , with hamming window .",
    "most of the features we applied represent mpeg-7 low - level audio descriptors , which are often used in audio research @xcite .",
    "our feature vector consists of the following 91 parameters @xcite :    * _ audio spectrum flatness _ , _ _",
    "flat__@xmath21__flat__@xmath22  a multidimensional parameter describing the flatness property of the power spectrum within a frequency bin for selected bins ; 25 out of 32 frequency bands were used ; * _ audio spectrum centroid _  the power weighted average of the frequency bins in the power spectrum ; coefficients are scaled to an octave scale anchored at 1 khz @xcite ; * _ audio spectrum spread _  rms ( root mean square ) value of the deviation of the log frequency power spectrum wrt .",
    "_ audio spectrum centroid _ @xcite ; * _ energy _  energy ( in log scale ) of the spectrum of the parametrized sound ; * _ mfcc _  a vector of 13 mel frequency cepstral coefficients .",
    "the cepstrum was calculated as the logarithm of the magnitude of the spectral coefficients , and then transformed to the mel scale , to better reflect properties of the human perception of frequency .",
    "24 mel filters were applied , and the obtained results were transformed to 12 coefficients .",
    "the @xmath23 coefficient is the 0-order coefficient of mfcc , corresponding to the logarithm of the energy @xcite ; * _ zero crossing rate _ ; a zero - crossing is a point where the sign of the time - domain representation of the sound wave changes ; * _ roll off _",
    " the frequency below which an experimentally chosen percentage equal to 85% of the accumulated magnitudes of the spectrum is concentrated ; parameter originating from speech recognition , where it is applied to distinguish between voiced and unvoiced speech ; * _ nonmpeg7 - audio spectrum centroid _  a linear scale version of _ audio spectrum centroid _ ; * _ nonmpeg7 - audio spectrum spread _  a linear scale version of _ audio spectrum spread _ ; * changes ( measured as differences ) of the above features for a 30 ms sub - frame of the given 40 ms frame ( starting from the beginning of this frame ) and the next 30 ms sub - frame ( starting with 10 ms shift ) , calculated for all the features shown above ; * _ flux _  the sum of squared differences between the magnitudes of the dft points calculated for the starting and ending 30 ms sub - frames within the main 40 ms frame ; this feature by definition describes changes of magnitude spectrum , thus it is not calculated in a static version .",
    "mixes of the left and right channel were taken if the audio signal was stereophonic . since the recognition of instruments is performed on frame - by - frame basis , no parameters describing the entire sound are present in our feature vector .",
    "this feature set was already used for instrument identification purposes using rfo , requiring no feature selection @xcite , and yielded good results , so we decided to use this feature set in both rfo and rfe classification .",
    "the audio data we used for both training and testing represent recordings in 44.1khz/16-bit format .",
    "training was based on three repositories of single , isolated sounds of musical instruments , namely mcgill university master samples @xcite , the university of iowa musical instrument samples @xcite , and rwc musical instrument sound database @xcite .",
    "clarinet , trombone , and trumpet sounds were taken from these repositories . additionally , we used sousaphone sounds , recorded by r. rudnicki in one of his recording sessions @xcite , since no sousaphone sounds were available in the above mentioned repositories .",
    "training data were in mono format in the case of rwc data and sousaphone , and stereo for the rest of the data .",
    "the testing data originate from jazz band stereo recordings by r. rudnicki @xcite , and include the following pieces played by clarinet , trombone , trumpet , and sousaphone ( i.e. , our target instruments ) :    * mandeville by paul motian , * washington post march by john philip sousa , arranged by matthew postle , * stars and stripes forever by john philip sousa , semi - arranged by matthew postle  movement no . 2 and movement no .",
    "3 .    to prepare our classifiers to work on larger instrument sets , training data also included sounds of 5 other instruments that can be encountered in jazz recordings : double bass , piano , tuba , saxophone , and harmonica .",
    "these sounds were added as additional sounds in training mixes with the target instruments .",
    "the goal of training of our classifiers is to identify plural classes , each representing one instrument .",
    "we use a set of binary classifiers ( rfe or rfo ) , where each set ( which we call a _ battery _ ) is trained to identify whether a target instrument is playing in an audio frame or not .",
    "the target classes are clarinet , trombone , trumpet , and sousaphone , i.e. instruments playing in the analyzed jazz band recordings .",
    "the classifiers are trained to identify target instruments when they are accompanied by other instruments , and this is why we use mixes of instrument sounds as input data in training .    when preparing training data , we start with single isolated sounds of each target instrument . after removing starting and ending silence @xcite , each file representing the whole single",
    "sound is normalized so that the rms value equals one .",
    "then we perform parameterization , and train a classifier to identify each instrument  even when accompanied by other sound .",
    "therefore , we perform training on 40 ms frames of instrument sound mixes , mixing from 1 to 4 randomly chosen instruments with random weights and then we normalize it again to get the rms value equal to one .    the battery of one - instrument sensitive rfo or rfe classifiers is then trained .",
    "3,000 mixes containing any sound of a given instrument are fed as positive examples , and 3,000 mixes containing no sound of this instrument are fed as negative examples . for n instruments we need n binary classifiers ( n=4 ) , each one trained to identify 1 instrument . for rfe models",
    ", we have been training 1000 ferns of a depth of 10 ; for rfo , there were 1000 trees and @xmath2 was set to the default floor of square root of the number of attributes , namely 9 .",
    "the rfo and rfe classifiers , according to the procedure delineated in section [ train ] , were next used to identify instruments playing in jazz recordings , described in section [ audio ] .",
    "ground - truth data were prepared through careful manual labelling @xcite , based on initial recordings of each instrument track separately .",
    "the accuracy was assessed via precision and recall scores .",
    "these measures were weighted by the rms of a given frame ( differently than in our previous work @xcite , where rms was calculated for frames taken from instrument channels ) , in order to diminish the impact of softer frames , which are very hard to perform reasonable identification of instruments , because their loudness is near the noise level .",
    "for this reason , our true positive score @xmath24 for an instrument @xmath12 is a sum of rms of frames which are both annotated and classified as @xmath12 .",
    "precision is calculated by dividing @xmath24 by the sum of rms of frames which are classified as @xmath12 ; respectively , recall is calculated by dividing @xmath24 by the sum of rms of frames which are annotated as @xmath12 . as a general accuracy measure we have used f - score , defined as a harmonic mean of such precision and recall .",
    "+ rfe & 88.4@xmath250.6 & 67@xmath251 & 76.4@xmath250.6 + rfo & 92.7@xmath250.2 & 63@xmath251 & 75.2@xmath250.7 +   + rfe & 82.36@xmath250.2 & 73@xmath252 & 77@xmath251 + rfo & 87.76@xmath250.3 & 69@xmath251 & 77.3@xmath250.5 +   + rfe & 79.8@xmath250.4 & 72@xmath251 & 76@xmath251 + rfo & 91@xmath252 & 68@xmath251 & 78@xmath251 +   + rfe & 94.5@xmath250.2 & 77@xmath251 & 84.8@xmath250.7 + rfo & 94.4@xmath250.3 & 74@xmath251 & 83.1@xmath250.9 +    [ tab : predaccwhole ]    while in this initial phase of the research we have used pc implementations of the classification algorithms , the timings have been performed on a single core of a xeon e5620 linux workstation .",
    "r version 2.15.0 , rferns version 0.3 and randomforest version 4.6 - 6 were used .",
    "both rfo and rfe are stochastic algorithms , so is the process of creating training sets for the battery .",
    "thus , to assess the stability of the results and make a fair comparison of methods , the whole procedure of creating training sets , training rfe and rfo batteries and testing them on a real recordings has been repeated 10 times .",
    "the results of performance analysis of rfe and rfo models are given in table  [ tab : predaccwhole ] .",
    "as one can see , for three pieces rfo had superior precision over that of rfe ; on the other hand , ferns tend to provide better recall .",
    "however , the overall performance of both classifiers measured with the f - score is similar for all pieces .",
    "the detailed comparison of performance analysis of rfe and rfo models for particular instruments is given in table  [ tab : predaccinstr ] .",
    "sousaphone and trumpet are always quite precisely identified , whereas trombone usually yields lower precision in all pieces , and clarinet in one piece .",
    "recall is lower than precision , but still much improved comparing to our previous results @xcite .",
    "again , quite high recall is obtained for sousaphone and is rather good for trumpet , whereas the worst recall is scored by rfo for trombone samples .",
    "& & + & clarinet & sousaphone & trombone & trumpet & clarinet & sousaphone & trombone & trumpet +   + rfe & 91.5@xmath250.2 & 98.3@xmath250.2 & 76@xmath252 & 89.0@xmath250.2 & 70@xmath252 & 67@xmath251 & 71@xmath252 & 59@xmath252 + rfo & 91.4@xmath250.2 & 98.6@xmath250.3 & 87.3@xmath250.6 & 90.8@xmath250.2 & 65@xmath254 & 80@xmath252 & 46@xmath252 & 58@xmath252 +   + rfe & 80.9@xmath250.4 & 92.2@xmath250.7 & 63.6@xmath250.4 & 92.5@xmath250.5 & 79@xmath253 & 76@xmath253 & 61@xmath252 & 73@xmath252 + rfo & 85@xmath251 & 93.2@xmath250.7 & 70.3@xmath250.8 & 96.4@xmath250.6 & 67@xmath254 & 88@xmath251 & 46@xmath252 & 72@xmath253 +   + rfe & 48.4@xmath250.4 & 99.4@xmath250.1 & 78@xmath252 & 97.8@xmath250.3 & 81@xmath252 & 70@xmath254 & 58@xmath252 & 77@xmath252 + rfo & 62@xmath256 & 99.4@xmath250.1 & 91@xmath252 & 99.9@xmath250.1 & 53@xmath255 & 94@xmath251 & 31@xmath253 & 67@xmath253 +   + rfe & 96.9@xmath250.6 & 99.2@xmath250.2 & 88.6@xmath250.6 & 94.7@xmath250.2 & 92@xmath252 & 62@xmath254 & 61@xmath252 & 88@xmath251 + rfo & 95.4@xmath250.4 & 99.7@xmath250.1 & 87.8@xmath250.7 & 94.7@xmath250.1 & 80@xmath255 & 83@xmath254 & 50@xmath252 & 88@xmath251 +    [ tab : predaccinstr ]    .time taken by each battery of classifiers to annotate the whole testing piece . [ cols=\"^,^,^,^ \" , ]     [ tab : predtimes ]    on average , rfe and rfo perform classification respectively 25x and 8x faster than the actual music speed ; this means rfe offer over 3x speed - up in comparison to rfo , see table  [ tab : predtimes ] .",
    "experiments presented in this paper show that identification of all instruments playing in real music recordings is possible using both rfo- and rfe - based classifiers , yielding quite good results .",
    "we observed improved recall comparing to our previous research @xcite ; we improved here the rms weighting , which was previously calculated for separate instrument channels , and in this work , the rms of all channels together was used for weighting .",
    "our results still are worth improving , but the obtained recall ( and precision ) are satisfactory , because the task of identification of all instruments playing in a short segment is difficult , and is challenging also for human listeners .",
    "this work has been partially financed by the national science centre , grant 2011/01/n / st6/07035 .",
    "computations were performed at icm , grant g48 - 6 .",
    "this project was also partially supported by the research center of pjiit , supported by the polish ministry of science and higher education .",
    "the authors would also like to thank dr .",
    "elbieta kubera from the university of life sciences in lublin for preparing the ground - truth data for initial experiments , and radosaw rudnicki from the university of york for preparing the jazz band recordings .",
    "herrera - boyer , p. , klapuri , a. , davy , m. : automatic classification of pitched musical instrument sounds . in : klapuri , a. , davy , m. ( eds . ) : signal processing methods for music transcription .",
    "springer science+business media llc ( 2006 )      kitahara , t. , goto , m. , komatani , k. , ogata , t. , okuno , h.g . :",
    "instrument identification in polyphonic music : feature weighting to minimize influence of sound overlaps .",
    "eurasip j. on advances in signal processing , vol.2007 , pp.115 ( 2007 )    kubera , e. , kursa , m.b . ,",
    "rudnicki , w.r . ,",
    "rudnicki , r. , wieczorkowska , a.a . : all that jazz in the random forest . in : kryszkiewicz , m. , rybiski , h. , skowron , a. , ra , z.w .",
    "( eds . ) : ismis 2011 .",
    "lnai , vol . 6804 , pp .",
    "543 - 553 .",
    "springer , heidelberg ( 2011 )    kursa , m.b . , rudnicki , w. , wieczorkowska , a. , kubera , e. , kubik - komar , a. : musical instruments in random forest . in : j. rauch , z.w .",
    "ra , p. berka , t. elomaa ( eds . ) : ismis 2009 , lnai vol . 5722 , pp .",
    "281290 heidelberg .",
    "springer , ( 2009 )    kursa , m.b .",
    ", kubera , e. , rudnicki , w.r .",
    ", wieczorkowska , a.a : random musical bands playing in random forests . in : szczuka , m. , kryszkiewicz , m. , ramanna , s. , jensen , r. , hu , q. ( eds . ) : rsctc 2010 .",
    "lnai , vol . 6086 , pp .",
    "springer , heidelberg ( 2010 )                oshin , o. , gilbert , a. , illingworth , j. , bowden , r. : action recognition using randomised ferns . in : computer vision workshops ( iccv workshops ) , 2009",
    "ieee 12th international conference , pp .",
    "530537 . ieee ( 2009 )                    wagner , d. , reitmayr , g. , mulloni , a. , drummond , t. , schmalstieg , d. : real - time detection and tracking for augmented reality on mobile phones .",
    "ieee transactions on visualization and computer graphics 16 ( 3 ) , 355368 ( 2010 )"
  ],
  "abstract_text": [
    "<S> in this paper , we first apply random ferns for classification of real music recordings of a jazz band . </S>",
    "<S> no initial segmentation of audio data is assumed , i.e. , no onset , offset , nor pitch data are needed . </S>",
    "<S> the notion of random ferns is described in the paper , to familiarize the reader with this classification algorithm , which was introduced quite recently and applied so far in image recognition tasks . </S>",
    "<S> the performance of random ferns is compared with random forests for the same data . </S>",
    "<S> the results of experiments are presented in the paper , and conclusions are drawn .    information retrieval , random ferns , random forest     +    _ this is a preprint of a paper accepted for the ismis 2012 conference . _ </S>"
  ]
}
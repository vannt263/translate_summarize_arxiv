{
  "article_text": [
    "the symmetric key exchange method based on the fast synchronisation of two identically structured tree parity machines ( tpms ) was proposed by kanter and kinzel @xcite .",
    "their exchange protocol is realized implicitly by a mutual adaptation process between two parties @xmath0 and @xmath1 , not involving large numbers and methods from number theory @xcite .    making sure , that the two parties involved are also allowed to perform",
    "this protocol is the cryptographic process of _ ( entity ) authentication_. in the area of cryptography , authentication is an important step still before key exchange or even the en-/decryption of information with an exchanged secret key @xcite .",
    "adding classical authentication e.g. via hashing to the neural cryptography concept is straightforward but is not embedded into the concept itself .",
    "we think it is thus desirable to formulate an authentication concept from within neural cryptography , based on the original tpm synchronisation principle and keeping the practical advantage of not operating on large numbers .",
    "we first briefly recapitulate the parallel - weights version , in which weights are identical in both tpms after synchronisation , using hebbian learning and the so - called _ bit package _ variant of the protocol @xcite .",
    "the anti - parallel - weights version , using anti - hebbian learning and leading to inverted weights at the other party , can be considered for our purpose as well but is omitted for brevity .",
    "the notation @xmath2 denotes equivalent operations for the parties @xmath0 and @xmath1 .",
    "a single @xmath0 or @xmath1 denotes an operation which is specific to one of the parties .",
    "the tpm consists of @xmath3 hidden units ( @xmath4 ) in a single hidden - layer with non - overlapping inputs and a single unit in the output - layer .",
    "the particular tree structure has binary inputs , discrete weights and a single binary output as depicted in .",
    "each hidden unit @xmath5 receives different @xmath6 inputs @xmath7 ( @xmath8 ) , leading to an input field of size @xmath9 .",
    "the vector - components @xmath10 are random variables with zero mean and unit variance .",
    "they can e.g. be coded as bits generated by a _ linear feedback shift register _ ( lfsr ) as pseudo - random number generator .",
    "the output @xmath11 , given bounded weights ( from input unit @xmath12 to hidden unit @xmath5 ) and common pseudo - random inputs @xmath7 , is calculated by a parity function of the signs of summations : @xmath13 @xmath14 is a sign - function .",
    "parties @xmath0 and @xmath1 start with an individual randomly generated initial weight vector @xmath15  their secret .",
    "after a set of @xmath16 presented inputs , where @xmath17 denotes the size of the bit package , the corresponding @xmath17 tpm outputs @xmath18 are exchanged over the public channel in one package ( see ) .",
    "the @xmath17 sequences of hidden states @xmath19 are stored for the subsequent learning process .",
    "a hebbian learning rule is applied to adapt the weights , using the @xmath17 outputs and @xmath17 sequences of hidden states : @xmath20 they are changed according to equation [ learn ] only on an agreement @xmath21 on the parties outputs .",
    "furthermore , only weights of those hidden units are changed , that agree with this output , i.e.  if  @xmath22 . updated weights are bound to stay in the maximum range by reflection onto the boundary values .",
    "synchrony is achieved when both parties have learned to produce each others outputs .",
    "they remain synchronised ( see ) and continue to produce the same outputs on every commonly given input .",
    "this effect in particular leads to common weight - vectors @xmath23 in both tpms in each following iteration .",
    "these weights have never been communicated between the two parties and can be used as a common time - dependent key for encryption and decryption respectively .    a test for synchrony can of course not practically be defined by checking whether weights in both nets have become identical .",
    "one rather tests on successive equal outputs in a sufficiently large number of iterations @xmath24 , such that equal outputs by chance are excluded .",
    "@xmath25:\\   o^{\\scriptscriptstyle{a}}(t)=o^{\\scriptscriptstyle{b}}(t)\\ .\\ ] ] the synchronisation time was found to be finite for discrete weights .",
    "it is almost independent on @xmath6 and scales with @xmath26 for very large @xmath6 , even in the thermodynamic limit @xmath27 .",
    "furthermore , it is proportional to @xmath28 @xcite .",
    "our investigations confirmed that the average synchronisation time is distributed and peaked around 400 for the parameters given in @xcite .",
    "the number of bits required to achieve synchronisation is lower than the size of the key @xcite .",
    "secret key agreement based on interaction over a public insecure channel is also discussed under information theoretic aspects by maurer @xcite , also with regard to unconditional security .",
    "in the original key exchange protocol , the structure of the network , the involved computations producing the output @xmath18 , the adaptation - rule ( equation  [ learn ] ) and especially the common inputs @xmath7 are public .",
    "the only secrets involved are the different initial weights @xmath29 of the two parties .",
    "if they were not secret , the resulting keys could simply be calculated ( by an adversary ) , because all further computations are completely deterministic .",
    "an elegant solution to include authentication into the neural key exchange protocol comes from the observation , that two parties @xmath0 and @xmath1 which do not have the same input vectors @xmath30 can not synchronise .",
    "remember , that the aim of the two - party - system is to learn each others outputs on commonly given inputs .",
    "given different inputs , the two parties are trying to learn completely different relations ( two different nonlinear mappings ) between inputs @xmath31 and outputs @xmath18 .",
    "consequently , when the two parties do not synchronise , there also will not be time - dependent equal weights @xmath23 and thus no exchange of a key .",
    "this again is exactly the service one would want to restrict only to authorised parties employing an explicit authentication .",
    "we experimentally investigated the development of normalised sum of absolute differences @xmath32 $ ] over time for different offsets @xmath33 in the ( pseudo - random ) input - list and for completely different input - lists .",
    "the first situation represents an attacker , who has a different initialisation of his pseudo - random number generator .",
    "the second situation is typical for an attacker with incomplete or even completely differently generated inputs .",
    "vs. the number of exchanged bits ( ) for offset zero ( successful authentication ) , offsets one and ten , as well as for completely different inputs.,title=\"fig:\",width=264][synch ]    one can observe in figure  [ synch ] , that the distance between two parties that do not possess the same inputs remains fluctuating within a certain limited range around @xmath34 and never decreases towards zero .",
    "we also investigated different offsets with the same qualitative outcome .",
    "two parties with completely different inputs ( although not realistic given a concrete and publicly known lfsr as pseudo random number generator ) show the same qualitative behaviour . considering the number of repulsive and attractive steps ,",
    "one can constitute , that on average there must be as many repulsive as attractive steps for such a behaviour ( cf .",
    "two parties having the same inputs ( offset zero ) soon decrease their distance and synchronise .",
    "another test was performed with identical inputs but by imposing a certain percentage of equally distributed ` noise ' on the communicated outputs of one party .",
    "it allows to demonstrate the importance of common inputs for the synchronisation process .",
    "if such a noise would appear only in a certain period , the system would still synchronise but with a delay of roughly the length of the noisy period plus the time used up for unsuccessful synchronisation before the noisy period , which is thus not the interesting case .",
    "[ synchnoise ]    as can be seen in figure  [ synchnoise ] , the distribution of synchronisation times is flattened and biased towards longer times for increasing noise .",
    "surprisingly , the system can still synchronise even with highly noisy communication .",
    "obviously , the ( coordinated ) inputs basically determine the synchronisation .",
    "the average synchronisation time is of course increased as is the probability for a late synchronisation .",
    "a superficial explanation of the observed behaviour is , that the principle is based on mutual learning from common inputs and thus on principle can not work with differing inputs .",
    "more concretely , the random walks with reflecting boundaries performed by the weights in the iterative process now make uncorrelated moves and moves in the wrong direction ( cf .",
    "two corresponding components @xmath35 and @xmath36 now receive a different random component @xmath7 of their ( differing ) input vectors ( cf . equation  [ out ] ) .",
    "the distance between the components is thus no longer successively reduced to zero after each bounding operation and the two parties diverge .",
    "the non - synchronisation in the case of no common inputs , therefore enables us to incorporate authentication by keeping the common ( pseudo - random ) inputs @xmath31 secret between the two parties in addition to their individual secret ( random ) initial weights @xmath15 .",
    "there are @xmath37 possible common inputs as second initial secrets , which is a large enough practical amount for the parameters as chosen in @xcite that makes brute force attacks computationally very expensive .",
    "even more , a man - in - the - middle attack and all other currently known attacks @xcite using tpms are averted on principal by such an authentication .",
    "it is important to note , that such a second secret does not represent any principal disadvantage , because a basic common information is always also necessary in other authentication protocols ( cf .",
    "@xcite ) .    as opposed to asymmetric approaches in which a third party that can be trusted issues a second public key , in this symmetric approach a second secret information is necessary for authentication , with the advantage of not requiring a central authority . using an asymmetric public - key authentication like e.g. in the fiat - shamir authentication scheme , a trusted center selects and publishes an rsa - like modulus , which is the second common ( but public ) information in addition to the private key .",
    "therefore security is partly transferred to a third trusted party .",
    "although we have authentication already given the second secret described above , we make another suggestion explicitly incorporating a _ zero - knowledge _ ( zk ) protocol ( see e.g. @xcite ) .",
    "it also requires a ( second ) secret but formally does not require the non - synchronisation in case of differing inputs .",
    "although this may seem redundant at first glance , it allows to demonstrate how the two ( already ) interactive protocols can be merged and allow a quicker authentication at the cost of an only statistical and thresholded secure authentication .",
    "zk mechanisms generally allow to split a protocol into an iterative process of relatively light transactions , instead of a single ( heavy ) transmission .",
    "typically such a principle depends on random numbers in some way .",
    "the security that can be achieved is probabilistic , i.e. depending on the number of interactions , but security can always be increased beyond some acceptable variable security threshold .",
    "again we take the inputs of the tpm as a second common secret . the probability of an input vector @xmath31 having a particular parity",
    "@xmath38 is 0.5 .",
    "this parity will now be used directly as an output bit @xmath18 for an authentication step .",
    "the probability of both parties having the same output bit upon a given input at any given time @xmath39 is @xmath40 given a number @xmath41 of pure authentication steps , in which one transmits the parity of the corresponding input vector as output @xmath42 directly , the probability that the two parties subsequently produce the same output @xmath43 times ( and thus are likely to have the same @xmath43 inputs ) decreases exponentially with @xmath43 @xmath44 consequently , in order to have a statistical security of @xmath45 one has to pick @xmath46 authentication steps such that @xmath47 which can be calculated in advance as @xmath48 one achieves a statistical security @xmath49 ( i.e. @xmath50 % ) with @xmath51 , for example .",
    "the synchronisation time for the zk variant thus increases by @xmath52 authentication - steps depending on the required level of security @xmath53 .",
    "the questions arises , when to perform those authentication steps and what happens in the case of a synchronisation earlier than authentication , which is possible due to the distribution of synchronisation times ?",
    "one obviously has to pick those entries in the input list used for authentication only such that the security threshold will be reached soon enough with a certain probability .",
    "this can be achieved by selecting a certain bit sub - pattern in the input vector .",
    "inputs are equally distributed by definition and thus the last say @xmath54 bit are also equally distributed .",
    "one can thus select those entries that possess a defined bit sub - pattern ( e.g. ` 0101 ' for @xmath55 ) .",
    "the probability of such a fixed bit sub - pattern of @xmath54 bit to occur is @xmath56 , because each bit has a certain fixed value with a probability of @xmath57 and the individual bits occur independently from the lfsr .",
    "thus for four bit , on average every 16th input would be used for authentication .",
    "when this sub - pattern occurs , one performs an authentication step in transmitting the parity of the corresponding input vector directly as output @xmath58 .",
    "this will ( definitely ) only happen at the other party ( and with the same output ! ) if it has the same inputs .",
    "having successfully performed @xmath52 authentication - steps , one commences with the synchronisation and key exchange .",
    "such an authentication does not influence the learning process at all , which transfers all behaviour of the tpm synchronisation to this extended principle . due to the fact that the inputs are secret",
    ", an attacker can not know when exactly such an authentication step is happening .",
    "this e.g. would not be the case , if one would reserve the first iterations only for authentication .",
    "an attacker could just record one session and replay the authentication steps ( using the recorded outputs ) when performing his attack .",
    "let us elaborate on three important properties of a zk protocol ( cf .",
    "e.g. @xcite ) and see how they apply in the context of proposed authentication principles :    1 .   _",
    "@xmath0 always succeeds in convincing @xmath1 if he knows the common secret : _",
    "if @xmath0 knows the common secret in the form of having the same inputs , he will always synchronise within a finite time ( typically around 400 iterations for the parameters used in @xcite ) . in the case of the second authentication principle",
    ", @xmath0 will reach the security threshold @xmath53 in the specified @xmath52 authentication steps .",
    "thus both protocols are complete .",
    "_ soundness  @xmath0 succeeds with ( arbitrary ) small probability if he does not know the secret of @xmath1 : _ if @xmath0 does not know the common secret and has different inputs , synchronisation will fail .",
    "the two parties will always be driven apart again by the repulsive steps .",
    "he will thus succeed with a probability of zero . in the case of the explicit authentication principle",
    ", @xmath0 will not reach the security threshold @xmath53 in the specified @xmath52 authentication steps and will be rejected .",
    "thus both protocols are sound .",
    "_ zero - knowledge ",
    "no information on the common secret is leaked at all while the interactive protocol is performed .",
    "_ this property can be attributed back to the lack of information in the transmitted output bits ( or bit packages ) .",
    "the only information transmitted is the parities of unknown bit - strings .",
    "the same holds for the parities of the inputs chosen ( pseudo - randomly ) only for authentication in the case of the explicit authentication principle .",
    "again only the parities of randomly generated input bit vectors are transmitted .",
    "an attacker also can not distinguish an authentication step from a synchronisation step from observing the exchanged outputs .",
    "he thus does not know , whether the currently observed output bit is used for either of the two purposes if he does not know the second secret .",
    "both protocols thus possess the zero - knowledge property .",
    "both suggestions for authentication could after all be viewed as zk protocols , one implicit and one explicit , due to their interactive questioning nature that does not reveal information on the common secret .",
    "furthermore , any previous findings on the physics of the synchronisation of tpms still apply . obviously , the bit packaging variant of the protocol together with the zk extension is a typical parallel interaction protocol ( cf .",
    "in such a parallel protocol , a number of problems ( @xmath17 outputs of party @xmath0 ) are posed an and a number of solutions ( @xmath17 corresponding outputs of party @xmath1 ) at a time are asked .",
    "this is generally used to reduce the number of interaction messages with a slow - response - time connection or low - bandwidth channel .",
    "the general trade - off in cryptography between available resources and the required level of security also applies using the tpm principle . in many practical embedded security solutions",
    "e.g. it is often admissive to provide a system safe enough for the particular application , and given certain attack scenarios .",
    "the tpm principle extended with the proposed authentication is very attractive for such embedded applications due to its hardware - friendly basic operations @xcite .",
    "as mentioned in the introduction , once synchronous , the two parties remain synchronised having identical weights in each following iteration .",
    "this mode of operation was regarded potentially insecure by the authors in @xcite with respect to the possible attacks with identical tpms on the ongoing communication .",
    "we would like to comment on that with two basic considerations :    1 .",
    "when the two parties are synchronous they will also have the same outputs in each iteration .",
    "thus , one can as well turn off the communication , because all following outputs will be identical anyway and thus do not need to be communicated any longer .",
    "each party can then simply apply the learning rule ( equation  [ learn ] ) with its own output .",
    "consequently , staying in the trajectory does not automatically represent a security weakness as stated in @xcite .",
    "only if a tpm attacker achieved to synchronise before or at the same time as the two parties , he will have the keys from the trajectory .",
    "but the problem of a possible attack on the ongoing communication can be avoided as described above .",
    "2 .   given the herein proposed authentication refutes the currently known attacks with tpms on principle .",
    "an attacker with a tpm will not be successful in synchronising , not even if the communication after synchronisation goes on .",
    "this allows to securely exploit the full potential of the trajectory .    in particular after having synchronised once",
    ", one can increase the final key length by concatenating subsequently synchronised ` partial - keys ' from the trajectory at the negligible cost of one or a few further iterations , depending on the partial - keys length and the desired final key length .",
    "furthermore , one could even encrypt each given data block to be transmitted securely with a separate key , effectively yielding a _",
    "one - time pad _ with a maximum length equal to the length of the period ( of the trajectory ) . in this case , even a less sophisticated but low - cost encryption like simple xor or lfsr becomes applicable .",
    "there are @xmath59 theoretically possible @xmath60 bit keys but the length of the period ( of the trajectory ) has so far not been calculated .",
    "we also performed software simulations and did not find two identical 612 bit keys in a million runs not using the trajectory .",
    "two ways of establishing authentication from within the concept of neural cryptography were presented .",
    "next to the key establishment itself , such an authentication is of primary interest in cryptography and its applications . using the common inputs as a second secret for authentication",
    ", we investigated the distance of the two parties weight vectors for different offset in their inputs and for completely different inputs .",
    "no synchronisation appears , as expected .",
    "another explicit authentication principle ( based on the same underyling secret ) , naturally integrating a zero - knowledge protocol into the already interactive key exchange concept was discussed and concrete suggestions for its application were derived from probabilistic considerations .",
    "it turns out that authentication is inherently provided by the underlying synchronisation principle of neural cryptography .",
    "above all , using authentication of this kind averts all currently known attacks and a previously possible man - in - the - middle attack , which assume the full knowledge on the inputs to the tpms .",
    "any ( non brute force ) attack now needs to extract information from the communicated outputs .",
    "furthermore a ( differential ) power analysis on a concrete software or hardware implementation could be tried , which is yet an attack on a rather technical level .",
    "the outlined consequences of being able to securely stay in the trajectory in weight space are of significant practical importance .",
    "it is thus our hope , that the discussion of this extraordinary key exchange principle and related concepts ( see e.g. @xcite ) will continue , within the physics community and also the cryptography community .",
    "m.  volkmer and s.  wallner .",
    "a low - cost solution for frequent symmetric key exchange in ad - hoc networks . in p.",
    "dadam and m.  reichert , editors , _ proc . of the 2nd german workshop on mobile ad - hoc networks , wman 2004 _ , volume p-50 of _ lecture notes in informatics ( lni ) _ , pages 128137 , ulm , germany , sep .",
    "20th 2004 .",
    "bonner kllen verlag ."
  ],
  "abstract_text": [
    "<S> the synchronisation of tree parity machines ( tpms ) , has proven to provide a valuable alternative concept for secure symmetric key exchange . yet , from a cryptographer s point of view , authentication is at least as important as a secure exchange of keys . </S>",
    "<S> adding an authentication via hashing e.g.  is straightforward but with no relation to _ neural cryptography_. we consequently formulate an authenticated key exchange within this concept . </S>",
    "<S> another alternative , integrating a zero - knowledge protocol into the synchronisation , is also presented . </S>",
    "<S> a man - in - the - middle attack and even all currently known attacks , that are based on using identically structured tpms and synchronisation as well , can so be averted . </S>",
    "<S> this in turn has practical consequences on using the trajectory in weight space . </S>",
    "<S> both suggestions have the advantage of not affecting the previously observed physics of this interacting system at all . </S>"
  ]
}
{
  "article_text": [
    "the most general problem setting of the wave turbulence theory can be regarded in the form of a nonlinear partial differential equation @xmath2 where @xmath3 and @xmath4 denote linear and nonlinear part of the equation correspondingly , the linear part has the standard wave solutions of the form @xmath5},\\ ] ] where the amplitude @xmath6 may depend on space variables but not on time , and a small parameter @xmath7 shows that only resonant wave interactions are taken into account",
    ". the dispersion function @xmath8 can be easily found by substitution of @xmath9 into the linear part of the initial pde , @xmath10 while @xmath11 and resonance conditions have the form @xmath12 for @xmath13 interacting waves with wave - vectors @xmath14 . for most physical applications",
    "it is enough to regard @xmath15 or @xmath16 , and the most common form of dispersion function is @xmath17 ( for instance , capillary , gravitational and surface water waves , planetary waves in the ocean , drift waves in tokamak plasma , etc . )",
    "+ the model of laminated wave turbulence@xcite describes two co - existing layers of turbulence - continuous and discrete - which are presented by real and integer solutions of sys.([open ] ) correspondingly .",
    "the continuous layer is described by classical statistical methods@xcite while for the discrete layer new algorithms have to be developed .",
    "it was shown in@xcite that an arbitrary integer lattice @xmath18 , each node of the lattice denoting a wave - vector @xmath19 , can be divided into some clusters ( classes ) and there are two types of solutions of sys.([open ] ) : those belonging to the same class and those belonging to different classes .",
    "mathematically , a class is described as a set of wave - vectors for which the values of the dispersion function have the same irrationality .",
    "for instance , if the dispersion function has the form @xmath20 , then a class is described as follows : @xmath21 where @xmath22 is a natural number and @xmath23 is a square - free integer .",
    "physically , it means that waves are interacting over the scales , that is , each two interacting waves generate a wave with a wavelength different from the wave lengths of the two initial waves .",
    "interactions between the waves of different classes do not generate new wavelengths but new phases . + in our preceding paper@xcite we presented a generic algorithm for computing all integer solutions of sys.([open ] ) within one class .",
    "four - wave interactions among 2-dimensional gravitational water waves were taken as the main example , in this case sys.([open ] ) takes form:[prosetdef2 ]    ( m_1 ^ 2+n_1 ^ 2)^1/4 + ( m_2 ^ 2+n_2 ^ 2)^1/4=(m_3 ^ 2+n_3 ^ 2)^1/4+(m_4 ^ 2+n_4 ^ 2)^1/4 + m_1+m_2=m_3+m_4 + n_1+n_2=n_3+n_4 +    and classes are defined as @xmath24 , where @xmath23 , called class index , are all natural numbers containing every prime factor in degree smaller @xmath25 and @xmath26 , called weight , all natural numbers .",
    "it can be proven that if all 4 wave - vectors constructing a solution of sys.([prosetdef2 ] ) * do not * belong to the same class , then the only possible situation is following : all the vectors belong to two different classes @xmath27 and the first equation of sys.([prosetdef2 ] ) can be rewritten then as[th2eq3 ] _ 1 + _",
    "2=_1+_2 with some @xmath28 and @xmath29 being class indexes . in the present paper",
    "we deal with this two - class case .",
    "as in the previous paper @xcite , we are going to find all solutions of eq.([prosetdef2 ] ) in some finite domain @xmath30 , i.e. @xmath31 for some @xmath32 .",
    "the first case has been studied for @xmath33 , where @xmath34 classes have been encountered .",
    "the straightforward approach , not making use of classes , consumes , as for the first case , at least @xmath35 operations and is out of question ( see @xcite , sec.3.2.1 for discussion of this point ) .",
    "+ straightforward application of classes also does not bring much .",
    "the eq.([th2eq3 ] ) is now trivial - but classes are interlocked through linear conditions .",
    "even if for each pair of classes we could detect interlocking and find solutions , if any , in @xmath36 operations ( which is probably the case , though we did not prove it ) , the overall computational complexity is at least @xmath37 - i.e. not much less than @xmath38 . for @xmath33",
    "this implies @xmath39 pairwise class matches which is outside any reasonable computational complexity limits . + the trouble with this approach - as , for that matter , with virtually any algorithm consuming much more computation time than the volume of its input and output data implies - is , that we perform a lot of intermediary calculations , later discarded .",
    "we develop an algorithm performing every calculation with a given item of input data just once ( or a constant number of times ) .",
    "first of all we notice that eq.([th2eq3 ] ) can be rewritten as [ interl1 ]    ( m_1l^2+n_1l^2)^1/4 = ( m_1r^2+n_1r^2)^1/4 = _ 1 + ( m_2l^2+n_2l^2)^1/4 = ( m_2r^2+n_2r^2)^1/4 = _ 2 + m_1l - m_1r = -m_2l + m_2r + n_1l - n_1r = -n_2l + n_2r +    where @xmath29 are two different class indexes and @xmath40 - the corresponding weights .    [",
    "[ definition . ] ] definition .",
    "+ + + + + + + + + + +    for any two decompositions of a number @xmath41 into a sum of two squares ( see ( [ interl1 ] ) ) the value @xmath42 is called @xmath43-_deficiency _ , @xmath44 is called @xmath13-_deficiency _ and @xmath45 - _ deficiency point_. + we immediately see that for two interacting waves their deficiencies must be equal : @xmath46 . for a given weight @xmath26 , every two decompositions of @xmath47 into a sum of two squares yield , in general , four deficiency points with @xmath48 .",
    "consider unsigned decompositions @xmath49 .",
    "assuming @xmath50 the four points are @xmath51 and four ( symmetrical ) points in each of the other three quadrants of the @xmath52 plane .",
    "[ [ definition.-1 ] ] definition .",
    "+ + + + + + + + + + +    the set of all deficiency points of a class for a given weight , @xmath53 , is called its _ @xmath26-deficiency set_. the set of all deficiency points of a class , @xmath54 , is called its _ deficiency set_. + the objects defined above",
    "play the main role in our algorithm , so we compute as an illustrative example the for the number 50 .",
    "the number @xmath55 has three decompositions into sum of two squares , namely , @xmath56 , and nonnegative deficiency points of decomposition pairs are @xmath57 they constitute a subset of the deficiency set @xmath58 , namely , the 12 points with @xmath59 . in each of three other quadrants of the @xmath60 plane there",
    "lie 36 more points of this set , symmetrical to the ones shown with respect to the coordinate axes .",
    "+ the crucial idea behind the algorithm of this paper is very simple and follows immediately from the exposition above : + * sys.([interl1 ] ) has a solution with vectors belonging to the two different classes @xmath61 if and only if their deficiency sets have a non - void intersection , @xmath62 , i.e. some elements belong to both classes . *",
    "calculation of relevant class indexes @xmath23 by a sieve - like procedure , admissible weights @xmath26 and decomposition of @xmath47 into sum of two squares have all been treated in full detail in @xcite .",
    "one new feature we introduced here is , that immediately after generating the array of class bases @xmath23 we purge away those which , whatever the admissible weight @xmath26 , do not have a decomposition into a a sum of two squares @xmath63 with both @xmath64 . for the problem considered in @xcite",
    "this would be superfluous because virtually all these classes have been anyhow filtered away according to another criterium ( @xmath65 ) which does not apply here . in this way",
    "we exclude 100562 classes from the 384145 which the sieving procedure returns . + evidently for any deficiency point @xmath66 inequalities",
    "@xmath67 hold . and",
    "if deficiency sets of two classes have a non - void intersection , they also have an intersection over points with non - negative @xmath68 .",
    "so we start with declaring a two - dimensional array @xmath69 of type byte which serves storing and processing deficiency sets of the classes .",
    "the array is initialized with all zeroes .        in the first pass for every class @xmath23 in the main domain @xmath30 we generate its deficiency set @xmath70 .",
    "notice that after generating deficiency set of the class for each weight @xmath26 and uniting them we must check for doubles and eventually get rid of them .",
    "next , for every deficiency point @xmath71 of the class we increment the value of the corresponding element of the array by 1 , except elements with value 255 whose values are not changed .      in the second pass",
    "we generate deficiency sets once more and for every point of the deficiency set of a class check the values of the corresponding point of @xmath72 .",
    "if all these values are equal to @xmath73 , no waves of the class participate in resonant interactions and the class is discarded from further considerations . + for the problem considered this pass excludes just a few ( @xmath74 ) classes , so the time gain is very modest .",
    "however , we include this step into the presentation for two reasons .",
    "first of all , it _ had _ to be done as no possibility of reducing the number of classes considered as much as possible and as soon as possible ( before the most time - consuming steps ) may be neglected .",
    "second , though giving not much gain for solution of the problem at hand , this elimination techniques may play a major role in further applications of our algorithm .      in the third pass",
    "we generate a more detailed deficiency set for each class , i.e. for all classes not discarded in the previous pass : for every deficiency point @xmath66 we store @xmath75 .",
    "we do * not * discard duplicates as we did in the previous two passes .",
    "then we revisit the corresponding points of @xmath72 and to each point whose value is larger than @xmath73 link the structure @xmath76 described above .      in the fourth pass we go through the array @xmath72 once more and store every point with value greater than one in an array @xmath77 .",
    "we also relink structures linked to deficiency points to corresponding points of the new array .",
    "the four passes above leave us with an array of points @xmath66 and to each of these points a list of structures @xmath78 is linked ( no less than two different @xmath79 ) . in general , a linked list is here most appropriate . every combination of two structures linked to the same point and having different @xmath79 yields a solution of sys.([prosetdef2 ] ) . from every solution found ,",
    "we obtain four solutions changing signs of @xmath80 in the general case , i.e. for @xmath80 nonzero .",
    "+ notice that theoretically we could skip pass 4 and extract solutions directly from the array @xmath72",
    ". however , this is not reasonable for implementation reasons , and pass 4 is not very time - consuming .      implementing the algorithm described above",
    ", we took a few language - specific shortcuts that will be briefly described here .",
    "+ passes 1 and 2 have been implemented one - to - one as described above .",
    "however , manipulating linked lists in vba involves considerable overhead and for the problem considered in this paper we do not need the complete functionality of linked lists , i.e. inserting into / deleting from intermediate positions of the list .",
    "our main data structure for pass 3 - 5 is a simple two - dimensional array arsolhalves(@xmath81 ) and in a single line of this array we store :    * the class base @xmath23 ; * the coordinates of deficiency point @xmath82 ; * the coordinates of two wave vectors belonging to this deficiency point ; * the index in the array arsolhalves of the next line belonging to the same deficiency point .    which is demonstrated in fig.[f : arrlista ] below .    here , @xmath83 is the number of @xmath84-vectors linked to all deficiency points to which vectors belonging to two or more classes belong ( @xmath85 for @xmath33 ) .",
    "we generate the deficiency set of each class and fill all members of this line of the array except the last one in the process , deficiency point by deficiency point .",
    "the last member is filled later and in the following way .",
    "+ for this pass we also declare an auxiliary array ardeficiencesprev(1 .. @xmath86 , 1 ..",
    "@xmath86 ) initialized with zeroes .",
    "having added a new line @xmath87 to arsolhalves , we look up the value @xmath88of ardeficiencesprev(@xmath82 ) . if it is zero ( this deficiency point being visited the first time ) we just assign this point the value of the index of the new line in the array arsolhalves .",
    "otherwise we first assign arsolhalves(@xmath88 , 7 ) the value of the current line s index in arsolhalves , then write this number to ardeficiencesprev(@xmath82 ) ( see fig.[f : arrlistb ] ) .",
    "+    a numerical example for this procedure is given in table 1 . in this way",
    ", the array index of the next `` list '' member is stored with the previous one , except evidently the last one , where the corresponding field stays zero .    [ cols=\"^,^,^,^,^,^,^,^,^\",options=\"header \" , ]      + table 1 .",
    "a few lines of the table containing solution halves for the deficiency point @xmath89 ( beginning and end of the sequence ) .",
    "+      consider computational complexity of these steps .",
    "for a single class index @xmath23 and weight @xmath26 , generating deficiency points in the first step consumes @xmath90 operations because every number @xmath91 has no more than @xmath92 decompositions into two squares which we combine pairwise to find deficiency points .",
    "decompositions themselves can be found in @xmath93 time@xcite .",
    "there are @xmath94 admissible weights to class index @xmath23 , so the overall complexity for a class can be estimated from above as @xmath95 . merging deficiency points into @xmath54 can be done in @xmath96 time for number of points x , i.e. no more than @xmath97 + taking a rough upper estimate for the number of classes @xmath98 , we obtain an estimate @xmath99 . incrementing the points of @xmath72",
    "is linear on the point number of the set @xmath54 and need not be considered for computational complexity separately .",
    "the same complexity estimate holds for the second pass .",
    "notice that , having enough memory , or using partial data loading / unloading similar to that used in @xcite , we could preserve deficiency sets calculated on the first pass and not recalculate them here .",
    "however , this would not significally improve the overall computational complexity of the algorithm .",
    "+ we can not give an _ a priori _ estimate for the number of classes discarded at the second pass , so we ignore it and hold the initial rough upper estimate @xmath98 for the number of classes in our further considerations .      in the third pass , to every point @xmath100 ( no more than @xmath101 of them )",
    "we link the values @xmath102 for which this point has been struck .",
    "this , as well as linking to the points of @xmath72 is , clearly , linear on the number of points and does not raise the computational complexity .",
    "complexity of the fourth pass can be estimated as follows .",
    "suppose the worst case , i.e. no classes are discarded at step 2 and every deficiency point is a solution point , i.e. for every @xmath103 no less than two classes have deficiency points with the same @xmath82 .",
    "then we must make no more than @xmath104 entries into the new array @xmath105 .",
    "we must relink no more than the mean of @xmath106 structures per point , which gives an upper estimate of @xmath107 time for the pass .",
    "however , remember that the estimate for the deficiency point number has been made on the assumption that all @xmath108 generate distinct deficiency points . in simple words , for every point linked to @xmath109 structures we obtain @xmath110 less solution points . now",
    "elementary consideration allow us to improve the estimate to @xmath104 time .      we did not manage to obtain a reasonable estimate for the computational complexity of the fifth step .",
    "for the worst case of all structures grouped at a single point , the estimate is @xmath111 - but this is not realistic .",
    "if the number of solution points is @xmath104 and the number of linked deficiencies is bounded by some number @xmath112 , then we can make an estimate @xmath113 .",
    "this , however , is also not quite the case as our numerical simulations show ) .",
    "however , this last step deals with solution extraction and extracts them in linear time per solution .",
    "_ any _ algorithm solving the problem has to extract solutions , so we can be sure that our step 5 is optimal - even without any estimate of its computational complexity . summing up , we obtain the overall upper estimate of computational complexity @xmath99 reached at steps @xmath73 and @xmath114 plus the time needed for solution extraction .",
    "our algorithm has been implemented in the vba programming language ; computation time ( without disk output of solutions found ) on a low - end pc ( 800 mhz pentium iii , 512 mb ram ) is about 10 minutes .",
    "some overall numerical data is given in the two figures below .",
    "the number of solutions for the 2-class - case depending on the partial domain is shown in the fig.[f : solsqsir ] .",
    "both curves are almost ideal cubic lines .",
    "very probably they _ are _ cubic lines asymptotically - the question is presently under study .",
    "+    partial domains chosen in fig.[f : solsqsir ] are of two types : squares @xmath115 , just for simplicity of computations , and circles @xmath116 , more reasonable choice from physical point of view ( in each circle all the wave lengths are @xmath117 ) .",
    "the curves in the fig.[f : solsqsir ] are very close to each other in the domain @xmath118 though number of integer nodes in a corresponding square is @xmath119 and in a circle with radius @xmath30 there are only @xmath120 integer nodes .",
    "this indicates a very interesting physical phenomenon : most part of the solutions is constructed with the wave vectors parallel and close to either axe @xmath91 or axe @xmath121 .",
    "+ on the other hand , the number of solutions in rings @xmath122 ( corresponds to the wavelengths between @xmath123 and @xmath30 ) grows nearly perfectly linearly .",
    "of course the number of solutions in a circle is _ not _ equal to the sum of solutions in its rings : a solution lies in some ring if and only if all its four vectors lie in that same ring .",
    "that is , studying solutions in the rings only , one excludes automatically a lot of solutions containing vectors with substantially different wave lengths simultaneously , for example , with wave vectors from the rings @xmath123 and @xmath124 .",
    "this `` cut '' sets of solutions can be of use for interpreting of the results of laboratory experiments performed for investigation of waves with some given wave lengths ( or frequencies ) only .",
    "another important characteristic of the structure of the solution set is multiplicity of a vector which describes how many times a given vector is a part of some solution .",
    "the multiplicity histogram is shown in fig.[f : vecmul222 ] .",
    "on the axis @xmath91 the multiplicity of a vector is shown and on the axis @xmath121 the number of vectors with a given multiplicity .",
    "the histogram of multiplicities is presented in fig .",
    "[ f : vecmul222 ] , it has been cut off - multiplicities go very high , indeed the vector ( 1000,1000 ) takes part in 11075 solutions .",
    "+ similar histograms computed for different 1-class - cases show that most part of the vectors , @xmath125 for different types of waves , take part in one solution , e.g. they have multiplicity 1 .",
    "this means that triads or quartets are , so to say , the `` primary elements '' of a wave system and we can explain its most important energetic characteristics in terms of these primary elements .",
    "the number of vectors with larger multiplicities decreases exponentially when multiplicity is growing .",
    "the very interesting fact in the 2-class - case is the existence of some initial interval of small multiplicities , from 1 to 10 , with very small number of corresponding vectors .",
    "for instance , there exist only 7 vectors with multiplicity 2 . beginning with multiplicity 11 ,",
    "the histogram is similar to that in the 1-class - case . +",
    "this form of the histogram is quite unexpected and demonstrates once more the specifics of the 2-class - case compared to the 1-class - case . as one can see from the multiplicity diagram in fig .",
    "[ f : vecmul222 ] , the major part in 2-class - case is played by much larger groups of waves with the number of elements being of order 40 : each solution consists of 4 vectors , groups contain at least one vector with multiplicity 11 though some of them can take part in the same solution .",
    "this sort of primary elements can be a manifestation of a very interesting physical phenomenon which should be investigated later : triads and quartets as primary elements demonstrate periodic behavior and therefore the whole wave system can be regarded as a quasi - periodic one . on the other hand ,",
    "larger groups of waves may have chaotic behavior and , being primary elements , define quite different way of energy transfer through the whole wave spectrum ."
  ],
  "abstract_text": [
    "<S> the model of laminated wave turbulence puts forth a novel computational problem - construction of fast algorithms for finding exact solutions of diophantine equations in integers of order @xmath0 and more . </S>",
    "<S> the equations to be solved in integers are resonant conditions for nonlinearly interacting waves and their form is defined by the wave dispersion . </S>",
    "<S> it is established that for the most common dispersion as an arbitrary function of a wave - vector length two different generic algorithms are necessary : ( 1 ) one - class - case algorithm for waves interacting through scales , and ( 2 ) two - class - case algorithm for waves interacting through phases . in our previous paper </S>",
    "<S> we described the one - class - case generic algorithm and in our present paper we present the two - class - case generic algorithm .    </S>",
    "<S> pacs numbers : 47.10.-g , 47.27.de , 47.27.t , 02.60.pn        = msbm10    @xmath1 ) </S>"
  ]
}
{
  "article_text": [
    "a considerable challenge for non - technical users of relational databases is constructing _ join _",
    "queries  @xcite .",
    "the join operation is required for even simple data lookup queries since relational databases store information in multiple separate normalized tables .",
    "although database normalization provides many benefits for managing data ( e.g. , avoiding update anomalies ) , it significantly decreases the usability of database systems by forcing users to write many join queries to explore databases .",
    "constructing join queries is difficult for several reasons .",
    "the main reason is that users find it difficult to determine which relations to join among many relations .",
    "understanding the role of each relation that represents a relationship of interest and finding the right join attributes are not trivial tasks , even when a schema diagram is given . to tackle this challenge",
    ", users often write complex queries by starting with a simpler query and iteratively adding operators  @xcite .",
    "although this iterative strategy is helpful , it is still challenging because the format of join query results is hard to interpret .",
    "for example , consider a query that joins two relations in many - to - many relationships ( e.g. , ` papers ` and ` authors ` in figure  [ fig : schema ] ) .",
    "a result of this query produces a large number of duplications ( e.g. , the title of each paper repeated as many times as the number of its authors ) .",
    "people represent the same information differently when they use a spreadsheet .",
    "for instance , they might create a cell containing multiple values separated by commas .",
    "relational databases can not represent data in this way because the relational model ( as implemented in most relational dbmss ) requires that data be at least in the _ first normal form_.    the usability challenge of writing complex queries has been studied by many researchers .",
    "although _ visual query builders _ help people formulate sql queries  @xcite , they separate query construction and result presentation parts  @xcite , introducing a usability gap between users actions and their results  @xcite . to overcome this limitation ,",
    "researchers argue that database interfaces need to adopt the _ direct manipulation _",
    "principle  @xcite , a well - known concept in the _ human - computer interaction ( hci ) _ area  @xcite .",
    "it enables users to iteratively specify operators by directly interacting with result instances using simple interactions  @xcite .",
    "researchers also argue that join query results should be represented in an easier - to - understand format that improves the interpretation of query results .",
    "jagadish et al .",
    "@xcite proposed the notion of the _ presentation data model _ , which they defined as a full - fledged layer above the logical and physical schema .",
    "this presentation layer allows users to better understand the query results without requiring full awareness of the schema .",
    "all this research strongly suggests the need for developing database interfaces that are usable , interactive , and interpretable .",
    "we present _ etable _ , a novel presentation data model with which users can interactively browse and navigate databases on an entity - relationship level without writing sql .",
    "_ etable _ presents a query result as an enriched table in which each cell can contain a set of _ entity references_. by deliberately relaxing the _ first normal form _ , we compactly represent one - to - many and many - to - many relationships within a single table  a novel capability that enables users to more easily browse and interpret query results consisting of multiple relations .",
    "figure  [ fig : table - screenshot ] illustrates how _ etable _ effectively presents a list of sigmod papers containing the keyword `` user '' from an academic paper database collected from dblp and the acm digital library ( see figure  [ fig : schema ] for schema ) .",
    "each row in _",
    "etable _ shows the base attributes and relevant entities of a paper , such as its authors and cited papers .",
    "if a relational database were used to obtain the same information , 9 tables would need to be joined , and the results produced would be hard to interpret ( e.g. , many duplicated cells ) .    to discover",
    "which relevant entities should be shown for each row , _ etable _ uses a novel graph - based model called the _ typed graph model ( tgm ) _ , which frees users from concerning themselves with the complexity of the logical schema ; users may instead focus on exploring and understanding the data set at the conceptual ( or entity - relationship ) level .",
    "the _ typed graph model _",
    "stores relational data as graphs in which nodes represent entities ( e.g. , authors , papers ) and edges represent relationships ( e.g. , those that relate authors to papers ) .",
    "this transformation enables _ etable _ to retrieve other related entities through simple graph operations .",
    "for example , a given paper s authors , stored as direct neighbors , can be retrieved through a quick neighbor - lookup .    as the construction of complex queries and the exploration of data",
    "are inherently iterative processes , database exploration tools should provide easy - to - use operations to help users incrementally revise queries  @xcite .",
    "_ etable _ s direct manipulation interface enables users to directly work with and modify an existing enriched table to update its associated queries .",
    "for example , imagine a user , jane , who would like to further explore the result in figure  [ fig : table - screenshot ] . to see the detailed information about the authors of a particular paper",
    ", she clicks on its `` author count '' button ( figure  [ fig : operators - example]-b ) .",
    "this simple interaction of tapping the button is translated into a series of _ primitive operators _ behind the scene , such as _ select _ , as in selecting the row associated with a paper ; and _ add _ , as in adding and joining the ` authors ` table with the ` papers ` table . with a few rounds of similar interactions",
    ", jane can incrementally build complex queries .",
    "_ etable _ s novel ideas work together to address an important , often overlooked problem in databases . the seminal vision paper by jagadish et al .",
    "@xcite introduced the notion of the presentation data model and argued the importance of direct manipulation interface .",
    "however , designing an easy - to - use system that meets these requirements is challenging .",
    "_ etable _ is one of the first instantiations of this important idea , filling a critical research gap , by effectively integrating hci principles to greatly improve database usability . to enable the creation of such a usable tool , _ etable",
    "_ tightly integrates : ( 1 ) a novel hybrid data model representation , which advances over the relational and nested - relational models , to naturally represent entities and relationships ; and ( 2 ) a novel set of interactions that closely work with the representation to enable users to specify expressive queries through direct manipulation . with _ etable _",
    "s user interface , non - experts can easily and naturally explore databases without writing sql , while _",
    "etable _ internally performs queries under the hood .    through _ etable",
    "_ , we contribute :    * a novel * presentation data model * that presents a query result as an enriched table for users to easily browse and explore relational databases ( section  [ sec : overview ] , [ sec : model ] ) ; * a * graph - based model * , called _ typed graph model ( tgm ) _ that provides an abstraction of relational databases , for users to explore data in _",
    "etable _ at a conceptual level ( section  [ sec : database ] ) ; * a set of * user - level actions * , operations that users can directly apply to an enriched table to incrementally construct complex queries and navigate databases ( section [ sec : interactions ] ) ; * the * usable interface * of _ etable _ that outperforms a commercial graphical query builder in a * user study * , in both speed and subjective ratings across a range of database querying tasks ( section  [ sec : interface ] , [ sec : experiments ] ) .",
    "since query - by - example ( qbe ) was developed in 1970s  @xcite , database researchers have studied fairly extensively the usability aspect of database systems  @xcite .",
    "usability is important , especially because not all database users have expertise in writing complex queries ; many non - technical users find it challenging to write even very simple join queries  @xcite .",
    "many existing approaches are aimed at assisting users with formulating queries .",
    "one representative method is the _ visual query builder _ , which enables users to visually manipulate schema elements on a graphical interface  @xcite .",
    "however , most visual querying systems require that users have precise knowledge of a schema , which makes it difficult for non - experts to use",
    ". this limitation can be relieved in _ keyword search _",
    "systems , studied extensively in the last decade  @xcite , or natural language interfaces  @xcite .",
    "however , most of existing approaches  @xcite separate queries and results so that users can not directly refine query results , which decreases the usability of the systems .",
    "nandi and jagadish  @xcite argued that users querying process is often iterative , so database systems should guide users toward interactively formulating and refining queries .",
    "several database researchers argued that the usability of database querying systems can improve by adopting the _ direct manipulation _ paradigm  @xcite , a well - established design principle in the hci and information visualization areas . acknowledging that users needs are often ambiguous rather than precisely specifiable , researchers have developed many tools that enable users to interactively browse and explore databases  @xcite .",
    "although they are not specifically designed for relational databases , a number of interactive visualization systems for entity - relationship data have been developed by information visualization researchers  @xcite .",
    "for example , netlens  @xcite visualizes relationships between two selected entity types in many - to - many relationships , and graphtrail  @xcite visually summarizes each entity type and enables users to switch between entities .",
    "although these visualization systems provide an overview of data sets , they are not suited for examining database instances along with attributes . in exploring and analyzing instance - level information , tabular interfaces , including spreadsheets ,",
    "are better suited and often preferred by database users  @xcite .",
    "tyszkiewicz  @xcite argued that spreadsheets can play a role as a database engine by using functions and macros .",
    "liu and jagadish  @xcite formally defined operators that interactively perform grouping operations within a spreadsheet . however , since the rigid tabular structure does not effectively present many - to - many relationships , the spreadsheet suffers from the same problems that relational databases have ( i.e. , a large number of duplications ) . to overcome this limitation , jagadish et al .",
    "@xcite proposed using a presentation view layer on top of underlying databases , which is the notion of the _ presentation data model _ , defined as a full - fledged layer on top of the logical and physical models .",
    "the challenge is to design presentation data models that help people easily understand join query results and interact with them .      to develop an intuitive structure for presentation data models",
    ", we review a number of data models that conceptualize the mini - world represented in databases .",
    "one such example is the _ nested relational model _ , studied in the 1980s , which allows each cell to contain another table that presents one - to - many relationships in a single table  @xcite .",
    "the nested model has been used in several studies for designing database interfaces .",
    "bakke et al .",
    "@xcite recently designed a direct manipulation interface for nested - relational databases , and dataplay  @xcite also used the nested model for presenting query results .",
    "however , the model suffers from scalability issues because the sizes of the nested tables often become huge when an inner table contains a large number of associated rows or columns  @xcite .",
    "one way to tackle this problem is to replace the inner table with a set of pointers .",
    "for example , the _ object - relational model _",
    "lets attributes be user - defined types that include pointers  @xcite .",
    "we adapt this idea by introducing an _ entity reference _ which compactly represents related entities .",
    "another class of the data models that effectively conceptualize the real - world is the graph data model  @xcite .",
    "it represents entities as nodes and relationships as edges based on the _ entity - relationship model _",
    "catarci et al .",
    ",  @xcite used a graph - style _",
    "translation layer _ for their visual querying system . to provide users with an easy - to - understand view at an entity - relationship level",
    ", we also maintain a graph - style model , transformed from relational databases , under the presentation view .",
    "[ cols=\"<,<,<\",options=\"header \" , ]     * qualitative feedback . * we asked participants about the features they liked about _",
    "etable_. many participants ( 9/12 ) explicitly mentioned the `` pivot '' feature .",
    "they said that the pivot feature enabled them to easily specify complex join queries .",
    "one participant said `` _ _ i also loved the pivot feature ... having multiple pivots throughout the course of forming a query .",
    "i messed up a query , but could still find the right answer by doing an appropriate pivot .",
    "_ _ '' in addition , many participants said that _ etable _ provides an intuitive view to users .",
    "one said `` _ _ it is easy to see data from the perspective of what the users want to see / retrieve ... _ _ ''",
    "another said `` _ _ visually , i was able to see ... the effects of the sql operations , which made it easier to use and verify intermediate results . _ _ ''",
    "this section discusses the expressiveness of the _ etable _ model . we will first express the overall functionality of the _ etable _ queries as a general sql query pattern . by doing so",
    ", we will show how typical join queries can be translated into _",
    "etable _ queries , through multiple steps ( similar to @xcite ) , demonstrating _",
    "s expressiveness .",
    "any join queries involving only fk - pk relationships on a relational database schema that meets _ etable _ s assumptions ( detailed in appendix ) can be translated into an _",
    "etable _ query that operates on tgdb .",
    "the overall functionality of _ etable _ queries can be expressed as the following general sql query pattern :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ` select \\tau_a . * , ent - list(t_1 ) , ent - list(t_2 ) , ... from t_1 , t_2 , ... where source(p_1 ) = target(p_1 ) and",
    "source(p_2 ) = \\enspace \\qquad target(p_2 ) and ... and c_1 and c_2 and ... group by \\tau_a ; ` _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    where ` ent - list ` presents a list of corresponding entity references , similar to the ` json_agg ` operator in postgresql . each of the four components in an _ etable _ query ( i.e. , primary node type @xmath0 , node types @xmath1 , edge types @xmath2 , and selection conditions",
    "@xmath3 ) maps to a clause in sql : primary node type to group by clause ; node_types to from clause ; edge_types to join conditions ; selection conditions to where clause .    following the above mappings",
    ", we now follow the approach similar to that in @xcite to show that _ etable _ can expressively handle typical join sql queries , through a step - by - step translation .",
    "that is , for any sql join query following the above pattern , there exists an equivalent _ etable _ query .    1 .",
    "transforms a relational algebra join expression ( @xmath4 ) to a graph relation correspondence @xmath5 ( described in section 5.4 ) by analyzing the list of relations in the from clause , and the join conditions in the where clause .",
    "( each @xmath6 is a node type ; each @xmath7 an edge type . ) 2",
    ".   applies the original selection conditions to the tgdb s node types ; 3 .",
    "if there is a _ group by _ attribute , transform it to the graph s primary node type ; otherwise , if no _ group by _",
    "attribute exists , arbitrarily set a primary node type .",
    "_ etable _ can express typical join queries consisting of the core relational algebra ( i.e. , relational algebra expression that does not contain set operations ) , which accounts for a large number of the database workloads .",
    "_ etable _ additionally lets users choose a _ primary node type _ from the list of selected relations , and introduces the _ entity - reference columns _",
    "( i.e. , represented as ` ent - list ` in the above sql pattern ) to effectively present join queries .",
    "this paper focuses on the critical usability challenge that arises when joining several tables . in our future work",
    ", we plan to further increase _ etable _",
    "s expressiveness of the presentation model to the full set of operators in the relational algebra , through introducing additional operators to support more complex queries ( e.g. , set operations , complex aggregations , etc . ) .",
    "we proposed _ etable _ , a new presentation data model for interactively exploring relational databases . the enriched table representation of _ etable _ generates a holistic , interactive view of databases that helps users browse relevant information at an entity - relationship level .",
    "by directly interacting with the interface , users can iteratively specify operators , enabling them to incrementally build complex queries and navigate databases .",
    "_ etable _ outperformed a commercial graphical query builder in a user study , in both speed and subjective ratings across a range of database querying tasks .",
    "this work takes a first step towards developing a practically usable , interactive interface for relational databases , and opens up many interesting opportunities .",
    "future research directions include : ( 1 ) incorporating more operations to further improve expressive power ( e.g. , set operations ) ; ( 2 ) accelerating the execution speed of updated queries ( e.g. , by reusing intermediate results ) ; ( 3 ) leveraging machine learning techniques to rank and select important columns to display . the above ideas could usher a new generation of interactive database exploration tools that will benefit all database users .",
    "this material is based upon work supported by the nsf graduate research fellowship program under grant no .",
    "dge-1148903 and the nsf under grant no . iis-1563816 .",
    "this section describes a procedure for translating relational databases into database schema and instance graphs in the typed graph model .",
    "our approach is based on the reverse engineering literature  @xcite .",
    "we note that the following process can not be applied to any relational schema , as relational schema do not contain all the semantics , but is a guideline for translations .",
    "we make several assumptions as in the literature  @xcite .",
    "first , all the relations are in bcnf or 3nf .",
    "second , there are no ternary relationships : all the relationships are binary .",
    "third , for relationship relations , we assume that all attributes are foreign keys of the relations that participate in the relationship",
    ". any attributes of the relationship itself are ignored .",
    "finally , a relation representing a multivalued attribute always consists of two columns .    * identifying entity relations .",
    "* this step identifies entity relations from a set of relations .",
    "informally , entity relations refer to relations constructed from entity types in the entity - relationship model .",
    "we define an _ entity relation _ as a relation whose primary key does not contain a foreign key or a key inclusion dependent on any other attribute in any other relation  @xcite . for each of the identified entity relations , the following process is performed .    1 .",
    "a relation becomes a node type in the schema graph .",
    "2 .   the relation name becomes the name of the node type .",
    "3 .   all the attributes of the relation become the attributes of the node type .",
    "one attribute selected by users becomes a _ label attribute _ for the node type .",
    "we currently determine the _ label attribute _ based on a combination of heuristics , such as data type ( e.g. , text generally more interpretable than numbers ) and cardinality .",
    "however , this label selection task is hard to fully automate .",
    "thus , we also allow users to manually pick a desired label attribute . in our future work",
    ", we plan to investigate mixed - initiative approaches that allow human and computer to work together , so that we would provide an initial guess and recommend possible alternatives based on the heuristics , and allow the users to select attributes that are most meaningful to them .    * identifying 1:1 and 1:n relationships . * foreign keys , which are used to represent one - to - one and one - to - many relationships between entity relations in the relational model ,",
    "are used to identify relationships between entity relations found above . for each foreign key , the following process is performed .    1 .",
    "each foreign key becomes an edge type in the schema graph .",
    "the source node would be a node type representing a relation containing the foreign key .",
    "the target node would be a node type representing a relation which the foreign key refers to .",
    "unless the source and target node types are the same , the edge types are duplicated with a reverse direction .",
    "the label is defined as the name of the target node type .",
    "if the label is used by another edge type , a slightly different label will be created .    * identifying many - to - many relationships . *",
    "many - to - many relationships are represented as a separate table in the relational model .",
    "we identify these tables whose primary key is a concatenation of primary keys of two other entity relations . for each of the identified relationship relations , the following process is performed .    1 .",
    "each relationship relation becomes an edge type in the schema graph .",
    "the two other associated entity relations become source and target nodes .",
    "the remaining steps are the same as above ( i.e. , steps 2 & 3 )    * identifying multivalued attributes .",
    "* the relational model stores multivalued attributes in separate relations .",
    "we identify such relations .",
    "we assume these relations consist of only two attributes where both attributes make up the primary key and the first attribute is a foreign key to an entity relation . for each of this case , the following process is performed .    1 .",
    "the second attribute becomes a node type in the schema graph .",
    "the node type has one attribute which refers to itself .",
    "the label column is this only attribute .",
    "an edge type is also created from the node type representing the entity relation to the newly created node type .",
    "it will be duplicated in a reverse direction .    * identifying categorical attributes .",
    "* this step of identifying categorical attributes is optional , but we find it useful .",
    "people often perform group by operations over categorical attributes , and this step helps them perform such analysis .",
    "any of the attributes of the entity relations could be selected by users .",
    "often , attributes with low cardinality ( e.g. , less than 30 ) can be candidates for categorical attributes .",
    "for each of the selected attributes , the following process is performed .    1 .",
    "each attribute becomes a node type in the schema graph .",
    "it has one attribute which refers to itself .",
    "the label column is this only attribute .",
    "an edge type is also created from the node type representing the relation to the newly created node type .",
    "it will be duplicated in a reverse direction .",
    "this creates a tgdb schema graph . under the assumptions we made",
    ", the schema graph contains all the information in the original relational schema .",
    "once the schema is translated , it is straightforward to create the corresponding tgdb instance graph ."
  ],
  "abstract_text": [
    "<S> although researchers have devoted considerable attention to helping database users formulate queries , many users still find it challenging to specify queries that involve joining tables . </S>",
    "<S> to help users construct join queries for exploring relational databases , we propose _ etable _ , a novel presentation data model that provides users with a presentation - level interactive view . </S>",
    "<S> this view compactly presents one - to - many and many - to - many relationships within a single _ enriched table _ by allowing a cell to contain a set of _ entity references_. users can directly interact with this enriched table to incrementally construct complex queries and navigate databases on a conceptual entity - relationship level . in a user study , participants performed a range of database querying tasks faster with _ </S>",
    "<S> etable _ than with a commercial graphical query builder . </S>",
    "<S> subjective feedback about _ </S>",
    "<S> etable _ was also positive . </S>",
    "<S> all participants found that _ </S>",
    "<S> etable _ was easier to learn and helpful for exploring databases . </S>"
  ]
}
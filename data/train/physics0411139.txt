{
  "article_text": [
    "lattice monte carlo ( lmc ) computer simulations are often used to study diffusion problems when it is not possible to solve the diffusion equation .",
    "if the lattice mesh size is small enough , lmc simulations provide results that are in principle arbitrarily close to the numerical solution of the diffusion equation . in lmc simulations",
    ", a particle is essentially making an unbiased random - walk on connected lattice sites , and those moves that collide with obstacles are rejected  @xcite .",
    "the allowed monte carlo moves are usually displacements by one lattice site along one of the @xmath0 spatial directions .    in the presence of an external field",
    ", one must bias the possible lattice jumps in order to also reproduce the net velocity of the particle .",
    "however , this is not as easy as it looks because one must also make sure that the diffusion coefficient is correctly modelled along each of the @xmath0 spatial directions . using a metropolis weighting factor  @xcite does not work because in the limit of large driving fields , all the jumps along the field axis are in the same direction and hence the the velocity saturates and the diffusion coefficient in this direction vanishes",
    "this approach is thus limited to weak fields , at best .",
    "a better approach is to solve the local diffusion problem ( i.e. , inside each lattice cell ) using a first - passage problem ( fpp )  @xcite approach , and to use the corresponding probabilities and mean jumping times for the coarser grained lmc moves . in this case",
    ", the mean jumping times are shorter along the field axis , but one can easily renormalize the jumping probabilities to use a single time step . in a recent paper  @xcite , we demonstrated that although this method does give the correct drift velocity for arbitrary values of the driving field , it fails to give the correct diffusion coefficient .",
    "the problem is due to the often neglected fact that the variance of the jumping time affects the diffusion process in the presence of a net drift  @xcite .",
    "lmc models do not generally include these temporal fluctuations of the jumping time , at least not in an explicit way . in the same article  @xcite , we showed how to modify a one - dimensional lmc algorithm with the addition of a stochastic jumping time @xmath1 , where the appropriate value of the standard - deviation @xmath2 was again obtained from the resolution of the local fpp . for simulations in higher spatial dimensions @xmath3 ,",
    "it is possible to use our one - dimensional algorithm with the proper method to alternate between the dimensions as long as the monte carlo clock advances only when the particle moves along the field direction  @xcite .",
    "lmc simulations of diffusion processes actually use stochastic methods to resolve a discrete problem that can be written in terms of coupled linear equations .",
    "several years ago , we proposed a way to compute the exact solution of the lmc simulations via matrix methods , thus bypassing the need for actual simulations .",
    "this alternative method is valid only in the limit of vanishingly weak driving fields , but it produces numerical results with arbitrarily high precision . the crucial requirement of the method is a set of lmc moves that have a common jumping time .",
    "dorfman  @xcite suggested a slightly different but still exact numerical method , and the two agree perfectly at zero - field .",
    "more recently  @xcite , we extended our numerical method to cases with driving fields of arbitrary magnitudes ; in order to do that , we used lmc moves that possess a single jumping time for all spatial directions , but this forced us to neglect the temporal fluctuations discussed above . as a consequence , our numerical method generates exact velocities but fails to provide reliable diffusion coefficients . again , dorfman s alternate method also give the same velocities , but because the lmc moves do not include the proper temporal fluctuations , neither method can be used to compute the diffusion coefficient along the field axis . in summary , a fixed - time lmc algorithm can be used with exact numerical methods to compute the net velocity , but temporal fluctuations ( and hence computer simulations ) must be used to compute the diffusion coefficient .",
    "we recently solved the problem of defining a lmc algorithm with both a fixed time step and the proper temporal fluctuations  @xcite .",
    "this required the addition of a probability to stay put on the current lattice site during a given time step ( of course , this change also implies a renormalization of the jumping probabilities ) .",
    "this probability of non - motion has a direct effect on the real time elapsed between two displacements of the brownian walker , and this effect can be adjusted in order to reproduce the exact temporal fluctuations of the local fpp .",
    "we showed that this new lmc algorithm can be used with dorfman s exact numerical method to compute the exact field - dependence of both the velocity and the diffusion coefficient of a particle on a lattice in the presence of obstacles .",
    "as far as we know , this is the first biased lattice random - walk model that gives the right diffusion coefficient for arbitrary values of the external field .",
    "other models , such as the repton model  @xcite , are restricted to weak fields .",
    "several other articles ( see , e.g.  @xcite ) report simulations of diffusive processes , but all of them appear to be limited to small biases .",
    "unfortunately , our lmc algorithm  @xcite has a fatal flaw : for dimensions @xmath4 , some of the jumping probabilities turn out to be negative .",
    "this failure suggests that there is a fundamental problem with this class of models , or more precisely with standard lmc moves ( however , note that it is still possible to use computer simulations and fluctuating jumping times @xmath1 , as explained above ) . in other words , it is impossible to get both the right velocity and the right diffusion coefficient in all spatial directions ( if @xmath4 ) when the lmc jumps are made along a single axis at each step .    in this article",
    ", we examine an alternative to the standard lmc moves in order to derive a valid lmc algorithm with a common time step for spatial dimensions @xmath4 .",
    "we suggest that a valid set of lmc moves should respect the fact that motion along the different spatial directions is actually simultaneous and not sequential .",
    "as we will show , this resolves the problem and allows us to design a powerful new lmc algorithm that can be used both with exact numerical methods and stochastic computer simulations .",
    "as mentioned above , metropolis - like algorithms are not reliable if one wants to study diffusion via the dynamics of biased random - walkers on a lattice  @xcite .",
    "the discretization of such continuous diffusion processes should be done by first solving the fpp of a particle between two absorbing walls ( the distance between these arbitrary walls is the step size @xmath5 of the lattice ) . indeed",
    ", completion of a lmc jump is identical to the the first passage at a distance @xmath5 from the origin . in one dimension , this fpp has an exact algebraic solution , and the resulting transition probabilities ( noted @xmath6 for parallel and antiparallel to the external force @xmath7 ) are  @xcite : @xmath8 where @xmath9 is the ( scaled ) external field intensity , @xmath10 is boltzmann s constant and @xmath11 is the temperature .",
    "the time duration of these fpp jumps is  @xcite : @xmath12 where @xmath13 , the time duration @xmath14 of a jump when no external field is applied , is called the brownian time .",
    "although eqs .",
    "[ e : p1d ] and  [ e : tau1d ] can be used to simulate one - dimensional drift problems ( the net velocity is then correct ) , they erroneously generate a field - dependent diffusion coefficient for a free particle , which is wrong .",
    "this failure is due to the lack of temporal fluctuations in such a lmc algorithm ( at each step , the particle would jump either forward ( @xmath15 ) or backward ( @xmath16 ) , and all jumps would take the same time @xmath17 ) .",
    "as mentioned above , it is possible to fix this problem  @xcite with a stochastic time step like @xmath18 where @xmath19 can also be calculated exactly within the framework of fpp s  @xcite : @xmath20 however , the resulting algorithm can only be used in monte carlo computer simulations because exact resolution methods  @xcite require a common time step for all jumps .",
    "alternatively , temporal fluctuations can be introduced using a probability @xmath21 to remain on the same lattice site during the duration of a fixed time step @xmath22  @xcite .",
    "not moving has for effect to create a dispersion of the time elapsed between two actual jumps . in order to obtain the right free - solution diffusion coefficient",
    ", we must have  @xcite : @xmath23 this modification also forces us to renormalize the other elements of the lmc algorithm : @xmath24 @xmath25 equations  [ e : ss ] to  [ e : tt ] define a lmc algorithm that can be used with monte carlo simulations ( or exact numerical methods ) to study one - dimensional drift and diffusion problems .",
    "one can easily verify  @xcite that it leads to the proper free - solution velocity ( @xmath26 ) and diffusion coefficient ( @xmath27 ) , while satisfying the nernst - einstein relation @xmath28 .",
    "these equations will thus be the starting point of our new multidimensional lmc algorithm .",
    "in principle , we can build a simple model for @xmath3 dimensions using the elements of a one - dimensional biased random walk for the field axis and those of an unbiased random - walk for each of the @xmath29 transverse axes .",
    "indeed , it is possible to fully decouple the motion along the different spatial directions if the field is along a cartesian axis .",
    "such an algorithm is divided into three steps :    1 .",
    "first , we must select the jump axis , keeping in mind that the particle should share its walking time equally between the @xmath0 spatial directions . the probability to choose a given axis",
    "should thus be inversely proportional to the mean time duration of a jump in this direction ( note that the time duration of a jump is shorter in the field direction ) .",
    "2 .   secondly , the direction ( @xmath6 ) of the jump must be selected .",
    "3 .   finally , the time duration of the jump must be computed and the monte carlo clock must be advanced .",
    "there are several ways to implement these steps .",
    "the easiest way is to use eqs .",
    "[ e : p1d ] to  [ e : dtau ] ; in this case , the lmc clock must advance by a stochastic increment @xmath30 each time a jump is made along the field axis ( in order to obtain the proper temporal fluctuations , the clock does not advance otherwise ) .",
    "a slightly more complicated way would be to use eqs .",
    "[ e : ss ] to  [ e : tt ] ; again , the clock advances only when the jump is along the field axis , but this choice has the advantage of not needing a stochastic time increment . although both of these implementations can easily be used with computer simulations , they would not function with exact numerical methods because of the way the clock is handled .    for exact numerical methods ,",
    "an algorithm with a common time step and a common clock for all spatial directions is required .",
    "we showed that it is indeed possible to do this if we renormalize eqs .",
    "[ e : p1d ] and  [ e : tau1d ] properly  @xcite ; this approach works for any dimension @xmath3 , but it can only be used to compute the exact velocity of the particle since it neglects the temporal fluctuations . in order to also include these fluctuations , one must start from eqs .",
    "[ e : ss ] to  [ e : tt ] instead .",
    "unfortunately , this can be done only in two dimensions since the renormalization process gives negative probabilities when @xmath4  @xcite .",
    "clearly , in order to derive a multi - dimensional lmc algorithm with a fixed time - step , a common clock and the proper temporal fluctuations , we need a major change to the basic assumptions of the lmc methodology . in the next section ,",
    "we propose to allow simultaneous jumps in all spatial directions .",
    "this is a natural choice since lmc methods do indeed assume that the motion of the particle is made of @xmath0 entirely decoupled random - walks .",
    "current lmc methods assume this decoupling to be valid , but force the jumps to be sequential and not simultaneous .",
    "in our multi - dimensional algorithm  @xcite , the lmc moves were the standard unit jumps along one of the cartesian axes , and a probability to stay put was used to generate temporal fluctuations . since moving along a given axis actually contributes to temporal fluctuations along all the other axes  @xcite , the method fails for @xmath4 because the transverse axes then provide an excess of temporal fluctuations .",
    "this strongly suggests that the traditional sequential lmc moves are the culprit .",
    "sequential lmc moves are used solely for the sake of simplicity , but they are a poor representation of the fact that real particles move in all spatial directions at the same time .",
    "this weakness is insignificant for unbiased diffusion , but it becomes a roadblock in the presence of strong driving fields .    in order to resolve this problem , we thus suggest to employ a set of moves that respect the simultaneous nature of the dynamics along each of the @xmath0 axes . to generate a lmc algorithm for this new set of moves",
    ", we will use our exact solution of the one - dimensional problem for each of the @xmath0 directions .",
    "our new lmc moves will include one jump attempt along each of @xmath0 spatial directions .",
    "the list will thus consist of @xmath31 different moves since we must allow for all possible permutations of the three fundamental jumps ( of length @xmath32 and @xmath33 ) used by the exact one - dimensional model that we will be using for each axis .",
    "note that the external field must be parallel to one the cartesian axes ( we choose the @xmath34-axis here ) .",
    "the dynamics is governed by @xmath35 , @xmath21 and @xmath22 in the @xmath34-direction ( eqs .",
    "[ e : ss ] to  [ e : tt ] ) , whereas we can in principle use @xmath36 and @xmath13 for the transverse directions because there is no need to model the temporal fluctuations when there is no net drift in the given direction  @xcite .",
    "the optimal time step for our new moves is @xmath37 , the duration of the fastest unit process .",
    "we thus have to rescale the transverse probability @xmath38 accordingly : @xmath39 this generates an arbitrary probability to stay put in the transverse directions : @xmath40 in the zero - field limit , this probability gives : @xmath41 therefore , the probability to stay put is the same in all the directions in this limit , as it should . in the opposite limit @xmath42 , we have : @xmath43 and the jumps in the transverse directions become extremely rare , as expected .",
    "equations  [ e : ss ] to  [ e : sy ] are sufficient to build the table of multi - dimensional moves and their different probabilities since the @xmath0 directions are independent .",
    "figure  [ f : schema ] illustrates the new lmc moves for the @xmath44 and @xmath45 cases in the absence of obstacles .",
    "the moves , all of duration @xmath22 , combine @xmath0 simultaneous one - dimensional processes and include net displacements along lattice diagonals .",
    "the @xmath46 paths are further defined in table  [ t : free]a ; such a description of the trajectories will be essential later to determine the dynamics in the presence of obstacles .",
    "it is straightforward to extend this approach to higher dimensions ( @xmath4 ) .",
    "we can easily verify that this new set of lmc moves gives the right free - solution velocity and diffusion coefficients for all dimensions @xmath47 . if the field is pointing along the @xmath34-axis ,",
    "the average displacement per time step is @xmath48 , while the average square displacement is @xmath49 . using these results",
    ", we can compute the free - solution velocity @xmath50 and diffusion coefficient @xmath51 : @xmath52 and @xmath53 one can also verify that @xmath54 and @xmath55 .",
    "these are precisely the results that we expect .",
    "therefore , the model introduced here does work for all values of the external field @xmath56 and all dimensions @xmath57 in the absence of obstacles .",
    "the problems faced in ref .",
    "@xcite have been resolved by making the @xmath0 directions truly independent from each other and choosing @xmath22 as the fundamental time step of the new lmc moves .",
    "since this new model works fine in free - solution , the next step is to define how to deal with the presence of obstacles .",
    "the rule that we follow in those cases where a move leads to a collision with an obstacle is the same as before , i.e. , such a jump is rejected and the particle remains on the same site . in our algorithm , though , this means that one ( or more ) of the @xmath0 sub - components of a @xmath0-dimensional move is rejected .",
    "therefore , the list of transition probabilities must take into account all of the possible paths that the particle can follow given the local geometry .",
    "a two - dimensional example is illustrated in table  [ t : free]b .",
    "we see that the two different trajectories that previously lead to the upper right corner ( site @xmath58 ) now lead to different final positions due to the rejection of one of the two unit jumps that are involved .",
    "the final transition probabilities for this particular case are listed in table  [ t : free]b .",
    "of course , all local distributions of obstacles can be studied using the same systematic approach .",
    "in order to test our new set of lmc moves for systems with obstacles , we will compare its predictions to those of our previous two - dimensional algorithm  @xcite since we know that both can properly reproduce the velocity and the diffusion coefficient of a particle in the case of an obstacle - free system .",
    "however , the different moves used by these two algorithms means that a true comparison can only be made in the limit of the continuum since the choice of moves always affects the result of a coarse - grained approach if there are obstacles .",
    "the exact numerical method that we developed in collaboration with dorfman  @xcite is not limited to the previous set of lmc moves .",
    "it can easily be modified to include other lmc moves , including diagonal moves . combining dorfman s method  @xcite and our new lmc moves",
    ", we now have a way to compute the exact velocity and the exact diffusion coefficient of a particle in the presence of arbitrary driving field for any dimension @xmath59 .",
    "we thus studied the system shown in fig .",
    "[ f : continuum]b using both algorithms , and we repeated the calculation for different lattice parameters @xmath60 ( with @xmath61 ) while the obstacle size ( @xmath5 ) remained constant ( the surface concentration of obstacles is thus kept constant at @xmath62 ) .",
    "the limit of the continuum corresponds to @xmath63 .",
    "we compared the velocities and diffusion coefficients along the field - axis obtained with both algorithms over a wide range of @xmath64 .",
    "note that the value of the external scaled field @xmath56 , which is proportional to the lattice parameter ( @xmath65 ) , has to be rescaled by the factor @xmath64 .",
    "figure  [ f : continuum]a presents the data for both algorithms for a nominal field intensity @xmath66 .",
    "we clearly see that the two approaches converge perfectly in the @xmath67 limit .",
    "interestingly , the new algorithm converges slightly faster towards the asymptotic continuum value .",
    "this is explained by the fact that the diagonal transitions reduce the number of successive collisions made by a random - walker when it is trapped behind an obstacle at high field .",
    "conventional three - dimensional lmc algorithms can not be used to study both the mean velocity and the diffusion coefficient of a brownian particle if the time step has to be constant ( as required by exact numerical methods ) .",
    "this limitation is due to the fact that these algorithms only allow jumps to be made along one axis at each time step .",
    "such unit jumps make it impossible to obtain the proper temporal fluctuations that are key to getting the right diffusion coefficient .",
    "we propose that lmc moves should actually respect the fact that all of the @xmath0 spatial dimensions are fully independent .",
    "this means that each move should include a component along each of these dimensions .",
    "this complete dimensional decoupling allows us to conserve the proper temporal fluctuations and hence to reproduce the correct diffusion process even in the presence of an external field of arbitrary amplitude .",
    "this approach leads to a slightly more complicated analysis of particle - obstacle collisions , but this is still compatible with the exact numerical methods developed elsewhere  @xcite .",
    "the new lmc algorithm presented in this paper opens the door to numerous coarse - grained simulation and numerical studies that were not possible before because previous algorithms were restricted to low field intensities .",
    "this work was supported by a discovery grant from the natural science and engineering research council ( _ nserc _ ) of canada to gws .",
    "mgg was supported by a _",
    "scholarship , an excellence scholarship from the university of ottawa and a strategic areas of development ( sad ) scholarship from the university of ottawa .",
    "( squares ) and diffusion coefficient @xmath68 ( circles ) vs the mesh size @xmath64 for @xmath66 .",
    "these calculations were done using the algorithm presented in ref .",
    "@xcite ( filled symbols ) and the one proposed in this paper ( empty symbols ) .",
    "( b ) the obstacle is of size @xmath69 , the lattice is of size @xmath70 ( with periodic boundary conditions ) , and the particle ( not shown ) is of size @xmath71 . the system is shown for three different values of the mesh size parameter @xmath64 . , width=528 ]"
  ],
  "abstract_text": [
    "<S> we recently demonstrated that standard fixed - time lattice random - walk models can not be modified to properly represent biased diffusion processes in more than two dimensions . </S>",
    "<S> the origin of this fundamental limitation appears to be the fact that traditional monte carlo moves do not allow for simultaneous jumps along each spatial direction . </S>",
    "<S> we thus propose a new algorithm to transform biased diffusion problems into lattice random walks such that we recover the proper dynamics for any number of spatial dimensions and for arbitrary values of the external field . </S>",
    "<S> using a hypercubic lattice , we redefine the basic monte carlo moves , including the transition probabilities and the corresponding time durations , in order to allow for simultaneous jumps along all cartesian axes . </S>",
    "<S> we show that our new algorithm can be used both with computer simulations and with exact numerical methods to obtain the mean velocity and the diffusion coefficient of point - like particles in any dimensions and in the presence of obstacles .    ,    ,    diffusion coefficient , biased random - walk , monte carlo algorithm . </S>"
  ]
}
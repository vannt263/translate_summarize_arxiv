{
  "article_text": [
    "data management is one of the key features of a data grid where large amounts of data are distributed and/or replicated to remote sites , potentially all over the world . in general , a data grid needs to provide features of a pure computational grid  @xcite ( resource discovery , sharing etc . ) as well as more specialised data management features like replica management which is the main focus of this article .",
    "the european datagrid project  @xcite ( also referred to as _ edg _ in this article ) , one of the largest data grid projects today , has a main focus on providing and deploying such data replication tools .",
    "although the project officially started in january 2001 , prototype implementations started already in early 2000 and a first data management architecture was presented in  @xcite .",
    "thus , within the project there is already a well - established experience in providing replication tools and deploying them on a large - scale testbed .    since interoperability of services and international collaborations on software development are of major importance for edg as well as other grid projects in europe , the u.s .",
    "etc . , the first set of data management tools ( i.e. replication tools ) provided and presented here , are based on established de - facto standards in the grid community .",
    "in addition , for parts of the software presented here , edg has development and deployment collaborations with partner projects like ppdg  @xcite , datatag  @xcite and lcg  @xcite .    in this article",
    ", we present our first set of replication tools that have been deployed on the european datagrid testbed .",
    "these tools are included in release 1.4 of the edg software system and are thus regarded as the first prototype of the data management software system .",
    "details about the architecture , software features and experience is given .",
    "the article is organised as follows . in section  [ architecture ]",
    "we first outline briefly the data management challenge and present the architecture that we established for edg release 1.4 .",
    "the replication tools gdmp ( grid data mirroring package ) and edg - replica - manager are presented in the context of the data management architecture .",
    "implementation details of these tools and a detailed discussion on their differences in design and usage are presented in section  [ implementation ] .",
    "their deployment in several testbeds and some historical background about the deployment is given in section  [ deployment ] .",
    "since these replication tools are supposed to be replaced by second generation replication tools , we briefly introduce them in section  [ future ] since the experience that has been gained deploying edg release 1.4 provided vital input for this new development .",
    "in the following section we first describe the data management domain with its requirements and then a simplified architecture for our first generation replication tools , i.e. the ones deployed in edg release 1.4 .",
    "more details on edg releases is given in section  [ deployment ] .",
    "in this section we outline the main design features that we have chosen to meet the requirements of particular data intensive application domains .",
    "we first start with a basic example and then summarise the basic requirements that are tackled by our replication tools .    in a typical data grid ,",
    "large amounts of data that are stored in read - only files need to be replicated in a secure and efficient way  @xcite . as a basic file replication example we consider a data grid that consists of four sites ( cern in switzerland , fermilab in the u.s . ,",
    "italy and france ) as depicted in figure  [ replication - example ] . in the example , new files have been created at the site `` fermilab '' and are now ready to be replicated to remote sites .",
    "several remote sites ( e.g. the site cern ) is interested in having files locally and thus would like to replicate the newly created files to its local data store .",
    "end - users can then access replicas at both sites and might want to retrieve files with the lowest access latency .        note that for simplicity we deal with read - only files and leave the update - synchronisation problem open for future work as pointed out in  @xcite .    in the following list",
    "the major data management and replication requirements are summarised and the need for a specific software solution is outlined .",
    "most of these solutions are covered by our replication tools discussed in the article .",
    "* files need to be transferred ( copied ) between several large data stores that reside at distributed sites . - _ need for secure and efficient file transfer mechanism _",
    "( e.g. gridftp or equivalent ) * since replication implies that identical file copies exist , replicas need to be uniquely identified through logical and physical filenames . - _ need for replica catalogue for naming and locating replicas _ * combine file transfer with file cataloguing and present it as an atomic transaction to the user . - _",
    "need for replica management service _ * large data stores use secondary and possibly tertiary storage devices , i.e. disk and tape systems , respectively . - _ need for interaction between replica management service and storage service _ , i.e. mass storage interface    more detailed requirements of data grids ( in particular data intensive scientific domains like high energy physics ) and the data distribution problem are presented elsewhere  @xcite .      in the remainder of this article , we use the following edg terminology :    * _ storage element ( se ) _ : a storage element is a data store that provides secondary and/or tertiary storage devices as well as a data transfer mechanism that allows for file transfers between several storage elements connected via wide - area network links * _ computing element ( ce ) _ : a computing element can be regarded as a gateway to several worker nodes ( wn ) that are responsible for the execution of a user job .",
    "it is important to note that data that has been produced on worker nodes needs to be stored on storage elements in order to be accessible for subsequent user jobs . *",
    "_ user interface ( ui ) _ : a user interface node is a machine where application users can log on and have access to the edg software tools . in principle , the ui contains client software tools . * _ logical file name ( lfn ) _ : an lfn uniquely identifies a set of identical replicas . * _ physical file name ( pfn ) _ : identifies one file ( replica ) of a set of identical replicas . note that the terminology changes from time to time but it is important to note that the pfn identifies a real data file in a storage element or a computing element ( worker node ) .",
    "the architecture of our replication tools is based on a typical topology of storage elements , computing elements ( i.e. worker nodes ) and user interface nodes ( ui ) as outlined below .",
    "this topology is also realised in the edg testbed as illustrated in figure  [ edg - nodes ] .",
    "file transfer is mainly done between worker nodes ( of computing elements ) and storage elements where files are permanently kept and registered with a replica catalogue ( rc ) . in order to introduce new files to the grid , they can also be transferred from a ui node to a worker node or directly to the storage element .",
    "all these use cases have the following in common : a client - server architecture is required where client tools have to be available on the user interface as well as on worker nodes .",
    "server software is mainly required on the storage elements .    in order to meet the requirements outlined in section  [ requirements ] ,",
    "we have developed replica management tools in two steps :    * * gdmp ( grid data mirroring package ) *  @xcite for replication ( mirroring ) of file sets between several storage elements .",
    "this was the first replication tool that was developed in collaboration between the european datagrid project and the particle physics data grid ( ppdg )  @xcite ( refer to section  [ deployment ] for more details on release dates ) .",
    "this replication tool also provides a simple interface to mass storage systems ( mss ) .",
    "+    * * edg - replica - manager * was developed in the second year of the datagrid project .",
    "it provides some added replication functionality that meets additional user requires that were identified during the deployment of gdmp in the edg testbed . in this way , both tools complement each other and provide the basic replication functionality of the first generation replication tools .",
    "+     both , gdmp and edg - replica - manager are part of the current ( as of march 2003 ) edg software release 1.4 .    both , gdmp and edg - replica - manager use components of the globus toolkit 2 ( tm ) and thus are based on the current de - facto standard in grid computing . although gdmp and edg - replica - manager are architecturally different ( client - server architecture versus client side tool only - details are given in section  [ implementation ] ) - they have the following architectural components in common :    * gridftp  @xcite for efficient and secure file transfer .",
    "* grid security infrastructure ( gsi ) for secure communication ( for message passing as well as file transfer ) * replica catalogue ( both ldap based rc as well as rls  @xcite )    since gdmp has a much richer set of functionality , additional features of globus are used ( e.g. globus io for client - server communication ) .",
    "after some general architectural introduction , we now go more into detail with the features of gdmp and edg - replica - manager and how the tools are used in the edg testbed . for each of the two software tools we give advantages and disadvantages and thus a critical discussion . finally , we compare the two tools directly and point out for which use case they can be used in a most efficient way .      since both our main replication tools gdmp and edg - replica - manager use a replica catalogue to identify and locate file replicas",
    ", we first explain the replica catalogue interaction and its usage .    in the globus toolkit , a simple",
    ", centralised replica catalogue is provided that is based on ldap technology for storing and retrieving replica information  @xcite . in edg",
    ", we developed a wrapper around the globus c api and provided a c++ api as well as a simple command line tool .",
    "on the edg testbed , this ldap based replica catalogue has been used but it showed several limitations as outlined in the list below .    * _ performance deterioration with number of entries _ :",
    "due to the way how the ldap schema has been chosen for the replica catalogue , we experienced low response times ( in the order of 30 seconds to a few minutes ) for inserts into the replica catalogue with the number of entries . if the filenames ( lfns ) are short ( in the order to 10 characters ) , this problem does not occur too often but with long filenames ( in the order of 50 to 100 characters per lfn ) , there were severe limitations .",
    "this is also partly due to the overhead of the c++ wrapper . *",
    "_ centralised , non - scalable _ : the ldap based replica catalogue is hosted by a single ldap server and thus is a single point of failure .",
    "based on the previous item , it was identified that the catalogue did not easily scale to large amounts of file entries .",
    "thus , we needed to impose restrictions on the users to limit the amount of inserts within a certain time window . *",
    "_ no high level user command line tool for browsing _",
    ": there exist a few command line tools provided by globus and edg to query the catalogue but there are no high level tools for browsing .",
    "an alternative is a simple graphical user interface provided by edg but not deployed on the edg testbed .",
    "another option is a simple ldap browser . * _ schema not flexible _ : the ldap based schema that is organised in collections , locations and logical files etc .",
    "does not allow for a simple extension . *",
    "_ lfn sub - set of pfn _ : there is a severe limitation on file naming since the lfn always needs to be a sub - set of the physical file name .",
    "thus , all storage elements need to have a similar directory structure of replicas . this can be a limitation since it imposes specific and global configurations of ses ( i.e. all ses need to be configured in a similar way ) .",
    "the based replica catalogue tool provided by globus did not provide gsi authentication .",
    "this was added by our partners in nordugrid and then integrated into the replica catalogue server ( edg - rc - server ) and the replica catalogue api / cli .",
    "however , it was not deployed on the testbed due to the way the gsi support was added and the low flexibility offered by ldap in terms of configuration options .",
    "edg and globus have identified and discussed all issues above and thus provided a new solution known as replica location service ( rls )  @xcite . in later versions of both gdmp and edg - replica - manager , interfaces to the rls have been provided and most of the issues outlined above were eliminated . however , on the edg testbed only the ldap based rc was deployed up to now .",
    "rls will be part of edg release 2.0 .",
    "basic file transfer mechanisms like gridftp allow for secure and efficient file transfer from one disk server to another .",
    "however , since large amounts of files are not only stored on disks but also on mass storage systems ( mss ) like castor or hpss , file replication tools need to provide a mechanism to transfer files between storage elements , regardless of storage method used ( disk or tape drives managed by a mass storage system ) .    originally , when we designed and developed gdmp , there was no direct grid - enabled interface that allowed for such a file transfer .",
    "thus , the following solution was applied - primarily to applications in the high energy physics community : a large disk ( or a disk pool ) is considered as a first cache and all wide - area transfers are done from disk to disk .",
    "an additional file transfer is then required between the disk ( pool ) and the mass storage system .",
    "thus , a file replication step includes a wide - area file transfer as well as a local staging to / from the mass storage system .",
    "such staging interfaces are provided by gdmp . for further details",
    "refer to  @xcite .    in edg release 1.4",
    ", gdmp s interface has been deployed for systems like castor and hpss .",
    "obviously , such an additional file copy step can be avoided if the mass storage system provides a direct grid - enabled interface supporting security ( gsi ) , gridftp , virtual organisations and space management .",
    "the storage resource manager ( srm ) interface as described in  @xcite provides part of that .",
    "several solutions are currently under development within several projects and are supposed to be included into edg release 2.x .",
    "gdmp was a pioneer effort that started initially in the cms collaboration ( driven by the high energy physics community ) and it was originally designed to support file replication in high level trigger studies .",
    "later , it became a joint project between edg and ppdg .",
    "it allows for mirroring of data between storage elements through a host subscription method .",
    "the basic interaction is outlined in figure  [ figure : gdmp ] .",
    "gdmp has been enhanced and improved for several years ( see section  [ history ] ) , also based on lots of feedback from application users in the edg testbed .",
    "below we list the pros and cons of gdmp that we and our users experienced in the deployment of gdmp .",
    "* _ stable and scalable architecture _ : gdmp s architecture has proven to be stable and scalable to the needs of the basic file replication sites . * _ reliable and robust replication _ : the transfer mechanisms are reliable and robust although we faced a few problems with earlier implementations of the gridftp library . *",
    "_ retries on error _ : if files are not available at the time of transfer , the gdmp server takes care of multiple retries and thus initiating the file transfer at a later point in time .",
    "* _ file check summing after file transfer _ : crc check summing is used to compare the file contents at the beginning and the end of a file transfer . *",
    "_ complex server side logging _ : the gdmp server takes care of logging all possible events in the file transfer process ( including staging , subscription etc . ) .",
    "this also allows for debugging of file transfers in case of failures . *",
    "_ users can control file transfer via local catalogues _ :",
    "import , export and local file catalogues can be used to filter files and thus reduce the replication process to a specific set of files . * _ back - ends available for actions to be performed on replication _",
    "mass storage system hooks , automatic replication , post replication actions , etc .",
    "are provided by the gdmp server .",
    "* _ mass storage system interface _ : basically for castor , hpss or equivalent      * _ designed for site rather than point - to - point replication _ : gdmp was designed to handle mirroring among sites and not for point - to - point replication .",
    "point - to - point replication was another requirement that appeared during the usage of gdmp in the edg testbed . in order to respond to this request , the edg - replica - manager has been provided . * _ several steps involved for replication _ :",
    "due to the fact that gdmp can mirror entire directories with their files based on a subscription model , three commands need to executed in order to register files in a local catalogue , get them published to remote sites and then replicate them .",
    "several users thought that this involved too many steps : this has again been addressed in the edg - replica - manager at the cost that no subscription is available . * _ difficult configuration _ :",
    "since gdmp has a rather complex set of features and offers support for multiple vos on one server , the configuration is rather complex ( `` difficult '' ) .",
    "some improvements could be made as regards the configuration and user authentication mechanism .",
    "* _ no space management provided _ : space management is beyond the scope of gdmp and is the responsibility of the storage element service ( or srm ) . * _ error messages not always clear _ * _ errors recovery requires sometimes manual intervention _    for more background on gdmp",
    ", we refer the reader to  @xcite .",
    "the edg - replica - manager  @xcite extends the replica management library in globus toolkit ( tm ) 2.0 and is a client side tool rather than a client - server system .",
    "it allows for replication and registration of files in a replica catalogue and works with the ldap based globus replica catalog as well as the replica location service ( available in vdt 1.1.7 or higher  @xcite ) .",
    "in addition , it uses gdmp s staging interface to stage files to a mass storage system .",
    "the edg - replica - manager uses the edg replica catalogue api ( in c++ ) .",
    "the edg - replica - manager uses the information service ( globus mds is used in edg release 1.4 ) to find out storage locations on a given storage element .",
    "it is assumed that basic account management on a storage element is done via tools provided by the gdmp configuration part .",
    "thus , the edg - replica - manager takes this into account and finds out where to store files of the particular virtual organisation a user belongs to .",
    "in this way , an end - user only needs to specify the host name of a given storage element and the edg - replica - manager then takes care of finding the exact source and destination as well as triggering a staging operation to / from a mass storage system .",
    "the basic interaction is outlined in figure  [ figure : edg - rm ] .",
    "note that this tool can be used to transfer files from any of the nodes in the edg testbed ( i.e. user interface machine , worker node , storage element ) .",
    "a simple command line interface as well as a c++ interface are provided  @xcite .",
    "similar to gdmp , we list the pros and cons of the edg - replica - manager in the following two subsections .",
    "* _ user friendly interface _ : since the replica manager has a rather small amount of features and initial feedback from our user community has been gathered through gdmp , this tool provides a user friendly interface . *",
    "_ functional _ : the basic requirement of a replication tool is satisfied including that it hides several details of storage locations , i.e. detailed storage locations are not required for storing and retrieving files - only the lfn is required rather than full pfns . *",
    "_ third party transfer available _ : using the features of gridftp , a third - party transfer can be triggered from any node where the edg - replica - manager client is installed .",
    "* _ gsi authorisation available for replica catalogue _ : due to our modifications to the ldap based replica catalogue server , we also enabled gsi authentication for the edg - replica - manager .",
    "for rls , gsi authentication is the default option . *",
    "_ easy configuration _ : only a few client side parameters need to be set in order to configure the interaction with the replica catalogue and the mass storage system ( i.e. gdmp s interface to the mss ) .      * _ error messages not always clear _ * _ no roll - back ; no transactions _ : since edg - replica - manager does not have a corresponding server ( as it is the case for gdmp ) , no roll - back or transactions are implemented .",
    "in addition , there is no file checksumming nor centralised logging . in summary ,",
    "the added value that one has with a client - server tool is not gained here . *",
    "_ no complete interface to replica catalogue schema _",
    ": logical file information like file size or crc checksumming are not supported directly .",
    "one needs to use the edg c++ interface to the replica catalogue .    for more details on the user interface of the edg - replica - manager ,",
    "refer to the documentation at  @xcite .",
    "a schematic comparison of the two replication tool is given in table  [ table : gdmp - vs - rm ] and shall assist in choosing which tool to use for a particular replication requirement .",
    ".comparison : gdmp versus edg - replica - manager [ cols=\"<,<\",options=\"header \" , ]     note that globus 2.2.x does not support the replica catalog nor the replica management libraries .",
    "therefore , edg - replica - manager has not been completely ported to globus 2.2.4 but we succeeded with gdmp since there is only the dependency to globus - replica - catalog and edg provided a special version of that library .",
    "our replication tools were not only used and deployed in the edg testbed , but also in a few other environments as we point out below . note the gdmp was also part of an early vdt release  @xcite .",
    "gdmp was first used for high level trigger studies ( `` production '' ) of hep experiments in 2000/2001 ( replication between ses ) . in this environment",
    ", we gained our first experience and used the tool in a `` production like '' environment .",
    "later , gdmp was introduced to the european datagrid testbed which was originally set up in autumn 2001 .",
    "this also resulted in some changes of user requirements : all user commands needed to be executed from a user interface machine or from worker nodes of a computing element .",
    "this caused some redesign of the gdmp architecture .",
    "both tools ( gdmp and edg - replica - manager ) are used in european and u.s .",
    "testbeds :    * edg : atlas , cms , alice and lhcb stress tests * worldgrid : worldgrid is the first transatlantic testbed where inter - operable between european and u.s .",
    "grid tools has been demonstrated  @xcite . +",
    "as regards the our replication tools : edg - replica - manager was used by both cms and atlas applications to move and replicate files between u.s .",
    "and european sites .",
    "gdmp was used as part of the cms mop environment to replicate set of files produced at several sites . *",
    "lcg-0 : deployed and inter - operable with worldgrid and glue testbeds as has been shown in  @xcite .",
    "within the last three years , we gained lots of experience in developing and deploying replication tools in a data grid environment .",
    "our first generation tools ( gdmp , edg - replica - manager , api and command line interface replica catalogue ) have been successfully used in some `` production like '' environments as well as in several testbeds in europe and in the u.s .",
    "all the tools are included in edg release 1.4 where they are currently deployed on the edg application testbed .",
    "the tools we designed and developed cover client - server as well as client side tools and thus provide a wide range of possible design choices . whereas a client - server tool allows for complex functionality ( including fault tolerance , retries , server side logging , server side file processing etc . ) , the configuration is comparably more complex than for simple client tools like the edg - replica - manager .",
    "the tradeoff in such client - side - only solutions is that many features that one might want to have for fault tolerance and reliability are missing .",
    "we also gained experience with providing configuration options to our software tools : in a complex testbed it is of major importance to keep the configuration as simple as possible . in the current release ,",
    "users experience some difficulties with relative complex configuration options .",
    "the experience we gained from our first generation tool is used in the development for the second generation replication tools that will be provided by edg in release 2.0 . in particular , new services like a replica location service + replica metadata catalogue , an optimization service etc .",
    "will be added to the basic functionality of the second generation tools .",
    "special thanks to asad samar ( one of the co - founders of gdmp ) and aleksandr konstantinov who participated to the code development of gdmp .",
    "we also thank our user community and our colleagues for valuable feedback and input .      9 bill allcock ,",
    "joe bester , john bresnahan , ann chervenak , ian foster , carl kesselman , samuel meder , veronica nefedova , darcy quesnel , steve tuecke .",
    "secure , efficient data transport and replica management for high - performance data - intensive computing , _",
    "18th ieee symposium on mass storage systems and 9th nasa goddard conference on mass storage systems and technologies _ , san diego , april 17 - 20 , 2001 .",
    "ian bird , bryan hess , andy kowalski , don petravick , rich wellner , junmin gu , ekow otoo , alex romosan , alex sim , arie shoshani , wolfgang hoschek , peter kunszt , heinz stockinger , kurt stockinger and brian tierney and jean - philippe baud , srm ( storage resource manager ) joint functional design , global grid forum document , ggf4 , toronto , february , 2002    ann chervenak , ewa deelman , ian foster , wolfgang hoschek , adriana iamnitchi , carl kesselman , peter kunszt , matei ripeanu , heinz stockinger , kurt stockinger , and brian tierney .",
    "giggle : a framework for constructing scalable replica location services . in proc . of the intl .",
    "ieee supercomputing conference ( sc 2002 ) , baltimore , usa , november 2002 .",
    "dirk dllmann , wolfgang hoschek , javier jaen - martinez , asad samar , ben segal , heinz stockinger , kurt stockinger .",
    "models for replica synchronisation and consistency in a data grid . _",
    "10th ieee international symposium on high performance and distributed computing ( hpdc-10 ) _ , san francisco , california , august 7 - 9 , 2001 .",
    "wolfgang hoschek , javier jean - martinez , asad samar , heinz stockinger , kurt stockinger .",
    "data management in an international data grid project .",
    "_ 1st ieee / acm international workshop on grid computing ( grid2000)_. bangalore , india , dec 17 - 20 , 2000 ."
  ],
  "abstract_text": [
    "<S> in the first phase of the eu datagrid ( edg ) project , a data management system has been implemented and provided for deployment . </S>",
    "<S> the components of the current edg testbed are : a prototype of a replica manager service built around the basic services provided by globus , a centralised replica catalogue to store information about physical locations of files , and the grid data mirroring package ( gdmp ) that is widely used in various hep collaborations in europe and the us for data mirroring . during this year </S>",
    "<S> these services have been refined and made more robust so that they are fit to be used in a pre - production environment . </S>",
    "<S> application users have been using this first release of the data management services for more than a year . in the paper </S>",
    "<S> we present the components and their interaction , our implementation and experience as well as the feedback received from our user communities . </S>",
    "<S> we have resolved not only issues regarding integration with other edg service components but also many of the interoperability issues with components of our partner projects in europe and the u.s . </S>",
    "<S> the paper concludes with the basic lessons learned during this operation . </S>",
    "<S> these conclusions provide the motivation for the architecture of the next generation of data management services that will be deployed in edg during 2003 . </S>"
  ]
}
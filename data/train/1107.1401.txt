{
  "article_text": [
    "in the popular game of roulette a small metal bullet is spun and stopped at random on one of the @xmath1 numbers @xmath2 .",
    "apart from @xmath3 each one of these numbers has several properties .",
    "for example 13 is at the same time odd , black , in the 2nd 12 , and @xmath4 ( in the first column ) ; see figure  [ fig : roulette ] .",
    "we will show how to compute the expected time to encounter , in successive draws at random , all these properties : even , odd , red , black , 118 , 1936 , 1st 12 , 2nd 12 , 3rd 12 , 1c , 2c , 3c .",
    "our setting is as follows .",
    "let @xmath5 be a set whose @xmath6 many elements @xmath7 will be viewed as `` coupons '' .",
    "let @xmath8 be any family of nonempty ( not necessarily distinct ) subsets . thus @xmath9 . by definition @xmath10 contains exactly the coupons @xmath7 of the @xmath11-th _ goal _ ( purpose , property , etc . )",
    "put another way , each fixed coupon @xmath12 is _ multipurpose _ in the sense that it can serve many goals @xmath13 , and so forth , according to the sets @xmath14 that contain @xmath7 . if @xmath15 , then every coupon has at least one goal .",
    "it is convenient to imagine the @xmath6 many coupons as being located in an urn .    in a _",
    "length @xmath16 trial _ a set of @xmath16 coupons is picked at random one by one , and all occuring goals are recorded . for any picked coupon",
    "some of its goals may have occured already and are not again taken into account . in a trial _ with replacement _ each coupon is put back into the urn after its goals have been ticked off .",
    "thus at each moment every fixed coupon is drawn with probability @xmath17 . in a trial _ without replacement _ no drawn coupons are put back . then necessarily @xmath18 . again at each moment every coupon remaining in the urn has the same probability to be drawn ( some number @xmath19 ) .",
    "a trial is _ successful _ if all @xmath20 goals show up .",
    "it is handy to call a successful trial _ sharply successful _",
    "if the @xmath20 goals are only completed in the _ last _ draw .",
    "the _ generalized coupon - collector problem _ ( gccp ) is to calculate the expected length @xmath21 of a sharply successful trial .",
    "we shall use the notation @xmath22 and @xmath23 for a gccp with _ replacement _",
    ", respectively _ without replacement_.    coming back to roulette , the coupons are the numbers @xmath24 and they constitute the set @xmath5 .",
    "as seen , all coupons have several properties , except for @xmath3 which has none ( so @xmath25 ) . using the method of  [ sec :",
    "with - rep ] it turns out that the expected length of a sharply successful trial in this gccp with replacement is @xmath26    if after each `` drawing '' one prevents the spinning wheel from delivering the same number again ( thus having a gccp _ without _ replacement ) the corresponding number is obviously smaller ; in fact it is @xmath27 notice that we can also model our multipurpose coupons @xmath28 with _ different _ drawing probabilities @xmath29 as follows ( for simplicity we only focus on drawings _ with _ replacement ) .",
    "if without great loss of generality all @xmath29 s are rational , say @xmath30 , replace each @xmath31 by @xmath32 copies @xmath33 which all have exactly the same goals as @xmath31 .",
    "let @xmath34 be the new @xmath35-element set of coupons and let @xmath36 match @xmath37 in the obvious way .",
    "then @xmath38 is the expected length of a sharply succesful trial with _",
    "coupons @xmath28 if they were subject to the drawing probabilities @xmath29 .",
    "there is a simple situation where the coupons in @xmath5 _ already _ furnish ( but do not `` have '' ) potentially different drawing probabilities .",
    "namely , suppose that each @xmath12 has exactly _ one _ of @xmath20 goals which we then refer to as its _ type _ , and that different coupons can have the same type .",
    "then @xmath39 is a _ partition _ , not @xmath37 , in case of a partition . ] of @xmath5 and @xmath40 is the probability for drawing a type @xmath11 coupon .",
    "this matches the `` classic '' coupon - collector problem ( ccp ) except that in the latter framework there is no @xmath41 but simply an unbounded supply of coupons .",
    "each belongs to exactly one of @xmath20 types , the @xmath11-th type being drawn with probability @xmath29 .",
    "the expected length @xmath42 of a sharply successful trial is known to be [ david - barton , p.269 ]    @xmath43    in particular , if @xmath44 ( call this the _ homogeneous _ ccp ) then ( [ eq:1 ] ) can be shown [ feller 1957 , example ix.3(d ) ] to simplify to    @xmath45    where @xmath46 is the harmonic number .",
    "for instance , setting @xmath47 in ( [ eq:2 ] ) one finds that a die has to be thrown 14.7 times on average until all numbers have shown up .",
    "the ccp has been studied by many authors , which is evident when feeding google scholar with `` coupon collecting '' .",
    "notwithstanding our sweeping generalization of the ccp ( whose formula ( 1 ) is intimidating enough ) the present article does not feature subtle probability arguments , but rather revolves around an efficient algorithm ( the _ transversal @xmath48-algorithm _ ) for counting the @xmath0-element transversals of a set system @xmath49 .",
    "the connection to coupon collecting , straightforward but unexploited so far , is discussed in ",
    "[ sec : counting ] . surprisingly perhaps ,",
    "our approach to the gccp appeals more to the gccp _ without replacement _ (  [ sec : without - rep ] ) . only afterwards in ",
    "[ sec : with - rep ] we tackle the gccp with replacement . in ",
    "[ sec : algorithm ] details on the origin and workings of the transversal @xmath48-algorithm are provided .    a numerical evaluation of our method pitted against the inclusion - exclusion approach ( [ eq:1 ] ) , as well as applications to e.g.  chess follow in  [ sec : comparison][sec : alpha ] .",
    "we shall use the notation @xmath50 : = \\{1,2 , \\ldots , h\\}$ ] for positive integers @xmath20 .",
    "in this and the next section all trials are silently assumed to be _ without _ replacement .",
    "mathematically our approach to the gccp is straightforward ; the challenge is its algorithmic realization in the next section . as to the mathematics , for fixed @xmath51 let @xmath52 be the probability that a length @xmath0 trial is successful . in particular @xmath53 and @xmath54 .",
    "recall that @xmath55 is the set of coupons of the @xmath11-th goal @xmath56)$ ] .",
    "the _ hypergraph _ ( @xmath57 set system ) @xmath58 fully determines all aspects of the gccp .",
    "specifically , @xmath59 is a _ transversal _ ( or _ hitting set _ ) of @xmath37 if @xmath60 for all @xmath61 $ ] .",
    "such a set @xmath62 of coupons displays each goal at least once , and so each permutation of @xmath62 corresponds to a successful trial .",
    "conversely , each successful trial uses a set @xmath62 of coupons that is a transversal of @xmath37 .",
    "therefore , if @xmath63 then exactly @xmath64 trials among the @xmath65 many length @xmath0 trials are successful , and so    @xmath66    hence @xmath67 ) \\label{eq : s}\\ ] ] is the probability that a length @xmath0 trial is sharply successful",
    ". therefore @xmath68 can be found by calculating the numbers @xmath69 .",
    "in this section all trials are still _ without _ replacement .",
    "consider a set @xmath70 of eight coupons , each one of which serves between one and three goals , according to table [ tab:1 ] .",
    "for instance the trials @xmath71 and @xmath72 are successful .",
    "the first is sharply successful , the second is not . in order to calculate the expected length of a sharply successful trial , we put @xmath73 and aim to count the @xmath69 many @xmath0-element transversals of @xmath74)$ ] .",
    "this is achieved by the transversal @xmath48-algorithm [ wild 2012a ] which encodes a potentially gargantuan number of transversals of a hypergraph within comparatively few @xmath75_-valued _ rows . in the present article",
    "we are less concerned with _ how _ this method works ( see  [ sec : algorithm ] for a few hints ) but rather _ what _ it delivers .",
    "namely , our _ transversal hypergraph _",
    "@xmath76 gets presented as a union of five @xmath75-valued rows ( table [ tab2 ] ) .",
    ".toy problem with 8 coupons and 4 goals [ cols=\"^,^,^,^,^,^,^,^,^\",options=\"header \" , ]",
    "boneh  hofri 1997 : :    a. boneh and m. hofri , the coupon - collector problem revisited  a    survey of engineering problems and computational methods . _",
    "stochastic    models _ 13 ( 1997 ) , 3966 .",
    "david - barton 1962 : :    f.n .",
    "david and d.e .",
    "barton , combinatorial chance , charles griffin &    company limited 1962 .",
    "feller 1957 : :    w. feller , _ an introduction to probability theory and its    applications , vol .",
    "wiley , new york , 2nd edition , 1957 .",
    "wild 2012a : :    m. wild , compactly generating all satisfying truth assignments of a    horn formula .",
    "_ journal on satisfiability , boolean modeling and    computation _ 8 ( 2012 ) , 6382 .",
    "wild 2012b : :    m. wild , computing the output distribution and selection probabilities    of a stack filter from the dnf of its positive boolean function .    _ journal of mathematical imaging and vision _ , online first , 1 august    2012 ."
  ],
  "abstract_text": [
    "<S> the classic coupon - collector problem ( ccp ) is generalized . </S>",
    "<S> only basic probability theory is used . </S>",
    "<S> centerpiece rather is an algorithm that efficiently counts all @xmath0-element transversals of a set system . </S>"
  ]
}
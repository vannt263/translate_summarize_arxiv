{
  "article_text": [
    "we test the vulnerability of our model against failure cascades by using computer simulations ( see methods section for details ) . for given values of the parameters @xmath0 , @xmath1 , @xmath2 , and @xmath9",
    ", we repeatedly generate instances of the ensemble , each time initiating a cascade according to a ` fallen tree ' approach that is , an unspecified external event removes an edge and , if it is supervised , the associated control device . following each cascade , @xmath10 , the size of the remaining largest connected component of the underlying electricity network ,",
    "is recorded .",
    "we assume that administrators / designers of real systems are interested in ensuring that cascades are bounded by a certain size . to this end , we consider @xmath11 the probability that , following a cascade , the number of nodes disconnected from the largest connected component the effective cascade ` size ' : @xmath12 is less than a fraction @xmath13 $ ] of the original nodes .    in general ,",
    "as one would expect , the larger the average load carried by the system , the smaller the probability that the cascade size is bounded ( see fig .  [ fig:2]*a * ) .",
    "however , we also observe another feature of this type of cascading model , first identified in ref .",
    "@xcite : for each value of @xmath0 , there is a non - zero critical value @xmath14 that corresponds to the maximum average load below which cascade sizes are bounded with probability one ( within a given accuracy , here @xmath15 part in @xmath16 ) . plotting the values of @xmath17 against @xmath0",
    ", a sharp transition can be observed at some point @xmath18 ( see fig .",
    "[ fig:2 ] * b * ) . above this value ,",
    "the fraction of disconnected nodes is always bounded by @xmath19 , regardless of how much load the system is carrying .",
    "in the completely reliable case ( @xmath20 ) , @xmath18 just corresponds to the percolation threshold @xmath21 ( @xmath22 for delaunay triangulations @xcite ) .",
    "the cascades are then ` percolation controlled ' due to the formation of a giant component connected by supervised edges , coined here the giant supervised component ( gsc ) .",
    "the upper bound on cascade size that is enforced by the gsc , can be lowered by employing more control devices _ i.e. _ , increasing @xmath0 ( see fig .  [ fig:2]*c * ) . for @xmath23 ,",
    "most nodes are connected by supervised edges and cascades can not disconnect nodes from the giant component .",
    "whilst @xmath20 , the only impact of decreasing @xmath2 is to increase the number of devices disconnected by the initial external shock . disregarding the correlation induced by starting the cascade at the point of disconnection",
    ", this effect corresponds to a small shift @xmath24 in the positive @xmath25-direction of figs .",
    "[ fig:2]*b * and [ fig:2 ] * c*. here , @xmath26 is the average sub - tree size associated with a randomly chosen node ( see fig .",
    "[ fig:2]*c * inset ) . figure [ fig:2]*d * shows the effects of this shift when @xmath27 , for both large and small @xmath28 . here",
    ", it is natural to characterize changes in @xmath2 by a normalized cost @xmath29 where @xmath30 is the total length of the supervisory network .",
    "the message of fig .",
    "[ fig:2]*d * is that : increasing the number of direct cpu connections at the cost of increased network length , is only beneficial if the suppression of small cascades is desired .",
    "if , in contrast to above , the control devices have an inherent rate - of - failure ( @xmath31 ) , then a gsc may be either disconnected or reduced in size as control devices fail . in the best case scenario , when the supervising network is mono - centric and @xmath1 is close to one , the picture is one of ` effective percolation ' with ( see methods ) @xmath32 where @xmath33 is determined by the topology of the underlying network ( @xmath34 for a delaunay triangulation , see methods section for details ) .",
    "this simple form shows good agreement with direct estimates of the value of @xmath18 ( see fig .",
    "[ fig:3]*b * and methods for details ) . for lower values of @xmath1 ,",
    "percolation - like descriptions are no longer appropriate : regardless of the number of control devices , it is not possible to bound cascade sizes in a way that is independent of the average load carried by the system .",
    "indeed , if control devices are both unreliable ( @xmath31 ) _ and _ the control network is tree - like ( @xmath35 ) , the system is very susceptible to large failure cascades , with little impact made by increasing @xmath0 ( see fig .",
    "[ fig:4 ] ) . in this case",
    ", we see that for both large and small cascades , the topology of the control network is very relevant and can induce extreme fragility in the control system ( see fig .",
    "[ fig:5 ] ) .",
    "in conclusion , we have introduced a minimal model which incorporates the salient features of many real - world control systems .",
    "firstly , the control devices are simple : they only have so - called ` supervisory ' functions of monitoring and intervention .",
    "secondly , the system is ` distributed ' , that is , not only are the devices positioned in space but they require coordination in this case , by connection to a cpu .",
    "thirdly , we also incorporate the effects of devices having an inherent rate - of - failure . with only these simple characteristics ,",
    "the resulting behaviour is very rich .",
    "the primary feature concerns the fragility of such control systems : a small reduction of control device reliability leads to a regime where the ability to suppress cascades is dramatically affected by the topology of the control network .",
    "our results suggest that it is much more cost - effective to try to improve the reliability of control devices rather than working on the stability of the supervisory control network .",
    "we believe that these results make a first step in understanding distributed supervisory control , whilst also providing helpful guidelines to designers and administrators of real systems .",
    "we welcome further work in the area .",
    "to simulate the system , @xmath36 nodes are placed in the plane at random , the delaunay triangulation is then formed , and loads are allocated to the resulting edges according to @xmath37 .",
    "the supervisory network is incorporated by first adding a control device to each edge with probability @xmath0 , then forming the network according to the rewiring procedure described in the main text ( dependent on parameter @xmath2 ) .",
    "cascades are initiated by assuming an external event that causes an edge to be removed at random and its load is redistributed amongst its nearest neighbors .",
    "if the failing edge was supervised , then the control device is also removed . during the ensuing cascade",
    ", we stipulate that for a control device to work , it must be connected to the cpu , a special node that can not be removed .",
    "if a control device is unconnected , then it can not work and is of no use .",
    "however , if a control device is connected , and it is supervising an edge that is about to fail _ i.e. _ , it is carrying the largest excess load in the system then there is a probability @xmath1 that the excess load is dissipated and the load of the edge is reset to @xmath7 .",
    "the quantity @xmath1 can be thought of as the inherent reliability of a device .",
    "simulations were written in c++ and implemented using the boost graph library @xcite where possible .",
    "delaunay triangulations were produced using an iterative algorithm @xcite .",
    "results are presented for systems of size @xmath38 ( @xmath39 edges ) and statistics are calculated over @xmath40 instances of each ensemble ( defined by parameters @xmath0 , @xmath1 , @xmath2 , and @xmath9 ) .",
    "critical values @xmath41 and @xmath18 are accurate up to an error of approximately @xmath42 , since they are identified by varying the underlying parameter by finite increments . in figs .  [ fig:4]*c * and [ fig:5 ] , @xmath41 corresponds to @xmath43 in order to accommodate the noise associated with different control network structures .",
    ".for different values of @xmath0 and @xmath1 , @xmath44 , and @xmath45 \\ll \\langle n \\rangle$ ] . [ cols=\"<,^,^\",options=\"header \" , ]     [ tab:1 ]    labelling each supervised edge by @xmath46 , the probability that a supervised edge survives a cascade is @xmath47 , where @xmath48 is the number of times a device is solicited _ i.e. _ , it tries to dissipate its excess load with probability @xmath1 . here , for large enough systems the number of supervised edges is given by @xmath49 .",
    "( since the average degree of a delaunay triangulation is peaked around six , the total number of edges @xmath50 is well approximated by @xmath51 . ) using a bar to denote system average @xmath52 , we know that if @xmath53 $ ] is small , then @xmath54 . approximating a large system average with an ensemble average @xmath55 over many smaller systems ,",
    "the results are given in table 1 .",
    "here it is clear that the average @xmath56 is well approximated by the value @xmath57 , regardless of @xmath0 and @xmath1 , and that the variance is always very small compared to the average .",
    "we can then write the effective probability that a generic edge resists failure as @xmath58 with @xmath59 . the system will then be resilient if @xmath60 , which implies eq .",
    "( [ eq : pstar ] ) .    equation  ( [ eq : pstar ] ) may be contrasted with a direct approximation of when an effective gsc forms . from simulation results ,",
    "we associate each transition with the value @xmath61 , defined as halfway between @xmath21 and the lowest value of @xmath0 for which @xmath41 is maximal ( _ i.e. _ , the midpoint of the transition ) .",
    "rgm thanks the grant cea - nrt ` starc ' for financial support .",
    "mb is supported by the fet - proactive project plexmath ( fp7-ict-2011 - 8 ; grant number 317614 ) funded by the european commission .",
    "together , rgm and mb conceived of , and analysed the model , with rgm producing simulations .",
    "the manuscript was written collaboratively between both authors .",
    "the authors declare no competing financial interests .                                b.  a. carreras , d.  e. newman , p. gradney , v.  e. lynch , and i. dobson , _ interdependent risk in interacting infrastructure systems _ in proceedings of the 40th annual hawaii international conference on system sciences , ( 2007 ) .",
    "i.  dobson et al . , _ initial review of methods for cascading failure analysis in electric power transmission systems ieee pes cams task force on understanding , prediction , mitigation and restoration of cascading failures _ , in proceedings of power and energy society",
    "general meeting - conversion and delivery of electrical energy in the 21st century , ieee , ( 2008 ) ."
  ],
  "abstract_text": [
    "<S> * recent work in the area of interdependent networks has focused on interactions between two systems of the same type . </S>",
    "<S> however , an important and ubiquitous class of systems are those involving monitoring and control , an example of interdependence between processes that are very different . in this article </S>",
    "<S> , we introduce a framework for modelling ` distributed supervisory control ' in the guise of an electrical network supervised by a distributed system of control devices . </S>",
    "<S> the system is characterised by degrees of freedom salient to real - world systems namely , the number of control devices , their inherent reliability , and the topology of the control network . </S>",
    "<S> surprisingly , the behavior of the system depends crucially on the reliability of control devices . </S>",
    "<S> when devices are completely reliable , cascade sizes are percolation controlled ; the number of devices being the relevant parameter . for unreliable devices , the topology of the control network is important and can dramatically reduce the resilience of the system . *    </S>",
    "<S> the study of interdependent , networked , systems is an area that has recently received a lot of attention @xcite , where the majority of work has so far focussed on the interactions between different ` critical infrastructures ' @xcite . </S>",
    "<S> we argue that critical infrastructures should themselves be viewed as a special class of interdependent systems , due to the presence of in - built monitoring and control mechanisms @xcite . </S>",
    "<S> the type of control most prevalent in such systems is so - called ` supervisory ' control as distinguished from , say , controllability @xcite which typically involves monitoring an underlying process , with the option of a pre - defined intervention once a critical state is reached . </S>",
    "<S> here , in keeping with the picture of interdependent networks , both monitoring and intervention are local processes , associated with specific points on the underlying network . </S>",
    "<S> furthermore , we are interested in the case when the control is ` distributed ' , that is the local interventions are somehow coordinated via communications between sensors . at the most general level , we are interested in building a physics - like model of such systems : that is , complicated enough to encompass any interesting behaviour , but sufficiently idealized that the mechanisms at play can be easily identified and understood .    our ideas are based on the supervisory control and data acquisition ( scada ) concept , ubiquitous in real - world monitoring of industrial manufacturing , power generation , and distribution processes ( _ e.g. _ , electricity , gas , and water ) @xcite . to this end , </S>",
    "<S> our model comprises an underlying system , here , an electrical network , where a simple control device is placed on each transmission line with a probability @xmath0 ( see fig .  </S>",
    "<S> [ fig:1 ] ) . </S>",
    "<S> the device monitors the load of that line and , if it is overloaded , then the device can dissipate the excess load with a probability of success @xmath1 , and prevent the failure . in the opposite case , the line fails and the load is redistributed . </S>",
    "<S> the redistribution of loads may then lead to the overloading and failure of further power lines , and so on , potentially resulting in large system - wide outages @xcite . </S>",
    "<S> if , at any stage during this process , more than one line becomes overloaded , then it is assumed that the next line to fail will be the one with the largest excess load . in the case where these lines are supervised </S>",
    "<S> , it therefore helps if the control devices respond in a coordinated way always dissipating the excess load on the line under the greatest threat of failure . </S>",
    "<S> we therefore stipulate that for a control device to be operational , it must be in contact with a central processing unit ( cpu ) . </S>",
    "<S> we envisage a communication network composed of ict - like links connecting the devices and the cpu where , in keeping with a distributed scada picture , each device can also act as a signal relay so called ` daisy chaining ' . </S>",
    "<S> crucially , this means that when a control device fails , it can disconnect many other devices from the cpu , rendering them useless and dramatically increasing the fragility of the system . </S>",
    "<S> the structure of the supervisory network is therefore very important , and we consider two extremes . on one hand , </S>",
    "<S> a euclidean minimum spanning tree ( emst ) minimises the total length of the control network and hence the cost but typically sacrifices direct connectivity to the cpu . on the other hand , a mono - centric network maximises direct connectivity to the cpu , but can be very costly in terms of the total length of network needed . </S>",
    "<S> we interpolate between these two configurations by using a simple rewiring process : for each node in a emst , replace with probability @xmath2 , the edge connected to the neighbor closest to the cpu ( along the network ) , by an edge that connects directly to the cpu . </S>",
    "<S> the result is that the topology of the supervisory network relies on one continuous parameter @xmath3 $ ] , such that @xmath4 and @xmath5 correspond to emst and mono - centric networks respectively .    for modelling the electrical network </S>",
    "<S> we adopt a straightforward approach which has been proposed and analysed elsewhere @xcite . </S>",
    "<S> the idea assumes a set of producers and consumers linked by power lines , where the resulting load carried by each line , or edge , may be represented by a random variable drawn from a uniform distribution @xmath6 . </S>",
    "<S> since @xmath6 is properly normalized , the upper and lower bounds of the distribution are related to the average load @xmath7 , such that @xmath8 & \\mathrm{if}\\               \\ \\bar{l}\\leq 1/2 \\\\              1 / 2\\left(1-\\bar{l}\\right ) & \\forall\\               l\\in\\left[2\\bar{l}-1,1\\right ] & \\mathrm{if}\\ \\ \\bar{l } > 1/2          \\end{array }      \\right . .      </S>",
    "<S> \\label{eq : uofl}\\ ] ] in keeping with the above , it is also assumed that the transmission lines have an intrinsic carrying capacity ( assumed here , without loss of generality , to be one ) which , if exceeded , causes the line to fail and the load to be redistributed evenly amongst its nearest neighbours @xcite . the crucial departure from ref .  </S>",
    "<S> @xcite , is in our choice of network topology . </S>",
    "<S> since many critical infrastructures are , to a good approximation , planar subdivisions @xcite , we use the well known delaunay triangulation @xcite , which is a simple , reasonable model for planar networks such as power grids . </S>"
  ]
}
{
  "article_text": [
    "finite element methods ( fem ) arguably constitute one of the most successful method families in numerically approximating elliptic partial differential equations ( pde s ) that are given in variational ( also known as divergence ) form .    for the reader",
    "s appreciation of this statement we briefly introduce standard fem concepts .",
    "let @xmath0 be a given domain ( open and bounded set ) in @xmath1 , @xmath2 , @xmath3 , be given functions with the appropriate regularity such that the operator @xmath4 , for @xmath5_{{\\ensuremath{{\\ensuremath{\\alpha}\\xspace},{\\ensuremath{\\beta}\\xspace}=1,\\ldots , d } } } $ ] , makes sense , is elliptic and there is a unique function @xmath6 satisfying @xmath7 with @xmath8 on @xmath9  ( * ? ? ?",
    "* for details ) .",
    "the _ classical solution _",
    ", @xmath10 , of this problem can be characterized by first writing the pde in _ weak _ ( also known as _ variational _ ) _ form _ using green s formula : @xmath11 where @xmath12 are appropriate ( infinite dimensional ) function spaces .",
    "a ( finite ) galerkin procedure consists in finding an _ approximation _ of @xmath10 , @xmath13 @xmath14 where @xmath15 and @xmath16 are finite dimensional `` counterparts '' ( usually subspaces , but may be not ) of @xmath17 and @xmath18 and the bilinear form @xmath19 an approximation of @xmath20 .",
    "for example , when @xmath21 ( modulo quadrature ) @xmath22 and @xmath23 are a space of continuous piecewise @xmath24-degree polynomial functions on a partition of @xmath0 , we obtain the standard _ conforming mesh - refinement ( @xmath25-version ) finite element method of degree @xmath24_.    the reason behind the fem s success in such a framework is twofold : ( 1 ) the weak form is suitable to apply functional analytic frameworks ( lax  milgram theorem or babuka  brezzi  ladyenskaya condition , e.g. ) , and ( 2 ) the discrete functions need to be differentiated at most once , whence weak smoothness requirements on the `` elements '' .    in this article , we depart from this basis by considering second order elliptic boundary value problems ( bvp s ) in nonvariational form @xmath26 for which one may not always be successful in applying the standard fem ( with reference to  [ sec : notation ] for the notation ) .",
    "indeed , the use of the standard fem requires ( 1 ) the coefficient matrix @xmath27 to be ( weakly ) differentiable and ( 2 ) the rewriting of the second order term in divergence form , an operation which introduces an advection ( first order ) term : @xmath28 even when coefficient matrix @xmath29 is differentiable on @xmath0 , this procedure could result in the problem becoming advection  dominated and unstable for conforming fem , as we demonstrate numerically using problem ( [ eq : problem2 ] ) .",
    "our main motivation for studying linear elliptic bvp s in nonvariational form is their important role in pure and applied mathematics .",
    "an important example of nonvariational problems is the fully nonlinear bvp that is approximated via a newton method which becomes an infinite sequence of linear nonvariational elliptic problems  @xcite .    in this article",
    ", we propose and test a direct discretization of the _ strong form _ ( [ eqn : bvp : strong - form ] ) that makes no special assumption on the derivative of @xmath30 .",
    "the main idea , is an appropriate definition of a _ finite element hessian _ given in ",
    "[ defn : fehessian ] .",
    "the finite element hessian has been used earlier in different contexts , such as anisotropic mesh generation @xcite and _ finite element convexity _",
    "the finite element hessian is related also to the finite element ( discrete ) elliptic operator appearing in the analysis of evolution problems  @xcite .",
    "the method we propose is quite straightforward , and we are surprised that it is not easily available in the literature .",
    "it consists in discretizing , via a galerkin procedure , the bvp  ( [ eqn : bvp : strong - form ] ) _ directly without writing it in divergence form_.    the main difficulty of our approach is having to deal with a somewhat involved linear algebra problem that needs to be solved as efficiently as possible ( this is especially important when we apply this method in the linearization of nonlinear elliptic bvp s ) .",
    "we overcame this difficulty in  [ sec : characteriseandsolve ] , by combining the definition of @xmath10 s distributional hessian , @xmath31 with equation ( [ eqn : bvp : strong - form ] ) into a system of equations that are larger , but easier to handle numerically , once discretized .",
    "it is worth noting that there are alternatives to our approach , most notably the standard finite difference method and its variants .",
    "the reason we are interested in a galerkin procedure is the ability to use an unstructured mesh , essential for complicated geometries where the finite difference method leads to complicated , and sometimes prohibitive , modifications ( especially in dimension @xmath32 and higher ) , and the potential of dealing with adaptive methods , using available finite element code .",
    "furthermore , our method has the potential to approach the iterative solution fully nonlinear problems where finite difference methods can become clumsy and demanding  @xcite .",
    "this paper focuses mainly on the algorithmic and linear algebraic aspects of the method and is set out as follows . in  [ sec : notation ] we introduce some notation and set out the model problem .",
    "we then present a discretization scheme for the model problem using standard conforming finite elements in @xmath33 . in ",
    "[ sec : characteriseandsolve ] we present a linear algebra technique , inspired by the standard _",
    "schur complement _ idea , for solving the linear system arising from the discretization . finally , in ",
    "[ sec : numerics ] we summarize extensive numerical experiments on model linear boundary value problems ( bvps ) in nonvariational form and an application to quasilinear bvp in nonvariational form .",
    "let @xmath34 be an open and bounded lipschitz domain .",
    "we denote @xmath35 to be the space of square ( lebesgue ) integrable functions on @xmath0 together with it s inner product @xmath36 and norm @xmath37 .",
    "we also denote by @xmath38 the integral of a function @xmath39 over the domain @xmath40 and drop the subscript for @xmath41 .",
    "we use the convention that the derivative @xmath42 of a function @xmath43 is a row vector , while the gradient of @xmath10 , @xmath44 is the derivative s transpose , i.e. , @xmath45 .",
    "we will make use of the slight abuse of notation , following a common practice , whereby the hessian of @xmath10 is denoted as @xmath46 ( instead of the correct @xmath47 ) and is represented by a @xmath48 matrix .",
    "the sobolev spaces  @xcite @xmath49 are equipped with norms and semi - norms @xmath50 respectively , where @xmath51 is a multi - index , @xmath52 and derivatives @xmath53 are understood in a weak sense .",
    "we pay particular attention to the cases @xmath54 , @xmath55 we denote by @xmath56 the action of a distribution @xmath57 on the function @xmath58 . if both @xmath59 then @xmath60 .",
    "we consider the following problem : find @xmath61 such that @xmath62 where the data @xmath63 is prescribed and @xmath64 is a general linear , second order , uniformly elliptic partial differential operator .",
    "let @xmath65 , the space of bounded , symmetric , positive definite , @xmath66 matrixes .",
    "@xmath67 we use @xmath68 to denote the frobenius inner product between two matrixes .",
    "let @xmath69 be a conforming triangulation of @xmath0 , namely , @xmath69 is a finite family of sets such that    1 .",
    "@xmath70 implies @xmath71 is an open simplex ( segment for @xmath72 , triangle for @xmath73 , tetrahedron for @xmath74 ) , 2 .   for any @xmath75 we have",
    "that @xmath76 is a full subsimplex ( i.e. , it is either @xmath77 , a vertex , an edge , a face , or the whole of @xmath78 and @xmath79 ) of both @xmath78 and @xmath79 and 3 .",
    "@xmath80 .",
    "the _ shape regularity _ of @xmath69 is defined as @xmath81 where @xmath82 is the radius of the largest ball contained inside @xmath71 and @xmath83 is the diameter of @xmath71 .",
    "we use the convention where @xmath84 denotes the _ meshsize function _ of @xmath69 , i.e. , @xmath85 we introduce the _ finite element spaces _",
    "@xmath86 where @xmath87 denotes the linear space of polynomials in @xmath88 variables of degree no higher than a positive integer @xmath89 .",
    "we consider @xmath90 to be fixed and denote by @xmath91 and @xmath92 .",
    "let @xmath93 and @xmath94 where @xmath95 and @xmath96 form a basis of @xmath97 , @xmath98 respectively .",
    "testing the model problem ( [ problem ] ) with @xmath99 gives @xmath100 in order to discretize with @xmath98 we use an appropriate definition of a hessian of a finite element function .",
    "such a function may not admit a hessian in the classical sense , so we consider it as a distribution ( or generalized function ) which we recall the definition .",
    "[ defn : distributionalhessian ] let @xmath101 be the outward pointing normal of @xmath0 .",
    "given @xmath102 its _ generalized hessian _ defined in the standard distributional sense is given by @xmath103 where we are using @xmath104 to denote the tensor product between two geometric vectors @xmath105 .",
    "[ the : fehessian ] for each @xmath106 there exists a unique @xmath107\\in{\\ensuremath{\\mathbb v}}^{d\\times d}$ ] such that @xmath108,\\phi\\right\\rangle } }       =       { \\ensuremath{\\left\\langle { \\ensuremath{{\\ensuremath{\\mathrm{d}}}^2}}v\\,\\vert\\,\\phi\\right\\rangle } } { \\quad{\\:\\forall\\:}}\\phi\\in{\\ensuremath{\\mathbb v}}.\\ ] ]    given a finite element function @xmath106 , definition [ defn : distributionalhessian ] implies @xmath109 we fix @xmath110 and let @xmath111 notice that @xmath112 is a bounded linear functional on @xmath113 in the @xmath114-norm as , @xmath115 thus , due to the density of @xmath113 in @xmath114 , @xmath112 admits a unique extension , @xmath116 .",
    "let @xmath117 be the restriction of @xmath118 to @xmath98 .",
    "since @xmath116 is linear and bounded on @xmath114 it follows that @xmath119 is linear and bounded on @xmath98 in the @xmath114-norm .",
    "hence by riesz s representation theorem there exists an @xmath107\\in{\\ensuremath{\\mathbb v}}^{d\\times d}$ ] such that for each @xmath120 @xmath108,\\phi\\right\\rangle } }         : =        r(\\phi )        =         -{\\ensuremath{\\left\\langle\\nabla v\\otimes\\nabla \\phi\\right\\rangle } }         +        { \\ensuremath{\\left\\langle\\nabla v\\otimes{\\ensuremath{\\boldsymbol{n } } } \\",
    "\\phi\\right\\rangle}}_{{\\partial}{\\ensuremath{\\varomega}\\xspace } }         , \\ ] ] which coincides with the generalized hessian ( cf .",
    "definition [ defn : distributionalhessian ] ) on @xmath98 .",
    "[ defn : fehessian ] from theorem [ the : fehessian ] we define the _ finite element hessian _ as follows .",
    "let @xmath106 then @xmath108,\\phi\\right\\rangle } }       : =      - { \\ensuremath{\\left\\langle\\nabla v\\otimes\\nabla\\phi\\right\\rangle } }      +      { \\ensuremath{\\left\\langle\\nabla v\\otimes{\\ensuremath{\\boldsymbol{n } } } \\",
    "\\phi\\right\\rangle}}_{{\\partial}{\\ensuremath{\\varomega}\\xspace } }       { \\quad{\\:\\forall\\:}}\\phi\\in{\\ensuremath{\\mathbb v}}.\\ ] ] it follows that @xmath121 is a linear operator on @xmath97 .",
    "taking the model problem ( [ fullproblem ] ) we substitute the finite element hessian directly , reducing the space of test functions to @xmath97 , we wish to find @xmath122 such that @xmath123}}},{\\mathring{\\phi}}\\right\\rangle } }     =    { \\ensuremath{\\left\\langlef,{\\mathring{\\phi}}\\right\\rangle } } { \\quad{\\:\\forall\\:}}{\\mathring{\\phi}}\\in{\\mathring{{\\ensuremath{\\mathbb v}}}}.\\ ] ]    [ the : ndfem ] the _ nonvariational finite element solution _ for the model problem s discretization ( [ eqn : disc ] ) is given as @xmath124 , where @xmath125 is the solution to the following linear system @xmath126 the components of ( [ eqn : ndfemformulation ] ) are given by @xmath127    since @xmath128 \\in { \\ensuremath{\\mathbb v}}^{d\\times d}$ ] for each @xmath129 , @xmath130 = { \\ensuremath{{{{{\\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{\\phi } } } } } } } } } ^{{{\\boldsymbol\\intercal } } } } }    { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{h}}}}}}}}_{\\alpha,\\beta } $ ] . then",
    ", testing ( [ eqn : disc ] ) with @xmath131 , @xmath132,{{{\\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{{\\mathring{\\phi}}}}}}}}}}\\right\\rangle } }      \\\\      & =      \\sum_{\\alpha=1}^d\\sum_{\\beta=1}^d       { \\ensuremath{\\left\\langle{{{\\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{{\\mathring{\\phi } } } } } } } } } } , { \\ensuremath{{\\ensuremath{\\boldsymbol{a}}}}}^{\\alpha,\\beta } { \\ensuremath{{{{{\\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{\\phi}}}}}}}}}^{{{\\boldsymbol\\intercal } } } } }        { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{h}}}}}}}}_{\\alpha,\\beta } \\right\\rangle } }      \\\\       & =      \\sum_{\\alpha=1}^d\\sum_{\\beta=1}^d       { \\ensuremath{\\left\\langle { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{{\\mathring{\\phi}}}}}}}}}},{\\ensuremath{{\\ensuremath{\\boldsymbol{a}}}}}^{\\alpha,\\beta } { \\ensuremath{{{{{\\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{\\phi}}}}}}}}}^{{{\\boldsymbol\\intercal}}}}}\\right\\rangle } }      { { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{h}}}}}}}}_{\\alpha,\\beta}}.      \\\\      & =       \\sum_{\\alpha=1}^d\\sum_{\\beta=1}^d       { { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{b}}}}}}}}}^{\\alpha,\\beta } { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{h}}}}}}}}_{\\alpha,\\beta }    \\end{split}\\ ] ]    utilizing definition [ defn : fehessian ] for each @xmath133 we can compute @xmath134 , noting @xmath135 , @xmath136\\right\\rangle } }      \\\\      & =      -      { \\ensuremath{\\left\\langle{\\ensuremath{\\partial_{\\beta}{}}\\xspace}{{{\\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{\\phi } } } } } } } } , { \\ensuremath{\\partial_{\\alpha}{u}}\\xspace}\\right\\rangle } }       +       { \\ensuremath{\\left\\langle{{{\\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{\\phi } } } } } } } } { \\ensuremath{\\boldsymbol{n}}}_\\beta,{\\ensuremath{\\partial_{\\alpha}{u}}\\xspace}\\right\\rangle}}_{{\\partial}{\\ensuremath{\\varomega}\\xspace } }      \\\\      & =      \\left(-{\\ensuremath{\\left\\langle{\\ensuremath{\\partial_{\\beta}{}}\\xspace}{{{\\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{\\phi } } } } } } } } , { \\ensuremath{\\partial_{\\alpha}{{\\ensuremath{{{{{\\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{{\\mathring{\\phi}}}}}}}}}}}^{{{\\boldsymbol\\intercal}}}}}}}\\xspace}\\right\\rangle } }      +       { \\ensuremath{\\left\\langle{{{\\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{\\phi } } } } } } } } { \\ensuremath{\\boldsymbol{n}}}_\\beta,{\\ensuremath{\\partial_{\\alpha}{{\\ensuremath{{{{{\\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{{\\mathring{\\phi}}}}}}}}}}}^{{{\\boldsymbol\\intercal}}}}}}}\\xspace}\\right\\rangle}}_{{\\partial}{\\ensuremath{\\varomega}\\xspace}}\\right )            { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{u}}}}}}}}.    \\end{split}\\ ] ] using the definition of @xmath137 ( [ def : stiff ] ) and @xmath138 ( [ def : mass ] ) we see for each @xmath133 @xmath139 substituting @xmath140 from into we obtain the desired result .    for a general elliptic operator in 2-d , the formulation takes the form @xmath141",
    "looking at the full system setting @xmath142 multiplying out each of the matrixes and proceeding to solve @xmath143 the resulting system would not be sparse forcing the use of direct solvers .    in this section we will present a method to solve formulation ( [ eqn : ndfemformulation ] ) in a general setting .",
    "this method makes use of the sparsity of the component matrixes @xmath144 and @xmath138 .",
    "an interesting point of note is that if the mass matrix @xmath138 were diagonalized , by mass lumping , then for each @xmath145 and @xmath146 the matrix @xmath147 would still be sparse ( albeit less so than the individual matrixes @xmath148 and @xmath137 ) . hence the system can be easily solved using existing sparse methods .",
    "however mass lumping is only applicable to @xmath149 finite elements . for higher order finite elements it would be desirable to exploit the sparse structure of the component matrixes that make up the system .",
    "we observe the matrix @xmath150 in the system ( [ eqn : ndfemformulation ] ) is a sum of schur complements @xmath151 . with that in mind",
    "we introduce the @xmath152 block matrix @xmath153.\\ ] ]    given @xmath154 solving the system @xmath155 is equivalent to solving @xmath156 for @xmath157 .",
    "the proof is just block gaussian elimination on @xmath158 . left - multiplying the first @xmath159 rows by @xmath160 yields @xmath161      \\left [        \\begin{array}{c }          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{h}}}}}}}}_{1,1}\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{h}}}}}}}}_{1,2}\\\\          \\vdots\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{h}}}}}}}}_{d , d-1}\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{h}}}}}}}}_{d , d}\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{u } } } } } } } }        \\end{array }        \\right ]      =      \\left [        \\begin{array}{c }          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{0}}}}}}}}\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{0}}}}}}}}\\\\          \\vdots\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{0}}}}}}}}\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{0}}}}}}}}\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{f } } } } } } } }        \\end{array }        \\right].\\ ] ] multiplying the @xmath162-th row by the @xmath162-th entry of the @xmath163-th row for @xmath164 @xmath165      \\left [        \\begin{array}{c }          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{h}}}}}}}}_{1,1}\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{h}}}}}}}}_{1,2}\\\\          \\vdots\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{h}}}}}}}}_{d , d-1}\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{h}}}}}}}}_{d , d}\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{u } } } } } } } }        \\end{array }        \\right ]      =      \\left [        \\begin{array}{c }          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{0}}}}}}}}\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{0}}}}}}}}\\\\          \\vdots\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{0}}}}}}}}\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{0}}}}}}}}\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{f } } } } } } } }        \\end{array }        \\right].\\ ] ] subtracting each of the first @xmath159 rows from the @xmath163-th row reduces the system into row echelon form . @xmath166      \\left [        \\begin{array}{c }          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{h}}}}}}}}_{1,1}\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{h}}}}}}}}_{1,2}\\\\          \\vdots\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{h}}}}}}}}_{d , d-1}\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{h}}}}}}}}_{d , d}\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{u } } } } } } } }        \\end{array }        \\right ]      =      \\left [        \\begin{array}{c }          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{0}}}}}}}}\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{0}}}}}}}}\\\\          \\vdots\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{0}}}}}}}}\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{0}}}}}}}}\\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{f } } } } } } } }        \\end{array }        \\right].\\ ] ]    in fact this method for the solution of the system @xmath167 is not surprising given the discretization presented in the proof of theorem [ the : ndfem ] is equivalent to the following system : @xmath168,\\phi\\right\\rangle } }       =      - { \\ensuremath{\\left\\langle\\nabla u\\otimes\\nabla\\phi\\right\\rangle } }      +      { \\ensuremath{\\left\\langle\\nabla u\\otimes{\\ensuremath{\\boldsymbol{n } } } \\ \\phi\\right\\rangle}}_{{\\ensuremath{\\partial_{}{{\\ensuremath{\\varomega}\\xspace}}}\\xspace } }       { \\quad{\\:\\forall\\:}}\\phi\\in{\\ensuremath{\\mathbb v}}\\\\      \\\\      { \\ensuremath{\\left\\langle{\\ensuremath{{{\\ensuremath{{\\ensuremath{\\boldsymbol{a}}}}}}{:}{{\\ensuremath{{\\ensuremath{\\boldsymbol{h}}}}}[u]}}},{\\mathring{\\phi}}\\right\\rangle } }       =      { \\ensuremath{\\left\\langlef,{\\mathring{\\phi}}\\right\\rangle } } { \\quad{\\:\\forall\\:}}{\\mathring{\\phi}}\\in{\\mathring{{\\ensuremath{\\mathbb v}}}}.      \\end{cases}\\ ] ]    [ rem : non - trivial - dirichlet ] given additional problem data @xmath169 , to solve @xmath170 it is not immediate how to enforce the boundary conditions . if we were solving the full system @xmath143 , we could directly enforce them into the system matrix .    since @xmath169 by an embedding it is continuous and can be approximated by the lagrange interpolant with optimal order . to enforce the dirichlet boundaries we introduce a further block representation @xmath171      \\left [        \\begin{array}{c }          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{v}}}}}}}}_{{\\ensuremath{\\partial_{}{}}\\xspace } }          \\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{v } } } } } } } }        \\end{array }        \\right ]      =      \\left [        \\begin{array}{c }          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{b}}}}}}}}_{{\\ensuremath{\\partial_{}{}}\\xspace } }          \\\\          { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{b } } } } } } } }        \\end{array }        \\right],\\ ] ] where",
    "@xmath172 are defined as before and @xmath173 are defined as follows @xmath174 ,      \\\\      { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{v}}}}}}}}_{{\\ensuremath{\\partial_{}{}}\\xspace } }      =      { \\ensuremath{{\\left [        { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{h}}}}}}}}_{1,1}^{{\\ensuremath{\\partial_{}{}}\\xspace } } , { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{h}}}}}}}}_{1,2}^{{\\ensuremath{\\partial_{}{}}\\xspace } } ,         \\dots , { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{h}}}}}}}}_{d , d-1}^{{\\ensuremath{\\partial_{}{}}\\xspace } } , { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{h}}}}}}}}_{d , d}^{{\\ensuremath{\\partial_{}{}}\\xspace } } , { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{u}}}}}}}}^{{\\ensuremath{\\partial_{}{}}\\xspace } }      \\right]}^{{{\\boldsymbol\\intercal } } } } } ,      \\\\      { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{b}}}}}}}}_{{\\ensuremath{\\partial_{}{}}\\xspace } }      =      { \\ensuremath{{\\left [        { { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{0 } } } } } } } } } , { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{0 } } } } } } } } , \\dots , { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{0 } } } } } } } } , { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{0 } } } } } } } } , { { { \\ensuremath{\\boldsymbol{{\\ensuremath{\\mathsf{g } } } } } } } }      \\right]}^{{{\\boldsymbol\\intercal}}}}}.      \\end{gathered}\\ ] ]",
    "let @xmath175 , then the components of @xmath176 and @xmath177 are defined as follows @xmath178 where @xmath179 is the lagrange node associated with @xmath180 .    the block matrix ( [ eq : dirichletblock ] )",
    "can then be trivially solved @xmath181    we will be using the generalized minimal residual method ( gmres ) to solve this system .",
    "the gmres , as with any iterative solver , only requires an algorithm to compute a matrix - vector multiplication .",
    "hence we are only required to store the component matrixes @xmath182 .",
    "[ rem : conditionnumber ] the convergence rate of an iterative solver applied to a linear system @xmath183 will depend on the condition number @xmath184 , defined as the ratio of the maximum and minimum eigenvalues of @xmath185 : @xmath186 numerically we observe the condition number of the block matrix @xmath187 ( see table [ tbl : conditionnumber ] ) .",
    "in this section we study the numerical behavior of the scheme presented above .",
    "all our computations were carried out in ( code available on request ) .",
    "we present two linear benchmark problems , for which the solution is known .",
    "we take @xmath0 to be the square @xmath188 and in the first two tests consider the operator @xmath189 varying the coefficients @xmath190 and @xmath191 .      for the first test problem",
    "we choose the operator in such a way that does not hold , that is the components of @xmath30 are non - differentiable on @xmath0 , in this case we take @xmath192 a visualization of the operator is given in figure [ fig : x2y2 ] .",
    "we choose our problem data @xmath39 such that the exact solution to the problem is given by : @xmath193 we discretize the problem given by under the algorithm set out in  [ sec : discretisation ] , numerical convergence results are shown in figure [ fig : nondiv : prob1 ] .      the second test problem demonstrates the ability to overcome oscillations introduced into the standard finite element when rewriting the operator in divergence form . take @xmath194 with @xmath195 . rewriting in divergence form",
    "gives @xmath196 the derivatives @xmath197 can be made arbitrarily large on the unit circle by choosing @xmath71 appropriately ( see figure  [ fig : atan ] ) .",
    "we then construct the standard finite element method around ( [ prob : divform ] ) , that is find @xmath199 such that for each @xmath200 @xmath201 if @xmath71 is chosen small enough the standard finite element method converges optimally .",
    "if we increase the value of @xmath71 oscillations become apparent in the finite element solution along the unit circle .",
    "figure [ fig : fem : prob2 ] demonstrates the oscillations arising from this method compared to discretizing using the nonvariational finite element method .        in this test",
    "we choose the operator such that @xmath191 is non - zero .",
    "to maintain ellipticity in this problem we must choose @xmath190 such that the trace of @xmath202 dominates it s determinant .",
    "we choose @xmath203 we choose the problem data such that the exact solution is given by @xmath204 this function has a nonsymmetric hessian at the point @xmath205 .",
    "the nontrivial dirichlet boundary is dealt with using remark [ rem : non - trivial - dirichlet ] .",
    "figure [ fig : nondiv : prob3 ] shows numerical results for this problem .",
    "the problem under consideration in this test is the following quasi - linear pde arising from differential geometry : @xmath206 where @xmath207 is the area element .",
    "here we are using @xmath208 . applying a fixed point linearization",
    "given an initial guess @xmath209 for each @xmath210 we seek @xmath211 such that @xmath212 applying a standard finite element discretization of ( [ eq : mcflinear ] ) yields : given @xmath213 , for each @xmath214 find @xmath215 such that for each @xmath216 @xmath217    in fact we can work on this problem combining the two nonlinear terms .",
    "to do so we must first rewrite ( [ eq : mcf ] ) into the form @xmath218 .",
    "@xmath219 applying a similar fixed point linearization given an initial guess @xmath209 for each @xmath220 we seek @xmath211 such that @xmath221      table [ tbl : quasilin ] compares the two linearizations ( [ eq : mcflinear ] ) and ( [ eq : ndquasilinear ] ) .",
    "figure [ fig : quasilin ] show asymptotic numerical convergence results for nvfem applied to ( [ eq : ndquasilinear ] ) .    .",
    "[ tbl : conditionnumber ] test [ test : nondiff ] . on the condition number of @xmath158 upon discretizing problem using @xmath149 finite elements .",
    "as claimed in remark [ rem : conditionnumber ] @xmath223 . [ cols=\"^,^,^,^\",options=\"header \" , ]"
  ],
  "abstract_text": [
    "<S> we propose a numerical method to approximate the solution of second order elliptic problems in nonvariational form . </S>",
    "<S> the method is of galerkin type using conforming finite elements and applied directly to the nonvariational ( nondivergence ) form of a second order linear elliptic problem . </S>",
    "<S> the key tools are an appropriate concept of `` finite element hessian '' and a schur complement approach to solving the resulting linear algebra problem . </S>",
    "<S> the method is illustrated with computational experiments on three linear and one quasilinear pde , all in nonvariational form . </S>"
  ]
}
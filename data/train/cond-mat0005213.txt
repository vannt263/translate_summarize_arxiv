{
  "article_text": [
    "the objective of the work described here has been to develop a general purpose parallel lattice - boltzmann code ( lb ) , called _",
    "ludwig _ , capable of simulating the hydrodynamics of complex fluids in 3-d .",
    "such a simulation program should eventually be able to handle multicomponent fluids , amphiphilic systems , and flow in porous media as well as colloidal particles and polymers .",
    "in due course we would like to address a wide variety of these problems including detergency , binary fluids in porous media , mesophase formation in amphiphiles , colloidal suspensions , and liquid crystal flows .",
    "so far , however , we have restricted our attention to simple binary fluids , and it is this version of the code that will be described below in more detail . nonetheless , the generic elements related to the structure of the code are valid for any multicomponent fluid mixture , as defined through an appropriate free energy , expressed as a functional of fluid density and one or more composition variables ( scalar order parameters ) .",
    "we discuss in some detail also how to include solid objects , such as static and moving walls and/or freely suspended colloids , in contact with a binary fluid .",
    "more generally , the modular structure of _ ludwig _ facilitates its extension to many other of the above problems without extensive redesign . but note that , with several of these problems ( such as liquid crystal flows which require tensor order parameters ) , it is not yet clear how to proceed even at the serial level , and only first attempts have begun to appear in the literature  @xcite .",
    "the lattice - boltzmann model ( lb ) simulates the boltzmann equation with linearized collisions on a lattice  @xcite .",
    "both the changes in position and velocity are discretized .",
    "it can be shown that , at sufficiently large length and time scales , lb simulates the dynamics of nearly incompressible viscous flows  @xcite .",
    "for the simplest case of a one - component fluid , it describes the evolution of a discrete set of particle densities on the sites ( or _ nodes _ ) of a lattice : @xmath0 the quantity @xmath1 is the density of particles with velocity @xmath2 resident at node @xmath3 at time @xmath4 .",
    "this particle density will , in unit time increment , be convected ( or _ propagate _ ) to a neighboring site @xmath5 . here",
    "@xmath2 is a lattice vector , or _ link _ vector , and the model",
    "is characterized by a finite set of velocities @xmath6 .",
    "the quantity @xmath7 is the equilibrium distribution of @xmath1 , and is one of the key ingredients of the model .",
    "it characterizes the type of fluid that _ ludwig _ will simulate , and determines the equilibrium properties of such a fluid ( see section [ ssec : binaries ] below ) .",
    "the right hand side of equation  [ eqn : lb ] describes a mixing of the different particle densities , or _ collision _ : the @xmath8 distribution relaxes towards @xmath9 at a rate determined by @xmath10 , the relaxation parameter .",
    "the relaxation parameter is related ( through @xmath11 ) to the viscosity @xmath12 of the fluid , and gives us control of its dynamics .    to specify a particular model , besides the equilibrium properties given through @xmath13 , one has to choose the geometry of the lattice in which the density of particles move .",
    "such a geometry should specify both the arrangement of nodes and the set of allowed velocities .",
    "the only restrictions in such a choice lie on the fact that they should have sufficient symmetry to ensure that at the hydrodynamic level the behavior is isotropic and independent of the underlying lattice  @xcite .",
    "the hydrodynamic quantities , such as the local density , @xmath14 , momentum , @xmath15 and stress , @xmath16 are given as moments of the densities of particles @xmath1  @xcite , namely @xmath17 , @xmath18 , and @xmath19 .",
    "the dynamics of lb , as expressed in equation  [ eqn : lb ] , provides immediate insight into the implementation and underlying optimization issues .",
    "it is characterized by two basic dynamic stages :    * the propagation stage ( left - hand side of equation  [ eqn : lb ] ) , consisting of a set of nested loops performing memory - to - memory copies ; * the collision stage ( right hand side ) , which has a strong degree of spatial locality and relies on basic add / multiply operations : its implementation is straightforward and can be highly optimized .",
    "the lb model described so far can be extended to describe a binary mixture of fluids , of tunable miscibility , by adding a second distribution function , @xmath20@xcite .",
    "( further distribution functions would allow still more complicated mixtures to be described . ) as in single - fluid lb , the relevant hydrodynamic variables related to the order parameter are also moments of the additional distribution function @xmath20 , namely the composition ( order parameter ) @xmath21 , and the flux @xmath22 .",
    "for each site ( including solid sites ) , the distributions @xmath8 and @xmath20 are stored in a structure element of type * site * :    xxx = xxx = typedef struct\\ { + float f[nvel ] , + g[nvel ] ; + } site ;    where * nvel * is the number of velocity vectors used by the model . for example , for the cubic lattices described later on , where _ ludwig _ has been implemented so far , the number of velocity vectors has been 15 and 19 .",
    "figure  [ fig : d3qx ] shows the sets of velocities for the two 3-d models developed .",
    "( to nearest neighbors ) , and eight with @xmath23 ( to next next nearest neighbors ) .",
    "the d3q19 model has nineteen velocities : one with speed zero ( a rest particle ) , six with @xmath24 ( to nearest neighbors ) , and 12 with @xmath25 ( to next nearest neighbors).,title=\"fig : \" ]   ( to nearest neighbors ) , and eight with @xmath23 ( to next next nearest neighbors ) .",
    "the d3q19 model has nineteen velocities : one with speed zero ( a rest particle ) , six with @xmath24 ( to nearest neighbors ) , and 12 with @xmath25 ( to next nearest neighbors).,title=\"fig : \" ]    we follow the procedure of swift et al .",
    "@xcite ( see also  @xcite for a schematic description ) in which @xmath8 describes the density field @xmath14 , whilst @xmath20 describes the order parameter field , @xmath26 .",
    "both distribution functions have relaxational dynamics of the type of equation  [ eqn : lb ] but are characterized by different relaxation parameters @xmath27 .",
    "the second relaxation parameter , associated with the order parameter field , will determine its diffusivity . by studying appropriate moments of the distribution functions",
    ", one can construct a relaxational dynamics that will describe , in the continuum limit , the dynamics of a near - incompressible , isothermal binary fluid with an arbitrary local free energy functional @xmath28 $ ] .",
    "the model chosen is a symmetric @xmath29 or cahn - hilliard type free energy : @xmath30 where @xmath31 , @xmath32 and @xmath33 are model parameters . for the density @xmath14 ,",
    "lb dynamics ensures an ideal gas equation of state , with a speed of sound equal to @xmath34 . in practice @xmath14 remains almost constant at a value which we choose to be unity .",
    "this can be done by ensuring that under all conditions the fluid velocity remains small compared to unity in lattice units .",
    "( more generally one requires velocities small compared to the sound speed . ) for negative @xmath31 , the above model has two coexisting fluid phases with order parameter values @xmath35 ; for many problems it is convenient to set @xmath36 so that @xmath37 .",
    "note also that , although there is a long history of studying @xmath29 theory on the lattice , one needs to be aware of possible lattice artifacts in the thermodynamic , as well as the hydrodynamic , sectors of the model  @xcite .",
    "for example , the coefficient @xmath33 , determines the thickness @xmath38 and the interfacial tension @xmath39 of the interface between two fluids  @xcite .",
    "but the thickness must be kept large enough to avoid a strong anisotropy of the interfacial tension caused by the underlying lattice . moreover ,",
    "the values of the different parameters should be carefully selected to give the required compromise between numerical stability and accuracy , and computational speed  @xcite . however , since the same physical parameters ( in a binary fluid , viscosity , density , interfacial tension ) can be achieved with more than one set of simulation parameters , it is normally possible to steer around any problems , though they do present traps for the unwary .",
    "the specific role played by order parameter mobility in the simulations of binary fluids is discussed in  @xcite .",
    "we emphasize that _ ludwig _ is structured so that the free energy functional can be chosen at will .",
    "this is a desirable feature of lb over , for example , the dissipative particle dynamics algorithm ( dpd ) , where the free energy being modeled has to be deduced _ a posteriori _ from the simulation results  @xcite , although first attempts are being carried out to allow for free energy _ a priori _",
    "determination  @xcite .",
    "the user of the code has to evaluate , from the free energy and according to a well - established procedure  @xcite , the equilibrium distribution functions @xmath9 , @xmath40 for use in the relaxation equation  [ eqn : lb ] and the corresponding one for @xmath20 .",
    "this data is entered into the subroutine for the collision step .",
    "for example , in the case of the binary fluid mixture in the d3q15 geometry one has  @xcite @xmath41 here , @xmath42 is an index that denotes the speed , @xmath43 , and @xmath44 , @xmath45 and @xmath46 are constants given by @xmath47 @xmath48 @xmath49 here @xmath50 is the thermodynamic contribution to the pressure tensor which can be evaluated directly from the chosen form of the free energy functional  @xcite , and for equation  [ eqn : fe ] it reads @xmath51 the equilibrium distribution for the order parameter , @xmath40 , is the same as for @xmath9 , with @xmath52 replaced by @xmath53 in the above equations ; here @xmath54 , where @xmath55 is the order parameter mobility  @xcite .      for evaluation of @xmath50 and other quantities ,",
    "we need to compute spatial gradients of @xmath26 . to minimize thermodynamic lattice anisotropies ,",
    "this is done using a larger set of links than used for the propagation step ; for example on the d3q15 lattice we use all 26 ( first , second and third ) nearest neighbors so that numerically @xmath56 @xmath57\\ ] ] with an enlarged set @xmath58 . note that these are not the only possible choices",
    ". there may be considerable scope for further improvement by optimizing the choices made for gradient discretization , but we leave this for future work .",
    "one drawback of lb is that , unlike dpd and some other competing mesoscale techniques , it is not unconditionally stable .",
    "however , our experience suggests that even if the model becomes eventually unstable for any given set of parameter values , the problem arises so suddenly that such an instability does not impede collection of robust and reliable data over long periods beforehand  @xcite .",
    "nonetheless , it would be very desirable to have a fully stable version of the algorithm and this might considerably reduce the time spent in parameter steering exercises that are currently needed prior to allocating resources for production runs .",
    "the scientific objectives presented in section  [ sec : objectives ] are ambitious and imply the availability of a variety of different features , consistent with a development time stretching across a few years . because none of the lb codes available at the start of the project had the required features , _",
    "s creators decided to design a new package from scratch whose main characteristic would be its versatility : _ ludwig _ had to be capable of producing data of scientific interest at an early stage of its development , include built - in support for multiple models and free energies , and be sufficiently user - friendly to be customisable and usable by non - programmers .    great care has thus been taken to use a design which would fulfill all of the above requirements .",
    "the best approach would thus maximize code re - use to cut down development time , and be portable and extendible to increase the package s overall lifetime .",
    "the portability issues led us to choose ansi - c and mpi-1.1 .",
    "this combination provided the required features without sacrificing too much in the area of performance .",
    "in addition to portability , mpi also provided valuable features such as support for user - defined operators ( e.g.  to perform global operations on distributed sets of vectors and tensors ) and a high level of abstraction through the use of derived datatypes .",
    "the latter is particularly valuable to make all the i / o and communication routines non model - specific .      due to the magnitude of the system size required to study the phenomena described in section  [ sec : objectives ] , it became obvious from the early stage of the design that _ ludwig _ would have to be parallelized in order to provide the required scalability .",
    "fortunately , the symmetry of the underlying cubic lattice guarantees a uniform data distribution and hence an equal amount of computations per lattice site .",
    "indeed , the collision and propagation stages will take place over all lattice sites , which restricts possible causes of load imbalance to the introduction of solids objects non - uniformly distributed across the simulation box .",
    "this pseudo - uniform distribution of the computations added to the intrinsic locality of the lb algorithm made _ regular domain decomposition _",
    "the most suitable decomposition strategy  @xcite . in this approach ,",
    "the data is geometrically decomposed in equal volumes , which are then distributed to each processing element ( pe ) .",
    "obviously the ` ideal ' load - balancing can only be achieved for a restricted class of studies such as simulations of spinodal decomposition .",
    "as soon as lees - edwards walls or solid objects are introduced whether these are truly moving or freely suspended particles such as colloids , pseudo - moving plates to shear the system , or static structures such as a porous network , the behavior of the code will be affected as its overall performance becomes restricted by that of the slowest process . however , most applications described in section  [ sec : objectives ] exhibit sufficient symmetry to circumvent the load imbalance induced by the solid objects .",
    "should the solid objects be distributed inhomogeneously across the system , it will be necessary to specify a more adequate processor topology to ensure an efficient parallelization .",
    "_ ludwig _ has been developed with a modular and hierarchical structure in mind .",
    "the current version of the package is composed of 258 functions ( over 25,000 lines of code ) split in three main components , as illustrated in figure  [ fig : structure ] :        1 .",
    "model subdirectories : contain all the model - specific functions as well as main.c .",
    "these model - specific options contain three main ingredients of the code : the geometry of the lattice , the free energy that defines the type of fluid to be modeled , and the type of boundary conditions which determines the interaction with solid objects .",
    "users can plug - in their own routines in misc.c .",
    "once the model is defined , the _ only _ modification required to run simulations is to edit main.c to call the relevant measuring functions . at this time",
    ", the models available include the lattice geometries d3q15 , and d3q19 ( see figure  [ fig : d3qx ] and reference  @xcite for their definitions ) , although this package has been designed to support models with subset of velocities beyond the third nearest neighbors .",
    "common subdirectory : contains all the low - level calls such as the communication layer and the parallel i / o , as well as a set of routines to provide real - time graphics during simulations .",
    "this functionality proves invaluable to gain a better understanding of the dynamics and for debugging purposes .",
    "these generic functions can be called by all models .",
    "utilities subdirectory : contains stand - alone pre- and post - processors for setting - up initial configurations and analyzing the simulation data .    the non - specificity of the common routines has been made possible by mpi s high - level features such as derived datatypes , communicators , and user - defined operators . indeed , these routines can be used to define series of generic and opaque objects and operators which can be accessed and manipulated without the need to know their model - specific characteristics . in effect , these routines implement a generic , generalized model , which in some ways is reminiscent of the concept of objects and methods as implemented in the object - oriented paradigm . since the use of object - oriented programming language such as c++ or java had to be discounted on the ground of their lack of bindings for mpi-1.1 and their poor performance on hpc systems , the approach described above is in the authors opinion the best alternative .",
    "the main advantage of this modular approach is the fact that the computational complexity is hidden , which allows the users to concentrate on the physical analysis of a given system rather than on implementation issues .",
    "other advantages include code re - use , package extendibility , portability and efficiency .",
    "_ ludwig _ achieves a high level of portability : indeed , it has been successfully installed on a variety of serial and parallel platforms ( cray t3e , t3d and j90 , sgi origin 2000 , hitachi sr-2201 , sun e-3000/hpc-3500 , dec and sun workstations as well as a linux pc ) with no modification required .",
    "three different types of solid objects may be defined in _",
    "ludwig _ :    1 .",
    "static solid objects , e.g.  static walls and porous networks ; 2 .",
    "( pseudo-)moving walls , e.g.  to shear the system ; 3 .   ( truly-)moving particles , e.g.  freely suspended colloids .",
    "all solid objects are implemented applying stick boundary conditions , following the bounce - back on the links ( bbl ) scheme proposed by ladd  @xcite . during propagation ,",
    "the component of the distribution function that would propagate into the solid node is _ bounced back _ and ends up back at the fluid node , pointing in the opposite direction .",
    "this produces stick boundary conditions at roughly one half the distance along the link vector joining the solid and fluid nodes , ensuring that the velocity of the fluid in contact with the solid equals the velocity of the latter ( see figure  [ fig : bbl ] ) .",
    "let us assume that a solid - fluid boundary exists between a node at @xmath3 and one at @xmath5 , where @xmath59 labels the relevant lattice vector .",
    "let @xmath60 be the opposite lattice vector , so that @xmath61 .",
    "then , at the link , there are two incoming velocity distributions after the collision ; denote this time @xmath62 .",
    "the post - collision distributions are : @xmath63 and @xmath64 .",
    "these distributions are reflected so that : @xmath65        if the solid is moving with a velocity @xmath66 , the previous boundary conditions have to be modified . if the densities @xmath8 and order parameters @xmath20 are allowed to leak across the boundary links , then the velocity at the link can be matched to the velocity of the wall  @xcite . in the case of a binary mixture , generalizing the results of ladd  @xcite , the basic bbl scheme is modified as follows : @xmath67 where the quantities @xmath68 are geometric factors related to the weights of the different subsets of velocities @xmath2 , and are fixed when imposing the appropriate equilibrium distribution functions for @xmath8 and @xmath20 .",
    "note that the bbl rules given above require careful implementation if they are properly to account for the effect on the composition variable @xmath26 of motion in a direction normal to the solid - fluid boundary .",
    "this boundary condition allows us to have a solid wall moving in any direction in contact with the fluid  @xcite .",
    "the velocity of the solid particles can be fixed beforehand . in this case",
    ", one can use such moving objects e.g.  to apply a shear flow through parallel plates at the boundaries of a sample , or to study aspects of colloid hydrodynamics such as the steady - state sedimentation of an ordered array of colloidal spheres with a prescribed distribution .",
    "alternatively , if the velocities of the solid particles are updated , one can for example simulate the dynamics of colloidal suspensions  @xcite .",
    "although periodic boundary conditions are applied to the model by default , these can be modified by explicitly adding solid surfaces at the boundaries . in the previous subsection",
    "we have shown how to add them ensuring stick boundary conditions .",
    "this is enough for a mono - component simple fluid .",
    "however , for complex fluids it is also in general necessary to specify the behavior of additional fields at solid boundaries , whether these are at the edges of the system or internal boundaries between fluid and solid phases .",
    "for example , in the case of a binary mixture it may be desirable to specify the wetting properties of a solid surface , i.e.  its preference for one of the two components . in order to deal with these situations ,",
    "we have developed in _",
    "ludwig _ a more generic way of characterizing a solid interface .",
    "we have considered three different kinds of sites on the lattice : solid , fluid and boundary sites ( the latter are fluid sites with at least one neighboring solid site ) .",
    "accordingly , the links are then classified as _ wet _ or _",
    "dry links _ depending on whether they join fluid sites or solid to fluid sites , respectively .",
    "then , in order to implement the appropriate thermodynamic boundary conditions at the solid - fluid interfaces ( which we discuss in detail in the next section ) , the values of @xmath8 and @xmath20 corresponding to the boundary sites and dry links are stored in two separate lists , different from the basic vectors which store @xmath8 and @xmath20 for _ all _ sites .",
    "note that additional information also needs to be stored for the boundary links and boundary sites .",
    "the structure defined to store this information is called * bc_link*. in addition to the location and orientation of the links , it also contains the force applied on the node and its velocity , in case it is needed .    xxx = xxx= xxxxxxxxxx = typedef struct bc_link bc_link ; + struct bc_link\\ { + int i , j , / * i and j are the indices of the two nodes + by convention , i is the ( local ) solid node , + j is the fluid node * / + index , / * index is the velocity that links the two nodes * / + dup ; / * true when a duplicate link * / + float frc , / * force on the node at ( r+0.5*c , t+0.5 ) in direction c * / + v ; / * velocity component of link * / + bs_site * site ; / * only relevant to wetting : pointer to the site with the + value of the concentration at the middle of the link * / + bc_link * next ; / * store these in a singly linked list * / + } ; +    note that all members of this list have a pointer * site * to the corresponding element of the boundary site list .",
    "links that have their ends on different pe domains ( i.e.  partly in the halo region ) need to be duplicated on both pes .",
    "the structure member * dup * is therefore required to avoid multiple counting when carrying out summations over all links .",
    "this structure is enough to implement the bbl described in the previous subsection .",
    "similarly , boundary sites are stored in a structure of type * bs_site * , which includes information mostly required for the implementation of the thermodynamic boundary conditions ( wetting effects ) .",
    "these include the free energy parameters of the neighboring wall , the fluid or solid nature of the * ngrad * neighboring sites ( i.e.  a binary map of dry or wet links to these sites ) , as well as the actual gradient on the link which value is required by the bbl algorithm described in section  [ ssec : solidobj ] . the extended set defined by *",
    "ngrad * includes all vectors to nearest neighbors , next nearest neighbors , next - but - one nearest neighbors , and the null vector ( thus for a 3-d cubic lattice ( d3q15 ) , * ngrad * = 27 ) .",
    "this extended set of neighbors has been introduced to improve the representation of the order - parameter gradients close to the wall .",
    "xxx = xxxxxxxxxxxxxxxx = typedef struct bs_site bs_site ; + struct bs_site\\ { + int ind ; / * ( global ) index of site * / + uint wet ; / * binary number specifying ` wet ' and ` dry ' links * / + float c , h ; / * value of c and h in surface free energy * / + float phi[ngrad ] ; / * gradients on the link ( along ngrad vectors ) * / + bs_site * next ; / * store these in a singly linked list * / + } ; +    note that the actual implementation of the bbl is undertaken by applying equation  [ eqn : mod_bbl ] to all the ( dry ) links in the linked list * bc_link*. whilst the @xmath8 and @xmath20 can be accessed directly using their array index , the link velocities @xmath66 and composition variable @xmath26 need to be retrieved from the structure itself as * bc_link@xmath69v * and * bc_link@xmath69site@xmath69phi [ ] * respectively .",
    "another aspect worth pointing out is that both structures are defined in different directories ( see figure  [ fig : structure ] ) . indeed , although the _ boundary_sites _ functions are intrinsically model - specific because they depend on the velocity sets and free energy parameters , the _ boundary_links _ routines on the other hand are completely independent from the model used .",
    "the implementation of static solid objects and moving walls in parallel is simple . indeed , since these objects do not move across pe domains during the course of a simulation , one needs only to build the two linked lists * bc_link * and * bs_site * once , and independently for each node .",
    "the case of moving solid particles is more complicated and deserves further discussion .",
    "although non - spherical objects can be described  @xcite , we restrict the discussion to spherical ones for simplicity s sake . in this case",
    "they are defined by four parameter ; their radius @xmath70 , the position of their center of mass @xmath71 and their linear and angular velocities , @xmath72 and @xmath73 .",
    "note that although @xmath71 moves continuously , the surface of the particle is discretized since it is defined by the lattice links which would cross the surface .",
    "each particle can therefore be defined as follows :    xxx = xxx= xxxxxxxxxxx = typedef struct colloid colloid ; + struct colloid\\ { + int index ; / * global index of colloid ( 0 .. n_colloid-1 ) * / + fvector r , / * position of the center of mass * / + v , w , / * linear and angular velocity of the center of mass * / + t , f ; / * torque and force * / + float r ; / * radius * / + int * pe ; / * list of pe domains span by this colloid * / + int local ; / * true for local pe , false otherwise * / + coll_link * lnk ; / * pointer to list of links ( surface ) * / + colloid * next ; / * store these in a singly linked list * / + } ; +    where the list of links required to describe the surface of each colloid is stored in a separate linked list of type * coll_link * :    xxx = xxx= xxxxxxxxxxxx = typedef struct coll_link coll_link ; + struct coll_link\\ { + int i , j , / * i and j are the indices of the two nodes + by convention , i is the inner node , + j is the outer node * / + index , / * index is the velocity that links the two nodes * / + dup , / * true when a duplicate link + ( set when crossing different pe domains ) * / + local ; / * true for local pe , false otherwise * / + float dist ; / * distance from middle of link to center of mass * / + coll_link * next ; / * store these in a singly linked list * / + } ; +    in order to update the velocities of the particle at each time step it is necessary to know the force and torque exerted by the fluid on the particle .",
    "these are computed from the change in momentum of the fluid at each link after it has bounced back .",
    "the motion of the colloid evolves as in a molecular dynamics step .",
    "the discretization of the particle surface onto the lattice links implies its radius is not strictly constant .",
    "it is therefore necessary to keep the actual distance between the center of the link and the center of mass of the particle for _ each _ link as a separate variable * dist * to compute the torque .",
    "the complete information about any given colloid is replicated on all the pes which have their local domain intersected by it ( list stored in * colloid.pe * ) .",
    "the variable * coll_link.local * tells which ( non - local ) links must be skipped during the bbl , which is implemented by applying equation  [ eqn : mod_bbl ] just like for any other solid objects .",
    "contributions to the torque from each link will be summed locally and then across pes .",
    "the radius of the colloids must be larger than the lattice spacing , and its actual value will depend on the volume fractions of solid particles considered . up to around @xmath74 in volume fraction , a small value of the radius , e.g.  2.5 lattice spacings , is sufficient to get accurate results  @xcite .",
    "at higher volume fractions , larger radii should be considered . this will eventually , at very high packing fractions , limit the performance of the lb code , as progressively larger system sizes will be needed .",
    "similar limitations will apply when dealing with polydisperse suspensions , or motion of non - spherical objects .",
    "a more complete discussion of the implementation , optimization , and application of moving solid particles will be published elsewhere .",
    "as pointed out already , for a two component fluid , the interaction with a solid wall should allow a difference in interaction between the two components and the wall even when the fluids are symmetric in all other respects .",
    "it can be energetically favorable for one of the two components to be in contact with the solid surface , in which case , in static equilibrium the fluid - fluid interface is not perpendicular to the wall .",
    "the equilibrium angle @xmath75 is called the contact angle and is determined , via the young equation  @xcite @xmath76 where @xmath77 is the solid / fluid surface tension for the bulk phase with positive ( negative ) order parameter , and @xmath78 is the fluid - fluid surface tension .",
    "the resulting wetting phenomena are known to play a major part in the behavior of complex fluids next to ( or including ) solid objects , but their implementation in simulations still remains in its infancy  @xcite .",
    "in particular , it is important to make sure that the observed wetting behavior is consistent with the thermodynamic requirement of young s equation in equilibrium .",
    "we have therefore devised a novel predictor - corrector scheme to ensure an accurate implementation of controlled wetting effects at the solid - fluids interface in three dimensions .",
    "recalling that _ ludwig _ uses a symmetric @xmath29 model free energy ( see equation  [ eqn : fe ] ) , a simple way to account for wetting properties is to associate with the solid surfaces an additional surface free energy density @xmath79 , where @xmath80 is the value of the compositional order parameter in contact with the wall . according to cahn theory  @xcite",
    ", the equilibrium order parameter profile corresponds to that which minimizes the free energy functional @xmath81 + \\int f_s(\\phi_s ) ds$ ] where @xmath82 obeys equation  [ eqn : fe ] and the integral is over the solid surface .",
    "the two solid - fluid interfacial tensions are found by minimizing this expression near a flat solid - fluid interface to find the equilibrium free energy @xmath83 , subtracting the contribution @xmath84\\ , d\\mathbf{r}$ ] of the same volume of bulk fluid , and dividing by the interfacial area . the functional minimization also gives the composition profile near the wall , and the boundary condition satisfied at the solid surface , which is @xmath85 where @xmath86 is normal to the wall .    in general , @xmath87 is a function of the local order parameter .",
    "the classical work on wetting has shown that a functional relation of the form @xmath88 is enough to reproduce the various different wetting scenarios  @xcite . by tuning the parameters @xmath89 and @xmath90 , we modify the properties of the surface in a thermodynamically controlled manner  @xcite , so that the fluid - solid interfacial tensions can be tuned at will . since we are dealing with a symmetric mixture ,",
    "if @xmath91 the two phases will have neutral wetting and show a local variation in composition near the wall ( @xmath92 ) of the same magnitude .",
    "nonzero @xmath90 allows then for an asymmetry in the surface value of the order parameter for the two coexisting phases and a contact angle different from @xmath93 degrees .",
    "the main difficulty to implement the general boundary condition , equation  [ eqn : sfe ] , is that it depends on the value of the order parameter at the surface , @xmath80 , which is itself a dynamical variable .",
    "moreover , due to bbl , the solid surface lies between the sites thus making the calculation of @xmath94 and @xmath95 by finite difference from neighboring sites using equations  [ eq : grad_def ] and  [ eq : lap_def ] impossible . to circumvent this",
    ", we use a predictor - corrector scheme to estimate the gradient at the solid wall as follows ( see figure  [ fig : wetting ] ) :    1 .   determine which sites are next to a wall ( boundary sites ) , and hence which links cross the wall ( i.e. dry links ) ; 2 .",
    "estimate @xmath94 using finite differences on all wet links ; 3 .   from this estimate of @xmath94 ,",
    "extrapolate to halfway along the dry links , and calculate @xmath80 ; using @xmath80 on the dry links , calculate @xmath96 on these links ; 4 .",
    "calculate @xmath94 and @xmath95 for the boundary sites using _ all _ the gradients estimated on the links .",
    "this scheme gives good quantitative results of the wetting angles in accordance with thermodynamic predictions .",
    "results from case studies , both for a droplet and for planar interfaces are discussed in section  [ sec : results ] .",
    "production runs on the phase separation kinetics of binary fluid mixtures have been carried out on the cray t3d and the hitachi sr-2201 at epcc , and on the cray t3e-1200 at csar  @xcite .",
    "in addition to these distributed memory systems , we also investigated the performance of the code on shared - memory platforms such as the sun hpc-3500 at epcc .",
    "distributed on 8 pes for 12,000 steps .",
    "the shear has been applied through fixed walls at constant velocity , thus requiring a total of @xmath97 bbls per step .",
    "the order parameter and velocity fields were saved 60 times and the full configuration only once , thus representing a combined output of 17 gb for the simulation . the darkest color at the top of the bar chart represents the remaining stages of the simulation ( i.e.initialization , bbl , measurements , and i / o ) . ]    the profile information reproduced in figure  [ fig : benchmark ] provides us with an interesting insight on the critical sections of the code .",
    "firstly , one notices that over 90% of the simulation time is spent in the collision and propagation stages which are both intrinsically serial and well load - balanced for most problems .",
    "the raw performance ( excluding all i / o and measurements ) varies from @xmath98 to @xmath99 gridpoint - updates per second for the cray t3e and sun hpc-3500 respectively .",
    "details of the timing information for the various stages of the simulation of spinodal decomposition under shear is given in figure  [ fig : benchmark ] .",
    "note that the halo swap and bbl only account for 4 - 7% .",
    "a comparison of the profiles obtained on the sun hpc-3500 and cray t3e-1200 also shows up that the critical parts of the code are highly system dependent .",
    "as expected , the increased clock speed of the t3e-1200 ( 600mhz compared to only 400mhz on the hpc-3500 ) benefits the collision stage which is a highly - localized algorithm with basic arithmetic operators ( add / multiply ) .",
    "this routine has been highly optimized and makes a good use of the t3e memory hierarchy . on the other hand ,",
    "the memory - to - memory copies performed in the propagation stage do not benefit from this increase in clock speed as much .",
    "indeed , the hpc-3500 significantly outperforms its rival by over 23% even though the algorithm for the propagation had been tuned for the t3e by rearranging loops to make an efficient use of its streams ( see  @xcite for further information about stream optimization ) .",
    "particular attention should also be paid to finding the optimal ordering for the velocity set @xmath100 .",
    "it is important to order the velocity set such that they correspond , as much as possible , to sequential positions in memory for the distribution functions .",
    "the first production platform for this package was the cray t3d which , due to its lack of second - level cache , was particularly sensitive to data locality .",
    "the arrangement reproduced in table  [ tab : velset ] proved to be the most effective to preserve data locality with a performance increase of over 20% on the t3d ( compared to an unoptimized sequence ) for the combined collision and propagation stages .",
    "note that some orderings can speed - up one of these stages alone and be detrimental to the second one .",
    "the gain in performance resulting from data locality is not as significant on systems with second - level cache though .",
    "the best ordering of the velocity vectors is therefore often system - specific .",
    ".optimal velocity set for the cray t3d [ cols=\"^,^,^ \" , ]     as shown in figure  [ fig : scaleup ] , _ ludwig _ also demonstrates near - linear scaling from 16 up to 512 processors . however , the overall cost of the i / o can become a major bottleneck for the unwary ( e.g.  a @xmath101 system will generate in excess of 31 gb per configuration dump ) .",
    "the i / o has been optimized by performing parallel i / o . the pool of pes is split into @xmath102 groups of @xmath103 processors , thus providing @xmath102 concurrent i / o streams ( typically , @xmath104 ) .",
    "each group has a root pe which will perform all i / o operations .",
    "the remaining @xmath105 pes send their data in turn to the i / o pes which pack these data and write them to disk .",
    "this approach usually offers high bandwidth without having to use platform specific calls such as disk striping .    .",
    "details of the simulation are similar to that given in figure  [ fig : benchmark ] with the exception of the system size which has been increased to @xmath106 .",
    "the only quantity measured during this benchmark is the order parameter field , @xmath107 which was measured and saved to disk every 50 iterations .",
    "speed - up data have been included for simulations with and without the i / o ( note that in both cases , the time taken for dumping full re - start configurations was not included ) .",
    "the i / o consists in 240 data dumps of 191 mb written to disks through eight parallel output streams . ]",
    "note that mpi2-io had initially to be discounted on the ground of portability and performance .",
    "we conclude this discussion by deploring the lack of a full support for mpi-2 single - sided communications on some platforms .",
    "indeed , this functionality proves invaluable for the implementation of the lees - edwards boundary conditions and moving particles .",
    "_ ludwig _ has already been used to study a number of problems for binary fluid mixtures of current interest :    1 .",
    "establishment of the role of inertia in late - stage coarsening  @xcite ; 2 .",
    "study of the effect of an applied shear flow on the coarsening process  @xcite ; 3 .",
    "persistence exponents in a symmetric binary fluid mixture  @xcite .",
    "these results have been published elsewhere and will not be discussed further here . a number of validation exercises relating to binary mixtures are also described in  @xcite . here",
    "we focus on discussing new validation results obtained using the novel predictor - corrector scheme for the thermodynamically consistent simulation of wetting phenomena , as presented earlier .",
    "we present results for two types of tests for the properties of binary fluids near a solid wall .",
    "first , we verify that the modified bounce - back procedure , equation  [ eqn : mod_bbl ] , gives the expected balance both for the momentum and for the order parameter .",
    "second , we check the numerical accuracy of the modified boundary condition that accounts for the wetting properties of the wall , equation  [ eqn : sfe ] , as implemented through the predictor - corrector step .    to test the validity of the modified bounce - back rule for the order parameter field , we have looked at the motion of a pair of planar interfaces perpendicular to two parallel planar solid walls when the whole system is moving at a constant velocity parallel to the walls .",
    "the initial condition corresponds to a stripe of one equilibrium fluid ( @xmath108 ) , oriented perpendicular to the walls , surrounded by a region of the other fluid ( @xmath109 ) , with periodic boundary conditions . due to galilean invariance , the profile should remain undistorted and move at the same velocity as it is moving with initially , but with lb this is not guaranteed _ a priori _ and has to be validated .",
    "we have considered both the case of neutral wetting and the asymmetric case where @xmath90 is nonzero .",
    "( open circles ) , and also for a bounce - back of the order parameter field in which the advection induced by the moving walls is neglected ( filled diamonds ) . ]    for neutral surfaces , we show in figure  [ fig : interface1 ] the leading interfacial profiles at different times , both for the bounce - back rules described in equation  [ eqn : bbl ] , and for an improperly formulated bounce - back of the order parameter that does not take into account the motion of the wall .",
    "( the latter is equivalent to assuming @xmath110 only in the equations describing the bounce - back of the order parameter distribution function . )",
    "as can be seen , although the profile is advected due to the existence of a net momentum at the wall , if the bounce - back is not done in the frame of reference of the moving wall ( leading to equation  [ eqn : mod_bbl ] ) the fluid - fluid interface has a spurious curvature and it moves more slowly than it should . from the rectilinear shape of both the leading ( shown in figure  [ fig : interface1 ] ) and trailing interfaces of the rectangular strip , we have found that galilean invariance is in fact well satisfied with equation  [ eqn : mod_bbl ] .",
    "figure  [ fig : interface1 ] corresponds to a situation of high viscosity and low diffusion ( @xmath111 ) but the same features have been observed for a number of different physical parameters .",
    "the magnitudes of the errors made by using the inappropriate bounce - back , in this geometry , are found to decrease upon increasing the mobility , probably because a large mobility allows a faster relaxation to the imposed velocity profile in the interfacial region ( especially near the contact with the walls ) .    .",
    "the walls wet partially , and therefore the stripe relaxes from its initial configuration to a bent interface .",
    "we show the interfaces for the bounce - back described in equation  [ eqn : bbl ] ( open circles ) , and also for a bounce - back of the order parameter field in which the advection induced by the moving walls is neglected ( filled diamonds ) . in open squares",
    "we show the trailing interface at time 4000 to show the magnitude of the deviations with respect to galilean invariance ( see text ) . ]    in figure  [ fig : interface2 ] we show the same configuration as described in the previous paragraph , but for the case in which the solid surface partially wets one of the two phases , so that @xmath90 is nonzero and @xmath112 rather than 90 degrees . in this case",
    "the profile should relax from the initial perpendicular stripe to a curved interface .",
    "again , the use of inappropriate bounce - back for the order parameter leads to a slower motion of the interface , and a significant distortion away from the equilibrium interfacial shape . in order to test galilean invariance here , for the final interface ( @xmath113 timesteps )",
    "we have compared the leading and trailing edge of the stripe .",
    "there is a slight deviation in this case , implying that the asymmetry entering via @xmath90 couples through to the overall fluid motion relative to the underlying lattice , which ( by galilean invariance ) it should not .",
    "however , the resulting violation is very small , and the interfacial deviations do not grow beyond one lattice spacing .    we have also verified that if the velocity of the walls is perpendicular to their own plane , then an order parameter profile , initially in equilibrium , remains stationary .",
    "this confirms that the chosen boundary conditions can account for generically moving interfaces for the case of a binary mixture .",
    "finally , for stationary walls , we have computed the contact angles for the simplest asymmetric case in which @xmath114 ( see equation  [ eqn : sfe ] ) . in this situation",
    "the order parameter at the wall will deviate by the same magnitude , but with opposite sign , in the two bulk phases .",
    "for this choice ( with @xmath115 ) the contact angle , @xmath75 , is predicted to depend on the parameter @xmath116 according to @xmath117\\ ] ] we have considered a geometry in which the two solid walls have the same wetting properties .",
    "we start , as in the previous case , with an initial stripe perpendicular to the walls , defining two regions with opposite equilibrium values for the order parameter .",
    "the equilibrium profile for the interface then corresponds to a cylindrical cap . by fitting the cylindrical cap it is possible to get a numerical value for the contact angle . in figure",
    "[ fig : angle ] we show the measured contact angles as a function of @xmath118 for different interfacial widths @xmath119 , and compare these with the above theoretical prediction .",
    "( note that , by maintaining fixed @xmath120 have kept constant the values @xmath35 of the equilibrium order parameters in the two coexisting phases . ) as can be seen , the agreement between the theoretical prediction and the measured contact angle is quantitative .",
    "is the liquid / liquid interfacial width expressed in lattice units . ]",
    "the parameters that characterize the binary mixture have been chosen to ensure fairly wide fluid - fluid interfaces .",
    "( in fact , the smallest interfacial width , @xmath121 , is at least twice as large as that used previously in production runs for binary fluid demixing  @xcite . ) for narrower interfaces than this , the contact angles can differ significantly from the predictions due to anisotropies induced by the lattice , whose effects were studied ( for fluid - fluid interfaces only ) in  @xcite .",
    "this effect should be more relevant for small contact angles .",
    "indeed , when a narrow fluid - fluid interface has a glancing incidence with the solid wall , the discrete separation of lattice planes will lead to significant errors in the estimation of the order parameter gradients ; the direction of these not only determines the surface normal of the fluid - fluid interface , and hence the contact angle , but is crucial to an accurate estimate of the free energies near the contact line . however , except perhaps for small contact angles , there is not much accuracy gained from choosing @xmath122 larger than @xmath123 .",
    "because of the finite width of the interfaces , one has to be careful to measure the contact angle by extrapolation from regions of fluid - fluid interface that are more than about @xmath122 from the wall . to check that we did this correctly , we have also numerically and analytically computed the three interfacial tensions directly by the method outlined in section [ ssec : wetting ] . from the values of the surface tensions obtained ,",
    "it is the possible to get values for the contact angles , through young s law , equation  [ eqn : young ] .",
    "as expected , the values agree with the theoretical predictions and the contact angles measured from the profiles ( figure  [ fig : angle ] ) .",
    "we have described a versatile parallel lattice boltzmann code for the simulation of complex fluids .",
    "the objective has been to develop a piece of code that allows to study the hydrodynamics of a broad class of multicomponent and complex fluids , focusing initially on binary fluid mixtures with or without solid surfaces present .",
    "it combines a parallelization strategy , making it suitable to exploit the capabilities of supercomputers , with a modular structure , which allows its use without the need to know its computational details , and with the possibility of focusing on the physical analysis of the results .",
    "this strategy has led to a code that is in principle adaptable to several different uses within the academic collaboration involved  @xcite .",
    "we have discussed how to introduce generic fluid - solid boundary conditions , and discussed which structures were developed to combine the requirements of specific physical features with the generic structure of the code .",
    "the performance of the code in different computers shows its portability , and it scales up efficiently on parallel computers .",
    "we have implemented generic boundary conditions for a binary mixture in contact with moving solid interfaces .",
    "we have shown how one recovers appropriate behavior of the momentum and the fluid order parameter so long as the bounce - back rule , in the moving frame of the wall , is performed with the distribution function that characterizes the order parameter as well as that for momentum ( equation  [ eqn : mod_bbl ] ) . a mesoscopic boundary condition that accounts for the wetting properties of a binary mixture near a solid surface has been described .",
    "it has been shown how to deal appropriately with the gradients of the order parameter at the wall , and with the role of the finite interfacial width when analyzing the results .",
    "the values obtained for the contact angle agree with the predictions of the model simulated , showing the absence of lattice artifacts , at least for contact angles larger than about 20 degrees .",
    "these results are , however , for planar solid interfaces oriented along a lattice direction .",
    "we have not checked in detail the dependence of the contact angle on the orientation of the solid surface , and it may require further work on the discretization of order parameter derivatives before this isotropy can be relied upon .",
    "analogously to the problem of small wetting angles mentioned above , the problem may prove most acute for low - angle inclination of the solid surface , where the naive discretization of the solid phase leads to a series of well - separated steps in the wall position .",
    "current and planned work with _",
    "ludwig _ includes the hydrodynamic simulation of multicomponent fluid flow in a porous networks with controlled wetting ; implementation of lees - edwards ( sliding periodic ) boundary conditions ; large - scale simulations of binary fluids under shear , and the improvement of the gradients to make the thermodynamics of this model more fully independent of the underlying symmetries of the lattice .",
    "longer term plans include studying colloid hydrodynamics and extending _ ludwig _ to study amphiphilic systems under shear ( see  @xcite for an example of this studied by dpd ) .",
    "the authors would like to acknowledge michael cates , simon jury , alexander wagner , patrick warren , and julia yeomans for valuable discussions .",
    "they thank michael cates for assistance with the manuscript .",
    "this work has been funded in part under the maxwell institute s project on fluid flow in soft and porous matter and the epsrc e7 grand challenge and gr / m56234 .                              c.p .",
    "lowe , d.  frenkel and a.j .",
    "masters , j.  chem.phys .   *",
    "103 * , 1582 ( 1995 ) .",
    "hagen , d.  frenkel and c.p .",
    "lowe , physica a * 272 * , 376 ( 1999 ) . j.  rowlinson and b.  widom , _ molecular theory of capilarity _ , clarendon press , oxford 1982 ."
  ],
  "abstract_text": [
    "<S> this paper describes _ ludwig _ , a versatile code for the simulation of lattice - boltzmann ( lb ) models in 3-d on cubic lattices . </S>",
    "<S> in fact _ </S>",
    "<S> ludwig _ is not a single code , but a set of codes that share certain common routines , such as i / o and communications . if _ </S>",
    "<S> ludwig _ is used as intended , a variety of complex fluid models with different equilibrium free energies are simple to code , so that the user may concentrate on the physics of the problem , rather than on parallel computing issues . thus far , _ </S>",
    "<S> ludwig _ </S>",
    "<S> s main application has been to symmetric binary fluid mixtures . </S>",
    "<S> we first explain the philosophy and structure of _ ludwig _ which is argued to be a very effective way of developing large codes for academic consortia . </S>",
    "<S> next we elaborate on some parallel implementation issues such as parallel i / o , and the use of mpi to achieve full portability and good efficiency on both mpp and smp systems . </S>",
    "<S> finally , we describe how to implement generic solid boundaries , and look in detail at the particular case of a symmetric binary fluid mixture near a solid wall . </S>",
    "<S> we present a novel scheme for the thermodynamically consistent simulation of wetting phenomena , in the presence of static and moving solid boundaries , and check its performance .    </S>",
    "<S> lattice - boltzmann . </S>",
    "<S> wetting . computer simulations . </S>",
    "<S> parallel computing . </S>",
    "<S> binary fluid mixtures . </S>"
  ]
}
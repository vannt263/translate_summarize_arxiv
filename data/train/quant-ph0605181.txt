{
  "article_text": [
    "what is the computational power of quantum computers ?",
    "this question is fundamental both from a computer scientist as well as a physicist points of view .",
    "this paper attempts to improve our understanding of this question , by studying perhaps the most natural @xmath3-complete problem known to us today : the problem of approximating the jones polynomial .",
    "here we try to clarify the reasons for its @xmath3-hardness , as well as extend its applicability , and on the way , gain better understanding and new tools for proving quantum universality in general .",
    "the jones polynomial , discovered in @xmath6 @xcite , is a very important knot invariant in topology ; it assigns a one variable laurent polynomial @xmath7 to a link @xmath8 , in such a way that isotopic links are assigned the same polynomial .",
    "it is an extremely difficult object to compute  evaluating it at any point except for a few trivial ones is -hard @xcite .",
    "the importance of the jones polynomial was manifested in connections to numerous areas in mathematics , from the statistical physics model known as the potts model to the study of dna folding . among its many connections , an extremely important one",
    "was drawn by witten in 1989 to quantum mechanics , and , specifically , to topological quantum field theory ( @xmath9 ) @xcite .",
    "witten showed how the jones polynomial naturally appears in the wilson lines of the @xmath10 chern - simons topological quantum field theory .",
    "about a decade later , @xmath9 entered the scene of quantum computation when freedman suggested a computational model based on this theory @xcite .",
    "the works of freedman , kitaev , larsen and wang @xcite showed an equivalence between the @xmath9 model and the standard model of quantum computation . on one hand , they gave an efficient simulation of @xmath9 by a quantum computer @xcite . on the other hand",
    ", they showed that quantum computation can simulate @xmath9 efficiently @xcite .",
    "these results draw interesting connections between quantum computation and the jones polynomial .",
    "the simulation of @xmath9 by quantum computers implicitly implies ( via the results of witten ) the existence of a quantum algorithm for _ approximating _ the jones polynomial evaluated at the fifth root of unity @xmath11 , to within a certain _ additive _ approximation window . in the other direction",
    ", the simulation of quantum computers by @xmath9 implicitly implies that the same jones polynomial approximation problem ( with the same additive approximation window ) is @xmath3-hard ; the proof uses lie algebras extensively .",
    "this draws an important equivalence between the two seemingly completely different problems of quantum computation and the approximation of the jones polynomial of links .",
    "the above mentioned important results were stated in the language of @xmath9 , and relied on advanced results from lie algebras theory ; this made the results inaccessible for much of the computer science community for a while . in @xcite , clear statements of the results were provided using a computational language , but without proofs ; an explicit algorithm was thus still missing , as well as a proof from first principles of universality .",
    "few years ago , aharonov , jones and landau @xcite provided an explicit and efficient quantum algorithm for the problem of approximating the jones polynomial of a given link , at roots of unity of the form @xmath12 , using the standard quantum circuit model .",
    "the algorithm uses a combination of simple to state combinatorial and algebraic results of over @xmath13 years ago due to jones .",
    "the main ingredient is a certain matrix representation , called the _ path - model representation _ , which maps elements from an algebra of braid - like objects ( called the _ temperley - lieb algebra _",
    "@xmath14 ) , to operators acting on _ paths _ of @xmath15 steps on a certain graph @xmath16 . in the cases in which this representation is unitary",
    ", this gives a simple - to - state quantum algorithm for the approximation of the jones polynomial : the matrices are applied by the quantum computer , and the approximation of the jones polynomial is derived by approximating a certain trace of the resulting unitary matrix .",
    "this bypasses the @xmath9 language altogether .    the universality proof due to @xcite , stated first in terms that were also closer to the @xmath9 language",
    ", can also be made explicit in the standard quantum model language , without referring to @xmath9 .",
    "this can be done using a mapping suggested by kitaev @xcite , and independently wocjan and yard @xcite , in which the basis states of one qubit are encoded by one of two possible paths of length four in the space of the path model representation .",
    "the results described above imply an explicit proof in the standard quantum computation model that the problem of approximating the jones polynomial at the fifth root of unity , and in fact , for any primitive root of unity @xmath12 , for constant @xmath17 is @xmath3-complete - complete loosely - in fact , this is a promise problem , and therefore is not complete in the usual sense . ] and thus equivalent in a well - defined sense to standard quantum computation .",
    "this is arguably the most natural @xmath3-complete problem known to us today , ( though see @xcite ) .",
    "the fact that the problem is @xmath3-complete , highlights the importance of this problem in the context of quantum computational complexity , and motivates deeper investigation of the intriguing connections and insights revealed by those results .",
    "one natural direction to pursue is to try and generalize the algorithm in various directions .",
    "several results extended the jones polynomial approximation algorithms to other knot invariants and to more general braid closures ( see , e.g. , @xcite ) to evaluation of the potts model partition function and the tutte polynomial @xcite , and to approximations of tensor networks @xcite , as well as to the turaev - viro invariant @xcite . in this paper",
    "we take the other direction : we attempt to study and further clarify the reasons for the @xmath3-hardness of those problems , and expand its range of applicability , with the hope of clarifying the source of the computational power of quantum computation .",
    "we ask here the following natural question .",
    "it turns out that the algorithms given in the work of aharonov et al .",
    "work not only for constant @xmath0 , but also for asymptotically growing @xmath0 s . to be more precise",
    ", @xcite gives an efficient quantum algorithm to approximate the jones polynomial of a certain closure ( called the plat closure ) of an @xmath15-strands braid with @xmath18 crossings , evaluated at a primitive root of unity @xmath12 .",
    "the running time of the algorithm is polynomial in @xmath19 and @xmath0 .",
    "the algorithm is therefore efficient even if @xmath0 grows polynomially with @xmath15 . on the other hand ,",
    "the proof of @xmath3-hardness is only known to hold for constant @xmath0 .",
    "therefore , in @xcite the following natural question was raised : what is the complexity of approximating the jones polynomial for polynomially bounded @xmath0 ?",
    "it was left open whether it is @xmath3-hard , doable in @xmath20 , or maybe somewhere in between .    in this paper",
    "we resolve this question , and show that for any polynomially qbounded @xmath0 , the problem is @xmath3-hard .",
    "the following is a rough statement of the result ; exact statement is given in theorem  [ thm : poly - k ] in sec .",
    "[ sec : poly - k ] .    [ thm : intro ] the problem of approximating the jones polynomial of the plat closure of a given braid @xmath21 , with @xmath18 crossings , at @xmath22 , where both @xmath18 and @xmath0 are polynomially bounded in @xmath15 , to within the same accuracy as is done in @xcite , is @xmath3-complete .",
    "we thus show that in all cases where the ajl algorithm @xcite is known to be efficient , we derive that the problem it solves is @xmath3-complete .",
    "the proof is not a mere extension of the previous constant @xmath0 case , and there are severe problems to overcome .    as a side benefit , our proof also simplifies the original proofs for the constant @xmath0 case @xcite , and reproves it almost from first principles , without using advanced results from lie algebra , thus making it more accessible to the computer science audience . indeed , since the preliminary publication of the results presented here in @xcite , the methods we developed here were applied in several other contexts ( see sec .",
    "[ sec : related ] ) .",
    "we will soon outline the general approach towards the proof of universality of the constant @xmath0 case , the difficulties in extending the proof to non - constant @xmath0 , and our methods to overcome them . before that , let us mention interesting connections and further implications to the complexity of _ multiplicative _ approximations of the jones polynomial .",
    "a significant `` drawback '' of the ajl algorithm is the fact that it provides an _ additive approximation _ to the jones polynomial .",
    "it can approximate the jones polynomial up to an additive error of @xmath23 , with @xmath24 being some scale ( which is easy to calculate ) .",
    "the problem is that the exact value of the polynomial might be exponentially smaller than @xmath24 , making this kind of additive approximation useless .",
    "a partial answer to this `` drawback '' is found in its complementing result , the @xmath3-hardness theorem , which we re - prove in this paper ; it shows that despite the seeming weakness of the approximation , it is as hard as the hardest problems that a quantum computer can solve . thus , there exist links for which the additive approximation of the ajl is non - trivial .",
    "nevertheless , one can rightfully argue that the situation is still not satisfactory ; additive approximations are far less interesting from an algorithmic point of view , and we would have liked to focus on a much better and more natural approximation notion , namely a multiplicative one .",
    "goldberg and jerrum @xcite studied the complexity of multiplicative approximations of the tutte polynomial .",
    "the jones polynomial ( of _ alternating _ links ) is a special case of this important polynomial .",
    "their results imply that the multiplicative approximation ( to within a constant arbitrarily close to @xmath25 ) of the jones polynomial of alternating links , at certain real values , is @xmath26 hard ( relative to @xmath27)-hard , but these cases do not correspond to the jones polynomial . ] those values , however , do not intersect the values for which @xmath3 additive approximations exist due to the ajl algorithm , as they only apply to real points , while the ajl works at the complex roots of unity . and",
    "so one might still hope that the ajl algorithm as well as the universality proofs for those values can be improved and stated using the multiplicative approximation notion .",
    "a beautiful recent result by kuperberg @xcite , helps to shed light on this matter .",
    "kuperberg observed that @xmath3 hardness of additive approximations seems to go _ hand in hand _ with the @xmath5-hardness of the _ multiplicative approximation _ at the same values , via the result of aaronson that @xmath28 @xcite , as well as on the exponential efficiency of the solovay - kitaev algorithm . using these ideas , kuperberg proved that the multiplicative approximations of the jones polynomial of a plat closure of a braid , evaluated at the @xmath0th root of unity , for constant @xmath1 and @xmath2 , are @xmath5-hard .",
    "essentially , the argument is that by aaronson s result , in order to solve @xmath5-hard problems , it suffices to be able to compute , or even provide multiplicative approximations of , conditional probabilities for the outputs of a given quantum circuit .",
    "however , for @xmath0 for which @xmath3-hardness of additive approximations of the jones polynomial holds , we can use the same mapping from circuits to links used for the @xmath3-hardness to derive _ exponentially _ good approximations of those conditional probabilities in terms of the jones polynomial of some link , where the link need only be polynomial in the number of gates in the circuit , due to the exponential efficiency of the solovay - kitaev theorem .",
    "note that the final result is a purely classical result that is derived using quantum complexity tools .",
    "it turns out that the argument goes through also for the universality proofs in this paper , and hence , we get the following corollary :    the problems of the approximation of the jones polynomial at the same points and parameters for which theorem  [ thm : intro ] implies @xmath3-hardness , with the approximation replaced by _ multiplicative approximation _ to within a constant arbitrarily close to @xmath25 , are @xmath5-hard .",
    "we now proceed to outline the proof of theorem [ thm : intro ] .",
    "let us start with explaining the constant @xmath0 case first .",
    "given an algorithm that calculates the jones polynomial of any link at @xmath29 ( for some integer @xmath30 and @xmath31 ) in polynomial time in the number of crossings in the link , and a classical turing machine - we can simulate a quantum computer efficiently .",
    "how is that possible ?",
    "the key idea , which is used also in the algorithmic result of @xcite , the existence of an intimate connection between two , seemingly distinct , worlds : links and unitary matrices .",
    "the connection is the so - called `` path - model representation '' , which is defined for every integer @xmath0 .",
    "the @xmath0th path model representation maps every @xmath15-strand braid @xmath21 in the braid group ( e.g. , fig .",
    "[ fig:4strand ] ) into a unitary matrix @xmath32 .",
    "@xmath32 acts on a hilbert space spanned by _",
    "paths _ of length @xmath15 on a certain graph , @xmath16 , which is simply the line graph of @xmath33 segments ( see fig .  [",
    "fig : gk ] ) .    ]    as was shown by jones @xcite , the unitary matrix @xmath32 can be related to the jones polynomial of the link @xmath34 derived from the braid @xmath21 by closing its strands in a certain way called the _ plat closure _ ( see example in figure [ fig : plat ] ) ;    ]    the connection is that the expectation value @xmath35 ( where @xmath36 is some special state ) is proportional to the jones polynomial @xmath37 of the plat closure of the braid @xmath21 , evaluated at the @xmath0th root of unity ( with an easy to calculate proportionality constant ) . to prove @xmath3 hardness of the approximation of the jones polynomial , it thus suffices to prove @xmath3 hardness of the approximation of @xmath35 for a given braid @xmath21 .",
    "the strategy to do this is to show that any given quantum circuit , namely a sequence of gates @xmath38 , can be mapped to a braid @xmath21 , such that the value @xmath39 is proportional to @xmath35 .",
    "the @xmath3-hardness proof thus boils down to showing that a general quantum gate can be approximated efficiently using the unitary images of braids by the path - model representation .",
    "more precisely , one considers some subset of the generators of the braid group ( each generator is simply a crossing of two adjacent strands ) .",
    "each such generator is mapped to a certain ( @xmath40dependent ) unitary operators on the space of paths .",
    "the main difficulty in the proof is to show that the group generated by the images of those generators is dense in a large enough subgroup of the unitary group , to contain all unitary gates .",
    "once this is shown , it is standard to apply the famous solovay - kitaev theorem @xcite to show that _ density implies efficiency_. in other words , once the subgroup is dense , then solovay - kitaev gives a method to approximate every gate in the quantum circuit by a polynomially bounded in length sequence of generators , and universality follows .    but",
    "how does one prove the density ?",
    "the starting point is kitaev - wocjan - yard four steps encoding @xcite which encodes the state of one qubit into four steps paths . for two qubits ,",
    "these paths correspond to @xmath41-strands braids , @xmath42 for each encoded qubit .",
    "in fact , the four dimensional hilbert space of the two qubits is encoded into a space spanned by @xmath42 paths , which is embedded into an `` invariant '' space spanned by all @xmath43 paths on the @xmath41 strands ; see sec .",
    "[ sec : analyze ] and fig .",
    "[ fig:8p ] for the details .",
    "density thus means that we can approximate any matrix in @xmath44 ( and thus also any matrix in @xmath45 embedded in it ) , using our @xmath0-dependent generators . in order to prove density",
    ", the idea is to first restrict attention to some two dimensional subspace , and show density in @xmath10 .",
    "this was essentially done by jones @xcite .",
    "we then gradually increase the dimensionality of the space on which we have density , to @xmath44 , by adding one or more dimensions at a time ; to this end we introduce two lemmas which are useful tools for proving universality in general : the _ bridge lemma _ [ thm : mix ] and the _ decoupling lemma _ [ thm : decouple ] .",
    "we explain those later in the introduction , in sec .",
    "[ sec : lemmas ] since they are of independent interest . using these lemmas",
    ", we can build up our way from density on @xmath10 to the desired density on @xmath44 ; this completes the density proof of the constant @xmath0 case .",
    "we get an almost self - contained , fairly elementary proof .",
    "we would now like to move to the asymptotically growing @xmath0 case . here",
    ", however , there is a subtle point in the above line of arguments .",
    "indeed , density still holds .",
    "but the step of _ density implies efficiency _ fails .",
    "the starting point of the solovay - kitaev theorem is the construction , using the set of generators , of an @xmath46-net in the unitary group , where @xmath46 is some small enough constant .",
    "such an@xmath46-net is easy to construct , given a _",
    "fixed _ set of generators that span a dense subgroup - essentially , brute force would do the trick .",
    "more precisely , one considers an arbitrary delta - net in the unitary group @xmath44 , for delta being @xmath46/3 ; such a net contains a finite number of points . due to the density , by brute force we can find delta approximations of all those finitely many points by finite products of our generators , and those products constitute the @xmath46-net .",
    "the complexity of this initial step might be horrible , but it depends only on @xmath0 and @xmath46 , and not on @xmath15 ; for a fixed @xmath0 , it is thus constant .",
    "however , if @xmath0 is asymptotically growing in @xmath15 , then so are the generators .",
    "the brute force procedure might depend in an uncontrollable way on @xmath0 , and thus on @xmath15 .",
    "it is therefore no longer clear that the very first step of the solovay - kitaev theorem , that of creating the epsilon - net , can be done efficiently .",
    "we give here a very rough sketch of how we overcome this difficulty .",
    "looking at the @xmath0-dependence of the generators , we see that as @xmath47 , their eigenvectors converge to a fixed limit , while their corresponding eigenvalues behaves as @xmath48 .",
    "the idea then is to fix a @xmath49 and to consider special auxiliary generators : generators whose eigenvectors coincide with the @xmath50 limit , but their eigenvalues are the fixed @xmath49 eigenvalues , @xmath51 .",
    "this set of auxiliary generators is independent of @xmath15 , and we show it too spans a dense subgroup in @xmath44 ; thus we can construct an @xmath46-net from it using a straightforward brute - force search .",
    "for every sufficiently large @xmath0 , the eigenvectors of the @xmath0-dependent generators would be close enough to those of the limit @xmath52 , and thus to the eigenvectors of the auxiliary generators ; by taking the @xmath53 s power of the of the @xmath0 dependent generators , we get the @xmath53 s power of their eigenvalues @xmath48 and thus we approximate the @xmath51 eigenvalues of the auxiliary generators . for large enough @xmath0 the eigenvectors of @xmath0 would be close enough to the @xmath52 eigenvectors , and the truncation error when approximating @xmath53 by an integer would be negligible , and so we get an approximation of the auxiliary generators by @xmath0-dependent generators .",
    "we can now substitute these approximations in the @xmath46-net made of the auxiliary generators , to get an efficient construction of an @xmath46-net consisting of the @xmath0-generators .",
    "we can now apply the solovay - kitaev theorem using this net .",
    "we provide here the rough statements of the two lemmas we use here for proving density , since they seem to be useful for proving universality in a variety of other contexts .",
    "the bridge lemma roughly says that if we have density in the unitary groups acting on two orthogonal subspaces , @xmath54 and @xmath55 , with @xmath56 and an additional unitary which mixes the two subspaces ( in some well defined sense ) , we also have density on the direct sum of the spaces .",
    "this general lemma is very reminiscent of a lemma which appeared in an early version of @xcite .",
    "its proof is based on simple linear algebra , and is iterative ; it uses a combination of ideas by aharonov and ben - or @xcite and by kitaev @xcite .",
    "the decoupling lemma deals with the following scenario : a certain subgroup of the unitary matrices can be shown to be dense when restricted to one subspace and also to another subspace orthogonal to it .",
    "when we want to combine the two spaces , we encounter a problem since there may be correlations between how the matrices act on the two subspaces . the lemma states that if the dimensions of the spaces are different , it is possible to `` decouple '' those correlations and approach any unitary on one space while approaching the identity on another , and vice verse .",
    "the proof of the decoupling lemma uses simple analysis .      since the first publication of the results presented here ( in preliminary form ) @xcite , they were already used in several contexts : shor and jordan @xcite built on the methods we develop here to prove universality of a variant of the jones polynomial approximation problem , in the model of quantum computation with one clean qubit . in the extension of the ajl algorithm @xcite to the potts model @xcite , aharonov _ et al . _",
    "build on those methods to prove universality of approximating the jones polynomial in many other values , and even in values which correspond to non - unitary representations .",
    "we hope that the method we present here will be useful is future other contexts as well .    finally , we mention that the results of this paper should be viewed in a somewhat wider context of the notion of quantum `` encoded universality '' . by",
    "that we mean the following : rather than showing that a set of gates on @xmath15 qubits generates a dense subgroup in the unitary group on those @xmath15 qubits , as is done in the standard notion of quantum universality , one proves that the set of gates in fact generates a dense set in the unitary group on a space of dimension less than @xmath57 , which is _ embedded _ or _ encoded _ in the bigger @xmath57 dimensional hilbert space . if the encoding can be computed efficiently , and the encoded hilbert space is of large enough dimension , this suffices for efficient simulation of universal quantum computation .",
    "in fact , though not explicitly stated , encoded universality is exactly what was proved by freedman _",
    "_ in their original universality proof of the @xmath9 simulation @xcite , and of course in the universality proofs based on them @xcite including this current paper .",
    "the first time encoded universality was used @xcite can probably be tracked to the proof that real quantum computation suffices to simulate all of quantum computation by bernstein and vazirani @xcite .",
    "this notion was also used in various other contexts , e.g. , in the context of fault tolerance and decoherence free subspaces @xcite as well as in the encoded universality proof of the heisenberg interaction @xcite . in this paper",
    "we in fact provide general tools to prove density for such encoded universality scenarios .",
    "* organization of the paper : * + in sec .",
    "[ sec : background ] we provide the required mathematical background on links , braids , temperley - lieb algebra and the path - model representation that is needed for the proof . in sec .",
    "[ sec : const - k ] we state and prove the constant-@xmath0 universality theorem by using the density and efficiency theorem .",
    "this theorem , which is the heart of the proof , is proved separately in sec .",
    "[ sec : b8-const ] . in sec .",
    "[ sec : poly - k ] we state and prove the main result of this paper , the @xmath3-hardness of the @xmath58 case . finally , in sec .",
    "[ sec : tools ] we prove the bridge and decoupling lemmas that are used in the density proof in sec .  [",
    "sec : b8-const ] .",
    "in this section we give a brief overview of the algebraic and topological definitions and tools that we need to prove theorem  [ thm : intro ] .",
    "we define the braid group , its embedding in the temperley - lieb algebra , and the path - model representation and its relation to the jones polynomial . a more detailed description of these subjects based on first principles can be found in @xcite",
    ".      loosely speaking , a braid is a set of @xmath15 strands that connect two horizontal bars , such that each strand is tied exactly to one peg on the top bar and one peg on the bottom bar .",
    "when drawing the braid schematically on a paper , the strands may pass over and under each other , but at any point they must not be completely horizontal .",
    "braids which can be deformed into each other without tearing any of the strands are considered identical .",
    "an illustration of a 4-strand braid is given in fig .",
    "[ fig:4strand ] .",
    "the set of all braids with @xmath15 strands forms an infinite and discrete group which is called the _ braid group @xmath59_. the product rule for @xmath60 is defined by placing the braid @xmath61 above the braid @xmath62 and fusing the bottom of the @xmath61 strands with the top of the @xmath62 strands .",
    "the identity element is the braid with @xmath15 straight lines that connect each peg at the bottom bar to its corresponding peg at the upper bar .    in 1925 , artin proved that @xmath59 admits a finite presentation ( the _ artin presentation _ )",
    "@xcite , with @xmath63 generators @xmath64 that satisfy the following constraints : @xmath65 pictorially , @xmath66 is a braid that is identical to the unity braid in all strands except for the @xmath67 and @xmath68 strands which cross each other once ( the @xmath69 strand goes over the @xmath70 strand ) , connecting the lower @xmath67th peg to the upper @xmath68 peg and vice verse .",
    "the diagram of @xmath71 in @xmath72 is given in fig .",
    "[ fig : sigma - i ] .",
    "it is an easy exercise to verify graphically that the braid generators indeed satisfy ( [ eq : def - b1 ] ) , ( [ eq : def - b2 ] ) .     in the braid group @xmath72 . ]",
    "a link is an embedding of one or more closed loop in @xmath73 .",
    "we first notice that a braid can be transformed into a link by connecting its open endpoints .",
    "such an operation is called a _ closure _ , and here we focus on one particular closure : the _ plat closure_. this closure is defined only for braids with an even number of strands .",
    "it is the link that is formed by connecting the top pegs with odd numbers with the peg to their right , and doing the same with the bottom pegs .",
    "the plat closure of a braid @xmath74 is denoted by @xmath34 .",
    "figure  [ fig : plat ] shows the plat closure of the 4-strand braid from fig .  [ fig:4strand ] .",
    "we are interested in defining certain useful representations for the braid group @xmath59 , which we will later relate to the jones polynomial . to this end",
    ", we first consider the tempreley - lieb algebra @xmath14 @xcite .",
    "this is because the generators @xmath66 of the braid group @xmath59 , and therefore all of @xmath59 , can be embedded in that algebra .",
    "hence , any representation of @xmath14 yields a representation of @xmath59 .    for any scalar @xmath75 ,",
    "the @xmath14 algebra is an algebra of tangle diagrams that , much like braid diagrams , connect @xmath15 lower pegs to @xmath15 upper pegs .",
    "however , unlike the case of braid diagrams , here we do not allow crossings , but we do allow horizontal lines , including local minimas and maximas . finally , closed loops are not allowed . to multiply two tangles",
    ", we put one on top of the other , connecting lower pegs with upper pegs . any closed loop that is created in this process",
    "is then taken out of the diagram and replaced with an overall factor of @xmath75 , called the _ loop value_. see fig .",
    "[ fig : tangles ] for an example .     algebra .",
    "the first diagram is put on top of the second , and the pegs are connected . in the resulting tangle , every loop is removed and replaced with an over all @xmath75 factor . ]",
    "the braid - group @xmath59 can be embedded in the @xmath14 algebra using the following map , shown schematically in fig .",
    "[ fig : cross - opening ] : @xmath76 here , @xmath77 is the identity tangle  the tangle that connects every lower @xmath67th peg to the corresponding upper @xmath67th peg .",
    "@xmath78 is the tangle that is form by a `` cap '' that connects the lower @xmath67,@xmath68 pegs and a `` cup '' that connects the corresponding upper pegs , and the reset of the pegs are connected by identity lines .",
    "finally , @xmath54 is the scalar defined by    @xmath79    it is an easy exercise to verify that the @xmath66 defined by indeed satisfy the artin presentation ( [ eq : def - b1 ] ,  [ eq : def - b2 ] ) .     in the temperley - lieb algebra @xmath14 .",
    "the generator @xmath80 is mapped into a superposition of the tangles @xmath78 and @xmath77 , with @xmath54 given by @xmath81 . ]",
    "it follows that any matrix representation of the @xmath14 algebra yields a matrix representation of the braid group @xmath59 .",
    "we will next construct the representations which we will be using .",
    "the path - model representations are a family of representations for the temperley - lieb algebras @xcite that induce representations for the braid group @xmath59 via .",
    "they were constructed in @xcite , and form the basis of the ajl algorithm @xcite . here",
    "we will provide just minimal details that are needed to understand the use of these representations when applied to the braid group .",
    "a broader presentation of this beautiful subject , together with its relation to the temperley - lieb algebras and the knot invariants , can be found in @xcite .",
    "we work with sub - family of the path - model representations , which is characterized by an integer @xmath82 and yields a representation for @xmath14 with @xmath83 when applied to the braid group via , using @xmath84 ( which satisfies ) this representation becomes a _",
    "unitary _ representation of @xmath59 .",
    "the image of every tangle @xmath85 ( or @xmath74 ) under this representation is denoted by @xmath86 ( or @xmath32 ) and it acts on a finite hilbert space . to understand the structure of this space",
    ", we introduce the graph @xmath16 , which is made from a set of @xmath87 sites ( vertices ) and @xmath33 edges that connect them .",
    "the sites are ordered from bottom to top one above the other , as described in fig .",
    "[ fig : gk ] .",
    "to each site we assign a number according to its position , starting with @xmath25 at the bottom .",
    "we then consider all possible @xmath15-steps walks ( paths ) over the graph @xmath16 that start at site @xmath25 _ and never leave @xmath16_. we use these paths to define the hilbert space @xmath88 of @xmath15-steps paths over @xmath16 : every path @xmath89 is mapped to a vector @xmath90 , and we define the set of all paths to be an orthonormal basis of @xmath88 .",
    "is shown to be compatible with the upper path @xmath91 .",
    "these paths define a unique labeling of every region in the tangle by a vertex of @xmath16 . ]    to define @xmath92 , we will describe the action of @xmath86 on some @xmath93 , where @xmath85 .",
    "@xmath94 is a linear combination of paths .",
    "a path @xmath95 with a non - vanishing weight in that combination is said to be _ compatible _ with @xmath89 with respect to @xmath96 . to decide",
    "whether @xmath95 is compatible with @xmath89 , we first draw @xmath96 in a box .",
    "the @xmath15 lower pegs divide the lower boundary of the box into @xmath97 segments , which we call lower gaps , and similarly the upper pegs define @xmath97 upper gaps .",
    "we now associate every vertex of the path @xmath89 with the lower gaps ( starting from the left - most gap , which must be 1 ) , and the upper gaps with @xmath95 .",
    "we notice that as @xmath96 contains no loops , it partitions the box into non - overlapping regions , and each region must be connected to at least one gap ( either lower or upper ) .",
    "therefore every region in the box is associated with at least one vertex , either of @xmath89 or of @xmath95 ( or of both ) .",
    "then @xmath89 and @xmath95 are compatible iff every region is associated with exactly one vertex .",
    "when this happens , the paths define a `` labeling '' , or a `` coloring '' of the regions .",
    "an example of two compatible paths and the coloring they defined is shown in fig .",
    "[ fig : coloring ] .",
    "there , the path @xmath98 is shown to be compatible with the path @xmath99 with respect to the tangle @xmath96 .",
    "to finish the definition of the path - model representation , we have to specify the weight of every compatible path .",
    "there is a beautiful derivation which yields such weights so that what we get is indeed a representation ( see @xcite for a combinatorial exposition of this derivation ) ; here we will not provide the details but only the resulting definition of the matrix representation .",
    "we define : @xmath100 , and then @xmath101 and we have by equations ( [ def : d0]),([def : a0 ] ) @xmath102 we can now define the matrices @xmath103 , and through them @xmath104 by : @xmath105 we consider an arbitrary path @xmath106 , where @xmath107 is the position on the path _ before _ taking the @xmath67th step . for brevity , we will denote by @xmath108{downdown.eps}\\ \\",
    ", } $ ] the path in which the @xmath67 and @xmath68 steps are descending ( i.e. , to @xmath109 and then to @xmath110 ) , and similarly @xmath108{upup.eps}\\ \\ , } $ ] for two ascending steps .",
    "similarly , the paths @xmath111{updown.eps}\\ \\ , } $ ] , @xmath111{downup.eps}\\ \\ , } $ ] denote a combination of ascending and descending , and it is agreed that they are coincide with each other at _ all _ but the @xmath112 steps",
    ". then the @xmath113 matrices are given by @xmath114{downdown.eps}\\ \\",
    ", } } \\rangle } } & = & 0 \\ , \\\\    \\label{eq : phi - second }    \\phi_i { { |{{\\ \\ , \\includegraphics[bb=5 0 10 10]{downup.eps}\\ \\ , } } \\rangle } } & = &      \\frac{\\lambda_{z_i-1}}{\\lambda_{z_i } }      { { |{{\\ \\ , \\includegraphics[bb=5 0 10 10]{downup.eps}\\ \\ , } } \\rangle } }      + \\frac{\\sqrt{\\lambda_{z_i+1}\\lambda_{z_i-1}}}{\\lambda_{z_i } }         { { |{{\\ \\ , \\includegraphics[bb=5 0 10 10]{updown.eps}\\ \\ , } } \\rangle } } \\ , \\\\    \\label{eq : phi - third }    \\phi_i { { |{{\\ \\ , \\includegraphics[bb=5 0 10 10]{updown.eps}\\ \\ , } } \\rangle } } & = &      \\frac{\\lambda_{z_i+1}}{\\lambda_{z_i } }      { { |{{\\ \\ , \\includegraphics[bb=5 0 10 10]{updown.eps}\\ \\ , } } \\rangle } }      + \\frac{\\sqrt{\\lambda_{z_i+1}\\lambda_{z_i-1}}}{\\lambda_{z_i } }         { { |{{\\ \\ , \\includegraphics[bb=5 0 10 10]{downup.eps}\\ \\ , } } \\rangle } } \\ , \\\\    \\phi_i { { |{{\\ \\ , \\includegraphics[bb=5 5 10 10]{upup.eps}\\ \\ , } } \\rangle } } & = & 0 \\ . \\label{eq : phi - last}\\end{aligned}\\ ] ]    notice that by , the operators @xmath80 have the same invariant subspaces as the @xmath113 operators .",
    "specifically , in the paths basis , @xmath80 breaks into one - dimensional and two - dimensional blocks ( but notice that these are different blocks for different operators ) that consist of @xmath115{downdown.eps}\\ \\ , } } \\rangle } } \\big\\},\\big\\ { { { |{{\\ \\ , \\includegraphics[bb=5 5 10 10]{upup.eps}\\ \\ , } } \\rangle } } \\big\\}$ ] paths and @xmath116{updown.eps}\\ \\ , } } \\rangle } } , { { |{{\\ \\ , \\includegraphics[bb=5 0 10 10]{downup.eps}\\ \\ , } } \\rangle } } \\big\\}$ ] paths respectively .",
    "we also see that @xmath113 , and hence @xmath80 , does not change the end point of a path , because they only mix paths that coincide at all but the @xmath68 site .",
    "therefore , the path representation breaks into representations over subspaces that correspond to paths that end at a particular @xmath117 .",
    "we denote these subspaces by @xmath118 , and note that @xmath119 .",
    "it turns out that there is a very strong connection between the path - model representation of a braid and the jones polynomial of its plat closure .",
    "we will not define here the jones polynomial , but only refer to it by notation , @xmath120 .",
    "the jones polynomial of the plat closure of every @xmath74 can be given by a `` sandwich '' product of the operator @xmath32 with a special vector @xmath121 .",
    "specifically , let @xmath34 denote the plat closure of the braid @xmath21 , and @xmath122 its jones polynomial .",
    "let @xmath123{zigzag.eps}\\cdots \\ , } $ ] denote the `` zig - zag '' path , and @xmath36 its corresponding vector .",
    "then the following equality holds : @xmath124 where @xmath24 is given by @xmath125 here , @xmath126 is the _ writhe _ of the link @xmath34 , which is a trivial function of a link  it is basically a sum over all its crossings .",
    "@xmath127 is the jones polynomial of @xmath34 , evaluated at @xmath128 .",
    "the other quantities in the formula are @xmath129 and @xmath54 which are defined in equations ( [ def : lambda ] ) , ( [ def : d ] ) , and ( [ def : a ] ) , and @xmath130 that is defined by @xmath131    we note that both the writhe and the jones polynomial are only defined for _ oriented _ links , and therefore we must choose some orientation for @xmath34 to make the above well defined ; it does not matter , however , which orientation we pick since the combination @xmath132 is independent of the orientation ( in agreement with the lhs of ) .",
    "( in fact , this combination is precisely the _",
    "kauffman bracket _",
    "@xmath133 , which is also a polynomial of the link , but we will not use this terminology here ) .",
    "equation from the previous section establishes the connection between the jones polynomial and a quantum - mechanical - like expectation value @xmath35 .",
    "it is this connection that enables , on one hand , the approximation of the jones polynomial by a quantum computer , and , on the other hand , the simulation of a quantum computer by approximating the jones polynomial .    in this section",
    "we show the latter result .",
    "specifically , we show that approximating the jones polynomial at the @xmath0th root of unity @xmath134 for @xmath135 is @xmath3-hard .",
    "this result was already proved by freedman et al .",
    "@xcite . here and",
    "in the following section , we give our version of the proof , which uses a somewhat more elementary machinery , and enables us to prove the @xmath3-hardness of the @xmath58 problem in sec .",
    "[ sec : poly - k ] .    for a constant @xmath0 ,",
    "the exact statement of the result is as follows    [ thm : const - k ] let @xmath135 be an integer , and @xmath136 its corresponding root of unity .",
    "let @xmath74 be a braid with @xmath137 crossings , and @xmath34 its plat closure .",
    "finally , let @xmath138 be its jones polynomial , and @xmath24 as defined in . then given a promise that either @xmath139 or @xmath140 , it is @xmath3-hard to decide between the two .",
    "the rest of this section is devoted to the proof of this theorem .",
    "the outline of the proof was given in the introduction , and we repeat it here for readability , and also in order to add a few missing details . fix a @xmath0 , as in theorem [ thm : const - k ] .",
    "we assume we have access to a machine that for given a braid provides approximations of the jones polynomial within the same accuracy as in theorem  [ thm : const - k ] , in polynomial time . by and",
    "the definition of the approximation window @xmath24 in , this means that we have access to a machine that given a braid @xmath21 , can decide whether @xmath141 is larger than @xmath142 or smaller than @xmath143 .",
    "it therefore suffices to reduce a known @xmath3-hard problem to this latter approximation problem of @xmath141 .",
    "we will do this using the following problem , which is easily shown to be @xmath3-hard by standard arguments : given is a quantum circuit by its @xmath8 gates , @xmath144 on @xmath15 qubits with @xmath145 , decide whether @xmath146 or @xmath147 .",
    "this problem is easily seen to remain @xmath3-hard even if we assume that the qubits the circuit acts on are set on a line , and each gate @xmath148 is two - local , acting on adjacent qubits .",
    "we will show how given such a quantum circuit , one can efficiently find a braid @xmath21 of polynomial number of strands and crossings such that @xmath35 approximates @xmath149 ( say , up to an additive error of @xmath150 ) .",
    "this will suffice to prove theorem ( [ thm : const - k ] ) .",
    "we begin by introducing the kitaev - wocjan - yard 4-steps encoding that maps strings of bits to paths , and would enable us to map any quantum gate @xmath151 to an operator on the space of paths .      in the 4-steps encoding ,",
    "we encode every bit by a 4-steps path that starts and ends at the first site : @xmath152{zero.eps } \\ , } } \\rangle } } \\\\    { { |{\\underline{1 } } \\rangle } } & { \\stackrel{\\mathrm{def}}{= } } & { { |{1\\to 2\\to 3\\to 2\\to 1 } \\rangle } } =      { { |{{\\ \\ , \\includegraphics[bb=3 5 30 10]{one.eps } \\ , } } \\rangle } } \\ .\\end{aligned}\\ ] ] then a string of @xmath15 encoded qubits @xmath153 is encoded as a @xmath154-steps path in @xmath155 , and is denoted by @xmath156 .",
    "these paths are not arbitrary paths in @xmath157 , as they return to the first site every 4 steps .",
    "we denote by @xmath158 the subspace that is spanned by all these paths .",
    "we note that the zig - zag path @xmath159 is actually the encoded string @xmath160 .",
    "next , just as we encode bit strings , we encode the computational gates : every gate @xmath161 is encoded by @xmath162 where @xmath163 denote bit strings and @xmath164 their encoding .",
    "then the product @xmath165 naturally translates to @xmath166 and so by finding braids @xmath167 such that @xmath168 and then taking their product @xmath169 , we will get @xmath170 .",
    "consequently , @xmath171 in fact , we will not be so ambitious ; we will only require that @xmath168 on the subspace @xmath158 , and show that this suffices .",
    "the advantage of using this particular encoding is that , together with the tensorial structure of the qubits , it allows us to concentrate on the `` reduced '' braid group @xmath172 instead of the larger group @xmath173 .",
    "let us explain exactly what is meant by that .",
    "suppose that we wish to perform an operation on the @xmath174 encoded qubits of some path @xmath175 .",
    "then we must use a braid @xmath176 that mixes the 8 strands @xmath177 while being trivial on the rest .",
    "however , since @xmath175 , its path reaches the first site before the @xmath178 and @xmath179 steps .",
    "therefore the three partial paths that are defined by the steps @xmath180,@xmath177 and @xmath181 are all _ legitimate _ paths over the graph @xmath16 ( i.e. , they start and end at the first site and never leave @xmath16 ) .",
    "we denote these partial paths by @xmath182 and @xmath183 respectively , and write @xmath184 .",
    "notice also that @xmath185 .",
    "we will add a tilde to all vectors and operators that act on the @xmath186 space .",
    "in particular , we define @xmath187 to be the `` reduced '' version of @xmath21 , created by the @xmath41 non - trivial strands of @xmath21 .",
    "it is now easy to verify that @xmath188 this follows from the definition of the generators @xmath80 in ( [ def : rho ] , [ eq : phi - first]-[eq : phi - last ] ) which only depend on @xmath107 - the position of the path after @xmath189 steps , and not on the index @xmath67 itself .    by linearity",
    ", we can extend to all vectors in @xmath158 , which are simply superpositions of encoded paths .",
    "therefore , as long as @xmath175 , it is enough to search for an appropriate braid in the much simpler group , @xmath172 , instead of looking in the full @xmath173 group .",
    "what remains to show is that ( i ) we can approximate any operator on @xmath186 using a @xmath187 ( and that this can be done efficiently ) , and ( ii ) that the state we work with is always sufficiently close to the subspace @xmath158 where is valid .",
    "the next theorem and its subsequent claim show exactly that .",
    "[ thm : main ] fix @xmath30 , @xmath31 , and let @xmath190 be an encoded two - qubit quantum gate , and @xmath191 .",
    "then there exists a braid @xmath187 , consisting of @xmath192 generators of @xmath172 , such that for every @xmath185 , @xmath193 that can be found in @xmath192 time .",
    "the proof of this theorem is given in sec .",
    "[ sec : b8-const ] .",
    "let us now see how , together with , it can be used to construct the appropriate braid @xmath194 in .",
    "let @xmath165 be our quantum circuit , with @xmath148 being local two - qubit gates , and let @xmath195 be an arbitrary constant .",
    "for every @xmath148 we use the theorem to construct a braid @xmath196 , with @xmath197 , and extend it into a braid @xmath198 by adding identity strands around it .",
    "finally , @xmath21 is taken to be the product of these @xmath199 s .",
    "we have    [ cl : app1 ] @xmath200    the claim is easily proved by induction . indeed , assume that @xmath201 and define @xmath202 .",
    "it is easy to verify that _ any _ encoded gate @xmath203 sends the subspace @xmath158 into itself and therefore @xmath204 . consequently @xmath205 where the first equality follows from the reduction in and the second inequality follows from the way in which we constructed @xmath196 .",
    "then using the induction assumption together with the triangle inequality , we get @xmath206    this shows that the braid @xmath207 satisfies @xmath208 taking @xmath209 , and using then enables us to decide whether @xmath210 or @xmath211 by deciding whether @xmath212 or @xmath213 , as required .",
    "moreover , this procedure is efficient since by theorem  [ thm : main ] , the number of braid generators that are needed to approximate every gate is of the order @xmath192 , and they can be found in time @xmath192 . therefore , overall , as @xmath145 and @xmath197 , @xmath21 is made of @xmath214 gates and can be found in time @xmath215 .",
    "this concludes the proof of theorem  [ thm : const - k ] .    in the next section",
    "we will prove theorem  [ thm : main ] - the @xmath172 density and efficiency theorem for constant @xmath0 .",
    "our strategy to proving theorem  [ thm : main ] is to use the famous solovay - kitaev theorem @xcite , which shows that density implies efficiency .",
    "specifically , we will first prove that the operators @xmath216 can approximate any unitary operator on @xmath186 .",
    "in other words , we will show that they generate a dense subgroup in @xmath217 .",
    "after such density is proved , the solovay - kitaev theorem tells us that it possible to find a @xmath218-approximation of any unitary @xmath161 that consists of no more than @xmath219 generators in @xmath219 steps , thereby proving theorem  [ thm : main ] .",
    "the rest of this section is therefore devoted to proving that @xmath216 generate a dense subset of @xmath217 .",
    "we begin by analyzing the structure of the subspace @xmath186 and the generators @xmath216 of the @xmath172 path representation that act on it .",
    "we begin by noting that for @xmath220 , @xmath186 consists of exactly 14 paths there are actually only 13 paths , as path 14 is illegal ( it gets out of the graph ) .",
    "nevertheless , it is easy to see that the density proof still holds in that border case . for @xmath221 we can not prove density ( see theorem  [ thm : seed ] ) while for @xmath222",
    "the @xmath186 is too small to encode 2 qubits . ] , and hence it is a 14 dimensional space .",
    "these paths are labeled by the numbers @xmath223 and shown graphically in fig .",
    "[ fig:8p ] .",
    "let us now describe the structure of the generators on this space . in sec .",
    "[ sec : path - rep ] we saw that the generators break into 2-dimensional and 1-dimensional blocks when represented in the standard basis .",
    "let us look at these blocks in some more detail .",
    "first , by ( [ eq : phi - first],[eq : phi - last ] ) , @xmath113 nullifies paths of the form @xmath224{upup.eps}\\ \\ , } } \\rangle } } $ ] and @xmath224{downdown.eps}\\ \\ , } } \\rangle } } $ ] , and as a result they become eigenvectors of @xmath80 with an eigenvalue @xmath225 .",
    "the @xmath226 blocks of @xmath113 mix @xmath227{updown.eps}\\ \\ , } } \\rangle } } $ ] and @xmath227{downup.eps}\\ \\ , } } \\rangle } } $ ] . by ( [ eq : phi - second ] , [ eq : phi - third ] ) ,",
    "these blocks are @xmath228_{2\\times 2 } =    { \\left(\\begin{array}{cc}\\frac{\\lambda_{z_i+1}}{\\lambda_{z_i } } & \\frac{\\sqrt{\\lambda_{z_i+1}\\lambda_{z_i-1}}}{\\lambda_{z_i } } \\\\ \\frac{\\sqrt{\\lambda_{z_i+1}\\lambda_{z_i-1}}}{\\lambda_{z_i } } & \\frac{\\lambda_{z_i-1}}{\\lambda_{z_i}}\\end{array}\\right ) } \\ .\\ ] ] this matrix has two eigenvalues : @xmath229 and @xmath230 , and consequently ( by ) the eigenvalues of @xmath80 in these blocks are @xmath231  independent of @xmath107 . in fact , it is not hard to see that all the @xmath80 operators are equivalent , namely equal under a unitary change of basis .",
    "we further notice that when @xmath232 , the off - diagonal terms vanish ( because @xmath233 ) , and the blocks become diagonal .",
    "the @xmath226 matrix that diagonalizes @xmath234_{2\\times 2}$ ] ( and consequently @xmath235_{2\\times 2}$ ] ) is @xmath236 inside that subspace we have @xmath237_{2\\times 2 }      = a^{-1}\\cdot m(z_i){\\left(\\begin{array}{cc}-e^{-2i\\theta } & 0 \\\\ 0 & 1\\end{array}\\right)}m^\\dagger(z_i ) \\ .\\ ] ]    using the labeling of fig .",
    "[ fig:8p ] , we write down the block structure of the seven generators @xmath216 in table  [ tab : blocks ] . for each operator , the table lists the non - trivial blocks where @xmath113 does not vanish .",
    "the one - dimensional blocks correspond to the @xmath232 case , and the two - dimensional blocks correspond to the @xmath238 case .",
    ".the block structure of the generators of @xmath172 in @xmath186 for @xmath220 . [ cols= \" < , < , < ,",
    "< , < , < \" , ]      we will now prove the density part of theorem  [ thm : main ] .",
    "we will show that the seven operators @xmath80 can approximate any special unitary matrix on @xmath186 , provided that @xmath30 and @xmath239 .",
    "as it is a 14-dimensional space , we are interested in matrices @xmath240 we look at @xmath241 and ignore the vector @xmath43 ] .",
    "we begin by considering the action of @xmath243 and @xmath244 on this subspace . from table  [",
    "tab : blocks ] we see that these operators act non - trivially on the five @xmath226 blocks @xmath245 , while applying the trivial @xmath225 phase on the rest . in these blocks ,",
    "the @xmath243 operator is represented by @xmath246 , whereas the @xmath244 operator is represented by @xmath247 .",
    "additionally , the operators on all five blocks are equivalent , namely equal under a unitary change of basis .",
    "the following theorem assures us that in each such block we may approximate any @xmath10 matrix .",
    "[ thm : seed ] if @xmath30 , and @xmath31 , then in each @xmath226 block , the group that is generated by @xmath243 and @xmath244 is dense in @xmath10 .",
    "since @xmath243 and @xmath244 are not in @xmath10 , we will look at their images under the canonical homomorphism @xmath248 which takes @xmath249 to @xmath250 , and prove that these images form a dense set in @xmath10 . then using the fact that @xmath251=su(2)$ ] it will follow that also @xmath243 and @xmath244 generate a dense set in @xmath10 .",
    "let @xmath252 be the group that is generated by @xmath253 .",
    "we first use the fact that @xmath254 is infinite as long as @xmath255 and @xmath256 .",
    "this fact was proved by jones in 1983 and appears in theorem 5.1 page 262 in ref @xcite .",
    "the proof uses the canonical homomorphism between @xmath10 and @xmath257 and the well - known classification of all the finite subgroups of @xmath257 .    to approximate any element in @xmath10 to within an @xmath46 , we pick two matrices in @xmath258 such that @xmath259 ( we can do that since @xmath254 has an infinite number of elements and @xmath10 is compact ) , and set @xmath260 .",
    "then @xmath261 , and consequently , if @xmath262 are the eigenvalues of @xmath263 then @xmath264 .",
    "in addition , @xmath263 must be non - commuting with at least one of the matrices @xmath243 or @xmath244 which we shall denote by @xmath96 .",
    "let @xmath161 be the diagonalizing matrix of @xmath263 : @xmath265 , and define the two continuous families of matrices @xmath266 then it is easy to see that any matrix @xmath267 can be presented as the product @xmath268 for a suitable choice of @xmath269 ( see , for example , kitaev @xcite ) .",
    "but since @xmath270 then any member in the families @xmath271 can be approximated by multiplications of @xmath263 and @xmath272 up to a distance of @xmath273 , and therefore the multiple @xmath268 can be approximated to within @xmath46 .    next ,",
    "consider what happens when we are also allowed to act with @xmath274 .",
    "looking at table  [ tab : blocks ] we see that the resulting operators are block - diagonal with respect to the blocks @xmath275 , @xmath276 , @xmath277 , @xmath278 , @xmath279 .",
    "obviously , we can still approximate any @xmath10 matrix in the @xmath226 blocks .",
    "the next lemma provides a way to increase the dimensionality of the space on which we have density , in the following way : suppose we have a set of operators that is dense on @xmath280 and on @xmath281 , for two orthogonal subspaces @xmath282 .",
    "suppose , in addition , that we have a unitary operator @xmath283 on @xmath284 that mixes these two spaces .",
    "specifically , we demand that there exists a vector @xmath285 such that @xmath286 has some non - zero projection on @xmath55 .",
    "we call such transformation a _ bridge between a and b_. then using this bridge , together with the density on @xmath54 and @xmath55 , we have density in @xmath287 .",
    "[ thm : mix ] consider a linear space @xmath288 which is a direct sum of two orthogonal subspaces @xmath54 and @xmath55 , and assume that @xmath289 .",
    "let @xmath283 be a bridge transformation between @xmath54 and @xmath55 in the sense that was defined above .",
    "then any @xmath290 can be approximated to an arbitrary precision using a finite sequence of transformations from @xmath280 , @xmath281 and @xmath283 .",
    "consequently , the group generated by @xmath280 , @xmath281 and @xmath283 is dense in @xmath291 .    _",
    "proof : _ given in section [ sec : tools ] .",
    "the bridge lemma implies that it is also possible to approximate any @xmath292 matrix in the @xmath293 blocks . as an example , consider the @xmath277 block . from theorem  [ thm : seed ]",
    "we already know that we are able to approximate any @xmath10 transformation on the @xmath294 block , and by definition , we also have density on the block @xmath295 because it is one dimensional .",
    "we may therefore take the transformation @xmath274 as a bridge between these two subspaces since , for example , it takes the path @xmath296 into a superposition of @xmath296 and @xmath297 .",
    "lemma  [ thm : mix ] therefore guarantees that together they can approximate every transformation in @xmath292 .    in the above reasoning",
    "there are two small cavities that are worth mentioning , since they will appear in the rest of the proof .",
    "firstly , the mixing transformation @xmath274 is in @xmath298 rather than in @xmath292 .",
    "this , however , is not a real problem , as we can always consider the transformation @xmath299 with @xmath300 some phase that fixes @xmath301 in @xmath292 .",
    "then @xmath302 is dense in @xmath292 , and since @xmath303 = su(n)$ ] then also @xmath304 $ ] is dense in @xmath292 .",
    "but the last group is equal to @xmath305 $ ] since the group bracket cancels out the phase @xmath300 and therefore also @xmath306 is dense in @xmath292 .    secondly , we know we can _ approximate _ any transformation in @xmath10 while lemma  [ thm : mix ] assumes that we can get any transformation in @xmath10 precisely .",
    "but since the approximation is made of a _ finite _ product of operators , all of which can be approximated as accurately as desired by @xmath307 , it follows that we can also approximate any transformation in @xmath292 to any desired accuracy .",
    "naturally , the next step is to consider what happens when we are also allowed to act with @xmath308 . from table  [",
    "tab : blocks ] we see that resulting transformations will be invariant under the subspaces @xmath309 , @xmath310 , @xmath311 , that together make up the entire 14-dimensional subspace .",
    "we can use lemma  [ thm : mix ] again to learn that we can approximate any @xmath45 transformation in the @xmath312 block .",
    "but what about the two other , five - dimensional blocks",
    "? there we can not use lemma  [ thm : mix ] directly . to understand",
    "why this is so , consider , for example , the subspace @xmath309 .",
    "we know that using @xmath307 we can approximate any @xmath10 transformation on the @xmath275 block and any @xmath292 transformation on the @xmath277 block .",
    "we also know that that @xmath308 bridges these two blocks",
    ". however , to use lemma  [ thm : mix ] we must be able to approximate the @xmath10 transformations independently of the @xmath292 transformation .",
    "in other words , we must be able to approximate an @xmath10 transformation on the subspace @xmath275 , while leaving the subspace @xmath277 invariant and vice verse .",
    "but this is not a priori true since the transformations on @xmath275 are generated by some sequence of the operators @xmath313 , which _ simultaneously _ generates some transformation on @xmath277 .",
    "luckily , we can use the fact that the dimensionality of the two subspaces is different in order to prove that such decoupling is possible :    [ thm : decouple ] let @xmath254 be an infinite discrete group , and let @xmath54 , @xmath55 be two finite linear spaces with different dimensionality .",
    "let @xmath314 and @xmath315 be two homomorphisms of @xmath254 into @xmath280 and @xmath281 respectively and assume that @xmath316 is dense in @xmath280 and @xmath317 is dense in @xmath281 . then for any @xmath318 there exist a series @xmath319 in @xmath254 such that @xmath320 and vice verse .",
    "_ proof : _ given in sec .",
    "[ sec : tools ] .",
    "it is therefore clear that we are able to approximate any @xmath321 transformation on the @xmath322 and @xmath323 blocks . using @xmath324 we can now mix the @xmath310 subspace with the @xmath312 subspace , and using the fact that their dimensionality is different , together with lemmas  [ thm : mix ] ,  [ thm : decouple ] - we are guaranteed that we can approximate any @xmath325 transformation on the combined @xmath326-dimensional subspace .",
    "finally , by using @xmath327 , we mix the five - dimensional block @xmath322 with the nine - dimensional block from above - thereby approximating any transformation in @xmath44 .",
    "this completes the density proof .",
    "in this section we prove the central result of this paper .",
    "we prove a stronger version of theorem  [ thm : const - k ] , in which @xmath0 is allowed to depend polynomially on @xmath15 :    [ thm : poly - k ] let @xmath328 be some polynomial , and let @xmath74 be a braid with @xmath137 crossings , and @xmath34 its plat closure .",
    "finally , let @xmath138 be its jones polynomial at @xmath136 with @xmath329 , and define @xmath24 as . then given the promise that either @xmath330 or @xmath140 , it is @xmath3-hard to decide between the two .",
    "looking at the proof of theorem  [ thm : const - k ] , it is readily evident that the only obstacle that prevents it to prove also this case is the fact that we do not know how theorem  [ thm : main ] depends on @xmath0 .",
    "specifically , we do not know the dependence of the running time as well as the length of the resultant braid on @xmath0 .    it is therefore easy to see , that the following stronger version of theorem  [ thm : const - k ] , in which both running time and braid length are polynomial in @xmath0 would be enough to prove theorem  [ thm : poly - k ] :    [ thm : main - poly - k ]    let @xmath30 , @xmath31 , and let @xmath190 be an encoded two - qubit quantum gate , and @xmath191 . then there exists a braid @xmath187 , consisting of @xmath331 generators of @xmath172 , such that for every @xmath185 , @xmath193 that can be found in @xmath331 time .",
    "indeed it is very easy to see that the very same proof of theorem  [ thm : const - k ] , but with theorem  [ thm : main ] replaced by the above theorem with @xmath58 , proves theorem  [ thm : poly - k ] .",
    "the rest of the section , would therefore be devoted to proving theorem  [ thm : main - poly - k ] .",
    "as in the proof of theorem  [ thm : main ] , our main mathematical tool is the solovay - kitaev theorem .",
    "we would like to use the fact that for @xmath332 , the generators @xmath216 form a dense subset of @xmath44 , and then use the solovay - kitaev algorithm to efficiently generate a @xmath218-approximation for any given gate .",
    "there is a problem , however , with this simplistic approach .",
    "the solovay - kitaev algorithm contains an initial step , where an @xmath46-net is constructed ; this is a finite set of operators that is generated by @xmath216 and has the property that every operator in @xmath44 is closer than @xmath46 to at least one of the elements of the net .",
    "@xmath46 is a finite constant which is unrelated to the target accuracy @xmath218 , and whose actual value is of the order @xmath333 ( see , for example , ref @xcite ) .",
    "the existence of such a net is guaranteed since we know that @xmath216 generate a dense set in @xmath44 ; its construction time , however , depends on the generators . for a fixed set of generators ,",
    "this is not a problem ; the construction time becomes a constant .",
    "however , the situation becomes more tricky when @xmath0 is no longer fixed .",
    "the operators @xmath216 become @xmath0-dependent , and we can no longer treat the @xmath46-net construction as a constant step . its complexity must be taken into account . the question is therefore whether we can still guarantee that the overall computational cost is polynomial in @xmath0 and in @xmath334 ?",
    "the answer is positive ; this is what will be proved in this section .",
    "the main observation is that the generators @xmath216 do not behave randomly , but rather converge nicely to a @xmath335 limit .",
    "the idea of how to make use of this fact was explained in the introduction ; essentially , the idea is that as @xmath0 becomes larger and larger , the generators @xmath216 do not behave randomly , but rather converge nicely to a @xmath335 limit .",
    "their dependence on @xmath0 is simple enough so that we can easily approximate @xmath49 generators , by products of @xmath0 generators for @xmath0 which are multiplicatives of @xmath49 .",
    "therefore we can construct an @xmath46-net at some large enough yet constant @xmath49 , and approximate each element in the net by products of high-@xmath0 generators , thereby efficiently obtaining an @xmath46-net for high @xmath0s .",
    "we now provide the details .",
    "let us therefore begin by considering the @xmath47 limit of the @xmath80 operators . from sec .",
    "[ sec : analyze ] , we recall that in the standard basis these operators decompose into @xmath336 or @xmath226 blocks .",
    "the diagonalizing matrix of the @xmath226 blocks is @xmath337 , given by , and the eigenvalues are @xmath338-independent , given by @xmath339 ( see ) . here , and in what follows , we explicitly added the subscript @xmath0 to @xmath340 to indicate its dependence on @xmath0 .",
    "notice that up to an overall factor of @xmath225 , the eigenvalues of the generators are @xmath341 .",
    "so we can express the eigenvalues of low @xmath0 s as products of eigenvalues of high @xmath0 s .",
    "however , this is still not enough , as we want the low @xmath0 generators themselves to be approximated by products of high @xmath0 generators .",
    "luckily , we notice that the diagonalizing matrix @xmath337 converges nicely to @xmath342 as @xmath47 .",
    "@xmath343 we can therefore define an auxiliary low-@xmath0 generators by taking the @xmath47 diagonalizing matrix @xmath342 together with the eigenvalues at some low @xmath49 .",
    "then for high - enough @xmath0 s , for which @xmath337 is close enough to @xmath342 , we can approximate the auxiliary generators by powers of @xmath344 .    specifically , we set @xmath345 , and in accordance with , we define the following set of 7 auxiliary generators : @xmath346_{2\\times 2 }        = a^{-1}\\cdot          m_\\infty(z_i){\\left(\\begin{array}{cc}-\\exp(-2i\\pi / k_0 ) & 0 \\\\ 0 & 1\\end{array}\\right)}m_\\infty^\\dagger(z_i ) \\ .\\ ] ] it is easy to see that the auxiliary operators generate a dense set in @xmath44 . indeed , the density proof in sec .",
    "[ sec : density ] remains valid since it only relies on the eigenvalues of the generating operators and on the fact that for @xmath347 , @xmath337 mixes the two standard basis vectors .",
    "we will thus generate an @xmath46-net from @xmath348 and use it to generate the @xmath46-net of @xmath349 for high @xmath0 s .",
    "this is proved in the following lemma :    let @xmath350 be an @xmath351-net , generated from @xmath348 , and assume without loss of generality that each element in @xmath350 is a group commutator ( this is possible since @xmath44 is a simple lie - group and therefore @xmath352=su(14)$ ] ) .",
    "then for large enough @xmath0 , it is possible to generate an @xmath46-net @xmath353 by replacing every occurrence of @xmath354 in @xmath350 by @xmath355 , where @xmath349 are the generators at @xmath0 , and @xmath356 .",
    "let @xmath75 be the maximal number of generators that are needed to construct an element in @xmath350 .",
    "we wish to be able to approximate any @xmath357 up to at least @xmath358 using @xmath80 .",
    "the first thing we take care of is that @xmath337 will be close enough to @xmath342 .",
    "we therefore pick an integer @xmath359 such that for any @xmath360 , @xmath361 .",
    "next , we must find a @xmath362 such that for any @xmath363 , the eigenvalues of @xmath355 will be close enough to @xmath354 , for some yet to be determined @xmath18 .",
    "this is more conveniently done by defining @xmath364 ^ 2 \\ , \\ ] ] and approximating the operators @xmath365 with @xmath366 . in the end , the factors @xmath367 , @xmath368 will cancel out when we plug these operators to the group commutator of each element in @xmath350 .",
    "the logic behind these definitions is that these factors cause one of the eigenvalues of both @xmath365 and @xmath366 to be exactly one ( see ) , and therefore we only have to match the remaining eigenvalues .",
    "indeed , the non - trivial eigenvalue of @xmath365 is @xmath369 , whereas the non - trivial eigenvalue of @xmath366 is @xmath370 .",
    "we therefore define @xmath371 and let @xmath362 be such that for every @xmath363 @xmath372 it is easy to see that it is enough to choose @xmath362 ( larger than @xmath49 ) for which @xmath373 .",
    "assume then that @xmath374 and let us estimate the distance between @xmath365 and @xmath375 .",
    "this is the maximal distance between the corresponding blocks in the standard basis . in the @xmath336 blocks both operators have an eigenvalue @xmath25 and",
    "therefore the distance is zero . in the @xmath226 blocks we have @xmath376_{2\\times 2 } & = & m_\\infty^{-1}(z )         { \\left(\\begin{array}{cc}e^{-i\\pi(2+k_0)/k_0 } & 0",
    "\\\\ 0 & 1\\end{array}\\right)}m_\\infty(z ) \\ , \\\\          { [ } q^m]_{2\\times 2 } & = & v^{-1}(z )         { \\left(\\begin{array}{cc}e^{-4m\\pi i / k } & 0 \\\\ 0 & 1\\end{array}\\right)}v(z ) \\ ,      \\end{aligned}\\ ] ] and consequently @xmath377_{2\\times 2 } \\| } } & \\le          { { \\| m^{-1}_\\infty(z)-m^{-1}(z ) \\| } }            + \\left| e^{-i\\pi(2+k_0)/k_0 } - e^{-4m\\pi",
    "i / k}\\right| \\nonumber \\\\           & + { { \\| m_\\infty(z)-m(z ) \\| } } \\le \\epsilon/(2d ) \\ .",
    "\\end{aligned}\\ ] ]    let us now return to the @xmath350-net and create the @xmath353 net .",
    "any element in @xmath350 is a commutator of products of @xmath354 , and therefore remains unchanged if we replace @xmath378 , because the phase factors cancel out in the commutator .",
    "the distance of this product from a product in which we replace @xmath379 is smaller than @xmath351 since @xmath380 and we have at most @xmath75 terms in the product .",
    "the @xmath375 s product is unchanged upon the replacement @xmath381 ( again , the phase factors cancel out ) , and this results in the @xmath353 net .",
    "hence any element in @xmath350 can be efficiently approximated up to a distance @xmath351 by an element of @xmath353 .",
    "it follows that @xmath353 is an @xmath46-net .",
    "it follows that we can create an @xmath46-net from the operators @xmath80 , and because @xmath382 , the number of steps that are needed to create this net is bounded by @xmath383 . the next step would be the application of the solovay - kitaev algorithm to approximate any transformation @xmath240 up to an error @xmath218 - and so the overall computational cost is bounded by @xmath384 as required .",
    "we provide here the proofs of the bridge lemma and the decoupling lemma . for convenience , we restate the lemmas .        given two orthogonal subspaces @xmath54 and @xmath55 , a unitary operator @xmath283 on @xmath284 is said to be a _ bridge between a and b _ if there exists a vector @xmath285 such that @xmath286 has some non - zero projection on @xmath55 .",
    "note that this notion is symmetric , since the existence of such a vector implies the existence of @xmath385 such that @xmath286 has a non - zero projection on @xmath54 , by unitarity .",
    "we sometimes say that such a transformation _ mixes _ the two subspaces .",
    "* lemma  [ thm : mix ] ( the bridge lemma ) * consider a linear space @xmath288 which is a direct sum of two orthogonal subspaces @xmath54 and @xmath55 , and assume that @xmath386 .",
    "let @xmath283 be a bridge transformation between @xmath54 and @xmath55",
    ". then any @xmath387 can be approximated to an arbitrary precision using a finite sequence of transformations from @xmath280 , @xmath281 and @xmath283 .",
    "consequently , the group generated by @xmath280 , @xmath281 and @xmath283 is dense in @xmath291 . to prove lemma  [ thm : mix ] we first need to prove the following two lemmas :    [ lem : a ] consider a linear space @xmath288 that is a direct sum of two subspaces @xmath54 and @xmath55 such that @xmath386 , and let @xmath388 be a bridge transformation that mixes the two subspaces .",
    "then for every pair of normalized vectors @xmath389 , we can approximate a transformation @xmath390 such that @xmath391 , to any desired accuracy using a finite product of transformations from @xmath280 , @xmath281 and @xmath283 .    instead of approximating the transformation @xmath392 for any two vectors @xmath393",
    ", we will approximate a transformation @xmath394 that transforms a particular vector @xmath395 to an arbitrary vector @xmath396 .",
    "then , @xmath397 .",
    "we begin by finding a vector @xmath398 for which @xmath399 .",
    "such vector must exist since @xmath400 .",
    "indeed , let @xmath401 be a basis of @xmath55 .",
    "then @xmath402 , with @xmath403 and @xmath404 .",
    "then since @xmath405 , the @xmath406 vectors are linearly dependent and we can find a non - trivial linear combination such that @xmath407 . then the vector @xmath408 is in b and @xmath409 has no projection on a.    next , we pick a vector @xmath410 for which @xmath411 has some projection on b. such vector must exist since @xmath283 is a bridge transformation between @xmath54 and @xmath55 .",
    "we write , @xmath412 with @xmath285 , @xmath413 and @xmath414 .",
    "if @xmath415 , we find a transformation @xmath318 that takes @xmath416 to @xmath417 , and define @xmath418 , otherwise , we set @xmath419 .",
    "we have thus constructed a transformation @xmath420 for which @xmath421 and @xmath422 for some @xmath423 .",
    "now let @xmath424 be an arbitrary vector , with @xmath425 and @xmath426 .",
    "we will now apply a series of unitary operations that will take @xmath396 closer and closer to @xmath395 .",
    "we start by moving @xmath427 to @xmath417 and @xmath428 to @xmath395 using transformations from @xmath280 and @xmath281 respectively , yielding the vector @xmath429 . using @xmath420",
    "we obtain @xmath430 as @xmath431 , we can now apply a transformation from @xmath281 that takes @xmath432 to @xmath433 . here",
    "@xmath434 is the norm of @xmath435 .",
    "we obtain @xmath436 comparing @xmath437 to @xmath438 , we see that we managed to move some of the weight from @xmath417 to @xmath395 because @xmath439 and both vectors are normalized ( we only used unitary transformations )",
    ".    we now iterate this process : we get @xmath440 by applying the @xmath441 transformation on @xmath437 , and obtain @xmath442 by moving the @xmath55 part of @xmath443 to @xmath395 .",
    "after @xmath15 such iterations we obtain @xmath444 and since @xmath439 it is obvious that we exponentially converge to @xmath395 , and in particular we can approximate @xmath445 ( and hence @xmath392 ) to any desired accuracy using a finite number of transformations .    to continue",
    ", we need to be able to move a vector from subspace @xmath54 to subspace b without affecting the rest of the vectors in subspace @xmath54 .",
    "the following lemma guarantees that this is possible .",
    "[ lem : b ] under the same conditions of lemma  [ lem : a ] , let @xmath446 be an orthonormal basis of @xmath54 and @xmath447 be an orthonormal basis of @xmath55 . then using a finite product of transformations from @xmath448 and the bridge @xmath283 between @xmath54 and @xmath55 , it is possible to approximate to any accuracy a transformation @xmath96 that moves @xmath449 to @xmath450 , while leaving the vectors @xmath451 unchanged .    for @xmath452 ,",
    "the problem is trivial since we can simply use lemma  [ lem : a ] .",
    "assume then that @xmath453 , and define the subspaces @xmath454 and @xmath455 .",
    "by lemma  [ lem : a ] we can approximate a transformation @xmath456 that takes @xmath457 to @xmath450 .",
    "consider now all the operators of the form @xmath458 with @xmath459 and @xmath460 .",
    "clearly , @xmath283 takes @xmath457 to itself - and therefore leaves invariant the subspace @xmath461 .",
    "we claim that there is at least one such transformation , @xmath462 , that also mixes the subspaces @xmath463 and @xmath55 .",
    "if this is indeed the case , then we can repeat the argument for the subspaces @xmath463 and @xmath55 , which together with the particular transformation @xmath462 satisfy the conditions of lemma  [ lem : a ] .",
    "consequently , we find a transformation @xmath464 that takes @xmath465 to @xmath450 while leaving @xmath457 unchanged and mixing the space that is spanned by @xmath466 with @xmath55 .",
    "repeating this again and again , we are left in the end with a transformation @xmath467 that transforms @xmath449 to @xmath450 and is the identity over @xmath468 .",
    "since this recursion has only @xmath15 steps , it is clear that at any step we can approximate the mixing transformation @xmath469 to any desired accuracy using a finite product of operators from @xmath280 , @xmath281 and @xmath283 .",
    "let us now see why @xmath462 must exist .",
    "indeed , if no such transformation exists , then for every two operators @xmath318 and @xmath460 there is no mixing between the subspaces @xmath463 and @xmath55 , and therefore there must exist operators @xmath470 and @xmath471 such that @xmath472 then , for every @xmath285 and @xmath413 , @xmath473 which implies that for every @xmath318 and @xmath460 , @xmath474 notice that this equation holds also when we take one of the operators , @xmath161 or @xmath475 , to be the identity .",
    "we will use this to show that @xmath476 - in contradiction with the fact that @xmath477 .",
    "we first deduce that @xmath478 . to do this",
    "we show that for all @xmath479 , @xmath480 has no projection on @xmath55 .",
    "we already know @xmath480 has zero projection on @xmath450 ( since @xmath449 moves to @xmath450 ) , so it suffices to show that @xmath480 has no projection on @xmath481 .    indeed , by it would suffice to show that @xmath482 can be made to be an arbitrary vector in @xmath481 .",
    "this follows from the following reasoning . by the same argument as in the proof of lemma  [ lem : a ] there must be a vector @xmath398 such that @xmath483 .",
    "moreover , @xmath484 must be in @xmath481 since @xmath485 since @xmath486 , using an arbitrary @xmath487 , @xmath488 can be made to be any vector in @xmath481 .",
    "now pick any @xmath489 .",
    "then @xmath490 , and therefore with an arbitrary transformation @xmath318 , @xmath491 can be made to be an arbitrary vector in @xmath54 .",
    "but since for every @xmath413 we have @xmath492 then @xmath493 has no projection on @xmath54 and consequently , @xmath494 . but",
    "then since @xmath456 is unitary it follows that @xmath476 - which is the contradiction we were seeking .",
    "let us show how to approximate an arbitrary @xmath500 , given @xmath281 , @xmath280 , and @xmath283 . from lemma  [ lem : b ] we can use @xmath501 and @xmath283 to approximate a transformation @xmath96 that takes @xmath449 to @xmath450 while leaving the rest of the vectors in @xmath54 intact .",
    "therefore @xmath502 .",
    "now pick an eigenvector @xmath503 of @xmath161 with an eigenvalue @xmath504 . using lemma  [ lem :",
    "a ] with respect to the subspaces @xmath505 and the mixing transformation @xmath96 , we can approximate a transformation @xmath506 that takes @xmath396 to @xmath449 .",
    "we first show how to approximate the transformation @xmath507 .",
    "we notice that @xmath508 has @xmath449 as an eigenvector with an eigenvalue @xmath504 .",
    "consequently , @xmath508 leaves the subspace @xmath55 invariant .",
    "let @xmath509 be the transformation in @xmath281 that satisfies @xmath510 , @xmath511 , and leaves the rest of the basis vectors unchanged . recalling that @xmath96 takes @xmath449 to @xmath450",
    ", we see that @xmath512 has @xmath449 as an eigenvector with eigenvalue @xmath504 and leaves the subspace @xmath55 invariant .",
    "so the only difference between @xmath508 and @xmath512 is some transformation @xmath513 , and therefore @xmath514 and consequently , @xmath515    now that we have generated all transformations in @xmath516 , we can generate @xmath517 using the very same procedure - except now @xmath518 plays the role of @xmath55 and @xmath519 plays the role of @xmath449 . in the same method",
    "we can work our way all up to @xmath520 .        * lemma  [ thm : decouple ] ( the decoupling lemma ) * let @xmath254 be an infinite discrete group , and let @xmath54 , @xmath55 be two finite linear spaces with different dimensionality .",
    "let @xmath314 and @xmath315 be two homomorphisms of @xmath254 into @xmath280 and @xmath281 respectively and assume that @xmath316 is dense in @xmath280 and @xmath317 is dense in @xmath281 .",
    "then for any @xmath318 there exist a series @xmath319 in @xmath254 such that @xmath320 and vice verse .      to do that , we first observe that both @xmath526 and @xmath527 are normal subgroups .",
    "it is also straightforward to see that they are closed .",
    "consider , for example , @xmath526 in @xmath280 : assume that @xmath528 in @xmath526 converges to @xmath318 .",
    "then there exist series @xmath529 such that @xmath530 without loss of generality , we may choose the series such that for every @xmath531 , @xmath532 then the series @xmath533 , and we are guaranteed that @xmath534 .",
    "now , any non - trivial normal subgroup of @xmath535 must be finite is a simple group , and @xmath536 - the center of @xmath535 - is finite .",
    "see for example theorem @xmath537 , at page 108 of ref  @xcite ] .",
    "therefore if we show that @xmath526 and @xmath527 are infinite it will follow that @xmath538 and @xmath525 . to do that ,",
    "we first show that there is an isomorphism of groups @xmath539 ( a @xmath540 and onto mapping which preserves the action of the group ) between the coset groups @xmath541 and @xmath542 .",
    "we define @xmath539 as follows : @xmath543 if there exists a series @xmath319 such that @xmath544 we first need to show that this function is well defined for all cosets @xmath545 .",
    "this follows from :    * for each coset @xmath545 , there exists at least one series that satisfies the requirements of the definition of @xmath539 .",
    "indeed , pick a series @xmath319 such that @xmath546 . then the series @xmath547 in @xmath281 must have a limiting point since @xmath281 is compact .",
    "therefore there exists a sub - series @xmath548 such that @xmath549 and @xmath550 .",
    "we have @xmath543 * @xmath551 is defined uniquely .",
    "indeed , assume there exist two series @xmath552 and @xmath553 such that @xmath554 with @xmath508 and @xmath555 in the coset @xmath545 .",
    "we will show that @xmath509 and @xmath556 must be in the same coset of @xmath527 .",
    "denote @xmath557 . since @xmath526 is normal",
    ", @xmath24 is in @xmath526 and we may therefore find a series @xmath558 such that @xmath559 then looking at the series @xmath560 , we find that @xmath561 therefore @xmath562 , and so @xmath563 .    it remains to show that @xmath539 is @xmath540 , onto , and preserves the action of the group .",
    "the onto part follows if we start with a series that converges to some @xmath564 in @xmath565 and apply the same reasoning as in the first item above .",
    "the @xmath540 part follows if we apply the same reasoning as in the second point above , starting with the @xmath566 in the same coset instead of the opposite direction .",
    "the fact that @xmath539 is a homomorphism follows from the fact that @xmath567 is a representation .",
    "the first and second cases are impossible since , for example , if @xmath526 is finite and @xmath525 then @xmath542 has only one coset while @xmath541 has infinitely many - and thus they can not be related by a @xmath540 onto map .",
    "let us now see why the third case is also impossible . to do this , we will show that @xmath539 is a continuous map .",
    "indeed , assume that @xmath568 ( here , convergence means that for some representatives of the cosets we have @xmath569 .",
    "it is easy to check that this is well defined ) .",
    "then let @xmath570 , @xmath543 .",
    "we will show that @xmath571 .",
    "the proof is straightforward , similarly to the proof that @xmath526 is closed .",
    "pick pick a series of series @xmath572 such that @xmath573 and without any loss of generality we assume that @xmath574 then since @xmath575 , we have @xmath576 , and since @xmath543 we can find a sub - series @xmath577 that converges to some @xmath578 . in order not to overload the notation ,",
    "let us re - define @xmath0 to be that sub - series .",
    "we now claim @xmath579 . indeed , for each @xmath195 , we can choose @xmath580 such that for each @xmath581 , @xmath582 and @xmath583 .",
    "then @xmath584    now @xmath526 and @xmath527 are closed normal subgroups , and therefore @xmath541 and @xmath542 are lie groups themselves ( see for example , theorem 3.64 , pp 124 , in @xcite ) .",
    "furthermore , since every continuous homomorphism between lie groups is also smooth ( see for example , theorem 3.39 , pp 109 , in @xcite ) , we have found a smooth diffeomorphism ( @xmath540 homeomorphism ) between two differentiable manifolds . however , since both @xmath526 and @xmath527 are finite then @xmath585 and it is therefore impossible to find a diffeomorphism between the two manifolds .",
    "alagic , g. and jordan , s.  p. and knig , r. and reichardt , b.  w. , `` _ _ estimating turaev - viro three - manifold invariants is universal for quantum computation _ _ '' , phys .",
    "a 82 , 040302(r ) ( 2010 ) , ` ref : arxiv:1003.0923 `          bacon , d. and kempe , j. and divincenzo , d.  p. and lidar , d. a. and whaley , k. b , `` _ _ encoded universality in physical implementations of a quantum computer _ _ '' , proc . of the 1st international conference on experimental implementations of quantum computation , sydney , australia , edited by r. clark ( rinton , princeton , nj , 2001 ) , pp .",
    "257 , ` arxiv : quant - ph/0102140 `    bernstein e. and vazirani u. , quantum complexity theory , proceedings of symposium on the theory of computing ( stoc 1993 ) , 1993 .",
    "journal version : special issue on quantum computation of the siam journal of computing , oct .",
    "1997 .",
    "freedman  m.  h. , kitaev  a. , larsen  m. , wang  z. , _ topological quantum computation .",
    "mathematical challenges of the 21st century _",
    "( los angeles , ca , 2000 ) .",
    "1 , pp . 3138 , ( 2003 )                              temperley , h.  n.  v. and lieb , e.  h. , `` _ _ relations between the percolation and colouring problem and other graph - theoretical problems associated with regular planar lattices : some exact results for the ` precolation ' problem__'' , in proceedings of the royal society of london . series a , * 322 * , pp 251280 , ( 1971 )"
  ],
  "abstract_text": [
    "<S> a celebrated important result due to freedman , larsen and wang @xcite states that providing additive approximations of the jones polynomial at the @xmath0th root of unity , for constant @xmath1 and @xmath2 , is @xmath3-hard . </S>",
    "<S> together with the algorithmic results of @xcite , this gives perhaps the most natural @xmath3-complete problem known today and motivates further study of the topic . in this paper </S>",
    "<S> we focus on the universality proof ; we extend the result of @xcite to @xmath0 s that grow polynomially with the number of strands and crossings in the link , thus extending the @xmath3-hardness of jones polynomial approximations to all values for which the ajl algorithm applies @xcite , proving that for all those values , the problems are @xmath3-complete . as a side benefit , </S>",
    "<S> we derive a fairly elementary proof of the freedman _ </S>",
    "<S> et al . </S>",
    "<S> _ density result @xcite , without referring to advanced results from lie algebra representation theory , making this important result accessible to computer science audience . we make use of two general lemmas we prove , the _ bridge lemma _ and the _ decoupling lemma _ , which provide tools for establishing density of subgroups in @xmath4 . </S>",
    "<S> those tools seem to be of independent interest in more general contexts of proving quantum universality . </S>",
    "<S> our result also implies a completely classical statement , that the _ multiplicative _ approximations of the jones polynomial , at exactly the same values , are @xmath5-hard , via a recent result due to kuperberg @xcite . since the first publication of those results in their preliminary form @xcite , the methods we present here were used in several other contexts @xcite </S>",
    "<S> this paper is an improved and extended version of the results presented in @xcite , and also includes discussions of the developments since then .    </S>",
    "<S> [ section ] [ section ] [ section ] [ section ] [ section ] [ section ] [ section ] [ section ] [ section ] [ section ] [ section ] [ section ] [ section ] </S>"
  ]
}
{
  "article_text": [
    "mathematical discovery has long been informed by experimentation and computation .",
    "understanding key examples is typically the first step towards formulating theorems and devising proofs .",
    "the computer age enables many more potentially intricate examples to be studied than ever before .",
    "sometimes , this leads to a fruitful dialog between theory and experiment .",
    "other times , this work leads serendipitously to new ideas and theorems .",
    "many examples are described in the books  @xcite .",
    "we believe there is much greater potential for computer - aided experimentation than what has been achieved .",
    "this is particularly true for scientific discovery , using advanced computing to study subtle phenomena and amass evidence for the mathematical facts which will become the theorems of tomorrow .",
    "currently , much computer experimentation is ( often appropriately ) on a fairly small scale .",
    "a notable exception is odlyzko s study  @xcite ( using cray supercomputers ) of the zeroes of riemann s @xmath0-function on the critical line @xmath1 , which led to a rich data set that has stimulated much intriguing mathematics  @xcite .",
    "a different large scale use of computers is the great internet mersenne prime search ( gimps )  @xcite , which searches for primes of the form @xmath2 for @xmath3 a prime , such as @xmath4 , and @xmath5 .",
    "volunteers run software on otherwise idle computers to search for mersenne primes .",
    "this project has found the largest known primes since it started in 1996 .",
    "daily , it uses over 60 gigahertz - years of computation .",
    "gimps is a mathematical analog of big - science physics .",
    "we feel there is more scope for such investigations in mathematics .",
    "we describe our use of a supercomputer to study a conjecture in the real schubert calculus , which may serve as a model for research in mathematics based on computational experiments . rather than odlyzko s cray supercomputers , or gimps s thousands of volunteers ,",
    "we use more pedestrian computer resources that are available to many mathematics departments together with modern ( and free ) software tools such as perl  @xcite , mysql  @xcite , and php  @xcite , as well as freely available mathematical software such as singular  @xcite , macaulay 2  @xcite , and sage  @xcite .",
    "this is a methods paper whose purpose is to explain the framework we developed .",
    "we do not present mathematical conclusions from this ongoing computational experiment , but instead explain how you , the reader , can take advantage of readily available yet often underutilized computer resources to employ in your mathematical research .",
    "to get an idea of the available resources , in its first six months of data acquisition , this experiment used over 350 gigahertz - years of computing primarily on 191 computers in instructional labs that are maintained by the department of mathematics at texas a&m university  @xcite . when the labs are not in use , the machines become a cluster computing resource that provides over 500 computational cores for a peak performance of 1.971 teraflops with 296 gb of total memory .",
    "this experiment uses a supercomputer moonlighting from its day job of calculus instruction .",
    "the authors of this note include johnson , who configured the labs as a beowulf cluster , enabling their use for this computation .",
    "our software was written and maintained by the remaining authors , who include current and former postdocs and students working with sottile .",
    "we are organized into a vertically - integrated team where the senior members work with and mentor the junior members .",
    "the overall software design and much of its implementation is due to hillar .",
    "a key feature of this experiment is its robustness  it can and has recovered from many faults , including emergency system shutdown , database erasure , inexplicable computer malfunction , as well as day - to - day network failures .",
    "it is also repeatable , using a pseudorandom number generator with fixed seeds .",
    "this repeatability will allow us to rerun a large segment of our calculations on a different supercomputer  @xcite using different mathematical software than the initial run .",
    "this will be an unprecedented test of the efficacy of different implementations of our basic mathematical algorithms of grbner basis computation and real root counting .",
    "this experiment is part of a long - term study of a striking conjecture in the real schubert calculus made by boris shapiro and michael shapiro in 1993 .",
    "this includes two previous large computational experiments  @xcite ( and several smaller ones  @xcite ) , as well as more traditional work  @xcite , including proofs of the shapiro conjecture for grassmannians  @xcite .",
    "this story was the subject of a current events bulletin lecture at the 2009 ams meeting and a forthcoming article in the ams bulletin  @xcite .",
    "this experiment is possible only because we may model the geometric problems we study on a computer , efficiently solve them , record the results , and automate this process .",
    "we describe some background in section  [ sec : shapiro ] and the mathematics of the computations in section  [ s : math ] . in sections  [",
    "s : resources][s : quality ] , we explain the resources ( human , hardware , and software ) we utilized , the architecture of the experiment , how we ran it on a cluster , and the measures that we took to maintain the quality of our data .",
    "we end with some conclusions and remarks .",
    "our goal is to describe the design and execution of a large scale computation , which may serve as a model for other experiments in mathematics .",
    "while many aspects of our experiment are universal , the details are specific to the questions we are studying . we give some mathematical background to provide context .",
    "some solutions to a system of real polynomial equations are real and the rest occur in complex conjugate pairs . while the structure of the equations determines the total number of solutions , the distribution between the two types depends subtly on the coefficients .",
    "surprisingly , sometimes there is additional structure which leads to finer information in terms of upper bounds  @xcite or lower bounds  @xcite on the number of real solutions .",
    "the shapiro conjecture is the extreme situation of having _ only _ real solutions .",
    "we give an example .",
    "set @xmath6 , which is a curve @xmath7 .",
    "we ask for the finitely many lines that meet four tangent lines to @xmath8 , which we take to be tangent at the points @xmath9 for @xmath10 , and some point @xmath11 .",
    "the first three tangents lie on the quadric @xmath12 defined by @xmath13 .",
    "we show this in figure  [ f : tanquad ] , where @xmath14 is the tangent line at the point @xmath9 .",
    "@xmath15{figures / hyperboloid.eps } }     \\put(112,3){\\red{$\\ell(-1)$ } } \\put(274,14){\\red{$\\ell(0)$ } }     \\put(3,117){\\red{$\\ell(1)$ } } \\put(3,93){\\blue{$\\gamma$ } }     \\put(248,120){\\brown{$q$ } }    \\end{picture}\\vspace{-10pt}\\ ] ]    these first three tangents lie on one ruling of @xmath12 and the lines in the other ruling are those meeting them .",
    "lines meeting all four tangents correspond to the ( two ) _ a priori _ complex points where the fourth tangent @xmath16 meets the quadric . as we see in figure",
    "[ f : throat ] , for any @xmath11 , @xmath16 meets the quadric in two real points , giving two real solutions to this instance of the problem of four lines .",
    "@xmath17{figures / shapiro.eps } }     \\put(-14,51){\\red{$\\ell(1)$ } } \\put(200,33){\\red{$\\ell(-1)$ } }      \\put(167,115){\\red{$\\ell(0)$ } }     \\put(129,67){\\brown{$s$ } }     \\put(38,2){\\brown{$q$ } }     \\put(2,33){{\\blue{$\\gamma$ } } } \\put(-9,95){\\forestgreen{$\\ell(s)$ } }    \\end{picture}\\vspace{-10pt}\\ ] ]    the schubert calculus  @xcite asks for the linear spaces that have specified positions with respect to other , fixed ( flags of ) linear spaces .",
    "for example , what are the 3-planes in @xmath18 meeting 12 given 4-planes non - trivially ?",
    "( there are 462  @xcite . )",
    "the specified positions are a , for example , the schubert problem of lines meeting four lines in 3-space .",
    "the fixed linear spaces imposing the conditions give an of the schubert problem , so that the lines @xmath19 , @xmath20 , @xmath21 , and @xmath16 give an instance of the problem of four lines .",
    "the number of solutions depends upon the schubert problem , while the solutions depend upon the instance .",
    "the shapiro conjecture begins with a rational normal curve @xmath22 , which is any curve projectively equivalent to the moment curve , @xmath23 in 1993 , boris shapiro and michael shapiro conjectured that if the fixed linear spaces osculate a rational normal curve , then all solutions to the schubert problem are real .",
    "initially , the statement seemed too strong to be possibly true .",
    "this perception changed dramatically after a few computations  @xcite , leading to a systematic study of the conjecture for grassmannians , both theoretical and experimental  @xcite in which about 40,000 instances were computed of 11 different schubert problems .",
    "several extremely large instances were also verified by others  @xcite .",
    "this early study led to a proof of the shapiro conjecture in a limiting sense for grassmannians  @xcite and a related result in the quantum cohomology of grassmannians  @xcite , which drew others to the area .",
    "eremenko and gabrielov  @xcite proved it for grassmannians of codimension 2 subspaces where the shapiro conjecture becomes the statement that a univariate rational function with only real critical points is ( equivalent to ) a quotient of real polynomials .",
    "later , mukhin , tarasov , and varchenko  @xcite used ideas from integrable systems to prove the shapiro conjecture for grassmannians .",
    "they later gave a second proof  @xcite that revealed deep connections between geometry and representation theory .",
    "this story was the subject of a current events bulletin lecture at the january 2009 ams meeting and a forthcoming article in the ams bulletin  @xcite .",
    "the shapiro conjecture makes sense for any flag manifold ( compact rational homogeneous space ) .",
    "early calculations  @xcite supported it for orthogonal grassmannians but found counterexamples for general @xmath24-flag manifolds and lagrangian grassmannians .",
    "calculations suggested modifications in these last two cases  @xcite and limiting versions were proved  @xcite , and the conjecture for the orthogonal grassmannian wasjust proven by purbhoo  @xcite .",
    "the modification for @xmath24-flag manifolds , the , was refined and tested in a computational experiment involving ruffo and sottile  @xcite . that ran on computers at the university of massachusetts , the mathematical sciences research institute , and texas a&m university , using 15.76 gigahertz - years of computing to study over 520 million instances of 1126 different schubert problems on 29 flag manifolds .",
    "over 165 million instances of the monotone conjecture were verified , and the investigation discovered many new and interesting phenomena .    for flags consisting of a codimension 2 plane lying on a hyperplane , the monotone conjecture is a special case of a statement about real rational functions which eremenko , et .",
    "al  @xcite proved .",
    "their work leads to a new conjecture for grassmannians .",
    "a flag is of a curve if every subspace in the flag is spanned by its intersections with @xmath25 .",
    "the asserts that if the flags in a schubert problem on a grassmannian are in that they are secant along disjoint intervals of a rational normal curve , then every solution is real .",
    "it is true for grassmannians of codimension 2 subspaces , by the result of eremenko , et .",
    "consider this for the problem of four lines .",
    "the hyperboloid in figure  [ f : secant ] contains three lines that are secant to @xmath8 along disjoint intervals .",
    "@xmath26{figures / secant.eps } }     \\thicklines     \\put(105,50){$\\gamma$}\\put(115,51){\\vector(2,-1){25 } }     \\put(227,-2){\\vector(0,1){77.8 } }    \\end{picture}\\vspace{-10pt}\\ ] ]    any line secant along the indicated arc ( which is disjoint from the other three intervals ) meets the hyperboloid in two points , giving two real solutions to this instance of the secant conjecture .",
    "we are testing the secant conjecture for many schubert problems on small grassmannians of @xmath27-planes in @xmath28-space .",
    "( see table  [ t : number_problems ] . )",
    ".schubert problems studied on @xmath29 as of 20 may 2009 . [ cols=\"^,^,^,^,^\",options=\"header \" , ]     [ t : sample_table ]    the column with overlap number 0 represents tests of the secant conjecture . since its only entries are in the row for 16 real solutions , the secant conjecture was verified in @xmath30 instances .",
    "the column labeled 1 is empty because flags for this problem can not have overlap number 1 .",
    "the most interesting feature is that for overlap number 2 , all solutions were real , while for overlap numbers 3 , 4 , and 5 , at least 4 of the 16 solutions were real , and only with overlap number 6 and greater does the schubert problem have no real solutions .",
    "this inner border , which indicates that the reality of the schubrt problem does not completely fail when there is small overlap , is found on many of the other problems that we investigated and is a new phenomenon that we do not understand .",
    "creating the software and managing this computation is a large project . to accomplish it , we formed a vertically - integrated team of graduate students and postdoctoral fellows under the direction of a faculty member and used modern software tools ( perl , mysql , php ) to automate the computation as well as store and visualize data .",
    "this software runs on many different computers , but primarily on a supercomputing cluster whose day job is calculus instruction .      the authors of this note include johnson , who created and maintains the supercomputer we use , as well as a research team of current and former graduate students and postdoctoral fellows who have worked with sottile . pooling our knowledge in mathematics and in software development , we shared the work of creating and running this project .",
    "this structure enabled the senior members to mentor and train the junior members .",
    "we modeled our team structure on the working environment in a laboratory .",
    "this led to a division of labor and to other collaborations .",
    "for example , garca - puente and ruffo wrote the mathematical heart of the computation in a singular library .",
    "hillar , who had experience in the software industry , provided the conceptual framework and contributed most of the perl code .",
    "he worked on some of this with martn del campo , who now maintains the php webpages we use to monitor the computation .",
    "sottile and teitler maintain the software and the shell scripts for controlling the computation and ensuring the integrity of the data , and teitler rewrote the library of our main mathematical routines in macaulay 2 .",
    "this project has led to unrelated research collaborations between hillar and martn del campo and between sottile and teitler .",
    "our team includes two more junior members who have not yet contributed code and will soon include an additional postdoc .",
    "the web of collaboration and mentoring is designed to help integrate them into future projects .",
    "all mathematics departments have significant , yet deeply underutilized computing resources available in office desktop computers .",
    "there are sociological problems that can arise , for example , when your colleague has email problems while his computer is running your software .",
    "while these can be overcome , there are often simpler alternatives .",
    "many institutions have some cluster computing resources , and there are regional and national supercomputers available for research use  @xcite . computers in instructional labs",
    "are another resource . with sufficient interest and a modest expenditure ,",
    "these can be used for research .",
    "the texas a&m university mathematics department maintains computers for undergraduate instruction .",
    "johnson , the departmental systems administrator , installed job scheduling software enabling their use as a computing cluster outside of teaching hours .",
    "the availability of this resource , as much as our mathematical interests , was the catalyst for this computational experiment .",
    "it has been the source of @xmath31 of the computing for this experiment , which also used some desktop computers at texas a&m university and at sam houston state university , as well as personal laptops and clusters at the homes of garca - puente and sottile .",
    "the computer programming community has developed a vast library of free , open - source software that mathematicians can use for research purposes .",
    "the three software tools that we use the most , other than specialized mathematical software , are perl , mysql , and php .",
    "we selected them because of our familiarity with them and their widely available documentation .",
    "in addition to excellent manuals  @xcite , there are many web pages showing documentation , tutorials , answers to frequently asked questions , and pieces of code .",
    "the distributed nature of our computation , its size , and the amount of data we store , led us to organize the computation around a database to store the results and status of the computation .",
    "for this , we chose mysql , a freely available high - quality database program .",
    "the actual database is located on a texas a&m university mathematics department server and may be accessed from anywhere in the world . in particular , we can ( and do ) monitor and manage the computation remotely .",
    "perl is a general - purpose programming language with especially strong facilities for text manipulation and communication with other programs , including mysql .",
    "we use perl to connect together the mathematical programs that actually perform our calculations ( singular , maple ) with the database .",
    "these data are viewed through web pages , which are dynamically generated using php , a programming language designed exactly for this purpose .",
    "our interface for monitoring the experiment is at our project s web page  @xcite .",
    "this model ",
    "computations on individual computers controlled by a central database  scales well and is very flexible .",
    "it can run on a single computer using a local database ( e.g.  a personal laptop ) , on a cluster at one s home or department , or on machines at different institutions .",
    "we wanted to conduct a large computational experiment using distributed , heterogeneous computer resources and have the computation be largely automated as well as robust , repeatable , and reliable . to accomplish this",
    ", we organized it around a database that records all aspects of the computation . in section  [ s : calclabs ] we explain how we run this on a cluster and in section  [ s : quality ] we discuss measures to enhance the quality of our data . here , we focus on the organization of the computation in our software : the basic mathematical procedures , interaction with the database , dividing this large computation into reasonable - sized pieces , and lastly selecting problems to compute and setting parameters of the computation .",
    "our computation is split between three subsystems , a controlling perl script and mathematical computations in singular and in maple .",
    "we explain these choices and how it all fits together .",
    "we chose perl for its strengths in text manipulation and its interface with mysql , our database software .",
    "as explained in section  [ s : math ] , we need to generate a system of polynomials and compute an eliminant , many times . in previous computations , over @xmath32 of computer resources were spent on computing eliminants .",
    "we need the computation to be efficient and to run on freely available software .",
    "the methods of choice for elimination are algorithms based on grbner bases . for this",
    ", we tested three grbner basis packages (  @xcite , macaulay  2  @xcite , and singular  @xcite ) on a suite of representative problems .",
    "when we made our choice of elimination software in the autumn of 2007 , singular was by far the fastest .",
    "given an eliminant , we need to determine its number of real roots , quickly and reliably .",
    "this requires a symbolic algorithm based on sturm sequences  @xcite , and we needed software that we could install on our many different computers . while maple is proprietary software , it has the fastest and most reliable routine , realroot , for counting real roots among the software we tested .",
    "maple was also installed on the computers we planned to use and we trust realroot completely , having used it on several billions of previous computations .",
    "the mathematical routines of elimination and real root counting are symbolic ( i.e. , exact ) algorithms .",
    "we know of no satisfactory parallel implementations , so we achieve parallelism by running different computations on different cpu cores .",
    "when our software ( a perl script ) is run , it queries the database for a schubert problem to work on and then writes a singular input file to generate the desired polynomial systems and perform the eliminations .",
    "as it writes this file , perl selects random subsets @xmath33 of our master list of 111 rational numbers , ( re)orders them to make secant flags , and computes ( and stores ) the overlap number for each polynomial system .",
    "after the file is written , perl calls singular to run this file to compute the eliminants and write them to a file .",
    "perl then uses that output file to create an input file for maple , which it calls maple to run .",
    "maple determines the number of real roots of each eliminant , writing that to a file .",
    "finally , perl reads maple s output , pairs the numbers of real roots with the corresponding overlap number , posts these results to the database , and updates the state of the computation .",
    "a database is just a collection of tables containing data , together with an interface that allows efficient queries .",
    "we designed a database to organize this computation .",
    "it contains the schubert problems to be studied , the results ( e.g.  table  [ t : sample_table ] ) , and much else in between . at all times",
    ", the database contains a complete snapshot of the calculation . despite the size of this computation ,",
    "the database is quite small , about 750 kilobytes .",
    "we briefly explain some of the more important tables in our database and their role in this experiment .",
    "points contains the master list of 111 numbers used to construct secant flags .",
    "it is never altered .",
    "schubertproblems contains the list of all schubert problems we intend to study .",
    "section  [ s : load ] explains how we add problems to the database .",
    "requests keeps track of how much computation is to be done on each schubert problem and what has been started .",
    "the administrators manually update requests to request more computation for particular problems , and the perl script updates requests when beginning a new computation on a schubert problem .",
    "results stores the frequency table of real solutions vs.  overlap number and the amount of computing for each schubert problem .",
    "the perl script updates results after successfully completing a run .",
    "this table contains the information that our php web pages display .",
    "runninginstance contains a list of the computations that have started but have yet to be completed .",
    "we describe its function in section  [ s : robustness ] .",
    "an important technical aspect of this computation is how we parcel out our computations to individual computers .",
    "there are many constraints .",
    "disk space is finite and large files are difficult to handle .",
    "some machines are available only for fixed time periods , and we must efficiently schedule their use .",
    "networks and servers have fixed capacity , so database queries should be kept to a minimum .",
    "additionally , our computations require vastly different resources , with some schubert problems taking less than @xmath34 gigahertz - seconds per instance while others we studied require in excess of @xmath35 gigahertz - seconds per instance .",
    "to balance these constraints , we divide the computation of each schubert problem into units that we call .",
    "each packet consists of between five and @xmath36 instances ( one to @xmath37 choices of the set @xmath33 ) , and ideally requires about 1 hour of computation .",
    "the packets are processed through one or more singular / maple input files , none containing more than 500 polynomial systems .",
    "when a computer queries the database for a problem , it is given a single packet to compute .",
    "the database stores the size and composition of the packets ( which is set when the problems are loaded into the database ) , and all information it records on the amount of computation is denominated in these packets .",
    "packets for computationally - intensive schubert problems require more than one hour of computing .",
    "schubert problems are sorted by the expected time required for a packet , and this is used in job scheduling to optimize performance .",
    "the largest computations are performed on machines with no limit on their availability and the others are parceled out according to the fit between the expected length of computation and the computer s availability .",
    "schubert problems are loaded into the database and the parameters of the computation are set using different software than the main computation .",
    "we have code to generate all schubert problems on a given grassmannian , determining the number of solutions to each schubert problem .",
    "this uses a grbner bases computation in a standard presentation of the cohomology ring , together with the giambelli formula for schubert classes  @xcite .",
    "a perl script tests a subset of these problems to determine if the computation is feasible .",
    "an administrator selects feasible problems to load into the database with a software tool that runs several instances of each problem and decides , based upon the length of the computation , how to divide the computation into packets .",
    "it writes these data into the database and records its work in a log file .",
    "a is a simple way to organize computers to work together in which one machine ( the server ) communicates with the others ( its clients ) , but there is no communication between the clients .",
    "this model is optimal for performing many independent computations , for example , when running several computations ( e.g. computing grbner bases ) in parallel .",
    "it is a perfect match for our computational needs , and most of our experiment runs on a beowulf cluster .",
    "we describe our cluster , its job scheduling , and how we organized our use of this resource .      in section  [",
    "s : hardware ] we mentioned our use of instructional computers at texas a&m university which are collectively called the calclabs  @xcite , as they are primarily used in calculus classes .",
    "the calclabs consist of 191 computers in five instructional labs and 12 in another lab .",
    "johnson installed the open source batch job scheduler torque resource manager  @xcite on these computers , which are the clients , and on a server .",
    "users log in to the server to submit jobs to a queue from which jobs are given to computers as they becomes available .",
    "jobs are submitted to the queue with a specified time limit , both for administration and because each computer is available only for a limited time period ( typically nights , weekends , and holidays ) .",
    "jobs exceeding their time limit are terminated .",
    "a computer is given the first job ( if any ) whose time limit does not exceed its availability .",
    "as described in section  [ s : packets ] , we sort schubert problems by the expected time to compute a packet to optimize this aspect of the scheduler .",
    "while we monitor the progress of our computation on the calclabs and sometimes submit jobs to the queue manually , we have largely automated the administration of this computation with the unix utility cron .",
    "cron executes scheduled tasks and is ideal for performing this administration .",
    "we have set up cron on our account on the server to run a shell script which monitors the queue , submitting jobs when the queue runs down .",
    "it does this intelligently , ensuring that the queue contains packets of differing lengths , tailored to the available computing .",
    "this runs once per hour to keep the queue well - stocked .",
    "other administrative tasks ( rotating logs , deleting old temporary files and archiving the database ) are performed once each day .",
    "since the scheduler submits one job to each machine , but our software runs on a single core , the jobs are themselves shell scripts that run one copy of our software for each cpu core on the given machine .",
    "an essential requirement in experimental science is that results are reproducible .",
    "this is easy to ensure in computational experiments by using deterministic algorithms reliably implemented in software .",
    "a second requirement is proper experimental design to ensure that a representative sample has been tested .",
    "computational experiments may marry these two requirements by using ( pseudo ) random number generators with fixed seeds for random sampling , and storing the seeds .",
    "we explain our choices for experimental design and how we ensure the reproducibility of our computation . in principle",
    ", this experiment could be rerun , recreating every step in every computation .",
    "this repeatability was essential for software development and testing , for checks on the integrity of our data , and it will allow us to rerun a large part of the experiment using different software on a different cluster . with a computation of this complexity , failures of the software and networks are inevitable .",
    "we explain how we recover from such failures , both those we anticipate and those that we do not .",
    "schubert problems come in a countably infinite family with only a few tens of thousands small enough to model on a computer .",
    "we study many of the computable schubert problems , and for each , we test thousands to millions of instances of the secant conjecture .",
    "previous computations have shown the value of such indiscriminate testing .",
    "the seminal example of the monotone conjecture ( the cover illustration for the issue of experimental mathematics in which the paper  @xcite appeared ) was tested late in that experiment , and only after the undergraduate member of that team asked why we were omitting it .",
    "( sottile mistakenly thought it would be uninteresting . )",
    "also , extensive initial tests of the shapiro conjecture for flag manifolds appeared to affirm its validity ( it is in fact false ) .",
    "later was it realized that , by poor experimental design , only cases of the monotone conjecture had been tested , thereby overlooking counterexamples to the shapiro conjecture .",
    "we kept these lessons in mind when designing the current experiment .",
    "we were indiscriminate in selecting problems , studying all schubert problems on grassmannians in 4- , 5- , and 6-dimensional space , as well as on @xmath38 and @xmath39 , where @xmath29 is the grassmannian of @xmath27-planes in @xmath28-space .",
    "we have also studied many computable problems on @xmath40 and will study many on @xmath41 , @xmath39 , @xmath42 , @xmath43 , and @xmath44 . for these last six grassmannians , we are computing a random selection of problems .",
    "while it is hard to be precise , of the 7286 schubert problems on @xmath44 , we estimate that 3000 could be studied with our software .",
    "the rest are too large to compute in a reasonable time or are infeasible .    for a problem involving schubert conditions @xmath45 , there are @xmath46 ways to order the intervals for secants .",
    "our software randomly reorders the conditions before constructing secant flags , to remove bias from the given ordering .",
    "more serious is the question of how uniformly we are selecting from among all secant flags .",
    "we do not have a satisfactory answer to this .",
    "while one may believe that random subsets of our 111 master numbers ( shown in figure  [ f : rp1 ] ) are fairly uniform modulo the action of @xmath47 , we instead offer experience gained in the previous experiment studying the monotone conjecture  @xcite . there",
    ", the results of a computation ( e.g.  verifying the conjecture and an inner border as in table  [ t : sample_table ] ) did not appear to depend upon how we selected subsets of a master set of numbers .",
    "the selections included such schemes as all subsets of the numbers @xmath48 , or random subsets of the first 20 prime numbers , or random subsets of all rational numbers @xmath49 where @xmath50 are the integer points closest to @xmath51 , for @xmath52 .",
    "( this last scheme is likely nearly uniform . )",
    "random choices are made with the help of a pseudorandom number generator .",
    "its output depends deterministically , but to all appearances unpredictably , on a state variable called a , which is deterministically updated after each call .",
    "thus two sequences of calls to a pseudorandom number generator beginning with different seeds give unrelated sequences of integers , but if the seeds are the same , the sequences are identical .    we take advantage of this by generating an initial seed for each schubert problem before computing its first packet .",
    "this initial seed is determined by the current state of the computer .",
    "when packet @xmath28 is begun , the seed is set to this initial seed and @xmath28 calls are made to the pseudorandom number generator to set the seed for that packet . in this way , the computation of a given schubert problem is completely determined given this initial seed , which is stored in our database .",
    "this exact reproducibility of results in a computational experiment is much stronger than the notion of reproducibility for statistical results , and is a feature that we exploit .",
    "we use it for software development to test upgrades and to ensure that the software runs properly on different machines .",
    "for this , we simply copy some problems and their initial seeds to an empty database , run all requested computations , and then compare the new results with the old results .",
    "( they have always agreed . )",
    "we have a software tool to automate this process and now use it on individual laptops to rerun the computation for some schubert problems to validate the data for these problems from the initial run .",
    "we understand that gimps also uses such double - checking for validation .",
    "more interesting , and we believe unprecedented in mathematical experimentation , we are starting to use this feature to rerun a large segment of the calculation on a different cluster  @xcite running a different version of linux and different hardware and also using different software for our basic mathematical routines .",
    "we use macaulay  2 for elimination in place of singular and sarag  @xcite in place of maple for counting real roots of univariate polynomials . besides providing an independent check on the data we generate , this will also give a direct comparison of the efficacy of different implementations of these basic mathematical routines .",
    "as with any complicated task , we can not avoid the unexpected ( the unknown unknowns ) , and have designed our software to recover from the many different failures that inevitably occur . for this , we have several interlocking systems to prevent corrupted calculations from being entered in the database .",
    "we also rerun corrupted packets , and even rerun all or part of a schubert problem whose data appear suspect .    first , our software has checks to ensure that tasks ( connecting with the database , calling client programs , and reading / writing data in files ) are successfully executed , and which terminate its running when something untoward is detected .",
    "other errors , such a network errors or unmounted file systems , cause noisier failures , which are captured by our log files for possible diagnosis .",
    "there are even less graceful failures in a computation , such as power outage , termination of jobs by the job server , or simple human error .",
    "all of these abort the computation of a packet and therefore lead to packets whose computation has started , but whose results have not been submitted to the database .",
    "the table runninginstance in our database keeps track of packets whose computation has started but not finished , together with the expected completion time .",
    "packets that have been terminated in any way are recognized by having an expected completion time that has long passed .",
    "when our software queries the database for a problem to work on , it first checks for any such overdue packets .",
    "if one is found , it deletes that record from runninginstance and creates a new record corresponding to this new computation .",
    "otherwise it finds a fresh packet to compute , creating a record in runninginstance . upon successful completion",
    ", these records are deleted .",
    "one possible graceful failure is for a computation to end , but discover that its record in runninginstance has been deleted and superseded by another  preventing a second submission of the same data to the database .    while this method works for the few to hundreds ( out of thousands ) of packets each day that fail before successful completion ,",
    "sometimes our data becomes corrupted , or possibly corrupted .",
    "we also have a software tool that finds the most recent database backup where that schubert problem is uncorrupted and restores that schubert problem to this previous state .",
    "thus we simply recompute all or part of the computations for that schubert problem .",
    "we plan to continue this work of mathematical discovery through advanced computing . at the conclusion of this experiment in december 2009 , we will write a full paper describing its mathematical results . as of may 2009 ,",
    "the secant conjecture was verified in each of the over 250 million instances we checked . in 2010",
    "we plan to start a related experiment , testing a common generalization of the monotone and secant conjectures .",
    "this will last about one year .",
    "while there is much more to be discovered studying these variants of the shapiro conjecture , we plan a long - term , multifaceted , and systematic study of galois groups of schubert problems , building on the work in  @xcite .",
    "we mention one side benefit from this computation . in march 2009 , after sharing timing data from a benchmark computation with mike stillman , a developer of macaulay  2 , he rewrote some code that improved its running by several orders of magnitude .",
    "we have described how and why we set up , organized , and are running a very large computational experiment to study a conjecture in pure mathematics , and how it is possible to harness underused yet widely available computing resources for mathematical research .",
    "we believe this model  a team - based approach to designing and monitoring a large computational experiment  can fruitfully be replicated in other settings and we encourage you to try it .",
    "sara billey and ravi vakil , _ intersections of schubert varieties and other permutation array schemes _ , algorithms in algebraic geometry , i m a vol .",
    "146 , springer , new york , 2008 , pp .",
    "2154 .",
    "to3em , _ from enumerative geometry to solving systems of polynomials equations _",
    ", computations in algebraic geometry with macaulay 2 , algorithms comput . math . , vol .  8 ,",
    "springer , berlin , 2002 , pp .",
    "101129 .",
    "to3em , _ enumerative real algebraic geometry _ , algorithmic and quantitative real algebraic geometry ( piscataway , nj , 2001 ) , dimacs ser .",
    "discrete math .",
    ", vol .  60 , amer . math",
    ". soc . , providence , ri , 2003 , pp ."
  ],
  "abstract_text": [
    "<S> we describe a general framework for large - scale computational experiments in mathematics using computer resources that are available in most mathematics departments . </S>",
    "<S> this framework was developed for an experiment that is helping to formulate and test conjectures in the real schubert calculus . largely using machines in instructional computer labs during off - hours and university breaks </S>",
    "<S> , it consumed in excess of 350 gigahertz - years of computing in its first six months of operation , solving over 1.1  billion polynomial systems . </S>"
  ]
}
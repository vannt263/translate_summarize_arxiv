{
  "article_text": [
    "in recent years , there was remarkable progress in the development of ( semi-)automatized software for the numerical calculation of arbitrary , complicated feynman integrals .",
    "basically , two approaches are advocated .",
    "one relies on sector decomposition . for an introduction given at this conference and for further references",
    "see @xcite .",
    "we will report on the other approach , based on mellin - barnes representations @xcite .",
    "when @xcite appeared in 2005 , several unsolved problems of different complexity existed .",
    "we mention non - planar diagrams , the massive case , multi - loop tensor integrals , minkowskian kinematics . for all of the items ,",
    "progress is reported in @xcite , based on the source - open software ambre / mb @xcite .",
    "an alternative is the direct analytical evaluation of mb - integrals .",
    "this is difficult .",
    "but in view of recent progress in algebraically summing up infinite sums by the linz group s computer algebra algorithms for nested sums and products , one might hope to achieve a breakthrough @xcite ; certainly only if the result leads to appropriate classes of functions .",
    "the idea is to apply the linz group s algorithms ( as well as those of others , e.g. @xcite ) to sums of residues after applying cauchy s theorem @xcite .",
    "a first attempt was reported in @xcite .",
    "the automatized derivation of the multiple sums for a given mb - integral is certainly the easier part of the task , but it is the first step .",
    "we report here on a first version of the mathematica program mbsums @xcite for transforming mb - representations for feynman integrals into multiple sums .",
    "the licence conditions of the source - open package are those formlulated in the cpc non - profit use licence agreement of the computer physics communications program library @xcite .",
    "the authors expect that the potential users read and follow the licence agreement when using this code .",
    "the package ` mbsums ` transforms mellin - barnes integrals into sums , by closing the integration contours and calculating the integrals by the residue theorem , i.e. by constructing sums over all residues inside the contours .",
    "the current version of ` mbsums ` is 1.0 .",
    "the package ` mbsums ` works with wolfram mathematica 7.0 and later .    in order to obtain a sum from an mb - integral",
    "the user should use the ` mbinttosum ` function of ` mbsums ` : @xmath0|\\ ] ] or @xmath1|,\\ ] ] where ` int ` is the mb - integral in the form as it is denoted in the mathematica package ` mb ` @xcite : @xmath2|\\ ] ] which corresponds to @xmath3 the integrand f can have the form @xmath4 and each @xmath5 is assumed to be of the form of @xmath6 where @xmath7 , @xmath8 , @xmath9 are free parameters ( usually kinematic parameters ) in ` int ` and @xmath10 is a factor independent of @xmath11-variables .",
    "the @xmath12 where @xmath13 , @xmath14 , @xmath15 are rational numbers and @xmath16 ( ` eps ` ) is an infinitesimal dimensional shift , e.g. arising from @xmath17 .",
    "all the singularities of the integrand of the mb - integral ` f ` are due ( and only due ) to ` gamma ` and ` polygamma ` functions .",
    "the values of ` c1 , c2 , ... , cd ` are converted to rational numbers by ` mbinttosum ` before calculations .",
    "let us now focus on the case when the list ` kinematics ` is empty , i.e. we will consider ( [ examplembgen2 ] ) .",
    "the list ` contours ` has the form @xmath18 the order of the @xmath11-variables defines the order of integrations chosen by the user ( from left to right ) .",
    "the l ( ) means that the contour will be closed to the left ( right ) .",
    "the l/ choice made by the user can be changed if ` kinematics ` is not empty and this will be covered later .",
    "the output of ` mbinttosum ` in ( [ examplembgen2 ] ) is of the form @xmath19 where @xmath20|\\ ] ] represents a sum with summand ` sum_coefficient_i ` that has non - negative indices given in the list ` list_i ` , and ` conditions_i ` are conditions on those indices .",
    "the complete answer is the sum of all ` mbsum_i ` in the list .    the list `",
    "kinematics ` has the form @xmath21 where ` r_i ` are free parameters ( usually kinematic parameters ) in ` int ` and ` v_i ` are values of ` r_i ` .",
    "if ` kinematics ` is not empty then ` mbinttosum ` will try to change the l/ choice made by the user in the list ` contours ` in order to obtain sums that have good asymptotic behaviour at given values of ` r_i ` . in any case",
    "the user is informed how the contour was closed .",
    "this will be explained later in detail .",
    "the values of ` v_i ` are converted to rational numbers by ` mbinttosum ` before calculations .",
    "the user can turn off all messages printed by ` mbinttosum ` by typing ` mbsumsinfo = false ` and turn them on by typing ` mbsumsinfo = true ` .",
    "in addition we provide function ` doallmbsums[sums , nmax , kinematics ] ` that sums the ` sums ` in the form ( [ sum ] ) .",
    "the ` nmax ` is the maximal value of each index , the minimal value is given by conditions on indices .",
    "the list ` kinematics ` is as above and may be empty .",
    "we used wolfram mathematica function ` parallelmap ` inside ` doallmbsums ` to sum individual sums in the list ` sums ` in parallel .",
    "let us now shortly explain how we obtain the sums .",
    "we point out the most important ingredients in our algorithm .",
    "let us focus on the case when the list ` kinematics ` is empty , i.e. we will consider ( [ examplembgen2 ] ) .",
    "the mb - integral is in the form as it was denoted in ( [ int ] ) .",
    "let us now assume that the user has chosen as first integration the ` z2->l ` .",
    "as a first step we form a list , which we call negargsdoc , of arguments of the ` gamma ` and ` polygamma ` functions in the numerators that give residues for @xmath22 ( see ( [ int ] ) , the remaining contours are seen as a straight lines ) .",
    "we call that list negargsdoc .",
    "next w consider all possible cases : when all ` gamma ` and ` polygamma ` functions that have arguments in negargsdoc contribute to a residue at the same time , and when only some subset of them contributes to a residue at the same time .",
    "we consider all possible subsets of negargsdoc .",
    "additionally we have to be careful when some ` gamma ` functions in the denominator become singular at some points . if we have terms like ` gamma[2 z2 ]",
    "` , then the poles are at @xmath23 and we consider there 2 cases : @xmath24 and @xmath25 , where @xmath26 and @xmath27 are non - negative integers",
    ". similarly we proceed with arbitrary @xmath28 terms , where @xmath29 is some integer value and in general with all @xmath30 terms which appear together with integration variable in the arguments of the ` gamma ` and ` polygamma ` functions .",
    "so we produce a list of cases @xmath31 where @xmath32 are expressions after taking residues of f and @xmath33 are conditions on the index that numerates terms ( residues ) in @xmath32 .",
    "we obtain a list of @xmath34 elements after integrating over z2 .",
    "let us now assume that the user has chosen as second integration variable ` z5->r ` .",
    "then we repeat the whole procedure on each @xmath32 taking into account conditions @xmath33 .",
    "so we produce analogous to ( [ a ] ) a list of cases @xmath35 we repeat the whole procedure for each integration variable .",
    "let us now shortly explain how we obtain the sums if the list ` kinematics ` is not empty .",
    "we follow the order of integration given in the list ` contours ` . our aim is to determine the l/ such that we obtain sums that have good asymptotic behaviour at given values of ` r_i ` in the list `",
    "kinematics ` .",
    "we do it in the following way . at each integration step",
    "@xmath36 we analyse the expressions @xmath37 that are to be integrated over some @xmath38 .",
    "each @xmath39 we decompose as @xmath40 and each @xmath41 is of the form @xmath42 where @xmath9 are the kinematic parameters in the list ` kinematics ` and @xmath43 contains the rest of @xmath44 .",
    "if we integrate over @xmath38 , we consider @xmath45 the value of @xmath46 is calculated . `",
    "mbinttosum ` prints the error message : @xmath47 for each @xmath48 in each @xmath37 when @xmath46 is symbolic ( not a number ) and at the end ` mbinttosum ` prints @xmath49 and returns \\{}. the user should complete the list ` kinematics ` .",
    "for each @xmath48 in each @xmath37 it is returned l if @xmath50 or r if @xmath51 indicating how to close the contour or \\ { } if @xmath52 .    if for each @xmath48 in each @xmath37 it is returneded l ( r ) or \\ { } then the contour for @xmath38",
    "will be closed to left ( right ) if it is returned at least one l ( r ) .",
    "if for each @xmath48 in each @xmath39 it is returned \\ { } then the choice of user given in the list ` contours ` is taken .",
    "if for some @xmath48 it is returned r and for some @xmath53 it is returned l then ` mbinttosum ` prints the error message : @xmath49 and returns \\{}. otherwise we compute the sums as described above .",
    "we repeat the whole procedure for each integration variable .",
    "we stress that this procedure as described above does not always give convergent sums .",
    "there are mb - integrals for which no convergent sums can be found .",
    "one such example is the following mb - integral : @xmath54 here we can apply the first barnes lemma @xcite and obtain @xmath55 , but the reader can check that indeed the infinite series of residues diverge both for @xmath56 and @xmath57 .    consider the following integral ( see also @xcite ) : @xmath58 closing the contour to the right ( @xmath56 ) gives the following series @xmath59 convergent for @xmath60 , while closing the contour to the left ( @xmath57 ) gives the following series @xmath61 convergent for @xmath62 .",
    "both @xmath63 and @xmath64 give the same formula after summing up , that is @xmath65 so @xmath66 and @xmath67 .",
    "we also provide function ` simplifymbsums[sums ] ` that takes each ` mbsum [ ] ` in the list ` sums ` in the form ( [ sum ] ) and simplifies it .",
    "the output of ` simplifymbsums ` is of the form ( [ sum ] ) .",
    "if ` mbsum[f , c , l ] ` is the sum to be simplified then ` simplifymbsums ` uses the mathematica function ` reduce ` to simplify the conditions ` c ` .",
    "if ` reduce ` returns  after applying mathematica function ` logicalexpand ` to ` c `  for ` c ` an answer in the form ` c_1||c_2|| ... ||c_r ` , then we decompose ` mbsum[f , c , l ] ` into @xmath68,mbsum[f , c_2,l], ... ,mbsum[f , c_r , l]}|\\ ] ] .",
    "if some ` mbsum[f , c_i , l ] ` contains conditions ` c_i ` like    .... n1 = = c[1 ] & & n2 = = c[1 ] + c[2 ] ....    where ` n1 ` , ` n2 ` are summation indices in ` mbsum[f , c_i , l ] `",
    ", then we make the substitutions ` n1 - > c[1 ] ` and ` n2 - > c[1 ] + c[2 ] ` in ` f ` and update ` c_i ` and ` l ` in ` mbsum[f , c_i , l ] ` ; ` c[1 ] ` and ` c[2 ] ` are new summation indices .",
    "we assume that ` c [ ] ` are integers .",
    "next , we unify the names of indices . finally , we combine sums having the same conditions . it can happen e.g. that we obtain 4-dimensional sums from a 3-dimensional sum after applying ` simplifymbsums ` . to illustrate this ,",
    "let us consider the following example .",
    "let ` c ` be    .... c = n3 > = 0 & & n2 > = 1 & & n1 > = 0 & &       n2 > = 1 + n3 & & 1 + n1",
    "< = n2 ....    then    .... reduce[c , { n1 , n2 , n3 } , integers ] ....    gives    .... element[c[1 ] | c[2 ] | c[3 ] | c[4 ] , integers ] & &   c[1 ] > = 0 & & c[2 ] > = 0 & & c[3 ] > = 0 & & c[4 ] > = 0 & &   n1 = = c[1 ] + c[2 ] & &   n2 = = 1 + c[1 ] + c[2 ] + c[3 ] + c[4 ] & &   n3 = = c[2 ] + c[3 ] ....    in addition we provide function ` mergembsums[sums ] ` that only combines sums in the list ` sums ` ( in the form ( [ sum ] ) ) having the same conditions .",
    "in all the examples we will proceed as follows .",
    "we start with feynman integral @xmath69 in @xmath17 dimensions .",
    "first , the mb - representation for @xmath69 is obtained using the mathematica package ` ambre ` v.1.2 @xcite .",
    "next the analytical continuation @xmath70 as well as the expansion of the integrals around @xmath71 is obtained using the mathematica package ` mb ` v.1.2 @xcite . in some examples",
    ", we also used the mathematica package ` barnesroutines ` v.1.1.1 by david a. kosower @xcite in order to reduce the dimensionality of the mb - integrals .",
    "the first example is the massive qed one - loop box diagram with two photons in the @xmath72-channel ; see the example file ` 1lbox.nb `  @xcite .",
    "the input integral is , with kinematics @xmath73 for @xmath74 and @xmath75 : @xmath76}.\\ ] ] using ` ambre ` one obtains the following mb - representation for finite @xmath16 : @xmath77 with @xmath78 , @xmath79 , @xmath80 , @xmath81 .",
    "the mb - representation ( [ box ] ) is the same , up to irrelevant factors , as that in @xcite .",
    "see also the sums there , compare also with the mb - representation in ` example3.nb ` @xcite , described in @xcite .",
    "next one performs the analytical continuation of ( [ box ] ) for @xmath70 and the expansion of the resulting integrals around @xmath71 up to @xmath82 using ` mb ` :    .... { mbint[((-x)^z1*y^(-1 - z1)*gamma[-z1]^3*gamma[1 + z1 ] *      ( -6 + 3*eps^2*eulergamma^2 + 4*eps^2*pi^2 +        6*eps*log[-t ] - 3*eps^2*log[-t]^2 -        6*eps^2*eulergamma*log[y ] + 3*eps^2*log[y]^2 +        12*eps^2*polygamma[0 , -2*z1]^2 +        12*eps^2*polygamma[0 ,",
    "-z1]^2 + 6*eps^2*eulergamma *        polygamma[0 , 1 + z1 ] - 6*eps^2*log[y ] *        polygamma[0 , 1 + z1 ] + 3*eps^2*polygamma[0 , 1 + z1]^         2 - 12*eps^2*polygamma[0 , -z1]*(eulergamma -          log[y ] + polygamma[0 , 1 + z1 ] ) +        12*eps^2*polygamma[0 , -2*z1]*(eulergamma - log[y ] -          2*polygamma[0 , -z1 ] + polygamma[0 , 1 + z1 ] ) -        12*eps^2*polygamma[1 , -2*z1 ] +        6*eps^2*polygamma[1 , -z1 ] +        3*eps^2*polygamma[1 , 1 + z1]))/     ( 6*eps*t^2*gamma[-2*z1 ] ) , { { eps - > 0 } , { z1 - > -1/2 } } ] ,    mbint[(-2*eps*(-x)^z1*y^z2*gamma[-z1 ] *      gamma[-1 - z1 - z2]^2*gamma[-z2]*gamma[1 + z2]^2 *      gamma[2*(1 + z1 + z2)]*gamma[2 + z1 + z2])/     ( t^2*gamma[2 + 2*z2 ] ) , { { eps - > 0 } ,      { z1 - > -1/2 , z2 - > -1/4 } } ] } ....    the expression agrees numerically with the mb - representations in eq .  ( 4.25 ) of @xcite and in eq .  ( 4.67 ) of @xcite after analytical continuation and expansion in @xmath16 by ` mb ` .",
    "we would now like to reproduce the representation by sums of the mb - integrals above .",
    "we aim at sums to be convergent at @xmath83 we start with the first , one - dimensional integral on the list , which we denote by ` dim1int `",
    ". then @xmath84|\\ ] ] gives    .... { mbsum[-(y^n1*n1!^2*(-4 + 3*eps^2*pi^2 +         2*eps^2*harmonicnumber[n1]^2 -         2*eps^2*harmonicnumber[n1 , 2 ] + 4*eps*log[-t ] -         2*eps^2*log[-t]^2 - 4*eps^2*harmonicnumber[n1 ] *         log[-x ] + 2*eps^2*log[-x]^2))/(4*(-1)^n1*eps*t^2 *      ( -x)^n1*x*(1 + 2*n1 ) ! ) , n1 > = 0 , { n1 } ] } ....    together with the message how the contour was closed : @xmath85 .",
    "here , the original choice how to close the contour is unchanged . the user can check that the same result can be obtained with ` dim1sum = mbinttosum[dim1int , { } , { z1 - > l } ] ` .",
    "one can now check the result numerically : @xmath86 //",
    "n|\\ ] ] gives    .... 0.222878 - 0.0967945/eps + 0.709316 eps ....    in agreement with    .... { 0.222878 - 0.0967945/eps + 0.709316 eps , 0 .",
    "} ....    from ` mbintegrate[{dim1int } , lk]//n ` .",
    "next , we do the two - dimensional integral on the list , which we denote by ` dim2int ` . then    ....",
    "dim2sum = mbinttosum[dim2int , lk , { z1 - > l , z2 - > l } ] ....    gives    .... { mbsum[-(eps*(-x)^(n1 - n2)*y^n2*(-1 + 2*n1)!*n2 ! *       ( pi^2 + 6*harmonicnumber[n1]*harmonicnumber [          -1 + n1 - n2 ] - 12*harmonicnumber[-1 + 2*n1 ] *         harmonicnumber[-1 + n1 - n2 ] +         3*harmonicnumber[-1 + n1 - n2]^2 +         6*harmonicnumber[n1]*harmonicnumber[n2 ] -         12*harmonicnumber[-1 + 2*n1]*harmonicnumber[n2 ] -         3*harmonicnumber[n2]^2 - 12*harmonicnumber[n1 ] *         harmonicnumber[1 + 2*n2 ] +         24*harmonicnumber[-1 + 2*n1]*harmonicnumber [          1 + 2*n2 ] + 12*harmonicnumber[n2 ] *         harmonicnumber[1 + 2*n2 ] -         12*harmonicnumber[1 + 2*n2]^2 +         3*harmonicnumber[-1 + n1 - n2 , 2 ] +         3*harmonicnumber[n2 , 2 ] - 12*harmonicnumber[1 + 2*n2 ,           2 ] - 6*harmonicnumber[n1]*log[-x ] +         12*harmonicnumber[-1 + 2*n1]*log[-x ] -         6*harmonicnumber[-1 + n1 - n2]*log[-x ] +         3*log[-x]^2 + 6*harmonicnumber[n1]*log[y ]",
    "-         12*harmonicnumber[-1 + 2*n1]*log[y ] -         6*harmonicnumber[n2]*log[y ] +         12*harmonicnumber[1 + 2*n2]*log[y ] - 3*log[y]^2))/     ( 3*(-1)^(3*n1)*t^2*x*n1!*(-1 + n1 - n2)!*(1 + 2*n2 ) ! ) ,     2*n1 > = 1 & & n2 > = 0 & & n1 > = 1 + n2 , { n1 , n2 } ] ,    mbsum[(2*(-1)^(-2*n1 - n2)*eps*(-x)^(n1 - n2)*y^n2 *      ( -1 + 2*n1)!*n2!*(-n1 + n2)!*(harmonicnumber[n1 ] -        2*harmonicnumber[-1 + 2*n1 ] + harmonicnumber [        -n1 + n2 ] - log[-x]))/(t^2*x*n1!*(1 + 2*n2 ) ! ) ,     2*n1 > = 1 & & n2 > = 0 & & n1 < = n2 , { n1 , n2 } ] ,    mbsum[(eps*(-x)^n1*y^(-1 - n1 + n2)*(-1 - n1 + n2 ) ! *      ( -1 + 2*n2)!*(pi^2 + harmonicnumber[n2]^2 -        2*harmonicnumber[n2]*harmonicnumber[-1 - n1 + n2 ] +        harmonicnumber[-1 - n1 + n2]^2 - 4*harmonicnumber[n2 ] *        harmonicnumber[-1 + 2*n2 ] +        4*harmonicnumber[-1 - n1 + n2]*harmonicnumber [         -1 + 2*n2 ] + 4*harmonicnumber[-1 + 2*n2]^2 +        4*harmonicnumber[n2]*harmonicnumber [         -1 - 2*n1 + 2*n2 ] - 4*harmonicnumber[-1 - n1 + n2 ] *        harmonicnumber[-1 - 2*n1 + 2*n2 ] -        8*harmonicnumber[-1 + 2*n2]*harmonicnumber [         -1 - 2*n1 + 2*n2 ] +        4*harmonicnumber[-1 - 2*n1 + 2*n2]^2 +        harmonicnumber[n2 , 2 ] - harmonicnumber[-1 - n1 + n2 ,         2 ] - 4*harmonicnumber[-1 + 2*n2 , 2 ] +        4*harmonicnumber[-1 - 2*n1 + 2*n2 , 2 ] -        2*harmonicnumber[n2]*log[y ] +        2*harmonicnumber[-1 - n1 + n2]*log[y ] +        4*harmonicnumber[-1 + 2*n2]*log[y ] -        4*harmonicnumber[-1 - 2*n1 + 2*n2]*log[y ] + log[y]^2))/     ( ( -1)^(3*n2)*t^2*n1!*n2!*(-1 - 2*n1 + 2*n2 ) ! ) ,     n1 > = 0 & & 2*n2 > = 1 & & 1 + n1 < = n2 , { n1 , n2 } ] } ....    together with the message how the contour was closed :    .... z1->r ( re z1 > -1/2 ) z2->r ( re z2 > -1/4 ) ....    here the original choice how to close the contours was changed .",
    "we can now check the result numerically : @xmath87 //",
    "n|\\ ] ] gives    .... -0.0917188 eps ....    in agreement with    .... { -0.0917189 eps , { 8.79914 * 10 ^ -6 eps , 0 } } ....    from ` mbintegrate[{dim2int } , lk]//n ` .",
    "further , we give examples of two potential errors .",
    "the    .... dim2sum = mbinttosum[dim2int , lk , { z2 - > l , z1 - > l } ] ....    prints    ....",
    "z2->r ( re z2 > -1/4 ) unable to found correct contour for z1 . ....    and returns ` { } ` , while    .... dim2sum = mbinttosum[dim2int , { t - > -10 } , { z1 - > l , z2 - > l } ] ....    prints    .... found c = -x ( not a number ) : please complete kinematic 's list .",
    "unable to find correct contour for z1 . ....    and returns ` { } ` .",
    "the next example is the massive on - shell planar double box diagram ; see the example file ` 2lbox.nb ` at @xcite .",
    "the integral was studied in @xcite .",
    "our kinematics is @xmath73 for @xmath74 , @xmath75 ) : @xmath88              } \\nonumber\\\\    & &        \\times   \\frac{1}{(k_{1}-k_{2})^2(k_{2}^2-m^2 )              [ ( k_{2}+p_{1}+p_{2})^2-m^2 ]              ( k_{1}-p_{3})^2              } .\\end{aligned}\\ ] ] the mb - representation of ( [ i2l ] ) agrees with @xcite .",
    "further , we will use the mb - representation ( [ i2l ] ) in ` example7.nb ` from @xcite in variable ` fin ` without the @xmath89 factor , which will be added later .",
    "next the analytical continuation of ` fin ` in @xmath70 as well as the expansion of the resulting integrals around @xmath71 up to @xmath90 is obtained with ` mb ` v.1.2 .",
    ":    .... int1 = mbint[((-x)^(z1 + z6)*gamma[-z1]^3*gamma[1 + z1 ] *     gamma[-z6]^3*gamma[1 + z6])/(2*eps^2*s^2*t*gamma[-2*z1 ] *     gamma[-2*z6 ] ) , { { eps - > 0 } , { z1 - > -1/2 , z6 - > -1/2 } } ] ....    with @xmath91 , @xmath80 , @xmath81 .",
    "we now produce sums from the mb - integral above , that are convergent at @xmath92 then @xmath93|\\ ] ] gives    .... { mbsum[((-1)^(-n1 - n2)*(-x)^(-n1 - n2)*n1!^2*n2!^2)/     ( 2*eps^2*s^2*t*x^2*(1 + 2*n1)!*(1 + 2*n2 ) ! ) ,",
    "n1 > = 0 & & n2 > = 0 , { n1 , n2 } ] } ....    together with the message how the contour was closed ( the original choice is unchanged ) :    .... z1->l ( re z1 <",
    "-1/2 ) z6->l ( re z6 <",
    "-1/2 ) ....    the numerical check : @xmath94 //",
    "n|\\ ] ] gives    .... -4.68459/eps^2 ....    in agreement with    .... { -4.6846/eps^2 , { 0.000453913/eps^2 , 0 } } ....    from ` mbintegrate[{int1 } , lk ] ` and with the analytical result in @xcite .",
    "the two - dimensional sum in ` s1 ` can be written as a squared one - dimensional and can be summed - up with mathematica 9.0 :    .... ( 8 arcsin[1/(2 sqrt[x])]^2)/(eps^2 s^2 t ( -1 + 4 x ) ) ....    in numerical agreement with the above .",
    "next we consider the on - shell massless planar double box ( [ i2l ] ) with @xmath95 ; see @xcite .",
    "our kinematics is @xmath96 for @xmath74 and @xmath97 : @xmath98 where @xmath99 , @xmath80 , @xmath81 ; see the example file 2lbox-m0.nb at @xcite .",
    "the mb - representation for ( [ i2lm0 ] ) is obtained using ` ambre ` v.1.2 , based on the derivation of the mb - representation in ` example7.nb ` ( available at @xcite ) . from the four - dimensional mb - representation stored in variable ` fin ` we removed the @xmath100 factor and obtained @xmath101 , stored in variable ` kfin ` .",
    "compare this with the five - dimensional mb - representation for @xmath101 in @xcite .",
    "next , the analytical continuation of ` kfin ` at @xmath70 and the expansion of the resulting integrals around @xmath71 up to @xmath102 are obtained with ` mb ` v.1.2 .",
    "finally , with ` barnesroutines ` v.1.1.1 @xcite one may reduce the dimensionality of the mb - integrals .",
    "one obtains several one - dimensional mb - integrals .",
    "next , these mb - integrals are transformed into one - dimensional sums .",
    "we checked both the mb - integrals and sums to be in good numerical agreement at @xmath103 with the analytic result for @xmath101 in @xcite .",
    "there were no sums ( because zero - dimensional mb - integrals ) to be done for the @xmath90-term , and we obtained the analytic result already .",
    "the sums for the @xmath104-term and the @xmath102-term could be done with advanced tools by j. blmlein and c. schneider .",
    "they agree analytically with @xmath101 in @xcite .",
    "we would like to thank j. blmlein , i. dubovyk , j. gluza and c.  schneider for numerous helpful discussions .",
    "the research project is partly supported by the polish national science centre ( ncn ) under the grant agreement no .",
    "dec-2013/11/b / st2/0402 .",
    "v.  a. smirnov , analytical result for dimensionally regularized massless on shell double box , phys .",
    "b460 ( 1999 ) 397404 . http://arxiv.org/abs/hep-ph/9905323 [ ] , http://dx.doi.org/10.1016/s0370-2693(99)00777-7 [ ] .",
    "j.  tausk , nonplanar massless two loop feynman diagrams with four on - shell legs , phys .",
    "b469 ( 1999 ) 225234 . http://arxiv.org/abs/hep-ph/9909506 [ ] , http://dx.doi.org/10.1016/s0370-2693(99)01277-0 [ ] .",
    "a.  smirnov , v.  smirnov , on the resolution of singularities of multiple mellin - barnes integrals , eur .",
    "j. c62 ( 2009 ) 445449 . http://arxiv.org/abs/0901.0386 [ ] , http://dx.doi.org/10.1140/epjc/s10052-009-1039-6 [ ] .",
    "j.  gluza , k.  kajda , t.  riemann , ambre - a mathematica package for the construction of mellin - barnes representations for feynman integrals , comput .",
    "commun . 177",
    "( 2007 ) 879893 .",
    "http://arxiv.org/abs/0704.2423 [ ] , http://dx.doi.org/10.1016/j.cpc.2007.07.001 [ ] .",
    "j.  gluza , k.  kajda , t.  riemann , v.  yundin , numerical evaluation of tensor feynman integrals in euclidean kinematics , eur .",
    "j. c71 ( 2011 ) 1516 .",
    "[ ] , http://dx.doi.org/10.1140/epjc/s10052-010-1516-y [ ] .",
    "i.  dubovyk , j.  gluza , t.  riemann , non - planar feynman diagrams and mellin - barnes representations with ambre v.3.0 , j. phys .",
    "608  ( 1 ) ( 2015 ) 012070 . http://dx.doi.org/10.1088/1742-6596/608/1/012070 [ ] .",
    "s.  moch , p.  uwer , xsummer : transcendental functions and symbolic summation in form , comput .",
    "174 ( 2006 ) 759770 . http://arxiv.org/abs/math-ph/0508008 [ ] , http://dx.doi.org/10.1016/j.cpc.2005.12.014 [ ] .",
    "j. gluza and t. riemann , `` simple feynman diagrams and simple sums '' , talk held at the risc - desy workshop on advanced summation techniques and their applications in quantum field theory , on the occasion of the 5th year jubilee of the risc - desy cooperation , may 7 - 8 , 2012 , risc institute , castle of hagenberg , linz , austria .",
    "conference link : http://www.risc.jku.at/conferences/riscdesy12/ , talk link : http://www-zeuthen.desy.de/~riemann/talks/riemann-linz-2012-05.pdf [ http://www-zeuthen.desy.de/@xmath105riemann/talks/riemann-linz-2012-05.pdf ] .",
    "j.  blmlein , i.  dubovyk , j.  gluza , m.  ochman , c.  g. raab , t.  riemann , c.  schneider , non - planar feynman integrals , mellin - barnes representations , multiple sums , pos ll2014 ( 2014 ) 052 . http://arxiv.org/abs/1407.7832 [ ] .",
    "j. gluza and t. riemann , _ simple feynman diagrams and simple sums _ , talk held at risc - desy _ workshop on advanced summation techniques and their applications in quantum field theory _ on the occasion of the 5th year jubilee of the risc - desy cooperation , may 7 - 8 , 2012 , risc institute , castle of hagenberg , linz , austria .",
    "conference link : http://www.risc.jku.at/conferences/riscdesy12/ , talk link : http://www-zeuthen.desy.de/~riemann/talks/riemann-linz-2012-05.pdf [ http://www-zeuthen.desy.de/@xmath105riemann/talks/riemann-linz-2012-05.pdf ] .",
    "j.  fleischer , j.  gluza , a.  lorca , t.  riemann , first order radiative corrections to bhabha scattering in d dimensions , eur .",
    "c48 ( 2006 ) 3552 . http://arxiv.org/abs/hep-ph/0606210 [ ] , http://dx.doi.org/10.1140/epjc/s10052-006-0008-6 [ ] ."
  ],
  "abstract_text": [
    "<S> feynman integrals may be represented by the mathematica packages ` ambre ` and ` mb ` as multiple mellin - barnes integrals . with the mathematica package ` mbsums ` we transform these mellin - barnes integrals into multiple sums . </S>"
  ]
}
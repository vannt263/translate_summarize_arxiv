{
  "article_text": [
    "index coding ( introduced by birk and kol  @xcite in 1998 ) , a sender broadcasts messages through a noiseless shared channel to multiple receivers , each knowing some messages a priori , which are known as side information .",
    "side information occurs frequently in many communication networks , e.g. , in a web browsers cache .",
    "knowing the side information of the receivers , the sender can send coded symbols , known as an index code , in such a way that all of the receivers can decode their requested messages using their side information and the received coded symbols .",
    "the aim is to find the shortest ( optimal ) index code .",
    "how to optimally design an index code for an arbitrary index - coding instance is an open problem to date .    in the literature",
    ", various approaches have been adopted to solve the index - coding problem .",
    "we broadly classify these approaches into four categories : ( i ) numerical , ( ii ) shannon s random coding , ( iii ) interference alignment , and ( iv ) graph - based .",
    "numerical approaches include rank minimization over finite fields @xcite ( which is np - hard to compute in general @xcite ) , and mathematical optimization programming ( semi - definite programming @xcite , linear programming @xcite , and integer - linear programming @xcite ) .",
    "these approaches do not provide much intuition on the interaction between the side - information configuration and the index codes .",
    "shannon s random coding approaches @xcite require infinitely long message packets .",
    "interference - alignment approaches treat index coding as an interference - alignment problem @xcite , and construct index codes via two alignment techniques , namely one - to - one alignment and subspace alignment .",
    "these alignment techniques have no well - defined algorithms to construct index codes for arbitrary index - coding instances .",
    "graph - based approaches @xcite provide intuition on the side - information configurations and index codes .",
    "these approaches represent index - coding instances by graphs , and construct index codes as functions of the graphs .",
    "these graph - based schemes provide linear ( scalar and vector ) index codes .",
    "although linear index codes are not always optimal @xcite , they have simpler encoding and decoding processes .",
    "we classify graph - based approaches into two sub - categories : ( i ) maximum distance separable ( mds ) code based interference alignment approaches , and ( ii ) graph structure based approaches .",
    "the mds code based interference alignment approaches construct index codes by treating messages not known to a receiver as interference , and aligning all interference with the help of mds codes .",
    "these approaches include the partial - clique - cover scheme @xcite and its fractional version @xcite , the local - chromatic - number scheme and its fractional version @xcite , and the partitioned - local - chromatic - number scheme and its fractional version @xcite .",
    "graph structure based approaches exploit special graph structures , based on messages known to the receivers that can provide savings on index - coding instances .",
    "it has been shown that no structure in an acyclic graph can provide any savings @xcite .",
    "furthermore , if an arc does not belong to any cycle , then removing it does not change the optimal index code @xcite . these observations point to the importance of cycles on index coding",
    ". in the literature ,",
    "only disjoint cycles and cliques , a specific combination of overlapping cycles , have been exploited so far .",
    "more precisely , disjoint cycles in digraphs are exploited by the cycle - cover scheme @xcite and its fractional version @xcite , and disjoint cliques in digraphs are exploited by the clique - cover scheme @xcite and its fractional version @xcite .",
    "overlapping cycles can provide more savings than disjoint cycles .",
    "we take a clique as an example . in a clique ,",
    "every vertex forms a cycle with any other vertex , and we see overlapping of cycles at every vertex . if we consider only disjoint cycles in the clique , we get an index code strictly longer than that by considering the clique . however , not all forms of overlapping cycles are useful , in the sense that they provide more savings than considering only disjoint cycles and cliques . in this work ,",
    "we consider a graph structure based approach , and propose structures of overlapping cycles that can be exploited in graphs to provide potentially more savings than the cycle - cover scheme , the clique - cover scheme , and other existing schemes .",
    "the proposed structures are called interlinked - cycle ( @xmath2 ) structures , and they generalize cycles and cliques .",
    "furthermore , we define a scheme , called the interlinked - cycle cover ( @xmath3 ) scheme , that constructs index codes based on @xmath2 structures .      1 .",
    "we propose a new index - coding scheme ( called the @xmath1 scheme ) that generalizes the clique - cover scheme and the cycle - cover scheme .",
    "the new scheme constructs scalar linear index codes .",
    "we characterize a class of digraphs ( with infinitely many members ) for which the @xmath1 scheme is optimal ( over all linear and non - linear index codes ) .",
    "this means scalar linear index codes are optimal for this class of digraphs .",
    "3 .   for a class of digraphs",
    ", we prove that the @xmath1 scheme performs at least as well as the partial - clique - cover scheme .",
    "we conjecture that the result is valid in general .",
    "furthermore , we present a class of digraphs where the additive gap between these two schemes grows linearly with the number of vertices in the digraph .",
    "4 .   for a class of digraphs",
    ", we prove that the @xmath1 scheme performs at least as well as the fractional - local - chromatic - number scheme .",
    "moreover , we present a class of digraphs where the additive gap between these two schemes grows linearly with the number of vertices in the digraph . 5 .",
    "we show that the @xmath1 scheme can outperform all of the existing graph - based schemes and the composite - coding scheme in some examples .",
    "we extend the @xmath1 scheme to the fractional-@xmath1 scheme .",
    "this modified scheme time - shares multiple @xmath0 structures , and constructs vector linear index codes that can be , for certain digraphs , shorter than the scalar linear index codes obtained from the @xmath1 scheme .",
    "consider a transmitter that wants to transmit @xmath4 messages @xmath5 to @xmath4 receivers @xmath6 in a _",
    "unicast _ message setting , meaning that each message is requested by only one receiver , and each receiver requests only one message . without loss of generality",
    ", let each receiver @xmath7 request message @xmath8 , and possess side information @xmath9 .",
    "this problem can be described by a digraph @xmath10 , where @xmath11 , the set of vertices in @xmath12 , represents the @xmath13 receivers .",
    "an arc @xmath14 exists from vertex @xmath7 to vertex @xmath15 if and only if receiver  @xmath7 has packet @xmath16 ( requested by receiver @xmath17 ) as its side information .",
    "the set of the side information of a vertex @xmath7 is @xmath18 , where @xmath19 is the out - neighborhood of @xmath7 in @xmath12 .",
    "let @xmath20 and all @xmath21 be ordered sets , where the ordering can be arbitrary but fixed .    [ index code ] suppose @xmath22 for all @xmath7 and some integer @xmath23 , i.e. , each message consists of @xmath24 bits .",
    "given an index - coding problem modeled by @xmath25 , an index code ( @xmath26,@xmath27 ) is defined as follows :    1 .",
    "an encoding function for the source , @xmath28 , which maps @xmath29 to a @xmath30-bit index for some positive integer @xmath30 .",
    "2 .   a decoding function @xmath31 for every receiver @xmath7 , @xmath32 , that maps the received index code @xmath33 and its side information @xmath34 to the requested message @xmath8 .",
    "[ broadcast rate or index codelength ] the broadcast rate of an index code ( @xmath35 ) is the number of transmitted bits per received message bits at every user , or equivalently the number of transmitted coded symbols ( each of @xmath24 bits ) .",
    "this is denoted by @xmath36 , and also referred as the normalized length of the index code .",
    "[ optimal broadcast rate ] the optimal broadcast rate for a given index coding problem @xmath25 with @xmath37-bit messages is @xmath38 , and the optimal broadcast rate over all @xmath37 is defined as @xmath39 .",
    "[ maximum acyclic induced sub - digraph ] for a digraph @xmath12 , an induced acyclic sub - digraph formed by removing the minimum number of vertices in @xmath25 , is called a maximum acyclic induced sub - digraph ( mais ) .",
    "the order of the mais is denoted as @xmath40 .",
    "it has been shown that for any digraph @xmath25 and any message length of @xmath24-bits , @xmath40 lower bounds the optimal broadcast rate @xcite , @xmath41      in this sub - section , we describe the clique - cover , the cycle - cover and the partial - clique - cover schemes in detail .",
    "these schemes provide some basic intuitions about our proposed @xmath1 scheme .",
    "[ clique ] a clique is a sub - digraph where each vertex has an out - going arc to every other vertex in that sub - digraph .",
    "[ clique - covering number , @xmath42 the clique - covering number is the minimum number of cliques partitioning a digraph @xmath12 ( over all partitions ) such that if each clique is denoted as @xmath43 for @xmath44 , then @xmath45 , @xmath46 and @xmath47 ( here a vertex is a clique of size one ) .",
    "the clique - covering number is equal to the chromatic number of the underlying undirected graph of the complement digraph , i.e. , @xmath48 , where @xmath49 is the underlying undirected graph of @xmath50 , @xmath50 is the complement digraph of @xmath12 , and @xmath51 denotes the chromatic number of @xmath12 .",
    "[ clique - cover scheme ] the clique - cover scheme finds a set of disjoint cliques that provides the clique - covering number , and constructs an index code in which the coded symbol for each of the disjoint cliques is the bit - wise xor of messages requested by all of the vertices in that clique .",
    "the clique - cover scheme achieves the following rate :    the optimal broadcast rate of an index coding instance is upper bounded by the clique cover number , i.e. , @xmath52 .",
    "[ path and cycle ] a _ path _",
    "consists a sequence of distinct ( except possibly the first and last ) vertices , say @xmath53 , and an arc @xmath54 for each consecutive pair of vertices @xmath55 for all @xmath56 .",
    "we represent a path from the vertex @xmath57 to the vertex @xmath58 in a digraph @xmath12 as @xmath59 . here",
    "@xmath60 is the _ first vertex _ and @xmath58 is the _",
    "last vertex_. a path with the same first and last vertices is a _ cycle_.    [ cycle - covering number , @xmath61 the difference between the total number of vertices in @xmath12 and the maximum number of disjoint cycles in @xmath12 is the cycle - covering number .    [ cycle - cover scheme ]",
    "the cycle - cover scheme finds a set of disjoint cycles in @xmath12 that provides the cycle - covering number , and constructs an index code that has ( i ) coded symbols for each disjoint cycle ( for a cycle @xmath62 , a set of coded symbols are @xmath63 ) , and ( ii ) uncoded messages which are requested by those vertices not included in any of the disjoint cycles in @xmath12 .",
    "the cycle - cover scheme achieves the following rate :    the optimal broadcast rate of an index - coding problem is upper bounded by the cycle - covering number , i.e. , @xmath64 .",
    "a sub - digraph @xmath65 is a @xmath66-partial clique , where @xmath67 and @xmath68 is the minimum out - degree of @xmath69.[partialclique1 ]    if @xmath70 , for some positive integer @xmath71 , partition a digraph @xmath12 such that @xmath72 and @xmath73 , @xmath74 and @xmath47 , then @xmath75= \\sum_{i=1}^{m } ( \\kappa(d_i)+1),\\ ] ] and the partial - clique number of the digraph is @xmath76,\\ ] ] where the minimum is taken over all partitions .",
    "the partial - clique - cover scheme finds a set of disjoint partial cliques in @xmath12 that provides the partial - clique number , and constructs an index code that has ( i ) @xmath77 coded symbols for each disjoint @xmath66-partial clique with @xmath78 ( a partial clique uses mds codes to generate coded symbols ) , and ( ii ) an uncoded message for each disjoint @xmath66-partial clique with @xmath79 .",
    "the partial - clique - cover scheme achieves the following rate :    [ prepbrik ] the optimal broadcast rate of an index coding instance is upper bounded by the partial - clique number , i.e. , @xmath80    the partial - clique - cover scheme performs at least as well as the cycle - cover and the clique - cover schemes , i.e. , @xmath81 this is because the partial - clique - cover scheme includes the cycle - cover scheme or the clique - cover scheme as a special case . by definition ,",
    "a clique is a @xmath82-partial clique , and a cycle with @xmath83 vertices is a @xmath84-partial clique . despite the fact that the partial - clique - cover scheme uses mds codes , which require sufficiently large message length  @xmath37 in general , to construct index codes",
    ", one can find mds codes for any cycle and any clique for any @xmath37 .",
    "the clique - cover , the cycle - cover and the partial - clique - cover schemes provide scalar linear index codes .",
    "we can also construct vector linear index codes by time - sharing all possible cliques , cycles , partial cliques in their respective schemes , and these are called the fractional versions of those schemes .",
    "the fractional version can strictly decrease the broadcast rates ( over the non - fractional version ) for some digraphs , e.g. , a 5-cycle @xcite .",
    "we present an example that illustrates the importance of overlapping cycles on index coding .",
    "consider the digraph @xmath85 in fig .",
    "[ figmotivationa ] . in @xmath85 , the cycles @xmath86 and @xmath87 overlap at vertex @xmath57 , and some cycles similarly overlap at vertices @xmath88 and @xmath89 . note that @xmath90 .",
    "index codelengths for @xmath85 by existing graph - based schemes ( some schemes require a sufficiently large @xmath37 ) are depicted in table [ table:1 ] .",
    ".index codelengths for the digraph @xmath85 in fig .",
    "[ figmotivationa ] from existing schemes [ cols=\"^,^\",options=\"header \" , ]     [ table:2 ]    the index codelength provided by the aforementioned existing schemes are strictly greater than @xmath91 except the composite - coding scheme .",
    "there exist digraphs where the @xmath3 scheme outperforms the composite - coding scheme . for an example , the digraph shown in fig .",
    "[ 4a ] is a @xmath92-@xmath93 structure , and it is denoted @xmath94 .",
    "an index code from the @xmath95 scheme is @xmath96 , which is of length @xmath97 . from theorem [ theorem3 ] , @xmath98 .",
    "for @xmath99 , the index codelength provided by the composite - coding scheme is 3.5 , which is greater than @xmath100 .",
    "in this section , firstly , we extend the @xmath1 scheme using time - sharing to code over overlapping @xmath0 structures in a digraph , and to obtain vector linear index codes . secondly , we extend the definition of the @xmath0 structure in such a way that we can extend the @xmath1 scheme to code on extended @xmath0 structures .",
    "let @xmath101 denote a sub - digraph induced by a subset @xmath102 of the vertices in @xmath103 .",
    "we define a function @xmath104    the index codelength from the fractional @xmath1 scheme is represented as @xmath105 , and given by the following linear program : @xmath106,\\ s\\in s. \\nonumber        \\end{aligned}\\ ] ] here @xmath107 is the power set of @xmath108 . in the fractional @xmath1 scheme ,",
    "each sub - digraph induced by the subset @xmath102 in @xmath109 is assigned a weight @xmath110 $ ] such that the total weight of each message over all of the subsets it belongs to is at least one . in this scheme , @xmath105 is the minimum sum of weights .",
    "the @xmath1 scheme is a special case of the fractional @xmath1 scheme where @xmath111 , so @xmath112 .",
    "we start with an example that provides an insight to the extension of the @xmath0 structure .",
    "consider a digraph @xmath12 that has three cliques @xmath113 , @xmath114 and @xmath115 each of size two .",
    "let @xmath116 and @xmath117 be vertex sets of those three cliques respectively .",
    "furthermore , for the clique pair ( @xmath118 ) , all vertices in @xmath119 have out - going arcs to all vertices in @xmath120 , and the result follows similarly for clique pairs ( @xmath121 ) and ( @xmath122 ) .",
    "this digraph is depicted in fig .",
    "[ fig2a ] .",
    "one can verify that @xmath12 is a @xmath92-@xmath0 structure with an inner vertex set @xmath123 .",
    "we can not get a @xmath124-@xmath0 structure in @xmath12 .",
    "suppose that we pick @xmath125 , there is no path from vertices @xmath57 and @xmath88 to vertex @xmath124 without passing through the inner vertex @xmath89 or @xmath92 . by symmetry ,",
    "choosing any 5 vertices as an inner vertex set will have the same issue .",
    "now the @xmath1 scheme gives an index code @xmath126 of length @xmath127 .",
    "however , from the coding point of view of an @xmath0 structure , vertices @xmath124 and @xmath128 need not be separated during encoding because they have the same arc sets @xmath129 and @xmath130 , and have arcs to each other .",
    "this means we can get another index code by removing @xmath131 , and replacing @xmath132 with @xmath133 , i.e. , @xmath134 of length two . here due to the special connectivity of clique @xmath135 , we have treated it as a single vertex , and used @xmath133 in the code construction . in light of this",
    ", we will now extend the definition of an @xmath0 structure to capture cliques with such special configurations . to achieve this",
    "we define a term called a super - vertex .",
    "[ super - vertex ] in a digraph @xmath12 , let @xmath136 be a vertex set where ( i ) all vertices in @xmath136 have arcs to each other , i.e. , they form a clique , and ( ii ) every vertex @xmath137 has the same @xmath138 and the same @xmath139 .",
    "such a group of vertices ( all @xmath137 ) is called a super - vertex and denoted as @xmath140 .",
    "now we define extended @xmath0 structures and an index - coding scheme for them .",
    "[ extended @xmath0 structure ] the extended @xmath141 ( @xmath142 ) structure is defined as an @xmath0 structure that allows super - vertices in its non - inner vertex set .",
    "-15pt    [ extended @xmath1 scheme ] for any digraph @xmath12 , the extended @xmath1 ( @xmath143 ) scheme finds a set of disjoint @xmath142 structures covering @xmath12 .",
    "it then codes each of these @xmath142 structures using the code construction described in the following :    * each super - vertex ( non - inner vertices ) is treated as a single vertex during the construction and the encoding process of the @xmath142 structure .",
    "* we consider the message requested by the super - vertex to be the xor of all messages requested by the vertices forming the super - vertex .",
    "* each of these @xmath142 structures are treated as an @xmath0 structure , and an index code is constructed using the @xmath144 scheme .",
    "along with super - vertices , and taking their definition into account , one can prove the validity of the code constructed by the @xmath143 scheme similar to the proof of proposition [ propositionvalidic ] .",
    "denote the length of the index code produced by the @xmath143 scheme by @xmath145 .    for a digraph @xmath12 ,",
    "the index codelength obtained from the @xmath143 scheme is a better upper bound to the optimal broadcast rate than the codelength obtained from the @xmath1 scheme , i.e. , @xmath146 .",
    "it follows from the definition of @xmath142 structures that include @xmath0 structures as special cases .",
    "graph - based approaches have been shown to be useful for index coding , in which cycles play an important role . prior to this work ,",
    "disjoint cycles and disjoint cliques ( including the timeshared version ) were used to construct index codes . in this work",
    ", we attempted to extend the role of cycles on index coding .",
    "we took a step further and showed the benefits of coding on interlinked - cycle structures ( one form of overlapping cycles ) .",
    "our proposed scheme generalizes coding on disjoint cycles and disjoint cliques . by identifying a useful interlinked - cycle structure",
    ", we were able to characterize a class of infinitely many graphs where scalar linear index codes are optimal .",
    "for some classes of digraphs , we proved that the @xmath1 scheme performs at least as well as some existing schemes such as the partial - clique - cover scheme and the fractional - local - chromatic - number scheme .",
    "furthermore , for a class of digraphs , we proved that the partial - clique - cover scheme and the @xmath1 scheme have linearly - growing additive gap in index codelength with the number of vertices in the digraphs .",
    "we proved a similar result for the fractional - local - chromatic - number scheme and the @xmath1 scheme for another class of digraphs .",
    "we extended the @xmath1 scheme , to allow time - sharing over all possible @xmath0 structures in digraphs .",
    "we also extended the @xmath0 structure to allow super vertices as its non - inner vertices .",
    "however , it remains an open problem to identify cycles overlapping in other useful ways .",
    "a @xmath147-@xmath0 structure @xmath148 has some properties captured in the following lemmas , which will be used to prove proposition [ propositionvalidic ] . here",
    "we consider @xmath149 and @xmath150 as any two distinct directed rooted trees present in @xmath148 with the root vertices @xmath7 and @xmath17 respectively .",
    "[ lemma1 ] for any vertex @xmath151 , and @xmath152 , the set of leaf vertices that fan out from the common vertex @xmath153 in each tree is a subset of @xmath154 .    in a tree @xmath149 ( see fig .  [ fig3 ] ) , for any vertex @xmath155 and @xmath152 , let @xmath156 be a set of leaf vertices that fan out from vertex @xmath153 .",
    "if vertex @xmath157 , then there exists a path from @xmath153 to @xmath17 in @xmath149 .",
    "however , in @xmath150 , there is a path from @xmath17 to @xmath153 .",
    "thus in the sub - digraph , a path present in any @xmath149 also present in @xmath148 . ] @xmath148 , we obtain a path from @xmath153 to @xmath17 ( via @xmath149 ) and vice versa ( via @xmath150 ) . as a result , a cycle including non - inner vertices and only one inner vertex ( i.e. , @xmath17 ) exists .",
    "this cycle is an i - cycle , and condition 1 ( i.e. , no i - cycle ) for @xmath148 is violated .",
    "hence , @xmath158 . in other words , @xmath159",
    "similarly , @xmath160 .     and @xmath150 with root vertices @xmath7 and @xmath17 respectively , and a non inner vertex @xmath153 in common .",
    "here we have used solid arrow to indicate an arc , and dashed arrow to indicate a path.,height=196 ]    [ lemma2 ] for any vertex @xmath161 , and @xmath152 , the out - neighborhood of vertex @xmath153 is same in both trees , i.e. , @xmath162 .    here the proof is done by contradiction .",
    "let us suppose that @xmath163 .",
    "for this proof we refer to fig .",
    "this proof has two parts . in the first part",
    ", we prove that @xmath164 , and then prove that @xmath165 in the second part .",
    "( part 1 ) suppose that @xmath166 . from lemma [ lemma1 ] , @xmath167 is a subset of @xmath168 .",
    "now pick a vertex @xmath169 that belongs to @xmath168 such that @xmath170 but @xmath171 ( such @xmath169 exists since we suppose that @xmath166 , and we swap the indices @xmath7 and @xmath17 if @xmath172 ) . in tree @xmath149 , there exists a directed path from vertex @xmath7 , which includes @xmath153 to the leaf vertex @xmath169 .",
    "let this path be @xmath173 .",
    "similarly , in tree @xmath150 , there exists a directed path from vertex @xmath17 , which does nt include @xmath153 ( since @xmath171 ) , and ends at the leaf vertex @xmath169 .",
    "let this path be @xmath174 . in the digraph @xmath148",
    ", we can also obtain a directed path from @xmath17 which passes through @xmath153 ( via @xmath175 ) , and ends at the leaf vertex @xmath169 ( via @xmath149 ) .",
    "let this path be @xmath176 .",
    "the paths @xmath174 and @xmath177 are different , which indicates the existence of multiple i - paths from @xmath17 to @xmath169 in @xmath148 , this violates the condition 2 for @xmath148 .",
    "consequently , @xmath164 .",
    "( part 2 ) now we pick a vertex @xmath178 such that , without loss of generality , @xmath179 but @xmath180 ( such @xmath178 exists since we assumed that @xmath163 , and we swap the indices @xmath7 and @xmath17 if @xmath181 ) . furthermore , we have two cases for @xmath178 , which are ( case 1 ) @xmath182 , and ( case 2 ) @xmath183 .",
    "case 1 is addressed in the first part of this proof . on the other hand , for case 2 ,",
    "we pick a leaf vertex @xmath184 such that there exists a path ( see fig .  [ fig3 ] ) that starts from @xmath153 followed by @xmath178 , and ends at @xmath185 , i.e. , @xmath186 exists in @xmath149 .",
    "a path @xmath187 exists in @xmath150 .",
    "thus a path @xmath188 exists in @xmath148 . from the first part of the proof",
    ", we have @xmath164 , so @xmath189 . now in @xmath150 , there exists a path from @xmath17 to @xmath185 , which includes @xmath153 followed by a vertex @xmath190 such that @xmath191 and @xmath192 ( as @xmath193 ) , and the path ends at @xmath185 , i.e. , @xmath194 which is different from @xmath188 .",
    "note that in trees @xmath149 and @xmath150 , only the root and the leaf vertices are from @xmath195 , so multiple i - paths are observed at @xmath185 from @xmath17 .",
    "this violates condition 2 for @xmath148 .",
    "consequently , @xmath196 .",
    "[ lemma3 ] if a vertex @xmath197 such that @xmath198 , then its out - neighborhood is the same in @xmath149 and in @xmath148 , i.e. , @xmath199 .    for any @xmath197 from lemma  [ lemma2 ] , @xmath165 for all @xmath200 . since @xmath201",
    ", vertex @xmath153 must have the same out - neighborhood in @xmath148 as well .",
    "[ proof of proposition [ propositionvalidic ] ] from , all @xmath202 which are non - inner vertices , can decode their requested messages .",
    "this is because the coded symbol @xmath203 is the bitwise xor of the messages requested by @xmath17 and its all out - neighborhood vertices , and any @xmath17 knows messages requested by all of its out - neighborhood vertices as side information .    for an inner vertex @xmath7 , rather than analyzing the sub - digraph @xmath148",
    ", we will analyze its tree @xmath204 , and show that it can decode its message from the relevant symbols in @xmath205 .",
    "we are able to consider only the tree @xmath149 due to the lemma [ lemma3 ] .",
    "now let us take any tree @xmath149 .",
    "assume that it has a height @xmath206 where @xmath207 .",
    "the vertices in @xmath149 are at various depths , i.e. , @xmath208 from the root vertex @xmath7 .",
    "the root vertex @xmath7 has depth zero , and any vertex at depth equal to the height of the tree is a leaf vertex .",
    "firstly , in @xmath149 , we compute the bitwise xor among coded symbols of all non - leaf vertices at depth greater than zero , i.e. , @xmath209 .",
    "however , in @xmath149 , the message requested by a non - leaf vertex , say @xmath210 , at a depth strictly greater than one , appears exactly twice in @xmath211 ;    1 .",
    "once in @xmath212 , where @xmath213 is parent of @xmath30 in tree @xmath149 , and 2 .",
    "once in @xmath214 . refer to for mathematical details .",
    "thus they cancel out each other while computing @xmath215 in the tree @xmath149 .",
    "hence , in the tree @xmath149 , the resultant expression is the bitwise xor of    1 .",
    "messages requested by all non - leaf vertices at depth one , and 2 .",
    "messages requested by all leaf vertices at depth strictly greater than one .",
    "refer to for mathematical details .",
    "secondly , in @xmath149 , we compute @xmath216 ( refer to for mathematical details ) which yields the bitwise xor of    1 .",
    "the messages requested by all non - leaf vertices at depth one , which are out - neighbors of @xmath7 , 2 .",
    "the messages requested by all leaf vertices at depth one , which are also out - neighbors of @xmath7 , and 3 .",
    "the message requested by @xmath7 , i.e. , @xmath8 .",
    "this is because the message requested by each leaf vertex at depth strictly greater than one in the tree @xmath149 is present in both the resultant terms of @xmath215 and in @xmath217 , thereby canceling out itself in @xmath216 .",
    "hence , @xmath216 yields the bitwise xor of @xmath8 and @xmath218 . as @xmath7 knows all @xmath218 as side - information",
    ", any inner vertex @xmath7 can decode its required message from @xmath216 .",
    "the mathematical computations of @xmath215 and @xmath219 in the tree @xmath149 are as follows :      @xmath220     + where ,    @xmath221 , and    @xmath222    here is obtained because each @xmath223 has only one parent in @xmath149 , and we exclude all @xmath223 whose parent is @xmath7 , and @xmath224 is bitwise xor of messages requested by all of the leaf vertices not in the out - neighborhood of @xmath7 .",
    "if we expand @xmath225 as per the group of vertices according to their depth , we get    @xmath226 \\hskip-2pt       \\right ] \\hskip-3pt \\dotsc \\hskip-2pt       \\right ] \\hskip-2pt       \\right ] \\nonumber \\\\       & = \\bigoplus \\limits_{j\\in n^+_{t_i}(i)\\setminus v_{\\mathrm{i } } } x_{j}.            \\end{aligned}\\ ] ]    note that the intermediate terms in @xmath225 cancel out ( we have used the same color to indicate the terms that cancel out each other ) .",
    "now substituting @xmath225 of and @xmath227 of in , we get @xmath228      @xmath229      let @xmath256 be a @xmath89-@xmath0 structure having an inner - vertex set @xmath257 .",
    "now we prove that any non - inner vertices of @xmath258 belonging to an i - path could not contribute to form a cycle including only non - inner vertices of @xmath256 . to show this , we start by picking two inner vertices @xmath259 and @xmath178 , and the i - path @xmath260 .",
    "we assume that the i - path includes @xmath261 non - inner vertices , i.e. , @xmath262 .",
    "further , let @xmath263 be denoted by @xmath264 .",
    "if @xmath265 , then @xmath266 for @xmath267 . now for @xmath268 , we have the following in @xmath256 :    * @xmath269 , @xmath270 and @xmath271 can not contain any vertex in @xmath264 of @xmath260 because of the following : 1 .",
    "if @xmath269 or @xmath270 contains any vertex @xmath272 , then @xmath273 ( part of @xmath260 ) and @xmath274 ( part of @xmath269 or @xmath270 ) form an i - cycle at @xmath259 .",
    "the existence of the i - cycle in @xmath256 contradicts the definition of an @xmath0 structure .",
    "if @xmath271 contains any vertex @xmath272 , then @xmath275 ( part of @xmath271 ) and @xmath276 ( part of @xmath260 ) form an i - cycle at @xmath178 .",
    "the existence of the i - cycle in @xmath256 contradicts the definition of an @xmath0 structure .",
    "* one can verify that only the remaining i - paths @xmath277 and @xmath278 can contain vertices in @xmath264 without forming an i - cycle in @xmath256 .",
    "now for @xmath260 and @xmath277 , these two i - paths must form a directed rooted tree @xmath279 with the root vertex @xmath259 ( by the definition of an @xmath0 structure ) .",
    "thus these two i - paths alone could not form a cycle including only non - inner vertices . furthermore ,",
    "if @xmath260 and @xmath277 contain some common non - inner vertices , then let a vertex @xmath280 , which is in @xmath279 , be the vertex from where @xmath279 branches to @xmath178 and @xmath169 ( refer to fig .  [ abc1 ] ) .",
    "* if they contain some common non - inner vertices , then let @xmath281 be the first vertex where @xmath260 and @xmath278 meet each other ( refer to fig .",
    "[ abc2 ] ) . considering only these two i - paths ,",
    "a cycle including only non - inner vertices can form only if a part of @xmath278 contributes to form a path from @xmath282 to @xmath280 for some @xmath283 .",
    "this path is not possible because multiple i - paths would be created from @xmath259 or @xmath169 to @xmath178 in @xmath256 ( contradiction of the definition of an @xmath0 structure ) .",
    "in fact , both the i - paths have the same destination , i.e. , @xmath178 , so there must be only one path from @xmath284 to @xmath178 common in both of them ( to avoid any multiple i - paths ) .    for @xmath277 and @xmath278 ,",
    "if these i - paths contain a non - inner vertex @xmath153 in common , then @xmath285 ( part of @xmath278 ) and @xmath286 ( part of @xmath277 ) forms an i - cycle at @xmath169 ( contradiction to the definition of an @xmath0 structure ) .",
    "thus @xmath277 and @xmath278 can not contain any vertex in common except @xmath169 .",
    "consequently , considering @xmath260 , @xmath277 and @xmath278 ( along with assumptions that there are some common non - inner vertices in ( i ) @xmath260 and @xmath277 , and ( ii ) @xmath260 and @xmath278 ) , we end up with the structure as shown in fig .",
    "[ abc3 ] , where @xmath287 and @xmath288 .",
    "this structure contradicts one of the necessary conditions ( let this vertex be @xmath289 ) and an out - going path from a vertex in @xmath264 ( let this vertex be @xmath290 ) , for some @xmath291 , where @xmath292 .",
    "one can easily verify this necessary condition .",
    "] for any vertex in @xmath264 to contribute to form a cycle including only non - inner vertices in @xmath256 .",
    "thus there is no vertex in @xmath264 to contribute to form a cycle including only non - inner vertices in @xmath256 . due to symmetry ,",
    "the result ( any non - inner vertices of @xmath258 belonging to @xmath277 could not contribute to form a cycle including only non - inner vertices of @xmath256 ) implies similarly for non - inner vertices belonging to any of the i - paths in @xmath256 .",
    "therefore , there is no cycle among the non - inner vertices in @xmath256 .",
    "we first prove one lemma that will help to prove the optimality of the @xmath1 scheme .",
    "[ proof of theorem [ theorem3 ] ] we will show that the mais lower bound is tight for all @xmath24 .",
    "we denote the digraph which is also an @xmath0 structure by @xmath230 , and consider that it has @xmath4 vertices . for @xmath231 , the digraph contains only one vertex , and @xmath232 . for @xmath233",
    ", we have the following :    ( case 1 ) from lemma [ lemma6 ] , any cycle must include at least two inner vertices , or no inner vertex , thus if we remove @xmath234 inner vertices , then the digraph @xmath148 becomes acyclic .",
    "thus @xmath235 from theorem [ theorem1 ] , we get @xmath236 it follows from , and that @xmath237 . thus @xmath238 .",
    "( case 2 ) a @xmath239 can be viewed in two ways .",
    "the first way is considering the whole @xmath148 as a @xmath147-@xmath0 structure . the second way is considering induced sub - digraphs of @xmath239 which consist of    1 .   @xmath58 disjoint cycles together consisting of a total of @xmath240 ( @xmath241 ) non - inner vertices ( if @xmath242 or @xmath57 , then @xmath243 , which is case 1 ) , 2 .",
    "@xmath244 disjoint @xmath0 structures each with @xmath245 vertices and @xmath246 inner vertices in such a way that @xmath247 , we consider that each @xmath0 structure is also disjoint from all @xmath58 cycles among non - inner vertices , and 3 .",
    "total remaining of @xmath248 non - inner vertices ( which are not included in @xmath58 cycles , or the @xmath244 @xmath0 structures ) .",
    "now we will show that both ways of looking at @xmath148 are equivalent in the sense of the index codelength generated from our proposed scheme , and both equal to @xmath249 .",
    "we prefer the second way of viewing @xmath148 for our proof since it is easier to find the mais lower bound .    for the partitioned @xmath148 ( looking at in the second way ) ,",
    "the total number of coded symbols is the summation of the coded symbols for ( i ) each of the @xmath58 disjoint cycles ( each cycle has saving equal to one ) , ( ii ) each of the @xmath244 disjoint @xmath0 structures ( each of the @xmath0 structures has savings equal to @xmath234 ) , and ( iii ) @xmath250 uncoded symbols for the remaining non - inner vertices , i.e. , @xmath251 from and , @xmath252 , thus from both perspectives the code length is the same .    now for @xmath148 ( looking at in our second way ) , if we remove one vertex from each of the @xmath58 cycles among non - inner vertices ( @xmath58 removal in total ) , and remove @xmath253 vertices from each of the @xmath244 @xmath0 structures ( @xmath254 ) , i.e. , total removal of @xmath234 , then the digraph becomes acyclic .",
    "thus @xmath255 it follows from , , and that @xmath237 .",
    "thus @xmath238 .      in this section , firstly , for every minimal partial clique @xmath294 with @xmath295 , we prove that there exists an @xmath0 structure within it such that both of the schemes ( partial - clique - cover and @xmath144 ) provide the same savings .",
    "secondly , we conjecture that the result is valid in general ( this is the main reason that results the conjecture [ conj1 ] ) . the summary is depicted in table  [ table1 ] . finally , we prove the theorem .",
    "[ lemmaa1 ] a minimal partial clique @xmath294 with @xmath296 vertices and the minimum out - degree @xmath297 is a cycle , and both the partial - clique - cover scheme and the @xmath144 scheme achieve savings of one .",
    "the properties of @xmath294 with @xmath296 and @xmath297 are as follows : in @xmath294 , ( i ) as @xmath297 , the partial - clique - cover scheme provides the savings of one by proposition  [ lemm1 ] , ( ii ) further partitioning could not provide any savings because it is a minimal - partial - clique , and ( iii ) there exists at least a cycle because an acyclic digraph should have a sink vertex ( a vertex with out - degree zero ) , and that does not exist since @xmath297 .",
    "thus @xmath294 , which is a minimal partial clique , having all of the above properties is a cycle . from theorem",
    "[ theorem2 ] , a cycle is a @xmath88-@xmath0 structure , and the @xmath144 scheme provides savings of one by . note that such @xmath294 with @xmath298 is also a clique of order two .",
    "[ lemmaa2 ] a minimal partial clique @xmath294 with @xmath303 vertices and the minimum out - degree @xmath304 , is a clique of order @xmath305 , and @xmath294 has the savings of @xmath306 from both the partial - clique - cover scheme and the @xmath144 scheme .    in @xmath294 ,",
    "if @xmath304 , then each vertex has an out - going arc to every other vertex , which is a clique by definition . thus the partial - clique - cover scheme provides savings of @xmath306 by proposition [ lemm1 ] . from theorem  [ theorem2 ] ,",
    "a clique is a @xmath305-@xmath0 structure , and the @xmath144 scheme provides savings of @xmath306 by .",
    "[ lemmaa3 ] in any minimal partial clique @xmath294 with @xmath307 vertices and @xmath308 , there exists a @xmath89-@xmath0 structure , and @xmath294 has the savings of two from both the partial - clique - cover scheme and the @xmath144 scheme .",
    "[ def1 ] a path in the forward direction indicates a path from a vertex @xmath7 to any vertex @xmath17 such that @xmath287 , and a path in the reverse direction indicates a path from a vertex @xmath17 to any vertex @xmath7 such that @xmath309 . for simplicity , we refer a _ forward path _ to a path in the forward direction , and a _ reverse path _ to a path in the reverse direction .",
    "[ farthest path ] [ def2 ] consider a sequence of vertices labeled in an increasing order such that there are multiple paths from a vertex @xmath7 in the sequence to other vertices in the sequence . among those paths from @xmath7 , the path to the vertex with the largest label",
    "is called the farthest path from vertex @xmath7 . for an example , let @xmath310 be a sequence of vertices in an increasing order , and @xmath57 has paths to vertices @xmath311 .",
    "the path from from @xmath57 to @xmath312 is the farthest path from @xmath57 .      *",
    "a minimal partial clique @xmath294 with @xmath307 number of vertices and @xmath308 has at least one cycle by lemma [ lemmaa4 ] . without loss of generality ,",
    "denote the cycle by @xmath313 , and its vertices by @xmath314 . for simplicity ,",
    "vertices of @xmath313 are labeled in an increasing order as shown in fig .",
    "* for @xmath315 , @xmath316 denotes a path from @xmath259 to @xmath178 including only vertices and arcs of @xmath313 , and @xmath317 denotes a path from @xmath259 to @xmath178 consisting of arcs and vertices outside @xmath313 except vertices @xmath259 and @xmath178 .",
    "* for the vertices in @xmath318 ( see fig .  [ 2 ] ) , vertex @xmath57 ( the first vertex of @xmath313 ) has only forward paths to other vertices of @xmath319 ( definition  [ def1 ] ) , and vertex @xmath30 ( the last vertex of @xmath320 ) has only reverse paths to other vertices of @xmath320 ( definition  [ def1 ] ) .",
    "let @xmath321 be the first vertex in the vertex sequence that has a reverse path to any vertex in @xmath318 , i.e. , there exist a @xmath322 such that @xmath323 and all vertices in @xmath324 have no reverse path .      1 .",
    "there exists at least one cycle , @xmath313 , and 2 .   for a vertex @xmath326 ,",
    "one of its out - going arcs ( beside the arc in @xmath313 ) contribute to form a path that always returns to some vertex in @xmath313 .",
    "in @xmath294 with @xmath307 vertices and @xmath308 , there exists at least one cycle , denoted @xmath313 . this is because if any @xmath327 is acyclic , then it must contain at least one sink vertex , and there can not be sink vertices in @xmath294 since @xmath308 .",
    "assume that vertices @xmath328 such that there is an arc from @xmath301 to @xmath329 in @xmath313 .",
    "now in @xmath294 , @xmath301 has out - degree @xmath330 , and the next out - going arc of @xmath301 ( other than the arc in @xmath313 )      consider the terminal vertex of the path @xmath332 to be @xmath333 such that @xmath334 .",
    "vertex @xmath333 can not be a sink vertex because @xmath335 , and it must contribute to form a path . since there are no disjoint cycles ( all cycles are connected , otherwise any two disjoint cycles in @xmath294 provides savings of two and such @xmath327 is not a minimal partial clique with @xmath308 ) , @xmath333 must have a return path to a vertex in @xmath318 .",
    "we had considered that vertex @xmath7 of @xmath313 is the first vertex having a reverse path .",
    "now if any path @xmath336 meets path @xmath322 at some vertices , then there exists a reverse path from vertex @xmath213 to @xmath17 .",
    "this is not possible because such @xmath213 would have been the first vertex in the vertex sequence that has a reverse path ( contradiction ) .",
    "if the farthest path from @xmath17 , @xmath340 , meets any path @xmath342 at some vertices , then there exists @xmath345 .",
    "this is not possible ; otherwise , path @xmath345 would have been the farthest path ( contradiction ) .      if @xmath348 or @xmath349 , then we get a figure - of - eight structure at @xmath17 .",
    "two closed paths at @xmath17 will be ( i ) @xmath350 , and ( ii ) @xmath320 . if @xmath351 , then let @xmath352 be the common vertex which is nearest to @xmath17 in these two paths @xmath340 and @xmath346 .",
    "now we get a figure - of - eight structure at @xmath17 .",
    "two closed paths at @xmath17 will be ( i ) @xmath353 ( part of @xmath340 ) , @xmath354 ( part of @xmath346 ) , and ( ii ) @xmath320 . these closed paths are vertex - disjoint except @xmath17 .      [ proof of lemma  [ lemmaa3 ] ] the proof is done by the detailed structural analysis of the minimal partial clique @xmath294 .",
    "we divide the proof into two parts : in part - i , we prove that @xmath294 has a figure - of - eight structure ( see definition  [ fig8 ] ) at a vertex , and in part - ii , we prove there exist a @xmath89-@xmath0 structure within @xmath294 having a figure - of - eight structure .",
    "( part - i ) consider the cycle @xmath313 in @xmath294 has @xmath355 vertices .",
    "now based on @xmath313 , there are two cases in @xmath294 , and those are ( i ) @xmath313 with @xmath356 , i.e. , @xmath313 is a clique of size two , and ( ii ) @xmath313 with @xmath357 .",
    "we assume @xmath358 and @xmath359 are the two distinct vertices belonging to @xmath318 in such a way that there exist a directed arc from @xmath301 to @xmath153 . in @xmath294 , @xmath330 and",
    "the next out - going arc of @xmath301 goes out of @xmath313 , and contributes to form a path , say @xmath332 that returns to some vertex in @xmath318 by lemma [ lemmaa4 ] .",
    "( case ( i ) ) the cycle @xmath313 is a clique of size two . therefore , the path @xmath332 returns to @xmath313 either at @xmath301 or @xmath153 .",
    "now we get a figure - of - eight structure at @xmath301 if the path returns to @xmath301 , otherwise it returns to @xmath153 . for the latter case",
    ", we get a new cycle that includes the path @xmath332 ( which includes @xmath301 , some vertices other than @xmath153 ) , vertex @xmath153 and the arc from @xmath153 to @xmath301 ( i.e. , arc of the cycle @xmath313 ) .",
    "the new cycle has more than two vertices , thus this ends up with case ( ii ) .",
    "on the basis where path @xmath332 returns , we have the following sub - cases : @xmath332 returns to ( ii - a ) @xmath301 ( see in fig .  [ 1a ] ) providing a figure - of - eight structure , ( ii - b ) @xmath153 ( see in fig .",
    "[ 1c ] and [ 1d ] ) , and ( ii - c ) some vertex @xmath360 ( see in fig .  [ 1b ] ) .    for sub - case ( ii - b )",
    ", we have a vertex @xmath361 such that there is a direct arc from @xmath352 to @xmath153 .",
    "since there are no disjoint cycles , the next out - going arc of @xmath352 ( besides the arc from @xmath352 to @xmath153 ) contributes to form a path to a vertex in @xmath362 .",
    "if @xmath352 has path to @xmath301 , then we get a figure - of - eight at @xmath301 ( shown in fig .",
    "[ 1c ] ) , otherwise we have the following :    1 .",
    "@xmath352 has a path to some @xmath360 , so this ends up with sub - case ( ii - c ) ( shown in fig .  [ 1b ] ) , or 2 .",
    "@xmath352 has a path to @xmath153 , but for this case , we have another path ( shown in fig .  [ 1d ] ) from @xmath301 to @xmath153 ( beside the direct arc from @xmath301 to @xmath153 , and path including the direct arc from @xmath352 to @xmath153 ) , and in this path , we can repeat sub - case ( ii - b ) by considering the predecessor of @xmath153 in place of @xmath363 .        for sub - case",
    "( ii - c ) , note that we have a path @xmath332 , which is vertex - disjoint from @xmath313 except the first and the last vertices , which starts from any vertex @xmath364 and returns to some vertex @xmath365 .",
    "we start analyzing the sub - case ( ii - c ) in @xmath294 considering vertices in @xmath318 . for the vertices in @xmath318 ( see fig .  [ 2 ] ) , in a sequential order starting from vertex @xmath57 , we track their out - going paths ( which may include vertices not in @xmath366 ) to other vertices in @xmath318 . for this sub - case , we know that there exist a @xmath322 such that @xmath323 and all vertices in @xmath324 have only forward paths .",
    "now we consider out - going paths from @xmath17 ( the paths are always forward paths ) , and get the following subsub - cases :    1 .",
    "if the farthest path from @xmath17 is @xmath367 for some @xmath368 , then there exists a figure - of - eight at @xmath17 .",
    "two closed paths at @xmath17 will be ( i ) @xmath369 , @xmath322 , and ( ii ) @xmath367 , @xmath370 ( refer fig .",
    "if @xmath367 and @xmath322 are vertex - disjoint except @xmath17 , then by recalling the definition of @xmath371 and @xmath317 for any @xmath315 , one can show that the two closed paths are vertex - disjoint except @xmath17 .",
    "otherwise , @xmath367 and @xmath322 are not vertex - disjoint except @xmath17 , and by lemma  [ prop4 ] , one can find a figure - of - eight at @xmath17 .",
    "if the farthest path from @xmath17 is @xmath367 for @xmath372 , then there exists a figure - of - eight at @xmath17 .",
    "two closed paths at @xmath17 will be ( i ) @xmath373 , @xmath322 , and ( ii ) @xmath374 , @xmath375 for @xmath376 ( one of the forward paths of @xmath377 ) , @xmath378 ( refer fig .  [ 2b ] ) .",
    "using lemmas  [ prop2 ] and [ prop3 ] , and recalling the definition of @xmath371 and @xmath317 for any @xmath315 , one can show that these two closed paths are vertex - disjoint except @xmath17 .",
    "3 .   otherwise , the farthest path from @xmath17 is @xmath340 for some @xmath379 . starting from @xmath17 , we have at least two forward paths to some vertices in @xmath318 such that these paths are vertex - disjoint except @xmath17 .",
    "we assume these paths are path - a ( the path from @xmath17 to @xmath380 ) and path - b ( the path from @xmath17 to @xmath213 ) .",
    "paths @xmath381 and @xmath367 will be path - a and path - b respectively ( refer fig .  [ 3 ] ) . now considering the out - going paths from @xmath380 into account ( the paths are always forward paths ) , we get the following subsubsub - cases : 1 .",
    "if the farthest path from @xmath380 is @xmath382 for some @xmath376 , then there exists a figure - of - eight at @xmath17 .",
    "two closed paths at @xmath17 will be ( i ) path - a , @xmath382 , @xmath378 , and ( ii ) path - b , @xmath383 , @xmath322 ( refer fig .  [ 3a ] ) .",
    "using lemmas  [ prop2 ] and [ prop3 ] , and recalling the definition of @xmath371 and @xmath317 for any @xmath315 , one can show that these two closed paths are vertex - disjoint except @xmath17 .",
    "if the farthest path from @xmath380 is @xmath382 for @xmath384 , then there exists a figure - of - eight at @xmath17 .",
    "two closed paths at @xmath17 are ( i ) path - a , @xmath385 , @xmath322 , and ( ii ) path - b , @xmath386 , @xmath387 for @xmath388 ( one of the forward paths of @xmath377 ) , @xmath389 ( refer fig .  [ 3b ] ) .",
    "if @xmath367 and @xmath322 are vertex - disjoint except @xmath17 , then by using lemmas  [ prop2 ] and [ prop3 ] , and recalling the definition of @xmath371 and @xmath317 for any @xmath315 , one can show that the two closed paths are vertex - disjoint except @xmath17 .",
    "otherwise , @xmath367 and @xmath322 are not vertex - disjoint except @xmath17 , and by lemma  [ prop4 ] , one can find a figure - of - eight at @xmath17 .",
    "3 .   otherwise , the farthest path from @xmath380 is @xmath382 for some @xmath390 .",
    "the union of path - b and @xmath391 give new path - a and we update @xmath392 .",
    "similarly , the union of path - a and @xmath382 give new path - b and we update @xmath393 ( refer fig .",
    "[ 3c ] ) . considering new path - a , new path - b , and updating @xmath394 , we repeat the subsubsub - cases of subsub - case 3 . during this iteration ,",
    "if we get subsubsub - case ( a ) or ( b ) , then there is a figure - of - eight . otherwise , we have subsubsub - case ( c ) , where @xmath213 strictly increase to a value up to @xmath377 .",
    "however , when @xmath213 reaches @xmath377 , we must have either subsubsub - case ( a ) or ( b ) .",
    "now for the figure - of - eight structure at @xmath301 in @xmath294 ( see fig .",
    "[ fig4 ] ) , consider a vertex @xmath153 in a cycle @xmath299 ( indicated in blue color ) , and a vertex @xmath395 in another cycle @xmath300 ( indicated in red color ) in such a way that both @xmath153 and @xmath395 have direct arcs going to @xmath301 .",
    "one of the out - going arcs of @xmath153 must contribute to form a path , say @xmath332 , returning to a vertex in @xmath396 .",
    "this is because all other cases are not possible ;    * @xmath332 can not return to any vertex in @xmath397 , otherwise a disjoint cycle to @xmath300 will be created .",
    "* @xmath332 can return to @xmath301 , but for this case , we have another path from @xmath153 to @xmath301 ( beside path including direct arc from @xmath153 to @xmath301 ) , and in this path , we can repeat the case by considering the predecessor of @xmath301 in place of @xmath153 .",
    "thus this case ends up with the same consideration as of the cycle @xmath299 with the vertex @xmath153 having direct arc to the vertex @xmath301 .",
    "* @xmath332 must return to some vertex in @xmath398 and @xmath399 due to lemma [ lemmaa4 ] .",
    "now in a similarly way , one of the out - going arcs of @xmath395 must also contribute a path to a vertex in @xmath398 other than @xmath301 .",
    "rearrange @xmath294 to get the structure in fig .",
    "now consider @xmath400 .",
    "we can see that any vertex in @xmath401 has only one i - path each to other two vertices in @xmath401 with no i - cycles .",
    "thus a @xmath89-@xmath0 exists in @xmath294 ( for an example , see fig .  [ 123 ] ) .",
    "consecutively , the @xmath144 scheme provides savings of two by .",
    "again , for @xmath294 , the partial - clique - cover scheme provides savings of two by proposition [ lemm1 ] .      for all minimal partial cliques that we have analyzed , there exists an ( @xmath402)-@xmath141 structure within each minimal partial clique having the minimum out - degree @xmath403 .",
    "we conjecture that this holds in general ( the following conjecture is not a part of the proof of the theorem [ theorem4 ] , but this provides an intuition about the conjecture [ conj1 ] ) .        [ proof of theorem  [ theorem4 ] ] given a digraph @xmath12 , if minimal partial cliques , partitioning the digraph to provide partial - clique number , have @xmath404 , then using the @xmath1 scheme on each of the minimal partial cliques , we achieve @xmath405 ( by using lemmas  [ lemmaa1 ] , [ lemmaa2 ] and [ lemmaa3 ] , and considering zero savings for @xmath406 from any schemes ) .",
    "the @xmath1 scheme may produce a shorter index code by considering a different partitioning of the digraph ( for an example , see fig .",
    "[ ex1b ] and [ ex1a ] ) .",
    "[ eg3 ] this example illustrates that for the class of digraphs stated in theorem  [ theorem4 ] , the @xmath1 scheme performs as least as well as the partial - clique - cover scheme .",
    "consider two digraphs that are depicted in fig .",
    "the digraph in fig .",
    "[ ex1b ] has more savings from the @xmath1 scheme than that obtained from the partial - clique - cover scheme , and the digraph in fig .",
    "[ ex1a ] has equal savings from both schemes .",
    "[ prop6 ] for any digraph @xmath12 of the class a , the index codelength obtained from the partial - clique - cover scheme and the @xmath1 scheme are @xmath147 and @xmath411 respectively , i.e. , @xmath412 and @xmath413 .",
    "if any minimal partial clique @xmath415 in @xmath12 of the class a includes a vertex @xmath416 for any @xmath417 , then @xmath418 .",
    "this is because the out - degree of any vertex @xmath416 in @xmath12 is two , i.e. , @xmath419 by construction .",
    "now any minimal partial clique without any vertex in @xmath420 has @xmath421 .",
    "this is because for any vertex in @xmath422 , only one out - neighbor is in this set , and the rest are in @xmath420 .",
    "so , any minimal partial clique in the digraph can have @xmath423",
    ". now by proposition [ lemm1 ] , we know that @xmath424 .      in @xmath12 , we try to construct a minimal partial clique @xmath294 that has @xmath425 ( we do not need to consider @xmath294 having @xmath426 because of lemma [ lemma10 ] ) by starting from @xmath294 with only one vertex and then adding vertices into its vertex set in such a way that we can obtain @xmath425 .",
    "we start from any vertex @xmath416 for an @xmath417 ( we will show a similar result if we start from some vertex @xmath7 ) .",
    "let @xmath427 be the vertex set of @xmath327 .",
    "now we include both of the two out - neighbor vertices of @xmath416 , i.e. , vertices in @xmath428 in @xmath429 . if we include only one out - neighbor vertex of @xmath416 in @xmath429 , then @xmath430 resulting @xmath431 .",
    "the new vertex - induced sub - digraph @xmath294 has @xmath432 , and @xmath431 because @xmath433 . to get a minimum out - degree of two",
    ", we must include another vertex in @xmath434 from @xmath435 . by symmetry",
    ", it does not make any difference which vertex to add .",
    "we arbitrarily choose @xmath436 , for some @xmath437 .",
    "now the new vertex - induced sub - digraph @xmath294 has @xmath438 for a @xmath17 .",
    "here @xmath439 because @xmath440 .",
    "we further include all vertices in @xmath441 in @xmath442 because @xmath443 , and if we include only one of its out - neighbor vertices , then @xmath431 . the new @xmath294 has @xmath444 and @xmath445 .",
    "further , including any vertex set in @xmath446 could not increase @xmath447 because any @xmath294 must have @xmath448 ( lemma [ lemma10 ] ) .",
    "if we start building @xmath294 with some @xmath449 , we will end up with a sub - digraph ( i ) that includes @xmath450 for some @xmath451 where @xmath452 , or ( ii ) that includes @xmath453 for some @xmath451 where @xmath454 and @xmath455 .",
    "altogether , any minimal partial clique with @xmath308 must contain @xmath456 for some @xmath451 where @xmath454 .",
    "however , @xmath294 is not the minimal because by simply considering two partial cliques among the vertices in @xmath294 , i.e. , partial cliques with vertex sets @xmath457 and @xmath458 , we get savings of two ( one in each ) .    for a minimal partial clique @xmath294 in @xmath12 of the class",
    "a , lemma [ lemma10 ] provides @xmath423 , and lemma [ lemma11 ] proves that there exists no minimal partial clique with @xmath425 . thus the minimal partial cliques in a digraph @xmath12 of the class a are only cycles . for this case ,",
    "the cycle - cover scheme and the partial - clique - cover scheme for @xmath12 are the same . since any cycle must include two vertices from @xmath422 , @xmath459 . the minimal partial cliques with vertex sets @xmath460",
    "provide @xmath461 .    consider a vertex set @xmath462 with @xmath147 number of vertices . in the digraph @xmath12",
    ", any vertex @xmath463 has only one path each to all other vertices in @xmath464 such that only the first and the last vertices of each of these paths belong to @xmath465 ( i.e. , i - path ) .",
    "moreover , there is no i - cycle at any vertex in @xmath465 .",
    "thus this forms an @xmath0 structure with inner - vertex set @xmath465 .",
    "now from , @xmath466 . thus @xmath467 .",
    "a.  blasiak , r.  d. kleinberg , and e.  lubetzky , `` broadcasting with side information : bounding and approximating the broadcast rate , '' _ ieee trans .",
    "inf . theory _ ,",
    "59 , no .  9 , pp . 58115823 , sept .",
    "2013 .",
    "s.  e. rouayheb , a.  sprintson , and c.  georghiades , `` on the index coding problem and its relation to network coding and matroid theory , '' _ ieee trans .",
    "inf . theory _ ,",
    "56 , no .",
    "3187  3195 , jul ."
  ],
  "abstract_text": [
    "<S> we consider a graphical approach to index coding . </S>",
    "<S> while cycles have been shown to provide coding gain , only disjoint cycles and cliques ( a specific type of overlapping cycles ) have been exploited in existing literature . in this paper </S>",
    "<S> , we define a more general form of overlapping cycles , called the interlinked - cycle ( @xmath0 ) structure , that generalizes cycles and cliques . </S>",
    "<S> we propose a scheme , called the interlinked - cycle - cover ( @xmath1 ) scheme , that leverages @xmath0 structures in digraphs to construct scalar linear index codes . </S>",
    "<S> we characterize a class of infinitely many digraphs where our proposed scheme is optimal over all linear and non - linear index codes . </S>",
    "<S> consequently , for this class of digraphs , we indirectly prove that scalar linear index codes are optimal . </S>",
    "<S> furthermore , we show that the @xmath1 scheme can outperform all existing graph - based schemes ( including partial - clique - cover and fractional - local - chromatic number schemes ) , and a random - coding scheme ( namely , composite coding ) for certain graphs .    </S>",
    "<S> shell : bare demo of ieeetran.cls for journals    index coding problem , unicast , linear index codes , interlinked - cycle cover , optimal broadcast rate . </S>"
  ]
}
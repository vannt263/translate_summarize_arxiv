{
  "article_text": [
    "the problem of checking the _ validity _ of quasiequations in finitely generated ( i.e. , generated by a finite set of finite algebras ) quasivarieties or , similarly , checking consequences from finite sets of formulas in finite - valued logics , is decidable and has been investigated extensively in the literature .",
    "in particular , uniform methods for generating proof systems to check validity such as tableaux , resolution , and multisequent calculi , have been developed , as have standard optimization techniques for these systems such as lemma generation and indexing ( see , e.g. ,  @xcite ) .",
    "however , checking the _ admissibility _ of quasiequations in finitely generated quasivarieties , or similarly , checking the admissibility of rules in finite - valued logics , is not so well - understood .",
    "the problem is decidable , but a naive approach leads to computationally unfeasible procedures even for small sets of small algebras .",
    "the main goal of this paper is to define uniform methods that generate computationally acceptable proof systems for checking admissibility in an arbitrary finitely generated quasivariety .",
    "intuitively , a rule is said to be admissible in a logical system if it can be added to the system without producing any new theorems .",
    "more formally , a quasiequation is admissible in a class of algebras @xmath1 if every @xmath1-unifier of the premises is a @xmath1-unifier of the conclusion , where a @xmath1-unifier of an equation @xmath2 is a substitution @xmath3 such that @xmath4 is valid in @xmath1 .",
    "admissibility plays a fundamental meta - level role in describing `` hidden properties '' of classes of algebras and logical systems .",
    "for example , establishing the completeness of a logical system with respect to some restricted class of algebras ( perhaps just one standard algebra ) often involves showing that a certain rule or quasiequation is admissible ; see , e.g. ,  @xcite for applications of the admissibility of rules in the context of fuzzy logics .",
    "also , the closely related problem of deciding unifiability of concepts can be a useful tool for database redundancy checking in description logics  @xcite .",
    "moreover , it may be possible to automatically obtain admissible rules for classes of algebras and logics that can then be used to simplify reasoning steps or to speed up derivations for checking validity .",
    "admissibility ( in tandem with unification ) has been studied intensively in the context of intermediate and transitive modal logics and their algebras  @xcite , leading in some cases to proof systems for checking admissibility  @xcite .",
    "axiomatizations and characterizations have also been obtained for certain families of finite algebras and many - valued logics , in particular ukasiewicz logics ( or classes of mv - algebras )  @xcite and other fuzzy logics  @xcite , fragments of the substructural logic r - mingle  @xcite , and classes of de morgan algebras  @xcite . however , a general theory , covering arbitrary finite algebras and finite - valued logics , has so far been lacking .",
    "the starting point for this work is the observation ( see lemma 4.1.10 of  @xcite and corollary  [ c : admfin ] below ) that for a finite set of finite algebras @xmath1 , admissibility in the quasivariety @xmath5 amounts to validity in the free algebra on @xmath6 generators @xmath7 , where @xmath6 is the maximum cardinality of the algebras in @xmath1 . since by birkhoff s theorem on the structure of free algebras  @xcite , this algebra @xmath7 is finite , checking admissibility in @xmath5 is decidable . on the other hand , even for small @xmath6 and a small set of small algebras @xmath1",
    ", the size of @xmath7 may be prohibitively large for checking validity .",
    "this is striking since validity and admissibility in @xmath5 may coincide , @xmath5 is then called _ structurally complete _ , or at least coincide for quasiequations with @xmath5-unifiable premises , in which case , @xmath5 is called _ almost structurally complete_. in other cases , @xmath5-admissibility may correspond to validity in other , often quite small , algebras .",
    "we provide general algorithms here that discover such algebras , or , more precisely , generate finite sets of finite algebras such that the @xmath5-admissibility of a quasiequation corresponds to validity in the quasivariety generated by these algebras .",
    "it is shown , moreover , that these are the smallest sets of algebras with this property with respect to a standard well - ordering on the multiset of their cardinalities .",
    "we proceed as follows .",
    "first , in section  [ s : prelim ] , we recall some basic notions from universal algebra",
    ". then in section  [ s : fingen ] , we introduce some key ideas and methods for finitely generated quasivarieties ; in particular , we apply a standard multiset well - ordering to the cardinalities of algebras in generating sets for quasivarieties , and provide an algorithm for finding the ( unique up to isomorphism ) minimal generating set of a finitely generated quasivariety .",
    "section  [ s : admfree ] provides characterizations of admissibility , unifiability , structural completeness , and almost structural completeness .",
    "these characterizations are then exploited in section  [ s : algorithms ] to define corresponding algorithms , and illustrated using a selection of well - known finite algebras , confirming some known results from the literature , and establishing new ones . in section  [ s :",
    "logics ] , the approach is extended to finite - valued logics , where the designated values as well as the underlying finite algebra play a significant role .",
    "finally , in section  [ s : concluding ] , we conclude with some remarks on future directions for this research .",
    "let us first recall some basic ideas from universal algebra , referring to  @xcite for further details . given an algebraic language @xmath8 ( i.e. , without relation symbols ) , an _",
    "@xmath9 is an algebraic structure consisting of a set @xmath10 ( the universe ) and an @xmath6-ary function @xmath11 corresponding to each @xmath6-ary function symbol @xmath12 of @xmath8 ( as usual , calling nullary functions _",
    "constants _ ) .",
    "we call @xmath9 _ finite _ if @xmath10 is a finite set and @xmath8 consists of finitely many function symbols",
    "congruence _ on an @xmath8-algebra @xmath9 is an equivalence relation @xmath13 on @xmath10 satisfying for each @xmath6-ary function symbol @xmath12 of @xmath8 : @xmath14 implies @xmath15 .",
    "the congruences of @xmath9 form a complete lattice @xmath16 with bottom element @xmath17 and top element @xmath18 , where the meet of a set of congruences on @xmath9 is just the intersection of those congruences . given @xmath19 , the _ quotient algebra of @xmath9 by @xmath13 _ is the @xmath8-algebra @xmath20 with universe @xmath21 consisting of the equivalence classes @xmath22 for @xmath23 with functions defined for each @xmath6-ary function symbol @xmath12 of @xmath8 by @xmath24 .",
    "term algebras @xmath25 are defined over a set of variables @xmath26 in the usual way , writing just @xmath27 when @xmath26 is a fixed countably infinite set , and letting @xmath28 stand for arbitrary members of the universe @xmath29 called _",
    "@xmath8-terms_. an _",
    "@xmath8-equation _ is an ordered pair of @xmath8-terms , written @xmath2 .",
    "@xmath8-clause _ is defined as an ordered pair @xmath30 of finite sets of @xmath8-equations , written @xmath31 , and called an _ @xmath8-quasiequation _ if @xmath32 and an _ @xmath8-negative clause _ if @xmath33 . as usual ,",
    "if the language is clear from the context , we may omit the prefix @xmath8 .",
    "let us fix @xmath1 to be a class of @xmath8-algebras , noting that often in what follows @xmath1 will consist of a finite set of @xmath8-algebras @xmath34 , and in this case we typically omit brackets .",
    "given a finite set of @xmath8-equations @xmath35 , we write @xmath36 and say that the @xmath8-clause @xmath31 is _ @xmath1-valid _ , if for every @xmath37 and homomorphism @xmath38 , @xmath39 recalling that @xmath40 .",
    "we also say that @xmath41 is _",
    "@xmath1-satisfiable _ if @xmath42 for some @xmath37 and homomorphism @xmath38 .",
    "the class @xmath1 is said to be _",
    "axiomatized _ by a set of @xmath8-clauses @xmath43 if @xmath1 is the class of @xmath8-algebras @xmath9 such that all @xmath8-clauses in @xmath43 are @xmath9-valid .",
    "@xmath1 is called a _ variety _ , _ quasivariety _ , or _ antivariety _ if it is axiomatized by a set of @xmath8-equations , @xmath8-quasiequations , or @xmath8-negative clauses , respectively . the variety @xmath44 , quasivariety @xmath5 , and antivariety @xmath45 _ generated by _",
    "@xmath1 are the smallest variety , quasivariety , and antivariety containing @xmath1 , respectively .",
    "moreover , let @xmath46 , @xmath47 , @xmath48 , @xmath49 , @xmath50 , @xmath51 , and @xmath52 be the class operators of taking homomorphic images , isomorphic images , subalgebras , products , ultraproducts , non - empty ultraproducts , and homomorphic preimages , respectively .",
    "then @xmath53 , @xmath54 , and @xmath55 , and if @xmath1 is a finite set of finite algebras , these last two equivalences refine to @xmath56 and @xmath57 ( see  @xcite for details ) .",
    "given a language @xmath8 and a set of variables @xmath26 such that either @xmath58 or @xmath8 contains at least one constant symbol , the term algebra @xmath25 exists and admits a congruence : @xmath59 following @xcite , we let @xmath60 and define the _ free algebra of @xmath1 over @xmath61 _ : @xmath62 then @xmath63 has the universal mapping property for @xmath1 over @xmath61 : namely , for each @xmath37 , any map from @xmath61 to @xmath10 extends to a homomorphism from @xmath63 to @xmath9 ( ( * ? ? ?",
    "* theorem ii.10.10 ) ) .",
    "if also @xmath64 , then @xmath65 ( ( * ? ?",
    "* theorem ii.10.12 ) ) .",
    "note that @xmath66 whenever @xmath67 ( also @xmath68 if @xmath1 contains at least one non - trivial algebra ) .",
    "hence we may consider for each cardinal @xmath69 , the ( unique up to isomorphism ) _ free algebra of @xmath1 on @xmath69 generators _ @xmath70 , where @xmath71 is a subalgebra of @xmath72 for cardinals @xmath73 .",
    "we note also that @xmath74 and that @xmath75 implies @xmath76 ( see  ( * ? ? ?",
    "* corollary ii.11.10 ; exercise ii.11.2 ) ) .",
    "a quasivariety @xmath0 is said to be _ finitely generated _ if @xmath77 for some finite ( generating ) set @xmath1 of finite @xmath8-algebras .",
    "our first goal in this section will be to define a reasonable measure for comparing these generating sets ; we will then describe a method for obtaining a `` smallest '' generating set according to this measure .",
    "more precisely , we apply the standard multiset well - ordering defined by dershowitz and manna in  @xcite to the multiset of the cardinalities of algebras in @xmath1 .",
    "we show that by decomposing finite @xmath8-algebras into their @xmath0-subdirectly irreducible components and appropriately refining the set of algebras obtained , we arrive at a ( unique up to isomorphism ) minimal set of @xmath8-algebras that still generates @xmath0 .    recall that a _ multiset _ over a set @xmath78 is an ordered pair @xmath79 where @xmath80 is a function @xmath81 , and is called _ finite _ if @xmath82 is finite . for a well - ordered set @xmath83 , the _ multiset ordering @xmath84 _ on the set @xmath85 of finite multisets over @xmath78 is defined by @xmath86 if @xmath87 implies that for some @xmath88 , @xmath89 and @xmath90 .",
    "it then follows that @xmath84 is a well - ordering of @xmath85  ( see  @xcite ) . as usual",
    ", we write a finite multiset of elements from @xmath78 as @xmath91 $ ] where @xmath92 may include repetitions .    a set of finite @xmath8-algebras @xmath93",
    "will be called a _ minimal generating set _ for the quasivariety @xmath94 if for every set of finite @xmath8-algebras @xmath95 : @xmath96 \\leq_m [ |b_1| , \\dots , |b_k|].\\ ] ] there are of course many measures that could be used to compare generating sets .",
    "indeed , it may seem unreasonable to view one hundred algebras with three elements as an improvement on a single algebra with four elements .",
    "however , the order is optimal in the following sense . in general , checking a quasiequation with @xmath97 variables in a finite algebra @xmath9 requires checking @xmath98 assignments of variables to elements of @xmath9 . but",
    "then checking validity in @xmath93 will involve checking fewer assignments of variables than checking validity in @xmath95 if @xmath99 \\leq_m [ |b_1| , \\dots , |b_k|]$ ] for quasiequations with sufficiently many variables .    to obtain minimal generating sets for @xmath5 where @xmath1 is a finite set of finite algebras , we consider representations of the algebras in @xmath1 using smaller algebras of @xmath5 .",
    "an algebra @xmath9 is called a _",
    "subdirect product _ of algebras @xmath34 if there exist surjective homomorphisms @xmath100 for @xmath101 such that the induced homomorphism @xmath102 is an embedding . in this case",
    ", @xmath80 is called a _ subdirect representation of @xmath9 _ and @xmath34 are called _ subdirect components _ ( for this representation ) of @xmath9 .",
    "if @xmath0 is a quasivariety and @xmath103 , then @xmath9 is called a _ @xmath0-subdirect product of @xmath104 _ and @xmath80 is called a _ @xmath0-subdirect embedding_. @xmath9 is called _",
    "@xmath0-subdirectly irreducible _ if for every @xmath0-subdirect embedding @xmath105 , @xmath9 is isomorphic to @xmath106 for some @xmath107 .",
    "we will make essential use of the following :    [ lem : qdecomp ] let @xmath0 be a quasivariety and @xmath108 .",
    "then @xmath9 is a @xmath0-subdirect product of @xmath0-subdirectly irreducible members of @xmath0 .",
    "[ lem : irr_emb ] if @xmath77 for a finite set @xmath1 of finite algebras and @xmath9 is a @xmath0-subdirectly irreducible algebra , then @xmath109 .",
    "observe now that if @xmath0 is a quasivariety and @xmath108 is a @xmath0-subdirect product of @xmath104 , then each @xmath106 is in @xmath0 by definition , and @xmath9 is isomorphic to a subalgebra of a product of members of @xmath0 . hence we obtain :    [ lem : reducegens ] let @xmath1 be a class of @xmath8-algebras and suppose that @xmath110 is obtained from @xmath1 by either ( a ) replacing @xmath37 with @xmath34 where @xmath9 is a @xmath5-subdirect product of @xmath104 , or ( b ) replacing @xmath111 with @xmath112 where @xmath113",
    ". then @xmath114 .    in particular , replacing each algebra @xmath9 in a finite set @xmath1 of finite algebras with the @xmath5-subdirectly irreducible algebras in some @xmath5-subdirect representation of @xmath9 , then removing any algebra that embeds into another algebra in the set , produces a minimal generating set for @xmath5 that is unique up to isomorphism .",
    "[ t : mingenset ] suppose that @xmath115 where @xmath106 is a finite @xmath0-subdirectly irreducible algebra for @xmath116 and @xmath117 for @xmath118 .",
    "then @xmath93 is the unique minimal generating set for @xmath0 up to isomorphism .",
    "let @xmath115 where @xmath106 is a finite @xmath0-subdirectly irreducible algebra for @xmath116 and @xmath117 for @xmath118 .",
    "suppose for a contradiction that @xmath119 and @xmath120 < _ m [ |a_1| , \\dots , |a_n|]$ ] . without loss of generality , we can suppose that @xmath121 is @xmath0-subdirectly irreducible for @xmath122 ; otherwise , by lemmas  [ lem : qdecomp ] and  [ lem : reducegens ] , @xmath121 can be replaced with the @xmath0-subdirectly irreducible components of a @xmath0-subdirect representation of @xmath121 and we obtain a smaller ( according to @xmath123 ) generating set of algebras for @xmath0 .",
    "it follows that there exists a largest @xmath124 such that there are strictly more occurrences of @xmath97 in @xmath125 $ ] than in @xmath120 $ ] , and for each @xmath126 , the number of occurrences of @xmath127 in @xmath125 $ ] and @xmath120 $ ] are equal .",
    "each @xmath106 is finite and @xmath0-subdirectly irreducible , and hence by lemma  [ lem : irr_emb ] , embeds into some @xmath121 where @xmath128 . if every @xmath106 of size @xmath97 embeds into , and is hence isomorphic to , a @xmath121 of size @xmath97 , then ( by the pigeonhole principle ) there must be two isomorphic algebras in @xmath129 , a contradiction",
    "hence , suppose without loss of generality that @xmath130 embeds into @xmath131 with @xmath132 and @xmath133 .",
    "but notice now that @xmath131 is also @xmath0-subdirectly irreducible and hence embeds into some @xmath106 with @xmath134 .",
    "so @xmath135 , a contradiction .",
    "finally , consider any minimal generating set @xmath136 for @xmath0 , and suppose for a contradiction that @xmath137 for some @xmath138 .",
    "then by lemma  [ lem : irr_emb ] , @xmath139 properly embeds into @xmath140 for some @xmath141 .",
    "but also by lemma  [ lem : irr_emb ] , @xmath140 embeds into @xmath142 for some @xmath143 .",
    "it follows that @xmath139 can be embedded into the strictly larger algebra @xmath142 .",
    "but then @xmath136 is not a minimal generating set for @xmath0 , a contradiction .    in the remainder of this section",
    ", we develop some results for @xmath0-subdirect products and @xmath0-subdirectly irreducible algebras , and present an algorithm for obtaining minimal generating sets for finitely generated quasivarieties .",
    "first , let us recall the following theorem of birkhoff , which establishes a useful relationship between subdirect representations of a given algebra @xmath9 and sets of congruences on @xmath9 .",
    "[ lem : correspondence ] if @xmath9 is a subdirect product of the family @xmath144 , then there exist for @xmath145 , congruences @xmath146 such that @xmath147 and @xmath148 .",
    "conversely , for any family of congruences @xmath149 on @xmath9 , the quotient @xmath150 is a subdirect product of the family @xmath151 .    the set of _",
    "@xmath0-congruences on @xmath9 _ is defined as @xmath152 .",
    "clearly , the above lemma also holds for @xmath0-subdirect representations of an algebra @xmath9 with respect to @xmath0-congruences .",
    "note , moreover , that the number of congruences needed to obtain a subdirect representation of a finite algebra @xmath9 is at most @xmath153 , the maximal number of coatoms of the congruence lattice @xmath16 .",
    "[ cor : correspondence ] let @xmath0 be a quasivariety and @xmath108",
    ".    1 .   if @xmath9 is a @xmath0-subdirect product of the family @xmath144 , then there exist for @xmath145 , @xmath0-congruences @xmath154 such that @xmath147 and @xmath148 .",
    "conversely , for any family of @xmath0-congruences @xmath149 on @xmath9 with @xmath148 , @xmath9 is a @xmath0-subdirect product of the family @xmath151 .",
    "@xmath9 is @xmath0-subdirectly irreducible iff the bottom element @xmath155 of @xmath156 is meet - irreducible ( i.e. , if @xmath148 for @xmath157 , then @xmath158 for some @xmath145 ) .",
    "the problem of finding the congruence closure for a given equivalence relation on a finite algebra , i.e. , the smallest congruence containing this equivalence , can be solved in polynomial time .",
    "this result was used in @xcite to provide a polynomial time algorithm for calculating a subdirect representation of a finite algebra .",
    "the problem of finding the @xmath0-congruence closure of an equivalence relation on a finite algebra with respect to a finitely generated quasivariety @xmath0 appears to be much harder , however .",
    "instead , we use here the following characterization of @xmath0-subdirectly irreducible algebras as the basis for a procedure that constructs @xmath0-subdirectly irreducible components for a @xmath0-subdirect representation of a given finite algebra without needing to calculate the @xmath0-congruence lattice .",
    "[ lem : charqsubdir ] for a finite set @xmath1 of finite algebras and @xmath159 , the following are equivalent :    1 .",
    "@xmath9 is @xmath5-subdirectly irreducible .",
    "2 .   @xmath160 .    for convenience ,",
    "let @xmath161 ( 1)@xmath162(2 ) we proceed contrapositively . if @xmath163 , then by corollary  [ cor : correspondence](a ) , @xmath9 is a @xmath5-subdirect product of algebras in @xmath164 . but also by corollary  [ cor : correspondence](b ) , since @xmath165 , @xmath9 is not @xmath5-subdirectly irreducible .",
    "( 2)@xmath162(1 ) again , we proceed contrapositively .",
    "if @xmath9 is not @xmath5-subdirectly irreducible , then combining lemma  [ lem : qdecomp ] and corollary  [ cor : correspondence ] , there exist @xmath166 such that @xmath148 and @xmath9 is a @xmath5-subdirect product of @xmath5-subdirectly irreducible algebras @xmath167 ( @xmath145 ) .",
    "but then also by lemma  [ lem : irr_emb ] , we have @xmath168 for each @xmath145 .",
    "so @xmath169 , and hence @xmath163 .",
    "* declare * @xmath170 : set * declare * @xmath171 : list * declare * @xmath9 : algebra * declare * @xmath172 : integer @xmath173    @xmath174 @xmath175 $ ] @xmath176 [ alg : mingenset : con ] @xmath177 embeds into @xmath178 [ alg : mingenset : s1 ] @xmath179 embeds into some @xmath180 \\neq { { \\ensuremath{{\\mathbf{a}}}}}\\}$ ] remove @xmath9 from @xmath181 [ alg : mingenset : dela ] @xmath182 [ alg : mingenset : e1 ] remove @xmath9 from @xmath181 [ alg : mingenset : e2 ]    we now have all the ingredients necessary to describe an algorithm mingenset ( see figure  [ alg : mingenset ] ) that calculates the ( unique up to isomorphism ) minimal generating set for a quasivariety @xmath77 , where @xmath1 is a finite set of finite @xmath8-algebras . by theorem  [ t : mingenset ] , it suffices to find a set of @xmath0-subdirectly irreducible algebras that generates @xmath0 , where no member of the set embeds into another member of the set .",
    "the algorithm proceeds by considering each @xmath37 in turn .",
    "first , the congruence lattice @xmath16 is generated ( line  [ alg : mingenset : con ] ) by checking for all equivalence relations if they are congruences .",
    "next , the congruences @xmath183 such that @xmath20 embeds into @xmath9 or some other member of @xmath1 are collected in sets @xmath184 and @xmath185 , respectively .",
    "if @xmath186 , then @xmath9 is @xmath0-subdirectly irreducible by lemma  [ lem : charqsubdir ] , so the algorithm proceeds to the next algebra in @xmath1 .",
    "otherwise @xmath187 and by lemma  [ lem : charqsubdir ] , @xmath9 is not @xmath0-subdirectly irreducible . in this case , for each @xmath188 , the algebra @xmath20 is added to @xmath1 ( line  [ alg : mingenset : addquot ] ) and @xmath9 is removed from @xmath1 ( line  [ alg : mingenset : dela ] ) .",
    "note that since the cardinalities of the added algebras are strictly smaller than the cardinality of the removed algebra , the new set of algebras is smaller according to the multiset ordering defined in section  [ s : fingen ] .",
    "hence this procedure is terminating .",
    "moreover , the resulting finite set of finite algebras must generate the quasivariety @xmath0 ( by  lemma [ lem : reducegens ] ) , contain only @xmath0-subdirectly irreducible algebras , and not contain any algebra that embeds into another member of the set ( lines  [ alg : mingenset : e1][alg : mingenset : e2 ] ) .",
    "hence by theorem  [ t : mingenset ] , we obtain :    for a finite set @xmath1 of finite @xmath8-algebras , mingenset(@xmath1 ) returns the ( unique up to isomorphism ) minimal generating set for the quasivariety @xmath5 .",
    "we remark that although the algorithm mingenset does not need to calculate the @xmath0-congruence lattice , already calculating the congruence lattice of a finite algebra can take exponential time .",
    "moreover , we make frequent use in our algorithm here of checking embeddings , which is in general an np - complete problem ( see  @xcite ) .",
    "let us fix a class of @xmath8-algebras @xmath1 .",
    "a homomorphism @xmath189 is called a _",
    "@xmath1-unifier _ of a set @xmath41 of @xmath8-equations if @xmath190 for every @xmath191 ; in this case , @xmath41 is said to be _",
    "@xmath1-unifiable_. an @xmath8-quasiequation @xmath192 is _",
    "@xmath1-admissible _ if every @xmath1-unifier of @xmath41 is a @xmath1-unifier of @xmath2 . in this section ,",
    "we present characterizations of @xmath1-unifiability , @xmath1-admissibility , and related properties , emphasizing their close relationship to free algebras .",
    "the characterizations obtained will then be used in section  [ s : algorithms ] to develop algorithms for checking these properties in the context of finitely generated quasivarieties .",
    "let us first take a closer look at @xmath1-unifiability , noting that a finite set @xmath41 of @xmath8-equations is @xmath1-unifiable if and only if the @xmath8-negative clause @xmath193 is not @xmath1-admissible ( equivalently , when @xmath1 contains a non - trivial algebra , if and only if the @xmath8-quasiequation @xmath194 with @xmath195 not occurring in @xmath41 is not @xmath1-admissible ) .",
    "we will see that for checking @xmath1-unifiability , the `` optimal '' solution is to check satisfiability in the smallest finite subalgebra ( if such an algebra exists ) of @xmath196 .",
    "[ l : unif ] the following are equivalent for any class @xmath110 of @xmath8-algebras :    1 .",
    "@xmath41 is @xmath1-unifiable  iff  @xmath41 is @xmath110-satisfiable .",
    "2 .   @xmath197 .",
    "recall that @xmath197 is equivalent to the condition that an @xmath8-negative clause @xmath193 is @xmath110-valid iff it is @xmath196-valid .",
    "however , @xmath193 is @xmath110-valid iff @xmath41 is not @xmath110-satisfiable and @xmath193 is @xmath196-valid iff @xmath41 is not @xmath196-satisfiable . for the equivalence of ( 1 ) and ( 2 )",
    ", it suffices therefore to show that @xmath41 is @xmath196-satisfiable iff @xmath41 is @xmath1-unifiable .",
    "suppose first that @xmath198 satisfies @xmath41 .",
    "then any homomorphism @xmath199 defined such that @xmath200 for each variable @xmath201 is a @xmath1-unifier of @xmath41 .",
    "conversely , if @xmath202 is a @xmath1-unifier of @xmath41 , then the homomorphism @xmath198 defined by @xmath203 for each variable @xmath201 satisfies @xmath41 .",
    "[ p : unif ] let @xmath1 be a class of @xmath8-algebras and @xmath204 .    1 .",
    "@xmath41 is @xmath1-unifiable  iff  @xmath41 is @xmath205-satisfiable .",
    "2 .   if @xmath205 is a smallest finite subalgebra of @xmath196 and @xmath110 is a class of @xmath8-algebras such that @xmath41 is @xmath1-unifiable iff @xmath41 is @xmath110-satisfiable , then @xmath206 for each @xmath207 .",
    "\\(a ) by assumption , @xmath208 , so @xmath209 . but also , since @xmath210 and @xmath211 has the universal mapping property for @xmath44 over countably infinitely many generators , we obtain a homomorphism @xmath212 defined by @xmath213 for every variable @xmath201 for some fixed @xmath214 . hence @xmath215 $ ]",
    "is a subalgebra of @xmath205 and @xmath216 .",
    "so @xmath217 and the result follows by lemma  [ l : unif ] .",
    "\\(b ) let @xmath205 be a smallest finite subalgebra of @xmath196 and suppose that @xmath110 is a class of @xmath8-algebras such that @xmath41 is @xmath1-unifiable iff @xmath41 is @xmath110-satisfiable .",
    "then by lemma  [ l : unif ] and part ( a ) , @xmath218 . hence if @xmath219 , then clearly @xmath206 .",
    "[ ex : demorganuni ] the variety @xmath220 of de morgan algebras is generated as a quasivariety by the @xmath221-element algebra @xmath222 consisting of a distributive bounded lattice with an involutive negation defined as follows :    ( -4,-0.5)(4,3 ) ( 0,0)(1,1 ) ( 1,1)(0,2 ) ( 0,0)(-1,1 ) ( -1,1)(0,2 ) ( 0,0)(-1,1)(1,1)(0,2 ) ( 0,-0.3)@xmath223 ( -1.2,1)@xmath224 ( 1.2,1)@xmath225 ( 0,2.3)@xmath226 ( 1.3,1.2)(1.5,1.4)(1.7,1)(1.5,0.6)(1.3,0.8 ) ( -1.3,1.2)(-1.5,1.4)(-1.7,1)(-1.5,0.6)(-1.3,0.8 ) ( 0,0.2)(0,1.8 )    since there are constants in the language of @xmath227 , the smallest algebra for checking @xmath220-unifiability is the @xmath228-element ground algebra @xmath229 : i.e. , the @xmath228-element boolean algebra .",
    "that is , checking unifiability amounts to checking classical satisfiability .",
    "e.g. , @xmath230 is not @xmath220-unifiable , since in the @xmath228-element boolean algebra , @xmath231 and @xmath232 .",
    "the case of the `` constant - free '' variety @xmath233 of de morgan lattices , generated as a quasivariety by @xmath234 , is not so immediate .",
    "however , there is also a smallest @xmath228-element subalgebra of @xmath235 with elements corresponding to @xmath236 and @xmath237 .",
    "so checking @xmath233-unifiability amounts again to checking classical satisfiability .",
    "let us turn our attention now to admissible quasiequations , recalling the following useful characterizations of admissibility in terms of free algebras and generated subvarieties .",
    "[ t : eqadm ] the following are equivalent :    1 .",
    "@xmath192 is @xmath1-admissible .",
    "@xmath192 is @xmath5-admissible .",
    "3 .   @xmath238 .",
    "4 .   @xmath239 .",
    "[ ex : lattices ] the following quasiequations , expressing meet and join semi - distributivity in the language of lattices with @xmath240 and @xmath241 , are satisfied by all free lattices ( see  @xcite ) , and are therefore admissible in the variety of lattices : @xmath242 \\{x \\lor y { \\approx}x \\lor z\\ } & { \\rightarrow } & x \\lor y { \\approx}x \\lor ( y \\land z ) .",
    "\\end{array}\\ ] ] similarly , the quasiequations below expressing torsion - freeness in a language of groups with @xmath243 , @xmath244 , and @xmath245 are satisfied by all free groups , and are hence admissible in the variety of groups : @xmath246    given a class @xmath1 of @xmath8-algebras , we will be interested in determining when the @xmath1-admissibility of quasiequations coincides with their @xmath110-validity in another class of @xmath8-algebras @xmath110 . by theorem  [ t : eqadm ] , this is the case exactly when @xmath247 . the next result provides a further useful characterization of this situation .",
    "[ p : adm ] the following are equivalent :    1 .",
    "@xmath192 is @xmath1-admissible  iff  @xmath248 .",
    "2 .   @xmath247 .",
    "3 .   @xmath249 and @xmath250 .",
    "\\(1 ) @xmath251 ( 2 ) follows directly from theorem  [ t : eqadm ] .",
    "\\(2 ) @xmath162",
    "( 3 ) suppose that @xmath247",
    ". then @xmath249 .",
    "moreover , @xmath252 , so @xmath250 .",
    "\\(3 ) @xmath162",
    "( 2 ) suppose that @xmath249 and @xmath250",
    ". then clearly @xmath253 .",
    "but also @xmath254 . that is ,",
    "hence @xmath256 and @xmath257 .    for some well - behaved classes of algebras ,",
    "admissibility and validity coincide .",
    "more precisely , a class @xmath1 of @xmath8-algebras is said to be _ structurally complete _ if it satisfies the condition : @xmath258 the following characterization then follows almost immediately from theorem  [ t : eqadm ] :    [ p : bergman ] the following are equivalent :    1 .",
    "@xmath1 is structurally complete .",
    "2 .   @xmath259 .",
    "3 .   @xmath260 and @xmath261 implies @xmath262 .",
    "the variety @xmath263 of boolean algebras , generated as a quasivariety by the @xmath228-element algebra @xmath264 , is structurally complete .",
    "it suffices to observe that @xmath265 embeds into @xmath266 via a mapping that sends @xmath267 and @xmath268 to their respective equivalence classes , and hence that @xmath269 .",
    "[ ex : m5n5 ] a _ modular lattice _ @xmath270 may be characterized as a lattice satisfying the equation @xmath271 .",
    "famously , a lattice @xmath270 is non - modular if and only if the lattice @xmath272 ( below ) embeds into @xmath270 ( see  ( * ? ? ?",
    "* theorem  i.3.5 ) ) .",
    "but since @xmath272 is non - modular , also @xmath273 ( which must satisfy the same equations ) is non - modular .",
    "so @xmath272 embeds into @xmath273 , and @xmath274 is structurally complete .",
    "similarly , it is well - known that a lattice @xmath275 is distributive if and only if neither @xmath272 nor @xmath276 ( below ) embeds into @xmath270 ( see  ( * ? ? ?",
    "* theorem  i.3.6 ) ) .",
    "since @xmath276 is non - distributive and modular , also @xmath277 is non - distributive and modular .",
    "so @xmath276 embeds into @xmath277 , and @xmath278 is structurally complete .",
    "( 0,-2)(5.94,1.5 ) ( 0.86,1.2 ) ( 0.06,0.4 ) ( 0.06,-0.4 ) ( 0.86,-1.2 ) ( 1.66,0.0 ) ( 4.66,0.0 ) ( 4.66,1.2 ) ( 4.66,-1.2 ) ( 5.86,0.0 ) ( 3.46,0.0 ) ( 0.06,0.4)(0.86,1.2 ) ( 1.66,0.0)(0.86,1.2 ) ( 0.06,0.4)(0.06,-0.4 ) ( 0.06,-0.4)(0.86,-1.2 ) ( 0.86,-1.2)(1.66,0.0 ) ( 3.46,0.0)(4.66,-1.2 ) ( 4.66,-1.2)(5.86,0.0 ) ( 5.86,0.0)(4.66,1.2 ) ( 4.66,1.2)(3.46,0.0 ) ( 4.66,-1.2)(4.66,0.0 ) ( 4.66,0.0)(4.66,1.2 ) ( 0.9,-1.6)@xmath272 ( 4.7,-1.6)@xmath276    for certain other classes , admissibility and validity coincide for quasiequations with unifiable premises .",
    "more precisely , we call a class @xmath1 of @xmath8-algebras _ almost structurally complete _ if it satisfies the condition : @xmath279 the next result provides a useful characterization of this situation :    [ thm : asc ] the following are equivalent for any @xmath280 :    1 .",
    "@xmath1 is almost structurally complete .",
    "2 .   @xmath281 .",
    "3 .   @xmath282 .",
    "\\(1 ) @xmath162",
    "( 2 ) suppose that @xmath1 is almost structurally complete . to establish @xmath281 , it suffices to show that a quasiequation @xmath192 is valid in all algebras @xmath283 for @xmath37 iff it is valid in @xmath196 .",
    "suppose first that @xmath284 .",
    "then by theorem  [ t : eqadm ] , either @xmath41 is not @xmath1-unifiable or @xmath192 is @xmath1-valid . in the first case , by proposition  [ p : unif ] ,",
    "@xmath41 is not @xmath112-satisfiable , so @xmath192 is valid in @xmath283 for all @xmath37 . in the second case",
    ", @xmath192 is valid in @xmath285 for all @xmath37 .",
    "conversely , if @xmath192 is valid in @xmath283 for each @xmath37 , then either @xmath41 is not @xmath112-satisfiable or @xmath192 is valid in each @xmath9 in @xmath1 . in the first case , by proposition  [ p : unif ] ,",
    "@xmath41 is not @xmath1-unifiable , so @xmath192 is valid in @xmath196 . in the second case , @xmath192 is valid in @xmath5 and hence valid in @xmath196 .",
    "\\(2 ) @xmath162 ( 1 ) suppose that @xmath286 .",
    "then whenever @xmath192 is @xmath1-admissible , it is @xmath196-valid and hence also valid in @xmath283 for all @xmath37 .",
    "if @xmath41 is @xmath1-unifiable , then , by proposition  [ p : unif ] , it is @xmath112-satisfiable .",
    "i.e. , there exists a homomorphism @xmath287 with @xmath288 . for any @xmath37 and homomorphism @xmath289 with @xmath290 , define @xmath291 by @xmath292 .",
    "then , since @xmath192 is valid in @xmath283 for all @xmath37 , @xmath293 , so @xmath294 and @xmath295",
    ". i.e. , @xmath296 .",
    "so we have shown that @xmath297 .",
    "\\(2 ) @xmath162 ( 3 ) immediate .",
    "\\(3 ) @xmath162",
    "( 2 ) suppose that @xmath282 .",
    "then also , since @xmath298 for each @xmath37 , we obtain @xmath299 . hence by proposition  [ p :",
    "adm ] , @xmath281 .",
    "[ ex : luk ] consider the @xmath228-element and @xmath300-element wajsberg algebras @xmath301 and @xmath302 where @xmath303 the algebra @xmath304 embeds into @xmath305 , as illustrated in the diagram below by the terms associated to elements , and has @xmath306 as a homomorphic image , as indicated by the arrows . hence @xmath306 is almost structurally complete .",
    "note that it is not structurally complete since , for example , @xmath307 is @xmath306-admissible , but not @xmath306-valid . on the other hand ,",
    "its implicational reduct @xmath308 is structurally complete , since it embeds into the free algebra @xmath309 .",
    "+    ( -5,-1)(10,2.5 ) ( 0,0)(3,1)(0,3)(3,4)(0,6)(3,7)(21,0.5)(21,3.5)(21,6.5 )    ( -1,0)@xmath310 ( -1,3)@xmath311 ( -1,6)@xmath312 ( 4,1)@xmath313 ( 4,4)@xmath314 ( 4,7)@xmath315 ( 22,0.5)@xmath316 $ ] ( 22,3.5)@xmath317 $ ] ( 22,6.5)@xmath318 $ ]    ( 0,0)(3,1 ) ( 0,3)(3,4 ) ( 0,6)(3,7 ) ( 0,0)(0,6 ) ( 3,1)(3,7 ) ( 21,0.5)(21,6.5 )    ( 13,0.5)(18,0.5 ) ( 13,3.5)(18,3.5 ) ( 13,6.5)(18,6.5 )    ( -7,-1)(11,-1 ) ( -7,2)(11,2 ) ( -7,5)(11,5 ) ( -7,8)(11,8 ) ( -7,-1)(-7,8 ) ( 11,-1)(11,8 ) ( -7,-2.5)@xmath319",
    "[ s : algorithms ]    in this section , we present algorithms for checking admissibility of quasiequations and related properties in finitely generated quasivarieties .",
    "we also present results on admissibility ( some new , some well - known ) for a range of examples taken from the universal algebra and non - classical logic literature . these results , obtained using a delphi implementation of the algorithms described here , are collected at the end of this section in table  [ table ] .",
    "we begin by recalling birkhoff s result that the finitely generated free algebras for a finite set @xmath1 of finite algebras are themselves finite ; more precisely :    [ l : finite ] for any set of finite algebras @xmath320 and @xmath321 : @xmath322    hence for the relatively easy task of checking @xmath1-unifiability , it suffices to find ( e.g. , through exhaustive search ) the ( unique up to isomorphism ) smallest subalgebra @xmath205 of the finite free algebra @xmath323 , noting that this is @xmath324 if the language contains constants .",
    "it then follows by proposition  [ p : unif ] that a set of equations @xmath41 is @xmath1-unifiable if and only if @xmath41 is @xmath205-valid , and indeed that there is no smaller algebra with this property .    for checking @xmath1-admissibility",
    ", we make use of a known result for finitely generated quasivarieties ( see  ( * ? ? ?",
    "* lemma 4.1.10 ) ) , obtained here as a corollary of proposition  [ p : adm ] :    [ c : admfin ] given a finite set @xmath1 of finite @xmath8-algebras with @xmath325 :    1 .",
    "@xmath192 is @xmath1-admissible  iff  @xmath327 .",
    "observe first that each @xmath37 is a homomorphic image of @xmath7 .",
    "that is , define any surjective map from the @xmath6 generators of @xmath7 to @xmath10 ; this extends to a homomorphism from @xmath7 onto @xmath9 since @xmath7 has the universal mapping property for @xmath1 over @xmath6 generators .",
    "so @xmath328 and , since also @xmath329 , ( a ) and ( b ) follow by proposition  [ p : adm ] .",
    "hence checking @xmath1-admissibility of quasiequations is decidable . however , even when @xmath1 consists of a small number of small algebras , free algebras on a small number of generators can be quite large .",
    "for example , the free algebra @xmath330 ( see example [ ex : demorganuni ] ) has @xmath331 elements .",
    "we therefore seek smaller algebras or finite sets of smaller algebras that also generate @xmath332 as a quasivariety .",
    "in fact , since @xmath333 is finitely generated , we may apply the multiset ordering defined in section  [ s : fingen ] , and seek a minimal generating set of finite algebras for this quasivariety that is unique up to isomorphism .",
    "one strategy would therefore be to apply the algorithm mingenset directly to @xmath334 . however , this method is not feasible for large free algebras , since it involves the computationally labour - intensive task of building the congruence lattice of @xmath334 .",
    "instead , we make auxiliary use of the following immediate corollary of proposition  [ p : adm ] :    [ c : adm ] given a class @xmath1 of @xmath8-algebras and @xmath335 such that @xmath336 :    1 .",
    "@xmath192 is @xmath1-admissible  iff  @xmath248 .    *",
    "declare * @xmath337 : set * declare * @xmath338 : algebra @xmath339 @xmath340 @xmath341 @xmath342 [ alg : subprehom ] @xmath343 @xmath342 add @xmath112 to @xmath344    we describe an algorithm admalgs ( see figure  [ alg : admalgs ] ) which takes as input a finite set @xmath1 of finite @xmath8-algebras and outputs the ( unique up to isomorphism ) minimal generating set for @xmath332 .",
    "first , the procedure mingenset is applied to @xmath1 ( which typically would be a small set of small algebras ) to obtain the set of @xmath8-algebras @xmath345 .",
    "then for each @xmath346 , a procedure free(@xmath347 ) is invoked to produce the smallest free algebra @xmath348 having @xmath9 as a homomorphic image .",
    "( the procedure begins by checking the smallest free algebra @xmath349 or @xmath350 , then increases the number of generators one at a time . )",
    "the algorithm then searches for progressively smaller subalgebras of @xmath348 which have @xmath9 as a homomorphic image .",
    "more precisely , the procedure @xmath351 searches for a proper subalgebra of @xmath112 that is a homomorphic image of @xmath9 , returning @xmath112 if no such algebra exists ( line  [ alg : subprehom ] ) .",
    "this process terminates with a ( hopefully reasonably small ) algebra which is added to a set @xmath352 .",
    "finally , the procedure mingenset is applied to @xmath352 .",
    "for a finite set @xmath1 of finite @xmath8-algebras , admalgs(@xmath1 ) returns the ( unique up to isomorphism ) minimal generating set for the quasivariety @xmath333 .",
    "[ ex : no_embedding ] note that given even just one algebra @xmath9 , it might not be the case that the smallest subalgebra of @xmath353 having @xmath9 as a homomorphic image is the smallest algebra that generates @xmath354 . consider the @xmath221-element algebra @xmath355 where the unary function @xmath12 and the free algebras @xmath356 are described by the following diagrams : +    ( -1.5,0)(3,3 ) ( -4,7)@xmath224 ( -7.2,7)@xmath357 ( -4.2,6.5)(-4.2,4.5 ) ( -3.8,6.5)(-3.8,4.5 ) ( -4,4)@xmath225 ( -6.5,1.5)(-4.5,3.5 ) ( -7,1)@xmath358 ( -1.5,1.5)(-3.5,3.5 ) ( -1,1)@xmath359 ( 1.5,7)@xmath356 ( 2,5)@xmath360 ( 3,5)(4.5,5 ) ( 6,5)@xmath361 ( 7.5,5.2)(9,5.2 ) ( 7.5,4.8)(9,4.8 ) ( 9.5,5)@xmath362 ( 6,2.5)(6,3)(6,3.5 ) ( 2,1)@xmath363 ( 3,1)(4.5,1 ) ( 6,1)@xmath364 ( 7.5,1.2)(9,1.2 ) ( 7.5,0.8)(9,0.8 ) ( 9.5,1)@xmath365    the smallest subalgebra of @xmath366 with @xmath357 as a homomorphic image is the @xmath367-element free algebra @xmath368 .",
    "however , @xmath369 , performed at the beginning of the algorithm admalgs , discovers that @xmath357 is a @xmath370-subdirect product of ( two copies of ) the @xmath300-element free algebra @xmath371 .",
    "hence @xmath372 and this quasivariety is structurally complete .    in the previous example , the fact that the algebra @xmath357 is structurally complete is discovered by the algorithm admalgs .",
    "however , structural completeness can also be checked more directly using the following result :    [ prop : charsc ] the following are equivalent for any finite set @xmath1 of finite @xmath8-algebras :    1 .",
    "@xmath1 is structurally complete .",
    "2 .   @xmath373 where @xmath374 .",
    "\\(1 ) @xmath162 ( 2 ) if @xmath1 is structurally complete , then , by proposition  [ p : bergman ] and corollary  [ c : admfin ] , @xmath375 where @xmath374 .",
    "so @xmath376 . but",
    "each @xmath377 is @xmath378-subdirectly irreducible , so by lemma  [ lem : irr_emb ] , @xmath9 embeds into @xmath7",
    ". i.e. , @xmath373 .",
    "\\(2 ) @xmath162 ( 1 ) if each @xmath377 embeds into @xmath7 , then @xmath379 . so @xmath1 is structurally complete by proposition  [ p : bergman ] .",
    "[ ex : pseudocomp ] proposition  [ prop : charsc ] has been used to confirm known structural completeness results for the @xmath300-element positive gdel algebra @xmath380 where @xmath381 is @xmath382 if @xmath383 , otherwise @xmath268 , and the stone algebra @xmath384 where @xmath385 . moreover",
    ", a new structural completeness result has been established for the pseudocomplemented distributive lattice @xmath386 , obtained by adding a top element to the @xmath221-element boolean lattice , and calculating the pseudocomplement .",
    "similarly , we can check almost structural completeness using the following result :    [ prop : almost ] the following are equivalent for any finite set @xmath1 of finite @xmath8-algebras and @xmath280 :    1 .",
    "@xmath1 is almost structurally complete .",
    "2 .   @xmath387 where @xmath374 .",
    "\\(1 ) @xmath162 ( 2 ) if @xmath1 is almost structurally complete , then by theorem  [ thm : asc ] and corollary  [ c : admfin ] , @xmath388 where @xmath389 .",
    "in particular , @xmath390 .",
    "but each @xmath391 is @xmath378-subdirectly irreducible , so by lemma  [ lem : irr_emb ] , @xmath205 embeds into @xmath7 .",
    "i.e. , @xmath387 .",
    "\\(2 ) @xmath162 ( 1 ) if @xmath387 , then @xmath392 .",
    "so by theorem  [ thm : asc ] , @xmath1 is almost structurally complete .",
    "[ ex : sugimono3 ] the sobociski algebra @xmath393 with operations @xmath394 is a weak characteristic matrix for the multiplicative fragment @xmath395 of the substructural logic r - mingle : @xmath314 is a theorem of @xmath395 if and only if @xmath396 . using proposition  [ prop : almost ]",
    ", we establish that @xmath397 is almost structurally complete and that @xmath398 where @xmath399 .",
    "note , moreover , that the implicational reduct @xmath400 of @xmath397 is structurally complete , which can be confirmed directly using proposition  [ prop : charsc ] or discovered automatically by admalgs .",
    "[ ex : sugimono4 ] consider now the algebra @xmath401 ( the reduct of a @xmath221-element algebra for r - mingle ) with a constant @xmath268 and operations @xmath402 admalgs produces a @xmath367-element algebra ( the product of a @xmath228-element algebra and a @xmath300-element algebra ) .",
    "remarkably , if we drop @xmath403 to obtain @xmath404 , admalgs produces a @xmath221-element algebra that is not isomorphic to @xmath405 .",
    "[ ex : demorgankleene ] recall from example  [ ex : demorganuni ] that the algebras @xmath406 and @xmath227 generate the varieties of de morgan latices and de morgan algebras , respectively , as quasivarieties .",
    "both @xmath406 and @xmath227 are homomorphic images of the corresponding free algebras on two generators ( with @xmath407 and @xmath331 elements , respectively ) but not on one generator . in the de morgan lattice case , admalgs finds a smallest suitable subalgebra isomorphic to @xmath408 , while for de morgan algebras , the smallest suitable algebra is isomorphic to @xmath409 with additional top and bottom elements .",
    "these results were established `` by hand '' in  @xcite ; our procedure here confirms them automatically .",
    "similar results were also obtained in  @xcite for kleene lattices and kleene algebras ( subvarieties of de morgan lattices and de morgan algebras , respectively ) which are generated as quasivarieties by the @xmath300-element chains @xmath410 and @xmath411 where @xmath403 swaps @xmath223 and @xmath226 and leaves @xmath412 fixed . in both cases , the smallest algebra for @xmath413 and @xmath414 , found automatically by admalgs is a @xmath221-element chain .",
    "[ e : twoalgebras ] consider the @xmath228-element and @xmath300-element chains , @xmath415 and @xmath416 where @xmath403 swaps @xmath223 and @xmath226 and leaves @xmath412 fixed .",
    "individually , these algebras are structurally complete . however , applying admalgs to @xmath417 , we find that @xmath1 is not structurally complete : both @xmath418 and @xmath419 are homomorphic images of the @xmath420-element free algebra @xmath421 , and the minimal generating set for @xmath333 consists of a single @xmath221-element algebra .",
    "we remark finally that except for example [ e : twoalgebras ] , all the case studies considered in this section ( see table  [ table ] ) involve quasivarieties generated by a single algebra with five elements or fewer , and produce minimal generating sets for checking admissibility also containing just one algebra . indeed in many of the cases considered , the quasivariety is shown to be either structurally complete or almost structurally complete .",
    "the main obstacle at present to extending our experimental results to ( larger sets of ) larger algebras is the size of the resulting free algebras ( in the worst case , size @xmath422 for @xmath6 generators and an algebra of size @xmath423 ) , both for computing these algebras and then for generating suitable subalgebras .",
    "nevertheless , we hope in future work to obtain procedures capable of treating larger examples by using heuristics to constrain the search for appropriate generating algebras .",
    ".algebras for checking admissibility [ cols=\"^,^,<,<,^\",options=\"header \" , ]",
    "[ s : logics ]    the preceding characterizations of admissibility can be adapted relatively straightforwardly to finite - valued logics . however , in this setting , the designated values of the logic  the `` true truth values ''  must also be considered , and dealt with appropriately . here",
    "we describe a method that given a finite - valued logic @xmath275 , provides another ( hopefully small ) finite - valued logic @xmath424 such that validity in @xmath424 corresponds to admissibility in @xmath275 .",
    "the more general case , where a smallest finite set of logics is sought such that validity in all members of the set corresponds to admissibility in a logic ( or logics ) , is left as an exercise for the interested reader .",
    "recall that a _ finite - valued logic _ @xmath425 for a language @xmath8 consists of a finite @xmath8-algebra @xmath9 and a set of _ designated values _ @xmath426 . given @xmath427",
    ", we let @xmath428 denote that for all homomorphisms @xmath38 , whenever @xmath429 \\subseteq d$ ] , also @xmath430 .",
    "a term @xmath314 is _",
    "@xmath275-valid _ if @xmath431",
    ". we call a logic @xmath432 for a language @xmath8 a _ sublogic _ of a logic @xmath433 if @xmath130 is a subalgebra of @xmath434 and also @xmath435 .",
    "consider now a finite - valued logic @xmath425 for a language @xmath8 and a finite set of terms @xmath427 .",
    "we say that @xmath436 is _",
    "@xmath275-unifiable _ if there exists a homomorphism @xmath437 such that @xmath438 for all @xmath439 and call @xmath3 in this case an _ @xmath275-unifier _ of @xmath436 .",
    "a rule @xmath440 is said to be _",
    "@xmath275-admissible _ if every @xmath275-unifier of @xmath436 is an @xmath275-unifier of @xmath314 .",
    "now if we define the finite - valued logic @xmath441 where @xmath442 \\in { { \\ensuremath{{\\mathbf{f}}}}}_{{\\ensuremath{{\\mathbf{a}}}}}(|a| )   : \\ { \\vdash_{{\\mathrm{l } } } } { \\ensuremath{\\varphi}}\\}$ ] , then we easily obtain the following analogue of theorem  [ t : eqadm ] .",
    "[ l : finval ] let @xmath425 be a finite - valued logic for a language @xmath8",
    ". then @xmath440 is @xmath275-admissible iff @xmath443 .",
    "the next result may then be understood as an analogue of proposition  [ p : adm ] .",
    "let @xmath444 be a finite - valued logic for a language @xmath8 , and let @xmath445 be a sublogic of @xmath446 such that there exists a surjective homomorphism @xmath447 satisfying @xmath448 \\subseteq d_a$ ] .",
    "then @xmath440 is @xmath275-admissible iff @xmath449 .",
    "if @xmath440 is @xmath275-admissible , then by lemma  [ l : finval ] , @xmath443 . since @xmath424 is a sublogic of @xmath446 , also @xmath449 .",
    "conversely , suppose that @xmath449 and that @xmath3 is an @xmath275-unifier of @xmath436 .",
    "notice that if @xmath450 , then @xmath451 and @xmath452 .",
    "so @xmath3 is also an @xmath446-unifier and @xmath424-unifier of @xmath436 . but",
    "@xmath453 and therefore @xmath454 .",
    "now consider any homomorphism @xmath455 . since @xmath456 is a surjective homomorphism from @xmath112 to @xmath9 ,",
    "there exists a homomorphism @xmath457 such that @xmath458 is the identity map on @xmath9 .",
    "but @xmath454 and hence @xmath459 .",
    "\\subseteq d_a$ ] .",
    "so @xmath461 .",
    "the @xmath300-valued ukasiewicz logic @xmath462 and jakowski logic @xmath463 may both be presented using the @xmath300-element wajsberg algebra @xmath306 ( example  [ ex : luk ] ) but with @xmath268 as designated value for @xmath462 and @xmath464 and @xmath268 as designated values for @xmath463 .",
    "that is , @xmath465 and @xmath466 . in this case",
    ", there is a smallest subalgebra of @xmath467 isomorphic to @xmath304 with a homomorphism that maps @xmath304 onto @xmath306 and sends the inherited designated values @xmath468 to @xmath268 , and @xmath469 to @xmath464 .",
    "we therefore obtain a logic @xmath470 corresponding to admissibility in @xmath462 , and another logic @xmath471 corresponding to admissibility in @xmath463 .",
    "the algorithms described in this paper have been implemented in the tool @xmath472 , a delphi xe2 implementation compiled for windows operating systems available for download online at https://sites.google.com/site/admissibility .",
    "this tool has been used in particular to obtain minimal generating sets and to check structural completeness and almost structural completeness for all @xmath300-element groupoids ( i.e. , @xmath300-element algebras with a single binary operation ) of which there are @xmath473 up to isomorphism .",
    "the cardinalities of the minimal free algebras required to check admissibility range from @xmath300 to @xmath474 , while the minimal generating algebras have at most @xmath475 elements .",
    "@xmath476 of the groupoids are structurally complete and a further @xmath477 are almost structurally complete .",
    "for further details of @xmath472 and these experiments , consult the system description  @xcite .",
    "although the algorithms described here produce minimal sets of algebras for testing admissibility ( and of course have to be run only once for a given finite set of finite algebras ) , the steps involved  generating a suitable free algebra and its subalgebras and checking homomorphic images  may be computationally unfeasible .",
    "for this reason , our case studies have consisted so far mostly of algebras with @xmath478 or fewer elements where the appropriate free algebra is of a reasonable size ( less than @xmath479 elements , say ) .",
    "this bottleneck could perhaps be addressed by introducing heuristics such as constructing and checking small subalgebras of free algebras incrementally , rather than beginning with the whole free algebra , or calculating only some and not all of the congruences in the @xmath480 algorithm .",
    "we might also hope to obtain faster algorithms for cases where the given algebras admit certain properties such as congruence distributivity or permutability .",
    "we recall finally that one of the motivations for investigating admissibility in arbitrary finite algebras or , similarly , finite - valued logics , is to obtain admissible quasiequations or rules that can be used to improve proof systems ( shortening derivations , constraining proof search , simplifying rules , etc . ) for these algebras or logics .",
    "the work reported here provides a significant step towards this goal .",
    "the next , equally ambitious , step will be to determine which rules have the potential to be useful for a given finite algebra or finite - valued logic and to add these appropriately to corresponding proof systems ."
  ],
  "abstract_text": [
    "<S> checking the admissibility of quasiequations in a finitely generated ( i.e. , generated by a finite set of finite algebras ) quasivariety @xmath0 amounts to checking validity in a suitable finite free algebra of the quasivariety , and is therefore decidable . </S>",
    "<S> however , since free algebras may be large even for small sets of small algebras and very few generators , this naive method for checking admissibility in @xmath0 is not computationally feasible . in this paper , algorithms </S>",
    "<S> are introduced that generate a minimal ( with respect to a multiset well - ordering on their cardinalities ) finite set of algebras such that the validity of a quasiequation in this set corresponds to admissibility of the quasiequation in @xmath0 . in particular , structural completeness ( validity and admissibility coincide ) and almost structural completeness ( validity and admissibility coincide for quasiequations with unifiable premises ) can be checked . </S>",
    "<S> the algorithms are illustrated with a selection of well - known finitely generated quasivarieties , and adapted to handle also admissibility of rules in finite - valued logics . </S>"
  ]
}
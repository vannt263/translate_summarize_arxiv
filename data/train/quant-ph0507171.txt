{
  "article_text": [
    "cartan s kak decomposition was discovered by the awesome mathematical genius , elie cartan ( 1869 - 1951 ) .",
    "henceforth , for succinctness , we will refer to his decomposition merely as kak .",
    "the letters kak come from the fact that in stating and proving kak , one considers a group @xmath1 with a subgroup @xmath2 and a cartan subalgebra @xmath3 , where @xmath4 and @xmath5 .",
    "then one shows that any @xmath6 can be expressed as @xmath7 , where @xmath8 and @xmath9 .",
    "an authoritative discussion of kak can be found in the book by helgason@xcite .",
    "kak was first applied to quantum computing ( qc ) by khaneja and glaser in refs.@xcite . since we are using",
    " kak \" to refer to the general theorem , we will use  kak1 \" to refer to the special case of kak used by khaneja and glaser .",
    "besides kak1 , the cosine - sine decomposition ( csd)@xcite@xcite is another decomposition that is very useful@xcite in qc .",
    "after refs.@xcite and @xcite , qc workers came to the realization@xcite that csd also follows from kak , even though csd was discovered@xcite quite independently from kak .",
    "this paper will only discuss kak1 .",
    "kak1 is the assertion that : given any @xmath10 , one can find @xmath11 and @xmath12 so that    u= ( a_1a_0)(b_1b_0 ) , where @xmath13 is an operator that is independent of @xmath14 and will be defined later .",
    "thus kak1 parameterizes @xmath15 , a 15-parameter lie group , so that 12 parameters characterize local operations , and only 3 parameters ( the 3 components of @xmath16 ) characterize non - local ones .",
    "ever since refs.@xcite appeared , many workers other than khaneja and glaser have used kak1 in qc to great advantage ( see , for example , refs.@xcite , @xcite , @xcite ) . mainly , they have used kak1 to compile 2-qubit operations . for instance ,",
    "vidal and dawson used kak1 to prove that any 2-qubit operation can be expressed with 3 or fewer cnots and some 1-qubit rotations .",
    "this paper includes a complete , rigorous proof of kak1 and related theorems .",
    "the proof of kak1 presented here is based on the well known isomorphism @xmath17 and on a theorem by eckart and young ( ey)@xcite . the ey theorem gives necessary and sufficient conditions for simultaneous svd ( singular value decomposition ) of two matrices .",
    "the relevance of the ey theorem to kak1 was pointed out in ref.@xcite .",
    "the proof of kak1 given here is a constructive proof , and it uses only linear algebra .",
    "contrast this to the proof of kak given in ref.@xcite , which , although much more general , is a non - constructive (  existence \" ) proof , and it uses advanced concepts in lie group theory .    octave is a programming environment and language that is gratis and open software .",
    "it copies most of matlab s function names and capabilities in linear algebra . a collection of octave / matlab m - files that implement the algorithms in this paper , can be found at arxiv ( under the  source \" for this paper ) , and at my website ( www.ar-tiste.com ) .",
    "in this section , we will define some notation that is used throughout this paper . for additional information about our notation ,",
    "see ref.@xcite .",
    "we will use the word  ditto \" to mean likewise and respectively .",
    "for example , ",
    "@xmath18 ( ditto , @xmath19 ) is in @xmath20 ( ditto , @xmath21 ) \" , means @xmath18 is in @xmath20 and @xmath19 is in @xmath21 .    as usual",
    ", @xmath22 will stand for the real and complex numbers . for any complex matrix @xmath20 , the symbols @xmath23 will stand for the complex conjugate , transpose , and hermitian conjugate , respectively , of @xmath20 .",
    "( hermitian conjugate a.k.a .",
    "conjugate transpose and adjoint )    the pauli matrices are defined by :    = (    cc 0 & 1 + 1 & 0    ) , = (    cc 0 & -i + i & 0    ) , = (    cc 1 & 0 + 0 & -1    ) .",
    "they satisfy = -= i , and the two other equations obtained from this one by permuting the indices @xmath24 cyclically .",
    "we will also have occasion to use the operator @xmath25 , defined by :    = ( , , ) .",
    "let @xmath26 for @xmath27 be defined by @xmath28 , where @xmath29 is the 2 dimensional identity matrix , @xmath30 , @xmath31 , and @xmath32 .",
    "now define    _ x_x_= _ x__x _ for @xmath33 .",
    "for example , @xmath34 and @xmath35 .",
    "the matrices @xmath36 satisfy = = - , [ eq - com - sigxx - sigyy ] and the two other equations obtained from this one by permuting the indices @xmath24 cyclically .",
    "we will also have occasion to use the operator @xmath13 , defined by :    = ( , , ) .",
    "define    = (    cccc 1 & 0 & 0 & i + 0 & i & 1 & 0 + 0 & i & -1 & 0 + 1 & 0 & 0 & -i    ) .",
    "it is easy to check that @xmath37 is a unitary matrix .",
    "the columns of @xmath37 are an orthonormal basis , often called the  magic basis \" in the quantum computing literature .",
    "( that s why we have chosen to call this matrix @xmath37 , because of the  m \" in magic ) .    in this paper",
    ", we often need to find the outcome @xmath38 ( or @xmath39 ) of a similarity transformation ( equivalent to a change of basis ) of a matrix @xmath40 with respect to @xmath37 . since @xmath41 can always be expressed as a linear combination of the @xmath36 , it is useful to know the outcomes @xmath42 ( or @xmath43 ) for @xmath33 .",
    "one finds the following two tables :    ^(ab)=     & & 1 & & & + & 1 & 1 & - & & - + a & & - & & -&- + & & - & & - & + & & - & & & +    , [ tab - mh - m ]    ( ab)^=     & & 1 & & & + & 1 & 1 & & -&- + a & & & -&-&- + & & -&- & & + & & & & - & +    .[tab - m - mh ]",
    "in this section , we present a proof of kak1 and related theorems .",
    "the proofs are constructive in nature and yield the algorithms used in our software for calculating kak1 .",
    "thus , even those persons that are not too enamored with mathematical proofs may benefit from reading this section .",
    "[ claim - isom3 ] define a map @xmath44 by    : su(2)so(3 ) , ( a)= ^(aa^ * ) .",
    "then @xmath44 is a well defined , onto , 2 - 1 , homomorphism .",
    "well - defined : for all @xmath45 , @xmath46 . onto : for all @xmath47 , there exist @xmath48 such that @xmath49 . 2 - 1 : @xmath44 maps exactly two elements ( @xmath20 and @xmath50 ) into one ( @xmath51 ) .",
    "homomorphism : @xmath44 preserves group operations .    [ claim - isom4 ] define a map @xmath52 by    : su(2)su(2)so(4 ) , ( a , b)= ^(ab^ * ) .",
    "then @xmath52 is a well defined , onto , 2 - 1 , homomorphism .",
    "well - defined : for all @xmath53 , @xmath54 . onto : for all @xmath55 , there exist @xmath56 such that @xmath57 . 2 - 1 : @xmath44 maps exactly two elements ( @xmath58 and @xmath59 ) into one ( @xmath60 ) .",
    "homomorphism : @xmath52 preserves group operations .",
    "theorems [ claim - isom3 ] and [ claim - isom4 ] are proven in most modern treatises on quaternions , albeit using a different language , the language of quaternions .",
    "see version 2 or higher of ref.@xcite , for proofs of theorems [ claim - isom3 ] and [ claim - isom4 ] , given in the language favored here and within the quantum computing community .",
    "[ claim - re - im - x ] suppose @xmath41 is a unitary matrix and define @xmath61 , @xmath62",
    ". then @xmath63 is an orthogonal matrix .",
    "furthermore , @xmath64 and @xmath65 are real matrices satisfying @xmath66 .",
    "furthermore , @xmath67 and @xmath68 are both real , symmetric matrices .",
    "1=x x^=(x_r + i x_i)(x_r^t - i x_i^t ) , so    [ eq - w - ortho1 ] x_r x_r^t + x_i x_i^t = 1 , and    x_i x_r^t - x_r x_i^t=0 .",
    "[ eq - w - ortho - sym1 ]    from @xmath69 we also get    [ eq - w - ortho2 ] x_r^t x_r + x_i^t x_i = 1 , and    x_i^t x_r - x_r^t x_i=0 .",
    "[ eq - w - ortho - sym2 ]    note that eqs.([eq - w - ortho1 ] ) and eqs.([eq - w - ortho2 ] ) are identical except that in eqs.([eq - w - ortho1 ] ) , the second matrix of each product is transposed , whereas in eqs.([eq - w - ortho2 ] ) , the first is .",
    "@xmath70 is clearly a real matrix , and eqs.([eq - w - ortho1 ] ) imply that its columns are orthonormal .",
    "hence @xmath70 is orthogonal .",
    "eq.([eq - w - ortho - sym1 ] ) ( ditto , eq.([eq - w - ortho - sym2 ] ) ) implies that @xmath71 ( ditto , @xmath72 ) is symmetric .    the next theorem , due to eckart and young , gives necessary and sufficient conditions for finding a pair of unitary matrices @xmath73 that simultaneously accomplish the svd ( singular value decomposition ) of two same - sized but otherwise arbitrary matrices @xmath20 and @xmath21 .",
    "the proof reveals that the problem of finding simultaneous svd s can be reduced to the simpler problem of finding simultaneous diagonalizations of two commuting hermitian matrices .",
    "the problem of simultaneously diagonalizing two commuting hermitian operators ( a.k.a .",
    "observables ) is well known to physicists from their study of quantum mechanics .",
    "[ claim - ey ] ( eckart - young ) suppose @xmath74 are two complex ( ditto , real ) rectangular matrices of the same size .",
    "there exist two unitary ( ditto , orthogonal ) matrices @xmath75 such that @xmath76 and @xmath77 are both real diagonal matrices if and only if @xmath78 and @xmath79 are hermitian ( ditto , real symmetric ) matrices .",
    "( @xmath80 ) @xmath81 and @xmath82 so they are hermitian .",
    "( @xmath83)let    a = u_a^a v_a = (    cc d & 0_2 + 0_3 & 0_4    ) be a svd of @xmath20 .",
    "thus , @xmath84 are unitary matrices , @xmath85 are zero matrices , and @xmath86 is a square diagonal matrix whose diagonal elements are strictly positive .",
    "let    b = u_a^b v_a = (    cc",
    "g & k + l & h    ) , where @xmath86 and @xmath87 are square matrices of the same dimension , @xmath88 .",
    "note that    ab^=b a^ (    cc d g^ & d l^ + 0 & 0    ) = (    cc g d & 0 + l d & 0    ) , and    a^b=b^a (    cc d g & d k + 0 & 0    ) = (    cc g^d & 0 + k^d & 0    ) .",
    "therefore ,    l = k=0 , and    d g^= gd , d g = g^d .",
    "[ eq - commute ] when written in index notation , eqs.([eq - commute ] ) become    d_i g^*_ji = g_ijd_j , d_i g_ij= g^*_jid_j , [ eq - index1 ] where the indices range over @xmath89 . eqs.([eq - index1 ] ) imply    ( d_i + d_j)(g^*_ji - g_ij)=0 . since @xmath90",
    ", we conclude that @xmath87 is a hermitian matrix .",
    "@xmath86 is hermitian too , and , by virtue of eq.([eq - commute ] ) , @xmath86 and @xmath87 commute .",
    "thus , these two commuting observables can be diagonalized simultaneously .",
    "let @xmath91 be a unitary matrix that accomplishes this diagonalization :    d = p^d p , d_g = p^g p .",
    "let    d_h = u_h^h v_h be a svd of @xmath92 .",
    "@xmath93 is a diagonal matrix with non - negative diagonal entries and @xmath94 are unitary matrices .",
    "now let    u^= (    cc p^ & 0 + 0 & u^_h    ) u^_a , v = v_a (    cc p & 0 + 0 & v_h    ) .",
    "[ eq - u - v - defs ] the matrices @xmath14 and @xmath95 defined by eq.([eq - u - v - defs ] ) can be taken to be the matrices @xmath14 and @xmath95 defined in the statement of the theorem .",
    "[ claim - odo ] if @xmath41 is a unitary matrix , then there exist orthogonal matrices @xmath96 and @xmath97 and a diagonal unitary matrix @xmath98 such that @xmath99 .",
    "let @xmath64 and @xmath65 be defined as in lemma [ claim - re - im - x ] . according to lemma [ claim - re - im - x ] , @xmath67 and @xmath68 are real symmetric matrices",
    ", so we can apply theorem [ claim - ey ] with @xmath100 and @xmath101 .",
    "thus , there exist orthogonal matrices @xmath97 and @xmath96 such that    d_r = q_l^t x_r q_r , d_i = q_l^t x_i q_r , [ eq - dr - di ] where @xmath102 are real diagonal matrices .",
    "since @xmath41 is unitary , @xmath103 is too .",
    "thus , we can define a diagonal unitary matrix @xmath98 by    e^i = d_r + i d_i .",
    "[ eq - eit ] combining eqs.([eq - dr - di ] ) and ( [ eq - eit ] ) finally yields    e^i = q_l^t x q_r .",
    "let @xmath104 and @xmath105 so that    e^i = diag ( e^i_1 , e^i_2 , e^i_3 , e^i_4 ) .",
    "let @xmath106 . according to eq.([tab - mh - m ] ) ,    ^ = e^i(k_0 + k_1 - k_2 + k_3 ) .",
    "if we set    e^i = ^ , [ eq - eit - eik ] then each point @xmath107 is mapped in a 1 - 1 onto fashion into each point @xmath106 .",
    "using the explicit forms of @xmath108 , one finds that    (    c _ 0 + _ 1 + _ 2 + _ 3    ) = (    c k_0 + k_1 + k_2 + k_3    ) , = (    cccc & & & + & & & + & & & + & & &    ) .",
    "it is easy to check that    ^-1 = .",
    "[ claim - kak1 ] ( kak1 ) if @xmath109 , then @xmath110 , where @xmath11 and @xmath106 .",
    "let x = ^x .",
    "@xmath111 is a unitary matrix , so , according to collorary [ claim - odo ] , we can find orthogonal matrices @xmath112 and a diagonal unitary matrix @xmath113 such that    x = q_l e^i q_r^t . according to theorem [ claim - isom4 ] , we can find @xmath11 such that    q_l ^= a_1a_0 , and    q_r ^= b_1b_0 . as in eq.([eq - eit - eik ] ) , set    e^i ^=. it follows that    x = ( a_1a_0)(b_1 b_0 ) .",
    "in this section we discuss how kak1 partitions @xmath15 into disjoint classes characterized by a 3d real vector @xmath16 .",
    "we will say that @xmath114 * are equivalent up to local operations * and write @xmath115 if @xmath116 where @xmath117 .",
    "it is easy to prove that @xmath118 is an equivalence relation .",
    "hence , it partitions @xmath15 into disjoint subsets ( i.e. , equivalence classes ) . if @xmath119 and @xmath12 are related as in collorary [ claim - kak1 ] , then @xmath120 .",
    "henceforth , we will call this @xmath16 a * class vector * of @xmath41 .",
    "we will say that @xmath121 and @xmath16 are * equivalent class vectors * and write @xmath122 if @xmath123 .",
    "note that the following 3 operations map a class vector into another class vector of the same class ; i.e. , the operations are class - preserving .",
    "1 .   ( shift ) suppose we shift @xmath16 by plus or minus @xmath124 along any one of its 3 components .",
    "for example , a positive , @xmath124 , x - shift would map ( k_x , k_y , k_z)(k_x + , k_y , k_z ) .",
    "this operation preserves @xmath16 s class because + e^i[(k_x + ) + k_y + k_z ] = e^i + = i. 2 .",
    "( reverse ) suppose we reverse the sign of any two components of @xmath16 .",
    "for example , an xy - reversal would map + ( k_x , k_y , k_z)(-k_x , -k_y , k_z ) . this operation preserves @xmath16 s class because + = e^i(-k_x , -k_y , k_z ) .",
    "swap ) suppose we swap any two components of @xmath16 .",
    "for example , an xy - swap would map + ( k_x , k_y , k_z)(k_y , k_x , k_z ) . this operation preserves @xmath16 s class because + e^-i(+ ) e^i(+ ) = e^i(k_y , k_x , k_z ) .",
    "define @xmath125 as the set of points @xmath12 such that    1 .",
    "@xmath126 2 .",
    "@xmath127 3 .",
    "if @xmath128 , then @xmath129 .    @xmath125 is contained within the tetrahedral region @xmath130 of fig.[fig - canon - vec ] .",
    "the 3 class - preserving operations given above generate a group @xmath131 . given any class vector @xmath12 , it is always possible to find an operation @xmath132 such that @xmath133 .",
    "indeed , here is an algorithm , ( implemented in the accompanying octave software ) that finds @xmath133 for any @xmath12 :    1 .",
    "make @xmath134 by shifting @xmath135 repeatedly by @xmath124 . in the same way , shift @xmath136 and @xmath137 into @xmath138 .",
    "2 .   make @xmath139 by swapping the components of @xmath16 .",
    "3 .   perform this step iff at this point @xmath140 .",
    "transform @xmath16 into @xmath141 ( this can be achieved by applying an xy - swap , xy - reverse , x - shift and y - shift , in that order ) . at this point , @xmath142 , but @xmath137 may be larger than @xmath136 or @xmath135 , so finish this step by swapping coordinates until @xmath139 again .",
    "4 .   perform this step iff at this point @xmath143 and @xmath144 .",
    "transform @xmath145 into @xmath146 ( this can be achieved by applying an xz - reverse and an x - shift , in that order ) .",
    "we can find a subset @xmath147 of @xmath148 such that every equivalence class of @xmath15 is represented by one and only one point @xmath16 of @xmath147 . in fact , @xmath125 defined above is one such @xmath147 .",
    "we will refer to the elements of @xmath125 as * canonical class vectors*.    we end this section by finding the canonical class vectors of some simple 2-qubit operations .    1 .   ( cnot )",
    ": @xmath149 is defined by + cnot(10)= ( 0)^n(1)= ( + cc 1 & 0 + 0 & + ) . since @xmath150 , @xmath151 , and @xmath152 , + @xmath153 + therefore , the canonical class vector of cnot is @xmath154 , which corresponds to the point @xmath21 in fig.[fig - canon - vec ] .",
    "2 .   ( @xmath155 ) from the math just performed for cnot ,",
    "it is clear that + = e^i(1-)(1- ) ~e^i .",
    "therefore , the canonical class vector of @xmath155 is @xmath156 , which corresponds to the midpoint of the segment @xmath157 in fig.[fig - canon - vec ] .",
    "3 .   ( exchanger , a.k.a .",
    "swapper ) as usual , the exchanger is defined by + e= ( + cccc 1&0&0&0 + 0&0&1&0 + 0&1&0&0 + 0&0&0&1 + ) .",
    "( note that @xmath158 ) .",
    "using eqs.([eq - com - sigxx - sigyy ] ) , it is easy to show that + e = e^-i e^i ( + + ) . therefore , the canonical class vector of @xmath159 is @xmath160 , which corresponds to the apex @xmath161 of the tetrahedron in fig.[fig - canon - vec ] .",
    "a collection of octave / matlab m - files that implement the algorithms in this paper , can be found at arxiv ( under the  source \" for this paper ) , and at my website ( www.ar-tiste.com ) .",
    "these m - files have only been tested on octave , but they should run on matlab with few or no modifications . a file called  m-fun-index.html \" that accompanies the m - files lists each function and its purpose .",
    "navin khaneja , steffen glaser ,  cartan decomposition of @xmath162 , constructive controllability of spin systems and universal quantum computing \" , quant - ph/0010100 . also",
    " cartan decomposition of @xmath163 and control of spin systems \" , chemical physics , ( 2001 ) , pages 11 - 23 ."
  ],
  "abstract_text": [
    "<S> this paper presents no new results ; its goals are purely pedagogical . </S>",
    "<S> a special case of the cartan decomposition has found much utility in the field of quantum computing , especially in its sub - field of quantum compiling . </S>",
    "<S> this special case allows one to factor a general 2-qubit operation ( i.e. , an element of @xmath0 ) into local operations applied before and after a three parameter , non - local operation . in this paper </S>",
    "<S> , we give a complete and rigorous proof of this special case of cartan s decomposition . from the point of view of qc programmers who might not be familiar with the subtleties of lie group theory </S>",
    "<S> , the proof given here has the virtues , that it is constructive in nature , and that it uses only linear algebra . the constructive proof presented in this paper </S>",
    "<S> is implemented in some octave / matlab m - files that are included with the paper . </S>",
    "<S> thus , this paper serves as documentation for the attached m - files . </S>"
  ]
}
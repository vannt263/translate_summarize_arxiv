{
  "article_text": [
    "dedicated hadronic b factory experiments as hera - b are designed as forward spectrometers , in adjustment to the huge lorentz boost under which the b decay particles are produced .",
    "the hera - b tracking concept  @xcite relies on the propagation of track candidates which have been found in the pattern tracker in the field - free area upstream through the spectrometer magnet .",
    "the _ concurrent track evolution _",
    "strategy  @xcite which employs the kalman filter technique is used to cope with the large track densities and still give a high track finding efficiency .",
    "practical implementation of this concept requires a fast and precise procedure to transport both the track parameters and its covariance matrix estimate , in spite of the inhomogeneity of the magnetic field .",
    "first solution based on a fifth - order runge - kutta method have been shown in  @xcite .",
    "this note presents the mathematical basis and the program implementation of an approach which was developed to achieve a further gain in speed , and at the same time warrant sufficient accuracy for an optimal operation of the track finding process .",
    "this was achieved by providing a set of methods which are optimized for different transport ranges , and by testing the validity of each approximation directly within the track finding application  @xcite .",
    "the kalman filter technique is used very often in high energy physics experiments .",
    "we include sec .",
    "[ applic ] in the revised version of the note to discuss the optimized implementation of the kalman filter for magnet tracking , which reduces strongly the amount of computation .",
    "it was not described in detail in @xcite .",
    "in the following we will use a coordinate system in which the @xmath0 axis points along the proton beam , the @xmath1 axis is directed normal to it in the horizontal plane , pointing towards the inside of the hera ring , and the @xmath2 axis is oriented upwards such that @xmath1 , @xmath2 and @xmath0 form a right - handed system .",
    "this system is identical to the _ arte _",
    "coordinate system defined in the appendix of  @xcite .",
    "the following choice of track parameters is suited for fixed target experiments with relatively small transverse momenta .",
    "a particle with momentum @xmath3 , charge @xmath4 and coordinates @xmath5 is described by the state vector at a reference @xmath0 coordinate : @xmath6 where @xmath1 and @xmath2 are the transverse coordinates , @xmath7 and @xmath8 are the track slopes , and @xmath9 .",
    "the parameter @xmath4 is the particle charge in units of the elementary charge .",
    "we use the following units : @xmath10 are in centimeters , @xmath11 is in gev / c and the magnetic field @xmath12 in kgauss .",
    "the trajectory of a particle in a static magnetic field @xmath13 , neglecting stochastic perturbations as energy loss and multiple scattering , must satisfy the equations of motion  @xcite  : @xmath14 where parameter @xmath15 is proportional to the velocity of light and is therefore defined as @xmath16 and the functions @xmath17,@xmath18 are @xmath19 \\;\\ ; , \\\\",
    "a_{y}=(1+t_{x}^{2}+t_{y}^2)^{\\frac{1}{2}}\\cdot   \\left[-t_{x}\\cdot(t_{y}b_{y}+b_{z } ) + ( 1+t_{y}^{2})b_{x } \\right ] \\;\\ ; .\\\\ \\end{array}\\ ] ] the initial values at @xmath20 are @xmath21 let us assume we should propagate the particle parameters from plane @xmath22 to plane @xmath0 . for solution of the equations ( [ dxdz ] ) three different methods are used .",
    "the choice depends on the distance @xmath23 between these planes .",
    "_ @xmath24 _ : a parabolic expansion of the particle trajectory is used    @xmath25    \\2 .",
    "_ @xmath26 _ : the classical fourth - order runge - kutta method  @xcite is selected to find solution of the equations ( [ dxdz ] ) .",
    "_ @xmath27 _ : a fifth - order runge - kutta method with adaptive step size control  @xcite is used .",
    "use of the kalman filter technique  @xcite for pattern recognition requires that particle parameters and their covariance matrix can be transported to the location of the next measurement .",
    "evaluation of the derivatives of the state vector components with respect to their initial values ( [ x0 ] ) is needed to transport the covariance matrix .",
    "this is achieved by integrating the equations for derivatives together with the ` zero trajectory ' ( [ dxdz ] ) .",
    "let us assume the magnetic field is smooth enough and field gradients can be neglected . in this case , the equations ( [ dxdz ] ) are invariant with respect to small shifts by @xmath1 and @xmath2 .",
    "this means that derivatives with respect to initial @xmath28 , @xmath29 are trivial :    @xmath30 to obtain equations for @xmath31 , let us differentiate equations ( [ dxdz ] ) with respect to @xmath32 and change the order of the derivative operators @xmath33 and @xmath34 on the left hand sides : @xmath35 , \\\\",
    "d / dz(\\partial t_{y } / \\partial t_{x0 } ) = &    q_{0 } \\cdot \\upsilon \\cdot \\left[(\\partial a_{y}/\\partial t_{x } ) ( \\partial t_{x}/\\partial t_{x0 } )   + ( \\partial a_{y}/\\partial t_{y } ) ( \\partial t_{y}/\\partial t_{x0 } )   \\right ] , \\\\ \\partial q / \\partial t_{x0 } \\",
    "= & 0 , \\end{array}\\ ] ] where @xmath36 initial values for the solution of equations ( [ dtx ] ) are : @xmath37 the equations for @xmath38 are similar to equations ( [ dtx ] ) , but the initial values are : @xmath39 to obtain equations for @xmath40 , let us differentiate the equations ( [ dxdz ] ) with respect to @xmath41 and change the order of the derivative operators @xmath42 and @xmath34 in the left parts : @xmath43   \\ ; , \\\\    d / dz(\\partial t_{y } / \\partial q_{0 } ) = &    \\upsilon \\cdot a_{y } + \\upsilon \\cdot q_{0 } \\cdot \\left[(\\partial a_{y}/\\partial t_{x } ) ( \\partial t_{x}/\\partial q_{0 } )   + ( \\partial a_{y}/\\partial t_{y } ) ( \\partial t_{y}/\\partial q_{0 } )   \\right ]   \\ ; , \\\\ \\partial q / \\partial q_{0 } = & 1   \\ ; . \\end{array}\\ ] ] initial values for the solution of equations ( [ dq ] ) are : @xmath44 in the case of @xmath45 the following relations between @xmath17 , @xmath18 and their derivatives are valid :    @xmath46 the procedure of evaluating the derivatives is simplified when these relations are taken into account .",
    "* approximation a * : the vector @xmath31 can be approximated as  : @xmath47 where the derivatives are solutions of the system of equations    @xmath48   \\ ; , \\\\ \\partial q / \\partial t_{x0 } \\",
    "= & 0   \\ ;   \\end{array }     \\;\\;\\;\\;\\;\\ ;   % ( 11)\\ ] ] with initial values ( [ dtx0 ] ) .",
    "the solution for the derivatives @xmath38 in the same approximation is similar  :    @xmath49 the derivatives @xmath50 are solutions of the equations ( [ dq ] ) with the initial values given in ( [ dq0 ] ) .    * approximation b * : this is the most drastic simplification - the derivatives @xmath51 as well as @xmath18 are neglected in the corresponding equations .",
    "the system of equations ( [ dtx ] ) is simplified to :    @xmath52 the solution of this system with initial values ( [ dtx0 ] ) is @xmath53 the solution of similar equations for derivatives @xmath54 is @xmath55 for the vector of derivatives @xmath56 we obtain : @xmath57 where the derivatives are solutions of the system of equations    @xmath58    with initial values from ( [ dq0 ] ) .",
    "we use the notations from @xcite to describe the practical implementation of the kalman filter technique for track following in the magnet .",
    "the system state vector ( [ x ] ) after inclusion of @xmath59 measurements is denoted by @xmath60 , and its covariance matrix by @xmath61 .",
    "the coordinate measurement corresponding to the hit @xmath59 is denoted by @xmath62 .",
    "the hera - b magnet tracking detectors ( drift tubes and micro - strip gaseous chambers ) measured only one coordinate and @xmath62 is a scalar and its covariance matrix @xmath63 contains only one element .",
    "the relation between the track parameters @xmath60 and the expected measurement @xmath62 is described by the projection matrix @xmath64 .",
    "the matrix @xmath64 has the structure : @xmath65 for a detector plane measuring only @xmath1 coordinates ( signal wires of the drift tubes or anode strips of the msgc are parallel to the @xmath2 axis ) , and @xmath66 for stereo planes rotated around the @xmath0 axis .",
    "the predicted state vector @xmath67 is determined as the solution of the equations ( [ dxdz ] ) with the initial value @xmath68 .",
    "the covariance matrix of the vector @xmath67 is obtained by the propagation of the matrix @xmath69 : @xmath70 where @xmath71 denotes the covariance matrix of the process noise and the transport matrix is @xmath72 the estimated residual and variance become @xmath73 the updating of the system state vector after inclusion of the measurement @xmath59 is obtained with the filter equations : @xmath74 with the filtered residuals @xmath75 the @xmath76 contribution of the filtered point is given by : @xmath77    ( 15.5,8 ) ( -.80,0.0)file = fig_1_1.eps , width=8.95 cm ( 6.7,4.9)(0,0)[t]a ) ( 7.7,0.0)file = fig_1_3.eps , width=8.95 cm ( 15.0,4.9)(0,0)[t]b )    because of sparse projection matrices ( [ h1],[h2 ] ) , the calculation in ( [ rk][rrk ] ) becomes rather simple . for the matrix",
    "@xmath78 the variance of estimated residuals is @xmath79 i.e. it involves 6 multiplications .",
    "here we use the notation @xmath80 for the same case , each of the five elements of the gain matrix is calculated as @xmath81 the calculation of the gain matrix includes 15 multiplications and 1 division . the most time consuming operations are the propagation of the covariance matrix in ( [ ck1 ] ) and the calculation of the covariance matrix in the filter equations ( [ kxc ] )    a typical behavior of the magnetic field components  @xcite as a function of @xmath0 is shown in fig .  [ field ] .",
    "the main bending component ( @xmath82 ) has a bell - shaped @xmath0dependence .",
    "the components @xmath83 are sizeable away from the central axis ( fig .",
    "[ field]b ) .",
    "there is clearly no region inside the magnet where the field can be regarded as homogeneous .",
    "`` numerical experiments '' with the real track finding procedures have shown that the approximation  b for derivatives is accurate enough to be used for the propagation of the covariance matrix ( [ ck1 ] ) in the case of the inhomogeneous magnetic field of hera - b . in approximation",
    "b the transport matrix has a rather sparse structure : @xmath84 where @xmath85 , and derivatives are denoted @xmath86 and @xmath87    for a short distance ( _ @xmath24 _ ) the derivatives are obtained in a parabolic expansion as : @xmath88 for a long distance we find the derivatives as the solution of the system ( [ deriveq ] ) ( initial values from ( [ dq0 ] ) ) , together with the `` zero trajectory '' ( [ dxdz ] ) , by the fourth or fifth - order runge - kutta method  @xcite .    the propagation of the covariance matrix @xmath89 in ( [ ck1 ] ) we perform in two steps .",
    "first , we define the product of two matrices @xmath90 : @xmath91 where @xmath92 and @xmath93",
    ". then the matrix @xmath94 is multiplied by @xmath95 to obtain the final symmetric matrix @xmath96 : @xmath97 the evaluation of the elements in ( [ u ] ) and ( [ uf ] ) implies 37 multiplications , that is much smaller than the 200 multiplications needed for the case of the completely filled matrix @xmath98 .",
    "the product of the matrices @xmath99 and @xmath100 in ( [ kxc ] ) is @xmath101 and for the matrix @xmath78 @xmath102 for the case with the matrix @xmath78 the covariance matrix @xmath61 is given by : @xmath103 only 40 multiplications are sufficient to obtain the matrix @xmath61 in this case and 20 multiplications for the option with the matrix @xmath104 .",
    "this has to be compared with 100 multiplications needed for the completely filled matrix @xmath105 .",
    "the optimized matrix evaluation was implemented in functions of the _ ranger _ package related to the magnet tracking  @xcite .",
    "the described approach for optimized integration of the equations  [ dxdz ] and their derivatives was implemented as a set of c++ functions included in the _ ranger _ package and used for the magnet tracking  @xcite and the track fit  @xcite .",
    "all functions are of type void . in the following , we list the definition of common parameters of these functions in c++ :    .... //",
    "//            input parameters //",
    "double z_in ;     // z value for input parameters    double p_in[5 ] ;   // vector of input track parameter ( x , y , tx , ty , q / p )    double c_in[25 ] ; // covariance matrix of input parameters    float   error[2 ] ; // desired accuracy in cm                          //",
    "error[0 ] for inner tracker region                          //",
    "error[1 ] for outer tracker region // //",
    "output parameters //    double z_out ;     // z value for output parameters    double p_out[5 ] ; // vector of output track parameters    double rkd[25 ] ;   // derivatives of output parameters with respect                      // to input                     //",
    "rkd[0 ] deriv . of p_in[0 ] with respect to p_out[0 ]                     //",
    "rkd[1 ]            p_in[0 ]                  p_out[1 ]                     //                     . .",
    ".                     //",
    "rkd[5 ]            p_in[1 ]                  p_out[0 ]                     //                     . .",
    ".                     //",
    "rkd[24 ]           p_in[4 ]                  p_out[4 ]      double c_out[25];// covariance matrix of output parameters    int     ierror ;    // error flag ( = 0 ok , = 1 particle curls ) ....    the definition of the corresponding variables in fortran is  :    .... c             c            input parameters c        real*8 z_in        ! z value for input parameters        real*8 p_in(5 )     !",
    "vector of input parameters ( x , y , tx , ty , q / p )        real*8 c_in(5,5 )   ! covariance matrix of input parameters        real   error(2 )     ! desired accuracy in cm c                            error(1 ) for inner tracker region c                            error(2 ) for outer tracker region c c            output parameters c        real*8 z_out       ! z value for output parameters        real*8 p_out(5 )    !",
    "vector of output track parameters         real*8 rkd(5,5 )    !",
    "rkd(i , j ) derivative of p_in(i ) with respect c                          to p_out(j )        real*8 c_out(5,5 ) ! covariance matrix of output parameters        integer ierror",
    "! error flag ( = 0 ok , = 1 particle curls ) ....    a typical function call in c++    ....    rk4order_(double & z_in , double * p_in , double & z_out , double * p_out ,              double * rkd , int & ierror ) ; ....    invokes function integrating equations for particle parameters and equations for derivatives in the approximation  a by a fourth - order runge - kutta method .    in fortran",
    "this function can be invoked like subroutine  :    ....        call rk4order(z_in , p_in , z_out , p_out , rkd , ierror ) ....    the differences are evident and in following , the call statements in fortran will be mentioned only .    a statement    ....        call rk4fast(z_in , p_in , z_out , p_out , rkd , ierror ) ....    effects integration of the equations for the ` zero trajectory ' and calculation of derivatives in the approximation  b by a fourth - order runge - kutta method .",
    "the function called as :    ....        call rk1fast(z_in , p_in , z_out , p_out , rkd , ierror ) ....    calculates parameters and derivatives in approximation  b using a parabolic expansion of the particle trajectory .",
    "the function evaluating particle parameters ( approximation  a for derivatives ) by a fifth - order runge - kutta method with adaptive step size control is invoked by the statement  :    ....        call rk5order(z_in , p_in , error , z_out , p_out , rkd , ierror ) ....    the corresponding function which evaluates the derivatives in approximation  b is executed by :    ....        call rk5fast(z_in , p_in , error , z_out , p_out , rkd , ierror ) ....    the function invoked as :    ....        call rk5numde(z_in , p_in , error , z_out , p_out , rkd , ierror ) ....    evaluates the output parameters by a fifth - order runge - kutta method with adaptive step size control and calculates derivatives by ` numerical differentiation ' of the output parameters as a function of the input parameters .",
    "the field gradients are not neglected in this case but the function spends by factor of 5 more computing time than rk5fast .    the `` fully automatic '' function rktrans transports particle parameters from plane @xmath22 to plane @xmath0 by means of three different methods depending on @xmath106 as it was described earlier .",
    "the derivatives are calculated in approximation  b. the call statement for this function is :    ....        call rktrans(z_in , p_in , z_out , p_out , rkd , ierror ) ....    the function rktransc uses a similar approach to transport particle parameters and the corresponding covariance matrix . the structure of the derivative matrix in approximation  b is fully exploited for maximum speed .",
    "the function can be invoked by a statement    ....        call rktransc(z_in , p_in , c_in , z_out , p_out , c_out , ierror ) ....",
    "all described functions were designed for the conditions of the complete geometry of the hera - b detector where typical transport distances are @xmath107 .",
    "the limitations of tracking precision coming from multiple scattering and measurement errors in trackers constrain the tracing accuracy required for such distances .",
    "the function rk5clip can be used to propagate particle parameters over larger distances with higher accuracy ( approximation a for derivatives ) .",
    "the call statement for this function is    ....",
    "call rk5clip(z_in , p_in , z_out , p_out , rkd , ierror ) ....    the following procedure was used for the tuning of the steering parameters .",
    "particle parameters were generated with production slopes @xmath108 uniformly distributed from @xmath109 to @xmath110 .",
    "each particle was traced by small steps from the target to the area behind the magnet @xmath111 and then traced back using rk5clip .",
    "the difference between initial and final particle coordinates was regarded as a measure of computational accuracy .",
    "the accuracy for selected steering parameters is shown in the table .",
    "as expected , the function rk5clip spends more computing time especially for low momentum ( the dependence is roughly @xmath112 )  .",
    ".the computational accuracy of rk5clip for different momenta [ cols=\"^,^,^ \" , ]     it should be noted that all described functions do not check if the magnetic field is defined in the region where the particle should be traced .",
    "the user himself must make sure that a corresponding function is invoked within the magnetic field and should use linear line propagation in the field - free case .",
    "also , an attempt to trace a very slow particle will not be successful because the equations ( 1 ) do not describe a particle curling in the magnetic field .    an additional function , called as :    ....        real zmin , zmax    !   in cm           . . .",
    "call rkzfield(zmin , zmax ) ....    returns as output the lower and upper bounds zmin , zmax ( with respect to the center of the magnet ) of the region where the field is defined by routines gufld , utfeld  @xcite .",
    "this region ( roughly @xmath113 from the center of the magnet ) includes the area where we have field measurements or at least results from the mafia calculation . at the edges of the region the magnetic field",
    "can be neglected so that simple linear line searches and fits are sufficient for pattern recognition and track fitting  @xcite .",
    "this can save computing time for event generation and reconstruction .",
    "therefore during the event simulation in hbgean  @xcite the procedure for particle tracing in the magnetic field is invoked only when the particle is within the geant volume magn .",
    "the definition of this volume can be found in the _ arte _ table gesl for the detector component magnet .",
    "note that this volume is not identical with the region of non - zero field as defined by gufld , utfeld .",
    "i am greatly indebted to rainer mankel , the author of the _ ranger _ package , for sharing with me his experience in the field of track finding and knowledge about _",
    "ranger_. i would like to thank him for the careful reading of the manuscript and the useful advices .",
    "i am indebted to g.bohm and h.kolanoski for the discussion of the revised version .",
    "i am very much grateful to desy zeuthen for the kind hospitality during my visit ."
  ],
  "abstract_text": [
    "<S> in this note we present a flexible approach to perform the propagation of track parameters and their derivatives in an inhomogeneous magnetic field , keeping the computational effort small . </S>",
    "<S> we discuss also a kalman filter implementation using this optimized computation of the derivatives .    </S>",
    "<S> = 159 mm = 239 mm = -11 mm = 2 mm = 2 mm </S>"
  ]
}
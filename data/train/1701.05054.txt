{
  "article_text": [
    "for many problem settings , model order reduction utilizing proper orthogonal decomposition ( pod ) has proven to be a powerful tool in order to reduce large scale systems to surrogate models of low dimension while preserving a good approximation quality .",
    "the range of applications of pod model order reduction ( pod - mor ) comprises a broad scope , including ( amongst others ) linear and nonlinear parabolic equations @xcite , optimal control of partial differential equations @xcite and fluid dynamics @xcite .",
    "a general introduction to pod and reduced order modeling can be found in @xcite , for example . the key idea of the pod technique is to apply a galerkin ansatz , in which the ansatz functions , i.e. the pod basis functions , contain information about the underlying dynamical system . following the approach of snapshot based pod in @xcite , the system information is retrieved from snapshots of the solution trajectory at several time instances , which are generated in a simulation .",
    "+ in practice , many simulations require adaptive strategies for the spatial discretization in order to be implementable .",
    "for example , in the simulation of cahn - hilliard systems based on diffuse interface approaches , many degrees of freedom are required at the interfacial regions in order to well resemble the steep gradient , whereas in the pure phases only little numbers of degrees of freedom are needed , see @xcite for example . utilizing a uniform mesh for such problems would drastically enlarge the computational effort and",
    "storage problems would occur .",
    "+ in @xcite adaptive finite element methods and pod reduced order modeling are considered as two different techniques in order to reduce the complexity of the numerical solution of optimal control problems .",
    "the combination of both approaches contains a major challenge .",
    "the inclusion of spatial adaptivity in the context of model reduction means , in a discrete formulation , that the snapshots at each time instance may have different lengths due to their different spatial resolutions . for this reason",
    ", the snapshot matrix can not be set up directly and the usual pod procedure can not be carried out . in this paper , we consider the combination of adaptive finite element snapshots with pod model order reduction . our perspective is based on the continuous setting , which allows us to derive a reduced order model which is independent of the underlying finite element discretization .",
    "+ the inclusion of spatial adaptivity in the pod framework is advantageous from two perspectives : on the one hand , the use of adaptive finite elements for snapshot generation can remarkably reduce the offline computation time in comparison to the use of a uniform mesh with resolution of the finest level of the adaptive grids . on the other hand , we expect to speed up the computations when solving the pod surrogate model in contrast to utilizing adaptive finite elements , since we solve pod reduced systems of low order . + in order to overcome the difficulties arising from combining pod with adaptive finite elements ,",
    "different concepts are proposed . in @xcite ,",
    "the use of dynamically adaptive meshes is combined with pod - mor for an unstructured ocean model .",
    "a fixed reference mesh is utilized , onto which the spatial adaptive snapshots are interpolated .",
    "this allows snapshots of the same lengths at each time level and the usual pod procedure can then be performed on this fixed reference mesh . in (",
    "2.4.3 ) an interpolation approach is outlined .",
    "the idea is to interpolate given snapshots of arbitrary spatial discretizations by ( piecewise ) polynomials . for the fully discrete pod setting ,",
    "the spatial discretization points are chosen appropriately for the numerical integration of the polynomials . in the context of reduced basis methods ,",
    "adaptive wavelet discretizations are used in @xcite in the offline snapshot computation phase . in @xcite ,",
    "a reduced basis method is developed which is certified by a residual bound relative to the infinite - dimensional weak solution .",
    "different adaptive strategies are considered for both the finite element and the reduced basis level . furthermore , in @xcite three numerical concepts to treat the moving free boundary for the calculation of the snapshots are compared : first a landau - type transformation , second a control volume approach and third a moving mesh approach . in contrary to the first two concepts , the number of grid points in the moving mesh approach ( r - adaptivity ) is kept fixed , but they are moved according to the evolution of the free boundary .",
    "pod is applicable with only minor modifications .",
    "recently and in parallel to our work , in @xcite pod model reduction in combination with snapshots utilizing @xmath0adaptive finite elements with fixed polynomial degree is investigated . in order to compute a pod basis , two",
    "options are considered : either all snapshots are expressed in terms of a common finite element basis or pairs of snapshots are expressed in terms of a common finite element basis of these pairs . moreover ,",
    "error statements for a parametrized elliptic boundary value problem are proved .",
    "+ the aim of this work is to derive a pod reduced order model for a general evolution equation which can be set up and solved for arbitrary finite element discretizations without using interpolation .",
    "this approach is motivated from a continuous perspective , where snapshots from different finite element spaces belong to a same hilbert space .",
    "the assembly of the snapshot matrix can be avoided by directly setting up an eigenvalue problem for which we only need the calculation of the inner product of the finite element ansatz functions .",
    "this can be computed for arbitrary finite element discretizations and suffices to set up a pod - rom .",
    "+ the paper is organized as follows : the general problem setting of an abstract parabolic evolution problem is described in section 2 .",
    "we recall the pod method in real hilbert spaces in section 3 and set up a pod eigenvalue problem which can be assembled for any finite element discretization .",
    "the pod reduced order model for arbitrary finite element discretizations is discussed in section 4 . in order to validate the quality of the pod solution",
    ", we investigate the error between the pod solution and the true solution in section 5 .",
    "numerical examples are presented in section 6 to illustrate our approach .",
    "* 2.1 problem setting * + let us specify the abstract parabolic evolution problem which we consider in the following .",
    "let @xmath1 and @xmath2 be real separable hilbert spaces such that there exists a dense and continuous embedding @xmath3 .",
    "the dual space @xmath4 can be identified with @xmath5 by the riesz representation theorem and the gelfand triple @xmath6 is formed by @xmath7 . since @xmath8 is continuously embedded in @xmath5 , there exists a constant @xmath9 such that @xmath10 for a given symmetric , @xmath8-elliptic bilinear form @xmath11 , we assume boundedness , i.e. @xmath12 and coercivity , i.e. @xmath13 let @xmath14 be the bounded linear operator associated with the bilinear form @xmath15 , i.e. @xmath16 and @xmath17 where @xmath18 denotes the dual pairing of @xmath19 and @xmath8 .",
    "moreover , we denote by @xmath20 a nonlinear operator",
    ". we are concerned with the following cauchy problem for a semilinear evolution problem .",
    "let @xmath21 be a fixed end time .",
    "for a given initial function @xmath22 and external force @xmath23 we consider the problem : find @xmath24 with @xmath25 for all @xmath26 and for almost all @xmath27 $ ] .",
    "note that it holds @xmath28 for all @xmath29 with @xmath30 and all @xmath26 in the sense of distributions in @xmath31 . +",
    "* assumption 2.1 .",
    "* for every @xmath32 and @xmath22 there exists a unique weak solution of with @xmath33;h ) \\cap h^1(0,t;v').\\ ] ] + * remark 2.2 .",
    "* under monotonicity , boundedness and lipschitz continuity assumptions on the nonlinear operator @xmath34 , existence and uniqueness results for a general abstract evolution equation of type are proved in ( * ? ? ?",
    "4.1 ) or ( * ? ? ?",
    "6 ) , for example . +",
    "* example 2.3 ( linear heat equation ) .",
    "* let @xmath35 be a bounded open domain with lipschitz continuous boundary @xmath36 and let @xmath37 be a fixed end time .",
    "we set @xmath38 and @xmath39 . for a given forcing term @xmath40 and initial condition @xmath41",
    ", we consider the linear heat equation with homogeneous dirichlet boundary condition :    @xmath42    the existence of a unique solution to is a standard result and is proved in @xcite , for example .",
    "we can write as an abstract evolution problem of type by deriving a variational formulation for with @xmath43 as the space of test functions , @xmath44 and integrating over the space @xmath45 .",
    "the bilinearform @xmath11 is introduced by @xmath46 and the operator @xmath20 vanishes .",
    "+ * example 2.4 ( cahn - hilliard equation ) .",
    "* let @xmath47 and @xmath48 be defined as in example 2.3 .",
    "the cahn - hilliard equation was proposed in @xcite as a model for phase separation in binary alloys . introducing the chemical potential @xmath49 ,",
    "the cahn - hilliard equation can be formulated in the common setting as a coupled system for the phase field @xmath50 and the chemical potential @xmath49 :    @xmath51    where the convective term @xmath52 describes the transport with ( constant ) velocity @xmath53 . by @xmath54",
    "we denote the outward normal on @xmath36 , @xmath55 is a constant mobility , @xmath56 denotes the surface tension and @xmath57 represents the interface parameter .",
    "the phase field function @xmath50 describes the phase of a binary material with components @xmath58 and @xmath59 .",
    "it is @xmath60 in the pure @xmath58-phase and @xmath61 in the pure @xmath59-phase .",
    "the interfacial region is described by @xmath62 and its thickness is finite and of order @xmath63 .",
    "the function @xmath64 is a double well potential .",
    "a typical choice for @xmath65 is the polynomial free energy function @xmath66 which has exactly two minimal points at @xmath67 , i.e. at the energetically favorable state .",
    "another choice for @xmath65 is the relaxed double - obstacle free energy @xmath68 with relaxation parameter @xmath69 , which is introduced in @xcite as the moreau - yosida relaxation of the double obstacle free energy @xmath70,\\\\    + \\infty , & \\text{else . }",
    "\\end{cases}\\ ] ] for more details on the choices for @xmath65 we refer to @xcite and @xcite , for example .",
    "concerning existence , uniqueness and regularity of a solution to , we refer to @xcite .    in order to derive a variational form of type",
    ", we write as a single fourth order parabolic equation for @xmath50 by    @xmath71    we choose @xmath72 and @xmath44 and introduce the bilinear form @xmath11 by @xmath73 and define the nonlinear operator @xmath34 by @xmath74 + * 2.2 temporal and spatial discretization * + in order to solve numerically , we apply the implicit euler method for temporal discretization .",
    "of course , other time integration schemes are possible . for a given @xmath75 let @xmath76 denote an arbitrary grid in the time interval @xmath77 $ ] with time step sizes @xmath78 for @xmath79 .",
    "we set @xmath80 $ ] for each time interval @xmath79 .",
    "the resulting time discrete system consists in finding a sequence @xmath81 satisfying the following equation system    @xmath82    for all @xmath26 and @xmath83 denotes @xmath84 .",
    "+ for the spatial discretization we utilize adaptive finite elements . at each time level @xmath85",
    "we introduce a regular triangulation @xmath86 of @xmath87 and define an @xmath88-dimensional conformal subspace @xmath89 of @xmath8 by @xmath90 with nodal basis @xmath91 , i.e. @xmath92 for @xmath93 with the nodes @xmath94 of the underlying triangulation @xmath86 .",
    "therefore , at each time level @xmath95 , the utilized finite element spaces @xmath96 can differ both in the underlying triangulation of the domain @xmath87 and in the polynomial degree .",
    "this means that the solutions can be computed utilizing @xmath0 , @xmath97 and @xmath98adaptivity , where @xmath0adaptivity denotes local refinement and coarsening of the triangulation according to certain error indicators , @xmath97adaptivity means increasing and decreasing the polynomial degree according to the smoothness of the solution and @xmath98adaptivity , or moving mesh methods , relocates the mesh points to concentrate them in specific regions .",
    "we apply a galerkin scheme for .",
    "thus we look for a sequence @xmath99 with @xmath100 which fulfills @xmath101    for all @xmath102 , where @xmath103 denotes the lagrange interpolation .",
    "since @xmath100 holds , we make the galerkin ansatz @xmath104 for @xmath85 with appropriate mode coefficients @xmath105 . +",
    "* 3.1 pod method in real hilbert spaces * + the aim of this work is to propose a pod - rom which does not depend on the underlying finite element discretization .",
    "for this reason , the pod method is explained from an infinite - dimensional perspective in this section , where we use a finite number of snapshots which lie in a common hilbert space . the pod method in hilbert spaces is explained in @xcite and @xcite , for example . here",
    ", we recall the main aspects .",
    "+ assume we are given snapshots @xmath106 of , which can be finite element samples of the solution trajectory @xmath107 \\}$ ] for on the given timegrid @xmath108 introduced in .",
    "for each time level @xmath109 the snapshots belong to different subspaces @xmath110 .",
    "note that by construction we have @xmath111 , where @xmath112 denotes either of the spaces @xmath8 or @xmath5 .",
    "+ the idea of the pod method is to describe the space @xmath113 by means of few orthonormal functions @xmath114 , with @xmath115 , such that error between the snapshots @xmath116 and the projection of the snapshots onto the subspace @xmath117 is minimized in the following sense : @xmath118    with e.g. nonnegative trapezoidal weights",
    "@xmath119 : @xmath120 a solution to is called a rank-@xmath121 pod basis . for this equality",
    "constrained minimization problem , first order necessary ( and by convexity sufficient ) optimality conditions can be derived . for this purpose , we introduce the bounded linear operator @xmath122 by @xmath123 since the image @xmath124 has finite dimension , the operator @xmath125 is compact .",
    "its hilbert space adjoint @xmath126 satisfies @xmath127 for @xmath128 and @xmath129 and is given by @xmath130    then , the action of @xmath131 is given by @xmath132    @xmath133 can be represented as the symmetric matrix @xmath134    we introduce the operator @xmath135 , whose action is given by @xmath136    it can be shown that the operator @xmath137 is bounded , nonnegative and self - adjoint . since the image @xmath138 has finite dimension , the operator @xmath137 is compact . therefore the hilbert - schmidt theorem ( cf .",
    "vi.16 ) , for instance ) can be applied which ensures the existence of a complete orthonormal basis @xmath139 for @xmath112 and a sequence of corresponding nonnegative eigenvalues @xmath140 with @xmath141    likewise , one can compute the eigenvalues @xmath142 of @xmath133 , which coincide with the eigenvalues for @xmath137 except for possibly zero .",
    "the corresponding orthonormal eigenvectors @xmath143 of @xmath133 are @xmath144    thus , the functions @xmath145 can be determined via @xmath146    where @xmath147 denotes the @xmath148-th component of @xmath149 for @xmath150 .",
    "+ the following theorem states the necessary ( and by convexity sufficient ) optimality conditions for problem and presents the pod projection error . + * theorem 3.1 . *",
    "let @xmath151 denote the positive eigenvalues of @xmath137 , and let @xmath152 denote the corresponding eigenfunctions of @xmath137 .",
    "for every @xmath153 with @xmath154 , a solution to is given by the eigenfunctions @xmath155 corresponding to the @xmath121 largest eigenvalues @xmath156 . moreover the projection error is @xmath157    _ proof . _ since @xmath158 , the proof runs analogously to the proof in ( * ? ? ?",
    "+ the basis @xmath155 can alternatively be computed via singular value decomposition ( svd ) .",
    "the svd of the operator @xmath125 is given by @xmath159 where @xmath160 is the ordered sequence of singular values of @xmath125 with @xmath161 for @xmath162 . for more details",
    "we refer to ( * ? ?",
    "vi.17 ) , for instance . + * 3.2 numerical realization of the pod method utilizing snapshots from arbitrary finite element spaces * + let us now turn our perspective to the numerical realization of computing a pod basis for snapshots from arbitrary finite element spaces .",
    "for each time level @xmath95 , the snapshots @xmath163 shall be taken from different finite element spaces @xmath164 which lie in a common hilbert space @xmath8 . in the fully discrete fomulation of the pod method",
    "we are given the evaluation of the snapshots on their corresponding grids , i.e. we are given the vectors @xmath165 of different lengths with @xmath166 , for @xmath167 .",
    "this is why we are not able to set up the discrete counterpart to the operator @xmath137 , which is an @xmath168 matrix for uniform spatial discretization with @xmath169 nodes .",
    "moreover , the representation of the pod basis as a linear combination of the snapshots is no longer possible . + to overcome this obstacle , our aim is to set up a reduced order model which can be formulated for arbitrary finite element discretizations . for this reason",
    ", we turn our attention to the matrix @xmath170 .",
    "this matrix dimension only depends on the number of snapshots and can be computed for any underlying finite element discretization : the @xmath171th component @xmath172 , for @xmath173 , is given by @xmath174 thus for any @xmath175 , we are able to compute the inner product @xmath176 for @xmath177 and @xmath178 , compare figure [ fig : twobases ] .",
    "we discover , then , that the calculation of the matrix @xmath133 as well as the determination of its eigenvectors can be done for any underlying finite element discretization .",
    "thus , the eigenvectors @xmath179 of @xmath133 are the right singular vectors of @xmath125 and contain the space independent time information .",
    "this fact will be used in the following to build up the reduced order model .",
    "we note that the calculation of the matrix @xmath133 can be done for arbitrary finite element grids , i.e. all kinds of adaptivity ( @xmath0 , @xmath97 and @xmath98adaptivity ) can be considered and we do not need to express the snapshots in terms of a common finite element basis .",
    "especially , our approach is also applicable for finite elements with different polynomial degrees and relocated mesh points .",
    "this distiguishes from the interpolation approach of the snapshots onto a fixed reference mesh , cf .",
    "@xcite .     and @xmath180 on their corresponding grids .",
    "left : both piecewise linear finite element ansatz functions .",
    "right : piecewise linear and cubic finite element ansatz functions.__,title=\"fig : \" ]   and @xmath180 on their corresponding grids . left : both piecewise linear finite element ansatz functions .",
    "right : piecewise linear and cubic finite element ansatz functions.__,title=\"fig : \" ]    moreover , the calculation of the matrix @xmath181 ( method of snapshots ) is favorable , since we assume the temporal dimension @xmath182 to be far smaller than the spatial dimension(s ) . +",
    "* example 3.2 .",
    "* we choose @xmath183 and set @xmath184 .",
    "the triangulations of @xmath87 for each time level @xmath167 are denoted by @xmath185 and the finite element spaces are defined by @xmath186    where @xmath187 denotes the space of polynomials of degree @xmath188 .",
    "the computation of the @xmath189-th entry @xmath190 of the matrix @xmath133 is calculated by    @xmath191    computations become simpler when using nested grids . in this case , the intersection of two arbitrary @xmath192dimensional simplices coincides either with the smaller simplex , or is a common edge simplex , or has no overlap .",
    "* 4.1 pod reduced order modeling for arbitrary finite element discretizations * + in this section , we stay in the infinite dimensional setting of the pod method and set up the pod reduced order model utilizing snapshots with arbitrary finite element discretizations .",
    "this perspective allows us to determine the mode coefficients of the pod galerkin ansatz for arbitrary underlying finite element discretizations .",
    "suppose for given snapshots @xmath193 we have computed the matrix @xmath133 , , with @xmath194 , for @xmath195 as well as its @xmath121 largest eigenvalues @xmath196 and corresponding eigenvectors @xmath197 of low rank @xmath121 with @xmath198 , according to the strategy presented in section 3 .",
    "the pod basis @xmath155 is then given by , i.e @xmath199 this pod basis is utilized in order to compute a reduced order model for . for this reason , we make the pod galerkin ansatz @xmath200,\\ ] ] as an approximation for @xmath201 , with the fourier coefficients @xmath202 for @xmath203 . inserting @xmath204 into and choosing @xmath205 as the test space , leads to the system @xmath206 for all @xmath207 and for almost all @xmath27 $ ] . utilizing the ansatz , we can write as an @xmath121-dimensional ordinary differential equation system for the pod mode coefficients @xmath208 : @xmath209 , \\\\",
    "\\displaystyle\\sum_{j=1}^\\ell \\eta_j(0 ) \\langle \\psi_i , \\psi_j \\rangle_h & = & \\langle y_0 , \\psi_i \\rangle_h , \\\\",
    "\\end{array }   \\right.\\ ] ] for @xmath203 .",
    "note that @xmath210 if we choose @xmath211 in the context of section 3 .",
    "+ since we want to construct a reduced order model which can be built and solved for arbitrary finite element discretizations , we rewrite system utilizing the identity .",
    "then , the system can be written as @xmath212 , \\\\",
    "\\displaystyle\\sum_{j=1}^\\ell \\eta_j(0 ) \\frac{1}{\\sqrt{\\lambda_i } }      \\frac{1}{\\sqrt{\\lambda_j } } \\langle \\mathcal{y } \\phi_i , \\mathcal{y } \\phi_j \\rangle_h   & = & \\displaystyle\\frac{1}{\\sqrt{\\lambda_i } }",
    "\\langle y_0 , \\mathcal{y } \\phi_i \\rangle_h .   \\\\",
    "\\end{array }   \\right.\\ ] ] in order to write in a compact matrix - vector form , let us introduce the diagonal matrix @xmath213 from the first @xmath121 eigenvectors @xmath214 of @xmath133 we build the matrix @xmath215.\\ ] ] then , the system can be written as the system    @xmath216 , \\\\",
    "d \\phi^t \\mathcal{k } \\phi d \\ ;   \\eta ( 0 ) & = & d \\bar{\\eta}_0 , & \\\\",
    "\\end{array }   \\right.\\ ] ]    for the vector - valued mapping @xmath217 \\to \\mathbb{r}^\\ell$ ] .",
    "note that the right hand side @xmath218 and the initial condition @xmath219 are given by @xmath220 and @xmath221 for @xmath222 , respectively .",
    "their calculation can be done explicitely for any arbitrary finite element discretization . for a given function @xmath223 ( for example @xmath224 or @xmath225 ) with finite element discretization @xmath226 , nodal basis @xmath227 and appropriate mode coefficients @xmath228 we can compute @xmath229 where @xmath100 denotes the @xmath230th snapshot .",
    "again , for any @xmath231 and @xmath232 , the computation of the inner product @xmath233 can be done explicitely . + * remark 3.3 .",
    "* obviously , for linear evolution equations the pod reduced order model can be set up and solved utilizing snapshots with arbitrary finite element discretizations .",
    "the computation of the nonlinear component @xmath234 needs particular attention . in future work , we intend to investigate the nonlinear term and aim to introduce a projection based approach in order to set up a pod reduced order formulation for the nonlinearity which can be set up for arbitrary finite element discretizations without the need for interpolation . + * remark 3.4 .",
    "* of course , the presented approach is also applicable to other classes of differential equations like elliptic pdes , for example . +",
    "* 4.2 time discrete reduced order model * + in order to solve the reduced order model numerically , we apply the implicit euler method for time discretization and use for simplicity the same temporal grid @xmath108 as for the snapshots .",
    "it is also possible to use a different time grid , cf .",
    "the time discrete reduced order model reads    @xmath235    for @xmath236 or equivalently @xmath237    * 4.4 expressing the pod solution in the full spatial domain * + having determined the solution @xmath238 to , we can set up the reduced solution @xmath239 in a continuous framework : @xmath240 now , let us turn to the fully discrete formulation of . for a time - discrete setting , we introduce for simplicity the same temporal grid @xmath108 as for the snapshots .",
    "let us recall the spatial discretization of the snapshots utilizing arbitrary finite elements @xmath241    let @xmath242 denote an arbitrary set of grid points for the reduced system at time level @xmath243 .",
    "the fully discrete pod solution can be computed by evaluation : @xmath244 for @xmath245 and @xmath246 .",
    "this allows us to use any grid in the pod simulation .",
    "for example we can use the same node points at time level @xmath148 for the pod simulation as we have used for the snapshots , i.e. for @xmath85 it holds @xmath247 and @xmath248 for all @xmath249 .",
    "another option can be to choose @xmath250 i.e. the common finest grid . obviously , a special and probably the easiest case concerning the implementation is to choose snapshots which are expressed with respect to the same finite element basis functions and utilize the common finest grid for the simulation of the reduced order system , which is proposed by @xcite . after expressing",
    "the adaptively sampled snapshots with respect to a common finite element space , the subsequent steps coincide with the common approach of taking snapshots which are generated without adaptivity .",
    "then , expression simplifies to @xmath251",
    "for the validation of the approximation quality of the pod reduced order model , we are interested in analyzing the error between the pod solution and the true solution . our aim is to estimate the expression @xmath252 where @xmath253 denotes the true solution for at time instances @xmath108 and @xmath254 is the solution to the time discrete reduced order model , i.e. @xmath255 with the pod basis @xmath155 computed from the snapshots @xmath163 from arbitrary finite element spaces , i.e. @xmath100 for @xmath85 , as explained in section 3 .",
    "the weights @xmath256 are trapezoidal time weights , see . we choose @xmath257 in the context of section 3 .",
    "let us introduce the orthogonal projection @xmath258 by @xmath259    it holds true @xmath260 , where @xmath261 is the space of linear bounded operators from @xmath8 to @xmath8 .",
    "the subsequent calculations follow closely the proofs of ( * ? ? ?",
    "4.7 ) , ( * ? ? ?",
    "3.2.5 ) and ( * ? ?",
    "* th . 7 ) . in our situation , we compute the pod basis corresponding to the fully discrete snapshots @xmath163 utilizing adaptive finite element spaces , whereas in @xcite , @xcite and @xcite , the pod basis is computed from snapshots corresponding to the solution trajectory at the given time instances . for this reason , in the following estimation an additional term corresponding to the error for the spatial discretization will appear . + we make use of the decomposition @xmath262 for @xmath95 , where @xmath263 and @xmath264 .",
    "the term @xmath265 is the discretization error .",
    "we utilize the decomposition @xmath266 where @xmath267 denotes the solution to the time discrete problem . by @xmath268",
    "we denote the global time discretization error and @xmath269 is the global spatial discretization error .",
    "it is @xmath270 and @xmath271 since we use the implicit euler method for time integration , it is @xmath272 with @xmath273 .",
    "therefore , we can estimate @xmath274 moreover , we have @xmath275    the term @xmath276 is the projection error of the snapshot @xmath277 projected onto the pod space @xmath278 .",
    "the weighted sum of all projection errors is given by the sum of the neglected eigenvalues , i.e. @xmath279 it remains to estimate the term @xmath280 which is the error between the projection of the true solution @xmath281 at time instance @xmath243 onto the pod space @xmath278 and the time discrete rom solution @xmath282 to . with the use of the notation @xmath283 for @xmath79 , we get    @xmath284    for @xmath285 with @xmath286 . with the choice @xmath287 and the use of the identity @xmath288",
    "we obtain @xmath289 we assume that @xmath34 is lipschitz continuous , i.e. there exists @xmath290 such that @xmath291 applying young s inequality we find @xmath292 with the constants @xmath293 and @xmath294 . under the assumption that @xmath295 is sufficiently small ,",
    "we conclude @xmath296 for more details on this , we refer to @xcite and @xcite .",
    "we choose the initial condition for such that @xmath297 .",
    "+ next , we estimate the term involving @xmath298 .",
    "it holds true @xmath299 with @xmath300 and @xmath301 , which can be estimated as @xmath302 for more details on this , we refer to @xcite and @xcite .",
    "finally , we can summarize the estimation for the term involving @xmath280 by @xmath303 with @xmath304 and thus it is @xmath305    * theorem 5.1 .",
    "* let @xmath306 denote the solution to problem at the time grid @xmath108 and @xmath282 is the solution to .",
    "let the nonlinear operator @xmath34 be lipschitz continuous and the maximal time step @xmath307 be sufficiently small .",
    "furthermore , we assume @xmath308 to be bounded on @xmath77 $ ] .",
    "we choose the initial condition for such that @xmath309 is fulfilled .",
    "then , there exists a constant @xmath310 such that @xmath311 where @xmath312 is the global spatial discretization error and @xmath267 is the solution to at time instance @xmath243 .",
    "+ _ proof .",
    "_ utilizing the decomposition we infer @xmath313 together with , , and this leads to the claim",
    ". @xmath314 + * remark 5.2 .",
    "* if we choose @xmath315 and @xmath44 and utilize a static piecewise linear finite element discretization with @xmath316 being the diameter of the triangles , then @xmath317 . in the case of adaptively refined spatial grids",
    "@xmath318 can be estimated by the prescribed error tolerance , if e.g. residual based a - posteriori error estimation is applied . + * remark 5.3 . *",
    "we intend to study an error analysis for the approximation of the nonlinearity in future research .",
    "for all numerical examples , we choose @xmath319 as open and bounded domain and utilize conformal , piecewise linear finite elements for spatial discretization . for simplicity",
    ", we only utilize an @xmath316-adaptive concept , which means that at timestep @xmath320 we refine or coarsen the spatial mesh according to the error indicator @xmath321_e \\cdot \\nu_e \\|_e \\quad \\text { for all } e \\in \\mathcal{e},\\ ] ] where @xmath322 is the length of the edge , @xmath323_e$ ] denotes the jump of the function across the edge @xmath324 , @xmath325 is the outward normal derivative on the edge @xmath324 and @xmath326 denotes the collection of all edges in the current triangulation . as refinement rule we use the marked edge bisection .",
    "we utilize structured , hierarchical and nested grids .",
    "the numerical test cases illustrate our approach to set up and solve a pod reduced order model utilizing snapshots with adaptive spatial discretization , which is explained in section 3 and 4 .",
    "+ we compare our approach to the use of a uniform mesh , where the mesh size coincides with the fineness of the smallest triangle in the adaptive mesh . furthermore , we compare our approach to the use of a finest mesh following @xcite . for this",
    ", the practical numerical concept works as follows . in a full dimensional simulation ,",
    "@xmath316-adaptive snapshots are generated at the time instances @xmath327 . at the same time",
    "we carry along a reference grid with the simulation , which coincides with the computational grid at initial time and which is only refined in the same manner as the computational grid . in this way",
    ", the reference grid becomes the finest mesh ( i.e. the overlay of all computational grids ) at the end of the snapshot generation .",
    "then , the snapshots are expressed with respect to the finite element basis functions corresponding to the finest mesh and the usual pod procedure is carried out .",
    "+ all coding is done in c++ and we utilize fenics @xcite for the solution of the differential equations and alberta @xcite for dealing with hierarchical meshes .",
    "+ * example 6.1 : linear heat equation .",
    "* we consider the example 2.3 of a linear heat equation with dirichlet boundary condition .",
    "the spatial domain is chosen as @xmath328 \\times [ 0,1 ] \\subset    \\mathbb{r}^2 $ ] , the time interval is @xmath77=[0,1.57]$ ] .",
    "we construct an example in such a way that we know the analytical solution .",
    "it is given by @xmath329 with + @xmath330 + @xmath331 + @xmath332 + the forcing term @xmath333 , the boundary condition @xmath334 and the initial condition @xmath335 are chosen accordingly . for the temporal discretization we introduce the uniform time grid by @xmath336 for @xmath337 with @xmath338 .",
    "the analytical solution at three different time points is shown in figure [ fig : heat_true ] .",
    "( left ) , @xmath339 ( middle ) and @xmath340 ( right)__,title=\"fig : \" ]   ( left ) , @xmath339 ( middle ) and @xmath340 ( right)__,title=\"fig : \" ]   ( left ) , @xmath339 ( middle ) and @xmath340 ( right)__,title=\"fig : \" ] +   ( left ) , @xmath339 ( middle ) and @xmath340 ( right)__,title=\"fig : \" ]   ( left ) , @xmath339 ( middle ) and @xmath340 ( right)__,title=\"fig : \" ]   ( left ) , @xmath339 ( middle ) and @xmath340 ( right)__,title=\"fig : \" ]    due to the steep gradients in the neighbourhood of the minimum and maximum , respectively , the use of an adaptive finite element discretization is jusitified .",
    "the resulting computational meshes as well as the corresponding finest mesh ( reference mesh at the end of the simulation ) are shown in figure [ fig : heat_meshes ] .",
    "the number of node points of the adaptive meshes varies between 3637 and 7071 points .",
    "the finest mesh has 18628 node points . in contrary ,",
    "a uniform mesh with the same discretization fineness as the finest triangle in the adaptive grids ( @xmath341 ) would have 93025 node points .",
    "this clearly reveals the benefit of using adaptive meshes for snapshot generation .",
    "particularly , the comparison of the computational times emphasizes the benefit of adaptive snapshot sampling : the snapshot generation on the adaptive mesh takes 944 seconds , whereas utilizing the uniform mesh it takes 8808 seconds .",
    "therefore , we gain a speedup factor of 9 ( see table [ tab : cpu_times_heat ] ) .    ,",
    "( ii ) @xmath339 , ( iii ) @xmath340 and ( iv ) finest mesh__,title=\"fig : \" ] , ( ii ) @xmath339 , ( iii ) @xmath340 and ( iv ) finest mesh__,title=\"fig : \" ] , ( ii ) @xmath339 , ( iii ) @xmath340 and ( iv ) finest mesh__,title=\"fig : \" ] , ( ii ) @xmath339 , ( iii ) @xmath340 and ( iv ) finest mesh__,title=\"fig : \" ]    in figure [ fig : heat_ev ] , the resulting normalized eigenspectrum of the correlation matrix for uniform spatial discretization ( `` uniform fe mesh '' ) , the normalized eigenspectrum of the matrix @xmath133 ( `` infpod '' ) as well as the normalized eigenspectrum of the correlation matrix utilizing snapshots interpolated onto the finest mesh ( `` finest fe mesh '' ) is shown .",
    "we observe that the eigenvalues for both adaptive approaches coincide .",
    "moreover , we recognize that about the first 28 eigenvalues computed corresponding to the adaptive simulation coincide with the simulation on a uniform mesh . from index 29 on ,",
    "the methods deliver different results : for the uniform discretizations , the normalized eigenvalues fall below machine precision at around index 100 and stagnate . in contrary , the normalized eigenvalues for both adaptive approaches flatten in the order around @xmath342 . concerning dynamical systems , the magnitude of the eigenvalue corresponds to the characteristic properties of the underlying dynamical system : the larger the eigenvalue , the more information is contained in the corresponding eigenfunction . since all adaptive meshes are contained in the uniform mesh , the difference in the amplitude of the eigenvalues is due to the interpolation errors during refinement and coarsening .",
    "this is the price we have to pay in order to get a fast snapshot generation utilizing adaptive finite elements .",
    "moreover , the investigation of the decay of the eigenvalues constitutes an analyzing tool for adaptivity in the following sense . using an adaptive mesh technique",
    "means that some parts of the domain are resolved coarsely according to the utilized error estimation , i.e. information gets lost . in the sense of a singular value analysis ,",
    "this implies that adaptivity neglects the noise , which is indicated by the singular values on the uniform spatial mesh at those places which are not resolved with the adaptive grid .",
    "the overtones which get lost in the adaptive computations lie in the same space which is not considered by pod when using the adaptive finite element snapshots .",
    "this allows us to characterize the space , which is not resolved by adaptivity . from this point of view",
    ", adaptivity can be interpreted as a smoother .            since the first few pod basis functions are the most important ones regarding the captured information , we visualize @xmath343 and @xmath344 in figure [ fig : heat_podmodes ] , which are computed corresponding to using an adaptive grid . the pod basis functions corresponding to the uniform spatial discretization have a similar appearance .",
    "note that the pod bases are unique up to the sign .",
    "we can recognize the initial condition in the first pod basis function .",
    "then , the index of the pod basis corresponds to the number of maxima and minima of the pod basis : @xmath345 has two minima and two maxima etc .",
    "this behaviour is similar to the increasing oscillations in higher frequencies in trigonometric approximations .",
    "the increasing number of oscillations is necessary in order to approximate the transport of the steep gradients of the solution with increasing accuracy .",
    "( left ) , @xmath345 ( middle ) and @xmath344 ( right)__,title=\"fig : \" ]    ( left ) , @xmath345 ( middle ) and @xmath344 ( right)__,title=\"fig : \" ]   ( left ) , @xmath345 ( middle ) and @xmath344 ( right)__,title=\"fig : \" ] +   ( left ) , @xmath345 ( middle ) and @xmath344 ( right)__,title=\"fig : \" ]   ( left ) , @xmath345 ( middle ) and @xmath344 ( right)__,title=\"fig : \" ]   ( left ) , @xmath345 ( middle ) and @xmath344 ( right)__,title=\"fig : \" ]    the pod solutions for @xmath346 and @xmath347 pod basis functions utilizing spatial adaptive snapshots which are interpolated onto the finest mesh are shown in figure [ fig : heat_pod ] .",
    "the visual comparison makes clear which influence the increase of utilized pod basis function has on the approximation quality .",
    "the more pod basis functions we use ( until stagnation of the corresponding eigenvalues ) , the less oscillations appear in the pod solution and the better is the approximation .     ( top ) and",
    "@xmath347 ( bottom ) pod basis functions at @xmath348 ( left ) , @xmath339 ( middle ) and @xmath340 ( right)__,title=\"fig : \" ]   ( top ) and @xmath347 ( bottom ) pod basis functions at @xmath348 ( left ) , @xmath339 ( middle ) and @xmath340 ( right)__,title=\"fig : \" ]   ( top ) and @xmath347 ( bottom ) pod basis functions at @xmath348 ( left ) , @xmath339 ( middle ) and @xmath340 ( right)__,title=\"fig : \" ] +   ( top ) and @xmath347 ( bottom ) pod basis functions at @xmath348 ( left ) , @xmath339 ( middle ) and @xmath340 ( right)__,title=\"fig : \" ]   ( top ) and @xmath347 ( bottom ) pod basis functions at @xmath348 ( left ) , @xmath339 ( middle ) and @xmath340 ( right)__,title=\"fig : \" ]   ( top ) and @xmath347 ( bottom ) pod basis functions at @xmath348 ( left ) , @xmath339 ( middle ) and @xmath340 ( right)__,title=\"fig : \" ]    table [ tab : errors_heat ] compares the approximation quality of the pod solution utilizing adaptively generated snapshots which are interpolated onto the finest mesh with snapshots of uniform spatial discretization depending on different pod basis lengths .",
    "our approach from section 3 - 4 delivers very similar results as the use of adaptive finite element snapshots which are interpolated onto the finest mesh . for example , for @xmath349 pod bases , we get with the infpod - approach the following errors : @xmath350error between the pod solution and the finite element solution : @xmath351 , @xmath352 , @xmath350error between the pod solution and the true solution : @xmath353 and @xmath354",
    ". +    .__relative and absolute @xmath350error between the pod solution and the finite element solution utilizing adaptive finite element snapshots which are interpolated onto the finest mesh ( columns 2 - 3 ) and uniform meshes ( columns 4 - 5 ) _ _ [ cols=\"^,^,^,^,^\",options=\"header \" , ]",
    "in this work , we have proposed a pod reduced order model for arbitrary finite element discretizations .",
    "the approach is motivated from a infinite dimensional approach . using the method of snapshots we are able to set up the correlation matrix by explicitely evaluating the inner products of snapshots .",
    "for this reason , our approach does not need any interpolation or projection onto a common finite element reference grid .",
    "therefore , it is applicable for arbitrary @xmath355 or @xmath98adaptive fintie element meshes . from a computational point of view",
    ", sufficient hardware should be available in order to compute the correlation matrix in parallel and make the offline computational time competitive . in future work",
    ", we intend to derive a pod reduced order model for nonlinear pdes and study error bounds for the nonlinear pod reduced order model ."
  ],
  "abstract_text": [
    "<S> the main focus of the present work is the inclusion of spatial adaptivity for snapshot computation in the offline phase of model order reduction utilizing proper orthogonal decomposition ( pod - mor ) . for each time level , the snapshots live in different finite element spaces , which means in a fully discrete setting that the snapshots are vectors of different length . in order to overcome this obstacle </S>",
    "<S> , we present a discretization independent pod reduced order model , which is motivated from a continuous perspective and is set up explicitely without interpolation of the snapshots . </S>",
    "<S> the analysis for the error between the resulting pod solution and the true solution is carried out . finally , we present numerical examples to illustrate our approach . + _ keywords and phrases : _ model order reduction , reduced order modeling , proper orthogonal decomposition , adaptive finite element discretization , partial differential equation , evolution equations   + _ acknowlegdements : _ we like to thank christian kahle for providing many c++ libraries which we could use for the coding </S>",
    "<S> . + </S>"
  ]
}
{
  "article_text": [
    "there is a variety of problem solving systems which offer solutions to a given set of problems .",
    "each system differs in the mechanism in which it solves the problems within the problem space .",
    "there is a need to rank the systems according to their solving capabilities .",
    "a mere analytic way to compare the systems is usually unavailable and a numerical approach usually uses benchmark cases that fail to truly characterize the systems in a more general way .",
    "the benchmarks are highly specific and sparse to fully give an indication for the general problem and thus present only a biased viewpoint of different solution ranking .",
    "we present the problem evolution approach , which is a general , unbiased and numerical method of evaluating problem solving systems that allows a comparison between them .",
    "this approach ranks the systems according to the most complex problem they can solve . in order to implement the problem evolution method , a numerical representation of the complexity of a problem within the problem space",
    "must first be found .",
    "for each system , we use genetic algorithm @xcite to tour the problem space in order to find the most complex problem it can solve .",
    "any type of problem solving system has a different definition for a complex problem according to the specification of the system .",
    "specifically , pattern recognition systems ( e.g. neural network ) are required to successfully distinguish between as many different patterns as possible .",
    "for this type of system , linguistic complexity @xcite is a valid numerical characteristic for the complexity of a problem , since it is based on the ratio between the number of actual different elements used to the number of maximal possible different elements .",
    "thus , using genetic algorithm to find the problem with the highest linguistic complexity a given pattern recognition system can solve , can give a good characterization for that specific system , and can enable a comparison between different systems .",
    "this paper begins with a brief description of genetic algorithms and their special characteristics .",
    "it continues with a discussion on multi - dimensional linguistic complexity and then describes neural networks as a specific example of a pattern recognition system , followed by the problem evolution process description and results .",
    "the paper ends with a discussion and some philosophical considerations .",
    "the usage of genetic algorithms @xcite in optimization problems is a rapidly developing field .",
    "many applications of this highly diverse method appear in software evolution @xcite , robotics evolution @xcite , and evolvable hardware @xcite . in general",
    ", genetic algorithm uses the elements of darwinian evolution and natural selection .",
    "it is based on the idea that a population of individuals exists and develops with time .",
    "each individual ( genotype ) codes for a specific function ( phenotype ) .",
    "each generation , natural selection rules are implemented on the population according to a fitness function , which determines which individual functions best according to predetermined constraints and desired objectives .",
    "those that get a high fitness score reproduce their genes into the next generation , while others either copy themselves once or become totally extinct .",
    "the fitness function can be described as a `` landscape '' where high fitness is expressed as peaks in the landscape .",
    "the individuals in the population tour the landscape and progress upwards toward the local maxima using evolutionary operators , namely , mutation and recombination @xcite . the former meaning that random alterations in the genotype are performed , whereas the latter addresses to sexual reproduction , where two individuals exchange genetic information resulting in two offsprings .",
    "mutation causes `` small movements '' in the landscape , whereas recombination creates `` jumps '' in order to avoid local maxima in search for the global maxima of the fitness landscape .",
    "genetic algorithms are usually used to tour the solution space for an optimized solution for a specific problem .",
    "the fitness function for the individuals within the population is the proximity to the optimal solution .",
    "thus it facilitates an evolutionary process for the best solution .    in our approach",
    ", each system has a different problem subspace composed only of those problems it can solve .",
    "this subspace is not known _ a - prior _ and the genetic algorithm searches the entire problem space . each problem is presented to the system and only if it can solve it , i.e. the problem is within the system s subspace , the new genotype enters the population . the genetic algorithm is used to find the most complex problem . here",
    ", the fitness function is the complexity of the problem .",
    "this is the evolutionary process for the most difficult problem a given system can solve .",
    "linguistic complexity @xcite is a simple and elegant way of calculating complexity of strings of data .",
    "it is based on the concept that the greater the vocabulary one uses , the more complex the data .",
    "the complexity is the product of vocabulary usages of all word sizes , where the latter measures the ratio of different `` words '' used to the different `` words '' possible .",
    "the number of possible words is limited by ( 1 ) the size of the alphabet and the number of letters in the word ( e.g. a 3-letter word with a binary alphabet has @xmath0 possible different words ) and ( 2 ) the length of the string ( e.g. a 3-letter word in a 6-letter string has @xmath1 possible different words ) .",
    "for example , for the binary string 010101 , vocabulary usage of one - letter word is 2/2=1.0 , because two different letters appear ( i.e. 0,1 ) .",
    "the vocabulary usage of two - letter words is 2/4=0.5 , since only two different two - letter words appear ( i.e. 01 , 10 ) whereas 4 combinations are possible ( i.e. 00 , 01 , 10 and 11 ) . for a three - letter word ,",
    "the vocabulary usage is 2/4=0.5 , since only two words appear ( i.e. 010 and 101 ) , but due to the short length of the string , only four combinations are possible .",
    "similarly , for four - letter words , the vocabulary usage is 2/3 = 0.667 .",
    "thus , the complexity of the string is @xmath2 .",
    "an extension to multiple dimensions was introduced lately and enables to calculate linguistic complexity of any form of data @xcite .",
    "the complexity of the data set increases as more different elements are presented .",
    "as already noted , a numerical representation of a problem is required to implement the problem evolution approach .",
    "the multi - dimensional linguistic complexity is a general method for acquiring it for many types of problems .",
    "specifically , multi - dimensional linguistic complexity is a good numerical characteristic for pattern recognition .",
    "these systems are required to distinguish between different patterns .",
    "a `` problem '' for pattern recognition systems is a set of input - output pairs to be learned and then distinguished .",
    "for example , a face recognition system has to be able to match an image of a specific face ( input ) to a name ( output ) . by measuring the multi - dimensional linguistic complexity of the images that system can detect , we ascertain the ability of the system to distinguish between different elements .",
    "it gives us a numerical value of the complexity of the problem that system can solve .    throughout the paper",
    "we will use a simple example , a two - dimensional binary problem .",
    "the objective is to be able to know for a specific coordinate in two dimensions ( input ) what binary output to expect .",
    "thus our problem is a binary image , and its two - dimensional linguistic complexity is easily calculated @xcite .",
    "neural networks @xcite ( also referred in different literature as artificial neural network , neurocomputers , connectionist network , parallel distributed processors , etc . ) , were introduced as an attempt to make an artificial computing machine which simulate the human brain . like the human brain , neural networks",
    "are composed of many neurons , which are small processing units that are capable of only simple calculations .",
    "the power of this architecture is its parallelism of calculation and its learning power .",
    "a neuron receives input from other neurons , each having a different weight representing the strength of the connection between the given neurons .",
    "it sends the output of a simple calculation of an activation function on those inputs to other neurons .",
    "neural networks have a standard structure which is composed of layers of neurons , where each neuron in a layer receives input from neurons in the previous layer and sends output to the neurons in the next one .",
    "a given neural network has an input layer , which receives input for the environment , an output layer that produces the final result of the calculations and some hidden layers .",
    "there are many types of learning processes .",
    "we will discuss only supervised learning @xcite .",
    "the neural network can learn a given data train set .",
    "this means that it can correlate between inputs and outputs by changing the connection weights between neurons in different layers .",
    "later it is presented with a test set and is marked in its ability to generate the correct output .",
    "a neural network s configuration is described by its architecture and the number of weights in it .",
    "the former is the arrangement of the neurons in the different layers .",
    "the latter is the true number of free parameters of the system .",
    "there is a simple correlation between the two .    in practice",
    ", we will use neural networks to fully recognize a binary image .",
    "the neural network will have two neurons in the input layer ( representing the input as the x , y coordinate of a pixel in the image ) , and one output neuron ( representing the binary `` color '' of that pixel ) .",
    "we will use different hidden layer configurations throughout the paper .",
    "the training set will be composed of all the pixels in the binary image , where the input is the coordinate of the pixel and the output is its binary color . a neural network is considered to fully recognize a given binary image if it can learn the entire training set , i.e. if for all of the image s pixels the neural network generates an output which correlates to the binary color of that pixel .",
    "contrary to normal learning procedures , to determine whether the neural network fails to fully recognize the image or slowly converges to full recognition , a special stopping criterion is required .",
    "we will use a convergence parameter which is the product of the mean square error and the percentage of the pixels accurately recognized .",
    "the learning process stops after a given number of epochs , @xmath3 , in which the convergence parameter fails to decrease by a given fraction @xmath4 .",
    "we will now implement all the aforementioned techniques to demonstrate the problem evolution approach , in order to evaluate and compare different neural network configurations .",
    "we will compare between configurations with similar architecture and then between configurations with similar number of weights .",
    "two - dimensional linguistic complexity will be used as the numerical representation of the problems . for each configuration",
    ", genetic algorithm will tour the problem subspace the neural network can solve to produce the most complex problem .    in order to find the most complex binary image a given neural network can fully recognize we will use a genetic algorithm with the following definitions .",
    "the population consists of binary images the given neural network can fully recognize .",
    "the initial population consists of simple binary images created by randomly dividing the image to two homogeneous areas .",
    "each new generation , two new genotypes are created using recombination and mutation",
    ". if a new genotype has higher linguistic complexity than the lowest linguistic complexity of the population , the neural network can fully recognize it and it does not appear already in the population , it replaces the lowest genotype of the population .",
    "the genetic algorithm ends after a given number of generations have passed with no new genotype entering the population , i.e. when no higher complexity genotype which the neural network can fully recognize was found . due to the possibility of reaching a local maxima in the problem",
    "subspace instead of the global maximum , several runs of the problem evolution are required .",
    "using this procedure gives us a tool for comparing different configurations of neural networks .",
    "for each configuration the problem evolution will result in a characteristic maximal linguistic complexity . by comparing",
    "the latter one can determine which configuration is better equipped to distinguish between a greater number of elements within a binary image .",
    "the problem evolution procedure used the following parameters in all the detailed experiments :    * the genotypes are binary images consisting of 20x20 binary pixels . *",
    "the genetic algorithm parameters are a population of 100 unique genotypes , a mutation rate of 0.0025 and a linear recombination .",
    "the stopping criterion is a hundred generations of no change in the population . *",
    "the neural network uses a @xmath5 activation function with @xmath6 and @xmath7 @xcite ; the @xmath8 learning process with commonly used parameters @xcite ; and the stopping criteria parameters were @xmath3=1000 , @xmath4 = 0.01 . * in order to reduce the calculation time , each genotype carries the weights of the neural network that can fully recognize it . during the evolution operators ( e.g. mutation and recombination ) , the new offspring s weights",
    "were initialized using the weights of its most similar parent . thus reducing the number of epochs needed to determine whether the offspring can be fully recognized .    *",
    "_ similar architecture . _ * the aforementioned problem evolution procedure was implemented on different configurations of a neural network with a single hidden layer .",
    "the results are given in fig .",
    "[ singlelayerfig ] , where the linguistic complexity of the best genotype in each generation is plotted for different numbers of neurons in the hidden layer .",
    "each evolution process ended after a hundred generations in which no new genotype succeeded in entering the population ( due to inability of the neural network to fully recognize it or due to its too low complexity ) , thus ending after a different number of total generations .",
    "[ toporgs ] shows the individuals with the highest complexity each configuration could fully recognize .",
    "as can be seen , the maximal complexity reached is correlated to the number of neurons in the single hidden layer . thus corroborating with the known fact that a neural network with a higher number of neurons in its single hidden layer has a greater pattern recognition capabilities .",
    "\\(a )   [ toporg2 ] ( b )   [ toporg4 ] + ( c )   [ toporg8 ] ( d )   [ toporg16 ]    * _ similar number of weights .",
    "* next , we wish to compare different configurations of neural networks with multiple hidden layers , by comparing the maximal linguistic complexity reached after the problem evolution process . in order to avoid local maxima ,",
    "the process was repeated three times and the maximum of these runs was taken .",
    "table  [ table1 ] shows a comparison between different neural network configurations .    as can be seen , for the same number of weights , different configurations have different capabilities in fully recognizing a binary image .",
    "the number of neurons in the first hidden layer is an important factor , as it determines the the output of the first calculation .",
    "if it contains few neurons , information is lost .",
    "another important factor is the number of hidden layers ( see @xcite ) . a larger number of hidden layers enables cascading of processes , i.e. calculation on the results of previous calculations . with a given number of weights ,",
    "there is a tradeoff between these two factors .",
    "the results show that neither a large single hidden layer configuration ( 2 - 8 - 1 ) nor three hidden layers ( 2 - 3 - 3 - 2 - 1 ) gives the best recognition capabilities .",
    "the best result is obtained by a two similar - sized hidden layers ( 2 - 4 - 3 - 1 ) .",
    ".neural networks maximal complexity [ cols=\"^,^\",options=\"header \" , ]",
    "the problem evolution process can be used in several ways .",
    "one can find a correlation between the maximal linguistic complexity and a neural network configuration .",
    "thus for a given problem , one can determine the best ( i.e. minimal ) configuration that solves that problem by calculating the latter s linguistic complexity .",
    "this is a novel approach for selecting the best neural network system for a given problem .",
    "the advanced modern approaches for optimized neural network learning are based upon growing and pruning neurons in the process of learning @xcite . in our approach , one can pre - determine the best configuration of neural network that can learn the problem , thus minimizing the number of epochs needed to be presented in - order to solve the given problem .",
    "another use of the problem evolution , as used in our research , is to determine which neural network s configuration is better . by finding the maximal linguistic complexity of each configuration",
    ", one can compare different systems and determine which can solve a more complex problem .",
    "in general , the problem evolution approach can be used as an objective , numerical tool for comparing different problem solving systems that solve the same problem . by finding a numerical characteristic for the complexity of the problem ( e.g. multi - dimensional linguistic complexity )",
    ", one can use the genetic algorithm approach to evolve the most complex problem a given system can solve , thus allowing the comparison of different systems .",
    "this radical approach can be used as the final tool in finding which system is the best in solving the problem and which is obsolete .    on a more philosophical note",
    ", one can consider the brain as a problem solving system and thus use the problem evolution process to find the `` most complex question '' the brain can solve . by using the genetic algorithm process to produce questions of increasing complexity",
    ", one can converge to the most difficult question a given person can answer .",
    "this paper introduced a new perspective to evaluating problem solving systems .",
    "it shifts the attention from the solution space to the problem subspace and ranks the systems according to the problems they can solve and not the solutions they produce .",
    "preliminary results were presented on evaluating neural networks with different configurations .",
    "further study is required in order to obtain more precise guidelines of the optimal properties of neural networks ."
  ],
  "abstract_text": [
    "<S> in this paper we present a novel tool to evaluate problem solving systems . instead of using a system to solve a problem , we suggest using the problem to evaluate the system . by finding a numerical representation of a problem s complexity </S>",
    "<S> , one can implement genetic algorithm to search for the most complex problem the given system can solve . </S>",
    "<S> this allows a comparison between different systems that solve the same set of problems . in this paper </S>",
    "<S> we implement this approach on pattern recognition neural networks to try and find the most complex pattern a given configuration can solve . </S>",
    "<S> the complexity of the pattern is calculated using linguistic complexity . </S>",
    "<S> the results demonstrate the power of the problem evolution approach in ranking different neural network configurations according to their pattern recognition abilities . </S>",
    "<S> future research and implementations of this technique are also discussed . </S>"
  ]
}
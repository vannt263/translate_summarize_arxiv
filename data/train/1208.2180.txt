{
  "article_text": [
    "an _ implication _ is a boolean formula of type    \\(1 ) @xmath6 .",
    "each finite closure system @xmath7 can be viewed as the set of models of a suitable family @xmath8 of implications , called an _",
    "implicational base_. conversely , each @xmath9 triggers a closure system @xmath7 .",
    "it was known that from @xmath8 one can enumerate @xmath7 in output - polynomial time . here",
    "we show that for any fixed @xmath1 the @xmath1-element members of @xmath7 can be enumerated in output - polynomial time as well , provided @xmath7 satisfies some technical condition ( theorem 2 ) . as corollary 3 and corollary 4",
    "we obtain the two results mentioned in the abstract .",
    "before we come to the section break up , let us give some background on corollary 3 . for an arbitrary @xmath2-element poset @xmath10 we shall write @xmath0 for the number of its ( order ) ideals , and @xmath11 for the number of @xmath1-element ideals @xmath12",
    ". calculating @xmath0 is a # @xmath13-complete problem , but for special cases , such as @xmath14-dimensional posets or interval orders , one can do it in @xmath2-polynomial time . as to enumerating ( @xmath15 producing ) all @xmath0 ideals ,",
    "obviously this ca nt be done in @xmath2-polynomial time since for general posets ( e.g. antichains ) @xmath0 grows exponentially with @xmath2 .",
    "however , it can be done in _ output - polynomial for some @xmath16 , as opposed to say @xmath17 or @xmath18 which are not output - polynomial . ]",
    "in fact medina and nourine [ mn ] enumerate the ideals in time @xmath19 where @xmath20 is the maximum number of covers of an element of @xmath21 .",
    "let us turn to ideals of fixed cardinality @xmath1 .",
    "calculating @xmath11 can be done in @xmath2-polynomial time for interval orders [ s ] , and for some posets explicite closed formulae for @xmath11 are given in [ c ] . as to enumerating the @xmath11 ideals of cardinality @xmath1 , for interval orders it was known to be doable in @xmath11-linear time [ hns ] .",
    "we show in corollary 3 that @xmath11-linear time can be achieved for general posets .",
    "sections 2 and 3 introduce the @xmath22-algorithm which underlies the proof of theorem 2 in section 4 .",
    "the @xmath22-algorithm is convenient for that particular proof , but gets fine - tuned in section 5 to the @xmath23-algorithm which however targets only _ singleton premise _ implications ( so @xmath24 ) .",
    "this kind of implication , which is intimately linked to posets , is the sole kind we are concerned with in the remainder of the article .",
    "applications to stable marriages , modular lattices , and others are pointed out .",
    "the number @xmath11 of @xmath1-element ideals of a poset @xmath10 can be viewed as the @xmath1-th _ whitney number _ of the associated distributive lattice @xmath25 . in section 6",
    "we pit the @xmath23-algorithm against a straightforward recursive method to get the whitney numbers .",
    "section 7 investigates variations of the @xmath23-algorithm , for instance whether it carries over from implications like @xmath26 to other kinds of `` quasi - implications '' such as @xmath27 .",
    "rather than ( 1 ) we shall mostly adopt the set theoretic notation @xmath28 for implications . if both the _ premise _ @xmath29 and _ conclusion _ @xmath30 are subsets of our universe @xmath21 we say that @xmath31 _ satisfies _",
    "@xmath32 if @xmath33 implies @xmath34 . in other words , either @xmath35 or @xmath36 .",
    "thus @xmath37 corresponds to a _ model _ ( @xmath15 satisfying truth value assignment ) of formula ( 1 ) . in the sequel",
    "we may assume that @xmath38 since @xmath32 is equivalent to @xmath39 .",
    "we introduce the @xmath22-algorithm on a toy example with @xmath40:= \\{1,2 , \\ldots , 7\\}$ ] .",
    "consider the family of @xmath41 implications    @xmath42    @xmath43 .    in order to calculate the family mod @xmath15 mod@xmath44 of all @xmath9-_models _ ( i.e. those sets @xmath31 that are models of _ all _ @xmath45 ) we represent subsets of @xmath21 by their characteristic bitstrings of length @xmath46 but with the additional proviso of a do nt care symbol 2 .",
    "thus the powerset @xmath47 is @xmath48 , and in general a @xmath49-_valued row _ like @xmath50 can be viewed as an interval in @xmath47 , i.e. @xmath51 .",
    "coupled to each @xmath49-valued row are three obvious subsets of @xmath21 , which for @xmath52 above are zeros@xmath53 , ones@xmath54 , twos@xmath55 .",
    "generally we put mod@xmath56 and for @xmath57 let mod@xmath58 be the family of all @xmath31 that satisfy the first @xmath59 implication of @xmath9 . in particular mod@xmath60 mod .",
    "thus if    \\(2 ) @xmath61    then mod @xmath62 .",
    "the main idea is to calculate mod@xmath63 from mod@xmath58 by _ excluding _ all @xmath64 that violate the @xmath65-th implication .",
    "such a _ principle of exclusion _",
    "( _ poe _ ) is applicable in a wider context , see section 3 .    by `` imposing '' @xmath66 upon @xmath67 in an obvious way we get mod@xmath68 ( table 1 ) where @xmath69 indicates disjoint union . rather than imposing @xmath70 on @xmath71 _ and _ @xmath72",
    "we keep focusing attention on the _ topmost _ row ( here @xmath71 ) of our _ working stack _ ,",
    "i.e. we apply the well known _",
    "last in first out _",
    "( lifo ) principle .",
    "lifo entails recording for each row of the working stack which implication is `` pending '' ( e.g. the 2nd implication for @xmath71 and the 3rd implication for @xmath73 ) . imposing @xmath70 upon @xmath71 again splits that row and results in the working stack ( top to bottom ) @xmath74 .",
    "imposing @xmath75 upon @xmath76 is more cumbersome because @xmath77 .",
    "obviously @xmath78 where @xmath79 one checks that @xmath80 where the disjointness of rows is noteworthy been @xmath81 respectively , the union would not have been disjoint . ] .",
    "all @xmath82 satisfy @xmath75 but not all @xmath83 satisfy it ; for instance @xmath84 does nt .",
    "however , it is clear that @xmath85 comprises exactly the sets @xmath83 that satisfy @xmath75 .",
    "imposing @xmath86 upon @xmath87 results in the row @xmath88 since @xmath87 has @xmath89 on its fifth position .",
    "all implications having been imposed that row becomes the bottom row of the _ final stack _ ( table 2 ) .",
    "similarly @xmath90 gets its third component 2 switched to @xmath89 and is put on the final stack .",
    "further @xmath91 is put on the final stack _ unaltered _ but @xmath92 must be _ deleted _ altogether since no @xmath93 satisfies @xmath86 . as to @xmath73 , imposing the pending implication @xmath75 is pointless since again no @xmath94 satisfies @xmath86 , and so @xmath73 must be deleted .",
    "the working stack now consists of @xmath72 alone . imposing the three pending implications on @xmath72 results in @xmath95 which becomes the last row of our final stack .",
    "it follows that mod is the disjoint union of the four @xmath49-valued rows in table 2 , in particular @xmath96 .",
    "[ cols=\"^,^,^,^,^,^,^,^,<\",options=\"header \" , ]     table 4",
    "each singleton - premise implication , say @xmath97 properly speaking is the propositional formula in ( i ) below .",
    "it serves as point of departure in our attempt to carry over the @xmath98-algorithm to other kinds of ( singleton - premise ) _ quasi - implications_. we investigate the eight variations obtained from ( i ) by independently negating the premise @xmath99 , respectively negating all variables @xmath100 of the conclusion , respectively switching @xmath101 to @xmath102 .",
    "since negating _ all _ variables ca nt deliver anything logically new ( yet psycho - logically ) , we mainly focus on ( i ) to ( iv ) rather than ( i@xmath103 ) to ( iv@xmath103 ) :    1 .",
    "@xmath104 @xmath105 implication 2 .",
    "@xmath106 @xmath107 quasi - implication 3 .",
    "@xmath108 @xmath109 quasi - implication 4 .",
    "@xmath27 @xmath110 quasi - implication 5 .",
    "@xmath111 @xmath112 quasi - implication 6 .",
    "@xmath113 @xmath114 quasi - implication 7 .",
    "@xmath115 @xmath116 quasi - implication 8 .",
    "@xmath117 @xmath118 quasi - implication    as to ( ii ) , this is equivalent to @xmath119 . such singleton-_conclusion _ implications are more powerful than singleton - premise implications since _ each _ implication , say @xmath120 , is equivalent to a conjunction of such implications @xmath121 and @xmath122 .",
    "the @xmath23-symbolism does not - algorithm touched upon at the beginning of section 5 . ]",
    "carry over to implications with premises of cardinality @xmath123 .    as to ( iii ) , this is equivalent to the clause @xmath124 .",
    "also ( ii ) could have been written as @xmath125 . by definition a conjunction of clauses with at most one positive literal ,",
    "is called a _",
    "horn formula_. the _ horn @xmath126-algorithm _ of [ w2 ] extends the implication @xmath126-algorithm in obvious ways .",
    "having at most one _ negative _ literal per clause yields _ anti - horn formulae _ ( cases ( ii@xmath127 and ( iii@xmath127 ) .    as to ( iv ) ,",
    "consider the task to determine all independent sets of vertices ( anticliques ) in a graph @xmath128 .",
    "obviously @xmath37 being an anticlique amounts to the satisfisfaction of all clauses @xmath129 where @xmath130 ranges over the edges of @xmath128 .",
    "grouping together all edges incident with a fixed vertex @xmath99 this becomes ( say ) @xmath131 this gives rise to the @xmath132_-algorithm _",
    "( work in progress ) which bears a superficial resemblence to the @xmath23-algorithm .",
    "however , ( i ) and ( iv ) are not duals in any sense , and also the technical details differ considerably .",
    "for instance , there is no such thing as a linear extension for graphs .",
    "apart from ( i ) to ( iv ) versus ( i@xmath103 ) to ( iv@xmath103 ) , one can distinguish the quasi - implications that feature @xmath101 in their conclusions of fixed type ( carrying tags @xmath133 ) from the ones that feature @xmath102 ( carrying tags @xmath134 ) .",
    "acyclic families of quasi - implications invite conglomeration to rooted trees , and this has indeed algorithmic benefits for type @xmath133 .",
    "let us sketch the basic idea for type @xmath105 .",
    "the conjunction    \\(9 ) @xmath135    of four implications gives rise to the ( rooted ) tree in figure 2(a ) .",
    "we wish to encode with appropriate symbols @xmath136 the set of all @xmath137)$ ] that satisfy ( 10 ) as just _",
    "one _ `` tree - valued '' row @xmath138 .",
    "notice that @xmath139 whereas @xmath140 ( see figure 2(b ) ) .",
    "details pending , the aim is to impose trees @xmath141 upon tree - valued rows @xmath142 by splitting @xmath142 in @xmath143 and @xmath144 according to whether @xmath141 s root is turned to @xmath145 or @xmath89 . the resulting `` tree - algorithm '' would comprise our @xmath23-algorithm as the special case where all occuring trees have height 1 .",
    "we indicated algorithms for handling all eight types individually , but what if some types occur simultaneously ?",
    "a case in point is [ w1 ] where ( i ) , ( i@xmath103 ) , ( iv ) , ( iv@xmath103 ) do just that . here",
    "an ad hoc algorithm of the @xmath22-type is successful .",
    "j. berman , p. khler , cardinalities of finite distributive lattices , mittelungen math .",
    "giessen , heft 121 ( 1976 ) 103 - 124 .",
    "a. conflitti , on whitney numbers of the order ideals of generalized fences and crowns , disc .",
    "( 2009 ) 615 - 621 . 3 .",
    "n. caspard , b. leclerc , b. monjardet , finite ordered sets , encyclopedia math . and appl .",
    "144 , cambridge university press 2012 .",
    "[ [ [ ej ] ] p.h .",
    "edelman , r.e .",
    "jamison , the theory of convex geometries , geom .",
    "dedicata 19 ( 1985 ) 247 - 270 . 5 .",
    "u. faigle , w. kern , computational complexity of some maximum average weight problems with precedence constraints , oper .",
    "42 ( 1994 ) 688 - 693 .",
    "d. gusfield , r.w .",
    "irwing , the stable marriage problem : structure and algorithms , mit press 1989 . 7 .",
    "m. habib , l. nourine , g. steiner , gray codes for the ideals of interval orders , journal of algorithms 25 ( 1997 ) 52 - 66 .",
    "d. knuth , the art of computer programming , vol.4 , fasc.3 , 2009 , pearson educ .",
    "r. medina , l. nourine , algorithme efficace de gnration des ideaux dun ensemble ordonn , c.r .",
    "paris sr .",
    "i math . 319",
    "( 1994 ) 1115 - 1120 .",
    "f. ruskey , listing and counting subtrees of a tree , siam j. comput . 10",
    "( 1981 ) 141 - 150 .",
    "h. mannila , k.j .",
    "rih , the design of relational databases , addison - wesley 1992 . 12 .",
    "g. steiner , on estimating the number of order ideals in partial orders , with some applications , j. stat .",
    "planning and inference 34 ( 1993 ) 281 - 290 .",
    "y. semegni , m. wild , lattices freely generated by posets within a variety .",
    "part ii : finitely generated varieties , arxiv:1007.1643 .",
    "m. wild , revisiting the enumeration of all models of a boolean 2-cnf , arxiv : 1208.2559 15 . m. wild , compactly generating all satisfying truth assignments of a horn formula , journal of satisfiability , boolean modeling and computation , 8 ( 2012 ) 63 - 82 .",
    "m. wild , incidence algebras that are uniquely determined by their zero - nonzero matrix pattern , lin . alg . and appl .",
    "430 ( 2009 ) 1007 - 1016 ."
  ],
  "abstract_text": [
    "<S> the @xmath0 cardinality @xmath1 ideals of any @xmath2-element poset ( @xmath3 fixed ) can be enumerated in time @xmath4 . </S>",
    "<S> the corresponding bound for @xmath1-element subtrees of a @xmath2-element tree is @xmath5 . </S>",
    "<S> an algorithm is described that by the use of wildcards displays all order ideals of a poset in a compact manner , i.e. not one by one . </S>"
  ]
}
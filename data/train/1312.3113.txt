{
  "article_text": [
    "for classical mechanical systems , the equation of motion can be written as @xmath0\\equiv \\mathcal{l}(t ) \\mathbf{\\rho}(t),\\ ] ] where @xmath1 is the set of phase variables , @xmath2 $ ] denotes the poisson bracket , @xmath3 represents the hamiltonian function , and @xmath4 denotes the liouville operator . for the case of @xmath5 particles , located in a spatially inhomogeneous time - dependent external field @xmath6 and interacting through the pair - wise potential @xmath7 , the _ hamiltonian _ reads @xmath8 here @xmath9 represents the position of particle @xmath10 @xmath11 moving with velocity @xmath12 and carrying the mass @xmath13 , so that @xmath14 and @xmath15 are the total kinetic and potential energies , respectively .",
    "then @xmath16 , and the _ liouville operator _ of the system takes the form @xmath17 where @xmath18 are forces acting on the particles due to their interactions .    if the initial configuration @xmath19 is specified , the unique solution to the problem of eqn .   can be presented by the _ time propagator operator _ as @xmath20^{l } \\rho(0),\\ ] ] where @xmath21 is a temporal step size and @xmath22 the total number of steps .",
    "@xmath23 denotes the time derivative operator acting on the left of time - dependent functions . if @xmath4 does not depend explicitly on time we set @xmath24 . in case of many - particle systems",
    "@xmath25 the time propagator can not be computed exactly even in the absence of time dependent potentials .",
    "hence one has to apply numerical integration methods such as decomposition schemes , which both preserve the physical properties of the hamiltonian system ( symplecticity , time reversibility ) and are computationally efficient @xcite .",
    "the basic idea of a decomposition approach is to factor out the exponential propagator @xmath26 in , such that @xmath27 , where the differential operators @xmath28 and @xmath29 represent the kinetic and potential energies with the acceleration @xmath30 .    in section 2",
    "we will discuss two well - known approaches to increase the accuracy of decomposition schemes : force - gradient schemes and nested multirate algorithms , which are both based on decomposition techniques .",
    "for both methods , computing the shadow hamiltonian is the suitable tool for deriving the order of the numerical integration scheme . in section 3",
    "both approaches are combined to obtain a more efficient scheme .",
    "finally , numerical results for a three body problem confirm the theoretical findings in section 4 .",
    "in this section we will briefly recapitulate two well - known schemes ( force - gradient and nested multirate schemes ) for reducing the computational costs .",
    "as both approaches are based on decomposition , the computation of the shadow hamiltonian can be used to determine the order of the numerical scheme .",
    "when transferring the well - known concept of modified equations to hamiltonian systems one ends up with the hamiltonian if and only if the integrator is symplectic @xcite . the motivation for studying numerically the conservation properties of these modified hamiltonians are multifaceted @xcite , e.g.numerical evidence for the existence of a hamiltonian for a particular calculation , exposure of energy drifts caused by numerical instability , etc .. skeel and hardy @xcite proposed a simple strategy for deriving highly accurate estimates for modified hamiltonians .",
    "since these modified hamiltonians approximate well the true hamiltonian , they are referred as `` shadow '' hamiltonians @xmath31 , cf .",
    "the existence of these shadow hamiltonians guarantees the boundedness of the error in the symplectic map , in fact we have @xmath32 for @xmath33 .",
    "conversely , if one starts from a given numerical solver then it is well known that any symplectic integrator different from the hamiltonian flow itself does not preserve the hamiltonian however a nearby system , the so - called _ shadow hamiltonian _ @xmath31 is conserved .",
    "the energy computed from the shadow hamiltonian of a symplectic integrators differs by @xmath34 from the true hamiltonian @xcite , with @xmath35 being the order of the integration scheme .",
    "hence , computing the shadow hamiltonian of a symplectic integrator is equivalent to determining the order of the integrator .    to compute a shadow hamiltonian",
    "it is necessary to expand an exponential map to a _",
    "hausdorff series_. to do so , we need to use the _ baker - cambell - hausdorf ( bch ) formula _",
    "@xmath36 where the coefficients @xmath37 are recursively determined from the relations @xmath38 and @xmath39 for @xmath40 , where @xmath41 $ ] and @xmath42 denote the bernoulli numbers . for example , the shadow hamiltonian of the leap - frog method @xmath43 is given by @xmath44\\bigr]+\\bigl[{t},[{t},{v}]\\bigr]\\bigr ) + { \\mathcal{o}}(h^{4}),\\ ] ] which is of second order accuracy .",
    "force - gradient schemes are based on the fact that the total propagator in eqn .",
    "can be split in the following way : @xmath45 where @xmath46 $ ] and @xmath47 $ ] denotes the commutator of two operators .",
    "the coefficients @xmath48 , @xmath49 and @xmath50 in have to be chosen in such way to obtain the highest possible order @xmath51 for a given integer @xmath52 .",
    "eqn .   represents the general form of the decomposition , while for @xmath53 the decomposition reduces to the standard non - gradient factorization .",
    "the force - gradient method is defined by using the value of @xmath50 which reduces the difference between the true hamiltonian and shadow hamiltonian @xmath31 which is conserved by the method .",
    "we will show how to determine the shadow hamiltonian @xmath31 in the next section .",
    "the third order force - gradient operator @xmath54 can be obtained for classical systems and is given by @xmath55\\bigr ] = \\sum \\limits^{n}_{i=1 } \\frac{\\mathbf{g}_{i}}{m_{i } } \\cdot \\frac{\\partial}{\\partial \\mathbf{v } } \\equiv   \\mathbf{g } \\cdot \\frac{\\partial}{\\partial \\mathbf{v}},\\ ] ] where @xmath56 @xmath57 and @xmath58 denote the cartesian components of the vectors .",
    "the force - gradient evaluations @xmath59 can be explicitly represented taking into account that @xmath60 where @xmath61 is the inter - particle part of the acceleration .",
    "the result is @xmath62+\\mathbf{h}_i,\\ ] ] where @xmath63    basically the evolution operators @xmath64 and @xmath65 displace @xmath66 and @xmath67 forward in time with @xmath68 the decomposition integration of eqn .",
    "conserves the symplectic map of flow of the particles in phase space , because the separate shifts of eqn .   of positions and velocities",
    "do not change the phase volume .",
    "time - reversibility can be ensured by imposing two conditions , namely @xmath69 , @xmath70 , @xmath71 , @xmath72 , as well as @xmath73 , @xmath74 , @xmath75 with @xmath76 and @xmath77 .",
    "next we deal with numerical integrators of the form given in eqn .",
    ", the most efficient version of which is due to omelyan @xcite . adding the force - gradient term @xmath54 in the leap - frog scheme",
    "does not increase the order of the method as one can not cancel the commutator @xmath78\\bigr]$ ] .",
    "however , the second - order five - stage method @xmath79 conserves the shadow hamiltonian @xcite @xmath80\\bigr]\\frac{h^2}{72 } + { \\mathcal{o}}(h^{4}),\\ ] ] where the leading error coefficient is a scalar multiple of the force - gradient term @xmath54 . thus adding a proper amount of the shadow hamiltonian defines the force - gradient scheme @xmath81 this scheme conserves the shadow hamiltonian @xcite @xmath82\\bigr]\\bigr]\\biggr ] + \\ldots \\right . \\\\     & \\left .",
    "+ 54\\biggl[{t},\\bigl[{t},\\bigl[{t},[{v},{t}]\\bigr]\\bigr]\\biggr ] \\right)\\frac{h^{4}}{155520 }   + { \\mathcal{o}}(h^{6 } ) , \\end{split}\\ ] ] which gains two orders of accuracy .      in order to reduce the computational effort to evaluate an evolution operator for one part of the action",
    ", we use a _ nested integrator _ with a small step - size to evaluate the inner cheap part @xcite .",
    "an example of such class of problems can be the multi - time scale problems .",
    "let us consider a hamiltonian which can be represented in the following form @xmath83 where @xmath14 represents the kinetic part , @xmath84 is the potential energy of the small ( fast ) scale part of the system and @xmath85 corresponds to the potential energy of the large ( slow ) scale part .",
    "we choose the following integrator to compute the inner part @xmath86 @xmath87^   { m}.\\ ] ]    therefore we define @xmath88 a nested integrator to solve the split problem of eqn .",
    ", it yields @xmath89^{l}.\\ ] ]    this method , called _ nested leap - frog _ , conserves the shadow hamiltonian @xcite @xmath90\\bigr ] + \\frac{1}{12}\\bigl[{v}_1,[{v}_2,{t}]\\bigr ]                                   + \\frac{1}{12}\\bigl[{t},[{v}_2,{t}]\\bigr ] \\\\                + \\frac{1}{m^{2 } }   \\bigl ( -\\frac{1}{24}\\bigl[{v}_1,[{v}_1,{t}]\\bigr ] + \\frac{1}{12}\\bigl[{t},[{v}_1,{t}]\\bigr ] \\bigr ) \\biggr ) h^{2 } + { \\mathcal{o}}(h^{4 } ) .",
    "\\end{aligned}\\ ] ]",
    "our idea is to combine both the force - gradient and the nested algorithm approaches in order to obtain a higher energy conservation rate . to do so ,",
    "let us first take a look at the following _ alike 5-stage nested integrator _",
    "@xmath91^{l},\\ ] ] where @xmath92^{m}.\\ ] ] we have chosen the 5-stage numerical integrator , since it has an optimal number of steps , necessary for increasing its order . to analyze the energy conservation of this integrator we have to determine its shadow hamiltonian .",
    "in order to do so , we use the bch formula . to simplify this task we consider the limit of the integrator of eqn .  , as @xmath93 tends to infinity .",
    "we obtain @xmath94^{l}.\\ ] ]    the shadow hamiltonian of the nested multirate integrator is given by @xmath95\\bigr ] \\\\ + \\frac{-1 + 6\\lambda}{24 } \\bigl[{v}_1,[{t},{v}_2]\\bigr ]       \\frac{-1 + 6\\lambda}{24 } \\bigl[{t},[{t},{v}_2]\\bigr ]   \\bigr ) h^{2 } + { \\mathcal{o}}(h^{4 } ) . \\label{shad.ham.ourmeth}\\end{gathered}\\ ] ]    _ proof : _ we apply the bch formula to the first two evolution operators @xmath96 where @xmath97 = - \\frac{\\lambda}{4}[{v}_1,{v}_2]- \\frac{\\lambda}{4}[{t},{v}_2],\\\\    3 c_3        & = \\frac{b_3}{3 ! } \\text{ad}c_1",
    "\\text{ad}c_1   \\left(\\lambda   { v}_2 + \\frac { { v}_1 + { t}}{2}\\right ) - \\frac{1}{2 } \\text{ad } c_2\\left(\\lambda   { v}_2 - \\frac { { v}_1 + { t}}{2}\\right),\\\\   \\mathbf{c_3 } & = - \\frac{1}{6}\\left[- \\frac{\\lambda}{4}[{v}_1,{v}_2]- \\frac{\\lambda}{4}[{t},{v}_2],~ \\lambda   { v}_2 - \\frac { { v}_1 + { t}}{2 } \\right ] \\\\            & =   - \\frac{\\lambda^{2}}{24 } \\bigl[{v}_2,[{v}_1,{v}_2]\\bigr ]    - \\frac{\\lambda^{2}}{24 } \\bigl[{v}_2,[{t},{v}_2]\\bigr ] + \\frac{\\lambda}{48 } \\bigl[{v}_1,[{v}_1,{v}_2]\\bigr]\\\\                 & \\qquad + \\frac{\\lambda}{48 } \\bigl[{v}_1,[{t},{v}_2]\\bigr ]   + \\frac{\\lambda}{48 } \\bigl[{t},[{v}_1,{v}_2]\\bigr ]   + \\frac{\\lambda}{48 } \\bigl[{t},[{t},{v}_2]\\bigr].\\end{aligned}\\ ] ]    then we have the result for our first two operators @xmath98- \\frac{\\lambda}{4}[{t},{v}_2]\\right ) h^{2 } \\\\     & \\qquad + \\left(- \\frac{\\lambda^{2}}{24 } \\bigl[{v}_2,[{v}_1,{v}_2]\\bigr ]    - \\frac{\\lambda^{2}}{24 } \\bigl[{t},[{t},{v}_2]\\bigr ]    + \\frac{\\lambda}{48 } \\bigl[{v}_1,[{v}_1,{v}_2]\\bigr ] \\right . \\\\     & \\left .",
    "\\qquad   + \\frac{\\lambda}{48 } \\bigl[{v}_1,[{t},{v}_2]\\bigr ]   + \\frac{\\lambda}{48 } \\bigl[{t},[{v}_1,{v}_2]\\bigr ]    + \\frac{\\lambda}{48 } \\bigl[{t},[{t},{v}_2]\\bigr ]   \\right ) h^{3 } + { \\mathcal{o}}(h^{5}).\\end{aligned}\\ ] ]    the next step is to apply the bch formula on the following operators @xmath99 and coefficients @xmath100 \\\\                  & = \\left(\\frac{1 - 2\\lambda}{4 } [ { v}_1,{v}_2 ] + \\frac{1 - 2\\lambda}{4 } [ { t},~{v}_2]\\right ) h^{2 } \\\\                 & \\qquad+ \\left(\\frac{\\lambda-2\\lambda^{2}}{8}\\bigl[{v}_2,[{v}_1,{v}_2]\\bigr ]                        +",
    "\\frac{\\lambda-2\\lambda^{2}}{8}\\bigl[{v}_2,[{t},{v}_2]\\bigr]\\right ) h^{3}\\\\      3 c_3       & = \\frac{b_3}{3 ! } \\text{ad}c_1",
    "\\text{ad}c_1   \\bigl(x + ( 1- 2\\lambda ) h { v}_{2}\\bigr )                     - \\frac{1}{2 } \\text{ad}c_2\\bigl(x -(1- 2\\lambda ) h { v}_{2}\\bigr),\\\\   \\mathbf{c_3 } & = - \\frac{1}{6}\\bigl[c_2,~ x -(1- 2\\lambda ) h { v}_{2 } \\bigr]\\\\ & =   \\left (   - \\frac{(1- 2\\lambda ) ( 1- 3\\lambda ) } { 24 } \\bigl[{v}_2,[{v}_1,{v}_2]\\bigr ]   - \\frac{(1- 2\\lambda ) ( 1- 3\\lambda ) } { 24 } \\bigl[{v}_2,[{t},{v}_2]\\bigr]\\right . \\\\",
    "& \\left.\\qquad   + \\frac{(1- 2\\lambda ) } { 48 } \\bigl[{v}_1,[{v}_1,{v}_2]\\bigr ]   + \\frac{(1- 2\\lambda ) } { 48 } \\bigl[{v}_1,[{t},{v}_2]\\bigr ]   + \\frac{(1- 2\\lambda ) } { 48 } \\bigl[{t},[{v}_1,{v}_2]\\bigr ] \\right .",
    "\\\\   & \\left.\\qquad+ \\frac{(1- 2\\lambda ) } { 48 } \\bigl[{t},[{t},{v}_2]\\bigr ] \\right ) h^{3},\\end{aligned}\\ ] ] and we obtain the following expansion    @xmath101+\\frac{1 - 3\\lambda}{4}[{t},{v}_2]\\right ) h^{2 } \\\\ & \\qquad   + \\left(\\frac{-1 + 8\\lambda-13\\lambda^{2}}{24 } \\bigl[{v}_2,[{v}_1,{v}_2]\\bigr ]        + \\frac{-1 + 8\\lambda-13\\lambda^{2}}{24 } \\bigl[{t},[{t},{v}_2]\\bigr ]    \\right . \\\\   & \\left .",
    "\\qquad    + \\frac{1-\\lambda}{48 } \\bigl[{v}_1,[{v}_1,{v}_2]\\bigr ]    + \\frac{1-\\lambda}{48 } \\bigl[{v}_1,[{t},{v}_2]\\bigr ]     + \\frac{1-\\lambda}{48 } \\bigl[{t},[{v}_1,{v}_2]\\bigr ] \\right .",
    "\\\\   & \\left .",
    "\\qquad + \\frac{1-\\lambda}{48 } \\bigl[{t},[{t},{v}_2]\\bigr ]   \\right ) h^{3 } + { \\mathcal{o}}(h^{5}),\\end{aligned}\\ ] ]    the next step would be to repeat the previous procedures to find @xmath102    using the bch formula we obtain @xmath103 \\\\    & = \\left(-\\frac{1-\\lambda}{4 } [ { v}_1,~{v}_2 ] -\\frac{1-\\lambda}{4 } [ { t},~{v}_2]\\right ) h^{2}\\\\    & \\qquad   + \\left(-\\frac{1 - 3\\lambda}{16}\\bigl[{v}_1,[{v}_1,{v}_2]\\bigr ]          -\\frac{1 - 3\\lambda}{16}\\bigl[{v}_1,[{t},{v}_2]\\bigr ] \\right .",
    "\\\\ & \\left .",
    "\\qquad \\qquad-\\frac{1 - 3\\lambda}{16}\\bigl[{t},[{v}_1,{v}_2]\\bigr ]                  -\\frac{1 - 3\\lambda}{16}\\bigl[{t},[{t},{v}_2]\\bigr]\\right ) h^{3 } , \\\\    3 c_3 & = \\frac{b_3}{3 ! }",
    "\\text{ad}c_1 \\text{ad}c_1   \\left(y + h\\frac { { v}_1 + { t}}{2}\\right ) - \\frac{1}{2 } \\text{ad } c_2\\left(y -h\\frac { { v}_1 + { t}}{2}\\right)\\\\   \\mathbf{c_3 } & = - \\frac{1}{6}\\left[c_2,~ y - h\\frac { { v}_1 + { t}}{2 } \\right],\\\\   & =   \\left ( - \\frac{(1- \\lambda ) ^{2}}{24 } \\bigl[{v}_2,[{v}_1,{v}_2]\\bigr ]             - \\frac{(1- \\lambda ) ^{2}}{24 } \\bigl[{v}_2,[{t},{v}_2]\\bigr ] \\right ) h^{3}.\\end{aligned}\\ ] ] therefore we obtain @xmath104+\\frac{-2\\lambda}{2}[{t},{v}_2]\\bigr ) h^{2 } \\\\",
    "& \\qquad   + \\left(\\frac{-1 + 5\\lambda-7\\lambda^{2}}{12 } \\bigl[{v}_2,[{v}_1,{v}_2]\\bigr ]        + \\frac{-1 + 5\\lambda-7\\lambda^{2}}{12 } \\bigl[{t},[{t},{v}_2]\\bigr]\\right.\\\\    & \\left.\\qquad\\qquad + \\frac{-1 + 4\\lambda}{48 } \\bigl[{v}_1,[{v}_1,{v}_2]\\bigr ]   + \\frac{-1 + 4\\lambda}{48 } \\bigl[{v}_1,[{t},{v}_2]\\bigr ] \\right . \\\\    & \\left.\\qquad\\qquad + \\frac{-1 + 4\\lambda}{48 } \\bigl[{t},[{v}_1,{v}_2]\\bigr ]     + \\frac{-1 + 4\\lambda}{48 } \\bigl[{t},[{t},{v}_2]\\bigr ]   \\right ) h^{3 } + o(h^{4}).\\end{aligned}\\ ] ] applying the bch formula for a last time we obtain the shadow hamiltonian @xmath105 with the coefficients@xmath106 \\\\ & =    \\left(\\frac{\\lambda}{2 } [ { v}_1,~{v}_2 ] + \\frac{\\lambda}{2 } [ { t},~{v}_2]\\right ) h^{2 }    + \\left(\\frac{\\lambda^2}{4}\\bigl[{v}_2,[{v}_1,{v}_2]\\bigr ]      + \\frac{\\lambda^2}{4}\\bigl[{v}_2,[{t},{v}_2]\\bigr ] \\right ) h^{3},\\\\    3 c_3 & = \\frac{b_3}{3 ! } \\text{ad}c_1",
    "\\text{ad}c_1   \\left(z + \\lambda { v}_2 h\\right ) - \\frac{1}{2 } \\text{ad } c_2\\left(z - \\lambda { v}_2 h\\right),\\\\   \\mathbf{c_3 } & = - \\frac{1}{6}\\left[c_2,~ z - \\lambda { v}_2 h \\right ] \\\\",
    "& =   \\left (   \\frac{\\lambda(1- 2\\lambda ) ^{2}}{12 } \\bigl[{v}_2,[{v}_1,{v}_2]\\bigr ]             + \\frac{\\lambda(1- 2\\lambda)^{2}}{12 } \\bigl[{v}_2,[{t},{v}_2]\\bigr ]               + \\frac{\\lambda } { 12 } \\bigl[{v}_1,[{v}_1,{v}_2]\\bigr ]   \\right.\\\\   & \\left .",
    "\\qquad+\\frac{\\lambda } { 12 } \\bigl[{v}_1,[{t},{v}_2]\\bigr ]    + \\frac{\\lambda } { 12 } \\bigl[{t},[{v}_1,{v}_2]\\bigr ]    + \\frac{\\lambda } { 12 } \\bigl[{t},[{t},{v}_2]\\bigr ] \\right ) h^{3},\\end{aligned}\\ ] ] and finally @xmath107\\bigr]+      \\frac{-1 + 6\\lambda}{24 } \\bigl[{v}_1,[{t},{v}_2]\\bigr ] \\right.\\\\    & \\left.\\qquad   + \\frac{-1 + 6\\lambda-6\\lambda^{2}}{12 } \\bigl[{v}_2,[{t},{v}_2]\\bigr ]    + \\frac{-1 + 6\\lambda}{24 } \\bigl[{v}_1,[{v}_1,{v}_2]\\bigr]\\right.\\\\   & \\left .",
    "\\qquad + \\frac{-1 + 6\\lambda}{24 } \\bigl[{t},[{v}_1,{v}_2]\\bigr ]      + \\frac{-1 + 6\\lambda}{24 } \\bigl[{t},[{t},{v}_2]\\bigr ]   \\right ) h^{2}+ { \\mathcal{o}}(h^{4}).\\end{aligned}\\ ] ] finally , taking into account that @xmath108 = 0 $ ] , hence @xmath109\\bigr]$ ] , @xmath110\\bigr]$ ] and @xmath111\\bigr]$ ] are equal to zero , we obtain .",
    "we can eliminate a couple of terms by choosing @xmath112 , thus @xmath113\\bigr ]   h^{2 }   + { \\mathcal{o}}(h^{4}).\\ ] ] we would like to increase the order of the method by adding the force - gradient term , but first we consider the force - gradient itself . due to the splitting",
    "it can be represented as @xmath114\\bigr ] = \\bigl[{v}_2 + { v}_1,[{t},{v}_2+{v}_1]\\bigr ] \\\\",
    "= \\bigl[{v}_2,[{t},{v}_2]\\bigr ] + \\bigl[{v}_1,[{t},{v}_1]\\bigr ] + \\bigl[{v}_1,[{t},{v}_2]\\bigr ] + \\bigl[{v}_2,[{t},{v}_1]\\bigr].\\end{gathered}\\ ] ] then we can tune the original algorithm by adding the first term of the force gradient @xmath115\\bigr]$ ] and neglect the last three terms : @xmath116\\bigr ] }     \\delta\\left(\\frac{h}{2}\\right)_{m }   \\operatorname{e}^{\\frac{1}{6 } h\\hat{{v}}_{2 } } \\right]^{l},\\ ] ] which preserves the fourth - order accurate shadow hamiltonian @xmath117",
    "in order to estimate the performance of the integrator of eqn .   we compare it with the other algorithms mentioned above .",
    "let us consider the three body problem @xcite and a particular case of it , the _ sun - earth - moon problem_. the given system has the energy @xmath118 where @xmath119 , @xmath120 , @xmath121 and @xmath122 represent the masses of the sun , the earth and the moon , respectively and @xmath123 is the gravitational constant .",
    "the equations of motion are then @xmath124 the force - gradient terms can be obtained from for this case , using the external field potential @xmath125 and the pair - wise potentials @xmath126 respectively for each interaction .",
    ".physical parameters of the sun - earth - moon problem . [ cols=\"<,^,^\",options=\"header \" , ]            figure  [ fig:1 ] presents a comparison between the standard numerical algorithms , nested approaches , the force - gradient and our combined method .",
    "the proposed integrator of eqn .   with @xmath127 , which combines nested and force - gradient ideas , yields a better energy conservation even compared with 9-stage and 11-stage force - gradient numerical schemes .",
    "these numerical results correspond to our analytical observations .",
    "figure  [ fig:2 ] presents the cpu time , required for the three different integrators against the achieved accuracy .",
    "here we scale the time needed for the computation of the fast part by a factor of @xmath128 , since we assume that the computation of the fast scale functions is very cheap compared to the slow scale function evaluations .",
    "we can see that in general our nested force - gradient method requires less cpu time and performs more accurate than the standard schemes , presented in figure  [ fig:2 ] .",
    "+ thus we can argue that , if the evaluation of fast function is significantly cheaper than the _ slow _ function , computational costs decrease .",
    "this is exactly the case found in our long - term goal applications in lattice quantum chromodynamics ( lqcd ) , where the action can be split into two parts : the gauge action  ( whose force evaluations are cheap ) and the fermion action  ( expensive ) .",
    "we have introduced a new decomposition scheme for hamiltonian systems , which combines the idea of the force - gradient time - reversible and symplectic integrators and the splitting approach of nested algorithms .",
    "the new method of eqn .",
    "is fourth - order accurate . compared to other fourth - order schemes ,",
    "the leading error coefficient is smaller and computational costs are lower",
    ".    our future work will apply this approach in the hybrid monte carlo @xcite ( hmc ) algorithm for numerical integration of the lattice path - integral of quantum chromodynamics ( qcd ) , which describes the strong interactions between quarks and gluons inside the nucleons . in this case , the hamiltonian dynamics are defined on curved manifolds and one has to take into account the non - commutativity of the operators @xmath129 and @xmath130 .",
    "this work is supported by the european union within the marie curie initial training network strongnet on _ strong interaction supercomputing training network _ ( grant agreement number 238353 ) .",
    "this work is part of project b5 within the sfb / transregio 55 _ hadronenphysik mit gitter - qcd_.          i.p .",
    "omelyan , i.m .",
    "mryglod , r.  folk , _ symplectic analytically integrable decomposition algorithms : classification , derivation , and application to molecular dynamics , quantum and celestial mechanics _ , comput .",
    "151(2003 ) , pp . 272314 ."
  ],
  "abstract_text": [
    "<S> force - gradient decomposition methods are used to improve the energy preservation of symplectic schemes applied to hamiltonian systems . </S>",
    "<S> if the potential is composed of different parts with strongly varying dynamics , this multirate potential can be exploited by coupling force - gradient decomposition methods with splitting techniques for multi - time scale problems to further increase the accuracy of the scheme and reduce the computational costs . in this paper , we derive novel force - gradient nested methods and test them numerically . </S>",
    "<S> such methods can be used to increase the acceptance rate for the molecular dynamics step of the hybrid monte carlo algorithm ( hmc ) and hence improve its computational efficiency .    numerical geometric integration , decomposition methods , energy conservation , force - gradient , nested algorithms , multirate schemes , operator splitting 65p10 , 65l06 , 34c40 </S>"
  ]
}
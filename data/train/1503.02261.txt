{
  "article_text": [
    "attack trees allow for an effective security analysis by systematically organizing the different ways in which a system can be attacked into a tree .",
    "the root node of an attack tree represents the _ attacker s goal _ and the children of a given node represent its refinement into _ sub - goals_. a refinement is typically either disjunctive ( denoted by @xmath2 ) or conjunctive ( denoted by @xmath3 ) .",
    "the leaves of an attack tree represent the attacker s actions and are called _",
    "basic actions_.    since their inception by schneier  @xcite , attack trees have quickly become a popular modeling tool for security analysts . however , the limitations of this formalism , in particular with respect to expressing the order in which the various attack steps are executed , have been recognized by many authors ( see e.g. ,  @xcite ) . in practice ,",
    "modeling of security scenarios often requires constructs where conditions on the execution order of the attack components can be clearly specified .",
    "this is for instance the case when the time or ( conditional ) probability of an attack is considered , as in  @xcite .",
    "consequently , several studies have extended attack trees informally with sequential conjunctive refinements .",
    "such extensions have resulted in improved modeling and analyses ( e.g. , @xcite ) and software tools , e.g. , atsyra  @xcite .",
    "even though the sequential conjunctive refinement , that we denote by @xmath0 , is well understood at a conceptual level and even applied to real world scenarios  @xcite , none of the existing solutions have provided a rigorous mathematical formalization of attack trees with @xmath0 .",
    "indeed , the extensions found in the literature are rather diverse in terms of application domain , interpretation , and formality .",
    "thereby , it is infeasible to answer fundamental questions such as : what is the precise expressibility of @xmath0  attack trees ?",
    "when do two such trees represent the same security scenario ? or what type of attributes can be synthesized on @xmath0  attack trees in the standard bottom - up way ? these questions can only be precisely answered if @xmath0  attack trees are provided with a formal , general , and explicit interpretation , that is to say , if @xmath0  attack trees are given a formal foundation .    _",
    "contributions : _ in this article we formalize the meaning of a @xmath1 attack tree by defining its semantics . our semantics is based on series - parallel ( sp ) graphs , which is a well - studied branch of graph theory . we provide a complete axiomatization for the sp semantics and show that the sp semantics for @xmath1 attack trees are a conservative extension of the multiset semantics for standard attack trees  @xcite ( i.e. , our extension does not introduce unexpected equivalences w.r.t .  the multiset semantics ) .",
    "to do so , we define a term rewriting system that is terminating and confluent and obtain normal forms for @xmath1 attack trees . as a consequence ,",
    "we achieve the rather surprising result that the domains of @xmath1 attack trees and sets of sp graphs are isomorphic .",
    "we also extend the notion of attributes for @xmath1 attack trees which enable the quantitative analysis of attack scenarios using the standard bottom - up evaluation algorithm .",
    "one of the goals of our work is to provide a level of abstraction that encompasses most of the existing approaches from literature .",
    "for example , operators , such as the priority - based and the time - based connectors  @xcite , are indeed captured by the @xmath1 operator defined in this article . moreover ,",
    "other published semantics , such as those based on cumulative distribution functions  @xcite , conditional probabilities  @xcite , or boolean algebra  @xcite , can be expressed as an attribute in our formalism .",
    "last but not least , even though we make the distinction between @xmath3 and @xmath1 refinements explicit , our semantics satisfies backward compatibility with the well - known multiset semantics of attack trees  @xcite .",
    "this stresses the , much needed , unifying character of our approach .",
    "_ organization : _",
    "section  [ sec : related - work ] summarizes the related work and puts our work in context .",
    "section  [ sec : sand - atree ] provides a formal definition of @xmath0  attack trees and its semantics using series - parallel graphs .",
    "section  [ sec : axioms ] defines a complete set of axioms for @xmath0  attack trees and presents a term rewriting system which allows identification of semantically equivalent @xmath0  attack trees .",
    "section  [ sec : attributes ] outlines an approach to quantitatively analyze @xmath0  attack trees using attributes .",
    "finally , section  [ sec : conclusions ] concludes with an outlook on future work .",
    "several extensions of attack trees with temporal or causal dependencies between attack steps have been proposed .",
    "we observe that there are three different approaches to achieve this goal .",
    "the first approach is to use standard attack trees with the added assumption that the children of an @xmath4  node are sequentially ordered .",
    "this approach is mostly applied to the design of algorithms or tools for the analysis of attack trees under the assumption of ordered events .",
    "the second approach is to introduce a mechanism for ordering events in an attack tree , for instance by adding a new type of edge to express causality or conditionality . in its most general case ,",
    "any partial order on the events in an attack tree can be specified .",
    "the third approach consists of the introduction of a new type of node for sequencing .",
    "most extensions fall in this category .",
    "this approach is used by authors who require their formalism to be backward compatible , or who need standard , as well as ordered conjunction .",
    "we discuss for each of these approaches the most relevant papers with respect to the present article .",
    "that is , we only consider approaches that still have the main characteristics of attack trees , being the presence of @xmath4  and @xmath5nodes and the interpretation of the edges as a refinement relation .",
    "thus , we consider approaches such as attack graphs  @xcite and bayesian networks  @xcite as out of scope for this paper .      in their work on",
    "_ bayesian networks for security _",
    ", qin and lee define a transformation from attack trees to bayesian networks  @xcite .",
    "they state that `` there always exists an implicit dependent and sequential relationship between @xmath4  nodes in an attack tree . ''",
    "most literature on attack trees seem to contradict this statement , implying that there is a need to explicitly identify such sequential relationships .",
    "jrgenson and willemson developed an algorithm to calculate the _ expected outcome _ of an attack tree  @xcite .",
    "the goal of the algorithm is to determine a permutation of leaves for which the optimal expected outcome for an attacker can be achieved .",
    "in essence , their input is an attack tree where an @xmath4  node represents all possible sequences of its children .",
    "a peculiarity of their interpretation is that multiple occurrences of the same node are considered only once , implying that the execution of twice the same action can not be expressed .",
    "peine , jawurek , and mandel introduce _ security goal indicator trees _",
    "@xcite in which nodes can be related by a notion of _ conditional dependency _ and boolean connectors .",
    "the authors , however , do not formally specify the syntax and semantics of the model .",
    "a more general approach is proposed by pitre - cambacds and bouissou @xcite , who apply _ boolean logic driven markov processes _ to security modeling .",
    "their formalism does not introduce new gates , but a ( trigger-)relation on the nodes of the attack tree .",
    "although triggers can express a more general sequential relation than the @xmath1 operator , they lack the readability of standard attack tree operators .",
    "_ vulnerability cause graphs _",
    "@xcite combine properties of attack trees ( @xmath3 and @xmath2 nodes ) and attack graphs ( edges express order rather than refinement ) .",
    "the interaction between the @xmath3 nodes and the order relation is defined through a graph transformation called _ conversion of conjunctions _ , which ignores the order between nodes .",
    "this discrepancy could be solved by considering distinct conjunctive and sequential conjunctive nodes , as we do in this paper .      as noted by arnold et al .",
    "@xcite , the analysis of time - dependent attacks requires attack trees to be extended with a sequential operator .",
    "this is accomplished by defining sequential nodes as conjunctive nodes with a notion of progress of time .",
    "the authors define a formal semantics for this extension based on cumulative distribution functions ( cdfs ) , where a cdf denotes the probability that a successful attack occurs within time @xmath6 .",
    "the main difference with our work is that their approach is based on an explicit notion of time , while we have a more abstract approach based on causality . in their semantics ,",
    "the meaning of an extended attack tree is a cdf , in which the relation to the individual basic attacks is not explicit anymore . in contrast , in our semantics the individual basic attacks and their causal ordering remain visible . as such , our semantics can be considered more abstract , and indeed , we can formulate their semantics as an _ attribute _ in our approach .",
    "_ enhanced attack trees _  @xcite ( eats ) distinguish between @xmath2 , @xmath3 and @xmath7 ( ordered @xmath3 ) .",
    "similarly to the approach of arnold et al .",
    "@xcite , ordered @xmath3 nodes are used to express temporal dependencies between attack components .",
    "the authors evaluate eats by transforming them into tree automata .",
    "intermediate states in the automaton support the task of reporting partial attacks .",
    "however , because every intermediate node of the tree corresponds to a state in the tree automaton , their approach does not scale well .",
    "this problem can be addressed by considering the normal form of attack trees , as proposed in this article .",
    "not every extension of attack trees with @xmath1 refinements concerns time - dependent attack scenarios ; some aim at supporting risk analyses with conditional probabilities .",
    "for that purpose , wen - ping and wei - min introduce _ improved attack trees _  @xcite .",
    "the concepts , however , are described at an intuitive level only .    _ unified parameterizable attack trees _",
    "@xcite unify different extensions of attack trees ( structural , computational , and hybrid ) .",
    "the authors consider two types of ordered @xmath3 connectors : priority - based connectors and time - based connectors .",
    "the children of the former are ordered from highest to lowest priority , whereas the children of the latter are ordered temporally .",
    "our formalism gives a single interpretation to the @xmath1 operator , yet it can capture both connectors .",
    "due to obvious similarities , we also review approaches that introduce the @xmath1 operator in fault trees . for example , brooke and paige include five fault tree gates : @xmath3 , @xmath2 , priority @xmath3 , exclusive @xmath2 , and an inhibit gate  @xcite .",
    "the authors do not discuss the semantics of their model for security , though .",
    "another fault tree based approach is discussed by khand  @xcite , who proposes to extend attack trees with a set of gates from dynamical fault tree modeling that overlaps with the gates used by brooke and paige  @xcite and in particular contains the priority @xmath3 gate .",
    "khand assigns truth values to his attack trees by giving truth tables for all gates .",
    "khand s truth tables , when restricted to @xmath3 , @xmath2 , and priority @xmath3 , constitute an attribute domain which is compatible ( in the sense of  @xcite ) with the sp semantics for @xmath1 attack trees as defined in this paper .",
    "we observe that the extensions of attack trees with sequential conjunction are rather diverse in terms of application domain , interpretation , and formality . in order to give a clear and unambiguous interpretation of the @xmath1 operator and",
    "capture different application domains , it is necessary to give a formal semantics as a translation to a well - understood domain . note that , neither the multiset  @xcite nor the propositional semantics  @xcite can express ordering of attack components .",
    "therefore , a richer semantical domain needs to be defined .",
    "the purpose of this article is to address this problem .",
    "we extend the attack tree formalism so that a refinement of a ( sub-)goal of an attacker can be a sequential conjunct ( denoted by @xmath0 ) in addition to disjuncts and conjuncts .",
    "we first give a definition of attack trees with the new sequential operator and then define series - parallel graphs on which the semantics for the new attack trees is based .",
    "let @xmath8 denote the set of all possible basic actions of an attacker .",
    "we formalize standard attack trees introduced by schneier in  @xcite and call them simply _ attack trees _ in the rest of this paper .",
    "attack trees are closed terms over the signature @xmath9 , generated by the following grammar , where @xmath10 is a terminal symbol .",
    "@xmath11 the universe of attack trees is denoted by @xmath12 . _",
    "@xmath1 attack trees _ are closed terms over the signature @xmath13 , where @xmath1 is a non - commutative operator called _ sequential conjunction _ , and are generated by the grammar @xmath14 the universe of @xmath1 attack trees is denoted by @xmath15 .",
    "the purpose of @xmath5  and @xmath4  refinements in @xmath1 attack trees is the same as in attack trees .",
    "the sequential conjunctive refinement @xmath0  allows us to model that a certain goal is reached if and only if all its subgoals are reached in a precise order .",
    "the following attack scenario motivates the need for extending attack trees with sequential conjunctive refinement .",
    "[ eg : def - attack - tree ] consider a file server @xmath16 , offering ftp , ssh , and rsh services .",
    "the attack tree in figure  [ fig : attack - tree ] shows how an attacker can gain root privileges on @xmath16 ( @xmath17 ) , in two ways : either without providing any user credentials ( @xmath18 ) or by breaching the authentication mechanism ( @xmath19 ) .        in the first case",
    ", the attacker must first gain user privileges on @xmath16 ( _ gain user privileges _ ) and then perform a local buffer overflow attack ( @xmath20 ) .",
    "since the attack steps must be executed in this particular order , the use of @xmath0  refinement is substantial . to gain user privileges ,",
    "the attacker must exploit an ftp vulnerability to anonymously upload a list of trusted hosts to @xmath16 ( @xmath21 ) .",
    "finally , she can use the new trust condition to remotely execute shell commands on @xmath16 ( @xmath22 ) .",
    "the second way is to abuse a buffer overflow in both the ssh daemon ( @xmath23 ) and the rsaref2 library ( @xmath24 ) used for authentication .",
    "these attacks can be executed in any order , which is modeled with the standard @xmath4  refinement .    using the term notation introduced in this section",
    ", we can represent the @xmath0  attack tree in figure  [ fig : attack - tree ] as @xmath25 where @xmath26 are basic actions .      a _ series - parallel graph _ ( sp graph ) is an edge - labeled directed graph that has two unique , distinct vertices , called _ source _ and _ sink _ , and that can be constructed with the two operators for sequential and parallel composition of graphs that we formally define below .",
    "a source is a vertex which has no incoming edges and a sink is a vertex without outgoing edges .",
    "our formal definition of sp graphs is based on _ multisets _ , i.e. , sets in which members are allowed to occur more than once .",
    "we use @xmath27 to denote multisets and @xmath28 to denote powersets .",
    "the _ support _ @xmath29 of a multiset @xmath30 is the set of distinct elements in @xmath30 .",
    "for instance , the support of the multiset @xmath31 is @xmath32 .    in order to define sp graphs ,",
    "we first introduce the notion of source - sink graphs labeled by the elements of @xmath8 .    a _ source - sink graph _ over @xmath8",
    "is a tuple @xmath33 , where @xmath34 is the set of vertices , @xmath35 is a multiset of labeled edges with support @xmath36 , @xmath37 is the unique source , @xmath38 is the unique sink , and @xmath39 .",
    "the sequential composition of a source - sink graph @xmath33 with a source - sink graph @xmath40 , denoted by @xmath41 , is the graph resulting from taking the disjoint union of @xmath42 and @xmath43 and identifying the sink of @xmath42 with the source of @xmath43 .",
    "more precisely , let @xmath44 denote the disjoint union operator and @xmath45}$ ] denote the multiset of edges in @xmath35 , where all occurrences of vertex @xmath46 are replaced by vertex @xmath47 .",
    "then we define @xmath48}\\dot\\cup e ' , s , z').\\ ] ] the parallel composition , denoted by @xmath49 , is defined similarly , except that the two sources are identified and the two sinks are identified .",
    "formally , we have @xmath50}\\dot\\cup e ' , s ' , z').\\ ] ] it follows directly from the definitions that the sequential composition is associative and that the parallel composition is associative and commutative .",
    "we write @xmath51 for the graph with a single edge labeled with @xmath52 and define sp graphs as follows .",
    "[ def : sp - graph ] the set @xmath53 of _ series - parallel graphs _ ( sp graphs ) over @xmath8 is defined inductively by the following two rules    * for @xmath54 , @xmath51 is an sp graph . * if @xmath42 and @xmath43 are sp graphs , then so are @xmath41 and @xmath49 .",
    "it follows directly from definition  [ def : sp - graph ] that sp graphs are connected and acyclic .",
    "moreover , every vertex of an sp graph lies on a path from the source to the sink .",
    "we consider two sp graphs to be _ equal _ if there is a bijection between their sets of vertices that preserves the edges and edge labels .",
    "figure  [ fig : example - spgraph ] shows an example of an sp graph with the source @xmath47 and the sink @xmath46 .",
    "this graph corresponds to the construction @xmath55          numerous semantics have been proposed to interpret attack trees , including propositional logic  @xcite , multisets  @xcite , de morgan lattices  @xcite , tree automata  @xcite , and markov processes  @xcite .",
    "the choice of a semantics allows us to accurately represent the assumptions made in a security scenario , e.g. , whether actions can be repeated or resources reused , and to decide which trees represent the same security scenario .",
    "the advantages of formalizing attack trees and the need for various semantics have been discussed in  @xcite . since attack trees are @xmath4/@xmath5  trees , the most natural interpretation is based on propositional logic .",
    "however , because the logical operators are idempotent , this interpretation assumes that the multiplicity of an action is irrelevant . as a consequence ,",
    "the propositional semantics is not well suited to reason about scenarios with multiple occurrences of the same action . due to this lack of expressivity",
    "a semantics was proposed  @xcite in which the multiplicity of actions is taken into account .",
    "this was achieved by interpreting an attack tree as a set of multisets that represent different ways of reaching the root goal .",
    "this multiset semantics is compatible with computations that depend on the number of occurrences of an action in the tree , such as the minimal time to carry out the attack represented by the root goal .",
    "we now extend the multiset semantics to @xmath1 attack trees .",
    "since sp graphs naturally extend multisets with a partial order , they supply a formalism in which we can interpret trees using both  commutative and sequential  conjunctive refinements .",
    "sp graphs therefore provide a canonical semantics for @xmath0  trees in which multiplicity and ordering of goals and actions are significant .",
    "the idea is to interpret an attack tree @xmath6 as a set of sp graphs .",
    "the semantics @xmath56\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}=\\{g_1,\\dots , g_k\\}$ ] of a tree @xmath6 corresponds to the set of possible attacks @xmath57 , where each attack is described by an sp graph labeled by the basic actions of @xmath6 .",
    "[ def : sp - sem ] the _ sp semantics _ for @xmath1 attack trees is given by the function @xmath58\\hspace{-0.05cm}]_{\\mathcal{s\\!p } } } : { \\ensuremath{\\mathbb{t}_{{\\ensuremath{\\mathtt{sand}}}}}}\\to { \\ensuremath{\\mathcal{p}({\\ensuremath{\\mathbb{g}_{\\mathcal{s\\!p}}}})}}$ ] , which is defined recursively as follows : for @xmath10 , @xmath59 , @xmath60 , @xmath61\\hspace{-0.05cm}]_{\\mathcal{s\\!p } } } = \\{\\xrightarrow{b}\\}\\\\ { [ \\hspace{-0.05cm}[{\\ensuremath{\\mathtt{or}}}(t_1 , \\dots , t_k)]\\hspace{-0.05cm}]_{\\mathcal{s\\!p } } } = \\bigcup_{i=1}^{k}{{[\\hspace{-0.05cm}[t_i]\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}}\\\\ { [ \\hspace{-0.05cm}[{\\ensuremath{\\mathtt{and}}}(t_1 , \\dots , t_k)]\\hspace{-0.05cm}]_{\\mathcal{s\\!p } } } =   \\ { g_1 { \\parallel}\\dots { \\parallel}g_k \\ \\mid \\    ( g_1 , ... , g_k ) \\in { [ \\hspace{-0.05cm}[t_1]\\hspace{-0.05cm}]_{\\mathcal{s\\!p } } } \\times ... \\times { [ \\hspace{-0.05cm}[t_k]\\hspace{-0.05cm}]_{\\mathcal{s\\!p } } }   \\}\\\\ { [ \\hspace{-0.05cm}[{\\ensuremath{\\mathtt{sand}}}(t_1 , \\dots , t_k)]\\hspace{-0.05cm}]_{\\mathcal{s\\!p } } } =   \\ { g_1 { \\cdot}\\dots { \\cdot}g_k\\ \\mid \\    ( g_1 , ... , g_k ) \\in { [ \\hspace{-0.05cm}[t_1]\\hspace{-0.05cm}]_{\\mathcal{s\\!p } } } \\times ... \\times { [ \\hspace{-0.05cm}[t_k]\\hspace{-0.05cm}]_{\\mathcal{s\\!p } } }   \\}.\\\\ \\end{array}\\ ] ]     the sp semantics maps @xmath1 attack trees to sets of sp graphs as follows . a leaf corresponding to a basic action @xmath52 is translated into a singleton set containing the sp graph which consists of a single edge labeled with @xmath52 .",
    "the semantics of a disjunctive node is the set of all the alternative attacks described by the node s children .",
    "the semantics of a conjunctive node is the parallel composition of every attack alternative from each of its children . finally , the semantics of a sequential conjunctive node is a sequential composition of attack alternatives for the children .",
    "[ ex : sem(t ) ] the sp semantics of the attack tree @xmath6 depicted in figure  [ fig : attack - tree ] is @xmath62\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}=\\{\\xrightarrow{{\\ensuremath{\\textit{ftp}}}}\\xrightarrow{{\\ensuremath{\\textit{rsh } } } } \\xrightarrow{{\\ensuremath{\\textit{lobf}}}}\\ , \\   \\xrightarrow{{\\ensuremath{\\textit{ssh } } } } { \\parallel}\\xrightarrow{{\\ensuremath{\\textit{rsa}}}}\\}.\\ ] ]    as shown in example  [ ex : sem(t ) ] , the sp semantics provides an alternative graph representation for attack trees and therefore contributes a different perspective on an attack scenario .",
    "the @xmath0  attack tree emphasizes the refinement of goals , whereas sp graphs highlight the sequential aspect of attacks .",
    "the sp semantics provides a natural partition of @xmath15 into equivalence classes .",
    "[ def : equivalent ] two @xmath0  attack trees @xmath63 and @xmath64 are _ equivalent with respect to the sp semantics _ if and only if they are interpreted by the same set of sp graphs , i.e. , @xmath65\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}={[\\hspace{-0.05cm}[t_2]\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] .    by definition  [ def : equivalent ] , if the sp semantics provides accurate assumptions for an attack scenario , then two @xmath1 attack trees represent the same attack scenario if and only if they are equivalent with respect to the sp semantics .",
    "we finish this section by noticing that in the case of @xmath0  attack trees without any @xmath1 refinement , the sp semantics coincides with the multiset semantics introduced in  @xcite .",
    "indeed , it suffices to identify the multiset @xmath66 with the sp graph @xmath67 .",
    "we discuss this issue more in details in section  [ sec : sp_vs_m ] .",
    "in order to provide efficient analysis methods for attack tree - like models , we need to be able to decide whether two trees are equivalent with respect to a given semantics . ideally , we would like to find the most efficient ( e.g. , the smallest ) representation of a given security scenario .",
    "however , in the case of the @xmath0  semantics , there exists an infinite number of trees @xmath68 equivalent to a given tree @xmath6 .    in this section",
    "we study the mathematical implications of using sets of sp graphs as an interpretation domain for @xmath0  attack trees .",
    "we introduce an axiomatization of @xmath1 attack trees which is complete with respect to the sp semantics .",
    "this allows us to reason directly on @xmath1 attack trees , without having to move to the semantical domain .",
    "further , we derive a term rewriting system from the axiomatization as a means to effectively decide whether two @xmath1 attack trees are equivalent with respect to the sp semantics . as a consequence ,",
    "we obtain a canonical representation of @xmath1 attack trees which we prove to be isomorphic to sets of sp graphs .",
    "let @xmath69 be a set of variables denoted by capital letters .",
    "following the approach developed in  @xcite , we axiomatize @xmath1 attack trees with equations @xmath70 , where @xmath71 and @xmath72 are terms over variables in @xmath69 , constants in @xmath8 , and the operators @xmath4 , @xmath5 , and @xmath0 . the equations",
    "formalize the intended properties of refinements and provide semantics - preserving transformations of @xmath0  attack trees .",
    "[ ex : axiom ] let @xmath73 denote the set of all bijections from @xmath74 to itself .",
    "the axiom @xmath75 expresses that the order between children refining a parallel conjunctive node is not relevant . in other words ,",
    "the operator @xmath4  is commutative .",
    "this implies that any two trees of the form @xmath76 and @xmath77 represent the same scenario .",
    "our goal is to define a complete set of axioms , denoted by @xmath78 , for the sp semantics for @xmath0  attack trees .",
    "intuitively , @xmath78 is a set of equations that can be applied to transform a @xmath0  attack tree into any equivalent @xmath0  attack tree with respect to the sp semantics . before defining the set @xmath78 ,",
    "we formalize the notion of a complete set of axioms for a given semantics for ( @xmath0 ) attack trees , following  @xcite .",
    "let @xmath79 be the free term algebra over the set of variables @xmath69 and a signature @xmath80 , and let @xmath35 be a set of equations over @xmath79 .",
    "the equation @xmath81 , where @xmath82 , is a _ syntactic consequence _ of @xmath35 ( denoted by @xmath83 ) if it can be derived from @xmath35 by application of the following rules . for all @xmath84 , @xmath85 , and @xmath86 :    * @xmath87 , * if @xmath88 , then @xmath83 , * if @xmath83 , then @xmath89 , * if @xmath83 and @xmath90 , then @xmath91 . * if @xmath83 , then @xmath92 , * if @xmath83 , then @xmath93 = t '' [ t'/x]$ ] , where @xmath94 $ ] is the term obtained from @xmath95 by replacing all occurrences of variable @xmath96 with @xmath6 .",
    "let @xmath97 denote the set of terms constructed from the set of variables @xmath69 , the set of basic actions @xmath8 ( treated as constants ) , and operators @xmath2 , @xmath3 and @xmath1 .",
    "let @xmath98 be the set of terms constructed from the same parts , except for the operator @xmath0 . using the notion of syntactic consequence",
    ", we define a complete set of axioms for a semantics for attack trees .    [ def / compl_set_axioms ]",
    "let @xmath58\\hspace{-0.05cm}]}$ ] be a semantics for attack trees ( resp .",
    "@xmath0  attack trees ) and let @xmath35 be a set of equations over @xmath99 ( resp .",
    "@xmath97 ) . the set @xmath35 is a _",
    "complete set of axioms _ for @xmath58\\hspace{-0.05cm}]}$ ] if and only if , for all @xmath100 ( resp .",
    "@xmath15 ) @xmath62\\hspace{-0.05cm}]}={[\\hspace{-0.05cm}[t']\\hspace{-0.05 cm } ] } \\iff e\\vdash t = t'.\\ ] ]    we are now ready to give a complete set of axioms for the sp semantics for @xmath0  attack trees .",
    "these axioms allow us to determine whether two visually distinct trees represent the same security scenario according to the sp semantics .",
    "[ th : axioms ] given @xmath101 , and @xmath102 , let @xmath103 , @xmath104 , and @xmath105 be sequences of variables .",
    "let @xmath73 be the set of all bijections from @xmath74 to itself .",
    "the following set of equations over @xmath97 , denoted by @xmath78 , is a complete set of axioms , @xmath3 and @xmath1 are _ unranked _ , representing infinitely many @xmath106-ary function symbols ( @xmath107 ) . ] for the sp semantics for @xmath1 attack trees .",
    "@xmath108    the numbering of the axioms in @xmath78 corresponds to the numbering of the axioms for the multiset semantics for standard attack trees , as presented in  @xcite , while new axioms ( involving @xmath0 ) are marked with primes .",
    "the proof of this theorem follows the same line of reasoning as the proofs of theorems  4.2 and  4.3 of gischer  @xcite , where series",
    " parallel pomsets are axiomatized . to prove the theorem",
    ", we remark that sp graphs form a visual representation of series - parallel partially ordered multisets ( sp pomsets ) .",
    "a complete , finite axiomatization of pomsets under concatenation , parallel composition and union has been provided in  @xcite , where sets of series - parallel pomsets have been used to represent processes . in our case ,",
    "sets of series - parallel pomsets ( i.e. , sets of sp graphs ) represent attack trees constructed using @xmath4  ( having the same properties as the parallel composition of processes ) , @xmath0  ( having the same properties as concatenation ) , and @xmath5  ( having the same properties as choice )",
    ". the set @xmath78 corresponds to the axioms from  @xcite .",
    "the axioms involving the identity elements ( i.e. , @xmath109  the empty pomset , and @xmath110  the empty process ) have been omitted because they can only be used for transforming processes involving @xmath110 or @xmath109 and such identity elements do not exist in the case of attack trees .",
    "furthermore , our axioms are written using unranked operators contrary to the binary operators of concatenation , parallel composition , and choice .",
    "let @xmath58\\hspace{-0.05cm}]}$ ] be a semantics for ( @xmath0 ) attack trees .",
    "a complete axiomatization of @xmath58\\hspace{-0.05cm}]}$ ] can be used to derive a canonical form of trees interpreted with @xmath58\\hspace{-0.05cm}]}$ ] .",
    "such canonical forms provide the most concise representation for equivalent trees and are the natural representatives of equivalence classes defined by @xmath58\\hspace{-0.05cm}]}$ ] .    when @xmath0  attack trees are interpreted using the sp semantics , their canonical forms consist of either a single basic action , or of a root node labeled with @xmath5  and subtrees with nested , alternating occurrences of @xmath4  and @xmath0  nodes .",
    "canonical forms correspond exactly to the sets of sp graphs labeled by @xmath8 and they depict all attack alternatives in a straightforward way .",
    "canonical representations of @xmath0  attack trees under the sp semantics can be defined using the complete set of axioms @xmath78 . by orienting the equations , , , , , , , , and from left to right",
    ", we obtain a term rewriting system , denoted by @xmath111 .",
    "the canonical representations of @xmath0  attack trees correspond to normal forms with respect to @xmath111 . in the rest of this section",
    "we show that the normal forms with respect to @xmath111 are exactly the terms generated by the following grammar , where @xmath112 and @xmath10 @xmath113 the non - terminal @xmath114 produces all trees that consist of a single basic action or being a nested alternation of @xmath3 and @xmath1 operators , where the outer operator is @xmath3 .",
    "similarly , @xmath115 produces all such trees where the outer operator is @xmath1 .",
    "the non - terminal @xmath116 generates the two previously described types of trees .",
    "finally , @xmath117 combines the trees generated by @xmath116 using the @xmath5  refinement .",
    "we denote the sets of terms generated by @xmath117 , @xmath116 , @xmath114 , and @xmath115 , by @xmath118 , @xmath119 , @xmath120 , and @xmath121 , respectively .",
    "we first observe that the terms generated by the non - terminal @xmath117 correspond exactly to all sets of sp graphs labeled by the elements of @xmath8 .",
    "[ lem : bijection ] the restriction of function @xmath122\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] to @xmath118 is a bijection from @xmath118 to @xmath123 .",
    "the proof consists of two steps .",
    "first we prove that the terms from @xmath119 exactly correspond to sp graphs , after which we extend this result to the correspondence between @xmath118 and the sets of sp graphs .",
    "1 .   @xmath122\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] is a bijection from @xmath119 to @xmath53 .",
    "+ for injectivity we prove by induction that @xmath124\\hspace{-0.05cm}]_{\\mathcal{s\\!p } } } = { [ \\hspace{-0.05cm}[{\\ensuremath{{\\mathit{c}}}}_2]\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] implies @xmath125 .",
    "given that for every @xmath126 the set @xmath56\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] contains a single sp graph , we abuse notation and refer to @xmath56\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] as the sp graph contained in @xmath56\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] .",
    "let us assume that @xmath127 is a basic action @xmath52 , then @xmath124\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] is a single edge graph @xmath51 , it follows that @xmath128 considering the edge labels preservation property of two isomorphic sp graphs .",
    "let us consider now that @xmath129 for some @xmath130 , which means that @xmath124\\hspace{-0.05cm}]_{\\mathcal{s\\!p } } } =    { [ \\hspace{-0.05cm}[{\\ensuremath{{\\mathit{s}}}}_1 ^ 1]\\hspace{-0.05cm}]_{\\mathcal{s\\!p } } } { \\parallel}\\cdots { \\parallel}{[\\hspace{-0.05cm}[{\\ensuremath{{\\mathit{s}}}}_k^1]\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] .",
    "given that @xmath124\\hspace{-0.05cm}]_{\\mathcal{s\\!p } } } = { [ \\hspace{-0.05cm}[{\\ensuremath{{\\mathit{c}}}}_2]\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] , for every @xmath131 , @xmath132\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] contains a subgraph @xmath57 which is isomorphic to @xmath133\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] .",
    "thus , considering that @xmath133\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] is either a basic action or a sequential composition , we have that @xmath132\\hspace{-0.05cm}]_{\\mathcal{s\\!p } } } = g_1 { \\parallel}\\cdots { \\parallel}g_k$ ] and , according to grammar , @xmath134 , for some terms @xmath135 . by the induction hypothesis",
    ", it follows that @xmath133\\hspace{-0.05cm}]_{\\mathcal{s\\!p } } } = g_i =    { [ \\hspace{-0.05cm}[{\\ensuremath{{\\mathit{s}}}}_i^2]\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] implies @xmath136 , which leads to @xmath125 .",
    "a similar proof can be obtained for the case where @xmath137 .",
    "+ surjectivity follows from the fact that every sp graph has a unique ( modulo associativity ) decomposition in terms of the operators for sequential and parallel composition .",
    "such a decomposition naturally corresponds to terms from @xmath119 .",
    "@xmath122\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] is a bijection from @xmath118 to @xmath138 .",
    "+ for injectivity , we assume that @xmath139\\hspace{-0.05cm}]_{\\mathcal{s\\!p } } } = { [ \\hspace{-0.05cm}[{\\ensuremath{{\\mathit{n}}}}_2]\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] .",
    "this implies that the sets @xmath139\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] and @xmath140\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] have the same size and the same elements .",
    "if this size is @xmath109 , then they both contain the same element , which uniquely corresponds to a term @xmath116 , so @xmath141",
    ". if the size of the sets is larger than @xmath109 , then @xmath142 are of the form @xmath143 , for @xmath144 . since @xmath139\\hspace{-0.05cm}]_{\\mathcal{s\\!p } } } = { [ \\hspace{-0.05cm}[{\\ensuremath{{\\mathit{n}}}}_2]\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] , the elements of these two sets are pairwise identical .",
    "moreover , by definition , all arguments in @xmath142 are different , which implies @xmath145 . from the previous item , it follows that the elements of @xmath146\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] correspond uniquely to @xmath147 . from the pairwise equality between the arguments of the two terms",
    ", it follows that @xmath148 and @xmath149 are identical .",
    "+ for surjectivity , let @xmath150 be a set of sp graphs .",
    "it follows from the previous item that there exist trees @xmath151 , such that @xmath152\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}=g_i$ ] , for @xmath153 .",
    "this implies that @xmath154\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] , which finishes the proof of surjectivity .",
    "lemma  [ lem : bijection ] shows that the grammar generates all @xmath0  attack trees in canonical form .",
    "it remains to be proven that the set of trees generated by the grammar is equal to the set of normal forms of the term rewriting system @xmath111 and that these normal forms are unique .",
    "[ th : trs ] the term rewriting system @xmath111 is strongly terminating and confluent .",
    "we show that the term rewriting system @xmath111 is terminating and confluent with help of the grammar  , in four steps .    1 .   first , we show with standard methodology that the term rewriting system is terminating .",
    "we define the following norm which assigns natural numbers to terms : @xmath155 + it can be easily verified that for every rewrite rule @xmath156 , we have @xmath157 . consequently , there are no infinite reduction sequences , or , in other words , the term rewriting system is strongly terminating . notice that because we consider term rewriting modulo commutativity of @xmath2 and @xmath3 , we have to verify that the left - hand side and the right - hand side of equations and have equal norms  @xcite .",
    "this is clearly the case .",
    "now we prove that the terms produced by the grammar   are exactly the normal forms with respect to @xmath111 .",
    "for the terms in @xmath119 , none of the rewrite rules can be applied , because these terms do not contain @xmath2 , have no occurrences of @xmath3 containing an argument of type @xmath3 , have no occurrences of @xmath1 containing an argument of type @xmath1 , and do not contain operators with a single argument .",
    "we extend this to terms @xmath118 by observing that all @xmath2 operators occurring in such terms have at least two arguments and that all these arguments are different .",
    "+ conversely , consider a term @xmath6 in normal form that contains an @xmath2 operator .",
    "then @xmath158 , where the @xmath159 do not contain an @xmath2 operator , else , , or can be applied .",
    "it remains to show that normal form terms without occurrence of an @xmath2 operator are in @xmath119 .",
    "such terms are basic terms or have @xmath1 or @xmath3 as their top - level operator .",
    "the last two cases are symmetric and we therefore only consider the case @xmath160 . we must show that each @xmath159 is a basic term or in the form @xmath161 .",
    "suppose not , then there exists a @xmath159 that has @xmath3 as its top - level operator .",
    "it follows that the term is not in normal form because can be applied .",
    "3 .   the normal forms are unique . to show that the normal forms are unique ,",
    "assume that @xmath148 and @xmath149 are both normal forms for a @xmath0  attack tree @xmath6 .",
    "since the rewrite system @xmath111 was constructed by orienting the axioms from @xmath78 , we have that @xmath162 .",
    "this means that @xmath139\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}={[\\hspace{-0.05cm}[{\\ensuremath{{\\mathit{n}}}}_2]\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] .",
    "from bijectivity proven in lemma  [ lem : bijection ] , we obtain @xmath163 .",
    "now that we have proven termination and uniqueness of normal forms , it immediately follows that the term rewriting system is confluent  @xcite .",
    "example  [ ex : nf ] illustrates the notion of canonical form for @xmath0  attack trees .",
    "[ ex : nf ] the canonical form of the @xmath0  attack tree @xmath6 in figure  [ fig : attack - tree ] is the tree @xmath164 shown in figure  [ fig : attack - tree2 ] . it is easily seen to be in normal form with respect to @xmath111 .",
    "attack tree @xmath68 equivalent to @xmath0  attack tree @xmath6 from figure  [ fig : attack - tree],height=128 ]      having a complete set of axioms for the sp semantics allows us to formalize the relation between @xmath0  attack trees under the sp semantics and attack trees under the multiset semantics , denoted by @xmath58\\hspace{-0.05cm}]_{\\mathcal{m}}}$ ] .",
    "this is achieved by extracting a complete set of axioms for the multiset semantics for attack trees from the set @xmath78 .",
    "let @xmath165 be the subset of axioms from @xmath78 that do not contain the @xmath1 operator , i.e. , @xmath166 , , , , , , , @xmath167 .",
    "[ th : multiset - axioms ] the axiom system @xmath165 is a complete set of axioms for the multiset semantics for attack trees .    in (",
    "* theorem 4.9 ) , a complete axiomatization of the multiset semantics for an extention of attack trees called attack  defense trees ( adtrees ) is given .",
    "in the following , we call that axiomatization @xmath168 .",
    "adtrees are a superset of attack trees .",
    "they may contain defender s nodes modeled by the so called opponent s functions and countermeasures .",
    "we claim that @xmath165 is a complete axiomatization of the multiset semantics for attack trees . obviously if two attack trees are equal with respect to @xmath165 , then they are also equal with respect to @xmath168 .",
    "this is clear , because @xmath169 .",
    "conversely , we prove that if two attack trees are equal with respect to @xmath168 , they are equal with respect to @xmath165 .",
    "this follows from the following syntactical reasoning .",
    "@xmath168 contains function symbols which we call _ countermeasures_. observe by inspecting the axioms of @xmath168 that if a countermeasure occurs at the left - hand side of an equation , then it also occurs at the right - hand side , and vice versa .",
    "therefore , axioms @xmath170 from @xmath168 can never be used in a derivation of equality of two standard attack trees .",
    "further , observe that the remaining axioms @xmath171 and @xmath172 from @xmath168 make use of _ opponent s functions_. in these axioms , an opponent function occurs on the left - hand side if and only if it occurs on the right hand side .",
    "thus these axioms are never used to equate two attack trees which do not contain opponent s nodes .",
    "the remaining axioms are precisely , , , , , , , .",
    "so , we can only use these axioms to derive equalities of attack trees with respect to @xmath168 , which implies that such a derivation is also possible using axioms from @xmath165 .    by comparing the complete sets of axioms @xmath78 and @xmath165 we obtain that two attack trees are equivalent under the multiset semantics if and only if they are equivalent under the sp semantics .",
    "this is formalized in the following theorem .",
    "[ th : sp_vs_m ] @xmath1 attack trees under the sp semantics are a _ conservative extension _ of attack trees under the multiset semantics .",
    "let @xmath6 and @xmath68 be standard attack trees .",
    "let @xmath56\\hspace{-0.05cm}]_{\\mathcal{m}}}$ ] and @xmath173\\hspace{-0.05cm}]_{\\mathcal{m}}}$ ] be their interpretation in the multiset semantics and @xmath56\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] and @xmath173\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] be their interpretation in the sp semantics .",
    "we prove that @xmath56\\hspace{-0.05cm}]_{\\mathcal{m } } } = { [ \\hspace{-0.05cm}[t']\\hspace{-0.05cm}]_{\\mathcal{m}}}$ ] if and only if @xmath56\\hspace{-0.05cm}]_{\\mathcal{s\\!p } } } = { [ \\hspace{-0.05cm}[t']\\hspace{-0.05cm}]_{\\mathcal{s\\!p}}}$ ] .    by theorem  [ th : multiset - axioms ] , a complete axiomatization of the multiset semantics for attack trees consists of axioms  , , , , , , , .",
    "the complete axiomatization of the sp semantic for @xmath1 attack trees additionally contains axioms , , and .",
    "thus , every equivalence of attack trees under the multiset semantics is clearly an equivalence of @xmath1 attack trees under the sp semantics .    to see the converse ,",
    "we show that the additional axioms do not introduce new equalities on standard attack trees .",
    "first inspect the three additional axioms and note that all of them contain the @xmath1 operator .",
    "next , observe that for all axioms , the set of variables occurring on the left - hand side is equal to the set of variables occurring on the right - hand side .",
    "thus , there is no axiom eliminating all occurrences of a variable .",
    "in particular , we claim that all axioms transform terms containing a @xmath174-ary @xmath1 expression , where @xmath175 , into terms containing a @xmath176-ary @xmath1 expression , for some @xmath177 .",
    "this is evident for equations without the @xmath1 operator ( since no variables are eliminated ) and remains to be shown for equations , , and .",
    "axiom   introduces and removes unary @xmath1 , but does not modify the single variable @xmath178 and therefore satisfies the claim .",
    "the arities of the two left - hand side @xmath1 operators in equation   are @xmath71 and @xmath179 and the arity of the right - hand side operator is @xmath179 , where @xmath101 and @xmath180 .",
    "since @xmath181 and both sides contain a @xmath1 operator of arity @xmath179 , if either of the two sides contains a @xmath1 operator with two or more arguments , then so does the other side .",
    "finally , since @xmath180 , the arity of the @xmath1 operator on the left - hand side of equation   is equal to the arities of the @xmath1 operators on its right - hand side and at least one @xmath1 operator occurs on the right - hand side .",
    "we can now show that none of the three axioms  , , introduces new equalities on standard attack trees .",
    "in particular , axiom   introduces and removes unary @xmath1 , but this does not introduce new equalities on standard attack trees .",
    "equations   and   match unary @xmath1 , but require a further @xmath1 with @xmath182 or more arguments to add a new equality . since , by the above claim , no @xmath174-ary @xmath1 for @xmath175 can be introduced with any of the equations , the additional equations do not introduce new equalities on standard attack trees .",
    "attack trees do not only serve to represent security scenarios in a graphical way .",
    "they can also be used to quantify such scenarios with respect to a given parameter , called an _",
    "attribute_. typical examples of attributes include the likelihood that the attacker s goal is satisfied and the minimal time or cost of an attack .",
    "schneier described  @xcite an intuitive bottom - up algorithm for calculating attribute values on attack trees : attribute values are assigned to the leaf nodes and two functions - ary function symbols , for all @xmath130 . ]",
    "( one for the @xmath5  and one for the @xmath4  refinement ) are used to propagate the attribute value up to the root node .",
    "mauw and oostdijk showed  @xcite that if the binary operations induced by the two functions define a semiring , then the evaluation of the attribute on two attack trees equivalent with respect to the multiset semantics yields the same value .",
    "this result has been generalized to any semantics and attribute that satisfy a notion of _ compatibility _",
    "we briefly discuss it for @xmath0  attack trees at the end of this section .",
    "we start with a demonstration on how the bottom - up evaluation algorithm can naturally be extended to @xmath0  attack trees .",
    "an _ attribute domain for an attribute @xmath183 on @xmath0  attack trees _ is a tuple @xmath184 where @xmath185 is a set of values and @xmath186 are families of @xmath106-ary functions of the form @xmath187 , associated to @xmath5 , @xmath4 , and @xmath0  refinements , respectively .",
    "attribute for @xmath0  attack trees _ is a pair @xmath188 formed by an attribute domain @xmath189 and a function @xmath190 , called _ basic assignment _ for @xmath183 , which associates a value from @xmath185 with each basic action @xmath191 .",
    "[ def : attr ] let @xmath192 be an attribute .",
    "the attribute evaluation function @xmath193 which calculates the value of attribute @xmath183 for every @xmath0  attack tree @xmath194 is defined recursively as follows @xmath195    the following example illustrates the bottom - up evaluation of the attribute _ minimal attack time _ on the @xmath0  attack trees given in example  [ eg : def - attack - tree ] .",
    "[ ex : min_cost ] let @xmath196 denote the minimal time that the attacker needs to achieve her goal . we make the following assignments to the basic actions :",
    "@xmath197 , @xmath198 , @xmath199 , @xmath200 , @xmath201 .",
    "since we are interested in the minimal attack time , the function for an @xmath5  node is defined by @xmath202 .",
    "the function for an @xmath4  node is @xmath203 , which models that the children of a conjunctively refined node are executed in parallel . finally , in order to model that the children of a @xmath0  node need to be executed sequentially , we let @xmath204 .",
    "according to definition  [ def : attr ] , the minimal attack time for our running scenario @xmath6 is @xmath205    in the case of standard attack trees , the bottom - up procedure uses only two functions to propagate the attribute values to the root ",
    "one for conjunctive and one for disjunctive nodes .",
    "this means that the same function is employed to calculate the value of every conjunctively refined node , independently of whether its children need to be executed sequentially or can be executed simultaneously .",
    "evidently , with @xmath0  attack trees , we can apply different propagation functions for @xmath4  and @xmath0  nodes , as in example  [ ex : min_cost ] .",
    "therefore , @xmath0  attack trees can be evaluated over a larger set of attributes , and hence may provide more accurate evaluations of attack scenarios than standard attack trees .    to guarantee that the evaluation of an attribute on equivalent attack trees yields the same value ,",
    "the attribute domain must be _ compatible _ with a considered semantics  @xcite .",
    "our complete set of axioms is a useful tool to check for compatibility .",
    "consider an attribute domain @xmath184 , and let @xmath206 be a mapping @xmath207 .",
    "guaranteeing that @xmath189 is compatible with a semantics axiomatized by @xmath35 amounts to verifying that the equality @xmath208 holds in @xmath185 , for every axiom @xmath209 .",
    "it is an easy exercise to show that the attribute domain for minimal attack time , considered in example  [ ex : min_cost ] , is compatible with the sp semantics for @xmath0  attack trees .",
    "we have formalized the extension of attack trees with sequential conjunctive refinement , called @xmath0 , and given a semantics to @xmath0  attack trees in terms of sets of series - parallel graphs .",
    "this sp semantics naturally extends the multiset semantics for attack trees from  @xcite .",
    "we have shown that the notion of a complete set of axioms for a semantics and the bottom - up evaluation procedure can be generalized from attack trees to @xmath0  attack trees , and have proposed a complete axiomatization of the sp semantics .",
    "a number of recently proposed solutions focus on extending attack trees with defensive measures  @xcite .",
    "these extensions support reasoning about security scenarios involving two players  an attacker and a defender  and the interaction between them . in future work , we intend to add the @xmath1 refinement to such trees . afterwards , we plan to investigate sequential disjunctive refinement , as used for instance in  @xcite .",
    "our goal is to propose a complete formalization of trees with attack and defense nodes , that have parallel and sequential , conjunctive and disjunctive refinements .",
    "the findings will be implemented in the software application adtool  @xcite .",
    "the research leading to these results has received funding from the european union seventh framework programme under grant agreement number 318003 ( trespass ) and from the fonds national de la recherche luxembourg under grant c13/is/5809105 .",
    "jhawar , r. , kordy , b. , mauw , s. , radomirovi , s. , trujillo - rasua , r. : attack trees with sequential conjunction . in : proceedings of the international conference on ict systems security and privacy protection ( ifip sec 2015 ) .",
    "springer ( 2015 ) , ( to appear ) .",
    "jrgenson , a. , willemson , j. : processing multi - parameter attacktrees with estimated parameter values . in : miyaji ,",
    "a. , kikuchi , h. , rannenberg , k. ( eds . ) iwsec .",
    "lncs , vol . 4752 , pp .",
    "308319 . springer ( 2007 )        kordy , b. , kordy , p. , mauw , s. , schweitzer , p. : adtool : security analysis with attack  defense trees . in : joshi , k.r . ,",
    "siegle , m. , stoelinga , m. , dargenio , p.r .",
    "lncs , vol . 8054 , pp .",
    "springer ( 2013 )        kordy , b. , pouly , m. , schweitzer , p. : computational aspects of attack  defense trees . in : bouvry ,",
    "p. , klopotek , m.a .",
    ", leprvost , f. , marciniak , m. , mykowiecka , a. , rybinski , h. ( eds . ) s&iis11 .",
    "lncs , vol . 7053 , pp .",
    "springer ( 2011 )      liu , y. , man , h. : network vulnerability assessment using bayesian networks . in",
    ": proceedings of spie data mining , intrusion detection , information assurance , and data networks security 2005 .",
    "vol . 5812 , pp .",
    "6171 ( 2005 )          pitre - cambacds , l. , bouissou , m. : beyond attack trees : dynamic security modeling with boolean logic driven markov processes ( bdmp ) . in : edcc10 .",
    ". 199208 .",
    "ieee computer society , los alamitos , ca , usa ( 2010 )    pinchinat , s. , acher , m. , vojtisek , d. : towards synthesis of attack trees for supporting computer - aided risk analysis . in : software engineering and formal methods .",
    "lncs , vol . 8938 , pp .",
    "363375 . springer ( 2014 )"
  ],
  "abstract_text": [
    "<S> we provide the first formal foundation of @xmath0  attack trees which are a popular extension of the well - known attack trees . </S>",
    "<S> the @xmath0  attack tree formalism increases the expressivity of attack trees by introducing the sequential conjunctive operator @xmath1 . </S>",
    "<S> this operator enables the modeling of ordered events .    </S>",
    "<S> we give a semantics to @xmath0  attack trees by interpreting them as sets of series - parallel graphs and propose a complete axiomatization of this semantics . </S>",
    "<S> we define normal forms for @xmath0  attack trees and a term rewriting system which allows identification of semantically equivalent trees . </S>",
    "<S> finally , we formalize how to quantitatively analyze @xmath0  attack trees using attributes . </S>"
  ]
}
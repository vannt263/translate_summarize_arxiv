{
  "article_text": [
    "network coding , introduced in @xcite , is a technique to increase the rate of information transmission through a network by coding different information flows present in the network .",
    "one of the chief problems in network coding is to find whether a given network with a set of sources and sink demands is solvable using a scalar linear network code .",
    "much work has been done on the existence and construction of scalar linear network coding techniques in several papers including @xcite .",
    "matroids are discrete objects which abstract the notions of linear dependence among vectors .",
    "they arise naturally in several discrete structures including graphs and matrices .",
    "the relationship between network coding and matroid theory was first introduced in @xcite .",
    "the authors of @xcite showed that the scalar linear solvability of a network with a given set of demands was related to the existence of a _",
    "representable matroid _ ( matroids which arise from matrices over fields ) satisfying certain properties .",
    "this connection was further developed and strengthened in @xcite . using the techniques of @xcite",
    ", it is known that several network instances which are scalar ( or vector ) linearly solvable can be constructed using representable matroids and their generalisations . using the equivalence between networks and matroids ,",
    "it was shown in @xcite that linear network codes are not always sufficient for solving network coding problems where the sinks have arbitrary demands ( i.e. , not necessarily multicast ) .",
    "an explicit network was demonstrated which had a nonlinear network coding solution but no linear network coding solutions .",
    "linear network - error correcting codes were introduced in @xcite as special kinds of linear network codes which could correct errors that occurred in the edges of the network .",
    "linear network - error detection codes are simply linear network - error correction codes where the sinks are able to decode their demands in the presence of errors at edges known to the sinks . together with the subsequent works @xcite , the bounds and constructions similar to classical block coding techniques were carried over to the context of linear network - error correction and detection . as network - error correcting ( detecting ) codes are essentially special kinds of network codes , the issues of network coding especially with respect to existence and construction have their equivalent counterparts in network - error correction ( detection ) .",
    "network - error correction was extended to case of non - multicast in @xcite . in @xcite ,",
    "linear network - error correction schemes were found to be incapable of satisfying the demands for networks with node adversaries rather than edge adversaries .",
    "nonlinear error correction schemes are also found to perform better than linear error correction in networks with unequal edge capacities @xcite .    in the current work ,",
    "we present the connection between matroids and network - error correcting and detecting codes .",
    "the results of this work may be considered as the network - error correction and detection counterparts of some of the results of @xcite .",
    "the organisation and the chief contributions of our work are as follows .    * after reviewing linear network - error correcting and detecting codes in section [ sec2 ] and matroid theory in section [ sec3 ] , in section [ sec4 ] we define the notion of a _ matroidal error detecting network _ associated with a particular matroid . using this definition ,",
    "we show that an acyclic network has a scalar linear network - error detecting code ( satisfying general demands ) if and only if there exists a representable matroid @xmath0 such that the given network is a matroidal error detecting network associated with @xmath1 therefore , networks with scalar linear network - error detecting codes are shown to be analogous to representable matroids satisfying a certain set of properties .",
    "because of the equivalence between network - error detection and network - error correction , all these results have their counterparts for network - error correcting codes also . * in section [ sec5 ] , we give algorithms which construct multisource multicast and multiple - unicast matroidal error correcting networks associated with general matroids ( not necessarily representable ) satisfying the required properties .",
    "if the matroids associated with such networks are representable over finite fields , then these networks are obtained along with their corresponding scalar linear network - error correcting codes .",
    "therefore , our results generate a large class of hitherto unknown networks which have scalar linear network - error correcting codes , a few of which are shown in this paper by implementing the representable matroids version of our algorithms in matlab .",
    "though the implementation the nonrepresentable matroids version of our algorithm is difficult , we do give a small result as a first step in this direction in subsection [ mecnnonrepresentable ] .",
    "the complexity of the construction of multicast and multiple - unicast networks associated with representable matroids is shown to be comparable to the complexity of existing algorithms that design multicast scalar linear network - error correcting codes for given networks in section [ seccomplexity ] . *",
    "based on the results from @xcite , in section [ secinsufficiency ] , we prove the insufficiency of linear network coding for the network - error detection problem on networks with general demands ( i.e. , not necessarily multicast ) . in particular , we demonstrate a network ( adapted from the network used in @xcite to demonstrate the insufficiency of linear network coding for the general network coding problem ) for which there exists a nonlinear single edge network - error detecting code that satisfies the sink demands , while there are no linear network - error detecting codes that do the same . * in subsection [ insuffnetwork ] , we show that this network , for which linear network - error detection is insufficient , is a matroidal error detecting network with respect to a nonrepresentable matroid .",
    "thus our definition of matroidal error detecting networks is not limited to networks with linear network - error detecting schemes alone , instead has a wider scope , accommodating nonlinear error detection schemes also .",
    "though algorithms for constructing network - error correcting codes are known for given single source multicast networks @xcite , there is no general characterisation of networks and demands for which scalar linear network - error correction codes can be designed .",
    "the authors believe that the algorithm given in this paper could provide useful insights in this regard .",
    "furthermore , it could also prove useful in the design of practical network topologies in which network coding and network - error correction ( detection ) have advantages over routing and classical error correction ( detection ) .",
    "we also highlight that though there are many papers in network coding literature which discuss network coding for multiple - unicast networks , the results obtained in our paper are some of the first in network - error correction literature which talk about network - error correction codes for multiple - unicast networks .",
    "_ notations : _ the following notations will be followed throughout the paper . the disjoint union of any two sets @xmath2 and @xmath3 is denoted by @xmath4 for a finite set @xmath5 the power set of @xmath2 is denoted by @xmath6 a finite field is denoted by the symbol @xmath7 for some positive integer @xmath8 the identity matrix of size @xmath9 over @xmath10 is denoted by @xmath11 the rank of a matrix @xmath2 over @xmath10 is denoted by @xmath12 and its transpose is denoted by @xmath13 the @xmath10-vector space spanned by the columns of a matrix @xmath2 over @xmath10 is denoted by @xmath14 the set of columns of @xmath2 is denoted by @xmath15 the support set of a vector @xmath16 and its hamming weight are denoted by @xmath17 and @xmath18 respectively .",
    "the symbol @xmath19 represents an all zero vector or matrix of appropriate size indicated explicitly or known according to the context . for some matrix @xmath5",
    "we denote by @xmath20 the @xmath21 column of @xmath5 and for a subset @xmath22 of the column indices of @xmath5 we denote by @xmath23 the submatrix of @xmath2 with columns indexed by @xmath24 likewise , we denote by @xmath25 the @xmath26 row of @xmath5 and by @xmath27 the submatrix of @xmath2 with rows given by the subset @xmath28 of the row indices .",
    "as in @xcite , we model the directed acyclic network as a directed acyclic multigraph ( one with parallel edges ) @xmath29 where @xmath30 is the set of vertices of @xmath31 representing the nodes in the network and @xmath32 is the set of edges representing the links in the network .",
    "an ancestral ordering is assumed on @xmath33 as the network is acyclic .",
    "each edge is assumed to carry at most one finite field symbol at any given time instant .",
    "a non - empty subset @xmath34 , called the set of sources , generates the information that is meant for the sinks in the network , represented by another non - empty subset @xmath35 .",
    "each sink demands a particular subset of the information symbols generated by the sources .",
    "any node in the network can be a source and a sink simultaneously , however not generating and demanding the same information .",
    "let @xmath36 be the number of information symbols ( from some finite field @xmath10 ) generated at source @xmath37 let @xmath38 denote the ordered index set of messages ( each corresponding to a particular information symbol ) generated at all the sources .",
    "for each edge @xmath39 we denote by @xmath40 the node from which @xmath41 is outgoing , and by @xmath42 the node to which @xmath41 is incoming .",
    "also , for each node @xmath43 let @xmath44 denote the union of the messages ( a subset of @xmath45 ) generated by @xmath46 and the set of incoming edges at @xmath47 similarly , let @xmath48 denote the union of the subset of messages demanded by @xmath46 and the set of outgoing edges from @xmath47 further , for any @xmath39 we denote by @xmath49 the set @xmath50    a network code on @xmath31 is a collection of functions , one associated with each node of the network mapping the incoming symbols at that node to its outgoing symbols .",
    "when these functions are scalar linear , the network code is said to be a scalar linear network code . to be precise",
    ", a scalar linear network code is an assignment to the following matrices .    *",
    "a matrix @xmath51 of size @xmath52 for each source @xmath53 denoting the linear combinations taken by the sources mapping information symbols to the network , with non - zero entries ( from @xmath10 ) only in those columns which index the outgoing edges from @xmath37 * a matrix @xmath54 of size @xmath55 which indicates the linear combinations taken by the nodes in the network to map incoming symbols to outgoing symbols .",
    "for @xmath56 the @xmath57 element of @xmath58 @xmath59 is an element from @xmath10 representing the network coding coefficient between edge @xmath60 and @xmath61 naturally @xmath62 can be non - zero only if @xmath63 is at the downstream of @xmath64    also , to each sink @xmath65 we associate a matrix @xmath66 of size @xmath67 where @xmath68 is the number of incoming edges at @xmath69 corresponding to the @xmath70 rows that index these incoming edges , we fix the @xmath71 submatrix of @xmath66 as an identity submatrix .",
    "the other entries of @xmath72 are fixed as zeroes .",
    "for @xmath73 let @xmath74 be the row vector representing the information symbols at source @xmath75 .",
    "let @xmath76 and @xmath77 let @xmath78 be the @xmath79 row - wise concatenated matrix @xmath80 the columns of @xmath81 are known as the _ global encoding vectors _ corresponding to the edges of the network , indicating the particular linear combinations of the information symbols which flow in the edges .",
    "we assume that no edge is assigned an all zero global encoding vector , for then it can simply be removed from the network and a smaller graph can be assumed .",
    "the global encoding vector corresponding to the @xmath82 messages are fixed to be the @xmath82 standard basis vectors over @xmath83 the concerned field .",
    "a network code can also be specified completely by specifying global encoding vectors for all edges in the network , provided that they are valid assignments , i.e. , global encoding vectors of outgoing edges are linear combinations of those of the incoming edges .",
    "let @xmath84 be the vector of all information symbols .",
    "let @xmath85 denote the set of demands at sink @xmath86 and let @xmath87 denote the subvector of the super - vector @xmath16 corresponding to the information symbols indexed by @xmath88 an edge is said to be in error if its input symbol ( from @xmath40 ) and output symbol ( to @xmath42 ) , both from @xmath10 , are not the same .",
    "we call this as a _ network - error_. we model the network - error as an additive error from @xmath10",
    "network - error vector _ is a @xmath89 length row vector over @xmath10 , whose components indicate the additive errors on the corresponding edges .",
    "the case of multicast network - error correction , where a single source multicasts all its symbols to all sinks in the presence of errors , has been discussed in several papers ( see for example , @xcite ) all being equivalent in some sense .",
    "now we briefly review the results for network - error correcting and detecting codes in the case of arbitrary number of sources and sinks with arbitrary demands .",
    "let @xmath90 be the network - error vector corresponding to a particular instance of communication in the network .",
    "let @xmath91 be the matrix @xmath92 let @xmath93 then a sink @xmath94 receives the @xmath70 length vector @xmath95 one way to interpret the input - output relationship shown by ( [ networkinoutrelationship ] ) is to think of the network as a finite state machine whose states are the symbols flowing on the edges .",
    "the matrix @xmath91 then describes the transfer matrix of this state machine between the sources and sink @xmath94 .",
    "some of the states of this network could be in error ( i.e. the network - errors at the edges ) , which is captured by the network - error vector @xmath96 these errors are also reflected at the sink outputs , in their appropriate linear combinations , given by the matrix @xmath97 for more details the reader is referred to @xcite .",
    "a network code which enables every sink to successfully recover the desired information symbols in the presence of any network - errors in any set of edges of cardinality at most @xmath98 is said to be a @xmath98-_network - error correcting code_. a network code which enables the sink demands to be recovered in the presence of errors in at most @xmath99 edges which are _ known _ to the sinks , is called a @xmath99-_network - error detecting code_. it is not difficult to see that a scalar linear network code is a scalar linear @xmath98-network - error correcting code if and only if the following condition holds at each sink @xmath100 .",
    "@xmath101 similarly , for a @xmath99-network - error detecting code , we must have the following condition holding true for all sinks . @xmath102 the proof that ( [ eqn2 ] ) indeed implies a @xmath98-network - error correcting code follows from the fact that we can always demonstrate a pair of information vectors @xmath16 and @xmath103 with @xmath104 and a corresponding pair of error vectors @xmath90 and @xmath105 with @xmath106 and @xmath107 such that the corresponding outputs @xmath108 and @xmath109 are equal , if and only if the sink @xmath94 is not able to distinguish between @xmath110 and @xmath111 in the presence of errors . a similar argument",
    "can be given for ( [ eqn2a ] ) .",
    "thus , by ( [ eqn2 ] ) and ( [ eqn2a ] ) , it is clear that a @xmath99-network - error detecting code is also a @xmath112-network - error correcting code , while an @xmath98-network - error correcting code is also a @xmath113-network - error detecting code .",
    "the _ error pattern _ corresponding to a network - error vector @xmath90 is defined as its support set @xmath114 which we shall also alternatively refer to using the corresponding subset of @xmath115 let @xmath116 denote the submatrix of @xmath117 consisting of those rows of @xmath117 which are indexed by @xmath118 the condition ( [ eqn2 ] ) can then be rewritten as @xmath119 similarly condition ( [ eqn2a ] ) becomes @xmath120 for the special case of a single source multicast , the condition ( [ eqn3 ] ) becomes @xmath121 which is known from @xcite .",
    "some of these papers also discuss the case of unequal error correcting capabilities at different sinks , but in our paper we only consider @xmath98-network - error correction at all sinks uniformly . the extension to the unequal error capabilities is natural and therefore omitted .    for the multiple - unicast case , where each source has only one symbol to unicast to some sink and each sink has only one information symbol to receive from some source , the condition ( [ eqn2 ] ) becomes @xmath122 where the first term above represents the signal part of the received vector and the second term denotes the interference plus noise part .",
    "note that @xmath123 denotes the demanded information symbol at sink @xmath86 while @xmath124 denotes the information symbol generated at source @xmath37 equations similar to ( [ eqnmulticastcondition ] ) and ( [ multipleunicastcondition ] ) can be obtained for @xmath99-network - error detecting codes also , by simply replacing @xmath113 by @xmath125      we now present a technical lemma , which will be used in section [ sec4 ] .",
    "the result of the lemma can be inferred from the results of @xcite , but we give it here for the sake of completeness .    [ lemmadecoding ]",
    "let @xmath126 denote the @xmath127 matrix with a @xmath128 identity submatrix in @xmath129 of the first @xmath82 rows corresponding to the demands @xmath130 at sink @xmath86 and with all other elements being zero .",
    "for some @xmath131 the condition @xmath132 holds if and only if the following condition holds @xmath133 therefore a given network code is @xmath99-network - error detecting ( or @xmath134-network - error correcting ) if and only if the condition ( [ eqnlemma ] ) holds for all @xmath135 at all sinks @xmath136    we first prove the _ if _ part .",
    "since @xmath137 is in the subspace @xmath138 linear combinations of the columns of @xmath139 should generate the columns of @xmath140 thus , we must have for some matrix @xmath141 of size @xmath142 @xmath143 now suppose for some @xmath144 with @xmath145 and some @xmath146 we have @xmath147    multiplying both sides by @xmath148 we then have @xmath149 a contradiction .",
    "this proves the if part .",
    "now we prove the _ only if _ part .",
    "let @xmath150 denote the submatrix of @xmath91 consisting of the @xmath129 rows corresponding to the symbols demanded by @xmath69 let @xmath151 denote the submatrix of @xmath91 with rows other than those in @xmath152 then because ( [ eqn4 ] ) holds , we must have @xmath153 the above equation follows because ( [ eqn4 ] ) requires that the rows of @xmath150 and @xmath154 be linearly independent .",
    "thus , @xmath155 let the concatenated matrix @xmath156 be denoted by @xmath157 again , it is easy to see that @xmath158 where the last equality follows from ( [ eqnno33 ] ) .",
    "this proves the only if part .",
    "together with ( [ eqn3a ] ) , the lemma is proved .",
    "in this section , we provide some basic definitions and results from matroid theory that will be used throughout this paper . for more details , the reader is referred to @xcite .",
    "[ matroiddefnindp ] let @xmath159 be a finite set .",
    "a _ matroid _",
    "@xmath160 on @xmath159 is an ordered pair @xmath161 where the set @xmath162 is a collection of subsets of @xmath159 satisfying the following three conditions    1 .",
    "@xmath163 2 .",
    "if @xmath164 and @xmath165 then @xmath166 3 .",
    "if @xmath167 and @xmath168 are in @xmath162 and @xmath169 then there is an element @xmath41 of @xmath170 such that @xmath171    the set @xmath159 is called the _ ground set _ of the matroid and is also referred to as @xmath172 the members of set @xmath162 ( also referred to as @xmath173 ) are called the _ independent sets _ of @xmath174 a maximal independent subset of @xmath159 is called a _ basis _ of @xmath0 , and the set of all bases of @xmath175 is denoted by @xmath176 the set @xmath177 is then obtained as @xmath178 a subset of @xmath159 which is not in @xmath162 is called a _",
    "dependent set_. a minimal dependent set of @xmath159 ( any of whose proper subsets is in @xmath162 ) is called a _ circuit _ and the set of circuits of @xmath159",
    "is denoted by @xmath179 or @xmath180 with @xmath181 a function called the _",
    "function is associated , whose domain is the power set @xmath182 and codomain is the set of non - negative integers .",
    "the rank of any @xmath183 in @xmath184 denoted by @xmath185 , is defined as the maximum cardinality of a subset of @xmath141 that is a member of @xmath186 we denote @xmath187    the set of circuits of a matroid @xmath0 satisfy the property that if @xmath188 and @xmath189 then there exists a circuit @xmath190 this is known as the _ circuit - elimination axiom_.    besides using the independent sets , a matroid on @xmath159 can defined by several other ways , including by specifying the set of circuits , the set of bases or the rank function .",
    "we now give the definition of a matroid based on the properties satisfied by the rank function for our use in section [ secinsufficiency ] .",
    "[ matroiddefnrank ] let @xmath159 be a finite set .",
    "a function @xmath191 is the _ rank _",
    "function of a matroid on @xmath159 if and only if @xmath192 satisfies the following conditions .    1 .",
    "if @xmath193 then @xmath194 2 .   if @xmath195 then @xmath196 3 .",
    "if @xmath141 and @xmath197 are subsets of @xmath198 then @xmath199    two matroids @xmath200 and @xmath201 are said to be _ isomorphic _ , denoted as @xmath202 if there is a bijection @xmath203 from @xmath204 to @xmath205 such that , for all @xmath206 @xmath207 is independent in @xmath201 if and only if @xmath141 is independent in @xmath208    the _ vector matroid _ associated with a matrix @xmath2 over some field @xmath10 , denoted by @xmath209,$ ] is defined as the ordered pair @xmath210 where @xmath159 consists of the set of column labels of @xmath5 and @xmath162 consists of all the subsets of @xmath159 which index columns that are linearly independent over @xmath10 . an arbitrary matroid @xmath0 is said to be @xmath10-_representable _ if it is isomorphic to a vector matroid associated with some matrix @xmath2 over some field @xmath7 the matrix @xmath2 is then said to be a _ representation _ of @xmath1 the rank function of a representable matroid @xmath160 , given by @xmath211 is therefore equal to the rank of the submatrix of columns corresponding to @xmath141 in the matrix @xmath2 to which the matroid is associated .",
    "a matroid which is not representable over any finite field is called a _",
    "nonrepresentable _ matroid .",
    "[ exm1 ] let @xmath212 with elements from @xmath213 then the matroid @xmath209 $ ] over the set @xmath214 of column indices of @xmath2 is defined by @xmath215    let @xmath216 for some positive integer @xmath217 for some non - negative integer @xmath218 let @xmath219 the set @xmath220 satisfies the axioms of independent sets of a matroid on @xmath198 referred to as the _ uniform matroid _ @xmath221    the vector matroid of a generator matrix of an mds code of length @xmath222 and with number of information symbols @xmath9 is isomorphic to the uniform matroid @xmath223    let @xmath224 be a collection of matroids defined on the disjoint groundsets @xmath225 respectively .",
    "the _ direct sum _ of the matroids , denoted by @xmath226 over the groundset @xmath227 is the matroid with the independent sets as follows .",
    "@xmath228    [ lemmamatroidequivalence ] let @xmath229,$ ] @xmath2 being a matrix over some field @xmath7 the matroid @xmath0 remains unchanged if any of the following operations are performed on @xmath2    * interchange two rows . * multiply a row by a non - zero member of @xmath10 . *",
    "replace a row by the sum of that row and another .",
    "* adjoin or delete a zero row . *",
    "multiply a column by a non - zero member of @xmath10 .    by the row operations of lemma [ lemmamatroidequivalence ] ,",
    "it is clear that any @xmath10-representable matroid can be uniquely expressed as the vector matroid of a matrix of the form @xmath230 with elements from @xmath7    let @xmath160 be the matroid @xmath231 and suppose that @xmath232 let @xmath233 then the ordered pair @xmath234 is a matroid and is called the _ restriction _ of @xmath160 to @xmath141 or the _ deletion _ of @xmath235 from @xmath174 it is denoted as @xmath236 or @xmath237 it follows that the circuits of @xmath236 are given by @xmath238    the restriction of a @xmath10-representable matroid is also @xmath10-representable .",
    "the restriction of a vector matroid @xmath209 $ ] to a subset @xmath239 of the column indices of @xmath2 is also obtained as the vector matroid of a matrix @xmath240 where @xmath240 is obtained from @xmath2 by considering only those columns of @xmath2 indexed by @xmath241    let @xmath229 $ ] be the matroid from example [ exm1 ] .",
    "let @xmath242 the matroid @xmath243 is given by @xmath244),$ ] where @xmath245    let @xmath0 be a matroid and @xmath246 be @xmath247 .",
    "then the set @xmath246 forms the set of bases of a matroid on @xmath248 defined as the _ dual matroid _ of @xmath249 denoted as @xmath250 clearly @xmath251 we also have @xmath252 for any @xmath253    [ exmdual ] the dual matroid of the matroid @xmath209 $ ] given in example [ exm1 ] is given by the vector matroid @xmath254 $ ] corresponding to the matrix @xmath255    [ contraction ] let @xmath0 be a matroid on @xmath159 and @xmath256 the _ contraction _ of @xmath239 from @xmath249 denoted as @xmath257 is given by the matroid @xmath258 with @xmath259 as its ground set .",
    "the set of independent sets of @xmath260 is as follows .",
    "@xmath261 where @xmath262 is some basis of @xmath263 the set of circuits of @xmath260 consists of the minimal non - empty members of @xmath264    in section [ sec4 ] , we show that for a network to be a matroidal error detecting ( or correcting ) network associated with a matroid @xmath249 the circuits of @xmath0 have to satisfy certain conditions .",
    "thus the concept of circuits of a matroid is the gateway for our results concerning matroidal error detecting ( correcting ) networks .",
    "this is in contrast with the theory of matroidal networks developed in @xcite , where any arbitrary matroid can give rise to a corresponding matroidal network .",
    "let @xmath0 be the matroid with ground set @xmath265 and with set of bases @xmath266 being the set of all subsets of @xmath159 of size four .",
    "we wish to find @xmath267 it can be seen that the dual matroid @xmath268 has the set of all singletons of @xmath159 as its set of bases @xmath269 then , the matroid @xmath270 has the ground set @xmath271 and the set of bases @xmath272 the dual matroid of @xmath270 is the matroid @xmath273 with the ground set @xmath274 and the set of bases @xmath275    @xcite [ remarkcontraction ] the contraction of a @xmath10-representable matroid is also @xmath10-representable . let @xmath209 $ ] be the vector matroid associated with a matrix @xmath2 over @xmath7 let @xmath41 be the index of a non - zero column of @xmath276 suppose using the elementary row operations listed in lemma [ lemmamatroidequivalence ] , we transform @xmath2 to obtain a matrix @xmath240 which has a single non - zero entry in column @xmath277 let @xmath278 denote the matrix which is obtained by deleting the row and column containing the only non - zero entry of column @xmath277 then @xmath279/\\left\\{e\\right\\ } = \\left({\\cal m}[a]^*\\backslash\\left\\{e\\right\\}\\right)^ * = { \\cal m}[a''],\\ ] ] where @xmath209^*$ ] is the dual matroid of @xmath209.$ ]    let @xmath229 $ ] be the matroid from example [ exm1 ] .",
    "we want to find @xmath209/\\left\\{4\\right\\}.$ ] we first obtain @xmath209/\\left\\{4\\right\\}$ ] in a straightforward manner according to the definition of contraction .",
    "the dual matroid of @xmath209 $ ] is the vector matroid corresponding to the matrix @xmath280 now @xmath281\\backslash\\left\\{4\\right\\}$ ] is the vector matroid corresponding to the matrix @xmath282 according to the definition of contraction , @xmath283^*={\\cal m}[a]/\\left\\{4\\right\\}.$ ] the set of bases of @xmath283^*$ ] is @xmath284 thus the matroid @xmath279/\\left\\{4\\right\\ } = \\left(e=\\left\\{1,2,3\\right\\},{\\cal i}=\\left\\{\\phi,\\{1\\},\\{2\\}\\right\\}\\right).\\ ] ] we can also obtain @xmath209/\\left\\{4\\right\\}$ ] using the technique shown in remark [ remarkcontraction ] . towards that end , using row operations on @xmath5 we obtain the matrix @xmath285 by removing the row corresponding to the only non - zero entry in the @xmath286 column of @xmath240 and the @xmath286 column itself , we obtain the matrix @xmath287 it is easily verified that @xmath283^ * = { \\cal m}[a''].$ ]    let @xmath0 be a matroid on @xmath159 and @xmath141 be a subset of @xmath159 . the _ closure _ of @xmath141 is then defined to be the set @xmath288 if @xmath289 then @xmath141 is said to be a _",
    "flat _ of @xmath1 a flat @xmath290 such that @xmath291 is called a _",
    "hyperplane _ of @xmath1 moreover , @xmath292 is a hyperplane of @xmath0 if and only if @xmath235 is a circuit of @xmath250    consider the matroid @xmath209 $ ] of example [ exm1 ] .",
    "let @xmath293 then @xmath294 is a flat .",
    "moreover it is also a hyperplane of @xmath1 also , it can be easily verified that the set @xmath295\\})-\\left\\{1,3\\right\\ } = \\left\\{2,4\\right\\}\\ ] ] is a circuit of the dual matroid @xmath209^*,$ ] given in example [ exmdual ] .",
    "let @xmath296 be a matroid on @xmath297 if for some @xmath298 @xmath299 for some @xmath300 then the matroid @xmath296 is said to be a _",
    "parallel extension _ of @xmath301 and is denoted by @xmath302 the element @xmath41 is said to be _ added in parallel _ with element @xmath303 also , a parallel extension @xmath304 of @xmath268 is said to be a _ series extension _ of @xmath181 in which case @xmath305 and @xmath296 is denoted by @xmath306 the element @xmath41 is then said to be _ added in series _ with element @xmath303    the following two lemmas summarise equalities which can be proved easily from the definitions of the series and parallel matroids and the duality relations between them .",
    "we state them here without proof so that we may use them later in section [ sec5 ] .",
    "[ remparallel ] let @xmath307 such that @xmath308 in a parallel extension @xmath309 of @xmath1 the following statements are true .",
    "@xmath310    [ remseries ] let @xmath307 such that @xmath308 in a series extension @xmath311 of @xmath249 the following statements are then true .",
    "@xmath312    we now present two lemmas , which will be useful for describing the construction of matroidal error detecting ( correcting ) networks in section [ sec5 ] .",
    "they also serve as examples for parallel and series extensions of a matroid . to the best of our knowledge",
    "they are not explicitly found in existing matroid literature .",
    "therefore , we prove them here for the sake of completeness .",
    "[ parallelrepresentation ]",
    "let @xmath2 be an @xmath313 matrix over @xmath7 for some @xmath314 let @xmath315 be a non - zero column of @xmath276 let @xmath3 be the @xmath316 matrix @xmath317 then , @xmath318={\\cal m}[a]+^p_i \\left\\{n+1\\right\\},$ ] i.e. , @xmath318 $ ] is a parallel extension of the vector matroid associated with @xmath276    clearly @xmath318\\backslash \\left\\{n+1\\right\\ } = { \\cal m}[a ] = { \\cal m}.$ ] moreover , in @xmath318,$ ] the @xmath319 column of @xmath3 is equal to the @xmath320 column , thus @xmath321}).$ ] thus , by definition , @xmath318 = { \\cal m}[a]+^p_i \\left\\{n+1\\right\\},$ ] the parallel extension of @xmath209 $ ] at @xmath322 this proves the lemma .",
    "[ seriesrepresentation ] let @xmath323 be an @xmath313 matrix over @xmath83 where @xmath324 denotes the @xmath26 column of @xmath276 for some @xmath314 let @xmath315 be a non - zero column of @xmath2 such that @xmath325 . let @xmath3 be the @xmath326 matrix @xmath327 where @xmath328 then the vector matroid associated with @xmath329 @xmath318,$ ] is a series extension of the vector matroid associated with @xmath5 @xmath209 $ ] at @xmath330 i.e. , @xmath318={\\cal m}[a]+^s_i \\left\\{n+1\\right\\}.$ ]    because @xmath331 we must have @xmath332 also from the form of @xmath329 we have @xmath333 thus , @xmath334 of columns forms a hyperplane of @xmath318.$ ] therefore , @xmath335 is a circuit in @xmath318^*.$ ] also , as @xmath318/\\left\\{n+1\\right\\}={\\cal m}[a],$ ] we must have @xmath318^*\\backslash\\left\\{n+1\\right\\}={\\cal m}[a]^*.$ ] thus @xmath318^*$ ] is a parallel extension of @xmath209^*,$ ] i.e. , @xmath318^*={\\cal m}[a]^*+_i^p\\left\\{n+1\\right\\}.$ ] hence @xmath318={\\cal m}[a]+_i^s\\left\\{n+1\\right\\},$ ] i.e. , @xmath318 $ ] is a series extension of @xmath209.$ ] this proves the lemma .",
    "if a matroid @xmath0 is obtained from a matroid @xmath296 by deleting a non - empty subset @xmath239 of @xmath336 then @xmath296 is called an _ extension _ of @xmath1 in particular , if @xmath337 , then @xmath338 is said to be a _ single - element extension _ of @xmath339    [ singleelement ] let @xmath340 be a set of flats of @xmath0 satisfying the following conditions .    * if @xmath341 and @xmath342 is a flat of @xmath0 containing @xmath343 then @xmath344 * if @xmath345 are such that @xmath346 then @xmath347    any set @xmath340 of flats of @xmath0 which satisfies the above conditions is called a _",
    "modular cut _ of @xmath1 there is a one - one correspondence between the set of all modular cuts of a matroid and the set of all single - element extensions of a matroid .",
    "we denote the single - element extension @xmath338 corresponding to the modular cut @xmath340 as @xmath348 where @xmath41 is the new element that is added . also , the set @xmath349 consists precisely of those flats of @xmath0 such that for each @xmath350 we have @xmath351    [ examplesingle ] let @xmath175 be the vector matroid of the matrix over @xmath352 @xmath353 consider the flats @xmath354 and @xmath355 note that the flats @xmath356 and @xmath357 form a modular cut @xmath340 satisfying the conditions in definition [ singleelement ] .",
    "thus there exists a single - element extension of @xmath0 which corresponds to this modular cut .",
    "let @xmath358 be this matroid .",
    "it can be verified that @xmath358 is the vector matroid of the matrix over @xmath359 @xmath360 however , @xmath358 does not have a representation over the field @xmath213    let @xmath0 be a matroid .",
    "for a flat @xmath361 in the set of flats of @xmath249 let @xmath362 denote the set of all flats of @xmath0 which contain @xmath363 then @xmath362 can be easily verified to be a modular cut of @xmath0 and is defined as the _ principal modular cut _ of @xmath0 _ generated by the flat _",
    "@xmath363 the single - element extension of @xmath0 corresponding to this principal modular cut is then defined as the _ principal extension of _",
    "@xmath0 _ generated by the flat _ @xmath343 and is denoted by @xmath364 where @xmath41 is the new element added .",
    "the single - element extension shown in example [ examplesingle ] is a principal extension of the matroid @xmath175 generated by the flat @xmath365 the principal modular cut corresponding to this extension is then @xmath366",
    "in this section , we define _ matroidal error correcting and detecting networks _ and establish the link between matroids and network - error correcting and detecting codes .",
    "the contents of this section are logical extensions of the concept of the matroidal networks defined in @xcite which gave the connection between matroids and network codes .",
    "the definition of a matroidal network is as follows .",
    "[ matroidalnetworkdefinition ] let @xmath29 be a network with a message set @xmath367 let @xmath368 be a matroid .",
    "the network @xmath369 is said to be a _",
    "matroidal network _ associated with @xmath175 if there exists a function @xmath370 such that the following conditions are satisfied .    1 .",
    "@xmath371 is one - one on @xmath367 2 .",
    "@xmath372 3 .",
    "@xmath373 @xmath374    suppose @xmath0 is a representable matroid .",
    "then the first two conditions of definition [ matroidalnetworkdefinition ] can be interpreted as associating independent global encoding vectors with the information symbols .",
    "the last condition will then ensure that flow conservation holds throughout the network , and also that the sinks are able to decode the demanded information symbols",
    ". thus definition [ matroidalnetworkdefinition ] can be looked at as the matroidal generalization of a scalar linear network code , which is confirmed by the following theorem proved in parts in @xcite and @xcite .",
    "[ matroidalnetworkthm ] a network @xmath31 is matroidal in association with a representable matroid if and only if it has a scalar linear network coding solution .",
    "let @xmath29 be an acyclic network with a collection of sources @xmath375 with message set @xmath45 ( with @xmath82 elements ) and sinks @xmath376 and a given topological order on @xmath115 let @xmath377 be a non - negative integer , and @xmath378 be the collection of error patterns of size @xmath125 let @xmath0 be a matroid over a ground set @xmath159 with @xmath379 elements , and with @xmath380 we now define _ matroidal error detecting and correcting networks _ by extending the definition of matroidal networks of @xcite for the case of networks where errors occur .",
    "[ matroidalerrornetworkdefinition ] the network @xmath369 is said to be a _ matroidal _",
    "@xmath99-_error detecting network _ associated with @xmath249 if there exists a function @xmath381 such that the following conditions are satisfied .",
    "a.   * independent inputs condition * : @xmath371 is one - one on @xmath382 where @xmath383 .",
    "b.   * flow conservation condition * : for some basis @xmath3 of @xmath175 obtained by extending @xmath384 ( where @xmath385 is ordered according to the given topological order on @xmath33 ) , the following conditions should hold for all @xmath386 1 .",
    "@xmath387 2 .",
    "@xmath388 @xmath389 c.   * successful decoding condition * : for each error pattern @xmath390 let @xmath391 let @xmath392 be the @xmath393 element matroid @xmath394 then , at every sink @xmath395 for each @xmath396 we must have @xmath397 where @xmath398 denotes the set of incoming edges at sink @xmath94 and @xmath399 is the set of demands at @xmath69    [ matroidalerrorcorrectionnetworkdefinition ] the network @xmath369 is said to be a _ matroidal _ @xmath98-_error correcting network",
    "_ associated with a matroid @xmath249 if it is a matroidal @xmath113-_error detecting network _ associated with @xmath1    as with definition [ matroidalnetworkdefinition ] , definitions",
    "[ matroidalerrornetworkdefinition ] and [ matroidalerrorcorrectionnetworkdefinition ] can be viewed as the matroidal abstractions of a scalar linear network - error detecting and correcting codes ( theorem [ matroidalerrornetworkthm ] will present the formal statement and proof of this abstraction ) .",
    "if @xmath0 is a representable matroid , then as in definition [ matroidalnetworkdefinition ] , condition ( a ) is equivalent to saying that the global encoding vectors corresponding to the information symbols are linearly independent .",
    "condition ( b1 ) is equivalent to saying that the symbol flowing on any edge in the network is a _ non - zero _ linear combination of the information symbols , added with a ( not necessarily non - zero ) linear combination of the network - errors in the network .",
    "such a condition is not a restriction , because if an edge carries an all - zero linear combination of the input symbols , then such an edge can simply be removed from the network .",
    "condition ( b2 ) is equivalent to a modified flow conservation condition in networks with errors , implying that the symbol flowing through any edge @xmath41 in the network is a linear combination of the incoming symbols at @xmath49 and the network - error in that particular edge .",
    "condition ( c ) ensures that the sinks can decode their demands .",
    "although our definitions are abstracted from scalar linear network - error detecting and correcting codes , we will show in section [ secinsufficiency ] that it applies to nonlinear schemes also .",
    "the condition ( c ) of definition [ matroidalerrornetworkdefinition ] requires that @xmath400 exist in @xmath401 in the first place .",
    "however , this is ensured by condition ( b1 ) . to see this , first we note that @xmath402 because these elements are in @xmath3 and are not contracted out of @xmath1 now consider the set @xmath403 for any @xmath39 which is independent in @xmath0 because of condition ( b1 ) . by ( [ independentcontraction ] ) in the definition of the contraction of a matroid",
    ", we have that @xmath404 exists and is also not dependent in @xmath405 therefore , @xmath406 is well defined in @xmath392 also .",
    "although definition [ matroidalnetworkdefinition ] and definition [ matroidalerrornetworkdefinition ] in the case of no network - errors do not immediately appear to agree , it can be shown that a network is a matroidal network associated with some matroid @xmath249 if and only if it is a matroidal error detecting network with @xmath407 with respect to another matroid derived using extensions of @xmath1 this can be inferred easily from the remainder of this paper , therefore we leave it without an explicit proof .",
    "we now present the main result of this paper which is the counterpart of the results from @xcite which relate networks with scalar linearly solvable network codes to representable matroids .",
    "[ matroidalerrornetworkthm ] let @xmath29 be an acyclic communication network with sources @xmath375 and sinks @xmath408 the network @xmath369 is a _",
    "@xmath99-_error detecting network _ associated with a @xmath10-representable matroid if and only if it has a scalar linear network - error detecting code over @xmath10 that can correct network - errors at any @xmath99 edges which are known to the sinks .",
    "_ if part : _ suppose there exists a scalar linear @xmath99-network - error detecting code over @xmath10 for @xmath31 with the matrices @xmath409 and @xmath410 as defined in section [ sec2 ] , according to the given topological ordering on @xmath33 .",
    "let @xmath411 be the matrix as in ( [ formofa ] ) .",
    "let @xmath412 be the row - wise concatenated matrix @xmath413 of size @xmath414 and @xmath415 be the column - wise concatenated matrix @xmath416 also , let @xmath417,$ ] the vector matroid associated with @xmath418 with @xmath419 being the set of column indices of @xmath420 let @xmath421 be the function defined as follows .",
    "@xmath422 we shall consider the basis for @xmath0 as @xmath423 i.e. , the first @xmath424 columns of @xmath425 . this basis will be used repeatedly in the proof .",
    "we shall now prove that the matroid @xmath0 and function @xmath371 satisfy the conditions of definition [ matroidalerrornetworkdefinition ] .",
    "towards this end , first we see that condition ( a ) holds by the definition of function @xmath303    we first prove that condition ( b1 ) holds .",
    "we have that @xmath426 because no edge is assigned a zero - global encoding vector , i.e. , no column of @xmath81 is zero .",
    "thus condition ( b1 ) holds .    to show condition ( b2 ) , first note that because the given set of coding coefficients for the network is a ( valid ) network code , @xmath427 is such that @xmath428 where @xmath429 is a column vector in @xmath430 with all zeros except for the @xmath26 entry which is @xmath431 also , ( [ eqn5 ] ) implies that @xmath432 thus , combining ( [ eqn5 ] ) and ( [ eqn6 ] ) , we have @xmath433 where @xmath434 corresponds to @xmath435 and the non - zero coefficients of @xmath436 can occur only in those positions corresponding to the set of messages generated at @xmath437 if any , which is a subset of @xmath438 . also , for any @xmath439 with @xmath440 the vector @xmath441 is some column of the matrix @xmath442 thus @xmath443 we also note that the @xmath444 row of @xmath434 contains @xmath445 ( indicating the error at the edge @xmath63 ) while the @xmath444 row of @xmath446 is all - zero because of the topological ordering in the acyclic network ( as symbols flowing in any edge can have contribution only from upstream errors ) .",
    "therefore @xmath447 along with ( [ eqnno20 ] ) , this proves that condition ( b2 ) holds .",
    "now we prove that condition ( c ) also holds .",
    "let @xmath448 be the index set following the topological ordering corresponding to an arbitrary error pattern @xmath449 and let the set @xmath450 be denoted as @xmath451 first we note that by definition , @xmath392 is the vector matroid of the matrix @xmath452 where @xmath453 now for a sink @xmath454 @xmath455 but according to section [ sec2 ] , we have , @xmath456 and @xmath457 where @xmath458 by lemma [ lemmadecoding ] , as the given network code is @xmath99-network - error detecting , we must have @xmath459 where @xmath460 is the set of demands at @xmath94 .",
    "but then @xmath461 by ( [ eqnno21 ] ) .",
    "this proves condition ( c ) for sink @xmath69 the choice of error pattern and sink being arbitrary , this proves the if part of the theorem .",
    "_ only if part : _ let @xmath0 be the given @xmath10-representable matroid , along with the function @xmath462 and basis @xmath463 that satisfy the given set of conditions .",
    "let @xmath464 be a representation of @xmath0 over @xmath83 such that @xmath465 first we prove the following claim .",
    "_ claim : _ there exists an @xmath466 matrix @xmath467 and a @xmath468 matrix @xmath427 of the form @xmath469 for some strictly upper - triangular matrix @xmath54 , such that @xmath470 _ proof of claim _ :    consider an edge @xmath471 let @xmath472 denote indices of the set of messages generated at @xmath473 as condition ( b2 ) holds , @xmath474 is such that @xmath475 for some @xmath476 and @xmath477 in @xmath7 note that if @xmath63 is such that @xmath478 then by ( [ eqn7 ] ) , @xmath474 is just a linear combination of @xmath479 and @xmath480 following the ancestral ordering for @xmath481 it can be seen that for any edge @xmath482 @xmath474 is a linear combination of @xmath483 and @xmath484 thus we have , @xmath485 as condition ( b1 ) holds , we must have at least one @xmath486 and because of condition ( b2 ) , we must have @xmath487 this structure of @xmath474 also implies that @xmath488 for any @xmath489 moreover , we also see that @xmath490 for any distinct pair @xmath491 of edges in @xmath115 arranging all the @xmath492s in the given topological order ( i.e. , with @xmath493 ) , we get @xmath494 and @xmath495 where @xmath496 comprises of the elements @xmath497 and @xmath498 is the matrix @xmath499    by lemma [ lemmamatroidequivalence ] , the matroid @xmath0 does not change if some row or some column of @xmath464 is multiplied by a non - zero element of @xmath7 let @xmath500 be the matrix obtained from @xmath425 by multiplying the rows @xmath501 by the elements @xmath502 respectively , and then multiplying the columns @xmath501 by @xmath503 respectively .",
    "the matrix @xmath500 is then of the form @xmath504 where @xmath505 @xmath506 being the upper - triangular matrix obtained from @xmath507 i.e. , @xmath508 as @xmath0 is the vector matroid of @xmath500 also , without loss of generality we assume that @xmath509 with @xmath510    now let @xmath290 be the @xmath466 matrix whose columns are populated as follows .",
    "for all @xmath511 @xmath512 we shall now show that @xmath513 clearly for any edge @xmath63 such that @xmath514 ( such edges exist because of acyclicity of @xmath31 ) , we have @xmath515 as @xmath516 is the basis vector which picks the @xmath26 column of @xmath517 which is equal to @xmath518 we now use induction on @xmath519 ( according to the topological order ) to show that @xmath520 .",
    "now assume that for some @xmath482 all @xmath521 are such that @xmath522 by ( [ eqn7 ] ) , we have @xmath523 where the second equality above follows from the induction assumption and the definition of @xmath524 @xmath429 is a column vector of length @xmath89 with all zeros except for the @xmath445 at @xmath26 position , and the last equality follows from ( [ eqn7 ] ) .",
    "thus we have @xmath525 continuing the induction on @xmath481 we have that @xmath526 therefore , we have @xmath527 thus , with @xmath528 and @xmath529 we have that @xmath412 is of the form as in ( [ formofx ] ) .",
    "this proves the claim .",
    "we finally show that there is a scalar linear @xmath99-network - error detecting code for @xmath530 let the matrices @xmath531 be obtained according to ( [ formofa ] ) with @xmath532 and let the network coding matrix @xmath533 then , the columns of the matrix @xmath534 denote the global encoding vectors of the edges of @xmath33 in the given topological order .",
    "clearly this is a valid network code for @xmath535 by the structure of the matrices @xmath290 and @xmath536    for some arbitrary error pattern , @xmath537 @xmath392 ( as in condition ( c ) ) is clearly the vector matroid of the matrix @xmath538 where @xmath448 is the index set corresponding to @xmath539 and @xmath540 now for a sink @xmath454 @xmath541 by condition ( c ) , we have @xmath542 but we have by the notations of section [ sec2 ] , for @xmath543 @xmath544 thus , @xmath545 as the choice of sink and error pattern was arbitrary , using lemma [ lemmadecoding ] it is seen that the network code given by the column vectors of @xmath534 is @xmath99-network - error detecting .",
    "this completes the proof of the theorem .",
    "theorem [ matroidalerrornetworkthm ] has the following corollary which is easy to prove .",
    "[ matroidalerrorcorrectingnetworkthm ] let @xmath29 be an acyclic communication network with sources @xmath375 and sinks @xmath408 the network @xmath369 is a _",
    "@xmath98-_error correcting network _ associated with a @xmath10-representable matroid if and only if it has a scalar linear network - error correcting code over @xmath10 that can correct network - errors at any @xmath98 edges in the network .",
    "in the theory of matroidal networks developed in @xcite , we could start with any matroid and obtain a network which is matroidal with respect to that matroid .",
    "in particular , if we start with a representable matroid , we always obtain a network which has a scalar linear network code . on the other hand , to obtain matroidal error detecting ( correcting ) networks , the matroid has to satisfy the conditions of definition [ matroidalerrornetworkdefinition ] , in particular condition ( c ) which puts restrictions on the choice of the matroid according to the nature of its contractions .",
    "if we are looking for networks with scalar linear network - error correcting codes , such matroids should be representable .",
    "thus , unlike @xcite , it is not straightforward how to obtain or construct such matroids ( representable or otherwise ) . in this section ,",
    "we propose algorithms for constructing such matroids ( not necessarily representable ) along with their corresponding networks ( in particular multisource multicast and multiple - unicast ) , such that these networks are matroidal error correcting networks associated with the constructed matroids .",
    "the matroidal @xmath98-error correcting networks constructed by our algorithms naturally are also matroidal @xmath113-error detecting networks . the construction of matroidal @xmath99-error detecting networks ( for general @xmath99 ) can be done in a similar fashion , and therefore we omit it .",
    "each such matroidal error correcting network is obtained by constructing a series of networks and a corresponding series of matroids associated with which the networks are matroidal error correcting .",
    "the series of networks are constructed using two types of nodes defined as follows .    * _ _ n__odes which have a single incoming edge from a coding node and multiple outgoing edges to other coding nodes or sinks are known as _ forwarding nodes_. we denote the set of all forwarding nodes as @xmath546 * nodes which combine information from several incoming edges from the forwarding nodes and transmit the coded information to their corresponding forwarding nodes are known as _ coding nodes_.",
    "if the series of matroids constructed are representable matroids , then the networks constructed are obtained along with scalar linear network - error correcting codes that satisfy the sink demands successfully .",
    "let @xmath547 be the set of all incoming edges of all forwarding nodes @xmath546 in a network with the property that coding and forwarding nodes alternate in any path from a source to a sink in the network , it is sufficient to consider error patterns that are subsets of @xmath547 to define the error correcting capability of the network , rather than subsets of all the edges in the network .",
    "if errors corresponding to such error patterns are correctable , then in such networks other errors are also correctable , as symbols flowing through edges other than @xmath547 are only copies of symbols flowing through @xmath548 the networks that we design using our algorithms are restricted to have these properties , and therefore it is sufficient to construct a matroid @xmath0 with @xmath549 that satisfies the conditions in definition [ matroidalerrornetworkdefinition ] .",
    "the goal of the construction algorithms is to generate a network defined by the following parameters that are to be given as inputs to the algorithms .    * _ number of sources _ ( @xmath550 ) : the number of sources in the multisource multicast network or in the multiple - unicast network . * _ number of information symbols _ ( @xmath551 ) : for multicast , @xmath552 is the number of information symbols generated by @xmath553 while @xmath82 is the total number of information symbols generated by all sources . for the multiple - unicast case",
    ", @xmath82 represents the number of non - collocated sources present in the network , each generating one information symbol .",
    "* _ number of correctable network - errors _ ( @xmath98 ) : this fixes the number of outgoing edges from the source(s ) . for multicast ,",
    "the number of outgoing edges from the source @xmath554 is fixed as @xmath555 for multiple - unicast , the number of outgoing edges from each source is fixed as @xmath556 these edges and their head nodes are for the sake of clearly presenting our algorithm , and can be absorbed back into the corresponding sources once the algorithm is completed . *",
    "_ number of network - coding nodes _ ( @xmath557 ) : at each iteration in our algorithm , one network - coding node and one forwarding node will be added to the network , and a corresponding matroid constructed associated with which the extended network will be a matroidal error correcting network . the algorithm will run until @xmath557 forwarding nodes have been added . *",
    "_ number of multicast sinks _",
    "( @xmath558 ) : this value indicates the number of sinks to which the information symbols is to be multicast . for the multiple - unicast case ,",
    "we assume that the number of sinks is equal to the number of sources ( i.e. messages ) .",
    "[ fig : flowchart ] presents a sketch of our algorithm for constructing acyclic matroidal @xmath98-error correcting multisource multicast and multiple - unicast networks .",
    "the full description of the algorithm for multisource multicast is given in section [ subsec5b ] and for multiple - unicast in section [ subsec5c ] .",
    "we now present a couple of illustrative examples before we give the full description of our algorithm .",
    "[ multicastex ] fig .",
    "[ fig : multicastconstructionexample0]-[fig : multicastconstructionexample4 ] describe the stages of a two source multicast network with input parameters @xmath559 and @xmath560 as it evolves through the iterations in the construction shown in the sketch . the network shown in fig .",
    "[ fig : multicastconstructionexample0 ] is the initial naive network .",
    "a representation of the initial matroid corresponding to this naive network is shown in ( [ eqnstage0multicast ] ) in fig .",
    "[ fig : multicasteqns ] and is obtained from two mds codes over @xmath561 , one of length @xmath562 implemented at source @xmath563 and another at source @xmath564 with length @xmath565 both codes have minimum distance @xmath566 each successive iteration in the construction adds a new coding node to the network , and a new column and row to the matrix representing the matroid . the equations ( [ eqnstage1multicast])-([eqnstage4multicast ] ) shown in fig .",
    "[ fig : multicasteqns ] indicate the matrices representative of the representable matroids which correspond to the networks shown in fig .",
    "[ fig : multicastconstructionexample1]-[fig : multicastconstructionexample4 ] , respectively .",
    "let @xmath60 be the incoming edge at forwarding node @xmath322 the function @xmath371 for each corresponding pair of network and matroid is defined as follows .",
    "@xmath567 for reasons mentioned in the beginning of this section , it is sufficient to define @xmath371 for the input indices @xmath45 and the set of edges @xmath548 each network is seen to be matroidal @xmath445-error correcting with respect to the corresponding matroid along with the function @xmath303    fig . [",
    "fig : unicastconstructionexample0]-[fig : unicastconstructionexample3 ] show the stages of the network evolution of a multiple - unicast network with parameters @xmath568 and @xmath569 for @xmath570 , the @xmath571 sink demands the information symbol generated by the @xmath571 source .",
    "the representative matrices of the corresponding matroids are shown in ( [ eqnstage0unicast])-([eqnstage3unicast ] ) in fig .",
    "[ fig : unicasteqns ] .",
    "the initial matroid represented by the matrix in ( [ eqnstage0unicast ] ) is obtained from a repetition code of length @xmath572 and minimum distance @xmath566 the function @xmath371 is defined in the same way as in the multicast example .",
    "again , every network is matroidal @xmath445-error correcting with the corresponding matroid and function @xmath303    the example networks shown in this paper which are obtained using our construction algorithms ( executed in matlab ) are matroidal error correcting networks with respect to a representable matroid , i.e. , all the example networks have a scalar linear solution .",
    "the reason for presenting networks associated only with representable matroids is that obtaining matroidal error correcting networks associated with nonrepresentable matroids seems to be a computationally difficult problem .",
    "this is because our algorithms have to repeatedly compute various types of matroid extensions satisfying different kinds of properties .",
    "computations and descriptions of the extensions of nonrepresentable matroids is a computationally intensive task .",
    "we further elaborate on the difficulty of obtaining networks associated with representable matroids in subsection [ mecnnonrepresentable ] . using stronger mathematical machinery with respect to nonrepresentable matroids and their minors ,",
    "the complexity of obtaining associated networks could be reduced and our algorithms can then be used to obtain examples of the same . in subsection",
    "[ mecnnonrepresentable ] , we present a result which can be considered as a first step towards obtaining matroidal error correcting networks which are associated with nonrepresentable matroids .",
    "+   +   +   +   +   +   +   +    @xmath573    @xmath574    @xmath575    @xmath576    @xmath577     +   +   +   +     +   +   +   + [ fig : multicasteqns ]       ' '' ''    [ fig : unicastnetworkstages ]    @xmath578    @xmath579    @xmath580    @xmath581    ' '' ''    [ fig : unicasteqns ]      we now give the full description of our construction for the case of multisource multicast .",
    "the construction generates a multisource multicast network with the given parameters @xmath582 , and @xmath583 along with a matroid ( not necessarily representable ) with respect to which the network is matroidal @xmath98-error correcting . for the sake of the completeness of the description of our construction algorithm",
    ", we present a simple lemma .",
    "[ seriesextensionlemma2 ]",
    "let @xmath296 be a series extension of the matroid @xmath584 at @xmath585 i.e. , @xmath586 let @xmath587 be a circuit of @xmath0 containing @xmath585 then @xmath588 is a circuit of @xmath589    as @xmath590 @xmath591 is a hyperplane of @xmath268 not containing @xmath592 to prove @xmath593 we prove that @xmath594 is a hyperplane ( obviously not containing @xmath595 or @xmath596 ) in @xmath304 also .",
    "note that @xmath304 is a parallel extension of @xmath250 in a parallel extension @xmath304 of @xmath597 the rank of any subset @xmath598 does not change in the extension .",
    "therefore @xmath599    now all that we have to prove is that @xmath591 is a flat in @xmath304 also .",
    "suppose not , then we must have that @xmath600 thus , as @xmath601 there should be a circuit @xmath602 such that @xmath603 with @xmath604 but then this means @xmath605 also , which implies that @xmath606 but this is not the case .",
    "hence @xmath591 is a flat , and hence a hyperplane , in @xmath607 therefore @xmath608 this proves the lemma .",
    "we now present our construction as an elaboration of the algorithm sketch shown in fig .",
    "[ fig : flowchart ] .",
    "the details of the functionality of the algorithm sketch , such as the method of updating the incoming edges to the sinks , the method of updating the matroid , field size issues which govern the possibility of adding new coding nodes and representability of matroidal extensions , etc . , can be inferred through the description of our algorithm and the discussion that follows . the construction is based on matroids which need not always be representable .",
    "however , at all the appropriate junctures , the equivalent scenario for representable matroids is given as remarks . throughout the remainder of this section",
    "we will assume that a matroid remains unchanged when its elements are reordered according to some permutation , as this implies only a relabeling of the matroid elements .",
    "+   + _ * step 1 : initializing the network : * _   + the network @xmath369 is initialized by creating the collection of source nodes @xmath609 and a collection of sink nodes @xmath610    corresponding to each source @xmath611 create a set of @xmath612 forwarding nodes , each with one incoming edge from @xmath613 let the collection of these incoming edges be @xmath614 where @xmath615 is the total number of forwarding nodes added .",
    "for each sink @xmath86 create @xmath616 temporary incoming edges @xmath617 originating from the @xmath616 forwarding nodes . because it is sufficient to consider error patterns on the incoming edges at the forwarding nodes , we abuse our notation to say that @xmath618 this initialized network is represented in fig .",
    "[ fig : multicastinit ] .",
    "+   + _ * step 2 : initializing the matroid * _ + we now obtain a matroid @xmath0 such that the network @xmath31 is a matroidal @xmath98-error correcting network with respect to this matroid @xmath1 towards that end , we consider the direct sum @xmath619 where @xmath620 is the uniform matroid of rank @xmath552 with the groundset with @xmath621 elements given as follows .",
    "@xmath622 the matroid @xmath623 has rank @xmath624 let the ground set of this matroid be @xmath625 where @xmath626 is a basis for @xmath627    if an mds code of length @xmath621 and with @xmath552 information symbols exists , then @xmath620 corresponds to the vector matroid of a generator matrix of an @xmath621-length mds code which has minimum distance @xmath628 .",
    "if such an mds code exists , let this generator matrix be the @xmath629 matrix of the form @xmath630 if such mds codes exist for each source , then a representation of the matroid @xmath623 is given as @xmath631 rearranging the columns of the above representation , we have the alternative representation for @xmath623 which we shall use in the description of our algorithm .",
    "@xmath632 where @xmath633    corresponding to the elements @xmath634 we add the elements @xmath635 respectively in parallel . by definition of a parallel extension",
    ", it can be seen that the order in which these elements are added does not matter .",
    "let the resultant matroid be @xmath636 the set @xmath637 is the ground set of @xmath638 such that @xmath639 are circuits in @xmath636 by repeatedly using ( [ eqn202 ] ) for the succession of parallel extensions , it can be seen that the set @xmath640 forms a basis of @xmath638 .",
    "if @xmath623 is representable , by lemma [ parallelrepresentation ] a representation of the matroid @xmath638 is then the matrix @xmath641    corresponding to the elements @xmath642 we now add the elements @xmath643 respectively in series .",
    "again , the order in which these elements are added does not matter .",
    "let @xmath644 be the resultant matroid .",
    "we then have @xmath645 by repeatedly using lemma [ seriesextensionlemma2 ] , we see that all the circuits of @xmath644 containing @xmath646 will also contain @xmath647 for all @xmath648 in particular , the set of circuits include @xmath649 moreover , by repeatedly using ( [ eqn301 ] ) , we also see that the set @xmath650 forms a basis for @xmath651    let @xmath0 be the matroid @xmath651 consider the initialized network @xmath369 with edges @xmath652 and with @xmath33 being the @xmath616 incoming edges ( abusing the notation ) at all sinks . for @xmath653",
    "we define @xmath654 where @xmath655 let @xmath656 be a function such that    * @xmath657 * @xmath658    let @xmath659 taken in the following one - one correspondence .",
    "@xmath660 thus , the basis vector corresponding to the @xmath320 input ( @xmath661 ) is @xmath662 and the basis vector corresponding to the error at the edge @xmath663 ( for some @xmath9 and @xmath519 as above ) is @xmath664 ( for some @xmath665 such that @xmath666 ) .",
    "suppose @xmath623 is representable , by lemma [ seriesrepresentation ] a representation of the matroid @xmath644 is @xmath667 where @xmath668 thus @xmath669 is of the form @xmath670 where @xmath671 is the appropriate @xmath672 matrix in ( [ eqn9 ] ) .",
    "it is not difficult to see that with the assignment @xmath371 to @xmath673 and basis @xmath329 the network @xmath31 is a matroidal @xmath98-error correcting network in association with the representable matroid @xmath249 as @xmath674 corresponds to a matrix defined as in ( [ mdsrep ] ) , whose columns correspond to the columns of generator matrices of mds codes implemented at each source .    however , we claim that even when @xmath675 is not representable , the network @xmath31 is still a matroidal @xmath98-error correcting network in association with @xmath249 with this assignment @xmath371 to @xmath673 and with basis @xmath676 we now prove this claim by verifying the conditions of definition [ matroidalerrornetworkdefinition ] as follows . *",
    "condition ( a ) : * condition ( a ) is verified as @xmath677 and therefore is independent in @xmath651    * condition ( b1 ) : * suppose for some @xmath39 condition ( b1 ) is not satisfied , i.e. , @xmath678 this means that there is a circuit @xmath679 with @xmath680 note that in @xmath681 the set @xmath682 is also a circuit . thus applying the circuit elimination axiom to the circuits @xmath683 and @xmath684 with @xmath685 we have that there is some circuit @xmath686 however",
    ", @xmath3 is an independent set in @xmath651 thus @xmath687 hence condition ( b1 ) is satisfied .",
    "* condition ( b2 ) : * consider @xmath688 such that @xmath689 ( for some @xmath665 ) . as @xmath640 is a basis in @xmath690 we must have some circuit @xmath691 with @xmath692 for each @xmath693 therefore , in @xmath694 by lemma [ seriesextensionlemma2 ] , @xmath695 is a circuit .",
    "thus @xmath696 in other words , @xmath697 as @xmath698 @xmath699 moreover , @xmath700 where @xmath701 follows from the fact that any circuit containing @xmath646 in @xmath644 must also contain @xmath702 by lemma [ seriesextensionlemma2 ] .",
    "thus , by ( [ eqnno23 ] ) and ( [ eqnno24 ] ) , condition ( b2 ) is satisfied .",
    "* condition ( c ) : * let @xmath703 be an arbitrary error pattern with @xmath704 where @xmath705 corresponds to the basis vectors of the errors at @xmath706 the contraction @xmath707 then has the ground set @xmath708 by repeatedly using ( [ eqn303 ] ) , we see that this matroid is precisely the matroid obtained from @xmath638 by adding the elements @xmath705 in series with @xmath709 respectively . now to verify condition ( c )",
    ", we have to show that @xmath710 as @xmath711 and @xmath712 to show ( [ eqn100 ] ) , we consider the set @xmath713 where @xmath714 for each @xmath8 the set @xmath715 contains at least @xmath552 elements .",
    "thus , @xmath715 contains a basis of @xmath716 therefore , @xmath717 contains a basis of @xmath718 this means that @xmath717 contains a basis of @xmath638 also .",
    "this is seen by repeatedly using ( [ eqn201 ] ) , given the fact that @xmath717 contains a basis of @xmath718 moreover as @xmath719 again by repeatedly using ( [ eqn302 ] ) , we have @xmath720 where the final equalities in both ( [ eqn101 ] ) and ( [ eqn102 ] ) follow from the fact that @xmath717 has a basis of @xmath636 equations ( [ eqn101 ] ) and ( [ eqn102 ] ) together prove ( [ eqn100 ] ) , which proves that condition ( c ) also holds .",
    "thus we have verified all the conditions of definition [ matroidalerrornetworkdefinition ] .",
    "therefore the matroid @xmath644 is a candidate matroid for the initial matroidal error correcting network @xmath721 in the forthcoming steps , both the network @xmath31 and the matroid @xmath0 are together made to evolve so as to preserve the matroidal nature of @xmath31 in association with @xmath1   +   + _ * step 3 : extending the network * _   + let @xmath722 @xmath723 @xmath724 @xmath725 @xmath726 and @xmath727 let @xmath728 be the function defined as @xmath729    choose a random subset @xmath730 of size at least @xmath731 add a new coding node to @xmath732 having incoming edges from the forwarding nodes whose incoming edges correspond to those in @xmath733 add a new forwarding node , which has an incoming edge denoted as @xmath734 coming from the newly added coding node .",
    "+   + _ * step 4 : extending the matroid * _   + let @xmath735 be the closure operator in @xmath736 let @xmath349 be a modular cut which contains @xmath737 but does not contain @xmath738 if such a modular cut does not exist , the algorithm goes back to * _ step 3 _ * and proceeds with a different choice for @xmath733 if such a modular cut does not exist for any choice of @xmath739 then the algorithm ends without producing the appropriate output network .    let @xmath192 being the rank function in @xmath740 the single - element extension of @xmath741 corresponding to the modular cut @xmath742 then , in the matroid @xmath740 the set @xmath743 contains a circuit with @xmath744 , as @xmath745 by definition of a single - element extension .",
    "if @xmath746 is a representable extension , it has a representation of the form @xmath747 over some finite field such that the following hold .    *",
    "the submatrix @xmath748 is such that the matrix @xmath749 is also a representation for @xmath750 as @xmath751 * the vector @xmath16 is a column vector of size @xmath752 and can be obtained as a linear combination of the column vectors of @xmath748 corresponding to @xmath753 * moreover , the first @xmath82 components of @xmath16 are not all zero because @xmath754 as @xmath755    we now add element @xmath756 in series with element @xmath744 to get the matroid @xmath757 now the updates to the temporary variables are made as follows .    * @xmath758 * @xmath759 * @xmath760 * let @xmath732 be updated by adding the two new nodes ( coding node and forwarding node ) to the node set , and with @xmath761 thus the edge @xmath734 is now referred to as @xmath762    if @xmath746 is representable , then by lemma [ seriesrepresentation ] , so is @xmath763 , with the corresponding representation @xmath764 where the @xmath19s represent zero row and column vectors of the appropriate sizes .",
    "the column corresponding to the new element @xmath756 is then @xmath765 we also make the following update @xmath766     + _ * step 5 : updating the incoming edges at the sinks * _",
    "+ for each sink @xmath86 we update the set @xmath767 at most once as follows .",
    "* for some @xmath768 if there is some circuit @xmath769 such that @xmath770 then let @xmath771    the update is based on the rationale that if the flow on @xmath60 has been encoded into the flow in the newly added edge @xmath772 then in any sink which has @xmath60 as an incoming edge , the edge @xmath60 can be replaced by @xmath773 in the set of incoming edges .",
    "such an update is only the most natural one possible .",
    "it is possible to update the incoming edges at the sinks more interestingly , however requiring more computations ( such an optional update is described in * _ step 6 _ * of this algorithm ) .",
    "an example instance of the extended network ( from fig .",
    "[ fig : multicastinit ] ) , along with the updated incoming edges at the sinks is shown in fig .",
    "[ fig : multicastextended ] .     with @xmath774",
    "the newly added nodes and edges are indicated in blue and in bold .",
    "the unremoved incoming edges to the sinks are dimmed as they criss - cross with the newly added nodes and edges . ]",
    "+   + _ * step 6 : checking the conditions of definition [ matroidalerrornetworkdefinition ] * _   + the matroid @xmath741 along with function @xmath775 and basis @xmath776 satisfies the conditions ( a ) and ( b ) of definition [ matroidalerrornetworkdefinition ] with respect to the network @xmath732 for the following reasons .",
    "* condition ( a ) is satisfied because @xmath777 * condition ( b1 ) is satisfied because @xmath778 as @xmath779 * we know that @xmath741 is the series extension of the matroid @xmath780 at @xmath781 using this fact , and by applying lemma [ seriesextensionlemma2 ] ( with @xmath338 being the updated matroid @xmath741 , and with @xmath782 and @xmath783 ) , we have that any circuit containing @xmath744 in @xmath741 also contains @xmath756 .",
    "therefore , we have , @xmath784 where @xmath735 is the closure operator in @xmath736 thus it is seen that condition ( b2 ) is satisfied as @xmath785 and @xmath786    condition ( c ) of definition [ matroidalerrornetworkdefinition ] is not ensured by * _ step 4 _ * and therefore has to be checked independently .",
    "suppose @xmath741 is representable before extension , and we also wish to obtain a representable extension .",
    "this corresponds to a scalar linear network - error correcting code for @xmath732 . in other words ,",
    "the vector @xmath16 of ( [ eqn8 ] ) , which corresponds to a linear combination of the global encoding vectors from existing nodes , has to be designed such that the error correcting capability of the scalar linear network - error correcting code is maintained . using the techniques of @xcite , this can always be done as long as the field size is large enough ( discussed in section [ seccomplexity ] ) .",
    "once the vector @xmath16 is found , the matroid is also updated as the vector matroid of the matrix in ( [ eqn8 ] ) .",
    "thus , we can find a suitable extension of the initial matroid such that the updated @xmath741 is a representable matroid that maintains condition ( c ) .",
    "however , in this case the field size demanded by the algorithms in @xcite is in general quite high , and therefore the scalar linear network - error correcting code obtained operates over such a large field .    in general , @xmath741 need not be representable .",
    "therefore we simply check condition ( c ) by brute - force . if condition ( c ) does not hold",
    ", then the algorithm returns to _ * step 4 * _ to search for an extension of the matroid which satisfies all the conditions of definition [ matroidalerrornetworkdefinition ] .",
    "if condition ( c ) of definition [ matroidalerrornetworkdefinition ] holds for all sinks and for all error patterns on the incoming edges of the forwarding nodes , then all the concerned variables are updated as follows .",
    "* @xmath787 * _ optional update : _ optionally , for any sink @xmath86 the set @xmath617 can be updated as the set @xmath788 where @xmath789 is the smallest subset of @xmath790 such that upon fixing @xmath791 condition ( c ) is still satisfied .",
    "this involves further brute - force checking of condition ( c ) for each such subset of @xmath792 however , it can generate networks where there are no unnecessary incoming edges at any sink .",
    "the implementation of this optional update in our matlab program is illustrated in example [ multicastex ] of subsection [ sketchandillustrexamples ] in the transition between fig .",
    "[ fig : multicastconstructionexample2 ] and fig .",
    "[ fig : multicastconstructionexample3 ] , and also in example [ unicastncexample ] in section [ sec6 ] .",
    "* @xmath793 * @xmath794 * if @xmath741 is representable , let @xmath795 ( thus the matroid @xmath0 is again the vector matroid of the matrix of the form @xmath796 . )",
    "* @xmath797 * @xmath798 * @xmath799    if @xmath557 coding nodes have already been added , then the algorithm ends with the output of all the above variables .",
    "otherwise , the algorithm returns back to _ * step 3 * _ , to find a new extension to the graph and the matroid .",
    "note that as the network @xmath31 is maintained to be a matroidal @xmath98-error correcting network over the matroid @xmath0 at each addition of a coding node , the resultant network after the final extension is also a matroidal @xmath98-error correcting network in association with the matroid @xmath1 if @xmath175 is a representable matroid , then a scalar linear network - error correcting code is obtained according to the proof of theorem [ matroidalerrornetworkthm ] .",
    "we now present a similar algorithm as that of multicast for the construction of multiple - unicast network instances . as this algorithm follows the same pattern as that of the multicast algorithm",
    ", we only point out the differences between the two .",
    "+   + _ * step 1 : initializing the multiple - unicast network * _   + the network is initialized by creating @xmath82 source nodes ( each of which generate one message ) , and @xmath800 forwarding nodes corresponding to each source node , each with one incoming edge from the corresponding source .",
    "let these edges be @xmath801 let @xmath802 be the collection of @xmath82 sink nodes created .    for the sink @xmath803 which demands the message from source @xmath804 @xmath800 imaginary incoming edges are drawn from the forwarding nodes corresponding to that particular source .",
    "again , we abuse our notation and denote by @xmath805 the incoming edges of these forwarding nodes .",
    "this initialized network is represented in fig .",
    "[ fig : unicastinit ] .",
    "+   + _ * step 2 : initializing the matroid * _   + as before , we obtain a matroid @xmath0 such that the network @xmath31 is a matroidal @xmath98-error correcting network with respect to this matroid @xmath1 let @xmath2 be the @xmath806 matrix @xmath807 where @xmath808 and @xmath809 represent the all - ones and all - zeros row vectors of size @xmath800 over some finite field .",
    "let @xmath0 be the vector matroid of the following matrix , @xmath810 where the @xmath19s represent zero matrices of appropriate sizes .",
    "note that the above matrix is of the form @xmath796 with @xmath811    let @xmath812 be the basis of @xmath0 considered .",
    "let @xmath421 be the function defined as follows .",
    "@xmath813 then it can be seen that this matroid @xmath0 with the basis @xmath3 and function @xmath371 satisfy the conditions of definition [ matroidalerrornetworkdefinition ] , as each source is simply employing a repetition code of length @xmath800 .",
    "+   + _ * step 3*(extending the network ) _ and _ * step 4*(extending the matroid ) _ are the same as the multicast construction",
    ". therefore we proceed to _ * step 5*_.   +   + _ * step 5 : updating the incoming edges at the sinks * _",
    "+ in multiple - unicast ( or more generally , in the networks with arbitrary demands ) , there arises the issue of interference from other undesired source symbols with the desired symbols at any sink , thereby necessitating the presence of side information besides the sufficient error correction capability in order to decode correctly .",
    "therefore , unlike the multicast case , simply replacing the encoded edge with the newly formed edge will not suffice to update @xmath814 as the newly formed edge can include additional interference not present in the encoded edge .    the following procedure is therefore adopted to update the incoming edges at each of the sinks .    1 .",
    "this is the same as in multicast and done at most once for a sink .",
    "for some @xmath768 if there is some circuit @xmath815 such that @xmath816 then let @xmath817 if no such @xmath60 exists , there is no need to update @xmath767 and this entire step can be skipped .",
    "2 .   let @xmath60 be the element that is replaced in @xmath792 let @xmath818 such that the following conditions hold .",
    "* @xmath819 but @xmath820   + *   @xmath821 + this means that the flow in @xmath63 has been encoded as additional new interference into the flow in the newly added edge @xmath822 thus creating the necessity of additional side information at the sink @xmath94 to cancel out this interfering flow .",
    "we thus update @xmath767 as @xmath823 thus for each @xmath63 such that the above two conditions hold at sink @xmath86 @xmath63 is included in @xmath767 so that sufficient side information is available at the sink to decouple any newly introduced interference and decode the necessary information .",
    "this is also to be repeated at each sink .",
    "an example instance of an extension of the network of fig .",
    "[ fig : unicastinit ] , along with the updated incoming edges at the sinks is shown in fig .",
    "[ fig : unicastextended ] . as with the multicast algorithm , it is possible to update the sink incoming edges after condition ( c ) has been checked .",
    "thus such an update can be optionally included at the end of * _ step 6_*.    .",
    "the newly added nodes and edges are indicated in blue and in bold . ]",
    "+   + _ * step 6*(checking the conditions of definition [ matroidalerrornetworkdefinition ] ) _ is the same as that of the multicast construction , therefore we do nt elaborate further .",
    "the optional update to the incoming edges to the sinks can also be done in a similar fashion as in * _ step 6 _ * of the multicast construction .    as in the multicast construction , at each step the matroidal property of the network is preserved , thus the output of the algorithm is a matroidal @xmath98-error correcting network which unicasts the set of messages in the presence of at most @xmath98 network - errors .",
    "one of the major results of @xcite was that nonrepresentable matroids can be used to construct matroidal networks for which shannon - type information inequalities ( the most widely used collection of information inequalities in information theory ) can not bound their capacity as tightly as the non - shannon - type information inequalities do . in other words , networks connected with nonrepresentable matroids can prove to be very useful in obtaining insights on the general theory of network coding .",
    "it can therefore be expected that matroidal error correcting and detecting networks associated with nonrepresentable matroids will be useful in obtaining similar insights for network - error detection and correction .",
    "it was already mentioned in the beginning of section [ sec5 ] that it is not straightforward to obtain representable or nonrepresentable matroids from which we can construct matroidal network - error correcting or detecting networks directly .",
    "the difficulty is that , unlike @xcite , definitions [ matroidalerrornetworkdefinition ] and [ matroidalerrorcorrectionnetworkdefinition ] for matroidal error detecting and correcting networks require matroids whose contractions have to satisfy specific properties which enable the decoding of the demanded symbols at sinks .",
    "since this is a fundamental requirement of error detecting and correcting networks , it is clear that such a requirement can not avoided .",
    "this motivated the method used in our algorithms to construct such networks , i.e. , starting with simple matroids and their counterpart networks and then extending them together while keeping the conditions of error correction intact .",
    "the chief reasons for the inability of using our algorithms to obtain example networks which are associated with nonrepresentable matroids are as follows .",
    "* descriptions of nonrepresentable matroids with many elements in its groundset is not an easy task , even on a computing device .",
    "more importantly , computing the extensions ( in particular single - element extensions , which involve computation of the flats and the modular cuts ) of such nonrepresentable matroids with many elements is computationally intensive .",
    "furthermore , there are a large number of possible single - element extensions for any matroid with many elements in its groundset .",
    "checking the representability or nonrepresentability of such extensions is not easy . *",
    "evaluating the error correcting property of a given linear network - error correcting code involves going through all possible error patterns and checking if the error correction holds for each of them . to the best of the authors knowledge",
    ", such a brute - force technique is used in all available coherent linear network - error correction literature ( see @xcite , for example ) to construct linear network - error correction codes . thus checking condition ( c ) of definitions",
    "[ matroidalerrornetworkdefinition ] and [ matroidalerrorcorrectionnetworkdefinition ] demands brute - force analysis of all the contractions corresponding to all possible error patterns .",
    "compared to representable matroids , computing the contractions of nonrepresentable matroids is computationally intensive . *",
    "in @xcite , shannon and non - shannon information inequalities were used to capture the uniqueness of the _ vamos network _ obtained from the nonrepresentable vamos matroid ( see @xcite for more details ) . in our case , even if we suppose that a matroidal error detecting ( or correcting ) network associated on a nonrepresentable matroid is obtained through our algorithm , such an analysis seems rather complicated , again the issue being the number of possible error patterns .",
    "verifying that the best possible linear error correction schemes have rates of information transmission less than the best possible nonlinear schemes once again implies going through each of the error - patterns and evaluating the maximum possible rates of transmission .",
    "the number of these calculations grows linearly with the number of possible error - patterns and can quickly become unwieldy .    though we do not present examples of networks obtained using our algorithms which are associated with nonrepresentable matroids from our algorithms because of the above reasons , we present a proposition in this subsection as a first step towards reducing the search - space of matroidal extensions in order to obtain nonrepresentable matroids which satisfy the properties in definition [ matroidalerrornetworkdefinition ]",
    "also , in section [ secinsufficiency ] , using ideas from @xcite , we present an example network which is a matroidal 1-error detecting network associated with a nonrepresentable matroid , using which we show that linear network - error detection and correction schemes are not always sufficient to satisfy network demands in the presence of network - errors .",
    "proposition [ propprincipal ] below shows that if we are to use the constructions of section [ sec5 ] to obtain matroidal error correcting or detecting networks associated with nonrepresentable matroids , then the extension of the matroid considered in * _ step 4 _ * of the multicast and the multiple - unicast constructions must necessarily be a non - principal extension , i.e. , the modular cut corresponding to the extension must not be a principal modular cut .",
    "the proof of the following proposition is given for the sake of completeness as to the best of the authors knowledge it seems to be unavailable in matroid theory literature .",
    "[ propprincipal ] let @xmath2 be a matrix of size @xmath824 ( @xmath825 ) with elements from some field @xmath826 and let @xmath229.$ ] let @xmath827 be the principal modular cut of @xmath0 generated by flat @xmath361 of @xmath339 then the principal extension @xmath828 of the matroid @xmath0 is representable over an extension of @xmath829    let @xmath830 the submatrix of @xmath2 with respect the column indices given by @xmath363 let @xmath831 denote the space spanned by the columns of @xmath141 over @xmath829 let @xmath832 be the submatrices corresponding to all the flats @xmath833 of @xmath0 which do not contain @xmath363 thus for each @xmath834 there exists at least one non - zero vector @xmath835 such that @xmath836 but @xmath837    consider the extension field @xmath838 let @xmath99 be the primitive element of @xmath839 with respect to @xmath840 as the base field .",
    "thus any element of @xmath841 can be uniquely expressed as a polynomial of degree at most @xmath842 in @xmath125    let @xmath843 let @xmath844 be the matrix over @xmath841 where the elements of the submatrix @xmath2 are viewed as elements from the basefield @xmath845 embedded in @xmath846 we claim that @xmath847 is the required representation for the matroid extension @xmath848 let @xmath849 denote the vector space spanned by the columns of @xmath141 over @xmath846 according to definition [ singleelement ] , to show that @xmath847 is the required representation , it is enough to show that @xmath850 but @xmath851 for each @xmath852 as @xmath836 it is clear that @xmath853 also .",
    "thus @xmath854 now , for some @xmath192 such that @xmath855 consider a @xmath841 linear combination of the column vectors in @xmath856 as follows .",
    "@xmath857 where @xmath858 with @xmath859 as @xmath860 we must have that for any @xmath861 @xmath862 for the same reason , we must have @xmath863 for any @xmath864 and for any linear coefficients @xmath865    thus @xmath866 thus @xmath847 satisfies the conditions to be a representation for @xmath848 this proves the proposition .",
    "we now calculate upper bounds on the complexity of the algorithms for the case of scalar linear network - error correcting codes ( i.e. , representable matroids ) .",
    "these calculations are for the implementation of our algorithms without the execution of the optional update to the incoming edges to the sinks in * _ step 6_*. including this optional update step will certainly increase the complexity of the algorithms .",
    "however , the calculations that follow capture the essential running time of our algorithms in the representable case . in the case of nonrepresentable matroids ,",
    "the complexity of our algorithms will depend heavily on the matroidal operations involved to obtain the extensions , computing the contractions and checking the ranks of subsets in the computed contractions in order to verify the error correcting properties of the matroidal network so formed .",
    "as such matroidal operations are involved , it is not clear how to proceed in this direction .",
    "hence we take up on computing the complexity of our algorithms in generating networks associated only with representable matroids . in any case , constructing network associated with nonrepresentable matroids using our algorithm can be expected to be at least as difficult as the representable case , since in the representable case all the matroids have matrix representations and all matroid operations are implementable as operations based on linear algebra .    for obtaining the complexity of our multisource multicast algorithm , we shall directly use the complexity of the construction algorithm for single source multicast scalar linear network - error correcting codes given in @xcite .",
    "further , we shall also show that our multiple - unicast algorithm ( in the case of representable matroids ) is equivalent to a variant of the algorithm in @xcite and therefore the complexity of the algorithm of @xcite can be used to obtain that of our multiple - unicast algorithm also .",
    "algorithm [ alg : necc ] is a brief version of the algorithm given in @xcite for constructing an scalar linear @xmath98-network - error correcting code for a given single source , acyclic network that meets the network singleton bound given in @xcite .",
    "the construction of @xcite is based on the network code construction algorithm of @xcite .",
    "the algorithm constructs a network code such that all network - errors in upto @xmath113 edges will be corrected as long as the sinks know where the errors have occurred .",
    "such a network code is then shown @xcite to be equivalent to an @xmath98-network - error correcting code .",
    "other equivalent ( in terms of complexity ) network - error correction algorithms can be found in @xcite @xcite .    ' '' ''",
    "@xmath867 let @xmath868 be the set of all subsets of @xmath33 of size @xmath869 add an imaginary source @xmath870 and draw @xmath871 edges from @xmath870 to @xmath872    @xmath873    it is shown in @xcite that algorithm [ alg : necc ] results in a network code which is a @xmath98-network - error correcting code meeting the network singleton bound , as long as the field size @xmath874 the complexity of the algorithm is then @xmath875      we use the complexity of algorithm [ alg : necc ] to calculate the complexity of our multisource multicast algorithm .",
    "this requires converting the multisource multicast network to the single source multicast network , as algorithm [ alg : necc ] works only on a single source multicast network .",
    "this can be done after * _ step 1 _ * of the algorithm , where we can add a super - source to the network from which edges flow into the actual set of sources @xmath876 after * _ step 1 _ * , the network is clearly matroidal @xmath98-error correcting with respect to the direct sum of the uniform matroids . and",
    "thus the network after * _ step 1 _ * has a multicast scalar linear @xmath98-network - error correcting code if the direct sum is representable . constructing the @xmath557 nodes and their global encoding vectors while preserving the error correcting property , i.e. generating the network and appropriate matroid extensions ,",
    "can be done using algorithm [ alg : necc ] , once all the variables have been initialized and the super source has been added .",
    "we consider errors only at the incoming edges of the forwarding nodes , and there are at most @xmath877 such edges at any iteration of our algorithm .",
    "let @xmath878 if the field size of operation assumed is greater than @xmath879 , then by algorithm [ alg : necc ] , a suitable extension to the representable matroid ( i.e. , a suitable global encoding vector to the edge of the newly added incoming node ) exists at each iteration of our algorithm , and the total complexity of obtaining the network and the representable matroid ( equivalently , the linear network - error correcting code ) will be @xmath880 assuming that the other steps in the algorithm can be done in constant time or with negligible complexity compared to * step 4 * and * step 6*. with a smaller field size , the complexity of obtaining the network and the matroid will continue to be bounded similarly , provided the suitable vectors exist at all iterations . at the end of using algorithm [ alg : necc ] to obtain the coding nodes and the linear network - error correction code , the super - source and the outgoing edges from the super - source can be removed to give our required network .      unlike multicast , there exist no known algorithms to construct network - error correcting codes for multiple unicast networks which we can use to compute the complexity according to the requirements of our algorithm .",
    "therefore , we take an indirect approach . at each iteration in our multiple unicast algorithm ( omitting the optional update in * _ step 6 _ * ) , we show that the construction of a suitable global encoding vector ( for the current edge under processing ) for satisfying the multiple - unicast conditions is equivalent to the construction of a suitable global encoding vector such that certain matrices are full - rank as in step @xmath881 of algorithm [ alg : necc ] for each error pattern in @xmath868 .",
    "thus , the complexity of our multiple - unicast algorithm can be obtained from the complexity of algorithm [ alg : necc ] after suitable changes .",
    "let @xmath882 be the state of the multiple unicast network at the iteration @xmath665 ( @xmath883 representing the initial state and @xmath884 representing the final iteration ) of our multiple - unicast algorithm .",
    "that is , in the network @xmath885 @xmath886 coding nodes have already been added and the global encoding vectors corresponding to their incoming edges have been fixed .",
    "also , a particular subset of the forwarding nodes have been picked and the @xmath320 coding and the corresponding forwarding node have been added according to * step 3 * of the algorithm .",
    "we also update the incoming edges at the sinks according to * step 5 * even before fixing the global encoding vector of the newly added edge by simply adding edges containing all possible interfering flows as the new side information for the sinks .",
    "so the steps that remain to be executed are * step 4 * and * step 6 * , i.e. , picking a suitable global encoding vector for the newly added edge @xmath887 ( from the newly added coding node ) so that the error correction capability and decoding continue to hold at the sinks . after achieving this goal ,",
    "those edges which carry side information that are not used for the decoding process at the sinks can be removed .",
    "let @xmath888 be the number of incoming edges at sink @xmath94 and @xmath889 be the transfer matrix of size @xmath890 from the sources to sink @xmath94 at the end of iteration @xmath665 of our multiple - unicast algorithm ( i.e. , after fixing a suitable global encoding vector for @xmath887 ) . towards obtaining a bound on the complexity of our algorithm ,",
    "we first prove the following lemma .",
    "[ lemma4 ] for each sink @xmath94 in @xmath885 there exists some full rank square matrix @xmath891 of size @xmath888 such that @xmath892 where @xmath893 is the @xmath26 basis vector corresponding to the input @xmath894 demanded by sink @xmath94 and is repeated @xmath628 times in the above matrix .",
    "the claim holds for @xmath895 with @xmath896 being an empty matrix .",
    "we assume that the claim holds for @xmath882 and will prove that it holds for @xmath897 as well .",
    "because of the network code and the way the incoming edges at the sinks are updated , we have for some nonsingular square matrix @xmath498 of size @xmath898 @xmath899 where @xmath900 is a matrix with @xmath82 rows , consisting of the global encoding vectors of the newly added incoming edges ( at iteration @xmath901 ) with interfering flows .",
    "because the claim holds for @xmath885 we must have @xmath902 where the @xmath19s represent zero matrices of appropriate sizes , and @xmath903 is the identity matrix such that @xmath904    the matrix @xmath905 is invertible . let @xmath906 let @xmath907 @xmath908 by induction on @xmath665 ( @xmath909 ) the lemma is proved .",
    "let @xmath910 denote the matrix @xmath117 at the end of the @xmath320 iteration .",
    "let @xmath911 denote the submatrix of @xmath910 consisting of those rows of @xmath117 which are indexed by @xmath114 for some error vector @xmath96    the following lemma is now a direct consequence of lemma [ lemma4 ] and lemma [ lemmadecoding ] and will help us to connect our multiple - unicast algorithm to algorithm [ alg : necc ] .",
    "[ multipleunicastequivalence ] let @xmath912 be the matrix consisting of the first @xmath628 columns of @xmath913 the sink @xmath94 can successfully decode its demanded @xmath26 information symbol ( @xmath914 ) in @xmath882 if the square matrix @xmath915 is full - rank for each error vector @xmath90 such that @xmath916 the set of all possible error patterns .",
    "if the given matrix is full - rank for all possible errors , then we must have for any such error vector @xmath90 @xmath917 as @xmath918 and as @xmath919 has exactly @xmath628 non - zero rows .",
    "but then , this means @xmath920 where ( [ eqn103 ] ) is because of lemma [ lemma4 ] and ( [ eqn104 ] ) is because @xmath891 is full - rank . by lemma [ lemmadecoding",
    "] , this means that the demand @xmath914 can be successfully decoded by the sink @xmath69    lemma [ multipleunicastequivalence ] connects the problem of designing a multiple - unicast network - error correcting code for @xmath882 with maintaining the full - rankness of a set of matrices as in algorithm [ alg : necc ] .",
    "thus , algorithm [ alg : necc ] can be used to design a multiple - unicast network - error correcting code for @xmath882 by modifying step @xmath881 to fix the local encoding kernels at the new coding node such that the following condition is satisfied .    *",
    "the matrix @xmath921 is full - rank for each sink @xmath94 and for each error pattern @xmath916 at each iteration @xmath922    as in the multicast case , we have that the maximum number of edges at any particular iteration is less than @xmath923 with @xmath924 we invoke the result from @xcite to note that a suitable choice of the local encoding kernels is possible if @xmath925 the complexity of our multiple - unicast algorithm is @xmath926 again assuming that the other steps in the algorithm can be done in constant time or with negligible complexity compared to * step 4 * and * step 6*.",
    "in @xcite , it was shown that there exist networks for which linear network codes ( linearity in a very general sense ) are insufficient to achieve the maximum rate of information transmission to the sinks , when compared to general network coding ( including nonlinear schemes ) . in other words ,",
    "the _ network coding capacity _ of a network could be strictly greater than the _ linear network coding capacity _ of the network .",
    "a network for which linear network coding can not achieve network coding capacity was explicitly constructed in @xcite .",
    "the network in @xcite was constructed by ` conjoining ' two subnetworks , of which one is linearly solvable over fields of characteristic two , and the other is linearly solvable over fields of odd characteristic .",
    "the two subnetworks were constructed based on results from matroid theory , in particular the fano and the non - fano matroids @xcite .",
    "the matrix @xmath2 shown below considered over any field of characteristic two ( for example , @xmath352 ) is a representation for the fano matroid . @xmath927",
    "the matrix @xmath2 is also a representation for the non - fano matroid except that it is over a field with characteristic not equal to two ( for example , @xmath359 ) . combining the two subnetworks ,",
    "the conjoined network is shown to be linearly unsolvable .",
    "we refer the reader to @xcite for more details .",
    "because of the fact that network coding is a special case of network - error correction ( or equivalently network - error detection ) , it is to be expected that linear network - error correcting ( detecting ) codes must be insufficient for solving network - error correction ( detection ) problems on general networks . in subsection [ insuffnetwork ] , we present an explicit example network for which linear network - error detection ( for the case of single edge errors ) is not sufficient , using simple extensions of the networks shown in @xcite .",
    "the reason for choosing such simple extensions is two fold .",
    "firstly , the networks chosen are sufficient to prove the insufficiency claim .",
    "the second reason , as the verification of the linear nonsolvability of the chosen networks will make it clear , is that rigorously proving that linear network - error correcting codes are not sufficient for a particular network can require many times the computations necessary for showing linear network coding is insufficient .",
    "choosing extensions of the networks shown in @xcite to demonstrate the insufficiency of linear network coding makes our job easier .",
    "for these two reasons , we work with the chosen networks which are simple extensions of those from @xcite . nevertheless , it is certainly possible to construct more complicated networks for which linear network - error correction and detection are insufficient .    in the following subsections ,",
    "we construct the network for which linear network - error detection is insufficient , while a nonlinear scheme is shown to provide the required error detection .",
    "we combine simple extensions of the networks shown in @xcite to create the network that we are looking for .",
    "consider the network @xmath928 shown in fig .",
    "[ fig : subnet1 ] .     which is solvable only over fields of characteristic two .",
    "it is a matroidal @xmath445-error detecting network associated with the matroid @xmath929 whose representation is shown in ( [ representationn1]).,width=326 ]    the nodes @xmath930 @xmath931 and @xmath932 generate the messages @xmath933 @xmath934 and @xmath935 ( over some finite field ) respectively .",
    "the sinks @xmath936 @xmath937 and @xmath938 demand the symbols @xmath939 @xmath940 and @xmath941 respectively . some of the edges in the network are marked by the values @xmath942 which are coefficients of some arbitrary scalar linear network code for the network .",
    "any edge which is not marked by a coefficient is assumed to have the identity element as its coefficient , meaning it just forwards the information from its tail node to the head node .",
    "it can be easily seen that these @xmath942s are sufficient to characterise any scalar linear network code for @xmath943 each of the sinks have a direct edge from the corresponding node generating their demands , indicated by a duplicate node along with the edges @xmath585 @xmath596 and @xmath944 .",
    "the network @xmath945 from @xcite is simply the network obtained from @xmath928 by the deletion of the edges @xmath946 and @xmath947 thus @xmath928 is a simple extension of the network @xmath945 from @xcite .",
    "we now prove the following lemma .",
    "[ lemmanetworkn1 ] a single edge network - error detection code over a finite field exists for @xmath928 if and only if the finite field used has characteristic two .    _ only if part : _",
    "let the network coding coefficients @xmath942s define a single edge network - error detecting code over some field @xmath7 note that there are exactly two paths from any source to the corresponding sink , one through the network coded portion of the network and the other through the direct edges @xmath946 and @xmath947 therefore it is clear that for detecting single - edge errors , we require @xmath948 to be nonzero .",
    "thus , we see that the sinks @xmath949 and @xmath938 can decode the required symbols by observing the symbols on the direct edges @xmath950 and @xmath595 from @xmath951 and @xmath952 respectively , as long as these edges are not in error .    in order to show that the characteristic of the field used should be two for the network code defined using @xmath942s to be a single edge network - error detecting code",
    ", we consider the single edge errors at the edges @xmath953 and @xmath947    consider that the only error in the network occurs in edge @xmath947 then the matrix @xmath954 corresponding to @xmath955 at the sink @xmath956 is @xmath957 where the ordering of the columns adopted in the above matrix corresponds to the incoming edges at the sink given as follows .",
    "@xmath958 by lemma [ lemmadecoding ] , for some @xmath959 and @xmath960 belonging to the finite field , we must have @xmath961 thus we must have @xmath962 let @xmath963 , and @xmath964 then we have @xmath965    the transfer matrix corresponding to error at @xmath596 at the sink @xmath966 ( @xmath967 ) is @xmath968 as before , by lemma [ lemmadecoding ] , for some finite field coefficients @xmath969 and @xmath970 we must have @xmath971 letting @xmath972 and @xmath973 we have @xmath974 the transfer matrix corresponding to error at @xmath595 at the sink @xmath975 ( @xmath976 ) is @xmath977 again , by lemma [ lemmadecoding ] , for some finite field coefficients @xmath978 we must have @xmath979 letting @xmath980 and @xmath981 we have @xmath982 equations similar to ( [ eqnno1])-([eqnno9 ] ) were derived in @xcite for the network @xmath983 mimicking the arguments in @xcite , we now show that the characteristic of the finite field used must be two . from ( [ eqnno3 ] ) and ( [ eqnno7 ] )",
    ", we must have that the matrices @xmath984 and @xmath985 are all invertible . by ( [ eqnno2 ] )",
    ", we must then have @xmath986 thus by ( [ eqnno5 ] ) , we must have @xmath987 and therefore @xmath988 and @xmath989 are invertible . by ( [ eqnno4 ] ) , @xmath990 and thus @xmath991 and @xmath992 are invertible .",
    "furthermore , @xmath993 by ( [ eqnno8 ] ) , and @xmath994 by ( [ eqnno1 ] ) .",
    "thus @xmath995 and @xmath996 are invertible .",
    "as @xmath997 by ( [ eqnno9 ] ) , the matrix @xmath998 is invertible too .",
    "thus all the matrices in the equations ( [ eqnno1])-([eqnno9 ] ) are invertible .    from ( [ eqnno4 ] )",
    ", we have @xmath999 where the last equality follows from ( [ eqnno10 ] ) .    thus we have @xmath1000 from ( [ eqnno6 ] ) , we have @xmath1001 where the last equality follows from ( [ eqnno9 ] ) .",
    "now , using ( [ eqnno2 ] ) and ( [ eqnno8 ] ) , we have @xmath1002 where the last equality follows from ( [ eqnno10 ] ) .",
    "thus we must have @xmath1003 thus , from ( [ eqnno11 ] ) and ( [ eqnno12 ] ) , we see that we require @xmath1004 this is true only in a field of characteristic two .",
    "_ if part : _    it is easy to verify that using @xmath1005 ( for any @xmath222 ) for all @xmath665 results in a single edge network - error detecting code for @xmath943    in the case of a network code with all @xmath1006 we now argue that the network @xmath928 is a matroidal @xmath445-error detecting network with respect to the vector matroid @xmath929 of the matrix over @xmath1007 shown below .",
    "@xmath1008 let the function with respect to which the matroid @xmath929 is associated be @xmath1009 the function @xmath1010 maps the input symbols ( @xmath1011 ) and the edges of @xmath928 to the elements of the groundset @xmath1012 the labeling on the columns ( i.e. , the mapping given by @xmath1010 ) of the matrix given in ( [ representationn1 ] ) is as follows .",
    "the first three columns correspond to the inputs @xmath1013 .",
    "the next seven columns constitute the basis elements of the errors at @xmath1014 as shown in fig .",
    "[ fig : subnet1 ] .",
    "the last seven columns correspond to the linear combination of the input symbols and the errors flowing on these edges .",
    "though there are a total of @xmath1015 edges in @xmath1016 these seven edges are sufficient to characterise the matroid associated with the single edge network - error detecting code on @xmath943 it is easy to verify that the function @xmath1010 and the matroid @xmath1017 satisfy all the requirements of definition [ matroidalerrornetworkdefinition ] for a single edge network - error detecting code .",
    "we list the elements of the ground set of @xmath929 in the ordering of the columns shown in ( [ representationn1 ] ) as follows .",
    "@xmath1018 finally , we have the following lemma which follows from lemma [ lemmanetworkn1 ] and the discussion above .",
    "[ n1representation ] the network @xmath928 is a matroidal 1-error detecting network associated with a @xmath352-representable matroid .",
    "consider the network @xmath1019 shown in fig .",
    "[ fig : subnet2 ] .",
    "the network has five sources @xmath1020 and @xmath1021 generating the information symbols @xmath1022 and @xmath41 respectively .",
    "there are seven sinks @xmath1023 and @xmath1024 demanding the symbols @xmath1025 and @xmath935 respectively .",
    "the network @xmath1026 of @xcite is the subnetwork of @xmath1019 consisting of all nodes and edges except the direct edges from @xmath1027 and @xmath1028 to the sinks .",
    "we seek the conditions to be satisfied by the finite field over which a single edge network - error detection code can be designed for @xmath1029    again , it is easy to verify that assuming all @xmath445s from a finite field with characteristic not equal to two as the network coding coefficients of @xmath1019 results in a single edge network - error detection code . the network @xmath1019 is then a matroidal @xmath445-error detecting network associated with the matroid @xmath1030 whose representation ( over any field with characteristic not equal to two ) is shown in ( [ representationn2 ] ) at the top of the next page .",
    "@xmath1031    ' '' ''    the corresponding function @xmath1032 is given as @xmath1033 where @xmath1034 is the collection of the input symbols . as with @xmath1016 not all the edges of @xmath1019 are considered in the representation of @xmath1035 the columns of the matrix shown in ( [ representationn2 ] ) ( and therefore the mappings of the function @xmath1032 ) are indexed as follows .",
    "the first five columns correspond to the five input symbols .",
    "the next @xmath1036 columns correspond to the error basis elements at the edges @xmath1037 as shown in fig .",
    "[ fig : subnet2 ] .",
    "the final @xmath1036 columns correspond to the linear combination of the inputs and error symbols flowing at these @xmath1036 edges .",
    "we list the elements of the ground set of @xmath1030 in the ordering of the columns shown in ( [ representationn2 ] ) as follows . @xmath1038 as with @xmath1016 it can be seen that in the absence of errors in the additional direct edges to the sinks ( those not in @xmath1026 ) , the sinks of @xmath1019 can straight away decode their required demands . assuming single edge network - errors on these additional edges and using arguments equivalent to those in @xcite ( as was done in the proof of lemma [ lemmanetworkn1 ] )",
    ", we have the following lemma , which we state without proof .    [ lemmanetworkn2 ] the network @xmath1019 has a single edge network - error detecting code if and only if the finite field used has characteristic not equal to two .",
    "the following lemma follows directly from lemma [ lemmanetworkn2 ] and the preceding discussion .",
    "[ n2representation ] the network @xmath1019 is a matroidal 1-error detecting network associated with a @xmath359-representable matroid .        ' '' ''",
    "it can be seen from the proof of lemma [ lemmanetworkn1 ] that particular error patterns were considered in order to verify whether the linear network code defined over a particular alphabet satisfies the required network - error detection ( correction ) properties .",
    "given an arbitrary network , it may be necessary to consider all possible error patterns , i.e. , @xmath1039 of them to verify the @xmath99 network - error detection capability .",
    "this is why proving insufficiency of linear network coding for network - error correction or detection could be computationally much harder than proving insufficiency of linear network codes for network coding with no errors .           +    ' '' ''",
    "we now present the network @xmath1040 shown in fig .",
    "[ fig : nonlinearnet ] for which linear network coding is insufficient to achieve the sinks demands in the presence of network - errors .",
    "the network @xmath1040 is a conjoining of the network @xmath928 and @xmath1019 with the exception of a few additional dummy edges .",
    "thus , we assume @xmath1041 we ignore the dummy edges for the sake of the clarity .",
    "the network @xmath1042 shown in @xcite is equivalent to @xmath1040 except for the direct edges to the sinks from the corresponding sources . because of lemmas [ lemmanetworkn1 ] and lemma [ lemmanetworkn2 ]",
    ", the network @xmath1040 does not have a linear single edge network - error detecting code over any field .",
    "however , there is a nonlinear single edge network - error detecting code over an alphabet @xmath411 of size @xmath1043 , the corresponding edge functions of which are shown along the edges of @xmath1040 in fig .",
    "[ fig : nonlinearnet ] . except for the additional direct edges from the sources to the corresponding sinks , the network coding functions on @xmath1040 are adopted from the network code for @xmath1042 in @xcite .",
    "all the missing edge functions are considered to be identity .",
    "the symbols @xmath1044 and @xmath1045 indicate the addition and subtraction in the ring @xmath1046 while the symbols @xmath1047 indicates the bitwise xor operation in @xmath1048 in other words , for any two elements @xmath1049 , the element @xmath1050 and @xmath1051 indicate the sum of @xmath941 and @xmath934 and the difference between @xmath941 and @xmath934 viewing them as elements from @xmath1052 the element @xmath1053 indicates the bitwise xor between @xmath941 and @xmath934 viewing them as elements from @xmath1048 for some @xmath1054 @xmath1055 is the element of @xmath78 obtained by switching the components of @xmath941 considered as element of @xmath1048 the nonlinearity of the network - error correction code comes from the nonlinearity of the function @xmath86 and because @xmath1047 is linear in @xmath1056 but nonlinear in @xmath1046 while @xmath1044 and @xmath1045 are linear in @xmath1057 but nonlinear in @xmath1048 using the arguments developed in @xcite , it is straightforward to show that these coding functions define a single edge network - error detection code for @xmath1058    we can now ask the question - _ is the network @xmath1040 a matroidal 1-error detecting network ? _ if the answer is yes , then it would mean that our definition of a matroidal error detecting network ( definition [ matroidalerrornetworkdefinition ] ) has a wider scope and is not limited to linear network - error detection and representable matroids . also , an equivalent question can be raised about the network @xmath1042 shown in @xcite - _ is the network @xmath1042 a matroidal network ? _ this second question is left unanswered in both @xcite ( where the insufficiency results for linear network coding in @xmath1042 was first presented ) and in @xcite ( where the matroidal connections to the construction of @xmath945 and @xmath1026 were discussed ) .",
    "we answer these questions in the affirmative . in the rest of this subsection",
    ", we obtain a matroid @xmath1059 associated with which the network @xmath1040 is a matroidal 1-error detecting network . that the network @xmath1042 of @xcite is matroidal follows easily .",
    "we first prove the following lemma .",
    "[ conditionsn3matroidal ] let @xmath1060 be the groundset of a matroid @xmath1061 if the matroid @xmath1059 satisfies the following two conditions @xmath1062 then the network @xmath1040 is matroidal 1-error detecting associated with @xmath1061    let @xmath1063 clearly , @xmath1064 let @xmath1065 be a function such that @xmath1066 where @xmath1010 and @xmath1032 are defined as in ( [ f1 ] ) and ( [ f2 ] ) respectively . since @xmath1040 is a conjoining of the networks @xmath1067 and @xmath1068 i.e. as @xmath1069 it is clear that the function @xmath1070 is well defined .",
    "now , since the networks @xmath928 and @xmath1019 are already matroidal 1-error detecting networks associated to @xmath929 ( with respect to @xmath1010 ) and @xmath1030 ( with respect to @xmath1032 ) respectively , by the definition of @xmath1070 it follows that @xmath1040 is a matroidal 1-error detecting network associated with @xmath1040 with respect to @xmath1071    in order to show that @xmath1040 is matroidal 1-error detecting , we have to demonstrate a matroid which satisfies the conditions in lemma [ conditionsn3matroidal ] . in the rest of this subsection , we show that such a matroid can be obtained .",
    "we use definition [ matroiddefnrank ] of a matroid based on its rank function to obtain our matroid @xmath1061    let @xmath1072 be a function defined as @xmath1073 where @xmath1074 and @xmath1075 the functions @xmath1076 and @xmath1077 are the rank functions of the matroids @xmath929 and @xmath1030 respectively . clearly the function @xmath192 is well defined . also , as @xmath1078 we must have @xmath1079 also , for any @xmath1080 we note that @xmath1081 now , suppose there is a matroid with the above function @xmath192 as its rank function .",
    "then it can be seen that from the definition of the function @xmath192 that such a matroid satisfies the requirements of lemma [ conditionsn3matroidal ] .",
    "this is because for any @xmath1082 and for any @xmath1083 thus the network @xmath1040 would be a matroidal @xmath445-error detecting network associated with such a matroid .",
    "we now prove the following lemma which shows that the function @xmath192 defines a matroid .",
    "[ functionrmatroid ] the function @xmath192 is the rank function of a matroid .",
    "we have to show that the function @xmath192 satisfies the properties * r1 * , * r2 * , and * r3 * of definition [ matroiddefnrank ] .",
    "we first consider the condition * r1*. we have by the definition of @xmath1084 for @xmath1080 @xmath1073 where @xmath1074 and @xmath1085 because @xmath1076 and @xmath1077 are rank functions and by ( [ simplifyeqn ] ) , we must have @xmath1086 we have already seen that @xmath1087 along with ( [ no9eqn ] ) , this means that the function @xmath192 satisfies * r1*. now we prove that * r2 * holds .",
    "let @xmath1088 then @xmath1089 similarly , @xmath1090 and @xmath1091    let @xmath1092 be a subset of @xmath167 of the largest size which is independent in @xmath929 .",
    "similarly let @xmath1093 be some maximal independent subsets in the appropriate matroids . because @xmath1094 we can always find @xmath1095 such that @xmath1096 by repeated application of * i3 * in definition [ matroiddefnindp ] .",
    "similarly , we assume @xmath1097 and @xmath1098    by the definition of @xmath1084 we have @xmath1099 as in ( [ no2eqn ] ) , we have @xmath1100 we also have the following equations .",
    "@xmath1101 ) and ( [ no4eqn ] ) , we have @xmath1102 comparing ( [ no2eqn ] ) and ( [ no5eqn ] ) , we have @xmath196 hence *",
    "r2 * holds .",
    "finally , we prove the condition * r3 * also holds .",
    "let @xmath1103 by the definition of @xmath192 and ( [ simplifyeqn ] ) , we have @xmath1104 also , we have @xmath1105 where the last inequality follows from the fact that @xmath1076 and @xmath1077 are rank functions .    from ( [ no6eqn ] ) and ( [ no7eqn ] ) ,",
    "to show that @xmath1106 we must prove @xmath1107 ) holds with equality by the law of unions of sets , and thus the condition * r3 * holds for the function @xmath192 .",
    "thus from lemma [ functionrmatroid ] , the function @xmath192 defines a matroid .",
    "let this matroid be the candidate matroid @xmath1059 as in lemma [ conditionsn3matroidal ] .",
    "note that @xmath1059 satisfies the conditions of lemma [ conditionsn3matroidal ] , as explained in the discussion preceding lemma [ functionrmatroid ] .",
    "thus , if @xmath1059 is representable over some field @xmath83 then the matroids @xmath929 and @xmath1030 must also be @xmath10-representable , as restrictions of @xmath10-representable matroids are @xmath10-representable . however , the matroids @xmath929 and @xmath1030 can never have representations over the same field because of lemma [ lemmanetworkn1 ] and lemma [ lemmanetworkn2 ] .",
    "thus @xmath1059 is nonrepresentable .",
    "we thus have the following lemma .",
    "[ n3representation ] the network @xmath1040 is a matroidal 1-error detecting network associated with the nonrepresentable matroid @xmath1061    thus definition [ matroidalerrornetworkdefinition ] applies to error detecting networks associated with nonrepresentable matroids also .",
    "a similar argument can be given for definition [ matroidalerrorcorrectionnetworkdefinition ] also .",
    "[ amalgam ] a matroid @xmath175 on the groundset @xmath1108 is said to be an _",
    "amalgam _ of the matroids @xmath1109 and @xmath1110 ( the reader is referred to @xcite for more details ) .",
    "thus the matroid @xmath1059 is an amalgam of @xmath929 and @xmath1035    by lemma [ n3representation ] and because of the connection between the network @xmath1040 and the network @xmath1042 shown in @xcite , it is easy to prove that @xmath1042 is a matroidal network associated with a nonrepresentable matroid , one which is constructed as an amalgam of the matroids @xmath1111 and @xmath1112 we leave the details of this proof to the reader .",
    "in this section , we present some examples of networks with scalar linear network codes and network - error correcting codes to illustrate our construction algorithms . each example shown in this section",
    "is obtained by running an instance of the corresponding algorithm fixing the number of sources ( @xmath550 ) , number of messages ( @xmath82 ) , number of correctable errors ( @xmath98 ) , number of coding nodes to be added ( @xmath557 ) , number of sinks @xmath558 ( necessary for multicast ) and the finite field used .",
    "furthermore , for ease of computation , we also fix the number of edges whose symbols are to be encoded at any iteration in the construction algorithm to the new coding node , i.e. , @xmath1113 is fixed .",
    "these examples are obtained by randomly picking existing forwarding nodes at any iteration in the algorithm to combine their information flows , and then checking if the resultant network code ( or the equivalent matroid ) satisfies the necessary properties .",
    "the matlab codes that generate these examples will be provided by the authors on request .",
    "all the figures and the corresponding matroid representations ( or network coding coefficients ) are shown at the end of the manuscript .",
    "[ fig : bigmulticastexm ] shows a single source multicast network with a scalar linear @xmath572-error correcting network code and @xmath1114 .",
    "table [ tab1 ] shows all the relevant parameters using which the algorithm designs the network and the linear network coding coefficients obtained as outputs of the algorithm .",
    "the global encoding vectors of the @xmath616 outgoing edges from the source in the network correspond to the columns of a generator matrix of an mds code with minimum distance @xmath1115 and length @xmath1116 the values in the last column of table [ tab1 ] represent the particular linear combination using which the information flows from the existing forwarding nodes ( specified by the first column in table [ tab1 ] ) are combined at the new coding node formed ( the corresponding forwarding node is given by the second column of table [ tab1 ] ) .",
    "these linear encoding coefficients are represented by the decimal equivalents of the polynomial representations of the respective finite field elements . also in fig .",
    "[ fig : bigmulticastexm ] , the direct links from the source to the sinks are indicated by incoming edges from the corresponding duplicate nodes ( which are unconnected to the rest of the network ) .",
    "this example also illustrates the ability of our multicast algorithm to construct scalar linear network - error correcting codes for multicast networks over smaller fields when compared with existing algorithms in @xcite . to see this ,",
    "suppose that the network shown in fig .",
    "[ fig : bigmulticastexm ] was given as the input network to the algorithms in @xcite in order to design a multicast @xmath572-network - error correcting code .",
    "these algorithms require a field size @xmath1117 such that @xmath1118 to design a multicast linear network - error correcting code that can correct any @xmath572 network - errors in the given network .",
    "thus only if @xmath1119 the algorithms in @xcite guarantee the construction of a suitable network - error correcting code for our final network .",
    "however , our algorithm obtains a network - error correcting code for this network over @xmath1120 because it designs the network and the associated matroids together and representations of these associated matroids can be given over @xmath1120 .",
    "the topology of the network is controlled by our algorithm .",
    "this is in contrast with the algorithms in @xcite , which take a given network as the input and design the network - error correcting code for that network .",
    "the field size demands of @xcite are less dependent on the actual topology of the network and depend more on its size .",
    "[ unicastncexample ] fig .",
    "[ fig : unicastncnetwork0]-[fig : unicastncnetwork5 ] show the stages of the network evolution of a multiple - unicast network with parameters @xmath1121 ( no error correction ) and @xmath1122 . the direct links from the different sources to the sinks",
    "are indicated by incoming edges from the corresponding duplicate nodes .",
    "every sink demands the information symbol generated by the corresponding source .",
    "the representative matrices of the corresponding matroids are shown in ( [ eqnstage0unicastnc])-([eqnstage3unicastnc ] ) in fig .",
    "[ fig : unicastnceqns ] .",
    "every network is a matroidal @xmath1123-error correcting network with the corresponding matroid and function @xmath462 as defined in example [ multicastex ] .",
    "note the reduction in the number of incoming edges at sink @xmath1124 from three in fig .",
    "[ fig : unicastncnetwork4 ] to two in fig .",
    "[ fig : unicastncnetwork5 ] .",
    "this is a result of using the optional update in * _ step 6 _ * of our multiple - unicast algorithm .",
    "the transfer matrix from the sources to sink @xmath1124 at the end of the final iteration is @xmath1125 where the matrix is over @xmath561 ( with modulo polynomial @xmath1126 ) , with the entries being the decimal equivalents of the polynomial representations of elements from @xmath1127 the demanded symbol at @xmath1124 is generated by @xmath1128 and corresponds to the second row above .",
    "the interference from source @xmath1129 , corresponding to the third row , is seen to be a scaled version of the interference from @xmath563 , corresponding to the first row .",
    "thus in this case , our multiple - unicast algorithm generates a network for which the interference is aligned by the network rather than canceled .",
    "however , the sink itself is enabled to cancel the interference .",
    "it is easily seen that a linear combination of the two columns of @xmath1130 generates the basis vector @xmath1131 enabling the sink @xmath1124 to decode the demanded information symbol generated by source @xmath1132    fig .",
    "[ fig : bigmultipleunicastexm ] shows a multiple - unicast network with a @xmath1133-error correcting code , with all relevant parameters of which are shown in table [ tab2 ] .",
    "the @xmath320 sink demands the information symbol generated by the @xmath320 source .",
    "each source employs a repetition code of length @xmath1134 on its outgoing edges . as in table [ tab1 ] , the values in the last column of table [ tab2 ] represent the decimal equivalents of the field elements in their polynomial representation .",
    "the direct links from the different sources to the sinks are indicated by incoming edges from the corresponding duplicate nodes .",
    "the matroidal connections to network - error correction and detection have been analysed in this paper .",
    "it was shown that networks with scalar linear network - error correcting and detecting codes correspond to representable matroids with certain special properties .",
    "we also presented algorithms which can construct matroidal error correcting networks .",
    "the same algorithms can also be used to construct matroidal error detecting networks . by restricting ourselves to the class of representable matroids ,",
    "we can therefore obtain a large number of networks with scalar linear network - error correcting and detecting codes , some of which were presented as examples . further restricting ourselves to the matroids which are representable over particular fields",
    ", we can obtain networks which have scalar linear network - error correcting codes over those particular fields .",
    "this may facilitate some intuition towards finding the minimum field size requirement for scalar linear network - error correcting codes to exist , which is known to be a hard problem .",
    "also , running our algorithms along with the optional update of sink incoming edges in * _ step 6 _ * may provide insight on the solvability and capacity of general multisource multicast and multiple - unicast networks in the presence of errors .",
    "in particular , the multiple - unicast algorithm can then be used to generate multiple - unicast networks where interference from other sources is not always canceled by the network nodes , as shown by example [ unicastncexample ] .",
    "following techniques similar to @xcite , it was also shown that linear network codes prove are not always sufficient to provide the demanded error correction .    it is known @xcite that characterising all possible modular cuts of a matroid , and therefore all possible extensions of a matroid is in general a difficult task .",
    "moreover , we require extensions which satisfy certain constraints for the resultant network to be matroidal , and have to satisfy even more constraints if they have to be associated with representable matroids .",
    "characterising such extensions could be a particularly rewarding exercise .",
    "as a first step towards characterising such extensions and also towards obtaining matroidal error correcting networks associated with nonrepresentable matroids , we proved proposition [ propprincipal ] regarding the principal extensions of a representable matroid .",
    "it can be expected that deeper theoretical insights on the theory of network coding and error correction can be gained with more powerful machinery from matroid theory .",
    "s. jaggi , p. sanders , p.a .",
    "chou , m. effros , s. egner , k. jain and l.m.g.m .",
    "tolhuizen , `` polynomial time algorithms for multicast network code construction '' , ieee trans .",
    "theory , vol .",
    "6 , june 2005 , pp .",
    "1973 - 1982 .",
    "a. kim and m. medard , `` scalar - linear solvability of matroidal networks associated with representable matroids '' , international symposium on turbo codes and iterative information processing ( istc ) , sep .",
    "6 - 10 , 2010 , pp .",
    "452 - 456 .",
    "s. yang , r. w.yeung , c. k. ngai , `` refined coding bounds and code constructions for coherent network error correction '' , ieee transactions on information theory , vol .",
    "2011 , pp .",
    "1409 - 1424 .",
    "s. vyetrenko , t. ho , m. effros , j. kliewer , e. erez , `` rate regions for coherent and noncoherent multisource network error correction '' , proceedings of isit 2009 , seoul , korea , june 28 - july 3 , pp .",
    "1001 - 1005 .",
    "o. kosut , l. tong , d. tse , `` nonlinear network coding is necessary to combat general byzantine attacks '' , proceedings of the forty - seventh annual allerton conference , illinois , usa , sep . 30 - oct.2 , pp .",
    "593 - 599 ."
  ],
  "abstract_text": [
    "<S> matroidal networks were introduced by dougherty et al . and have been well studied in the recent past . </S>",
    "<S> it was shown that a network has a scalar linear network coding solution if and only if it is matroidal associated with a representable matroid . </S>",
    "<S> a particularly interesting feature of this development is the ability to construct ( scalar and vector ) linearly solvable networks using certain classes of matroids . </S>",
    "<S> furthermore , it was shown through the connection between network coding and matroid theory that linear network coding is not always sufficient for general network coding scenarios . the current work attempts to establish a connection between matroid theory and network - error correcting and detecting codes . in a similar vein to the theory connecting matroids and network coding , we abstract the essential aspects of network - error detecting codes to arrive at the definition of a _ matroidal error detecting network _ </S>",
    "<S> ( and similarly , a _ matroidal error correcting network _ abstracting from network - error correcting codes ) . an acyclic network ( with arbitrary sink demands ) is then shown to possess a scalar linear error detecting ( correcting ) network code if and only if it is a matroidal error detecting ( correcting ) network associated with a representable matroid . therefore </S>",
    "<S> , constructing such network - error correcting and detecting codes implies the construction of certain representable matroids that satisfy some special conditions , and vice versa . </S>",
    "<S> we then present algorithms which enable the construction of matroidal error detecting and correcting networks with a specified capability of network - error correction . using these construction algorithms , a large class of hitherto unknown scalar linearly solvable networks with multisource multicast and multiple - unicast network - error correcting codes </S>",
    "<S> is made available for theoretical use and practical implementation , with parameters such as number of information symbols , number of sinks , number of coding nodes , error correcting capability , etc . </S>",
    "<S> being arbitrary but for computing power ( for the execution of the algorithms ) . </S>",
    "<S> the complexity of the construction of these networks is shown to be comparable to the complexity of existing algorithms that design multicast scalar linear network - error correcting codes . </S>",
    "<S> finally we also show that linear network coding is not sufficient for the general network - error correction ( detection ) problem with arbitrary demands . in particular , for the same number of network - errors , we show a network for which there is a nonlinear network - error detecting code satisfying the demands at the sinks , while there are no linear network - error detecting codes that do the same . </S>"
  ]
}
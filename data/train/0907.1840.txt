{
  "article_text": [
    "microarray data analysis is a fundamental task in studying genes . indeed ,",
    "microarray experiments provide measures of gene expression levels under certain experimental conditions , showing that groups of genes have a similar behavior under certain conditions .",
    "however , even slightly different experimental conditions may result in significantly different expression data .",
    "these gene expression patterns are useful to understand the relations among genes and could provide information useful for the construction of genetic networks . nowadays",
    "the use of microarrays has become widespread and sufficiently cheap to justify running a large battery of experiments under similar , albeit not identical , conditions .",
    "the integration of the results is therefore the final computational step needed to obtain a meaningful interpretation of the data .    in @xcite",
    "a clustering approach to the integration of different experimental microarray experimental data was introduced . in the proposed approach ,",
    "called consensus clustering , the genes are represented by elements of a universe set .",
    "the experimental data under certain experimental condition , are represented as a partition of the universe set , where a set represents elements ( genes ) that have similar expression level in the experiment .",
    "the proposed approach then computes the consensus of the partitions given by a collection of gene expression data , since integrating different experimental data is potentially more informative than the individual experimental data .",
    "more precisely , consensus clustering asks for a partition of the universe set that better summarizes a set of input partitions on the same universe .",
    "the consensus clustering problem has been studied extensively in the literature and its np - hardness over general instances is well - known @xcite .",
    "the minimization version of consensus clustering , called minimum consensus clustering , admits a @xmath1-approximation algorithm  @xcite as well as a number of heuristics based on cutting - plane @xcite and simulated annealing @xcite . in the latter paper , it was observed that the problem is trivially solvable for instances of at most two partitions , while an open question , as recently recalled @xcite , is the computational complexity of the problem ( for both minimization and maximization versions ) on @xmath0 input partitions , for any constant @xmath2 .",
    "the question has been settled in @xcite by showing that minimum consensus clustering is apx - hard even on instances with three input partitions , hence making hopeless the search for a polynomial time algorithm . in this paper",
    "we will focus on the restriction of the problem where the _ desired _ consensus partition has at most @xmath0 sets , with @xmath0 a constant .",
    "a problem closely related to minimum consensus clustering is minimum correlation clustering . in minimum correlation clustering ,",
    "given a complete graph where each edge is associated with a label in @xmath3 , the goal is to compute a partition of the vertices of the graph so that the number of co - clustered vertices joined by @xmath4 edges and and the number of vertices joined by @xmath5 edges and not co - clustered is minimized .",
    "the restriction of minimum correlation clustering where the output partition has at most @xmath0 sets , is np - hard but admits a ptas  @xcite .",
    "we will extend the analysis of @xcite by showing that the analogous restriction minimum consensus clustering admits a ptas , while being np - hard .",
    "notice that minimum correlation clustering and minimum consensus clustering are not comparable , since the input graph in minimum correlation clustering is unweighted , while the input graph of minimum correlation clustering is weighted . on the other hand ,",
    "it is quite immediate to notice that there are unweighted graphs that are not an instance of minimum consensus clustering .",
    "we will tackle the consensus clustering problem , in its minimization version .",
    "two elements of the universe set are _ co - clustered _ in a partition @xmath6 if they belong to the same set of @xmath6 .",
    "[ symm - dist ] let @xmath7 be a universe set and let @xmath8 be two partitions of @xmath7 .",
    "let @xmath9 denote the _ symmetric difference distance _ defined as the number of pairs of elements co - clustered in exactly one of @xmath10 and @xmath11 .",
    "let @xmath12 denote the _ similarity measure _ defined as the number of pairs of elements co - clustered in both partitions plus the number of pairs of elements not co - clustered in both partitions @xmath10 and @xmath11 .",
    "given two elements @xmath13 of the universe set @xmath7 and a set @xmath14 of partitions of @xmath7 , we denote by @xmath15 ( or simply @xmath16 whenever @xmath17 is known from the context ) and the distance @xmath18 ( or simply @xmath19 ) respectively , the number of partitions of @xmath17 in which @xmath13 are co - clustered and are not co - clustered . clearly , for each pair @xmath20 , @xmath21 , that is the number of partitions .",
    "when @xmath17 consists of @xmath22 partitions @xmath10 and @xmath11 , we denote by @xmath23 the quantity @xmath24 .",
    "we are now able to formally introduce the problem we will study in this paper , minimum consensus clustering when the output partition is required to have at most @xmath0 sets ( denoted by k - min - cc ) : we are given a set @xmath25 of partitions over universe @xmath7 and we want to find a partition @xmath6 of @xmath7 , such that @xmath6 has at most @xmath0 sets and @xmath6 minimizes @xmath26 , that is the cost of solution @xmath6 . in what follows ,",
    "we denote by k - min - cc@xmath27 the restriction of the k - min - cc problem where the input consists of exactly @xmath28 partitions of @xmath7 .",
    "the minimum consensus clustering is closely related to the minimum correlation clustering  @xcite , where we are given a labeled complete graph , with each edge labeled by either @xmath5 or @xmath4 and the goal is to compute a partition @xmath29 of the vertex set so that the number of @xmath5 edges cut by the partition and the number of @xmath4 edges inside a same set @xmath30 is minimized .",
    "several variants of the correlation clustering have been introduced @xcite .",
    "an instance of minimum consensus clustering can be represented with a labeled complete graph @xmath31 , where each edge @xmath32 is labeled by @xmath33 . in section  [ ptas ]",
    "we assume that the instance of k - min - cc@xmath27 is precisely this graph representation of minimum consensus clustering .",
    "in this section we will show that the k - min - cc admits a ptas , that is for any @xmath34 a polynomial time approximation algorithm with a guaranteed @xmath35 ratio between the costs of the approximate solution and the optimal solution .",
    "let @xmath31 be the complete graph instance of k - min - cc .",
    "the mindisag algorithm of @xcite for minimum correlation clustering can be restated to solve k - min - cc and is reported here as alg .",
    "[ alg : ptas ] .",
    "let us detail the idea behind mindisag @xcite and how it can be generalized .",
    "first of all , some `` small '' instances are solved by a brute force approach , namely when only one set must be computed or when the number @xmath36 of input elements is polynomial in @xmath0 ( the number of desired output sets ) .",
    "in fact , there are at most @xmath37 possible partitions of @xmath7 , and @xmath37 is a constant whenever @xmath36 is polynomial in @xmath0 .",
    "the algorithm starts by randomly sampling a subset @xmath38 of @xmath7 . if the sample is not too large ( i.e. @xmath39 ) , then it is possible to compute all partitions of @xmath38 in polynomial time . since the steps that the algorithm performs for each partition require polynomial time , the whole algorithm has polynomial time complexity .",
    "the algorithms extends each partition of s to a partition of @xmath7 .",
    "since the number of partitions of @xmath38 is polynomial , we can restrict our attention only to the partition @xmath40 that fully agrees on @xmath38 with the overall optimal solution @xmath41 .",
    "on that specific partition , extending @xmath40 to a partition of @xmath7 introduces only a few errors .",
    "more precisely , the algorithm applies a greedy procedure to extend @xmath40 : it assigns independently each element @xmath42 of @xmath43 to the cluster of @xmath40 that minimizes the total cost of all pairs made of @xmath42 and an element of @xmath38 .",
    "this procedure computes a clustering of @xmath7 into sets that can be distinguished into large and small , depending on the fact that a set is smaller or larger than a certain threshold .",
    "the large sets are retained , while all small sets are merged together obtaining a new universe set which is in turn recursively fed to the algorithm ( only this time requiring a smaller error ratio and obtaining a partition with fewer sets . )",
    "we remember that @xmath28 denotes the number of input partitions , and @xmath0 denotes the number of sets in the output partition . given a partition @xmath44 of @xmath7",
    ", the cost of @xmath44 is denoted by @xmath45 .",
    "let @xmath46 be equal to @xmath47 ( i.e. @xmath46 is a constant depending only on @xmath48 and the number of sets in the output partition ) .",
    "we distinguish two cases : the optimum is at most @xmath49 or at least @xmath49 . in the latter case",
    "we exploit the fact that it is possible to solve the problem in polynomial time and with a guaranteed _ additive _ error @xmath50 , where @xmath36 is the number of elements in the universe , for any constant @xmath51 ( see @xcite for details )",
    ". then the approximation ratio is at most @xmath52 , that is the algorithm in @xcite computes the required approximate solution .",
    "therefore , in the following we only have to investigate the case when the optimal solution has a cost at most @xmath49 .",
    "we define @xmath53 as the size of the sample set @xmath38 , @xmath54 as the optimal solution ( whose cost is denoted by @xmath55 ) .",
    "let @xmath40 be the partition @xmath56 , that is the restriction of @xmath41 to the set @xmath38 .",
    "we recall that we will mainly focus on the iteration of steps 621 where such @xmath40 is extended to a partition of the universe set @xmath7 .",
    "let @xmath57 be a partition of a set @xmath58 , and let @xmath42 be an element of @xmath7 .",
    "then @xmath59 is the set of all elements of @xmath60 different from @xmath42 and co - clustered with @xmath42 in @xmath57 . given an element @xmath61 , define @xmath62 : @xmath63    informally @xmath62 is the fraction of pairs consisting of @xmath64 and an element of @xmath60 that may give a contribution @xmath65 to the cost of the solution .",
    "moreover we define @xmath66 as @xmath67 informally @xmath68 is the fraction of input pairs containing @xmath64 on which @xmath69 agrees .",
    "notice that @xmath70 .",
    "let @xmath57 be a partition of the set @xmath60 , then @xmath71 is the partition obtained from @xmath57 moving the element @xmath64 to the set @xmath72 ( notice that @xmath64 may not belong to @xmath60 ) . given an integer @xmath73 , with @xmath74 , define @xmath75 and @xmath76 .",
    "finally we introduce the notion of @xmath77-good partition , which is a good approximation of the optimal partition .",
    "let @xmath78 be a subset of @xmath7 , @xmath79 be a partition of @xmath60 and @xmath80 .",
    "then @xmath57 is _",
    "@xmath77-good _ if for each @xmath81 , @xmath82 and @xmath83 , then @xmath84    [ alg : ptas ] clusmax@xmath85the result of the ptas for max consensus clustering  @xcite with accuracy @xmath86 pick a sample @xmath87 by drawing @xmath88 elements uniformly at random with replacement @xmath89 return the better of the two clusterings clusmax and clusmin      notice that the main contribution of this section lies in lemma [ lemma:1 ] which is a stronger version of a result in @xcite ; in that paper the notion of @xmath90 is sufficient because the problem studied is unweighted . in our paper",
    "we study a problem where each pair of elements can have a cost that is an integer between @xmath91 and @xmath28 , therefore we need a definition of @xmath92 , with a new parameter @xmath73 expressing the number of input partitions where two elements are either co - clustered or not co - clustered .",
    "indeed our definition of @xmath77-goodness requires that a certain inequality holds for values of @xmath73 that are integers between @xmath91 and @xmath28 , while in @xcite @xmath73 can  implicitly  only take @xmath91 or @xmath93 as value .",
    "recall that we denote by @xmath40 the restriction of @xmath41 to the sample set @xmath38 .",
    "the following lemma proves that @xmath40 is , with high probability , a good sample of the optimal solution .",
    "[ lemma:1 ] the partition @xmath40 is @xmath77-good with probability at least @xmath94 .",
    "let @xmath95 be an element of @xmath38 and let @xmath64 be an element of @xmath7 .",
    "let @xmath96 be a variable equal to @xmath93 if and only if @xmath97 and @xmath98 or @xmath99 and @xmath100 .",
    "pose @xmath101 otherwise . by construction of @xmath96 and @xmath102 , the probability @xmath103 = pval_j^{\\mathcal{d}}(v , i)$ ] , as the set @xmath38",
    "is sampled randomly from @xmath7 .",
    "also notice that @xmath104 , as the latter equality is an immediate consequence of the definition of @xmath96 .",
    "the hoeffding bound states that , given some causal variables @xmath105 such that @xmath106=p$ ] ( and @xmath107 otherwise ) , then @xmath108\\le 2e^{-2m\\beta^2}$ ] . in our case",
    "the causal variable @xmath109 are @xmath96 , and the sum is over all elements @xmath110 , therefore the inequality becomes @xmath111\\le 2e^{-2(|s\\setminus \\{u\\}|)\\beta^2 } \\le 2e^{-2t\\beta^2}$ ] . by the previous arguments",
    ", the inequality can be rewritten as @xmath112\\le 2e^{-2t\\beta^2}$ ] , which gives an upper bound on the probability that any element @xmath81 does not satisfy the requirements of an @xmath77-good set .    applying a union bound",
    "we obtain that the probability of having at least one of the @xmath113 elements not satisfying the requirements is at most @xmath114 . since @xmath115 , the partition @xmath40 is @xmath77-good with probability at least @xmath116 , which is trivially larger than @xmath117 for some constant @xmath118 .",
    "we will now provide some simple generalizations of the lemmas in @xcite , omitting the proofs as they are straightforward extensions of those in @xcite .",
    "just as in @xcite , we will assume that the sample @xmath38 is @xmath77-good , for some constant @xmath77 , and we will focus on the iteration of the algorithm for the partition @xmath119 of @xmath38 that agrees with the optimal partition @xmath120",
    ". we will denote by @xmath121 the sets in clusmin at the end of such iteration .",
    "[ lemma : sample - set - is - ok ] let @xmath122 with @xmath123 ( that is the @xmath124-th set of the optimal solution ) , and @xmath125 for @xmath126 ( that is @xmath64 is misplaced by the algorithm ) . then @xmath127 for each @xmath128",
    "recall that @xmath28 is the number of input partitions , define @xmath129 as the set @xmath130 , and let us call _ bad _ all elements in @xmath129 and _",
    "good _ all elements that are not in @xmath129 . as each element @xmath64 in @xmath129 contributes to the cost of a solution of k - min - cc@xmath27 for at least @xmath131 , a simple counting argument allows us to prove that there are at most @xmath132 bad elements .",
    "for clarity s sake , we split lemma  4.4 in @xcite into two separate statements , where the first statement ( lemma  [ lemma : different - large - and - good - are - small ] ) is actually proved in the first part of the proof of lemma  4.4 in @xcite , while the second statement corresponds to lemma  4.4 in @xcite .",
    "those technical results show that ( i ) our algorithm clusters almost optimally all good elements and ( ii ) all good elements in @xmath133 are optimally clustered , pending a condition on various parameters that will be proved at the end of the section ( for the definition of @xmath133 and @xmath134 see algorithm [ alg : ptas ] ) .",
    "more precisely , lemma  [ lemma : different - large - and - good - are - small ] states that misplaced good elements must belong to some small sets ( which in turn implies that the majority of good elements must be optimally clustered ) .",
    "[ lemma : different - large - and - good - are - small ] let @xmath64 be an element in @xmath135 but not in @xmath136",
    ". then @xmath137 , for some @xmath138 , and @xmath139 .",
    "the proof is the same as in @xcite , except for the observation that , by our definition of @xmath140 and since each pair of elements involving @xmath64 is correctly co - clustered when @xmath64 is in either @xmath141 or @xmath142 , @xmath143 .",
    "[ lemma : good - are - optimal ] let @xmath144 be an element in @xmath133 . if @xmath145 and @xmath146 then @xmath147 .",
    "let @xmath148 .",
    "we can assume that @xmath149 and @xmath150 .",
    "first we will prove that @xmath151 .",
    "assume to the contrary that there exists a @xmath152 , @xmath153 , therefore ( w.l.o.g . )",
    "@xmath154 . by lemma",
    "[ lemma : different - large - and - good - are - small ] , and since there are at most @xmath0 sets in @xmath41 , then @xmath155 .    since @xmath156 then @xmath157 . but",
    "@xmath158 , which contradicts @xmath159 .",
    "in fact @xmath158 can be rewritten as @xmath160 .",
    "now we know that @xmath151 and we would like to prove that @xmath161 , along the same lines as for the first part .",
    "assume to the contrary that there exists a @xmath162 , @xmath163 , therefore ( w.l.o.g . ) @xmath164 .",
    "again by lemma  [ lemma : different - large - and - good - are - small ] , both @xmath165 and @xmath166 have at most @xmath167 elements .",
    "notice that @xmath168 , since @xmath151 , moreover @xmath169 is large , therefore @xmath170 . by the value of @xmath171 , @xmath172 which does not hold by hypothesis .",
    "now we are able to show that there is a solution where some sets are exactly the large sets in clusmin and whose cost is not much larger than the optimum .",
    "this fact justifies the recursive step of the algorithm .",
    "the condition under which the lemma holds will be proved at the end of the section .",
    "[ lem : large - sets - can - be - extended ] if @xmath173 , then there exists a solution @xmath174 such that the cost of @xmath175 is at most @xmath176 and @xmath177 for each @xmath144 in large .",
    "let @xmath175 be the solution consisting of all large sets in clusmin and where all remaining elements are partitioned as in @xmath41 .",
    "clearly the only pairs of elements that might not be partitioned in @xmath175 as in clusmin are the ones containing at least one element of @xmath129 , by lemma  [ lemma : good - are - optimal ] . by the definition of @xmath178 , @xmath179 .",
    "we have to consider two different cases , depending on the fact that @xmath180 belongs to sets @xmath30 , @xmath141 for a certain @xmath144 , or not . in the first case w.l.o.g .",
    "@xmath42 is in both @xmath169 and @xmath165 the set of pairs that are different in clusmin and in @xmath41 , are only pairs of the form @xmath181 where @xmath182 , which in turn implies that @xmath183 . in the second case we can assume w.l.o.g . that @xmath184 and @xmath185",
    ". applying lemma  [ lemma : sample - set - is - ok ] we know that @xmath186 .",
    "also notice that in @xmath187 and @xmath175 , the element @xmath42 belong to the same set therefore , just as for the first case , @xmath188 , but @xmath189 .",
    "combining all inequalities we obtain @xmath190 , where the last inequality comes from lemma  [ lemma : sample - set - is - ok ] . in both cases",
    "we can say that @xmath190 .",
    "an immediate consequence is that @xmath191 is at most latexmath:[$l(n-1)\\sum_{x\\in t_{low}}\\left(val^{f}(x ) - val^{\\mathcal{d}}(x)\\right ) \\le l(n-1 )    follows since latexmath:[$l(n-1 )     since the partitions @xmath175 and clusmin are the same for all pairs where at least one element is in a large set of clusmin , an immediate consequence is that the solution returned by the algorithm has cost at most @xmath193 which is at most equal to @xmath194 for any sufficiently small @xmath48 .",
    "the following technical result completes our proof by showing that lemma  [ lem : large - sets - can - be - extended ] holds .",
    "the proof is a mechanical consequences of the values of @xmath77 , @xmath171 and @xmath46 .",
    "[ lemma:2 ] @xmath195 and @xmath196 , it suffices to prove that @xmath197 that is equivalent to @xmath198 .",
    "since we are only interested in instances where the algorithm of @xcite fails to provide a @xmath199 approximation ratio , we can assume that @xmath200 , consequently it suffices to prove that @xmath201 that is equivalent to @xmath202 which in turn is equivalent to @xmath203 which is trivially true .    to complete the section and the analysis of the algorithm",
    ", we need to prove that the assumptions that we have made in some of the previous lemmas actually hold .",
    "the proofs are mechanical and quite tedious consequences of the values of @xmath77 , @xmath204 and @xmath46 .",
    "[ lemma : good - are - optimal - assumption ] if @xmath205 then @xmath160 .    by the values of @xmath204 and @xmath77 , and",
    "since we can assume that @xmath200 , the inequality can be rewritten as @xmath206 which can be simplified as @xmath207 .",
    "since @xmath208 , it suffices to prove that @xmath209 . as @xmath210 and @xmath48 is tiny , @xmath211",
    ", therefore we are only interested in proving that @xmath212 which is equivalent to @xmath213 .",
    "again , @xmath214 , therefore it is sufficient to prove that @xmath215 which is equivalent to @xmath216 .",
    "since @xmath217 , @xmath218 , hence it suffices to prove that @xmath219 which is an immediate consequence of the assumption @xmath205 .",
    "[ lemma : good - are - optimal - assumption2 ] if @xmath205 then @xmath146 .    by the values of @xmath204 and @xmath77 the inequality can be rewritten as @xmath220 which can be simplified as @xmath221 .",
    "as @xmath210 , it is immediate to notice that @xmath222 , therefore it suffices to prove that @xmath223 , which is an immediate consequence of the assumption @xmath205 .",
    "in this section we prove that 2-min - cc(@xmath224 ) is np - hard . from the np - hardness of 2-min - cc , it is easy to show that also k - min - cc(@xmath224 ) is np - hard for any fixed @xmath0 .",
    "our proof consists of a reduction from the np - hard min bisection problem ( min - bis ) to 2-min - cc(@xmath224 ) .",
    "the min - bis problem , given a graph @xmath31 , asks for a partitioning of @xmath7 in two equal - sized sets so that the number of edges connecting vertices in different sets is minimized .    for our purposes ,",
    "in this section we give a different , but equivalent , definition of cost of a solution @xmath6 of minimum consensus clustering over instance @xmath17 can be alternatively defined as : @xmath225 where @xmath226 iff @xmath227 are co - clustered in @xmath6 , otherwise @xmath228 .",
    "the above formula will be used in the paper ( see section 4 ) to define the cost of a set @xmath44 of pairs in a solution @xmath6 as @xmath229 .",
    "given an instance @xmath31 of min - bis , where @xmath230 and @xmath231 , we build an instance of 2-min - cc(@xmath224 ) as follows .",
    "first we define the universe set @xmath7 . for each @xmath232",
    ", we define a set of @xmath233 elements @xmath234 , and a set of @xmath36 elements @xmath235 .",
    "the universe set is @xmath236 .",
    "next we define the three input partitions of 2-min - cc(@xmath224 ) , @xmath237",
    ". partitions @xmath10 and @xmath11 are identical and consist of @xmath36 disjoint sets @xmath238 , with @xmath239 .",
    "the partition @xmath240 contains the sets @xmath105 , moreover for each edge @xmath241 , in @xmath240 we have the set @xmath242 consisting of two elements taken respectively from @xmath243 and @xmath244 ( the actual elements taken are not important , provided that @xmath240 is a partition of the universe set  which is trivial to obtain ) .",
    "finally , in @xmath240 we have a singleton for each element of @xmath245 that are not in a two - element set according to the previous rule .    [ obs:3-sets ]",
    "since all the elements in @xmath105 are co - clustered in all input partitions , each @xmath105 is contained in a set of the optimal solution .",
    "the previous observation allows ourselves to restrict our attention to solutions where all elements of @xmath105 are co - clustered .",
    "consider a solution @xmath246 .",
    "the cost of @xmath6 can be expressed as the cost of all pairs of elements in @xmath6 .",
    "we can split the cost of @xmath6 into four parts :    1 .",
    "the cost of pairs of elements both belonging to @xmath247 , 2 .   the cost of pairs of elements with exactly one element belonging to @xmath247 , 3 .   the cost of pairs of elements in @xmath248 with @xmath249 , 4 .   the cost of pairs of elements both belonging to a set @xmath243 .    we will call _ balanced _ a solution @xmath250 where both @xmath251 and @xmath252 contain exactly @xmath253 sets @xmath105 .",
    "the following lemma states that optimal solutions must be balanced .",
    "[ lem - np - eq - size ] let @xmath246 be a solution of 2-min - cc(@xmath224 ) , then the cost of @xmath6 is at most @xmath254 if and only if @xmath6 is a balanced solution .",
    "notice that the total cost of case 2 ) is at most @xmath255 as @xmath256 and @xmath257 , while the sum of total costs of cases 3 ) and 4 ) is at most @xmath258 .",
    "let @xmath259 be the number of sets @xmath105 included in @xmath251 .",
    "the cost of the pairs of elements both belonging to @xmath247 is @xmath260 .",
    "indeed , only the pairs of elements in distinct sets @xmath105 that are co - clustered in @xmath251 and @xmath252 contribute to the cost , as no pair of elements belonging to two distinct sets @xmath105 is co - clustered in an input partition .",
    "the minimum of @xmath261 is attained for @xmath262 . for any other @xmath259 ,",
    "the value of @xmath261 is at least equal @xmath263 .    since @xmath264 ,",
    "the maximum total cost for a balanced solution is @xmath265 , while the maximum total cost for an unbalanced solution is at least @xmath266 .    from lemma  [ lem - np - eq - size ]",
    "we can consider only balanced solutions .",
    "a balanced solution @xmath6 is called _ standard _ if , for each @xmath144 , @xmath105 and @xmath243 are contained in the same set of @xmath6 .",
    "the following lemma shows that we can consider only standard solutions    [ lem - np - el_co_cluster ] let @xmath246 be a balanced solution of 2-min - cc(@xmath224 ) , then the cost of @xmath6 is at most @xmath267 iff @xmath6 is a standard solution .",
    "let @xmath246 be a balanced solution , then the total cost of pairs of elements with exactly one element belonging to @xmath247 is at most @xmath268 as all pairs in @xmath269 , with @xmath249 , contribute with a cost @xmath224 if and only if @xmath270 is contained in a set of @xmath6 , and have no cost otherwise .",
    "at the same time all pairs in @xmath271 have cost @xmath93 in any standard solution , as @xmath272 are a set of two input partitions , while in the third input partition , @xmath240 , no pairs in @xmath271 are co - clustered . if @xmath6 is a standard solution , then the total cost of pairs of elements in @xmath248 with @xmath249 is @xmath273 as only half of such pairs are co - clustered in a standard solution . following the reasoning of the proof of lemma  [ lem - np - eq - size ] , with our new estimates of cases 2 ) and 3 ) , it is immediate to notice that , if @xmath6 is a standard solution , then its cost is at most @xmath274 .",
    "now assume that @xmath6 is not a standard solution , that is there exists an element @xmath275 that is not clustered together with all elements of @xmath105 . again , following the same lines of the proof of lemma  [ lem - np - eq - size ] , the cost of @xmath6 is at least @xmath276 , as all pairs in @xmath277 have a cost @xmath22 , instead of @xmath93 as in a standard partition . since @xmath278 , the lemma follows .",
    "given a standard solution @xmath6 , by construction of the reduction , with each edge @xmath241 , we associate a pair @xmath279 .",
    "let us denote by @xmath175 the set of such pairs , and by @xmath280 the subset of all pairs in @xmath175 that are co - clustered in @xmath6 .",
    "we conclude the proof with the following theorem .",
    "[ thm - np ] let @xmath31 be an instance of min - bis , and let @xmath281 be its associated instance of 2-min - cc(@xmath224 ) .",
    "then @xmath281 has a solution of cost @xmath282 if and only if @xmath283 has a bisection of cost @xmath0 .",
    "let @xmath284 be a bisection with cost @xmath0 .",
    "then let @xmath251 be the set @xmath285 , and let @xmath286",
    ". by construction @xmath250 has cost @xmath287 .",
    "now let @xmath250 be a solution of 2-min - cc(@xmath224 ) with cost @xmath288 . by lemmas  [ lem - np - eq - size ]",
    ",  [ lem - np - el_co_cluster ] @xmath250 must be a standard solution .",
    "recall that the cost of a solution @xmath246 can be expressed as the cost of all pairs of elements in @xmath6 , such a cost can be split into parts 1 ) , 2 ) , 3 ) and 4 ) .",
    "moreover , following the proof of lemmas  [ lem - np - eq - size ] ,  [ lem - np - el_co_cluster ] , we know that the total cost of case 1 ) is @xmath289 , the total cost of case 2 ) is @xmath290 . by direct inspection the total cost of case 4 ) is @xmath291 .",
    "we still have to consider case 3 ) , that is the cost of pairs @xmath292 , with @xmath138 .",
    "we have to distinguish three cases , according to the fact that @xmath293 ( in this case the cost is @xmath93 ) , @xmath294 ( in this case the cost is @xmath22 ) , @xmath295 ( in this case the cost is @xmath224 if @xmath296 and @xmath297 are co - clustered , and @xmath91 otherwise",
    ". therefore the total cost of case 3 ) can be written as @xmath298 .",
    "summing up the costs of the four cases we obtain a total cost @xmath299 .",
    "consequently , taking into account the initial hypothesis , @xmath300 .",
    "let @xmath284 be the solution of @xmath283 where @xmath301 and @xmath302 . by construction",
    "the number of edges of @xmath303 crossing the bipartition @xmath284 is equal to @xmath304 which , in turn , is equal to @xmath0 completing the proof .",
    "in this paper we have studied the minimum consensus clustering problem when the output partition contains at most a constant number of sets .",
    "we have shown that the mindisag algorithm  @xcite can be applied also for our problem , hence showing that its applicability is not restricted to unweighted problems .",
    "moreover we have proved that the same problem is np - hard even on instances of three input partitions , thereby justifying our reliance on polynomial time approximation algorithms .    in our opinion the main idea behind mindisag algorithm could be applied to some more general versions of both minimum consensus clustering and minimum correlation clustering than the ones studied here and in  @xcite .",
    "pb , and gdv have been partially supported by far 2008 grant `` computational models for phylogenetic analysis of gene variations '' .",
    "pb has been partially supported by the miur prin 2007 project `` mathematical aspects and emerging applications of automata and formal languages '' ."
  ],
  "abstract_text": [
    "<S> the consensus clustering problem has been introduced as an effective way to analyze the results of different microarray experiments @xcite . </S>",
    "<S> the problem consists of looking for a partition that best summarizes a set of input partitions ( each corresponding to a different microarray experiment ) under a simple and intuitive cost function . </S>",
    "<S> the problem admits polynomial time algorithms on two input partitions , but is apx - hard on three input partitions . </S>",
    "<S> we investigate the restriction of consensus clustering when the output partition is required to contain at most @xmath0 sets , giving a polynomial time approximation scheme ( ptas ) while proving the np - hardness of this restriction </S>",
    "<S> .    [ section ] [ thm]lemma [ thm]proposition [ thm]observation [ thm]corollary [ thm]claim [ section ] [ section ] </S>"
  ]
}
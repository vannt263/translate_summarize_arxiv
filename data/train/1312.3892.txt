{
  "article_text": [
    "a major decisional process in many business activities concerns whom to sell products ( or services ) to and at what price , with the goal of maximizing the total revenue .",
    "on the other hand , consumers would like to buy at the best possible prices and experience fair sale criteria .",
    "in this work , we address such a problem from a computational point of view , considering a two - sided market in which the supply side consists of @xmath0 indivisible items and the demand one is populated by @xmath1 potential buyers ( in the following also called consumers or customers ) , where each buyer @xmath2 has a demand @xmath3 ( the number of items that @xmath2 requests ) and valuations @xmath5 representing the benefit @xmath2 gets when owing item @xmath4 . as several papers on this topic ( see for instance @xcite ) , we assume that , by means of market research or interaction with the consumers , the seller knows each customer s valuation for each item .",
    "the seller sets up a price @xmath15 for each item @xmath4 and assigns ( i.e. , sells ) bundle of items to buyers with the aim of maximizing her revenue , that is the sum of the prices of all the sold items . when a consumer is assigned ( i.e. , buys ) a set of items , her utility is the difference between the total valuation of the items she gets ( valuations being additive ) and the purchase price .",
    "the sets of the sold items , the purchasing customers and their purchase prices are completely determined by the allocation of bundles of items to customers unilaterally decided by the seller .",
    "nevertheless , we require such an allocation to meet two basic fairness constraints : ( i ) each customer @xmath2 is allocated at most one bundle not exceeding her demand @xmath3 and providing her a non - negative utility , otherwise she would not buy the bundle ; ( ii ) , the allocation must be envy - free @xcite , i.e. , each customer @xmath2 does not prefer any subset of @xmath3 items different from the bundle she is assigned .    the envy - freeness notion adopted in this paper is the typical one of pricing problems .",
    "anyway , in the literature there also exist weaker forms usually applied in fair division settings ( see for instance @xcite ) where , basically , no buyer wants to switch her allocation with that of another buyer , without combining different bundles . notice that in our scenario a trivial envy - free solution always exists that lets @xmath16 for each item @xmath4 and does not assign any item to any buyer .",
    "many papers ( see the _ related work _ section for a detailed reference list ) considered the _ unit demand case _ in which @xmath17 for each consumer @xmath2 .",
    "arguably , the _ multi - demand case _",
    ", where @xmath18 for each consumer @xmath2 , is more general and finds much more applicability .",
    "to this aim , we can identify two main multi - demand schemes .",
    "the first one is the _ relaxed multi - demand model _ , where each buyer @xmath2 requests at most @xmath18 items , and the second one is the _ sharp multi - demand model _ , where each buyer @xmath2 requests exactly @xmath18 items and , therefore , a bundle of size less than @xmath3 has no value for buyer @xmath2 .    for relaxed multi - demand models , a standard technique can reduce the problem to the unit demand case in the following way : each buyer @xmath2 with demand @xmath3",
    "is replaced by @xmath3 copies of buyer @xmath2 , each requesting a single item .",
    "however , such a trick does not apply to the sharp demand model .",
    "moreover , as also pointed out in @xcite , the sharp multi - demand model exhibits a property that unit demand and relaxed multi - demand ones do not posses .",
    "in fact , while in the latter model any envy - free pricing is such that the price @xmath15 is always at most the value of @xmath5 , in the sharp demand model , a buyer @xmath2 may pay an item @xmath4 more than her own valuation for that item , i.e. , @xmath19 and compensate her loss with profits from the other items she gets ( see section 3.1 of @xcite ) .",
    "such a property , also called _ overpricing _ , clearly adds an extra challenge to find an optimal revenue .",
    "the sharp demand model is quite natural in several settings .",
    "consider , for instance , a scenario in which a public organization has the need of buying a fixed quantity of items in order to reach a specific purpose ( i.e. locations for offices , cars for services , bandwidth , storage , or whatever else ) , where each item might have a different valuation for the organization because of its size , reliability , position , etc . yet , suppose a user wants to store on a remote server a file of a given size @xmath20 and there is a memory storage vendor that sells slots of fixed size @xmath21 , where each cell might have different features depending on the server location and speed and then yielding different valuations for the user . in this case",
    ", a number of items smaller than @xmath22 has no value for the user .",
    "similar scenarios also apply to cloud computing . in @xcite ,",
    "the authors used the following applications for the sharp multi - demand model . in tv ( or radio ) advertising @xcite , advertisers may request different lengths of advertising slots for their ads programs . in banner ( or newspaper ) advertising , advertisers may request different sizes or areas for their displayed ads , which may be decomposed into a number of base units . also , consider a scenario in which advertisers choose to display their advertisement using medias ( video , audio , animation ) @xcite that would usually need a fixed number of positions , while text ads would need only one position each .",
    "an example of formulation sponsored search using sharp multi - demands can be found in @xcite .",
    "other results concerning the sharp multi - demand model in the bayesian setting can be found in @xcite",
    ".    * related work .",
    "* pricing problems have been intensively studied in the literature , see e.g. , @xcite just to cite a few , both in the case in which the consumers preferences are unknown ( mechanism design @xcite ) and in the case of full information that we consider in this paper . a common goal for economically motivated algorithms and mechanisms is economic efficiency , that is obtaining an outcome which maximizes the sum of the utilities of all the participants .",
    "such a problem has been largely investigated from a mechanism design point of view .",
    "for instance , in the unit demand case , the vickrey - clarke - groves ( vcg ) mechanism @xcite solves the problem , and is both truthful and envy - free .",
    "unfortunately , computing the vcg mechanism is np - hard .",
    "in fact , our interest here is in maximizing the seller s profit assuming that consumers preferences are gathered through market research or conjoint analysis @xcite . from an algorithmic point of view",
    ", @xcite is the first paper dealing with the problem of computing the envy - free pricing of maximum revenue .",
    "the authors considered the unit demand case for which they gave an @xmath23-approximation algorithm and showed that computing an optimal envy - free pricing is apx - hard .",
    "briest @xcite showed that , under reasonable complexity assumptions , the revenue maximization problem in the unit demand model can not be approximated within @xmath24 for some @xmath25 .",
    "the subcase in which every buyer positively evaluates at most two items has been studied in @xcite .",
    "the authors proved that the problem is solvable in polynomial time and it becomes np - hard if some buyer gets interested in at least three items .    for the multi - demand model ,",
    "@xcite gave an @xmath26 approximation algorithm when there is a metric space behind all items , where @xmath27 is the maximum demand , and briest @xcite showed that the problem is hard to approximate within a ratio of @xmath28 for some @xmath25 .    to the best of our knowledge",
    ", @xcite is the first paper explicitly dealing with the sharp multi - demand model .",
    "the authors considered a particular valuation scheme ( also used in @xcite for keywords advertising scenarios ) where each item @xmath4 has a parameter @xmath6 measuring the quality of the item and each buyer @xmath2 has a value @xmath7 representing the benefit that @xmath2 gets when owing an item of unit quality .",
    "thus , the benefit that @xmath2 obtains from item @xmath4 is given by @xmath29 .",
    "for such a problem , the authors proved that computing the envy - free pricing of maximum revenue is np - hard .",
    "moreover , they showed that if the demand of each buyer is bounded by a constant , the problem becomes solvable in polynomial time .",
    "we remark that this valuation scheme is a special case of the one in which the valuations @xmath5 are completely arbitrary and given as an input of the problem . throughout the paper",
    ", we will refer to the former scheme as to _ related valuations _ and to the latter as to _",
    "unrelated valuations_. recently @xcite considered the sharp multi - demand model with the additional constraint in which items are arranged as a sequence and buyers want items that are consecutive in the sequence .    finally @xcite studied the pricing problem in the case in which buyers have a budget , but no demand constraints .",
    "the authors considered a special case of related valuations in which all qualities are equal to @xmath30 ( i.e. , @xmath31 for each item @xmath4 ) .",
    "they proved that the problem is still np - hard and provided a @xmath11-approximation algorithm .",
    "such algorithm assigns the same price to all the sold items .",
    "many of the papers listed above deal with the case of limited supply .",
    "another stream of research considers unlimited supply , that is , the scenario in which each item @xmath4 exists in @xmath32 copies and it is explicitly allowed that @xmath33 .",
    "the limited supply setting seems generally more difficult than the unlimited supply one . in this paper",
    "we consider the limited supply setting .",
    "interesting results for unlimited supply can be found in @xcite .    * our contribution .",
    "* we consider the revenue maximization problem with sharp multi - demand and limited supply .",
    "we first prove that , for related valuations , the problem can not be approximated to a factor @xmath9 , for any @xmath10 , unless p = np and that such result is asymptotically tight .",
    "in fact we provide a simple @xmath0-approximation algorithm even for unrelated valuations .",
    "our inapproximability proof relies on the presence of some buyers not being able to receive any bundle of items in any envy - free outcome .",
    "thus , it becomes natural to ask oneself what happens for instances of the problem , that we call _ proper _ , where no such pathological buyers exist . for proper instances , we design an interesting @xmath11-approximation algorithm and show that the problem can not be approximated to a factor @xmath34 for any @xmath13 unless p @xmath14 np . therefore , also in this subcase , our results are tight .",
    "we remark that it is possible to efficiently decide whether an instance is proper . moreover , if discarding useless buyers is allowed , an instance can be made proper in polynomial time , without worsening the value of its optimal solution .",
    "in the _ revenue maximization problem with sharp multi - demands _ ( rmpsd ) investigated in this paper , we are given a _",
    "market _ made up of a set @xmath35 of _ items _ and a set @xmath36 of _ buyers_.",
    "each item @xmath37 has unit supply ( i.e. , only one available copy ) .",
    "we consider both unrelated and related valuations . in the former",
    "each buyers @xmath2 has valuations @xmath5 representing the benefit @xmath2 gets when owing item @xmath4 . in the latter each item is characterized by a _ quality _ ( or desirability ) @xmath38 , while each buyer @xmath39 has a _ value _",
    "@xmath40 , measuring the benefit that she gets when receiving a unit of quality , thus , the valuation that buyer @xmath2 has for item @xmath4 is @xmath41 .",
    "we notice that related is a special case of unrelated valuations . throughout the paper ,",
    "when not explicitly indicated , we refer to related valuations .",
    "finally each buyer @xmath2 has a _ demand _ @xmath42 , which specifies the exact number of items she wants to get . in the following we assume items and bidders ordered in non - increasing order , that is , @xmath43 for @xmath44 and @xmath45 for @xmath46 .",
    "an _ allocation vector _ is an @xmath1-tuple @xmath47 , where @xmath48 , with @xmath49 , @xmath50 and @xmath51 for each @xmath52 , is the set of items sold to buyer @xmath2 .",
    "price vector _ is an @xmath0-tuple @xmath53 , where @xmath54 is the price of item @xmath4 .",
    "outcome _ of the market is a pair @xmath55 .",
    "given an outcome @xmath55 , we denote with @xmath56 the utility that buyer @xmath2 gets when she is sold item @xmath4 and with @xmath57 the overall utility of buyer @xmath2 in @xmath55 .",
    "when the outcome ( or the price vector ) is clear from the context , we simply write @xmath58 and @xmath59 . an outcome @xmath55 is _ feasible _ if @xmath60 for each @xmath39 .",
    "we denote with @xmath61 the set of items sold to some buyer according to the allocation vector @xmath62 .",
    "we say that a buyer @xmath2 is a _ winner _ if @xmath63 and we denote with @xmath64 the set of all the winners in @xmath62 . for an item @xmath65",
    ", we denote with @xmath66 the buyer @xmath67 such that @xmath68 , while , for an item @xmath69 , we define @xmath70 .",
    "moreover , for a winner @xmath67 , we denote with @xmath71 the best - quality item in @xmath72 .",
    "also in this case , when the allocation vector is clear from the context , we simply write @xmath73 and @xmath74 . finally , we denote with @xmath75 the maximum index of a winner in @xmath62 .",
    "an allocation vector @xmath62 is _ monotone _ if @xmath76 for each @xmath77 with @xmath78 , that is , all the items of @xmath2 are of quality greater of equal to the one of all the items of @xmath79 .",
    "a feasible outcome @xmath55 is an envy - free outcome if , for each buyer @xmath39 , @xmath80 for each @xmath81 of cardinality @xmath3 .",
    "notice that , by definition , an outcome @xmath55 is envy - free if and only if the following three conditions holds :    1 .",
    "@xmath60 for each @xmath39 , 2 .",
    "@xmath82 for each @xmath67 , @xmath68 and @xmath83 , 3 .",
    "@xmath84 for each @xmath85 and @xmath81 of cardinality @xmath3 .",
    "note also that , as already remarked , envy - free solutions always exist , since the outcome @xmath55 such that @xmath86 for each @xmath39 and @xmath16 for each @xmath37 is envy - free .",
    "moreover , deciding whether an outcome is envy - free can be done in polynomial time .    by the definition of envy - freeness ,",
    "if @xmath87 is a winner , then all the buyers @xmath79 with @xmath88 and @xmath89 must be winners as well , otherwise @xmath79 would envy a subset of the bundle assigned to @xmath2 .",
    "this motivates the following definition , which restricts to instances not containing buyers not being a priori able to receive any item ( _ useless buyers _ ) .",
    "an instance @xmath90 is proper if , for each buyer @xmath39 , it holds @xmath91 .",
    "the ( market ) _ revenue _ generated by an outcome @xmath92 is defined as @xmath93 .",
    "rmpsd asks for the determination of an envy - free outcome of maximum revenue .",
    "we observe that it is possible to efficiently check if an instance is proper , and if discarding useless buyers is allowed , an instance can be made proper in polynomial time , without worsening the value of its optimal solution .",
    "an instance of the rmpsd problem can be modeled as a triple @xmath94 , where @xmath95 and @xmath96 are the vectors of buyers values and demands , while @xmath97 is the vector of item qualities .",
    "we conclude this section with three lemmas describing some properties that need to be satisfied by any envy - free outcome . for an integer @xmath98 ,",
    "define @xmath99=\\{1,\\ldots , h\\}$ ] .",
    "denote with @xmath100 the number of different values in @xmath101 and with @xmath102 the set of buyers with the @xmath103th highest value , for each @xmath104 $ ] . for @xmath105 $ ] ,",
    "define @xmath106 , @xmath107 , @xmath108 and @xmath109 , while , for each subset of buyers @xmath110 , define @xmath111 .    for an instance @xmath112 , let @xmath113 $ ] be the minimum index such that @xmath114 and let @xmath115 be a subset of buyers in @xmath116 such that @xmath117    an instance @xmath90 is continuous if , for each buyer @xmath118 , it holds @xmath119 .    roughly speaking ,",
    "an instance is continuous when the outcome @xmath62 such that @xmath2 is a winner if and only if @xmath120 can not be extended with an additional winner @xmath121 . put in different words , there exists a way to break ties among the buyers in @xmath116 in such a way that a buyer in @xmath116 gets an index @xmath122 such that the outcome assigning items to all the buyers in @xmath99 $ ] can not be further extended .",
    "note that any instance @xmath90 for which @xmath123 does not exist can be suitably extended with a dummy buyer @xmath124 , such that @xmath125 and @xmath126 , which is equivalent in the sense that it does not change the set of envy - free outcomes of @xmath90 .",
    "hence , throughout the paper , we will always assume that @xmath123 is well - defined for each given instance of the rmpsd .",
    "for the sake of clarity , we report in the following some examples of continuous and non - continuous instances .",
    "the instance @xmath127 with @xmath128 buyers and @xmath129 items such that @xmath130 and @xmath131 is continuous since @xmath132 , @xmath133 for each @xmath134 $ ] , @xmath135 , @xmath136 and @xmath137 for each @xmath138 .",
    "the instance @xmath139 with @xmath128 buyers and @xmath129 items such that @xmath140 and @xmath141 is not continuous since @xmath142 , @xmath143 , @xmath144 , @xmath145 , @xmath146 , @xmath147 and @xmath148 .",
    "[ orderedqualities ] if an outcome @xmath55 is envy - free , then @xmath62 is monotone .",
    "let @xmath55 be an envy - free outcome and assume , for the sake of contradiction , that @xmath62 is not monotone , i.e. , that there exist two buyers @xmath77 with @xmath149 and two items @xmath68 and @xmath150 such that @xmath151 . by the envy - freeness of @xmath55",
    ", it holds @xmath82 which implies @xmath152 and @xmath153 which implies @xmath154 . by dividing both inequalities by @xmath155 , we get @xmath156 and @xmath157 which implies @xmath158 , a contradiction .",
    "given an outcome @xmath55 , an item @xmath68 is _ overpriced _ if @xmath159 .",
    "[ nooverprice ] let @xmath55 be an envy - free outcome .",
    "for each overpriced item @xmath160 , it holds @xmath161 .",
    "let @xmath55 be an envy - free outcome and assume , for the sake of contradiction , that there exists an overpriced item @xmath162 with @xmath163 .",
    "hence , @xmath164 .",
    "since @xmath165 and @xmath55 is feasible , it holds @xmath166 which implies that there exists an item @xmath167 such that @xmath168 .",
    "moreover , by the envy - freeness of @xmath55 , it also holds @xmath169 . by using @xmath170 , we get @xmath171 , which contradicts the assumption that @xmath159 .",
    "the following lemma establishes that , if a buyer @xmath2 is not a winner , then the total number of items assigned to buyers with valuation strictly smaller than @xmath7 is less than @xmath3 .",
    "[ noholes ] let @xmath55 be an envy - free outcome .",
    "for each buyer @xmath2 such that @xmath85 , it holds @xmath172 .",
    "let @xmath55 be an envy - free outcome and let @xmath173 be two buyers such that @xmath78 , @xmath85 and @xmath174 . assume , for the sake of contradiction , that @xmath175 .",
    "this implies that there exists @xmath81 , of cardinality @xmath3 , such that all items @xmath176 are assigned to buyers with values of at most @xmath7 and at least one item @xmath177 is assigned to buyer @xmath79 .",
    "moreover , since @xmath178 for each @xmath179 by the feasibility of @xmath92 , there exists one such @xmath180 for which @xmath181 .",
    "hence , we obtain @xmath182 where the strict inequality follows from the fact that @xmath78 and @xmath183 for each @xmath184 .",
    "thus , since there exists a set of items @xmath180 of cardinality @xmath3 such that @xmath185 , it follows that @xmath55 is not envy - free , a contradiction .",
    "since we are interested only in envy - free outcomes , by lemma [ orderedqualities ] , in the following we will implicitly assume that any considered allocation vector is monotone .",
    "we call _ pricing scheme _ a function which , given an allocation vector @xmath62 , returns a price vector . in this section ,",
    "we propose a pricing scheme for allocation vectors which will be at the basis of our approximability and inapproximability results .",
    "for the sake of readability , in describing the following pricing function , given @xmath62 , we assume a re - ordering of the buyers in such a way that all the winners appear first , still in non - increasing order of @xmath7 .    for an allocation vector @xmath62 , define the price vector @xmath186 such that , for each @xmath37 , @xmath187 quite interestingly , such a scheme resembles one presented @xcite .",
    "next lemma shows that @xmath186 is indeed a price vector .",
    "[ prezzinonnegativi ] for each @xmath37 , it holds @xmath188 .    clearly , the claim holds for each @xmath4 such that @xmath189 . for each @xmath4",
    "such that @xmath190 , it holds @xmath191 where the inequality holds since @xmath192 and all the other terms are non - negative since @xmath62 is monotone .",
    "we continue by showing the following important property , closely related to the notion of envy - freeness , possessed by the outcome @xmath193 for each allocation vector @xmath62 .",
    "[ prezzatura ] for each allocation vector @xmath62 , the outcome @xmath194 is feasible and , for each winner @xmath195 , @xmath80 for each @xmath81 of cardinality @xmath3 .",
    "thus , the allocation is envy - free for the subset of the winners buyers .    given an allocation vector @xmath62 ,",
    "consider a winner @xmath196 .",
    "if @xmath2 is the only winner in @xmath64 , it immediately follows that @xmath80 for each @xmath81 of cardinality @xmath3 since items not assigned to @xmath2 have infinite price .",
    "we prove this claim for the case in which @xmath197 by showing that , for each @xmath198 such that @xmath68 and @xmath83 , it holds @xmath82 .",
    "to this aim , consider an item @xmath199 such that @xmath200 ( whenever it exists ) .",
    "it holds @xmath201 where the second equality comes from @xmath202 and the inequality follows from the monotonicity of @xmath62 .",
    "now consider an item @xmath199 such that @xmath203 ( whenever it exists ) .",
    "similarly as above , it holds @xmath204 where the inequality follows from the monotonicity of @xmath62 and the fact that @xmath205 by the definition of @xmath206 .",
    "finally , for any item @xmath199 with @xmath207 , for which it holds @xmath208 , @xmath82 trivially holds .",
    "thus , in order to conclude the proof , we are just left to show that @xmath60 for each @xmath67 .",
    "to this aim , note that , for each @xmath167 , it holds @xmath209 by definition of @xmath186 , which yields @xmath210 .",
    "let @xmath199 be any item belonging to @xmath211 .",
    "since , as we have shown , for each buyer @xmath67 and item @xmath68 , it holds @xmath82 , it follows that @xmath212 and this concludes the proof .",
    "in this section , we show that it is hard to approximate the rmpsd to a factor @xmath9 for any @xmath10 , even when considering related valuations , whereas a simple @xmath0-approximation algorithm can be designed for unrelated valuations .      for an integer @xmath213 ,",
    "we denote with @xmath214 $ ] the set @xmath215 .",
    "recall that an instance of the partition problem is made up of @xmath103 strictly positive numbers @xmath216 such that @xmath217}q_i = q$ ] , where @xmath218 is an even number .",
    "it is well - known that deciding whether there exists a subset @xmath219 $ ] such that @xmath220 is an @xmath221-complete problem .",
    "the inapproximability result that we derive in this subsection is obtained through a reduction from a specialization of the partition problem , that we call constrained partition problem , which we define in the following .",
    "an instance of the constrained partition problem is made up of an even number @xmath103 of non - negative numbers @xmath216 such that @xmath222}q_i = q$ ] , where @xmath223 is an even number and @xmath224}\\{q_i\\}\\geq\\max_{i\\in [ k]}\\{q_i\\}$ ] . in this case , we are asked to decide whether there exists a subset @xmath219 $ ] , with @xmath225 , such that @xmath220 .",
    "[ hardnesslemma ] the constrained partition problem is @xmath221-complete .",
    "let @xmath226 be an instance of the partition problem and denote with @xmath227}\\{q_i\\}$ ] and @xmath228}\\{q_i\\}$ ] .",
    "we construct an instance @xmath229 of the constrained partition problem as follows : set @xmath230 , then , for each @xmath231 $ ] , set @xmath232 , while , for each @xmath233 , set @xmath234 .",
    "it is easy to see that , by construction , it holds that @xmath235 is an even number , @xmath236}\\{q'_i\\}\\geq 3 q_{max}=\\max_{i\\in [ k']}\\{q'_i\\}$ ] and that @xmath237}q'_i=\\sum_{i\\in [ k]}q_i+2k'q_{max}=q+2k'q_{max}$ ] is an even number , so that @xmath238 is a valid instance of the constrained partition problem .    in order to show the claim",
    ", we have to prove that there exists a positive answer to @xmath90 if and only if there exists a positive answer to @xmath238 .    to this aim ,",
    "let @xmath219 $ ] , with @xmath220 , be a positive answer to @xmath90 .",
    "let @xmath239 , with @xmath240 , be any set of @xmath241 numbers of value @xmath242 .",
    "note that , by the definition of @xmath235 and the fact that @xmath243 , @xmath244 .",
    "we claim that the set @xmath245 is a positive answer to @xmath238 .",
    "in fact , it holds @xmath246 and @xmath247 .",
    "now , let @xmath248 $ ] , with @xmath249 , be a positive answer to @xmath238 .",
    "note that , since @xmath230 , it holds @xmath250 .",
    "hence , since @xmath218 , there must exist at least one index @xmath251 such that @xmath231 $ ] .",
    "let @xmath252\\}\\neq\\emptyset$ ] be the set of all such indexes . we claim that @xmath253 is a positive answer to @xmath90 . in fact , it holds @xmath254 .",
    "we can now proceed to show our first inapproximability result , by means of the following reduction .",
    "given an integer @xmath255 , consider an instance @xmath90 of the constrained partition problemwith @xmath256 numbers @xmath257 such that @xmath258 and define @xmath259}\\{q_i\\}$ ] .",
    "remember that , by definition , @xmath223 is even and it holds @xmath260}\\{q_i\\}$ ] .",
    "note that , this last property , together with @xmath261 , implies that @xmath262 for each @xmath263 $ ] since @xmath255 .    for any @xmath10 ,",
    "define @xmath264 and @xmath265 .",
    "note that , by definition , @xmath266 .",
    "we create an instance @xmath238 of the rmpsd as follows .",
    "there are @xmath128 buyers and @xmath267 items divided into four groups : @xmath103 items of quality @xmath223 , one item of quality @xmath268 , @xmath256 items of qualities @xmath269 , with @xmath270 $ ] , inherited from @xmath90 , and @xmath271 items of quality @xmath272 .",
    "the five buyers are such that @xmath273 and @xmath274 , @xmath275 and @xmath276 , @xmath277 and @xmath278 , @xmath279 and @xmath280 , @xmath281 and @xmath282 .",
    "note that it holds @xmath283 for each @xmath284 $ ] .",
    "in fact , @xmath285 , since @xmath286 and @xmath287 for @xmath288 .",
    "moreover , @xmath289 , since @xmath290 implies @xmath291 .",
    "finally , @xmath292 , since @xmath293 implies @xmath294 and @xmath295 , since @xmath296 implies @xmath297 .",
    "our aim is to show that , if there exists a positive answer to @xmath90 , then there exists an envy - free outcome for @xmath238 of revenue at least @xmath298 , while , if a positive answer to @xmath90 does not exists , then no envy - free outcome of revenue greater than @xmath299 can exist for @xmath238 .",
    "[ lemma1 ] if there exists a positive answer to @xmath90 , then there exists an envy - free outcome for @xmath238 of revenue",
    "greater than @xmath298 .",
    "consider the allocation vector @xmath62 such that @xmath300 is made up of @xmath103 items of quality @xmath223 , @xmath301 contains the item of quality @xmath268 plus the @xmath302 items forming a positive answer to @xmath90 , @xmath303 is made up of the @xmath271 items of quality @xmath304 and @xmath305 . note that @xmath62 is monotone .",
    "we show that the outcome @xmath193 is envy - free .",
    "according to the price vector @xmath306 , it holds @xmath307 for each @xmath308 , @xmath309 for each @xmath310 and @xmath311 for each @xmath312 .",
    "because of lemma [ prezzatura ] , in order to show that @xmath194 is envy - free , we only need to prove that , for each buyer @xmath85 and @xmath81 with @xmath313 , it holds @xmath84 .",
    "note that the buyers not belonging to @xmath64 are buyers @xmath11 and @xmath314 .    for buyer @xmath11",
    ", since there are exactly @xmath315 items having a non - infinite price , it follows that @xmath316 is the only set of items of cardinality @xmath317 which can give buyer @xmath11 a non - negative utility .",
    "it holds @xmath318    for buyer @xmath314 , for each pair of items @xmath319 with @xmath308 and @xmath320 , it holds @xmath321 , while , for each pair of items @xmath322 with @xmath320 and @xmath323 , it holds @xmath324 .",
    "in fact , we have @xmath325 where the first inequality follows from @xmath326 and the second one follows from @xmath327 for each @xmath310 ; and @xmath328 where the inequality follows from @xmath329 and @xmath330 for each @xmath310 .",
    "hence , the set of items of cardinality @xmath331 which gives the highest utility to buyer @xmath314 is @xmath332 .",
    "it holds @xmath333 thus , we can conclude that the outcome @xmath193 is envy - free and it holds @xmath334 .",
    "now we stress the fact that , in any envy - free outcome @xmath92 for @xmath238 such that @xmath335 , it must be @xmath336 .",
    "in fact , assume that there exists an envy - free outcome @xmath55 such that @xmath337 and @xmath63 for some @xmath338 , then , since @xmath339 and @xmath340 for each @xmath338 , it follows that there exists a subset of @xmath341 items @xmath180 such that @xmath342 , which contradicts the envy - freeness of @xmath55 . as a consequence of this fact and of the definition of the demand vector",
    ", it follows that each possible envy - free outcome @xmath55 for @xmath238 can only fall into one of the following three cases :    1 .",
    "@xmath336 and @xmath86 for each @xmath338 , 2 .",
    "@xmath343 and @xmath344 , 3 .",
    "@xmath345 and @xmath346 .",
    "note that , for each envy - free outcome @xmath55 falling into one of the first two cases , it holds @xmath347 .",
    "in the remaining of this proof , we will focus only on outcomes falling into case @xmath348 .",
    "first of all , we show that , if any such an outcome is envy - free , then the sum of the qualities of the items assigned to buyer @xmath349 can not exceed @xmath223 .",
    "[ lemma2 ] in any envy - free outcome @xmath55 falling into case @xmath348 , it holds @xmath350 .",
    "let @xmath55 be an envy - free outcome falling into case @xmath348 and assume , for the sake of contradiction , that @xmath351 .",
    "note that , in this case , because of lemma [ orderedqualities ] and the fact that no subset of @xmath103 items inherited from @xmath90 can sum a total quality greater than @xmath223 , @xmath301 must contain the item of quality @xmath268 and @xmath300 must contain all items of quality @xmath223 .    by the feasibility of @xmath55 , it holds @xmath352 which implies that there exists one item @xmath353 such that @xmath354 .",
    "moreover , by the envy - freeness of @xmath355 , for each @xmath310 , it holds @xmath356 which implies @xmath357 for each @xmath310 .",
    "let @xmath358 denote the item of quality @xmath268 .",
    "since @xmath359 , it follows that @xmath360 .",
    "again , by the envy - freeness of @xmath55 , for each @xmath308 , it holds @xmath361 which implies @xmath362 .",
    "define @xmath316 and let us compute the utility that buyer @xmath11 achieves if she is assigned set @xmath180 such that @xmath363 .",
    "it holds @xmath364 where the first inequality comes from the fact that , for each @xmath365 , it holds @xmath366 and @xmath362 , the fact that @xmath352 implies @xmath367 and the fact that @xmath368 for each @xmath310 , while the second inequality comes from the fact that @xmath369 and @xmath370 .",
    "hence , since there exists a subset of @xmath317 items for which buyer @xmath11 gets a strictly positive utility and buyer @xmath11 is not a winner in @xmath62 , it follows that the outcome @xmath55 can not be envy - free , a contradiction .    on the other hand ,",
    "we also show that , for any envy - free outcome @xmath55 falling into case @xmath348 , the sum of the qualities of the items assigned to buyer @xmath349 can not be smaller than @xmath223 .",
    "[ lemma3 ] in any envy - free outcome @xmath55 falling into case @xmath348 , it holds @xmath371 .",
    "let @xmath55 be an envy - free outcome falling into case @xmath348 and assume , for the sake of contradiction , that @xmath372 .    by the feasibility of @xmath55 , it holds @xmath352 which implies that there exists one item @xmath353 such that @xmath354 .",
    "moreover , by the envy - freeness of @xmath355 , for each @xmath310 , it holds @xmath356 which implies @xmath357 for each @xmath310 .",
    "define @xmath332 and let us compute the utility that buyer @xmath314 achieves if she is assigned set @xmath180 such that @xmath373 .",
    "it holds @xmath374 where the first inequality comes from the fact that @xmath352 implies @xmath367 and the fact that @xmath375 for each @xmath310 , while the second inequality comes from the fact that @xmath376 and @xmath377 .",
    "hence , since there exists a subset of @xmath331 items for which buyer @xmath314 gets a strictly positive utility and buyer @xmath314 is not a winner in @xmath62 , it follows that the outcome @xmath55 can not be envy - free , a contradiction .    as a consequence of lemmas [ lemma2 ] and [ lemma3 ]",
    ", it follows that there exists an envy - free outcome @xmath55 falling into case @xmath348 only if @xmath378 .",
    "since , as we have already observed , in such a case the item of quality @xmath268 has to belong to @xmath301 , it follows that there exists an envy - free outcome @xmath55 falling into case @xmath348 only if there are @xmath302 items inherited from @xmath90 whose sum is exactly @xmath268 , that is , only if @xmath90 admits a positive solution .",
    "any envy - free outcome not falling into case @xmath348 can raise a revenue of at most @xmath299 .",
    "hence , if there exists a positive answer to @xmath90 , then , by lemma  [ lemma1 ] , there exists a solution to @xmath238 of revenue greater than @xmath298 , while , if there is no positive answer to @xmath90 , then there exists no solution to @xmath238 of revenue more than @xmath299 .",
    "thus , if there exists an @xmath379-approximation algorithm for the rmpsd with @xmath380 , it is then possible to decide in polynomial time the constrained partition problem , thus implying p = np . since , by the definition of @xmath381 , @xmath382 and @xmath383 , the following theorem holds .",
    "[ maininapprox ] for any @xmath10 , the rmpsd can not be approximated to a factor @xmath9 unless @xmath384 .",
    "we stress that this inapproximability result heavily relies on the presence of two useless buyers , namely buyers @xmath11 and @xmath314 , who can not be winners in any envy - free solution .",
    "this situation suggests that better approximation guarantees may be possible for proper instances , as we will show in the next section .      in this subsection",
    ", we design a simple @xmath0-approximation algorithm for the generalization of the rmpsd in which the buyers have unrelated valuations .",
    "the inapproximability result given in theorem [ maininapprox ] shows that , asymptotically speaking , this is the best approximation one can hope for unless p @xmath14 np .    for each @xmath39 ,",
    "let @xmath385 be the set of the @xmath3 best items for buyer @xmath2 and define @xmath386 .",
    "let @xmath387 be the index of the buyer with the highest value @xmath388 .",
    "consider the algorithm best which returns the outcome @xmath389 such that @xmath390 , @xmath391 for each @xmath392 , @xmath393 for each @xmath394 and @xmath395 for each @xmath396 .",
    "it is easy to see that the computational complexity of algorithm best is @xmath397 .",
    "[ apxgeneral ] algorithm best returns an @xmath0-approximate solution for the rmpsd with unrelated valuations .",
    "it is easy to see that the outcome @xmath398 returned by algorithm best is feasible.in order to prove that it is also envy - free , we just need to show that , for each buyer @xmath392 with @xmath399 and each @xmath400 of cardinality @xmath3 , it holds @xmath401 .",
    "assume , for the sake of contradiction , that there exists a set @xmath402 of cardinality @xmath3 such that @xmath403 .",
    "we obtain @xmath404 which implies @xmath405 , a contradiction .",
    "hence , @xmath389 is envy - free .    as to the approximation guarantee ,",
    "note that @xmath406 .",
    "the maximum possible revenue achievable by any outcome @xmath55 , not even an envy - free one , is at most @xmath407 , which yields the claim .",
    "given a proper instance @xmath112 , denote with @xmath100 the number of different values in @xmath101 and , for each @xmath105 $ ] , let @xmath102 denote the set of buyers with the @xmath103th highest value and @xmath408 denote the value of all buyers in @xmath409 .",
    "for @xmath105 $ ] , define @xmath410 , @xmath107 , @xmath411 and @xmath412 , while , for each subset of buyers @xmath110 , define @xmath413 .",
    "let @xmath414 $ ] be the minimum index such that @xmath114 and let @xmath115 be a subset of buyers in @xmath116 such that @xmath117 in other words @xmath415 is the subset of buyers in @xmath116 that feasibly extends @xmath416 ( i.e. , such that the sum of the requested items of buyers in @xmath417 is at most @xmath0 ) and maximizes the number of allocated items .",
    "note that any instance @xmath90 for which @xmath123 does not exist can be suitably extended with a dummy buyer @xmath124 , such that @xmath125 and @xmath126 , which is equivalent in the sense that it does not change the set of envy - free outcomes of @xmath90 .",
    "hence , in this section , we will always assume that @xmath123 is well - defined for each proper instance of the rmpsd .    for our purposes",
    "we need to break ties among values of the buyers in @xmath116 in such a way that each buyer in @xmath415 comes before any buyer in @xmath418 . in order to achieve this task ,",
    "we need to explicitly compute the set of buyers @xmath415 .",
    "such a computation can be done by reducing this problem to the knapsack problem .",
    "it is easy to see that , in this case , the well - known pseudo - polynomial time algorithm for knapsack is polynomial in the dimensions of @xmath90 , as @xmath419 for every @xmath39 .",
    "because of the above discussion , from now on we can assume that ties among values of the buyers in @xmath116 are broken in such a way that each buyer in @xmath415 comes before any buyer in @xmath418 .",
    "for each @xmath420 $ ] , define @xmath421,\\\\ \\max\\{i\\in \\widetilde{a}\\ } & \\textrm {   if } k=\\delta^*. \\end{array}\\right.\\ ] ] by the definition of @xmath123 and @xmath415 and by the tie breaking rule imposed on the buyers in @xmath116 , it follows that @xmath422 for each @xmath420 $ ] .",
    "since @xmath62 is monotone , by exploiting lemma [ prezzatura ] , we only need to prove that for each buyer @xmath85 and set @xmath81 of cardinality @xmath3 , it holds @xmath425 .",
    "note that @xmath85 if and only if @xmath426 .    for each @xmath426 , it holds @xmath427 .",
    "moreover , for each @xmath4 such that @xmath428 , it holds @xmath429 .",
    "since , because of lemma [ prezzatura ] , @xmath430 for any item @xmath431 , it follows that @xmath432 for each @xmath160 .",
    "hence , for each @xmath160 , it holds @xmath433 and this concludes the proof .",
    "given an allocation vector @xmath62 , for each @xmath434 $ ] , denote with @xmath435 the set of items allocated to the buyers with the @xmath2th highest value in @xmath436 .",
    "recall that , since @xmath62 is an @xmath122-prefix of @xmath90 , it holds @xmath437 .",
    "the following lemma gives a lower bound on the revenue generated by the outcome @xmath193 .",
    "we now prove a very important result stating that the price vector @xmath306 is the best one can hope for when overpricing is not allowed .",
    "such a result , of independent interest , plays a crucial role in the proof of the approximation guarantee of the algorithm we define in this section .          for the inductive step , consider an item @xmath4 such that @xmath445 and assume the claim true for each item",
    "@xmath199 such that @xmath446 . by the envy - freeness of @xmath55",
    ", it holds @xmath447 for @xmath448 .",
    "this implies @xmath449 where the last inequality comes from the inductive hypothesis .",
    "hence , we can conclude that @xmath450 where the second equality comes from @xmath448 and @xmath451 .",
    "this completes the induction and shows the claim .",
    "we design a polynomial time algorithm computeprefix which , given a proper instance @xmath90 and a value @xmath452 $ ] , outputs the @xmath122-prefix @xmath453 such that the outcome @xmath454 achieves the highest revenue among all possible @xmath122-prefixes of @xmath90 .",
    "recall that , by definition of @xmath122-prefixes of @xmath90 , the set of buyers whose demand is to be satisfied is exactly characterized .",
    "moreover , once fixed a set of items which exactly satisfies the demands of the considered buyers , by the monotonicity of @xmath122-prefixes of @xmath90 , we know exactly which items must be assigned to each buyer .",
    "hence , in this setting , our task becomes that of determining the set of items maximizing the value @xmath455 .    to this aim , we first show that this problem reduces to that of determining , for each @xmath424 $ ] , the item @xmath74 .",
    "in fact , it holds @xmath456}\\sum_{j\\in x_i}\\left(v_i q_j -\\sum_{k = i+1}^h\\left((v_{k-1}-v_k)q_{f(k)}\\right)\\right)\\\\ & = & \\sum_{i\\in [ h]}\\left(v_i\\sum_{j\\in x_i}q_j\\right)-\\sum_{i\\in [ h]}\\left(d_i\\sum_{k = i+1}^h\\left((v_{k-1}-v_k)q_{f(k)}\\right)\\right)\\\\ & = & \\underbrace{\\sum_{i\\in [ h]}\\left(v_i\\sum_{j\\in x_i}q_j\\right)}_{t_1}-\\underbrace{\\sum_{i=2}^h\\left(\\left((v_{i-1}-v_i)q_{f(i)}\\right)\\sum_{k=1}^{i-1}d_k\\right)}_{t_2}.\\end{aligned}\\ ] ] note that only those items @xmath4 such that @xmath457 for some @xmath458 $ ] contribute to the term @xmath459 and that the per quality contribution of each item to the term @xmath460 is always strictly positive .",
    "this implies that , once fixed all the items @xmath4 such that @xmath457 for each @xmath424 $ ] , the remaining @xmath461 items to be assigned to buyer @xmath2 in each optimal outcome are exactly the items @xmath462 .",
    "because of the above discussion , we are now allowed to concentrate only on the problem of determining the set of best - quality items assigned to each buyer in @xmath99 $ ] in an optimal envy - free outcome .",
    "let us denote with @xmath463 the maximum revenue which can be achieved by an envy - free outcome in which the best - quality item of the first @xmath2 buyers have been chosen among the first @xmath4 ones .",
    "hence , @xmath463 is defined for @xmath464 and @xmath465 and has the following expression : @xmath466 where @xmath467 is the contribution that item @xmath74 gives to the revenue per each unit of quality .",
    "clearly , by definition , @xmath468 gives the maximum revenue which can be achieved by an envy - free outcome @xmath194 such that @xmath469 $ ] .",
    "such a quantity , as well as the allocation vector @xmath470 realizing it , can be computed by the following dynamic programming algorithm of complexity @xmath471 .",
    "@xmath472 : + * for each * @xmath473 * do * @xmath474 ; + * for each * @xmath475 * do * + @xmath476@xmath477 where @xmath478 ; + @xmath476@xmath479 ; + * for each * @xmath475 * do * + @xmath476 @xmath480 * do * + @xmath476@xmath476 @xmath481 * then * ; + @xmath476@xmath476@xmath476@xmath482 ; + @xmath476@xmath476 + @xmath476@xmath476@xmath476@xmath483 ; + @xmath476@xmath476@xmath476@xmath479 ; + * for each * @xmath475 * do * + @xmath476@xmath484 ; + * return * @xmath485 ;          our approximation algorithm @xmath489 for proper instances generates a set of prefixes of @xmath90 for which it computes the allocation of items yielding maximum revenue by exploiting the algorithm computeprefix as a subroutine . then , it returns the solution with the highest revenue among them .",
    "@xmath490 : + @xmath491 ; @xmath492 ; + compute @xmath415 ; + reorder the buyers in such a way that each @xmath493 comes before any @xmath494 ; + * for each * @xmath495 * do * + @xmath476@xmath496 ; + @xmath476 @xmath497 * then * + @xmath476@xmath476@xmath498 ; @xmath499 ; + * for each * @xmath500 * do * + @xmath476 @xmath501 * do * + @xmath476@xmath476reorder the buyers in @xmath502 in such a way that @xmath2 is the first buyer in @xmath502 ; + @xmath476@xmath476 @xmath503",
    "* then * @xmath504;@xmath505 + @xmath476@xmath476 @xmath506 * then * + @xmath476@xmath476@xmath476@xmath507 ; @xmath508 ; + * return * @xmath509 ;    it is easy to see that the computational complexity of algorithm @xmath489 is @xmath510 . as a major positive contribution of this work ,",
    "we show that it approximates the rmpsd to a factor @xmath11 on proper instance .",
    "let @xmath90 be a proper instance and let @xmath55 be its optimal envy - free outcome .",
    "we denote with @xmath511 the revenue of the outcome returned by algorithm @xmath489 .",
    "the proof is divided into two cases :      since @xmath512 is an @xmath122-prefix of @xmath90 , the outcome @xmath513 has to be considered by algorithm @xmath489 as a candidate solution .",
    "it follows that @xmath514 by the definition of algorithm @xmath489 and by lemma [ revenueenvyfree ] .",
    "define @xmath519 ( note that @xmath79 is well - defined because of the assumption ) and @xmath520 as the @xmath79-prefix of @xmath90 such that @xmath521 for each @xmath522 $ ] . by lemma  [ nooverprice ]",
    ", it follows that @xmath523 is an outcome without overpricing . because of our assumption , it holds @xmath524 and , by lemma  [ optimalwhennooverprice ] , it also holds @xmath525 .",
    "moreover , since @xmath526 is an @xmath79-prefix of @xmath90 , by the definition of algorithm @xmath489 and by lemma  [ subroutine ] , it holds @xmath527 which yields the claim .",
    "assume that @xmath531 and define @xmath520 as the @xmath532-prefix of @xmath90 such that @xmath521 for each @xmath533 $ ] ( note that our assumption implies that @xmath532-prefixes of @xmath90 do exist ) .",
    "by lemma  [ nooverprice ] , it follows that @xmath534 is an outcome without overpricing . because of our assumption ,",
    "it holds @xmath535 and , by lemma  [ optimalwhennooverprice ] , it also holds @xmath536 .",
    "moreover , since @xmath526 is an @xmath532-prefix of @xmath90 , by the definition of algorithm @xmath489 and by lemma  [ subroutine ] , it holds @xmath537 which yields the claim .",
    "if there does not exist an @xmath387-prefix of @xmath90 , then , @xmath539 .",
    "assume that there exists a buyer @xmath540 such that @xmath541 and @xmath542 .",
    "clearly , @xmath79-prefixes of @xmath90 do exist .",
    "define @xmath520 as the @xmath79-prefix of @xmath90 such that @xmath521 for each @xmath522 $ ] . by the definition of algorithm @xmath489 and by lemmas  [ subroutine ] and [ revenueenvyfree ]",
    ", it holds @xmath543 . on the other hand , it holds @xmath544 , where @xmath545 .",
    "moreover , @xmath546 since @xmath542 and @xmath62 is monotone .",
    "hence , we have @xmath547 which yields the claim .",
    "assume that there does not exist any buyer @xmath540 such that @xmath541 and @xmath542 .",
    "let @xmath103 be the index such that @xmath548 . in this case , by the definition of proper instances",
    ", it holds that the allocation vector @xmath520 which allocates the best - quality items to the buyers in @xmath549 and to @xmath387 is an @xmath122-prefix of @xmath90 considered by algorithm prefix at line @xmath550 for which it holds @xmath551 .",
    "hence , we have @xmath552 which yields the claim .",
    "if @xmath558 , then , by lemma [ noholes ] , it holds @xmath559 . define @xmath560 as the @xmath387-prefix of @xmath90 such that @xmath561 for each @xmath562 $ ] , i.e. , @xmath520 assigns the best - quality items to the first @xmath387 buyers .",
    "note that the set of buyers @xmath563 $ ] belongs to @xmath564 .",
    "moreover , since @xmath516 is envy - free , by lemma [ orderedqualities ] and the fact that @xmath520 assigns the first @xmath565 best - quality items to the first @xmath566 buyers , it follows that @xmath567 .",
    "this inequality , together with @xmath559 , implies that @xmath568 .      if @xmath570 , with @xmath548 for some @xmath571 $ ] , define @xmath520 as the @xmath572-prefix of @xmath90 such that @xmath561 for each @xmath573 $ ] .",
    "note that the set of buyers @xmath574 $ ] belongs to @xmath564 .",
    "moreover , since @xmath575 is envy - free , by lemma [ orderedqualities ] and the fact that @xmath520 assigns the first @xmath576 best - quality items to the first @xmath577 buyers , it follows that @xmath578 .",
    "this inequality , together with the fact that @xmath579 for each @xmath420 $ ] which comes from the definition of @xmath123 and @xmath415 , implies that @xmath580 .          for an integer @xmath255 ,",
    "consider an instance @xmath90 of the constrained partition problem with @xmath256 numbers @xmath257 such that @xmath258 and define @xmath582}\\{q_i\\}$ ] and @xmath583}\\{q_i\\}$ ] .",
    "remember that , by definition , @xmath223 is even and it holds @xmath584 .",
    "also in this case , as observed in the proof of theorem [ maininapprox ] , it holds @xmath585 for each @xmath263 $ ] .    for any @xmath13 ,",
    "define @xmath586 we create an instance @xmath238 of the rmpsd as done in the proof of theorem [ maininapprox ] with the addition of a buyer @xmath587 , with @xmath588 and @xmath589 , and @xmath590 items of quality @xmath591 .",
    "moreover , note that , in the proof of theorem [ maininapprox ] , we only needed @xmath595 in order to show that @xmath283 for each @xmath284 $ ] . hence , we can conclude that @xmath283 for each @xmath596 .",
    "it follows that , with the addition of buyer @xmath587 and the @xmath590 items of quality @xmath591 , the instance @xmath238 is now proper .",
    "the spirit of the proof is the same of that used in the one of theorem [ maininapprox ] , i.e. , we show that , if @xmath90 admits a positive answer , then there exists a solution for @xmath238 with revenue above a certain value , while , if @xmath90 admits no positive answers , then all the solutions for @xmath238 must raise a revenue below a certain other value .    first of all , let us determine the set of all possible non - empty allocation vectors able to yield an envy - free outcome . to this aim , we can claim the following set of constraints which come from the fact that @xmath283 for each @xmath596 :    1 .   since @xmath597 for each @xmath598",
    ", it must be @xmath599 ; 2 .",
    "since @xmath600 for each @xmath601 , it must be @xmath336 when @xmath602 ; 3 .",
    "since @xmath603 for each @xmath604 , it must be @xmath605 when @xmath606 ; 4 .",
    "since @xmath607 , it must be @xmath608 when @xmath609 ;        when @xmath62 falls into case @xmath615 , for any pricing vector @xmath616 such that @xmath55 is envy - free , it holds @xmath617 .",
    "when @xmath62 falls into case @xmath618 , for any pricing vector @xmath616 such that @xmath55 is envy - free , it holds @xmath619 .",
    "when @xmath62 falls into case @xmath620 , for any pricing vector @xmath616 such that @xmath55 is envy - free , it holds @xmath621 since @xmath622 .",
    "when @xmath62 falls into case @xmath348 , @xmath623 can only contain items of quality @xmath591 , the remaining item of quality @xmath591 , denote it by @xmath4 , must be assigned to @xmath300 and @xmath624 must contain an item of quality @xmath223 . for any pricing vector @xmath616 such that @xmath55 is envy - free",
    ", there must exist an item @xmath625 such that @xmath626 .",
    "moreover , it must be @xmath627 which implies @xmath628 . finally , for each item",
    "@xmath629 , it must be @xmath630 since @xmath631 .",
    "hence , it holds @xmath632 where the first strict inequality follows from @xmath633 and the second one follows from @xmath634 .",
    "consider the allocation vector @xmath512 such that @xmath623 contains the @xmath103 items of quality @xmath591 , @xmath300 contains @xmath103 items of quality @xmath223 , @xmath301 contains the item of quality @xmath268 plus the @xmath302 items forming a positive answer to @xmath90 , @xmath303 contains the @xmath271 items of quality @xmath304 and @xmath305 .",
    "note that @xmath62 is monotone .",
    "we show that the outcome @xmath193 is envy - free .      because of lemma [ prezzatura ] , in order to show that @xmath194 is envy - free , we only need to prove that , for each buyer @xmath85 and @xmath81 with @xmath313 , it holds @xmath84 .",
    "note that the buyers not belonging to @xmath64 are buyers @xmath11 and @xmath314 .    for buyer @xmath11 , for each pair of items @xmath319 with @xmath640 and @xmath641",
    ", it holds @xmath642 , for each pair of items @xmath322 with @xmath641 and @xmath359 , it holds @xmath643 and , for each pair of items @xmath644 with @xmath641 and @xmath645 , it holds @xmath646 .",
    "in fact , we have @xmath647 where the first inequality follows from @xmath648 and the second one follows from @xmath649 ; @xmath650 where the first inequality follows from @xmath651 and the second one follows from @xmath585 for each @xmath310 ; and @xmath652 where the inequality follows from @xmath651 and @xmath653 .      for buyer @xmath314 , for each pair of items @xmath319 with @xmath640 and @xmath641 , it holds @xmath321 , for each pair of items @xmath322 with @xmath641 and @xmath359 , it holds @xmath324 and , for each pair of items @xmath644 with @xmath641 and @xmath645 , it holds @xmath655 .",
    "in fact , we have @xmath656 where the first inequality follows from @xmath657 and the second one follows from @xmath649 ; @xmath658 where the first inequality follows from @xmath326 and the second one follows from @xmath585 for each @xmath310 ; and @xmath659 where the inequality follows from @xmath329 and @xmath330 for each @xmath310 .",
    "note that , in such a case , by lemma [ orderedqualities ] , @xmath623 can only contain items of quality @xmath591 . for any pricing vector @xmath616 such that @xmath55 is envy - free",
    ", there must exist an item @xmath353 such that @xmath354 .",
    "let @xmath358 be the index of the item of quality @xmath591 belonging to @xmath300 . by the envy - freeness of @xmath55",
    ", it holds @xmath664 which implies @xmath665 .",
    "clearly , since @xmath92 is envy - free , for each item @xmath640 , it must be @xmath666 since @xmath667 .",
    "hence , it holds @xmath668 because @xmath622 .",
    "since it holds @xmath669 , it follows that , either when @xmath62 falls into case @xmath636 and @xmath300 contains an item of quality @xmath591 or @xmath62 falls into one of the cases from @xmath615 to @xmath620 , for any pricing vector @xmath616 such that @xmath55 is envy - free , it holds @xmath670 .",
    "assume that @xmath671 .",
    "this can only happen when buyer @xmath349 is assigned an item of quality at least @xmath268 .",
    "in such a case , since @xmath300 does not contain any item of quality @xmath591 , it can only be the case that each item in @xmath300 is of quality @xmath223 and @xmath301 gets the item of quality @xmath268 .",
    "this means that the items allocated by @xmath512 to buyers @xmath30 , @xmath349 and @xmath672 are drawn from the same instance @xmath238 considered in the proof of theorem [ maininapprox ] .",
    "hence , we can replicate the arguments used in the proof of lemma [ lemma2 ] to show that @xmath671 yields a contradiction .",
    "similarly , assume that @xmath372 .",
    "this can only happen when the items allocated by @xmath512 to buyers @xmath349 and @xmath672 are drawn from the same instance @xmath238 considered in the proof of theorem [ maininapprox ] .",
    "hence , we can replicate the arguments used in the proof of lemma [ lemma3 ] to show that @xmath372 yields a contradiction .",
    "we can conclude that there exists an envy - free outcome @xmath355 falling into case @xmath636 in which no item of quality @xmath591 belongs to @xmath300 only if @xmath378 .",
    "since , as we have already observed , in such a case the item of quality @xmath268 has to belong to @xmath301 , it follows that there exists an envy - free outcome @xmath55 falling into case @xmath636 in which no item of quality @xmath591 belongs to @xmath300 only if there are @xmath302 items inherited from @xmath90 whose sum is exactly @xmath268 , that is , only if @xmath90 admits a positive solution .",
    "any other envy - free outcome can raise a revenue of at most @xmath673 .",
    "hence , if there exists a positive answer to @xmath90 , then , by lemma [ lemma1bis ] , there exists a solution to @xmath238 of revenue strictly greater than @xmath637 , while , if there is no positive answer to @xmath90 , then there exists no solution to @xmath238 of revenue more than @xmath673 .",
    "thus , if there exists an @xmath379-approximation algorithm for the rmpsd on continuous instances with @xmath674 , it is then possible to decide in polynomial time the constrained partition problem , thus implying @xmath384 .",
    "by @xmath675 , it follows @xmath676 which implies the claim .",
    "x. deng , y. sun , m. yin , y. zhou .",
    "mechanism design for multi - slot ads auction in sponsored search markets . in _ proceedings of the fourth international frontiers of algorithmics workshop ( faw 2010 ) _ , pp .",
    "11 - 22 .",
    "v. guruswami , j. d. hartline , a. r. karlin , d. kempe , c. kenyon , f. mcsherry . on profit - maximizing envy - free pricing . in _ proceedings of the sixteenth annual acm - siam symposium on discrete algorithms , ( soda 2005 ) _ , pp .",
    "1164 - 1173 .",
    "n. nisan , j. bayer , d. chandra , t. franji , r. gardner , y. matias , n. rhodes , m. seltzer , d. tom , h. varian , d. zigmond .",
    "google s auction for tv ads . in _ proceedings of the 36th international colloquium on automata , languages and programming ( icalp 2009 ) _ , pp .",
    "309 - 327 ."
  ],
  "abstract_text": [
    "<S> we consider the revenue maximization problem with sharp multi - demand , in which @xmath0 indivisible items have to be sold to @xmath1 potential buyers . </S>",
    "<S> each buyer @xmath2 is interested in getting exactly @xmath3 items , and each item @xmath4 gives a benefit @xmath5 to buyer @xmath2 . </S>",
    "<S> we distinguish between unrelated and related valuations . in the former case , </S>",
    "<S> the benefit @xmath5 is completely arbitrary , while , in the latter , each item @xmath4 has a quality @xmath6 , each buyer @xmath2 has a value @xmath7 and the benefit @xmath5 is defined as the product @xmath8 . </S>",
    "<S> the problem asks to determine a price for each item and an allocation of bundles of items to buyers with the aim of maximizing the total revenue , that is , the sum of the prices of all the sold items </S>",
    "<S> . the allocation must be envy - free , that is , each buyer must be happy with her assigned bundle and can not improve her utility . </S>",
    "<S> we first prove that , for related valuations , the problem can not be approximated to a factor @xmath9 , for any @xmath10 , unless p = np and that such result is asymptotically tight . </S>",
    "<S> in fact we provide a simple @xmath0-approximation algorithm even for unrelated valuations . </S>",
    "<S> we then focus on an interesting subclass of `` proper '' instances , that do not contain buyers a priori known not being able to receive any item . for such instances , </S>",
    "<S> we design an interesting @xmath11-approximation algorithm and show that no @xmath12-approximation is possible for any @xmath13 , unless p @xmath14 np . </S>",
    "<S> we observe that it is possible to efficiently check if an instance is proper , and if discarding useless buyers is allowed , an instance can be made proper in polynomial time , without worsening the value of its optimal solution . </S>"
  ]
}
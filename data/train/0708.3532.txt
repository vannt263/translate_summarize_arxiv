{
  "article_text": [
    "phenomena with large deformation and/or large rotation are very common in nature , especially in fields of hypervelocity impact and explosion .",
    "numerical simulations of such processes are necessary and challenging .",
    "the material point method(mpm ) is an extension of flip@xcite which combines the strength of eulerian and lagrangian descriptions of the material , to the solid mechanics .",
    "the lagrangian description is provided by discretizing each body by a collection of material points , and the eulerian description is based on a background computational mesh .",
    "information carried by the material points is projected on to the background mesh where equations of motion are solved .",
    "the mesh solution is then used to update the material points . in sulsky",
    "et alsulsky94,sulsky95 a weak formulation of the mpm algorithm for solid mechanics is given and the method is framed in the terms of finite elements .",
    "the mpm combines the advantages of eulerian and lagrangian methods , which can avoid the distortion of lagrangian mesh and track the boundaries of bodies .",
    "the method has been applied to the large strain problemswiechowski2004,coetzee2005 , calculations with dynamical energy release rate@xcite , fracture mechanics@xcite , dynamics failurezchen2002",
    ", zchen2003 , hypervelocity impact@xcite , the thin membranes@xcite , granular materialsbardenhagen2000,cummins2002,bardenhagen1998,bardenhagen2000 - 2 etc .    in mpm",
    ", no slip contact between bodies is contained in the basic algorithm without additional cost .",
    "but at most cases separation or sliding may happen during the moving of bodies .",
    "a contact algorithm was presented by bardenhagen , brackbill and sulsky to simulate the interactions of the grains of granular material@xcite . in the algorithm ,",
    "the contact may occur if the material points of different bodies are projected on to the same nodes of the background mesh , and the contact force is associated with the center - of - mass velocity .",
    "bardenhagen s algorithm is linear in the number of grains and allows separation , sliding and rolling . with the contact algorithm mpm",
    "has been successful in simulating the large deformation of shear in granular material , having an advantage over traditional finite element methods(fem ) in that the use of regular grid eliminates the necessity to do costly search for contact surfaces . in order to apply mpm to stress propagation in the granular material , the contact algorithm",
    "is improved by bardenhagen et al@xcite . in bardenhagen",
    "s improved contact algorithm , the normal traction is included in the contact logic to more appropriately determine the free separation criterion .    to release the no - slip contact algorithm in mpm ,",
    "a multi - mesh mapping scheme is proposed by hu and chen@xcite . in the multi - mesh mapping scheme ,",
    "each material lies in an individual background mesh rather than in the common background mesh .",
    "the meshing process of spur gears is simulated by hu and chen with their contact algorithm . to avoid interpenetration and allow separation in the gear meshing process",
    ", the normal velocity of any particle at the contact surface is calculated in the common background mesh , while the tangential velocity is found based on the corresponding information in respective individual mesh . with the proposed contact algorithm , hu and chen",
    "have successfully simulated the contact and separation of the gears . in their scheme ,",
    "normal acceleration is set to be equal if particles of different bodies are mapped on the same node .",
    "but for some cases , the bodies may separate although their particles are still mapped on the same nodes , which can cause energy dissipation during contact . in the contact algorithm by hu and chen , the friction between different bodies",
    "is completely ignored because the tangential velocities of different bodies are assumed to be independent .    in this paper ,",
    "an improved multi - mesh contact algorithm for three - dimensional mpm is proposed . in the present contact algorithm ,",
    "the criterion of contact condition is similar to bardengen s which ensures that the search for the contact of different bodies is fast , but the multi - mesh is used to calculate the normal and tangential velocities of different bodies . to avoid interpenetration",
    "the normal contact force is calculated at the contact surface and the coulomb friction is applied in the tangential direction . contrasting with bardenhagen s algorithm , both the normal and tangential contacting force",
    "are more appropriately applied to the contacting bodies at the contacting nodes of the background mesh ; contrasting with hu and chen s contact algorithm , the normal velocities of different bodies are deal with separately just as the tangential velocities to not only ensure the contact / sliding / separation procedure can be simulated but also ensure the friction between different bodies can be applied . with the presented algorithm",
    "the total energy of the system is nearly constant during both elastic and non - elastic collision procedures , which shows numerical energy dissipation is little .",
    "this paper is organized as follows .",
    "the material point method is briefly reviewed in section [ sec - mpm ] , and the new multi - mesh contact algorithm is illuminated in section [ sec - contact ] .",
    "several numerical examples are presented in section [ sec - numerical ] to validate the interaction between bodies with the contact algorithm .",
    "numerical results obtained by the proposed contact algorithm presented are compared with those obtained by bardenhagen s contact algorithm which show the proposed algorithm is more suitable in solving collision problems in which the numerical energy dissipation need to be very low .",
    "section sec - con concludes the paper with some remarks and observations .",
    "the mpm is a particle method based on particle - in - cell(pic ) method in computational fluid mechanics .",
    "the method was initially developed for and has been successfully applied in problems involving large - deformation , large rotations of solid , etc . for continuum bodies ,",
    "the conservation equation for mass is @xmath0 and for pure mechanical problems the differential equation of balance is @xmath1 where @xmath2 is the mass density , @xmath3 is the velocity , @xmath4 is the stress tensor and @xmath5 is the body force .    the formulation is solved in a lagrangian frame on a finite element mesh .",
    "the lagrangian formulation means that the momentum equation does not contain the convection term which can cause significant numerical error in pure eulerian approaches .    in mpm",
    ", the continuum bodies are discretized with @xmath6 material particles .",
    "each material particle carries the information of position , velocity , mass , density , stress , strain and all other internal state variables necessary for the constitutive model . since the mass of each material particle is equal and fixed , eq . is automatically satisfied . at each time step ,",
    "the mass and velocities of the material particles are mapped onto the background computational mesh(grid ) .",
    "the mapped nodal velocity @xmath7 is obtained through the following equation , @xmath8 where @xmath9 , @xmath10 and @xmath11 are the mass , velocity and position of particle @xmath12 , separately .",
    "@xmath13 is the element shape function , @xmath14 and @xmath15 indexes of node . for three - dimensional problem ,",
    "a eight - node cell is employed with the shape functions given by @xmath16 where @xmath17 , @xmath18 and @xmath19 are the natural coordinates of a material particle in the cell along the x- , y- and z - directions , @xmath20 , @xmath21 and @xmath22 are the natural coordinates of the node @xmath23 in the cell along the three directions .    in the eq .",
    ", the consistent mass matrix , @xmath24 , is @xmath25 in practice , we generally replace @xmath24 with a lumped , diagonal mass matrix so that eq .",
    "becomes @xmath26 where lumped mass is @xmath27    after the information is mapped from material particles to mesh nodes , the discrete formulation of eq . on the mesh nodes can be obtained , as described below .",
    "the weak form of eq . can be found , based on the standard procedure used in the finite element method ,    @xmath28    where @xmath29 is the domain to be solved , @xmath30 is the traction boundary , @xmath31 is the stress tensor , @xmath32 is the external force vector and @xmath5 is the body force vector .",
    "since the continuum bodies is described with the use of a finite set of material particles , the mass density can be written as , @xmath33 where @xmath34 is the dirac delta function with dimension of the inverse of volume .",
    "the substitution of eq . into eq . converts the integral to the sums of quantities evaluated at the material particles , namely ,    @xmath35    where @xmath36 is the lumped mass , @xmath37 and @xmath38 are the external force vector and internal force vector which read separately    @xmath39    where the vector @xmath40 is the contact force which is the external nodal force not including the body force and is illustrated in the following section .",
    "an explicit time integrator is used to solve eq . for the nodal accelerations , with the time step satisfying the stability condition .",
    "the critical time step is the ratio of the smallest cell size to the wave speed .",
    "after the equations of motion are solved on the cell nodes , the new nodal values of acceleration are used to update the velocity of the material particles . the strain increment for each material particle",
    "is determined with the use of gradient of the nodal basis function evaluated at the material particle position .",
    "the corresponding stress increment can be found from the constitutive model .",
    "the internal state variables can also be completely updated .",
    "the computational mesh may be discarded , and a new mesh is defined , if desired for the next time step . as a result , an effective computational mesh could be chosen for convenience .",
    "the mpm with a natural no - slip contact algorithm is based on a common background mesh . as a result , it is impossible to separate the contacting bodies .",
    "bardenhagen et al.@xcite have proposed a contact algorithm in which the contact between bodies is handled when the velocity field of an individual particle differs from the single , center - of - mass velocity field in the cell containing contacting particles .",
    "their contact algorithm was incorporated into the mpm to simulate the interactions in granular materials based on the velocity field .    in this section",
    ", we will improve the multi - mesh contact algorithm which recovers more faithfully the opposite acting forces between contacting bodies . in mpm",
    ", several bodies may be mapped on to the same nodes of the background mesh , so it is necessary to define a multi - value of velocity and mass on every node . in practice , it is impossible that the number of values defined at one node is as many as the number of bodies , otherwise the memory of computer will be too much wasted if there are thousands of bodies to be simulated . in this paper",
    "we define four values on every node .",
    "that is to say , there are at most four bodies mapped on to the same nodes , although there can be thousands of bodies in the whole domain . in that case , each node has a mesh mass @xmath41 and momentum @xmath42 associated with it , where @xmath43 ranges from one to four and the mesh velocity @xmath44 can be obtained from the mesh momentum and the mass , @xmath45note that if the mesh mass @xmath41 is close to zero , the obtained mesh velocity maybe singular which will cause error during the calculations . in this paper , to avoid the singularity , the shape function is altered , if @xmath46 , @xmath47 or @xmath48 is small than @xmath49 or larger than @xmath50 that means the material point is too close to the node , @xmath51 , @xmath47 or @xmath52 is adjusted to @xmath49 or @xmath50 . since the shape functions have compact support , only those nodes in the vicinity of the bodies will have a meaningful velocity and the body velocity at other nodes will be zero .    obviously , if the momenta of two bodies are projected on to the same node , the contact may occur and the contact between bodies @xmath53 and @xmath54 is directed by comparing the fields @xmath55 and @xmath56 which are determined by using mass weighting given in eq . ,",
    "@xmath57 where @xmath58 is the unit outward normal at node @xmath23 along the boundary .",
    "multiply eq . with @xmath59 ,",
    "it can be written as , @xmath60 if eq .",
    "is satisfied , the velocities of body @xmath53 and body @xmath54 are adjusted to new values @xmath61 and @xmath62 so that @xmath63 holds .",
    "that is , the normal components of velocity of body @xmath53 and body @xmath54 are set to be equal .",
    "eq . can also be written as @xmath64 as a reasonable contact algorithm , the momentum is required to be unaltered , i.e. , @xmath65 from eqs . and the updated mesh momenta are obtained , @xmath66 @xmath67 so the updated mesh velocities are : @xmath68 @xmath69 especially , if body @xmath54 is a rigid wall , we set the value of @xmath70 much larger than that of @xmath71 .",
    "thus eq . and",
    "eq . can be reduced to : @xmath72 @xmath73 obviously , the velocity of rigid body @xmath54 is not altered during the contact .    the equations and determining the velocities are identical to that by bardenhagenbardenhagen2000 and in practice they are same , but the calculation of the normal and tangential contact forces makes the difference which will be described as following are different .",
    "once bodies @xmath53 and @xmath54 contact , they move together along the normal until they separate when the contact condition expressed in eq .",
    "is not satisfied .",
    "so the acceleration along the normal of body @xmath53 is equal to that of @xmath54 during the course of the contact .",
    "that is @xmath74 where @xmath75 and @xmath76 are the accelerations of bodies @xmath53 and @xmath54 at node @xmath23 , respectively",
    ". they can be obtained from the newtonian second law , @xmath77 @xmath78 where @xmath79 is the normal contact force between body @xmath53 and body @xmath54 at node @xmath23 , which can be obtained from eq .",
    " , @xmath80    note that the normal contact force must be nonnegative .",
    "so once @xmath81 is negative , it is set to be zero . that is @xmath82 where @xmath83 .",
    "for the cases @xmath81 in eq . is positive , the contacting bodies at time @xmath84 may still contact in the next time step although the criterion of contact in eq . is not satisfied , so the contact condition should be applied in the next time step .",
    "the contact force in the bardenhagen s contact algorithm is calculated as @xmath85 / \\delta t \\label{eq - contact - rate-8a}\\ ] ] where @xmath86 is the center - of - mass velocity at node @xmath23 .",
    "actually , the normal contact force may still be very large even if the normal velocities of different bodies at contact nodes are same during the course of contacting . the normal contact force calculated by",
    "is not physical and may cause numerical energy dissipation which will be shown in the next section .    when without friction , the contact algorithm has been finished up to now . in the case with friction ,",
    "the frictional slip is accomplished by adjusting the tangential component . to apply coulomb friction ,",
    "we first calculate the force necessary to cause the bodies to stick together completely .",
    "again , the comparison of the mesh velocity of body @xmath53 to that of body @xmath54 provides exactly the correct constraint for no - slip contact if body @xmath53 and body @xmath54 contact , the relative tangential velocity is @xmath87 where @xmath88 is the unit tangential at node @xmath23 along the boundary , @xmath89    to get an appropriate frictional force allowing slip , we start from the non - slip condition .",
    "the tangential velocities of body @xmath53 and body @xmath54 must be set to be equal after one time step @xmath90 .",
    "suppose the tangential contact force is @xmath91 .",
    "it should satisfy @xmath92 then the needed constraining tangential force @xmath91 is @xmath93 the expected frictional force should equal to @xmath91 if the latter is small , and be proportional to the magnitude of the normal force and independent of the contact area if @xmath91 exceed a specified value .",
    "that is to say , the frictional force just balances the tangential force to prevent relative tangential motion when the latter is small .",
    "when the latter is large , we limit the frictional force to have a magnitude less than it to allow tangential slip between the contacting bodies .",
    "the direction of the frictional force is chosen as in to oppose the relative motion .",
    "putting these requirements together yields , @xmath94 where @xmath95 is the coefficient of friction . to complete the formulation of the contact algorithm ,",
    "a value @xmath58 of the normal at node @xmath23 of the computational mesh for the contacting bodies @xmath53 and @xmath54 is still needed . as an approximation ,",
    "the following algorithm is presented to determine the normal value ,    1 .",
    "if bodies @xmath53 and @xmath54 contact at node @xmath23 , initialize vectors @xmath96 and @xmath97 as zero . 2 .",
    "search within the eight cells(for three - dimensional cases ) around the node .",
    "if cell @xmath15 possesses particles belonging to body @xmath53 ( or @xmath54 ) , calculate the difference of coordinates between the node @xmath23 and the center of cell @xmath15 , @xmath98 , then add the difference to vector @xmath99 ( or @xmath100 ) .",
    "3 .   calculate the difference between the vectors @xmath96 and @xmath97 , then set the difference as the value of @xmath58 . finally , unitize @xmath58 .",
    "finally , we summarize the material point method with the new multi - mesh contact algorithm presented in this paper as follows :    1 .   get the particle mass @xmath101 , position @xmath102,velocity @xmath103 , density @xmath104 , and stress @xmath4 ; form the lumped mass matrix(eq . ) and nodal momentum(eq . ) .",
    "2 .   loop over the mesh nodes , if two bodies contact at node @xmath23 , adjust the nodal momenta of the contacting bodies(eq . , eq . ) .",
    "3 .   calculate the rate of the deformation gradient for each particle , compute the increment of strain using an appropriate strain measure and solve constitutive equations to update the stress , @xmath105 .",
    "4 .   form the internal force ( eq . ) .",
    "calculate the contact force between bodies and form the external force(eq . )",
    "solve the momentum equations for the nodal accelerations and get the velocity in a lagrangian frame : @xmath106= \\delta t [ ( \\mathbf{f}_i)^{\\mathrm{int } } + ( \\mathbf{f}_i)^{\\mathrm{ext } } ]   \\label{eq - pmp - solve-2}\\ ] ] 6 .",
    "update the solution at the material point by mapping the nodal values using the element shape functions .",
    "positions and velocities are updated according to @xmath107 and @xmath108n_i(\\mathbf{x}_p ) } \\label{eq - pmp - velo - update}\\ ] ] 7 .",
    "define a new finite element mesh if necessary , and return to step 1 to begin a new time step .",
    "numerical simulations presented in this section are carried out in three dimension .",
    "the first set of simulation involves a cylinder rolling on an inclined rigid plane and is meant as simple illustration and validation of the friction algorithms presented by bardenhagen et al . and by us .",
    "the second set involves the collision of two elastic spheres and is to examine the efficiency of the multi - mesh contact algorithm proposed in this paper .",
    "the third set involves a copper taylor bar impacting to a rigid wall .",
    "the last example is to simulate the process of the collision between four identical spheres .",
    "the last two examples examine the conservation of energy during the collision is checked .",
    "fig [ fig1 ] shows the plane geometry for a computation with a cylinder on an inclined plane . in this example , the plane inclined at an angel @xmath109 with respect to the horizontal line , while the gravity @xmath110 is vertically downward .",
    "a rigid cylinder on an inclined surface will roll , or slip depending on the angle of inclination and friction coefficient . specifically ,",
    "if @xmath111 , the cylinder will roll and slip ; otherwise the cylinder will roll without slipping , where @xmath95 is the coefficient of friction . for an initially stationary , rigid cylinder ,",
    "the @xmath112-component and the center - of - mass position as a function of time , @xmath113 , is given by @xmath114 in eq .",
    ", @xmath115 is the @xmath116component of the initial center - of - mass position , and @xmath117 is the magnitude of the gravitational acceleration .",
    "simulation is performed with a cylinder that has the radius @xmath118 , thickness @xmath119 , and gravitational acceleration with magnitude @xmath120 .",
    "the computational domain is cubic with side length length @xmath121 and @xmath122 , respectively .",
    "the cell size is @xmath123 so there are only eight and two computational elements across the diameter and the thickness of the cylinder , respectively .",
    "the simulation involves a elastic , deformable cylinder with elastic modulus @xmath124mpa , poisson ratio 0.35 and density @xmath125 .",
    "the inclined plane is discretized as a rigid body with @xmath126 , @xmath127 and @xmath128 material points , respectively , and there is only one material point in one cell .",
    "[ fig2 ] shows the center - of - mass position of the cylinder as a function of time for three values of angel of inclination , @xmath129 , @xmath130 and @xmath131 , respectively , and the coefficient of friction fixed at @xmath132 .",
    "the symbols represent simulation results , and lines represent analytical ones .",
    "[ fig2](@xmath133 ) shows the results of our contact algorithm while fig .",
    "[ fig2](@xmath134 ) shows those of contact algorithm by bardenhagen . for cases with large inclination angle",
    "the results of both contact algorithms agree well with analytical solutions .",
    "but when the inclination angle is small , results of our contact algorithm are much better .    , the angles of inclination , @xmath135 , @xmath136 and @xmath137 , respectively .",
    "the symbols represent simulation results while lines represent analytical ones .",
    "( @xmath133)our contact algorithm,(@xmath134 ) contact algorithm by bardenhagen.,scaledwidth=100.0% ]    in the next test , the value of angle of inclination is fixed at @xmath138 and the coefficient of friction is varied , @xmath139 and @xmath140 . fig .",
    "[ fig3 ] shows the center - of - mass position of the cylinder as a function of time for each simulation and the corresponding exact solution for a rigid cylinder .",
    "the computed results for the deformable cylinders agree well with the analytical solutions , and as before , the computed curves obtained with our contact algorithm are much more closer to the analytical curves than those by bardenhagen s algorithm .    , and coefficient of friction , @xmath141 , @xmath142 , respectively .",
    "the symbols represent simulation results while lines represent analytical ones .",
    "( @xmath133 ) our contact algorithm , ( @xmath134 ) algorithm by bardenhagen.,scaledwidth=100.0% ]    fig .",
    "[ fig4 ] shows simulation results for different mesh sizes . in this test",
    ", the angle of inclination is fixed at @xmath130 and the coefficient of friction is fixed at @xmath132 .",
    "the side length of the cubic computational elements is varied , @xmath122 , @xmath143 and @xmath123 , respectively .",
    "[ fig4](@xmath133 ) shows the results of our contact algorithm while fig .",
    "[ fig4](@xmath134 ) shows those of bardenhagen s .",
    "it is clear that the simulation results converge to the analytical ones with the decrease of the mesh size .",
    "the agreement between results by our contact algorithm agree better with analytical ones than those by bardenhagen s scheme in the later time .    , coefficient of friction is @xmath144 and side lengths of cells are @xmath122 , @xmath143 and @xmath123 , respectively .",
    "( @xmath133 ) our algorithm , ( @xmath134 ) algorithm by bardenhagen.,scaledwidth=100.0% ]      in this section , the impact of two elastic spheres is simulated to test the conservation of the energy during the impact with the contact algorithm .",
    "the variables are all dimensionless in this example .",
    "the spheres start from the left side and the center of the computational domain with initial velocities @xmath145 and @xmath146 , respectively . the computational domain is a cube whose sides along the @xmath112 , @xmath147 and @xmath148 direction are @xmath149 , @xmath150 and @xmath150 , respectively , and cubic meshes are used with side length @xmath151 .",
    "eight material points are used per element .",
    "the spheres have a radius of @xmath128 , young s modulus of @xmath152 , a poisson s ratio of @xmath153 and a density of @xmath154 .",
    "the distance between the center of first sphere and that of the second sphere is 14 .",
    "the simulation is run up to a final time @xmath155 .",
    "the results from our contact algorithm are shown in fig.[fig5 ] . as a comparison ,",
    "the results from the contact algorithm by bardenhagen are shown in fig.[fig6 ] . in order to show the moving of spheres clearly",
    ", only the central layer of the 3d configuration is shown .",
    "the nonlinear constitution for large - deformation is used . in these figures , ( @xmath133)show the two spheres at time",
    "@xmath156 when they just begin to travel through the grid , ( @xmath134)show the impact of spheres at time @xmath157 and ( @xmath158)show the spheres at time @xmath159 . from fig.[fig5 ] ( @xmath158 ) we find two spheres separate , and the left one is almost immobile and the right one moves with nearly the same kinetic energy as the initial kinetic energy of left one .",
    "but in fig.fig6 ( @xmath158 ) the two spheres move forward together , which is unphysical .",
    "fig.[fig7 ] shows the kinetic , potential and total energies as a function of time in which ( @xmath133 ) shows the results of our contact algorithm while ( @xmath134 ) shows those of bardenhagen s . from fig .",
    "[ fig7](@xmath133 ) we find the kinetic energy decreases during the impact and recovers after the spheres separate .",
    "the potential energy ( broken line ) begin to accumulate upon impact of spheres , reaches its maximum value at the point with maximum deformation during impact , then decreases to a small mount associated with the free vibration of the spheres after separation .",
    "the total energy(solid line ) is approximately constant . in fig .",
    "[ fig7](@xmath134 ) , the kinetic energy decreases during the impact but does nt recover to the original one ; the potential energy begin to increase when the contact begins , then reaches its a maximum value , and does not decrease . total energy shown in fig .",
    "[ fig7](@xmath134 ) is not constant , which shows a strong numerical dissipation during the course of impact .    ) and ( @xmath134 ) , respectively .",
    ", scaledwidth=60.0% ]      the classical taylor bar problem is considered .",
    "this is a commonly simulated problem and is often used as a benchmark for transient dynamics computer codes . a copper bar of radius @xmath160 and length @xmath161 impacts on a rigid , frictionless wall with an initial longitudinal velocity of @xmath162 .",
    "the material is modeled as elastoplastic with young s modulus @xmath163 , poisson @xmath164 , the yield stress is @xmath165 and linear hardening is assumed with @xmath166 .",
    "the material has a density of @xmath167 . in order to compare the computed results to those of experiments , we use the following estimation of error given by g. r. johnson@xcite : @xmath168where @xmath169 and @xmath170 are the length and diameter of the bottom after the impact , respectively , as shown in fig .",
    "@xmath171 is the diameters of the layer which is @xmath172 to the bottom",
    ".    the bar moves within the cubic domain @xmath173\\times [ -10.4,10.4]\\times[-2,36]$ ] , meshed by @xmath174 elements .",
    "for the initial construction of the bar , there are @xmath175 material points in every cell , and for the rigid wall there is only one material point .",
    "the unit of coordinate is millimeter .",
    "the terminal time is @xmath176 .",
    "[ fig9 ] shows the kinetic , potential and total energy as a function of time , where the contact algorithm presented by us(fig . [ fig9](@xmath133 ) ) and by badenhagen(fig .",
    "[ fig9](@xmath134 ) ) are used . in fig .",
    "[ fig9](@xmath133 ) , the kinetic energy decreases during the impact and is totally converted to potential energy at the end . the total energy is constant during the whole time . in fig .",
    "[ fig9](@xmath134 ) , the energy is dissipated during the impact .",
    "table [ table - taylor-1 ] shows the comparison between the computed results and experimental ones , where mpm1 is mpm with our contact algorithm and mpm2 is mpm with contact algorithm presented by bardenhagen .",
    "the results by mpm1 agree better with experimental ones .",
    ".the comparison between the computed results and experimental ones [ cols=\"^,^,^,^,^\",options=\"header \" , ]     fig .",
    "[ fig10 ] shows the final particle configuration , colored by contour values of equivalent plastic strain obtained with mpm1 .",
    "[ fig10](@xmath133 ) shows three - dimensional view while fig .",
    "[ fig10](@xmath134 ) shows the center layer of fig . [",
    "fig10](@xmath133 ) vertically to the rigid wall .",
    "the last example simulates the impact of four identical copper spheres with the contact algorithm presented in this paper .",
    "the material parameters of spheres are the same as those of last example .",
    "the radius of the spheres is @xmath123 .",
    "initially , one of the spheres locates at @xmath177 and travels with a velocity @xmath178 parallel to the @xmath148 axis ; the other three spheres locate at @xmath179 , @xmath180 and @xmath181 are at rest .",
    "the unit of coordinate is millimeter .",
    "the spheres moves within the cubic domain @xmath182\\times [ -50,50]\\times[-50,50]$ ] , meshed by @xmath183 elements .",
    "[ fig11 ] shows the kinetic , potential and total energy as a function of time .",
    "the kinetic energy decreases during the impact and part of the kinetic energy is converted to potential energy during the impact .",
    "the total energy is a constant during the whole time .",
    "fig.[fig12](@xmath133)(@xmath158 ) show the particle configurations of different time , colored by contour value of equivalent plastic strain . from blue to red the plastic strain increases and correspondingly the possible temperature increment becomes larger .",
    "[ fig12](@xmath133 ) shows the initial particle configuration at @xmath184 .",
    "[ fig12](@xmath134 ) shows the particle configuration at @xmath185 when the upper sphere just impact to the lower three ones .",
    "[ fig12](@xmath158 ) show the particle configuration at @xmath186 when they separate .",
    "a new multi - mesh contact algorithm for three - dimensional material point method is presented .",
    "the contact algorithm faithfully recovers the opposite acting forces between colliding bodies .",
    "collision procedures between regular bodies and/or rigid bodies can be treated within the same framework .",
    "a multi - value of momentum and mass is defined on every node to describe the contact / sliding / separation procedure .",
    "both normal and tangential velocities of each particle at the contact surface are calculated in respective individual mesh .",
    "a coulomb friction is applied to describe the sliding or slipping between the contacting bodies .",
    "the efficiency of the contact algorithm is linearly related to the number of the contacting bodies because the overlapped nodes are labeled by sweeping the material particles of all bodies when the nodal momentum and mass are formed in every time step .",
    "numerical simulation shows that our contact algorithm possesses high accuracy and low numerical energy dissipation , which is very important for solving collision problems .",
    "we warmly thank g. bardenhagen , haifeng liu , song jiang , xingping liu , xijun yu , zhijun shen , yangjun ying , guoxi ni , and yun xu for helpful discussions ."
  ],
  "abstract_text": [
    "<S> contact algorithm between different bodies plays an important role in solving collision problems . </S>",
    "<S> usually it is not easy to be treated very well . </S>",
    "<S> several ones for material point method were proposed by bardenhangen , brackbill , and sulsky@xcite , hu and chen@xcite . </S>",
    "<S> an improved one for three - dimensional material point method is presented in this paper . </S>",
    "<S> the improved algorithm emphasizes the energy conservation of the system and faithfully recovers opposite acting forces between contacting bodies . contrasted to the one by bardenhagen , both the normal and tangential contacting forces </S>",
    "<S> are more appropriately applied to the contacting bodies via the contacting nodes of the background mesh ; contrasted to the one by hu and chen , not only the tangential velocities but also the normal ones are handled separately in respective individual mesh . </S>",
    "<S> this treatment ensures not only the contact / sliding / separation procedure but also the friction between contacting bodies are recovered . the presented contact algorithm is validated via numerical experiments including rolling simulation , impact of elastic spheres , impact of a taylor bar and impact of plastic spheres . </S>",
    "<S> the numerical results show that the multi - mesh material point method with the improved contact algorithm is more suitable for solving collision problems . </S>"
  ]
}
{
  "article_text": [
    "the _ abelian complexity _ of a word @xmath10 is a function @xmath11 that counts the number of pairwise non - abelian - equivalent factors of @xmath10 of length @xmath3 .",
    "the term was introduced by richomme , saari and zamboni @xcite in 2009 , and since then it has been extensively studied  @xcite . in one of the first papers on the subject , richomme , saari and zamboni  @xcite examined the tribonacci word @xmath12 http://oeis.org/a080843 [ ] , which is the fixed point of the substitution @xmath13 , @xmath14 , @xmath15 , and they showed that @xmath16 for all @xmath3 .",
    "they also characterized those @xmath3 for which @xmath17 , and proposed the following open problem : _ for each @xmath18 , characterize those @xmath3 for which @xmath19_.    explicit characterization of @xmath20 of a given infinite word @xmath10 is generally a difficult task , particularly in case of words defined over alphabets consisting of more than two letters .",
    "for example , despite the fact that a recurrent word over a ternary alphabet with constant abelian complexity equal to @xmath21 for all @xmath22 has been already constructed  @xcite , there seems to be no other nontrivial example to date of a recurrent @xmath23-ary word with @xmath24 whose abelian complexity function has been precisely determined .",
    "in particular , the problem of precise characterization of the abelian complexity @xmath25 of the tribonacci word @xmath12 , which is a ternary word , has remained open since 2009 .",
    "recently mousavi and shallit  @xcite showed that many properties of the tribonacci word , such as the aperiodicity , powers , palindromes etc .",
    ", could be examined purely mechanically with the help of finite automata .",
    "although in principle their method could also be used for the study of the characteristics of the abelian complexity function of the tribonacci word , it turns out to be not computationally feasible . in this paper",
    "we propose a related method that is particularly designed for dealing with abelian properties ( primarily with abelian complexity and the balance properties ) .",
    "our approach is less general than the one of mousavi and shallit , but it is efficient enough to explicitly obtain a finite automaton that computes the function @xmath25 . the automaton in question features a very small set of states , consisting of less than @xmath26 elements .",
    "consequently , it can be easily implemented on any computer ( a powerful machine is not needed ) , and the calculation can be even performed by hand . the automaton takes the tribonacci representation of @xmath3 as its input , which means that the sequence @xmath27 http://oeis.org/a216190 [ ] is @xmath28-automatic ( or `` tribonacci - automatic '' ) in the sense of shallit  @xcite .",
    "our approach relies on the technique of abelian co - decomposition  @xcite , which was originally developed as a tool for proving that the abelian complexity of a recurrent word attains a certain value infinitely often . as a result",
    ", our construction of the automaton can be generalized to certain other words as well .",
    "the paper is organized as follows . in section  [ sect.preliminaries ]",
    "we provide the necessary notation related to abelian complexity , the tribonacci word and finite automata .",
    "section  [ sect.codecomposition ] summarizes basic facts about abelian co - decomposition .",
    "section  [ sect.z ] contains the core of the paper : we show that there exists a finite number of sets @xmath29 such that each @xmath22 can be associated with a certain @xmath30 via the tribonacci representation of @xmath3 .",
    "since each of those sets is related to a certain value of the abelian complexity , the indices @xmath31 can be regarded as states of a finite automaton that evaluates @xmath25 .",
    "section  [ sect.range ] is devoted to the first and easy application of the findings from section  [ sect.z ] : we demonstrate that the abelian complexity of the tribonacci word takes values in @xmath32 .",
    "although this fact is already known  @xcite , it illustrates the applicability of our approach .",
    "the main result of the paper is presented in section  [ sect.eval.ac ] .",
    "we derive a formula for evaluating the abelian complexity of the tribonacci word on the basis of results of section  [ sect.z ] .",
    "in particular , we show that the abelian complexity can be calculated by a finite automaton with @xmath33 states .",
    "this result is further improved in section  [ sect.simplified ] , where the size of the automaton is reduced from @xmath33 to @xmath34 states .",
    "it is easy to transform this automaton into an automaton that decides , for any @xmath22 , whether @xmath25 attains a given value @xmath35 , which provides a solution of the problem of richomme et al . in section  [ sect.mbon ] , we demonstrate that the method allows one to examine the abelian complexity function of other @xmath23-bonacci words . in particular , we present results on the @xmath9-bonacci word ; they show that the abelian complexity of @xmath23-bonacci words gains new properties when @xmath23 exceeds @xmath21 .",
    "the paper is concluded by section  [ sect.conclusions ] , in which we discuss other applications and generalizations of the method .",
    "let us consider a set @xmath36 ( _ alphabet _ ) consisting of @xmath23 symbols ( _ letters _ ) @xmath37 .",
    "concatenations of letters from @xmath38 are called _",
    "words_. let @xmath39 denote the free monoid of all finite words over @xmath38 including the empty word @xmath40 .",
    "the _ length _ of a word @xmath41 is the number of its letters , @xmath42 .",
    "the symbol @xmath43 for @xmath44 and @xmath45 stands for the number of occurrences of the letter @xmath46 in the word @xmath47 .",
    "the set of all infinite words over @xmath38 is denoted by @xmath48 .",
    "we say that an infinite word @xmath10 is _ recurrent _ if every factor of @xmath10 occurs infinitely many times in @xmath10 .",
    "a finite word @xmath47 is a _ factor _ of a ( finite or infinite ) word @xmath10 if there exists a finite word @xmath49 and a ( finite or infinite , respectively ) word @xmath50 such that @xmath51 .",
    "if @xmath52 , the factor @xmath47 is called a _ prefix _ of @xmath10 .    for any word @xmath45 and @xmath53",
    "we write @xmath54 . similarly , we set @xmath55 .",
    "if a word @xmath56 has the prefix @xmath57 for @xmath53 , then the symbol @xmath58 stands for the word satisfying @xmath59 .",
    "the _ parikh vector _ of @xmath47 is the @xmath23-tuple @xmath60 ; note that @xmath61 . for",
    "any given infinite word @xmath10 , let @xmath62 denote the set of all parikh vectors corresponding to factors of @xmath10 having the length @xmath3 , i.e. , @xmath63 the _ abelian complexity _ of a word @xmath10 is the function @xmath64 defined as @xmath65 where @xmath66 denotes the cardinality .",
    "it is useful to introduce the _ relative parikh vector _",
    "@xcite , which is defined for any factor @xmath47 of @xmath10 of length @xmath3 as @xmath67})\\,,\\ ] ] where @xmath68}$ ] is the prefix of @xmath10 of length @xmath3 .",
    "since the subtrahend @xmath69})$ ] depends only on the length of @xmath47 and not on @xmath47 itself , the set of relative parikh vectors corresponding to the length @xmath3 , @xmath70 has the same cardinality as @xmath71 .",
    "hence we obtain , with regard to  , @xmath72    an infinite word @xmath10 is said to be _",
    "@xmath73-balanced _ for a certain @xmath74 if for every @xmath44 and for every pair of factors @xmath75 , @xmath47 of @xmath10 such that @xmath76 , the inequality @xmath77 holds .",
    "if @xmath10 is a @xmath73-balanced word , the components of relative parikh vectors are bounded by @xmath73  @xcite .",
    "therefore , the set of all relative parikh vectors @xmath78 is finite for any @xmath73-balanced word @xmath10 .",
    "this paper is primarily concerned with the _ tribonacci word _",
    "@xmath12 , which is defined over the alphabet @xmath79 as the fixed point of the substitution @xmath80 i.e. , @xmath81 it is easy to check that @xmath82 for every @xmath83 .",
    "hence , the lengths of factors @xmath84 satisfy the recurrence relation @xmath85 . comparing this relation with the tribonacci recurrence relation @xmath86",
    ", we conclude that @xmath87 for every @xmath88 , where @xmath89 is the sequence of tribonacci numbers http://oeis.org/a000073 [ ] .",
    "any @xmath22 can be written as a sum of tribonacci numbers with binary coefficients , @xmath90 if coefficients @xmath91 are obtained by the greedy algorithm , they form the _ normal @xmath28-representation _ ( also called the _ tribonacci representation _ ) of @xmath3 , which we denote by the symbol @xmath92 : @xmath93 for @xmath94 , we have @xmath95 . table  [ t expansions ] shows normal @xmath28-representations of several small integers .",
    ".normal @xmath28-representations of the numbers @xmath96 .",
    "[ cols=\"^,>,^,>,^,>,^,>,^,>\",options=\"header \" , ]     let us summarize the results obtained on the @xmath9-bonacci word .    the abelian complexity function of the @xmath9-bonacci word has the following properties .",
    "* @xmath97 .",
    "* @xmath98 if and only if @xmath99 is a prefix of @xmath100 . * @xmath101 if and only if @xmath102 .",
    "* for every value @xmath103 there exist infinitely many integers @xmath22 such that @xmath104 .",
    "we are convinced that the existence of gaps in the range of the abelian complexity function , as well as the existence of values that are attained only finitely many times , are common properties of all @xmath23-bonacci words with @xmath105 .",
    "we finish the section by a remark on the minimal value of the abelian complexity function of the @xmath23-bonacci word for a general @xmath23 .",
    "let @xmath10 be an @xmath23-bonacci word . one can easily show that for every @xmath22 and @xmath106 , the factor @xmath107}$ ] is a factor of @xmath10 , thus @xmath108 . at the same time we have @xmath109 . to sum up , @xmath110 for any @xmath23-bonacci word .",
    "results of k.  binda s calculations  @xcite together with proven formulas   and suggest a conjecture on a precise characterization of the numbers for which the abelian complexity function of an @xmath23-bonacci word @xmath10 attains its minimum : @xmath111 the symbol @xmath112 stands here for the @xmath23-bonacci representation of @xmath3 .",
    "we are able to prove the implication @xmath113 in   for a general @xmath23 by the abelian co - decomposition method , introduced earlier  @xcite .",
    "the implication @xmath114 remains so far open , although we expect that it is probably not difficult to be proven either .",
    "in this paper we focused on the abelian complexity of the tribonacci word ( or , more generally , @xmath23-bonacci words ) , but the method can be easily adapted for application on any simple parry word .",
    "let us consider the fixed point @xmath10 of a substitution  .",
    "the calculation naturally takes advantage of the numeration system associated with @xmath115 , i.e. , of the normal @xmath116-representation for @xmath117 .",
    "let us briefly sketch the procedure .",
    "first of all , for the sake of generality , we slightly reformulate the definition of @xmath118 by imposing an additional technical assumption on the decomposition  .",
    "namely , we assume that for every @xmath119 , the factor @xmath120 has the prefix @xmath121 , and require that @xmath122 is maximal subject to this condition .",
    "we also need to introduce maps @xmath123 , defined in a way analogous to equations  , i.e. , @xmath124 the search for sets @xmath29 starts with calculating @xmath125 by formula   for every @xmath126 .",
    "then we take the bunch of sets @xmath127 , which we denote by @xmath128 , and apply the maps @xmath123 on each of the sets , similarly as in the proof of theorem  [ subsets ] . in this way",
    "we obtain a new bunch of sets , we apply @xmath123 on them again , and so forth",
    ". however , unlike in the case of @xmath23-bonacci words , one needs to keep track of the admissibility of the normal @xmath116-representations @xmath112 during the calculation .",
    "briefly speaking , if a normal @xmath116-representation , examined at a given moment , can not be validly extended by a certain specific digit @xmath129 , then the map @xmath130 is not applied at that stage .",
    "the procedure ends when the application of @xmath123 generates no new data .",
    "the abelian co - decomposition method also allows us to deal with the other type of parry words , called non - simple parry words , which are fixed points of substitutions @xmath131 where @xmath132 satisfy @xmath133 , @xmath134 for all @xmath44 , and @xmath135 .",
    "although we have not explicitly discussed non - simple parry words in previous sections , the implementation of the procedure would be the same ; we just need to replace the value @xmath23 in the definition of @xmath136   by @xmath137 . to sum up",
    ", the approach is applicable on any parry word ; but one shall keep in mind that in practice it will more likely work well in cases when the image of the abelian complexity function is a set of low cardinality .",
    "nevertheless , it can still give new results for various words for which other methods fail .",
    "those parry words , for which this approach turns out to be inefficient , can be perhaps treated by a newer technique , which replaces pairs @xmath138 by certain conveniently chosen triples  @xcite .",
    "that technique is more involved , but it is expected to have smaller memory requirements in most cases and to work faster .    a potentially interesting question is whether this approach ( possibly after a certain improvement ) can be used for dealing with a word that depends on a parameter , i.e. , whether one can explore a parametric family of words as a whole .",
    "consider for instance the @xmath23-bonacci word for a general @xmath139 .",
    "we are convinced that the procedure could be implemented with a parameter as well , although the calculation would be of course intricate and lengthy .",
    "the procedure also gives , as a by - product , the optimal balance bound of the examined word .",
    "the optimal bound is equal to the maximal entries of vectors @xmath140 having the form @xmath141 for @xmath142 belonging to the same set @xmath143 .",
    "for example , one can check in this way that the @xmath9-bonacci word is @xmath21-balanced .",
    "consequently , we can regard the method not only as a tool for evaluating abelian complexity , but also as a tool for exploring balance properties of words . in particular , it is possible that this approach can lead to the optimal balance bound for the @xmath23-bonacci word for any @xmath23 .",
    "recall that the optimal bound for the @xmath23-bonacci word is not known yet , despite the fact that an upper bound has been already determined  @xcite .",
    "the author thanks j .- p .",
    "allouche for useful comments and suggestions , and the referees for valuable hints and corrections that helped to improve the manuscript ."
  ],
  "abstract_text": [
    "<S> according to a result of richomme , saari and zamboni , the abelian complexity of the tribonacci word satisfies @xmath0 for each @xmath1 . in this paper </S>",
    "<S> we derive an automaton that evaluates the function @xmath2 explicitly . </S>",
    "<S> the automaton takes the tribonacci representation of @xmath3 as its input ; therefore , @xmath4 is an automatic sequence in a generalized sense . </S>",
    "<S> since our evaluation of @xmath2 uses @xmath5 operations , it is fast even for large values of @xmath3 . </S>",
    "<S> our result also leads to a solution of an open problem proposed by richomme et al . concerning the characterization of those @xmath3 for which @xmath6 with @xmath7 belonging to @xmath8 . </S>",
    "<S> in addition , we apply the same approach on the @xmath9-bonacci word . in this way we find a description of the abelian complexity of the @xmath9-bonacci word , too .    </S>",
    "<S> [ theorem]corollary [ theorem]lemma [ theorem]proposition    [ theorem]definition [ theorem]example [ theorem]conjecture    [ theorem]remark    ondej  turek + nuclear physics institute + academy of sciences of the czech republic + 250 68 e + czech republic + and + bogolyubov laboratory of theoretical physics + joint institute for nuclear research + 141980 dubna + russia + o.turek@ujf.cas.cz +    .2 in    p  </S>"
  ]
}
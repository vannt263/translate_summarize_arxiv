{
  "article_text": [
    "the maximum bisection problem ( mbp ) is a well known combinatorial optimization problem . for a weighted graph @xmath0 with non - negative weights on the edges and where @xmath1 is an even number , the maximum bisection problem consists in finding a partition of the set of vertices @xmath2 in two subsets with the equal cardinality where the sum of weights of the edges between the sets is maximal .",
    "the maximum bisection can be applied in different fields such as vlsi design @xcite , image processing @xcite , compiler optimization @xcite , etc .",
    "the maximum bisection problem is np hard as shown in @xcite .",
    "the complexity of finding optimal and good solutions of the maximum bisection problem has given raise to various solution approaches ranging from application algorithms , exact methods to metaheuristics .",
    "widely used mathematical formulation with binary variables @xmath3 assigned to each vertex can be presented as    & _ i , j w_ij(1-x_ix_j ) + s.t .   &",
    "e^t x=0 + & x^2_j=1 ,  j=1,  ,n +    where @xmath4 is the column vector of all ones , and @xmath5 is the transpose operator . it should be noted that @xmath3 is either @xmath6 or @xmath7 so either @xmath8 or @xmath9 .",
    "this formulation enabled approximation algorithms based on semidefinite programming , for example in @xcite , @xcite , @xcite , @xcite and @xcite .",
    "the main goal of these approaches is the performance guarantee so they are not competitive with other methods for comparison in computational testing . in paper @xcite was proved that there is no polynomial approximation algorithm with performance ratio greater than @xmath10 .",
    "there are several approaches for its exact solving such as linear and semidefinite branch - and - cut methods @xcite , intersection of semidefinite and polyhedral relaxations @xcite .    in @xcite",
    "is discussed the minimum graph bisection problem and branch - and - cut approaches for finding its solution .",
    "the problem definition can be described as follows :    let @xmath11 be an undirected graph with @xmath12 and edge set @xmath13 . for given vertex weights @xmath14 , and edge costs",
    "@xmath15 , @xmath16 , a partition of the vertex set @xmath2 into two disjoint clusters @xmath17 and @xmath18 with sizes @xmath19 and @xmath20 , where @xmath21 $ ] , is called a bisection .",
    "finding a bisection such that the total cost of edges in the cut @xmath22 is minimal is the minimum bisection problem ( mb ) .",
    "if the function @xmath23 which represents the weight of nodes is equal to one for all nodes and @xmath24 is equal to @xmath25 and weights on edges @xmath26 takes negative values this problem becomes the maximum graph bisection problem . in order to apply",
    "brunch - and - cut approaches authors in @xcite presented an integer linear programming formulation .    for a selected node @xmath27 the set of edges can be extended so that @xmath28 is adjacent to all other nodes in @xmath2 , where the weights @xmath29 of new edges is equal to zero .",
    "the extended graph contains a spanning star rooted at @xmath28 .",
    "suppose @xmath30 contains a spanning star rooted at @xmath28    @xmath31    & _ ij w_ijy_ij + s.t .   &",
    "f_s+_vs f_v(1-y_sv)f + & _ vs f_v y_svf + & _ ijcu y_ij+_iju ( 1-y_ij)1 ,   cycle  ce , odd   uc + & y\\{0,1}^e    semidefinite programming formulation given in @xcite is very similar to the one already presented in this paper . on the basis of large sparse instances coming from vlsi design they showed the good performance of the semidefinite approach versus the mainstream linear one .    in the paper @xcite authors presented a method for finding exact solutions of the max - cut problem based on semidefinite formulation .",
    "they used semidefinite relaxation combined with triangle inequalities , which they solve with the bundle method .",
    "another set of approaches , especially for larger scale instances are metaheuristics . from the wide field of applied metaheuristics let mention some of them such as : memetic search @xcite , variable neighbeerhood search @xcite , neural networks @xcite , deterministing anealing @xcite    any partition of the node set @xmath2 in two sets defines a set of edges , that we call a _ cut _ , with ends in different partitions .",
    "if a graph has weight on edges , than _ weight of the cut _ is defined as the sum of weights of edges in the cut .",
    "the problem of finding a partition of the node set where the weight of the cut is maximal is called a max - cut problem . from this definition",
    "it follows that there are no restriction on cardinality of partitions .",
    "maximum graph bisection problem is obtained from max - cut problem if it is required that the partitions have equal cardinality . from the definition",
    "it follows that the max - cut problem is a generalization of the maximum graph bisection problem , and that maximum graph bisection problem can be solved by introducing restrictions about cardinality in max - cut problem .    in the paper",
    "@xcite a multidimensional generalization of maximum bisection problem is proposed , where weights on edges instead of numbers are @xmath32-tuples of positive real numbers .",
    "the weight of the cut is the minimum of sums of the coordinates of edge weights .",
    "the goal is to find a partition of the set of vertices @xmath2 in two sets with equal number of vertices and maximal weight of the cut .",
    "for @xmath33 we have an ordinary maximum bisection problem . from the fact that maximum bisection problem is @xmath34 hard , and that the maximum bisection problem is a special case of the multidimensional maximum bisection problem it follows",
    "that multidimensional maximum bisection problem is also @xmath34 hard .",
    "the weight of the cut in the multidimensional maximum bisection problem is found by first summing the coordinates of weight vectors vectors on the edges of the cut .",
    "after that , the minimum of the sums is determined .",
    "obtained minimum is the weight of the cut . as it can be seen , it is more complex than just summing the weights on the edges of the cut , which is the case in the mbp .",
    "a mixed integer linear programming formulation with @xmath35 binary variables and @xmath36 constraints is proposed with the proof of its correctness .",
    "the numerical tests , made on a randomly generated graphs , indicates that the multidimensional generalization is more difficult to solve than the original problem .",
    "the difficulties of solving this generalization of mbp and inapplicability of solution approaches for classical mbp on generalized problem are discussed in details in @xcite .",
    "numerical results shown in that paper suggest that this generalization is much harder to solve as can be seen from comparison of results where dimension @xmath37 of weight - vectors is equal to 1 and greater then 1 .",
    "in theory and practice it was of interest to consider bisection of graphs where subgraphs are connected .",
    "one of the most discussed problem is maximally balanced connected partition problem ",
    "mbcp , whose formulation can be given as in @xcite :    let @xmath38 , @xmath39 be a connected graph , @xmath40 and let @xmath41 be weights on vertices . for any subset @xmath42 the value @xmath43 is defined as a sum of weights of all vertices belonging to @xmath44 , i.e. @xmath45 . the problem is to find a partition @xmath46 of @xmath2 into nonempty disjoint sets @xmath47 and @xmath48 such that subgraphs of @xmath30 induced by @xmath47 and @xmath48 are connected and the value @xmath49 is minimized .",
    "since subgraphs induced by @xmath47 and @xmath48 are connected they contain spanning trees @xmath50 and @xmath51 respectively .",
    "let @xmath52 and @xmath53 be arbitrary vertices from @xmath47 and @xmath48 in that order . the spanning trees can be extended in such way that they contain additional vertex 0 with @xmath52 and @xmath53 as its only successors , i.e. @xmath54 , @xmath55 , @xmath56 and @xmath57 where @xmath58 , @xmath59 and @xmath60 .",
    "in order to formulate the milp model , author in @xcite introduced variables :    @xmath61    @xmath62    @xmath63    @xmath64 , \\hfill e\\in { \\overline e}\\ ] ]    the milp formulation for mbcp is :    @xmath65    such that    @xmath66    @xmath67    @xmath68    @xmath69    @xmath70    @xmath71    @xmath72    @xmath73    @xmath74    @xmath75    @xmath76    @xmath77    @xmath78 , \\ \\ \\ \\ e\\in \\overline{e}\\ ] ]    where the second and the following constraints are used to ensure connectivity of partitions @xmath47 and @xmath48 .    the first notable theoretical results in analyzing this problem are presented in [ 1 ] , where the authors proved that the problem mbcp is np hard and suggested a simple polynomial time approximation algorithm with a guaranteed bound 1.072 .",
    "mbcp belongs to a wide class of graph partitioning problems and have many applications in different fields of engineering , such as digital signal processing , image processing , managing electric power networks and education .",
    "process of controlling and routing in large scale wireless sensor networks is one example , where the network of @xmath79 clusters is considered , with condition that each cluster corresponds to one cluster head .",
    "division of such network in two balanced subnetworks , with independent optimization of any subnetwork , will simplify the handling process of entire network .",
    "the network can be represented as an undirected connected graph , @xmath80 , where @xmath81 is the set of cluster heads , @xmath82 and @xmath83 is the set of all undirected links @xmath84 , where @xmath85 and @xmath86 are two cluster heads .",
    "the objective is to partition g into connected balanced subgraphs and as can be seen this problem is equivalent to mbcp . in @xcite ,",
    "the authors adopted the approach proposed in @xcite and used it to divide the network of clusters into two smaller , connected sub - networks .",
    "the author of @xcite suggested application in education , where solving mbcp can be useful for finding solutions to practical organizational problems .",
    "for example , the course material can naturally be divided into lessons , where the appropriate difficulty is assigned to each lesson .",
    "the connections between the lessons can be defined by various criteria , like conditionality , analogy or similarity .",
    "the idea is to divide the course material into two disjoint connected sections , so that the sections are of similar difficulty , as much as possible .",
    "another example would be partitioning the group of students into two smaller groups .",
    "the `` connectivity '' between two students can be defined in several ways , for example , as `` the ability to work together '' .",
    "the objective should be to divide a student group into two smaller , having in mind that groups should be balanced by student abilities .",
    "in this section it will be introduced connected multidimensional max - bisection problem ( cmmbp ) as a generalization of multidimensional max - bisection problem . as can be seen",
    ", the connectivity of subgraphs can be very useful in certain areas of practical and theoretical research .",
    "this is the major cause for formulating a new generalization of mbp .",
    "it can be formulated as follows : let @xmath0 be an undirected graph , @xmath87 and @xmath29 is a function that assigns to each edge @xmath88 an @xmath32-tuple of positive real numbers @xmath89 .",
    "the cut @xmath90 determined by the set @xmath17 is defined as + @xmath91 .",
    "it is obvious that @xmath92 .",
    "the weight of the cut is defined as @xmath93    the goal of the generalized max - bisection problem is to find a partition of the set of vertices in two sets with the equal number of vertices where the weight of the cut is maximal , and both partition graphs are connected .",
    "this problem will be called connected multidimensional maximum bisection problem ( cmmbp ) .",
    "[ ex1 ] the connected multidimensional maximum bisection problem can be illustrated by the example given on the figure 1 , which optimal solution is given with the set @xmath94 .",
    "the set @xmath17 generates the cut @xmath95",
    "@xmath96 @xmath97 @xmath98 @xmath99 where the sums over coordinates are @xmath100 and the weight of the cut is @xmath101 .",
    "the set @xmath17 and @xmath102 are connected with spanning trees @xmath103 and @xmath104 .",
    "approaches to solving cmmbp should be considered both from the approaches for solving mbp and those for solving mbcp . as it was presented in @xcite approaches for solving classical mbp",
    "are not applicable for various reasons to solving multidimensional maximum bisection problem ( mmbp ) discussed in that paper .",
    "there it was shown that all three major approaches , approximation algorithms , exact methods and metaheuristics could not be developed without significant modifications into approaches for solving mmbp . as it can be seen",
    "cmmbp is special case of mmbp same reasons and considerations presented in @xcite are valid in this case .    on the other side ,",
    "graph bisection problems dealing with connectivity are formulated in a form where weights are explicitly linked to vertices and not to edges .",
    "reformulations were weights would be assigned to edges instead of vertices could not adequately address the nature of the problem even if they could be easily executed which is not the case .",
    "furthermore , in formulation weights are vectors instead of numbers , all difficulties mentioned in @xcite concerning this aspect are remaining .",
    "this means , that even if there are approaches concerning bisection in connected subgraphs with optimization of objective function dealing with edge weights , such approaches will surely need modifications .",
    "moreover , problems with weight of edges as vectors are more difficult than those where weight are ordinary numbers as can be seen from experimental results presented in @xcite    the solution to the maximum bisection problem can be used in different fields such as vlsi design @xcite , image processing @xcite , compiler optimization @xcite , social network analysis etc .",
    "connected multidimensional maximum bisection problem appears whenever relation between entities are vectors instead of numbers and the connectivity of subgraphs is essential :    * the proposed problem can be applied in human resource management .",
    "one of the most important aspects is compatibility / incompatibility of employees that can be represented by a vector .",
    "that vector could be character , knowledge , experience , etc where the higher level of incompatibility is represented with greater numbers .",
    "the employees in that case are represented by vertices and the fact that a certain pair of employees worked together is represented by the edge between those two vertices .",
    "the problem is to divide the group of employees in two teams with equal size where the greatest part of incompatibility among workers lies between teams .",
    "the connectivity of subgraphs ( teams ) plays very important factor and that teams are formed by the employees that have worked with each other as much as possible . *",
    "the connectivity of electrical components is essential in vlsi design .",
    "there are certain aspects that might be considered important such as interference , current used , heat dissipation etc .",
    "the proposed problem can be viewed as designation of electrical components to one of the two boards in such way that both component sets are connected on different boards and maximally differ from each other in the specified number of aspects .",
    "for example , the two warmest components should be placed on different board .",
    "it is well known that is useful to represent problems of the graph theory as integer programming problems in order to use different well - known exact optimization techniques .",
    "even more , a mixed integer linear programming model also could be used for developing heuristic approaches .",
    "some new development can be seen in @xcite and @xcite .    in this section",
    "it will be introduced a mixed integer linear programming formulation for the connected multidimensional max - bisection problem .",
    "the ideas of modeling connectivity of subgraphs follows principles presented in @xcite .    let @xmath0 be a graph where @xmath105 and let @xmath106 be a weight vector of an edge @xmath88 . a new vertex @xmath107 and new edges @xmath108 are introduced where @xmath109 , @xmath110 and @xmath111 .",
    "the goal is to find a partition @xmath112 of the vertex set @xmath2 where @xmath113 , @xmath114 such that @xmath115 is maximized and subgraphs induced by @xmath47 and @xmath48 are connected .",
    "let @xmath116 and @xmath117 be such induced graphs .",
    "being connected , they contain spanning trees , @xmath118 and @xmath119 .",
    "the edge sets @xmath120 and @xmath121 are extended where @xmath122 and @xmath123 for fixed arbitrary vertices @xmath124 and @xmath125 .",
    "let graph @xmath126 and @xmath127 be defined as @xmath56 and @xmath128 .    in order to formulate the milp model for solving cmmbp ,",
    "the following variables are introduced :    @xmath129    @xmath130    @xmath131    @xmath132    @xmath133 , \\hfill e\\in { \\overline e}\\ ] ]    variables @xmath134 determine the vertex set partition , @xmath135 determines edges in the cut needed for calculation of the weight of the cut while @xmath136 and @xmath137 determines the edges that are in appropriate spanning trees .",
    "variables @xmath138 represents the amount of flow that flows through the certain edge .",
    "the exact solution of the connected multidimensional max - bisection problem using mixed integer linear programming can be stated as :    @xmath139    such that    @xmath140    @xmath141    @xmath142    @xmath143    @xmath144    @xmath145    @xmath146    @xmath147    @xmath148    @xmath149    @xmath150    @xmath151    @xmath152    @xmath153    @xmath154    @xmath155    @xmath156 , \\ \\ \\ \\",
    "e\\in \\overline{e}\\ ] ]    by constraint ( [ og1 ] ) weight of the cut is determined . constraints ( [ og2 ] ) and ( [ og3 ] ) determines that appropriate edges are in the cut .",
    "constraint ( [ og4 ] ) ensures that partitions @xmath47 and @xmath48 have equal number of vertices",
    ". constraints ( [ og5])-([og14 ] ) ensures that induced subgraphs are connected",
    ". constraints ( [ og5 ] ) and ( [ og6 ] ) determines if the edge is in the spanning trees @xmath157 or @xmath158 or not",
    ". constraints ( [ og7 ] ) and ( [ og8 ] ) ensures that that there is only one edge from additional vertex @xmath159 to the certain vertex of each spanning tree",
    ". constraints ( [ og9 ] ) and ( [ og10 ] ) ensure that @xmath160 for edges @xmath88 that does nt belong to the overall spanning tree @xmath127 . the constraint ( [ og11 ] ) represents network preservation principle .",
    "the constraint ( [ og12 ] ) ensures that there is enough initial flow to reach to all vertices of the graph .",
    "the constraints ( [ og13 ] ) and ( [ og14 ] ) ensures that there are @xmath161 edges in both spanning trees , while the constraint ( [ og15 ] ) ensures that there exactly two edges emanating from the additional vertex @xmath159 .",
    "it should be noted that constraints ( [ og5])-([og8 ] ) , ( [ og11 ] ) , ( [ og12 ] ) and ( [ og15 ] ) are the same as in formulation for maximally balanced connected partition problem presented in @xcite . using the idea from mati in @xcite for ensuring connectivity of partitions the following lemma where appropriate constraints are modified in order to obtain partitions with equal number of vertices .    from constraints ( [ og5])-([og15 ] )",
    "it follows that in optimal solution the vertices @xmath124 and @xmath125 , such that @xmath162 , @xmath163 and @xmath164 for @xmath165 exist .",
    "let @xmath88 be an arbitrary edge from @xmath166 .",
    "the edge @xmath88 may or may not be included in the spanning tree . in the first case , either @xmath136 or @xmath137 are equal to 1 , otherwise @xmath136 and @xmath137 are both equal to @xmath159 . by the constraints ( [ og5 ] ) , values @xmath167 are bounded by the right hand side of the inequalities by the values @xmath168 and @xmath169 ( similarly , the constraints ( [ og6 ] ) bound the variables @xmath170 ) .",
    "for example , if both @xmath171 and @xmath172 belongs to @xmath47 , both @xmath168 and @xmath169 at the same time are equal to 1 , and in that case , constraint ( [ og5 ] ) allows that the edge @xmath88 can be included in the spanning tree .",
    "being binary variables , there are four possibilities for @xmath168 and @xmath169 :    1 .",
    "@xmath173 and @xmath174 : that means that both vertices belong to @xmath47 ; 2 .",
    "@xmath173 and @xmath175 : the vertex @xmath176 belong to @xmath47 and the vertex @xmath177 belong to @xmath48 ; 3 .",
    "@xmath178 and @xmath174 : the vertex @xmath176 belong to @xmath48 and the vertex @xmath177 belong to @xmath47 ; 4 .",
    "@xmath178 and @xmath175 : both vertices belong to @xmath48 ;    only in the cases ( i ) and ( iv ) , there exist the possibility that the edge @xmath88 is included in the spanning tree and in cases ( ii ) and ( iii ) , constraints ( [ og5 ] ) and ( [ og6 ] ) guarantee that @xmath88 will not be included , and because of ( [ og9 ] ) and ( [ og10 ] ) , @xmath138 is equal to 0 .    from ( [ og15 ] ) , it directly follows that exactly two edges @xmath179 and @xmath180 exist .",
    "these edges belong to @xmath108 and for them @xmath181 or @xmath182 .",
    "it will be shown that @xmath52 and @xmath53 have to belong to different subsets @xmath47 and @xmath48 .",
    "suppose that , without loss of generality , both @xmath52 and @xmath53 belong to @xmath47 . from ( [ og12 ] )",
    "it follows that @xmath183 .",
    "let us sum the constraints from ( [ og11 ] ) , when @xmath184 .",
    "@xmath185    because the first and the fourth sum are annihilated , while the third and the last sum have all members equal to zero as it is shown above .",
    "so , the expression @xmath186 is obtained which is in contradiction with the fact @xmath187 that follows form the constraint ( [ og4 ] ) . therefore , @xmath52 and @xmath53 must belong to different subsets @xmath47 and @xmath48 .",
    "a partition of the set of vertices @xmath188 is the solution of the cmmbp if and only if constraints ( [ og1])-([og17 ] ) and objective function are satisfied for the variables @xmath189 .",
    "( @xmath190 ) based on the bisection @xmath44 , the variables @xmath189 will be constructed and it will be shown that objective function and constraints ( [ og1])-([og17 ] ) are satisfied .",
    "let the variables be defined according to ( [ eqx])-([eqz ] ) .",
    "it is obvious that ( [ og16 ] ) is satisfied .",
    "variables @xmath191 are defined as follows . for @xmath192 ,",
    "@xmath138 is defined as    @xmath193    since @xmath194 and @xmath195 , then @xmath196 $ ] for all @xmath192 .    to determine the values @xmath138 for all other edges @xmath197 , the fact that in a tree each vertex can be declared as a root is used and all other vertices can be ordered , by some search algorithm . for example ,",
    "one of the two standard search algorithms can be used for this purpose : depth - first search or breadth - first search .",
    "let @xmath120 and @xmath121 be the spanning trees for @xmath198 and @xmath199 generated by the search algorithm . using the ordering formed by the search algorithm , in a case when the vertex @xmath171 is a parent of the vertex @xmath172 , the value of the flow is defined as the number of vertices in subtree , rooted by the vertex @xmath172 . in a case",
    "when the vertex @xmath172 is a parent of the vertex @xmath171 , the value of the flow @xmath200 is defined as the minus number of the vertices in the subtree , rooted by the vertex @xmath171 .",
    "for all the other edges , belonging neither to @xmath120 nor @xmath121 , @xmath160 is proposed .",
    "since that the number of vertices in each subtree is less or equal to @xmath201 , then @xmath202 $ ] for each edge @xmath197 .",
    "therefore , ( [ og17 ] ) holds for each @xmath203 .",
    "let us prove that constraints ( [ og1])-([og15 ] ) are satisfied .",
    "based on the definition of weight of the cut , the constraint ( @xmath204 ) is true , and based on the goal of cmmbp the ( [ goal ] ) also holds .    if @xmath205 than ( @xmath206 ) and ( @xmath207 ) are obviously true .",
    "if @xmath208 than the corresponding edge @xmath209 belongs to the cut , and exactly one vertex incident to the edge @xmath88 must be in the set @xmath47 , so either @xmath210 or @xmath211 and therefore constraints ( @xmath206 ) and ( @xmath207 ) holds .    the constraint ( @xmath212 ) is obviously fulfilled as it is required that the vertex set is partitioned into two sets with the equal number of vertices .    to prove inequalities ( [ og5 ] ) , two cases are considered @xmath213 and @xmath181 .",
    "\\(i ) @xmath213 .",
    "the inequalities ( [ og5 ] ) are satisfied because @xmath168,@xmath214 by the definition .",
    "\\(ii ) @xmath181 implies that @xmath215 .",
    "to prove inequalities ( [ og7 ] ) , two cases are considered again :    \\(i ) @xmath213 . the inequalities ( [ og7 ] )",
    "holds because @xmath214 by the definition .",
    "\\(ii ) @xmath181 implies that @xmath216 . since @xmath192 , @xmath217 , which implies that @xmath218 , and therefore inequalities ( [ og7 ] ) holds .    the inequalities ( [ og6 ] ) and ( [ og8 ] )",
    "are prove analogously as the inequalities ( [ og5 ] ) and ( [ og7 ] ) .    to prove inequalities ( [ og9 ] ) and ( [ og10 ] ) two cases",
    "are considered :    \\(i ) @xmath219 .",
    "right hand sizes of the inequalities ( [ og9 ] ) and ( [ og10 ] ) are equal to @xmath201 and @xmath220 respectively . since that @xmath221 $ ] , the inequalities ( [ og9 ] ) and ( [ og10 ] ) are satisfied .",
    "\\(ii ) @xmath222 .",
    "then @xmath138 is equal to 0 by the definition .",
    "the inequalities ( [ og9 ] ) and ( [ og10 ] ) are satisfied because right hand sizes of ( [ og9 ] ) are non negative , and right hand sizes of ( [ og10 ] ) are non positive .    to prove inequality ( [ og11 ] ) , without loss of generality , suppose that @xmath184 .",
    "let us consider all the edges from @xmath223 , starting or ending by the vertex @xmath176 .",
    "the one edge of these comes from from the parent vertex , and all the others are successors .",
    "for all the other edges incident with @xmath176 and not belonging to @xmath223 , the values @xmath138 are equal to 0 and they have no influence to ( [ og11 ] ) .",
    "@xmath224 @xmath225    @xmath226    in the first two sums , there is only one edge satisfying the conditions and that edge is coming from the parent of the vertex @xmath176 to the vertex @xmath176 . for that edge",
    ", @xmath227 is equal to the number of the vertices in the subtree rooted by @xmath176 . in the last two sums ,",
    "all the edges coming from the vertex @xmath176 to all successors in spanning tree @xmath157 , participate .",
    "the total sum of @xmath227 for those edges is equal to the total number of vertices of subtrees rooted by each successor of vertex @xmath176 . since only vertex @xmath176 participate in the subtree rooted by itself and not rooted by its successors , the value @xmath228    the definition ( [ equovi ] ) of @xmath229 is used to prove equality ( [ og12 ] ) :    @xmath230 .    since @xmath157 and @xmath158 are the spanning trees of @xmath231 and @xmath232 , then @xmath233 and @xmath234 .",
    "that implies that constraints ( [ og13 ] ) and ( [ og14 ] ) are proved .    for @xmath192 , @xmath181 for only one @xmath88 , and that is the case when @xmath235 . for all other edges @xmath236 , which implies @xmath237 .",
    "similarly , @xmath238 , implying that constraint ( [ og15 ] ) is satisfied .",
    "( @xmath239 ) suppose that optimal solution @xmath240 satisfies the conditions ( [ og1])-([og17 ] ) and the objective function . the bisection @xmath112 , that represents the solution of the cmmbp , will be constructed .",
    "let us define    @xmath241 , @xmath242 ,    @xmath243 , @xmath244 and    @xmath245 .",
    "the set @xmath246 represents the cut that is generated by the set of vertices @xmath47 .    from the constraint ( @xmath204 )",
    "it follows that @xmath247 meaning that @xmath248 and it follows from the objective function that @xmath249 is equal to the greatest weight of the cut .    from the constraint ( @xmath250 ) @xmath135 is either 0 or 1",
    "if @xmath208 then from the constraints ( @xmath206 ) and ( @xmath207 ) it follows that both vertices of the edge @xmath88 are not in the same set @xmath47 nor set @xmath48 .",
    "if @xmath205 then from the constraints ( @xmath251)-(@xmath207 ) it follows that both vertices of the edge @xmath88 must be in the same partition set ( either @xmath47 or @xmath48 ) .",
    "if vertices are in different partitions , than it can be concluded that the weight of the edge @xmath88 is not included in the weight of the cut , and therefore @xmath249 is not maximal which contradicts to the supposition that all constraints are fulfilled . from this",
    "it follows that vertices of the edge must be in the same partition .    from the constraint ( @xmath212 )",
    "it follows that @xmath252 which means that the vertex set is partitioned into two sets with the equal number of vertices",
    ".    constraints ( [ og5 ] ) - ( [ og8 ] ) ensures that the sets @xmath253 and @xmath254 are well defined , i.e. all edges from @xmath253 have endpoints from @xmath255 , and all edges from @xmath254 have endpoints from @xmath256 :    \\(i ) @xmath257 implies @xmath181 . from the constraint ( [ og5 ] ) and the binary nature of the variables @xmath168 and @xmath169 , it follows that @xmath173 and @xmath174 , which implies that @xmath258 .",
    "\\(ii ) @xmath259 also implies @xmath181 . from the constraints ( [ og7 ] ) @xmath174 follows , which implies that @xmath260 .",
    "similarly , constraints ( [ og6 ] ) and ( [ og8 ] ) ensure that all edges from @xmath261 have endpoints from @xmath262 . constraints ( [ og13 ] ) and ( [ og14 ] ) ensures that the total number of edges included in each spanning tree is exactly @xmath161 .    from inequalities ( [ og9 ] ) and ( [ og10 ] )",
    ", it follows that @xmath160 , for all @xmath263",
    ".    the connectivity of the graph @xmath264 will now be proved , and the connectivity of the graph @xmath265 can be proven analogously .",
    "suppose that @xmath266 and @xmath267 are arbitrary subsets of @xmath47 , such that @xmath268 and @xmath269 , @xmath270",
    ". then @xmath271 will be proved .",
    "let us summarize the constraints given in ( [ og11 ] ) , for all @xmath272 .",
    "we get    @xmath273 .",
    "if the sum from the left side is disassembled , the following expression is gotten :    @xmath274 @xmath275 @xmath276    let us denote summands in the last equation as a , b , c , d , e , f and g. then the equation ca be written as    @xmath277 .",
    "it is obvious that @xmath278 and @xmath279 ( between @xmath47 and @xmath48 there are no edges in @xmath280 ) .",
    "further , @xmath281 or @xmath282 depending on whether @xmath283 or @xmath284 , because the lemma 1 proposes that exactly one vertex ( @xmath52 in this case ) from @xmath47 is connected to the vertex @xmath159 .",
    "thus we have    @xmath285 .",
    "the last inequality implies @xmath286 . from @xmath287 and",
    "the edge connecting @xmath266 and @xmath267 is found .",
    "thus , the component @xmath264 is connected .",
    "therefore , constructed partition is connected and the weight of the cut is maximal , ie .",
    "the partition represents the solution of cmmbp for the graph @xmath30 .    in order to illustrate",
    "proposed mathematical formulation , the following example contains the values of all variables .",
    "[ ex2 ] let us consider the same graph as in example [ ex1 ] .",
    "optimal solution value is 16 , with set @xmath94 , where the cut is + @xmath288 .",
    "the nonzero values of the variables are as follows : @xmath289 , @xmath290 , @xmath291 , @xmath292 , @xmath293 , @xmath294 .",
    "this paper has taken into consideration a generalization of max - bisection problem where weights on the edges are @xmath32-tuples and the partition sets induces connected subgraphs .",
    "a mixed integer linear programming formulation is introduced with proof of its correctness .    in future work",
    "it may be useful to develop a metaheuristic approach for solving cmmbp .",
    "the second direction could be taking into consideration @xmath32-tuples as weights in several related problems , such as max - cut , max @xmath37-cut , max @xmath37-vertex cover , etc .",
    "armbruster , m. , fgenschuh , m. , helmberg , c. , martin , a. , a comparative study of linear and semidefinite branch - and - cut methods for solving the minimum graph bisection problem . in proc .",
    "conf . integer programming and combinatorial optimization ( ipco ) , 5035 , 112124 ( 2008 )            goemans , m.x . ,",
    "williamson , d.p .",
    ": improved approximation algorithms for maximum cut and satisfiability problems using semidefinite programming , journal of the association for computing machinery , 42(6 ) , 11151145 ( 1995 )"
  ],
  "abstract_text": [
    "<S> the maximum graph bisection problem is a well known graph partition problem . </S>",
    "<S> the problem has been proven to be np - hard . in the maximum graph bisection problem </S>",
    "<S> it is required that the set of vertices is divided into two partition with equal number of vertices , and the weight of the edge cut is maximal .    </S>",
    "<S> this work introduces a connected multidimensional generalization of the maximum bisection problem . in this problem </S>",
    "<S> the weights on edges are vectors of positive numbers rather than numbers and partitions should be connected . </S>",
    "<S> a mixed integer linear programming formulation is proposed with the proof of its correctness . </S>",
    "<S> the milp formulation of the problem has polynomial number of variables and constraints .    </S>",
    "<S> fig1.eps gsave newpath 20 20 moveto 20 220 lineto 220 220 lineto 220 20 lineto closepath 2 setlinewidth gsave .4 setgray fill grestore stroke grestore </S>"
  ]
}
{
  "article_text": [
    "let @xmath0 be finite sets , let @xmath1 be the cartesian product @xmath2 , and let @xmath3 be a function @xmath4 .",
    "we are interested in numerically computing the partition function @xmath5 for cases where @xmath6 is large and @xmath3 has some useful factorization .",
    "if @xmath3 has a cycle - free factor graph @xcite , the sum ( [ eqn : partitionfunction ] ) can be computed directly by sum - product message passing . in this paper , however , we are interested in cases where no such factor graph is available ( e.g. , when the factor graph of @xmath3 is a rectangular grid as in fig .  [ fig:2dgridt ] ) . in the important special case where",
    "@xmath3 is real - valued and nonnegative ( i.e. , @xmath7 for all @xmath8 ) , the probability mass function @xmath9 is the basis of a variety of monte carlo methods for estimating  ( [ eqn : partitionfunction ] ) , see  @xcite .",
    "such monte carlo algorithms have successfully been used , e.g. , for the computation of information rates of source / channel models with 2-d memory @xcite . note that @xmath10 inherits factorizations ( and thus factor graphs ) from @xmath3 .    in this paper , we extend these monte carlo methods to the case where @xmath3 is real - valued ( but not nonnegative ) or complex .",
    "the motivation for this extension is twofold .",
    "first , the fourier transform of a function @xmath3 preserves the topology of the factor graph , but generally results in complex factors @xcite .",
    "second , factor graphs of probability mass functions in quantum mechanics naturally involve complex functions @xcite . in both cases , computing quantities of the form ( [ eqn : partitionfunction ] ) is of supreme interest .    in full generality ,",
    "the computation of ( [ eqn : partitionfunction ] ) is , of course , intractable ( already in the nonnegative real case ) , but good monte carlo algorithms may nonetheless work well for many cases of interest ( as in the nonnegative real case ) .",
    "the paper is structured as follows . after introducing some notations in section  [ sec : probpartialz ] , the proposed algorithms are described in sections  [ sec : secestzf ] and  [ sec : estcalx ] .",
    "the description focuses on the real case ; the generalization to the complex case is outlined in section  [ sec : extcomplex ] .",
    "the proposed methods are illustrated by some numerical experiments in section  [ sec : numexpr ] .",
    "we begin the proposed generalization by defining @xmath11 and the probability mass function @xmath12 which will replace ( [ eqn : positivepx ] ) in the monte carlo algorithms .",
    "note that @xmath13 also inherits factorizations ( and thus factor graphs ) from @xmath3 .    in the following ,",
    "we restrict ourselves to the case where @xmath3 is real ( but not nonnegative ) ; the generalization to the complex case is indicated in section  [ sec : extcomplex ] .",
    "let    lcl ^+ & & \\{x : f(x ) > 0 } [ eqn : statepos ] + ^- & & \\{x : f(x ) < 0 } [ eqn : statemin ] + ^0 & & \\{x : f(x ) = 0 } [ eqn : statezer ]    and thus @xmath14 + z^-_f & & _",
    "x^- f(x ) [ eqn : zfmsum ]    and thus    rcl",
    "z_f & = & z^+_f + z^-_f [ eqn : zplusminus ] + z_|f| & = & z^+_f - z^-_f .",
    "[ eqn : zabsplusminus ]    finally , we define probability mass functions on @xmath15 and @xmath16 as follows : @xmath17 and @xmath18 a simple , but key , insight is that sampling from @xmath19 or from @xmath20 can be reduced to sampling from @xmath13 : since @xmath13 coincides with @xmath19 on @xmath21 ( up to a scale factor ) , and with @xmath20 on @xmath22 ( up to a scale factor ) , samples @xmath23 from @xmath13 can be partitioned into samples from @xmath19 and from @xmath20 according to the sign of @xmath24 .",
    "for example , samples from @xmath13 , and thus both from @xmath19 and from @xmath20 , may be drawn using tree - based gibbs sampling as in @xcite .    in this paper , we will now focus on the computation / estimation of the partial partition functions @xmath25 and @xmath26 separately .",
    "if these estimates are sufficiently accurate , @xmath27 can then be computed from ( [ eqn : zplusminus ] ) .",
    "this approach is bound to fail , of course , if both @xmath25 and @xmath28 are large and their difference is small",
    ". however , this cancellation problem ( which is well - known in quantum mechanics @xcite ) is beyond the scope of the present paper .",
    "we will now propose two different monte carlo methods to estimate the partial partition functions @xmath25 and @xmath26 .",
    "the first method uses uniform sampling and the second method uses samples from @xmath29 and @xmath30 .",
    "both methods need the value of @xmath31 and @xmath32 , the computation of which is addressed in section  [ sec : estcalx ] .      1 .",
    "draw samples @xmath33 uniformly from @xmath15 , and samples @xmath34 uniformly from @xmath16 .",
    "2 .   compute + rcl z^+ & = & _ k = 1^kf(x^(k ) ) [ eqn : unifp ] + z^- & = & _ = 1^lf(x^ ( ) ) [ eqn : unifn ]    @xmath35    it is easily verified that @xmath36 = z_f^{+}$ ] and @xmath37 = z_f^-$ ] .    one way to draw samples uniformly from @xmath15 and/or @xmath16 is by drawing samples @xmath38 uniformly from @xmath1 and partitioning them according to the sign of @xmath24 .      1 .",
    "draw samples @xmath33 from @xmath15 according to @xmath29 , as in ( [ eqn : pfplus ] ) , and samples @xmath39 from @xmath16 according to @xmath30 , as in ( [ eqn : pfminus ] ) .",
    "2 .   compute + lcl ^+ & = & _ k = 1^k [ eqn : estabsz2 ] + ^- & = & _ = 1^l [ eqn : estabsz3 ]    @xmath35    it is easy to prove ( see appendix  a ) that @xmath40 = \\frac{1}{z_f^{+}}$ ] and @xmath41 = \\frac{1}{z_f^-}$ ] .",
    "again , we propose two different methods , one for uniform sampling and another for sampling from @xmath13 . in each case , the same samples as in section  [ sec : secestzf ] can be used .      1 .",
    "draw samples @xmath33 uniformly from @xmath1 .",
    "2 .   compute + lcl ^+ & = & _ k = 1^k [ f(x^k ) > 0 ] [ eqn : estxp ] + ^- & = & _ k = 1^k [ f(x^k ) < 0 ] [ eqn : estxn ] + ^0 & = & _ k = 1^k [ f(x^k ) = 0 ] [ eqn : estxz ]    @xmath35    in these equations , @xmath45 $ ] denotes the iverson bracket  @xcite , which evaluates to one if the condition in the bracket is satisfied and to zero otherwise .",
    "it is easy to prove that @xmath46 = |{\\mathcal{x}}^{+}|$ ] , @xmath47 = |{\\mathcal{x}}^{-}|$ ] , and @xmath48 = |{\\mathcal{x}}^{0}|$ ] .",
    "we assume @xmath49 .    1 .",
    "draw samples @xmath33 from @xmath1 according to @xmath13 , as in  ( [ eqn : pdef ] ) .",
    "2 .   compute + rcl & = & _ k = 1^k [ eqn : estz1 ] + & = & _ k = 1^k [ eqn : estabsz1 ]    @xmath35    it is not hard to prove ( see appendix  b ) that @xmath50 = \\frac{|{\\mathcal{x}}^+| - |{\\mathcal{x}}^{-}|}{z_{|f|}}$ ] and @xmath51 = \\frac{|{\\mathcal{x}}|}{z_{|f|}}$ ] . using  ( [ eqn : stateeq ] ) , we can then obtain estimates of @xmath42 and @xmath43 from    rcl |^+| + |^-| & = & || +",
    "in ( [ eqn : statepos])([eqn : zfmsum ] ) , we partitioned @xmath52 and @xmath27 according to the sign of @xmath53 . in the complex case ,",
    "we allow more such bins , one for each possible argument ( phase ) of @xmath53 , as illustrated by the example in section  [ sec:2dcomplex ] .",
    "the algorithms of sections  [ sec : secestzf ] and  [ sec : estcalx ] are easily generalized to this setting .",
    "however , the computation of probabilities in factor graphs for quantum probabilities as in  , can actually be reduced to the real case as in sections  [ sec : probpartialz ] and  [ sec : secestzf ] ( as will be detailed elsewhere ) .",
    "in our numerical experiments , we consider two - dimensional factor graphs of size @xmath54 , with binary variables @xmath55 , i.e. , @xmath56 .    we suppose @xmath57 , and @xmath3 factors into @xmath58 where the product runs over all adjacent pairs @xmath59 .",
    "the corresponding forney factor graph with factors as in  ( [ eqn : factorization ] ) is shown in fig .",
    "[ fig:2dgridt ] , where the boxes labeled `` @xmath60 '' are equality constraints @xcite .",
    "let us consider a factor graph with factors as    @xmath61    for this particular case , we prove in appendix c that @xmath62 and @xmath63 are analytically available as @xmath64 we estimate @xmath65 using uniform sampling with estimator  ( [ eqn : unifp ] ) of section  [ sec : unifz ] , and the oagata - tanemura method with estimator  ( [ eqn : estabsz2 ] ) of section  [ sec : ogataz ] .    some experimental results are shown in figs .",
    "[ fig : plot1 ] through [ fig : plot22 ] .",
    "all figures refer to @xmath3 with factors as in  ( [ eqn : nrgkernelex ] ) , and show the quantity @xmath66 vs.  the number of samples @xmath67 .    figs .",
    "[ fig : plot1 ] and  [ fig : plot2 ] show simulation results using uniform sampling and fig .  [",
    "fig : plot22 ] using the ogata - tanemura method . for @xmath68 ,",
    "the estimated @xmath66 is about @xmath69 , and for @xmath70 , it is about @xmath71 . as discussed in section",
    "[ sec : secestzf ] , @xmath72 can be computed analogously .",
    "we extend our numerical experiments to factor graphs with complex factors as @xmath73 where @xmath74 is the unit imaginary number .",
    "we define    lcl ^(+i ) & & \\{x : f(x ) i_>0 } [ eqn : stateimg ] + ^(-i ) & & \\{x : f(x ) -i_>0 } [ eqn : statenimg ]    where @xmath75 .    to estimate @xmath62 , @xmath63 , @xmath76 , and @xmath77",
    ", we can apply uniform sampling of section  [ sec : unifx ] by first drawing samples @xmath78 uniformly from @xmath52 , and then using the samples in the relevant estimators according to the value of @xmath79 , e.g. , in  ( [ eqn : estxp ] ) if @xmath79 is a real positive number .    for a factor graph of size @xmath80 ,",
    "[ fig : plot5 ] shows the estimated @xmath81 vs.  the number of samples @xmath67 .",
    "we obtain @xmath82 .",
    "we again apply uniform sampling to estimate @xmath65 , see section  [ sec : unifz ] .",
    "some experimental results are shown in figs .",
    "[ fig : plot3 ] and [ fig : plot4 ] .",
    "all figures refer to @xmath3 with factors as in  ( [ eqn : imgkernelex ] ) , and show the quantity @xmath66 vs.  the number of samples @xmath67 .    in fig .",
    "[ fig : plot3 ] , we have @xmath68 and the estimated @xmath66 is about @xmath83 . in fig .  [",
    "fig : plot4 ] , the estimated @xmath66 is about @xmath84 for a factor graph of size @xmath80 .",
    "we have shown that monte carlo methods as in @xcite can be extended to estimate the partition function of factor graphs with negative and complex factors . however , the cancellation problem of partial partition functions as in ( [ eqn : zplusminus ] ) has not been addressed .",
    "suppose samples @xmath85 are drawn from @xmath15 according to @xmath29 , as in ( [ eqn : pfplus ] ) .",
    "we have @xmath86 & = & \\frac{1}{k|{\\mathcal{x}}^{+}| } \\sum_{k = 1}^{k}{\\operatorname{e}}\\big[\\frac{1}{f(x^{(k)})}\\big ] \\\\ & = & \\frac{1}{k|{\\mathcal{x}}^{+}| } \\sum_{k= 1}^{k}\\sum_{x \\in { \\mathcal{x}}^{+}}\\frac{p^{+}_f(x)}{f(x ) } \\\\ & = & \\frac{1}{k|{\\mathcal{x}}^{+}| } \\sum_{k = 1}^{k } \\frac{|{\\mathcal{x}}^{+}|}{z^{+}_f } \\\\ & = & \\frac{1}{z^{+}_f}\\end{aligned}\\ ] ] @xmath35    the proof of @xmath87 = \\frac{1}{z_f^{-}}$ ] follows along the same lines .",
    "suppose samples @xmath85 are drawn from @xmath1 according to @xmath13 , as in  ( [ eqn : pdef ] ) .",
    "we have @xmath88 & = & \\frac{1}{k } \\sum_{k = 1}^{k}{\\operatorname{e}}\\big[\\frac{1}{f(x^{(k)})}\\big ] \\\\ & = & \\frac{1}{k } \\sum_{k = 1}^{k}\\sum_{x \\in { \\mathcal{x}}}\\frac{p_{|f|}(x)}{f(x ) } \\\\ & = & \\frac{1}{z_{|f| } } \\sum_{x \\in { \\mathcal{x } } } \\frac{|f(x)|}{f(x ) } \\\\ & = & \\frac{|{\\mathcal{x}}^+| - |{\\mathcal{x}}^{-}|}{z_{|f|}}\\end{aligned}\\ ] ] @xmath35    the proof of @xmath51 = \\frac{|{\\mathcal{x}}|}{z_{|f|}}$ ] follows along the same lines .",
    "we consider a two - dimensional factor graph of size@xmath54 , where @xmath89 is finite and @xmath90 , with factors @xmath91 where @xmath92 and @xmath93 .",
    "we use the normal factor graph duality theorem  @xcite to show that for this choice of factors , @xmath27 , as defined in  ( [ eqn : partitionfunction ] ) , is zero .    consider the dual of the forney factor graph with factors as in  ( [ eqn:2da ] ) . in the dual graph ,",
    "the equality constraints are replaced by xor factors , and each factor  ( [ eqn:2da ] ) by its two - dimensional fourier transform which has the following form @xmath94    the corresponding forney factor graph of the dual graph is shown in fig .",
    "[ fig:2dgridf ] , where the unlabeled boxes represent factors as in  ( [ eqn:2dzerof ] ) .",
    "let us denote the partition function of the dual graph by @xmath95 .",
    "note that , each factor @xmath96 is non - zero if @xmath97 . therefore , only the all - ones pattern might have a non - zero contribution to @xmath95 . but this pattern does not satisfy the xor factors of degree three in the dual graph , therefore @xmath98 . using the normal factor graph duality theorem ( * ? ? ? * theorem 2 ) , @xcite , we conclude that @xmath99 .",
    "therefore , using  ( [ eqn : zplusminus ] ) and  ( [ eqn : zabsplusminus ] ) , we obtain @xmath100    putting @xmath101 ( or @xmath102 ) , we have @xmath103 and hence the following    rcl z_f^+ & = & |^+| + -z_f^- & = & |^-|    thus @xmath104 , we have @xmath105 , @xmath106 , and @xmath107 . finally , note that , we can still show @xmath99 if @xmath108 .",
    "( 76,64)(0,0 ) ( 0,60)(4,4)@xmath60 ( 4,62)(1,0)8 ( 12,60)(4,4 ) ( 16,62)(1,0)8 ( 24,60)(4,4)@xmath60 ( 28,62)(1,0)8 ( 36,60)(4,4 ) ( 40,62)(1,0)8 ( 48,60)(4,4)@xmath60 ( 52,62)(1,0)8 ( 60,60)(4,4 ) ( 64,62)(1,0)8 ( 72,60)(4,4)@xmath60 ( 2,54)(0,1)6 ( 0,50)(4,4 ) ( 2,50)(0,-1)6 ( 26,54)(0,1)6 ( 24,50)(4,4 ) ( 26,50)(0,-1)6 ( 50,54)(0,1)6 ( 48,50)(4,4 ) ( 50,50)(0,-1)6 ( 74,54)(0,1)6 ( 72,50)(4,4 ) ( 74,50)(0,-1)6 ( 0,40)(4,4)@xmath60 ( 4,42)(1,0)8 ( 12,40)(4,4 ) ( 16,42)(1,0)8 ( 24,40)(4,4)@xmath60 ( 28,42)(1,0)8 ( 36,40)(4,4 ) ( 40,42)(1,0)8 ( 48,40)(4,4)@xmath60 ( 52,42)(1,0)8 ( 60,40)(4,4 ) ( 64,42)(1,0)8 ( 72,40)(4,4)@xmath60 ( 2,34)(0,1)6 ( 0,30)(4,4 ) ( 2,30)(0,-1)6 ( 26,34)(0,1)6 ( 24,30)(4,4 ) ( 26,30)(0,-1)6 ( 50,34)(0,1)6 ( 48,30)(4,4 ) ( 50,30)(0,-1)6 ( 74,34)(0,1)6 ( 72,30)(4,4 ) ( 74,30)(0,-1)6 ( 0,20)(4,4)@xmath60 ( 4,22)(1,0)8 ( 12,20)(4,4 ) ( 16,22)(1,0)8 ( 24,20)(4,4)@xmath60 ( 28,22)(1,0)8 ( 36,20)(4,4 ) ( 40,22)(1,0)8 ( 48,20)(4,4)@xmath60 ( 52,22)(1,0)8 ( 60,20)(4,4 ) ( 64,22)(1,0)8 ( 72,20)(4,4)@xmath60 ( 2,14)(0,1)6 ( 0,10)(4,4 ) ( 2,10)(0,-1)6 ( 26,14)(0,1)6 ( 24,10)(4,4 ) ( 26,10)(0,-1)6 ( 50,14)(0,1)6 ( 48,10)(4,4 ) ( 50,10)(0,-1)6 ( 74,14)(0,1)6 ( 72,10)(4,4 ) ( 74,10)(0,-1)6 ( 0,0)(4,4)@xmath60 ( 4,2)(1,0)8 ( 12,0)(4,4 ) ( 16,2)(1,0)8 ( 24,0)(4,4)@xmath60 ( 28,2)(1,0)8 ( 36,0)(4,4 ) ( 40,2)(1,0)8 ( 48,0)(4,4)@xmath60 ( 52,2)(1,0)8 ( 60,0)(4,4 ) ( 64,2)(1,0)8 ( 72,0)(4,4)@xmath60    ( 76,64)(0,0 ) ( 0,60)(4,4)@xmath109 ( 4,62)(1,0)8 ( 12,60)(4,4 ) ( 16,62)(1,0)8 ( 24,60)(4,4)@xmath109 ( 28,62)(1,0)8 ( 36,60)(4,4 ) ( 40,62)(1,0)8 ( 48,60)(4,4)@xmath109 ( 52,62)(1,0)8 ( 60,60)(4,4 ) ( 64,62)(1,0)8 ( 72,60)(4,4)@xmath109 ( 2,54)(0,1)6 ( 0,50)(4,4 ) ( 2,50)(0,-1)6 ( 26,54)(0,1)6 ( 24,50)(4,4 ) ( 26,50)(0,-1)6 ( 50,54)(0,1)6 ( 48,50)(4,4 ) ( 50,50)(0,-1)6 ( 74,54)(0,1)6 ( 72,50)(4,4 ) ( 74,50)(0,-1)6 ( 0,40)(4,4)@xmath109 ( 4,42)(1,0)8 ( 12,40)(4,4 ) ( 16,42)(1,0)8 ( 24,40)(4,4)@xmath109 ( 28,42)(1,0)8 ( 36,40)(4,4 ) ( 40,42)(1,0)8 ( 48,40)(4,4)@xmath109 ( 52,42)(1,0)8 ( 60,40)(4,4 ) ( 64,42)(1,0)8 ( 72,40)(4,4)@xmath109 ( 2,34)(0,1)6 ( 0,30)(4,4 ) ( 2,30)(0,-1)6 ( 26,34)(0,1)6 ( 24,30)(4,4 ) ( 26,30)(0,-1)6 ( 50,34)(0,1)6 ( 48,30)(4,4 ) ( 50,30)(0,-1)6 ( 74,34)(0,1)6 ( 72,30)(4,4 ) ( 74,30)(0,-1)6 ( 0,20)(4,4)@xmath109 ( 4,22)(1,0)8 ( 12,20)(4,4 ) ( 16,22)(1,0)8 ( 24,20)(4,4)@xmath109 ( 28,22)(1,0)8 ( 36,20)(4,4 ) ( 40,22)(1,0)8 ( 48,20)(4,4)@xmath109 ( 52,22)(1,0)8 ( 60,20)(4,4 ) ( 64,22)(1,0)8 ( 72,20)(4,4)@xmath109 ( 2,14)(0,1)6 ( 0,10)(4,4 ) ( 2,10)(0,-1)6 ( 26,14)(0,1)6 ( 24,10)(4,4 ) ( 26,10)(0,-1)6 ( 50,14)(0,1)6 ( 48,10)(4,4 ) ( 50,10)(0,-1)6 ( 74,14)(0,1)6 ( 72,10)(4,4 ) ( 74,10)(0,-1)6 ( 0,0)(4,4)@xmath109 ( 4,2)(1,0)8 ( 12,0)(4,4 ) ( 16,2)(1,0)8 ( 24,0)(4,4)@xmath109 ( 28,2)(1,0)8 ( 36,0)(4,4 ) ( 40,2)(1,0)8 ( 48,0)(4,4)@xmath109 ( 52,2)(1,0)8 ( 60,0)(4,4 ) ( 64,2)(1,0)8 ( 72,0)(4,4)@xmath109",
    "the first author would like to thank radford neal , ruslan salakhutdinov , and neal madras for helpful discussions .",
    "the authors would also like to thank pascal vontobel for his helpful comments on an earlier draft of this paper .",
    "loeliger and m.  molkaraie , `` estimating the partition function of fields and the capacity of constrained noiseless channels using tree - based gibbs sampling , '' _ proc .",
    "2009 ieee information theory workshop , _ taormina ,",
    "italy , october 1116 , pp ."
  ],
  "abstract_text": [
    "<S> the partition function of a factor graph can sometimes be accurately estimated by monte carlo methods . in this paper , </S>",
    "<S> such methods are extended to factor graphs with negative and complex factors . </S>"
  ]
}
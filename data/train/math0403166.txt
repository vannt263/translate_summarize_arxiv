{
  "article_text": [
    "finite dynamical systems are time - discrete dynamical systems on finite state sets .",
    "well - known examples include cellular automata and boolean networks , which have found broad applications in engineering , computer science , and , more recently , computational biology .",
    "( see , e.g. , [ k , ao , cs ] for biological applications . ) more general multi - state systems have been used in control theory [ g , lb , m1 , m2 ] , the design and analysis of computer simulations [ br , bmr1 , bmr2 , lp2 ] , and in computational biology as well [ ls ] .",
    "one underlying mathematical question that is common to many of these applications is how to analyze the dynamics of the models without actually enumerating all state transitions , since enumeration has exponential complexity in the number of model variables .",
    "the present paper is a contribution toward an answer to this question .    for our purposes ,",
    "a finite dynamical system is a function @xmath0 , where @xmath1 is a finite set [ lp1 ] .",
    "many applications assume @xmath1 to be of the form @xmath2 , where @xmath3 and @xmath4 is a finite field , often the field with two elements . in this paper",
    "we restrict ourselves to the case @xmath5 .",
    "the dynamics is generated by iteration of @xmath6 , with the variables being updated simultaneously . in this paper",
    "we present a family of nonlinear systems for which the above question can be answered , that is , for which one can obtain information about the dynamics from the structure of the function .",
    "the answer is given in terms of properties of the dependency graph of the system , that is , the directed graph that represents the dependence of the coordinate functions of @xmath6 on the other coordinates .",
    "we assume that @xmath7 , @xmath3 , is a finite dynamical system .",
    "the dynamics of @xmath6 is encoded in its _ state space _ @xmath8 , which is a directed graph defined as follows .",
    "the vertices of @xmath8 are the @xmath9 elements of @xmath2 .",
    "there is a directed edge @xmath10 in @xmath8 if @xmath11 . in particular , a directed edge from a vertex to itself is admissible .",
    "that is , @xmath8 encodes all state transitions of @xmath6 , and has the property that every vertex has out - degree exactly equal to @xmath12 .",
    "each connected graph component of @xmath8 consists of a directed cycle , a so - called _ limit cycle _ , with a directed tree attached to each vertex in the cycle , consisting of the so- called _",
    "transients_.    observe that @xmath6 can be described in terms of its coordinate functions @xmath13 , that is , @xmath14 .",
    "it is well known that , if @xmath4 is any finite field with @xmath15 elements and @xmath16 is any set - theoretic function , then @xmath17 can be represented by a polynomial in @xmath18 $ ] [ ln , p. 369 ] .",
    "this polynomial can be chosen uniquely so that any variable in it appears to a degree less than the number of elements in @xmath4 .",
    "that is , for any @xmath17 there is a unique @xmath19/\\langle x_i^q - x_i|i=1,\\ldots , n\\rangle$ ] , such that @xmath20 for all @xmath21 .",
    "consequently , any finite dynamical system over a finite field can be represented as a polynomial system .",
    "this is the point of view we take in this paper . for @xmath22",
    "this implies that every function can be represented by a square - free polynomial .",
    "observe further that any polynomial function over @xmath23 with square - free monomials can be represented as a boolean function , with multiplication corresponding to the logical and , addition to the logical xor , and negation as addition of the constant term @xmath12 .",
    "this implies that any finite dynamical system over @xmath24 can be realized as a boolean network . for a polynomial system",
    "@xmath14 the problem to be investigated then becomes one of drawing conclusions about the structure of the state space @xmath8 from the structure of the @xmath25 .",
    "we first present a brief survey of existing results .    in the case of a linear system over an arbitrary finite field",
    "this question has a complete answer [ h ] .",
    "let @xmath26 be a matrix representation of a linear system @xmath7 .",
    "( that is , the @xmath25 are linear polynomials without constant term . )",
    "then the number of limit cycles and their length , as well as the structure of the transients , can be determined from the factorization of the characteristic polynomial of the matrix @xmath26 .",
    "the structure of the limit cycles had been determined earlier by elspas [ e ] , and for affine systems by milligan and wilson [ mw ] . for nonlinear systems",
    "a very elegant general approach was proposed in [ c ] .",
    "a general nonlinear system can be embedded in a linear one , to which the author then applied techniques like in [ e ] to obtain the number and length of the limit cycles .",
    "the drawback of this method is that , if the nonlinear system has dimension @xmath27 and the field has @xmath15 elements , then the linear system has dimension @xmath28 .",
    "it is also very difficult to see directly the effect of the specific nonlinear functions on the state space structure .",
    "very few results exist for general classes of nonlinear systems .",
    "some facts about nonlinear one - dimensional cellular automata can be found in wolfram s work [ w ] .",
    "for sequentially updated systems , there are a some results in [ bmr1 ] .",
    "for instance , it is shown there ( proposition 5 ) that sequentially updated boolean nor systems do not have any fixed points . in the one - dimensional case",
    "this problem has been studied extensively over the @xmath29-adic numbers , that is , the dynamics of univariate polynomials over @xmath30 , viewed as a dynamical system . in particular , the case of monomials has been considered [ kn ] , which are the focus of the present paper .    in this paper",
    "we focus on the class of nonlinear systems over @xmath23 described by special types of polynomials , namely monomials .",
    "that is , we consider systems @xmath31 , so that each @xmath25 is a polynomial of the form @xmath32 , or a constant equal to @xmath33 or @xmath12 .",
    "this class includes all boolean networks made up of and functions .",
    "associated to a general polynomial system one can construct its _ dependency graph _ @xmath34 , whose vertices @xmath35 correspond to the variables of the @xmath25 . there is a directed arrow @xmath36 if @xmath37 appears in @xmath25 .",
    "a special definition needs to be made to account for constant polynomials . for boolean monomial systems",
    "the dependency graph in fact allows the unambiguous reconstruction of the system .",
    "the main results of this paper show that in this case the cycle structure of the state space @xmath8 can be determined exclusively from the dependency graph @xmath38 , that is , from the structure of the @xmath25 .",
    "the key role is played by a numerical invariant associated to a strongly connected directed graph , that is , a graph in which there exists a walk ( a directed path ) between any two vertices .",
    "for such a graph one can define its _ loop number _ as the minimum of the distances of two walks from some vertex to itself .",
    "( the number is the same no matter which vertex is chosen . )",
    "it turns out that the dependency graph of a monomial system can be decomposed into strongly connected components whose loop numbers determine the structure of the limit cycles .",
    "if the loop number of every strongly connected component is one , then the state space has only fixed points as limit cycles , that is , @xmath6 is a fixed point system .",
    "let @xmath39 be a boolean monomial parallel update system , where the monomial functions are of the form @xmath40 with @xmath41 and @xmath42 . if @xmath43 we set all @xmath44 .",
    "let @xmath45 be the @xmath46-fold composition of the map @xmath6 with itself .",
    "we write @xmath47 . by definition",
    "we have @xmath48    with @xmath6 we associate a digraph @xmath49 , called _ dependency graph _ , with vertex set @xmath50 .",
    "there is a directed edge from @xmath51 to @xmath52 if @xmath53 and @xmath37 is a factor in @xmath25 ( i.e. @xmath54 ) .",
    "there is a directed edge from @xmath51 to @xmath55 if @xmath43 ( i.e. @xmath56 ) .",
    "observe that loops @xmath57 are permitted .",
    "they occur if @xmath25 has the factor @xmath58 .",
    "if there is an edge @xmath59 ( @xmath60 ) , then there is no edge @xmath61 for any @xmath62 .",
    "it is straightforward to see that the monomial system @xmath6 is completely described by the dependency graph @xmath49 .",
    "we give two simple examples :    [ examples ]    1 .",
    "the system @xmath6 given by the function @xmath63 has the following dependency graph @xmath64{300}1a    \\putmorphism(0 , 0)(1 , 0)[a_2`a_4`]{300}1a    \\putmorphism(0 , 300)(1 , -1)[``]{300}{-1}l    \\putmorphism(0 , 300)(0 , -1)[``]{300}{-1}l    \\putmorphism(300 , 300)(0 , -1)[``]{300}1l    \\efig\\ ] ] and the state space given in figure [ examplestatespace ] .",
    "+    [ examplestatespace ] 2 .",
    "the system @xmath6 given by the function @xmath65 has the following dependency graph @xmath66{300}1a    \\putmorphism(300 , 600)(1 , 0)[\\phantom{a_2}`a_3`]{300}1a    \\putmorphism(600 , 600)(1 , 0)[\\phantom{a_3}`a_4`]{300}1a    \\putmorphism(900 , 600)(1 , 0)[\\phantom{a_4}`a_5`]{300}1a    \\putmorphism(600 , 300)(1 , 0)[a_6`a_7`]{300}{-1}a    \\putmorphism(900 , 300)(1 , 0)[\\phantom{a_7}`a_8`]{300}1a    \\putmorphism(1200 , 320)(1 , 0)[\\phantom{a_8}`a_9`]{300}1a    \\putmorphism(1200 , 280)(1 ,   0)[\\phantom{a_8}`\\phantom{a_9}`]{300}{-1}a    \\putmorphism(300 , 0)(1 , 0)[a_{10}`a_{11}`]{300}1a    \\putmorphism(600 , 0)(1 ,   0)[\\phantom{a_{11}}`\\varepsilon`]{300}1a    \\putmorphism(0 , 600)(1 , -2)[``]{300}{-1}l    \\putmorphism(600 , 600)(1 , -1)[``]{300}1l    \\putmorphism(300 , 600)(0 , -1)[``]{600}1l    \\putmorphism(600 , 600)(0 , -1)[``]{300}{-1}l    \\putmorphism(900 , 600)(0 , -1)[``]{300}1l    \\putmorphism(1180 , 600)(0 , -1)[``]{300}{-1}l    \\putmorphism(1220 , 600)(0 , -1)[``]{300}1l    \\putmorphism(1200 , 600)(1 , -1)[``]{300}1l    \\putmorphism(1200 , 300)(-3 , -1)[``]{900}{-1}l    \\efig\\ ] ] our theorems will show , that this system is a fixed point system , that is , all limit cycles are fixed points .",
    "in fact the state space of this system has 3 fixed points and 2048 nodes .",
    "[ xfactors ] let @xmath49 be the dependency graph of @xmath6 and assume @xmath67 .",
    "there exists a walk @xmath68 of length @xmath46 in @xmath49 iff @xmath69 contains the factor @xmath37 .",
    "assume that there are directed edges from @xmath51 to @xmath70 .",
    "any walk leaving @xmath51 goes through one of the @xmath70 as a first step .",
    "so @xmath71 .",
    "the claim now follows by induction and the observation that @xmath72 . for the converse",
    "observe that from @xmath73 it follows that , if @xmath37 is a factor of @xmath69 it must also be a factor of some @xmath74",
    ". we can then again proceed by induction to get a walk of length @xmath46 from @xmath51 to @xmath52 .",
    "[ functionproduct ] @xmath75 is the product of all functions @xmath76 for all walks @xmath77 of length @xmath78 .",
    "this follows by induction , as in proposition [ xfactors ] .",
    "[ zerocor ] if there is a walk @xmath68 of length less than or equal to @xmath79 , and if @xmath80 , then the function @xmath75 is zero .",
    "let @xmath49 be the dependency graph of @xmath6 .    1 .",
    "we write @xmath81 for @xmath82 .",
    "2 .   for vertices",
    "@xmath83 , we call @xmath84 and @xmath85 _ strongly connected _ , and write @xmath86 , if and only if there is a walk @xmath87 and a walk @xmath88",
    ". observe that there is always a walk of length zero ( the empty walk ) from @xmath84 to @xmath84 .",
    "then @xmath86 is an equivalence relation on @xmath89 , called _ strong equivalence_. 3 .",
    "the equivalence class of @xmath81 is called a _ ( strongly ) connected component _ and is denoted by @xmath90 .",
    "let @xmath91 be the set of equivalence classes .",
    "4 .   a vertex @xmath84 with an edge @xmath92",
    "is called a _",
    "zero_. 5 .   for @xmath93 ,",
    "let @xmath87 be a walk .",
    "we denote the length of the walk @xmath29 by @xmath94 .",
    "the smallest strongly connected components are described as follows .",
    "if @xmath95 is a vertex with @xmath96 then there is by definition no edge originating in @xmath51 , so @xmath51 defines a one element strongly connected component which contains only the empty walk .",
    "the same holds in case @xmath60 , except that there is an edge @xmath59 , but there is still only one walk , the empty walk , from @xmath51 to @xmath51 .",
    "if @xmath97 , then @xmath51 also defines a one element strongly connected component , since there is no edge @xmath98 for @xmath99 .",
    "however , there are infinitely many closed walks @xmath100 , one for each length @xmath101 .",
    "[ poset ] define @xmath102 iff there is a walk from @xmath84 to @xmath85 .",
    "then @xmath91 is a poset .",
    "observe that , given @xmath103 and @xmath104 , there is a walk from @xmath84 to @xmath85 if and only if there is a walk from @xmath105 to @xmath106 . if there is a walk from @xmath84 to @xmath85 and a walk from @xmath85 to @xmath84 , then @xmath84 and @xmath85 are strongly connected and thus @xmath107 .",
    "observe that @xmath51 defines a one point connected component @xmath108 if and only if @xmath109 or @xmath110 .",
    "this partial order will come up again in the discussion of glueing .",
    "it covers all the edges that do not occur in strongly connected components .",
    "in this section we will study strongly connected components .",
    "the study of the relations between connected components , that lead to the poset structure of @xmath91 will be done in the next section .",
    "we first discuss three trivial cases .",
    "let @xmath111 be a strongly connected component with @xmath84 a zero .",
    "then @xmath112 for all @xmath113 .",
    "let @xmath114 be a strongly connected component with @xmath115 .",
    "then @xmath116 for all @xmath113 .",
    "if @xmath49 is the dependency graph of an arbitrary function @xmath117 and if @xmath95 has a walk to a zero @xmath118 of length @xmath119 , then by corollary [ zerocor ] we have @xmath120 for all @xmath113 .",
    "let @xmath90 be the strongly connected component of @xmath121 .",
    "assume there is a walk from @xmath84 to a zero @xmath52 in @xmath49 .",
    "then there is an @xmath119 such that @xmath122 for all @xmath123 and all @xmath113 . in particular if @xmath49 is strongly connected and if @xmath124 is a zero , then @xmath6 is a fixed point system with exactly one fixed point @xmath125 .",
    "so for the rest of section [ conncomp ] we will assume that @xmath49 is strongly connected and we exclude the cases @xmath126 and @xmath127 .",
    "the _ loop number _ of @xmath81 is the minimum of all numbers @xmath128 with @xmath129 for all closed walks @xmath130 . if there is no closed walk from @xmath84 to @xmath84 then we set the loop number to be zero .",
    "this last case occurs only if @xmath131 and there is no edge from @xmath84 to @xmath84 ( i.e. @xmath132 , but we have excluded @xmath133 . ) .    if there is a loop @xmath134 then the loop number of @xmath84 is @xmath135 .",
    "let @xmath83 .",
    "we show that the loop numbers of @xmath84 and of @xmath85 are equal .",
    "we get    the loop number is constant on any strongly connected @xmath49 , so the loop number of a strongly connected @xmath49 is a well defined number @xmath136 .",
    "let @xmath137 and @xmath138 be walks .",
    "then @xmath139 are closed walks with @xmath140 , so the loop number of @xmath85 is less than or equal to the loop number of @xmath84 . by symmetry",
    "the loop number is constant on @xmath49 .",
    "[ l4.3 ] let the loop number of @xmath49 be @xmath141 .",
    "let @xmath142 and @xmath143 be walks .",
    "then @xmath144 .",
    "assume @xmath145 and let @xmath146 with @xmath147 .",
    "we want to show @xmath148 .",
    "let @xmath149 be such that @xmath150 .",
    "we have @xmath151 .",
    "then @xmath152 hence there are walks @xmath153 with @xmath154 because of the minimality of the loop number @xmath141 .",
    "so @xmath155 .",
    "[ looplength ] let the loop number of @xmath49 be @xmath141 .",
    "let @xmath156 be a closed walk",
    ". then @xmath157 .",
    "i m lemma [ l4.3 ] take @xmath29 and @xmath158 .",
    "[ pathstab ] let the loop number of @xmath49 be @xmath128",
    ". for each @xmath159 there exists an @xmath160 and walks @xmath161 of length @xmath162 for all @xmath163 .",
    "let @xmath164 be closed walks with @xmath165 . by corollary [ looplength ]",
    "@xmath94 is divisible by @xmath141 .",
    "let @xmath166 .",
    "let @xmath137 be a walk of length latexmath:[$s : =     @xmath163 as @xmath168 with @xmath169",
    ". then the composition of walks @xmath170 has length @xmath171 .",
    "observe that the number @xmath46 can be quite large . even if we take @xmath172 to be a walk of minimal length and @xmath173 of minimal length such that @xmath174 , i.e. @xmath175 and @xmath79 minimal , we get @xmath176 .",
    "this contributes to the lengths of transients in the state space .      for @xmath177",
    "we define @xmath178 this is an equivalence relation , called _",
    "loop equivalence_.    we have @xmath179 with a walk of length zero and thus reflexivity .",
    "transitivity is trivial . for symmetry",
    "let @xmath180 , then there is a walk @xmath181 with @xmath157 .",
    "let @xmath182 be any walk .",
    "then @xmath183 is a walk with @xmath184 by corollary [ looplength ] , hence @xmath185 and thus @xmath186 .",
    "there are exactly @xmath141 loop equivalence classes in @xmath49 .",
    "since there are walks starting in @xmath51 for all lengths @xmath187 , take a walk @xmath188 of length @xmath141 .",
    "the @xmath189 , @xmath190 are in different equivalence classes @xmath191 by lemma [ l4.3 ] .",
    "every @xmath192 is in one of these equivalence classes , since there is a walk @xmath193 of length @xmath194 , so there is a walk @xmath195 of length @xmath196 , hence @xmath197 .",
    "we may now label and enumerate the vertices of @xmath49 in the following way @xmath198 where each group @xmath199 is a loop equivalence class and there is an edge @xmath200 for all @xmath201 .",
    "if @xmath202 is the number of elements in each loop class , then @xmath203 .",
    "the following example of a strongly connected dependency graph of loop number 3 should illuminate this enumeration of vertices @xmath204 :",
    "@xmath205{300}{-1}a    \\putmorphism(300 , 600)(1 , 0)[\\phantom{a_2}`a_2`]{300}1a    \\putmorphism(0 , 600)(1 , -2)[`a_4`]{150}1l    \\putmorphism(300 , 600)(-1 , -2)[``]{150}{-1}l    \\putmorphism(600 , 600)(1 , -2)[`a_5`]{150}1l    \\putmorphism(300 , 0)(1 , 0)[a_3`a_6`]{300}{-1}a    \\putmorphism(750 , 300)(-1 , -2)[``]{150}1l    \\putmorphism(150 , 300)(1 , -2)[``]{150}{-1}l    \\efig\\ ] ]    [ cycleclassm ] let @xmath81 and let @xmath206 be the loop class of @xmath84 ( with @xmath207 ) .",
    "then there is an @xmath160 such that for all @xmath208 and all @xmath163 there is a walk @xmath209 of length @xmath210 .",
    "use proposition [ pathstab ] to obtain @xmath211 and walks @xmath212 of lengths @xmath213 for all @xmath163 and all @xmath208 . by lemma [ l4.3 ]",
    "each @xmath211 is divisible by @xmath141 .",
    "take @xmath214 .    before we study the fixed points and cycles of an arbitrary connected dependency graph we look at a simple example .",
    "the state space of a directed @xmath141-gon is isomorphic to the set of orbits of the action of the cyclic group of order @xmath141 acting on @xmath215 , the @xmath141-dimensional hypercube , by cyclically exchanging the canonical basis vectors .",
    "the dynamical system @xmath6 of a directed @xmath141-gon is @xmath216 .",
    "the states in the state space are elements of @xmath215 , and the action of @xmath6 and the powers of @xmath6 give an action of the cyclic group @xmath217 on @xmath215 by cyclic exchange of the basis vectors .",
    "[ main1 ] let @xmath49 be strongly connected with loop number @xmath128 and @xmath27 vertices .",
    "let @xmath198 be the enumeration of vertices of @xmath49 as described above .",
    "then there is an @xmath46 such that @xmath218 where @xmath219 , @xmath220 , @xmath221 , @xmath222 .",
    "furthermore @xmath223 @xmath224 @xmath225    for each loop class @xmath226 we use some @xmath227 from corollary [ cycleclassm ] and compute the values @xmath228 for all @xmath229 . by proposition [ xfactors ]",
    "we get @xmath230 for all @xmath231 .",
    "if we use the maximum @xmath46 of all such @xmath227 , then we have the structure of @xmath232 .",
    "to determine @xmath233 observe that for @xmath234 there are walks @xmath98 of length @xmath235 for all @xmath236 . by lemma [ l4.3 ]",
    "no walk of length @xmath235 starting in @xmath51 can end in a vertex different from these @xmath52 .",
    "hence @xmath237 for all @xmath238 .",
    "the rest of the proof follows by induction .",
    "this theorem allows us to give a complete description of the cycles in the state space of @xmath49 .",
    "let @xmath49 be as in theorem [ main1 ] .",
    "then the subgraph of cycles in the state space of @xmath6 is isomorphic to the state space of a directed @xmath141-gon , hence the set of orbits in the hypercube @xmath215 under the action of the cyclic group @xmath217 .    for every choice of arguments for the @xmath58 we end up in the form of @xmath232 .",
    "then @xmath6 acts on these points by a cyclic permutation , which defines the various cycles in the state space . by reducing the number of @xmath239 s with the same subscript to one , we get the system @xmath240 with the same cyclic action @xmath241 and @xmath242 .",
    "this system arises from a directed @xmath141-gon .",
    "[ fixedpoint1 ] let @xmath49 be as in the theorem .    1 .   the system @xmath6 has fixed points @xmath125 and @xmath243 .",
    "the system @xmath6 has limit cycles of all lengths dividing @xmath141 .",
    "3 .   the system @xmath6 is a fixed point system if and only if the loop number of @xmath49 is 1 .",
    "example [ examples ] ( 1 ) has two strongly connected components @xmath244 and @xmath245 with loop numbers 0 and 3 respectively .",
    "the second strongly connected component has two 3-cycles as well as two fixed points .",
    "example [ examples ] ( 2 ) has four strongly connected components @xmath246 , @xmath247,@xmath248 , and @xmath249 with loop numbers 3 , 1 , 1 , and 0 respectively .",
    "the second strongly connected component has two 3 cycles and two fixed points .",
    "the next two components have two fixed points each , and the last component has one fixed point . in both examples",
    "the strongly connected components of the systems are connected by further edges .",
    "so we have to investigate , how these additional edges effect the fixed point property .      in view of the importance of the loop number for determining",
    "if a system is a fixed point system , we describe some polynomial time algorithm to compute the loop number of a strongly connected component .",
    "let @xmath26 be the adjacency matrix of an arbitrary dependency graph @xmath49 with @xmath27 vertices .",
    "then the connected components can be read off the powers @xmath250 of @xmath26 by the fact that a vertex @xmath51 is connected by a walk of length @xmath175 to a vertex @xmath52 iff the @xmath251-th component of @xmath252 is non- zero .",
    "the strongly connected component of a vertex @xmath51 is obtained as follows : take the @xmath229-th row of all the matrices @xmath253 , find all nonzero entries and determine the set @xmath254 of associated @xmath62s .",
    "take the @xmath229-th column of all the matrices @xmath253 , find all nonzero entries and determine the set @xmath255 of associated @xmath62s .",
    "then @xmath256 is the set of indices @xmath62 such that @xmath52 is strongly connected with @xmath51 .",
    "now we assume that @xmath49 is strongly connected and we exclude the cases @xmath126 and @xmath127 . a closed walk @xmath257",
    "is called a _ circuit _ in @xmath49 if it has no repetitive vertices .",
    "a circuit has length at most @xmath27 , so it can be read off the powers @xmath250 of the adjacency matrix @xmath26 .",
    "in contrast , closed walks may have arbitrarily large lengths .",
    "let @xmath1 be a strongly connected graph .",
    "the loop number of @xmath49 is the greatest common divisor of the numbers @xmath229 with @xmath258 , such that @xmath259 has at least one non- zero diagonal entry .",
    "we first prove that the loop number of @xmath49 is the greatest common divisor of the lengths of all circuits of @xmath49 .",
    "the problem in proving this is , that the loop number can not be represented in general as the difference of the lengths of two circuits .",
    "observe that a closed walk @xmath29 can be decomposed into a number of circuits @xmath260 sharing vertices .",
    "let @xmath261 be the greatest common divisor of the lengths of all circuits of @xmath49 .",
    "take a vertex @xmath81 .",
    "let @xmath29 and @xmath15 be closed walks through @xmath84 representing the loop number @xmath262 of @xmath49 .",
    "we want to show @xmath263 .",
    "decompose @xmath29 and @xmath15 into a number of circuits @xmath264 and @xmath265 .",
    "then we get @xmath266 so that @xmath261 divides @xmath141 .",
    "now we show that @xmath141 divides the length of each circuit in @xmath49 .",
    "assume there is a circuit @xmath172 through @xmath267 whose length @xmath268 is not divisible by @xmath141 .",
    "there are walks @xmath269 and @xmath270 .",
    "let @xmath271 with @xmath272 and @xmath273 .",
    "so @xmath274 i.e. , we have constructed two closed walks whose lengths differ by @xmath275 . hence @xmath276 is the loop number of @xmath49 .",
    "then @xmath276 divides @xmath277 , a contradiction .",
    "thus all lengths of circuits in @xmath49 are divisible by @xmath141 , so that @xmath141 divides @xmath261 , hence @xmath263 .",
    "now the length of all possible closed walks ( of lengths @xmath278 ) can be read of the non - zero diagonal entries of the powers of the adjacency matrix .",
    "these walks are composed , as above , of circuits , and their lengths are sums of the lengths of certain circuits .",
    "so the greatest common divisor of the numbers @xmath229 , such that @xmath259 has at least one non - zero diagonal entry is the greatest common divisor of the lengths of all circuits of @xmath49 .",
    "let @xmath49 and @xmath279 be dependency graphs of functions @xmath280 and @xmath281 , respectively .",
    "a _ glueing @xmath282 of @xmath279 to @xmath49 _ consists of a digraph with vertices @xmath283 and edges @xmath284 ( disjoint union ) , together with a set of additional directed edges from vertices in @xmath279 to vertices in @xmath49 .",
    "the function of @xmath282 is denoted by @xmath285 .",
    "observe that @xmath49 is a subgraph of @xmath282 and that @xmath280 is a quotient system of @xmath286 .",
    "we write elements in @xmath287 as pairs @xmath288 with @xmath289 and @xmath290 .",
    "similarly we write the variables for the function @xmath291 as @xmath292 with @xmath293 and @xmath294 .",
    "thus we can write the function @xmath291 as @xmath295 with @xmath296 and @xmath297",
    ".    we will use the poset @xmath91 as in lemma [ poset ] together with the glueing procedure to study fixed point systems .",
    "we will discuss elements in @xmath91 with no edges ( @xmath132 ) separately .",
    "they are the strongly connected components of loop length 0 .",
    "[ fpscomponents ] let @xmath282 be a fixed point system .",
    "then @xmath49 is a fixed point system .",
    "this follows from the fact that @xmath6 is a quotient system of @xmath298 .",
    "indeed let @xmath299 .",
    "let @xmath160 be such that @xmath300 .",
    "then we have @xmath301 so that @xmath6 is a fixed point system .",
    "[ main2 ] let @xmath49 be a fixed point system and let @xmath279 be strongly connected of loop length @xmath302 .",
    "let @xmath282 be a glueing .",
    "the following are equivalent :    * the glueing @xmath282 is a fixed point system . * 1 .",
    "there is a vertex @xmath303 that is connected with a walk to a zero in @xmath49 , or 2 .",
    "@xmath279 is a fixed point system .",
    "@xmath304 we use the notation introduced above .",
    "assume that there is a vertex @xmath303 that is connected with a walk to a zero in @xmath49 .",
    "then all vertices of @xmath279 are connected to a zero . by corollary [ zerocor ]",
    "we get an @xmath305 such that @xmath306 for all @xmath113 and for all @xmath307 . since @xmath6 is a fixed point system we have @xmath308 .",
    "so for a sufficiently large exponent @xmath309 the component @xmath279 in @xmath282 can only contribute a fixed point @xmath310 .",
    "hence @xmath311 .",
    "let @xmath17 be a fixed point system .",
    "note that @xmath6 is a subsystem of @xmath298 .",
    "iterate @xmath298 until the component on @xmath49 becomes constant : @xmath312}_{r+1}(x , y ) ,   \\ldots , { [ ( f \\ # g)^m]}_{r+s}(x , y)),\\ ] ] where @xmath313 set @xmath314}_{r+1}(x , y ) ,   \\ldots , { [ ( f \\ # g)^m]}_{r+s}(x , y)).\\ ] ] then apply powers of @xmath298 to @xmath315 to get @xmath316 and @xmath317 so , for a fixed choice of @xmath318 , the functions @xmath319 , when viewed only as a function on elements from @xmath320 , are the functions @xmath321 multiplied with certain factors from the fixed point @xmath322 .",
    "this defines a new system @xmath323 , so that @xmath324 if one of the factors taken from @xmath322 is zero , then by corollary [ zerocor ] and by the fact that @xmath279 is strongly connected , we get that @xmath325 is a fixed point system with the only fixed point @xmath326 .",
    "if all of the factors taken from @xmath322 are 1 , then @xmath327 and hence is a fixed point system .",
    "so by ( * ) we see that @xmath328 ends in a fixed point for all choices of @xmath318 and @xmath239 .",
    "@xmath329 before we give the proof in this direction , we prove a lemma .",
    "let @xmath330 be the dependency graph of an arbitrary boolean monomial system .",
    "decompose @xmath330 into two parts , where @xmath331 is the glueing of all strongly connected components that allow a walk to a zero .",
    "let @xmath332 be the glueing of all the other strongly connected components of @xmath330 .",
    "then there are no walks from any vertex in @xmath332 to any vertex in @xmath331 , so that @xmath330 is a glueing of @xmath331 to @xmath332 .",
    "any system of the form @xmath332 has a fixed point @xmath333 .",
    "this is proved by induction on the number of connected components of @xmath332 .",
    "assume that @xmath334 where @xmath279 is a connected component with no zero .",
    "we can assume that @xmath335 has a fixed point @xmath243 .",
    "observe that @xmath279 belongs to the component @xmath336 ( not connected to a zero ) and @xmath279 has a fixed point @xmath333 by corollary [ fixedpoint1 ] .",
    "so we get from the induction hypothesis that @xmath332 has also a fixed point @xmath243 .",
    "_ proof of theorem continued .",
    "_ now assume that @xmath337 is a fixed point system , and that no vertex of @xmath279 is connected with a walk to a zero in @xmath49 .",
    "now we use as initial state @xmath292 for the system @xmath298 , with @xmath338 ( a fixed point of @xmath6 ) , where the component @xmath339 belongs to @xmath335 and @xmath340 belongs to @xmath341 , and @xmath239 arbitrary .",
    "then , as discussed above , the system @xmath342 coincides with @xmath281 .",
    "since @xmath298 is a fixed point system , the system @xmath17 can also only contain fixed points and no proper limit cycles .",
    "thus @xmath17 is a fixed point system .",
    "let @xmath6 be a fixed point system and let @xmath279 be strongly connected of loop length 0 .",
    "let @xmath282 be a glueing .",
    "then the system @xmath343 corresponding to the glueing @xmath337 is a fixed point system .",
    "there are two cases : @xmath279 is a one point component with @xmath344 and the case that @xmath279 is a one point component with @xmath345 .",
    "if @xmath345 , then there is no additional edge from @xmath346 to @xmath49 and thus @xmath298 is a fixed point system with fixed points of the form @xmath347 , where @xmath348 is a fixed point of @xmath6 . if @xmath344 then any additional edge from @xmath346 to @xmath95 adds a factor to the last component , so that @xmath349 .",
    "if @xmath350 is a fixed point for @xmath6 , i.e. @xmath351 then @xmath352 which is again a fixed point .",
    "so @xmath291 is a fixed point system .",
    "in this section @xmath49 will be the digraph of an arbitrary boolean monomial parallel update system .      1 .",
    "the system @xmath353 is a fixed point system .",
    "2 .   for every vertex @xmath81 one of the following holds 1 .   @xmath84 allows two closed walks @xmath130 of length @xmath354 , 2 .",
    "@xmath84 is connected with a walk to a zero , or 3 .",
    "there is no walk of length @xmath302 from @xmath84 to @xmath84 .",
    "let @xmath6 be a triangular system with dependency graph @xmath49 .",
    "then @xmath49 consists of the glueing of components with just one element",
    ". therefore each component corresponds to a fixed point system , and by theorem [ main2 ] we conclude that @xmath6 is a fixed point system as well .",
    "[ componentsfps ] let @xmath6 be a system with dependency graph @xmath49 .",
    "then @xmath6 is a fixed point system if and only if every strongly connected component of @xmath49 either corresponds to a fixed point system or is connected by a walk to a zero in @xmath49 .",
    "_ the order in which we enumerate the variables does not really matter .",
    "we will certainly get the same state space up to isomorphism .",
    "namely , if @xmath358 is a parallel update system and @xmath359 is a permutation , then @xmath360 has a state space isomorphic to the state space of @xmath6 . in particular",
    ", this defines a group action of @xmath361 on the fixed point systems on @xmath27 variables .",
    "[ main5 ] let @xmath49 be the digraph of a fixed point system @xmath362 .",
    "if there is no walk from @xmath51 to @xmath52 or if @xmath51 or @xmath52 have a walk of length greater than or equal to @xmath12 to themselves , then @xmath363 is a fixed point system .    by lemma [ poset ] and the definition of glueing",
    ", @xmath49 is an iterated glueing of connected components : @xmath364 . by corollary [ componentsfps ] the connected components @xmath365 are fixed point systems or they are connected by a directed path to a zero .",
    "the connected components that are fixed point systems then have loop number 0 or 1 .",
    "the multiplication of @xmath366 with @xmath58 introduces an extra edge @xmath367 into the digraph @xmath49 , unless there is already a factor @xmath58 in @xmath366 , in which case the graph does not change .",
    "let @xmath279 be the digraph of @xmath17 .",
    "we distinguish a number of cases .",
    "_ case 1 : _ suppose that @xmath51 and @xmath52 lie in the same component @xmath368 . if @xmath369 , then @xmath368 has loop number 1 or is connected to a zero .",
    "so all components retain their properties responsible for @xmath279 being a fixed point system .",
    "if @xmath370 , then the loop number of @xmath368 becomes 1 , so @xmath279 is again a fixed point system .    _",
    "case 2 : _ let @xmath51 lie in @xmath368 and @xmath371 , and assume that there is no walk from @xmath368 to @xmath372 . if there is a walk from @xmath372 to @xmath368 then @xmath373 in the partial order of @xmath91 ) .",
    "the existence of an edge @xmath367 does not change this property , so @xmath279 is a fixed point system .",
    "if there is no walk from @xmath372 to @xmath368 , then we can extend the partial order of @xmath91 to a total order such that @xmath373 . then the edge @xmath367 does not change the order of the glueing , so @xmath279 is a fixed point system",
    ".    _ case 3 : _ let @xmath374 and @xmath371 .",
    "assume that there is a walk from @xmath368 to @xmath372 and thus a walk from @xmath51 to @xmath52 . by hypothesis",
    "we have two cases .",
    "either there is a closed walk @xmath57 of length greater than or equal to @xmath12 .",
    "then the component @xmath368 has loop number 1 . after inserting the edge @xmath367 the two components @xmath368 and @xmath372",
    "are joined into one connected component of loop number 1 .",
    "all other components remain unchanged .",
    "so @xmath17 is a fixed point system . or",
    "there is a closed walk @xmath375 of length greater than or equal to @xmath12 .",
    "then the component @xmath372 has loop number 1 . after inserting the edge @xmath367 the two components @xmath368 and @xmath372",
    "are joined again into one connected component of loop number 1 .",
    "all other components remain unchanged .",
    "so @xmath17 is again a fixed point system .      it is sufficient to prove the corollary for the case where @xmath378 is a single variable .",
    "consider first the system @xmath379 . as in the proof of the previous theorem",
    "we get an edge from @xmath51 to @xmath51 which can only change the loop number of the component of @xmath51 to 1 .",
    "so this system is again a fixed point system .",
    "now we can apply theorem [ main5 ] @xmath380 times and get that @xmath381 is a fixed point system ."
  ],
  "abstract_text": [
    "<S> an important problem in the theory of finite dynamical systems is to link the structure of a system with its dynamics . </S>",
    "<S> this paper contains such a link for a family of nonlinear systems over the field with two elements . for systems that can be described by monomials ( including boolean and systems ) </S>",
    "<S> , one can obtain information about the limit cycle structure from the structure of the monomials . </S>",
    "<S> in particular , the paper contains a sufficient condition for a monomial system to have only fixed points as limit cycles . </S>",
    "<S> this condition depends on the cycle structure of the dependency graph of the system and can be verified in polynomial time . </S>"
  ]
}
{
  "article_text": [
    "the study of the hydrodynamics of colloidal suspensions of passive particles is an old yet still active subject in soft condensed matter physics and chemical engineering . in recent years",
    "there has been a growing interest in suspensions of active colloids @xcite , which exhibit rich collective behaviors quite distinct from those of passive suspensions .",
    "there is a growing number of computational methods for modeling active suspensions @xcite , which are typically built upon well - developed techniques for passive suspensions in steady stokes flow , i.e. , at zero reynolds number .",
    "since active particles typically have metallic subcomponents , they are often significantly denser than the solvent and sediment toward the bottom wall , making it necessary to address confinement and implement non - periodic boundary conditions in any method aimed at simulating experimentally - relevant configurations .",
    "furthermore , since collective motions seen in active suspensions involve large numbers of particles , and since hydrodynamic interactions among particles decay slowly like the inverse of the distance , it is crucial to develop methods that can capture long - ranged hydrodynamic effects , yet still scale to tens or hundreds of thousands of particles .    for suspensions of passive particles the methods of brownian @xcite and stokesian dynamics @xcite have dominated in chemical engineering , and related techniques have been used in biochemical engineering @xcite .",
    "these methods simulate the overdamped ( diffusive ) dynamics of the particles by using green s functions for steady stokes flow to capture the effect of the fluid .",
    "while this sort of implicit solvent approach works very well in many situations , it has several notable technical difficulties : achieving near linear scaling for many - particle systems is technically challenging , handling non - trivial boundary conditions ( bounded systems ) is complicated and has to be done on a case - by - case basis @xcite , generalizations to non - spherical ( and in particular complex ) particle shapes is difficult , and including thermal fluctuations is non - trivial due to the need to obtain stochastic increments with the desired covariance . in this work",
    "we develop relatively low - accuracy but flexible and simple rigid multiblob methods that address these difficulties .",
    "our approach builds heavily on a number of existing techniques , combining elements from several distinct but related methods .",
    "we extensively test the proposed methods and study their accuracy and performance on a number of test problems .",
    "the continuum formulation of the stokes equations with suitable boundary conditions on the surfaces of a collection of rigid particles is well - known and summarized in more detail in appendix [ sec : continuumformulation ] . due to the linearity of the stokes equations",
    ", there is an affine mapping from the applied forces @xmath0 and",
    "torques @xmath1 and any specified _ apparent slip _ velocity due to active boundary layers @xmath2 to the resulting particle motion given by the linear velocities @xmath3 and the angular velocities @xmath4 .",
    "specifically , @xmath5=\\m{\\mathcal{n}}\\left[\\begin{array}{c } \\v f\\\\ \\v{\\tau } \\end{array}\\right]-\\breve{\\m{\\mathcal{n}}}\\breve{\\v u},\\label{eq : n_def_cont}\\ ] ] where @xmath6 is the _ mobility matrix _ , and @xmath7 is an _ active mobility _ linear operator .",
    "the _ mobility problem _ consists of computing the rigid - body motion given the applied forces and torques and apparent slip .",
    "the inverse of this problem is the _ resistance problem _ , which computes the forces and torques on the body given a specified motion of the body and active slip .",
    "solving the mobility problem is a key component of any numerical method for modeling the deterministic or fluctuating ( brownian ) dynamics of the particles .    in this paper",
    "we develop a _ mobility solver _ for suspensions of rigid particles immersed in viscous fluid , specifically , we develop novel preconditioners for iterative solvers for the unknown motions of the rigid bodies , given the applied external forces and torques as well as active apparent slip on the surface of the particles . as we discuss in more detail in the body of the paper , our formulation can readily solve the resistance problem ; however , our iterative solvers will prove to be more scalable for mobility computations ( which are of primary interest ) than for resistance computations .",
    "key to the success of our iterative solvers is the idea that instead of eliminating variables using _ exact _ schur complements and solving a _ reduced _ system iteratively , as done in the majority of existing methods @xcite , one should instead iteratively solve an _ extended _ system that includes all of the variables .",
    "this has the key advantage that the matrix - vector product becomes an efficient direct calculation , and the schur complement can be computed only _ approximately _ and used to construct an effective preconditioner .",
    "like many other authors , we construct rigid bodies of essentially arbitrary shape as a collection of rigidly - connected collection of `` blobs '' or `` beads '' forming a composite object @xcite that we will refer to as a _ rigid multiblob_. the hydrodynamic interactions between blobs are represented using a rotne - prager tensor generalized to the desired domain geometry ( boundary conditions ) @xcite , specifically , we use the the rotne - prager - yamakawa ( rpy ) tensor @xcite for an unbounded domain , and the rotne - prager - blake ( rpb ) tensor @xcite for a half - space domain . in section",
    "[ sec : rigidmultiblobs ] we describe how to obtain the hydrodynamic coupling between a large collection of rigid multiblobs by solving a large linear system for lagrange multipliers enforcing the rigidity .",
    "a key contribution of our work is to develop an indefinite saddle - point preconditioner for iterative solution of the resulting linear system .",
    "this preconditioner is based on a block - diagonal approximation of the blob - blob mobility matrix , in which all hydrodynamic interactions among distinct bodies ( more precisely , among blobs on distinct bodies ) are neglected .",
    "the only system - specific component is the implementation of a fast matrix - vector multiplication routine , which in turn requires a scalable method for multiplying the rpy mobility matrix by a vector .    for simple geometries such as an unbounded domain or particles sedimented next to a no - slip boundary , simple analytical formulas for the rpy tensor",
    "are well - known @xcite , and can be used to construct an efficient matrix - vector multiplication routine , for example , using fast multipole methods ( fmms ) @xcite , or even direct summation on a gpu .",
    "we numerically study the performance and accuracy of the rigid multiblob methods for suspensions in an unbounded domain in section [ sec : resultsunbounded ] , and study particles sedimented near a no - slip boundary in section [ sec : resultswall ] .",
    "we find that resolving spherical particles with twelve blobs placed on the vertices of an icosahedron @xcite is notably more accurate than the fts ( force - torque - stresslet plus degenerate quadrupole ) truncation typically employed in stokesian dynamics simulations , provided that the effective hydrodynamic radius of the rigid multiblob is adjusted to account for the finite size of the blobs .",
    "we also find that a small number of iterations of a krylov method are required to solve the required linear system , and importantly , the number of iterations is constant _ independent _ of the the number of rigid bodies , making it possible to develop a linear or near - linear scaling algorithm . for _ resistance problems _",
    ", however , we observe a number of iterations growing at least as fast as the linear dimensions of the system .",
    "this is consistent with similar studies of iterative solvers for stokesian dynamics by ichiki @xcite .    for confined systems , however , even in the simplest case of a periodic system ,",
    "the green s function for stokes flow and the associated rpy tensor is difficult to obtain in closed form , and when it is possible to write an analytical result , the resulting formulas are typically based on infinite series that are expensive to evaluate . for periodic systems",
    "this is commonly addressed by using ewald summation @xcite based on the fast fourier transform ( fft ) @xcite ; the present state - of - the - art for stokes flow is the spectral ewald method @xcite , which has recently been used for stokesian dynamics simulations of periodic suspensions @xcite .",
    "a key deficiency of most existing methods is that they rely critically on having triply periodic domains and the use of the fft .",
    "generalizing these methods to non - periodic domains while keeping their linear scaling requires a large development effort and typically a new implementation for every different geometry @xcite .",
    "furthermore , in a number of applications involving active particles @xcite , there is a surface slip ( e.g. , electrohydrodynamic or osmophoretic flow ) induced on the bottom boundary due to the gradients created by the particles , and this slip drives or at least strongly affects the motion of the particles .",
    "accounting for this slip requires solving an additional equation such as a poisson or laplace equation for the electric potential or concentration of chemical fuel with nontrivial boundary conditions on the particle and wall surfaces .",
    "the solution of this additional equation provides the slip boundary condition for the stokes equations , which must be solved to find the resulting fluid flow and active particle motion .",
    "such nontrivial multi - physics coupling is quite hard to accomplish in existing methods .",
    "to address these difficulties , in section [ sec : rigidibamr ] we develop a method for general cuboidal confined domains which does not require analytical green s functions .",
    "this relies on an immersed boundary ( ib ) method for obtaining an approximation to the rpy tensor in confined geometries , as recently developed by some of us @xcite .",
    "this technique has been combined with the concept of multiblob representation of rigid bodies in a follow - up work @xcite , but in this work stiff elastic springs were used to enforce the rigidity . by contrast , we ensure the rigidity of the multiblobs via lagrange multipliers which are solved concurrently with solving for the fluid pressure and velocity .",
    "our key novel contribution is an effective preconditioner for the rigidly - constrained stokes problem in periodic and non - periodic domains , obtained by combining our recently - developed preconditioner for a rigid - body ib method @xcite with a block - diagonal preconditioner for the mobility subproblem .    in the ib method developed in section [",
    "sec : rigidibamr ] and studied numerically in section [ sec : resultsconfined ] , analytical green s functions are replaced by an `` on the fly '' computation carried out by a standard finite - volume fluid solver .",
    "this stokes solver can readily handle nontrivial boundary conditions , for example , slip along the walls @xcite can easily be accounted for .",
    "furthermore , suspensions at small but nonzero reynolds numbers can be handled with little extra work @xcite .",
    "additionally , we avoid uncontrolled approximations relying on truncations of multipole expansions to a fixed order @xcite , and we can seamlessly handle arbitrary body shapes and deformation kinematics .",
    "lastly , and importantly , in the spirit of fluctuating hydrodynamics @xcite , it is straightforward to generate the stochastic increments required to simulate the brownian motion of small rigid particles suspended in a fluid by including a fluctuating stress in the fluid equations , as we will discuss in more detail in future work ; here we focus on the deterministic mobility and resistance problems . at the same time",
    ", our method also has some disadvantages compared to methods such as boundary integral or boundary element methods .",
    "notably , it requires filling the domain with a dense uniform fluid grid , which is expensive at low densities .",
    "it is also a low - order method that can not compute solutions as accurately as spectral boundary integral formulations .",
    "we do believe , nevertheless , that the method developed here offers a good compromise between accuracy , efficiency , scalabilty , flexibility and extensibility , compared to other more specialized formulations .",
    "we apply our methods to a number of test problems for which analytical solutions are known , but also study a few nontrivial problems that have not been properly addressed in the literature . in section [ sub : cylinderwall ]",
    "we study the mobility of a cylinder of finite aspect ratio that is parallel to a no - slip boundary and compare to experimental measurements and asymptotic theory based on a slender - body approximation . in section",
    "[ sub : activepair ] we study the formation of a stable rotating pair of active `` extensor '' or `` pusher '' nanorods next to a no - slip boundary , and confirm the direction of rotation observed in recent experiments @xcite . in section [ sub : boomerang ] we compute the effective diffusion coefficient of a boomerang - shaped colloid in a slit channel , and compare to recent experimental measurements @xcite .",
    "in section [ sub : binarysedimentation ] we study the mean and variance of the sedimentation velocity in a binary suspension of spheres of size ratio two , and compare to recent stokesian dynamics simulations @xcite .",
    "in this section we develop the rigid multiblob model of colloidal particles at zero reynolds number .",
    "the kind of models we use here are not new , but we present the method in detail instead of relying on previous presentations , the most relevant of which are those of swan _ et al . _ @xcite .",
    "this is in part to present the formulation in our notation , and in part to explain the differences with other closely - related methods .",
    "our key novel contribution in this section is the preconditioned iterative solver described in section [ sub : preconditioner ] ; the performance and scaling of our mobility solver is studied numerically for unbounded domains in section [ sub : convergencefmm ] , and for particles confined near a single wall in section [ sub : convergencewall ] .",
    "the modeling of suspensions of rigid spheres at small reynolds numbers is a well - developed field with a long history . a powerful class of methods",
    "are related to brownian dynamics with hydrodynamic interactions ( bdhi ) @xcite and stokesian dynamics ( sd ) @xcite ( note that these terms are used differently in different communities ) .",
    "the difference between these two ( as we define them here ) is that bdhi uses what we call a minimally - resolved model @xcite in which each colloid ( for colloidal suspensions ) or polymer bead ( for polymeric suspensions ) is only resolved at the monopole level , more precisely , at the rotne - prager level @xcite . by contrast , in sd the next level in a multipole expansion is taken into account and torques and stresslets are also accounted for .",
    "it has been shown recently that yet one more order needs to be kept in the multipole expansion to model suspensions of active spheres @xcite , and a suitable galerkin truncation of the multipole hierarchy has been developed for active spheres in unbounded domains @xcite , as well as for active spheres confined near a no - slip boundary @xcite .",
    "it is also possible to account for higher - order multipoles @xcite , leading to more complicated ( and computationally expensive ) but also more accurate models .",
    "it has also been shown that multipole expansions converge very poorly for nearly touching spheres due to the divergence of the lubrication forces , and in most methods for dense colloidal suspensions of hard spheres pairwise lubrication corrections are added in a somewhat _ ad hoc _ manner ; we will refer to this approach as sd with lubrication .    given the well - developed tools for modeling sphere suspensions , it is natural to leverage them when modeling suspensions of particles of more complex shapes .",
    "here we describe a technique capable of , in principle , modeling passive rigid particles of arbitrary shape .",
    "the method can also be used to model , without any extra effort , active particles with active slip layers , i.e. , particles which are phoretic ( e.g. , osmo - phoretic , electro - phoretic , chemo - phoretic , etc . ) due to an apparent slip at their surface . for the purposes of hydrodynamic calculations ,",
    "we discretize rigid bodies by constructing them out of multiple rigidly - connected spherical `` blobs '' or beads of hydrodynamic radius @xmath8 .",
    "these blobs can be thought of as hydrodynamically minimally - resolved spheres forming a rigid conglomerate that approximates the hydrodynamics of the actual rigid object being studied .",
    "we prefer the word `` blob '' over `` sphere '' or `` point '' or `` monopole '' because blobs are not spheres as they do not have a well - defined surface like spheres do , they have a finite size associated with them ( the hydrodynamic blob radius @xmath8 ) unlike points , and they account for a degenerate quadrupole associated to the faxen corrections in addition to a force monopole . the word `` bead '' is also appropriate , but we prefer to reserve that for polymer models ( bead - spring or bead - link models ) .",
    "examples of `` multiblob '' @xcite models of two types of colloidal particles are illustrated in fig .",
    "[ fig : blobmodels ] . in the leftmost panel",
    ", we show a minimally - resolved model of a rigid rod , with dimensions similar to active metallic `` nanorods '' used in recent experiments @xcite . in this minimally - resolved model the blobs , shown as spheres with radius equal to @xmath8 ,",
    "are placed in a row along the axes of the cylinder .",
    "such minimally - resolved models are particularly suited for cylinders of large but finite aspect ratio ; for very thin rods such as actin filaments boundary integral methods based on slender - body theory @xcite will be more effective . in the more resolved model illustrated in the second panel from the left , a hexagon of blobs is placed around the circumference of the cylinder to better resolve it . a yet more resolved model with a dodecagon of blobs around the cylinder circumference is shown in the third panel from the left . in the rightmost panel of fig .",
    "[ fig : blobmodels ] we show a blob model of a colloidal boomerang with a square cross - section , as manufactured using lithography and studied in @xcite . similar `` bead '' or `` raspberry '' models appear in a number of studies of hydrodynamics of particle suspensions @xcite .    in many studies ,",
    "stiff elastic springs between the blobs are used to keep the structure rigid ; in some models the fluid or particle inertia is included also . here",
    ", we keep the structures _ strictly rigid _ and refer to the resulting structures as _ rigid multiblob _ models .",
    "such rigid multiblob models have been used in a number of prior studies @xcite , but we refer to @xcite for a detailed exposition . our primary focus in this section will be to develop algorithmic techniques that allow suspensions of tens or even hundreds of thousands of rigid multiblob particles to be simulated efficiently .",
    "this is in many ways primarily an exercise in numerical linear algebra , but one that is _ necessary _ to make the rigid multiblob approach useful for simulating moderately dense suspensions .",
    "a second goal , which will be realized in the results sections of this paper , will be to carefully assess the accuracy of rigid multiblob models as a function of their resolution ( number of blobs per body ) .",
    "we now summarize the main equations used to solve the mobility and resistance problems for a collection of rigid multiblobs immersed in a viscous fluid .",
    "we first discuss the hydrodynamic interaction between blobs , and then discuss the hydrodynamic interactions between rigid bodies .    in the notation",
    "used below , we will use the latin indices @xmath9 for individual blobs , and reserve latin indices @xmath10 for bodies .",
    "we will denote with @xmath11 the set of blobs comprising body @xmath12 .",
    "we will consider a suspension of @xmath13 rigid bodies with a chosen reference _",
    "tracking point _ on body @xmath12 having position @xmath14 , and the orientation of body @xmath12 relative to a _ reference configuration _ represented by the quaternion @xmath15 @xcite . the linear velocity of ( the chosen tracking point on ) body @xmath12 will be denoted with @xmath16 , and its angular velocity will be denoted with @xmath17 .",
    "the total force applied on body @xmath12 is @xmath18 , and the total torque is @xmath19 .",
    "the composite configuration vector of position and orientation of body @xmath12 will be denoted with @xmath20 , the composite vector of linear and angular velocity will be denoted with @xmath21 , and the composite vector of forces and torques with @xmath22 .",
    "the position of blob @xmath23 will be denoted with @xmath24 , and its velocity will be denoted with @xmath25 .",
    "when not subscripted , vectors will refer to the composite vector formed by all bodies or all blobs on all bodies .",
    "for example , @xmath26 will denote the linear and angular velocities of all bodies , and @xmath27 will denote the positions of all of the blobs .",
    "we will use a superscript to denote portions of composite vectors for all blobs belonging to one body , for example , @xmath28 will denote the vector of positions of all blobs belonging to body @xmath12 .",
    "the fact that the multiblob @xmath12 is rigid is expressed by the `` no - slip '' kinematic condition , @xmath29 this no - slip condition can be written for all bodies succinctly as @xmath30 where @xmath31 is a simple geometric matrix @xcite .",
    "we will denote the apparent velocity of the fluid at point @xmath24 with @xmath32 .",
    "for a _ passive blob _ , i.e. , a blob that represents a passive part of the rigid particle , the _ no - slip _ boundary condition requires that @xmath33 .",
    "however , for _ active blobs _ an additional apparent slip of the fluid relative to the surface of the body can be imposed , resulting in a nonzero _ slip _ @xmath34 .",
    "this kind of active propulsion is termed `` implicit swimming gait '' by swan and brady @xcite .",
    "an `` explicit swimming gait '' @xcite can be taken into account without any modifications to the formulation or algorithm by simply replacing ( [ eq : noslip_rigid ] ) with @xmath35 that is , the only difference between `` slip '' and `` deformation '' is whether the blobs move relative to the rigid body frame dragging the fluid along , or stay fixed in the body frame while the fluid passes by them .",
    "one can of course even combine the two and have the blobs move relative to the rigid body while also pushing flow , for example , this can be used to model an active filament where there is slip along the filament but the filament itself is moving . in the end ,",
    "the only thing that matters to the formulation is the velocity difference @xmath36 in appendix [ app : permeable ] we explain how to model permeable ( porous ) bodies by making the apparent slip proportional to the fluid - blob force @xmath37 .",
    "the fundamental problem tackled in this paper is the solution of the _ mobility problem _ , that is , the computation of the motion of the bodies given the applied forces and torques on the bodies and the slip velocity .",
    "because of the linearity of the stokes equations and the boundary conditions , there exists an affine linear mapping @xmath38 where the _ body mobility matrix _ @xmath39 depends on the configuration and is the central object of the computation . the _ active mobility matrix _ @xmath40 is a discretization of the active mobility operator @xmath7 , and gives the active motion of force- and torque - free particles .",
    "note that @xmath40 is related to , but different from , the propulsion matrix introduced in @xcite .",
    "the propulsion matrix is essentially a finite - dimensional projection of the operator @xmath7 that only depends on the choice of basis functions used to express the surface slip velocity @xmath41 , and does not depend on the specific discretization of the body or quadrature rules , as does @xmath40 .    in the remainder of this section",
    "we develop a method for computing @xmath26 given @xmath42 and @xmath43 , i.e. , a method for computing the combined action of @xmath6 and @xmath40 , for large collections of non - overlapping rigid particles .",
    "we will also briefly discuss the _ resistance problem _ , in which we are given the motion of the bodies as a specified kinematics , and seek the resulting drag forces and torques , which have the form @xmath44 where the _ body resistance matrix _ @xmath45 and @xmath46 is the _ active resistance matrix_.      the blob - blob translational mobility matrix @xmath47 describes the hydrodynamic interactions between the @xmath48 blobs , accounting for the influence of the boundaries . specifically ,",
    "if the blobs are free to move ( i.e. , not constrained rigidly ) with the fluid under the action of set of translational forces @xmath49 , the translational velocities of the blobs will be @xmath50 the mobility matrix @xmath47 is a block matrix of dimension @xmath51 , where @xmath52 is the dimensionality .",
    "the @xmath53 block @xmath54 computes the velocity of blob @xmath55 given the force on blob @xmath56 , neglecting the presence of the other blobs in a _ pairwise _ approximation .    to construct a suitable @xmath47 , we can think of blobs as spheres of hydrodynamic radius @xmath8 . for two well - separated spheres @xmath55 and @xmath56 of radius @xmath8 we have the far - field approximation * * @xcite @xmath57 where @xmath58 is the fluid viscosity and @xmath59 is the green s function for the steady stokes problem with unit viscosity , with the appropriate boundary conditions such as no - slip on the boundaries of the domain .",
    "the differential operator @xmath60 is called the faxen operator @xcite .",
    "note that the form of ( [ eq : mobilityfaxen ] ) guarantees that the mobility matrix is symmetric positive semidefinite ( spd ) by construction since @xmath59 is an spd kernel .",
    "for a three dimensional unbounded domain with fluid at rest at infinity , the green s function is isotropic and given by the oseen tensor , @xmath61 using this expression in ( [ eq : mobilityfaxen ] ) yields the far - field component of the rotne - prager - yamakawa ( rpy ) tensor @xcite , commonly used in bdhi .",
    "a correction needs to be introduced when particles are close to each other to ensure an spd mobility matrix @xcite , which can be derived by using an integral form of the rpy tensor valid even for overlapping particles @xcite , to give @xmath62 where @xmath63 , and @xmath64 the diagonal blocks of the mobility matrix , i.e. , the self - mobility can be obtained by setting @xmath65 to obtain @xmath66 , which matches the stokes solution for the drag on a translating sphere ; this is an important continuity property of the rpy tensor @xcite .",
    "we will use the rpy tensor ( [ eq : rpytensor ] ) for simulations of rigid - particle suspensions in unbounded domains in section [ sec : resultsunbounded ] .    in principle",
    ", it is possible to generalize the rpy tensor to any flow geometry , i.e. , to any boundary conditions ( and imposed external flow ) @xcite , including periodic domains @xcite , as well as confined domains @xcite .",
    "however , we are not aware of any tractable analytical expressions for the complete rpy tensor ( including near - field corrections ) even for the simplest confined geometry of particles near a single no - slip boundary . in the presence of a single no - slip wall , an analytic approximation to @xmath67",
    "is given by swan and brady @xcite ( and re - derived later in @xcite ) as a generalization of the rotne - prager ( rp ) tensor @xcite to account for the no - slip boundary using blake s image construction @xcite .",
    "as shown in ref .",
    "@xcite , the corrections to the rotne - prager tensor ( [ eq : mobilityfaxen ] ) for particles that overlap each other but not the wall are independent of the boundary conditions , and are thus given by the standard rpy expressions ( [ eq : rpytensor ] ) for unbounded domains .",
    "therefore , in section [ sec : resultswall ] we compute @xmath68 by adding to the rpy tensor ( [ eq : rpytensor ] ) wall corrections corresponding to the translation - translation part of the rotne - prager - blake mobility given by eqs . ( b1 ) and ( c2 ) in @xcite , ignoring the higher order torque and stresslet terms in the spirit of the minimally - resolved blob model .",
    "the expressions derived by swan and brady @xcite assume that neither particle overlaps the wall and the resulting expressions are not guaranteed to lead to an spd @xmath68 if one or more blobs overlap the wall , as we discuss in more detail in the conclusions .",
    "for more complicated geometries , such as a slit or a square ( duct ) channel , analytical computations of the green s function become quite complicated and tedious , and numerical computations typically require pre - tabulations @xcite . in section [ sec : resultsconfined ] we explain how a grid - based finite volume stokes solver can be used to obtain the action of the green s function and thus compute the action of the mobility matrix for confined domains , for essentially arbitrary combinations of periodic , free - slip , no - slip , or stress boundary conditions .",
    "after discretizing the rigid bodies as rigid multiblobs , we can write down a system of equations that constrain the blobs to move rigidly in a straightforward manner . letting @xmath37 be a vector of forces ( lagrange multipliers ) that acts on each blob to enforce the rigidity of the body , we have the following linear system for @xmath37 , @xmath3 , and @xmath4 for all bodies @xmath12 , @xmath69 the first equation is the no - slip condition obtained by combining ( [ eq : w_mlambda ] ) and ( [ eq : noslip_rigid ] ) .",
    "the second and third equations are the force and torque balance conditions for body @xmath12 .",
    "note that the physical interpretation of @xmath37 is that of a total force on the portion of the surface of the body associated with a given blob .",
    "if one wants to think of ( [ eq : rigidsystem ] ) as a regularized discretization of the first - kind integral equation ( [ eq : first_kind ] ) and obtain a pointwise value of the traction force _ density _ , one should divide @xmath70 by the surface area @xmath71 associated with blob @xmath56 , which plays the role of a quadrature weight @xcite ; we will discuss more sophisticated quadrature rules @xcite in the conclusions .",
    "we can write the _ mobility problem _ ( [ eq : rigidsystem ] ) in compact matrix notation as a _ saddle - point _ linear system of equations for the rigidity forces @xmath37 and unknown motion @xmath26 , @xmath72\\left[\\begin{array}{c } \\v{\\lambda}\\\\ \\v u \\end{array}\\right]=\\left[\\begin{array}{c } \\slip\\\\ -\\v f \\end{array}\\right].\\label{eq : saddle_m}\\ ] ] forming the schur complement by eliminating @xmath37 we get ( see also eq . ( 1 ) in @xcite or eq .",
    "( 32 ) in @xcite ) @xmath73 where the body mobility matrix @xmath6 is @xmath74 and is evidently spd since @xmath47 is .",
    "although written in this form using the inverse of @xmath47 , unlike in a number of prior works @xcite , we obtain @xmath26 by solving ( [ eq : saddle_m ] ) directly using an iterative solver , as we explain in more detail in section [ sub : preconditioner ] .",
    "we note that one can compute a fluid velocity field @xmath75 from @xmath37 using a procedure we describe in appendix [ app : renderflow ] .",
    "the _ resistance problem _ , on the other hand , consists of solving for @xmath37 in @xmath76 and then computing @xmath77 , giving @xmath78 at first glance , it appears that solving the resistance system ( [ eq : resistance_problem ] ) is easier than solving the saddle - point problem ( [ eq : saddle_m ] ) ; however , as we explain in more detail in section [ sub : convergencefmm ] , the mobility problem is significantly easier to solve using iterative methods than the resistance problem , consistent with similar observations in the context of stokesian dynamics @xcite . observe that the saddle - point formulation ( [ eq : saddle_m ] ) applies more broadly to _ mixed _",
    "mobility / resistance problems , where some of the rigid body degrees of freedom are constrained but some are free @xcite .",
    "an example is a suspension of spheres being rotated by a magnetic field at a specified angular velocity but free to move translationally , or a suspension of colloids fixed in space by strong laser tweezers but otherwise free to rotate , or even a hinged body that can only move in a partially - constrained manner . in cases such as these",
    "we simply redefine @xmath26 to contain the free kinematic degrees of freedom and modify the definition of the kinematic matrix @xmath79 .",
    "much of what we say below continues to apply , but with the caveat that the expected speed of convergence of iterative methods is expected to depend on the nature of the imposed constraints , as we discuss in section [ sub : convergencefmm ] .",
    "note that the formula ( [ eq : bodymob ] ) is somewhat formal , and in practice all inverses should be replaced by pseudo - inverses .",
    "for instance , in the limit when infinitely many blobs cover the surface of a body , the mobility matrix @xmath47 is not invertible since making @xmath37 perpendicular to the surface will not yield any flow because it will try to compress the ( fictitious ) incompressible fluid inside the body .",
    "note that this nontrivial null space of the mobility poses no problem when using an iterative method to solve ( [ eq : saddle_m ] ) because the right hand side is in the proper range due to the imposition of the volume - preservation constraint ( [ eq : slip_solvability ] ) .",
    "it is also possible that the matrix @xmath80 is not invertible .",
    "a typical example for this is the minimally - resolved cylinder shown in the left - most panel of fig .",
    "[ fig : blobmodels ] . because all of the forces @xmath37 are applied exactly on the semi - axes of the cylinder",
    ", they can not exert a torque around the symmetry axes of the rod .",
    "again , there is no problem with iterative solvers for ( [ eq : saddle_m ] ) if the applied force is in the appropriate range ( e.g. , one should not apply a torque around the semi - axes of a minimally - resolved cylinder ) .      for a small number of blobs , the equation ( [ eq : saddle_m ] )",
    "can be solved by direct inversion of @xmath47 , as done in most prior works . for large systems , which is the focus of our work ,",
    "iterative methods are required . a standard approach used in the literature",
    "is to eliminate one of the variables @xmath37 or @xmath26 . eliminating @xmath37 leads to the equation",
    "@xmath81 which requires the action of @xmath82 , which must itself be obtained inside a nested iterative solver , increasing both the complexity and the cost of the method .",
    "swan and wang @xcite have recently used the conjugate gradient method to solve ( [ eq : symmetric_1 ] ) , preconditioning using the block - diagonal matrix @xmath83 .    an alternative is to write an equivalent system to ( [ eq : saddle_m ] ) , for an arbitrary constant @xmath84 , @xmath85\\left[\\begin{array}{c } \\v{\\lambda}\\\\ \\v u \\end{array}\\right]=\\left[\\begin{array}{c } \\slip\\\\ -\\left(\\v f+c\\m{\\mathcal{k}}^{t}\\slip\\right ) \\end{array}\\right],\\label{eq : saddle_m_eq}\\ ] ] from which we can easily eliminate @xmath26 to obtain an equation for @xmath37 only , in the form * @xmath86\\v{\\lambda}=\\mathrm{rhs},\\label{eq : symmetric_2}\\ ] ] * where we omit the full expression for the right hand side for brevity .",
    "the system ( [ eq : symmetric_2 ] ) can now be solved using ( preconditioned ) conjugate gradients , and only requires the inverse of the simpler matrix @xmath87 .",
    "note that , although not presented in this way , this is the essence of the approach that is followed and recommended by swan _ et al_. @xcite ( see appendix @xcite and note that @xmath88 is denoted by @xmath89 in that paper ) ; they recommend computing the action of @xmath90 by an iterative method preconditioned by an incomplete cholesky factorization .",
    "a similar approach is followed in boundary integral formulations ( which are usually formulated using a double layer density ) , where a continuum operator related to @xmath91 is computed and then discretized using a quadrature rule @xcite .",
    "in contrast to the approaches taken by swan _",
    "et al_. @xcite , we have found that numerically the best approach to solving for the unknown rigid - body motions of the particles is to solve the extended saddle - point problem ( [ eq : saddle_m ] ) for _ both _ @xmath26 and @xmath37 _ directly _ , using a preconditioned iterative krylov method .",
    "in fact , as we will demonstrate in the results section of this paper , such an approach has computational complexity that is essentially linear in the number of blobs because the number of iterations required to solve ( [ eq : saddle_m ] ) is quite modest when an appropriate preconditioner , described below , is used .",
    "this approach does not require computing ( the action of ) @xmath90 and leads to a very simple implementation .",
    "a krylov solver for ( [ eq : saddle_m ] ) requires two components :    1 .",
    "an efficient algorithm for performing the matrix - vector product , which in our case amounts to a fast method to multiply the dense but low - rank mobility matrix @xmath47 by a vector of blob forces @xmath37 .",
    "2 .   a suitable preconditioner , which is an approximate solver for ( [ eq : saddle_m ] ) .    how to efficiently compute @xmath92 depends very much on the boundary conditions and thus the form of the green s function used to construct @xmath47 . for unbounded domains , in this work we use the fast multipole method ( fmm ) developed specifically for the rpy tensor in @xcite ; alternative kernel - independent fmms",
    "could also be used , and have also been generalized to periodic domains @xcite .",
    "the fmm method has an essentially linear computational cost of @xmath93 for a single matrix - vector multiplication . in the simulations presented here we use a fixed and rather tight relative tolerance for the fmm @xmath94 throughout the iterative solution process .",
    "krylov methods , however , allow one to _ lower _ the accuracy of the matrix - vector product as the residual is reduced @xcite ; this has recently been used to lower the cost of fmm - based boundary integral methods @xcite",
    ". we will explore such optimizations in future work .    for rigid particles sedimented near a single no - slip wall",
    ", we have implemented a graphics processing unit ( gpu ) based direct summation matrix - vector product based on the rotne - prager - blake tensor derived by swan and brady @xcite .",
    "this has , asymptotically , a quadratic computational cost of @xmath95 ; however , the computation is trivially parallel so the multiplication is remarkably fast even for one million blobs because of the very large number of threads available on modern gpus",
    ". gimbutas _ et al_. have recently developed an fmm method for the blake tensor by using a simple image construction ( image stokeslet plus a harmonic scalar correction ) and applying an infinite - space fmm method to the extended system of singularities @xcite .",
    "however , this construction has not yet been generalized to the rotne - prager - blake tensor , and , furthermore , the fmm will not be more efficient than the direct product on gpus in practice unless a large number of blobs is considered . for fully confined domains , we will adopt an extended saddle - point formulation that will be described in section [ sec : resultsconfined ] .      in this work",
    "we demonstrate that a very efficient yet simple preconditioner for ( [ eq : saddle_m ] ) is obtained by neglecting hydrodynamic interactions between different bodies , that is , setting the elements of @xmath47 corresponding to pairs of blobs on _ distinct _ bodies to zero in the preconditioner .",
    "this amounts to making a block - diagonal approximation of the mobility @xmath96 defined by only keeping the diagonal blocks corresponding to a single body interacting _ only _ with the boundaries of the domain , @xmath97 we will demonstrate here that the _ indefinite block - diagonal _ preconditioner , @xmath98,\\label{eq : indef_block_p}\\ ] ] is a very effective preconditioner for solving ( [ eq : saddle_m ] ) .    applying the preconditioner ( [ eq : indef_block_p ] ) amounts to solving the linear system @xmath99\\left[\\begin{array}{c } \\v{\\lambda}\\\\ \\v u \\end{array}\\right]=\\left[\\begin{array}{c } \\slip\\\\ -\\v f \\end{array}\\right],\\label{eq : saddle_m_precon}\\ ] ] which is quite easy to do since the approximate body mobility matrix ( schur complement ) , @xmath100 is itself a block - diagonal matrix where each block on the diagonal refers to a single body neglecting all hydrodynamic interactions with other bodies , @xmath101 computing @xmath102 requires a dense matrix inversion ( e.g. , cholesky factorization ) of the much smaller mobility matrix @xmath103 , whose size is @xmath104 , where @xmath105 is the number of blobs on body @xmath12 . in the case of an infinite domain",
    ", the factorization of @xmath103 can be precomputed once at the beginning of a dynamic simulation and reused during the simulation due to the rotational and translational invariance of the rpy tensor ; one only needs to apply rotation matrices to the right - hand side and the result to convert between the original reference configuration of the body and the current configuration .",
    "furthermore , particles of the same shape and size discretized with the same number of blobs as body @xmath12 can share a single factorization of @xmath103 and @xmath106 . in cases where @xmath103 depends in a nontrivial way on the position of the body , as for ( partially ) confined domains",
    ", one needs to factorize @xmath103 for all bodies @xmath12 at every time step ; this factorization can still be reused during the iterative solve in each application of the preconditioner .    because our preconditioner is indefinite , one can not use the preconditioned conjugate gradient ( pcg ) krylov method to solve ( [ eq : saddle_m ] ) without modification .",
    "one of the most robust iterative methods , which we use in this work , is the generalized minimum residual method ( gmres ) .",
    "the key advantage of gmres is that it is guaranteed to reduce the residual from iteration to iteration .",
    "its main downside is that it requires storing a large number of intermediate vectors ( i.e. , the history of the iterates ) .",
    "gmres also can stall , although this can be corrected to some extent by restarts .",
    "an alternative to gmres is the ( stabilized ) bi - conjugate gradient ( bicg(stab ) ) method , which works for non - symmetric matrices as well . in our implementation",
    "we have relied on the petsc library @xcite for iterative solvers ; this library makes it very easy to experiment with different iterative solvers .",
    "the rigid multiblob method described in section [ sec : rigidmultiblobs ] requires a technique for multiplying the blob - blob mobility matrix with a vector .",
    "therefore , this approach , like all other green s function based methods @xcite , is very geometry - specific and does not generalize easily to more complicated boundary conditions . to handle geometries for which there is no simple analytical expression for the green s function , such as slit or square channels , pre - tabulation of the green s function is necessary , and ensuring a positive semi - definite mobility matrix is in general difficult .",
    "another difficulty with green s function based methods is that including a `` background '' flow is only simple when this flow can be computed easily analytically , such as simple shear flows .",
    "but for more complicated geometries , such as poiseuille flow through a square channel , computing the base flow is itself not trivial or requires evaluating expensive infinite - series solutions .",
    "an alternative approach is to use a traditional stokes solver to solve the fluid equations numerically @xcite .",
    "this requires filling the domain with a grid , which can increase the number of degrees of freedom considerably over just discretizing the surface of the immersed bodies .",
    "however , the number of fluid degrees of freedom can be held approximately constant as more bodies are included , so that the methods typically scale very well with the number of particles and are well - suited to dense particle suspensions .",
    "previous work @xcite has shown how to use an immersed boundary ( ib ) method @xcite to obtain the action of the green s function in complex geometries . in this approach , spherical particles",
    "are minimally resolved using only a single blob per particle . in subsequent work",
    "this approach was extended to multiblob models @xcite , but the rigidity constraint was imposed only approximately using stiff springs , leading to numerical stiffness .",
    "a class of related minimally - resolved methods based on the force coupling method ( fcm ) @xcite can include also torques and stresslets , as well as particle activity @xcite , but a number of these methods have relied strongly on periodic boundaries since they use the fast fourier transform ( fft ) to solve the ( fluctuating ) stokes equations .    in recent work",
    "@xcite , some of us have developed an ib method for rigid bodies .",
    "this method applies to a broad range of reynolds numbers . in the case of zero reynolds number",
    "it becomes equivalent to the rigid multiblob method presented in section [ sec : rigidmultiblobs ] , but with a blob - blob mobility that is computed by the fluid solver . in ref .",
    "@xcite only rigid bodies with specified motion ( kinematics ) were considered ; here we extend the method to handle freely - moving rigid bodies in stokes flow .",
    "we will present here the key ideas and focus on the new components necessary to solve for the unknown motion of the particles ; we refer the reader interested in more technical details to refs .",
    "the key novel contribution of our work is the preconditioner described in section [ sub : preconditionining - algorithm ] ; the performance and scalability of our preconditioned iterative solvers is studied numerically in section [ sub : convergenceibamr ] .",
    "to begin , we present a semi - continuum formulation where the relation to section [ sec : rigidmultiblobs ] is most obvious , and then we discuss the fully discrete formulation used in the actual implementation . in appendix",
    "[ app : permeable ] we demonstrate how to handle permeable bodies using a small modification of the formulation .",
    "numerical results obtained using the method described here are given in section [ sec : resultsconfined ] .",
    "we consider here a semi - discrete model in which the rigid body has already been discretized using blobs but a continuum description is used for the fluid , that is , we consider a rigid multiblob model immersed in a continuum stokesian fluid . in the ib literature blobs are referred to as markers , and are often thought of as `` points '' or `` discrete delta functions '' .",
    "we use the term `` blob , '' however , to connect to section [ sec : rigidmultiblobs ] and to emphasize that the blobs have a finite physical and hydrodynamic extent .    in the ib method @xcite ( and also the force coupling method @xcite ) , the shape of the blob and its effective interaction with the fluid",
    "is captured through a smooth kernel function @xmath107 that integrates to unity and whose support is localized in a region of size comparable to the blob radius @xmath8 . in our rigid multiblob",
    "ib method , to obtain the fluid - blob interaction forces @xmath108 that constrain the unknown rigid motion of the @xmath48 blobs , we need to solve a constrained stokes problem @xcite for the fluid velocity field @xmath109 , the fluid pressure field @xmath110 , the blob constraint forces @xmath108 , and the unknown rigid - body motions @xmath111 and @xmath112 , @xmath113 note that here the velocity and pressure fields contain both the `` background '' and the `` perturbational '' contributions to the flow . in the first equation in ( [ eq : semi_continuum ] ) ,",
    "the kernel function is used to transfer ( spread ) the force exerted on the blob to the fluid , and in the third equation the same kernel is used to average the fluid velocity in the region covered by the blob and constrain it to follow the imposed rigid body motion plus additional slip or body deformation .",
    "the handling of the spreading of constraint forces and averaging of the fluid velocity near physical boundaries is discussed in appendix d in @xcite .",
    "we have implicitly assumed that appropriate boundary conditions are specified for the fluid velocity and pressure .",
    "notably , we will apply the above formulation to cases where periodic or no - slip boundary conditions are applied along the boundaries of a cubic prism ( recall that periodic boundaries are not actual physical boundaries ) .",
    "this includes , for example , a slit channel , a square channel , or a cubical container .",
    "it is also relatively straightforward to handle stress - based boundary conditions such as free - slip or pressure valves @xcite .",
    "it is not difficult to show that ( [ eq : semi_continuum ] ) is equivalent to the system ( [ eq : rigidsystem ] ) with the mobility matrix between two blobs @xmath55 and @xmath56 identified with @xcite @xmath114 where we recall that @xmath59 is the green s function for the stokes problem with unit viscosity and the specified boundary conditions .",
    "this expression can directly be compared to ( [ eq : mobilityfaxen ] ) after realizing that for a smooth velocity field @xcite , @xmath115\\v v\\left(\\v r\\right)\\big|_{\\v r=\\v r_{i}}=\\left(\\m i+\\frac{a_{f}^{2}}{6}\\grad^{2}\\right)\\v v\\left(\\v r\\right)\\big|_{\\v r=\\v r_{i}},\\ ] ] where we assumed a spherical blob , @xmath116 .",
    "we have defined here the `` faxen '' radius of the blob @xmath117 through the second moment of the kernel function .    in multipole expansion based methods , the self - mobility of a body is treated separately by solving the single - body problem exactly (",
    "this is only possible for simple particle shapes ) .",
    "however , in the type of approach followed here the self - mobility @xmath118 is also given by the same formula ( [ eq : greensmobility ] ) with @xmath119 and does not need to be treated separately .",
    "in fact , the self - mobility of a particle in an unbounded three - dimensional domain _ defines _ the effective hydrodynamic radius @xmath8 of a blob , @xmath120 where the oseen tensor @xmath121 is given in ( [ eq : oseentensor ] ) . in general , @xmath122 , but for a suitable choice of the kernel one can accomplish @xmath123 ( for example , for a gaussian @xmath124 @xcite ) and thus accurately obtain the faxen correction for a rigid sphere @xcite .    for an isotropic or tensor product kernel @xmath125 and an unbounded domain , the pairwise blob - blob mobility ( [ eq : greensmobility ] ) will take the form @xmath126",
    "where @xmath63 , and hat denotes a unit vector .",
    "the functions of distance @xmath127 and @xmath128 depend on the specific kernel ( and in the fully discrete setting on the spatial discretization of the stokes equations ) and will be different from those appearing in the rpy tensor ( [ eq : rpytensor ] ) . nevertheless , as we will show numerically in section [ sub : transinv ] , the functions @xmath129 and @xmath130 for our ib method are quite close in form to those appearing in the rpy tensor .",
    "we note that the rpy tensor itself can be seen as a realization of ( [ eq : greensmobility ] ) with the kernel being a surface delta function over a sphere of radius @xmath8 @xcite .",
    "we have demonstrated above that solving ( [ eq : semi_continuum ] ) is a way to apply the blob - blob mobility for a confined domain . in the method of regularized stokeslets @xcite the mobility",
    "is obtained _ analytically _ by averaging the analytical green s function with a kernel or envelope function specifically chosen to make the resulting integrals analytical .",
    "note however that in that method the kernel @xmath125 appears only once inside the integral in ( [ eq : greensmobility ] ) because only the force spreading is regularized but not the interpolation of the velocity ; this leads to non - symmetric mobility matrix inconsistent with the faxen formula ( [ eq : mobilityfaxen ] ) .",
    "by contrast , our approach is guaranteed to lead to a symmetric positive semidefinite ( spd ) mobility matrix @xmath68 , which is crucial when including thermal fluctuations @xcite .      to obtain a fully discrete formulation of the linear system ( [ eq : semi_continuum ] ) we need to spatially discretize the stokes equations on a grid .",
    "the spatial discretization of the fluid equation used in this work uses a uniform cartesian grid with grid spacing @xmath131 , and is based on a second - order accurate staggered - grid finite volume ( equivalently , finite difference ) discretization , in which vector - valued quantities such as velocity , are represented on the faces of the cartesian grid cells , while scalar - valued quantities such as pressure are represented at the centers of the grid cells @xcite .",
    "the viscous terms are discretized using a standard @xmath132-point laplacian ( in three dimensions ) , accounting for boundary conditions using ghost cell extrapolation @xcite .      in the fully discrete formulation of the fluid - body coupling , we replace spatial integrals in the semi - continuum formulation ( [ eq : semi_continuum ] ) by sums over fluid grid points .",
    "the regularized delta function kernel is discretized using a tensor product of one - dimensional immersed boundary kernels @xmath133 of compact support , following peskin @xcite .",
    "to maximize translational and rotational invariance ( i.e. , improve grid - invariance ) we use the smooth ( three - times differentiable ) six - point kernel recently described by bao _",
    "this kernel is more expensive than the traditional four - point kernel @xcite because it increases the support of the kernel to @xmath134 grid points in three dimensions ; however , this cost is justified because the new six - point kernel improves the translational invariance by orders of magnitude compared to other standard ib kernel functions @xcite .",
    "the interaction between the fluid and the rigid body is mediated through two crucial operations .",
    "the discrete velocity - interpolation operator @xmath135 averages velocities on the staggered grid in the neighborhood of blob @xmath55 via @xmath136 where the sum is taken over faces @xmath137 of the grid , @xmath138 indexes coordinate directions ( @xmath139 ) as a superscript , and @xmath140 is the position of the center of the grid face @xmath137 in the direction @xmath138 .",
    "the discrete force - spreading operator @xmath141 spreads forces from the blobs to the faces of the staggered grid via @xmath142 where now the sum is over the blobs and @xmath143 is the volume of a grid cell .",
    "these operators are adjoint with respect to a suitably - defined inner product , and the discrete matrices satisfy @xmath144 , which ensures conservation of energy @xcite .",
    "extensions of the basic interpolation and spreading operators to account for the presence of physical boundary conditions are described in appendix d in @xcite .",
    "we note that it is possible to change the effective hydrodynamic and faxen radii of a blob by changing the kernel @xmath125 .",
    "such flexibility in the kernel can be accomplished without compromising the required kernel properties postulated by peskin @xcite by using shifted or _ split kernels _",
    "@xcite , @xmath145+\\phi_{a}\\left[q_{\\alpha}-\\left(r_{k}\\right)_{\\alpha}+\\frac{s}{2}\\right]\\right\\ } , \\ ] ] where @xmath146 denotes a shift that parametrizes the kernel . by varying @xmath146 in a certain range , for example , @xmath147",
    ", one can smoothly increase the support of the kernel and thus increase the hydrodynamic radius of the blob by as much as a factor of two .",
    "we do not use split kernels in this work but have found them to work as well as the unshifted kernels , while allowing increased flexibility in varying the grid spacing relative to the hydrodynamic radius of the particles .      following spatial discretization",
    ", we obtain a finite - dimensional linear system of equations for the discrete velocities and pressures and the blob and body degrees of freedom . for the resistance problem",
    ", we obtain the following rigidly constrained discrete stokes system @xcite ,    @xmath148\\left[\\begin{array}{c } \\v v\\\\ \\pi\\\\ \\v{\\lambda } \\end{array}\\right]=\\left[\\begin{array}{c } \\v g=\\v 0\\\\ \\v h=\\v 0\\\\ \\v w=-\\slip \\end{array}\\right],\\label{eq : constrained_stokes}\\ ] ]    where @xmath149 is the discrete ( vector ) gradient operator , @xmath150 is the discrete ( vector ) divergence operator , and @xmath151 where @xmath152 is a discrete ( vector ) laplacian ; these finite - difference operators take into account the specified boundary conditions @xcite . for impermeable bodies @xmath153 , which makes the linear system ( [ eq : constrained_stokes ] ) a nested saddle - point problem in both lagrange multipliers @xmath154 and @xmath37 .",
    "as explained in appendix [ app : permeable ] , for permeable bodies @xmath155 is a diagonal matrix with @xmath156 for blob @xmath23 , where @xmath157 is the permeability of body @xmath12 and @xmath158 is a volume associated with blob @xmath55 .",
    "the right - hand side could include any external fluid forcing terms , slip , inhomogeneous boundary conditions , etc .",
    "the system ( [ eq : constrained_stokes ] ) can be made symmetric by excluding the volume weighting @xmath159 in the spreading operator ( [ eq : s_unweighted ] ) ; this makes @xmath37 have units of force density rather than total force .",
    "this nested saddle - point structure continues if one considers impermeable rigid bodies that are free to move , leading to the _ _ discrete mobility problem _",
    "_ @xmath160\\left[\\begin{array}{c } \\v v\\\\ \\pi\\\\ \\v{\\lambda}\\\\ \\v u \\end{array}\\right]=\\left[\\begin{array}{c } \\v g\\\\ \\v h=\\v 0\\\\ \\v w=-\\slip\\\\ \\v z=\\v f \\end{array}\\right].\\label{eq : free_kinematics_stokes}\\ ] ] after eliminating the velocity and pressure from this system , we obtain the saddle - point system ( [ eq : saddle_m ] ) with the identification of the mobility with its discrete approximation @xmath161 which is spd . here",
    "@xmath162 is a discrete stokes solution operator , @xmath163 where we have assumed for now that @xmath164 is invertible ; see @xcite for the handling of periodic systems , for which the laplacian is not invertible . unlike for green s function based methods , we never explicitly compute or form @xmath162 or @xmath68 ; rather , we solve the stokes velocity - pressure subsystems iteratively using the preconditioners described in @xcite .      in this section",
    "we describe how to solve the system ( [ eq : free_kinematics_stokes ] ) using an iterative solver , as we have implemented in the immersed boundary adaptive mesh refinement software framework ( ibamr ) @xcite .",
    "our codes are integrated into the public release of the ibamr library .",
    "note that the matrix - vector product is a straightforward and inexpensive application of finite - difference stencils on the fluid grid and summations over blobs .",
    "the key to an effective solver is the design of a good preconditioner , i.e. , a good approximate solver for ( [ eq : free_kinematics_stokes ] ) .",
    "the basic idea is to combine a preconditioner for the stokes problem @xcite with the indefinite preconditioner ( [ eq : indef_block_p ] ) with a block - diagonal approximation of the mobility @xmath96 constructed based on empirical fits of the blob - blob mobility , as we know explain in detail .",
    "a preconditioner for solving the resistance problem ( [ eq : constrained_stokes ] ) was developed by some of us in @xcite ; readers interested in additional details should refer to this work .",
    "the preconditioner is based on approximating the blob - blob mobility with the functional form ( [ eq : m_tilde_ij ] ) , where the functions @xmath127 and @xmath128 are obtained by fitting numerical data for the blob - blob mobility in an _ unbounded _ system ( in practice , a large periodic system ) .",
    "this involves two important approximations , the validity of which only affects the _ efficiency _ of the linear solver but does _ not _ affect the _ accuracy _ of the method since the krylov method will correct for the approximations .",
    "the first approximation comes from the fact that the true blob - blob mobility for the immersed boundary method is not perfectly translationally and rotationally invariant , so that the form ( [ eq : m_tilde_ij ] ) does not hold exactly .",
    "the second approximation is that the boundary conditions are not correctly taken into account when constructing the approximation of the mobility @xmath96 .",
    "this approximation is crucial to the feasibility of our method and is much more severe , but , as we will demonstrate numerically in section [ sec : resultsconfined ] , the krylov solver converges in a reasonable number of iterations , correctly incorporating the boundary conditions in the solution .",
    "the empirical fits of @xmath127 and @xmath128 are described in appendix a of @xcite , and code to evaluate the empirical fits is publicly available for a number of kernels constructed by peskin and coworkers ( three- , four- , and six - point ) at http://cims.nyu.edu/~donev/src/mobilityfunctions.c . as we show in section [ sub : transinv ] , these functions are quite similar to those appearing in the rpy tensor ( [ eq : rpytensor ] ) , and , in fact , it is possible to use the rpy functions @xmath165 and @xmath166 in the preconditioner , with a value of the effective hydrodynamic radius @xmath8 that depends on the choice of the kernel . nevertheless , somewhat better performance is achieved by using the empirical fits for @xmath127 and @xmath128 developed in @xcite .    in @xcite , we considered general fluid - structure interaction problems over a range of reynolds numbers , and constructed @xmath96 as a dense matrix of size @xmath51 , which was then factorized using dense linear algebra .",
    "this is infeasible for suspensions of many rigid bodies . in this work ,",
    "we use the block - diagonal approximation ( [ eq : m_tilde_block_diag ] ) to the blob - blob mobility matrices , in which there is one block per rigid particle . once @xmath96 is constructed and its diagonal blocks factorized , the corresponding approximate body mobility matrix @xmath167 is easy to form , as discussed in more detail in section [ sub : preconditioner ] .",
    "note that these matrices and their factorizations need to be constructed only once at the beginning of the simulation , and can be reused throughout the simulation .      a key component of solving the constrained stokes problems ( [ eq : constrained_stokes ] ) or ( [ eq : free_kinematics_stokes ] ) is an iterative solver for the unconstrained discrete stokes sub - problem , @xmath168\\left[\\begin{array}{c } \\v v\\\\ \\pi \\end{array}\\right]=\\left[\\begin{array}{c } \\v g\\\\ \\v h \\end{array}\\right],\\ ] ] for which a number of techniques have been developed in the finite - element context @xcite .",
    "to solve this system , we can use gmres with a preconditioner @xmath169 that assumes periodic boundary conditions so that the various finite - difference operators commute @xcite .",
    "specifically , the preconditioner for the stokes system that we use in this work is based on a projection preconditioner developed by griffith @xcite , @xmath170 where @xmath171 is the dimensionless pressure ( scalar ) laplacian , and @xmath172 and @xmath173 denote approximate solvers obtained by a _ single _",
    "v - cycle of a geometric multigrid method , as performed using the _ hypre _ library @xcite in our ibamr implementation . in this paper",
    "we will primarily report the options we have found to be best without listing all of the different combinations we have tried . for completeness , we note that we have tried the better - known lower and upper triangular preconditioners @xcite for the stokes problem . while these simpler preconditioners are better when solving pure stokes problems than the projection preconditioner ( [ p_stokes ] ) since they avoid the pressure multigrid application @xmath174 , we have found them to perform much worse in the context of suspensions of rigid bodies .",
    "a possible explanation is that the projection preconditioner @xmath169 is the only one that is exact for periodic systems if exact subsolvers for the velocity and pressure subproblems are used .",
    "observe that one application of @xmath169 is relatively inexpensive and involves only @xmath175 scalar multigrid v - cycles .",
    "the number of iterations required for convergence depends strongly on the boundary conditions ; fast convergence is obtained within 10 - 20 iterations for periodic systems , but as many as a hundred gmres iterations may be required for highly confined systems @xcite .",
    "we emphasize that the performance of this preconditioner is highly dependent on the details of the staggered geometric multigrid method , which is not highly optimized in the _ hypre _ library , especially for domains of high aspect ratios such as narrow slit channels .",
    "for periodic boundary conditions , one can use ffts to solve the stokes problem , and this is likely to be more efficient than geometric multigrid especially because ffts have been highly optimized for common hardware architectures .",
    "however , such an approach would require 3 scalar ffts for _ each _ iteration of the iterative solver for the constrained stokes problem ( [ eq : constrained_stokes ] ) or ( [ eq : free_kinematics_stokes ] ) , and this will in general be substantially more expensive than using only a few cycles of geometric multigrid as an _ approximate _ stokes solver .    the use of an approximate stokes solver instead of an exact one is an important difference between implementing the rigid multiblob method for periodic systems using the spectral ewald method @xcite and our approach .",
    "the product of the blob - blob mobility with a vector can be computed more accurately and faster using the spectral ewald method , in particular because one can adjust the cutoff for splitting the computation between real and fourier space arbitrarily , unlike in our method where the grid spacing is tied to the particle radius . however , for rigid multiblobs , one must solve the system ( [ eq : saddle_m ] ) , which requires potentially many matrix - vector products , i.e. , many ffts in the spectral ewald approach .",
    "by contrast , in our method we solve the extended problem ( [ eq : free_kinematics_stokes ] ) , and only solve the stokes problems approximately using a few cycles of multigrid in each iteration .",
    "this will require more iterations but each iteration can be substantially cheaper than performing three ffts each krylov iteration . for non - periodic systems , there is no equivalent of the spectral ewald method , but see @xcite for some steps in this direction .",
    "our method computes the hydrodynamic interactions in a confined geometry `` on the fly '' without ever actually computing the action of the green s function exactly , rather , it is computed only approximately and the outer krylov solver corrects for any approximations made in the preconditioner .",
    "we now have the necessary ingredients to compose a preconditioner for solving ( [ eq : free_kinematics_stokes ] ) , i.e. , to construct an approximate solver for this linear system .",
    "each application of our preconditioner involves the following steps :    1 .",
    "approximately solve the fluid sub - problem , @xmath168\\left[\\begin{array}{c } \\tilde{\\v v}\\\\ \\tilde{\\pi } \\end{array}\\right]=\\left[\\begin{array}{c } \\v g\\\\ \\v h \\end{array}\\right],\\ ] ] using @xmath176 iterations of an iterative method with the preconditioner ( [ p_stokes ] ) .",
    "2 .   interpolate @xmath177 to get the relative slip at each of the blobs , @xmath178 , and rotate the corresponding component from the current frame to the reference frame of each body .",
    "3 .   approximately compute the unknown body kinematics @xmath26 : 1 .   calculate @xmath179 and rotate the result back to the fixed frame of reference . here",
    "@xmath96 is a block - diagonal approximation to the blob - blob mobility matrix in the reference frame , as described in section [ sub : approximateblobmob ] ; the factorization of the blocks of @xmath96 is performed once at the beginning of the simulation .",
    "2 .   calculate @xmath180 and transform ( rotate ) @xmath181 to the body frame of reference .",
    "3 .   compute @xmath182 and transform it back to the fixed frame of reference , where @xmath183 .",
    "4 .   calculate the updated relative slip velocity at each of the blobs , @xmath184 and transform ( rotate ) it to reference body frame .",
    "5 .   compute @xmath185 and transform @xmath37 back to the fixed frame of reference if necessary .",
    "solve the corrected fluid subproblem to obtain the fluid velocity and pressure : @xmath168\\left[\\begin{array}{c } \\v v\\\\ \\pi \\end{array}\\right]=\\left[\\begin{array}{c } \\v g+\\m{\\mathcal{s}}\\v{\\lambda}\\\\ \\v h \\end{array}\\right],\\ ] ] using @xmath186 iterations of an iterative method with the preconditioner ( [ p_stokes ] ) .",
    "a few comments are in order .",
    "the above preconditioner is not spd so the outer krylov solver should be a method such as gmres of bicgstab @xcite .",
    "we prefer to use right - preconditioned krylov solvers because in this case the residual computed by the iterative solver is the true residual ( as opposed to the preconditioned residual for left preconditioning ) , and therefore termination criteria ensure that the original system was solved to the desired target tolerance .",
    "we expect that the long - term recurrence gmres method will require a smaller number of iterations than the short - term recurrence used in bicgstab ( but note that each iteration of bicgstab requires _ two _ applications of the preconditioner ) .",
    "however , observe that gmres can require substantially more memory since it requires storing a complete history of the iterative process .",
    "floating - point numbers per grid cell , which can make the memory requirements of a gmres - based solver with a large restart frequency quite high for large grid sizes . ] this can be ameliorated by restarts at a cost of slowed convergence .",
    "if the iterative solver used for the stokes solver in steps 1 and 6 is a nonlinear method ( most krylov methods are nonlinear ) , then the outer solver must be a flexible method such as fgmres .",
    "this flexibility typically increases the memory requirements of the iterative method ( for example , it exactly doubles the number of stored intermediate vectors for fgmres versus gmres ) , and so an alternative is to use a linear method such as richardson s method . note that when a preconditioned krylov method is used for the stokes subsolver , one additional application of the preconditioner is required to convert the system to preconditioned form for both left and right preconditioning , making the total number of applications of the stokes preconditioner ( [ p_stokes ] ) be @xmath187 per krylov iteration .",
    "by contrast , if richardson s method is used in the stokes subsolver , the number of preconditioner applications is @xmath188 . since in many practical cases",
    "the cost is dominated by the multigrid cycles , this difference can be important in the overall performance of the preconditioner .",
    "we will explore the performance of the preconditioner and the effect of the various choices in detail in section [ sub : convergenceibamr ] .",
    "in this section we investigate the accuracy of rigid multiblob models of spheres as a function of the number of blobs .",
    "we focus on spheres in an unbounded domain because of the availability of analytical results to compare to , and not because the rigid multiblob method is particularly good for suspensions of spheres , for which there already exist a number of well - developed multipole expansion approaches .",
    "we also investigate the performance of the preconditioner developed in sec .",
    "[ sub : preconditioner ] for solving ( [ eq : saddle_m ] ) , for suspensions of spheres in an unbounded domain ( e.g. , clusters of colloids formed in a gel ) . for unbounded domains ,",
    "we compute the product of the blob - blob mobility matrix @xmath47 with a vector using the fast multipole method ( fmm ) developed specifically for the rpy tensor in @xcite ; this software makes four calls to the poisson fmm implemented in the fmmlib3d library ( http://www.cims.nyu.edu/cmcl/fmm3dlib/fmm3dlib.html ) per matrix - vector product . as we will demonstrate empirically , the asymptotic cost of the rigid - multiblob method scales as @xmath189 , where @xmath48 is the total number of blobs , with a coefficient that grows only weakly with density .",
    "we note that in this paper we use relatively tight tolerances ( @xmath190 ) when computing the matrix - vector products solving the linear systems in order to test the robustness of the preconditioners ; in practical applications much lower tolerances ( @xmath191 ) would typically be employed , potentially lowering the overall computational effort considerably over what is reported here .    in this work , each sphere",
    "is discretized with @xmath192 blobs of hydrodynamic radius @xmath8 distributed on the surface of a sphere of _ geometric _ radius @xmath193 .",
    "we discretize the surface of a sphere as a shell of blobs constructed by a recursive procedure suggested to us by charles peskin ( private communication ) ; the same procedure is used in @xcite .",
    "we start with 12 blobs placed at the vertices of an icosahedron @xcite , which gives a uniform triangulation of a sphere by 20 triangular faces .",
    "then , we place a new blob at the center of each edge and recursively subdivide each triangle into four smaller triangles , projecting the vertices back to the surface of the sphere along the way .",
    "each subdivision approximately quadruples the number of vertices , with the @xmath137-th subdivision producing a model with @xmath194 blobs , leading to shells with 12 , 42 , 162 or 642 blobs , see fig . 2 in @xcite for an illustration .",
    "in this section we study the optimal choice of @xmath8 for a given resolution ( number of blobs ) and @xmath193 .",
    "an important concept that will be used heavily in the rest of this paper is that of an _ effective hydrodynamic radius @xmath195 _ of a blob model of a sphere ( more generally , effective hydrodynamic extent ) .",
    "if we approach the rigid multiblob method from a boundary integral perspective , we would assign @xmath196 as the radius and treat the additional enlargement of the effective hydrodynamic radius as a numerical ( quadrature+regularization ) error .",
    "this is more or less how results are presented in the recent work of swan and wang @xcite ( see for example their fig . 8) , making the accuracy appear low even in the far field for small number of blobs per sphere .",
    "however , we instead think of a rigid multiblob as an effective _ model _ of a sphere , whose hydrodynamic response mimics that of an equivalent sphere",
    ". a similar effect appears in lattice boltzmann simulations , with @xmath8 being related to the lattice spacing @xcite . to appreciate why it is imperative to use an effective radius , observe that even a single blob acts as an approximation of a sphere with radius @xmath197 .",
    "similarly , one should not treat a line of blobs ( see left - most panel in fig .",
    "[ fig : blobmodels ] ) as a zero - thickness object ( line ) ; rather , such a line of rigidly - connected blobs should be considered to model a rigid cylinder with finite thickness proportional to @xmath8 @xcite .",
    "we compute the effective hydrodynamic radius of our blob models of spheres next .",
    "[ [ subconvergencemomentseffective - hydrodynamic - radii - of - rigid - multiblob - spheres ] ] [ sub : convergencemoments]effective hydrodynamic radii of rigid multiblob spheres ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~    in this section we consider an isolated rigid multiblob sphere in an unbounded domain , and compute its response to an applied force @xmath198 , an applied torque @xmath199 , and an applied linear shear flow with strain rate @xmath200 .",
    "each of these defines an effective hydrodynamic radius by comparing to the analytical results for a sphere , therefore , each model of a sphere will have three distinct hydrodynamic radii .",
    "the _ translational radius _ is measured from ( see also @xcite ) @xmath201 where @xmath202 is the resulting sphere linear velocity , the _ rotational radius _ is ( see also @xcite ) @xmath203 where @xmath204 is the resulting angular velocity , and the effective stresslet radius is @xmath205 here we compute the stresslet @xmath206 induced on the rigid multiblob under an applied shear by setting an apparent slip @xmath207 on blob @xmath55 , and then solving the mobility problem to compute the constraint ( rigidity ) forces @xmath37 . the stresslet @xmath206 is the symmetric traceless component of the * * first moment of the constraint forces @xmath208 in this work , we use @xmath209 as the effective hydrodynamic radius when comparing to theory .",
    "this is because the translational mobility is controlled by the most long - ranged @xmath210 hydrodynamic interactions , and therefore the far - field response of a rigid multiblob is controlled by @xmath209 .",
    "observe that since we only account for translation of the blobs , only @xmath209 is nonzero for a single blob , while @xmath211 and @xmath212 are zero .",
    "therefore , the minimal model of a sphere that allows for nontrivial rotlet and stresslets is the icosahedral model ( 12 blobs ) @xcite .",
    "since the rigid multiblob models are able to exert a stress on the fluid they can change the viscosity of a suspension @xcite , unlike the single - blob models , which do not resist shear . it is important to note that the rigid multiblob models of a sphere are _ not _ perfectly rotationally invariant , especially for low resolutions .",
    "therefore , the rigid multiblobs may exhibit a small translational velocity even in the absence of an applied force , or they may exhibit a small rotation even in the absence of an applied torque .",
    "in other words , the effective mobility matrix for a rigid multiblob model of a sphere can exhibit small off - diagonal components .",
    "similarly , there will in general be small but nonzero components of the stresslet that would be identically zero for a perfect sphere .",
    "in general , we find these spurious components to be very small even for the minimally resolved icosahedral rigid multiblob .    a key parameter that we need to choose is how to relate the blob hydrodynamic radius @xmath8 with the typical spacing between the blobs .",
    "since our multiblob models of spheres are regular the minimal spacing between markers @xmath146 is well - defined , and we expect that there will be some optimal ratio @xmath213 that will make the rigid multiblob represent a true rigid sphere as best as possible . in a number of prior",
    "works the intuitive choice @xmath214 has been used , since this corresponds to the idea that the blobs act as a sphere of radius @xmath8 and we would like them to touch the other blobs .",
    "however , as we explained above , it is not appropriate to think of blobs as spheres with a well - defined surface , and it is therefore important to study the optimal spacing more carefully .",
    ".[tab : stresslets_3d](left ) effective translational , rotational and stresslet hydrodynamic radii for rigid multiblob models of a sphere , for two choices of the blob - blob relative spacing @xmath213 .",
    "( right ) iterations to solve the mobility problem with tolerance @xmath215 for 4096 spheres discretized with 12 blobs , or for 512 spheres discretized with 42 blobs , arranged in a simple cubic lattice at different volume fractions @xmath216 , see sec .",
    "[ sub : convergencefmm ] . [ cols=\"^,^,^,^,^,^,^ \" , ]                                    a  ortega , d  amors , and j  garca  de la  torre .",
    "prediction of hydrodynamic and other solution properties of rigid proteins from atomic - and residue - level models .",
    ", 101(4):892898 , 2011 .",
    "code available at http://leonardo.inf.um.es/macromol/programs/hydropro/hydropro.htm .",
    "megan s  davies wykes , jrmie palacci , takuji adachi , leif ristroph , xiao zhong , michael  d ward , jun zhang , and michael  j shelley .",
    "dynamic self - assembly of microscale rotors and swimmers .",
    ", 12(20):45844589 , 2016 .",
    "tri  t pham , ulf  d schiller , j  ravi prakash , and burkhard dnweg .",
    "implicit and explicit solvent models for the simulation of a single polymer chain in solution : lattice boltzmann versus brownian dynamics .",
    ", 131:164114 , 2009 .",
    "simn poblete , adam wysocki , gerhard gompper , and roland  g. winkler .",
    "hydrodynamics of discrete - particle models of spherical colloids : a multiparticle collision dynamics simulation study .",
    ", 90:033314 , 2014 .",
    "david  j smith .",
    "a boundary element regularized stokeslet method applied to cilia - and flagella - driven flow .",
    "in _ proceedings of the royal society of london a : mathematical , physical and engineering sciences _ , volume 465 , pages 36053626 . the royal society , 2009 .",
    "simon  k layton and lorena  a barba .",
    "inexact krylov iterations and relaxation strategies with fast - multipole boundary element method . , 2015 .",
    "software available at https://github.com/barbagroup/fmm-bem-relaxed .",
    "satish balay , william  d. gropp , lois  curfman mcinnes , and barry  f. smith .",
    "efficient management of parallelism in object oriented numerical software libraries . in e.",
    "arge , a.  m. bruaset , and h.  p. langtangen , editors , _ modern software tools in scientific computing _ , pages 163202 . birkhuser press , 1997 .",
    "software available at http://www.mcs.anl.gov/petsc .",
    "yuanxun bao , jason kaye , and charles  s. peskin .",
    "a gaussian - like immersed - boundary kernel with three continuous derivatives and improved translational invariance .",
    ", 316:139  144 , 2016 .",
    "software available at https://github.com/stochastichydrotools/ibmethod .",
    "r.  falgout , j.  jones , and u.  yang .",
    "the design and implementation of hypre , a library of parallel high performance preconditioners .",
    ", pages 267294 , 2006 .",
    "software available at http://www.llnl.gov/casc/hypre .",
    "ayan chakrabarty , feng wang , chun - zhen fan , kai sun , and qi - huo wei .",
    "high - precision tracking of brownian boomerang colloidal particles confined in quasi two dimensions .",
    ", 29(47):1439614402 , 2013 .",
    "pmid : 24171648 .",
    "yu  zhang , juan  j de  pablo , and michael  d graham .",
    "an immersed boundary method for brownian dynamics simulation of polymers in complex geometries : application to dna flowing through a nanoslit with embedded nanopits .",
    ", 136:014901 , 2012 .",
    "pat plunkett , jonathan hu , christopher siefert , and paul  j atzberger .",
    "spatially adaptive stochastic methods for fluid  structure interactions subject to thermal fluctuations in domains with complex geometries .",
    ", 277:121137 , 2014 ."
  ],
  "abstract_text": [
    "<S> we develop a rigid multiblob method for numerically solving the mobility problem for suspensions of passive and active rigid particles of complex shape in stokes flow in unconfined , partially confined , and fully confined geometries . as in a number of existing methods , we discretize rigid bodies using a collection of minimally - resolved spherical blobs constrained to move as a rigid body , to arrive at a potentially large linear system of equations for the unknown lagrange multipliers and rigid - body motions . here </S>",
    "<S> we develop a block - diagonal preconditioner for this linear system and show that a standard krylov solver converges in a modest number of iterations that is essentially independent of the number of particles . </S>",
    "<S> key to the efficiency of the method is a technique for fast computation of the product of the blob - blob mobility matrix and a vector . for unbounded suspensions , we rely on existing analytical expressions for the rotne - prager - yamakawa tensor combined with a fast multipole method ( fmm ) to obtain linear scaling in the number of particles . for suspensions sedimented against a single no - slip boundary , </S>",
    "<S> we use a direct summation on a graphical processing unit ( gpu ) , which gives quadratic asymptotic scaling with the number of particles . for fully confined domains , such as periodic suspensions or suspensions confined in slit and square channels , </S>",
    "<S> we extend a recently - developed rigid - body immersed boundary method [ `` an immersed boundary method for rigid bodies '' , b. kallemov , a. pal singh bhalla , b. e. griffith , and a. donev , communications in applied mathematics and computational science , 11 - 1 , 79 - 141 , 2016 ] to suspensions of freely - moving passive or active rigid particles at zero reynolds number . </S>",
    "<S> we demonstrate that the iterative solver for the coupled fluid and rigid body equations converges in a bounded number of iterations regardless of the system size . in our approach </S>",
    "<S> , each iteration only requires a few cycles of a geometric multigrid solver for the poisson equation , and an application of the block - diagonal preconditioner , leading to linear scaling with the number of particles . </S>",
    "<S> we optimize a number of parameters in the iterative solvers and apply our method to a variety of benchmark problems to carefully assess the accuracy of the rigid multiblob approach as a function of the resolution . </S>",
    "<S> we also model the dynamics of colloidal particles studied in recent experiments , such as passive boomerangs in a slit channel , as well as a pair of non - brownian active nanorods sedimented against a wall .    </S>",
    "<S> # 1 # 1 # 1    # 1#1 # 1#1    # 1#1 # 1|#1|    # 1#1    # 1     </S>",
    "<S> s    l </S>"
  ]
}
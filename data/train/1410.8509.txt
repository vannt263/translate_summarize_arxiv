{
  "article_text": [
    "usarsim is a high fidelity simulation of urban search and rescue ( usar ) robots and environments intended as a research tool for the study of human - robot interaction ( hri ) and multirobot coordination .",
    "usarsim is designed as a simulation companion to the national institute of standards and technology ( nist ) reference test facility for autonomous mobile robots for urban search and rescue@xcite . +",
    "as the time passed , the usarsim has been used for broader range of robot simulations .",
    "the acronym was converted to unified system for automation and robot simulation .",
    "but it is still usarsim .",
    "+ aerial vehicles in this environment play a very important role@xcite .",
    "they act as the eyes of a bird , flying in the sky and informing the other robots about the environment .",
    "the better they take pictures , the better other robots will cooperate . in the other hand two main questions arise .",
    "the first one is how to merge these pictures to have a general map .",
    "the second question is what to do with this map . in the following parts we will talk about these issues .",
    "+ there are two aerial vehicles implemented in the usarsim , a blimp named as passarola and a quadcopter named as airobot as shown in figure 1 .",
    "both of these vehicles have the ability to carry a camera to take some pictures .",
    "+ the best and easiest way of using sequence of pictures is to create a photomap from them .",
    "this photomap would be very useful for localization purposes .",
    "creating such a map is not easy and takes a long time to develop an algorithm to handle it .",
    "there are several image processing algorithms used for registering sequence of images in order to create a photo map .",
    "one of these algorithms that uses fourier melin transform has been developed by dr bulow is used in our system . even if there is such an algorithm , we still have some problems .",
    "+ one of the challenging problems in having a photomap is having a decent sequence of images that an image processing algorithm can handle@xcite .",
    "one of these problems is movements of the camera . according to the movements of camera the image processing algorithm has to do some scaling , rotation or translation processes .",
    "the less the changes , the better the final map will be .",
    "intrinsically , passarola has a huge amount of inertia that makes its movements smoother .",
    "that makes it move without abrupt changes in altitude or position . in the better word , its movements along x , y , and z",
    "axises will be smoother .",
    "thus we chose passarola for carrying the camera .",
    "+ in the following parts of this report we will explain what we have done in detail .",
    "there is an implementation of fmi in matlab and another in c++ @xcite .",
    "the c++ one was in the experements folder of jacobotics source code and was basically developed to work with the philips webcam in order to test some parts of fmi algorithm . since that camera was a real camera and there are some issues regarding calibration , they had to be considered during photomaping .",
    "when we are working in a simulated area , no calibration is required@xcite .",
    "the first task we did was to change the fmi source code in c++ language .",
    "so we added a new parameter to its constructor under the name of calibration .",
    "if it is set in the constructor , calibration will be done .",
    "otherwise it wo nt do calibration .",
    "+ the second task that we did was to move the fmi source code from experimnets to the library folder , and set the pathes and links .",
    "then everybody can use it easily . at the moment it is in the lib / mapping / fmi folder .",
    "+ then we configured a blimp to have a downlooking camera and some other things like propellers etc .",
    "we added two important sections in jacobotics source code .",
    "one of them is an actuator to drive our blimp , and the other is an image grabber to take pictures and create a photomap of them .",
    "the actuator is inside /lib / virtual / actuators / passaroladrive . for using this package",
    "it is required to create an object from this type and use setmotorspeeds method .",
    "it receives three parameters and returns nothing .",
    "this method generally sets the motor speed of one of the propellers .",
    "the parameters are xzangle , thrustpropeller and tailpropeller + where + xzangle , float , is the rotation angle of the support thrust motors bars , that make possible change the altitude of the robot ( i.e up / down ) .",
    "the value is the absolute rotation angle , in radians per second .",
    "+ thrustpropeller , float , is the module of the velocity vector to be applied by the front thrusters , to move the robot in the x0z plane ( i.e forward / backward and up / down as the value of xzangle ) .",
    "the value is the absolute linear velocity , in meters per second .",
    "+ tailpropeller , float , is the rotational velocity ( i.e left / right ) .",
    "the value is the absolute rotational velocity , in meters per second .",
    "+ the other section that i added was passarolaimagegrabber .",
    "it is placed in lib / virtual / autonomy / passarolaimagegrabber .",
    "this part is responsible for getting pictures from the image server and store them in files .",
    "these files could be used for testing fmi algorithm in offline mode , but it could be easily disabled . since we are in the phase of testing this algorithm , we prefered to enable this feautre .",
    "+            the next importnat part done in this file is to apply fmi on the sequence of images captured from the camera .",
    "our fmi algorithm works only on special format pictures .",
    "since the image server can take picures only in colored format and rectangular format , we have to convert them to grayscale and square shape . for doing this task we used graphicmagick library .",
    "so for using this part the user has to install this package first .",
    "after cropping and converting the picture sequence , we applied fmi algorithm to it .",
    "the output of the fmi algorithm is x , y , rotation and scale .",
    "these variables associated with the new image can create the whole photomap . in order to create the photomap",
    ", we put the new picture in the appropriate place in our gui .",
    "we developed our own gui using opencv to present the output of the algorithm in online mode .",
    "one of the outputs is shown in figure 2 .",
    "the real environment that we applied our algorithm is shown in figure 3 .",
    "one of the problems of using opencv is that it needs a fixed size for the photomap .",
    "since we are creating the map in time , it is a growing map and we ca nt have a fixed size for it .",
    "there are several solutions for handling it , but everything should be done from scratch .",
    "so it would be easier to use their gui .",
    "+ the idea was to send these variables and images to the original gui .",
    "then we had to send it on wireless simulation server to be captured by that gui .",
    "we talked with them and ravi said they are to change the image message and it is not possible to send it to their gui .",
    "the other option is not to use wss server and use some parts of their source code and develop our own qtobject in order to integrate it with their gui . but",
    "lots of things have to be changed , because their gui slows down when the number of images is increasing .",
    "so it is not again usable and we have to fix this problem of the gui first . by default qt",
    "is repainting everything on its canvas .",
    "it does nt care which part has recetly been changed .",
    "this will force high workload on cpu and memory of the computer , and slows down the overal progress .",
    "the idea is to render and repaint only the newer part in photomap .",
    "since it was suggested very late , a few days ago , we havent had enough time to do it yet .",
    "but we are trying to do it as soon as possible .",
    "having a general map of a disaster situation is very useful in a cooperative multirobot system . in this report",
    "we explained our approach for integrating fmi algorithm into jacobotics source code , in order to have a growing map of the environmet in a disaster situation .",
    "we showed that the job was done pretty well , but there are still some tasks to be done in near future .",
    "the most important task is to take it to a qt gui from an opencv one .",
    "+    1 usarsim : unified system for automation and robotics simulator ( usarsim ) ( 2006 ) b. zitova , j. flusser , image registration mehotds : a survey , elsevier , ( 2003 ) a. jacoff , e. messina , j. evans . ",
    "experiences in deploying test arenas for autonomous mobile robots  , in proceedings of performance metrics for intelligent systens , 2001 .",
    "nuchter , andreas , seyedshams feyzabadi , deyuan qiu , and stefan may .",
    "`` slam  la carte - gpgpu for globally consistent scan matching . '' in ecmr , pp .",
    "271 - 276 . 2011 .",
    "lucas , bruce d. , and takeo kanade .",
    "`` an iterative image registration technique with an application to stereo vision .",
    "baumann , peter , shams feyzabadi , and constantin jucovschi .",
    "`` putting pixels in place : a storage layout language for scientific data . ''",
    "data mining workshops ( icdmw ) , 2010 ieee international conference on .",
    "ieee , 2010 .",
    "maes , frederik , et al .",
    "`` multimodality image registration by maximization of mutual information . '' medical imaging , ieee transactions on 16.2 ( 1997 ) : 187 - 198 .",
    "feyzabadi , s. , and j. schonwalder .",
    "`` identifying tcp congestion control algorithms using active probing . ''",
    "passive and active measurement conference ( pam ) , poster ."
  ],
  "abstract_text": [
    "<S> creating a photomap plays a critical role in navigation . therefore , flying vehicles are usually used to create topdown maps of the environment . in this report </S>",
    "<S> we used two different aerial vehicles to create a map in a simulated environment    * photomapping using + aerial vehicle in usarsim * + su kim </S>"
  ]
}
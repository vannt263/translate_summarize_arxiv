{
  "article_text": [
    "monte carlo ( mc ) simulations are ( apart from molecular dynamics ) the main simulation technique for many particle systems with a diverse range of applications @xcite .",
    "there has been considerable progress on developing fast alternatives to the standard local markov - chain monte carlo ( mcmc ) technique , which is the detailed - balance metropolis algorithm .",
    "cluster mc algorithms are non - local mcmc algorithms , where whole clusters of particles are moved or updated within a single mc move . for lattice spin systems ,",
    "the swendsen - wang @xcite and wolff @xcite have provided the first cluster algorithms . for off - lattice interacting particle systems , the simplest of which are dense hard spheres , different cluster algorithms have been proposed . in ref .",
    ", a cluster algorithm based on pivot moves has been proposed @xcite . in ref . , the event - chain ( ec ) algorithm has been proposed , which provides a rejection - free algorithm where a chain of hard particles is moved in each mc move @xcite .    the ec algorithm has been generalized @xcite to arbitrary pairwise interactions @xcite and continuous spin models @xcite . in many applications ,",
    "however , three - particle interactions occur .",
    "this happens , in particular , for extended objects , such as rods or polymers , which can be described by bead - spring models .",
    "one prominent example are semiflexible polymer chains with a bending energy . because the local bending angle involves three neighboring beads in a discrete model",
    ", the bending energy is a three - particle intra - polymer interactions .",
    "recently , the ec algorithm has been applied to bead - spring models of flexible polymer chains @xcite . a completely rejection - free algorithm for semiflexible polymers with bending energy",
    "requires a rejection - free implementation of three - particle interactions .",
    "this is what we provide in the present paper .",
    "we will discuss how the ec approach can be generalized to arbitrary soft or hard three- and many - particle interactions .",
    "this generalization requires special lifting moves , because an ec can transfer to _ two _ ( or more ) possible interaction partners .",
    "we provide a general solution of the set of lifting probabilities .",
    "we then validate and demonstrate the algorithm in three different applications .",
    "we start with a test problem involving only three particles with an interaction depending on the enclosed triangle area",
    ". then we proceed with hard needles in two dimensions .",
    "the steric interaction between needles can be formulated in terms of a three - particle hard - core interaction of their end points .",
    "finally , we address the problem of a semiflexible polymer with the bending energy as three - particle interaction .",
    "a mcmc algorithm produces a markov chain , whose stationary distribution @xmath0 is the boltzmann distribution for a given system ; for a state @xmath1 , @xmath2 , where we set @xmath3 , measuring energies in units of @xmath4 , and where @xmath5 is the partition function . in order to retrieve the correct stationary distribution , the algorithm has to fulfill the _ global balance _",
    "condition @xmath6 where @xmath7 is the probability flow from configuration @xmath1 to @xmath8 and @xmath9 the corresponding transition rate . instead of requiring _ detailed balance _",
    "( @xmath10 for _ all _ @xmath11 ) to fulfill ( [ eq : gb ] ) , ec algorithms satisfy _ maximal global balance _ , which means it is rejection - free ( @xmath12 ) and flows between two configurations are unidirectional ( @xmath13 ) .    for a system with @xmath14-particle interactions ,",
    "the total energy @xmath15 is the sum of all @xmath14-body interactions over all sets @xmath16 of @xmath14 particles .",
    "a move @xmath17 that involves displacements of one or several particles generates corresponding energy changes @xmath18 in the interaction contributions , i.e. , @xmath19 .",
    "detailed balance is fulfilled by the standard metropolis rule @xmath20 for acceptance of a move ( offered with a symmetric trial probability @xmath21 ) . factorizing the boltzmann weight along the sum of @xmath14-interactions @xmath22",
    ", we use instead a factorized metropolis rule @xcite , @xmath23^+ } \\label{eq : factmet}\\end{aligned}\\ ] ] where @xmath24^+\\equiv \\max(0,x)$ ] .    for infinitesimal moves with corresponding infinitesimal interaction energy changes @xmath25 , the probability of rejecting a move",
    "@xmath17 simplifies further to @xmath26^+}{\\pi(\\alpha)}=\\sum_{m}[{\\text{d}e}_{m}]^+ , \\label{eq : factmet2}\\end{aligned}\\ ] ] which is simply the sum of all the positive contributions of the @xmath14-particle interactions @xcite , called _",
    "factor_. a move can then be rejected by a single factor @xmath27 at a time .        drawing on the lifting framework @xcite , maximal global balance",
    "is enforced by extending the physical configurations @xmath1 by a lifting variable @xmath28 , which sets the particle for the next move , to configurations @xmath29 ( greek letters @xmath30 describe the physical configuration , latin letters @xmath31 the moving particle along the direction @xmath32 ) . in the next move from the extended configuration @xmath29 particle @xmath28 is updated by the infinitesimal vector @xmath33 , corresponding to the physical move @xmath34 ( we first consider an event chain with a fixed unit vector direction @xmath32 ) . according to the factorized metropolis rule ( [ eq : factmet ] ) , the physical move @xmath35 is then either accepted by all factors @xmath27 ( the physical configuration @xmath1 is updated to @xmath8 and the next proposed move is again an update of particle @xmath28 along @xmath32 ) or rejected by a single factor @xmath27 . in the latter case ,",
    "a lifting move takes place , where the lifting variable @xmath28 changes to another particle @xmath36 of the set @xmath27 , as illustrated in fig .",
    "[ fig : flow_diagram ] .",
    "we denote this lifting flow caused by the factor @xmath27 by @xmath37 .    to obey global balance ( [ eq : gb ] ) , lifting and physical flows into a configuration @xmath38 must add up to its boltzmann weight @xmath39 @xmath40 owing to detailed balance of the factorized metropolis filter , the physical flow @xmath41 can be rewritten as @xmath42^+ \\right ) , \\label{eq : flowk2}\\end{aligned}\\ ] ] where @xmath43 is the energy change of the set @xmath27 for a move of a particle @xmath44 along @xmath32 for a configurational change @xmath45 and @xmath46 the energy change for the reverse move of particle @xmath36 .",
    "the lifting flow @xmath47 must compensate for the probability of rejection in to fulfill global balance ( [ eq : flowk ] ) .",
    "we define the lifting probability @xmath48 from particle @xmath28 to @xmath36 within a factor @xmath27 by the decomposition @xmath49    for infinitesimal displacements only a single factor @xmath27 causes the rejection , i.e. , only the term from the rejection causing factor @xmath27 contributes in the sum over lifting flows in the global balance ( [ eq : flowk ] ) ( for a more detailed discussion see ref . ) .",
    "therefore , it suffices to consider this specific rejection causing factor @xmath27 for global balance in the following , so that global balance ( [ eq : flowk ] ) is equivalent @xmath50^+ .",
    "\\label{eq : gbfact}\\end{aligned}\\ ] ]    for pairwise interactions , see ref .",
    "@xcite , each rejection is caused by a single interacting particle and the factors @xmath27 in are pairs . due to translational invariance ,",
    "the resulting lifting probabilities are @xmath51^+    = [ { \\text{d}e}_{i , k}]^+ \\label{eq : pliftpair}\\end{aligned}\\ ] ] ( with @xmath52 ) .",
    "they give rise to lifting flows , which exactly compensate for rejections in .",
    "maximal global balance is fulfilled : there are no rejections on the extended configuration space and no backwards moves on the physical space . between two lifting moves ,",
    "the particle @xmath28 is moved by a finite displacement @xmath53 , until a particle @xmath36 rejects the move and is moved in the same direction .",
    "if the interaction is a many - body interaction , the lifting probability ( [ eq : pliftpair ] ) is not correct anymore and has to be adapted .",
    "the translational invariance does not yield a symmetry between only two particles anymore but between all particles in an interacting set @xmath27 . moving all particles @xmath54 by the same @xmath33 leaves the energy @xmath55 invariant , @xmath56    in the following",
    ", we will discuss how to implement a maximal global - balance scheme for many - body interactions , as illustrated in fig .",
    "[ fig : flow_diagram ] .",
    "first , we decompose the overall lifting probability @xmath57 into the trial probability to propose a lifting move from @xmath28 to any particle of a factor @xmath27 containing @xmath28 and @xmath36 , @xmath58 , and into the conditional probability @xmath59 to actually lift from @xmath28 to @xmath36 , so that @xmath60 . in order to make the algorithm rejection - free",
    ", the trial probability has to exactly compensate the rejection probability @xmath61^+$ ] for the rejection - causing factor @xmath27 containing @xmath28 from @xmath62^+ , \\ ] ] and the conditional probabilities have to be normalized : @xmath63 .",
    "the global balance conditions become @xmath64^+ \\lambda_{ik}=      [ - { \\text{d}e}_{k , m}]^+ .",
    "\\label{eq : gbfact2}\\end{aligned}\\ ] ] lifting from particle @xmath28 to @xmath36 , i.e. , @xmath65 requires @xmath66 in order to trigger lifting by rejection and @xmath67 according to global balance .",
    "this also enforces maximal global balance as only lifting moves from @xmath28 to @xmath36 are proposed .",
    "let us consider a set @xmath27 of @xmath14 interacting particles with @xmath68 of them having @xmath67 ( i.e. , an update along @xmath32 leads to a decrease in energy ) and @xmath69 having @xmath70 ( i.e. , an update along @xmath32 leads to a decrease in energy ) , for which we have to determine the set of @xmath71 non - zero lifting probabilities @xmath59 . global balance together with the normalization condition",
    "@xmath72 give only @xmath73 independent conditions on @xmath71 non - zero @xmath59 .",
    "we can conclude that for @xmath74 these conditions are sufficient to obtain a unique set of @xmath59 , whereas the choice of the @xmath59 is not unique for @xmath75 .    for @xmath76 with two interacting particles @xmath28 and @xmath36 , we simply have @xmath77 , such that the ec algorithm for pairwise interactions @xcite is recovered . for @xmath78 ,",
    "i.e. , three - particle interactions global balance and normalization uniquely determine the @xmath59 for the set @xmath79 .",
    "if @xmath80 ( with @xmath81 ) and with translational invariance , we have to distinguish three possible cases of signs of the energy changes @xmath82 and @xmath83 : @xmath84^+}/{[{\\text{d}e}_{i , jk}]^+ } , \\\\    & & & \\lambda_{ik}={[-{\\text{d}e}_{k , ij}]^+}/{[{\\text{d}e}_{i , jk}]^+}. \\end{aligned } \\label{eq : pij3particles}\\end{aligned}\\ ] ]    for @xmath75 , the choice of @xmath59 is not unique but there is a particularly simple choice , which we obtain with the additional conditions @xmath85 for all @xmath86 . together with the global balance condition , we obtain @xmath87^+}{\\sum_{l \\in m } [ { \\text{d}e}_{l , m}]^+ } =    \\frac{[-{\\text{d}e}_{k , m } ] ^+}{\\sum_{l \\in m\\backslash\\{k\\ } } [ { \\text{d}e}_{l , m}]^+}. \\label{eq : lambda}\\end{aligned}\\ ] ] owing to translational invariance , the normalization @xmath63 holds , because the translational symmetry leads to the symmetry @xmath88^+   = \\sum_{l \\in m } [ { \\text{d}e}_{l , m}]^+$ ] between the two subsets of particles having @xmath67 and having @xmath70 .",
    ".   is a glauber - like lifting rule as the lifting probability only depends on the energy change @xmath89^+$ ] of the final particle @xmath36 . for the case",
    "@xmath78 , the lifting rule ( [ eq : lambda ] ) is also equivalent to a metropolis - like representation @xmath90^+/      [ { \\text{d}e}_{i , jk}]^+\\right)$ ] .",
    "the expression of the conditional probabilities is our main result : eq .",
    "( [ eq : lambda ] ) gives the rule to implement a maximal global - balance and rejection - free scheme for @xmath14-particle interactions provided the forces onto all @xmath14 particles are known , as the infinitesimal energy changes @xmath91 correspond to the @xmath32-component of the forces on the particles . for the scheme eq .",
    "( [ eq : lambda ] ) , the conditional lifting probabilities @xmath59 depend on the mc - move direction @xmath32 and the forces onto the final particle @xmath36 .",
    "as for the ec algorithm for pairwise interactions , ergodicity on all directions @xmath32 is achieved by setting a finite total displacement @xmath92 , @xcite .",
    "once all the finite displacements @xmath53 between",
    "successive lifting events sum up to @xmath92 , the lifting variable @xmath28 and the direction @xmath32 are resampled .",
    "this sequence is called an event chain , ec , and @xmath92 the length of the ec .    in practice , implementing infinitesimal moves leads to an infinite number of physical moves per unit of time .",
    "an ec move starts with a randomly chosen particle @xmath28 and a random direction @xmath93 .",
    "an event - driven approach is used to compute directly the next lifting event .",
    "the maximal displacement lengths @xmath94 for all many - particle interactions between any set @xmath27 of @xmath14 particles containing @xmath28 are calculated by solving @xmath95^+=- \\ln u_m = \\delta e^*_{u_m } , \\label{eq : displength}\\end{aligned}\\ ] ] with @xmath96 being a random number uniformly distributed in @xmath97 $ ] and drawn for each set @xmath27 such that the positive increment of energy @xmath98 is drawn from an exponential distribution @xcite .",
    "the particle is moved by the _",
    "@xmath99 $ ] selecting out one particular set of @xmath14 interacting particles for the lifting .",
    "afterwards , the conditional lifting probabilities @xmath100 for this set are calculated , and the ec is lifted to the next moving particle accordingly . moving and lifting are repeated until the ec length @xmath92 is reached .    for applications , the determination of the @xmath94 is often one of the main technical difficulties . as discussed in refs .",
    "@xcite , it is often advantageous to further decompose the interaction into several parts , e.g. , @xmath101",
    ". then , we treat each part as independent factor in ( [ eq : factmet ] ) and determine for each part all maximal displacement lengths @xmath102 , @xmath103 , ... the _ smallest _ @xmath104 gives the maximal displacement length and the conditional lifting probabilities @xmath100 are calculated for the set of particles @xmath27 and the part of the interaction @xmath105 minimizing @xmath106 .    in the following sections , we validate our ec algorithm by applying it to three different systems with three - particle interactions .",
    "the systems were sampled with @xmath107 such that the theoretical prediction is @xmath108 for the gaussian distribution .",
    "we find @xmath109 for the correct solution but @xmath110 for @xmath111 . ]    as a first validation we investigate a simple test system of three particles in two dimensions .",
    "the three particles form a triangle of area @xmath112 , and we define a genuine three - particle interaction by @xmath113 , where @xmath114 is a preferred triangle area and @xmath115 is a coupling constant . the area can be written as @xmath116 .    in order to calculate the maximal displacement length from eq .   , we need to analyze the energy change @xmath117 when moving particle @xmath28 along @xmath118 for extrema .",
    "we find three zeros of @xmath119 ,    @xmath120    at @xmath121 the area is zero , i.e. , all three particles are on a line , while @xmath122 are points where @xmath123 . solving gives the maximal displacement length @xmath124 where we use @xmath125 if @xmath126 and @xmath127 else and pick the smallest positive @xmath106 .",
    "the lifting ratios are calculated by using .",
    "the probability distribution of the area , @xmath128 , is given by the boltzmann distribution and should therefore be gaussian , @xmath129 with mean @xmath130 and a variance @xmath131 . in order to validate our algorithm we measure @xmath128 and compare with the theoretical prediction ,",
    "see fig .",
    "[ fig : triangledist ] .",
    "the correct choice of conditional lifting probabilities @xmath100 agrees with the theoretical prediction , whereas other choices such as @xmath111 give rise to clear deviations .",
    "and @xmath59 when a moving end point @xmath28 hits a fixed needle @xmath132 ( see eq . ) . ]",
    "we now consider a system of hard extensible needles in two dimensions ( 2d ) , which are described in terms of the coordinates of their end points ; the end point ensemble thus constitutes a many - particle system that is treated with the ec algorithm . each needle @xmath133 is extensible with a pair energy @xmath134 , where @xmath115 is an elastic constant and @xmath135 the needle rest length ; we will focus on large @xmath115 to ensure almost fixed length @xmath135 .",
    "the repulsive hard core interaction of the lines connecting the end points is modeled as three - particle interaction between each end point @xmath28 and the line @xmath132 connecting the two end points @xmath136 and @xmath36 of any second needle , see fig .  [",
    "fig : gb_bonds ] . in order to describe this interaction",
    "we introduce the parallel component @xmath137 of @xmath138 from @xmath36 to @xmath28 ( using the unit vector @xmath139 parallel to the needle @xmath132 ) and the perpendicular distance @xmath140 of point @xmath28 to the needle @xmath132 .",
    "the boltzmann weight of the hard needle interaction is zero if end point @xmath28 touches the needle @xmath132 and one otherwise and can be written as @xmath141 with the heaviside function @xmath142 ( @xmath143 for @xmath144 and @xmath145 for @xmath146 ) and another indicator function @xmath147 with @xmath148 for @xmath149 and @xmath150 otherwise .",
    "lifting occurs whenever an end point hits another needle .",
    "this can happen either because the moving end point hits a fixed needle or the moving needle ( belonging to the moving end point ) hits an end point of a fixed needle .",
    "if an end point @xmath28 hits the needle @xmath132 the ec algorithm needs to decide whether to lift to point @xmath136 or @xmath36 , which gives the next end point to displace , see fig .",
    "[ fig : gb_bonds ] . for this decision",
    "we need to calculate the conditional lifting probabilities @xmath100 and @xmath59 , given by . for the hard needle interaction ,",
    "we use the derivative of the boltzmann weights @xmath151 ( see eq .  ) with @xmath152 the second term is non - zero only if the needle point @xmath28 exactly hits one of the ends of the needle @xmath132 and can therefore be neglected for infinitely thin needles . using this in eq .",
    "we find @xmath153^+ }     { \\left[-\\nabla_{{\\bm{r}}_i } d_{i , jk}\\cdot { { { \\bm{e}}_{\\delta}}}\\right]^+ +       \\left[-\\nabla_{{\\bm{r}}_j } d_{i , jk}\\cdot { { { \\bm{e}}_{\\delta}}}\\right]^+   }   \\label{eq : needlelambda}\\end{aligned}\\ ] ] with @xmath154 and @xmath155 .",
    "when the moving end point @xmath28 hits the needle @xmath132 , this simplifies to simple length ratios @xmath156 and @xmath157 , where @xmath158 .",
    "when , vice versa , point @xmath36 is moving and an end point @xmath28 is hit by the moving needle @xmath132 , it gives @xmath159 and @xmath160 , i.e. , the ec then transfers to @xmath36 with certainty .",
    "the elastic pair energy @xmath161 is treated independently as an additional simple pairwise interaction using eq.([eq : pliftpair ] ) .",
    "( left axis ) and relative deviation of ec results to local mc ( right axis ) as a function of the number of needles @xmath162 per area @xmath112 for a 2d system of needles with @xmath163 with periodic boundaries ( @xmath164 ) ( left axis ) . the ec algorithm with @xmath165 ,",
    "see eq .",
    "( [ eq : needlelambda ] ) , agrees numerically with local mc , whereas a naive choice @xmath166 significantly deviates .",
    "upper row : simulation snapshots color - coded for the local order parameter @xmath167 around needle @xmath28 . ]    in order to validate our algorithm we measure the nematic order parameter of the 2d hard needle system @xmath168 , with @xmath169 being the angle between the needle orientation and the director as a function of needle density . in fig .",
    "[ fig : lc_op ] , we compare local mc simulations with rejections and two versions of the ec algorithm . in one version we naively take @xmath170 , the other version is the proper algorithm using ( [ eq : needlelambda ] )    measuring the autocorrelation time for the order parameter @xmath171 we find speed - up factors of @xmath172 in cpu time for the ec algorithm in comparison to the local mc algorithm ( measured at @xmath173 ) . this algorithm can also be used in polymer simulation where the polymers are modeled as chains of hard needles as alternative to existing polymer ec algorithms @xcite .",
    "as a third application we simulate a free semiflexible harmonic chain with bending rigidity @xmath174 composed of @xmath162 beads and elastic bonds of mean length @xmath175 @xcite in three dimensions . @xcite the bending energy is @xmath176 with tangential vectors @xmath177 and tangential angles @xmath178 at bead @xmath28 . moving bead @xmath28 changes three terms in since @xmath179 , @xmath180 and @xmath181 are functions of @xmath182 and three angles change ( see fig .  [",
    "fig : semiflexpoly ] ) .",
    "each angle is a function of three particle positions , making the bending energy a three - particle interaction .     in a semiflexibe",
    "polymer changes three angles each of them a function of the positions of bead @xmath28 and two more beads . ]",
    "we first determine the maximal displacement length for a displacement @xmath118 of bead @xmath28 . in the following , @xmath183 is the remaining total displacement length of the ec , i.e. @xmath184 .    for an outer angle @xmath185 the energy change is @xmath186 which gives an extremum of the energy @xmath187 at @xmath188 . for the calculation of the maximal displacement length",
    "we calculate @xmath189 and the sign of @xmath190 . if @xmath191 , @xmath187 is decreasing . if @xmath192 the bead can move until @xmath193 is reached ( and the ec terminates ) .",
    "if @xmath194 there is an energy minimum at @xmath189 , to which the bead can move at no energy cost .",
    "we calculate the energy @xmath195 and allow an energy increase of @xmath196 to @xmath197 .",
    "the corresponding displacement length @xmath198 is calculated by solving @xmath199 which gives @xmath200 @xmath201 where we take the smallest positive solution in , and the maximal displacement length is @xmath202 .",
    "if @xmath203 , @xmath187 is increasing and there is an energy minimum at @xmath189 .",
    "then we calculate @xmath198 immediately using with @xmath204 .",
    "if @xmath198 is smaller than the energy - maximizing @xmath189 or @xmath192 , @xmath198 is the maximal displacement length .",
    "otherwise , the move over the energy maximum at @xmath189 can be performed so the bead can move until @xmath193 is reached ( and the ec terminates ) .",
    "analogous calculations apply to @xmath205 .    the calculation for the center angle @xmath178 is more complicated because @xmath206 has one or three zeros .",
    "since the energy @xmath207 gets maximized for @xmath208 , @xmath207 either has two minima and one maximum in between or only a single minimum .",
    "the algorithm now works as follows : first the zeros @xmath209 of @xmath210 are calculated ( the calculation of @xmath210 shows that they are zeros of a third order polynomial , for which an analytical formula can be derived )",
    ". since only zeros in the moving direction are important there can be up to three extrema on the way .",
    "these four cases are treated as follows : no zeros : @xmath211 so moving costs energy .",
    "the energy cost for moving the complete remaining @xmath183 can be calculated .",
    "if the cost is smaller than @xmath196 this move is performed .",
    "otherwise , @xmath106 is calculated numerically by solving @xmath212 by bisection .    1 zero : then @xmath213 has to be a minimum and @xmath214 on the way to that point . if @xmath215 the bead can move up to @xmath183 , otherwise @xmath106 is calculated by bisection on the interval @xmath216 $ ] from the condition @xmath217",
    ".    2 zeros : then , the first zero @xmath213 is a maximum , the second one @xmath218 a minimum .",
    "if the first zero can be reached with an energy @xmath196 , the particle can move past the second zero representing an energy minimum .",
    "then @xmath106 is calculated via bisection on the interval @xmath219 $ ] .",
    "if @xmath213 can not be reached , @xmath106 is calculated by bisection on the interval @xmath220 $ ] .",
    "3 zeros : then , @xmath213 is a minimum , @xmath218 a maximum and @xmath221 another minimum .",
    "this means the particle can move to @xmath213 .",
    "if @xmath196 is too small to reach @xmath218 , @xmath106 is calculated via bisection on the interval @xmath222 $ ] .",
    "if @xmath196 is large enough to reach @xmath218 , the particle can directly proceed past @xmath221 .",
    "then @xmath106 can be calculated by bisection on @xmath223 , where the available energy is reduced by the energy cost @xmath224 .",
    "we validate the correctness of this algorithm by measuring the tangent correlation function @xmath225 , which is analytically known to decay as @xmath226 ( for @xmath227 ) with the persistence length @xmath228 @xcite . as seen in fig .",
    "[ fig : tangautokorr ] the measured values match the analytical curve .",
    "and @xmath229 beads .",
    "right : autocorrelation @xmath230 of the end - to - end - vector as a function of cpu time @xmath231 ( on a @xmath232ghz intel xeon cpu ) for local mc and the new ec algorithm lines are exponential fits @xmath233 . ]    to measure the efficiency of the algorithm the autocorrelation of the end - to - end - vector @xmath234 is calculated as @xmath235 the results are shown in fig .",
    "[ fig : tangautokorr ] . for small @xmath174",
    "the ec algorithm is faster than local mc ( speed - up factor @xmath236 for @xmath237 or @xmath238 ) but performance becomes worse for large @xmath174 ( for @xmath239 or @xmath240 we even find slowing - down by a factor @xmath241 ) . for large @xmath174 , lifting events",
    "are numerous and comprise large parts of the polymer such that the resulting ec move resembles a rigid translation of the whole chain .",
    "we generalized the ec algorithm to three - particle and many - particle interactions thus broadening the range of applicability of rejection - free ec algorithms considerably . for @xmath14-particle interactions ,",
    "there are @xmath73 interacting particles to which the ec can lift to avoid rejections .",
    "we calculate a set of @xmath73 conditional lifiting probabilities @xmath100 which assure maximal global balance .",
    "we applied the generalized ec algorithm successfully to three different systems  a small system with three particles with a triangle - area - dependent interaction , hard needles in 2ds , and a single semiflexible polymer chain with bending energy  and demonstrate in all three cases the correctness of the algorithm .",
    "for hard needles or the semiflexible polymer we obtain considerable performance gains .    in the future",
    ", the ec algorithm can be used for efficient large scale simulations of the 2d hard needle system to answer the question whether nematic long - range order exists in large systems ( the increase of @xmath242 to a large value in fig .",
    "[ fig : lc_op ] can be an artefact of finite size effects ) and whether the system has a kosterlitz - thouless transition around @xmath243 by disclination unbinding , as suggested by local mc results @xcite .",
    "future work should also evaluate systematically to what extend the ec algorithm can suppress critical slowing down at the transition from isotropic to ( quasi-)nematic .    with respect to polymer simulations , the algorithm will allow the rejection - free simulation of large systems containing many interacting semiflexible polymers @xcite .",
    "the performance gains will most likely be higher as obtained for single polymers in this paper because additional inter - polymer interactions are more relevant for the length of ecs ."
  ],
  "abstract_text": [
    "<S> we generalize the rejection - free event - chain monte carlo algorithm from many particle systems with pairwise interactions to systems with arbitrary three- or many - particle interactions . </S>",
    "<S> we introduce generalized lifting probabilities between particles and obtain a general set of equations for lifting probabilities , the solution of which guarantees maximal global balance . we validate the resulting three - particle event - chain monte carlo algorithms on three different systems by comparison with conventional local monte carlo simulations : ( i ) a test system of three particles with a three - particle interaction that depends on the enclosed triangle area ; ( ii ) a hard - needle system in two dimensions , where needle interactions constitute three - particle interactions of the needle end points ; ( iii ) a semiflexible polymer chain with a bending energy , which constitutes a three - particle interaction of neighboring chain beads . </S>",
    "<S> the examples demonstrate that the generalization to many - particle interactions broadens the applicability of event - chain algorithms considerably . </S>"
  ]
}
{
  "article_text": [
    "_ left adequate semigroups _ are an important class of semigroups in which the right cancellation properties of elements in general are reflected in the right cancellation properties of the idempotent elements .",
    "_ right adequate semigroups _ are defined dually , while semigroups which are both left and right adequate are termed _",
    "adequate_. introduced by fountain @xcite , these classes of semigroups form a natural generalisation of _ inverse semigroups _ , and their study is a key focus of the _ york school _ of semigroup theory . left [ right ] adequate semigroups are most naturally viewed as algebras of signature @xmath0 , with the usual multiplication augmented with a unary operation taking each element to an idempotent sharing its right [ left ] cancellation properties . within the category of @xmath0-algebras the left [ right ] adequate semigroups form a quasivariety , from which it follows ( * ? ? ?",
    "* proposition  vi.4.5 ) that there exist free left and right adequate semigroups for every cardinality of generating set .",
    "when studying any class of algebras , it is very helpful to have an explicit description of the free objects in the class .",
    "such a description permits one to understand which identities do and do not hold in the given class , and potentially to express any member of the class as a collection of equivalence classes of elements in a free algebra . in the case of inverse semigroups ,",
    "a description of the free objects first discovered by scheiblich @xcite was developed by munn @xcite into an elegant geometric representation which has been of immense value in the subsequent development of the subject .",
    "the same approach has subsequently been used to describe the free objects in a number of related classes of semigroups @xcite and categories @xcite ; however , for reasons discussed in @xcite , munn s approach is not applicable to adequate semigroups . in @xcite",
    ", we gave an explicit geometric representation of the _ free adequate semigroup _ on a given set , as a collection of ( isomorphism types of ) edge - labelled directed trees under a natural multiplication operation .",
    "the focus of this paper is upon the free objects in the quasivarieties of left adequate and right adequate semigroups .",
    "we show that these embed into the corresponding free adequate semigroups in a natural way , as the @xmath0-algebras generated by the free generators under the appropriate operations ; the resulting representation of these semigroups is even easier to understand than that for the free adequate semigroup .",
    "these results combine with @xcite to yield a number of results concerning the structure of free left and right adequate semigroups .    an alternative approach to free left and",
    "right adequate semigroups is given by recent work of branco , gomes and gould @xcite .",
    "their construction arose from the fact that free left and right adequate semigroups are _ proper _ in the sense introduced in @xcite .",
    "in addition to this introduction , this article comprises three sections . in section  [ sec_preliminaries ]",
    "we briefly recall the definitions and elementary properties of adequate semigroups , and the results of @xcite concerning free adequate semigroups .",
    "section  [ sec_leftfas ] is devoted to the proof that certain subalgebras of the free adequate semigroup are in fact the free left adequate and free right adequate semigroups on the given generating set .",
    "finally , in section  [ sec_remarks ] we collect together some remarks on and corollaries of our main results .",
    "in this section we briefly recall the definitions and basic properties of left , right and two - sided adequate semigroups ( more details of which can be found in @xcite ) , and also some of the main definitions and results from @xcite characterising the free adequate semigroup .",
    "recall that on any semigroup @xmath1 , an equivalence relation @xmath2 is defined by @xmath3 if and only if we have @xmath4 for every @xmath5 .",
    "dually , an equivalence relation @xmath6 is defined by @xmath7 if and only if we have @xmath8 for every @xmath5 .",
    "a semigroup is called _ left adequate _ [ _ right adequate _ ]",
    "if every @xmath6-class [ respectively , every @xmath2-class ] contains an idempotent , and the idempotents commute .",
    "a semigroup is _ adequate _ if it is both left adequate and right adequate .",
    "it is easily seen that in a left [ right ] adequate semigroup , each @xmath6-class [ @xmath2-class ] must contain a _",
    "unique _ idempotent .",
    "we denote by @xmath9 [ respectively , @xmath10 the unique idempotent in the @xmath6-class [ respectively , @xmath2-class ] of an element @xmath11 ; this idempotent acts as a left [ right ] identity for @xmath11 .",
    "the unary operations @xmath12 and @xmath13 are of such critical importance in the theory of adequate [ left adequate , right adequate ] semigroups that it is usual to consider these semigroups as algebras of signature @xmath14 [ or @xmath0 for left adequate and right adequate semigroups ] with these operations . in particular , one restricts attention to morphisms which preserve the @xmath15 and/or @xmath16 operations ( and hence coarsen the @xmath6 and @xmath2 relations ) as well as the multiplication .",
    "similarly , adequate [ left or right adequate ] monoids may be viewed as algebras of signature @xmath17 [ @xmath18 with the identity a distinguished constant symbol .",
    "the following proposition recalls some basic properties of left and right adequate semigroups ; these are well - known and full proofs can be found in @xcite .    [ prop_adequatebasics ]",
    "let @xmath1 be a left adequate [ respectively , right adequate ] semigroup and let @xmath19 with @xmath20 and @xmath21 idempotent .",
    "then    * @xmath22 [ @xmath23 ; * @xmath24 [ @xmath25 ; * @xmath26 [ @xmath27 ; * @xmath28 [ @xmath29 $ ] ; * @xmath30 and [ @xmath31 ; * if @xmath32 then @xmath33 [ @xmath34 .",
    "recall that an object @xmath35 in a concrete category @xmath36 is called _ free _ on a subset @xmath37 if every function from @xmath38 to an object @xmath39 in @xmath36 extends uniquely to a morphism from @xmath35 to @xmath39 . the subset @xmath38 is called a _",
    "free generating set _ for @xmath35 , and its cardinality is the _ rank _ of @xmath35 .",
    "it is easily seen that classes of left and right adequate semigroups form a _ quasivariety _ , and it follows from general results ( see , for example , ( * ? ? ?",
    "* proposition  vi.4.5 ) ) that free left and right adequate semigroups and monoids exist .",
    "branco , gomes and gould @xcite have recently made the first significant progress in the study of these semigroups .",
    "the main aim of the present paper is to give an explicit geometric representation of them .",
    "we begin with a proposition , the essence of which is that the distinction between semigroups and monoids is unimportant .",
    "the proof is essentially the same as for the corresponding result in the ( two - sided ) adequate case , which can be found in @xcite .",
    "[ prop_monoidsemigroup ] let @xmath38 be an alphabet .",
    "the free left adequate [ free right adequate ] monoid on @xmath38 is isomorphic to the free left adequate [ free right adequate ] semigroup on @xmath38 with a single adjoined element which is an identity for multiplication and a fixed point for @xmath15 [ respectively , @xmath16 ] .",
    "we now recall some definitions and key results from @xcite ; a more detailed exposition may be found in that paper .",
    "we are concerned with _",
    "labelled directed trees _ ,",
    "by which we mean edge - labelled directed graphs whose underlying undirected graphs are trees .",
    "if @xmath20 is an edge in such a tree , we denote by @xmath41 , @xmath42 and @xmath43 the vertex at which @xmath20 starts , the vertex at which @xmath20 ends and the label of @xmath20 respectively .",
    "let @xmath38 be an alphabet .",
    "a _ @xmath38-tree _ ( or just a _ tree _ if the alphabet @xmath38 is clear ) is a directed tree with edges labelled by elements of @xmath38 , and with two distinguished vertices ( the _ start _ vertex and the _ end _",
    "vertex ) such that there is a ( possibly empty ) directed path from the start vertex to the end vertex .",
    "figure  1 shows some examples of @xmath38-trees where @xmath44 ; in each tree , the start and end vertices are marked by an arrow - head and a cross respectively .",
    "a tree with only one vertex is called _ trivial _ , while a tree with start vertex equal to its end vertex is called _ idempotent_. a tree with a single edge and distinct start and end vertices is called a _ base tree _ ; we identify each base tree with the label of its edge . in any tree ,",
    "the ( necessarily unique ) directed path from the start vertex to the end vertex is called the _ trunk _ of the tree ; the vertices of the graph which lie on the trunk ( including the start and end vertices ) are called _ trunk vertices _ and the edges which lie on the trunk are called _ trunk",
    "edges_. if @xmath45 is a tree we write @xmath46 for the set of trunk edges of @xmath45 .    [ fig_first ]",
    "( 89,30 )    a=(15,5 ) ( a ) b=(5,15 ) ( b ) c=(5,25 ) ( c ) d=(25,15 ) ( d)@xmath47 ( a , b)@xmath48 ( b , c)@xmath49 ( a , d)@xmath48    e=(44,5 ) ( e ) f=(44,15 ) ( f)@xmath47 g=(44,25 ) ( g ) ( e , f)@xmath48 ( f , g)@xmath49    h=(70,5 ) ( h ) i=(70,15 ) ( i)@xmath47 j=(63,25 ) ( j ) k=(77,25 ) ( k ) l=(84,15 ) ( l ) ( h , i)@xmath48 ( i , j)@xmath49 ( i , k)@xmath49 ( l , k)@xmath49    a _ subtree _ of a tree @xmath45 is a subgraph of @xmath45 containing the start and end vertices , the underlying undirected graph of which is connected .",
    "a _ morphism _",
    "@xmath50 of @xmath38-trees @xmath45 and @xmath51 is a map taking edges to edges and vertices to vertices , such that @xmath52 , @xmath53 and @xmath54 for all edges @xmath20 in @xmath45 , and which maps the start and end vertex of @xmath45 to the start and end vertex of @xmath51 respectively .",
    "morphisms have the expected properties that the composition of two morphisms ( where defined ) is again a morphism , while the restriction of a morphism to a subtree is also a morphism .",
    "a morphism maps the trunk edges of its domain bijectively onto the trunk edges of its image .",
    "an _ isomorphism _ is a morphism which is bijective on both edges and vertices .",
    "the set of all isomorphism types of @xmath38-trees is denoted @xmath55 while the set of isomorphism types of non - trivial @xmath38-trees is denoted @xmath56 .",
    "the set of isomorphism types of idempotent trees is denoted @xmath57 , while the set of isomorphism types of non - trivial idempotent trees is denoted @xmath58 .",
    "much of the time we shall be formally concerned not with trees themselves but rather with isomorphism types .",
    "however , where no confusion is likely , we shall for the sake of conciseness ignore the distinction and implicitly identify trees with their respective isomorphism types .    a _ retraction _ of a tree @xmath45 is an idempotent morphism from @xmath45 to @xmath45 ; its image is a _ retract _ of @xmath45 . a tree @xmath45 is called _ pruned _ if it does not admit a non - identity retraction .",
    "the set of all isomorphism types of pruned trees [ respectively , non - trivial pruned trees ] is denoted @xmath59 [ respectively , @xmath60 . just as with morphisms",
    ", it is readily verified that a composition of retractions ( where defined ) is a retraction , and the restriction of a retraction to a subtree is again a retraction .",
    "a key foundational result from @xcite is the following .",
    "[ prop_pruningconfluent][confluence of retracts ] for each tree @xmath45",
    "there is a unique ( up to isomorphism ) pruned tree which is a retract of @xmath45 .",
    "the unique pruned retract of @xmath45 is called the _ pruning _ of @xmath45 and denoted @xmath61 .",
    "we now define some _ unpruned operations _ on ( isomorphism types of ) trees . if @xmath62 then @xmath63 is ( the isomorphism type of ) the tree obtained by glueing together @xmath45 and @xmath51 , identifying the end vertex of @xmath45 with the start vertex of @xmath51 and keeping all other vertices and all edges distinct .",
    "if @xmath64 then @xmath65 is ( the isomorphism type of ) the tree with the same labelled graph and start vertex of @xmath45 , but with end vertex the start vertex of @xmath45 .",
    "dually , @xmath66 is the isomorphism type of the idempotent tree with the same underlying graph and end vertex as @xmath45 , but with start vertex the end vertex of @xmath45 .",
    "it was shown in @xcite that the unpruned multiplication operation @xmath47 is a well - defined associative binary operation on @xmath55 ; the ( isomorphism type of the ) trivial tree is an identity element for this operation , and @xmath56 forms a subsemigroup .",
    "the maps @xmath67 and @xmath68 are well - defined idempotent unary operations on @xmath55 , and the subsemigroup generated by their images is idempotent and commutative .",
    "we define corresponding _ pruned operations _ on @xmath59 by @xmath69 , @xmath70 and @xmath71 .",
    "these inherit the properties noted above for unpruned operations , and have the additional property that the images of the @xmath16 and @xmath15 operations are composed entirely of idempotent elements .",
    "we recall some more key results from @xcite    [ thm_morphism ] the pruning map @xmath72 is a surjective @xmath17-morphism from the set of isomorphism types of @xmath38-trees under unpruned multiplication , unpruned @xmath73 and unpruned @xmath74 with distinguished identity element to the set of isomorphism types of pruned trees under pruned multiplication , @xmath16 and @xmath15 with distinguished identity element .",
    "[ thm_adequate ] @xmath59 is a free adequate monoid , freely generated by the set @xmath38 of base trees .",
    "[ cor_adequate ] any subset of @xmath59 closed under the operations of pruned multiplication and @xmath15 [ respectively , @xmath16 ] forms a left adequate [ respectively , right adequate ] semigroup under these operations .",
    "if @xmath45 is a tree and @xmath1 is a set of non - trunk edges and vertices of @xmath45 then @xmath75 denotes the largest subtree of @xmath45 ( recalling that a subtree must be connected and contain the start and end vertices , and hence the trunk ) which does not contain any vertices or edges from @xmath1 .",
    "if @xmath76 is a single edge or vertex we write @xmath77 for @xmath78 .",
    "if @xmath79 and @xmath80 are vertices of @xmath45 such that there is a directed path from @xmath79 to @xmath80 then we shall denote by @xmath81 the tree which has the same underlying labelled directed graph as @xmath45 but start vertex @xmath79 and end vertex @xmath80 .",
    "if @xmath45 has start vertex @xmath48 and end vertex @xmath49 then we define @xmath82 and @xmath83 where applicable .",
    "in @xcite we saw that the monoids @xmath59 and semigroups @xmath84 are precisely the free objects in the quasivarieties of adequate monoids and semigroups respectively . in this section ,",
    "we prove the main results of the present paper by establishing a corresponding result for left adequate and right adequate monoids and semigroups .",
    "the spirit and outline of the proof are similar to that of @xcite , but the technical details are in places rather different .",
    "a @xmath38-tree @xmath45 is called _ left adequate _ if for each vertex @xmath80 of @xmath45 there is a directed path from the start vertex to @xmath80 , or equivalently , if every non - trunk edge in @xmath45 is orientated away from the trunk .",
    "the sets of isomorphism types of left adequate @xmath38-trees and left adequate pruned @xmath38-trees are denoted @xmath85 and @xmath86 respectively .",
    "dually , a @xmath38-tree @xmath45 is called _ right adequate _ if for each vertex @xmath80 of @xmath45 there is a directed path from @xmath80 to the end vertex , or equivalently , if every non - trunk edge in @xmath45 is orientated towards the trunk . the sets of isomorphism types of right adequate @xmath38-trees and right adequate pruned @xmath38-trees are denoted @xmath87 and @xmath88 respectively .",
    "returning to our examples in figure  1 , the left - hand and middle tree are left adequate , while the right - hand tree is not , because of the presence of the rightmost edge which is orientated towards the start vertex .",
    "none of the trees shown are right adequate .",
    "from now on we shall work with left adequate trees and left adequate monoids , but of course duals for all of our results apply to right adequate trees and right adequate monoids .",
    "[ prop_leftclosed ] the set @xmath85 of left adequate @xmath38-trees contains the trivial tree and the base trees , and is closed under unpruned multiplication , unpruned @xmath74 , and taking retracts .",
    "it follows immediately from the definitions that the trivial tree and base trees are left adequate .",
    "let @xmath45 and @xmath51 be left adequate trees with start vertices @xmath79 and @xmath80 respectively .",
    "then @xmath79 is the start vertex of @xmath63 , and @xmath89 has a directed path from @xmath79 to @xmath80 .",
    "now for any vertex @xmath90 , either @xmath91 is a vertex of @xmath45 or @xmath91 is a vertex of @xmath51 . in the former case",
    ", there is a directed path from @xmath79 to @xmath91 in @xmath45 , and hence in @xmath63 . in the latter case",
    ", there is a directed path from @xmath80 to @xmath91 in @xmath51 , and hence in @xmath63 , which composed with the path from @xmath79 to @xmath80 yields a directed path from @xmath79 to @xmath91 .",
    "thus , @xmath63 is left adequate .",
    "consider next the tree @xmath65 .",
    "this has the same underlying directed graph as @xmath45 and the same start vertex , so it is immediate that it is left adequate .",
    "finally , let @xmath92 be a retraction with image @xmath51 a subtree of @xmath45 .",
    "now for any vertex @xmath91 in @xmath51 there is a directed path from the start vertex of @xmath45 to @xmath91 in @xmath45 ; since @xmath51 is a subtree it is connected and has the same start vertex as @xmath45 , so this must also be a path in @xmath51 .",
    "thus , @xmath51 is left adequate .",
    "[ prop_leftgenerators ] the set @xmath86 of pruned left adequate trees is generated as a @xmath93-algebra ( with operations pruned multiplication and pruned @xmath15 and a distinguished identity element ) by the set @xmath38 of base trees .",
    "the proof is similar to the corresponding one in @xcite , so we describe it only in outline .",
    "let @xmath94 denote the @xmath93-subalgebra of @xmath86 generated by @xmath38 .",
    "we show that every left adequate @xmath38-tree is contained in @xmath94 by induction on number of edges .",
    "the tree with no edges is the identity element of @xmath86 and so by definition is contained in @xmath94 .",
    "now suppose for induction that @xmath95 has at least one edge , and that every tree in @xmath86 with strictly fewer edges lies in @xmath94 .",
    "if @xmath45 has a trunk edge then let @xmath96 be the start vertex of @xmath45 , @xmath20 be the trunk edge incident with @xmath96 , @xmath97 and @xmath98 .",
    "let @xmath99 and @xmath100",
    ". then @xmath51 and @xmath101 are pruned trees with strictly fewer edges than @xmath45 , and so by induction lie in @xmath94 .",
    "now clearly from the definitions we have @xmath102 , and since @xmath45 is pruned using theorem  [ thm_morphism ] we have @xmath103 so that @xmath104 as required .",
    "if , on the other hand , @xmath45 has no trunk edges then let @xmath20 be any edge incident with the start vertex @xmath96 , and suppose @xmath20 has label @xmath48 .",
    "since the tree is left adequate , @xmath20 must be orientated away from @xmath96 ; let @xmath98 .",
    "we define @xmath99 and @xmath105 , and a similar argument to that above shows that @xmath106 where @xmath107 , so that again @xmath104 .",
    "now suppose @xmath108 is a left adequate monoid and @xmath109 is a function . our objective is to show that there is a unique @xmath93-morphism from @xmath86 to @xmath108 which extends @xmath110 . following the strategy of @xcite , we begin by defining a map @xmath111 from the set of idempotent left adequate @xmath38-trees to the set @xmath112 of idempotents in the monoid @xmath108 .",
    "let @xmath45 be an idempotent left adequate @xmath38-tree with start vertex @xmath80 . if @xmath45 has no edges then we define @xmath113 .",
    "otherwise , we define @xmath114 recursively , in terms of the value of @xmath111 on left adequate trees with strictly fewer edges than @xmath45 , as follows .",
    "let @xmath115 be the set of edges in @xmath45 which start at the start vertex @xmath80 and define @xmath116^+.\\end{aligned}\\ ] ] it is easily seen that each @xmath117 is a left adequate tree with strictly fewer edges than @xmath45 , so this gives a valid recursive definition of @xmath111 .",
    "moreover , the product is non - empty and because idempotents commute in the left adequate monoid @xmath108 , its value is idempotent and independent of the order in which the factors are multiplied . note that if the left adequate monoid @xmath108 is in fact adequate then the function @xmath111 defined here takes the same values on left adequate trees as the corresponding map defined in @xcite .",
    "[ prop_lefttausplit ] let @xmath45 be an idempotent left adequate tree with start vertex @xmath80 , and suppose @xmath118 and @xmath119 are subtrees of @xmath45 such that @xmath120 and @xmath121",
    ". then @xmath122 .",
    "clearly we have @xmath123 , and for @xmath124 and @xmath125 we have @xmath126 so it follows that @xmath127^+ = [ \\chi(\\lambda(e ) ) \\tau({{x_i|^{\\omega(e)}_{\\omega(e ) } } \\setminus e})]^+.\\ ] ] the claim now follows directly from the definition of @xmath111 .",
    "[ cor_lefttausplit ] let @xmath45 be an idempotent left adequate tree with start vertex @xmath80 , and @xmath20 an edge incident with @xmath80 .",
    "then @xmath128^+.\\ ] ]    let @xmath129 , let @xmath1 be the set of edges in @xmath45 which are incident with @xmath80 and let @xmath130 be the maximum subtree of @xmath45 containing @xmath20 but none of the other edges incident with @xmath80 .",
    "now clearly we have @xmath131 so by the definition of @xmath111 we have @xmath132^+.\\ ] ] we also have @xmath120 and @xmath121 so by proposition  [ prop_lefttausplit ] @xmath133^+\\ ] ] as required .",
    "next we define a map @xmath134 , from the set of isomorphism types of left adequate @xmath38-trees to the left adequate monoid @xmath108 .",
    "suppose a tree @xmath45 has trunk vertices @xmath135 in sequence .",
    "for @xmath136 let @xmath137 be the label of the edge from @xmath138 to @xmath139 .",
    "for @xmath140 let @xmath141 .",
    "we define @xmath142 clearly the value of @xmath143 depends only on the isomorphism type of @xmath45 so @xmath143 is indeed a well - defined map from @xmath85 to @xmath108 .",
    "again , if @xmath108 is right adequate as well as left adequate then the function @xmath143 takes the same value on left adequate trees as its counterpart in @xcite .",
    "[ prop_leftrhosplit ] let @xmath45 be a left adequate tree with trunk vertices @xmath135 in sequence , where @xmath144 .",
    "let @xmath145 be the label of the edge from @xmath96 to @xmath146 .",
    "then @xmath147    let @xmath148 be as in the definition of @xmath143 , so that @xmath149 it follows straight from the definition that @xmath150",
    "so we have @xmath151 as required .",
    "[ prop_leftrhounprunedmorphism ] the map @xmath134 is a morphism of @xmath93-algebras .",
    "let @xmath45 and @xmath51 be trees , say with trunk vertices @xmath152 and @xmath135 in sequence respectively .",
    "for each @xmath153 let @xmath137 be the label of the edge from @xmath154 to @xmath155 , and for each @xmath136 let @xmath156 be the label of the edge from @xmath138 to @xmath139",
    ". for each @xmath157 let @xmath158 and similarly for each @xmath140 define @xmath159 .",
    "consider now the unpruned product @xmath63 .",
    "it is easily seen that for @xmath160 we have @xmath161 while for @xmath162 we have @xmath163 considering now the remaining trunk vertex @xmath164 of @xmath63 we have @xmath165 by proposition  [ prop_lefttausplit ] and the definition of unpruned multiplication we have @xmath166 . so using the definition of @xmath143 we have @xmath167",
    "next we claim that @xmath168 .",
    "we prove this by induction on the number of trunk edges in @xmath45 . if @xmath45 has no trunk edges then @xmath169 and so using the fact that @xmath170 is fixed by the @xmath15 operation in @xmath108 we have @xmath171 now suppose for induction that @xmath45 has at least one trunk edge and that the claim holds for trees with strictly fewer trunk edges .",
    "recall that @xmath172 and let @xmath173 .",
    "now @xmath174^+ & \\text { ( by corollary~\\ref{cor_lefttausplit } ) } \\\\ & = \\tau(x_0 ) [ \\chi(a_1 ) \\rho(z^{(+)})]^+   & \\text { ( by the definition of $ \\rho$ ) } \\\\ & = \\tau(x_0 ) [ \\chi(a_1 ) \\rho(z)^+]^+   & \\text { ( by the inductive hypothesis ) } \\\\ & = \\tau(x_0 ) [ \\chi(a_1 ) \\rho(z)]^+ & \\text { ( by proposition~\\ref{prop_adequatebasics}(ii ) ) } \\\\ & = [ \\tau(x_0 ) \\chi(a_1 ) \\rho(z)]^+ & \\text { ( by proposition~\\ref{prop_adequatebasics}(iv ) ) } \\\\ & = \\rho(x)^+ & \\text { ( by proposition~\\ref{prop_leftrhosplit})}\\end{aligned}\\ ] ] as required .",
    "finally , it follows directly from the definition that @xmath143 maps the identity element in @xmath85 ( that is , the isomorphism type of the trivial tree ) to the identity of @xmath108 , and so is a @xmath93-morphism .",
    "so far , we have closely followed the proof strategy from @xcite , but at this point it becomes necessary to diverge .",
    "this is because the arguments employed in the two - sided case involve operations on trees which do not preserve left adequacy , and hence use the @xmath16 operation in the monoid @xmath108 even when starting with left adequate trees .",
    "instead , the following lemma about left adequate trees ( which fails for general trees ) allows us to follow an alternative inductive strategy .",
    "[ lemma_leftrestriction ] let @xmath175 be a morphism of left adequate trees , let @xmath20 be an edge in @xmath45 and let @xmath80 be a vertex such that there is a directed path from @xmath42 to @xmath80 .",
    "then @xmath176    let @xmath177 and @xmath178 .",
    "notice first that the image @xmath179 is connected and contains @xmath180 .",
    "since the underlying undirected graph of @xmath51 is a tree , this means that @xmath179 is either contained in @xmath181 as required , or contains the edge @xmath182 ; suppose for a contradiction that the latter holds , say @xmath183 for some edge @xmath21 in @xmath184 .",
    "now since @xmath45 is left adequate , there must be a directed path from the start vertex to @xmath185 .",
    "but again @xmath20 is orientated away from start vertex , and @xmath185 is in @xmath184 , which is a connected component of @xmath45 including @xmath42 but not @xmath20 , so this path must clearly pass through the edge @xmath20 .",
    "let @xmath186 denote the suffix of this path which leads from @xmath42 to @xmath185 .",
    "then @xmath187 is a non - empty directed path in @xmath51 from @xmath188 to @xmath189 , which contradicts the fact that @xmath51 is a directed tree .",
    "[ lemma_lefttauabsorb ] suppose @xmath175 is a morphism of idempotent left adequate trees",
    ". then @xmath190 .",
    "we use induction on the number of edges in @xmath45 .",
    "if @xmath45 has no edges then we have @xmath113 so the result is clear .",
    "now suppose @xmath45 has at least one edge and for induction that the result holds for trees @xmath45 with strictly fewer edges . by the definition of @xmath111 we have @xmath116^+\\end{aligned}\\ ] ] while @xmath191^+.\\end{aligned}\\ ] ] suppose now that @xmath192 . then since @xmath193 is a morphism , the edge @xmath182 lies in @xmath194 .",
    "we claim that the factor corresponding to @xmath20 in the above expression for @xmath114 is absorbed into the corresponding factor for @xmath182 in the above expression for @xmath195 .",
    "let @xmath196 and @xmath197 .",
    "by lemma  [ lemma_leftrestriction ] , the morphism @xmath193 restricts to a morphism @xmath198 .",
    "since @xmath184 has strictly fewer edges than @xmath45 , the inductive hypothesis tells us that @xmath199 .",
    "now by proposition  [ prop_adequatebasics](vi ) we have @xmath200^+ \\ [ \\chi(\\lambda(e ) ) \\tau(y')]^+ \\ = \\ [ \\chi(\\lambda(e ) ) \\tau(y')]^+.\\ ] ] as required .",
    "[ cor_lefttausubgraph ] let @xmath45 be a subtree of an idempotent left adequate tree @xmath51 . then @xmath190 .",
    "the embedding of @xmath45 into @xmath51 satisfies the conditions of lemma  [ lemma_lefttauabsorb ] .",
    "[ cor_lefttauretract ] let @xmath51 be a retract of an idempotent left adequate tree @xmath45",
    ". then @xmath201 .",
    "let @xmath202 be a retract with image @xmath51 .",
    "since @xmath203 is a morphism , lemma  [ lemma_lefttauabsorb ] tells us that @xmath204 .",
    "but since @xmath205 is a subgraph of @xmath45 , corollary  [ cor_lefttausubgraph ] yields @xmath206 .",
    "[ lemma_leftrhosplit ] let @xmath45 be a left adequate tree with trunk vertices @xmath135 in sequence , where @xmath144 .",
    "let @xmath145 be the label of the edge from @xmath96 to @xmath146 .",
    "then @xmath207    we use induction on the number of trunk edges in @xmath45 .",
    "let @xmath208 .",
    "clearly if @xmath45 has no trunk edges then we have @xmath209 and from the definition of @xmath143 we have @xmath210 , so the claim reduces to the fact that @xmath211 is idempotent . now suppose @xmath45 has at least one trunk edge and that the claim holds for @xmath45 with strictly fewer trunk edges .",
    "let @xmath212 , let @xmath213 and let @xmath214 .",
    "let @xmath145 be the label of the edge from @xmath96 to @xmath146 . by corollary  [ cor_lefttausplit ]",
    "we have @xmath215^+ \\tau(x_0).\\ ] ] now by proposition  [ prop_leftrhosplit ] we deduce that @xmath216 . also , by the inductive hypothesis we have @xmath217 .",
    "putting these observations together we have @xmath218^+ \\ \\tau(x_0 ) \\right ) \\   \\left ( \\tau(x_0 ) \\",
    "\\chi(a_1 ) \\",
    "\\rho(y ) \\right ) \\\\ & = [ \\chi(a_1 ) \\tau(y')]^+ \\",
    "\\tau(x_0 ) \\",
    "\\chi(a_1 ) [ \\tau(y ' ) \\rho(y ) ] \\\\ & = \\tau(x_0 ) \\ [ \\chi(a_1 ) \\tau(y')]^+ \\ [ \\chi(a_1 ) \\tau(y ' ) ] \\ \\rho(y ) \\\\ & = \\tau(x_0 ) \\",
    "\\chi(a_1 ) \\ \\tau(y ' ) \\",
    "\\rho(y ) \\\\ & = \\tau(x_0 ) \\",
    "\\chi(a_1 ) \\",
    "\\rho(y ) \\\\ & = \\rho(x)\\end{aligned}\\ ] ] as required .",
    "[ cor_leftrhobig ] let @xmath45 be a left adequate tree with trunk vertices @xmath135 in sequence , where @xmath144 .",
    "let @xmath145 be the label of the edge from @xmath96 to @xmath146 .",
    "then @xmath219    we prove the first equality , the rest of the claim being dual .",
    "we have @xmath220    [ prop_leftrhopruning ] let @xmath45 be a left adequate tree",
    ". then @xmath221 .",
    "let @xmath202 be a retraction with image @xmath61 .",
    "suppose @xmath45 has trunk vertices @xmath135 .",
    "for @xmath136 let @xmath137 be the label of the edge from @xmath138 to @xmath139 .",
    "we prove the claim by induction on the number of trunk edges in @xmath45 .",
    "if @xmath45 has no trunk edges then by the definition of @xmath143 and corollary  [ cor_lefttauretract ] we have @xmath222    next suppose that @xmath45 has at least one trunk edge , that is , that @xmath144 .",
    "let @xmath223 .",
    "then by lemma  [ lemma_leftrestriction ] we have @xmath224 and , since @xmath203 is idempotent with image @xmath61 , the converse inclusion also holds and we have @xmath225 moreover , by lemma  [ lemma_leftrestriction ] again , the retraction @xmath203 restricts to a morphism @xmath226 .",
    "clearly this morphism must also be a retraction , and @xmath101 has strictly fewer edges than @xmath45 , so by the inductive hypothesis and proposition  [ prop_pruningconfluent ] we have @xmath227 it also follows easily from definitions that @xmath228 now @xmath229    now let @xmath230 be the restriction of @xmath143 to the set of ( isomorphism types of ) pruned left adequate trees .",
    "[ cor_leftrhoprunedmorphism ] the function @xmath231 is a @xmath93-morphism from @xmath86 ( with pruned operations ) to the left adequate monoid @xmath108 .    for any",
    "@xmath232 by theorem  [ thm_morphism ] and propositions  [ prop_leftrhounprunedmorphism ] and [ prop_leftrhopruning ] we have @xmath233 and similarly @xmath234 finally , that @xmath231 maps the identity of @xmath86 to the identity of @xmath108 is immediate from the definitions .",
    "we are now ready to prove the main results of this paper , which give a concrete description of the free left adequate monoid and free right adequate monoid on a given generating set .",
    "[ thm_onesidedmonoid ] let @xmath38 be a set .",
    "then @xmath86 [ @xmath88 ] is a free object in the quasivariety of left [ right ] adequate monoids , freely generated by the set @xmath38 of base trees .",
    "we prove the claim in the left adequate case , the right adequate case being dual . by corollary  [ cor_adequate ] ,",
    "@xmath86 is a left adequate monoid .",
    "now for any left adequate monoid @xmath108 and function @xmath109 , define @xmath230 as above . by corollary  [ cor_leftrhoprunedmorphism ] , @xmath231 is a @xmath93-morphism , and it is immediate from the definitions that @xmath236 for every @xmath237 , so that @xmath231 extends @xmath110 .",
    "finally , by proposition  [ prop_leftgenerators ] , @xmath38 is a @xmath93-algebra generating set for @xmath86 ; it follows that the morphism @xmath231 is uniquely determined by its restriction to the set @xmath38 of base trees , and hence is the unique morphism with the claimed properties .",
    "combining with proposition  [ prop_monoidsemigroup ] we also obtain immediately a description of the free left adequate and free right adequate semigroups .",
    "[ thm_onesidedsemigroup ] let @xmath38 be a set .",
    "then the @xmath238 [ @xmath239 is a free object in the quasivariety of left [ right ] adequate semigroups , freely generated by the set @xmath38 of base trees .",
    "we also have the following relationship between free adequate , free left adequate and free right adequate semigroups and monoids .    [ thm_embedding ]",
    "let @xmath38 be a set .",
    "the free left adequate semigroup [ monoid ] on @xmath38 and free right adequate semigroup [ monoid ] on @xmath38 embed into the free adequate semigroup [ monoid ] on @xmath38 as the @xmath0-subalgebras [ @xmath93-subalgebras ] generated by the free generators under the appropriate operations .",
    "their intersection is the free semigroup [ monoid ] on @xmath38 .",
    "in this section we collect together some remarks on and consequences of the results in section  [ sec_leftfas ] and their proofs .    in a left adequate tree , the requirement that there be a path from the start vertex to every other vertex uniquely determines the orientation on every edge in the tree .",
    "conversely , every edge - labelled _ undirected _ tree with given start and end vertex admits an orientation on the edges which makes it left adequate . it might superficially seem attractive , then , to identify elements of @xmath85 with _ undirected _ edge - labelled trees with distinguished start and end vertices .",
    "however , the reader may easily convince herself that not every retraction of such a tree defines a retraction of the corresponding directed tree .",
    "so in order to define pruning and multiplication it would be necessary to reinstate the orientation on the edges , which negates any advantage in dropping the orientation in the first place .",
    "the construction in section  [ sec_leftfas ] of a morphism from @xmath86 to a monoid @xmath108 depends only on the facts that @xmath108 is associative with commuting idempotents , and that the @xmath15 operation is idempotent with idempotent and commutative image and satisfies the six properties given in the case of left adequate semigroups by proposition  [ prop_adequatebasics ] . so",
    "a free left adequate semigroup is also free in any class of @xmath93-algebras which contains it and satisfies these conditions .",
    "this includes in particular the class of _ left ehresmann semigroups_.    as observed in @xcite , the classes of monoids we have studied can be generalised to give corresponding classes of small categories",
    ". a natural extension of our methods can be used to describe the free left adequate and free right adequate category generated by a given directed graph .",
    "just as in the previous remark , the free left adequate category will also be the free left ehresmann category .",
    "left ehresmann categories are generalisations of the _ restriction categories _ studied by cockett and lack @xcite , which in the terminology of semigroup theory are _ weakly left e - ample _ categories @xcite .",
    "the generalisation of our results to categories thus relates to our main results in the same way that the description of the free restriction category on a graph given in @xcite relates to the descriptions of free left ample monoids given by fountain , gomes and gould @xcite .    to conclude",
    ", we note some properties of free left and right adequate semigroups and monoids , which are obtained by combining theorem  [ thm_embedding ] with results about free adequate semigroups and monoids which were obtained in @xcite .",
    "first of all , since each finitely generated free left adequate or free right adequate semigroup embeds into a finitely generated adequate semigroup we have the following .",
    "the word problem for any finitely generated free left or right adequate semigroup or monoid is decidable .",
    "as in the two - sided case , the exact computational complexity of the word problem remains unclear and deserves further study .",
    "recall that an equivalence relation @xmath240 is defined on any semigroup by @xmath241 if and only if @xmath48 and @xmath49 generate the same principal two - sided ideal .",
    "a semigroup is called _ @xmath240-trivial _ if no two elements generate the same principal two - sided ideal .    [ thm_jtrivial ]",
    "every free left adequate or free right adequate semigroup or monoid is @xmath240-trivial .",
    "if distinct left [ right ] adequate @xmath38-trees @xmath45 and @xmath51 are @xmath240-related in @xmath86 [ @xmath88 ] then they are @xmath240-related in the free adequate monoid @xmath59 ; but we saw in @xcite that @xmath59 is @xmath240-trivial .    no free left adequate or free right adequate semigroup or monoid on a non - empty set is finitely generated as a semigroup or monoid .",
    "we saw in @xcite that finite subsets of @xmath59 generate subsemigroups whose trees have a bound on the maximum distance of any vertex from the trunk .",
    "since @xmath86 and @xmath88 are subsemigroups containing trees with vertices arbitrarily far from the trunk , it follows that they can not even be contained in finitely generated subsemigroups of @xmath59 , let alone themselves be finitely generated .",
    "this research was supported by an rcuk academic fellowship .",
    "the author would like to thank john fountain and victoria gould for their encouragement and advice , all the authors of @xcite for allowing him access to their unpublished work and work in progress , and mark lawson for alerting him to the existence of work on free restriction categories @xcite ."
  ],
  "abstract_text": [
    "<S> recent research of the author has given an explicit geometric description of free ( two - sided ) adequate semigroups and monoids , as sets of labelled directed trees under a natural combinatorial multiplication . </S>",
    "<S> in this paper we show that there are natural embeddings of each free right adequate and free left adequate semigroup or monoid into the corresponding free adequate semigroup or monoid . </S>",
    "<S> the corresponding classes of trees are easily described and the resulting geometric representation of free left adequate and free right adequate semigroups is even easier to understand than that in the two - sided case . </S>",
    "<S> we use it to establish some basic structural properties of free left and right adequate semigroups and monoids .    </S>",
    "<S> mark kambites    school of mathematics ,  university of manchester , + manchester m13 9pl ,  england .    ` </S>",
    "<S> mark.kambites@manchester.ac.uk ` + </S>"
  ]
}
{
  "article_text": [
    "the determination of spin - glass ground states has raised the interest of both physicists and computer scientists . for an introduction",
    "we refer to [ ] . on the one hand , an analysis of the ground - state properties sheds light on the ruling physics of the system . on the other hand ,",
    "several different algorithms have been developed and used for the ground - state determination of different models .",
    "for the two - dimensional edwards - anderson model [ ] ( ea ) with free boundaries in at least one direction , ground states can be determined exactly with fast algorithms .",
    "in fact , the problem is solvable in time bounded by a polynomial in the size of the input .",
    "the latter can be achieved by a transformation to a well known graph theoretical problem the minimum - weight matching problem , for which efficient implementations exist . for general non - planar or three- or higher - dimensional lattices , however , calculating exact ground states",
    "is np - hard [ ] . loosely speaking ,",
    "this means we can not expect to be able to design a polynomial - time solution algorithm . in practice",
    ", one can use , e.g. branch - and - cut algorithms [ ] .    in this work ,",
    "we focus on the polynomially solvable case of two - dimensional lattices with free boundaries in at least one direction .",
    "we first review and compare the main known approaches which are those of bieche et al . [ ] and of barahona [ ] . then we present the approach inspired by kasteleyn [ ] .",
    "all method basically follow the same idea : an associated graph is constructed in which a minimum - weight perfect matching is determined that is used to construct an exact ground state .",
    "differences occur in the constructed associated graph .",
    "it turns out that the approach inspired by kasteleyn is the most favorable .",
    "in fact , using the latter method , we can determine exact ground states for lattice sizes up to @xmath0 , while the possible sizes computed earlier with heuristic variants of the approach of bieche et al . were considerably smaller . in a forthcoming article [ ]",
    ", we will analyze the physics of the system .",
    "kasteleyn cities were recently also used by thomas and middleton [ ] .",
    "while focussing on extended ground states on the torus , they show that the kasteleyn - city approach can be successfully used in the planar case , too . furthermore , they compared their implementation with an implementation of barahona s method .",
    "it turned out that the approach with kasteleyn cities is less memory consumptive and faster .",
    "apart from this recent work , we are not aware of other computational studies using barahona s method .",
    "we show how to either prove correctness of heuristically determined ground states or how to correct them using linear programming . despite the fact that this is fast ,",
    "it is still advantageous to use the method based on kasteleyn cities .",
    "finally , we evaluate the quality of the solutions generated with heuristic variants of the bieche et al .",
    "approach .",
    "the outline of the article is as follows . in section [ sec : model ] , we introduce the model . in section [ sec : prelim ] we introduce definitions necessary for the literature review in section [ sec : algorithms ] .",
    "finally , we report the results in section [ sec : compresults ] .",
    "in the edwards - anderson model @xmath1 spins are placed on a lattice .",
    "we focus on quadratic ( @xmath2 ) lattices with free boundary conditions in at least one direction .",
    "toric boundary conditions may be applied to at most one lattice axis .",
    "the hamiltonian of the system is @xmath3 where the sum runs over all nearest - neighbor sites .",
    "each spin @xmath4 is a dynamical variable which has two allowed states , @xmath5 and @xmath6 .",
    "the coupling strengths @xmath7 between spins @xmath8 are independent identically distributed random variables following some probability distribution .",
    "the concentration of anti - ferromagnetic ( @xmath9 ) and ferromagnetic bonds ( @xmath10 ) depends on the underlying distribution .",
    "the gaussian and the bimodal @xmath11 distributions are often used . a spin configuration attaining the global minimum of the energy function @xmath12",
    "is called a ground state .",
    "in this section , we briefly summarize some basic definitions from graph theory .",
    "for further details , we refer to [ ] and the references therein .",
    "we associate a spin - glass instance with a _ graph _ @xmath13 with vertices @xmath14 ( spin sites ) and edges @xmath15 ( bonds ) .",
    "the edge set consists of unordered pairs @xmath16 , with @xmath17 .",
    "more specifically , for two - dimensional @xmath18 lattices with free boundaries , the graph is called a _ grid graph _ and is denoted by @xmath19 . in case periodic boundaries are present in one direction , we call the graph a _ half - torus _ or a _ ring_. the _ degree _ @xmath20 of a vertex @xmath21 is the number of edges @xmath22 incident at @xmath21 . a",
    ", @xmath23 , is a sequence of vertices such that @xmath24 are edges of @xmath25 and the @xmath26 are distinct .",
    "a closed path @xmath27 is a _",
    "cycle_.    in many applications a rational cost or a weight @xmath28 is associated with an edge @xmath29 .",
    "let @xmath13 be a weighted graph . for each ( possibly empty ) subset @xmath30 ,",
    "a _ cut _ @xmath31 in @xmath25 is the set of all edges with one vertex in @xmath32 and the other in @xmath33 .",
    "the weight of a cut is given by @xmath34 .",
    "a _ minimum cut _ ( min - cut ) asks for a cut @xmath31 with minimum weight among all vertex sets @xmath30 .",
    "let @xmath35 denote the _ complete graph _ with @xmath36 vertices and edge set @xmath37 .",
    "a _ subgraph _ of @xmath25 is a graph @xmath38 such that every vertex of @xmath38 is a vertex of @xmath25 , and every edge of @xmath38 is an edge in @xmath25 also .",
    "@xmath13 is called _ eulerian _ if and only if each vertex of @xmath25 has even degree .",
    "a graph @xmath25 is _ planar _ if it can be drawn in the plane in such a way that no two edges meet each other except at a vertex .",
    "any such drawing is called a _ planar drawing_. any planar drawing of a graph @xmath25 divides the plane into regions , called _",
    "one of these faces is unbounded , and called the _ outer face _ or _ unbounded face_. a _ geometric dual graph _ [ ] @xmath39 of a connected planar graph @xmath25 is a graph @xmath39 with the property that it has a vertex for each face of @xmath25 and an edge for each edge touching two neighboring faces in @xmath25 .",
    "a _ matching _ in a graph @xmath13 is a set of edges @xmath40 such that no vertex of @xmath25 is incident with more than one edge in @xmath41 .",
    "a matching @xmath41 is _ perfect _ if every vertex is incident to an edge in the matching .",
    "a maximum matching is a matching of maximum weight @xmath42 . solving the perfect matching problem on general graphs in time bounded by a polynomial in the size of",
    "the input remained an elusive goal for a long time until edmonds [ ] gave the first polynomial - time algorithm the blossom algorithm .",
    "more details about matching theory can be found in [ ] .",
    "bieche et al .",
    "[ ] showed that the problem of finding a ground state for two - dimensional planar ising spin glasses can be transformed to a well known graph theoretical problem  the minimum - weight perfect matching problem ( mwpm ) on general graphs .",
    "the method follows the scheme shown in algorithm [ alg : scheme ] in which an optimum matching is used to construct a spin configuration minimizing the total energy .",
    "planar grid graph @xmath19 spin configuration @xmath43 minimizing the total energy @xmath12 construct an appropriate dual graph @xmath44 calculate a minimum - weight perfect matching @xmath41 in @xmath44 use @xmath41 to compute a spin configuration @xmath43 and the corresponding energy @xmath12 @xmath43 and @xmath12    most commonly used exact methods , like the approaches of bieche et al .",
    "[ ] and barahona [ ] , follow this scheme . in the following , we briefly summarize these two methods . afterwards",
    ", we present a method following the construction introduced by kasteleyn [ ] .",
    "more details can be found in the recent tutorial [ ] on algorithms for computing ground states in two - dimensional ising spin glasses .",
    "bieche et al .",
    "[ ] consider the weighted grid graph @xmath45 where each vertex @xmath46 is assigned an initial spin value @xmath47 .",
    "each edge @xmath48 receives a weight @xmath49 , cf .",
    "[ fig:4x4grid ] . often , the trivial configuration @xmath50 is used .     grid graph .",
    "dashed lines indicate negative edge weights ( color online ) .",
    "[ fig:4x4grid ] ]    an instance can not only be described in terms of spins and bonds , but also by _ frustrated plaquettes _ and _ paths of broken edges_. plaquettes consist of the 4-cycles in the graph .",
    "an edge is said to be satisfied if it attains its minimal weight ( @xmath51 ) , otherwise it is called unsatisfied .",
    "a plaquette is frustrated if there is no spin configuration satisfying all edges . in this case",
    "the plaquette has an odd number of negative edges . for the remainder let @xmath52 be the set of frustrated plaquettes in @xmath19 and @xmath53 the set of all plaquettes in @xmath19 .",
    "bieche et al .",
    "identify the frustrated plaquettes as vertices of a graph , @xmath54 with @xmath55 and @xmath56 .",
    "each edge @xmath57 is assigned a weight @xmath28 equal to the sum of the absolute weights of the edges in @xmath19 crossed by a minimum path connecting @xmath58 with @xmath59 .",
    "figure [ fig : bieche_dual ] shows the graph @xmath60 for the grid graph of figure [ fig:4x4grid ] .",
    "the underlying dual graph is shown in figure [ fig:4x4dual ] .     of the grid graph shown in fig .",
    "[ fig:4x4grid ] .",
    "continuous edges indicate distance @xmath61 between vertices , and dotted edges indicate distance @xmath62 ( color online ) .",
    "[ fig : bieche_dual ] ]     of the grid graph shown in fig .",
    "[ fig:4x4grid ] .",
    "continuous edges indicate distance @xmath61 between vertices , and dotted edges indicate distance @xmath62 ( color online ) .",
    "[ fig : bieche_dual ] ]    it is easy to see that minimizing the sum of the weights of unsatisfied edges connecting frustrated plaquettes yields a spin configuration of minimum energy .",
    "the latter is achieved by determining a minimum - weight perfect matching in @xmath60 . finding a ground state",
    "is thus reduced to finding a minimum - weight perfect matching @xmath41 of the graph @xmath60 , and its energy is given as : @xmath63 for a detailed description of this method we refer to [ ] .      the approach of bieche et al .",
    "is simple and intuitive , but comprised two major practical obstacles .",
    "first of all , in order to obtain the dual edge weights , one has to calculate shortest paths in @xmath39 between all pairs of vertices .",
    "although this can be done in time and space bounded by a polynomial in the size of the input , the calculations can take long in practice or require a large amount of memory .",
    "equipped with the weights , one can construct the complete graph @xmath60 of frustrated plaquettes .",
    "treatable system sizes are practically limited by the number of edges present in @xmath60 .",
    "assuming 32 bits for representing an edge , one needs nearly 4 gb of memory just for representing @xmath64 for a @xmath65 grid graph , assuming 50% of the plaquettes are frustrated . for a @xmath66 grid graph ,",
    "almost 12 gb of memory are necessary , which goes beyond the hardware resources available in ordinary modern computers .      for @xmath11",
    "distributed instances , one can obtain the length of the shortest paths directly without shortest paths calculations .",
    "for this , we project the geometric dual graph @xmath39 on the plane so that each vertex @xmath21 is provided with definite coordinates @xmath67 preserving the distance function using rectilinear edges .",
    "different vertices are assigned to different coordinates .",
    "then the length of paths between @xmath68 and @xmath69 , @xmath70 ( with @xmath71 ) traversing only through the grid graph @xmath19 without crossing its border , is given as the manhattan distance @xmath72 .",
    "this value is to be compared with the length of the path passing through the outer face @xmath73 , @xmath74 .",
    "the weight of this path is given as @xmath75 .",
    "the shortest path from @xmath68 to @xmath69 is the shorter of the two . in a half - torus graph",
    ", analogous calculations can be performed .",
    "barahona [ ] constructs the geometric dual graph that contains a vertex for each plaquette and edges in case the corresponding two plaquettes share an edge . here",
    "the outer face is also interpreted as a plaquette . in formulas ,",
    "@xmath76 of @xmath19 , where @xmath77 and @xmath78 .",
    "each dual edge is assigned a weight according to the _ absolute _ weight of the edge in @xmath19 crossed by the dual edge .",
    "vertices @xmath79 are called _ odd _ if they represent a frustrated plaquette , otherwise _",
    "even_.    subsequently , the graph @xmath39 is transformed into a graph @xmath80 . in order to do this ,",
    "first every vertex @xmath79 with @xmath81 is expanded to @xmath82 copies of degree @xmath83 .",
    "any even vertex remains even , expanding an odd vertex makes one of its copies ( arbitrarily ) odd and the others even . from now on ,",
    "one works with vertices of degree 3 only .",
    "next , each vertex is transformed to a @xmath84 subgraph : each edge incident to an even vertex is replaced by an intermediate vertex and two edges . at most two new vertices are inserted for each edge connecting two even vertices .",
    "original edges keep their weight , new edges obtain weight zero . for the details , we refer to [ ] .",
    "on @xmath80 a mwpm is computed .",
    "any even vertex has an even number ( including zero ) of outgoing  matching edges , however , any odd vertex has an odd count of those edges .",
    "after the matching is calculated , the afore expanded vertices are shrunken , and the remaining matching edges raise shortest paths connecting frustrated plaquettes .",
    "as the total length of the induced paths is minimal among all possible paths , the induced set of unsatisfied edges has minimum weight .",
    "following bieche , this corresponds to a configuration of minimum weight .",
    "barahona s transformation consists of two steps and is a bit more involved than the method of bieche et al . for a quadratic @xmath85 grid graph with free boundary conditions ,",
    "@xmath80 has @xmath86 - 12 - b_{odd}$ ] many vertices , where @xmath87 is the number of odd vertices in the graph @xmath39 .",
    "the graph @xmath80 is sparse as each vertex in @xmath80 has degree @xmath83 , @xmath88 . assuming @xmath89 frustrated plaquettes , the number of vertices increases approximately by a factor of 10 . given that for bigger lattices this transformation needs less space than the one by bieche et al .",
    ", it is preferable to the former .",
    "however , in the next section we describe a method that works with an even smaller graph .      in this section ,",
    "we follow an idea first described by kasteleyn [ ] and fisher [ ] . in these works ,",
    "the goal was to calculate the configurational partition function for dimer coverings on a lattice .",
    "the authors exploited that the calculation of the partition function of the ising model can be reduced to the number of ways in which a given number of edges can be selected to form closed polygons [ ] , i.e. , a polygon configuration such that each lattice vertex has even degree of selected incident polygon edges .",
    "the latter can be computed as follows .",
    "first , one constructs a so - called cluster lattice graph which is generated by replacing each vertex of the lattice by a kasteleyn city ( a @xmath90 subgraph ) .",
    "now the expanded graph is oriented such that the associated skew - symmetric matrix @xmath91 shows the property that @xmath92 , where @xmath93 denotes the pfaffian of the skew - symmetric matrix , gives the number of dimer coverings .",
    "as there is a one - to - one correspondence between the number of polygon configurations and the number of dimer coverings , this method yields the generating function for polygon configurations and therefore the generating function for the ising model .",
    "thomas and middleton used kasteleyn cities for calculating extended ground states on the torus in order to gain relevant information about the physics of spin glasses on toroidal lattices .",
    "furthermore , they point out that the method yields an exact ground - state algorithm on planar lattices .",
    "a closely related approach was used later by galluccio et al . to design an exact algorithm for the computation of the partition function for the ising problem that runs in polynomial time for several models of interest [ ] , e.g. , for two - dimensional toroidal lattices with @xmath11 distribution .    here , we focus on planar grid graphs .",
    "the distribution of the edge weights is arbitrary .",
    "@xmath19 is transformed into a pseudo - dual graph @xmath94 as shown in figure [ fig : kasteleyn_grid ] .",
    "for simplicity , we confine ourselves to quadratic grid graphs in the following , however all results can be easily transformed to general grid graphs .",
    "formally , first the geometric dual of the grid graph @xmath95 is constructed , then the outer face vertex is expanded into @xmath96 ( @xmath97 in the half - torus case ) copies , such that the resulting graph is an intermediate grid graph @xmath98 ( @xmath99 ) .",
    "the edge weights of @xmath98 are set to the weights of the edges of @xmath95 that are crossed by the edges of @xmath98 .",
    "edges that do not cross any other edge obtain weight zero .",
    "next , each vertex of @xmath98 is expanded to a @xmath90 subgraph . again",
    ", newly constructed edges receive weight zero .     for the grid graph @xmath100 ( color online ) .",
    "[ fig : kasteleyn_grid ] ]    the transformation for the half - torus graph is done similarly , but the intermediate graph is a _ grid - half - torus graph _ @xmath99 which is a grid with @xmath101 additional edges .",
    "edge weights are set as just described .",
    "finally , all vertices are expanded to a @xmath90 subgraph as before .",
    "we denote by @xmath102 the intermediate graph either for the underlying grid or half - torus graph .    on the transformed graph @xmath94",
    "we calculate a minimum - weight perfect matching @xmath41 .",
    "induces a eulerian subgraph in @xmath39 and therefore a cut in the grid or half - torus graph .",
    "the vertex partition consists of the vertices with spin value @xmath5 ( @xmath103 ) in one partition and those with spin value @xmath6 ( @xmath104 ) in the other ( color online ) . [",
    "fig : kasteleyn_matching ] ]    the next step is to shrink all the @xmath90-subgraphs back , resulting in the graph @xmath102 . also",
    "all copies of the outer face vertex are shrunken . dealing again with the geometric dual graph of @xmath95",
    ", we take the subgraph @xmath105 of the geometric dual graph that consists only of dual edges that were matched , and all dual vertices with degree greater zero restricted to matched edges . this subgraph @xmath106 is an eulerian graph as each dual vertex is incident to an even number of matching edges .",
    "it is well known that there exists a one - to - one correspondence between eulerian subgraphs in the dual graph and cuts in the original graph .",
    "so , @xmath32 defines a cut @xmath31 in the graph @xmath95 , cf .",
    "[ fig : kasteleyn_matching ] .    in order to show the correctness of the transformation",
    ", we exploit that each ground state corresponds exactly to a min - cut @xmath31 in the grid graph @xmath95 .",
    "a cut separates the vertex set into two disjoint sets @xmath107 and @xmath108 .",
    "vertices in the same partition get assigned the same spin value .",
    "cut edges are those connecting a pair of vertices with different spin values .",
    "the hamiltonian can be stated as : @xmath109    we show that the edge set determined with the method described above corresponds to a minimum cut . @xmath110    as @xmath111 is the weight of a minimum - weight perfect matching , the weight of the subgraph @xmath106 is minimum , and thus also the weight of the cut @xmath31 .    as kasteleyn s",
    "original method yields the complete partition function , one might ask why the algorithm was modified so that only the ground state is determined .",
    "the reason for this is twofold .",
    "first of all , minimum - weight perfect matchings can be computed in graphs with millions of vertices , provided they are sparse , which allows us to go to very large system sizes .",
    "furthermore , the partition function does not encode the ground - state configuration itself but only its energy .",
    "the method is intuitive and its implementation is straightforward .",
    "we present some computational results in section [ sec : compresults ] . for a quadratic @xmath112 grid graph @xmath113 we construct a graph @xmath114 with @xmath115 vertices and @xmath116 edges . for an @xmath117 ring graph @xmath118 the construction yields a graph @xmath119 with @xmath120 vertices and @xmath121 edges . in any case , the resulting graphs are very sparse .",
    "more specifically , let us compare for an @xmath122 grid the sizes of the graphs in which a minimum - weight perfect matching is computed .",
    "assuming that around @xmath89 of the original plaquettes are frustrated , the graph based on kasteleyn cities contains only about one third of the number of vertices and one fourth of the number of edges contained in the graph constructed with barahona s method .    as the running time of the matching algorithm scales with the number of vertices and edges in the graph , the kasteleyn construction is preferable to both the bieche et al .  and the barahona construction .",
    "for the computation of domain walls , we follow the usual approach [ ] .",
    "a ground state of the system is calculated , having energy @xmath123 . to introduce a domain wall ,",
    "the system is then usually perturbed by flipping all couplings along a row or a column in the lattice .",
    "the ground state for this new system is calculated , having energy @xmath124 .",
    "the domain - wall energy for a given sample is then given by @xmath125 .",
    "we proceed as described in [ ] , by first determining a ground state of an ea spin glass with periodic boundary conditions in one direction , say along the @xmath126-axis .",
    "then the signs of @xmath97 edges in one column along the @xmath127-axis are flipped .",
    "the symmetric difference of these ground states yields a domain wall .    with the help of linear programming [ ]",
    ", one does not need to calculate the second ground state from scratch but can flip the weight of the specific @xmath97 edges one by one , each followed by a reoptimization step .",
    "it is also possible to flip all signs at the same time and do a global reoptimization step .",
    "however , in practice for @xmath128 distributed weights it often does not pay off to do the reoptimization steps , and so we calculate both ground states from scratch .      as argued above , the original approach of bieche et al . suffers from an extensive memory usage . in order to overcome these limits",
    ", some modifications have been proposed that yield heuristic methods for low - energy states that are however not necessarily exact ground states . in these heuristics , a reduced graph @xmath129 is used instead of a complete one .",
    "an approach often used is to introduce in @xmath129 , only those edges with weight less than or equal to a fixed value @xmath130 ( often @xmath131 is chosen , with @xmath132 ) . for continuous spin systems",
    ", weigel [ ] recently suggested to introduce for each vertex only the @xmath133 lightest edges .",
    "he used this cutoff - rule successfully for a matching routine embedded in a genetic algorithm .",
    "the reasoning behind this is that ` heavy'-weighted edges are rarely contained in an optimum solution .",
    "this can assumed to be true for , e.g. , @xmath128 distributed couplings and @xmath89 negative weights , for which very often true ground states are reached in practice .    using the reduced graph @xmath129 , hartmann and young determined high - quality heuristic ground states for @xmath122 lattices with @xmath128 distribution .",
    "they could go up to @xmath134 [ ] . also using the heuristic variant based on the approach of bieche et al .",
    ", palmer and adler report results for @xmath135 with the choice of @xmath136 [ ] .    for different , especially smaller , percentage of negative weights , the quality of the heuristic decreases .",
    "this can be understood as follows .",
    "an edge @xmath137 in the transformed graph is assigned a weight that equals the sum of the absolute weights of the edges in @xmath19 crossed by a minimum path connecting @xmath138 and @xmath21 .",
    "@xmath138 and @xmath21 correspond to a pair of frustrated plaquettes .",
    "the latter can be assumed to be spread all over the system . in case of small @xmath139",
    ", the total number of frustrated plaquettes is small .",
    "therefore , the weight of a minimum path connecting a pair of them can become large which can cause a heuristic with a limited value of @xmath130 to fail .",
    "furthermore , for a different distribution of the couplings e.g. , gaussian couplings , this heuristic variant has to be used carefully , as good values for @xmath130 are not evident .",
    "certainly , removing heavy - weighted edges will result in reduced graphs , but it is not clear beforehand which weights should be considered heavy . applying different cut - off rules , e.g. vertex - degree constraints , might be helpful as they were already used for thinning graphs , but suitable cut - off values depend still on the underlying distribution of the couplings .",
    "an experimental evaluation will be given in section [ sec : compresults ] .",
    "in the next section , we describe how the correctness of heuristic ground states can be verified using linear programming .",
    "suppose we have a spin configuration at hand that has been computed by determining an optimum matching on the graph only containing ` light ' edges and we want to test whether it is a correct ground state .    first , we compute an optimum matching on the same reduced graph . in so - called pricing steps ,",
    "we determine whether yet neglected edges exist that need to be taken into account in order to ensure correctness . in case such an edge",
    "is reported by pricing , it is introduced in the reduced graph .",
    "the process is iterated until no edge is returned any more .",
    "pricing is a general feature in linear programming and combinatorial optimization . for more details",
    ", we refer to [ ] .",
    "pricing steps can be performed with cook and rohe s state - of - the - art blossom iv code [ ] by implementing small modifications .",
    "we give some computational results in section [ sec : compresults ] .",
    "the method proposed in section [ subsec : kasteleyn ] can be used for any distribution of the couplings . here , we focus on @xmath128 distributed instances .",
    "the concentration @xmath139 of anti -",
    "ferromagnetic bonds was set to @xmath140 .",
    "for the computations we used intel xeon cpu with @xmath141ghz and amd opteron processor @xmath142 with @xmath143ghz , each with less than @xmath144 gb ram .",
    "the largest instances @xmath145 were done on xeon processors with @xmath144 gb ram . the physics analysis done with our method",
    "will be presented in a forthcoming article [ ] .    running times for different sizes of grid graphs ( @xmath146 , @xmath147 , @xmath148 , @xmath149 , @xmath150 , @xmath151 , @xmath152 , and @xmath153 ) together with the number of computed samples ,",
    "are shown in table [ tab : gitter - running ] . for smaller grids with @xmath154 , we computed between @xmath155 and @xmath156 instances per size . for medium",
    "@xmath157 , we ran several thousand samples for each size , whereas for the largest systems of @xmath0 spins we generated results for 157 samples .",
    "lattices with @xmath154 can be computed within less than 2 minutes on average , whereas one ground - state determination for the biggest size requires on average 24h cpu time on a single processor .",
    "results of samples for spin glasses with periodic boundary conditions in one direction are presented in table [ tab : ring - running ] .",
    "the running times given in tables [ tab : gitter - running ] and [ tab : ring - running ] scale with @xmath158 for @xmath122 spin glasses . in total",
    "we invested about 600 cpu days for our experiments .",
    "it turns out that free boundary samples are computationally a bit more demanding than samples with periodic boundaries in one direction because the intermediate graphs @xmath102 are larger . for other concentrations of anti - ferromagnetic bonds the presented data ( running times , memory usage , etc . ) are comparable , as our method , unlike the method of bieche et al .",
    ", does not depend on the concentration of anti - ferromagnetic bonds but only on the grid - graph size @xmath159 .    .running times and number of computed samples for different spin glass instance sizes with free boundary conditions and @xmath128 distributed couplings ( @xmath160 ) .",
    "[ tab : gitter - running ] [ cols=\">,>,>,>,>,>\",options=\"header \" , ]",
    "we presented a simple algorithm ( section [ subsec : kasteleyn ] ) based on kasteleyn cities .",
    "the algorithmic foundations of this method date back to the work of kasteleyn [ ] from the 1960s in which he computed the complete partition function for the ising model . using this approach , we can compute exact ground states for two - dimensional planar ising spin - glass instances .",
    "the method is easy to implement , fast and has only limited memory requirements . according to our knowledge ,",
    "the treatable system sizes are considerably bigger than the ones computed earlier and are always provably exact .",
    "thomas and middleton [ ] used kasteleyn cities for studying extended ground states .",
    "furthermore , they state that the method can also be used for determining exact ground states of planar graphs .",
    "we evaluated different established exact methods and compared them with respect to running time and memory requirements .",
    "it turned out that the approach presented here is both considerably faster and needs less memory than the methods proposed earlier .",
    "we showed how heuristically computed ground states can be verified or corrected fast using mathematical optimization .",
    "however , the method based on kasteleyn cities still outperforms this approach .",
    "finally , we evaluated the solution quality of heuristic variants of the bieche et al . approach .    in the future",
    ", we will make our program available in public domain via the cologne spin glass server that can be found at    ` http://cophy.informatik.uni-koeln.de/ ` .",
    "we thank michael jnger for fruitful discussions and vera schmitz for adapting blossom iv s pricing method as described above .",
    "thanks to frank baumann and olivier c.  martin for commenting on an earlier version of this article and to alan middleton for helpful communications .",
    "we are indebted to two anonymous referees for their valuable comments .",
    "last but not least , we thank oliver melchert for stimulating discussions and for providing us with some ground - state data . financial support from the german science foundation is acknowledged under contract li  1675/1 - 1 . partially supported by the marie curie rtn adonet 504438 funded by the eu ."
  ],
  "abstract_text": [
    "<S> studying spin - glass physics through analyzing their ground - state properties has a long history . </S>",
    "<S> although there exist polynomial - time algorithms for the two - dimensional planar case , where the problem of finding ground states is transformed to a minimum - weight perfect matching problem , the reachable system sizes have been limited both by the needed cpu time and by memory requirements . in this work , we present an algorithm for the calculation of exact ground states for two - dimensional ising spin glasses with free boundary conditions in at least one direction . </S>",
    "<S> the algorithmic foundations of the method date back to the work of kasteleyn from the 1960s for computing the complete partition function of the ising model . using kasteleyn cities , </S>",
    "<S> we calculate exact ground states for huge two - dimensional planar ising spin - glass lattices ( up to @xmath0 spins ) within reasonable time . according to our knowledge , these are the largest sizes currently available . </S>",
    "<S> kasteleyn cities were recently also used by thomas and middleton in the context of extended ground states on the torus . moreover , they show that the method can also be used for computing ground states of planar graphs . </S>",
    "<S> furthermore , we point out that the correctness of heuristically computed ground states can easily be verified . </S>",
    "<S> finally , we evaluate the solution quality of heuristic variants of the bieche et al . approach . </S>"
  ]
}
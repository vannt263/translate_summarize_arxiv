{
  "article_text": [
    "richard thompson introduced his group @xmath0 in 1965 , and it has since been extensively studied .",
    "@xmath0 is finitely presented , has exponential growth , and its abelianization is @xmath1 .",
    "the question as to whether @xmath0 is amenable was first posed in 1979 .",
    "@xmath0 is , in a sense , `` on the edge of amenability '' , as it is not elementary amenable but does not contain a free subgroup on two generators @xcite . for several years",
    "it was hoped to provide the first finitely - presented counterexample to the von neumann conjecture , until olshanskii and sapir provided a different counterexample in 2000 @xcite .",
    "flner provided a geometric criterion for the amenability of a group in 1955 @xcite , based on the existence of subsets of the cayley graph with arbitrarily small `` boundary '' .",
    "this criterion holds for semigroups as well ( one may find a proof in @xcite .",
    "this criterion allows one to extend the definition of `` amenable '' to cover arbitrary graphs . in 1992 ,",
    "block and weinberger extended the definition to an even broader class of metric spaces .",
    "they defined the _ uniformly finite homology groups _",
    "@xmath2 of a metric space @xmath3 , and proved that a space @xmath3 was amenable if and only if @xmath4 .",
    "this paper seeks to apply the results of block and weinberger to thompson s group @xmath0 .",
    "the results of block and weinberger center around the existence of `` ponzi schemes '' , which come from the uniformly finite 1-chains . in this paper",
    "we will be looking only at graphs , and we will define a slightly simpler notion of a `` ponzi flow '' which works for our purposes .    in section 2 , we give a very brief overview of thompson s group @xmath0 . readers interested in a more in - depth introduction",
    "are referred to @xcite or @xcite .",
    "we also will define amenability and flner s criterion . in section 3",
    ", we discuss the results of block and weinberger and define ponzi flows , as well as proving certain results about ponzi flows on subgraphs of cayley graphs ( namely , a subgraph with a ponzi flow always has measure zero ) . in section 4 , we state and prove the main result :    [ t : main ] let @xmath5 be positive integers , with @xmath6 .",
    "let @xmath7 be the subgraph of the cayley graph of @xmath0 induced by vertices which can be expressed in the form @xmath8 , where @xmath9 is a positive word in the infinite generating set @xmath10 of length @xmath11 and @xmath12 is a positive word in @xmath13 ( of any length ) .",
    "then @xmath7 is not amenable .",
    "the case @xmath14 was proved by d. savchuk in @xcite .",
    "a corollary of this theorem is that all finitely - generated submonoids of the positive monoid of @xmath0 are not amenable , and therefore if @xmath0 is amenable these sets have measure zero .",
    "thompson s group @xmath0 has been studied for several decades .",
    "it can be described as the group of piecewise - linear homeomorphisms of the unit interval , all of whose derivatives are integer powers of 2 and with a finite number of break points which are all dyadic rationals .",
    "it can also be described as the group with the following infinite presentation : @xmath15    from this presentation , we may see @xmath16 for @xmath17 , thus this group is finitely generated by @xmath18 .",
    "it turns out this group is finitely presented as well .",
    "however , it is still useful to consider the infinite generating set @xmath10 .",
    "we have the following definition :    the _ positive monoid _ of @xmath0 is the submonoid of @xmath0 consisting of elements which can be expressed as words in @xmath10 , without using inverses .",
    "any element of @xmath0 can be expressed as an element of the positive monoid times the inverse of such an element .",
    "( elements of @xmath0 have a normal form which is such a product ) .    in @xcite , the group @xmath0",
    "is studied using _ two - way forest diagrams _ ( so called because trees can extend in either direction in the forest , though we will only be studying forests with trees extending to the right ) .",
    "we will make extensive use of these diagrams when studying the positive monoid in section 4 .",
    "we describe the two - way forest diagrams of the positive monoid here , referring the reader to @xcite for the proofs .    a _ binary forest _ is a sequence of binary trees , such that all but finitely many of the trees are trivial ( i.e. , have 1 node ) :        a _ pointed forest _ is a binary forest with a distinguished , or `` pointed '' , tree .        for the remainder of this paper",
    ", we will omit the ellipses , and assume a forest diagram or pointed forest diagram has an infinite number of trivial trees continuing to the right .",
    "each element of the positive monoid of @xmath0 can be identified with a pointed forest .",
    "the identity element is the pointed forest consisting only of trivial trees , with the the pointer on the leftmost .",
    "right multiplication by @xmath19 moves the pointer one tree to the right :        multiplication by @xmath19    right multiplication by @xmath20 adds a caret between the pointed tree and the tree immediately to its right , making a new tree whose left child is the pointed tree and whose right child is the tree to its right . this new tree becomes the pointed tree :        multiplication by @xmath20    since @xmath21 , we can see that right multiplication by @xmath22 moves the pointer @xmath23 trees to the right , adds a caret , and then moves the pointer @xmath23 trees to the left again .",
    "this is equivalent to adding a caret between the trees @xmath23 and @xmath24 steps away from the pointed tree .",
    "multiplication by @xmath25    multiplication of pointed forests corresponds to `` putting one on top of the other '' : if @xmath26 and @xmath27 are pointed forests , then @xmath28 is the forest obtained by using the trees of @xmath26 as the leaves of @xmath27 , with the pointed tree in @xmath26 acting as the leftmost leaf :        multiplying the two forests on the left yields the forest on the right    the pointer is then placed above whatever tree was pointed in @xmath27 .",
    "it has been a longstanding open question as to whether @xmath0 is _ amenable _ :",
    "a group @xmath29 is called _ amenable _ if there exists a `` left - invariant measure '' on @xmath29 , that is , a function @xmath30_p_@xmath31 $ ] such that :    - @xmath32    - @xmath33 is finitely additive : if @xmath34 and @xmath35 are disjoint subsets of @xmath29 , @xmath36 .    - @xmath33 is g - invariant : for any @xmath37 , @xmath38 , @xmath39 .    a useful result for determining amenability is _",
    "flner s criterion _ , which uses the left cayley graph of @xmath29 ( the graph obtained by taking a generating set @xmath34 and using @xmath29 as the vertex set , connecting two vertices @xmath40 and @xmath41 by an edge if @xmath42 for some @xmath43 ) .",
    "( flner s criterion ) : a group @xmath29 is amenable if and only if , for any @xmath44 , there exists a finite subset @xmath34 of vertices in the cayley graph of @xmath29 such that @xmath45 where @xmath46 is the number of vertices in @xmath34 , and @xmath47 is the number of edges connecting a vertex in @xmath34 to a vertex outside @xmath34",
    ".    intuitively , flner s criterion says there are finite subsets of the cayley graph whose boundaries are arbitrarily small when compared to the size of the sets themselves .",
    "since the left- and right- cayley graphs of a group are isomorphic , flner s criterion shows that a left - invariant measure exists on a group if and only if a right - invariant measure exists . for the remainder of this paper",
    ", we will be concerned with _",
    "right_-invariant measures , and so all cayley graphs we consider from now on will be right cayley graphs ( @xmath40 and @xmath41 are connected by an edge iff @xmath48 for some generator @xmath49 ) .",
    "flner s criterion is very useful , in that it can be applied not only to a group but to any graph .",
    "in particular , we say an arbitrary graph is amenable if flner s criterion holds for that graph .",
    "this allows us to state the following proposition :    let @xmath50 be the subgraph of the cayley graph of thompson s group @xmath0 ( using the @xmath51 generating set ) consisting of vertices in the positive monoid and all edges between such vertices . then @xmath50 is amenable if and only if @xmath0 is .",
    "the proof uses the facts that any finite set in @xmath0 can be translated into the positive monoid , and that all outgoing edges from the positive monoid are of the @xmath52 or @xmath53 type .",
    "( a proof can be found in @xcite ) .",
    "this section describes and obtains a few results from the uniformly finite homology of block and weinberger .",
    "we will always be considering a graph @xmath50 of bounded degree , though many of the results apply to a much broader class of metric spaces .",
    "[ d : uf1c ]    let @xmath50 be a graph of bounded degree with vertex set @xmath54 .",
    "a _ uniformly finite 1-chain with integer coefficients _ on @xmath50 is a formal infinite sum @xmath55 , where the @xmath56 are ordered pairs of vertices of @xmath50 , @xmath57 , such that the following properties are satisfied :    \\1 ) there exists @xmath58 such that @xmath59    \\2 ) there exists some @xmath60 so that @xmath61 if @xmath62    notice that condition 2 ) guarantees that for any fixed @xmath63 , the set of pairs @xmath56 such that @xmath64 is finite .",
    "similarly , the pairs @xmath65 with @xmath66 also form a finite set .",
    "this allows us to make the following definition :    [ d : psi ]    a uniformly finite 1-chain is a _ ponzi scheme _ if , for all @xmath67 , we have @xmath68 .",
    "we now state the main result of @xcite which we will use in this paper :    [ t : bw ]    let @xmath50 be a graph of bounded degree .",
    "a ponzi scheme exists on @xmath50 if and only if @xmath50 is not amenable ( in the flner sense )",
    ".    we will use a rephrased version of this theorem for the case of our graphs :    [ d : ponziflow ]    let @xmath50 be a graph of bounded degree with vertex set @xmath54 .",
    "a _ ponzi flow on @xmath50 _ will mean a function @xmath69 with the following properties :    \\i ) @xmath70 if there is no edge from @xmath49 to @xmath71 in @xmath50 ,    \\ii ) @xmath72 for all @xmath73 ,    \\iii ) @xmath29 is uniformly bounded , i.e. , @xmath74 such that @xmath75    \\iv ) for each @xmath76 , @xmath77 .",
    "note that the sum in condition ( @xmath78 ) is guaranteed to be finite by condition ( @xmath24 ) .",
    "intuitively , the function @xmath29 defines a `` flow '' on the graph @xmath50 , assigning an integer and a direction to each edge , such that for any vertex the total `` inward '' flow is more than the total `` outward '' flow .",
    "this is almost exactly a ponzi scheme in different language , with the exception that all `` pairs '' must be exactly of distance 1 .",
    "however , this difference is unimportant :    [ p : pspf ]    let @xmath50 be a graph of bounded degree .",
    "there exists a ponzi scheme on @xmath50 if and only there exists a ponzi flow on @xmath50 .",
    "the `` if '' direction is trivial : given a ponzi flow , we may define our formal sum to be @xmath79 , and this will be a uniformly finite 1-chain with integer coefficients : condition 1 ) is implied by ( @xmath80 ) together with ( @xmath78 ) , and condition 2 ) is implied by ( @xmath24 ) .",
    "this 1-chain will be a ponzi scheme by conditions ( @xmath81 ) and ( @xmath78 ) .    to see the `` only if '' direction , we start with a ponzi scheme @xmath55 , and formally add canceling sums to it to obtain a new scheme @xmath82 with @xmath83 if @xmath84 .",
    "we do this in the following way : for each @xmath85 such that @xmath86 , let @xmath87 be a sequence of vertices forming a path from @xmath88 to @xmath89 , and add @xmath90 to our sum coefficientwise .",
    "this will still satisfy the inequality of [ d : psi ] , since each @xmath91 appears exactly twice in our added sum , once contributing @xmath85 and once contributing @xmath92 , leaving the sum unchanged .",
    "the coefficients of @xmath56 will cancel , leaving the new coefficient 0 .",
    "thus we have cancelled a coefficient @xmath85 whose vertices are not adjacent while only affecting other coefficients with adjacent vertices .",
    "each adjacent pair @xmath56 has no more than @xmath93 pairs of vertices within distance @xmath94 , where @xmath95 is the bound on degree and @xmath94 is the radial bound from condition 2 ) .",
    "that means that if we choose paths as above for every pair @xmath56 with @xmath84 and @xmath96 , each edge will be part of no more than @xmath93 of these paths . thus , adding a sum as above for each path will yield us a new well - defined formal sum @xmath82 .",
    "we will have @xmath61 if @xmath84 , since these coefficients have been cancelled .",
    "furthermore , we have that each @xmath97 is bounded by @xmath98 , thus condition 1 ) of [ d : uf1c ] still holds ( with a different bound ) , so we have a uniformly finite 1-chain with @xmath99 .",
    "since we did not change the sums in [ d : psi ] , @xmath82 is still a ponzi scheme .",
    "now we simply define @xmath100 , and condition ( @xmath24 ) is implied by @xmath99 , condition ( @xmath81 ) is clear , ( @xmath80 ) is implied by 1 ) , and ( @xmath78 ) is implied by the inequality of [ d : psi ] , thus @xmath29 is a ponzi flow on @xmath50 .",
    "a quantified treatment of ponzi flows can be found in @xcite .",
    "if a ponzi flow exists on a cayley graph , we then have that there can be no right - invariant measure on the group , since no flner sequence exists and this implies the group can not be amenable .",
    "we give here an elementary proof that existence of a ponzi flow directly implies no right - invariant measure exists , for an appropriate type of graph on which the notion `` right invariant '' can be defined :    by a _ labeled directed graph _",
    "we shall mean a directed graph of bounded degree , each of whose edges are labeled by elements from a finite set @xmath101 , such that each vertex of @xmath50 has at most one incoming edge and one outgoing edge with each label .",
    "it is not necessary that a vertex have an edge with each label .",
    "the motivating example is the case where @xmath50 is a subgraph of a cayley graph of a group generated by @xmath101 , but the results here hold for all labeled directed graphs .",
    "let @xmath50 be a labeled directed graph .",
    "suppose @xmath102 is a subset of vertices of @xmath50 .",
    "for @xmath103 , we say @xmath102 is _",
    "@xmath104-translatable _ if each vertex in @xmath102 has an outgoing edge labeled by @xmath104 .",
    "in such a case we denote by @xmath105 the set of vertices with an incoming edge labeled by @xmath104 whose opposite vertex lies in @xmath102 , i.e. , the set of vertices at the other ends of the outgoing @xmath104-labeled edges .    in the case where @xmath50 is a subgraph of a cayley graph , @xmath105 is just the right - translate of the elements of @xmath102 under the group multiplication , and @xmath102 being @xmath104-translatable simply means @xmath106 .",
    "we will abuse notation slightly in the case of one - element sets , so that if @xmath12 has an outgoing edge labeled by @xmath104 , we will call the vertex on the other side of the edge @xmath107 ( which corresponds to standard group multiplication in the case of a cayley graph ) .",
    "we will also abuse notation in that we will occasionally identify @xmath50 with its vertex set .",
    "if @xmath102 ( or a single vertex @xmath12 ) is the @xmath104-translate of some other vertex set , we will call that set @xmath108 ( or the single vertex @xmath109 ) . again , this is the same as the standard multiplication in the case of a cayley graph .",
    "let @xmath33 be a finitely additive measure on the vertex set of @xmath50 , such that @xmath110 .",
    "then we say @xmath33 is _ right - invariant _ if for each @xmath104 and each @xmath104-translatable subset @xmath111 , @xmath112 .    if @xmath50 is the full cayley graph of a finitely generated group or semigroup , then this definition of right - invariant measure coincides with the standard one , since every set of vertices is @xmath104-translatable for every @xmath24 .",
    "we now have the terminology to state :    [ t : ponzinomeasure ] suppose @xmath50 is a labeled directed graph , and has a ponzi flow @xmath29 . then there is no finitely additive , right - invariant measure on @xmath50 .",
    "we begin by associating to each vertex @xmath12 of @xmath50 an ordered list of symbols , taken from the alphabet @xmath113 .",
    "@xmath114 has no meaning here except as an `` extra '' symbol to be used in the list .",
    "we shall call this list @xmath115 , and construct it as follows : if @xmath12 has an outgoing edge labeled by @xmath116 , and @xmath117 , we begin @xmath115 by repeating the symbol @xmath116 @xmath118 times .",
    "if @xmath12 has an outgoing edge labeled by @xmath119 and @xmath120 , we append @xmath121 copies of @xmath119 to the list .",
    "we continue in this fashion , appending @xmath122 copies of @xmath104 to the list if @xmath12 has an outgoing edge labeled @xmath104 and @xmath123 . for example , if @xmath12 has an outgoing @xmath116-edge and @xmath124-edge , but no @xmath119-edge , and @xmath125 and @xmath126 , then @xmath115 would begin @xmath127 .",
    "once this is complete for positive powers , we repeat this process with the inverse symbols using incoming edges , i.e. , if @xmath12 has an incoming edge labeled @xmath104 and @xmath128 , we append @xmath129 copies of @xmath130 to our list , and repeat this process for each @xmath130 in turn . intuitively , the lists so far are measuring the `` outgoing flow '' at each vertex .",
    "since @xmath29 is bounded by some @xmath131 , these lists so far all have length @xmath132 .",
    "we append copies of @xmath114 to each list so that each list has length @xmath133 .",
    "we now have associated to each @xmath12 an ordered list @xmath115 of length @xmath133 of symbols from the alphabet @xmath134 .    using these lists",
    ", we will now define a family of vertex subsets of @xmath50 , which we will call @xmath135 , for any ordered list @xmath136 of length @xmath133 of symbols from the alphabet @xmath134 .",
    "@xmath135 will consist of all vertices @xmath12 for which @xmath137 .",
    "note that many of the sets @xmath135 may be empty .",
    "but since each vertex has a unique list associated to it , we have @xmath138 .",
    "suppose @xmath50 has a right - invariant measure @xmath33 .",
    "then since each @xmath135 is disjoint and their union is the entire graph , we have    @xmath139    now we define some more subsets of @xmath50 , which we call @xmath140 , for @xmath40 any letter in the alphabet @xmath134 and @xmath141 .",
    "@xmath140 will be the set of vertices @xmath12 such that @xmath115 contains @xmath142 or more copies of @xmath40 .",
    "the @xmath140 are certainly not disjoint , however , each @xmath140 can be expressed as a disjoint union of some of the @xmath135 .",
    "namely , @xmath143 , where the union is taken over all lists @xmath144 that contain @xmath142 or more occurrences of @xmath40 .",
    "since we are looking at lists of a fixed length with symbols taken from a finite alphabet , there are finitely many such lists and thus the union is finite .",
    "we therefore have    @xmath145    we claim each list @xmath136 appears exactly @xmath133 times in the double sum on the right - hand side of the above equation .",
    "to prove this claim , we observe that each entry of @xmath136 causes @xmath135 to be contained in exactly one of the @xmath140 .",
    "namely , the @xmath146 occurrence of @xmath40 ensures that @xmath147 .",
    "for example , if @xmath136 starts as @xmath148 , then the @xmath116 term guarantees @xmath149 , the first @xmath124 term guarantees @xmath150 , and the second @xmath124 term guarantees @xmath151 .",
    "these are the only @xmath140 that will contain @xmath135 , by the definition of the @xmath140 .",
    "thus , since the lists are of length @xmath133 , each @xmath135 appears in an @xmath144 sum for exactly @xmath133 of the @xmath140 , and thus appears a total of @xmath133 times in the above sum , proving the claim .",
    "this allows us to explicitly calculate the sum of the measures of the @xmath140 :    @xmath152    now , for @xmath153 , let @xmath154 , i.e. , @xmath155 is the set of all vertices with an _ incoming _ edge labeled @xmath104 such that @xmath156 , and @xmath157 is the set of all vertices @xmath12 with an _ outgoing _ edge labeled @xmath104 such that @xmath158 .",
    "we define @xmath159 .",
    "since each @xmath140 is @xmath40-translatable and its translate is @xmath160 for @xmath153 , we have    @xmath161    now we construct lists @xmath162 analogously to the @xmath115 , with two major changes : firstly , we count `` incoming flow '' instead of `` outgoing flow '' : we use incoming edges and @xmath163 values with the symbols @xmath104 instead of outgoing edges and @xmath122 values , and similarly we use outgoing edges and @xmath164 values with the @xmath130 symbols . secondly , we append the @xmath114 s so that each @xmath162 has length @xmath165 , not length @xmath133 .",
    "now as before we define @xmath166 as the set of vertices @xmath12 such that @xmath167 .",
    "we now have for @xmath153 , @xmath168 , where the @xmath144 are taken over the set of lists with at least @xmath142 occurrences of @xmath40 .",
    "however , we can not say the same about @xmath169 , since it corresponds to @xmath114 s in the lists @xmath115 , not in the @xmath162 .",
    "but since @xmath29 is a ponzi flow , the total `` incoming flow '' at any vertex @xmath12 is greater than the total `` outgoing flow '' , which means that there are more non-@xmath114 terms in @xmath162 than there are in @xmath115 for each @xmath12 ( see definition [ d : ponziflow ] ) .",
    "this means that @xmath162 has no more @xmath114 terms than @xmath115 does .",
    "thus , if we let @xmath170 be the set of vertices @xmath12 such that @xmath162 contains at least @xmath142 occurrences of @xmath114 , then @xmath171 , and so @xmath172 . but",
    "@xmath173 , where the @xmath144 are taken over lists with at least @xmath142 occurrences of @xmath114 .",
    "thus we may use the exact same arguments as above to obtain    @xmath174    where the @xmath144 sums are taken over lists of length @xmath175 which have at least @xmath142 occurrences of @xmath40 . the same argument as the above claim , however , shows that each @xmath176 occurs precisely @xmath165 times in the above sum .",
    "since @xmath50 is a disjoint union of all the @xmath166 , this gives us    @xmath177 .",
    "since we previously concluded that @xmath178 , we have a contradiction .",
    "thus , no right - invariant measure @xmath33 can exist on @xmath50 .",
    "[ c : measurezero ] if @xmath50 is amenable but contains a nonamenable subgraph @xmath26 , then for any right - invariant measure @xmath33 on @xmath50 , @xmath179 .",
    "if @xmath180 , then we can define a measure @xmath181 on @xmath26 by setting @xmath182 for @xmath183 . since @xmath184 is constant , @xmath181 will inherit the properties of right invariance and finite additivity from @xmath33 , and @xmath185 .",
    "but since @xmath26 is nonamenable it has a ponzi flow , and [ t : ponzinomeasure ] says no such @xmath181 can exist , yielding a contradiction .",
    "in this section we will prove the main theorem .      given any binary tree on @xmath186 nodes",
    ", we may remove the top caret , giving us a 2-tree forest on @xmath186 nodes .",
    "if the left of these two trees is nontrivial , we may remove its top caret to obtain a 3-tree forest .",
    "suppose we continue to remove the top caret of the leftmost tree , until the leftmost tree is trivial .",
    "applying this process to any tree gives a function @xmath187 from the set of binary trees on @xmath186 nodes to the set of binary forests on @xmath186 nodes with trivial leftmost tree ( @xmath187 is in fact a bijection ) .",
    "note that the inverse of @xmath187 is defined by starting with a forest on @xmath186 nodes with trivial leftmost tree , adding a caret between the two leftmost trees in the forest , and repeating this process until the entire forest has been combined into a single tree .",
    "we extend the definition of @xmath187 to apply to forests as well as single trees , by applying @xmath187 separately to each nontrivial tree in the forest .",
    "we will define the _ complexity _ of a tree or forest on @xmath186 nodes to be the minimum number of applications of @xmath187 required to turn it into into a forest of @xmath186 trivial trees .",
    "note that applying @xmath187 to a tree @xmath188 leaves a forest whose rightmost tree is the right child of @xmath188 , and the remainder of the forest is @xmath187 applied to the left child of @xmath188 .",
    "this gives the following :            let @xmath188 be a tree on @xmath186 nodes , and let @xmath94 be an @xmath186-tree forest",
    ". denote by @xmath189 the tree obtained by attaching the roots of @xmath94 to the nodes of @xmath188 .",
    "if @xmath188 has complexity @xmath142 , then @xmath190 consists only of carets in @xmath94 , i.e. , every caret from @xmath188 is removed by @xmath191 .",
    "this is easy to see , as we can determine whether a caret is removed by @xmath191 by examining its relationship with those above it .",
    "namely , when we examine the unique path from a caret to the root of the tree , it consists of moves to the right and moves to the left .",
    "an application of @xmath187 removes all carets whose path consists only of moves to the right .",
    "further , any caret s path to the root hits the left edge at some point , and consists only of moves to the right afterwards .",
    "after @xmath187 is applied , the path ends the move before reaching the left edge ( which was a move to the left ) .",
    "thus @xmath187 leaves each new path from a remaining caret to the root of its new tree with one less move to the left .",
    "so @xmath191 removes all carets whose paths consist of @xmath193 or fewer moves to the left .",
    "since this property is unchanged in the carets of @xmath188 whether or not it sits on @xmath94 , the effect of @xmath191 is the same on carets of @xmath188 , whether or not we consider it a top - tree of @xmath94 .    for a positive integer @xmath142",
    ", we define a function @xmath194 from pointed forests to forests in the following way : apply @xmath187 to the pointed tree and every tree to its left @xmath142 times .",
    "apply @xmath187 @xmath195 times to the tree that is @xmath196 to the right of the pointed tree .",
    "that is to say , apply @xmath187 ( @xmath193 ) times to the tree to the immediate right of the pointed tree , @xmath197 times to next tree to the right , etc .",
    "_ proof of @xmath200 _ : let @xmath201 .",
    "first suppose that @xmath202 . in this case",
    "@xmath26 can be expressed as a word @xmath12 in @xmath203 , and the proposition says it is annihilated by @xmath204 , i.e. , @xmath198 consists only of trivial trees .",
    "we proceed by induction on the length of @xmath12 .",
    "clearly , @xmath205 is annihilated by @xmath204 if @xmath12 is , since @xmath206 is a subforest of @xmath207 ( each tree has @xmath187 applied to it either the same number of times or one more time , since the pointer has simply moved one tree to the right ) .    for @xmath208 ,",
    "multiplying by @xmath22 adds a caret to the right of the tree @xmath23 trees from the pointer . by [ p : calccpx ] , this will increase the number of applications of @xmath187 required to make that tree trivial only if its right child has complexity greater than or equal to its left child . in this case",
    ", the new tree s complexity will be one greater than that of its right child . since @xmath209 , the right child was @xmath24 trees to the right of the caret , and by induction the right child had complexity no more than @xmath210 .",
    "thus the new tree has complexity no more than @xmath211 .",
    "since this new tree is @xmath23 trees to the right of the pointer , it is still annihilated by @xmath204 .",
    "the trees to the left of the new caret are unchanged , and the trees to the right of the caret have each been brought 1 tree closer to the pointer since two intervening trees have been merged .",
    "these trees now have complexity @xmath212 , where @xmath95 is their distance from the pointed tree , since they were distance @xmath213 before the caret was added and were made trivial by the application of @xmath204 .",
    "this means that they will still be annihilated by @xmath204 , and so the new pointed forest is still turned into a trivial forest by @xmath204 .",
    "the above argument shows that @xmath207 is trivial if @xmath214 .",
    "but if we take a @xmath9 of length @xmath11 as in the theorem , @xmath8 uses the trees of @xmath9 as the leaves for the trees of @xmath12 .",
    "thus each all the carets added in each tree of @xmath12 are still removed by @xmath204 by [ p : skills ] , since @xmath187 is applied the same number of times to each tree .",
    "thus @xmath215 has at most as many carets as @xmath9 , i.e. , @xmath199 or fewer .",
    "we will proceed by induction on @xmath142 .",
    "it is clear that @xmath217 is a forest with trivial leftmost tree and the remaining trees @xmath218 of complexity @xmath219 . by induction ,",
    "let @xmath220 be a word in @xmath221 that creates the forest diagram with only @xmath222 .",
    "now consider @xmath223 .",
    "since @xmath19 moves the pointer one to the right and @xmath52 moves it one to the left , @xmath223 represents creating @xmath222 one tree to the right of the pointer ( leaving the pointed tree trivial ) .",
    "but since @xmath16 , by inserting @xmath224 between each letter in @xmath220 we can rewrite @xmath223 as a word in @xmath225 . applying @xmath20",
    "then creates the caret from the leftmost node to this tree ( this would be the last caret removed by the first application of @xmath187 to @xmath188 ) .",
    "we may now repeat this process for the remaining trees : multiply by some @xmath223 to create @xmath226 one tree to the right of the pointer , and then multiply by @xmath20 to attach the caret removed by the first application of @xmath187 ( this process is illustrated below ) .",
    "this constructs the entire tree @xmath188 .        to construct the tree @xmath188 on the left",
    ", we construct the first nontrivial tree in @xmath217 to the right of the pointer ( top right ) , then multiply by @xmath20 ( middle right ) , then construct the next tree in @xmath217 to the right of the pointer ( bottom right ) , then multiply by @xmath20 .",
    "_ proof of proposition [ p : chargam ] , @xmath227 : _ suppose that @xmath26 is a pointed forest such that @xmath198 has @xmath199 or fewer carets .",
    "we can then create @xmath9 to put these carets in place without moving the pointer ( the generator @xmath22 creates a caret on the @xmath228 tree without moving the pointer ) .",
    "the resulting pointed forest is then annihilated by @xmath204 , and so each tree under or to the left of the pointer has complexity at most @xmath232 .",
    "thus we may construct these trees as words in @xmath233 using [ p : buildt ] and inserting @xmath19 between each word , which will result in building the first tree , moving the pointer to the right , building the next tree , etc .",
    "further , the tree that is @xmath142 trees to the right of the pointer has complexity at most @xmath234 , and so [ p : buildt ] says we can construct it as @xmath235 , where @xmath220 is a word in @xmath236 . as above , we then insert @xmath237 between each letter of @xmath220 , which allows us to rewrite it as a word in @xmath238 .",
    "repeating this for each @xmath142 and appending these words in increasing order constructs all trees to the right of the pointer .",
    "this completes the construction of @xmath229 as a word in @xmath233 , which we will call @xmath12 .",
    "thus , @xmath239 , and the proof is complete .",
    "_ proof of theorem [ t : main ] : _ let @xmath0 be the underlying forest of a pointed forest in @xmath240 .",
    "let @xmath27 be the pointed forest with underlying forest @xmath0 whose pointer is as far to the left as possible while still remaining in @xmath240 .",
    "note that applying @xmath204 to @xmath27 affects at most @xmath232 trees under or to the right of the pointer .",
    "thus , by [ p : chargam ] there are at most @xmath241 nontrivial trees to the right of the pointer in @xmath26 , otherwise , @xmath242 would have more than @xmath199 nontrivial trees and thus certainly have more than @xmath199 carets .",
    "for any @xmath243 , let @xmath244 be the number of nontrivial trees @xmath188 to the left of the pointed tree such that if the pointer is moved to @xmath188 the resulting forest remains in @xmath240 . by the preceding paragraph",
    "@xmath244 is never more than @xmath241 .",
    "now define @xmath245 as follows : for each pointed forest @xmath26 ,          now it is clear from the definition that @xmath29 satisfies conditions ( @xmath24 ) and ( @xmath81 ) in definition [ d : ponziflow ] , and since @xmath254 for each @xmath26 , @xmath29 also satisfies condition ( @xmath80 ) .",
    "it thus remains only to check condition ( @xmath78 ) .",
    "so we shall consider a pointed forest @xmath243 .",
    "note that @xmath255 .",
    "note also that that @xmath256 , since any tree to the left of of the pointed tree in @xmath26 is also to the left of the pointed tree in @xmath257 , so @xmath258 .",
    "further , since the only tree counted in @xmath259 but not in @xmath244 is the pointed tree in @xmath26 , we have that @xmath260 exactly when the pointed tree in @xmath26 is nontrivial .",
    "thus condition ( iv ) is satisfied for all @xmath26 where the pointed tree is nontrivial .",
    "if the pointed tree in @xmath26 is trivial , @xmath261 and @xmath262 is not in @xmath240 , so @xmath263 thus condition ( @xmath78 ) holds for all pointed forests where the pointed tree is trivial as well .            letting @xmath267",
    "be generators of @xmath265 , express each as a word in the @xmath268 generating set .",
    "let @xmath136 be the maximum index of the @xmath22 used to express the @xmath269 ; then @xmath265 is a subset of the monoid generated by @xmath270 . but",
    "this monoid is exactly @xmath271 , which by the previous corollary has measure zero .",
    "thus , @xmath266 .",
    "99 j. belk , _",
    "thompson s group f _ , phd thesis , cornell university ( 2004 ) .",
    "j. block , s. weinberger , _ aperiodic tilings , positive scalar curvature , and amenability of spaces _ , journal of the amer .",
    "soc . * 5 * ( 1992 ) , 907918 .",
    "m. brin and c. squier , _ groups of piecewise linear homeomorphisms of the real line _ , invent . math . * 79(4)*(1985 ) , 485498 .",
    "canon , w.j .",
    "floyd , and w.r .",
    "parry , _ introductory notes on richard thompson s groups _ , ensign",
    "( 2 ) * 42(3 - 4 ) * ( 1996 ) , 215256 .",
    "e. flner , _ on groups with full banach mean values _ ,",
    "* 3 * ( 1955 ) , 243254 .",
    "i. namioka , _",
    "flner s conditions for amenable semi - groups _",
    "scand . * 15 * ( 1964 ) , 1828 .",
    "a.j . olshanskii and m.v .",
    "sapir , _ non - amenable finitely presented torsion - by - cyclic groups _ , publ .",
    "hautes tudes sci . *",
    "96 * ( 2002 ) , 43169 .",
    "d. savchuk , _ some graphs related to thompson s group f _ , preprint .",
    "i. benjamini , and r. lyons , y. peres , and o. schramm , _ group - invariant percolation on graphs _ , geom .",
    ", * 9 * ( 1999 ) , 2966 ."
  ],
  "abstract_text": [
    "<S> this paper demonstrates the uniformly finite homology developed by block and weinberger and its relationship to amenable spaces via applications to the cayley graph of thompson s group @xmath0 . </S>",
    "<S> in particular , a certain class of subgraph of @xmath0 is shown to be non - amenable ( in the flner sense ) . </S>",
    "<S> this shows that if @xmath0 is amenable , these subsets ( which include every finitely generated submonoid of the positive monoid of @xmath0 ) must necessarily have measure zero . </S>"
  ]
}
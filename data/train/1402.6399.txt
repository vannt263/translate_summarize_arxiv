{
  "article_text": [
    "a _ linear binary code _ @xmath1 of length @xmath2 and dimension @xmath3 ( or an @xmath4 $ ] code ) , is a @xmath3-dimensional linear subspace of the @xmath2-dimensional binary vector space @xmath5 .",
    "the _ hamming distance _ between two vectors @xmath6 , @xmath7 is equal to the number of indices @xmath8 such that @xmath9 .",
    "the _ hamming weight _ of a vector @xmath10 , which is denoted by @xmath11 , is the number of its nonzero coordinates .",
    "the _ minimum distance @xmath12 _ of a code is defined as the smallest possible distance between pairs of distinct codewords .",
    "a generator matrix for an @xmath4 $ ] code @xmath1 is any @xmath13 matrix @xmath14 whose rows form a basis for @xmath1 . in general , there are many generator matrices for a code .",
    "we say that a code is optimum if it meets the lower and upper bounds in the code tables , and a proposed optimum code if it only meets the lower bound in the code tables .",
    "the distribution of a code is the sequence @xmath15 , where @xmath16 is the number of codewords of weight @xmath8 .",
    "the _ weight enumerator _ of the code is the polynomial @xmath17    let us now introduce some concepts and notions from graph theory .",
    "an _ undirected graph _",
    "@xmath18 is a set @xmath19 of vertices together with a collection @xmath20 of edges , where each edge is an unordered pair of vertices .",
    "the vertices @xmath21 and @xmath22 are _ adjacent _ if @xmath23 is an edge .",
    "then @xmath22 is a _",
    "neighbour _ of @xmath24 .",
    "all the neighbours of vertex @xmath24 in graph @xmath25 form the _ neighbourhood _ of @xmath24 , and it is denoted by @xmath26 .",
    "the _ degree of a vertex _",
    "@xmath27 is the number of vertices adjacent to @xmath27 .",
    "a graph is _ regular _ of degree @xmath3 if all vertices have the same degree @xmath3 . for a graph @xmath18 ,",
    "suppose that @xmath28 is a nonempty subset of @xmath29 .",
    "the subgraph of @xmath25 whose vertex set is @xmath28 and whose edge set is the set of those edges of @xmath25 that have both ends in @xmath28 is called _ the subgraph of @xmath25 induced by @xmath28 _ and is denoted by @xmath30 $ ] , we say that @xmath30 $ ] is an induced subgraph of @xmath25 . the _ adjacency matrix _",
    "@xmath31 of a graph @xmath18 is a symmetric @xmath32-matrix defined as follows : @xmath33 if the @xmath8-th and @xmath34-th vertices are adjacent , and @xmath35 otherwise .",
    "circulant graphs and their various applications are the objects of intensive study in computer science and discrete mathematics , see @xcite .",
    "recently , monakhova published a survey paper on this subject , see @xcite .",
    "let @xmath36 be a set of integers such that @xmath37 and let the vertices of an @xmath2-vertex graph be labelled @xmath38 .",
    "then the _ ciculant graph _",
    "@xmath39 has @xmath40 adjacent to each vertex @xmath8 .",
    "a _ circulant matrix _ is obtained by taking an arbitrary first row , and shifting it cyclically one position to the right in order to obtain successive rows .",
    "we say that a circulant matrix is generated by its first row .",
    "formally , if the first row of an @xmath2-by-@xmath2 circualant matrix is @xmath41 , then the @xmath42 element is @xmath43 , where subscripts are taken modulo @xmath2 .",
    "the term circulant graph arises from the fact that the adjacency matrix for such a graph is a circulant matrix .",
    "for example , figure [ fig1 ] shows the circulant graph @xmath44 .    [ 0.6 ] + figure 1 : the circulant graph @xmath44 [ fig1 ]    in @xmath0 , tonchev @xcite first set up a relationship between a linear binary code and the adjacency matrix of an undirected graph .",
    "given a graph on @xmath2 vertices with adjacency matrix @xmath45 , one can define two linear codes whose generator matrices are as follows :    @xmath46 @xmath47 ,    @xmath48 @xmath49 ,    where @xmath50 is the identity matrix of order @xmath2 .",
    "the code of type @xmath46 is of length @xmath51 , dimension @xmath2 , and minimum hamming distance @xmath52 , where @xmath53 is the minimum degree among the degrees of the vertices in the graph .",
    "the code of type @xmath48 is of length @xmath2 , dimension equal to the rank of @xmath45 over the binary field ( @xmath54-rank of @xmath45 ) , and minimum distance @xmath55 .",
    "recently , finding optimum codes from graphs has received a wide attention of many researchers , see @xcite . in @xcite , danielsen and parker showed that two codes are equivalent if and only if the corresponding graphs are equivalent with respect to local complementation and graph isomorphism .",
    "they used these facts to classify all codes of lengths up to @xmath56 . in 2012 , danielsen @xcite focused his attention on additive codes over @xmath57 and transformed the problem of code equivalence into a problem of graph isomorphism . by an extension technique , they classify all optimal codes of lengths @xmath58 and @xmath56 .",
    "in fact , a computer search reveals that circulant graph codes usually contain many strong codes , and some of these codes have highly regular graph representations , see @xcite . in @xcite",
    ", danielsen obtained some optimum additive codes from circulant graphs in 2005 .",
    "later , varbanov investigated additive circulant graph codes over @xmath59 , see @xcite .    in this paper ,",
    "we introduce a method and find out some optimum linear codes from circulant graphs .",
    "the paper is organized as follows . in section @xmath54",
    ", we propose a new method to find linear optimum codes from circulant graphs . in @xcite",
    ", danielsen obtained some optimum additive codes from circulant graphs .",
    "we get some optimum linear codes from his result in section @xmath60 .",
    "we first notice a famous circulant graph , which is called the @xmath61-ramsey graph . before introducing this graph , we need some basic concepts and notions on ramsey theory .",
    "a _ clique _ of a simple graph @xmath25 is a subset @xmath62 of @xmath29 such that @xmath63 $ ] is complete .",
    "a subset @xmath62 of @xmath29 is called _ an independent set _ of @xmath25 if no two vertices of @xmath62 are adjacent in @xmath25 .",
    "let @xmath64 denote the smallest integer such that every graph on @xmath64 vertices contains either a clique of @xmath3 vertices or an independent set of @xmath65 vertices .",
    "@xmath66-ramsey graph _ is a graph with @xmath67 vertices that contains neither a clique of @xmath3 vertices nor an independent set of @xmath65 vertices .",
    "the @xmath61-ramsey graph @xmath25 ( see figure @xmath54 ) is just a cirulant graph .",
    "let @xmath68 .",
    "for the vertex @xmath69 , let @xmath70 .",
    "[ 0.6 ] + figure 2 : @xmath46 the @xmath61-ramsey graph @xmath25 ; @xmath48 the edge induced graph @xmath71 .",
    "[ fig2 ]    the _ @xmath61-ramsey graph _ is obtained by regarding the vertices as elements of the field of integers modulo @xmath72 , and joining two vertices if their difference is a quadratic residue of @xmath72 ( either @xmath73 , @xmath54 , @xmath74 , @xmath75 , @xmath76 , @xmath77 , @xmath78 or @xmath79 ) . for the vertex @xmath69 , we have @xmath80 @xmath81 . for the vertex @xmath82",
    ", we just rotate the above vertices and edges , that is , we only permit the existence of the edge set @xmath83 @xmath84 . for each vertex @xmath85",
    ", we can also obtain the edge set @xmath86 .",
    "observe that @xmath87 .",
    "for more details , we refer to @xcite .",
    "it is clear that the adjacency matrix @xmath88 of @xmath61-ramsey graph is    @xmath89    it is clear that the adjacency matrix @xmath88 of @xmath61-ramsey graph can be generated by the following vector @xmath90 observe that this vector just corresponds to the edge set @xmath91 , which is an expression of the adjacency relation about the vertex @xmath69 .",
    "we conclude that the @xmath61-ramsey graph can be determined by the edge set @xmath91 , and the adjacency matrix of this graph is determined by the above vector . from the relation between a linear binary code and the adjacency matrix of an undirected graph introduced by @xcite",
    ", we can get an optimum code from the matrix @xmath92 .",
    "the above statement suggests the following method",
    ".    * step 1 . * from a circulant graph @xmath93 , we write the edge set @xmath94 , whose elements are incident to the vertex @xmath95 .    * step 2 . * by the edge set @xmath91 ,",
    "write the vector @xmath96 corresponding to @xmath91 .",
    "* from the vector @xmath96 , we generate a circulant matrix @xmath97 .",
    "* step 4 . * by computer programming , we obtain the minimum distance of the code @xmath98 and determine whether @xmath98 is an optimum code .",
    "but , the above method contributes only a few optimum codes . in this paper , an improved method",
    "is introduced by the following statement .    * step 1 . * from a circulant graph @xmath93 , we write the edge set @xmath94 , whose elements are incident to the vertex @xmath95 .    *",
    "* by the edge set @xmath91 , write the vector @xmath99 corresponding to @xmath91 , where @xmath100 .",
    "* step 3 . * from the vector @xmath96 , we generate a circulant matrix @xmath97 .",
    "* step 4 . *",
    "let @xmath101 denote the lower bound of the linear code with length @xmath51 from code tables . by algorithm @xmath73",
    ", we obtain the minimum distance @xmath102 of the code @xmath98 and determine whether @xmath103 .",
    "below is an algorithm ( running in sage ) . for more details",
    ", we refer to @xcite .    ' '' ''     + * algorithm * 1 : minimum distance of a circulant graph code +    ' '' ''     + input : the value of @xmath2 , the generator vector @xmath96 of a circulant graph code @xmath104 + objective : the minimum distance of the circulant graph code @xmath104 + 1 .",
    "input the value of @xmath2 , the generator vector @xmath105 ; + 2 .",
    "obtain the generator matrix @xmath106 of the circulant graph code @xmath104 ; + 3 .",
    "get the minimum distance of the circulant graph code @xmath104 .",
    "+ take an example , let @xmath107 and @xmath108 .",
    "the algorithm + details are stated as follows : + _ program _ : +  @xmath107 ; +  @xmath109 $ ] +  @xmath110 $ ] for @xmath8 in @xmath111 $ ] for @xmath3 in @xmath112)$ ] ; +  @xmath113,s))$ ] ; +  @xmath114 $ ] ; +  for @xmath3 in @xmath115 $ ] : +  @xmath116 for @xmath8 in subsets@xmath117)$ ] ; +  @xmath118 $ ] ; +  print @xmath119 ; + _ output _ :  @xmath120  @xmath121 +  1  8 +  2  6 +  3  4 +  4  2 +  5  2 +  6  4 +  7  2 +  8  2 + _ result _ :  the elements of the first column @xmath122 are the contribution of the matrix @xmath50 for + the weight of a codeword .",
    "the elements of the second column @xmath123 are the contribution + of the matrix @xmath124 for the weight of a codeword .",
    "the value of @xmath125 is the + minimum weight of the code @xmath126 and then the minimum distance of the code @xmath126 is also @xmath127 .",
    "+    ' '' ''    * step 5 . *",
    "if the answer is positive , we are done .",
    "if not , i.e. , @xmath128 , then we do the following adjustments of the elements of the vector @xmath129 .",
    "we call codeword @xmath130 a `` bad '' codeword if @xmath131 .",
    "* step 5.1*. find `` bad '' codewords @xmath132 such that their weights are @xmath133 by algorithm @xmath54 , where @xmath134 .",
    "if there is no codeword with weight @xmath135 , then @xmath136 is not under considered .",
    "* step 5.2*. for each @xmath137 , we can find a combination of @xmath138 by algorithm @xmath54 .",
    "suppose @xmath139 where @xmath140 .",
    "note that @xmath141 is the @xmath142 s row of the generator matrix .",
    "suppose @xmath143 where @xmath144 or @xmath145 ( @xmath146 ) .",
    "one can see that the vector @xmath147 .    below is another algorithm ( running in sage ) .    ' '' ''",
    "+ * algorithm * 2 : `` bad '' codewords and their combinations +    ' '' ''     + input : the value of @xmath2 , the generator vector @xmath96 of a circulant graph code @xmath104 + objective : the minimum distance of the circulant graph code @xmath104 + 1 .",
    "input the value of @xmath2 , the generator vector @xmath105 ; + 2 .",
    "obtain the generator matrix @xmath106 of the circulant graph code @xmath104 ; + 3 .",
    "get `` bad '' codewords @xmath132 and a combination of each @xmath148 .",
    "+ take an example , let @xmath107 and @xmath108 .",
    "the algorithm + details are stated as follows : + _ program _ : +  @xmath107 ; +  @xmath109 $ ] +  @xmath110 $ ] for @xmath8 in @xmath111 $ ] for @xmath3 in @xmath112)$ ] ; +  @xmath113,s))$ ] ; +  @xmath149','}')$ ] ; +  @xmath114 $ ] ; +  for @xmath3 in @xmath115 $ ] : +  @xmath150 for @xmath8 in subsets@xmath151 $ ] , @xmath152)$ ] ; +  @xmath118 $ ] ; +  print @xmath153 , g(t[0])$ ] ; + _ output _ :  @xmath120  @xmath121  @xmath154  ( as defined in step 5.2 ) +  1  8  \\{1 } +  2  6  \\{1 , 9 } +  3  4  \\{1 , 4 , 12 } +  4  2  \\{1 , 2 , 6 , 16 } +  5  2  \\{1 , 2 , 8 , 11 , 14 } +  6  4  \\{1 , 2 , 3 , 4 , 6 , 13 } +  7  2  \\{1 , 2 , 4 , 6 , 7 , 10 , 17 } +  8  2  \\{1 , 2 , 3 , 6 , 7 , 8 , 12 , 16 } +    ' '' ''    * step 5.3*. determine whether each element @xmath73 of the generator vertex @xmath155 is a `` bad '' element in the following way ( since @xmath100 , we begin with element @xmath156 ) :    if @xmath157 , then @xmath158 . we calculate the exact value @xmath159 note that @xmath160 or @xmath161 ( @xmath162 ) .",
    "consider the set @xmath163 . if the number of element `` @xmath164 '' in @xmath165 is larger than the number of element `` @xmath73 '' , then the element @xmath156 is called _ a `` bad '' element _ of the generator vector @xmath155 .",
    "if @xmath156 is a `` bad '' element , then we instead @xmath157 by @xmath166 and obtain a new vector @xmath167 then we return to step @xmath60 .",
    "if @xmath156 is not a `` bad '' element or @xmath168 , then we consider @xmath169 and continue to determining whether @xmath169 is a `` bad '' element .",
    "the procedure terminates when @xmath170 is considered .",
    "+ in order to introduce our method clearly , we take the following example .    inspired by the above analysis , we hope to consider a circulant graph of order @xmath171 having the similar structure with the @xmath61-ramsey graph .    * step 1*. among all graphs with @xmath171 vertices , we consider the graph @xmath172 , which can be generated by the edge set @xmath173 note that this graph has similar structure with the @xmath61-ramsey graph .    * step 2 .",
    "* by the edge set @xmath91 , we write the vector @xmath174 corresponding to @xmath91 . obviously , @xmath175 . as we see , @xmath176 and @xmath177 have a similar distribution of the elements @xmath164 and @xmath73 .",
    "* step 3*. a circulant matrix can be generated by @xmath176 .",
    "@xmath178    * step 4 .",
    "* from the code tables , we know that the lower bound of the minimum distance of linear code @xmath179 $ ] over @xmath180 is @xmath75 , that is , @xmath181 . by algorithm @xmath73 , we obtain the minimum distance @xmath182 of the code @xmath183 is just @xmath127 , that is , @xmath184 .",
    "* step 5 . * clearly , @xmath185 and @xmath186 .    * step 5.1*. from algorithm @xmath54 , we find two `` bad '' codewords @xmath187 and @xmath188 such that their weights are @xmath127 and @xmath189 , that is , @xmath190 and @xmath191 .    *",
    "step 5.2*. for @xmath192 , we can find a combination of @xmath193 by algorithm @xmath54 , where @xmath194 @xmath195 @xmath196 @xmath197 note that @xmath198 , @xmath199 , @xmath200 , @xmath201 and @xmath202 .    for @xmath203",
    ", we can find a combination of @xmath204 by algorithm @xmath54 , where @xmath194 @xmath205 @xmath206 note that @xmath207 , @xmath199 , @xmath208 and @xmath209 .    *",
    "step 5.3*. recall that @xmath210 and @xmath175 .",
    "since @xmath157 , we consider whether @xmath156 is a `` bad '' element in @xmath176 .    for @xmath192 , since @xmath198 , @xmath199 , @xmath200 , @xmath201 and @xmath202 ,",
    "we have @xmath211 and @xmath212    for @xmath203 , since @xmath207 , @xmath199 , @xmath208 and @xmath209 , we have @xmath213 then @xmath214    it is clear that the number of element `` @xmath164 '' in @xmath165 is larger than the number of element `` @xmath73 '' , then the element @xmath156 is called _ a `` bad '' element _ of the generator vector @xmath155",
    ". we instead @xmath157 by @xmath215 and obtain a new vector @xmath216 then we return to step @xmath60 .",
    "the circulant matrix @xmath217 generated by @xmath218 is    @xmath219    let us now investigate the linear code @xmath220 with generator matrix @xmath221 . by algorithm @xmath73 , we get that the minimum distance @xmath222 of linear code @xmath223 is @xmath75 .",
    "thus , the graph code @xmath220 attains the lower bound @xmath75 , and hence the code @xmath220 is a proposed optimum code over @xmath180 .",
    "the weight enumerator of the code @xmath220 is @xmath224    with the above approach and algorothms , we can also find three other proposed optimum linear codes by the generator matrices @xmath225 , @xmath226 and @xmath227 . the circulant matrices @xmath228 , @xmath229 and @xmath230 are separately generated by @xmath231 @xmath232 @xmath233 the weight enumerator of the code @xmath234 is @xmath235 one can also check that the weight enumerators of the codes @xmath236 and @xmath237 are equal to the ones of @xmath234 and @xmath220 , respectively .",
    "in addition , we consider graphs with large number of vertices with similar approach . from the code tables , we know that the lower and upper bounds of the minimum distance of binary linear code @xmath238 $ ] over @xmath180 are @xmath239 and @xmath56 .",
    "let @xmath240 and @xmath241 be two circulant graphs obtained from the edge sets @xmath242 and @xmath243 respectively , in which @xmath244 and @xmath245 . by the edge sets @xmath246 and @xmath247 , we write the generator vectors @xmath248 and @xmath249 then by algorithm @xmath73 and algorithm @xmath54 , we find the linear codes @xmath250 and @xmath251 with generator matrices @xmath252 and @xmath253 , where the circulant matrices @xmath254 and @xmath255 are generated by @xmath256 @xmath257 the minimum distance of codes @xmath250 and @xmath251 are @xmath239 .",
    "so the graph codes @xmath250 and @xmath251 attain the lower bound @xmath239 and hence the codes @xmath250 and @xmath251 are proposed optimum codes over @xmath180 .",
    "the weight enumerator of the code @xmath258 is @xmath259 the weight enumerator of the code @xmath260 is @xmath261",
    "in @xcite , danielsen got some optimum additive codes . one of them is the optimum additive code @xmath262 obtained from the vector @xmath263 which corresponds to a circulant graph of order @xmath264 .",
    "change the `` @xmath265 '' to `` @xmath164 '' , we obtain the following vector . @xmath266",
    "denote by @xmath267 the circulant matrix generated by @xmath268 .",
    "we now consider the binary linear codes @xmath269 with generator matrix @xmath270 . by algorithm @xmath73 ,",
    "the minimum distance @xmath271 of linear code @xmath269 is @xmath56 .",
    "so @xmath269 is a proposed optimum linear code .",
    "the weight enumerator of the code @xmath272 is @xmath273    the above success about obtaining an optimum linear code from additive codes obtained by danielsen @xcite gives us more inspirations since he got more additive codes in @xcite . in his paper , the code @xmath274 from the vector @xmath275 which corresponds to a circulant graph of order @xmath78 is a proposed optimum additive code .",
    "change the `` @xmath265 '' to `` @xmath164 '' , we obtain the following vector . @xmath276 the adjacent matrix generated by @xmath277 is      consider the binary linear code @xmath279 with generator matrix @xmath280 .",
    "unfortunately , @xmath279 is not a ( proposed ) optimum code .",
    "so some adjustments are needed for the elements of @xmath277 . applying algorithm @xmath54",
    ", we obtain a new vector @xmath281 the circulant matrix @xmath282 generated by @xmath283 is @xmath284 furthermore , we consider the binary linear code @xmath285 with generator matrix @xmath286 .    by algorithm @xmath73 ,",
    "the minimum distance @xmath287 of linear code @xmath285 is @xmath75 .",
    "again from the code tables , we know that the minimum distance of binary linear code @xmath288 $ ] over @xmath180 is @xmath75 .",
    "so @xmath285 is an optimum binary linear code .",
    "the weight enumerator of the code @xmath289 is @xmath290"
  ],
  "abstract_text": [
    "<S> in @xmath0 , tonchev first constructed some linear binary codes defined by the adjacency matrices of undirected graphs . </S>",
    "<S> so , graph is an important tool for searching optimum codes . in this paper </S>",
    "<S> , we introduce a new method of searching ( proposed ) optimum formally self - dual linear binary codes from circulant graphs . </S>",
    "<S> + * ams subject classification 2010 * : 94b05 , 05c50 , 05c25 . </S>"
  ]
}
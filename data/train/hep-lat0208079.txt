{
  "article_text": [
    "in a typical lattice qcd project the total run - time of code on a supercomputing platform is often measured in months or even years .",
    "this means that even a modest improvement in the performance of the code can yield very tangible benefits .",
    "there are two aspects to the optimisation of code for parallel machines : single - node optimisation and the minimisation of the overhead incurred by inter - node communications .",
    "the former requires that the code be written to take full advantage of the high performance available from todays advanced hardware , the latter is of particular importance on cluster machines , like _ alice _  , where the scalability of code can be a serious problem .",
    "experience tells us that the dominant part of a typical lattice qcd code is that implementing the multiplication of a vector by the fermion matrix so it is here that the effort should be made .",
    "secondly , the use of hand - coded optimised assembler routines can dramatically improve performance since the programmer can use information about the code which is unavailable to the compiler .",
    "the disadvantage with assembler routines is that they are difficult to develop and harder to maintain , in addition to the obvious lack of portability .",
    "we address these problems by adopting a metacoding approach ; writing a c++ program to write the assembler code for us .",
    "we have developed special software tools to enable this .",
    "the first stage in creating the assembler routine is to reduce the computational task to elementary assembler - level abstract instructions , _",
    "e.g. _ load a datum from memory into registers , perform arithmetic on the data , cache management , textitetc .    in order to write the metacode",
    "we have developed a system of c++ classes and routines which automatically schedule the instructions to hide the instruction latencies as much as possible and automatically manage the register usage .    when the metacode written using these routines is compiled and run , the abstract instructions with their arguments are translated into an actual assembly language and written to a file .    by basing the toolkit design on an abstract risc isa it should be possible to produce assembler code for any risc machine by changing the architecture - dependent parameters .",
    "here we show the results on _ alice _  , a cluster of compaq ds10 servers which have a 616 mhz , 4-way superscalar alpha 21264 processor with a 64 kb 2-way set - associative level 1 ( on - chip ) data cache and a 2 mb level 2 ( off - chip ) cache .",
    "an advantage of the metacode toolkit as that it permits a large degree of flexibility in writing various assembler kernels ; different approaches can be tried and compared , and the kernels can be rewritten to adapt to changes in the action or algorithm .",
    "figure [ fmm ] shows the improvement , over a wide range of lattice volumes , in the performance of the wilson matrix multiplication routine when written with assembler kernels over that of the original implementation in c. to demonstrate the effect in a more realistic environment , the inversion of the wilson matrix using bicgstab is shown in figure [ solver ] .",
    "wilson matrix bicgstab , comparing single ( dashed ) and double ( solid ) precision . ]",
    "_ alice _  is clustered using parastation 3 over 64bit/33mhz myrinet .",
    "our code uses mpich 1.2.3 to do the communications .",
    "we test the multinode performance of the bicgstab solver on a @xmath0 lattice running on @xmath1 = 1 , 2 , 4 , 8 and 16 nodes arranged in a 1-dimensional ( @xmath2 ) grid and a 2-dimensional ( square ) grid .",
    "we use a standard metric of parallel performance : =    our original implementation used a conventional array ordering for all the fields , where each lattice site with coordinates @xmath3 is numbered @xmath4 where @xmath5 is the size of the local lattice in directon @xmath6 .",
    "this is illustrated in figure [ layout ] ( left ) which shows that while the data along the boundary in one direction is contiguous , in the second direction it is strided .",
    "investigations into the performance of our mpi communications suggest that the communication of strided data introduces an overhead of at least 20% compared to contiguous data .",
    "this explains the poor scaling of the solver on a 2-dimensional grid shown in figure [ oldspeedup ] .",
    "the scaling on the 1-dimensional grid suffers from the increasingly unfavourable surface - to - volume ratio of the local lattice .",
    "speedup of the bicgstab solver with the original data layout . ]",
    "the solution to these problems appears to be to rearrange the data layout so that the sites on the lattice boundaries are ordered in a contiguous fashion , illustrated in figure [ layout ] ( right ) .",
    "( 3,1.2 ) ( .1 , 0 )    ( 2 , 3.2 ) ( 0,0 )   illustration of the old ( left ) and new ( right ) data layout ; the shaded areas show data on the boundary which is communicated.,title=\"fig : \" ]    ( 1.5,0 )    ( 2 , 3.2 ) ( 0,0 )   illustration of the old ( left ) and new ( right ) data layout ; the shaded areas show data on the boundary which is communicated.,title=\"fig : \" ]    separating the boundary and interior sites in this way has the additional advantage that computation can proceed on the interior sites while the boundary sites are waiting for a non - blocking communication to finish .",
    "figure [ newspeedup ] shows that using this new data layout greatly improves the speedup of the solver .",
    "the new data layout does not adversely affect single node performance .",
    "speedup of the bicgstab solver with the new datat layout . ]",
    "we have introduced a flexible software toolkit [ 1 ] which can successfully generate optimised assembler routines for performance - critical parts of our lattice qcd code . on a single node",
    "we see a 100150% improvement in the wilson matrix solver performance at single precision and 50100% at double precision .",
    "we demonstrate that good scaling performance can be achieved on _ alice _  if the data layout and communication strategy is carefully adapted to suit the communication needs .",
    "thanks to dr . p. boyle for inspiration and information and to the _ alice",
    "_  team .",
    "i acknowledge the financial support provided through the european community s human potential programme under contract hprn - ct-2000 - 00145 , hadrons / lattice qcd .",
    "\\1 . ` www.theorie.physik.uni-wuppertal.de/ computerlabor / alice / akmt.phtml `"
  ],
  "abstract_text": [
    "<S> we present results for the performance of qcd code on _ alice _  , the alpha - linux cluster engine at wuppertal . </S>",
    "<S> we describe the techniques employed to optimise the code , including the metaprogramming of assembler kernels , the effects of data layout and an investigation into the overheads incurred by the communication . </S>"
  ]
}
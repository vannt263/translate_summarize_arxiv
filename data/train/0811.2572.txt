{
  "article_text": [
    "we consider the partial order production  problem :    _ given a set @xmath5 partially ordered by a known partial order @xmath6 and a set @xmath7 totally ordered by an unknown linear order @xmath8 , find a permutation @xmath9 of @xmath10 such that @xmath11 , by asking questions of the form :  is @xmath12 ? \" .",
    "_    the partial order production  problem generalizes many fundamental problems ( see figure  [ fig - special ] ) , corresponding to specific families of posets @xmath13",
    ". it amounts to sorting by comparisons when @xmath14 is a chain .",
    "the selection  @xcite and multiple selection  @xcite problems are special cases in which @xmath14 is a weak order and [ sec - algorithm ] ] , that is , has a layered structure ( with @xmath15 iff @xmath16 is on a lower layer than @xmath17 ) .",
    "when the hasse diagram of @xmath14 is a complete binary tree , the problem boils down to heap construction  @xcite .",
    ".5 cm .5 cm .5 cm    we assume that the target poset @xmath14 is part of the input and represented by its hasse diagram .",
    "hence the size of the input can be @xmath18 , whereas sorting the @xmath3 elements of @xmath0 takes @xmath19 time .",
    "in other words , reading the input could take more time than necessary to solve problem , provided a topological sorting of @xmath14 is known .    to cope with this paradoxical situation",
    ", we consider algorithms that proceed in two phases : a _ preprocessing phase _ during which an ordering strategy is determined ( for instance , in the form of a decision tree , or any more efficient description , if possible ) , on the basis of the structure of @xmath14 , and an _ ordering phase _ during which all comparisons between elements of @xmath0 are performed .",
    "accordingly , we distinguish the _ preprocessing complexity _ and the _ ordering complexity _ of the algorithm , the latter being essentially proportional to the number of comparisons performed .    as noted before , we expect the overall complexity of the algorithm to be dominated by its preprocessing complexity .",
    "thus it is desirable to perform the preprocessing phase only once , and then use the resulting ordering strategy on several data sets .    [",
    "[ lower - bound - on - the - number - of - comparisons ] ] lower bound on the number of comparisons + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we denote by @xmath20 the number of linear extensions of the target poset @xmath14 .",
    "feasible permutations @xmath9 are in one - to - one correspondence with the linear extensions of @xmath14 , thus the number of feasible permutations is exactly @xmath20 . on the other hand ,",
    "the total number of permutations is @xmath21 .",
    "we have thus the following information - theoretic lower bound ( logarithms are base 2 ) :    any algorithm solving the partial order production  problem for an @xmath3-element poset p requires @xmath22 comparisons between elements of @xmath0 in the worst case and on average .    note that we can assume without loss of generality that @xmath14 is connected , hence we also have a lower bound of @xmath23 .    [ [ problem - history - and - contribution ] ] problem history and contribution + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    the partial order production  problem was first proposed in 1976 by schnhage  @xcite .",
    "it was studied five years after by aigner  @xcite .",
    "another four years passed and the problem simultaneously appeared in two survey papers : one by saks  @xcite and the other by bollobs and hell  @xcite . in his survey , saks conjectured that the partial order production  problem can be solved by performing @xmath24 comparisons in the worst case .",
    "four years later , in 1989 , yao proved saks conjecture  @xcite .",
    "he gave an algorithm solving the partial order production  problem in at most @xmath25 comparisons , for some constants @xmath26 and @xmath27 .",
    "however , the preprocessing phase of yao s algorithm seems difficult to implement efficiently . in fact , in the last section of his paper  @xcite , yao asked whether , assuming @xmath14 is part of the input ( as is the case here ) , there exists a polynomial - time algorithm for the problem that performs @xmath24 comparisons .",
    "our main contribution is an algorithm that solves the partial order production  problem and performs at most @xmath2 comparisons in the worst case .",
    "the preprocessing complexity of our algorithm is @xmath28 .",
    "hence we answer affirmatively the question of yao @xcite mentioned above . moreover , we also significantly improve the ordering complexity , since yao s constants @xmath26 and @xmath27 are quite large .",
    "further references , focussing mainly on lower bounds for the problem and generalizations of it include culberson and rawlins @xcite , chen @xcite and carlsson and chen @xcite .",
    "[ [ main - ideas - underlying - our - approach ] ] main ideas underlying our approach + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    we reduce the partial order production  problem to the multiple selection problem . instead of solving the problem for the given target poset @xmath14 we solve it for a larger ( more constrained ) poset that has a simpler structure , namely , a weak order @xmath29 extending @xmath14 ( a weak order is a set of antichains with a total ordering between these antichains ) .",
    "this approach works because , as we show below , it is possible to find such a weak order @xmath29 whose corresponding information - theoretic lower bound @xmath4 is not too large compared to that of @xmath14 .",
    "unfortunately , computing @xmath4 exactly is @xmath30-hard , because computing the number of linear extensions of a poset is @xmath30-complete , a result due to brightwell and winkler @xcite .",
    "the analysis is made possible because there exists a quantity , depending on the structure of the target poset , that can be computed in polynomial time and provides a good estimate of @xmath4 .",
    "this quantity is @xmath31 , where @xmath32 denotes the entropy of the considered target poset .",
    "( the entropy of a graph is defined in the next section , and the entropy of a poset is defined as the entropy of its comparability graph . )",
    "it was krner who introduced the notion of the entropy of a graph , in the context of source coding  @xcite .",
    "the idea of estimating an information - theoretic lower bound by means of the entropy of a poset was used before by kahn and kim in their inspiring work on sorting with partial information @xcite , see below .",
    "[ [ related - problems ] ] related problems + + + + + + + + + + + + + + + +    in 1971 chambers  @xcite proposed an algorithm for the partial sorting  problem , defined as follows : given a vector @xmath33 of @xmath3 numbers and a set @xmath34 of indices , rearrange the elements of @xmath33 so that for every @xmath35 , all elements with indices @xmath36 are smaller or equal to @xmath37 , and elements with indices @xmath38 are bigger or equal to @xmath37 . for the indices @xmath35 , the elements @xmath37 in the rearranged vector have rank exactly @xmath39 , hence this problem",
    "is also called _",
    "multiple selection_. the partial sorting  problem is a special case of partial order production  in which the partial order is also a weak order .",
    "the algorithm proposed by chambers is similar to hoare s  find \" algorithm  @xcite , or quickselect .",
    "it has been refined and analyzed by dobkin and munro  @xcite , panholzer  @xcite , prodinger  @xcite , and kaligosi , mehlhorn , munro , and sanders  @xcite . for our purposes ,",
    "the key result is that of kaligosi _ et al . _",
    "@xcite in which it is shown that multiple selection can be done within a lower order term of the information theoretic lower bound , plus a linear term .",
    "another generalization of the sorting problem , called sorting with partial information , was studied by kahn and kim  @xcite :    _ given an unknown linear order @xmath8 on a set @xmath40 , together with a subset @xmath6 of the relations @xmath12 forming a partial order , determine the complete linear order @xmath8 by asking questions of the form : ",
    "is @xmath12 ? \" .",
    "_    this problem is equivalent to sorting by comparisons if @xmath6 is empty .",
    "the information - theoretic lower bound for that problem is @xmath41 , where @xmath42 .",
    "the problem is complementary to the partial order production  problem in the sense that sorting by comparisons can be achieved by first solving a partial order production  problem , then solving the sorting with partial information  problem on the output .",
    "a proof that there exists a decision tree achieving the lower bound up to a constant factor has been known for some time ( see in particular kahn and saks  @xcite ) .",
    "this is related to the @xmath43@xmath44 conjecture of fredman  @xcite and linial  @xcite .",
    "kahn and kim  @xcite provided a polynomial time algorithm that finds the actual comparisons .",
    "they show that choosing the comparison that causes the entropy of @xmath45 to increase the most leads to a decision tree that is near - optimal in the above sense .",
    "[ [ overview ] ] overview + + + + + + + +    in section  [ sec - perfect - graphs ] , we study the entropy of perfect graphs .",
    "we show that it is possible to approximate the entropy of a perfect graph @xmath46 using a simple greedy coloring algorithm .",
    "more precisely , we prove that any such approximation is at most @xmath47 , where @xmath48 denotes the entropy of graph @xmath46 .",
    "section  [ sec - algorithm ] explains how to apply this result to solve the partial order production  problem algorithmically .",
    "we begin the section by remarking that entropy is bound to play a central role for the problem since @xmath49 , where @xmath50 denotes the entropy of poset @xmath14 .",
    "the preprocessing phase of our algorithm starts by applying the greedy coloring algorithm studied in section  [ sec - perfect - graphs ] to the comparability graph of @xmath14 .",
    "we then modify this coloring ( we  uncross \" the colors ) in order to obtain an extension of @xmath14 which is an interval order @xmath51 .",
    "another application of the greedy coloring algorithm , this time on the comparability graph of @xmath51 , yields a weak order @xmath29 extending @xmath51 .",
    "using our result on perfect graphs , we prove that the entropy of @xmath29 is not much larger than that of @xmath14 , that is , @xmath52 .",
    "the ordering phase of the algorithm simply runs then a multiple selection algorithm based on the weak order @xmath29 .",
    "we use a multiple selection algorithm from kaligosi _ et al . _",
    "@xcite that performs a number of comparisons close to the information - theoretic lower bound .",
    "we conclude the section by proving that the preprocessing complexity of our algorithm is @xmath28 .    finally , in section  [ sec - discussion ] , we discuss the number of comparisons and study the existence of an algorithm solving the partial order production  problem in @xmath53 comparisons .",
    "we give an example showing that such an algorithm can not always reduce the problem to the case where the target poset is a weak order .",
    "more specifically , we exhibit a family of interval orders with entropy at most @xmath54 , any weak order extension of which has entropy at least @xmath55 .",
    "we recall that a subset @xmath1 of vertices of a graph is a _",
    "stable set _ ( or _ independent set _ ) if the vertices in @xmath1 are pairwise nonadjacent . also , a graph @xmath46 is _ perfect _ if @xmath56 holds for every induced subgraph @xmath32 of @xmath46 , where @xmath57 and @xmath58 denote the clique and chromatic numbers of @xmath32 , respectively .",
    "let us recall similarly that the _ stable set polytope _ of an arbitrary graph @xmath46 with vertex set @xmath33 and order @xmath3 is the @xmath3-dimensional polytope @xmath59 where @xmath60 is the characteristic vector of the subset @xmath1 , assigning the value @xmath61 to every vertex in @xmath1 , and @xmath62 to the others .",
    "the _ entropy _ of @xmath46 is defined as ( see  @xcite ) @xmath63 for example , if @xmath64 is the graph with @xmath65 and @xmath66 , then @xmath67 and the minimum in ( [ def - h ] ) is attained for @xmath68 .",
    "note that graph entropy was originally defined with respect to a given probability distribution on @xmath33 .",
    "however , for our purposes we can take the uniform distribution , as in @xcite . in this case",
    "we obtain equation ( [ def - h ] ) .",
    "an upper bound on @xmath48 can be found as follows : first , use the greedy coloring algorithm that removes iteratively a maximum stable set from @xmath46 , giving a sequence @xmath69 of stable sets of @xmath46 .",
    "if @xmath46 is perfect , this can be done in polynomial time ( see , e.g. , grtschel , lovsz and schrijver @xcite ) . next , let @xmath70 be defined as @xmath71 by definition , @xmath72 .",
    "we call any such point @xmath73 a _ greedy point_. the value of the objective function in the definition of @xmath48 for @xmath74 is @xmath75 .",
    "we refer to the latter quantity simply as the entropy of @xmath74 .",
    "it turns out that this gives a good approximation of @xmath48 when @xmath46 is a perfect graph .",
    "[ th - greedy - perfect - graphs ] let @xmath46 be a perfect graph on @xmath3 vertices and denote by @xmath76 the entropy of an arbitrary greedy point @xmath77 .",
    "then @xmath78 for all @xmath79 , and in particular @xmath80    a key tool in our proof of theorem  [ th - greedy - perfect - graphs ] is a min - max relation of csiszr , krner , lovsz , marton , and simonyi  @xcite relating the entropy of a perfect graph @xmath46 to the entropy of its complement @xmath81 :    [ th - sum - log - n ] if @xmath46 is a perfect graph on @xmath3 vertices , then @xmath82 .",
    "we now turn to the proof of theorem  [ th - greedy - perfect - graphs ] .",
    "let @xmath69 be the sequence of stable sets of @xmath46 selected by the greedy algorithm ( in the order the algorithm removes them ) .",
    "so @xmath83 is a maximum stable set in @xmath46 , @xmath84 is a maximum stable set in @xmath85 , and so on .",
    "the outline of the proof is as follows : we first use the sets @xmath69 to define a point @xmath86 , where @xmath33 is the vertex set of @xmath46 .",
    "we then show that @xmath87 belongs to the stable set polytope of the _ complement _ @xmath81 of @xmath46 , that is , @xmath88 .",
    "finally , we derive the desired inequality by combining the upper bound on @xmath89 implied by @xmath87 with theorem  [ th - sum - log - n ] .    fix @xmath90 . for each vertex",
    "let @xmath92 be the unique index in @xmath93 such that @xmath94 .",
    "we define @xmath87 by letting , for each vertex @xmath95 of @xmath46 , @xmath96 we claim that for every stable set @xmath1 of @xmath46 : @xmath97    write the stable set @xmath1 as @xmath98 , where @xmath99 is the @xmath39th subset of @xmath1 taken by the greedy algorithm during its execution . for every @xmath100",
    ", we have @xmath101 and @xmath102 , since the greedy algorithm could have selected the set @xmath1 when it took @xmath103 .",
    "more generally , for every @xmath104 and @xmath105 , we have @xmath106 .",
    "it follows in particular that we can enumerate the points of @xmath1 as @xmath107 , @xmath108 ,  , @xmath109 in such a way that @xmath110 we thus have @xmath111 equation   follows .",
    "two classical results on perfect graphs are that the stable set polytope is completely described by the non - negativity and clique inequalities , that is , @xmath112 ( see chvtal  @xcite ) , and that the complement @xmath81 of @xmath46 is also a perfect graph ( lovsz  @xcite )",
    ". combining these two results with   shows that @xmath88 .",
    "using theorem  [ th - sum - log - n ] , we then deduce @xmath113 hence , @xmath114 , for all @xmath90 . by choosing @xmath115",
    "if @xmath116 , and @xmath117 otherwise , we obtain @xmath118 .",
    "we denote by @xmath119 the comparability graph of a poset @xmath120 , and let @xmath121 .",
    "note that a stable set in @xmath119 is an antichain in @xmath14 , that is , a set of mutually incomparable elements .",
    "note also that @xmath119 is perfect , a basic result that is dual to dilworth s theorem , see , e.g. , @xcite .",
    "the relevance of the notion of graph entropy in the context of sorting was first observed by kahn and kim  @xcite .",
    "using the fact that the volume of @xmath122 equals @xmath123 ( see stanley  @xcite ) , they proved the following result .    for any poset @xmath14 of order @xmath3 , @xmath124",
    "when written as @xmath125 the above inequalities become intuitively clear , since @xmath126 is the ( maximum ) volume of a box contained in @xmath122 , @xmath127 is the volume of @xmath122 , and @xmath128 is the volume of a simplex containing @xmath122 .",
    "the lemma directly implies the following equality for every poset @xmath14 : @xmath129    we recall that a poset is said to be a _",
    "weak order _ whenever its comparability graph is a complete @xmath130-partite graph , for some @xmath130 .",
    "such a poset @xmath131 can be partitioned into @xmath130 maximal antichains @xmath132 ,  , @xmath133 , the _ layers _ of @xmath29 , such that @xmath134 whenever there exist indices @xmath39 and @xmath135 such that @xmath136 , @xmath137 and @xmath138 .",
    "when restricted to weak orders , the partial order production  problem resembles the partial sorting  problem , with @xmath139 .",
    "our key idea is to show that , using ( twice ) the greedy coloring algorithm presented in the previous section , we can efficiently extend _ extends _ a poset @xmath14 if they have the same ground set @xmath33 and @xmath140 implies @xmath141 , for all @xmath142 . ]",
    "the given poset @xmath14 to a weak order @xmath29 whose entropy is close to that of @xmath14 .",
    "the reason why we have to use twice the greedy algorithm is that the obtained coloration might not be `` ordered '' ( might not represent the stable sets of a weak order ) .",
    "however , we describe below how to uncross this coloring in order to extend @xmath14 to an interval order without increasing too much the entropy .",
    "we show that applying our greedy coloring to an interval order provides an `` ordered '' coloring , which allows us to run a second time our greedy algorithm , providing an extension which is a weak order .",
    "we then simply run an efficient multiple selection procedure , with @xmath29 as input .",
    "we show that , because replacing @xmath14 by @xmath29 does not increase the entropy too much , the resulting number of comparisons is close to @xmath4 .",
    "the preprocessing phase is composed of three steps , each of which can be performed in polynomial time . in the first step , we apply the greedy coloring procedure to @xmath119 , to obtain a greedy point @xmath74 .",
    "this step makes use of an auxiliary network defined from @xmath14 .",
    "then , in the second step , using again the auxiliary network , we extend @xmath14 to an interval order @xmath51 whose entropy is not larger than that of @xmath74 .",
    "this allows us to  uncross \" the antichains used in @xmath74 .",
    "( an alternative way of obtaining the interval order @xmath51 is to apply kahn and kim s @xcite laminar decomposition lemma to @xmath73 . ) finally , in the third step , we apply the greedy coloring procedure again , this time on @xmath143 , to obtain the weak order @xmath29 . see figure [ fig - weakextension ] for an illustration of steps 1 and 2 .",
    "2.5 cm +    [ [ auxiliary - network ] ] auxiliary network + + + + + + + + + + + + + + + + +    let @xmath120 be any poset .",
    "we say that @xmath95 is _ covered _ by @xmath144 in @xmath14 if @xmath140 , @xmath145 and @xmath146 implies @xmath147 or @xmath148 .",
    "the _ hasse diagram _ of @xmath14 is the network with node set @xmath33 , and arc set @xmath149 is covered by @xmath144 in @xmath150 .",
    "an element @xmath95 of @xmath14 is _ minimal _ ( resp .",
    "_ maximal _ ) if @xmath151 ( resp .",
    "@xmath152 ) implies @xmath147 .",
    "we construct a network @xmath153 from the hasse diagram of @xmath14 by first uncontracting each element @xmath91 to an arc @xmath154 and then adjoining a source node @xmath155 sending an arc to each minimal element , and a sink node @xmath156 receiving an arc from each maximal element .",
    "the resulting network has node set @xmath157 and arc set @xmath158 & & \\{(v^+,w^- ) : v \\textrm { is covered by } w \\textrm { in } p\\ } \\cup \\{(v^+,t ) : v \\in v,\\ v \\textrm { maximal in } p\\}. \\end{array}\\ ] ] this network gives a useful characterization of points in the stable set polytope of the comparability graph of @xmath14 , as is explained in the next lemma .",
    "[ lem - potential ] let @xmath14 be a poset with ground set @xmath33 , let @xmath159 and @xmath160 .",
    "a vector @xmath161 belongs to @xmath162 if and only if there exists a vector @xmath163 ( called a _ potential _ )",
    "such that @xmath164 , @xmath165 , @xmath166 is nondecreasing along arcs of @xmath167 , and @xmath168 for all @xmath91 .",
    "again , we use ( see chvtal  @xcite ) : @xmath169    we first show sufficiency .",
    "let @xmath161 be a vector that admits a potential @xmath170 .",
    "consider any chain @xmath171 in @xmath14 with @xmath172 ( cliques in @xmath46 correspond to chains in @xmath14 ) .",
    "then @xmath173 & = & y_{t } - y_{s } = 1.\\end{aligned}\\ ] ] it follows that @xmath174 .    for necessity",
    ", consider @xmath174 . for @xmath91 , we let @xmath175 be the maximum total weight of a chain of @xmath14 whose maximum with respect to @xmath176 is @xmath95 , when each vertex @xmath144 is given the weight @xmath177 , and @xmath178 .",
    "then we let @xmath179 and @xmath180 . as is easily verified",
    ", @xmath166 is a potential for @xmath181 .",
    "it follows that @xmath50 is the optimum value of the following convex minimization problem with a polynomial number of variables and constraints : @xmath182 &                   & y_{p }    & \\leqslant & y_{q } & \\forall ( p , q ) \\in a(d)\\\\ &                   & y_{s } & = & 0\\\\ &                   & y_{t }   & = & 1 .",
    "\\end{array}\\ ] ] we remark that this formulation shows that @xmath50 can be computed to within any fixed precision in strongly polynomial time , using interior point methods ( see for instance  @xcite ) .",
    "however , approximating @xmath50 using a greedy point will be enough for our purposes , and will moreover give a better upper bound on the complexity of our algorithm .",
    "[ [ greedy - extensions ] ] greedy extensions + + + + + + + + + + + + + + + + +    let @xmath74 be a greedy point in @xmath162 , as defined in section  [ sec - perfect - graphs ] . consider the potential @xmath183 defined from @xmath74 as in the proof of lemma  [ lem - potential ] : for @xmath184 , we let @xmath185 be the maximum ( total ) weight of a chain of @xmath14 ending in @xmath95 , where each vertex @xmath144 has weight @xmath186 , and @xmath187 .",
    "let also @xmath188 and @xmath189 .    from this potential @xmath190 , we compute an interval order @xmath51 extending @xmath14 whose entropy is not larger than that of @xmath74 .",
    "the ground set of @xmath51 is @xmath33 .",
    "we let @xmath191 whenever @xmath192 .",
    "thus the open intervals @xmath193 ( for @xmath91 ) provide an interval representation of @xmath51 . because @xmath140 implies @xmath192 , which in turn implies @xmath191 , the interval order @xmath51 extends @xmath14 .",
    "the entropy of @xmath51 is not larger than that of @xmath74 because @xmath194 remains feasible for the minimization problem ( h - potential ) defined above , after @xmath14 is replaced by @xmath51 .",
    "apply again the greedy coloring algorithm , but now on @xmath143 .",
    "let @xmath132 ,  , @xmath133 denote the antichains of @xmath51 produced by the greedy coloring algorithm . because @xmath51 is an interval order , we can find a permutation @xmath195 of @xmath93 such that @xmath196 , @xmath197 and @xmath198 imply @xmath138 .",
    "thus , the weak order @xmath29 with ground set @xmath33 obtained by setting @xmath134 whenever @xmath197 and @xmath198 with @xmath138 is an extension of @xmath51 .",
    "such a weak order @xmath29 is said to be a _",
    "greedy extension _ of the original poset @xmath14 .",
    "[ lem - greedy ] let @xmath14 be a poset and @xmath29 one of its greedy extensions .",
    "then @xmath199 for all @xmath79 , and in particular @xmath200    let @xmath201 .",
    "let @xmath51 denote the intermediate interval order used to obtain @xmath29 .",
    "theorem  [ th - greedy - perfect - graphs ] implies @xmath202 in addition to theorem  [ th - greedy - perfect - graphs ] , for the first inequality we used the fact that @xmath203 and for the second one , we used the fact that the greedy coloring of @xmath51 directly gives the unique decomposition of @xmath29 in maximal stable sets .",
    "this shows the first part of the claim .",
    "for the second part , again take @xmath115 if @xmath204 , and @xmath205 otherwise .",
    "[ [ algorithm - and - complexity ] ] algorithm and complexity + + + + + + + + + + + + + + + + + + + + + + + +    the above results directly suggest the following algorithm : compute a greedy extension @xmath29 of @xmath14 , and run a multiple selection procedure on @xmath0 with respect to @xmath29 . in terms of the number of comparisons between elements of @xmath0 , we only incur a controlled penalty .",
    "[ th - ub ] the partial order production  problem can be solved in polynomial time using at most @xmath206 comparisons between elements of @xmath0 in the worst case .",
    "the weak order extension @xmath29 can be computed in polynomial time .",
    "let us denote by @xmath132 , ",
    ", @xmath133 its layers .",
    "we run the multiple selection algorithm on the elements of @xmath0 , with the ranks @xmath207 ( for @xmath208 ) .",
    "kaligosi _ et al . _",
    "@xcite give a multiple selection algorithm that requires only @xmath209 comparisons in the worst case , where @xmath210 is the information - theoretic lower bound for @xmath29 .",
    "thus @xmath211 hence @xmath212 , and the theorem follows .",
    "we conclude the section by discussing the preprocessing complexity of our algorithm .",
    "the first execution of the greedy coloring algorithm can be done in time @xmath213 , where @xmath214 is the number of arcs in the network @xmath160 ( notice @xmath215 and @xmath216 ) , as we now briefly explain .",
    "the algorithm finds maximal antichains in the graph by decrementing a flow on the auxiliary network .",
    "this flow has to satisfy lower bounds on the arcs .",
    "let @xmath217 , @xmath218 , and put a lower bound of @xmath219 on each arc @xmath16 of the form @xmath220 with @xmath221 , of @xmath222 on every other arc @xmath16 of @xmath167 . start with an arbitrary integer @xmath155@xmath156 flow @xmath223 of value @xmath3 such that @xmath224 for every arc @xmath225 .",
    "let @xmath226 be the set of nodes of @xmath167 that can be reached from @xmath155 following a _ decrementing path _ , namely , a path @xmath227 with @xmath228 such that , for every @xmath229 , either @xmath230 and @xmath231 , or @xmath232 .",
    "now , there are two cases : ( 1 ) @xmath233 .",
    "thus there exists a decrementing @xmath155@xmath156 path .",
    "we then decrement by @xmath61 the flow value of @xmath223 using the latter path .",
    "( 2 ) @xmath234 .",
    "observe that no arc of @xmath167 enters the set @xmath226 and that the arcs @xmath16 going out of @xmath226 satisfy @xmath235 .",
    "it follows that @xmath236 is an antichain of @xmath237 .",
    "( here , @xmath238 denotes the set of arcs of @xmath167 going out of @xmath226 . )",
    "moreover , since the flow value of @xmath223 equals @xmath239 , the antichain @xmath240 is maximum among the antichains of @xmath241 .",
    "this is because , by definition of our lower bounds , the flow value is at least @xmath242 , for every antichain @xmath243 contained in @xmath237 .",
    "we then let @xmath244 for every @xmath245 , set @xmath246 , increment @xmath39 by @xmath61 , and repeat the above steps , until @xmath247 .",
    "computing the set @xmath226 , decrementing the flow , and finding the antichain @xmath240 are steps that can be done in time @xmath248 .",
    "since we go through the main loop at most @xmath249 times , this implementation of the greedy algorithm runs in time @xmath250 .",
    "the greedy point @xmath74 can be computed in time @xmath251 .",
    "the corresponding potential @xmath190 can be found in @xmath248 using a simple dynamic program .",
    "the second execution of the greedy coloring algorithm can be done in time @xmath252 , using the fact that the comparability graph of the interval order @xmath51 is a co - interval graph .",
    "finally , a bound on the complexity of the multiple selection procedure is @xmath252 .",
    "so the whole algorithm runs in @xmath253 .",
    "a natural question is whether there exists an algorithm for partial order production that does at most @xmath53 comparisons between elements of @xmath0 .",
    "we show in this section that every algorithm that first extends the target poset to a weak order and then solves the problem on the weak order can be forced to make @xmath254 comparisons , both in the worst case and the average case .",
    "this is a consequence of the following theorem :        * @xmath260 consists of a unique vertex , and * for @xmath261 , the graph @xmath262 is obtained by first taking the disjoint union of @xmath263 ( the `` central clique '' ) with two copies of @xmath264 , and then making half of the vertices of the central clique adjacent to all vertices in the first copy , and the other half to all those in the second copy .",
    "it is easily seen that @xmath262 is indeed an interval graph , as is suggested in figure  [ fig - tight ] .",
    "the graph @xmath262 has @xmath265 vertices .",
    "the complement @xmath266 of @xmath262 is the comparability graph of the interval order @xmath267 defined by an interval representation of @xmath262 .        by construction ,",
    "the maximal stable sets of the graph @xmath266 all have @xmath270 elements , and there are @xmath271 such maximal stable sets .",
    "we define a point @xmath272 of the stable set polytope @xmath273 as follows : @xmath274 where @xmath275 are the maximal stable sets of @xmath266 .",
    "observe that , for every @xmath276 , there are @xmath270 vertices in @xmath266 that belong to exactly @xmath277 different maximal stable sets ( that is , there are @xmath270 intervals of each different length in the interval representation suggested in figure  [ fig - tight ] ) . we thus obtain the following upper bound on the entropy of @xmath267 : @xmath278 the lemma follows .",
    "we proceed by showing that every weak order extension of @xmath267 has relatively large entropy compared to @xmath267 .",
    "we first introduce some definitions .",
    "consider an arbitrary graph @xmath46 and a coloring @xmath279 of its vertices .",
    "similarly as how greedy points are defined ( see section  [ sec - perfect - graphs ] ) , one can associate an entropy to the latter coloring , namely , the entropy of the probability distribution @xmath280 : @xmath281 the minimum entropy of a coloring is known as the _ chromatic entropy _ of @xmath46 , and is denoted by @xmath282 .",
    "the chromatic entropy can be thought of as a constrained version of the graph entropy , in which the stable sets involved in the definition of @xmath48 are required to form a partition of the vertices of @xmath46 .",
    "the maximal antichains of @xmath29 are pairwise disjoint , hence they correspond to a coloring of @xmath46 .",
    "the entropy of @xmath29 is equal to the entropy of the latter coloring , and thus is at least @xmath282 .",
    "lemma  [ lem - chromatic - entropy ] suggests finding a ( good ) lower bound on @xmath284 , the chromatic entropy of @xmath266 . to achieve that , we make use of the following result of  @xcite ( see corollary  1 in that paper )",
    ".      we can therefore restrict ourselves to analyzing the entropy of greedy colorings of @xmath266 . recall that all maximal stable sets in @xmath266 have the same cardinality @xmath270 .",
    "consider the greedy coloring of @xmath266 defined recursively as follows : take first the stable set of cardinality @xmath270 that corresponds to the central clique in @xmath262 , and then , if @xmath261 , recurse on the two copies of @xmath286 that are left .",
    "let @xmath287 denote the entropy of the resulting coloring of @xmath266 .",
    "let @xmath259 and consider the interval order @xmath267 defined above , of order @xmath293 .",
    "let also @xmath29 be an arbitrary weak order extending @xmath267 .",
    "combining lemmata  [ lem - tight - koerner ] ,  [ lem - chromatic - entropy ] and  [ lem - tight - greedy ] with theorem  [ th - algo ] gives @xmath294 as claimed .",
    "s.  carlsson and j.  chen .",
    "the complexity of heaps . in _ proceedings of the third annual acm - siam symposium on discrete algorithms ( soda 92 ) , orlando ( florida ) , united states _ , pages 393402 , philadelphia , pa , usa , 1992 . society for industrial and applied mathematics .    s.  carlsson and j.  chen .",
    "some lower bounds for comparison - based algorithms . in _ proc .",
    "2nd european sympositum on algorithms ( esa 94 ) , utrecht , the netherlands _ , volume 855 of _ lecture notes in computer science _ , pages 106117 .",
    "springer - verlag , 1994 .",
    "j.  chen .",
    "average cost to produce partial orders . in _ proc .",
    "5th international symposium on algorithms and computation ( isaac 94 ) , beijing , p. r. china _ , volume 834 of _ lecture notes in computer science _ , pages 155163 .",
    "springer - verlag , 1994 .",
    "j.  c.  culberson and g.  j.  e.  rawlins . on the comparison cost of partial orders .",
    "technical report tr88 - 01 , department of computing science , university of alberta , edmonton , alberta , canada t6 g 2e8 , 1988 .",
    "k.  kaligosi , k.  mehlhorn , j.  i. munro , and p.  sanders . towards optimal multiple selection . in _ proc .",
    "international conference on automata , languages , and programming ( icalp05 ) _ , _ lecture notes in computer science _ , pages 103114 .",
    "springer - verlag , 2005 .",
    "m.  e.  saks .",
    "the information theoretic bound for problems on ordered sets and graphs . in _ graphs and order , banff , alta .",
    ", 1984 _ , volume 147 of _ nato adv .",
    "_ , pages 137168 , dordrecht , 1985 . reidel ."
  ],
  "abstract_text": [
    "<S> we consider the problem of _ partial order production _ : arrange the elements of an unknown totally ordered set @xmath0 into a target partially ordered set @xmath1 , by comparing a minimum number of pairs in @xmath0 . </S>",
    "<S> special cases include sorting by comparisons , selection , multiple selection , and heap construction .    </S>",
    "<S> we give an algorithm performing @xmath2 comparisons in the worst case . </S>",
    "<S> here , @xmath3 denotes the size of the ground sets , and @xmath4 denotes a natural information - theoretic lower bound on the number of comparisons needed to produce the target partial order .    our approach is to replace the target partial order by a weak order ( that is , a partial order with a layered structure ) extending it , without increasing the information theoretic lower bound too much . </S>",
    "<S> we then solve the problem by applying an efficient multiple selection algorithm . </S>",
    "<S> the overall complexity of our algorithm is polynomial . </S>",
    "<S> this answers a question of yao ( siam j.  comput .  18 , 1989 ) .    </S>",
    "<S> we base our analysis on the entropy of the target partial order , a quantity that can be efficiently computed and provides a good estimate of the information - theoretic lower bound .    </S>",
    "<S> * keywords : * partial order , graph entropy </S>"
  ]
}
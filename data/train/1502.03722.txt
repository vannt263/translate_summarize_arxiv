{
  "article_text": [
    "in collusion - resistant fingerprinting , a distributor aims to embed fingerprints in digital content so that even if several users collude and mix their fingerprinted copies into a new copy , the resulting pirate version can still be traced back to the guilty parties . in 2003 ,",
    "the seminal work of tardos  @xcite showed that in the non - adaptive setting , fingerprinting codes with this property must have a length @xmath0 quadratic in the number of colluders @xmath1 and logarithmic in the total number of users @xmath2 ( i.e. , @xmath3 ) , and that such codes exist .",
    "these codes guarantee that with a proper decoding algorithm , at least one of the colluders can be found with high probability . later , in 2013 it was shown  @xcite that in the adaptive setting , where code words are sent out symbol by symbol and the distributor is allowed to base future decisions on previous results , in fact _ all _ colluders can provably be found with a code length @xmath3 , using a dynamic version of tardos scheme .",
    "results in fingerprinting have recently found applications in other fields as well , including group testing  @xcite and differential privacy  @xcite .    over the years",
    ", various follow - up works to tardos milestone paper have allowed us to understand why tardos scheme is designed the way it is designed  @xcite , how the scheme can be further improved theoretically  @xcite and practically  @xcite , what are the limitations of fingerprinting in general  @xcite and of the optimized ( symmetric ) tardos scheme  @xcite , and how these limitations can be overcome by further modifying the scheme  @xcite to achieve asymptotic optimality  @xcite .",
    "most notably , connections were made between fingerprinting , game theory , channel coding , and statistical hypothesis testing , which ultimately allowed us to explain why the optimal non - adaptive designs are optimal  @xcite .",
    "although various of these insights directly carry over to the adaptive setting , in this area several questions remain :    * is the `` dynamic tardos scheme ''  @xcite optimal ? * what motivates the design of this scheme ?",
    "answering these and related questions may ultimately lead to the same level of understanding for the adaptive case as for the non - adaptive setting , allowing practitioners to make well - motivated design choices in the adaptive setting as well .",
    "+ * contributions . * in this paper we answer the second question by showing a connection with what is known in the literature as the _ sequential probability ratio test ( sprt ) _ , invented by wald in the 1940s  @xcite . as a result , we are also able to take a first step towards answering the first question : within the class of _ sequential _ fingerprinting schemes , where the code book is not constructed adaptively , both the dynamic tardos scheme and schemes built from wald s sprt are essentially optimal for the uninformed fingerprinting game .",
    "we discuss in detail how sequential fingerprinting schemes can naturally be constructed from wald s sprt , and how various results from the literature can be used to tune these schemes to different scenarios .",
    "we finally compare the dynamic tardos scheme to wald s sprt , and highlight why in general wald s scheme should be preferred . +",
    "* roadmap . *",
    "first , in section  [ sec : model ] we outline the fingerprinting model considered in this paper . in section  [ sec : tardos ] we briefly review the dynamic tardos scheme and its variants .",
    "then , in section  [ sec : wald ] we describe wald s sequential probability ratio test procedure , and how it can be applied to fingerprinting to obtain optimal sequential fingerprinting schemes .",
    "next , in section  [ sec : comp ] we illustrate the similarities and differences between these schemes through explicit examples , on the way showing that both schemes are asymptotically optimal for the uninformed fingerprinting game .",
    "finally , in section  [ sec : overview ] we give an overview of the main characteristics of both schemes , which may allow practitioners to make a well - informed choice between the two schemes .",
    "the collusion - resistant fingerprinting problem is often modeled as the following two - person game between the distributor @xmath4 and the coalition of pirates @xmath5 .",
    "the set of colluders is assumed to be a random subset of size @xmath6 from the complete set of @xmath2 users @xmath7 , and the identities of these colluders are unknown to the distributor .",
    "the distributor might not know @xmath1 either , and he may only have a ( crude ) upper bound @xmath8 on @xmath1 .",
    "the aim of the game for the distributor is to discover the identities of the colluders without accidentally accusing innocent users , with as little effort as possible .",
    "the colluders want to prevent this and remain hidden .",
    "the game consists of the following three phases : the distributor uses an _",
    "encoder _ to generate fingerprints ; the colluders employ a _ collusion channel _ to generate pirate output ; and the distributor uses a _ decoder _ to map pirate output to a set of accused users .",
    "we describe these three phases below .",
    "[ [ a .- encoder ] ] a. encoder + + + + + + + + + +    the distributor generates a code @xmath9 , consisting of binary code words @xmath10 for each user @xmath11 , and each column @xmath12 corresponds to a different segment of the content . is a code with entries from an alphabet of size @xmath13 , but here we restrict our attention to the case @xmath14 . ] a common restriction on the encoding process is to assume that @xmath15 is created by first generating a _ bias vector _ @xmath16^{\\ell}$ ] , by choosing each entry @xmath17 independently from a certain distribution @xmath18 , and then generating @xmath15 using @xmath19 .",
    "schemes with this property are sometimes called _ bias - based schemes_. as initially suggested by tardos  @xcite and later proven by huang and moulin  @xcite , the best way to build bias - based encoders ( for large coalitions , in the uninformed setting ) is to use the arcsine distribution for generating @xmath17 s . for this distribution",
    ", we have the following distribution function @xmath18 : @xmath20 unless stated otherwise , throughout the paper we will assume that this encoder is used for generating biases .    [ [ b .- collusion - channel ] ] b. collusion channel + + + + + + + + + + + + + + + + + + + +    given @xmath15 , the entries can be used to select and embed watermarks in the content , and the content is sent out to the users .",
    "the colluders get together , compare their copies , and use a _ collusion channel _ or pirate strategy @xmath21 to select the pirate output @xmath22 .",
    "if the pirate attack is symmetrical both in the colluders and in the positions @xmath23 , then the collusion channel can be modeled by a vector @xmath24^{c+1}$ ] , with entries @xmath25 indicating the probability of outputting a @xmath26 when pirates receive @xmath27 ones and @xmath28 zeros .",
    "[ [ c .- decoder ] ] c. decoder + + + + + + + + + +    after the pirate output has been distributed , the distributor intercepts it and applies a decoding algorithm to @xmath29 to compute a set @xmath30 of accused users .",
    "this is commonly done by assigning scores to users , and accusing those users whose scores exceed a predefined threshold @xmath31 .",
    "the distributor wins the game if @xmath32 and loses if @xmath33 , which could be because an innocent user @xmath34 is falsely accused ( a false positive error ) , or because a guilty user @xmath35 is not accused ( a false negative error ) .",
    "we often write @xmath36 and @xmath37 for ( upper bounds on ) the false positive and false negative probabilities .",
    "+ finally , the differences between non - adaptive ( static ) fingerprinting , adaptive ( dynamic ) fingerprinting , and sequential fingerprinting can be explained by showing in which order these phases take place . denoting by @xmath38 the three phases corresponding to the @xmath23th segment of the content , we can order the phases as follows :    * non - adaptive : @xmath39 } ; \\ , b_{[1 , \\dots , \\ell ] } ; \\ , c_{[1 , \\dots , \\ell]}$ ] .",
    "* sequential : @xmath39 } ; \\ , b_1 ; \\ , c_1 ; \\ , b_2 ; \\ , c_2 ; \\ , \\dots ; \\ , b_{\\ell } ; \\ , c_{\\ell}$ ] . *",
    "adaptive : @xmath40 .    in other words : in the adaptive setting the code can be adjusted and accusations can be made after every symbol ; in sequential fingerprinting only users can be accused between rounds ; and in non - adaptive settings the distributor is only allowed to make a final decision at the end of the game .    while most work in the literature focuses on the non - adaptive setting , some work has also been done on sequential  @xcite and adaptive fingerprinting  @xcite . in this paper",
    "we will mostly deal with the sequential setting .",
    "in tardos original scheme  @xcite and many of its subsequent variants , decoding in the non - adaptive setting is done as follows .",
    "first , for each segment @xmath23 and user @xmath41 , scores @xmath42 are assigned using a score function @xmath43 .",
    "then , in the non - adaptive setting , a user @xmath11 is accused iff @xmath44 for some well - chosen threshold @xmath31 . choosing a suitable score function is crucial , and it was long thought that the following symmetrized version  @xcite of tardos original proposal was the best choice : @xmath45 this function turns out to work quite well against arbitrary pirate attacks , and it has the convenient property that regardless of the pirate strategy , one always has @xmath46 , @xmath47 , and @xmath48",
    ", where the hypotheses @xmath49 and @xmath50 correspond to :    * @xmath49 : user @xmath41 is innocent ( @xmath34 ) . * @xmath50 : user @xmath41 is guilty ( @xmath35 ) .    as convenient as this decoder may be , it is known to be suboptimal  @xcite , with code lengths which are up to a factor @xmath51 longer than required .",
    "using various different approaches ( e.g.  lagrange optimization  @xcite , neyman - pearson decoding  @xcite , bayesian decoding  @xcite , map decoding  @xcite , empirical mutual information decoding  @xcite ) it was later found that there are various ways to construct decoders for the uninformed setting in fingerprinting with a better performance than the symmetric score function .",
    "various of these decoders were recently benchmarked in  @xcite , indicating that different decoders work better in different settings . for comparison with wald",
    "s sprt we will continue the description of tardos scheme using neyman - pearson - motivated decoders , as considered in e.g.  @xcite , but other decoders considered in  @xcite may be used as well .",
    "after obtaining the `` evidence '' @xmath52 , the distributor wants to distinguish between whether user @xmath41 is guilty or not to be part of the evidence , instead of @xmath15 . using all of @xmath15 for decoding would correspond to joint decoding ; this is discussed later on . ] .",
    "the neyman - pearson lemma tells us that the most powerful test to distinguish between @xmath49 and @xmath50 ( minimizing one error probability , when the other is fixed ) is to test whether the following likelihood ratio exceeds an appropriately chosen threshold @xmath53 .",
    "we write @xmath54 for random variables @xmath55 .",
    "@xmath56 taking logarithms , and noting that different positions @xmath23 are i.i.d . , testing whether a user s likelihood ratio exceeds @xmath53 is equivalent to testing whether his score @xmath57 exceeds @xmath58 for @xmath43 defined as follows .",
    "here we omit subscripts on @xmath59 , @xmath60 and @xmath61 , as the random variables are i.i.d .  for different @xmath62 .",
    "@xmath63 results of abbe and zheng  @xcite have shown that in certain applications , a ( generalized ) linear decoder designed against the worst - case attack is asymptotically optimal .",
    "since the worst - case attack for finite @xmath1 is somewhat hard to compute , but is known to be close to the interleaving attack  @xcite ( and asymptotically equal to it  @xcite ) , an approximation of this optimal decoder may be obtained by assuming the colluders used the interleaving attack @xmath64 , defined by @xmath65 in that case , working out the probabilities for fixed @xmath1 leads to the following score function @xmath43  @xcite : @xmath66    ( 0 , -3.5 )  ( 0 , 3.5 ) ; ( 0 , 0 ) ",
    "( 12.2 , 0 ) ; at ( -0.7 , 3 ) @xmath67 ; at ( 12 , -0.5 ) @xmath68 ; at ( -0.3 , 0 ) @xmath69 ; ( 0 , 0 )  ( 10 , 1.5 ) ",
    "( 10 , 2.207 )  plot [ smooth , samples=100 , domain=0:10 ] ( , 0.15*+ sqrt(0.05 * ) )  cycle ; ( 0 , 0 )  ( 10 , 1.5 )  ( 10 , 0.793 )  plot [ smooth , samples=100 , domain=0:10 ] ( , 0.15 * - sqrt(0.05 * ) )  cycle ; plot ( , 0.15*+ sqrt(0.05 * ) ) ; plot ( , 0.15 * ) ; plot ( , 0.15 * - sqrt(0.05 * ) ) ; ( 0 , 0 )  ( 10 , -1.5 ) ",
    "( 10 , -0.275 )  plot [ smooth , samples=100 , domain=0:10 ] ( , -0.15*+ sqrt(0.15 * ) )  cycle ; ( 0 , 0 )  ( 10 , -1.5 )  ( 10 , -2.725 )  plot [ smooth , samples=100 , domain=0:10 ] ( , -0.15 * - sqrt(0.15 * ) )  cycle ; ( 0 , 0 )  ( 12.2 , 0 ) ; plot ( , -0.15*+ sqrt(0.15 * ) ) ; plot ( , -0.15 * ) ; plot ( , -0.15 * - sqrt(0.15 * ) ) ; ( 10 , 0.2 ) ",
    "( 10 , 3.5 ) ; at ( 10.5 , 2.0 ) accept @xmath50 ; ( 10 , 0.2 )  ( 10 , -3.5 ) ; at ( 10.5 , -1.7 ) accept @xmath49 ; at ( 10 , 0.2 ) ; at ( 10.8 , 0.3 ) @xmath70 ;    to sketch the situation of cumulative user scores and the accusation procedure , figure  [ fig : sketch1 ] outlines the scores @xmath71 against @xmath68 , for @xmath72 up to the final moment of decision @xmath73 . assuming a colluder - symmetric collusion channel , scores of users @xmath34 follow a certain random walk with a negative drift @xmath74 and a relatively large variance @xmath75 , while scores of guilty users @xmath35 follow a random walk with a positive drift @xmath76 and a smaller variance @xmath77 .",
    "the improvement described in  @xcite for the adaptive setting does not change the code generation phase at all , so although it was coined the _ dynamic _ tardos scheme , it may more suitably be called the _ sequential _ tardos scheme .",
    "the modification compared to the non - adaptive scheme described above , to make better use of the sequential setting , is the following : instead of only cutting off users from the content at the very end , when their scores exceed @xmath31 , we disconnect users as soon as their normalized scores exceed the normalized threshold @xmath31 .",
    "this prevents the colluder from contributing to the remaining parts of the content , and allows the distributor to find the remaining colluders as well . here by normalization",
    "we refer to translating the scores by @xmath78 , so that innocent users are expected to have an average final score of @xmath69 .",
    "( 0 , -3.5 ) ",
    "( 0 , 3.5 ) ; ( 0 , 0 ) ",
    "( 12.2 , 0 ) ; at ( -0.7 , 3.0 ) @xmath67 ; at ( 12.0 , -0.5 ) @xmath68 ; at ( -0.3 , 0 ) @xmath69 ; ( 0 , 0 )  ( 5.667 , 0.850 ) ",
    "( 4.149 , 1.078 )  plot [ smooth , samples=100 , domain=0:4.149 ] ( , 0.15*+ sqrt(0.05 * ) )  cycle ; ( 0 , 0 )  ( 5.667 , 0.850 )  ( 7.740 , 0.539 )  plot [ smooth , samples=100 , domain=0:7.740 ] ( , 0.15 * - sqrt(0.05 * ) )  cycle ; plot ( , 0.15*+ sqrt(0.05 * ) ) ; plot ( , 0.15 * ) ; plot ( , 0.15 * - sqrt(0.05 * ) ) ; ( 0 , 0 )  ( 10 , -1.5 )  ( 10 , -0.275 )  plot [ smooth , samples=100 , domain=0:10 ] ( , -0.15*+ sqrt(0.15 * ) )  cycle ; ( 0 , 0 )  ( 10 , -1.5 )  ( 10 , -2.725 )  plot [ smooth , samples=100 , domain=0:10 ] ( , -0.15 * - sqrt(0.15 * ) )  cycle ; ( 0 , 0 )  ( 12.2 , 0 ) ; plot ( , -0.15*+ sqrt(0.15 * ) ) ; plot ( , -0.15 * ) ; plot ( , -0.15 * - sqrt(0.15 * ) ) ; ( 10 , 0.2 ) ",
    "( 0 , 1.7 ) ; at ( 5.5 , 1.3 ) accept @xmath50 ; ( 10 , 0.2 )  ( 10 , -3.5 ) ; at ( 10.5 , -1.7 ) accept @xmath49 ; at ( 10 , 0.2 ) ; at ( 10.8 , 0.4 ) @xmath70 ;    to illustrate the effect of this change to the scheme , figure  [ fig : sketch2 ] sketches the cumulative user scores in the sequential setting _ without normalization _ , and the new accusation criterion . without normalization ,",
    "the scores follow the same general path as in figure  [ fig : sketch1 ] , and the red accusation threshold becomes a decreasing line , rather than a horizontal line as in  @xcite . as discussed in  @xcite , with this modification one can provably find all colluders rather than only one with a similar provable code length as in the non - adaptive setting .",
    "the central result of  @xcite can be stated as follows .",
    "@xcite [ thm : adaptive1 ] suppose @xmath0 and @xmath31 are chosen in the non - adaptive tardos scheme to guarantee that    * with prob .",
    "at least @xmath79 no innocent users are accused ; * with prob .",
    "at least @xmath80 at least one colluder is accused .",
    "then , using almost the same scheme parameters as before ; see the discussion of @xmath81 and @xmath82 in ( * ? ? ?",
    "* section iii.c ) . to be sure that the scheme still works we can disregard scores right after a user is removed from the system  ( * ? ? ?",
    "* section ii ) with a negligible increase in @xmath0 .",
    "we omit details here , and only present the simplified result . ] , with this sequential construction we can guarantee that    * with pr .",
    "at least @xmath83 no innocent users are accused ; * with prob .",
    "at least @xmath84 all colluders are accused .    in practice",
    ", this means that to turn a non - adaptive scheme into a sequential scheme that provably finds all colluders , we just have to replace @xmath36 and @xmath37 by @xmath85 and @xmath86 in the formulas for @xmath0 and @xmath31 of the non - adaptive setting .",
    "since @xmath0 only depends logarithmically on @xmath36 and @xmath37 , for large @xmath2 and @xmath1 the resulting increase in the code length is negligible .      while the above sequential scheme deals well with the setting where @xmath1 is known and users can be accused after every position @xmath23 , the paper  @xcite also discussed slight variations of this setting , which may well appear in practice . in particular , the two problems of not being able to cut off users after every segment @xmath23 , and not knowing @xmath1 , were addressed in  ( * ? ? ?",
    "* sections iv and v ) .      to make tracing harder",
    ", pirates may delay the pirate output , so that a user whose score exceeds @xmath31 at time @xmath68 can only be disconnected at time , say , @xmath87 . as we are now quite certain that he is guilty , and since he contributed to segments @xmath88 , we could consider these segments _ tainted _ and disregard them completely for tracing the remaining colluders .",
    "this solution was proposed in  ( * ? ? ?",
    "* section iv.a ) and it was shown to lead to a moderate increase in the code length of @xmath89 . a different analysis in  ( * ? ? ?",
    "* section iv.b ) showed that one can also perform a new study of the possible overshoot over the boundary @xmath31 , due to the increase @xmath90 , leading to a higher increase in the code length .",
    "therefore the solution from  ( * ? ? ?",
    "iv.a ) should be preferred .      as for the setting where @xmath1 is unknown and only a crude estimate @xmath91 is known ( or no bound is known at all ) , ( * ? ? ? *",
    "section v ) proposed a method where each user is assigned several scores @xmath92 based on how large the coalition is estimated to be , and disconnecting a user as soon as one of his scores crosses one of the corresponding boundaries @xmath93 .",
    "it was noted in  @xcite that the scores are very similar and the boundaries seem to correspond to a continuous function @xmath94 .",
    "one of the open problems posed in  ( * ? ? ?",
    "* section vii.b ) was therefore whether schemes with single scores and curved boundaries are provably secure .",
    "finally , another topic often considered in the fingerprinting literature is joint decoding  @xcite : using the entire code @xmath15 , rather than only the user s code word @xmath95 , to decide whether user @xmath41 should be accused . assigning scores to tuples of users",
    "was considered before in e.g.  @xcite , but no explicit decision criterion with provable results was provided , and it was left as an open problem .",
    "to understand the motivation behind the sequential tardos scheme , and to see how the design can possibly be improved , we now turn our attention to what has long been known in statistics literature to be a solution for hypothesis testing in sequential settings : wald s sequential probability ratio test ( sprt ) .",
    "this scheme originated in the 1940s  @xcite , and countless follow - up works have appeared since , which have been summarized in many books on this topic  @xcite .",
    "let us recall the formulation of the fingerprinting problem in terms of hypothesis testing , where we want to distinguish between the following two hypotheses :    * @xmath49 : user @xmath41 is innocent ( @xmath34 ) . * @xmath50 : user @xmath41 is guilty ( @xmath35 ) .",
    "now , to decide between these two hypotheses in sequential settings , wald proposed the following procedure .",
    "let @xmath96 and @xmath97 be two constants , with @xmath98 , and again let us use the optimal log - likelihood score function @xmath43 from  .",
    "now we decide in favor of @xmath50 as soon as a user s cumulative score exceeds @xmath96 , and we decide to accept @xmath49 as soon as the user s score drops below @xmath97 . as long as a user score stays in the interval",
    "@xmath99 $ ] , we continue testing . this accusation procedure is sketched in figure  [ fig : sketch3 ] .",
    "( 0 , -3.5 ) ",
    "( 0 , 3.5 ) ; ( 0 , 0 ) ",
    "( 12.5 , 0 ) ; at ( 0.9 , 3.0 ) @xmath67 ; at ( 12.3 , -0.5 ) @xmath68 ; at ( -0.3 , 0 ) @xmath69 ; at ( -0.3 , 2 ) @xmath96 ; at ( -0.3 , -2 ) @xmath97 ; ( 0 , 0 )  ( 6.667 , 2 )  ( 3.772 , 2 )  plot [ smooth , samples=100 , domain=0:3.772 ] ( , 0.3*+ sqrt(0.2 * ) )  cycle ; ( 0 , 0 )  ( 6.667 , 2 )  ( 11.784 , 2 )  plot [ smooth , samples=100 , domain=0:11.784 ] ( , 0.3 * - sqrt(0.2 * ) )  cycle ; plot ( , 0.3*+ sqrt(0.2 * ) ) ; plot ( , 0.3 * ) ; plot ( , 0.3 * - sqrt(0.2 * ) ) ; ( 0 , 0 )  ( 6.667 , -2 )  ( 12.5 , -2 )  ( 12.5 , -1.015 )  plot [ smooth , samples=100 , domain=0:12.5 ] ( , -0.3*+ sqrt(0.6 * ) )  cycle ; ( 0 , 0 )  ( 6.667 , -2 )  ( 2.546 , -2 )  plot [ smooth , samples=100 , domain=0:2.546 ] ( , -0.3 * - sqrt(0.6 * ) )  cycle ; ( 0 , 0 )  ( 12.5 , 0 ) ; plot ( , -0.3*+ sqrt(0.6 * ) ) ; plot ( , -0.3 * ) ; plot ( , -0.3 * - sqrt(0.6 * ) ) ; ( 0 , 2.0 )  ( 12.5 , 2.0 ) ; at ( 6 , 2.4 ) accept @xmath50 ; ( 0 , -2.0 )  ( 12.5 , -2.0 ) ; at ( 6 , -2.5 ) accept @xmath49 ;    * choosing the thresholds . * to understand how the parameters @xmath97 and @xmath96 should be chosen , a connection is often made with the continuous - time analog of random walks , brownian motions . assuming that user scores are continuous ,",
    "so that when a score crosses one of the boundaries it really _ hits _ the boundary ( rather than jumping over it , in the discrete model ) , then to guarantee that an innocent user is acquitted with probability at least @xmath100 and a guilty user is accused with probability at least @xmath101 , the following choice is optimal : @xmath102 to guarantee that all innocent users are acquitted and all guilty users are found , we need to let @xmath103 and @xmath104 , which for large @xmath105 means @xmath106 and @xmath107 .",
    "for instance , writing @xmath108 and @xmath109 , so that the probability of not accusing innocents ( accusing all guilties ) is at least @xmath79 ( @xmath80 ) , this corresponds to taking @xmath110    there are two important issues that we need to address , the first of which is that we are not dealing with continuous user scores but discrete scores .",
    "one of the effects of having discrete jumps in the scores is that there may be a slight _ overshoot _ over one of the boundaries when a user is accused or acquitted ; a score may cross one of the lines at a non - integral point",
    "so to say , and at the next measurement the score may significantly exceed @xmath96 or drop below @xmath97 . as a result the error probabilities for the above choice of thresholds are not exact .",
    "a useful property of the above choice of parameters is that if by @xmath111 and @xmath112 we denote the _ real _ probabilities of accusing innocent and guilty users , when using these thresholds @xmath97 and @xmath96 , we have  ( * ? ? ?",
    "* equation ( 3.30 ) ) @xmath113 in other words , the total error probability does not increase , and at most one of @xmath114 and @xmath115 might increase .",
    "alternatively , exact bounds on the error probabilities can be obtained , showing that the following slightly conservative choice of parameters guarantees that the error bounds are satisfied : @xmath116    the second issue that we should address is that having a threshold @xmath97 only makes sense if all colluders have an increasing score .",
    "if the colluders know about the tracing algorithm , and use an asymmetric pirate strategy , e.g.  by letting one colluder be inactive at the start and letting him join in later , this colluder will incorrectly be acquitted early on . in this",
    "setting one could say that innocence is virtually impossibly to prove , while it is possible to prove that someone is guilty . to deal with this problem ,",
    "a simple solution is not to use a lower threshold @xmath97 at all .",
    "this is equivalent to setting @xmath117 , as that way we will never acquit a colluder . in that case , the conservative choice of thresholds from   can be stated as @xmath118 note that in this case , the aggressive and conservative expressions from   and match , i.e. , @xmath114 is a tight bound on the probability of incorrectly accusing a single innocent user .",
    "this more realistic implementation of the sequential probability ratio test in the uninformed fingerprinting game is again sketched in figure  [ fig : sketch4 ] .",
    "( 0 , -3.5 ) ",
    "( 0 , 3.5 ) ; ( 0 , 0 )  ( 12.5 , 0 ) ; at ( 0.9 , 3 ) @xmath67 ; at ( 12.3 , -0.5 ) @xmath68 ; at ( -0.3 , 0 ) @xmath69 ; at ( -0.3 , 2 ) @xmath96 ; ( 0 , 0 ) ",
    "( 6.667 , 2 ) ",
    "( 3.772 , 2 )  plot [ smooth , samples=100 , domain=0:3.772 ] ( , 0.3*+ sqrt(0.2 * ) )  cycle ; ( 0 , 0 )  ( 6.667 , 2 ) ",
    "( 11.784 , 2 )  plot [ smooth , samples=100 , domain=0:11.784 ] ( , 0.3 * - sqrt(0.2 * ) )  cycle ;    plot ( , 0.3*+ sqrt(0.2 * ) ) ; plot ( , 0.3 * ) ; plot ( , 0.3 * - sqrt(0.2 * ) ) ; ( 0 , 0 ) ",
    "( 11.667 , -3.5 )  ( 12.5 , -3.5 )  ( 12.5 , -1.011 )  plot [ smooth , samples=100 , domain=0:12.5 ] ( , -0.3*+ sqrt(0.6 * ) )  cycle ; ( 0 , 0 ) ",
    "( 11.667 , -3.5 ) ",
    "( 5.572 , -3.5 )  plot [ smooth , samples=100 , domain=0:5.572 ] ( , -0.3 * - sqrt(0.6 * ) )  cycle ; ( 0 , 0 )  ( 12.5 , 0 ) ; plot ( , -0.3*+ sqrt(0.6 * ) ) ; plot ( , -0.3 * ) ; plot ( , -0.3 * - sqrt(0.6 * ) ) ; ( 0 , 2.0 )  ( 12.5 , 2.0 ) ; at ( 6 , 2.4 ) accept @xmath50 ;    * optimality of the sprt .",
    "* although reaching a decision with this procedure may theoretically take a very long time , wald proved that his test procedure always terminates  ( * ? ? ? * appendix  a ) , regardless of @xmath36 and @xmath37 .",
    "furthermore , if by @xmath119 ( @xmath120 ) and @xmath75 ( @xmath77 ) we denote the expected score in one segment for innocent ( guilty ) users , then we know that with high probability , the procedure will terminate not long after @xmath121 ( @xmath122 ) crosses the boundary @xmath97 ( @xmath96 ) .",
    "more formally , wald analyzed the expected time by which his procedure terminates , under either @xmath49 or @xmath50 , and together with wolfowitz he proved  @xcite that his sprt is optimal in that it minimizes the expected time before a decision is reached , both under @xmath49 and under @xmath50 . ignoring overshoots over the boundary ( i.e. , assuming we are dealing with continuous random walks ) , he further derived explicit expressions for both these expected termination times , which are stated below . in the following theorem , we write @xmath123 for the kullback - leibler divergence or relative entropy ( in nats ) between @xmath124 and @xmath125 .",
    "@xcite [ thm : adaptive2 ] suppose we have a sequential test procedure , for which    * an innocent user is accused w.p . at most @xmath114 ; * a guilty user is acquitted w.p . at most @xmath115 ; * the probability of termination is @xmath26 .",
    "let @xmath126 denote the time at which a decision is reached .",
    "then : @xmath127 furthermore , the sequential probability ratio test is a sequential test simultaneously minimizing both @xmath128 and @xmath129 , and assuming that there is no overshoot over the boundaries , both inequalities above are equalities for the sprt .    for large @xmath2 ,",
    "the per - user false positive error probability scales as @xmath130 while @xmath131 based on the argument that if the average pirate score exceeds @xmath96 , all pirate scores exceed @xmath96  @xcite .",
    "we further have that @xmath132 where @xmath133 is the mutual information between a pirate symbol and the pirate output , as described in e.g.  @xcite .",
    "this leads to the following corollary .",
    "[ thm : adaptive3 ] for sequential tests satisfying the conditions stated in theorem  [ thm : adaptive2 ] , we have : @xmath134    this result implies that in general , sequentiality does not lead to a decrease in the asymptotic code length ; with non - adaptive schemes it is also possible to achieve this asymptotic code length  @xcite . the two gains of sequential testing are that ( i ) in fact _ all _ colluders , rather than at least one of them , can provably be caught with this asymptotic code length ; and ( ii ) in practice , for finite @xmath1 and @xmath2 , the time needed to find and trace all colluders will generally be shorter than in the non - adaptive setting .",
    "although the asymptotic code length are the same , the convergence to this limit is significantly faster for sequential schemes than for non - adaptive schemes .    while most of the analyses and results above are based on running this scheme with parallel infinite boundaries , it is not impossible to force an early decision . as already described by wald  (",
    "* section 3.8 ) , one might ultimately prefer to _ truncate _ the test procedure at some fixed time @xmath0 , at which we make a decision similar to the sequential tardos scheme , and similar to the non - adaptive setting .",
    "this may be done with and without a lower boundary ; a sketch for the case with a lower boundary is given in figure  [ fig : sketch5 ] .",
    "analyzing these variants rigorously seems difficult , even with brownian approximations , but an interested reader may refer to e.g.  one of the books on sequential testing listed at the beginning of this section . with truncation , one should ask the question whether forcing a decision by some fixed time @xmath0 is really important . after all , if the main goal is to minimize the _ worst - case _ code length @xmath0 needed to make a decision , then it is commonly best to wait until the very end and to take all evidence into account before making any decisions at all ; which exactly corresponds to the non - adaptive setting .",
    "( 0 , -3.5 ) ",
    "( 0 , 3.5 ) ; ( 0 , 0 ) ",
    "( 12.2 , 0 ) ; at ( 0.9 , 3 ) @xmath67 ; at ( 12.0 , -0.5 ) @xmath68 ; at ( -0.3 , 0 ) @xmath69 ; at ( -0.3 , 2 ) @xmath96 ; at ( -0.3 , -2 ) @xmath97 ; ( 0 , 0 ) ",
    "( 6.667 , 2 ) ",
    "( 3.772 , 2 )  plot [ smooth , samples=100 , domain=0:3.772 ] ( , 0.3*+ sqrt(0.2 * ) )  cycle ; ( 0 , 0 ) ",
    "( 6.667 , 2 ) ",
    "( 10 , 2 ) ",
    "( 10 , 1.586 )  plot [ smooth , samples=100 , domain=0:10 ] ( , 0.3 * - sqrt(0.2 * ) )  cycle ; plot ( , 0.3*+ sqrt(0.2 * ) ) ; plot ( , 0.3 * ) ; plot ( , 0.3 * - sqrt(0.2 * ) ) ; ( 0 , 0 )  ( 6.667 , -2 )  ( 10 , -2 ) ",
    "( 10 , -0.551 )  plot [ smooth , samples=100 , domain=0:10 ] ( , -0.3*+ sqrt(0.6 * ) )  cycle ; ( 0 , 0 )  ( 6.667 , -2 ) ",
    "( 2.546 , -2 )  plot [ smooth , samples=100 , domain=0:2.546 ] ( , -0.3 * - sqrt(0.6 * ) )  cycle ; ( 0 , 0 )  ( 12.2 , 0 ) ; plot ( , -0.3*+ sqrt(0.6 * ) ) ; plot ( , -0.3 * ) ; plot ( , -0.3 * - sqrt(0.6 * ) ) ; ( 0 , 2.0 ) ",
    "( 10 , 2.0 ) ; ( 10 , 2.0 ) ",
    "( 10 , 0.5 ) ; at ( 6 , 2.4 ) accept @xmath50 ; ( 10 , 0.5 )  ( 10 , -2.0 ) ; ( 10 , -2.0 ) ",
    "( 0 , -2.0 ) ; at ( 6 , -2.5 ) accept @xmath49 ; at ( 10 , 0.5 ) ; at ( 10.8 , 0.5 ) @xmath70 ;      the sprt has received extensive attention in the literature , with thorough analyses of the effects of the overshoot over the boundaries , slight modifications of the scheme ( such as the truncated sprt mentioned above ) , and the effects of using different boundaries than the horizontal lines in the figures above .",
    "we highlight two variants which we also considered for the sequential tardos scheme , and we consider how joint decoding may be done with the sprt .",
    "for further details we refer the interested reader to e.g.  @xcite .      in the setting of weakly adaptive decoding , where pirates delay their rebroadcast of the content ( or where content is sent out in blocks of size @xmath90 ) , the results based on continuous approximations using brownian motions become less and less accurate . for higher values of @xmath90 ,",
    "the overshoot over the boundary becomes more and more significant , which was also discussed in  ( * ? ? ?",
    "* section iv.b ) ; there the possible overshoot was parametrized by @xmath135 , and it was noted that exactly this overshoot causes problems .    to deal with this problem effectively , we can again use the method described in  ( * ? ? ?",
    "* section iv.a ) : ignore the tainted segments @xmath23 to which a user who is now deemed guilty may have contributed .",
    "then the increase in the code length may again only be @xmath136 , which in the uninformed fingerprinting game is negligible with respect to @xmath3 .",
    "recall that in the universal decoding setting , we assume that @xmath1 is unknown , and only a crude bound @xmath137 may be known . to deal with this , laarhoven et al .",
    "@xcite proposed to keep multiple scores per user , and multiple accusation boundaries .",
    "it was conjectured that using a single score for each user , and using a curved boundary function of the form @xmath138 may be possible .    in terms of hypothesis testing , testing whether @xmath35 or @xmath34 for unknown coalition sizes @xmath1 could be considered a test of a simple null hypothesis @xmath139 against a one - sided alternative @xmath140 . in the informed",
    "setting , where the collusion channel is known , we might know exactly what @xmath119 is , and so such a one - sided test may form a solution .",
    "in that case , curved stopping boundaries ( in particular , having a boundary of the shape @xmath138 ) has been suggested before ; see e.g.  ( * ? ? ?",
    "* chapter iv ) .",
    "when using the symmetric tardos score function rather than the optimized log - likelihood ratios or map decoders , this approach may work well , although the issue remains that it seems that no single encoder and decoder can be used for arbitrary @xmath1 and @xmath141 : in all known cases , either the decoder depends on @xmath1 or @xmath91 , or the encoder uses a cutoff which depends on @xmath1 .    to work with different score functions than tardos score function  @xcite and kori et al.s symmetric score function  @xcite , where @xmath119 may be considered fixed , we need to circumvent the issue that @xmath119 may depend on @xmath1 and the pirate strategy @xmath141 as well . in the universal uninformed decoding setting",
    "we therefore do not even know what @xmath119 is .",
    "two hypotheses that may be more realistic to consider are @xmath142 against @xmath143 : an innocent user will have a negative average score , while a guilty user will have a positive average score . however , depending on the collusion strategy , the values of @xmath119 and @xmath120 may both be small or large .",
    "this does not really help the colluders , as decreasing @xmath144 and @xmath145 also leads to a decrease in the variance of the scores , but it makes using a single linear decoder even more problematic .    to deal with these problems , the best solution for the universal setting may be to use a generalized linear decoder  @xcite , and to normalize the scores during the decoding phase , as described in  @xcite .",
    "a generalized linear decoder is better suited for the setting of unknown @xmath1 , and by normalizing user scores ( which can be done based on @xmath146 ) we know what @xmath119 is .",
    "then we can again use a hypothesis test of the form @xmath139 against @xmath140 as described above , where a curved boundary may be optimal .",
    "recall that in joint decoding the entire code @xmath15 is taken into account to decide whether users should be accused . in  @xcite it was considered to assign scores to tuples @xmath147 of @xmath148 users , after which one would like to distinguish between the following @xmath149 hypotheses :    * @xmath49 : tuple @xmath147 contains no guilty users : @xmath150 ; * @xmath50 : tuple @xmath147 contains one guilty user : @xmath151 ; * @xmath152 * @xmath153 : tuple @xmath147 contains @xmath154 guilty users : @xmath155 .",
    "although not quite as well studied as the case of two hypotheses , this topic has also received attention in sprt literature , with the earliest work dating back to sobel and wald from 1949  @xcite .",
    "they considered the problem of deciding between three simple hypotheses ( @xmath156 ) , and provided a solution as sketched in figure  [ fig : sketch6 ] . using joint neyman - pearson decoder to assign scores to pairs of users , they considered the use of several stopping boundaries , each corresponding to a decision of accepting one of the hypotheses .",
    "the distribution of scores then depends on whether the tuple contains @xmath157 or @xmath158 colluders , as illustrated by the green , yellow , and red highlighted curves in figure  [ fig : sketch6 ] .",
    "this procedure can be generalized to multiple hypotheses as well , to deal with joint decoding with @xmath159 . for details on how to choose these stopping boundaries ,",
    "see e.g.  @xcite .",
    "( 0 , -4 ) ",
    "( 0 , 4 ) ; ( 0 , 0 ) ",
    "( 12.2 , 0 ) ; at ( 0.9 , 3.5 ) @xmath67 ; at ( 12 , -0.5 ) @xmath68 ; at ( -0.3 , 0 ) @xmath69 ; at ( -0.3 , 1 ) @xmath160 ; at ( -0.3 , -1 ) @xmath97 ; ( 0 , 0 )  ( 3.333 , 2 ) ",
    "( 1.111 , 1.333 )  plot [ smooth , samples=100 , domain=0:1.111 ] ( , 0.6*+ sqrt(0.4 * ) )  cycle ; ( 0 , 0 )  ( 3.333 , 2 ) ",
    "( 10 , 4 )  plot [ smooth , samples=100 , domain=0:10 ] ( , 0.6 * - sqrt(0.4 * ) )  cycle ; plot ( , 0.6*+ sqrt(0.4 * ) ) ; plot ( , 0.6 * ) ; plot ( , 0.6 * - sqrt(0.4 * ) ) ; ( 0 , 0 )  ( 3.333 , -2 ) ",
    "( 10 , -4 )  plot [ smooth , samples=100 , domain=0:10 ] ( , -0.6*+ sqrt(0.4 * ) )  cycle ; ( 0 , 0 )  ( 3.333 , -2 ) ",
    "( 1.111 , -1.333 )  plot [ smooth , samples=100 , domain=0:1.111 ] ( , -0.6 * - sqrt(0.4 * ) )  cycle ; plot ( , -0.6*+ sqrt(0.4 * ) ) ; plot ( , -0.6 * ) ; plot ( , -0.6 * - sqrt(0.4 * ) ) ; ( 0 , 0 )  ( 3.333 , 0 ) ",
    "( 10 , 2 )  plot [ smooth , samples=100 , domain=0:10 ] ( , sqrt(0.4 * ) )  cycle ; ( 0 , 0 )  ( 3.333 , 0 ) ",
    "( 10 , -2 )  plot [ smooth , samples=100 , domain=0:10 ] ( , -sqrt(0.4 * ) )  cycle ; ( 0 , 0 ) ",
    "( 12.2 , 0 ) ; plot ( , sqrt(0.4 * ) ) ; plot ( , -sqrt(0.4 * ) ) ; plot ( , 0 ) ; ( 0 , 1 ) ",
    "( 10 , 4 ) ; at ( 6 , 3.2 ) accept @xmath161 ; ( 3.333 , 0 )  ( 12.2 , 2.75 ) ; ( 3.333 , 0 )  ( 12.2 , -2.75 ) ; at ( 8 , 1 ) accept @xmath50 ; at ( 8 , -1 ) accept @xmath50 ; ( 0 , -1 ) ",
    "( 10 , -4 ) ; at ( 6 , -3.2 ) accept @xmath49 ;",
    "in the previous two sections we saw how to construct sequential schemes based on the ( dynamic ) tardos scheme , and based on wald s sprt . here we briefly consider possible applications of both schemes , and how the two schemes compare .",
    "we consider three scenarios as follows :    1 .   defending against the interleaving attack .",
    "2 .   defending against arbitrary pirate attacks .",
    "3 .   the classical group testing model .",
    "these settings are studied in the following subsections .",
    "when defending against the interleaving attack , which may be the most practical pirate strategy due to its simplicity and its strength , the neyman - pearson decoder of   designed against the interleaving attack  @xcite may be a good choice , even when the tracer s estimate @xmath91 is not exact  @xcite . with this score function , in each segment the average pirate score increases by @xmath162 ,",
    "while for innocent users we have @xmath163 which is proved in the appendix .",
    "+ in wald s scheme , recall that we may set @xmath164 conservatively where @xmath114 is the per - user false positive probability . without using a lower threshold , setting @xmath165 ,",
    "i.e. , @xmath166 ( and @xmath167 ) guarantees that with probability at least @xmath79 , no innocent users are ever accused , and with probability @xmath26 all colluders are eventually found .",
    "we illustrate the scheme with a toy example in figure  [ fig : ex1wald ] , where we set the parameters as @xmath168 , @xmath169 , and @xmath170 , so that @xmath171 . on average , it takes about @xmath172 segments to trace the colluders .",
    "+    for large @xmath2 and @xmath1 , this corresponds to an asymptotic upper threshold of @xmath107 and an expected time of @xmath173 until all pirates have been found .",
    "this thus corresponds to drawing a horizontal accusation threshold starting at @xmath174 , and the pirates are expected to be found around the point @xmath175 .",
    "+ in the sequential tardos scheme with log - likelihood scores , setting the parameters is more difficult .",
    "various provable bounds on the error probabilities for given parameters are not tight , leading to pessimistic estimates and higher thresholds and code lengths than required .",
    "one could also estimate the actual required code length for a given set of parameters directly , leading to better scheme parameters , but this would have to be done for each instance separately ; if any of the parameters @xmath176 then changes , one would have to redo the simulations or computations to find good practical parameters for the new setting .    to illustrate how far the provable parameters are off from reality",
    ", we again used the toy example of figure  [ fig : ex1wald ] and used the provable bounds from ( * ? ? ?",
    "* theorem 3 ) and theorem  [ thm : adaptive1 ] , to obtain the following parameters : @xmath177 note that @xmath178 , the value of the boundary at @xmath72 , is significantly higher than when using wald s sprt .",
    "an illustration of how this scheme would then work in practice is given in figure  [ fig : ex1tardos ] .",
    "in most cases the scheme finds all pirates after roughly @xmath179 segments , which although much less than the provable code length of @xmath180 is much higher than the practical code length of the sprt of @xmath181 segments .    for large @xmath2 and @xmath1 we can again compute what the parameters converge to .",
    "first , for this setting we also obtain an asymptotic code length of @xmath173 , and this again corresponds to the asymptotic point @xmath182 ; see e.g.  ( * ? ? ? * theorem  3 , corollary  3 ) .",
    "however , in the sequential tardos scheme this accusation threshold is a decreasing line ( cf .",
    "figure  [ fig : sketch2 ] ) with a slope equal to @xmath183 .",
    "this means that at time @xmath72 , the accusation line asymptotically starts at @xmath184 ; the red line starts twice as high as in wald s sprt , at the point @xmath185 .",
    "so although both schemes achieve the same asymptotic code length , even in the limit of large @xmath2 and @xmath1 these schemes are slightly different .    in this case",
    "there are several reasons to prefer wald s sprt approach : it is easier to choose good parameters , and asymptotically the accusation threshold lies lower than in the sequential tardos scheme , allowing for a slightly faster tracing of the colluders .      for the general , uninformed fingerprinting game , where it is not known what collusion channel was used",
    ", the tracer has to use a decoder that works well against arbitrary collusion channels .",
    "again , the paper of furon and desoubeaux  @xcite compares various of these candidate decoders , each of which were derived through different optimization techniques .",
    "the decoder described in the previous subsection , designed against the interleaving attack , is capacity - achieving in the uninformed setting as well  @xcite , and so a similar construction as in the previous subsection may again be used , both in the sequential tardos scheme and in wald s sequential scheme .",
    "as described in  @xcite , with this score function it can only be guaranteed that @xmath186 is sufficiently large regardless of the collusion channel , i.e. , it is possible to distinguish between the innocent and guilty distributions .",
    "however , it could be that for different collusion channels , both @xmath119 and @xmath120 are smaller than when the interleaving attack is used . to cope with these difficulties",
    ", one could normalize the scores , i.e. , based on @xmath187 and @xmath17 , compute @xmath119 and @xmath188 for segment @xmath23 , and translate and scale the scores so that @xmath119 and @xmath188 are the same as for the interleaving attack .",
    "alternatively , one could use a wide range of different methods , such as using several score functions simultaneously ; estimating the collusion channel and using this estimate to choose the score function  @xcite ; using a generalized linear decoder  @xcite ; or settle for slightly less and use the suboptimal but ` universal ' symmetric score function of kori et al .",
    "@xcite which works almost the same for any collusion strategy . for small collusion",
    "sizes this score function does not perform that poorly  ( * ? ? ?",
    "* figure  3 ) , and it might make designing the scheme somewhat easier",
    ".      let us further highlight how the sequential tardos scheme and wald s sprt can behave very differently , by showing how both schemes apply to the classical group testing model . in group testing  @xcite one is tasked to identify the defective members @xmath5 from a population @xmath7 by performing group tests : testing a query group @xmath189 returns a positive result if @xmath190 and a negative result otherwise .",
    "applications include blood testing for viruses , where pooling blood samples of several persons and testing this batch leads to a positive test result iff the virus is present in the tested batch . in terms of fingerprinting",
    ", this problem corresponds to dealing with the all-@xmath26 attack  @xcite .",
    "as described in  @xcite , the neyman - pearson approach to the all-@xmath26 attack in fingerprinting leads to the following optimized decoder @xmath43 : @xmath191 note that this function does not depend on @xmath192 anymore ; to deal with the all-@xmath26 attack , it is best to replace the random bias generation using the arcsine distribution with a fixed bias @xmath193 . in the non - adaptive , simple decoding setting , this leads to a required code length of @xmath194 , while in the joint decoding setting the required code length becomes @xmath195 , a factor @xmath196 less .    in wald s scheme , choosing scheme parameters is done similarly as in section  [ sec : int ] . if we again consider the toy application of @xmath197 , @xmath168 and @xmath170 ( with @xmath198 , not using a lower boundary ) , then we may again set @xmath171 and we are ready to use the scheme . figure  [ fig : ex2wald ]",
    "shows an example simulation of this scheme with these parameters , using the all-@xmath26 score function from  .",
    "for simplicity , we used the asymptotic approximation @xmath199 for generating the code .",
    "+    in the sequential tardos scheme , one would again first determine the point @xmath70 at which time a decision is taken(cf .",
    "figure  [ fig : sketch2 ] ) , and then draw the accusation threshold by drawing a line towards the @xmath200-axis , parallel to the line with the average innocent user scores .",
    "note however that with this score function , the event @xmath201 is impossible for a guilty user ( if a member @xmath35 has @xmath202 , then by definition @xmath203 as well ) , and so if this event occurs we know for sure that this user is innocent , and we assign the user a score of @xmath204 .",
    "since the probability that this event occurs for innocent users is a positive constant , it immediately follows that @xmath205 . as a consequence ,",
    "the accusation threshold starting from @xmath70 with a slope of @xmath206 becomes a vertical line upwards .",
    "this is illustrated in figure  [ fig : ex2tardos ] which shows an example application of the sequential tardos scheme with the same parameters as in wald s scheme .",
    "the provable bounds from  ( * ? ? ?",
    "* theorem 3 ) and theorem  [ thm : adaptive1 ] lead to @xmath207 and @xmath208 .",
    "let us conclude with a brief overview of the two solutions for the sequential fingerprinting game . for simplicity",
    ", we will compare the sequential tardos scheme with wald s scheme without a lower boundary , as that seems to be the most convenient solution in fingerprinting .",
    "note that although the sequential tardos scheme is different from wald s basic description of the sequential probability ratio test procedure , it could be considered a variant of the latter ; truncating the thresholds was already considered by wald himself , and using different shapes for the stopping boundary has been discussed extensively in various literature on the sprt .",
    ".a quick summary of various characteristics of wald s sprt and the sequential tardos scheme . for wald s scheme",
    "we assume we are not using a lower boundary @xmath97 , i.e. , we set @xmath198 and @xmath167.[tab : tab1 ] [ cols=\"<,^,^\",options=\"header \" , ]     to compare some of the characteristics , table  [ tab : tab1 ] gives a quick summary of the various characteristics of both schemes . here",
    "optimality refers to the optimality described in theorem  [ thm : adaptive2 ] , and asymptotic optimality refers to the large @xmath2 and large @xmath209 regime .",
    "note that by setting @xmath198 in wald s scheme , we guarantee that eventually all colluders are always caught .",
    "this solution of an infinite accusation boundary comes at the cost of not knowing in advance how many segments are at most needed to reach a decision , although in practice this does not seem to be an issue . as we saw in section",
    "[ sec : comp ] , often choosing parameters is easier for wald s scheme than for the sequential tardos scheme ; both because fewer parameters have to be chosen , and because there is a simple approximate relation between this single parameter @xmath96 and the error probability @xmath36 , which holds exactly if the scores behave like true brownian motions .",
    "we further saw that for the sequential group testing setting , the sequential tardos scheme offers no improvement over non - adaptive decoding ( while wald s scheme does ) .",
    "finally , as mentioned before , wald s scheme has already been studied since the 1940s , with many books appearing on the topic ever since  @xcite , while the sequential tardos scheme  @xcite was more of an ad - hoc construction to build a scheme that works well in adaptive settings as well . with wald s scheme being easier to design , in many cases performing better than the sequential tardos scheme (",
    "performing optimally well ) , and being backed by decades of research on the topic ( allowing practitioners to tweak the scheme to their needs using known results from the literature ) , it seems that wald s scheme is a more practical choice than the sequential tardos scheme .    in this paper",
    "we further settled an important question on the optimality of these schemes ( i.e. , both schemes are asymptotically optimal in the sequential setting ) , but one important open question remains : is it possible to design truly adaptive fingerprinting schemes that perform even better than these sequential designs ? or are the sequential schemes discussed in this paper also optimal in the adaptive setting ?",
    "this is left as an open problem for future work .",
    "the author thanks boris kori for various useful comments on an initial version of this manuscript .",
    "15    e.  abbe , l.  zheng . linear universal decoding for compound channels .",
    "_ ieee transactions on information theory _ , 56(12):59996013 , 2012 .",
    "e.  amiri and g.  tardos .",
    "high rate fingerprinting codes and the fingerprinting capacity . in _ soda _ , pp .  336345 , 2009 .",
    "j.  bartroff , t.  l.  lai , and m .- c .",
    "_ sequential experimentation in clinical trials_. springer , 2013 .",
    "w.  berchtold and m.  schfer . performance and code length optimization of joint decoding tardos fingerprinting . in _",
    "mm&sec _ , pp .  2732 , 2012 .",
    "o.  berkman , m.  parnas , and j.  sgall .",
    "efficient dynamic traitor tracing .",
    "_ siam journal on computing _",
    ", 30(6):18021828 , 2001 .",
    "o.  blayer and t.  tassa .",
    "improved versions of tardos fingerprinting scheme .",
    "_ designs , codes and cryptography _ , 48(1):79103 , 2008 .",
    "d.  boneh and j.  shaw .",
    "collusion - secure fingerprinting for digital data .",
    "_ ieee transactions on information theory _ , 44(5):18971905 , 1998 .",
    "m.  bun , j.  ullman , and s.  vadhan .",
    "fingerprinting codes and the price of approximate differential privacy . in _ stoc _ , pp .  110 , 2014 .",
    "a.  charpentier , f.  xie , c.  fontaine , and t.  furon .",
    "expectation maximization decoding of tardos probabilistic fingerprinting code . in _",
    "spie proceedings _ , 7254:115 , 2009 .",
    "h.  chernoff .",
    "_ sequential analysis and optimal design_. siam , 1972 .",
    "m.  desoubeaux , c.  herzet , w.  puech , and g.  le  guelvouit .",
    "enhanced blind decoding of tardos codes with new map - based functions . in _",
    "mmsp _ , pp .  283288 , 2013 .",
    "r.  dorfman .",
    "the detection of defective members of large populations . _ the annals of mathematical statistics _",
    ", 14(4):436440 , 1943 .    c.  dwork , k.  talwar , a.  thakurta , and l.  zhang .",
    "analyze gauss : optimal bounds for privacy - preserving principal component analysis . in _ stoc _",
    ", pp .  1120 , 2014 .",
    "a.  fiat and t.  tassa .",
    "dynamic traitor tracing .",
    "_ journal of cryptology _",
    ", 14(3):354371 , 2001 .",
    "t.  furon , a.  guyader , and f.  crou . on the design and optimization of tardos probabilistic fingerprinting codes . in _",
    "ih _ , pp .  341356 , 2008 .",
    "t.  furon , l.  prez - freire , a.  guyader , and f.  crou . estimating the minimal length of tardos code . in _",
    "ih _ , pp .  176190 , 2009 .",
    "t.  furon and l.  prez - freire .",
    "em decoding of tardos traitor tracing codes . in _ mmsec _ , pp .",
    "99106 , 2009 .",
    "t.  furon and l.  prez - freire .",
    "worst case attacks against binary probabilistic traitor tracing codes . in _ wifs _ , pp .  5660 , 2009 .",
    "t.  furon , a.  guyader , and f.  crou . decoding fingerprints using the markov chain monte carlo method . in",
    "_ wifs _ , pp .  187192 , 2012 .",
    "t.  furon and m.  desoubeaux .",
    "tardos codes for real . in _ wifs _ , 2014 .",
    "z.  govindarajulu .",
    "_ sequential statistics_. world scientific , 2004 .",
    "y .- w .  huang and p.",
    "saddle - point solution of the fingerprinting capacity game under the marking assumption . in _ isit",
    "_ , pp .  22562260 , 2009 .",
    "y .- w .  huang and p.  moulin . on the saddle - point solution and the large - coalition asymptotics of fingerprinting games . _ ieee transactions on inf .  for .  and security _ , 7(1):160175 , 2012 .",
    "s.  ibrahimi , b.  kori , and j .- j .  oosterwijk . riding the saddle point : asymptotics of the capacity - achieving simple decoder for bias - based traitor tracing .",
    "_ eurasip journal on information security _",
    ", 1(12):111 , 2014 .",
    "c.  jennison and b.  w.  turnbull . _ group sequential methods with applications to clinical trials_. chapman and hall , 2000 .",
    "m.  kuribayashi .",
    "bias equalizer for binary probabilistic fingerprinting codes . in _",
    "ih _ , pp .  269283 , 2011 .",
    "t.  laarhoven and b.  de  weger .",
    "discrete distributions in the tardos scheme , revisited . in _ ih&mmsec _ , pp .  1318 , 2013 .",
    "t.  laarhoven , j.  doumen , p.  roelse , b.  kori , and b.  de  weger .",
    "dynamic tardos traitor tracing schemes . _ ieee transactions on information theory _ , 59(7):42304242 , 2013 .",
    "t.  laarhoven .",
    "efficient probabilistic group testing based on traitor tracing . in",
    "allerton _ , pp .  13581365 , 2013 .",
    "t.  laarhoven .",
    "dynamic traitor tracing schemes , revisited . in _ wifs _ , pp .  191196 , 2013 .",
    "t.  laarhoven and b.  de  weger .",
    "optimal symmetric tardos traitor tracing schemes .",
    "_ designs , codes and cryptography _ , 71(1):83103 , 2014 .",
    "t.  laarhoven . capacities and capacity - achieving decoders for various fingerprinting games . in _",
    "ih&mmsec _ , pp .  123134 , 2014 .",
    "p.  meerwald and t.  furon . towards joint tardos",
    "decoding : the don quixote algorithm . in _",
    "ih _ , pp .  2842 , 2011 .",
    "p.  meerwald and t.  furon .",
    "group testing meets traitor tracing . in _",
    "icassp _ , pp .  42044207 , 2011 .",
    "p.  meerwald and t.  furon . toward practical joint decoding of binary tardos fingerprinting codes .",
    "_ ieee transactions on information forensics and security _ , 7(4):11681180 , 2012 .",
    "p.  moulin .",
    "universal fingerprinting : capacity and random - coding exponents .",
    "_ arxiv:0801.3837v3 _ , 2011 .",
    "n.  mukhopadhyay and b.  m.  de  silva .",
    "_ sequential methods and their applications_. crc press , 2009 .",
    "k.  nuida , m.  hagiwara , h.  watanabe , and h.  imai .",
    "optimization of tardos s fingerprinting codes in a viewpoint of memory amount . in _ ih _ , pp .  279293 , 2007 .",
    "k.  nuida , s.  fujitsu , m.  hagiwara , t.  kitagawa , h.  watanabe , k.  ogawa , and h.  imai .",
    "an improvement of discrete tardos fingerprinting codes .",
    "_ designs , codes and cryptogr .",
    "_ , 52(3):339362 , 2009 .    j .- j .",
    "oosterwijk , b.  kori , and j.  doumen .",
    "optimal suspicion functions for tardos traitor tracing schemes . in _ ih&mmsec _ , pp .  1928 , 2013 .    j .- j .",
    "oosterwijk , b.  kori , and j.  doumen . a capacity - achieving simple decoder for bias - based traitor tracing schemes .",
    "_ cryptology eprint archive , report 2013/389 _ , 2013 .    j .- j .",
    "oosterwijk , j.  doumen , and t.  laarhoven .",
    "tuple decoders for traitor tracing schemes . in _",
    "spie proceedings _ , 2014 .    l.  prez - freire and t.  furon .",
    "blind decoder for binary probabilistic traitor tracing codes . in _ wifs _ , pp .  4650 , 2009 .",
    "dynamic subtree tracing and its application in pay - tv systems .",
    "j.  inf .  security _ 10(3):173187 , 2011 .",
    "r.  safavi - naini and y.  wang .",
    "sequential traitor tracing .",
    "_ ieee transactions on information theory _ , 49(5):13191326 , 2003 .",
    "d.  siegmund .",
    "_ sequential analysis , tests and confidence intervals_. springer , 1985 .",
    "a.  simone and b.  kori .",
    "asymptotically false - positive - maximizing attack on non - binary tardos codes . in _",
    "ih _ , pp .  1427 , 2011 .",
    "b.  kori , t.  u.  vladimirova , m.  u.  celik , and j.  c.  talstra .",
    "tardos fingerprinting is better than we thought .",
    "_ ieee transactions on information theory _ , 54(8):36633676 , 2008 .",
    "b.  kori , s.  katzenbeisser , and m.  u.  celik .",
    "symmetric tardos fingerprinting codes for arbitrary alphabet sizes .",
    "_ designs , codes and cryptography _ , 46(2):137166 , 2008 .",
    "b.  kori , j .- j .",
    "oosterwijk , and j.  doumen .",
    "the holey grail : a special score function for non - binary traitor tracing . in _",
    "wifs _ , pp .  180185 , 2013 .",
    "b.  kori .",
    "simple - looking joint decoders for traitor tracing and group testing .",
    "_ cryptology eprint archive , report 2014/781 _ , 2014 .",
    "m.  sobel and a.  wald . a sequential decision procedure for choosing one of three hypotheses . _ the annals of mathematical stat .",
    "_ , 20(4):502522 , 1949 .",
    "t.  steinke and j.  ullman .",
    "interactive fingerprinting codes and the hardness of preventing false discovery .",
    "_ arxiv:1410.1228 _ , 2014 .",
    "g.  tardos .",
    "optimal probabilistic fingerprint codes .",
    "_ journal of the acm _",
    ", 55(2):124 , 2008 .",
    "t.  tassa .",
    "low bandwidth dynamic traitor tracing schemes . _ journal of cryptology _",
    ", 18(2):167183 , 2005 .",
    "j.  ullman .",
    "answering @xmath210 counting queries with differential privacy is hard . in _ stoc _ , pp .",
    "361370 , 2013 .",
    "a.  wald .",
    "sequential tests of statistical hypotheses . _",
    "the annals of mathematical stat .",
    "_ , 16(2):117186 , 1945 .",
    "a.  wald .",
    "_ sequential analysis_. john wiley and sons , 1947 ( 1st edition ) , dover publications , 2013 ( reprint ) .    a.  wald and j.  wolfowitz .",
    "optimum character of the sequential probability ratio test .",
    "_ the annals of mathematical statistics _ , 19(3):326339 , 1948 .",
    "g.  b.  wetherill and k.  d.  glazebrook .",
    "_ sequential methods in statistics_. chapman and hall , 1986 .",
    "suppose that :        for @xmath119 , we write out the expectation : @xmath212 \\\\ & = \\int_0 ^ 1 \\frac{\\textrm{d}p}{\\pi \\sqrt{p(1-p ) } } \\left[p^2 \\ln\\left(1 + \\frac{1-p}{cp}\\right ) \\right.\\\\ & + \\left.2p(1-p ) \\ln\\left(1 - \\frac{1}{c}\\right ) + ( 1-p)^2 \\ln\\left(1 + \\frac{p}{c(1-p)}\\right)\\right].\\end{aligned}\\ ] ] similarly , we can write out the definition of the average colluder score in a single segment as : @xmath213.\\end{aligned}\\ ] ] combining these results , and merging the logarithms into one term , we obtain the following expression for @xmath214 : @xmath215 since we know that @xmath216 , we need to prove that the right hand side is asymptotically similar to @xmath217 . rearranging terms , we thus need to prove that @xmath218 first , using @xmath219 for all @xmath220 , we obtain : @xmath221 to get a matching lower bound , we first reduce the range of integration from @xmath222 $ ] to @xmath223 $ ] for some @xmath224 , noting that the integrand is strictly positive : @xmath225 choosing @xmath226 , the term inside the logarithm is small and the following bound is tight enough to obtain the result : @xmath227 this proves that @xmath228 , hence @xmath229 ."
  ],
  "abstract_text": [
    "<S> we study sequential collusion - resistant fingerprinting , where the fingerprinting code is generated in advance but accusations may be made between rounds , and show that in this setting both the dynamic tardos scheme and schemes building upon wald s sequential probability ratio test ( sprt ) are asymptotically optimal . </S>",
    "<S> we further compare these two approaches to sequential fingerprinting , highlighting differences between the two schemes . based on these differences </S>",
    "<S> , we argue that wald s scheme should in general be preferred over the dynamic tardos scheme , even though both schemes have their merits . as a side result </S>",
    "<S> , we derive an optimal sequential group testing method for the classical model , which can easily be generalized to different group testing models . </S>"
  ]
}
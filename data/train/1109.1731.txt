{
  "article_text": [
    "plasma confinement in tokamak experiments is determined partly by binary coulomb collisions between charged particles , but mainly by turbulence and instabilities , which occur on scales ranging from particle larmor radii to the system size .",
    "understanding the nature of this turbulence is a key goal of thermonuclear fusion research , since the confinement time is one of the parameters that must be optimised in order to create burning plasma conditions . in order to simulate turbulence in tokamak plasmas",
    "it is necessary to either average the vlasov equations of the particle species over gyro - angle ( the gyrokinetic approach ) or take full velocity - space moments of these equations ( the fluid approach ) .",
    "the lower dimensionality of fluid models makes it possible to simulate larger systems over longer timescales , and for this reason fluid codes continue to play an important role in tokamak plasma modelling .",
    "some of these codes are based on electrostatic models @xcite or employ flux tube geometry @xcite , while others are designed specifically for the purpose of simulating edge plasma phenomena , such as edge localised modes ( elms ) @xcite .",
    "a global magnetohydrodynamic ( mhd ) code nimrod @xcite has also been applied to the modelling of elms @xcite , in addition to a range of other mhd instabilities in several different toroidal configurations @xcite . in order to model turbulent transport on confinement and resistive diffusion timescales in an electromagnetic global code",
    ", it is necessary to include two - fluid effects , and it is also desirable to co - evolve the equilibrium .    in this paper",
    "we describe ` centori ` ( culham emulator of numerical tori ) , a new toroidal two - fluid , electromagnetic turbulence simulation code that meets these requirements .",
    "it can be used to describe the co - evolution of turbulence , mhd instabilities and equilibrium in tokamak plasmas with arbitrary aspect ratio and high plasma beta ( ratio of plasma pressure to magnetic field energy density ) .",
    "it is designed for the specific purpose of simulating global two - fluid electromagnetic tokamak plasma turbulence on confinement timescales , in realistic geometries and in conditions such as those found in the present - day machines mast @xcite and jet @xcite , and in the forthcoming international fusion experiment iter @xcite .",
    "turbulent modes in tokamak plasmas are typically drift waves , which are predominantly electrostatic waves driven by temperature or density gradients .",
    "an important example is the ion temperature gradient mode , which has wavelengths perpendicular to the magnetic field of the order of the ion larmor radius @xmath0 @xcite .",
    "many tokamak turbulence codes , such as the electrostatic fluid codes mentioned above and also gyro - kinetic codes such as kinezero @xcite , are designed specifically for the modelling of drift waves in a fixed , prescribed plasma equilibrium . `",
    "centori ` , on the other hand , is designed to study the interaction between drift waves and mhd instabilities , which generally occur at longer wavelengths , ranging up to the system size , in a co - evolving equilibrium .",
    "however fluid codes such as ` centori ` can not be used to model explicitly instabilities that occur on the smallest tokamak - relevant spatial scales , in particular length scales below the ion larmor radius .",
    "phenomena on the scale of the electron skin depth @xmath1 are specifically excluded from the model used in ` centori ` , since electron inertia is neglected ( in any event @xmath2 unless the plasma beta is less than the electron to ion mass ratio , which is not normally the case in the core region of tokamak plasmas ) .",
    "the drift waves described by gyro - kinetic theory have frequencies of the order of @xmath3 where @xmath4 is particle larmor radius normalised to the equilibrium gradient scale length and @xmath5 is the corresponding cyclotron frequency @xcite .",
    "two - fluid theory , on the other hand , can accommodate mhd modes such as global alfvn eigenmodes @xcite , which , in low beta plasmas , have frequencies higher than those of ion drift waves . `",
    "centori ` can be used to study processes occurring on timescales ranging from the reciprocal alfvn frequency to the energy confinement time .",
    "the physics model implemented in ` centori ` is very similar to that used in cutie , a global two - fluid electromagnetic turbulence code which was based on periodic cylinder geometry and was restricted to large aspect ratio plasmas with circular poloidal cross - section @xcite . despite these restrictions , cutie has been used for a number of successful applications .",
    "for example , it was recently shown to reproduce experimentally - observed transitions to a high confinement mode of plasma operation via the control of particle fuelling in the compass - d tokamak @xcite .",
    "this paper is organised as follows . in section  [ sec :",
    "coordinates ] we describe the relationship between laboratory coordinates and plasma coordinates , in which the fluid and maxwell equations are evolved in ` centori ` .",
    "the form in which these equations are solved is discussed in sections  [ sec : quantities][sec : normalised_physics_eqns ] , while initial and boundary conditions are discussed in section  [ sec : boundary_conditions ] .",
    "sections  [ sec : evolution ] and  [ sec : globals ] are concerned respectively with the distinction made in the code between mean and fluctuating quantities , and global quantities evolved by it , such as plasma beta . in section  [ sec : equilibrium_solver ]",
    "we describe ` grass ` , a subroutine of ` centori ` which co - evolves the plasma equilibrium using a novel pseudo - transient method . operational and technical aspects of the ` centori `  package and the code structure are discussed in section  [ sec : code_outline ] , while in section  [ sec : code_execution ] we present some illustrative examples of output from a simulation of a large aspect ratio tokamak plasma .",
    "before describing the physical quantities and their evolution equations , it is useful to provide a full description of the coordinate systems used in ` centori ` .      ` centori `  is used to model a toroidal plasma held in place by magnetic fields produced by external coils and by the plasma itself . a natural coordinate system to use for the laboratory frame is the right - handed cylindrical system @xmath6 , where @xmath7 is major radius ( distance from the machine s vertical axis of symmetry ) , @xmath8 is vertical distance ( parallel to the symmetry axis ) , and @xmath9 is toroidal angle ( azimuthal angle around the symmetry axis ) .",
    "we note that @xmath10 where @xmath11 is azimuthal angle in the right - handed cylindrical system @xmath12 and @xmath13 is the unit vector in the @xmath9 direction .",
    "the total magnetic field in the system comprises the vacuum field , produced solely by currents flowing in conductors surrounding the plasma , plus the field generated by the currents in the plasma itself .",
    "we use the total equilibrium magnetic field to define the plasma coordinate system .",
    "the equilibrium poloidal flux function @xmath14 defines the equilibrium poloidal magnetic field .",
    "the quantity @xmath14 can evolve in a ` centori `  simulation , but only on a much longer timescale than the turbulence .",
    "it is the magnetic flux per unit toroidal angle passing through the horizontal circle of radius @xmath7 centred at @xmath15 ; it is independent of @xmath9 .",
    "when plotted in the poloidal @xmath16 plane the lines of constant @xmath17 in the vicinity of the plasma form nested , closed contours ( flux surfaces ) .",
    "the minimum value of @xmath17 within these closed surfaces lies near the centre of the plasma , and defines the location of the magnetic axis , along the circle @xmath18 .    in a real machine the edge location of the plasma",
    "is determined by either a physical limiter or the design of the magnetic geometry .",
    "because only the gradients of @xmath17 have physical meaning we may , for convenience , adjust @xmath17 so that the known location of the edge of the plasma is defined to lie on the @xmath19 contour .",
    "figure  [ fig : psirz ] shows a typical set of @xmath17 contours in the poloidal plane .",
    "this plot is effectively the starting point for the calculations performed using ` centori ` .",
    "the flux contours @xmath14 are determined _ a priori _ either by an external program or the equilibrium solver in the code , which is described in section  [ sec : equilibrium_solver ] ; they are co - evolved in time with the turbulence .",
    "our aim is to evolve a set of plasma quantities which are stored in arrays at a convenient set of computational grid points in a right - handed but in general non - orthogonal dimensionless plasma coordinate system @xmath20 . here",
    "@xmath21 is a radial coordinate , with @xmath22 directed from the magnetic axis to the plasma edge , and @xmath23 denotes an angle in the @xmath16 plane .",
    "the radial coordinate @xmath21 is a normalised measure of @xmath17 , the normalising factor being the absolute value of the poloidal flux at the magnetic axis , @xmath24 .",
    "thus , from the magnetic axis at @xmath25 to the edge of the plasma we have @xmath26 and @xmath27 with @xmath21 defined in terms of @xmath17 by @xmath28 the radial grid points are equally spaced in @xmath21 . in the cylindrical limit",
    "@xmath21 varies approximately as @xmath29 where @xmath30 is distance from the magnetic axis .",
    "the @xmath21 contours are thus relatively far apart near the magnetic axis , as shown in fig .",
    "[ fig : psirz ] . because the magnetic axis is a coordinate singularity ( all @xmath23 points at @xmath31 and a given @xmath9 coincide ) ,",
    "we have chosen to locate the innermost @xmath21 grid points on a contour that is slightly displaced from the axis itself .",
    "the gradient @xmath32 in the laboratory frame is determined from the @xmath14 grid by fitting two - dimensional chebyshev polynomials @xcite to the known @xmath17 values at the grid points , and taking their derivatives in the @xmath7 and @xmath8 directions .",
    "it follows from eq .",
    "( [ eqn : rho ] ) that @xmath33 where @xmath34 and @xmath35 denote unit vectors in the @xmath7 and @xmath8 directions .",
    "the equilibrium poloidal magnetic field is given by @xmath36 thus @xmath37 .",
    "the toroidal equilibrium magnetic field is given by @xmath38 where the scalar quantity @xmath39 is taken to be a flux function , i.e.  it depends only on the radial coordinate @xmath21 .",
    "this is generally a good approximation under typical tokamak conditions @xcite .",
    "thus the total equilibrium magnetic field is @xmath40 we define a vector potential @xmath41 in the usual way as a vector field whose curl is equal to the magnetic field .",
    "we can write the equilibrium vector potential @xmath42 in covariant form as follows : @xmath43 for convenience we choose a gauge such that the radial component of @xmath42 vanishes , i.e. @xmath44 in terms of the remaining components of @xmath42 , the equilibrium magnetic field becomes @xmath45 matching the poloidal components of eqs .",
    "( [ eqn : beq ] ) and  ( [ eqn : tmp04 ] ) we find that we can set @xmath46 matching the toroidal components of eqs .",
    "( [ eqn : beq ] ) and  ( [ eqn : tmp04 ] ) we obtain @xmath47 and the scalar product of this with @xmath48 yields @xmath49 where @xmath50 is the jacobian relating laboratory and plasma coordinates ( see following subsection ) .",
    "the covariant poloidal component of @xmath42 is thus given by @xmath51 eqs .",
    "( [ eqn : arho ] ) ,  ( [ eqn : azeta ] ) and  ( [ eqn : atheta ] ) define the equilibrium vector potential @xmath42 in covariant form ; the equilibrium magnetic field @xmath52 may be calculated by taking its curl .",
    "the set of space variables @xmath20 constitutes a quasi - orthogonal coordinate system in which @xmath53 , but in general @xmath54 . taking scalar products of @xmath52 with the coordinate gradients we obtain @xmath55",
    "these three equations give the contravariant components of @xmath52 directly , thereby eliminating the need to perform a curl operation ( see section  [ sec : coordproperties ] ) .",
    "the poloidal angle @xmath23 varies from @xmath56 to @xmath57 in the @xmath16 plane . by convention , points at @xmath58 lie along the line defined by @xmath59 , and @xmath23 increases in the anticlockwise direction as shown in fig .",
    "[ fig : psirz ] . denoting by @xmath60 the arc length in the poloidal plane along a given @xmath21 contour , we can write @xmath61 to determine the distribution of @xmath23 grid points along the contour in the @xmath16 plane we introduce a parameter @xmath62 and solve the following pair of hamiltonian equations @xcite : @xmath63 with @xmath16 being stored at intermediate points as the solution proceeds",
    ". the gradients in @xmath21 are calculated using chebyshev polynomials , as described above , and a convergence loop ensures that the contour is followed with sufficient accuracy .",
    "the arc length @xmath60 is given in terms of @xmath62 by @xmath64 we choose @xmath65 to be a flux function , i.e.  @xmath66 .",
    "this enables @xmath23 points on a given flux contour to be determined by integrating the expression @xmath67 where @xmath65 is obtained by imposing a 2@xmath68 periodicity on @xmath23 : @xmath69 it is straightforward to interpolate the stored @xmath16 values to determine the locations of equally - spaced @xmath23 points along the @xmath21 contour .",
    "figure  [ fig : coords ] shows an example of a @xmath70 grid .",
    "the process described above can be used to map out the locations @xmath71 , @xmath72 along the @xmath21 contours . the partial derivatives",
    "@xmath73 , @xmath74 , @xmath75 and @xmath76 are found by fitting chebyshev polynomials to @xmath7 and @xmath8 along the @xmath21 direction and fourier series in the @xmath23 direction .",
    "these provide the contravariant basis vectors of the plasma coordinate system : @xmath77 @xmath78 @xmath79 where @xmath80 and @xmath81 follows directly from eq .",
    "( [ eqn : gradzeta ] ) ; @xmath48 is the covariant @xmath9 basis vector and hence is reciprocal to @xmath81 .",
    "we may then calculate @xmath82 ( and therefore @xmath65 ) using @xmath83 and the covariant basis vectors are given by @xmath84 it is straightforward to evaluate these vector products since the covariant and contravariant basis vectors are all stored with components in the laboratory frame ( although they are evaluated at specified points in @xmath70 space , their components relative to the basis @xmath85 are known ) .",
    "we adopt this particular algorithm to obtain the gradients and the jacobian in order to maximise accuracy and smoothness in the results through the use of the chebyshev / fourier fitting method , and it also guarantees that the covariant and contravariant basis vectors are reciprocal .",
    "this section provides expressions for scalar and vector products together with differential operators in the plasma coordinate system . in",
    "what follows @xmath41 and @xmath86 are arbitrary vector functions , while @xmath87 is an arbitrary scalar function .",
    "the vector @xmath41 has covariant representation @xmath88 where @xmath89 .",
    "the corresponding contravariant representation is @xmath90 where @xmath91 .",
    "the scalar product of @xmath41 and @xmath86 is then @xmath92 , where a repeated index implies summation , while the vector product is given by @xmath93 the gradient operator , which is defined in the usual way , produces a covariant vector .",
    "the divergence of @xmath41 is evaluated using its contravariant components : @xmath94 while the curl is obtained using its covariant components , and the result is a contravariant vector : @xmath95 the choice of @xmath65 as a flux function considerably simplifies and speeds up many calculations .",
    "it is convenient to perform the vector operations discussed above using the covariant and contravariant representations .",
    "however , these do not have directions , dimensions or units that are intuitive as far as the physics is concerned .",
    "we therefore define a third set of components for the vector quantities in ` centori ` , which we refer to as their _ physical representation _ : `` normal '' , denoting the direction normal to the flux surface ; `` tangential '' , parallel to the flux surface in the @xmath16 plane ; and `` toroidal '' , around the machine axis . the physical components are orthogonal : @xmath96 @xmath97 @xmath98      it is necessary to compute flux surface - averaged quantities in ` centori ` since these affect the evolving equilibrium .",
    "the flux surface average of a scalar quantity @xmath99 is given by @xmath100 where @xmath87 is evaluated at fixed @xmath21 and we have used the fact that @xmath65 is defined to be a flux function .",
    "the primary quantities evolved by ` centori ` are as follows : @xmath101 , ion velocity ; @xmath41 , vector potential ; @xmath102 , ion number density ( @xmath103 , electron number density , via quasi - neutrality ) ; @xmath104 , ion temperature ; and @xmath105 , electron temperature .",
    "in addition , a number of auxiliary quantities can be advanced in time once the primary quantities have been updated .",
    "these are : @xmath106 , electron velocity ; @xmath107 , electric potential ; @xmath86 , magnetic field ; @xmath108 , current density ; @xmath109 , electric field ; @xmath110 , ion pressure ; and @xmath111 , electron pressure .",
    "these variables are normalised as follows : @xmath112 @xmath113 where @xmath114 is a typical alfvn speed , @xmath115 is the ion mass density , @xmath116 is the vacuum toroidal field at the magnetic axis , @xmath117 is the volume - averaged electron number density , @xmath118 is the initial ion temperature at the magnetic axis , @xmath119 is the initial electron temperature at the magnetic axis , @xmath120 is a nominal ion pressure , @xmath121 is a nominal electron pressure , and @xmath122 is the ion mass .",
    "the quantities @xmath116 , @xmath118 and @xmath119 are given nominal values by the user ; @xmath117 is calculated as the plasma evolution progresses , so @xmath123 , @xmath124 and @xmath125 vary with time .",
    "it should be noted that the actual density and temperature values on axis are not constrained to be their initial arbitrary values , but vary as the profiles evolve .",
    "the normalised quantities listed above are all dimensionless except for @xmath126 which has the dimensions of length .",
    "the ion momentum balance equation can be written in the form @xmath127 where @xmath128 is vorticity , @xmath129 is resistivity ( assumed to be a scalar function of space and time ) , @xmath130 is velocity diffusivity ( see section  [ sec : momentum_source ] ) , @xmath131 is external force density ( see section  [ sec : momentum_source ] ) , @xmath132 is proton charge and @xmath133 is the speed of light ( we use gaussian cgs units throughout this paper , although output from the code is in si units , to facilitate comparison with experimental results ) . in the electron momentum balance equation",
    "we neglect inertial terms , momentum sources and viscosity : @xmath134 this is equivalent to ohm s law in the limit of vanishing electron mass .",
    "the transfer of energy is described by the two equations @xmath135 @xmath136 where @xmath137 are the ion and electron heat fluxes ( see section  [ sec : normalised_energy_eqns ] ) and @xmath138 are additional ion and electron heating sources .      the mass continuity equation used in ` centori ` is @xmath139 where @xmath140 is the particle source rate ( see section  [ sec : particle_source ] ) , @xmath141 is a term representing the effect of the ware pinch @xcite ( see section  [ sec : normalised_energy_eqns ] ) , @xmath142 is a diffusion term given by @xmath143 with @xmath144 and @xmath145 respectively the particle and rechester - rosenbluth diffusivities ( see sections  [ sec : normalised_momentum_eqn ] and [ sec : particle_diffusion ] ) .",
    "finally in eq .",
    "( [ eqn : continuity_eqn ] ) , @xmath146 is the parallel ion thermal relaxation rate ( see section  [ sec : normalised_energy_eqns ] ) .",
    "it is not necessary to solve an electron continuity equation since the plasma is assumed to be quasi - neutral and the current is assumed to be divergence - free .",
    "the vanishing of the divergence of * b * is guaranteed in ` centori ` through the use of the potential representation @xmath147 and the induction equation is solved for * a * rather than * b * : @xmath148 current densities @xmath149 are computed using the pre - maxwell form of ampre s law : @xmath150",
    "` centori ` is used to evolve the normalised quantities defined by eqs .",
    "( [ eqn : varnorm1 ] ) and ( [ eqn : varnorm2 ] ) rather than the absolute values of velocity , magnetic field , and so on . in this section",
    "we explain how the physics equations themselves are normalised .",
    "unless otherwise stated , all of the normalised equations have the dimensions of reciprocal length .",
    "the equations are solved by using finite differences to approximate all of the derivatives ; the solution method is thus entirely non - spectral .",
    "a key advantage of this approach is that parallelisation of the code is then relatively straightforward , and yields good scalability results ( see section  [ sec : code_outline ] ) . on the other hand",
    "the finite - element method , used , for example , in nimrod @xcite , is particularly well - suited to modelling the edge regions of plasmas with strongly - shaped poloidal cross - sections .",
    "all three physical components of @xmath151 are evolved , with subscript `` 1 '' labelling the normal direction , subscript `` 2 '' the tangential direction , and subscript `` 3 '' the toroidal direction .",
    "we define a normalised vorticity @xmath152 : @xmath153 it should be noted that @xmath152 has the dimensions of reciprocal length . using also the normalizations introduced previously , dividing by @xmath154 , defining the following quantities @xmath155 and introducing an additional term related to the rechester - rosenbluth diffusivity @xmath156 @xcite [ see eq .",
    "( [ eqn : chirr ] ) ] , we find that the ion momentum equation can be written in the form @xmath157 { \\times}{\\mathbf{v_i^*}}- \\beta_{i0 } \\frac{{\\nabla}{p_i^*}}{{n_e^ * } } - \\beta_{e0 } { \\nabla}{\\phi^*}- \\frac{1}{2 } { \\nabla}{\\mathbf{v_i^*}}^2 + \\frac{{\\mathbf{s_v^*}}}{{n_e^ * } } \\nonumber \\\\ & & + \\frac{\\omega_{ci}}{{v_a } } { \\mathbf{b}_\\mathbf{eq}^*}{\\times}\\left ( d_{rr }      \\frac{{\\nabla}\\langle { n_e^*}\\rangle } { \\langle { n_e^*}\\rangle } \\right ) - d_v \\ , ( { \\nabla \\times}{\\mathbf{w^ * } } ) - { \\omega_{ci}\\over { v_a}}\\left[{1\\over { v_a}}\\frac{{\\partial}{\\mathbf{a^*}}}{{\\partial t } } + \\eta^ * { \\mathbf{j^*}}\\right ] , \\label{eqn : normalised_momentum_eqn}\\end{aligned}\\ ] ] where @xmath158 , @xmath159 , and @xmath160 . to reduce problems arising from short wavelength modes in the radial direction ,",
    "the momentum equation is supplemented by artificial damping terms : @xmath161 where @xmath162 , @xmath146 being the parallel ion thermal relaxation rate [ eq .",
    "( [ eqn : nuparai ] ) ] .",
    "a similar damping term is applied in the tangential direction .",
    "the dimensionless damping rate used in the code is @xmath163 .      in the current version of ` centori `  we neglect the @xmath164 and @xmath165 terms on the right hand side of eq .",
    "( [ eqn : normalised_momentum_eqn ] ) . in tokamak plasmas",
    "there is generally a large separation between drift and alfvn timescales , with the consequence that turbulent fluctuations are predominantly electrostatic in nature , and the inductive part of the electric field term plays only a minor role in the ion momentum equation . in section  [ sec : turbsim ] we will illustrate this point using results from a ` centori `  simulation . the @xmath165 term in eq .",
    "( [ eqn : normalised_momentum_eqn ] ) is small by virtue of the fact that tokamak plasmas tend to have very high lundquist numbers , i.e. are close to being perfectly conducting .    in eq .",
    "( [ eqn : normalised_momentum_eqn ] ) it is not straightforward to convert @xmath166 into finite differences , due to the non - orthogonal nature of the coordinate system . we approximate it by the expression @xmath167 we are assuming here that the contribution of viscosity to the ion momentum equation can be well - approximated by a term proportional to @xmath168 .",
    "we are thus neglecting the @xmath169 term in @xmath170 ( although the flows described by ` centori ` are in general compressible ) ; it is not necessary to include this term in order to model the neoclassical and turbulent damping of flows @xcite .",
    "the factor containing @xmath171 is present to take account of the spacing of adjacent points in the @xmath23 direction being proportional to the local poloidal field [ see eq . ( [ eqn : dtheta ] ) ] . adopting the convention that subscripts @xmath172 , @xmath173 and @xmath60 label array elements in the @xmath21 , @xmath23 and @xmath9 directions respectively , while superscripts @xmath174 label time , we approximate @xmath175 by the central difference expression @xmath176 we also introduce purely numerical diffusion terms , with coefficients @xmath177 , @xmath178 and @xmath179 , which are designed to remove variations in @xmath151 of similar length scale to the separation of adjacent grid points .",
    "it is evident that the resultant finite - difference equations are consistent with the governing partial differential equations as the mesh sizes tend to infinity .",
    "these effectively suppress spurious oscillations at wave numbers corresponding to inverse mesh size . unlike the turbulent diffusivities , they are non - zero even when the turbulent fluctuation amplitudes go to zero for any fixed mesh size .",
    "thus the finite difference approximation to the momentum equation is of the form @xmath180 here , superscripts @xmath181 ( `` latest '' ) indicate the most up - to - date ( most time - advanced ) values available .",
    "this is to avoid the use of `` new '' values at adjacent @xmath23 and @xmath9 points ( i.e.  at @xmath182 , @xmath183 ) ; these would appear as undesirable off - diagonal terms in the tridiagonal matrix equation .",
    "typically , @xmath184 from the previous iteration .",
    "the numerical diffusion coefficients @xmath185 , @xmath186 and @xmath187 have the following forms : @xmath188 where @xmath189 , @xmath190 and @xmath191 are the numbers of grid intervals in the respective directions .",
    "dropping the @xmath173 and @xmath60 subscripts on velocity components , the finite difference approximation to the momentum equation can be written in the block tridiagonal matrix equation form @xmath192 where @xmath193 , @xmath194 , @xmath195 are @xmath196 matrices and @xmath197 is a vector that depends on the latest ( @xmath181 ) values of velocity components as well as those of the previous timestep . equation ( [ eqn : block_tdma ] ) is solved for the normalised ion velocity @xmath151 at the new timestep using a standard predictor - corrector scheme , with @xmath198 converging to @xmath199 .",
    "we then subtract the flux surface - averaged normal component of @xmath151 , so that only a fluctuating part remains .",
    "presently only a toroidal momentum source is included in ` centori ` ; the profile is given by @xmath200 where @xmath201 is the external heating power per unit volume provided to the ions / electrons , @xmath202 is the ion thermal speed at the magnetic axis and @xmath203 is a user - defined multiplier which matches the total momentum provided to the plasma with experiment .",
    "turbulent diffusivity terms are included in the full definition of the normalised velocity diffusivity @xmath204 [ see eq . ( [ eqn : normalised_momentum_eqn ] ) ] : @xmath205 \\right ) + \\frac{\\chi_{v,\\mbox{\\scriptsize classical}}}{{v_a}},\\ ] ] where @xmath206 is user - specified , @xmath207 is a normalised measure of entropy and @xmath208 is a normalised enstrophy ( @xmath209 and @xmath210 being the fluctuating parts of the normalised current density and vorticity respectively ) .",
    "the parameter @xmath211 is a user - defined multiplier between 0 and 1 .",
    "the final term in @xmath204 is a gyro - bohm diffusivity : @xmath212 with @xmath213 a user - defined multiplier and @xmath0 the ion gyroradius .",
    "the normalised electron velocity @xmath214 is determined directly from @xmath151 and @xmath215 by noting that the net current density @xmath108 is given by @xmath216 hence @xmath217        it is evident from the definitions of @xmath218 and @xmath215 that ampre s law has the normalised form @xmath219 note that @xmath218 is dimensionless while @xmath215 has the dimensions of reciprocal length .",
    "ohm s law [ eq .",
    "( [ eqn : ohms_law ] ) ] can be written in the form @xmath220 we divide the electric field into ideal and resistive parts by writing @xmath221 @xmath222 and write faraday s law in the form @xmath223 we can thus write @xmath224 and hence , multiplying by @xmath225 , we obtain @xmath226 we thus obtain the normalised faraday s law @xmath227 where the normalised electric potential @xmath228 is defined as @xmath229 and the normalised electric field @xmath230 is defined by a normalised ohm s law @xmath231 the term in parentheses being the ideal part and the remainder the resistive part .",
    "the mean electrostatic potential @xmath232 is obtained from mean radial momentum balance .",
    "taking a flux surface average of the covariant @xmath21 component of the normalised momentum equation [ eq . ( [ eqn : normalised_momentum_eqn ] ) ] , neglecting contributions to the pressure gradient term that are nonlinear in flux surface variations of @xmath233 and @xmath234 , and using the fact that the flux surface average of the radial component of @xmath101 must vanish on turbulent timescales to ensure ambipolarity , we obtain @xmath235 { \\times}{\\mathbf{v_i^*}}\\right\\}_\\rho \\right \\rangle - \\frac{\\beta_{i0}}{\\langle { n_e^*}\\rangle } \\frac{d\\langle { p_i^*}\\rangle}{d\\rho }   - \\beta_{e0 } \\frac{d\\langle { \\phi^*}\\rangle}{d\\rho }   - \\frac{1}{2 } \\frac{d\\langle { \\mathbf{v_i^*}}^2\\rangle}{d\\rho}.\\ ] ] rearranging and integrating with respect to @xmath21 , we obtain the mean electrostatic potential : @xmath236 { \\times}{\\mathbf{v_i^*}}\\right\\}_\\rho \\right\\rangle \\ , d\\rho .\\ ] ] in the standard version of ` centori ` we define the total electrostatic potential @xmath237 using the adiabaticity relation @xmath238 which follows from electron force balance along the magnetic field in the limit of vanishing electron mass @xcite .",
    "we can write @xmath239 where @xmath240 is the fluctuating part of @xmath126 .",
    "it follows from eqs .",
    "( [ eqn : normalised_faradays_law ] ) and ( [ eqn : normalised_ohms_law ] ) that @xmath241 the scalar product of this equation with @xmath218 yields @xmath242 approximating the time - dependent terms on the left hand side by replacing @xmath218 with @xmath243 , we obtain @xmath244 where @xmath245 is the normalised fluctuating part of the magnetic field . neglecting magnetosonic waves ( i.e.  the poloidal component of @xmath240 )",
    ", the covariant representation of @xmath240 reduces to @xmath246 in this limit @xmath247 and hence @xmath248 using the expression for @xmath237 [ eq . ( [ eqn : phistar2 ] ) ] and the fact that @xmath249 for any @xmath87 since @xmath250 is purely radial and @xmath243 has no radial component , we obtain @xmath251 and hence , using the fact that @xmath252 , @xmath253 \\right\\}-{\\mathbf{b}_\\mathbf{eq}^*}\\cdot{\\mathbf{e^*}}_{\\rm res}.\\ ] ] we represent @xmath254 as a diffusion term in this equation by writing @xmath255 where the normalised resistive diffusivity is given by @xmath256 \\right),\\ ] ] @xmath257 being a user - defined diffusivity .",
    "turbulent diffusivity terms are present to damp out fluctuations occurring at the smallest length scales ; these tend to be in the poloidal direction , close to the magnetic axis . introducing a parameter @xmath258",
    "we can write @xmath259 \\right\\ } \\nonumber \\\\ & & + r_0\\,{\\mathcal{j}}\\,d_\\eta \\left ( \\frac{{\\partial}^2\\tilde{a^*_\\zeta}}{{\\partial \\rho}^2 } + \\frac{\\langle b_p \\rangle^2}{b_p^2 } \\frac{{\\partial}^2\\tilde{a^*_\\zeta}}{{\\partial \\theta}^2 } \\right ) .",
    "\\nonumber\\end{aligned}\\ ] ] finally , as in the case of the momentum equation [ cf .",
    "( [ eqn : numdiff ] ) ] , we add numerical diffusion terms to the right hand side of the normalised faraday s law .",
    "the above equation is approximated by a finite difference equation which may be written in the one - dimensional tridiagonal matrix form @xmath260 where subscripts and superscripts have the same meaning as those in the finite difference approximation to the momentum equation , the coefficients @xmath261 , @xmath262 and @xmath263 do not depend explicitly on @xmath264 , while @xmath265 depends on the latest estimate of this quantity as well as its value at the old timestep and also the latest estimate and old value of @xmath266 .",
    "as in the case of the velocity components , @xmath267 at the new time is determined by solving the above tridiagonal matrix equation using a predictor - corrector scheme . to ensure that only the fluctuating part is actually evolved , the flux surface average of @xmath267 is evaluated , and subtracted from @xmath267 to determine @xmath268 at the new time .      in terms of the flux surface - averaged density ,",
    "the spitzer resistivity is given by @xcite @xmath269 where @xmath270 is the electron collision time , @xmath271 being the coulomb logarithm . in a toroidal plasma",
    "this is modified by neoclassical effects , which , for singly - charged ions , we model using the expression @xmath272 where @xmath273 is the dimensionless electron collisionality , @xmath274 being the safety factor of the flux surface in question , and @xmath275 is the local inverse aspect ratio .",
    "the resistivity is thus @xmath276 in the banana regime ( @xmath277 ) the above expression for @xmath278 yields a resistivity which has the appropriate limiting behaviour as @xmath279 and @xmath280 @xcite ; the @xmath281 dependence ensures that @xmath282 in the limit of high collisionality , as required .",
    "the loop voltage @xmath283 is related via the resistive mhd form of ohm s law to the part of the toroidal current associated with @xmath284 : @xmath285 defining @xmath286 , it is straightforward to show that the above equation has the following solution for @xmath39 : @xmath287 where @xmath288 is the vacuum value of @xmath39 , i.e.  @xmath289 at and outside the plasma boundary . the plus / minus sign in this expression takes into account the possibility of a reversal in the sign of the toroidal magnetic field .",
    "we consider here the electron energy equation ; the ion equation is treated in a similar manner . from eq .",
    "( [ eqn : energy ] ) we have @xmath290 we can write the first term on the right hand side as @xmath291 where @xmath292 is the electron thermal conductivity and @xmath293 is the parallel electron thermal relaxation rate .",
    "the latter may be represented by the expression @xmath294 with @xmath295 a user - defined multiplier and @xmath296 the electron thermal velocity .",
    "this term has the effect of equilibrating the fluctuating component of @xmath105 rapidly along the field lines at a rate given by @xmath293 .",
    "the portion involving @xmath292 is treated as a diffusion term : @xmath297 the rechester - rosenbluth diffusivity @xmath145 can be written as @xcite : @xmath298 where @xmath299 is a user - defined multiplier .",
    "thus the electron energy equation becomes @xmath300 the external source term for this equation is @xmath301 where @xmath302 is the external heating power per unit volume provided to the electrons ( see section  [ sec : aux_power ] ) .",
    "the second term in the expression for @xmath303 is the electron - ion equilibration power [ eq .",
    "[ eqn : pei ] ) ] , through which energy is transferred between the electrons and ions due to the temperature difference between them , and the final term is the ohmic heating power .",
    "the external source term for the ion energy equation is @xmath304 where @xmath305 is the external heating power per unit volume provided to the ions , and @xmath306 is the electron - ion equilibration power .",
    "we define the following quantities ( with the dimensions of reciprocal length ) : @xmath307 the electron energy equation can then be written in the following normalised form : @xmath308 in a similar fashion we obtain the normalised ion energy equation : @xmath309 the ware pinch term @xmath141 , which is only present in the ion equation , is the divergence of the flux @xcite @xmath310 and the parallel ion thermal relaxation rate @xmath146 is given by @xmath311 with @xmath312 a user - defined multiplier . the normalised rate , which again has the dimensions of a reciprocal length , is given by @xmath313 .",
    "the normalised electron energy equation is approximated by a finite difference equation , with the diffusion terms treated exactly by analogy with those in the momentum equation .",
    "this can be written in tridiagonal matrix form , and solved at each @xmath314 point to advance the normalised electron temperature @xmath315 at the new time .",
    "the normalised ion temperature @xmath234 is similarly updated .      the electron collision time is given by eq .",
    "( [ eqn : tauce ] ) and the ion collision time by the expression @xmath316 where @xmath317 is the ion charge state . the power density transferred from electrons to ions",
    "( or vice versa ) due to the temperature difference between them is given by @xmath318 we define dimensionless collisionalities for the two species by the expressions @xmath319 where @xmath320 is the ion thermal speed .",
    "we define flux surface - averaged electron and ion cyclotron frequencies and thermal larmor radii by @xmath321 we also define poloidal larmor radii by the expressions @xmath322 the electron and ion neoclassical thermal diffusivities are taken to be @xmath323 where @xmath324 is given by an expression that was proposed by chang and hinton @xcite as a finite aspect ratio generalisation of a result originally obtained by hinton and hazeltine @xcite @xmath325 an identical expression is used for @xmath326 , with @xmath281 replacing @xmath327 .",
    "heat transport in tokamak plasmas is typically found to be due mainly to turbulence rather than neoclassical effects , particularly in the case of electrons . in mast ion heat transport",
    "can be close to neoclassical in the plasma core @xcite , where the approximations used to obtain the above expression for @xmath328 are well - satisfied .",
    "closer to the plasma edge in mast , the ion heat transport is generally dominated by turbulence .",
    "the thermal diffusivities used in the energy equations have the dimensions of length : @xmath329 \\right ) \\right\\ } , \\label{eqn : normdiffse}\\ ] ] @xmath330 \\right ) \\right\\ } , \\label{eqn : normdiffs}\\ ] ] where @xmath331 and @xmath332 are background diffusivities specified by the user .",
    "turbulent diffusivity terms are present in eqs .",
    "( [ eqn : normdiffse ] ) and ( [ eqn : normdiffs ] ) to damp out fluctuations occurring at suitably small length scales . these model phenomenologically the effect of all fluctuations on subgrid scales , in a manner similar to that used in large - eddy simulations in meteorology @xcite . in future work",
    "we intend to derive suitable closure relations by means of kinetic modelling on scales below those resolvable using ` centori ` .",
    "there are three options for the auxiliary electron heating power density profile in ` centori ` : @xmath333 where @xmath334 gives the height of the profile in erg @xmath335 s@xmath336 , @xmath337 is the profile index , and @xmath338 is location ( @xmath339 ) at which the power profile peaks .",
    "these parameters , along with the choice of profile type , are specified by the user .",
    "the ion heating profile is treated similarly , with an equivalent set of parameters . in principle",
    "it is possible to use profiles obtained from radio - frequency or neutral beam heating codes ( applied to ` grass ` equilibria ) , and it is essential to do so if precise comparisons with experimental results are required .      dividing eq .",
    "( [ eqn : continuity_eqn ] ) by @xmath340 , we obtain the normalised mass continuity equation @xmath341 where the normalised particle source @xmath342 ( see section  [ sec : particle_source ] ) is given by @xmath343 the mass continuity equation is approximated by a finite difference equation which , as in the case of the other primary quantities , can be written in a tridiagonal matrix form suitable for advancing in time .",
    "the rate at which particles ( ions ) are supplied externally to the plasma per unit volume is @xmath344 .",
    "we assume that there are two contributions to this  from an auxiliary ( neutral beam ) power source , if any , and via a density feedback mechanism ( see section  [ sec : density_feedback ] ) .",
    "the latter contribution may be assumed to be highest at the edge , falling to close to zero at the plasma centre .",
    "thus , the total normalised particle source rate @xmath342 [ eq .  ( [ eqn : snstar ] ) ]",
    "is specified in ` centori ` as @xmath345 where @xmath346 is specified in units of @xmath335  s@xmath336 , @xmath201 is the external heating power provided to the ions / electrons in ergs @xmath335 s@xmath336 , @xmath347 is the neutral beam particle energy in ergs , and @xmath348 is a cut - off function used to provide further modulation of the feedback source .",
    "currently we remove the feedback source completely outside the @xmath349 contour , i.e. @xmath350 if @xmath351 and @xmath352 otherwise .",
    "we take the normalised particle diffusivity to be related to the normalised electron thermal diffusivity [ eq .",
    "( [ eqn : normdiffs ] ) ] : @xmath353 \\right ) \\right\\},\\ ] ] where @xmath144 is a user - defined particle diffusivity . as in the case of @xmath331 and @xmath332 in the thermal diffusivity expressions [ eqs .",
    "( [ eqn : normdiffse ] ) and ( [ eqn : normdiffs ] ) ] , this is used to model transport arising from processes occurring on sub - grid scales ; typically @xmath354@xmath355s@xmath336 .      there is an option in ` centori ` to use a feedback mechanism to control the volume - averaged particle density .",
    "this is achieved by modifying the edge particle source rate @xmath346 at each timestep as follows : @xmath356 where @xmath357 is the requested average density , @xmath358 is the total number of particles in the plasma ( i.e.  the volume integral of @xmath359 ) , @xmath360 is the plasma volume , and @xmath361 is the required timescale for the density to reach the target value . if the density is too high the particle source is turned off .",
    "at @xmath362 the physical quantities are prescribed as follows .",
    "all fluctuating components are initialised to zero , except for @xmath363 , which is given an arbitrary variation in all three directions .",
    "@xmath364 @xmath365 the coefficients and profile indices in the above expressions are specified by the user .",
    "the initial vector potential @xmath41 and magnetic field @xmath86 are derived from the initial equilibrium @xmath14 , as described in section  [ sec : coordinates ] . in the early stages of a simulation",
    "it may be necessary to determine an equilibrium relatively frequently ( typically once every 10@xmath366 time steps ) to allow transients to settle .",
    "this early - stage evolution does not simulate accurately the startup phase of a real plasma .",
    "the boundary conditions in the @xmath23 and @xmath9 directions are , of course , periodic . in this section",
    "we discuss the boundary conditions to be applied in the radial direction .      at each discrete toroidal location",
    "@xmath367 the true plasma axis @xmath368 is a coordinate singularity , since @xmath23 is undefined ( i.e.  it can take any value from 0 to @xmath57 ) .",
    "the radial and poloidal directions are similarly undefined .",
    "there is still a clearly - defined toroidal direction , however . with these considerations in mind ,",
    "the physical components of all vector quantities at the plasma axis are dealt with as follows .",
    "if @xmath369 denotes any vector quantity , and @xmath370 denotes the radial location of the first grid point away from the axis , then the normal and toroidal vector components are given by @xmath371 @xmath372 while the tangential component is set equal to zero .",
    "as previously noted , the value of @xmath21 closest to the axis has a small positive value .",
    "the scalar quantities @xmath359 , @xmath105 , @xmath104 , @xmath373 and @xmath374 are treated in the same way as @xmath375 and @xmath376 , while the flux surface - averaged profiles of these quantities are assumed to be flat at the magnetic axis . in the case of the density profile , for example , @xmath377 similar boundary conditions are applied at the axis to @xmath378 , @xmath379 , @xmath380 , @xmath380 and @xmath381 .",
    "the edge of the plasma is less problematic in terms of the coordinate system than the axis .",
    "all four of the following boundary conditions are used for different quantities @xmath87 in the code :    * * zero * : @xmath382 . *",
    "* flat gradient * : @xmath383 , i.e.  @xmath384 . * * continuous gradient * : @xmath385 is constant , i.e. @xmath386 : @xmath387 * * fixed * : @xmath388 is held fixed at some predetermined value .",
    "these boundary conditions are applied as shown in table  [ tab : edgebcs ] .",
    ".[tab : edgebcs ] plasma edge boundary conditions applied to evolving quantities in ` centori ` . [",
    "cols=\"^,<\",options=\"header \" , ]",
    "in section  [ sec : normalised_physics_eqns ] we discussed the equations governing the evolution of physics quantities in ` centori ` .",
    "each of these quantities can be split into mean ( or equilibrium ) and fluctuating parts .",
    "the `` mean '' of a scalar quantity @xmath87 in this context simply refers to its flux surface average , as defined by eq .",
    "( [ eqn : fluxsurfaceaverage ] ) , and the fluctuating component @xmath389 is the remainder : @xmath390 in the case of normalised electron density , for example , we have @xmath391 the normalised quantities @xmath315 , @xmath234 , @xmath392 and @xmath393 are split in a similar fashion . in each case",
    "the flux surface average is evaluated at each timestep after the total quantity has been updated , and the fluctuating component is obtained simply by subtracting the average from the total .",
    "the fluctuating components of vector quantities are obtained in a similar fashion by subtraction of means from totals , but the means themselves are calculated differently .",
    "the physical components of the mean ion velocity @xmath394 are given by the flux surface averages of the corresponding components of the total ion velocity @xmath101 .",
    "the mean electron velocity @xmath395 , on the other hand , is obtained from @xmath394 and @xmath396 using the flux surface - averaged form of eq .",
    "( [ eqn : vestar ] ) .",
    "the electromagnetic equilibrium vector quantities only need to be re - evaluated when the plasma equilibrium is updated ( see section  [ sec : equilibrium_solver ] ) , i.e.   when @xmath14 is recalculated .",
    "then , the mean vector potential @xmath42 is determined using eqs .",
    "( [ eqn : arho ] ) ,  ( [ eqn : azeta ] ) and  ( [ eqn : atheta ] ) .",
    "the mean magnetic field @xmath52 is obtained directly from the curl of @xmath42 , and the mean current density @xmath396 is obtained from @xmath52 via ampre s law [ eq .",
    "( [ eqn : amperes_law ] ) ] .",
    "however , eq .  ( [ eqn : atheta ] ) shows that the covariant @xmath23 component of @xmath42 depends on @xmath397 , which determines the toroidal magnetic field [ cf .",
    "( [ eqn : beq ] ) ] . the evolution of @xmath39 is described in section  [ sec : evolve_f ] .",
    "the ohmic heating power density is @xmath398 the kinetic energy densities in the electrons and ions are given by @xmath399 the total thermal energy and magnetic field energy are @xmath400 where @xmath401 is the total pressure .",
    "we define the total plasma beta as @xmath402 similarly , the poloidal beta is defined to be @xmath403",
    "the grad - shafranov equation , which can be derived from the steady - state form of the two - fluid equations @xcite , describes the equilibrium state of a current - carrying magnetised plasma in which the lorentz force is balanced by a pressure gradient force .",
    "as described below , a pseudo - transient approach is used in ` centori ` to solve this equation .",
    "similar techniques have been employed in computational fluid dynamics @xcite , but have not , as far we are aware , been applied previously to the problem of determining toroidal plasma equilibria .",
    "the grad - shafranov equation can be generalised to include transonic flows and momentum sources @xcite .",
    "currently , however , only the simplest form of the equation , which is applicable when toroidal flows are subsonic and poloidal flows are less than the sound speed multiplied by the ratio of the poloidal magnetic field to the total field @xcite , is used in ` centori ` ; it can be written in the form @xmath404 where primes denote derivatives with respect to @xmath17 .",
    "the equation can also be written in the form @xmath405 where @xmath406 is the covariant @xmath9 component of the equilibrium current density , @xmath396 .",
    "although flow modifications to equilibrium flux surfaces are neglected in the current version of ` centori ` , the effects of low mach number flows and flow shear on turbulence and mhd instabilities are taken into account in the two - fluid equations described in section  [ sec : twofluidequations ] . thus , ` centori ` can be used to model , amongst other things , the stabilising effects of sheared flows on ion temperature gradient modes @xcite and the destabilising effects of such flows on kelvin - helmholtz instabilities @xcite .",
    "it is anticipated that flow effects on plasma equilibria will be taken into account in future versions of the code ; users of the present version should note that it is strictly applicable only to subsonic equilibrium flows .",
    "the ` centori ` source code includes a free boundary grad shafranov equilibrium solver named ` grass ` @xcite ( grad shafranov solver ) , which is used to compute solutions of eq .",
    "( [ eqn : grad_shafranov ] ) , taking into account the presence of currents in poloidal field coils . figure  [ fig : grassgrid ] shows the layout of the computational domain used in this subroutine .",
    "the toroidal field coils are assumed to lie entirely outside the computational domain ; as described in section  [ sec : evolve_f ] , the toroidal field parameter @xmath39 is determined by the loop voltage and the resistivity .",
    "the solver uses two rectangular grids :    1 .   the main solution grid , within the domain @xmath407 to @xmath408 . the plasma and the coils are assumed to lie wholly within this grid",
    "the poloidal flux values on the grid boundaries @xmath409 , @xmath410 , @xmath411 and @xmath412 are calculated analytically from the given coil currents and an approximation to the current distribution in the plasma region .",
    "2 .   the plasma mask , comprising the rectangular region @xmath413 to @xmath414 . the mask must not extend outside the main solution grid .",
    "the ( hot ) plasma is assumed to lie wholly within the plasma mask , but no coils can be present inside it .    the coils current density @xmath415 ( which need nt be the same in each coil ) is assigned to a number of grid cells , to approximate the coil locations and cross - section areas .",
    "it is necessary to solve the following equation over the main solution grid : @xmath416 where @xmath417 is a function of @xmath17 throughout the region containing plasma , and @xmath418 at the coil locations .",
    "thus we can rewrite the equation as @xmath419 where @xmath420 and @xmath421 is the toroidal component of @xmath396 within the plasma : @xmath422 we denote by @xmath423 the toroidal electric field that drives the portion of the toroidal current density proportional to @xmath424 . from the resistive mhd form of ohm s law we thus have @xmath425 setting @xmath426 , the equivalent loop voltage ,",
    "we obtain @xmath427 where @xmath286 and @xmath428 ( see below ) .",
    "the dependencies of @xmath429 and @xmath129 on @xmath17 are prescribed .    to determine @xmath430 we divide eq .",
    "( [ eqn : newrj ] ) by @xmath7 and integrate over the poloidal cross - section area , identifying this quantity as the total plasma current @xmath431 : @xmath432 it follows from this that @xmath433 it is convenient to introduce a new dependent variable @xmath434 satisfying the boundary conditions @xmath435 @xmath436 it is also convenient to express @xmath17 as the sum of two terms : @xmath437 , which vanishes at @xmath438 and @xmath439 ; and @xmath440 where @xmath441 .",
    "the quantity @xmath437 is then equal to @xmath442 .",
    "equivalently , @xmath443 and @xmath444 .",
    "clearly @xmath445 vanishes at @xmath438 and @xmath446 , making it possible to compute this quantity by applying a sine fourier transform in @xmath8 .",
    "defining the operator @xmath447 by the equation @xmath448 we find that the grad - shafranov equation becomes @xmath449 since @xmath450 is a prescribed function of @xmath8 , the quantity @xmath451 only needs to be evaluated once , at the beginning of the calculation .",
    "moreover we can set @xmath452 , since it is independent of @xmath7 and depends only linearly on @xmath8 .",
    "we approach the problem of solving eq .",
    "( [ eqn : tmp06 ] ) by considering the parabolic equation @xmath453 where @xmath454 is the right hand side of eq .",
    "( [ eqn : tmp06 ] ) , @xmath455 is a prescribed pseudo - conductivity ( taken to be uniform across the poloidal plane ) and @xmath62 is a fictitious , time - like iteration variable ( not to be confused with the true time , @xmath456 ) . the problem of solving eq .",
    "( [ eqn : tmp06 ] ) is thus equivalent to finding `` steady - state '' solutions of eq .",
    "( [ eqn : heateqn ] ) .",
    "the sine transform of eq .",
    "( [ eqn : heateqn ] ) can be approximated by the finite difference equation @xmath457,\\ ] ] where the @xmath458-th sine transform coefficients are denoted by @xmath459 , @xmath460 labels the @xmath460-th grid point in the @xmath7 direction , with grid spacing @xmath461 , @xmath174 labels the pseudo - time variable , and @xmath462 is the pseudo - time step . this equation can be rearranged to give @xmath463 which is a tridiagonal matrix equation of the form @xmath464 where @xmath465 the tridiagonal matrix equation is straightforward to solve for @xmath466 ; the inverse sine transform of this yields @xmath445 and thereby @xmath437",
    ". the total flux @xmath17 is recovered by adding @xmath467 , and the process is repeated until @xmath17 over the grid does not change significantly between pseudo - time steps .",
    "in general the plasma current density @xmath421 and @xmath468 change between successive pseudo - time steps , and so the the evolution described by eq .",
    "( [ eqn : heateqn ] ) is non - linear .",
    "it should be noted that the dependencies of @xmath429 and @xmath129 on @xmath17 ( or @xmath21 ) are determined externally using ` centori ` , rather than ` grass ` . ideally these functions should vary with @xmath17 in such a way that the residual plasma current outside of",
    "the chosen edge plasma contour remains negligible .",
    "once a convergent solution for the equilibrium has been obtained , it is necessary to locate the edge of the plasma , which is defined to lie wholly within the plasma mask . by estimating @xmath469 at all grid points within the mask using finite differences ,",
    "it is straightforward to find all the stationary points of @xmath17 ; these are either x - points ( saddle points ) or the magnetic axis , which is defined to lie at the global minimum of @xmath17 within the mask",
    ". there should be no other stationary points of @xmath17 inside the mask , unless some coils have been erroneously located within it .",
    "the edge of the plasma is then defined after finding a reference @xmath470 using the following criteria ( the situation is topologically more complicated in general , but in practice this algorithm suffices ) :    * if there are no x - points within the mask , @xmath470 is chosen to be the minimum value of @xmath17 along the plasma mask perimeter or the minimum value of @xmath17 at a user - defined set of @xmath16 `` limiter '' points within the mask , whichever is lower . *",
    "if any x - points are present , @xmath470 is chosen to be either the @xmath17 of the lowest x - point or the minimum value of @xmath17 along the inner or outer edges of the mask or the limiter points , if this is lower than the @xmath17 of the lowest x - point .",
    "this ensures that the @xmath470 contour is the largest closed contour within the mask .",
    "we then define the plasma edge contour @xmath471 to be @xmath472 where @xmath473 when no x - points are present within the mask and @xmath474 otherwise .",
    "this has the effect of moving the effective plasma boundary to a contour lying slightly inside the last closed flux surface , which is necessary to ensure that the coordinate system described in section  [ sec : coordinates ] does not become strongly distorted near the plasma edge , and enables us to approximate the physics equations with central differences without incurring unacceptably large truncation errors .",
    "finally , @xmath17 is redefined within the plasma mask so that the plasma edge corresponds to @xmath19 . `",
    "centori ` is passed only this modified @xmath14 within the masked region ( thus excluding the coils ) , interpolated onto a grid of the same size ( i.e.  with the same number of elements ) using chebyshev fits in @xmath7 and @xmath8 .",
    "the algorithm for determining plasma - based coordinates described in section  [ sec : coordinates ] works extremely well when @xmath14 is specified in this way , and almost invariably yields a jacobian @xmath65 that closely approximates a flux function as a result .",
    "it is sometimes useful to be able to hold the magnetic axis at a specified @xmath16 position .",
    "for example , up - down",
    "asymmetric plasmas are often vertically unstable , and in such cases it may be difficult to obtain a convergent solution for the equilibrium using ` grass ` unless it is possible to control the plasma location during the convergence cycle .    applying a vertical magnetic field",
    "makes it possible to control the radial position of the plasma , as follows .",
    "suppose that there is a source of poloidal flux @xmath475 of the form @xmath476 where @xmath477 is a constant and @xmath478 is a measure of the major radius ( e.g.the value of @xmath7 at the centre of the computational grid ) .",
    "then @xmath479 since the poloidal magnetic field is @xmath480 it follows that the field due to @xmath475 is uniform and vertical : @xmath481 the lorentz force @xmath482 on the plasma arising from a positive plasma current @xmath483 will be inwards if @xmath484 .",
    "similarly , an externally - provided radial magnetic field affects the plasma s vertical position .",
    "the radial field due to a poloidal flux of the form @xmath485 is @xmath486 and the lorentz force on the plasma in this case is downwards if @xmath487 and @xmath488 .",
    "we adjust the values of @xmath489 and @xmath477 during each ` grass ` convergence step by comparing the latest calculated position of the magnetic axis ( @xmath490 ) with the target location ( @xmath491 ) , and applying a correction to the fluxes as follows : @xmath492 @xmath493 where @xmath494 ( typically @xmath495 ) to ensure that the change in the fluxes is not substantial . at @xmath362",
    "we assume that @xmath496 .",
    "the applied corrections should modify the radial and vertical fields in such a way that the magnetic axis is pushed towards the target location .",
    "it is important to note that the magnetic fields associated with these externally - applied poloidal flux components are curl - free and hence current - free , i.e.  there are no additional current sources within the grid implied by their presence .",
    "experimentally , vertical and radial magnetic field perturbations of this type can be introduced by changing the currents in poloidal field coils , although such field perturbations are in general non - uniform and therefore the uniform field perturbations discussed here are somewhat idealised .",
    "it is straightforward to incorporate the additional fluxes into ` grass ` by simply modifying the boundary conditions at the edge of the computational grid , at the start of each convergence loop , as follows : @xmath497 @xmath498 @xmath499 @xmath500",
    "the ` centori `  code is written in standard fortran 95 throughout , and is contained within some 21 source files .",
    "the bulk of these contain utility modules and routines to perform specific tasks such as i / o , parallel ( mpi ) communication , error handling , numerical evaluation ( chebyshev / fourier fitting , and so on ) and other customised but standard functionality .",
    "to make the code as portable as possible , we have avoided the use of external numerical libraries .",
    "those areas of the code in which such libraries might improve performance almost all occur in non - parallel segments , i.e. are run only by the `` global '' processor .",
    "since the execution of the code is overwhelmingly dominated by periods of parallel execution , serial optimisation through the use of specialised libraries is unlikely to confer significant benefits .    the physics within the code described in this paper",
    "is confined to two source files .",
    "one of these contains all the routines for initialising and evolving the physical fields , sources , sinks and so on , and also the routines for calculating plasma coordinates from the @xmath14 grid .",
    "the other contains the ` grass `  free boundary equilibrium solver as described in the previous section .      `",
    "centori `  runs in parallel , with each mpi process advancing the physics quantities in an allocated three - dimensional subdomain .",
    "aggregation of quantities such as flux surface or volume integrals and averages are performed across appropriate sections of the process population via specially - written routines .",
    "halo - swapping is necessarily frequent due to the extensive calculation of derivatives .",
    "for the small grid sizes that are suitable for mast simulations , there is a tendency for the parallelisation to become communication - limited for relatively low process counts .",
    "there are , however , two different implementations of the key numerical routines available , which are optimised for different local grid sizes  @xcite .",
    "figure  [ fig : speedup ] shows speed - up versus process count for simulations performed on hector at epcc and hpc - ff at the jlich supercomputing centre when a computational grid of @xmath501 and the `` eager '' implementation of the key routines , which perform better for a large number of processes , are used .",
    "the hector results were obtained using the phase 2b system , based on cray s xe6 hardware , which provides dual socket nodes with 2.1 ghz amd opteron 12-core processors and uses cray s proprietary gemini interconnect ; the pgi compiler was used .",
    "the hpc - ff results were obtained using dual socket nodes with 2.93 ghz intel xeon x5570 quadcore processors and qdr infiniband switch network ; for these runs the intel compiler was used . in this particular case",
    "the application shows almost linear speed - up for process numbers of up to 128 , and continues to display a significant speed - up even for 512 processes . for a grid size of @xmath502 an almost linear speed - up",
    "is observed up to at least 512 processes ( the largest number of processes used so far ) .",
    "such a grid is larger than is normally used , but might be employed for iter simulations in the future .",
    "the computational domain is decomposed across the requested number of mpi processes in a standard cartesian communicator , with periodicity automatically invoked in the two angular directions .",
    "physics considerations suggest that the number of grid intervals @xmath503 , @xmath504 and @xmath505 in the radial , poloidal and toroidal directions should be roughly in the ratio @xmath506 ( a benchmarking study has confirmed that this aspect ratio delivers results that are close to optimal @xcite ) . in order to split each dimension into equal - sized portions across processes , the corresponding number of grid intervals must be one greater than a power of two , and the number of processes in each dimension must be an exact power of two .",
    "thus , the computational grid used to model mast typically has @xmath507 , @xmath508 , @xmath509 over a corresponding grid of @xmath510 processes .",
    "novel techniques are used to optimise the serial execution ( on each parallel process ) of the numerical scheme within ` centori ` .",
    "specially designed derived datatypes employing advanced pointer techniques are used , together with lazy evaluation and the option to use strip - mining to tailor the code s vectorisation .",
    "all the numerical vector operations ( scalar and vector products , gradient , divergence and curl derivatives ) , and many pure scalar or combined scalar - vector operations , are contained within functional black boxes , hiding the implementation details of the underlying datatypes and the potential internal conversions between vector representations from the physics programmer .",
    "this enables a researcher to convert a complicated physics equation to a single line of code with ease .",
    "full details are given in  @xcite .",
    "file handling is performed in parallel , with each process writing its own output data files .",
    "however an option is under development that uses mpi - io routines to amalgamate the i / o more efficiently  @xcite .    in contrast , the nature of the ` grass `  two - dimensional equilibrium solution over the entire poloidal cross - section of the plasma ( and beyond ) means that it is best performed in the @xmath16 laboratory coordinates on a single process , as is the subsequent construction of the plasma coordinate system .",
    "this impacts only weakly on the code performance , as it is not necessary to recalculate the poloidal flux contours @xmath14 on timescales shorter than many microseconds , and thus ` grass `  is called only after many thousands of evolution timesteps ; @xmath511  s is the typical timestep used .",
    "a typical run requires around 600 mb of ram , and it takes around 12 hours on 128 mpi processes to simulate 1@xmath512ms of plasma evolution in typical tokamak conditions .",
    "the ` centori `  code is best considered as a complete software package , rather than simply a collection of source and input files .",
    "in addition to its normal role for compilation , the makefile includes a number of utility functions that perform tasks such as automatic generation of the code documentation , and the creation of a tar file containing the entire source code , its documentation and visualisation files , and the input and output files .",
    "this has proved to be of great benefit in keeping all of the data from a given run together for archival purposes .",
    "the source code is self - documenting to a degree , using an included parser program ( ` autodoc ` ) to generate html files for each subprogram from specially - formatted comment lines within the code .",
    "in addition , a full latex manual is rigorously maintained to ensure its continued strict agreement with the evolving source code ( this paper is an abridged version of the full manual ) .",
    "a comprehensive visualisation suite has been developed to allow straightforward interpretation of the physics output from ` centori ` .",
    "the program ( ` centoriscope ` ) is written in the idl language  @xcite .",
    "work is in progress to bring ` centori `  into the eu integrated tokamak modelling ( itm  @xcite ) framework .",
    "the code is maintained within a private subversion repository .",
    "currently , access to the code is obtainable only by prior permission from the authors .",
    "an early version of ` centori ` was used to study wave propagation in the vicinity of magnetic x - points ; analytical results for the evolution of perturbed wave energy and plasma kinetic energy in the ideal mhd limit were recovered numerically @xcite . in this section",
    "we present two illustrative examples of calculations that can be performed using the full version of the code .",
    "we demonstrate the capability of using ` centori ` to model mhd instabilities by considering the example of a tearing mode in a very large aspect ratio ( minor radius @xmath513 m , major radius @xmath514 m ) , circular cross - section tokamak plasma with a toroidal magnetic field of 9.7@xmath512 t . for this purpose",
    "we prescribe an equilibrium with uniform density ( @xmath515m@xmath516 ) and temperature ( @xmath517ev ) .",
    "the resistivity , which we take to be given by the spitzer expression [ eqs .",
    "( [ eqn : spitzer ] ) and ( [ eqn : tauce ] ) ] , is then equal to @xmath518s , and the lundquist number @xmath519 .",
    "the number of radial grid points ( 256 ) was chosen to be sufficiently large that the resistive layer width @xmath520 cm was well - resolved .",
    "the quantity @xmath521 , which is proportional to the toroidal current density in this large aspect ratio limit , was prescribed to have the following profile : @xmath522\\right\\}^{3/2}},\\ ] ] where @xmath523 is a constant , chosen to ensure that the corresponding @xmath274-profile remained above unity across the plasma , with @xmath524 at a normalised minor radius of about 0.65 .",
    "this configuration is expected to be unstable to the growth of a tearing mode with poloidal and toroidal mode numbers @xmath525 , @xmath526 @xcite . for the purpose of this calculation only the generalised ohm s law and",
    "the ion momentum equation were used [ eqs .",
    "( [ eqn : momentum ] ) and ( [ eqn : ohms_law ] ) ] .",
    "ohm s law was reduced to the resistive mhd form , and viscosity was neglected in the momentum equation ( except for the numerical viscosity described in section  [ sec : vi_evolution ] , which is required to suppress numerical oscillations , but is set at a level which is sufficiently low for the system to be effectively inviscid ) .",
    "the electrostatic potential in this case was calculated not using eq .",
    "( [ eqn : phistar2 ] ) but by evolving the perpendicular ion velocity , identifying this as an @xmath527 drift , and integrating to obtain @xmath107 .",
    "nonlinear terms were omitted from both ohm s law and the momentum equation . modes with @xmath528 equal to values of @xmath274 inside the plasma other than 2 , such as the 3/2 mode , can also be unstable in the presence of a current density gradient ; in general these modes can not be exluded from simulations performed using a non - spectral code such as ` centori ` . for this particular simulation , a fourier filter",
    "was therefore applied at the end of each time step to exclude all harmonics other than the dominant 2/1 mode .",
    "as expected , the configuration described above was found using ` centori ` to be unstable to the growth of a 2/1 tearing mode .",
    "figure [ fig : azeta ] shows snapshots of @xmath529 and @xmath107 during the tearing mode growth .",
    "the profiles of these quantities resemble those obtained using cutie in a similar ( although not identical ) parameter regime ; cf .",
    "fig . 2 in ref .",
    "@xcite , which was obtained with @xmath530 ( defined in terms of the local resistivity at the magnetic axis ) and relatively low viscosity ( it should be noted that a precise comparison between tearing mode calculations performed using ` centori ` and the cutie results presented in ref .",
    "@xcite is not in fact possible , since in the latter case a low aspect ratio ( @xmath531 ) was assumed for the purpose of calculating the @xmath274-profile but the flux surfaces , as in all cutie simulations , were taken to be concentric circles ; in a toroidal code such as ` centori ` the circular flux surface limit can only be approached by taking the aspect ratio to be very large ) .",
    "the growth rate of the mode shown in fig .",
    "[ fig : azeta ] is approximately @xmath532 where @xmath533 is the alfvn time ; this is comparable to the rate deduced analytically in ref .",
    "@xcite , i.e. @xmath534 .",
    "it is somewhat lower than the rate found using cutie in the low viscosity limit with @xmath535 at the magnetic axis ( @xmath536 ) @xcite , but in this calculation the local resistivity at the @xmath524 surface was higher than the value at the magnetic axis , implying a higher 2/1 tearing mode growth rate .",
    "we present here the results of a ` centori ` run simulating 1@xmath512ms of a conventional aspect ratio tokamak plasma with minor radius 0.55@xmath512 m , major radius 1.67@xmath512 m , elongation 1.7 and triangularity 0.18 ; the equilibrium flux surface contours , computed using ` grass ` , are shown in fig .",
    "[ fig : equilibrium ] .",
    "the chosen plasma current was 1@xmath512ma , the toroidal magnetic field 2.5@xmath512 t and the plasma volume 15@xmath512m@xmath366 .",
    "the initial flux surface - averaged density , temperature and current density ( primary quantities ) were held approximately constant during the simulation by using adaptive sources of the form @xmath537 , where @xmath87 is the primary variable profile , @xmath538 is its initial profile , and @xmath454 is an inverse reaction time response , set equal to the reciprocal of @xmath539 , the ` centori ` time step ( 0.5@xmath512ns , in this case ) .",
    "both the initial ion velocity and the external momentum source @xmath540 were set equal to zero .",
    "the profiles of electron density , electron and ion temperatures , are shown in fig .",
    "[ fig : profiles ] , together with the @xmath274-profile .",
    "the evolution of the sources follows that of the fluctuations ; after an initial transient , lasting around 100@xmath541s , they reached a quasi - steady level .",
    "the boundary conditions were those listed in table 1 .",
    "the spatial grid comprised 129 radial points , 65 poloidal points and 33 toroidal points .",
    "the run was executed on 64 processors of the hpc - ff machine at the jlich supercomputing centre , the total wall - clock time being approximately 18 hours .",
    "figure  [ fig : fluctuations ] shows the evolution of fluctuations in toroidal current density and electron density at @xmath542 , @xmath58 , @xmath543 .",
    "it is evident from a comparison of the relative amplitudes of the temporal variations in these two quantities that the fluctuations are electromagnetic in character .",
    "figure  [ fig : contours ] shows a poloidal cross - section of the toroidal current density fluctuations at @xmath543 . the @xmath544 symbol in this figure marks the location chosen for the sample of local fluctuations shown in fig .",
    "[ fig : fluctuations ] .",
    "the temporal evolution of the electron thermal conductivity is shown in fig .",
    "[ fig : chie ] . in the plasma turbulence literature",
    "this quantity is often normalised to the gyro - bohm diffusivity @xmath545 where @xmath546 , @xmath547 and @xmath548 is the temperature scale length @xcite . in the case of the local plasma parameters corresponding to the results shown in fig .",
    "[ fig : chie ] , @xmath549m@xmath550s@xmath336 ; normalised to this value , the time - averaged thermal conductivity plotted in fig .",
    "[ fig : chie ] is around 2 , which is comparable to normalised @xmath331 values in gyro - kinetic simulations reported by peeters and co - workers @xcite .",
    "the results presented above can be used to estimate the magnitudes of the potential and inductive contributions to the turbulent electric field ; as noted in section  [ sec : vi_evolution ] only the potential electric field term is retained in the ion momentum equation in ` centori ` . from fig .",
    "[ fig : fluctuations ] we note that the electron density fluctuations have a relative amplitude @xmath551 of the order of 10@xmath552 .",
    "electron force balance implies that the associated electrostatic potential fluctuations @xmath553 are of order @xmath554v , since the electron temperature at this point in the plasma is about 2@xmath512kev ( cf .",
    "[ fig : profiles ] ) .",
    "figure  [ fig : contours ] indicates that the fluctuations have a characteristic scale length perpendicular to the magnetic field @xmath555 of order 10@xmath556 m , suggesting potential electric field fluctuations of @xmath557kvm@xmath336 .",
    "in contrast , the frequency ( @xmath558krad s@xmath336 ) and amplitude ( @xmath559mam@xmath552 ) of the current fluctuations @xmath560 shown in the upper frame of fig .  [",
    "fig : fluctuations ] imply inductive electric fields of order @xmath561vm@xmath336 ( @xmath562 being the permeability of free space ) . thus , for the parameters of this simulation ( which are fairly representative of hot tokamak plasmas ) , the potential component of the fluctuating electric field is around three orders of magnitude larger than the inductive component , and our neglect of the latter in the ion momentum equation is therefore fully justified .",
    "we have presented a comprehensive description of a novel two - fluid electromagnetic plasma turbulence code , ` centori ` , together with sample output from a ` centori ` simulation of a large aspect ratio tokamak plasma .",
    "the code is used to compute self - consistently the time evolution of plasma fluid quantities and fields in a toroidal configuration of arbitrary aspect ratio and plasma beta .",
    "the code is parallelised , and the equations are represented in fully finite difference form , ensuring good scalability .",
    "the equations are solved in a plasma coordinate system that is defined such that the jacobian of the transformation from laboratory coordinates is a function only of the equilibrium poloidal flux , thereby accelerating vector operations and the evaluation of flux surface averages . `",
    "grass ` , a subroutine of ` centori ` , is used to determine the plasma equilibrium ( and hence the plasma coordinates in which the fluid and maxwell equations are solved ) by computing the steady - state solutions of a diffusion equation with a pseudo - time derivative .",
    "the physics model implemented in ` centori ` is based solidly on that used in the highly - successful cutie code , and we are confident that it will prove to be a powerful tool for the study of heat , particle and momentum transport in tokamak plasmas . in a forthcoming paper we will report the results of the first global simulations , performed using ` centori ` , of electromagnetic , nonlinearly - saturated turbulence and transport in a spherical tokamak plasma ( mast ) .",
    "this work was supported by epsrc grants ep / i501045 ( as part of the rcuk energy programme ) , ep / h00212x/1 and ep / h002081/1 , and the european communities under the contract of association between euratom and ccfe .",
    "the views and opinions expressed herein do not necessarily reflect those of the european commission .",
    "we would like to thank dr f. militello ( ccfe ) and two anonymous referees for helpful suggestions that have led to improvements in this paper .",
    "akers , p. helander , a. field , c. brickley , d. muir , n.j .",
    "conway , m. wisse , a. kirk , a. patel , a. thyagaraja , c.m .",
    "roach , the mast and nbi teams , proceedings of the 20th iaea fusion energy conference , international atomic energy agency , vienna , 2005 , ex/4 - 4 ."
  ],
  "abstract_text": [
    "<S> a new global two - fluid electromagnetic turbulence code , ` centori ` , has been developed for the purpose of studying magnetically - confined fusion plasmas on energy confinement timescales . </S>",
    "<S> this code is used to evolve the combined system of electron and ion fluid equations and maxwell equations in toroidal configurations with axisymmetric equilibria . </S>",
    "<S> uniquely , the equilibrium is co - evolved with the turbulence , and is thus modified by it . ` </S>",
    "<S> centori ` is applicable to tokamaks of arbitrary aspect ratio and high plasma beta . </S>",
    "<S> a predictor - corrector , semi - implicit finite difference scheme is used to compute the time evolution of fluid quantities and fields . </S>",
    "<S> vector operations and the evaluation of flux surface averages are speeded up by choosing the jacobian of the transformation from laboratory to plasma coordinates to be a function of the equilibrium poloidal magnetic flux . </S>",
    "<S> a subroutine , ` grass ` , is used to co - evolve the plasma equilibrium by computing the steady - state solutions of a diffusion equation with a pseudo - time derivative . </S>",
    "<S> the code is written in fortran 95 and is efficiently parallelized using message passing interface ( mpi ) . </S>",
    "<S> illustrative examples of output from simulations of a tearing mode in a large aspect ratio tokamak plasma and of turbulence in an elongated conventional aspect ratio tokamak plasma are provided .    </S>",
    "<S> two - fluid and multi - fluid plasmas , drift waves , tokamaks , spherical tokamaks , plasma turbulence , magnetohydrodynamic and fluid equation    _ pacs : _ </S>",
    "<S> 52.30.ex , 52.35.kt , 52.35.ra , 52.55.fa , 52.65.kj </S>"
  ]
}
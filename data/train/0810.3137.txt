{
  "article_text": [
    "a well - known long standing problem in combinatorics and statistical mechanics is to find the generating function for self - avoiding polygons ( or walks ) on a two - dimensional lattice , enumerated by perimeter .",
    "recently , we have gained a greater understanding of the difficulty of this problem , as rechnitzer @xcite has _ proved _ that the ( anisotropic ) generating function for square lattice self - avoiding polygons is not differentiably finite @xcite , confirming a result that had been previously _ conjectured _ on numerical grounds @xcite .",
    "that is to say , the generating function can not be expressed as the solution of an ordinary differential equation with polynomial coefficients .",
    "there are many simplifications of the self - avoiding walk or polygon problem that are solvable @xcite , but all the simpler models impose an effective directedness or equivalent constraint that reduces the problem , in essence , to a one - dimensional problem .",
    "_ prudent _ walks were introduced to the mathematics community by pra in an unpublished manuscript @xcite and more recently reintroduced by duchi @xcite .",
    "a prudent walk is a connected path on @xmath5 such that , at each step , the extension of that step along its current trajectory will never intersect any previously occupied vertex .",
    "such walks are clearly self - avoiding .",
    "we take the empty walk , given by the vertex @xmath6 to be a prudent walk .",
    "[ psaw ] shows a typical prudent walk of @xmath7 steps , generated via monte carlo simulation using a pivot algorithm .",
    "note the roughly linear behaviour  it is believed , although unproven , that the mean - square end - to - end distance grows like @xmath8 for prudent walks , i.e. that @xmath9 .",
    "typical prudent walk of @xmath7 steps , generated via monte carlo simulation using a pivot algorithm . ]",
    "the _ bounding box _ of a prudent walk is the minimal rectangle containing the walk .",
    "the bounding box may reduce to a line or even to a point in the case of the empty walk .",
    "one significant feature of two - dimensional prudent walks is that the end - point of a prudent walk is always on the boundary of the bounding box .",
    "each step either lies along the boundary perimeter , or extends the bounding box .",
    "note that this is not a bijection .",
    "there are walks such that each step lies on the perimeter of the bounding box that are not prudent .",
    "such walks we call _ perimeter walks _ , and they will be the subject of a future publication  @xcite .",
    "furthermore , if one extends the definition of prudent walks to three - dimensional walks , then _ it is not true _ that each step of the walk lies on the perimeter of the bounding box .",
    "again , one can define three - dimensional walks with the property that each step lies on the perimeter of the bounding box , and these too will be discussed in the aforementioned publication  @xcite .",
    "another feature of prudent walks that should be borne in mind is that they are , generally speaking , not reversible .",
    "if a path from the origin to the end - point defines a prudent walk , it is unlikely that the path from the end - point to the origin will also be a prudent walk .",
    "ordinary saw are of course reversible .    a related , but not identical ,",
    "model was proposed more than twenty years ago in the physics literature @xcite , where it was named the _ self - directed walk_. in @xcite the authors conducted a monte carlo study and found that @xmath10 , where @xmath11 . here",
    "@xmath12 is the mean square end - to - end distance of a walk of length @xmath13 .",
    "they also sketched an argument that the critical exponent @xmath2 characterising the divergence of the walk generating function , @xmath14 should be exactly 1 , corresponding to a simple pole singularity .",
    "this model differs from prudent walks in that different probabilities are assigned to different walks , depending on the number of allowable choices that can be made at each step . for the problem of prudent walks , all realisations of @xmath13-step walks",
    "are taken to be equally likely .    the problem proposed by pra",
    "was subsequently revived by duchi @xcite who also studied two proper subsets , called _ prudent walks of the first type _ and _ prudent walks of the second type _ ( see figure  [ poly ] for examples ) .",
    "prudent walks of the first type are prudent walks in which it is forbidden for a west step to be followed by a south step , or a south step to be followed by a west step .",
    "equivalently , prudent walks of the first type must end on the northern or eastern sides of the bounding box .",
    "such walks are sometimes referred to as _ 2-sided prudent walks . _     typical examples of : @xmath15 a type 1 prudent walk , @xmath16 a type 2 prudent walk , @xmath17 a general prudent walk , and @xmath18 a prudent polygon.,width=566 ]",
    "prudent walks of the second type are prudent walks in which it is forbidden for a west step to be followed by a south step when the walk visits the top of its bounding box and a west step followed by a north step when the walk visits the bottom of its bounding box .",
    "equivalently , prudent walks of the second type must end on the northern , eastern or southern sides of their bounding box .",
    "such walks are sometimes referred to as _ 3-sided prudent walks .",
    "_ duchi found the solution for prudent walks of the first type , and gave functional equations for the generating function of ( unrestricted ) prudent walks .",
    "more recently the problem has been revisited by bousquet - mlou  @xcite , who gave a systematic treatment of all three types , and in particular gave the solution for the generating function for prudent walks of the second type .",
    "results for prudent walks ( unrestricted ) can be found in @xcite .",
    "in two dimensions , we use transfer - matrix algorithms to count the number of prudent walks and polygons . given a prudent walk , only a small amount of information about the walk is required in order to determine how to extend the walk by a single step so as to form a longer prudent walk .",
    "this information is called a _",
    "configuration_. any prudent walk of a given length corresponds to a unique configuration and there is only a finite number of configurations .",
    "our algorithm progresses by computing the number of walks of length @xmath19 corresponding to each possible configuration and then adding a single step at a time to each configuration , that is adding a step to each walk in the equivalence class of walks corresponding to a given configuration .",
    "this is repeated ( starting from a walk of size 1 ) until a given maximal length @xmath13 is reached .",
    "the information that needs to be stored in a configuration depends on which sub - class of prudent walks or polygons we are counting .",
    "consider unrestricted prudent walks . any partial walk of say @xmath19 steps will be contained within a bounding box , which is the smallest rectangle into which we can fit the walk .",
    "it is easy to show that the end - point of the walk must be on a side of this box .",
    "the next step must either move away from the box , making it larger , or along the current side , which is possible only if the walk has not already visited vertices lying in that direction .",
    "the information needed to describe the configuration of prudent walks is the dimensions of the bounding box , which side of the box the walk end - point is on , the location of the end - point on that side , and an integer representing the directions in which the walk is allowed to be extended , i.e. whether there are sites of the walk along the side to the left of the end , to the right of the end , or neither ( both is not possible . )    without loss of generality , we can assume that the end - point of the walk is on the top side of the bounding box , since direction is not important for unrestricted prudent walks .",
    "we can also assume that the end of the walk is not farther from the left side than from the right side , since the number of ways in which a walk can be completed is invariant under reflection .",
    "for a given configuration , there are three possible steps a walk can take :    * a step outward , away from the current side ; * a step to the left along the current side , if there are no walk sites in that direction ; * a step to the right along the current side , if there are no walk sites in that direction .",
    "when we move from a side to a corner of the bounding box , we consider the end - point of the walk to have moved to the other side only if that side has been moved outward by the step .    the transfer - matrix algorithm proceeds by adding a single walk step at a time .",
    "we keep a list of the possible configurations and the number of walks in the equivalence class of that configuration .",
    "the algorithm steps through the list , and for each source configuration @xmath20 , generates the new target configurations @xmath21 that can be obtained by adding a single step ( there are at most three new target configuration @xmath21 per source configuration ) .",
    "we then add the number of walks @xmath22 with the source configuration @xmath20 to the number of walks @xmath23 of each of the target configurations @xmath21 .",
    "the length of a walk is equal to the number of iterations of the algorithm and the total number of walks of a given length is found by summing the number of walks @xmath22 in the list of source configurations .    for prudent polygons ,",
    "the position of the end - point of the walk is not enough information to determine if the walk can be extended to create a prudent polygon .",
    "the position of the start - point of the walk is also required .",
    "so we have to extend a configuration to include the coordinates of the start - point of the walk .",
    "if the start of the walk is not on one of the sides of the bounding box , nor adjacent to a site on the current bounding box side that is in a direction in which the walk can extend , then the walk can not be extended to form a prudent polygon , and we do not need to calculate the number of walks with that configuration .",
    "so if such a configuration is generated by the transfer matrix algorithm , it is discarded .",
    "if we are enumerating polygons of size @xmath13 , and for a given configuration of @xmath19-step walks we can not reach a site adjacent to the end point in @xmath24 steps or less , then we can ignore that configuration .",
    "when calculating the number of polygons of a given size , we sum the number of walks only for those configurations @xmath20 where the end - point is adjacent to the start - point .",
    "the number of configurations grows like @xmath25 .",
    "the width @xmath26 of the bounding box can vary from 1 to @xmath13 while the length @xmath27 can vary from 1 to @xmath28 .",
    "some smaller boxes can not occur because for @xmath29 the walk can not fit within the box , but we shall ignore this effect for simplicity . in a box of size @xmath30 the end - point",
    "can be in any of the @xmath26 positions on the top edge while the starting point can be in @xmath31 positions , so up to constant factors ( arising from the restrictions on the directions the walk may take etc . )",
    "we have that the number of configuration must be proportional to @xmath32 as indicated above we do not have to keep all configurations but can discard some because they wo nt give a prudent polygon of size @xmath33 .",
    "this however does not help reduce the asymptotic growth in the number of configurations which remains at @xmath34 and the computational complexity of the algorithm is thus @xmath35 .    in prudent walks and polygons of types 1 and 2",
    ", we can not ignore the direction of the current edge in our configuration , since some steps may be disallowed depending on their direction .",
    "so we can not assume that the end - point is on the top edge , or arbitrarily reflect the configuration , since rotations and reflections of a configuration are not equivalent .",
    "however , for type 1 walks and polygons we can reflect about the southwest - to - northeast axis ; and for type 2 walks we can reflect about the east - west axis .",
    "apart from the precise information required in the configuration , the test for which steps are valid from a given configuration , and which configurations should be accumulated to give the result , the algorithm to enumerate each of these six objects ( type 1 , type 2 and full walks and polygons ) is identical .",
    "so we produced one program to solve all of these problems .",
    "the lists are stored in hash tables for efficiency .",
    "the number of walks for each configuration and the total number of walks or polygons are computed modulo a large prime number close to the computer s word size .",
    "the computation is repeated for several primes and the final result is calculated by use of the chinese remainder theorem .",
    "this is more efficient than performing the whole calculation using numbers larger than the computer s word size .    in the following sections we show that for prudent walks and polygons of types 1 and 2 the generating functions can be derived rigorously or found from relatively short series .",
    "the exceptions are unrestricted prudent walks and polygons , and in the former case the number of walks can be calculated efficiently by iteration of a functional equation .",
    "so the only case requiring serious computational effort is that of unrestricted prudent polygons .",
    "we enumerated the number of prudent polygons up to size 1004 .",
    "the calculation was performed on the sgi altix cluster of the australian partnership for advanced computing ( apac ) .",
    "this cluster has a total of 1920 1.6ghz itanium2 processors .",
    "the algorithm was parallelised in a fairly straightforward manner with configurations distributed across processors using a basic hashing scheme . as in the basic algorithm",
    ", we step through the list of source configurations and generate all the new target configurations . for each target",
    "we check , using our hashing scheme , on which processor the target should reside . if this is not the current processor the configuration and its count is stored in a temporary stack . at regular intervals",
    "we pause in the main calculation in order to distribute the configurations from the temporary stacks to their designated processors .",
    "we found experimentally that it was advantageous to do the ` parallel ' hashing using only the bounding box and starting - point information from the configuration . also doing the updating of the walk counts is fairly cheap and for this reason we did several primes simultaneously in a single run . to reproduce the integer",
    "coefficients correctly up to 1004 steps required some 36 primes so in practice we did 4 runs with each run using 9 primes .",
    "each run utilised 160 processors and took about 9 hours with about 1/3 of this time used in the communications part of the algorithm . in total",
    "we used some 5500 cpu hours .",
    "in this section we summarise the known results for prudent walks .",
    "more detail can be found in @xcite .",
    "we denote the generating function of prudent walks of the first type by @xmath36 where @xmath37 is the number of @xmath13-step prudent walks of the first type .",
    "then  @xcite @xmath38 it is clear that the dominant singularity is a simple pole located at the real positive zero of the polynomial @xmath39 notably at @xmath40 thus the critical exponent @xmath41 and the asymptotic form of the coefficients is @xmath42 for any @xmath43 where @xmath44    we denote the generating function of prudent walks of the second type by @xmath45 where @xmath46 is the number of @xmath13-step prudent walks of the second type .    the generating function , first found by bousquet - mlou  @xcite is much more complicated than that for prudent walks of the first type .",
    "first , we define @xmath47 then @xmath48 where @xmath49 and @xmath50    in this case the asymptotics are much more difficult to establish .",
    "bousquet - mlou  @xcite has confirmed that the dominant singularity is precisely as for type 1 prudent walks , that is to say , a simple pole located at the real positive zero of the polynomial @xmath39 notably at @xmath51 the factor @xmath52 appearing in the denominator of ( [ t ] ) gives rise to an infinite sequence of poles on the real axis , lying between @xmath53 and @xmath54 which are not canceled by zeros of the numerator .",
    "this accumulation of poles is enough to prove that the generating function can not be d - finite .",
    "prudent walks have no additional geometric restrictions , the only restriction being that they are prudent .",
    "we denote the generating function of such walks as @xmath55 where @xmath56 is the number of @xmath13-step prudent walks .",
    "duchi gave two coupled equations which can be iterated to give the series coefficients of prudent walks in polynomial time .",
    "rechnitzer pointed out that these equations can be combined into a single equation , @xmath57 which can be iterated , and the generating function obtained by setting @xmath58 a closed form solution for this problem has not been found . in earlier work  @xcite the first 400 series coefficients were obtained and analysed , and it was conjectured that the critical point and critical exponent remain unchanged from those of prudent walks of type 1 and type 2 .",
    "that is to say , type 1 , type 2 and unrestricted prudent walks have the same critical point , and the same critical exponent @xmath41 corresponding to a simple pole .    the anisotropic generating function can be defined as follows : if @xmath59 denotes the number of prudent walks with @xmath19 horizontal steps and @xmath13 vertical steps , then the anisotropic generating function can be written @xmath60 where @xmath61 is the ( rational @xcite ) generating function for prudent walks with @xmath13 vertical steps .",
    "we  @xcite calculated the first 10 generating functions @xmath62 and found a regular pattern in the denominators @xmath63 with factors corresponding to cyclotomic polynomials of steadily increasing degree .",
    "if this pattern persists , the generating function can not be d - finite , as the pattern of cyclotomic polynomials of increasing degree implies a build - up of zeros on the unit circle in the complex @xmath64 plane , and such an accumulation is incompatible with d - finite functions .",
    "as noted above , type-2 prudent walks are not d - finite , and the numerical evidence here allows us to conjecture that ( anisotropic ) unrestricted prudent walks are also not d - finite .",
    "polygon analogues of these three classes of walks can be naturally defined as walks of the given class that end at a vertex adjacent to their starting vertex .",
    "the relevant generating functions are @xmath65 where @xmath66 is the number of @xmath67-step prudent polygons of the first type , @xmath68 where @xmath69 is the number of @xmath67-step prudent polygons of the second type , and @xmath70 where @xmath71 is the number of @xmath67-step prudent polygons .",
    "see fig .",
    "[ poly ] for an example of a prudent polygon .",
    "we have generated extensive isotropic and anisotropic series expansions for prudent polygons .",
    "just as we did for prudent walks above , if we distinguish between steps in the @xmath64 and @xmath72 direction , and let @xmath73 denote the number of prudent polygons with @xmath74 horizontal steps and @xmath67 vertical steps , then the anisotropic generating function for polygons can be written @xmath75 where @xmath76 is the ( rational @xcite ) generating function for prudent polygons with @xmath67 vertical steps .",
    "we generated more than 100 terms of the series for type 1 polygons , as described in the previous section , which was more than sufficient to identify the generating function .    for prudent walks of the first type",
    ", we found , experimentally , that the generating function satisfies a second order linear ode , @xmath77 where @xmath78 @xmath79 @xmath80 which can be solved to yield @xmath81    this result has recently been proved by schwerdtfeger  @xcite , who showed it can be derived from the known result for the generating function of bar - graph polygons , as type-1 prudent polygons are essentially bar - graph polygons . from ( [ p1 ] ) it can be seen that @xmath82 where @xmath83 is the smallest positive root of the polynomial @xmath84 the smallest root is at @xmath85 so @xmath86 this should be compared to @xmath87 for type-1 prudent walks .",
    "clearly , prudent polygons are exponentially rare among prudent walks , unlike the analogous situation for ordinary saw , for which it is known that the growth constants of saw and sap are the same .    using the conventional exponent notation , so that @xmath88 we see that @xmath89      for prudent polygons of the second type , we again generated long series , but were unable to find the generating function by numerical experimentation .",
    "given the complexity of the known generating function for type-2 prudent walks , this is perhaps not surprising .",
    "nevertheless , we were able to obtain quite precise numerical results , allowing us to conjecture @xmath90 where , again , @xmath89 however , for @xmath91 we find @xmath92 which is greater than @xmath93 and shows that type-1 prudent polygons are exponentially rare among type-2 prudent polygons , which are in turn exponentially rare among type-2 prudent walks .",
    "very recently schwertdfeger  @xcite has obtained the exact generating function for these polygons , incidentally confirming our numerical conjectures .",
    "he finds the generating function to be    @xmath94 where @xmath95 and @xmath96 where @xmath97 @xmath98 and    @xmath99 asymptotic analysis of this expression @xcite shows that the dominant singularity is given by the real positive zero of @xmath100 which occurs at @xmath101 and the singularity of the generating function is a square - root singularity , just as for type 1 prudent polygons .",
    "both the location of the singularity and its exponent confirm our earlier numerical work .    turning to the anisotropic generating function ,",
    "we find numerically that @xmath102 for @xmath13 even , and @xmath103 for @xmath13 odd .",
    "this denominator behaviour is not inconsistent with a d - finite generating function , but is precisely of the form observed for type-2 prudent walks , which are not d - finite .",
    "it is therefore not surprising that the generating function for the _ isotropic _ type 2 polygon is not d - finite , though the functional form of the anisotropic generating function above gives no clue as to this fact .",
    "however , this result has been confirmed , in the isotropic case , by schwertdfeger  @xcite , who proved non d - finiteness .",
    "again we resorted to a numerical study .",
    "the methods we used to analyse and estimate the asymptotic behaviour of the series have all been described in @xcite .",
    "we found from our analysis that the series expansion is quite badly behaved , with evidence of very strong sub - dominant asymptotic behaviour that mask the dominant asymptotic behaviour until quite large values of @xmath13 are reached .",
    "our initial attempts at a differential approximant analysis were not as convincing as they usually are .",
    "this was not really surprising , as there is evidence of a large number of singularities on the real axis , just beyond the critical point .",
    "this is the known situation for type-2 polygons , where there is an infinite number of poles in a small range of the real axis , just beyond the critical point .",
    "it is unremarkable that unrestricted polygons behave similarly . nevertheless , using 3rd order inhomogeneous approximants , and a series of 125 coefficients , corresponding to a maximum perimeter of 250",
    ", we were able to estimate the critical point at @xmath104 or @xmath105 the singularities appeared to be double roots , and we could not get a consistent estimate of the exponent .    accordingly , we based our analysis on ratio type methods , which generally are much more slowly convergent than differential approximant methods , but have the advantage that convergence , when it eventually does take place , is more evident .    indeed , we had to generate some 500 terms in the series ( corresponding to polygons with perimeter of up to 1000 steps ) , before we could get a reasonably clear picture of the asymptotics , and even then it is not as unequivocal as we would like . to estimate the critical point , we used a range of extrapolation methods to extrapolate the ratio of successive terms .",
    "we first used wynn s algorithm , which is known to be slowly convergent , but robust .",
    "the first iterates of the ratios were monotonically increasing , beyond @xmath106 this sequence should converge to @xmath107 the second iterate was also steadily increasing , suggesting that @xmath108 higher iterates were unstable .",
    "we next used brzezinski s @xmath109 algorithm , which is known to be rapidly convergent under optimal circumstances .",
    "the first iterates of the ratios were monotonically increasing for 84 terms , then decreasing until 187 terms , then increasing again , beyond @xmath110 this sequence may continue to exhibit oscillatory behaviour , so we are reluctant to use it as anything other than a guide .",
    "the second iterates started oscillating quite early in the sequence .",
    "higher iterates were unstable .",
    "we next used the levin @xmath111-transform , which is also known to be rapidly convergent in ideal circumstances .",
    "the first iterates of the ratios were monotonically increasing for the first 122 ratios , then steadily decreasing , and seemingly approaching an asymptote at a value of 4.4157 .",
    "the second iterates reached a minimum at 198 terms , then steadily increased , and also approached an asymptote around 4.4157 , though this is of no significance , as the previous iterates were all around that value , so one would expect an iteration of an almost constant sequence to give that constant value .",
    "higher iterates were unstable .",
    "finally , a neville table gave monotone first and second iterates .",
    "the first iterates were steadily increasing , suggesting @xmath112 while the second iterates increased more slowly , and gave @xmath113 the third iterates reached a maximum at 116 terms , and then a minimum at 201 terms , and then steadily increased .",
    "if this monotone trend continues , we can conclude @xmath114 combining all these methods , we estimate @xmath115 or @xmath116 which encompasses all the results .    in figure [ ratio ]",
    "we show a plot of the ratios of successive terms plotted against @xmath117 assuming the generating function behaves as @xmath118 then asymptotically , the ratios should approach @xmath119 with gradient @xmath120 from the ratio plot , a limit around 4.415 is very plausible , though there is still a small amount of curvature in the locus of ratios .",
    "this is almost certainly due to the presence of exponentially small corrections due to one or more nearby singularities on the real axis . extrapolating this locus to the estimated limit @xmath121 we estimate the slope in the vicinity of the @xmath72-axis to be @xmath122 so that @xmath123 we have also used biased differential approximants , with the critical point biased at @xmath124 and while this signalled a confluent singularity at the critical point , it gave a consistent value for the exponent , @xmath125 as @xmath126 so that again @xmath123    in summary , we find for the generating function , @xmath118 where now @xmath123 we do not quote error bars as this estimate of @xmath127 is very sensitive to the estimate of the critical exponent used to bias the results .",
    "if we bias the critical point at @xmath128 a change of only 1 in the least significant digit , the exponent estimate from differential approximants changes to @xmath129 thus our estimate of @xmath127 can only be taken as indicative , rather than precise .",
    "what is clear however is that the singularity is unlikely to be of square - root type , as is the case for type 1 and type 2 polygons , but of course there is no obvious reason why it should be .",
    "plot of successive ratios of terms @xmath130 against @xmath131 for prudent polygons of half - perimeter @xmath13 .",
    "our best estimate for the critical point @xmath132 is marked with a large dot on the @xmath72-axis .",
    ", width=566 ]    for the anisotropic case , we write the generating function as @xmath75 where the first few @xmath133 are : + @xmath134 @xmath135 @xmath136 @xmath137 @xmath138 @xmath139 @xmath140 @xmath141 where @xmath142 denotes a polynomial of degree @xmath143 from the above , we see the relentless build - up of cyclotomic polynomials of increasingly high order . as is well - known , if this pattern persists , the underlying generating function can not be d - finite . while this does not _ a priori _ prove that the isotropic generating function is not d - finite , we know of no combinatorial problem where this is the case .",
    "that is to say , where the isotropic generating function _ is _ d - finite , while the anisotropic generating function is not .",
    "we have enumerated all prudent walks of up to @xmath144 steps on the three - dimensional simple cubic lattice , using a simple backtracking algorithm . as for the case of ordinary saw , it is a far more difficult task to perform enumerations in three dimensions than it is in two . to take advantage of the inherent symmetry in the problem we only explicitly counted",
    "walks whose first step was in the positive @xmath64 direction , whose first step out of this line ( if any ) was in the positive @xmath72 direction , and whose first step out of this plane ( if any ) was in the positive @xmath145 direction .",
    "in addition , we _ trivially parallelized _ the backtracking algorithm : in three dimensions there are sixteen 4-step prudent walks whose first two steps are precisely east then north .",
    "we independently enumerated the completions to @xmath13-step walks of each of these prefixes .",
    "similarly there are four 4-step prudent walks whose first three steps are east , east , north . again we independently enumerated the @xmath13-step completions of each of these prefixes .",
    "finally , the prudent walks whose first three steps are east , east , east were all enumerated together in the same computation .",
    "thus , for each value of @xmath13 we ran a total of 21 independent computations .",
    "the enumerations for @xmath144 took a total of around 2377 hours ( roughly 100 hours per independent computation ) .",
    "the computations were performed on _ tango _ , a 95-node linux cluster at the victorian partnership for advanced computing ( vpac ) .",
    "each node consists of two amd barcelona 2.3ghz quad core processors . in principle , it is probably possible to obtain another term or two by applying the two - step method  @xcite , but we have not pursued this here .",
    "for each @xmath146 we computed the number of prudent walks , @xmath56 , the number of prudent polygonal returns , @xmath147 , and the sum of squared end - to - end distances @xmath148 , summed over all prudent walks .",
    "the results of our enumerations are presented in table  [ 3d enumeration data ] .",
    "@xmath13 & @xmath56 & @xmath148 & @xmath147 + 0 & 1 & 0 & 0 + 1 & 6 & 6 & 0 + 2 & 30 & 72 & 0 + 3 & 150 & 582 & 24 + 4 & 726 & 4032 & 0 + 5 & 3510 & 25542 & 240 + 6 & 16734 & 153048 & 0 + 7 & 79518 & 881118 & 2544 + 8 & 375246 & 4925616 & 0 + 9 & 1766382 & 26909934 & 31800 + 10 & 8278638 & 144356280 & 0 + 11 & 38721366 & 762839334 & 435864 + 12 & 180556206 & 3981064368 & 0 + 13 & 840524742 & 20556000822 & 6323352 + 14 & 3903866526 & 105173637672 & 0 + 15 & 18106798830 & 533839505646 & 95647104 + 16 & 83832778110 & 2690761186608 & 0 + 17 & 387690560718 & 13478479905486 & 1493934516 + 18 & 1790330065854 & 67142893855752 & 0 + 19 & 8259528315558 & 332807521103670 & 23934001600 + 20 & 38059497518214 & 1642214518277040 & 0 + 21 & 175228328442174 & 8070246610372494 & 391427518152 + 22 & 805959153119262 & 39511166688322248 & 0 + 23 & 3704270575724550 & 192780251992208934 &",
    "6511949001648 +    we analysed the various series by the method of differential approximants , as well as variants of the ratio method , as used in the analysis of the polygon generating function in the previous section , ( see @xcite for a review of these standard methods ) . for the prudent walk generating function , for which we expect @xmath149 we found a singularity on the positive real axis at @xmath150 with corresponding exponent @xmath151 biasing the value of the critical point at the central estimate , that is setting @xmath152 gives the corresponding biased estimate of @xmath153 from first order differential approximants , and @xmath154 from second - order differential approximants . for saw ,",
    "the analogous values are @xmath155 and @xmath156 so prudent walks are exponentially rare among saw , and the two models have different critical exponents .",
    "additionally , for three - dimensional prudent walks we find that there is a singularity in the generating function @xmath157 on the negative real axis that appears to be at , or just beyond , @xmath158 for the corresponding self - avoiding walk model , it is known that there is a singularity ( the analogue of an anti - ferromagnetic singularity for a magnetic model ) exactly at @xmath159 but the argument for the location of that singularity in the case of saw does not translate to prudent walks .",
    "the corresponding exponent is , very approximately , the same magnitude as that of the physical singularity , but opposite in sign .",
    "that is to say , there appears to be a singularity of the form @xmath160 where @xmath161 and @xmath162 as well as the physical singularity . for two - dimensional prudent walks",
    ", there is also evidence of a singularity on the negative real axis , but located considerably further away from the origin than the physical singularity .",
    "that is to say , @xmath163    to calculate the exponent @xmath3 characterising the mean square end - to - end distance , @xmath164 we analysed the series for the sum of the squared end - to - end distances , which diverges at @xmath53 with exponent @xmath165 from a differential approximant analysis we found @xmath166 with @xmath167 so that @xmath168 we also analysed the series @xmath12 directly , and obtained an estimate for @xmath3 consistent with that just quoted , but less precise .",
    "the polygonal returns @xmath169 include a factor @xmath67 , corresponding to @xmath13 possible starting points and a factor of 2 as the path may be traversed clockwise or anticlockwise .",
    "we have analysed the series with coefficients @xmath170 we only have 11 coefficients , which is not really enough for any but the crudest analysis . from a differential approximant analysis",
    ", we find the generating function @xmath171 is singular at @xmath172 with an exponent @xmath173 that is to say , @xmath174 note that from our analysis of the corresponding walk series , @xmath175 thus it is entirely possible that @xmath176 for three - dimensional prudent polygons , just like the analogous situation for three - dimensional saw , but unlike the situation for two - dimensional prudent walks and polygons , for which , as discussed above , prudent polygons are exponentially rare among prudent walks . if it is true that @xmath176 for three - dimensional prudent polygons , then we can carry out a biased analysis in which we fix @xmath177 at @xmath178 in that case we find the exponent is a little higher , at @xmath179 in terms of the usual notation for critical points , this exponent is @xmath180 so that @xmath181",
    "we have defined and analysed series for prudent polygons in both two and three dimensions . in two dimensions",
    ", we also discussed two subsets , which are exactly solvable .",
    "we found that two dimensional prudent polygons are exponentially rare among prudent walks , unlike the situation for two dimensional saw .",
    "we gave numerical arguments in support of the conjecture that the generating function for two dimensional prudent polygons is not d - finite .",
    "we also derived extensive series for three dimensional prudent walks and polygons . as far",
    "as we are aware , this problem has not been studied previously .",
    "we have given estimates of the critical point and critical exponents . in terms of the usual notation we found that the growth constant for walks is @xmath182 with exponents @xmath183 @xmath184 and @xmath185 based on an unbiased estimate of the critical point . for saw @xmath186 , @xmath187 @xmath188 and @xmath189 for saw we have the hyper - scaling relation @xmath190 while there is no _ a priori _ reason to expect this hyper - scaling relation to hold for three - dimensional prudent walks , as it is a combinatorial model rather than a statistical mechanical model derived from a hamiltonian",
    ", we nevertheless note that @xmath191 while @xmath192 the uncertainties in our exponent estimates are too great to attach much significance to this approximate equality , except to flag it as a possibility .    in terms of physical significance , the model of prudent walks , while exponentially rare among saw in both two and three dimensions , is nevertheless exponentially abundant compared to any other solved or numerically estimated model . other variants of the model that relax the prudency constraint to some extent are likely to be have growth constants even closer to that of saw , and these will be the subject of a future publication  @xcite .",
    "we would like to thank simone rinaldi and enrica duchi for introducing us to this problem , and mireille bousquet - mlou for several enlightening discussions , and access to her results prior to publication .",
    "similarly , we thank uwe schwerdtfeger for provision of his results prior to publication .",
    "the calculations presented in this paper were performed on the facilities of the australian partnership for advanced computing ( apac ) and the victorian partnership for advanced computing ( vpac ) .",
    "we gratefully acknowledge financial support from the australian research council ."
  ],
  "abstract_text": [
    "<S> we have produced extended series for two - dimensional prudent polygons , based on a transfer matrix algorithm of complexity o@xmath0 for a series of length @xmath1 we have extended the definition to three dimensions and produced series expansions for both prudent walks and polygons in three dimensions . for prudent polygons in two dimensions </S>",
    "<S> we find the growth constant to be smaller than that for the corresponding walks , and by considering three distinct classes of polygons , we find that the growth constant for polygons varies with class , while for walks it does not . </S>",
    "<S> we give the critical exponent for both walks and polygons . in the three - dimensional case </S>",
    "<S> we estimate the growth constant for both walks and polygons and also estimate the usual critical exponents @xmath2 @xmath3 and @xmath4 </S>"
  ]
}
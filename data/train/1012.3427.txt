{
  "article_text": [
    "while this paper was drafted to convey a result of the author s the first half of this paper is devoted to the presentation of harrington s results from @xcite as the technique he used to settle mclaughlin s conjecture is needed for the author s result and has never before appeared in print .",
    "the author would like to make absolutely clear that these results are harrington s alone , but as harrington s notes are quite sparse and the way in which he anticipated filling in the details has faded with time , the details are , for good or ill , the author s own .",
    "in addition to various assorted details the technical results in [ sec : ord - org ] on nice ordinal notations and the modifications required to prove lemma [ lem : subgeneric - root ] and corollary [ cor : subgeneric - star ] true are of the author s devising and it is unclear what it any resemblance they might bear to harrington s original conception of these proofs . once harrington s method has been presented the second half of the paper will revert to a more standard style and provide a brief review of previously published literature on fast growing functions and turing degrees followed by the author s own results in this area .      the notation we use is largely standard .",
    "we use @xmath4 to denote the integer code of the pair @xmath5 , @xmath6 for the set whose @xmath7-th column is @xmath8 , and @xmath9 to denote the compliment of @xmath10 .    a string is a member of @xmath11 and trees subsets of @xmath11 closed under initial segments . when we need to distinguish between strings and their integer codes we write @xmath12 for the code of @xmath13 .",
    "we use @xmath14 and @xmath15 to denote that @xmath16 are incompatible and compatible respectively and write @xmath17 to denote the concatenation of the two strings .",
    "@xmath18 gives the length of @xmath19 and @xmath20 denotes the longest proper initial segment of @xmath19 .",
    "the set of ( infinite ) paths through a tree @xmath21 is denoted @xmath22 $ ] and @xmath23 is the set of strings in @xmath21 extended by some infinite path .",
    "we call functions from @xmath11 to @xmath11 monotonic if it is an isomorphism of the partial ordering @xmath24 on it s domain and range .",
    "we abuse notation and use @xmath25 to denote the members of @xmath21 of length at most @xmath26 and write @xmath27 for @xmath28 when @xmath29 is monotonic and total on @xmath30 .",
    "kleene s set of ordinal notations is @xmath31 , the canonical ordering of notations is @xmath32 and @xmath33 gives the effective sum of notations .",
    "when @xmath34 is a limit notation we denote the @xmath26-th element of the effectively given increasing sequence defining @xmath34 by @xmath35 .",
    "we write @xmath36 and @xmath37 for the collections of computably @xmath38 and @xmath39 formulas and @xmath40{\\alpha } $ ] and @xmath41{\\alpha } $ ] when a predicate for membership in @xmath42 is introduced into the language .",
    "we use @xmath43 and @xmath44 to denote infinite disjunction and infinite conjunction respectively .",
    "we refer the reader to @xcite for more on computable infinitary formula and to @xcite for more on @xmath31 .",
    "we do introduce a few non - standard pieces of notation particular to the subject matter .",
    "given partial functions @xmath45 we write @xmath46 if @xmath47 whenever they are both defined .",
    "when @xmath48 and @xmath49 are total functions we read @xmath50 as @xmath51 majorizes @xmath52 .",
    "we say @xmath51 dominates @xmath52 if some @xmath53 differing from @xmath51 at finitely many locations majorizes @xmath52 .",
    "we indicate the local forcing relation on @xmath23 by @xmath54 $ ] and it s relativization to @xmath55 by @xmath56 $ ] and refer the reader to @xcite for the definitions of the standard forcing relation @xmath57 and @xcite for local forcing .",
    "informally , @xmath54 $ ] is defined in the same manner as @xmath57 except with all quantifications over @xmath11 replaced with quantification s over @xmath23 ( nodes in @xmath21 that extend to paths ) .",
    "when we extend the usual language of forcing by introducing a predicate symbol for membership in @xmath42 we write @xmath58 \\phi $ ] to indicate that @xmath59 can check membership in @xmath42 as an atomic operation .",
    "usually the set @xmath42 we are forcing relative to will be clear from context and we will simply write @xmath60 \\phi   $ ] .",
    "when @xmath61 \\phi $ ] or @xmath61 \\lnot\\phi $ ] for every @xmath59 in @xmath40{\\beta } $ ] we say that @xmath52 is @xmath62 generic on @xmath21 relative to @xmath42 .",
    "we will take our forcing relation to denote strong forcing , that is @xmath13 forces @xmath63{1 } $ ] sentences only when @xmath64 , i.e. , @xmath59 is satisfied by referring only to information in @xmath19 .",
    "it is important to note that our notion of @xmath51 being @xmath2 generic on @xmath21 does not require @xmath51 to force all @xmath65{\\alpha } $ ] facts or their negations as some definitions of genericity on a tree require @xcite but only @xmath36 facts nor does it require that @xmath51 be non - isolated .",
    "our definition is the natural way to preserve",
    "the notion of a generic path as one on which every truth is determined by a finite initial segment while requiring @xmath2 generic paths on @xmath21 to force all @xmath65{\\alpha } $ ] facts or their negations extends the idea that a generic path should be typical .",
    "thus under our definition there is a perfect tree @xmath21 with every path through @xmath21 @xmath2 generic on @xmath21 while this would be impossible under the other notion .    while our standard notion of forcing is concerned only with the extendable nodes on @xmath21 we will also make use of a more effective notion that , by analogy with the notion of strong forcing , we call super forcing on @xmath21 denoted @xmath66 $ ]",
    ". the definition of super forcing on @xmath21 exactly mirrors the definition in @xcite of strong forcing modified as usual to get the local forcing relation on @xmath21 instead of @xmath23 as above .",
    "that is for @xmath19 to force @xmath67 on @xmath21 requires that every @xmath68 with @xmath69 satisfy @xmath70 \\phi $ ] while for @xmath19 to strongly force @xmath67 on @xmath21 requires this hold for every @xmath68 with @xmath71 .",
    "hence @xmath72[\\zeron{\\beta } ] \\phi $ ] for @xmath63{\\alpha } $ ] is @xmath73{\\alpha } $ ] and @xmath74{\\alpha } $ ] for @xmath75{\\alpha } $ ] .",
    "in @xcite harrington answered mclaughlin s conjecture in the negative and we will adapt his construction to establish theorem [ thm : nonu ] but we first present his approach . while other variations on the theme have been called mclaughlin s conjecture the form of the conjecture refuted by harrington in @xcite is the one appearing in @xcite that asserts :    [ conj : mclaughlin ] every element of a countable arithmetic subset of @xmath76 is an arithmetic singleton .    harrington s refutation consisted of the following theorem .",
    "[ thm : harrington - mcl ] for every computable tree @xmath77 is a computable tree @xmath78 such @xmath22 $ ] and @xmath79 $ ] are homeomorphic and every @xmath80 $ ] is arithmetically ( @xmath81 ) generic on @xmath22 $ ] .",
    "[ cor : mcl - false ] is false .",
    "we sketch how harrington s result contradicts mclaughlin s conjecture .",
    "let @xmath82 have some non - isolated path @xmath83 .",
    "thus the homeomorphic image of @xmath83 , @xmath51 is a non - isolated path through @xmath21 .",
    "now suppose that @xmath84 is an arithmetic predicate with unique solution @xmath51 .",
    "by genericity we must have @xmath85   \\phi $ ] hence some @xmath86 forces @xmath59 . as @xmath51 non - isolated",
    "there is some @xmath87 also extending @xmath19 . at @xmath88",
    "is also @xmath81 generic on @xmath21 and @xmath89   \\phi $ ] we have @xmath90 .",
    "contradiction .",
    "once we know that harrington s result is true the natural approach for a recursion theorist is simply to go out and build @xmath21 as some kind of distorted copy of @xmath82 while trying to meet the genericity requirements . the natural approach would be to simply go ahead and try to build @xmath21 directly but of course if that worked straightforwardly the conjecture would likely never have remained open for as it did .",
    "in particular the ` nested ' nature of the genericity requirements makes direct construction of @xmath21 extremely difficult . to force @xmath92 facts about @xmath51 we need to react to the _ particular _ way we ve failed to force @xmath93 facts about @xmath51 .",
    "were we building @xmath51 to be fully generic there would be no question about how @xmath51 forced @xmath93 and @xmath94 facts .",
    "we could simply read off from the definition of forcing whether a given @xmath86 forced some instance @xmath95 of a @xmath94 formula and simply require @xmath51 to extend some appropriate @xmath96 .",
    "but as we clearly ca nt build our desired @xmath51 to be even fully @xmath97-generic here we must sometimes bring it about that @xmath86 forces some @xmath94 formula @xmath98 despite the fact that @xmath59 is true on a co - meager set in @xmath76 by pruning from @xmath21 all extensions of @xmath19 that force @xmath59 . doing this on it s own while keeping @xmath21 computable",
    "would be organizationally difficult but if we are to keep @xmath22=[t_\\omega ] $ ] we must somehow also anticipate when our commitment to somehow copy @xmath99 will be incompatible with trying to force a sentence in a particular direction . therefore , rather than a frontal assault harrington described how we can attack the problem in reverse in a manner that provides all our organization for free .",
    "the approach taken by harrington rests on projecting down @xmath99 to a sequence on intermediate trees @xmath100 with @xmath101 .",
    "each @xmath100 will be computable in @xmath102 and @xmath103 will be the image of @xmath104 under @xmath105 where @xmath106 is monotonic and thus a homeomorphism from @xmath107 $ ] to @xmath108 $ ] .",
    "furthermore if @xmath109 $ ] and @xmath51 is @xmath110 generic relative to @xmath111 on @xmath112 then @xmath113 is @xmath114 generic relative to @xmath102 on @xmath100 .",
    "thus if this construction succeeds every @xmath115 $ ] is @xmath116 generic on @xmath117 $ ] for every @xmath118 as it s the image of some @xmath119 under @xmath120 which we abbreviate as @xmath121 .    to ensure that @xmath122 is homeomorphic with @xmath82 harrington also required that @xmath123 and that @xmath124 .",
    "now define @xmath125 to be @xmath126 and note that @xmath127 .",
    "hence @xmath125 is clearly a continuous bijection between @xmath99 and @xmath128 .",
    "the only remaining problem is to construct such a sequence .",
    "the trick here is to observe that @xmath129 depends ( more or less ) only on @xmath130 and @xmath130 depends only on @xmath131 and so on .",
    "thus @xmath122 can be built by looking only at @xmath132 .",
    "this argument is nt too difficult to formalize in terms of the recursion theorem but unfortunately many of the important applications , including the ones we use later in this paper , depend on proving the result with an arbitrary computable ordinal @xmath2 substituted for @xmath91 so we must give the fully general construction . as we will see that while conceptually identical the technical details harrington avoided spelling out are definitely not trivial",
    "[ thm : harrington - mcl - ordinal ] for every ordinal notation @xmath2 and tree @xmath133 there is a computable tree @xmath122 such @xmath117 $ ] and @xmath22 $ ] are homeomorphic and every @xmath115 $ ] is @xmath134 generic on @xmath22 $ ] .      while this tells us how to copy @xmath135 down to lower trees it s no longer obvious how much we should copy . to extend harrington s argument to a sequence of length @xmath2",
    "we will need to somehow specify an integer @xmath136 for every @xmath137 telling us how much of @xmath138 we should copy down to @xmath139 .",
    "we need to ensure that @xmath140 will be the limit of @xmath141 for @xmath142 so @xmath117=[t_\\alpha ] $ ] and that we can define @xmath143 from only @xmath144 to ensure our fixed point is non - empty so we must have :    @xmath145\\left ( \\kleenelim{\\lambda}{n } \\kleeneleq \\beta \\kleenel \\lambda \\implies { \\mathbrush{l}^{}(\\kleenelim{\\lambda}{n } ) } \\leq { \\mathbrush{l}^{}(\\beta ) }   \\right)\\label{edef : copylen - between } \\\\       & \\lim_{n \\to \\infty } { \\mathbrush{l}^{}(\\kleenelim{\\lambda}{n } ) } = \\infty \\\\",
    "\\shortintertext{for concreteness we will also insist that }      & \\label{edef : copylen } { \\mathbrush{l}^{}(\\beta ) } = \\begin{cases }                                                      0 & \\text{if } { { \\beta}^{\\diamond}}=\\diverge\\\\                                                      { \\mathbrush{l}^{}({{\\beta}^{\\diamond}})}+n & \\text{if }   \\beta=\\kleenelim{{{\\beta}^{\\diamond}}}{n }                                               \\end{cases}\\end{aligned}\\ ] ]    the difficulty in achieving these conditions is that in general a notation @xmath62 could appear at arbitrary places in the effective limit for arbitrarily many @xmath146 . a further difficulty is posed by the need to build a single function @xmath136 defined on a path through @xmath31 as required by some of the corollaries .",
    "our strategy is to associate to each @xmath147 a unique limit notation @xmath148 to whose effective limit @xmath62 belongs .",
    "since this proof is fairly technical we delay it s presentation until the appendix and blithely continue assuming we have a computable function @xmath136 satisfying the above ( below @xmath2 ) and that every @xmath62 appears in at most one effective limit ( below @xmath2 ) denoted @xmath148 ( extended to be total , increasing , limit valued ) .",
    "this is slightly inaccurate , but we reserve those qualifications for the appendix .",
    "this resolves the problem of how much to copy but we do nt yet know exactly what to copy . in the sketch of theorem [ thm : harrington - mcl ] we had a computable tree @xmath99 but in general at limit stages @xmath140 will only be computable in @xmath149 but we will still need to copy @xmath150 down to @xmath151 .",
    "we show that we can always convert our trees to a form in which the segments requiring copying can always be uniformly recovered from the appropriate degree .",
    "[ def : uniform - tree ] say the tree @xmath152 is uniform if @xmath153 is uniformly computable from @xmath154 for all @xmath26 .",
    "converting @xmath155 into a uniform tree simply requires we delay killing branches in @xmath155 until they are long enough that we can use enough of @xmath149 to verify the branch gets killed .",
    "[ lem : convert - to - n - bit ] suppose @xmath156 , @xmath157 and @xmath158 is uniform then there is a uniform @xmath159 with @xmath160=[\\hat{t_\\lambda } ] $ ] and @xmath161 .",
    "furthermore , this holds with all possible uniformity .",
    "as @xmath158 is uniform we may let @xmath162 without difficulty . now given @xmath163 with @xmath164 place @xmath165 unless some computation showing that @xmath166 converges in at most @xmath167 many steps while consulting only those columns of @xmath149 that encode @xmath168 for @xmath169 .",
    "the uniformity is evident in the proof .    for the remainder of the paper we will apply the preceding lemma without comment and assume without comment that any needed conversion of this kind",
    "is done behind the scenes .      in this section",
    "we fix some ordinal notation @xmath2 and work to build a tower of trees @xmath170 as we sketched for @xmath91 ( technically speaking @xmath2 is nt truly arbitrary only the ordinal it denotes is ) .",
    "we first describe the properties of the trees we seek to build . at each @xmath62",
    "we will try to build our tree @xmath152 so that every path meets every @xmath171 $ ] set as soon as possible .",
    "we capture the effect of this construction below with the notion of eagerly generic ( meaning @xmath97 generic over @xmath55 ) .",
    "[ def : eager ] say that @xmath172 is eagerly generic ( over @xmath55 ) if for all @xmath80 $ ] and @xmath173{1 } $ ] there is some @xmath86 such that either @xmath19 super forces @xmath174 ( @xmath19 witnesses the @xmath175{1 } $ ] fact ) or @xmath19 super forces @xmath176 ( no @xmath71 ( not @xmath23 ) super forces @xmath174 ) .",
    "note that this immediately entails that every @xmath177 $ ] is @xmath97 generic relative to @xmath55 on @xmath141 and the relation @xmath178 \\psi $ ] is computable in @xmath179 for @xmath173{1 } \\union \\cpin[\\zeron{\\beta}]{1 } $ ] . since forcing on",
    "@xmath141 always occurs relative to @xmath55 we will abbreviate @xmath180 $ ] as @xmath181 $ ] or even @xmath182 $ ] where this wo nt generate confusion .",
    "we are now ready to precisely state the conditions our trees aim to satisfy .",
    "[ def : downwardly - generic ] say that a sequence @xmath183 is a downwardly generic tower ( of length @xmath2 ) if    for @xmath184 , @xmath152[def : downwardly - generic : beta - computable ] .    for @xmath184 , @xmath141 is eagerly generic over @xmath55[def : downwardly - generic : eagerly ] .",
    "if @xmath185 there is a monotonic embedding @xmath186 of @xmath138 into @xmath141 that induces a homeomorphism of @xmath187 $ ] and @xmath188 $ ] .[def : downwardly - generic : map ]    [ def : downwardly - generic : map ] and [ def : downwardly - generic : beta - computable ] hold uniformly in @xmath62.[def : downwardly - generic : unifom ]    @xmath189.[def : downwardly - generic : copying ]    if @xmath34 a limit @xmath190[def : downwardly - generic : lim - unions ]    note that by these last two conditions entail that @xmath157 . for",
    "the remainder of this subsection we fix a downwardly generic tower @xmath183 of length @xmath2 and proceed to demonstrate it has the desired properties .",
    "first we observe that our tower preserves the topological structure of @xmath191 and provides a moderately effective means of translation between trees at different levels .",
    "[ lem : tower - homeomorphism ] for every @xmath192 there is a monotonic function @xmath193 uniformly computable in @xmath55 embedding @xmath141 into @xmath194 so as to induce a homeomorphism of @xmath188 $ ] and @xmath195 $ ] uniquely defined by the constraints :    if @xmath196 then @xmath197    @xmath198[lem : tower - homeomorphism : extend - theta ] +    if @xmath199 then @xmath200 [ lem : tower - homeomorphism : limits ] .",
    "we use the method of effective transfinite recursion by assuming we have some index @xmath201 such that @xmath202 for every @xmath203 and build a computable function @xmath204 so that @xmath205 for every @xmath206 and then use the fixed point lemma to build a single computable function working for all @xmath207 .",
    "the behavior of @xmath204 is spelled out plainly for @xmath208 a successor ( making use of part [ def : downwardly - generic : unifom ] to recover the various indexes ) and for @xmath208 a limit @xmath209 computes the the value @xmath210 where @xmath211 is the first such integer for which we observe @xmath212 . as @xmath213 the fixed point of @xmath204 plainly defines a monotonic function for all @xmath214 mapping @xmath194 into @xmath141 . by and",
    "part [ def : downwardly - generic : copying ] of definition [ def : downwardly - generic ] any valid choice of @xmath167 yields the same result establishing uniqueness .",
    "this leaves only the claim that @xmath215 gives a surjection of @xmath216 onto @xmath217 to verify .",
    "assume not and let @xmath218 be the lexicographically least such that the claim fails for @xmath219 .",
    "now clearly , by the minimality of @xmath220 and property [ def : downwardly - generic : map ] of definition [ def : downwardly - generic ] , @xmath221 evidently ca nt be a successor .",
    "but if @xmath220 a limit , @xmath222 $ ] and @xmath223 then by the minimality of @xmath220 there is some some @xmath224 with @xmath225 . by condition [ lem : tower - homeomorphism : limits ] @xmath226 for all large enough @xmath167 so by monotonicity @xmath227 and by part [ def : downwardly - generic : copying ] of definition [ def : downwardly - generic ] @xmath228 .",
    "thus @xmath229 is a path through @xmath194 with @xmath230 .    with this lemma in mind",
    "we adopt the notation that if @xmath52 is a path through @xmath122 then @xmath231 refers to the path in @xmath141 which maps to @xmath52 under @xmath232 which we abbreviate @xmath233 .",
    "we now work toward showing @xmath122 will be sufficiently generic by translating @xmath234 , @xmath235 formulas about @xmath236 to @xmath175{1 } $ ] formulas about @xmath231 so that if @xmath231 forces the translated formula on @xmath139 then @xmath52 forces the original on @xmath122 .",
    "our strategy will be to eliminate quantifiers from the interior of a formula by replacing @xmath237{1 } \\union \\cpin[\\zeron{\\gamma}]{1 }   $ ] with the @xmath175{1 } $ ] formula asserting that @xmath238 forces @xmath174 when @xmath239 .",
    "[ def : psi - star ] given a computable infinitary formula @xmath59 we define @xmath240 inductively as follows :    @xmath241 \\phi^{\\beta}\\right ) & \\text{if } \\phi^\\beta \\in \\csigman[\\zeron{\\beta}]{1 } \\cup \\cpin[\\zeron{\\beta}]{1 } \\\\",
    "\\llor_{i \\in \\omega } \\psi^{\\beta+1}_{q(i ) } & \\text { otherwise when } \\phi=\\llor_{i \\in \\omega } \\psi_{q(i ) } \\\\",
    "\\lnot \\psi^{\\beta+1 } & \\text { otherwise when } \\phi=\\lnot \\psi \\\\                                          \\end{cases } \\\\       \\shortintertext{for \\",
    "( \\lambda \\ ) a limit }          \\phi^{\\lambda } & = \\begin{cases }                                                      \\exists({\\sigma \\subset g_\\lambda})\\left({\\vartheta^{\\lambda}_{\\gamma}}(\\sigma ) \\frc[{\\gamma } ]   \\phi^\\gamma\\right ) & \\text{if } \\phi \\in \\csigman{\\gamma } \\union \\cpin{\\gamma } \\text { for } \\gamma \\kleenel \\lambda \\\\",
    "\\llor_{i \\in \\omega } \\psi^{\\lambda}_{q(i ) } & \\text{otherwise when } \\phi=\\llor_{i \\in \\omega } \\psi_{q(i ) } \\\\",
    "\\lnot \\psi^{\\lambda } & \\text{otherwise when } \\phi=\\lnot \\psi                                          \\end{cases }      \\end{aligned}\\ ] ]    [ lem : psi - star - forcing ] if @xmath242 then @xmath243 \\phi^{\\beta } $ ] iff @xmath244 \\phi $ ] .",
    "moreover , if @xmath245 then @xmath246{1 }    $ ]    fix @xmath220 to be least ordinal for which the equivalence @xmath247 \\phi^{\\gamma } \\iff { \\vartheta^{\\gamma}_{}}(\\sigma ) \\frc[0 ] \\phi $ ] fails to hold for some @xmath59 and let @xmath59 be the witness to this failure of least complexity .",
    "so first suppose @xmath249 .",
    "first suppose @xmath250{1 } \\cup \\cpin[\\zeron{\\beta}]{1 } $ ] . in this case",
    "@xmath251 is defined as in the first case above so if @xmath252 \\phi^{\\beta+1 } $ ] then there must actually be some @xmath253 with @xmath254 \\phi^{\\beta } $ ] . by monotonicity",
    "@xmath255 \\phi^{\\beta } $ ] and by the inductive hypothesis @xmath256 \\phi $ ] .",
    "alternatively suppose that @xmath257{1 } \\cup \\cpin[\\zeron{\\beta}]{1 } $ ] .",
    "but if @xmath252 \\llor_{i \\in \\omega } \\psi^{\\beta+1}_{q(i ) } $ ] then for some @xmath7 we must have @xmath252 \\psi^{\\beta+1}_{q(i ) } $ ] so by the minimality of @xmath59 we have @xmath258 \\psi^{\\beta+1}_{q(i ) } $ ] and therefore @xmath259 \\phi^{\\beta+1 }   $ ] .",
    "finally if @xmath260 and @xmath252 \\lnot \\psi^{\\beta+1 } $ ] then again by the minimality of @xmath59 no @xmath261 in @xmath262 forces @xmath174 so therefore @xmath263 \\lnot \\psi=\\phi $ ] .",
    "consequently @xmath264 ca nt fail at @xmath249 .",
    "going the other way if we suppose that @xmath250{1 } \\cup \\cpin[\\zeron{\\beta}]{1 } $ ] and that @xmath265 \\phi $ ] then minimality ensures that @xmath255 \\phi^{\\beta } $ ] so by definition @xmath266 holds entailing @xmath252 \\phi^{\\beta+1 }   $ ] . alternatively , suppose that @xmath267 \\phi= \\llor_{i \\in \\omega } \\psi_{q(i ) } $ ] then for some @xmath7 we have @xmath267 \\psi_{q(i ) } $ ] so by minimality of @xmath59 we infer @xmath252 \\psi^{\\beta+1}_{q(i ) }   $ ] and therefore @xmath252 \\phi^{\\beta+1 }   $ ] .",
    "lastly if @xmath258 \\phi= \\lnot \\psi $ ] then by other direction no extensions of @xmath19 on @xmath268 can force @xmath269 or some extension of @xmath270 would force @xmath174 so @xmath19 must force @xmath271 .",
    "the proof for limit stages follows by the same considerations and the last claim follows by straightforward induction .    [ lem : totally - generic ] every @xmath272 $ ] is @xmath134-generic on @xmath122 .",
    "fix @xmath273 . by lemma [ lem :",
    "psi - star - forcing ] @xmath274{1 } $ ] so either @xmath275 forces @xmath276 or @xmath277 as every path through @xmath278 is eagerly generic so applying lemma [ lem : psi - star - forcing ] again we conclude that @xmath279 forces either @xmath59 or it s negation on @xmath122 .",
    "we now demonstrate the existence of a downwardly generic tower of length @xmath2",
    ". our construction will begin with an arbitrary tree @xmath280 computable in @xmath281 which we will modify to be an eagerly generic tree @xmath191 .",
    "from @xmath191 we will work downward to define @xmath141 for @xmath137 by way of the following effective process .",
    "[ lem : tree - minus - one ] given trees @xmath282 and @xmath283 with @xmath284 there is a tree @xmath152 with and a monotonic function @xmath285 such that    @xmath286.[lem : tree - minus - one : copy ]    if @xmath287 then @xmath285 is a monotonic embedding of @xmath138 into @xmath141 such that @xmath288= [ t_\\beta ]   $ ] [ lem : tree - minus - one : map ]    @xmath141 is eagerly generic.[lem : tree - minus - one : eagerly ]    furthermore indexes for @xmath289 are computable from the indexes for @xmath138 and @xmath194 via a function that is total even when passed indexes for @xmath138 and @xmath194 that fail to converge on some values .",
    "for simplicity we refer to @xmath138 as @xmath290 , @xmath285 as @xmath29 and @xmath141 as @xmath21 .",
    "we fix a @xmath55 stagewise approximation to @xmath290 valid in the limit and ( implicitly using lemma [ lem : convert - to - n - bit ] ) we set @xmath291 .",
    "we set @xmath29 to be the identity on @xmath292 and pause the entire construction at any stage where the approximation to @xmath290 does nt agree with @xmath292 .",
    "thus should the condition @xmath293 fail , our construction eventually shuts down and refuses to produce a useful result .",
    "thus we ve directly satisfied part [ lem : tree - minus - one : copy ] of the lemma .",
    "for @xmath19 extending some element in @xmath292 we define @xmath294 to be the limit as @xmath295 goes to infinity of @xmath296 .",
    "to ensure @xmath21 is computable from @xmath55 we decide whether @xmath19 is in @xmath21 at the first stage @xmath295 greater than the code of @xmath19 by placing it in @xmath21 if it is in the range of @xmath297 . at all times",
    "we maintain that if @xmath296 is defined and @xmath298 then @xmath299 by letting @xmath296 become undefined if when required .",
    "if at stage @xmath295 we observe some @xmath300 $ ] with code at most @xmath295 to be in @xmath301 and @xmath302 is defined but @xmath296 undefined we then also define @xmath303 $ ] .",
    "we guarantee that [ lem : tree - minus - one : eagerly ] of the lemma holds by ensuring that if @xmath304 then either @xmath294 meets @xmath305 or for all @xmath306 with @xmath307 @xmath308 does not meet @xmath305 .",
    "this is accomplished simply by letting @xmath309 be redefined to equal any @xmath307 with @xmath310{i } \\isect t_s $ ] and reseting all @xmath311 for @xmath312 to undefined .",
    "thinking of this as a finite injury argument we note that if @xmath313 eventually we reach some stage @xmath314 so that at any later stage @xmath295 , @xmath19 and all of it s initial segments are members of @xmath301 . furthermore if @xmath315 then we redefine @xmath296 no more than @xmath316 times after stage @xmath314 in attempts to meet in @xmath55 sets .",
    "it is therefore clear that eventually @xmath296 will stabilize .",
    "moreover , for the set of extensions of @xmath19 in @xmath21 to be infinite there must be infinitely many stages @xmath295 in which @xmath19 was in the range of @xmath297 so if @xmath317 $ ] then @xmath19 is in the range of @xmath29 thus part [ lem : tree - minus - one : map ] of the lemma is satisfied .",
    "the uniformity is evident from the proof , but some remarks about why the resulting function is total even when passed partial indexes is warranted .",
    "with respect to @xmath138 all that is really necessary is that eventually all members of @xmath138 stay in the approximation while non - members are out of the approximation at infinitely many stages so being in @xmath179 would suffice . since lemma [ lem : convert - to - n - bit ] only cared about elements being enumerated into the compliment of @xmath318 that index may also be partial .",
    "note that the condition @xmath287 in the above lemma is guaranteed to be satisfied if @xmath138 properly copies @xmath319 by lemma [ lem : build - copylen ] .",
    "also remember that should @xmath320 we defined @xmath321 to be another copy of @xmath278 . since we only make use of @xmath321 to copy @xmath322 we may safely pretend ( by redefinition ) that @xmath323 whenever it would otherwise be larger than @xmath2 .",
    "[ lem : downward - tower - exists ] given @xmath133 there is a downwardly generic tower @xmath183 of length @xmath2 with @xmath324 the effectively given image of @xmath21 .    by the same argument given in lemma [ lem : tree - minus - one ] we can effectively transform @xmath21 into an eagerly generic @xmath325 .",
    "furthermore we may assume that @xmath2 is a limit ordinal during construction by applying lemma [ lem : tree - minus - one ] finitely many times until we reached a limit level .",
    "now fix an index @xmath7 for @xmath278 and let @xmath326 be the computable function giving an index for @xmath141 given an index @xmath327 for @xmath138 and @xmath328 for @xmath321 .",
    "we now define a computable function @xmath204 to behave as follows with the intent that @xmath329 should define a function from notations @xmath330 to an index for @xmath141 whenever @xmath331 defines the same function on @xmath332 .",
    "@xmath333    fix @xmath201 to be a fixed point of @xmath204 and let @xmath141 be the tree defined by index @xmath334 relative to @xmath55 for @xmath137 . note that it is enough to show that @xmath141 is built as per lemma [ lem : tree - minus - one ] from @xmath138 and @xmath321 since lemma [ lem : build - copylen ] ensures that if @xmath335 then @xmath336 and as well as that @xmath155 for @xmath34 a limit is the limit of @xmath141 with @xmath142 [ def : downwardly - generic ] .",
    "now suppose that @xmath141 fails to be defined or satisfy the conditions of lemma [ lem : tree - minus - one ] with respect to @xmath138 and @xmath321 . since there are no infinite decreasing sequences of ordinals we can assume that @xmath337 where @xmath338 is defined and satisfies the conclusions of lemma [ lem : tree - minus - one ] .",
    "thus if @xmath339 by the choice of @xmath201 as a fixed point we also have @xmath340 so @xmath141 is defined by the application of lemma [ lem : tree - minus - one ] .",
    "note that the work here is really being done by lemma [ lem : tower - homeomorphism ] which verified that merely being the image of a monotonic function and the properties of the function @xmath136 ensure that all trees in the tower are homeomorphic .",
    "this completes the proof of theorem [ thm : harrington - mcl - ordinal ] . at this point",
    "it is interesting to note that this is in some sense optimal since every member of a countable hyperarithmetic class @xmath341 is itself a hyperarithmetic singleton .",
    "[ def : alpha - root ] say @xmath21 is the @xmath2-reduct of @xmath290 if @xmath101 where @xmath122 is constructed as described above from @xmath342 .",
    "also we call those @xmath272 $ ] an @xmath2 root of @xmath343 $ ] if @xmath52 is the image of @xmath344 under the constructed homomorphism",
    ".    note that an index for the @xmath2-reduct of @xmath290 as a computable set can be effectively computed from a index for @xmath345 as a @xmath346 computable set .",
    "harrington observed several other important consequences of the above method in @xcite that have also never been formally published and we take the time to present those that can be stated in terms of classical computability theory here and leave those about admissible sets and various implications in second order arithmetic to another paper .    [ def : subgeneric ] following harrington @xcite we say a degree @xmath347 is @xmath2 subgeneric for @xmath348 if for all @xmath137 @xmath349 satisfies both    @xmath350[def : subgeneric : join - jump ]    @xmath351\\left ( x \\tleq \\zeron{\\alpha } \\land x \\tleq \\jumpn{\\tdeg{d}}{\\beta } \\implies x \\tleq \\zeron{\\beta } \\right ) $ ] [ def : subgeneric : meet - zeron - beta ]    a version of harrington s first corollary in @xcite can now be stated .",
    "[ cor : subgeneric ] for each @xmath352 there is a sequence @xmath353 so that for all @xmath354    @xmath355 is @xmath2 subgeneric .",
    "@xmath356[cor : subgeneric : alpha - independence ] .",
    "@xmath357 is a the unique solution of a @xmath0 formula the index for which is given uniformly in @xmath26 .",
    "our first task is to assure ourselves we already know how to satisfy part [ def : subgeneric : join - jump ] of definition [ def : subgeneric ] .",
    "[ lem : alpha - subgeneric - part-1 ] if @xmath52 is an @xmath2 root then @xmath52 satisfies part [ def : subgeneric : join - jump ] of the .",
    "fix @xmath183 witnessing that @xmath52 is an @xmath2 root and @xmath358 and @xmath359 such that @xmath360 . by lemma [ lem :",
    "psi - star - forcing ] if @xmath272 $ ] then @xmath361 \\psi^\\lambda $ ] . since either @xmath362 or it s negation",
    "is super forced on @xmath363 by @xmath364 we can compute @xmath365 from @xmath366 completing the proof .    building @xmath52 as an @xmath2 root that also satisfies part [ def : subgeneric : meet - zeron - beta ] of the requires slightly more work . given @xmath367 and @xmath368 these computations",
    "must be super forced on @xmath138 to be equal but we need to guarantee they are super forced to agree on @xmath141 to ensure @xmath369 . since @xmath141 is nt the image of @xmath138 under @xmath285 super forcing on @xmath138 does nt translate to super forcing on @xmath141 so we must guarantee this occurs manually . since @xmath141 lacks access to @xmath179 we ca nt directly diagonalize but must instead try to preserve disagreeing options for the computation of @xmath42 from @xmath370 and let the diagonalization occur on @xmath138 .",
    "we first must ensure that @xmath138 leaves options open that can be extended on @xmath141 to incompatible computations .",
    "[ def : padded - tree ] say @xmath141 is padded if whenever @xmath371 , @xmath372 then @xmath373 , \\sigma\\concat[1 ]   \\in t_\\beta $ ] .    and now give conditions that ensure these incompatible computations exist .",
    "[ def : disagreement - eager ] say that @xmath374 is disagreement preserving if whenever @xmath373 , \\sigma\\concat[1 ] \\in t_{\\beta+1 } $ ] and @xmath375 then either @xmath376 ( \\recfnl{i}{\\zeron{\\beta}}{\\tau } \\compat \\recfnl{i}{\\zeron{\\beta}}{\\tau ' } ) \\\\          \\shortintertext{or }          & \\recfnl{i}{\\zeron{\\beta}}{\\theta^{\\beta+1}(\\sigma\\concat[0 ] ) } \\incompat \\recfnl{i}{\\zeron{\\beta}}{\\theta^{\\beta+1}(\\sigma\\concat[1 ] ) }      \\end{aligned}\\ ] ]    [ def : subgeneric - root ] say that @xmath183 is a disagreement preserving downwardly generic tower if it is a downwardly generic tower and for each @xmath62 with @xmath377 , @xmath139 is padded and @xmath285 is disagreement preserving .",
    "we define the notions of an @xmath2 subgeneric - reduct and @xmath2 subgeneric - root by modifying definition [ def : alpha - root ] to use disagreement preserving downwardly generic towers .",
    "note that we can produce @xmath2 subgeneric - reducts with the same degree of effectivity as we enjoyed for @xmath2 reducts .",
    "[ lem : subgeneric - root ] if @xmath52 is a @xmath2 subgeneric - root then @xmath52 is @xmath2 subgeneric .    by lemma [ lem : alpha - subgeneric - part-1 ]",
    "it is sufficient to show that @xmath52 satisfies part [ def : subgeneric : meet - zeron - beta ] of definition [ def : subgeneric ] .",
    "suppose , for a contradiction , that @xmath52 fails this condition for the set @xmath42 and let @xmath184 be the least such that @xmath369 and for some @xmath378 we have @xmath379 but @xmath380 .",
    "assume @xmath62 is a successor then we must have @xmath381 or @xmath62 would not have been the least failure .",
    "now fix @xmath382 such that @xmath383 let @xmath174 be the @xmath384{1 } $ ] formula asserting that these computations disagree .",
    "since the computations agree we have @xmath385 so pick @xmath386 such that @xmath387 super forces @xmath176 on @xmath388 where    @xmath389 \\neq \\recfnl{j}{\\zeron{\\gamma } \\tplus \\theta^{\\beta}(\\sigma ) } { x}\\conv[s]\\right)\\ ] ]    we now work to define an initial segment @xmath390 of @xmath391 extending @xmath19 so that @xmath318 will preserve any potential disagreement so it s observed between the inputs @xmath392 ) $ ] and @xmath393 ) ] $ ] if ever . for this purpose pick @xmath394 so that @xmath395 and set @xmath396 . now",
    "if @xmath397 ) } \\incompat \\recfnl{i}{\\zeron{\\gamma}}{\\theta^{\\gamma+1}(\\sigma'\\concat[1 ] ) } $ ] then for some choice of @xmath398 the string @xmath399 ) $ ] disagrees with @xmath42 so @xmath400 \\models \\psi $ ] contradicting the assumption that @xmath19 super forced @xmath401 on @xmath388 .",
    "thus by definition [ def : disagreement - eager ] every extension of @xmath402 yields compatible computations under @xmath403 . thus given @xmath404",
    "we may compute @xmath405 as the value of the first converging computation @xmath406 for some @xmath407 with @xmath408 .",
    "since @xmath409 this search can be performed computably in @xmath168 and as @xmath410 eventually a converging computation will always be found .",
    "now suppose @xmath62 is a limit and again let @xmath378 and @xmath411 satisfy . by the minimality of @xmath62 ,",
    "if @xmath412 with @xmath413 we are done so without loss of generality we may assume that @xmath414 . to coordinate the behavior of the computation of @xmath42 from the various @xmath415",
    "we show that we can choose a single index for all such computations .    by lemma [ lem : tower - homeomorphism ]",
    "we can uniformly compute @xmath416 from @xmath417 using @xmath418 .",
    "we claim that there is a single index @xmath328 such that @xmath419 whenever @xmath420 .",
    "the computation coded by @xmath328 can check whether @xmath421 by inspecting @xmath422 allowing @xmath423 to recover @xmath424 at which point it can apply @xmath425 . note that our index @xmath328 has the property that @xmath426 provided @xmath427 and @xmath428 .",
    "armed with this index we define @xmath59 asserting that some such computation for @xmath42 disagrees with the computation from @xmath55 .",
    "@xmath429 \\neq \\recfnl{j'}{\\zeron{\\kappa } \\tplus { \\vartheta^{\\beta}_{\\kappa}}(\\sigma ) } { x}\\conv[s]\\right)\\ ] ]    since @xmath59 is false let @xmath430 on @xmath139 force @xmath67 .",
    "now fix @xmath431 so that @xmath432 and let @xmath433 . now",
    "if @xmath434 by @xmath435 and by @xmath436 for @xmath437 . now if @xmath438 then we also have @xmath439 and @xmath400 \\in t_{\\kappa+1}\\restr{{\\mathbrush{l}^{}(\\kappa+1)}}=t_{\\beta}\\restr{{\\mathbrush{l}^{}(\\kappa+1 ) } } $ ] . turning our attention back to definition [ def : disagreement - eager ]",
    "suppose that @xmath440 ) } $ ] and @xmath441 ) } $ ] are incompatible then we can choose @xmath442 $ ] such that @xmath443 is incompatible with @xmath42 .",
    "this holds as @xmath444 can be factored to @xmath445 and as @xmath446 simplifies to just @xmath447 .",
    "as such a @xmath308 would force @xmath59 we conclude that every @xmath448 extending @xmath449 yields compatible computations and we compute @xmath42 from @xmath422 as we did in the successor stages . hence @xmath412 contradicting the minimality of @xmath62 .",
    "we now show that a slight modification of the construction of @xmath139 from @xmath138 and @xmath321 we performed above lets us build a subgeneric @xmath2 root .",
    "[ lem : tree - minus - one - alt1 ] the following conditions may be added to those of lemma [ lem : tree - minus - one ] so that @xmath139 continues to be effectively built from @xmath138 and @xmath321 while jointly satisfying all conditions .    if @xmath450 and @xmath194 is padded or @xmath451 then @xmath141 is padded .",
    "@xmath285 is disagreement preserving[lem : tree - minus - one : disagreement - preserving ]    to ensure that part [ lem : tree - minus - one : disagreement - preserving ] holds whenever @xmath375 , @xmath452 ) $ ] and @xmath453 ) $ ] are both defined and @xmath454{i}{\\tau_0 } { } \\compat \\recfnl[s]{i}{\\tau_1 } { } $ ] , but there are @xmath455 with @xmath454{i}{\\tau'_0 } { } \\incompat \\recfnl[s]{i}{\\tau'_1 } { } $ ] then set @xmath456)=\\tau'_0 $ ] and @xmath457)=\\tau'_1 $ ] and unset @xmath458 for every @xmath459 . to ensure that @xmath141 is padded we simply place @xmath373 $ ] and @xmath460 $ ] into @xmath141 whenever @xmath371 and for some @xmath167 @xmath461 . if @xmath451 and this suffices .",
    "otherwise @xmath141 is padded as @xmath462 and @xmath194 is padded .    note that given an initial tree @xmath21 we can easily perform effective modifications to ensure it is padded so substituting lemma [ lem : tree - minus - one - alt1 ] into the construction given by lemma [ lem : downward - tower - exists ] yields a disagreement preserving downwardly generic tower of length @xmath2 . thus given a @xmath281 index for @xmath463 viewed as a tree @xmath191 with @xmath464=\\set{g_\\alpha } { } $ ] we can compute the index for a computable tree @xmath122 with a unique path @xmath52 which by lemma [ lem : subgeneric - root ] is @xmath2 subgeneric . while this easily gives a ( uniformly witnessed ) sequence of @xmath0 singletons @xmath465 of @xmath2 subgenerics",
    "this is not quite sufficient to prove corollary [ cor : subgeneric ] as we must still ensure that part [ cor : subgeneric : alpha - independence ] of definition [ cor : subgeneric ] holds . to do this",
    "we observe    [ lem : uniform - alpha - independence ] there is a uniform sequence @xmath466 each having a unique path @xmath467 such that @xmath468    our construction builds @xmath469 as the limit of @xmath470 via a finite injury argument .",
    "the requirements @xmath471 demand that @xmath472 and are met by changing the value of @xmath473 to disagree with the computation in question whenever such a change is not restrained by a higher priority requirement and restraining any changes in the use of this computation or of @xmath474 .",
    "every time @xmath473 is set to a new value it is picked large enough not yet to have been enumerated into the compliment of @xmath475 .    this now suffices to complete the proof of corollary [ cor : subgeneric ] . using the uniformity of the trees @xmath476 from lemma [ lem : uniform - alpha - independence ] and the uniformity of the construction in lemma [ lem : downward - tower - exists ] ( using the modified lemma [ lem : tree - minus - one - alt1 ] ) we get a uniform sequence of computable trees @xmath477 each containing a single @xmath2 subgeneric path @xmath465 . to see that part [ cor : subgeneric : alpha - independence ] of definition [ cor : subgeneric ] holds observe that the uniformity of the trees @xmath476 and the uniform definition of the maps @xmath478 guarantees the equivalence @xmath479 holds uniformly .",
    "also by the uniformity of lemma [ lem : alpha - subgeneric - part-1 ] @xmath480 holds uniformly so if part [ cor : subgeneric : alpha - independence ] failed we would have the contradiction @xmath481    it is worth remarking that the result claimed by harrington in @xcite is nt actually lemma [ cor : subgeneric ] but the substantially stronger version below .",
    "[ cor : subgeneric - star ] for each @xmath352 there is a sequence @xmath353 so that for all @xmath354    1 .",
    "@xmath355 is @xmath2 subgeneric .",
    "@xmath482[cor : subgeneric - star : alpha - independence ] .",
    "@xmath357 is a the unique solution of a @xmath0 formula the index for which is given uniformly in @xmath26 .",
    "corollary [ cor : subgeneric - star ] replaces which required that no @xmath357 could be computable in the join of the @xmath2 jumps of the remaining @xmath465 with the substantially stronger requirement that @xmath357 not be computable in the @xmath2 jump of the join of the remaining @xmath465 . corollary [ cor : subgeneric - star ] is true but we have only been able to prove the result by making some substantial modifications to the underlying framework which we sketch below .    to establish we introduce a notion of mutual genericity for a sequence of the reals @xmath483 on the sequence of trees @xmath484 where @xmath485 is a path through @xmath486 . in particular we define @xmath487 to be the function where @xmath488 and write @xmath489 for @xmath490 .",
    "we further define @xmath491 to be the tree consisting of those nodes @xmath492 with @xmath493 for every @xmath26 and say that the sequence of singletons @xmath494 is mutually @xmath2 generic on @xmath484 if @xmath495 is @xmath2 generic on @xmath496 . we prove [ cor : subgeneric - star ] by simultaneously building @xmath91 many disagreement preserving downwardly generic towers consisting of the trees @xmath497 for @xmath184 where @xmath498 is the unique path through @xmath498 and the trees @xmath497",
    "satisfy the obvious generalization of being eagerly generic to the notion of mutually eagerly generic .",
    "we stipulate our coding function has the property that @xmath499 is always greater than @xmath500 so if @xmath501 we may assume that @xmath502 with each @xmath503 and all but finitely many of them equal to the empty string    generalizing our previous construction we now build @xmath497 as the image of @xmath504 mapping @xmath505 to @xmath497 .",
    "naively one might imagine that we could straightforwardly carry out the same forcing construction we used previously but now applied to @xmath506 as in the standard ( not localized to a tree ) product forcing construction .",
    "however , since we wish to maintain @xmath507 so as to still produce a sequence @xmath485 of @xmath2-subgeneric roots such a simple argument wo nt suffice .",
    "in particular by demanding that every path through @xmath506 extending @xmath492 also pass through @xmath508 we would impose pruning on the factors @xmath497 which would in turn force a pruning of @xmath506 above other nodes @xmath509 even when @xmath510 is incompatible with @xmath492 because we could still have @xmath511 . to avoid this difficulty we ensure that the paths in @xmath497 carry with them the information about the paths in @xmath512 .",
    "in particular we will ensure that if @xmath513 then @xmath514 for every @xmath7 .    as before we define @xmath515 as the limit of a stagewise construction so we suppose that @xmath516 is defined and @xmath517 and define @xmath518 for each @xmath7 exactly as we did in lemma [ lem : tree - minus - one ] . note that if @xmath519 this has the effect of duplicating the usual action of @xmath520 as it would apply to @xmath521 in the single tree @xmath522 at @xmath523 on @xmath524 for all @xmath525 .",
    "it is readily apparent that this definition ensures the required incompatibility property mentioned above .",
    "we may now safely prune branches on @xmath506 without fear of inadvertent interference .",
    "we now simply demand that if at some stage @xmath526 we discover some @xmath527 , @xmath528 with some finite ( contiguous ) initial segment of @xmath529 meeting @xmath530 then we redefine @xmath518 to be equal to @xmath531 and unset @xmath531 for every @xmath532 . by our incompatibility property",
    "this ca nt have any effect on any node in @xmath506 incompatible with @xmath529 . at this point",
    "we may now appeal to the fact that @xmath533 is the unique path through @xmath505 and argue that @xmath534 extends to an infinite path on @xmath497 if and only if @xmath521 extends to an infinite path on @xmath522 for all @xmath26 .",
    "a similar approach can be applied to demand a slightly modified version of disagreement preservation . while this construction does nt yield a @xmath179 computable homeomorphism from @xmath535 $ ] to @xmath536 $ ] ( since some nodes would need to be mapped to many potential values ) it does yield a @xmath179 homeomorphism from @xmath537 $ ] to @xmath538   $ ] and this is sufficient to give both the desired mutual genericity as well as preserve the desired properties of the non - mutual construction .",
    "this completes our sketch of corollary [ cor : subgeneric - star ] .    before we finish our discussion of harrington s work in @xcite one final corollary is worth mentioning .",
    "[ cor : totally - subgeneric ] there is a non - empty @xmath0 class whose members are @xmath2 subgeneric for every @xmath352 .    in the appendix",
    "we establish the existence of a @xmath539 linearly ordered set of notations @xmath540 cofinal in a path through @xmath31 such that the functions @xmath541 are uniformly computable in @xmath2 on the set @xmath542 for @xmath543 .",
    "now consider the predicate @xmath544 consisting of those sets @xmath21 coding computable trees that with @xmath101 in some disagreement preserving downwardly generic tower of length @xmath2 with @xmath545 not having well - founded height less than the notation denoted by @xmath2 .",
    "it is easily checked that @xmath544 is @xmath546 uniformly in @xmath2 as it is easily defined via number quantification over @xmath547 since the set of notations whose height is less than that of @xmath2 is uniformly computable from @xmath547 .",
    "thus we may safely identify @xmath543 with the @xmath546 index for @xmath548 .",
    "moreover @xmath549 entails @xmath550 and clearly @xmath551 .",
    "now fix some @xmath546 subset @xmath552 of @xmath540 and consider @xmath553 . by",
    "@xmath554 bounding there is some @xmath543 bounding @xmath552 so this intersection contains the non - empty collection @xmath548 .",
    "thus by kreisel s compactness theorem @xcite there is some @xmath21 in @xmath555 and by lemma [ lem : subgeneric - root ] every path through @xmath21 is @xmath2 subgeneric for every @xmath352 .",
    "moreover , @xmath21 does nt have well - founded height below @xmath556 so as @xmath21 is computable there must be some infinite path through @xmath21 . indeed , since no path through @xmath21 is hyperarithmetic @xmath22 $ ] must be a perfect set .",
    "interest in the computational properties of fast growing functions goes back to post s program and the realization that how fast the enumeration of @xmath557 grows is a measure of the thinness of @xmath557 , and as rice first showed @xcite when he characterized the hyperimmune sets this way , it s often an easier concept to work with .",
    "with seeming ingratitude this approach soon turned on post giving yates @xcite the tools he needed to put the nails in the coffin of post s program by building a complete maximal set .",
    "later martin improved this analysis to fully characterize the degrees of maximal sets @xcite and even today studying the relation between rate of growth and computational power continues to pay off @xcite .",
    "strangely , however , while many different notions of ` fast growing ' have been proposed and the degrees of such functions ( partially ) characterized little work has been done in the other direction . that is given a degree how fast much a function grow to compute that degree ? to this end we follow slaman and groszek in introducing the following definitions @xcite .    [ def : moduli - of - computation ] the function @xmath558 is a moduli ( of computation ) for a degree @xmath349 if every @xmath559 computes @xmath349 .",
    "@xmath560 is a uniform moduli of computation if there is some fixed computable functional @xmath561 and @xmath562 such that @xmath563 .",
    "if furthermore @xmath560 is a ( uniform ) moduli of computation for @xmath564 we say that @xmath560 is a ( uniform ) self - moduli .",
    "it s natural to respond to this definition by first asking when can a degree @xmath349 even have a moduli of computation ? what about a uniform moduli of computation",
    "? can any degree be computed ( uniformly ? ) by sufficiently fast growing functions ?",
    "though this side of the relationship between rates of growth and computational power hasnt received as much attention as it s opposite these questions are natural enough they have multiple published solutions that are disguised by terminological differences .",
    "we first look to the uniform case where one can show the degrees with a uniform self - moduli are just the @xmath0 singletons ( in @xmath76 ) we direct the reader to jockusch and mclaughlin @xcite for the earliest easily straightforward english language proof but follow them in crediting kuznecov and trahtenbrot @xcite and latter myhill @xcite .",
    "we generalize this result to those functions @xmath560 with a uniform moduli in some computable ordinal number of jumps .",
    "informally the relationship is simply that @xmath560 is a @xmath565 singleton if and only if the natural fast growing function computable in @xmath566 is a uniform modulus for @xmath560 . to state the theorem formally we need to replace `` natural fast growing function '' with an explicit function .",
    "[ def : fastn ] @xmath567\\left(\\recfnl{i}{\\zeron{\\beta}}{i}\\conv \\iff \\recfnl{i}{\\zeron{\\beta}}{i}\\conv[t ] \\right ) } & \\text{otherwise }                                                      \\end{cases } \\\\          & { \\let\\@pmg@parenarg\\@pmg@undefined\\let\\@pmg@braketarg\\@pmg@undefined{\\xi^{}\\ifdefined\\@pmg@parenarg , \\@pmg@parenarg\\fi } \\ifdefined\\@pmg@braketarg _ { \\@pmg@braketarg}\\fi}{\\beta+1}(x)=\\max(\\hat{\\xi}^{\\beta + 1}(x ) , \\sup_{\\gamma \\kleeneleq \\beta } { \\let\\@pmg@parenarg\\@pmg@undefined\\let\\@pmg@braketarg\\@pmg@undefined{\\xi^{}\\ifdefined\\@pmg@parenarg , \\@pmg@parenarg\\fi } \\ifdefined\\@pmg@braketarg _ { \\@pmg@braketarg}\\fi}{\\gamma}(x ) ) \\\\          \\shortintertext{for \\",
    "( \\lambda \\kleeneleq \\alpha \\ ) a limit }      & { \\let\\@pmg@parenarg\\@pmg@undefined\\let\\@pmg@braketarg\\@pmg@undefined{\\xi^{}\\ifdefined\\@pmg@parenarg , \\@pmg@parenarg\\fi } \\ifdefined\\@pmg@braketarg _ { \\@pmg@braketarg}\\fi}{\\lambda}(x ) = \\sup_{\\beta \\kleenel \\lambda } { \\let\\@pmg@parenarg\\@pmg@undefined\\let\\@pmg@braketarg\\@pmg@undefined{\\xi^{}\\ifdefined\\@pmg@parenarg , \\@pmg@parenarg\\fi } \\ifdefined\\@pmg@braketarg _ { \\@pmg@braketarg}\\fi}{\\beta}(x ) = \\sup_{\\substack { \\beta \\kleenel \\lambda \\\\ \\gcode{\\beta } \\leq x } } { \\let\\@pmg@parenarg\\@pmg@undefined\\let\\@pmg@braketarg\\@pmg@undefined{\\xi^{}\\ifdefined\\@pmg@parenarg , \\@pmg@parenarg\\fi } \\ifdefined\\@pmg@braketarg _ { \\@pmg@braketarg}\\fi}{\\beta}(x)\\end{aligned}\\ ] ] we relativize this notion by setting @xmath568 and building @xmath569 as above .    note that as the notations below some given notation @xmath62 can be effectively computed from @xmath570 these supremums can be easily deciphered by any set computing @xmath570 . with this in mind",
    "the following properties should be straightforward to verify so are presented without proof .",
    "[ lem : fastn ] for each @xmath184 , @xmath558 @xmath571 is uniformly computable from @xmath566 and has the following properties .",
    "@xmath572 is a uniform self - modulus for @xmath55 and the functional witnessing this uniformity is itself uniform in @xmath62 .",
    "@xmath573\\left ( { \\let\\@pmg@parenarg\\@pmg@undefined\\let\\@pmg@braketarg\\@pmg@undefined{\\xi^{}\\ifdefined\\@pmg@parenarg , \\@pmg@parenarg\\fi } \\ifdefined\\@pmg@braketarg _ { \\@pmg@braketarg}\\fi}(h){\\gamma } { \\ll}{\\let\\@pmg@parenarg\\@pmg@undefined\\let\\@pmg@braketarg\\@pmg@undefined{\\xi^{}\\ifdefined\\@pmg@parenarg , \\@pmg@parenarg\\fi } \\ifdefined\\@pmg@braketarg _ { \\@pmg@braketarg}\\fi}(h){\\beta } \\right ) $ ] .",
    "there is a stagewise approximation @xmath574(h){\\beta+1 } $ ] uniformly computable in @xmath566 and strictly increasing in @xmath295 such that @xmath575{\\beta+1}(x)={\\let\\@pmg@parenarg\\@pmg@undefined\\let\\@pmg@braketarg\\@pmg@undefined{\\xi^{}\\ifdefined\\@pmg@parenarg , \\@pmg@parenarg\\fi } \\ifdefined\\@pmg@braketarg _ { \\@pmg@braketarg}\\fi}(h){\\beta+1}(x ) $ ] .[lem : fastn : increasing ]    the predicate @xmath576 is @xmath577.[lem : fastn : sigman - geq ]    note that all of the above relativizes to @xmath578[h]{\\beta } $ ] .",
    "we can now formally describe the general relation between @xmath565 singletons and uniform moduli .",
    "[ thm : uniform - modulus - in - beta - jumps ] @xmath571 is a uniform modulus for @xmath560 if and only if @xmath560 is a @xmath565 singleton .",
    "suppose @xmath571 is a uniform modulus for @xmath560 witnessed by the reduction @xmath561 . by part [ lem : fastn : sigman - geq ] of lemma [ lem : fastn ] we note that there is a @xmath577 formula @xmath579 asserting that there is some @xmath580 and @xmath581 .",
    "thus the formula @xmath84 defined below is equivalent to a @xmath582 formula @xmath583\\forall[s]\\forall[x]\\left(\\recfnl[s]{}{\\sigma}{x}\\diverge \\lor \\recfnl[s]{}{\\sigma}{x}=g(x ) \\lor \\psi(\\sigma )    \\right)\\ ] ] clearly @xmath584 holds as if @xmath585 and @xmath586 it must have value @xmath587 .",
    "but if @xmath588 then pick @xmath589 with @xmath590 and @xmath591 where @xmath592 . such @xmath19 witnesses @xmath593",
    "so @xmath560 is a @xmath565 singleton .",
    "conversely suppose that @xmath594 has unique solution @xmath560 .",
    "we may put @xmath59 in the form @xmath595\\psi(\\sigma ) $ ] where @xmath174 is a @xmath596 formula not mentioning @xmath560 .",
    "now given @xmath597 we can uniformly recover @xmath55 from @xmath52 and thus compute a tree @xmath21 consisting of all those @xmath598 for which @xmath579 holds .",
    "as @xmath599 @xmath560 is a path through @xmath21 and as any path through @xmath21 would satisfy @xmath59 it is unique . as @xmath21 is finitely branching we can avail ourselves of kenig s lemma to establish that @xmath52 uniformly computes @xmath560 .    note that the specific form of @xmath600 is nt important only that @xmath601 and that @xmath600 is a uniform modulus for @xmath179 .",
    "this suffices to give a uniform modulus for every hyperarithmetic function and it is easy to see ( as in @xcite ) that @xmath558 has a uniform modulus if and only if @xmath560 is @xmath546 .",
    "while solovay finally classified those functions with some modulus of computation in @xcite using a different method we follow the approach taken in @xcite using hechler style forcing conditions to demonstrate the following lemma .",
    "[ lem : mod - imp - uniform ] if @xmath52 has a modulus of computation than @xmath52 has a uniform modulus of computation    we quickly sketch the proof .",
    "the conditions will be cohen style conditions in @xmath11 paired with some @xmath602 we commit to majorizing .",
    "if @xmath560 is a modulus for @xmath52 then the forcing conditions do their best to produce some @xmath559 not computing @xmath52 and their failure can only occur if there is some sufficiently fast growing @xmath603 above which the reduction is uniform . combining this result with the remark above yields",
    "solovay s result .",
    "[ thm : modulus - hyper ] @xmath558 has a modulus of computation if and only if @xmath560 is @xmath546 .",
    "the above results pose a very puzzling question : all the natural examples of moduli are uniform moduli and every function with a modulus must have a uniform modulus so can the two notions come apart and if so by how much ?",
    "the remainder of this paper is devoted to showing that these two notions come apart as far as possible .",
    "in particular we prove the following result .",
    "[ thm : nonu ] for each @xmath348 there is a a self - modulus @xmath604 such that no @xmath605 for any @xmath137 is a uniform modulus for @xmath606",
    ".    we can now prove [ thm : nonu ] .",
    "we proceed by fixing some notation @xmath2 and describe in this section how to build a self - modulus @xmath606 with no uniform moduli computable from any @xmath607 .",
    "this requires walking a careful line between making @xmath606 unique enough that every faster growing function computes it but not so unique that they can do so uniformly .",
    "our approach is to build @xmath606 as a highly ` generic ' function that is nevertheless unique for all ` small ' functions majorizing it .",
    "any ` large ' function majorizing @xmath606 will have enough computational power to watch our construction of @xmath606 while the uniqueness of @xmath606 relative to the ` small ' functions majorizing @xmath606 will let them compute @xmath606 .",
    "essentially large will mean dominating @xmath608 and @xmath606 will be built computably in @xmath281 leaving the rest of the construction to deal with small functions and to be sufficiently generic to avoid small uniform moduli .",
    "the level of genericity required is given by the next lemma .",
    "[ lem : generic - not - unif - sm ] if @xmath52 is @xmath2 generic on @xmath609 and non - isolated then no @xmath610 is a uniform modulus for @xmath52 .    for contradiction fix @xmath611 as in the lemma , @xmath612 a truth - table functional and @xmath613 a turing functional such that @xmath614 and for every @xmath559 @xmath615 .",
    "now let @xmath59 be the @xmath234 formula defined below asserting that for some @xmath616 @xmath617 disagrees with @xmath52 .",
    "@xmath618 \\neq g(x)\\right)\\ ] ] if @xmath84 then there would be some @xmath619 extending @xmath308 so @xmath620 .",
    "thus @xmath84 and as @xmath621 we must have some @xmath622 with @xmath60 \\phi $ ] . as @xmath52 is non - isolated we can fix another path @xmath623 on @xmath21 extending @xmath19 .",
    "let @xmath624 which as @xmath612 is a truth table reduction must be total . since @xmath625 we know @xmath626 holds .",
    "now fix some @xmath627 . by assumption",
    "@xmath628 contradicting the fact that @xmath629 agrees with @xmath344 everywhere both are defined .",
    "thus , we can make @xmath606 sufficiently generic for our purposes by building it as a non - isolated path through some @xmath2 reduct @xmath122 .",
    "if we had simply made @xmath606 fully @xmath2 generic then it would nt be a self - modulus at all since if @xmath52 is a non - isolated path through @xmath21 and @xmath630-generic on @xmath21 _ relative _ to @xmath21 then @xmath52 is not a self - modulus .",
    "ideally we would simply manipulate @xmath122 so that if some @xmath631 $ ] then @xmath632 ensuring that if @xmath633 either @xmath634 has unique path @xmath606 or @xmath635 . however , @xmath122 must be computable so this condition is too strong .",
    "instead we will impose a scrambled version of this condition .",
    "[ def : uniquely - small ] a tree @xmath21 is uniquely @xmath62 small if @xmath636}]\\forall[x]\\left ( f(x ) , g(x ) \\leq { \\let\\@pmg@parenarg\\@pmg@undefined\\let\\@pmg@braketarg\\@pmg@undefined{\\xi^{}\\ifdefined\\@pmg@parenarg , \\@pmg@parenarg\\fi } \\ifdefined\\@pmg@braketarg _ { \\@pmg@braketarg}\\fi}{\\beta}(x ) \\implies f\\restr{x+1}=g\\restr{x+1 }    \\right)\\ ] ]    ultimately we must project the impact of making @xmath138 uniquely @xmath62 small down to @xmath122 without while retaining the ability to extract @xmath179 from @xmath55 and @xmath560 where @xmath637 for some @xmath638 $ ] .",
    "this requires we further restrict our choice of reduction functions @xmath285 .",
    "[ def : largness - preserving ] say a monotonic map @xmath639 is largeness preserving if every @xmath640 is non - decreasing and if @xmath641)=\\sigma'\\concat\\tau ' $ ] then every @xmath642 satisfies @xmath643 .",
    "[ def : uniquely - small - tower ] say a downwardly generic tower @xmath644 is a uniquely small tower ( of length @xmath2 ) if every @xmath141 is uniquely @xmath62 small and every @xmath285 in part [ def : downwardly - generic : map ] of definition [ def : downwardly - generic : map ] is largeness preserving .",
    "say @xmath122 is an @xmath2 uniquely small reduct if it occurs in some uniquely small tower of length @xmath2 .",
    "we now fix a uniquely small tower @xmath644 of length @xmath2 for the remainder of the proof .",
    "[ lem : treemap - largeness - preserving ] for every @xmath184 the monotonic function @xmath232 is largeness preserving .",
    "suppose that @xmath62 is the least failure . if @xmath645 then @xmath646 .",
    "it is straightforward to verify that the composition of two largeness preserving functions is largeness preserving yielding the contradiction .",
    "now suppose @xmath62 is a limit . since @xmath647 is largeness preserving we know that @xmath232 is non - decreasing . but",
    "@xmath648 ) = { \\vartheta^{\\gamma}_{0}}(\\sigma\\concat[i ] ) $ ] for some @xmath649 by part [ lem : tower - homeomorphism : limits ] of lemma [ lem : tower - homeomorphism ] so by the minimality of @xmath62 @xmath648 ) $ ] ca nt fail the other half of definition [ def : largness - preserving ] .",
    "while the motivation for making @xmath285 largeness preserving is to protect the encoding of @xmath281 in every pair of @xmath650 $ ] it also provides the following useful property .",
    "[ lem : all - preimages - below ] a bound @xmath651 on @xmath652 for those @xmath19 with @xmath653 and @xmath654 can be uniformly computed from @xmath655 .",
    "let @xmath656 be the set containing the empty string and let @xmath657 .",
    "@xmath658}{\\sigma \\in s_n \\land \\exists({x \\leq l(n)+1})\\left(h(x)\\geq i\\right ) \\land \\sigma\\concat[i ] \\in t_{\\beta+1 }   }",
    "\\\\          l(n+1 ) & = \\max_{\\sigma \\in s_{n+1 } } \\lh{{\\vartheta^{\\beta}_{}}(\\sigma ) }      \\end{aligned}\\ ] ] note that by definition [ def : largness - preserving ] in defining @xmath659weve only excluded values of @xmath7 that guarantee @xmath660 ) $ ] .",
    "[ lem : singleton - or - jump ] suppose @xmath661 is a path through an @xmath2 uniquely small reduct @xmath122 then @xmath606 is a self - modulus",
    ".    let @xmath633 which without loss of generality we may assume is non - decreasing .",
    "first suppose that @xmath606 is the only path through @xmath122 satisfying @xmath633 .",
    "in this case let @xmath290 be the set of @xmath662 with @xmath663 .",
    "clearly @xmath290 is a tree and @xmath606 is the unique path through @xmath664 . as @xmath290 is a finitely branching tree computable in @xmath560 , kenig s lemma lets us uniformly compute @xmath606 from @xmath560 .",
    "so suppose @xmath665 with @xmath666 and @xmath667 .",
    "we argue by effective transfinite recursion that @xmath668 ( uniformly in @xmath62 ) for @xmath669 leaving the routine details for the reader . at limit stages",
    "the induction is straightforward so suppose @xmath668 .",
    "we show that given @xmath670 @xmath560 can ( uniformly ) compute @xmath671 and thus @xmath672 . by way of lemmas",
    "[ lem : treemap - largeness - preserving ] and [ lem : all - preimages - below ] we compute @xmath167 such that if @xmath673 and @xmath674 then @xmath675 .",
    "we now verify @xmath671 .",
    "since @xmath676   $ ] and by monotonicity @xmath677 either @xmath678 or @xmath679 . but",
    "@xmath680 and @xmath681 so as @xmath233 is largeness preserving and @xmath682 is monotonic we can define @xmath683 .",
    "this completes the proof that @xmath606 is a self - modulus .",
    "we fill in the final piece of the puzzle by embellishing our construction from lemma [ lem : tree - minus - one ] so that the resulting downwardly generic tower is a uniquely small tower .",
    "[ lem : tree - minus - one - small ] the statement of lemma [ lem : tree - minus - one ] still holds if we also demand that @xmath285 is largeness preserving and @xmath139 is uniquely @xmath62 small .",
    "we sketch the modifications the proof of lemma [ lem : tree - minus - one ] requires . since it is trivial to ensure @xmath285 is largeness preserving simply by restricting which nodes we consider as values for @xmath684 we restrict our attention to ensuring that @xmath141 is uniquely @xmath62 small .",
    "it is easy to eventually recognize pairs of nodes @xmath16 with @xmath685 in @xmath686 such that @xmath687{\\beta+1}(x ) $ ] and to abandon ( remove from @xmath688 ) one or the other rendering it a terminal branch .",
    "provided we always cut off one member of any such pair @xmath141 will surely be uniquely @xmath62 small .",
    "the difficulty lies only in ensuring we choose the correct nodes to cut so as not to collaborate with our attempts to make @xmath141 eagerly generic in a way that prunes all infinite paths from @xmath141 .",
    "our solution is to work in the domain rather than the image and regard @xmath689 to have priority @xmath12 .",
    "note that we assume that @xmath690 implies that @xmath691 .",
    "if at the end of stage @xmath295 we discover some minimal pair of strings @xmath16 and @xmath589 with @xmath692{\\beta+1}(x ) $ ] where @xmath693 with @xmath694 we set @xmath689 to be undefined .",
    "note that by working in the domain if we act to meet some genericity requirement by forcing all extensions of @xmath689 to pass through @xmath308 the only way @xmath308 could later be pruned from the tree is if @xmath689 is pruned from the tree so our additional pruning ca nt stop us from making @xmath141 eagerly generic .",
    "we now argue that if @xmath695 then eventually @xmath689 settles down to a node that never gets pruned .",
    "assume that @xmath19 is the node on @xmath138 with least code at which the claim fails , @xmath295 is a stage large enough that for every @xmath390 with with @xmath696 @xmath697 has settled on it s final value , @xmath19 never leaves @xmath138 after stage @xmath295 and that @xmath698 for all such @xmath390 .",
    "let @xmath699 be larger than @xmath700 for all @xmath701 and @xmath702 the first stage following @xmath703 at which @xmath704 is reset .",
    "if @xmath705 then @xmath706 so after @xmath707 @xmath708 is never again reset on account of avoiding simultaneous smallness and @xmath19 never leaves @xmath138 after @xmath295 so @xmath708 is nt reset after @xmath707 on account of the homeomorphism requirements so it must be reset at some @xmath709 on account of the genericity requirement .",
    "but now nothing can reset @xmath708 if @xmath710 .",
    "contradiction .",
    "this enough to complete our proof of theorem [ thm : nonu ] .",
    "invoke lemma [ lem : tree - minus - one - small ] to produce a a uniquely small tower @xmath644 with @xmath325 homeomorphic to @xmath11 with @xmath711 and set @xmath712 .",
    "lemma [ lem : totally - generic ] tells us that @xmath52 is @xmath2-generic on @xmath21 and as @xmath52 is non - isolated lemma [ lem : generic - not - unif - sm ] guarantees that no @xmath610 is a uniform modulus for @xmath52 . on the other hand as both @xmath713 and @xmath714 are computable in @xmath281 so is @xmath52 and by lemma [ lem : singleton - or - jump ]",
    "this entails that @xmath52 is a self - modulus .      since every @xmath546 function has a moduli one",
    "might also be prompted to ask whether there are @xmath546 degrees that are far from any modulus .",
    "intuitively this should be true for sufficiently generic degrees and we verify this is the case .",
    "[ thm : distant - modulus ] if @xmath52 is a non - isolated path through @xmath21 and @xmath52 is @xmath2 generic on @xmath21 _ relative _ to @xmath23 then no @xmath715 for some @xmath137 is a modulus for @xmath52 so in particular no @xmath716 is a modulus for @xmath52 .    let @xmath717 $ ] be @xmath621 generic on @xmath21 relative to @xmath23 and let @xmath612 be a truth table functional , i.e. a turing functional total on all inputs .",
    "suppose for a contradiction that @xmath718 , is a modulus for @xmath52 .",
    "we work to build some @xmath719 not computing @xmath52 .",
    "let @xmath720 and @xmath721 . at stage",
    "@xmath722 we define @xmath723 such that @xmath724 and @xmath725 with @xmath726 .",
    "thus at each stage we commit to some initial segment of @xmath51 and a function that @xmath51 must majorize",
    ". our goal will be to force every turing reduction from @xmath51 either to disagree with @xmath52 or to be partial .",
    "if there is a @xmath727 with @xmath728 forcing a disagreement between @xmath729 and @xmath52 then let @xmath730 and @xmath731 . otherwise if there is some @xmath732 with @xmath733 and an integer @xmath589 such that no @xmath727 with @xmath616 satisfies @xmath734 then leave @xmath735 and set @xmath736 .",
    "if one of these two alternatives is satisfied for every @xmath26 then @xmath737 majorizes @xmath738 but fails to compute @xmath52 contradicting the assumption .",
    "so suppose that for @xmath739 and @xmath740 neither alternative is satisfied .",
    "we note that since @xmath52 is non - isolated , computably in @xmath741 one can enumerate an infinite list of distinct @xmath62 generic branches @xmath465 of @xmath21 with @xmath742 and @xmath743 with the later property guaranteed simply by letting @xmath465 equal @xmath52 on a long enough initial segment",
    ". therefore we define @xmath744 so that @xmath745 searches for @xmath167 and @xmath404 with @xmath746 h^{g}(x)=y $ ] and then searches for values @xmath747 for each @xmath748 such that @xmath749 h^{g_i}(x)=y_i   $ ] and returns a number larger than @xmath404 and all the @xmath747 .",
    "such values @xmath747 must exist since @xmath750 is total .",
    "thus @xmath751 , @xmath752 and @xmath753 .",
    "since @xmath52 is @xmath754 generic relative to @xmath21 on @xmath21 there is some @xmath167 such that @xmath755 forces the @xmath67 where @xmath59 is the @xmath756{\\beta } $ ] property that some extension @xmath757 with @xmath758 disagrees with @xmath52 .",
    "fix @xmath589 so that @xmath759 and pick @xmath760 extending @xmath19 such that @xmath761 .",
    "such a @xmath308 must exist as otherwise @xmath762 would have been a valid choice for @xmath763 .",
    "moreover @xmath764 since @xmath52 forced @xmath765 and @xmath766 .",
    "but as @xmath767 and @xmath768 we have @xmath769 and as @xmath770 is @xmath62 generic on @xmath21 some @xmath771 with @xmath772 forces @xmath59 contradicting the fact that @xmath755 forced @xmath765 .",
    "the similarity between this result and lemma [ lem : generic - not - unif - sm ] is striking . since lemma [ lem : generic - not - unif - sm ] was in some sense a reflection of the fact that @xmath52 has a uniform modulus truth table computable within @xmath62 jumps if and only if @xmath52 is a @xmath565 singleton this naturally raises the following open question .",
    "can the self - moduli be characterized in terms of definability like the characterization of the uniform self - moduli as the @xmath0 singletons ?",
    "in particular we conjecture that @xmath52 is a self - modulus if and only if there is a computable tree @xmath21 with @xmath717 $ ] and a @xmath0 formula @xmath773 such that for all @xmath774 with @xmath775 $ ] the formula @xmath776 is uniquely satisfied by @xmath52 .",
    "ideally , however , there would be a simpler statement expressing the definability of the self - moduli .",
    "here we make good on our promise to define @xmath136 and @xmath148 .",
    "[ def : notation - path ] a path from a limit notation @xmath34 to @xmath777 to is a sequence @xmath778 of notations such that @xmath779 and for every @xmath7 @xmath780 appears in the effective limit for @xmath781 , i.e. , @xmath782\\exists({m})\\left ( \\gamma_{i+1 } = \\kleenelim{\\gamma_{i}}{m}\\right)\\ ] ] a path @xmath783 from @xmath34 to @xmath62 is minimal if @xmath784 for the least @xmath116 such that @xmath785 .    given an initial segment @xmath540 of ordinal notations for every @xmath786 let @xmath148 denote the least limit notation @xmath146 in @xmath540 with @xmath787 for some @xmath116 .",
    "if no such notation exists we write @xmath788                    we first note that @xmath136 is always finite as otherwise the sequence @xmath798 would violate . to verify note that by applying the minimality of paths in @xmath540 we know that @xmath790{\\beta } $ ] passes through @xmath799 for some @xmath800 .",
    "claim now follows trivially by considering the paths from @xmath34 to @xmath35 .",
    "it remains only to show the computability .",
    "now we show if @xmath540 has a maximal element @xmath2 then @xmath136 is a computable function on @xmath540 . to this end",
    "we define a decreasing sequence of ordinals @xmath801 dividing @xmath540 into connected pieces .",
    "let @xmath802 and if @xmath801 is a limit ordinal set @xmath803 to be the predecessor of the least @xmath804 with @xmath805{\\beta } $ ] defined .",
    "if @xmath801 is a successor let @xmath803 be the predecessor of @xmath801 .",
    "since this is a decreasing sequence of ordinals it must be finite thus for some @xmath26 @xmath806 and by definition [ def : nice - ordinal ] for every @xmath786 there is exactly one @xmath801 with @xmath805{\\beta } $ ] defined .",
    "we may compute @xmath136 by enumerating all paths from some @xmath801 until we find some path @xmath805{\\beta } $ ] at which point we may set @xmath807{\\beta } \\rvert } $ ] .",
    "if @xmath540 lacks a maximal element we note there is an increasing sequence @xmath808 cofinal in @xmath540 such that @xmath809 is nt defined for any @xmath7 .",
    "by part we can build @xmath808 from any increasing cofinal sequence by repeatedly applying the operation taking @xmath62 to @xmath148 until no longer possible .",
    "since the definition for @xmath136 in @xmath540 and @xmath810 agree when @xmath811 given @xmath2 we can simply compute @xmath136 on @xmath812 for an appropriate @xmath7 .    to compute @xmath148 on @xmath810 we start listing @xmath813 and look for a @xmath34 and integer @xmath26 such that @xmath814 .",
    "if such a pair is ever found we return @xmath815 .",
    "simultaneously we start listing the sequence @xmath801 defined from @xmath816 and should we discover @xmath817 we return @xmath788 . the arguments given above guarantee that this is both a correct and complete procedure .",
    "we start by enumerating @xmath825 and assigning @xmath826 the lower bound @xmath827 .",
    "suppose we have already enumerated some @xmath828 with associated lower bound @xmath34 but have yet to enumerate any extension of @xmath822 .",
    "here we search for the least @xmath26 such that @xmath829 .",
    "let @xmath220 be the least notations such that @xmath830 for finite @xmath116 and @xmath831 and enumerate @xmath832 $ ] with lower bound @xmath34 .",
    "otherwise let @xmath208 be the maximal notation with @xmath833 $ ] already enumerated .",
    "now search for the least @xmath26 with @xmath834 and let @xmath220 be the least notations such that @xmath830 for finite @xmath116 and @xmath835 and enumerate @xmath832 $ ] with lower bound @xmath836 .",
    "the construction clearly enumerates a sequence for every notation @xmath184 .",
    "now assume that @xmath837 .",
    "let @xmath838 be the longest common initial segment of @xmath839 and @xmath840 such that @xmath841 \\subset { \\beta^{\\blacktriangleleft } }   $ ] and @xmath842 \\subset { \\gamma^{\\blacktriangleleft } }   $ ] . during enumeration @xmath842",
    "$ ] would have been tagged with a lower bound of at least @xmath843 .",
    "hence @xmath844 but @xmath845 .",
    "hence @xmath332 . to observe the other direction",
    "note that if @xmath332 either @xmath837 or @xmath846 but the later possibility would entail that @xmath378 so @xmath837 .",
    "given @xmath184 construct the sequence @xmath822 as by the prior lemma . by transfinite recursion",
    "define the notation @xmath848 to be the successor of @xmath849 if @xmath62 is the successor of @xmath220 and the limit of @xmath850 where @xmath851 which is effective by the above construction .",
    "now if @xmath852 then @xmath853 and hence for some @xmath781 @xmath854   $ ] so @xmath855 .",
    "thus , @xmath856 .",
    "moreover , note that there is a path from @xmath857 to @xmath858 only if @xmath34 appears in @xmath822 and that path is unique and minimal by construction satisfying part [ def : nice - ordinal : min ] of the definition .",
    "if @xmath859 then @xmath860 so @xmath861 ensuring that part [ def : nice - ordinal : between ] of the definition is satisfied .",
    "finally part [ def : nice - ordinal : finite - sequence ] is trivially satisfied as for each @xmath62 @xmath822 is a finite string .      fix a unique path @xmath862 through @xmath31 and let @xmath808 be an increasing cofinal sequence in @xmath862 .",
    "define @xmath863 and @xmath864 . by the definition of the effective addition operation on notations",
    "there is no @xmath865 with @xmath866 and @xmath867 connected by a path but the set of ordinals therefore it follows from the fact that @xmath868 and @xmath801 are nice that @xmath803 is nice .",
    "let @xmath869 .    to simplify our notation slightly in the main body of the paper we ve made use of the fact that if @xmath148 is undefined then @xmath870 so we may safely set @xmath871 for any @xmath62 on which @xmath148 is undefined and by lemma [ lem : build - copylen ] can be done without imperiling the computability of @xmath136 .",
    "note our construction of our nice path through @xmath31 provides a @xmath872 set of notations @xmath808 cofinal in @xmath31 such that the computations giving @xmath148 and @xmath136 for every @xmath873 can be uniformly computed from @xmath808 .",
    "all constructions performed in the main body of the paper can be taken to use ordinals that lie along this @xmath872 path .",
    "j.  myhill .",
    "finitely representable functions . in a.",
    "heyting , editor , _ constructivity in mathematics : proceedings of the colloquium held at amsterdam , 1957 _ , studies in logic and the foundations of mathematics , pages 195207 .",
    "north holland publishing co. , amsterdam , 1959 ."
  ],
  "abstract_text": [
    "<S> while much work has been done to characterize the turing degrees computing members of various collections of fast growing functions , much less has been done to characterize the rate of growth necessary to compute particular degrees . </S>",
    "<S> prior work has shown that every degree computed by all sufficiently fast growing functions is uniformly computed by all sufficiently fast growing functions . </S>",
    "<S> we show that the rate of growth sufficient for a function to uniformly compute a given turing degree can be separated by an arbitrary number of jumps from the rate of growth that suffices for a function to non - uniformly compute the degree . </S>",
    "<S> these results use the unpublished method harrington developed to answer mclaughlin s conjecture so we begin the paper with a rigorous presentation of the approach harrington sketched in his handwritten notes on the conjecture . </S>",
    "<S> we also provide proofs for the important computability theoretic results harrington noted were corollaries of this approach . </S>",
    "<S> in particular we provide the first published proof of harrington s result that there is an effectively given sequence of @xmath0 singletons that are @xmath1 none of which is computable in the effective join of the @xmath2 jumps of the others for every @xmath3 .    </S>",
    "<S> = 1 </S>"
  ]
}
{
  "article_text": [
    "one of the most famous results in queueing theory is _ burke s theorem _ @xcite . consider a queue in which available services occur as a poisson process of rate @xmath1 ( a so - called @xmath2 queueing server ) .",
    "if the arrival process is a poisson process of rate @xmath3 ( independent of the service process ) , then the departure process is also a poisson process of rate @xmath4 .",
    "we may say that the arrival process is a _ fixed point _ for the server .",
    "in this paper we consider the question of fixed points for queues with two or more classes of customer ( with different levels of priority ) .",
    "when a service occurs in such a queue , it is used by a customer whose priority is highest out of those currently present in the queue .",
    "we will see that a two - type fixed point can be constructed using the output processes ( consisting of departures and unused services ) from a one - type queue . then in a recursive way , a fixed point with @xmath5 classes of customer can be constructed using the output of a queue whose arrival process is itself a fixed point with @xmath6 classes .",
    "except in the familiar one - type case , the fixed points are not markovian .",
    "in particular , one observes _ clustering _ of the lower - priority customers .    in the paper we work with a queueing model which is somewhat more general than the @xmath7 queue described above .",
    "our basic model is of a discrete - time queue with batch arrivals and services .",
    "let @xmath8 be the amount of service offered at time @xmath9 .",
    "we obtain fixed - point results for the case where @xmath8 are i.i.d .",
    "and each @xmath8 has so - called `` bernoulli - geometric '' distribution , i.e.  is equal to the product of a geometric random variable and an independent bernoulli random variable . by taking appropriate limits where necessary",
    ", this model covers a variety of previously considered queueing servers , for example discrete - time @xmath7 queues @xcite , discrete - time queues with geometric or exponential service batches @xcite , continuous - time @xmath7 queues as described above , continuous - time queues with geometric or exponential service batches occurring at times of a poisson process , and brownian queues @xcite .",
    "versions of burke s theorem and related reversibility results were proved for this bernoulli - geometric model in @xcite .",
    "some such fixed - point processes were already constructed in certain cases ( @xmath0 queues in continuous or discrete time ) in @xcite in the context of stationary distributions for certain multi - type interacting particle systems . in this paper",
    "we give a more direct proof of the fixed - point property , which relies on properties of _ interchangeability _ for queueing servers .",
    "weber @xcite showed that for a tandem queueing system consisting of two independent @xmath7 servers with service rates @xmath10 and @xmath11 , and an arbitrary arrival process , the distribution of the departure process is unchanged if @xmath10 and @xmath11 are exchanged .",
    "this interchangeability result was subsequently proved in a number of different ways , for example in @xcite , @xcite , and @xcite .",
    "the coupling proof given by tsoucas and walrand in @xcite is important for our purposes , since we can use their approach to extend the interchangeability result to multi - type queues .    before developing the general batch queueing model ,",
    "we begin in section [ dotm1section ] by giving a guide to the main results and methods of proof in the particular case of the continuous - time @xmath7 queue .",
    "since this model is already rather familiar , we give an informal account without introducing too much notation .",
    "( everything is developed rigorously in later sections ) .",
    "in addition , certain aspects are simpler in the @xmath7 case ; for example , the service process has only one parameter , so all such service processes are interchangeable , and given any vector of arrival rates @xmath12 ( corresponding to customers of classes @xmath13 respectively ) , there is a unique fixed - point arrival process which is common to all @xmath2 queues for @xmath14 .",
    "our general model is introduced in section [ model ] , which describes the set - up of a discrete - time batch queue .",
    "multi - class systems are introduced in section [ multiclass ] .",
    "the bernoulli - geometric distribution , and corresponding queueing servers , are described in section [ bergeom ] .",
    "interchangeability results are given in section [ interchangeability ] .",
    "these extend the results for one - type @xmath7 queues described above , to cover multi - type systems and to the more general queueing server model . in section [ mainresultsection ] we give the construction of multi - type fixed points , and prove the fixed - point property using the interchangeability results .",
    "the main result is given in theorem [ fixedpointtheorem ] ( the corresponding results in the @xmath7 case are theorem [ 2typemm1thm ] and theorem [ mtypemm1thm ] ) . the proof of the interchangeability result itself is given in section [ interchangeabilityproof ] .    in section [ examplesection ]",
    "we give examples of the application of the results to several of the particular queueing systems described above .",
    "the final example is that of the brownian queue . here",
    "the lower - priority work in the fixed - point process corresponds to the local - time process of a reflecting brownian motion ; this process is non - decreasing and continuous but is constant except on a set of measure 0 .",
    "this is an extreme case of the `` clustering of lower - priority customers '' referred to above .",
    "the connections with interacting particle systems are discussed in section [ particlesection ] .",
    "the fixed points for @xmath0 servers in discrete time and in continuous time correspond to stationary distributions for multi - type versions of the tasep @xcite and of hammersley s process @xcite , respectively .",
    "time in the queueing systems corresponds to space in the particle systems ; with this identification , questions of fixed points for queues and stationary distributions for particle systems are closely analogous .",
    "finally in section [ continuoussection ] we mention a limit as the number of classes goes to infinity , with the density of each class going to 0 . in this limit ,",
    "the class - label of each customer becomes , for example , a real number in @xmath15 $ ] .",
    "this gives another illustration of the clustering phenomenon ; although a priori , any given label has probability 0 of occurring , nonetheless for any realisation of the process , each label that does occur will occur infinitely often with probability 1 .",
    "let @xmath16 and @xmath17 be independent poisson processes , of rate @xmath4 and @xmath1 respectively , with @xmath3 .",
    "we can use these processes to define an @xmath0 queue with arrival rate @xmath4 and service rate @xmath1 .",
    "arrivals occur at points of the process @xmath16 ; at these points the queue - length increases by 1 . at a point of the process @xmath17",
    ", a departure occurs and the queue - length decreases by 1 , unless the queue - length is already 0 , in which case it stays the same and we say that an _ unused service _ has occurred .",
    "we write @xmath18 for the process of departures and @xmath19 for the process of unused services .",
    "perhaps the most famous result in queueing theory is _",
    "burke s theorem _ , which states that the departure process @xmath18 is itself a poisson process of rate @xmath4 .",
    "we may regard the service process @xmath17 as an operator ( a  @xmath7 queue \" , or a `` @xmath2 queue '' if we want to emphasise the service rate ) which maps the distribution of an arrival process to the distribution of a service process . in this sense ,",
    "burke s theorem @xcite says that a poisson process of rate @xmath4 is a _ fixed point _ for a @xmath2 queue whenever @xmath20 .    in @xcite , anantharam showed that in fact poisson processes are the only such ergodic fixed points .",
    "mountford and prabhakar @xcite showed further that these fixed points are _ attractive _ ; if one starts with any ergodic process of rate @xmath4 and applies the `` @xmath2 queueing operator '' repeatedly , the sequence of distributions obtained converges weakly to a poisson process of rate @xmath4 .",
    "in this paper we consider fixed - points in the context of _ multi - class _ queues .",
    "consider again a queue whose service process is a poisson process of rate @xmath1 .",
    "the queue may now contain several types of customer , say types @xmath21 .",
    "each arrival to the system is of one of these types .",
    "customers of type 1 ( `` first - class customers '' ) have the highest priority , followed by those of type 2 ( `` second - class customers '' ) and so on .",
    "when a service occurs in the queue , if there are any customers present , then a customer with the highest priority out of those present departs from the system .",
    "hence each departure from the system also has a type .",
    "again one may have `` unused services '' , when the queue is completely empty at the time of an event in the service process .",
    "an @xmath22-type queue may be seen as a coupling of @xmath22 one - type queues , which share the same service process .",
    "given @xmath23 with @xmath24 , consider only customers of classes 1 up to @xmath23 , ignoring the differences between these customers . since any such customer has priority any customer whose class is higher than @xmath23 , the process obtained behaves exactly as a one - type queue .",
    "the distribution of a multi - type arrival process is said to be a _ fixed point _ if the process of departures from the system has the same distribution as the process of arrivals .",
    "( we assume that arrivals and services are independent ) .",
    "we will consider arrival processes which are stationary and ergodic , in which case for each @xmath22 there is a deterministic long - run intensity of arrivals of customers of type @xmath22 .",
    "a coupling argument analogous to that used by mountford and prabakhar in @xcite can be used to show that for any @xmath12 with @xmath25 , there is a unique stationary and ergodic @xmath22-type arrival process with intensity @xmath26 of customers of type @xmath23 which is a fixed point for the @xmath2 queue .",
    "as observed above , the system comprising only customers of types 1 up to @xmath23 can be seen as a single one - type queue ( for each @xmath24 ) .",
    "since the only one - type fixed points are poisson processes , this shows that in any multi - type fixed point , the combined process of customers of types @xmath27 must be a poisson process of rate @xmath28 .",
    "first we describe how to construct such a two - type fixed point , with intensities @xmath29 and @xmath30 .",
    "consider the output process @xmath31 of an @xmath0 queue as described above , with arrival rate @xmath29 and service rate @xmath32 .",
    "we regard @xmath31 as a two - type process , in which first - class customers occur at the points of @xmath18 and second - class customers occur at the points of @xmath19 .",
    "write @xmath33 for the distribution of this process .",
    "[ 2typemm1thm ] the distribution @xmath34 is a fixed point for a @xmath7 queue with service rate @xmath1 , for any @xmath35 .",
    "note that indeed the sub - process of first - class customers is a poisson process of rate @xmath29 ( by burke s theorem ) and that the combined process of first - class and second - class customers is a poisson process of rate @xmath32 ( since @xmath36 )",
    ".    however , note also that the process @xmath19 of second - class customers is _ not _ a poisson process .",
    "rather , the second - class customers tend to _",
    "cluster_. for example , fix @xmath29 and suppose that @xmath30 is very small .",
    "the process @xmath31 is obtained as the output of a queue whose arrival rate is @xmath29 and whose service rate is @xmath32 , so that it is operating very close to capacity",
    ". the long - run rate of unused services is only @xmath30 .",
    "however , if we observe an unused service , we know that the queue is currently empty ; hence just after an unused service , the instantaneous rate at which another unused service occurs is @xmath32 which may be much larger .",
    "now we show how to construct fixed points with a larger number of classes recursively .",
    "fix @xmath12 .",
    "suppose we have already constructed a distribution of an @xmath37-type process @xmath38 , with intensity @xmath39 of @xmath40th - class customers for @xmath41 , which is a fixed point for a @xmath2 queueing server ( whenever @xmath42 ) .",
    "now consider a @xmath43 queue whose arrival process has distribution @xmath38 .",
    "write @xmath44 for the output process of this queue , comprising departures of types @xmath45 and unused services . now identify points of @xmath19 as @xmath22th - type customers , and write @xmath46 for the distribution of the @xmath22-type process obtained .",
    "[ mtypemm1thm ] the distribution @xmath47 is a fixed point for a @xmath7 queue with service rate @xmath1 , whenever @xmath14 .    the construction of @xmath48 and @xmath49 is illustrated in figure [ linesfig ] .",
    "note that if we take the a process with distribution @xmath50 and ignore the @xmath22th - class customers , we obtain a process with distribution @xmath38 .",
    "( this had to be the case , because of the uniqueness of the fixed - points with given intensitites , and because the ignoring the @xmath22th class of an @xmath22-class system simply gives an @xmath6-class system ) .",
    "theorem [ mtypemm1thm ] was already proved in @xcite ; it emerged as a corollary of a multi - type tandem queue construction which was used to give the stationary distribution of a multi - type version of an interacting particle system called `` hammersley s process '' . in this paper",
    "we give a much more direct proof , using properties of _ interchangeability _ of queueing servers .      in 1979",
    "richard weber @xcite proved an _",
    "interchangeability _ property for @xmath7 queueing servers .",
    "consider two independent @xmath7 queueing servers in tandem , with service rates @xmath10 and @xmath11 .",
    "the first queue has some arrival process @xmath16 , with an arbitrary distribution ( for example , it could even be deterministic ) , which is independent of the service processes . by `` tandem ''",
    "we mean that a customer leaving the first queue immediately joins the second queue ; the departure process from the first server is the arrival process of the second .",
    "the result of @xcite is that the law of the departure process from the system ( that is , the departure process from the second queue ) , is unchanged if @xmath10 and @xmath11 are exchanged .    given a queue with arrival process @xmath16 and service process",
    "@xmath17 , we write @xmath51 for the departure process from the queue .",
    "so in a system with two queues in series , with arrival process @xmath16 and service process @xmath52 and @xmath53 at the first and second queues respectively , the process of departures from the system is @xmath54 .",
    "then the result of @xcite can be written as follows :    [ weberthm ] let @xmath52 and @xmath53 be independent poisson processes of rates @xmath10 and @xmath11 respectively . then for any arrival process @xmath16 , @xmath55    thus , for any arrival process , the order of the queues does not affect the law of the output of the system .",
    "by induction , the result extends easily to tandems containing more than two queues .",
    "alternative proofs of this interchangeability result were subsequently given by anantharam @xcite , by lehtonen @xcite , and by tsoucas and walrand @xcite .",
    "the proof by tsoucas and walrand in @xcite is particularly important for our purposes since it allows an extension of the result which will also apply to multi - class systems .",
    "their methods can be used to give the following result .",
    "[ mm1couplingthm ] let @xmath52 and @xmath53 be independent poisson processes of rates @xmath10 and @xmath11 .",
    "there is a coupling of @xmath52 and @xmath53 with two further processes @xmath56 and @xmath57 such that :    * @xmath58 ; and * if @xmath16 is any arrival process , then @xmath59 .",
    "the key point is that we can couple a system with service rates @xmath60 and another system with service rates @xmath61 in such a way that _ for any arrival process _ , the departure processes from the two systems are the same .",
    "( weber s result already implies the existence of such a coupling for any fixed arrival process , but not necessarily that the same coupling works for all arrival processes simultaneously ) .    above we explained how a queue with @xmath22 types of customer can be regarded as a coupling of @xmath22 one - type systems , with the same service process but with different arrival processes .",
    "( in the @xmath23th system , we only look at customers whose class in the original system is between @xmath62 and @xmath23 , and neglect all the customers whose class is greater than @xmath23 ) .",
    "since theorem [ mm1couplingthm ] gives a coupling which yields interchangeability simultaneously for all arrival processes , it immediately implies interchangeability for any multi - type arrival process :    [ mm1multitype ] let @xmath52 and @xmath53 be independent poisson processes of rates @xmath10 and @xmath11 .",
    "then for any multi - type arrival process @xmath63 , @xmath64    the coupling described in theorem [ mm1couplingthm ] is quite easy to construct .",
    "( the construction in @xcite is essentially the same although not expressed in quite the same way ) .",
    "assume without loss of generality that @xmath65 .",
    "now consider a queue whose arrival process is @xmath52 and whose service process is @xmath53 .",
    "let @xmath66 be the departure process of this queue , and let @xmath19 be the process of unused services ( so that @xmath67 ) .",
    "now let @xmath68 , and let @xmath69 .",
    "loosely speaking , we have transferred the unused service events from one process to the other .    the fact that @xmath70 has the same distribution as @xmath71 is an extension of burke s theorem , and can be proved using simple reversibility arguments",
    "( see for example theorem 3 of @xcite ) . to prove the interchangeability statement in part ( ii ) of theorem [ mm1couplingthm ]",
    ", one can verify pathwise that , whatever the arrival process is , transferring `` unused services '' in this way can not affect the overall departure process .    a full proof of this result in the more general setting is given below ( theorem [ interchangethm ] ) .",
    "the construction in the general setting is slightly more complicated ; again we remove the process of `` unused services '' from @xmath53 to obtain @xmath57 , but now we do not add precisely the same process to @xmath52 to obtain @xmath56 , but instead something more like an independent copy of the process .",
    "however , the same ideas of reversibility are again the key part of the proof .      still in the context of the @xmath7 queue",
    ", we finally indicate how the interchangeability result of corollary [ mm1multitype ] can be used to prove that the processes @xmath50 defined above are indeed fixed points .",
    "the arguments in this section are informal but can be made fully rigorous , as they are below in the proof of theorem [ fixedpointtheorem ] .",
    "we will show the argument for @xmath72 ; the case @xmath73 follows by induction in a natural way , and can be found in the general setting below .",
    "recall that @xmath33 is the distribution of a two - type process which can be obtained by taking the departure and unused service processes @xmath31 from an @xmath0 queue whose arrival rate is @xmath29 and whose service rate is @xmath30 .",
    "so the first - class customers occur as a poisson process of rate @xmath29 , and the first - class and second - class customers together occur as a poisson process of rate @xmath32 .",
    "let @xmath35 , and consider feeding the arrival process @xmath48 into a system of two queues in series , with service rates @xmath32 and @xmath1 .",
    "the two possible orderings of the two queues can be visualized as follows : @xmath74{$g$ } \\longrightarrow \\boxed{\\hspace{3.23mm}{s_\\mu}\\hspace{3.23 mm } } \\longrightarrow h \\\\",
    "f_2\\longrightarrow \\boxed{\\hspace{3.23mm}{s_\\mu}\\hspace{3.23 mm } } & \\longrightarrow \\makebox[1em]{$j$ } \\longrightarrow \\boxed{s_{\\lambda_1+\\lambda_2 } } \\longrightarrow k\\end{aligned}\\ ] ] for example , @xmath75 is the distribution of the departure process of the first queue with service rate @xmath32 , and is then itself used as the arrival process for the second queue with service rate @xmath1 .",
    "note that the total arrival rate in the process @xmath48 is @xmath32 .",
    "but the first queue in the first system only has service rate @xmath32 , so it is saturated ; every service is used by some customer .",
    "since the arrival process of first - class customers is a poisson process of rate @xmath29 , the first - class departures in @xmath75 occur as the departures from an @xmath76 queue ; the second - class customers fill up all the other services which are unused by first - class departures .",
    "hence this two - type process has the distribution of the departure and unused service process @xmath31 from an @xmath76 queue , and we have @xmath77 .",
    "the same argument shows also that @xmath78 , since the process @xmath79 has total intensity @xmath32 , and ( by burke s theorem ) its first - class customers occur as a poisson process of rate @xmath29 .",
    "finally , the interchangeability result in [ mm1multitype ] tells us that @xmath80 , so that also @xmath81 .",
    "since we have @xmath82 , we can concentrate only on the second queue in the first line , to obtain @xmath83 so that indeed @xmath48 is a fixed point for the @xmath2 queue as desired .",
    "we now move to the more general queueing model .",
    "we begin by defining a model of a batch queue in discrete - time . by taking particular values , or appropriate limits",
    ", this model will cover various interesting cases , including discrete - time and continuous - time @xmath0 queues .",
    "the batch queue is driven by an arrival process @xmath84 and a service process @xmath85 .    at time - slot @xmath86 ,",
    "@xmath87 customers arrive at the queue .",
    "then service is available for @xmath88 customers ; if the queue - length is at least @xmath88 , then @xmath88 customers are served , while if the queue length is less than @xmath88 then all the customers are served .",
    "we define various processes as functions of the basic data @xmath16 and @xmath17 of the queue .",
    "let @xmath89 be the queue length after the service @xmath90 , before the arrival @xmath87 .",
    "formally , we define the process @xmath91 by @xmath92 ( where a sum from @xmath9 to @xmath93 is understood to be 0 ) . in accordance with the description of the queue above",
    ", we have the basic recurrences @xmath94_+\\ ] ] ( where @xmath95_+$ ] denotes @xmath96 ) .",
    "let @xmath97 be the number departing from the queue at the time of the service @xmath88 .",
    "so @xmath98    finally let @xmath99 be the unused service at the time of the service @xmath88 .",
    "see figure [ slotfig ] for a representation of the evolution of the queue along with its inputs and outputs .    since @xmath91 , @xmath18 , @xmath19 are all functions of the data @xmath16 and @xmath17 , we sometimes write @xmath100 , and so on .",
    "note that we allow the possibility that @xmath101 .",
    "indeed , we do nt impose any stability condition on the queue ; so , for example , if the average rate of arrivals exceeds the average rate of service , then the queue will become saturated .",
    "in fact , the following simple observation will be useful later :    [ saturationlemma ] suppose the arrival and service processes are independent , and @xmath102 are i.i.d .",
    "with mean @xmath4 and @xmath8 are i.i.d .  with mean @xmath103 .",
    "then with probability 1 , @xmath104    the lemma follows immediately from the definition ( [ xdef ] ) , since the random walk whose increment at step @xmath23 is @xmath105 is either recurrent ( if @xmath106 ) or escapes to @xmath107 with probability 1 ( if @xmath108 ) ; in either case it attains arbitrarily high values .",
    "if the @xmath87 and @xmath88 take integer values , then it is natural to talk in terms of `` number of customers '' arriving , or departing , or in the queue , and so on .",
    "however we will also consider cases where the values are more general , in which case one could talk of `` amount of work '' rather than `` number of customers '' .",
    "we will now define a _ multi - class _ batch queue .",
    "the system can now contain different types of customers ( or work ) with different priorities .",
    "when service occurs at the queue , it is first available to first - class customers .",
    "if there is more service available than there are first - class customers present in the queue , the remaining service ( unused by the first - class customers ) is then offered to customers of lower class , starting with second - class customers , then third - class and so on .",
    "for example , suppose that at the start of time - slot @xmath9 , there are 7 customers in the queue , of whom 3 are first - class , 1 is third - class and 3 are fourth - class .",
    "suppose that 5 units of service are available at time @xmath9 .",
    "then the departures at time @xmath9 will be 3 first - class customers , 1 third - class customer and 1 fourth - class customer , leaving 2 fourth - class customers remaining in the queue .",
    "let @xmath22 be the total number of classes .",
    "we will have a collection of arrival processes @xmath109 , where @xmath110 is the number of @xmath23th - class customers arriving at time @xmath9 .",
    "we will also denote @xmath111 , for @xmath112 .",
    "let @xmath17 be the service process of the queue .",
    "similarly we will write @xmath113 for the number of @xmath23th - class customers departing at time @xmath9 , and @xmath114 for the number of @xmath23th - class customers present in the queue at the beginning of time - slot @xmath9 .",
    "write also @xmath115 and @xmath116 .",
    "there are two natural ways to construct the multi - class queue ( which are equivalent ) .",
    "one way would be to look at the queueing process of @xmath23th - class customers for each @xmath23 .",
    "this is a queue with arrival process @xmath117 and service process @xmath118 ; the services available to @xmath23th - class customers are those that have not been used by any higher - priority customer .",
    "alternatively , we will consider , for each @xmath23 , the queueing process of customers of classes @xmath119 combined .",
    "this is a queue with arrival process @xmath120 and service process @xmath17 .",
    "so in particular we define @xmath121    this second description turns out to be more useful since it describes the @xmath22-class queue as a coupling of @xmath22 single - class queues , each with the same service process .",
    "once we come to consider interchangeability of queues , the fact that we are working with a common service process becomes crucial .",
    "[ bergeomqueue ] we define a _ bernoulli - geometric distribution _ , with parameters @xmath122 and @xmath123 .",
    "a random variable with this distribution has the distribution of the product of two independent random variables , one with @xmath124 distribution and the other with @xmath125 distribution .",
    "that is , @xmath126 if @xmath127 we have @xmath128 .",
    "we will consider a queue where @xmath87 is an i.i.d .  sequence with @xmath129 , and @xmath88 is an i.i.d .  sequence ( independent of @xmath87 ) with @xmath130 .",
    "( we will say that @xmath16 and @xmath17 are _ bernoulli - geometric processes _ ) .",
    "queues of this type are investigated in @xcite , in particular regarding their reversibility properties .",
    "for stability we will assume that @xmath131 , i.e.  that @xmath132 , and further we assume that @xmath133 where for @xmath134 $ ] we define @xmath135    when the arrival and service processes share a value of the parameter @xmath136 in this way , a version of burke s theorem holds . @xcite .",
    "we use an asterisk to denote the time reversal of a process , so that @xmath137 . the following result is included in theorem 4.1 of @xcite :    [ burkethm ] under the assumptions above , the departure process @xmath138 has the same law as the arrival process @xmath84 . moreover , the queue is reversible in the sense that @xmath139    note that for given @xmath140 , @xmath141 and @xmath4 , there is precisely one choice of the parameters @xmath122 and @xmath123 such that @xmath142 and @xmath143 .",
    "so for a bernoulli - geometric service process with given parameters @xmath140 and @xmath141 , theorem [ burkethm ] gives a one - parameter family of fixed - point arrival processes , indexed by the arrival intensity @xmath144 .    in the next section",
    "we see further that two service processes are interchangeable precisely when they fall within the same one - parameter family ( that is , when they share a value of the parameter @xmath136 ) .",
    "we consider two queues in tandem .",
    "suppose we are given an arrival process @xmath145 and service processes @xmath146 . from this we construct a system of two queues .",
    "the first queue has arrival process @xmath145 and service process @xmath52 .",
    "the second queue has service process @xmath53 and arrival process @xmath147 defined by @xmath148 .",
    "( the departure process from the first queue becomes the arrival process from the second queue ) .",
    "note that a departure from queue 1 at time @xmath9 becomes an arrival at queue 2 at the same time - slot @xmath9 ( and may indeed depart from queue 2 at time @xmath9 also ) .",
    "the following result says that two service processes , which fall within the same one - parameter family mentioned above , are _ interchangeable _ :    [ interchangethm ] suppose that the processes @xmath52 and @xmath149 are independent of each other and each are i.i.d . , with @xmath150 and @xmath151 .",
    "suppose further that condition ( [ 1param ] ) holds .",
    "then there is a coupling of @xmath152 with another pair of processes @xmath153 such that :    * @xmath154 ; * if @xmath16 is any arrival process , then @xmath155 where @xmath156 and @xmath157 .    note that in particular it follows that for any @xmath16 , the distributions of @xmath158 and @xmath159 are the same .",
    "the result gives something rather stronger ; namely a coupling of the two pairs of service processes such that , simultaneously for all arrival processes , the output of the system is the same for both pairs .",
    "recall that a multitype queue can be seen as a coupling of several queues , with different arrival processes but the same service process .",
    "because theorem [ interchangethm ] gives a coupling which works for all arrival processes simultaneously , we immediately have as a corollary an interchangeability result for multitype queues .",
    "[ multitypeinterchangethm ] suppose the conditions of theorem [ interchangethm ] hold , and let @xmath63 be a multitype arrival process",
    ". then @xmath160 .",
    "in this section we will define a series of distributions of multi - class processes , denoted by @xmath161 .",
    "@xmath161 will be the distribution of an @xmath22-type process , with intensity of @xmath162th - class customers equal to @xmath163 .",
    "we will show that it is a fixed point arrival process for a @xmath164 service process , for all @xmath140 and @xmath141 such that @xmath165 and @xmath166 ( where the function @xmath136 is defined at ( [ cdef ] ) ) .",
    "when @xmath136 and @xmath167 are fixed , we may abbreviate and write simply @xmath50 .",
    "the distributions are defined recursively , using @xmath38 to construct @xmath50 .",
    "@xmath168 is the distribution of a 1-type process ; simply a @xmath169 process where @xmath122 and @xmath123 are chosen so that @xmath170 and @xmath171 .",
    "suppose we have constructed @xmath38 .",
    "now @xmath50 is constructed as follows .",
    "we consider a queue whose service process is @xmath172 , where @xmath173 and @xmath174 are chosen so that the total service intensity @xmath175 is equal to @xmath176 , and so that @xmath177 .",
    "( as observed in section [ bergeom ] , there is a unique such choice ) .",
    "the arrival process to the queue has distribution @xmath38 ( and is independent of the service process ) .",
    "this leads to an @xmath37-type departure process . we will extend the departure process to an @xmath22-type process by replacing the unused service in the queue by customers of type @xmath22",
    "let @xmath50 be the distribution of the @xmath22-type process obtained in this way .",
    "note that a consequence of the construction and of the fixed point result is that the restriction of a process with distribution @xmath50 to its first @xmath6 types gives a process with distribution @xmath38 .",
    "[ fixedpointtheorem ] let @xmath17 be a @xmath178 service process , with @xmath179 and @xmath166 .",
    "then for all @xmath167 with @xmath180 , the distribution @xmath161 is a fixed point for the process @xmath17 .",
    "that is , suppose @xmath63 is an @xmath22-type arrival process with distribution @xmath161 and is independent of @xmath17 . if @xmath181 is the @xmath22-type departure process , then @xmath182 .",
    "_ proof _ : the case @xmath183 is the version of burke s theorem given in theorem [ burkethm ] above .",
    "the arrival process is a one - type @xmath169 process and ( [ 1param ] ) holds , so indeed the departure process has the same law as the arrival process .",
    "now let @xmath184 and suppose that the result holds as claimed for @xmath38 .",
    "we wish to establish the result for @xmath50 .",
    "we will use the interchangeability result in theorem [ multitypeinterchangethm ] .",
    "we consider two independent service processes @xmath185 and @xmath186 , whch are bernoulli - geometric processes with parameters @xmath187 and @xmath188 respectively .",
    "we choose the parameters such that :    * @xmath189 and @xmath190 ; * @xmath191 and @xmath177",
    ".    we will consider an @xmath22-type arrival process @xmath63 distributed according to @xmath50 .",
    "we consider the effect of feeding this arrival process into two tandem systems , comprising the service processes @xmath185 and @xmath186 in their two possible orders .",
    "theorem [ multitypeinterchangethm ] tells us that @xmath192 and @xmath193 have the same distribution . to make use of this result we first need two simple properties .",
    "the first concerns projections of multi - type processes onto processes with fewer types , and the second concerns the behaviour of a queue which is saturated ( i.e.  whose service rate is only just sufficient to serve all the arriving customers ) .    _ claim 1 : _",
    "suppose @xmath63 has distribution @xmath50 , and let @xmath194 be the distribution of @xmath195 .",
    "then the restrictions of @xmath50 and @xmath194 to the first @xmath6 coordinates have the same distribution , and the combined process of all @xmath22 types under @xmath194 has the same distribution as @xmath186 .    _",
    "proof of claim 1 : _ restricting @xmath50 to its first @xmath6 coordinates gives the distribution @xmath38 . since @xmath38 is an @xmath37-type fixed point for the service process @xmath196 , the first @xmath6 types under @xmath194 do indeed have distribution @xmath38 also .",
    "finally , from the defintion of @xmath50 , the combined process of all @xmath22 types under @xmath50 is a @xmath172 process .",
    "the service process @xmath196 is a @xmath197 process . by assumption @xmath198 . so condition ( [ 1param ] ) is satisfied for the queue , and we can apply the 1-type fixed point result in theorem [ burkethm ] to show that the distribution of the combined process of all @xmath22 types in the departure process has the same distribution as the combined process of all @xmath22 types in the arrival process , namely @xmath186 .",
    "this completes the argument for claim 1 .",
    "_ claim 2 : _",
    "suppose @xmath63 , restricted to its first @xmath6 coordinates , has distribution @xmath38 .",
    "suppose also that the combined process of all @xmath22 types of arrival in @xmath63 is an i.i.d .",
    "process with intensity @xmath176",
    ". then @xmath199 has distribution @xmath50 .",
    "_ proof of claim 2 : _ recall that @xmath50 is the distribution obtained by passing an @xmath37-type arrival process with distribution @xmath38 through a queue with service process @xmath186 , and putting customers of type @xmath22 in place of all unused service .",
    "the first @xmath6 components of @xmath63 indeed have distribution @xmath38 .",
    "certainly the @xmath22th component of the departure process is a subset of the unused service from the @xmath6 first types . to show that the departure process has distribution @xmath50",
    ", it remains to show that all the service unused by the first @xmath6 types is used by customers of type @xmath22 ; that is , that if we look at all @xmath22 types combined , then there is no unused service .",
    "the arrival process of all customers combined is an i.i.d .",
    "process with rate @xmath176 ; the same is true of the service process , and the arrival and service processes are independent . hence by lemma [ saturationlemma ] , there is no unused service in the queue as desired .",
    "so indeed the output process has distribution @xmath50 , and we have established claim 2 as required .",
    "now we put together claims 1 and 2 to complete the proof .",
    "we consider the two possible orderings of the service processes @xmath185 and @xmath186 . the two systems that arise can be illustrated as follows : @xmath200{$g_m$ } \\longrightarrow \\boxed{s_{\\lambda_1+\\dots+\\lambda_m } } \\longrightarrow{h_m}\\\\ f_m\\longrightarrow\\boxed{s_{\\lambda_1+\\dots+\\lambda_m } } & \\longrightarrow \\makebox[1.5em]{$j_m$ } \\longrightarrow \\boxed{\\hspace{6.09mm}s_{\\mu}\\hspace{6.09 mm } } \\longrightarrow{k_m}\\end{aligned}\\ ] ]    by claim 1 , @xmath194 satisfies the conclusion of claim 1 , which is also the assumption on the arrival process of claim 2 . then by claim 2 , @xmath201 .",
    "certainly @xmath50 itself also satisfies the assumption of claim 2 , so by claim 2 , @xmath202 .",
    "theorem [ interchangethm ] says that @xmath203 .",
    "then the second box of the second line down shows us that if we pass @xmath204 through @xmath185 we get @xmath205 .",
    ". so indeed @xmath50 is a fixed point for @xmath185 as desired.@xmath207",
    "in this section we will prove theorem [ interchangethm ] .",
    "we first need two simple lemmas about queues in tandem .",
    "[ trunclemma ] consider a system of two queues in tandem with arrival process @xmath16 and service processes @xmath52 and @xmath53 , all taking integer values . for @xmath208 , define @xmath209 to be the arrival process truncated before time @xmath210 .",
    "that is , @xmath211 define @xmath212 and @xmath213 . for any @xmath9 , if @xmath214 is large enough then @xmath215 .    _",
    "proof : _ we compare the original system and the system with the arrival process before time @xmath210 .",
    "write @xmath216 and @xmath217 for the departure processes from the first and second queues in the original system , and similarly @xmath218 , @xmath219 for the processes in the system with the truncated arrival process .",
    "take any @xmath86 . from the definitions in section [ model",
    "] , we have @xmath220\\right),\\\\ d_1^{(s)}(n)&=\\min\\left ( s_1(n),a(n)+\\sup_{-s\\leq u\\leq n}\\sum_{r = u}^{n-1}\\left[a(r)-s_1(r)\\right]\\right).\\end{aligned}\\ ] ] certainly @xmath221 is increasing in @xmath214 , and @xmath222 for all @xmath214 .",
    "we first observe that @xmath223 for all large enough @xmath214 .",
    "suppose the sup in the first line is finite .",
    "then ( since the variables all take integer values ) it is attained for some @xmath224 , and we have @xmath225 for all @xmath226 .",
    "if instead the sup in the first line is infinite , then by taking @xmath214 large we may make the sup in the second line as large as desired ; if @xmath214 is large enough that the second term in the min exceeds @xmath227 , then we have @xmath225 , as required .",
    "now we have the corresponding expressions for the departure process from the second queue ( whose arrival process is @xmath216 and whose service process is @xmath53 ) : @xmath228\\right),\\\\ d_2^{(s)}(n)&=\\min\\left ( s_2(n),d_1^{(s)}(n)+\\sup_{u\\leq n}\\sum_{r = u}^{n-1}\\left[d_1^{(s)}(r)-s_2(r)\\right]\\right).\\end{aligned}\\ ] ] since @xmath221 is increasing in @xmath214 and bounded above by @xmath229 , we also have that @xmath230 is increasing in @xmath214 and bounded above by @xmath231 .",
    "suppose that the sup in the first line is finite .",
    "then as before it is attained at some @xmath232 .",
    "now if we take @xmath214 large enough that @xmath233 for all @xmath23 with @xmath234 , then we see from the second line that indeed @xmath235 , and hence in fact @xmath236 as required .",
    "a similar argument applies if the sup in the first line is infinite ; by taking @xmath214 large enough , we can make the sup in the second line as large as desired.@xmath207    [ queuereplemma ] consider a tandem of two queues , with arrival process @xmath16 and service processes @xmath52 and @xmath53 .",
    "suppose that @xmath237 for all @xmath238 .",
    "let @xmath217 be the departure process from the second queue .",
    "then for all @xmath239 , @xmath240    _ proof : _ an equivalent result for a related queueing model was given in @xcite , and similar properties appear in many places in the literature .",
    "formula [ queuerepformula ] is essentially a special case of equation ( 10 ) of @xcite .",
    "let @xmath216 and @xmath217 be the departure processes from the first and second queues , and @xmath241 and @xmath242 be the queue - length processes at the first and second queues .    since @xmath243 for all negative @xmath9 , the queues start empty at time 0 : @xmath244 .",
    "so the total number of departures from the system ( that is , from the second queue ) before time @xmath245 is given by the total number of arrivals during that time , minus the queue - lengths at time @xmath245 : @xmath246    similarly , considering the evolution of the first queue alone between times @xmath247 and @xmath245 , we have that for any @xmath248 , @xmath249    now @xmath242 is the queue - length of a queue with arrivals @xmath216 and services @xmath53 .",
    "so from the definition ( [ xdef ] ) , we have @xmath250\\\\ & = x_1(t)+\\sup_{u_2\\leq t } \\left\\ { \\sum_{r = u_2}^{t-1}a(r )   - x_1(t ) + x_1(u )   -\\sum_{r = u_2}^{t-1}s_2(r)\\right\\}\\\\ & = \\sup_{u_2\\leq t } \\left\\ { x_1(u)+\\sum_{r = u_2}^{t-1 } \\left [ a(r)-s_2(r ) \\right ] \\right\\}\\\\ & = \\sup_{u_2\\leq t } \\left\\ { \\sup_{u_1\\leq u_2 } \\sum_{r = u_1}^{u_2 - 1 } \\left[a(r)-s_1(r)\\right]+ \\sum_{r = u_2}^{t-1}\\left[a(r)-s_2(r)\\right]\\right\\}\\\\ & = \\sup_{u_1\\leq u_2\\leq t}\\left\\ { \\sum_{r = u_1}^{t-1}a(r )   -\\sum_{r = u_1}^{u_2 - 1 } s_1(r ) -\\sum_{r = u_2}^{t-1 } s_2(r)\\right\\}.\\end{aligned}\\ ] ] since @xmath243 for negative @xmath9 , the sup will be attained for some @xmath251 . then using ( [ dsum ] )",
    "gives ( [ queuerepformula ] ) as desired.@xmath207    now we proceed to prove theorem [ interchangethm ] .",
    "to do this , we need to construct @xmath252 and @xmath57 on the same probability space , in such a way that :    * @xmath253 * for all @xmath16 , @xmath254 .",
    "we assume that @xmath53 has higher intensity than @xmath52 .",
    "( if not , then swap them around .",
    "if the intensity is the same , then the assumptions ensure that they have the same distribution . )",
    "the construction is as follows .",
    "we think of a queue with arrival process @xmath52 and service process @xmath53",
    ". we can decompose @xmath53 into @xmath255 and @xmath256  that is , @xmath257 .",
    "we let @xmath258 .",
    "so we have obtained @xmath57 from @xmath149 by removing the unused service process . by theorem [ burkethm ]",
    ", we have that @xmath259 .",
    "( recall that the asterisk denotes the reverse of a process ) .",
    "knowing this , we can extend the probability space to include a random variable @xmath56 , with its time - reversal @xmath260 , such that @xmath261 .",
    "in particular this implies that @xmath262 .",
    "but the distribution of @xmath263 is invariant under time reversal , so this definition gives us ( i ) above as desired .",
    "( note that since @xmath261 , we have in particular that @xmath264 , or equivalently that @xmath265 .",
    "so we can think of @xmath56 as being obtained from @xmath52 by adding an unused service process , for a queue operating in reverse time ) .",
    "now we need to verify ( ii ) above .",
    "using lemma [ trunclemma ] , it will be sufficient to verify it for every arrival process which is 0 up to some finite time .",
    "without loss of generality , suppose that @xmath237 for all @xmath238 .",
    "let @xmath266 . from lemma [ queuereplemma ]",
    ", we have the following representation of the total number of departures from the tandem of two queues from time 0 up to time @xmath267 : @xmath268 it will be enough to show that for any @xmath16 , this quantity is unchanged if we replace @xmath71 by @xmath153 . for this , in turn it s enough that for all @xmath214 and @xmath245 , the quantity @xmath269 is unchanged if we replace @xmath71 by @xmath270 .",
    "we consider the queue with arrival process @xmath52 and service process @xmath53 , along with its queue - length , unused service and departure processes @xmath91 , @xmath19 and @xmath18 which are functions of @xmath52 and @xmath53 .",
    "note that @xmath271 precisely if @xmath272 .",
    "first we show that the quantity we are interested in is unchanged if we replace @xmath71 by @xmath273 ; that is : @xmath274    if there is no unused service between times 0 and @xmath267 , then @xmath53 and @xmath57 agree on the whole interval and the equality is obvious .",
    "otherwise , let @xmath9 be the latest time in @xmath275 for which there is unused service , i.e.  for which @xmath276 , or equivalently that @xmath271 where @xmath277 . in particular there are no more arrivals than departures in the interval @xmath278 ( otherwise there would still be customers in the queue after time @xmath9 , and hence there could not have been unused service at time @xmath9 ) .",
    "that is , @xmath279 .",
    "this implies that we can take @xmath280 in minimising the rhs of ( [ compare ] ) .",
    "then consider using the same @xmath247 on the lhs as on the rhs . since @xmath280 and @xmath9 was the last moment of unused service ,",
    "the processes @xmath53 and @xmath57 agree after time @xmath9 .",
    "so in fact the lhs is at least as small as the rhs .",
    "but since @xmath281 it is also clear that the lhs is no smaller than the rhs .",
    "so in fact the two are the same .",
    "now we want to show that we can further replace @xmath52 by @xmath56 ; that is , @xmath282 this is in fact precisely the same relation as ( [ compare ] ) , but now for the queue with arrival process @xmath283 and service process @xmath260 .",
    "so an exactly analogous argument can be applied .",
    "this completes the proof of ( ii ) and hence of theorem [ interchangethm ] .",
    "in this section we point out various interesting cases that can be obtained by taking particular values or appropriate limits in the general model considered up to now .",
    "our general model is of a service process in discrete time , whose batches are i.i.d .  with @xmath178 distribution .",
    "such a process has service intensity @xmath284 .",
    "this model has two parameters . for each choice",
    "@xmath285 there is a one - dimensional family of service process which are interchangeable with it ; namely an @xmath286-process is interchangeable with a @xmath285-process whenever @xmath287 .",
    "this relation partitions the parameter space into equivalence classes ( and each class contains precisely one set of parameters for each service intensity ) .",
    "suppose we are given service parameters @xmath285 with service intensity @xmath288 , and also @xmath12 such that @xmath25 .",
    "then there is precisely one @xmath22-type fixed point arrival process with intensities @xmath26 of @xmath23th - class customers for @xmath24 .",
    "for example , the two - type fixed point with intensities @xmath29 and @xmath30 is obtained by taking the departure and unused service processes from a queue with arrival process @xmath16 and service process @xmath17 where @xmath16 and @xmath17 are chosen so that @xmath16 has intensity @xmath29 , @xmath17 has intensity @xmath32 , and both @xmath16 and @xmath17 are interchangeable with the @xmath285-process .",
    "( as explained in the last paragraph , this uniquely determines @xmath16 and @xmath17 ) .",
    "this framework extends to various particular cases which we describe below . in some cases ,",
    "the model has only one parameter , and any pair of processes in the class considered are interchangeable .",
    "if we take @xmath289 , the service process is a `` bernoulli process '' .",
    "the batches are i.i.d .",
    ", each equal to 0 with probability @xmath290 and 1 with probability @xmath140 , so that @xmath291 .",
    "hence we have a one - parameter model .",
    "this is the discrete - time equivalent of the @xmath7 server described in section [ dotm1section ] .",
    "a version of burke s theorem for such systems was proved by hsu and burke in @xcite ; any bernoulli process with lower intensity @xmath292 is a one - type fixed point arrival process .",
    "any two such bernoulli processes are interchangeable . for any @xmath22 and @xmath293",
    ", there is an arrival process @xmath47 with intensities @xmath39 and which is a fixed for any such @xmath2 server whenever @xmath14 .",
    "the multi - type fixed points were constructed in @xcite , and they can also be seen as stationary distributions for multi - type versions of the tasep ( totally asymmetric simple exclusion process ) .",
    "if we take @xmath294 , then the service batches are i.i.d",
    ".  geometric distributions .",
    "( a similar case arises for @xmath295 , except that the geometric distribution obtained starts from 0 rather than from 1 ) .",
    "again we have a one - parameter model , and any two such geometric processes are interchangeable . a related result ( for a particular form of the arrival process )",
    "was given by draief , oconnell and mairesse in @xcite .",
    "a version of burke s theorem had been given by bedekar and azizoglu in @xcite .",
    "the multi - type fixed points in this case are related to stationary distributions for a multi - type version of the totally asymmetric zero - range process @xcite .",
    "now take the limit @xmath296 , putting @xmath297 and rescaling work by a factor @xmath298 . in this way",
    "we can obtain the case where the batches are i.i.d .",
    "exponential with mean @xmath247 .",
    "again , any two such exponential processes are interchangeable .",
    "suppose we let @xmath299 , take @xmath300 and rescale time by a factor @xmath301",
    ".    then we have batches which are geometric with parameter @xmath141 , which occur at times of a poisson process of rate @xmath302 .",
    "now we have a two - parameter distribution , and for each pair of parameters @xmath303 there is a one - parameter family of processes , one for each service intensity , which are interchangeable with it .",
    "namely , processes of this kind with parameters @xmath304 and @xmath305 are interchangeable if @xmath306    if we further take @xmath296 , putting @xmath297 and rescaling work by a factor @xmath298 , then we obtain the case where the batches are exponential with mean @xmath247 ( again occurring at the times of a poisson process of rate @xmath302 ) .",
    "two such `` poisson - exponential '' processes with parameters @xmath307 and @xmath308 are interchangeable if @xmath309=@xmath310 .    if on the other hand we take @xmath311 , the batches all have size 1 and we obtain the familiar @xmath7 queueing server which we described in detail in section [ dotm1section ] .",
    "queues in continuous time ( as in the previous example ) can be represented using a notation analogous to that introduced for discrete - time queues in section [ model ] .",
    "let @xmath312 be a service process and @xmath313 be an arrival process .",
    "we interpret @xmath314 as the amount of service offered in the interval @xmath315 $ ] , and similarly @xmath316 as the amount of work arriving in @xmath315 $ ] .    adding a constant to either of the processes @xmath16 and @xmath17 makes no difference",
    ", so we may take for example @xmath317 .",
    "we define processes @xmath318 , @xmath319 and @xmath320 , as functions of the processes @xmath321 and @xmath322 , by @xmath323    now @xmath324 is the amount of work departing in @xmath315 $ ] , @xmath325 is the amount of unused service in @xmath315 $ ] , and @xmath318 is the queue - length at time @xmath245 .    note that under these definitions we have @xmath326 ( again , this normalization is not important ) .",
    "a frequently studied example is that of the _",
    "brownian queue_. let @xmath321 be a two - sided brownian motion with drift @xmath4 and variance 1 , and let @xmath322 be a two - sided brownian motion with drift @xmath1 and variance 1 , where @xmath327 and @xmath3 .",
    "this model arises naturally as the scaling limit of queues in the so - called `` heavy traffic '' regime @xcite , @xcite .",
    "for example , for @xmath328 consider a discrete time queue whose arrival process @xmath329 is a bernoulli process with rate @xmath330 and whose service process @xmath331 is a bernoulli process with rate @xmath332 .",
    "we recentre and rescale by defining , for @xmath333 , @xmath334 then as @xmath335 , the distribution of the processes @xmath336 and @xmath337 converges to that of @xmath321 and @xmath322 above .",
    "a version of burke s theorem holds for such a brownian queue : namely that the processes @xmath319 and @xmath321 have the same distribution . this was shown by harrison and williams in @xcite ( see also @xcite in particular , where the result is generalized in a number of ways ) .",
    "the process @xmath318 has the law of a stationary reflected brownian motion with drift @xmath338 , and its stationary distribution is exponential with rate @xmath339 .",
    "the process @xmath320 is the local - time process of @xmath318 at 0 .",
    "note that @xmath19 is non - decreasing , and grows at average rate @xmath339 , but is constant except on a set of measure @xmath340 ( namely , the set of times when @xmath341 ) .",
    "thus we may say that a brownian queueing server ( with drift @xmath1 ) has brownian motions of drift @xmath3 as fixed point arrival processes . again",
    "this can be extended to multi - type arrival processes .",
    "given a service process @xmath322 and a two - type arrival process @xmath342 , the two - type departure process @xmath343 is defined in a natural way by @xmath344    suppose we wish to construct a two - type fixed point for a brownian service process of drift @xmath1 , which has drifts @xmath29 and @xmath30 where @xmath345 .",
    "to do this , consider a brownian queue whose arrival process is a brownian motion with drift @xmath29 , and whose service process is a brownian motion with drift @xmath30 .",
    "the process @xmath31 of departures and unused service from this queue is a two - type fixed point of the required type .    in this example",
    "we can see an extreme form of the `` clustering of lower - class customers '' already observed in the discrete case . here",
    "the second - class work , represented by the local - time process @xmath19 , is concentrated on a set of times of measure 0 .",
    "note also the difference in nature between the process @xmath18 of first - class work ( which is non - monotonic , and in fact has unbounded variation ) and the process @xmath19 of second - class work ( which is non - decreasing ) .",
    "fixed points with larger numbers of classes can be constructed recursively in the same way as in the discrete case .",
    "the subprocesses of @xmath22th - class work in these fixed points are non - decreasing and singular , for each @xmath346 .",
    "one can also obtain an interchangeability result ; two brownian service processes , with different drifts but with the same variance , are interchangeable .",
    "arrival processes obtained as the local time of a reflecting diffusion have been considered before in various contexts , for example in @xcite and @xcite .",
    "these models were also motivated in part by the modelling of a second - class departure process as a local - time process . however ,",
    "the models analysed are somewhat different ; the service processes are deterministic rather than brownian ( @xmath347 ) and the local - time arrival process has access to all the service capacity ( rather than sharing the queue with a higher - priority stream ) .",
    "there is a close analogy between fixed - point arrival processes for queues and stationary distributions for interacting particle systems .",
    "consider for example the tasep ( totally asymmetric simple exclusion process ) .",
    "in the one - type version of the process , each site of @xmath348 contains either a particle or a hole .",
    "the state - space of the process can be written as @xmath349 , where @xmath62 denotes a particle and @xmath350 denotes a hole .",
    "the dynamics of the process are as follows : each particle tries to jump to its left as a poisson process of rate 1 , and a jump succeeds if the site to the left of the particle is empty ( in which case the values @xmath62 and @xmath350 are exchanged between the two sites ) .",
    "one can also consider a multi - type tasep .",
    "the process with @xmath22 types has state space @xmath351 .",
    "as before , each particle tries to jump to its left as a poisson process of rate 1 , and a jump by a particle of type @xmath23 succeeds if the site to its left is occupied by a particle with lower priority ( higher - numbered class ) or is empty ( in which case the values at the two sites are interchanged as before ) . as in the case of multi - type queues ,",
    "this process can be seen in a natural way as a coupling of @xmath22 single - type taseps .",
    "stationary distributions for taseps with two types of particle were constructed by derrida , janowsky , lebowitz and speer @xcite , and related construction were also given in @xcite , @xcite and @xcite . in @xcite ,",
    "this construction was extended to multi - type processes , and made particularly explicit using a construction using queues in tandem which corresponds to the construction of multi - type fixed points for queues above .",
    "given @xmath12 with @xmath293 , consider the fixed - point arrival process distribution @xmath47 for the discrete - time @xmath7 queue as described in section [ discretedotm1section ] .",
    "now regard this distribution as a distribution over configurations of the @xmath22-type tasep ; an arrival of type @xmath23 at time @xmath9 corresponds to a particle of type @xmath23 at site @xmath9 , and an empty arrival slot at time @xmath9 corresponds to a hole at site @xmath9 .",
    "the result of @xcite is that @xmath47 is a stationary distribution for the @xmath22-type tasep ( indeed , it is the unique ergodic stationary distribution which has intensities @xmath26 ) .",
    "note that _ time _ in the context of the queue corresponds to _ space _ in the context of the particle system .",
    "the analogy between queues and particle systems can be made even clearer by considering particle systems evolving in discrete time rather than continuous time .",
    "the same distributions @xmath50 are also stationary for certain versions of the multi - type tasep in discrete time @xcite .",
    "( here many particles may try to jump at the same time - step , and there are various possible natural conventions for the order in which the jump attempts are to be processed ) . now a queueing server , which uses a service process to transform an arrival process into a departure process , can be seen as analogous to a set of jump attempts at particular sites at a given time - step of the particle system , which transforms the particle configuration before that time - step into the new particle configuration after that time - step .",
    "successive updates in the particle system correspond to consecutive queueing servers in a system of queues in tandem .",
    "the fixed - point property for the distributions @xmath50 can be derived from the result for the particle system ( as was done in @xcite ) . to see this ,",
    "note that if we take an @xmath22-class tasep and treat particles of class @xmath22 as holes , then the resulting restriction of the process to the first @xmath6 types is an @xmath37-class tasep . hence restricting the stationary distribution @xmath50 of the @xmath22-class system to its first @xmath6 types",
    "must give a stationary distribution of the @xmath37-class system , namely @xmath38 .",
    "that is , @xmath38 can be obtained from @xmath50 by restricting to the first @xmath6 types . but",
    "also , the first @xmath6 types of @xmath50 are _ defined _ as the departure process from a queue whose arrival process is @xmath38 ( the remaining @xmath22th class is the unused service process ) .",
    "so indeed @xmath38 is also the distribution of the departure process from the queue ; this is the fixed - point result we obtained earlier .",
    "however , such a proof via the particle system is rather indirect and perhaps less natural than the approach using interchangeability above .",
    "in fact , in some cases , results previously obtained for stationary distributions of particle systems can themselves be derived from the fixed - point results for queues .",
    "for example , the stationary distributions for `` hammersley s process '' @xcite correspond to the fixed points for the @xmath352 queue in continuous time , described in section [ dotm1section ] @xcite .",
    "the dynamics of hammersley s process can be obtained by taking appropriate limits starting from a @xmath0 queueing server in discrete time ( first one lets the rates of arrival and service approach 1 together in an appropriate way ; after rescaling space , the particles in a discrete - time version hammersley s process correspond to the gaps in the customer processes in the queue .",
    "then the more familiar continuous - time version of hammersley s proces can be obtained by letting the rate of jumps in the discrete version go to 0 and rescaling time ) . in this way the result on stationary distributions for hammersley s process can be seen as a consequence of the fixed - point results given here .",
    "( however , we do nt know how to use similar methods to derive the results for the tasep , for example ) .",
    "by considering the limit as the number of classes goes to infinity , and the intensity of each class goes to zero , one can arrive at models where the classes are indexed by real numbers .",
    "this could be done in the general case above , but for simplicity we discuss it in the case of a @xmath7 server ( where the service process is a bernoulli process ) .",
    "we will consider an arrival process in which at most one customer arrives at each time slot , and a customer arriving at time @xmath9 has a real - valued label . as before , lower - labelled customers have priority over higher - labelled customers .    by taking appropriate limits in the results above ,",
    "one can obtain the following result :    [ continuousprop ] there exists a unique distribution over sequences @xmath353^{\\mathbb{z}}$ ] with the following properties :    * the distribution is stationary and ergodic .",
    "* @xmath354 $ ] .",
    "* let @xmath355 .",
    "define an arrival process as follows : if @xmath356 , then a customer with label @xmath357 arrives at time @xmath9 , while if @xmath358 , then no customer arrives at time @xmath9 .",
    "this arrival process is a fixed point for the @xmath2 queue for all @xmath20 .",
    "property ( ii ) is included just as a normalization ( since the mechanics of the queue are unchanged if the labels of all the customers are transformed by an increasing function ) .",
    "then in property ( iii ) , the condition @xmath20 ensures that the queue is not saturated .",
    "the distribution of @xmath359 is also a stationary distribution for the tasep .",
    "see @xcite for an investigation of this process , including in particular an interpretation as the `` speed process '' for a multi - type tasep started out of equilibrium .",
    "one interesting property of the process is a manifestation of the `` clustering '' effect described above .",
    "although @xmath357 has a continuous distribution for each @xmath9 , nonetheless one has that for any @xmath9 , @xmath360 .",
    "( for example , @xmath361 ) .",
    "in fact , with probability one there exist infinitely many @xmath9 such that @xmath362 .",
    "hence clustering occurs in the following sense : although any class - label has probability 0 of being seen a priori , if one sees the label at any particular time the same label has high probability of being seen nearby , and will be seen infinitely often in the process .",
    "jbm thanks pablo ferrari for many valuable conversations related to this work , and mike harrison and ilkka norros for discussions about the results on brownian queues .",
    "harrison , j.  m. , ( 1985 ) _ brownian motion and stochastic flow systems_. wiley series in probability and mathematical statistics : probability and mathematical statistics .",
    "john wiley & sons inc .",
    ", new york .",
    "williams , r.  j. , ( 1996 ) on the approximation of queueing networks in heavy traffic . in f.",
    "p. kelly , s.  zachary and i.  ziedins , eds . , _",
    "stochastic networks : theory and applications _ , pages 3556 .",
    "clarendon press , oxford ."
  ],
  "abstract_text": [
    "<S> burke s theorem can be seen as a fixed - point result for an exponential single - server queue ; when the arrival process is poisson , the departure process has the same distribution as the arrival process . </S>",
    "<S> we consider extensions of this result to multi - type queues , in which different types of customer have different levels of priority . </S>",
    "<S> we work with a model of a queueing server which includes discrete - time and continuous - time @xmath0 queues as well as queues with exponential or geometric service batches occurring in discrete time or at points of a poisson process . </S>",
    "<S> the fixed - point results are proved using _ </S>",
    "<S> interchangeability _ </S>",
    "<S> properties for queues in tandem , which have previously been established for one - type @xmath0 systems . </S>",
    "<S> some of the fixed - point results have previously been derived as a consequence of the construction of stationary distributions for multi - type interacting particle systems , and we explain the links between the two frameworks . </S>",
    "<S> the fixed points have interesting `` clustering '' properties for lower - priority customers . </S>",
    "<S> an extreme case is an example of a brownian queue , in which lower - priority work only occurs at a set of times of measure 0 ( and corresponds to a local time process for the queue - length process of higher priority work ) . </S>"
  ]
}
{
  "article_text": [
    "spam  @xcite , officially called unsolicited bulk email ( ube ) or unsolicited commercial email ( uce ) , is rapidly becoming a major problem on the internet . at the end of 2002 , as much as 40% of all email traffic consisted of spam@xmath0 , and recent reports estimate that this amount has risen to more than 50% .    to handle this increasing load of junk email  @xcite , several spam filtering techniques exist to automatically classify incoming email as spam , and to reject or discard email classified as such  @xcite . in this paper",
    "we investigate the effectiveness of these spam filtering techniques and technologies .    for users ,",
    "receiving spam is quite a nuisance and costs money . in a recent study of the european community  @xcite",
    ", it was estimated that the cost for receiving spam for an average internet user is in the order of 30 euro a year .",
    "but the costs of spam goes well beyond the total costs of all recipients .",
    "each isp pays for each email message received , because it must be stored in a mail box and it takes up a certain amount of bandwidth .",
    "the total cost has been estimated in the order of 10 billion euro a year  @xcite .",
    "a second problem with spam is the impact it has on the internet backbone .",
    "spam sent over the internet backbone causes delays for all internet users .",
    "furthermore , because most spammers use mailing lists that have outdated addresses on them , many messages are rejected ( `` bounced '' ) .",
    "this mandates the operator of the intended destination to send a return response , wasting even more bandwidth  @xcite .",
    "bulk mailers use several different techniques to send their spam .",
    "often , bulk mailers misuse the smtp protocol or use badly configured mtas ( so - called open - relays ) to hide their tracks @xcite @xcite .",
    "we describe these techniques in detail in section  [ ssec - bulk ]",
    ".    there are at least three fundamentally different ways to counter spammers @xcite.first , bulk mailers can be prevented to send spam by blocking or limiting access to mail servers .",
    "another method is make spamming less profitable , for example by incurring a cost on every email message sent  @xcite .",
    "a third method aims to detect and remove all spam once it is sent by applying different types of filtering techniques that use the special characteristics of spam to recognise it  @xcite @xcite @xcite @xcite @xcite .",
    "these techniques are discussed in section  [ ssec - counter ] .",
    "our analysis of countermeasures against spam focuses on filtering techniques .",
    "we are interested in measuring the accuracy level of these filters in practice .",
    "some of the filtering techniques not only look at the content of each message , but also consider the email traffic at large ( e.g.,methods that try to detect duplicate mail messages , or checksum schemes that match incoming messages with a database of known spam messages ) . to faithfully analyse such spam filters",
    ", we built a simulator to generate realistic email traffic and test the filters with it . in section  [ sec - analysis ]",
    "we give a description of our analysis method .",
    "we have analysed the performance of the filters in two settings : while being used at the server level and while being used by the end user directly .",
    "while running at server level , the filter might use the information about connections from the server . on the other hand , while running at user level , the filter is able to be trained or customised as a function of user specific characteristics .",
    "moreover , we have measured the different behaviour of filters depending on the type of bulk mailer used to generate the spam .",
    "we refer to section  [ sec - analysis ] for details .    to summarise our results :",
    "we have found that filters based on genetic algorithms , perform best at isp level and nave bayesian filters perform best at user level .",
    "we discuss the results of our analysis on a per filter basis in section  [ sec - results ] .",
    "in this section we describe the most common techniques used by bulk mailers .",
    "we also describe current proposals for countering spam , with focus on filtering techniques .",
    "spammers use so - called bulk mailers to send spam .",
    "these bulk mailers are capable of sending huge volumes of email without going through a specific mail server or a particular isp .",
    "some bulk mailers are capable of sending approximately 250,000 messages an hour over a 28.8kb@xmath1s modem line  @xcite .",
    "this enormous amount of messages is attained by contacting more than one mail server at the same time and misusing the resources of the isps .",
    "the bulk mailers used by spammers have several features to hide their tracks .",
    "most bulk mailers do not use the mail server of their isp , but instead connect to the destination mail server directly or use a so - called open relay .",
    "this way , the spammer avoids to be detected by his isp .",
    "an open relay is a smtp or esmtp server that allows everyone to use that server to relay mail . to make the tracking even harder",
    "when an open relay is used , most bulk mailers add so - called bogus received headers to the spam message ( in front of the _ real _ received headers added by the smtp protocol ) . by adding these bogus headers they hope to redirect any tracking to a site in the fake header .",
    "bulk mailers also include features which try to outsmart spam filters .",
    "the most processor consuming feature is to personalise every message for a recipient .",
    "this personalisation of messages can be classified into two types . in the first type",
    ", the spammer only uses the victim s mail address as the recipients address instead of using the ` bcc : ` headers to send the message to recipients . in the second type",
    ", he also uses the name or mail address of the victim to personalise the body of the message .",
    "less processor consuming techniques include the randomisation of the ` subject : ` field and the ` from : ` address line .",
    "some bulk mailers also forge the message - id and/or do not send the ` to : ` header in the smtp session .",
    "another technique especially developed to confuse bayesian filters , is to add extraneous text in the body of a message .",
    "this text is usually a set of randomly selected words from a dictionary , or just some paragraphs from news or books .",
    "there are two fundamentally different methods to counter spam .",
    "the first method tries to prevent bulk mailers to send spam , e.g.,by incurring a cost on every email message sent , or by blocking or limiting access to mail servers for spammers .",
    "the second method aims to detect and remove all spam once it is sent , by applying different types of filtering techniques .",
    "the most direct way to prevent spam is to close all open relays on the internet , and to strengthen the smtp protocol to disallow bogus received headers and require sender authentication , to facilitate bulk mailer tracking .",
    "this forces bulk mailers to send spam through their own isp , but relies on these isps to block their accounts .",
    "more fundamentally , this approach goes against the open philosophy of the internet and poses yet another threat to privacy on the internet .",
    "moreover closing all open relays would not be sufficient , as spammers are now shifting to the use of open proxies to hide their tracks , or even use hacked computers .",
    "one interesting and perhaps more feasible approach proposed to stop junk email is by using economic based solutions .",
    "the principal attractiveness of spam is that sending large amounts of small email messages is relatively cheap compared to other direct marketing techniques .",
    "the idea behind such economic based methods is to make the sending of email more expensive , thereby making it less attractive to send huge amounts of mail .",
    "the two main categories of economic solutions are computing time based systems ( that force the spammer to spend considerable amounts of his computing resources to send a single spam message ) and money based systems ( that charge a small amount of money for every email sent ) .",
    "[ [ computing - time - based - systems ] ] computing time based systems + + + + + + + + + + + + + + + + + + + + + + + + + + + +    in computing time based economic solution , the sender of a message is required to compute a moderately expensive function .",
    "this function is called a _ pricing function _  @xcite @xcite .",
    "the idea is that for a legitimate sender it is not too expensive in computer time to send a message to a recipient , but for a spammer , who has to send many messages , it is .",
    "this expensive use of computer time makes it much harder for a spammer to send large volumes of mail within an acceptable time .",
    "the question whether such a system will work in practice is hard to answer .",
    "first of all , this feature has to be incorporated into the internet , and this may not be easy ( although , admittedly , it does not require changes to the smtp protocol and could simply be enforced by mail user agents ) .",
    "second , there is the problem of hardware backward compatibility .",
    "a user using an old computer must be able to send an email in a reasonable amount of time .",
    "this rules out the use of too costly pricing functions .",
    "but then for a spammer using modern hardware , the cost in time to send a message may become almost equal to zero .",
    "it seems impossible to find a pricing function that suits both needs ( although methods based on memory bandwidth limitations appear a little more promising  @xcite ) .    [ [ money - based - systems ] ] money based systems + + + + + + + + + + + + + + + + + + +    money based systems are based on channelised email systems where users require payment before reading message arriving on certain channels  @xcite .",
    "this payment can be in the form of electronic cash to automate the process .",
    "this approach would make it more costly to send junk - e - mail , which makes it less attractive .",
    "problems with money based systems include ( among others ) the adoption of the system by users , and the absence of a global electronic cash system .",
    "it is therefore hard , if not impossible , in practice to introduce a money based spam prevention system .",
    "filter based countermeasures against spam can be divided into two main categories : cooperative filtering and heuristic filtering .",
    "the main principle of the former is that there can be cooperation between spam originators and spam recipients .",
    "such a cooperative filtering system requires a network - wide implementation of , and adherence to , a set of standards for identifying spam .",
    "because most spammers try to hide to track such an implementation is not likely to appear , hence we will focus on heuristic filtering .",
    "heuristic filters work on the assumption that it is possible to distinguish between normal mail and spam by applying heuristic rules to a message .",
    "we can distinguish three types of heuristic rules : origin based filtering , filtering based on traffic analysis and content - based filtering .",
    "[ [ origin - based - filtering ] ] origin based filtering + + + + + + + + + + + + + + + + + + + + + +    origin based filtering happens before a message is fully received by the computer of the recipient .",
    "the most prominent method in this class uses the so - called blacklists ( e.g.,the blacklist from ordb.org ) .",
    "these blacklist can be used to refuse ip or tcp connections from spam originators , but also to refuse mail if the domain name given at the ` from : ` command is on the blacklist .",
    "this method can be circumvented by relaying mail through the smtp servers of legitimate originators that are not on the blacklist .",
    "another disadvantage is that this sites are frequently under denial of service attacks ( e.g.,the blacklist of osirusoft.com ) .",
    "a second approach is to configure the smtp server to perform a reverse dns lookup to find the ip - address associated with the domain name given at the ` mail from ` command .",
    "if this ip - address is not equal to the ip - address of the tcp - connection , the smtp server can refuse to handle the message .",
    "this method can also be circumvented by using relay hosts .",
    "whitelists are another origin based filter method .",
    "they contain the senders ( or domains ) from which incoming mail is automatically accepted for delivery .",
    "all other mail is refused by default . to enable legitimate senders to reach the recipient ,",
    "a whitelist based system will return a request for confirmation to the sender , who should reply to this message within a short period of time .",
    "when a whitelist is used it is almost certain that no spam will reach the inbox of the user .",
    "the disadvantage , however , is that a whitelist has a very high false positive rate , which may seriously confuse or irritate unknown but legitimate senders .",
    "moreover , bulk mailers increasingly match the from header in their mails to the domain of the recipient , using known ( and probably trusted ) senders in the same domain .",
    "[ [ filtering - based - on - traffic - analysis ] ] filtering based on traffic analysis + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    traffic analysis based filtering can be used at the mail server of the isp . here",
    "the log files of the smtp server can be used to detect anomalies in the normal traffic stream .",
    "anomalies that can appear and indicate the spam are anomalies in the connection time to the server , anomalies in the amount of mail coming from a certain host , the fact that a message is send to more recipients as normal from a certain host or the fact that mail is relayed .",
    "[ [ content - based - filtering ] ] content - based filtering + + + + + + + + + + + + + + + + + + + + + + +    content - based filtering happens after a message is fully received ( including the body of the message ) . in this case , filtering can also be based on known keywords in the subject and body of the message , common features of spam and the use of signature / checksums from databases on the internet .",
    "_ nave bayesian filtering _ is a new content - based mechanism for spam filtering  @xcite @xcite @xcite .",
    "before it can be used , a bayesian filter must be trained with a set of spam and a set of legitimate emails ( aka._ham _ ) that have been previously classified . for each word @xmath2 in the training",
    "sets the filter estimates the probability that it occurs in a spam message ( @xmath3 ) or in a ham message ( @xmath4 ) using @xmath5 where @xmath6 is the number of occurrences of word @xmath7 in the spam set , @xmath8 is the number of occurrences of word @xmath7 in the ham set , and @xmath9 and @xmath10 are the sizes of the spam and ham training sets respectively .",
    "when a new message @xmath11 arrives , the filter determines the @xmath12 most _",
    "interesting _ words @xmath13 , where interesting means @xmath14 or @xmath15 ) . using these ` interesting ' words",
    ", the filter then computes the probability that @xmath16 is spam using bayes rule  @xcite @xcite @xmath17 then if this probability is greater than a given threshold @xmath18 , @xmath16 is classified as spam .",
    "a third method to filter on content is the use of _ _ genetic algorithms__. these genetic algorithms use so - called feature detectors to score an email message .",
    "this score can then be used to classify a message as spam or ham .",
    "another approach which has the ability to learn is the use of _ neural networks_. like bayesian filters , neural networks must be trained first on a set of spam and non - spam messages .",
    "after this training the neural network can be used to classify incoming mail message based on common features in email messages@xcite .",
    "it is also possible to classify mail based on the content by the use of _ _ signature / checksum schemes _ _ in a cooperative system .",
    "when a mail message arrives a signature / checksum is calculated for this message and compared to the values in special spam databases on the internet .",
    "if the checksum matches any of the values in the database , the message is regarded as spam .",
    "in this section we detail the method of our analysis .",
    "our goal is to measure the effectiveness of several spam - filtering techniques on realistic email traffic patterns , both at isp and at the user level .",
    "this traffic should reflect the fact that different users have different traffic patterns and their emails also differ in their contents . in an ideal situation",
    "we would perform these measurements on real email traffic , but due to privacy reasons , that is infeasible ( unless we restrict attention to a very small and atypical consenting sample like staff at a university ) .",
    "instead we perform this analysis by generating both normal and spam email traffic using a simulator , and measuring the accuracy level of each analysed spam filter .",
    "our analysis aims to measure how good a spam filter is at preventing spam from being delivered to the end user , while still allowing legitimate emails to pass through unblocked . to this end",
    ", we compute for each spam filter , the false acceptance and rejection rate .",
    "moreover , we propose a single measure of the filter s wrongness as a function of its false acceptance and rejection rates .",
    "using this measure , we can rank the accuracy of the evaluated filters .",
    "we also study how the spam personalisation and new techniques like the inclusion of random words affects this performance .    for each message ,",
    "a spam filter does one of four things :    @xmath19 : : :    it correctly classifies a spam message as spam , @xmath20 : : :    it falsely accepts a spam message as ham , @xmath21 : : :    it correctly classifies a ham message as legitimate , or @xmath22 : : :    it falsely rejects a ham messages as spam .",
    "when running the spam filter on @xmath12 messages , @xmath23 of which are spam messages and the remaining @xmath24 are legitimate messages , we write @xmath25 for the number of correctly classified spam messages , and define @xmath26 , @xmath27 and @xmath28 analogously . then the false acceptance rate ( far ) and the false rejection rate ( frr ) are defined as @xmath29    clearly , the false acceptance rate can be artificially decreased to @xmath30 by blocking all messages .",
    "this increases the false rejection rate though .",
    "the same happens with the false rejection rate : it can be decreased to @xmath30 by not blocking any messages at all .",
    "a good spam filter has a low far as well as a low frr .",
    "we want to be able to rank the performance of spam filters , as expressed by their accept and reject ratios , using a single scalar value . at first",
    ", it would seem natural to define the _ wrongness _ @xmath31 of a spam filter as the distance to the origin when plotting the performance of the filter in the far / frr plane .",
    "however we do not consider these errors to be symmetric , given that it is much worse to falsely reject a legitimate message than to accept a spam message .",
    "we can think of a false positive as an error , and a false negative as an effectiveness indicator . another way to approach this , is to say that one is willing to tolerate a small increase in the false reject ratio for a significant reduction of the false accept ratio . trying to represent that we propose the function @xmath32 where @xmath33 is a small constant ( i.e.,@xmath34 ) .",
    "the simulator needs to generate email traffic that faithfully emulates the behaviour of a normal user , to test the filters with . in order to do that we need content for the bodies of these emails , and an effective method to generate normal email traffic patterns .",
    "ideally , the bodies of the messages should come from real mail sent by different kinds of users .",
    "however , due to privacy considerations , this is not possible .",
    "instead , we use bodies from a wide variety of usenet ( news ) messages .",
    "this variety is necessary to avoid creating email messages with a limited set of subjects and vocabulary .",
    "we do note however that usenet messages do not contain html code ( whereas some of the spam messages considered ( see section [ sec - modspamtraf ] ) do ) .",
    "one important issue to model is the fact that the contents of the messages sent by different people varies . a person s vocabulary varies as a function of his occupation , education , hobbies , etc . in order to reflect that in our model",
    ", each sender of an email belongs to a specific topic group chosen randomly .",
    "each topic group only takes bodies from a specific news group .",
    "another important issue to model is that in normal email traffic , people mostly get mail from people they know . to model this behaviour we enumerate senders and receivers and use a normal distribution to find people close to the sender of the message .",
    "the use of the normal distribution means that most mail will be send to people close to the sender in the list , but that there is still a chance of sending mail to people less close to the sender .",
    "mailing lists also are considered as a special case , because in some aspects they behaves like spammers , sending multiple copies of the same content to many different users , so this behaviour may confuse some filters . in our model , each mailing list has a email address database which is initialised at the beginning of the simulation .",
    "when it sends an email , it iterates over its database sending the same message to all the users in it .",
    "when the end of the database is reached , another message is chosen and the process starts again .      to generate realistic spam email - traffic",
    ", we have analysed the behaviour of bulk - mailers .",
    "an important characteristic of spam is that it arrives in bulk .",
    "whenever a bulk mailer start sending , it keeps sending for some period of time , until the spam message is delivered to all the users in it s database .",
    "an issue when generating the spam traffic is to make sure that the percentage of spam of the total email is realistic . at the end of 2002 , 40%@xmath0 of the total email traffic consist of spam , and is rapidly growing , accounting for more than 50 percent on june , 2003 .    in our model of spammers ,",
    "each spammer has a database with email addresses .",
    "when a spammer starts sending , it continues sending as fast as possible , until the message is delivered to the whole database .",
    "a spammer can send personalised spam . in this case , each spam message has only one target address , say login@server , and the line `` dear login , '' is added to the body of the message .",
    "to generate spam mail we also need content for the bodies of the spam messages .",
    "we use a variety of spam archives to extract these bodies . in a separate simulation",
    ", we also include a collection of very recent spam messages in order to show the impact of the spam evolution in the filtering techniques .",
    "the simulator must generate authentic - looking , email traffic and bulk mail patterns .",
    "we also believe that the simulator should be as general as possible .",
    "that is , it should be easy to use with existing filters and with filters that might be invented in the future .",
    "in addition it should also be easy to add new features of bulk - mailers .",
    "the architecture chosen to fulfil these requirements is to split the simulator into four parts ( see fig .  [",
    "fig : simulator ] ) .",
    "the first part is the traffic generator .",
    "this is the main module , responsible for generating email traffic according to its configuration and deliver it .",
    "the traffic generator has a set of senders and receivers .",
    "each sender has a probability to send an email every one step of the simulation and the traffic generator iterates over the set of senders in a round - robin fashion .",
    "after the sender is selected , if it is a normal user , the traffic generator first generates the number of targets this email will have , in which field ( i.e.,`to : ` , ` cc : ` , ` bcc : ` ) and then selects the receivers . in order to select the receivers ,",
    "we first take the index of the sender ( in the list of senders ) and then we generate a offset using the normal distribution . the index plus the offset yields the receiver . in other words ,",
    "the smaller the difference between your index and the index somebody else , the closer that person is to you , and the more likely it is that you exchange messages . in the case of a spammer ,",
    "it changes to state sending , and it will keep sending until the spam message is delivered to all the users in it s database . in case of a mailing list , it behaves like a normal user except for the fact that their targets are selected from its database and the same body is sent to the whole database .",
    "the second part is the wrapper , a program that receives an email on its standard input and is responsible for running the filter , take its classification ( spam or ham ) and send the response back to the traffic generator . if the filter is at the server level , the traffic generator will log every simulated connection to a log file , emulating the log file of the mail server .",
    "this file is accessible for the wrapper as well .",
    "each filter may have different input formats , so the wrapper program is filter - specific .",
    "the third part is the trainer . given that some filters ( e.g.,bayesian ) need to be trained before they can be used , and the email traffic received for each user has different patterns , the simulator is able to generate a certain amount of correctly classified traffic , and send it to two different files , one for ham and one for spam .",
    "after that , the trainer is executed , and it should to be able to train the filter with this data .",
    "some of the aforementioned filtering techniques are not included in our analysis for several reasons .",
    "some filters are highly dependent on unknown constants ( e.g.,the number of spammers who are not in a blacklist ) . by setting those constants to an arbitrary value",
    ", we would basically be setting the results of those simulations .",
    "we also restrict our analysis to open source filters .",
    "we therefore choose to test the following set of popular spam filters .",
    "filtering based on traffic analysis : :    : mail volume - based filter . content based filters : :    : distributed checksum clearinghouse ( dcc ) , genetic algorithm based    spam filter ( spamassassin ) , and nave bayesian filters ( bogofilter ,    spamprove , bmf ) .",
    "in this section we give for each analysed filter a short description of the results of the simulation . for each of the filters",
    ", we have measured their effectiveness both when applied at user level and at server level , against the following types of spam traffic : ( 1 ) non - personalised spam , ( 2 ) personalised spam , and ( 3 ) non - personalised recent spam .",
    "lccccc _ filter_&_level _ &  _ frr _   &  _ far _   &  @xmath35   + bogofilter & u & .0000 & .144 & 1.56 + bmf & u & .0117 & .029 & 1.86 + mail volume & s & .0000 & .633 & 6.44 + spamassassin&u / s & .0071 & .213 & 6.57 + dcc & u / s & .0005 & .624 & 7.11 + bmf & s & .0004 & .656 & 7.20 + bogofilter & s & .0000 & .709 & 7.27 + spamprove & u & .0085 & .215 & 7.80 + spamprove & s & .0024 & .695 & 10.9 +    lccccc _ filter_&_level _ &  _ frr _   &  _ far _   &  @xmath35   + mail volume & s & .0000 & .196 & 2.07 + bogofilter & u & .0000 & .233 & 2.43 + bmf & u & .0037 & .186 & 3.70 + spamprove & u & .0005 & .325 & 3.76 + spamassassin&u / s & .0070 & .217 & 6.60 + dcc & u / s & .0028 & .710 & 11.9 +    lccccc _ filter_&_level _ &  _ frr _   &  _ far _   &  @xmath35   + bmf & u & .0030 & .070 & 1.37 + bogofilter & u & .0000 & .129 & 1.41 + spamprove & u & .0040 & .138 & 2.94 + spamassassin & u / s & .0074 & .179 & 5.74 + mail volume & s & .0000 & .642 & 6.58 +    the qualitative results ( wrongness , far and frr ) are summarised in several graphs and tables .",
    "the tables contain the performance of the filters both at user and at server level , indicated in the _ level _ column by u and s respectively .",
    "if the performance of the filter did not depend on its level , u / s is used to indicate this fact .",
    "note that in case a bayesian filter runs at server level , it did not get a per - user training but a general one .",
    "table  [ fig - results ] contains the results for non - personalised spam .",
    "table  [ fig - results - per ] shows the results of the simulation when personalised spam was used .",
    "note that in this case the filters were only tested when running at user level .",
    "finally , for table  [ fig - results - nspam ] non - personalised spam was used but this time the spam mails were collected during the last two months .",
    "the purpose of this is to show the impact of the new spamming techniques ( e.g.,like including random words in the body of the message ) , especially on the bayesian filters .",
    "the performance of the filters is also shown graphically in fig .",
    "[ fig - graph1][fig - graph3 ] .    in the remainder of this section",
    "we discuss the performance and behaviour of each of the tested filters individually , in separate subsections .",
    "the volume - based filter uses an algorithm that checks how much email is received from a specific host during the last connections ( the last 1500 lines from the log file in the simulation , which is the same as used by kai s spamshield ) . if the amount of mail received is greater then a certain threshold , then the mail is classified as spam .",
    "this filter was able to correctly classify all the legitimate emails , for a high enough threshold .",
    "the drawback of this filter is that the far achieved is in general very high .",
    "when personalisation is used , this filter performs very well .",
    "we consider this to be a side effect , because for personalised mail the bulk mailer has to establish many more connections in order to deliver the same amount of emails .",
    "that makes it easier to detect with mail volume analysis .",
    "detection is easily avoided however using multiple open - relays at the same time .",
    "the distributed checksum clearinghouse filter tested is a modification of the standard dcc filter version  1.2.14 .",
    "the modification disables the report function to the internet server . instead",
    ", a local database was used and the filter reports the emails to this database .",
    "the percentage of false positives of the dcc filter is small , but the performance filtering spam is small as well .",
    "this performance can be improved by a less conservative threshold , but this has a direct impact on the frr .    when personalised spam is used the accuracy of this filter",
    "lowers slightly .",
    "the genetic trained filter that we used in our simulations was spamassassin version  2.60 .",
    "the default filter configuration was used in our simulation .",
    "this filter performs very well , achieving one of the best performances of the evaluated filters at isp level , with the non - personalised spam .",
    "this accuracy is not largely affected when personalised spam is used .",
    "one drawback of this filter is that it is the most computationally expensive of the evaluated filters .",
    "several implementations of bayesian filters were evaluated and there were important performance differences between them .",
    "an outstanding performance was achieved by bogofilter when it runes at user level , it had almost no false positives and more than 75% of the spam was filtered in every simulation .",
    "we suspect that this good performance is due to the fisher s method , see robinson  @xcite .",
    "bmf has also a very good performance , comparable to bogofilter , but less conservative .",
    "it archives lowest far of the evaluated filters , but the number of false positives in some circumstances is certainly high .",
    "spamprove has a low efficacy compared with other bayesian filters .",
    "we suspect this is related to the fact that spamprove ignores html code .",
    "a general characteristic of bayesian filters is that their performance is lowered drastically when they run at isp level .",
    "another general characteristic of bayesian filters is that most of the wrongly classified emails are very short .",
    "we suspect that in these cases there is not enough information to perform statistical analysis .",
    "personalisation of the spam does not have a big impact on the accuracy of bayesian filters .",
    "if anything , it improves the accuracy of some of them .",
    "we suspect this improvement is related to the fact that keywords like `` login '' in the body of the message becomes a good spam indicator .",
    "[ [ filtering - at - the - isp - level ] ] filtering at the isp level + + + + + + + + + + + + + + + + + + + + + + + + + +    the most efficient way for filtering at the isp level seems to be using a genetic algorithm .",
    "this require a big amount of processing power , but when that is available it is certain a good option .",
    "a mail volume - based filter can be established as a first line of defence even when its performance is low because for a high enough threshold they give no false rejects and are computationally cheap .",
    "the best way for a user to filter spam seems to be a nave bayesian filter with the fisher s method like bogofilter .",
    "depending on how important it is for the user to loose email , bmf also can be considered as a good option ."
  ],
  "abstract_text": [
    "<S> unsolicited bulk email ( aka._spam _ ) is a major problem on the internet . to counter spam , several techniques , ranging from spam filters to mail protocol extensions like _ hashcash </S>",
    "<S> _ , have been proposed . in this paper </S>",
    "<S> we investigate the effectiveness of several spam filtering techniques and technologies . </S>",
    "<S> our analysis was performed by simulating email traffic under different conditions . </S>",
    "<S> we show that genetic algorithm based spam filters perform best at server level and nave bayesian filters are the most appropriate for filtering at user level .    </S>",
    "<S> spam , unsolicited email , email abuse , security , networking , bayesian filtering , genetic algorithms , text classification . </S>"
  ]
}
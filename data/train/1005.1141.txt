{
  "article_text": [
    "constraint satisfaction problems ( csps ) are computational problems that appear in almost every area of computer science such as artificial intelligence , graph algorithms , scheduling , combinatorics , and computer algebra . depending on the type of constraints that are allowed in the input instances of a csp ,",
    "the computational complexity of a csp is usually polynomial ( we will call these csps tractable ) , or np - hard . in the last decade , a lot of progress was made to find general criteria that imply that a csp is tractable , or that it is np - hard .",
    "such results have been obtained for constraint languages over finite domains  @xcite , but also for constraint languages over infinite domains that are @xmath5-categorical ( for formal definition of these concepts see section  [ sect : csp ] ) .",
    "for example , it has been shown that for every structure @xmath1 with a first - order definition in @xmath6 the problem csp@xmath7 is in p if it falls into one out of nine classes , and is np - hard otherwise  @xcite .    lately",
    ", many researchers have been fascinated by a conjecture due to feder and vardi  @xcite which is known as the _ dichotomy conjecture_. this conjecture says that every csp with a finite domain constraint language is either tractable ( i.e. , in p ) or np - complete .",
    "according to a well - known result by ladner  @xcite , there are np-_intermediate _ computational problems , i.e. , problems in np that are neither tractable nor np - complete ( unless p = np ) .",
    "but the problems that are given in ladner s construction are extremely artificial .",
    "the question why there are so few candidates for natural np - intermediate problems is one of the mysteries in complexity theory .",
    "any outcome of the dichotomy conjecture is probably surprising : a negative answer would finally provide relatively natural np - intermediate problems , which would be of interest in complexity theory .",
    "a positive answer probably comes with a criterion which describes the np - hard csps ( and it would probably even provide algorithms for the tractable csps ) .",
    "but then we would have a rich catalogue of computational problems where the computational complexity is known .",
    "such a catalogue would be a valuable tool for deciding the complexity of computational problems in the mentioned application areas : since csps are abundant , one might derive algorithmic results by reducing the problem of interest to a known tractable csp , and one might derive hardness results by reducing a known np - hard csp to the problem of interest .    in this article , we study two natural classes of infinite domain constraint languages , and show that the corresponding csps do exhibit a complexity dichotomy . to the best of our knowledge ,",
    "this is the first systematic complexity result for classes of structures that are not @xmath5-categorical .",
    "the first class consists of all first - order expansions of @xmath8 ( i.e. , we add relations to @xmath8 that are first - order definable in @xmath8 .",
    "the second class is an affine version of the first class , and consists of all first - order expansions of @xmath9 . that the structures @xmath8 and @xmath9 are not @xmath5-categorical follows immediately from the theorem by engeler , ryll - nardzewski , and svenonius ( cf .",
    "theorem 6.3.1 in @xcite ) .",
    "it is even the case that the corresponding csps can not be formulated by any @xmath5-categorical template ; the basic proof idea is presented in ( * ? ? ?",
    "* proposition 1 ) ; also see  @xcite .",
    "our results follow from theorems about primitive positive definability : we show that for every relation @xmath10 with a first - order definition in @xmath11 , either @xmath10 has a quantifier - free horn definition in @xmath11 , or @xmath10 contains the tuple @xmath12 , or all relations with a first - order definition in @xmath11 have a primitive positive definition in @xmath13 .",
    "the analogous result also holds for the affine case .",
    "the techniques that we use to prove these two definability theorems are more general than the two classification results , and they are very different in nature .",
    "one technique applies for structures ` that have little structure ' ; to be precise , for _ all _ structures @xmath1 where @xmath14 and @xmath15 are the only primitive positive definable non - trivial binary relations ( section  [ sect : affine ] ) .",
    "in particular , they apply to structures with a 2-transitive automorphism group .",
    "the other technique applies for structures ` with a lot of structure ' ; informally , it applies whenever we can find a primitive positive definition for the line between two points in @xmath16 ( section  [ sect : q ] ) .",
    "the rest of this paper is organised as follows : in section  [ sect : csp ] , we provide some background material on constraint satisfaction and logic . a tractability result for templates that have a quantifier - free horn definition in @xmath4",
    "is presented in section  [ sec : tract ] . the classification result for @xmath4",
    "can be found in section  [ sect : q ] while the results for the affine case are collected in section  [ sect : affine ] . finally , a number of open questions and directions for future work can be found in section  [ sect : conc ] .",
    "let @xmath17 be a relational structure with domain @xmath18 ( which will usually be infinite ) and finitely many relations @xmath19 .",
    "the _ constraint satisfaction problem for @xmath1 _ ( short , csp@xmath7 ) is the computational problem to decide whether a given primitive positive sentence @xmath20 involving relation symbols for the relations in @xmath1 is true in @xmath1 .",
    "a first - order formula is called _ primitive positive _ if it is of the form @xmath21 where @xmath22 are atomic formulas , i.e. , formulas of the form @xmath23 or @xmath24 with @xmath10 the relation symbol for a @xmath25-ary relation from @xmath1 .",
    "we call such a formula a _ pp - formula_. the conjuncts in a pp - formula @xmath20 are also called the _ constraints _ of @xmath20 .",
    "we also refer to @xmath1 as a _ constraint language _ ( it is also often called the _ template _ ) of csp@xmath7 .",
    "we say that a first - formula @xmath26 _ defines _ a relation @xmath10 in @xmath1 when @xmath27 holds in @xmath1 iff @xmath28 . if @xmath26 is primitive positive , we call @xmath10 _ primitive positive definable ( pp - definable ) _ over @xmath1",
    ". the following simple but important result explains the importance of primitive positive definability for constraint satisfaction problems .",
    "[ pp - def ] let @xmath1 be a relational structure and @xmath29 be an expansion of this structure by a pp - definable relation @xmath10 over @xmath1 .",
    "then csp@xmath7 is polynomial - time equivalent to csp@xmath30 .",
    "lemma  [ pp - def ] will be used extensively in the sequel and we will not make explicit references to it . another important class of formulas are _ horn _ formulas ; a first - order formula in conjunctive normal form is horn if and only if each clause contains at most one positive literal",
    ". a relation @xmath10 is called quantifier - free horn definable over @xmath1 if there exists a quantifier - free horn formula that defines @xmath10 in @xmath1 .",
    "note that lemma  [ pp - def ] does not hold if we replace ` pp - definable ' with ` horn definable ' .    by choosing an appropriate structure",
    "@xmath1 many computational problems that have been studied in the literature can be formulated as csp@xmath7 ( see e.g.  @xcite ) .",
    "it turns out very often that the structure @xmath1 can be chosen to be @xmath5-categorical .",
    "a structure is called _ @xmath5-categorical _ if the set of all first - order sentences that is true in the structure has only one countable model , up to isomorphism .",
    "a famous example of an @xmath5-categorical structure is @xmath31 .",
    "the condition of @xmath5-categoricity is interesting for constraint satisfaction , because the so - called _ universal - algebraic approach _ , which is currently intensively studied for finite constraint languages , applies  at least in principle  also for @xmath5-categorical structures ( see e.g.  @xcite for an application of the universal - algebraic approach to csps for constraint languages over infinite domains ) . in this article , we demonstrate that systematic complexity classification can be performed for constraint languages over infinite domains even if the constraint languages are not @xmath5-categorical .",
    "[ [ example . ] ] * example . *",
    "+ + + + + + + + + +    let @xmath1 denote the structure @xmath32 it can be shown that csp@xmath7 _ can not _ be formulated with an @xmath5-categorical template ( for a very similar proof , see  @xcite ; a necessary and sufficient condition about which csps can be formulated with @xmath5-categorical templates can be found in  @xcite ) .",
    "one can show that the relations @xmath33 and @xmath34 have pp - definitions in @xmath1 .",
    "it is now straightforward to determine the computational complexity of csp@xmath7 by combining lemma  [ pp - def ] and our classification result ( corollary  [ cor : q ] ) .",
    "we will sometimes consider the automorphism group aut@xmath7 of a template @xmath1 over a domain @xmath18 , i.e. , the group formed by the set of all automorphisms and @xmath1 .",
    "] of @xmath1 with respect to functional composition .",
    "an _ orbit _ of @xmath35 on @xmath36 is a set of the form @xmath37 , for some @xmath38 .",
    "we note that pairs from the same orbit satisfy the same first - order formulas .",
    "let @xmath18 be an arbitrary infinite set and arbitrarily choose an element @xmath39 . the complexity of csp@xmath7 where @xmath1 has a first - order definition in @xmath40 ( so - called _ equality languages _ ) has been classified in  @xcite .",
    "we note that if @xmath10 is first - order definable in @xmath40 and @xmath41 , then @xmath42 for every @xmath43 .",
    "thus , the exact choice of @xmath2 is irrelevant when stating the following theorem .",
    "[ thm : ecsp ] let @xmath1 be a template with a first - order definition in @xmath40 . then , all relations in @xmath1 have a quantifier - free horn definition in @xmath40 , or all non - empty relations in @xmath1 contain the tuple @xmath3 , or else every first - order definable relation in @xmath40 has a pp - definition in @xmath1 . in the last case , csp@xmath7 is np - complete .    instead of using theorem  [ thm : ecsp ] in its full generality , it will be sufficient to use a simple corollary .",
    "for any set @xmath18 , the relation @xmath44 denotes the relation @xmath45    [ s - prop ] let @xmath18 be an infinite set .",
    "every first - order definable relation in @xmath46 has a pp - definition in @xmath47 .",
    "the relation @xmath44 has a first - order definition in @xmath40 and does not contain the tuple @xmath48 .",
    "it is easy to verify that @xmath44 has no quantifier - free horn definition in @xmath40 so every first - order definable relation in @xmath40 has a pp - definition in @xmath47 by theorem  [ thm : ecsp ] .",
    "for all relational structures @xmath1 with a quantifier - free horn definition in @xmath4 , the problem csp@xmath7 can be solved in polynomial time .",
    "this follows from a more general algorithmic result in  @xcite .",
    "however , the algorithm presented there solves a linear number of linear programs , and thus the best known algorithms have a rather high worst - case running time .",
    "we present a more efficient algorithm for the special case that is relevant in our paper .",
    "we denote by @xmath49 the class of all functions of asymptotic growth at most @xmath50 up to poly - logarithmic factors .",
    "[ prop : tract ] let @xmath1 be a relational structure whose relations have a quantifier - free horn definition in @xmath4 . then there is an algorithm that solves csp@xmath7 in time @xmath51 where @xmath52 is the size of the input .",
    "the algorithm we present in the proof of proposition  [ prop : tract ] is a combination of general techniques in constraint satisfaction  @xcite and a polynomial implementation of gaussian elimination algorithm on rational data .",
    "since the input of csp@xmath7 consists of a primitive positive sentence whose atomic formulas are of the form @xmath53 where @xmath10 is quantifier - free horn definable over @xmath4 , we can as well assume that the input to our problem consists of a set of horn clauses over @xmath4 .",
    "we have to make some remarks about the worst - case running time of the gaussian elimination algorithm .",
    "it is well - known that the gaussian elimination requires @xmath54 many arithmetic operations on rational numbers , where @xmath55 is the number of equations and @xmath56 is the number of variables . in our algorithm , we have to solve a linear number of linear equation systems @xmath57 ; however , system @xmath58 is obtained from system @xmath59 by adding a single linear equation . since the gaussian algorithm can be presented in such a way that it computes a system in triangular form , adding successively equation by equation , the overall costs for solving @xmath57 equals the cost to solve @xmath60 with gaussian elimination",
    ".    also recall that the size of the numbers involved when performing the gaussian elimination algorithm might grow exponentially when implemented without care .",
    "however , when we use the euclidean algorithm to shorten the coefficients during the elimination process , the gaussian elimination algorithm can be shown to be polynomial  @xcite .",
    "we are only interested in deciding solvability of linear equation systems , and not constructing solutions , and so we even have _ linear _ bounds ( in the input size ) on the representation size of all numbers involved in deciding solvability for linear equation systems over the rational numbers with gaussian elimination ( see  @xcite , proof of theorem 3.3 ) .",
    "finally we remark that the most costly arithmetic operation that has to be performed on rational numbers during the elimination process is multiplication , and multiplication can be performed in time @xmath61 , where @xmath62 denotes the representation size of the two rational numbers ( in bits ) .",
    "hence , the overal running time for solving @xmath57 with the discussed implementation of the gaussian elimination algorithm is in @xmath51 .",
    "we will show that our algorithm for csp@xmath7 can be implemented such that it has the same overall asymptotic worst - case complexity .",
    "we first discuss the correctness of the algorithm shown in figure  [ fig : alg ] , and then explain how to implement the algorithm such that it achieves the desired running time .",
    "when @xmath63 logically implies @xmath26 then the negative literal @xmath64 is never satisfied and can be deleted from all clauses without affecting the set of solutions . since this is the only way how literals can be deleted from clauses , it is clear that if one clause becomes empty the instance is unsatisfiable .",
    "if the algorithm terminates with _ yes _",
    ", then no negation of a disequality is implied by @xmath63 .",
    "if @xmath65 is the rank of the linear equation system defined by @xmath63 , we can use the gaussian elimination algorithm as described above to eliminate from all literals in the remaining clauses @xmath65 of the variables .",
    "let @xmath66 be the maximal sum of the absolute values of all coefficients in one of the remaining inequalities plus one .",
    "then setting the @xmath67-th variable to @xmath68 satisfies all clauses .    to see this ,",
    "take any disequality , and assume that @xmath67 is the highest variable index in this disequality .",
    "order the disequality in such a way that the variable with highest index is on one side and all other on the other side of the @xmath15 sign .",
    "the absolute value on the side with the @xmath67-th variable is at least @xmath68 .",
    "the absolute value on the other side is less than @xmath69 , since all variables have absolute value less than @xmath70 and the sum of all coefficients is less than @xmath71 in absolute value .",
    "hence , both sides of the disequality have different absolute value , and the disequality is satisfied . since all remaining clauses have at least one disequality , all constraints are satisfied .",
    "we finally explain how to implement the algorithm such that it runs in time @xmath51 . to decide whether @xmath63 implies an equality @xmath26 , we compute in each interation of the main loop the triangular normal form for the linear equation system determined by @xmath63 as described before the statement of the proposition . the overall costs to do this are in @xmath51 . moreover ,",
    "for each negative literal we maintain an equation where we eliminate as many variables as possible using the computed triangular normal form .",
    "if one of these equations becomes trivial ( i.e. is the form @xmath72 ) we conclude that the equation is implied by @xmath63 . the overall costs for doing this",
    "is also bounded by @xmath51 by a very similar argument as given before the statement of the proposition . with appropriate straightforward data structures , the total costs for removing negated literals @xmath64 from all clauses when @xmath26 is implied by @xmath63",
    "is linearly bounded in the input size since each literal can be removed at most once .",
    "in this section we present the complexity classification for first - order expansions of @xmath73 . we begin in section  [ defneq ] with a result about the pp - definability of the disequality relation @xmath15 in first - order expansions of @xmath73 . when the relation @xmath15 is pp - definable ,",
    "we show that also the relation @xmath74 ( defined in section  [ sect : csp ] as the relation @xmath75 ) is pp - definable whenever the constraint language contains a relation @xmath10 that is first - order , but not quantifier - free horn definable in @xmath11 ; this is shown in section  [ sect : defsq ] .",
    "finally , section  [ sect : cc1 ] completes the classification for first - order expansions of @xmath73 .",
    "[ lem : trans ] for any structure @xmath1 with a first - order definition in @xmath76 , the first - order definable relations in @xmath1 are a subset of @xmath77 .",
    "let @xmath10 be a unary relation with a first - order definition in @xmath76 .",
    "the statement is clear if @xmath10 does not contain any element distinct from @xmath78 , so let @xmath79 be from @xmath80 .",
    "we have to show that @xmath81 or @xmath82 .",
    "observe that for any @xmath83 , @xmath84 , the mapping @xmath85 is an automorphism of @xmath1 .",
    "hence , for any @xmath86 there is an automorphism of @xmath76 that maps @xmath79 to @xmath87 . since automorphisms preserve first - order formulas ,",
    "so @xmath88 and the claim follows .",
    "note that @xmath89 is equivalent to @xmath90 and hence the relation @xmath91 is pp - definable over @xmath76 ; thus we can use @xmath78 freely as a constant symbol in pp - definitions over @xmath1 .",
    "[ prop : neq ] let @xmath1 be a first - order expansion of @xmath92 containing a non - empty relation @xmath10 such that @xmath93 is false for any @xmath94",
    ". then @xmath15 is pp - definable in @xmath1 .",
    "observe that if the set @xmath80 has a pp - definition @xmath95 in @xmath1 , then the pp - formula @xmath96 defines @xmath97 over @xmath1 .",
    "let @xmath66 be a non - empty pp - definable relation in @xmath1 of minimal arity such that @xmath98 defines the empty set .",
    "let @xmath25 be the arity of @xmath66 .",
    "first , assume that @xmath99 is satisfiable .",
    "then the @xmath100-ary relation @xmath101 defined by @xmath102 is non - empty , and @xmath103 defines the empty set ; this is in contradiction to the choice of @xmath66 .",
    "assume next that @xmath104 is unsatisfiable .",
    "define the unary relation @xmath105 by @xmath106 and the unary relation @xmath107 by @xmath108 by lemma  [ lem : trans ] , both @xmath109 and @xmath110 are from @xmath77 .",
    "the relation @xmath109 can not be equal to @xmath91 or to @xmath111 since this contradicts the assumption that @xmath99 is unsatisfiable . if @xmath109 is equal to @xmath80 , then by the initial observation @xmath15 is pp - definable in @xmath1 and we are done .",
    "we conclude that @xmath112 and hence @xmath113 .",
    "since @xmath110 is non - empty , it must be the case that @xmath114 , and again by the initial observation @xmath15 is pp - definable in @xmath1 .",
    "the rational numbers with addition ( and also the real numbers with addition ) admit _ quantifier elimination _ , i.e. , every relation with a first - order definition in @xmath11 also has a quantifier - free definition over @xmath11 .",
    "this follows from the more general fact that the first - order theory of torsion - free divisible abelian groups admits quantifier elimination ( see e.g.  theorem  3.1.9 in  @xcite ) .",
    "the first lemma allows us to freely use certain expressions in pp - definitions over @xmath76 .",
    "[ lem : pp ] the relation @xmath115 is pp - definable in @xmath76 for arbitrary @xmath116 .    first observe that we can assume that @xmath117 are integers , because we can multiply the equation @xmath118 by the least common multiple of the denominators of @xmath119 and obtain an equivalent equation .",
    "the proof is by induction on @xmath120 .",
    "we first consider that case that @xmath121 .",
    "if @xmath122 , there is nothing to show . otherwise , the formula @xmath123 is equivalent to @xmath124 .",
    "hence , we can in particular use expressions of the form @xmath89 and @xmath125 in pp - definitions over @xmath4 with variables @xmath126 .",
    "if @xmath127 , and @xmath122 or @xmath128 , then we can argue as in the case @xmath121 .",
    "if @xmath129 and @xmath130 are both positive or both negative , then @xmath131 is equivalent to @xmath132 if @xmath129 and @xmath130 have different signs , we replace the conjunct @xmath133 in the formula above by @xmath134 .",
    "now suppose that @xmath135 . by the inductive assumption",
    ", there is a pp - definition @xmath136 for @xmath137 and a pp - definition @xmath138 for @xmath139 .",
    "then @xmath140 is a pp - definition for @xmath118 .    in the following",
    ", @xmath10 denotes a relation with a quantifier - free first - order definition @xmath26 in @xmath11 .",
    "a quantifier - free first - order formula @xmath26 in conjunctive normal form is called _ reduced _ if every formula obtained from @xmath26 by removing a literal is not equivalent to @xmath26 ( this concept was introduced in  @xcite ) .",
    "clearly , such a reduced definition of @xmath10 always exists , because we can find one by successively removing literals from @xmath26 .",
    "note that if @xmath120 is a literal from @xmath26 , then @xmath141 can be written as a pp - formula over a structure that contains @xmath15 and @xmath142 .",
    "[ lem : hard ] if @xmath10 is first - order , but not quantifier - free horn definable in @xmath11 , then @xmath74 has a pp - definition in @xmath143 .",
    "let @xmath144 be the binary relation defined by @xmath145 .",
    "we first prove that @xmath109 has a pp - definition in @xmath143 .",
    "let @xmath26 be a reduced first - order definition of @xmath10 , and let @xmath146 be a clause of @xmath26 with two positive literals @xmath147 and @xmath148 .",
    "because @xmath26 is reduced , there are @xmath149 such that @xmath150 satisfies @xmath147 and does not satisfy all other literals in @xmath146 , and @xmath151 satisfies @xmath148 but does not satisfy all other literals in @xmath146 .",
    "we claim that the following pp - formula is logically equivalent to @xmath145 .",
    "@xmath152 let @xmath153 be arbitrary .",
    "suppose that @xmath154 .",
    "then the assignment @xmath155 obviously satisfies the first line in the pp - formula .",
    "recall that @xmath156 and @xmath150 does not satisfy all literals in @xmath146 except for @xmath147 .",
    "the function @xmath157 is in aut@xmath11 whenever @xmath153 .",
    "consequently , @xmath158 , too , and the second line in the formula is satisfied as well .",
    "now suppose that @xmath23 .",
    "then the assignment @xmath159 obviously satisfies the first line in the pp - formula . by construction , @xmath160 and @xmath151",
    "does not satisfy all literals in @xmath146 except for @xmath147 .",
    "again we conclude that the second line in the formula is also satisfied .    for the opposite direction , suppose that @xmath161 satisfy the pp - formula .",
    "because of the first line of the formula , @xmath153 .",
    "let @xmath162 be the @xmath25 elements whose existence is asserted in the first line of the formula .",
    "note that the equations of the first line imply that @xmath163 lies on the line @xmath164 defined by @xmath165 and @xmath166 . because the formula contains the conjunct @xmath167 , the clause @xmath146 in @xmath26 is satisfied by @xmath162 .",
    "since @xmath162 also satisfies the conjunction of all negated literals in @xmath146 except for the positive literals @xmath147 and @xmath148 , at least one of these two literals @xmath147 and @xmath148 must be satisfied by @xmath162 .",
    "suppose first that @xmath147 is satisfied .",
    "the line @xmath168 does not lie completely within the subspace of @xmath16 defined by @xmath147 ( because @xmath151 does not satisfy @xmath147 , and neither does @xmath169 ) .",
    "hence , @xmath168 intersects this subspace in at most one point . because @xmath150 and hence also @xmath170 satisfies @xmath147 ,",
    "we have thus shown that @xmath163 equals @xmath165 . since @xmath171",
    "we conclude that @xmath154 by the equations in the second line of the formula .",
    "now , consider the case that @xmath148 is satisfied .",
    "similarly as in the last case , @xmath168 intersects the subspace defined by @xmath148 in at most one point . because @xmath172 satisfies @xmath148 , we have shown that @xmath163 equals @xmath151 .",
    "the equations in the second line of the formula then imply that @xmath23 .",
    "finally , we prove that @xmath173 has the following pp - definition in @xmath174 : @xmath175 suppose first that @xmath176 .",
    "note that @xmath177 is not equal to @xmath78 because @xmath178 .",
    "if @xmath179 , then @xmath154 , and if @xmath180 , then @xmath181 so @xmath182 is satisfied .    conversely , suppose that @xmath183 satisfies the pp - formula above .",
    "the formula @xmath182 implies that @xmath153 and hence @xmath184 .",
    "moreover , @xmath182 implies that @xmath154 or @xmath23 . if @xmath154 , then @xmath179 and @xmath176 .",
    "if @xmath23 , then @xmath185 and hence @xmath180 . again @xmath186 is in @xmath74 .",
    "we will now use lemma  [ lem : hard ] in order to prove the following definability result .",
    "[ thm : q ] let @xmath1 be first - order expansion of @xmath92 .",
    "then , either    * each relation in @xmath1 has a quantifier - free horn definition in @xmath92 , or * every non - empty relation of @xmath1 contains a tuple of the form @xmath12 , or * every first - order definable relation in @xmath92 has a pp - definition in @xmath1 .",
    "suppose that there is a non - empty @xmath25-ary relation @xmath10 of @xmath1 that does not contain the tuple @xmath12 .",
    "then the @xmath187-ary relation @xmath188 defined by @xmath189 is non - empty , and the relation defined by @xmath190 is empty .",
    "so we can apply proposition  [ prop : neq ] and find that @xmath15 is pp - definable in @xmath191 and hence also in @xmath1 .",
    "so assume in the following without loss of generality that @xmath1 contains the relation @xmath15 .",
    "suppose that one of the relations of @xmath1 does not have a quantifier - free horn definition in @xmath92 .",
    "lemma  [ lem : hard ] implies that the relation @xmath74 has a pp - definition in @xmath1 , and corollary  [ s - prop ] implies that every relation with a first - order definition in @xmath192 has a pp - definition in @xmath1 .",
    "let @xmath10 be a relation with a first - order definition @xmath26 in @xmath92 . to find a pp - definition for @xmath10 in @xmath1",
    ", we introduce a variable @xmath193 for every atomic formula of the form @xmath194 in @xmath26 . for each atomic formula @xmath195 in @xmath26 of the form @xmath194",
    ", we replace @xmath195 by @xmath196 for a new variable @xmath197 .",
    "the resulting formula consists of a boolean combination of atomic formulas of the form @xmath23 , which we know has a pp - definition @xmath198 in @xmath1 . for each atomic formula @xmath195 in @xmath26",
    "we add the conjunct @xmath199 to @xmath198 , and finally existentially quantify over all new variables .",
    "it is straightforward to verify that the resulting formula is a pp - definition of @xmath10 in @xmath1 .",
    "theorem  [ thm : q ] has immediate consequences for the computational complexity of constraint satisfaction .",
    "[ cor : q ] let @xmath1 be a structure with a finite relational signature and a first - order definition in @xmath76 that contains the relation @xmath200 . then csp@xmath7 is in p if all relations in @xmath1 have a quantifier - free horn definition over @xmath76 , or if all non - empty relations contain a tuple of the form @xmath12 , and is np - hard otherwise .",
    "if all relations in @xmath1 have a quantifier - free horn definition over @xmath4 , then proposition  [ prop : tract ] implies that csp@xmath7 is in p. otherwise , theorem  [ thm : q ] implies that in particular the relation defined by @xmath201 is pp - definable in @xmath1 .",
    "it follows from theorem  [ thm : ecsp ] that the constraint satisfaction problem for this ternary relation is np - hard .",
    "we will now consider affine additive structures over @xmath111 .",
    "the structure of this section is very similar to the structure of section  [ sect : q ] : we begin by studying the definability of @xmath15 ( section  [ sect : neq2 ] ) and of @xmath44 ( in section  [ sect : defsd ] ) and use these results to completely classify the problem in section  [ sec : cc2 ] . the main proof in section  [ sect : defsd ] , however , is very different from the corresponding proof in section  [ sect : defsq ] .",
    "let us now formally define the problem at hand : define the operation @xmath202 by @xmath203 .",
    "we study the constraint satisfaction problem for templates @xmath1 with a first - order definition in @xmath204 that contain the relation @xmath205 .",
    "[ lem:2trans ] let @xmath1 be a structure with a first - order definition in @xmath204 .",
    "then there are at most four first - order definable binary relations : the empty relation , the full relation , the relation @xmath15 , and the relation @xmath14 .",
    "it suffices to show that aut@xmath7 has precisely two orbits on @xmath206 , namely @xmath207 these two orbits clearly partition @xmath208 .",
    "it is obvious that @xmath209 is an orbit , because for every @xmath83 the mapping @xmath210 is an automorphism of @xmath204 and hence of @xmath1 . to see that @xmath211 is an orbit of pairs of reals ,",
    "we apply linear interpolation : let @xmath212 and @xmath213 be arbitrary .",
    "the mapping @xmath214 maps @xmath215 to @xmath216 and it is an automorphism of @xmath204 , and hence of @xmath1 .    in the proof of lemma  [ lem:2trans ] we have in fact verified that the automorphism group of @xmath1 is _ 2-transitive _ , i.e. , that there is only one orbit of pairs of distinct elements with respect to the componentwise action of the automorphism group of @xmath1 on pairs .",
    "[ thm : neq2 ] let @xmath1 be a relational structure with a 2-transitive automorphism group . if there is no pp - definition of @xmath15 , then there is an element @xmath94 of @xmath1 such that every non - empty relation in @xmath1 contains a tuple of the form @xmath217 .",
    "the central step of the classification is the following result concerning pp - definability .",
    "[ lem : indep2 ] let @xmath1 be a relational structure over an infinite domain @xmath18 such that @xmath36 , @xmath14 , @xmath15 , and @xmath218 are the only pp - definable binary relations .",
    "suppose that @xmath1 contains a relation @xmath219 such that there are pairwise distinct @xmath220 for which the following conditions hold :    1 .",
    "@xmath221 is satisfiable ; 2 .",
    "@xmath222 is satisfiable ; 3 .",
    "@xmath223 is unsatisfiable .",
    "then @xmath44 has a pp - definition in @xmath1 .",
    "we simplify the proof of lemma  [ lem : indep2 ] by first proving a slightly restricted version :    [ lem : indep1 ] let @xmath1 be a relational structure over an infinite domain @xmath18 such that @xmath36 , @xmath14 , @xmath15 , and @xmath218 are the only pp - definable binary relations .",
    "suppose that @xmath1 contains a relation @xmath219 such that there are @xmath224 for which the following conditions hold :    1 .",
    "@xmath221 is satisfiable ; 2 .",
    "@xmath225 is satisfiable ; 3 .",
    "@xmath226 is unsatisfiable .",
    "then @xmath44 has a pp - definition in @xmath1 .",
    "the indices @xmath227 must be pairwise distinct , so suppose for the sake of notation that @xmath228 , @xmath229 , @xmath230 .",
    "consider the relation @xmath10 defined by @xmath231 we first note that @xmath10 is a non - empty relation : @xmath232 is satisfiable so the only way of making @xmath10 empty is that every tuple @xmath233 in @xmath219 satisfies @xmath234 .",
    "this is impossible since we know that there exists a tuple @xmath235 such that @xmath236 .",
    "this implies @xmath237 and contradicts the third condition .",
    "arbitrarily choose a domain element @xmath79 .",
    "we first show that there always exist elements @xmath238 such that @xmath239 .",
    "let @xmath240 and note that @xmath241 is pp - definable .",
    "we know that @xmath241 is non - empty since @xmath10 is non - empty .",
    "now assume that @xmath242 .",
    "first suppose that @xmath243 .",
    "then @xmath244 is non - empty and a strict subset of the equality relation , a contradiction .",
    "if @xmath245 , then consider the pp - definable relation @xmath246 we see that @xmath247 which contradicts the fact that the only non - trivial binary relations that are pp - definable from @xmath1 are @xmath14 and @xmath15 . hence , @xmath248 .",
    "we now continue by considering the tuple @xmath239 . by the third condition",
    ", we see that at least one of @xmath249 must equal @xmath79 in order to satisfy @xmath10 .",
    "let us consider the case @xmath250 .",
    "note that @xmath251 due to the literal @xmath252 .",
    "we now show that @xmath250 is satisfied by any choice of @xmath253 except @xmath79 . to see this ,",
    "assume to the contrary that there is a domain element @xmath254 such that @xmath255 .",
    "define @xmath256 and note that @xmath257 which contradicts the assumption that @xmath14 and @xmath258 are the only non - trivial pp - definable binary relations .",
    "similarly , one can show that @xmath259 holds for all @xmath260",
    ". therefore @xmath261 .",
    "assume for notational simplicity that @xmath262 , and @xmath263 .",
    "define the @xmath264-ary relation @xmath10 by @xmath265 and consider the formula @xmath266 we claim that @xmath267 and @xmath268 are satisfiable while @xmath269 is not satisfiable . then we can apply lemma  [ lem : indep1 ] and are done .",
    "first we make an observation :    define relation @xmath270 such that    @xmath271    we know that @xmath272 is satisfiable so @xmath270 is a non - empty relation . since @xmath273 is not satisfiable ,",
    "we conclude that @xmath270 is a non - empty subset of the equality relation .",
    "consequently , @xmath270 is the equality relation .",
    "analogously , define @xmath274 such that    @xmath275    and note that @xmath274 is the equality relation , too .",
    "we now prove that @xmath269 is not satisfiable . by using observation 1",
    ", it follows that any solution @xmath62 satisfies @xmath276 and @xmath277  this is impossible due to the clause @xmath278 .",
    "next , we prove that @xmath267 is satisfiable ; the case @xmath268 is symmetric .",
    "consider the relation @xmath279 by the conditions on @xmath10 , we know that @xmath110 is non - empty . since @xmath110 is binary , we also know that @xmath110 either is the equality relation , the disequality relation , or the full relation .",
    "we conclude that @xmath110 is non - empty and symmetric .    by observation 1 , the clause @xmath97 has the effect that every solution @xmath62 must satisfy @xmath280 .",
    "the solution also has to satisfy @xmath278 which implies that @xmath281 .",
    "observation 1 now tells us that @xmath282 and we conclude that every solution satisfies @xmath280 and @xmath282 .",
    "we define @xmath283 thus , @xmath198 is satisfiable if and only if @xmath267 is satisfiable .",
    "we will now construct a concrete satisfying assignment @xmath62 to the variables of @xmath198 .    arbitrarily choose a tuple @xmath284 and let @xmath285 , @xmath286 . by the conditions on @xmath110",
    ", there exists an element @xmath287 such that @xmath288 and @xmath289 ; we let @xmath290 .",
    "furthermore , we know that @xmath291 and @xmath292 so @xmath293 and @xmath294 . at this point",
    ", we see that the assignment @xmath62 satisfies the clauses @xmath295 and @xmath97 .    we know that @xmath284 so @xmath296 , too , and there exists a value @xmath2 such that @xmath297 and @xmath298",
    "now , let @xmath299 and note that @xmath300 is satisfied by @xmath62 . finally , @xmath301 so the clause @xmath278 is satisfied and the proof is completed .",
    "we are now ready to prove the classification result for the affine case .",
    "[ thm : affine ] let @xmath1 be a first - order expansion of @xmath204 .",
    "then , either    * each relation in @xmath1 has a quantifier - free horn definition in @xmath204 , or * every non - empty relation of @xmath1 contains a tuple of the form @xmath12 , or * every first - order definable relation in @xmath204 has a pp - definition in @xmath1 .",
    "suppose that there is a non - empty @xmath25-ary relation @xmath10 of @xmath1 that does not contain the tuple @xmath12 .",
    "the proof of lemma  [ lem:2trans ] shows that @xmath1 is 2-transitive , and hence by the contraposition of theorem  [ thm : neq2 ] the relation @xmath15 is pp - definable .",
    "so assume in the following without loss of generality that @xmath1 contains the relation @xmath15 .",
    "let @xmath10 be a relation in @xmath1 that does not have a quantifier - free horn definition in @xmath302 .",
    "let @xmath303 be a reduced definition of @xmath10 in @xmath302 ( see section  [ sect : q ] ) .",
    "then there must be a clause @xmath146 in @xmath26 with at least two positive literals @xmath304 and @xmath305 .",
    "let @xmath306 be the relation defined by    @xmath307    this relation @xmath219 is clearly pp - definable over @xmath308 .",
    "we claim that @xmath219 satisfies the conditions of lemma  [ lem : indep2 ] ( which is applicable due to lemma  [ lem:2trans ] ) with respect to the arguments indexed by @xmath309 , and @xmath310 ( or the conditions of lemma  [ lem : indep1 ] if @xmath311 ; this remark also applies to all other places where we appeal to lemma  [ lem : indep2 ] ) .",
    "since @xmath26 is reduced , there is a tuple @xmath312 that satisfies @xmath148 and does not satisfy all other literals in @xmath26 .",
    "now , the extended tuple @xmath313,\\dots , t[n],t[i_4],t[j_4])$ ] clearly satisfies @xmath219 , and we have @xmath314 \\neq t_1[n+2]$ ] as required in the conditions for lemma  [ lem : indep1 ] .",
    "there is also a tuple @xmath315 that satisfies @xmath147 and does not satisfy all other literals in @xmath146 , and we can argue similarly to find a second tuple showing the second condition of lemma  [ lem : indep2 ] .",
    "finally , suppose for contradiction that there is a tuple @xmath316 in @xmath219 where @xmath317 \\neq t_3[n+1]$ ] and @xmath318 \\neq t_3[n+2]$ ] .",
    "because this tuple satisfies in particular the clause @xmath146 from @xmath26 , the conjunct @xmath319 implies that either @xmath147 or @xmath148 is satisfied .",
    "but then the equalites @xmath320 and @xmath321 imply that @xmath317 = t_3[n+1]$ ] or @xmath318 = t_3[n+2]$ ] , a contradiction .",
    "hence , lemma  [ lem : indep1 ] applies , @xmath322 is pp - definable over @xmath323 and therefore also over @xmath308 and @xmath1 .",
    "the result follows from corollary  [ s - prop ] .",
    "the next corollary is a direct consequence of proposition  [ prop : tract ] , theorem  [ thm : affine ] , and corollary  [ s - prop ] .",
    "let @xmath1 be an expansion of @xmath324 by finitely many first - order definable relations .",
    "if each relation in @xmath1 has a quantifier - free horn definition in @xmath325 , or if each non - empty relation contains a tuple of the form @xmath12 , then csp@xmath7 is in p. otherwise , csp@xmath7 is np - hard .",
    "we have presented classification results for certain algebraic constraint satisfaction problems , and the results are to a large extent based on dichotomy results for logical definability .",
    "we feel that the results and ideas presented in this paper can be extended in many different directions .",
    "hence , it seems worthwhile to provide some concrete suggestions for future work .    the results and proof techniques in section  [ sect : q ] appear to be generalisable to many different templates defined over various structures .",
    "one example is the natural and important class of structures that are definable in _ presburger arithmetics _",
    "@xcite , i.e. , structures that are first - order definable over the integers with addition @xmath326 .",
    "we note that the following can be obtained by slightly modifying corollary  [ cor : q ] .",
    "let @xmath1 be a relational structure with a quantifier - free first - order definition in @xmath327 that contains the relation @xmath200 .",
    "then csp@xmath7 is in p if all relations in @xmath1 have a quantifier - free horn definition over @xmath327 , or if all non - empty relations contain a tuple of the form @xmath12 . otherwise , csp@xmath7 is np - hard .",
    "there is an important difference between this result and a full classification result : we have replaced _ first - order definability _ with _ quantifier - free first - order definability _ in the statement of the result , and the reason is that @xmath328 does not admit quantifier elimination .",
    "is there still a complexity dichotomy if we look at the class of csps with an template that is first - order definable in @xmath326 ?",
    "this appears to be a difficult question .",
    "the results presented in section 5 have strong connections with earlier work on the complexity of _ disjunctive _ constraints  @xcite .",
    "we say that @xmath15 is _ 1-independent _ with respect to a @xmath329-structure @xmath1 if and only if for every primitive positive @xmath329-formula @xmath26 with free variables @xmath330 the following holds : if @xmath267 and @xmath331 are satisfiable , then so is @xmath332 .",
    "assume that csp@xmath7 is tractable and let @xmath29 denote the set of all relations that can be defined by ( quantifier - free ) conjunctions of disjunctions over @xmath1 containing at most one literal that is not of the form @xmath97 .",
    "the following has been shown in  @xcite ; it does not imply our result since it only makes a statement about a constraint language @xmath29 of the form described above .",
    "let @xmath1 and @xmath29 be defined as above , and assume that p @xmath15 np .",
    "then csp@xmath30 is tractable if and only if @xmath15 is 1-independent with respect to @xmath1 .",
    "we have already mentioned that the structures studied in this paper are in general not @xmath5-categorical . however , torsion - free divisible abelian groups such as @xmath76 and all structures first - order definable in such groups are strongly minimal ( see e.g.  corollary 3.1.11 in  @xcite ) , and hence categorical in all uncountable cardinals .",
    "this is interesting from a constraint satisfaction point of view because of the following preservation theorem .",
    "[ thm : galois ] let @xmath1 be an uncountably categorical structure with a countable relational signature and an uncountable domain .",
    "then a first - order definable relation @xmath10 has a pp - definition in @xmath1 if and only if @xmath10 is preserved by all _",
    "infinitary _ polymorphisms of @xmath1 .",
    "note that this theorem is weaker than the corresponding theorem for @xmath5-categorical structures  @xcite , because we have to assume that @xmath10 is first - order definable , and that @xmath10 is not only preserved by the finitary , but also by the infinitary polymorphisms of @xmath1 . since our classification result is purely in terms of primitive positive definability of first - order definable relations , it is an interesting question to describe the polymorphisms that guarantee tractability for structures @xmath1 with a first - order definition in @xmath4 ( theorem  [ thm : galois ] shows that such polymorphisms do exist ) .",
    "we want to thank barnaby martin for comments on an earlier version of the paper .",
    "peter jonsson is partially supported by the _ center for industrial information technology _ ( ceniit ) under grant 04.01 and by the _ swedish research council _",
    "( vr ) under grant 2006 - 4532 ."
  ],
  "abstract_text": [
    "<S> we study techniques for deciding the computational complexity of infinite - domain constraint satisfaction problems . for certain fundamental algebraic structures @xmath0 , we prove definability dichotomy theorems of the following form : for every first - order expansion @xmath1 of @xmath0 , either @xmath1 has a quantifier - free horn definition in @xmath0 , or there is an element @xmath2 of @xmath1 such that all non - empty relations in @xmath1 contain a tuple of the form @xmath3 , or all relations with a first - order definition in @xmath0 have a primitive positive definition in @xmath1 .    </S>",
    "<S> the results imply that several families of constraint satisfaction problems exhibit a complexity dichotomy : the problems are in p or np - hard , depending on the choice of the allowed relations . as concrete examples , </S>",
    "<S> we investigate fundamental algebraic constraint satisfaction problems . </S>",
    "<S> the first class consists of all first - order expansions of @xmath4 . </S>",
    "<S> the second class is the affine variant of the first class . in both cases , </S>",
    "<S> we obtain full dichotomies by utilising our general methods . </S>"
  ]
}
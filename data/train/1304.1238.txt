{
  "article_text": [
    "grbner basis is an important tool in computational ideal theory @xcite , especially for polynomial system solving . for a given ideal and term ordering , the grbner basis of this ideal with respect to ( w.r.t . )",
    "the term ordering is a set of generators with good properties , such that manipulation of the ideal can be achieved with these generators .",
    "the term ordering plays an important role in the theory of grbner bases .",
    "it is well - known that grbner bases w.r.t .",
    "different term orderings are also different and possess different theoretical and computational properties . for example , grbner bases w.r.t .  the lexicographical ordering ( lex )",
    "have good algebraic structures and are convenient to use for polynomial system solving , while those w.r.t .",
    "the degree reverse lexicographical ordering ( drl ) are computationally easy to obtain .",
    "therefore , the common strategy to solve a polynomial system is to first compute the grbner basis of the ideal defined by the system w.r.t .",
    "drl , change its ordering to lex , and perhaps further convert the lex grbner basis to triangular sets @xcite or rational univariate representation @xcite .",
    "that is one of the main usages of algorithms for the change of ordering .",
    "however , the computation of grbner bases greatly enhanced recently @xcite , the step to change the ordering of grbner bases has become the bottleneck of the whole solving process ( see section [ sec : exp ] ) .",
    "hence it is of crucial significance to design efficient algorithms for the change of ordering .",
    "the purpose of this paper is precisely to provide such efficient algorithms .",
    "furthermore , some practical problems can be directly modeled as the change of ordering of grbner bases .",
    "for example , the grbner basis of an ideal derived from the aes-128 cryptosystem w.r.t .",
    "a certain term ordering ( other than lex ) has been obtained @xcite , and it may lead to a successful cryptanalysis on this system if one is able to convert its term ordering to lex . and the decoding of some cyclic codes can also be regarded as a problem of changing the term ordering @xcite .",
    "several algorithms for the change of ordering have already existed , for example the fglm algorithm for the zero - dimensional case @xcite and the grbner walk for the generic case @xcite .",
    "similar algorithms have also been proposed to change the orderings of triangular sets @xcite or using the lll algorithm @xcite in the bivariate case .    among them ,",
    "the fglm algorithm , only applicable to the zero - dimensional case , is an efficient one .",
    "the number of field operations it needs to complete the change of ordering is @xmath7 , where @xmath8 is the number of variables , and @xmath1 is the degree of the given ideal @xmath9}$ ] . its efficiency may be due to the fact that it reduces the problem of change of ordering to linear algebra operations .",
    "such a connection is achieved through the multiplication matrix @xmath10 used in this algorithm , which represents the multiplication by @xmath11 in the quotient ring @xmath12/i$ ] viewed as a vector space .",
    "these matrices are sparse , even when the input polynomial system is dense ( see section [ sec : random ] ) . and in this paper we take advantage of this sparsity structure to obtain fast fglm algorithms with good complexity and performances .",
    "we first study the particular but important case when the zero - dimensional ideal @xmath13 is in shape position .",
    "two methods based on the wiedemann algorithm are proposed to compute the grbner bases of @xmath13 or @xmath5 w.r.t .",
    "they both make use of the sparsity by constructing the linearly recurring sequence @xmath14,\\ ] ] where @xmath15 is a vector and @xmath16 is the vector representing @xmath17 in @xmath18}/i$ ] .",
    "it is easy to see that the minimal polynomial @xmath19 in @xmath20 $ ] of this linearly recurring sequence is indeed a polynomial in the grbner basis of @xmath13 w.r.t lex ( @xmath21 ) when @xmath22 , and it can be computed by applying the berlekamp  massey algorithm @xcite .",
    "furthermore , we show how to recover efficiently the other polynomials in the grbner basis by solving structured ( hankel ) linear systems .",
    "hence , we are able to complete the first method for the change of ordering to lex for ideals in shape position with complexity @xmath3 , where @xmath4 is the number of nonzero entries in @xmath23 .",
    "when @xmath24 this almost matches the complexity of computing the minimal polynomial .    the other method for the shape position case uses the deterministic wiedemann algorithm , which can always return the correct univariate polynomial in the grbner basis w.r.t .",
    "making use of the chinese remainder theorem , this method adapts and extends the previous one to recover the grbner basis of @xmath5 , instead of @xmath13 .",
    "thus it is suitable to those problems where the zeros , instead of the multiplicities , are of interest . for ideals in shape position",
    ", this deterministic method can always return the grbner basis of @xmath5 w.r.t .",
    "lex with the complexity @xmath25 .",
    "we also briefly discuss how to apply an incremental variant of the wiedemann algorithm to compute the univariate polynomial , which is of special importance among all the polynomials in the grbner basis .",
    "such an variant has a complexity sensitive to the output , namely the degree of the univariate polynomial , and is efficient when this degree is small .",
    "then for general ideals to which the methods above may be no longer applicable , we follow the idea above by generalizing the linearly recurring sequence to a @xmath8-dimensional mapping @xmath26 the minimal set of generating polynomials ( w.r.t .  a term ordering ) for the linearly recurring relation determined by @xmath27 is essentially the grbner basis of the ideal defined by @xmath27 , and this polynomial set",
    "can be obtained via the berlekamp  massey ",
    "sakata ( bms for short hereafter ) algorithm from coding theory @xcite . with modifications of the bms algorithm",
    ", we design a method to change the ordering in the general case .",
    "the complexity of this algorithm is @xmath28 , where @xmath29 is the maximal number of nonzero entries in matrices @xmath30 , while @xmath31 and @xmath32 are respectively the number of polynomials and the maximal term number of all polynomials in the resulting grbner basis .",
    "combing all these methods above , we present a deterministic top - level algorithm , which is able to choose automatically which method to use according to the input .",
    "the efficiency of the proposed methods is verified by experiments .",
    "the current implementation outperforms those of fglm in magma and singular .",
    "take a randomly generated quadratic polynomial system of @xmath33 variables for example , it generates an ideal in shape position of degree @xmath34 .",
    "for such an ideal , the change of ordering to lex can be achieved in @xmath35 seconds : this is @xmath36 times faster than the corresponding magma function . as shown in table [",
    "tab : time ] , zero - dimensional ideals over a prime field of degree greater than @xmath2 are now tractable",
    ".    furthermore , the performances of these methods are heavily dependent on the sparsity of the multiplication matrices , especially @xmath23 for the shape position case . in general",
    "we assume the multiplication matrices known .",
    "however , for generic polynomial systems consisting of @xmath8-variate polynomials of degree @xmath37 , the sparsity of @xmath23 is investigated , and we are able to give an explicit formula to compute the number of dense columns in @xmath23 and show indeed its construction is free .",
    "these results furnish a complete complexity analysis of the proposed method for generic polynomial systems .",
    "then with an asymptotic analysis of the number of dense columns as @xmath37 tends to @xmath38 , we show the complexity of the first method for the shape position case becomes @xmath6 for generic systems",
    ". such simplified complexity is better than that of fglm with smaller constant and exponent .      to be self - contained",
    ", this paper also includes results obtained in @xcite in a refined way for description .",
    "however , several original extensions have also been presented here , making the discussion on this subject more comprehensive : ( 1 ) for ideals in shape position , one new algorithm is proposed based on the deterministic wiedemann algorithm . compared with the previous probabilistic one , this algorithm becomes deterministic and aims at the grbner basis of the radical of the input ideal .",
    "( 2 ) the multiplication matrices are assumed known in @xcite , but here for the multiplication matrix @xmath23 which is of special importance , its sparsity , together with the asymptotic behaviors , and construction cost are analyzed for generic polynomial systems . such a study furnishes a complete understanding for the complexity of the change of ordering for generic systems , with construction of multiplication matrices also considered .",
    "( 3 ) the proof of theorem [ thm : loop ] is further simplified via introduction of known results in the literature .",
    "the organization of this paper is as follows .",
    "related preparatory algorithms used in this paper , along with some notations , are first reviewed in section [ sec : pre ] .",
    "then section [ sec : shape ] is devoted to the shape position case , where two methods with their complexity analyses are exploited .",
    "the method based on the bms algorithm for the general case is presented in section [ sec : general ] .",
    "section [ sec : main ] combines all the previous methods to a top - level algorithm .",
    "the sparsity of @xmath23 is studied in section [ sec : random ] and experimental results are provided in section [ sec : exp ] .",
    "let @xmath18}$ ] be the @xmath8-variate polynomial ring over a field @xmath39 , with variables ordered as @xmath21 .",
    "suppose @xmath40 is the grbner basis of a 0-dimensional ideal @xmath9}$ ] w.r.t .  a term ordering @xmath41 .",
    "given another term ordering @xmath42 , one wants to compute the grbner basis @xmath43 of @xmath13 w.r.t .  it .",
    "denote by @xmath1 the degree of @xmath13 , that is , the dimension of @xmath18}/i$ ] as a vector space .",
    "these notations are fixed hereafter in this paper .",
    "the fglm algorithm is one to perform the change of ordering of grbner bases of 0-dimensional ideals efficiently @xcite .",
    "the reason why it is fast may be due to the idea that it reduces the problem of ordering change to linear algebra operations in the quotient ring @xmath18}/i$ ] .",
    "such a reduction is realized in the following way .",
    "first one computes the canonical basis of @xmath18}/{\\langle g_1 \\rangle}$ ] and orders its elements according to @xmath41 .",
    "let @xmath44 $ ] be the ordered basis .",
    "then @xmath45 will always equal @xmath17 , for @xmath41 is a term ordering . given a variable @xmath11 , for each element @xmath46 in @xmath47",
    ", one can compute the normal form of @xmath48 w.r.t .",
    "@xmath40 , denoted by @xmath49 .",
    "this normal form , viewed as an element of @xmath18}/{\\langle g_1 \\rangle}$ ] , can be further written as a linear combination of @xmath47 .",
    "writing the coefficients as a column vector , one can construct a @xmath50 matrix @xmath51 by adjoining all the column vectors for @xmath52 .",
    "this matrix is called the _ multiplication matrix _ of @xmath11 .",
    "it is not hard to verify that all @xmath51 commute : @xmath53 for @xmath54 .",
    "next one handles all the terms in @xmath18}$ ] one by one following @xmath42 . for each term",
    "@xmath55 with @xmath56 , its coordinate vector w.r.t .",
    "@xmath47 can be computed by @xmath57 where @xmath58 is the coordinate vector of @xmath17 .",
    "then criteria proposed in fglm guarantee that once a linear dependency of the coordinate vectors of computed terms @xmath59 is found , a polynomial @xmath60 can be directly derived in the following form @xmath61 where @xmath62 is the leading term of @xmath63 w.r.t .",
    "@xmath42 ( denoted by @xmath64 ) @xcite .    as can be seen now ,",
    "all one needs to do to obtain the grbner basis @xmath43 is computing the coordinate vector of each term one by one , and checking whether a linear dependency of these vectors occurs after a new vector is computed , which can be realized by maintaining an echelon form of the matrix whose columns are coordinate vectors of previously computed terms .",
    "these steps are merely matrix manipulations from linear algebra .",
    "a trivial upper bound for the number of terms to consider is @xmath65 because of the vector size .",
    "the bms algorithm from coding theory is a decoding algorithm to find the generating set of the error locator ideal in algebraic geometry codes @xcite . from a more mathematical point of view",
    ", it computes the set of minimal polynomials ( w.r.t .  a term ordering @xmath66 ) of a linearly recurring relation generated by a given multi - dimensional array .",
    "it is a generalization of the berlekamp ",
    "massey algorithm , which is applied to reed  solomon codes to find the generating error locator polynomial , or mathematically the minimal polynomial of a linearly recurring sequence .    the bms algorithm , without much modification , can also be extended to a more general setting of order domains @xcite . combining with the feng  rao majority voting algorithm @xcite ,",
    "this algorithm can often decode codes with more with @xmath67 errors if the error locations are general @xcite , where @xmath68 is the minimal distance .",
    "next a concise description of the bms algorithm is given , focusing on its mathematical meanings .",
    "as a vector @xmath69 and a term @xmath70}$ ] are 11 corresponding , usually we do not distinguish one from the other .",
    "a mapping @xmath71 is called a _",
    "@xmath8-dimensional array_. in coding theory , the array @xmath27 is usually a syndrome array determined by the error word @xcite . besides the term ordering",
    ", we define the following partial ordering : for two terms @xmath72 and @xmath73 , we say that @xmath74 if @xmath75 for @xmath76 .    given a polynomial @xmath77}$ ]",
    ", a @xmath8-dimensional mapping @xmath27 is said to satisfy the _",
    "@xmath8-dimensional linearly recurring relation _ with _",
    "characteristic polynomial _",
    "@xmath63 if @xmath78    the set of all characteristic polynomials of the @xmath8-dimensional linearly recurring relation for the array @xmath27 forms an ideal , denoted by @xmath79 . again in the setting of decoding when @xmath27 is a syndrome array , this ideal is called the _ error locator ideal _ for @xmath27 , and its elements are called _",
    "error locators_. the definition of @xmath79 used here in this paper follows @xcite , and one can easily see that this definition is equivalent to that in @xcite by ( * ? ? ?",
    "* thereom 23 ) .    furthermore , the set of minimal polynomials for @xmath79 w.r.t .",
    "@xmath66 , which the bms algorithm computes , is actually the grbner basis of @xmath79 w.r.t .",
    "@xmath66 ( * ? ? ?",
    "* lemma 5 ) .",
    "the canonical basis of @xmath18}/i(e)$ ] is also called the _",
    "delta set _ of @xmath27 , denoted by @xmath80 .",
    "the term  delta set \" comes from the property that if @xmath81 is contained in @xmath80 , then @xmath80 also contains all elements @xmath82 such that @xmath83 .    instead of studying the infinite array",
    "@xmath27 as a whole , the bms algorithm deals with a truncated subarray of @xmath27 up to some term @xmath84 according to the given term ordering @xmath66 . a polynomial @xmath63 with @xmath85 is said to be _",
    "valid for @xmath27 up to @xmath84 _ if either @xmath86 or @xmath87 @xmath27 may be omitted if no ambiguity occurs .",
    "a polynomial set is said to be valid up to @xmath84 if each its polynomial is so .",
    "similarly to fglm , the bms algorithm also handles terms in @xmath18}$ ] one by one according to @xmath66 , so that the polynomial set @xmath88 it maintains is valid up to the new term .",
    "suppose @xmath88 is valid up to some term @xmath84 .",
    "when the next term of @xmath84 w.r.t .",
    "@xmath66 , denoted by @xmath89 , is considered , the bms algorithm will update @xmath88 so that it keeps valid up to @xmath89 .",
    "meanwhile , terms determined by @xmath89 are also tested whether they are members of @xmath80 .",
    "therefore , more and more terms will be verified in @xmath80 as the bms algorithm proceeds .",
    "the set of verified terms in @xmath80 after the term @xmath84 is called the _",
    "delta set up to @xmath84 _ and denoted by @xmath90 .",
    "then we have @xmath91 after a certain number of terms are considered , @xmath88 and @xmath90 will grow to the grbner basis of @xmath79 and @xmath80 respectively .    next",
    "only the outlines of the update procedure mentioned above , which is also the main part of the bms algorithm , are presented as algorithm [ alg : bmsupdate ] for convenience of later use .",
    "more details will also be provided in section [ sec : general ] .",
    "one may refer to @xcite for a detailed description . in algorithm [ alg : bmsupdate ] below , the polynomial set @xmath92 , called the _ witness set _",
    ", is auxiliary and will not be returned with @xmath88 in the end of the bms algorithm .",
    "[ alg : sakata ]    1 .",
    "test whether every polynomial in @xmath88 is valid up to @xmath89 2 .",
    "update @xmath93 and compute the new delta set up to @xmath89 accordingly 3 .",
    "construct new polynomials in @xmath94 such that they are valid up to @xmath89",
    "in this section , the case when the ideal @xmath13 is in shape position is studied .",
    "an ideal @xmath9}$ ] is said to be _ in shape position _ if its grbner basis w.r.t lex is of the following form @xmath95.\\ ] ]    one may easily see that @xmath13 here is 0-dimensional and @xmath96 .",
    "such ideals take a large proportion in all the consistent ideals and have been well studied and applied @xcite .",
    "the special structure of their grbner bases enables us to design specific and efficient methods to change the term ordering to lex . in the following ,",
    "methods designed for different purposes , along with their complexity analyses , are exploited .    throughout this section ,",
    "we assume the multiplication matrix @xmath23 is nonsingular .",
    "otherwise , one knows by the stichelberger s theorem ( cf .",
    "* theorem 2.1 ) ) that @xmath97 will be a root of the univariate polynomial in @xmath13 s grbner basis w.r.t .",
    "lex , and sometimes the polynomial system can be further simplified .        given a 0-dimensional ideal @xmath13 , if the univariate polynomial @xmath98 in its grbner basis w.r.t .",
    "lex is of degree @xmath1 , then we know @xmath13 is in shape position .",
    "the way to compute such a univariate polynomial is the wiedemann algorithm .",
    "consider now the following linearly recurring sequence @xmath99,\\ ] ] where @xmath15 is a randomly generated vector in @xmath100 , @xmath23 is the multiplication matrix of @xmath101 , @xmath102 is the coordinate vector of @xmath17 w.r.t the canonical basis of @xmath18}/i$ ] , and @xmath103 takes the inner product of two vectors .",
    "it is not hard to see that the minimal polynomial @xmath104 of the sequence @xmath105 is a factor of @xmath106 .",
    "as @xmath1 is always a bound on the size of the linearly recurring sequence , the berlekamp ",
    "massey algorithm can be applied to the sequence @xmath105 to compute @xmath104 . furthermore ,",
    "if @xmath107 , then @xmath108 and @xmath13 can be verified in shape position .",
    "suppose @xmath107 holds and @xmath109 in is of the form @xmath110 for @xmath111 .",
    "then computing the whole grbner basis of @xmath13 w.r.t .",
    "lex reduces to determining all the unknown coefficients @xmath112 .",
    "before we show how to recover them , some basic results about linearly recurring sequences are recalled .",
    "[ def : hankel ] let @xmath113 $ ] be a sequence of elements in @xmath114 and @xmath37 an integer .",
    "the @xmath115 _ hankel matrix _ is defined as @xmath116.\\ ] ]    [ thm : hankel ] let @xmath113 $ ] be a linearly recurring sequence . then the minimal polynomial @xmath117of the sequence @xmath105 is such that :    * @xmath118 for all @xmath119 ; * @xmath120 is a vector space of dimension @xmath121 generated by @xmath122 .    for each @xmath111 , as @xmath123 , one has @xmath124 , thus @xmath125 multiplying @xmath126 and taking the inner product with a random vector @xmath15 to both hands for @xmath127 , one can further construct @xmath1 linear equations @xmath128 with @xmath112 considered as unknowns , the coefficient matrix @xmath129 with entries @xmath130 is indeed a @xmath50 hankel matrix , and thus invertible by theorem [ thm : hankel ] . furthermore , the linear equation set with the hankel matrix @xmath129 can be efficiently solved @xcite .",
    "all the solutions of these linear systems for @xmath111 will lead to the grbner basis we want to compute .",
    "the method above is summarized in the following algorithm , whose termination and correctness are direct results based on previous discussions .",
    "the subfunction @xmath131 is the berlekamp",
    " massey algorithm , which takes a sequence over @xmath39 as input and returns the minimal polynomial of this sequence @xcite .",
    "compute the canonical basis of @xmath18}/{\\langle g_1 \\rangle}$ ] and multiplication matrices @xmath30    @xmath132    choose @xmath133 randomly    generate the sequence @xmath134 $ ] [ line : berlekamp - begin ]    @xmath135 [ line : bm ]    [ rm : normal ] as can be seen from the description of algorithm [ alg : shapen ] , such a method is a probabilistic one .",
    "that is to say , it can return the correct grbner basis w.r.t .",
    "lex with probabilities , and may also fail even when @xmath13 is indeed in shape position .      in this complexity analysis and others",
    "to follow , we assume that the multiplication matrices are all known and neglect their construction cost .",
    "suppose the number of nonzero entries in @xmath23 is @xmath4 .",
    "the wiedemann algorithm ( both construction of the linearly recurring sequence and computation of its minimal polynomial with the berlekamp  massey algorithm ) will take @xmath136 field operations to return the minimal polynomial @xmath104 @xcite .",
    "next we show how the linear system can be generated for free .",
    "note that for any @xmath137 and @xmath138 , we have @xmath139 , where @xmath140 denotes the transpose of @xmath141 .",
    "thus in and @xmath142 therefore , when computing the sequence , we can record @xmath143 and use them for construction of the linear equation set .",
    "first , as each entry @xmath130 of the hankel matrix @xmath129 can be extracted from the sequence , the construction of @xmath129 is free of operations .",
    "what is left now is the computation of @xmath144 , where @xmath145 has already been computed and @xmath146 . without loss of generality , we can assume that @xmath147 ( this is not true only if there is a linear equation @xmath148 in the grbner basis @xmath149 , and in that case we can eliminate the variable @xmath150 ) . consequently @xmath151 is a vector with all its components equal to @xmath152 except for one component equal to @xmath121 .",
    "hence computing @xmath144 is equivalent to extracting some component from the vector @xmath153 and there is not additional cost .    for each @xmath111 , solving the linear equation set @xmath154 only needs @xmath155 operations if fast polynomial multiplication is used  @xcite . summarizing the analyses above",
    ", we have the following complexity result for this method .",
    "[ prop : complexity shape ] assume that @xmath23  is constructed ( note that @xmath156 are not needed ) .",
    "if the minimal polynomial of computed by the berlekamp  massey algorithm is of degree @xmath1 , then the complexity of this method is bounded by @xmath157",
    "this complexity almost matches that of computing the minimal polynomial of the multiplication matrix @xmath23 if @xmath8 is small compared with @xmath1 .",
    "we use the following small example to show how this method applies to ideals in shape position . given the grbner basis of a 0-dimensional ideal @xmath158 $ ] w.r.t .",
    "drl @xmath159,\\ ] ] we first compute the degree of @xmath13 as @xmath160 , the canonical basis @xmath161 $ ] , and the multiplication matrices @xmath23 , @xmath162 and @xmath163 .    with the random vector @xmath164",
    ", we can construct the linearly recurring sequence @xmath165.\\ ] ] then the berlekamp ",
    "massey algorithm is applied to @xmath105 to obtain the minimal polynomial @xmath166 . from the equality @xmath167",
    ", we know now the input ideal @xmath13 is in shape position .",
    "the hankel coefficient matrix @xmath168 is directly derived from @xmath105 .",
    "next take the computation of the polynomial @xmath169 for example , the vector @xmath170 is constructed .",
    "the solution of the linear equation set @xmath171 being @xmath172 , we obtain the polynomial in @xmath43 as @xmath173 .",
    "the other polynomial @xmath174 can be similarly computed . in the end",
    ", we have the grbner basis of @xmath13 w.r.t .",
    "lex @xmath175.\\ ] ]      as already explained in remarks [ rm : normal ] , the classical wiedemann algorithm is a probabilistic one . for a vector chosen at random ,",
    "it may only return a proper factor @xmath104 of the polynomial @xmath106 , i.e. , @xmath176 but @xmath177 .",
    "in fact , the deterministic wiedemann algorithm can be applied to obtain the univariate polynomial @xmath106 , then one knows for sure whether @xmath13 is in shape position or not .",
    "the main difficulty is to compute the other polynomials @xmath178 in a deterministic way .    in the following",
    "we present an algorithm to compute the grbner basis of the radical of the ideal @xmath13 .",
    "indeed , in most applications , only the zeros of a polynomial system are of interest and we do not need to keep their multiplicities . hence it is also important to design an efficient method to perform the change of ordering of grbner basis of an ideal @xmath13 in a way that the output is the grbner basis of @xmath5 .      the way how this deterministic variant of the wiedemann algorithm proceeds",
    "is first recalled . instead of a randomly chosen vector in the classical wiedemann algorithm , in the deterministic version all the vectors of the canonical basis of @xmath100 @xmath179 are used .",
    "one first computes the minimal polynomial @xmath180 of the linearly recurring sequence @xmath181.\\ ] ] suppose @xmath182 , and @xmath183 .",
    "if @xmath184 , one has @xmath185 and the algorithm ends ; else it is not hard to see that the minimal polynomial @xmath186 of the sequence @xmath187\\ ] ] is indeed a factor of @xmath188 , a polynomial of degree @xmath189 ( that is why only the first @xmath190 terms are enough in the above sequence ) .",
    "next , one computes @xmath191 and checks whether @xmath192 .",
    "if not , the above procedure is repeated and so on .",
    "this method ends with @xmath193 rounds and one finds @xmath194 .",
    "first we study the general case when a factor of @xmath106 is found .",
    "suppose a vector @xmath195 is chosen to construct the linearly recurring sequence @xmath196,\\ ] ] and the minimal polynomial of this sequence is @xmath104 , a proper factor of @xmath106 of degree @xmath37 .",
    "we show how to recover the grbner basis of @xmath197 w.r.t .",
    "since the ideal @xmath13 is in shape position , it is not hard to see that the ideal @xmath197 is also in shape position , and its grbner basis w.r.t .",
    "lex is indeed @xmath198 $ ] , where @xmath199 is the remainder of @xmath109 modulo @xmath104 for @xmath111 .",
    "now for each @xmath200 , we can construct the linear system similar to @xmath201 where @xmath202 are the unknowns . as the @xmath115 hankel matrix of is invertible by theorem [ thm : hankel ] , there is a unique solution @xmath203 for .",
    "next we will connect this solution and a polynomial in the grbner basis of @xmath204 , and the following lemma is useful to show this connection .",
    "[ lem : share ] suppose @xmath104 is the minimal polynomial of for some @xmath195 , @xmath205 the multiplication matrix of @xmath101 of the ideal @xmath197 w.r.t .",
    "@xmath41 , and @xmath206 the canonical basis of @xmath17 in @xmath18}/(i+{\\langle \\tilde{f}_1 \\rangle})$ ] .",
    "then @xmath104 is also the minimal polynomial of @xmath207 $ ] .",
    "suppose @xmath208 .",
    "then according to fglm criteria , for the ideal @xmath197 , @xmath209 is the first linear dependency of the vectors @xmath210 when one checks the vector sequence @xmath207 $ ] .",
    "that is to say , @xmath104 is also the minimal polynomial of @xmath207 $ ] .",
    "[ prop : det ] suppose @xmath195 is such a vector that a proper factor @xmath104 of @xmath106 of degree @xmath211 is found from the linearly recurring sequence . then for each @xmath111 , the polynomial @xmath212 , where @xmath203 is the unique solution of , is in the grbner basis of @xmath213 w.r.t .",
    "let @xmath214 be the multiplication matrices of the ideal @xmath197 w.r.t .",
    "@xmath41 .    for each @xmath111 ,",
    "suppose @xmath215 is the corresponding polynomial in the grbner basis of @xmath197 w.r.t .",
    "then @xmath216 holds , and for any vector @xmath217 , we have @xmath218 as long as @xmath219 is chosen such that the coefficient matrix is invertible , the coefficients @xmath220 will be the unique solution of the linear equation set @xmath221    therefore , to prove the correctness of the proposition , it suffices to show that there exists @xmath217 such that the coefficient matrix of is invertible , and that the two linear equation sets and share the same solution . in particular",
    ", we will prove and are the same themselves for some @xmath219 .    to prove that , we need to show the two hankel matrices and the vectors in the left hands of and are the same . that is , for some vector @xmath219    1 .",
    "@xmath222 , for @xmath223 ; [ item : det-1 ] 2 .",
    "@xmath224 , for @xmath225 .",
    "[ item : det-2 ]    next we will prove these two arguments respectively .",
    "\\(i ) we take the first @xmath37 equations in ( i ) @xmath226 as the vectors @xmath227 are linearly independent , the above linear equation set has a unique solution @xmath228 for the unknown @xmath219 . from lemma  [ lem : share",
    "] , the vector sequence @xmath207 $ ] and the sequence share the same minimal polynomial @xmath104 of degree @xmath37 . thus there",
    "exist @xmath229 such that @xmath230 hence @xmath231 other equalities in ( i ) for @xmath232 can also be proved similarly .",
    "actually , the equality @xmath233 holds for any @xmath234 .",
    "\\(ii ) since there is a polynomial @xmath235 in the grbner basis of @xmath13 w.r.t .",
    "lex , where @xmath236 , we know @xmath237 .",
    "then on one hand , for the vector @xmath238 and any @xmath239 , we have @xmath240 on the other hand , as @xmath241 , we have @xmath242 , and thus @xmath243 .",
    "therefore for the vector @xmath228 and any @xmath225 , @xmath244 this ends the proof .",
    "now let us return to the special case of the deterministic wiedemann algorithm , where unit vectors are used to find @xmath245 with @xmath246 and @xmath247 .",
    "suppose @xmath248 so the ideal @xmath13 is verified in shape position .",
    "in the @xmath200th step of the algorithm , the unit vector @xmath249 is applied to construct the linearly recurring sequence @xmath250,\\ ] ] where @xmath251 . with this sequence",
    "the factor @xmath252 is computed . as the above sequence is the same as @xmath253,\\ ] ] from proposition [ prop : det ] we can recover efficiently the grbner basis of @xmath254 w.r.t .",
    "lex by constructing and solving linear equation sets with hankel coefficient matrices .",
    "so we have at hands the factorization @xmath245 , together with the grbner basis of @xmath255 w.r.t .",
    "lex for @xmath256 .",
    "suppose the grbner basis for @xmath200 is @xmath257.\\ ] ] then to recover the polynomials @xmath258 in for @xmath259 , we have the following modulo equation set constructed from @xmath260 : @xmath261 now it is natural to give a try of the chinese remainder theorem ( short as crt hereafter ) .",
    "to use the crt , we have to check first whether @xmath262 are pairwise coprime .",
    "one simple case is when @xmath106 is squarefree , or in other words the input ideal @xmath13 is radical itself . in that case",
    ", the direct application of crt will lead to the grbner basis @xmath92 of @xmath13 w.r.t .",
    "lex , and the change of ordering ends .",
    "when the polynomial @xmath106 is not squarefree , the crt does not apply directly . in this case , the grbner basis of @xmath5 w.r.t .",
    "lex is our aim . before the study on how to recover this grbner basis , we first make clear how a polynomial set of form can be split to a series of polynomial sets with a certain zero relation according to some factorization of @xmath106 .",
    "the following proposition is a direct result of ( * ? ? ?",
    "* proposition 5(i ) ) , and it is actually a splitting technique commonly used in the theory of triangular sets @xcite . in what follows , @xmath263 denotes the common zeros of a polynomial set @xmath264}$ ] in @xmath265 , where @xmath266 is the algebraic closure of @xmath39 .",
    "[ prop : triangular ] let @xmath267}$ ] be a polynomial set in the form @xmath268,\\ ] ] and @xmath269 . for @xmath256",
    ", define @xmath270,\\ ] ] where @xmath271 is the remainder of @xmath272 modulo @xmath273 for @xmath259 .",
    "then we have the following zero relation @xmath274    let @xmath275 be the squarefree part of @xmath106 . as each @xmath276 in satisfies the form in proposition [ prop : triangular ] , we can compute @xmath277 new polynomial sets @xmath278 whose univariate polynomials in @xmath101 is @xmath279 for @xmath280 , such that @xmath281 , and @xmath282 are pairwise coprime .",
    "these new polynomial sets can be found in the following way .",
    "set @xmath283 .",
    "we start with @xmath284 and computes @xmath285 . as long as this polynomial is not equal to @xmath121 , a new polynomial set @xmath278 whose univariate polynomial is @xmath279 is constructed from @xmath286 by proposition [ prop : triangular ] .",
    "next set @xmath287 and check whether @xmath288 .",
    "if so , we know we already have enough new polynomial sets ; otherwise @xmath289 , and the process above is repeated .    now we reduce the current case to the earlier one with @xmath275 squarefree and @xmath290 to construct the modulo equation sets .",
    "thus the grbner basis of @xmath5 w.r.t .",
    "lex can be obtained similarly ( note that extracting the squarefree part of @xmath106 results in the radical of @xmath13 ) .",
    "the whole method based on the deterministic wiedemann algorithm is summarized in algorithm [ alg : deterministic ] below .",
    "the subfunction @xmath291 returns the squarefree part of the input polynomial .",
    "the operator ",
    "@xmath292 \" means concatenating two sequences .",
    "[ alg : deterministic ]    compute the canonical basis of @xmath18}/{\\langle g_1 \\rangle}$ ] and multiplication matrices @xmath30 @xmath293 @xmath294 ;  @xmath295 $ ] ;  @xmath296 ;  @xmath297 ;  @xmath298 ;  @xmath299 $ ]    ( suppose @xmath300 $ ] ) @xmath301    [ rm : deterministic ] if the factors @xmath262 of @xmath106 returned by the deterministic wiedemann algorithm are pairwise coprime ( which needs extra computation to test ) , the grbner basis of @xmath13 w.r.t .",
    "lex can be computed from the crt .",
    "the method of the deterministic version described above is also applicable to the wiedemann algorithm with several random vectors . to be precise , when the first random vector does not return the correct polynomial @xmath106",
    ", one may perform a similar procedure as the deterministic wiedemann algorithm by updating the sequence with a newly chosen random vector ( instead of @xmath249 in the basis ) and repeating @xcite . in that case , the method above with crt can also be used to compute the grbner basis of @xmath5 w.r.t .",
    "lex .      next the computational complexity ,",
    "namely the number of field operations needed , for the deterministic method for ideals in shape position is analyzed .",
    "\\(1 ) in total the deterministic wiedemann algorithm needs @xmath302 operations if fast polynomial multiplications are used @xcite .",
    "here @xmath4 still denotes the number of nonzero entries in @xmath23 .",
    "\\(2 ) next at most @xmath1 structured linear equation sets with hankel coefficient matrices are constructed and solved , each with maximum operations @xmath303 .",
    "hence this procedure needs @xmath304 operations at most .",
    "( 3 ) the squarefree part @xmath275 of @xmath106 can be obtained with complexity at most @xmath305 for the case when @xmath306 has characteristic @xmath152 and @xmath307 for characteristic @xmath308 respectively , where @xmath309 ( * ? ? ?",
    "* theorem 14.20 and exercise 14.30 ) . for the case",
    "when @xmath106 is not squarefree , suppose @xmath277 new polynomial sets @xmath310 are needed , and @xmath311 for @xmath312 .",
    "to compute each set @xmath313 of the form , @xmath314 polynomial divisions are needed to find the remainders , with complexity @xmath315 .",
    "hence the total complexity to obtain @xmath290 is @xmath316 for we have @xmath317 .",
    "\\(4 ) solving the modulo equation set for each @xmath259 requires @xmath318 operations at most by ( * ? ? ?",
    "* theorem 5.7 ) .",
    "thus in total @xmath319 operations are needed for the crt application .",
    "therefore , we have the following complexity result for the method with the deterministic wiedemann algorithm .",
    "assume that @xmath23 is known .",
    "if the input ideal @xmath13 is in shape position , then this deterministic method will return the grbner basis of @xmath5 w.r.t .",
    "lex with the complexity @xmath320      here is a toy example to illustrate how the deterministic method works .",
    "consider an ideal @xmath13 in @xmath321 $ ] generated by its grbner basis w.r.t .",
    "drl @xmath322.\\ ] ] its grbner basis w.r.t .",
    "lex is @xmath323,\\ ] ] from which one can see that @xmath13 is in shape position .    from @xmath40 the canonical basis @xmath324",
    "$ ] and the multiplication matrices @xmath23 and @xmath162 are first computed . with a vector @xmath325 generated at random , the classical wiedemann algorithm will only return a proper factor @xmath326 of @xmath106 , and whether @xmath13 is in shape position is unknown .",
    "next we use the deterministic wiedemann algorithm to recover @xmath106 . with @xmath327 , a factor @xmath328 of @xmath106",
    "is found with the berlekamp ",
    "massey applied to the sequence .",
    "then we update the vector @xmath329 and execute the second round with @xmath330 , obtaining another factor @xmath331 .",
    "this time the updated vector @xmath332 , thus the deterministic wiedemann algorithm ends , and @xmath106 is computed as @xmath333 . as @xmath334 , now @xmath13 is verified to be in shape position .",
    "then we construct the linear equation sets similar to to recover @xmath335 and @xmath336 respectively .",
    "the first one , for example , is @xmath337 (    [ cols=\"^,^,^,^ \" , ]     ) .",
    "@xmath337 after solving them , we have the grbner bases of @xmath338 and @xmath339 respectively as @xmath340 , \\\\      p_2 & = [ ( x_1 + 1)(x_1 ^ 2+x_1 + 1 ) , x_2+x_1 ] .    \\end{split}\\ ] ]    then the squarefree part @xmath275 of @xmath106 is computed , and we find that @xmath13 is not radical , and thus only the grbner basis @xmath341 of @xmath5 w.r.t .",
    "lex may be computed . from @xmath342 , we directly have @xmath343 , and the algorithm ends .    the way to compute @xmath341 by crt , which is more general , is also shown in the following .",
    "two new polynomial sets @xmath344 , \\quad \\overline{p}_2 = [ x_1 ^ 2+x_1 + 1 , x_2+x_1]\\ ] ] are first computed and selected according to @xmath275 by proposition [ prop : triangular ] .",
    "then the modulo equation set @xmath345 as is solved with crt , resulting in the same @xmath341 .",
    "one can check that @xmath341 is the grbner basis of @xmath5 w.r.t .",
    "lex with any computer algebra system .      for a 0-dimensional ideal @xmath9}$",
    "] , the univariate polynomial in its grbner basis w.r.t .",
    "lex is of special importance .",
    "for instance , it may be the only polynomial needed to solve some practical problems .",
    "furthermore , in the case when @xmath39 is a finite field , after the univariate polynomial is obtained , it will not be hard to compute all its roots , for one can simplify the original polynomial system by substituting the roots back , and sometimes the new system will become quite easy to solve .",
    "besides the two methods in the previous parts , next the well - known incremental wiedemann algorithm dedicated to computation of the univariate polynomial is briefly recalled and discussed .    in the wiedemann algorithm ,",
    "the dominant part of its complexity comes from construction of the linearly recurring sequence ( @xmath346 ) , while the complexity of the berlekamp ",
    "massey algorithm is relatively low ( @xmath303 ) .",
    "hence the idea of the incremental method is to construct the sequence incrementally to save computation and apply the berlekamp ",
    "massey algorithm to each incremental step .",
    "we start with the linearly recurring sequence @xmath347 $ ] and compute its minimal polynomial with the berlekamp  massey algorithm .",
    "next we proceed step by step with the sequence @xmath348\\ ] ] until the returned polynomial coincides with the one in the previous step .",
    "then this minimal polynomial equals the univariate polynomial @xmath63 we want to compute with a large probability .",
    "suppose @xmath349 .",
    "then the number of steps the method takes is bounded by @xmath350 .",
    "in other words , the method stops at most after the sequence @xmath351 $ ] is handled .",
    "the number of field operations to construct the sequences is @xmath352 , while the total complexity to compute the minimal polynomials with the berlekamp ",
    "massey algorithm is @xmath353 ( note that in the incremental case , the fast berlekamp ",
    "massey with complexity @xmath354 is not applicable ) .",
    "therefore the overall complexity for the incremental wiedemann method to compute the univariate polynomial is @xmath355 . as can be seen here from this complexity , this incremental method is sensitive to the output polynomial @xmath63 .",
    "when the degree @xmath37 is relatively small compared with @xmath1 , this method will be useful .",
    "in the general case when the ideal @xmath13 may not be in shape position , perhaps those methods described in section [ sec : shape ] will not be applicable .",
    "however , we still want to follow the idea of constructing linearly recurring sequences and computing their minimal polynomials with the berlekamp  massey algorithm .",
    "the way to do so is to generalize the linearly recurring sequence to a multi - dimensional linearly recurring relation and apply the bms algorithm to find its minimal generating set .",
    "we first define a @xmath8-dimensional mapping @xmath71 as @xmath356 where @xmath357 is a random vector .",
    "one can easily see that such a mapping is a @xmath8-dimensional generalization of the linearly recurring sequence constructed in the wiedemann algorithm .",
    "note that @xmath358 in the definition of @xmath27 above is the coordinate vector of @xmath359 in the fglm algorithm . as a polynomial @xmath63 in the grbner basis of @xmath13 is of form , and the linear dependency holds , one can verify that @xmath63 satisfies and thus is a polynomial in @xmath79 .",
    "the bms algorithm is precisely the one to compute the grbner basis of @xmath79 w.r.t .  to a term ordering , so one may first construct the mapping @xmath27 via @xmath30 , and attempts to compute the grbner basis of @xmath13 from the bms algorithm applied to @xmath79 .",
    "we remark that @xmath63 is in @xmath79 for any vector @xmath15 .",
    "in fact , the idea above is a multi - dimensional generalization of the wiedemann algorithm .",
    "the minimal polynomial @xmath360 of the krylov sequence @xmath361 $ ] is what the wiedemann algorithm seeks , for @xmath360 directly leads to a solution of the linear equation @xmath362 for a nonsingular matrix @xmath363 and vector @xmath364 .",
    "then a random vector is chosen to convert the sequence to a scalar one @xmath365,\\ ] ] and the berlekmap ",
    "massey algorithm is applied to find the minimal polynomial of this new sequence , in the hope that @xmath360 can be obtained . while the method proposed here converts the mapping from @xmath359 to its coordinate vector in the fglm to a @xmath8-dimensional scalar mapping with a random vector , and then the bms algorithm ( generalization of berlekamp  massey )",
    "is applied to find the minimal polynomial set , which is also the grbner basis , w.r.t .",
    "to a term ordering .",
    "this method for computing the grbner basis of @xmath13 makes full use of the sparsity of @xmath30 , in the same way as how the wiedemann algorithm takes advantage of the sparsity of @xmath363 .",
    "the method is a probabilistic one , also the same as the wiedemann algorithm .",
    "this is reasonable for the ideal @xmath79 derived from the @xmath8-dimensional mapping may lose information of @xmath13 because of the random vector , with @xmath366 .",
    "clearly , when @xmath13 is maximal ( corresponding to the case when @xmath360 in the wiedemann algorithm is irreducible ) , @xmath79 will be equal to @xmath13 .",
    "furthermore , as polynomials in the grbner basis are characterized by the linear dependency in , we are always able to check whether the grbner basis of @xmath79 returned by the bms algorithm is that of @xmath13 .    when the term ordering in the bms algorithm is lex , computation of the univariate polynomial in this method is exactly the same as that described in section [ subsec : shape - normal ] .",
    "this is true because for the lex ordering ( @xmath21 ) , the terms are ordered as @xmath367,\\ ] ] hence the first part of @xmath27 is @xmath368 , and the bms algorithm degenerates to the berlekamp ",
    "massey one .",
    "another fact we would like to mention is that the bms algorithm from coding theory is mainly designed for graded term orderings like drl , for such orderings are _ archimedean _ and have good properties to use in algebraic decoding @xcite .",
    "but it also works for other orderings , though extra techniques not contained in the original literature have to be introduced for orderings dependent on lex ( like lex itself or block orderings which break ties with lex ) .",
    "take the term ordering lex for instance , an extra polynomial reduction is performed after every @xmath369 step to control the size of intermediate polynomials .",
    "this is actually not a problem for orderings like drl , for in that case the leading term of a polynomial will give a bound on the size of terms in that polynomial .",
    "we also have to add an extra termination check for each variable @xmath11 , otherwise the bms algorithm will endlessly follow a certain part of the terms .",
    "for example , all variables in the sequence @xmath370 $ ] are smaller than @xmath371 , and the original bms does not stop handling that infinite sequence by itself .    with all the discussions ,",
    "the algorithm is formulated as follows .",
    "the  termination criteria \" here in this description mean that @xmath88 does not change for a certain number of iterations .",
    "the subfunction @xmath372 performs reduction on @xmath88 so that every polynomial @xmath373 is reduced w.r.t .",
    "@xmath374 , and @xmath375 returns if @xmath88 is the grbner basis of @xmath13 w.r.t .",
    "lex and otherwise .",
    "[ alg : bms ]    compute the canonical basis of @xmath18}/{\\langle g_1 \\rangle}$ ] and multiplication matrices @xmath30    choose @xmath357 at random    @xmath376 ;  @xmath377 $ ] ;  @xmath378 $ ] ;  @xmath379 $ ]    [ line : sakata - end ]    the correctness of algorithm [ alg : bms ] is obvious .",
    "next we prove its termination .",
    "once the loop ends , the algorithm almost finishes .",
    "hence we shall prove the termination of this loop .",
    "clearly when the polynomial set @xmath88 the bms algorithm maintains turns to the grbner basis of @xmath79 w.r.t .",
    "@xmath42 , the current termination criterion , namely @xmath88 keeps unchanged for a certain number of passes , will be satisfied . and a sufficient condition for @xmath88 being the grbner basis is given as theorem [ thm : termination ] below .",
    "part of earlier computation of values of @xmath27 can be recorded to simplify the computation at line [ line : mapping ] .",
    "suppose the value of @xmath27 at a certain term @xmath380 @xmath381 has been computed and recorded .",
    "then we know the value at @xmath382 is @xmath383 for all @xmath51 and @xmath384 commute .",
    "thus the computation of one value of @xmath27 can be achieved within @xmath385 operations , where @xmath29 is the maximal number of nonzero entries in matrices @xmath30 .",
    "next we focus on the case when the target term ordering is lex .",
    "the complexities of the three steps in algorithm [ alg : sakata ] are analyzed below .",
    "\\(1 ) as an extra reduction step is applied after each iteration , the numbers of terms of polynomials in @xmath88 are bounded by @xmath65 .",
    "denote by @xmath31 the number of polynomials in @xmath43 . then checking whether @xmath88 is valid up to @xmath89 needs @xmath386 operations .",
    "\\(2 ) the computation of the new delta set @xmath387 only involves integer computations , and thus no field operation is needed .",
    "\\(3 ) constructing the new polynomial set @xmath388 valid up to @xmath89 requires @xmath386 operations at most .",
    "the readers may refer to @xcite for the way to construct new polynomials .    in step ( 1 ) above , new values of @xmath27 other than @xmath389 may be needed for the verification .",
    "the complexity for computing them is still @xmath385 , and this is another difference from the original bms algorithm for graded term orderings . after the update is complete , a polynomial reduction is applied to @xmath88 to control the size of every polynomial .",
    "this requires @xmath390 operations , where @xmath32 denotes the maximum term number of polynomials in @xmath43 . to summarize ,",
    "the total operations needed in each pass of the main loop in algorithm [ alg : bms ] is @xmath391 hence to estimate the whole complexity of the method , we only need an upper bound for the number of passes it takes in the main loop .",
    "[ thm : loop][thm : loop ] suppose that the input ideal @xmath0}$ ] is of degree @xmath1 .",
    "then the number of passes of the loop in algorithm [ alg : bms ] is bounded by @xmath392 .    before giving the proof ,",
    "we need to introduce some of the proven results on the bms algorithm for preparations .",
    "refer to @xcite for more details .",
    "denote the previous term of @xmath84 w.r.t .",
    "@xmath66 by @xmath393 . given a @xmath8-dimensional array @xmath27 ,",
    "suppose now a polynomial @xmath394}$ ] is valid for @xmath27 up to @xmath393 but not to @xmath84",
    ". then the term @xmath395 is called the _ span _ of @xmath63 and denoted by @xmath396 , while the term @xmath84 is called the _",
    "fail _ of @xmath63 and written as @xmath397 . when @xmath398 , @xmath63 is valid up to every term , and in this case we define @xmath399 .",
    "the following proposition reveals the importance of spans .",
    "@xmath400 .",
    "define @xmath401 } : \\operatorname{fail}(f ) > { { \\bm{}}}{u}\\}$ ] .",
    "such a set is not an ideal but is closed under monomial multiplication : supposing that @xmath402 , we have @xmath403 for every term @xmath404}$ ] .    [ prop : deltaset ] for each @xmath84 , @xmath405 . furthermore , @xmath406 if and only if @xmath407 and @xmath408 .",
    "the above proposition states when a term in @xmath80 is determined , and it is going to be used extensively in the sequel . also from this proposition , one can derive the following termination criteria for the bms algorithm , which are mainly designed for graded term orderings like drl .",
    "[ thm : termination ] let @xmath409 be the largest element of @xmath80 and @xmath410 be the largest element of @xmath411 , where @xmath92 is the grbner basis of @xmath79 w.r.t .  @xmath66 .    1 .   for all @xmath412",
    ", @xmath413 holds .",
    "2 .   for all @xmath414 , the polynomial set @xmath88 the bms algorithm maintains equals @xmath92 .",
    "as explained in section [ subsec : general-1 ] , actually the term ordering lex is not the one of interest in coding theory and does not possess some properties needed for a good order domain .",
    "but the results stated above are still correct .",
    "in particular , theorem [ thm : termination ] indicates when the iteration in the bms algorithm ends .",
    "for graded term orderings like drl , once the termination term is fixed , the whole intermediate procedure in the bms algorithm is also determined . however , for lex it is not the case .",
    "we have to study carefully what happens between the starting term @xmath17 and the termination term indicated by theorem [ thm : termination ] .",
    "next we first illustrate the procedure for a 2-dimensional example derived from cyclic5 .",
    "both the delta set ( marked with crosses ) and the terms handled by the bms algorithm ( with diamonds ) are shown in figure [ fig : process ] .    ) and terms needed ( @xmath415 ) for cyclic5 - 2,width=377 ]    the @xmath409 and @xmath410 in theorem [ thm : termination ] are respectively @xmath416 and @xmath417 .",
    "in fact , the bms algorithm obtains the whole delta set at @xmath418 , and the polynomial set it maintains grows to the grbner basis at @xmath419 , which is also where the algorithm ends .",
    "next we go into some details of what happens when a diamond row is handled by the bms algorithm .",
    "we call a diamond ( or cross ) row the @xmath420th diamond ( or cross ) row if terms in this row are @xmath421",
    ". then for the @xmath152th diamond row , the bms algorithm degenerates to the berlekamp ",
    "massey one to compute the univariate polynomial @xmath98 . here",
    "@xmath422 diamond terms are needed because the minimal polynomial is of degree @xmath423 .    for other rows in figure",
    "[ fig : process ] , from proposition [ prop : deltaset ] , one knows that at a @xmath420th diamond rows with an odd @xmath420 , the delta set does not change .",
    "thus such diamond rows are only bounded by the latest verified row in the delta set .",
    "this is because otherwise a wrong term in the delta set will be added if other diamond terms are handled . for example , the @xmath424rd diamond row is of the same length as the @xmath121st cross row , while the @xmath425th diamond row is as that of the @xmath426nd cross one .    for a @xmath427th diamond row ,",
    "its number is related to two cirteria .",
    "on one hand , again from proposition [ prop : deltaset ] , the @xmath428th cross row is determined while the @xmath427th diamond row is handled in the bms algorithm .",
    "denote by @xmath429 the largest term in the @xmath428th cross row , then terms up to @xmath430 in the @xmath427th diamond row have to be handled to furnish the @xmath428th cross row . on the other hand , the number of @xmath427th diamond row is also bounded by",
    "the latest verified cross row , as the odd diamond ones .",
    "the first criterion is shown by the @xmath431th diamond and the @xmath424rd cross rows , while the @xmath432th diamond row is the result of both criteria .    for a term",
    "@xmath433 $ ] , in the proof below we write it as @xmath434 for simplicity , ignoring the last @xmath435 zero components in the terms .",
    "( of theorem [ thm : loop ] ) suppose @xmath92 is the grbner basis of @xmath79 the bms algorithm computes .",
    "denote the number of terms needed in the bms algorithm to compute @xmath436 $ ] by @xmath437 , and @xmath438 $ ] . from @xmath439",
    "one knows that @xmath80 is a subset of the canonical basis of @xmath18}/i$ ] , thus @xmath440 .",
    "therefore to prove the theorem , it suffices to show @xmath441 is an upper bound .",
    "we induce on the number of variable @xmath200 of @xmath442 $ ] . for @xmath443 ,",
    "the bms algorithm degenerates to the berlekamp ",
    "massey , and one can easily see that @xmath444 holds .",
    "now suppose @xmath445 for @xmath446 .",
    "next we prove @xmath447 .",
    "as previously explained , in the terms to compute @xmath448 $ ] , the terms @xmath449 are determined by two factors : terms @xmath450 in @xmath451 , and the latest verified terms in the delta set .",
    "first we ignore those @xmath449 terms determined by the latter criterion , and denote by @xmath452 all the remaining ones in @xmath453 $ ] .",
    "we claim that @xmath454 is bounded by @xmath455 .    from theorem [ thm : termination ]",
    ", we can suppose there exists some integer @xmath456 , such that @xmath457 where @xmath458    clearly @xmath459 , and @xmath460 .",
    "one can see that @xmath461 is bounded by either @xmath462 ( if @xmath463 ) or @xmath464 .",
    "furthermore , @xmath465 is bounded by @xmath466 , the number of the latest verified delta set .",
    "hence we have @xmath467 which leads to @xmath468 .",
    "now we only need to show the number of all the previously ignored terms , denoted by @xmath469 , is bounded by @xmath470 .",
    "suppose @xmath471 , where @xmath472 is a set of indexes with @xmath473 in , and @xmath474 then for each @xmath200 , @xmath475 is bounded by the number of the latest verified delta set , say @xmath476 . thus the conclusion can be proved if one notices @xmath477 .",
    "[ prop : complexity general ] assume that @xmath30 are constructed .",
    "the complexity for algorithm [ alg : bms ] to complete the change of ordering is bounded by @xmath28 , where @xmath29 is the maximal number of nonzero entries in the multiplication matrices @xmath30 , and @xmath31 and @xmath32 are respectively the number of polynomials and the maximal term number of all polynomials in the resulting grbner basis .",
    "consider the ideal @xmath478 $ ] defined by its drl grbner basis ( @xmath479 ) @xmath480 here @xmath481/{\\langle g_1 \\rangle}$ ] is of dimension 12 .",
    "its basis , and further the multiplication matrices @xmath23 and @xmath162 , can be computed accordingly .",
    "now we want to compute the grbner basis @xmath43 of @xmath13 w.r.t .",
    "lex . with a vector @xmath482 generated at random ,",
    "the @xmath426-dimensional mapping @xmath27 is constructed .",
    "then @xmath369 is applied term by term according to the lex ordering , with @xmath90 and the polynomial set @xmath88 valid up to @xmath84 shown in table [ tab : sakata - exp ] . for example , at the term @xmath483 , the polynomial @xmath484 is not valid up to @xmath483 .",
    "then the delta set is updated as @xmath485 , and @xmath88 is reconstructed such that the new polynomial @xmath486 is valid up to @xmath483 .",
    "the first polynomial in @xmath43 : @xmath487 is obtained at the term @xmath488 .",
    "next @xmath369 is executed to compute other members of @xmath79 according to the remaining term sequence @xmath489 @xmath490 $ ] , until the other polynomial in @xmath43 : @xmath491 is obtained at @xmath492 . now",
    "the main loop of algorithm [ alg : bms ] ends .",
    "then one can easily verify that @xmath493 and @xmath494/{\\langle g_1 , g_2 \\rangle})=12 $ ] , thus @xmath495 .",
    "here is an example where this method fails .",
    "let @xmath496 @xmath497 $ ] .",
    "then the ideal @xmath498 is 0-dimensional with degree @xmath499 .",
    "it is easy to see that @xmath92 is grbner basis w.r.t .",
    "both drl and lex . starting from @xmath92 as a grbner basis w.r.t .",
    "drl , the method based on the bms algorithm to compute the grbner basis w.r.t .",
    "lex will not be able to return the correct grbner basis , even the base field itself is quite large and different random vectors @xmath15 are tried .",
    "in this section , we combine the algorithms presented in the previous parts of this paper as the following integrated top - level algorithm , which performs the change of ordering of grbner bases to lex .",
    "@xmath500    we would like to mention that to integrate these three algorithms , one needs to skip some overlapped steps in the three algorithms , like computation of the canonical basis and the multiplication matrices , and the choice of random vectors , etc .",
    "if one does not seek for the grbner basis of @xmath5 , that is to say , the multiplicities of the zeros are needed , then the deterministic invariant should be omitted .    thanks to the feasibility in each algorithm to test whether the computed polynomial set is the correct grbner basis , this top - level algorithm will automatically select which algorithm to use according to the input , until the original fglm one is called if all these algorithms fail .",
    "it is also a deterministic algorithm , though both the wiedemann algorithm and the bms - based method will introduce randomness and probabilistic behaviors to the individual algorithms .    for an ideal in shape position ,",
    "the probability for algorithm [ alg : shapen ] to compute the correct grbner basis is the same as that of computing the correct minimal polynomial in the wiedemann algorithm for one choice of a random vector , which has been analyzed in @xcite .",
    "when algorithm [ alg : shapen ] fails , the one based on the deterministic wiedemann algorithm can tell us for sure whether the input ideal is in shape position , and return the grbner basis of @xmath5 .",
    "however , the probability for the bms - based method to return the correct grbner basis is still unknown .",
    "in the previous description and complexity analyses of all the algorithms , the multiplication matrices @xmath30 are assumed known . in this section , for generic polynomial systems and the term ordering drl ,",
    "the multiplication matrix @xmath23 is exploited , on its sparsity and cost for construction .",
    "we are able to give an explicit formula to compute the number of dense columns in @xmath23 , and we also analyze the asymptotic behavior of this number , which further leads to a finer complexity analysis for the change of ordering for generic systems . the term ordering is preassigned as drl in this section without further notification .      given the grbner basis @xmath92 of a @xmath152-dimensional ideal @xmath13 w.r.t .",
    "drl , let @xmath44 $ ] be the canonical basis of @xmath18}/ { \\langle g \\rangle}$ ] , and @xmath501 .",
    "the three cases of the multiplication @xmath502 for the construction of the @xmath200th column of @xmath384 in fglm are reviewed below @xcite .    1 .",
    "the term @xmath502 is in @xmath47 : the coordinate vector of @xmath503 is @xmath504 , where the position of @xmath121 is the same as that of @xmath502 in @xmath47 ; [ item : t1 - 1 ] 2 .",
    "the term @xmath502 is in @xmath505 : the coordinate vector can be obtained easily from the polynomial @xmath506 such that @xmath507 ; [ item : t1 - 2 ] 3 .   otherwise : the normal form of @xmath502 w.r.t .",
    "@xmath92 has to be computed to get the coordinate vector .",
    "[ item : t1 - 3 ]    obviously , the @xmath200th column of @xmath384 is sparse if case ( a ) occurs , thus a dense column can only come from cases ( b ) and ( c ) .",
    "furthermore , the construction for a column will not be free of arithmetic operations only if that column belongs to case ( c ) . as a result , we are able to connect the cost for construction of the multiplication matrices with the numbers of dense columns in them .    [ prop : construction ] denote by @xmath508 the number of dense columns in the multiplication matrix @xmath51 . then the matrices @xmath30 can be computed within @xmath509 arithmetic operations .",
    "direct result from the proof of proposition 3.1 in @xcite .    as shown in section [ sec : shape ] , among all multiplication matrices",
    ", @xmath23 is the most important one , and it is also of our main interest .",
    "however , for an arbitrary ideal , now we are not able to analyze the cost to construct @xmath23 by isolating it from the others in proposition [ prop : construction ] , for the analysis on @xmath23 needs information from the other matrices too .    in the following parts we first focus on generic sequences which impose stronger conditions on @xmath23 so that the analyses on it become feasible .",
    "we show that the construction of @xmath23 for generic sequences is free and present finer complexity results based on an asymptotic analysis .",
    "let @xmath510 $ ] be a sequence of polynomials in @xmath18}$ ] of degree @xmath511 . if @xmath512 , we call it a sequence of degree @xmath37",
    ". we are interested in the properties of the multiplication matrices for the ideal generated by @xmath513 if @xmath514 are chosen  at random \" .",
    "such properties can be regarded generic in all sequences .",
    "more precisely , let @xmath515 be the set of all sequences of @xmath8 polynomials of degree @xmath511 , viewed as an affine space with the coefficients of the polynomials in the sequences as the coordinates .",
    "then a property of such sequences is _ generic _ if it holds on a zariski - open in @xmath515 .",
    "next for simplicity , we will say some property holds  for a generic sequence \" if it is a generic one , and also @xmath513 is  a generic sequence \" if its properties of our interest are generic .    for a generic sequence",
    "@xmath516 $ ] , its properties concerning the grbner basis computation , in particular the canonical basis , are the same as @xmath517 $ ] , where @xmath518 is the homogeneous part of @xmath109 of the highest degree . that is to say",
    ", we only need to study homogeneous generic sequences , which are also those studied in the literature . hence in the following part of this section , a generic sequence",
    "is further assumed homogeneous .    since we restrict to the situation where the number of polynomials is equal to that of variables ,",
    "a generic sequence is a _ regular _",
    "one @xcite .",
    "we first recall the well - known characterization of a regular sequence via its hilbert series .",
    "[ thm : hilberts ] let @xmath519 $ ] be a sequence in @xmath18}$ ] with @xmath520 .",
    "then it is regular if and only if its hilbert series is @xmath521    let @xmath513 be a generic sequence of degree @xmath37",
    ". then we know its hilbert series is @xmath522 from which one can easily derive that the degree of @xmath523 is @xmath524 , and that the greatest total degree of terms in the canonical basis is @xmath525 .",
    "grbner bases of generic sequences w.r.t .",
    "drl have been studied in @xcite .",
    "a term ideal @xmath526 is said to be a _",
    "weakly reverse lexicographic ideal _ if the following condition holds : if @xmath527 is a minimal generator of @xmath526 , then @xmath526 contains every term of the same total degree as @xmath528 which is greater than @xmath528 w.r.t .  some term ordering . for the term ordering drl , we have the following conjecture due to moreno - socas .",
    "( @xcite )   _ let @xmath39 be an infinite field , and @xmath510 $ ] a generic sequence in @xmath18}$ ] with @xmath520 .",
    "then @xmath529 , the leading term ideal of @xmath523 w.r.t .",
    "drl , is a weakly reverse lexicographical ideal . _",
    "the moreno - socas conjecture is proven true for the codimension @xmath426 case and for some special ideals for the codimension @xmath424 case @xcite .",
    "it has been proven that this conjecture implies the frberg conjecture on the hilbert series of a generic sequence , which is well - known and widely acknowledged true in the symbolic computation community @xcite .",
    "[ prop : conjecture - prop ] use the same notations as those in the moreno - socas conjecture . if this conjecture holds , then for a term @xmath530 , any term @xmath531",
    "such that @xmath532 and @xmath533 is also in @xmath529 .",
    "if @xmath84 is a minimal generator of @xmath529 , then the conclusion is a direct result from the moreno - socas conjecture .",
    "else there exists one minimal generator @xmath534 such that @xmath535 . as for any @xmath238 such that @xmath536 and @xmath537 , we know @xmath538 .",
    "then we can always find a term @xmath539 such that @xmath540 .",
    "for example , construct @xmath541 .",
    "if @xmath542 is a term , then it suffices ; otherwise the biggest term @xmath543 such that @xmath544 will work .",
    "this ends the proof .",
    "as proposition [ prop : conjecture - prop ] implies , the moreno - socas conjecture imposes a stronger requirement on the structure of the terms in @xmath529 for a generic sequence @xmath513 . for the bivariate case ,",
    "once a term @xmath84 is known to be an element in @xmath529 , the terms in @xmath529 determined by it are illustrated in figure [ fig : conjecturenew ] ( left ) , and furthermore , in the right figure the shape all terms in @xmath529 form .",
    "( 11,0 ) ; ( 0,0 ) ",
    "( 0,11 ) ; in 0, ...",
    ",10 ( , 1pt ) ",
    "( , -3pt ) node[anchor = north ] ; in 0, ... ,10 ( 1pt , )  ( -3pt , ) node[anchor = east ] ; at ( 11,0 ) @xmath545 ; at ( -0.5,11 ) @xmath546 ; in 7, ...",
    ",10(0 - 0.15,-0.15 ) rectangle + ( 0.3,0.3 ) ; in 6, ...",
    ",10(1 - 0.15,-0.15 ) rectangle + ( 0.3,0.3 ) ; in 5, ...",
    ",10(2 - 0.15,-0.15 ) rectangle + ( 0.3,0.3 ) ; in 4, ...",
    ",10(3 - 0.15,-0.15 ) rectangle + ( 0.3,0.3 ) ; in 3, ...",
    ",10(4 - 0.15,-0.15 ) rectangle + ( 0.3,0.3 ) ; in 3, ...",
    ",10(5 - 0.15,-0.15 ) rectangle + ( 0.3,0.3 ) ; ( 5,2 ) circle ( 0.1 cm ) ; in 6, ... ,10 in 2, ... ,10(-0.15,-0.15 ) rectangle + ( 0.3,0.3 ) ; ( 0,7 )  ( 5,2 )  ( 10,2 ) ;       ( 0,0 )  ( 11,0 ) ; ( 0,0 )  ( 0,11 ) ; in 0, ... ,10 ( , 1pt ) ",
    "( , -3pt ) node[anchor = north ] ; in 0, ... ,10 ( 1pt , )  ( -3pt , ) node[anchor = east ] ; at ( 11,0 ) @xmath545 ; at ( -0.5,11 ) @xmath546 ; in 6, ...",
    ",10(0 - 0.15,-0.15 ) rectangle + ( 0.3,0.3 ) ; in 5, ...",
    ",10(1 - 0.15,-0.15 ) rectangle + ( 0.3,0.3 ) ; in 4, ...",
    ",10(2 - 0.15,-0.15 ) rectangle + ( 0.3,0.3 ) ; in 3, ...",
    ",10(3 - 0.15,-0.15 ) rectangle + ( 0.3,0.3 ) ; in 3, ...",
    ",10(4 - 0.15,-0.15 ) rectangle + ( 0.3,0.3 ) ; in 3, ...",
    ",10(5 - 0.15,-0.15 ) rectangle + ( 0.3,0.3 ) ; in 7, ... ,10(-0.15,1 - 0.15 ) rectangle + ( 0.3,0.3 ) ; ( 10 - 0.15,0 - 0.15 ) rectangle + ( 0.3,0.3 ) ; ( 0,5 ) circle ( 0.1 cm ) ; ( 1,4 ) circle ( 0.1 cm ) ; ( 2,3 ) circle ( 0.1 cm ) ; ( 5,2 ) circle ( 0.1 cm ) ; ( 6,1 ) circle ( 0.1 cm ) ; ( 9,0 ) circle ( 0.1 cm ) ; in 6, ... ,10 in 2, ... ,10(-0.15,-0.15 ) rectangle + ( 0.3,0.3 ) ; ( 0,5 )  ( 2,3 )  ( 4,3 )  ( 6,1 ) ",
    "( 9,0 ) ;    the base field in the moreno - socas conjecture is restricted infinite . according to our preliminary experiments on randomly generated sequences over fields of large cardinality",
    ", we find no counterexample of this conjecture . as a result",
    ", we will consider it true and use it directly .",
    "the following variant of moreno - socas conjecture , which is more convenient in our setting , can be derived easily from proposition [ prop : conjecture - prop ] .",
    "_ let @xmath39 be an infinite field , @xmath547}$ ] a generic sequence of degree @xmath37 , and @xmath47 the canonical basis of @xmath18}/{\\langle p \\rangle}$ ] w.r.t .",
    "denote by @xmath548 the set of terms of total degree @xmath428 in @xmath47 .",
    "then for @xmath549 , @xmath548 consists of the first @xmath550 smallest terms in all terms of total degree @xmath428 .",
    "_       let @xmath551}$ ] be a generic sequence , and @xmath92 the grbner basis of @xmath523 .",
    "then polynomials in @xmath92 can be assumed dense ( in the case when @xmath39 is of characteristic @xmath152 or of large cardinality ) . as the number of dense columns in @xmath23 will directly lead to a bound on the number of nonzero entries in @xmath23 , the study of @xmath23 sparsity",
    "is reduced to that of how many cases of ( 2 ) and ( 3 ) happen . combining the hilbert series of a generic sequence and our variant of moreno - socas conjecture , we are able to give the counting of the dense columns in @xmath23 .",
    "[ thm : dense ] let @xmath39 , @xmath513 , @xmath47 and @xmath548 be the same as those in the moreno - socas conjecture variant . if the moreno - socas conjecture holds , then the number of dense columns in the multiplication matrix @xmath23 is equal to the greatest coefficient in the expansion of @xmath552 .",
    "let @xmath553 , and denote by @xmath554 be set of all terms in @xmath18}$ ] of total degree @xmath428 .",
    "suppose that @xmath84 is the @xmath555th smallest term in @xmath556 .",
    "then @xmath557 is still the @xmath555th smallest term in @xmath558 .",
    "hence from the conjecture variant , if @xmath559 , then for every @xmath560 , @xmath557 is still in @xmath561 .",
    "therefore it belongs to case ( 1 ) we reviewed in section [ subsec : sparsity1 ] , and the corresponding column in @xmath23 is a sparse one . if @xmath562 , we will have @xmath563 dense columns which come from the fact that they belong to case ( 2 ) or ( 3 ) .    as the coefficients in the the expansion of @xmath552 are symmetric to the central coefficient ( or the central two when @xmath525 is odd )",
    ", the condition @xmath562 holds for the first time when @xmath564 , the index of the central term ( or of the second one in the central two terms ) .",
    "then the number of dense columns is @xmath565    that ends the proof , for such a coefficient @xmath566 is exactly the greatest one .    the hilbert series is usually used to analyze the behaviors of grbner basis computation , for example the regularity of the input ideal . as the leading terms of polynomials in the grbner basis and the canonical basis determine each other completely , it is also natural to have proposition [ thm : dense ] , which links the canonical basis and hilbert series .    when @xmath567 , the number of dense columns in @xmath23 is the binomial coefficient @xmath568 , where @xmath569 for the case @xmath570 , such the greatest coefficient is called the _ central trinomial coefficient_.    [ cor : sparsity ] if the moreno - socas conjecture holds , then the percentage of nonzero entries in @xmath23 for a generic sequence of degree @xmath37 is bounded by @xmath571 , where @xmath572 is the number of dense columns computed from proposition [ thm : dense ] .",
    "the number of nonzero entries in the dense columns is bounded by @xmath573 , and that in the other columns is smaller than @xmath1 .    assuming the correctness of the moreno - socas conjecture",
    ", we can take a step forward from proposition [ thm : dense ] .",
    "that is , we show case ( 3 ) will not occur during the construction of @xmath23 .",
    "follow the notations in the moreno - socas conjecture .",
    "if the conjecture holds , then for any term @xmath574 , @xmath575 is either not in @xmath529 or a minimal generator of @xmath529 .",
    "suppose @xmath576 is not a minimal generator .",
    "we will draw a contradiction by showing @xmath577 under such an assumption .",
    "without loss of generality , we can assume each @xmath578 for @xmath76 , otherwise we can reduce to the @xmath314 case by ignoring the @xmath200th component of @xmath84 . as @xmath557 is not a minimal generator ,",
    "there exist a @xmath579 such that @xmath580 is in @xmath529 .",
    "the case when @xmath581 is trivial .",
    "otherwise , since @xmath582 and @xmath583 , by proposition [ prop : conjecture - prop ] we know @xmath577 .",
    "[ cor : case2only ] if the moreno - socas conjecture holds , then the number of dense columns in @xmath23 for generic sequences is equal to the cardinality of @xmath584 , where @xmath40 is the grbner basis w.r.t .",
    "drl .    by corollary [ cor : case2only ] , for generic sequences , to construct @xmath23 one only needs to find the leading term of which polynomial in @xmath40 is a given term @xmath575 .",
    "thus we can conclude that the construction of @xmath23 is free of arithmetic operations . even for real implementations ,",
    "the cost for constructing @xmath23 is also quite small compared with that for the change of ordering ( see section [ sec : exp ] for the timings ) .",
    "bearing in mind that the ideal generated by a generic sequence is in shape position , we know the complexity in theorem [ prop : complexity shape ] is indeed the complete complexity for the change of ordering for generic sequences , including construction of @xmath23 , the only multiplication matrix needed .",
    "next we study the asymptotic behavior of the number of dense columns in @xmath23 for a generic sequence of degree @xmath37 , with @xmath8 fixed and @xmath37 increasing to @xmath38 .",
    "these results are mainly derived from a more detailed asymptotic analysis of coefficients of the hilbert series of semi - regular systems in @xcite , where standard methods in asymptotic analysis , like the saddle - point and coalescent saddle points methods , are applied .",
    "the target of this subsection is to find the dominant term of the greatest coefficient in the expansion of the hilbert series @xmath585 in , as @xmath37 tends to @xmath38 and @xmath8 is fixed .",
    "first one writes the @xmath456th coefficient @xmath586 of @xmath585 with the cauchy integration : @xmath587    with @xmath588 and @xmath589 , @xmath586 becomes the form convenient to the asymptotic analysis @xmath590 suppose the greatest coefficient in @xmath585 comes from the @xmath572th term .",
    "since we are interested in the asymptotic behavior , we can assume @xmath591 .",
    "as a special case of ( * ? ? ?",
    "* lemma 4.3.1 ) , we have the following result .",
    ". then the dominant term of @xmath592 is @xmath593 where @xmath594 , and @xmath595 is the positive real root of @xmath596 .",
    "furthermore , @xmath595 tends to @xmath121 as @xmath37 increases to @xmath38 .    to prove the fact that the positive real root @xmath595 of @xmath596 tends to @xmath121",
    ", one needs to use the equality @xmath591 .",
    "other parts of the proof are the same as those in ( * ? ? ?",
    "* section 4.3.2 ) .",
    "next we investigate the value of @xmath597 and @xmath598 in the dominant part of @xmath592 as @xmath595 tends to @xmath121 .",
    "set @xmath599 .",
    "then @xmath600 noting that @xmath601 , @xmath602 , and @xmath603 , we have @xmath604 with the easily obtained equality @xmath605 , we have the following asymptotic estimation of @xmath592 .    [ prop : m0 ] let @xmath8 be fixed . as @xmath37 tends to @xmath38 , @xmath606 .",
    "this asymptotic estimation of the greatest coefficient in @xmath585 accords with the theoretical one .",
    "figure [ fig : asymp ] shows the number of dense columns derived from both proposition [ thm : dense ] and corollary [ prop : m0 ] . as can be shown from this figure , the asymptotic estimation is good , even when @xmath37 is small .     for @xmath607 and @xmath608,title=\"fig:\",width=226 ]   for @xmath607 and @xmath608,title=\"fig:\",width=226 ]    [ cor : random - complexity ] let @xmath8 be fixed . as @xmath37 tends to @xmath38 , if the moreno - socas conjecture holds , then the following statements hold :    1 .",
    "the percentage of nonzero entries in @xmath23 is @xmath609 ; 2 .   for a generic sequence of degree @xmath37 ,",
    "the complexity in theorem [ prop : complexity shape ] is @xmath610 .",
    "as corollary [ cor : random - complexity ] shows , for a generic sequence , the multiplication matrix @xmath23 become sparser as @xmath37 increases .",
    "furthermore , the complexity of algorithm [ alg : shapen ] is smaller in both the exponent and constant compared with fglm .    here",
    "we only consider the case when @xmath8 is fixed and @xmath37 tends to @xmath38 , while the asymptotic behaviors of the dual case when @xmath37 is fixed and @xmath8 tends to @xmath38 have been studied in @xcite for the special value @xmath567 .",
    "the first method for the shape position case , namely algorithm [ alg : shapen ] , has been implemented in c over fields of characteristic @xmath152 and finite fields . a preliminary implementation of the bms - based method for the general case has been done in magma over large finite fields .",
    "benchmarks are used to test the correctness and efficiency of these two methods .",
    "all the experiments were made under scientific linux os release 5.5 on 8 intel(r ) xeon(r ) cpus e5420 at 2.50 ghz with 20.55 g ram .",
    "table [ tab : time ] records the timings ( in seconds ) of our implementations of @xmath611 and algorithm [ alg : shapen ] applied to benchmarks including theoretical ones like katsura systems ( katsura@xmath8 ) and randomly generated quadratic polynomial systems of @xmath8 variables ( random@xmath8 ) , and practical ones like minrank problems from cryptography  @xcite and algebraic cryptanalysis of some curve - based cryptosystem ( edwards ) . in this table",
    ", @xmath1 denotes the degree of the input ideal , and the column `` density '' means the percentage of nonzero entries in the multiplication matrix @xmath23 .",
    "the instances marked with   are indeed not in shape position , and the timings for such instances only indicate those of computing the univariate polynomial in the lex grbner basis .",
    "the performances of the drl grbner basis computation and fglm in magma ( version 2 - 17 - 1 ) and singular ( version 3 - 1 - 2 ) , together with the speedup factors of our implementation for the change of ordering , are also provided .    as shown by this table ,",
    "the current implementation of algorithm [ alg : shapen ] outperforms the fglm implementations in magma and singular .",
    "take the random13 instance for example , the fglm implementations in magma and singular take @xmath612 and @xmath613 seconds respectively , while the new implementation only needs @xmath35 seconds .",
    "this is around @xmath36 and @xmath614 times faster .",
    "such an efficient implementation is now able to manipulate ideals in shape position of degree greater than @xmath2 .",
    "it is also important to note that with this new algorithm , the time devoted to the change of ordering is somehow of the same order of magnitude as the drl grbner basis computation .",
    "table [ tab : sakata - time ] illustrates the performances of algorithm [ alg : bmsbased ] for the general case . as currently this method",
    "is only implemented preliminarily in magma , only the number of field multiplications and other critical parameters are recorded , instead of the timings .",
    "benchmarks derived from cyclic 5 and 6 instances are used .",
    "instances with ideals in shape position ( marked with ) are also tested to demonstrate the generality of this method .",
    "besides @xmath8 and @xmath1 denoting the number of variables and degree of the input ideal , the columns  mat density \" and  poly density \" denote the maximal percentage of nonzero entries in the matrices @xmath30 and the density of resulting grbner bases respectively .",
    "the following 4 columns record the numbers of passes in the main loop of algorithm [ alg : bmsbased ] , matrix multiplications , reductions and field multiplications .    as one",
    "can see from this table , the numbers of passes accord with the bound derived in theorem [ thm : loop ] , and the number of operations is less than the original fglm algorithm for cyclic - like benchmarks .",
    "however , for instances of ideals in shape position , this method works but the complexity is not satisfactory .",
    "this is mainly because the resulting grbner bases in these cases are no longer sparse , and thus the reduction step becomes complex .",
    "fortunately , in the top - level algorithm [ alg : main ] , it is not common to handle such ideals in shape position with this method",
    ".      the authors would like to thank daniel augot for his very helpful comments on the incremental wiedemann algorithm and literatures about the bms algorithm .",
    "this work is supported by the exacta grant of the french national research agency ( anr-09-blan-0371 - 01 ) and the national science foundation of china ( nsfc 60911130369 ) , the hpac grant of the french national research agency , and the ecca project by the sino - french laboratory for computer science , automation and applied mathematics .",
    "m.  bardet , j .- c .",
    "faugre , and b.  salvy . on the complexity of grbner basis computation of semi - regular overdetermined algebraic equations . in _ international conference on polynomial system solving - icpss _ , pages 7175 , 2004 .",
    "j.  buchmann , a.  pyshkin , and r .-",
    "a zero - dimensional grbner basis for aes-128 . in matthew robshaw , editor , _ fast software encryption _ , volume 4047 of _ lncs _ , pages 7888 .",
    "springer , berlin / heidelberg , 2006 .              j .- c .",
    "faugre , m.  safey el din , and p .- j .",
    "computing loci of rank defects of linear matrices using grbner bases and applications to cryptology . in _ proceedings of issac 2010 _ , pages 257264 .",
    "acm press , 2010 ."
  ],
  "abstract_text": [
    "<S> given a zero - dimensional ideal @xmath0}$ ] of degree @xmath1 , the transformation of the ordering of its grbner basis from drl to lex is a key step in polynomial system solving and turns out to be the bottleneck of the whole solving process . </S>",
    "<S> thus it is of crucial importance to design efficient algorithms to perform the change of ordering .    </S>",
    "<S> the main contributions of this paper are several efficient methods for the change of ordering which take advantage of the sparsity of multiplication matrices in the classical fglm algorithm . combing all these methods </S>",
    "<S> , we propose a deterministic top - level algorithm that automatically detects which method to use depending on the input . as a by - product </S>",
    "<S> , we have a fast implementation that is able to handle ideals of degree over @xmath2 . </S>",
    "<S> such an implementation outperforms the magma and singular ones , as shown by our experiments .    </S>",
    "<S> first for the shape position case , two methods are designed based on the wiedemann algorithm : the first is probabilistic and its complexity to complete the change of ordering is @xmath3 , where @xmath4 is the number of nonzero entries of a multiplication matrix ; the other is deterministic and computes the lex grbner basis of @xmath5 via chinese remainder theorem . </S>",
    "<S> then for the general case , the designed method is characterized by the berlekamp  massey  </S>",
    "<S> sakata algorithm from coding theory to handle the multi - dimensional linearly recurring relations . </S>",
    "<S> complexity analyses of all proposed methods are also provided .    </S>",
    "<S> furthermore , for generic polynomial systems , we present an explicit formula for the estimation of the sparsity of one main multiplication matrix , and prove its construction is free . with the asymptotic analysis of such sparsity , we are able to show for generic systems the complexity above becomes @xmath6 .    </S>",
    "<S> grbner bases , change of ordering , zero - dimensional ideals , sparse matrix , wiedemann algorithm , bms algorithm </S>"
  ]
}
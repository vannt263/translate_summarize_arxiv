{
  "article_text": [
    "suppose that one wishes to implement two channels of communication ( e.g. ,  electrical wires that carry encoded bit - streams ) , one between points @xmath0 and @xmath1 , the other between @xmath2 and @xmath3 .",
    "as the reader may have guessed , @xmath0 is positioned to the north , @xmath2 to the east , and so on ; consequently , given the desire that neither channel skirt around the other ( rather , we should like shorter , more direct lines of communication ) , the channels must _ cross_.    in three spatial dimensions , this is unproblematic : one has available not only ` north / south ' and ` east / west ' but also ` up / down ' , which confers headroom enough for one channel to pass over the other , carried by a bridge for example . in two dimensions ,",
    "however , the channels not merely cross but moreover _ intersect _ ; and it is not at all clear that the channels respective signals can survive this intersection ( if the channels are electrical wires , for example , then their intersection implies electrical _ connection _ , whence it is no longer possible to determine on which channel a current originated ) .",
    "thus , one naturally asks : _ is it possible , in a suitable , two - dimensional model , to cross two channels in such a way that each successfully conveys its data , in particular without problematic interference at the intersection ?",
    "_    it is upon this question , which we call the _ cross question _ ( _ cq _ ) , that we focus in the present paper .",
    "our answer is affirmative , and , moreover , our proof constructive : we exhibit cellular automata ( for it is these that we adopt as our formalism ) that successfully cross channels without impairing capacity . we consider also the efficiency ( according to several measures ) of our automata .    as a historical note ,",
    "we point out that this work was originally inspired by the low - level description of neural activity given in @xcite , in which a figure ( reproduced here as fig .",
    "[ fig : geb ] ) appears with the caption , `` n this schematic diagram , neurons are imagined as laid out as dots in one plane .",
    "two overlapping pathways are shown in different shades of gray .",
    "it may happen that two independent `` neural flashes '' simultaneously race down these two pathways , passing through one another like two ripples on a pond s surface  ''",
    "no further consideration is given in @xcite to the details of how these signals pass through each other .",
    "neither should further explanation be expected : the restriction to two dimensions is made purely to allow the depiction on paper of a ( three - dimensional ) phenomenon in which neurons are in fact free to bend around each other and so to cross without intersecting .",
    "nonetheless , fig .",
    "[ fig : geb ] inspires the present work by prompting the ( intrinsically two - dimensional ) cq , which we answer below .",
    "one may wonder , given that real - life neurons have available to them a third dimension , whether there is any need to consider the cq ; we claim that there is : aside from the question s academic interest , we note in sect .",
    "[ sec : conapp ]  practical contexts in which restriction to two dimensions is natural and beneficial .      so as to formalize the ideas above , and",
    "in particular so as to be able to state more rigorously the cq , we model communication channels as _ cellular automata _ ; more precisely , we take as our model cellular automata augmented with the ability to accept _ input _ ( specifically , the messages to be carried by the channels so modelled)cf .",
    "we give now the relevant definitions .",
    "a _ cellular automaton _ is a tuple @xmath4 satisfying the following .    @xmath5 is a regular lattice of _",
    "cells_.    @xmath1 is a finite set of _",
    "states_.    @xmath6 is a tuple ,  ,  @xmath7 is arbitrary , but is nonetheless fixed for use in definition  [ def : caconf ] . ] of finitely many _ neighbourhood offsets _ ( which are distinct ) , where , for each offset @xmath8 and each cell @xmath9 , @xmath10 is a _",
    "neighbour _ of @xmath11 .",
    "@xmath0 contains amongst its coordinates the additive identity of @xmath5 , whence each cell has itself as a neighbour .",
    "@xmath12 is a _ transition function_.    [ def : caconf ] suppose that @xmath5 , @xmath1 , @xmath0 and @xmath13 are as above .",
    "configuration _ is a function @xmath14 assigning to each cell a state ; the subscript @xmath15 indexes ( discretely modelled ) time .",
    "the initial configuration @xmath16 must be specified as part of the automaton s description ; thereafter , each configuration @xmath17 is determined by the last , @xmath18 , by way of the transition function @xmath13 : for each cell @xmath9 and each time @xmath15 , @xmath19 ( recall the fixed order @xmath20 ,  ,  @xmath7 ) .    in modelling communication channels as cellular automata , it is convenient for us to modify the above definitions as follows .",
    "[ pt : modsubset ] we allow the cells to form a _ subset _ of a lattice , rather than necessarily the whole lattice .    [ pt : modvary ] we allow the transition function to _ vary _ from cell to cell and from time - step to time - step .    [ pt : modinput ] crucially , we allow an automaton to accept _ input _ ( the messages to be carried by the channels ) ; to this end , we equip the automaton with _",
    "sources _ : cells not governed by transition functions , but rather to which are supplied messages .",
    "consequently , we have the following .",
    "a _ cellular automaton with sources _ ( _ cas _ ) is a tuple @xmath21 satisfying the following .",
    "@xmath5 is a subset of some lattice ( @xmath22 , say ) ; elements of @xmath5 are _ cells _",
    "modification  ( [ pt : modsubset ] ) above).it is often desirable to impose the condition that @xmath5 be finite , though this stipulation is not necessary in order that the claims of the present paper hold ( of course , the claims still hold when such restriction is made ) . ]",
    "@xmath23 is the set of _ sources _ of @xmath24 ( cf .",
    "modification  ( [ pt : modinput ] ) above ) .",
    "@xmath1 is a finite set of _ states _ , and contains a distinguished element _ blank _ , denoted ` ' .",
    "messages to be carried by our channels are composed of states in @xmath1 ; let us suppose for convenience when transcribing messages , then , that @xmath25 .",
    "@xmath6 is a tuple of finitely many",
    "_ neighbourhood offsets _",
    "( which are distinct ) , where , for each offset @xmath8 and each cell @xmath9 , @xmath26 is a _ lattice - neighbour _ of @xmath11 ; if , furthermore , @xmath10 , then @xmath27 is a _",
    "neighbour _ of @xmath11 .    for each non - source cell @xmath28",
    ", @xmath29 is the _ transition function _ for @xmath11 . `",
    "@xmath30 ' represents time , thus allowing the transition function to vary not only from cell to cell ( hence the subscript ` @xmath11 ' ) but also from time - step to time - step ( cf .",
    "modification  ( [ pt : modvary ] ) above).note that , for present purposes , we require only ( finitely representable ) transition functions @xmath31 that depend upon the _ parity _ ( an element of @xmath32 ) , rather than the value ( an element of @xmath30 ) , of time ; thus we avoid prohibitively ( or even infinitely ) complicated and memory - hungry descriptions of transition functions .",
    "further , recall from footnote  [ fn : lfin ] that one may suppose @xmath5 to be finite , whence he need consider only finitely many distinct transition functions . ]",
    "let @xmath21 be a cas .",
    "a _ message _ ( in @xmath1 ) is a function @xmath33 ; @xmath34 is the message s _ length _ ( denoted @xmath35 ) .",
    "we often describe messages in sequence form @xmath36 ,  ,  @xmath37 .",
    "let @xmath38 be the set of messages ( of any length ) in @xmath1 .",
    "an _ input _ for @xmath24 is a map @xmath39 assigning to each source a message .    a _ configuration _ is a function @xmath40 assigning to each cell a state ; the subscript @xmath15 discretely indexes time , whilst @xmath41 is an input .    the initial configuration @xmath42 is defined such that , for all sources @xmath43 , @xmath44 , and , for all non - sources @xmath28 , @xmath42 maps @xmath11 to an arbitrary element of @xmath1 ( so , as with standard cellular automata , the initial configuration  in particular of the non - source cells  is a ` free variable ' that forms part of the system s description ) .",
    "below , we frequently encounter the initial configuration mapping each non - source cell to the blank state ; we call this _",
    "-initialization_.    subsequent configurations @xmath45 are given by @xmath46    hence , each source @xmath11 assumes in order the states @xmath47 ,  ,  @xmath48 , , , , ",
    "( i.e. ,  the message supplied by @xmath41 to source @xmath11 , followed by blank states ) , and each non - source cell @xmath11 is initialized according to the choice of initial configuration and subsequently governed by its transition function @xmath49 .    ( the formulation of transition functions given here allows , for example , the ` spontaneous appearance of information ' , whereby non- states may appear in neighbourhoods entirely populated by states .",
    "whilst this is undesirable in many contexts , it is unproblematic for present purposes , and so our definitions do not preclude such appearance . )",
    "so as to honour modification  ( [ pt : modsubset ] ) above , we intend transition function @xmath49 to take as its arguments the states only of the _ neighbours_not generally all _ lattice_-neighbours  of @xmath11 ( followed by a time index ) .",
    "we stipulate , then , that @xmath49 not depend on its @xmath50th argument ( @xmath51 ) whenever @xmath52 is not a neighbour ( but merely a lattice - neighbour ) of @xmath11 ; i.e. ,  for such @xmath50 , we stipulate that , for each @xmath53 and each @xmath15 , @xmath54 .    as an aside , we note that , of the three modifications introduced above to the standard definition of cellular automata , only the third ( namely , provision for accepting input ) admits systems that are not attainable without such modification ; the other two ( namely , ( [ pt : modsubset ] ) partial lattices of cells , and ( [ pt : modvary ] ) cell - heterogeneity of transition functions ) are mere notational conveniences .",
    "this is because ( [ pt : modsubset ] ) @xmath1 can be augmented by a special ` non - cell ' state  that invites ignorance by transition functions at which each member of @xmath55 is held ; and ( [ pt : modvary ] ) a family @xmath56 of time - heterogeneous transition functions can be simulated by a single time - homogeneous function @xmath13 provided that each cell ` labels itself ' ( and maintains a clock)by extending @xmath1 to @xmath57 whence @xmath13 ascertains which @xmath49 to simulate . thus restoring state sets finiteness . ]",
    "[ def : chan ] for @xmath58 , to be negative is arguably unintuitive ",
    "why write ` @xmath59 ' when ` @xmath60 ' would do ?",
    "but has the desirable effect that the relation ` between @xmath61 and @xmath62 there is a channel ' is an",
    "_ equivalence relation_. ] a cas @xmath24 ( with cells @xmath61 and @xmath62 ) is said to be a _ channel from @xmath61 to @xmath62 with delay @xmath63 _ , written @xmath60 , if , for all @xmath15 and all inputs @xmath41 , @xmath64    thus , @xmath24 is a channel from @xmath61 to @xmath62 with delay @xmath63 if and only if the states of @xmath61 are exactly reproduced at @xmath62 @xmath63 time - steps later ( here , we adopt the conventions ( 1 )  that all configurations @xmath65 for negative time indices @xmath66 are the constant blank function @xmath67 , and ( 2 )  that we -initialize ) .    note that we often take @xmath61 in definition  [ def : chan ] to be a _ source _ of a cas .",
    "[ eg : line ] for @xmath68 , let @xmath69 be the cas @xmath70 , where @xmath1 is an arbitrary set of states and @xmath71 is the projection onto the first coordinate",
    ". then each non - source cell @xmath72 acquires as its state that of the cell @xmath73 at the previous time - step , and so any message supplied to the source @xmath74 propagates to a cell @xmath11 after @xmath11 time - steps .",
    "hence , for any @xmath75 , @xmath76 .",
    "example  [ eg : line ] captures the essence of the way in which communication channels may be expressed as cellular automata with sources : if the transition functions are such that messages states are passed from cell to cell , then a channel may be established from a source to another cell .",
    "below , we consider in response to the cq less trivial examples of cas channels .",
    "we focus hereafter on a specific subclass of cass , which we now define .    a _ square - celled , four - neighbour cas _ ( or _ 4-cas _ ) is a cas with cells taken from @xmath77 and with neighbourhood offset tuple @xmath78 .",
    "hence , when @xmath77 is viewed as a square grid , the neighbours of a cell are the cell itself and those four cells orthogonally adjacent .    given a regular lattice of cells and a binary relation of neighbourhood between cells , a subset @xmath79 of the lattice , i.e. ,  a set @xmath79 of cells , is said to be _ connected _ if , for every pair @xmath80 of cells in @xmath79 , there exist @xmath34 and @xmath81 such that @xmath82 , @xmath83 and @xmath84 is a neighbour of @xmath85 for each @xmath86 .",
    "a cas @xmath87 is said to be _ connected _ if its set @xmath5 of cells is connected in the enveloping lattice @xmath22 under the neighbourhood relation given by @xmath0 .",
    "[ rem : bound ] suppose that @xmath79 is a finite , connected set of cells ( suppose also an enveloping lattice endowed with a neighbourhood relation , which , for the purposes of this remark , is viewed _ geometrically _ ; so as to ensure that the concepts used here are well defined , we assume lattice @xmath77 and neighbourhoods as for 4-cass ) .",
    "then @xmath79 has an _ external boundary _ ,",
    "i.e. ,  a tuple @xmath88 ( @xmath89 ) of edges of square cells such that ,    for each @xmath90 , @xmath91 and @xmath92 meet at a vertex ( say @xmath93 ) , so that the tuple forms a _ closed curve _ in the plane @xmath94 of the geometrically - considered enveloping lattice @xmath77 ;    the vertices @xmath93 are distinct , so that the closed curve is _ simple _ ;    each edge @xmath91 is the boundary between a member of @xmath79 ( let @xmath95 denote this unique cell ) , and a cell in the enveloping lattice but not in @xmath79 ; and    @xmath79 lies entirely within the bounded region described by the curve .",
    "it is intuitively clear that this boundary is unique up to reversal and cyclic permutation .",
    "lies entirely within the curve , whence termination , and hence existence of a boundary , follows .",
    "uniqueness follows from consideration of the _ area _ enclosed by the curve . ]",
    "[ def : cross ] a cas @xmath21 that is a channel both from @xmath96 to @xmath97 and from @xmath98 to @xmath99 for four distinct cells @xmath100 and @xmath101 is said to _ cross _ these channels if    @xmath24 is connected ;    [ pt:1touch ] the external boundary @xmath88 of @xmath5 is such that , if @xmath102 ( where the bar notation is as in remark  [ rem : bound ] , and where , without loss of generality , @xmath103 ) , then either @xmath104 or @xmath105 ; and    [ pt : alltouch ] there exist four edges @xmath106 , @xmath107 , @xmath108 and @xmath109 ( with @xmath110 ) on the external boundary @xmath88 of @xmath5 such that @xmath111 is a cyclic permutation of either @xmath112 or @xmath113 .",
    "intuitively , point  ( [ pt:1touch ] ) of definition  [ def : cross ] stipulates that each of @xmath96 , @xmath98 , @xmath97 and @xmath99 be touched at most once by the boundary of @xmath5 ( possibly by several consecutive edges , for example when the cell is on a ` corner ' of @xmath5 ) ; point  ( [ pt : alltouch ] ) stipulates that the boundary touch all of @xmath96 , @xmath98 , @xmath97 and @xmath99 , and that it do so in such an order that @xmath96 is opposite @xmath97 , @xmath98 opposite @xmath99 .",
    "and @xmath114 is more restrictive than is necessary ; if , however , there exists a method of crossing channels subject to this restriction ( and we demonstrate below that such does exist ) , then a  fortiori there still exists such a method when the restriction is removed . ]",
    "that each @xmath115 is opposite the corresponding @xmath114 gives that , if a cas crosses two channels as per definition  [ def : cross ] , then the channels do indeed cross in the intuitive sense .",
    "thus , in order affirmatively to answer the cq , it is sufficient to exhibit a solution to the following problem ( hereafter the _ 4-cas problem _ ) .    _ find a 4-cas that crosses two channels ( regardless of the choice of state set @xmath1)_.    we exhibit just such a 4-cas ( in fact , two such ) in sect .",
    "[ sec : sol ]      it has long been known that three xor ( @xmath116 ) gates can , using only two dimensions , cross two paths carrying _ binary _ signals ; see fig .",
    "[ fig : xor](a ) .",
    "this scheme is correct since , given upper and lower input bits @xmath117 and @xmath118 respectively , the circuit produces upper and lower output bits @xmath119 and @xmath120 respectively . geometrically speaking ,",
    "as bit @xmath117 follows its path from ( upper ) input to ( lower ) output , it is twice combined via xor with the same value ( namely , @xmath118 ) , thus leaving it unchanged ; similarly , @xmath118 is ultimately unchanged by its twice being combined with @xmath117 .",
    "furthermore , such logic circuits can be implemented in two - dimensional cellular automata such as conway s _ life _ ( see , for example , @xcite ) ; thus , the scheme of fig .",
    "[ fig : xor](a ) solves the cq in the case of a binary alphabet @xmath32 .",
    "the scheme generalizes naturally to alphabets of size @xmath121 ( w.l.o.g .  taken to be @xmath122 ) via replacement of the xor operation with addition / subtraction modulo @xmath121",
    "; see fig .  [",
    "fig : xor](b ) .     and",
    "@xmath118 are exchanged .",
    "this solves the cq in the special case of messages taken from the alphabet @xmath32 .",
    "( b )  generalization of the scheme to the alphabet @xmath122 ; addition and subtraction are performed modulo @xmath121 , and ` m ' and ` s ' label each subtraction operation s minuend and subtrahend respectively.,height=94 ]    since addition / subtraction modulo @xmath121 for fixed @xmath121 can clearly be implemented in cellular automata ( e.g. ,  via transition functions that perform a look - up from @xmath123 entries ) , the generalized scheme of fig .  [",
    "fig : xor](b ) offers a solution to the cq .",
    "however , the novel solutions advocated in sect .  [ sec : sol ]  of the present paper have three chief advantages over this scheme .    the solution of fig .",
    "[ fig : xor](b ) depends upon the size @xmath121 of the alphabet : addition and subtraction are performed _",
    "modulo @xmath121 _ , whence one must have a  priori knowledge of @xmath121 in order to be able to implement these operations .",
    "the solutions of sect .",
    "[ sec : sol ]  are independent of the choice of alphabet ; they can be implemented before @xmath121 is known , can accommodate the alphabet s changing during transmission of the messages to be crossed , and require of the alphabet no additive structure .    the solution of fig .",
    "[ fig : xor](b ) necessitates computational processing  e.g . ,  calculation or look - up from @xmath123 entries  at the addition / subtraction nodes .",
    "the solutions of sect .",
    "[ sec : sol ]  require of these nodes mere transfer ( between cells ) of states , which incurs no computational cost .    the solution of fig .",
    "[ fig : xor](b ) preserves only the _ information content _ of the messages being crossed , whereas the solutions of sect .",
    "[ sec : sol ]  physically move the messages states from cell to cell .",
    "this latter , more general approach allows the crossing not only of streams of messages symbols , but also of streams of _ physical objects _ ( whereas , of course , physical objects can not be duplicated and combined modulo @xmath121 so as to be crossed by the scheme of fig .",
    "[ fig : xor](b))see the discussion of road junctions in sect .",
    "[ sec : conapp ]    we recall also previous cellular - automatic solutions to the channel - crossing problem ( see for example @xcite and the references therein ) , but note that these do not allow the crossing of messages consisting of _ arbitrary _ symbols , but rather reserve states that encode wires boundaries , or utilize wires of width strictly greater than one , or similar ; this is in contrast with the solutions presented in the following section .",
    "in this section , we describe two solutions to the 4-cas problem .",
    "the solutions both adhere to the same general scheme , which we now discuss .",
    "consider first the 4-cas @xmath124 given in fig .",
    "[ fig : x ] .",
    "( the lattice structure relating neighbours of @xmath124that @xmath125 and so on  is left implicit in the geometry of fig .  [",
    "fig : x ] ; in particular , we give the cells symbolic names , rather than labelling cells with elements of the enveloping lattice @xmath77 . we treat subsequent 4-cass similarly . )",
    ".,height=90 ]    we claim that there is no choice of transition functions for the three non - source cells @xmath61 , @xmath97 and @xmath99 such that @xmath124 acts simultaneously as a channel from @xmath115 to @xmath114 for both @xmath126 ( so certainly there is no choice such that @xmath124 crosses these channels ) .",
    "intuitively , this is because , were these channels @xmath127 established , then @xmath61 ( by virtue of the geometry of @xmath124 ) would have to encode in its state the previous states of both @xmath96 and @xmath98 ( whence @xmath97 and @xmath99 could subsequently attain their respective states ) ; however , assuming the non - trivial case where @xmath128 , there is no injective map from @xmath129 to @xmath1 , and so the ( single ) state of @xmath61one of @xmath130 possibilities  cannot encode the _ pair _ of previous states of @xmath96 and @xmath98for which there are @xmath131 possibilities .    nonetheless , it is clear that either one of the channels _ in isolation _ can be implemented via suitable choice of transition functions : if @xmath61 takes as its state that of @xmath96 at the previous time - step , and @xmath97 that of @xmath61 ( more formally , if @xmath132 and @xmath133 are the projection @xmath71 onto the first coordinate , where , recall , the first coordinate @xmath20 of @xmath134 is @xmath135 ) , then @xmath136 ; if _ instead",
    "_ @xmath137 , where the second coordinate @xmath138 of @xmath134 is @xmath139 , then @xmath140 .",
    "further , there is a compromise between these two single channels : if @xmath61 takes its state _ alternately _ from @xmath96 and @xmath98e.g .",
    ",  if we have the transition function @xmath141 ( and if @xmath142 ) then _ half _ of each message ( specifically every other state ) is passed with delay @xmath143 from @xmath115 to @xmath114 .",
    "this behaviour is encapsulated in table  [ tab : x](a ) , which shows the state of each cell in each time - step @xmath144 ( arbitrarily assuming -initialization , and supposing supply of messages a , b , c ,   to @xmath96 and 0 , 1 , 2 ,   to @xmath98 ) .",
    "rcrc ( a ) &    .the behaviour of @xmath124 , ( a )  as originally introduced and ( b )  as modified so as to emphasize the roles of @xmath114 .",
    "[ cols=\">,^,^,^,^,^\",options=\"header \" , ]     note in particular that @xmath145 and @xmath146 , and that , by virtue of the geometric layout of @xmath147 , these channels are crossed .",
    "further , consideration of the efficiency measures of definition  [ def : meas ] gives that @xmath148 and @xmath149 ; hence , with respect to these measures , @xmath147 offers a better solution to the 4-cas problem than @xmath150 . is _ optimal _ with respect to these three measures ( at least when messages states may have _ physical presence _ as described in the second bullet point of sect .",
    "[ sec : intrel ] ) .",
    "we defer justification to @xcite .",
    "]    intuitively , the reason for the improvement ( over @xmath150 ) offered by @xmath147 is that ( a )  the sets of cells of @xmath147 that act as copies of @xmath124 ( these sets are the respective neighbourhoods of @xmath151 , @xmath13 , @xmath152 and @xmath153 ) have greater pairwise overlaps than is the case with the corresponding sets of cells in @xmath150 ; and ( b )  the sets of cells of @xmath147 acting as copies of @xmath154 ( these sets are @xmath155 and @xmath156 ) or of @xmath157 ( @xmath158 and @xmath159 ) are better shaped  specifically , they are ` l'-shaped rather than straight  to pass data to / receive data from the rest of the cells .",
    "we consider in the present paper the problem of crossing two channels ; in particular , we stipulate exactly two spatial dimensions , whence the crossed channels necessarily intersect .",
    "we formalize this situation in sect .",
    "[ sec : intapp ]  using _ cellular automata _ , modified so as to endow the systems with the ability to accept inputs ( i.e. ,  the messages to be carried by the channels ) . in sect .",
    "[ sec : intrel ] ,  we recall previous approaches to this question , but note that the solutions presented here have over these approaches the advantage ( amongst others ) of being able to cross streams not merely of _ information _ , but also of _ physical objects_.    in sect .  [ sec : solgen ] ,  we exhibit a scheme whereby channels may be crossed ; the key is a simple sub - automaton @xmath124 that , whilst unable to cross channels carrying arbitrary messages , is at least able successfully to cross _ couplet _ messages ; then arbitrary messages can be crossed by splitting them into couplets , crossing with @xmath124 , and recombining the couplets into the original messages . in sect .",
    "[ sec : solimp ] ,  we implement this scheme as a 4-cas @xmath150 , thus answering the motivating question of the present work : _ it is , in two dimensions , indeed possible to cross channels without impairing their capacity_. in sect .",
    "[ sec : solopt ] ,  we consider the efficiency of @xmath150 , introducing measures that capture the time / space costs incurred in using the system to cross channels ; we go on to exhibit a system @xmath147 that improves upon @xmath150 with respect to these efficiency measures .",
    "we finish by noting some potential applications of the present paper s theoretical contribution ( namely , that channels can be crossed in two dimensions without disrupting their messages ) .",
    "we consider , then , practical settings in which is inherent a restriction to two dimensions .    a potential application , suggested by peter covey - crump , is in _ chip design_. components on a chip are connected by conductive tracks printed onto the chip s layers .",
    "if two tracks cross on a single layer , then they are necessarily electrically connected ; if such connection is not desired ( e.g. ,  if one track is to form a connection between components @xmath0 and @xmath1 , and the other , _ independently _ , between @xmath2 and @xmath3 ) , then one track must sidestep to another layer and bridge over the other track using ` vias ' ( connections between corresponding points on different layers ) , which incurs expense ( not least because of the necessity of the chip s consisting of several layers ) .",
    "we suggest that the present paper s scheme  i.e . ,  the approach of splitting each signal into two streams ( which are then crossed without loss ) , though not necessarily implemented via cellular - automatic means",
    " may offer scope for a preferable alternative to this costly , multi - layer bridging ( though we concede that it is as yet far from clear how , on a single layer , sub - automaton @xmath124 can be implemented efficiently ) .",
    "another potential application , similar to the above in that ` bridging ' into a third dimension is costly , is in _",
    "civil engineering_. specifically , _ road junctions _ playing the roles of @xmath124 , @xmath154 and @xmath157 can be used to implement the scheme of the present paper , so as to cross two roads without the need for ( and expense of ) a bridge carrying one over the other .",
    "the form of these three junction types may for example be ( @xmath154 )  a division of alternate cars ( or alternate blocks of @xmath121 consecutive cars ) into two parallel streams ( consisting , therefore , alternately of cars / blocks and gaps ) ; ( @xmath157 )  a re - merging of the streams ; and ( @xmath124 )  a level - crossing - style junction whereby two ` car - gap - car - gap  '  streams are crossed , the cars of each stream synchronizing with and passing through the gaps of the other .",
    "we defer the development of these applications and others to future work .",
    "this paper is based upon ( and extended from ) unpublished research presented in @xcite .",
    "accordingly , we thank richard brent , the supervisor of that project , for his detailed comments ; and samson abramsky and peter covey - crump , for kindly taking the time to examine the project and for their insightful discussion .",
    "we thank the three anonymous _",
    "ncma 2012 _ referees for their helpful suggestions and comments .",
    "we acknowledge the generous financial support of the leverhulme trust , which funds the author s current position .",
    "blakey , e. , a cellular - automatic implementation of communication channels , with particular consideration of several intersecting channels , msc dissertation , oxford university ( unpublished ; available at ` http://www.maths.bris.ac.uk/~maewb/cachan.pdf ` ) ."
  ],
  "abstract_text": [
    "<S> in three spatial dimensions , communication channels are free to pass over or under each other so as to cross without intersecting ; in two dimensions , assuming channels of strictly positive thickness , this is not the case . </S>",
    "<S> it is natural , then , to ask whether one can , in a suitable , two - dimensional model , cross two channels in such a way that each successfully conveys its data , in particular without the channels interfering at the intersection . </S>",
    "<S> we formalize this question by modelling channels as cellular automata , and answer it affirmatively by exhibiting systems whereby channels are crossed without compromising capacity . </S>",
    "<S> we consider the efficiency ( in various senses ) of these systems , and mention potential applications . </S>"
  ]
}
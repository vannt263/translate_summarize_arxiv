{
  "article_text": [
    "recent work on distributed computing takes inspiration from biology and chemistry .",
    "for example , the bionets collaboration @xcite propose biologically inspired `` autonomic networks and services '' , based on fraglets @xcite and metabolic approaches @xcite .",
    "decades earlier , bantre , le mtayer et al @xcite @xcite introduced the chemical programming model of computation .",
    "berry and boudol @xcite proposed the cham ( `` chemical abstract machine '' ) , which uses a chemical metaphor for modeling asynchronous concurrent computations ( in particular a concurrent lambda calculus ) .",
    "algorithmic chemistry was introduced by fontana and buss @xcite @xcite @xcite .",
    "we borrow from this line of research the leading idea that lambda calculus is a kind of natural formalization of the bare bones of chemistry , but we take it much further , starting from the following key observation . in a biological connectome ,",
    "neurons exchange electrical signals through synapses . at closer inspection , these signals are an effect ( and a small part ) of the chemical connectome ( cc ) which runs in the background .",
    "the cc is globally seen as a huge chemical reaction network ( crn ) made of many elementary , identical crns , each one running on it s own and reacting to the chemical environment , in a kind of an asynchronous distributed computation .",
    "the key observation is that the global crn is nothing but a god s eye view of this , instead the system functions exclusively by local interactions assembled into local metabolic cycles .",
    "the signal transmission from a neuron to another is an effect of a swarm of localized cycles of chemical reactions among molecules .",
    "this is in stark contradiction with the usual view which consists in thinking in terms of signals passing through gates .",
    "it is instead the natural point of view of graphic lambda calculus and the chemical concrete machine .",
    "graphic lambda calculus ( glc ) @xcite http://chorasimilarity.wordpress.com/graphic-lambda-calculus/[(web tutorial ) ] is a graph rewrite system .",
    "programs are certain trivalent graphs , and execution of programs means the application of graph rewrites , called `` moves '' , on the respective graph .    in the glc formalism",
    "there is one global move , all the other moves are local ( i.e. they involve a fixed , small number of nodes ) .",
    "there is a variant of glc , which uses only local moves , called the chemical concrete machine ( chemlambda ) @xcite http://chorasimilarity.wordpress.com/chemical-concrete-machine/[(web tutorial ) ] .",
    "the moves of chemlambda act on graphs called `` molecules '' at certain `` reaction sites '' , like chemical reactions involving molecules and enzymes ( here enzyme = move ) .    the execution of programs can be made into an asynchronous distributed computation , by looking at how real molecules react .",
    "real chemical interactions happen between molecules which are close one to another .",
    "these proximity relations have to be a part of the computation model , somehow .",
    "we need to have a purely local mechanism for deciding which parts of the graph are going to interact and how .",
    "we propose to transform molecules into actors and proximity relations into actors interactions .",
    "distributed computation is then seen as parallel , asynchronous application of reduction moves to a big graph which is split into smaller graphs , which interact as actors in an actor model described in the section [ sactors ] , which is inspired by hewitt @xcite",
    "@xcite .",
    "this opens the following possibility : the www is an artificial , human - made network and the glc or the chemical concrete machine are variants of an artificial , human - made , computing friendly chemistry .",
    "we may try then to use glc actors to endow the net with a chemistry , first , then exploit the chemistry to give the net a metabolism .",
    "this would lead to the construction of artificial chemical connectomes ( acc ) which follow the artificial chemistry rules of glc .",
    "let us enumerate the features of glc and chemlambda which are significant :    1 .",
    "they allow for asynchronous distributed computation , not seen as a chemical reaction network ( crn ) , but instead one involving the graphs of glc or the molecules of chemlambda , with chemical reactions driven by enzymes ( i.e. moves ) acting at reaction sites of these artificial molecules .",
    "molecules are seen as actors and most of these chemical reactions are seen as actors interactions .",
    "they separate the essence of computation ( here the application of moves ) from the evaluation ( here seen as a propagation of certain decorations of the graphs , according to certain local rules of decoration ) .",
    "evaluation is not necessary for computation .",
    "3 .   a part of the glc graphs , or `` molecules '' from chemlambda , form a sector which represents untyped lambda calculus ( without eta reduction ) .",
    "but there are other related sectors , like the one which represents the knot diagrams rewrite system , thus establishing a continuation of the research about knots and lambda calculus @xcite , knot automata @xcite , or about topological quantum computing @xcite , @xcite . 5 .",
    "there is no variable ( or terms ) name or management of names .",
    "the key merit of this model is a graphical reformulation of the well - known lambda calculus , central to logic and to the design of recursion in computer languages . by reformulating the lambda calculus in terms of graphs , the operations for",
    "the calculus become essentially local operations of graphical replacement .",
    "the graphs themselves contain all the data that is usually formulated in terms of algebra .",
    "this means that the global structure of the graph contains all the information that is usually cut up into bits of algebra .",
    "the graph becomes a whole system that instantiates the computational power of the calculus .",
    "this instantiation is the key reason why this model can propose significant designs in distributed computing .",
    "the graph as a whole can exist in a widely distributed fashion , while the interactions that constitute its computations are controlled by local nodal exchanges between actors .",
    "furthermore , this property of redesigning the relationship of the local and the global is not restricted just to lambda calculus networks .",
    "there are relationships of the same kind that link this research with topology , topological quantum field theory and quantum computation .    even more generally , the movement between graphs and algebra is part of the larger picture of the relationship of logical and mathematical formalisms with networks and systems that was begun by claude shannon in his ground - breaking discovery of the relationship of boolean algebra and switching networks .",
    "we believe that our graphical formulation of lambda calculus is on a par with these discoveries of shannon .",
    "we hope that the broad impact of this proposal will be a world - wide change in the actual practice of distributed computing .",
    "implemented successfully , this proposal has a potential impact on a par with the internet itself .",
    "[ [ acknowledgments . ] ] acknowledgments .",
    "+ + + + + + + + + + + + + + + +    we were motivated to write this with the occasion of the preparation of a project which involves the authors , on the research side , and a team from proven secure solutions ( pss ) on the side of a possible it implementation .",
    "we thank stephen p. king from pss , who made the first suggestion that graphic lambda calculus might be used more easier on the net than , as one of the authors thought , in relation to real biochemistry , and to jim whitescarver from pss for finding ways to make this type of computing real .",
    "graphic lambda calculus ( glc ) @xcite is a graph rewriting system .",
    "glc uses a set @xmath0 of oriented , locally planar trivalent graphs which are constructed from the following elementary nodes : ( a ) the @xmath1 abstraction node , ( b ) the fan - out node , ( c ) the application node , ( d ) the dilation node , decorated with @xmath2 , a commutative group of scales .    to this nodes",
    "are added ( e ) arrows , loops and a termination node with one incoming arrow and no output arrow .",
    "the most important move ( graph rewrite ) is the graphic beta move .",
    "it is the graphic version of beta reduction from lambda calculus .",
    "this is a local move , i.e. it affects only a local region of a graph .",
    "the graphic beta move is a purely oriented graph rewrite ( move ) version of the wadsworth @xcite or lamping @xcite beta reduction move .",
    "there is no restriction though to apply this move only to lambda graphs ( i.e. graphs which represent lambda calculus terms ) .",
    "two examples are given in the figure [ all_moves_beta ] :    the moves of glc come in two categories : local ( with an upper bound on the number of nodes and arrows involved ) and global ( otherwise ) .",
    "the list of all local moves of glc which we shall use in this proposal is given in the figure [ all_moves_glc ] .",
    "( there are other moves , called r1a , r1b , r2 and ext2 , which apply to dilation , termination and fan - out nodes , which will not be used in this note . )    to better understand the difference between local and global moves , look at the figure [ loc_vs_glob ] , which describes ( a ) the local co - comm move and ( b ) the global fan - out move .",
    "graphic lambda calculus has several interesting sectors ( i.e. subsets of @xmath0 with particular choices of moves ) which are equivalent with : ( a ) untyped lambda calculus , combinatory logic ( b ) knot and tangle diagrams with reidemeister moves ( c ) finite difference calculus in spaces with dilations .    in the figure [ ex_macros ]",
    "are represented graphs from the first two sectors : ( a ) the combinator @xmath3 , ( b ) an oriented crossing .",
    "the knot diagrams sector allows glc to interact with kauffman knot logic @xcite and knot automata @xcite , and topological quantum computing in the sense of kauffman and lomonaco @xcite , @xcite .",
    "this is discussed in section [ tglc ] .",
    "the motivation for constructing glc was the need to have a visual representation of certain finite differential computations in spaces with dilations @xcite @xcite @xcite@xcite @xcite .",
    "this is possible in another sector of glc , called the emergent algebra sector , which involves the dilation and fan - out nodes , along with co - comm , co - assoc and the remaining moves r1a , r1b , r2 and ext2 .",
    "the chemical concrete machine @xcite ( chemlambda ) is a modification of graphic lambda calculus which uses only local moves on graphs which are called `` molecules '' , following a chemical programming style .    in chemlambda",
    "we admit also a set of nodes with unspecified valences , called `` other molecules '' .",
    "these are the equivalent of `` cores '' from the section [ sactors ] , paragraph 5 .",
    "interaction with cores , i.e. they can be used as interfaces with external constructs .",
    "all glc local moves involving the @xmath1 abstraction node , the application node and the fan - out node are the same in chemlambda . in the following figure",
    "we see the graphic beta move ( at left ) , which is supplemented by a fan - in move ( at right ) .",
    "the global fan - out move of glc is replaced by the fan - in move and by two dist moves , all local .    in the next figure",
    "we see an example of the replacement of global fan - out with a succession of moves in chemlambda .",
    "suppose we split a graph in @xmath0 , or a molecule from chemlambda , into many parts , with the goal of reducing it in a distributed way .",
    "we take inspiration from hewitt actor model @xcite , especially from p. 14 : `` each beta reduction corresponds to an actor receiving a message '' .    here",
    "is how we can achieve this .",
    "this computation model has two stages : preparation and computation . in the first stage",
    "we define the actors ( a procedure which is described here as a decoration of the glc graph ) , then in the second stage , the actors interact according to 5 rules of behaviour , performing an asynchronous distributed computation .",
    "we take as an example a graph which corresponds to the term @xmath4 in lambda calculus , and it s reduction to the combinator @xmath5 , see figure [ skk_glc_crn_undec ] .",
    "[ [ preparation . ] ] preparation .",
    "+ + + + + + + + + + + +    we use a family of actors denoted by @xmath6 .",
    "each actor @xmath7 has a name , or address , denoted by @xmath8 .",
    "we shall decorate the graph with actor names .",
    "then we decorate arrows with pairs of actors names .",
    "we use the following notation for arrows decorations : @xmath9 , where the index @xmath10 is used when there are several arrows connecting the same pair of actors .",
    "we suppose that @xmath11 .",
    "any arrow which joins two nodes decorated with different actor addresses is called a link between actors .",
    "each actor will be in charge of the nodes and half - arrows which are decorated with the respective actor name . by definition ,",
    "the actors diagram is the unoriented graph with actors as nodes and links between actors as arrows .",
    "we may need to introduce , for practical reasons , supplementary entities , called `` cores '' which are not seen as graphs in glc .",
    "( they may represent , in practice , interfaces with other computing entities , not necessarily implemented in glc ) .",
    "the cores appear in this formalism as being nodes with in and out half - arrows , connected to the half - arrows of the graph in glc .",
    "the cores do nt appear in the actors diagram because they are always wrapped into a glc actor , called `` mask '' .",
    "for example , an actor @xmath7 , has a name ( address ) @xmath8 , which may contain a mask ( a graph in glc ) and a core @xmath12 , such that all the half - arrows of the core are connected with some of the half - arrows of the mask ; the remaining half - arrows of the mask are parts of the links of the actor @xmath7 with other actors .    for our example ,",
    "in the figure [ actor_prep_in ] we see the initial graph , which appears in the upper left part of the figure [ skk_glc_crn_undec ] , decorated with names of four actors .",
    "this decoration leads to the definition of the following four actors @xmath13 , described in the figure [ actor_prep_in_2 ] .    in the figure [ actor_prep_in_3 ]",
    "we see the initial actors diagram .",
    "[ [ computation . ] ] computation .",
    "+ + + + + + + + + + + +    starting from the initial actors , the computation consists into applying moves to the graph made by the union of actors ( and possibly the cores ) , according to the following rules which describe what one actor can do .",
    "the interactions between actors or inside actors are described by the way decorations change when we apply a move in glc .",
    "the possible actors behaviours are listed further .    [",
    "[ moves - as - interactions - between - actors . ] ] 1 .",
    "moves as interactions between actors .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    an actor tries to apply reduction moves which involve a link with another actor . in the next figure",
    "we see an application of the graphic beta move between actors @xmath7 and @xmath14 .",
    "the move affects the connectivity of the actors @xmath15 , @xmath16 , @xmath17 , @xmath18 .    in general , there is no condition on the actors @xmath19 from figure [ inter_actor_1 ] to be different . if the actors @xmath7 and @xmath14 are the same then we may speak about self - interactions .",
    "if chemlambda is used instead of glc then we might consider the fan - in move ( right side of the figure [ convention_6 ] ) as an interaction between actors too .",
    "it is possible that , after an interaction as the one from figure [ inter_actor_1 ] , we obtain a loop , like in the figure [ all_moves_beta ] ( b ) .",
    "the possibility of having actors with no nodes , only arrows , is left open .",
    "there are multiple possibilities for the concrete mechanism of interaction , see section [ disc ] for a discussion about this .    in the case of the example from the figure [ actor_prep_in ] , the actors @xmath7 and @xmath14 interact as in the figure [ actor_prep_beta ] .    after this interaction all the actors changed . indeed , each of the actors @xmath7 and @xmath14 loose one node , but also the decorations of some arrows change ; the actors @xmath15 and @xmath16 do nt loose nodes , but the decorations of some of their arrows change .",
    "as an effect , the connectivity of the actors diagram from the figure [ actor_prep_in_3 ] changes after this interaction into the graph from the figure [ actor_mod_beta ] .    [",
    "[ name - change . ] ] 2 .",
    "name change .",
    "+ + + + + + + + + + + + + + +    nodes of an actor , like a fan - out node , or a termination node can change the name into one of the actors names which has a link in common with it .",
    "we may interpret the upper part of the figure [ inter_actor_2 ] as @xmath7 sending to @xmath14 an order to produce a copy of @xmath14 .",
    "there is one half - arrow at the right upper part of the figure with missing decoration .",
    "that decoration has the form @xmath20 , with the missing name actor depending on the connectivity of the fan - out node along that arrow .    in our example , starting from the preparation from the figure [ actor_prep_in ] , instead of interacting with @xmath14 ( figure [ actor_prep_beta ] ) the actor @xmath7 might interact with the actor @xmath16 by a name change .",
    "this is described in the figure [ actor_skk_name_change ] .",
    "after this name change move , the initial actors diagram from the figure [ actor_prep_in_3 ] becomes the following one , and not the one from the figure [ actor_mod_beta ] :    the lower part of the figure [ inter_actor_2 ] can be interpreted as @xmath7 sending to @xmath14 a pruning command . the same comment , as previously , can be applied to the fact that there is a missing decoration of a half - arrow in the lower right part of the figure .",
    "we encounter this in our example of computation from the figure [ skk_glc_crn_undec ] . at some point during the computation we need to apply a first local pruning move ( lower left part of the figure [ skk_glc_crn_undec ] ) . before doing the local pruning , we need first to do a name change , like in the following figure ( the actors names are the ones which appear from the initial preparation stage from the figure [ actor_prep_in ] ; notice the appearance of a new actor @xmath17 , coming from the creation of new actors explained at point 4 later ) .    [ [ internal - moves . ] ] 3 . internal moves .",
    "+ + + + + + + + + + + + + + + + + +    an actor can perform internally some moves .",
    "for example , upon receiving a fan - out node by a name change interaction , the actor may produce such a copy by a global fan - out move inside the actor @xmath14 , or , in case actors are implemented with chemlambda , there could be used dist moves instead , with the same effect . in our example , the actor @xmath16 , upon receiving the fan - out node from @xmath7 , can proceed like in the figure [ bckw_6_short ] , where the graph of the @xmath3 combinator is multiplied into two copies . likewise ,",
    "if the actor receives a pruning command then it can start to apply internally local pruning moves .",
    "[ [ new - actors . ] ] 4 . new actors .",
    "+ + + + + + + + + + + + + +    an actor @xmath7 may have its nodes partitioned into two disjoint sets , with no arrow connecting nodes in different sets of the partition .",
    "such a partition may appear after the actor performed internally a global fan - out , or after a name change interaction .",
    "the actor can then create two new actors , one called @xmath8 and the other one with a different name .",
    "in our example , the actor @xmath16 , after doing internally a global fan - out move , splits into two actors , the first called @xmath16 and the other called @xmath17 , both actors containing a copy of the graph of the combinator @xmath3 .",
    "[ [ interactions - with - cores . ] ] 5 .",
    "interactions with cores .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + +    an actor with a core , if no other action is available , can `` express '' a part of the core , i.e. it can transform a part of the core into a part of its mask , or conversely , it can move a part of its mask into the core , according to the particular rules of the core ( interface ) .    as an example , let us give the following description in glc of the church numerals : in the figure [ core_1 ] are introduced some stacks of `` units '' , and in the figure [ core_2 ] we see the `` pack '' and `` successor '' masks .",
    "then , in the figure [ core_3 ] , we see the graphs in glc which correspond to the lambda terms for the church numerals and the successor .",
    "the stack of units is seen as a core of the actor which implements a church numeral , having a pack mask .",
    "the stack may be e a counter , implemented possibly in another formalism than glc .",
    "( we can say the same about the successor , which can be seen as a pair mask - core ; moreover , if the core corresponds to a counter which has a value different than one , then the successor still makes sense , but will behave as something which increments numerals by the value which is in the respective counter , or core . )    in our case , it makes sense to define two possible interactions with cores , like in the figure [ core_4 ] .    the interaction with cores",
    "is therefore designed from the knowledge of the core structure . indeed , if the core represents data in some format , then we know that we can express the respective data format in lambda calculus , hence in glc . from this point",
    ", the interaction with the respective core simply means a translation from the data format used by the core into glc .",
    "this is a model of distributed , asynchronous computing .",
    "it has a new feature which becomes obvious by looking at the messages exchanged by the actors .",
    "the preparation stage of the computation leads to the creation of the glc actors .",
    "once the preparation stage ended , the actors are left by themselves to interact .",
    "let s examine their exchanges .",
    "[ [ interaction - by - the - graphic - beta - move . ] ]   interaction by the graphic beta move .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    there are potentially 6 different actors implied in the interaction by the graphic beta move , see figure [ inter_actor_1 ] . as mentioned ,",
    "there are several ways to perform this interaction .",
    "any of them will have a comparable load of message passing .",
    "let s look at one example .",
    "suppose that the actor @xmath7 , which has the @xmath1 node , asks the actor named @xmath21 what is the node connected with that node .",
    "he must send to @xmath14 something like the name @xmath8 and some bits , maybe about the node @xmath1 .",
    "there are 3 bits needed to identify the node lambda , once the actor @xmath14 already knows the orientation of the arrow which links it with @xmath7 .",
    "two bits are needed to specify the orientation of the other arrows of the @xmath1 node and one bit to tell if it a @xmath1 node or a fan - out node ( because both have the same pattern of arrows ) .",
    "this message is practically a packet of the form @xmath22 where @xmath23 are the three bits .",
    "the message content is very small .",
    "if the actor @xmath14 finds out that his application node forms a good configuration with the @xmath1 node of the actor @xmath7 , he may send the command to @xmath8 to signal this ( 1 bit needed , sandwiched between the names @xmath21 and @xmath8 ) and then the actor @xmath14 proceeds by erasing it s application node and then by sending to @xmath24 the label @xmath25 and to @xmath26 the label @xmath27 .    upon receiving these messages , the actors @xmath16 and @xmath17 update their labels by concatenation : the label @xmath28 becomes @xmath29 and the same for the label of the half - arrow of @xmath17 .",
    "the same is done by the actors @xmath7 , @xmath15 , @xmath18 .    upon messages for confirmation that the actors @xmath15 , @xmath16 @xmath17 , @xmath18 updated their labels , the actors @xmath7 and @xmath14 may forget they were involved in the links between @xmath15 and @xmath17 and respectively between @xmath18 and @xmath16 .    [ [ name - changes . ] ] name changes .",
    "+ + + + + + + + + + + + +    these involve only interaction between two actors , figure [ inter_actor_2 ] and are thus much more simple than the previous one .",
    "only the information about the node which is exchanged are in the messages , with a confirmation of the exchange performed .    [",
    "[ new - actors - interaction - with - cores . ] ] new actors , interaction with cores .",
    "+ + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + + +    this two interactions are more complex , because in the case of producing new actors , as well as in the case of interaction with cores , what is happening is that possibly many nodes and arrows change names , or are produced .",
    "the interaction with cores involves one actor and it s core , therefore there are exchanges only between those .",
    "creation of new actors supposes the creation of a new actor ( machine ) and then a name change interaction between the old actor and the new actor .",
    "[ [ internal - moves.-1 ] ] internal moves .",
    "+ + + + + + + + + + + + + + +    they do nt involve interactions between actors .",
    "the main new feature of this model is that there are no complex messages exchanges between actors ( with the exception of new actors creation and interaction with cores ) .",
    "moreover , the messages are not circulating much through the actors network .",
    "finally , even when considering internal moves , this is not a model based on signals circulating through wires , which are processed by gates ( with the exception of interaction with cores ) .",
    "the fact that alpha reduction is not needed in the glc due to the absence of variables and the presence of direct connections that effect interactions is part of a link of this formalism with the formalisms of topological quantum field theories at the knot theoretic level .",
    "this sounds like a mouthful , but it is actually very simple .",
    "the graphical issue is the same .",
    "lets talk about knot and link diagrams . in writing a knot diagram",
    "so that it can turn into a quantum link invariant one divides the diagram up into pieces , each of which is in the form of a blackbox with ( say ) two or four lines emanating from it .",
    "there is a black box for each type of crossing and special boxes for maxima and minima .",
    "see figure  [ abtens ] .",
    "once such a decomposition has been made , one can assign abstract variables to each of the ends of these boxes .",
    "boxes that are connected to one another have lines that receive the same abstract variables .",
    "we can then translate the knot diagram into an abstract tensor expression with double appearances of indices connoting lines that are connected to one another .",
    "the abstract tensor expression is the analogue of the algebraic lambda calculus expression .",
    "one must take great care in the substitution of dummy indices .",
    "indices that label different lines in the diagram must remain different .",
    "this leads to a non - local calculus of substitutions in the abstract tensor algebra .",
    "so far we are only making an algebraic image of the knot diagram . to get computable invariants we go farther and map the abstract tensors to actual matrices with finite numbers of index possibilities and tied indices",
    "are summed over just as in ordinary tensor calculus .",
    "thus the relationship of the logic of substitution and the logic of graphic and topological connection is very close in these two subjects .",
    "the issue of non - local substitution in systems is a form of paradox protection that we have elsewhere called the _",
    "flagg resolution .",
    "_ if it should be the case that @xmath30 is an entity in a logical algebra such that @xmath31 ( @xmath32 denotes a negation operator of order two ) . then one regards @xmath30 as a  hot potato \" and agrees that the substitution of @xmath33 for @xmath30 , if effected , in an expression , must be so effected for every occurrence of @xmath30 in the expression .",
    "this is a non - local rule that is directly enforced in a graphical version of the algebra by having exactly one entity @xmath30 and connecting edges from the @xmath30-node to all of the former appearances of @xmath30 in the algebra .",
    "this means that problems of typing in lambda calculus will also take on a different aspect once the calculus is graphical .",
    "we shall examine this in depth in our research .",
    "we expect that the questions of logical type will interlace with the recent work of voevodvsky @xcite on homotopy type theory for mathematical foundations .",
    "one difference between knot theoretic considerations and lambda calculus considerations is in the fact that we do not usually think of a knot diagram as a computing element that undergoes moves and reductions for the sake of a computation or an evaluation .",
    "but this is not always so .",
    "for example , the skein algorithms such as the bracket polynomial algorithm can be regarded as a reduction process that produces two new graphs from each crossing in the knot diagram .",
    "this is similar to allowing free beta reduction in the lambda calculus graphs .",
    "what must be done however in the knot theoretic case is to collect up all the end calculation results and add them together .",
    "this is what is meant by a formula like @xmath34 ( see @xcite . )",
    "each @xmath35 is a pattern of calculation leading to a specific algebraic value @xmath36 the topological invariance occurs at the level of the sum of all of these contributions .      1 .   if @xmath3 and @xmath39 are regularly isotopic diagrams , then @xmath40",
    "2 .   if @xmath41 denotes the disjoint union of @xmath3 with an extra unknotted and unlinked component @xmath42 ( also called ` loop ' or ` simple closed curve ' or ` jordan curve ' ) , then + @xmath43 where @xmath44 and @xmath45 3 .",
    "@xmath46 satisfies the following formulas + @xmath47 @xmath48    where the small diagrams represent parts of larger diagrams that are identical except at the site indicated in the bracket .",
    "we take the convention that the letter chi , , denotes a crossing where _ the curved line is crossing over the straight segment_. the barred letter denotes the switch of this crossing , where _ the curved line is undercrossing the straight segment_.    an analogous situation could occur in glc where one would need the average over all the results of the many branching calculations .",
    "note that from a physical point of view , we are talking about averaging over all the states of a physical system .",
    "thus in the distributed computing domain , we are interested in finding ways to collect all the end results , which may well be scattered across both space and time . of course , with enough time",
    ", all results will be scattered only across space .",
    "we are looking at how one may graft lambda calculus and knot diagrammatics . here",
    "one can use the knot diagrams at an abstract level to represent non - associative algebra . see figure  [ mult ] for an illustration of the way lines that cross",
    "can be used to model multiplication , and for an illustration of how a topological move on the lines corresponds to a self - distributive law : @xmath49        knot diagrams can be a space to write lambda expressions . then we obtain a graphical lambda calculus that has the form of knot diagrams equipped with extra lambda nodes and multiplication nodes , let s call it topological glc ( tglc ) . these diagrams can be transformed by beta moves and of course the system can be expanded in various ways .",
    "so far , to keep the strictness of the non - associative algebra for lambda calculus , we would not introduce isotopy moves ( reidemeister moves ) on the knot diagrams , but this can be done if we wish .",
    "it leads to a new algebraic investigation where one is given an algebra with certain axioms ( for example rack or quandle axioms corresponding to reidemeister moves ) and then one introduces lambda calculus over this algebra .",
    "then , for example , @xmath50 is an operator in the extension of the given algebra that has the property that @xmath51 for any @xmath15 in the algebra , and @xmath52 are given elements in the algebra .",
    "we assume that @xmath53 is now also an element in the algebra .",
    "this means that we assume that @xmath53 satisfies the relations in the algebra .",
    "this can lead to many algebraic questions difficult to answer .",
    "another way to proceed is to distinguish lambda operators from the initial algebra and not demand that they take on the axioms of that algebra .",
    "these issues need to be explored in relation to a topological lambda calculus associated with knot and link diagrams .",
    "we expect that intensive work in the comparison of quantum link invariants , abstract tensors and lambda calculus will illuminate many issues related to graphical lambda calculus proper .",
    "we are sure that pursuing this comparison will yield benefits to low dimensional topology , mathematical foundations and to the computational and information processing power of graphical lambda calculus .    in order to see these issues more clearly , examine figure  [ rel ] . in this figure",
    "we illustrate how a simple diagrammatic curl corresponds to the operation of forming the product @xmath54 from an element @xmath55 this operation is equivalent to a fan - out combined with a multiplication in the graphical methods already discussed in this paper .        since self - multiplication is quite important for many lambda calculus constructions , we initially choose to not reduce such curls in the diagrams .",
    "this means that we disallow the first reidemeister move ( that uncurls a curl ) .",
    "the same figure illustrates how when one line passes twice consecutively over another line , then algebraically we get the operation @xmath56 where @xmath14 is the algebra carried by the overcrossing line and @xmath7 is the algebra carried by the initial undercrossing line .",
    "if we wish to have the topological move of separating these lines ( as illustrated in the upper right of the figure ) , then we need the corresponding algebraic identity @xmath57 this identity is not true in a general non - associative algebra .",
    "if our algebraic diagrams satisfy both @xmath58 and @xmath59 , then the underlying algebra is called a _",
    "rack_. we are interested in studying lambda calculus over a rack algebra and we wish to understand if the topological malleability of these diagrams will lend computing power to the graphical system .",
    "a further point is illustrated in figure  [ rel ] .",
    "in the left - bottom of the figure , we see that a double - curl with labels @xmath7 and @xmath60 at the bottom , leads to the equation @xmath61 by following the identifications indicated in the diagram .",
    "thus we see that certain fixed point expressions are naturally articulated with the diagrams . in this case",
    "@xmath60 is the well - known church - curry combinator that produces a fixed point for any @xmath7 in the lambda calculus .",
    "the way such fixed point expressions are produced from the knot diagrams ( or tangle diagrams where there are free ends ) is not dependent upon the reidemeister moves .",
    "these fixed points occur in the free non - associative algebra that labels such diagrams .",
    "another example of this phenomenon is given in the lower right of figure  [ rel ] .",
    "here we show the diagram of the trefoil knot @xmath62 with labels @xmath63 on its arcs .",
    "then corresponding to the three crossings in the diagram we have the three relations @xmath64 substituting @xmath65 into the second two equations , we have @xmath66 and @xmath67 thus we see that the trefoil diagram _ inherently _ embodies two algebraically linked fixed point expressions .",
    "this occurs in the universal associative algebra , before applying any reidemeister moves to the diagrams or any rack axioms to the algebra .",
    "the situation is analogous to that studied by aczel in his non - well - founded set theory @xcite .",
    "aczel uses graphs with cycles to model sets that are members of themselves or members of each other in a circular pattern .",
    "similarly , we see that knot diagrams embody the properties of fixed point combinators in the lambda calculus .",
    "( one can form a non - standard set theory based on knot diagrams .",
    "see @xcite.)this fact of diagrammatic life needs to be studied both in relation to glc and in relation to the topology of the knots .",
    "if we allow the topological moves on the knots we can often use knot theory to show that two knots are topologically different or that given knot diagram is actually knotted .",
    "such verifications will show that the corresponding fixed point combinators are different and/or non - trivial in the graphical lambda calculus with reidemeister moves allowed .",
    "thus there is a potentially deep interaction between the properties of lambda calculus algebras and the study of topological types of knots and tangles .    in figure  [ tfix ]",
    "we illustrate the basic fixed point combinator @xmath68 in ( knot diagrammatic ) topological graphical lambda calculus ( @xmath69 ) .",
    "the two self - multiplications that occur at two levels in this expression are instantiated by the two curls in the graph .",
    "we have that @xmath70 is the beta - reduction of @xmath53 and thus g corresponds to the fixed point @xmath71 it is important to note that equality in fixed points is translated into beta - reducibility in the graphical lambda calculus .",
    "it is in this way that we can control in a computational system the otherwise infinite loops that could occur if one treated beta reduction as equality . in abstract algebra",
    "the situation is different and one can consider fixed point identities and their consequence for an algebra with generators and relations .",
    "the fact that the fixed point combinators can occur both at algebraic and computational levels in the @xmath69 makes this a rich subject for investigation .",
    "similarly , in figure  [ yfix ] we illustrate a @xmath69 expression for the @xmath60-combinator .",
    "note how the structure of this combinator takes on the hybrid nature of tangle diagram infused with curls and lambda nodes .",
    "the encircled crossing is a _",
    "virtual crossing _ , a crossing of graphical lines that does not affect them in any way .",
    "it is natural to use such a vertex in graph theory and in fact there is an extension of knot theory @xcite that allows exactly such virtual crossings in the knot diagrams .",
    "thus @xmath69 can be viewed as a computational extension of virtual knot theory .        finally , we examine relations of tglc with topological quantum computing",
    ". we point out that a quantum computer is modeled by a graphical network that embodies the mechanism of unitary transformations on a complex vector space ( hilbert space ) .",
    "there is a special reduction move called _ measurement _ that projects a state vector to one of its basis vectors with probability the absolute square of the coefficient of that basis vector .",
    "such reductions are usually modeled at the algebraic level .",
    "one may look for a more graphical model for the quantum measurement so that it comes in line with beta reduction .",
    "this involves using tensor networks analogous to the knot diagrammatic networks discussed above , but interpreted in terms of quantum amplitudes .",
    "we will look at quantum networks from this point of view and find ways to formulate quantum computing that interfaces it with graphical lambda calculus .",
    "m. buliga , a characterization of sub - riemannian spaces as length dilation structures constructed via coherent projections , commun .",
    "11 ( 2011 ) , no .",
    "2 , pp . 70 - 111 , http://arxiv.org/abs/0810.5042[arxiv:0810.5042 ]      m. buliga , braided spaces with dilations and sub - riemannian symmetric spaces , in : geometry",
    ". exploratory workshop on differential geometry and its applications , eds .",
    "d. andrica , s. moroianu , cluj - napoca 2011 , 21 - 35 , http://arxiv.org/abs/1005.5031[arxiv:1005.5031 ]    capanni , n. , macleod , c. , maxwell , g. , & clayton , w. , 2005 .",
    "artificial biochemical networks , in : international conference on computational intelligence for modelling , control and automation , 2005 and international conference on intelligent agents , web technologies and internet commerce .",
    "november 2005 .",
    "vienna , austria . in proc .",
    "ieee special issue , vol .",
    "2 , pp 98 - 102 . https://openair.rgu.ac.uk/handle/10059/306[(html ) ]      w.fontana and l.w.buss , the barrier of objects : from dynamical systems to bounded organizations , in : boundaries and barriers , j.casti and a.karlqvist ( eds . ) , pp.56 - 116 , addison - wesley , 1996 http://fontana.med.harvard.edu/www/documents/wf/papers/objects.pdf[(pdf ) ]    w.fontana and l.w.buss , `` the arrival of the fittest '' : toward a theory of biological organization , bull .",
    "biol . , 56 , 1 - 64 ( 1994 ) http://fontana.med.harvard.edu/www/documents/wf/papers/arrival.pdf[(pdf ) ]        gerrard , c. e. , mccall , j. , coghill , g. m. and macleod , c. , 2011 . artificial reaction networks .",
    "11th uk workshop on computational intelligence , university of manchester , september 2011 , paper 6 , https://openair.rgu.ac.uk/handle/10059/669[(html ) ]            l. h. kauffman , knot automata .",
    "proceedings of the twenty - fourth international symposium on multiple - valued logic , 1994 , boston , massachusetts , p. 328 - 333 , http://homepages.math.uic.edu/~kauffman/knotautomata.pdf[(pdf ) ]              christian tschudin and lidia yamamoto : `` a metabolic approach to protocol resilience '' , proc .",
    "1st workshop on autonomic communication ( wac 2004 ) , berlin , germany , october 2004 .",
    "springer lncs volume 3457 , pp ."
  ],
  "abstract_text": [
    "<S> based on graphic lambda calculus , we propose a program for a new model of asynchronous distributed computing , inspired from hewitt actor model , as well as several investigation paths , concerning how one may graft lambda calculus and knot diagrammatics .    [ section ]    [ theorem]proposition    [ theorem]lemma    [ theorem]corollary    [ theorem]definition    [ theorem]remark    [ section ] </S>"
  ]
}
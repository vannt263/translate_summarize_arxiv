{
  "article_text": [
    "ice models are a class of simple classical models of the statistical properties of the hydrogen atoms in water ice . in ice ,",
    "the oxygen atoms are located on a lattice , and each oxygen atom has four hydrogen bonds to neighbouring oxygen atoms , giving a four - fold coordinated lattice .",
    "however , as has long been known , the proton ( hydrogen atom ) which forms a hydrogen bond is located not at the centre point of the line between two oxygens , but at a point closer to one of the two .",
    "bernal and fowler  @xcite and pauling  @xcite proposed that the protons are arranged according to two rules , known as the ice rules :    1 .",
    "there is precisely one hydrogen atom on each hydrogen bond .",
    "there are precisely two hydrogen atoms near each oxygen atom .",
    "ice models are a class of models mimicking the behaviour of systems which obey these rules .",
    "the most widely - studied ice model is the model on a square lattice in two dimensions .",
    "a version of this model has been solved exactly by lieb  @xcite .",
    "the exact solution gives us , for instance , the critical temperature and the free energy of the model .",
    "however , there are a number of quantities of interest which can not be obtained from the exact solution , and for these quantities we turn to monte carlo simulation .    in this paper",
    "we introduce a number of new monte carlo algorithms for the simulation of ice models , and compare their efficiency .",
    "we will show that one of them , the three - colour cluster algorithm developed in section  , possesses a very small dynamic exponent ( possibly zero ) , and so suffers very little from critical slowing down . using this , and other algorithms presented here ,",
    "we determine numerically several critical exponents which have not been accurately measured previously : the dimensionality of the percolating cluster of symmetric vertices in the f model at critical temperature , the scaling of the largest loop in the loop - representation of both square ice and the f model at critical temperature , and the scaling of the trajectory of a wandering defect in square ice .",
    "our ice model is as follows .",
    "oxygen atoms are arranged on the vertices of a square grid , and between each oxygen and its four neighbours there are hydrogen bonds , represented by the lines of the grid .",
    "commonly , arrows are drawn on the bonds to indicate the positions of the protons : the arrow points towards the vertex which the proton is nearest to . the first ice rule above then corresponds to the condition that there should be exactly one arrow on each bond .",
    "the second ice rule says that each vertex should have exactly two arrows pointing towards it , and two pointing away .",
    "this gives us six types of vertices , and for this reason ice models are sometimes also referred to as six - vertex models .",
    "the six vertices are illustrated in figure  .",
    "[ sixvertex ]    in the first part of this paper we study the simplest six - vertex model , in which all types of vertices are assigned the same energy .",
    "this model is usually called `` square ice '' .",
    "the name is somewhat confusing , since other ice models on square lattices , such as the kdp and f models of section  , are not also called square ice .",
    "however , since the name is widely used we will follow convention and use it here too . because all configurations of square ice possess the same energy , the model s properties are",
    "entirely entropically driven and variations in temperature have no effect on its behaviour .",
    "it turns out that the square ice model is equivalent to two other well - studied models in statistical physics : the three - colouring model , and a random - surface model on a square lattice . in this section",
    "we describe these two models as well as introducing the `` fully loop - covered lattice '' model , which is also equivalent to the square ice model .",
    "lenard  @xcite has shown an important result about square ice which will help us in the design of an efficient monte carlo algorithm for the simulation of the model .",
    "lenard demonstrated that the configurations of an ice model on a square lattice can be mapped onto the configurations of a lattice of squares coloured using three different colours , with the restriction that no two nearest - neighbour squares have the same colour .",
    "it is actually not very difficult to demonstrate this equivalence .",
    "the procedure for working out the configuration of the arrows of the ice model , given a suitable colouring of the plaquets on the lattice is shown in figure  , in which the three colours are represented by the numbers 1 , 2 and 3 .",
    "the rule is that we imagine ourselves standing on one of the squares of the lattice and looking towards one of the adjacent ones . if the number in the adjacent square is one higher ( modulo three ) than the number in the square we are standing on , we draw an arrow on the intervening bond pointing to the right .",
    "otherwise we draw an arrow to the left .",
    "the procedure is then repeated for every other bond on the lattice .",
    "[ equivalent ]    clearly the resulting configuration of arrows obeys the first ice rule ; since neighbouring plaquets must have different colours the prescription above will place one and only one arrow on every bond .",
    "the second ice rule requires that each vertex has two ingoing and two outgoing arrows .",
    "if we walk from square to square in four steps around a vertex , then each time we cross a bond separating two squares , the colour either increases or decreases by one , modulo three .",
    "the only way to get back to the colour we started with when we have gone all the way around is if we increase twice and decrease twice .",
    "this means that the vertex we walk around must have two ingoing and two outgoing arrows , exactly as we desire .",
    "thus each configuration of the three - colouring model corresponds to a unique correct configuration of square ice",
    ".    we can also reverse the process , transforming an ice model configuration into a three - colouring .",
    "we are free to choose the colour of one square on the lattice as we wish , but once that one is fixed , the arrows on the bonds separating that square from each of its neighbours uniquely determine the colour of the neighbouring squares , and , by repeated application of the rule given above , the colour of all the rest of the squares in the lattice .",
    "thus , the number of ways in which the squares of the lattice can be coloured is exactly the number of configurations of the ice model on the same lattice , regardless of the size of the lattice , except for a factor of three .",
    "square ice is also equivalent to a random surface model in which heights are assigned to the plaquets of a square lattice . if we assign these heights in such a way that adjacent plaquets have heights which differ by exactly 1 , then again there is a one - to - one mapping between the configurations of the ice model and the random surface : the mapping is identical to the three colour mapping of the last section except for the absence of the modulo operation .",
    "the six - vertex model is also equivalent to a `` fully loop - covered lattice model '' in which ( non - directed ) loops are formed by joining the vertices of the square lattice with `` links '' in such a way that each site on the lattice belongs to exactly one self - avoiding loop . to demonstrate this equivalence ,",
    "consider the following rule .",
    "first , divide the lattice into even and odd sites in a checkerboard pattern .",
    "now place links along all bonds whose arrows are pointing away from an even vertex . since each such arrow must also be pointing towards an odd vertex , and since each vertex has two ingoing and two outgoing arrows , this creates two links to every site on the lattice .",
    "hence the lattice is fully covered by closed self - avoiding loops .",
    "proving the reverse result , that each configuration of loops corresponds to exactly one configuration of arrows is equally simple : we place outgoing arrows on each bond adjoining an even site which is part of one of our loops .",
    "the direction of all the remaining arrows is then fixed by using the second ice rule .",
    "in this paper we develop a number of different monte carlo algorithms for calculating the average properties of ice models on square lattices . in the case of square ice ,",
    "in which all configurations of the lattice have the same energy , the necessary steps for creating such an algorithm are ( i )  to choose a set of elementary moves which take us from one state of the model to another , ( ii )  to demonstrate that these moves can take us from any state of a finite lattice to any other in a finite number of steps ( the condition of ergodicity ) and ( iii )  to construct an algorithm from these moves such that in equilibrium the rate at which a particular move occurs which takes us from a state @xmath1 to a state @xmath2 is the same as the rate for the reverse move from @xmath2 to @xmath1 ( the condition of detailed balance ) .",
    "it is then straightforward to show that over a sufficiently long period of time we will sample all states on a finite lattice with equal probability .",
    "the choice of an elementary move however is not obvious , since there is no local change we can make to the directions of the arrows on the lattice which will preserve the second ice rule .",
    "there is no equivalent of the reversal of a single spin in an ising model , for example . in the next few sections we will consider four different candidate non - local update moves for square ice , which lead us to four different monte carlo algorithms of varying efficiency .",
    "first , we look at the standard algorithm , which involves reversing the arrows around a loop on the lattice .",
    "it is clear that one possible move which takes us from an allowed configuration of arrows in an ice model to another is the reversal of all the arrows in a loop chosen such that all arrows point in the same direction around the loop .",
    "such a loop has one arrow pointing in and one pointing out of each participating vertex , so that the reversal of all of them preserves the number of arrows going in and out of each vertex .",
    "notice that these loops are not the same loops as those in the fully loop - covered model described above . in that case",
    "the arrows along the loop point in alternating directions , and their reversal would violate the second ice rule .",
    "[ ionic ]    how do we find a loop in which all arrows point in the same direction around the loop ?",
    "the most straightforward method is illustrated in figure  .",
    "starting with a correct configuration of the model ( a ) , we choose a single vertex at random from the lattice .",
    "we then choose at random one of the two outgoing arrows at this vertex and reverse it ( b ) .",
    "( we could just as well choose an ingoing arrow  either is fine . )",
    "this creates a violation of the second ice rule at the initial vertex and also at a new vertex at the other end of the reversed arrow . in ice terminology",
    "these are referred to as ionic defects : the vertices with one and three outgoing arrows correspond to @xmath3 and @xmath4 respectively .",
    "we can remove the defect at the new vertex by choosing at random one of the two outgoing arrows at this vertex and reversing it ( c ) .",
    "( there are actually three outgoing arrows at this vertex , but one of them is the arrow we reversed in the first move and we exclude this one from our set of possible choices to avoid having the loop retrace its steps . ) this creates another defect at the other end of that arrow , and so forth . in this manner one of the two defects created by the reversal of the first arrow diffuses around the lattice ( d ) until by chance",
    "it finds itself back at the starting site once more , at which point it annihilates with the defect there resulting in a new configuration of the lattice which satisfies the ice rules ( e ) .",
    "the net result is the reversal of a loop of arrows on the lattice .    in the figure",
    "we have illustrated the case of the smallest possible loop , which on the square lattice involves the reversal of just four arrows . however , provided the size of the lattice allows for it , the loops can be arbitrarily long , and for this reason we will refer to this algorithm as the `` long loop algorithm '' . at each step around the loop",
    "we have a choice to make between two possible arrows that we could reverse , and if we make these choices at random with equal probability we generate a species of random walk across the lattice .",
    "this walk could quite possibly take a long time to return to its starting point .",
    "however , on the finite lattices we use in our monte carlo simulations we are guaranteed that the walk will eventually return . and long loops are not necessarily a bad thing , since although they take longer to generate they also flip a larger number of arrows , which allows the system to decorrelate quicker .",
    "an alternative , but entirely equivalent scheme , makes use of so - called bjerrum defects  @xcite , rather than the ionic defects we have employed .",
    "a bjerrum defect is a violation of the first ice rule : a bond containing two protons , one at either end of the bond ( a bjerrum d defect ) , or a bond containing no protons ( a bjerrum l defect ) .",
    "one can construct a monte carlo move using bjerrum defects just as we did with ionic defects by removing an arrow from a bond , and placing it on another bond .",
    "this creates one d defect and one l defect .",
    "these defects can also wander around and eventually recombine , resulting in a new state of the lattice .",
    "algorithms based on wandering bjerrum defects have been used by rahman and stillinger  @xcite for the simulation of three - dimensional ice and by yanagawa and nagle  @xcite for the simulation of two - dimensional ice .",
    "the process in which two defects ( either ionic or bjerrum ) are created and diffuse around the lattice until they find one another again is actually very similar to what goes on in real ice . in real ice , changes in the proton configuration are mediated principally by the diffusion of bjerrum defects around the lattice .",
    "the density of defects is very small  already at @xmath5c only about one in five million bonds is occupied by a bjerrum defect  and the number of ionic defects is smaller even than this  @xcite .",
    "we have now specified a move that will take us from one correct configuration of the arrows to another , and our proposed monte carlo algorithm for square ice is simply to carry out a large number of such moves , one after another .",
    "however , as we remarked above , we still need to demonstrate that the algorithm satisfies the criteria of ergodicity and detailed balance .",
    "first , consider ergodicity , whose proof is illustrated in figure  .",
    "the figure shows how the difference between two configurations of the model on a finite lattice can be decomposed into the flips of arrows around a finite number of loops .",
    "we can demonstrate the truth of this statement for any two configurations by the following argument .",
    "each of the vertices in figure   differs from each of the others by the reversal of an even number of arrows .",
    "this fact follows directly from the ice rules .",
    "thus , if we take two different configurations of the model on a particular lattice and imagine drawing lines along the bonds on which the arrows differ , we are guaranteed that there will be an even number of such lines meeting at each vertex .",
    "thus these lines must form a set of ( possibly intersecting ) loops covering a subset of the vertices on the lattice .",
    "it is not difficult to show that these loops can be chosen so that the arrows around each one all point in the same direction .",
    "since the reversal of the arrows around these loops are precisely our monte carlo moves , and since there are a finite number of such loops , it follows that we can get from any configuration to any other in a finite number of steps , and thus the system is ergodic .",
    "note that it is important to allow the loops to pass through the periodic boundary conditions for this to work .",
    "[ ergodicity ]      our monte carlo move consists of choosing a starting site @xmath6 and reversing a loop of arrows starting at that site and ending , @xmath7 steps later , at the same site @xmath8 . the probability of selecting a particular site @xmath6 as the starting site is @xmath9 , where @xmath10 is the number of sites on the lattice .",
    "the probability of making a particular choice from the two possible outgoing arrows at each step around the loop is @xmath11 for each step , so that the probability that we chose a certain sequence of steps is equal to @xmath12 , and the probability of generating the entire loop is @xmath13 . for the reverse move , in which the same loop of arrows is flipped back again to take us from state",
    "@xmath2 back to state @xmath1 , the exact same arguments apply , again giving us a probability of @xmath13 for making the move , and hence detailed balance is observed .",
    "this , in combination with the demonstration of ergodicity above , ensures that our algorithm will sample all states of the model with equal probability .",
    "a practical problem which arises in the algorithm presented above , is that if we simulate a large lattice , the probability that we return to the starting site @xmath6 is quite small once we have wandered sufficiently far away from it , and thus it may take a long time to generate even one move . in response to this problem , we have devised a second algorithm which also reverses the arrows around a closed loop of bonds , but this algorithm generates shorter loops . for obvious reasons we call this the `` short loop algorithm '' .",
    "the short loop algorithm works in a similar way to the long loop algorithm : we choose a starting site @xmath6 at random from the lattice and reverse one of the outgoing arrows at that vertex , thereby creating two defects .",
    "we then reverse further arrows so that one of the defects wanders around the lattice randomly .",
    "however , rather than waiting until the two defects find one another again , we now continue only until the wandering defect encounters a site , call it @xmath14 , which it has encountered before in its path across the lattice : @xmath15 with @xmath16 . from this point",
    ", we retrace our steps _ backwards _ down the old path of the defect , until we reach @xmath6 again , reversing all the arrows along the way .",
    "the net result is that we reverse all the arrows along the path from site @xmath6 to @xmath17 twice ( which means that they are the same before and after the move ) , and all the arrows in the loop from @xmath17 to @xmath14 once .",
    "thus we have again reversed all the arrows around a loop . by contrast with the long loop algorithm however , the wandering defect does not have to find its way back to its original starting point ; it only needs to find any site on its previous path .",
    "this guarantees that the length of its walk will never exceed @xmath10 steps , and in practice the typical move is much shorter than this .",
    "( in fact , the number of steps tends to a finite limit as the lattice becomes large ",
    "see section  . )    as with the previous algorithm , we need to demonstrate ergodicity and detailed balance .",
    "the proof of ergodicity is identical to that for the previous case : the difference between any two states on a finite lattice can be reduced to the reversal of the spins around a finite number of loops .",
    "since the algorithm has a finite chance of reversing each such loop , it can connect any two states in a finite number of moves .",
    "the proof of detailed balance is also similar to that for the long loop algorithm .",
    "consider again a move which takes us from state @xmath1 to state @xmath2 . the move consists of choosing a starting site @xmath6 at random , then a path @xmath18 in which the arrows are left untouched , followed by a loop @xmath19 in which we reverse the arrows .",
    "( remember that the last site in the loop @xmath14 is necessarily the same as the first @xmath17 . )",
    "the probability that we chose @xmath6 as the starting point is @xmath9 , where @xmath10 is the number of sites on the lattice .",
    "after that we have a choice of two directions at each step along the starting path and around the loop , so that the probability that we end up taking the path @xmath20 is equal to @xmath21 and the probability that we follow the loop @xmath22 is @xmath23 .",
    "after the loop reaches site @xmath15 , we do not have any more free choices .",
    "the probability that we move from a configuration @xmath1 to configuration @xmath2 by following a particular path @xmath20 and loop @xmath22 is thus @xmath24    for the reverse move , the probability of starting at @xmath6 is again @xmath9 , and the probability of following the same path @xmath20 as before to site @xmath17 is @xmath21 again .",
    "however , we can not now follow the same loop @xmath22 from @xmath17 to @xmath14 as we did before , since the arrows along the loop are reversed from what they were in state @xmath1 . on the other hand",
    ", we can follow the loop in the reverse direction , and this again has probability @xmath23 .",
    "thus we have @xmath25 exactly as before .",
    "this demonstrates detailed balance for the algorithm and , in combination with the demonstration of ergodicity , ensures that all possible states will be sampled with equal probability .",
    "we now have two monte carlo algorithms which correctly sample the states of the square ice model and since , as we showed in section  , the states of this model can be mapped onto the states of the three colour lattice model , we can of course use the same algorithm to study the three colour model . in this section",
    "however , we will explore the other side of the same question : is there a natural monte carlo dynamics for the three - colouring model which could then be used to sample the states of the ice model ?",
    "it turns out that there is , and the resulting algorithm provides not only an efficient way of simulating ice models , but will also prove useful when we get onto the energetic ice models of section   in which different types of vertices are assigned different energies .    in the three - colouring representation",
    "the degrees of freedom  the colours  are located on the plaquets of the lattice , rather than at the vertices , and , as we showed earlier , the ice rules translate into the demand that nearest - neighbour squares have different colours . just as in the case of the square ice model",
    ", there is no obvious update move which will take us from state to state .",
    "although there are some states in which the colour of one square can be changed from one value to another without violating the ice rules , there are also states in which no such moves are possible , and therefore single - plaquet moves of this kind can not reach these states , and so do not lead to an ergodic dynamics . again then , we must resort to non - local moves , and the most obvious such move is to look for clusters of nearest - neighbour plaquets of only two colours , call them @xmath26 and @xmath27 , entirely surrounded by plaquets of the third colour @xmath28 . a move which exchanges the two colours @xmath26 and @xmath27 in such a cluster but leaves the rest of the lattice untouched satisfies the ice rules , and this suggests the following cluster - type algorithm for square ice :    1 .",
    "we choose a plaquet at random from the lattice as the seed square for the cluster .",
    "suppose this plaquet has colour @xmath26 .",
    "we choose another colour @xmath29 at random from the two other possibilities .",
    "starting from our seed square , we form a cluster by adding all nearest - neighbour squares which have either colour @xmath26 or colour @xmath27 .",
    "we keep doing this until no more such nearest neighbours exist .",
    "the colours @xmath26 and @xmath27 of all sites in the cluster are exchanged .",
    "there are a couple of points to notice about this algorithm .",
    "first , the cluster possesses no nearest neighbours of either colour @xmath26 or colour @xmath27 and therefore all its nearest neighbours must be of the third colour , @xmath28 . in the simplest case , the seed square has no neighbours of colour @xmath27 at all , in which case the cluster consists of only the one plaquet .",
    "it is crucial to the working of the algorithm that such moves should be possible . if we had chosen instead to seed our cluster by picking two neighbouring plaquets and forming a cluster with their colours , single - plaquet moves would not be possible and we would find that the algorithm satisfied neither ergodicity nor detailed balance .",
    "notice also that within the boundary of colour @xmath28 , the cluster of @xmath26s and @xmath27s must form a checkerboard pattern , since no two @xmath26s or @xmath27s can be neighbours .",
    "we are now in a position to prove that our algorithm satisfies the conditions of ergodicity and detailed balance . in this case",
    "it turns out that detailed balance is the easier to prove .",
    "consider , as before , a monte carlo move which takes us from a state @xmath1 to a state @xmath2 , and suppose that this move involves a cluster of @xmath7 squares .",
    "the probability of choosing our seed square in this cluster is @xmath30 , where @xmath10 is the total number of plaquets on the lattice .",
    "the probability that we then choose @xmath27 as the other colour for the cluster is @xmath11 , and after that there are no more choices : the algorithm specifies exactly how the cluster should be grown from here on .",
    "thus the total probability for the move from @xmath1 to @xmath2 is @xmath31 .",
    "exactly the same argument applies for the reverse move from @xmath2 to @xmath1 with the same values of @xmath7 and @xmath10 , and hence the rates for forward and reverse moves are the same .",
    "thus detailed balance is obeyed .",
    "the proof of ergodicity is a little trickier .",
    "it involves two steps .",
    "first , we show that from any configuration we can evolve via a finite sequence of reversible moves to a checkerboard colouring ( a configuration in which one of the three colours is absent ) .",
    "then we show that all checkerboard colourings are connected through reversible moves",
    ".    any configuration of the lattice can be regarded as a number of checkerboard regions consisting of only two colours , divided by boundaries .",
    "this result is obvious , since each site of colour @xmath26 must have at least two neighbours with the same colour , and therefore each square on the lattice belongs to a checkerboard domain of at least three squares . however , under the dynamics of our proposed monte carlo algorithm , the boundaries between these domains can move .",
    "if we have a domain of colours @xmath26 and @xmath27 and another of @xmath27 and @xmath28 then by choosing one of the plaquets on the boundary as the seed square for our monte carlo move , and @xmath27 as one of the colours for the cluster , we can make the boundary move one square in one direction or the other , with the direction depending on whether the other colour for the cluster was @xmath26 or @xmath28 . in this way we can take a single simply - connected cluster of one checkerboard pattern and , over a number of steps ,",
    "grow its border until the cluster covers the entire lattice , leaving the lattice in a checkerboard state .",
    "there are six of these checkerboard colourings , and from any one of them the others can easily be reached , since on a checkerboard the colour of any square can be changed on its own without changing any other squares .",
    "thus for example we can get from a checkerboard of colours @xmath26 and @xmath27 to one of @xmath26 and @xmath28 by changing all the @xmath27s to @xmath28s one by one .",
    "all other combinations can be reached by a similar process .",
    "since we can get from any state @xmath1 to a checkerboard colouring and from any checkerboard to any other , all via reversible moves , it follows that our algorithm is ergodic .",
    "the algorithm presented above , a single - cluster algorithm , resembles in spirit the wolff single - cluster algorithm for the ising model  @xcite .",
    "it is also possible to construct a multi - cluster algorithm for the three - colouring model , similar to the swendsen - wang algorithm for the ising model  @xcite . in this algorithm",
    "we start by choosing at random a pair of colours @xmath26 and @xmath27 .",
    "then we construct all clusters of nearest - neighbour spins made out of these two colours , and for each cluster we choose at random with 50% probability whether to exchange the two colours or not .",
    "this algorithm satisfies ergodicity for the same reason the single - cluster algorithm did  we can repeatedly choose two colours for the move until a single cluster grows to fill the entire lattice , giving a checkerboard pattern .",
    "but we can get from any checkerboard to any other so that any state can be reached in a finite number of steps on a finite lattice .",
    "the algorithm also satisfies detailed balance : the probability of selecting a particular two out of the three colours for a move is @xmath32 , and the probability of exchanging the colours in a particular set of clusters is @xmath33 , where @xmath34 is the number of clusters .",
    "the probability for the reverse move is exactly the same , and hence detailed balance is upheld .",
    "in the previous sections , we have proposed four algorithms for the simulation of square ice : the long loop algorithm , the short loop algorithm , the single - cluster three - colouring algorithm , and the full - lattice three - colouring algorithm . in this section",
    "we consider these algorithms one by one and compare their computational efficiency .    [ walk ]    [ longloop ]      the long loop algorithm involves the creation of a pair of ionic defects , one of which diffuses around the lattice until it recombines with the first , in the process reversing all the arrows along the path of its diffusion . to assess the efficiency of this algorithm , we first measure the average number of steps which the wandering defect takes before it recombines as a function of the system size @xmath22 . for an ordinary random walker on a square lattice ,",
    "this number scales as @xmath35 . in the case of the wandering defect",
    "however , we find that it scales instead as @xmath36see figure  . the amount of cpu time required per step in our algorithm increases linearly with the size of the loop , and",
    "hence we expect the cpu time per monte carlo step also to increase with system size as @xmath36 .",
    "this is not necessarily a problem ; since longer loops reverse more arrows as well as taking more cpu time it is unclear whether longer is better in this case , or worse . to answer this question we need to consider the correlation time of the algorithm .",
    "we have measured the correlation time for an observable @xmath37 which we define to be the density of the symmetric vertices  5 and  6 in figure  .",
    "as figure   shows , when we measure time in monte carlo steps we find a correlation time @xmath38 .",
    "it is however more common ( and more convenient for the comparison of our algorithms ) to measure time in `` sweeps '' of the lattice , which in this case means arrow flips per bond on the lattice . on average",
    ", each monte carlo step corresponds to @xmath39 sweeps on a @xmath40-dimensional lattice , which means that the correlation time on our 2d lattice goes as @xmath41 this quantity measures the amount of computer effort we have to invest , per unit area of the lattice , in order to generate an independent configuration of the arrows .",
    "the square ice model is a critical model , possessing an infinite correlation length  @xcite .",
    "thus it comes as no surprise that the correlation time scales as a non - integral power law with system size .",
    "the exponent @xmath42 is the dynamic exponent for the critical system  the anomalous scaling of the correlation time over and above the @xmath43 scaling expected of a system far from criticality . as dynamic exponents go , this is a reasonably small one .",
    "the metropolis algorithm for the normal ising model in two dimensions for example has a dynamic exponent of about @xmath44  @xcite , making simulations of the model very time consuming for large lattices close to criticality .",
    "however , as we will see , some of our other algorithms for square ice do better still , possessing dynamic exponents not measurably different from zero .",
    "the short loop algorithm of section   also involves creating a pair of defects and having one of them diffuse around .",
    "recall however , that in this case the wandering defect only has to find _ any _ of the sites which it has previously visited in order to close the loop and finish the monte carlo step . if the diffusion were a normal random walk then this process would generate loops of a finite average length .",
    "although the diffusion of defects in square ice is not a true random walk it turns out once more that the same result applies .",
    "numerically we find that the average number of steps per move is @xmath45 , independent of the lattice size , for a sufficiently large lattice .",
    "this figure includes the steps taken at the end of the move which simply flip a number of arrows back to their starting configuration and therefore have no net effect on the state of the system .",
    "( see section  . )",
    "we find that typically about 58% of the arrows reversed during a move have to be restored in their original state .",
    "this is certainly a source of inefficiency in the algorithm .",
    "[ shortloop ]    the correlation time measured in monte carlo steps @xmath46 , for the same observable @xmath37 as above , increases as @xmath35 ( figure  ) .",
    "since the mean number of steps in a loop is independent of @xmath22 , the correlation time per unit volume goes as @xmath47 thus the short loop algorithm scales optimally with system size . to the accuracy of our simulations",
    "the dynamic exponent is @xmath48      our third algorithm is the single - cluster three - colouring algorithm outlined in section  . for this algorithm the average cpu time per monte carlo",
    "step scales as the average cluster size @xmath49 . like the loop length in the long loop algorithm ,",
    "this quantity scales up with increasing lattice size and numerically we find that @xmath50 the correlation time per monte carlo step goes as @xmath51 and hence the correlation time in steps per site goes as @xmath52 indicating that the single - cluster algorithm is a very poor algorithm indeed for studying square ice on large lattices .",
    "[ sw3sqr ]      our last algorithm , the full - lattice three colouring algorithm , also described in section  , generates clusters in a way similar to the single cluster algorithm , but rather than generating only one cluster per monte carlo step , it covers the whole lattice with them . for this algorithm",
    "we find numerically that the correlation time @xmath53 measured in monte carlo steps is approximately constant as a function of lattice size ( figure  ) .",
    "since each monte carlo move updates sites over the entire lattice , the cpu time per move scales as @xmath35 and hence the correlation time in moves per site is @xmath54 thus , like the short loop algorithm , this one possesses optimal scaling as lattice size increases , with a measured dynamic exponent of @xmath55 .    comparing the four algorithms ,",
    "clearly the most efficient ones for large systems are the short loop algorithm and the full - lattice three - colouring algorithm . in both other algorithms , the computer time required to generate an independent configuration of the lattice increases with system size .",
    "the larger impact of the larger moves in these algorithms does not compensate for the extra effort invested generating them . between the short loop algorithm and the full - lattice three - colouring algorithm ,",
    "it is harder to decide the winner , since both have the same scaling of cpu requirements with system size .",
    "our results show in fact that the two algorithms are comparable in speed , both giving on the order of a million site updates per second on the workstations used for this study .",
    "the loop algorithm is perhaps slightly faster ( maybe 10 or 20 per cent ) and has the advantage of working on lattices of other topologies as well as the square lattices used here .",
    "the three - colouring algorithm on the other hand is considerably more straightforward to program .    as an example of the use of our algorithms ,",
    "we have measured one of the simplest non - trivial critical exponents for the square ice model . as we showed in section",
    ", each state of the square ice model corresponds to a configuration of a square lattice which is entirely covered by closed , non - self - intersecting loops . using our full - lattice three - colouring algorithm ,",
    "we have measured the probability @xmath56 that a particular site is visited by the largest loop in such a model as a function of lattice size @xmath22 .",
    "the results are shown in figure  .",
    "the data closely follow a power - law : @xmath57 .",
    "[ squareloop ]",
    "there are a number of other systems besides h@xmath58o with four - fold coordinated hydrogen bonds , the most studied being potassium dihydrogen phosphate ( kh@xmath58po@xmath59 ) , also known as kdp .",
    "slater  @xcite argued that kdp at low temperatures could be modeled using a six - vertex model in which vertices  1 and  2 in figure   are favoured by giving them an energy @xmath60 , while all the others are given energy zero .",
    "notice that it is possible to form a domain on a square lattice consisting only of type  1 vertices , or only of type  2 .",
    "thus there are two degenerate ground states of the kdp model in which the lattice is entirely covered with vertices of one of these two types , and the model displays a symmetry - breaking phase transition from a high - temperature phase in which the two appear with equal probability to a low - temperature one in which one or the other dominates .",
    "a suitable order parameter to describe this transition is the polarization , or average direction of the arrows : @xmath61 where the vector @xmath62 is a unit vector in the direction of the arrow . in the thermodynamic limit",
    "the polarization will be zero above the critical temperature @xmath63 , and non - zero below it with a direction either upwards and to the right , or downwards and to the left , and a magnitude which approaches unity as @xmath64 .",
    "another widely - studied energetic ice model is the so - called f model @xcite , in which vertices  5 and  6 in figure   are given a lower energy @xmath60 and all the others are given energy zero .",
    "this model has a ground state in which vertices  5 and  6 alternate in a checkerboard pattern across the lattice .",
    "there are again two possible such ground states , depending on which type of vertex falls on the even sites of the checkerboard and which on the odd , and there is a symmetry breaking phase transition from the high - temperature phase in which the two vertices fall on even and odd sites with equal probability . since neither vertex  5 nor vertex  6 possesses any net polarization , the value of @xmath65 is zero in the thermodynamic limit for the f model , regardless of temperature .",
    "however , one can define an anti - ferroelectric order parameter which does become non - zero in the low - temperature phase  @xcite .    a third energetic ice model which has attracted some attention recently is the staggered , body - centred solid - on - solid  ( bcsos ) model  @xcite .",
    "in this model the square lattice is divided into even and odd sites and the vertex types are divided into three groups . on even lattice sites vertices of types  1 and  2 have energy @xmath66 and type  3 and  4 have energy @xmath67 , on odd lattice sites @xmath66 and @xmath67 are reversed , and vertices of types  5 and  6 have energy zero everywhere .",
    "the values of @xmath66 and @xmath67 may be either positive or negative . in the height representation described in section   this model",
    "is believed to described roughening transitions in certain ionic crystals with the cscl structure .      in section",
    "we developed a variety of elementary ergodic moves for sampling the states of ice models on square lattices , and showed how these could be used to create monte carlo algorithms for the square ice model , in which all states have the same energy .",
    "we can use the same sets of elementary moves to create monte carlo algorithms for the energetic ice models as well .",
    "the simplest method is to employ a metropolis - type scheme in which instead of always carrying out every move generated by the algorithm , we carry them out with an acceptance probability @xmath20 which depends on the energy difference @xmath68 between the states @xmath1 and @xmath2 of the system before and after the move : @xmath69 here we give examples of algorithms for the f model , but the same ideas can easily be adapted for use with other energetic ice models .",
    "the hamiltonian of the f model is given by @xmath70 where @xmath71 is a number corresponding to the type of vertex at site @xmath72 , using the numbering scheme illustrated in figure  .",
    "[ loopdir ]    let us first consider algorithms in which the proposed moves involve reversing the directions of the arrows around a loop on the lattice , as in the long and short loop algorithms of sections   and",
    ". for these moves the only vertices which change type ( and hence energy ) are those which the loop passes through .",
    "as is shown in figure  , a symmetric vertex ( type  5 or  6 ) always becomes non - symmetric if the loop passes through it , thereby increasing the total energy .",
    "if the loop passes straight through a non - symmetric vertex , the vertex remains non - symmetric and its energy is unchanged . on the other hand , if the loop makes a turn as it passes through a non - symmetric vertex , the vertex becomes symmetric and the energy decreases .",
    "thus , given a particular loop , we can calculate the value of @xmath73 by counting the number @xmath7 of symmetric vertices which the loop passes through and the number @xmath34 of non - symmetric vertices in which it makes a @xmath74 turn , and applying the formula @xmath75    [ slcrit ]    the density of symmetric vertices in the f model increases with decreasing temperature , so that the average number of symmetric vertices through which a loop passes grows as we go to lower temperatures .",
    "since each symmetric vertex which we pass adds an amount @xmath66 to @xmath73 , it is clear that loop moves will carry an energy cost which increases with their length and that long loops will be very energetically costly , especially at low temperatures .",
    "this suggests that the short loop algorithm of section   will be more efficient for the simulation of the f model at finite temperature . in figure",
    "we show the correlation time @xmath46 measured in monte carlo steps for this algorithm , and the best fit to these data gives us @xmath76 as with square ice , the number of sites updated by a single monte carlo step tends to a constant for large lattices , so that the correlation time in steps per site is @xmath77 to the accuracy of our simulations then , this algorithm has a zero dynamic exponent . however , it turns out that this algorithm is still quite inefficient for temperatures in the region of the critical temperature and below .",
    "for example at @xmath63 the acceptance ratio is 36% so that nearly two thirds of the computational effort is wasted .",
    "for this reason we have investigated a number of other algorithms for simulating the f model .",
    "how can we increase the acceptance ratio of our monte carlo algorithm ?",
    "we would like to propose moves that are less likely to cost energy .",
    "for example , if we can encourage the loop to make turns in non - symmetric vertices , we will on average end up with a lower final energy , since a reversal of the arrows around the loop will create more symmetric vertices .",
    "unfortunately , it turns out to be quite complicated to formulate a correct algorithm along these lines , and the expression for the acceptance ratio becomes quite tedious .",
    "there is however an elegant alternative , which is to employ a three - colouring algorithm of the type discussed in section  .",
    "the equivalent of a symmetric vertex in the three - colouring model is a group of four squares in which both of the diagonally opposing pairs share the same colour . in non - symmetric vertices only one of these two diagonal pairs share the same colour . making use of this observation",
    "we can write the hamiltonian of the f - model ( equation  ) in the form @xmath78 } ( \\delta_{c_i , c_j } - \\frac12 )    = n\\epsilon - \\epsilon \\sum_{[i , j ] } \\delta_{c_i , c_j},\\ ] ] where the summation runs over all pairs of next - nearest - neighbour squares @xmath79 $ ] , and @xmath80 is the colour of square @xmath72 .",
    "we see that it is energetically favourable to have pairs of next - nearest - neighbour squares with an identical colour .",
    "we can make use of this observation to create an efficient algorithm for the three - colouring model . in this algorithm , as in the algorithms for square ice discussed in section  , we build clusters of nearest - neighbour plaquets of two colours , but now in addition , we also add to the cluster next - nearest - neighbour plaquets as well . in detail",
    "our algorithm is as follows :    1 .",
    "we choose a plaquet at random from the lattice as the seed square for the cluster .",
    "suppose that this plaquet has colour @xmath26 .",
    "we choose another colour @xmath29 at random from the two other possibilities .",
    "starting from our seed square , we form a cluster by adding all nearest - neighbour squares which have either colour @xmath26 or colour @xmath27 , and in addition we now also add to the cluster the squares which are next - nearest neighbours of some square @xmath72 which is already in the cluster , provided they have the _ same _ colour as square @xmath72 .",
    "however , we make this latter addition with a temperature - dependent probability @xmath81 , whose value we calculate below in order to satisfy the condition of detailed balance .",
    "we go on adding squares to the cluster in this way until no more additions are possible .",
    "4 .   the colours @xmath26 and @xmath27 of all sites in the cluster are exchanged .",
    "we can also make a full - lattice version of this algorithm in exactly the same way as for the square ice case .",
    "we choose two colours @xmath26 and @xmath27 at random and create clusters all over the lattice from these two , using the method above .",
    "it is straightforward to prove ergodicity for these algorithms . since our three - colouring algorithms for square ice were ergodic ( see section  ) , and since each move in the square ice algorithms is also a possible move in our f model algorithm ( as long as @xmath81 ) , the result follows immediately .",
    "detailed balance is a little more tricky .",
    "we outline the argument here for the single - cluster version of the algorithm . as",
    "before , consider two states @xmath1 and @xmath2 which differ by the exchange of colours in a single cluster of @xmath7 squares .",
    "the probability of choosing the seed square in this cluster is @xmath30 and the probability that we choose the correct second colour to create this particular cluster is @xmath11 , just as in the square ice case .",
    "however , we now also have a factor of @xmath82 for every square which we add to the cluster which is only a next - nearest neighbour of another and not a nearest neighbour .",
    "and we have a factor of @xmath83 for every such site which we could have added but did nt . thus the overall probability of making the move from @xmath1 to @xmath2 is @xmath84_{\\rm con } } \\alpha \\prod_{[i , j]_{\\rm dis } } ( 1-\\alpha)^{\\delta(c_i^{(\\mu)},c_j^{(\\mu)})},\\ ] ] where the two products run over pairs of next - nearest neighbours which are connected to or disconnected from the cluster respectively",
    ". we will find it easier to work with the logarithm of this probability : @xmath85_{\\rm con } } 1\\nonumber\\\\ & + & \\log(1-\\alpha ) \\sum_{[i , j]_{\\rm dis } } \\delta(c_i^{(\\mu)},c_j^{(\\mu)}).\\end{aligned}\\ ] ] the expression for @xmath86 is identical except for the exchange of the labels @xmath1 and @xmath2 .",
    "we want to know the ratio of the probabilities for the forward and reverse moves : @xmath87_{\\rm dis } } \\delta(c_i^{(\\mu)},c_j^{(\\mu ) } ) - \\delta(c_i^{(\\nu)},c_j^{(\\nu)}).\\ ] ] the energy difference @xmath73 between states @xmath1 and @xmath2 is equal to @xmath66 times the change in the number of identically coloured next - nearest - neighbour squares ( see equation  ) . the only contribution to this sum comes from next - nearest - neighbour pairs @xmath79 $ ] such that @xmath72 belongs to the cluster and @xmath88 does not , since all other pairs contribute the same amount to the hamiltonian in state @xmath1 as in state @xmath2 .",
    "thus @xmath89_{\\rm dis } } [ \\delta(c_i^{(\\nu)},c_j^{(\\nu)})-\\delta(c_i^{(\\mu)},c_j^{(\\mu ) } ) ] .\\ ] ] in order to satisfy the condition of detailed balance we want the ratio of the rates @xmath90 and @xmath91 to be equal to the ratio @xmath92 of the boltzmann weights of the two states . comparing equations   and",
    ", we see that this can be arranged by setting @xmath93 , or @xmath94    the proof of detailed balance for the full - lattice version of the algorithm follows from the single - cluster version just as in the case of the square ice model .    in figure",
    "we show some results of simulations of the f model using the full - lattice version of the algorithm described above . in this figure",
    "we have coloured areas of the two low energy domains ( checkerboards of symmetric vertices ) in black and white  type  5 vertices on even lattice sites and type  6 vertices on odd lattice sites are black , while type  6 vertices on even lattice sites and type  5 vertices on odd lattice sites are white .",
    "all other vertices are in grey .",
    "[ tdep ]    the phase transition is clearly visible in the figure as a change from a state in which black and white appear with equal frequency to one in which one or the other dominates .",
    "analytically it is known that this transition takes place at @xmath95 .",
    "this number is rather difficult to measure numerically however , since the phase transition is of infinite order ; no matter how often you differentiate the energy or the density of symmetric vertices with respect to temperature , you will not see a singularity .",
    "nonetheless there is a phase transition .",
    "for instance , the absolute value of the difference in density of black and white squares on an infinite lattice is strictly zero above the critical temperature , while non - zero below , ruling out any analytic behaviour .",
    "[ sw3crit ]    the full - lattice three - colouring algorithm does quite well at simulating the f model , even at the critical temperature .",
    "there is no measurable increase in the correlation time in number of lattice sweeps with system size at @xmath63 ; our best estimate of the dynamic exponent is @xmath96 .",
    "[ floop ]    because of the infinite order of the phase transition in the f model we can not define critical exponents in the normal fashion which describe power - law behaviour of the order parameters as we approach criticality . however , there are a number of non - trivial exponents governing the behaviour of the model at the critical temperature .",
    "as noted previously , the configurations of an ice model on a square lattice can be represented as sets of closed loops covering the entire lattice , and the f model corresponds to such a loop - covered system in which the loops have `` stiffness '' : symmetric vertices correspond to straight segments of the loop and are energetically favoured in the f model . using our full - lattice three - colouring algorithm",
    "we have measured the probability @xmath56 that a site is visited by the largest loop in this representation of the model , just as we did for square ice in section  [ fltcsq ] .",
    "the results are presented in figure  . at the critical temperature ,",
    "the data are well fitted by a power law with an exponent of @xmath97 , very close to the value in the square ice case , indicating that introduction of stiffness to the loops does not significantly influence the value of this exponent .",
    "[ fcluster ]    we have also used our monte carlo algorithm to measure as a function of system size @xmath22 the probability @xmath98 that at @xmath63 a given site is part of the largest ( percolating ) cluster of nearest - neighbour symmetric vertices .",
    "the results are shown in figure  [ fcluster ] .",
    "interestingly , there is no clear power - law behaviour in these data , despite the fact that the measurements were made at @xmath63 .",
    "possibly this is result of strong finite - size effects in this system . below the critical temperature by contrast ,",
    "the largest cluster is compact and scales as @xmath35 .",
    "we have described a number of monte carlo algorithms for simulating ice models .",
    "one of them , the full - lattice three - colouring algorithm , is apparently able to simulate the f model without critical slowing down .    using these algorithms , we have determined several exponents governing non - local quantities in square ice and the f model .",
    "we find that in square ice , the average number of steps taken by a defect before it returns to its starting point scales as @xmath36 .",
    "the probability that a site belongs to the largest loop in the loop representation of the model scales as @xmath99 . in the f model ,",
    "the probability of belonging to largest loop scales with a very similar exponent @xmath100 , although the prefactor is different .",
    "we are grateful to gunter schtz for a critical reading of the manuscript .",
    "one of us ( gtb ) would like to thank the santa fe institute for their hospitality whilst this work was carried out .",
    "this research was funded in part by the doe under grant number de  fg029oer40542 and by the santa fe institute and darpa under grant number onr n000149510975 ."
  ],
  "abstract_text": [
    "<S> we propose a number of monte carlo algorithms for the simulation of ice models and compare their efficiency . </S>",
    "<S> one of them , a cluster algorithm for the equivalent three colour model , appears to have a dynamic exponent close to zero , making it particularly useful for simulations of critical ice models . </S>",
    "<S> we have performed extensive simulations using our algorithms to determine a number of critical exponents for the square ice and f models .    </S>",
    "<S> # 1([#1 ] ) # 1[#1 ] # 1[#1 ] # 1[#1 ] # 1#1 # 1@xmath0    # 1to    = # 1to    # 1to    # 1to    # 1#2#3#4#5#6#7#8#9to to to    # 1#2#3#4to    # 1#2to </S>"
  ]
}
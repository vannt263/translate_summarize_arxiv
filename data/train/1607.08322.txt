{
  "article_text": [
    "in a distributed storage system , a data file is distributed to a number of storage devices that are connected through a network .",
    "the data is encoded in such a way that , if some of the storage devices are disconnected from the network temporarily , or break down permanently , the content of the file can be recovered from the remaining available nodes . a simple encoding strategy is to replicate the data three times and store the replicas in three different places .",
    "this encoding method can tolerate a single failure out of three storage nodes , and is employed in large - scale cloud storage systems such as google file system  @xcite .",
    "the major drawback of the triplication method is that the storage efficiency is fairly low .",
    "the amount of back - up data is two times that of the useful data . as the amount of data stored in cloud storage systems is increasing in an accelerating speed , switching to encoding methods with higher storage efficiency is inevitable .",
    "the reed - solomon ( rs ) code @xcite is a natural choice for the construction of high - rate encoding schemes .",
    "the rs code is not only optimal , in the sense of being maximal - distance separable , it also has efficient decoding algorithms ( see e.g. @xcite ) .",
    "indeed , facebook s storage infrastructure is currently employing a high - rate rs code with data rate 10/14 .",
    "this means that four parity - check symbols are appended to every ten information symbols .",
    "nevertheless , not all data in facebook s clusters is currently protected by rs code .",
    "this is because the traditional decoding algorithms for rs code do not take the network resources into account .",
    "suppose that the 14 encoded symbols are stored in different disks .",
    "if one of the disks fails , then a traditional decoding algorithm needs to download 10 symbols from other storage nodes in order to repair the failed one .",
    "the amount of data traffic for repairing a single storage node is 10 times the amount of data to be repaired . in a large - scale distributed storage system ,",
    "disk failures occur almost everyday  @xcite .",
    "the overhead traffic for repair would be prohibitive if all data were encoded by rs code .    in view of the repair problem",
    ", the amount of data traffic for the purpose of repair is an important evaluation metric for distributed storage systems .",
    "it is coined as the _ repair bandwidth _ by dimakis _",
    "_ in @xcite .",
    "an erasure - correcting code with the aim of minimizing the repair bandwidth is called a _",
    "regenerating code_. upon the failure of a storage node , we need to replace it by a new node , and the content of the new node is recovered by contacting @xmath0 other surviving nodes .",
    "the parameter @xmath0 is sometime called the _ repair degree _ , and the contacted nodes are called the _ helper nodes _ or simply the _",
    "helpers_. the repair bandwidth",
    "is measured by counting the number of data symbols transmitted from the helpers to the new node .",
    "if the data file can be reconstructed from any @xmath1 out of @xmath2 storage nodes , i.e. , if any @xmath3 disk failures can be recovered , then we say that the _ @xmath4-reconstruction property _ is satisfied .",
    "the design objective is to construct regenerating codes for @xmath2 storage nodes , satisfying the @xmath4-reconstruction , and minimizing the repair bandwidth , for a given set of code parameters @xmath2 , @xmath1 and @xmath0 .",
    "we note that the requirement of @xmath4-reconstruction property is more relaxed than the condition of being maximal - distance separable ( mds ) .",
    "a regenerating code is an mds erasure code only if the number of symbols contained in any @xmath1 nodes is exactly equal to the number of symbols in the data file . in a general regenerating code",
    ", the total number of coded symbols in any @xmath1 nodes may be larger than the total number of symbols in a data file .",
    "there are two main categories of regenerating codes .",
    "the first one is called _ exact - repair _ regenerating codes , and the second one is called _ functional - repair _ regenerating codes . in the first category of exact - repair regenerating codes",
    ", the content of the new node is the same as in the old one . in functional - repair regenerating codes , the content of the new node may change after a node repair , but the @xmath4-reconstruction property is preserved . for functional - repair regenerating code , a fundamental tradeoff between repair bandwidth and storage per node is obtained in  @xcite .",
    "this is done by drawing a connection to the theory of network coding .",
    "following the notations in  @xcite , we denote the storage per node by @xmath5 and the amount of data downloaded from a surviving node by @xmath6 .",
    "the repair bandwidth is thus equal to @xmath7 .",
    "a pair @xmath8 is said to be _ feasible _ if there is a regenerating code with storage @xmath5 and repair bandwidth @xmath9 .",
    "it is proved in  @xcite that , for regenerating codes functionally repairing one failed node at a time , @xmath10 is feasible if and only if the file size , denoted by @xmath11 , satisfies the following inequality , @xmath12 if we fix the file size @xmath11 , the inequality in induces a tradeoff between storage and repair bandwidth .",
    "there are two extreme points on the tradeoff curve . among all the feasible pairs",
    "@xmath13 with minimum storage @xmath5 , the one with the smallest repair bandwidth is called the _ minimum - storage regenerating _ ( msr ) point , @xmath14 on the other hand , among all the feasible pairs @xmath10 with minimum bandwidth @xmath15 , the one with the smallest storage is called the _ minimum - bandwidth regenerating _ ( mbr ) point , @xmath16    existence of linear functional - repair regenerating codes achieving all points on the tradeoff curve is shown in  @xcite .",
    "explicit construction of exact - repair regenerating codes , called the product - matrix framework , achieving all code parameters corresponding to the mbr point is given in @xcite .",
    "explicit construction of regenerating codes for the msr point is more difficult . at the time of writing",
    ", we do not have constructions of exact - repair regenerating codes covering all parameters pertaining to the msr point . due to space limitation",
    ", we are not able to comprehensively review the literature on exact - repair msr codes , but we mention below some constructions which are of direct relevance to the results in this paper .    the miser code ( which stands for mds , interference - aligning , systematic exact - regenerating code ) is an explicit exact - repair regenerating code at the msr point  @xcite @xcite . the code parameters are @xmath17 .",
    "it is shown in @xcite and @xcite that every systematic node , which contains uncoded data , can be repaired with storage and repair bandwidth attaining the msr point in  .",
    "this result is extended in @xcite , which shows that , with the same code structure , every parity - check node can also be repaired with repair bandwidth meeting the msr point .",
    "the product - matrix framework in  @xcite also gives a family of msr codes with parameters @xmath18 .",
    "all of the msr codes mentioned above have code rate no more than @xmath19 . for high - rate exact - repair msr code",
    ", we refer the readers to three recent papers  @xcite , @xcite and @xcite , and the references contained therein .",
    "we remark that the interior points on the tradeoff curve between storage and repair bandwidth for functional - repair regenerating codes are in general not achievable by exact - repair regenerating codes ( see e.g. @xcite and  @xcite ) .",
    "all of the regenerating codes mentioned in the previous paragraphs are for the repair of a single node failure .",
    "in large - scale distributed storage system , it is not uncommon to encounter multiple node failures , due to various reasons .",
    "firstly , the events of nodes failure may be correlated , because of power outage or aging .",
    "secondly , we may not detect a node failure immediately when it happens .",
    "a scrubbing process is carried out periodically by the maintenance system , to scan the hard disks one by one and see whether there is any unrecoverable error . as the volume of the whole storage system increases",
    ", it will take a longer time to run the scrubbing process and hence the integrity of the disks will be checked less frequently . a disk error may remain dormant and undetected for a long period of time .",
    "if more than one errors occur during this period , we will detect multiple disk errors during the scrubbing process .",
    "lastly , in some commercial storage systems such as totalrecall  @xcite , the repair of a failed node is deliberately deferred . during the period",
    "when some storage nodes are not available , degraded read is enabled by decoding the missing data in real time .",
    "a repair procedure is triggered after the number of failed nodes reaches a predetermined threshold .",
    "this mode of repair reduces the overhead of performing maintenance operations , and is called _",
    "lazy repair_.    a naive method for correcting multiple node failures is to repair the failed nodes one by one , using methods designed for repairing single node failure .",
    "a collaborative recovery methodology for repairing multiple failed nodes jointly is suggested in  @xcite and  @xcite .",
    "the repair procedure is divided into two phases . in the first phase , the new nodes download some repair data from some surviving nodes , and in the second phase , the new nodes exchange data among themselves .",
    "the enabling of data exchange is the distinctive feature .",
    "we will call this the _ cooperative _ or _ collaborative _ repair model .    , @xmath20 , @xmath21 , and @xmath22 .",
    "the dashed line is for regenerating code correcting single failure .",
    "the solid line is for cooperative regenerating code recovering @xmath23 failed nodes.,width=336 ]    the minimum - storage regime for collaborative repair is considered in  @xcite and  @xcite .",
    "it is shown that further reduction in repair bandwidth is possible if data exchange among the new nodes is allowed .",
    "optimal function - repair minimum - storage regenerating codes are also presented in  @xcite .",
    "the results are extended by lescouarnec _",
    "_ to the opposite extreme point with minimum repair bandwidth in @xcite and @xcite .",
    "the storage and repair bandwidth per new node on the minimum - storage collaborative regenerating ( mscr ) point are denoted by @xmath24 and @xmath25 , respectively , while the storage and repair bandwidth per new node on the minimum - bandwidth collaborative regenerating ( mbcr ) point are denoted by @xmath26 and @xmath27 , respectively .",
    "the mscr and mbcr points for functional repair are @xmath28 we note that when @xmath29 , the operating points in and reduce to the ones in and .    the vertices on the tradeoff curve between storage and repair bandwidth for collaborative repair are characterized in  @xcite . it is shown in @xcite that for all points on the cooperative functional - repair tradeoff curve can be attained by linear regenerating codes over a finite field .",
    "a numerical example of tradeoff curves for single - loss regenerating code and cooperative regenerating code is shown in figure  [ figure ] .",
    "we see that cooperative repair requires less repair bandwidth in compare to single - failure repair .",
    "explicit exact - repair codes for the mbcr point for all legitimate parameters were presented by wang and zhang in  @xcite .",
    "the construction in @xcite subsumes earlier constructions in @xcite and  @xcite .",
    "in contrast , there are not so many explicit construction for mscr code . the parameters of existing explicit constructions are summarized in table  [ table : crc ] . a construction of exact repair for @xmath30 and @xmath31 is given in  @xcite .",
    "this is extended to an mscr code with @xmath32 and @xmath33 in  @xcite .",
    "indeed , a connection between mscr codes which can repair @xmath33 node failures and non - cooperative msr code is made in  @xcite . using this connection , the authors in  @xcite are able to construct mscr code with @xmath33 from existing msr codes .",
    "however , there is no explicit construction for exact - repair mscr code of any @xmath34 failed nodes at the time of writing .",
    "practical implementations of distributed storage systems which can correct multiple node failures can be found in @xcite to @xcite .",
    ".parameters of explicit constructions of collaborative regenerating codes . [ cols=\"^,^,^\",options=\"header \" , ]     * example .",
    "* consider an example for @xmath35 .",
    "there are eight storage nodes in the distributed storage system .",
    "nodes 1 to 4 are the systematic nodes , while nodes 5 to 8 are the parity - check nodes .",
    "the data file contains @xmath36 symbols in a finite field . for @xmath37 ,",
    "we let the symbols stored in node @xmath38 be denoted by @xmath39 , @xmath40 , @xmath41 and @xmath42 ( see table  [ fig : mscr ] ) . in this example",
    ", we pick a finite field of size 11 as the alphabet .",
    "all arithmetic is performed modulo 11 .",
    "we let @xmath43 be the following @xmath44 cauchy matrix @xmath45 where @xmath46 , @xmath47 , @xmath48 , @xmath49 , @xmath50 , @xmath51 , @xmath52 and @xmath53 are distinct elements in @xmath54 .",
    "matrices @xmath55 and @xmath56 are set to the @xmath44 identity matrix . with this choice of matrix @xmath55 ,",
    "the matrix @xmath57 is equal to @xmath58 .",
    "let @xmath59 and @xmath60 , such that the matrix @xmath61 is super - regular . for @xmath62 ,",
    "the symbols stored in the @xmath63-th parity - check node are the entries in the @xmath63-th column of the following matrix @xmath64 for @xmath62 , we denote the @xmath63-th column of the cauchy matrix @xmath43 by @xmath65 , and let @xmath66 be the vector @xmath67 the content of the parity - check nodes are illustrated in the last four columns in table  [ fig : mscr ] .",
    "we illustrate how to repair multiple systematic node failures collaboratively .",
    "suppose that nodes 1 , 2 and 3 fail .",
    "in the first phase of the repair process , each of the remaining nodes , namely nodes 4 to 8 , sends three symbols to each new node . in this example",
    ", each helper node can simply read out three symbols and send them to the new nodes . more specifically , the symbols in the first ( resp . second and third )",
    "row in columns 4 to 8 in table  [ fig : mscr ] are sent to node 1 ( resp . 2 and 3 ) .",
    "hence , for @xmath68 , new node @xmath38 receives the following five finite field symbols @xmath69 in the first phase . since @xmath43 is a nonsingular matrix , new node @xmath38 can obtain the vector @xmath70 .",
    "we list the symbols which can be computed by the new nodes as follows ,    node 1 :   @xmath71 , @xmath72 , @xmath73 , @xmath74 , @xmath75 .",
    "node 2 :   @xmath76 , @xmath77 , @xmath78 , @xmath79 , @xmath80 .",
    "node 3 :   @xmath81 , @xmath82 , @xmath83 , @xmath84 , @xmath85 .    at the end of the first phase",
    ", new node @xmath38 can calculate the @xmath38th symbol @xmath86 and the last symbol @xmath42 by @xmath87.\\end{aligned}\\ ] ]    the operations in the second phase of the repair are :    node 1 and node 2 exchange the symbols @xmath73 and @xmath77 ;    node 1 and node 3 exchange the symbols @xmath74 and @xmath82 ;    node 2 and node 3 exchange the symbols @xmath79 and @xmath83 .",
    "now , nodes 1 can decode the symbols @xmath88 and @xmath89 from @xmath90 similarly , nodes 2 and 3 can decode the remaining sources symbols .",
    "we transmitted 21 symbols during the whole repair procedure .",
    "hence , 7 symbol transmissions are required per new node .",
    "it matches the lower bound on repair bandwidth per new node @xmath91    _ remark : _ in the previous example , can see the use of * interference alignment * as follows .",
    "after the first phase of repair , the first new node has symbols @xmath71 , @xmath72 , @xmath73 , @xmath74 , @xmath75 , but the first new node is only interested in decoding symbols @xmath92 , @xmath88 , @xmath89 and @xmath93 . the symbols @xmath94 , @xmath95 , and @xmath71 can be regarded as `` interference '' with respect to the first new node .",
    "the interference occupy three degrees of freedom and is resolved in the second phase of the repair .",
    "suppose that a data collector wants to recover the original file by downloading the symbols stored in nodes 3 , 4 , 5 and 6 .",
    "the symbols stored in nodes 3 and 4 are uncoded symbols , and hence can be read off directly .",
    "the data collector needs to decode @xmath92 , @xmath88 , @xmath89 , @xmath93 , @xmath94 , @xmath96 , @xmath97 and @xmath98 from symbols in node 5 , @xmath99 and the symbols in node 6 , @xmath100 the underlined symbols are readily obtained from nodes 3 and 4 .    from the two finite field symbols in and , after subtracting off the known quantities , we can decode symbol @xmath93 and @xmath98 from @xmath101 where @xmath102 is the @xmath103 submatrix on the top left corner of @xmath43 .",
    "likewise , from and , we can obtain @xmath89 and @xmath97 by solving a @xmath103 system of linear equations .",
    "we can put the four finite field symbols in , , and together and form a @xmath104 matrix @xmath105 using the property that @xmath106 is non - singular again , we can solve for the matrix @xmath107 from which we can decode @xmath92 , @xmath96 , @xmath88 and @xmath94 .",
    "in this paper we review two constructions of cooperative regenerating codes , one for the mscr point and one for the mbcr point .",
    "we show that with the same coding structure as in the miser code , we can cooperatively repair any number of systematic node failures and any number of parity - check node failures . as a matter of fact",
    ", we can also repair any pair of systematic node and a parity - check node .",
    "however , we need to work over a larger finite field and the super - regular matrix @xmath108 should satisfy some extra conditions , in order to repair any two node failures . the detail can be found in  @xcite .",
    "security aspects of cooperative regenerating codes are investigated in  @xcite to @xcite .",
    "there are basically two types of adversarial storage nodes .",
    "adversaries of the first type are passive eavesdroppers , who want to obtain some information about the data file . under the assumption that the number of storage nodes accessed by an eavesdropper is no more than a certain number , the secrecy capacity and the related code constructions",
    "are studied in  @xcite and @xcite .",
    "adversaries of the second type , called byzantine adversaries , are malicious and try to corrupt the distributed storage system .",
    "they conform to the protocol but may send out erroneous packets during a repair procedure .",
    "it is shown in  @xcite that distributed storage system with cooperative repair is more susceptible to this kind of pollution attack , because of the large number of data exchanges in the second phase of the repair .",
    "one way to alleviate the potential damage incurred by a byzantine adversary is to allow multiple levels of cooperation . to this end , a partially cooperative repair model , in which a new node communicates only with a fraction of all new nodes ,",
    "is proposed in @xcite .",
    "a code construction based on subspace codes is given in @xcite .",
    "local repairable code ( lrc ) is another class of erasure - correcting codes of practical interests . in lrc ,",
    "the focus is not on the repair bandwidth , but on the number of nodes contacted by a new node .",
    "a code is said to have _ locality _",
    "@xmath109 if each symbol in a codeword is a function of at most @xmath109 other symbols .",
    "in contrast to regenerating code , it is only required that , for each symbol , there exists a particular set of @xmath109 nodes from which we can repair the symbol .",
    "a fundamental bound on the minimum distance of a code with locality constraint was obtained by gopalan _",
    "_ in @xcite . the problem of repairing multiple symbol errors locally , called _ cooperative local repair",
    ", is studied in @xcite and @xcite .",
    "in addition to locality , disk i / o cost is another important factor .",
    "the speed of reading bits from hard disks may be a bottleneck of the repair time .",
    "the number of bits that must be accessed by a helper node is obviously lower bounded by the number of bits transmitted to the new nodes . a regenerating code with the property that the number of bits accessed for the purpose of repaired is exactly equal to the number of bits transmitted",
    "is called a _ repair - by - transfer _ or _ help - by - transfer _ code ( see e.g. @xcite or @xcite ) .",
    "we note that the example in section  [ sec : mbcr ] is indeed a repair - by - transfer mbcr code , even though the repair is for systematic nodes only .",
    "it is proved in @xcite that repair - by - transfer mbcr code does not exists when if any @xmath110 failed nodes could be repaired by any @xmath111 helper nodes .",
    "the example in section  [ sec : mbcr ] does not violate the impossibility result in @xcite .",
    "nevertheless , it is interesting to see whether repair - by - transfer is possible for other code parameters .    instead of designing new codes ,",
    "devising efficient algorithms which can repair existing storage codes is also of practical interests .",
    "fast repair method for the traditional reed - solomon code can be found in  @xcite .",
    "recovery algorithm for array codes , such as row diagonal pairty ( rdp ) and x - code , are given in @xcite and @xcite , respectively .",
    "some special results for repairing concurrent failures in rdp code are reported in @xcite .",
    "it is interesting to see whether we can devise cooperative repair algorithm for reed - solomon codes and other array codes .",
    "m.  sathiamoorthy , m.  asteris , d.  papailiopoulos , a.  g. dimakis , r.  vadli , s.  chen , and d.  borthakur . ing elephants :",
    "novel erasure codes for big data . in _",
    "of very large data bases endowment _ , pages 325336 , march 2013 .",
    "a.  g. dimakis , p.  b. godfrey , m.  j. wainwright , and k.  ramchandran . network coding for distributed storage system . in _ proc .",
    "conf . on computer comm .",
    "( infocom ) _ , pages 20002008 , anchorage , alaska , may 2007 .",
    "n.  b. shah , k.  v. rashmi , p.  v. kumar , and k.  ramchandran .",
    "the miser code : an mds distributed storage code that minimizes repair bandwidth for systematic nodes through interference alignment .",
    "arxiv:1005.1634 [ cs.it ] , 2010 .",
    "n.  b. shah , k.  v. rashmi , p.  v. kumar , and k.  ramchandran . distributed storage codes with repair - by - transfer and non - achievability of interior points on the storage - bandwidth tradeoff . ,",
    "58(3):18371852 , march 2012 .",
    "r.  bhagwan , k.  tati , yu - chung cheng , s.  savage , and g.  m. voelker .",
    "total recall : system support for automated availability management . in _ proc . of the 1st conf .",
    "on networked systems design and implementation _ , pages 337350 , san francisco , march 2004 .",
    "kermarrec , n.  le scouarnec , and g.  straub .",
    "repairing multiple failures with coordinated and adaptive regenerating codes . in _ proc .",
    "int . symp . on network coding ( netcod ) _ , pages 8893 ,",
    "beijing , july 2011 .",
    "a.  wang and z.  zhang .",
    "exact cooperative regenerating codes with minimum - repair - bandwidth for distributed storage . in _ proc .",
    ". conf . on computer comm .",
    "( infocom ) _ , pages 400404 , turin , april 2013 .",
    "k.  w. shum and y.  hu .",
    "exact minimum - repair - bandwidth cooperative regenerating codes for distributed storage systems . in _ proc .",
    "inf . theory _ , pages 13741378 , st .",
    "petersburg , august 2011 .",
    "j.  li and b.  li .",
    "beehive : erasure codes for fixing multiple failures in distributed storage systems . in _ the 7th usenix workshop on hot topics in storage and file systems ( hotstorge ) _ , pages 15 , santa clara , july 2015 .",
    "j.  huang , e.  dai , c.  xie , and x.  qin .",
    "orec : a cooperative reconstruction pattern for multiple failures in erasure - coded storage clusters . in _ the 44th int .",
    "parallel processing ( icpp ) _ , pages 470479 , beijing , september 2015 .                s.  liu and f.  oggier . on the deisgn of storage orbit codes . in r.",
    "pinto et  al . , editor , _ proc .",
    "of the 4th int .",
    "castle meeting on coding theory and applications _ , volume  3 of _ cim series in mathematical sciences _ ,",
    "pages 263271 , palmela castle , portugal , september 2014 .",
    "s.  li , s.  wan , d.  chen , q.  cao , c.  xie , x.  he , y.  guo , and p.  huang . exploiting decoding computational locality to improve the i / o performance of an xor - coded storage cluster under concurrent failures . in _ the 33rd ieee int . symp . on reliable distributed systems _ ,",
    "pages 125135 , nara , october 2014 ."
  ],
  "abstract_text": [
    "<S> cooperative regenerating codes are designed for repairing multiple node failures in distributed storage systems . </S>",
    "<S> in contrast to the original repair model of regenerating codes , which are for the repair of single node failure , data exchange among the new nodes is enabled . </S>",
    "<S> it is known that further reduction in repair bandwidth is possible with cooperative repair . </S>",
    "<S> currently in the literature , we have an explicit construction of exact - repair cooperative code achieving all parameters corresponding to the minimum - bandwidth point . </S>",
    "<S> we give a slightly generalized and more flexible version of this cooperative regenerating code in this paper . for minimum - storage regeneration with cooperation </S>",
    "<S> , we present an explicit code construction which can jointly repair any number of systematic storage nodes . </S>"
  ]
}
{
  "article_text": [
    "_ title of program : _ mb    _ version : _ 1.1    _ catalogue identifier : _    _ program obtainable from : _ http://theorie.physik.uni-wuerzburg.de/~mczakon    _ computers : _ all    _ operating systems : _ all    _ programming language used : _ mathematica , fortran 77 for numerical evaluation    _ memory required to execute with typical data : _",
    "sufficient for a typical installation of mathematica .",
    "_ no . of bytes in distributed program ,",
    "including test data : _",
    "337900    _ distribution format : _",
    "ascii    _ libraries used : _",
    "cuba @xcite for numerical evaluation of multidimensional integrals and cernlib @xcite for the implementation of @xmath0 and @xmath1 functions in fortran .",
    "_ keywords : _ mellin - barnes integrals , analytic continuation , numerical evaluation , feynman integrals .",
    "_ nature of physical problem : _ analytic continuation of mellin - barnes integrals in a parameter and subsequent numerical evaluation .",
    "this is necessary for evaluation of feynman integrals from mellin - barnes representations .",
    "_ method of solution : _ recursive accumulation of residue terms occurring when singularities cross integration contours .",
    "numerical integration of multidimensional integrals with the help of the cuba library .",
    "_ restrictions on the complexity of the problem : _ limited by the size of the available storage space .",
    "_ typical running time : _ depending on the problem . usually seconds for moderate dimensionality integrals .",
    "the synergy between experiment and theory in the area of elementary particle physics is constantly driving perturbative calculations to higher and higher orders .",
    "this is particularly true close to the beginning of the large hadron collider s operation .",
    "therefore , recent years have seen the emergence of several powerful methods of evaluation of subsequent terms of the perturbative expansion . as far as multiloop feynman integrals are concerned , the method of differential equations ref .",
    "@xcite and mellin - barnes integral representations ref .",
    "@xcite have proved to be the most successful .",
    "some complicated problems turned out to even require a mixed approach , as advocated , for example , in the case of bhabha scattering in ref .",
    "@xcite . in parallel to analytical approaches ,",
    "new numeric techniques have been devised , among which the sector decomposition method ref .",
    "@xcite occupies a prominent place . very recently in ref .",
    "@xcite , the role of mellin - barnes integral representations as sources of numeric approximations in the physical region has also been stressed .    in the present work ,",
    "i will concentrate on mellin - barnes integral representations .",
    "there are two advantages of this approach .",
    "first , it allows for systematic extraction of singularities .",
    "second , the dimensionality of the representation is not directly connected to the number of lines in the graph and therefore , one often arrives at integrals of low dimensionality even for complicated graphs .",
    "the calculation of a feynman integral proceeds in this method in three steps . at first , one derives a representation , then performs the analytic continuation in @xmath2 , where @xmath3 is the dimension of spacetime , and finally evaluates the resulting integrals . the first step above can be performed in several different ways , aiming at the simplest possible representation .",
    "the various possibilities are described in ref .",
    "a general algorithm is here only interesting in the case of subsequent numeric integration , see ref .",
    "the third step can not be generalized apart from numerical integration , even though some classes of problems can be solved algorithmically , _",
    "e.g. _ by reduction to nested sums , see ref .",
    "it is only in the second step , the analytic continuation , that one can provide an algorithmic solution that would be satisfactory for both analytic and numeric evaluation .",
    "this solution is provided by the mathematica package mb introduced in the present work .",
    "numeric evaluation of mb integrals has already been mentioned more than once above . whether just for testing or for the actual calculation , automatization of this step is of value by itself .",
    "the package mb can perform the necessary integration by means of fortran , the cuba library @xcite of integration routines , and the cern library implementation of gamma and psi functions @xcite .",
    "since the integrals are infinite range and multidimensional , their feasibility depends strongly on their convergence . in all tested examples , where invariants are in the euclidean range , the behaviour is exponential and",
    "therefore poses no problems . in @xcite ,",
    "physical kinematics have also been considered , but the presented examples were restricted to massless graphs exclusively . here , i notice that massive graphs have worse properties .",
    "in fact , i give examples of integrals , which are not even absolutely integrable , and the integral is similar to the fourier transform of the inverse square root .",
    "such cases can still be treated , but some initial analysis is necessary and it is difficult to see how it could be automatized . moreover",
    ", the techniques will rapidly become inefficient for higher dimensional integrals .",
    "the paper is organized as follows . in the next section ,",
    "i define the main concepts and present the algorithm for analytic continuation .",
    "subsequently , i describe the package starting with the user interface , low level routines , examples , numerical integration routines and some additional tools .",
    "finally , i briefly summarize and conclude the paper .",
    "at the core of the mellin - barnes method lies the following representation    @xmath4    where the contour is chosen in such a way , that the poles of the @xmath0 function with @xmath5 are separated from the poles of the @xmath0 function with @xmath6 .",
    "this representation can be used in feynman integral computations in several ways .",
    "the easiest is to turn massive propagators into massless and integrate the massless integral , if a formula for general powers of propagators exists . in more complicated cases",
    ", one can use some parametric representation of the feynman integral , which is usually an integral of a product of polynomials raised to some powers , and split the polynomials into pieces that are then integrable by some generalization of the euler formula    @xmath7    an extensive discussion of the methods with examples can be found in ref .",
    "irrespective of the method , however , the expression for any feynman integral assumes the form    @xmath8    where @xmath9 are some kinematic parameters and masses ; @xmath10 are the powers of the propagators ; @xmath11 , @xmath12 are linear combinations of the @xmath10 ; @xmath13 , @xmath14 are linear combinations of @xmath15 ; and @xmath16 , @xmath17 are some numbers .",
    "the function @xmath18 is analytic , in practice a product of powers of the @xmath9 , with exponents being linear combinations of the remaining parameters .    because of the assumptions inherent in eq .",
    "( [ mb ] ) , the above equation is well defined and corresponds to the original feynman integral , if the real parts of all of the @xmath0 functions have positive arguments . if these conditions can not be satisfied with @xmath19 , then the integral may develop divergences and analytic continuation to @xmath20 is necessary to make an expansion in @xmath2 .",
    "the purpose of the presented package is to perform the analytic continuation of eq .",
    "( [ definition ] ) in @xmath2 to some chosen value @xmath21 .",
    "the algorithm requires to generalize eq .",
    "( [ definition ] ) to allow for @xmath1 functions in the fraction , with @xmath22 and @xmath23 , with the same structure of arguments as those of the @xmath0 functions .",
    "there are two known ways to perform the analytic continuation .",
    "the first , introduced in ref .",
    "@xcite consists in deforming the integration contours and then shifting them past the poles of the @xmath0 functions , which results in residue integrals .",
    "it is not clear how to make this method algorithmic , although some attempts in the specific case of massless on - shell double boxes have been undertaken in @xcite .    the second method , introduced in ref .",
    "@xcite assumes fixed contours parallel to the imaginary axis , and the analytic continuation consists in accounting for pole crossings past the contours . as described in ref .",
    "@xcite , this method is an algorithm .",
    "i make one modification with respect to the original , namely i assume that the contours are such that no two contours can be crossed simultaneously",
    ". this assumption can always be satisfied by infinitesimal shifts of one of the concerned contours .",
    "it should be clear from the above considerations , that the imaginary parts of the involved variables do not play any role .",
    "it is therefore assumed that @xmath15 , @xmath10 and @xmath2 are real . with @xmath24 , @xmath25 , and @xmath26 some mb integral with fixed contours and the value of @xmath2 fixed at @xmath27 , the algorithm can be formalized as in fig .  [ algo ] .",
    "the algorithm has been written for @xmath0 functions , but one should add @xmath1 functions , wherever @xmath0 functions occur . upon termination ,",
    "the set @xmath28 contains all the integrals following from the analytic continuation .",
    "it should be clear that it is the `` if '' clause that does not allow for crossings of two different contours at a time .    a comment about the choice of the contours is in order . even though all the choices are equivalent , one would like to have the smallest possible number of contributions .",
    "an improvement implemented in the package is to first gather all the residue points , and then try to add additional constraints on the contours such that these residues would not occur .",
    "if some subset of these constraints can be satisfied , then the number of residues will be reduced .",
    "this is not an algorithm that leads to an absolute minimum of the number of residues , it gives , however , at least some reduction of the number of contributions .",
    "finally , one should notice that the technique of ref .",
    "@xcite has been similarly formalized in ref .",
    "the main routine performing the analytic continuation is    where the input arguments are    * integrand : any object accepted by mathematica .",
    "notice that the singularities are determined by analyzing @xmath0 and @xmath1 functions only . *",
    "limit : a rule , x - > x0 , which specifies at the same time the variable , x , in which the analytic continuation is performed and the point , x0 , which the user wants to reach . * fixedvarrules : a list of rules giving the values of the real parts of the variables , which are not integrated over . in particular , it must contain the starting value of the variable , in which the analytic continuation is performed .",
    "* intvarrules : a list of rules giving the real parts of the integration variables .",
    "* options : * * level : an integer specifying the level at which the recursive analytic continuation will be stopped . by default",
    ", it is set to infinity . * * skeleton : a boolean value .",
    "if true , the residues will be identified , but not calculated .",
    "this is achieved by replacing all @xmath0 and @xmath1 functions by a dummy function mbgam .",
    "the purpose of this option is to quickly determine the total number of integrals . by default",
    "this option is set to false . * * residues : a boolean value .",
    "if true , the output will also contain the list of residue points besides the actual values of the residues .",
    "this is mainly for internal use and is set by default to false . *",
    "* verbose : a boolean value .",
    "if true , the level is printed as well as the position on the list of the currently continued integral and the residue points together with the signs of the residues .",
    "this option is switched on by default .",
    "the output is a nested list obtained by replacing , at every level , the integral to be continued by its residues and the original integral at the limit .",
    "the elements are    mbint[integrand , \\{fixedvarrules , intvarrules } ]    objects , where the integrand can be expanded around the limit , which is placed on the fixedvarrules list .",
    "if the user specified a finite level , then there might also occur    mbitc[integrand , limit , \\{fixedvarrules , intvarrules } , options ]    objects , where `` itc '' stands for `` integral to continue '' .",
    "these are not yet regular at the limit and require further recursive analytic continuation .",
    "furthermore , if the user set the residues option to true , there will also be a list of    mbres[sign , var , val ] ,    objects , which signal that there was a residue taken in the variable , var , at the value , val , with sign .",
    "restricted input checking has been implemented , and as long as the input is syntactically correct , the only error that may occur is ( see section  [ algorithm ] for further details )    contour starts and/or ends on a pole of gamma[z ]    in this case the procedure stops and gives an inequality for an integration variable that is sufficient to remove the problem .",
    "the integration contours are found with    for a description of the integrand and limit see mbcontinue .",
    "the remaining input parameters are as follows    * constraints : a list of additional constraints ( inequalities ) specified by the user .",
    "this should usually be left empty , but might be used for experimentation in order to search for contours that might possibly give less residues .",
    "* fixedvars : a list of variables , which should be considered fixed during analytic continuation .",
    "the integration variables are determined automatically from the arguments of the @xmath0 and @xmath1 functions .",
    "* options : * * level : specifies the level up to which optimization of the contours will be performed .",
    "this option should only be used for very large calculations . since in this case",
    ", the contours are only partially tested , the user will have to correct them himself , if poles lying on a contour are encountered . in practice",
    ", independent , small shifts should be sufficient for this purpose .",
    "the output matches precisely the form needed in the input of mbcontinue , _",
    "i.e. _    \\{fixedvarrules , intvarrules }    notice that this procedure not only reduces the number of residues , but also generates such contours that , during analytic continuation , no contours will start or end on a pole .    during the determination of the real parts ,",
    "warning messages are generated .",
    "these can be ignored apart from the case when there is a single message    no rules could be found to regulate this integral    and the output is an empty list . in this case , the integral can not be regulated and the user has to provide another one , _",
    "e.g. _ by introducing a further regulator parameter , for example a propagator power , and performing two subsequent analytic continuations .",
    "once the integrals are determined , they can be either * merged * , _ i.e. _ those that have the same contour will be added by linearity ; * preselected * , _ i.e. _ those that would vanish in a given order of expansion in some parameter are rejected ; or * expanded*. these tasks are achieved with the following utilities .",
    "merges mbint objects on the integrals list by linearity , if they have the same contours . vanishing integrals are rejected .",
    "rejects those mbint objects on the integrals list that would vanish after expansion in the variable x , around the point x0 , up to order n.    expands mbint objects on the integrals list around the point x0 , in the variable x , up to order n. a normalization factor , norm , is included in every integrand .",
    "the routines described in the previous section form the interface .",
    "it might happen that the user would like to use the low level routines , which actually perform the calculation",
    ".    performs a single step in the recursive analytic continuation algorithm , _",
    "i.e. _ it finds all the residues for a given integral , but does not proceed with the analytic continuation of the resulting integrals .",
    "all the arguments and options are the same as in mbcontinue , apart from level , which is in this case meaningless",
    ".    finds the real parts of all the fixed and integration variables , such that the real parts of the arguments of all the @xmath0 and @xmath1 functions be positive .",
    "the difference to mboptimizedrules is that no attempt is made to optimize the number of residues or even check whether the contours will not lead to problems with mbcontinue . to perform these tests ,",
    "mboptimizedrules needs the limit of the continuation , which is left unspecified here .",
    "this routine is of particular interest , because one may use it to write another contour optimization algorithm .",
    "same as mbrules , but check the contours , so that a complete analytic continuation with mbcontinue can be performed .      as a first example",
    ", i consider the @xmath29 function with two equal masses , fig .",
    "after introduction of two mb integrations ( the integral can be further simplified by the use of the first barnes lemma , see section  [ tools ] ) and normalization of the integration measure with @xmath30 , the expression reads    .... in[1]:= int = b0[s , 1+z1 , 1+z2]*ms^z1*ms^z2 *          gamma[-z1]*gamma[1+z1]*gamma[-z2]*gamma[1+z2 ] /.",
    "z1 - > z1-z2    out[1]:= ( m1s^z1*(-s)^(-ep - z1)*gamma[ep + z1]*gamma[1 - ep - z2 ] *           gamma[-z2]*gamma[-z1 + z2]*gamma[1 - ep - z1 + z2])/ gamma[2           - 2*ep - z1 ]       ....    the user must now determine the contours , or more precisely , the real parts of the contours .    ....",
    "in[2]:= rules = mboptimizedrules[int , ep - > 0 , { } , { ep } ]    mbrules::norules : no rules could be found to regulate this integral    mbrules::norules : no rules could be found to regulate this integral    out[2]:= { { ep - > 7/8 } , { z1 - > -3/4 , z2 - > -1/2 } }       ....    as explained above , the two warning messages have been generated during the determination of the contours , and since some real parts have been found , they are harmless",
    ".    the user can now perform the analytic continuation    .... in[3]:= cont = mbcontinue[int , ep - > 0 , rules ]    level 1    taking + residue in z1 = -ep",
    "level 2    integral { 1 }    taking + residue in z2 = -ep    level 3    integral { 1 , 1 }    3 integral(s ) found    out[3]:= { { { mbint[(gamma[1 - ep]*gamma[ep])/ ( m1s^ep*gamma[2 - ep ] ) ,                { { ep - > 0 } , { } } ] } ,   mbint[(gamma[1 - ep -                z2]*gamma[-z2]*gamma[1 + z2 ] * gamma[ep +                z2])/(m1s^ep*gamma[2 - ep ] ) ,   { { ep - > 0 } , { z2 - >                -1/2 } } ] } ,   mbint[(m1s^z1*(-s)^(-ep - z1)*gamma[ep + z1 ] *                gamma[1 - ep - z2]*gamma[-z2]*gamma[-z1 + z2 ] * gamma[1 -                ep - z1 + z2])/gamma[2 - 2*ep - z1 ] ,   { { ep - > 0 } , { z1 - >                -3/4 , z2 - > -1/2 } } ] }       ....    at this stage , the user can , for example , expand the integrals to determine the divergence    .... in[4]:= div = mbexpand[cont , exp[ep eulergamma ] , { ep , 0 , -1 } ]    out[4]:= { { { mbint[ep^(-1 ) , { { ep - > 0 } , { } } ] } } }       ....    this is the well known value for the @xmath29 function .",
    "the integral header , mbint , is kept , because in general , even the divergences may be given by nontrivial mb integrals .",
    "together with the mb.m package , two example notebooks are provided .",
    "the first one , mbexamples1.nb , contains massive box integrals , in particular , the first and the second planar 7-line qed box master integrals , fig .",
    "[ b1 ] and fig .",
    "[ b2 ] respectively .",
    "it is found that in the first case , only 5 integrals contribute to the finite part , which is less than has been determined in ref .",
    "@xcite by another method of analytic continuation . after merging ,",
    "both integrals have just 4 contributions .",
    "i have checked by numerical integration that the results agree with ref .",
    "@xcite and ref .",
    "@xcite .",
    "an interesting example is the b5l3md2 integral , fig .",
    "[ b5l3md2 ] , from ref .  @xcite . if one uses the general representation from ref .",
    "@xcite , and simply sets the powers of the propagators to appropriate values , then the integral seems to vanish , due to a @xmath0 function in the denominator , @xmath31 . to overcome this problem , one keeps one of the powers as a parameter , as in fig .",
    "[ reg ] and does first an analytic continuation in this parameter . in this way , one obtains the following mb representation    @xmath32    the presence of the @xmath33 factor means that as long as we are only interested in the finite part , the integral is just threefold .",
    "this is , of course , confirmed by explicit continuation as can be checked in mbexamples1.nb , where three contributions are obtained .",
    "this result has been numerically checked against the one obtained by the sector decomposition method .",
    "the second notebook , mbexamples2.nb , contains two massless on - shell box integrals , the two - loop non - planar np , fig .",
    "[ np ] , and the three - loop planar t , fig .",
    "[ t ] . in the first case ,",
    "i evaluate the first three poles of the expansion and obtain at the symmetric point , @xmath34    @xmath35    in perfect agreement with ref .",
    "similarly , i recover the value of the first three poles of the triple - box integral ref .",
    "@xcite    @xmath36    in both cases the lowest order pole was given by one - dimensional integrals that could be made with the first barnes lemma , see section  [ tools ] .",
    "there are two factors determining the rate of convergence of mb integrals eq .",
    "( [ definition ] ) : the behaviour of the product of gamma functions for large imaginary arguments and the behaviour of the analytic @xmath18 function .    in the limit of large imaginary argument",
    ", the @xmath0 function exhibits an oscillatory behaviour , an exponential damping factor and a power law . indeed , for @xmath37 and @xmath38    @xmath39",
    "if we combine different gamma functions the exponential factor might in principle disappear , but fortunately in all cases studied it did not .    on the other hand , as explained in ref .",
    "@xcite , the @xmath18 function is usually a product of terms of the form    @xmath40    where @xmath41 is some kinematic invariant ( _ e.g. _ a mandelstam variable ) and @xmath42 is one of the integration variables . as long , as we are in the euclidean regime , _",
    "i.e. _ @xmath43 , eq .",
    "( [ kinematic ] ) contributes another oscillatory factor and can not influence the convergence of the integral . for positive values , however , we will have    @xmath44    where @xmath45 .",
    "it is clear , that the exponential factor can compensate the damping from the product of gamma functions .",
    "an interesting example , which illustrates the problem is provided by the leading pole term of the first planar 7-line qed box integral , fig .",
    "[ b1 ] , which is given by    @xmath46    where @xmath47 .",
    "this is just a product of two one - dimensional integrals , which can be done by closing contours and resumming the residues , with the result    @xmath48    below threshold , _",
    "i.e. _ for @xmath49 .",
    "for @xmath50 , @xmath38 , the integrand behaves as    @xmath51    as anticipated , the exponential factor disappeared .",
    "worse even , the integrand is not absolutely integrable .",
    "it is interesting to note , that the frequency of the oscillation , @xmath52 , encodes the threshold .",
    "further examples seem to confirm that this is a general property .",
    "fortunately , this integral can be evaluated using standard techniques for infinite range oscillatory integrands . with the pantis method @xcite    @xmath53    setting @xmath54 and @xmath55 the value of the integral in eq .",
    "( [ int1 ] ) is @xmath56 , to be compared to the exact result , which is @xmath57 .",
    "one would be tempted to assume that the slowly convergent oscillatory behaviour can be factorized in one integration variable and that the remaining integrations are fast convergent .",
    "this assumption is false , as shown in fig .",
    "( [ behav ] ) , which represents the integrand in @xmath58 of the original integral after shifting @xmath59 and up to normalization factors    @xmath60    apparently , this does not seem to be integrable at all , and certainly no numerical method would provide a reasonable estimate , even if it would be integrable .    in conclusion , one encounters massive feynman integrals , which require , in the physical regime , multidimensional integration of slowly convergent oscillatory functions over infinite range",
    ". this problem can be solved , but the efficiency of the methods is very low and acceptable only for low dimensions .",
    "furthermore , it might be necessary to shift the integration variables to obtain convergent representations .",
    "the latter task is certainly very difficult to automatize .",
    "the above discussion does not change anything to the fact that mb integrals provide reliable numerics in the euclidean regime for all encountered integrals and in the minkowski regime for the massless ones .",
    "it is of course not excluded that some massive integrals can also be done reliably without special methods , but this has to be checked in specific cases .",
    "the mb package provides routines that can perform numerical integrations of mb representations . in order to work ,",
    "the libraries libcuba.a from cuba @xcite , libkernlib.a and libmathlib.a from cernlib @xcite have to be installed either in the working directory or in a globally accessible directory with libraries , and the fortran compiler has to be called f77 . in case , the user wanted to change these defaults , it would be necessary to change the internal code of mb.m .",
    "the main routine for numerical integration is    where the input arguments are    * integrals : a list of integrals as provided by mbexpand . *",
    "kinematics : a list of rules providing numeric values for all the parameters ( usually kinematic invariants ) besides the expansion variable and the integration variables . if the user is interested in minkowski kinematics then a small imaginary part should be added .",
    "even though this is just an approximation , it is justified by the fact , that the final result has usually much lower precision than the error introduced by such a procedure .",
    "* options : * * nameprefix : by default the fortran programs generated for integrals in more than one variable are called mbpart1x0 , etc . where the last number is the power of the expansion variable x and part1 denotes the first integral at this order .",
    "with this option one can change the prefix mb . *",
    "* precisiongoal , accuracygoal , maxpoints , maxrecursion : numerical integration options as in nintegrate .",
    "the defaults are respectively @xmath61 , @xmath62 , @xmath63 , @xmath64 , and have been tuned to several problems solved with the package .",
    "* * maxcuhredim : dimension threshold , 4 by default , above which vegas will be used for the evaluation of the integrals instead of cuhre . *",
    "* complex : by default , only the real part of the integrals is evaluated , with this option set to true , the imaginary part will also be given .",
    "* * fixedcontours : contours will not be shifted if this option is set to true . for a detailed explanation , see mbshiftcontours below . *",
    "* nohigherdimensional : by default , the complete integration is performed within mbintegrate , however with this option set to true , 1-dimensional integrals are evaluated and the fortran programs are prepared , but not run .",
    "this may be used to run them in parallel for example . * * debug : with this option set to true , the fortran programs are kept after evaluation and the value of every integral is given within mbval[value , error , probability , part ] objects , where value , error and probability are given by cuba , and part is the number of the integral .",
    "this provides a primitive means of improving the calculation by tuning only specific integrals , since the integration parameters can be easily changed in the fortran programs . *",
    "* verbose : by default the progress of the integration is printed to the screen . this can be switched off by setting this option to false .    instead of providing a detailed description of the output ,",
    "i illustrate mbintegrate on the example of the `` tennis court integral '' , fig .",
    "( [ tennis ] ) , introduced and calculated analytically in @xcite . since , it has never been confirmed independently , this example supports the correctness of the analytical result .",
    "similarly as in @xcite , a factor of @xmath65 has been taken out .",
    "if expanded is the result provided by mbexpand , which contains 65 integrals , then the numerical evaluation proceeds as follows    .... in[3 ] : = mbintegrate[expanded , { s - > -2 , t - > -3 } ]    shifting contours ...    performing 30 1-dimensional integrations ... 1 ... 2 ... 3 ... 4 ... 5 ... 6 ... 7 ... 8 ... 9 ... 10 ... 11 ... 12 ... 13 ... 14 ... 15 ... 16 ... 17 ... 18 ... 19 ... 20 ... 21 ... 22 ... 23 ... 24 ... 25 ... 26 ... 27 ... 28 ... 29 ... 30    higher - dimensional integrals    preparing mbpart1ep0 ( dim 6 )    preparing mbpart2ep0 ( dim 6 ) . .",
    "preparing mbpart58ep-1 ( dim 4 ) . . .",
    "running mbpart1ep0    running mbpart2ep0 . . .",
    "{ 154.50857084232496 + 1.7777777777777777/ep^6 -     0.8785077342343561/ep^5 - 15.544672574293408/ep^4 -     20.903348302858618/ep^3 + 20.868443575404378/ep^2 +     84.4035478542778/ep ,    { 1.454748334713152 + 0.0012476956259284788/ep^3 +      0.01736836792954924/ep^2 + 0.3243732528120632/ep , 0 } }       ....    at a first stage , the contours are shifted with mbshiftcontours , then the 1-dimensional integrals are evaluated in mathematica .",
    "subsequently , fortran programs for the higher dimensional integrals are prepared and run .",
    "the user can easily see the names of the programs and the dimensions of the integrals .",
    "finally , the result is given in the form of a list .",
    "the first element is the result itself , whereas the second element is a sublist giving the errors on the real and imaginary parts respectively .",
    "it is important to note , that the errors are estimated from the square root of the sum of the squares of the errors of each of the higher dimensional integrals .",
    "therefore , in the example above , the errors start at @xmath66 , because up to this pole , there were only 1-dimensional integrals .",
    "this also implies that it is assumed that the error from the 1-dimensional integrals is negligible .",
    "the above calculation took about 1 hour on a 2.4 ghz notebook , with a claimed error on the finite part of about 1% ( @xmath67 against @xmath68 above ) .",
    "if compared to the exact result    @xmath69    the error is rather at the permille level .",
    "further numerical evaluation examples can be found in the two notebooks provided with the package .",
    "a utility related to numerical integration , which is of interest by itself is    where the only argument is a list of integrals as provided by mbexpand .",
    "the idea here , is that if there is a contour passing between two poles of a @xmath0 function , then the further it will stay from both of them , the less peaked will the integrand be . since the contours have more or less random distances to the poles , it is wise to shift them before numerics to improve stability",
    ". this is achieved by the above utility .",
    "apart from performing the analytic continuation of a mb integral , one is usually interested in simplifying the integrals as much as possible .",
    "this is of utmost importance , if one is interested in obtaining analytic results .",
    "it is often the case , that some of the integrations can be performed exactly with the help of barnes lemmas .",
    "@xmath70    @xmath71    both of them are valid only if the integration contour is such that the poles corresponding to @xmath0 s with positive @xmath42 are separated from the poles with negative @xmath42 .",
    "if this is the case , the user can apply the rules defined as    and ,    where z is the integration variable .",
    "an example is the simplification of the integral for the @xmath29 function    .... in[1]:= int = b0[s , 1 + z1 , 1 + z2]*ms^z1*ms^z2 * gamma[-z1]*gamma[1 +          z1]*gamma[-z2]*gamma[1 + z2 ] /.",
    "z1 - > z1 - z2 /.",
    "barnes1[z2 ]    out[1]:= ( ms^z1*(-s)^(-ep - z1)*gamma[1 - ep - z1]^2*gamma[-z1 ] *           gamma[ep + z1])/gamma[2 - 2*ep - 2*z1 ]       ....    this is , however , a rare situation . most of the time , the barnes lemmas are applicable to integrals after analytic continuation and expansion . in this case",
    ", the procedure generates integrals with contours parallel to the imaginary axis and the contour might not separate the poles of the @xmath0 functions . in such cases",
    "one uses various corollaries to the lemmas , see _",
    "e.g. _ ref .",
    "@xcite .",
    "i propose here an automatic procedure based on mbcontinue .",
    "the idea is to shift all of the @xmath72 variables by @xmath2 , such that the contours be separated and then analytically continue with @xmath2 to @xmath20 , as illustrated in fig .",
    "[ barnes ] . in the case of the first barnes lemma",
    ", the shift is determined by the condition    @xmath73    this algorithm is implemented in the following two routines :    and    the arguments are as described in mbcontinue and z is the integration variable that should be eliminated by barnes lemma . an example usage can be found in mbexamples2.nb .    in the case , where the integral contains a @xmath1 function ,",
    "the user has to apply the lemma to the corresponding integrand with a @xmath0 function and only then derive the result .",
    "this might be automatized in the future .    of lesser importance",
    "are the remaining tools . to help in the construction of efficient mb integrals , there are several known exact expressions for the @xmath74 , @xmath29 and @xmath75 functions taken from the appendix of ref",
    ".  @xcite .",
    "details can be found directly in the code of mb.m . in case",
    "the user would like to construct his representation directly from a feynman parameter integral as is done _",
    "e.g. _ in ref .",
    "@xcite , there is also a routine    that generates the @xmath76 and @xmath77 polynomials in the notation of ref .",
    "the input is    * integrand : a product of propagators ds[k , m , n ] = @xmath78 .",
    "* momenta : the loop momenta . * invariants : a list of rules , _",
    "e.g. _ p1*p2 - > 1/2*s - m^2 , which transform products of external momenta into some suitable notation , for example the mandelstam variables .    in the output ,",
    "one obtains a list of four elements .",
    "first come the @xmath76 and @xmath77 polynomials , then the @xmath79 matrix and @xmath80 vector again in the notation of ref .",
    "i presented a practical tool for automatic analytic continuation of mb integrals .",
    "it can be used either as part of a feynman diagram calculation leading to an analytic result in terms of some known functions , or as a tool for directly providing numerical results .",
    "irrespective of the aim , the most cumbersome part of the mb technique has been reduced to a mere use of one mathematica function , making high order calculations in perturbation theory significantly easier and more accessible to the interested .",
    "i would like to thank j. gluza for testing the package and v. a. smirnov for motivating me to make it public through the present work .",
    "the development of this package profited very much from a long collaboration with j. gluza and t. riemann on the nnlo corrections to bhabha scattering in qed .",
    "this work was supported by the sofja kovalevskaja award of the alexander von humboldt foundation sponsored by the german federal ministry of education and research , and by the polish state committee for scientific research ( kbn ) for the research project in years 2004 - 2005 .",
    "a.  v.  kotikov , phys .",
    "b * 267 * ( 1991 ) 123 .",
    "e.  remiddi , nuovo cim .  a * 110 * ( 1997 ) 1435 .",
    "v.  a.  smirnov , phys .",
    "b * 460 * ( 1999 ) 397 .",
    "j.  b.  tausk , phys .",
    "b * 469 * ( 1999 ) 225 .",
    "m.  czakon , j.  gluza and t.  riemann , arxiv : hep - ph/0511187 . t.  binoth and g.  heinrich , nucl .",
    "b * 585 * ( 2000 ) 741 . c.  anastasiou and a.  daleo , arxiv : hep - ph/0511176 .",
    "v.  a.  smirnov , `` evaluating feynman integrals '' , springer ( berlin , germany ) 2002 .",
    "j.  a.  m.  vermaseren , int .  j.  mod .",
    "a * 14 * ( 1999 ) 2037 , s.  moch , p.  uwer and s.  weinzierl , j.  math .",
    "* 43 * ( 2002 ) 3363 ; s.  moch and p.  uwer , arxiv : math - ph/0508008 . v.  a.  smirnov and o.  l.  veretin , nucl",
    ".  phys .",
    "b * 566 * ( 2000 ) 469 .",
    "v.  a.  smirnov , phys .",
    "b * 524 * ( 2002 ) 129 .",
    "g.  heinrich and v.  a.  smirnov , phys .",
    "b * 598 * ( 2004 ) 55 .",
    "m.  czakon , j.  gluza and t.  riemann , nucl .",
    "* 135 * ( 2004 ) 83 ; m.  czakon , j.  gluza and t.  riemann , phys .",
    "d * 71 * ( 2005 ) 073009 .",
    "v.  a.  smirnov , phys .",
    "b * 567 * ( 2003 ) 193 .",
    "k.  kythe , m.  r.  schferkotter , `` computational methods for integration '' , chapman & hall / crc , 2005 ."
  ],
  "abstract_text": [
    "<S> i describe a package written in mathematica that automatizes typical operations performed during evaluation of feynman graphs with mellin - barnes ( mb ) techniques . </S>",
    "<S> the main procedure allows to analytically continue a mb integral in a given parameter without any intervention from the user and thus to resolve the singularity structure in this parameter . </S>",
    "<S> the package can also perform numerical integrations at specified kinematic points , as long as the integrands have satisfactory convergence properties . </S>",
    "<S> i demonstrate that , at least in the case of massive graphs in the physical region , the convergence may turn out to be poor , making nave numerical integration of mb integrals unusable . </S>",
    "<S> i present possible solutions to this problem , but argue that full automatization in such cases may not be achievable . </S>"
  ]
}
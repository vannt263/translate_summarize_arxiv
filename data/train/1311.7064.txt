{
  "article_text": [
    "the zero forcing number of a graph was introduced in @xcite and the related terminology was extended in @xcite . since then this parameter has been considered by a wealth of researchers , see , for example , @xcite for additional sources on this topic .",
    "independently , physicists have studied this parameter , referring to it as the graph infection number , in conjunction with control of quantum systems @xcite .",
    "it also arises in computer science in the context of fast - mixed searching  @xcite .",
    "in general , when determining the zero forcing number of a graph we start with a set of initial vertices of the graph ( which we say are coloured black , while all other vertices are white ) .",
    "then , using a particular colour change rule applied to these vertices , we change the colour of white vertices in the graph to black .",
    "the repeated application of this colour change rule partitions the graph into disjoint induced paths and each of the initial vertices is an end point of one of these paths .",
    "the challenge is to determine the smallest set of initial vertices so that by repeatedly applying the colour change rule will change the colour of every white vertex of the graph to black . recently",
    "a refinement of the colour change rule was introduced ( called the positive zero forcing colour change rule ) using this rule , the positive semi - definite zero forcing number was defined ( see , for example , @xcite ) . when the positive zero forcing colour change rule is applied to a set of initial vertices of a graph ,",
    "the vertices are partitioned into disjoint induced trees , rather than paths .",
    "these parameters are both remarkable since they are graph parameters that provide an upper bound on the algebraic parameters of maximum nullity of both symmetric and positive semi - definite matrices associated with a graph ( see @xcite ) . that is , for a given graph @xmath1",
    ", we define @xmath2 : a = a^{t } , \\ ; { \\rm for } \\ ;",
    "i \\neq j , a_{ij } \\neq 0 \\leftrightarrow \\{i , j\\ } \\in e\\},\\ ] ] and let @xmath3 denote the subset of positive semi - definite matrices in @xmath4 . the _ maximum nullity _ of @xmath5 is @xmath6 and define @xmath7 is called the _ maximum positive semi - definite nullity of @xmath5_. ( here @xmath8 denotes the nullity of the matrix @xmath9 . )    in the next section , we define the first colour change rule , along with stating the definition of a zero forcing set and the zero forcing number of a graph .",
    "the relationship between these sets and induced paths in the graph will become clear with these definitions . in sections  [ graphs with z(g)=p(g ) ] and [ doublepaths ] we prove the equality between the zero forcing number and the path cover number for the following three families of graphs : block - cycle graphs , double paths , and graphs that we call series of double paths . in section 5",
    "we define the positive semi - definite colour change rule along with the positive semi - definite forcing number and forcing trees .",
    "the positive semi - definite forcing number for graphs that are formed by the graph operation called the vertex sum are considered in section  [ vertex_sum_of_two_graphs ] . in sections",
    "[ doubletrees ] and [ outerplanar ] we establish results similar to those in sections  [ graphs with z(g)=p(g ) ] and [ doublepaths ] for the positive semi - definite forcing number .",
    "specifically , we show that the parameters tree cover number and positive zero forcing number agree on double trees and outerplanar graphs .",
    "finally , in section  [ k_trees ] we give some families of @xmath0-trees in which we can track both the tree cover number and the positive zero forcing number .",
    "let @xmath5 be a graph in which every vertex is initially coloured either black or white .",
    "if @xmath10 is a black vertex of @xmath5 and @xmath10 has exactly one white neighbour , say @xmath11 , then we change the colour of @xmath11 to black ; this rule is called the _ colour change rule_. in this case we say `` @xmath10 forces @xmath11 '' which is denoted by @xmath12 .",
    "the procedure of colouring a graph using the colour rule is called a _ zero forcing process _ or simply a _ forcing process_. given an initial colouring of @xmath5 , in which a set of the vertices is black and all other vertices are white , the _ derived set _ is the set of all black vertices resulting from repeatedly applying the colour - change rule until no more changes are possible .",
    "if the derived set for a given initial subset of black vertices is the entire vertex set of the graph , then the set of initial black vertices is called a _ zero forcing set_. the _ zero forcing number _ of a graph @xmath5 is the size of the smallest zero forcing set of @xmath5 ; it is denoted by @xmath13 .",
    "a zero forcing process is called _ minimal _ if the initial set of black vertices is a zero forcing set of the smallest possible size .    for any non - empty graph @xmath5 @xmath14 the lower bound holds with equality if and only if @xmath5 is a path and the upper bound holds with equality if and only if @xmath5 is a complete graph . in fact , the parameter @xmath13 is also interesting since @xmath15 @xcite .",
    "if @xmath16 is a zero forcing set of a graph @xmath5 , then it is possible to produce a list of the forces in the order in which they are performed in the zero forcing process .",
    "this list is called the _ chronological list of forces_. a _ forcing chain _ is a sequence of vertices @xmath17 such that @xmath18 , for @xmath19 in the forcing process .",
    "the forcing chains are not unique for a zero forcing set , as different zero forcing processes can produce distinct sets of forcing chains .    in every step of a forcing process , each vertex can force at most one other vertex ; conversely every vertex not in the zero forcing set is forced by exactly one vertex .",
    "thus the maximal forcing chains partition the vertices of a graph into disjoint induced paths .",
    "the number of these paths is equal to the size of the zero forcing set and the elements of the zero forcing set are the initial vertices of the forcing chains and hence end - points of these paths ( see ( * ? ? ?",
    "* proposition 2.10 ) for more details ) .",
    "a _ path covering _ of a graph is a family of induced disjoint paths in the graph that cover ( or include ) all vertices of the graph .",
    "the minimum number of such paths that cover the vertices of a graph @xmath5 is the _ path cover number of @xmath5 _ and is denoted by @xmath20 .",
    "since the forcing chains form a set of covering paths we have the following basic result .",
    "[ p(g)<=z(g ) ] let @xmath5 be a graph , then @xmath21 .    this inequality can be strict , in fact , complete graphs are examples for which the difference between these two parameters can be arbitrarily large , since if @xmath22 we have @xmath23 conversely , there are many examples where this inequality holds with equality , for example a path on @xmath24 vertices . in the next section we consider families of graphs",
    "for which the zero forcing number equals the path cover number .",
    "the most famous family of graphs for which the path cover number agrees the zero forcing number is trees ( see ( * ? ? ?",
    "* proposition 4.2 ) ) . in this section",
    ", we establish this equality for the block - cycle graphs .",
    "we refer the readers to @xcite where some initial work comparing m and @xmath25 appeared for block - cycle graphs .",
    "a graph is called _ non - separable _ if it is connected and has no cut - vertices .",
    "block _ of a graph is a maximal non - separable induced subgraph .",
    "block - cycle _ graph is a graph in which every block is either an edge or a cycle .",
    "a block - cycle graph with only one cycle is a _",
    "unicyclic _ graph .",
    "further , according to the definition , the only block - cycle graphs with no cut vertex is either a cycle or an edge .",
    "it is not hard to see that in a block - cycle graph each pair of cycles can intersect in at most one vertex , since otherwise there will be a block in the graph which is neither a cycle nor an edge .",
    "thus two blocks are said to be _ adjacent _ if they have exactly one vertex in common .",
    "a block in a block - cycle graph is a _ pendant block _ if it shares only one of its vertices with other blocks of the graph .",
    "the next result demonstrates that just as a tree must have at least two pendant vertices , a block - cycle graph must have at least two pendant blocks .",
    "[ pendant block ] any block - cycle graph has at least two pendant blocks .",
    "let @xmath5 be a block - cycle graph with exactly @xmath24 blocks . to prove this theorem",
    ", we will construct a graph with @xmath24 vertices that is a minor of @xmath5 .",
    "we will show that the end - points of the longest induced path in @xmath26 are associated to the pendant blocks in the original graph .",
    "let @xmath27 be the blocks in @xmath5 .",
    "note that @xmath28 is either an edge or a cycle , for any @xmath29 .",
    "the vertices of @xmath26 are @xmath30 and the vertex @xmath31 is associated to the block @xmath28 .",
    "vertices @xmath31 and @xmath32 are adjacent in @xmath26 if and only if the blocks @xmath28 and @xmath33 share a vertex .    let @xmath34 be the longest induced path in @xmath26 and assume that each @xmath35 corresponds to the block @xmath28",
    ". we will show that both @xmath36 and @xmath37 are pendant blocks .",
    "if @xmath36 is not a pendant block , then there is another block , @xmath9 , that shares a vertex with @xmath36 different from the vertex that @xmath36 shares with @xmath38 .",
    "since @xmath25 is a longest induced path , the block @xmath9 must also share a vertex with some @xmath28 with @xmath39 .",
    "however , in this case the blocks @xmath40 form a non - separable subgraph that is neither a cycle nor an edge .",
    "the following lemma is straightforward to prove .",
    "[ p(g - b ) , g is a block - cycle ] if @xmath9 is a pendant block in a block - cycle graph , then @xmath41    [ for block - cycle z(g)=p(g ) ] let @xmath5 be a block - cycle graph . then @xmath42 furthermore , the paths in any minimal path covering of @xmath5 are precisely the forcing chains in a minimal zero forcing process initiated by an appropriate selection of the end - points of the paths in this collection .",
    "we prove this theorem by induction on the number of blocks in @xmath5 along with lemma  [ pendant block ] .",
    "the only block - cycle graphs with one block are either an edge or a cycle ; the theorem is clearly true for these two graphs .",
    "assume that the theorem is true for all block - cycle graphs @xmath26 with fewer than @xmath43 blocks .",
    "let @xmath5 be a block - cycle graph , then according to lemma  [ pendant block ] , there is a pendant block , @xmath9 , in @xmath5 which is connected to the other blocks in @xmath5 only through the vertex @xmath10 .",
    "let @xmath26 be the graph formed by removing all the vertices of the block @xmath9 , except @xmath10 , from @xmath5 .    the graph @xmath26 has @xmath44 blocks , so by the induction hypothesis @xmath45 and appropriately chosen end - points of the paths in a minimal path covering of @xmath26 forms a zero forcing set . by lemma  [ p(g - b ) ,",
    "g is a block - cycle ] , we have @xmath46 and there are two possible cases to consider .",
    "there is a minimal path - cover @xmath47 for the graph @xmath26 in which @xmath10 is the end - point of a path @xmath25 .",
    "first assume that @xmath9 is the edge @xmath48 .",
    "then @xmath26 is the graph formed by removing the pendant vertex @xmath11 from @xmath5 .",
    "since @xmath10 is an end - point of @xmath25 and @xmath11 is only connected to @xmath10 , returning @xmath9 to @xmath26 does not change the path cover number of the graph . by the induction hypothesis , the paths in the path - cover @xmath47 are the forcing chains of the forcing process initiated by the end - points of the paths in @xmath47 .",
    "also since @xmath10 is an end - point of @xmath25 , we can assume that it does not perform any forces .",
    "therefore , the zero forcing process will be continued by using @xmath10 to force @xmath11 .",
    "thus , @xmath49 which implies @xmath50 .",
    "next assume that @xmath9 is a pendant cycle .",
    "then @xmath51 since at least two paths are needed to cover the vertices of a cycle .",
    "let @xmath11 and @xmath52 be the two neighbours of @xmath10 in @xmath9 . then , since @xmath10 is an end - point of @xmath25 , the induced path @xmath53 covers all vertices in the cycle @xmath9 except @xmath11 .",
    "thus @xmath54 is a path cover for @xmath5 and @xmath55 .",
    "we also need that these paths are forcing chains . by assigning colour black to the vertex @xmath11",
    ", all vertices in @xmath9 will be coloured by continuing the forcing process in @xmath25 through @xmath10 .",
    "thus , @xmath56 which implies @xmath50 .    in every minimal path covering @xmath47 of @xmath26 ,",
    "the vertex @xmath10 is an inner vertex of a path @xmath25 in @xmath47 .",
    "again , we first assume that @xmath9 is an edge @xmath48 .",
    "since @xmath57 covers all the vertices of @xmath5 , we have that @xmath58 .",
    "but if @xmath59 , then @xmath11 is covered in the same path as @xmath10 in a path covering of @xmath26 ; this contradicts the fact that @xmath10 is not an end - point of any path in any path covering of @xmath5 .",
    "thus @xmath55 .",
    "if the vertex @xmath11 is assigned the colour black , then we are able to colour the graph @xmath5 following the same forcing process which we followed to colour the graph @xmath26 .",
    "thus , @xmath56 which implies @xmath50 .",
    "if @xmath9 is a cycle , then @xmath60 , since @xmath47 along with a path covering the vertices of @xmath61 , covers all vertices of @xmath5 .    let @xmath52 be a vertex in @xmath9 that is a neighbour of @xmath10 .",
    "the set of initial set of black vertices in the zero forcing set of @xmath26 along with @xmath52 forms a zero forcing set for @xmath5 .",
    "thus , @xmath56 which implies @xmath50 .",
    "the following corollary is obtained from the fact that any unicyclic graph is a block - cycle graph .",
    "this result was also recently shown to be true in  @xcite .",
    "[ unicyclics ] if @xmath5 is a unicyclic graph , then @xmath50 .",
    "it seems that for general graphs it is rare to have the equality @xmath50 . to show this , along with the fact that the discrepancy between @xmath13 and @xmath20 can be arbitrarily large",
    ", we focus on the family of graphs with @xmath62 .    [ prop : allkvalues ] let @xmath5 be a graph with @xmath62 and two covering paths @xmath63 and @xmath64 with @xmath65 and @xmath66 .",
    "then @xmath67 moreover , for any number @xmath0 in this interval , there is a graph @xmath5 satisfying @xmath62 with @xmath68 .",
    "assume that @xmath69 and note that the claim that @xmath70 is trivial .",
    "let @xmath9 be the set consisting of @xmath71 and an end - point of @xmath64 .",
    "obviously @xmath9 is a zero forcing set for @xmath5 .",
    "thus @xmath72 .",
    "let @xmath0 be any number in the interval @xmath73 and @xmath63 and @xmath64 be two paths with @xmath65 and @xmath66 .",
    "starting with an end - point of @xmath63 make each of the first @xmath0 consecutive vertices of @xmath63 adjacent to all of the vertices of @xmath64 .",
    "then , it is easy to observe that forcing number of this graph is @xmath74 ( the forcing set consists on the consecutive @xmath0 vertices of @xmath63 along with an end - point of @xmath64 ) .    in the next section",
    "we discuss a family of graphs for which @xmath75 .",
    "a graph is _ outerplanar _ if there exists a planar embedding of the graph in which all the vertices are contained in a single face .",
    "if an outerplanar graph , that is not a path , has the property that its vertices can be covered with two induced paths , then the graph is called a _ double path _ or a _",
    "parallel path_. such graphs were also called a _",
    "graph of two parallel paths _ in @xcite .",
    "we refer to these two induced paths , naturally , as the _ covering paths_. clearly if @xmath5 is a double path , then @xmath62 . we will show that @xmath13 is also @xmath76 , so double paths are another family of graphs for which the path cover number equals the zero forcing number .",
    "[ zdoublepath ] if @xmath5 is a double path , then @xmath77 .",
    "assume that @xmath63 and @xmath64 are the two covering paths of @xmath5 in a given embedding of @xmath5 .",
    "thus the paths are fixed and we can talk about the left end points of the paths ( or , equivalently , the right end points ) .",
    "let @xmath10 be the left end point of @xmath63 and @xmath11 the left end point of @xmath64 .",
    "it is not difficult to deduce that since no edges are cross in this graph , the set @xmath78 forms a minimal zero forcing set for @xmath5 .",
    "note , if we choose the left endpoints @xmath78 of a double path , then it follows that @xmath63 and @xmath64 ( as in the proof above ) will also form the corresponding zero forcing chains for a double path .",
    "the concept of a double path can be generalized .",
    "if the vertices of a graph @xmath5 can be partitioned into paths @xmath79 so that :    1 .   the only vertices not in the path @xmath80 that are adjacent to a vertex in @xmath80 are in either @xmath81 or @xmath82 ( assume @xmath83 and @xmath84 are the empty set ) , and 2 .",
    "the graph induced by @xmath85 and @xmath82 is a double path for @xmath86 ,    then @xmath5 is called a _ series of parallel paths_.    [ pathseries ] if @xmath5 is a series of parallel paths , then @xmath87 .",
    "moreover , the left ( or right ) endpoints of the covering paths form a zero forcing set .",
    "we use induction on the number of paths .",
    "if there are two paths , then the result follows from theorem  [ zdoublepath ] and assume the result holds for any series of parallel paths with @xmath0 paths .",
    "let @xmath5 be a graph that is the series of @xmath74 parallel paths and assume that @xmath84 is the final path .",
    "set @xmath88 .",
    "the set of left end points of the path covering of @xmath26 forms a zero forcing set of @xmath26",
    ". then these end points , together with the left end point of @xmath84 forms a zero forcing set for @xmath5 and the forcing chains are the paths , @xmath89 .",
    "we note here that theorem [ pathseries ] may be used to yield the zero forcing number of the grid , namely the cartesian product of two paths ( see also @xcite ) .",
    "that is , the zero forcing number of the @xmath90-by-@xmath24 grid is given by @xmath91 .",
    "theorem  [ zdoublepath ] can also be obtained from ( * ? ? ?",
    "* theorem 5.1 ) , although zero forcing is not considered in @xcite . in fact , they show that among all the graphs with @xmath62 , only those that are also outerplanar satisfy m@xmath92 .",
    "there are outerplanar graphs for which the path cover number and the zero forcing number are arbitrarily far apart ( see , for example , ( * ? ? ?",
    ". 2.11 ) ) . motivated by this ,",
    "in the next section we consider positive zero forcing sets , and the positive zero forcing number .",
    "in 2010 , a variant of the zero forcing number , called positive semi - definite zero forcing or the positive zero forcing number , was introduced in @xcite , and a collection of its properties were discussed in @xcite and @xcite .",
    "the positive zero forcing number is also based on a colour change rule that is very similar to the zero forcing colour change rule .",
    "let @xmath5 be a graph and @xmath9 a set of vertices ; we will initially colour of the vertices of @xmath9 black and all other vertices white .",
    "let @xmath93 be the set of vertices of the connected components of @xmath94 .",
    "if @xmath10 is a vertex in @xmath9 and @xmath52 is the only white neighbour of @xmath10 in the graph induced by @xmath95 , then @xmath10 can force the colour of @xmath52 to black .",
    "this is the _ positive colour change rule_. the definitions and terminology for the positive zero forcing process , such as , colouring , derived set , positive zero forcing number etc . , are identical to those for the zero forcing number , except we use the positive semi - definite colour change rule .",
    "the size of the smallest positive zero forcing set of a graph @xmath5 is denoted by @xmath96 .",
    "note that for any non - empty graph @xmath97 the lower bound holds with equality if and only if @xmath5 is a tree and the upper bound only for complete graphs .",
    "also for all graphs @xmath5 , since a zero forcing set is also a positive zero forcing set we have that @xmath98 .",
    "moreover , in @xcite it was observed that @xmath99 , for any graph @xmath5 .",
    "we have seen that applying the zero forcing colour change rule to the vertices of a graph produces a path covering for the graph .",
    "analogously , applying the positive colour change rule produces a set of induced trees in the graph , and we refer to these trees as _ forcing trees_. to define these trees , let @xmath5 be a graph and @xmath100 be a positive zero forcing set of @xmath5 . construct the derived set , recording the forces in the order in which they are performed ; this is the chronological list of forces .",
    "note that in applying the colour change rule once , two or more vertices can perform forces at the same time and a vertex can force multiple vertices from different components at the same time . for any chronological list of forces , a forcing tree is an induced rooted tree , @xmath101 , formed by a sequence of sets of vertices @xmath102 , where @xmath103 is the root and the vertices in @xmath104 are at distance @xmath105 from @xmath106 in the tree .",
    "the vertices of @xmath104 for @xmath107 , are forced by applying the positive semi - definite colour change rule with the vertices in @xmath108 ; so for any @xmath109 there is a @xmath110 , such that @xmath10 forces @xmath11 if and only if @xmath11 is a neighbour of @xmath10 .    in a forcing tree",
    ", the vertices in @xmath104 are said to be the vertices of the @xmath105-th level in the tree .",
    "note that the vertices in a specific level may have been forced in different steps of the positive semi - definite colour change procedure and they may also perform forces in different steps .",
    "the positive zero forcing number of the graph @xmath5 in figure  [ ex.forcing trees ] is three and @xmath111 is a positive zero forcing set for the graph . the forcing trees in this colouring procedure ( as depicted in figure  [ ex.forcing trees ] ) are as follows : @xmath112 , where @xmath113 , @xmath114 , @xmath115 , + @xmath116 .",
    "@xmath117 , where @xmath118 .",
    "+     +    our next concept is analogous to the path cover number of a graph .",
    "a _ tree covering of a graph _ is a family of induced vertex disjoint trees in the graph that cover all vertices of the graph .",
    "the minimum number of such trees that cover the vertices of a graph @xmath5 is the _ tree cover number _ of @xmath5 and is denoted by @xmath119 .",
    "any set of forcing trees corresponding to a minimal positive zero forcing set is of size @xmath96 and covers all vertices of the graph .",
    "this implies the following .",
    "[ t(g)&z_+(g ) ] for any graph @xmath5 , we have @xmath120 .",
    "this bound is clearly tight for trees and cycles .",
    "but there are graphs , such as complete bipartite graphs , for which the discrepancy between these parameters can be arbitrarily large .",
    "it is , hence , an interesting question to ask for which families of graphs does equality hold between these two parameters .",
    "one way to approach this problem is to find a graph operation which preserves the equality in graphs for which these parameters agree .",
    "using this approach , in the next section we will prove that equality between these two parameters holds for block - cyclic graphs . in section  [ doubletrees ]",
    "we will define a family of graphs called _ double trees _",
    ", these are analogous to the double paths of section  [ doublepaths ] and we will show that the positive zero forcing number and the tree cover number of these graphs coincide .",
    "we will also show these parameters are equal for a much larger family of graphs in section  [ outerplanar ] .",
    "let @xmath5 and @xmath121 be two graphs and assume that @xmath11 is a vertex of both @xmath5 and @xmath121 , then the _ vertex sum of @xmath5 and @xmath121 over @xmath11 _ is the graph formed by identifying @xmath11 in the two graphs .",
    "the vertex - sum is denoted by @xmath122[l]{$+$ } \\raisebox{-.75ex}{\\makebox[2ex]{$_{v}$ } } } h$ ] .",
    "a block - cycle graph can be recursively defined as the vertex sum of a block - cycle graph with a cycle or a path .",
    "the next result shows how to calculate the tree cover number of the vertex sum of two graphs .",
    "[ tofvertexsum ] for any graphs @xmath5 and @xmath121 , both with an identified vertex @xmath11 , we have @xmath123[l]{$+$ } \\raisebox{-.75ex}{\\makebox[2ex]{$_{v}$}}}\\,h)=t(g)+t(h)-1.\\ ] ]    let @xmath124 and @xmath125 be minimal tree coverings of @xmath5 and @xmath121 , respectively , and suppose @xmath126 and @xmath127 are the trees covering @xmath11 .",
    "let @xmath128[l]{$+$ } \\raisebox{-.75ex}{\\makebox[2ex]{$_{v}$}}}\\ , t_2 $ ] .",
    "observe that @xmath129 is an induced tree in @xmath130[l]{$+$ } \\raisebox{-.75ex}{\\makebox[2ex]{$_{v}$}}}\\,h$ ] that also covers @xmath11 .",
    "therefore , @xmath131 is a tree covering of @xmath130[l]{$+$ } \\raisebox{-.75ex}{\\makebox[2ex]{$_{v}$}}}\\,h$ ] .",
    "next we show , in fact , the vertices of @xmath130[l]{$+$ } \\raisebox{-.75ex}{\\makebox[2ex]{$_{v}$}}}\\,h$ ] can not be covered with fewer trees .",
    "suppose that the vertices of @xmath130[l]{$+$ } \\raisebox{-.75ex}{\\makebox[2ex]{$_{v}$}}}\\,h$ ] can be covered with @xmath132 induced disjoint trees .",
    "let @xmath133 be the tree that covers @xmath11 in such a tree covering of @xmath130[l]{$+$ } \\raisebox{-.75ex}{\\makebox[2ex]{$_{v}$}}}\\,h$ ] .",
    "at least @xmath134 trees are needed to cover the vertices of @xmath135 . since the number of trees in the covering of @xmath130[l]{$+$ } \\raisebox{-.75ex}{\\makebox[2ex]{$_{v}$}}}\\,h$ ]",
    "is @xmath132 , the vertices of @xmath136 are covered by at most ( @xmath137 ) trees , but this contradicts the fact that @xmath138 is the least number of trees that cover the vertices of @xmath121 .    [ z+ofvertexsum ] for any graphs @xmath5 and @xmath121 , both with an identified vertex @xmath11 , we have @xmath139[l]{$+$ } \\raisebox{-.75ex}{\\makebox[2ex]{$_{v}$}}}\\,h)=z_+(g)+z_+(h)-1.\\ ] ]    to prove this equality , let @xmath124 and @xmath125 be the sets of forcing trees for a minimal positive zero forcing set in @xmath5 and @xmath121 respectively .",
    "let @xmath126 and @xmath127 be the trees that contain @xmath11 . then @xmath140[l]{$+$ } \\raisebox{-.75ex}{\\makebox[2ex]{$_{v}$}}}\\,t_2 $ ] is a forcing tree in @xmath130[l]{$+$ } \\raisebox{-.75ex}{\\makebox[2ex]{$_{v}$}}}\\,h$ ] covering @xmath11 .",
    "then similar reasoning as in the previous lemma applies .",
    "[ z+vertexsum ] if @xmath5 and @xmath121 are two graphs that satisfy @xmath141 and @xmath142 , then @xmath139[l]{$+$ } \\raisebox{-.75ex}{\\makebox[2ex]{$_{v}$}}}\\,h)=t(g\\,{\\makebox[0ex][l]{$+$ } \\raisebox{-.75ex}{\\makebox[2ex]{$_{v}$}}}\\,h),\\ ] ] where @xmath11 is an identified vertex in both @xmath5 and in @xmath121 .    since a block - cycle graph is the vertex sum of a block - cycle graph and either a cycle or a path we have the following result .",
    "if @xmath5 is a block - cycle graph , then @xmath143 .",
    "in the next section , we will show that @xmath144 for every outerplanar graph . the first step towards verifying",
    "this claim is to show that it holds for a subset of these graphs called _",
    "double trees_. recall that in section  [ doublepaths ] we defined a double path , whereas a double tree can be viewed as an extension of the concept of a double path .",
    "if the vertices of a connected outerplanar graph , which is not a tree , can be covered with two induced trees , then the graph is called a _ double tree_.",
    "our first step will be to show that if @xmath5 is a double path , then @xmath145 .",
    "then any double tree can be constructed by applying an appropriate series of vertex sums of trees with an appropriate double path .",
    "thus , from corollary  [ z+vertexsum ] , we will be able to conclude that @xmath145 holds for any double tree .    in the following three lemmas",
    "we find different positive zero forcing sets for double paths . in all of these lemmas",
    "we will assume that @xmath5 is a double path with a specific planar embedding of @xmath5 with covering paths @xmath63 and @xmath64 .",
    "since this planar embedding of @xmath5 is fixed , we can refer to the end points of a covering path as the right end point and the left end point .",
    "[ lemma1 ] if @xmath10 and @xmath11 are both right ( or both left ) end points of @xmath63 and @xmath64 , respectively , then @xmath78 is a positive zero forcing set of @xmath5 . moreover , if @xmath78 are initially coloured black , then there is a positive zero - forcing process in which the forcing trees are @xmath63 and @xmath64 .",
    "we prove this lemma by induction on the number of vertices .",
    "the result is true for @xmath146 , which is a connected double path on the fewest number of vertices .",
    "assume that it is true for all graphs @xmath121 with @xmath147 .",
    "let @xmath5 be a graph on @xmath24 vertices .",
    "assume that @xmath10 and @xmath11 are left end points of @xmath63 and @xmath64 , respectively . by assigning the colour black to each of these vertices",
    "we claim that @xmath78 is a positive zero forcing set of @xmath5 . if @xmath10 is a pendant vertex , then it forces its only neighbour , say @xmath52 ( which must be in @xmath148 , which is a left end point of a covering path in @xmath149 .",
    "thus by the induction hypothesis @xmath150 is a positive zero forcing set of @xmath5 and there is a positive zero forcing process in which the forcing trees are @xmath63 and @xmath64 .",
    "similarly if @xmath11 is a pendant vertex , using a similar reasoning , the lemma follows .    if neither @xmath10 nor @xmath11 are pendant , then @xmath10 and @xmath11 are adjacent and since both are on the same side , at least one of them , say @xmath10 , is of degree two .",
    "let @xmath52 be the only neighbour of @xmath10 in @xmath63 .",
    "thus @xmath10 can force @xmath52 ( its only white neighbour ) and again by the induction hypothesis @xmath150 is a positive zero forcing set of @xmath5 and there is a positive zero forcing process in which the forcing trees are @xmath63 and @xmath64 .",
    "the same reasoning applies when @xmath10 and @xmath11 are the right end points of @xmath63 and @xmath64 , respectively .",
    "[ lemma2 ] if @xmath10 and @xmath11 are two vertices of @xmath63 and @xmath64 , respectively , which form a cut set for @xmath5 , then @xmath78 is a positive zero forcing set for @xmath5 .",
    "moreover , there is a positive zero forcing forcing process in which @xmath63 and @xmath64 are the forcing trees ( with @xmath10 and @xmath11 the roots of the tree ) .",
    "let @xmath151 and @xmath152 be the vertices of the left hand side and the right hand side components of @xmath153 , respectively , and let @xmath154 and @xmath155 be the subgraphs induced by @xmath156 and @xmath157 , respectively . then according to lemma  [ lemma1 ]",
    ", @xmath78 is a positive zero forcing set for both @xmath154 and @xmath155 and thus a positive zero forcing set for @xmath5 and there is a positive zero forcing process in which @xmath63 and @xmath64 are the forcing trees .",
    "[ lemma3 ] if @xmath10 is a vertex in @xmath63 which is not an end point , then there always is a vertex @xmath11 in @xmath64 such that @xmath78 is a cut set of @xmath5 .",
    "if @xmath64 contains at most two vertices this result is clear since @xmath10 is not an end point .",
    "suppose there is a vertex @xmath10 in @xmath63 for which there is no vertex @xmath11 in @xmath64 such that @xmath78 is a cut set for @xmath5 .",
    "this implies that @xmath158 since if @xmath159 , then at least one of @xmath160 and @xmath161 is a cut set .",
    "let @xmath11 be any non - pendant vertex of @xmath64 .",
    "obviously @xmath10 is a cut vertex of @xmath63 and @xmath11 is a cut vertex of @xmath64 . since @xmath78 is not a cut set of @xmath5 , there is a vertex in the left hand side ( or right hand side ) of @xmath10 that is adjacent to a vertex in right hand side ( or left hand side ) of @xmath11 .",
    "assume that @xmath52 is the farthest vertex from @xmath11 in @xmath64 having this property . since @xmath52 is the farthest vertex from @xmath11 with the described property and @xmath5 is an outerplanar graph",
    ", @xmath162 is a cut set of @xmath5 which contradicts with the fact that , there is no vertex in @xmath64 that forms a cut set along with @xmath10 for @xmath5 .    combining lemmas [ lemma1 ] , [ lemma2 ] and [ lemma3 ] along with the fact that in the proof of all these three lemmas forces are performed along the covering paths , we have the following .    [ pzfs of double path ]",
    "let @xmath5 be a double path with covering paths @xmath63 and @xmath64 .",
    "then for any vertex @xmath11 in @xmath63 , there is always another vertex @xmath10 in @xmath64 such that @xmath78 is a positive zero forcing set for @xmath5 .",
    "moreover there is a positive zero forcing process in which the two paths @xmath63 and @xmath64 are a minimal set of forcing trees in @xmath5 .",
    "the following result is a consequence of corollary  [ pzfs of double path ] .",
    "[ pzfs of double tree ]",
    "let @xmath5 be a double tree with covering trees @xmath163 and @xmath164 .",
    "then for any vertex @xmath11 in @xmath163 , there is always another vertex @xmath10 in @xmath164 such that @xmath78 is a positive zero forcing set for @xmath5 .",
    "moreover @xmath165 coincides with a minimal collection of forcing trees in @xmath5 .",
    "in @xcite it is shown that the maximum positive semi - definite nullity is equal to the tree cover number for any outerplanar graph .",
    "since the positive zero forcing number is an upper bound on the maximum positive semi - definite nullity , this implies that @xmath166 holds for any outerplanar graph .",
    "this result was shown to be true in @xcite and @xcite ( where the proof is generalized to 2-trees ) , in this section we give a different proof of this fact that does not rely on schur - complements or orthogonal removal . moreover ,",
    "we show that any minimum tree covering of an outerplanar graph coincides with a minimum collection of zero forcing trees .    in a fixed tree covering of a graph , two trees , @xmath163 and @xmath164 ,",
    "are said to be _ adjacent _ if there is at least one edge @xmath167 such that @xmath168 and @xmath169 .",
    "a tree is called _ pendant _ if it is adjacent to only one other tree from this given tree covering .    throughout this section",
    ", @xmath5 will be an outerplanar graph with a planar embedding in which all the vertices are on the same face .",
    "an edge of @xmath5 is called _",
    "outer _ if it lies on the face containing all of the vertices ; it an edge is not outer , then it is called _",
    "inner_. further , let @xmath170 be a minimal tree covering for @xmath5 .",
    "define @xmath171 to be the graph whose vertices correspond to the trees in @xmath170 and two vertices in @xmath171 are adjacent if there is an outer edge between the corresponding trees in the graph @xmath5 .",
    "two trees of @xmath170 are called _ consecutive _ , if their corresponding vertices in @xmath171 are adjacent vertices each of degree two .",
    "[ consecutive trees ] let @xmath5 be an outerplanar graph and @xmath170 a minimum tree covering for @xmath5 .",
    "if there is no pendant tree in @xmath170 , then there are at least one pair of consecutive trees in @xmath170 .",
    "assume that @xmath170 is a minimum tree covering for @xmath5 in which there is no pendant tree .",
    "then , two cases are possible :    * case 1 .",
    "* there is no tree in @xmath170 with at least one of the inner edges of @xmath5 in its edge set ( see figure  [ fig_for_h_t ] for an example of such a graph ) .",
    "therefore @xmath171 is a cycle .",
    "accordingly , any adjacent pair of trees in @xmath170 are consecutive .        * case 2 .",
    "* there is at least one tree in @xmath170 that has an inner edge of @xmath5 in its edge set ( figure  [ fig_for_h_t_2 ] gives an example of such a graph ) .",
    "is a forcing tree with an inner edge in its edge set ]    the idea in this case is that we will select `` left - most '' such inner edge of @xmath5 .",
    "then the subgraph induced by this edge , and all the vertices to the left of the edge , form an outerplanar graph in which no tree includes an inner edge of @xmath5 . in case 1 , we showed that such a subgraph will have a consecutive pair of trees , and thus so will @xmath5 .",
    "first , let @xmath172 be the set of all vertices which are the end - points of an inner edge of @xmath5 that is also included in the edge set of a tree in @xmath170 .",
    "second , note that any inner edge @xmath173 of @xmath5 partitions the plane into two parts and , consequently , partitions the set of vertices of @xmath174 into two subsets @xmath175 and @xmath176 . since @xmath5 is outerplanar and finite , there exists an inner edge , @xmath177 in @xmath172 such that at least one of @xmath175 or @xmath176 does not contain any of the vertices in @xmath172 .",
    "we will assume that @xmath175 is the vertex set that is disjoint from @xmath172 .",
    "the subgraph of @xmath5 induced by the vertices @xmath178 is an outerplanar graph ; call this @xmath121 . the trees in @xmath170 that intersect with @xmath121 form a minimal tree covering of @xmath121 , which we will call @xmath179",
    ". none of the trees in @xmath179 can include an inner edge of @xmath121 ( this follows as there are no vertices that are both in @xmath121 and in @xmath172 ) . by case 1",
    ", there is a pair of adjacent trees in @xmath179 and therefore there is at least one pair of consecutive trees in @xmath170 .",
    "the following theorem shows that for any outerplanar graph , it is possible to find a minimal tree covering that has a pendant tree ; this plays a key role in the proof of the fact that outerplanar graphs satisfy @xmath141 .    [ pendant tree ]",
    "let @xmath5 be an outerplanar graph .",
    "then there is a minimum tree covering for @xmath5 in which there is a pendant tree .",
    "assume that @xmath170 is a minimum tree covering for @xmath5 in which there is no pendant tree .",
    "we use theorem  [ consecutive trees ] to construct a new tree covering @xmath180 of @xmath170 with @xmath181 in which there is a pendant tree .    by theorem  [ consecutive trees ]",
    "there are two trees @xmath163 and @xmath164 in @xmath170 , which are consecutive .",
    "let @xmath121 be the outerplanar graph induced by @xmath182 .",
    "there are two outer edges in @xmath121 that have an end - point from each of trees @xmath163 and @xmath164 ( otherwise @xmath183 would be a tree and @xmath170 would not be a minimum tree covering ) .",
    "one of these outer edges of @xmath121 , call it @xmath184 , is an inner edge in @xmath5 ; we will assume that @xmath185 and @xmath186 .",
    "similarly , if @xmath10 has any neighbour in @xmath164 , then @xmath11 has no other neighbours in @xmath163 .",
    "thus we will assume that @xmath11 is the only neighbour of @xmath10 in @xmath164 .",
    "in fact , the subgraph @xmath187 is a forest and exactly one of the trees in the forest has vertices which are adjacent to a vertex in @xmath164 .",
    "call this tree @xmath188 .",
    "define a second new tree by @xmath189[l]{$+$ } \\raisebox{-.75ex}{\\makebox[2ex]{$_{v}$ } } } \\{u , v\\ } \\right ) { \\makebox[0ex][l]{$+$ } \\raisebox{-.75ex}{\\makebox[2ex]{$_{u}$ } } } ( t_1 \\backslash s_1).\\ ] ] by replacing @xmath163 and @xmath164 in @xmath170 with @xmath188 and @xmath190 we can construct a new minimum tree covering for @xmath5 in which @xmath188 is a pendant tree .",
    "a similar argument applies when @xmath10 has another neighbour in @xmath164 .",
    "if neither @xmath10 nor @xmath11 has any other neighbour in @xmath163 and @xmath164 , respectively , then either case mentioned above are applicable .",
    "we now have all the necessary tools to prove the main result of this section .    [",
    "outerplanars satisfy z_+=t ] let @xmath5 be an outerplanar graph",
    ". then @xmath191 moreover , any minimal tree covering of the graph @xmath170 coincides with a collection of forcing trees with @xmath192 .",
    "we prove the claim by induction on the tree cover number and using theorem  [ pendant tree ] .",
    "it is obviously true for @xmath193 .",
    "assume that it is true for any outerplanar graph @xmath26 with @xmath194 .",
    "now let @xmath5 be an outerplanar graph with @xmath195 . by proposition  [ t(g)&z_+(g )",
    "] , we have @xmath196 .",
    "let @xmath197 be a minimum tree covering of @xmath5 .",
    "we first consider the case when @xmath170 contains a pendant tree .",
    "* assume that @xmath163 is a pendant tree and that @xmath164 is the only tree adjacent to @xmath163 .",
    "let @xmath26 be the graph induced by the vertex set @xmath198 , then the induction hypothesis holds , so @xmath199 .",
    "further , @xmath200 are forcing trees in a positive zero forcing process whose initial set of black vertices , @xmath201 , has a vertex from each tree in @xmath202",
    ".    a positive zero forcing process in @xmath5 starting with the black vertices in @xmath201 can proceed as it does in @xmath26 until the first vertex of @xmath203 , say @xmath204 , that is adjacent to some vertex in @xmath163 gets forced . since the graph induced by @xmath182 is a double tree , according to corollary [ pzfs of double tree ]",
    ", the vertex @xmath204 determines a vertex @xmath205 in @xmath163 such that @xmath206 is a positive zero forcing set for the subgraph induced by @xmath207 .",
    "since the induction hypothesis holds for this subgraph , the tree @xmath164 is a forcing tree in this subgraph as well .",
    "thus the vertices of @xmath164 get forced in the same order as they were forced in @xmath26 .",
    "therefore we can complete the colouring of @xmath5 by adding the vertex @xmath205 to the initial set of black vertices .",
    "thus , @xmath208 is a positive zero forcing set of @xmath5 with @xmath209 as the forcing trees in this positive zero forcing process .",
    "thus , @xmath210 .    * case 2 . *",
    "if @xmath170 does not contain a pendant tree , then by theorem  [ pendant tree ] , it is possible to build a new tree covering that does have a pendant tree . by case 1 , this new tree covering has exactly @xmath96 trees and the trees of this new tree covering are forcing trees .",
    "now we need to show that the original minimal tree covering of the graph @xmath5 also coincides with a collection of forcing trees associated with a positive zero forcing set of @xmath5 .",
    "we will assume that @xmath163 and @xmath164 are a pair of consecutive trees in @xmath170 ( from theorem  [ consecutive trees ] we know that such a pair exists ) .",
    "using the same notation as in theorem  [ pendant tree ] we assume that @xmath211 has a neighbour , other than @xmath10 , in @xmath163 ( the other cases are similar ) . in the procedure of constructing a pendant tree in the minimal tree covering of @xmath5 , the pair of consecutive trees @xmath163 and @xmath164 were modified to obtain two new trees called @xmath188 and @xmath190 .",
    "the tree @xmath188 is pendant and only adjacent to the tree @xmath190 in the new minimal tree covering .",
    "let @xmath212 and define @xmath213 we will use a similar decomposition of @xmath164 . let @xmath214 be the set of all the trees in the forest @xmath215 that have a vertex which is adjacent to some vertex in @xmath216 . define @xmath217 .",
    "let @xmath201 be a positive zero forcing set for @xmath5 for which @xmath218 is a set of zero forcing trees .",
    "assume that @xmath219 and @xmath220 are the two vertices in @xmath221 from the trees @xmath188 and @xmath190 ( from case 1 such the zero forcing set must have two such vertices ) .",
    "we will consider two cases , the first is when @xmath204 is a vertex in @xmath164 and second is when @xmath222 .",
    "in the first case @xmath223 and @xmath224 .",
    "we claim that @xmath221 is a positive zero forcing set and there is positive zero forcing process in which the trees of @xmath170 are the zero forcing trees . to see this we will describe the positive zero forcing process .",
    "the positive zero forcing process proceeds along the forcing trees @xmath188 and @xmath190 until the vertex @xmath11 is forced .",
    "note that in the original process , @xmath11 must force @xmath10 .",
    "if the vertices @xmath11 and @xmath205 are removed then one of the connected components will include all of @xmath214 and some of the vertices from @xmath216 .",
    "starting with @xmath11 and @xmath205 it is possible to force all the vertices in this component following the trees @xmath214 and the portion of @xmath216 in the component .",
    "once all the vertices of @xmath214 are black , @xmath205 can force the remaining vertices along the tree @xmath216 .",
    "then the vertex in @xmath216 that is adjacent to @xmath10 will force @xmath10",
    ". then @xmath10 can force the remaining vertices of @xmath225 .    in the second case",
    "both @xmath204 and @xmath205 are vertices in @xmath163 .",
    "we claim that @xmath226 is a positive zero forcing set and there is positive zero forcing process in which the trees of @xmath170 are the zero forcing trees . just as in the previous case , using @xmath11 and @xmath205 all the vertices of @xmath214 will be forced .",
    "then , starting with @xmath205 , all the vertices for @xmath216 will be forced with @xmath216 the forcing tree .",
    "then the unique vertex in @xmath216 adjacent to @xmath10 will force @xmath10 and the positive zero forcing process will continue along @xmath225 . finally ,",
    "starting with @xmath11 , the vertices along @xmath227 will be forced .",
    "a _ @xmath0-tree _ is constructed inductively by starting with a @xmath228 and at each step a new vertex is added and this vertex is adjacent to exactly @xmath0 vertices in an existing @xmath229 .",
    "a _ partial @xmath0-tree _ is any graph that is the subgraph of a @xmath0-tree . in particular ,",
    "a graph is a partial @xmath76-tree if and only if it does not have a @xmath230 minor ( see @xcite ) .",
    "since outerplanar graphs are exactly the graphs with no @xmath230 and @xmath231 minors ( see @xcite , it is easy to see that every outerplanar graph is a partial @xmath76-tree . in  @xcite it is shown that the proof that the maximum positive semi - definite nullity for outerplanar graphs is equal to the tree cover number from  @xcite , can be extended to include any partial @xmath76-tree . from this",
    "it follows that if @xmath5 is a partial @xmath76-tree , then @xmath144 .    in this section",
    ", we will give a purely graph theoretical version of this result for a subset of @xmath76-trees .",
    "we also try to track the variations between the positive zero forcing number and the tree cover number in this subset of @xmath0-trees with @xmath232 .",
    "this demonstrates that @xmath76-trees are rather special when it comes to comparing @xmath96 and @xmath233 .",
    "we will define a type @xmath0-tree that we call a _ @xmath0-cluster_. these @xmath0-trees are constructed recursively starting with a @xmath234 . at each step a new vertex",
    "is added to the graph and this new vertex is adjacent to exactly @xmath0 of the vertices in @xmath121 . in a general @xmath0-tree",
    "the new vertices are adjacent to any @xmath0-clique in the graph , but in a @xmath0-cluster the new vertices must be adjacent to a @xmath0-clique in @xmath121 . observe that for each vertex @xmath11 not in @xmath121 , there is exactly one vertex in @xmath121 that is not adjacent to it .",
    "if @xmath5 is a @xmath0-cluster , then define @xmath235 to be the set of all distinct @xmath0-cliques @xmath236 with the property that @xmath237 forms a clique of size @xmath74 in @xmath5 , for some @xmath238 .",
    "the size of @xmath235 can be no more than @xmath74 .",
    "[ z_+&t of k - trees ] suppose @xmath5 is a @xmath0-cluster and let @xmath235 be as defined above .    1 .   if @xmath239 , then @xmath240 .",
    "2 .   if @xmath241 , then @xmath242 .",
    "if @xmath243 and @xmath0 is even , then @xmath244 .",
    "if @xmath245 and @xmath0 is even , then @xmath246 .",
    "since the minimum degree of @xmath5 is @xmath0 , it is clear that @xmath247 .",
    "suppose @xmath121 is the initial @xmath228 in the @xmath0-cluster . obviously , the set @xmath248 is a positive zero forcing set for @xmath5 and @xmath249 .    to prove the first statement",
    "suppose @xmath9 is a positive zero forcing set of @xmath5 with @xmath250 .",
    "since @xmath251 , there are three vertices @xmath252 that are adjacent to distinct @xmath0-sets in @xmath121 .",
    "thus any vertex @xmath253 is adjacent to at least two of these vertices .",
    "so no positive zero forcing set can be contained in @xmath248 .",
    "thus there must be a vertex @xmath254 such that @xmath255 .",
    "if @xmath256 has only one white neighbour , then this neighbour must be in @xmath121 and @xmath256 can force it and we return to the first case . if @xmath256 has two or more white neighbours , then no vertex of @xmath9 can perform a force and again we reach a contradiction .    to verify the second statement",
    "observe that if @xmath241 , then there is at least one vertex @xmath257 , that has at most one neighbour @xmath258 .",
    "the set @xmath259 forms a positive zero forcing set . to see this",
    ", first note that after removing this set , all the vertices in @xmath260 are disjoint .",
    "finally , there is one vertex in @xmath248 that is not adjacent to @xmath10 , this vertex can force @xmath11 .    for the third statement",
    "assume @xmath0 is even and @xmath243 . since @xmath228 is a subgraph of @xmath5 , the tree cover number of @xmath5 is no less than @xmath261 .",
    "suppose that @xmath262 is a minimal tree covering for @xmath5 with @xmath263 .",
    "since no tree in @xmath262 can contain more than two vertices of @xmath121 and @xmath264 , each tree in @xmath262 , except one , contains exactly two vertices of @xmath121 .",
    "assume that @xmath163 is the tree that contains only a single vertex of @xmath121 .",
    "the size of @xmath235 is @xmath74 , so for any vertex , @xmath265 , there is a corresponding vertex in @xmath266 which is adjacent to all of the vertices of @xmath121 except @xmath52 . in particular , if @xmath52 is the single vertex of @xmath121 in the tree @xmath163 , then there is a vertex @xmath10 which is adjacent to all vertices in @xmath121 except @xmath52 . since @xmath267 , the vertex @xmath10",
    "can not be covered by extending any of the trees of @xmath262 ( as @xmath10 is adjacent to both vertices in any tree from @xmath262 ) .",
    "this contradicts @xmath262 being a tree covering for @xmath5 .",
    "thus @xmath268    finally we will show that we can construct a tree covering of this size .",
    "let @xmath269 be a minimal tree covering for @xmath121 .",
    "thus @xmath270 and exactly one tree in @xmath269 contains only one vertex ( all other trees contain exactly two vertices ) .",
    "call this tree @xmath271 . extend @xmath133 to include every vertex in @xmath266 that is adjacent to @xmath10 . now",
    "the only vertices in @xmath5 that are not covered by a tree in @xmath269 are the vertices in @xmath266 that are adjacent to every vertex in @xmath121 , except @xmath10 , call these vertices @xmath272 . take any tree in @xmath269 , except @xmath273 .",
    "then this tree will have two vertices , say @xmath206 .",
    "remove this tree from @xmath269 and replace it with the two trees , @xmath274 and @xmath275 .",
    "this gives a tree covering of size @xmath276 .",
    "for the fourth statement , assume @xmath245 and @xmath0 is even .",
    "thus there is a vertex , @xmath257 that is adjacent to all of the vertices in the graph @xmath5 .",
    "let @xmath269 be a tree covering of @xmath121 with @xmath261 trees in which @xmath277 is a covering tree .",
    "then @xmath133 can be extended to cover all the vertices of @xmath278 .",
    "thus @xmath279 .",
    "note that if in theorem  [ z_+&t of k - trees ] we have @xmath280 , then the positive zero forcing number and the tree cover number coincide ( this result is also proved in @xcite ) .",
    "[ k - tree with k odd ] let @xmath5 be a @xmath0-tree with @xmath0 is odd , then @xmath281 .",
    "we prove this by induction on the number of vertices in @xmath5 .",
    "the result is clearly true for @xmath230 ( the smallest @xmath282-tree ) .",
    "assume that the statement is true for all @xmath26 with @xmath283 .",
    "let @xmath5 be a @xmath0-tree with @xmath284 .",
    "let @xmath285 be a vertex of degree @xmath0 ( such a vertex always exists ) . by the induction hypothesis",
    "there exists a tree covering @xmath262 of @xmath286 with exactly @xmath287 trees .",
    "since neighbours of @xmath11 form a @xmath0-clique , any tree in @xmath262 covers at most two of the neighbours of @xmath11 .",
    "moreover , @xmath11 has an odd number of neighbours , thus there is exactly one tree @xmath133 in @xmath262 that covers only one of the neighbours of @xmath11 .",
    "therefore we can extend @xmath133 to cover @xmath11 , and conclude @xmath281 .",
    "recall that a graph is called _ chordal _ if it contains no induced cycles on four or more vertices .",
    "for instance , all @xmath0-trees are examples of chordal graphs . in general",
    "it is known for any chordal graph @xmath5 , that @xmath288 , where @xmath289 denotes the fewest number of cliques needed to cover ( or to include ) all the edges in @xmath5 ( see @xcite ) .",
    "this number , @xmath289 , is often called the _ clique cover number _ of the graph @xmath5 . further inspection of the work in @xcite actually reveals that , in fact , for any chordal graph , @xmath289 is equal to the _ ordered set number _ ( @xmath290 ) of @xmath5 . in @xcite",
    ", it was proved that for any graph @xmath5 , the ordered set number of @xmath5 and the positive zero forcing number of @xmath5 are related and satisfy , @xmath291 . as a consequence",
    ", we have that @xmath292 for any chordal graph @xmath5 , and , in particular , @xmath293 .",
    "so studies of the positive zero forcing number of chordal graphs , including @xmath0-trees , boils down to determining the clique cover number and vice - versa .",
    "in section  [ graphs with z(g)=p(g ) ] we introduced families of graphs for which the zero forcing number and the path cover number coincide . in fact , we showed that for the family of block - cycle graphs this is true .",
    "however , there are additional families for which equality holds between these two parameters . for example , the graph @xmath294 , where @xmath177 is an edge of @xmath230 , has @xmath50 .",
    "it is , therefore , natural to propose characterizing all the graphs @xmath5 for which @xmath50 .    in  @xcite it is conjectured",
    "the result analogous to corollary  [ z+vertexsum ] holds for zero forcing sets ; if this conjecture is confirmed , then there would be a much large family of graphs for which the path number and zero forcing number coincide .",
    "to this end , we state the following problem as a beginning to this study .",
    "[ conj_z&p_vertex_sum ] let @xmath5 and @xmath121 be two graphs , both with an identified vertex @xmath11 , and both satisfy @xmath50 and @xmath295 .",
    "then @xmath296[l]{$+$ } \\raisebox{-.75ex}{\\makebox[2ex]{$_{v}$}}}\\,h)=p(g\\,{\\makebox[0ex][l]{$+$ } \\raisebox{-.75ex}{\\makebox[2ex]{$_{v}$}}}\\,h).\\ ] ]    it is not difficult to verify that in any tree , any minimal path cover coincides with a collection of forcing chains .",
    "we conjecture that this is also the case for the block - cycle graphs ( and refer the reader to ( * ? ? ?",
    "* section 5.2 ) for more details ) .",
    "in general , it is an interesting question if for a graph @xmath5 with @xmath50 , is it true that any minimal path cover of @xmath5 coincides with a collection of forcing chains of @xmath5 ?    in section  [ forcing_trees ] , we proved the equality @xmath297 where @xmath5 is an outerplanar graph .",
    "the structure of a planar embedding of outerplanar graphs was the key point to establishing the equality .",
    "there are many non - outerplanar graphs with a similar structure ; generalizing this structure will lead to discovering more graphs that satisfy @xmath141 . in general , we are interested in characterizing all the graphs @xmath5 for which @xmath143 .",
    "e. almodovar , l. deloss , l. hogben , k. hogenson , k. myrphy , t. peters , c. ramez , c. minimum rank , maximum nullity and zero forcing number , and spreads of these parameters for selected graph families . , 3 : 371392 , 2010 .",
    "f. barioli , w. barrett , s. fallat , h. t. hall , l. hogben , b. shader , p. van den driessche , h. van der holst .",
    "parameters related to tree - width , zero forcing , and maximum nullity of a graph . , 72 : 146 - 177 , 2013 ."
  ],
  "abstract_text": [
    "<S> the zero forcing number and the positive zero forcing number of a graph are two graph parameters that arise from two types of graph colourings . </S>",
    "<S> the zero forcing number is an upper bound on the minimum number of induced paths in the graph , while the positive zero forcing number is an upper bound on the minimum number of induced trees in the graph . </S>",
    "<S> we show that for a block - cycle graph the zero forcing number equals the path cover number . </S>",
    "<S> we also give a purely graph theoretical proof that the positive zero forcing number of any outerplanar graphs equals the tree cover number of the graph . </S>",
    "<S> these ideas are then extended to the setting of @xmath0-trees , where the relationship between the positive zero forcing number and the tree cover number becomes more complex .    </S>",
    "<S> zero forcing number , positive zero forcing number , path cover number , tree cover number </S>"
  ]
}
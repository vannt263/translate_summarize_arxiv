{
  "article_text": [
    "as a generalisation of markov chains , markov decision processes ( mdps ) stemmed from operations research in 1950 s .",
    "now they have been successfully applied in various areas such as economics and finance , manufacturing , control theory , robotics , artificial intelligence and machine learning .",
    "also , effective analysis and resolution techniques for mdps like linear programming have been developed in the last six decades . since vardi @xcite proposed to adopt mdps as a model of concurrent probabilistic programs , mdps",
    "have been widely used in analysis and verification of randomised algorithms and probabilistic programs ( see , for instance , @xcite ) as well as model checking of probabilistic computing systems @xcite .    in this paper",
    "we introduce the notion of quantum markov decision process ( qmdp ) as a model of nondeterministic and concurrent quantum programs .",
    "research on quantum programming has been intensively conducted in the last 18 years since knill @xcite introduced the quantum random access machine model for quantum computing and proposed a set of conventions for writing quantum pseudocode .",
    "the research includes design of quantum programming languages , e.g. qcl @xcite , qgcl @xcite , qpl @xcite and quipper @xcite , semantic models of quantum programs @xcite , and verification of quantum programs @xcite ( we refer the reader to @xcite for basic ideas of quantum programming and an excellent survey on the early works in this area ) . in particular , quantum markov chains were defined in @xcite for modelling sequential quantum programs .",
    "this paper extends quantum markov chains considered in @xcite to qmdps so that we can model nondeterministic and concurrent quantum programs @xcite .",
    "a classical mdp consists of a set @xmath0 of states and a set @xmath1 of actions .",
    "each action @xmath2 is modelled by a probabilistic transition function @xmath3 $ ] with @xmath4 being the probability that the system moves from state @xmath5 to @xmath6 after action @xmath7 .",
    "a mdp allows not only probabilistic choice between the system states as a result of performing an action but also a nondeterministic choice between actions : there may be more than one action enabled on entering a state @xmath5 .",
    "thus , the notion of scheduler was introduced to resolve the nondeterministic choice between the enabled actions .",
    "a scheduler selects the next action according to the previous and current states of the system .",
    "a qmdp is defined as quantum generalisation of mdp with the set @xmath0 of states replaced by a hilbert space @xmath8 which always serves as the state space of a quantum system in physics .",
    "now each action @xmath2 is described by a super - operator @xmath9 in @xmath8 .",
    "super - operators were recognised by physicists as the most general mathematical formalism of physically realisable operations in quantum mechanics @xcite .",
    "they were also adopted as denotational semantics of quantum programs by selinger @xcite and dhont and panangaden @xcite in their pioneering works on quantum programming .",
    "a major conceptual difference between classical mdps and qmdps comes from the notion of scheduler .",
    "the information used by a scheduler in a mdp to select the next action is the state of the system . in the quantum case , however , we choose to introduce a series of measurements at the middle of the evolution of a qmdp and to define a scheduler as a function that selects the next action according to the outcomes of these measurements .",
    "this paper focuses on the aspect of qmdps more related to program analysis and verification , namely reachability analysis . as in the case of classical mdps",
    ", we consider the reachability probability of a subspace @xmath10 of the state hilbert space of a qmdp with a fixed scheduler and the supremum reachability probability of @xmath10 over all schedulers .",
    "although the definition of reachability probabilities in qmdps looks similar to that of classical mdps , their behaviours are very different ; for example , a mdp has an optimal scheduler that can achieve the supremum reachability probability for all initial states .",
    "but it is not the case in a qmdp even for a given initial state .",
    "it is also interesting to observe the difference between the behaviour of qmdps and that of quantum markov chains .",
    "it was proved in @xcite that a quantum markov chain eventually reaches a subspace @xmath10 for any initial state if the ortho - complement @xmath11 of @xmath10 in the state hilbert space @xmath8 contains no bottom strongly connected components ( bsccs ) .",
    "the corresponding notion of bscc in a qmdp is invariant subspace .",
    "however , it is possible that in a qmdp @xmath11 contains no invariant subspaces but for some schedulers , @xmath10 is reached by a probability smaller than @xmath12 .",
    "as indicated in subsection [ ex - qmdp ] , some problems in the analysis of quantum algorithms can be properly formulated as the reachability problem of qmdps .",
    "we believe that it will be inevitable to develop effective techniques for reachability analysis of qmdps with applications in quantum program analysis and verification as quantum algorithm and program design become more and more sophisticated .",
    "the aspects of qmdps more related to decision making and machine learning are left for future research . in the last few years , it has been found that probabilistic programming is very useful in machine learning for describing probabilistic distributions and bayesian inference ( see , for instance , @xcite ) . on the other hand ,",
    "it was realised recently that a major application area of quantum computing might be machine learning and big data analytics .",
    "we expect that qmdps will serve as a bridge between the researches on quantum programming and quantum machine learning .",
    "* _ contribution of the paper _ * : this paper studies ( un)decidability and complexity of reachability analysis for qmdps . in the case of finite - horizon , it is proved that both quantitative reachability and qualitative reachability of qmdps are undecidable . in the case of infinite - horizon , we show that it is exptime - hard to decide whether the supremum reachability probability of a qmdp is @xmath12 , and if it is smaller than @xmath12 , then the supremum reachability probability is uncomputable .",
    "it is further proved that a qmdp has an optimal scheduler for reaching an invariant subspace of its state hilbert space if and only if the ortho - complement of the target subspace contains no invariant subspaces .",
    "this result enables us to develop an algorithm for finding an optimal scheduler .",
    "we also consider the problem whether a qmdp always reach an invariant subspace with probability 1 , no matter what the scheduler is . a connection between this problem and a long - standing open problem - the joint spectral radius problem @xcite - is observed .",
    "* _ related work _ * : before this paper , a very interesting paper by barry , barry and aaronson @xcite was recently posted at http://arxiv .org",
    "/ abs/1406.2858 where the notion of quantum partially observable markov decision process was introduced .",
    "it was proved in @xcite that reachability of a goal state is undecidable in the quantum case but decidable in the classical case .",
    "the undecidability in the quantum case is similar to our theorem [ thm : undebabilityspacefiniteanyinv ] , but they are not the same since we consider reachability of invariant subspaces rather than a single state",
    ". other results in @xcite and ours are unrelated .",
    "* _ organisation of the paper _ * : the rest of this paper is organised as follows .",
    "section [ dex ] gives formal definitions of qmdps and their reachability probabilities and invariant subspaces .",
    "it also presents several examples to illustrate how can quantum algorithms and protocols be modelled as qmdps and to show some essential differences between qmdps and classical mdps as well as quantum markov chains .",
    "all main results obtained in the paper are stated in section [ statmain ] .",
    "sections [ prfh ] and [ prifh ] are devoted to prove the results for finite - horizon and infinite - horizon , respectively .",
    "a brief conclusion is drawn in section [ concl ] .",
    "for convenience of the reader , we very briefly recall some basic notions in quantum theory with the main aim being fixing notations ; see @xcite for details . in this paper",
    "we always assume that the state hilbert space is @xmath13dimensional , i.e. @xmath14 where @xmath15 is the field of complex numbers .",
    "we use the dirac notation and assume that @xmath16 is an orthonormal basis of @xmath8 .",
    "then we have @xmath17 , a pure state in @xmath8 can be written as @xmath18 with @xmath19 , and a mixed state is represented by a density matrix in @xmath8 , i.e. a semi - definite positive @xmath20 matrix with trace @xmath12 .",
    "write @xmath21 for the set of all density matrices in @xmath8 .",
    "the identity matrix is denoted @xmath22 .",
    "if a density matrix can be written as @xmath23 , where @xmath24 stands for the transpose conjugate of @xmath25 , then its support is @xmath26 .",
    "the evolution of a closed quantum system is described by a @xmath20 unitary matrix : @xmath27 . a super - operator @xmath28 depicts the dynamics of a system which is realised with noise or interacts with its environment , and",
    "it can always be represented by @xmath29 where all @xmath30 are @xmath20 matrices with @xmath31 and @xmath32 denotes the conjugate transpose of @xmath30 .",
    "the @xmath33 matrix @xmath34 is called the matrix representation of @xmath35 .",
    "a quantum measurement in @xmath8 is described by a set of @xmath20 matrices @xmath36 with @xmath37 , where @xmath38 s denote the possible outcomes . if we perform measurement @xmath39 on a quantum system which is currently in state @xmath40 , then the probability that we get outcome @xmath38 is @xmath41 and the system s after - measurement state is @xmath42 whenever the outcome is @xmath38 .",
    "a measurement @xmath43 is projective if @xmath44 .      in this subsection , we formally define our notions of qmdps and their schedulers .",
    "[ defi : qmdp ] a qmdp is a 4-tuple @xmath45 , where :    * @xmath8 is a d - dimensional hilbert space , called the state space .",
    "the dimension of @xmath8 is also called the dimension of @xmath46 , i.e. @xmath47 . * @xmath1 is a finite set of action names . for each @xmath2",
    ", there is a corresponding super - operator @xmath9 that is used to describe the evolution of the system caused by action @xmath7 .",
    "* @xmath48 is a finite set of quantum measurements .",
    "we write @xmath49 for the set of all possible observations ; that is , @xmath50 intuitively , @xmath51 indicates that we perform the measurement @xmath39 on the system and obtain the outcome @xmath52 .",
    "* @xmath53 is a mapping . for each @xmath2 ( or @xmath54 ) , @xmath55 ( resp .",
    "@xmath56 ) stands for the set of the available actions or measurements after @xmath7 ( resp .",
    "@xmath39 ) is performed . for the trivial case that @xmath57 for all @xmath7",
    ", @xmath58 will be omitted , and the qmdp @xmath59 will be simply written as a triple @xmath60 .    a scheduler for a qmdp @xmath46 is a function @xmath61 for any sequence @xmath62 , @xmath63 indicates the next action or measurement after actions or observations @xmath64 happen .    as pointed out in the introduction , a scheduler in a qmdp",
    "selects the next action based on the outcomes of performed measurements .",
    "actually , in the above definition the performed actions are also recorded as a part of the information for such a selection .",
    "this design decision is motivated by several examples in subsection [ ex - qmdp ] .",
    "we now describe the evolution of a qmdp @xmath59 with an initial state @xmath65 and a scheduler @xmath66 . for simplicity , we write @xmath67 . for each word @xmath68 ,",
    "the state @xmath69 of the qmdp @xmath59 and probability @xmath70 that this state is reached in @xmath59 after sequence @xmath71 of actions or observations are defined by induction on the length of @xmath71 :    * @xmath72 and @xmath73 , where @xmath74 is the empty word . * if @xmath75 , then @xmath76 and @xmath77 .",
    "( note that all the super - operators @xmath9 @xmath78 are assumed to be trace - preserving . ) * if @xmath79 , then @xmath80 and @xmath81    furthermore , for each @xmath82 , we can define the global state of the qmdp @xmath59 at step @xmath83 according to scheduler @xmath66 by @xmath84 for a subspace @xmath10 of @xmath8 , the probability that @xmath10 is reached at step @xmath83 with initial state @xmath40 and scheduler @xmath66 is defined by @xmath85where @xmath86 is the projection onto @xmath10 .      a key notion used in reachability analysis of quantum markov chains",
    "@xcite is bscc .",
    "a counterpart of bscc in qmdps is the notion of ( common ) invariant subspace .",
    "let @xmath10 be a subspace of hilbert space @xmath8 .",
    "we say that @xmath10 is invariant under a super - operator @xmath35 if @xmath87 for all density matrices @xmath40 with @xmath88 .",
    "moreover , @xmath10 is invariant under a measurement @xmath89 if @xmath90 for all @xmath91 and all @xmath40 with @xmath88 .",
    "let @xmath92 be a qmdp and @xmath10 a subspace of @xmath8 .",
    "if @xmath10 is invariant under super - operator @xmath9 for all @xmath2 , and it is invariant under all measurement @xmath54 , then @xmath10 is called an invariant subspace of @xmath59 .    the probability",
    "that an invariant subspace is reached is a non - decreasing function of the number of steps .",
    "[ thm : prinvinc ] let @xmath59 be a qmdp with initial state @xmath40 and @xmath10 an invariant subspace of @xmath59 . then for any scheduler @xmath66 and @xmath82",
    ", we have : @xmath93    induction on @xmath83 by using theorem 1 in @xcite .",
    "the reachability probability of finite - horizon was defined in equation ( [ repr ] ) .",
    "now we define the reachability probability of infinite - horizon .",
    "[ defi : supremum ] let @xmath59 be a qmdp with state hilbert space @xmath8 , @xmath40 an initial state , @xmath66 a scheduler for @xmath59 and @xmath10 a subspace of @xmath8",
    ". then reachability probability of @xmath10 in @xmath59 starting in @xmath40 with scheduler @xmath66 is defined by @xmath94    it is worth noting that , in general , the limit in the above equation does not necessarily exist .",
    "however , we have :    [ lem : invprlim ] if @xmath10 is an invariant subspace of @xmath59 , then for any initial state @xmath40 and any scheduler @xmath66 , the reachability probability @xmath95 always exists .",
    "since @xmath96 is bounded by @xmath12 , the conclusion follows immediately from theorem [ thm : prinvinc ] .",
    "let @xmath59 be a qmdp with state hilbert space @xmath8 , @xmath40 an initial state and @xmath10 a subspace of @xmath8 .",
    "then supremum reachability probability of @xmath10 in @xmath59 starting in @xmath40 is defined by @xmath97 if scheduler @xmath98 satisfies that @xmath99 , then @xmath98 is called the optimal scheduler for the initial state @xmath40 .",
    "it is well - known ( * ? ? ?",
    "* lemma 10.102 ) that there exists a memoryless scheduler @xmath98 that is optimal for all initial states . in the quantum case , however , it is possible that no optimal scheduler exists even for a fixed initial state .",
    "[ exam : diff1 ] consider a quantum markov decision process @xmath100 , where @xmath101 , @xmath102 , @xmath103 and @xmath104 @xmath105 let @xmath106 and @xmath107 .",
    "then @xmath108 for all schedulers @xmath109 .",
    "indeed , if @xmath110 , then @xmath111 .",
    "let @xmath112 be a scheduler and let @xmath113 be the first index such that @xmath114 where @xmath115 .",
    "then @xmath116    one reason for nonexistence of the optimal scheduler is that the current state of a quantum system usually can not be known exactly from the outside , and thus we often have no enough information to choose the next action in a scheduler for a qmdp . in the above example , whence we know the exact state of the system , we can choose an appropriate action to reach the target state : if the state is @xmath117 , we take @xmath7 , and if the state is @xmath118 , we take @xmath119",
    ". however , consider the case where the first action is @xmath7 .",
    "the state of the system will become @xmath120 .",
    "then we do not know it is in @xmath121 or @xmath122 exactly , and we can not decide which action should be taken .",
    "however , the above is not the only reason for nonexistence of the optimal scheduler . as shown in the following example",
    ", it is still possible that a qmdp has no the optimal scheduler when we know exactly its state .",
    "let @xmath123 be a qmdp , @xmath106 an initial state and @xmath124 , where    * @xmath125 ; * @xmath126 and @xmath127 ; * @xmath128 , where @xmath129 @xmath130 , @xmath131 and @xmath132 ; * @xmath133 , where @xmath134 .    since @xmath135 ,",
    "the set @xmath136 is dense on the circle @xmath137 . for any @xmath138",
    ", there exists @xmath83 , such that @xmath139 with @xmath140 .",
    "thus @xmath141 for @xmath142 .",
    "this leads to @xmath143 .",
    "but since @xmath144 for any @xmath52 , there is no optimal scheduler .    in the above example",
    ", we have complete information about the state of the system after @xmath145 : it is always a superposition @xmath146 of @xmath121 , @xmath122 .",
    "but this does not help to derive an optimal scheduler because only @xmath122 can reach the supremum 1 .",
    "it was shown in @xcite that a quantum markov chain will eventually reach a subspace @xmath10 for any initial state if there is no bscc contained in the ortho - complement @xmath11",
    ". the following question asks whether a similar conclusion holds for qmdps .",
    "[ ques1 ] let @xmath59 be a qmdp with state space @xmath8 , @xmath66 a given scheduler for @xmath59 and @xmath10 a subspace of @xmath8 .",
    "suppose that @xmath59 has no invariant subspace contained in @xmath11",
    ". will @xmath59 reach @xmath10 eventually , i.e. @xmath147 for all initial states @xmath40 ?",
    "this question is negatively answered by the following example .",
    "let @xmath100 with @xmath148 , @xmath126 and @xmath102 .",
    "the super - operators corresponding to @xmath149 and @xmath150 are defined as follows : @xmath151 @xmath152 for any density operator @xmath40 .",
    "let @xmath153 .",
    "it is easy to see that @xmath145 and @xmath154 have no common invariant subspace in @xmath11 .",
    "we consider initial state @xmath155 and two schedulers @xmath156 and @xmath157 for some @xmath113 .",
    "then we have @xmath158 , but @xmath159 .      in this subsection ,",
    "we show how can the existing quantum algorithms and communication protocols be seen as examples of qmdp by analysing their structures .",
    "the early quantum algorithms and protocols can be roughly classified into three classes :    1 .",
    "the first class applies a sequence of unitary operators followed by a measurement .",
    "if the outcome of measurement is desirable , the algorithm terminates .",
    "otherwise , the algorithm is re - initialized and executed again ; see figure [ fig : mexam0a ] .",
    "examples include the famous quantum order - finding and factoring algorithms @xcite , the grover search algorithm @xcite , several quantum - walk - based algorithms @xcite and the algorithm for solving the expectation value of some operators of systems of linear equations @xcite .",
    "the second class repeatedly applies an action - measurement loop until success ; see figure [ fig : mexam0b ] .",
    "one example is the routing algorithm based on a many - measurement quantum walk in @xcite .",
    "the structure of the third class looks like a decision tree ; see figure [ fig : mexam2 ] .",
    "examples are quantum teleportation @xcite , one - way quantum computer @xcite . these examples always terminate .",
    "recently , several algorithms have been developed with the structures different from figures [ fig : mexam0 ] and [ fig : mexam2 ] .",
    "for example , a modified quantum factoring algorithm was experimentally realised in @xcite , where in order to reduce the number of necessary entangled qubits , the ancilla ( control ) qubits are recycled .",
    "the structure of this algorithm is shown in figure [ fig : mexamfactoring ] .",
    "another example is the quantum metropolis sampling @xcite .",
    "this algorithm can be used to prepare the ground or thermal state of a quantum system .",
    "the structure of this algorithm for reaching the ground state is shown in figure [ fig : mexammetropolis ] .",
    "it consists of decisions dependent on the history of actions and measurement outcomes as well as repeated loops until success .    as indicated by figures [ fig : mexam0]-[fig :",
    "mexammetropolis ] , all of the algorithms and protocols mentioned above can be seen as qmdps .",
    "here we only elaborate the qmdp model of quantum metropolis sampling .",
    "[ exam : mexammetropolis ] the qmdp @xmath160 for the quantum metropolis algorithm @xcite is defined as follows :    * the state hilbert space is the tensor product of five spaces , @xmath161 , where 1 .",
    "@xmath162 is the hilbert space of the original system , whose ground state is the target .",
    "2 .   @xmath163 and @xmath164 are ancilla spaces , used to represent the energies of the states in @xmath162 , where @xmath163 represents the energy before updating in each round and @xmath164 represents the new energy after updating .",
    "@xmath165 is @xmath166dimensional with its basis states represent the success or failure of eigenstate updating .",
    "@xmath167 is used to implement the probabilistic choice of actions @xmath168 .",
    "* @xmath1 consists of actions in the form of @xmath169 in figure [ fig : mexammetropolis ] , where @xmath170 stands for probabilistic choice of unitary operators",
    "@xmath168 in @xcite .",
    "* @xmath171 consists of measurements in the form of @xmath172 in figure [ fig : mexammetropolis ] .",
    "@xmath49 is the set of observations .",
    "the task of the algorithm is actually to find a scheduler that reaches the ground state in this qmdp .",
    "one such scheduler is illustrated in figure [ fig : mexammetropolis ] .",
    "various generalisations and variants of quantum metropolis sampling have been proposed , e.g. quantum rejection sampling @xcite , quantum - quantum metropolis sampling @xcite and complementing quantum metropolis algorithm @xcite .",
    "an experiment for preparing thermal states was realised @xcite by employing some ideas from quantum metropolis sampling .",
    "the correctness of quantum metropolis algorithm and its variants can actually be seen as a reachability problem for qmdps .",
    "this motivates us to systematically develop techniques for reachability analysis of qmdps .      as one more example of qmdp",
    ", we consider a simple concurrent quantum program consisting of @xmath83 processes .",
    "every process is a quantum loop .",
    "we assume a yes / no measurement @xmath173 in the state hilbert space @xmath8 , which is projective ; that is , both @xmath174 and @xmath175 are projections .",
    "for each @xmath176 , the @xmath177th process behaves as follows : it performs the measurement @xmath39 , if the outcome is @xmath178 , then it executes a unitary transformation @xmath179 and enter the loop again ; if the outcome is @xmath12 then it terminates . note that the loop guard ( termination condition ) of the @xmath83 processes are the same , but their loop bodies , namely unitary transformations @xmath179 , are different .",
    "this concurrent quantum program can be modelled as a qmdp @xmath59 with @xmath180 . for each @xmath181 ,",
    "the action super - operator @xmath182 is defined by @xmath183 for all density matrices @xmath40 .",
    "if @xmath175 is the projection onto the subspace @xmath10 of @xmath8 , then the overall termination probability of the concurrent program with initial state @xmath40 is the supremum reachability @xmath184 the following proposition provides us with a method for computing this termination probability .",
    "we write @xmath185 for the average super - operator of @xmath182 ( @xmath176 ) ; that is , @xmath186 we further define @xmath187 ( it was shown in @xcite that @xmath188 can be computed by jordan decomposition of the matrix representation of @xmath185 . )    1 .",
    "the overall termination probability @xmath189 where @xmath190 and @xmath191 is the projection onto @xmath168 .",
    "2 .   there is a string @xmath192 such that the scheduler @xmath193 can attain the overall termination probability ; that is , @xmath194    let @xmath195 be an invariant subspace included in @xmath11 of @xmath145 .",
    "since @xmath196 , we have @xmath197 . as @xmath198",
    ", we have @xmath199 .",
    "since unitary operators preserves the orthogonality , we have @xmath200 if we write @xmath190 , then @xmath168 is invariant by definition and we have @xmath201 for any scheduler @xmath202 . by theorem",
    "[ thm : suponeschany ] below , there exists @xmath193 such that @xmath203 so , @xmath204",
    "the aim of this paper is to study decidability and complexity of reachability analysis for qmdps . for readability ,",
    "we summarise the main results in this section but postpone their proofs to the sequent sections .",
    "we first examine the case of finite - horizon and consider the following :    [ prob : cutpoint ] given a qmdp @xmath59 , an initial state @xmath40 , a subspace @xmath10 of @xmath8 and @xmath205 , are there a scheduler @xmath66 and a non - negative integer @xmath83 such that @xmath206 where @xmath207 ?    [ thm : cutpoint ] problem [ prob : cutpoint ] is undecidable for any @xmath208 .",
    "now let us consider a qualitative variant of problem [ prob : cutpoint ] .",
    "[ prob : spacefinite ] given a qmdp @xmath59 with the state hilbert space @xmath8 and a subspace @xmath10 of @xmath8 .    1 .",
    "are there a scheduler @xmath66 and an integer @xmath83 such that @xmath209 @xmath210 for all initial states @xmath40 ? 2 .   are there a scheduler @xmath66 and an integer @xmath83 such that @xmath211 @xmath210 for a given initial state @xmath212 ?    the counterpart of problem [ prob : spacefinite].2 for classical mdps can be stated as follows : given a mdp @xmath59 with a finite set @xmath0 of states , an initial state @xmath213 and @xmath214 , decide whether there exists a scheduler @xmath66 and an integer @xmath215 such that for any possible sequence of states @xmath216 under @xmath66 , there exists @xmath217 such that @xmath218 .",
    "the polynomial - time decidability of this problem immediately follows the fact that an optimal scheduler for maximum reachability problem of a mdp can be found in polynomial time @xcite .",
    "the only thing we need to do is to check whether there exists a cycle in all states reachable from @xmath213 in @xmath219 , if @xmath220 .",
    "the same result is true for the counterpart of problem [ prob : spacefinite].1 for classical mdps .",
    "this idea also applies to partially observable mdps with a technique for reducing them to mdps @xcite .",
    "however , undecidability of problem [ prob : spacefinite ] was proved in @xcite if subspace @xmath10 is allowed to be not invariant .",
    "we prove undecidability of the problem for invariant subspace @xmath10 and thus significantly improve the main result of @xcite .",
    "[ thm : undebabilityspacefiniteanyinv ] both problems [ prob : spacefinite].1 and [ prob : spacefinite].2 with @xmath221 and @xmath10 invariant are undecidable .",
    "let us turn to the case of infinite - horizon . if the target subspace @xmath10 is allowed to be not an invariant subspace , then the limit in equation ( [ recp ] ) does not necessarily exists , and we consider the corresponding upper limit :    [ thm : undecbnotinv ] given a qmdp @xmath59 , an initial state @xmath212 and a subspace @xmath10 ( not necessarily invariant of @xmath59 ) , then it is undecidable to determine whether @xmath222    in the remainder of this section , we only consider invariant subspace @xmath10 of @xmath59 , since the supremum reachability probability is not well - defined for those subspaces that are not invariant ( see definition [ defi : supremum ] and lemma [ lem : invprlim ] ) . as for classical mdps ,",
    "a major reachability problem for qmdps is the following :    [ prob : reachprsup ] given a qmdp @xmath59 , an initial state @xmath212 and an invariant subspace @xmath10 .    1 .",
    "decide whether @xmath223 .",
    "2 .   furthermore what is the exact value of @xmath224 ?",
    "[ thm : exphard ] given a qmdp @xmath59 , an initial state @xmath212 and an invariant subspace @xmath10 .    1 .   it is exptime - hard to decide whether @xmath223 even for @xmath59 whose actions are all unitary .",
    "the value of @xmath225 is uncomputable , if @xmath226 .    for a special class of super - operators and measurements operators , theorem [ thm :",
    "exphard].1 can be significantly improved :    [ thm : suponesp ] let @xmath227 be as in theorem [ thm : exphard ] .",
    "we assume :    1 .   for each @xmath2 , @xmath228 with all @xmath229 being of the form @xmath230 ; 2 .   for @xmath231 ,",
    "@xmath232 with all @xmath233 being also of form @xmath230 .",
    "let @xmath234 .",
    "then whether @xmath223 can be decided in time @xmath235 .",
    "a variant of problem [ prob : reachprsup ] is the following :    [ prob : reachpranyrho ] given a qmdp @xmath59 , and an invariant subspace @xmath10 , is there a scheduler @xmath66 , such that @xmath236 for all initial states @xmath40 ?",
    "the difference between this problem and problem [ prob : reachprsup ] is that the initial state is arbitrary in the former but it is fixed in the latter .",
    "it is worth noting that the counterparts of these two problems for classical mdps are similar because they have only a finite number of states which can be checked one by one .",
    "however , the quantum versions are very different due to the fact that the state hilbert space of a qmdp is a continuum .",
    "it is also worth carefully comparing this problem with problem [ ques1 ] : scheduler @xmath66 is given in the latter , whereas we want to find a special scheduler @xmath66 in the former .",
    "[ thm : suponeschany ] for a given qmdp @xmath237 and an invariant subspace @xmath10 of @xmath59 , the following two statements are equivalent :    1 .",
    "there exists a scheduler @xmath66 such that @xmath147 for all initial states @xmath40 ; 2 .",
    "there is no invariant subspace @xmath168 of @xmath59 included in @xmath11 .",
    "furthermore , if there is no invariant subspace @xmath168 of @xmath59 included in @xmath11 , then there exists an optimal finite - memory scheduler @xmath193 with @xmath192 .",
    "based on the above theorem , we develop algorithm [ alg : findascheduler ] for checking existence of the optimal scheduler , of which the correctness and complexity are presented in the next theorem .",
    "* @xmath238 means no such scheduler .",
    "* +    [ thm : lag - correction ]    1 .",
    "algorithm [ alg : findascheduler ] returns @xmath74 if there is no such a scheduler , otherwise it returns @xmath239 such that @xmath193 is an optimal scheduler .",
    "the time complexity of algorithm [ alg : findascheduler ] is @xmath240 , where @xmath241 and @xmath242 .",
    "we now consider another variant of problem [ prob : reachprsup ] , where not only the initial state @xmath40 but also the scheduler @xmath66 can be arbitrary .",
    "[ prob : reachpranyrhoanysch ] given a qmdp @xmath59 , and an invariant subspace @xmath10 , is the reachability probability always 1 , i.e. @xmath236 for all initial states @xmath40 and all schedulers @xmath66 ?    for this problem , we only have an answer in a special case .",
    "[ thm : anyschsuperoperator ] let @xmath59 be a qmdp with @xmath127 and @xmath10 an invariant subspace of @xmath8",
    ". then @xmath243 holds for all schedulers @xmath66 and all initial states @xmath40 if and only if it holds for all initial states and all schedulers of the form @xmath193 with @xmath244 , where @xmath245 is inductively defined as follows :    * @xmath246 and @xmath247 , where @xmath248 . * @xmath249 and @xmath250 for any @xmath251 .",
    "we can develop an algorithm to check whether @xmath252 holds for all initial states and all schedulers @xmath66 . by theorem [ thm : anyschsuperoperator ]",
    ", we only need to examine all schedulers of the form @xmath193 with @xmath244 .",
    "there are totally @xmath253 such schedulers , and for each one , it costs at most @xmath254 arithmetic operations to check the conclusion .",
    "thus , the complexity of the algorithm is @xmath255 .",
    "for the special class of qmdps considered in theorem [ thm : suponesp ] , we can significantly reduce this complexity .",
    "[ thm : anyschsuperoperatorsp ] let @xmath59 , @xmath10 and @xmath215 be as in theorem [ thm : suponesp ] . then whether @xmath243 holds for all schedulers @xmath66 and all initial states @xmath40 can be decided in time @xmath235 .    to conclude this section",
    ", we point out a link from problems [ prob : reachpranyrho ] and [ prob : reachpranyrhoanysch ] to a long - standing problem in matrix analysis and control theory , namely the joint spectral radius problem @xcite . for a given set of square matrices @xmath256",
    ", the discrete linear inclusion of @xmath257 is defined to be the set @xmath258 the set @xmath257 is said to be absolutely asymptotically stable ( aas ) if @xmath259 for any infinite sequences @xmath260 in @xmath257 .",
    "the joint spectral radius and lower spectral radius of @xmath257 are defined as @xmath261 respectively , where for every @xmath262 , @xmath263 @xmath264 it is known @xcite that @xmath257 is aas if and only if the joint spectral radius @xmath265 .",
    "it was shown in @xcite that unless @xmath266 , there are no polynomial - time approximate algorithms for computing @xmath267 .",
    "the problem `` @xmath268 '' and `` @xmath269 '' were proved to be undecidable in @xcite",
    ". however , the problem whether `` @xmath265 '' is decidable is still open although the notion of joint spectral radius was introduced more than fifty years ago @xcite .",
    "[ lem : toradius ] let @xmath59 be a qmdp with @xmath127 and @xmath10 an invariant subspace of @xmath59 . for each @xmath2 ,",
    "let @xmath270 be the matrix representation of @xmath271 , where @xmath272 .",
    "we write @xmath273 .",
    "then :    1 .",
    "@xmath274 if and only if there exists a scheduler @xmath66 such that for any initial state @xmath40 , it holds that @xmath147 .",
    "@xmath275 if and only if for any scheduler @xmath66 and any initial state @xmath40 , it holds that @xmath147 .",
    "in this section , we prove the theorems for finite - horizon stated in subsection [ statfh ] .",
    "we prove this theorem by an easy reduction from the emptiness problem of cut - point languages for probabilistic finite automata ( pfa ) to problem [ prob : cutpoint ] . for a given mo-1gqfa @xmath276 @xcite",
    ", we can construct a qmdp @xmath123 such that @xmath277 , and @xmath278 .",
    "let @xmath279 .",
    "then these exist @xmath66 and @xmath83 such that @xmath280 if and only if there exists a word @xmath281 such that @xmath282 .",
    "since mo-1gqfa can simulate any pfa @xcite and the emptiness problem for pfa is undecidable @xcite , problem [ prob : cutpoint ] is undecidable too .",
    "our proof technique is a reduction from the matrix mortality problem to problem [ prob : spacefinite ] .",
    "the matrix mortality problem can be simply stated as follows :    * given a finite set of matrices @xmath283 , is there any sequence @xmath284 such that @xmath285 ?    it is known ( * ? ? ?",
    "* theorem 3.2 ) that the matrix mortality problem is undecidable for @xmath286 .",
    "we now prove theorem [ thm : undebabilityspacefiniteanyinv ] . for a set @xmath287 of matrices as above",
    ", we construct a qmdp @xmath288 from it as follows :    * the state space is @xmath289 .",
    "* let @xmath290 for each @xmath181 , we construct a super - operator @xmath182 from @xmath291:@xmath292 where @xmath293 and @xmath294 in the defining equation of @xmath295 , @xmath296 is a positive integer such that @xmath297 . *",
    "@xmath127 .",
    "now , it is easy to show that for any state @xmath298 we have @xmath299 therefore , for any initial state @xmath300 it holds that @xmath301 where @xmath302 .",
    "now let @xmath303 .",
    "then @xmath304 since the matrix mortality problem is undecidable for @xmath305 , problem [ prob : spacefinite].1 with @xmath127 and @xmath10 invariant is undecidable for dimension @xmath221 .",
    "note in the above reduction , @xmath306 will always be rational , if @xmath212 is rational .",
    "since for any @xmath307 , @xmath308 holds if and only if @xmath309 , we only compute the upper left corner and leave @xmath310 as a symbol in the lower right corner when computing @xmath311 .",
    "( there are at most @xmath312 @xmath310 s . )",
    "thus this reduction does not employ any operation on irrational numbers .",
    "the reduction still works if we fix the initial state @xmath212 to be @xmath313 , which is one special case of problem [ prob : spacefinite].2 .",
    "therefore problem [ prob : spacefinite].2 is undecidable too .",
    "in this section , we prove the theorems for infinite - horizon stated in subsection [ statih ] .      this theorem can be proved by reduction from the value 1 problem of probabilistic automata on finite words in @xcite .",
    "the value 1 problem asks whether @xmath314 for a probabilistic finite automaton , where @xmath315 is the initial state , @xmath316 is the set of accept states and @xmath71 is a finite word over the input symbols @xmath257 .",
    "we can reduce this automaton to a qmdp with @xmath127 , @xmath277 , @xmath317 and @xmath318 .",
    "the reduction technique is the similar as in the proof of theorem [ thm : cutpoint ] .",
    "thus we have @xmath319 is undecidable . since @xmath127 ,",
    "all schedulers are of form @xmath193 or @xmath320 .",
    "therefore equation is equivalent to @xmath321 this completes the proof .",
    "we prove part 1 of the theorem by a reduction from an exptime - complete game in @xcite to the problem of deciding whether @xmath223 .",
    "some ideas are similar to those used in @xcite .",
    "* the game is a two - player game on a propositional formula @xmath322 in the conjunctive normal form ( cnf ) .",
    "player 1(resp .",
    "2 ) changes _ at most one _ variable in x ( resp .",
    "y ) at each move , alternately .",
    "once @xmath316 becomes _ true _ , player 1 wins .",
    "it is known @xcite that the following problem is exptime - complete : given an input string @xmath71 encoding a position of this game , decide whether play 1 has a strategy to win definitely , where a position is a tuple @xmath323 , where @xmath324 denotes the current player , @xmath316 is a formula , and @xmath7 is an assignment .",
    "now we start to construct the reduction .",
    "let @xmath325 , @xmath326 , @xmath327 and @xmath328 , where @xmath329 , and @xmath330 is one of @xmath331 for some @xmath332 .",
    "we define a qmdp as follows :    * state space*. the state space @xmath333 , where @xmath334 , @xmath335 , @xmath336 , @xmath337 , where @xmath338 .",
    "the intuition behind the definition of these spaces is :    * @xmath162 encodes the assignment @xmath7 ; * @xmath339 is the work space for clauses ; * @xmath340 is the work space for the formula ; * @xmath341 encodes the randomness of player 2 s choice .    *",
    "initial state*. the initial state is @xmath342 @xmath343 .",
    "we will see that the state of the system can always be represented in such a separable form during the computation of this qmdp .",
    "* @xmath344 : unitary operators for modelling actions by player 1*. since player 1 can change at most 1 valuable , there are @xmath345 choices / actions :    * do nothing : this can be described by the identity operator @xmath22 ; * change the @xmath177-th valuable @xmath346 : this can be realised by the not gate @xmath347 operator on @xmath177-th space of @xmath162 , i.e. , @xmath348 , where @xmath349    all these operators can be represented in this form using space @xmath350 .",
    "* @xmath351 : randomness of player 2 s choice*. first we split the state @xmath352 in @xmath341 into @xmath353 by a unitary @xmath354 then we apply @xmath355 at last , we apply a measurement @xmath356 , where @xmath357 these step can be encoded in space @xmath358 .    *",
    "@xmath359 : checking the formula*. this can be done by the following steps :    1 .",
    "first , we check each clause .",
    "a clause @xmath329 is checked via each of its literals .",
    "for instance , if @xmath330 is @xmath360 , we apply @xmath361 where @xmath362 is the shift operator on subspace @xmath363 .",
    "the case of @xmath330 being @xmath364 is similar .",
    "this step means that @xmath330 is true , and we shift one level in @xmath363 .",
    "2 .   second , we compute the value of the whole formula .",
    "this is similar the first step .",
    "if the state is @xmath363 is shifted at least once ; that is , it is not @xmath352 , then we shift @xmath340 once .",
    "third , we take a projective measurement @xmath365 on @xmath340 , where @xmath366 represents the fact that all @xmath367 clauses are true , i.e. @xmath316 is true , and @xmath368 indicates that @xmath316 is false . if the outcome is @xmath12 , we terminate .",
    "4 .   forth",
    ", we undo the first two steps if the result is false .",
    "let @xmath369 denote the unitary operator of the first two steps .",
    "if the projective measurement gives result @xmath178 , the state remains unchanged because of the separable form of the initial state .",
    "thus we can apply @xmath370 to undo @xmath369 .",
    "the above four steps can be represented in space @xmath371 .",
    "* schedulers*. if the input @xmath372 , i.e. player 1 first moves , then we execute sequence @xmath373 of steps ; otherwise @xmath374 .",
    "this is realised by the mapping @xmath58 in definition [ defi : qmdp ] .",
    "the decision is made in step @xmath344 ( player 1 s turn ) .",
    "* target and reachability probability*. the target is to reach the outcome @xmath12 ; that is , @xmath175 appears in @xmath359 . because of the separable form of the initial state , the state of the system is of the form @xmath375 after each step .",
    "thus any step can be computed in polynomial time of @xmath376 .",
    "therefore , this is a polynomial time reduction .",
    "furthermore , it is easy to see that player 1 has a forced win  strategy if and only if there is a scheduler ( for decisions in step @xmath344 ) with reachability probability is 1 .    _",
    "remark _ : the target space @xmath10 may not be invariant .",
    "but we can easily modify the space @xmath340 so that @xmath10 becomes invariant .",
    "what we need to do is :    * extend @xmath340 to @xmath377 level space ; * change @xmath175 to @xmath378 , and add @xmath379 ; * make all unitary operators to be a controlled operator by @xmath340 .",
    "after the modification , the system state remains unchanged in each decision branching unless it reaches the target .",
    "we now turn to prove part 2 of the theorem ; that is , @xmath225 is uncomputable .",
    "this can be done simply by a reduction from probabilistic automata on infinite words . in @xcite",
    ", it was shown that the following quantitative value problem is undecidable : for any @xmath138 , does there exist a word @xmath71 such that the reachability probability in acceptance absorbing automata is greater than @xmath380 , for a given rational number @xmath381 .",
    "we reduce this problem to the supremum reachability problem for qmdps .",
    "the reduction technique is similar to the proofs of theorems [ thm : cutpoint ] and [ thm : undecbnotinv ] .",
    "since the automata are acceptance absorbing , @xmath10 is invariant .",
    "thus , it is undecidable whether there exists @xmath320 , such that @xmath382 .",
    "since this is equivalent to decide @xmath383 , we complete the proof .      by the assumption",
    ", @xmath9 can be written as @xmath384 @xmath385 , where @xmath386 . then for any state @xmath40 , we have @xmath387 for some @xmath388 .",
    "define @xmath389 .",
    "it is easy to see that there are at most @xmath390 different @xmath391 s ranging over all @xmath40 for an given @xmath7 .",
    "then the total number of @xmath391 s with all actions @xmath7 is at most @xmath392 .",
    "similarly , we define @xmath393 .",
    "if probability @xmath394 , then @xmath395 @xmath396 .",
    "otherwise it equals @xmath397 .",
    "the total number of @xmath398 s is at most @xmath399 .",
    "thus there are at most @xmath400 possible different supports of resulting states .",
    "let @xmath401 to be the set of all these supports .",
    "now we reduce this problem to the supremum-1 reachability problem of a classical markov decision process @xmath402 :    * each state corresponds to a possible support , i.e. @xmath403 ; * @xmath404 ; * @xmath405 ; * for each @xmath2 , the transition function @xmath406 maps @xmath407 to @xmath408 with probability 1 , where @xmath409 ; * for each @xmath231 , @xmath406 maps @xmath407 to @xmath408 with probability @xmath410 , where @xmath411 and @xmath412 is the number of elements in this set ; * the target states @xmath413 .    for this classical markov decision process , it is known @xcite that there is an optimal memoryless scheduler @xmath98 such that @xmath414 if @xmath415 , then @xmath98 can be converted to a scheduler of @xmath59 , whose decisions are based on supports of states .",
    "we immediately have @xmath416 .",
    "conversely , if @xmath416 , then for any @xmath138 there exists a history - dependent scheduler @xmath417 convertible to that of @xmath418 such that @xmath419 .",
    "thus @xmath415 .",
    "this completes the reduction .",
    "the proof is finished by the fact from @xcite that the maximum reachability of a classical mdp can be solved in polynomial time of the size of @xmath418 .",
    "we first present several technical lemmas . for a super - operator @xmath35 ,",
    "we define : @xmath420 since @xmath10 is invariant , @xmath421 is obviously a subspace of @xmath11 .    [",
    "lem : xspace ] for any density operator @xmath40 , @xmath422 if and only if @xmath423 .",
    "the `` only if '' part is by definition .",
    "we now prove the `` if '' part . if @xmath423 , then there exist @xmath424 with @xmath425 and @xmath426 , i.e. @xmath427 for some @xmath428 .",
    "thus @xmath429 by definition , we have @xmath430 and @xmath431 . therefore @xmath432 .",
    "this implies @xmath433 .",
    "we now consider a special qmdp @xmath237 without measurements : @xmath434 .",
    "we write @xmath435 for a finite sequence @xmath436 . since @xmath437 can be seen a quantum markov chain , we know from @xcite that @xmath438 if and only if there is no invariant subspace in @xmath11 , where @xmath193 is a periodic scheduler . for any @xmath192 , we simply write @xmath439 for @xmath440 defined by equation ( [ subspace - def ] ) from super - operator @xmath441 .    [",
    "lem : xspaceemptysch]let @xmath193 . if @xmath442 , then @xmath147 for any @xmath40 .",
    "we prove it by contradiction .",
    "suppose @xmath442 and @xmath443 for some @xmath40 .",
    "since @xmath437 is a quantum markov chain , the scheduler @xmath66 is a actually repeated application of @xmath441 , we have from theorems 4 and 6 in @xcite that @xmath443 if and only if there exists a ( non - empty ) bscc @xmath168 of @xmath272 under @xmath441 . corresponding to this bscc",
    ", there exists a minimal fixed point state @xmath40 with @xmath444 and @xmath445 . by definition ,",
    "we get @xmath446 . a contradiction !    [ lem : xssub ] for any @xmath447 and @xmath448",
    ", we have @xmath449 in particular , if @xmath450 , then we have @xmath451 .    for any @xmath40 with @xmath452",
    ", we have @xmath453 .",
    "thus @xmath454 .",
    "this implies @xmath455 , and @xmath456 .",
    "therefore , it holds that @xmath457 .",
    "we now turn to prove the second part . if @xmath450 , then for any @xmath40 with @xmath456 , we have @xmath452 .",
    "this means @xmath458 as @xmath10 is invariant .",
    "now we are ready to prove theorems [ thm : suponeschany ] and [ thm : lag - correction ] .",
    "the proof of ( 1 ) @xmath459 ( 2 ) is easy .",
    "suppose that there is an invariant subspace @xmath168 of @xmath59 included in @xmath11 , then @xmath460 for any @xmath40 in @xmath168 and for any scheduler @xmath66 .",
    "we now prove ( 2 ) @xmath459 ( 1 ) .",
    "for the special case of @xmath102 , assume that there is no invariant subspace @xmath168 of @xmath59 included in @xmath11 .",
    "let @xmath461 and let @xmath462 .",
    "then there exists @xmath192 such that @xmath463 .",
    "we assert that @xmath464 . indeed ,",
    "if @xmath465 , then for each word @xmath466 , we put @xmath448 . by lemma [ lem : xssub ] , we have @xmath467 .",
    "then it follows from the definition of @xmath468 that @xmath469 . as a consequence , @xmath470",
    "this implies @xmath471 . for a super - operator @xmath35 , we write @xmath472 for the transitive closure of @xmath401 under @xmath35 ,",
    "i.e. @xmath473 let @xmath474 where @xmath475 .",
    "we have : @xmath476 it is clear that @xmath477 is invariant under @xmath478 , and thus invariant under any @xmath182 .",
    "so , @xmath477 is an invariant subspace of @xmath59 included in @xmath11 under @xmath59.this contradicts to the assumption .",
    "so , we have @xmath464 , and it follows from lemma [ lem : xspaceemptysch ] that @xmath193 is a optimal scheduler .    for the general case of @xmath479 , we define a super - operator @xmath480 for each @xmath231 .",
    "furthermore , we can construct a new qmdp @xmath481 with @xmath482 and @xmath483 .",
    "then we complete the proof by applying the above argument to @xmath418 .",
    "it is worth noting that the optimal scheduler given in the proof of the above theorem depends on which measurement is chosen in each step but not its outcome .",
    "the design idea of algorithm [ alg : findascheduler ] is to see whether there exists an invariant subspace of @xmath11 under super - operator @xmath484 where @xmath485 .",
    "a crucial part of the algorithm is to compute @xmath439 for each @xmath192 . by definition ,",
    "we have @xmath486 whenever @xmath487",
    ". therefore , @xmath488 where @xmath489 stands for the dual of super - operator @xmath35 , i.e. @xmath490 when @xmath491 .",
    "the correctness of the algorithm is essentially based on the proof of theorem [ thm : suponeschany ] . here",
    "we give a detailed argument .",
    "the algorithm returns @xmath238 at the first two `` return '' statements where @xmath10 is not invariant or there is an invariant subspace of @xmath59 included in @xmath11 .",
    "otherwise @xmath150 is initialized as @xmath492 , and the algorithm enters the `` while '' loop . during the loop ,",
    "@xmath150 must decrease at least 1 . if not , we have found some @xmath5 such that @xmath493 , and for any @xmath494 , it holds that @xmath495 . by lemma [ lem : xssub ]",
    ", we have @xmath496 and @xmath497 for all @xmath498 .",
    "therefore , @xmath499 is an invariant subspace of @xmath59 included in @xmath11 , which is a contradiction .",
    "so , @xmath150 will be @xmath178 finally and @xmath193 is then an optimal scheduler .",
    "we note that the algorithm will run the `` while '' loop at most @xmath500 times and each time it will run the `` for '' loop within the body of the  while \" loop at most @xmath501 times . so the length of @xmath5 will be at most @xmath502 , as it increases at most @xmath500 in each running of the `` while '' loop . in the `` for '' loop , the complexity mainly comes from computing @xmath503 .",
    "it costs at most @xmath504 because the length of @xmath71 ( i.e. the number of matrix multiplications ) is at most @xmath505 and each matrix multiplication costs @xmath506 .",
    "so the complexity of the algorithm is @xmath507 .",
    "we first introduce an auxiliary tool .    for any sequence @xmath192",
    ", its repetition degree @xmath508 is inductively defined as follows :    1 .   if there does not exist @xmath509 and @xmath510 , such that @xmath511 , then @xmath512 .",
    "2 .   in general , @xmath513 .",
    "it is clear that @xmath512 for any @xmath514 .",
    "the following lemma provides a way to estimate the repetition degree @xmath508 .",
    "[ lem : rdlength ] let @xmath59 be a qmdp with @xmath127 and @xmath10 an invariant subspace of @xmath8 .",
    "assume @xmath515 and @xmath516 .",
    "then for any sequence @xmath517 and any @xmath518 , @xmath519 here , @xmath520 is as the same as in theorem [ thm : anyschsuperoperator ] .",
    "we prove it by induction on @xmath521 .",
    "for the case of @xmath522 , it is obvious . for @xmath523 ,",
    "assume @xmath5 is a sequence with length @xmath524 .",
    "since there is only @xmath113 possible actions , there must be two different integers @xmath525 $ ] such that @xmath526 . then by definition , @xmath527 .",
    "now we suppose that for all @xmath528 we have @xmath529 .",
    "assume @xmath530 .",
    "then @xmath5 can be rewritten as @xmath531 , where for @xmath532 $ ] , @xmath533 is a subsequence of length @xmath534 .",
    "since there are only @xmath535 different possible sequences of length @xmath534 , there must be two different integers @xmath536 $ ] such that @xmath537 . by induction assumption ,",
    "we @xmath538 .",
    "therefore , @xmath539 .",
    "this completes the proof .",
    "now we can establish a connection between @xmath508 and @xmath540 .",
    "[ lem : rdxs ] let @xmath59 be a qmdp with @xmath127 and @xmath10 an invariant subspace of @xmath8 . if for any @xmath541 with @xmath542 and @xmath543 , and for any initial state @xmath40 , the scheduler scheduler @xmath544 satisfies @xmath545 then for any sequence @xmath192 with @xmath546 , there exists a non - empty subsequence @xmath498 of @xmath547 such that @xmath548    we prove it by induction on @xmath508 .",
    "\\(1 ) for @xmath5 with @xmath512 and @xmath549 , we have @xmath550 by lemma [ lem : xssub ] .",
    "so , @xmath551 .",
    "\\(2 ) suppose for any @xmath552 with @xmath553 and @xmath554 , there exists a non - empty subsequence @xmath498 of @xmath555 , such that @xmath556 .",
    "now assume @xmath5 is a sequence with @xmath557 and @xmath546 .",
    "if @xmath558 , the claim is true .",
    "otherwise , by definition , there exists a non - empty subsequence @xmath332 of @xmath5 such that @xmath559 and @xmath560 . by the induction assumption",
    ", there exists a non - empty subsequence @xmath561 of @xmath562 such that @xmath563 . here",
    "@xmath564 , since @xmath565 .",
    "therefore , @xmath5 can be rewritten as @xmath566 .",
    "let @xmath567 , @xmath568 and @xmath569 .",
    "now we prove @xmath570 .",
    "since @xmath563 and @xmath571 , we only need to prove @xmath572 .",
    "we do this by refutation .",
    "suppose @xmath573 .",
    "then by lemma [ lem : xssub ] , we have @xmath574 and @xmath575 thus , @xmath576 is an invariant subspace under super - operator @xmath577 . as @xmath578 , by definition , we have @xmath579 for @xmath580 and @xmath581 .",
    "since @xmath546 , we have @xmath582 .",
    "this is a contradiction !",
    "therefore , it must be that @xmath572 , and we complete the proof",
    ".    now we can prove theorems [ thm : anyschsuperoperator ] and [ thm : anyschsuperoperatorsp ] .",
    "we only need to prove the `` if '' part because the only if  is obvious .",
    "assume that @xmath252 holds for any initial state and any scheduler @xmath193 with @xmath546 , where @xmath543 .",
    "by lemma [ lem : rdlength ] , we have @xmath583 for all @xmath5 with @xmath584 .",
    "furthermore , by lemma [ lem : rdxs ] and the assumption , we have @xmath585 for any sequence @xmath5 with @xmath584 .",
    "thus @xmath586 for any @xmath40 . since @xmath587 and @xmath588 where @xmath589 , we have @xmath590 for any @xmath177",
    ". then @xmath591 for any trace-1 operator @xmath40 , where @xmath592 .",
    "consequently , for any scheduler @xmath66 , it holds that @xmath593 where @xmath594 .",
    "this completes the proof by @xmath595 .",
    "this proof is similar to the proof of theorem [ thm : suponesp ] .",
    "we can construct a classical mdp with @xmath596 and check whether @xmath597 for all @xmath407 by noting the following two simple facts :    * for any initial state @xmath40 and any scheduler @xmath66 , the support of the resulting state after first action / measurement will be in @xmath401 ; * for any @xmath598 , we can construct an initial state @xmath599 .",
    "let @xmath59 be a qmdp with state hilbert space @xmath8 and @xmath10 an invariant subspace of @xmath59 .",
    "for each @xmath2 , we define a new super - operator : @xmath600 from @xmath9 , where @xmath272 is the ortho - complement of @xmath10 in @xmath8 and @xmath601 is the projection operator onto @xmath406 . furthermore , let @xmath270 be the matrix representation of @xmath602 .    [",
    "lem : todli ] let @xmath59 be a qmdp with @xmath127 and @xmath10 an invariant subspace of @xmath59 .",
    "then :    1 .",
    "the following two statements are equivalent : 1 .",
    "there exists a scheduler @xmath66 such that @xmath147 for all initial states @xmath40 .",
    "there exists @xmath603 such that @xmath604 @xmath605 2 .",
    "the following two statements are equivalent : 1 .   for any scheduler @xmath66 and any initial state @xmath40",
    ", it holds that @xmath147 .",
    "2 .   for any @xmath603",
    ", it holds that",
    "@xmath604 @xmath605    \\1 .",
    "it is obvious that ( b ) @xmath459 ( a ) because @xmath606 and the probability in @xmath406 goes to 0 .",
    "we now prove ( a ) @xmath459 ( b ) .",
    "suppose that @xmath66 is a scheduler required in ( a ) .",
    "let @xmath607 and @xmath608 .",
    "as @xmath127 , @xmath66 is a sequence of actions , i.e. @xmath609 with @xmath610 for all @xmath177 . since @xmath611 and @xmath612 we have @xmath613 moreover , as @xmath147 , we have @xmath614 .",
    "as @xmath615 is a density operator , it follows that @xmath616 .",
    "let @xmath617 .",
    "since @xmath618 is completely positive , we have @xmath619 as @xmath620 for any density operator @xmath40 .",
    "if we use the matrix norm @xmath621 then it holds that @xmath622 when @xmath623 . as a consequence ,",
    "we obtain @xmath624 for any matrix @xmath625 , we have @xmath626 , where @xmath627 and @xmath628 .",
    "furthermore , @xmath629 the first inequality is because @xmath630 and @xmath631 are both positive and their supports are orthogonal .",
    "therefore , we have @xmath632 thus , for the matrix represents @xmath633 of @xmath634 , it holds that @xmath635 , and we complete the proof of part 1 .",
    "we actually proved that for each scheduler @xmath66 and its corresponding sequence @xmath636 , @xmath637 in the proof of part 1 .",
    "hence , the conclusion of part 2 follows immediately .    with the help of the above lemma , we are now able to prove theorem [ lem : toradius ]",
    "if @xmath274 , then by definition , there exists a sequence @xmath638 such that @xmath639 this implies @xmath640 .",
    "conversely , if there exists @xmath638 such that @xmath641 @xmath642 , then we can find @xmath643 with @xmath644 for some @xmath52 .",
    "thus , @xmath645 .    \\2 . by theorem 3.10 in @xcite , we know that @xmath646 is aas if and only if @xmath275 .",
    "together with lemma [ lem : todli ] , it completes the proof .",
    "in this paper , we introduced the notion of quantum markov decision process ( qmdp ) .",
    "several examples were presented to illustrate how can qmpd serve as a formal model in the analysis of nondeterministic and concurrent quantum programs . the ( un)decidability and complexity of a series of reachability problems for qmdps were settled , but several others left unsolved ( the exact complexity of problem [ prob : reachprsup].1 and the general case of problem [ prob : reachpranyrhoanysch ] ) .",
    "developing automatic tools for reachability analysis of qmdps is a research line certainly worth to pursue because these tools can be used in verification and analysis of programs for future quantm computers .",
    "another interesting topic for further studies is applications of qmdps in developing machine learning techniques for quantum physics and control theory of quantum systems .",
    "j. n. tsitsiklis and v. d. blondel . the lyapunov exponent and joint spectral radius of pars of matrices",
    "are hard  when not impossible  to compute and to approximate . _ math .",
    "control signals systems _ , 10(1):31 - 40 , 1997 .",
    "l. m. k. vandersypen , m. steffen , g. breyta , c. s. yannoni , m. h. sherwood , and i. l. chuang . experimental realization of shor s quantum factoring algorithm using nuclear magnetic resonance .",
    "_ nature _ , 414:883 - 887 , 2001 ."
  ],
  "abstract_text": [
    "<S> we introduce the notion of quantum markov decision process ( qmdp ) as a semantic model of nondeterministic and concurrent quantum programs . </S>",
    "<S> it is shown by examples that qmdps can be used in analysis of quantum algorithms and protocols . </S>",
    "<S> we study various reachability problems of qmdps both for the finite - horizon and for the infinite - horizon . </S>",
    "<S> the ( un)decidability and complexity of these problems are settled , or their relationships with certain long - standing open problems are clarified . </S>",
    "<S> we also develop an algorithm for finding optimal scheduler that attains the supremum reachability probability .    </S>",
    "<S> algorithms , theory , verification    quantum programming , semantic model , markov decision process , reachability </S>"
  ]
}
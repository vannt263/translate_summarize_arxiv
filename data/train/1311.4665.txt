{
  "article_text": [
    "in this work , we analyze the stretch factor of approximate geodesics computed on triangle meshes or more generally in graphs . in our context , a _ triangle mesh _ represents a discretization of a two - dimensional manifold , possibly with boundary , embedded in @xmath7 for a constant dimension @xmath8 using a set of vertices @xmath9 , edges @xmath10 , and triangular faces @xmath11 .",
    "such a triangle mesh can be viewed as a ( hyper)graph @xmath12 such that each edge is adjacent to one or two triangles and the triangles incident to an arbitrary vertex can be ordered cyclically around that vertex . due to discretization artifacts , the triangle mesh may contain holes , and different parts of the surface may even intersect in the embedding . however , we assume that the graph structure @xmath13 is planar and connected ( see figure  [ fig : mesh ] for an illustration ) . for @xmath14 , this definition of a triangle mesh",
    "is commonly used in geometry processing when analyzing models obtained by scanning real - world objects .",
    "given a connected planar triangle graph @xmath13 with @xmath15 vertices , where every edge has a positive length ( or weight ) , we consider the problem of approximating the _ geodesic _ distances between pairs of vertices in @xmath13 , where distances are measured in the graph theoretic sense . specially , given an integer @xmath2 , our goal is to select a set @xmath16 of @xmath2 vertices of @xmath13 that minimize the _ stretch factor _",
    ", defined as the value @xmath17 where the function @xmath18 measures the shortest geodesic distance between two vertices . throughout this paper",
    ", we use for simplicity the notation @xmath19 for @xmath20 .",
    "the problem of approximating geodesic distances on surfaces represented by triangle meshes arises when studying shapes ( usually shapes embedded in @xmath21 or in @xmath22 ) that are isometric , which means that they can be mapped to each other in a way that preserves geodesics .",
    "isometric shapes have been studied extensively recently  @xcite because many shapes , such as human bodies , animals , and cloth , deform in a near - isometric way as a large stretching of the surfaces would cause injury or tearing .     is a triangle mesh , while @xmath23 has a non - triangular face , and @xmath24 is not connected.,width=336 ]    in order to analyze near - isometric shapes , it is commonly required to compute , on each shape , geodesics between many pairs of vertices , and to compare the corresponding geodesics in order to compute the amount of stretching of the surface . consider the problem of computing geodesic distances on a surface represented by a triangle mesh , where distances are measured on the graph induced by the vertices and edges of the triangulation . to solve the _ single - source shortest - path _ ( sssp ) problem on @xmath13 , dijkstra s algorithm  @xcite takes @xmath25 time . to solve the _ all - pairs shortest - path",
    "( apsp ) problem , we can run dijkstra s algorithm starting from each source point , yielding an @xmath26 time algorithm . while there are more efficient methods",
    ", the apsp problem has a trivial @xmath27 lower bound . in practical applications ,",
    "a typical triangle mesh may contain from @xmath28 to @xmath29 vertices and , for such large meshes , it is impractical to use algorithms that take @xmath27 time .    to allow for a reduced complexity , instead of considering the apsp problem , we consider the problem of pre - computing a data structure that allows to efficiently _ approximate _ the distance between _ any _ two points .",
    "we call this the _ any - pair approximate shortest path _ problem in the following .    a commonly used method to solve the any - pair",
    "approximate shortest path problem is to select a set of @xmath2 _ sources _ , solve the sssp problem from each of these @xmath2 sources , and use this information to approximate pairwise geodesic distances . given a pair @xmath0 and @xmath1 of vertices , their shortest distance is approximated as the minimum , over all the @xmath2 sources , of the sum of the distances of @xmath0 and @xmath1 to a source @xmath30 .",
    "this method is used to approximate the intrinsic geometry of shapes  @xcite .",
    "a natural problem is thus to compute an optimal placement of @xmath2 sources that minimizes the stretch factor . we refer to this problem as the _ @xmath2-center path - dilation problem _ and",
    "show that this problem is np - complete ( see theorem  [ thm : hardness ] ) .",
    "a commonly used heuristic for selecting a set of @xmath2 sources is to use _ farthest point sampling _ ( fps )  @xcite , which starts from a random vertex and iteratively adds to @xmath31 a vertex that has the largest geodesic distance to its closest already picked source , until @xmath2 sources are picked .",
    "given @xmath2 sources on a graph @xmath13 , the distance between any two vertices @xmath0 and @xmath1 is approximated as the minimum over all @xmath2 sources , of the distance from @xmath0 to @xmath1 through one of the sources .",
    "fps has been shown to perform well compared to other heuristics for isometry - invariant shape processing in practice  @xcite  ( * ? ? ?",
    "* chapter 3 ) , which suggests that the stretch factor obtained by a fps is small .",
    "however , to the best of our knowledge , no theoretical results are known on the quality of the stretch factor , @xmath3 , obtained by a fps of @xmath2 sources , compared to the minimal stretch factor , @xmath4 , obtained by an optimal choice of @xmath2 sources . in this paper , we prove that @xmath32 where @xmath6 is the ratio of the lengths of the longest and the shortest edges of @xmath13 ( see theorem  [ thm : ratio ] ) . note that this bound holds for any arbitrary graph .",
    "it should further be observed that if the ratio @xmath6 is large , @xmath3 can be much larger than the optimal stretch factor @xmath4 but , on the other hand , @xmath4 is likely to be large as well .",
    "indeed , if at least @xmath33 edges are arbitrarily small and are not `` too close '' to each other , @xmath4 can be made arbitrarily large ; this can be seen by considering the pairs of vertices defined by those small edges .    after discussing related work in section  [ sec : related_work ] ,",
    "we prove our two main results , theorems  [ thm : ratio ] and [ thm : hardness ] in sections  [ sec : ratio ] and [ sec : hardness ] , respectively .",
    "computing geodesics on polyhedral surfaces is a well - studied problem for which we refer to the recent survey by bose et al .",
    "@xcite . in this paper",
    ", we restrict geodesics to be shortest paths along edges of the underlying graph .",
    "the fps algorithm has been used for a variety of isometry - invariant surface processing tasks .",
    "the algorithm was first introduced for graph clustering  @xcite , and later independently developed for 2d images  @xcite and extended to 3d meshes  @xcite .",
    "ben azouz et al .",
    "@xcite and giard and macq  @xcite used this sampling strategy to efficiently compute approximate geodesic distances , elad and kimmel  @xcite and mmoli and sapiro  @xcite used fps in the context of shape recognition .",
    "bronstein et al .",
    "@xcite and wuhrer et al .",
    "@xcite used fps to efficiently compute point - to - point correspondences between surfaces .",
    "while it has been shown experimentally that fps is a good heuristic for isometry - invariant surface processing tasks  @xcite , to the best of our knowledge , the worst - case stretch of the geodesics has not been analyzed theoretically .",
    "the problem we study is closely related to the @xmath2-center problem , which aims at finding @xmath2 centers ( or sources ) @xmath34 , such that the maximum distance of any point to its closest center is minimized . with the notation defined above , the @xmath2-center problem aims at finding @xmath34 , such that @xmath35 is minimized .",
    "this problem is @xmath36-hard and fps gives a @xmath37-approximation , which means that the @xmath2 centers @xmath30 found using fps have the property that @xmath38  @xcite .    in the context of isometry - invariant shape processing , we are interested in bounding the stretch induced by the approximation rather than ensuring that every point has a close - by source .",
    "a related problem that has been studied in the context of networks by knemann et al .",
    "@xcite is the _ edge - dilation @xmath2-center problem _ , where every point , @xmath0 , is assigned a source , @xmath39 , and the distance between two points @xmath0 and @xmath1 is approximated by the length of the path through @xmath40 and @xmath1 .",
    "the aim is then to find a set of sources that minimizes the worst stretch , and knemann et al .",
    "show that this problem is @xmath36-hard and propose an approximation algorithm to solve the problem .",
    "knemann et al .",
    "@xcite also study a modified version of the above problem , which is similar to our problem .",
    "in particular , they present an algorithm for computing @xmath2 sources and claim that it ensures , for our problem , a stretch factor of @xmath41  ( * ? ? ? * theorem 3 ) for every vertex @xmath42 , the triangle inequality yields the claimed bound . ] ; as before , @xmath4 denotes the minimal stretch factor for the @xmath2-center path - dilation problem .",
    "however , we believe that their proof has gaps . , their algorithm iteratively includes an endpoint of the shortest edge that can not yet be approximated with a stretch of at most @xmath43 until no such edges are left .",
    "if the solution contains at most @xmath2 sources , a solution with stretch @xmath44 has been found .",
    "their algorithm then essentially does a binary search on the optimal stretch factor @xmath4 .",
    "however , this search is done in a continuous interval without stopping criteria . moreover , since it is a priori possible that for any given @xmath45 , their algorithm returns strictly more than @xmath2 sources , and that @xmath4 may not be exactly reachable by dichotomy , we believe that the stretch factor of @xmath41 is not ensured . ]",
    "it should nonetheless be stressed that our result is independent of whether this bound on @xmath46 holds .",
    "indeed , the relevance of our bound of @xmath47 on @xmath3 is to give some theoretical insight on why fps has been used successfully in heuristics for isometry - invariant shape processing .",
    "we start this section with some definitions and notation . we consider a connected graph @xmath13 in which the edges have lengths from a positive and finite interval @xmath48 $ ] , and @xmath6 denotes the ratio @xmath49 .",
    "we require the graph to be connected so that the distance between any two vertices is finite . in this section",
    ", we do not require the graph to satisfy any other criteria , but observe that if it is not planar , the running time of fps will be @xmath50 , where @xmath51 is the number of edges .",
    "given @xmath2 vertices ( sources ) @xmath52 in the graph , let @xmath39 denote the ( or a ) closest source to a vertex @xmath0 and let @xmath53 denote the shortest path length from @xmath0 to @xmath1 through any source @xmath52 , that is @xmath54 .",
    "let @xmath55 be a choice of sources that minimizes the stretch factor @xmath56 .",
    "furthermore , let @xmath57 be a choice of sources that minimizes @xmath58 . in other words ,",
    "the set of @xmath59 is an optimal solution to @xmath2-center path - dilation problem and the set of @xmath34 is an optimal solution to the @xmath2-center problem .    in this section , we prove the following theorem .",
    "[ thm : ratio ] let @xmath60 be a set of sources returned by the fps algorithm on a connected graph @xmath13 with edge lengths of ratio at most @xmath6 .",
    "then @xmath61    in order to prove this theorem , we first show a somewhat surprising property that , for any set of sources , the stretch factor @xmath62 is realized when @xmath0 and @xmath1 are adjacent in the graph ( lemma  [ lem : worst - ratio ] ) .",
    "we use this property to bound this stretch factor in terms of @xmath58 ( lemma  [ lem : tbound ] ) . on the other hand",
    ", we bound the stretch factor of any set of sites in terms of the stretch factor of an optimal set of sources for the @xmath2-center problem ( lemma  [ lem : ubound ] ) .",
    "we then combine these results to prove theorem  [ thm : ratio ] .",
    "[ lem : worst - ratio ] for any sources @xmath52 and any given vertex @xmath1 in @xmath13 , the maximum ratio @xmath63 is realized for some @xmath0 that is adjacent to @xmath1 in @xmath13 .",
    "it follows that the maximum ratio @xmath64 is realized for some @xmath0 and @xmath1 that are adjacent in @xmath13 .    for the sake of contradiction , let @xmath1 be any fixed vertex and let @xmath0 be a non - adjacent vertex that realizes the maximum @xmath63 and such that among all the vertices @xmath65",
    "that realize this maximum , the shortest path from @xmath0 to @xmath1 has the smallest number of edges .",
    "let @xmath66 be the immediate neighbor of @xmath0 along the shortest path from @xmath0 to @xmath1 .",
    "as before , @xmath67 denotes the shortest path length from @xmath66 to @xmath1 through any source @xmath52 ( we use here the notation @xmath67 instead of @xmath68 in order to avoid confusion with @xmath53 ) .",
    "let @xmath69 be the length of the edge @xmath70 ( see figure  [ fig : path ] ) .",
    "we have @xmath71 .",
    "dividing by @xmath72 we get @xmath73    on the other hand , by multiplying @xmath74 by @xmath75 we have @xmath76 and therefore @xmath77 which contradicts our assumption . indeed , either the inequality is strict and @xmath78 was not maximum , or the equality holds and the shortest path from @xmath66 to @xmath1 has fewer edges than the shortest path from @xmath0 to @xmath1 .",
    ".,width=192 ]    the property of the previous lemma that @xmath62 is realized when @xmath0 and @xmath1 are neighbors allows us to bound it as follows .",
    "[ lem : tbound ] for any sources @xmath52 , we have @xmath79    for the upper bound , we have @xmath80 .",
    "therefore , @xmath81 this holds for any vertices @xmath0 and @xmath1 and thus for those that realize the maximum of @xmath78 .",
    "furthermore , @xmath82 and @xmath83 .",
    "hence , @xmath84    for the the lower bound , we have by the triangle inequality that , for any @xmath85 , @xmath86 . adding @xmath87 on both sides , we get @xmath88 . by the definition of @xmath39 , @xmath89 for any @xmath85 , thus @xmath90 .",
    "this holds for any @xmath85 and thus for the @xmath85 such that @xmath91 is minimum , hence @xmath92 . dividing by @xmath93 ,",
    "we get @xmath94 this holds for any @xmath0 and @xmath1 and thus for the vertex @xmath0 that realizes the maximum of @xmath95 ; let @xmath96 denote such vertex .",
    "we then have that @xmath97 .",
    "this holds for any @xmath1 and in particular for the one that realizes @xmath98 . by lemma  [ lem : worst - ratio ] , the maximum is realized for a @xmath1 that is adjacent to @xmath96 in @xmath13 , thus , for such a @xmath1 , @xmath99",
    "it follows that @xmath100    the following lemma bounds the path length between two vertices @xmath101 and @xmath42 passing through @xmath102 in terms of the shortest path between @xmath101 and @xmath42 through any source .",
    "[ lem : ineq1 ] for any sources @xmath52 , and vertices @xmath103 we have @xmath104    denote by @xmath30 the source that realizes the minimum @xmath105 . since by definition @xmath106 , we only have to show that @xmath107 . using the triangle inequality twice",
    ", we have @xmath108 which concludes the proof .",
    "these results allow us to bound the stretch factor corresponding to the sources returned by the fps algorithm with respect to the stretch factor corresponding to an optimal choice of sources for the @xmath2-center problem .",
    "[ lem : ubound ] let @xmath60 be a set of sources returned by the fps algorithm and @xmath57 be an optimal set of sources for the @xmath2-center problem .",
    "then @xmath109    since @xmath52 is a set of sources returned by the fps algorithm , this choice of sources provides a 2-approximation for the @xmath2-center problem compared to an optimal solution @xmath110 ; in other words , @xmath111  @xcite .    by definition",
    ", @xmath53 is the minimum over all ( fixed ) sources @xmath30 of @xmath112 .",
    "thus , @xmath113 .",
    "moreover , by the triangle inequality , @xmath114 thus @xmath115 .",
    "one the other hand , @xmath116 , which is less than or equal to @xmath117 by the 2-approximation property . for clarity , denote by @xmath101 the vertex that realizes the maximum @xmath118 .",
    "we then have @xmath119 .",
    "now , by the triangle inequality , @xmath120 for any vertex @xmath42 . thus @xmath121 which implies , by lemma  [ lem : ineq1 ] , that @xmath122 .",
    "thus , @xmath123 and @xmath124    this inequality holds for any distinct @xmath0 and @xmath1 , and any @xmath42 distinct from @xmath101 ( recall that @xmath101 is fixed ) .",
    "thus it holds for the vertices @xmath0 and @xmath1 that realize @xmath62 and for the @xmath42 that realizes @xmath125 .",
    "such a @xmath42 is a neighbor of @xmath101 by lemma  [ lem : worst - ratio ] , thus it satisfies @xmath126 .",
    "since @xmath82 for any distinct @xmath0 and @xmath1 , and @xmath127 , we get @xmath128    this finally allows us to prove the main theorem .    by lemma  [ lem : ubound ] and using the same notation , we have @xmath109 using the upper bound in lemma  [ lem : tbound ] on @xmath129 , we have @xmath130    by definition , @xmath110 is an optimal set of sources for the @xmath2-center problem , that is @xmath131 and thus @xmath132 .",
    "we now apply the lower bound of lemma  [ lem : tbound ] to @xmath133 which gives @xmath134 and thus @xmath135",
    "in this section we consider the complexity of the @xmath2-center path - dilation problem on triangle graphs , i.e. , computing an optimal set of sources that minimizes the stretch factor .",
    "the following theorem shows that the decision version of this problem is np - complete for triangle graphs .",
    "note that this directly yields the np - completeness for arbitrary graphs ( since proving that the problem is in np is trivial ) .",
    "[ thm : hardness ] given a triangle graph @xmath12 , an integer @xmath2 , and a real value @xmath136 , it is np - complete to determine whether there exists a set @xmath16 of @xmath2 sources such that the stretch factor @xmath137 is at most @xmath136 .",
    "note that the problem is in np since , for any set of @xmath2 sources , the stretch factor can be computed in polynomial time . to show the hardness",
    ", we provide a reduction from the decision problem related to finding a minimum cardinality vertex cover on planar graphs of maximum vertex degree three  @xcite .",
    "the first step of the reduction uses the following well - known result on embedding planar graphs in integer grids  @xcite .",
    "[ lem : embed ] a planar graph @xmath138 with maximum degree @xmath139 can be embedded in the plane using @xmath140 area in such a way that its nodes have integer coordinates and its edges are drawn as polygonal line segments that lie on the integer grid ( i.e , every edge consists of one or more line segments that lie on lines of the form @xmath141 or @xmath142 , where @xmath85 and @xmath143 are integers ) .     and ( b ) the grid - embedding of @xmath144 .",
    "the gadget @xmath145 replacing the edges of @xmath144 and ( d ) the resulting graph @xmath23.,title=\"fig:\",width=192 ]   and ( b ) the grid - embedding of @xmath144 .",
    "the gadget @xmath145 replacing the edges of @xmath144 and ( d ) the resulting graph @xmath23.,title=\"fig:\",width=211 ] +   and ( b ) the grid - embedding of @xmath144 .",
    "the gadget @xmath145 replacing the edges of @xmath144 and ( d ) the resulting graph @xmath23.,title=\"fig:\",width=192 ]   and ( b ) the grid - embedding of @xmath144 .",
    "the gadget @xmath145 replacing the edges of @xmath144 and ( d ) the resulting graph @xmath23.,title=\"fig:\",width=211 ]    consider a planar graph @xmath13 with maximum degree 3 , and let @xmath144 be a planar embedding of @xmath13 according to lemma  [ lem : embed ] , to which we have added , on each edge @xmath146 , an _ even _ number of @xmath147 _ auxiliary _ nodes with half - integer coordinates and such that every resulting edge in @xmath144 has length @xmath148 or @xmath149 .",
    "( we consider the half - integer grid so that we can ensure that we add an _ even _ number of auxiliary nodes on every edge of @xmath13 so that every resulting edge in @xmath144 has length at most 1 . ) please refer to figure  [ fig : embed](a , b ) for an illustration .",
    "for an edge @xmath150 , we let @xmath151 denote the path in @xmath144 replacing the edge @xmath152 .",
    "the endpoints of the paths ( i.e. , the nodes that are not auxiliary ) , are called _ regular _ nodes .",
    "finally , let @xmath153 .",
    "we have the following lemma .",
    "[ lem : vc ] @xmath13 has a vertex cover of size @xmath2 if and only if @xmath144 has a vertex cover of size @xmath154 .    any vertex cover @xmath155 of @xmath13 with size @xmath2 can be extended to a vertex cover of size @xmath154 in @xmath144 by including every other auxiliary node on @xmath151 , for each edge @xmath156 .",
    "now let @xmath157 be a vertex cover for @xmath144 of size @xmath158 , and suppose there exists a path , @xmath151 , such that neither @xmath101 nor @xmath42 belongs to @xmath157 .",
    "then at least @xmath159 auxiliary nodes from @xmath151 must belong to @xmath157 in order to cover all the edges of this path .",
    "however , by using only @xmath160 auxiliary nodes from @xmath151 and adding @xmath101 or @xmath42 to @xmath157 , we still have a vertex cover of the same size , which now contains one of the endpoints of @xmath151 .",
    "continuing this way , we can construct a vertex cover @xmath157 of size @xmath154 for @xmath144 , which includes at least one endpoint from each @xmath151 , for all @xmath156 .",
    "therefore , @xmath157 is a vertex cover for @xmath13 , when restricted to the nodes of @xmath13 ( regular nodes ) . since a minimum of @xmath160 auxiliary nodes",
    "are needed to cover any path @xmath151 , @xmath150 ( even if both @xmath101 and @xmath42 belong to the vertex cover ) , the number of regular nodes selected is at most @xmath2 .",
    "this concludes the proof .",
    "finally , we replace each edge in @xmath144 with a copy of the gadget @xmath145 illustrated in figure  [ fig : embed](c ) , and denote the resulting graph by @xmath23 ( see figure  [ fig : embed](d ) ) .",
    "( we note that each copy is scaled , while maintaining the proportions , to match with the length of the edge it replaces . )",
    "consider the graph @xmath23 , constructed as above from a planar graph @xmath13 with maximum degree @xmath161 and with a gadget such that @xmath162 .",
    "the graph @xmath23 can be seen as a union of triangles , and it thus a triangle mesh .",
    "we prove in the following that @xmath13 has a vertex cover of size @xmath2 if and only if @xmath23 has @xmath154 sources such that its stretch factor is at most @xmath136 . hence , the vertex cover problem can be reduced in polynomial time to the problem at hand , which concludes the proof .    we first show that if @xmath13 has a vertex cover of size @xmath2 , then there is a set of @xmath154 sources in @xmath23 whose stretch factor is @xmath136 . if @xmath13 has a vertex cover of size @xmath2 , then @xmath144 has a vertex cover of size @xmath154 by lemma  [ lem : vc ] .",
    "recall that this vertex cover of @xmath144 can be obtained from the vertex cover of @xmath13 by adding every other auxiliary node on each edge of @xmath13 .",
    "let this vertex cover of @xmath154 nodes be the choice of sources in @xmath23 .",
    "consider a pair @xmath0 and @xmath1 of nodes .",
    "we consider three cases :    1 .",
    "@xmath0 and @xmath1 belong to the same gadget ( the same copy of @xmath145 ) .",
    "let @xmath101 , @xmath42 , @xmath163 and @xmath164 denote the nodes of this gadget , as illustrated in figure  [ fig : embed](c ) , and suppose , without loss of generality , that @xmath101 is selected as a source . then , @xmath165 is equal to 1 if @xmath0 or @xmath1 coincides with @xmath101 , it is by definition equal to @xmath136 if @xmath166 , and it is equal to @xmath161 if @xmath167 and @xmath168 or @xmath169 ( see figure  [ fig : gadget2](a ) ) . since @xmath170 by definition of the gadget ,",
    "the maximum of @xmath171 , over all pairs @xmath172 in a gadget , is @xmath136 .",
    "+ .,width=415 ] 2 .",
    "@xmath0 and @xmath1 belong to two adjacent gadgets @xmath173 and @xmath174 .",
    "let @xmath175 denote the nodes of the two gadgets . if the node @xmath176 which belongs to both gadgets is selected as a source then , by symmetry , the analysis of case @xmath148 yields the same bound of @xmath136 .",
    "otherwise , @xmath177 and @xmath178 are sources and , for any two nodes from two different gadgets , the maximum ratio is @xmath37 ( the ratio is 1 if @xmath0 or @xmath1 is one of the sources and the ratio is 2 in the other cases ; see figure  [ fig : gadget2](b ) ) . therefore , again the maximum ratio is at most @xmath136 .",
    "@xmath0 and @xmath1 belong to neither the same gadget nor to two adjacent gadgets . in this case , at least one of the nodes in a shortest path from @xmath0 to @xmath1 is selected as a source , and hence their approximate shortest path equals the geodesic shortest path and @xmath179 .",
    "we thus proved that the stretch factor of @xmath23 , for the selected @xmath154 sources , is @xmath136 .",
    "conversely , we show that if @xmath23 has @xmath154 sources such that its stretch factor is at most @xmath136 , then @xmath13 has a vertex cover of size @xmath2 . every gadget must contain at least a source since , otherwise , the vertices @xmath163 and @xmath164 of a gadget with no source are such that @xmath180 . for every gadget in @xmath23 ,",
    "if vertex @xmath101 or @xmath42 is a source , we select the corresponding vertex in @xmath144 , and if vertex @xmath163 or @xmath164 is a source , we select any endpoint of the edge of @xmath144 corresponding to the gadget .",
    "then , at least one vertex from each edge of the graph @xmath144 is selected .",
    "hence , @xmath144 has a vertex cover of size @xmath154 , which implies that @xmath13 has a vertex cover of size @xmath2 by lemma  [ lem : vc ] .",
    "this completes the proof .",
    "we analyzed the stretch factor @xmath3 of approximate geodesics computed as distances through at least one of a set of @xmath2 sources found using farthest point sampling .",
    "we showed that @xmath3 can be bounded by @xmath181 , where @xmath4 is stretch factor obtained using an optimal placement of the sources and @xmath6 is the ratio of the lengths of the longest and the shortest edges in the graph .",
    "furthermore , we showed that it is np - complete to find such an optimal placement of the sources .",
    "note that in many practical applications @xmath182 , which gives some evidence explaining why farthest point sampling has been used successfully for isometry - invariant surface processing .",
    "this research was initiated at bellairs workshop on geometry and graphs , march 1015 , 2013 .",
    "the authors are grateful to prosenjit bose , vida dujmovic , stefan langerman , and pat morin for organizing the workshop and to the other workshop participants for providing a stimulating working environment ."
  ],
  "abstract_text": [
    "<S> a standard way to approximate the distance between any two vertices @xmath0 and @xmath1 on a mesh is to compute , in the associated graph , a shortest path from @xmath0 to @xmath1 that goes through one of @xmath2 sources , which are well - chosen vertices . precomputing the distance between each of the @xmath2 sources to all vertices of the graph yields an efficient computation of approximate distances between any two vertices . </S>",
    "<S> one standard method for choosing @xmath2 sources , which has been used extensively and successfully for isometry - invariant surface processing , is the so - called _ farthest point sampling _ ( fps ) , which starts with a random vertex as the first source , and iteratively selects the farthest vertex from the already selected sources .    in this paper </S>",
    "<S> , we analyze the stretch factor @xmath3 of approximate geodesics computed using fps , which is the maximum , over all pairs of distinct vertices , of their approximated distance over their geodesic distance in the graph . </S>",
    "<S> we show that @xmath3 can be bounded in terms of the minimal value @xmath4 of the stretch factor obtained using an optimal placement of @xmath2 sources as @xmath5 , where @xmath6 is the ratio of the lengths of the longest and the shortest edges of the graph . </S>",
    "<S> this provides some evidence explaining why farthest point sampling has been used successfully for isometry - invariant shape processing . </S>",
    "<S> furthermore , we show that it is np - complete to find @xmath2 sources that minimize the stretch factor .    </S>",
    "<S> * keywords : * farthest point sampling ; approximate geodesics ; shortest paths ; planar graphs ; approximation algorithms </S>"
  ]
}
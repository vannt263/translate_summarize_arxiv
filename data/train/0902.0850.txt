{
  "article_text": [
    "graph transformation  @xcite is concerned with the manipulation of graphs by means of rules .",
    "similar to chomsky grammars for strings , a graph grammar is made of a set of rules , each having a left and a right hand side ( lhs and rhs ) graphs and an initial host graph , to which rules are applied .",
    "the application of a rule to a host graph is called a derivation step and involves the deletion and addition of nodes and edges according to the rule specification .",
    "roughly , when an occurrence of the rule s lhs is found in the graph , then it can be replaced by the rhs .",
    "graph transformation has been successfully applied in many areas of computer science , for example , to express the valid structure of graphical languages , for the specification of system behaviour , visual programming , visual simulation , picture processing and model transformation ( see  @xcite ) . in particular ,",
    "graph grammars have been used to specify computations on graphs , as well as to define graph languages ( i.e. sets of graphs with certain properties ) , thus being possible to `` translate '' _ static _ properties of graphs such as coloring into equivalent properties of dynamical systems ( grammars ) .    in previous work",
    "@xcite we developed a new approach to the transformation of _ simple _ digraphs .",
    "simple graphs and rules can be represented with boolean matrices and vectors and the rewriting can be expressed using boolean operators only .",
    "one important point of mggs is that , as a difference from other approaches  @xcite , it explicitly represents the rule dynamics ( addition and deletion of elements ) , instead of only the static parts ( pre- and post- conditions ) .",
    "apart from the practical implications , this fact facilitates new theoretical analysis techniques such as for example checking independence of a sequence of arbitrary length and a permutation of it , or obtaining the smallest graph able to fire a sequence .",
    "see  @xcite for a detailed account .",
    "in  @xcite we improved our framework with the introduction of the _ nihilation matrix _ , which makes explicit some implicit information in rules : elements that , if present in the host graph , disable a transformation step .",
    "these are all edges not included in the left hand side , adjacent to nodes deleted by the rule ( which would become dangling ) and edges that are added by the production , as in simple digraphs parallel edges are forbidden . in this paper , we further develop this idea , as it is natural to consider that a production transforms pairs of graphs , a `` positive '' one with elements that must exist ( identified by the lhs ) , and a `` negative '' one , with forbidden elements ( identified by the nihilation matrix ) .",
    "complexity theory  @xcite is concerned with the study of the _ intrinsic complexity _ of computational tasks .",
    "traditionally , it has been studied through abstract devices able to represent the notion of algorithm , such as turing machines or boolean circuits  @xcite .",
    "our proposal is to use mggs instead , as its algebraic nature allows using results from different branches of mathematics such as logics , group theory and boolean algebra .    in this paper",
    "we give a first step in the direction of approaching complexity theory with mggs , by introducing _ monotone complex logic _",
    "similar to complex numbers , a complex formula in mcl contains a certainty and a nihil part , both boolean propositional formulas .",
    "we use mcl terms to encode the `` positive '' part of a simple digraph ( the lhs ) and the elements that can not be found ( e.g. the nihilation matrix ) . using a rational encoding of adjacency matrices",
    ", we can express complex terms referring to simple digraphs into the unit interval of complex numbers @xmath0)$ ] .",
    "interestingly , the set of complex numbers defined by valid mcl terms on simple digraphs is the well - known sierpinski gasket fractal  @xcite .",
    "the rational encoding allows using geometric and analytic concepts , for example , we have defined a * xor*-based norm for mcl terms which can be interpreted as the number of elementary operations needed to transform one digraph into another .",
    "thus , we can use mcl terms to redefine and extend all concepts of mggs . in this paper",
    "we introduce the encoding of productions in both its static and dynamic formulations . in the dynamic formulation of a production ,",
    "the rule dynamics ( element addition and deletion ) are also represented as an mcl term , and thus belong to the sierpinski gasket too .",
    "we also show the generalization of the main mgg concepts , like coherence , compatibility , initial digraphs , image of sequences and g - congruence using mcl .",
    "* paper organization*. section [ sec : characterization ] gives a brief overview of the basic concepts of mggs .",
    "section [ sec : complexlogics ] introduces mcl , used to establish a link between mggs and complex analysis .",
    "section [ sec : numericalrepresentation ] encodes graphs as complex numbers , and a _ scalar _ product , a norm and a notion of distance are introduced .",
    "section [ sec : productionencoding ] encodes productions as complex numbers and completes the link between mggs and complex numbers .",
    "sections [ sec : coherenceandinitialdigraph ] and [ sec : compatibilityandcongruence ] generalize the main sequential results of mggs such as coherence , compatibility , initial digraphs , image of sequences and g - congruence .",
    "finally , sec . [",
    "sec : conclusions ] ends with the conclusions and further research .",
    "in this section we give a very brief overview of some of the basics of mggs , for a detailed account and accesible presentation , the reader is referred to  @xcite .",
    "* graphs and rules .",
    "* we work with simple digraphs , which we represent as @xmath1 where @xmath2 is a boolean matrix for edges ( the graph _ adjacency _ matrix ) and @xmath3 a boolean vector for vertices or nodes .",
    "we explicitly represent the nodes of the graph with a vector because rules may add and delete nodes , and thus we mark the existing nodes with a @xmath4 in the corresponding position of the vector .",
    "although nodes and edges can be assigned a type ( as in  @xcite ) , here we omit it for simplicity .",
    "a production , or rule , @xmath5 is a partial injective function of simple digraphs . using a _",
    "static formulation _",
    ", a rule is represented by two simple digraphs that encode the left and right hand sides .",
    "[ def : static_production ] a production @xmath5 is statically represented as @xmath6 @xmath7 , where @xmath8 stands for edges and @xmath3 for vertices .",
    "a production adds and deletes nodes and edges ; therefore , using a _ dynamic formulation _ , we can encode the rule s pre - condition ( its lhs ) together with matrices and vectors to represent the addition and deletion of edges and nodes .",
    "[ def : dynamic_production ] a production @xmath5 is dynamically represented as @xmath9 @xmath10 , where @xmath11 and @xmath12 are the deletion boolean matrix and vector , @xmath13 and @xmath14 are the addition boolean matrix and vector ( with a 1 in the position where the element is deleted or added respectively ) .",
    "the output of rule @xmath15 is calculated by the boolean formula @xmath16 , which applies to nodes and edges ( the @xmath17 ( * and * ) symbol is usually omitted in formulae ) .",
    "* example . * fig .",
    "[ fig : example_rule ] shows an example rule and its associated matrix representation , in its static ( right upper part ) and dynamic ( right lower part ) formulations.@xmath18    in mggs , we may have to operate graphs of different sizes ( i.e. matrices of different dimensions ) .",
    "an operation called _ completion _  @xcite rearranges rows and columns ( so that the elements that we want to identify match ) and inserts zero rows and columns as needed . for example , if we need to operate with graphs @xmath19 and @xmath20 in fig .",
    "[ fig : example_rule ] , completion adds a third row and column to @xmath21 ( filled with zeros ) as well as a third element ( a zero ) to vector @xmath22 .    * compatibility . *",
    "a graph @xmath23 is compatible if @xmath2 and @xmath3 define a simple digraph , i.e. if there are no dangling edges ( edges incident to nodes that are not present in the graph ) .",
    "a rule is said to be _ compatible _ if its application to a simple digraph yields a simple digraph ( see  @xcite for the conditions ) . a sequence of productions @xmath24 ( where the rule application order is from right to left ) is compatible if the image of @xmath25 is compatible , @xmath26 .    * nihilation matrix .",
    "* in order to consider the elements in the host graph that disable a rule application , rules are extended with a new graph @xmath27 .",
    "is written @xmath28 and @xmath29 is written @xmath30 .",
    "we shall use subindices when dealing with sequences in sec .",
    "[ sec : compatibilityandcongruence ] , hence the change of notation . in the definition of production",
    ", @xmath31 stands for _ left _ and @xmath32 for _ right_. the letters that preceed them in the alphabet ( @xmath27 and @xmath29 ) have been chosen . ]",
    "its associated matrix specifies the two kinds of forbidden edges : those incident to nodes deleted by the rule and any edge added by the rule ( which can not be added twice , since we are dealing with simple digraphs ) . according to the theory developed in @xcite , no extra effort",
    "is needed from the grammar designer to derive the nihilation matrix , as @xmath33 with @xmath34 , where @xmath35 is the tensor product , which sums up the covariant and contravariant parts and multiplies every element of the first vector by the whole second vector  @xcite .",
    "transposition will be represented by @xmath36 .",
    "please note that given an arbitrary lhs @xmath31 , a valid nihilation matrix @xmath27 should satisfy @xmath37 , that is , the lhs and the nihilation matrix should not have common edges .",
    "* example .",
    "* the left of fig .",
    "[ fig : example_nihilation ] shows , in the form of a graph , the nihilation matrix of the rule depicted in fig .  [ fig : example_rule ] .",
    "it includes all edges incident to node @xmath38 that were not explicitly deleted and all edges added by @xmath39 . to its right we show the full formulation of @xmath39 which includes the nihilation matrix.@xmath18    as proved in @xcite ( prop .",
    "7.4.5 ) , the evolution of the nihilation matrix is fixed by the production . if @xmath40 then @xmath41 being @xmath29 the nihilation matrix of the right hand side of the production @xmath15 .",
    "hence , we have that @xmath42 .",
    "notice that @xmath43 in general though it is true that @xmath44 .",
    "* example . *",
    "the right of fig .",
    "[ fig : example_nihilation ] shows the change in the nihilation matrix of @xmath39 when the rule is applied . as node @xmath38",
    "is deleted , no edge is allowed to stem from it .",
    "self - loops from nodes @xmath4 and @xmath45 are deleted by @xmath15 so they can not appear in the resulting graph.@xmath18    in  @xcite we introduced a functional notation for rules inspired by the dirac or bra - ket . ]",
    "notation  @xcite .",
    "thus , we can depict a rule @xmath46 as @xmath47 , splitting the static part ( initial state , @xmath31 ) from the dynamics ( element addition and deletion , @xmath15 ) .",
    "using such formulation , the _ ket _ operators ( i.e. those to the right side of the bra - ket ) can be moved to the _ bra _",
    "( left side ) by using their adjoints . in this work we recast this notation more properly through mcl .    * direct derivation . *",
    "a direct derivation consists on applying a rule @xmath48 to a graph @xmath49 , through a match @xmath50 yielding a graph @xmath51 .",
    "in mggs we use injective matchings , so given @xmath5 and a simple digraph @xmath49 any @xmath52 total injective morphism is a match for @xmath15 in @xmath49 .",
    "the match is one of the ways of _ completing _ @xmath31 in @xmath49 . in mggs",
    "we do not only consider the elements that should be present in the host graph @xmath49 ( those in @xmath31 ) but also those that should not be ( those in the nihilation matrix , @xmath27 ) .",
    "hence two morphisms are sought : @xmath53 and @xmath54 , where @xmath55 is the complement of @xmath49 , which in the simplest case is just its negation ( see  @xcite ) .",
    "[ def : directderivationdef ] given rule @xmath5 and graph @xmath56 as in fig .",
    "[ fig : matches](a ) , @xmath57  with @xmath58  is called a direct derivation with result @xmath59 if the following conditions are fulfilled :    1 .",
    "there exist @xmath60 and @xmath61 total injective morphisms .",
    "2 .   @xmath62 , @xmath63 .",
    "the match @xmath64 induces a completion of @xmath31 in @xmath49 .",
    "matrices @xmath65 and @xmath66 are then completed in the same way to yield @xmath67 and @xmath68 .",
    "the output graph is calculated as @xmath69 .",
    "( 15 , 4.5 )    ( 9,0 )     ( 0,4.5 ) @c=1cm@r=1 cm k_m_k & l^p@[rd]|=_m_l & r@.>[d]^m^*_l + & g@.>[r]^p^ * & h    * remarks . *",
    "the square in fig .  [ fig : matches ] ( a ) is a pushout .",
    "item 2 is needed to ensure that @xmath31 and @xmath27 are matched to the same nodes in @xmath49 .    * example * the right of fig .",
    "[ fig : matches ] depicts a direct derivation example using rule @xmath39 shown in fig .",
    "[ fig : example_rule ] , which is applied to a graph @xmath49 yielding graph @xmath51 . a morphism from the nihilation matrix to the complement of @xmath49 , @xmath70 ,",
    "must also exist for the rule to be applied.@xmath18    * analysis techniques . * in  @xcite we developed some analysis techniques for mggs .",
    "one of our goals was to analyze rule sequences independently of a host graph .",
    "for its analysis , we _ complete _ the sequence by identifying the nodes across rules which are assummed to be mapped to the same node in the host graph ( and thus rearrange the matrices of the rules in the sequences accordingly ) .",
    "once the sequence is completed , our notion of sequence _ coherence _  @xcite allows to know if , for the given identification , the sequence is potentially applicable ( i.e. if no rule _ disturbs _ the application of those following it ) .",
    "given a completed sequence , the minimal initial digraph ( mid ) is the smallest graph that allows applying it .",
    "conversely , the negative initial digraph ( nid ) contains all elements that should not be present in the host graph for the sequence to be applicable .",
    "therefore , the nid is a graph that should be found in @xmath55 for the sequence to be applicable ( i.e. none of its edges can be found in @xmath49 ) .",
    "if the sequence is not completed ( i.e. no overlapping of rules is decided ) , we can give the set of all graphs able to fire such sequence or spoil its application .",
    "other concepts aim at checking sequential independence ( i.e. same result ) between a sequence of rules and a permutation of it .",
    "_ g - congruence _ detects if two sequences ( one permutation of the other ) have the same mid and nid .",
    "it returns two matrices and two vectors , representing two graphs , which are the differences between the mids and nids of each sequence respectively .",
    "thus if zero , the sequences have the same mid and nid .",
    "two coherent and compatible completed sequences that are g - congruent are sequential independent .",
    "all these concepts have been characterized using operators @xmath71 and @xmath72 .",
    "they extend the structure of sequence , as explained in @xcite .",
    "their definition is included here for future reference : @xmath73    productions are the building blocks of sequences and sequences are the basic construction to study graph dynamics .",
    "all these concepts are further studied and generalized in the present contribution .    some other important notions such as application conditions , graph constraints or reachability",
    "are just sketched or not even mentioned and left for further research .",
    "in this section we introduce monotone complex logic ( mcl ) , preliminary monotone complex algebra ( pmca ) and preliminary monotone matrix algebra ( pmma ) . the term `` logic '' in the title",
    "should be understood as in fist - order _ logic _ or propositional _ logic _ ( arguably , `` calculus '' might be more appropriate ) .",
    "it has been called _ complex _ to resemble the similarities with complex numbers and how they are defined out of the real numbers .",
    "_ monotone _ because we are not defining the negation of _ complex terms _ ( see below ) .",
    "monotone complex logic is in our opinion of interest by itself , but it is introduced here due to its usefulness for matrix graph grammars ( mggs ) .",
    "first , it permits a compact reformulation of grammar rules .",
    "second , the numerical representation that will be introduced in def .",
    "[ def : rationalencoding ] establishes a link between graphs in mggs and @xmath74 $ ] , although the operations we are interested in are not addition and multiplication .",
    "also , any production @xmath15 induces the evolution of a pair of graphs @xmath75 .",
    "productions will be reinterpreted by encoding them as complex formulas and representing their actions as a `` hermite product '' .",
    "mcl will allow us to measure the size of graphs via a natural norm . finally , sequential notions of mggs such as independence , initial digraphs , coherence , etcetera , will be thus recasted and extended .    [ def : complexformula ] a _ complex formula _",
    "@xmath76 consists of a _ certainty _ part @xmath77 plus a _ nihil _ part @xmath78 , where @xmath77 and @xmath78 are propositional logic formulas using adjacency matrices as propositional variables . two complex formulas @xmath79 and @xmath80 are equal , @xmath81 , if and only if @xmath82 and @xmath83 .    monotone complex logic is the formal system whose propositional variables are complex formulas with logical connectives @xmath84 .",
    "we will not go further because we are more interested in an algebraic development of the theory .    throughout the present contribution , _ complex formula _ , _",
    "complex term _ and _ boolean complex _ will be used as synonyms .",
    "next , some basic operations on boolean complexes are introduced .",
    "[ def : bascomplexops ] let @xmath76 , @xmath85 and @xmath86 be complex terms .",
    "the following operations are defined componentwise :    * addition : @xmath87 . *",
    "multiplication : @xmath88 . *",
    "conjugation : @xmath89 . *",
    "dot product : @xmath90 .",
    "the notation @xmath91 is used for two reasons .",
    "first , we would like to highlight the similarities with scalar products .",
    "there is however no underlying linear space so this is just a convenient notation .",
    "second , we will see that it coincides with the functional notation introduced in @xcite .",
    "the dot product of two boolean complexes is zero ( _ orthogonal _ ) if and only if any element of the first complex term is included in both the certainty and nihil parts of the second complex term .",
    "otherwise stated , if @xmath85 and @xmath86 , then @xmath92 .",
    "let s say that @xmath93 if @xmath94 , i.e. whenever @xmath77 has a 1 @xmath78 also has a 1 ( graph @xmath77 is _ contained _ in graph @xmath78 ) .",
    "previous identities can be rephrased as @xmath95 , @xmath96 , @xmath97 and @xmath98 .",
    "this is equivalent to @xmath99 .",
    "orthogonality is directly related to the common elements of the certainty and nihil parts .",
    "a particular relevant case is when we consider the dot product of one element @xmath76 with itself . in this case",
    "we get @xmath100 , which is possible if and only if @xmath101 .",
    "we shall come back to this issue .",
    "[ def : complexbooleanalgebra ] the set @xmath102 is a complex formula@xmath103 together with the basic operations introduced in def .",
    "[ def : bascomplexops ] will be known as _",
    "preliminary monotone complex algebra_.    we will get rid of the term `` preliminary '' in def . [ def : mcbl ] , when not only the adjacency matrix is considered but also the vector of nodes that make up a simple digraph .",
    "we introduce a subalgebra of the preliminary monotone complex algebra to be known as _ preliminary monotone matrix algebra _ ( pmma ) .",
    "it is useful due to its relationship with mggs .",
    "[ def : complexspace ] let @xmath104 .",
    "define the equivalence relation @xmath105 and @xmath106 .",
    "then , @xmath107 is the _ preliminary monotone matrix algebra_.    a graph and any of its possible nihilation matrices in mgg do not share any edge ( @xmath37 , refer to @xcite ) .",
    "so when representing the left hand side of a production in mcl , its complex term is made of a digraph in the certainty part and some valid nihilation matrix in the nihil part .",
    "intuitively , pmma is made of the valid complex terms in this sense ( i.e. those that do not share any edge ) .",
    "it is not difficult to check reflexivity , symmetry and transitivity for @xmath108 .",
    "the equivalence relation permits the simplification of those elements that appear in both the certainty and nihil parts ( eliminating non - valid complex terms ) .",
    "a more _ complex - analytical _ representation can be handy in some situations and in fact will be preferred for the rest of the present contribution : @xmath109 .",
    "define one element @xmath110 , that we will name _ nil term _ or _ nihil term _ , with the property @xmath111 , being @xmath110 itself not equal to 1 .",
    "then , the basic operations of def . [ def : bascomplexops ] , following the same notation , can be rewritten : @xmath112 , @xmath113 , @xmath114 and the same for the dot product .",
    "notice that the conjugate of a complex term @xmath115 that consists of certainty part only is @xmath116 .",
    "similarly for one that consists of nihil part alone : @xmath117 .",
    "if @xmath118 then they further reduce to @xmath119 and @xmath120 , respectively , i.e. they are invariant . and @xmath121 .",
    "] also , the multiplication reduces to the standard * and * operation if there are no nihil parts : @xmath122 .",
    "[ def : basicrels ] let @xmath123 and @xmath124 . then ,",
    "@xmath125 , @xmath126 and @xmath127 .",
    "_ proof _ + @xmath128the first identity is fulfilled by any complex term and follows directly from the definition .",
    "the other two need the equivalence relation ( simplification ) , i.e. they hold in @xmath129 but not necessarily in @xmath130 . for the second equation just write down the definition of each side of the identity :",
    "@xmath131 \\vee i \\left [      a_1 \\overline{a}_2 \\vee b_1 \\overline{b}_2 \\vee \\left ( a_1 b_1        \\vee \\overline{a}_2 \\ , \\overline{b}_2 \\right ) \\right ] .",
    "\\nonumber\\end{aligned}\\ ] ]    terms @xmath132 vanish as they appear in both the certainty and nihil parts .",
    "the third identity is proved similarly.@xmath18    notice however that @xmath133 .",
    "it can be checked easily as @xmath134^ * = \\overline{b}_1 \\overline{b}_2 \\vee i\\ , \\overline{a}_1\\overline{a}_2 $ ] but @xmath135 .",
    "this implies that , although @xmath136 , we no longer have _ sesquilineality _ , i.e. it is not _",
    "linear _ in its second component taking into account conjugacy : @xmath137 =    \\left\\langle z , z_1 \\vee z_2 \\right\\rangle \\neq \\left\\langle z , z_1    \\right \\rangle \\vee \\left\\langle z , z_2 \\right \\rangle = z \\left [      \\overline{b}_1 \\overline{b}_2 \\vee i \\ , \\overline{a}_1      \\overline{a}_2 \\right ] .",
    "\\nonumber\\ ] ] in fact the equality @xmath138 takes place if and only if @xmath139 .",
    "this section introduces an application @xmath140 that assigns a complex number in the unit interval @xmath141 \\right)$ ] to any boolean complex .",
    "it is not a homomorphism : neither @xmath142 nor @xmath143 hold .",
    "application @xmath140 provides some geometric intuition .",
    "a _ norm _ and a _ conditional norm _",
    "are defined out of the dot product of def .",
    "[ def : bascomplexops ] .",
    "finally we will define the distance between two complex terms .",
    "[ def : rationalencoding ] let @xmath144 be a simple digraph .",
    "its _ rational encoding _ is given by @xmath145 where @xmath146 and @xmath147 .",
    "it has become customary to represent the lowest integer above @xmath148 as @xmath149 and the biggest integer below @xmath148 as @xmath150 .",
    "these functions are known as _ ceiling _ and _ floor _ , respectively .",
    "the indices @xmath151 and @xmath152 are just the integer quotient and the remainder .",
    "they are a convenient way to visit all the elements of the adjacency matrix ordered by columns .    as the elements of @xmath130 are adjacency matrices we can define @xmath153 . if @xmath154 , then @xmath155 .",
    "analogously , @xmath156",
    ".    * example . * @xmath157 , where @xmath19 is the lhs of @xmath39 in fig .",
    "[ fig : example_rule ] . if @xmath158 \\vee i \\left [ \\begin{array}{cc } 1 & 0 \\\\ 0 & 0 \\end{array } \\right]$ ] then @xmath159 .",
    "subindices indicate the numbering system : base @xmath45 or base @xmath160.@xmath18    the rational encoding is similar to the standard one given in the literature ( which we will call _ natural encoding _ ) .",
    "the main difference is that we use negative powers .",
    "this , in the limit , would make us consider the interval @xmath161 $ ] as the underlying space instead of the natural numbers @xmath162 .    in the present contribution we will deal only with finite graphs .",
    "hence , the codomain of @xmath140 is @xmath163 , in fact only terminal rationals . has a terminating binary numeral ( although other rational numbers recur ) . to fix the notation : a terminal number is @xmath164 while a recurring number is @xmath165 nonetheless , a small digression seems appropriate as at some point in the future we will be interested in the asymptotic behaviour of algorithms and , hence , it will be more convenient to consider the interval @xmath161 $ ] .",
    "note that @xmath166 is the _ symmetric _ element with respect to the @xmath167 operation .",
    "this is the graph with no edges",
    ". it should be also natural to include 1 because it should be the _",
    "neutral _ or _",
    "identity _ element with respect to the @xmath17 operation ( the graph that has any possible edge ) if the assumption @xmath168 was made . however , this assumption is not adequate for mggs .",
    "for example , if we want to consider the graph @xmath169 that only has the self - edge @xmath170 and no other one , and the number of nodes of the graph was countable , we would be tempted to write @xmath171 . but",
    "@xmath172 with the standard operations in @xmath173 .",
    "we would thus be asking for the self - edge @xmath170 to be present and not to be present , according to the interpretation of the certainty and nihil parts in mgg .",
    "seemingly , the archimedean property fails as for graphs there are nontrivial infinitesimals .",
    "this implies for example that any diagonal in fig .",
    "[ fig : mgg_charset ] does not belong to the mgg characteristic set .    throughout the present contribution we may make the following abuse of notation .",
    "let @xmath174 be the adjacency matrix of some simple digraph .",
    "when we make the operation @xmath175 we do not obtain @xmath4 but @xmath176 , which is the matrix with all its elements @xmath4 according to vector @xmath177 , i.e. @xmath178 .",
    "this has a clear relationship with the definition of the nihilation matrix in @xcite .",
    "see the definition of _ conditional norm _",
    "below . also , we can interpret @xmath176 as the characteristic or indicator function of all edges potentially incident to nodes of digraph @xmath174 ( the smallest complete digraph that contains @xmath174 ) .",
    "the notation @xmath179 is also standard .",
    "it is defined @xmath180 if @xmath181 and zero otherwise .",
    "the rational encoding in def .",
    "[ def : rationalencoding ] establishes an injection from the preliminary monotone complex algebra @xmath130 into the complex numbers , may be the graph with two nodes and edges @xmath170 and @xmath182 or @xmath183 , the graph with three nodes and edges @xmath170 and @xmath184 . ] where the certainty part becomes the real part , the nihil part becomes the imaginary part and the nihil term becomes @xmath185 .",
    "figure [ fig : mgg_charset ] represents the preliminary monotone matrix algebra @xmath129 as a proper subset of @xmath173 which is a well known fractal .",
    "[ prop : mggfractal ] the characteristic function of the rational encoding of the preliminary matrix algebra approaches the sierpinski gasket as the number of nodes increases .    _ proof _",
    "+ @xmath128the set corresponds to the zeros of the * and * function ( coloring zeros in black ) .",
    "it is the sierpinski gasket due to the lucas correspondence theorem @xcite ( see also @xcite ) which can be used to compute the binomial coefficient @xmath186 with bitwise operations : @xmath187 .",
    "this tells us that the parity of the function @xmath188 ( this is what the function @xmath189 does ) is the same as that of @xmath190 . in our case",
    "@xmath31 is the abscissa .",
    "its negation just reverts the order ( it is a symmetry ) and does not change the shape of the figure . as commented above in this section",
    ", we do not want the diagonals to belong to the set in the limit.@xmath18    the dot product introduced in sec .",
    "[ sec : complexlogics ] induces a `` norm '' @xmath191 in @xmath130 .",
    "it is not a norm in the sense of linear algebra ( no underlying vector space ) but shares some of its properties and will play a similar role : it will be used as a means to measure the size of a graph .",
    "[ def : norm ] let @xmath192 .",
    "its _ norm _ is the application @xmath193 $ ] defined by @xmath194 the _ conditional norm _ of @xmath195 with respect to @xmath196 is given by @xmath197    the following identities show that the norm ( before applying @xmath140 ) returns what one would expect .",
    "equation is particularly relevant as it states that in mcl the certainty and nihil parts are in some sense mutually exclusive , which together with eq .",
    "suggest the definition of @xmath129 as introduced in sec . [",
    "sec : complexlogics ] . notice that this fits perfectly well with the interpretation of @xmath31 and @xmath27 given in @xcite .",
    "@xmath198    the dot product of one element with itself gives rise to the following useful identity : @xmath199    equation admits two readings . in first place , it tells how to factorize one of the basic boolean operations , * xor*. secondly , and more relevant to us , it justifies the use of * xor * as a norm for complex terms .. ] besides , it follows directly from the definition that @xmath200 and @xmath201 .",
    "the conditional norm @xmath202 _ reduces _ the total space to graph @xmath196 . if @xmath203 and @xmath204 , after some simple algebraic operations @xmath205 is obtained .",
    "if we further have that @xmath206 , then @xmath207 in particular this implies that @xmath208 is a subgraph of @xmath195 .",
    "the following proposition highlights the similarities between norms in linear spaces and the one introduced in def .",
    "[ def : norm ] .",
    "[ prop : normprops ] let @xmath206 and @xmath209 .",
    "then , for norms and conditional norms we have that @xmath210    _ proof _ + @xmath128identity is derived from .",
    "some simple manipulations prove ( where * and * is performed bitwise ) .",
    "inequality is not difficult either where , again , * or * on the right hand side is applied bitwise : @xmath211 comparing term by term , the inequality follows .",
    "for example , there must be at least the same numbers of 1 s in @xmath212 than in @xmath213 , so @xmath214.@xmath18    the * xor * operation @xmath215 is the number of distinct elements in @xmath216 and @xmath217 .",
    "the number of ones that appear in @xmath195 tells the number of atomic operations that must be performed in order to transform @xmath216 in @xmath217 ( or viceversa ) in the sense of mgg productions .",
    "therefore , it seems natural to define the distance between two complex terms as follows :    [ def : distance ] let @xmath218 with @xmath219 , @xmath220 , and define @xmath221 and @xmath222 .",
    "then , the distance between @xmath216 and @xmath217 is given by @xmath223    it is an easy exercise to check that @xmath224 fulfills the axioms of a metric : @xmath225 , @xmath226 , @xmath227 and the triangle inequality @xmath228 .",
    "the triangle inequality follows from @xmath229 and the fact that @xmath230 , @xmath231 we have that @xmath232 .",
    "see @xcite for an application of the * xor * metric .",
    "notice that in @xmath129 only one of the terms contributes to the norm if @xmath233 for some production because the actions on the certainty part completely determine the nihil part , as proved in @xcite ( prop",
    ". 7.4.5 ) .",
    "in this section we introduce the monotone complex algebra and the monotone matrix algebra , that not only consider edges but also nodes .",
    "compatibility issues may appear so we study compatibility for a simple digraph and also for a single production ( compatibility for sequences will be addressed in sec .",
    "[ sec : compatibilityandcongruence ] ) .",
    "next we turn to one of the main topics in this paper : how to characterize mgg productions using mcl and the dot product of def .",
    "[ def : bascomplexops ] . the section ends introducing _ swaps _ and providing some geometric interpretations .",
    "to get rid of the `` preliminary '' term in the definitions of @xmath130 and @xmath129 ( defs .",
    "[ def : complexbooleanalgebra ] and [ def : complexspace ] , resp . )",
    "we shall consider an element as being composed of a matrix term and a vector of nodes .",
    "hence , we have that @xmath234 where @xmath8 stands for _ edge _ and @xmath3 for _ vertex_. notice that @xmath235 are matrices and @xmath236 are vectors .",
    "[ def : mcbl ] @xmath237 and @xmath238 ( the _ monotone complex _ and _ matrix algebras _ , resp . )",
    "are defined as their preliminary counterparts  see defs .",
    "[ def : complexbooleanalgebra ] and [ def : complexspace ]  but considering elements of the form : @xmath239 we also introduce @xmath240 and @xmath241 .    concerning @xmath237 , a production @xmath242 consists of two independent productions @xmath243  being @xmath244 mgg productions as those introduced in @xcite  one acting on the certainty part and the other on the nihil part : @xmath245 as there are no restrictions on @xmath246 and @xmath247 if we stick to @xmath237 , it is true that @xmath248 , @xmath249 such that @xmath250 .",
    "recall from sec .",
    "[ sec : characterization ] that productions in mgg have @xmath238 as domain and codomain .",
    "moreover , they must fulfill @xmath251 .",
    "unless otherwise stated , we will concentrate on mgg productions for the rest of the paper .",
    "we want @xmath247 to be a production so we must split it into two parts : the one that acts on edges and the one that acts on vertices . otherwise there",
    "would probably be dangling edges in the nihil part as soon as the production acts on nodes .",
    "the point is that the image of the nihil part with the operations specified by productions are not graphs in general , unless we restrict to edges and keep nodes apart .",
    "this behaviour is unimportant and should not be misleading .    * example*.@xmath128to the left of fig .",
    "[ fig : ex4 ] we have drawn the certainty part of a production @xmath15 that deletes node 1 ( along with two incident edges ) and adds node 3 ( and two incident edges ) .",
    "its nihil counterpart for edges is depicted to the right of the same figure .",
    "notice that node @xmath4 should not be included in @xmath27 because it appears in @xmath31 and we would be simultaneously demanding its presence and its absence .",
    "therefore , edges @xmath252 , @xmath253 and @xmath184  those with a red dotted line  would be dangling in @xmath27 ( red dotted edges do belong to the graphs they appear on ) .",
    "the same reasoning shows that something similar happens in @xmath29 but this time with edges @xmath252 , @xmath184 , @xmath254 and @xmath255 and node 3 .",
    "this is the reason to consider nodes and edges independently in the nihil parts of graphs and productions . in @xmath27 ,",
    "as nodes @xmath4 and @xmath38 belong to @xmath31 , it should not make much sense to include them in @xmath27 too , for if @xmath27 dealt with nodes we would be demanding their presence and their abscense . in @xmath29",
    "the production adds node @xmath38 and something similar happens.@xmath18    now that nodes are considered compatibility issues in the certainty part may show up .",
    "the determination of compatibility for a simple digraph under mcl is almost straightforward .",
    "let @xmath256 .",
    "potential dangling edges are given by @xmath257 , so the graph @xmath169 will be compatible if @xmath258 . if @xmath259 there are no common elements between the certainty and nihil parts and @xmath260 .",
    "a production @xmath261 is compatible if it preserves compatibility , i.e. if it transforms a compatible digraph into a compatible digraph .",
    "this amounts to saying that @xmath262 .",
    "recall from sec .",
    "[ sec : characterization ] that grammar rules actions are specified through _ erasing _ and _ addition _ matrices , @xmath65 and @xmath66 respectively .",
    "because @xmath65 acts on elements that must be present and @xmath66 on those that should not exist , it seems natural to encode a production as @xmath263    our next objective is to use the dot product ",
    "[ def : bascomplexops ]  to represent the application of a production .",
    "this way , a unified approach would be obtained . to this end define the operator @xmath264 by @xmath265    [ prop : production ] let @xmath266 and @xmath267 be the left and right hand sides , resp .",
    ", as in def .",
    "[ def : mcbl ] , eq .",
    "( [ eq:201 ] ) , and @xmath268 as defined in eq . .",
    "then , @xmath269    _ proof _",
    "+ @xmath128the proof is a short exercise that makes use of some identities which are detailed right afterwards : @xmath270 apart from equation ( 4.13 ) of prop .",
    "4.1.4 in @xcite which states that @xmath271 , we have used the following identities : @xmath272 we have also used that @xmath273 ( again prop .",
    "4.1.4 in @xcite ) , @xmath274 due to compatibility and @xmath275 almost by definition .",
    "besides , prop .",
    "7.4.5 in @xcite has also been used , which proves that @xmath276.@xmath18    the production is defined through operator @xmath268 instead of directly as @xmath277 for several reasons .",
    "first , eq . and its interpretation seem more natural .",
    "second , @xmath278 is self - adjoint , i.e. @xmath279 , which in particular implies that @xmath280 , @xmath281 , being @xmath195 the `` total '' graph , i.e. the graph with respect to which _ completions _ are performed ( for _ completion _ refer to @xcite , sec .",
    "therefore , the norm would not measure the size of productions ( interpreted as graphs according to eq . ) and we would be forced to introduce a new norm .",
    "this is because @xmath282 by way of contrast , @xmath283 .",
    "with operator @xmath268 the size of a production is the number of changes it specifies , which is appropriate for mggs .",
    "moreover , due to eq .",
    "( [ eq:25 ] ) , geometrically , grammar rules are also the sierpinski gasket .",
    "in fact , the codomain of operator @xmath268 is the diagonal @xmath284 ( refer to figs .",
    "[ fig : mgg_charset ] and [ fig : imagep ] ) .",
    "complex logic encoding puts into a single expression the application of a grammar rule , both @xmath31 and @xmath27 . also , it links the functional notation introduced in @xcite and the dot product of sec . [",
    "sec : complexlogics ] .",
    "[ th : surjmorph ] there exists a surjective morphism from the set of mgg productions on to the set of self - adjoint graphs in @xmath238 .",
    "+ @xmath128it is not difficult to check that @xmath195 is self - adjoint if and only if @xmath285 : on the one hand , if @xmath286 then @xmath287 . on the other hand , if we have @xmath288 and @xmath289 then @xmath290 .",
    "note that @xmath285 is equivalent to asking for the conditional norm to be equal to 1 with respect to superindex will be omitted in this case : @xmath291 , where @xmath36 stands for transposition . ]",
    "@xmath292 : @xmath293    the surjective morphism is given by operator @xmath268 . clearly , @xmath268 is well - defined for any production . to see that it is surjective , fix some graph @xmath294 such that @xmath295",
    "then , @xmath296 .",
    "any partition of @xmath297 as * or * of two disjoint digraphs would do . recall that productions ( as graphs ) have the property that their certainty and nihil parts must be disjoint.@xmath18    the operator @xmath268 is surjective but not necessarily injective .",
    "it defines an equivalence relation and the corresponding quotient space .",
    "we will be led to a reinterpretation of the notion of production in matrix graph grammars .",
    "[ def : swap ] the swap space is defined as @xmath298 .",
    "an equivalence class in the swap space will be called a _ swap_.",
    "the swap @xmath299 associated to production @xmath300 is @xmath301 , i.e. @xmath302 .",
    "can be interpreted as a production and viceversa . ]    * example*.@xmath128let @xmath303 and @xmath304 be two productions as those depicted in fig .",
    "[ fig : exprods ] .",
    "their images in @xmath305 are : @xmath306    \\vee i \\left [ \\begin{array}{cc } 1 & 1 \\\\ 0 & 1 \\end{array }    \\right ] = w.\\ ] ]",
    "they appear to be very different if we look at their defining matrices @xmath307 and @xmath308 or at their graph representation .",
    "also , they seem to differ if we look at their erasing and addition matrices : @xmath309 \\quad    e_3 = \\left [ \\begin{array}{cc } 1 & 1 \\\\ 0 & 0 \\end{array } \\right ] \\quad    r_2 = \\left [ \\begin{array}{cc } 0 & 1 \\\\ 0 & 0 \\end{array } \\right ] \\quad    r_3 = \\left [ \\begin{array}{cc } 0 & 0 \\\\ 0 & 1 \\end{array } \\right ] .",
    "\\nonumber\\ ] ]    however , they are the same swap as eq .",
    "( [ eq:10 ] ) shows , i.e. they belong to the same equivalence class .",
    "notice that both productions act on edges @xmath170 , @xmath310 and @xmath182 and none of them touches edge @xmath253 .",
    "this is precisely what eq .",
    "says as we will promptly see .",
    "swaps will be of help in studying and classifying the productions of a grammar .",
    "for example , there are 16 different simple digraphs with 2 nodes .",
    "hence , there are 256 different productions that can be defined . however , there are only 16 different swaps . from the point of view of the number of edges that can be modified",
    ", there is 1 swap that does not act on any element ( which includes 16 productions ) , 4 swaps that act on 1 element , 6 swaps that act on 2 elements , 4 swaps that act on 3 elements and 1 swap that acts on all elements.@xmath18    there is a simple geometrical interpretation of @xmath268 in terms of the rational encoding of the productions @xmath15 and the way they are transformed . let the principal diagonal be the closest line is approached as the number of nodes in the graphs tend to @xmath311 . ] to @xmath312 .",
    "operator @xmath268 assigns the same element @xmath278 in the principal diagonal to any element @xmath15 of a parallel line ( to the left of fig .",
    "[ fig : imagep ] three parallel diagonals are represented ) .",
    "@xmath278 has the same certainty part as the biggest certainty part of any @xmath15 in the parallel line .",
    "[ fig : imagep ] for the transformation of three sets of productions ( circles ) into their associated swaps ( squares ) .",
    "geometrically , @xmath268 can be thought of as the composition of two projections : one along the corresponding diagonal and another parallel to the abscissa axis .",
    "the name swap has been chosen because of the way they act on elements in @xmath238 .",
    "following previous example , let s consider the swap @xmath313 .",
    "let s also consider a generic element @xmath314 .",
    "the image @xmath315 swaps the elements that appear in the nihil part of @xmath299 and keeps unaltered those that appear in its certainty part .",
    "swaps summarize the dynamics of a production , independently of its left hand side .",
    "notice that , because swaps are self - adjoint , it is enough to keep track of the certainty or nihil parts .",
    "so one production is fully specified by , for example , its left hand side and the nihil part of its associated swap . , it is straightforward to calculate the production having @xmath266 as left hand side and whose actions agree with those of the swap . ]",
    "we can reinterpret actions specified by productions in matrix graph grammars under mcl : instead of adding and deleting elements , they interchange elements between the certainty and nihil parts .",
    "the geometrical intepretation of the actions of swap @xmath316 ( first element is swapped and the rest remain unaltered ) stands for `` as many ones as nodes '' . in this contribution",
    "we deal with finite graphs . ]",
    "is a reflection with respect to the diagonal @xmath317 in the sierpinski gasket @xmath318 .",
    "see the right of fig .",
    "[ fig : imagep ] .",
    "we are considering those boolean complexes that are complementary in the places where the swap interchanges elements .",
    "acts on @xmath319 then @xmath320 . if the first element in @xmath216 is the same in both graphs ( in fact zero ) then @xmath216 is a fixed element of @xmath321 . ]",
    "swap @xmath322 divides @xmath318 into two regions , @xmath323 and @xmath324 , along the line @xmath325 .",
    "it acts again as a reflection , but independently in @xmath323 and @xmath324 .",
    "the reflection is defined with respect to the line @xmath326 in @xmath323 and with respect to @xmath327 in @xmath324 .",
    "the swap @xmath328 is the composition of @xmath321 and @xmath329 .",
    "the order does not matter .",
    "geometrically , @xmath330 corresponds to a reflection with respect to @xmath325 and another reflection with respect to @xmath331 ( only one of them applies ) .",
    "let s consider those digraphs @xmath31 whose certainty and nihil parts are complementary .",
    "figure [ fig : nxorswap ] has @xmath31 on the @xmath332-axis and the certainty part of the swaps @xmath299 in the @xmath196-axis .",
    "the @xmath195-axis represents its image @xmath333 .",
    "both figures are the same surface , but the second has been rotated @xmath334 radians clockwise around the z - axis .",
    "notice that the more elements of @xmath31 that we fix as zero ( instead of as the complement of its certainty part ) the closer @xmath335 gets to @xmath336 .",
    "so far we have extended mggs by defining the transformations in @xmath237 and @xmath238 .",
    "the theory will be more interesting if we are able to develop the necessary concepts to deal with sequences of applications rather than productions alone . among the two most basic notions are coherence and the initial digraph .",
    "we shall reformulate and extend the concepts introduced in @xcite .",
    "recall that coherence of the sequence @xmath337 guarantees that the actions of one production @xmath244 do not prevent the actions of those sequentially behind it : @xmath338 ( the first production to be applied in @xmath339 is @xmath39 and the last one is @xmath340 ; the order is as in composition , from right to left ) .",
    "[ th : coherence ] the sequence of productions @xmath337 is coherent if the boolean complex @xmath341 , where @xmath342 and @xmath343    _ proof _ + @xmath128@xmath344 . the certainty",
    "part @xmath345 is addressed in @xcite and @xmath346 can be proved similarly .",
    "the reader is invited to consult the proof of th .",
    "4.3.5 in @xcite plus lemma 4.3.3 and the explanations that follow def .",
    "4.3.2 in the same reference .",
    "next , a sequence of two productions @xmath347 is considered to show the way to proceed for @xmath348 .    in order to decide whether the application of @xmath39 does not exclude @xmath303 ( regarding elements that appear in the nihil parts ) the following conditions",
    "must be demanded :    1 .",
    "no common element is deleted by both productions : @xmath349 2 .",
    "production @xmath303 does not delete any element that the production @xmath39 demands not to be present and that besides is not added by @xmath39 : @xmath350 3 .",
    "the first production does not add any element that is demanded not to exist by the second production : @xmath351    altogether",
    "we can write @xmath352 , which is equivalent to @xmath353 due to basic properties of mgg productions ( see prop . 4.1.4 in @xcite ) . for a sequence that consists of three productions , @xmath354 ,",
    "the procedure is to apply the same reasoning to subsequences @xmath355 ( restrictions on @xmath303 actions due to @xmath39 ) and @xmath356 ( restrictions on @xmath304 actions due to @xmath39 ) and * or * them .",
    "finally , we have to deduce what has to be imposed on @xmath304 actions due to @xmath39 , but this time taking into account that @xmath303 is applied in between . altogether : @xmath357    we may proceed similarly for four productions .",
    "equation can be deduced applying induction on the number of productions .    to see that eq",
    ". implies coherence we only need to enumerate all possible actions on the nihil parts",
    ". it might be easier if we think in terms of the negation of a potential host graph to which both productions would be applied @xmath358 and check that any problematic situation is ruled out .",
    "see table [ tab : actionsfortwoproductions ] where @xmath359 is deletion of one element from @xmath360 ( i.e. , the element is added to @xmath49 ) , @xmath174 is addition to @xmath49 and @xmath268 is preservation . because it is demanded not to exist by the production ( it appears in @xmath361 ) and it remains as non - existent after the application of the production ( it appears also in @xmath362 ) .",
    "] for example , action @xmath363 tells that in first place @xmath39 adds one element @xmath364 to @xmath360 . to do",
    "so this element has to be in @xmath365 ( or be incident to a node that is going to be deleted ) .",
    "after that , @xmath303 adds the same element , deriving a conflict between the rules .",
    ".possible actions for two productions [ cols=\"^,^,^,^,^,^\",options=\"header \" , ]     there are four forbidden actions : updated for @xmath304 . ]",
    "@xmath366 , @xmath367 , @xmath368 and @xmath369 .",
    "let s consider the first one , which corresponds to @xmath370 ( the first production adds the element  it is erased from @xmath360  and the same for @xmath304 ) . in table",
    "[ tab : actionsforthreeproductions ] we see that related conditions appear in positions @xmath170 , @xmath371 and @xmath372 .",
    "the first two are ruled out by conflicts detected in @xmath355 and @xmath356 , respectively .",
    "we are left with the third case which is in fact allowed .",
    "the condition @xmath373 taking into account the presence of @xmath303 in the middle in eq . is contained in @xmath374 , which includes @xmath375 . this must be zero , i.e. it is not possible for @xmath39 and @xmath304 to remove from @xmath360 one element if it is not added to @xmath360 by @xmath303 .",
    "the other three forbidden actions can be checked similarly .",
    "the proof can be finished by induction on the number of productions .",
    "the induction hypothesis leaves again four cases : @xmath376 , @xmath377 , @xmath378 and @xmath379 .",
    "the corresponding table changes but it is not difficult to fill in the details.@xmath18    there are some duplicated conditions , so it could be possible to `` optimize '' @xmath380 . the form considered in th .",
    "[ th : coherence ] is preferred because we may use @xmath71 and @xmath72 to synthesize the expressions .",
    "notice that eq .",
    "is already in @xmath380 through eq . , which demands @xmath381 ( as @xmath382 we have that @xmath383 ) .",
    "condition is @xmath384 , where we have used that @xmath385 .",
    "note that those @xmath386 are the dangling edges not deleted by @xmath39 .",
    "finally , equality is @xmath387 .",
    "the first term @xmath388 is already included in @xmath380 and the second term is again related to dangling edges .",
    "potential dangling edges appear in coherence and this may seem to indicate a possible link between coherence and compatibility .. coherence takes into account dangling edges , but only those that appear in the `` actions '' of the productions ( in matrices @xmath65 and @xmath66 ) . ]",
    "* example*. let s consider the sequence @xmath389 .",
    "recall that the order of application is from right to left so @xmath390 is applied first and @xmath391 right afterwards .",
    "let @xmath390 and @xmath391 be those productions depicted in fig .",
    "[ fig : ex5 ] .",
    "once simplified , its coherence term is @xmath392 \\left [ \\begin{array}{ccc }          0 & 0 & 0 \\\\           0 & 0 & 1 \\\\          0 & 0 & 0        \\end{array } \\right ] \\vee \\left [ \\begin{array}{ccc }          0 & 1 & 0 \\\\           0 & 0 & 0 \\\\          0 & 0 & 1        \\end{array } \\right ] \\left [ \\begin{array}{ccc }          0 & 0 & 0 \\\\           0 & 0 & 0 \\\\          0 & 0 & 1        \\end{array } \\right ] \\right ) \\vee i \\left ( \\left [        \\begin{array}{ccc }           0 & 0 & 0 \\\\           0 & 0 & 0 \\\\          0 & 0 & 1        \\end{array } \\right ] \\left [ \\begin{array}{ccc }          0 & 1 & 0 \\\\           0 & 0 & 0 \\\\          0 & 0 & 0        \\end{array } \\right ] \\vee \\right . \\nonumber \\\\    & & \\left .",
    "\\vee \\left [ \\begin{array}{ccc }          1 & 0 & 1 \\\\           1 & 0 & 1 \\\\          1 & 0 & 0        \\end{array } \\right ] \\left [ \\begin{array}{ccc }          0 & 1 & 1 \\\\           0 & 0 & 1 \\\\          0 & 0 & 0        \\end{array } \\right ] \\right ) = \\left [ \\begin{array}{ccc }        0 & 0 & 0 \\\\         0 & 0 & 1 \\\\        0 & 0 & 1      \\end{array } \\right ]",
    "\\vee i \\left [ \\begin{array}{ccc }        0 & 0 & 1 \\\\         0 & 0 & 1 \\\\        0 & 0 & 0      \\end{array } \\right ] . \\nonumber\\end{aligned}\\ ] ]    coherence problems appear in this example for several reasons .",
    "edge @xmath393 is added twice while self - loop @xmath255 is first deleted in @xmath390 and then used in @xmath391 .",
    "edge @xmath252 becomes dangling because production @xmath391 deletes node @xmath4 .",
    "edge @xmath393 appears in @xmath394 for the same reason that makes it appear in @xmath395.@xmath18    the minimal initial digraph @xmath396 for a completed sequence @xmath397 was introduced in @xcite as a simple digraph that permits all operations of @xmath339 and that does not contain a proper subgraph with the same property .",
    "the negative initial digraph has a similar definition but for the nihil part .",
    "theorem [ prop : seqcomp ] encodes as a complex term the minimal and negative initial digraphs , renaming it to _ initial digraph_.    now we are interested in what elements will be forbidden and which ones will be available once every production is applied .",
    "superscript is omitted .",
    "for example @xmath398 .",
    "the @xmath36 stands for transposition .",
    "] matrix @xmath399 specifies what edges can not be present because at least one of their incident nodes have been deleted .",
    "let s introduce the dual concept : @xmath400    @xmath401 are the newly available edges after the application of the production because of the addition of nodes .",
    "does not appear in the calculation of the coherence of a sequence : coherence takes care of real actions @xmath402 and not of potential elements that may or may not be available @xmath403 . ] the first term , @xmath404 , has a one in all edges incident to a vertex that is added by the production .",
    "we have to remove those edges that are incident to some node deleted by the production , which is what @xmath405 does .",
    "* example*.@xmath128figure [ fig : matrixt ] depicts to the left a production @xmath406 that deletes node @xmath4 and adds node @xmath38 .",
    "its nihil term and its image are @xmath407 \\qquad q = q^{-1}(k ) = e \\vee \\overline{r}k = \\left [      \\begin{array}{ccc }        1 & 1 & 1 \\\\         1 & 0 & 0 \\\\        1 & 0 & 0      \\end{array }    \\right ] \\nonumber\\ ] ]    to the right of fig .",
    "[ fig : matrixt ] matrix @xmath401 is included .",
    "it specifies those elements that are not forbidden once production @xmath406 has been applied.@xmath18    matrices @xmath408 and @xmath401 do not tell actions of the production to be performed in the complement of the host graph , @xmath360 .",
    "actions of productions are specified exclusively by matrices @xmath65 and @xmath66 .",
    "[ th : id ] the _ initial digraph _",
    "@xmath396 for the completed coherent sequence of productions @xmath337 is given by @xmath409    _ proof ( sketch )",
    "_ + @xmath128the proof proceeds along the lines of that for th .",
    "4.4.2 in @xcite , which in essence starts with a big enough graph and removes as many elements as possible .",
    "however , for edges , besides the actions of the productions on edges we need to keep track of the actions of the productions on nodes because some potential dangling edges may become available ( if their incident nodes are added by some grammar rule ) .    notice that th .",
    "4.4.2 in @xcite proves that the certainty part of the initial digraph is the one that appears in eq . .",
    "for the nihil term @xmath410 it is easier to think in what must be or must not be found in @xmath360 .",
    "we proceed by induction on the number of productions .",
    "for the time being , for simplicity , we omit the effect of adding nodes which may turn potential dangling edges into available ones . in a sequence with a single production",
    "it should be obvious that @xmath361 ( and only @xmath361 ) needs to be demanded .    for a sequence of two productions @xmath411 , @xmath361 is again necessary .",
    "it is clear that @xmath412 with @xmath413 ",
    "i.e. all nodes and hence edges unrelated  would be enough , but it may include more elements than strictly needed . among them , those already deleted by @xmath39 ( once they are deleted they belong to @xmath360 ) and those that already appear in @xmath361 and that are not added by @xmath39  @xmath414 . if these elements of @xmath415 are not going to be considered , we need to * and * their negation : @xmath416 .",
    "altogether we get @xmath417 .",
    "some simple manipulations prove that : @xmath418    minimality is inferred by construction .",
    "if any other element was removed then either @xmath419 or @xmath420 could not be applied ( and still consider dangling edges ) .",
    "it is not difficult to check that the sequence @xmath421 can be applied to @xmath422 .",
    "the expressions for sequences of three , four , @xmath423 poductions are : @xmath424    \\\\",
    "\\label{eq:35 }    n_n & = & k_1 \\vee \\overline{r_1 } \\bigtriangledown_1^{n-1 } \\left (      \\overline{e}_x k_{y+1 } \\right ) \\vee \\bigvee_{j=2}^n \\left [ k_j      \\bigtriangleup_1^{j-1 } \\left ( \\overline{e}_x r_y \\right )    \\right].\\end{aligned}\\ ] ]    there are two tricky steps .",
    "the first one is how to derive @xmath425 in eq .",
    "and the second is how to obtain its equivalent expression .",
    "the reader is referred again to the aforementioned proof in @xcite where detailed explanations are given for a similar case .",
    "once we get here it is easy to obtain @xmath426 .",
    "first , note that the sequence is coherent so the third term in eq .",
    "second , as @xmath427 , the @xmath428 can be simplified because @xmath429 in propositional logic .",
    "finally , the same reasoning applies for those nodes that are added .",
    "so we do not only need to remove elements erased by previous productions but also edges that are not incident to any non - existent edge , @xmath430.@xmath18    * example*.@xmath128figure [ fig : ex2 ] includes two productions with their nihilation matrices @xmath361 and @xmath415 .",
    "the initial digraph of the sequence @xmath431 is @xmath432 \\!\\",
    "! \\vee \\!\\ !",
    "\\left [ \\begin{array}{ccc }          1 & 1 & 1 \\\\           0 & 1 & 1 \\\\          1 & 1 & 1        \\end{array } \\right ] \\!\\ !",
    "\\left [ \\begin{array}{ccc }          0 & 0 & 0 \\\\           1 & 1 & 0 \\\\          0 & 0 & 0        \\end{array } \\right ] \\ !",
    "\\right ) \\nonumber \\\\    & & \\vee i \\left ( \\left [ \\begin{array}{ccc }          1 & 1 & 1 \\\\           1 & 1 & 1 \\\\          1 & 1 & 1        \\end{array } \\right ] \\!\\ !",
    "\\left [ \\begin{array}{ccc }          0 & 0 & 1 \\\\           1 & 0 & 1 \\\\          0 & 0 & 1        \\end{array } \\right ] \\!\\",
    "! \\vee \\!\\ !",
    "\\left [ \\begin{array}{ccc }          1 & 0 & 1 \\\\           1 & 1 & 1 \\\\          0 & 0 & 1        \\end{array } \\right ] \\!\\ !",
    "\\left [ \\begin{array}{ccc }          1 & 1 & 1 \\\\           1 & 1 & 1 \\\\          1 & 1 & 1        \\end{array } \\right ] \\!\\ !",
    "\\left [ \\begin{array}{ccc }          0 & 0 & 1 \\\\           0 & 0 & 1 \\\\          1 & 1 & 1        \\end{array } \\right ] \\!\\ !",
    "\\left [ \\begin{array}{ccc }          0 & 1 & 1 \\\\           0 & 0 & 1 \\\\          0 & 0 & 0        \\end{array } \\right ] \\right ) =   \\nonumber \\\\    & = & \\left [ \\begin{array}{ccc }        1 & 1 & 0 \\\\         0 & 1 & 0 \\\\        1 & 1 & 0      \\end{array } \\right ]",
    "\\vee i \\left [ \\begin{array}{ccc }        0 & 0 & 1 \\\\         1 & 0 & 1 \\\\        0 & 0 & 1      \\end{array } \\right ] \\equiv m_c(s_2 ) \\vee m_n(s_2).\\nonumber\\end{aligned}\\ ] ]    we have represented @xmath433 to the left of fig .",
    "[ fig : ex3 ] together with its evolution as well as the final state , @xmath434 . to the right of the same figure",
    "there is the same evolution but limited to edges and from the point of view of swaps . with black solid line",
    "we have represented the edges that are present and with red dotted line those that are absent .",
    "recall that swaps interchange them.@xmath18    a final remark is that @xmath435 makes the number of edges in @xmath360 as small as possible .",
    "for example , in @xmath436 we are in particular demanding @xmath437 ( because @xmath438 ) .",
    "if we start with a compatible host graph , it is not necessary to ask for the absence of edges incident to nodes that are added by a production ( we called them _ potentially available _ above ) .",
    "notice that these edges could not be in the host graph as they would be dangling edges or we would be adding an already existent node ) .",
    "this section revises some more sequential results , adapting and extending them via mcl .",
    "the notions we cope with are the image of a sequence , compatibility , sec .",
    "[ sec : numericalrepresentation ] . ] and g - congruence . by the end of the section we will very briefly touch on sequential independence , application conditions and graph constraints .",
    "the image of a sequence of productions @xmath337 acting on its initial digraph @xmath439 is given by : @xmath440    equation is deduced by simply applying each production to the initial digraph .",
    "we would like to interpret the shape of the image of a sequence as a production by setting @xmath441 , with @xmath442 and @xmath443 .. ] we could then put it as @xmath444 and for example calculate its associated swap : @xmath445    unfortunately this is not possible because although in the certainty part of eq . @xmath446 and @xmath442 , in the nihil part we find @xmath447 and @xmath448 .",
    "compatibility asks for `` closedness '' of the space ( graphs ) with respect to the specified operations .",
    "in essence , it demands the lack of dangling edges .",
    "definitions of compatibility for increasingly general concepts can be found in @xcite : single simple digraph , production and sequence . according to prop .",
    "[ prop : production ] productions act on edges and on vertices .",
    "they are obviously related but this relation has not been demonstrated .",
    "it is of importance in order to study the evolution of the nihil part of complex terms .",
    "what one production forbids , another production may need or even can make accessible again .    [",
    "prop : seqcomp ] let @xmath337 be a sequence made up of compatible productions . if @xmath449 then @xmath339 is compatible , where @xmath450 and @xmath451 are the certainty and nihil parts of the initial digraphs of @xmath452 , @xmath453 .    _ proof ( sketch ) _ + @xmath128equation is a restatement of the definition of compatibility for a sequence of productions .",
    "the condition appears when the certainty and nihil parts are demanded to have no common elements .",
    "compatibility of each production is used to simplify terms of the form @xmath454.@xmath18    compatibility and coherence are related notions but only to some extent .",
    "coherence deals with actions of productions while compatibility with potential presence or abscense of elements .",
    "this is better understood if we think in derivations : when the left hand side @xmath455 of rule @xmath15 is matched in a host graph @xmath456 , all elements of @xmath31 must be found in @xmath49 and all edges of @xmath27 must be found in @xmath360 . when @xmath15 is applied a new graph @xmath457 is derived .",
    "again , all elements of @xmath32 have to be found in @xmath51 and all edges in @xmath29 will be in @xmath458 , no matter if some of them are now potentially usable ( say @xmath15 adds some nodes and some potentially dangling edges are not dangling edges anymore ) .",
    "now we turn to g - congruence , which studies equality of initial digraphs for a sequence @xmath337 and a permutation of it , @xmath459 .",
    "all the job for advancement and delaying of productions ",
    "permutations @xmath460 and @xmath461 , where advancement is @xmath462 and delaying is @xmath463 , i.e @xmath464 and @xmath465  is done in @xcite , sec .",
    "6.1 , so we state the result without proof .",
    "[ th : gcongruence ] with notation as above , sequences @xmath339 and @xmath466 are g - congruents if @xmath467 , where @xmath468 also , @xmath339 and @xmath469 are g - congruents if @xmath470 , with @xmath471    _ proof _ + @xmath128@xmath18    an easy remark is that the complex term @xmath472 in th .",
    "[ th : coherence ] provides more information than just settling coherence as it measures non - coherence : _ problematic _ elements ( i.e. those that prevent coherence ) would appear as ones and the rest as zeros .",
    "the same holds for @xmath473 and @xmath474 in th .",
    "[ th : gcongruence ] for congruence and eq . in prop .",
    "[ prop : seqcomp ] for compatibility .",
    "there are some relevant topics that we have not mentioned such as sequential independence , application conditions and graph constraints .",
    "we briefly discuss how they could be handled with mcl .",
    "with respect to the image of a sequence and sequential independence , recall that mcl naturally uses swaps rather than productions .",
    "this abstraction has its effects on the interpretation of operations . on the positive side , among many other things ,",
    "swaps are a nice redefinition and generalization of productions that take into account the certainty and nihil parts ; on the negative side , our intuition needs to be adjusted .",
    "for example , consider a production @xmath15 that only deletes edge @xmath182 and does nothing else .",
    "suppose that it is applied twice to the graph @xmath49 that consists of nodes @xmath4 , @xmath45 and edge @xmath182 . in this case",
    "@xmath475 which is algebraically correct .",
    "however , it does not encode `` delete edge @xmath182 twice '' .",
    "of course , the point here is that of completion : we would rather have considered its application to @xmath476 , made up of nodes @xmath4 , @xmath477 and @xmath45 and edges @xmath182 and @xmath478 .",
    "a similar reasoning shows that sequential independence is `` granted '' if we rely only on algebraic operations and do not pay attention to completion : @xmath479 previous comments highlight some of the reasons why coherence , compatibility , initial digraph and g - congruence are so valuable , justifying their inclusion and also linking the present and previous sections to sec . [",
    "sec : productionencoding ] .",
    "regarding application conditions and graph constraints , they are not difficulty related to what has been presented so far .",
    "recall from sec .",
    "[ sec : productionencoding ] that swaps transform elements in the same diagonal of the sierpinski gasket . if they are allowed to be applied to @xmath480 instead of the restricted case that we have studied @xmath481",
    ", we may impose limits on what elements can not be added nor deleted by sequences of productions ( swaps ) .",
    "this is because if one edge is in the certainty part and in the nihil part , it can not be deleted by any swap . on the contrary , if one edge does not appear neither in the certainty nor in the nihil parts , it is not possible for a swap to add it .",
    "if we call any of these situations a _ swap restriction _ , it can be guaranteed that a sequence will not add nor delete ( or both ) some element , despite the actual definition of the productions that make up the sequence or the grammar .",
    "again , geometrically , we are choosing the diagonal inside the sierpinski gasket in which all operations will take place .",
    "in this paper we have introduced _ monotone complex logic _ ( mcl )",
    "which , in our opinion , is an interesting topic in itself . with respect to matrix graph grammars ( mggs )",
    ", mcl allows the encoding of simple digraphs and grammar rules using complex terms .",
    "we believe it is a natural representation in the mggs context , as productions act on pairs of graphs @xmath482 .",
    "relevant algebraic structures for their study have been introduced ( pmca , pmma , @xmath237 , @xmath238 ) .",
    "swaps allow studying and classifying productions according to their dynamic behaviour , defining a surjective morphism into the self - adjoint graphs in @xmath238 .",
    "the rational enconding of boolean complexes gives an embedding of mggs into a subset of the complex numbers : the sierpinski gasket .",
    "using such representation we have been able to introduce standard geometric and analytic concepts such as a scalar product , a norm and a notion of distance in mggs .",
    "this generalizes the theory developed in  @xcite and opens the door to the study of dynamics of infinite graphs with a countable number of nodes ( this topic is left for future research ) .",
    "finally , some of the most relevant concepts of mggs have been expressed and reinterpreted using mcl : coherence , initial digraph , image of a sequence , compatibility and g - congruence .",
    "our main interest is complexity theory so we have to introduce a measure of complexity .",
    "the natural proposal seems to be the geodesic distance , which measures the cost of reaching one element from another one through elements of the mgg ( rules of the grammar ) .",
    "however , the _ natural _ distance here is not the euclidean one , but the * xor * metric restricted by available operations .",
    "one foreseen advantage of the results in this paper is that there is a lot of interest and current research activity on the sierpinski gasket  @xcite . in the mid - long term",
    "we plan to continue our work towards computational complexity theory through mggs .",
    "it is our opinion that one of the main `` problems '' of current approaches to complexity theory is that there are very few links to other branches of mathematics ( there are some exceptions though , such as  @xcite ) . as mggs are a compact and path connected fractal , it seems promising to introduce harmonic and functional analysis and noncommutative geometry techniques , apart from those already available in mggs .",
    "two main research directions will be explored in the future : measurable riemannian geometry as in @xcite and noncommutative geometry as in @xcite .",
    "notice that it is not difficult to interpret mggs as a model of computation ( we are preparing a paper on this topic ) . also , it might be of interest to encode properties of graphs ( such as coloring ) using graph grammars , translating _ static _ properties into equivalent _ dynamic _ properties of associated sequences .",
    "another point of interest might be the introduction of stochastic analysis .",
    "this is closely related to mggs as a model of computation and the way grammar rules are selected ( a source of non - determinism ) .",
    "other source of non - determinism appears in case there are several places in a host graph to which a production can be applied .",
    "there are many more topics for further research , e.g. graph constraints , derivations , applicability , reachability , dynamic encoding of static properties and infinite graphs some of which we have already commented on .",
    "* acknowledgements * : pedro pablo wants to thank the open source community . _ sage _ ( http://www.sagemath.org/ ) has been used for some calculations , in particular those necessary to generate figs .",
    "[ fig : mgg_charset ] and [ fig : nxorswap ] . _ openoffice drawing _",
    "( http://www.openoffice.org/ ) has been used with figs . [",
    "fig : ex4 ] , [ fig : exprods ] , [ fig : imagep ] , [ fig : matrixt ] , [ fig : ex2 ] and [ fig : ex3 ] .",
    "_ the gimp _ ( http://www.gimp.org/ ) has helped with some finishing touches .",
    "_ emacs _ ( http://www.gnu.org/software/emacs/ ) is unvaluable for typing and _ tetex _ for @xmath483 .",
    "maymounkov , p. , mazires , d. 2002 .",
    "_ kademlia : a peer - to - peer information system based on the xor metric_. 1st int .",
    "workshop on peer - to - peer systems .",
    "mulmuley , k. , sohoni , m. a. 2001 .",
    "_ geometric complexity theory i : an approach to the p vs. np and related problems_. siam j. comput .",
    "31(2 ) : 496 - 526 ."
  ],
  "abstract_text": [
    "<S> graph transformation is concerned with the manipulation of graphs by means of rules . </S>",
    "<S> graph grammars have been traditionally studied using techniques from category theory . in previous works , we introduced matrix graph grammars ( mggs ) as a purely algebraic approach for the study of graph grammars and graph dynamics , based on the representation of graphs by means of their adjacency matrices . </S>",
    "<S> mggs have been succesfully applied to problems such as applicability of rule sequences , sequentialization and reachability , providing new analysis techniques and generalizing and improving previous results .    </S>",
    "<S> our next objective is to generalize mggs in order to approach computational complexity theory and _ static _ properties of graphs out of the _ dynamics _ of certain grammars . in the present work </S>",
    "<S> , we start building bridges between mggs and complexity by introducing what we call _ monotone complex logic _ , which allows establishing a ( bijective ) link between mggs and complex analysis . </S>",
    "<S> we use this logic to recast the formulation and basic building blocks of mggs as more proper geometric and analytic concepts ( scalar products , norms , distances ) . </S>",
    "<S> mgg rules can also be interpreted  via operators  as complex numbers . </S>",
    "<S> interestingly , the subset they define can be characterized as the sierpinski gasket . </S>"
  ]
}
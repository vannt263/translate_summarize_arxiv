{
  "article_text": [
    "since they were introduced by dung  @xcite , argument systems have provided a fruitful mechanism for studying reasoning in defeasible contexts .",
    "they have proved useful both to theorists who can use them as an abstract framework for the study and comparison of non - monotonic logics , e.g.  @xcite , and for those who wish to explore more concrete contexts where defeasibility is central . in the study of reasoning in law , for example",
    ", they have been used to examine the resolution of conflicting norms , e.g. @xcite , especially where this is studied through the mechanism of a dispute between two parties , e.g. @xcite .",
    "the basic definition below is derived from that given in @xcite .",
    "[ defn : basicform ] an _ argument system _ is a pair @xmath5 , in which @xmath6 is a set of _ arguments _ and @xmath7 is the _",
    "attack relationship _ for @xmath8 .",
    "unless otherwise stated , @xmath2 is assumed to be _ finite _ , and @xmath9 comprises a set of ordered pairs of _ distinct _ arguments .",
    "a pair @xmath10 is referred to as ` @xmath11 _ is attacked by _ @xmath12 ' or ` @xmath12 _ attacks _ ( or _ is an attacker of _ ) @xmath11 ' .    for @xmath13 ,",
    "@xmath1 subsets of arguments in the system @xmath14 , we say that    1 .",
    "@xmath15 is _ attacked _ by @xmath13 if there is some @xmath16 such that @xmath17 .",
    "2 .   @xmath18 is _ acceptable with respect to _",
    "@xmath1 if for every @xmath19 that attacks @xmath11 there is some @xmath20 that attacks @xmath12 .",
    "3 .   @xmath1 is _ conflict - free _ if no argument in @xmath1 is attacked by any other argument in @xmath1 .",
    "4 .   a conflict - free set @xmath1 is _ admissible _ if every argument in @xmath1 is acceptable with respect to @xmath1 . 5 .",
    "@xmath1 is a _ preferred extension _ if it is a maximal ( with respect to @xmath0 ) admissible set .",
    "@xmath1 is a",
    "_ stable extension _",
    "if @xmath1 is conflict free and every argument @xmath21 is attacked by @xmath1 .",
    "@xmath3 is _ coherent _ if every preferred extension in @xmath3 is also a stable extension .",
    "an argument @xmath11 is _ credulously accepted _ is there is _ some _ preferred extension containing it ; @xmath11 is _ sceptically accepted _ if it is a member of _ every _ preferred extension .",
    "the notation @xmath22 is used to describe the set of all subsets of @xmath2 which are preferred extensions of @xmath3 .",
    "similarly , @xmath23 denotes the set of all _ stable _ extensions of @xmath24 and @xmath25 refers to an arbitrary one of these sets .",
    "we use @xmath26 to denote @xmath27 .",
    "the preferred extensions of an argument system can be taken as being the consistent positions that can be adopted within the argument system .",
    "any argument that appears in all preferred extensions will be acceptable in every consistent position , and any argument that appears in no preferred extension can not be held in any consistent position .",
    "this means that the notion can be related to varieties of semantics for non - monotonic reasoning : credulously acceptable arguments will be those that appear in at least one preferred extension , and sceptically acceptable arguments will be those which appear in all preferred extensions . in the context of legal reasoning , the notion allows us to distinguish those arguments which must be accepted , those which can be defended , and those which are indefensible .    to avoid repetition",
    "we will subsequently refer to the following decision problems : ( preferred extension ) : an argument system @xmath28 and @xmath29 . :",
    "is @xmath30 ?",
    "( stable extension ) : an argument system @xmath28 and @xmath29 .",
    ": is @xmath1 a subset of some @xmath31 , i.e. can @xmath1 be expanded to a stable extension ?",
    "( preferred extension given information ) : an argument system @xmath28 , @xmath29 , and @xmath32 an @xmath26-tuple of boolean values such that @xmath33 if and only if the argument @xmath34 is credulously accepted in @xmath24 . :",
    "is @xmath30 ?",
    "( stable extension given information ) : an argument system @xmath28 , @xmath29 , and @xmath32 an @xmath26-tuple of boolean values such that @xmath33 if and only if the argument @xmath34 is credulously accepted in @xmath24 .",
    ": is @xmath1 a subset of some @xmath31 , i.e. can @xmath1 be expanded to a stable extension ?    before proceeding it may be useful to consider in more detail the concepts of ` preferred ' versus ` stable ' extensions of an argument system .",
    "both @xcite and @xcite offer a view of preferred extensions as providing a more general construct than stable extensions : thus any stable extension is also preferred but the converse is not always true .",
    "a significant difference between the two models is that whereas some argument systems may have no stable extension , it is always the case that a preferred extension extension exists since the empty set is always admissible .",
    "this difference raises a number of general questions that are discussed in some detail in @xcite .",
    "in particular ,    1 .   are there ` natural ' or ` meaningful ' argument systems with no stable extensions ?",
    "2 .   are there ` natural ' systems whose set of stable extensions form a strict ( non - empty ) subset of the set of preferred extensions",
    "?    through consideration of a particular @xmath26-player game , @xcite , argues that studies of lucas and shubik@xcite suggest ` _ stable semantics do not capture the intuitive semantics of every meaningful argumentation system _ ' . as a further example , using a variant of the _ stable marriage problem _",
    ", @xcite exhibits a concrete ` natural ' system which has no stable extension . while both examples suggest a positive answer to the first of the two questions raised , neither treats the second question . instead , ( * ? ? ?",
    "* defn .  31 ,  p.  332 ) introduces the concept of _ coherence _ to describe systems for which every preferred extensions is also stable , discussing forms of argumentation system whose instantiation guarantees coherence .",
    "recent work of dunne and bench - capon@xcite , however , indicates that even when restricted to the context of finitely presented argument systems , deciding if a given system @xmath35 is coherent is ` likely ' to be extremely hard .",
    "one consequence of the proof employed in @xcite , is that it , naturally , gives rise to an infinite class of argument systems having a non - empty set of stable extensions but which are nonetheless incoherent : i.e. there is a supportable case that the answer to the second question raised is also positive .",
    "a major difficulty that is encountered within these formalisms is the computational intractability of several decision problems that arise : results of dimopoulos and torres  @xcite indicate that deciding if @xmath36 is credulously accepted in @xmath3 is np  complete and that pref - ext is co - np  complete ( even when @xmath1 is the empty set ) . similarly deciding if @xmath24 has any stable extension",
    "( i.e. the decision problem @xmath37 ) is @xmath38-complete ( notice that this is the special case of stab - ext when @xmath39 ) .",
    "dunne and bench - capon  @xcite proved that deciding coherence is @xmath40complete , deducing the same complexity classification for sceptical acceptance as a consequence .",
    "related work , described in @xcite , has shown that the sound and complete reasoning method for credulous argumentation introduced by vreeswijk and prakken @xcite in which reasoning proceeds via a dialogue game requires an exponential number of moves to resolve some disputes .",
    "examining differing concepts of ` acceptance ' in various non - monotonic logics , @xcite , indicate that decision problems predicated on preferred extensions are complete for divers levels of the polynomial ",
    "time hierarchy ranging from @xmath41 ( i.e. np ) in the case of credulous reasoning in the logic programming formalism ( lp ) to @xmath42 in the case of sceptical reasoning within autoepistemic logic ( ael ) .",
    "the concern of this paper is to consider some further contrasts between computational properties of preferred and stable extension sets , arising from the following scenario .",
    "suppose one is given a specific argument system @xmath43 which describes a ` frequently ' used application , for example one incorporating complex legal data in which the justification for various different positions may have to be assessed .",
    "rather than deciding acceptability and support for an argument on each new query to @xmath3 , we may be prepared to invest some computational effort _ once _ in the hope that the information elicited as a result may help in reducing the time taken for subsequent queries .",
    "for example , one could compute all sets in @xmath25 and then have queries on @xmath3 performed with respect to a _ representation _ ( encoding ) of this set of subsets .",
    "there are , of course , several properties which such a representation should , ideally , satisfy .",
    "suppose @xmath44 is some encoding of @xmath45 .",
    "we define , informally , two such properties that are the main focus of this paper :    1 .",
    "@xmath46 is _ terse _ , i.e. @xmath47  the number of _ bits _ needed  is polynomially bounded in @xmath26 .",
    "@xmath46 is _ extension tractable _",
    ", i.e. given any @xmath29 , the question @xmath48 can be decided from @xmath44 in time polynomial in @xmath47 .    one obvious representation scheme is simply to use a table @xmath49 of @xmath50 rows , each row being @xmath26 bits in length , so that if @xmath51 is an ordering of @xmath25 , then @xmath52 if and only if @xmath53 .",
    "while this representation meets the criterion specified by r2 , it will fail to satisfy r1 in those cases where @xmath54 is superpolynomial in @xmath26 .",
    "we note that systems may be defined where this number is @xmath55 .",
    "alternatively , the system @xmath3 itself is a representation of @xmath56 : while satisfying r1 it is , however , unlikely to satisfy r2 in the case @xmath57 ( assuming @xmath58 ) .",
    "given such examples , a natural question to raise is whether these extremes are inherent , or are there representation formalisms that are terse _ and _ extension tractable  a property we subsequently refer to as _ concise_. in the next section we formalise these concepts and , in section 3 , prove some basic results concerning them . in particular it is shown that in the case of @xmath59 ` effective ' concise encodings are not possible , in general , unless @xmath4 .",
    "in contrast , concise encoding schemes for @xmath60 are easy to construct .",
    "we note that this provides another example of a property which is considerably ` easier ' under stable semantics than under preferred semantics for argument systems , cf .",
    ". a further indication of the computational difficulties arising in considering preferred extensions is given in the concluding result of section 3 where the problem pref - ext - inf is shown to be co - np  complete : thus , even if the defensibility status for every argument in @xmath2 is supplied as part of an instance , the problem of deciding whether a given subset @xmath1 is a preferred extension does not become any easier , i.e. remains co - np  complete .",
    "discussion and conclusions occupy section 4 .",
    "in the remainder of this paper the following notational conventions are used .",
    "@xmath61 is a set of @xmath26 arguments @xmath62 .    for an @xmath26 element set @xmath63 , @xmath64 is the set of all subsets of @xmath63 .",
    "the following definition formalises our abstract concept of _ encoding scheme _ for the set @xmath65 in an argument system @xmath24 .",
    "[ defn : encode ] a _ @xmath65 encoding scheme _ is a pair @xmath66 where @xmath67 is a mapping from argument systems to finite binary words , and @xmath68 is a _ deterministic _ turing machine program , that takes as input a pair @xmath69 in which @xmath70 , accepting if and only if @xmath71 .    before proceeding there are several points that should be noted .",
    "first we observe that it is not insisted that schemes be _ uniform _",
    ", i.e. it is _ not _ required that there is an algorithm which given @xmath24 computes @xmath72 . of course , in ` practical ' schemes , one would wish to have some mechanism for automating this translation . in order to capture some sense of ` practical ' scheme ,",
    "we introduce the notion of _ verifiability _    a _ verifiable _ @xmath65 _ encoding scheme _ is a triple @xmath73 in which @xmath66 is a @xmath65 encoding scheme and @xmath74 a ( non - deterministic ) turing machine program , that is given @xmath75 and @xmath28 as input , accepting if @xmath76 .",
    "secondly , the definition provides a foundation for introducing more ` sophisticated ' schemes other than binary words .    with this abstract idea of encoding scheme we can formalise the notions of _ terse _ and _ extension tractable _ outlined earlier .",
    "let @xmath73 be a verifiable @xmath65 encoding scheme .",
    "we say @xmath66 is _ terse _ if there is a constant @xmath77 , such that for all @xmath78 , @xmath79 ; it is _ extension tractable _ if there is a constant @xmath77 such that : given @xmath44 and @xmath80 as input , @xmath68 decides if @xmath81 taking at most @xmath82 steps .",
    "finally , @xmath73 is _ effective _ if there is a constant @xmath77 for which @xmath74 has an accepting computation of @xmath76 in non - deterministic time bounded by @xmath83 .",
    "a @xmath65 encoding scheme @xmath66 is _ concise _ if it is both terse and extension tractable .",
    "a _ verifiable _",
    "@xmath65 encoding scheme @xmath73 is _ usefully concise _ if it is terse , extension tractable , and effective .    in ` practical ' terms _ usefully concise _ verifiable @xmath65 encoding schemes , define the ` ideal ' representation form : if @xmath73 is usefully concise then one can describe @xmath25 in its entirety using only a ` small ' amount of space  since @xmath46 is _ terse _ ; one can determine efficiently ( in terms of @xmath84 and @xmath85 ) if @xmath71  since the scheme is _ extension tractable _ ; and , finally , one may test if an arbitrary @xmath86 does , indeed , describe the encoding @xmath87 for a given @xmath24 .",
    "we now present some examples of encoding approaches .      given @xmath88 , @xmath89 is the @xmath90-bit word in which bit @xmath91 if and only if @xmath53 where @xmath92 and @xmath93 is an ordering of @xmath25 .",
    "if the algorithm @xmath68 in @xmath94 is chosen to be an appropriate table look up method , then @xmath94 is extension tractable .",
    "it is not , however , terse .",
    "given any @xmath78 there is a unique propositional logic function , @xmath95 definable from @xmath25 as follows .",
    "for any @xmath96 let the instantiation , @xmath97 of the propositional variables @xmath63 be @xmath98 if @xmath99 and @xmath100 if @xmath101 .",
    "the function @xmath95 takes the value @xmath102 on exactly those instantiations @xmath97 for which @xmath71 .",
    "given this approach , any representation formalism for arbitrary @xmath26-argument propositional logic functions serves as a basis for a @xmath65 encoding scheme , e.g. truth - tables , propositional formulae over a finite complete basis , etc .",
    "we first observe that construction of usefully concise encoding schemes for stable extensions is trivial : the problem of deciding , given @xmath28 and @xmath29 whether @xmath103 is polynomial - time solvable ; therefore since @xmath28 already defines a terse encoding of @xmath60 with an appropriate decision algorithm we have a concise @xmath104 encoding scheme .",
    "this can be extended to give a usefully concise scheme , by encoding @xmath24 as its @xmath105 element adjacency matrix , so that @xmath106 is decided in @xmath107 steps .",
    "in contrast to the easy construction above , usefully concise encoding schemes for _ preferred _ extensions are ` unlikely ' to exist .",
    "[ thm : pe - bad ] if @xmath58 then usefully concise @xmath108 encoding schemes do not exist .",
    "it should be noted that the argument used in the proof requires the assumption that @xmath73 is effective .",
    "the reason being that if @xmath68 were invoked directly on the word @xmath109 then _ every _ instance would be accepted : given a subset @xmath1 there is certainly some argument system , @xmath110 for which @xmath111  the system with @xmath85 isolated arguments  and if @xmath112 then the instance is accepted regardless of whether @xmath30 .",
    "theorem  [ thm : pe - bad ] indicates that even if one is prepared to invest considerable computational effort in _ constructing _ an encoding @xmath87 , such effort will not aid in testing @xmath30 if the encoding form is terse _ and _ effective .",
    "the problem , pref - ext - inf in allowing knowledge regarding the set of credulously accepted arguments to be given for free , can be seen as defining an alternative _ terse _ encoding scheme .",
    "we note that this scheme is _ not _ effective ( in our usage ) ( assuming @xmath58 ) since in the encoding @xmath113 , should any bit of @xmath114 be @xmath115 indicating the associated argument is _ not _ credulously accepted , we can not test @xmath76 using an np computation .",
    "thus , since determining the set of credulously accepted arguments in a system , may at worst involve similar computational expenditure to that of enumerating preferred extensions , the complexity of the problem pref - ext - inf is of some interest : the implied encoding scheme is not one which is within the scope of theorem  [ thm : pe - bad ] .",
    "our next result shows that pref - ext - inf is no easier than pref - ext .",
    "[ thm : inf - is - bad ] pref - ext - inf is co - np  complete .",
    "the following corollary is easily obtained ,    [ corr : stab - ext - inf ] stab - ext - inf is np  complete .",
    "it is stressed that theorem  [ thm : inf - is - bad ] and its corollary are addressing _ different _ decision problems from their counterparts pref - ext and stab - ext : for the latter problems an instance comprises an argument system @xmath35 and a subset @xmath1 of @xmath116 ; in the problems pref - ext - inf and stab - ext - inf an instance additionally provides @xmath117 bits of information , @xmath118 , delineating which arguments of @xmath116 are credulously accepted .",
    "one indication of the different nature of these problems can be seen by considering the case when @xmath39 : pref - ext is co - np  complete for this case , however pref - ext - inf has an easy polynomial time algorithm by simply checking if any bit of @xmath118 is @xmath102 .",
    "it is of interest to note , however , that the complexity of stab - ext - inf when @xmath39 is less clear : while we can deduce the absence of any stable extension in @xmath24 from @xmath119 , we can not deduce that one _ does _ exist if @xmath120 is not of this form .",
    "we conjecture that , in fact , stab - ext - inf is np  complete even for instances @xmath121 .",
    "we note that if correct , this provides a rare , albeit arguably ` unnatural ' , example of a problem where a decision concerning preferred extensions is ` easier ' than the corresponding decision regarding _ stable _ extensions .",
    "the principal focus of this article has been in deriving negative results concerning various mechanisms for reducing the complexity of deciding @xmath30 though ` expensive ' precomputation .",
    "thus for a rather general notion of ` useful encoding scheme ' it has been shown that such approaches are unlikely to succeed .",
    "there remains , of course , the possibility that specific sub - classes of argument system are amenable to concise encoding approaches .",
    "another direction for further work arises from the fact that the requirement for @xmath73 to be _ effective _ is rather strong and , as we have seen in theorem  [ thm : inf - is - bad ] does not apply to what might be regarded as otherwise ` reasonable ' approaches",
    ". one possible encoding approach concerning which theorem  [ thm : pe - bad ] will not in general apply is the following .",
    "recall that @xmath95 is the propositional logic _",
    "function _ for which @xmath122 if and only the subset @xmath1 of @xmath2 indicated by @xmath97 is in @xmath59 . given",
    "@xmath95 one might represent this using a suitable _ propositional formula_. of course , there are ( infinitely ) many equivalent formulae in this regard .",
    "suppose for a propositional formula @xmath123 over the ( binary operation ) basis of @xmath124 we define the _ length _ of @xmath125 as its total number of occurrences of literals .",
    ", denoting this @xmath126 . now consider the following measures .",
    "@xmath127 @xmath128 informally , @xmath129 is given by : for each different @xmath26-argument @xmath24 identify the shortest formula representing @xmath130 ; @xmath129 is then the maximum of these values .",
    "the function @xmath129 is well - defined ( and computable , albeit by highly infeasible mechanisms ) .",
    "it is certainly the case that encoding @xmath59 by a propositional formula @xmath125 is an _ extension tractable _ approach : to test @xmath30 simply evaluate @xmath131 .",
    "this is unlikely to be _ effective _ : given @xmath75 , even though ( assuming some standard encoding of propositional formulae , e.g. @xcite ) one could determine whether @xmath86 encodes _ some _ @xmath132 , it is unlikely that one can test within np if this represents @xmath130 . in summary",
    "we have _ open _ the possibility that propositional formulae offer _ concise _ encodings of @xmath59 since such are not ruled out by theorem  [ thm : pe - bad ] .",
    "there are two points worth considering concerning problem  [ problem : prop - form ] .",
    "first , the classic information - theoretic argument of riordan and shannon@xcite , ( cf @xcite ) does not help in proving superpolynomial lower bounds : even if it is assumed that each distinct @xmath26 argument system encodes a different preferred extension set , the lower bound on @xmath129 implied by this is only @xmath135 .",
    "a second point concerns the class of propositional functions being addressed : work of lupanov@xcite indicates how formulae for propositional functions satisfying certain ` inheritance ' properties can be constructed .",
    "this approach ",
    "the so - called `` principle of local coding ''  allows ` small ' formulae to be built for suitable classes of functions provided that specific small formulae used in the approach can also be built .",
    "an overview of the mechanism is given in ( * ? ? ?",
    "* chapter 3 , pp .",
    "if one considers the class @xmath136 in which @xmath137 is the set of @xmath26-variable propositional functions @xmath130 for systems @xmath24 of @xmath26 arguments , then it may be possible to show that @xmath110 has the required ` inheritance ' property and that this , given suitable subsidiary formula constructions _ might _ lead to concise encoding schemes .",
    "it should be noted , however , even if this route is possible , it is likely to be the case that generating and verifying the correctness of resulting formulae may well be computationally demanding ( although such a process need only be performed _ once _ with respect to any given @xmath24 ) .    as a final open question we mention the following decision problem . as our starting point for building an encoding of @xmath59 we have assumed that the argument system @xmath24 is provided as the instance .",
    "one might ` relax ' this and assume that an arbitrary _ subset _ of @xmath138 is given and we wish to encode _ only _ those subsets that correspond to @xmath59 for _ some _ @xmath28 .",
    "thus , we have the following decision problem : : @xmath139 . : does there exist an argument system @xmath78 for which @xmath140 ?      we conjecture that @xmath141 , which would follow by proving that the following condition ( which is easily shown to be necessary ) is also sufficient for @xmath142 to be realisable .",
    "@xmath143 this condition can be tested in polynomial - time simply by restricting @xmath144 to range over those supersets of @xmath145 formed by adding a single new argument .",
    "y.  dimopoulos , b.  nebel , and f.  toni .",
    "preferred arguments are harder to compute than stable extensions . in d.",
    "thomas , editor , _ proceedings of the 16th international joint conference on artificial intelligence ( ijcai-99-vol1 ) _ , pages 3643 , san francisco , 1999 .",
    "morgan kaufmann publishers .",
    "y.  dimopoulos , b.  nebel , and f.  toni .",
    "finding admissible and preferred arguments can be very hard .",
    "in a.  g. cohn , f.  giunchiglia , and b.  selman , editors , _ kr2000 : principles of knowledge representation and reasoning _ , pages 5361 , san francisco , 2000 .",
    "morgan kaufmann .",
    "h.  jakobovits and d.  vermeir .",
    "dialectic semantics for argumentation frameworks . in _ proceedings of the seventh international conference on artificial intelligence and law ( icail-99 )",
    "_ , acm sigart , pages 5362 , n.y . , june 1999 .",
    "acm press .",
    "g.  vreeswijk and h.  prakken .",
    "credulous and sceptical argument games for preferred semantics . in _ proceedings of jelia2000 , the 7th european workshop on logic for artificial intelligence .",
    "_ , pages 224238 , berlin , 2000 .",
    "springer lnai 1919 , springer verlag ."
  ],
  "abstract_text": [
    "<S> argument systems provide a rich abstraction within which divers concepts of reasoning , acceptability and defeasibility of arguments , etc . </S>",
    "<S> , may be studied using a unified framework . </S>",
    "<S> much work has focused on the so - called _ preferred _ extensions of such systems , which define the maximal ( with respect to @xmath0 ) collectively defensible subsets of arguments within a given system of arguments and attack relationship . in this article </S>",
    "<S> we address problems related to the following issue . identification and enumeration of preferred extensions of an argument system </S>",
    "<S> is ( under the usual complexity theoretic assumptions ) computationally demanding : there may be exponentially many and deciding if a given subset @xmath1 of @xmath2 _ does _ define a preferred set is co - np  complete . for a domain which is questioned ` frequently ' it may be acceptable to invest this computational effort once , but having done so it is desirable to encapsulate these data in a form which is compact and allows , for example , questions concerning the acceptability of specific arguments to be dealt with efficiently . in this article </S>",
    "<S> we consider two ` plausible ' approaches to reducing the complexity of deciding if @xmath1 is a preferred extension of a system @xmath3 both of which assume some initial potentially ` expensive ' precomputation , invested to reduce time needed in subsequent queries to the system . </S>",
    "<S> the first approach examines ` reasonable encoding ' approaches ; the second is to determine the subset of all defensible arguments providing these as additional data when attempting to decide if @xmath1 is a preferred extension . </S>",
    "<S> it is shown that if certain properties are required of the encoding scheme , then the former approach is feasible only if @xmath4 . in the latter case </S>",
    "<S> , we show that , even if provided with information regarding which arguments are credulously accepted , the question of whether a subset of arguments defines a preferred extension remains co - np  complete .    </S>",
    "<S> * keywords : * argument systems , preferred extension , computational complexity </S>"
  ]
}
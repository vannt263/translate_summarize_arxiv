{
  "article_text": [
    "a princess has set a visiting prince the following challenge .",
    "she will spend each day in one of the rooms of her palace , and each night she will move into an adjacent room .",
    "the prince may , at noon each day , demand admittance to one room .",
    "if , within a finite specified number of days , he finds the princess , she will agree to marry him . otherwise , he must leave disappointed . in this note",
    "we characterize the palaces in which the prince has a winning strategy .",
    "we also determine , for each such palace , the minimum number of days the prince requires to guarantee to find the princess .    the particular case of a palace consisting of @xmath0 rooms in a row , and a prince allowed @xmath1 days to search for the princess ,",
    "was posed by christian blatter as a problem on mathoverflow  @xcite .",
    "a large number of related searching problems have been studied in the literature .",
    "the closest to our problem is the game considered by parsons in @xcite , in which a team of searchers constrained to move between adjacent vertices in a graph ( representing a cave network ) must locate a similarly constrained lost caver . besides the constraint on the searchers",
    ", this problem also differs in an important respect from ours in that capture occurs on the edges , rather than the vertices , of the graph .",
    "two more related searching games , also with constrained searchers , are the ` hunter - rabbit game ' considered in @xcite , in which each side has intermittent knowledge of the other s location , and the much - studied ` cops and robbers game ' introduced in @xcite , in which both sides have perfect knowledge ; see @xcite for some recent work in this area .",
    "we refer the reader to @xcite for a comprehensive bibliography of searching problems .    throughout the paper we shall assume an adversarial model , in which the princess knows in advance which sequence of rooms the prince will visit , and avoids him if she can . since we are concerned only with the existence and length of guaranteed winning strategies for the prince ,",
    "this model is clearly legitimate .",
    "we shall identify a palace with a finite connected simple graph , whose vertices correspond to rooms , and two vertices are joined by an edge if they correspond to adjacent rooms",
    ". let @xmath2 denote the tree with @xmath3 vertices shown in figure 1 above .",
    "( this tree appears as an example of a graph in which the rabbit may avoid the hunter in @xcite . )",
    "let @xmath4 be a graph representing a palace .",
    "if @xmath4 is a tree not containing any subgraph isomorphic to @xmath2 , then the prince can guarantee to find the princess . in any other case",
    ", the princess can avoid the prince indefinitely .",
    "it is clear that if @xmath4 contains a cycle then the princess can avoid the prince while staying at the vertices on this cycle , since from any vertex in the cycle there are two vertices to which she can proceed , of which the prince can visit only one .",
    "suppose that @xmath4 contains @xmath2 as a subgraph .",
    "this part of the palace consists of a central vertex and three branches , which we number @xmath5 , @xmath6 and @xmath7 , each with three vertices labelled as above .",
    "we shall show that the princess can avoid the prince by following a strategy in which on each even day she is either at the central vertex , or one of vertices @xmath8 , @xmath9 or @xmath10 .",
    "we may assume that the prince visits one of these vertices on each even day .",
    "the princess determines her moves according to the following principles .",
    "if on day @xmath11 the princess is at    * vertex @xmath12 , then she ( necessarily ) goes to @xmath13 on day @xmath14 ; * vertex @xmath13 , then she goes to @xmath15 on day @xmath14 , unless the prince is due to visit  @xmath15 on day @xmath14 , in which case she goes to @xmath12 ; * vertex @xmath15 , then she goes to the central vertex on day @xmath14 , unless the prince is due to visit the central vertex on day @xmath14 , in which case she goes to  @xmath13 ; * the central vertex , then she goes to @xmath15 , where branch @xmath16 is neither the branch the prince is due to visit on day @xmath14 , nor the branch @xmath17 in which he will next visit vertices @xmath18 and @xmath19 on two successive days , if such a branch exists .    to see that this strategy allows the princess to avoid the prince indefinitely , we need only check that she never finds herself at a vertex @xmath12 when the prince is due to visit @xmath13 on the next day .",
    "since her visits to @xmath12 always coincide with the prince visiting @xmath15 , this necessitates his visiting @xmath15 and @xmath13 on successive days .",
    "but that implies that he must have visited @xmath18 and @xmath19 in some other branch @xmath17 on successive days , in the time since the princess last visited the central vertex . and",
    "that is impossible , since her rules of movement would then have taken the princess to @xmath15 on the day the prince visited @xmath18 , and back to the central vertex on the day he visited @xmath19 .",
    "we have established that if @xmath4 has a subgraph isomorphic to @xmath2 then the prince has no winning strategy .",
    "conversely , if @xmath4 is a tree with no subgraph isomorphic to @xmath2 then the prince has a remarkably simple strategy that will guarantee to find the princess .",
    "let  @xmath20 be a path of maximal length @xmath21 in @xmath4 and let the vertices in  @xmath20 be numbered from  @xmath22 up to @xmath21 in the order they appear in @xmath20",
    ". it will be useful to take a black - and - white colouring of the vertices of @xmath4 that induces a bipartition of  @xmath4 ; for definiteness we shall suppose that vertex @xmath22 is white .",
    "any non - leaf vertex in @xmath4 is either in @xmath20 or adjacent to a vertex in @xmath20 .",
    "therefore the prince can begin at vertex @xmath5 on day @xmath5 and take a walk to vertex @xmath23 that visits all non - leaf vertices _ en route _",
    ", never leaves @xmath20 for two consecutive days , never visits a vertex in @xmath24 more than once , and never visits a lower - numbered vertex in @xmath20 after a higher - numbered one .",
    "we call such a walk a _",
    "linear search_. for example , in the graph shown in figure  2 below , the prince might visit vertices in the order @xmath5 , @xmath6 , @xmath25 , @xmath6 , @xmath7 , @xmath26 , @xmath7 , @xmath27 , @xmath28 , @xmath29 , @xmath28 , @xmath30 , @xmath28 , @xmath31 .",
    "we claim that if on day @xmath5 the princess is at a black vertex , then the prince will find her in the course of his linear search .",
    "this is easily proved by induction , observing that if the prince has not found the princess when he visits vertex  @xmath17 for the final time , then the princess is on this day at a vertex of the same colour as @xmath17 , whose nearest vertex in @xmath20 is @xmath32 or higher .",
    "if when the prince visits vertex @xmath23 the princess still eludes him , then he knows that on this day the princess is at a vertex of the opposite colour to vertex @xmath23 .",
    "the prince may therefore be certain of finding the princess if he now performs a linear search of the opposite parity to the first : for instance , he can simply reverse his walk , beginning at vertex @xmath23 on the following day , and ending at vertex  @xmath5 .",
    "let us say that a graph is _ solvable _ if the prince has a strategy that guarantees to find the princess .",
    "the existence of a linear strategy shows that any solvable palace can be solved by a prince constrained so that the vertices he visits on consecutive days are either adjacent or the same .",
    "furthermore , he needs to be permitted to remain at the same vertex only once .",
    "( it is obviously necessary in any solution that the prince should change his black  white parity at least once , since otherwise he can never find a princess who starts with the opposite parity to himself . )    in the problem as posed , the prince is free to visit any vertex on any day , and it seems somewhat remarkable that this extra freedom is never required . equally surprising is that a linear strategy is optimal , in that it uses the minimum number of days required to be certain of finding the princess .",
    "the proof of this fact occupies the remainder of this paper .",
    "if @xmath4 is a graph , we define its _ reduction _ @xmath33 to be the graph obtained by repeatedly removing removable leaves from the graph of @xmath4 , one at a time , until no removable leaves remain .",
    "( it is clear that @xmath33 is well - defined up to graph isomorphism . )    for example , the reduction of the palace shown in figure  2 is obtained by deleting the leaf attached to each of vertices @xmath6 and @xmath28 , and any three of the four leaves attached to vertex @xmath31 .",
    "[ lemma : reduction ] let @xmath4 be the graph of a palace and let @xmath34 be obtained by removing a removable leaf from @xmath4 . then @xmath4 can be solved in @xmath11 days if and only if @xmath34 can be solved in @xmath11 days .",
    "fix a numbering of the vertices of @xmath4 and assign to each vertex in @xmath34 the corresponding number in @xmath4 .",
    "let vertex @xmath35 be the leaf removed from @xmath4 to make @xmath34 .",
    "it suffices to show that if the prince has a winning strategy in  @xmath34 , in which he visits vertex @xmath15 on day @xmath16 , for @xmath36 , then the sequence of visits @xmath37 also wins for the prince in  @xmath4 . if not",
    ", then there is a day  @xmath11 and a walk @xmath38 for the princess in @xmath4 such that @xmath39 for all @xmath40 .",
    "since @xmath35 is a leaf in @xmath4 , there is a vertex @xmath41 such that @xmath42 .",
    "since the leaf @xmath35 is removable , vertex @xmath41 has at least two neighbours in @xmath34 .",
    "hence there exists @xmath43 such that @xmath44 is adjacent to @xmath41 in @xmath34 and @xmath45 .",
    "now @xmath46 is a walk for the princess that defeats the prince s strategy on @xmath34 , which contradicts the hypothesis that his strategy is winning on @xmath34 .",
    "[ thm : secondmain ] let @xmath4 be the graph of a solvable palace and suppose that the reduction @xmath33 of  @xmath4 has exactly @xmath47 vertices , where @xmath48 . then @xmath4 can be solved in @xmath49 days by a linear strategy , and @xmath4 can not be solved in fewer days by any strategy .",
    "for example , a palace whose graph is a path is certainly reduced .",
    "theorem  [ thm : secondmain ] therefore implies that @xmath1 days are the minimum that will suffice for the @xmath0-room palace in blatter s version of the problem  @xcite .    the hypothesis @xmath48 rules out only the trivial cases where the original graph @xmath4 has either one or two vertices ; in these cases @xmath4 may be solved in one or two days respectively , and it is clear that no fewer days suffice .",
    "[ lemma : bound ] let @xmath50 and let @xmath51 be the star graph consisting of a central vertex @xmath44 together with @xmath52 disjoint paths of length @xmath6 beginning at @xmath44 .",
    "let @xmath53 be the vertices adjacent to @xmath44 and let @xmath54 be the vertices ( other than @xmath44 ) adjacent to @xmath55 , respectively . in any winning strategy for the prince , the prince must visit vertex @xmath44 on @xmath56 days . for each @xmath16 , there are two days on which he visits a vertex in the set @xmath57 .",
    "take a black - and - white colouring of @xmath51 , with the central vertex and the vertices @xmath13 coloured white , and the vertices @xmath15 coloured black .",
    "we may suppose that the princess is constrained to visit white vertices on even days .",
    "her strategy is a variation on the strategy used in the palace @xmath2 in figure  @xmath5 .",
    "if on day @xmath11 the princess is at    * vertex @xmath13 then she ( necessarily ) goes to @xmath15 on day @xmath14 ; * vertex @xmath15 then she goes to the central vertex unless the prince is due to visit the central vertex on day @xmath14 , in which case she goes to @xmath13 ; * the central vertex , then she goes to @xmath15 , where @xmath58 is whichever branch is the last that the prince is due to visit in the days after @xmath11 .",
    "it is clear that if the prince is to find a princess who is following this strategy , then he must do so in one of the vertices @xmath15 , on a day when she has just proceeded there from @xmath13 .",
    "hence , by the rules of movement of the princess , he must have visited all of the other branches @xmath59 for @xmath60 in the time since the princess last visited the central vertex .",
    "but the princess will always visit the central vertex on an even day , unless the prince is due to visit it that day .",
    "it follows that the prince must make at least @xmath61 visits to the central vertex on consecutive even days .",
    "the situation in which the princess is constrained to visit white vertices on odd days is similar , and so the prince must visit the centre at least @xmath56 times overall to defeat a princess with no parity constraint .        by lemma [ lemma : reduction ]",
    "we may assume that @xmath4 is reduced , and so @xmath4 itself has  @xmath47 vertices . by theorem  1 , @xmath4 is a tree . if @xmath62 then @xmath4 is a path , and it is easy to check that a linear strategy gives a solution of length @xmath49 , which is clearly optimal in either case .",
    "so we assume that @xmath63 .",
    "write @xmath64 for the set of leaf vertices , @xmath65 for the set of vertices which are adjacent to leaves , and  @xmath66 for the set of vertices which are in neither @xmath65 nor  @xmath64 .",
    "( we shall see shortly that  @xmath66 is the vertex set of a path in  @xmath4 , but this is not required until the final stage of the proof . )",
    "since @xmath4 is reduced , each vertex in @xmath65 has degree exactly @xmath6 .",
    "it is clear that exactly one of its neighbours is in @xmath64 ; we thus have @xmath67 , and since @xmath65 ,  @xmath64 and  @xmath66 are pairwise disjoint , it follows that @xmath68 .",
    "two vertices of  @xmath65 can not be adjacent since @xmath63 , and so each must have a neighbour in  @xmath66 .    if @xmath69 then the ball of radius @xmath6 about @xmath70 is a star graph of the type described in lemma [ lemma : bound ] .",
    "it follows from the lemma that each such vertex must be visited at least @xmath71 times in any winning strategy , where @xmath72 is the degree of the vertex @xmath70 . on the other hand , if @xmath73 then @xmath74 has a neighbour @xmath75 and another neighbour @xmath70 in @xmath66 .",
    "now @xmath76 forms a branch of the star graph centred on @xmath70 ; lemma [ lemma : bound ] tells us that any winning strategy must include two visits to @xmath76 .",
    "we therefore have a lower bound @xmath77 on the length of a winning strategy , given by @xmath78    consider the edges of @xmath4 . since it is a tree ,",
    "there are @xmath79 of them . of these , there are @xmath80 between @xmath65 and @xmath64 , and a further @xmath80 between @xmath66 and @xmath65 ; the rest connect elements of @xmath66 .",
    "it follows that the sum of vertex degrees of elements of @xmath66 is @xmath81 we therefore have @xmath82 as required .",
    "it remains to be shown that a linear strategy succeeds on day @xmath49 or earlier .",
    "let @xmath20 be a path of maximal length @xmath21 in @xmath4 .",
    "then it follows from theorem 1 that the @xmath83 vertices of @xmath20 which are neither leaves nor adjacent to leaves , are precisely the vertices of @xmath66 . in following a linear strategy , the prince starts at an element of @xmath65 , visits every element of @xmath65 exactly twice , never visits @xmath64 , and visits each vertex @xmath69 precisely @xmath84 times .",
    "it follows that this strategy achieves the lower bound @xmath77 , as claimed .",
    "we end by stressing the fact that if the prince follows a linear strategy then he never visits a leaf vertex .",
    "we leave it as an exercise for the reader to show that this property is shared by all optimal strategies .",
    "the proof of theorem  [ thm : secondmain ] now shows that the multiset of vertices visited by the prince in an optimal solution of a graph @xmath4 is uniquely determined by @xmath4 .",
    "this is consistent with a stronger conjecture : that the only optimal strategies are linear strategies .",
    "pursuit - evasion in a graph . in _ theory and applications of graphs ( proc .",
    ", western mich .",
    "kalamazoo , mich .",
    ", 1976)_. springer , berlin , 1978 , pp .  426441 .",
    "lecture notes in math .",
    ", vol . 642 ."
  ],
  "abstract_text": [
    "<S> this paper solves a pursuit  evasion problem in which a prince must find a princess who is constrained to move on each day from one vertex of a finite graph to another . unlike the related and much studied ` cops and robbers game ' </S>",
    "<S> , the prince has no knowledge of the position of the princess ; he may , however , visit any single room he wishes on each day . </S>",
    "<S> we characterize the graphs for which the prince has a winning strategy , and determine , for each such graph , the minimum number of days the prince requires to guarantee to find the princess . </S>"
  ]
}
{
  "article_text": [
    "let @xmath0 be a field . given an ideal @xmath1 , the _ monomial containment problem _ is to decide whether @xmath2 contains a monomial .",
    "equivalently , one is interested in whether the intersection @xmath3 of the zero set @xmath4 with the algebraic torus @xmath5 is empty .",
    "the monomial containment problem occurs frequently when determining tropical varieties  @xcite or when determining git - fans  @xcite .",
    "the usual approach is via grbner bases : @xmath2 contains a monomial if and only if the saturation @xmath6 contains @xmath7 .",
    "this can also be decided by a radical membership test : @xmath2 contains a monomial if and only if @xmath8 .    in the present paper , we provide a direct approach involving neither grbner basis computations nor ( sub-)resultants or factorization of polynomials .",
    "we consider more generally the following problem : given a polynomial @xmath9 , prove or disprove the existence of an element @xmath10 such that @xmath11 clearly , setting @xmath12 in , the existence of such @xmath13 is equivalent to the monomial containment problem .",
    "our algorithm , algorithm  [ algo : containsmonomial ] , proceeds in three steps:[list : intro ]    1 .",
    "compute finite subsets @xmath14 that are in _ triangular shape _ and polynomials @xmath15 such that the solutions of   are preserved , i.e. , the zero sets satisfy @xmath16 2 .   making certain variables @xmath17 invertible",
    ", we obtain a function field @xmath18 and an embedding @xmath19 $ ] such that the embedded equations  @xmath20 are _ dense _ , i.e. , each variable @xmath21 corresponds to an equation .",
    "3 .   then an element @xmath10 satisfying   exists if and only if the minimal polynomial of the class @xmath22/\\ < s_i \\>$ ] is not a monomial for some  @xmath23 .",
    "experiments with our implementation of algorithm  [ algo : containsmonomial ] suggest that it is competitive for certain classes of input ; for instance , it usually beats the grbner basis approach when a solution exists , i.e. , the ideal is monomial - free .",
    "note that the idea behind step ( i ) of the algorithm is quite common and similar concepts have been used by several authors for a more explicit study or even the explicit computation of solutions .",
    "see , e.g. ,  @xcite for a series of papers with grbner basis - free algorithms for systems of equations .",
    "the methods of wang  @xcite , thomas  @xcite as well as bchler , gerdt , lange - hegermann and robertz  @xcite can also deal with systems of equations and inequalities .",
    "they determine the solutions of such systems by means of certain triangular sets called _ simple systems _ ; their computation involves sub - resultant computations .",
    "all algorithms , including ours in step ( i ) , share the concept of _ triangular sets _",
    ", certain finite subsets @xmath24 such that @xmath25 holds .",
    "the @xmath26 then give insight into the structure of the solution set @xmath4 .",
    "as we are only interested in solvability of  , we will only need triangular sets with weaker properties but which can be computed more efficiently .",
    "the structure of this paper is as follows . in section  [ sec : algotriag ] , we show how to decompose the given ideal into a list of triangular sets with sufficient properties for our solvability test ; this is step ( i ) in the previous list .",
    "section  [ sec : algomonomial ] is devoted to steps ( ii ) and ( iii ) , i.e. , we show how to reduce the problem to a dense system over a function field and how to determine the solvability of such a system by means of minimal polynomial computations .",
    "explicit algorithms are given in each section . in section  [ sec :",
    "implem ] , we present our algorithm for the monomial containment problem .",
    "we compare the experimental running time of the ` perl ` implementation  @xcite of the algorithm to the grbner basis approach as well as to the methods of  @xcite .",
    "this paper builds on  @xcite .",
    "we would like to thank jrgen hausen for helpful discussions .",
    "in this section , we treat item ( i ) of the list on page  , i.e. , we decompose a system as in   with an ideal @xmath1 and a polynomial @xmath9 into a list of finite sets of polynomials that are in _",
    "triangular shape_. we show how to compute this decomposition by iteratively applying a set of operations that do not change the solvability of  .",
    "we first define the notion of _ triangular shape_. in the literature , they are also called _ triangular sets _  @xcite .",
    "[ def : triag ] fix the lexicographical ordering @xmath27 on @xmath28 .",
    "we call polynomials @xmath29 of _ triangular shape _ if for each @xmath30 , there is @xmath31 such that    1 .",
    "we have @xmath32 , 2 .",
    "@xmath33\\setminus\\kk[t_{k(f_j)+1},\\ldots , t_r]$ ] holds for each @xmath34 .",
    "we denote by @xmath35 the _",
    "( @xmath36-)degree _ of a polynomial @xmath37 considered as an element of the univariate polynomial ring @xmath38[t_i]$ ] .",
    "moreover , we write @xmath39.\\ ] ] for the leading coefficient of the polynomial @xmath40 considered in the ring @xmath41 $ ] .",
    "we now introduce the concept of _",
    "( semi- ) triangular systems_. assume @xmath2 is generated by polynomials @xmath29 .",
    "we sort them into two sets ( and keep track of the inequality  @xmath42 ) : polynomials that are already in triangular shape @xmath43 and remaining polynomials @xmath44 .    a _",
    "semi - triangular system _ ( of equations ) is a tuple @xmath45 consisting of finite subsets @xmath46 , @xmath47 , an integer @xmath48 and a polynomial @xmath9 such that    1 .",
    "@xmath43 is of triangular shape , 2 .",
    "we have @xmath49 for all @xmath50 , 3 .",
    "the set @xmath51 contains @xmath52 , 4 .",
    "for all @xmath53 and each @xmath54 we have @xmath55 .",
    "moreover , we call a semi - triangular system @xmath45 a _ triangular system _ if @xmath56 holds .",
    "[ ex : triag ] define in @xmath57 $ ] the subsets @xmath58 and @xmath59 where the @xmath40 and @xmath60 are @xmath61 then @xmath43 is of triangular shape and @xmath62 is a triangular system .",
    "a list @xmath63 of semi - triangular systems is called a _",
    "triangle mush_. two triangle mushes @xmath63 and @xmath64 are _ equivalent _ if we have @xmath65 with the _ solutions _",
    "@xmath66 for the case of a single element @xmath67 , we will use the same notions for @xmath68 instead of @xmath63 .",
    "[ ex : mush ] consider the triangle mush @xmath69 in @xmath70 where @xmath71 and @xmath44 consists of the two polynomials @xmath72 going through the different cases , one directly verifies that @xmath73 consists of all points @xmath74 and @xmath75 where @xmath76 .",
    "we will continue this example in  [ ex : containsmon ] .    given a triangle mush @xmath63 ,",
    "we are interested in operations that transform @xmath63 into an equivalent triangle mush @xmath64 that consists of triangular systems .    [ con : mushops ] let @xmath77 consist of a semi - triangular system .",
    "each of the following operations produces an equivalent triangle mush @xmath64",
    ".    1 .   _ case - by - case analysis _ : if @xmath78 $ ] and @xmath79 are such that @xmath80 and @xmath81 , then one may choose @xmath82 2 .   _ polynomial division",
    ": consider @xmath83 and @xmath84 with @xmath85 .",
    "assume that for some @xmath86 we have @xmath87\\ ] ] where @xmath88 and @xmath89 .",
    "then we choose the triangle mush @xmath90 3 .",
    "_ unused variable _",
    ": if @xmath91 and @xmath92 holds for each @xmath93 , then we may choose @xmath94 4 .",
    "_ sort polynomial _ :",
    "if @xmath91 holds and there is exactly one polynomial @xmath93 with @xmath95 and @xmath49 , then we may choose @xmath96 5 .",
    "_ last polynomial _ : assume @xmath91 and there is exactly one polynomial @xmath93 with @xmath95 . for @xmath97 , we write @xmath98 , \\\\",
    "\\fft^j & : = & \\fft \\cup \\{f_j\\ } , \\qquad \\ffs^j \\ \\ : = \\ \\ \\left ( \\ffs \\setminus \\{f\\ } \\right ) \\cup \\{a_{j+1},\\ldots , a_d\\}.\\end{aligned}\\ ] ] then we may choose @xmath99    one directly checks that in all cases @xmath64 is a triangle mush . for ( i ) , each @xmath100 either satisfies @xmath101 and @xmath102 or we have @xmath103 and @xmath81 implies @xmath104 , i.e. , @xmath105 .",
    "the inclusion @xmath106 is clear from @xmath80 .",
    "we come to ( ii ) .",
    "each @xmath100 satisfies @xmath107 for the reverse inclusion , we use @xmath85 to obtain @xmath108 .",
    "consequently , we may infer @xmath101 from @xmath109 operations ( iii ) and ( iv ) are clear . for ( v ) , we define the following triangle mushes for @xmath110 : @xmath111 observe that by an application of operation ( i ) , we obtain an equality of solutions @xmath112 as the ideal @xmath113 equals @xmath114 and by an application of operation ( iv ) , we obtain @xmath115 adding the equations stored in @xmath116 on both sides does not change the solution set , i.e. , @xmath117 is equal to @xmath118 .",
    "iteratively , we obtain @xmath119 .",
    "moreover , because of @xmath120 and operation ( iii ) : @xmath121 we conclude that @xmath122 equals @xmath123 which in turn is the same as the solution set  @xmath124 .",
    "the next algorithm transforms a triangle mush into an equivalent triangle mush consisting only of triangular systems .",
    "given a triangular system @xmath125 , the idea is to reduce @xmath126-degrees of an element @xmath127 of the unsorted polynomials @xmath44 by successive polynomial divisions ; afterwards , we move @xmath127 into the set of sorted polynomials  @xmath43 .    given a finite set of polynomials @xmath128 , its _ reduction _ is a finite subset @xmath129 such that @xmath130 where we denote by @xmath131 or @xmath132 the leading term of a polynomial @xmath127 or set of polynomials @xmath133 with respect to the ordering defined in section  [ sec : algotriag ] .",
    "computing the reduction of @xmath134 means successively applying the division algorithm to the elements of @xmath134 , see , e.g. ,  @xcite .",
    "[ algo : triang ] _ input : _ a triangle mush @xmath63 in @xmath28 .",
    "* while there is @xmath135 with @xmath91 , do : * * replace @xmath46 by its reduction @xmath136 .",
    "* * if there is @xmath53 with @xmath137 , then : * * * if there is @xmath138 with @xmath139 , then : * * * * perform a polynomial division of @xmath127 by @xmath140 in the univariate polynomial ring @xmath141 $ ] to obtain @xmath142 * * * * set @xmath143 $ ] and @xmath144 . with @xmath145 and",
    "@xmath146 $ ] we then have @xmath147.\\ ] ] * * * * redefine @xmath148 where @xmath149 * * * otherwise , if there is no such @xmath140 , then : * * * * redefine @xmath150 where with the notation of construction  [ con : mushops ]  ( v ) : @xmath151 * * otherwise , if there is no such @xmath127 , then : * * * redefine @xmath152 where @xmath153 . *",
    "define @xmath154 .    _",
    "output : _ @xmath64 .",
    "then @xmath64 is a triangle mush that is equivalent to @xmath63 and consists of triangular systems .",
    "note that we use only operations described in construction  [ con : mushops ] ; for instance , the replacement of @xmath63 by @xmath155 is an application of , first , operation ( i ) and then operation ( ii ) .",
    "therefore , @xmath64 is equivalent to  @xmath63 .",
    "as each @xmath156 satisfies @xmath157 , each element of @xmath44 is constant , i.e. , @xmath68 is triangular .",
    "it remains to show that algorithm  [ algo : triang ] terminates . to this end , consider the infinite digraph @xmath158 where @xmath159 is the set of all semi - triangular systems over @xmath28 and , given vertices @xmath160 , the edge @xmath161 exists if and only if algorithm  [ algo : triang ] replaces @xmath162 within a single iteration of the while - loop by a triangle mush @xmath64 with @xmath163 .",
    "let @xmath164 be the subgraph induced by all semi - triangular systems that are reachable by a path starting in  @xmath63 .",
    "consider a path @xmath165 in @xmath166 , i.e. , @xmath167 and @xmath168 for all  @xmath23 .",
    "we write @xmath169 . by construction",
    ", @xmath170 holds for all @xmath23 .",
    "this means there is @xmath171 such that @xmath172 for all @xmath173 and algorithm  [ algo : triang ] will perform the polynomial division @xmath174 , i.e. , operation ( ii ) of construction  [ con : mushops ] , for each such  @xmath26 .",
    "since always @xmath175 holds , we have @xmath176 and the reduction step only reduces @xmath177-degrees , the sequence @xmath178 is monotonically decreasing . as @xmath179 holds , this sequence either is finite or becomes stationary .",
    "assume the latter holds , i.e. , there is @xmath180 such that @xmath181 is valid for all @xmath182 .",
    "this implies , that for all @xmath182 in the polynomial division step only the `` @xmath183-part '' will be added , i.e. , @xmath184 in particular , the ideal @xmath185 is contained in @xmath186 for each @xmath182 . as @xmath28 is noetherian , the chain @xmath187 becomes stationary , i.e. , there is @xmath188 such that @xmath189 holds for all @xmath190",
    "moreover , as @xmath191 holds and @xmath192 , we have @xmath193 then @xmath183 can not be an element of @xmath194 for @xmath190 , a contradiction .",
    "thus , the sequence @xmath195 is finite . in turn , this forces the @xmath165 to be finite and acyclic .",
    "since each vertex @xmath196 is adjacent to only finitely many vertices , the previous argument shows that @xmath166 is a finite tree . in particular , the while - loop in algorithm  [ algo : triang ]",
    "will be executed at most @xmath197 times for each vertex @xmath196 , i.e. , the algorithm terminates .",
    "[ rem : simplesystems ] algorithm  [ algo : triang ] is similar to the decomposition into _ simple systems _ used in  @xcite .",
    "note , however , that they are interested in special properties ( e.g. , disjointness ) of this decomposition whereas ours is weaker but needs not use operations like @xmath198 or subresultant computations .",
    "an example computation with algorithm  [ algo : triang ] will be performed at the end of the next section in example  [ ex : containsmon ] .",
    "we now come to steps ( ii ) and ( iii ) in the list on page  : as before , we assume we are given an ideal @xmath199 and a polynomial @xmath9 and want to answer the question whether there is @xmath10 satisfying  .    using algorithm  [ algo : triang ] of the previous section with input @xmath2 and @xmath42 , we obtain an equivalent triangle mush @xmath63 that consists of triangular systems .",
    "note that we can replace each system @xmath200 with @xmath201 by the equivalent system @xmath202 ; systems with @xmath203 clearly are not solvable .",
    "then   can be rephrased as the question , whether there is @xmath10 such that @xmath204 holds for some @xmath205 .",
    "consequently , it suffices to present methods for the case @xmath206 of a single triangular system .",
    "here is an overview of the steps to test whether @xmath207 holds : @xmath208   &   \\ll[t_{k_1},\\ldots , t_{k_s } ]   &   \\ll[t_{k_1},\\ldots , t_{k_s}]/\\<\\fft'\\ >    \\\\",
    "\\text{\\rotatebox{90}{$\\subseteq$ } }   & \\text{\\rotatebox{90}{$\\subseteq$ } }   & \\text{\\rotatebox{90}{$\\subseteq$ } }   &   \\text{\\rotatebox{90}{$\\in$ } }   \\\\   s",
    "\\ar@{|->}[r]^{\\ref{prop : fieldchange } }   &   \\iota(s )   \\ar@{|->}[r]^(.4){\\ref{prop : normalize } }   &   ( \\emptyset , \\fft ' , k',g ' )   \\ar@{|->}[r]^(.6){\\ref{prop : solvable } }   &   \\b{g ' }   \\\\   & \\text{\\tiny dense }   &   \\text{\\tiny dense , monic }   &   \\text{\\tiny min.~polyn.~monomial ? }   } \\ ] ] here , @xmath18 is a suitable function field .",
    "the following proposition reduces the treatment of a triangular system in @xmath28 to a triangular , _ dense _ system in @xmath209 $ ] , i.e. , a triangular system @xmath210 such that the set @xmath211 coincides with @xmath212 .",
    "[ prop : fieldchange ] consider a triangular system @xmath213 in @xmath28 .",
    "write @xmath214 and let @xmath215 be as in definition  [ def : triag ] . under the canonical embedding @xmath216,\\qquad \\ll\\ ,",
    ": = \\ ,   \\kk\\left(t_{i};\\ i\\not\\in\\{k_1,\\ldots , k_s\\}\\right)\\ ] ] we obtain a triangular system @xmath217 that is dense in the polynomial ring @xmath209 $ ] .",
    "moreover , we have @xmath218    for the proof of proposition  [ prop : fieldchange ] we recall from  ( * ? ? ?",
    "vi ) the generalization of evaluation homomorphisms ; we will need this to control the elements in @xmath219 .",
    "a _ place _ is a @xmath220-homomorphism @xmath221 with a subring @xmath222 such that @xmath223    given @xmath224 , denote by @xmath225\\to \\overline \\kk$ ] the evaluation homomorphism . according to  ( * ? ? ?",
    "* thm .  5 in  vi.4 )",
    ", we have @xmath226 \\ar@{}|(.72)\\subseteq[r ] \\ar[dr]_{\\eps_{x } ' } & r_{\\eps_x } \\ar@{}|(.5)\\subseteq[r ] \\ar[d]^{\\eps_x } & \\b\\ll \\\\ & \\b\\kk & } \\ ] ] with a place @xmath227 extending @xmath228 .",
    "moreover , we define the _ domain _ of @xmath229 as the intersection @xmath230    [ lem : place ] in the situation of proposition  [ prop : fieldchange ] , assume we have @xmath231 .",
    "then the following claims hold .    1 .",
    "consider @xmath232 and @xmath233 satisfying @xmath234 .",
    "then there is @xmath235 such that @xmath236 .",
    "2 .   for each @xmath237 and each @xmath238",
    ", we have @xmath239 where the closure is taken in  @xmath240 .",
    "3 .   given @xmath241 ,",
    "write @xmath242 with @xmath243 , @xmath244",
    ". then there is @xmath237 such that @xmath245    for ( i ) , we relabel @xmath246 such that there is @xmath247 with @xmath248 for all @xmath249 and @xmath250 for @xmath251 . by definition of places , @xmath252 for all @xmath251 and thus @xmath253    for ( ii ) , given @xmath254 , we have @xmath255 , which means @xmath256 .",
    "write @xmath257 .",
    "from @xmath258 we infer that @xmath259 is an element of the closure @xmath260 in  @xmath261 .",
    "we come to ( iii ) .",
    "we first show by ( finite ) induction on @xmath262 , that there are @xmath263 such that for the evaluation homomorphism @xmath264\\,\\to\\ , \\b\\ll[t_1,\\ldots , t_m],\\qquad t_j\\,\\mapsto\\ , \\begin{cases } t_j , & m < j\\leq s,\\\\ t_j , & \\text{else } \\end{cases}\\ ] ] we have @xmath265 and @xmath266 holds for each @xmath267 .",
    "nothing is to prove for @xmath268 .",
    "assume now that this claim holds for a fixed @xmath269 ; we show that it also holds for @xmath270 .",
    "since we have @xmath271 , @xmath102 and @xmath272 for @xmath267 , setting @xmath273 , we obtain @xmath274 in particular , @xmath275 .",
    "therefore , the non - zero univariate polynomial @xmath276 $ ] can be decomposed into linear factors @xmath277 note that @xmath278 holds and thus @xmath279 .",
    "moreover , using again @xmath272 for @xmath280 and @xmath281 , we have @xmath282 where the vanishing is due to @xmath283 .",
    "the identity @xmath284 together with statement ( i ) provide us with @xmath235 such that @xmath285 .",
    "defining @xmath286 , the elements @xmath287 satisfy the claims : we have @xmath288 since @xmath289 and @xmath290 holds .    using this argument",
    ", we now have a map @xmath291 such that both @xmath292 and @xmath293 hold . setting @xmath294",
    ", we obtain @xmath295 because @xmath296 for each @xmath269 and @xmath297 implies in particular that @xmath298 . by construction",
    ", @xmath299 holds .",
    "clearly , the system is dense . by lemma  [ lem : place ]  ( iii )",
    ", @xmath207 implies that also @xmath300 is non - empty .",
    "if for each @xmath301 , there is @xmath302 , then lemma  [ lem : place ]  ( ii ) ensures @xmath303 and therefore @xmath207 .    it thus remains to prove that @xmath304 .",
    "let @xmath34 be an integer . if @xmath305 holds , clearly @xmath306 is non - empty .",
    "if @xmath307 , we consider the product @xmath127 of the minimal polynomial of @xmath308 over @xmath18 with its common denominator and thereby obtain a polynomial @xmath140 : @xmath309[x]\\end{aligned}\\ ] ] where @xmath310 . by definition ,",
    "each @xmath232 with @xmath311 must satisfy @xmath312 . for all @xmath313 , from @xmath314 $ ]",
    "we know that @xmath315 holds and therefore obtain @xmath316 .",
    "we have @xmath317 from which we infer that @xmath318 and therefore @xmath319 hold ; note that the inclusion @xmath320 is proper since @xmath321 .",
    "in other words , @xmath322 as finite intersection of supersets of non - empty open subsets , also the set @xmath323 is non - empty ; this completes the proof .    for the remainder of this section , we write @xmath18 for a field as in proposition  [ prop : fieldchange ] ; note , however , that the following claims also hold for any field  @xmath18 .",
    "the next step is to make all coefficients of a dense triangular system monic .",
    "we will call a triangular system @xmath202 in @xmath324 $ ] _ monic _ if @xmath325 for all @xmath50 . for instance , the system in example  [ ex : triag ] is monic .    [",
    "prop : normalize ] consider a triangular system @xmath213 in the ring @xmath326 that is dense in @xmath327 $ ] for a @xmath328 .",
    "assume there is @xmath50 with @xmath329 such that @xmath330 is monic .",
    "then the class @xmath331/\\<\\mathcal f\\>$ ] of @xmath332 is annihilated by a polynomial @xmath333\\setminus\\{0\\ }   \\qquad   \\text{with }   \\",
    "f\\,\\in\\ , \\ll[x],\\ b\\in \\ll^*\\ ] ] where @xmath86 is maximal with @xmath334 .",
    "moreover , writing @xmath335 with @xmath336 and @xmath337 $ ] such that @xmath338 , we have a monic dense triangular system @xmath339 that is equivalent to  @xmath68 : @xmath340.\\ ] ]    [ lem : ganz ]    1 .   consider a triangular system @xmath341 in the ring @xmath326 that is dense in @xmath327 $ ] for a @xmath328 .",
    "setting @xmath342/\\<\\fft\\>$ ] , the ring extension @xmath343 is integral .",
    "2 .   let @xmath343 be a ring extension , @xmath344 an ideal and @xmath345 such that @xmath346 is integral over @xmath18 .",
    "define @xmath347 and let @xmath333   \\qquad   \\text{with }",
    "\\    f\\,\\in\\ ,",
    "\\ll[x],\\ b\\in \\ll^*\\ ] ] be the minimal polynomial of @xmath348 where @xmath86 is maximal with @xmath334 . then @xmath349 yields @xmath350 .    for ( i ) , we write @xmath351 and assume @xmath352 .",
    "define @xmath353/\\<f_j,\\ldots , f_r\\>$ ] for @xmath354 and @xmath355 .",
    "the canonical projection @xmath356\\,\\to\\ , r_j\\ = \\",
    "r_{j+1}[t_j]/\\<\\b{f_j}\\ > ,   \\qquad   f\\,\\mapsto\\,f+\\<\\b{f_j}\\>\\ ] ] gives us @xmath357 .",
    "since @xmath358 $ ] and @xmath359 $ ] is monic , the generator @xmath360 is integral over @xmath361 and non - zero .",
    "this shows that in the chain @xmath362 each ring extension is integral , and so is @xmath363 .",
    "we come to ( ii ) .",
    "note that @xmath364 and @xmath365 ensures @xmath366 .",
    "we have @xmath367 observe that @xmath348 is not a zero - divisor : for each @xmath368 with @xmath369 , already @xmath370 holds .",
    "that is @xmath371 . setting @xmath372",
    ", we obtain @xmath373 from @xmath374    note that the system @xmath375 in @xmath376 $ ] is dense in @xmath377 $ ] . by lemma  [ lem : ganz ] ( i ) ,",
    "the residue class @xmath378 is integral over @xmath18 , i.e. , @xmath379 exists . using the inclusion of the ideal @xmath380 $ ] in the ideal @xmath381",
    ", we obtain @xmath382\\ ] ] from the second statement of lemma  [ lem : ganz ] .",
    "one directly verifies the equality of ideals @xmath383 in particular , @xmath384 holds with the dense triangular system @xmath339 .",
    "moreover , @xmath385 by choice of @xmath386 and @xmath339 is monic .    in order to make proposition  [ prop : normalize ] computational , we first show how one can compute the required minimal polynomials .",
    "[ algo : mipo ] _ input : _ an element @xmath387 where @xmath343 is an integral ring extension of finite dimension @xmath388 .",
    "* choosing a suitable @xmath18-vector space basis of @xmath389 , we consider @xmath390 $ ] as a @xmath391 matrix over  @xmath18 . *",
    "compute the kernel @xmath392 .",
    "* choose @xmath393 such that @xmath394 is minimal .",
    "* define @xmath395 $ ] .",
    "_ output : _",
    "@xmath396 $ ] .",
    "this is the minimal polynomial of @xmath387 .    by construction",
    ", we have @xmath397 . for",
    "the minimality , let @xmath398 $ ] be the minimal polynomial of @xmath42 .",
    "then @xmath399 , i.e. , @xmath400 .",
    "by choice of @xmath401 , we have @xmath402    in algorithm  [ algo : mipo ] , the element @xmath403 can be computed using gaussian elimination .    [ algo : normalize ] _ input : _ a triangular system @xmath341 that is dense in @xmath326 .",
    "we assume @xmath404 with @xmath405 .    * for @xmath406 down to @xmath407 , do : * * set @xmath408 $ ] and define the dense triangular system @xmath409 . * * decompose @xmath410 with @xmath411 and @xmath412 $ ] , @xmath337 $ ] such that @xmath413 . *",
    "* use algorithm  [ algo : mipo ] to compute the monic minimal polynomial @xmath414 $ ] of @xmath415/\\<\\fft^n\\>$ ] . * * decompose @xmath416 with @xmath417 $ ] , @xmath418 by choosing @xmath86 maximal with @xmath419 . * * define @xmath420 .",
    "this yields @xmath421 .",
    "* * redefine @xmath422 as @xmath423 $ ] .",
    "then @xmath424 is a monic triangular system that is dense in @xmath327 $ ] .    _",
    "output : _ @xmath339 .",
    "then @xmath339 is a monic triangular system that is dense in @xmath326 and is equivalent to  @xmath68 .",
    "note that the minimal polynomial @xmath425 exists by lemma  [ lem : ganz ]  ( i ) since the system is dense . by lemma  [ lem : ganz ]",
    "( ii ) , @xmath426/\\sqrt{\\<\\fft^n\\>}:h$ ] is invertible .",
    "the remaining steps are correct by proposition  [ prop : normalize ] .",
    "we now show that the existence of solutions of a monic , dense triangular system can be tested by determining a minimal polynomial .    [ prop : solvable ] let @xmath213 be a monic triangular system that is dense in @xmath326 .",
    "set @xmath427 .",
    "then @xmath343 is an integral extension and with the minimal polynomial @xmath396 $ ] of the residue class @xmath428 we have @xmath429\\ \\text { is not a monomial}.\\ ] ]    [ lem : solvable ] in the situation of proposition  [ prop : solvable ] , let @xmath430 $ ] be a polynomial with @xmath431",
    ". then there is @xmath247 such that @xmath432 .    by assumption",
    ", there is @xmath433 such that @xmath434 , i.e. , @xmath435 .",
    "the monic greatest common denominator @xmath436 $ ] satisfies @xmath437 since @xmath438 .",
    "by minimality of @xmath439 , we obtain @xmath440 .",
    "given @xmath441 , the corresponding evaluation homomorphism @xmath442 fits into the commutative diagram @xmath443^{\\eps_x }   \\ar[dr]_{f\\mapsto \\b f }   & &   \\b\\ll   \\\\   &   r   \\ar[ru]_{{\\varphi}_x }   &   } \\ ] ]    the fact , that @xmath343 is integral is lemma  [ lem : ganz ]  ( i ) . assume now @xmath444 holds for some @xmath445 , i.e. , @xmath428 is nilpotent . by the diagram",
    ", @xmath446 then also is nilpotent for each @xmath447 .",
    "this means @xmath448 .    for the reverse direction , assume @xmath448 holds for each @xmath447 , i.e. , by the diagram",
    ", we have @xmath449 with @xmath450 $ ] . by lemma  [ lem : solvable ] , there is @xmath247 such that @xmath451 .",
    "we now put the previous propositions and algorithms together to obtain an algorithm to check the existence of solutions of a triangular system .",
    "this completes steps ( ii ) and ( iii ) of the list on page  [ list : intro ] .",
    "[ algo : issolvable ] _ input : _ a triangular system @xmath452 in the ring @xmath28 .    *",
    "if @xmath453 is non - empty , then : * * return _ false_. * consider the triangular system @xmath454 that is dense in @xmath209 $ ] as in proposition  [ prop : fieldchange ] . *",
    "use algorithm  [ algo : normalize ] with input @xmath454 to obtain a monic , dense and equivalent system @xmath455 in @xmath209 $ ]",
    ". * use algorithm  [ algo : mipo ] to determine the minimal polynomial @xmath456 $ ] of the residue class @xmath457/\\<\\fft'\\>$ ] . * if @xmath458 is a monomial , then : * * return _ false_. * return _",
    "true_.    _ output : _ _ true _ if @xmath207 and _ false _ otherwise .    by proposition  [ prop : fieldchange ] ,",
    "algorithm  [ algo : mipo ] and algorithm  [ algo : normalize ] , @xmath339 is equivalent , monic and dense . proposition  [ prop : solvable ] delivers the stated solvability criterion .",
    "putting together steps ( i)(iii ) listed on page  , we are now able to test whether a given ideal @xmath1 contains some monomial @xmath459 , @xmath460 . afterwards , we explore the experimental running time of the second author s implementation  @xcite of the algorithm in ` perl ` on a series of random polynomials and compare it with buchberger s algorithm . moreover , we compare its efficiency on the examples ` polsys50 ` from  @xcite to algorithms listed in  ( * ? ? ?",
    "* tab .  1 ) .",
    "* define the semi - triangular system @xmath462 where @xmath463 , and @xmath464 .",
    "* let @xmath63 be the output of algorithm  [ algo : triang ] applied to  @xmath465 .",
    "* for each @xmath466 , do : * * if algorithm  [ algo : issolvable ] returns _ true _ ,",
    "then * * * return _ false_. * return _ true_.      [ rem : eff ] in the second line of algorithm  [ algo : containsmonomial ] it is more efficient to modify algorithm  [ algo : triang ] such that it checks for solutions immediately after determining a new semi - triangular system .",
    "[ ex : containsmon ] in the setting of example  [ ex : mush ] , we apply algorithm  [ algo : containsmonomial ] with remark  [ rem : eff ] to test whether the ideal @xmath469 contains a monomial . to this end , we apply algorithm  [ algo : triang ] to the triangle mush @xmath470 .",
    "it will first choose the polynomial division for @xmath471 to obtain @xmath472 this yields a new triangle mush @xmath473 where @xmath474 and @xmath475 .",
    "in the next step , we obtain triangle mushes @xmath476    algorithm  [ algo : issolvable ] verifies that the zero - set @xmath477 is empty by the following steps : first , algorithm  [ algo : normalize ] with input @xmath478 will return the monic system @xmath479 as @xmath480 and @xmath481 , we set @xmath482 and the ring @xmath483/\\<f_2,f_3\\>$ ] is integral over @xmath18 with @xmath18-basis @xmath484",
    ". we have @xmath485 by proposition  [ prop : solvable ] , the algorithm may remove this triangular set , i.e. , it remains to consider @xmath486 the reduction step will remove the redundant equation @xmath487 .",
    "the next steps provides us with @xmath488 by algorithm  [ algo : issolvable ] , the system @xmath489 has a solution : similar to before , algorithm  [ algo : normalize ] returns the monic system @xmath490 with @xmath491 and @xmath492 . setting @xmath493 , the ring extension @xmath494/\\<f_4,t_4\\>$ ] is integral with @xmath18-basis @xmath495 . since @xmath496 is non - zero , its minimal polynomial @xmath497 $ ] is not a monomial , i.e. , @xmath207 by proposition  [ prop : solvable ] .",
    "thus , @xmath470 has a solution as we already witnessed in example  [ ex : mush ] .",
    "in particular , @xmath2 contains no monomial , i.e. , the algorithm returns _",
    "false_.    the remainder of this note is devoted to experimental running times .",
    "we apply the ` perl ` implementation  @xcite of algorithm  [ algo : containsmonomial ] to a series of random ideals @xmath498 for fixed @xmath499 and running @xmath500 . moreover , setting @xmath501 , we distinguish the cases @xmath502 and @xmath503 .    to make the experimental running times better comparable to buchberger s grbner basis algorithm  @xcite",
    ", we have reimplemented the latter in ` perl ` in two variants : the first one is the classical version whereas the second one stops as soon as a monomial could be found . both algorithms as well as",
    "the testing sets @xmath134 are available at  @xcite .",
    "the following graphics show the averages over the successful tests .",
    "additionally , we have applied algorithm  [ algo : containsmonomial ] to the set of examples ` polsys50 ` from  @xcite ; its running time as well as the number of performed additions on a 2.66 ghz machine with time bound @xmath509 seconds and at most 1 gb of ram is listed in the left - hand side part of the following table .",
    "we write `` n / a '' if the computation was unsuccessful either due to time reasons or because it was out of memory .    moreover , in the right - hand part of the table , we list some of the running times listed in  ( * ? ? ?",
    "* table  1 ) on the same examples .",
    "we want to stress the fact that the two sides of this table are only marginally comparable : not only is the goal different ( @xcite deduces more information on the solutions whereas we test the existence of solutions ) , also the machines and maximal running times / memory are different .      1 & @xmath510 300 & n / a & n / a & & 3.5 & 0.4 & 3.0 + 2 & @xmath510 300 & n / a & n / a & & 7.4 & 7.6 & 7.1 + 3 & 30.89 & 1 & 4956 & & @xmath510 3h & 985.7 & 7538.0 + 4 & @xmath510 300 & n / a & n / a & & @xmath510 4 gb & @xmath510 4 gb & 0.2 + 5 & 0.62 & 0 & 2449 & & & + 6 & 2.25 & 1 & 4239 & & 0.4 & 0.1 & 0.2 + 7 & @xmath510 1 gb & n / a & n / a & & @xmath510 3h & 7352.6 & @xmath510 4 gb + 8 & 0.14 & 1 & 214 & & & + 9 & 11.75 & 1 & 10149 & & & + 10 & 0.21 & 1 & 517 & & & + 11 & 0.17 & 1 & 361 & & & + 12 & 0.74 & 1 & 1909 & & 0.5 & 0.3 & 0.4 + 13 & 0.15 & 1 & 214 & & & + 14 & 0.23 & 1 & 442 & & 0.5 & @xmath510 3h & 1.5 + 15 & 29.82 & 1 & 6655 & & & + 16 & @xmath510 300 & n / a & n / a & & 0.9 & 1.4 & 1.8 + 17 & @xmath510 300 & n / a & n / a & & 6.5 & 4.7 & 75.5 + 18 & 2.34 & 1 & 4324 & & 0.3 & 0.1 & 0.1 + 19 & @xmath510 300 & n / a & n / a & & 419.9 & 0.4 & 0.4 + 20 & 0.25 & 1 & 668 & & & + 21 & @xmath510 300 & n / a & n / a & & 1.6 & 86.6 & 4.5 + 22 & @xmath510 300 & n / a & n / a & & 0.6 & 1.2 & 1.5 + 23 & @xmath510 300 & n / a & n / a & & 0.4 & 0.1 & 29.5 + 24 & @xmath510 300 & n / a & n / a & & 1.2 & 1.3 & 1.0 + 25 & 0.25 & 1 & 537 & & 1.2 & @xmath510 3h & @xmath510 4 gb + 26 & 1.07 & 0 & 4610 & & & + 27 & 1.47 & 1 & 2320 & & & + 28 & 9.89 & 1 & 6632 & & & + 29 & 0.15 & 1 & 297 & & 0,3 & 0,3 & 0,3 + 30 & @xmath510 300 & n / a & n / a & & @xmath510 4 gb & @xmath510 4 gb & 45.3 + 31 & @xmath510 1 gb & n / a & n / a & & @xmath510 4 gb & @xmath510 4 gb & @xmath510 3h + 32 & 0.41 & 1 & 1200 & & & + 33 & @xmath510 1 gb & n / a & n / a & & 3.4 & 1.3 & 3.5 + 34 & @xmath510 300 & n / a & n / a & & 911.5 & @xmath510 3h & @xmath510 4 gb + 35 & @xmath510 300 & n / a & n / a & & 1.5 & 1.2 & 1.7 + 36 & 0.13 & 1 & 160 & & & + 37 & 0.27 & 1 & 633 & & & + 38 & 11.10 & 1 & 6878 & & & + 39 & @xmath510 300 & n / a & n / a & & 0.6 & 1.2 & 0.6 + 40 & @xmath510 300 & n / a & n / a & & & + 41 & @xmath510 300 & n / a & n / a & & 1.5 & 1.5 & 7.0 + 42 & 0.35 & 1 & 1028 & & & + 43 & @xmath510 1 gb & n / a & n / a & & 0.7 & 3.1 & 0.2 + 44 & @xmath510 300 & n / a & n / a & & 24.5 & 3.4 & 1.2 + 45 & @xmath510 300 & n / a & n / a & & & + 46 & @xmath510 300 & n / a & n / a & & & + 47 & 16.40 & 1 & 10465 & & 1.3 & 2.8 & 13.0 + 48 & 0.23 & 1 & 563 & & & + 49 & @xmath510 300 & n / a & n / a & & 0.3 & 610.2 & 0.5 +"
  ],
  "abstract_text": [
    "<S> we present an algorithm to decide whether a given ideal in the polynomial ring contains a monomial without using grbner bases , factorization or sub - resultant computations . </S>"
  ]
}
{
  "article_text": [
    "optimization of the direct marketing strategy with respect to each considered target individual is a pervasive challenge in marketing .",
    "even with growing amounts of data , the models that would allow marketers to reliably determine the best direct marketing actions are rare , and direct marketing decisions are frequently based on guesswork and intuition rather than data .    fortunately , due to recent advances in the methodology of reinforcement learning and autonomous planning as well as due to our improving understanding of what metrics are key in predicting the client s response to direct marketing",
    ", systems for automated direct marketing planning and control are slowly becoming a reality .    in direct marketing ,",
    "a company typically would like to know how it needs to engage with each client from its database to maximize the transaction rate during each subsequent period .",
    "the company would usually be able to engage with clients in several distinct ways ( action space ) .",
    "the company would also possess some information indicative of what action would maximize the long - term gain from the given client .",
    "the problem as presented yields itself well to markov decision process formulation , where metrics the company possesses characterize the state of the client , and the probability and amount of transaction vary based on the client s state and the company s action .",
    "the objective is to determine which action , given the client s state , would maximize the cumulative ( discounted ) gain from the client . as an example of markovian approach to marketing ,",
    "see @xcite .    unfortunately , coming up with a succinct and simultaneously rich characterization of the client is challenging .",
    "when such characterization is obtained , the state space often turns out to be extremely large , rendering model - based algortihms for solving mdps unusable .",
    "the rest of the paper is structured as follows .",
    "first , we explore how the state space of a customer can be summarized within a modified version of recency - frequency - monetary value framework .",
    "second , we discuss how model - free q - learning can be used to train a deep neural network ( also known as deep q - network or dqn ) based on historical information about the company s actions , the client s state transitions and response , and how the model s output can be interpreted as customer lifetime value of the given customer .",
    "third , we introduce a way to incorporate continuous action space into the deep q - learning framework , allowing a deep neural net to learn value function over both discrete and continuous action spaces ( mixed action space ) .",
    "finally , we train the model on mailing data from 1998 kdd cup competition , showing that the proposed approach can lead to a significant boost in clients response rates and donation amounts , and discuss how the methodology can be translated into a fully autonomous crm system .",
    "in marketing literature it is typical to summarize the state of a client using rfm framework - recency , frequency and monetary value .",
    "recency is the number of periods since the client last transacted ( note that _ recency _ - the conventional name for this metric - is misleading - _ greater _ recency implies _ smaller _ value of the metric ) .",
    "frequency is the number of transactions associated with the client during the observation window .",
    "monetary value is the mean monetary value of the client s transactions .    as argued in @xcite , the rfm framework , while based on easily accessible data , succintly summarizes a wealth of information about the client .",
    "for example , if the client has been transacting very frequently , but recently has remained inactive for a long period of time , we would quickly begin to suspect that something happened and would think that the likelihood of the client s continuing to transact further is low . at the same time , we would not be concerned about similar period of silence from an individual who does not transact frequently .",
    "we choose to complement rfm framework with two additional metrics - frequency and recency of past marketing interactions ( i ) , which would allow us to keep in check the potential deterring effect of marketing engagements that are too frequent or too concentrated in time .    together , rfm - i metrics can serve as rich descriptors of the customer s state space based on data that is easily accessible in direct marketing settings .",
    "however , if more information on clients is available , one should feel free to incorporate it in the modeling process described below , which could accomodate thousands of variables .",
    "we now proceed to discuss how reinforcement learning can be used to build a connection between rfm - i ( or potentially other metrics ) and the expected reward ( i.e. gain from the client ) .",
    "the starting point of our analysis is the idea that the process of company s interaction with its customer base can be represented as an mdp . at each time - step the company selects an action @xmath0 from the set of available actions , @xmath1 ( e.g. mailing types ) .",
    "the company observes the rfm - i state of the client .",
    "once the action has been selected , the company observes the reward ( e.g. whether the client responds to marketing action ) , as well as the client s new rmf - i state .",
    "company s goal is to select such action that would maximize future rewards for each client .",
    "one approach to select such actions would be to use traditional model - based policy - search methods .",
    "however , these require explicit calculation of state transition probabilities and are of little use , as rfm - i state space can be very large .",
    "an alternative is to use a model - free reinforcement learning method , e.g. q - learning , which can learn from observed samples directly , without a need to construct the model of the environment .",
    "this is our preferred approach .",
    "following @xcite , we assume that future rewards are discounted by a factor of @xmath2 per time - step .",
    "we will have to estimate the optimal action - value function @xmath3 , which is defined as the maximum expected return achievable , after seeing the client s state @xmath4 and then taking some action @xmath5 .",
    "the optimal action - value function obeys the bellman equation .",
    "intuitively , if the optimal value of the state @xmath6 at the next time - step was known for all possible actions , then the optimal strategy is to select the action @xmath7 maximizing the expected value of @xmath8 .",
    "@xmath9    reinforcement learning aims to estimate the value function by using bellman equation as an iterative update of the following form :    @xmath10    where @xmath11 will aproach @xmath12 as @xmath13 goes to infinity ( @xmath14 is the learning rate ) .    while this algorithm would converge to the optimal action - value function , this approach is impractical because the action - value function is estimated separately for each state without generalization .",
    "as already mentioned , state space as described by rfm - i framework can be very large , and so this becomes a particular problem .    instead",
    ", a function approximator can be used to estimate the action - value function , @xmath15 .",
    "the model we utilize is a deep neural net ( where ` deep ' simply refers to multiple hidden layers of the net ) .",
    "it is trained with q - learning , with mini - batch gradient descent to update the weights , by minimizing a sequence of loss functions @xmath16 that changes at each iteration @xmath13 :    @xmath17,\\ ] ]    where @xmath18    once the network has been trained , we can estimate @xmath3 for a client in a given state and then extract the optimal action .",
    "reinforcement learning has been shown to be unstable or even to diverge when the q - value function is approximated with non - linear functions ( including neural networks ) @xcite .",
    "this instability is rooted in the difference between assumptions made by supervised learning and reinforcement learning . supervised learning assumes that data samples are independently drawn from a fixed underlying distribution , while reinforcement learning deals with sequences of correlated states sampled from a distribution that changes as the agent adopts new policies over time .    to mitigate such issues ,",
    "deep q - learning uses a mechanism called experience replay @xcite : the dqn is trained on episodes sampled uniformly from a replay memory , therefore smoothing the data distribution and removing correlations in the sequence of observations .",
    "we use historical records for learning in our experiments and are thus able to randomly sample previous transitions , smoothing the training distribution over many past behaviors . by doing this",
    "we effectively implement a version of experience replay , which allows us to mitigate the problems of correlated data .",
    "use of a separate network for generating the targets in the q - learning update , coupled with only periodical updates of the action - value targets , is another trick that can be helpful in mitigating the issue , as most recently proposed in @xcite .",
    "more precisely , every @xmath19 number of updates the network q is cloned to obtain a target network q * , which is then used for generating @xmath20 targets for the updates to q.",
    "if we consider bellman equation ( 1 ) carefully , it is apparent that the estimated q - value function on monetary reward gives us expected future discounted financial flow from the client in the given state for each action we could take at the current period , assuming we act optimally in all subsequent periods .",
    "this is precisely how we would define the expected customer lifetime value ( clv ) from the current state of the client and on ( sometimes also referred to as _ residual _",
    "clv @xcite ) , conditional on the actions taken with respect to the client .",
    "thus , when deciding which action to take within the deep q - learning framework , we are in fact using clv maximization as our guiding principle - which fully follows business rationale .",
    "this interpretation renders deep q - learning an especially rich framework for business applications .",
    "the proposed deep reinforcement learning approach compares favorably to other clv modeling techniques in allowing us to incorporate marketing actions into the decision making process .",
    "other clv modeling techniques may offer greater interpretability due to a particular parametrization @xcite , however , they often become mathematically unwieldy when state and action spaces grow .",
    "moreover , other approaches may be at a disadvantage when value function is highly non - linear , whereas a multilayer neural network , by a universal approximation theorem @xcite , can theoretically fit any function arbitrarily well , no matter how complex .",
    "the expressiveness and computational efficiency thus make deep q - learning an attractive instrument for real - life autonomous direct marketing control .",
    "typically , deep q - network takes state variables as input and has output neurons - each calculating the value of the corresponding discrete action , given the input state @xcite .",
    "if the action space is continuous , two approaches are possible .",
    "first , one could discretize the continuous action space , increasing the number of output neurons . however , if the actions are characterized by multiple continuous variables , this could lead to either or both the loss of valuable information and an extremely large action space @xcite .    luckily , deep neural networks allow for another approach , where continuous variables characterizing the actions can enter as input of the neural net together with state space variables . this way",
    "the neural net approximates the value of each discrete action given ( a ) its continuous characteristics and ( b ) the state space .",
    "one challenge with this approach is the need to calculate @xmath21 over action space in the iterative bellman updates or @xmath22 when extracting optimal policy .",
    "when action space is discrete , we simply choose the action that corresponds to the output neuron with the greatest value .",
    "in the case of continuous actions we need to first find the maximum value of each discrete action ( output neuron ) over the continuous action space , while holding the state space fixed .",
    "then , as in the discrete case , we choose the action corresponding to the maximum value neuron .",
    "while optimizing over the continuous action space may sound to be a cumbersome task , chain rule used in backpropagation algorithm allows us to easily calculate gradients of the q - values on the continuous action space input variables .",
    "this enables us to use efficient gradient descent methods to estimate what continuous action variables maximize the expected value of the given discrete action .",
    "this approach proves to be viable and constitutes a novel contribution of the paper .",
    "we use 1998 kdd cup competition mailing data in the experiment @xcite .",
    "it represents a record of donation - seeking mailings to the total of 95,412 clients during 23 distinct periods .",
    "the type of mailing changed from period to period .",
    "we observe 12 discrete possible actions ( 11 mailing types + inaction ) .",
    "inaction corresponds to missing action indicator in the kdd cup data set .",
    "the continuous aspect of the action is the number of the month when the mailing was sent ( essentially a discrete value , but , as a toy example , we treat it as a continuous variable ) .",
    "we extract from the available data the total of 22 * 95,412 state transitions . for each state transition we know rfm - i metrics ( how recently the person donated last , how frequently he donated , his average donation amount , how recently and how many times we sent him the mail ) , discrete action taken by the company , a continuous aspect of the action and a reward observed ( monetary value of the donation ) .",
    "a sample record looks as follows : @xmath23\\ ] ]    we then use deep q - learning to train a model as explained in the previous section , and extract the optimal policy for each of the starting states in the state transition chains we used in training the model .",
    "we run comparison on policies derived from two different models : one trained on discrete actions only ( ignoring the continuous action space during training ) , second trained on discrete _ and _ continuous action space .",
    "when we extract the optimal policy in discrete _ and _ continuous action space , we round the continuous action space variable(s ) to enable matching with historical records for policy evaluation .",
    "the network architecture is as follows : 2 hidden layers ( 40 and 15 neurons respectively with relu activation function of form @xmath24 ) , 12 regression output neurons - one for each discrete action ( including inaction - action 0 ) , 5 or 6 variable inputs ( 5 rfm - i state variables + 1 continuous action variable ) , depending on whether we include the continuous action variable in the modeling process . for the discrete action model input space",
    "is limited to 5 state variables .",
    "each model is trained with mini - batch gradient descent ( batches of 200 transitions each ) using rmsprop algorithm @xcite for 100 epochs , where epoch marks a point when each sample in the training data set has been sampled once ( training length of 100 epochs means that each observation contributed to gradient update of the neural network 100 times ) .",
    "we begin with 0.001 learning rate and use 0.99 decay rate ( learning rate is multiplied by decay rate every epoch , allowing us to further fine - tune the learning process as we observe more samples ) .",
    "we use 0.9 discount rate . additionally , as a way to facilitate convergence ( discussed earlier ) , every @xmath25 iterations we clone the network q to obtain a target network q * , which we then use for generating @xmath20 components of updates to q.    to evaluate the effectiveness of the resulting policy , we compare ( a ) the average response rate and donation amount in situations ( groups of interactions between the company and its clients ) when actions of the company were aligned with model s recommendations to ( b ) the average response rate and donation amount in those instances when company s actions deviated from the model s recommendations .",
    "we also compare the performance of the extracted policy to additional benchmarks : ( a ) reward from a random policy , ( b ) reward of always taking best - performing action - mailing type number 4 - which is also a policy selected by a simple regression model approximating donation amounts on rfm - i input state space , and ( c ) average reward achieved across the dataset .    during training , we select the best model by evaluating the resulting policy , as described above , on a hold - out validation set .",
    "the training set is 1.6 million randomly sampled transition tuples .",
    "the validation set is approximately 0.5 million transition tuples .",
    "note that while we use a validation set to pick the best model during training , the final evaluation is run on the full data set ( to see how the policy is doing for the whole customer base ) .",
    "the obtained metrics follow almost exactly those calculated exclusively on the validation data set .",
    "we find that the average response rate and monetary reward ( donation amount ) are significantly higher when the policy is adhered to - for both trained models .",
    "table 1 presents the evaluation results .    however , the estimation process became much less stable with incorporation of continuous action space - possibly due to correlations between continuous action inputs and the network outputs - despite measures undertaken to facilitate convergence ( e.g. experience replay and a lag in the model update , as described previously ) .",
    "in particular , the success of convergence would heavily depend on specific weight initializations of the network parameters .    as a result ,",
    "policy from the model trained on continuous and discrete action space achieved less of an improvement in the performance metrics , compared to policy from the simpler discrete - action - only model .",
    "nevertheless , we show that training dqn directly on the continuous action space is a viable and effective approach that should be explored further .",
    "the issue with convergence indicates a need for further research on ways to ensure stability when training deep neural nets .    in presenting the results",
    ", we focus only on the better performing discrete action model .",
    "we summarize the derived policy in table 2 .",
    "figure 1 shows the training progress .",
    "finally , we explore how the output of the model can be examined visually .",
    "figures 2 - 8 show the expected cumulative discounted reward associated with each action , given the particular dimension(s ) of the client s state .",
    "lines / surfaces in these plots correspond to actions .",
    "we would need a 5-dimensional plot to summarize the full decision surface learned by the neural network ( 5 state dimensions ) .",
    "this is challenging , and thus we resort to lower - dimensional plots .",
    "the plots are also curious in their own right in showing how the reward changes with rfm - i metrics .",
    "for example , it can be clearly seen that too many marketing interactions lead to a decrease in donations , and that long inactivity , as captured by recency metric , hints at decreased response likelihood for clients who transact frequently .",
    "the model was also able to detect increased reward associated with sending ` thank you ' note ( action 7 ) when the client transacted very recently and decreased value of such action when the client has not transacted for some time .",
    "the nonlinear shape of the value function suggests that models simpler than dqn would have hard time fitting all the intricacies of clv over the customer state space .",
    "so far we have discussed the machinery necessary to estimate the long - term value associated with each action a company may take with respect to each client , based on the historical data that is available .",
    "only a small step is needed to make the system autonomous - that is , capable of running on its own even in the cold start situations .",
    "the idea is to enable the sytem to build its own database of observations for training through random exploration . in other words ,",
    "as the system is launched and has no observation history , it takes an action at random with respect to each client with probability 1 . over time , as the model is trained on collected observations , the probability of taking a random action begins to decrease , whereas the probability of taking the action deemed optimal by the model goes up , as the model begins to exploit collected information .",
    "it is also important to keep random exploration on with some small probability even when a significant amount of history has been accumulated - to ensure the system can detect changes in effectiveness of actions .",
    "some additional modifications can make the system more effective .",
    "below we provide a non - exhaustive list .    *",
    "a custom policy could be defined for the system to pursue before enough observations have been accumulated .",
    "* some more sophisticated exploration strategies may be implemented - e.g. encouraging exploration of actions that have been relatively ` underobserved ' .",
    "* additional constraints may be imposed - e.g. not to take a particular action unless a condition has been met ( not sending ` thank you ' note unless a customer has transacted recently ) etc .",
    "* actions that are significantly underperforming may be dropped from the consideration pool .    as the system begins to accumulate observations , experience replay mechnanism kicks in .",
    "observations are stored in replay memory and are then sampled randomly for mini - batch gradient descent updates . as noted earlier ,",
    "this allows us to smooth the data distribution and mitigate the problems of correlated data .",
    "as the training proceeds , the quality of recomended policy improves .",
    "it can thus be seen that training of the deep q - network from scratch fits well into the autonomous crm control process .",
    "note that the described system is autonomous _ strictly given the specified action space _ - i.e. a marketer needs to first determine the actions that can be taken by the system , which would typically involve the creative human design process ( e.g. writing up the text of the mailed ad , designing the visuals etc . ) .",
    "while such pre - defined action space is a conventional prerequisite for many systems referred to as ` autonomous ' in the literature , devising a way for the system to come up with _ new _ actions on its own is a very promising field of research and is a necessary step towards a system that is autonomous in the true sense of the word .",
    "this issue , however , is beyond the scope of this paper .",
    "we have shown that by combining rfm - i client space parametrization with deep q - learning in planning the direct marketing actions , significant improvements in the client response rate and donation amounts can be achieved ( over 50% for the particular dataset we experimented with ) .",
    "we also propose a novel method for incorporating continuous actions into the deep neural net training procedure .",
    "however , further advances in procedures for training deep neural nets are needed to ensure consistent convergence when training dqn directly on the continuous action space .",
    "we note that the q - value function approximated by the deep neural net on monetary reward data constitutes an estimate of action - dependent ( residual ) customer lifetime value ( clv ) , which is precisely the criterion we want to use in selecting the optimal marketing actions .",
    "clv could also be a useful metric for other purposes , e.g. corporate valuation @xcite , segmentation etc .",
    "thus , a trained deep neural net that works as a plug - in estimator of clv for any client we may observe in the data can prove to be an extremely valuable tool in multiple business settings .",
    "the results suggest that once possible interactions with clients have been defined and a record of such interactions has been accumulated , deep q - learning on rfm - i metrics space constitutes an effective approach to direct marketing control .",
    "moreover , as discussed , the system can be easily set up to build its own database of observations for training through random exploration , allowing it to work in cold start situations - i.e. without existing historical records , and thus rendering it autonomous .",
    "it is also clear that there is space for more research in the field .",
    "for example , further improvements in techniques for training the deep neural nets are necessary to ensure stable convergence of the more complex dqn models .",
    "another interesting challenge is the extension of the proposed approach to more complex domains - e.g. e - commerce with numerous product categories and a variety of actions that are specific to particular purchase histories of clients .",
    "finally , devising algorithms that would allow the system to come up with new actions is an extremely promising field of research .",
    "mnih , v. , kavukcuoglu , k. , silver , d. , rusu , a.  a. , veness , j. , bellemare , m.  g. , graves , a. , riedmiller , m. , fidjeland , a.  k. , ostrovski , g. , petersen , s. , beattie , c. , sadik , a. , antonoglou , i. , king , h. , kumaran , d. , wierstra , d. , legg , s. , hassabis , d. , 02 2015 . human - level control through deep reinforcement learning .",
    "nature 518  ( 7540 ) , 529533 ."
  ],
  "abstract_text": [
    "<S> the paper outlines a framework for autonomous control of a crm ( customer relationship management ) system . </S>",
    "<S> first , it explores how a modified version of the widely accepted recency - frequency - monetary value system of metrics can be used to define the state space of clients or donors . </S>",
    "<S> second , it describes a procedure to determine the optimal direct marketing action in discrete and continuous action space for the given individual , based on his position in the state space . </S>",
    "<S> the procedure involves the use of model - free q - learning to train a deep neural network that relates a client s position in the state space to rewards associated with possible marketing actions . </S>",
    "<S> the estimated value function over the client state space can be interpreted as customer lifetime value , and thus allows for a quick plug - in estimation of clv for a given client . </S>",
    "<S> experimental results are presented , based on kdd cup 1998 mailing dataset of donation solicitations .    direct marketing , crm , clv , rfm , deep reinforcement learning , autonomous control </S>"
  ]
}
{
  "article_text": [
    "minimal entailment is the most important special case of circumscription , which in turn is one of the main formalisms for non - monotonic reasoning @xcite .",
    "the key intuition behind minimal entailment is the notion of minimal models , providing as few exceptions as possible .",
    "apart from its foundational relation to human reasoning , minimal entailment has wide - spread applications , e.g.  in ai , description logics @xcite and sat solving @xcite . while the complexity of non - monotonic logics has been thoroughly studied  cf .",
    "e.g.  the recent papers @xcite or the survey @xcite  considerably less is known about the complexity of theorem proving in these logics .",
    "this is despite the fact that a number of quite different formalisms have been introduced for circumscription and minimal entailment @xcite .",
    "while proof complexity has traditionally focused on proof systems for classical propositional logic , there has been remarkable interest in proof complexity of non - classical logics during the last decade .",
    "a number of exciting results have been obtained  in particular for modal and intuitionistic logics @xcite  and interesting phenomena have been observed that show a quite different picture from classical proof complexity , cf .",
    "@xcite for a survey .    in this paper",
    "we focus our attention at two very different formalisms for minimal entailment : a sequent calculus and a tableau system , both developed by olivetti .",
    "these systems are very natural and elegant , and in fact they were both inspired by their classical propositional counterparts : gentzen s and smullyan s analytic tableau .",
    "our main contribution is to show a p - simulation of by , proofs in can be efficiently transformed into -derivations .",
    "this answers an open question by olivetti on the relationship between these two calculi . at first sight",
    ", our result might not appear unexpected as sequent calculi are usually stronger than tableau systems , cf .",
    "e.g. @xcite . however , the situation is more complicated here , and even olivetti himself did not seem to have a clear conjecture as to whether such a simulation should be expected , cf .  the remark after theorem  8 in @xcite .",
    "the reason for the complication lies in the nature of the tableau : while rules in are ` local ' , they refer to only two previous sequents in the proof , the conditions to close branches in are ` global ' as they refer to other branches in the tableau , and this reference is even recursive . the trick we use to overcome this difficulty is to annotate nodes in the tableau with additional information that ` localises ' the global information .",
    "this annotation is possible in polynomial time .",
    "the annotated nodes are then translated into minimal entailment sequents that form the skeleton of the derivation for the p - simulation .",
    "in addition to the p - simulation of by , we obtain an exponential separation between the two systems , there are formulas which have polynomial - size proofs in , but require exponential - size tableaux . in proof complexity ,",
    "lower bounds and separations are usually much harder to show than simulations , and indeed there are famous examples where simulations have been known for a long time , but separations are currently out of reach , cf .",
    "in contrast , the situation is opposite here : while the separation carries over rather straightforwardly from the comparison between classical tableau and , the proof of the simulation result is technically very involved .",
    "this paper is organised as follows .",
    "we start by recalling basic definitions from minimal entailment and proof complexity , and explaining olivetti s systems and for minimal entailment @xcite .",
    "this is followed by two sections containing the p - simulation and the separation of and . in the last section ,",
    "we conclude by placing our results into the global picture of proof complexity research on circumscription and non - monotonic logics .",
    "our propositional language contains the logical symbols @xmath0 . for a set of formulae @xmath1",
    ", @xmath2 is the set of all atoms that occur in @xmath1 . for a set @xmath3 of atoms we set @xmath4 .",
    "disjoint union of two sets @xmath5 and @xmath6 is denoted by @xmath7 .",
    "minimal entailment is a form of non - monotonic reasoning developed as a special case of mccarthy s circumscription @xcite .",
    "minimal entailment comes both in a propositional and a first - order variant .",
    "here we consider only the version of minimal entailment for propositional logic .",
    "we identify models with sets of positive atoms and use the partial ordering @xmath8 based on inclusion .",
    "this gives rise to a natural notion of minimal model for a set of formulae , in which the number of positive atoms is minimised with respect to inclusion .",
    "for a set of propositional formulae @xmath9 we say that @xmath9 minimally entails a formula @xmath10 if all minimal models of @xmath9 also satisfies @xmath10 .",
    "we denote this entailment by @xmath11 .      a _ proof system _",
    "@xcite for a language @xmath12 over alphabet @xmath9 is a polynomial - time computable partial function @xmath13 with @xmath14",
    ". an _ @xmath15-proof _ of string @xmath16 is a string @xmath17 such that @xmath18 .",
    "proof systems are compared by simulations .",
    "we say that a proof system @xmath15 _ simulates _",
    "@xmath19 ( @xmath20 ) if there exists a polynomial @xmath21 such that for every @xmath19-proof @xmath22 there is an @xmath15-proof @xmath23 with @xmath24 and @xmath25 .",
    "if @xmath23 can even be constructed from @xmath22 in polynomial time , then we say that @xmath15 _ p - simulates _",
    "@xmath19 ( @xmath26 ) .",
    "two proof systems @xmath15 and @xmath19 are _",
    "( p-)equivalent _ ( @xmath27 ) if they mutually ( p-)simulate each other .",
    "the sequent calculus of _ gentzen s system _ is one of the historically first and best studied proof systems @xcite . in a sequent is usually written in the form @xmath28 .",
    "formally , a _",
    "sequent _ is a pair ( @xmath9,@xmath29 ) with @xmath9 and @xmath29 finite sets of formulae . in classical logic @xmath28",
    "is true if every model for @xmath30 is also a model of @xmath31 , where the disjunction of the empty set is taken as @xmath32 and the conjunction as @xmath33 .",
    "the system can be used both for propositional and first - order logic ; the propositional rules are displayed in fig .",
    "[ fig_lk ] .",
    "notice that the rules here do not contain structural rules for contraction or exchange .",
    "these come for free as we chose to operate with sets of formulae rather than sequences .",
    "note the soundness of rule ( @xmath34 ) , which gives us monotonicity of classical propositional logic .",
    "in this section we review two proof systems for minimal entailment , which were developed by olivetti .",
    "we start with the sequent calculus .",
    "semantically , a minimal entailment sequent @xmath35 is true if and only if in all minimals models of @xmath36 the formula @xmath37 is satisfied .",
    "in addition to all axioms and rules from , the calculus comprises the axioms and rules detailed in figure  [ fig_mlk ] . in the axiom , the notion of a _ positive _ atom @xmath21 in a formula @xmath10 is defined inductively by counting the number of negations and implications in @xmath10 on top of @xmath21 ( cf .",
    "@xcite for the precise definition ) .    *",
    "( theorem 8 in @xcite ) * [ thm_mlk_comp ] a sequent @xmath38 is true iff it is derivable in .",
    "in addition to the sequent calculus , olivetti developed a tableau calculus for minimal entailment @xcite . here",
    "we will refer to this calculus as .",
    "a tableau is a rooted tree where nodes are labelled with formulae .    [",
    "cols=\"<,<,<\",options=\"header \" , ]     in , the nodes are labelled with formulae that are signed with the symbol @xmath39 or @xmath40 .",
    "the combination of the sign and the top - most connective allows us to classify signed formulas into @xmath41 or @xmath42-type formulae as detailed in figure  [ fig_contype ] .",
    "intuitively , for an @xmath41-type formula , a branch in the tableau is augmented by @xmath43 , whereas for a @xmath42-type formula it splits according to @xmath44 .",
    "nodes in the tableau can be either marked or unmarked . for a sequent @xmath35 ,",
    "an tableau is constructed by the following process .",
    "we start from an initial tableau consisting of a single branch of unmarked formulae , which are exactly all formulae @xmath45 , signed as @xmath46 , and all formulae @xmath47 , signed as @xmath48 . for a tableau and a branch @xmath49 in this tableau we can extend the tableau by two rules :    *",
    "if formula @xmath10 is an unmarked node in @xmath49 of type @xmath41 , then mark @xmath10 and add the two unmarked nodes @xmath50 and @xmath51 to the branch . *",
    "if formula @xmath10 is an unmarked node in @xmath49 of type @xmath42 , then mark @xmath10 and split @xmath49 into two branches @xmath52 with unmarked @xmath53 and unmarked @xmath54 .",
    "a branch @xmath49 is _ completed _ if and only if all unmarked formulae on the branch are literals .",
    "a branch @xmath49 is _ closed _ if and only if it satisfies at least one of the following conditions :    1 .   for some formula @xmath5 , @xmath55 and @xmath56",
    "are nodes of @xmath49 ( @xmath39-closed ) .",
    "2 .   for some formula @xmath5 , @xmath57 and @xmath58",
    "are nodes of @xmath49 ( @xmath40-closed ) .",
    "3 .   for some formula @xmath5 , @xmath55 and @xmath57",
    "are nodes of @xmath49 ( @xmath59-closed ) .    for branch @xmath49 let @xmath60 is an atom and @xmath61 is a node in @xmath62 .",
    "we define two types of _ ignorable branches : _    1 .",
    "@xmath49 is an _",
    "ignorable type-1 branch _ if @xmath49 is completed and there is an atom @xmath63 such that @xmath64 is a node in @xmath49 , but @xmath65 does not appear in @xmath49 .",
    "@xmath49 is an _",
    "ignorable type-2 branch _ if there is another branch @xmath66 in the tableau that is completed but not @xmath39-closed , such that @xmath67 .",
    "* ( theorem 2 in @xcite ) * the sequent @xmath35 is true if and only if there is an tableau in which every branch is closed or ignorable .",
    "we will work towards a simulation of the tableau system by the sequent system . in preparation for this",
    "a few lemmas are needed .",
    "we also add more information to the nodes ( this can all be done in polynomial time ) .",
    "we start with a fact about ( for a proof see @xcite ) .",
    "[ thm_shortlk ] for sets of formulae @xmath68 and disjoints sets of atoms",
    "@xmath69 with @xmath70 we can efficiently construct polynomial - size -proofs of @xmath71 when the sequent is true .",
    "we also need to derive a way of weakening in , and we show this in the next lemma .",
    "[ thm_mlk_weak ] from a sequent @xmath35 with non - empty @xmath29 we can derive @xmath72 in a polynomial - size -proof for any set of formulae @xmath1 .    we take @xmath47 , and from the @xmath73-axiom we get @xmath74 . from weakening in",
    "we obtain @xmath75 . using rule ( @xmath76 )",
    "we obtain @xmath77 .",
    "we then derive @xmath72 using the ( @xmath78-cut ) rule .",
    "the proof makes essential use of the ( m - cut ) rule . as a result",
    "is not complete without ( m - cut ) ; e.g.  the sequent @xmath79 can not be derived . a discussion on cut elimination in is given in @xcite .",
    "[ thm_abshort ]    let @xmath80 be an @xmath41-type formula with @xmath81 , @xmath82 , and let @xmath83 be an @xmath41-type formula with @xmath84 , @xmath85 .",
    "similarly , let @xmath86 be a @xmath42-type formula with @xmath87 , @xmath88 , and let @xmath89 be an @xmath42-type formula with @xmath90 , @xmath91 .",
    "the following sequents all can be proved with polynomial - size -proofs : @xmath92 , @xmath93 , @xmath94 , @xmath95 , @xmath96 , @xmath97 , @xmath98 , and @xmath99 .",
    "the straightforward proof of this involves checking all cases , which we omit here .",
    "we now annotate the nodes @xmath100 in an tableau with three sets of formulae @xmath101 , @xmath102 , @xmath103 and a set of branches @xmath104",
    ". this information will later be used to construct sequents @xmath105 , which will form the skeleton of the eventual proof that simulates the tableau .",
    "intuitively , if we imagine following a branch when constructing the tableau , @xmath101 corresponds to the current unmarked @xmath39-formulae on the branch , while @xmath102 corresponds to the current unmarked @xmath40-formulae .",
    "@xmath103 contains global information on all the branches that minimise the ignorable type-2 branches in the subtree with root @xmath100 .",
    "the formal definition follows .",
    "we start with the definition of the formulae @xmath101 and @xmath102 , which proceeds by induction on the construction of the tableau .",
    "[ def_ab ] nodes @xmath100 in the tableau from the initial tableau are annotated with @xmath106 and @xmath107 .    for the inductive step ,",
    "consider the case that the extension rule ( a ) was used on node @xmath100 for the @xmath41-type signed formula @xmath10 .",
    "if @xmath108 has @xmath109 , @xmath110 then for the node @xmath111 labelled @xmath50 and the node @xmath112 labelled @xmath51 , @xmath113 and @xmath114 . if @xmath115 has @xmath116 , @xmath117 then for the node @xmath111 labelled @xmath50 and the node @xmath112 labelled @xmath51 , @xmath118 and @xmath119 .",
    "consider now the case that the branching rule ( b ) was used on node @xmath100 for the @xmath42-type signed formula @xmath10 .",
    "if @xmath108 has @xmath120 , @xmath121 then for the node @xmath111 labelled @xmath122 and the node @xmath112 labelled @xmath123 , @xmath124 and @xmath125 . if @xmath115 has @xmath90 , @xmath91 then for the node @xmath111 labelled @xmath122 and the node @xmath112 labelled @xmath123 , @xmath126 and @xmath127 .",
    "for each ignorable type-2 branch @xmath49 we can find another branch @xmath128 , which is not ignorable type-2 and such that @xmath67 .",
    "the definition of ignorable type-2 might just refer to another ignorable type-2 branch , but eventually  since the tableau is finite  we reach a branch @xmath128 , which is not ignorable type-2",
    ". there could be several such branches , and we will denote the left - most such branch @xmath128 as @xmath129 .",
    "we are now going to construct sets @xmath103 and @xmath104 .",
    "the set @xmath104 contains some information on type-2 ignorable branches .",
    "let @xmath100 be a node , which is the root of a sub - tableau @xmath39 , and consider the set @xmath130 of all type-2 ignorable branches that go through @xmath39 .",
    "now intuitively , @xmath104 is defined as the set of all branches from @xmath131 that are outside of @xmath39 .",
    "the set @xmath103 is then defined from @xmath104 as @xmath132 .",
    "the formal constructions of @xmath103 and @xmath104 are below .",
    "unlike @xmath101 and @xmath102 , which are constructed inductively from the root of the tableau , the sets @xmath103 and @xmath104 are constructed inductively from the leaves to the root , by reversing the branching procedure .",
    "[ def_cd ] for an ignorable type-2 branch @xmath49 the end node @xmath100 is annotated by the singleton sets @xmath133 and @xmath134 ; for other leaves @xmath135 .",
    "inductively , we define :    * for a node @xmath100 with only one child @xmath111 , we set @xmath136 and @xmath137 .",
    "* for a node @xmath100 with two children @xmath111 and @xmath112 , we set @xmath138 and @xmath132 .    for each binary node @xmath100 with children @xmath111 , @xmath112",
    "we specify two extra sets .",
    "we set @xmath139 , and from this we can construct the set of formulae @xmath140 .",
    "we let @xmath141 .",
    "we now prepare the simulation result with a couple of lemmas .",
    "[ thm_leaf2 ] let @xmath49 be a branch in an tableau ending in leaf @xmath100 .",
    "then @xmath101 is the set of all unmarked @xmath39-formulae on @xmath49 ( with the sign @xmath39 removed ) .",
    "likewise @xmath102 is the set of all unmarked @xmath40-formulae on @xmath49 ( with the sign @xmath40 removed ) .",
    "we will verify this for @xmath39-formulae , the argument is the same for @xmath40-formulae . if @xmath86 at node @xmath111 is an unmarked formula on branch @xmath49 then @xmath10 has been added to @xmath142 , regardless of which extension rule is used and can not be removed at any node unless it is marked . therefore ,",
    "if @xmath100 is the leaf of the branch , we have @xmath143 .",
    "if @xmath86 is marked then it is removed ( in the inductive step in the construction in definition  [ def_ab ] ) and is not present in @xmath101 .",
    "@xmath40-formulae do not appear in @xmath101 .",
    "[ thm_leaf1 ] let @xmath49 be a branch in an tableau .",
    "assume that @xmath86 appears on the branch @xmath49 , and let @xmath144 be the set of unmarked @xmath39-formulae on @xmath49 ( with the sign @xmath39 removed ) .",
    "then @xmath145 can be derived in a polynomial - size -proof .",
    "2 .   assume that @xmath146 appears on the branch @xmath49 , and let @xmath147 be the set of unmarked @xmath40-formulae on @xmath49 ( with the sign @xmath40 removed ) .",
    "then @xmath148 can be derived in a polynomial - size -proof .",
    "we prove the two claims by induction on the number of branching rules ( a ) and extension rules ( b ) that have been applied on the path to the node .",
    "we start with the proof of the first item .    *",
    "induction hypothesis * ( on the number of applications of rules ( a ) and ( b ) on the node labelled @xmath86 ) : for a node labelled @xmath86 on branch @xmath49 , we can derive @xmath145 in a polynomial - size -proof ( in the size of the tableau ) .",
    "* base case * ( @xmath86 is unmarked ) : the axiom @xmath149 can be used and then weakening to obtain @xmath145 .    * inductive step : * if @xmath86 is a marked @xmath41-type formula , then both @xmath150 and @xmath151 appear on the branch . by the induction hypothesis we derive @xmath152 , @xmath153 in polynomial - size proofs , hence we can derive @xmath154 in a polynomial - size proof ( we are bounded in total number of proof subtrees by the numbers of nodes in our branch ) .",
    "we then have @xmath155 using lemma  [ thm_abshort ] . using the cut rule we can derive @xmath145 .    if @xmath86 is a @xmath42-type formula and",
    "is marked , then the branch must contain @xmath156 or @xmath88 . without loss of generality",
    "we can assume that @xmath156 appears on the branch . by the induction hypothesis @xmath152",
    ", therefore we can derive @xmath157 since it is a @xmath42-type formula and derive @xmath158 with lemma  [ thm_abshort ] . then using the cut rule we derive @xmath145 .    the second item is again shown by induction .",
    "* induction hypothesis * ( on the number of applications of rules ( a ) and ( b ) on the node labelled @xmath159 ) : for a node labelled @xmath159 on branch @xmath49 , we can derive @xmath148 in a polynomial - size -proof ( in the size of the tableau ) .    *",
    "base case * ( @xmath159 is unmarked ) : the axiom @xmath149 can be used and then weakened to @xmath148 .",
    "* inductive step : * if @xmath159 is a marked @xmath41-type formula , then both @xmath160 and @xmath161 appear on the branch . since by the inductive hypothesis @xmath162 and @xmath163 , we can derive @xmath164 in a polynomial - size proof .",
    "we then have @xmath165 using lemma  [ thm_abshort ] .",
    "using the cut rule we can derive @xmath148 .",
    "if @xmath159 is a @xmath42-type formula and is marked , then the branch must contain @xmath166 or @xmath167 . without loss of generality we can assume @xmath166 appears on the branch . by the induction hypothesis @xmath162",
    ", therefore we can derive @xmath168 since it is a @xmath42-type formula and derive @xmath169 with lemma  [ thm_abshort ] . using the cut rule we derive @xmath148 .",
    "[ thm_atsat ] let @xmath49 be a branch , which is completed but not @xmath39-closed .",
    "for any node @xmath100 on @xmath49 , the model @xmath170 satisfies @xmath101 .",
    "we prove the lemma by induction on the height of the subtree with root @xmath100 .    * base case * ( @xmath100 is a leaf ) : by lemma  [ thm_leaf2 ] , @xmath101 is the set of all unmarked @xmath39-formulae on @xmath49 .",
    "but these are all literals as @xmath49 is completed , and hence the subset of positive atoms is equal to @xmath170 .    *",
    "inductive step * : if @xmath100 is of extension type ( a ) with child node @xmath111 then the models of @xmath101 are exactly the same as the models of @xmath142 .",
    "this is true for all @xmath41-type formulae .",
    "for example , if the extension process ( a ) was used on formula @xmath171 and the node @xmath111 was labelled @xmath172 then @xmath173 and this has the same models as @xmath101 . by the induction hypothesis , @xmath174 and hence @xmath175 .    if @xmath100 is of branch type ( b ) with children @xmath111 and @xmath112 then @xmath174 and @xmath176 .",
    "the argument works similarly for all @xmath42-type formulae ; for example , if the extension process was using formula @xmath177 and @xmath111 is labelled @xmath172 and @xmath112 is labelled @xmath178 , then @xmath179 .",
    "hence @xmath174 implies @xmath175 .",
    "we now approach the simulation result ( theorem  [ thm_mlk > otab ] ) and start to construct proofs . for the next two lemmas , we fix an tableau of size @xmath180 and use the notation from definitions  [ def_ab ] and [ def_cd ] ( recall in particular the definition of @xmath181 at the end of definition  [ def_cd ] ) .",
    "[ thm_omegagamma ] there is a polynomial @xmath182 such that for every binary node @xmath100 , every proper subset @xmath183 and every @xmath184 we can construct an -proof of @xmath185 of size at most @xmath186 .    * induction hypothesis * ( on the number of formulae of @xmath101 used in the antecedent : @xmath187 ) : we can find a @xmath186-size proof containing all sequents @xmath188 for every @xmath184 .",
    "* base case * ( when @xmath189 is empty ) : for the base case we aim to prove @xmath190 , and repeat this for every @xmath191 .",
    "we use two ingredients .",
    "firstly , we need the sequent @xmath192 which is easy to prove using weakening and ( @xmath193 ) , since @xmath181 is a disjunction of the elements in @xmath194 . our second ingredient is a scheme of @xmath195 for all the @xmath196 in @xmath194 , @xmath197 for some @xmath198 . with these",
    "we can repeatedly use ( m - cut ) on the first sequent for every element in @xmath194 .",
    "we now show how to efficiently prove the sequents of the form @xmath195 .    for branch @xmath198 , as @xmath170 is a model @xmath78 for @xmath101 by lemma  [ thm_atsat ] , @xmath199 .",
    "since no atom @xmath63 in @xmath200 appears positive in the set @xmath78 we can infer @xmath201 directly via @xmath202 . with rule ( @xmath203 ) we can derive @xmath204 in a polynomial - size proof . using ( @xmath205 ) , ( @xmath206 ) , and ( @xmath207 )",
    "we can derive @xmath208 .",
    "we then use these sequents in the proof below , denoting @xmath209 as @xmath210 :    from lemma  [ thm_shortlk ] , @xmath211 can be derived in a polynomial - size proof .",
    "we use simple syntactic manipulation to change the antecedent into an equivalent conjunction and then weaken to derive @xmath212 in a polynomial - size proof .",
    "then we use :    * inductive step * : we look at proving @xmath213 , for every other @xmath184 . for each @xmath191",
    "we use two instances of the inductive hypothesis : @xmath188 and @xmath214 .    since we repeat this for every @xmath191 we only add @xmath215 many lines in each inductive step and retain a polynomial bound .",
    "the previous lemma was an essential preparation for our next lemma  [ thm_omegab ] , which in turn will be the crucial ingredient for the p - simulation in theorem  [ thm_mlk > otab ] .",
    "[ thm_omegab ] there is a polynomial @xmath182 such for every binary node @xmath100 there is an -proof of @xmath216 of size at most @xmath186 .    * induction hypothesis * ( on the number of formulae of @xmath101 used in the antecedent : @xmath187 ) : let @xmath217 .",
    "there is a fixed polynomial @xmath182 such that @xmath218 has an -proof of size at most @xmath219 .",
    "* base case * ( when @xmath189 is empty ) : we approach this very similarly as in the previous lemma . using weakening and ( @xmath193 )",
    ", the sequent @xmath220 can be derived in a polynomial - size proof . by repeated use of the cut rule on sequents of the form @xmath221 for @xmath198",
    "the sequent @xmath222 is derived .",
    "now we only need to show that we can efficiently obtain @xmath223 .",
    "consider branch @xmath198 .",
    "as @xmath170 is a minimal model @xmath78 for @xmath9 by lemma  [ thm_atsat ] , this model @xmath78 must satisfy @xmath29 and given the limitations of the branching processes of @xmath40-labelled formulae , @xmath102 as well .",
    "similarly as in the base case of lemma  [ thm_omegagamma ] we can derive @xmath224 and @xmath208 in a polynomial - size proof .",
    "we then use these sequents in the proof below once again , denoting @xmath209 as @xmath210 .",
    "we can use @xmath78 satisfying @xmath102 to derive @xmath225 in the same way as we derive @xmath226 in lemma  [ thm_omegagamma ] .    *",
    "inductive step * : assume that @xmath227 has already been derived .",
    "let @xmath228 .",
    "we use lemma  [ thm_omegagamma ] to get a short proof of @xmath188 .",
    "one application of rule @xmath229    finishes the proof .",
    "[ thm_mlk > otab ] p - simulates .    * induction hypothesis * ( on the height of the subtree with root @xmath100 ) : for node @xmath100 , we can derive @xmath105 in in polynomial size ( in the full tableau ) .    * base case * ( @xmath100 is a leaf ) : if the branch is @xmath39-closed , then by lemma  [ thm_leaf1 ] , for some formula @xmath10 we can derive @xmath230 and @xmath231 . hence @xmath232 can be derived and with @xmath233 and the cut rule we can derive @xmath234 in a polynomial - size proof . by weakening and using ( @xmath235 )",
    "we can derive @xmath236 in polynomial size as required .",
    "if the branch is @xmath40-closed , then by lemma  [ thm_leaf1 ] , for some formula @xmath10 we can derive @xmath237 and @xmath238 . hence @xmath239 can be derived and with @xmath240 and the cut rule we can derive @xmath241 in a polynomial - size proof . by weakening and using ( @xmath235 ) we can derive @xmath236 in polynomial size .",
    "if the branch is @xmath59-closed , then by lemma  [ thm_leaf1 ] , for some formula @xmath10 we can derive @xmath230 and @xmath237 .",
    "hence via the cut rule and using ( @xmath235 ) we can derive @xmath236 in polynomial size as required .",
    "if the branch is ignorable type-1 then the branch is completed .",
    "therefore @xmath101 is a set of atoms and there is some atom @xmath242 such that @xmath243 .",
    "it therefore follows that @xmath244 can be derived as an axiom using the ( @xmath245 ) rule .",
    "we then use lemma  [ thm_mlk_weak ] to derive @xmath246 in polynomial size .",
    "if the branch is ignorable type-2 then @xmath247 implies @xmath248 . since @xmath249",
    "we can find a short proof of @xmath250 using ( @xmath251 ) .    *",
    "inductive step * : the inductive step splits into four cases according to which extension or branching rule is used on node @xmath100 .",
    "_ extension rule ( a ) is used on node @xmath100 for formula @xmath86 with resulting nodes @xmath111 and @xmath112 labelled @xmath252 , @xmath253 , respectively .    since we are extending the branch on an @xmath41-type formula signed with @xmath39",
    ", we can find a short proof of @xmath254 using lemma  [ thm_abshort ] .",
    "together with @xmath255 shown above we derive :    by definition we have @xmath256 , and then by weakening @xmath257 we obtain @xmath258 . by definitions  [ def_ab ] and [ def_cd ] , @xmath259 and likewise @xmath137 .",
    "hence @xmath260 is available by the induction hypothesis . from this",
    "we get :    @xmath261 and @xmath262 also have short proofs from weakening axioms .",
    "these can be used to cut out @xmath263 from the antecedent of @xmath264 resulting in @xmath265 as required .",
    "_ extension rule ( a ) is used on node @xmath100 for formula @xmath159 with resulting nodes @xmath111 and @xmath112 labelled @xmath266 , @xmath267 , respectively .",
    "we can find short proofs of @xmath268 , @xmath269 using axioms , weakening and the rules ( @xmath270 ) , ( @xmath271 ) .",
    "similarly as in the last case , we have @xmath272 and likewise @xmath137 .",
    "therefore , by induction hypothesis @xmath273 is available with a short proof .",
    "we can do the same trick with @xmath274 :    since @xmath159 is an @xmath41-type formula , then @xmath275 by lemma  [ thm_abshort ] , and by weakening @xmath276 .",
    "the derivation is the finished by :    _ case 3 .",
    "_ branching rule ( b ) is used on node @xmath100 for formula @xmath86 with children @xmath111 and @xmath112 labelled @xmath252 , @xmath253 , respectively .",
    "the sequents @xmath277 and @xmath278 are available from the induction hypothesis .",
    "@xmath279 and @xmath280 can be derived via weakening by lemma  [ thm_mlk_weak ] . from these sequents ,",
    "simple manipulation through classical logic and the cut rule gives us @xmath281 and @xmath282 . using the rule @xmath283 we obtain @xmath284 . since @xmath143 , from lemma  [ thm_abshort ] we derive @xmath165 and @xmath285 in polynomial size .",
    "weakening derives @xmath286 and @xmath287 . from these",
    "we derive :    from lemma  [ thm_omegab ] , @xmath288 has a polynomial size proof .",
    "we can then finish the derivation with a cut :    _ case 4 .",
    "_ branching rule ( b ) is used on node @xmath100 for formula @xmath159 with children @xmath111 and @xmath112 labelled @xmath266 , @xmath267 , respectively .",
    "the sequents @xmath289 and @xmath290 are available from the induction hypothesis .    from these two sequents",
    "we obtain via weakening @xmath291 and @xmath292 .",
    "we can turn @xmath194 into the disjunction of its elements by simple manipulation through classical logic and the cut rule and derive @xmath293 and @xmath294 . using the rule @xmath295",
    "we obtain @xmath296 .",
    "since @xmath254 by lemma  [ thm_abshort ] , we derive by weakening @xmath297 .",
    "we then continue :    from lemma  [ thm_omegab ] , @xmath288 has a polynomial - size proof .",
    "this completes the proof of the induction .    from this induction",
    ", the theorem can be derived as follows .",
    "the induction hypothesis applied to the root @xmath100 of the tableau gives polynomial - size proofs of @xmath265 . by definition @xmath298 and @xmath299 .",
    "finally , @xmath135 , because for every ignorable type-2 branch @xmath49 , the branch @xmath129 is inside the tableau .    since all our steps are constructive we prove a p - simulation .",
    "in the previous section we showed that p - simulates . here we prove that the two systems are in fact exponentially separated .",
    "[ thm_incon ] in every tableau for @xmath300 with inconsistent @xmath9 , any completed branch is @xmath39-closed .    if a branch @xmath49 is completed but not @xmath39-closed , then via lemma  [ thm_atsat ] , @xmath170 is a model for all initial @xmath39-formulae .",
    "but these form an inconsistent set .",
    "[ thm : sep - tab - mlk ] does not simulate .",
    "we consider smullyan s _ analytic tableaux _",
    "@xcite , and use the hard sets of inconsistent formulae in @xcite .",
    "for each natural number @xmath301 we use variables @xmath302 .",
    "let @xmath303 be the set of all @xmath304 clauses of length @xmath305 over these variables ( we exclude tautological clauses ) and define @xmath306 .",
    "since every model must contradict one of these clauses , @xmath307 is inconsistent .",
    "we now consider the sequents @xmath308 .",
    "since classical entailment is included in minimal entailment there must also be an tableau for these formulae .",
    "every type-1 ignorable branch in the tableau is completed and therefore also @xmath39-closed by lemma  [ thm_incon ] .",
    "the tableau can not contain any type-2 ignorable branches as every completed branch is @xmath39-closed .",
    "hence the tableaux for @xmath308 are in fact analytic tableaux and have @xmath309 many branches by proposition  1 from @xcite .",
    "since the examples are easy for truth tables @xcite , they are also easy for @xmath73 and the rule ( @xmath235 ) completes a polynomial - size proof for them in .",
    "in this paper we have clarified the relationship between the proof systems and for minimal entailment .",
    "while cut - free sequent calculi typically have the same proof complexity as tableau systems , is not complete without m - cut @xcite , and also our translation uses m - cut in an essential way ( however , we can eliminate -cut ) .",
    "we conclude by mentioning that there are further proof systems for minimal entailment and circumscription , which have been recently analysed from a proof - complexity perspective @xcite .",
    "in particular , niemel introduced a tableau system for minimal entailment for clausal formulas , and bonatti and olivetti defined an analytic sequent calculus for circumscription .",
    "building on initial results from @xcite we prove in @xcite that @xmath310 is a chain of proof systems of strictly increasing strength , in addition to the p - simulations we obtain separations between the proof systems .    combining the results of @xcite and the present paper , the full picture of the simulation order of proof systems for minimal entailment emerges . in terms of proof size , is the best proof system as it p - simulates all other known proof systems .",
    "however , for a complete understanding of the simulation order some problems are still open . while the separation between and from theorem  [ thm : sep - tab - mlk ] can be straightforwardly adapted to show that also does not simulate , we leave open whether the reverse simulation holds . likewise , the relationship between the two tableau systems and is not clear .",
    "it is also interesting to compare our results to the complexity of theorem proving procedures in other non - monotonic logics as default logic @xcite and autoepistemic logic @xcite ; cf .",
    "also @xcite for results on proof complexity in the first - order versions of some of these systems .",
    "in particular , @xcite and @xcite show very close connections between proof lengths in some sequent systems for default and autoepistemic logic and proof lengths of classical , for which any non - trivial lower bounds are a major outstanding problem",
    ". it would be interesting to know if a similar relation also holds between and .",
    "beyersdorff , o. , and chew , l. 2014 .",
    "the complexity of theorem proving in circumscription and minimal entailment . to appear in proc .  _",
    "ijcar14_. available as technical report tr14 - 014 , electronic colloquium on computational complexity .",
    "beyersdorff , o. , and kutz , o. 2012 .",
    "proof complexity of non - classical logics . in bezhanishvili , n. , and goranko , v. ,",
    ", _ lectures on logic and computation - esslli 2010/11 , selected lecture notes_. springer , berlin heidelberg .",
    "154 .",
    "grimm , s. , and hitzler , p. 2009 . a preferential tableaux calculus for circumscriptive alco . in polleres , a. , and swift , t. , eds .",
    "web reasoning and rule systems _ , volume 5837 of _ lecture notes in computer science_. springer berlin heidelberg ."
  ],
  "abstract_text": [
    "<S> in this paper we compare two proof systems for minimal entailment : a tableau system and a sequent calculus , both developed by olivetti ( 1992 ) . </S>",
    "<S> our main result shows that -proofs can be efficiently translated into -proofs , p - simulates . </S>",
    "<S> the simulation is technically very involved and answers an open question posed by olivetti ( 1992 ) on the relation between the two calculi . </S>",
    "<S> we also show that the two systems are exponentially separated , there are formulas which have polynomial - size -proofs , but require exponential - size -proofs . </S>"
  ]
}
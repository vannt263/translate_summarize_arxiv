{
  "article_text": [
    "community detection in complex networks has recently attracted wide attention in several research areas such as social networks , communication networks , biological systems @xcite .",
    "the general notion of community refers to the fact that nodes tend to form clusters which are more densely interconnected relatively to the rest of the network .",
    "understanding the community structure of a complex network is a challenging crucial issue in several applications .",
    "good surveys on this topic can be found in @xcite .",
    "for instance , in biological networks , it is widely believed that modular structures plays an important role in biological functions @xcite , while in online social networks such as facebook , community detection is vital for the design of related applications , devising business strategies and may even have direct implications on the design of the network themselves @xcite .",
    "a modern application scenario ( the one this paper is inspired from ) is that of _ opportunistic networks _ where recent studies show that _ social - aware _ protocols provides efficient solutions for basic communication tasks @xcite .",
    "the static _ planted bisection model _",
    "@xcite ( or _ stochastic blockmodel _ , as it is known in the statistics community @xcite ) is a popular framework to formalize the problem of detecting communities in random graphs .    *",
    "the ( static ) planted bisection model : centralized algorithms . *",
    "the ( static ) planted bisection model is defined as a static random graph @xmath11 ( with @xmath12 such that @xmath5 ) where the node subset @xmath1 = \\ { 1 , 2 , \\ldots , n\\}$ ] is partitioned into two equal - sized _ unknown communities _ @xmath13 and @xmath14 and each possible edge @xmath2 is included with probability @xmath3 if @xmath15 and @xmath16 both belong to the same community while it is included with probability @xmath4 otherwise the random graph model is the well - known erds - rnyi  model ] .",
    "the goal here is to identify the unknown partition .",
    "dyer and frieze @xcite show that if @xmath17 then the minimum edge - bisection is the one that separates the two classes and then they derive an algorithm working in @xmath18 expected time .",
    "this bound has been then improved to @xmath19 ( for arbitrarily small @xmath20 ) by jerrum and sorkin @xcite for some range of @xmath3 and @xmath4 by using simulated annealing .",
    "further improvements were obtained by condon and karp @xcite that show a linear time algorithm for dense graphs and , more recently , by mossel et al @xcite that provide an efficient algorithm and some impossibility result for sparse graphs .",
    "we emphasize that all the above algorithms are based on centralized , expensive procedures such as simulated annealing and spectral - graph computations : all of them require the full knowledge of the graph adjacency matrix and , moreover , they work on static graphs only .    * community detection in opportunistic networks . *",
    "recent studies in opportunistic networks focus on the impact of the _ agent social behavior _ on some basic communication tasks such as routing and broadcasting @xcite .",
    "recently this issue has been investigated in an emerging class of opportunistic networks called _ intermittently - connected mobile networks ( icmns ) _ @xcite : such networks are characterized by wireless links , representing opportunities for exchanging data , that sporadically appear among network nodes ( usually mobile radio devices ) .",
    "so - called _ social - aware _ communication protocols rely on the reasonable intuition that , since mobile devices are carried by people who tend to form _ communities _ , members ( i.e. nodes ) of the same community are used to communicate with each other much more often than nodes from different communities .",
    "experiments on real - data sets have widely shown that identifying communities can strongly help in improving the protocol performances @xcite .",
    "it thus follows that community detection in icmns is a crucial issue .    as observed above ,",
    "several centralized community - detection methods have been proposed in the literature that may result useful for offline data analysis of mobile traces .",
    "however , it is a common belief that next - future technologies will yield a dramatic growth of _ self - organizing _",
    "icmns where the network protocols work without relying on any centralized server . in this new communication paradigm",
    ", it is required that community detection is performed in a fully distributed way .",
    "it turns out that the above - discussed centralized algorithms are not suitable for community detection in self - organizing dynamic networks such as icmns . to this aim ,",
    "in this paper we consider an algorithmic solution to community detection in icmns that relies on the epidemic mechanism known as _ label propagation algorithms _",
    "@xcite : this method will be discussed later in the introduction .    * the dynamic planted bisection model . * in order to capture the high dynamicity of icmns",
    ", we consider the natural dynamic version of the @xmath11 model .",
    "a _ dynamic graph _ is a probabilistic process that describes a graph whose topology changes with time : so it can be represented by a sequence @xmath21,e_t ) \\,:\\ ,",
    "t \\in \\mathbb{n } \\}$ ] of graphs with the same set @xmath22 $ ] of nodes , where @xmath23 is the _ snapshot _ of the dynamic graph at time step @xmath24 .",
    "the dynamic version of the planted bisection model , denoted as @xmath0 , consists of a dynamic graph where @xmath25 is the number of nodes while @xmath26 and @xmath27 are the edge - probability functions . at every time step @xmath24 , each edge @xmath2 is included in @xmath28 with probability @xmath3 if both @xmath15 and @xmath16 belong to the same community @xmath29 ( @xmath30 ) while it is included with probability @xmath4 otherwise ( this model can also be seen as a non - homogeneous version of the _ dynamic erds  rnyi graph _ model @xcite ) .",
    "so , the dynamic state ( on / off ) of an edge over the time is a random variable having bernoully distribution with parameter @xmath3 or @xmath4 , respectively .",
    "this model clearly assumes important simplifications that may impact several properties of real opportunistic networks : for instance , we have assumed that contacts between nodes follow bernoulli processes , so the distribution of time between two contacts of a pair of nodes follows an exponential law .",
    "previous experiments have shown that this assumption holds only at the timescale of days and weeks @xcite . however , in @xcite , experimental validations have shown that some real icmns ( e.g. those studied in the haggle project @xcite and in the mit reality mining project @xcite ) exhibit some crucial connectivity properties ( such as hop diameter ) which are well - approximated by _ sparse",
    "_ dynamic erds  rnyi graphs .",
    "a strong simplifying assumption in the dynamic erds  rnyi graph model is _ time independence _ : the graph topology at time @xmath24 is fully independent from the topology at time @xmath31 . _ edge markovian evolving graphs _ ( in short _ edge - meg _ ) were first introduced in @xcite as a generalization of the dynamic erds  rnyi graph model that captures the strong dependence between the existence of an edge at a given time step and its existence at the previous time step .",
    "an edge - meg is a dynamic random graph @xmath32,e_t ) \\,:\\ , t \\in \\mathbb{n } \\}$ ] defined as follows .",
    "starting from an initial random edge set @xmath33 , at every time step , every edge changes its state ( existing or not ) according to a two - state markovian process with probabilities @xmath34 and @xmath35 .",
    "if an edge exists at time @xmath24 , then , at time @xmath36 , it disappears with probability @xmath35 .",
    "if instead the edge does not exist at time @xmath24 , then it will come up at time @xmath36 with probability @xmath34 .",
    "we observe that the setting @xmath37 yields a sequence of independent erds ",
    "rnyi random graphs , i.e. , _ dynamic erds  rnyi graphs _ , with edge probability @xmath38 .",
    "edge - megs have been adopted as concrete models for several real dynamic networks such as faulty networks @xcite , peer - to - peer systems @xcite , mobile ad - hoc networks @xcite , and vehicular networks @xcite .",
    "furthermore , edge - megs have been considered by whitbeck et al @xcite as a concrete model for analyzing the performance of epidemic routing on sparse icmns and the obtained theoretical results have been also validated over real trace data such as the _ rollernet _ traces @xcite . in this paper",
    ", we consider the edge - meg as a mathematical model for icmns .",
    "the dynamic planted bisection model can be easily generalized in order to include edge - megs : here , we have two edge - probability parameter pairs @xmath39 and @xmath40 between two nodes @xmath15 and @xmath16 depending on whether they both belong to the same community or not .",
    "so , if both @xmath15 and @xmath16 belongs to the same community then the edge @xmath2 is governed by the 2-state markov chain with parameters @xmath39 otherwise the edge is governed by the 2-state markov chain with parameter @xmath40 .",
    "we assume that @xmath41 and , according to the parameter tuning performed in @xcite , it turns out that the best fitting to real scenarios is achieved by setting @xmath35 , ( and @xmath42 ) as absolute constants .",
    "this is mainly due to the fact that , once a connection comes up , its expected life - time does not depend on the size of the network @xcite .",
    "the algorithmic goal in the @xmath0 model is to design a fully - distributed protocol that computes a _ good ( node ) labeling _ for the dynamic graph @xmath43 : we say that a function @xmath44 is a _ good labeling _ for @xmath43 if @xmath45 labels each community with a different label : @xmath46 .",
    "+ nodes are entities that share a global clock ( this is reasonable in opportunistic networks by assuming each node to be equipped by a gps ) and know ( a good approximation of ) the number @xmath25 of nodes but it is not required they have distinct ids . initially",
    ", each node does not know anything about its own community and it is not able to distinguish the community of its neighbors . at every time step ,",
    "every node can exchange information with its current neighbors .    in @xcite ,",
    "some greedy protocols are tested on specific sets of real mobility - trace datas . by running such protocols ,",
    "every node constructs and updates its own community - list according to the length and the rate of the contacts observed so far by itself and by the nodes it meets .",
    "so , the protocol exploits the intuition that communities are formed by nodes that use to meet each other often and for a long time .",
    "however , no analytical result is given for such heuristics that , moreover , require nodes to often update and transmit relatively large lists of node - ids during all the process : the resulting overhead may be too heavy in several opportunistic networks such as icmns .    * label propagation algorithms . *",
    "a well - studied community - detection strategy is the one known as _ label propagation algorithms ( lpa ) _",
    "this strategy is based on a simple epidemic mechanism which can be efficiently implemented in a fully - distributed fashion since it requires easy local computations : it is thus very suitable for opportunistic networks such as icmns . in its basic version ,",
    "some distinct labels are initially assigned to a subset of nodes ; at every step , each node updates its label ( if any ) by choosing the label which most of its ( current ) neighbors have ( the _ majority _ label ) ; if there are multiple majority labels , one label is chosen randomly .",
    "clearly , the goal of the protocol is to converge to a good labeling for @xmath0 .    despite the simplicity of lpa - based protocols ,",
    "very few analytical results are known on their performance over relevant classes of graphs .",
    "it seems hard to derive , from empirical results , any fundamental conclusions about lpa behavior , even on specific families of graphs @xcite .",
    "one reason for this hardness is that despite its simplicity , even on simple graphs , lpa can have complex behavior , not far from epidemic processes such as the spread of disease in an interacting population @xcite .",
    "several versions of lpa - based protocols have been tested on a wide range of social networks @xcite : such works experimentally show that lpa - based protocols work quite efficiently and are effective in providing _ almost _ good labeling .",
    "based on extensive simulations , raghavan et al @xcite and leung et al @xcite empirically show that the average convergence time of the ( synchronous ) lpa - based protocols is bounded by some logarithmic function on @xmath25 .",
    "clearly , the goal of the protocol is to converge to a good labeling for @xmath0 .",
    "despite the simplicity of lpa - based protocols , very few analytical results are known on their performance over relevant classes of graphs . as observed in @xcite",
    ", it seems hard to derive , from empirical results , any fundamental conclusions about lpa behavior , even on specific families of graphs .",
    "recently , cordasco and gargano @xcite provided a semi - synchronous version of the lpa - based protocol and formally prove that it guarantees finite convergence time on any static graph . in @xcite ,",
    "an lpa - based protocol has been analyzed on the planted partition model for highly - dense topologies .",
    "in particular , their analysis considers the static model @xmath11 with @xmath47 and @xmath48 : observe that in this case there are ( w.h.p . ) highly inter - connected communities having constant diameter and a relatively - small cut among them . in this very restricted case",
    ", they show the protocol converges in constant expected time and conjectured a logarithmic bound for sparse topologies .    in general , providing analytical bounds on the convergence time of lpa - based protocols over relevant classes of networks is an important open question that has been proposed in several papers arising from different areas @xcite .    * our algorithmic contribution .",
    "* we provide an efficient distributed lpa - based protocol on the dynamic planted bisection model @xmath0 with arbitrary @xmath49 and @xmath50 where @xmath8 is any _ arbitrarily small _ constant .",
    "our protocol yields with high probability . ]",
    "( in short @xmath51 ) a good labeling in @xmath52 time .",
    "the bound is tight for any @xmath53 while it is only a logarithmic factor larger than the optimum for the rest of the parameter range ( i.e. for more dense topologies ) .",
    "for the first time , we thus formally prove a logarithmic bound on the convergence time of an lpa - based protocol on a class of sparse and disconnected dynamic random graphs ( i.e. for @xmath54 ) .",
    "the local labeling rule adopted by the protocol is simple and requires no node ids : the only exchanged informations are the labels .",
    "our protocol can be easily adapted in order to construct a good labeling in the presence of a larger number of equal - sized communities ( provided that this number is an absolute constant ) and , more importantly , it also works for the edge - meg model @xmath55 in the parameter range @xmath56 , where @xmath57 is _ any _ positive constant . in the latter model",
    ", the completion time is w.h.p .",
    "bounded by    @xmath58    where @xmath59 is a bound on the _ mixing time _ of the two 2-state markov chains governing the edges of the dynamic graph .",
    "it is known that ( see for example @xcite ) @xmath60 observe that , when @xmath35 and @xmath61 are some arbitrary positive constants and @xmath62 ( this case includes the `` realistic '' range derived in @xcite ) , then @xmath63 and the bound on the completion time becomes @xmath64 .",
    "this bound is only a logarithmic factor larger than the optimal labeling time in the case of sparse topologies , i.e. , when @xmath65 .",
    "we run our protocol over hundreds of random instances according to the @xmath0 model with @xmath25 varying from @xmath66 to @xmath67 . besides a good validation of our asymptotical analysis ,",
    "the experiments show further positive features of the protocol .",
    "our protocol is indeed _ tolerant _ to non - homogeneous edge - probability functions . in particular",
    ", the protocol almost - always returns a good labeling in _ bernoullian _ graphs where the edge probability is not uniform , i.e. , for each pair @xmath2 of nodes in the same community , the parameter @xmath68 is suitably chosen in order to yield irregular sparse graphs .",
    "a detailed description of the experimental results can be found in the appendix ( section [ sec : expe ] ) .",
    "let us consider the dynamic graph @xmath0 and , for the sake of clarity , we first assume the following restrictions hold : the parameter @xmath3 is known by every node ; there are only 2 communities @xmath13 and @xmath14 , each of size @xmath69 ( @xmath25 is an even number ) ; the labeling process starts with ( exactly ) two _ source nodes _ , @xmath70 that is labeled by @xmath71 and @xmath72 that is labeled by @xmath73 with @xmath74 .",
    "the parameters @xmath3 and @xmath4 belong to the following ranges    @xmath75    such restricions make the description easier , thus allowing us to focus on the main ideas of our protocol and of its analysis .",
    "then , in subsection [ ssec : general1 ] and in the appendix , we will show how to remove the above assumptions in order to prove the general result stated in the introduction .",
    "the protocol relies on the simple and natural properties of lpa .",
    "starting from two source nodes ( one in each community ) , each one having a different label , the protocol performs a label spreading by adopting a simple labeling / broadcasting rule ( for instance , every node gets the label it sees most frequently in its neighbors ) .",
    "since links between nodes of the same community are much more frequent than the other ones , we can argue that the _ good - labeling _ will be faster than the _ bad - labeling _ ( in each community , the good labeling is the one from the source of the community while the bad labeling is the one coming from the other source ) .",
    "however , providing a rigorous analysis of the above process requires to cope with some non - trivial probabilistic issues that have not been considered in the analysis of information spreading in dynamic graphs made in previous papers @xcite .",
    "let us consider any local labeling rule that depends on the label configuration of the ( dynamic ) neighborhood of the node only .",
    "at a given time step , there is a subset @xmath76 $ ] of labeled nodes and we need to evaluate the probabilities @xmath77 ( @xmath78 ) that a non - labeled node gets a good ( bad ) label in the next step . after an initial phase , there is a non - negligible probability that some nodes will get the bad label .",
    "then , such nodes will start a spreading of the bad labeling at the same rate of the good one .",
    "observe also that good - labeled nodes may ( wrongly ) change their state as well , so , differently from a standard single - source broadcast , the epidemic process is not monotone with respect to good - labeling .",
    "it turns out that the probabilities @xmath77 and @xmath78 strongly depend on the _ label - balance _ between the sizes of the subsets of well - labeled nodes and of the badly - labeled ones in the two communities .",
    "keeping a tight balance between such values during all the process is the main technical goal of the protocol . in arbitrary label configurations over _ sparse _ graph snapshots , getting `` high - probability '' bounds on the rate of new ( well / badly ) labeled nodes",
    "is a non - trivial issue : indeed , it is not hard to show that , given any two nodes @xmath79\\setminus i_c$ ] , the events `` @xmath16 will be ( well / badly-)labeled '' and `` @xmath80 will be ( well / badly-)labeled '' are not independent .    as we will see , such issues are already present in the `` restricted '' case considered in this section .    a first important step of our approach is to describe the combination between the labeling process and the dynamic graph as a finite - state markovian process .",
    "then , we perform a step - by - step analysis , focusing on the probability that the markovian process visits a sequence of states having `` good - balance '' properties .",
    "our protocol applies local rules depending on the current node s neighborhood and on the current time step only .",
    "the protocol execution over the dynamic graph can be represented by the following _ markovian process _ : for any time step @xmath24 , we denote as @xmath81 the _ state _ reached by the markovian process where @xmath82 denotes the number of nodes in the @xmath83-th community labeled by label @xmath84 at time step @xmath24 and @xmath85 denotes the number of nodes in the @xmath83-th community labeled by label @xmath86 at time step @xmath24 , for @xmath87 and @xmath88 .",
    "in particular , the markovian process works as follows    @xmath89 @xmath90 the main advantage of this description is the following : observe the process in any fixed state and consider the set of nodes @xmath91 still having no label .",
    "then it is not hard to verify that , in the next time step , the events @xmath92``node @xmath16 gets a good / bad label '' , @xmath93 , are mutually independent .",
    "this will allow us to prove strong - concentration bounds on the label - balance discussed above for a sufficiently - long sequence of states visited by the markovian process , thus getting a large fraction of well - labeled nodes in each community within a short time ; this corresponds to a first protocol stage called _ fast spreading _ of the good labels .",
    "unfortunately , this independence property does not hold among labeled nodes of the same community , let s see why in the next simple scenario .",
    "assume that the rule is the majority one , consider two nodes @xmath15 and @xmath16 having the same label @xmath94 at time @xmath24 , and assume the event @xmath95 `` node @xmath15 will keep label @xmath94 at time @xmath36 '' holds .",
    "then the event `` @xmath96 '' is more likely and , thus , according to the majority rule , the event `` @xmath16 gets label @xmath97 '' is more likely as well .",
    "this clearly shows a key - depencence in the label spreading .    in order to overcome this issue",
    ", our protocol allows every node to change its first label - updating rule only after a _ spreading stage _ of suitable length ( we will see later this stage is in fact formed by 3 consecutive phases ) : we can thus analyze the spreading of the good labeling ( only ) on the current set of unlabeled nodes ( where stochastic independence holds ) and prove that the process reaches a state with a large number of well - labeled nodes . after this spreading stage , labeled nodes ( have to ) start to update their labels according to some simple rule that will be discussed later .",
    "we prove that this _ saturation phase _ has logarithmic convergence time by providing a simple and efficient method to cope with the above discussed stochastic dependence .",
    "the protocol works in @xmath98 consecutive temporal phases : the goal of this phase partition is to control the rate of new labeled nodes as function of the expected values reached by the random variables ( r.v.s ) @xmath99 ( at the end of each phase ) . indeed ,",
    "when such expected values reach some specific thresholds , the protocol and/or its analysis must change accordingly in order to keep the label configuration well - balanced in the two communities during all the process and to manage the stochastic depencence described above .    at any time step @xmath24 ,",
    "we denote , for each node @xmath100 , the number of @xmath101-labeled neighbors of @xmath16 as @xmath102 , for @xmath30 . given a node @xmath103 , the set of its neighbors at time @xmath24 will be denoted as @xmath104 . for the sake of brevity , whenever possible",
    "we will omit the parameter @xmath24 in the above variables and , in the proofs , we will only analyze the labeling in @xmath105 , the analysis for @xmath106 being the same .",
    "* stage i : spreading *    the phase runs for @xmath107 time steps , where @xmath108 is an explicit constant that will be fixed later . in this phase",
    ", only the neighbors of the sources will decide their label .",
    "the goal is to reach a state such that w.h.p . @xmath109 and @xmath110 ( @xmath30 ) . for any non - source node @xmath16",
    ", the labeling rule is the following .",
    "* let @xmath111 ; @xmath16 gets label @xmath101 if there is a time step @xmath112 such that @xmath113 and , for @xmath88 and for all @xmath24 such that @xmath114 , it holds that @xmath115 ; * in all other cases , @xmath16 remains unlabeled .    in app .",
    "[ app : scol ] , we will show that , at the end of this phase , a node gets the good label with probability @xmath116 and , w.h.p .",
    ", no node will get the bad label . from this fact",
    ", we can prove the following    [ thm : endtimephase1 ] let @xmath117 be any ( sufficiently large ) constant .",
    "then , a constant @xmath108 can be fixed so that , at time step @xmath118 the markovian process w.h.p . reaches a state such that @xmath119 \\",
    "\\mbox { and } \\ h_{1}^{(\\tau_1)},h_{2}^{(\\tau_1)}=0\\ ] ]    this phase of the protocol aims to get an exponential rate of the good - labeling inside every community in order to reach , in @xmath120 steps , a state such that the number of well - labeled nodes is bounded by some root of @xmath25 and the number of badly - labeled ones is still 0 . differently from phase 1 , unlabeled nodes can get a label at every time step according to the following rule : for @xmath121 , at time step @xmath24 of phase 2 every _ unlabeled _ node @xmath16    * gets label @xmath71 at time @xmath36 iff @xmath122 and @xmath123 , * gets label @xmath73 at time @xmath36 iff @xmath124 and @xmath125 , * remains unlabeled at time @xmath36 otherwise .    in the next theorem",
    ", we assume that , at time step @xmath126 ( i.e. at the end of phase 1 ) , the markovian process reaches a state satisfying cond .",
    "( [ eq : startingcond2 ] ) .",
    "in particular , we assume that @xmath127 , where @xmath128 .",
    "thanks to theorem [ thm : endtimephase1 ] , this event holds w.h.p . in",
    "what follows , we will make use of the following function    @xmath129    at the end of phase 2 , we can prove the process w.h.p .",
    "satisfies the following properties .",
    "[ thm : endtimephase2 ] for any @xmath130 , constants @xmath131 and @xmath132 can be fixed so that , at the final step of phase 2    @xmath133 }     \\log\\left(\\frac{\\log^3 n}{\\underline{k}_1^{(\\tau_1 ) }     } \\right )     +    \\tau_1,\\ ] ]    it holds w.h.p . that    @xmath134    _ idea of the proof .",
    "_ ( see app .",
    "[ ph2:proof ] for the proof ) . for",
    "each time step @xmath24 , let @xmath135 and @xmath136 be the number of ( new ) nodes that get , respectively , the good and the bad label in @xmath13 at time step @xmath36 .",
    "we will prove the following key - fact : if @xmath137 ( @xmath30 ) for some constant @xmath138 , then it holds w.h.p .",
    "@xmath139 \\cdot k_1 $ ] and @xmath140 ( the same holds for @xmath14 ) . from such bounds",
    ", we can derive the recursive equations for @xmath82 yielding the bounds stated in the theorem .",
    "in this phase nodes apply the same rule of phase 2 but we need to separate the analysis from the previous one since , when the `` well - labeled '' subset gets size larger than some root of @xmath25 , we can not anymore exploit the fact that the bad labeling is w.h.p . not started yet ( i.e. @xmath141 ) .",
    "however , we will show that when the well - labeled sets get size @xmath142 , the bad - labeled sets have still size bounded by some root of @xmath25 .",
    "we assume that , at the end of phase 2 , the markovian process reaches a state satysfying cond .",
    "( [ eq : phase2thesisk ] ) of theorem [ thm : endtimephase2 ] .",
    "[ thm : phase3 ] for any constant @xmath130 , constants @xmath143 and @xmath144 can be fixed so that at the final time step of phase 3 @xmath145 for @xmath30 , it holds w.h.p . that @xmath146    _ idea of the proof . _",
    "( see app .",
    "[ ph3:proof ] for the proof ) .",
    "let @xmath135 and @xmath136 be the r.v.s defined in the proof of theorem [ eq : phase2thesisk ] .",
    "the presence of the bad labeling changes the bounds we obtain as follows . at time",
    "step @xmath36 , as long as @xmath147 , we will prove that @xmath148 \\cdot k_1   $ ] and @xmath149 n/2 $ ] . from the above bounds ,",
    "we will determine two time - recursive bounds on the r.v .",
    "@xmath150 and @xmath151 that hold ( w.h.p . )",
    "for any @xmath24 s.t . @xmath152 .",
    "then , thanks to the hypothesis @xmath153 and to the fact that the markovian process starts phase 3 from a very `` unbalanced '' state ( @xmath154 and @xmath155 ) , we apply the recursive bounds and show that a time step @xmath156 exists satysfying eq .",
    "[ eq : phase3thesisk ] .",
    "theorems [ thm : endtimephase2 ] and [ thm : phase3 ] guarantee a very tight range for the r.v . @xmath157 and @xmath158 at the final step of phase 2 and 3 , respectively . as we will see later , this tight balance is crucial for removing the hypothesis on the existence of the two leaders .",
    "* stage ii : saturation *    at the end of phase 3 , the markovian process w.h.p . reaches a state that satisfies the properties stated in theorem [ thm : phase3 ] .",
    "the goal of phase 4 is to obtain a ( large ) constant fraction @xmath159 ( say , @xmath160 ) of the nodes of each community that get the good label and , at the same time , to ensure that the number of bad - labeled nodes is still bounded by some root of @xmath25 .",
    "we can not guarantee this goal by applying the same labeling rule of the previous phase : the number of bad - labeled nodes would increase too fast .",
    "the protocol thus performs a much `` weaker '' labeling rule that is enough for the good labeling while keeping the final number of bad - labeled nodes bounded by some root of @xmath25 .",
    "the fourth phase consists of three consecutive identical time - windows during which _ every _ ( labeled or not ) node @xmath103 applies the following simple rule :    _ time window of phase 4 . _",
    "+ for any @xmath161 $ ] , @xmath16 looks at the labels of its neighbors at time @xmath24 and :    * if @xmath16 sees only one label ( say , @xmath94 ) for _ all _ the window time steps , then @xmath16 gets label @xmath94 ; * in all the other cases ( either @xmath16 sees more labels or @xmath16 does not see any label ) , @xmath16 either keeps its label ( if any ) or it remains unlabeled .    _ remark .",
    "_ observe that , departing from the previous phases , we now need to analyze the label - spreading of the above rule over nodes having previously - assigned labels .",
    "this rises the following stochastic dependence .",
    "the analysis of the previous phases relies on the independence of the random variables ( r.v.s ) that correspond to the events `` @xmath15 gets label @xmath84 '' for every label @xmath83 and every @xmath15 in a fixed community @xmath162 : let s enumerate such r.v.s as @xmath163 .",
    "given a node @xmath15 and a set of nodes @xmath164 , @xmath165 denotes the set of edges from @xmath15 to any node in @xmath164 .",
    "@xmath166 depends on the edges incident to @xmath15 ; so , for any pair @xmath167 we can write @xmath168 and @xmath169 .",
    "since in our undirected - graph model @xmath2 equals @xmath170 then @xmath166 and @xmath171 share the argument @xmath2 : this clearly yield stochastic dependence between them ( see fig . [",
    "fig : stochastic_dep ] ) .",
    "however , if the graph of @xmath162 is made directed , they become functions of disjoint sets of edges , therefore @xmath172 become mutually independent . in order to make our graph directed , the nodes run a simple procedure link - proc   at the very beginning of every step .",
    "this procedure simulates a virtual @xmath0 where the edges inside each community @xmath162 are generated according to a directed @xmath173 model , where @xmath174 .",
    "moreover , the procedure makes the resulting probability of the edges between communities still bounded by @xmath175 : it thus preserves the polynomial gap between @xmath3 and @xmath4 .",
    "the proofs of these facts are given in app .",
    "[ app : stocdep ] .",
    "* procedure link - proc : *    1 .",
    "each node @xmath15 , for each neighbor @xmath16 generates a pair @xmath176 where @xmath177 is a an integer randomly sampled from @xmath178 $ ] , and @xmath179 is @xmath180 or @xmath181 , each with probability @xmath182 and @xmath183 with probability @xmath184 .",
    "@xmath15 sends this pair to @xmath16 ( so it receives from @xmath16 the pair @xmath185 ) .",
    "3 .   if @xmath186 then @xmath15 defines @xmath187 , otherwise if @xmath188 then @xmath189 .",
    "4 .   finally , @xmath16 is a ( directed ) neighbor of @xmath15 iff @xmath190 .",
    "observe that we can neglect the event @xmath191 since its probability is @xmath192 : if this happens we assume that both nodes virtually remove each other from their own neighborhood . in the sequel , we implicitly assume that nodes apply procedure link - proc   and the protocol - window of phase 4 is repeated 3 times for a specific setting of the constant @xmath193 that will be determined in ( the proof of ) theorem [ thm : kh4 ] .",
    "thanks to theorem [ thm : phase3 ] , we can assume that the markovian process w.h.p . terminates phase 3 reaching a state that satisfies eq .",
    "[ eq : phase3thesisk ] .",
    "the proof of the next theorem is given in app .",
    "[ ph4:proof ] .",
    "[ thm : kh4 ] let @xmath159 be any constant such that @xmath194 .",
    "then , constants @xmath193 and @xmath143 can be fixed so that , at time step @xmath195 , the markovian process w.h.p reaches a state such that , for @xmath30 ,    @xmath196    theorem [ thm : kh4 ] states that , at the end of phase 4 , the markovian process w.h.p . reaches a state where a ( large ) constant fraction of the nodes ( say , @xmath197 ) in both communities is well - labeled while only @xmath198 nodes are bad - labeled .",
    "we now show that a further final phase , where nodes apply a simple majority rule , yields the good labeling , w.h.p .. remind that every node also applies procedure link - proc  shown in the previous phase .",
    "node @xmath103 applies the following labeling rule :    * for every @xmath199 $ ] , _ every _ node @xmath16 observes the labels of its neighbors at time @xmath24 and , for every label @xmath84 ( @xmath30 ) , @xmath16 computes the number @xmath200 of its neighbors labeled with @xmath84 . *",
    "then , node @xmath16 gets label @xmath201 if @xmath202 }    f^t_1   >    \\sum _ { t \\in [ 1,\\ldots , \\tau_5 ] } f^t_2 $ ] , otherwise @xmath16 gets label @xmath203 ( break ties arbitrarily ) .",
    "let us assume the markovian process starts phase 5 from a state satisfying eq .",
    "[ eq::f4final ] ( say with constant @xmath160 ) .",
    "the proof of the next theorem is given in app .",
    "[ ph5:proof ] .",
    "[ thm : f5all ] a constant @xmath204 can be fixed so that , at time @xmath205 , every node of each community is well - labeled , w.h.p .",
    "* overall completion time of the protocol and its optimality *    when @xmath3 and @xmath4 satisfy cond .",
    "( [ eq : cpq ] ) , we have shown that every phase has length @xmath9 : the protocol has thus an overall completion time @xmath9 . in appendix",
    "[ sec::generali ] , we will show that for @xmath206 the length of each phase must be stretched to @xmath207 .",
    "it is easy to verify that , if @xmath53 , starting from the initial random snapshot , there is a non - negligible probability that some node will be isolated for @xmath208 time steps where @xmath209 is any increasing function such that @xmath210 : this implies that , in the above range , our protocol has optimal completion time .",
    "* removing the presence of the two source nodes .",
    "* so far we have assumed that , in the initial state of the labeling process , there are exactly two source nodes , one in each community , which are labeled with different labels .",
    "this assumption can be removed by introducing a preliminary phase in which a randomized source election is performed and by some further changes that are described below .    in the first step ,",
    "every node , by an independent random choice , becomes a _ source _ with probability @xmath211 for a suitable constant @xmath212 .",
    "this clearly guarantees that , in every community , there are w.h.p . @xmath213",
    "then , every source @xmath214 randomly chooses a label @xmath215 $ ] .",
    "this implies that the minimal label @xmath201 in the first community and the minimal label @xmath203 in the second community are different w.h.p .. let @xmath131 and @xmath57 be the number of sources chosen in @xmath13 and @xmath14 , respectively , and define @xmath216 . we summarize the above arguments in the following    [ fc : n.sources ] two positive constants @xmath217 exist such that at the end of the first step w.h.p .",
    "it holds that @xmath218 .",
    "the generic state of the modified markovian process is represented by the following set of r.v.s :    @xmath219 where @xmath220 equals the number of nodes in @xmath29 labeled by the same ( _ good _ ) label as the @xmath221th source of @xmath29 while @xmath222 equals the number of nodes in @xmath29 labeled by the same ( _ bad _ ) label as the @xmath221th source of @xmath223 with @xmath224 . at every time step @xmath24 , for any @xmath225",
    "$ ] we define the r.v .",
    "@xmath226 as the the number of @xmath16-neighbors labeled with label @xmath86 at time @xmath24 .",
    "the first three phases of the protocol are identical to the 2-source case since the impact of the presence of an @xmath9 labels in each of the two communities remains negligible till the overall number of labeled nodes in each community is @xmath227 . by applying the same analysis of the 2-source case , at the end of phase 3",
    ", we can thus show that the markovian process w.h.p .",
    "reaches a state having similar properties to those stated in theorem [ thm : phase3 ] .",
    "we remind that @xmath3 and @xmath4 belong to the ranges in cond .",
    "( [ eq : cpq ] ) .",
    "[ thm : f3multi ] we can choose a suitable @xmath228 so that , at the end of phase 3 , the markovian process w.h.p . reaches a state in which for @xmath229 it holds @xmath230 \\ \\",
    "\\frac{n}{\\log^4n } \\ \\leqslant \\",
    "k^{\\ell}_j \\ \\leqslant \\   \\frac n{\\log^{4-\\eta}n } \\ ;   \\",
    "\\forall i \\in[b]\\ \\",
    "h^{\\ell}_{i}\\   = \\",
    "\\sqrt n \\ { \\mbox{\\rm{polylog\\,}}}n\\end{aligned}\\ ] ]    where @xmath231 is a constant that can be made arbitrarily small .",
    "we need to stop at a `` saturation size '' @xmath232 for _ every _ good label , since we want to guarantee ( w.h.p . ) that the minimal label infects at least @xmath233 nodes .",
    "then , as in the 2-source case , the protocol starts a controlled saturation phase ( i.e. phase 4 ) that consists of ( at most ) 4 consecutive time - windows in which every node applies the same following _ minimal - label _ rule :    _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ for @xmath234 to @xmath235 time steps , @xmath16 observes the labels of its neighbors and gets the _ minimal _ label @xmath236 among all the observed labels .",
    "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _    thanks to the above rule , the size of the nodes labeled by the minimal good - label increases by a logarithmic factor at the end of each of the four windows",
    ". this fact can be proved by using the same arguments of the proof of theorem [ thm : kh4 ] .",
    "it thus follows that , at the end of phase 4 , the number of nodes labeled with the good minimal label is at least a constant ( say @xmath197 ) fraction of all the nodes of the community .",
    "then , as in the 2-source case , every node can apply the majority rule in order to get the right label w.h.p .    * the case _ @xmath3-unknown_. * our protocol relies on the fact that nodes know the parameter @xmath237 : the length of the protocol s phases are functions of @xmath3 .",
    "so an interesting issue is to consider the scenario where nodes do not know the parameter @xmath3 ( i.e. the expected degree ) .",
    "thanks to edge independence , the dynamic random - graph process can be seen by every node as an independent sequence of random samples . indeed , at every time step @xmath24 , every node can store the number @xmath238 of its neighbors and it knows that this number has been selected by @xmath239 independent experiments according to the same bernoulli distribution with success probability @xmath240 .",
    "the goal is thus to use such samples in order to get a good approximation of @xmath3 . if @xmath241 , by using a standard statistical argument , every node w.h.p .",
    "will get the value of @xmath3 up to some negligible factor in @xmath9 time .",
    "let s see this task more formally .",
    "for @xmath242 time steps ( where @xmath243 is a constant that will be fixed later ) , every node stores the values @xmath244 ; then it computes @xmath245 .",
    "since @xmath164 is the sum of @xmath246 bernoulli r.v.s of parameter @xmath247 , we get a binomial distribution with mean @xmath248}=d c\\log n   \\left(1-\\frac{1}{n}\\right)$ ] then , every node uses the estimator @xmath249 to guess @xmath250",
    ". we can use the chernoff bound in order to determine a confidence interval for @xmath251 , as follows    @xmath252 \\right ) }   =   { \\mathbf{p } \\left ( s   \\notin [ { \\mathbf{e}\\left [ s \\right]}-\\delta c\\log n \\   \\frac{n-1}{n }   ,   { \\mathbf{e}\\left [ s \\right]}+\\delta c \\log n \\   \\frac{n-1}{n }   \\right ) }   = \\\\",
    "{ \\mathbf{p } \\left ( s<{\\mathbf{e}\\left [ s \\right]}\\left(1-\\frac{\\delta}{d}\\right ) \\right)}+{\\mathbf{p } \\left ( s>{\\mathbf{e}\\left [ s \\right]}\\left(1+\\frac{\\delta}{d}\\right ) \\right ) }     <   e^{-\\frac{\\delta^2}{2d^2}{\\mathbf{e}\\left [ s \\right ] } }   +   e^{-\\frac{\\delta^2}{3d^2}{\\mathbf{e}\\left [ s \\right ] } }     <   4 \\left(\\frac{1}{n^c}\\right)^{\\frac{\\delta^2}{3d }   } \\ ] ]    it thus follows that , for any @xmath253 , we can choose @xmath254 and @xmath243 sufficiently large in order to get a good confidence interval for all nodes of the network .",
    "this obtained approximation suffices to perform an analysis of the protocol which is equivalent to that of the case _",
    "* more communities . *",
    "the presence of a constant number @xmath255 of unknown equally - sized communities can be managed with a similar method to that described above for removing the presence of leaders .",
    "indeed , the major issue to cope with is the presence of a constant number of different label spreadings in each community and the protocol must select the right one in every community .",
    "however , if @xmath256 is a constant and the number of nodes in each community is some constant fraction of @xmath25 , then the impact of the presence of @xmath9 labels in each of the @xmath256 communities remains negligible till the overall number of labeled nodes in each community is @xmath227 .",
    "as in the previous paragraph , by first applying the minimal - label rule and then the majority one , the modified protocol returns a good - labeling w.h.p .    due to lack of space ,",
    "the protocol analysis in the edge - meg model is given in appendix .",
    "this paper introduces a framework that allows an analytical study of the distributed community - detection problem in dynamic graphs .",
    "then , it shows an efficient algorithmic solution in two classes of such graphs that model some features of opportunistic networks such as icmns .",
    "we believe that the problem deserves to be studied in other classes of dynamic graphs that may capture further relevant features of social opportunistic networks such as geometric constraints",
    ".    * acknowledgements . *",
    "we thank stefano leucci for its help in getting an efficient protocol simulation over large random graphs .",
    "10    chen avin , michal koucky , and zvi lotker . how to explore a fast - changing world ( cover time of a simple random walk on evolving graphs ) .",
    "automata , languages and programming _ , pages 121132 .",
    "springer , 2008 .",
    "michael  j. barber and john  w. clark . detecting network communities by propagating labels under constraints .",
    ", 80:026129 , aug 2009 .",
    "herv baumann , pierluigi crescenzi , and pierre fraigniaud .",
    "parsimonious flooding in dynamic graphs . in",
    "_ proceedings of the 28th acm symposium on principles of distributed computing _ , podc 09 , pages 260269 , new york , ny , usa , 2009 .",
    "s.  boccaletti , v.  latora , y.  moreno , m.  chavez , and d .- u . hwang .",
    "complex networks : structure and dynamics .",
    ", 424(4 - 5):175  308 , 2006 .    ravi  b. boppana .",
    "eigenvalues and graph bisection : an average - case analysis . in _ proceedings of the 28th annual symposium on foundations of computer science _ , sfcs 87 , pages 280285 , washington , dc , usa , 1987 .",
    "ieee computer society .",
    "ulrik brandes , daniel delling , marco gaertler , robert grke , martin hoefer , zoran nikoloski , and dorothea wagner . on modularity clustering .",
    ", 20(2):172188 , 2008 .",
    "thang  nguyen bui , f.  thomson leighton , soma chaudhuri , and michael sipser .",
    "graph bisection algorithms with good average case behavior . , 7(2):171191 , june 1987 .",
    "gennaro cordasco and luisa gargano .",
    "label propagation algorithm : a semi - synchronous approach .",
    "_ ijsnm _ , 1(1 ) , 3 - 26 , 2012 .",
    "http://dx.doi.org/10.1504/ijsnm.2012.045103 .",
    "a.  chaintreau , pan hui , j.  crowcroft , c.  diot , r.  gass , and j.  scott .",
    "impact of human mobility on opportunistic forwarding algorithms .",
    ", 6(6):606620 , 2007 .",
    "augustin chaintreau , abderrahmen mtibaa , laurent massoulie , and christophe diot .",
    "the diameter of opportunistic mobile networks . in _ proceedings of the 2007 acm conext conference _ , conext 07 , pages 12:112:12 , new york , ny , usa , 2007 .",
    "andrea  e.f .",
    "clementi , claudio macci , angelo monti , francesco pasquale , and riccardo silvestri .",
    "flooding time in edge - markovian dynamic graphs . in _ proceedings of the twenty - seventh acm symposium on principles of distributed computing _ , podc 08 , pages 213222 , new york , ny , usa , 2008 .",
    "andrea  e.f .",
    "clementi , angelo monti , francesco pasquale , and riccardo silvestri .",
    "information spreading in stationary markovian evolving graphs . in _",
    "parallel & distributed processing , 2009 .",
    "ipdps 2009 .",
    "ieee international symposium on _ , pages 112 .",
    "ieee , 2009 .",
    "anne condon and richard  m karp .",
    "algorithms for graph partitioning on the planted partition model .",
    ", 18(2):116140 , 2001 .",
    "leon danon , albert diaz - guilera , jordi duch , and alex arenas . comparing community structure identification . , 2005(09):p09008 , 2005 .",
    "m.e dyer and a.m frieze .",
    "the solution of some random np - hard problems in polynomial expected time .",
    ", 10(4):451  489 , 1989 .",
    "nathan eagle and alex pentland .",
    "reality mining : sensing complex social systems .",
    ", 10(4):255268 , 2006 .",
    "david easley and jon kleinberg . ,",
    "volume  8 .",
    "cambridge univ press , 2010 .",
    "flake , s.  lawrence , c.l .",
    "giles , and f.m .",
    "coetzee . self - organization and identification of web communities .",
    ", 35(3):6670 , 2002 .",
    "m.  girvan and m.  e.  j. newman .",
    "community structure in social and biological networks .",
    ", 99(12):78217826 , 2002 .    mark  s handcock , adrian  e raftery , and jeremy  m tantrum .",
    "model - based clustering for social networks .",
    ", 170(2):301354 , 2007 .",
    "paul  w. holland , kathryn  blackmond laskey , and samuel leinhardt .",
    "stochastic blockmodels : first steps .",
    ", 5(2):109  137 , 1983 .",
    "pan hui , eiko yoneki , shu  yan chan , and jon crowcroft . distributed community detection in delay tolerant networks . in _ proceedings of 2nd",
    "acm / ieee international workshop on mobility in the evolving internet architecture _",
    ", page  7 .",
    "acm , 2007 .",
    "mark jerrum and gregory  b sorkin .",
    "the metropolis algorithm for graph bisection .",
    ", 82(1):155175 , 1998 .",
    "thomas karagiannis , jean - yves le  boudec , and milan vojnovi .",
    "power law and exponential decay of inter contact times between mobile devices . in _ proceedings of the 13th annual acm international conference on mobile computing and networking _ ,",
    "pages 183194 .",
    "acm , 2007 .",
    "kishore kothapalli , sriram  v pemmaraju , and vivek sardeshmukh . on the analysis of a label propagation algorithm for community detection . in",
    "_ distributed computing and networking _ ,",
    "pages 255269 .",
    "springer , 2013 .",
    "leung , p. hui , p. li , and j. crowfort . towards real - time community detection algorithms in large networks .",
    "79(6 ) , 2009 .    xin liu and tsuyoshi murata .",
    "advanced modularity - specialized label propagation algorithm for detecting communities in networks .",
    ", 389(7):14931500 , 2010 .",
    "david lusseau and m.  e.  j. newman .",
    "identifying the role that animals play in their social networks .",
    ", 271(suppl 6):s477s481 , 2004 .",
    "francesca martelli , m  elena  renda , giovanni resta , and paolo santi . a measurement - based study of beaconing performance in ieee 802.11 p vehicular networks . in _",
    "infocom , 2012 proceedings ieee _",
    ", pages 15031511 .",
    "ieee , 2012 .",
    "frank mcsherry .",
    "spectral partitioning of random graphs . in _",
    "foundations of computer science , 2001 . proceedings .",
    "42nd ieee symposium on _ , pages 529537 .",
    "ieee , 2001 .",
    "e.  mossel , j.  neeman , and a.  sly . . ,",
    "february 2012 .",
    "m.  e.  j. newman and m.  girvan . finding and evaluating community structure in networks . , 69:026113 ,",
    "feb 2004 .",
    "mark  ej newman .",
    "spread of epidemic disease on networks .",
    "66(1):016128 , 2002 .    mark  ej newman and michelle girvan . finding and evaluating community structure in networks .",
    ", 69(2):026113 , 2004 .",
    "chuanjun pang , fengjing shao , rencheng sun , and shujing li . detecting community structure in networks by propagating labels of nodes . in _ advances in neural networks ",
    "isnn 2009 _ , pages 839846 .",
    "springer , 2009 .",
    "usha  nandini raghavan , rka albert , and soundar kumara .",
    "near linear time algorithm to detect community structures in large - scale networks . ,",
    "76:036106 , sep 2007 .",
    "erzsbet ravasz , anna  lisa somera , dale  a mongru , zoltn  n oltvai , and a - l barabsi .",
    "hierarchical organization of modularity in metabolic networks .",
    "297(5586):15511555 , 2002 .    tom  ab snijders and krzysztof nowicki . estimation and prediction for stochastic blockmodels for graphs with latent block structure .",
    ", 14(1):75100 , 1997 .",
    "thrasyvoulos spyropoulos , apoorva jindal , and konstantinos psounis .",
    "an analytical study of fundamental mobility properties for encounter - based protocols . , 1(1):440 , 2008 .",
    "p - u tournoux , jrmie leguay , farid benbadis , vania conan , m  dias de  amorim , and john whitbeck .",
    "the accordion phenomenon : analysis , characterization , and impact on dtn routing . in _",
    "infocom 2009 , ieee _ , pages 11161124 .",
    "ieee , 2009 .",
    "milan vojnovic and alexandre proutiere .",
    "hop limited flooding over dynamic networks . in _",
    "infocom , 2011 proceedings ieee _ , pages 685693 .",
    "ieee , 2011 .",
    "john whitbeck , vania conan , and marcelo  dias de  amorim .",
    "performance of opportunistic epidemic routing on edge - markovian dynamic graphs .",
    ", 59(5):12591263 , 2011 .",
    "eiko yoneki , pan hui , and jon crowcroft .",
    "wireless epidemic spread in dynamic human networks . in _ bio - inspired computing and communication _ , pages 116132 .",
    "springer , 2008 .",
    "in this section , we show the further relevant generalizations that can be efficiently solved by simple adaptations of our protocol and/or its analysis .    * edge markovian evolving graphs .",
    "* let us consider an edge - meg @xmath257 defined in the introduction and assume that @xmath258 . if @xmath259 , it is easy to see @xcite that the ( unique ) stationary distribution of the two corresponding 2-state edge - markov chains ( inside and outside the communities , respectively ) are @xmath260 it thus follows that the dynamic graph , starting from any @xmath33 , converges to the ( 2-communities ) erds - rnyi random graph with edge - probability functions + @xmath261 + the mixing time @xmath262 and @xmath263 of the two edge markov chain are bounded by @xcite @xmath264 , @xmath265",
    ". let us observe that there is a _",
    "markovian dependence _ between graphs of consecutive time steps .",
    "if we observe any event at time @xmath24 related to @xmath28 ( such as the number of well - labeled nodes ) then @xmath266 is not anymore random with the stationary distribution .",
    "it thus follows that we need to change the way the protocol works over the dynamic random graph .",
    "let @xmath267 ; then by definition of mixing time , starting from _ any _ edge subset @xmath28 at time @xmath24 , at time @xmath268 with some @xmath269 , if @xmath270 or @xmath271 then edge @xmath2 exists with probability @xmath272 , otherwise it exists with probability @xmath273 .",
    "in other words , whathever the state of the labeling process is at time @xmath24 , after a time window proportional to the mixing time , the dynamic graph is random with a distribution which is very close to the stationary one .",
    "we can thus modify our protocol for the _ dynamic erds  rnyi graph _ model @xmath0 in order to `` wait for mixing '' . between any two consecutive steps of the original protocol",
    "there is a _ quiescent _ time - window of length @xmath274 where every node simply does nothing .",
    "then , the analysis of the protocol over @xmath257 is similar to that in section [ sec::2-source ] working for the _ dynamic erds  rnyi graph _ @xmath275 .",
    "we can thus state that , under the condition @xmath276 for some constant @xmath8 , this version of our protocol w.h.p .",
    "performs a good - labeling in time @xmath277 .",
    "we finally observe that , for the `` realistic '' case @xmath278 ( see the discussion in the introduction ) , the mixing - time bound @xmath59 turns out to be @xmath9 : we thus get only a logarithmic slowdown - factor w.r.t . the good - labeling in the _ dynamic erds  rnyi graph _ @xmath275 .",
    "* sparse graphs . * when @xmath279 and @xmath280 ( for some constant @xmath8 ) , the snapshots of the dynamic graph are very sparse .",
    "so , every node must wait at least @xmath281 time step ( in average ) in order to meet some other node .",
    "this implies that the labeling protocol will be slower .",
    "we can reduce this case to the case @xmath282 by considering the _ time - union _ random graph obtained from @xmath0 according to the following    let @xmath283 be any positive integer and consider any sequence of graphs @xmath284 .",
    "then , we define the @xmath283-or - graph @xmath285 \\   :",
    "\\   e \\in e",
    "_ { t^{\\star}}\\}\\ ] ]    it is easy to prove the following    [ lem : orgraph ] let @xmath286 , then the @xmath287-or - graph of any finite sequence of graphs selected according to the @xmath288 model is a @xmath275 with @xmath289 and @xmath290 .",
    "the modified protocol just works as it would work over @xmath275 with @xmath291 and @xmath292 : in every phase , every node applies the phase s labeling rule ( only ) every @xmath293 time steps on the @xmath287-or - graph .",
    "the modified protocol thus requires @xmath294 time",
    ".    * dense graphs . *",
    "when @xmath3 becomes larger than @xmath295 and @xmath296 , the labeling problem becomes an easier task since standard probability arguments easily show that the ( good ) labeling process is faster and the related r.v.s ( i.e. number of new labeled nodes at every time step ) have much smaller variance .",
    "this implies that the protocol can be simplified : for instance , the source - labeling phase ( i.e. phase 1 ) can be skipped while the length of other phases can be reduced significantly as a function of @xmath3 .",
    "however , we again emphasize that _ dense _ dynamic random random graphs are not a good model for the scenario we are inspired from : icmns are opportunistis networks having sparse and disconnected topology .",
    "we run our protocol over sequences of independent random graphs according to the @xmath0 model .",
    "the protocol has been suitably simplified and tuned in order to optimize the real performance .",
    "in particular , the implemented procotol consists of 5 phases : phase 1 ( source - coloring ) , phase 2 - 3 ( fast - coloring i - ii ) , phase 4 ( min - coloring ) , and phase 5 ( majority - rule )",
    ". the rules of each phase is the same of the corresponding phase analyzed in section [ sec::2-source ] .",
    "moreover , the length of every phase is fixed to @xmath297 .",
    "as shown in the next tables , parameter @xmath243 is always very small and it depends on the parameter @xmath4 .",
    "the parameter @xmath243 has been heuristically chosen as the minimal one yielding the good labeling in more than @xmath298 of the trials .",
    "we consider instances of increasing size @xmath25 and for each size , we tested 100 random graphs . in the first experiment class",
    "( see table 1 ) , we consider homogeneous sparse graphs with the following setting : @xmath299 and 3 values of @xmath4 ranging from @xmath300 to @xmath301 .    .tab .",
    "1 . experimental results for the homogeneous case . for every value of @xmath25 ,",
    "the rows indicates the percentage of good - labeling for three choices of @xmath4 and the `` minimal '' setting for @xmath243 ( the total number of protocol steps is inside brackets ) . [",
    "cols=\"<,^,^,^\",options=\"header \" , ]     the experiments globally show that the tuning of parameter @xmath243 mainly depends on the value of @xmath4 even though it can be fixed to small values in all studied cases",
    ". moreover , the presence of non - homogeneous edge - probability function seems to slightly `` help '' the efficiency of the protocol . intuitively speaking",
    ", we believe this is due to the presence of fully - random irregularities in the graph topology that helps the protocol to _ break _ the symmetry of the initial configuration .",
    "[ lem : useful_ineq ] if @xmath302 and @xmath303 then @xmath304    we will often use the chernoff s bounds    [ lemma : cb1 ] let be @xmath305 where @xmath306 are independent bernoulli r.v.s and let be @xmath307 .",
    "if @xmath308 $ ] and @xmath309}$ ] , then it holds that @xmath310    @xmath311    [ lem : whpconjunction ] let @xmath312 be any poly - logarithm and @xmath313 , @xmath314 , ... , @xmath315 be events that hold w.h.p .",
    ", then @xmath316 holds w.h.p .",
    "in the sequel , we always analyze the markovian process in community @xmath13 since the analysis in the second community is the same .        *",
    "the variable @xmath317 iff @xmath16 gets label @xmath71 , and the variable @xmath318 describes the total number of the @xmath201-labeled nodes in @xmath13 . *",
    "the variable @xmath319 iff @xmath16 gets label @xmath73 , and the variable @xmath320 describes the total number of the @xmath203-labeled nodes in @xmath13 .        _",
    "_ we first bound from below the number of @xmath71-labeled nodes at the end of the phase 1 . notice that @xmath326 and we can apply lemma [ lem : useful_ineq ] to each factor on the right side , getting : @xmath327   \\geqslant   \\frac{p\\tau_{1}}{2}\\ ] ] where in the last inequality we used @xmath328 = 1 $ ] .",
    "the above inequality easily implies that @xmath329 } = 1 + ( |v_{1}|-1)\\cdot { \\mathbf{p } \\left ( x_{1}^{v}=1 \\right ) }   \\ \\geqslant \\   1 + \\left(\\frac{n}{2}-1\\right)\\frac{p\\tau_{1}}{2 }    \\ > \\   \\frac{n}{2 } \\left(1-\\frac{2}{n}\\right)\\frac{p\\tau_{1}}{2},\\ ] ] that is @xmath329 } > \\frac{np\\tau_{1}}{8}\\ ] ]      by hypothesis , we have that @xmath334 , so , w.h.p .",
    "it holds that @xmath335 a similar analysis , based on lemma [ lem : useful_ineq ] and chernoff bound ( [ eq : chernoff2 ] ) , yields the stated upper bound on the number of @xmath71-labeled nodes at the end of the phase 1 , that is , w.h.p .",
    "it holds that        _ proof .",
    "_ a sufficient condition for having @xmath341 is that no edge between any node in @xmath13 and @xmath342 occurs at any time step of phase 1 .",
    "hence , by lemma [ lem : useful_ineq ] , @xmath343 since @xmath344 , the lemma is proved .",
    "we remind that @xmath153 and consider any positive constant @xmath131 such that @xmath345 .",
    "we consider the markovian process when , at the generic step @xmath24 of this phase , it is in any state satisfying the following condition :              _ proof .",
    "_ observe that @xmath356 is lower bounded by the probability that in @xmath28 there is no edge between any node in @xmath13 and any node in @xmath14 which is already labeled @xmath203 . by the hypothesis ( [ eq : conditionphase2 ] ) and the conditions on @xmath3 and @xmath4 , we can thus apply lemma [ lem : useful_ineq ] and get @xmath357 proving that w.h.p .",
    "again , thanks to condition ( [ eq : conditionphase2 ] ) and the conditions on @xmath3 and @xmath4 ( eq . [ eq : cpq ] ) , we can apply lemma [ lem : useful_ineq ] to bound @xmath359 .",
    "we get @xmath360 we can thus bound the expected number of new well - labeled nodes @xmath361 }    = \\left(|v_{1}|-k_{1}^{(t)}\\right){\\mathbf{p } \\left ( x_{1}^{v}=1 \\right)}$ ] : @xmath362 } \\leqslant \\frac{np}{2}k_{1}^{(t)}\\left(1+\\frac { { \\mbox{\\rm{polylog\\,}}}n } { n^{1-a}}\\right ) \\end{aligned}\\ ] ]                  * proof of theorem [ thm : endtimephase2 ] . *",
    "we first analyze the good labeling .",
    "the idea is to derive the closed formula corresponding to the recurrence relation provided by lemma [ lem : phase2stimagood ] and to analyze it in two different spans of time : in the first span , we let @xmath157 increase enough so that , in the second span , we can apply a stronger concentration result . recall that , thanks to theorem [ thm : endtimephase1 ] , phase 2 starts with the markovian process in a state satisfying condition ( [ eq : startingcond2 ] ) that implies condition ( [ eq : conditionphase2 ] ) .",
    "moreover , we will fix the final time step @xmath354 so that condition ( [ eq : conditionphase2 ] ) has been holding for _ all time steps _ of phase 2 : this implies that we can apply lemma [ lem : phase2stimagood ] for all such steps .",
    "let @xmath368 be defined as @xmath369 since @xmath370 , thanks to lemma [ lem : whpconjunction ] , we can unroll ( backward ) the recursive relation from time @xmath371 to time @xmath126 and get @xmath372^{t^\\star -\\tau_1}k_1^{(\\tau_1 ) }    \\leqslant { k_1^{(t^\\star ) } } \\",
    "\\leqslant   \\left(1+\\frac{np}{2}\\right)^{t^\\star -\\tau_1 } \\left[1 + f(n , k_1^{(\\tau_1)})\\right]^{t^\\star -\\tau_1}k_1^{(\\tau_1)}\\ ] ]",
    "we observe that the value of @xmath373 can reach any arbitrarily large constant by tuning the constant @xmath374 in theorem [ thm : endtimephase1 ] ; so , @xmath375 can be made arbitrarily small . from this fact and eq .",
    "[ eq : f2t_window1 ] , we have that @xmath376 $ ] , where @xmath377 can be made arbitrarily small by decreasing @xmath375 ( i.e. by increasing @xmath374 in theorem [ thm : endtimephase1 ] ) . notice that , at any time step @xmath378 , condition ( [ eq : conditionphase2 ] ) is largely satisfied .",
    "we now unroll the recursive relation from time @xmath354 to time @xmath371 and get @xmath379^{\\tau_2-t^\\star } k_1^{(t^\\star ) }    \\leqslant { k_1^{(\\tau_2 ) } } \\   \\leqslant   \\left(1+\\frac{np}{2}\\right)^{\\tau_2-t^\\star } \\left[1 + f(n , k_1^{(t^\\star ) } ) \\right]^{\\tau_2-t^\\star } k_1^{(t^\\star ) } .\\ ] ]    we observe that , with a suitable choice of the positive constant @xmath380 , for @xmath381 it holds that @xmath382^{\\tau_2-t^\\star } \\geqslant        \\phi     \\mbox{\\hspace{1 cm } and \\hspace{1 cm } } \\left[1 + f(n , k_1^{(t^\\star ) } ) \\right]^{\\tau_2-t^\\star } \\leqslant    \\frac{1}{\\phi } \\end{aligned}\\ ] ]    by replacing @xmath354 into eq . [ eq : f2t_window2 ] , with a suitable choice of @xmath383 ( remind that @xmath377 can in turn be made arbitrarily small ) , we finally get @xmath384 . again , observe that , for all time steps @xmath385 , condition ( [ eq : conditionphase2 ] ) is largely satisfied : this implies that at each of these steps we were able to apply lemma [ lem : phase2stimagood ] .",
    "we consider the markovian process when , at the generic step @xmath24 of this phase , it is in any state satisfying the following condition @xmath389 \\ \\text { and } h_{i}^{(t ) } \\ = o (   n^{a_2 } ) , \\",
    "\\mbox{where $ a_1 < a_2<1$}\\ ] ]        in all the next lemmas of this phase , it is assumed that , at the end of phase 2 , the markovian process is in a state satisfying condition ( [ eq : conditionphase3 ] ) ( thanks to theorem [ thm : endtimephase2 ] this holds w.h.p . ) .                as usual",
    ", we exploit eq.s [ eq : f3l2lowerx ] and [ eq : f3l2upperx ] to bound the expectation @xmath399}=\\left(|v_1|-(k_1^{(t)}+h_1^{(t)})\\right)\\cdot { \\mathbf{p } \\left ( x_1^v=1 \\right)}\\ ] ] for some constant @xmath400 , w.h.p .",
    "it thus holds that @xmath401 }   \\leqslant \\frac{np}{2}k_1^{(t ) }    \\left(1+\\frac{\\tilde \\zeta}{\\log n}\\right)\\ ] ]    we can use the chernoff bounds ( [ eq : chernoff1 ] and [ eq : chernoff2 ] with @xmath402 ) , to get that , for some constant @xmath403 , w.h.p .",
    "@xmath404 from the above inequality , it follows that @xmath405 since @xmath406 is bounded by a constant , for the sake of simplicity we can just re - define @xmath407 as any fixed constant such that @xmath408        _ sketch of proof . _ since lemma [ lm : step_k3 ] holds as long as @xmath410 , from lemma [ lem : whpconjunction ] we get that the statement holds w.h.p . by applying the same unrollement argument shown in the previous phase .",
    "[ lm : h3 ] for any positive constant @xmath411 , a constant @xmath412 , with @xmath413 , can be fixed so that by choosing the final time step of phase 3 @xmath414 it holds w.h.p .",
    "that , for @xmath30 and for all @xmath415 , @xmath416 .",
    "_ sketch of proof .",
    "_ in order to bound the rate of @xmath417 , we consider the r.v .",
    "@xmath418 when the markovian process is in a generic state satisfying condition ( [ eq : conditionphase3 ] ) .",
    "thanks to theorem [ thm : endtimephase2 ] , we know this ( largely ) holds for the first step of phase 3 and , by the choice of @xmath156 , we will see this ( w.h.p . )",
    "holds for all @xmath415 by induction .          as for the expected value of new bad - labeled nodes , for some constant @xmath390",
    ", it holds that @xmath424 }   \\leqslant     \\left(\\frac{np}{2}h_1^{(t ) } +    \\frac{nq}{2}k_2^{(t)}\\right )     \\left(1+\\frac 1{\\log n}\\right ) \\label{eq : f3lh_expe_bound}\\ ] ]    from the chernoff bound and eq .",
    "( [ eq : f3lh_expe_bound ] ) , it follows that w.h.p .",
    "@xmath425 will not `` jump '' from a sublogarithmic value to a polynomial one : in other words , in the first time that @xmath426 will be at least @xmath427 , we have that @xmath428 .          hence unrolling @xmath417 until time @xmath426 , for some positive constants @xmath435 and @xmath436 , eq . ( [ eq : h_recursion ] ) becomes ( keeping high probability thanks to lemma [ lem : whpconjunction ] ) @xmath437 and the last side turns out to be @xmath438 when @xmath439 , proving the lemma .",
    "we see that the event `` @xmath15 gets color black '' implies the existence of edge @xmath2 , then @xmath443 . in graph",
    "@xmath444 we clearly see that , since @xmath16 and @xmath15 does not share any edge toward the other community , these edges do not yield stochastic dependence . in graph @xmath445",
    ", we see that if the edges inside each community are directed , then the presence of bold - drawn edges do not affect the presence of dashed - drawn edges . ]",
    "here we prove the properties yielded by procedure link - proc   claimed in phase 4 of section [ ssec : restcase ] .",
    "since we are considering a generic time step , we omit its index , thus @xmath446 .",
    "we denote with @xmath447 the set of directed edges constructed by procedure link - proc ; then , when writing @xmath448 we are assuming that @xmath2 is a directed edge .      _ proof . _ in what follows , the approximations denoted by `` @xmath452 '' consist in dropping off factors of order @xmath453 , where @xmath243 is given by the range from whom the numbers @xmath454 are sampled , that is from 1 to @xmath455 ( for the sake of simplicity in our protocol we set @xmath456 ) .    in order to study the distribution of @xmath449 , observe that for a given node @xmath15 respect to a node @xmath16 it holds @xmath457 from the preceding calculation for any pair of nodes @xmath458 , it follows @xmath459 now we have to shows that the edges of @xmath447 are independent . since r.v.s that are functions of independent r.v.s",
    "are themselves independent , notice that two given edges @xmath460 , that have one or zero nodes in common , are independent because they are built on independent edges of the @xmath275 graph .",
    "it remains to verify that the edges @xmath461 ( that are built on the same edge ) , are independent . by direct calculation @xmath462 concluding the proof .        *",
    "the variable @xmath317 iff @xmath16 gets label @xmath71 , and the variable @xmath318 describes the total number of the @xmath201-labeled nodes in @xmath13 . *",
    "the variable @xmath319 iff @xmath16 gets label @xmath73 , and the variable @xmath320 describes the total number of the @xmath203-labeled nodes in @xmath13 .",
    "so , since it holds @xmath469 , we get @xmath470 } \\   \\leqslant \\ 2 \\ nph_1t_4 \\ =   \\ o\\left ( n^{a_1 } \\ { \\mbox{\\rm{polylog\\,}}}n\\right)$ ] . + by repeating the same reasoning for the other 2 windows and by applying the chernoff bound ,",
    "the thesis follows .",
    "* proof of theorem [ thm : kh4 ] .",
    "* for the sake of brevity , we define @xmath471 , @xmath472 , and @xmath473 .",
    "+ let us consider a node @xmath467 at the end of the first time window of phase 4 . for some constant @xmath474",
    ", it holds that @xmath475    since @xmath476 , by computing the expected value of the sum of all @xmath477 s and by applying the chernoff bound , we get that the number of well - labeled nodes in @xmath13 at the end of the first time window of phase 4 is w.h.p .",
    "we have thus shown that , after the first window , the number of well labeled nodes inside each community is increased by a factor @xmath481 .",
    "we can then repeat the same analysis for the second and the third windows ( which are necessary when @xmath482 ) .",
    "let us consider the sparsest case @xmath483 ( the other cases are easier ) . in this case , at the end of the third window",
    ", it can be easily verified that :              _ sketch of proof .",
    "_ let us consider a node @xmath486 and , for every time step @xmath24 of phase 5 , define the r.v .",
    "@xmath487 counting the number of its @xmath201-labeled neighbors and the r.v . @xmath488 counting the number of its @xmath203-labeled neighbors in @xmath28 .",
    "then , define the two sums              @xmath494 }   \\ \\leqslant \\ \\sum_{t \\in [ \\tau_4 + 1,\\ldots , \\tau_5 ] } \\left ( \\sum_{v \\not\\in g^{\\tau_4 } } { \\mathbf{p } \\left ( ( u , v ) \\in e_t \\right ) } + \\sum_{v \\in v_2 }   { \\mathbf{p } \\left ( ( u , v ) \\in",
    "e_t \\right ) } \\right )   \\leqslant \\ \\frac 17 \\ , pn \\tau_5\\ ] ]    finally , observe that @xmath166 and @xmath492 are sums of independent binary r.v.s ( thanks to procedure link - proc ) . since @xmath495 and @xmath205 , we can thus choose a suitable constant @xmath204 and apply the chernoff bound to get the thesis ."
  ],
  "abstract_text": [
    "<S> inspired by the increasing interest in self - organizing social opportunistic networks , we investigate the problem of distributed detection of unknown communities in dynamic random graphs . as a formal framework </S>",
    "<S> , we consider the dynamic version of the well - studied _ planted bisection model _ </S>",
    "<S> @xmath0 where the node set @xmath1 $ ] of the network is partitioned into two unknown communities and , at every time step , each possible edge @xmath2 is active with probability @xmath3 if both nodes belong to the same community , while it is active with probability @xmath4 ( with @xmath5 ) otherwise . </S>",
    "<S> we also consider a time - markovian generalization of this model .    </S>",
    "<S> we propose a distributed protocol based on the popular _ label propagation algorithm _ and prove that , when the ratio @xmath6 is larger than @xmath7 ( for an arbitrarily small constant @xmath8 ) , the protocol finds the right `` planted '' partition in @xmath9 time even when the snapshots of the dynamic graph are sparse and disconnected ( i.e. in the case @xmath10 ) .    * keywords : * distributed computing , dynamic graphs , social opportunistic networks </S>"
  ]
}
{
  "article_text": [
    "many interesting classes of graphs are defined by forbidding induced subgraphs , see  @xcite for a survey .",
    "this is why the detection of several kinds of induced subgraphs is interesting , see  @xcite for a survey . in particular , the problem of deciding whether a graph @xmath2 contains as an induced subgraph some graph obtained after possibly subdividing prescribed edges of a prescribed graph @xmath5 has been studied .",
    "it turned out that this problem can be polynomial or np - complete according to @xmath5 and to the set of edges that can be subdivided .",
    "details , examples and open problems are given in  @xcite .",
    "the most general tool for solving this kind of problems ( when they are polynomial ) seems to be the _ three - in - a - tree _ algorithm of chudnovsky and seymour :    let @xmath2 be a connected graph and @xmath6 be three distinct vertices of @xmath2 . then deciding if there exists an induced tree of @xmath2 that contains @xmath6 can be done in time @xmath0 .",
    ", first example[fig : cubeex ] ]    , second example[fig : squareex ] ]    how to use three - in - a - tree is discussed in  @xcite and further evidences of its generality are given in  @xcite . because of the power and deepness of three - in - a - tree , it would be interesting to generalise it . here",
    "we study _ four - in - a - tree _ :",
    "the problem whose instance is a graph @xmath2 together with four of its vertices , and whose question is `` does @xmath2 contain an induced tree covering the four vertices ? '' .",
    "since this problem seems complicated to us , we restrict ourselves to triangle - free graphs .",
    "our approach is similar to that of chudnovsky and seymour for three - in - a - tree .",
    "we give a structural answer to the following question : what does a triangle - free graph look like if no induced tree covers four given vertices @xmath7 ?",
    "[ fig : cubeex ] and  [ fig : squareex ] , two examples of such graphs are represented .",
    "our main result , theorem  [ th : main ] , says that any triangle - free graph that does not contain a tree covering four vertices @xmath8 must have the `` same structure '' , in a sense to be defined later , as one of the two examples .",
    "the details of the statement are given in section  [ s : statement ] .",
    "our result is algorithmic : we provide an @xmath1-time algorithm that given a graph  @xmath2 together with four vertices @xmath8 outputs either an induced tree that contains @xmath8 or a partition of @xmath3 certifying that no such tree exists .",
    "note that apart from very basic subroutines such as breadth first search , our algorithm is self - contained .",
    "in particular it does no rely on three - in - a - tree .",
    "our proofs will use the following result of derhy and picouleau :    let @xmath2 be a triangle - free connected graph and @xmath6 be three distinct vertices of @xmath2 .",
    "then there is an induced tree of @xmath2 that contains @xmath6 .",
    "moreover such a tree of minimum size can be done in time @xmath9 .",
    "[ theo_3term ]    another generalisation of three - in - a - tree would be interesting .",
    "let us call _ centered tree _",
    "any tree that contains at most one vertex of degree greater than two .",
    "note that any minimal tree covering three vertices of a graph is centered .",
    "hence , three - in - a - tree and three - in - a - centered - tree are in fact the same problem .",
    "so four - in - a - centered - tree is also an interesting generalisation of three - in - a - tree .",
    "but we will prove in section  [ s : npc ] that it is np - complete , even when restricted to several classes of graphs , including triangle - free graphs .",
    "we leave open the following problems : four - in - a - tree for general graphs , @xmath10-in - a - tree for triangle - free graphs .",
    "all our graphs are simple and finite .",
    "we say that a graph @xmath2 _ contains _ a graph @xmath5 if @xmath2 contains an induced subgraph isomorphic to @xmath5 .",
    "we say that @xmath2 is @xmath5-free if it does not contain @xmath5 .",
    "if @xmath11 then @xmath12 $ ] denotes the subgraph of @xmath2 induced by @xmath13 .",
    "when we describe the complexity of an algorithm whose input is a graph , @xmath14 stands for the number of its vertices and @xmath15 stands for the number of its edges .",
    "we call _ path _ any connected graph with at least one vertex of degree  1 and no vertex of degree greater than  2 .",
    "a path has at most two vertices of degree  1 , which are the _ ends _ of the path . if @xmath16 are the ends of a path @xmath17 we say that @xmath17 is _ from @xmath18 to  @xmath19_. the other vertices are the _ interior _ vertices of the path .",
    "we denote by @xmath20 the path whose edge set is @xmath21 .",
    "when @xmath17 is a path , we say that @xmath17 is _ a path of @xmath2 _ if @xmath17 is an induced subgraph of @xmath2 . if @xmath17 is a path and if @xmath16 are two vertices of @xmath17 then we denote by @xmath22 the only induced subgraph of @xmath17 that is path from @xmath18 to @xmath19 .",
    "note that by _ path of a graph _ , we mean induced path . also , by _ tree of a graph _ , we mean an induced subgraph that is a tree .",
    "the _ union _ of two graphs @xmath23 and @xmath24 is the graph @xmath25 .",
    "a set @xmath26 is _ complete _ to a set @xmath27 if there are all possible edges between @xmath28 and @xmath29 .",
    "a set @xmath26 is _ anticomplete _ to a set @xmath27 if there are no edges between @xmath28 and  @xmath29 .",
    "when @xmath2 is a graph and @xmath30 a vertex , @xmath31 denotes the set of all the neighbors of @xmath30 . if @xmath32 then @xmath33 denotes the set of these vertices of @xmath2 that are not in @xmath34 but that have neighbors in @xmath34 . if @xmath35 , then @xmath36 denotes @xmath37 .",
    "if @xmath5 is an induced subgraph of @xmath2 , then we write @xmath38 instead of @xmath39 .",
    "when we define @xmath10 sets @xmath40 , we usually denote their union by @xmath34 .",
    "we use this with no explicit mention  : if we define sets @xmath41 then @xmath42 will denote their union , and so on .",
    "a _ terminal _ of a graph is a vertex of degree one .",
    "given a graph @xmath2 and vertices @xmath43 , let us consider the graph @xmath44 obtained from @xmath2 by adding for each @xmath45 a new terminal @xmath46 adjacent to @xmath45 .",
    "it is easily seen that there exists an induced tree of @xmath2 covering @xmath43 if and only if there exists an induced tree of @xmath44 covering @xmath47 .",
    "so , four - terminals - in - a - tree and four - in - a - tree are essentially the same problems , from an algorithmic point of view and from a structural point of view .",
    "hence , for convenience , we may restrict ourselves to the problem four - in - a - tree where the four vertices to be covered are terminals .    as mentioned in the introduction , our main result states that a graph that does not contain a tree covering four given terminals @xmath7 must have the `` same structure '' as one of the graphs represented on fig .",
    "[ fig : cubeex ] or [ fig : squareex ] .",
    "let us now define this precisely .",
    "a graph that has the same structure as the graph represented on fig  [ fig : cubeex ] is what we call a cubic structure : a graph @xmath2 is said to be a _ cubic structure _ with respect to a 4-tuple of distinct terminals @xmath48 if there exist sets @xmath49 @xmath50 , @xmath41 and @xmath51 such that :    1 .   @xmath52 ; 2 .",
    "@xmath53 are pairwise disjoint ; 3 .",
    "@xmath54 , @xmath55 ; 4 .",
    "@xmath56 is a stable set , @xmath57 ; 5 .",
    "@xmath56 is non - empty , @xmath55 ; 6 .",
    "[ i : cubene ] at most one of @xmath58 is empty ; 7 .",
    "@xmath56 is complete to @xmath59 , @xmath60 ; 8 .",
    "@xmath56 is anticomplete to @xmath61 , @xmath60 ; 9 .",
    "@xmath56 is anticomplete to @xmath62 , @xmath63 ; 10 .",
    "@xmath56 is anticomplete to @xmath62 , @xmath64 ; 11 .",
    "[ i : cubenai ] @xmath65 , @xmath60 ; 12 .",
    "[ i : cubenbi ] @xmath66 , @xmath60 ; 13 .",
    "[ i : cubenr ] @xmath67 ; 14 .",
    "[ i : cubeacon ] @xmath68 $ ] is connected , @xmath60 .    ]    ' '' ''    ]    a 17-tuple @xmath69 @xmath50 , @xmath70 of sets like in the definition above is a _",
    "split _ of the cubic structure . on fig .",
    "[ fig : cubic ] , two cubic structures are represented .",
    "cubic structure of a graph @xmath2 _ is a subset @xmath13 of @xmath3 such that @xmath12 $ ] is a cubic structure .",
    "the following lemma , to be proved in section  [ s : cube ] , shows that if a cubic structure is discovered in a triangle - free graph , then one can repeatedly add vertices to it , unless at some step a tree covering @xmath71 is found :    [ l : cube ] there is an algorithm with the following specification :    input : a triangle - free graph @xmath2 , four terminals @xmath72 , a split of a cubic structure @xmath13 of @xmath2 , and a vertex @xmath73 .",
    "output : a tree of @xmath74 $ ] that covers @xmath72 or a split of the cubic structure @xmath74 $ ] .",
    "complexity : @xmath9 .",
    "let us now turn our attention to our second kind of structure .",
    "a graph that has the same structure as the graph represented on fig  [ fig : squareex ] is what we call a square structure : a graph @xmath2 is said to be a _ square structure _ with respect to a 4-tuple @xmath48 of distinct terminals if there are sets @xmath75 such that :    1 .   @xmath76 ; 2 .",
    "@xmath77 are pairwise disjoint ; 3 .   @xmath54 , @xmath55 ; 4 .",
    "@xmath56 is a stable set , @xmath55 ; 5 .",
    "@xmath78 ; 6 .",
    "@xmath56 is complete to @xmath79 , where the addition of subscripts is taken modulo 4 , @xmath60 ; 7 .",
    "@xmath56 is anticomplete to @xmath80 , @xmath81 ; 8 .",
    "[ i : squarenai ] @xmath65 , @xmath60 ; 9 .",
    "@xmath82 ; 10 .",
    "[ i : squareacon ] @xmath68 $ ] is connected , @xmath55 .    ]",
    "a 9-tuple @xmath83 of sets like in the definition above is a _",
    "split _ of the square structure . on fig .",
    "[ fig : square ] , the smallest square structure is represented .",
    "square structure of a graph @xmath2 _ is a subset @xmath13 of @xmath3 such that @xmath12 $ ] is a square structure .",
    "the following lemma , to be proved in section  [ s : square ] , shows that if a square structure is discovered in a triangle - free graph , then one can repeatedly add vertices to it , unless at some step a cubic structure or a tree covering @xmath8 is found :    [ l : square ] there is an algorithm with the following specification :    input : a triangle - free graph @xmath2 , four terminals @xmath72 , a split of a square structure @xmath13 of @xmath2 , and a vertex @xmath84 .",
    "output : a tree of @xmath74 $ ] that covers @xmath72 or a split of some cubic structure of @xmath2 or a split of the square structure @xmath74 $ ] .",
    "complexity : @xmath9",
    ".    from the two lemmas above the main theorem follows :    [ th : main ] let @xmath2 be a connected graph and @xmath8 be four distincts terminals of @xmath2 .",
    "then either :    * @xmath2 is a cubic or a square structure with respect to @xmath85 ; * @xmath2 contains a tree that covers @xmath8 .    moreover , exactly one of these two statements ( 1 ) and ( 2 ) holds .",
    "this result is algorithmic in the sense that there exists an @xmath1-time algorithm whose input is a graph and four terminals @xmath86 and whose output is either a partition of @xmath3 showing that @xmath2 is a cubic or a square structure with respect to @xmath87 , or a tree that covers @xmath8 .",
    "let us first check that at most one of ( 1 ) , ( 2 ) holds .",
    "this means that a square or cubic structure with respect to a 4-tuple @xmath88 of terminals can not contain a tree covering @xmath89 . for suppose that such a tree @xmath4 exists in a square structure @xmath2 with a split @xmath90 . by the definition of square structures",
    "@xmath4 must contain a vertex in every @xmath56 , @xmath60 .",
    "so , @xmath4 contains a square , a contradiction .",
    "suppose now that such a tree @xmath4 exists in a cubic structure @xmath2 with a split @xmath91 .",
    "by the definition of cubic structures @xmath4 must contain a vertex in every @xmath56 , @xmath60 . since @xmath4 contains no cycle",
    ", @xmath4 has vertices in at most one of @xmath58 , say in @xmath92 up to symmetry .",
    "so , @xmath4 contains no vertex of @xmath93 .",
    "so @xmath94 lie in two different components of @xmath4 , a contradiction .",
    "the fact that at least one of ( 1 ) , ( 2 ) holds follows directly from the algorithm announced in the theorem .",
    "a description of this algorithm will complete the proof .",
    "so let us suppose that @xmath2 and four terminals @xmath8 are given .",
    "the algorithm goes through three steps :    * first step : * by theorem  [ theo_3term ] we find in time @xmath9 a minimal tree @xmath4 that covers @xmath6 .",
    "note that since @xmath6 are of degree one , @xmath4 contains a vertex @xmath95 of degree  @xmath96 and is the union of three paths @xmath97 , @xmath98 , @xmath99 .",
    "then we use bfs ( short name for breadth first search , see  @xcite ) to find a path @xmath100 such that @xmath101 has neighbors in @xmath4 , and minimal with respect to this property .",
    "if @xmath101 has a neighbor in @xmath102 then we let @xmath103 be the neighbor of @xmath101 closest to @xmath46 along @xmath102 .",
    "if @xmath101 has neighbors in @xmath104 then note that when @xmath105 , @xmath106 because else , @xmath2 contains a triangle .",
    "so @xmath107 induces a tree that covers @xmath108 , so we stop the algorithm and output this tree .",
    "note that from here on , @xmath109 .",
    "if @xmath101 has neighbors in exactly one of @xmath104 , say in @xmath110 up to symmetry , then we compute by theorem  [ theo_3term ] a tree @xmath111 of @xmath112 $ ] that minimally covers @xmath113 .",
    "we see that @xmath114 induces a tree that covers @xmath89 , so we stop the algorithm and output this tree .",
    "so , we are left with the case where @xmath101 has neighbors in two paths among @xmath104 , say in @xmath115 up to symmetry .",
    "then there are two cases .",
    "first case : one of @xmath116 is not in @xmath117 . up to symmetry",
    "we suppose @xmath118 .",
    "we compute by theorem  [ theo_3term ] a tree @xmath119 of @xmath120 $ ] that minimally covers @xmath121 .",
    "we see that @xmath122 induces a tree that covers @xmath86 , so we stop the algorithm and output this tree .",
    "second case : @xmath116 are both in @xmath117 .",
    "then we observe that @xmath123 is a square structure of  @xmath2 .",
    "a split can be done by putting @xmath124 , @xmath125 , @xmath126 ; @xmath127 , @xmath128 , @xmath129 , @xmath130 , @xmath131 and @xmath132 .",
    "we keep this square structure @xmath13 and go the next step .    *",
    "second step : * while there exists a vertex @xmath30 not in @xmath13 , we use the algorithm of lemma  [ l : square ] to add @xmath30 to @xmath13 , keeping a square structure .",
    "if we manage to put every vertex of @xmath2 in @xmath13 then we have found that @xmath2 is a square structure that we output .",
    "else , lemma  [ l : square ] says that at some step we have found either a tree covering @xmath8 that we output , or a cubic structure @xmath133 , together with a split for it . in this last case",
    ", we go to the next step .    *",
    "third step : * while there exists a vertex @xmath30 not in @xmath133 , we use the algorithm of lemma  [ l : cube ] to add @xmath30 to @xmath133 , keeping a cubic structure . if we manage to put every vertex of @xmath2 in @xmath133 then we have found that @xmath2 is a cubic structure that we output . else",
    ", lemma  [ l : cube ] says that at some step we have found a tree covering @xmath8 that we output .    *",
    "complexity analysis : * we run at most @xmath134 times @xmath9 algorithms .",
    "so the overall complexity is @xmath1 .",
    "let @xmath35 be a square structure of @xmath2 with respect to @xmath8 together with a split like in the definition and let @xmath30 be in @xmath135 .",
    "note that @xmath13 , the split of @xmath13 and @xmath30 are given by assumption .",
    "here below , we give a proof of the existence of the objects that the algorithm of our lemma must output , namely a tree , a cubic structure or an augmented square structure . but",
    "this proof is in fact the description of an @xmath9-time algorithm . to see this",
    ", it suffices to notice that all the proof relies on a several run of bfs or of the algorithm of theorem  [ theo_3term ] , and on checks of neighborhoods of several vertices . at the end , we give more information on how to transform our proof into an algorithm .",
    "when @xmath136 , we define the path @xmath137 to be a path from @xmath138 to @xmath46 , whose interior is in @xmath139 , @xmath140 .",
    "note that @xmath137 exists since by item  [ i : squareacon ] of the definition of square structures , @xmath68 $ ] is connected and by item  [ i : squarenai ] every vertex of @xmath56 has a neighbor in @xmath139 , @xmath141 .",
    "if @xmath30 has no neighbor in @xmath34 then @xmath30 can be put in @xmath51 and we obtain a split of the square structure @xmath142 .",
    "so we may assume that @xmath30 has a neighbor in @xmath34 , say @xmath143 .",
    "we choose @xmath144 subject to the minimality of @xmath145 .",
    "[ c : squarea4 ] suppose that there exists a path @xmath146 where @xmath147 and such that @xmath101 has neighbors in @xmath148",
    ". suppose @xmath149 minimal with respect to these properties .",
    "then either :    1 .   there exists a tree of @xmath74 $ ] that covers @xmath150 @xmath151 @xmath152 @xmath153 ; 2 .",
    "@xmath154 and @xmath155 ; 3 .",
    "@xmath74 $ ] contains a cubic structure .",
    "note that possibly @xmath156 .",
    "note also that by the definition of @xmath51 , @xmath101 have neighbors in @xmath34 only when @xmath157 .",
    "if @xmath101 has a neighbor in @xmath158 there exists a tree that covers @xmath8 .    up to symmetry",
    "@xmath101 has a neighbor @xmath159 .",
    "we choose @xmath160 subject to the minimality of @xmath161 .",
    "note that here @xmath156 .",
    "if @xmath30 has also a neighbor @xmath162 and a neighbor @xmath163 ( note that @xmath2 being triangle - free @xmath164 and @xmath165 can not happen ) then we choose @xmath166 subject to the minimality of respectively @xmath167 , @xmath168 .",
    "so , @xmath169 induces a tree that covers @xmath8 .",
    "hence we may assume that @xmath30 has no neighbor in @xmath170 .",
    "if @xmath30 has a neighbor @xmath162 then we pick @xmath171 ( if @xmath164 , we choose @xmath172 ) .",
    "we let @xmath173 be a tree of @xmath174 $ ] that covers @xmath175 .",
    "note that @xmath173 exists by theorem  [ theo_3term ] because @xmath174 $ ] is connected .",
    "so , @xmath176 where @xmath177 induces a tree that covers @xmath8",
    ". hence we may assume that @xmath30 has no neighbor in @xmath178 .",
    "now , we pick @xmath179 and we let @xmath180 be a tree of @xmath181 $ ] that covers @xmath182 . note that @xmath180 exists by theorem  [ theo_3term ] because @xmath183 $ ] is connected .",
    "so , @xmath184 where @xmath185 induces a tree that covers @xmath8 .",
    "so , we may assume that @xmath101 has no neighbor in @xmath158 .    if @xmath101 has a neighbor in @xmath186 there exists a tree that covers @xmath8 .",
    "let @xmath187 be a neighbor of @xmath101 in @xmath186 .",
    "note that @xmath2 being triangle - free , @xmath101 has no neighbor in @xmath188 .",
    "we let @xmath173 be a tree of @xmath189 $ ] that covers @xmath190 .",
    "note that in fact @xmath173 is a path either from @xmath187 to @xmath191 or from @xmath101 to @xmath191 .",
    "so , @xmath192 where @xmath193 , @xmath194 induces a tree that covers @xmath8 .",
    "so , we may assume that @xmath101 has no neighbor in @xmath186 .",
    "[ c : defs2 ] if @xmath101 has no neighbor in @xmath188 there exists a tree that covers @xmath8 .",
    "if @xmath101 has no neighbor in @xmath188 , by the definition of @xmath149 , @xmath101 must have a neighbor @xmath195 .",
    "we pick @xmath196 .",
    "we let @xmath173 be a tree of @xmath197 $ ] that covers @xmath198 .",
    "so , @xmath199 where @xmath193 , @xmath200 induces a tree that covers @xmath8 .",
    "so , we may assume that @xmath101 has a neighbor in @xmath188 ( say @xmath193 up to symmetry ) .",
    "[ c : defa3 ] if @xmath101 has no neighbor in @xmath201 then either there exists a tree that covers @xmath8 or @xmath154 and @xmath155 .    if @xmath194 is a non - neighbor of @xmath101 , then @xmath202 , where @xmath196 is a tree that covers @xmath8 .",
    "so , we may assume that @xmath101 is complete to @xmath203 .",
    "by the same way we may also assume that @xmath101 is complete to @xmath204 .",
    "hence @xmath205 and @xmath155 .",
    "note that if @xmath154 and @xmath155 then the second output of our claim  [ c : squarea4 ] holds .",
    "so , from the definition of @xmath149 we may assume that @xmath101 has a neighbor @xmath206 in @xmath201 .",
    "this implies @xmath207 .",
    "we choose @xmath206 subject to the minimality of @xmath167 .",
    "[ c : defs4 ] if @xmath30 has a neighbor in @xmath203 there exists a tree that covers @xmath8    let @xmath208 be such that @xmath209 .",
    "then @xmath210 is a tree that covers @xmath8 .",
    "so , we may assume that @xmath30 has a non - neighbor @xmath194 .",
    "let us finish the proof of our claim .",
    "we pick @xmath179 and @xmath196 .",
    "note that @xmath211 since @xmath2 is triangle - free . if @xmath212 then @xmath213 induces a tree that covers @xmath8 .",
    "so we may assume @xmath214 .",
    "symmetrically , we may assume @xmath215 .",
    "we observe that @xmath216 is a cubic structure .",
    "a split is given by : @xmath217 , @xmath218 , @xmath219 , @xmath220 , @xmath221 @xmath222 , @xmath223 , @xmath224 , @xmath225 , @xmath226 , @xmath227 , @xmath228 , @xmath229 .",
    "now , let @xmath230 be the set of the @xmath231-complete vertices of @xmath232 .",
    "let @xmath29 be the set of those vertices @xmath101 of @xmath233",
    "such that there exists a path from @xmath30 to @xmath101 whose interior is in @xmath51 .",
    "let @xmath234 be the set of those vertices @xmath101 of @xmath235",
    "such that there exists a path from @xmath30 to @xmath101 whose interior is in @xmath236 .",
    "let @xmath237 be the set of those vertices @xmath101 of @xmath238 such that there exists a path from @xmath30 to @xmath101 whose interior is in @xmath236 .",
    "let @xmath239 be @xmath240 .",
    "note that @xmath241 .",
    "note that we may assume that the only possible output of claim  [ c : squarea4 ] is @xmath154 and @xmath242 .",
    "also no vertex of @xmath29 has a neighbor in @xmath243 ( for @xmath30 this follows from claim  [ c : squarea4 ] , for the rest of @xmath29 this follows from the definition of @xmath51 ) .",
    "note that @xmath244 .",
    "but @xmath245 is possible since @xmath30 can be complete to @xmath188 .",
    "so @xmath246 from the definition of @xmath51 .",
    "also @xmath247 . and",
    "from claim  [ c : squarea4 ] , @xmath248 .",
    "hence , we can put all the vertices of @xmath234 in @xmath249 , all the vertices of @xmath237 in @xmath250 and leave all the vertices of @xmath239 in @xmath51 .",
    "more formally we let :    * @xmath251 ; * @xmath252 ; * @xmath253 ; * @xmath254 ; * @xmath255 .    we see that @xmath256 is a square structure of @xmath142 . + here",
    "is how to transform the proof above into an algorithm .",
    "we first compute @xmath230 .",
    "after , we use bfs to compute @xmath29 . the output of bfs is a rooted tree whose root is @xmath30 .",
    "similarly , we compute @xmath257 .",
    "we check whether @xmath248 .",
    "if this is true , the paragraph above shows how to output an augmented square structure .",
    "else there is a vertex @xmath258 such that @xmath101 has neighbors in @xmath148 .",
    "hence by backtracking the bfs tree from @xmath101 , we find a path @xmath259 where @xmath147 and such that @xmath101 has neighbors in @xmath148 .",
    "moreover , the condition @xmath260 and @xmath155 fails since @xmath261 .",
    "so the proof of claim  [ c : squarea4 ] is a description of how , by just checking several neighborhoods , we can find either :    * a tree of @xmath74 $ ] that covers @xmath150 @xmath151 @xmath152 @xmath153 or * a split of the a cubic structure of @xmath74 $ ] ,    this completes the proof of lemma  [ l : square ] .",
    "let @xmath35 be a cubic structure of @xmath2 with respect to @xmath8 together with a split like in the definition and let @xmath30 be in @xmath135 .",
    "note that @xmath13 , the split of @xmath13 and @xmath30 are given by assumption .",
    "here below , we give a proof of the existence of the objects that the algorithm of our lemma must output , namely a tree or an augmented cubic structure .",
    "but like in the proof of lemma  [ l : square ] , this proof is in fact the description of an @xmath9-time algorithm .",
    "we omit the details of how to tranform the proof into an algorithm , since they are similar to those of the proof of lemma  [ l : square ] .",
    "when @xmath136 , we define the path @xmath137 to be a path from @xmath138 to @xmath46 , whose interior is in @xmath139 , @xmath140 .",
    "note that @xmath137 exists since by item  [ i : cubeacon ] of the definition of cubic structures , @xmath68 $ ] is connected and by item  [ i : cubenai ] every vertex of @xmath56 has a neighbor in @xmath139 , @xmath141 .",
    "[ c : cubeai ] the lemma holds when @xmath30 has neighbors in @xmath34 .    for",
    "suppose that @xmath30 has a neighbor in @xmath34 , say @xmath143 ( the cases with a neighbor in @xmath262 are symmetric ) .",
    "we chooose @xmath144 subject to the minimality of @xmath145 .",
    "[ c : cubeas8 ] if there exists a path @xmath146 where @xmath263 and such that @xmath101 has neighbors in @xmath264 then there exists a tree of @xmath74 $ ] that covers @xmath150 @xmath151 @xmath152 @xmath153 .",
    "let @xmath149 be such a path , minimal with respect to its properties .",
    "note that possibly @xmath207 .",
    "if @xmath101 is adjacent to @xmath265 , @xmath266 and @xmath163 then we choose @xmath267 subject to the minimality of @xmath268 .",
    "so , @xmath269 induces a tree of @xmath2 that covers @xmath8 .",
    "hence , by symmetry , we may assume that @xmath101 has no neighbor in @xmath270 .",
    "if @xmath101 is adjacent to @xmath265 , @xmath266 then @xmath207 because no vertex in @xmath271 can have neighbors in both @xmath272 , @xmath178 by items  [ i : cubenbi ] , [ i : cubenr ] .",
    "we suppose that @xmath273 are chosen subject to the minimality of @xmath274 .",
    "let @xmath275 be a tree of @xmath276 $ ] that covers @xmath277 where @xmath278 is some vertex of @xmath204 ( if @xmath279 we choose @xmath280 ) .",
    "note that @xmath275 exists by theorem  [ theo_3term ] because @xmath281 $ ] is connected .",
    "one of @xmath282 is non - empty by item  [ i : cubene ] of the definition , and we may assume @xmath283 because of the symmmetry between @xmath284 and @xmath285 .",
    "so , @xmath286 where @xmath194 , @xmath287 is a tree that covers @xmath8 , except when @xmath288 .",
    "but then , @xmath289 is tree that covers @xmath290 , because @xmath279 would entail the triangle @xmath291 .",
    "hence , by symmetry , we may assume that @xmath101 has no neighbor in @xmath178 .    if @xmath101 is adjacent to @xmath265 then chose @xmath160 subject to the minimality of @xmath161 .",
    "suppose first that some vertex of @xmath149 has a neighbor @xmath292 .",
    "then @xmath293 $ ] is connected , so it contains a tree @xmath294 that covers @xmath295 .",
    "we observe that @xmath296 where @xmath297 , @xmath194 is a tree that covers @xmath8 . hence we assume from here on that no vertex of @xmath149 has a neighbor in @xmath298 .",
    "let @xmath275 be a tree of @xmath299 $ ] that covers @xmath300 where @xmath278 is some vertex of @xmath204 ( if @xmath279 we choose @xmath280 ) .",
    "suppose now that @xmath301 .",
    "we observe that @xmath302 where @xmath171 , @xmath200 , @xmath303 , is a tree of @xmath2 that covers @xmath304 except when @xmath305 .",
    "but in this case we observe that @xmath306 is a tree of @xmath2 that covers @xmath307 .",
    "hence , we may assume that @xmath308 and by item  [ i : cubene ] of the definition we have @xmath309 .",
    "if no vertex of @xmath149 has a neighbor in @xmath310 then @xmath311 where @xmath287 , @xmath312 , is a tree of @xmath2 that covers @xmath8 .",
    "so we may assume that some vertex of @xmath149 has a neighbor in @xmath313 and we let @xmath314 be the vertex of @xmath149 closest to @xmath30 that has one neighbor in @xmath313 , say @xmath315 ( the case with one neighbor in @xmath316 is similar because of the symmetry between @xmath317 and @xmath318 ) .",
    "let @xmath319 .",
    "so @xmath320 is a tree of @xmath2 that covers @xmath290 except when some vertex of @xmath321 has a neighbor in @xmath322 .",
    "but then , by the minimality of @xmath149 , we must have @xmath323 .",
    "now since @xmath2 is triangle - free , @xmath324 .",
    "so , @xmath325 is a tree of @xmath2 that covers @xmath8 .",
    "hence we may assume that @xmath101 has no neighbor in @xmath326 .",
    "now @xmath101 has no neighbors in @xmath327 .",
    "so @xmath101 must have a neighbor @xmath328 .",
    "hence , @xmath329 where @xmath193 , @xmath196 , @xmath194 is a tree that covers @xmath8 .",
    "[ c : cubeacomp ] if there exists a path @xmath146 whose interior is in @xmath330 and such that @xmath101 has neighbors in @xmath331 then either @xmath149 contains a vertex that is complete to @xmath332 or there exists a tree of @xmath333 $ ] that covers @xmath8 .",
    "let @xmath149 be such a minimal path .",
    "it suffices to prove that @xmath101 is complete to @xmath332 or that a tree covering @xmath8 exists . by  ( [ c : cubeas8 ] )",
    ", we may assume that no vertex of @xmath149 has a neighbor in @xmath334 .",
    "so up to the symmetry between @xmath335 , we may assume that @xmath101 has a non - neighbor @xmath292 and a neighbor @xmath287 for otherwise our claim is proved .",
    "hence @xmath336 is a tree that covers @xmath8 .",
    "now , let @xmath230 be the set of the @xmath337-complete vertices of @xmath142 .",
    "let @xmath29 be the set of these vertice @xmath101 of @xmath338 such that there exists a path from @xmath30 to @xmath101 whose interior is in @xmath330 .",
    "let @xmath234 be the set of these vertices @xmath101 of @xmath235 such that there exists a path from @xmath30 to @xmath101 whose interior is in @xmath339 .",
    "let @xmath237 be the set of these vertices @xmath101 of @xmath340 such that there exists a path from @xmath30 to @xmath101 whose interior is in @xmath341 .",
    "let @xmath239 be @xmath240 .",
    "note that @xmath342 .    by  ( [ c : cubeas8 ] )",
    ", we may assume that no vertex of @xmath29 has a neighbor in @xmath343 .",
    "note that @xmath244 .",
    "but @xmath245 is possible since @xmath30 can be complete to @xmath337 .",
    "so by  ( [ c : cubeacomp ] ) , @xmath344 . also by  ( [ c : cubeacomp ] ) , @xmath345 . and @xmath346 .",
    "hence , we can put all the vertices of @xmath234 in @xmath249 , all the vertices of @xmath237 in @xmath250 and all the vertices of @xmath239 in @xmath347 .",
    "we obtain a split of the cubic structure @xmath142 .",
    "[ c : cubevcs ] the lemma holds if @xmath30 is complete to @xmath348 , @xmath141 .",
    "we prove the claim when @xmath349 , the other cases are symmetric .",
    "so @xmath30 is complete to @xmath350 .",
    "[ c : cubes4 ] if there exists a path @xmath351 such that @xmath352 and @xmath101 has a neighbor @xmath353 in @xmath203 then @xmath74 $ ] contains a tree that covers @xmath307 .",
    "let us consider such a path @xmath149 minimal with respect its properties .",
    "every vertex of @xmath354 is in @xmath355 .",
    "indeed , @xmath355 is the only set among @xmath356 that allows neighbors in @xmath203 , and there are no edges between the sets @xmath356 .",
    "hence by the properties of @xmath355 , no vertex of @xmath354 can have neighbors in @xmath357 .",
    "so , @xmath358 where @xmath179 , @xmath193 , @xmath196 , induces a tree that covers @xmath8 .",
    "let @xmath29 be the set of these vertices @xmath101 of @xmath330 such that there exists a path @xmath351 whose interior is in @xmath271 .",
    "if @xmath30 has some neighbors in @xmath355 then by  ( [ c : cubes4 ] ) we may assume that every component of @xmath359 $ ] contains no neighbors of vertices of @xmath203 .",
    "so , every such component can be taken out of @xmath355 and put in @xmath51 instead",
    ". then we may put @xmath30 in @xmath316 and we obtain a split of the cubic structure @xmath360 .    [",
    "c : cubebs ] the lemma holds .    by claim  [ c : cubeai ]",
    "we may assume that @xmath30 has no neighbor in @xmath34 .",
    "[ c : cubes123 ] for the pairs @xmath361 such that @xmath63 and the pairs @xmath361 among @xmath362 , @xmath363 , @xmath364 , @xmath365",
    "the statement below is true :    if there exists a path @xmath366 of @xmath367 $ ] such that @xmath314 has a neighbor in @xmath56 and @xmath101 has a neighbor in @xmath62 then the lemma holds .",
    "let us choose such a pair @xmath361 and such a path @xmath149 , subject to the minimality of @xmath149 .",
    "note that by the definition of a cubic structure , @xmath368 is impossible .",
    "so , @xmath149 contains @xmath30 .    if @xmath314 is adjacent to @xmath369 then @xmath370 by the minimality of  @xmath149",
    "so , @xmath371 induces a tree that covers @xmath8 .",
    "hence , we may assume that @xmath314 ( and symmetrically @xmath101 ) has no neighbor in @xmath203 .",
    "if @xmath314 is adjacent to @xmath372 then @xmath373 by the minimality of @xmath149 . by claim  [ c : cubevcs ] we may assume that @xmath30 is not complete to @xmath350 , so @xmath30 has a non - neighbor in @xmath374 , say @xmath179 .",
    "let @xmath375 be neighbors of @xmath30 . by item",
    "[ i : cubene ] of the definition , we have @xmath376 , so up to the symmetry between @xmath284 and @xmath285 we may assume that there exists @xmath377 .",
    "note that @xmath378 because @xmath2 is triangle - free .",
    "so @xmath379 induces a tree that covers @xmath8 .",
    "so , we may assume that @xmath314 ( and symmetrically @xmath101 ) has no neighbor in @xmath186 .",
    "if @xmath361 is such that @xmath380 then up to symmetry , @xmath314 has a neighbor in @xmath179 and @xmath101 has a neighbor @xmath193 .",
    "no vertex of @xmath149 has neighbors in @xmath381 because such a vertex would form a triangle or would contradict the minimality of @xmath149 .",
    "also no vertex of @xmath149 has neighbors in @xmath382 .",
    "indeed for @xmath383 this follows from the preceeding paragraphs , and for the interior vertices of @xmath149 , it follows from the minimality of @xmath149 .",
    "so , @xmath384 where @xmath385 is a tree that covers @xmath8 .",
    "if @xmath314 has a neighbor @xmath179 and @xmath101 has a neighbor @xmath386 , then no vertex of @xmath149 has neighbors in @xmath387 .",
    "indeed , such a vertex would form a triangle or would contradict the minimality of @xmath149 .",
    "so , @xmath388 induces a tree that covers @xmath8 .",
    "similarly , we can prove that our claim holds when @xmath361 is one of @xmath363 , @xmath364 , @xmath389 .",
    "let @xmath29 be the set of these vertice @xmath314 of @xmath338 such that there exists a path from @xmath30 to @xmath314 whose interior is in @xmath330 .",
    "from  ( [ c : cubes123 ] ) it follows that @xmath390 is included in either @xmath391 , @xmath392 , @xmath393 , @xmath394 or @xmath395 .",
    "so , respectively to these cases , @xmath29 can be put in either @xmath347 , @xmath396 , @xmath397 , @xmath355 or @xmath51 , and we obtain a split of the cubic structure @xmath360 .",
    "this completes the proof of lemma  [ l : cube ] .",
    "the np - completeness of four - in - a - centered - tree follows directly from the fact ( proved by bienstock  @xcite ) that the problem of detecting an induced cycle passing through two prescribed vertices of a graph is np - complete .",
    "in fact , the np - completeness result of bienstock remains true for several classes of graphs where some induced subgraphs are forbidden . in  @xcite , lvque , lin ,",
    "maffray and trotignon study the kinds of graph that can be forbidden .",
    "we use one of their result .",
    "when @xmath398 , we denote by @xmath399 the cycle on @xmath10 vertices .",
    "[ th : nplin ] let @xmath398 be an integer . then the following problem is np - complete :    instance : two vertices @xmath400 of degree  2 of a graph @xmath2 that does not contain @xmath401 .",
    "question : does @xmath2 contain an induced cycle covering @xmath402  ?",
    "we deduce easily :    let @xmath398 be an integer . then the following problem is np - complete :    instance : four terminals @xmath8 of a graph @xmath2 that does not contain @xmath401 .",
    "question : does @xmath2 contain a centered tree covering @xmath403  ?",
    "let us consider an instance @xmath404 of the np - complete problem of theorem  [ th : nplin ] .",
    "let @xmath405 be the neighbors of @xmath406 and @xmath407 be the neighbors of @xmath408 .",
    "we prepare an instance @xmath409 of our problem as follows .",
    "we delete @xmath410 .",
    "we add five vertices @xmath411 and the following edges : @xmath412 .",
    "now , @xmath413 is an instance of our problem .",
    "since @xmath414 is a @xmath415 of @xmath44 and since @xmath94 are of degree  1 , every induced centered tree of @xmath44 covering @xmath89 must be made of four edge - disjoint paths @xmath416 ,",
    "@xmath417 , @xmath418 , @xmath419 .",
    "so , such a tree exists if and only if there exists an induced cycle of @xmath2 covering @xmath410 .",
    "this proves that our problem is np - complete .    by the same way",
    ", four - in - a - centered - tree can be proved np - complete for several classes of graphs defined by a given list @xmath420 of forbidden subgraphs .",
    "each time , the proof relies on a direct application of an np - completeness result for @xmath420-free graphs from  @xcite . going into the details of every possible list that we can get would not be too illuminating since the lists are described in  @xcite .",
    "let us just mention one result : four - in - a - centered - tree is np - complete for triangle - free graphs with every vertex except one of degree at most three .",
    "we are grateful to paul seymour for pointing out to us a simplification in our original np - completeness proof ."
  ],
  "abstract_text": [
    "<S> the three - in - a - tree algorithm of chudnovsky and seymour decides in time @xmath0 whether three given vertices of a graph belong to an induced tree . here </S>",
    "<S> , we study four - in - a - tree for triangle - free graphs . we give a structural answer to the following question : what does a triangle - free graph look like if no induced tree covers four given vertices  ? </S>",
    "<S> our main result says that any such graph must have the `` same structure '' , in a sense to be defined precisely , as a square or a cube .    </S>",
    "<S> we provide an @xmath1-time algorithm that given a triangle - free graph  @xmath2 together with four vertices outputs either an induced tree that contains them or a partition of @xmath3 certifying that no such tree exists . </S>",
    "<S> we prove that the problem of deciding whether there exists a tree @xmath4 covering the four vertices such that at most one vertex of @xmath4 has degree at least  3 is np - complete .    </S>",
    "<S> ams mathematics subject classification : 05c75 , 05c85 , 05c05 , 68r10 , 90c35    key words : tree , algorithm , three - in - a - tree , four - in - a - tree , triangle - free graphs , induced subgraph . </S>"
  ]
}
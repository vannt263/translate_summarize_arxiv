{
  "article_text": [
    "multiphase flow in confined geometries is ubiquitous in nature and technological applications .",
    "a very common example is blood flow in the microcirculation .",
    "recall that blood is primarily a suspension of red blood cells ( rbcs ) in plasma , with the volume fraction @xmath3 of rbcs ( hematocrit ) typically ranging between @xmath4 in the capillaries and reaching as high as @xmath5 in large arteries @xcite .",
    "the diameter of the blood vessels in the microcirculation , which includes the capillaries , arterioles and venules , is typically in the range @xmath6 @xcite , such that a discoidal rbc with a typical diameter and thickness of @xmath7 and @xmath8 respectively can be strongly to moderately confined .",
    "therefore , any realistic computational study of blood flow in the capillaries must account for confinement .",
    "other examples of technological interest where confinement effects are usually significant include multiphase flows in microfluidic devices @xcite .",
    "again , any realistic model must account for confinement in such problems .",
    "given the importance of multiphase flows under confinement , or more generally speaking in non - periodic geometries , it is imperative to develop efficient and accurate computational techniques which faithfully represent the system under study , including the aspect of system size ( meaning number of particles here ) .",
    "the algorithm presented herein has been motivated by our goal to study the class of problems described above .",
    "we next discuss some related previous efforts on the computational studies of multiphase flows under confinement .",
    "boundary integral based methods have emerged as a powerful tool for studying the flow behavior of multiphase systems in the limit of negligible reynolds number , i.e. under stokes flow conditions .",
    "such methods have been employed in the past to study the flow behavior of a variety of particle types including drops , capsules , rbcs , and vesicles among others .",
    "most of these prior implementations scale as @xmath9 , where @xmath2 is proportional to the number of degrees of freedom in the system . for a system with @xmath10 particles ,",
    "each of which have been discretized into @xmath11 elements , the number of degrees of freedom in the system scales as @xmath12 .",
    "the @xmath9 scaling above assumes an iterative solution of the discretized system of equations , where the number of iterations is independent of @xmath2 ; a direct solution will result in a scaling of @xmath13 , while a system size dependent number of iterations with an iterative solution results in a scaling higher than @xmath9 ; the worst case scaling being @xmath13 .",
    "the @xmath9 scaling is usually prohibitive , such that it precludes a numerical study of large system sizes .",
    "it is therefore not surprising that many of the past studies have been limited to an @xmath14 number of particles .    to overcome these limitations ,",
    "there have been several efforts to develop _ accelerated _ techniques , where an accelerated technique is assumed to give a scaling closer to the ideal @xmath0 , while being sufficiently accurate at the same time .",
    "these accelerated techniques employ either some variant of the particle - particle - particle - mesh ( @xmath15 m ) method @xcite , or the fast multipole method ( fmm ) @xcite .",
    "one of the earliest stokes flow boundary integral implementation with acceleration was perhaps presented by @xcite , who employed the fmm for acceleration in complex domains . using the particle - mesh - ewald ( pme ) method , @xcite developed an accelerated implementation of the stokes flow boundary integral method for her studies on two dimensional periodic suspensions of emulsions and foams .",
    "@xcite @xcite employed multipole expansion accelerated boundary integral method to study large number of drops in a periodic geometry under shear .",
    "@xcite used the smooth particle - mesh - ewald method to study the motion of periodic suspensions of rbcs and leukocytes in two dimensions ; this was later extended to three dimensions by @xcite . in the latter study @xcite , the effect of confinement was incorporated by explicitly discretizing the walls , which generally has unknown tractions and known no - slip velocity conditions .",
    "this explicit discretization is necessary because the periodic green s function does not inherently satisfy the no - slip condition on the walls .",
    "additionally , the previous authors employed a staggered time integrator , such that the wall tractions and the particle surface velocities were not determined simultaneously ; this is due to the large cost associated with their simultaneous solution .",
    "another potential drawback with the periodic green s function is that it has a zero mean flow and a non - zero mean pressure gradient associated with it @xcite . as a consequence ,",
    "the pressure drop in the system is not directly a specified quantity , and must be solved for by varying the mean flow , which is a specified quantity @xcite .",
    "note that many experiments on pressure driven flow have a specified pressure drop , and it is therefore desired to specify the pressure drop directly in numerical simulations without incurring additional computational costs .",
    "we also remark that the specified mean flow includes the flow outside the walls , as that is a part of the simulation box @xcite ; consequently , in such a method , neither the mean flow between the walls nor the pressure drop is a directly controlled quantity",
    ". other recent work of possible interest is @xcite , where a fmm accelerated boundary integral method is presented .",
    "while this implementation was developed for an arbitrary domain , its applicability is restricted to two dimensional systems . in a subsequent article @xcite",
    ", the previous authors generalized their implementation to three dimensions , though only an unbounded domain was considered .",
    "at this point , it must be emphasized that all the prior accelerated implementations of the boundary integral method are based on either the free space green s function or the periodic green s function ; in such a case , the boundaries of the confined domain are required to be explicitly discretized .",
    "we next discuss previous boundary integral implementations employing the green s function for the geometry of interest .",
    "such a green s function satisfies the appropriate boundary conditions at the domain boundaries ; consequently , the unknowns at the domain boundaries , e.g. hydrodynamic tractions , do not enter the boundary integral equation . a popular geometry for which several boundary integral implementations have been developed is a slit  the region between two parallel walls .",
    "the green s function for this geometry has been provided by @xcite . a boundary integral implementation based on this green s function",
    "was developed by @xcite for rigid particles .",
    "this was later extended by @xcite for studies on drops in the same geometry . in a related work",
    ", @xcite also implemented a boundary integral method for drops between two parallel walls , though that was restricted to matched continuous and dispersed phase viscosities .",
    "this was later extended by @xcite to include non - matched viscosity problems .",
    "it is important to emphasize that none of these implementations are accelerated and have a computational cost of at least @xmath9 .",
    "consequently , it is not surprising that all of the studies described above were limited to a few particles and are thus not suitable for studying suspension dynamics .",
    "we now briefly discuss examples of other numerical techniques employed in the literature for studies on the flow behavior of particles under confinement .",
    "one such simulation technique is the immersed boundary method , which has been employed , e.g. by @xcite and @xcite , for studies on capsules in a slit .",
    "another popular technique is the lattice - boltzmann method . as an example",
    ", @xcite developed a coupled lattice - boltzmann and finite element method to study deformable particles , which included studies under confinement .",
    "a somewhat related algorithm is the multiparticle collision dynamics , which has been used by , e.g. , @xcite to study rbcs and vesicles in capillaries .",
    "the ideal computational cost of all the above numerical techniques is @xmath0 .",
    "finally , @xcite have developed an accelerated stokesian dynamics method for rigid spherical particles in a slit that uses ideas related to those presented here and scales as @xmath16 .    in the present study",
    ", we develop an accelerated boundary integral method for multiphase flow in an arbitrary geometry and implement it for a slit geometry as shown in fig .",
    "[ fig : geom ] .",
    "the computational complexity of this algorithm scales as @xmath0 or @xmath16 depending on the specific numerical scheme employed .",
    "the latter scaling of @xmath16 is associated with the use of fast fourier transforms ( ffts ) if one or more directions have periodic boundary conditions , though that is not a requirement of our method . in the present effort",
    ", we provide a detailed description using the example of the slit geometry ; its extension to other geometries is straightforward .",
    "the acceleration in our method is provided by the use of general geometry ewald - like method ( ggem ) @xcite .",
    "the choice of ggem as the acceleration technique necessitates the use of an alternative boundary integral formulation in which the velocity field is expressed solely in terms of a single layer integral @xcite ; its unknown density is obtained from a second kind integral equation involving the double layer integral .",
    "the resulting single and double layer integrals are computed efficiently employing the ggem methodology , which results in the aforementioned favorable scaling of @xmath0 or @xmath16 .",
    "the organization of this article is as follows . in sec .",
    "( [ sec : overview ] ) , we provide a brief overview of the ggem accelerated boundary integral method and also discuss some of the limitations of the current implementation . following this , in sec .",
    "( [ sec : form ] ) , we present the boundary integral formulation and discuss its numerical implementation using ggem . in sec .",
    "( [ sec : memb ] ) , we present the procedure to compute the hydrodynamic traction jump at a particle surface using the example of a capsule with a neo - hookean membrane .",
    "the solution procedure for the discretized boundary integral equation is presented next in sec .",
    "( [ sec : sol ] ) .",
    "an extensive validation of our method is presented in sec .",
    "( [ sec : val ] ) .",
    "lastly , in sec .",
    "( [ sec : mult_part ] ) , we present results from several large scale multiparticle simulations and verify the computational complexity of our algorithm .",
    "we summarize here some of the key aspects of the present work .",
    "each of these points are discussed further later in the article .    *",
    "the general geometry ewald like method ( ggem ) employed in the current work for acceleration essentially yields the _ geometry - dependent _ green s function and other associated quantities .",
    "this work is a first instance of an accelerated boundary integral method based on the geometry - dependent green s function .",
    "prior implementations have employed either the free - space green s function ( in case of fmm accelerated methods ) or the periodic green s function ( in case of pme accelerated methods ) . *",
    "the ggem methodology decomposes the overall problem into a _ local _ problem and a _ global _ problem , essentially by splitting the green s function into local ( singular but exponentially - decaying ) and global ( smooth but long - ranged ) parts .",
    "the implementation of the local problem is similar to that of the traditional boundary integral method .",
    "however , since the local green s function decays exponentially with distance from the source of the singularity , distant elements are not coupled and the local solution can be obtained in @xmath0 operations . * the global problem involves solving a _ single _ phase stokes equation in the domain of interest with known boundary conditions and with a known smooth distribution of force densities .",
    "it is in this problem that the coupling between distant elements appears . in solving the global problem ,",
    "one is not concerned with the particle interfaces , or the different viscosity fluids present inside and outside the particle ( if that is the case in the original problem ) .",
    "this major simplification allows the use of a wide variety of fast and accurate numerical techniques present in the literature for the solution of navier - stokes equation in an arbitrary domain .",
    "all these methods , including those based on finite difference , finite volume , finite element , and spectral methods are suitable here @xcite .",
    "in addition , various fast and efficient implementations of navier - stokes solvers on gpus and distributed memory systems are readily available @xcite .",
    "* we present a spectral @xmath17 stokes flow solver for the global problem in a slit geometry , which , as indicated in the introduction , is one of the most widely - studied confined geometries studied in the literature .",
    "this solver employs a fourier - chebyshev galerkin method in conjunction with the influence matrix approach @xcite .",
    "the unknown coefficients of the fourier - chebyshev series expansion are computed with a direct @xmath0 algorithm  no iterations are necessary here , as would be the case with fmm or pme accelerated methods in a slit .",
    "the implementation of the methodology presented in this paper also has some limitations .",
    "an important limitation of the current implementation concerns the evaluation of the near singular integrals ",
    "these integrals arise when the gaps between the particles become very small , and , if not treated appropriately , may cause the simulations to diverge . in the present work",
    "this is alleviated by requiring that the minimum interparticle gap in the system be always maintained above a specified value ; this is achieved by the use of an overlap correction procedure in an auxiliary step .",
    "there are several other minor limitations of the current implementation .",
    "for example , we currently use linear elements to discretize the particle surface .",
    "it may be beneficial to employ higher order discretizations , like a spectral discretization , which could be particularly helpful for the accurate evaluation of the near singular integrals . in this paper results",
    "are reported only for a slit geometry .",
    "it will be appropriate to develop efficient implementations of the our methodology for other geometries like a cylinder .",
    "it must be emphasized that none of the above limitations are inherent to our methodology and we hope to address these in future efforts .",
    "inside the domain boundaries denoted by @xmath18 , containing ( for example ) two particles with internal viscosities @xmath19 and @xmath20 respectively ; their surfaces are denoted by @xmath21 and @xmath22 .",
    "the undisturbed flow is denoted by @xmath23.,scaledwidth=50.0% ]      we consider a three - dimensional suspension of deformable particles ( e.g. fluid - filled capsules ) as shown in fig .",
    "( [ fig : geom ] ) , where both the suspending fluid and the fluid enclosed by the particles are assumed to be newtonian and incompressible .",
    "the viscosity of the suspending fluid is taken to be @xmath24 , while the viscosity of fluid enclosed by capsule @xmath25 is taken to be @xmath26 , such that @xmath27 is the viscosity ratio of the interior and the exterior fluid for this particular capsule .",
    "the reynolds number for the problem is assumed to be sufficiently small that the fluid motion is governed by the stokes equation . under these assumptions , one may write the velocity at any point in the domain with an integral expression involving only the boundary of the particles @xcite .",
    "we first introduce the formulation that is most commonly used , @xmath28 where @xmath29 is the fluid velocity at a point @xmath30 lying on the boundary of particle @xmath25 ( i.e. @xmath31 , @xmath32 denotes the surface of particle @xmath25 ) , @xmath33 is the undisturbed fluid velocity at the point @xmath30 , @xmath34 is the hydrodynamic traction jump across the interface @xcite , and the sums are over all the @xmath10 particles in the system . the green s function and its associated stress tensor are denoted by @xmath35 and @xmath36 respectively in the above equation , and integrals involving them as the kernel",
    "are typically referred to as the single layer integral and the double layer integral respectively @xcite . from here",
    "onwards , a principal value of the double layer integral over a part of the boundary is assumed whenever the target point @xmath30 lies on that boundary .",
    "for example , in the above equation , the double layer integral over @xmath37 is assumed to denote the principal value when @xmath38 .",
    "a crucial aspect of the above formulation is that the green s function @xmath35 and associated stress tensor @xmath36 are taken to satisfy the boundary conditions imposed at the system boundaries , so the integrals above only involve the internal ( interfacial ) boundaries ; if the green s function for any other geometry is employed ( e.g. periodic ) , additional integrals over the domain boundaries arise in eq .",
    "( [ eq : bia ] ) .",
    "the above form of the boundary integral equation ( [ eq : bia ] ) , using the free space green s function ( the oseen - burgers tensor ) or the green s function for a triply periodic domain given by hasimoto @xcite is widely used in the literature and is the basis for numerous numerical implementations , including the references cited in the introduction .",
    "however , for reasons that will be discussed shortly , this form is not amenable to numerical solution by an accelerated method in an arbitrary domain when using the green s function for that domain . in the present effort ,",
    "therefore , we employ an alternative formulation in which the fluid velocity is expressed solely in terms of the single layer integral with density @xmath39 as follows : @xmath40 the single layer density @xmath41 satisfies ( for @xmath31 ) @xmath42 where @xmath43 is defined as @xmath44 while @xmath45 is the traction at a given point ( computed with the suspending fluid viscosity @xmath24 ) due to the stress generated in the fluid corresponding to the undisturbed flow @xmath23 ( see [ sec : finf ] for examples ) . in [ sec : bi_derive ] , this formulation is derived from the lorentz reciprocal theorem for the case of a single particle .",
    "this derivation follows closely the approach outlined in chap .",
    "( 5 ) of @xcite and is provided here for completeness .",
    "we now clarify the motivation for employing eqs .",
    "( [ eq : bi_ua ] ) and ( [ eq : qa ] ) rather than the more commonly employed formulation in eq .",
    "( [ eq : bia ] ) .",
    "we begin by noting that the first argument @xmath46 of @xmath47 and @xmath48 denotes the field ( target ) point of the functions , while the second argument @xmath49 denotes the location of the pole ( source ) of the singularity that drives the flow . a close look at eq .",
    "( [ eq : bia ] ) reveals that the operand of @xmath50 , @xmath51 , is a function of the position of the pole of the singularity ( @xmath52 ) and that the field point of the @xmath35 tensor is same as the target point of the overall boundary integral equation ( @xmath30 ) .",
    "in other words , the operand of @xmath35 is independent of its target point , and consequently the same collection of point forces can be used to compute the velocity at any target point .",
    "this requirement is essential to any accelerated method , as in such methods a part of the calculation gives the velocity ( or other relevant quantities ) simultaneously at _ all _ target points ( e.g. , boundary element nodes ) due to _ all _ the singularities present in the system .",
    "this is possible only if the operands of the singularities are independent of the target points of the singularities , and instead are functions of the location of the pole of the respective singularities .    with this aspect clarified , it is seen that this important condition is not satisfied for the double layer kernel @xmath53 in eq .",
    "( [ eq : bia ] ) as its multiplicands @xmath54 and @xmath55 are functions of its target point @xmath52 .",
    "also note that no general relationship exists that would allow one to switch the location of the pole and the field points in @xmath36 .",
    "( this is possible for @xmath35 , since , by self - adjointness , @xmath56 @xcite ) . hence the above formulation ( [ eq : bia ] ) is not suitable for our purposes here , though it can still be used for problems in which the viscosity ratio is unity , as the double layer integral vanishes in such a case @xcite .",
    "in contrast , in the formulation employed in this work ( eqs .",
    "[ eq : bi_ua ] and [ eq : qa ] ) , the multiplicand @xmath39 of both @xmath50 and @xmath57 is a function of the location of the source point @xmath52 .",
    "hence , it is amenable to numerical solution by an accelerated method .",
    "we now describe the fast computation of the velocity and pressure fields due to a collection of known point forces , which is closely related to the problem of computing the green s function and its associated stress tensor in the geometry of interest . later in secs .",
    "( [ sec : sl_comp ] ) and ( [ sec : dbl_comp ] ) , we employ this technique to compute the single layer and double layer integrals .",
    "consider the velocity field @xmath54 and the pressure field @xmath58 due to a collection of @xmath59 point forces , such that the strength and location of the @xmath60 point force are given by @xmath61 and @xmath62 respectively .",
    "the velocity and pressure fields above are obtained from the solution of the stokes and the continuity equation as shown below :    [ eq : stokes_g ] @xmath63 @xmath64    and subject to given boundary conditions on the system boundary @xmath65 . by definition , the above velocity and pressure fields along with the associated stress tensor @xmath66 can be written in terms of a green s function @xmath35 , its pressure vector @xmath67 and stress tensor @xmath36 as    [ eq : u_g ] @xmath68 @xmath69 @xmath70    the stress tensor @xmath71 in the above equation is obtained from @xmath72 and @xmath73 from the newtonian constitutive equation @xmath74 a close look at the boundary integral equations ( [ eq : bi_ua ] ) and ( [ eq : qa ] ) shows that to evaluate the integrals we do not explicitly need the green s function @xmath35 and its stress tensor @xmath36 but only their products with the density @xmath75 .",
    "put simply , our end goal is to quickly find in time @xmath76 or @xmath77 the velocity @xmath78 and the stress tensor @xmath66 due to a given set of point forces  explicit construction of @xmath35 and @xmath36 are not necessary .",
    "one of the attractive features of the method presented here lies in the fact that it is applicable to an _ arbitrary _ geometry . for simplicity and considering the interest of the present work , we provide a detailed discussion only for a slit geometry ( see fig .",
    "[ fig : val_geom ] ) ; generalization of the formalism for an arbitrary geometry is straightforward @xcite . for the present slit domain , there is a no slip boundary condition at the two rigid walls at @xmath79 and @xmath80 , while periodic boundary conditions are assumed in the other two directions @xmath81 and @xmath82 , with spatial periods @xmath83 and @xmath84 , respectively .    to achieve the computational complexity of @xmath77 alluded to above",
    ", we employ the general geometry ewald like method ( ggem ) @xcite for computing the velocity and stress fields due to a given collection of point forces .",
    "we briefly describe ggem next . in the ggem methodology , the dirac - delta density in eq .",
    "( [ eq : stokes_g ] ) is expressed as the sum of a smoothly varying quasi - gaussian _ global _ density @xmath85 characterized by a `` splitting parameter '' @xmath86 and a second _ local _ density @xmath87 ( see fig .",
    "[ fig : glob_loc_den ] ) . here",
    "@xmath88 is a position vector relative to the pole of the singularity , @xmath89 .",
    "the above global and local densities are respectively given by the following expressions :    [ eq : rho_l_g ] @xmath90 @xmath91    where @xmath92 represents a length scale over which the delta - function density has been smeared using the quasi - gaussian form above , and consequently it also represents the length scale beyond which both the global and the local densities are effectively zero . it is important to emphasize that the total density remains a @xmath93-function , i.e. @xmath94 . the motivation for this particular splitting of the @xmath93-function density into @xmath85 and @xmath87 will be obvious below .",
    "we next consider the solution of the stokes and continuity equation with the above two force densities as forcing functions .",
    "the solution driven by the local density , @xmath95 , @xmath96 , and @xmath97 ( velocity , pressure , and stress respectively ) will be referred to as the local solution , and satisfies the local problem    [ eq : stokes_l ] @xmath98 @xmath99    this equation will be solved in an unbounded domain , i.e. the solution decays to zero at infinity .",
    "the solution @xmath100 , @xmath101 , and @xmath102 driven by the global density will be referred to as the global solution , and satisfies the global problem    [ eq : stokes_gg ] @xmath103 @xmath104    the boundary conditions for the global problem are set so that the total velocity field @xmath105 satisfies the specified boundary conditions for the overall problem .",
    "once the local and the global solutions are known , the solution to the overall problem is obtained as    [ eq : tot_l_g ] @xmath106 @xmath107",
    "@xmath108    we next discuss the solution procedures for the local and the global problems .",
    "consider first the local problem .",
    "the solution to this problem , @xmath95 , @xmath96 , and @xmath97 is expressed by a set of equations similar to that in eqs ( [ eq : u_g ] ) , which , for the simplicity of nomenclature , is called the local green s function @xmath109 and its associated quantities .",
    "in short , we append the superscript @xmath110 to the previously defined quantities to denote the solution associated with the local density as the forcing function , and these are given by the following :    [ eq : local ] @xmath111    @xmath112    @xmath113    where @xmath114 , while @xmath115 .",
    "the velocity and stress fields are then obtained as :    [ eq : u_loc ] @xmath116",
    "@xmath117    the solution in eq . ( [ eq : local ] ) has been obtained with _ free - space _ boundary conditions , i.e. all of them decay to zero at infinity . in other words ,",
    "the local solution is independent of the geometry of interest .",
    "the violation of the boundary condition requirements of the domain by employing free space boundary conditions above will be corrected by appropriately choosing the boundary conditions for the flow problem associated with the global force densities as the forcing function .",
    "an important observation at this point is that the local solutions in ( [ eq : local ] ) are short ranged , decaying approximately as @xmath118 .",
    "consequently , the contribution from the local solution can be neglected beyond a length scale @xmath119 from the origin of the corresponding local density . in this work , this cutoff length was taken as @xmath120 throughout .",
    "the near neighbor list required for the efficient computation of the local solution is generated by the @xmath76 cell - linked list algorithm @xcite .",
    "it is important to point out that the @xmath109 in eq .",
    "( [ eq : local]a ) has the same functional form as the real space term in the periodic stokeslet ( green s function ) provided by hasimoto @xcite . in other words ,",
    "hasimoto s solution for the periodic stokeslet can also be obtained by first splitting the @xmath93-function density into the local and global densities as in eq .",
    "( [ eq : rho_l_g ] ) ; the local problem is then solved as described above , while the global problem is solved with a fourier galerkin method with the appropriate assumptions described in @xcite . since pme accelerated methods ( e.g. @xcite ) for stokes flow",
    "employ the periodic stokeslet given by hasimoto @xcite , this observation illustrates a connection between pme like methods and ggem . a very important distinction , though , is that the performance of pme like methods is tied to the use of discrete fourier transforms and thus periodic domains , which is not the case with ggem ( discussed below ) and hence the latter s much broader applicability .",
    "we now describe the solution to the global problem , i.e. the flow problem associated with the collection of global force densities .",
    "we first discuss the boundary conditions for the global problem . as was mentioned earlier , the overall solution for a given collection of point forces is the sum of the corresponding quantities from the local and the global solutions , see eq .",
    "( [ eq : tot_l_g ] ) .",
    "it is obvious that the same should be true for boundary conditions .",
    "consequently , to satisfy any type of boundary condition ( e.g. dirichlet ) at an arbitrary location , we set the boundary condition for the global part so that its sum with the known contribution from the local part ( above ) adds up to the required value .",
    "again , we employ the example of the slit geometry , noting that this scheme is equally applicable to other geometries . to satisfy the no - slip condition at the two rigid walls of the slit , we require the following at @xmath79 and @xmath80 : @xmath121 note that in the present formulation the _ static _ no - slip condition is always imposed at the rigid walls for computing the velocity field due to the green s function ( or point forces ) .",
    "this is true even in problems where the walls may not be at rest , a common example being simple shear flow .",
    "the effect of the undisturbed flow enters the boundary integral equation via @xmath122 and @xmath123 in eqs .",
    "( [ eq : bi_ua ] ) and ( [ eq : qa ] ) . to satisfy the periodic boundary conditions in @xmath81 and @xmath82 directions , we impose equivalent periodic boundary conditions in the global calculation . as far as the local solution is concerned , we require that it decays to a negligible value over a length scale equal to half of the spatial period in @xmath81 and @xmath82 directions or smaller : i.e. @xmath124 and @xmath125 .",
    "given the above choice @xmath120 , we require that @xmath126 . this fact , coupled with the minimum image convention @xcite employed in the computation of the local solution ensures its periodicity .    before proceeding further , we note that , in general , two subtleties arise in considering the behavior of the global solution near boundaries .",
    "the first is the issue of boundary shape . in the present work",
    "we take the boundary to be smooth on the scale of the suspended particle size .",
    "if that is not the case , it will be necessary to resolve the length scales of the boundary roughness .",
    "for such a boundary it might be convenient to revert to a conventional accelerated method and explicitly discretize the boundary .",
    "alternately , in the present context , the global solution could be obtained using a locally - refined mesh near the domain boundary to capture its features ( see , e.g. @xcite ) , without destroying the scaling of the method with the number of suspended particles .",
    "another issue arises in principle if a particle very closely approaches a ( smooth ) boundary .",
    "this does not arise in the context of the present application as deformable particles migrate away from solid surfaces in shear flow due to the hydrodynamic dipole interaction between the particle and the wall @xcite . nevertheless , it can happen in principle and leads to the situation where the boundary condition for the global problem that must be satisfied becomes nearly singular .",
    "this is because , at a no - slip boundary , we require @xmath127 and a point force a distance @xmath128 away from the boundary leads to a local velocity @xmath129 of @xmath130 on the boundary .",
    "this situation can be addressed by adding the image system for a plane wall @xcite ( and splitting it into local and global parts ) , in which case the effects of the singularities cancel on the wall .",
    "see @xcite for a related discussion in the stokesian dynamics context",
    ".    having discussed the boundary conditions for the global problem , we turn to the solution procedure of the stokes and the continuity equation with the given collection of global force densities as the forcing function ; see eq .",
    "( [ eq : stokes_gg ] ) . for",
    "an arbitrary geometry one may employ any desired discretization scheme for the solution of the global problem .",
    "if a finite difference or a finite element scheme is used , then the solution can be obtained at a cost of @xmath0 when the resulting sparse matrix equations are solved iteratively with proper preconditioners ; the multigrid preconditioner for stokes flow is an attractive choice @xcite .",
    "section [ sec : algo_com ] contains further discussion of the scaling of computation time with problem size . for the slit problem of interest here ,",
    "past work @xcite employed discrete fourier series approximation in the periodic @xmath81 and @xmath82 directions , while a second order finite difference discretization was employed in the wall normal @xmath131 direction . in the present work",
    ", we develop a fully spectral solution procedure by employing the discrete chebyshev polynomial approximation @xcite in the wall normal direction , while the discrete fourier series approximation is used in the periodic @xmath81 and @xmath82 directions .",
    "for example , the @xmath81-component @xmath132 of the global velocity @xmath133 in eq .",
    "( [ eq : stokes_gg ] ) is expressed as @xmath134 where @xmath135 is the chebyshev polynomial of the @xmath136 degree @xcite , @xmath137 represents the mapping from @xmath138 $ ] to @xmath139 $ ] : @xmath140 , while @xmath141 , @xmath142 , and @xmath143 respectively denote the number of terms ( modes ) in the corresponding series approximation .",
    "similar expressions are written for other components of the velocity and the pressure .",
    "an important implication of this representation , particularly with regard to the pressure , is that the pressure drop associated with this point force solution is always zero over the spatial period of the domain , while the mean flow is ( in general ) non - zero .",
    "this ensures that the pressure drop obtained from the boundary integral method always equals the pressure drop specified in the imposed bulk flow ( i.e. in the absence of the particles ) .",
    "returning to the expression in eq .",
    "( [ eq : u_expn ] ) , we note that the use of the fourier series approximation in @xmath81 and @xmath82 directions ensures that the periodic boundary conditions in these directions are inherently satisfied .",
    "the chebyshev polynomials , on the other hand , do not automatically satisfy the boundary conditions in the wall normal direction ; the satisfaction of these boundary conditions was accomplished by employing the tau method @xcite . in the tau method ,",
    "the equations for the highest two modes in the series approximation are replaced by equations representing the two boundary conditions ; see , e.g. , @xcite or @xcite for details .",
    "an attractive feature of the discrete chebyshev polynomial approximation is that ffts can be used for rapidly transferring information from the physical to spectral space and vice - versa @xcite .",
    "a major drawback , though , with solving differential equations with chebyshev polynomial approximation is that the differentiation matrix is full in both the spectral and the physical space @xcite ( in contrast , the fourier differentiation matrix is diagonal in the spectral space ) . due to the full nature of the chebyshev differentiation matrix ,",
    "a straightforward implementation for solving the stokes flow problem will lead to an @xmath144 method .",
    "for the incompressible stokes flow problem here , though , an alternate approach exists in which the solution to the stokes equation is obtained from the solution of a series of helmholtz equations @xcite . in this case , with a little manipulation , a quasi - tridiagonal system of equations results , for which a direct @xmath145 algorithm exists @xcite .",
    "this approach for solving the incompressible stokes equation , or more generally the incompressible navier - stokes equations , is popularly known in the literature as the kleiser - schumann influence matrix method @xcite . a detailed discussion of this approach including the equations being solved and their respective boundary conditions is presented in [ sec : inf_mat ] .",
    "here we only sketch out the main computational aspects of this approach . to begin ,",
    "each of variables appearing in the stokes and the continuity equation are expanded in a truncated fourier series in @xmath81 and @xmath82 directions ; see , e.g. , eq .",
    "( [ eq : u_expn ] ) .",
    "these expressions are then substituted in the stokes and the continuity equations .",
    "subsequently , by the application of the galerkin method , a set of coupled ordinary differential equations ( ode ) in @xmath131 is obtained for each of the fourier modes of all the unknown variables ( velocity components and pressure ) .",
    "these coupled odes are solved with the chebyshev - tau influence matrix method , which involve chebyshev transformations , quasi - tridiagonal matrix equation solves , and inverse chebyshev transformations in that order .",
    "the solution thus obtained yields the fourier coefficients of the velocity components and the pressure .",
    "an inverse fourier transform then leads to the solution for the velocity and the pressure in the physical space .",
    "the computation of the stress tensor @xmath146 requires the derivatives of the velocities ; these differentiations are performed in the transform space @xcite .",
    "all of the above fourier and the chebyshev transforms along with their inverse transforms are performed using the fft algorithm .",
    "thus , the asymptotic computational cost of the solution procedure for the global problem scales as @xmath147 , where @xmath148 . assuming @xmath149 ( see sec .",
    "[ sec : algo_com ] ) , we obtain the asymptotic computational cost of the global solution as @xmath150 .",
    "a further discussion on the computational complexity of the algorithm is provided in sec .",
    "( [ sec : algo_com ] ) .",
    "we next introduce some of the important parameters associated with this solution procedure .",
    "associated with each of the @xmath141 and @xmath143 fourier modes , there are @xmath141 and @xmath143 equispaced trapezoidal quadrature points ; the corresponding spacings are denoted by @xmath151 and @xmath152 .",
    "similarly , associated with the @xmath142 chebyshev polynomials , there are @xmath142 chebyshev gauss - lobatto quadrature points , the @xmath153 of which is given by @xmath154 ; the mean mesh spacing in this case is denoted by @xmath155 . unless otherwise mentioned , the mean mesh spacings in all three directions are kept equal in simulations , i.e. @xmath156 . for computing any of the above transforms , the value of the corresponding physical variable is required only at the corresponding quadrature points . likewise , as is customary , the final solution for the velocity , pressure and stress are also computed only at these quadrature points .",
    "this last step is essential in maintaining the optimal computational complexity of @xmath16 alluded to above .",
    "the velocity and stress at any point not on the mesh is obtained via interpolation ; here we employ @xmath157 order lagrange interpolation for which the error decays as @xmath158 , where @xmath159 is the characteristic mesh spacing .",
    "the error , therefore , is expected to decay exponentially fast with the number of modes for any point on the mesh , while it is expected to decay as @xmath158 for any point not on the mesh .",
    "it is appropriate to pointout here that exponential convergence of the solution is possible even at a non - mesh point while maintaining the computational complexity of @xmath16  this can be achieved by employing the basic principles of non - uniform fft calculations ; see , e.g. , @xcite for details .",
    "we demonstrate next the convergence behavior of the ggem stokes flow solution presented above",
    ". it will be helpful to begin this section with a discussion of various sources of error in the solution procedure .",
    "it should be obvious that the overall error in the solution results from errors in both the local and the global solution procedures .",
    "the error in the local solution arises due to its truncation beyond a distance of @xmath160 from the source of the singularity  this error scales as @xmath161 ( sec .",
    "[ sec : local_sol ] , @xcite ) . typically , we set @xmath120 , which is expected to result in an error of @xmath162",
    ". smaller error in the local solution can be obtained by increasing the value of @xmath160 .",
    "the error in the global solution has three different sources .",
    "the first source of error is the truncation of the fourier - chebyshev series expansion at some finite number of modes ; see eq .",
    "( [ eq : u_expn ] ) .",
    "the error due to this truncation is expected to decay exponentially fast on the mesh points with the parameter @xmath163  this convergence rate results due to the spectral nature of the global solution procedure employed here .",
    "for other solution procedures , such as a finite difference scheme @xcite , an algebraic convergence with the parameter @xmath163 will be obtained .",
    "next , for any point not on the mesh , the global solution has to be obtained by interpolation from nearby mesh points , which introduces an additional error scaling as @xmath164 in the current work .",
    "lastly , there is also an error associated with the assignment of the global force density on the mesh points  this is required for computing its fourier and chebyshev transforms .",
    "the global density decays approximately as @xmath165 with distance @xmath166 from the origin of the density ( eq . [ eq : rho_l_g]a ) .",
    "therefore , just like the local solution , we truncate the global density beyond a distance of @xmath167 from the origin of the singularity .",
    "it is expected that the error due to this truncation will scale as @xmath168 .",
    "again , a smaller truncation error can be obtained by setting a larger value of @xmath160  in such cases the cost associated with the global force density assignment on the mesh points can be large and the fast gaussian gridding algorithm @xcite is recommended .",
    "having discussed the various sources of errors in the solution procedure , we turn to verifying the expected convergence behavior with a test problem . in this test problem , we compute the velocity field due to a point force in a slit of side @xmath169 , i.e. @xmath170 . the point force is located at coordinates @xmath171 , while its strength is given by @xmath172 .",
    "the velocity due to this point force will be computed at two target points .",
    "the first target point is located at the center of the box @xmath173 , which is easy to maintain on a mesh point , while the second target point is a randomly chosen point with coordinates @xmath174 , which is unlikely to be a mesh point . in this test study",
    ", we will keep the value of @xmath86 fixed at @xmath175 , while the value of @xmath176 ( @xmath177 is a constant ) and the mean mesh spacing @xmath178 will be varied .",
    "figure ( [ fig : ggem_conv]a ) shows the relative error in the @xmath81 component of the velocity @xmath179 as a function of @xmath163 for several different values of @xmath160 for the first target point , while the same is shown for the second target point in fig .",
    "( [ fig : ggem_conv]b ) .",
    "the data points in these plots were obtained by varying @xmath142 between @xmath180 and @xmath181 , while the solution computed with @xmath182 and @xmath183 ( i.e. , @xmath184 ) is taken as the reference for computing the relative error .",
    "focusing first on fig .",
    "( [ fig : ggem_conv]a ) , we observe an exponential convergence in the velocity with increasing @xmath163 , though it eventually levels off at a value depending on the choice of @xmath160 . for the typical value of @xmath120 , an error of @xmath185 is obtained .",
    "we next focus on the velocity convergence at the second target point ( fig .",
    "[ fig : ggem_conv]b ) , which is a non - mesh point . for the choice @xmath120",
    ", we again observe an exponential convergence initially with increasing @xmath163 that eventually levels off at approximately the same value as for the first target point . for higher values of @xmath160 ( @xmath186 and @xmath187 )",
    ", we observe an exponential convergence initially , though a convergence rate scaling as @xmath164 is observed at higher values of @xmath163 .",
    "the latter convergence rate results from interpolation errors becoming dominant at higher values of @xmath163 .",
    "we also note that an exponential convergence is observed only when the length scale of the global force density is well resolved by the numerical mesh .",
    "since the length scale of the global force density is represented by @xmath92 , the requirement for an exponential convergence is quantitatively expressed by the condition @xmath188 ( i.e. @xmath189 ) .",
    "this requirement on the mesh spacing is more easily appreciated if one interprets @xmath163 as the number of mesh points per unit smearing length represented by @xmath92 ; therefore the larger is @xmath163 , the higher is the resolution of the numerical scheme .",
    "based on extensive numerical tests presented in this paper , @xmath190 is a recommended value as convergence was usually observed at this resolution .",
    "having described the procedure for the fast computation of the velocity and the stress fields associated with a given collection of point forces , we now turn to the numerical solution of the boundary integral equation introduced in sec .",
    "( [ sec : bi_eq ] ) . in this section ,",
    "we describe the discretization of the particle s surface into elements along with the basis functions employed over each element . following this",
    ", we describe the numerical implementation of the single and the double layer integrals present in the boundary integral equation .",
    "it should be emphasized that accelerated approach described here is not limited to the specific surface discretization used here ; this discretization was chosen because it has been used in past works on the dynamics of fluid - filled elastic capsules and drops in flow @xcite .    in the present work ,",
    "the surface of a capsule is discretized into triangular elements .",
    "triangulation of a sphere is achieved by mapping the vertices of an icosahedron , which has 12 vertices and 20 triangular faces , to the surface of the inscribed sphere @xcite .",
    "this procedure will , therefore , give 20 elements on the surface of the sphere .",
    "further refinement is obtained by subdividing each triangular face of the icosahedron recursively into 4 equal triangular elements , with all the vertices ( and consequently the elements ) again being mapped to the surface of the inscribed sphere as described above .",
    "the number of elements ( @xmath191 ) and the number of vertices ( @xmath192 ) obtained by this procedure can be expressed as @xmath193 and @xmath194 , where @xmath195 is the level of refinement ( @xmath196 corresponds to the original icosahedron ) .",
    "note that the 12 original vertices of the icosahedron have a coordination number 5 , while the remaining vertices have a coordination number of 6 . as an example",
    ", a sphere subdivided into @xmath197 elements with @xmath198 vertices is shown in fig .",
    "( [ fig : triangulation ] ) .",
    "linear basis functions are used over each element .",
    "all computations over a triangular element is performed by mapping to or from the parent triangle @xcite .",
    "the parent triangle employed in this work is shown in fig .",
    "( [ fig : nat_crd ] ) , where @xmath199 and @xmath200 denote the natural coordinates .",
    "the basis functions associated with the nodes 1 , 2 , and 3 are respectively given in natural coordinates by    @xmath201    @xmath202    @xmath203    as an example , the position vector @xmath52 as a function of natural coordinates @xmath204 is obtained as @xmath205 where @xmath46 , @xmath49 , and @xmath206 are the real space positions of vertices 1,2 , and 3 respectively .",
    "the same procedure is employed to obtain the value of any physical variable ( e.g. velocity ) at coordinates ( @xmath207 ) over the domain of the parent triangle .",
    "let the single layer integral over the surface @xmath208 be denoted by @xmath209 where @xmath210 is the single layer density , while @xmath211 is assumed to represent the velocity at point @xmath212 . in order to employ ggem as discussed in sec .",
    "( [ sec : greens_fn ] ) to compute the above integral , we write this equation in the form @xmath213 where @xmath214 represents the volume of the domain and @xmath93 is the three dimensional dirac delta function .",
    "it is easy to see that both the expressions for @xmath211 in eqs .",
    "( [ eq : sl_t ] ) and ( [ eq : sl_t1 ] ) are identical .",
    "next , we write the dirac - delta function as a sum of the local and the global density introduced in sec .",
    "( [ sec : greens_fn ] ) ; see eq .",
    "( [ eq : rho_l_g ] ) .",
    "consequently , we have @xmath215 next , we separate the integrals associated with the local and global densities , and write the contribution due to the local density as @xmath216 it is easy to see that the above integral can be written as @xmath217 where @xmath109 has been defined in eq .",
    "( [ eq : local ] ) .",
    "this follows from the fact that the local green s function @xmath218 can also be constructed by the superposition of green s function @xmath219 weighted by the density @xmath220 , i.e. @xmath221 it is important to emphasize that the domain was assumed to be unbounded in arriving at eq .",
    "( [ eq : gl_g ] ) .",
    "this is _ always _ the case for the local problem as discussed in sec .",
    "( [ sec : greens_fn ] ) ; any error in the boundary condition introduced due to this assumption will be accounted for in the global calculation .",
    "next , consider the contribution from the global density in eq .",
    "( [ eq : sl_t2 ] ) , which we write as @xmath222 it can shown that @xmath223 satisfies    [ eq : stokes_gga ] @xmath224 @xmath225    where the density @xmath226 is given by @xmath227 the boundary condition for the global solution comes from the known local solution ( @xmath228 for @xmath212 at the domain boundary ) and the given overall boundary conditions , such that the sum of the local and the global solution satisfies the overall boundary condition ; see sec .",
    "( [ sec : greens_fn ] ) .",
    "having expressed the single layer integral in a form suitable for its computation with the ggem technique , we next describe its numerical implementation .",
    "this includes the numerical solution of the local problem represented by eq .",
    "( [ eq : sl_l ] ) and the global problem represented by eq .",
    "( [ eq : stokes_gga ] ) .",
    "we first consider the contribution from the local green s function to the velocity at a given point @xmath212 , which typically is one of the nodes of the elements .",
    "we discretize the surface integral in eq .",
    "( [ eq : sl_l ] ) as @xmath229 where the summation is over all the triangular elements @xmath230 present in the system , while @xmath231 denotes an integral over the element @xmath195 . for convenience ,",
    "all the integrals are performed over the parent triangle . to accomplish this , we write the above equation as @xmath232 where the differential area element @xmath233 has been replaced by its equivalent expression @xmath234 as noted earlier",
    ", the value of any quantity can be obtained at coordinates @xmath235 by the usual interpolation from the corresponding values at the nodes of the triangle , e.g. see eq .",
    "( [ eq : basis_int ] ) .",
    "the double integral in eq .",
    "( [ eq : int_l ] ) is evaluated using the product of two one - dimensional gauss - legendre quadrature rule ( one for @xmath199 and the other for @xmath200 ) .",
    "this proved competitive in terms of computational cost for a given accuracy with gaussian quadrature rules available for a triangular element @xcite , perhaps due to the fact that the integrands are not polynomials . in most cases",
    "a 4x4 product rule is found to be sufficient for accurate integration over a triangular element .",
    "in addition , if the vertex at which the velocity is being computed is a member of the triangular element over which the integration is being performed , then the integral in eq .",
    "( [ eq : int_l ] ) over the parent triangle is further transformed to polar coordinates @xmath236 @xcite .",
    "this transformation makes the integrand non - singular and hence ensures sufficient accuracy with the same low order product integration rule discussed above .",
    "lastly , we note that for computing the contribution to velocity at any given point @xmath212 due to the local green s function , only triangular elements within a distance of @xmath237 from the point @xmath212 need to be considered ( typically , @xmath120 ) .",
    "this is justified due to the exponentially decaying contribution from the integral over an element at separations larger than @xmath238 from the point of interest . as mentioned in sec .",
    "( [ sec : local_sol ] ) , the near neighbor list required for the local calculation is generated in @xmath0 time via the cell - linked list method @xcite .",
    "our goal here is to find @xmath226 in eq .",
    "( [ eq : stokes_gga ] ) , for which we need to compute the integral in eq .",
    "( [ eq : rho_int ] ) .",
    "we being by discretizing the integral in eq .",
    "( [ eq : rho_int ] ) and write it as @xmath239 the above integral can be evaluated with any desired quadrature rule , though , due to the smoothly varying nature of the integrand a simple trapezoidal rule proves sufficient .",
    "note that the trapezoidal integration rule essentially reassigns the contribution from the surface of the triangular element to its three vertices in equal proportions .",
    "consider first the integral over an element @xmath231 in eq .",
    "( [ eq : rho_g_int ] ) , which as per the trapezoidal rule is expressed as a sum of contributions from its three vertices as @xmath240_{s_k } =   \\sum_{p=1}^{3 } \\left(\\frac{a_k q_i(\\mathbf{x}^{k_p})}{3}\\right )   \\ ; \\rho_g(\\mathbf{z}-\\mathbf{x}^{k_p}),\\ ] ] where @xmath241 is the area of the triangular element @xmath231 , @xmath242 denotes the vertex number of the given element @xmath195 , @xmath243 denotes the coordinate of the @xmath244 vertex of the triangular element @xmath195 , and @xmath245_{s_k}$ ] denotes the density at @xmath212 due to the integration over the element @xmath231 only .",
    "the term in the parenthesis in eq .",
    "( [ eq : rhog_sum ] ) can be considered as the strength of the global density at the node @xmath243 due to the element @xmath195 ; by summing it over all the elements @xmath195 to which a given node belongs ( let us say that this node is _ globally _ represented by @xmath246 ) , one obtains the total strength of the global density at this node , say @xmath247 . the overall density at a point @xmath212 is then obtained by adding contributions from all the nodes present in the system , @xmath248 where @xmath192 is the total number of nodes in the system .",
    "we also note that due to the exponentially decaying nature of @xmath249 as a function of distance from @xmath250 , we consider only those nodes for computing the density at a point @xmath212 which are within a distance @xmath251 from it .",
    "once @xmath252 is evaluated , we solve the set of equations in ( [ eq : stokes_gga ] ) using the procedure described in detail in sec .",
    "( [ sec : greens_fn ] ) .",
    "this gives us @xmath223 at the mesh points .",
    "the velocity @xmath223 at any point not on the mesh is obtained using @xmath157 order lagrange interpolation .",
    "once @xmath223 is known , the overall single layer integral @xmath211 is obtained as : @xmath253      we now describe the evaluation of the double layer integral .",
    "we denote the double layer integral over a surface @xmath208 ( similar to that in eq .",
    "[ eq : qa ] ) by @xmath254 if we define a stress tensor @xmath255 as ( note that one needs to multiply it by @xmath24 to get units of stress ) @xmath256 then we have the following relationship between @xmath257 and @xmath255 : @xmath258 the motivation for introducing the stress field @xmath255 in eq .",
    "( [ eq : st_dbl ] ) should be clear now , as it is the stress field associated with the following velocity field @xmath259 as described in the previous section ( [ sec : sl_comp ] ) , we write the above velocity field as the sum of a local @xmath228 and global @xmath223 velocity fields , and denote the corresponding stress fields by @xmath260 and @xmath261 respectively . using ( [ eq : vsigma ] ) , we obtain the corresponding local and global contributions to the double layer integral as    @xmath262    @xmath263    we describe the computation of the global contribution to the double layer integral first , as it is a straightforward extension of the procedure presented in sec .",
    "( [ sec : sl_comp ] ) .",
    "this will be followed by a discussion of the procedure for computing the local contribution to the double layer integral .      here",
    "we describe the procedure to compute the global contribution to the double layer integral .",
    "consider the global velocity field @xmath223 and the pressure field @xmath264 associated with the global force density @xmath226 ; see eq .",
    "( [ eq : stokes_gga ] ) . the procedure to compute the velocity and pressure field for this _",
    "global _ distribution of density has been discussed in detail in sec .",
    "( [ sec : sl_comp ] ) .",
    "once these are known , one can obtain the stress field @xmath265 from the usual newtonian constitutive equation as @xmath266 as was mentioned in sec .",
    "( [ sec : greens_fn ] ) , the differentiations required in the above expression are performed in the transform space @xcite ; consequently , the stress field is known with spectral accuracy at the mesh points .",
    "once the stress tensor is obtained at the mesh points , the stress at the nodes of the elements are obtained using @xmath157 order lagrange interpolation .",
    "lastly , @xmath267 is obtained from eq .",
    "( [ eq : vsigma_g ] ) .",
    "consider the velocity field due to the local density , which is written as @xmath268 it is trivial to show that the stress field associated with the above velocity field is given by the following @xmath269 and consequently the local contribution to the double layer integral is given by @xmath270 the above integral is discretized in the same fashion as in sec .",
    "( [ sec : sl_comp ] ) , and is written as a sum of integrals over the triangular elements .",
    "again , as in sec .",
    "( [ sec : sl_l ] ) , all the integrals are performed over the parent triangle as follows @xmath271 the integral in the above equation is performed with the product of two one dimensional gauss - legendre quadrature rule ; see sec ( [ sec : sl_l ] ) for details .",
    "in addition , when the vertex at @xmath212 is a member of the element over which integration is performed , the integrand is singular and requires special treatment . at this point",
    "it is worth noting that the double layer integrand has the same @xmath272 singularity as the single layer integral @xcite , as @xmath273 for small @xmath274 .",
    "so in principle one may employ the polar coordinate transformation to regularize the singular double layer integral . in practice , because we employ flat elements , the condition @xmath273 is not valid .",
    "note that the normal vector at any given vertex is taken as the area averaged normal vector of triangles to which it belongs , from which it follows that the numerical double layer has a @xmath275 singularity .",
    "this stronger singularity can be avoided by employing surface elements that yields a continuously varying normal vector such as splines @xcite .    in the literature ,",
    "desingularization of the double layer integral is usually achieved by singularity subtraction @xcite .",
    "this desingularization scheme is also applicable for the current formulation ( [ eq : wdbl ] ) , though this procedure will require 9 times the computational effort of performing the double layer integral itself ; we omit the details here .",
    "we therefore look elsewhere for more computationally efficient schemes for performing the singular part of the double layer integral .",
    "the first point to note is that the singularity in the stress tensor @xmath276 is contained entirely in its local part @xmath277 .",
    "moreover , desingularization is necessary only when the target point @xmath212 is one of the vertices of the element over which integration is being performed .",
    "if this is the case , we proceed by replacing the normal vector @xmath278 outside the integral in eq .",
    "( [ eq : int_dbl_l ] ) by a vector @xmath279 inside the integral , which leads to the following expression for the integral over the current element @xmath195 : @xmath280_{s_k } = \\int_{s_k } q_i(\\mathbf{x } ) \\ , t^l_{jik}(\\mathbf{z},\\mathbf{x } )   \\tilde{n}_k(\\mathbf{x } ) \\ , ds(\\mathbf{x}).\\ ] ] the vector @xmath279 at any point @xmath204 on the element is defined as per the following equation : @xmath281 where @xmath282 refers to the normal vector of the current triangular element . in writing the above equation ,",
    "we have assumed that the target point @xmath212 is mapped to the vertex labeled 1 of the parent triangle ; see fig .",
    "[ fig : nat_crd ] .",
    "it is immediately clear from eq .",
    "( [ eq : ntilde ] ) that @xmath279 will take the value @xmath282 when the source point coincides with the target point ( i.e. , when @xmath283 ) , while it will tend to @xmath278 as the source point @xmath52 moves away from the target point @xmath212 over the current element .",
    "now , if we substitute the expression of @xmath284 from eq .",
    "( [ eq : local ] ) into eq .",
    "( [ eq : dbl_l1 ] ) , one immediately sees that the singular parts of the integrand tends to zero as the source point approaches the target point since @xmath285 .",
    "this is due to the fact that elements are flat and @xmath286 lies in the plane of the element , while @xmath282 is normal to the element . in order to estimate the error introduced due to this approximation",
    ", one can show by simple taylor series expansion that @xmath287 , where @xmath288 is the characteristic surface mesh spacing scaling as @xmath289 .",
    "in addition , since this approximation is applied only when the target point is a member of the triangle over which the integration is being performed , the previous error gets multiplied by the area of the triangle which is @xmath290",
    ". therefore , we estimate the error introduced in the solution due to this approximation as @xmath291 .",
    "this completes the evaluation of the local contribution to the double layer integral .",
    "the total double layer integral is then obtained as the sum of the local and the global parts as : @xmath292",
    "the solution of the boundary integral equation ( [ eq : qa ] ) requires the knowledge of the hydrodynamic traction jump across the interface @xmath293 .",
    "this jump in traction is obtained from the membrane equilibrium condition as discussed next .",
    "consider first a patch of element on the membrane s surface as shown in fig .",
    "( [ fig : cntr]a ) .",
    "the forces acting on this patch are the hydrodynamic stresses on the inner and the outer surface and the membrane tension at the boundary denoted by contour @xmath177 .",
    "now , let the membrane tension tensor be given by @xmath294 , then the force balance on the membrane patch is given by @xmath295 where @xmath296 denotes the area enclosed by the contour @xmath177 .",
    "using the divergence theorem , one can convert to contour integral to a surface integral , which in the limit of infinitesimal area yields @xmath297 where @xmath298 is the surface divergence operator @xcite .",
    "the above equation ( [ eq : div_tau ] ) has been directly employed in several boundary integral implementations to obtain the traction jump @xmath293 ; see e.g. @xcite . for flat elements as in this work",
    ", we note that @xmath294 is constant over each element such that its surface divergence is identically zero , though there is a jump in its value across elements and consequently the contour integral in the eq .",
    "( [ eq : cntr ] ) is generally expected to be non - zero .",
    "the contour integral can therefore be used to obtain the traction jump as @xcite @xmath299 where the @xmath300 is the area enclosed by the contour @xmath177 ; fig .",
    "( [ fig : cntr]b ) shows an example of the contour for the discretized surface . to proceed with our implementation , we first interpret the contour integral on the right of ( [ eq : cntr1 ] ) as the reaction force on a given node obtained under the condition that the entire elastic energy stored in the particle membrane has been reassigned to the vertices of the discretized triangular elements .",
    "we then use the principal of virtual work as presented by @xcite to compute the reaction force at the vertices .",
    "once the total reaction force @xmath301 at a given vertex @xmath302 is known , we obtain the traction discontinuity at that vertex as @xmath303 where @xmath304 is area assigned to the vertex , which is essentially the area enclosed by a hypothetical contour around the vertex @xmath302 ; see fig .",
    "( [ fig : cntr]b ) .",
    "we call the contour hypothetical as we never explicitly define it here . for the area assignment to the vertex",
    ", we use a very simple rule where each vertex of the triangular element is assigned a third of the triangular element s area . therefore the total area @xmath304 is obtained as ( 1/3 ) of the total area of the triangular elements of which the given vertex @xmath302 is a member .",
    "we believe the method outlined here is substantially simpler to implement than employing the contour integral explicitly . in the remainder of this section",
    ", we outline the procedure employed for computing the reaction force at the vertices of the triangular elements .",
    "we begin by introducing the formalism for describing the kinematics of the membrane deformation .",
    "this formalism is mostly clearly presented for deformations in a plane , which for the moment is taken to be the @xmath305 plane .",
    "let @xmath306 and @xmath307 denote respectively the undeformed and deformed coordinates of a material point , with respect to a fixed set of cartesian axes . if @xmath308 and @xmath309 denote the displacements of the material point in @xmath81 and @xmath131 directions respectively , then @xmath310 the relationship between an infinitesimal line segment before and after the deformation can be expressed as @xmath311 = \\left [ \\begin{array}{ccc } 1 + \\partial u / \\partial x & \\partial u / \\partial y \\\\ \\partial v / \\partial x & 1 + \\partial v/\\partial y \\end{array } \\right ] \\left [ \\begin{array}{ccc } dx\\\\ dy \\end{array}\\right ] , \\label{eq_defmormation1}\\ ] ] or compactly as @xmath312 where @xmath313 is the deformation gradient tensor .",
    "the square of the distance between the two neighboring points after deformation is given by @xmath314 where @xmath315 is a symmetric positive definite matrix .",
    "we denote the eigenvalues of the @xmath316 by @xmath317 and @xmath318 , such that @xmath319 and @xmath320 are the principal stretch ratios . for a thin membrane that displays no resistance to bending ,",
    "the strain energy density @xmath321 of the membrane is a function of @xmath322 and @xmath323 .",
    "here we consider the capsule to be an infinitely thin neo - hookean membrane , for which the strain energy density is defined as @xcite @xmath324 . \\label{eq_wnh}\\ ] ] here @xmath325 is the two - dimensional shear modulus for the membrane , having units of force per unit length . to compute the reaction force at the nodes ,",
    "we adopt the finite element approach of @xcite .",
    "only the briefest account will be given here ; for details the reader is referred to the original reference . in the approach of @xcite ,",
    "the membrane is discretized into flat triangular elements such that the strain is uniform over an element .",
    "moreover , it is assumed that an element remains flat even after deformation .",
    "the forces at the nodes are then determined from the knowledge of the displacement of the vertices of the element with respect to the undeformed element followed by the application of the principal of virtual work , such that the computed forces and the known displacements are consistent with the strain energy stored in the element .",
    "for an arbitrarily oriented element , rigid body rotations and translations can be defined to make the deformed and undeformed state in the same plane .",
    "note that the rigid body rotations and translations have no effect on the strain energy and consequently the forces .",
    "the forces are then computed using the coplanar formalism discussed above .",
    "finally , these forces are transformed back to the frame of reference in the deformed state by applying the inverse transformation .",
    "the total reaction force at a node is obtained as a sum of reaction forces at that node due to contributions from all the triangular elements of which it is a member .",
    "once the reaction force at any given node is known , the hydrodynamic traction discontinuity at that node is obtained from eq .",
    "( [ eq : cntr2 ] ) as detailed earlier .",
    "in this section we describe solution methods and parameters for the equations resulting from the formulation just presented .",
    "the heart of the computation is the determination of the fluid velocity at the element nodes using equations ( [ eq : bi_ua ] ) and ( [ eq : qa ] ) . to compute the velocity from eq .",
    "( [ eq : bi_ua ] ) , we first need to compute the single layer density @xmath39 .",
    "this is obtained from the solution of the integral equation ( [ eq : qa ] ) . upon discretization of the double layer integral in eq .",
    "( [ eq : qa ] ) , which was discussed in sec .",
    "( [ sec : dbl_comp ] ) , we obtain a linear coupled system of equations for @xmath326 , where @xmath326 is a vector of length @xmath327 denoting the value of @xmath39 at the element nodes ; @xmath192 is the number of element nodes in the system . we express this linear system of equations as @xmath328 where @xmath329 is a diagonal matrix of size @xmath330 denoting the value of @xmath43 in eq .",
    "( [ eq : qa ] ) at each element node , @xmath331 denotes the discretized double layer operator of size @xmath332 , while @xmath333 is a @xmath327 vector denoting the known right hand side of eq .",
    "( [ eq : qa ] ) at the element nodes .",
    "the above system of equations is solved iteratively using the gmres algorithm @xcite",
    ". an important benefit of this iterative procedure is that the matrix in the parenthesis above is never explicitly computed ; at each iteration step only the product of the above matrix with a known vector generated by the algorithm is to be computed .",
    "the procedure to compute this matrix vector product is similar to computing @xmath257 in sec .",
    "( [ sec : dbl_comp ] ) ( see eq .",
    "[ eq : wdbl ] ) at the element nodes for a known @xmath326 .",
    "we take the initial guess for @xmath326 either from the previous time step , or from the previous stage if a multistage method is employed as is the case here .",
    "this leads to a substantial savings in the number of iterations required for convergence .",
    "iterations were terminated when the @xmath334 norm of the current residual vector @xmath335 relative to the norm of the right hand side @xmath333 was less than @xmath336 ; the residual vector @xmath335 is defined as @xmath337 in addition to the convergence in the residual vector @xmath335 , which is obtained naturally as part of the iterative procedure , it is also important to investigate the convergence in the solution ; the error in solution denoted by vector @xmath338 is defined as @xmath339 where we have defined the `` exact '' solution as @xmath340 , which can be obtained by solving the above system of equations to a very small tolerance , e.g. @xmath341 .",
    "the above tolerance of @xmath336 for the residual vector relative to the norm of the right hand side leads to an error of the same order for the error vector relative to the exact solution for well conditioned systems .",
    "this implies an accuracy of @xmath342 for most cases .",
    "even for the worst cases in the present work , the relative error in the solution was always less than @xmath343 .",
    "in most cases convergence was achieved in less than @xmath344 iterations ; see sec .",
    "( [ sec : mult_part ] ) for some examples . for systems with high viscosity contrast and/or with large number of particles , the matrix may become ill - conditioned and a preconditioner may become necessary . in the present study ,",
    "no preconditioner was employed , though multigrid preconditioners for stokes flow may be useful @xcite .",
    "the iterative procedure described above gives the @xmath326 vector at the element nodes .",
    "these are subsequently substituted in eq .",
    "( [ eq : bi_ua ] ) to compute the corresponding velocity at the element nodes ; the numerical procedure described in sec .",
    "( [ sec : sl_comp ] ) is employed to compute this single layer integral .",
    "we denote the velocity thus computed at the element nodes by a @xmath327 vector @xmath345 , which is used to evolve the position of element nodes @xmath246 as per the equation @xmath346 the time integration in the above equation is performed via the second order midpoint method , which belongs to the family of explicit runge - kutta integrators @xcite .",
    "the time step @xmath347 employed in this work was set adaptively using the rule @xcite : @xmath348 where @xmath349 is the minimum node - to - node separation in the system ( which does not have to be for two points on the same particle ) , @xmath350 quantifies the length scale of the particle such as the radius for a spherical particle , @xmath351 is the shear rate , while @xmath352 is the capillary number , expressing the ratio of viscous and interfacial stresses ( for a spherical capsule with radius @xmath350 and shear modulus @xmath325 , the capillary number is defined as @xmath353 ) .",
    "this rule gave a stable evolution with time ; a time step twice this value led to an instability in some simulations presented later , while a time step half this size gave nearly indistinguishable result .",
    "the volume of the particle was found to be well conserved with time .",
    "for example , for a capsule with @xmath354 in shear flow at @xmath355 , the volume changed by an average of @xmath336 of its original value over a unit strain . in the present work",
    ", a volume correction was performed only when the volume of the particle deviated by more than @xmath336 of its original value ; the procedure employed for this correction is described in @xcite .    finally , we consider parameters related to the numerical solution procedure .",
    "many of these have already been introduced earlier , and are repeated here for completeness .",
    "the first parameter is @xmath11 , which refers to the number of triangular elements employed to discretize the surface of each of the @xmath10 particles in the system ; the number of element nodes per particle is denoted by @xmath192 .",
    "next , there are several parameters associated with the ggem methodology described in sec .",
    "( [ sec : greens_fn ] ) . first is the length scale @xmath92 associated with the quasi - gaussian global density .",
    "the local solution as well as the assignment of the global force density to mesh points is truncated beyond a distance of @xmath120 from the origin of the singularity .",
    "the solution of the global problem ( sec .",
    "[ sec : greens_fn ] ) requires one to define a three dimensional mesh with @xmath141 , @xmath142 , and @xmath143 mesh points in @xmath81 , @xmath131 and @xmath82 directions respectively .",
    "this gives a mean mesh spacing in the three directions as @xmath356 , @xmath155 and @xmath152 ; all three mean mesh spacings are kept equal unless otherwise mentioned .",
    "an important parameter denoting the resolution of the ggem methodology is @xmath178 , with the resolution and hence the accuracy of the method increasing with decreasing @xmath178 . as a rule of thumb , we require @xmath189 ; see sec .",
    "( [ sec : ggem_test ] ) for details .",
    "choices of above parameters are specified below in the descriptions of the test problems .",
    "as a validation of the single layer integral implementation , we consider a rigid sphere between two parallel walls and subject it to a pressure driven flow with a centerline velocity @xmath357 as shown in fig .",
    "( [ fig : val_geom ] ) . for a rigid particle ,",
    "the velocity at a point @xmath30 on the surface satisfies the following integral equation @xcite    @xmath358    where @xmath359 is the traction on the external surface of the sphere due to the stresses in the fluid .",
    "the velocity at the surface of the particle @xmath29 in the above equation can be written as @xmath360 where @xmath361 and @xmath362 represent the translational and rotational velocities of the particle , and @xmath363 denotes the center of the sphere .",
    "here we take the particle to be force and torque free and our goal is to compute the velocity and angular velocity of the particle . for this particular problem ,",
    "the surface of the sphere was discretized into @xmath364 triangular elements with @xmath365 vertices .",
    "the unknowns in the discretized system are @xmath327 tractions at element vertices , along with @xmath361 and @xmath362 .",
    "the force and torque free condition along with the discretization of eq . ( [ eq : sl_r ] ) gives @xmath366 equations , which were solved iteratively using the gmres algorithm @xcite .",
    "translational and rotational velocities of a rigid sphere between two infinite parallel walls have been reported previously by @xcite . here",
    ", we compare the translational velocity obtained in the present work with their results for a fixed confinement ratio of @xmath367 and for various positions of the sphere s center along the channel height @xmath368 .",
    "this comparison is shown in fig .",
    "( [ fig : rigid]a ) , where the velocity of the particle has been non - dimensionalized by the velocity of the undisturbed flow at the centerline @xmath357 , while the height of the sphere s center has been non - dimensionalized by the channel height @xmath369 . very good agreement between the two results was observed , with the discrepancy typically being less than @xmath370 ; the source of the slight discrepancy is discussed below .",
    "the ggem parameters employed in the above calculation were : @xmath371 and @xmath372 , which gives @xmath373 ; note that @xmath120 .",
    "the mean mesh spacing was equal in all three directions ( @xmath156 ) , and the spatial period in both @xmath81 and @xmath82 directions were set to five times the wall spacing : @xmath374 .",
    "convergence of the particle velocity with respect to @xmath178 is demonstrated next in fig .",
    "( [ fig : rigid]b ) for a particle placed at the centerline , i.e. @xmath375 .",
    "for this calculation @xmath372 was held constant , while @xmath178 was varied by varying @xmath142 between @xmath180 and @xmath376 ( @xmath141 and @xmath143 varied between 80 and 340 ) . as could be seen in the figure",
    ", the velocity of particle reaches its converged value for @xmath377 and shows very little variation with any further increase in mesh resolution .",
    "also shown in this plot is the result of @xcite which reveals that the velocity obtained in this work converges to a slightly lower value than the previous reference .",
    "the source of this discrepancy can be traced to the periodic boundary conditions employed in @xmath81 and @xmath82 directions in the present work ; @xcite used an unbounded domain in these directions . in the present case",
    ", we can easily estimate the result for an infinite box by observing its trend in a series of simulations with varying spatial period @xmath169 ( @xmath378 ) .",
    "this procedure is commonly used in triply periodic simulations to remove the effects of the periodic boundary conditions ; see , e.g. @xcite . in this particular example , we numerically find that the periodic image effects decay as @xmath379 as shown in fig .",
    "( [ fig : rigid]c ) , where we have plotted the translational velocity of the particle against @xmath379 .",
    "the y - intercept of the linear fit through the data points in the previous plot then gives an estimate of the particle velocity in an infinite slit .",
    "this value comes out to be @xmath380 ( rounded to three significant digits ) , which is exactly equal to the value reported by @xcite .",
    "recall that their boundary integral formulation is based on the slit green s function of @xcite ; the agreement of our results with those of @xcite thus implicitly validates our green s function implementation for a slit with respect to the green s function provided by @xcite .",
    "in addition to the periodic image effects , a slight discrepancy between our results and those of @xcite can also be expected in cases where the particle - wall separation is very small .",
    "in such problems , a large lubrication pressure can develop in the region around the small gap @xcite . to obtain accurate solutions in this case , the surface discretization of the particle near the small gap must be adaptively refined as was done by @xcite .",
    "no fundamental changes to the present formalism would be required to implement adaptive refinement .",
    "having validated the single layer integral , we next move on to the validation of the double layer integral .",
    "for this , we consider the same geometry and bulk flow as in the above test case ( fig .",
    "[ fig : val_geom ] ) , but now consider a spherical drop instead of a rigid sphere .",
    "the motion of the drop can be obtained by first solving eq .",
    "( [ eq : qa ] ) for @xmath39 , which upon substitution in eq .",
    "( [ eq : bi_ua ] ) gives the velocity on the surface of the drop .",
    "we first point out that for a spherical drop , the interfacial traction jump @xmath293 is inconsequential .",
    "this is due to the fact that @xmath293 is uniform in strength and acts radially everywhere , which when combined with the incompressibility of the fluid implies zero velocity contribution from this term . once the velocity at the surface of the drop is known , we compute the volume averaged velocity of the drop as @xmath381 where @xmath214 represents the volume of the drop , while @xmath382 is the unit normal vector at the surface .",
    "we computed the instantaneous volume averaged velocity of a spherical drop placed at @xmath383 and with a confinement ratio of @xmath367 for different drop viscosity ratios @xmath384 .",
    "the simulation parameters for this calculation were kept the same as in the previous section , namely @xmath371 , @xmath385 , @xmath373 , and @xmath156 . just like in the case of rigid particle",
    "above , we again find the same @xmath379 scaling of the periodic image effects on the drop velocity .",
    "this is shown in fig .",
    "( [ fig : ui_drop]a ) for drops of different viscosity ratios @xmath384 , where the velocity of the drop has been non - dimensionalized by the corresponding velocity estimated for an infinite slit using the procedure outlined above in sec .",
    "( [ sec : urigid ] ) .",
    "interestingly , for a drop with @xmath386 , there is no observable periodicity effect , while the drop velocity increases with increasing @xmath169 for @xmath387 and decreases with increasing @xmath169 for @xmath388 . in fig .",
    "( [ fig : ui_drop]b ) , we compare the results in the present work corrected for periodicity effects with those of @xcite for several different viscosity ratios ( @xmath389 $ ] ) .",
    "a very good agreement between our results and those reported by @xcite is evident at all viscosity ratios ( error @xmath390 ) , thereby validating our implementation of the single and the double layer integral .",
    "[ c][bl][1.0]@xmath391      we next consider a capsule in a simple shear flow . to enable comparison with literature results in an unbounded domain",
    ", we consider a large simulation box with @xmath392 , where @xmath350 is the radius of the initially spherical capsule placed at the center of the box .",
    "other simulation parameters were : @xmath393 , @xmath394 , @xmath395 , @xmath396 , and @xmath156 ; a convergence study with these parameters will be presented later in this section . the system is subjected to simple shear flow and we follow the evolution of the shape of capsule at various capillary numbers ( @xmath397 ) and viscosity ratios ( @xmath384 ) .",
    "@xcite showed that a membrane lacking bending resistance buckles at high or low @xmath352 ; the origin of this buckling has been shown to be numerical @xcite .",
    "we saw a similar behavior and therefore restrict the results reported here to @xmath398 . in this regime , the capsule shape evolution appeared to be stable with no apparent buckling . to characterize the shape of the deformed capsule , we introduce the commonly employed taylor deformation parameter @xmath399 defined as @xmath400 where @xmath169 and @xmath401 are the maximum and the minimum distance in the shear plane of a point on the surface of the capsule from its center .",
    "we use this as the definition of @xmath399 , though some authors , e.g. @xcite , instead find a triaxial ellipsoid with the same inertia tensor as the given capsule , and then take @xmath169 and @xmath401 as the major and minor axis of that ellipsoid .",
    "the evolution of the deformation parameter @xmath399 for a capsule with unit viscosity ratio ( @xmath386 ) is shown in figs .",
    "( [ fig : dl1]a ) and ( [ fig : dl1]b ) at two different capillary numbers @xmath352 .",
    "the time in the figures has been non - dimensionalized by the shear rate . for comparison , @xmath399 values reported by @xcite and @xcite",
    "are also plotted .",
    "note that @xcite have used a zero - thickness shell model for their capsules , though that gives only marginally lower deformation than a neo - hookean capsule at the same @xmath352 @xcite .",
    "moreover , they used the young s modulus for computing their @xmath352 , such that our results should be compared with their results at a @xmath352 which is ( 1/3 ) of the @xmath352 in this work . the data in figs .",
    "( [ fig : dl1]a ) and ( [ fig : dl1]b ) both show that the evolution of @xmath399 in this work is in very good agreement with the corresponding results of @xcite .",
    "our results are also close to the values reported by @xcite , though the latter consistently display a slightly lower @xmath399 .",
    "the broad agreement of @xmath399 between our values and the literature values validates our implementation of the membrane mechanics along with other aspects of our method such as time - stepping and the already validated single layer integral .",
    "next , we demonstrate the convergence of the steady state @xmath399 at @xmath355 with respect to the ggem parameter @xmath178 in fig .",
    "( [ fig : dl1]c ) . for this calculation , @xmath402 was held fixed , while @xmath142 was varied between 65 and 113 . as could be seen ,",
    "a convergence in @xmath399 is observed at @xmath393 corresponding to @xmath403  the parameter set for which all results are presented in this section .",
    "the convergence of the steady state @xmath399 with respect to the number of triangular elements @xmath11 is demonstrated in fig .",
    "( [ fig : dl1]d ) for a @xmath355 capsule .",
    "the three data points in this plot correspond to simulations with @xmath404 , @xmath405 and @xmath406 elements .",
    "it is clear from this plot that the solution converges linearly with @xmath407 , which is expected for linear elements .",
    "[ c][bl][0.8]@xmath391    we now briefly discuss the deformation parameter results for capsules with non - unit viscosity ratios ( i.e. @xmath408 ) .",
    "these are reported in fig .",
    "( [ fig : dl5 ] ) for @xmath354 and in fig .",
    "( [ fig : dlp2 ] ) for @xmath409 , and are compared with the results of @xcite and @xcite , with the latter reference employing the immersed boundary technique for their simulations . at @xmath354 , the results for @xmath399 in the present work are slightly smaller than those reported by the previous authors at @xmath410 . at @xmath355 , an excellent agreement with the results of @xcite",
    "is observed , though our results for @xmath399 are slightly lower than those of @xcite .",
    "we next show the convergence of the steady state @xmath399 at @xmath355 with respect to @xmath191 in fig .",
    "( [ fig : dl5]c ) .",
    "these results indicate that the error decays as @xmath411 , thereby implying that the error incurred in the calculation of the singular double layer integral dominates the overall error ; see sec .",
    "( [ sec : dbl_l ] ) for details .",
    "[ c][bl][1.0]@xmath391    we next discuss the results for the deformation parameter for capsules with @xmath409 ( figs .",
    "[ fig : dlp2]a and [ fig : dlp2]b ) . in this case",
    ", we observe a very good agreement with the results of @xcite at both @xmath410 and @xmath355 .",
    "the values reported by @xcite are also close , though they are marginally lower than the results in the present study .",
    "lastly , we show the convergence of the steady state @xmath399 at @xmath355 with respect to @xmath191 in fig .",
    "( [ fig : dlp2]c ) . in this case",
    "the error is observed to decay at the expected rate of @xmath412  this probably implies that the error incurred in the calculation of the singular double layer integral is dominant only at high values of @xmath384 .      as a final test problem",
    ", we consider the collision between a pair of capsules with @xmath386 in a simple shear flow and compare the results with the work of @xcite in fig .",
    "( [ fig : pcollision]a ) .",
    "we first describe the problem setup .",
    "the size of the cubic box ( slit ) for this problem was set to @xmath413 to approximate an unbounded domain ; simulations were performed with @xmath414 , @xmath415 , @xmath416 , @xmath417 , and @xmath156 .",
    "the two capsules were initially kept in the same flow - gradient plane ( @xmath418 ) , such that the initial separation in the flow direction was @xmath419 , while the initial offset in the gradient direction was @xmath420 . as in @xcite , we preinflate the capsule by @xmath421 , i.e. the radius of the spherical capsule was increased by @xmath421 over its rest value , and this new increased radius is denoted by @xmath350 . for a spherical shape , this inflation does not lead to any flow due to the incompressibility condition as discussed above in the case of a spherical drop .",
    "nonetheless , this inflation keeps the membrane in a state of tension at rest and , if sufficient , will prevent buckling during the course of the collision .",
    "with these preliminaries , we return to fig .",
    "( [ fig : pcollision]a ) where we show the relative separation between the center of masses in the gradient direction as a function of the corresponding separation in the flow direction .",
    "a very good agreement with the results of @xcite is evident .",
    "next , we show the convergence of the numerical scheme with @xmath178 in fig .",
    "( [ fig : pcollision]b ) , where we plot the absolute value of the maximum displacement in the gradient direction for either particle . for this calculation",
    "@xmath415 was held fixed , while @xmath142 was varied between 97 and 145 .",
    "a convergence is seen at @xmath422 corresponding to @xmath414  the parameters for which results are reported in this section .",
    "the convergence of the maximum displacement in the gradient direction with respect to @xmath191 is demonstrated in fig .",
    "( [ fig : pcollision]c ) , which confirms the expected error decay rate of @xmath412 .",
    "in this section , we report results from several large scale simulations on multiparticle suspensions of capsules . in the first part of the section , we present results for the suspension viscosity and discuss its dependence on the viscosity ratio . in the second part , we discuss the expected computational complexity of the algorithm and verify it with timing results from the multiparticle simulations .",
    "we consider here a suspension of neo - hookean capsules in a cubic slit ( fig .",
    "[ fig : visc]a , b ) .",
    "these suspensions are subjected to a simple shear flow at a capillary number of @xmath423 ; the volume fraction of the suspension is @xmath424 , which is typical of the blood flow in the microcirculation @xcite .",
    "capsules with five different viscosity ratios @xmath384 are considered : @xmath386 , 2 , 3 , 4 , and 5 .",
    "the surface of each of the capsules was discretized into @xmath425 triangular elements , while four different system sizes were considered with the number of particles being @xmath426 , @xmath427 , @xmath428 , and @xmath429 . in each of the problems ,",
    "@xmath402 was kept fixed , where @xmath350 is radius of the spherical capsule at rest .",
    "similar to sec .",
    "( [ sec : pcoll ] ) , the capsules were preinflated by @xmath421 to prevent membrane buckling ; the radius after preinflation is denoted by @xmath350 . the number of mesh points @xmath142 for the global solution varied between @xmath430 and @xmath431 such that @xmath432 in all cases with @xmath433 . for testing the convergence of the results with respect to ggem parameters",
    ", some simulations were also run with @xmath434 extra mesh points in each of the directions corresponding to @xmath435 .",
    "we discuss next an important issue in multiparticle simulations , which concerns the treatment of near singular integrals ",
    "these integrals arise when the gaps between the particles become small .    in a suspension of particles subjected to shear ,",
    "it is not uncommon to find particle pairs separated by a small gap .",
    "this is true , at least occasionally , even in suspensions with a moderate volume fraction such as @xmath424 studied here .",
    "when the gap between a particle pair becomes small , the interparticle contributions between such a pair from both the single as well as the double layer integrals become nearly singular ; these nearly singular integrals require special treatment or the simulations may diverge @xcite . in the literature , several techniques have been proposed to address this numerically difficult problem .",
    "a few among these are the near singularity subtraction technique @xcite and coordinate mapping techniques @xcite for the evaluation of the near singular integrals .",
    "these techniques will , however , require very high surface mesh resolution and very high order quadrature techniques for the accurate evaluation of the nearly singular integrals @xcite  the cost associated with these requirements can be prohibitive .",
    "an alternative approach is the use of a short range repulsive force , which can prevent the formation of small gaps @xcite , though this is not very effective in three dimensional simulations @xcite .",
    "the best approach appears to be an overlap correction in an auxiliary step @xcite .",
    "this approach is also frequently used in suspensions of rigid particles @xcite . in the present work , like in past efforts @xcite ,",
    "we not only correct the overlaps , but also maintain a minimum gap ( @xmath349 ) between the surfaces of two particles .",
    "this approach was also employed in our recent work @xcite . for simulations in the current section",
    ", we set the minimum gap parameter to a small value of @xmath436 .",
    "the overlap correction procedure employed in this work involves moving a pair of overlapping particles apart along their line of centers like a rigid particle until the minimum gap requirement is satisfied .",
    "translating the capsules like a rigid particle in this auxiliary step has the benefit that the shapes of the particles remain unchanged , as is the orientation of the particles with respect to the flow . in general , multiple steps of the correction procedure",
    "is required , as the correction of overlap between one pair could result in other overlaps @xcite .",
    "this overlap correction step involves minimal displacement of the particles , on the order of @xmath349 .",
    "given that the volume fraction studied in this work is @xmath424 , this procedure was rarely required  on an average , less than @xmath437 particle pairs in the @xmath429 particle system exhibited minimum gap violations at any given time .",
    "we finally remark that apart from correcting the minimum gap violations in the system , no special treatment was accorded to the evaluation of the near singular integrals in the present effort .",
    "having discussed the procedure for controlling the minimum gap in the system , we now turn to the results from multiparticle simulations .",
    "all these simulations were initiated by placing the particles randomly in the simulation box , and then they were sheared for a total non - dimensional time of @xmath438 .",
    "we show some representative snapshots from @xmath439 particle simulations in figs .",
    "( [ fig : visc]a ) and ( [ fig : visc]b ) for @xmath386 and @xmath354 capsules , respectively .",
    "it is immediately obvious from these snapshots that the more viscous capsules deform less and also have a smaller inclination angle with the flow direction ; both of these observations are similar to observations in isolated sheared capsules @xcite .",
    "the convergence of the simulation with respect to ggem parameters is demonstrated in fig .",
    "( [ fig : visc]c ) , where we plot the suspension apparent intrinsic viscosity @xmath440 $ ] for @xmath386 capsule and @xmath429 particle system for two different mesh resolutions corresponding to @xmath190 and @xmath435 .",
    "the apparent intrinsic viscosity is defined as @xmath440 = \\sigma_{xy}^p/(\\mu \\dot{\\gamma}\\phi ) $ ] , where @xmath441 is the particle contribution to shear stress , while @xmath24 is the suspending fluid viscosity . the particle contribution to the stress tensor",
    "is given by @xcite @xmath442 ds,\\ ] ] where the sum in the right hand side is over all the particles in the system .",
    "as can be seen in fig .",
    "( [ fig : visc]c ) , @xmath440 $ ] is nearly identical for simulations run with @xmath443 and @xmath444 , thereby demonstrating the convergence of the simulation with respect to ggem parameters .",
    "all the remaining simulations were performed with @xmath432 .",
    "the effect of viscosity ratio on the apparent intrinsic viscosity is shown in fig .",
    "( [ fig : visc]d ) .",
    "these results represent an average over the last @xmath445 time units in the @xmath429 particle systems , which have a confinement ratio of @xmath446 . for a direct comparison",
    ", the plot also shows @xmath440 $ ] for a dilute suspension of capsules obtained from single particle simulations in the same geometry . in dilute suspensions ,",
    "a non - monotonic variation of the viscosity with @xmath384 is obvious  this behavior has been demonstrated before in the literature @xcite .",
    "however , the non - monotonicity vanishes at the non - dilute volume fraction of @xmath424 .",
    "this indicates that the contribution to the overall stress from particle - particle interactions is a monotonically increasing function of @xmath384 , and , in non - dilute suspensions , easily compensates the non - monotonic variation of the isolated particle contribution .",
    "hence caution is warranted before extrapolating trends from dilute systems to non - dilute systems like blood flow .",
    "we devote the remainder of this section to analyzing the overall computational complexity of our algorithm . before presenting the timing results from the detailed numerical simulations presented above",
    ", it will be useful to first discuss the expected computational cost associated with various steps in the algorithm , and consequently the overall implementation .",
    "the first step in the solution procedure , as discussed in sec .",
    "( [ sec : sol ] ) , involves iteratively solving for the single layer density @xmath326 ( step 1 ) .",
    "this is followed by the computation of the fluid velocity @xmath345 at the element nodes ( step 2 ) using the single layer density @xmath326 computed in the previous step . the computational cost associated with each iteration of step 1 and that of step 2 has an identical optimal scaling with @xmath447 , each of which is essentially determined by the computational cost associated with the stokes flow solver ( ggem ) described in sec ( [ sec : greens_fn ] ) .",
    "therefore , for a direct cost comparison with the multiparticle flow problem here , we consider an auxiliary problem involving a collection of @xmath2 point forces ; both problems then have an identical computational cost scaling with @xmath2 . at this stage",
    ", it will also be worth pointing out that the computational complexity analysis presented here closely follows the corresponding analysis in pme like methods @xcite as the underlying ideas are fairly similar .",
    "the overall cost associated with the ggem stokes flow solver is the sum of costs associated with the local problem and the global problem .",
    "the cost of the local solution scales as the product of the number of point forces @xmath2 and the number of neighbors within a distance @xmath251 of each of the point forces .",
    "if we require the computational cost of the local problem to scale as @xmath448 , then the number of neighbors per point force must stay constant with changing system size ( meaning @xmath2 here ) .",
    "the system size @xmath2 can be increased in two contrasting ways : ( i ) by increasing volume at constant density ( i.e. , by increasing @xmath214 while maintaining @xmath449 constant , @xmath214 is the system volume ) , and ( ii ) by increasing density at constant volume ( i.e. , by increasing @xmath449 while maintaining @xmath214 constant ) . if the system size is increased at constant density , we require that @xmath86 ( or @xmath160 ) be held constant , and if the system size is increased at constant volume , we require that @xmath450 ( or @xmath451 ) . this scheme for choosing",
    "@xmath86 ensures that the average number of near neighbors per point force is independent of the system size .",
    "hence , irrespective of how @xmath2 is varied , we always obtain @xmath448 .",
    "next , we determine the computational cost of the global solution procedure . before we proceed further , it is important to realize that the error in the global solution is essentially controlled by the parameter @xmath178 , which is unchanged with changing @xmath2 ] ; see sec .",
    "( [ sec : global_sol ] ) .",
    "therefore , for the error in the global solution to remain of the same order with changing system size @xmath2 , we require that @xmath178 be held constant ; this implies @xmath453 .",
    "coupling this requirement with the choices of @xmath86 discussed above in different scenarios , we conclude that the total number of mesh points involved in the calculation of the global solution @xmath454 must be varied proportionally to @xmath2 , i.e. @xmath455 . having determined the scaling of @xmath456 , we next present the expression for the computational cost of the global solution @xmath457 as follows : @xmath458 where the first two terms on the right hand side denote the cost associated with the fft operations in @xmath81 and @xmath82 directions respectively , while the last term is associated with the cost of the chebyshev - tau solver in the wall normal @xmath131 direction . note that the @xmath145 cost in the expression for the chebyshev - tau solver is associated with the quasi - tridiagonal solve , while @xmath459 cost is associated with the computation of the chebyshev transforms and its inverse with ffts . simplifying the above expression and noting that @xmath460",
    ", we obtain the following asymptotic scaling @xmath461 the overall cost per iteration of step 1 or of step 2 is therefore , @xmath462 the total cost of step 1 is the cost per iteration times the number of iterations required for convergence . now ,",
    "if the number of iterations in step 1 is independent of @xmath2 , then the computational cost of the overall algorithm will scale as @xmath147 . on the other hand ,",
    "if the number of iterations in step 1 is dependent on the system size , say it scales as @xmath463 , then the computational cost of the overall algorithm will scale as : @xmath464 note that the need for iterative solution of step 1 or a related second kind integral equation is not unique to the present formulation , but is a general feature of any accelerated boundary integral method with @xmath465 @xcite .     and for various system sizes .",
    "the four data points in the plot correspond to @xmath426 , @xmath466 , @xmath467 , and @xmath439 respectively .",
    "note that the time is plotted against @xmath468.,scaledwidth=50.0% ]    having determined the expected scaling of our algorithm , we next report timing results from the detailed numerical simulations presented in sec .",
    "( [ sec : susp_visc ] ) .",
    "all runs were performed on a single core of a eight core machine with a 2 ghz intel xeon processor running linux .",
    "we plot the time required per stage of the two stage midpoint time stepping algorithm in fig .",
    "( [ fig : tscale ] ) .",
    "note that the abscissa in the plot is @xmath469 ; the four data points in this plot are respectively for @xmath426 , @xmath427 , @xmath428 and @xmath429 as discussed above .",
    "one can conclude from this plot that in all cases the computational cost scales approximately as @xmath470 ( in fact , in this case , the increase in the computational cost appears to be slower than the expected @xmath468 ) . another important feature to note in the plot is the jump in computational cost as one moves from a matched viscosity problem to a non - matched one , which is expected as no iterations are required in matched viscosity problems .",
    "the number of iterations required for convergence was found to be independent of the system size for problems considered here , though it was found to increase with increasing @xmath384 .",
    "the simulations with @xmath471 capsules required approximately 2 iterations on an average , while the simulations with @xmath354 capsules required approximately 3 iterations . to summarize this section",
    ", we note that a near perfect scaling of @xmath472 is obtained for both matched viscosity and non - matched viscosity problems .",
    "a few words of caution are necessary here , though , as at higher volume fractions and/or at much larger system sizes , the number of iterations for convergence is expected to become system size dependent . it must be emphasized here that this aspect is not specific to our implementation , but is intrinsic to the boundary integral equation for non - matched viscosity problems .",
    "future work on enhancements in the algorithm should address this by the development of efficient preconditioners .",
    "another obvious enhancement in the algorithm will be its parallelization to take advantage of cheaply available multicore processors .",
    "a new accelerated boundary integral method for multiphase stokes flow in a confined geometry was presented .",
    "the complexity of the method scales as @xmath16 for the slit geometry discussed in the present paper .",
    "the acceleration in the method was provided by the use of general geometry ewald - like ( ggem ) method for the fast computation of the velocity and stress fields driven by a set of point forces in the geometry of interest . due to non - periodic nature of the domain ,",
    "an alternative boundary integral formulation was employed , necessitated by the requirements of the acceleration technique .",
    "an efficient methodology was presented to compute the resulting double and single layer integrals using the ggem technique .",
    "the resulting implementation was validated with several test problems .",
    "the computational complexity of the algorithm was verified to be @xmath16 with timing results from several large scale multiparticle simulations .",
    "the authors gratefully acknowledge helpful discussions with pratik pranay , yu zhang and juan hernandez - ortiz on the implementation of ggem . this work was supported by nsf grants",
    "cbet-0852976 and cbet-1132579 .    .",
    "the figure shows the dispersed phase with viscosity @xmath473 and a particle with viscosity @xmath474 .",
    "the surface of the particle is denoted by @xmath208 .",
    "also shown is the undisturbed flow denoted by @xmath23.,scaledwidth=60.0% ]",
    "consider a two phase flow in a specified geometry as shown in fig .",
    "( [ fig : geom ] ) .",
    "the two fluids are respectively denoted by @xmath475 and @xmath401 in the figure with viscosity @xmath473 and @xmath474 .",
    "the fluid @xmath401 is assumed to be enclosed by an impermeable interface denoted by @xmath208 , which has its own characteristic properties ( e.g. drops , capsules , vesicles , etc ) .",
    "now , consider a point @xmath30 in fluid @xmath475 as shown in fig .",
    "( [ fig : geom1 ] ) . applying the reciprocal theorem to the disturbance velocity in the region @xmath475 denoted by @xmath476 , and that due to a point force located at @xmath30",
    ", we obtain @xmath477 where @xmath478 is the hydrodynamic traction at the interface on the side of fluid @xmath475 associated with the velocity field @xmath479 , while @xmath35 is the green s function for the specified geometry and @xmath36 is the associated stress tensor .",
    "next , employing the self - adjointness property of the green s function @xmath35 , we obtain the following form of the above equation @xmath480 recall that the self - adjointness of the green s function @xmath35 implies that @xmath481 next , we apply the reciprocal theorem to the undisturbed flow @xmath23 in region @xmath401 and due to a point force located at @xmath30 in region @xmath475 .",
    "this yields , @xmath482 note that in the above equation , the normal @xmath382 is pointing out of region @xmath401 into region @xmath475 ( outward normal ) .",
    "we next note the following relation between @xmath483 and @xmath484 @xmath485 this follows from the continuity of the undisturbed flow across the interface , and that the internal and external stresses are computed with viscosity @xmath474 and @xmath473 respectively for the same flow field . using this relationship",
    ", we write eq .",
    "( [ eq : finf ] ) as @xmath486 adding eqs .",
    "( [ eq : ud1 ] ) and ( [ eq : finf1 ] ) , we obtain @xmath487    next , we apply reciprocal theorem to the fluid velocity in region 2 ( @xmath488 ) and due to a point force located at @xmath30 .",
    "this yields @xmath489    for interfacial flows neither the interfacial velocity nor the interface tractions on either side is known , though we have the following boundary conditions at any point on the interface    @xmath490    @xmath491    which essentially implies the continuity of the velocity across the interface and that the net force on an element due to hydrodynamic stresses is balanced by the net force due to interfacial stresses , see sec .",
    "( [ sec : memb ] ) .",
    "we note that the interfacial contribution @xmath492 is assumed to be known by the known constitutive equation of the interface and its known configuration . given the unknowns and the boundary conditions , a very common approach is to eliminate the unknown hydrodynamic interfacial tractions @xmath493 and @xmath494 with the known traction jump @xmath495 in eqs .",
    "( [ eq : bi_ext ] ) and ( [ eq : bi_int ] ) .",
    "this leads to the widely employed second kind integral equation for the unknown interfacial velocity . here",
    ", we adopt an alternative approach . using eqs ( [ eq : bi_ext ] ) and ( [ eq : bi_int ] )",
    "we instead eliminate the double layer integral to obtain @xmath496 the above can be written in the following form @xmath497 this equation for the velocity can be shown to be valid inside , outside , as well as on the boundary @xmath208 .",
    "the drawback of this equation is that both the velocity ( including interfacial velocity ) and the surface tractions are unknown .",
    "the main advantage for our purposes here is that we have switched the pole and the field point of the green s function using its self - adjointness property ( eq . [ eq : sadjoint ] ) . for simplifying the notation",
    ", we next express the operand of the green s function by @xmath75 , i.e. we define @xmath75 as @xmath498 using the above definition , we write the velocity as @xmath499 the pressure associated with the above velocity field in the region external to @xmath208 can be written as @xmath500 using eqs .",
    "( [ eq : bi_u ] ) and ( [ eq : bi_p ] ) , we can write the stress @xmath501 as @xmath502 a similar expression can be written for @xmath503 as shown below : @xmath504 we will now take the limit of the above equations as we approach the interface from either side and then dot it with the normal to get the tractions on either side of the interface @xmath493 and @xmath494 .",
    "we can express both of them using the principal value of the double layer integral along with the jump condition to obtain @xcite    @xmath505    @xmath506    where @xmath507 implies the principal value of the improper integral when the observation point lies on the domain of the integration .",
    "note that the sign of the jump condition ( @xmath508 ) depends on the direction from which we approach the interface relative to the outward normal defined above , i.e. whether we approach the interface parallel to the normal or anti to it .",
    "taking the difference of eqs .",
    "( [ eq : f1 ] ) from ( [ eq : f2 ] ) and using eqs .",
    "( [ eq : sjump ] ) and ( [ eq : finf_r ] ) , we have that @xmath509 where we have now introduced the viscosity ratio @xmath510 . rearranging the above equation",
    ", we obtain a second kind integral equation for the density of the green s function @xmath75 as follows : @xmath511 where we have defined @xmath512 as @xmath513 the above equation is used to solve for the unknown density @xmath75 , which upon substitution in eq .",
    "( [ eq : bi_u ] ) gives the velocity at any point in the domain , including the interface .",
    "for pressure driven flows , the stress tensor is given by @xmath514 where @xmath515 is @xmath516 note that the velocity and pressure field in pressure driven flows is given by the following expressions    @xmath517    @xmath518    in the above equations , @xmath357 is the centerline velocity .",
    "the surface traction @xmath519 can be obtained at a point @xmath52 on the surface with normal vector @xmath55 as @xmath520 for simple shear flows , the stress tensor is given by @xmath521 where @xmath351 is the shear rate . the surface traction for this case",
    "can be obtained by substituting the stress tensor in the above equation in eq .",
    "( [ eq : straction ] ) .",
    "here we discuss the solution procedure for the global problem in eq .",
    "( [ eq : stokes_gg ] ) for a slit geometry ( fig .",
    "[ fig : geom ] ) .",
    "we simplify the notation in eq .",
    "( [ eq : stokes_gg ] ) and represent it by the following set of equations :      where @xmath242 is the pressure , @xmath523 is the velocity , while @xmath524 is a known function obtained from the known distribution of global force densities .",
    "the above set of equations are supplemented by the periodic boundary conditions in @xmath81 and @xmath82 directions , while a dirichlet boundary condition for the velocity is specified in the y direction :          similar expressions are written for @xmath528 , @xmath529 , @xmath58 , @xmath530 , @xmath531 , and @xmath532 by replacing @xmath533 by @xmath534 , @xmath535 , @xmath536 , @xmath537 , @xmath538 , and @xmath539 respectively in the above equation . substituting this in equation ( [ eq : stokes ] ) and employing the galerkin method , we obtain the following owing to the orthogonality of fourier modes :      where we have dropped the subscript @xmath544 in the above equation . next ,",
    "using the last equation , we eliminate @xmath545 , @xmath546 and @xmath547 in the first three equations to obtain the following equation for the pressure : @xmath548 the continuity equation can be replaced by the above equation for pressure along with the boundary condition requiring the velocity to be divergence free @xcite , i.e. @xmath549 alternatively , one solves the eq .",
    "[ eq : press_helm ] with the following pressure boundary condition        though , the pressure boundary conditions above are unknown a priori , but instead they must take a value so that the condition in eq .",
    "( [ eq : cont_bc ] ) is satisfied .",
    "grouping all the equations to be solved , we have the following        the kleiser - schumann influence matrix approach involves solving three set of equations as in eq .",
    "( [ eq : stokes_t_all ] ) with different boundary conditions as discussed shortly . in the first set ,",
    "one solves the equations in [ eq : stokes_t_all ] with the correct boundary conditions for the velocity in eq .",
    "( [ eq : bc_vel ] ) , but with homogeneous boundary conditions for the pressure , i.e. @xmath560 each of the equations for pressure and velocity components above are solved here by expanding them in discrete chebyshev polynomials and then employing the galerkin method to obtain equations for each of chebyshev modes .",
    "the appropriate boundary conditions are satisfied by employing the tau method @xcite in which the equations for the highest two chebyshev modes are replaced by the boundary condition equations .",
    "the solution for pressure is first computed , whose value is then substituted in the equations for velocity . thus , in each step , one needs to solve a helmholtz equation using chebyshev polynomial expansion . in this case",
    ", the equations for the unknown chebyshev coefficients can be reduced to a quasi - tridiagonal matrix equation with the last full row being full , while the rest being in the standard tridiagonal form .",
    "also , note that the equations for the even and odd chebyshev modes are decoupled and solved separately .",
    "these quasi - tridiagonal systems of equations can be solved in @xmath145 time with a direct algorithm @xcite .",
    "also , the use of chebyshev gauss - lobatto quadrature points @xcite for transforming a variable between physical and transform space ensures that ffts can be employed for its evaluation @xcite .",
    "therefore , for each of the fourier modes @xmath561 , the asymptotic cost of the chebyshev - tau solution procedure scales as @xmath562 .",
    "we denote this first set of solution thus obtained for fourier mode @xmath561 by ( @xmath563 ) .",
    "the next two sets of equations involve solving the homogeneous version of the differential equations in [ eq : stokes_t_all ] , i.e. , the right hand side of the each of the equations in [ eq : stokes_t_all ] is set to zero",
    ". moreover , the velocity boundary condition for these two sets of problems are also homogeneous .",
    "the only non - homogeneous equation in these two problems are the pressure boundary conditions . in the first of these , the pressure boundary condition is the following : @xmath564 while in the second the pressure boundary condition is @xmath565 we denote these two solutions by ( @xmath566 ) , and ( @xmath567 ) .",
    "it is important to note that the latter two set of equations are to be solved just once at the beginning of the simulation and the results are stored .",
    "the overall solution for the velocity and pressure is then obtained as : @xmath568 it is easy to see that the above solution satisfies both the differential equations as well as the boundary conditions .",
    "the only remaining task is therefore to determine the pressure boundary conditions @xmath569 and @xmath570 .",
    "this is accomplished by the requiring that the velocity be divergence free at the boundary ( eq . [ eq : cont_bc ] ) .",
    "thus , one obtains the following equations for the pressure boundary conditions @xmath571    in the above equations , @xmath572 , @xmath573 and @xmath574 are the continuity expression ( eq .",
    "[ eq : cont_bc ] ) evaluated at the appropriate boundary point , i.e. at @xmath79 or @xmath80 .",
    "for example , @xmath575 is given by @xmath576 the @xmath577 coefficient matrix in eq .",
    "( [ eq : inf_mat ] ) is known as the influence matrix and the resulting matrix equation is trivially solved at a cost of @xmath14 .",
    "the solution in eq .",
    "( [ eq : cheb_sol ] ) gives the fourier coefficients of the pressure and velocity as a function of the wall normal coordinate @xmath131 , which is then employed to obtain the pressure and velocity in the physical space using inverse ffts .",
    "charrier , j.  m. , shrivastava , s. , wu , r. , 1989 .",
    "free and constrained inflation of elastic membranes in relation to thermoforming - non - axisymmetric problems .",
    "journal of strain analysis for engineering design 24 , 5574 .",
    "deville , m. , kleiser , l. , montigny - rannou , f. , 1984 . pressure and time treatment for chebyshev spectral solution of a stokes problem .",
    "international journal for numerical methods in fluids 4 , 11491163 .",
    "fard , a.  s. , hulsen , m. , meijer , h. , famili , n. , anderson , p. , 2012 .",
    "adaptive non - conformal mesh refinement and extended finite element method for viscous flow inside complex moving geometries .",
    "international journal for numerical methods in fluids 68  ( 8) , 10311052 .",
    "henniger , r. , obrist , d. , kleiser , l. , 2010 .",
    "high - order accurate solution of the incompressible navier - stokes equations on massively parallel computers .",
    "journal of computational physics 229 , 35433572 .",
    "hernandez - ortiz , j.  p. , ma , h. , de  pablo , j.  j. , graham , m.  d. , 2008 . concentration distributions during flow of confined flowing polymer solutions at finite concentration : slit and grooved channel .",
    "korea - australia rheology journal 20 , 143152 .",
    "janssen , p. j.  a. , anderson , p.  d. , 2008 . a boundary - integral model for drop deformation between two parallel plates with non - unit viscosity ratio drops . journal of computational physics 227 , 88078819 .",
    "kumar , a. , higdon , j. j.  l. , 2011 .",
    "dynamics of the orientation behavior and its connection with rheology in sheared non - brownian suspensions of anisotropic dicolloidal particles .",
    "journal of rheology 55 , 581626 .",
    "lac , e. , barths - biesel , d. , pelekasis , n.  a. , tsamopoulos , j. , 2004 .",
    "spherical capsules in three - dimensional unbounded stokes flows : effect of the membrane constitutive law and onset of buckling .",
    "journal of fluid mechanics 516 , 303334 .",
    "macmeccan , r.  m. , clausen , j.  r. , neitzel , g.  p. , aidun , c.  k. , 2009 . simulating deformable particle suspensions using a coupled lattice - boltzmann and finite - element method .",
    "journal of fluid mechanics 618 , 1339 .",
    "pranay , p. , anekal , s.  g. , hernandez - ortiz , j.  p. , graham , m.  d. , 2010 .",
    "pair collisions of fluid - filled elastic capsules in shear flow : effects of membrane properties and polymer additives .",
    "physics of fluids 22 , 123103 .",
    "rahimian , a. , veerapaneni , s.  k. , biros , g. , 2010 .",
    "dynamic simulation of locally inextensible vesicles suspended in an arbitrary two - dimensional domain , a boundary integral method .",
    "journal of computational physics 229 , 64666484 .",
    "ramanujan , s. , pozrikidis , c. , 1998 .",
    "deformation of liquid capsules enclosed by elastic membranes in simple shear flow : large deformations and the effect of fluid viscosities .",
    "journal of fluid mechanics 361 , 117143 ."
  ],
  "abstract_text": [
    "<S> an accelerated boundary integral method for stokes flow of a suspension of deformable particles is presented for an arbitrary domain and implemented for the important case of a planar slit geometry . </S>",
    "<S> the computational complexity of the algorithm scales as @xmath0 or @xmath1 ) , where @xmath2 is proportional to the product of number of particles and the number of elements employed to discretize the particle . </S>",
    "<S> this technique is enabled by the use of an alternative boundary integral formulation in which the velocity field is expressed in terms of a single layer integral alone , even in problems with non - matched viscosities . </S>",
    "<S> the density of the single layer integral is obtained from a fredholm integral equation of the second kind involving the double layer integral . </S>",
    "<S> acceleration in this implementation is provided by the use of general geometry ewald - like method ( ggem ) for computing the velocity and stress fields driven by a set of point forces in the geometry of interest . for the particular case of the slit geometry </S>",
    "<S> , a fourier - chebyshev spectral discretization of ggem is developed . </S>",
    "<S> efficient implementations employing the ggem methodology are presented for the resulting single and the double layer integrals . </S>",
    "<S> the implementation is validated with test problems on the velocity of rigid particles and drops between parallel walls in pressure driven flow , the taylor deformation parameter of capsules in simple shear flow and the particle trajectory in pair collisions of capsules in simple shear flow . </S>",
    "<S> the computational complexity of the algorithm is verified with results from several large scale multiparticle simulations .    accelerated boundary integral , confined , slit , non - periodic , capsule , red blood cells , microfluidics </S>"
  ]
}
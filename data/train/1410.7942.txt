{
  "article_text": [
    "in recent years the interest to the analysis of various phenomena of collective behavior has significantly increased .",
    "it can be explained by the fact that in almost all areas of human activity there are processes involving information exchange inside collectives .",
    "such processes deeply affect the future behavior of a collective and can lead to positive or negative consequences not only for the collective considered but also for a much larger social formation .",
    "for example an intensive sale of shares on the stock exchange market by players that have a big influence on others can lead to a drastic drop of global economic indexes .",
    "riots and revolutionary situations proceed in a similar fashion when a relatively small group of instigators activates such a large number of people that state security systems are not able to cope with it .",
    "the active development of social networking services in later years greatly increased the possibilities in collective behavior manipulation .",
    "this thesis can be proved by analyzing such revolutionary phenomena as arab spring , 2011 - 13 russian protests , euromaidan etc . in the majority of these cases",
    "the corresponding actions were planned via social networks .",
    "it is worth mentioning that such processes are usually coordinated by small groups of designated activists .",
    "the modeling of collective behavior was studied in a large number of papers .",
    "following many other authors we base our work on the paper of m. granovetter @xcite , which studied threshold models of collective behavior .",
    "the threshold behavior means that a state of every member of a group changes only when the value of a special function , that is associated with this agent , reaches some threshold .",
    "the simplest example of such behavior is to follow the decision of the majority . in granovetters",
    "model the network connecting the agents is specified by a complete graph  every agent takes into account the opinion of every other agent . in many real situations such approach can not be used .",
    "for example , in real world social networks an agent usually bases its opinion on that of agents from some neighborhood . in this case",
    "the opinion of agents outside of such neighborhood would have no impact on the opinion of the agent considered .",
    "similar situations can be observed in genetics : in many gene networks the amount of genes that directly affect each particular gene is small relative to the total number of genes in the network .",
    "similarities of dynamical processes that can be observed in gene networks and social networks led us to an idea to introduce and analyze models of collective behavior that are based on boolean networks . the apparatus of boolean networks have been used in mathematical biology for 50 years .",
    "below we consider the so called synchronous boolean networks ( sbns ) first introduced by s. kauffman in @xcite with the purpose of analyzing dynamical properties of gene networks . in our approach",
    "we consider a collective as an sbn with special functions associated with the network vertices . from our point of view",
    "the language of boolean networks is well suited for explaining a number of phenomena of collective behavior .",
    "for example , equilibrium states from @xcite can be viewed as fixed points of a discrete function specified by the corresponding sbn .",
    "another important feature of such models is that to solve combinatorial problems that arise during the analysis of sbns it is possible to use modern methods of solving large systems of boolean equations . for this purpose in our paper",
    "we use algorithms for solving the boolean satisfiability problem ( sat ) .",
    "let us present a brief outline of the paper .",
    "first we describe sbns and define fixed points and cycles of discrete functions determined by these networks .",
    "then we introduce two models of collective behavior that are based on sbns . in the first model we consider a situation when each network agent at the next moment of time makes a decision to act if at least a specific amount of agents in its neighborhood are currently active .",
    "otherwise the agent decides not to act .",
    "this form of collective behavior is usually referred to as conformity .",
    "the second model is used to illustrate the phenomenon of anticonformity - an agent decides not to act if at the present moment at least a specific amount of its neighbors decide to act and vice versa . after this",
    ", we extend the models proposed by introducing two special types of agents : instigators and loyalists .",
    "instigators are the agents that always act regardless of other agents decisions .",
    "loyalists are the agents that never act .",
    "for the extended models we formulate the following combinatorial problem : for a network with a majority of inactive agents to find such a disposition of small amount of instigators , that after several moments of time the majority of agents in this network becomes active .",
    "an opposite problem is also considered : for a previously activated network ( with instigators ) , to find a disposition of a relatively small number of loyalists , such that after several moments of time the majority of agents becomes inactive . in the context of problems considered we state a number of theoretical properties of discrete functions defined by the corresponding sbns",
    ". then we note that modern combinatorial algorithms can be used to solve such problems .",
    "in particular we use algorithms for solving sat .",
    "further we describe our computational experiments and discuss the results . in these experiments we constructed sbns according to widely known models of random graphs ( gilbert - erdos - renyi model , watts - strogatz model , barabasi - albert model ) . using modern sat solvers we managed to solve combinatorial problems outlined above for corresponding networks with 500 vertices and more . in the conclusion",
    "we give some final remarks and outline our future plans .",
    "as we already noted , the paper @xcite is the fundamental work in the field of threshold models of collective behavior . in a number of later works , for example @xcite ,",
    "the ideas from @xcite were detailed and applied to analysis of various sociological situations .",
    "in @xcite and others it was shown that various phenomena of collective behavior may be studied from the game theory point of view .",
    "in particular , equilibrium states @xcite in collectives can be considered as nash equilibria . in this context",
    "we would like to mention the work @xcite in which the conformity and anticonformity phenomena were considered from the game theory positions .    in the paper @xcite the influence of thresholds distributions on the genesis and development of several phenomena ( in particular , the so called bandwagon effect ) in the networks with arbitrary structure is analyzed .    as we said above",
    ", synchronous boolean networks were introduced by s. kauffman in @xcite . in that paper problems of analysis of fixed points and cycles of corresponding discrete functions",
    "were considered as important and helpful for the study of dynamics of real gene networks .",
    "apparently , @xcite is the first example of application of combinatorial algorithms to the search for cycles of discrete functions specified by kauffman networks .",
    "later the same authors used the sat approach for similar purposes @xcite .",
    "in @xcite we considered the problem of search for fixed points of discrete functions specified by networks , in which vertex weight functions take natural values and at the same time act as threshold functions . in order to solve the corresponding problems",
    ", we used both sat and robdd approaches .",
    "also in @xcite we studied an opposite problem : given fixed points of the function specified by some network , to restore the structure of the network .    in recent years",
    "there were published a lot of works about the analysis of structure of big networks and processes that can occur in them .",
    "works @xcite and @xcite are quite complete reviews of relevant topics .",
    "a _ synchronous boolean network _ ( sbn ) is defined as a directed graph in which with each vertex there is associated a total function that takes values from @xmath0 at discrete moments of time .",
    "hereinafter we will refer to such functions as vertex _",
    "weight functions_. the value of a weight function for an arbitrary vertex @xmath3 at moment @xmath4 is calculated based on the values of weight functions of some set of network vertices at moment @xmath5 . in sbns values of all weight functions",
    "are updated simultaneously ( synchronously ) .",
    "note that the weight functions can be specified in various ways : by truth tables , boolean formulas or predicates .",
    "values of weight functions of all vertices at an arbitrary moment @xmath5 , @xmath6 can be considered as a result of computing a value of a discrete function that takes a boolean vector of length @xmath7 as input and outputs a boolean vector of length @xmath7 , where @xmath7 is a number of vertices in the network .",
    "we denote a boolean vector consisting of weight functions values at moment @xmath5 as @xmath8 and call it a _ network state _ at moment @xmath5 .",
    "we will refer to @xmath9 as to an _ initial network state_. it is clear that an arbitrary sbn with @xmath7 vertices has @xmath10 different possible network states .",
    "thus , more formally , let us assume that @xmath11 is a directed graph with @xmath7 vertices that represents some sbn . below we will consider only graphs without loops and without multiple arcs",
    ". for convenience let us mark vertices by natural numbers from @xmath1 to @xmath7 . with an arbitrary vertex @xmath12 , @xmath13 we associate a weight function @xmath14 , whose values are defined at discrete moments of time @xmath15 .",
    "we assume that at @xmath16 each weight function has some initial value .",
    "by @xmath17 we denote such a set of network vertices that for each @xmath18 , @xmath19 the graph @xmath11 has an arc @xmath20 .",
    "essentially it means that @xmath17 contains vertices that directly affect @xmath12 .",
    "we also call @xmath17 a _ neighborhood _ of @xmath12 .    from here on by @xmath21 we mean the set of all possible binary words of length @xmath7 . the rules that specify each weight function @xmath22 , @xmath13 are the same at any moment of time .",
    "it means that in total these functions specify a vector function that is defined everywhere in @xmath21 and takes values from @xmath21 .",
    "we denote this function as @xmath23 and refer to it as a _ discrete function defined by network _ @xmath11 .",
    "the transitions between network states , represented by boolean vectors from @xmath21 , can be naturally illustrated using special graphs called _ state transition graphs _",
    "we denote the stg of network @xmath11 as @xmath24 .",
    "an example of a simple sbn with 3 vertices where weight functions are specified by boolean formulas is displayed in figure [ kau_fig ] .",
    "as we already noted , the amount of different states of an arbitrary sbn with @xmath7 vertices is @xmath10 , and the rules , according to which the network transitions from one state into another , do not depend on @xmath5 .",
    "therefore , regardless of the network state at moment @xmath16 , there are such @xmath25 and @xmath26 , @xmath27 , that @xmath28 .",
    "in this situation we call the sequence of transitions @xmath29 a cycle of length @xmath30 @xcite . in some works on the analysis of dynamical properties of gene networks",
    "the cycles are called `` attractors '' .",
    "the cycle of length 1 is called a fixed point of function @xmath31 . for the network in figure [ kau_fig ]",
    "it is easy to see that @xmath32 is a fixed point , while a sequence @xmath33 forms a cycle of length 2 .",
    "note that the neighborhood of every vertex of the network in figure [ kau_fig ] is formed by other two vertices .",
    "in this section we introduce and analyze two phenomena of collective behavior that can be observed in the real world . the first one is conforming behavior .",
    "it means that an agent agrees with the opinion of some agents from its neighborhood .",
    "it is easy to find many examples of conformity in real life : from riots and financial crises mentioned above to presidential elections , etc .",
    "the second phenomenon we study is anticonforming behavior .",
    "the agent demonstrating anticonforming behavior acts as an opposite to an agent with conforming behavior : it chooses not to act while certain amount of agents from its neighborhood are active and vice versa .",
    "let us consider an sbn @xmath11 with @xmath7 vertices interpreting agents .",
    "we will say that an arbitrary agent @xmath12 , @xmath34 is _ active _ ( _ inactive _ ) at moment @xmath5 if @xmath35 ( @xmath36 , respectively ) .",
    "we assume that an arbitrary agent @xmath12 is associated with the weight function of one of the following two types : @xmath37    @xmath38    where @xmath39 $ ] are called _ conformity threshold _ and _ anticonformity treshold _ , respectively .",
    "essentially , means that the agent @xmath12 becomes active at moment @xmath4 only if at least @xmath40 agents from its neighborhood are active at moment @xmath5 .",
    "otherwise @xmath12 becomes inactive at moment @xmath4 .",
    "hereinafter we refer to such agents as to _ conformists_. likewise means that @xmath12 becomes inactive at moment @xmath4 if at least @xmath41 agents from its neighborhood are active at moment @xmath5 and becomes active otherwise .",
    "these agents will be refered to as _ anticonformists_. values @xmath42 and @xmath43 we will call _ conformity level _ and _ anticonformity level _ , respectively .",
    "further we assume that if @xmath44 then the sum of corresponding weights is @xmath2 .",
    "let @xmath12 be a conformist with the conformity threshold @xmath45 and @xmath46 .",
    "then it is clear that @xmath47 , i.e. that @xmath14 takes the value of @xmath1 at any moment @xmath5 .",
    "it means that agent @xmath12 is active at any moment regardless of decisions of agents in its neighborhood .",
    "we will refer to such agents as to _",
    "now let @xmath12 be an anticonformist with anticonformity threshold @xmath48 and @xmath49 .",
    "following the similar reasoning we can conclude that such agent is inactive at any moment of time regardless of decisions of agents from its neighborhood .",
    "we call such agents _ loyalists_.    to an arbitrary agent that is neither instigator nor loyalist we will refer to as a _",
    "simple agent_. thus an arbitrary simple agent @xmath12 is either a conformist with @xmath50 or an anticonformist with @xmath51 .    in figure [ legend ]",
    "we demonstrate the notation that we use below .        the networks with described types of agents",
    "can often be observed in real life .",
    "indeed , for example one can notice that on the early stage of every revolutionary situation there are instigators .",
    "their purpose is to activate as many initially inactive simple agents - conformists as possible .",
    "once they become active , conformists help activating other inactive agents - conformists in the following moments of time .",
    "this process gradually involves even agents that are not directly connected to instigators .",
    "the goal of loyalists in such situations is to launch the deactivation process aimed at making active simple agents inactive .",
    "it should be noted that the disposition of instigators and loyalists in the network can significantly affect the activation / deactivation of the network . in figure",
    "[ instigators_2vars ] we display the behavior of one network with two different dispositions of instigators at the initial time moment .",
    "the considered networks does not have loyalists and all its simple agents are conformists .",
    "we assume that at the initial moment all the simple agents are inactive ( i.e. for every simple agent @xmath49 ) . in the first case 5 instigators after 5 moments of time",
    "manage to activate only 17 simple agents . in the second case",
    "3 instigators after 5 moments of time activate almost the whole network  26 simple agents .",
    "important detail here is that in the first case there is more instigators but their disposition is worse .",
    "further we establish a number of theoretical results regarding the dynamical properties of sbns with agents of the described types .",
    "the main achievement here consists in the justification of the fact that the networks in which all simple agents are conformists and networks where all simple agents are anticonformists can demonstrate completely different activation / deactivation dynamics .",
    "consider an arbitrary sbn @xmath11 with @xmath7 agents .",
    "we assume that all the simple agents in the network are conformists and that there can be instigators and loyalists .",
    "hereinafter we study two problems that we believe to be interesting from the practical point of view .    in the context of the first problem ( to which we will refer below as * problem 1 * ) we consider a network with @xmath7 agents",
    "among which there can be @xmath52 , @xmath53 instigators , while all the other @xmath54 agents are simple agents - conformists .",
    "we assume that a priori @xmath52 instigators can be arbitrarily placed in the network .",
    "also we assume that at the initial time moment @xmath16 all the simple agents are inactive .",
    "the goal is to find the disposition of instigators such that starting from @xmath16 the network after some time moments transitions to the state with a majority of active agents .    the second problem ( to which we will refer below as * problem 2 * ) consists in the following : we consider the network with a fixed disposition of @xmath52 , @xmath53 instigators and all the other @xmath54 simple agents - conformists are active at the initial moment @xmath16 .",
    "we assume that it is possible to replace @xmath55 , @xmath56 arbitrary simple agents by loyalists .",
    "we need to find such disposition of these loyalists that starting from @xmath16 the network after some time moments transitions to the state with the majority of inactive simple agents .",
    "let us show that the following theorem holds .",
    "_ * theorem 1 . *",
    "consider an arbitrary sbn with @xmath7 agents among which there are @xmath52 , @xmath53 instigators and the remaining @xmath54 simple agents are conformists .",
    "we assume that at the initial time moment @xmath16 all @xmath54 simple agents are inactive . then for any disposition of instigators and any conformity thresholds of simple agents the network starting from @xmath16 will transition to a fixed point after @xmath57 time moments",
    "_    * proof .",
    "* assume that @xmath11 is an sbn with @xmath7 vertices , weight functions , an arbitrary disposition of @xmath52 instigators and arbitrary conformity thresholds of simple agents .",
    "suppose that all simple agents are inactive at @xmath16 .",
    "if after transition from @xmath16 to @xmath58 none of simple agents have changed their decisions ( @xmath59 ) then we have a fixed point ( since instigators do not change their decisions by definition ) .",
    "now suppose that at moment @xmath58 some simple agents have changed their decisions from @xmath2 to @xmath1 .",
    "let @xmath3 be one of them .",
    "it means that @xmath3 has changed its decision from @xmath2 to @xmath1 only because it had enough ( relative to its conformity threshold ) instigators in its neighborhood .",
    "but since instigators are always active then the number of active agents in the neighborhood of @xmath3 at any @xmath6 can not be less than that at @xmath16 .",
    "therefore this agent will not change its decision @xmath1 at any of the following moments of time .",
    "if at moment @xmath60 none of simple agents have changed their decisions then we have a fixed point .",
    "suppose @xmath3 is an arbitrary agent that has changed its decision during the transition from @xmath58 to @xmath60 . from the above",
    "it follows that @xmath3 changed decision from @xmath2 to @xmath1 .",
    "it could have occured only because it had enough ( relative to its conformity threshold ) instigators and active agents in its neighborhood .",
    "however all agents that have become active at @xmath58 can not change their decisions at the following moments of time .",
    "therefore agent @xmath3 will remain active at all @xmath61 .",
    "if we continue by analogy we can conclude that not later than after @xmath54 time moments our network will reach a fixed point . @xmath62    using the reasoning technique from the proof of theorem 1 it is easy to prove the following corollary .",
    "* corollary 1 . *",
    "consider an arbitrary sbn with @xmath7 agents among which there are @xmath52 , @xmath53 instigators and the remaining @xmath54 simple agents are conformists .",
    "assume that some disposition of instigators is fixed and all simple agents are active at the initial time moment @xmath16 .",
    "also assume that we can replace any @xmath55 , @xmath63 simple agents to loyalists .",
    "then for any disposition of these @xmath55 loyalists and any conformity thresholds of remaining @xmath64 simple agents the network starting from @xmath16 will transition to a fixed point after @xmath65 time moments .",
    "_    note that the theorem 1 despite its simplicity makes it possible to explain the situations when a relatively small number of instigators thanks to their advantageous disposition manage to activate quite a big network quickly .",
    "apparently , the development of revolutionary situations , epidemics and critical processes in stock markets proceed in the similar fashion .",
    "the principal possibility of the phenomenon when a small number of instigators can activate the network starting from the state in which all simple agents - conformists are inactive means that the network itself is vulnerable to instigators .",
    "intuitively it is clear that such networks can be activated by instigators even faster if some simple agents are already active at the initial time moment .",
    "this thesis is proved by the following theorem .",
    "_ * theorem 2 . *",
    "assume @xmath66 is a state of an sbn with @xmath7 vertices with weight functions and @xmath52 , @xmath53 instigators , in which all simple agents - conformists are inactive .",
    "denote by @xmath67 a network state , with the same disposition of instigators as in @xmath66 , in which there is at least one active simple agent .",
    "by @xmath68 and @xmath69 we denote states reached by the network after @xmath70 time moments starting from @xmath66 and @xmath67 , respectively . then for any @xmath71 @xmath72 where @xmath73 stands for a hamming weight of a boolean vector @xmath74 . _    * proof .",
    "* consider a state @xmath66 in which all simple agents are inactive and a state @xmath67 where some @xmath25 , @xmath75 simple agents are active .",
    "denote these active agents as @xmath76 .",
    "we assume that the disposition of @xmath52 instigators is the same in both @xmath66 and @xmath67 .",
    "first let us prove that @xmath77 .",
    "let us analyze all possible cases .",
    "first , both @xmath66 and @xmath67 can be fixed points of @xmath31 . in this case",
    "the property holds .",
    "if @xmath66 is a fixed point and @xmath67 is not , then even if all agents @xmath76 become inactive in @xmath78 it holds that @xmath77 .",
    "now suppose that @xmath66 is not a fixed point , i.e. some simple agents in @xmath79 become active .",
    "it can only occur if they have enough instigators in their neighborhoods ( relative to their conformity thresholds ) .",
    "but it means that the same simple agents will be active in @xmath78 .",
    "additionally some ( possibly all ) agents from @xmath80 can become inactive or remain active in @xmath78 .",
    "also in @xmath78 there can appear other active simple agents because @xmath80 are active in @xmath67 . in any case",
    "we have @xmath77 .",
    "since @xmath66 is not a fixed point of @xmath31 then some simple agents in @xmath79 become active .",
    "denote these agents as @xmath81 . from theorem 1",
    "it follows that these agents can not become inactive in any of states @xmath82 .",
    "consider an arbitrary agent @xmath83 , @xmath84 and let @xmath85 be its neighborhood .",
    "from the above the number of active agents in @xmath85 in states @xmath86 is not less than that in @xmath85 in the state @xmath66 .",
    "therefore @xmath87 will be active in all states @xmath88 , @xmath89 .",
    "it means that @xmath79 and @xmath78 can be considered as initial states of the network with a set of @xmath90 instigators : this set is formed by @xmath52 original instigators and @xmath91 new instigators @xmath87 .",
    "after that by analogy we can show that @xmath92 , etc .",
    "@xmath62      consider an arbitrary sbn @xmath11 with @xmath7 agents .",
    "we assume that all simple agents in @xmath11 are anticonformists and also that the network can contain instigators and loyalists .",
    "on the first glance it may seem that the dynamical processes we studied for the collectives of conformists should have some simple analogues in the collectives of anticonformists .",
    "however , more thorough investigation reveals that this is not the case .",
    "in particular , assume that @xmath11 is a network in which any agent @xmath12 has a nonempty neighborhood ( @xmath93 . also let this network contain neither instigators nor loyalists .",
    "then it is easy to see that if all the agents in the network are conformists ( with non - zero conformity thresholds ) , then the states @xmath94 and @xmath95 are fixed points .",
    "however , if all the agents are anticonformists ( with non - zero anticonformity thresholds ) then there is the cycle of length @xmath96 : @xmath97 .",
    "indeed , let @xmath11 be the network for which all listed conditions are satisfied , all its simple agents are anticonformists and they are inactive at moment @xmath16 .",
    "let @xmath12 be an arbitrary agent of the network and @xmath17 be its neighborhood .",
    "since @xmath98 ( by assumption ) , then at @xmath16 in @xmath17 all the agents have the @xmath2 state .",
    "therefore for any value of @xmath99 we have : @xmath100 , so at moment @xmath58 the agent @xmath12 will switch its state to @xmath1 .",
    "since @xmath12 is an arbitrary network agent , it means that at moment @xmath58 every agent of the network will switch to the state @xmath1 .",
    "now let us consider what occurs at moment @xmath60 .",
    "let @xmath12 be an arbitrary agent - anticonformist .",
    "then at moment @xmath58 all the agents in @xmath17 are in the state @xmath1 .",
    "it means that for any @xmath101 the following holds : @xmath102 .",
    "in this situation at moment @xmath60 the agent @xmath12 switches to the state @xmath2 .",
    "but since @xmath12 is an arbitrary agent , then all the network agents switch to @xmath2 at @xmath60 .",
    "therefore we have the cycle @xmath97 .",
    "the following theorem describes the dynamics of collectives of anticonformists with the same initial conditions as in theorem 1 .",
    "it can be noted that in this situation , generally speaking , the collective of anticonformists has more complex behavior than that of the collective of conformists . in particular ,",
    "if the network of anticonformists starts from an initial state in which all simple agents - anticonformists are inactive , then it may not reach an equilibrium state ( a fixed point ) .",
    "_ * theorem 3 . *",
    "consider an arbitrary sbn with @xmath7 agents , where @xmath52 , @xmath53 agents are instigators and the remaining @xmath54 simple agents are anticonformists .",
    "assume that at the initial moment @xmath16 all @xmath54 simple agents are inactive .",
    "then for any disposition of instigators and any anticonformity thresholds of simple agents the network starting from @xmath16 after @xmath57 will either transition to a fixed point or will enter the cycle of length @xmath96 .",
    "_    * proof .",
    "* let @xmath11 be an sbn with @xmath7 vertices , weight functions , an arbitrary disposition of @xmath52 instigators and arbitrary anticonformity thresholds of simple agents .",
    "below we denote the set of all vertices of @xmath11 as @xmath103 .",
    "let @xmath66 be an initial state of a network with an arbitrary disposition of @xmath52 instigators and with inactive simple agents .",
    "let @xmath79 be a state to which the network transitions from @xmath66 at moment @xmath58 .",
    "if in @xmath79 none of simple agents have changed their decisions ( from @xmath2 to @xmath1 ) then we have a fixed point .",
    "suppose that @xmath104 , @xmath105 and @xmath106 , @xmath107 simple agents have switched from @xmath2 to @xmath1 .",
    "if @xmath108 , i.e. all simple agents have switched , then with the transition from @xmath79 to @xmath109 all these agents will switch back from @xmath1 to @xmath2 since in @xmath79 each of them has a neighborhood consisting only of active agents . therefore in this case we have the following cycle of length @xmath96 : @xmath110 .",
    "now suppose that @xmath111 .",
    "consider @xmath112 , @xmath113 simple agents that have not switched from @xmath2 to @xmath1 with the transition from @xmath66 to @xmath79 .",
    "it could have occured only if in their neighborhoods there were enough ( relative to their anticonformity thresholds ) instigators ( which are always active ) .",
    "but since instigators do not change their decisions , then each of these @xmath114 agents will not switch from @xmath2 to @xmath1 at any of the following time moments .",
    "denote by @xmath115 , @xmath116 the set formed by all simple agents that have switched ( @xmath59 ) at moment @xmath58 .",
    "note that every agent from @xmath117 does not change its state from @xmath2 to @xmath1 at time moments @xmath5 , @xmath6 .",
    "further let us look only at the behavior of agents from @xmath115 .",
    "consider moment @xmath60 .",
    "if none of agents from @xmath115 have switched ( @xmath118 ) then we have a fixed point ( since all agents from @xmath117 do not change their decisions at any @xmath119 .",
    "suppose that @xmath120 agents from @xmath115 , @xmath121 have switched at @xmath60 ( @xmath118 ) .",
    "it is clear that if @xmath122 ( all agents from @xmath115 have switched ) then we have a cycle of length @xmath96 .",
    "assume @xmath123 , by @xmath124 , @xmath125 denote the set of all @xmath126 agents that have not switched ( @xmath118 ) at moment @xmath60 .",
    "consider an arbitrary agent @xmath127 .",
    "this agent has not changed its decision ( @xmath118 ) at @xmath60 only because at @xmath58 its neighborhood had enough inactive agents from @xmath103 ( relative to @xmath3 anticonformity threshold ) .",
    "however these inactive agents could not belong to @xmath115 ( since at @xmath58 all agents from @xmath115 are active ) .",
    "therefore they must belong to @xmath117 .",
    "but as we noted above all such agents do not change their decisions from @xmath2 to @xmath1 at any of moments @xmath6 .",
    "it means that any agent @xmath127 will not change its decision at any of the following moments @xmath61 .",
    "the set containing @xmath120 , @xmath123 simple agents that have switched at @xmath60 from @xmath1 to @xmath2 we denote by @xmath128 and further analyze only the behavior of agents from @xmath128 . by analogy",
    "we note that each agent from @xmath129 does not change its decision at @xmath61 , etc .",
    "thus at most after @xmath130 time moments the network considered will either reach a fixed point or enter a cycle of length @xmath96 .",
    "@xmath62    the reasoning technique from the proof of the theorem 3 can be used to study the behavior of collectives of anticonformists , in which there are both instigators and loyalists . in particular , for an arbitrary network of such kind one can show that starting from the initial state , in which either all simple agents - anticonformists are active or inactive , the network will transition to a fixed point or will enter the cycle of length @xmath96 after at most @xmath64 time moments , where @xmath52 stands for the amount of instigators and @xmath55 - for the amount of loyalists .      in this part we presented several theoretical results regarding the conforming and the anticonforming behavior .",
    "from our point of view these results explain a number of phenomena observed in the real world .",
    "in particular , fast activation of a large network by a relatively small number of instigators can be explained not only by the network structure ( for example by its strong connectivity ) or by small conformity thresholds but also by advantageous disposition of instigators .",
    "if there exists such disposition of small number of instigators that forces the network to transition from the state with inactive simple agents to the state with a majority of active agents then this network is vulnerable to instigators . to determine the degree of such vulnerability for some particular disposition of @xmath52 instigators it is sufficient to study the behavioral dynamics of the network for at most @xmath54 time moments",
    "this fact is the assertion of the theorem 1 .",
    "evidently , for many real - world networks the vulnerability to instigators is highly undesirable . on the other hand , as it follows from the corollary 1 , even if the network was already activated by instigators , but there is a solution of * problem 2 * , then , roughly speaking , the situation can be improved by transforming a number of simple agents to loyalists .",
    "theorem 3 shows that the activation dynamics of collectives of anticonformists can significantly differ from that of the collectives of conformists even for the similar initial conditions .",
    "unfortunately , we could not obtain any analogues of theorems 1 and 3 for collectives in which simple agents are represented by both conformists and anticonformists . in the section about the experiments we give an example when such network displays more complex behavior .",
    "note that in the real world the conforming behavior is spread much more than the anticonforming . on the other hand ,",
    "the collectives of anticonformists demonstrate more complex behavioral dynamics compared to that of collectives of conformists .",
    "it follows from theorems 1 and 3 . that is why in our computational experiments we studied the collectives of conformists and concentrated our attention on * problem 1 * and * problem 2 * , formulated above .",
    "we would like to point out the fact that the considered problems are combinatorial since they presume the analysis of many possible variants of dispositions of instigators and loyalists .",
    "we applied to * problem 1 * and * problem 2 * the algorithms that are used to solve the boolean satisfiability problem ( sat ) .",
    "this choice is motivated by the fact , that modern sat solving algorithms are very powerful computational methods that successfully cope with combinatorial problems from a wide spectrum of practical areas @xcite .    for an arbitrary boolean formula the boolean satisfiability problem ( sat ) consists in answering a question if this formula is satisfiable , i.e. if there exists such an assignment to boolean variables of this formula , that makes the formula true .",
    "this problem in the general case can be effectively ( in polynomial time on the length of a binary encoding of the considered formula ) reduced to the problem of deciding if a boolean formula in a conjunctive normal form ( cnf ) is satisfiable .",
    "taking this fact into account , below we consider sat in the following formulation : for an arbitrary cnf @xmath131 over the set of boolean variables @xmath132 we need to answer a question if @xmath131 is satisfiable , and if the answer is yes , to present a corresponding variable assignment that evaluates @xmath131 to @xmath1 .",
    "this problem is np - hard , therefore , it can not be solved in polynomial time if @xmath133 .",
    "nevertheless , sat is very important in a practical sense because a lot of industrial problems can be effectively reduced to it and solved using modern algorithms developed during recent 15 years .",
    "basic algorithmic constructions used in solving sat and main directions of development and applications of sat approach are described in @xcite .",
    "the reducibility of an arbitrary np problem to sat ( in the form of decision problem ) follows from the cook theorem @xcite .",
    "however , in practice the analysis of specific details of the considered problem makes it possible to significantly decrease the size of the cnf formula produced .",
    "a number of general techniques used to reduce combinatorial problems to sat can be found in @xcite .",
    "the sat approach was successfully applied to the search for cycles of functions defined by boolean networks in @xcite and @xcite .",
    "it should be noted , however , that networks studied in that papers have their own specifics motivated by the source of origin : essentially they are kauffman networks in which the power of the neighborhood of an arbitrary agent does not exceed some relatively small number @xmath134 ( usually @xmath135 ) . also , weight functions used in @xcite and @xcite are completely different from the ones we use . that is why below we present a relatively detailed description of the sat encoding process for problems outlined above .",
    "basic idea that is used to encode many combinatorial problems to sat , including problems studied in our paper , is to represent the computation process for the considered discrete function ( in our case it is @xmath136 ) as a boolean circuit @xmath137 formed by logical gates from a complete basis ( for example @xmath138 ) .",
    "formally , circuit @xmath137 is a directed acyclic graph where @xmath7 nodes are labeled as inputs .",
    "all other nodes of this graph are called inner nodes .",
    "each inner node corresponds to logical gate from the chosen basis .",
    "usually , nodes that form the output of the considered function are referred to as output gates . in our case circuit",
    "@xmath137 has @xmath7 output gates .",
    "circuit inputs are labeled by boolean variables @xmath139 .",
    "below we refer to these variables as input variables .",
    "an output of each logical gate @xmath140 is marked by an auxiliary variable @xmath141 . by @xmath142",
    "we denote a set of @xmath7 variables corresponding to output gates .",
    "we refer to @xmath142 as output variables .",
    "let @xmath143 be the set of all auxiliary variables .",
    "then @xmath144 , @xmath145 . for circuit",
    "@xmath137 it is possible to effectively construct ( in linear time on the total number of nodes in the circuit ) a cnf @xmath146 .",
    "the corresponding procedure is based on the tseitin transformations @xcite .",
    "assume @xmath140 is an arbitrary gate in @xmath137 .",
    "if @xmath140 is a not - gate then it has a single input labeled by variable @xmath120 .",
    "then for not - gate @xmath140 we construct a formula @xmath147 where by @xmath148 we mean logical equivalence .",
    "cnf - representation of a boolean function specified by formula @xmath149 is @xmath150 if @xmath140 is an and - gate , and @xmath151 are variables corresponding to its inputs , then for @xmath140 we construct formula @xmath152 and cnf @xmath153    we say that cnfs constructed this way encode the corresponding logical gates . then the cnf encoding circuit @xmath137 is @xmath154 where @xmath155 is a cnf that encodes gate @xmath140 .",
    "once we have a cnf @xmath146 we can extend it by adding new constraints in the clausal form that specify function @xmath31 properties we are interested in . for example , a cnf @xmath156 in which @xmath157 , @xmath13 specifies a fixed point of function @xmath31 . to be more precise",
    ", cnf @xmath158 is satisfiable if and only if function @xmath31 has fixed points . if @xmath158 is satisfiable and its satisfying assignment is obtained , then we can effectively extract the corresponding fixed point : it is sufficient to write down values of the input variables . to make a sat instance that specifies the problem of finding a cycle of length @xmath25 we need to represent a superposition @xmath159 as a boolean circuit .    instead of logical gates",
    "we actually can use more complex basic boolean functions , such as predicates over finite sets . in this case elements of the corresponding sets",
    "are represented by boolean vectors .",
    "in fact this is what we do to encode functions @xmath136 for networks with weight functions and .",
    "now let us consider an sbn with @xmath7 vertices and weight functions that can have both instigators and loyalists .",
    "assume that the network is functioning for @xmath70 time moments .",
    "the decision of agent @xmath12 , @xmath13 at moment @xmath160 we encode with boolean variable @xmath161 .",
    "we would like to stress out once more that a priori we do not know dispositions of instigators and loyalists in the network and therefore presume that any agent can take one of these roles . to take into account that an arbitrary vertex @xmath12 can be either an instigator , a loyalist or a simple agent , we introduce two additional sets of boolean variables @xmath162 , @xmath163 .",
    "we assume that if @xmath164 , @xmath165 then @xmath12 is an instigator ; if @xmath166 , @xmath167 , then it takes the role of a loyalist ; if @xmath168 then our vertex represents a simple agent .",
    "the situation corresponding to @xmath169 would mean that the vertex is simultaneously an instigator and a loyalist .",
    "that is why it is forbidden by means of a clause @xmath170 .",
    "let @xmath12 be an arbitrary network vertex , @xmath171 and @xmath172 is conformity level of @xmath12 .",
    "we introduce the following predicate @xmath173    then from the above we can conclude that the decision of agent @xmath12 at moment @xmath4 is associated with the following formula : @xmath174 additional constraints on the initial network state are encoded in a similar fashion .",
    "for example a constraint that specifies that an arbitrary agent @xmath12 at the initial state is active only if it is an instigator is equivalent to satisfiability of the following formula : @xmath175 in fact , all clauses of the kind @xmath176 are added to the result cnf only once .    by applying tseitin transformations to formulas and we can produce cnfs that are satisfiable if and only if the original boolean formulas are satisfiable . to do this we need to be able to effectively encode predicate . it can be represented as a boolean circuit implementing a function that counts ones in a boolean vector and then compares the obtained result with @xmath172 .",
    "such circuit can then be encoded to cnf in accordance with the procedure described above . however , there are algorithms that produce more effective sat encodings for predicates .",
    "these algorithms are based on various methods that work with so called cardinality constraints ( @xcite ) . in the present paper",
    "we encode predicates using sorting networks .",
    "the main idea of the corresponding approach is very simple : we can sort bits in an arbitrary boolean vector @xmath177 descending from left to right , as we consider them as natural numbers from the set @xmath0 .",
    "let @xmath178 be a result of such sorting .",
    "then it is clear that @xmath179 , @xmath180 if and only if @xmath181 .",
    "essentially , in our work to sort boolean vectors we used binary variants of batcher sorting networks @xcite . sat encoding of such network with input @xmath177 and output @xmath182 requires @xmath183 auxiliary variables and @xmath183 clauses . sat encodings for the constraints that specify that after @xmath70 time moments the network must contain at least @xmath184 , @xmath185 active agents and the constraints of the kind @xmath186 , @xmath187 are produced in a similar way .",
    "it is easy to see that in the general case , if we encode the evolution of network @xmath11 with @xmath7 vertices during @xmath70 moments of time , then in the cnf obtained the number of variables and clauses will be upper - bounded by @xmath188 . taking into account the theorems proved above for the combinatorial problems considered we can study only cases when @xmath65 .",
    "we would like to briefly mention algorithms underlying the solvers that we have used to study the proposed models . as we said above",
    ", the book @xcite is probably the most complete source of information about the algorithms for solving sat .",
    "there are several classes of such algorithms and their effectiveness is justified by their ability to solve real practical problems . to solve sat",
    "instances encoding the combinatorial problems outlined above we used modern cdcl solvers , basic design features of which are described in @xcite .",
    "this choice is motivated first by the fact that cdcl solvers provide us with exact solutions , and , second , these particular algorithms successfully cope with many hard sat instances , for example , with instances that encode some cryptanalysis problems .",
    "in our computational experiments we constructed networks according to the known models of random graphs . in particular we used the gilbert model @xcite also known as the erdos - renyi model @xcite ( see also @xcite ) , the watts - strogatz model @xcite and the barabasi - albert model @xcite .",
    "informally the process of constructing tests for combinatorial problems outlined above for sbns in which simple agents are conformists ( tests for networks of anticonformists are generated in a similar way ) looks as follows .    1 .",
    "we generate a random oriented simple graph ( without loops and without multiple arcs ) with @xmath7 vertices , in the form of adjacency matrix where main diagonal is filled with zeros .",
    "2 .   for each of @xmath7 vertices",
    "we generate a conformity threshold that is randomly selected from @xmath189 $ ] according to the uniform distribution .",
    "3 .   for a fixed number of time moments",
    "@xmath70 we encode to sat the problem of search for a disposition of instigators with given constraints on their number .",
    "the cnf obtained is given to a sat solver .",
    "if the sat solver managed to solve the instance , before exceeding the time limit , and found a satisfying assignment , then for the instigators disposition obtained we encode a problem of search for a disposition of loyalists with given constraint on their number .",
    "the cnf obtained on the previous step is given to a sat solver .",
    "7 .   if the sat solver managed to solve the provided instance and found a satisfying assignment then a corresponding disposition of loyalists is extracted .",
    "now let us briefly describe random graph models that we used .",
    "in fact , original models generate undirected graphs , so we modified them to take into account all features of formulas and ( the neighborhood @xmath17 of vertex @xmath12 is formed by vertices in @xmath11 that have arcs going to @xmath12 ) .    when generating a graph according to the gilbert - erdyos - renyi model we fix a parameter @xmath190 $ ] that is a probability of an arc .",
    "then an arbitrary element @xmath191 , @xmath192 of an adjacency matrix of graph @xmath11 takes the value of @xmath1 with probability @xmath120 and the value of @xmath2 with probability @xmath193 .",
    "an important feature of the original watts - strogatz model is that random graphs generated according to this model have the small - world property that can often be observed in real world networks .",
    "the parameters of the watts - strogatz model include @xmath25 , @xmath194 and @xmath195 $ ] .",
    "first we generate a regular lattice network with @xmath7 vertices , where each vertex @xmath12 , @xmath34 is connected with an arc @xmath196 with @xmath197 vertices on either side of @xmath12 if @xmath25 is even .",
    "if @xmath25 is odd then we can consider @xmath198 and @xmath199 similar arcs @xmath196 .",
    "on the second stage of graph generation each arc @xmath196 with probability @xmath200 is rewired to @xmath201 , where @xmath91 is chosen according to the uniform distribution from some subset of @xmath202 in such a way that in the resulting graph there will be no loops and no multiple arcs .",
    "the barabasi - albert model is important because it allows one to generate random networks with scale - free property .",
    "the construction of a network according to the barabasi - albert model can be considered as an iterative process consisting of @xmath203 steps . on the step",
    "@xmath204 an initial network @xmath205 with @xmath206 vertices is built .",
    "the result of each step @xmath207 is the network @xmath208 which is constructed by adding to @xmath209 one new vertex @xmath210 connected to @xmath211 existing vertices of @xmath209 .",
    "the procedure of constructing edges @xmath212 , @xmath213 is probabilistic and is referred to as _",
    "preferential attachment_. according to this procedure for @xmath210 and an arbitrary @xmath213 the edge @xmath212 is added to @xmath208 with probability @xmath214 step @xmath207 lasts , i.e. the corresponding probabilistic experiments are repeated , until vertex @xmath210 is connected with @xmath184 vertices of the graph @xmath209 . in our experiments",
    "we use the following modification of the barabasi - albert model .",
    "an open cycle , i.e. a cycle in which an edge connecting the first and the last vertices is removed , is used as an initial network @xmath205 . on each step @xmath207 the probabilistic experiment is carried out for all pairs of the kind @xmath215 where @xmath213 , and as a result of the step new vertex @xmath210 is connected with @xmath216 existing vertices . in the final network every edge @xmath217 is replaced by a pair of arcs @xmath217 and @xmath218 .",
    "defining the conformity thresholds of agents in real networks is a highly nontrivial task and in each particular case it requires a thorough analysis of the corresponding specifics . since the main goal of our computational experiments was to test the general applicability of the sat approach to the study of the considered models , we chose conformity thresholds for each vertex randomly .    in the series of experiments we considered networks with 500 vertices .",
    "sat instances were solved using the plingeling sat solver @xcite working on 32 threads ( two 16-core amd opteron 6276 cpus with 64 gb ram ) .",
    "the corresponding results are shown in tables [ tab : ba - results ] , [ tab : ws - results ] and [ tab : gnp - results ] .",
    "below we demonstrate several figures that illustrate the dynamics of sbns with 30 vertices modeling the conforming behavior under the influence of instigators and loyalists . in figure [ bar30 ] the evolution of the network generated according to the barabasi - albert model is displayed . in figure",
    "[ ws30 ] we show that some networks ( the particular network displayed was generated in accordance with the watts - strogatz model ) are highly vulnerable to the influence of instigators . for the network shown it",
    "is sufficient to place one instigator to activate the whole network in @xmath219 steps . however , it is possible to find such disposition of @xmath220 loyalists that transforms the network to a state with the majority of inactive agents .",
    "intuitively , one of the most natural strategies of constructing dispositions of instigators is to place them into vertices with the largest number of outgoing arcs . in figure [ gnp30 ] (",
    "the network is generated according to the erdos - renyi model ) we show , that even if we forbid instigators to replace agents with the most advantageous positions ( in the sense explained above ) , that does not exclude the existence of other possible variants of dispositions of instigators that transform the network into states with the majority of active agents .",
    "the corresponding constraints that forbid instigators and loyalists to take place of particular vertices are quite easily encoded into sat .",
    "also we considered optimization variants of * problem1 * and * problem2 * , i.e. to find corresponding dispositions of instigators and loyalists of a minimal cardinality .",
    "these problems can also be effectively reduced to sat using techniques described above . on the current stage we managed to solve corresponding problems for networks with 100  150 vertices .    .",
    "* results of the computational experiments for barabasi - albert networks with 500 vertices * [ cols=\"^,^,^,^,^\",options=\"header \" , ]     results of the computational experiments for erdos - renyi networks , averaged for 10 tests ( for each value of parameter @xmath120 ) . * pr1 * and * pr2 * stand for * problems 1 * and * 2 * of finding dispositions of at most 50 instigators and at most 100 loyalists , respectively .",
    "[ tab : gnp - results ]    in tables [ tab : ba - results ] , [ tab : ws - results ] and [ tab : gnp - results ] we present the information about the size of encodings and about the time required to solve * problems 1 * and * 2 * on determining dispositions of instigators or loyalists .",
    "we considered networks with 500 vertices .",
    "for each value of parameter @xmath120 in case of erdos - renyi networks , combination of values of @xmath200 and @xmath25 in case of watts - strogatz networks , and @xmath184 in case of barabasi - albert networks we generated 10 different tests .",
    "note , that solving time can greatly vary even within one test series ( for a particular random graph model ) . from our point of view",
    "it can be explained by the fact that sometimes randomly generated tests are very hard for the particular sat solver because of heuristics used , while the majority of such tests are solved relatively fast .      in the present paper",
    "we introduce the models of collective behavior , that are based on the synchronous boolean networks , and study several phenomena related to conformity and anticonformity . in the context of the proposed models we formulate several combinatorial problems related to the search for dispositions of agents with special properties ( instigators and loyalists ) in a network . to these combinatorial problems we applied modern algorithms for solving the boolean satisfiability problem ( sat ) .",
    "we do not pretend that the results of our paper can be directly applied to practice since all computational experiments were performed for artificially generated networks with a random structure .",
    "however , our main goal was to show the principal possibility of solving corresponding combinatorial problems for networks with hundreds of vertices .",
    "we believe that the use of various sat parallelization techniques will make it possible to develop our approach in such a way that it will be applicable to networks with 1000 and more vertices .",
    "the corresponding methods will be useful in the study of networks that represent strongly connected components extracted from the real world networks with a much greater number of vertices .",
    "the vulnerability of such strongly connected components to instigators in our opinion can have highly undesirable consequences for the corresponding large networks . to extract strongly connected components from real world networks",
    ", one can use methods from @xcite .",
    "as we mentioned above , determining correct thresholds is probably the hardest stage of construction of any collective behavior model . in our experiments we generated such thresholds randomly . to study real world processes this task",
    "should be performed by a specialist in a relevant field of science ( such as economy , biology , sociology , psychology , etc . ) .",
    "unfortunately we could not obtain the results similar to theorems 1 and 3 for the networks , in which simple agents are represented both by conformists and anticonformists . in figure [ mixedcycle ]",
    "we show how such network starting from the state in which all simple agents are inactive enters the cycle of length 4 .",
    "it means that these networks display more complex behavior than that described by theorems 1 and 3 .",
    "also it should be noted that the key condition in theorems 1 and 3 is that all simple agents must be either all inactive or all active at the initial time moment .",
    "if we drop this condition , the corresponding networks can display the behavior different from that described by theorems 1 and 3 .",
    "for example in figure [ cycle2 ] we demonstrate the cycle of length @xmath221 for the network with instigators , where all simple agents are conformists , but at the initial state there are both active and inactive simple agents .",
    "we would like to note that for the models proposed it is possible to study more complex dynamical properties using the formalism of quantified boolean formulas with two quantification levels ( 2qbf ) @xcite .",
    "suppose that @xmath222 is a disposition of instigators and @xmath223 is a disposition of loyalists .",
    "then , for example , the condition that there exists such disposition of instigators , that for any disposition of loyalists the network , starting from the state with inactive simple agents , after several time moments transitions to a state in which almost all simple agents are active , can be described using the 2qbf of the following kind : @xmath224 this condition can be considered as an improved variant of condition describing the vulnerability of the network to instigators .",
    "to solve such problems one can use modern 2qbf - solvers @xcite , @xcite .",
    "we can also take into account any constraints on the cardinality of @xmath222 and @xmath223 .    finally , one natural extension of the proposed models is to assign various types of weights to network arcs and modify vertex weight functions accordingly .",
    "arc weights can represent social pressure , authority , etc .",
    "for each particular member of a collective .",
    "in addition to that , it would be interesting to study the dynamics of networks in which weight function of a vertex can take into account the influence of vertices that are at a distance @xmath225 in @xmath11 from the vertex considered .",
    "all the listed aspects can be quite easily implemented into corresponding sat encodings .",
    "we plan to do it in the nearest future .",
    "we are thankful to ilya otpuschennikov for his help with constructing sat encodings of the considered problems .",
    "we express our deep gratitude to a.a .",
    "evdokimov for attracting our attention to the study of dynamical properties of discrete automaton functions .",
    "it is the development of early ideas from @xcite that led us to the results of the present paper .",
    "tseitin gs ( 1983 ) on the complexity of derivation in propositional calculus . in : siekmann j , wrightson g , editors ,",
    "automation of reasoning 2 : classical papers on computational logic 1967 - 1970 , berlin , heidelberg : springer .",
    "466 - 483 .",
    "sinz c ( 2005 ) towards an optimal cnf encoding of boolean cardinality constraints . in : van",
    "beek p , editor , principles and practice of constraint programming - cp 2005 , springer berlin heidelberg , volume 3709 of _ lecture notes in computer science_. pp .",
    "827 - 831 .",
    "bailleux o , boufkhad y ( 2003 ) efficient cnf encoding of boolean cardinality constraints . in : rossi f , editor , principles and practice of constraint programming ",
    "cp 2003 , springer berlin heidelberg , volume 2833 of _ lecture notes in computer science_. pp .",
    "108 - 122 ."
  ],
  "abstract_text": [
    "<S> in this paper , we propose an approach for modeling and analysis of a number of phenomena of collective behavior . by collectives we mean multi - agent systems that transition from one state to another at discrete moments of time . </S>",
    "<S> the behavior of a member of a collective ( agent ) is called conforming if the opinion of this agent at current time moment conforms to the opinion of some other agents at the previous time moment . </S>",
    "<S> we presume that at each moment of time every agent makes a decision by choosing from the set @xmath0 ( where @xmath1-decision corresponds to action and @xmath2-decision corresponds to inaction ) . in our approach </S>",
    "<S> we model collective behavior with synchronous boolean networks . </S>",
    "<S> we presume that in a network there can be agents that act at every moment of time . </S>",
    "<S> such agents are called instigators . </S>",
    "<S> also there can be agents that never act . </S>",
    "<S> such agents are called loyalists . </S>",
    "<S> agents that are neither instigators nor loyalists are called simple agents . we study two combinatorial problems . </S>",
    "<S> the first problem is to find a disposition of instigators that in several time moments transforms a network from a state where a majority of simple agents are inactive to a state with a majority of active agents . </S>",
    "<S> the second problem is to find a disposition of loyalists that returns the network to a state with a majority of inactive agents . </S>",
    "<S> similar problems are studied for networks in which simple agents demonstrate the contrary to conforming behavior that we call anticonforming . </S>",
    "<S> we obtained several theoretical results regarding the behavior of collectives of agents with conforming or anticonforming behavior . in computational experiments we solved the described problems for randomly generated networks with several hundred vertices . </S>",
    "<S> we reduced corresponding combinatorial problems to the boolean satisfiability problem ( sat ) and used modern sat solvers to solve the instances obtained . </S>"
  ]
}
{
  "article_text": [
    "_ program title : _ ` mnpbem ` toolbox + _ programming language : _ matlab 7.13.0 ( r2011b ) + _ computer : _ any which supports matlab 7.13.0 ( r2011b ) + _ operating system : _ any which supports matlab 7.13.0 ( r2011b ) + _ ram required to execute with typical data : _",
    "@xmath0 gbyte + _ has the code been vectorised or parallelized ? : _",
    "yes + _ keywords : _ plasmonics , boundary element method , substrates and layer structures + _ cpc library classification : _ optics + _ external routines / libraries used : _ no + _ nature of problem : _ simulation of plasmonic nanoparticles placed on substrates or within layer structures + _ solution method : _ boundary element method using electromagnetic potentials + _ running time : _ depending on surface discretization between seconds and hours +",
    "plasmonics provides an ideal tool for light confinement at the nanoscale  @xcite .",
    "a light wave excites coherent charge oscillations at the interface between metallic nanoparticles and a surrounding medium , so - called _ surface plasmons _ , which come together with strongly localized , evanescent fields . in a reversed process ,",
    "quantum emitters such as molecules or quantum dots , located in the vicinity of plasmonic nanoparticles , couple to the evanescent fields and thereby use the nanoparticles as nano antennas to emit radiation more efficiently @xcite .",
    "possible plasmonics applications range from photovoltaics , over sensorics and metamaterials , to optical and quantum - optical information processing @xcite .    the simulation of plasmonic nanoparticles deals with the solution of maxwell s equations . for this reason ,",
    "most of the simulation software builds on general maxwell solvers such as the dyadic green function technique @xcite , the finite difference time domain ( fdtd ) @xcite , the discontinuous galerkin time - domain ( dgtd ) @xcite , or the discrete dipole approximation ( dda ) @xcite methods .",
    "another computational scheme is the boundary element method ( bem ) @xcite , which is based on the assumption that the plasmonic nanoparticles consist of materials with homogeneous and isotropic dielectric functions separated by abrupt interfaces .    in the last couple of years",
    "we have developed a matlab toolbox mnpbem for the simulation of plasmonic nanoparticles using the bem approach @xcite .",
    "this toolbox has been successfully employed by us and other groups .",
    "it includes plane wave excitation and the computation of scattering , extinction , and absorption cross sections , as well as dipole excitations together with the computation of total and radiative scattering rates .",
    "this allows one to compute the dyadic green function or the photonic local density of states .",
    "additionally , we provide classes for the simulation of electron energy loss spectroscopy ( eels ) of plasmonic nanoparticles @xcite .    in this paper",
    "we discuss a new version of the mnpbem toolbox which allows for the simulation of plasmonic nanoparticles located in layer structures .",
    "indeed , many experiments are performed with nanoparticles situated on top of a substrate or embedded inside a layer structure , which calls for the possibility to perform corresponding simulations .",
    "unfortunately , for the potential - based bem approach of garca de abajo and coworkers @xcite it has been unclear whether and how layer effects can be included . in this paper",
    "we develop the methodology for bem simulations including layer effects , and present a fast and flexible implementation within the mnpbem toolbox .",
    "-values of the layer interfaces .",
    "( b ) next , we define a grid for the tabulation of the reflected green functions . with the command ` tabspace(layer , p , pt ) ` we automatically generate the grids for a ` comparticle ` object ` p ` and an additional ` compoint ` object ` pt ` .",
    "the latter points allow us to compute electromagnetic fields within the grid ranges .",
    "( c ) we finally set up an object ` compgreentablayer ` for the tabulated green functions .",
    "once the layer structure is defined and the table of green functions is pre - computed , bem simulations can be performed as previously described for the mnpbem toolbox without layer structures @xcite . ]    to speed up the simulations , we compute at the beginning of each simulation a table of reflected green functions which is then used for interpolation . to include layer structure effects in plasmonics simulations , one must only define a few additional things in comparison to mnpbem simulations of nanoparticles embedded in a homogeneous dielectric background ( see fig .",
    "[ fig : layerstructure ] ) :    1 .",
    "first , one defines the layer structure .",
    "the user must provide a table of dielectric functions , an index array that points to the materials of the different layers , and the positions of the layer interfaces .",
    "2 .   with this layer structure",
    "one defines a grid on which the tabulated green functions are computed .",
    "the toolbox provides functions for setting up these grids either automatically ( as we recommend ) or manually .",
    "3 .   in the next step one",
    "sets up a table for reflected green functions and computes them for various wavelengths .",
    "the underlying computation requires the evaluation of sommerfeld - type integrals @xcite , and is often rather slow .",
    "4 .   once the layer structure and the tabulated green functions are computed , one can run the bem simulations as previously described @xcite .",
    "we have organized this paper as follows . in sec .",
    "[ sec : start ] we discuss how to install the toolbox and give a few examples for plasmonics simulations with layer structures .",
    "the methodology underlying our approach is presented in sec .",
    "[ sec : theory ] and details about our implementation are given in sec .",
    "[ sec : implementation ] . in sec .",
    "[ sec : testing ] we present a number or representative examples and compare our toolbox implementation with other approaches .",
    "finally , we summarize our approach in sec .  [ sec : summary ] .",
    "to install the toolbox , one must simply add the path of the main directory ` mnpbemdir ` of the ` mnpbem ` toolbox as well as the paths of all subdirectories to the matlab search path .",
    "this can be done , for instance , through    addpath(genpath(mnpbemdir ) ) ;    to set up the help pages , one must once change to the main directory of the mnpbem toolbox and run the program ` makemnpbemhelp `    > > cd mnpbemdir ; > > makemnpbemhelp ;    once this is done , the help pages , which provide detailed information about the toolbox , are available in the matlab help browser .",
    "the help pages can be found on the start page of the help browser under _ supplemental software_. the toolbox is similar to our previously published versions  @xcite but with a few modifications discussed in the following .",
    "we first describe how to compute the scattering spectra for a sphere embedded in a homogeneous dielectric environment .",
    "op = bemoptions ( sim , ret ) ; epstab = epsconst ( 1 ) , epstable ( gold.dat ) ; p = comparticle ( epstab , shift ( trisphere ( 144 , 20 ) , [ 0 , 0 , 15 ] , [ 2 , 1 ] , 1 , op ) ;    in the first command line we set up an options structure and define that we want to perform a _ retarded _ simulation using the full maxwell equations . in the second command line",
    "we define a table of dielectric functions , consisting of air ( @xmath1 ) and a dielectric function representative of gold  @xcite .",
    "finally , we set up a ` comparticle ` object that defines the dielectric environment .",
    "we define one boundary of spherical shape , with 144 vertices and a diameter of 20 nm , which is shifted into the upper half space ( this has no effect for a sphere embedded in a homogeneous background , but will be important for layer structures ) .",
    "the ` [ 2,1 ] ` parameter indicates that the material _ inside _ the boundary is ` epstab{2 } ` , and the _ outside _ material is ` epstab{1 } ` .",
    "we finally indicate that the nanosphere has a closed boundary and pass the options structure ` op ` that controls the integration over boundary elements .",
    "a more detailed description of the toolbox syntax has been given elsewhere @xcite and can be also found in the help pages of the toolbox .",
    "lrx demo program & runtime & description + ` demospecstat10.m ` & 4 sec & light scattering of metallic nanosphere above substrate + ` demospecstat11.m ` & 4 sec & field enhancement for metallic sphere above substrate + ` demospecstat12.m ` & 8 sec & light scattering of nanodisk above substrate + ` demospecstat13.m ` & 13 sec & field enhancement for metallic disk above substrate + & & + ` demospecret6.m ` & 30 sec & light scattering of metallic nanosphere above substrate + ` demospecret7.m ` & 40 sec & field enhancement of metallic nanosphere above substrate + ` demospecret8.m ` & 1 min & scattering spectra for metallic nanodisk on substrate + ` demospecret9.m ` & 40 sec & scattering spectra for substrate using parfor loop + ` demospecret10.m ` & 47 sec & nearfield enhancement for metallic nanodisk on substrate + ` demospecret11.m ` & 2 min & scattering spectra for two nanospheres in layer + ` demospecret12.m ` & 1 min & nearfield enhancement for two nanospheres in layer + ` demospecret13.m ` & 8 min & spectra for metallic nanodisk approaching substrate + ` demospecret14.m ` & 15 min & spectra for metallic nanodisk on top of substrate + & & + ` demodipstat5.m ` & 8 sec & lifetime reduction for dipole between sphere and layer + ` demodipstat6.m ` & 22 sec & electric field for dipole between sphere and layer + ` demodipstat7.m ` & 36 sec & photonic ldos for nanodisk above layer + ` demodipstat8.m ` & 23 sec & electric field for dipole close to nanodisk and layer + ` demodipret8.m ` & 24 sec & lifetime reduction for dipole between sphere and layer + ` demodipret9.m ` & 50 sec & electric field for dipole between sphere and layer + ` demodipret10.m ` & 7 min & photonic ldos for nanodisk above layer + ` demodipret11.m ` & 32 sec & electric field for dipole close to nanodisk and layer +    once we have defined the dielectric environment , we can compute the scattering cross sections for different wavelengths ` enei ` and plot them    bem = bemsolver ( p , op ) ; exc = planewave ( [ 1 , 0 , 0 ] , [ 0 , 0 , -1 ] , op ) ; enei = linspace ( 400 , 900 , 40 ) ; sca = zeros ( size ( enei ) ) ;    for ien = 1 : length ( enei ) sig = bem  exc ( p , enei ( ien ) ) ; sca ( ien , : ) = exc.sca ( sig ) ; end    plot ( enei , sca , o- ) ; hold on ;    xlabel ( wavelength ( nm) ) ; ylabel ( scattering cross section ( nm^2) ) ;    figure  [ fig : simple](a ) shows the scattering spectra together with the corresponding mie solutions .",
    "we note that in comparison to the previous versions of the toolbox , we have now introduced wrapper functions ` bemsolver ` and ` planewave ` that select from the options structure the appropriate bem solvers and excitation classes .",
    "the above example has to be only slightly modified for a simulation where the nanosphere is located above a substrate .",
    "first we set up the layer structure    epstab = epsconst ( 1 ) , epstable ( gold.dat ) , epsconst ( 2.25 ) ; layer = layerstructure ( epstab , [ 1 , 3 ] , 0 ) ; op = bemoptions ( sim , ret , layer , layer ) ;    in the first command line we add an additional dielectric constant for glass to ` epstab ` .",
    "next , we define a layer structure with the table of dielectric functions .",
    "the second index argument ` [ 1,3 ] ` indicates that the layer structure consists of two dielectric materials , the upper one is ` epstab{1 } ` and the lower one is ` epstab{3 } ` .",
    "finally , with the third input argument the layer interface is set to @xmath2 .",
    "once the layer structure is defined , we must add it to the options structure .",
    "an essential ingredient of bem simulations with layer structures is the computation of reflected green functions . within the mnpbem toolbox",
    ", we compute at the beginning of the simulation a table of reflected green functions , which is then added to the options structure    tab = tabspace ( layer , p ) ; greentab = compgreentablayer ( layer , tab ) ; greentab = set ( greentab , enei , op ) ; op.greentab = greentab ;    the meaning of the various command lines will be discussed in depth in the following sections and in the help pages of the toolbox . in short",
    ", we first set up a grid ` tab ` for the tabulated green function .",
    "next , we set up a ` compgreentablayer ` object that holds the tabulated green functions , and compute them through the ` set ` command . once the reflected green function table is computed , we add it to the options structure .    the remaining simulation is identical to the one without layer structure . figure  [ fig : simple](b ) compares the scattering spectra without and with substrate .",
    "the mnpbem toolbox comes together with a number of demo files which are briefly described in table  [ table : examples ] .",
    "we recommend to work through these demo files and to use them as templates for further simulations .",
    "we start by briefly reviewing the bem approach developed by garca de abajo and coworkers @xcite we consider dielectric nanoparticles , described through local and isotropic dielectric functions @xmath3 , which are separated by sharp boundaries @xmath4 . throughout , we set the magnetic permeability @xmath5 and consider maxwell s equations in frequency space @xmath6 @xcite ( we adopt a gaussian unit system ) .",
    "the basic ingredients of the bem approach are the scalar and vector potentials @xmath7 and @xmath8 , which are related to the electromagnetic fields via @xmath9 here @xmath10 and @xmath11 are the wavenumber and speed of light in vacuum , respectively .",
    "the potentials are connected through the lorentz gauge condition @xmath12 . within each medium , we introduce the green function for the helmholtz equation defined through @xmath13 with @xmath14 being the wavenumber in the medium @xmath15 . for an inhomogeneous dielectric environment , we then write down the solutions of maxwell s equations in the _ ad - hoc _ form @xcite    [ eq : adhoc ] @xmath16    where @xmath17 and @xmath18 are the scalar and vector potentials characterizing the external perturbation ( e.g. , plane wave or oscillating dipole ) within a given medium @xmath19 . owing to eq .",
    ", these expressions fulfill the helmholtz equations everywhere except at the particle boundaries . @xmath20 and @xmath21 are surface charge and current distributions , which are chosen such that the boundary conditions of maxwell s equations at the interfaces between regions of different permittivities @xmath22 hold .    in",
    "what follows , we introduce in accordance to refs .",
    "@xcite matrix notations of the form @xmath23 instead of the integration given in eq .  .",
    "this also allows us to immediately change to a boundary element method ( bem ) approach , where the boundary is split into elements of finite size suitable for a numerical implementation . with @xmath24 and @xmath25 denoting the surface charges and currents at the particle _ insides _ , and @xmath26 and @xmath27 the corresponding quantities at the particle _ outsides _ , we obtain from the continuity of the scalar and vector potentials at the particle boundaries the expressions @xmath28 from the continuity of the lorentz gauge condition and the dielectric displacement at the particle boundary , we get    [ eq : continuity2 ] @xmath29\\,,\\qquad\\label{eq : contdisp}\\end{aligned}\\ ] ]    where @xmath30 is the outer surface normal of the boundary @xmath31 , and we have introduced the surface derivatives of the green function @xmath32 .",
    "eqs .   and",
    "form a set of four coupled equations that can be solved within a boundary element method ( bem ) approach in order to obtain the surface charges and currents , which provide a unique solution for the problem under study @xcite .",
    "suppose that we have a substrate or layer structure where the outer surface normals point in @xmath33-direction .",
    "inspection of eq .",
    "reveals that in this case ( i ) the parallel component of @xmath34 does not couple with @xmath35 and @xmath36 , and ( ii ) @xmath35 and @xmath36 become coupled through layer interactions .",
    "this forms the basis of the bem equations for layer structures .",
    "first , we rewrite eqs .   and for a layer structure .",
    "secondly , we express @xmath34 in terms of @xmath35 and @xmath36 .",
    "finally , we set up the coupled equations for @xmath35 and @xmath36 and solve them within a boundary element method approach through matrix inversion .",
    "contrary to the bem approach without layer structures , which only deals with matrices of order @xmath37 of the number of boundary elements , the bem approach with layer structures deals with matrices of the order @xmath38 .",
    "we consider a nanoparticle located in the dielectric environment of a layer structure and assume that all boundary elements connected to the layer structure are _ outer _ elements ( defined with respect to the surface normals and indicated with 2 ) . in the spirit of ref .",
    "@xcite , the potentials _ inside _ the nanoparticle can still be expressed in the ad - hoc form of eq .  .",
    "for the boundary elements _ outside _ the nanoparticle , we ( i ) have to replace @xmath39 by the green function for the layer structure and ( ii ) have to account for the fact that @xmath40 and @xmath26 become coupled , @xmath41 we will show in sec .",
    "[ sec : refl ] how to compute the various reflected green functions .",
    "next , we re - derive the bem equations of the previous section for layer structures .",
    "the continuity of the potentials now becomes    [ eq : continuity3 ] @xmath42    the continuity of the lorentz condition reads    [ eq : continuity4 ] @xmath43    and the continuity of the dielectric displacement becomes @xmath44 the set of eqs .",
    "( [ eq : continuity3][eq : continuity5 ] ) now has to be solved to obtain the surface charges and currents . in order to obtain the @xmath45 matrices in case of an arbitrary number of media .",
    "such exchange is possible because @xmath46 only connects points within the same medium . for layer structures ,",
    "this exchange is no longer allowed since the reflected green functions can connect points in different layers and different media .",
    "the generalization to arbitrary number of media is still possible for layer structures , but @xmath47 has to be interpreted as a diagonal matrix and @xmath46 and @xmath48 must not be exchanged .",
    "] after some rearrangements , outlined in [ sec : working ] , we arrive at the working equations for bem with layer structures    [ eq : working ] @xmath49    with @xmath50 .",
    "the set of equations ( [ eq : working]a , b ) can be interpreted as a matrix equation for @xmath51 which is solved through matrix inversion . once @xmath26 and @xmath40 are obtained",
    ", we get @xmath52 through the solution of eq .   and @xmath24 , @xmath25 through the solution of eq .",
    "the working equations of eq .",
    "are somewhat more complicated than those of the original bem approach @xcite , but still provide a numerically tractable approach .",
    "the green functions @xmath53 , @xmath54 , @xmath55 , @xmath56 , and @xmath57 are essential ingredients of the bem approach for layer structures .",
    "they are computed similarly to related field - based approaches @xcite .",
    "consider a boundary element with surface charges @xmath36 and currents @xmath58 within a layer structure .",
    "@xmath36 and @xmath58 lead to potentials @xmath59 and @xmath60 impinging at the interfaces of the layer structure . in accordance to field - based approaches , we ( i ) expand the scalar and vector potentials originating from the source points in cylinder waves , ( ii ) compute the surface charges and currents at the interfaces by using the bem equation ( this step is similar to obtaining the fresnel reflection and transmission coefficients ) , and ( iii ) finally compute the potentials at the observation points by integrating over all cylinder waves .",
    "in step ( i ) we employ the usual sommerfeld identity  @xcite @xmath61 with the wavevector @xmath62 decomposed into radial component @xmath63 and @xmath33-component @xmath64 .",
    "@xmath65 is the bessel function of order zero .",
    "the wave @xmath66 impinging at the interface becomes reflected and transmitted , and in step ( iii ) we have to sum over all reflected and transmitted waves @xmath67 where @xmath68 is a generalized reflection or transmission coefficient to be discussed below . to evaluate the integral of eq .",
    "we directly follow ref .",
    "@xcite and deform the integration path in the complex plane using the recipes given in this paper .    to compute the bem reflection and transmission coefficients for the layer structure",
    ", we proceed as follows .",
    "consider a layer structure with interfaces at @xmath69 .",
    "we denote the medium _ above _ the layer with @xmath70 and the medium _ below _ the layer with @xmath71 .",
    "thus , @xmath5 denotes the uppermost medium .",
    "we assume that the outer surface normal points into the positive @xmath33-direction , and denote the surface charges and currents at the upper side of @xmath69 with @xmath72 and @xmath73 , and at the lower side of @xmath69 with @xmath74 and @xmath75 .",
    "additionally , we introduce the intralayer green functions @xmath76 that connect points in layer @xmath69 and in medium @xmath70 , and interlayer green functions @xmath77 that connect points between different layers in medium @xmath70 .",
    "let @xmath78 and @xmath79 denote the external excitations described by scalar and vector potentials , respectively .    as the bem equations ( [ eq : continuity1],[eq : continuity2 ] ) decouple @xmath34 from @xmath36 , @xmath35 , we can treat excitations @xmath80 and @xmath81 , @xmath82 separately . for parallel excitations @xmath79 , we obtain the following set of equations for the parallel surface currents @xmath83    [ eq : parallel ] @xmath84    which can be solved for each wavevector through matrix inversion . for a perpendicular vector potential @xmath85 or a scalar potential @xmath78",
    "the bem equations become    [ eq : perp ] @xmath86    equations and can be used to compute the reflected green functions for layer structures .",
    "for instance , to compute @xmath87 we consider an exciting scalar potential , produced by a surface charge @xmath36 at the source point , and compute the perpendicular component of the vector potential produced by the induced surface current distribution @xmath88 at the observation point . as the solutions of eqs .   and involve the inversion of matrices of low order ( number of layer media multiplied with two or four ) , this computation is extremely fast .",
    "in this section we describe how simulations with layer structures have been implemented within the mnpbem toolbox .      to set up a layer structure , one must provide a table of dielectric functions ( the _ same _ table ` epstab ` as used in the initialization of ` comparticle ` objects ) , the interface positions ` ztab ` , and an index array ` ind ` that points to the different media in descending order . `",
    "epstab{ind(1 ) } ` is the dielectric function of the uppermost medium above ` ztab(1 ) ` , ` epstab{ind(2 ) } ` is the dielectric function for the next medium , and so forth . with these arrays",
    ", we set up a layer structure with    op = layerstructure.options ( rmin , 1e-2 ) ; layer = layerstructure ( epstab , ind , ztab , op ) ;    ` op ` is an options structure with the following fields :    : :    ` ztol ` ( default value ` 0.02 ` ) boundary elements located closer than    ` ztol ` to the layer interfaces are assumed to belong to the layer , see    discussion below .",
    ": :    ` rmin ` ( default value ` 0.01 ` ) minimum radial distance for the    evaluation of the reflected green functions .",
    ": :    ` zmin ` ( default value ` 0.01 ` ) minimum @xmath33-value for the    evaluation of the reflected green functions .",
    ": :    ` semi ` ( default value ` 0.1 ` ) ratio of semi - axes    @xmath89 for the integration in    the complex plane , as described in ref .  @xcite .",
    ": :    ` ratio ` ( default value ` 2 ` ) ratio @xmath90 which determines    whether an integration with bessel or hankel functions is performed ,    as described in ref .",
    ": :    ` op ` additional options passed to the matlab ` ode45 ` integration    routine for the evaluation of the sommerfeld integrals in the complex    plane .",
    "the ` layerstructure ` class has several functions for the evaluation of the reflected green functions .",
    "more details can be found by typing    > > doc layerstructure    at the matlab prompt or by consulting the help pages of the toolbox .",
    "once the layer structure is defined , it must be added to the options structure    op.layer = layer ;      quite generally , the evaluation of the reflected green functions is rather time consuming and in many cases constitutes a serious bottleneck for bem simulations . in order to speed up the simulations , in the mnpbem toolbox we first set up a table of reflected green functions , using a suitable grid for",
    "the different radii @xmath91 and @xmath33-values , and then perform an interpolation .",
    "the reflected green functions depend on @xmath92 , where @xmath91 is the radial distance between the observation and source point , @xmath93 is the @xmath33-value of the observation point , and @xmath94 is the @xmath33-value of the source point . for the uppermost or lowermost medium the green functions only depend on @xmath95 @xcite , which allows for an additional speedup . within our bem approach ,",
    "we additionally need the derivatives @xmath96 and @xmath97 for the evaluation of @xmath98 , see eq .  . instead of directly interpolating @xmath39 , @xmath99 , and @xmath100 ,",
    "we assume a functional dependence of the form @xmath101 where @xmath102 is the sum of the @xmath93 and @xmath94 distances to the respective closest layer interfaces , @xmath103 , and @xmath104 , @xmath105 , @xmath106 are tabulated values .",
    "eq .   has the advantage that for small @xmath91 and @xmath33-values the functional shape is the same as for quasistatic green functions using image charges @xcite , and we expect that for layer structures @xmath104 , @xmath105 , and @xmath106 in general have only a weak spatial dependence , as also confirmed by our test simulations .    to set up the table of reflected green functions , we need to define a grid for the tabulated @xmath91 , @xmath93 , and @xmath94 values",
    ". this can be either done automatically ( as we recommend ) or manually . through    tab",
    "= tabspace ( layer , p ) ; tab = tabspace ( layer , p , pt ) ; tab = tabspace ( layer , p , nr , nr , nz , nz ) ;    we set up an automatic grid with logarithmic spacings .",
    "alternatively , one can also set up a structure    tab = struct ( r , rtab , z1 , z1tab , z2 , z2tab ) ;    the minimal ` rtab ` and ` ztab ` values should be equal to the ` layer.rmin ` and ` layer.zmin ` values .",
    "it is important that ` tab ` only connects points within a single layer medium . for points located in different media , one must provide an array of ` tab ` values , as produced automatically with the calling sequence involving ` p ` and ` pt ` ( see also help pages for a more detailed description ) .    ) .",
    "for the dda  si simulation we use 1472 dipoles , for the bem simulation we use the sphere discretization ` trisphere(625,50 ) ` with 1246 boundary elements . in @xcite the authors additionally compared their results with fdtd simulations , finding perfect agreement for the entire wavelength regime . ]    once the grid is defined , one can precompute the green function table and add it to the options structure    greentab = compgreentablayer ( layer , tab ) ; greentab = set ( greentab , enei , op ) ; op.greentab = greentab ;    depending on the grid size and the layer structure , the ` set ` call can be rather time - consuming .",
    "for this reason , we recommend to compute the table only if it has not been computed before .",
    "quite generally , a ` greentab ` table with proper grid size can be used for various simulations sharing the same layer structure .",
    "one may thus consider saving it on the hard disk .",
    "the toolbox has a ` layerstructure / ismember ` function that checks whether a previously computed green function table is compatible with other simulations .",
    "we also provide a parallel version ` parset ` for precomputation .",
    "more details about these features can be found in the toolbox help pages .    ) ` and the substrate interface is located at @xmath2 . for the nanodisk we use",
    "` tripolygon(poly , edge ) ` with ` poly = polygon(30,size,[6,6 ] ) ` and ` edge = edgeprofile(1,11,min,0.5 ) ` , and for the nanotriangle ` poly = round(polygon(3,size,[8,8 * 2/sqrt(3 ) ] ) ) ` .",
    "the gold dielectric function is taken from @xcite .",
    "the cross sections of the sphere and disk are multiplied by factors of 100 and 10 , respectively . in the inset",
    "we show the contours for the disk and triangle , respectively . ]",
    "once the direct and reflected green functions have been computed they can be directly used for the solution of the bem equations .",
    "there is one critical issue regarding boundary elements that are directly located on an interface . before pondering on such interface elements",
    ", we recall that in the normal bem approach one has to be careful when computing the surface derivative of the green function for diagonal elements  @xcite @xmath107 where the sign of the singular term depends on whether @xmath108 approaches @xmath109 from the inside or outside .",
    "inspection of eq",
    ".   shows that a similar singular contribution shows up in the reflected green function for elements belonging to an interface . within the toolbox , boundary elements of ` p ` must be located either slightly above or below the interface . if the centroid position ` p.pos ` is closer than ` layer.ztol ` to the interface , the program assumes that it belongs to the interface .",
    "the surface derivative @xmath100 of the reflected green function is now split into two contributions ( note that @xmath30 points into the @xmath33-direction ) @xmath110 where @xmath111 .",
    "when approaching the boundary through @xmath112 , the first term gives a singular contribution @xmath113 , similarly to eq .",
    ", whereas the second term has a smooth @xmath91 and @xmath33 dependence and can be safely integrated over the boundary element .",
    ") and for a gold nanodisk ( diameter 60 nm , height 10 nm ) that approaches a substrate with a refractive index of 1.5 ( glass ) .",
    "we produce the disk with ` tripolygon(poly , edge ) ` , where ` poly = polygon(30,size,[60,60 ] ) ` and ` edge = edgeprofile(10,11,mode,01 ) ` .",
    "we also compare the situation where the disk is slightly above the substrate ( 0.1 nm , refined particle integration with ` refine=3 ` and ` npol=40 ` ) and the situation where the disk is located on top of the substrate , see text around eq .   for a discussion .",
    "( b ) scattering spectra for disk on substrate and for different simulation scenarios . ` sim1 ` is the same simulation as the ` on subs ` simulation in panel ( a ) . in ` sim2 ` we use through ` edgeprofile(10,25 ) ` a higher number of discretization points in @xmath33-direction , and in ` sim3 ` we use through ` polygon(51,size,[60,60 ] ) ` a higher number of discretization points for the nanodisk plates . finally , in ` sim4",
    "` we place the lower disk plate slightly _ below _ the substrate .",
    "all simulations give very similar results , thus demonstrating the stability and accuracy of our approach .",
    "computer runtimes are on the order of a few minutes.,title=\"fig : \" ] ) and for a gold nanodisk ( diameter 60 nm , height 10 nm ) that approaches a substrate with a refractive index of 1.5 ( glass ) .",
    "we produce the disk with ` tripolygon(poly , edge ) ` , where ` poly = polygon(30,size,[60,60 ] ) ` and ` edge = edgeprofile(10,11,mode,01 ) ` .",
    "we also compare the situation where the disk is slightly above the substrate ( 0.1 nm , refined particle integration with ` refine=3 ` and ` npol=40 ` ) and the situation where the disk is located on top of the substrate , see text around eq .   for a discussion .",
    "( b ) scattering spectra for disk on substrate and for different simulation scenarios . ` sim1 ` is the same simulation as the ` on subs ` simulation in panel ( a ) . in ` sim2 ` we use through ` edgeprofile(10,25 ) ` a higher number of discretization points in @xmath33-direction , and in ` sim3 ` we use through ` polygon(51,size,[60,60 ] ) ` a higher number of discretization points for the nanodisk plates .",
    "finally , in ` sim4 ` we place the lower disk plate slightly _ below _ the substrate .",
    "all simulations give very similar results , thus demonstrating the stability and accuracy of our approach .",
    "computer runtimes are on the order of a few minutes.,title=\"fig : \" ]      in fig .",
    "[ fig : dda ] we compare results of our bem implementation with dda simulations including substrate effects @xcite ( dda  si ) .",
    "we plot the absorption cross sections for a gold nanosphere ( 50 nm diameter ) located 1 nm above a glass substrate , which is illuminated from above by a plane wave .",
    "the agreement between the two simulations is very good throughout the entire wavelength regime . in @xcite",
    "the authors additionally found perfect agreement with complementary fdtd simulations .",
    "the mnpbem toolbox additionally provides the possibility to simulate nanoparticles above substrates within the quasistatic approximation , using the method of image charges for the calculation of the reflected green function @xcite .",
    "as this approach is completely different from the bem approach described in the previous sections , a comparison between simulations using the full maxwell equations ( retarded ) and simulations employing the quasistatic approximation provide an excellent means for testing our software .",
    "figure  [ fig : stat ] presents simulation results for a nanosphere , nanodisk , and nanotriangle situated slightly above a glass substrate .",
    "the nanoparticle dimensions are on the order of a few nanometers , as specified in the figure caption , such that the quasistatic approximation can be safely employed .",
    "comparison of the full simulation results ( solid lines with symbols ) with those of the quasistatic approximation ( dashed - dotted lines ) show excellent agreement for all nanoparticle shapes .",
    "we next investigate the situation where a gold nanodisk approaches a glass substrate from above . in fig .",
    "[ fig : disk](a ) we start with a disk ( 60 nm diameter , 10 nm height ) that is located 10 nm above the substrate , and then gradually decrease the distance to the substrate until the disk is placed on the substrate . as can be seen , with decreasing distance there is a significant redshift of the plasmon scattering peak .",
    "most importantly , the simulation results for the disk slightly above ( 0.1 nm ) and directly on the substrate ( ` on subs ` ) give very similar results .",
    "for the particle on the substrate , the lower boundary elements are located less than ` layer.ztol ` away from the substrate , such that the singular contribution of the reflected green function can be handled through eq .  . here",
    ", a few integration points ( ` refine=1 ` and ` npol=10 ` ) suffice to get accurate results .",
    "in contrast , for the 0.1 nm distance ( which is larger than ` layer.ztol ` ) we need a much higher number of integration points ( ` refine=3 ` and ` npol=40 ` ) to get converged results .    in fig .",
    "[ fig : disk](b ) we investigate different simulation results for the nanodisk on top of the glass substrate to check the stability and accuracy of our approach . increasing the number of @xmath33-values for the disk ( square symbols ) or increasing",
    "the degree of discretization for the upper and lower disk plates ( diamonds , see figure caption for details ) give practically indistinguishable results .",
    "we finally performed a simulation where the lower disk plate is placed slightly below the substrate interface .",
    "this can be achieved with    epstab = epsconst ( 1 ) , epstable ( gold.dat ) , epsconst ( 2.25 ) ; layer = layerstructure ( epstab , [ 1 , 3 ] , ztab , op ) ;    p1 = tripolygon ( polygon ( 30 , size , [ 60 , 60 ] ) , ... edgeprofile ( 10 , 11 , mode , 01 , min , 1e-3 ) ) ; [ up , lo ] = select ( p1 , carfun , @ ( x , y , z ) z >",
    "1.1e-3 ) ; p1 = comparticle ( epstab , p1 , [ 2 , 1 ] , 1 , op ) ; p2 = comparticle ( epstab , up , shift ( lo , [ 0 , 0 , -2e-3 ] , [ 2 , 1 ; 2 , 3 ] , [ 1 , 2 ] , op ) ;    the corresponding simulation results ` sim4 ` are again in excellent agreement with all previous results .",
    "quite generally , we found that the particle boundaries must be discretized sufficiently fine around the edges of the lower particle plates in order to get converged results .",
    "this is also evident from the surface charges and currents ( not shown ) which exhibit strong variations there .",
    "however , from fig .  [",
    "fig : disk ] it is obvious that the details of the discretization are not overly critical , and even for coarse discretizations the scattering and extinction spectra are very similar to the converged ones , at least for substrates and layer structures with not too high permittivities .    ) , nrad,nrad ) ` and ` edge = edgeprofile(10,11,mode,01 ) ` .",
    "the membrane is a 20 nm thick layer with a dielectric constant of @xmath114 .",
    "we compare three different discretizations with ` nrad=5,7,15 ` resulting in 823 , 1256 and 2142 boundary elements , respectively .",
    "all discretizations give very similar results . ]      in fig .",
    "[ fig : tri ] we present scattering spectra for a gold nanotriangle placed on top of a membrane with a thickness of 20 nm and a dielectric constant of @xmath114 .",
    "the dielectric constants of the layer media above and below the membrane are @xmath1 .",
    "we present three different discretizations , with different numbers of discretization points at the rounded edges of the nanotriangle .",
    "similar to the previous examples , the influence of the boundary discretization is not very large , although there is a small redshift with increasing discretization indicating that the results are not fully converged . from additional simulations we observed that the convergence becomes faster",
    "when the dielectric constant of the membrane becomes reduced .",
    "to summarize , we have developed a methodology for a potential - based boundary element method ( bem ) approach to consider substrate and layer structure effects in simulations of plasmonics nanoparticles .",
    "we have implemented our approach within the matlab mnpbem toolbox .",
    "a significant speedup of our approach can be achieved by computing the reflected green functions on a suitable grid and interpolating them at a later stage .",
    "we have compared our implementation with discrete dipole approximation ( dda ) simulations including substrate effects as well as with quasistatic simulations , and have found good agreement throughout .",
    "particular emphasis has been placed on nanoparticles situated directly _ on _ substrates , as usually encountered in experiment .",
    "we have presented a few representative examples and have demonstrated the viability of our approach .",
    "typical runtimes for elementary nanoparticle shapes are on the order of a few minutes , although simulations can be sufficiently slower for more complicated nanoparticle geometries .",
    "the new version of the mnpbem toolbox now includes substrate and layer structure effects , for both retarded ( solutions of the full maxwell equations ) and quasistatic simulations .",
    "we have implemented plane wave excitation and the computation of scattering and extinction cross sections , as described in some length in this paper .",
    "additionally , we provide excitations of oscillating dipoles and the computation of total and radiative scattering rates , which allows one to compute dyadic green functions and the photonic local density of states .",
    "such dipole effects have not been discussed in this paper , but some information can be found in the help pages of the toolbox . substrate and layer structure effects have not yet been implemented for electron energy loss spectroscopy .",
    "as it stands , the new toolbox provides a flexible toolkit for various plasmonic simulations .",
    "we have tried to implement the new features in a most general fashion , such that a broad class of different situations can be simulated .",
    "so far we have primarily tested substrates and layers consisting of low - permittivity materials .",
    "high - permittivity materials including metals have not been tested properly yet .",
    "they might call for refined particle discretizations , and we thus ask all users to be cautious with the simulation results .",
    "altogether , we hope that the mnpbem toolbox will continue to serve the plasmonics community as a useful and helpful simulation software .",
    "this work has been supported by the austrian science fund fwf under project p24511n26 and the sfb nextlite , and by nawi graz .",
    "in this appendix we show how to derive the bem working equations for layer structures .",
    "we first use eq .",
    "( [ eq : continuity4]a ) to express @xmath52 in terms of @xmath40 and @xmath26 . after some rearrangements we obtain @xmath115 with @xmath116 . with this",
    ", we can express the fourth term on the left hand side of eq .   as @xmath117    + ik\\hat{\\bm n}^\\|\\cdot\\varepsilon_1\\bm a^\\|\\,,\\ ] ] where we have introduced the abbreviations @xmath118 the last term on the left hand side of eq",
    ".   becomes @xmath119=    ik\\hat n^\\perp(\\varepsilon_1-\\varepsilon_2)\\left(g_2^{h\\sigma}\\sigma_2+g_2^{hh}h_2^\\perp\\right )    + ik\\hat n^\\perp a^\\perp\\,.\\ ] ] substituting equation into eq .",
    "then gives @xmath120 which finally leads to the first of the two working equations ( [ eq : working]a ) .",
    "the second one is obtained by rewriting eq .",
    "( [ eq : continuity4]b ) @xmath121=\\alpha^\\perp\\,.\\ ] ] which leads after some rearrangements to eq .",
    "( [ eq : working]b ) .                        a.  j. ward , j.  b. pendry , a program for calculating photonic band structures , green s functions and transmission / reflection coefficients using a non - orthogonal fdtd method , comp .",
    "phys . commun .",
    "128 ( 2000 ) 590 .",
    "a.  f. oskooi , d.  roundy , m.  ibanescu , p.  bermel , j.  d. joannopoulos , s.  g. johnson , meep : a flexible free - software package for electromagnetic simulations by the fdtd method , comp .",
    "phys . commun . 181",
    "( 2010 ) 687 .",
    "v.  myroshnychenko , e.  carbo - argibay , i.  pastoriza - santos , j.  perez - juste , l.  m. liz - marzn , f.  javier garcia de abajo , modeling the optical response of highly faceted metal nanoparticles with a fully 3d boundary element method , adv .",
    "( 2008 ) 4288 ."
  ],
  "abstract_text": [
    "<S> within the mnpbem toolbox , developed for the simulation of plasmonic nanoparticles using a boundary element method approach , we show how to include substrate and layer structure effects . </S>",
    "<S> we develop the methodology for solving maxwell s equations using scalar and vector potentials within the inhomogeneous dielectric environment of a layer structure . </S>",
    "<S> we show that the implementation of our approach allows for fast and efficient simulations of plasmonic nanoparticles situated on top of substrates or embedded in layer structures . </S>",
    "<S> the new toolbox provides a number of demo files which can also be used as templates for other simulations .    </S>",
    "<S> plasmonics , metallic nanoparticles , boundary element method , substrates and layer structures </S>"
  ]
}
{
  "article_text": [
    "consider an ensemble of bars glued together at joints , around which they can freely rotate , embedded in a two dimensional space .",
    "the ensemble of bars and joints is naturally associated with a graph : joints are the vertices of the graph , and bars its edges .",
    "the question of whether or not this ensemble constitutes a rigid body is a fascinating one .",
    "it found a convenient answer with laman s theorem  @xcite , which characterizes rigidity in a purely graph theoretical way .",
    "it implies for instance that a graph with @xmath2 vertices must have at least @xmath3 edges to be rigid . here",
    "the number @xmath4 corresponds to the number of degrees of freedom of a joint and the number @xmath5 to the number of degrees of freedom of a rigid body , in two dimensions .",
    "the concepts of @xmath0-sparsity and @xmath0-tightness , introduced a long time ago in graph theory @xcite , allow to generalize the problem  @xcite .",
    "for instance , bar - joint rigidity in two dimensions corresponds to @xmath6 .",
    "some values of @xmath0 have a clear physical meaning in terms of other models of rigidity , others do not , see sec .  [",
    "sec : graph ] .    the percolation problem associated with bar - joint rigidity",
    "has drawn the attention of physicist s for a long time  @xcite .",
    "it can be stated as follows : take a large lattice , where each site is a joint and each bond a bar ; consider that each bar is effectively present with probability @xmath7 .",
    "when @xmath7 is increased , the system goes from a `` floppy '' phase where only small rigid clusters exist , to a `` rigid '' phase , where there is one macroscopic rigid cluster . in between lies the rigidity percolation transition . to study this problem ,",
    "jacobs , thorpe , duxbury and moukarzel have introduced the so called `` pebble game '' algorithm , which implements in an efficient way the combinatorial characterization of laman  @xcite , see also  @xcite .",
    "the interpretation of the numerical simulations on regular two dimensionnal lattices have fueled some debate , but the following picture seems favored : the rigidity percolation transition in such 2d bar - joints lattices is second order , in a universality class different from ordinary connectivity percolation  @xcite .",
    "we note that rigidity percolation may also be studied on trees or random graphs , in which case it is exactly soluble , and displays a first order transition , at variance with ordinary percolation  @xcite . to our knowledge",
    ", there exists no analytical theory , even approximate , for the critical exponents of 2d bar - joint rigidity percolation on regular lattices .",
    "except for some special cases , such as ordinary percolation and the bar - joint rigidity percolation described above , percolation problems associated to @xmath0 sparsity seem to have received relatively little attention in the physics literature ( see sec.[sec : graph ] for a more detailed discussion ) .",
    "in particular , little is known about the associated percolation transitions and their universality classes .",
    "a natural idea to get insight into this problem is renormalization theory . the purpose of this paper is to introduce a renormalization tool to study @xmath0-percolation , generalizing the method of @xcite . in sec .",
    "[ sec : renorm ] , we will determine the conditions under which the renormalization procedure is useful .",
    "in particular , we will show that it allows a complete solution for some @xmath0-rigidity models on hierarchical graphs @xcite . in sec.[sec :",
    "model ] , we present and solve explicitly a model of @xmath8 percolation ( which has a physical interpretation as bodies and bars percolation in two dimensions ) .",
    "we will show that the renormalization transformation on this model has two trivial fixed points , corresponding to the full and empty graph respectively , and two critical fixed points .",
    "one fixed point , corresponding to ordinary percolation has three unstable direction , whereas the other one has one unstable direction , and thus governs the critical behavior for almost all values of the parameters .",
    "this model provides an example of a system showing both ordinary and rigidity percolation transistions .",
    "we first briefly recall the graph theoretic description of bar - joints rigidity  @xcite .",
    "the basic idea is constraint counting : each joint has two translational degrees of freedom , and each bar , by fixing the distance between two joints , removes one degree of freedom .",
    "since a rigid body in two dimensions has three degrees of freedom ( two translations and one rotation ) , an ensemble with @xmath2 joints needs at least @xmath3 bonds to be rigid . in addition , these bars must be `` well distributed '' among the joints : if there are exactly @xmath9 bonds , there should be no subensemble with @xmath10 joints containing strictly more than @xmath11 bonds .",
    "clearly , the numbers 2 and 3 in this description are adapted to bar - joints rigidity theory in two dimensions , but it is natural to generalize the idea to other pairs of numbers @xmath0 .",
    "it is also natural to allow for multiple edges in a graph : such graphs are called multigraphs .",
    "although , to our knowledge , they have not appeared in this form in the physics literature , the following definitions about @xmath0-rigidity are not new @xcite ; we recall them for self - consistency of the article . throughout the article",
    ", we shall always consider multigraphs , although we shall keep calling them graphs .    given a graph @xmath12 , where @xmath13 represents the set of vertices of @xmath14 and @xmath15 the set of its edges , we say that @xmath16 is a subgraph of @xmath14 if @xmath17 , @xmath18 , and the edges in @xmath19 connect vertices in @xmath20 .    for @xmath21 and @xmath22 , a multigraph @xmath14 with @xmath2 vertices and @xmath23 edges",
    "is said to be + - @xmath0-sparse if every subgraph @xmath24 of @xmath14 with @xmath25 vertices contains at most @xmath26 edges ; + - @xmath0-tight if in addition @xmath27 ; + - @xmath0-spanning if there is a @xmath0-tight subgraph spanning all vertices of @xmath14 ; + - @xmath0-redundant if it is not @xmath0-sparse . +",
    "two vertices @xmath28 and @xmath29 are said to be @xmath0-rigidly connected if there is a @xmath0-tight subgraph containing @xmath28 and @xmath29 .",
    "when there is no ambiguity , we shall sometimes omit the @xmath0 indices , and talk about sparse , tight , and redundant graphs .    notice that if @xmath30 , these definitions make no sense : there is no non trivial @xmath0-sparse graph in this case , since the simplest graph with @xmath4 vertices and @xmath31 edge is not @xmath0-sparse . more generally , the edges in a @xmath0-sparse multigraph have multiplicity at most @xmath32",
    ".    these graph - theoretic definitions may be immediately translated in the rigidity vocabulary .",
    "a @xmath0-tight graph is a @xmath0 isostatically rigid , or minimally rigid , graph : it has just the right number of constraints to be rigid , and removing any constraint destroys rigidity .",
    "a @xmath0-spanning graph is a rigid graph according to the @xmath0 rule .",
    "redundant constraints play an important role in bar and joint rigidity theory .",
    "it is straightforward to generalize the concept to @xmath0-rigidity .",
    "a graph possesses one or more redundant edge if and only if it is not sparse , ie if it contains a subgraph with @xmath10 vertices , @xmath33 edges , and @xmath34 . to define and count the number of @xmath0-redundant edges in a graph @xmath12",
    ", one may proceed as follows :    1 .",
    "start with the empty graph @xmath35 , without edges 2 .",
    "add the edges of @xmath15 one at a time 3 .",
    "check if this addition creates a redundant subgraph , with @xmath10 vertices , @xmath33 edges , and @xmath36 .",
    "4 .   if this is the case , then reject the newly added edge and add one to the count of redundant constraints 5 .",
    "continue until all edges in @xmath15 have been added .",
    "this procedure actually follows the steps of the algorithms used to study @xmath37-rigidity  @xcite , and more generally @xmath0-rigidity",
    "@xcite . a priori",
    ", the number of redundant edges computed in this way could depend on the order chosen to add the edges .",
    "it is not the case , so that the number of redundant edges is a well - defined concept .",
    "this is also the minimum number of edges that one has to withdraw to make a redundant graph sparse . in general",
    ", there is a freedom of choice in the edges to be removed to turn a redundant graph into a sparse one , but their number is fixed .    beyond bar - joint 2d rigidity , which is a physical realization of @xmath37-rigidity , @xmath0-rigidity encompasses several known situations :    * @xmath38-rigidity corresponds to ordinary percolation , in any dimension .",
    "* @xmath8-rigidity corresponds to the rigidity of systems composed of rigid bodies and bars in 2 dimensions .",
    "* more generally , @xmath39-rigidity is related to rigidity of bodies and bars systems in higher dimension @xcite .",
    "* @xmath40-rigidity is related to the rigidity of bond - bending networks in 3 dimensions @xcite . in this case",
    "@xmath41 , which is outside the usual range ; the definition of sparsity needs to be slightly adapted . *",
    "@xmath42-rigidity corresponds to the graph theoretic concept of 2-orientability , which has been used to study bar - joint rigidity of random networks @xcite .",
    "clearly , a percolation problem may be associated to each case , by monitoring the largest @xmath0-rigid cluster in a graph .",
    "understanding the general properties of these percolation processes , such as the order of the transition , the universality class , etc ... is a largely open question , although several cases have been studied in details : among those , ordinary percolation is of course the best known by far .",
    "percolation for bond - bending networks has been studied , because of its relevance in modeling network glasses and proteins @xcite , but we are not aware of studies on critical exponents . in @xcite , c. moukarzel studies percolation problems on trees and random graphs for various numbers @xmath43 ( @xmath44 in the notations of @xcite ) .",
    "it is also known that when some bars and joints form a rigid component , they behave in every aspect like a rigid body .",
    "this idea has actually been numerically exploited @xcite .",
    "then one may expect that body - bar ( @xmath45 ) and bar - joint ( @xmath6 ) rigidity percolation belong to the same universality class @xcite .    summarizing these informations ,",
    "one may identify several conjectures and questions :    1 .",
    "@xmath38 percolation ( that is ordinary percolation ) and @xmath37 percolation on 2d regular lattices belong to two different universality classes : this conjecture seems well documented numerically .",
    "2 .   one may also conjecture that @xmath37-percolation ( bar - joint ) and @xmath8-percolation ( body - bar ) on 2d regular lattices belong to the same universality class .",
    "3 .   on random graphs",
    ", it is known that the threshold for @xmath37-percolation is identical to the threshold for @xmath42-percolation  @xcite .",
    "one may then wonder if , on random graphs , the threshold for @xmath0-percolation could be independent of @xmath46 , for @xmath47 .",
    "a more general question is : given for instance a regular lattice in @xmath48 dimensions ; what does determine the order of the transition and the universality class of @xmath0 percolation ?",
    "efficient algorithms , generalizing to @xmath0-sparsity the original pebble - game devoted to @xmath37 sparsity , have been recently introduced @xcite , so that a numerical investigation of this question is in principle possible . to our knowledge , it has not been undertaken . a natural analytical tool to progress in the studies of these percolation processes",
    "is the renormalization group . in section [ sec : renorm ]",
    "we introduce a renormalization transformation , and we prove that in some sense it is equivalent to study the rigidity properties of the original and renormalized graphs , when the parameter range is restricted to @xmath49 .",
    "this allows to solve exactly models on hierarchical graphs for @xmath49 ; in sec .",
    "[ sec : model ] , we solve such a model for @xmath50 .",
    "the renormalization rule we are about to describe is a generalization of the rule introduced on  @xcite for @xmath6 . in this case",
    ", this rule is intuitive enough so that it does not really require a justification relying on graph theory , see  @xcite ( this rule has been rediscovered independently in  @xcite ) .",
    "things are not so obvious for general @xmath0 , and in particular we have to impose the restriction @xmath49 . in order to be sure to make correct statements , we feel it is useful to give precise graph theoretical definitions , and to proceed rigorously ,",
    "not relying only on intuition .",
    "this certainly makes the article heavier to read , but is necessary to identify for instance the restriction @xmath49 , which is not completely intuitive .    from now on ,",
    "we assume @xmath1 .",
    "we will denote @xmath51 the cardinal of an ensemble @xmath52 .      consider a multigraph @xmath53 , where @xmath13 is the set of vertices and @xmath15 the set of edges .",
    "we singularize two sites @xmath54 .",
    "we would like to replace the graph @xmath55 by an `` equivalent '' ( in a certain sense ) graph with only two vertices @xmath28 and @xmath29 , and a certain number of edges @xmath56 linking @xmath28 and @xmath29 .",
    "we define this renormalization step as follows : + let us call @xmath57 the ensemble of all @xmath0-sparse subgraphs of @xmath55 containing @xmath28 and @xmath29 . for @xmath58 in @xmath57 ,",
    "the number of its vertices and edges is respectively @xmath59 and @xmath60 .",
    "we define @xmath61\\ ] ] note that since @xmath62 is @xmath0-sparse , @xmath63",
    ". then @xmath56 is given by @xmath64 we have @xmath65 . the renormalized graph , which contains vertices @xmath28 and @xmath29 and @xmath56 edges , is sparse ; it is tight if and only if @xmath28 and @xmath29 are @xmath0-rigidly connected in the original graph @xmath55 .",
    "to better understand formula  ( [ eq : renormrule ] ) , let us explain in details what it means for some particular @xmath0 .",
    "[ fig : renorm11 ]   ( ordinary percolation ) .",
    "the upper graph is renormalized into one edge ; the lower graph is renormalized into the empty graph .",
    "note that both graphs contain one redundant edge.,title=\"fig:\",width=340 ]    [ fig : renorm23 ]   and @xmath66 ( bar - joint rigidity percolation ) .",
    "the upper graph is renormalized into one edge , as @xmath28 and @xmath29 are rigidly connected ; the lower graph is renormalized into the empty graph , as @xmath28 and @xmath29 are not rigidly connected.,title=\"fig:\",width=340 ]    [ fig : renorm33 ]   and @xmath66 ( body - bar rigidity percolation ) .",
    "the upper graph is renormalized into three edges , as the bodies @xmath28 and @xmath29 are rigidly connected ; the lower graph is renormalized into two edges only .",
    "note that the upper graph contains one redundant edge , for instance the dashed one.,title=\"fig:\",width=340 ]    _ ordinary percolation _",
    "+ @xmath67 corresponds to the ordinary percolation case .",
    "then @xmath68 , and the number of renormalized edges between @xmath28 and @xmath29 is @xmath69 or @xmath31 .",
    "sparse graphs in this case are graphs without any loop .",
    "one sees that a loopless subgraph @xmath58 with @xmath70 is necessary for `` percolation '' across the graph . on the elementary `` wheatstone bridge '' graph of fig .",
    "[ fig : renorm11 ] , it is easy to see that this coincides with the usual renormalization prescription : replace the graph by an edge if and only if @xmath28 and @xmath29 are connected .",
    "_ bar - joint rigidity percolation _ + in this case @xmath6 .",
    "again @xmath68 , and the number of renormalized edges between @xmath28 and @xmath29 is @xmath69 or @xmath31 .",
    "the rule says in this case : `` renormalize the graph by a edge if and only if @xmath28 and @xmath29 are rigidly connected ( ie belong to the same rigid cluster ) '' .",
    "this is intuitive , and this is the rule which has been used in @xcite .",
    "examples are given on fig .",
    "[ fig : renorm23 ] .",
    "_ body - bar rigidity percolation _ + in this case @xmath45 .",
    "@xmath71 , so that the number of renormalized edges between @xmath28 and @xmath29 is @xmath72 or @xmath5 . @xmath28 and @xmath29 have to be seen as rigid bodies , with three degrees of freedom each , and three edges are necessary for a rigid connection between them .",
    "examples are given on fig .",
    "[ fig : renorm33 ] .",
    "the following property is useful to effectively compute renormalized graphs .",
    "[ prop1 ] let @xmath53 be sparse , with @xmath73 .",
    "let @xmath74 be an edge such that @xmath75 is not sparse",
    ". then @xmath76 .    as a consequence of this proposition ,",
    "the renormalizations of @xmath55 and @xmath77 contain the same number of edges .",
    "in other words , adding redundant edges to a graph @xmath55 does not modify its renormalization .",
    "we will use this as a tool to compute renormalized graphs in sec .",
    "[ sec : model ] .",
    "* proof : * clearly , @xmath78 , since an element of @xmath79 is also in a natural way an element of @xmath80 .",
    "we call @xmath81 and @xmath82 the two vertices connected by the edge @xmath74 ; @xmath83 .",
    "let us now consider @xmath84 an element of @xmath80 , such that the maximum is attained in the definition of @xmath85 . thus @xmath86 .",
    "we want to construct a subgraph @xmath87 in @xmath79 such that @xmath88 .",
    "this will prove @xmath89 .",
    "we may assume that @xmath90 , otherwise it is enough to take @xmath91 .",
    "thus the vertices @xmath81 and @xmath82 are in @xmath20 .",
    "let @xmath92 be a minimal redundant subgraph of @xmath77 .",
    "@xmath93 contains @xmath81 and @xmath82 the vertices connected by @xmath74 , and @xmath94 is a tight subgraph of @xmath55 .",
    "we define @xmath95 and @xmath87 as the subgraph of @xmath55 induced by the vertices @xmath96 .",
    "@xmath97 is an element of @xmath79 .",
    "@xmath97 does not contain @xmath74 , but we will show that @xmath98 .    assume first @xmath99 . in this case",
    "then there is one edge @xmath101 in @xmath102 that is not in @xmath19 , otherwise @xmath103 would not be sparse .",
    "@xmath101 is different from @xmath74 , thus @xmath101 is also in @xmath104 .",
    "we conclude @xmath105 .",
    "we assume now that @xmath106 is not empty .",
    "we have the relations : @xmath107 where @xmath108 is a disjoint union .",
    "indeed , @xmath90 and @xmath109 .",
    "thus @xmath110 let @xmath111 the subgraph defined by the intersection of @xmath20 and @xmath93 .",
    "@xmath112 is a subgraph of @xmath55 , so it is sparse ; it is also a proper subgraph of @xmath113 , and it contains vertices @xmath81 and @xmath82 , so it is not tight , otherwise it would contradict the minimality of @xmath114 : indeed , @xmath115 would be a redundant subgraph of @xmath77 , smaller than @xmath114 .",
    "we conclude that @xmath116 and @xmath117 .",
    "since @xmath113 is tight , we have @xmath118 using ( [ eq : interm ] ) , we get @xmath119 putting this together with ( [ eq1 ] ) , we have finally @xmath120    500 -2pt      we have seen how to replace a graph by a certain number of renormalized edges .",
    "now , we will see why and when it is licit to perform this renormalization step on a subgraph of a bigger graph .",
    "consider a graph @xmath12 , @xmath121 and @xmath122 the subgraph of @xmath14 induced by the vertices @xmath123 .",
    "we will say that @xmath55 satisfies the _ renormalizability condition _ if there exist two vertices @xmath28 and @xmath29 such that all edges in @xmath15 linking @xmath55 to the rest of the big graph @xmath14 are connected to @xmath28 or @xmath29 ; see fig.[fig : renormalizability ] . in the following",
    ", we always assume this condition is satisfied .    for any subgraph of @xmath124",
    ", we can define the renormalized graph @xmath125 , as follows : the part of @xmath44 which is a subgraph of @xmath55 is renormalized according to the rule detailed in [ sec : renormgraph ] ; the remaining part of @xmath44 is left unchanged .",
    "note that if @xmath28 or @xmath29 , or both , do not belong to @xmath44 , then the renormalized part of @xmath44 contains no edge .",
    "[ fig : renormalizability ] ; the subgraph @xmath55 satisfies the renormalizability condition . on the right",
    ", @xmath55 has been renormalized into one edge , the rest of the graph is not modified.,title=\"fig:\",width=340 ]    let us call @xmath126 the graph @xmath14 where the subgraph @xmath55 has been renormalized .",
    "we would like to show that it is in some sense equivalent to study @xmath0-percolation on @xmath14 and @xmath127 .",
    "for this purpose , we will prove the following :    [ prop2 ] in the setting described above : + i ) @xmath28 and @xmath29 are @xmath0-rigidly connected in @xmath14 if and only if they are @xmath0-rigidly connected in @xmath127 .",
    "+ ii ) the number of redundant edges in @xmath14 and @xmath127 are related through the formula @xmath128 where we have written @xmath129 for the number of redundant edges in a graph @xmath52 .",
    "this last formula allows then to replace the problem of computing the number of redundant edges in @xmath14 by the the problem of computing the number of redundant edges in the renormalized graph @xmath130 .    before proving [ prop2 ]  i ) and ii ) , we state and prove a few lemmas .",
    "[ lemma1 ] let @xmath12 and @xmath131 be as above .",
    "let @xmath132 be a subgraph of @xmath133 , and let us call @xmath134 its renormalized part ; @xmath134 contains @xmath135 edges .",
    "then there exists @xmath44 subgraph of @xmath14 , such that + i ) @xmath136 + ii ) if @xmath28 or @xmath29 do not belong to @xmath137 , then , calling @xmath58 the intersection of @xmath44 with @xmath55 , @xmath138 is empty ( ie @xmath62 has no edge ) .",
    "+ iii ) if @xmath28 and @xmath29 belong to @xmath137 , then @xmath58 is sparse and satisfies @xmath139    * proof * : note first that @xmath134 has at most two vertices , @xmath28 and @xmath29 .",
    "if @xmath28 or @xmath29 do not belong to @xmath140 , or if @xmath141 then we choose for the vertices of @xmath62 the same vertices as @xmath134 , and put no edge .    if @xmath142 , we take @xmath58 an element of @xmath79 such that @xmath143 , and @xmath62 minimal in the sense that no proper subgraph of @xmath62 has the same properties .",
    "then the renormalization of @xmath62 produces exactly @xmath135 edges between @xmath28 and @xmath29 . indeed , suppose it produces @xmath144 such edges ; then there exists @xmath145 subgraph of @xmath62 , in @xmath79 , such that @xmath146 . by removing edges",
    ", we would construct a proper subgraph of @xmath62 with the same properties as @xmath62 .    to build @xmath44",
    ", we complete @xmath62 in both cases by the part of @xmath140 not concerned by the renormalization .",
    "500 -2pt    [ lemma2 ] let @xmath147 be a @xmath0-redundant subgraph of @xmath14 , minimal ( in the sense that no proper subgraph of @xmath44 is @xmath0-redundant ) .",
    "then i ) or ii ) is true : + i ) @xmath44 is a subset of @xmath55 ( that is @xmath44 is included in the part of @xmath14 to be renormalized ) .",
    "+ ii ) @xmath136 is a @xmath0-redundant subgraph of @xmath148 ( that is the image of @xmath44 by renormalization is still @xmath0-redundant ) .    *",
    "proof * : suppose i ) is not true , and @xmath149 .",
    "let us call @xmath58 the intersection of @xmath44 and @xmath55 , and @xmath150 .",
    "we call @xmath135 the number of edges of @xmath134",
    ". the set of vertices and edges of @xmath140 are called @xmath151 and @xmath152 respectively . then @xmath153 and @xmath154 .",
    "thus @xmath155 now , @xmath62 is ( k , l)-sparse since @xmath44 is a minimal redundant graph .",
    "thus @xmath156 , and @xmath157 putting together eqs .",
    "( [ eq : l21 ] ) and ( [ eq : l22 ] ) , an using @xmath158 we get @xmath159 this proves that ii ) is true .",
    "if i ) is not true and neither @xmath28 nor @xmath29 are in @xmath44 , then @xmath62 is actually empty : otherwise , @xmath44 would be a minimal redundant subgraph with two disconnected components , which is impossible .",
    "then the renormalization does not modify @xmath44 and ii ) is true .",
    "if i ) is not true and @xmath28 or @xmath29 , but not both , are in @xmath44 , then either @xmath62 has no edge , and we are done since @xmath44 is not modified by renormalization , or @xmath44 is a minimal redundant graph made of two components that share only one vertex .",
    "it is easy to show by enumerating vertices and edges that this is impossible as soon as @xmath160 .",
    "this ends the proof .",
    "500 -2pt    * nb * : notice that for @xmath161 , this lemma is not true .",
    "[ fig : contrex ] shows a counter example for @xmath162 .",
    "it is not clear to us how it is possible to define a useful renormalization transformation in this case .",
    ", the subgraph @xmath55 ( induced by vertices @xmath163 ) does not contain any redundant edge , and is renormalized into a subgraph with a single edge between @xmath28 and @xmath29 .",
    "the renormalized subgraph is sparse .",
    "however , the subgraph induced by the vertices @xmath164 is redundant . [",
    "fig : contrex],width=340 ]    [ lemma3 ] let @xmath132 be a @xmath0-redundant subgraph of @xmath127 .",
    "then there exists @xmath44 , @xmath0-redundant subgraph of @xmath14 such that @xmath136 ( that is : @xmath140 is the image by renormalization of a @xmath0-redundant subgraph of @xmath14 ) .    * proof * : if @xmath165 does not contain any @xmath166 edge , then it is enough to take @xmath167 .",
    "we assume now that @xmath165 contain @xmath142 edges linking @xmath28 and @xmath29 .",
    "this implies that @xmath168 ( since @xmath169 is the number of @xmath166 edges in @xmath127 ) .    using the same reasoning as in lemma  [ lemma1 ] , we construct @xmath58 an element of @xmath79 such that @xmath143 and such that the renormalization of @xmath62 produces exactly @xmath135 edges between @xmath28 and @xmath29 .",
    "define now @xmath147 , with @xmath170 and @xmath171 contains @xmath138 and @xmath165 minus the @xmath135 edges between @xmath28 and @xmath29 .",
    "then @xmath172 , and @xmath173 then @xmath44 is redundant .",
    "500 -2pt    * proof of * [ prop2 ] i ) : + _ rigid connection in @xmath14 _ @xmath174 _ rigid connection in @xmath127 _ : suppose @xmath28 and @xmath29 are @xmath0-rigidly connected in @xmath14",
    ". then there exists @xmath175 a @xmath0-tight subgraph of @xmath14 containing @xmath28 and @xmath29 .",
    "let us call @xmath176 the intersection of @xmath112 and the subgraph to be renormalized @xmath55 ; @xmath177 the subgraphs of @xmath127 images of @xmath178 by renormalization ; @xmath179 has only two vertices @xmath28 and @xmath29 , and a certain number of edges between them .",
    "we have @xmath180 @xmath181 is a subgraph of @xmath112 which is tight , so that @xmath181 is sparse .",
    "the subgraph of @xmath112 defined by the vertices @xmath182 is also sparse .",
    "this yields the two inequalities @xmath183 then , by renormalization of @xmath181 , we have @xmath184 from this and the fact that @xmath112 is tight , we obtain finally @xmath185 .",
    "now we want to prove that @xmath186 is sparse .",
    "let @xmath132 be a subgraph of @xmath186 .",
    "we have to show that @xmath187 . by lemma  [ lemma1 ]",
    ", we construct @xmath188 .",
    "@xmath58 is the intersection of @xmath44 with @xmath181 , and @xmath135 is the number of edges in the renormalization of @xmath62 . then using point _",
    "iii ) _ of lemma  [ lemma1 ] and @xmath189 we conclude @xmath190 this proves that @xmath186 is @xmath0-tight , so that @xmath28 and @xmath29 are rigidly connected in @xmath127 . + _ rigid connection in @xmath127 _ @xmath174 _ rigid connection in @xmath14 _ : we assume now that @xmath28 and @xmath29 are rigidly connected in @xmath127 , and want to show this is true also in @xmath14 .",
    "let @xmath191 be a @xmath0-tight subgraph of @xmath127 containing @xmath28 and @xmath29 .",
    "using lemma  [ lemma1 ] , we construct @xmath175 subgraph of @xmath14 , and call @xmath176 the intersection of @xmath112 with @xmath55 .",
    "first , reasoning as above , we have @xmath192 .",
    "+ we now have to prove that @xmath112 does not contain any @xmath0-redundant subgraph .",
    "suppose it is not the case , and call @xmath193 a minimal redundant subgraph of @xmath112 .",
    "then we have the alternative of lemma  [ lemma2 ] .",
    "i ) can not be true because @xmath193 would be a subgraph of @xmath181 , which is sparse by lemma  [ lemma1 ] .",
    "ii ) can not be true either , because we would have constructed a redundant subgraph of @xmath186 , which is tight by hypothesis .",
    "we conclude that @xmath112 is tight , and that @xmath28 and @xmath29 are rigidly connected in @xmath112 .",
    "+ * proof of * [ prop2 ] ii ) : + we want to prove the formula @xmath194 to prove this , we follow the algorithm defining @xmath195 , as described in sec .  [",
    "sec : graph ] .",
    "starting from the vertices @xmath13 and no edge , we add the edges in @xmath15 one by one , starting with the edges which are in @xmath55 , the subgraph to be renormalized . if the newly added edge is redundant , we discard it and add one to the count of @xmath195 .",
    "this way , we construct a sequence of sparse graphs @xmath196 where @xmath197 and @xmath198 .",
    "we have @xmath199 .",
    "@xmath200 contains the edges in @xmath15 which have not been found redundant in the sequential edge addition process .",
    "consider the associated sequence of renormalized graphs @xmath201 this is a sequence of sparse graphs thanks to lemma  [ lemma3 ] , and along this sequence , all edges in @xmath202 are added one by one .",
    "we will show we can use this sequence to count the number of redundant edges in @xmath127 . + * adding the edges of @xmath55 * : + when adding one by one the edges of @xmath55 , exactly @xmath203 edges are discarded , and are added to the count of @xmath195 .",
    "after addition of all edges of @xmath55 , @xmath204 contains exactly @xmath169 edges between vertices @xmath28 and @xmath29 . along this sequence of edges additions",
    ", @xmath205 contains only a number smaller than @xmath32 of edges connecting @xmath28 and @xmath29 , and no other edge .",
    "thus , the count of @xmath206 remains  @xmath69 . + * adding an edge @xmath207 ( ie an edge in @xmath14 , but not in @xmath55 ) * : + we start with the graphs @xmath208 and @xmath209 , with @xmath210 . in this case , trying to add an edge in @xmath14 corresponds to trying to add the same edge in @xmath127 .",
    "we will show that @xmath74 makes either both @xmath211 and @xmath212 redundant , or none of the two .",
    "+ _ case 1 _ : @xmath213 is not redundant : the added edge is accepted , @xmath214 , and the count of @xmath195 is not modified .",
    "+ then @xmath215 is not redundant : otherwise , by lemma  [ lemma3 ] , it would be the image by renormalisation of a redundant subgraph of @xmath213 , which is impossible .",
    "then @xmath216 , and neither the count of @xmath195 nor the count of @xmath206 are modified .",
    "+ _ case 2 _ : @xmath213 is redundant : the added edge is discarded , @xmath217 , and the count of @xmath195 is increased by  @xmath31 .",
    "+ then @xmath215 is redundant . indeed ,",
    "let @xmath44 by a minimal redundant subgraph of @xmath213 .",
    "it can not be included in @xmath55 , as it contains the edge @xmath74 .",
    "then , by lemma  [ lemma2 ] , @xmath125 is a redundant subgraph of @xmath215 .",
    "thus the count of @xmath206 is also increased by  @xmath31 , and @xmath218 .",
    "+ repeating this until all edges in @xmath219 have been added proves formula  ( [ eq : red ] ) .",
    "500 -2pt    notice that formula  ( [ eq : red ] ) is wrong for the graph of fig .",
    "[ fig : contrex ] , with @xmath162 .      if it is possible to iterate the renormalization transformation we have just defined until the graph becomes trivial , then the problems of percolation and counting the number of redundant edges are exactly solved .",
    "it is indeed possible to define some graphs on which this procedure can be carried out completely , thus providing exactly solvable models of @xmath0 percolation that go beyond trees and random graphs .",
    "these graphs are called `` hierarchical graphs '' @xcite , and are defined as follows .",
    "we start from two vertices , connected by one edge . the graph is then constructed iteratively ; at each step , all edges are replaced by a given elementary cell . from each type of elementary cell ,",
    "one thus constructs a hierarchical graph . a graph where this replacement procedure has been iterated @xmath220 times",
    "will be called a level @xmath220 hierarchical graph .",
    "an example is given on fig .",
    "[ fig : hierarchical ] .    .",
    "this is the graph which is used in section  [ sec : model ] , where in addition each edge may have multiplicity up to @xmath5 .",
    "[ fig : hierarchical],width=340 ]    consider now within a hierarchical graph one elementary cell between vertices @xmath28 and @xmath29 .",
    "it clearly satisfies the renormalizability condition of sec.[sec : renormsubgraph ] : all edges going outside of the cell are connected to the outer vertices @xmath28 and @xmath29 , whereas the inner vertices are only linked within the cell .",
    "thus , the renormalization procedure described in sec .  [",
    "sec : renormsubgraph ] is exact when applied to an elementary cell .",
    "furthermore , if the renormalization procedure is applied to all elementary cells of a level @xmath220 hierarchical graph , the resulting renormalized graph is again a hierarchical graph , of level @xmath221 .",
    "these remarks explain why the renormalization procedure allows to solve exactly @xmath0-rigidity models on hierarchical graphs .",
    "in this section , we apply the formalism developed in the previous section to a body - bar rigidity model : that is we study @xmath8 percolation on a multigraph @xmath14 , with @xmath2 vertices and @xmath23 edges .",
    "the multigraph @xmath14 is constructed starting from the `` wheatstone bridge '' hierarchical lattice , described on fig .",
    "[ fig : hierarchical ] .",
    "we define the percolation problem as follows : each edge in the hierarchical lattice has multiplicity @xmath72 or @xmath5 with probability @xmath222 and @xmath223 ( an edge with multiplicity @xmath69 is absent ) . notice that if edges are either absent or have multiplicity @xmath5 ( that is @xmath224 ) , a subgraph is @xmath8 rigid if and only if it is connected . in other words , @xmath8 rigidity with triple edges is equivalent to @xmath38 rigidity , that is ordinary percolation , with simple edges .",
    "for the special values of the parameters @xmath224 , this model thus contains ordinary percolation ; since @xmath8 rigidity percolation is supposed to belong to a different universality class , it is interesting to study the whole phase diagram of this model",
    ".    let us start from a level @xmath220 hierarchical lattice , with @xmath220 large .",
    "the renormalization rule of sec .",
    "[ sec : renorm ] applied to each unit cell transforms the level @xmath220 lattice to a level @xmath221 lattice , and induces a transformation of the parameters @xmath225 : @xmath226\\ ] ] from an analysis of the renormalization transformation , it is not difficult to obtain the explicit expression of @xmath227 , but it is very tedious .",
    "the details are given in the appendix .",
    "assuming that we start from a large graph with @xmath228 , we iterate this renormalization transformation .",
    "to understand the phase diagram of the model , one needs now to study the renormalization flow induced by @xmath227 ; of particular interest are the fixed points of @xmath227 .",
    "note that the four dimensional space of parameters is actually easily reduced to three dimensions , since @xmath229 .    by inspection of the complicated expression for @xmath227 , three",
    "fixed points are easily found : + _ i ) _ @xmath230 .",
    "this is the empty graph fixed point , corresponding to the floppy phase .",
    "+ _ ii ) _ @xmath231 .",
    "this is the full graph fixed point , corresponding to the rigid phase .",
    "+ _ iii ) _ @xmath232 .",
    "this is a critical fixed point , corresponding to ordinary percolation ( because in this case , edges are either absent , or have multiplicity  @xmath5 ) .",
    "+ using a newton - raphson scheme and scanning the whole parameter space , we have found another fixed point : + _ iv ) _ @xmath233 .",
    "this fixed point may be found also by noting that the surface @xmath234 is stable by @xmath227 .",
    "using the normalization condition @xmath229 , looking for a fixed point on this surface is then a one dimensional problem .",
    "we have not found any other fixed point in the domain @xmath235 , @xmath229 .",
    "the trivial fixed points @xmath236 and @xmath237 are stable .",
    "the fixed point @xmath238 has three unstable directions .",
    "the fixed point @xmath239 has only one unstable direction .",
    "the renormalization flow is then as follows :    * the three dimensional parameter space is divided by a critical hypersurface containing @xmath238 and @xmath239 . on one side of the surface ,",
    "the renormalization flows approaches the empty ( `` floppy '' , non percolating ) fixed point ; on the other side , it approaches the full fixed point ( `` rigid '' , percolating ) . *",
    "on the critical hypersurface , the flow is attracted by @xmath239 , the `` rigidity percolation '' critical fixed point .",
    "we conclude that except for very special choices of parameters @xmath224 , the large scale critical properties of this model are described by the `` rigidity percolation '' critical fixed point .",
    "we have introduced and rigorously justified a renormalization transformation adapted to the study of @xmath0-rigidity , for @xmath1 , which generalizes the well known procedure for ordinary percolation , and the procedure for bar - joint rigidity used in @xcite .",
    "this method allows to solve exactly @xmath0-percolation problems on hierarchical graphs .",
    "we have provided such an example , which has the interesting feature of showing both `` ordinary percolation '' and `` rigidity percolation '' behavior for different values of the parameters .    rather than solving exactly problems on hierarchical graphs ,",
    "such renormalization transformations might be used to provide approximate solutions for problems on more realistic 2d or 3d lattices .",
    "this work would then provide an approximate analytical tool in the general study of @xmath0-percolation problems and their universality classes , a field which is still widely open .",
    "this work is supported by the anr-09-jcjc-009401 interlop project .",
    "we give here the details of the computations yielding the renormalization function @xmath227 .",
    "the problem is simple : apply the rule of sec .  [",
    "sec : renormgraph ] to an elementary `` wheatstone bridge '' cell .",
    "since there are @xmath240 edges , and each edge may be absent , single , double or triple , there are @xmath241 different configurations of which we have to study the renormalization according to the rule of sec .",
    "[ sec : renormgraph ] .",
    "the large number of configurations to enumerate is the only difficulty .",
    "[ prop1 ] is useful to simplify these computations , as it allows to remove all redundant edges from the beginning .    in the following tables , we classify the configurations according to the multiplicity of their edges .",
    "for instance , an edge multiplicity @xmath242 means that one edge has multiplicity @xmath5 , two have multiplicity @xmath4 , one has multiplicity @xmath31 and one is absent . clearly , depending on how these edges are distributed on the `` wheatstone bridge '' , the number of renormalized edges may be different .",
    "the second column of the tables contains the number of edges of the renormalized cell , and the third column is the combinatorial factor corresponding to the number of configurations with the given edge multiplicity yielding the given number of renormalized edges ."
  ],
  "abstract_text": [
    "<S> we first introduce the percolation problems associated with the graph theoretical concepts of @xmath0-sparsity , and make contact with the physical concepts of ordinary and rigidity percolation . </S>",
    "<S> we then devise a renormalization transformation for @xmath0-percolation problems , and investigate its domain of validity . </S>",
    "<S> in particular , we show that it allows an exact solution of @xmath0-percolation problems on hierarchical graphs , for @xmath1 . </S>",
    "<S> we introduce and solve by renormalization such a model , which has the interesting feature of showing both ordinary percolation and rigidity percolation phase transitions , depending on the values of the parameters .    </S>",
    "<S> [ multiblock footnote omitted ] [ section ] [ theorem]proposition [ theorem]lemma [ theorem]corollary [ theorem]assumption [ theorem]remark [ theorem]definition addtoresetequationsection </S>"
  ]
}
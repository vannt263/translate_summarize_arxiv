{
  "article_text": [
    "traditionally , simulations of lattice quantum chromodynamics ( qcd ) were based on nearest - neighbor finite difference approximations of the derivatives of classical fields .",
    "it is a general observation made in both quenched and full qcd that results from lattices with a resolution @xmath2 fm suffer from considerable discretization errors , see e.g.  ref .",
    "even optimistic estimates expect an increase in costs of full qcd simulations @xmath3 as the lattice spacing @xmath4 is decreased @xcite . @xcite . ] .    the wilson fermion formulation is appropriate with respect to flavor symmetry , but plagued by discretization errors of @xmath5 .",
    "these effects have been found to be sizeable e.g.  in a compilation of quenched world data for quark masses @xcite and in the determination of the renormalized quark mass , exploiting the pcac relation in the schrdinger functional @xcite .    in lattice qcd",
    ", the extraction of physical continuum results requires to approach two limits : the _ chiral limit _ defined as the point in parameter space where the pion mass vanishes , and the _ continuum limit _ defined by vanishing lattice spacing @xmath4 . the chiral limit amounts to an increase of the inverse pion mass ( the correlation length @xmath6 ) in lattice units towards infinity .",
    "the lattice volume , i.e.  the number of sites , must be increased accordingly , in order to control finite size effects . at this point ,",
    "simulations of qcd with dynamical fermions encounter the problem of solving the fermionic linear system @xmath7 , where @xmath8 is the fermion matrix  a compute intensive task .",
    "the second step , moving towards the continuum limit , requires to decrease the lattice spacing @xmath4 .",
    "the two issues are related : if one would be able to get reliable results at larger lattice spacing , one could avoid dealing with _ prohibitively fine _ physical lattice resolutions on large physical volumes . on the classical level , one might just use higher order derivative terms in the fermion action in order to push finite-@xmath4-effects to higher orders . but quantum effects will largely spoil the intended gains .    at present , there are two major trends to improve the fermionic discretization .",
    "one approach follows _",
    "symanzik s on - shell improvement _",
    "program @xcite .",
    "irrelevant ( dimension 5 ) counter terms are added to both , lattice action and composite operators in order to avoid @xmath5 artifacts . a particularly simple and",
    "hence preferred scheme is the sheikholeslami and wohlert action ( swa ) @xcite , where the wilson action is modified by adding a local term , the so - called clover term .",
    "hereby , the amount of storage is doubled .",
    "the clover term is sufficient , in principle , to cancel the @xmath5 errors in the action , provided that a constant @xmath9 is tuned suitably .",
    "the hope is to reach the continuum limit for a given scaling quantity @xmath10 as @xmath11 , i.e.  without @xmath5 contamination .",
    "the development of a non - perturbative tuning procedure has been documented in a series of papers , see refs .",
    "@xcite .",
    "another promising ansatz is based on wilson s renormalization group @xcite .",
    "it goes under the name _",
    "perfect actions_. perfect lattice actions are located on renormalized trajectories in parameter space that intersect the critical surface ( at infinite correlation length ) in a fixed point of a renormalization group transformation . by definition ,",
    "perfect actions are free of any cut - off effects , therefore they represent continuum physics at any lattice spacing @xmath4 .    in practice",
    ", perfect actions can best be approximated for asymptotically free theories starting from fixed point actions .",
    "such fixed point actions can be identified in a multi - grid procedure solely by minimization , without performing functional integrals .",
    "thus , the task reduces to a classical field theory problem .",
    "the fixed point action then serves as an approximation to a perfect action at finite correlation length ; this is a so - called classically perfect action @xcite .",
    "however , even in this approximation the couplings usually extend over an infinite range , so for practical purposes a truncation to short distances is unavoidable . in such schemes of ` truncated perfect actions ' ( tpa ) one",
    "is forced to give up part of the original quest for perfectness , for reasons of practicability .",
    "it goes without saying that swa and tpa can prove their full utility only after combination with state - of - the - art solvers in actual parallel implementations . in the recent years",
    ", the inversion of the standard wilson fermion matrix could be accelerated considerably by use of the bicgstab algorithm @xcite and novel parallel _",
    "l_ocally-_l_exicographic symmetric successive over - relaxation ( _ ll_-ssor ) preconditioning techniques @xcite .",
    "we start from the hypercube fermion ( hf ) approximation formulated for free fermions in ref .",
    "@xcite . for an alternative variant ,",
    "see ref .  @xcite . in order to meet the topological structure of tpa",
    ", we shall follow a bottom - up approach by adding interactions to the free fermion case through _ hyper - links _ within the unit - hypercube .",
    "this results in 40 independent hyper - links per site and amounts to a storage requirement five times as large as in swa .",
    "in general , the fermion matrix for both swa and tpa can be written in the generic form @xmath12 where @xmath13 represents diagonal blocks ( containing @xmath14 sub - blocks ) , @xmath15 is a nearest - neighbor hopping term , while @xmath16 contains next - to - nearest - neighbor couplings , and so on .",
    "the key point is that one can include into the _ ll_-ssor  process ( _ i _ ) the internal degrees of freedom of the block diagonal term @xmath13 as arising in swa and ( _ ii _ ) 2-space , 3-space , and 4-space hyper - links , as present in a tpa like hf .    after reviewing the fermionic matrices for swa and hf in section 2 , we introduce _ locally lexicographic _ over - relaxation ( _ ll_-ssor ) preconditioning of swa in section [ ssor ] .",
    "we discuss three variants for the diagonal blocks to be used in block ssor . in section [ para ]",
    ", we shall parallelize block ssor within an extended _ ll_-ssor - scheme and we shall discuss the inclusion of the hf into this framework . in section [ results ] , we benchmark the block-_ll_-ssor   preconditioner on swa  for several values of @xmath9in comparison with odd - even preconditioning .",
    "our testbed is a set of quenched configurations on lattices of size @xmath17 at @xmath1 and our implementation machines are a 32-node ape100/quadrics and a sun ultra workstation . using the hf on a quenched @xmath18 system , we compare the ssor preconditioned version with an non - preconditioned one , for a variety of mass parameters , again at @xmath1 .",
    "in this section we briefly review the basics of swa and tpa . to fix our notation , we write the fermionic lattice action as @xmath19 where @xmath8 is the fermion matrix .      for the wilson fermion action ( with wilson parameter @xmath20 ) , supplemented by the sheikholeslami - wohlert term",
    ", we have @xmath21 \\delta_{x , y }   \\\\    & - & \\kappa \\sum_\\mu \\big [ ( { { \\mathbf 1}}-\\gamma_\\mu)u_\\mu(x ) \\delta_{x , y-\\hat      \\mu } + ( { { \\mathbf 1}}+\\gamma_\\mu)u_{-\\mu}(x ) \\delta_{x , y+\\hat \\mu}\\big ] ,    \\nonumber    \\label{eq : clover_matrix}\\end{aligned}\\ ] ] where @xmath22 is the standard wilson hopping parameter , @xmath9 is a parameter that can be tuned to optimize @xmath5 cancellations , and @xmath23 is a unit vector .",
    "the ` local ' clover term consists of @xmath14 diagonal blocks .",
    "its explicit structure in dirac space is given by @xmath24 with the entries @xmath25 being complex @xmath26 matrices , which are shorthands for linear combinations of the @xmath27 , @xmath28 @xmath27 is defined by @xmath29 where the clover term @xmath30 reads @xmath31    the wilson - sheikholeslami - wohlert matrix exhibits the well known @xmath32 symmetry @xmath33 with the eigenvalues of @xmath34 coming in complex - conjugate pairs .      the physical properties of a given lattice action remain unaltered under a block variable _ renormalization group transformation _",
    "( rgt ) . as a simple example",
    ", we can divide the ( infinite ) lattice into disjoint hypercubic blocks of @xmath35 sites each and introduce new variables living on the centers of these blocks ( block factor @xmath36 rgt ) .",
    "then the rgt relates @xmath37 where @xmath38 and @xmath39 represent the original and the new lattice fields , respectively .",
    "the points @xmath40 are the sites of the original lattice and @xmath41 are those of the new lattice with spacing @xmath36 .",
    "@xmath42 means that the point @xmath43 belongs to the block with center @xmath41 .",
    "now the original action @xmath44 $ ] transforms into a new action @xmath45 $ ] on the coarse lattice .",
    "the latter is determined by the functional integral @xmath46 } = \\int d \\phi \\ k[\\phi ' , \\phi ] e^{-s [ \\phi ] } .\\ ] ] the kernel @xmath47 $ ] has to be chosen such that the partition function and all expectation values remain invariant under the rgt . at the end ,",
    "one usually rescales the lattice spacing back to 1 . in any case , the correlation length in lattice units gets divided by @xmath36 .    for the kernel functional",
    "there are many possible choices @xcite . a particularly simple choice for the kernel functional is @xmath48 = \\prod_{x ' } \\delta \\big ( \\phi'_{x ' } -   \\frac{\\beta_{n}}{n^{d } } \\sum_{x \\in x ' } \\phi _ { x } \\big ) \\ .\\ ] ] assume that we are on a `` critical surface '' , where the correlation length is infinite . with a suitably chosen renormalization factor @xmath49",
    "we obtain  after an infinite number of rgt iterations  a finite _ fixed point action _ ( fpa ) @xmath50 $ ] .",
    "an fpa is invariant under the rgt .",
    "the task of @xmath49 is the neutralization of the rescaling of the field @xmath39 at the end .",
    "the fpa is an example of a _ perfect lattice action _ since it is insensitive to a change of the lattice spacing .",
    "( [ deltargt ] ) can be generalized , for instance , to a gaussian form of blocking . for free fermions ,",
    "a generalization of this type reads ( we ignore constant factors in the partition function ) @xmath51 }   = \\int d \\bar \\psi d \\psi e^{-s[\\bar \\psi , \\psi ] } } \\label{trafo}\\nonumber \\\\ & \\times & \\exp \\big\\ { - \\frac{1}{\\alpha } \\sum_{x ' } \\big [ \\bar \\psi^{'}_{x ' } - \\frac{1}{n^{(d+1)/2 } } \\sum_{x\\in x ' } \\bar \\psi_{x } \\big ] \\big [ \\psi^{'}_{x ' } - \\frac{1}{n^{(d+1)/2 } } \\sum_{x\\in x ' } \\psi_{x } \\big ] \\big\\ } .\\end{aligned}\\ ] ] here we have already inserted the suitable parameter @xmath49 and we introduce a new rgt parameter @xmath52 , which is arbitrary .",
    "the critical surface requires a fermion mass @xmath53 , but we can generalize the consideration to a finite mass .    assume that we want to perform a number @xmath54 of rgt iterations .",
    "if we start from a small mass @xmath55 , then the final mass will be @xmath56 . in the limit @xmath57",
    "we obtain a perfect action at finite mass . in this context , `` perfect '' means that scaling quantities do not depend on the lattice spacing , hence they are identical to the continuum values .    for the above transformation ( [ trafo ] ) , this perfect action can be computed analytically in momentum space @xcite .",
    "the computation simplifies if we let @xmath58 , so that @xmath59 is sufficient .",
    "hence we start from the continuum action now , and the perfect action takes the form @xmath60 & = & \\frac{1}{(2\\pi ) ^{d } } \\int_{-\\pi}^{\\pi } d^{d}p \\ \\bar \\psi ( -p ) \\delta^ { * } ( p)^{-1 } \\psi ( p )   \\nonumber \\\\",
    "\\delta^{*}(p ) & = & \\sum_{l \\in { z \\!\\!\\ ! z}^{d } } \\frac{\\pi ( p+ 2\\pi l)^{2 } } { i ( p_{\\mu}+2\\pi l_{\\mu } ) \\gamma_{\\mu}+m } + \\alpha \\ , \\quad \\pi ( p ) = \\prod_{\\mu = 1}^{d } \\frac{2 \\sin ( p_{\\mu}/2)}{p_{\\mu}},\\end{aligned}\\ ] ] where @xmath61 is the perfect propagator .",
    "the same perfect action is obtained starting from a variety of lattice actions , in particular from the wilson fermion action .    in coordinate space",
    "we write this action as @xmath62 = \\sum_{x , r } \\bar \\psi_{x } [ \\rho_{\\mu}(r)\\gamma_{\\mu } + \\lambda ( r ) ] \\psi_{x+r } .",
    "\\label{lam}\\ ] ] for @xmath63 , where the rgt breaks the chiral symmetry explicitly , the couplings in @xmath64 and @xmath65 decay exponentially as @xmath66 increases .",
    "an exception is the case @xmath67 , where they are confined to one lattice spacing for the special choice @xmath68 it turns out that for this choice of @xmath52 the locality is also excellent in higher dimensions , i.e. , the exponential decay of the couplings is very fast .",
    "this is important , because for practical purposes the couplings have to be truncated to a short range , and the truncation should not distort the perfect properties too much .",
    "an elegant truncation scheme uses periodic boundary conditions over 3 lattice spacings and thus confines the couplings to a unit hypercube .",
    "this yields the hf , with spectral and thermodynamic properties still drastically improved compared to wilson fermions @xcite .    of course",
    ", it is far more difficult to construct an approximately perfect action for a complicated interacting theory like qcd .",
    "however , as a simple ansatz we can just use hf together with the standard gauge link variables . apart from nearest neighbors , we also have couplings over 2 , 3 and 4-space diagonals in the unit hypercube .",
    "we connect all these coupled sites by all possible _ shortest _ lattice paths , by multiplying the compact gauge fields on the path links .",
    "we call this procedure `` gauging the hf by hand '' .",
    "note that one can connect two sites @xmath43 and @xmath69 lying on 2 , 3 , and 4-space diagonals via @xmath70 such shortest lattice paths .",
    "we average over all of them to construct the hyper - link , see fig .",
    "[ links ] .",
    "let us identify the hyper - link @xmath71 between site @xmath43 and @xmath72 with @xmath73 , and let us denote the hyper - link in plane , cube and hyper - cube as @xmath74 , @xmath75 , and @xmath76 , respectively .",
    "then we can write the corresponding fermion matrix in terms of the hyper - links which can be constructed recursively starting from the gauge links @xmath77 , @xmath78.\\end{aligned}\\ ] ]    ]    it is convenient to introduce pre - factors which are functions of the hf hopping parameters @xmath79 and @xmath80 , @xmath81 , and sums of @xmath82-matrices : @xmath83 note that the @xmath80 in eq .",
    "( [ lamm ] ) differ from @xmath84 in eq .",
    "( [ lam ] ) by a normalization factor @xmath85 .",
    "the @xmath79 arise from @xmath86 by the same normalization .",
    "the corresponding hf matrix is defined by @xmath87\\\\ \\\\",
    "+ { \\!\\sum}\\limits_{{\\mu}}{\\!\\sum}\\limits_{{\\nu>\\mu}}\\big[\\\\ \\gamma_{+\\mu+\\nu } & u^{(2)}_{+\\mu+\\nu}(x )    \\delta_{x , y-\\hat\\mu-\\hat\\nu}&{{\\!\\!\\!+\\ ! } } & \\gamma_{+\\mu-\\nu } u^{(2)}_{+\\mu-\\nu}(x )    \\delta_{x , y-\\hat\\mu+\\hat\\nu}\\;\\;\\\\                                + \\gamma_{-\\mu+\\nu } & u^{(2)}_{-\\mu+\\nu}(x )    \\delta_{x , y+\\hat\\mu-\\hat\\nu}&{{\\!\\!\\!+\\ ! } } & \\gamma_{-\\mu-\\nu } u^{(2)}_{-\\mu-\\nu}(x )    \\delta_{x , y+\\hat\\mu+\\hat\\nu}\\;\\;\\big]\\\\ \\\\ + { \\!\\sum}\\limits_{{\\mu } } { \\!\\sum}\\limits_{{\\nu>\\mu } } { \\!\\sum}\\limits_{{\\rho>\\nu}}\\big[\\\\ \\gamma_{+\\mu+\\nu+\\rho } & u^{(3)}_{\\mu+\\nu+\\rho}(x ) \\delta_{x , y-\\hat\\mu-\\hat\\nu-\\hat\\rho}&{{\\!\\!\\!+\\ ! } } & \\gamma_{+\\mu+\\nu-\\rho } u^{(3)}_{\\mu+\\nu-\\rho}(x )    \\delta_{x , y-\\hat\\mu-\\hat\\nu+\\hat\\rho}\\\\ + \\gamma_{+\\mu-\\nu+\\rho } & u^{(3)}_{\\mu-\\nu+\\rho}(x )    \\delta_{x , y-\\hat\\mu+\\hat\\nu-\\hat\\rho}&{{\\!\\!\\!+\\ ! } } & \\gamma_{+\\mu-\\nu-\\rho } u^{(3)}_{\\mu-\\nu-\\rho}(x )    \\delta_{x , y-\\hat\\mu+\\hat\\nu+\\hat\\rho}\\;\\;\\\\ + \\gamma_{-\\mu+\\nu+\\rho } & u^{(3)}_{-\\mu+\\nu+\\rho}(x ) \\delta_{x , y+\\hat\\mu-\\hat\\nu-\\hat\\rho}&{{\\!\\!\\!+\\ ! } } & \\gamma_{-\\mu+\\nu-\\rho } u^{(3)}_{-\\mu+\\nu-\\rho}(x )    \\delta_{x , y+\\hat\\mu-\\hat\\nu+\\hat\\rho}\\\\ + \\gamma_{-\\mu-\\nu-\\rho } & u^{(3)}_{-\\mu-\\nu+\\rho}(x ) \\delta_{x , y+\\hat\\mu+\\hat\\nu-\\hat\\rho}&{{\\!\\!\\!+\\ ! } } & \\gamma_{-\\mu-\\nu-\\rho } u^{(3)}_{-\\mu-\\nu-\\rho}(x )    \\delta_{x , y+\\hat\\mu+\\hat\\nu+\\hat\\rho}\\;\\;\\big]\\\\ \\\\ + { \\!\\sum}\\limits_{{\\mu } } { \\!\\sum}\\limits_{{\\nu>\\mu } } { \\!\\sum}\\limits_{{\\rho>\\nu } } { \\!\\sum}\\limits_{{\\sigma>\\rho}}\\big[\\\\ \\gamma_{+\\mu+\\nu+\\rho+\\sigma } & u^{(4)}_{\\mu+\\nu+\\rho+\\sigma}(x)\\delta_{x , y-\\hat\\mu-\\hat\\nu-\\hat\\rho-\\hat\\sigma}&{{\\!\\!\\!+\\ ! } } & \\gamma_{+\\mu+\\nu+\\rho-\\sigma } u^{(4)}_{\\mu+\\nu+\\rho-\\sigma}(x)\\delta_{x , y-\\hat\\mu-\\hat\\nu-\\hat\\rho+\\hat\\sigma}\\\\ + \\gamma_{+\\mu+\\nu-\\rho+\\sigma } & u^{(4)}_{\\mu+\\nu-\\rho+\\sigma}(x)\\delta_{x , y-\\hat\\mu-\\hat\\nu+\\hat\\rho-\\hat\\sigma}&{{\\!\\!\\!+\\ ! } } & \\gamma_{+\\mu+\\nu-\\rho-\\sigma } u^{(4)}_{\\mu+\\nu-\\rho-\\sigma}(x)\\delta_{x , y-\\hat\\mu-\\hat\\nu+\\hat\\rho+\\hat\\sigma}\\\\ + \\gamma_{+\\mu-\\nu+\\rho+\\sigma } & u^{(4)}_{\\mu-\\nu+\\rho+\\sigma}(x)\\delta_{x , y-\\hat\\mu+\\hat\\nu-\\hat\\rho-\\hat\\sigma}&{{\\!\\!\\!+\\ ! } } & \\gamma_{+\\mu-\\nu+\\rho-\\sigma } u^{(4)}_{\\mu-\\nu+\\rho-\\sigma}(x)\\delta_{x , y-\\hat\\mu+\\hat\\nu-\\hat\\rho+\\hat\\sigma}\\\\ + \\gamma_{+\\mu-\\nu-\\rho+\\sigma } & u^{(4)}_{\\mu-\\nu-\\rho+\\sigma}(x)\\delta_{x , y-\\hat\\mu+\\hat\\nu+\\hat\\rho-\\hat\\sigma}&{{\\!\\!\\!+\\ ! } } & \\gamma_{+\\mu-\\nu-\\rho-\\sigma } u^{(4)}_{\\mu-\\nu-\\rho-\\sigma}(x)\\delta_{x , y-\\hat\\mu+\\hat\\nu+\\hat\\rho+\\hat\\sigma}\\;\\;\\\\ + \\gamma_{-\\mu+\\nu+\\rho+\\sigma } & u^{(4)}_{-\\mu+\\nu+\\rho+\\sigma}(x)\\delta_{x , y+\\hat\\mu-\\hat\\nu-\\hat\\rho-\\hat\\sigma}&{{\\!\\!\\!+\\ ! } } & \\gamma_{-\\mu+\\nu+\\rho-\\sigma } u^{(4)}_{-\\mu+\\nu+\\rho-\\sigma}(x)\\delta_{x , y+\\hat\\mu-\\hat\\nu-\\hat\\rho+\\hat\\sigma}\\\\ + \\gamma_{-\\mu+\\nu-\\rho+\\sigma } & u^{(4)}_{-\\mu+\\nu-\\rho+\\sigma}(x)\\delta_{x , y+\\hat\\mu-\\hat\\nu+\\hat\\rho-\\hat\\sigma}&{{\\!\\!\\!+\\ ! } } & \\gamma_{-\\mu+\\nu-\\rho-\\sigma } u^{(4)}_{-\\mu+\\nu-\\rho-\\sigma}(x)\\delta_{x , y+\\hat\\mu-\\hat\\nu+\\hat\\rho+\\hat\\sigma}\\\\ + \\gamma_{-\\mu-\\nu+\\rho+\\sigma } & u^{(4)}_{-\\mu-\\nu+\\rho+\\sigma}(x)\\delta_{x , y+\\hat\\mu+\\hat\\nu-\\hat\\rho-\\hat\\sigma}&{{\\!\\!\\!+\\ ! } } & \\gamma_{-\\mu-\\nu+\\rho-\\sigma } u^{(4)}_{-\\mu-\\nu+\\rho-\\sigma}(x)\\delta_{x , y+\\hat\\mu+\\hat\\nu-\\hat\\rho+\\hat\\sigma}\\\\[0pt ] + \\gamma_{-\\mu-\\nu-\\rho+\\sigma } & u^{(4)}_{-\\mu-\\nu-\\rho+\\sigma}(x)\\delta_{x , y+\\hat\\mu+\\hat\\nu+\\hat\\rho-\\hat\\sigma}&{{\\!\\!\\!+\\ ! } } & \\gamma_{-\\mu-\\nu-\\rho-\\sigma } u^{(4)}_{-\\mu-\\nu-\\rho-\\sigma}(x)\\delta_{x , y+\\hat\\mu+\\hat\\nu+\\hat\\rho+\\hat\\sigma } \\;\\;\\\\ & \\big]\\bigg\\}. & & \\qquad \\qquad \\qquad \\qquad \\qquad \\qquad \\qquad ( \\ref{hfmatrix } ) \\end{array}\\nonumber\\displaystyle \\label{hfmatrix}\\ ] ]    the sums in eq .",
    "( [ hfmatrix ] ) run over four different directions for two 1-space links , six directions for four 2-space links , four directions for eight 3-space links , and one direction for the sixteen 4-space links . altogether",
    "80 hyper - links contribute .    with each path of the free hf ,",
    "a @xmath82-matrix is associated .",
    "we have chosen the @xmath82-matrices so that they add up to produce an effective @xmath88 , see eq .",
    "( [ lamm ] ) , which is associated with a given hyper - link .",
    "the 1-space links @xmath71 are identical to the hermitean - conjugate links in negative direction , @xmath89 , and this feature also holds for the hyper - links , e.g. , @xmath90 therefore , only one half of the hyper - links have to be stored in the implementation of the hf .    as in case of wilson fermions , the hf matrix exhibits the `` @xmath32 symmetry '' , @xmath91 i.e.",
    ", @xmath92 is non - hermitean but its eigenvalues come in complex - conjugate pairs , one obtains for instance a strongly improved meson dispersion relation @xcite . for the inclusion of a truncated perfect quark gluon vertex function ,",
    "see ref .",
    "@xcite . ] .",
    "the off - diagonal elements ( `` hopping parameters '' ) @xmath93 and @xmath94 are shown as functions of the mass @xmath56 in fig .",
    "[ hopkin ] .",
    "[ hopkin ] , and the scalar `` hopping parameters '' @xmath80 as functions of the mass @xmath56.,title=\"fig:\"][hopkin ] , and the scalar `` hopping parameters '' @xmath80 as functions of the mass @xmath56.,title=\"fig : \" ]",
    "preconditioning a linear system @xmath95 amounts to selecting two regular matrices @xmath96 and @xmath97 , which act as a left and a right preconditioner , respectively .",
    "this means that we consider the modified system @xmath98 the spectral properties of the preconditioned matrix @xmath99 depend only on the product @xmath100 , but not on the manner how it is factorised into @xmath96 and @xmath97 . for a good choice ,",
    "the number of iteration steps required for solving eq .",
    "( [ matrix_prec_eq ] ) by krylov subspace methods ( such as bicgstab ) can be reduced significantly , compared to the original system ( [ matrix_eq ] ) .    in this paper , we consider block ssor preconditioning .",
    "let @xmath101 be the decomposition of @xmath8 into its block diagonal part @xmath13 , its ( block ) lower triangular part @xmath102 and its ( block ) upper triangular part @xmath103 .",
    "given a relaxation parameter @xmath104 , block ssor preconditioning is then defined through the choice @xmath105 it is important that block ssor preconditioning is particularly cheap in terms of arithmetic costs due to the _ eisenstat trick _ @xcite , which is based on the identity @xmath106 + \\left ( \\frac{1}{\\omega}d - u \\right)^{-1 } \\right\\ } \\\\ & = &    \\left ( { { { \\mathbf 1}}}- \\omega ld^{-1 } \\right)^{-1 }   \\nonumber    \\left [ { { { \\mathbf 1}}}+    ( \\omega - 2 ) \\left({{{\\mathbf 1}}}- \\omega",
    "ud^{-1 }    \\right)^{-1 } \\right ] + \\left ( { { { \\mathbf 1}}}- \\omega ud^{-1 } \\right)^{-1 }",
    ".   \\end{aligned}\\ ] ]    therefore , the matrix - vector product with the preconditioned matrix , @xmath107 , can be computed according to algorithm  1 .",
    "= = = solve @xmath108 + compute @xmath109 + solve @xmath110 + compute @xmath111    alg . 1 matrix - vector product for the preconditioned system .    here",
    "the matrices @xmath112 and @xmath113 are ( non - block ) lower and upper triangular , respectively .",
    "this means that solving the corresponding linear systems amounts to a simple forward and backward substitution process .",
    "algorithm  2 gives a detailed description of the forward substitution for solving @xmath114 .",
    "here we denote the block components of the vectors @xmath115 and the matrices @xmath116 as @xmath117 and @xmath118 , @xmath119 .",
    "the backward substitution for @xmath120 can be carried out analogously .",
    "= = = for @xmath121 to @xmath54 + @xmath122 + @xmath123    alg .",
    "2 forward substitution .",
    "assuming that the blocks @xmath118 of @xmath13 are dense and that their inverses have been pre - computed , we see that one iteration step in the above algorithm is exactly as expensive as a direct multiplication with the matrix @xmath124 ( except for the additional multiplication with @xmath125 ) .",
    "a similar relation holds for the backward substitution and the multiplication with @xmath126 .",
    "note that the two multiplications with @xmath127 and @xmath126 are as expensive as one multiplication with the whole matrix @xmath8 plus one additional multiplication with @xmath13 .",
    "this allows us to quantify exactly the work required when using block ssor preconditioning with the eisenstat trick .    *",
    "_ initialization _ : the inverses @xmath128 of all diagonal blocks of the block diagonal matrix @xmath13 must be pre - computed before the iteration starts .",
    "we also assume that these inverses are already scaled by the factor @xmath125 in the initialization . *",
    "_ iteration _ : each iterative step requires additional arithmetic work equivalent to one matrix - vector multiplication with the matrix @xmath13 plus one vector scaling ( with factor @xmath129 ) and two vector summations .    in su(3 ) lattice gauge theory , a natural choice for the block diagonal matrix @xmath13 takes each block @xmath118 to be of dimension 12 , corresponding to the 12 variables residing at each lattice point . in this work",
    ", we will consider this choice , denoted as @xmath130 , as well as the three generic options @xmath131 , @xmath132 and @xmath133 , where the diagonal blocks are of dimension 6 , 3 and 1 , respectively .",
    "the choices @xmath131 and @xmath132 also appear ` natural'at least within the swa framework  since a diagonal block of @xmath130 carries the structure of eq .",
    "( [ eq : structure ] ) .",
    "accordingly , ignoring the parameters @xmath22 and @xmath9 , four consecutive @xmath134 blocks in @xmath132 are given by @xmath135 , @xmath136 , @xmath135 , @xmath136 and two consecutive @xmath137 diagonal blocks in @xmath131 are identical and given by @xmath138    table  [ cost_table ] quantifies the arithmetic effort for computing a matrix - vector product with each of the matrices @xmath130 , @xmath131 , @xmath132 and @xmath133 .",
    "we count this effort in units of _ cflops _ , which represent one multiplication of complex numbers followed by one summation .",
    "the table also quotes estimates for the arithmetic work to compute the inverse of each of these matrices in units of matrix - vector multiplies ( mvm ) .",
    "precise numbers will depend on the particular algorithm chosen for the inversion .",
    "the estimates in table  [ cost_table ] are based on a particularly efficient way for computing the inverse , which uses cramer s rule on @xmath139 blocks and which exploits the additional block structure within each of the @xmath140 and @xmath141 .",
    "the percentages given in brackets quantify these numbers in terms of the cost for a single matrix - vector multiply with @xmath8 . referring to our previous discussion",
    ", they specify the additional cost for ( block ) ssor preconditioning . @xmath142 denotes the lattice volume and one matrix - vector multiplication with @xmath8 is counted with @xmath143 _",
    "cflops_.    .arithmetic cost for different sizes of the diagonal blocks .",
    "@xmath142 is the lattice volume.[cost_table ] [ cols=\">,^,^,^,^\",options=\"header \" , ]",
    "in the fermion equation ( [ matrix_eq ] ) , we have the freedom to choose any ordering for the lattice points @xmath43 .",
    "different orderings yield different matrices @xmath8 , which are permutationally similar to each other .",
    "one matrix can be retrieved from the other one by the transformation @xmath144 , where @xmath145 is a permutation matrix . in general , the quality of the block ssor preconditioner depends on the ordering scheme .    on the other hand , the ordering of the lattice points also determines the degree of parallelism within the forward ( and backward ) substitutions as described in algorithm  3 .",
    "usually , there is a trade - off between the parallelism a given ordering allows for , and the efficiency of the corresponding ssor preconditioning .    in an earlier paper @xcite",
    ", we have shown that for the non - block ssor preconditioner and the wilson fermion matrix one can use a _ locally lexicographic _ ordering on parallel computers supporting grid topologies , so that the resulting ssor preconditioner parallelizes nicely while significantly outperforming the standard odd - even preconditioner .",
    "the purpose of this section is to show that this is also possible for the block ssor preconditioners considered here , even for situations where @xmath8 represents couplings beyond nearest - neighbor lattice points .",
    "let @xmath146 denote the set of all lattice points a given site @xmath43 is coupled to .",
    "for example , @xmath147 for the nearest - neighbor coupling , @xmath148 for nearest and next - to - nearest neighbor couplings , or @xmath149 for the hypercube couplings .",
    "we now re - formulate the forward substitution of algorithm  2 for this generalized situation .",
    "we assume an overall natural partitioning of @xmath8 into sub - blocks of dimension 12 ( corresponding to the 12 variables at a given lattice point ) , and we use the lattice positions @xmath150 as indices for those blocks . by @xmath13",
    "we denote any of the matrices @xmath151 , so @xmath152 stands for a diagonal block of dimension @xmath153 .",
    "it is fully occupied in the case @xmath154 , whereas in case @xmath155 it consists of two @xmath137 diagonal blocks , etc .",
    "we also use the relation @xmath156 between lattice points to denote that @xmath43 has been numbered before @xmath69 with respect to a given ordering @xmath157 .",
    "= = = for all lattice positions @xmath43 in a given ordering @xmath157 + @xmath158 + @xmath159    alg .",
    "3 generalized forward substitution .",
    "to discuss parallelization , we use the concept of coloring the lattice points . a decomposition of all lattice points into mutually disjoint sets @xmath160",
    "is termed a _ coloring _ ( with respect to the matrix @xmath8 ) , if for any @xmath161 the property @xmath162 holds . associating a different color with each set @xmath163",
    ", this property means that each lattice point couples with lattice points of different colors only . an associated color ordering first numbers all grid points with color @xmath164 , then all with @xmath165 etc .",
    "with such a color ordering we see that the computation of @xmath166 for all @xmath43 of a given color @xmath163 can be done in parallel , since terms like @xmath167 involve only lattice points from the preceding colors @xmath168 .    in the case of nearest - neighbor couplings ,",
    "the familiar odd - even ordering represents such a coloring with two colors corresponding to the odd and the even sublattice . for the case of the wilson fermion matrix",
    ", we pointed out in @xcite that the ( non - block ) ssor preconditioned system may be interpreted as a representation of the familiar odd - even reduction process .",
    "a similar relation arises in the case of swa , where the reduced system considered in ref .",
    "@xcite is equivalent to the ( @xmath153 block ) ssor preconditioned matrix with odd - even ordering .    for more complicated couplings like the next - to - nearest neighbor couplings or the hf",
    ", it would become increasingly difficult to handle colorings with a minimum number of colors .",
    "for example , the hypercube ordering requires at least 16 different colors .",
    "however , aiming at a minimal number of colors is not a good strategy .",
    "for example , the odd - even coloring can actually be considered as the ` worst case ' as far as the quality of the corresponding ssor preconditioner is concerned @xcite .",
    "heuristically , this can be explained as follows : if the number of colors is small , the color sets @xmath163 themselves are large , and information is not spread between lattice points of equal color in a forward ( or backward ) substitution .    therefore , the right strategy is to search for colorings such that the number @xmath169 of colors is _ maximal _ , while the number of points within each color is still in agreement with the parallelization we are aiming for .",
    "the _ locally lexicographic ordering _",
    ", proposed in ref .",
    "@xcite for the case of a nearest - neighbor coupling , turns out to be an adequate ordering also for more complicated couplings like next - to - nearest neighbor and hypercube .    to describe this ordering , we assume the processors of the parallel computer to be connected as a 4-dimensional grid @xmath170 .",
    "note that this includes lower dimensional grids by setting some of the @xmath171 to 1 .",
    "the space - time lattice can be matched to the processor grid in a natural manner , producing a local lattice of size @xmath172 with @xmath173 on each processor .",
    "here we assume for simplicity that each @xmath171 divides @xmath174 , and that we have @xmath175 for @xmath176 .",
    "let us divide the lattice sites into @xmath177 groups where @xmath178 .",
    "each group corresponds to a fixed position within the local grids and contains all grid points appearing at this position within their respective local grid . associating a color with each of the groups ,",
    "we get a coloring in the sense of the definition above , as long as the coupling defined through @xmath8 is local enough .",
    "more precisely , the sets represent a coloring , if for all @xmath179 the relation @xmath180 holds for @xmath181 .",
    "for example , we need @xmath182 for all @xmath183 for the hypercube couplings and @xmath184 for all @xmath183 for the next - to - nearest neighbor couplings .    a _",
    "locally lexicographic _ ( @xmath185 ) ordering is now defined to be the color ordering , where all points of a given color are ordered after all points with colors , which correspond to lattice positions on the local grid that are lexicographically preceding the given color . in fig .",
    "[ ll_fig ] , this amounts to the alphabetic ordering of the colors @xmath4  @xmath186 .",
    "this example also illustrates the decoupling obtained through that ordering for ( 2-dimensional ) nearest - neighbor and hypercube couplings .",
    "( 12,10 ) ( 0,0)(0,1)10(0,0)(1,0)12 ( 1.5,-0.5)(4,0)3(0,1)10 ( -0.5,2.5)(0,4)2(1,0)12 ( 2.25,6)(1,0)0.5 ( 5,5.75)(0,-1)0.5 ( 4.25,5)(1,0)0.5 ( 5.75,5)(-1,0)0.5 ( 4.25,5.75)(1,-1)0.5 ( 5.75,5.75)(-1,-1)0.5 ( 2,4.75)(0,-1)0.5 ( 1.25,4.75)(1,-1)0.5 ( 2.75,4.75)(-1,-1)0.5 ( 4.25,3)(1,0)0.5 ( 5.75,3)(-1,0)0.5 ( 5,2.25)(0,1)0.5 ( 5,3.75)(0,-1)0.5 ( 4.25,3.75)(1,-1)0.5 ( 5.75,3.75)(-1,-1)0.5 ( 4.25,2.25)(1,1)0.5 ( 5.75,2.25)(-1,1)0.5 ( 8,4.75)(0,-1)0.5 ( 7.25,4.75)(1,-1)0.5 ( 8.75,4.75)(-1,-1)0.5 ( 7.25,4)(1,0)0.5    ( 0,1)(0,4)3 ( 0,0)(4,0)3 ( 0,0)(0,0)g ( 1,0)(0,0)h ( 2,0)(0,0)e ( 3,0)(0,0)f ( 0,0)(0,4)3 ( 0,0)(4,0)3 ( 0,0)(0,0)l ( 1,0)(0,0)m ( 2,0)(0,0)i ( 3,0)(0,0)k ( 0,3)(0,4)2 ( 0,0)(4,0)3 ( 0,0)(0,0)p ( 1,0)(0,0)q ( 2,0)(0,0)n ( 3,0)(0,0)o ( 0,2)(0,4)2 ( 0,0)(4,0)3 ( 0,0)(0,0)c ( 1,0)(0,0)d ( 2,0)(0,0)a ( 3,0)(0,0)b    the parallel version of the forward substitution in algorithm  4 with the @xmath185-ordering now reads :    = = = for all colors in lexicographic order + for all processors + @xmath187 grid point of the given color on that processor + @xmath188 + @xmath159    alg . 4 @xmath185-forward substitution .    if the lattice point @xmath43 is close to the boundary of the local lattice , then the set @xmath146 will contain grid points @xmath69 residing in neighboring processors .",
    "therefore , some of the quantities @xmath189 will have to be communicated from those neighboring processors . the detailed communication scheme for the case of a nearest - neighbor coupling",
    "was given in ref .",
    "@xcite . in that case , only the 8 nearest neighbors in the processor grid were involved in the communication . for the more complicated hf couplings ,",
    "all 80 hypercube neighbors may be involved . for a 3- or 2-dimensional processor grid",
    ", this number reduces to 26 resp .",
    "the _ ll_-ssor  preconditioning of improved actions has been tested in quenched qcd , for realistic lattice sizes and parameters .",
    "for swa we use the odd - even preconditioner of ref .  @xcite as reference .",
    "the hf action preconditioner has been implemented only on a scalar machine so far .",
    "work for a parallel implementation is in progress .",
    "we are going to compare results from test runs of _ ll_-ssor  and odd - even preconditioning , both codes being equally well optimized for the multiplication of the swa fermion matrix .",
    "our investigations are based on a de - correlated set of 10 quenched gauge configurations generated on a @xmath17 lattice at @xmath1 .",
    "we have taken measurements at 3 values of @xmath9 , 0 , 1.0 and 1.769 .",
    "the latter value is the optimal quenched @xmath9 coefficient taken from ref .",
    "@xcite .    in order to provide both machine independent numbers and real time results on parallel and scalar implementation machines , we will present iteration numbers which _ ( i )",
    "_ are directly proportional to the amount of floating point operations and _ ( ii ) _ real time results from implementations on both the parallel system ape100/quadrics and a sun ultra workstation .    we have applied bicgstab as iterative solver .",
    "the stopping criterion has been chosen as @xmath190 .",
    "we used a local source . at the end of the computation ,",
    "we have checked how far the true residuum deviates from the accumulated one .",
    "in fact , for _",
    "ll_-ssor , the accumulated residuum turned out to deviate only slightly from the corresponding true residuum .",
    "moreover , deviations between the solutions @xmath191 as computed by _ ll_-ssor  and odd - even - preconditioning have been checked .",
    "we found the norms of the solution vectors to differ in the range of @xmath192 .    in a first step",
    ", we have determined the optimal value for the over - relaxation parameter @xmath125 as introduced in eq .",
    "( [ defomega ] ) , see fig .",
    "[ omegaswa ] .",
    "the @xmath125 dependence of the iteration numbers is measured for @xmath193 at a given value for the hopping parameter @xmath194 . at this value ,",
    "the fermion matrix is close to criticality .",
    "-dependence of _ ll_-ssor .",
    "we plot the gain factor between _",
    "ll_-ssor  and odd - even preconditioning . [ omegaswa ] ]    in fig .  [ omegaswa ] , the results from three diagonal block sizes are overlaid , the @xmath195 , @xmath26 , and @xmath196 blocks .",
    "only a weak dependence of the iteration numbers on the block size is visible , however . around @xmath197 a minimum in iteration numbers",
    "is found for @xmath198 . ] .",
    "we have verified that this number holds for the whole @xmath22-range investigated and for the other values of @xmath9 as well .",
    "dependence of _",
    "ll_-ssor  vs.  the odd - even preconditioner for three values of @xmath9 .",
    "[ oessor],title=\"fig : \" ] +   dependence of _ ll_-ssor  vs.  the odd - even preconditioner for three values of @xmath9 .",
    "[ oessor],title=\"fig : \" ] +   dependence of _",
    "ll_-ssor  vs.  the odd - even preconditioner for three values of @xmath9 .",
    "[ oessor],title=\"fig : \" ]    next we benchmark the _ ll_-ssor  preconditioner against the odd - even preconditioner . in fig .",
    "[ oessor ] , the iteration numbers are presented as a function of @xmath22 , separately for the three values chosen for @xmath9 .",
    "we plot the ratio of iteration numbers of the odd - even procedure vs.  _ ll_-ssor . in the last two segments of the figure ,",
    "three block sizes are overlaid .",
    "the improvement of _",
    "ll_-ssor  compared to the odd - even preconditioned system is rather substantial : close to @xmath199 , i.e.  in the region of interest , a factor up to 2.5 in iteration numbers can be found , with increasing tendency when approaching @xmath200 . as far as the dependence of the improvement factor on @xmath9 is concerned , one can not detect a systematic effect .",
    "significant block size dependencies are not visible either . however , in the actual time measurements on ape100 to be shown below , we will find the @xmath26 local diagonal block procedure to perform best .",
    "the above results have been achieved on a machine equipped with @xmath201 processors . with @xmath202 being",
    "the number of sites on the lattice the sub - lattices comprise @xmath203 sites each . as the regions which are treated independently in the preconditioning process are as large as the size of a sub - lattice assigned to a given processor , the parallelism of the preconditioner follows the number of processors @xmath204 .",
    "the larger the sub - lattices the better is the improvement factor @xcite , since the applicability of the _ ll_-ssor  preconditioner seems to be limited to low granularity . however , it turns out that on today s machine sizes  ranging from coarse parallelism with @xmath205 processors to massive parallelism with @xmath206 processors  usual lattice sizes lead to sufficiently large sub - lattices to ascertain effectively parallel preconditioning . for the @xmath26 diagonal block _ ll_-ssor  procedure ,",
    "we have investigated the local lattice size dependence working on four different ape100/quadrics systems @xcite , a 32-node q4 , a 128-node qh1 , a 256-node qh2 , and a 512-node qh4 . for a given lattice size",
    ", the sub - lattice sizes follow the inverse number of nodes . in the range investigated , the improvement varies by about 10 % .    ]    going to the most effective @xmath207 limit , in fact , the _ ll_-ssor   preconditioner is identical to the ssor preconditioner which , for @xmath208 , is equivalent . ] to an incomplete lu preconditioning , introduced by oyanagi @xcite . in fig .",
    "[ oeoyanagi ] , we present the ensuing improvement factor for the iteration numbers as a function of @xmath22 for the three values of @xmath9 , again plotting the gain factor between _ ll_-ssor  and odd - even results ( @xmath197 ) .",
    "dependence of ssor peconditioning _ vs.  _ odd - even preconditioning for three values of @xmath9 .",
    "[ oeoyanagi],title=\"fig : \" ] +   dependence of ssor peconditioning _ vs.  _ odd - even preconditioning for three values of @xmath9 .",
    "[ oeoyanagi],title=\"fig : \" ] +   dependence of ssor peconditioning _ vs.  _ odd - even preconditioning for three values of @xmath9 .",
    "[ oeoyanagi],title=\"fig : \" ]    as already demonstrated , the gain - factor of ssor compared to the odd - even preconditioned system is larger here than for parallel _ ll_-ssor .",
    "close to @xmath200 , we can verify a factor of up to 3 for iteration numbers with increasing tendency going towards @xmath200 .",
    "thus , the improvement factors reported in refs .  @xcite and @xcite for standard wilson fermions are confirmed for swa .",
    "again , as to the dependence of the improvement factor on @xmath9 , one can not find a significant variation .    finally , on the ape100/quadrics parallel system @xcite , we have implemented and optimized both _",
    "ll_-ssor  and odd - even preconditioners in order to compare real costs .",
    "following the above results , we measured at @xmath197 , @xmath194 and @xmath193 .",
    "in the case of _",
    "ll_-ssor  we applied the local diagonal block procedure for @xmath195 , @xmath209 , and @xmath196 blocks .",
    "additionally , as for the odd - even preconditioner , we performed a pre - inversion of the local @xmath210 blocks .",
    "however , we remark that these blocks require a memory expense of a factor of 9 compared to the non - blocked version .",
    "although one does not achieve an improvement in iteration numbers between @xmath195 and @xmath14 blocks , it turns out to be advantageous to choose a specific block size for a given implementation machine . for ape100",
    ", the optimal block size is a @xmath26 block .",
    "the results are plotted in fig .",
    "[ timessor ] .",
    "the corresponding results as achieved on a sun ultra are given in fig .",
    "[ timesun ] .    ]    ]    on the scalar system , the gain factor in iteration numbers fully pays off for the diagonal @xmath195 algorithm .",
    "it is not surprising that the gain becomes smaller for the larger diagonal blocks since larger blocks means more compute operations .",
    "the application of the ssor principle to solve the system  including the non - trivial diagonal  completely and thus avoiding its explicit pre - inversion , turns out to be most effective .",
    "we note that on scalar machines the gain in iteration numbers fully translates into a gain in compute time . on ape100/quadrics ,",
    "the improvement gain is deteriorated by intensive integer operations , a weak point of ape100 .",
    "the hf action has been rendered gauge invariant ` by hand ' similar to the procedures in ref .",
    "@xcite . as such",
    "it is , strictly speaking , not even truncated perfect , however , its coupling structure is similar to the structure of the latter .",
    "so far we have implemented and tested ssor preconditioning for hf on a scalar machine .",
    "we have already mentioned that the number of su(3 ) matrices per site to be stored is increased by a factor of 5 compared to clover fermions .",
    "limited by the number of hyper - links to store , we decided to investigate hf on a lattice of size @xmath18 .",
    "our implementation on a sun ultra has been written in fortran90 .",
    "we measured at @xmath1 in quenched qcd .",
    "first , we tried to assess the critical mass parameter , in order to determine the critical region of hf .",
    "we used a method introduced in ref .",
    "@xcite which makes use of the dependence of cg iterations on the condition number of the matrix , cf .",
    "[ perfect : kc ] .",
    "by use of cg inversions .",
    "[ perfect : kc ] ]    close to the critical mass @xmath199 we have assessed the optimal over - relaxation parameter @xmath125 for the ssor method , see fig .",
    "[ perfect : om ] .",
    "here and in the following we compare the result with the unpreconditioned bicgstab solution since simple odd - even preconditioning can not be applied in the case of hf . as a result",
    ", we chose @xmath211 .",
    "[ perfect : dep ] presents our findings for the iteration numbers as a function of @xmath56 .    .",
    "[ perfect : om ] ]    .",
    "we show both ( a ) the iteration numbers of the non - preconditioned case _ vs. _ the _ ll_-ssor  preconditioned results and ( b ) the corresponding gain factor in time .",
    "[ perfect : dep],title=\"fig : \" ] + . we show both ( a ) the iteration numbers of the non - preconditioned case _ vs. _ the _ ll_-ssor  preconditioned results and ( b ) the corresponding gain factor in time .",
    "[ perfect : dep],title=\"fig : \" ]    so far , we conclude that ssor preconditioning of the hf action , gauged by hand , leads to gain factors up to 4 close to the critical mass parameter @xmath212 . however , we regard the specific form of hf as a preliminary test case only since a consistent derivation of tpa includes clover - leaf like terms .    in view of the tremendous compute effort ,",
    "exceeding that of wilson fermions by a factor of more than 10 , we regard preconditioning as a mandatory prerequisite for hf to become competitive with traditional fermion discretizations .",
    "this conclusion applies equally well to other variants of hf .",
    "as far as the storage requirements are concerned , again a factor of 10 is found which can not be avoided . for a given memory limit , this translates into a factor of 0.56 in linear lattice size or 1.8 in scale compared to wilson fermions .",
    "thus , from a technical point of view , hf would in principle pay off if their reduced scaling violations allow coarsening by a factor of 1.8 .",
    "this is a question for future investigations where we will include a perfect truncated gluonic action together with a full - fledged tpa .",
    "we have constructed _ locally - lexicographic ssor preconditioners _ for inversions of linear systems of equations from two improved fermionic actions , the sheikholeslami - wohlert - wilson scheme with non - constant block - diagonal and renormalization group improved hypercube fermions , with interaction gauged _ ad hoc_.    for swa we find the block _ ll_-ssor - scheme to be more effective by factors up to 2.5 compared to odd - even preconditioned solvers . for hf we have demonstrated that ssor preconditioning accelerates the iterative solver by a factor of 3 to 4 compared to the non - preconditioned system .",
    "we believe that the improvement for hf will translate also into other tpa with interaction derived from renormalization group transformations ."
  ],
  "abstract_text": [
    "<S> we construct a _ locally - lexicographic ssor preconditioner _ to accelerate the parallel iterative solution of linear systems of equations for two improved discretizations of lattice fermions : ( _ i _ ) the sheikholeslami - wohlert scheme where a non - constant block - diagonal term is added to the wilson fermion matrix and _ ( ii ) _ renormalization group improved actions which incorporate couplings beyond nearest neighbors of the lattice fermion fields . in case </S>",
    "<S> ( _ i _ ) we find the block _ ll_-ssor - scheme to be more effective by a factor @xmath0 than odd - even preconditioned solvers in terms of convergence rates , at @xmath1 . for type ( _ ii _ ) actions , we show that our preconditioner accelerates the iterative solution of a linear system of hypercube fermions by a factor of 3 to 4 .    </S>",
    "<S> lattice qcd , improved actions , perfect actions , hypercube fermions , ssor preconditioning </S>"
  ]
}
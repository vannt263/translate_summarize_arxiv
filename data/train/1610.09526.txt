{
  "article_text": [
    "the rapid proliferation of smart mobile devices has triggered an unprecedented growth of the global mobile data traffic .",
    "recently , caching at base stations ( bss ) has been proposed as a promising approach for massive content delivery by reducing the distance between popular files and their requesters . as the cache size is limited in general , designing caching strategies",
    "appropriately is a prerequisite for efficient content dissemination . in @xcite ,",
    "the authors consider identical caching at bss ( i.e. , all bss store the same set of the most popular files ) , and analyze the outage probability and average rate . in @xcite ,",
    "the authors consider random caching with files being stored at each bs in an i.i.d . manner . in @xcite ,",
    "the authors consider random caching and multicasting on the basis of file combinations , and analyze and optimize the joint design .",
    "note that the identical caching design in @xcite can not provide file diversity at different bss , and hence may not sufficiently exploit storage resources .",
    "the random caching designs in @xcite can provide file diversity .",
    "however , a file transmission may not fully benefit from the file diversity provided by the random caching designs in @xcite , when the serving bs is not the nearest bs of the file requester .",
    "note that the caching designs proposed in @xcite focus on storing entire files at each bs . on the other hand , in @xcite ,",
    "to further improve file diversity , files are partitioned into multiple subfiles , and each bs may store a uncoded or coded subfile of a file .",
    "references @xcite consider caching coded subfiles .",
    "for instance , in @xcite and @xcite , network coding - based caching designs are proposed and analyzed . in @xcite ,",
    "the authors propose a mds - based caching design , and consider the analysis and optimization of the backhaul rate . in @xcite ,",
    "the authors propose a partition - based uncoded caching design and employ successive interference cancelation ( sic ) at each user to enable parallel subfile transmissions .",
    "note that the network coding - based caching designs proposed in @xcite are restricted to a single file and can not be directly applied to the practical scenario with multiple files .",
    "in addition , the coded caching designs in @xcite do not consider the delivery of the cached files .",
    "hence , it is unclear how these designs affect ultimate user experiences .",
    "reference @xcite considers the delivery of the cached files .",
    "but the partition - based uncoded caching design in @xcite may not sufficiently exploit storage resources . in summary ,",
    "further studies are required to understand the fundamental impacts of communication , caching and computation ( e.g. , sic ) capabilities on network performance .    in this paper",
    ", we would like to address the above issues .",
    "we consider a reasonable cache - enabled wireless network model with multiple files and random channel fading as well as stochastic geographic locations of bss .",
    "we propose a random liner network coding - based caching design with a design parameter and adopt sic to decode multiple coded subfiles for recovering a requested file . utilizing tools from stochastic geometry , we derive a tractable expression for the successful transmission probability in the general file size regime . to further obtain design insights , we derive closed - form expressions for the successful transmission probability in the small and large file size regimes , respectively , utilizing series expansion of some special functions .",
    "then , we consider the successful transmission probability maximization in the general file size regime , which is a complex discrete optimization problem . by exploring structural properties ,",
    "we propose a two - stage optimization framework to obtain a near optimal solution with superior performance and manageable complexity .",
    "we also obtain closed - form asymptotically optimal solutions in the small and large file size regimes , respectively .",
    "the analysis and optimization results reveal that the network coding - based caching significantly facilitates content dissemination when the file size is small or moderate , while caching the most popular files greatly helps content dissemination when the file size is large .",
    "in addition , in the small file size regime , the optimal successful transmission probability increases with the cache size and the sic capability . while , in the large file size regime , the optimal successful transmission probability increases with the cache size and is not affected by the sic capability .",
    "finally , by numerical results , we show that the proposed near optimal caching design achieves a significant performance gain over some baseline caching designs .",
    "we consider a large - scale wireless network , as shown in fig .",
    "[ fig : system ] . the locations of the base stations ( bss )",
    "are spatially distributed as a two - dimensional homogeneous poisson point process ( ppp ) @xmath0 with density @xmath1 .",
    "we focus on a typical user @xmath2 , which we assume without loss of generality ( w.l.o.g . ) to be located at the origin .",
    "we enumerate the bss with respect to their distances to @xmath2 starting with the bs nearest to @xmath2 .",
    "the indices of the bss from the nearest one to the farthest one are denoted as @xmath3 and @xmath4 .",
    "let @xmath5 denote the distance between bs @xmath6 and @xmath2 .",
    "thus , we have @xmath7 .",
    "we consider the downlink transmission .",
    "each bs has one transmit antenna and transmits with power @xmath8 over bandwidth @xmath9 .",
    "each user has one receive antenna .",
    "consider a discrete - time system with time being slotted .",
    "the duration of each time slot is @xmath10 seconds .",
    "we study one slot of the network .",
    "we consider both path loss and small - scale fading .",
    "specifically , due to path loss , transmitted signals with distance @xmath11 are attenuated by a factor @xmath12 , where @xmath13 is the path loss exponent . for small - scale fading , we assume rayleigh fading , i.e. , each small - scale channel @xmath14 .",
    "let @xmath15 denote the set of @xmath16 files in the network .",
    "for ease of illustration , we assume that all files have the same size of @xmath17 bits .",
    "each file is of certain popularity . @xmath2",
    "randomly requests one file , which is file @xmath18 with probability @xmath19 , where @xmath20 .",
    "thus , the file popularity distribution is given by @xmath21 , which is assumed to be known apriori .",
    "in addition , w.l.o.g . , we assume @xmath22 .",
    "the network consists of cache - enabled bss .",
    "in particular , each bs is equipped with a cache of size @xmath23 ( in files ) , i.e. , @xmath24 ( in bits ) .",
    "assume each bs can not store all files in @xmath25 due to the limited storage capacity , i.e. , @xmath26 .",
    "we propose a random linear network coding - based caching design parameterized by @xmath27 , where @xmath28 here , @xmath29 denotes the set of positive integers .",
    "we now interpret the design parameter @xmath30 .",
    "consider file @xmath31 .",
    "( i ) if @xmath32 , file @xmath31 is not stored at any bs .",
    "( ii ) if @xmath33 , file @xmath31 is stored at each bs .",
    "( iii ) if @xmath34 , file @xmath31 is partitioned into @xmath35 subfiles , each of @xmath36 bits , and each bs stores a random linear combination of all the @xmath35 subfiles of file @xmath31 , i.e. , a coded subfile of file @xmath31 which is of @xmath36 bits , using random linear network coding .",
    "@xmath37 represents the amount of storage ( in files ) allocated to file @xmath38 at each bs .",
    "we consider random linear network coding over a large field , and assume that file @xmath31 can be decoded from any @xmath35 coded subfiles of file @xmath31 stored in the network . for notation convenience , denote @xmath39 for all @xmath38 .",
    "note that @xmath40 indicates that file @xmath31 is not stored at any bs .",
    "the design parameter @xmath30 of a feasible caching design satisfies the following constraint @xmath41      we now introduce the file transmission strategy , as illustrated in fig .",
    "[ fig : system ] .",
    "suppose @xmath2 requests file @xmath31 .",
    "( i ) if @xmath32 , @xmath2 can not obtain file @xmath31 from the cache of the network . may be served through other service mechanisms . for example",
    ", bss can fetch some uncached files from the core network through backhaul links and transmit them over other reserved frequency bands .",
    "the service of uncached files may involve backhaul cost or extra delay .",
    "the investigation of service mechanisms for uncached files is beyond the scope of this paper . ]",
    "( ii ) if @xmath33 , the nearest bs transmits the uncoded file @xmath31 to @xmath2 over the whole bandwidth and time slot .",
    "( iii ) if @xmath34 , each of the @xmath42 nearest bss ( i.e. , each bs in @xmath43 ) transmits the coded subfile of file @xmath31 stored locally to @xmath2 over the whole bandwidth and time slot . in this paper",
    ", we consider an interference - limited network and neglect the background thermal noise .",
    "we assume all bss are active for serving their own users .",
    "thus , the received signal of @xmath2 is given by @xmath44 where @xmath5 is the distance between bs @xmath6 and @xmath2 , @xmath45 is the small - scale channel between bs @xmath6 and @xmath2 , @xmath46 is the transmit signal from bs @xmath6 .",
    "the first sum in represents the desired signal , and the second sum in represents the interference . to obtain the @xmath42 subfiles for recovering file @xmath31",
    ", @xmath2 needs to decode the @xmath42 signals from @xmath47 .",
    "thus , we adopt sic . as in @xcite , we consider the distance - based decoding and cancelation order .",
    "in particular , when decoding the signal from bs @xmath48 , all signals from the nearer bss in @xmath49 need to be successfully decoded and canceled .",
    "the signal - to - interference ratio ( sir ) of the signal from bs @xmath50 after successfully decoding and canceling the signals from the nearer bss in @xmath49 is given by @xmath51 where @xmath52 denotes the interference in decoding the signal from bs @xmath6 . if @xmath53 , @xmath2 can successfully decode ( and cancel ) the signal from bs @xmath6 .",
    "due to the limited computational capability and the delay constraint of @xmath2 , as in @xcite , we assume that @xmath2 has limited sic capability @xmath54 .",
    "that is , @xmath2 can perform decoding and cancelation for at most @xmath54 times to obtain its desired signals .",
    "denote @xmath55 and @xmath56 .",
    "therefore , it is possible for @xmath2 to obtain file @xmath31 only when @xmath57 .",
    "requesters are mostly concerned about whether their desired files can be successfully received .",
    "therefore , in this paper , we consider the successful transmission probability of a file randomly requested by @xmath2 as the network performance metric . according to the file transmission and reception strategy discussed in section [ subsec : file_transmission_and_reception ] ,",
    "the successful transmission probability of file @xmath31 requested by @xmath2 is given by @xmath58,\\notag\\\\ & \\hspace{66mm}\\ n\\in\\mathcal n.\\notag\\end{aligned}\\ ] ] according to the total probability theorem , the successful transmission probability of a file randomly requested by @xmath2 is given by @xmath59",
    "in this section , we analyze the successful transmission probabilities for a given design parameter @xmath30 in the general file size regime , the small file size regime and the large file size regime , respectively .      the calculation of @xmath60 requires the conditional joint probability density function of @xmath61 conditioned on the distances @xmath62 , which is difficult to obtain . as in @xcite",
    ", we assume the independence between the events @xmath63 .",
    "different from @xcite , here , @xmath2 requesting file @xmath31 needs to decode multiple signals from the received signal to recover file @xmath31 .",
    "the successful transmission probability under the proposed caching design is given below .",
    "[ thm : cp_close_form_dist_order ] the successful transmission probability @xmath64 is given by @xmath65 where @xmath66}{\\left(1+\\frac{2}{\\alpha}(2^{\\frac{s_ns}{tw}}-1)^{\\frac{2}{\\alpha } } b'\\left(\\frac{2}{\\alpha},1-\\frac{2}{\\alpha},2^{-\\frac{s_ns}{tw}}\\right)\\right)^{\\frac{s_n+1}{2s_n^2}}}.\\label{eqn : f^c}\\end{aligned}\\ ] ] here , @xmath67 $ ] denotes the indicator function , and @xmath68 is the complementary incomplete beta function .    from theorem [ thm : cp_close_form_dist_order ] , we can see that the successful transmission probability is a decreasing function of file size @xmath17 .",
    "the impact of the design parameter @xmath30 on the successful transmission probability is not obvious .",
    "[ fig : verification_anal_mc ] plots the successful transmission probability versus file size @xmath17 at different @xmath30 . fig .",
    "[ fig : verification_anal_mc ] verifies theorem [ thm : cp_close_form_dist_order ] and demonstrates the accuracy of the approximation adopted .",
    "in addition , from fig .",
    "[ fig : verification_anal_mc ] , we can see that the successful transmission probability decreases as the file size increases .",
    "the impact of the design parameter @xmath30 on the successful transmission probability may be different at different file sizes . to further obtain design insights , in the following , we analyze the asymptotic successful transmission probabilities in the small file size regime and the large file size regime , respectively .    .",
    "@xmath69 , @xmath70 , @xmath71 , @xmath72mhz , @xmath73s and @xmath74 .",
    "consider zipf distribution @xmath75 , @xmath76.,width=283 ]      in this part , we analyze the successful transmission probability in the small file size regime , i.e. , @xmath77 . utilizing series expansion of some special functions , from theorem [ thm : cp_close_form_dist_order ] ,",
    "we derive the asymptotic successful transmission probability in the small file size regime as follows .",
    "[ lem : cp_asymp_0 ] as @xmath77 , we have @xmath78 , means @xmath79 . ] where @xmath80-s\\sum_{n\\in\\mathcal n}\\frac{{\\rm ln}(2)(s_n+1)a_n}{(\\alpha-2)s_nwt}\\mathbf 1\\left[s_n\\in\\mathcal s\\right].\\label{eqn : cp_coding_caching_aympt_0}\\end{aligned}\\ ] ]    from lemma [ lem : cp_asymp_0 ] , we know that @xmath81 $ ] , and @xmath82 increases linearly to @xmath83 $ ] as @xmath17 decreases to @xmath84 .",
    "in addition , the design parameter @xmath30 affects the asymptotic behavior of the successful transmission probability in the small file size regime by affecting the the limit of @xmath82 and the coefficient of @xmath17 .",
    "[ fig : asymp_stp ] ( a ) plots the successful transmission probability versus file size @xmath17 in the small file size regime .",
    "we see from fig .",
    "[ fig : asymp_stp ] ( a ) that when the file size is small , the  general \" curves , which are plotted using theorem [ thm : cp_close_form_dist_order ] , are reasonably close to the  asymptotic \" curves , which are plotted using lemma [ lem : cp_asymp_0 ] .",
    "thus , fig .",
    "[ fig : asymp_stp ] ( a ) verifies lemma [ lem : cp_asymp_0 ] .      in this part",
    ", we analyze the successful transmission probability in the large file size regime , i.e. , @xmath85 . utilizing series expansion of some special functions , from theorem [ thm : cp_close_form_dist_order ] ,",
    "we derive the asymptotic successful transmission probability in the large file size regime as follows .",
    "[ lem : cp_asymp_cp ] as @xmath85 , we have @xmath86 , means @xmath87 . ]",
    "where @xmath88}{\\left(\\frac{2}{\\alpha } b\\left(\\frac{2}{\\alpha},1-\\frac{2}{\\alpha}\\right)\\right)^{\\frac{s_{\\rm max}+1}{2s_{\\rm max}^2 } } } \\;.\\label{eqn : cp_coding_caching_aympt}\\end{aligned}\\ ] ] here , @xmath89 and @xmath90 is the beta function .    from lemma [ lem : cp_asymp_cp ] , we know that @xmath91 , and @xmath92 decreases exponentially to @xmath84 as @xmath17 increases to @xmath93 .",
    "in addition , the design parameter @xmath30 affects the asymptotic behavior of the successful transmission probability in the large file size regime in the form of @xmath94 only .",
    "[ fig : asymp_stp ] ( b ) plots the successful transmission probability versus file size @xmath17 in the large file size regime .",
    "we see from fig .",
    "[ fig : asymp_stp ] ( b ) that when the file size is large , the  general \" curves , which are plotted using theorem [ thm : cp_close_form_dist_order ] , are reasonably close to the  asymptotic \" curves , which are plotted using lemma [ lem : cp_asymp_cp ] .",
    "thus , fig[fig : asymp_stp ] ( b ) verifies lemma [ lem : cp_asymp_cp ] .",
    "in this section , we formulate the successful transmission probability maximization problems and obtain the optimal caching designs in the general file size regime , the small file size regime and the large file size regime , respectively .",
    "the caching design affects the successful transmission probability @xmath64 via design parameter @xmath30 .",
    "we would like to maximize @xmath64 by carefully optimizing @xmath30 in the general file size regime .",
    "[ caching design in general file size regime][prob : opt_coding ] @xmath95 where @xmath64 is given by .",
    "let @xmath96 denote the optimal solution .    note that problem [ prob : opt_coding ] is a challenging discrete optimization problem with a complex objective function .",
    "the number of possible choices for @xmath30 is given by @xmath97 .",
    "thus , a brute - force solution to problem [ prob : opt_coding ] , i.e. , exhaustive search , is not acceptable when @xmath16 and @xmath54 are large .",
    "in addition , a naive greedy solution , i.e. , storing the @xmath23 most popular uncoded files at each bs , can not guarantee good performance in general , due to the lack of file diversity , as illustrated in @xcite .",
    "we aim to obtain a low - complexity solution with superior performance , by carefully exploiting structural properties of problem [ prob : opt_coding ] .",
    "in particular , we propose a two - stage optimization framework to obtain a near optimal solution to problem [ prob : opt_coding ] . in the first stage , we construct a feasible solution to problem 1 based on an optimal solution to its relaxed linear optimization problem . in the second stage , we use a greedy method to obtain an improved solution based on the feasible solution obtained in the first stage .",
    "the two - stage optimization framework is summarized in algorithm  [ alg : two_stage ] .",
    "the details are given below .",
    "instead of using parameter @xmath30 , we introduce an @xmath98 matrix @xmath99 to specify the proposed caching design equivalently , where @xmath100 .",
    "in particular , we set @xmath101 if and only if @xmath102 , and @xmath103 otherwise .",
    "note that the constraints on @xmath30 in and are equivalent to the following constraints on @xmath104 @xmath105 note that @xmath106 indicates that file @xmath31 is stored in the wireless network , and @xmath107 otherwise .",
    "@xmath108 represents the amount of storage allocated to file @xmath31 at each bs .",
    "that is , file @xmath31 is partitioned into @xmath109 subfiles , and each bs stores a coded subfile of file @xmath31 .",
    "then , by relaxing @xmath100 to @xmath110,\\ ; n\\in \\mathcal n , m\\in\\mathcal m,\\label{eqn : interval_constraint}\\end{aligned}\\ ] ] we obtain the following relaxed problem of problem [ prob : opt_coding ] .",
    "[ continuous relaxation of problem [ prob : opt_coding]][prob : opt_equi_contin ] @xmath111 where @xmath112 is given by .",
    "let @xmath113 denote the optimal solution .",
    "problem [ prob : opt_equi_contin ] is a standard linear optimization problem . we can apply simplex method or interior point method to obtain an optimal solution @xmath113 to problem [ prob : opt_equi_contin ] efficiently .",
    "note that @xmath114 is not an integer .",
    "based on the optimal solution @xmath113 , we now construct a binary feasible solution @xmath115 to problem [ prob : opt_equi_contin ] ( corresponding to a feasible solution to problem [ prob : opt_coding ] ) , where @xmath116 here , @xmath117 denotes the smallest integer greater than or equal to @xmath118 .",
    "indicates that under the binary feasible solution @xmath119 , file @xmath31 takes the largest amount of storage smaller than or equal to that under the continuous optimal solution @xmath113 .",
    "thus , the total amount of occupied storage under the binary feasible solution @xmath119 is smaller than or equal to that under @xmath113 .      for any binary feasible solution @xmath104 to problem [ prob : opt_equi_contin ] , define @xmath120 note that @xmath121 can be treated as the unused storage for binary feasible solution @xmath104 , and can be further utilized to improve the performance .",
    "( i ) if file @xmath31 is not stored in the wireless network ( i.e. , @xmath107 ) and @xmath122 , we can increase the amount of storage allocated to file @xmath31 from @xmath84 to @xmath123 by setting @xmath124 and keeping @xmath125 for all @xmath126 , @xmath127 unchanged . in this case , the unused storage of @xmath123 is utilized to achieve a performance increase of @xmath128 .",
    "( ii ) if a coded subfile of file @xmath31 is stored at each bs ( i.e. , there exists an integer @xmath129 such that @xmath130 ) and @xmath131 , we can increase the amount of storage allocated to file @xmath31 from @xmath132 to @xmath133 by setting @xmath134 , @xmath135 and keeping @xmath125 for all @xmath126 , @xmath136 unchanged . in this case , the unused storage of @xmath137 is utilized to achieve a performance increase of @xmath138 .",
    "( iii ) otherwise , we can not increase the amount of storage allocated to file @xmath31 .",
    "therefore , we define the increase rate of the successful transmission probability at @xmath104 as @xmath139 , which is given in , as shown at the top of the next page , by allocating some ( or all ) of the unused storage @xmath121 to file @xmath31 .",
    "@xmath140    now , we propose a greedy method to improve the successful transmission probability of @xmath119 obtained in stage i by gradually utilizing unused storage @xmath141 ) .",
    "in particular , at each step , for given binary feasible solution @xmath104 , we calculate the increase rate @xmath139 for all @xmath38 and obtain @xmath142 .",
    "if @xmath143 , we allocate some of the unused storage @xmath121 to file @xmath144 . if @xmath145 , the greedy method terminates",
    "the greedy method is illustrated in steps 3 - 12 of algorithm [ alg : two_stage ] .",
    "obtain the optimal solution @xmath113 to problem [ prob : opt_equi_contin ] using simplex method or interior point method .",
    "obtain a binary feasible solution @xmath119 to problem [ prob : opt_equi_contin ] using .",
    "set @xmath146 and @xmath147 .",
    "calculate unused storage @xmath121 by .",
    "calculate increase rate @xmath139 for all @xmath38 , and obtain @xmath148 .",
    "set @xmath149 and @xmath150 .",
    "@xmath151    [ alg : two_stage ]      in this part , we consider the optimization of the asymptotic successful transmission probability in the small file size regime .",
    "[ caching design in small file size regime][prob : opt_coding_asymp_0 ] @xmath152 where @xmath82 is given by .    by exploring structural properties of @xmath82 , we can obtain the optimal caching design in the small file size regime .",
    "[ lem : opt_asymp_0 ] suppose @xmath153 .",
    "there exists @xmath154 , such that for all @xmath155 , the optimal solution to problem [ prob : opt_coding_asymp_0 ] is given by @xmath156 and the optimal value to problem [ prob : opt_coding_asymp_0 ] is given by @xmath157    lemma [ lem : opt_asymp_0 ] indicates that in the small file size regime , when @xmath153 , it is optimal to allocate the storage of each bs equally to the most @xmath158 popular files .",
    "that is , each of the most @xmath158 popular files is partitioned into @xmath54 subfiles ( each of @xmath159 bits ) , and each bs stores a coded subfile ( of @xmath159 bits ) of each of the most @xmath158 popular files .",
    "the reason is as follows . in the small file size regime ,",
    "the probability that @xmath2 can decode the signal from each of the @xmath54 nearest bss is high , and allocating the storage of each of the @xmath54 nearest bss equally to @xmath158 files maximizes the number of files that can be successfully decoded by @xmath2 .",
    "thus , storing the most @xmath158 popular files obviously maximizes the successful transmission probability .",
    "in addition , lemma [ lem : opt_asymp_0 ] reveals that in the small file size regime , the optimal successful transmission probability increases with the product of the cache size and sic capability , i.e. , @xmath158 .",
    "in this part , we consider the optimization of the asymptotic successful transmission probability in the large file size regime .",
    "[ caching design in large file size regime][prob : opt_coding_asymp_infty ] @xmath160 where @xmath92 is given by .    by exploring structural properties of @xmath92 , we can obtain the optimal caching design in the large file size regime .",
    "[ lem : opt_asymp_infty ] there exists @xmath161 , such that for all @xmath162 , the optimal solution to problem [ prob : opt_coding_asymp_infty ] is given by @xmath163 and the optimal value to problem [ prob : opt_coding_asymp_infty ] is given by @xmath164    lemma [ lem : opt_asymp_infty ] indicates that in the large file size regime , it is optimal to allocate the storage of each bs equally to the most @xmath23 popular files .",
    "that is , each bs stores each of the most @xmath23 popular ( uncoded ) files .",
    "the reason is as follows . in the large file size regime ,",
    "the probability that @xmath2 can decode the signal from any bs besides the nearest one is very small .",
    "allocating the storage of the nearest bs to @xmath23 uncoded files maximizes the number of files that can be successfully decoded by @xmath2 . storing the most @xmath23 popular files",
    "obviously maximizes the successful transmission probability .",
    "in addition , lemma  [ lem : opt_asymp_infty ] reveals that in the large file size regime , the optimal successful transmission probability increases with cache size @xmath23 and is not affected by sic capability @xmath54 .    .",
    "@xmath165 , @xmath166 , @xmath71 , @xmath72mhz , @xmath73s and @xmath167 .",
    "consider zipf distribution @xmath75 with @xmath76.,width=283 ]    now , we use a numerical example to compare the optimal solution obtained by exhaustive search and the proposed near optimal solution obtained by algorithm [ alg : two_stage ] in both successful transmission probability and computational complexity .",
    "we also use this example to verify the asymptotically optimal solutions obtained in lemmas [ lem : opt_asymp_0 ] and [ lem : opt_asymp_infty ] in the asymptotic file size regimes .",
    "[ fig : compare_asymp_opt_and_opt ] plots the successful transmission probability versus file size @xmath17 .",
    "we can see that the successful transmission probability of the proposed near optimal solution is very close to that of the optimal solution . while , the average computation time for the optimal solution is @xmath168 times of that for the near optimal solution .",
    "this demonstrates the applicability and effectiveness of the near optimal solution .",
    "in addition , we can see that the successful transmission probabilities of the asymptotically optimal solutions obtained by lemmas [ lem : opt_asymp_0 ] and [ lem : opt_asymp_infty ] approach that of the optimal solution in the small and large file size regimes , respectively , verifying lemmas [ lem : opt_asymp_0 ] and [ lem : opt_asymp_infty ] .",
    "in this section , we compare the proposed near optimal network coding - based caching design with two baselines . in the simulation , we assume the popularity follows zipf distribution , i.e. , @xmath169 , where @xmath170 is the zipf exponent .",
    "we choose @xmath165 , @xmath76 , @xmath71 , @xmath72mhz , @xmath73s and @xmath171 bits .",
    "baseline @xmath172 refers to the network coding - based caching design in which the storage of each bs is equally allocated to the most @xmath173 popular files ( i.e. , @xmath174 for @xmath175 , and @xmath32 for @xmath176 ) .",
    "baseline @xmath177 refers to the uncoded caching design in which the most @xmath23 popular uncoded files are stored at each bs ( i.e. , @xmath33 for @xmath178 , and @xmath32 for @xmath179 ) .",
    "fig.[fig : simulation ] illustrates the successful transmission probability versus @xmath54 and @xmath23 .",
    "we can observe that the proposed near optimal caching design significantly outperforms the two baseline designs , and its performance increases much faster with the sic capability and the cache size .",
    "this is because the proposed caching design wisely exploits sic capability and storage resource .",
    "in addition , the proposed caching design and baseline @xmath172 have much better performance than baseline @xmath177 .",
    "this is because the proposed caching design and baseline @xmath172 provide file diversity .",
    "in this paper , we considered the analysis and optimization of a random linear network coding - based caching design in a large - scale sic - enabled wireless network . by utilizing tools from stochastic geometry",
    ", we analyzed the successful transmission probability in the general file size regime and the two asymptotic file size regimes .",
    "then , we considered the successful transmission probability maximization .",
    "we obtained a near optimal solution with superior performance and manageable complexity in the general file size regime .",
    "we also obtained closed - form asymptotically optimal solutions in the small and large file size regimes , respectively .",
    "y.  cui , d.  jiang , and y.  wu , `` analysis and optimization of caching and multicasting in large - scale cache - enabled wireless networks , '' _ ieee trans .",
    "wireless commun .",
    "_ , vol .  15 , no .  7 , pp . 51015112 , jul",
    ". 2016 .",
    "z.  chen , j.  lee , t.  q.  s. quek , and m.  kountouris , `` cooperative caching and transmission design in cluster - centric small cell networks , '' _ corr _ , vol .",
    "abs/1601.00321 , 2016 .",
    "[ online ] .",
    "available : http://arxiv.org/abs/1601.00321    m.  wildemeersch , t.  q.  s. quek , m.  kountouris , a.  rabbachin , and c.  h. slump , `` successive interference cancellation in heterogeneous networks , '' _ ieee trans .",
    "_ , vol .",
    "62 , no .  12 , pp .",
    "44404453 , dec . 2014 ."
  ],
  "abstract_text": [
    "<S> network coding - based caching at base stations ( bss ) is a promising caching approach to support massive content delivery over wireless networks . </S>",
    "<S> however , </S>",
    "<S> existing network coding - based caching designs do not fully explore and exploit the potential advantages . in this paper </S>",
    "<S> , we consider the analysis and optimization of a random linear network coding - based caching design in large - scale successive interference cancelation ( sic)-enabled wireless networks . by utilizing tools from stochastic geometry , </S>",
    "<S> we derive a tractable expression for the successful transmission probability in the general file size regime . to further obtain design insights , </S>",
    "<S> we also derive closed - form expressions for the successful transmission probability in the small and large file size regimes , respectively . </S>",
    "<S> then , we consider the successful transmission probability maximization by optimizing a design parameter , which is a complex discrete optimization problem . we propose a two - stage optimization framework and obtain a near optimal solution with superior performance and manageable complexity . </S>",
    "<S> the analysis and optimization results provide valuable design insights for practical cache and sic enabled wireless networks . finally , by numerical results </S>",
    "<S> , we show that the proposed near optimal caching design achieves a significant performance gain over some baseline caching designs .    cache , network coding , successive interference cancelation , stochastic geometry , optimization </S>"
  ]
}
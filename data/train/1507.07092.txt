{
  "article_text": [
    "in this paper we propose and analyse a method to couple two or more numerical schemes which approximate the same time - dependent pde .",
    "the result is a new scheme which inherits advantages ( and drawbacks ) of the original ones . in what follows",
    ", we will discuss how the combination might allow to improve each of the schemes , and try to derive practical coupling strategies .",
    "roughly speaking , we combine the existing schemes by a _ convex combination _ in such a way that each scheme is influenced by the others . in the end , we get as many approximate solutions as the number of the considered schemes , but all of them are modified by the combination . in the basic version of the algorithm the coupling is performed everywhere and at any time",
    ". nevertheless , local ( in space or in time ) couplings are also possible .",
    "for illustrative purposes , we focus on the coupling of two schemes only .",
    "we consider both the case of two macroscopic ( eulerian ) schemes and , more interesting , the case of a microscopic ( lagrangian , particle - based ) scheme blended with a macroscopic scheme . in the latter case",
    "we get a new kind of multiscale numerical method . as a test problem ,",
    "we consider the following advection equation in conservative form @xmath0 u(x,0)=\\bar u(x ) , & x\\in { \\mathbb r}^d , \\end{array } \\right .\\ ] ] where @xmath1 is the initial datum and @xmath2 is a bounded and lipschitz continuous vector field .",
    "this equation describes the transport of a certain amount of mass in @xmath3 , drifted with velocity @xmath4 .",
    "the function @xmath5 represents the _ density _ of such a mass , so that the mass in any set @xmath6 at any time @xmath7 is given by @xmath8 in order to introduce a multiscale framework , it is useful to recast the problem at microscopic scale . denoting by @xmath9 the position of a generic mass particle ,",
    "the lagrangian counterpart of is the ode @xmath10 with suitable initial condition @xmath11 .",
    "the extension to the one - dimensional nonlinear conservation law @xmath12 u(x,0)=\\bar u(x ) , & x\\in { \\mathbb r } , \\end{array } \\right .\\ ] ] will be also discussed .",
    "the coupling idea investigated in this paper can be pursued whenever one has at his disposal two or more numerical schemes with _ complementary advantages and drawbacks _ , resulting in a blended scheme which shows a combination of these features . the idea is mainly inspired by the multiscale technique introduced in @xcite , which can be applied whenever one has two equations modeling the same physical phenomenon at different scales , and the velocity field explicitly appears in both equations .",
    "the blend is obtained by a convex combination of the two velocity fields , an then both the macroscopic density and the microscopic particles are transported by means of the new common multiscale velocity field , which , in turn , depends on both density and positions of the particles . along the same line , the paper @xcite blends the brownian motion with the heat equation .",
    "note that in these papers the goal is to improve the description of some physical phenomenon , by catching at large scale some effects ultimately triggered by small scale features , otherwise invisible .",
    "conversely , in the present paper we blend directly the solutions of the schemes rather than the velocity fields , with the goal of improving the quality of the numerical approximation .",
    "the literature about numerical schemes for the advection equation , including multiscale numerical methods , is huge and a complete review of it is out of the scope of the paper .",
    "we will refer the interested reader to the book @xcite for an introduction to the equations and , and the basic eulerian numerical schemes to solve them .",
    "we also mention the book @xcite for a survey on the best known techniques to couple microscopic and macroscopic descriptions of physical phenomena . in the following",
    "we only discuss the schemes that can be put in relation with the one proposed in this paper .    *",
    "the proposed scheme follows the same philosophy of crank - nicolson method and @xmath13-methods in general .",
    "however , there are two important differences : first , our method is explicit and combines two explicit schemes , while @xmath13-methods always combine the explicit and the implicit version of the same scheme .",
    "second , our method has two free parameters instead of one . * filtered ( hybrid ) schemes @xcite suitably combine a monotone scheme with a high - order scheme , in order to get a high - order approximation minimizing spurious oscillations . in this case",
    "the coupling is restricted to eulerian schemes . *",
    "the particle - in - cell scheme @xcite , often used in plasma physics , combines a lagrangian scheme with an eulerian grid . roughly speaking ,",
    "lagrangian particles are independently tracked , but an underlying grid is used to recover averaged quantities . at each time step , those quantities are used for additional computations which finally give the force acting on each particle . then the procedure is repeated for the next time step .",
    "* the particle level - set ( pls ) method @xcite is a modification of the standard level - set method @xcite for interfaces tracking , introduced to efficiently reduce the numerical diffusion appearing at regions of the evolving front with high curvature .",
    "lagrangian markers are posed in a neighborhood of the interested region , and moved independently by means of a high - order ode solver , according to the characteristic flow of the level - set equation .",
    "whenever a particle escapes from the considered neighbourhood , it means that level - set function describing the front starts to be smeared by the diffusion . escaped particles are then employed to recover the mass loss , i.e. , to locally reinitialize the level - set function . * the smoothed - particle - hydrodynamics ( sph ) method @xcite ( see also the godunov - sph @xcite ) , is an efficient computational method proposed to give some regularity to a purely lagrangian description of a phenomenon .",
    "this is done introducing suitable convolution kernels with compact supports and thinking each lagrangian marker as a time - dependent dirac measure .",
    "it follows that physical macroscopic quantities of interest can be obtained by simply summing the contribution of the sole particles within the cut - off radius of the kernel .",
    "moreover , the spatial derivative of a quantity is easily computed by linearity using the gradient of the kernel .",
    "finally , let us also mention the classical ( w)eno schemes @xcite ( see also ( * ? ? ? * ch .",
    "3 ) ) , which provide high - order accuracy of the numerical solution and can be profitably used as main ingredients of the proposed scheme .      in section [ sec : blendedscheme ] we introduce the blended scheme for equations and , while in section [ sec : theory ] we study its theoretical properties . in section",
    "[ sec : modifiedequation ] we compute the modified equation and we focus on some particular cases . in section [ sec : num_tests ] we present several numerical tests in order to enlighten the features of our approach .",
    "finally , we sketch some conclusions and perspectives .",
    "to avoid cumbersome notations , let us assume @xmath14 , results being easily generalized to any dimension .",
    "in addition , let us consider the coupling of only two numerical schemes .",
    "let @xmath15 $ ] be the domain in which the solution will be computed , with @xmath16 a bounded domain and @xmath17 the final time .",
    "let us introduce a structured grid @xmath18 in @xmath19 and denote by @xmath20 , @xmath21 the grid nodes , by @xmath22 , @xmath23 , respectively , the number of space and time nodes , and by @xmath24 , @xmath25 , respectively , the space and time discretization steps .",
    "the space grid cell is @xmath26 .",
    "let us define the projection on the grid of the exact solution @xmath5 of @xmath27 and in particular the discrete initial condition @xmath28 let us also denote respectively by @xmath29 , @xmath30 two discrete solutions to at @xmath31 , obtained by two ( given ) explicit - in - time numerical schemes of the form @xmath32\\\\ [ 2 mm ] { \\mathcal w}^0=u^0 \\end{array } \\right .",
    ", \\qquad \\left\\ { \\begin{array}{ll } { \\mathcal v}^{n+1}={\\mathcal s}_2[{\\mathcal v}^{n}]\\\\ [ 2 mm ] { \\mathcal v}^0=u^0 \\end{array } \\right . , \\qquad n=0,\\ldots , n_t-1,\\ ] ] where @xmath33 , @xmath34 and @xmath35 .",
    "the treatment of boundary conditions is included in the definitions of the @xmath36 s .",
    "we introduce now the _ blended scheme _ defining the two new discrete solutions @xmath37 and @xmath38 to , with @xmath39 and @xmath40 , by coupling @xmath41 and @xmath42 as follows @xmath43 + ( 1-{\\lambda } ) { \\mathcal s}_2[v^n ] , \\\\ [ 3 mm ] v^{n+1}=(1-{\\mu } ) { \\mathcal s}_1[w^n ] + { \\mu}{\\mathcal s}_2[v^n ] , \\end{array } \\right .",
    "\\qquad n=0,\\ldots , n_t-1 } \\ ] ] for some @xmath44 $ ] and initial conditions @xmath45 as defined in .",
    "the _ coupling parameters _",
    "@xmath46 manage the convex combination between the schemes .",
    "some remarks are in order :    1 .   if @xmath47 the coupling occurs _ at each time step _ , hence we do not get just a trivial interpolation between the two independent numerical approximations . on the contrary , it is quite hard to say which behavior will be actually observed in the end . moreover , there arises a natural question about which couple @xmath48 would lead to the best result . we will try to give a partial answer to this question ; 2 .",
    "if @xmath49 , the two schemes evolve independently and @xmath50 , @xmath51 ; 3 .",
    "if either @xmath52 or @xmath53 , the blend is _ one - way _ and only one solution is affected by the other ; 4 .",
    "if @xmath54 the new scheme alternates the two original schemes at every time step , starting from @xmath42 in the case of @xmath55 and @xmath41 in the case of @xmath56 ; 5 .",
    "if @xmath57 and @xmath58 , reduces to a single two - step scheme @xmath59+(1-{\\lambda}){\\mathcal s}_2[u^0 ] & \\\\ [ 3 mm ] w^{n+1}={\\lambda}{\\mathcal s}_1[w^n]+(1-{\\lambda}){\\mathcal s}_2[{\\mathcal s}_1[w^{n-1 } ] ] , & n\\geq 1 ; \\end{array}\\ ] ] 6 .   if @xmath60 we have @xmath61 and reduces to a single scheme @xmath62 + ( 1-{\\lambda } ) { \\mathcal s}_2[w^n ] , \\qquad n\\geq 0;\\ ] ] 7",
    ".   generalization to multi - blend is straightforward . if we have @xmath63 schemes @xmath64 , the blended scheme is @xmath65\\\\ \\vdots\\\\ { \\mathcal s}_\\mathcal{l}[w^{n,(\\mathcal{l } ) } ] \\end{array } \\right)\\ ] ] where the coupling parameters @xmath66 are such that @xmath67 , for all @xmath68 ; 8 .",
    "a more sophisticated blend could allow @xmath69 to depend on space , time , and the solution itself . in this way we can construct _ ad hoc _ recipes wherever the solution shows some critical behaviour .      in this section",
    "we transform the blended scheme in a multiscale scheme , by choosing an eulerian approximation for @xmath41 ( e.g. , upwind , lax - friedrichs , ( w)eno , godunov , etc . ) and a lagrangian approximation for @xmath42 .",
    "first , we consider a number of lagrangian particles which move in @xmath70 driven by the velocity field @xmath4 .",
    "we assume that , at the initial time @xmath71 , we have @xmath72 particles .",
    "we denote the ( positions of the ) particles at time @xmath7 by @xmath73 , for @xmath74 .",
    "we also denote by @xmath75 the number of particles per cell .      at time @xmath71 , the particles are uniformly placed in @xmath70 , i.e. , @xmath76 moreover , each particle is endowed with a `` weight '' , i.e.  a portion of the mass transported by . denoting by @xmath77 the mass assigned to the @xmath78-th particle at time @xmath7",
    ", we set @xmath79 note that , in a purely lagrangian framework , there is no need to consider a time - dependent mass for each particle because it remains constant during the evolution .",
    "therefore , one can initially distribute the particles in space according to @xmath80 , interpreting the initial condition as the probability density function of the mass . here",
    "instead we define the mass @xmath81 as a time - dependent variable because of the combination with the eulerian part of the algorithm , which will modify the masses at each time step .",
    "note that one can avoid to put particles in regions in which @xmath82 , thus saving cpu time .",
    "for simplicity , we put particles all along @xmath70 , regardless of the values of @xmath80 .",
    "as already mentioned in the introduction , the dynamics of each particle @xmath78 is given by the ode @xmath83 it is then natural to solve by means of an ode solver .",
    "focusing on one - step ode solvers , the general algorithm has the form @xmath84 { \\mathcal p}_\\alpha^0={\\mathcal p}_\\alpha(0 ) , \\end{array } \\right.\\ ] ] where @xmath85 .      in order to combine the approximate eulerian density with the lagrangian computation we need a suitable averaging of the masses of the particles @xmath86 s , so to recover an approximate lagrangian density .",
    "to this end we set @xmath87)_i= \\frac{1}{{\\delta x}}\\sum_{\\alpha\\ \\ ! : \\ \\ !",
    "{ \\mathcal p}_\\alpha^{n+1}\\in c_i } { \\mathcal m}_\\alpha^n.\\ ] ] where @xmath88 .",
    "let us explain this definition : at any time @xmath89 and for any cell @xmath90 , we find the particles falling in the cell @xmath90 , summing all their masses and dividing by the area of the cell .",
    "note that @xmath91 is computed by the updated positions of the particles @xmath92 and the last available values for the masses .",
    "given @xmath93)_i$ ] and @xmath94 as in at any space and time node , we are ready to run the scheme and compute the blended approximations @xmath95 and @xmath96 . however , modifying the lagrangian density ( from @xmath97 to @xmath96 ) leaves the particles unchanged ( both masses @xmath98 and positions @xmath99 ) . since the lagrangian density is computed _ at each time step _ by means of @xmath98 and @xmath99 , see , we are going to lose the coupling effect after every time step . to fix this ,",
    "we adopt the following strategy : at every time step , we modify the masses @xmath100 according to the modified lagrangian density @xmath101 .",
    "more , precisely , we denote by @xmath102 the number of particles falling in the cell @xmath90 at time @xmath89 and update their mass by setting : @xmath103)_i\\big ) , & \\text{if } \\lambda_i^n>0 \\\\ [ 4 mm ] 0 , & \\text{otherwise .",
    "} \\end{array } \\right .\\ ] ] obviously , since the lagrangian density is constant on each cell , all the particles falling in the same cell are equally affected . note that , as opposed to the masses , the positions @xmath86 are not affected by the coupling .",
    "summarizing , the complete algorithm for one time step @xmath104 @xmath105 @xmath106 is the following :    1 .",
    "compute @xmath107)_i$ ] .",
    "2 .   compute @xmath108 by ( all @xmath78 s ) .",
    "3 .   compute @xmath109)_i$ ] by ( all @xmath110 s ) .",
    "4 .   compute @xmath111 and @xmath101 by .",
    "5 .   compute @xmath112 by ( all @xmath78 s ) .",
    "( partial coupling ) if @xmath53 the algorithm simplifies since there is no need to correct the masses , see .",
    "( parallelization ) the lagrangian part of the multiscale algorithm can be easily and efficiently parallelized on both distributed and shared memory architectures since particles do not need to communicate with each other .",
    "in particular it is not needed to find the neighboring particles of each particle ( as required in , e.g. , sph method ) .      in this section",
    "we show how the blended scheme can be extended to equation .",
    "the eulerian - eulerian coupling does not need any modification and then it is no further discussed .",
    "the multiscale coupling ( section [ sec : multiscalecoupling ] ) needs instead some corrections . in conservation laws ,",
    "the velocity @xmath4 of the particles ( not that of the characteristic curves ) can be recovered from the flux @xmath113 as @xmath114 ( if @xmath115 ) and equation must be replaced by @xmath116 this means that the lagrangian scheme needs the density @xmath5 to update the positions of the particles . the blended scheme provides at each time step two approximate densities , namely @xmath55 and @xmath56 .",
    "hence we solve either @xmath117 where @xmath118 is the cell where the @xmath78-th particle falls in at time @xmath89 .",
    "note that , choosing @xmath55 , we introduces an additional coupling : the lagrangian scheme now depends on the eulerian scheme even for an uncoupled evolution @xmath49 .",
    "the blended scheme is actually a _ family _ of numerical schemes indexed by two coupling parameters @xmath119 ^ 2 $ ] .",
    "generally speaking , we expect that only some couples lead to a solution @xmath95 or @xmath96 which is better than both solutions @xmath120 and @xmath121 obtained by the uncoupled schemes .",
    "the question arises how to find an advantageous couple _ a priori _ , before running the computation and without the knowledge of the exact solution . in some simple cases one can compute the optimal parameters analytically , but in general this",
    "is impossible . in order to provide a general method",
    ", we adopt the following strategy .",
    "first of all , let us denote the solutions of the blended scheme by @xmath122 and @xmath123 in order to make it explicit the dependence on the coupling parameters .",
    "moreover , let us define the @xmath124 errors at final time as @xmath125:=\\sum_i \\big|w^{n_t}_i({\\lambda},{\\mu})-u^{n_t}_i\\big|{\\delta x},\\qquad e^1[v({\\lambda},{\\mu})]:=\\sum_i \\big|v^{n_t}_i({\\lambda},{\\mu})-u^{n_t}_i\\big|{\\delta x } , \\end{split}\\ ] ] and define the two optimal @xmath124 couplings as @xmath126,\\qquad ( { \\lambda}^*,{\\mu}^*)_v:=\\arg\\min_{{\\lambda},{\\mu } } e^1[v({\\lambda},{\\mu } ) ] .",
    "\\end{split}\\ ] ] following the classical idea of richardson extrapolation , we can run the blended scheme on two ( coarse ) grids , @xmath127 and @xmath128 , thus obtaining , for each @xmath69 , four solutions @xmath129 , @xmath130 , @xmath131 , and @xmath132 .",
    "then we define the two richardson @xmath124 _ error indicators _ as @xmath133 where @xmath134 gives the best correspondence from node @xmath110 in @xmath127 to a node in @xmath128 . the estimates for @xmath48",
    "are then given by @xmath135    it is possible to avoid an exhaustive search in @xmath136 ^ 2 $ ] in by employing a descend method in the space @xmath69 starting from some initial guess @xmath137 .",
    "one can also progressively refine the grid ( in the space @xmath69 ) around the argmin found in the previous level .",
    "a necessary condition for the method to work is that @xmath48 is stable with respect to the grid size . in section [ sec : num_tests ] we will investigate this property . moreover , we expect the method to be sufficiently fast if performed on very coarse grids , in particular much coarser than the final grid where the actual computation must be performed .",
    "we address in this section the main theoretical issues for the blended scheme solving equation with @xmath14 .",
    "note that , rather than perform a complete convergence analysis ( which apparently requires more technical subtleties ) , we will analyze the scheme in the two situations which seem to be more effective and that are actually used in numerical examples , i.e. , the coupling of two eulerian schemes and the use of a lagrangian scheme to correct an eulerian scheme in a multi - scale approach ( i.e.  @xmath138 and @xmath53 ) .",
    "we first prove that the scheme is conservative , provided the two constitutive schemes are so .",
    "let us use again the notation @xmath139)_i , \\qquad\\qquad \\widehat v_i^{n+1 } = ( { \\mathcal s}_2[v^n])_i\\ ] ] for a single time step of the uncoupled schemes ( with a slight abuse of notation in the case of multiscale algorithm ) .",
    "assume that the solvers are _ conservative _ , i.e. @xmath140 and that @xmath141 then , the scheme is also conservative .    by definition of the scheme and ,",
    "we have @xmath142 so that , using the discrete conservation of both schemes , we have @xmath143 which implies that @xmath144.\\ ] ] the proof is concluded by induction noting that holds .    the previous result remains true if both parameters @xmath145 and @xmath146 depend on the step index @xmath147 , but not if they depend on the cell index @xmath110 .",
    "hereafter we will assume for simplicity that the schemes @xmath148 are linear , so that we can write @xmath149 where @xmath150 are two @xmath151 matrices .",
    "let us also assume that each of the schemes is stable , and in particular that they satisfy @xmath152 with constants @xmath153 independent of @xmath154 and @xmath155 , and for some ( possibly different ) suitable norms @xmath156 @xmath157 which could be required for the convergence analysis of the two schemes ( e.g. , @xmath158-norm for a monotone scheme and @xmath159-norm for a high order scheme ) .",
    "we also assume to use scaled @xmath160 norms defined by @xmath161 now , the scheme can be rewritten in matrix form as @xmath162 where @xmath163 denotes the @xmath151 identity matrix , and @xmath164    in order to analyse convergence for the scheme , we define a suitable norm for the numerical solution @xmath165 in the product space @xmath166 as @xmath167 note that @xmath168 which implies that is stable in the norm @xmath169 , since @xmath170 it is also immediate to verify that is consistent , and therefore convergent .",
    "in fact , assume to work in the norm @xmath169 and apply the usual definition of consistency for a discrete solution at time @xmath89 defined by @xmath171 where @xmath172 is defined in for a smooth @xmath173 .",
    "taken into account that the discretization parameters are @xmath25 , @xmath24 , the scheme is consistent if and only if @xmath174 with @xmath175 for @xmath176 .",
    "now , if the two schemes have respectively truncation errors @xmath177 and @xmath178 , it is immediate to compute @xmath179 and @xmath180 as @xmath181 which results in consistency for the scheme if the two elementary blocks are consistent",
    ". we can therefore conclude with the following    let @xmath182 , @xmath183 satisfy , and , for @xmath184 , @xmath185 then , the blended scheme is convergent in the norm @xmath169 for any @xmath186 $ ] .",
    "we recall that in this case we are assuming that the lagrangian part of the scheme provides a correction for the eulerian part .",
    "this requires to set @xmath187 , whereas @xmath188 $ ] , and in this case we clearly have @xmath189 . in order to have a more explicit notation",
    ", we will denote here the two components of the error at the @xmath147-th time step for the eulerian and the lagrangian part as @xmath190 and @xmath191 , respectively .",
    "we start by computing the error for the pure lagrangian part of the scheme , then we turn to the coupled scheme .",
    "we denote by @xmath193 the mapping between the foot @xmath194 of the _ exact _ characteristic curve at time @xmath71 reaching the point @xmath195 at time @xmath196 ( see fig .  [",
    "fig : map ] ) .    [ cols=\"^ \" , ]",
    "we proposed a new method for coupling two ( or more ) explicit schemes approximating advection equations and scalar conservation laws .",
    "we provided some convergence analysis and we showed that effective couplings can be obtained in practice using a standard richardson extrapolation .",
    "moreover , several numerical tests confirmed that , whenever the constitutive schemes are respectively an eulerian ( macroscopic ) and a lagrangian ( particle based ) scheme , the blended scheme gives rather accurate results despite its eulerian part gives only a low order approximation .",
    "this is a remarkable advantage , since it is well known that implementing high - order solvers is much easier for odes than for pdes .",
    "it is interesting to note that the blended scheme can be put in relation with very different schemes proposed in the literature , see section [ sec : intro ] .    *",
    "if the coupling parameters are allowed to depend on space and/or on the solution itself , we can blend eulerian schemes of different orders to recover the constitutive ideas of the _ filtered schemes_. * coupling an eulerian scheme with a pure lagrangian scheme and localizing particles , we recover a scheme that resembles that of the _ particle level - set method_. * annealing the eulerian scheme but keeping alive the coupling with @xmath197 , we recover a scheme that resembles that of the _ particle - in - cell method_. * the multiscale blended scheme ( with @xmath53 ) seems to follow the opposite philosophy with respect to the _ smoothed - particle hydrodynamics method_. while the latter regularizes the lagrangian solution by a suitable choice of smoothing kernels , the former `` dirac - izes '' the eulerian solution . moreover , the computation of the optimal blending parameter resembles the computation of the optimal supports for the smoothing kernels .",
    "finally , let us mention that one of the most promising and yet unexplored feature of the blended scheme is the _ parallelization on distributed - memory architectures_. particle evolution is indeed embarrassingly parallel ( within a time step ) , since there is no need to locate the neighbouring particles of a given one ( which can be a severe bottleneck if particles live in different memory units ) .",
    "the authors thank r. natalini who , commenting the paper @xcite , one day asked : `` does the microscopic coupling decrease the numerical diffusion ? '' .",
    "e. cristiani also wants to thank s. succi for the motivating discussions and a. di mascio for the useful suggestions ."
  ],
  "abstract_text": [
    "<S> in this paper we propose a method to couple two or more explicit numerical schemes approximating the same time - dependent pde , aiming at creating new schemes which inherit advantages of the original ones . </S>",
    "<S> we consider both advection equations and nonlinear conservation laws . by coupling a macroscopic ( eulerian ) scheme with a microscopic ( lagrangian ) scheme </S>",
    "<S> , we get a new kind of multiscale numerical method . </S>"
  ]
}
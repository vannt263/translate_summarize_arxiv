{
  "article_text": [
    "two - way is a dominant mode of communication in wireless systems , such as in uplink ( ul)/downlink ( dl ) cellular communication .",
    "although the two - way channel is the first known multi - user channel treated in information theory @xcite , the design of two - way links has traditionally been tackled by separating the problem into independent one - way dl and ul problems , respectively , that deal with rate adaptation , scheduling , etc .",
    "nevertheless , recent works @xcite have demonstrated that the presence of interference motivates the joint consideration of ul and dl , since the interference caused by a link on other links is different depending on the direction in which the link is active , i.e. , on which node acts as the transmitter .",
    "specifically , the referenced works have studied dynamic time division duplex ( tdd ) for small - cell wireless systems .",
    "with dynamic tdd , each slot , of possibly different size in the frequency - time plane , can be assigned to either the ul or dl direction , depending on traffic load and interference conditions .",
    "references @xcite and @xcite outline the challenge of managing ul - dl cross - interference in the presence of dynamic tdd .",
    "the works @xcite instead propose centralized and decentralized algorithms that optimize the switching time between ul and dl .",
    "finally , @xcite put forth heuristic solutions for the optimization of ul - dl slot allocation for fixed switching times .    .",
    "]    in this letter we consider a generic collection of two - way links , hence including , e.g. , cellular and/or device - to - device ( d2d ) links , where the traffic load is balanced between the two transmission directions : a slot assigned to one transmission direction is always followed by one allocated to the opposite direction .",
    "this assumption is per definition suitable for applications using interactive communication .",
    "an example setup is given in fig .",
    "[ fig : spinexample1](a ) , that consists of three interfering two - way links operating over two - slot frames , with one slot allocated to each direction as per fig .",
    "[ fig : spinexample1](b ) .",
    "we refer to the binary variable that determines the link direction in the first slot ( the opposite to the one in the second slot ) as the _ interference spin _ of a link ( see precise definition in the next section ) .",
    "this allows us to propose an _ algebraic framework _ for the optimization of two - way scheduling , e.g. , ul - dl slot allocation .",
    "the optimization consists of selecting the interference spins of all @xmath0 links in order to maximize a general sum - utility of the signal - to - noise - plus - interference ratios ( sinrs ) of the two - way links .",
    "the optimal solution has a complexity that scales as @xmath1 .",
    "besides the algebraic framework , our second contribution is a suboptimal , but efficient , algorithm that leverages the representation of the @xmath0 interfering two - way links as a graph of @xmath0 nodes .",
    "the proposed algorithm is based on pruning this topology graph according to a specific criterion and applying dynamic programming .",
    "the algorithm finds a spin configuration that is seen via numerical results to exhibit substantial performance gains over the baseline scheme in which the spins are not optimized .",
    "we consider a set @xmath2 of @xmath0 synchronous two - way links , where the @xmath3th link @xmath4 consists of two half - duplex nodes @xmath5 and @xmath6 .",
    "the labeling of the two nodes in a link @xmath4 as left , @xmath5 , and right , @xmath6 , is arbitrary , see fig .",
    "[ fig : spinexample1 ] .",
    "each link @xmath4 uses tdd , and two - way communication takes place in a frame consisting of two slots .",
    "the first slot is used in one direction , either @xmath7 or @xmath8 , and the successive slot is used in the opposite direction .",
    "related to this , we define _ interference spin _ or , for short , _ spin _ of a link in a given frame : the @xmath3th link @xmath9 is said to have a _ left spin _ or @xmath10spin if @xmath5 transmits in the odd slot and @xmath6 transmits in the even slot ; otherwise the link has a _",
    "right spin _ or @xmath11spin in that frame .",
    "in the example in fig .  [",
    "fig : spinexample1](b ) , the link @xmath12 has a left spin in the first frame and a right spin in the second frame .",
    "the spin of the @xmath3th link is denoted by @xmath13 .",
    "all devices use the same spectrum in a tdd manner , leading to interference among the concurrent link transmissions .",
    "each device is backlogged with data , such that there is transmission in each slot and there is a continuous stream of slots .",
    "all links are slot-/frame - synchronous . considering two links ,",
    "say @xmath14 and @xmath15 , we distinguish the following channel gains , see fig .  [",
    "fig : twopairs ] : ( a ) _ direct channels _ : @xmath16 , @xmath17 , @xmath7 and @xmath8 , whose signal - to - noise ratios ( snrs ) are defined as @xmath18 , @xmath19 , @xmath20 and @xmath21 , respectively ; ( b ) _ interfering channels _ : @xmath22 @xmath23 , @xmath24 and @xmath25 , whose interference - to - noise ratios ( inrs ) are defined as @xmath26 , @xmath27 , @xmath28 and @xmath29 , respectively . the interference from @xmath30 to @xmath31 ,",
    "not depicted in fig .",
    "[ fig : twopairs ] , is represented in a similar manner .",
    "even with perfect channel reciprocity , we generally have @xmath32 and @xmath33@xmath34 , since the nodes at the two ends of a link may use different powers . some of these quantities can be zero : for instance , links may not interfere with each other , e.g. due to obstacles and yield @xmath35@xmath36 .    in order to capture the interference - related features of the network",
    ", we define the undirected _ topology graph _ @xmath37 , where the set of vertices @xmath2 represents the _ links _",
    "@xmath4 , as defined above , and an edge exists in the edge set @xmath38 for a pair of links @xmath39 and @xmath4 in @xmath40 if and only if at least one of the interfering powers @xmath26 , @xmath27 , @xmath28 , @xmath29 , @xmath41 , @xmath34 , @xmath42 and @xmath43 is non - zero .",
    "therefore , an edge @xmath44 indicates that two links @xmath39 and @xmath4 interfere at least in one direction .",
    "note that we identify edges via the indices of the connected links .",
    "the topology graph for the example in fig .",
    "[ fig : spinexample1](a ) is depicted in fig .",
    "[ fig : spinexample1](c ) . without loss of generality",
    ", the graph is assumed to be _ connected _",
    "@xcite , since , otherwise , one could consider the different connected components separately .    denoting by @xmath45 the xor operation , the interference between two links @xmath46 and @xmath9 is fully specified by the _ relative spin @xmath47 _ : @xmath48 the sinrs for any link @xmath9 in the two directions @xmath7 and @xmath8 can be written as a function solely of the relative spins of the interfering links , i.e. , of @xmath47 with @xmath44 .",
    "specifically , the sinr for the direction @xmath7 is given as @xmath49}\\label{eq : sinrlr}\\ ] ] and for the direction @xmath8 we have @xmath50},\\label{eq : sinrrl}\\ ] ] where @xmath51 is the vector of spins @xmath47 , @xmath44 , for the link @xmath9 . by rewriting the denominator of ( [ eq : sinrlr ] ) as @xmath52 $ ]",
    ", we see that , if @xmath53 , the relative spin @xmath47 does not affect @xmath54 . similarly , if @xmath55 , then @xmath47 does not affect @xmath56 .     and @xmath57 .",
    "the inrs are given only for the interference from @xmath4 to @xmath39 for clarify of illustration . ]",
    "given a topology graph @xmath58 , definition ( [ eq : definitionrspin ] ) implies that the vector @xmath59 $ ] of all relative spins satisfies the following properties : * ( c1 ) * _ symmetry _ : @xmath60 ; * ( c2 ) * _ parity check on cycles _ : for any cycle in the topology graph @xmath61 , we have the parity check equation @xmath62 it can be easily shown that * c1 * and * c2 * are also sufficient to guarantee the existence of a vector of spins that satisfies ( [ eq : definitionrspin ] ) and hence they characterize the set of all relative spin vectors .",
    "a simple consequence of * c1 * and * c2 * is that the specification of the relative spins on the edges of any spanning tree @xcite on the topology graph @xmath58 is sufficient to obtain the entire vector @xmath63 .",
    "every edge @xmath64 either belongs to the tree and hence @xmath47 is fixed , or , if not , then edge @xmath64 forms a unique cycle with a subset of the edges of the tree and the relative spin follows from ( [ eq : cycle ] ) .",
    "we are interested in finding the spin configuration that maximizes a sum - utility function of the sinrs across all links . the problem of interest is hence formulated as @xmath65 where the maximization over the relative spins is subject to the constraints * c1 * and * c2 , * and we have fixed non - negative utility functions @xmath66 for each link @xmath4 .",
    "the utility function @xmath66 is assumed to be non - decreasing in the arguments and will be written as @xmath67 in order to simplify the notation .",
    "an example is the two - way sum - rate , which is given as @xmath68 . in principle , a link can change the spin per frame ; however , in sec . [",
    "sec : numerical - results ] , we will treat the case in which a link spin is determined based on sinr variables that include long - term fading and update the the scheduling decisions on a large time scale .",
    "the maximization in ( [ eq : opt problem ] ) , in principle , can be carried out by exploring all possible configurations of relative spins . due to the constraint ( [ eq : cycle ] ) , the complexity of exhaustive search scales as @xmath69 , becoming impractical as @xmath0 increases . here",
    "we propose a suboptimal , but computationally more efficient optimization strategy that consists of two steps : 1 ) construction of a _ maximum relative - interference _ _ spanning tree _",
    "@xmath70 over the graph @xmath58 ; 2 ) dynamic programming spin optimization on @xmath70 .      for each edge",
    "@xmath64 in @xmath58 , a weight @xmath71 is assigned as latexmath:[\\[\\begin{aligned } w_{kl}=\\max(|\\mathrm{inr}_{kl}^{rr}-\\mathrm{inr}_{kl}^{lr}|,|\\mathrm{inr}_{kl}^{ll}-\\mathrm{inr}_{kl}^{rl}|,\\nonumber \\\\    this weight evaluates the maximum change in interference powers that is affected by the selection of the spin @xmath47 . a maximum spanning tree @xmath70",
    "is then constructed with respect to the weights in ( [ eq : relative interference ] ) , retaining only the edges that have the largest contributions to the relative interference powers and pruning the remaining edges ; e.g. , for the example in fig .",
    "[ fig : spinexample1](c ) , one of the three edges will be removed based on the criterion ( [ eq : relative interference ] ) , thus obtaining @xmath70 with two edges .",
    "we refer to @xmath70 as the maximum relative - interference spanning tree .",
    "the tree @xmath70 can be constructed in a centralized or distributed way @xcite@xcite , but the implementation details are out of the scope of this paper .",
    "finally , a root vertex is arbitrarily selected so as to make @xmath70 a rooted tree .",
    "note that each vertex @xmath4 in @xmath70 has a single parent vertex @xmath73 ( except for the root vertex , which has no parent ) , i.e. , @xmath73 is the only vertex in @xmath70 along the unique path to the root .",
    "@xmath4 can be the parent for multiple _ children _ vertices @xmath74 .",
    "having constructed the spanning tree @xmath70 , we now proceed to optimize only the relative spins corresponding to the edges @xmath75 via dynamic programming .",
    "as discussed in sec .",
    "[ sec : system - model - and ] , the spins for all the remaining edges can then be immediately calculated via ( [ eq : cycle ] ) . in order to allow the optimization to be limited only to the edges in @xmath70 , we approximate the sinrs in and so that they only depend on the relative spins for the edges in @xmath70 . to this end , denote by @xmath76 the vector of the relative spins for the edges connecting the child nodes @xmath74 with @xmath4 and , similarly , by @xmath77 the relative spin between @xmath4 and its parent @xmath73 .",
    "the sinr for link @xmath4 is approximated as @xmath78 in other words , the interference contribution for the edges @xmath79 that do not belong to the tree is approximated with the average of the interference powers that would be observed if @xmath80 or @xmath81 .",
    "this is justified by the fact that , in light of the choice of the weights ( [ eq : relative interference ] ) , it is expected that the two values @xmath26 and @xmath29 are similar . the same approach is used to approximate , leading to the approximation @xmath82 .",
    "for ease of notation , we write @xmath83",
    ".    we now aim at optimizing problem ( [ eq : opt problem ] ) with utilities @xmath84 in lieu of @xmath85 for all @xmath86 .",
    "the proposed dynamic programming solution starts from the leaf vertices and proceeds according to the ( partial ) order defined by the tree until the root is reached .",
    "in particular , each vertex @xmath4 calculates the message @xmath87 for its parent vertex @xmath73 , where @xmath88 for @xmath89 .",
    "the maximization in ( [ eq : message ] ) is over the relative spins corresponding to edges stemming from the child vertices @xmath74 .",
    "we denote a solution of the problem ( [ eq : message ] ) as @xmath90 for @xmath89 .",
    "note that the leaves have no child vertices , and hence , for every leaf @xmath4 , the message is calculated as @xmath91 for @xmath89 .",
    "instead , the root vertex @xmath92 , which has no parent , solves the problem @xmath93 ) and obtains an optimal solution @xmath94 .",
    "a complete solution @xmath95 is finally obtained by backpropagation : starting with the children of the root vertex , each child vertex @xmath96 of a vertex @xmath4 selects the solution @xmath97 , until the process reaches the leaves .    the complexity of the maximum spanning tree construction scales as @xmath98 @xcite@xcite , where @xmath99 and @xmath0 are the number of edges and vertices in @xmath58 , respectively .",
    "the order of complexity of the relative - spin optimization is @xmath100 , where @xmath101 is the maximum number of children of a vertex in @xmath70 . while in the worst case , @xmath102 , for a typical topology graph @xmath58 , we found @xmath101 to be much smaller than @xmath0 , leading to significant complexity saving with respect to exhaustive search ,",
    "see section  [ sec : numerical - results ] .",
    "for performance evaluation , a small - cell set - up is considered over a @xmath103 area .",
    "@xmath0 links , or equivalently @xmath104 nodes , are generated as follows : @xmath0 transceivers are placed uniformly in this area and chosen equiprobably to be either an @xmath105 or @xmath106 node ; then , the opposite node of the link ( @xmath107 or @xmath108 , respectively ) is placed at a uniformly selected random angle with distance @xmath109 .",
    "note that the opposite node may lie outside the area at hand .",
    "two types of links are considered : ( _ i _ ) _ symmetric d2d links _ , with @xmath110 m ; ( _ ii _ ) _ asymmetric femtocell links _ with @xmath111 m .",
    "these links differ as explained below .",
    "the long - term snrs and inrs that are used by the algorithm to determine the configuration of relative spins account only for large - scale fading and path loss .",
    "the long - term snr parameters for a symmetric link @xmath4 are given as @xmath112 .",
    "the transmit power is only adapted to the path loss in order to get @xmath113db , while @xmath114 represent independent log - normal shadowing with standard deviation @xmath115db . for an asymmetric link @xmath4 ,",
    "the snrs are given as @xmath116 and @xmath117 with @xmath118db and @xmath119db due to the fact that the power of the femto - base station ( @xmath108 ) is different from the power of the mobile user ( @xmath107 ) .",
    "the long - term interference power caused by the node @xmath120 to the node @xmath121 , where @xmath122 , is given as @xmath123 , where @xmath124 if @xmath4 is symmetric and @xmath125 otherwise , @xmath126 , @xmath127 is the path loss exponent , @xmath128 is the distance between node @xmath120 and @xmath121 , and @xmath129 accounts for log - normal shadowing with standard deviation @xmath115db .",
    "note that @xmath130 .    for a fixed spatial configuration and large - scale fading ,",
    "the spins are optimized with the proportional fairness utility across the links , so that @xmath131 the proposed algorithm is referred to as mst - dp ( maximum spanning tree - dynamic programming ) .",
    "one reference , when computationally feasible , is the the optimal performance based on exhaustive search ; the other is the average performance with uniform random spins . for a fixed spatial configuration , large - scale fading and relative spins",
    ", we evaluate for each link @xmath4 the instantaneous two - way sum - rate @xmath132 , where the instantaneous sinrs @xmath133 and @xmath134 are calculated via ( [ eq : sinrlr ] ) and ( [ eq : sinrrl ] ) by multiplying the corresponding long - term snr and inr variables by unit - power rayleigh variables , independently drawn for each par of nodes in each frame .      in fig .",
    "[ fig : results_sumvs5prct_fair ] , we plot the 5%-ile of the two - way sum - rate , which is a common measure of worst - case rate , against the average two - way sum - rate , for different number @xmath0 of symmetric links and a bandwidth of @xmath135mhz .",
    "note that having more links @xmath0 enables the spatial reuse , and hence the sum - rate , to be improved , but , at the same time , it creates more interference that reduces the worst - case rates .",
    "it is seen that spin optimization can significantly outperform random - spin assignment , especially in terms of 5%-ile rate , which , as an example , is nearly doubled for @xmath136 .",
    "[ fig : results_gainsymmetricasymmetricvarym ] elaborates further on the 5%-ile performance gains attained by optimized spin assignment with respect to random - spin selection as a function of @xmath0 .",
    "note that the high number of links is justified by the ultra - dense wireless scenarios envisioned in the upcoming 5 g wireless systems  @xcite .",
    "two curves are shown , one for all symmetric and one for all asymmetric links , respectively .",
    "for computational feasibility , only the mst - dp algorithm is considered .",
    "it is seen that , while the performance gains are substantial in both scenarios , optimizing the interference spins is particularly advantageous for asymmetric links .",
    "this is expected , since controlling the interference caused by the nodes that transmit with larger power has a more pronounced impact on the worst - case two - way sum - rate . finally , the mst - dp algorithm , while inferior to the exhaustive search , still provides significant gains over random spins .",
    "we observe that , in terms of complexity , even with @xmath137 nodes , the value of @xmath101 was found to be always @xmath138 and to be , on average less than @xmath139 .",
    "v. venkatasubramanian , m. hesse , p. marsch and m. maternia , `` on the performance gain of flexible ul / dl tdd with centralized and decentralized resource allocation in dense 5 g deployments , '' in proc .",
    "_ ieee pimrc 2014 _ , washington , dc , usa , sept . 2014 ."
  ],
  "abstract_text": [
    "<S> two - way is a dominant mode of communication in wireless systems . </S>",
    "<S> departing from the tradition to optimize each transmission direction separately , recent work has demonstrated that , for time - division duplex ( tdd ) systems , optimizing the schedule of the two transmission directions depending on traffic load and interference condition leads to performance gains . in this letter , </S>",
    "<S> a general network of multiple interfering two - way links is studied under the assumption of a balanced load in the two directions for each link . using the notion of _ interference spin _ , we introduce an algebraic framework for the optimization of two - way scheduling , along with an efficient optimization algorithm that is based on the pruning of a properly defined topology graph and dynamic programming . </S>",
    "<S> numerical results demonstrate multi - fold rate gains with respect to baseline solutions , especially for worst - case ( 5%-ile ) rates .    </S>",
    "<S> index terms  two - way communication , scheduling , dynamic tdd , dynamic programming . </S>"
  ]
}
{
  "article_text": [
    "understanding the dynamic phenomena in classical and quantum many - body systems is of importance for the most of areas of physics and chemistry .",
    "the development of efficient algorithms for solving the equations of motion in such systems should therefore impact a lot of fields of fundamental research . during the last decade",
    "a considerable activity @xcite has been directed on the construction of symplectic time - reversible algorithms that employ decompositions of the evolution operators into analytically solvable parts .",
    "the decomposition algorithms exactly preserve all poincar invariants and , thus , are ideal for long - time integration in molecular dynamics @xcite and astrophysical @xcite simulations .",
    "the reason is that for these algorithms the errors in energy conservation appear to be bounded even for relatively large values of the size of the time step .",
    "this is in a sharp contrast to traditional runge - kutta and predictor - corrector schemes , where the numerical uncertainties increase linearly with increasing the integration time @xcite .",
    "the main attention in previous investigations has been devoted to derive different - order decomposition algorithms involving only force evaluations during the time propagation .",
    "for instance , the widely used velocity- and position - verlet algorithms @xcite relate , in the general classification , to a three - stages decomposition scheme of the second order with one force evaluation per step .",
    "the fourth - order algorithm by forest and ruth @xcite corresponds to a scheme with three such force recalculations and consists of seven single - exponential stages .",
    "sixth - order schemes are reproduced @xcite beginning from fifteen stages and seven evaluations of force for each body in the system per given time step . with",
    "further increasing the order of force decomposition schemes , the number of stages and thus the number of the corresponding non - linear equations ( which are necessary to solve numerically to obtain the required time coefficients for single - exponential propagations ) increases drastically .",
    "in addition , such equations become too cumbersome and all these , taking into account the capabilities of modern supercomputers , led to the impossibility of representing the direct decomposition algorithms of order eighth and higher in an explicit form @xcite . in order to simplify this problem ,",
    "it was proposed to derive higher - order integrators by composing schemes of lower ( actually second ) orders .",
    "the resulting second - order - based composition algorithms have been explicitly obtained up to the tenth order @xcite .",
    "relatively recently @xcite , a deeper analysis of the operator factorization process has shown that the class of analytically integrable decomposition integrators can be extended including additionally a higher - order commutator into the single - exponential propagations . as a consequence ,",
    "a set of new so - called force - gradient algorithms of the fourth order has been introduced .",
    "a distinguishable feature of these algorithms is the possibility to generate solutions using only positive values for time coefficients during each substage of the integration .",
    "this is contrary to the original decomposition approach , where beyond second order ( as has been rigorously proved by suzuki @xcite ) any scheme expressed in terms of only force evaluation must produce some negative time coefficients .",
    "we mention that applying negative time propagations is impossible , in principle , in such important fields as non - equilibrium statistical mechanics , quantum statistics , stochastic dynamics , etc . , because one can not simulate diffusion or stochastic processes backward in time nor sample configurations with negative temperatures . in the case of stochastic dynamics simulations",
    "it has been demonstrated explicitly @xcite that using fourth - order force - gradient algorithms leads to much superior propagation over standard verlet - based schemes of the second order in that it allows much larger time steps with no loss of precision .",
    "a similar pattern was observed in classical dynamics simulations comparing the usual fourth - order algorithm by forest and ruth with its force - gradient counterparts @xcite .",
    "quite recently , chin and kidwell @xcite has considered a question of how to iterate the force - gradient algorithms to higher order .",
    "the iteration was based on creutz s and gocksch s approach @xcite according to which an algorithm of order @xmath1 can be obtained by triplet construction of a self - adjoint ( i.e. time - reversible ) scheme of order @xmath2 . then starting from a fourth - order integrator",
    ", it has been shown in actual celestial mechanics simulations that for orders 6 , 8 , 10 , and 12 , the numerical errors corresponding to the force - gradient - based schemes are significantly smaller than those of the schemes basing on iterations of usual non - gradient algorithms .",
    "the resulting efficiency of the integration has also increased considerably despite an increased computational efforts spent on the calculations of force gradients .",
    "the same has been seen in the case of quantum mechanics simulations when solving the time - dependent schrdinger equation @xcite .",
    "it is worth emphasizing , however , that the iteration scheme by chin and kidwell is far to be optimal for deriving high - order integrators belonging to the force - gradient class .",
    "the reason is that the number of total force and its gradient evaluations increases too rapidly with increasing @xmath2 .",
    "remembering that such evaluations constitute the most time - consuming part of the calculations , this may restrict the region of applicability of force - gradient algorithms to relative low orders only .",
    "note that high - order computations are especially desirable in problems of astrophysical interest , because than one can observe over a system during very long times .",
    "they may also be useful in highly precise molecular dynamics and quantum mechanics simulations to identify or confirm very subtle effects .    in the present paper",
    "we propose a general approach to construction of symplectic force - gradient algorithms of arbitrary orders .",
    "the approach considers the splitting and composing of the evolution operators on the basic level , taking into account the explicit structure of truncation terms at each given order in the time step .",
    "this has allowed us to obtain exclusively precise and economical algorithms with using significantly smaller number of single - exponential propagations than that appearing within standard decomposition and iteration schemes .",
    "the paper is organized as follows .",
    "the equations of motion for classical and quantum systems are presented in section ii.a .",
    "the integration of these equations by direct decompositions and their force - gradient generalization are described in section ii.b .",
    "explicit expressions for basic force - gradient algorithms of orders 2 , 4 , 6 , and 8 are also given there .",
    "the higher - order integration basing on advanced compositions of lower - order schemes is considered in section ii.c .",
    "the composition constants for fourth- , sixth- , and eighth - order - based schemes are calculated and written down in the same section up to the overall order 16 . sections iii.a and iii.b are devoted to applications of obtained force - gradient algorithms to molecular dynamics and celestial mechanics simulations , respectively . a comparative analysis of the new algorithms with existing integrators",
    "is made there as well . the final discussion and concluding remarks are highlighted at the end in section iv .",
    "consider first a classical @xmath3-body system described by the hamiltonian @xmath4 where @xmath5 is the position of particle @xmath6 moving with velocity @xmath7 and carrying mass @xmath8 , @xmath9 denotes the interparticle potential of interaction , and @xmath10 and @xmath11 relate to the total kinetic and potential energies , respectively . then the equations of motion can be presented in the following compact form @xmath12 \\equiv l { \\mbox{\\boldmath $ \\rho$}}(t ) \\ , .\\ ] ] here @xmath13 is the full set ( @xmath14 ) of phase variables , @xmath15 $ ] represents the poisson bracket and @xmath16 is the liouville operator with @xmath17 being the force acting on particles due to the interactions .    in the case of quantum systems ,",
    "the state evolution can be described by the time - dependent schrdinger equation @xmath18 where @xmath19 and @xmath20 are the kinetic and potential energy operators , respectively , and @xmath21 is the wave function .",
    "so - called quantum - classical dynamics models @xcite can also be introduced .",
    "this leads to a coupled system of newtonian ( 2 ) and schrdinger ( 4 ) equations .",
    "but , in order to simplify notations , we restrict ourselves to the above purely classic and quantum considerations .",
    "if an initial configuration @xmath22 or @xmath23 is provided , the unique solution to eq .",
    "( 2 ) or ( 4 ) can be formally cast as @xmath24 where @xmath25 and @xmath26 are the size of the single time step and the total number of steps , respectively , @xmath27 denotes either @xmath28 or @xmath21 , whereas @xmath29 corresponds to @xmath30 or @xmath31 . as is well known , the time evolution of many - particle systems can not be performed exactly in the general case .",
    "thus , the problem arises on evaluating the propagator @xmath32 by numerical methods .",
    "the main idea of decomposition integration consists in factorization of the full exponential operator @xmath33 on such subpropagators which allow to be evaluated analytically or at least be presented in quadratures . within the original approach ,",
    "this is achieved by splitting the operator @xmath34 into its kinetic @xmath35 and potential @xmath36 parts , where @xmath37 or @xmath38 and @xmath39 with @xmath40 being the acceleration or @xmath41 for the cases of classical or quantum mechanics , respectively .",
    "then , taking into account the smallness of @xmath25 , the total propagator can be decomposed @xcite using the formula @xmath42 where the coefficients @xmath43 and @xmath44 are chosen in such a way to provide the highest possible value for @xmath45 at a given integer number @xmath46 . as a result ,",
    "integration ( 5 ) can performed approximately with the help of eq .",
    "( 6 ) by neglecting truncation terms @xmath47 .",
    "the precision will increase with increasing the order @xmath2 and decreasing the size @xmath25 of the time step .",
    "as can be verified readily , the exponential subpropagators @xmath48 and @xmath49 , appearing in the right - hand - side of eq .  ( 6 ) , are analytically integrable for classical systems . indeed , taking into account the independence of @xmath50 on @xmath51 and @xmath52 on @xmath50 yields @xmath53 \\\\ [ -5pt ] & & { \\rm e}^{{\\cal b } \\tau } { \\mbox{\\boldmath $ \\rho$ } } \\equiv { \\rm e}^{\\tau { \\bf a } { \\mbox{\\boldmath $ \\cdot$ } } \\partial/\\partial { \\bf v } } \\ { { \\bf r } , { \\bf v } \\ } = \\ { { \\bf r } , { \\bf v } + { \\bf a } \\tau \\ } \\nonumber\\end{aligned}\\ ] ] that represent simple shift operators in position and velocity spaces , respectively , with @xmath54 being equal to @xmath55 or @xmath56 . for quantum mechanics",
    "propagations , the kinetic part @xmath57 will require carrying out two , one direct and one inverse , spatial fourier transforms @xcite , whereas the calculation of @xmath58 is trivial .    in view of decompositions ( 6 ) , one can reproduce integrators of various orders in the time step . in particular , the well - known second - order ( @xmath59 )",
    "velocity - verlet algorithm @xcite @xmath60 is readily derived from eq .",
    "( 6 ) by putting @xmath61 with @xmath62 , @xmath63 , and @xmath64 .",
    "the fourth - order ( @xmath65 ) algorithm by forest and ruth @xcite is obtained from eq .",
    "( 6 ) at @xmath66 with @xmath62 , @xmath67 , @xmath68 , @xmath69 and @xmath70 , where @xmath71{2})$ ] .",
    "schemes of the sixth order ( @xmath72 ) are derivable starting from @xmath73 with numerical representation of time coefficients @xcite .",
    "the original decomposition approach has , however , a set of disadvantages .",
    "first of all , it is worth pointing out that with further increasing the order of integration ( 6 ) to @xmath74 and higher , the number @xmath75 of unknowns @xmath43 and @xmath44 begins to increase too rapidly .",
    "this leads to the impossibility of representing algorithms of such a type for @xmath76 in an explicit form @xcite , because it becomes impossible to solve the same number of the resulting cumbersome non - linear equations ( with respect to @xmath43 and @xmath44 ) even using the capabilities of modern supercomputers .",
    "another drawback consists in the fact that for @xmath77 it is impossible @xcite at any @xmath78 to derive from eq .",
    "( 6 ) a decomposition scheme with the help of only positive time coefficients .",
    "for example , in the case of forest - ruth integration , three of eight coefficients , namely , @xmath79 , @xmath80 , and @xmath81 , are negative . as was mentioned in the introduction , schemes with negative time coefficients have a restricted region of application and are not acceptable for simulating non - equilibrium , quantum statistics , stochastic and other important processes . moreover , for schemes expressed in terms of force evaluation only , the main term @xmath82 of truncation uncertainties appears to be , as a rule , too big , resulting in decreasing the efficiency of the computations",
    ".      from the afore said , it is quite desirable to introduce a more general approach which is free of the above disadvantages . at the same time , this approach , like the original scheme , must be explicit , i.e. , lead to analytical propagations .",
    "in addition , it is expected that the already known decomposition algorithms should appear from it as particular cases .",
    "let us first analyze the structure of third - order truncation errors @xmath83 of the velocity - verlet algorithm in detail .",
    "expanding both the sides of eq .",
    "( 8) into taylor",
    "s series with respect to @xmath25 , one finds @xmath84 + \\frac{1}{24 } [ { \\cal b},[{\\cal a},{\\cal b } ] ] \\right ) \\delta",
    "t^3 + { \\cal o}(\\delta t^5)\\ ] ] where @xmath85 $ ] denotes the commutator of two operators . taking into account the explicit expressions for operators @xmath35 and",
    "@xmath36 it can be shown that one of the two third - order operators in eq .",
    "( 9 ) , namely @xmath86 $ ] , is relatively simple and , that is more important , it allows to be handled explicitly , contrary to the operator @xmath87 $ ] . in the case of classical systems",
    "it can be obtained readily that @xmath88 = \\sum_{i=1}^n \\frac{{\\bf g}_i}{m_i } { \\mbox{\\boldmath $ \\cdot$ } } \\frac{\\partial}{\\partial { \\bf v}_i } \\equiv { \\bf g } { \\mbox{\\boldmath $ \\cdot$ } } \\frac{\\partial}{\\partial { \\bf v } } \\ , , \\ ] ] where @xmath89 . in view of the expression @xmath90 for forces ,",
    "the required force - gradient evaluations @xmath91 are explicitly representable , i.e. , @xmath92 \\\\ [ -9pt ] \\times \\big({\\bf r}_{ij } { \\mbox{\\boldmath $ \\cdot$ } } ( { \\bf a}_i-{\\bf a}_j ) \\big ) \\bigg ] \\equiv \\sum_{j ( j \\ne i)}^n { \\bf g}({\\bf r}_{ij } ) = { \\bf g}_i({\\bf r } ) \\ , .",
    "\\nonumber\\end{aligned}\\ ] ]    as can be seen easily from eqs .",
    "( 10 ) and ( 11 ) , the operator @xmath93 commutes with @xmath94 , and , in addition , the function @xmath95 like @xmath96 does not depend on velocity",
    ". then the force - gradient part @xmath97 of truncation uncertainties ( 9 ) can be extracted by transferring them from the left - hand - side of eq .",
    "( 8) to its right side and further symmetrically collecting with operator @xmath36 under exponentials .",
    "this yields the following force - gradient version @xmath98 of the velocity - verlet integrator , where already @xmath99 \\delta t^3/12 $ ] .    in the case of higher - order ( @xmath77 ) integration",
    "( 6 ) , the operator @xmath93 will enter into truncation uncertainties @xmath100 by various combinations .",
    "they can be extracted similarly as for @xmath59 , and we come to a force - gradient decomposition approach .",
    "the most general representation of this approach is @xmath101 where again at a given @xmath78 the coefficients @xmath43 , @xmath44 , as well as @xmath102 must be chosen in such a way to cancel the truncation terms @xmath47 to the highest possible order @xmath2 . for @xmath103 , generalized factorization ( 13 )",
    "reduces to usual representation ( 6 ) .",
    "it is worth emphasizing that in view of the velocity independence of @xmath95 on @xmath50 , the modified operator of shifting velocities remains to be evaluated exactly for any @xmath44 and @xmath102 , namely , @xmath104 for quantum systems , where @xmath105 of solutions ( following from the property @xmath106 of evolution operator @xmath107 ) can be reproduced exactly as well by imposing additional constraints on the coefficients @xmath43 , @xmath44 , and @xmath102 . in particular , for velocity - like decompositions such constraints read : @xmath62 , @xmath108 , @xmath109 , and @xmath110",
    ". then single - exponential subpropagators will enter symmetrically into the decompositions , providing automatically the required reversibility .",
    "the case when the operators of shifting velocity and position are replaced by each other in the resulting symmetrical decomposition is also possible .",
    "this leads to a position - like integration which can be reproduced from eq .",
    "( 13 ) at @xmath111 , @xmath112 , and @xmath113 at @xmath114 and @xmath115 .",
    "the above symmetry will result in its turn to automatic disappearing all even - order terms in the error function @xmath47 .",
    "for this reason , the order @xmath2 of time - reversible ( self - adjoint ) algorithms may accept only even numbers ( @xmath116 ) .",
    "the cancellation of the remaining odd - order terms up to a given order will be provided by fulfilling a set of basic conditions for @xmath43 , @xmath44 , and @xmath102 .",
    "for example , the condition @xmath117 is required to cancel the first - order truncation uncertainties .",
    "then the error function can be cast in the form @xmath118 \\\\ [ -5pt ] & & \\ldots + { \\cal o}_{k+1 } \\delta t^{k+1 } \\ , .",
    "\\nonumber\\end{aligned}\\ ] ] in order to kill higher odd - order truncation terms in eq .",
    "( 15 ) , let us write down explicit expressions for @xmath119 , @xmath120 , and @xmath121 ( this will be enough to derive algorithms up to the eighth order ) .",
    "expanding both the sides of eq .",
    "( 13 ) into taylor s series , and collecting the terms with the same powers of @xmath25 one finds : @xmath122 + \\beta [ { \\cal b},[{\\cal a},{\\cal b } ] ] \\ , , \\ ] ]    @xmath123 ] ]   + \\gamma_2 [ { \\cal a},[{\\cal a},[{\\cal b},[{\\cal a},{\\cal b } ] ] ] ]   + \\gamma_3 [ { \\cal b},[{\\cal a},[{\\cal a},[{\\cal a},{\\cal b } ] ] ] ]   + \\gamma_4 [ { \\cal b},[{\\cal b},[{\\cal a},[{\\cal a},{\\cal b } ] ] ] ] \\ , , \\ ] ]    @xmath124 ] ] ] ]   + \\zeta_2 [ { \\cal b},[{\\cal b},[{\\cal b},[{\\cal a},[{\\cal a},[{\\cal b},{\\cal a } ] ] ] ] ] ] & + & \\zeta_3 [ { \\cal b},[{\\cal b},[{\\cal a},[{\\cal a},[{\\cal a},[{\\cal b},{\\cal a } ] ] ] ] ] ]   + \\nonumber \\\\ \\zeta_4 [ { \\cal b},[{\\cal a},[{\\cal b},[{\\cal a},[{\\cal a},[{\\cal b},{\\cal a } ] ] ] ] ] ]   + \\zeta_5 [ { \\cal a},[{\\cal b},[{\\cal b},[{\\cal a},[{\\cal a},[{\\cal b},{\\cal a } ] ] ] ] ] ] & + & \\zeta_6 [ { \\cal a},[{\\cal b},[{\\cal a},[{\\cal b},[{\\cal a},[{\\cal b},{\\cal a } ] ] ] ] ] ]   + \\\\ \\zeta_7 [ { \\cal b},[{\\cal a},[{\\cal a},[{\\cal a},[{\\cal a},[{\\cal b},{\\cal a } ] ] ] ] ] ]   + \\zeta_8 [ { \\cal a},[{\\cal b},[{\\cal a},[{\\cal a},[{\\cal a},[{\\cal b},{\\cal a } ] ] ] ] ] ] & + & \\zeta_9 [ { \\cal a},[{\\cal a},[{\\cal b},[{\\cal a},[{\\cal a},[{\\cal b},{\\cal a } ] ] ] ] ] ] + \\nonumber \\\\ \\zeta_{10 } [ { \\cal a},[{\\cal a},[{\\cal a},[{\\cal a},[{\\cal a},[{\\cal b},{\\cal a } ] ] ] ] ] ] \\ , . \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\nonumber\\end{aligned}\\ ] ]    2 here we take into account the fact that the operators @xmath36 and @xmath93 commute between themselves , i.e. @xmath125=0 $ ] , so that any occurrence of constructions containing the chain @xmath126]$ ] has been ignored ( in particular for fifth - order truncation term @xmath120 this has allowed us to exclude the two zero - valued commutators @xmath127]]$ ] and @xmath128]]$ ] ) .",
    "the multipliers @xmath129 , @xmath130 , @xmath131 , and @xmath132 , arising in eq .",
    "( 16)(18 ) , are functions of the coefficients @xmath43 , @xmath44 , and @xmath102 , where @xmath133 .",
    "the concrete form of these functions will depend on @xmath78 and the version ( velocity or position ) under consideration .",
    "the most simple way to obtain explicit expressions for the multipliers consists in the following .",
    "first , since we are dealing with self - adjoint schemes , the total number of single - exponential operators ( stages ) in eq .",
    "( 13 ) is actually equal to @xmath134 , i.e. it accepts only odd values ( mention that one of the boundary set of coefficients is set to zero , @xmath62 or @xmath135 ) .",
    "then we can always choose a central single - exponential operator , and further consecutively applying @xmath136 times the two types of symmetric transformation @xmath137",
    "@xmath138 @xmath139 & & { \\rm e}^{{\\cal b } b^{(n ) } \\delta t+{\\cal c } c^{(n ) } \\delta t^3 } { \\rm e}^{{\\cal w}^{(n ) } + { \\cal o}^{(n ) } } { \\rm e}^{{\\cal b } b^{(n ) } \\",
    "\\delta t+{\\cal c } c^{(n ) } \\delta t^3}\\end{aligned}\\ ] ] come to factorization ( 13 ) , where @xmath140 and @xmath141 is defined by eq .",
    "the quantities @xmath142 , @xmath143 , and @xmath144 are related to @xmath43 , @xmath44 , and @xmath102 , respectively ( the relationship between @xmath145 and @xmath146 is determined below ) . for velocity - like decomposition with even @xmath78 or position - like at odd @xmath78 ,",
    "the central operator is correspondingly @xmath147 or @xmath148 . so that here we must put @xmath149 as well as @xmath150 and let either @xmath151 or @xmath152 on the very beginning ( @xmath153 ) of the recursive procedure .",
    "the start of the procedure should be performed with the second line of eq .",
    "( 19 ) at @xmath154 and @xmath155 or @xmath156 and @xmath157 with further decreasing the index @xmath146 with increasing the number @xmath158 at @xmath159 , @xmath160 , and @xmath161 in both the lines of transformation ( 19 ) . for velocity - like decomposition with odd @xmath78 or position - like at even @xmath78 ,",
    "the central operator will be @xmath162 or @xmath163 , corresponding to @xmath164 and @xmath165 or @xmath166 and @xmath167 , respectively , with @xmath168 and @xmath169 . in this case , the procedure should be started with the first type of transformation at @xmath170 or @xmath171 with decreasing @xmath146 at increasing @xmath145 for @xmath160 , @xmath172 , and @xmath159 in eq .",
    "( 19 ) .",
    "the recursive relations between the multipliers @xmath173 , @xmath174 , @xmath129 , @xmath130 , and @xmath131 corresponding to the first line of eq .",
    "( 19 ) are : @xmath175 @xmath176 @xmath177    @xmath178 @xmath179 @xmath138 @xmath180 @xmath181    2 for the second type of transformation the relations read : @xmath182 @xmath183 @xmath184    @xmath185 @xmath186 @xmath187 @xmath188 & & 3 { b^{(n)}}^3 \\nu^{(n ) } +      30 c^{(n ) } \\sigma^{(n ) } - 2 { b^{(n)}}^2 \\nu^{(n ) } \\sigma^{(n ) } - b^{(n ) } \\nu^{(n ) } { \\sigma^{(n)}}^2\\big)\\big)/180 \\ , .\\end{aligned}\\ ] ]    2 the relations for @xmath132 are presented in appendix . in such a way , at the end of the recursive process ( i.e. after @xmath136 steps ) the multipliers can readily be obtained .",
    "the form of the first two multipliers are particularly simple and look as @xmath189 and @xmath190 .",
    "so that , as was already mentioned above , putting @xmath191 and @xmath192 will cancel the first - order truncation uncertainties ( because the resulting exponential propagator must behave like @xmath193 ) .",
    "next multipliers should be set to zero and we come to the necessity of solving a system of non - linear equations ( so - called order conditions ) with respect to @xmath43 , @xmath44 , and @xmath102",
    ". we shall now consider actual self - adjoint algorithms of orders @xmath59 , 4 , 6 , and 8 .",
    "putting @xmath61 in eq .",
    "( 13 ) with @xmath62 , @xmath194 , @xmath64 , and @xmath195 leads to the following velocity - force - gradient algorithm of the second ( @xmath59 ) order , @xmath196 with @xmath197 , and @xmath198 .",
    "note that here and below , for reducing the number of unknowns , we will always take into account in advance the symmetry of coefficients @xmath43 , @xmath44 , and @xmath102 as well as the fulfilling the first - order conditions @xmath199 when writing decomposition formulas . then solving the equation @xmath200 yields @xmath201 and we come to the already found integrator ( 12 ) .",
    "it is worth remarking that negative values of quantities @xmath102 at force gradients have nothing to do with the above problem of positiveness of time coefficients arising at velocities and forces , i.e. , for @xmath43 and @xmath44 .",
    "the reason is that the incremental velocity @xmath202 in eq .",
    "( 14 ) can be rewritten as @xmath203 , and thus treated as the velocity changing in a modified step - size - dependent acceleration field @xmath204 .",
    "the position counterpart of eq .",
    "( 28 ) is obtained from eq .  ( 13 ) at @xmath62 , @xmath205 , @xmath206 , @xmath207 , @xmath208 and @xmath209 , that yields @xmath210 for which @xmath211 and @xmath212 . letting @xmath213 will minimize the third - order truncation errors to the value @xmath214 \\delta t^3 $ ] which is even twice smaller in magnitude than that of the velocity version .",
    "note , however , that for both versions ( 28 ) and ( 29 ) , which require one force plus one force - gradient evaluations per time step , the order of integration is not increased with respect to the usual ( when @xmath215 ) verlet integrators requiring only one force recalculation . in view of this , the applying force gradients in a particular case of @xmath61 can be justified only for strongly interacting systems when the kinetic part @xmath35 of the liouville operator @xmath29 is much smaller than the potential part @xmath36 , i.e. , when @xmath216 with @xmath217 . then the remaining part @xmath218",
    "\\delta t^3 $ ] of local uncertainties will behave like @xmath219 and can be neglected .",
    "further increasing @xmath78 on unity allows us to kill exactly both the multipliers @xmath129 and @xmath130 , that is needed for obtaining fourth - order ( @xmath65 ) integrators . so that choosing @xmath220 leads to the velocity - like propagation @xmath221 \\\\ [ 2pt ] & & { \\rm e}^{{\\cal b } \\lambda \\delta t + \\xi { \\cal c } \\delta t^3 } { \\rm e}^{{\\cal a } \\frac{\\delta t}{2 } } { \\rm e}^{{\\cal b } ( 1 - 2 \\lambda ) \\delta t + \\chi { \\cal c } \\delta t^3 } { \\rm e}^{{\\cal a } \\frac{\\delta t}{2 } } { \\rm e}^{{\\cal b } \\lambda \\delta t + \\xi { \\cal c } \\delta t^3 } \\ \\ \\ \\ \\nonumber\\end{aligned}\\ ] ] following from eq .",
    "( 13 ) at @xmath62 , @xmath222 , @xmath223 , @xmath224 , @xmath225 , and @xmath226 . here relations ( 21 ) , ( 22 ) , ( 25 ) , and ( 26 ) come to the two order conditions @xmath227 with three unknowns @xmath228 , @xmath229 , and @xmath230 .",
    "the first unknown is immediately obtained satisfying the first condition , @xmath231 the second equality is then reduces to @xmath232 , resulting in a whole family of velocity - force - gradient algorithms of the fourth order . in general , such algorithms will require two force and two force - gradient recalculations per time step .    remembering that we are interested in the derivation of most efficient integrators , three cases deserve to be considered .",
    "the two of them are aimed to reduce the number of force - gradient recalculations from two to one .",
    "this is possible by choosing either @xmath233 or @xmath234 in the third case we will try to minimize the norm @xmath235 of fifth - order truncation errors @xmath236 at @xmath237 and @xmath238 , treating @xmath229 as a free parameter . in view of recursive relations ( 23 ) and",
    "( 27 ) , explicit expressions for the components of @xmath236 are @xmath239 @xmath240 then taking into account eq .",
    "( 31 ) one finds the function @xmath241 with the minimum @xmath242 at @xmath243 at the same time , the values of @xmath244 corresponding to first two algorithms ( 32 ) and ( 33 ) constitute @xmath245 and @xmath246 , respectively .    position version of ( 30 ) reads @xmath247 \\\\ [ -5pt ] & & { \\rm e}^{{\\cal a } \\lambda \\delta t } { \\rm e}^{{\\cal b } \\frac{\\delta t}{2 } + \\xi { \\cal c } \\delta t^3 } { \\rm e}^{{\\cal a } ( 1 - 2 \\lambda ) \\delta t } { \\rm e}^{{\\cal b } \\frac{\\delta t}{2 } + \\xi { \\cal c } \\delta t^3 } { \\rm e}^{{\\cal a } \\lambda \\delta t } \\nonumber \\ \\ \\ \\\\end{aligned}\\ ] ] and is obtained from eq .",
    "( 13 ) at @xmath220 with @xmath248 , @xmath249 , @xmath194 , @xmath250 , and @xmath251 . here",
    ", the number of unknowns coincides with the number of the order conditions @xmath252 solving of which yields two solutions , @xmath253 then the norm of truncation uncertainties @xmath236 appearing in eq .",
    "( 36 ) is @xmath254 , so that the preference should be given to sign ``  '' in eq .",
    "( 37 ) , because this leads to a smaller value , @xmath255 , of @xmath244 ( whereas @xmath256 ) .",
    "position algorithm ( 36 ) needs , like velocity version ( 35 ) , in two force and the same number of force - gradient evaluations per time step .    integrators ( 32 ) and ( 37 ) have been previously derived by suzuki @xcite based on mclachlan s method of small perturbation @xcite and referred by chin @xcite to schemes a and b , respectively . algorithms ( 33 ) and ( 35 ) are new and will labeled by us as a@xmath257 and a@xmath258 . while scheme a@xmath257 seems has no advantages over the a - integrator , the new algorithm a@xmath258 corresponds to the best accuracy of the integration , because it minimizes @xmath244 .",
    "it requires , however , one extra force - gradient evaluation and , thus , can be recommended for situations when this evaluation does not present significant difficulties .    with the aim of considerable decreasing the truncation errors in a little additional computational efforts , chin @xcite",
    "has proposed to consider extended force - gradient algorithms of the fourth order .",
    "this has been achieved by increasing the number of force recalculations on unity with respect to the necessary minimum , i.e. choosing @xmath259 . at the same time , the number of force - gradient evaluations was fixed to its minimal value @xmath260 . within our general approach ,",
    "it is possible to introduce two fourth - order schemes satisfying the above requirements .",
    "the schemes are @xmath261 \\\\ [ -6pt ] \\times { \\rm e}^{{\\cal b } ( 1 - 2 \\lambda ) \\delta t + \\chi",
    "{ \\cal c } \\delta t^3 } { \\rm e}^{{\\cal a } ( 1 - 2 \\theta ) \\frac{\\delta t}{2 } } { \\rm e}^{{\\cal b } \\lambda \\delta t } { \\rm e}^{{\\cal a } \\theta \\delta t } & & \\nonumber\\end{aligned}\\ ] ] and @xmath262 \\\\ [ -6pt ] \\times { \\rm e}^{{\\cal a } ( 1 - 2 \\theta ) \\delta t } { \\rm e}^{{\\cal b } ( 1 - 2 \\lambda ) \\frac{\\delta t}{2 } } { \\rm e}^{{\\cal a } \\theta \\delta t } { \\rm e}^{{\\cal b } \\lambda \\delta t + \\xi { \\cal c } \\delta t^3 } \\nonumber\\end{aligned}\\ ] ] following from eq .",
    "( 13 ) at @xmath66 and corresponding to position- and velocity - like integration , respectively .",
    "note that further we will not present the relationship between the coefficients @xmath43 , @xmath44 , @xmath102 of eq .",
    "( 13 ) and reduced variables ( such as , for example , @xmath263 , @xmath228 , @xmath230 in eq .  ( 38 ) ) in view of its evidence .",
    "the order conditions for scheme ( 38 ) are @xmath264 \\\\ [ -2pt ] \\beta&=&-\\frac{1}{12 } + \\frac{\\lambda}{2 } - \\frac{\\lambda^2}{2 } - \\lambda \\theta \\big ( 1 - \\lambda \\big ) + \\chi = 0\\end{aligned}\\ ] ] and solving them one obtains @xmath265 relations ( 40 ) constitute a family of extended force - gradient position algorithms ( 38 ) of the fourth order with @xmath228 being a free parameter .",
    "chin @xcite has introduced an algorithm like ( 38 ) in somewhat another way , namely , as a symmetric product of two third - order schemes .",
    "this results only in one set of time coefficients which can be reproduced ( at sign ``  '' ) from eq .",
    "( 40 ) as a particular case corresponding to @xmath266 and has been referred to scheme c.    solution ( 41 ) may not , however , be necessarily optimal in view of the fact that it does not minimize the norm @xmath244 ( see eq .",
    "( 34 ) ) of truncation uncertainties @xmath236 . indeed ,",
    "the components of @xmath244 for scheme ( 38 ) are @xmath267 \\gamma_3&=&-\\frac{1}{360 } \\bigg ( \\frac{3}{2 } \\pm \\frac{5}{\\sqrt{96 \\lambda } } \\pm 5 \\sqrt{\\frac{\\lambda}{24 } } \\bigg ) \\",
    ", , \\\\ [ 2pt ] \\gamma_4&=&-\\frac{1}{1440 } \\big ( 3 \\pm 5 \\sqrt{24 \\lambda } + 45 \\lambda - 30 \\lambda^2 \\big ) \\ , , \\end{aligned}\\ ] ] where eq",
    "( 40 ) has been used to express the function @xmath268 in terms of one parameter @xmath228 exclusively .",
    "the global minimum of this function is @xmath269 and achieved ( at sign minus ) at @xmath270 ( all results found numerically will be presented within sixteen significant digits for schemes up to the eighth order and within thirty two digits for order ten and higher ) . on the other hand , the value of @xmath244 corresponding to scheme c ( eq .  ( 41 ) ) ,",
    "is equal only to @xmath271 , i.e. it is approximately in 5 times larger than that of the optimized algorithm ( 42 ) .",
    "the last algorithm we will designate as scheme c@xmath257 .    a similar pattern is observed in the case of extended velocity - force - gradient integration ( 39 ) .",
    "previously chin and chen @xcite have indicated that for quantum mechanics simulations the integration of such a type is more preferable than position - like scheme ( 38 ) , because it requires a fewer number of spatial fourier transforms . again using the symmetric product of two third - order integrators to increase the order from three to four",
    ", they have obtained the following set @xmath272 of time coefficients and referred it to scheme d. we have realized that this set is not only possible and found a whole family of solutions ( which includes ( 43 ) ) , namely , @xmath273 where @xmath263 should be considered as a free parameter .",
    "the optimal solution , which minimizes the norm @xmath244 of fifth - order errors to the value @xmath274 , is @xmath275 and will be labeled as scheme d@xmath257 . at the same time , the norm of errors corresponding to scheme d ( eq .  ( 43 ) ) is equal to @xmath276 , i.e. it exceeds the minimum , that may results in decreasing the precision of the calculations .",
    "as can be ensured readily , the time coefficients arising at basic operators @xmath35 and @xmath36 under exponentials are positive for all the fourth - order force - gradient algorithms described in this subsection . therefore , contrary to usual force forest - ruth - like schemes , such algorithms can simulate dynamical processes in all areas of physics and chemistry without any principal restrictions .",
    "beginning from @xmath277 , the force - gradient factorization being written in velocity representation allows to eliminate the components of truncation uncertainties up to the sixth order ( @xmath72 ) inclusively . in view of eq .",
    "( 13 ) , such a representation reads @xmath278 the number of unknowns in propagation ( 45 ) is the same as the number of order conditions which now take the form    @xmath279 @xmath280 @xmath281 @xmath282 \\\\ [ -8pt ] & & 20 \\lambda ( 2 \\theta -1 ) ( \\theta + 2 \\vartheta - 6 \\theta \\vartheta ) + 80 \\xi - 480 \\theta \\xi + 480 \\theta^2 \\xi \\bigg ) = 0 \\ , , \\nonumber\\end{aligned}\\ ] ]    @xmath283    @xmath284    2 the unique real solution to system ( 46 ) is @xmath285{675 + 75 \\sqrt{6}}}{30 } + \\frac{5}{2 \\sqrt[3]{675 + 75 \\sqrt{6 } } } \\ , , \\ \\ \\",
    "\\vartheta = \\frac{\\theta}{3 } \\ , , \\ ] ] @xmath286 @xmath287 solution ( 47 ) constitutes a velocity - force - gradient algorithm of the sixth order with four force and three ( since @xmath288 ) force - gradient evaluations per time step , i.e. , with @xmath289 and @xmath290 .",
    "its advantage over usual sixth - order integrators consists in the fact that it is composed from a considerably smaller number , namely @xmath291 , instead of 15 , of single exponential operators .",
    "the norm @xmath292 of seventh - order truncation errors @xmath293 ( see eq .",
    "( 45 ) ) , corresponding to solution ( 47 ) , is equal to @xmath294 .",
    "note also that the position version of decomposition ( 45 ) does not exist at @xmath277 , because then the number of unknowns is less than the number of order equations , resulting in the absence of solutions .    as has been shown in the preceding subsection for the case of fourth - order integration , algorithms with minimal numbers @xmath295 of force evaluation may not lead to optimal solutions .",
    "the reason is that slight increasing @xmath295 may significantly decrease the local errors and thus overcompensate an increased computational efforts . so that increasing @xmath295 as well as @xmath78 on unity ( note that @xmath296 ) and do not changing @xmath297 , i.e. choosing @xmath298 with @xmath299 and @xmath300 , it is possible to derive from decomposition ( 13 ) up four ( two velocity- and two position - like ) extended sixth - order schemes .",
    "they are @xmath301 \\\\ [ -7pt ] { \\rm abacacacaba } \\ , , \\ \\ \\ \\ \\ \\ { \\rm acabacabaca } \\ , , \\nonumber\\end{aligned}\\ ] ] where we have used an abbreviation that a and b denote exponential operators @xmath302 and @xmath303 , respectively , whereas letter c corresponds to @xmath304 .",
    "each of these extended schemes has itself correspondingly six , eight , four , and two sets of real solutions for time coefficients .",
    "we have realized that the smallest values of the norm @xmath305 ( see eq .  ( 48 ) ) of local errors @xmath293 within the sets are 0.0000264 , 0.0000147 , 0.000146 , and 0.00000607 , respectively . so that the last scheme should be considered as the best .",
    "more explicit form for it is @xmath306 with the optimal solution @xmath307 \\\\ [ -7pt ] \\lambda   =    \\ \\ 0&.&1131980348651556{\\rm",
    "e}\\!+\\!01 \\nonumber \\\\ \\chi     = \\ !     -0&.&1324638643416052{\\rm",
    "e}\\!-\\!01 \\nonumber \\\\ \\mu    =       \\ \\ 0&.&8642161339706166{\\rm e}\\!-\\!03 \\nonumber\\end{aligned}\\ ] ] corresponding to @xmath308 .",
    "in such a way , the error function has been reduced more than in 200 times with respect to scheme ( 47 ) for which @xmath294 .      in the case when @xmath74 we must satisfy up eighteen order conditions , namely , @xmath191 , @xmath192 , @xmath309 , @xmath200 , @xmath310 , and @xmath311 .",
    "taking into account the symmetry of time coefficients @xmath43 , @xmath44 , and @xmath102 , this can be achieved at least at @xmath312 , i.e. , using @xmath313 single exponential operators .",
    "for @xmath312 the velocity- and position - like force - gradient decomposition ( 13 ) transforms into the schemes @xmath314 respectively . the number of unknowns for both the schemes are also eighteen and we can try to solve the system of order conditions with respect to these unknowns .",
    "it is worth remarking such a system appears to be very cumbersome for schemes under consideration .",
    "for instance , the resulting non - linear equations of this system being written explicitly in mathematica create a file of 0.5 mb in length ! in view of this , our attempts to solve the equations symbolically have not meet with much success .",
    "we mention that all the results presented above for algorithms of orders 2 , 4 , and 6 have been solved analytically or in quadratures . saying in quadratures we mean that the problem was reduced to finding real zeros for a one - dimensional polynomial of a given order . so that we could identify exactly the number of solutions and their locations . here",
    "the situation is somewhat different because we must solve the system using purely numerical approaches , such as the newton method . as a result",
    ", one can not guarantee that we will found all possible solutions .",
    "however , solving the system on a computer during significantly long time , one can stay with a great probability that we have found almost all physically interesting solutions and chosen among them nearly optimal sets .",
    "the numerical calculations has been performed in fortran using the well - recognized newton solver with numerical determination of partial derivatives .",
    "the values for non - linear functions ( that constitute the system of equations ) were obtained using recursive relations ( 20)(27 ) , ( a1 ) , and ( a2 ) , but not explicit expressions for them to save the processor time and increase the precision of the computations .",
    "the initial guess for solutions were generated at random within the interval @xmath315 $ ] in each the eighteenth directions . if newton s iterations become to diverge at a particular guess or during the calculations , a next random point was involved to repeat the process .",
    "in such a way , after several days of continuous attacking the systems of equations on an origin 3800 workstation , we found two and five solutions for schemes ( 52 ) and ( 53 ) , respectively .",
    "the optimal among them are following @xmath316 b_1 = b_{12 } = \\ \\ 0&.&1839699354244402{\\rm e}\\!+\\!00 \\nonumber \\\\ [ -2pt ] c_1 = c_{12 } = \\ \\ 0 & & \\nonumber \\\\ [ -2pt ] a_2 = a_{12 } = \\ \\ 0&.&6922517172738832{\\rm e}\\!+\\!00 \\nonumber \\\\ [ -2pt ]",
    "b_2 = b_{11 } = \\ \\ 0&.&7084389757230299{\\rm e}\\!+\\!00 \\nonumber \\\\ [ -2pt ] c_2 = c_{11 } = \\ \\ 0&.&3976209968238716{\\rm e}\\!-\\!01 \\nonumber \\\\ [ -2pt ] a_3 = a_{11 } =   -0&.&3183450347119991{\\rm",
    "e}\\!+\\!00 \\nonumber \\\\ [ -2pt ] b_3 = b_{10 } = \\ \\ 0&.&1981440445033534{\\rm e}\\!+\\!00 \\nonumber \\\\ [ -2pt ] c_3 = c_{10 } = \\ \\ 0&.&2245403440322733{\\rm e}\\!-\\!01 \\nonumber \\\\ [ -2pt ] a_4 = a_{10 } = \\ \\ 0&.&6766724088765565{\\rm e}\\!+\\!00 \\nonumber \\\\ [ -2pt ] b_4 = b_9   =   -0&.&6409380745116974{\\rm e}\\!-\\!01 \\nonumber \\\\ [ -2pt ] c_4 = c_9   = \\ \\",
    "0&.&9405266232181224{\\rm e}\\!-\\!03 \\nonumber \\\\ [ -2pt ] a_5 = a_9   =   -0&.&7207972470858706{\\rm e}\\!+\\!00 \\nonumber \\\\ [ -2pt ] b_5 = b_8   =   -0&.&6887429532761409{\\rm e}\\!+\\!00 \\nonumber \\\\ [ -2pt ] c_5 = c_8   =   -0&.&7336500519635302{\\rm e}\\!-\\!01 \\nonumber \\\\ [ -2pt ] a_6 = a_8   = \\ \\",
    "0&.&3580316862350045{\\rm e}\\!+\\!00 \\nonumber \\\\ [ -2pt ] b_6 = b_7   = \\ \\",
    "0&.&1622838050764871{\\rm e}\\!+\\!00 \\nonumber \\\\ [ -2pt ] c_6 = c_7   = \\ \\",
    "0&.&2225664796363730{\\rm e}\\!-\\!01 \\nonumber \\\\ [ -2pt ] a_7 =          -0&.&3756270611751488{\\rm e}\\!+\\!00 \\nonumber\\end{aligned}\\ ] ] for velocity - like integration ( 52 ) , and @xmath317        c_{12 } = \\ \\ 0 & & \\nonumber \\\\ [ -2pt ] a_1 = a_{12 } =    \\ \\ 0&.&41009674738801111928784693005080{\\rm e}\\!+\\!00 \\nonumber \\\\ [ -2pt ] b_1 = b_{11 } =    \\ \\ 0&.&48249309817414952912695842664785{\\rm e}\\!-\\!02 \\nonumber \\\\ [ -2pt ] c_1 = c_{11 } =    \\ \\ 0&.&14743936907797528364717244760736{\\rm e}\\!-\\!03 \\nonumber \\\\ [ -2pt ] a_2 = a_{11 } =   -0&.&34123345756052780489101697378499{\\rm",
    "e}\\!+\\!00 \\nonumber \\\\ [ -2pt ] b_2 = b_{10 } =    \\ \\ 0&.&17492394861090375603419001374207{\\rm e}\\!+\\!00 \\nonumber \\\\ [ -2pt ] c_2 = c_{10 } =    \\ \\ 0&.&23288450531932545357194967600155{\\rm e}\\!-\\!03 \\nonumber \\\\ [ -2pt ] a_3 = a_{10 } =    \\ \\",
    "0&.&25644714021068150492361761631743{\\rm e}\\!+\\!00 \\nonumber \\\\ [ -2pt ] b_3 = b_9   =    \\ \\",
    "0&.&29304366370957066164364546204288{\\rm e}\\!+\\!00 \\nonumber \\\\ [ -2pt ] c_3 = c_9   =    \\ \\ 0&.&61648659635535962497705619884752{\\rm e}\\!-\\!02 \\nonumber \\\\ [ -2pt ]",
    "a_4 = a_9   =    \\ \\",
    "0&.&27765273975812438394100476242641{\\rm e}\\!+\\!00 \\nonumber \\\\ [ -2pt ] b_4 = b_8   =    \\ \\",
    "0&.&47448940168459770284238136482511{\\rm e}\\!-\\!01 \\nonumber \\\\ [ -2pt ] c_4 = c_8   =   -0&.&12307516860831240716732016960034{\\rm e}\\!-\\!01 \\nonumber \\\\ [ -2pt ] a_5 = a_8   =   -0&.&56926266869753773902939657321159{\\rm e}\\!+\\!00 \\nonumber \\\\ [ -2pt ] b_5 = b_7   =   -0&.&15299863411743974499219652320477{\\rm e}\\!-\\!02 \\nonumber \\\\ [ -2pt ] c_5 = c_7   =   -0&.&73296648559126385387017161643798{\\rm e}\\!-\\!04 \\nonumber \\\\ [ -2pt ] a_6 = a_7   =    \\ \\ 0&.&46629949890124853576794423820194{\\rm e}\\!+\\!00 \\nonumber \\\\ [ -2pt ]",
    "b_6         =   -0&.&37422994259002571606842462603791{\\rm e}\\!-\\!01 \\nonumber \\\\ [ -2pt ] c_6         =    \\ \\ 0&.&15295860994523744731993293847001{\\rm e}\\!-\\!01 \\nonumber\\end{aligned}\\ ] ] for its position - like counterpart ( 53 ) .",
    "the number of force evaluations per times step for schemes ( 52 ) and ( 53 ) is @xmath318 , whereas the number of force - gradient recalculations consists @xmath319 ( since @xmath320 and thus the two boundary letters c in formula ( 52 ) should be actually replaced by b ) and @xmath321 , respectively .    in view of a complicated structure of the ninth - order truncation uncertainties @xmath322 , the optimal solutions just presented",
    "have been chosen in somewhat other way than above , namely , by providing a minimum for the function @xmath323 .",
    "this simplified criterion was used , in particular , by kahan and li @xcite , when optimizing usual force algorithms . as a result , we have obtained @xmath324 for scheme ( 52 ) and @xmath325 is smaller in the last case , the position - like integration should be considered as more preferable .",
    "its time coefficients have been presented even with thirty second significant digits to be used in applications for very accurate integration . in order to ensure that all the digits shown are correct in both the cases , we have carried out a few additional newton s iterations in maple with up 200 digits during the internal computations , and taking as initial guesses the solutions already obtained in fortran .",
    "the position - like decomposition ( 53 ) has also another advantage over the velocity version ( 52 ) in that the all the intermediate ( @xmath326 ) states in velocity and position space stay during the integration within a given interval @xmath327 $ ] , i.e. , @xmath328 and @xmath329 .",
    "this property may be important when solving ordinary differential equations ( for specific physical systems or in pure mathematics applications ) with singularities beyond the interval of the integration ( note that , in particular , any system of differential equations of the form @xmath330 is reduced to the equations of motion under consideration in this paper ) .",
    "note also that in order to construct eighth - order schemes within usual decomposition approach ( 6 ) ( i.e. , without involving any force - gradients ) , it could be necessary to apply up @xmath331 ( instead of 23 ) single exponential propagators .",
    "such schemes has never been derived by decomposition ( 6 ) because of the serious technical difficulties .",
    "they can be explicitly introduced only by compositions of lower - order integrators ( see the next section ) . instead ,",
    "using generalized scheme ( 13 ) has allowed us to derive eighth - order algorithms by direct decompositions for the first time ( the force - gradient algorithms presented in subsection ii.b._5 _ for order six are completely new as well ) .",
    "all the decomposition algorithms obtained by us in subsections ii.b._3 _ , _ 4 _ , _ 5 _ , and _ 6 _ are collected below in table  1 . here",
    ", the designations err3 , err5 , and err7 relate to the norms @xmath332 , @xmath244 , and @xmath305 of correspondingly third- , fifth- , and seventh - order truncation errors ( see eqs .  ( 6 ) , ( 15)(18 ) , ( 34 ) , and ( 48 ) ) , whereas @xmath295 and @xmath295 denote the numbers of force and force - gradient evaluations per time step .",
    "the optimal algorithms for orders 2 , 4 , 6 , and 8 are labeled by g2 , c@xmath257 , g6 , and g8 , respectively . among other schemes presented for each given order ,",
    "such algorithms reduce the truncation uncertainties to a minimum . taking into account that this reduction is achieved at the same or nearly the same computational efforts ,",
    "the optimal algorithms should be considered as the best not only with respect to their precision but in view of the overall efficiency as well ( see also comments on this in section iii ) .",
    "lccccccccl  algorithm &  order  &  @xmath295 &  @xmath297  &  err3  &  err5  &  err7  & equations & remarks & @xmath333 label +   + [ -8pt ]  cac & 2 & 1 & 1 & @xmath334 & @xmath335 & @xmath336 & ( 28 ) & new & g2@xmath257 +  aca & 2 & 1 & 1 & @xmath337 & @xmath338 & @xmath339 & ( 29 ) &  new@xmath340 & g2 +   + [ -8pt ]  bacab & 4 & 2 & 1 & 0 & @xmath341 & @xmath342 & ( 30,32 ) & refs .",
    "@xcite &   a +  cabac & 4 & 2 & 1 & 0 & @xmath343 & @xmath344 & ( 30,33 ) & new &   a@xmath257 +  cacac & 4 & 2 & 2 & 0 & @xmath345 & @xmath346 & ( 30,35 ) & new &   a@xmath258 +  acaca & 4 & 2 & 2 & 0 & @xmath347 & @xmath348 & ( 36,37 ) & refs .",
    "@xcite &   b +  abacaba & 4 & 3 & 1 & 0 &  @xmath349 &  @xmath350 & ( 38,41/42 ) &  ref .",
    "@xcite / new@xmath340 & @xmath351 c / c@xmath257 +  cababac & 4 & 3 & 1 & 0 &  @xmath352 &  @xmath353 & ( 39,43/44 ) & ref .",
    "@xcite / new & @xmath351 d / d@xmath257 +   + [ -8pt ]  bacacacab & 6 & 4 & 3 & 0 & 0 & @xmath354 & ( 45,47 ) & new &   g6@xmath257 +  cacababacac & 6 & 5 & 3 & 0 & 0 & @xmath355 & ( 49 ) & new &   g6@xmath258 +  cabacacabac & 6 & 5 & 3 & 0 & 0 & @xmath356 & ( 49 ) & new &   g6@xmath357 +  abacacacaba & 6 & 5 & 3 & 0 & 0 & @xmath358 & ( 49 ) & new &   g6@xmath359 +  acabacabaca & 6 & 5 & 3 & 0 & 0 & @xmath360 & ( 50,51 ) &  new@xmath340 &   g6 +   + [ -8pt ]  bacacacacaca + [ -6.5pt ] & 8 & 11 & 10 & 0 & 0 & 0 & ( 52 ) & new &   g8@xmath257 + [ -6.5pt ]  @xmath361cacacacacab + [ 2.5pt ]  acacacacacac + [ -6.5pt ] & 8 & 11 & 11 & 0 & 0 & 0 & ( 53 ) &  new@xmath340 &   g8 + [ -6.5pt ]  @xmath361acacacacaca    @xmath362 the best algorithm within a given order    @xmath363the value corresponding to scheme c@xmath257",
    "@xmath364the value corresponding to scheme d@xmath257    2    finally , it is worth remarking that the problem of constructing algorithms with only positive coefficients @xmath43 and @xmath44 for orders six and higher still remains .",
    "we mention that for order four , this problem has been resolved ( see subsection ii.b._4 _ ) by transferring the force - gradient component of truncation uncertainties into the exponential propagators . for orders @xmath365",
    ", additional higher - order gradients should appear under these exponentials to provide the required positiveness .",
    "our analysis has shown , however , that such high - order exponentials ( besides their very cumbersome forms ) can not be evaluated in quadratures and need in performing implicit calculations by iteration . in view of this",
    "we can come to a conclusion that beyond fourth order , analytically integrable decomposition algorithms with purely positive coefficients do not exist .",
    "mathematically rigorous prove of this statement will be considered in our further investigation and presented elsewhere .      with increasing the order of integration to ten and higher",
    ", the construction of algorithms by direct decompositions ( 13 ) becomes to be inefficient because of a large number of the order conditions and time coefficients .",
    "however , having the already derived force - gradient integrators of lower orders @xmath2 , we can try to compose them as @xmath366 for obtaining an algorithm of order @xmath367 . then the composition constants @xmath368 , where @xmath133 , should be chosen in such a way to provide the maximal possible value of @xmath369 at a given number @xmath370 .",
    "note that lower - order propagations @xmath371 enter symmetrically in composition ( 54 ) and their total number @xmath372 accepts odd values . so that if a basic integrator @xmath373 is self - adjoint , the resulting algorithm @xmath374 will be self - adjoint as well .",
    "the idea of using formula like ( 54 ) is not new and has been applied by different authors in previous investigations .",
    "but these investigations were focused , in fact , on the compositions of usual second - order ( @xmath59 ) schemes ( to our knowledge , no actual calculations of composition constants for fourth- and higher - order - based integrators have been reported ) . although using the second - order - based approach allowed to introduce algorithms to the tenth order @xcite , further increasing @xmath369 has led to unresolved numerical difficulties when finding the coefficients of the compositions .",
    "usually , these difficulties are obviated with the help of creutz s and gocksch s method @xcite .",
    "we mention that according to this method , an algorithm of order @xmath1 can be derived by the triplet concatenation @xmath375 of a self - adjoint integrator of order @xmath2 , where @xmath376 .",
    "in particular , chin and kidwell @xcite starting from force - gradient algorithm ( 41 ) of order four and repeating procedure ( 55 ) up to order 12 , have indicated a visible increasing the efficiency of the computation with respect to second - order - based schemes . in this approach",
    ", however , the number of force and force - gradient evaluations ( the most time - consuming part of the calculations ) increases too rapidly with increasing @xmath2 , namely as @xmath377 relatively to the fourth - order integrator .",
    "the present study is aimed to overcome the above problems by an explicit consideration of four- , sixth- , and eighth - order - based ( force - gradient ) algorithms within general composition approach ( 54 ) .",
    "this results in reducing the total number of basic propagations to a minimum and providing significant speeding up the integration .",
    "the composition algorithms are derived up to the sixteenth order inclusively .      in the case when @xmath65 , the basic self - adjoint propagation is @xmath378 where @xmath379 .",
    "explicit form of higher - order truncation operators @xmath380 , @xmath381 , @xmath382 , @xmath383 , and so on ( which was previously found for @xmath380 and @xmath381 , see eqs .",
    "( 17 ) and ( 18 ) ) are not important within the composition approach . then formula ( 54 )",
    "reduces to series ( @xmath384 ) of the transformation @xmath385 with @xmath386 and @xmath387 . in view of eqs .",
    "( 56 ) and ( 57 ) , the structure of resulting propagation can be cast at each @xmath145 as @xmath388 with @xmath389 , \\ ] ] @xmath390 \\!+\\ ! q_7 [ { \\cal x}_1,{\\cal x}_1,{\\cal x}_1,{\\cal x}_1,{\\cal x}_5 ] , \\ ] ] @xmath391 { \\cal y}_{11 } = & & q_8 { \\cal x}_{11 } + q_9 [ { \\cal x}_1,{\\cal x}_1,{\\cal x}_9 ] + q_{10 } [ { \\cal x}_1,{\\cal x}_1,{\\cal x}_1,{\\cal x}_1,{\\cal x}_7 ] + \\\\ & & q_{11 } [ { \\cal x}_1,{\\cal x}_1,{\\cal x}_1,{\\cal x}_1 , { \\cal x}_1,{\\cal x}_1,{\\cal x}_5 ] + q_{12 } [ { \\cal x}_5,{\\cal x}_1,{\\cal x}_5 ] .\\end{aligned}\\ ] ] comparing ( 56 ) and ( 58 ) yields values of @xmath392-multipliers at @xmath153 , namely , @xmath393 , @xmath394 , @xmath395 , @xmath396 , and @xmath397 , whereas , @xmath398 .",
    "expanding both the sides of eq .",
    "( 57 ) into taylor s series with respect to @xmath25 , one finds that values for these multipliers at @xmath399 can be obtained using the following recursive relations    @xmath400    @xmath401    @xmath402    @xmath403 & & 7 q_2^{(n ) } { d^{(n)}}^2- { q_1^{(n)}}^3 { d^{(n)}}^k- 7 { q_1^{(n)}}^2 { d^{(n)}}^{k+1}-7 q_1^{(n ) } { d^{(n)}}^{k+2}\\big)/360 \\ , , \\end{aligned}\\ ] ]    @xmath404    @xmath138    @xmath405 & & 7 q_3^{(n ) } { d^{(n)}}^2-{q_1^{(n)}}^3 { d^{(n)}}^{k+2}- 7 { q_1^{(n)}}^2 { d^{(n)}}^{k+3 } - 7 q_1^{(n ) } { d^{(n)}}^{k+4}\\big)/360 \\ , , \\end{aligned}\\ ] ]    @xmath406 & & 42 { q_1^{(n)}}^2 q_2^{(n ) } { d^{(n)}}^2 + 294 q_4^{(n ) } { d^{(n)}}^2 - 62 q_1^{(n ) } q_2^{(n ) } { d^{(n)}}^3 + { q_1^{(n)}}^5 { d^{(n)}}^k - 31 q_2^{(n ) } { d^{(n)}}^4 + \\\\ [ 6pt ] & & 11 { q_1^{(n)}}^4 { d^{(n)}}^{k+1 } + 42 { q_1^{(n)}}^3 { d^{(n)}}^{k+2 } + 62 { q_1^{(n)}}^2 { d^{(n)}}^{k+3 } + 31 q_1^{(n ) } { d^{(n)}}^{k+4}\\big)/15120 \\ , , \\end{aligned}\\ ] ]    @xmath407    2    applying the above relations @xmath136 times will give the final values of @xmath392-multipliers and thus lead to the desired order conditions .",
    "for instance , the first condition is very simple and reads : @xmath408 .",
    "this provides @xmath409 and guarantees ( see eqs .  ( 56 ) , ( 58 ) and ( 59 ) ) that the order of the composition scheme will be at least not lower than that of the basic scheme , i.e. @xmath410 in our case .",
    "all other multipliers @xmath411 , @xmath412 , @xmath413 , ",
    "@xmath414 should be consecutively set to zero , forming higher - order conditions .",
    "the total number @xmath415 of the conditions depends on a required order @xmath416 of the composition scheme .",
    "in particular , at @xmath417 we must kill the term @xmath418 at fifth - order truncation uncertainties ( see eq .  ( 58 ) ) .",
    "taking into account eq .",
    "( 59 ) , this results in two order conditions , namely , @xmath419 and @xmath420 which can be satisfied at @xmath61 .",
    "then one obtains a system of equations , @xmath421 , and @xmath422 , with respect to two unknowns , @xmath423 and @xmath424 .",
    "the system can be solved analytically , and the solution is @xmath425 with @xmath426 that coincides ( at @xmath65 ) with the result of triplet construction ( 55 ) .",
    "this coinciding is not surprising because , as can be seen easily , both approaches ( 54 ) and ( 55 ) are identical in a partial case when @xmath61 and @xmath427 .    with further increasing @xmath369 , composition approach ( 54 )",
    "will lead to a more efficient integration .",
    "indeed , choosing @xmath428 requires the term @xmath429 in eq .  ( 58 ) should be killed additionally .",
    "this is achieved by putting @xmath430 in eq .",
    "( 59 ) , and , therefore , by solving at @xmath66 a system of four non - linear equations , @xmath419 , @xmath420 , @xmath431 , and @xmath432 with respect to the same number of unknowns @xmath423 , @xmath424 , @xmath433 , and @xmath434 . so that the minimal number of fourth - order integrators in the eight - order composition should be @xmath435 , whereas this number is equal to @xmath436 when triplet concatenation ( 55 ) is used .",
    "expressions for the non - linear equations can readily be reproduced by applying the corresponding set of recursive relations ( 60 ) .",
    "we will not present such expressions explicitly , because as has been realized , the order equations do not allow to be solved analytically at @xmath437 for any @xmath438 .",
    "but , these equations can be solved in a quite efficient way numerically using the newton s method .",
    "details of the numerical calculations are similar to those described in subsection ii.b._6_. here ( when @xmath66 , @xmath65 , and @xmath428 ) we have found five solutions , and it seems no other real solutions exist .",
    "the optimal set is @xmath439 \\\\ [ -7pt ]      d_3 =      -0&.&1090206660543938{\\rm e}\\!+\\!01 \\nonumber \\\\",
    "d_4 =   \\ \\ 0&.&1172145334546811{\\rm e}\\!+\\!01 \\ , .",
    "\\nonumber\\end{aligned}\\ ] ] solution ( 61 ) simultaneously leads the smallest values for the maximal composition coefficient @xmath440 and the norm @xmath441 of the main ninth - order term @xmath442 of truncations uncertainties .    when deriving tenth - order composition algorithms ( at @xmath65 ) , i.e. when @xmath443 , three additional order conditions arise , @xmath444 , @xmath445 , and @xmath446 , needed to eliminate the term @xmath442 ( see eqs .",
    "( 58 ) and ( 59 ) ) .",
    "then we come in overall to 7 non - linear equations which can be satisfied by appropriate choosing composition constants @xmath368 ( @xmath133 ) at @xmath447 . in this case",
    ", we have identified more than 150 real solutions and probably there are somebody others ( we stopped the searching after several days of the computations ) . among the solutions found the optimal set looks    @xmath448      d_2 =     -0&.&49193105914623101022388138864143 \\nonumber \\\\ [ -2pt ]      d_3 = \\ \\",
    "0&.&35449258654398460535529269988483 \\nonumber \\\\ [ -8pt ] \\\\ [ -8pt ]      d_4 =     -0&.&69573922271140223803036463461997 \\nonumber \\\\ [ -2pt ]      d_5 = \\",
    "\\ 0&.&39959538030329256359349977087819 \\nonumber \\\\ [ -2pt ]      d_6 = \\ \\ 0&.&54979568601438452794128031563760 \\nonumber\\end{aligned}\\ ] ] and @xmath449 .",
    "this set minimizes at once the norm @xmath450 of the main eleventh - order term @xmath451 of truncation errors and the quantity @xmath452 to the values 0.00412 and 0.843 ( @xmath453 ) , respectively . here",
    ", the number of basic propagations ( stages ) is @xmath454 , i.e. more than in two times smaller than this number @xmath455 within triplet concatenation ( 55 ) .    in order to introduce twelfth - order algorithms , @xmath456 , on the basis of fourth - order compositions it is necessary to deal with @xmath312 unknowns @xmath368 to fulfill the same number of the order conditions @xmath419 , and @xmath457=0 .",
    "here we have found more than 200 real solutions and perhaps there are somebody else .",
    "the best among them , which minimizes @xmath458 to the value 0.611 ( @xmath459 ) , is @xmath460      d_2     = \\ \\",
    "0&.&53377479890712207949282653990842 \\nonumber \\\\ [ -2pt ]      d_3     = \\",
    "\\ 0&.&12130138614668307673802291966495 \\nonumber \\\\ [ -2pt ]      d_4     = \\",
    "\\ 0&.&29650747033807195273440032505629 \\nonumber \\\\ [ -2pt ]      d_5     =     -0&.&59965999857335454018482312008233 \\nonumber \\\\ [ -8pt ] \\\\ [ -8pt ]      d_6     = \\ \\ 0&.&09043581286204437145871130429094 \\ \\nonumber \\\\ [ -2pt ]      d_7     =     -0&.&43979146257635806886778748138962 \\nonumber \\\\ [ -2pt ]      d_8     =     -0&.&30251552922346495057010240779104 \\nonumber \\\\ [ -2pt ]      d_9     = \\",
    "\\ 0&.&59895872989247982114545906953712 \\nonumber \\\\ [ -2pt ]      d_{10 } = \\ \\ 0&.&31236416538275576151816280776696 \\nonumber \\\\ [ -2pt ]      d_{11 } =     -0&.&59081230769647833184090443445303 \\nonumber\\end{aligned}\\ ] ] with @xmath461 .",
    "thus , the minimal number of fourth - order stages needed to compose the twelfth - order algorithm is @xmath462 , instead of up @xmath463 as in the case of usual triplet construction ( 55 ) .      when @xmath72 or 8 , the basic propagation reads @xmath464 or @xmath465 respectively . here ,",
    "the compositions reduce to the recursive transformation @xmath466 with @xmath467 being equal to @xmath468 or @xmath469 and @xmath384 . the left - hand - side of expression ( 66 )",
    "can again be presented at each @xmath145 as a single exponential , @xmath470 where now @xmath471 { \\cal y}_{k+3 } & = & q_3 { \\cal x}_{k+3 } + q_4 [ { \\cal x}_1,{\\cal x}_1,{\\cal x}_{k+1 } ] \\ , , \\nonumber \\\\ [ 6pt ] { \\cal y}_{k+5 } & = & q_5 { \\cal x}_{k+5 } + q_6 [ { \\cal x}_1,{\\cal x}_1,{\\cal x}_{k+3 } ] + \\nonumber \\\\ [ -6pt ] \\\\ [ -6pt ] & & q_7 [ { \\cal x}_1,{\\cal x}_1,{\\cal x}_1,{\\cal x}_1,{\\cal x}_{k+1 } ] , \\nonumber \\\\ [ 6pt ] { \\cal y}_{k+7 } & = & q_8 { \\cal x}_{k+7 } + q_9 [ { \\cal x}_1,{\\cal x}_1,{\\cal x}_{k+5 } ] + \\nonumber \\\\ [ 1pt ] & & q_{10 } [ { \\cal x}_1,{\\cal x}_1,{\\cal x}_1,{\\cal x}_1,{\\cal x}_{k+3 } ] + \\nonumber \\\\ [ 1pt ] & & q_{11 } [ { \\cal x}_1,{\\cal x}_1,{\\cal x}_1,{\\cal x}_1 , { \\cal x}_1,{\\cal x}_1,{\\cal x}_{k+1 } ] \\ , . \\nonumber\\end{aligned}\\ ] ] recursive relations for multipliers @xmath472 , corresponding to transformation ( 66 ) , remain the same in form as in the case @xmath59 . so that we should merely to put either @xmath72 or @xmath74 in eq .",
    "( 60 ) to obtain the required set of order conditions .    in view of the equivalence of eqs .",
    "( 54 ) and ( 55 ) at @xmath473 , the first step on increasing the order of composition scheme to @xmath428 when @xmath72 or @xmath443 when @xmath74 is trivial and yields @xmath61 , @xmath474 , and @xmath426 .",
    "the next steps on increasing @xmath369 to the higher values @xmath475 , @xmath476 , and @xmath477 at @xmath72 or 8 are similar to the steps described above for @xmath59 .",
    "namely , they lead to the necessity of solving numerically the system of @xmath78 non - linear equations , @xmath419 , @xmath420 ,  , @xmath478 , with @xmath66 , 7 , and 11 , respectively .",
    "the only difference from the case @xmath59 is that at @xmath72 or 8 and @xmath479 , the number of equations reduces from 12 to @xmath480 , because of a somewhat simplified structure of the last truncation operator shown in eq .",
    "( 67 ) with respect to that appearing in eq .",
    "( 59 ) . so that below we will present final results only with brief comments for each the above cases .",
    "the best set among the solutions found were identified as those that minimize the quantity @xmath481 ( almost always this led to the minimization of the norm for the main term of truncation errors as well ) .    for @xmath72 and @xmath443",
    "there are five solutions with the best set @xmath482      d_2 =   \\ \\   0&.&11922404430206648052593264029266{\\rm e}\\!+\\!00 \\\\ [ -2pt ]      d_3 =       -0&.&10677277516805770678518370004925{\\rm e}\\!+\\!01 \\nonumber\\end{aligned}\\ ] ] with @xmath483 and @xmath484 ( within three significant digits ) . at @xmath74 and @xmath456",
    "we have found again five solutions and the optimal one is @xmath485      d_2 =   \\",
    "\\   0&.95777180465215511634906238400062&{\\rm e}\\!-\\!01 \\\\ [ -2pt ]      d_3 =       -0&.10545412798113627599734519738778&{\\rm e}\\!+\\!01 \\nonumber\\end{aligned}\\ ] ] with @xmath483 and @xmath486 .    for @xmath72 and @xmath456",
    "there were more than 150 solutions with the optimal set @xmath487      d_2 = \\ \\",
    "0&.&44631941526959576960102601257986 \\nonumber \\\\ [ -2pt ]      d_3 =     -0&.&66447133641046221008529452937721 \\nonumber \\\\ [ -8pt ] \\\\ [ -8pt ]      d_4 =     -0&.&58260619571844248816548809046510 \\nonumber \\\\ [ -2pt ]      d_5 = \\",
    "\\ 0&.&64081619589013117205634311707157 \\nonumber \\\\ [ -2pt ]      d_6 = \\ \\ 0&.&31805596598883340430918587031701 \\nonumber\\end{aligned}\\ ] ] and @xmath449 with @xmath488 .",
    "when @xmath74 and @xmath489 we have computed more than 150 solutions also and identified among them the following optimal one @xmath490      d_2 = \\ \\",
    "0&.&46763050598682150405078600842681 \\nonumber \\\\ [ -2pt ]      d_3 =     -0&.&63245030403272077359889720182431 \\nonumber \\\\ [ -8pt ] \\\\ [ -8pt ]      d_4 =     -0&.&58223379020720528275072356442667 \\nonumber \\\\ [ -2pt ]      d_5 = \\",
    "\\ 0&.&62109852451075548059651686410928 \\nonumber \\\\ [ -2pt ]      d_6 = \\ \\ 0&.&29686555238409826518407483052733 \\nonumber\\end{aligned}\\ ] ] with @xmath449 and @xmath491 .    at @xmath72 and",
    "@xmath489 the best set , among more than 200 solutions realized , is    @xmath492      d_2     =     -0&.&47389771786834222637653653795835 \\nonumber \\\\ [ -2pt ]      d_3     = \\ \\",
    "0&.&54376649763596364670254533524499 \\nonumber \\\\ [ -2pt ]      d_4     =     -0&.&64055411141298491334240825973418 \\nonumber \\\\ [ -2pt ]      d_5     = \\",
    "\\ 0&.&28139025047030322588052971757542 \\nonumber \\\\ [ -8pt ] \\\\ [ -8pt ]      d_6     = \\",
    "\\ 0&.&56345778618405675650229011409013 \\nonumber \\\\ [ -2pt ]      d_7     = \\",
    "\\ 0&.&64205004597526944181678051477448 \\nonumber \\\\ [ -2pt ]      d_8     =     -0&.&16972825772391310721875128881451 \\nonumber \\\\ [ -2pt ]      d_9     =     -0&.&57973031669054683392549871514985 \\nonumber \\\\ [ -2pt ]      d_{10 } = \\ \\ 0&.&27398580283063379870623390979762 \\nonumber\\end{aligned}\\ ] ]    with @xmath493 and @xmath494 .    finally for @xmath74 and @xmath495 the optimal solution , among again more than 200 sets calculated , is    @xmath496      d_2     = \\ \\",
    "0&.&55268563185301488324882994018746 \\nonumber \\\\ [ -2pt ]      d_3     =     -0&.&58134339535533393315605544309940 \\nonumber \\\\ [ -2pt ]      d_4     = \\",
    "\\ 0&.&23403665265420481243563202333267 \\nonumber \\\\ [ -2pt ]      d_5     =     -0&.&51788958989817055303978658827453 \\nonumber \\\\ [ -8pt ] \\\\ [ -8pt ]      d_6     =     -0&.&43983975477992920522811970527874 \\nonumber \\\\ [ -2pt ]      d_7     =     -0&.&20137078150942169957468111993444 \\nonumber \\\\ [ -2pt ]      d_8     = \\",
    "\\ 0&.&34412872002528894622975927197416 \\nonumber \\\\ [ -2pt ]      d_9     = \\",
    "\\ 0&.&03072591760996558798895428309765 \\nonumber \\\\ [ -2pt ]      d_{10 } = \\ \\ 0&.&48652953960727041281280535031455 \\nonumber\\end{aligned}\\ ] ]    with @xmath493 and @xmath497 decreases with increasing @xmath369 at any @xmath2 ( 4 , 6 , and 8) considered .",
    "besides the improvement of the precision of the integration , this leads to an extension of the region of stability of the composition algorithms . indeed",
    ", the constants @xmath368 appear in the compositions ( see eq .",
    "( 54 ) ) in the form of the term @xmath498 ( and its combinations of different orders when evaluating truncation uncertainties @xmath499 ) .",
    "then , taking into account that @xmath481 , the maximal value for the size @xmath25 of the time step , at which these uncertainties do not exceed an acceptable level of precision , can be estimated as @xmath500 .",
    "this also explains a well correlation of @xmath501 with the minimum for the norm of truncation errors .",
    "sixth- and eighth - order based compositions may have advantages over algorithms basing on fourth - order schemes especially when constructing very precise integrators with high values of @xmath369 .",
    "for instance , in order to derive an integrator of order @xmath495 on the basis of triplet concatenation ( 55 ) of a scheme of order @xmath65 , it is necessary to apply @xmath502 fourth - order stages .",
    "taking into account that each such a stage requires @xmath503 force and @xmath260 force - gradient evaluations ( see eqs .  ( 38 ) or ( 39 ) ) , one obtains in total the numbers @xmath504 and @xmath505 corresponding to a whole time step . on the other hand , in view of result ( 73 ) , an integrator of order @xmath495 can be composed at @xmath74 and @xmath480 using @xmath506 eighth - order stages for each of which @xmath507 ( see eq .",
    "( 53 ) ) . so that the overall number of force and force - gradient recalculations will be equal only to 231 that is much smaller than the above values 2187 and 729 obtained in the case @xmath65",
    "in molecular dynamics ( md ) simulations we dealt with a system of @xmath508 identical ( @xmath509 ) particles interacting through a lennard - jones potential , @xmath510 $ ] .",
    "the particles were placed in a cubic box of volume @xmath511 and periodic boundary conditions have been used to exclude the finite - size effects . for the same reason ,",
    "the initial potential was modified as @xmath512 at @xmath513 with @xmath514 for @xmath515 , where @xmath516 is the cut - off radius .",
    "then the potential @xmath517 and its first - order derivative @xmath518 will be continuous functions any where in @xmath519 including the truncation point @xmath520 .",
    "this avoids an energy drift caused by the passage of particles via the surface of truncation sphere as well as singularities of @xmath521 and @xmath522 at @xmath520 .",
    "the simulations were carried out in a microcanonical ensemble at a reduced density of @xmath523 and a reduced temperature of @xmath524 .",
    "all runs of the length in @xmath525 time steps each were started from an identical well equilibrated initial configuration @xmath526 .",
    "the precision of the integration was measured in terms of the relative total energy fluctuations @xmath527 , where @xmath528 and @xmath529 denotes the microcanonical averaging .",
    "the equations of motion were integrated using force - gradient algorithms ( 30 ) , ( 36 ) , and ( 38 ) of the fourth order within schemes a , a@xmath257 , b , c , and c@xmath257 ( see eqs . (",
    "32 ) , ( 33 ) , ( 37 ) , ( 41 ) , and ( 42 ) , respectively ) . for the purpose of comparison the integration with the help of usual fourth - order algorithm by forest and ruth ( fr ) @xcite ( which represents , in fact",
    ", triplet concatenation ( 55 ) of second - order verlet scheme ( 8) ) has been performed as well .",
    "the corresponding results for the total energy fluctuations as functions of the length @xmath26 of the simulations is presented in subset ( a ) of fig .  1 for a typical reduced time step of @xmath530 .",
    "as can be seen , schemes a , b , and c exhibit a similar equivalence in energy conservation .",
    "this is in agreement with our theoretical predictions presented in subsection ii.b._4 _ , where the precision of algorithms has been estimated in terms of the norm @xmath244 ( eq .  ( 34 ) ) of fifth - order truncation errors @xmath236 . in particular for schemes a , b , and c , it has been obtained @xmath531 , 0.000715 , and 0.000715 , respectively .",
    "further , as expected , scheme a@xmath257 ( @xmath532 ) is worse in precision and leads to values of @xmath533 which are approximately in @xmath534 times larger .",
    "note that in microcanonical ensembles the total energy is an integral of motion , @xmath535 , so that within approximate md simulations , smaller values of @xmath533 correspond to a better precision of the integration .",
    "it is worth remarking also that another integral of motion , namely , total momentum @xmath536 , is conserved exactly within force - gradient approach ( 13 ) .",
    "the reasons are that all velocities are updated at once ( see eq .",
    "14 ) during each stage of decompositions and the fact that @xmath537 as well as @xmath538 ( as can be verified readily using the structure of eq .  ( 11 ) ) .    the best accuracy in energy conservation can be achieved within optimized scheme c@xmath257 ( see fig .  1 ( a ) ) for which @xmath539 .",
    "it minimizes @xmath533 to a level of @xmath540 that is in factor @xmath541 lower than those related to schemes a , b , and c. at the same time , the usual fr algorithm leads to the worst result @xmath542 .",
    "we see , therefore , that applying force - gradient approach allows to reduce unphysical energy fluctuations up in two orders in magnitude .",
    "let us show now that this overcompensates an increased computational efforts caused by additional calculations of the force gradients . the processor time used for carrying out these calculations ( see eq .",
    "( 11 ) ) was nearly in 3 times larger than that needed for evaluations of forces itself .",
    "further , we should take into account that algorithm c@xmath257 requires @xmath503 force and @xmath260 force - gradient recalculations per time step , whereas @xmath503 and @xmath543 for fr scheme . as a result ,",
    "one obtains that the size @xmath25 of one step within fr propagation must be in @xmath544 times shorter than in the case of algorithm c@xmath257 for spending the same overall processor time within both the cases during the integration over a fixed time interval . finally , in view of the fact that the global error and thus the function @xmath533 are proportional to the fourth power of @xmath25 , i.e. , @xmath545 , one finds that , at the above conditions , the level of conservation of the fr scheme reduces from @xmath546 to @xmath547 . so that relative efficiency of scheme c@xmath257 with respect to the fr integrator is actually equal to @xmath548 .    in order to ensure that scheme c@xmath257 ( eq .  ( 42 ) ) is indeed the best among whole family ( 40 ) of c@xmath257-like integrators ( 38 )",
    ", we carried out additional simulations in which the parameter @xmath228 , being constant within each simulation , varied from one run to another .",
    "the total energy fluctuations obtained in such simulations at the end of the runs for two ( fixed within each run ) undimensional time steps , namely , @xmath549 and 0.005 , are shown in subset ( b ) of fig .  1 as functions of @xmath228 .",
    "as can be observed , the dependencies @xmath550 have the global minimum located at the same point @xmath551 independently on the size @xmath25 of the time step .",
    "this point coincides completely with the minimum given by eq .",
    "( 42 ) for the function @xmath268 ( see eq .  ( 34 ) and relations following just after eq .",
    "( 41 ) ) which is also included in the subset and plotted by a dashed curve ( where an upper lying part of the curve corresponds to sign plus in eq .",
    "( 40 ) , whereas a lower lying part as well as the simulation data are related to sign minus ) .",
    "so that our criterion on measuring the precision of the integration in terms of the norm of local truncated uncertainties is in excellent accord .",
    "moreover , the energy fluctuations appear to be proportional to that norm @xmath244 as @xmath552 and the coefficient of the resulting proportionality almost does not depend on @xmath228 and @xmath25 .    2    it is worth remarking that the results reported in this subsection should be considered as the first attempts of applying force - gradient algorithms to md simulations .",
    "in previous studies , algorithms of such a kind have been tested for classical @xcite and quantum @xcite mechanics systems composed of a few bodies only ( or even one body moving in an external field ) .",
    "the present investigations have demonstrated that force - gradient algorithms can be used with equal success in statistical mechanics simulations dealing with a great number of particles , i.e. , when @xmath553 . in the last case",
    ", the calculations of force gradients also presents no difficulties . indeed , during the integration we should first evaluate usual forces @xmath554 for each particle @xmath6 , where @xmath555 .",
    "this involves a number of operations which is proportional to the second power of @xmath3 . then in view of the structure of eq .  ( 11 ) and taking into account the fact that particle s accelerations @xmath556 are already known quantities , the calculations of gradients @xmath557 will require a number of operations which is proportional to the same power of @xmath3 , i.e. , @xmath558 ( but not to @xmath559 , as it may look at first sight ) . further reducing the computational efforts",
    "is possible taking into account that function @xmath560 ( see eq .",
    "( 11 ) ) decreases with increasing the interparticle separation @xmath561 more rapidly than initial potential @xmath562 .",
    "in such a case , a secondary cut - off radius @xmath563 can be introduced when evaluating @xmath564 ( that is equivalent to putting @xmath565 at @xmath566 ) in order to speed up the calculations .",
    "one of the simplest way to test force - gradient algorithms of higher orders is to apply them to solution of the two - dimensional kepler problem . in particular , this way has been chosen by chin and kidwell @xcite when testing fourth - order algorithms a , b , and c and higher - order iterated counterparts of the last scheme . as has been established , this force - gradient scheme is particularly outstanding and appears to be much more superior than usual non - gradient integrators , such as fourth - order by forest and ruth @xcite as well as by runge and kutta @xcite , sixth - order by yoshida @xcite , etc . in this subsection",
    "it will demonstrated that further significant improvement in the effectiveness of the integration can be reached replacing standard iteration procedure ( 55 ) by advanced composition approach ( 54 ) .",
    "moreover , using our new sixth- and eighth - order force - gradient algorithms as the basis for the composition has allowed us to perform the computations with extremely high precision which exceeds by several orders the accuracy observing within standard fourth - order based schemes .",
    "we will consider a motion of a particle ( planet ) of mass @xmath567 moving in the ( gravitation ) field @xmath568 of the central body ( sun ) with mass @xmath569 , where @xmath570 is the constant responsible for intensity of the interaction . for simplifying the calculations ,",
    "one neglects the influence of all other ( @xmath571 ) particles ( planets , for which @xmath572 ) in the ( solar ) system .",
    "then the motion can be described by the following system of two equations , @xmath573    where @xmath574 , and for clarity of the presentation we have used units in which the reduced mass @xmath575 and the interaction constant @xmath576 are equal to unity . since the quantity @xmath577 ( which is associated with the total energy ) presents an integral of motion for equations ( 74 ) , it should be conserved during the integration .",
    "however , this will so if these equations are solved exactly . in numerical simulations ,",
    "the local truncation uncertainties @xmath499 accumulate step by step of the integration process , leading at @xmath578 to the global errors @xmath579 , where @xmath369 denotes the order of a self - adjoint algorithm . so that the quantity @xmath580 can be presented as a function of time as @xmath581 where @xmath582 and @xmath583 is the main step - size independent error coefficient .",
    "in our simulations we solved two - dimensional kepler problem ( 74 ) with the same initial conditions @xmath584 and @xmath585 as those used by previous authors @xcite to make comparative analysis more convenient .",
    "the resulting highly eccentric ( @xmath586 ) orbit provides a nontrivial testing ground for trajectory integration .",
    "the numerical effectiveness of each algorithm was gauged in terms of main error coefficient @xmath587/\\delta t^q$ ] ( see eq .  ( 75 ) ) .",
    "it can actually be extracted from the fraction @xmath588/\\delta t^q$ ] by choosing smaller and smaller time steps @xmath25 to be entitled to completely ignore next higher - order corrections @xmath589 .",
    "this typically occurs in the neighborhood of @xmath590 , where @xmath591 is the period of the elliptical orbit . since we are dealing with algorithms of high orders @xmath369 and",
    "small step sizes @xmath25 , all the calculations have been carried out in fortran using quadruple ( instead of double , as for md simulations ) precision arithmetics for ensuring the correctness of the results .",
    "the normalized energy deviations @xmath592 obtained in the simulations applying fourth- , sixth- , eighth- , tenth- , twelfth- , and fourteenth - order algorithms are plotted in subsets ( a ) , ( b ) , ( c ) , ( d ) , ( e ) , and ( f ) of fig .  2 , respectively , as functions of time @xmath593 during one period @xmath78 of the orbit .",
    "these deviations are substantial only near mid period when the particle is at its closest position to the attractive center .",
    "note also that within symplectic integration , the nonconservation of energy for periodic orbits is periodic and its averaged ( over times @xmath594 ) value is bounded and independent on @xmath593 ( the independence of averaged energy fluctuations at @xmath578 has already been demonstrated in md simulations , see fig .  1 ) .",
    "that is way we presented the results in fig .  2 within a narrow region of time near @xmath595 , where the maximal deviations of @xmath583 will give a main contribution to the overall fluctuations .",
    "in the case of fourth - order integration we used most typical algorithms a , b , c , and c@xmath257 ( see eqs .",
    "( 32 ) , ( 37 ) , ( 41 ) , and ( 42 ) , respectively ) . as can be seen from subset ( a ) of fig .  2",
    ", the pattern here is somewhat different than that in md simulations ( please compare with fig .  1 ( a ) ) .",
    "the algorithm c is clearly better than schemes a and b , that confirms the conclusion of ref .  @xcite . on the other hand , integrator c@xmath257 does not exhibit an improved precision in energy conservation with respect to scheme c. nearly the same was seen when iterating these algorithms to higher orders with the help of triplet construction ( 55 ) . in particular , the sixth - order c@xmath257-counterpart appeared to be even slightly better than the corresponding counterpart of scheme c ( see subset ( b ) of fig .  2 ) .",
    "at the same time , higher - order integrators basing on schemes a and b were definitely worse . so that the obvious candidates for fourth - order based iterations ( 55 ) and compositions ( 54 ) are schemes c and c@xmath257 .",
    "in order to understand why scheme c@xmath257 does not lead to the expected improvement over scheme c in this particular situation , it should be taken into account that we deal with a small system , actually with one body moving in an effective external field .",
    "moreover , such a body moves periodically and , thus , covers only small part of phase space during its displacement .",
    "this is contrary to many - body statistical systems , where the phase point may visit considerably wider regions of phase space . in the latter case ,",
    "during the averaging along the phase trajectories , different components @xmath131 of fifth - order local uncertainties ( see eq .  ( 17 ) ) will enter with approximately the same weights when forming the total error vector @xmath236 .",
    "this has been tentatively assumed when writing the norm @xmath244 of that vector in the form of eq .",
    "( 34 ) and further minimizing @xmath244 to obtain algorithm c@xmath257 . in the case of a few - body system , especially with periodic motion , the above weights may differ considerably .",
    "this complicates an analysis of the truncation terms and makes impossible to find an exact global minimum for them within any analytical approach .",
    "note , however , that even here , the assumption on uniform contribution of truncation - error components works relatively well . indeed , in view of dependencies shown in subsets ( a ) and ( b )",
    ", we can stay that both the schemes c and c@xmath257 are comparable in precision . the same was observed for their higher - order counterparts .",
    "for this reason ( and to reserve more free space for other dependencies ) , in further subsets ( c)(f ) we will draw only curves corresponding to scheme c.    2    when considering the sixth - order integration , we realized that direct velocity - like scheme defined by eqs .",
    "( 45 ) and ( 47 ) is much worse ( the maximum deviation of @xmath583 were more than in two orders larger ) than its extended position - like counterpart given by eqs .",
    "( 50 ) and ( 51 ) .",
    "this is in agreement with a prediction of subsection ii.b._5_. the result corresponding to the position - like algorithm is plotted in subset ( b ) of fig .  1 by the bold dashed curve marked as g6 .",
    "as can be seen , all three curves shown in this subset , namely c , c@xmath257 , and g6 are close enough to each other . but algorithm g6 uses only @xmath299 force evaluations per time step , instead of @xmath596 needed for iterated c- and c@xmath257-like schemes ( for all these three cases the number of force - gradient evaluations is the same and equal to @xmath300 ) . therefore , for order six , direct decomposition approach ( 13 ) leads to more efficient integration than concatenations of fourth - order schemes .",
    "beginning from order eight , the above concatenations based on standard iterations ( 55 ) and advanced compositions ( 54 ) will result in completely different integrators .",
    "the simulation data for these iterated and composed c - based integrators are shown in subset ( c ) of fig .  2 by thin ( marked simply as c ) and bold ( marked as s ) solid curves , respectively .",
    "the curves related to tenth- and twelfth - order iteration and composition integrators ( based on the same fourth - order scheme c ) are plotted correspondingly in subsets ( d ) and ( e ) of fig .  2 , and marked by the same letters c and s. we mention that c - marked curves have already been presented in the work by chin and kidwell @xcite up to order 12 .",
    "they are redisplayed by us in order to illustrate the evident superiority of our new composition approach over the standard iteration method . indeed , for the iteration integrators ( c - marked curves ) of orders @xmath428 , 10 , and 12 , the magnitudes of the normalized energy coefficient @xmath592 after one period are 1.44 , 19.24 , and 424.8 , respectively .",
    "on the other hand , the magnitudes related to the composition integrators ( s - marked curves ) constitute correspondingly 0.0953 , 0.0577 , and 1.41 , i.e. , they are approximately in 15 , 330 , and 300 times smaller . in addition , the composition integrators are faster with respect to their iteration versions in factors 9/7 , 27/13 , and 81/23 for @xmath428 , 10 , and 12 , respectively ( see subsection iii.a._1 _ ) , and thus the resulting efficiencies will increase yet .    what about sixth- and eight - order - based composition schemes at @xmath597 ?",
    "first of all , let us consider the case of eight - order integration . here , the direct scheme chosen was position - like integrator ( 53 ) ( it leads to better energy conservation with respect to its velocity - like counterpart ( 52 ) ) .",
    "the result corresponding to this integrator is plotted in subset ( c ) of fig .  2 by the dashed curve marked as g8 .",
    "as can be seen , the fourth - order - based composition scheme ( s - curve ) is better at @xmath428 with respect to both direct g8 and iterated g6-like versions . with increasing the order to 10 and 12 , all they become to be nearly equivalent in the accuracy of energy conservation .",
    "but fourth - order - based approach requires somewhat fewer number of operations .",
    "for instance , for order 12 , one obtains that the numbers of force and gradients evaluations per time step are equal for it to @xmath598 and @xmath599 , respectively , whereas these numbers for sixth- and eighth - order - based compositions g6 and g8 are @xmath600 , @xmath601 and @xmath602 ( where g6-integrator requires less operations than g8-scheme ) . however , beginning from order 14 , the situation reverses .",
    "the fourth - order - based composition s - approach becomes to be not longer accessible ( because of the absence of explicit expressions for its time coefficients here ) . on the other hand , applying the standard fourth - order - based iteration c - method is very inefficient .",
    "in particular , at @xmath489 the maximal energy deviations within this method is @xmath603 with @xmath604 and @xmath605 . at the same time , the higher - order - based composition schemes lead to much accurate results , namely , @xmath606 with @xmath607 and @xmath608 for g6- as well as @xmath609 with @xmath610 for g8-based schemes ( where the better precision for the last scheme compensates to some extent its increased values for quantities @xmath295 and @xmath297 ) .",
    "we see , therefore , that the relative efficiencies of g6- and g8-based schemes with respect to c - approach constitute about @xmath611@xmath612 .",
    "finally , in the case @xmath495 ( not shown in fig .  2 ) we have obtained the values @xmath613 and @xmath614 corresponding to c- and g8-based schemes , respectively .",
    "taking into account the numbers of @xmath295 and @xmath297 for these schemes presented at the end of subsection ii.c._2 _ , one can conclude that the efficiency increases here also approximately in @xmath611 to @xmath612 times .",
    "in this work we have formulated a general theory of construction of force - gradient algorithms for solving the equations of motion in classical and quantum systems .",
    "this has allowed us to extend considerably the class of analytically integrable symplectic schemes .",
    "the new algorithms derived include self - adjoint direct decomposition integrators of orders two , four , six , and eight as well as their composition counterparts up to the sixteenth order in the time step .",
    "as has been proven theoretically and confirmed in actual numerical simulations , these algorithms lead to significant improvement in the efficiency of the integration with respect to existing force - gradient and non - gradient schemes .",
    "it has been demonstrated that force - gradient algorithms can be used with equal success as for describing the motion in few - body classical and quantum mechanics systems as well as for performing statistical molecular dynamics observations over many - particle collections . in all the cases",
    "the calculation of force gradients presents no difficulties and requires computational efforts comparable with those needed to evaluate usual forces itself",
    ". the new algorithms may be especially useful for the prediction and study of very subtle dynamical effects in different areas of physics and chemistry including the problems of astrophysical interest , whenever the precise integration of motion during very long times is desirable .",
    "the algorithms introduced exactly reproduce such important features of classical dynamics as time reversibility and symplecticity .",
    "this explains their excellent energy conservation and stability properties . in this context",
    "it should be mentioned another class of ( non - gradient ) integrators recently developed @xcite on the basis of a modified runge - kutta approach . like the force - gradient algorithms ,",
    "the runge - kutta - like integrators also allow to produce time - reversible and symplectic trajectories in phase space with , in principle , arbitrary order in precision .",
    "however , such integrators are implicit and require cumbersome systems of globally coupled ( via positions and forces of all particles ) nonlinear equations be solved by expensive iterations at each step of the integration process . since in practice such equations can not be solved exactly , the time reversibility and symplecticity can be violated .",
    "this may lead , in particular , to instabilities in long - term energy conservation , i.e. , to the same problem inherent in the tradition ( nonsymplectic ) runge - kutta method ( see the introduction ) .",
    "all these disadvantages are absent in the present approach , where the phase trajectories are propagated explicitly in time by applying consecutive simple shifts of particles in velocity and position space with exact preservation of the phase volume and reversibility of the generated solutions .",
    "the approach presented can also be adapted to the integration of motion in more complicated systems , such as systems with orientational or spin degrees of freedom , etc . , where splitting of the liouville operator into more than two parts may be necessary to obtain analytically solvable subpropagators .",
    "these and other related problems will be considered in a separate investigation .",
    "part of this work was supported by the fonds zur frderung der wissenschaftlichen forschung under project no .  15247 .        the recursive relations for the highest - order multipliers @xmath132 ( see eqs .",
    "( 13 ) , ( 15 ) , and ( 18 ) ) corresponding to the first type of self - adjoint transformations given by the first line of eq .",
    "19 are :                @xmath620 \\zeta_6^{(n+1 ) } = \\zeta_6^{(n ) } + & &       a^{(n ) } \\big(18 ( { a^{(n)}}^3 { \\sigma^{(n)}}^3 - 84 \\alpha^{(n ) } \\big(15 \\beta^{(n ) } - \\big(a^{(n ) } + \\nu^{(n)}\\big ) { \\sigma^{(n)}}^2\\big ) +     ( { a^{(n)}}^2 \\big ( 15 \\nu^{(n ) } { \\sigma^{(n)}}^3 - 252 \\beta^{(n ) } \\sigma^{(n ) } \\big ) + \\\\ & &     6 a^{(n ) } \\big(210 \\gamma_4^{(n ) } - 28 \\beta^{(n ) } \\nu^{(n ) } \\sigma^{(n ) } + { \\nu^{(n)}}^2 { \\sigma^{(n)}}^3\\big ) +     2 \\big(630 \\gamma_4^{(n ) } \\nu^{(n ) } - \\\\ & & 630 \\gamma_2^{(n ) } \\sigma^{(n ) } - 42 \\beta^{(n ) } { \\nu^{(n)}}^2 \\sigma^{(n ) } +       { \\nu^{(n)}}^3 { \\sigma^{(n)}}^3\\big)\\big)/7560 \\ , , \\end{aligned}\\ ] ]                        @xmath629 \\zeta_5^{(n+1 ) } = \\zeta_5^{(n ) } - & & \\big ( 2520 { \\alpha^{(n)}}^2 b^{(n ) } - 36 { b^{(n)}}^3 { \\nu^{(n)}}^4 + 42 c^{(n ) } { \\nu^{(n)}}^3 \\sigma^{(n ) } +    30 { b^{(n)}}^2 { \\nu^{(n)}}^4 \\sigma^{(n ) } + 168 \\alpha^{(n ) } \\nu^{(n ) } \\big ( 15 c^{(n ) } - \\\\ & & b^{(n ) } \\nu^{(n ) } \\big(6 b^{(n ) } + \\sigma^{(n)}\\big)\\big ) -    b^{(n ) } \\big(15120 \\gamma_3^{(n ) } \\nu^{(n ) } - { \\nu^{(n)}}^3 \\big(252 \\beta^{(n ) } + 504 c^{(n ) } + \\nu^{(n ) } { \\sigma^{(n)}}^2\\big)\\big)\\big)/45360 \\ , , \\end{aligned}\\ ] ]                all these relations as well as other symbolic expressions presented in the work has been carried out using mathematica 4.0 and maple 6 packages installed on the silicon graphics origin 3800 workstation at linz university .",
    "the numerical calculations have also been performed there ."
  ],
  "abstract_text": [
    "<S> a consequent approach is proposed to construct symplectic force - gradient algorithms of arbitrarily high orders in the time step for precise integration of motion in classical and quantum mechanics simulations . within this approach the basic algorithms </S>",
    "<S> are first derived up to the eighth order by direct decompositions of exponential propagators and further collected using an advanced composition scheme to obtain the algorithms of higher orders . </S>",
    "<S> contrary to the scheme by chin and kidwell [ phys . </S>",
    "<S> rev . </S>",
    "<S> e * 62 * , 8746 ( 2000 ) ] , where high - order algorithms are introduced by standard iterations of a force - gradient integrator of order four , the present method allows to reduce the total number of expensive force and its gradient evaluations to a minimum . at the same time </S>",
    "<S> , the precision of the integration increases significantly , especially with increasing the order of the generated schemes . </S>",
    "<S> the algorithms are tested in molecular dynamics and celestial mechanics simulations . </S>",
    "<S> it is shown , in particular , that the efficiency of the new fourth - order - based algorithms is better approximately in factors 5 to 1000 for orders 4 to 12 , respectively . </S>",
    "<S> the results corresponding to sixth- and eighth - order - based composition schemes are also presented up to the sixteenth order . for </S>",
    "<S> orders 14 and 16 , such highly precise schemes , at considerably smaller computational costs , allow to reduce unphysical deviations in the total energy up in @xmath0 times with respect to those of the standard fourth - order - based iteration approach .    </S>",
    "<S> pacs numbers : 02.60.cb ; 05.10.-a ; 95.10.ce ; 95.75.pq    2 </S>"
  ]
}
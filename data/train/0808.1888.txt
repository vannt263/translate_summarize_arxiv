{
  "article_text": [
    "motivated by problems arising from dna sequencing and the properties of circle graphs of 2-in , 2-out digraphs , arratia , bollobs and sorkin introduced a new family of graph invariants , the interlace polynomials , in @xcite .",
    "these invariants may be defined either through recursive elimination of vertices or as sums indexed by subsets of vertices @xcite , much as the tutte polynomial may be defined either through recursive elimination of edges or as a sum indexed by subsets of edges .",
    "ellis - monaghan and sarmiento @xcite have shown ( among other results ) that one of the one - variable interlace polynomials , @xmath3 , can be computed in polynomial time for bipartite distance hereditary graphs .",
    "their proof depends on the corresponding result for the tutte polynomials of series - parallel graphs , first proved in @xcite , and the fact that bipartite distance hereditary graphs are circle graphs of euler circuits in medial graphs of series - parallel graphs .    in this paper",
    "we discuss several useful features of interlace polynomials that have been modified to incorporate vertex weights . after defining the weighted interlace polynomials in section 2",
    ", we observe that a simple adjustment of weights makes it unnecessary to have the third term in the fundamental recursion @xmath4 of @xcite . in section 3",
    "we present reduction formulas that can be used to eliminate a vertex that is a twin of another , or pendant on another .",
    "these pendant - twin reductions are analogous to the series - parallel reductions of electrical circuit theory , in which two resistors wired in series ( resp .",
    "parallel ) are replaced by one resistor with @xmath5 ( resp .",
    "@xmath6 ) .",
    "the pendant - twin reductions are used to extend the result of ellis - monaghan and sarmiento mentioned above to the two - variable interlace polynomials of looped , non - bipartite distance hereditary graphs . in section 4 we show that if @xmath7 is a looped graph obtained using the composition construction of cunningham @xcite then @xmath1 is equal to the interlace polynomial of a suitably  re - weighted version of @xmath8 ; this generalizes results of @xcite that describe the @xmath3 polynomials of simple graphs constructed through substitution .",
    "composition has proven useful in the study of circle graphs ( see for instance @xcite ) , so it is not surprising to see it appear in the theory of the interlace polynomials . in  section 5",
    "we discuss some elementary properties of the unweighted @xmath3 polynomial , focusing on simple ( unlooped ) graphs .",
    "in section 6 we sketch a combinatorial description of the interlace polynomials of trees and forests introduced by anderson , cutler , radcliffe and the present author in @xcite .",
    "this combinatorial description bears a striking resemblance to the activities description of the tutte polynomial , and in  section 7 we extend it to arbitrary graphs using activities  defined with respect to recursive interlace polynomial calculations .",
    "we do not know whether or not these activities have a convenient combinatorial description in general .",
    "we should observe that the idea of using vertex weights for interlace polynomials has appeared before , though our implementation of the idea is different from those we have seen elsewhere . in @xcite",
    ", courcelle introduced a multivariate interlace polynomial that is more complicated than the polynomials we consider here , and involves assigning indeterminates to the vertices of a graph .",
    "he used monadic second - order logic to show that it is possible to compute bounded portions of this polynomial ( and the entire unweighted interlace polynomial @xmath9 ) in polynomial time for graphs of bounded clique - width .",
    "this technique is quite general but involves large built - in constants , so for pendant - twin reductions and compositions the formulas presented here are considerably more practical . also , blser and hoffmann @xcite use the idea of assigning indeterminates to vertices , along with the adjunction of two types of pendant - twin vertices , to show that evaluating interlace polynomials is generally @xmath10-hard for almost all values of the variables .    in @xcite arratia , bollobs and sorkin",
    "observe that there is a natural ( so natural it is `` practically a tautology '' ) correspondence between the kauffman bracket of an alternating link diagram and an interlace polynomial of an associated 2-in , 2-out digraph .",
    "the situation is clear enough that we do not discuss it in detail , but it is worth mentioning that this correspondence may be extended to arbitrary link diagrams using vertex weights . the well - known relationship between the jones and tutte polynomials is similar , in that an edge - weighted or -signed version of the tutte polynomial conveniently incorporates crossing information when dealing with non - alternating links @xcite .",
    "we recall terminology and notation of @xcite . _",
    "graphs _ may have loops but not multiple edges or multiple loops .",
    "the _ rank _ @xmath11 and _ nullity _ @xmath12 of a graph @xmath2 are those of its adjacency matrix considered over @xmath13 .",
    "if @xmath14 then @xmath15 $ ] is the subgraph of @xmath2 induced by @xmath16 .",
    "in addition , we say a graph is ( _ vertex- _ ) _ weighted _ by functions @xmath17 and @xmath18 mapping @xmath19 into some commutative ring with unity @xmath20 . for ease of notation",
    "we prefer to denote a weighted graph @xmath2 rather than using the triple @xmath21 ; even when two graphs differ only in their weights we will denote them @xmath2 and @xmath22 rather than @xmath21 and @xmath23 .",
    "also , if a graph is modified then unless otherwise stated , we presume that the weight functions @xmath17 and @xmath18 are modified in the most natural way . for instance , if @xmath24 then the other vertices of @xmath2 have the same vertex weights in @xmath25 as they have in @xmath2 .",
    "if @xmath2 is a weighted graph then the _ unweighted version _ of @xmath2 is denoted @xmath26 ; it has the same underlying graph and the trivial weights @xmath27 .",
    "[ 2varq]if @xmath2 is a vertex - weighted graph then the _ weighted interlace polynomial _ of @xmath2 is @xmath28)}(y-1)^{n(g[s])}.\\ ] ]    if @xmath2 is a vertex - weighted graph then the _ weighted vertex - nullity interlace polynomial _ of @xmath2 is @xmath29)}.\\ ] ]    if @xmath2 is a vertex - weighted graph then the _ weighted vertex - rank interlace polynomial _ of @xmath2 is @xmath30)}.\\ ] ]    the original , unweighted interlace polynomials of @xmath2 are recovered by using @xmath31    the three weighted interlace polynomials of a particular weighted graph @xmath2 may be substantially different from each other . considered as functions defined on the class of all weighted graphs , however , the three polynomials are essentially equivalent : if @xmath32 is obtained from @xmath2 by re - weighting @xmath33 using the indeterminates in the polynomial ring @xmath34 $ ] , then the value of any one weighted interlace polynomial on @xmath35 determines the values of all three polynomials on all weighted versions of @xmath2 . for instance , @xmath1 can be obtained from @xmath36 by substituting @xmath37 for @xmath38 , @xmath39 for @xmath40 and @xmath41 for @xmath42 .",
    "( in contrast , the functions defined by the three unweighted interlace polynomials are rather different from one another , as there are many pairs of graphs distinguished by @xmath43 but not by @xmath3 @xcite . )",
    "we mention all three weighted polynomials simply because one of them may be more convenient for some purposes than the others .",
    "most of our results are stated for @xmath9 because it specializes to the others most readily .    in fact",
    "any one of @xmath44 , @xmath36 , @xmath45 determines @xmath2 up to isomorphism , because the vertex weights identify the contribution of each @xmath14 .",
    "the looped vertices of @xmath2 appear in the 1-element subsets @xmath16 of rank 1 ( nullity 0 ) , some pairs of adjacent vertices of @xmath2 appear in the 2-element subsets @xmath16 that contain at least one unlooped vertex and have rank 2 ( nullity 0 ) , and the other pairs of adjacent vertices of @xmath2 appear in the 2-element subsets @xmath16 that contain two looped vertices and have rank 1 ( nullity 1 )",
    ". moreover the same comment applies even if only one of @xmath46 is nontrivial , i.e. , if @xmath47 or @xmath48 .",
    "this might make it seem possible to simplify our discussion by considering only @xmath17 or only @xmath18 , but we prefer to use both weights because they produce especially easy - to - read formulas , as noted in the discussions of theorems [ theorem1 ] and [ theorem3 ] below . setting one weight identically equal to 1 would not simply leave us with the other weight ; in essence , the remaining one would replace the ratio of the original two .",
    "consequently , using only @xmath17 or only @xmath18 would entail unnecessary algebraic complications and losses of generality , because many formulas would require division .",
    "for instance , with @xmath47 proposition [ prop1 ] would state that replacing @xmath49 with @xmath50 results in a graph @xmath22 with @xmath51 .",
    "the special case @xmath52 would require a separate statement , and of course @xmath53 would be ruled out .",
    "our first proposition follows immediately from definition [ 2varq ] .",
    "[ prop1]suppose @xmath24 and @xmath54 .",
    "let @xmath22 be obtained from @xmath2 by changing the weights of @xmath55 to @xmath56 and @xmath57",
    ". then @xmath58 .",
    "a fundamental property of the interlace polynomials is that they can be calculated recursively with the local complementation and pivot operations used by kotzig @xcite , bouchet @xcite and arratia , bollobs and sorkin @xcite .",
    "( local complementation ) if @xmath55 is a vertex of @xmath2 then @xmath59 is obtained from @xmath2 by toggling  adjacencies @xmath60 involving neighbors of @xmath55 that are distinct from @xmath55 .    ( pivot )",
    "if @xmath55 and @xmath61 are distinct vertices of @xmath2 then the graph @xmath62 is obtained from @xmath2 by toggling  adjacencies @xmath60 such that @xmath63 , @xmath64 is adjacent to @xmath55 in @xmath2 , @xmath42 is adjacent to @xmath61 in @xmath2 , and either @xmath64 is not adjacent to @xmath61 or @xmath42 is not adjacent to @xmath55 .",
    "note that local complementation includes loop - toggling ( when @xmath65 is a neighbor of @xmath55 distinct from @xmath55 ) but pivoting does not .",
    "[ theorem1]if @xmath2 is a weighted graph then @xmath1 can be calculated recursively using the following properties .",
    "\\(a ) if @xmath55 is a looped vertex then @xmath66    \\(b ) if @xmath55 and @xmath61 are loopless neighbors then @xmath67    \\(c ) if @xmath2 has no non - loop edges then @xmath1 is @xmath68    the proofs of parts ( a ) and ( b ) of theorem [ theorem1 ] are essentially the same as the proofs of the corresponding formulas for the unweighted two - variable interlace polynomial @xcite . indeed ,",
    "if we read @xmath17 as includes  and @xmath18 as excludes  then  the weighted formulas serve as mnemonic devices to recall the proofs .",
    "for instance part ( a ) is proven as follows .",
    "the term @xmath69 reflects the fact that if @xmath70 then @xmath15=(g - a)[s]$ ] , so the contributions of @xmath16 to @xmath1 and @xmath71 differ only by a factor @xmath72 .",
    "the term @xmath73 reflects the fact that if @xmath74 then @xmath75)=r \\begin{pmatrix } 1 & \\mathbf{1 } & \\mathbf{0}\\\\ \\mathbf{1 } & m_{11 } & m_{12}\\\\ \\mathbf{0 } & m_{21 } & m_{22}% \\end{pmatrix } = 1+r \\begin{pmatrix } m_{11}^{c } & m_{12}\\\\ m_{21 } & m_{22}% \\end{pmatrix } = 1+r((g^{a}-a)[s - a]),\\ ] ] where bold numerals represent rows and columns and @xmath76 differs from @xmath77 in every entry . consequently the contributions of @xmath16 to @xmath1 and @xmath78 to @xmath79 differ by a factor @xmath80 .",
    "the more complicated formula of part ( b ) reflects , among other things , the fact that each subset @xmath14 with @xmath81 contributes to all three terms ; the last two contributions cancel each other .",
    "part ( c ) follows directly from  definition [ 2varq ] .",
    "it is not technically necessary to mention graphs with loops in ( c ) , as loops can always be removed using part ( a ) . however applying part ( a ) to",
    "completely disconnected graphs is obviously inefficient .",
    "other properties of the unweighted interlace polynomials also extend naturally to the weighted polynomials .",
    "for instance , the second and third parts of theorem [ theorem2 ] below extend two properties discussed in section 3 of @xcite . the first part will be useful in section 4 , where we discuss substituted graphs .",
    "[ theorem2](a ) if @xmath24 is loopless then @xmath82    \\(b ) if @xmath83 are loopless neighbors then @xmath84    \\(c ) if @xmath2 is the union of disjoint subgraphs @xmath85 and @xmath86 then @xmath87 .    to prove ( a ) , note that if @xmath88 then the adjacency matrix of @xmath15 $ ] may be represented by @xmath89 adding the first row to each of those in the second group results in @xmath90 the adjacency matrix of @xmath91 $ ] . definition [ 2varq ] then tells us that    @xmath92)}(y-1)^{n(g[s])}\\\\ &   ~\\\\ &   = \\sum_{a\\in s\\subseteq v(g)}(% % tcimacro{\\dprod \\limits_{s\\in s}}% % beginexpansion { \\displaystyle\\prod\\limits_{s\\in s } } % endexpansion \\alpha(s))(% % tcimacro{\\dprod \\limits_{v\\not \\in s}}% % beginexpansion { \\displaystyle\\prod\\limits_{v\\not \\in s } } % endexpansion \\beta(v))(x-1)^{r(g^{a}[s])}(y-1)^{n(g^{a}[s])}\\\\ &   ~\\\\ &   = q(g^{a})-\\beta(a)q(g^{a}-a).\\end{aligned}\\ ] ]    the proofs of ( b ) and ( c ) are essentially the same as the proofs of the corresponding results in @xcite .",
    "many properties of the unweighted interlace polynomials extend directly to the weighted polynomials , as we see in theorems [ theorem1 ] and [ theorem2 ] .",
    "it may be a surprise that some properties of the unweighted interlace polynomials can be significantly simplified using vertex weights .",
    "for instance , consider a computation tree representing a recursive implementation of theorem [ theorem1 ] .",
    "the tree has two branches for each application of part ( a ) , three branches for each application of part ( b ) , and a leaf for each application of part ( c ) . as noted in the proof of theorem [ theorem1 ]",
    ", the three terms of part ( b ) all incorporate contributions from the same subsets @xmath14 .",
    "the recursive computation calculates these same contributions three times , on separate branches .",
    "this inefficiency can be eliminated by rephrasing part ( b ) of theorem [ theorem1 ] so that no three - fold branches are necessary .",
    "[ cor1]if @xmath55 and @xmath61 are loopless neighbors in  @xmath2 then @xmath93 , where @xmath94 is obtained from @xmath95 by changing the weights of @xmath55 to @xmath96 and @xmath97 .",
    "let @xmath98 be the graph obtained from @xmath95 by changing the weights of @xmath55 as in proposition [ prop1 ] , with @xmath99 and @xmath100  @xmath101",
    ". then @xmath102 and @xmath103 , so @xmath104 = @xmath105 .",
    "on the other hand , proposition [ prop1 ] tells us that @xmath106    if @xmath107 and @xmath108 are used instead of the weights given in corollary [ cor1 ] , then the resulting formula @xmath109 still has only two branches , and bears an interesting resemblance to part ( a ) of theorem [ theorem1 ] .",
    "however using division to define @xmath110 may occasionally cause some algebraic difficulties , e.g. , it complicates the evaluation at @xmath111 , and it prohibits the use of rings in which @xmath112 is a divisor of zero .",
    "corollary [ cor1 ] is one of several results in which vertex weights allow us to extend properties of the unweighted version of @xmath3 , seemingly the simplest kind of interlace polynomial , to the other interlace polynomials . in this instance",
    "the extended property is that of possessing a recursive description represented by a binary computation tree .",
    "another result of this type is corollary [ cor2 ] , which extends remark 18 of @xcite : if @xmath55 and @xmath61 are loopless neighbors in @xmath2 then the unweighted vertex - nullity interlace polynomials of @xmath2 and @xmath62 are the same .",
    "[ cor2]let @xmath55 and @xmath61 be unlooped neighbors in @xmath2 , and let @xmath113 be the weighted graph obtained from @xmath62 by changing the weights of @xmath55 and @xmath61 to @xmath114 , @xmath115 , @xmath116 and @xmath117 .",
    "then @xmath118 .",
    "applying corollary [ cor1 ] to @xmath113 , with the roles of @xmath55 and @xmath61 reversed , tells us that @xmath119 = @xmath120 .",
    "observe that @xmath121 has the underlying graph @xmath122 , and differs from @xmath25 only in the weights of @xmath61 , which are given by @xmath123 and @xmath124 . consequently @xmath125",
    "= @xmath126 = @xmath127 .",
    "as @xmath128 = @xmath129 , the result follows directly from  corollary [ cor1 ] .",
    "if we are confident that division by @xmath112 will cause no trouble , corollary [ cor2 ] may be restated with a simpler conclusion : using @xmath130 , @xmath108 , @xmath131 and @xmath132 yields @xmath133 .",
    "other novel properties of the weighted interlace polynomials arise from a general observation .",
    "suppose @xmath83 happen to have the property that for @xmath14 , the rank and nullity of @xmath16 are determined by the rank and nullity of @xmath134 , perhaps in different ways according to which of @xmath135 is contained in @xmath16",
    ". then it may be possible to adjust @xmath49 and @xmath136 in such a way that the weighted interlace polynomial of the weight - adjusted version of @xmath137 incorporates all the information in @xmath1 .",
    "the simplest instance of this observation occurs when @xmath55 and @xmath61 give rise to identical rows and columns in the adjacency matrix of @xmath2 .",
    "two vertices @xmath135 of @xmath2 are _ _  identical twins _ _",
    "if ( i ) either they are looped and adjacent or they are unlooped and not adjacent , and ( ii ) they have the same neighbors outside @xmath138 .",
    "identical twins are called _ clones _ in @xcite , and unlooped identical twins are called _ duplicates _ in @xcite and _ false twins _ in @xcite .",
    "we prefer the present terminology because the adjective _ false _ seems inappropriate , and because we do not know what we would call non - identical duplicates or clones in definition 7 below .",
    "the following result extends proposition 40 of @xcite , proposition 4.14 of @xcite and section 3.1 of @xcite to vertex - weighted graphs .",
    "[ theorem3]suppose @xmath55 and @xmath61 are identical twins in @xmath2 .",
    "let @xmath22 be the graph obtained from @xmath137 by changing the weights of @xmath55 : @xmath139 and @xmath140",
    ". then @xmath141 .    if @xmath142 then @xmath143)$ ] = @xmath144)$ ] , because the  adjacency matrices are the same .",
    "if @xmath145 then @xmath143)$ ] = @xmath144)$ ] = @xmath146)$ ] = @xmath147)$ ] , because the only difference among the adjacency matrices is that the matrix of @xmath148 $ ] has two identical rows and columns , corresponding to @xmath55 and @xmath61 . as mentioned above , it is helpful to read @xmath17 as includes  and @xmath18 as excludes  so that ( for instance ) the appearance of @xmath149 in @xmath150 indicates that if @xmath151  then the summand of @xmath152 corresponding to @xmath16 includes the summand of @xmath1 corresponding to @xmath153 .",
    "theorem [ theorem3 ] has the following inductive generalization .",
    "suppose @xmath154 and @xmath155 are identical twins in @xmath2 . if @xmath22 is the graph obtained from @xmath156 by changing the weights of @xmath55 to @xmath157 then @xmath158 .",
    "we refer to the process of combining  several identical twins into a single vertex as an _ identical twin reduction _ no matter how many  identical twins are combined .",
    "[ theorem4]suppose @xmath61 is an unlooped degree - one vertex pendant on @xmath55 .",
    "let @xmath22 be the graph obtained from @xmath137 by changing the weights of @xmath55 : @xmath159 and @xmath160",
    ". then @xmath158 .",
    "if @xmath151 then @xmath143)$ ] = @xmath144)$ ] ,  and if @xmath142  then @xmath143)$ ] = @xmath161)-2 $ ] = @xmath146)$ ] = @xmath144)$ ] .",
    "if @xmath162 are unlooped and pendant on @xmath55 then @xmath163 are identical twins , so we can combine them into a single re - weighted vertex @xmath61 using theorem [ theorem3 ] and then remove @xmath164 using theorem [ theorem4 ] .",
    "we refer to the removal of any number of unlooped vertices pendant on the same vertex as an _ unlooped pendant vertex reduction_. theorem [ theorem4 ] extends proposition 4.12 of @xcite and section 3.2 of @xcite , where collections of pendant vertices are called _",
    "combs_.    a recursive calculation that depends solely on theorem [ theorem1 ] and corollary [ cor1 ] is represented by a mixed binary - ternary computation tree ; if corollary [ cor1 ] is always used in place of part ( b ) of theorem [ theorem1 ] then the tree will be binary .",
    "using identical twin and unlooped pendant vertex reductions makes the computation tree smaller , because each time one of these reductions is used , we avoid splitting the resulting portion of the calculation into branches .",
    "similarly , a tutte polynomial computation that incorporates series - parallel reductions and deletion - contraction operations will generally result in a smaller formula than a computation that involves only deletion - contraction operations can provide .",
    "this latter observation was made precise in @xcite : computing the tutte polynomial of a matroid @xmath165 using series - parallel reductions and deletion - contraction operations will result in an expression with at least @xmath166 terms , where @xmath166 is crapo s @xmath18 invariant @xcite ; moreover if @xmath167 the lower bound is attainable .",
    "( this result is merely the extension to the tutte polynomial of the important theory of reliability domination ; see @xcite for expositions . ) for interlace polynomials , analogous lower bounds are derived from the unweighted vertex - nullity polynomial @xmath168 .",
    "the coefficient of @xmath42 in @xmath169 is denoted @xmath170 as in @xcite , and the evaluation @xmath171 is denoted @xmath172 .    [ theorem5]if part ( c ) of theorem [ theorem1 ] is applied only to loopless graphs then a computation of @xmath1 using corollary [ cor1 ] and theorems [ theorem1 ] , [ theorem3 ] and [ theorem4 ] is represented by a computation tree with no fewer than @xmath173 leaves .",
    "if @xmath2 is a simple graph then the computation tree has no fewer than @xmath174 leaves .",
    "we quickly review some elementary properties of @xmath169 from @xcite .",
    "this polynomial is described recursively as follows .",
    "if @xmath2 has a loop at @xmath55 then @xmath169 = @xmath175 + @xmath176 , if @xmath55 and @xmath61 are loopless neighbors then @xmath169 = @xmath176 + @xmath177 , and if @xmath178 is the edgeless @xmath179-vertex graph then @xmath180 .",
    "the latter includes the empty graph @xmath181 with @xmath182 .",
    "it follows by induction on the number of vertices that no graph has any negative coefficient in @xmath169 , and hence every graph has @xmath183 and @xmath184 . moreover , every nonempty simple graph has @xmath185 and every disconnected simple graph has @xmath186 .",
    "theorem [ theorem5 ] is certainly true for @xmath178 , as @xmath187 .    proceeding inductively ,",
    "observe that if corollary [ cor1 ] or part ( a ) or ( b ) of theorem [ theorem1 ] is applied to a graph @xmath188 represented by a certain node of the computation tree , and @xmath189 and @xmath190 are the graphs represented by the ( first two ) resulting branch nodes , then @xmath191 = @xmath192 + @xmath193 ; certainly then @xmath194 = @xmath195 + @xmath196 .",
    "( by the way , we call vertices of the computation tree _ nodes _ in order to distinguish them from vertices of @xmath2 . ) if theorem [ theorem3 ] or [ theorem4 ] is applied to remove a vertex @xmath61 from a graph @xmath197 then @xmath198 = @xmath199 , because the formulas of theorems [ theorem3 ] and [ theorem4 ] yield @xmath200 when @xmath49 = @xmath136 = @xmath201 = @xmath202 = @xmath203 , @xmath204 and @xmath205 .",
    "it remains to consider the special case involving simple graphs .",
    "we actually prove a slightly different result , namely : if @xmath2 is simple then the portion of the computation tree involving only nodes corresponding to connected graphs has no fewer than @xmath206 leaves .",
    "if @xmath2 is disconnected then @xmath186 so @xmath2 satisfies the result trivially .",
    "if @xmath207 is a connected , simple graph with @xmath208 then @xmath2 satisfies the result because @xmath209 .",
    "proceeding inductively , observe that if corollary [ cor1 ] or theorem [ theorem1 ] ( b ) is applied to a connected graph @xmath188 represented by a certain node of the computation tree , and @xmath189 and @xmath190 are the graphs represented by the ( first two ) resulting branch nodes , then @xmath191 = @xmath192 + @xmath193 .",
    "it follows that @xmath210 = @xmath211 + @xmath212 . if theorem [ theorem3 ] or theorem [ theorem4 ] is used to remove a vertex @xmath61 from a connected , simple graph @xmath188 with 3 or more vertices then @xmath213 , by corollary 4.17 of @xcite .",
    "theorem [ theorem5 ] is of limited value because the computations discussed are not optimal .",
    "the restriction that part ( c ) of theorem [ theorem1 ] is only applied to loopless graphs is an obvious inefficiency .",
    "in addition , if some ( combinations of ) weights are 0 then it would be natural to simply ignore the corresponding parts of the computation .",
    "there are also other useful twin reductions that do not fall under theorem [ theorem5 ] .",
    "two vertices @xmath135 of @xmath2 are _",
    "_  fraternal twins _",
    "_ if ( i ) either they are looped and nonadjacent or they are unlooped and adjacent , and ( ii ) they have the same neighbors outside @xmath138 .    unlooped fraternal twins are called _ true twins _ in @xcite , but we prefer the present terminology because the rows and columns of the adjacency matrix corresponding to fraternal twins are not quite the same . here is an extension of proposition 4.15 of @xcite to weighted graphs .",
    "[ theorem6]suppose @xmath55 and @xmath61 are fraternal twins in @xmath2 .",
    "let @xmath22 be the graph obtained from @xmath137 by changing the weights of @xmath55 : @xmath150 = @xmath214 and @xmath215 = @xmath216",
    ". then @xmath158 .",
    "if @xmath151 then @xmath143)$ ] = @xmath144)$ ]  = @xmath217)$ ] , because the  adjacency matrices are the same . if @xmath142 then @xmath143)$ ] = @xmath144)$ ] = @xmath161)-2 $ ] .",
    "theorem [ theorem6 ] has the following inductive generalization .",
    "suppose @xmath154 and @xmath155 are fraternal twins in @xmath2 . if @xmath22 is the graph obtained from @xmath156 by changing the weights of @xmath55 to @xmath218 then @xmath158 .",
    "we refer to the process of combining  several fraternal twins into a single vertex as a _ fraternal twin reduction _ no matter how many  fraternal twins are combined .",
    "in general , fraternal twin reductions are just as useful as identical twin reductions . however ,",
    "as noted in proposition 38 of @xcite and corollary 4.16 of @xcite they have the effect of multiplying the unweighted vertex - nullity polynomial by powers of 2 .",
    "( observe that if @xmath49 = @xmath136 = @xmath201 = @xmath202 = @xmath203 and @xmath204 then theorem [ theorem6 ] gives @xmath150 = @xmath215 = @xmath219 . )",
    "consequently the lower bounds of theorem [ theorem5 ] are not valid for computations that utilize theorem [ theorem6 ] along with corollary [ cor1 ] and theorems [ theorem1 ] , [ theorem3 ] and [ theorem4 ] .",
    "if we are given a reduction of a graph @xmath2 to disconnected vertices using twin reductions and unlooped pendant vertex reductions , then theorems [ theorem3 ] , [ theorem4 ] and [ theorem6 ] describe @xmath1 in linear time  simply update the vertex weights at each step , and at the end refer to part ( c ) of theorem [ theorem1 ] .",
    "if we are not given such a reduction then determining whether or not any such reduction exists , and finding one if possible , can be accomplished in polynomial time : as in corollary 5.3 of @xcite , simply search @xmath19 repeatedly for unlooped degree - one vertices and pairs of vertices @xmath135 with the same neighbors outside @xmath138 .",
    "hence if @xmath2 has such a reduction then in polynomial time , theorems [ theorem3 ] , [ theorem4 ] and [ theorem6 ] provide a description of @xmath1 that completely avoids the branching formulas of corollary [ cor1 ] and parts ( a ) and ( b ) of theorem [ theorem1 ] .",
    "this observation extends theorem 6.4 of @xcite from @xmath3 to @xmath9 and from simple graphs that can be analyzed without fraternal twin reductions to looped graphs that can be analyzed using all three types of reductions :    if a graph @xmath2 can be reduced to a collection of disconnected vertices using unlooped pendant vertex reductions and the two types of twin reductions then theorems [ theorem3 ] , [ theorem4 ] and [ theorem6 ] provide a polynomial - time description of @xmath1 .",
    "the theorem refers to a _ description _ rather than a _ computation _ because we have ignored the cost of arithmetic operations in the ring @xmath20 . in case @xmath220 arithmetic operations have low cost , and describing a weighted polynomial",
    "@xmath1 is the same as computing an evaluation of the unweighted polynomial @xmath1 .",
    "the full unweighted polynomial may be recovered from several evaluations by interpolation , so the theorem provides a polynomial - time computation of the unweighted polynomial . in more complicated rings like @xmath221",
    "$ ] arithmetic operations may be so expensive as to prohibit polynomial - time computation of entire weighted polynomials . a thorough discussion of these matters is given by courcelle @xcite .",
    "in this section we reformulate and extend some results of arratia , bollobs and sorkin @xcite regarding substituted graphs , using the following version of a construction introduced by cunningham @xcite .    [ comp]a vertex - weighted graph @xmath2 is the _ composition _ of vertex - weighted graphs @xmath188 and @xmath8 , @xmath7 , if the following conditions hold .",
    "\\(a ) @xmath222 consists of a single unlooped vertex @xmath55 .",
    "\\(b ) the vertex @xmath55 is unweighted in both @xmath188 and @xmath8 , i.e. , @xmath223 in @xmath188 and @xmath8 .",
    "\\(c ) @xmath224 , and the vertices of @xmath2 inherit their weights from @xmath188 and @xmath8 .",
    "\\(d ) @xmath225 and @xmath226 .    requiring @xmath55 to be unlooped and unweighted in both @xmath188 and @xmath8",
    "guarantees that no information is lost when we remove @xmath55 in constructing @xmath2 .",
    "[ h ]    weighif.ps    definition [ comp ] includes several other familiar notions .",
    "if @xmath55 is isolated in @xmath188 or @xmath8 then @xmath227 is the disjoint union of @xmath228 and @xmath229 .",
    "if @xmath55 is adjacent to every other vertex of @xmath188 and @xmath8 then @xmath227 is also denoted @xmath230 .",
    "this is traditionally called a join  but that term has recently been used for general compositions @xcite . if @xmath55 is adjacent to every other vertex of @xmath188 then @xmath227 is the graph obtained by substituting @xmath228 for @xmath55 in @xmath8 . if @xmath55 is adjacent to every other vertex of @xmath188 and @xmath228 is edgeless or complete then the ( un)looped vertices of @xmath228 are twins in @xmath227",
    ".    the following observation will be useful .",
    "[ prop2 ] suppose two graphs @xmath231 and @xmath232 are identical except for the weights of a single vertex @xmath55 , and let @xmath233 be the graph that is identical to both @xmath231 and @xmath232 except for @xmath234 and @xmath235",
    ". then @xmath236 .",
    "let @xmath55 be an unweighted vertex of a simple vertex - weighted graph @xmath188 , and let @xmath189 and @xmath190 be the full subgraphs of @xmath228 induced by the neighbors ( resp .",
    "non - neighbors ) of @xmath55 .",
    "any weighted interlace polynomial @xmath237 may be analyzed in the following way .",
    "eliminate all edges between vertices of @xmath228 using pivots and weight - changes as in  corollary [ cor1 ] .",
    "( in general there will be many different sequences of pivots that may be used ; this lack of uniqueness is not important in the analysis . ) the assignments of individual vertices of @xmath188 to @xmath189 and @xmath190 may change during this process , and vertex weights may also change ; but these reassignments and weight changes will be the same for all graphs @xmath8 . as in the proof of proposition 39 of @xcite",
    "these pivots will not affect the internal structure of @xmath8 , because no two vertices of @xmath8 have distinct , nonempty sets of neighbors in @xmath188 . here",
    "the phrase `` internal structure ''  refers to vertex weights , the positions of loops , and adjacencies , including adjacencies between @xmath55 and other vertices of @xmath8 .",
    "when step 1 is complete , @xmath237 is expressed as a sum in which each summand is the product of an initial multiplying factor and the weighted interlace polynomial @xmath238 of a graph in which every edge is incident on a vertex of @xmath239 .",
    "if @xmath240 then @xmath241 is isolated , so the only effect of @xmath241 is to multiply that summand by @xmath242 .",
    "this same effect is realized by removing @xmath241 and incorporating @xmath243 into the initial multiplying factor , so we may assume that every summand has @xmath244 . in a summand with @xmath245",
    "the vertices of @xmath246 are all identical twins , and may be consolidated into a single vertex @xmath55 using theorem [ theorem3 ] . in a summand with @xmath247 a single vertex @xmath248 may be introduced with @xmath249 and @xmath250 ; this will not affect the value of the corresponding summand .",
    "as in step 1 , these manipulations are the same for all @xmath8 .    step 3 .",
    "the weighted interlace polynomial @xmath237 is now expressed as a sum in which each summand is the product of an initial multiplying factor and a weighted interlace polynomial @xmath251 in which @xmath252 differs from @xmath8 only in the weights of @xmath55 . in each summand",
    "we multiply the @xmath17 and @xmath18 weights of @xmath55 by the initial multiplying factor .",
    "this has the effect of multiplying @xmath251 by that factor , so the summand is now simply @xmath251 .",
    "proposition [ prop2 ] tells us that the sum is equal to a single weighted interlace polynomial @xmath251 , where @xmath49 and @xmath136 are obtained by adding together the @xmath17 and @xmath18 weights of @xmath55 in the various summands .",
    "we deduce that there are weights @xmath49 and @xmath136 that depend only on @xmath188 and @xmath55 , and have the following property : in every instance of definition [ comp ] involving @xmath188 , the interlace polynomial @xmath237 equals @xmath251 , where @xmath252 is obtained from @xmath8 by using @xmath49 and @xmath136 as weights for @xmath55 .",
    "finding explicit formulas for these weights is not difficult .",
    "[ theorem8]let @xmath188 be a vertex - weighted simple graph with an unweighted vertex @xmath55 .",
    "then every composition @xmath227 has @xmath253 , where @xmath252 is obtained from @xmath8 by using the following weights for @xmath55 .",
    "@xmath254    with @xmath255 , we have @xmath256 = @xmath237 = @xmath251 = @xmath257 . with @xmath8 consisting of two adjacent , unlooped , unweighted vertices @xmath55 and @xmath241 we have @xmath258 = @xmath237 = @xmath259  = @xmath260 . the stated formulas for @xmath49 and @xmath136 follow .",
    "in case @xmath261 might be a zero divisor in the ring @xmath20 , one can avoid any difficulty with the formulas of theorem [ theorem8 ] by first evaluating them in the polynomial ring @xmath262 $ ] , and then evaluating the resulting division - free formulas in @xmath20 .",
    "theorem [ theorem8 ] concerns compositions @xmath227 in which @xmath188 is simple . if @xmath188 has looped vertices , a similar analysis requires two new steps .",
    "begin by removing all loops in @xmath228 using local complementation as in part ( a ) of theorem [ theorem1 ] .",
    "the result is a description of @xmath263 as a sum in which each summand is the product of an initial factor and an interlace polynomial @xmath238 or @xmath264 , with no loops in @xmath265 .",
    "step 4 . after applying steps 1 - 3 to each of these summands ,",
    "collect terms to obtain a formula @xmath266 in order to distinguish the two terms on the right - hand side we denote by @xmath267 the copy of @xmath55 in @xmath268 .",
    "it might seem that we now have to determine four unknowns , namely the vertex weights @xmath49 , @xmath269 , @xmath136 and @xmath270 it turns out though that these unknowns are not independent .",
    "there is an obvious isomorphism between @xmath271 and @xmath268 , and consequently @xmath272 may be obtained from @xmath273 simply by replacing @xmath274 with @xmath49 .",
    "theorem [ theorem2 ] tells us that @xmath275 so @xmath276 may be obtained from @xmath273 by replacing @xmath274 with @xmath49 .",
    "that is , the coefficient of @xmath49 in @xmath251 is precisely the same as the coefficient of @xmath274 in @xmath277 .",
    "it follows that the sum @xmath251 + @xmath277 is unchanged if we replace @xmath49 by @xmath49 + @xmath274 and replace @xmath274 by @xmath278 .    [ theorem9]let @xmath188 be a vertex - weighted graph with an unweighted , unlooped vertex @xmath55 .",
    "then @xmath188 and @xmath55 determine weights @xmath49 , @xmath136 and @xmath270 such that every composition @xmath227 has @xmath279 , where @xmath252 is obtained from @xmath8 by using @xmath49 and @xmath136 as weights for @xmath55 and @xmath280 is obtained from @xmath268 by using @xmath281 and @xmath270 as weights for @xmath267 , the copy of @xmath55 in @xmath280 .",
    "formulas for the three weights mentioned in  theorem [ theorem9 ] may be derived from three instances of the theorem .",
    "we use @xmath228 and @xmath188 as in theorem [ theorem8 ] , and also @xmath282 , the graph obtained from @xmath188 by attaching a loop at @xmath55 .",
    "these correspond respectively to compositions of @xmath188 with graphs @xmath283 such that @xmath284 ; @xmath285 with @xmath241 an unweighted , unlooped neighbor of @xmath55 ; and @xmath286 with @xmath287 an unweighted , looped neighbor of @xmath55 . definition [ 2varq ] gives the following values .",
    "@xmath288 @xmath289 @xmath290 we deduce these formulas .",
    "@xmath291 @xmath292 @xmath293 separate formulas for @xmath136 and @xmath270 are derived in the obvious ways by adding and subtracting the last two .",
    "as before , possible problems with denominators may be avoided by first evaluating the formulas in @xmath294 $ ] .",
    "we close this section with different formulas for the weights @xmath49 , @xmath136 and @xmath270 that appear in theorems [ theorem8 ] and [ theorem9 ] .",
    "suppose @xmath188 has an unweighted , unlooped vertex @xmath55 .",
    "let @xmath295 denote the open neighborhood of @xmath55 , i.e. , the set containing the vertices @xmath296 that neighbor @xmath55 . given a  subset @xmath297 let @xmath298 ( resp .",
    "@xmath299 ) be the row ( resp .",
    "column ) vector with entries indexed by @xmath300 whose @xmath301 entry is 1 or 0 according to whether @xmath302 or @xmath303 . also let @xmath304 be the adjacency matrix of @xmath305 $ ] .",
    "note that @xmath306 and @xmath307{cc}% m & \\kappa\\\\ \\rho & 0 \\end{array } \\right )   , \\;\\;r\\left ( \\begin{array } [ c]{cc}% m & \\kappa\\\\ \\rho & 1 \\end{array } \\right )   \\leq r(m)+2\\ ] ] because adjoining a single row or column to a matrix raises the rank by 0 or 1 .",
    "[ def9]the _ type _ of @xmath16 with respect to @xmath55 is defined as follows .",
    "@xmath16 is of type 1 if @xmath308{cc}% m & \\kappa\\\\ \\rho & 0 \\end{array } \\right )   = r\\left ( \\begin{array } [ c]{cc}% m & \\kappa\\\\ \\rho & 1 \\end{array } \\right )   -1.$ ]    @xmath16 is of type 2 if @xmath309{cc}% m & \\kappa\\\\ \\rho & 0 \\end{array } \\right )   = r\\left ( \\begin{array } [ c]{cc}% m & \\kappa\\\\ \\rho & 1 \\end{array } \\right )   .$ ]    @xmath16 is of type 3 if @xmath308{cc}% m & \\kappa\\\\ \\rho & 1 \\end{array } \\right )   = r\\left ( \\begin{array } [ c]{cc}% m & \\kappa\\\\ \\rho & 0 \\end{array } \\right )   -1.$ ]    every @xmath297 is of one of these types .",
    "moreover , if @xmath55 has no looped neighbor then there is no @xmath297 of type 3 .",
    "the fact that every @xmath297 is of type 1 , 2 or 3 appears in lemma 2 of @xcite .",
    "suppose @xmath16 is of type 3 , so @xmath310{cc}% m & \\kappa\\\\ \\rho & 0 \\end{array } \\right )   .\\ ] ] the row vector @xmath311 can not be a sum of rows of @xmath312 .",
    "for if it were then @xmath313 would be the corresponding sum of rows of @xmath165 , and by symmetry @xmath314 would be the corresponding sum of columns of @xmath165 .",
    "consequently it would follow that @xmath315{cc}% m & \\kappa \\end{array } \\right )   = r\\left ( \\begin{array } [ c]{cc}% m & \\kappa\\\\ \\rho & 0 \\end{array } \\right )   .\\ ] ] on the other hand , @xmath313 must be the sum of the rows of @xmath165 corresponding to the elements of some subset @xmath316 , for if it were not then it would follow that @xmath310{c}% m\\\\ \\rho \\end{array } \\right )   = r\\left ( \\begin{array } [ c]{cc}% m & \\kappa \\end{array } \\right )   = r\\left ( \\begin{array } [ c]{cc}% m & \\kappa\\\\ \\rho & 0 \\end{array } \\right )   -1.\\ ] ] every such @xmath317 must contain an odd number of neighbors of @xmath55 , to avoid giving a sum of rows of @xmath312 equal to @xmath311 .",
    "choose such a @xmath317 , and consider the induced subgraph @xmath318 $ ] .",
    "as the sum of the rows of @xmath165 corresponding to elements of @xmath317 is @xmath313 , the sum of the rows of the adjacency matrix of @xmath318 $ ] is the row vector @xmath319 .",
    "@xmath320 is odd , so the adjacency matrix of @xmath318 $ ]  has an odd number of entries equal to 1 .",
    "the matrix is symmetric , so at least one of these entries must appear on the diagonal .",
    "that is , at least one vertex of @xmath318 $ ] is looped .    for @xmath297 let @xmath321 be the matrix obtained from @xmath165 by toggling every entry @xmath322 that has @xmath323 .",
    "then @xmath324 = @xmath325 because the first matrix is transformed into the second by adding the last column to every column corresponding to a neighbor of @xmath55 . similarly , adding the last column of the first matrix below to every column corresponding to a neighbor of @xmath55",
    "tells us that @xmath326{cc}% m & \\kappa\\\\ \\rho & 1 \\end{array } \\right )   = r\\left ( \\begin{array } [ c]{cc}% m^{a } & \\kappa\\\\ 0 & 1 \\end{array } \\right )   = 1+r(m^{a}).\\ ] ] consequently , definition [ def9 ] may be restated using the relationship between @xmath327 and @xmath328 : if @xmath16 is of type 1 then @xmath329 , if @xmath16 is of type 2 then @xmath330 , and if @xmath16 is of type 3 then @xmath331 .",
    "[ prop3]for @xmath332 let @xmath333)}(y-1)^{n((h - a)[s])}.\\ ] ] then the following equations hold .",
    "@xmath334 also , @xmath335    the first equality is obvious .",
    "for the second , note that each @xmath336 gives rise to two subsets of @xmath337 , namely @xmath16 and @xmath338 ; these correspond to the adjacency matrices @xmath165 and @xmath339{cc}% m & \\kappa\\\\ \\rho & 0 \\end{array } \\right )   $ ] .",
    "similarly , the third equality is derived by considering the contributions of two adjacency matrices for each @xmath297 , namely @xmath165 and @xmath339{cc}% m & \\kappa\\\\ \\rho & 1 \\end{array } \\right )   $ ] .",
    "the last equality follows from the discussion preceding the proposition .",
    "the weights mentioned in theorems [ theorem8 ] and [ theorem9 ] are @xmath340 , @xmath341 and @xmath342 .",
    "in particular , @xmath343 if @xmath55 has no looped neighbor .",
    "the corollary follows from proposition [ prop3 ] and the formulas given in  theorem [ theorem8 ] and immediately after theorem [ theorem9 ] .",
    "in this section we focus our attention on the unweighted vertex - nullity polynomial .",
    "[ prop4]if @xmath2 is a connected , unweighted graph with at least one looped vertex then @xmath344 .",
    "the proposition is certainly true if @xmath2 has @xmath208 vertices , as all three such graphs have @xmath345 .",
    "the argument proceeds by induction on @xmath346 . recall that @xmath184 for every graph @xmath2 , and let @xmath55 be a looped vertex of @xmath2 . then @xmath347 , so @xmath348 , @xmath349 .",
    "suppose @xmath55 is not a cutpoint of @xmath2 .",
    "if @xmath2 has some looped vertex other than @xmath55 then the inductive hypothesis implies that @xmath350 .",
    "if @xmath2 has no looped vertex other than @xmath55 then every neighbor of @xmath55 is looped in @xmath351 .",
    "every component of @xmath351 contains at least one neighbor of @xmath55 , so the inductive hypothesis implies that @xmath352 for every component @xmath353 of @xmath351 . hence @xmath354 .",
    "suppose now that @xmath2 has a looped cutpoint @xmath55 .",
    "for each component @xmath353 of @xmath25 and each vertex @xmath355 that lies in some other component of @xmath25 , no edge connecting @xmath241 to an element of @xmath356 appears in @xmath25 .",
    "consequently every such edge appears in @xmath351 , so all of @xmath357 is contained in a single component of @xmath351 .",
    "as @xmath2 is connected , this implies that @xmath351 is also connected .",
    "hence if any neighbor of @xmath55 is unlooped in @xmath2 , @xmath351 is a connected graph with a looped vertex and the inductive hypothesis implies that @xmath358 .",
    "if instead every neighbor of @xmath55 is looped in @xmath2 , then every component @xmath353 of @xmath25 has a looped vertex and the inductive hypothesis implies @xmath359 .",
    "[ cor4]an unweighted graph @xmath2 has @xmath360 if and only if @xmath207 has no nonempty simple component .",
    "as noted in remark 20 of @xcite , every nonempty simple graph has @xmath185 .",
    "it follows that every graph with a nonempty simple component also has @xmath185 .",
    "on the other hand , proposition [ prop4 ] and the fact that @xmath361 together imply that every graph with no nonempty simple component has @xmath360 .",
    "let @xmath2 be an unweighted graph , and let @xmath362 be its _ complement _",
    ", i.e. , the graph with @xmath363 whose edges ( including loops ) are precisely the edges absent in @xmath2 .",
    "then the following are equivalent : @xmath2 is simple , @xmath364 and @xmath365 .",
    "suppose first that @xmath2 is simple , and let @xmath366 with @xmath55 the vertex of @xmath367 .",
    "let @xmath8 be the two - vertex graph with @xmath368 in which @xmath287 is an unweighted , looped neighbor of @xmath55 .",
    "theorem [ theorem8 ] tells us that @xmath369 on the other hand , the recursive description of @xmath9 @xcite tells us that @xmath370 recalling that @xmath371 = @xmath257 , we see that @xmath372 and consequently @xmath373 . recalling that @xmath374 = @xmath258 = @xmath260",
    ", we see that latexmath:[\\[q_{n}(g+e_{1}^{u})=q(g+e_{1}^{u})|_{x=2}=y\\left (   \\alpha(a)+\\beta(a)\\right )     now suppose that @xmath2 is not simple .",
    "then @xmath2 has a looped vertex , and so does @xmath376 .",
    "as @xmath376 is connected , corollary [ cor4 ] states that @xmath377 ; consequently @xmath378 .",
    "a combinatorial description of the interlace polynomials of trees and forests is given in @xcite . in order to motivate the next section we sketch this description briefly here , omitting details and proofs .",
    "recall that a tree @xmath317 is _ rooted _ by specifying a root vertex @xmath379 .",
    "each non - root vertex @xmath380 then has a unique _ parent _ @xmath381 , a neighbor whose distance from @xmath382 is less than the distance from @xmath382 to @xmath241 .",
    "the elements of @xmath383 are the _ children _ of @xmath381 , and the children of @xmath381 other than @xmath241 itself are _ siblings _ of @xmath241 .",
    "an _ ordered _ tree is a rooted tree given with an order on the set of children of each parent vertex ; non - root vertices may then have _ earlier siblings _ and _ later siblings_. a set of vertices that contains no adjacent pair is _ independent _ , and a set of vertices _ dominates _ a vertex @xmath241 if it contains @xmath241 or contains some neighbor of @xmath241 .",
    "an _ earlier sibling cover _ ( or _ es - cover _ ) in an ordered tree @xmath317 is an independent set @xmath384 that dominates @xmath382 and has the property that for every non - root vertex @xmath385 , every earlier sibling of @xmath241 is dominated by @xmath384 .    for integers @xmath386 and @xmath387 the _ es - number _ @xmath388 is the number of @xmath386-element es - covers in @xmath317 whose non - root elements have @xmath387 different parents .",
    "if @xmath389 is a subtree of @xmath317 and @xmath390 then we presume that the children of each parent vertex @xmath241 in @xmath389 are ordered by restricting the order of the children of @xmath241 in @xmath317 . with this convention , it is easy to verify that the earlier sibling covers in large trees arise from earlier sibling covers in subtrees .",
    "[ recur ] let @xmath317 be an ordered tree with a leaf @xmath287 such that @xmath391 , all the siblings of @xmath287 are leaves , and @xmath287 has no later siblings . then @xmath392 and @xmath393    lemma [ recur ] is the key to an inductive proof that the terms in the definition of @xmath394 can be collected into sub - totals corresponding to earlier sibling covers .",
    "let @xmath317 be an ordered tree with vertex weights , and let @xmath384 be an es - cover in @xmath317 .",
    "let @xmath395 for each vertex @xmath241 define the @xmath384__-weight _ _ @xmath396 as follows : @xmath397 the product @xmath398 is the _ total weight _ of @xmath384 in @xmath317 , denoted @xmath399 .",
    "[ treepoly ] if @xmath317 is an ordered tree with vertex weights then @xmath400    if @xmath317 has no more than one vertex of degree @xmath401 , it is not difficult to verify the theorem directly .",
    "if @xmath317 has more than one vertex of degree @xmath401 then the theorem follows inductively from theorem [ theorem1 ] and corollary [ cor1 ] using lemma [ recur ] , as detailed in @xcite .    setting @xmath48 and @xmath47",
    "we deduce that the unweighted interlace polynomial of a tree is determined by a simple formula involving earlier sibling covers .",
    "[ treeint]if @xmath317 is a tree then the unweighted interlace polynomial of @xmath317 is @xmath402    as the interlace polynomials are multiplicative on disjoint unions , these results extend directly to disconnected forests .",
    "the tutte polynomial is a very useful invariant of graphs and matroids , which incorporates a great deal of information and can be defined in several different ways ; see @xcite , @xcite and @xcite for more detailed discussions than we provide here .",
    "one of its definitions is given in definitions [ oldact ] and [ act ] .",
    "[ oldact ] suppose @xmath2 is an unweighted graph with @xmath403 , and @xmath317 is a  maximal spanning forest of @xmath2 .",
    "an element @xmath404 is _ externally active _ with respect to @xmath317 if @xmath405 is the least index of an element of the unique circuit contained in @xmath406 .",
    "an element @xmath407 is _ internally active _ with respect to @xmath317 if @xmath405 is the least index of an element of the unique cutset contained in @xmath408 .",
    "the numbers of edges that are externally and internally active with respect to @xmath317 are denoted @xmath409 and @xmath410 , respectively .",
    "theorem [ treepoly ] and corollary [ treeint ] bear a strong resemblance to this formula , with earlier sibling covers in rooted trees replacing maximal spanning forests in arbitrary graphs .",
    "we do not know whether there is a combinatorial analogue of definition [ act ] that describes the interlace polynomials of an arbitrary graph , but there is an algorithmic analogue . before presenting it",
    ", we recall another definition of the tutte polynomial .              to recursively calculate @xmath423 one simply chooses an arbitrary edge of @xmath2 , and applies the appropriate part of definition [ delcont ] ; this process is repeated as many times as necessary .",
    "such a computation is represented by a computation tree in which a node that represents an instance of part ( a ) has two children and a node that represents an instance of part ( b ) or ( c ) has only one .",
    "[ actact ] let @xmath2 be a graph with @xmath411 , and consider the recursive implementation of definition [ delcont ] in which @xmath424 is removed first , then @xmath425 is removed in all branches , then @xmath426 is removed in all branches , and so on .",
    "the leaves of the computation tree representing this implementation correspond to the maximal spanning forests of @xmath2 , with the leaf corresponding to @xmath317 resulting from the portion of the computation in which edges of @xmath317 are contracted and elements of @xmath427 are deleted .",
    "a node of this portion of the computation tree represents the removal of an active edge if and only if it has precisely one child .",
    "the proposition is implicit in the fact that definition [ delcont ] and definition [ act ] both yield @xmath423 , so it appears implicitly in just about every presentation of the tutte polynomial .",
    "see theorem ix .",
    "65 of @xcite or theorem x.10 of @xcite , for instance .",
    "explicit discussions of the connection between activities and computation are less common in the literature , though there are some @xcite .",
    "the proof is a direct induction on @xmath428 .",
    "if @xmath424 is a loop then the maximal spanning forests of @xmath2 and @xmath429 coincide , and the computation tree for @xmath423 is obtained from the computation tree for @xmath430 by attaching a new root node of degree 1 , representing the removal of @xmath424 .",
    "if @xmath424 is an isthmus then the maximal spanning forests of @xmath2 and @xmath431 correspond , and the computation tree for @xmath423 is obtained from the computation tree for @xmath432 by attaching a new root node of degree 1 . otherwise , the maximal spanning forests of @xmath2 that contain @xmath424 correspond to the maximal spanning forests of @xmath431 , and the maximal spanning forests of @xmath2 that do not contain @xmath424 are the maximal spanning forests of @xmath429 . the computation tree for @xmath423 consists of the root and two disjoint subtrees that are the computation trees for @xmath432 and @xmath430",
    ".    definition [ oldact ] defines active edges using the structure of @xmath2 , and this leads to definition [ act ] s description of @xmath423 as a generating function for maximal spanning forests .",
    "proposition [ actact ] shows that we may also see activity from an algorithmic viewpoint : the external activity of a particular @xmath433 is revealed in the fact that one step of a calculation of @xmath423 involves removing @xmath434 using part ( b ) of definition [ delcont ] rather than part ( a ) .",
    "this distinction affects the result of the computation , so it would be important even if activity could not be conveniently described using the structure of @xmath2 , or did not contribute to a convenient closed form for @xmath423 .",
    "[ algact ] a node of a computation tree representing a recursive implementation of definition [ alg ] is _ active _ if it has precisely one child , i.e. , if it represents an application of part ( c ) or part ( d ) .",
    "an activities formula  for @xmath1 arises directly from a computation tree representing an implementation of definition [ alg ] .",
    "the formula has one summand for each leaf of the computation tree ( each call to part ( e ) of definition [ alg ] ) , representing the product of the coefficients contributed by the nodes in the portion of the computation tree that gives rise to that leaf .",
    "active and non - active nodes contribute different coefficients .",
    "let @xmath317 be a rooted tree with root @xmath382 , and consider a recursive implementation of definition [ alg ] structured as follows .",
    "if possible , apply part ( d ) of definition [ alg ] ; if not and there is a parent vertex other than @xmath382 then apply part ( b ) with a leaf of the type denoted @xmath287 in lemma [ recur ] as @xmath55 ; otherwise apply part ( b ) with the last child of @xmath382 as @xmath55 .",
    "the leaves of the computation tree representing this implementation correspond to the earlier sibling covers of @xmath317 , with the es - cover @xmath384 corresponding to a given leaf constructed from the portion of the computation that gives rise to that leaf as follows : an occurrence of part ( d ) of definition [ alg ] contributes its @xmath55 to @xmath384 , and an occurrence of the @xmath441 branch of part ( b ) contributes its @xmath55 to @xmath384 .",
    "if @xmath317 has no vertex other than @xmath382 then @xmath442 is the only es - cover in @xmath317 , and the computation consists simply of a single call to part ( e ) of definition [ alg ] . if @xmath317 contains no parent vertex other than @xmath382 and @xmath55 is the last child of @xmath382 , then the es - covers in @xmath317 include @xmath443 and the es - covers of @xmath444 .",
    "the first step of the computation is an application of part ( b ) of definition [ alg ] with @xmath445 .",
    "the inductive hypothesis applies to @xmath444 , and the branch of the computation corresponding to @xmath446 consists solely of calls to part ( d ) because every vertex of @xmath447 is isolated ; consequently the latter part of the computation tree contains only one leaf , corresponding to @xmath443 . if @xmath317 contains a parent vertex other than @xmath382 , then the first step of the computation is an application of part ( b ) of definition [ alg ] with @xmath448 as in lemma [ recur ] , and @xmath449 .",
    "the computation tree contains a single node representing this first step and also two subtrees , one corresponding to @xmath450 and the other corresponding to @xmath451 .",
    "the proposition follows inductively from lemma [ recur ] .",
    "we do not know whether or not it is possible to reformulate definition [ algact ] so that it always refers to @xmath2 instead of a computation tree .",
    "such a  reformulation would certainly be valuable , as the resulting activities formulas would shed light on the combinatorial significance of the interlace polynomials",
    ".    definition [ algact ] extends directly to computation trees representing implementations of other recursions .",
    "for instance , if definition [ alg ] is augmented by incorporating pendant - twin reductions then the resulting computation trees will have active nodes representing these reductions , in addition to active nodes representing parts ( c ) and ( d ) of definition [ alg ] .",
    "arratia , r. , bollobs , b. , and sorkin , g. b. ( 2000 ) the interlace polynomial : a new graph polynomial . in _ proceedings of the eleventh annual acm - siam  symposium on discrete algorithms _",
    "( san francisco , 2000 ) , association for computing machinery , new york , ps .",
    "237 - 245 .",
    "blser , m. and hoffmann , c. ( 2008 ) on the complexity of the interlace polynomial , in : _",
    "stacs 2008 : 25th international symposium on theoretical aspects of computer science _",
    "( bordeaux , 2008 ) , ps .",
    "97 - 108 , available at http://www.stacs - conf.org/."
  ],
  "abstract_text": [
    "<S> the interlace polynomials introduced by arratia , bollobs and sorkin extend to invariants of graphs with vertex weights , and these weighted interlace polynomials have several novel properties . </S>",
    "<S> one novel property is a version of the fundamental three - term formula @xmath0 that lacks the last term . </S>",
    "<S> it follows that interlace polynomial computations can be represented by binary trees rather than mixed binary - ternary trees . </S>",
    "<S> binary computation trees provide a description of @xmath1 that is analogous to the activities description of the tutte polynomial . </S>",
    "<S> if @xmath2 is a tree or forest then these `` algorithmic activities ''  are associated with a certain kind of independent set in @xmath2 . </S>",
    "<S> three other novel properties are weighted pendant - twin reductions , which involve removing certain kinds of vertices from a graph and adjusting the weights of the remaining vertices in such a way that the interlace polynomials are unchanged . </S>",
    "<S> these reductions allow for smaller computation trees as they eliminate some branches . </S>",
    "<S> if a graph can be completely analyzed using pendant - twin reductions then its interlace polynomial can be calculated in polynomial time . </S>",
    "<S> an intuitively pleasing property is that graphs which can be constructed through graph substitutions have vertex - weighted interlace polynomials which can be obtained through algebraic substitutions </S>",
    "<S> .    keywords . </S>",
    "<S> interlace polynomial , vertex weight , pendant vertex , twin vertex , series , parallel , graph composition , graph substitution , join , computational complexity , tree , tutte polynomial , jones polynomial    mathematics subject  classification . </S>"
  ]
}
{
  "article_text": [
    "in classical circuits , one can move wires around as much as one likes . in a quantum computer",
    ", it may be more difficult to move a qubit from place to place .",
    "however , we can easily show that we can do arbitrary permutations in constant depth :    any permutation of @xmath7 qubits can be performed in 4 layers of controlled - not gates with @xmath7 ancillae , or in 6 layers with no ancillae .",
    "[ permprop ]    the first part is obvious ; simply copy the qubits into the ancillae , cancel the originals , recopy them from the ancillae in the desired order , and cancel the ancillae .",
    "this is shown in figure [ switch2 ] .    without ancillae , we can use the fact that any permutation can be written as the composition of two sets of disjoint transpositions @xcite . to see this , first decompose it into a product of disjoint cycles , and then note that a cycle is the composition of two reflections , as shown in figure [ permutation ] .",
    "two qubits can be switched with 3 layers of controlled - not gates as shown in figure [ switch ] , so any permutation can be done in 6 layers .",
    "to make a shallow parallel circuit , it is often important to _ fan out _ one of the inputs into multiple copies .",
    "the controlled - not gate can be used to copy a qubit onto an ancilla in the pure state @xmath26 by making a non - destructive measurement : @xmath42 note that the final state is not a tensor product of two independent qubits ; the two qubits are completely entangled . making an unentangled copy requires non - unitary , and in fact non - linear , processes since @xmath43 has coefficients quadratic in @xmath44 and @xmath45 .",
    "this means that disentangling or _ uncopying _",
    "the ancillae by the end of the computation , returning them to their initial state @xmath26 , is a non - trivial and important part of a quantum circuit .",
    "there are , however , some special cases where this can be done easily .",
    "suppose we have a series of @xmath7 controlled-@xmath9 gates all with the same input qubit .",
    "rather than applying them in series , we can _ fan out _ the input into @xmath7 copies by splitting it @xmath46 times , apply them to the target qubits , and uncopy them afterward , thus reducing the circuit s depth to @xmath47 depth .    a series of @xmath7 controlled gates coupling the same input to @xmath7 target qubits can be parallelized to @xmath47 depth with @xmath48 ancillae .",
    "[ fanoutprop ]    the circuit in figure [ fanoutfig ] copies the input onto @xmath49 ancillae , applies all the controlled gates simultaneously , and uncopies the ancillae back to their original state .",
    "its total depth is @xmath50 .",
    "this kind of symmetric circuit , in which we uncopy the ancillae to return them to their original state , is similar to circuits designed by the reversible computation group at mit @xcite for reversible classical computers .",
    "fan - in seems more difficult in general .",
    "classically , if a single qubit receives controlled gates from @xmath7 inputs , we can calculate the composition of these in @xmath47 time by composing them in pairs , but it is unclear when we can do this with unitary linear operators .",
    "one special case where it is possible is if all the gates are diagonal :    a series of @xmath7 diagonal gates coupling the same qubit to @xmath7 others can be parallelized to @xmath47 depth with @xmath48 ancillae .",
    "[ diagprop ]    here the entanglement between two copies of a qubit becomes an asset .",
    "since diagonal matrices do nt mix boolean states with each other , we can act on a qubit and an entangled copy of it with two diagonal matrices @xmath51 and @xmath52 as in figure [ entanglefig ] .",
    "when we uncopy the ancilla , we have the same effect as if we had applied both matrices to the original .",
    "then the same kind of circuit as in proposition [ fanoutprop ] works , as shown in figure [ diagfig ] .",
    "since matrices commute if and only if they can be simultaneously diagonalized , we can generalize this to the case where a set of controlled-@xmath9 gates applied to a given target qubit have mutually commuting @xmath9s :    a series of of @xmath7 controlled-@xmath9 gates acting on a single qubit , where the @xmath9s mutually commute , can be parallelized to @xmath47 depth with @xmath48 ancillae .",
    "[ commuteprop ]    since the @xmath9s all commute , they can all be diagonalized by the same unitary operator @xmath53 .",
    "apply @xmath53 to the target qubit , parallelize the circuit using proposition [ diagprop ] , and put the target qubit back in the original basis by applying @xmath54 .",
    "this is all done with a circuit of depth @xmath55 .    as an example , in figure [ powerfig ] we show a circuit that applies the @xmath56th power of an operator @xmath9 to a target qubit , where @xmath57 is given by @xmath6 control qubits as a binary integer .",
    "we can do this because @xmath58 can be simultaneously diagonalized , since @xmath59 .",
    "note that this works for operators @xmath9 that act on any number of qubits .",
    "we can extend this to circuits in general whose gates are mutually commuting , which includes diagonal gates :    any circuit consisting of diagonal or mutually commuting gates , each of which couples at most @xmath6 qubits , can be parallelized to depth @xmath60 with no ancillae , and to depth @xmath47 with @xmath61 ancillae .",
    "therefore , any family of such circuits is in @xmath62 .",
    "[ diagqnc ]    since all the gates commute , we can sort them by which qubits they couple , and arrive at a compressed circuit with one gate for each @xmath6-tuple . this gives @xmath63 gates , but by performing groups of @xmath64 disjoint gates simultaneously we can do all of them in depth @xmath60 .    by making @xmath60 copies of each qubit",
    ", we can then use propositions [ diagprop ] and [ commuteprop ] to reduce this further to @xmath47 depth .",
    "this is hardly surprising ; after all , diagonal gates are just conditional phase shifts , and saying that two gates commute is almost like saying that they can be performed simultaneously .",
    "we can also fan in controlled - not gates .",
    "figure [ fig4 ] shows how to implement @xmath7 controlled - not gates on the same target qubit in depth @xmath65 .",
    "the ancillae carry the intermediate `` sums mod 2 '' of the inputs , and we add them in pairs .",
    "we can use a generalization of this circuit to show that any circuit composed entirely of controlled - not gates can be parallelized to logarithmic depth :    any circuit on @xmath7 qubits composed entirely of controlled - not gates can be parallelized to @xmath47 depth with @xmath66 ancillae .",
    "therefore , any family of such circuits is in @xmath62 .",
    "[ xorqnc ]    first , note that in any circuit of controlled - not gates , if the @xmath7 input qubits have binary values and are given by an @xmath7-dimensional vector @xmath56 , then the output can be written @xmath67 where @xmath29 is an @xmath68 matrix over the integers mod 2 .",
    "each of the output qubits can be written as a sum of up to @xmath7 inputs , @xmath69 where @xmath70 are those @xmath36 for which @xmath71 .",
    "we can break these sums down into binary trees .",
    "let @xmath72 be the complete output sums , @xmath73 be their left and right halves consisting of up to @xmath74 inputs , and so on down to single inputs .",
    "there are less than @xmath75 such intermediate sums @xmath76 with @xmath77 .",
    "we assign an ancilla to each one , and build them up from the inputs in @xmath46 stages , adding pairs from @xmath76 to make @xmath78 .",
    "the first stage takes @xmath47 time and an additional @xmath66 ancillae since we may need to add each input into multiple members of @xmath79 , but each stage after that can be done in depth 2 .    to cancel the ancillae",
    ", we use the same cascade in reverse order , adding pairs from @xmath76 to cancel @xmath78 .",
    "this leaves us with the input @xmath56 , the output @xmath67 , and the ancillae set to zero .",
    "now we use the fact that , since the circuit is unitary , @xmath29 is invertible .",
    "thus we can recalculate the input @xmath80 and cancel it .",
    "we use the same ancillae in reverse order , building the inputs @xmath56 out of @xmath67 with a series of partial sums @xmath81 , cancel @xmath56 , and cancel the ancillae in reverse as before .",
    "all this is illustrated in figure [ xorfig ] .",
    "this leaves us with the output @xmath67 and all other qubits zero . with four more layers as in proposition [ permprop ]",
    ", we can shift the output back to the input qubits , and we re done .",
    "this result is hardly surprising ; after all , these circuits are reversible boolean circuits , and any classical circuit composed of controlled - not gates is in @xmath82 .",
    "we just did a little extra work to disentangle the ancillae .",
    "we have shown that circuits composed of diagonal or controlled - not gates can be parallelized .",
    "since circuits composed of both these kinds of gates have only one non - zero element in each row and column , they are really just classical reversible circuits with phase shifts attached .",
    "therefore , it s reasonable to ask whether propositions [ diagqnc ] and [ xorqnc ] can be combined ; that is , whether arbitrary circuits composed of phase shifts and controlled - not gates can be parallelized to logarithmic depth .    in this section",
    ", we will show that this is not the case . however , this will not help us show that @xmath0 .",
    "any diagonal unitary operator on @xmath7 qubits can be performed by a circuit consisting of an exponential number of controlled - not gates and one - qubit diagonal gates and no ancillae .",
    "[ morseprop ]    any diagonal unitary operator on @xmath7 qubits consists of @xmath83 phase shifts , @xmath84 .",
    "if we write the phase angles as a @xmath83-dimensional vector @xmath85 , then the effect of composing two diagonal operators is simply to add these vectors mod @xmath86",
    ".    for each subset @xmath87 of the set of qubits , define a vector @xmath88 as @xmath89 if the number of true qubits in @xmath87 is even , and @xmath90 if it is odd .",
    "if @xmath87 is all the qubits , for instance , @xmath91 is the aperiodic morse sequence @xmath92 when written out linearly , but it really just means giving the odd and even nodes of the boolean @xmath7-cube opposite signs .",
    "it is easy to see that the @xmath88 for all @xmath93 are linearly independent , and form a basis of @xmath94 .",
    "moreover , while diagonal gates coupling @xmath6 qubits can only perform phase shifts spanned by those @xmath88 with @xmath95 , the circuit in figure [ morsefig ] can perform a phase shift proportional to @xmath88 for any @xmath87 ( incidentally , in depth @xmath96 with no ancillae ) .",
    "therefore , a series of @xmath83 such circuits , one for each subset of @xmath97 , can express any diagonal unitary operator .",
    "then we have the following corollary :    there are circuits composed of controlled - not gates and one - qubit diagonal gates that can not be parallelized to less than exponential depth with a polynomial number of ancillae .",
    "consider setting up a many - to - one correspondence between circuits and operators .",
    "the set of diagonal unitary operators on @xmath7 qubits has @xmath83 continuous degrees of freedom , while the set of circuits of depth @xmath98 and @xmath30 ancillae has only @xmath99 continuous degrees of freedom ( and some discrete ones for the circuit s topology ) .",
    "thus if @xmath30 is polynomial , @xmath98 must be exponential .",
    "note that this counting argument does not help us distinguish @xmath100 from @xmath101 , since both have a polynomial number of degrees of freedom .",
    "neither does it help us exhibit a particular family of circuits which require exponential depth , since it is completely non - constructive .",
    "the classical situation is similar ; there are @xmath102 boolean functions on @xmath7 variables , but only @xmath103 circuits of depth @xmath98 and width @xmath104 .",
    "thus the vast majority of boolean functions require exponential depth if the width is polynomial , but proving a lower bound on the depth of a particular one remains elusive .",
    "a simple , perhaps minimal , example of a quantum circuit that seems hard to parallelize is the `` staircase '' circuit shown in figure [ staircasefig ] .",
    "this kind of structure appears in the standard circuit for the quantum fourier transform , which has @xmath66 gates @xcite .",
    "careful inspection shows that the qft can in fact be parallelized to @xmath48 depth as shown in figure [ qftfig ] @xcite , but it seems difficult to do any better .",
    "clearly , any fast parallel circuit for the qft would be relevant to prime factoring and other problems the qft is used for .",
    "if we define @xmath100 as the family of quantum operators that can be expressed with circuits of polynomial depth ( again , leaving measurement issues aside for now ) , we can make the following conjecture :    staircase circuits composed of controlled-@xmath9 gates other than diagonal or off - diagonal gates ( i.e.  other than the special cases handled in propositions [ diagqnc ] and [ xorqnc ] ) can not be parallelized to less than linear depth .",
    "therefore , @xmath0 .",
    "we conclude with some questions for further work .",
    "parsing classical context - free languages is in @xmath4 .",
    "quantum context - free languages have been defined in @xcite .",
    "is quantum parsing , i.e.  producing derivation trees with the appropriate amplitudes , in @xmath101",
    "?    can circuits for quantum error correction such as those in @xcite be parallelized to significantly smaller depth ?",
    "if so , does this reduce the threshold error necessary for long - term computation , at least as far as storage errors are concerned ?    finally ,",
    "can the reader show that the staircase circuit can not be parallelized , thus showing that @xmath0 ?",
    "this would be quite significant , since corresponding classical question @xmath106 is still open .",
    "* acknowledgments . *",
    "m.n . would like to thank the santa fe institute for their hospitality , and spootie the cat for her affections .",
    "c.m . would like to thank the organizers of the first international conference on unconventional models of computation in auckland , new zealand , as well as seth lloyd , tom knight , david divincenzo and artur ekert for helpful conversations .",
    "he would also like to thank molly rose for inspiration and companionship .",
    "this work was supported in part by nsf grant asc-9503162 .",
    "a. barenco , c. bennett , r. cleve , d.p .",
    "divincenzo , n. margolus , p. shor , t. sleator , j.a .",
    "smolin and h. weifurter , `` elementary gates for quantum computation . ''",
    "quant - ph/9503016 , _ phys .",
    "a _ * 52 * ( 1995 ) 3457 - 3467 .",
    "m. frank , c. vieri , m.j .",
    "ammer , n. love , n.h .",
    "margolus , and t.f .",
    "`` a scalable reversible computer in silicon . '' in the proceedings of the first international conference on unconventional models of computation , springer - verlag , 1998 ."
  ],
  "abstract_text": [
    "<S> we exhibit some simple gadgets useful in designing shallow parallel circuits for quantum algorithms . </S>",
    "<S> we prove that any quantum circuit composed entirely of controlled - not gates or of diagonal gates can be parallelized to logarithmic depth , while circuits composed of both can not . </S>",
    "<S> finally , while we note the quantum fourier transform can be parallelized to linear depth , we exhibit a simple quantum circuit related to it that we believe can not be parallelized to less than linear depth , and therefore might be used to prove that @xmath0 .    </S>",
    "<S> [ theorem]conjecture * * _ _    much of computational complexity theory has focused on the question of what problems can be solved in polynomial time . </S>",
    "<S> shor s quantum factoring algorithm @xcite suggests that quantum computers might be more powerful than classical computers in this regard , i.e.  that @xmath1 might be a larger class than @xmath2 , or rather @xmath3 , the class of problems solvable in polynomial time by a classical probabilistic turing machine with bounded error .    </S>",
    "<S> more recently , a distinction has been made between @xmath2 and the class @xmath4 of efficient parallel computation , namely the subset of @xmath2 of problems which can be solved by a parallel computer with a polynomial number of processors in _ polylogarithmic _ time , i.e.  @xmath5 time for some @xmath6 , where @xmath7 is the number of bits of the input @xcite . </S>",
    "<S> equivalently , @xmath4 problems are those solvable by boolean circuits with a polynomial number of gates and polylogarithmic depth .    </S>",
    "<S> this distinction seems especially relevant for quantum computers , where decoherence makes it difficult to do more than a limited number of computation steps reliably . </S>",
    "<S> since decoherence due to storage errors is essentially a function of time , we can avoid it by doing as many of our quantum operations at once as possible ; if we can parallelize our computation to logarithmic depth , we can solve exponentially larger problems . </S>",
    "<S> ( gate errors , on the other hand , will not be improved by parallelization , and may even get worse if the parallel algorithm involves more gates . )    </S>",
    "<S> we define quantum operators and quantum circuits as follows :    a _ quantum operator _ on @xmath7 qubits is a unitary rank-@xmath8 tensor @xmath9 where @xmath10 is the amplitude of the incoming and outgoing truth values being @xmath11 and @xmath12 respectively , with @xmath13 for all @xmath14 . however , we will usually write @xmath9 as a @xmath15 unitary matrix @xmath16 where @xmath17 and @xmath18 s binary representations are @xmath19 and @xmath20 respectively .    a _ one - layer circuit _ consists of the tensor product of one- and two - qubit gates , i.e.  rank 2 and 4 tensors , or @xmath21 and @xmath22 unitary matrices . </S>",
    "<S> this is an operator that can be carried out by a set of simultaneous one - qubit and two - qubit gates , where each qubit interacts with at most one gate .    </S>",
    "<S> a _ quantum circuit of depth @xmath6 _ is a quantum operator written as the product of @xmath6 one - layer circuits . </S>",
    "<S> the _ depth _ of a quantum operator is the depth of the shallowest circuit equal to it .    </S>",
    "<S> here we are allowing arbitrary two - qubit gates . </S>",
    "<S> if we like , we can restrict this to _ controlled-@xmath9 gates _ , of the form @xmath23 , or more stringently to the _ controlled - not _ </S>",
    "<S> gate @xmath24 . for these </S>",
    "<S> , we will call the first and second qubits the _ input _ and _ target _ qubit respectively , even though they do nt really leave the input qubit unchanged , since they entangle it with the target .    since either of these can be combined with one - qubit gates to simulate arbitrary two - qubit gates @xcite </S>",
    "<S> , these restrictions would just multiply our definition of depth by a constant . </S>",
    "<S> the same is true if we wish to allow gates that couple @xmath25 qubits as long as @xmath6 is fixed , since any @xmath6-qubit gate can be simulated by some constant number of two - qubit gates .    in order to design a shallow parallel circuit for a given quantum operator , we want to be able to use additional qubits or `` ancillae '' for intermediate steps in the computation , equivalent to additional processors in a parallel quantum computer . however , to avoid entanglement , we demand that our ancillae start and end in a pure state @xmath26 , so that the desired operator appears as the diagonal block of the operator performed by the circuit on the subspace where the ancillae are zero .    </S>",
    "<S> then in analogy with @xmath4 we propose the following definition :    let @xmath27 be a family of quantum operators , i.e.  @xmath28 is a @xmath15 unitary matrix on @xmath7 qubits . </S>",
    "<S> we say that @xmath28 is _ embedded _ in an operator @xmath29 with @xmath30 ancillae if @xmath29 is a @xmath31 matrix which preserves the subspace where the ancillae are set to @xmath26 , and if @xmath29 is identical to @xmath32 when restricted to this subspace .    </S>",
    "<S> then @xmath27 is in @xmath33 if , for some constants @xmath34 , @xmath35 and @xmath36 , @xmath28 can be embedded in a circuit of depth at most @xmath37 , with at most @xmath38 ancillae . </S>",
    "<S> then @xmath39 , the set of operators parallelizable to polylogarithmic depth with a polynomial number of ancillae .    to extend this definition from quantum operators to decision problems in the classical sense </S>",
    "<S> , we have to choose a measurement protocol , and to what extent we want errors bounded . </S>",
    "<S> we will not explore those issues here .    </S>",
    "<S> we will use the notation in figure 1 for our various gates : the controlled - not and controlled-@xmath9 , the symmetric phase shift @xmath40 , and arbitrary diagonal gates @xmath41 . </S>"
  ]
}
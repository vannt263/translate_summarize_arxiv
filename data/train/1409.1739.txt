{
  "article_text": [
    "a common way to route data in communication networks is shortest path routing .",
    "routing schemes using shortest path are _ single - path _ ; they route all packets of a session through the same dedicated path .",
    "although single - path schemes thrive because of their simplicity , they are in general throughput suboptimal .",
    "maximizing network throughput requires _ multi - path routing _",
    ", where the different paths are used to provide diversity @xcite .    when the network conditions are time - varying or when the session demands fluctuate unpredictably , it is required to balance the traffic over the available paths using a _ dynamic routing _ scheme which adapts to changes in an online fashion . in the past ,",
    "schemes such as _ backpressure _ @xcite have been proposed to discover multiple paths dynamically and mitigate the effects of network variability .",
    "although backpressure is desirable in many applications , its practicality is limited by the fact that it requires all nodes in the network to make online routing decisions .",
    "often it is the case that some network nodes have limited capabilities and can not perform such actions . _ in this paper we study dynamic routing when decisions can be made only at a subset of nodes , while the rest nodes use fixed single - path routing rules . _",
    "network overlays are frequently used to deploy new communication architectures in legacy networks  @xcite . to accomplish this ,",
    "messages from the new technology are encapsulated in the legacy format , allowing the two methods to coexist in the legacy network .",
    "nodes equipped with the new technology are then connected in a conceptual network overlay , fig .",
    "[ fig : intro ] .",
    "prior works have considered the use of this methodology to introduce new routing capabilities in the internet .",
    "for example , content providers use overlays to balance the traffic across different internet paths and improve resilience and end - to - end performance @xcite . in our work",
    "we use a network overlay to introduce dynamic routing to a legacy network which operates based on single - path routing .",
    "nodes that implement the overlay layer are called _ routers _ and are able to make online routing decisions , bifurcating traffic along different paths .",
    "the rest nodes , called _",
    "forwarders _ , rely on a single - path routing protocol which is available to the physical network , see fig .",
    "[ fig : intro ] .",
    "there are many applications of our overlay routing model . for networks with heterogeneous technologies ,",
    "the overlay routers correspond to devices with extended capabilities , while the forwarders correspond to less capable devices .",
    "for example , to introduce dynamic routing in a network running a legacy routing protocol , it is possible to use software defined networks to install dynamic routing functions on a subset of devices ( the routers ) . in the paradigm of multi - owned networks ,",
    "the forwarders are devices where the vendor has no administrative rights .",
    "for example consider a network that uses leased satellite links , where the forwarding rules may be pre - specified by the lease . in such heterogeneous scenarios",
    ", maximizing throughput by controlling only a fraction of nodes introduces a tremendous degree of flexibility .    in the physical network @xmath0",
    "denote the set of routers with @xmath1 .",
    "also , denote the throughput region of this network with @xmath2 @xcite .",
    "then , @xmath3 is the throughput of the network when all nodes are routers .",
    "we call this the full throughput of @xmath4 , and it can be achieved if all nodes run the backpressure policy @xcite . also , @xmath5 is the throughput of a network consisting only of forwarders , which is equivalent to single - path throughput . since increasing the number of routers increases path diversity , we generally have @xmath6 .",
    "prior work studies the necessary and sufficient conditions for router set @xmath7 to guarantee full throughput , i.e. , @xmath8 @xcite . the results of the study show that using a small percentage of routers ( @xmath9 ) is sufficient for full throughput in power - law random graphs",
    " an accurate model of the internet @xcite .",
    "although @xcite characterizes the throughput region @xmath2 , a dynamic routing to achieve this performance is still unknown .",
    "for example , in the same work it is showcased that backpressure operating in the overlay is suboptimal . _ in this work we fill this gap under a specific topological assumption explained in detail later .",
    "we study dynamic routing in the overlay network of routers and propose a control policy that achieves @xmath2 .",
    "our work is the first to analytically study such a heterogeneous dynamic routing policy and prove its optimality . _",
    "we consider a physical network @xmath0 where the nodes are partitioned to routers @xmath10 and forwarders @xmath11 .",
    "the physical network has installed single - path routing rules , which we capture as follows .",
    "every router @xmath12 is assigned an acyclic path @xmath13 to every other router @xmath14 .",
    "[ fig : model ] ( left ) shows with bold arrows both paths assigned to router @xmath15 , i.e. , @xmath16 , and @xmath17 .",
    "let @xmath18 be the set of all such paths in the network .    .",
    "we indicate with bold arrows the shortest paths available to by the single - path routing scheme of the physical network .",
    "( right ) the equivalent overlay network of routers and tunnels .",
    ", title=\"fig : \" ] .",
    "we indicate with bold arrows the shortest paths available to by the single - path routing scheme of the physical network .",
    "( right ) the equivalent overlay network of routers and tunnels .",
    ", title=\"fig : \" ]    [ fig : model ]      we introduce the concept of _ tunnels_. the tunnel @xmath19 corresponds to a path @xmath20 with end - points routers @xmath21 and intermediate nodes forwarders .",
    "we then define the overlay network @xmath22 consisting of routers @xmath23 and tunnels @xmath24 .",
    "figure  [ fig : model ] ( right ) depicts the overlay network for the physical network in the left , assuming shortest path routing is used .      in this work",
    "we study the case of _ non - overlapping tunnels_. let @xmath25 be the set of all physical links of tunnel @xmath26 with the exception of the first input link .",
    "an overlay network satisfies the non - overlapping tunnels condition if for any two tunnels @xmath27 we have @xmath28 .    whether the condition is satisfied or not , depends on the network topology @xmath29 , the set of routers @xmath10 , and the set of paths @xmath18 which altogether determine @xmath25 , for all @xmath30 .",
    "the network of figure [ fig : model ] satisfies the non - overlapping tunnels condition since each of the links @xmath31 belongs to exactly one tunnel . on the other hand , in the network of figure [ fig : model2 ]",
    "link @xmath32 belongs to two tunnels , hence the condition is not satisfied .    when tunnels overlap , packets belonging to different tunnels compete for service at the forwarders , which further complicates the analysis .",
    "our analytical results focus exclusively on the non - overlapping tunnels case which still constitutes an interesting and difficult problem .",
    "however , in the simulation section we heuristically extend our proposed policy to apply to general networks with overlapping tunnels and showcase that the extended policy has near - optimal performance .",
    "the overlay network admits a set of sessions @xmath33 , where each session has a unique router destination , but possibly multiple router sources .",
    "time is slotted ; at the end of time slot @xmath34 , @xmath35 packets of session @xmath36 arrive exogenously at router @xmath37 , where @xmath38 is a positive constant .",
    "are defined at overlay router nodes . ]",
    "@xmath39 are i.i.d . over slots ,",
    "independent across sessions and sources , with mean @xmath40 .",
    "for every tunnel @xmath26 , a routing policy @xmath41 chooses the routing function @xmath42 in slot @xmath34 which determines _ the number of session @xmath43 packets _ to be routed from router @xmath37 into the tunnel .",
    "additionally , we denote with @xmath44 the actual number of session @xmath43 packets that exit the tunnel in slot @xmath34 . for a visual association of @xmath42 and @xmath44 to the tunnel links see figure [ fig : functions ] . note that @xmath42 is decided by router @xmath37 while @xmath44 is uncontrollable .",
    "model22 ( 52,26)@xmath26(26,22)@xmath45 ( 25,13)@xmath46 ( 67,22)@xmath47 ( 17.5,7)@xmath48 ( 78,7)@xmath49 ( 47,5)@xmath50    [ fig : functions ]    let the sets @xmath51 represent the incoming and outgoing neighbors of router @xmath37 on @xmath52 .",
    "packets of session @xmath43 are stored at router @xmath37 in a _",
    "router queue_. its backlog @xmath53 evolves according to the following equation @xmath54 where we use @xmath55 since there might not be enough packets to transmit . on tunnel",
    "@xmath26 we collect all packets into one _ tunnel queue _ @xmath56 whose evolution satisfies @xmath57 the packets that actually arrive at @xmath56 might be less than @xmath58 , hence the inequality ( [ eq : queuefij ] ) .",
    "we remark that @xmath56 is the total number of packets in flight on the tunnel @xmath26 .",
    "physically these packets are stored at different forwarders along the tunnel .",
    "we only keep track of the sum of these physical backlogs since , as we will show shortly , this is sufficient to achieve maximum throughput . above ( [ eq : qevol ] )",
    "assumes that all incoming traffic at router @xmath37 arrives either from tunnels , or exogenously .",
    "it is possible , however , to have an incoming neighbor router @xmath59 such that @xmath60 is a physical link , a case we purposely omitted in order to avoid further complexity in the exposition .",
    "the optimal policy for this case can be obtained from our proposed policy by setting the corresponding tunnel queue backlog to zero , @xmath61 .",
    "we assume that inside tunnels packets are forwarded in a _ work - conserving _ fashion , i.e. , a forwarder does not idle unless there is nothing to send . due to work - conservation and the assumption of non - overlapping tunnels , a tunnel with `` sufficiently many '' packets",
    "has instantaneous output equal to its bottleneck capacity .",
    "denote by @xmath62 the number of forwarders associated with tunnel @xmath26 .",
    "let @xmath63 be the greatest capacity among all physical links associated with tunnel @xmath26 and @xmath64 the smallest , also let @xmath65.\\ ] ]    [ lem : leaky ] under any control policy @xmath66 , suppose that in time slot @xmath34 the total tunnel backlog satisfies @xmath67 , for some @xmath19 , where @xmath68 is defined in .",
    "the instantaneous output of the tunnel satisfies @xmath69    the proof is provided in the appendix  [ app : lem ] .",
    "lemma [ lem : leaky ] is a path - wise statement saying that the tunnel output is equal to the tunnel bottleneck capacity in every time slot that the tunnel backlog exceeds @xmath68 .",
    "notably we havent discussed yet how the forwarders choose to prioritize packets from different sessions . based on lemma [ lem : leaky ] and the results that follow , we will establish that independent of the choice of session scheduling policy , there exists a routing policy that maximizes throughput .",
    "furthermore , we demonstrate by simulations that different forwarding scheduling policies result in the same average delay performance under our proposed routing .",
    "hence , in this paper forwarders are allowed to use any work - conserving session scheduling , such as fifo , round robin or even strict priorities among sessions .",
    "a choice for the routing function @xmath42 is considered permissible if it satisfies in every slot the corresponding capacity constraint @xmath70 , where @xmath71 denotes the capacity of the input physical link of tunnel @xmath26 , see fig .",
    "[ fig : functions ] . in every time slot",
    ", a control policy @xmath41 determines the routing functions @xmath72 at every router .",
    "let @xmath73 be the class of all permissible control policies , i.e. , the policies whose sequence of decisions consists of permissible routing functions .",
    "we want to keep the backlogs small in order to guarantee that the throughput is equal to the arrivals . to keep track of this",
    "we define the stability criterion adopted from @xcite .",
    "a queue with backlog @xmath74 is stable under policy @xmath41 if @xmath75}<\\infty.\\ ] ] the overlay network is stable if all router @xmath76 and tunnel queues @xmath77 are stable .",
    "the _ throughput region _ @xmath2 of class @xmath73 is defined to be ( the closure of ) the set of @xmath78 for which there exists a policy @xmath66 such that the system is stable . avoiding technical jargon",
    ", the throughput region includes all achievable throughputs when implementing dynamic routing in the overlay .",
    "recall that throughput depends on the actual selection of routers @xmath10 , and that for @xmath79 it may be the case that the achievable throughput may be less than the full throughput of @xmath29 , i.e. , @xmath80 .",
    "therefore it is important to clarify that in this work we assume that @xmath10 is fixed and we seek to find a policy that is stable for any @xmath81 , i.e. , a policy that is _ maximally stable_. such a policy is also called in the literature `` throughput optimal '' .",
    "the throughput region @xmath2 can be characterized as the closure of the set of matrices @xmath82 for which there exist nonnegative flow variables @xmath83 such that @xmath84 where ( [ eq : region1 ] ) are flow conservation inequalities at routers , ( [ eq : region2 ] ) are capacity constraints on tunnels , and recall that @xmath64 is the bottleneck capacity in the tunnel @xmath26 .",
    "we write @xmath85 note , that the conditions for the stability region @xmath86 are the same with the conditions for full throughput @xmath87  @xcite , with the difference that the flow variables are defined on the network of routers @xmath52 instead of @xmath88 .",
    "indeed the proof that ( [ eq : region1])-([eq : region2 ] ) are necessary and sufficient for stability may be obtained by considering a virtual network where every tunnel is replaced by a virtual link .    controlling this system in a dynamic fashion amounts to finding a routing policy @xmath89 which stabilizes the system for any @xmath90 .",
    "_ finding such a policy in the overlay differs significantly from the case of a physical network _ , since physical links support immediate transmissions while overlay links are work - conserving tandem queues which induce queueing delays .",
    "as discussed in @xcite , using backpressure in the overlay may result in poor throughput performance . in this section",
    "we propose the threshold - based backpressure ( @xmath91 ) policy , a distributed policy which performs online decisions in the overlay .",
    "@xmath91 is designed to operate the tunnel backlogs close to a threshold .",
    "this is a delicate balance whereby the tunnel output works efficiently ( by lemma [ lem : leaky ] ) while at the same time the number of packets in the tunnel are upper bounded .",
    "consider the threshold @xmath92 where @xmath68 is defined in ( [ eq : t0 ] ) and @xmath71 is the capacity of input physical link of tunnel @xmath26 and thus also the maximum increase of the tunnel backlog in one slot .",
    "define the condition : @xmath93 the reason we use this threshold is that if ( [ eq : c1 ] ) is false , it follows that both @xmath94 and @xmath95 , and hence we can apply lemma 1 to both slots @xmath34 and @xmath96 .",
    "this is used in the proof of the main result .    ' '' ''    * threshold - based backpressure ( @xmath91 ) policy *    ' '' ''    at each time slot @xmath34 and tunnel @xmath26 , let @xmath97 be a session that maximizes the differential backlog between routers @xmath21 , ties resolved arbitrarily . then route into that tunnel @xmath98 and @xmath99 .",
    "recall , that @xmath71 denotes the capacity of input physical link of tunnel @xmath26 .",
    ", then we fill the transmissions with dummy non - informative packets . ]    ' '' ''",
    "@xmath91 is similar to applying backpressure in the overlay , with the striking difference that _ no packet is transmitted to a tunnel _ if condition ( [ eq : c1 ] ) is not satisfied .",
    "therefore the total tunnel backlog is limited to at most @xmath100 plus the maximum number of packets that may enter the tunnel in one slot .",
    "formally we have    [ lem : detfb ] assume that the system starts empty and is operated under @xmath91 .",
    "then the tunnel backlogs @xmath101 are uniformly bounded above by @xmath102    follows from and .",
    "this shows that our policy does not allow the tunnel backlogs to grow beyond @xmath103 .",
    "to show that our policy efficiently routes the packets is much more involved .",
    "it is included in the proof of the following main result .",
    "[ th : optimality][maximal stability of @xmath91 ] [ th : opti ] consider an overlay network where underlay forwarding nodes use any work - conserving policy to schedule packets over predetermined paths , and the tunnels are non - overlapping .",
    "the @xmath91 policy is maximally stable : @xmath105    the proof is is based on a novel @xmath106-slot lyapunov drift analysis and it is given in the appendix  [ app : th ] .",
    "@xmath91 is a distributed policy since it utilizes only local queue information and the capacity of the incident links , while it is agnostic to arrivals , or capacities of remote links , e.g. note that the decision does not depend on the capacity of the bottleneck link @xmath64 .",
    "a very simple distributed protocol can be used to allow overlay nodes to learn the tunnel backlogs . specifically @xmath56 can be estimated at node @xmath37 using an acknowledgement scheme , whereby @xmath107 periodically informs @xmath37 of how many packets have been received so far . in practice ,",
    "the router nodes obtain a delayed estimate @xmath108 .",
    "however , using the concepts in @xcite - p.85 , it is possible to show that such estimates do not hurt the efficiency of the scheme .",
    "in this section we perform extensive simulations to :    * showcase the maximal stability of @xmath91 and compare its throughput performance to other routing policies , * examine the impact of different forwarding scheduling policies ( fifo , hlpss , strict priority , lqf ) on throughput and delay of @xmath91 , * demonstrate that @xmath91 has good delay performance , and * study the extension of @xmath91 to the case of overlapping tunnels .    first we present dynamic routing policies from the literature against which we will compare @xmath91 .",
    "* backpressure in the overlay ( @xmath109 ) : * for every tunnel @xmath19 define @xmath97 ties solved arbitrarily .",
    "then choose @xmath110 and @xmath111 this corresponds to backpressure applied only to routers @xmath10 , which is admissible in our system , @xmath112 .",
    "* backpressure in the physical network ( @xmath113 ) : * for every physical link",
    "@xmath114 define @xmath115 ties solved arbitrarily . then choose @xmath116 and @xmath117 this is the classical backpressure from @xcite , applied to all nodes @xmath118 in the network , and thus it is not admissible in the overlay , @xmath119 , whenever @xmath79 .",
    "since this policy achieves the full throughput @xmath3 , we use it as a throughput benchmark .    * backpressure enhanced with shortest paths bias ( @xmath120 ) : * for every node - session pair @xmath121 define the hop count from @xmath122 to the destination of @xmath43 as @xmath123 . for every physical link",
    "@xmath114 define @xmath124 ties solved arbitrarily . then choose @xmath125 according to ( [ eq : servbp ] ) .",
    "this policy was proposed by @xcite to reduce delays .",
    "when the congestion is small , the shortest path bias introduced by the hop count difference leads the packets directly to the destination without going through cycles or longer paths .",
    "such a policy requires control at every node , and thus it is not admissible in the overlay , @xmath126 , whenever @xmath79 . since , however , it is known to achieve @xmath3 and to outperform @xmath113 in terms of delay , it is useful for throughput and delay comparisons",
    ".      consider the network of figure [ fig : maxsta ] ( left ) , and define two sessions sourced at @xmath15 ; session 1 destined to @xmath127 and session 2 to @xmath128 .",
    "we assume that @xmath129 and all the other link capacities are unit as shown in the figure .",
    "we choose @xmath130 in this way to make the routing decisions of session 1 more difficult .",
    "we show the full throughput region @xmath3 achieved by @xmath131 which however are not admissible in the overlay .",
    "then we experiment with @xmath132 and we also show the throughput of plain shortest path routing . for @xmath91 , according to example settings and ( [ eq : thres ] ) it is @xmath133 ; we choose @xmath134 .",
    "since the example satisfies the non - overlapping tunnel condition , by theorem [ th : opti ] our policy achieves @xmath2 .",
    "this is verified in the simulations , see figure  [ fig : maxsta ] ( right ) . from the figure",
    "we can conclude that for this example we have @xmath135 , although @xmath79 .",
    "this is consistent to the findings of @xcite . from the same figure",
    "we see that both backpressure in the overlay @xmath109 and shortest path achieve only a fraction of @xmath2 , and hence they are not maximally stable . for @xmath109 , we have loss of throughput when both sessions compete for traffic , in which case @xmath109 fails to consider congestion information from the tunnel @xmath136 and therefore allocates this tunnel s resources wrongly to the two sessions . for shortest path ,",
    "it is clear that each session uses only its own dedicated shortest path and hence the loss of throughput is due to no path diversity .",
    "model_b2       throughput ( 87,0)@xmath137 ( -4,80)@xmath138 ( 27,55)@xmath91,@xmath139 ( 71,26)@xmath109 ( 54,45.3)shortest path ( 70,0)@xmath140 ( 37,0)@xmath141 ( 0,0)@xmath142 ( -10,40)@xmath143    to understand why @xmath91 works , we examine a sample path evolution of this system under @xmath91 for the case where @xmath144 , which is one of the most challenging scenarios . for stability ,",
    "session 1 must use its dedicated path @xmath16 , and send almost no traffic through tunnel @xmath136 . focusing on the tunnel @xmath136 , figure [ fig : samplepath1 ]",
    "shows the differential backlogs per session @xmath145 and the corresponding tunnel backlog @xmath146 for a sample path of the system evolution . in most time slots",
    "@xmath15 is congested , which is indicated by high differential backlogs . in such slots ,",
    "the tunnel has more than 1 packet , which guarantees by lemma [ lem : leaky ] that it outputs packets at highest possible rate , hence the tunnel is correctly utilized .",
    "recall that when the tunnel is full ( @xmath147=6 ) no new packets are inserted to the tunnel preventing it from exceeding @xmath148 .",
    "observe that the differential backlog of session 2 always dominates the session 1 counterpart , and hence whenever a tunnel is again ready for a new packet insertion , session 2 will be prioritized for transmission according to ( [ eq : servf ] ) .",
    "therefore , the proportion of session 2 packets in this tunnel is close to 100% , which is the correct allocation of the tunnel resources to sessions for this case .",
    "fig_samplepath_1 ( 65,30)@xmath149 ( 57,44)@xmath150 ( 29,42)@xmath146 ( 40,2)time ( slots ) ( 36,50)individual backlogs ( 31,40)(0,-1)24.5 ( 59,42)(-1,-3)2.5 ( 64,30)(-1,-2)6    [ fig : samplepath1 ]      at every forwarder node there is a packet scheduling decision to be made , to choose how many packets per session should be forwarded in the next slot .",
    "although by assumption we require the forwarding policy to be work - conserving , our results do not restrict the scheduling policy any further .",
    "in particular , our analysis only depends on @xmath151 and hence it is insensitive to the chosen discipline .",
    "here we simulate the operation of @xmath91 with different forwarding policies , in particular with first - in first - out ( fifo ) , head of line proportional processor sharing ( hlpps ) , strict priority and longest queue first ( lqf ) , where hlpps refers to serving sessions proportionally to their queue backlogs @xcite , and lqf refers to giving priority to the session with the longest queue .",
    "figure [ fig : fwddiscipline ] shows sample path differences for several forwarding disciplines on the example of the previous section , while table  [ delay_table ] compares the average delay performance for different arrival rates .",
    "independent of the discipline used , the average total number of packets in the system is approximately the same .",
    "therefore , while our theorem states that the forwarding policy does not affect @xmath91 throughput , simulations additionally show that the delay is also the same .",
    "fig5_b ( 40,5)time ( slots ) ( 19,96)total backlog difference    fig5_c ( 40,5)time ( slots ) ( 19,96)total backlog difference    [ fig : fwddiscipline ]    .average delay performance of @xmath91 under different underlay forwarding policies . [ cols=\"^,^,^,^,^ \" , ]     [ delay_table ]      we simulate the delay of different routing policies , comparing the performance of @xmath91 and @xmath109 overlay policies , as well as @xmath113 and @xmath120 which are not admissible in the overlay .",
    "we experiment for @xmath152 , and we plot the average total backlogs in the system for two example networks shown to the left of each plot .    in fig .",
    "[ fig : delay1 ] @xmath109 fails to detect congestion in the tunnel and consequently delay increases for @xmath153 .",
    "we observe that @xmath91 outperforms @xmath113 and @xmath109 , and performs similarly to @xmath120 .",
    "this relates to avoidance of cycles at low loads by use of shortest paths , see @xcite . in particular",
    ", @xmath120 achieves this by means of hop count bias , while @xmath91 using the tunnels . _",
    "a remarkable fact is that @xmath91 applies control only at the overlay nodes and outperforms in terms of delay @xmath113 which controls all physical nodes in the network .",
    "_ in fig .",
    "[ fig : delay2 ] we study queues in tandem , in which case all policies have maximum throughput since there is a unique path through which all the packets travel .",
    "we choose this scenario to demonstrate another reason why @xmath91 has good delay performance .",
    "the delay of backpressure increases quadratically to the number of network nodes because of maintaining equal backlog differences across all neighbors @xcite . in the case of @xmath91 , as well as",
    "any other admissible overlay policy like @xmath109 , the backlogs increase with the number of routers .",
    "thus , when @xmath154 we obtain a delay gain by applying control only at routers .",
    "[ fig : delay2 ] showcases exactly this delay gain that @xmath91 and @xmath109 have versus @xmath113 and @xmath120 .    we conclude that @xmath91 has very good delay performance which is attributed to two main reasons :    1 .",
    "when traffic load is low , the majority of the packets follow shortest paths .",
    "the number of packets going in cycles is significantly reduced .",
    "since there is no need for congestion feedback within the tunnels , the backlog buildup is not proportional to the number of network nodes but to the number of routers .",
    "model_b       fig_delay_graph.pdf ( 31,64)@xmath113 ( 31,58.5)@xmath120 ( 31,52.5)@xmath155 ( 31,46.5)@xmath109 ( 47,-2)load @xmath156 ( 30,74)average total backlog    [ fig : delay1 ]    model_c       fig_delay_line.pdf ( 31,64)@xmath113 ( 31,58.5)@xmath120 ( 31,52.5)@xmath155 ( 31,46.5)@xmath109 ( 47,-2)load @xmath156 ( 30,74)average total backlog    [ fig : delay2 ]      next we extend @xmath91 to networks with overlapping tunnels , see the example in fig .",
    "[ fig : overlapping ] ( left ) . in this context theorem [ th : opti ] does not apply and we have no guarantees that @xmath91 is maximally stable .",
    "the key to achieving maximum throughput is to correctly balance the ratio of traffic from each session injected into the overlapping tunnels . for the network to be stable with load @xmath157",
    ", a policy needs to direct most of the traffic of session 1 through the dedicated link @xmath158 , or equivalently to allocate @xmath159 .",
    "since node @xmath127 is the destination of session 1 , and hence @xmath160 , we need to relate this routing decision to the congestion in the tunnel .    to make this work , we introduce the following extension . instead of conditioning transmissions on router differential backlog @xmath161 as in @xmath91",
    ", we use the condition @xmath162 .",
    "intuitively , we expect a non - congested node to have a small backlog and thus avoid sending packets over a congested tunnel .",
    "the new policy is called @xmath912 .",
    "it can be proven that @xmath912 is maximally stable for non - overlapping tunnels .",
    "although we do not have a proof for the case of overlapping tunnels , the simulation results show that by choosing @xmath100 to be large @xmath912 achieves maximum throughput .    ' '' ''    * @xmath912 for overlapping tunnels *    ' '' ''    fix a @xmath100 to satisfy eq .",
    "( [ eq : thres ] ) , and recall condition ( [ eq : c1 ] ) : @xmath163    in slot @xmath34 for tunnel @xmath26 let @xmath97 be a session that maximizes the differential backlog between router @xmath21 , ties resolved arbitrarily",
    ". then route into tunnel @xmath26 @xmath164 and @xmath99 .",
    "recall , that @xmath71 denotes the capacity of physical link that connects router @xmath37 to the tunnel @xmath26 .    ' '' ''    figure [ fig : overlapping ] shows the results from an experiment where @xmath165 , @xmath166 , and we vary @xmath156 .",
    "@xmath155 achieves full throughput and similar delay to @xmath120 , doing strictly better than @xmath167 . to understand how @xmath155 works ,",
    "consider the sample path evolution ( fig .",
    "[ fig : overlapping2 ] ) , where @xmath168 are shown .",
    "most of the time we have @xmath169 , thus by the choice of @xmath165 and the condition used in ( [ eq : servf2 ] ) , session 1 rarely gets the opportunity to transmit packets to the overlapping tunnels . as @xmath100 increases session 1",
    "will get fewer and fewer opportunities , hence @xmath155 behavior will approximate the optimal . in fig  [",
    "fig : overlapping2 ] ( right ) we plot the average total backlog for different values of @xmath100 . as @xmath100 increases",
    ", the performance at high loads improves .",
    "general_setb       fig_over_1.pdf ( 31,65)@xmath113 ( 31,44)@xmath109 ( 31,51)@xmath155 ( 31,58)@xmath120 ( 47,-2)load @xmath156 ( 30,74)average total backlog    [ fig : overlapping ]    fig_samplepath_2.pdf ( 58,25)@xmath170 ( 57,55)@xmath171 ( 40,32)@xmath172 ( 40,2)time ( slots ) ( 30,67.6)individual backlogs ( 45,30)(0,-1)11.5 ( 59,53)(-1,-3)2.5 ( 62,22)(-1,-2)3.5       fig_delay_over_t.pdf ( 31,63.5)@xmath100=2 ( 31,58)@xmath100=5 ( 31,53)@xmath100=10 ( 31,48)@xmath100=25 ( 47,-2)load @xmath156 ( 27,74)average total backlog    [ fig : overlapping2 ]",
    "in this paper we propose a backpressure extension which can be applied in overlay networks . from prior work ,",
    "we know that if the overlay is designed wisely , it can match the throughput of the physical network @xcite .",
    "our contribution is to prove that the maximum overlay throughput can be achieved by means of dynamic routing .",
    "moreover , we show that our proposed scheme @xmath91 makes the best of both worlds ( a ) efficiently choosing the paths in online fashion adapting to network variability and ( b ) keeping average delay small avoiding the known inefficiencies of the legacy backpressure scheme .",
    "future work involves the mathematical analysis of the overlapping tunnels case and the consideration of wireless transmissions . in both cases",
    "lemma [ lem : leaky ] does not hold due to correlation of routing decisions at routers with scheduling at forwarders .",
    "we would like to thank dr .",
    "chih - ping li and mr .",
    "matthew johnston for their helpful discussions and comments .",
    "10    d.  andersen , h.  balakrishnan , f.  kaashoek , and r.  morris .",
    "resilient overlay networks . in _ proc .",
    "acm sosp _ , oct .",
    "maury bramson .",
    "convergence to equilibria for fluid models of head - of - the - line proportional processor sharing queueing networks .",
    ", 23(1 - 4):126 , 1996 .",
    "l.  bui , r.  srikant , and a.  stolyar .",
    "novel architectures and algorithms for delay reduction in back - pressure scheduling and routing . in _ proc .",
    "ieee infocom _ ,",
    "april 2009 .",
    "ford and d.r .",
    "flows in networks . in _",
    "princeton universtiy press _ , 1962 .",
    "l.  georgiadis , m.  neely , and l.  tassiulas .",
    "resource allocation and cross - layer control in wireless networks .",
    ", 1:1147 , 2006 .    n.  m. jones , g.  s. paschos , b.  shrader , and e.  modiano . an overlay architecture for throughput optimal multipath routing . in _ proc .  of acm mobihoc _ , 2014 .",
    "m.  j. neely . .",
    "morgan & claypool , 2010 .",
    "michael  j. neely , eytan modiano , and charles  e. rohrs .",
    "dynamic power allocation and routing for time - varying wireless networks .",
    ", 23:89103 , 2005 .",
    "m.  e.  j newman . .",
    "oxford university press , inc .",
    ", new york , ny , usa , 2010 .",
    "g.  s. paschos and e.  modiano .",
    "dynamic routing in overlay networks .",
    "technical report , 2014 .",
    "l.  l. peterson and b.  s. davie . .",
    "morgan kaufmann publishers inc . , san francisco , ca , usa , 4th edition , 2007 .",
    "r.  k. sitaraman , m.  kasbekar , w.  lichtenstein , and m.  jain . .",
    "john wiley & sons , 2014 .",
    "l.  tassiulas and a.  ephremides .",
    "stability properties of constrained queueing systems and scheduling policies for maximum throughput in multihop radio networks . , 37:19361948 , 1992 .",
    "under any control policy @xmath66 , suppose that in time slot @xmath34 the total tunnel backlog satisfies @xmath67 , for some @xmath19 , where @xmath68 is defined in .",
    "the instantaneous output of the tunnel satisfies @xmath69    consider a tunnel @xmath26 which forwards packets , using an arbitrary work - conserving policy , over the path @xmath13 with @xmath62 underlay nodes .",
    "renumber the nodes in the path in sequence they are visited by packets as @xmath173 , where @xmath174 refers to @xmath37 and @xmath175 to @xmath107 , hence @xmath176 since the statement is inherently related to packet forwarding internally in the tunnel @xmath26 , we will introduce some notation .",
    "denote by @xmath177 the packets waiting at the @xmath178 node at slot @xmath34 , to be transmitted to the @xmath179 , along tunnel @xmath180 ( the packets may belong to different sessions ) .",
    "clearly , it is @xmath181 .",
    "also , let @xmath182 be the actual number of session @xmath43 packets that leave this node in slot @xmath34 . for all @xmath183 ,",
    "due to work - conservation we have @xmath184 @xmath185 denoting the capacity of the physical link connecting nodes @xmath186 .",
    "hence , @xmath187 evolve as @xmath188    first we establish that the instantaneous output of the tunnel can not be larger than its bottleneck capacity , i.e. , @xmath189 if the bottleneck link is the last link on @xmath13 then ( [ eq : req ] ) follows immediately from .",
    "else , pick @xmath59 such that @xmath190 and suppose @xmath191 is the bottleneck link .",
    "then let us focus on the link @xmath192 .",
    "for its input we have @xmath193 where above and in the remaining proofs we use parentheses to denote the expressions from which equalities and inequalities follow . for link @xmath192 output @xmath194 where @xmath195 . starting the system empty",
    ", the backlog @xmath196 can not grow larger than @xmath197 since this is the maximum number of arriving packets in one slot and they are all served in the next slot . hence , it is also @xmath198 . by induction ,",
    "the same is true for @xmath199 for any @xmath200 , and we get ( [ eq : req ] ) .",
    "the remaining proof is by contradiction .",
    "assume @xmath201 .",
    "consider the physical link @xmath191 with @xmath202 .",
    "using @xmath203 to understand ( [ eq : leakyback ] ) note that if the rhs was false , by ( [ eq : fc1 ] ) we would have @xmath204 and thus by ( [ eq : indf ] ) also @xmath205 .",
    "leaky.pdf    [ fig : leaky ]    since by the premise we have @xmath206 , applying ( [ eq : fc1 ] ) we deduce @xmath207 from which applying ( [ eq : leakyback ] ) recursively we roll back in time and space to obtain @xmath208 since the maximum backlog increase at any node within one slot is @xmath63 , we roll forward in time to get @xmath209 summing up for all forwarders @xmath210 we get @xmath211\\notag\\\\ & = m_{ij}{{r_{ij}^{\\min}}}+\\frac{m_{ij}(m_{ij}-1)}2r_{ij}^{\\max}\\stackrel{\\eqref{eq : t0}}{=}t_0.\\end{aligned}\\ ] ] which contradicts the premise of the lemma .",
    "in order to prove that @xmath91 is maximally stable , we will pick an arbitrary arrival vector @xmath212 in the interior of @xmath2 and show that the system is stable . to prove stability we perform a @xmath106-slot drift analysis and",
    "show that @xmath91 has a negative drift .",
    "our system state is described by the vector of queue lengths @xmath213 . by lemma [ lem : detfb ] ,",
    "the tunnel backlogs @xmath77 are deterministically bounded under @xmath91 , and thus for the purposes of showing @xmath91 stability we choose the candidate quadratic lyapunov function : @xmath214 ^ 2.\\ ] ] we will use the following shorthand notation @xmath215 the @xmath106-slot lyapunov drift under policy @xmath41 is @xmath216 from lemma [ lem : detfb ] we have @xmath217 for every sample path , and thus the @xmath106-slot lyapunov drift for tb becomes @xmath218 . to prove the stability of @xmath91",
    ", it suffices to show that for any @xmath219 in the interior of the stability region there exist positive constants @xmath220 and a finite @xmath106 such that @xmath221 , see @xmath106-slot drift theorem in @xcite ( corollary of the foster s criterion ) .",
    "the remaining proof shows this fact .    to derive an expression for the @xmath106-slot drift @xmath222 we first write the @xmath106-slot queue evolution inequalities @xmath223 where use the @xmath224 notation to denote summations over @xmath106 slots :",
    "@xmath225 the inequality is because the arrivals @xmath226 are added at the end of the @xmath106-slot period  some of these packets may actually be served within the @xmath106-slot period .",
    "taking squares on ( [ eq : kfeq ] ) , using lemma 4.3 from @xcite , and performing some calculus we obtain the following bound @xmath227 where @xmath228 is a positive constant related to the maximum number of arriving packets in a slot @xmath38 , the maximum link capacity @xmath229 , and the maximum node - degree @xmath230 in graph @xmath52",
    ".    denote with @xmath231 the session @xmath43 packets in the tunnel @xmath26 , where @xmath232 .",
    "this backlog evolves as @xmath233 we have @xmath234 , and @xmath235 , hence @xmath236 .",
    "it follows that for any @xmath237 @xmath238 where @xmath103 is the deterministic upper bound of @xmath56 from ( [ eq : fmax ] ) .",
    "hence , @xmath239 \\right\\},\\label{eq : interim}\\end{aligned}\\ ] ] where the equality comes from the node - centric and link - centric packet accounting in a network , see @xcite on page 48 .",
    "we design a stationary oracle ( @xmath240 ) policy , whose purpose is to assist us in proving the optimality of @xmath91 policy .",
    "the foundation of @xmath240 lies on the existence of a flow decomposition . for any @xmath219 in the interior of the stability region",
    ", there exists an @xmath241 such that @xmath242 is also stabilizable , where @xmath243 is a vector of ones .",
    "thus , by the sufficiency of the conditions in section [ sec : region ] there must exist a feasible flow decomposition @xmath244 such that @xmath245 and @xmath246 for all @xmath247 . using this particular decomposition",
    "we define a specific @xmath240 policy for the particular @xmath212 as follows .    ' '' ''    @xmath212*stationary randomized oracle ( @xmath240 ) policy *    ' '' ''    in every time slot and at each tunnel @xmath26 ,    * if @xmath248 ( the tunnel is loaded ) , then choose @xmath249 * else if @xmath250 ( not loaded tunnel ) , choose a session using an i.i.d . process",
    "@xmath251 with distribution @xmath252 the routing functions are then determined by @xmath253 and @xmath254 .",
    "and the allocation of service to session @xmath251 given by ( [ eq : allocation ] ) are independent . ]    ' '' ''    observe that @xmath240 satisfies the capacity constraints at every slot , namely @xmath255 .",
    "therefore @xmath256 .",
    "despite wasting transmissions when the tunnels are loaded , @xmath240 stabilizes @xmath219 :    [ cor : stat ] for any @xmath219 in the interior of the stability region we have @xmath257    @xmath240 is also designed to mimic the condition ( [ eq : c1 ] ) used by @xmath91 .",
    "because of it , we can show that @xmath91 compares favorably to @xmath240 .",
    "[ lem : kslot ] the @xmath106-slot policy comparison yields for all @xmath19 @xmath258   \\right\\ } \\\\ &   \\hspace{0.1 in } \\geq \\mathbbm{e}_{\\mathbf h}\\left\\{\\sum_{c}\\tilde \\mu_{ij}^{c}(t,{\\boldsymbol\\lambda{\\text{--or}}})\\left [ q_i^c(t)-q_j^c(t)\\right ] \\right\\ } -k^2b_2,\\notag\\end{aligned}\\ ] ] where @xmath259 is a constant .",
    "we combine ( [ eq : interim ] ) with lemma [ lem : kslot ] to get @xmath260   \\right\\},\\end{aligned}\\ ] ] which can be rewritten as @xmath261,\\notag\\end{aligned}\\ ] ] where in the last inequality we used lemma [ cor : stat ] .",
    "hence , we finally get @xmath262 q_i^c(t)\\ ] ] choose a finite @xmath263 and define the positive constants @xmath264 and @xmath265 . then rewrite ( [ eq : lastdrift ] ) as @xmath266 which completes the proof .",
    "below we give the proofs for the technical lemmas [ cor : stat ] and [ lem : kslot ] .",
    "for any @xmath219 in the interior of the stability region we have @xmath257    first we will need a technical lemma , which states that a non - loaded tunnel can not become loaded under @xmath240 .",
    "we emphasize that in the following lemma all backlogs @xmath56 refer to the system evolution under @xmath240 .",
    "[ lem : absorption ] consider the system evolution on router edge @xmath26 under @xmath240 for the slots @xmath267 and suppose that @xmath56 is arbitrary .",
    "suppose that for a time slot @xmath268 we have @xmath269 , then @xmath270    the proof is by contradiction .",
    "suppose there exists @xmath271 such that @xmath272 and @xmath273 .",
    "then , there must exist a slot @xmath274 with @xmath275 where a transition occurred , such that @xmath276 and @xmath277 .",
    "then use the facts @xmath278 , @xmath279 which hold for any @xmath280 , and ( [ eq : queuefij ] ) to get @xmath281 thus , since @xmath282 we may apply lemma  [ lem : leaky ] on slot @xmath283 to conclude that @xmath284 . then combine with @xmath279 and ( [ eq : queuefij ] ) again @xmath285 which is a contradiction .    to prove lemma  [ cor : stat ]",
    ", we will first show that for any router edge @xmath26 it is @xmath286 we begin with the rhs of ( [ eq : orefficiency ] ) . for any slot @xmath280 in the observation period @xmath287 ,",
    "observe that if the value of @xmath288 is revealed , @xmath289 does not depend further on @xmath290 , i.e. , @xmath289 and @xmath290 are conditionally mutually independent and we may write @xmath291 then , by the law of total expectation we have for @xmath292 @xmath293 where we used @xmath294 by definition of @xmath240 . for @xmath295",
    "we immediately get @xmath296 . summing up over all slots",
    "proves the rhs of .    to prove the lhs of ( [ eq : orefficiency ] ) we will use lemma [ lem : absorption ] .",
    "first assume that the observation period starts with @xmath297 .",
    "then invoking lemma [ lem : absorption ] we conclude that @xmath298 for all @xmath299 for any realization of the system evolution . then assume that the observation period starts with @xmath300 , by we have @xmath301 and it follows that the tunnel backlog monotonically decreases until it becomes less than @xmath100 .",
    "moreover , since @xmath302 , the maximum number of slots required to become smaller than @xmath100 is at most @xmath303 . on the first slot",
    "when @xmath298 , we can apply lemma [ lem : absorption ] again .",
    "thus , combining the two cases , we conclude that for any realization we have @xmath304 let @xmath305 , we have    @xmath306    where the last inequality follows from @xmath307 , see .",
    "this proves . to complete the proof",
    ", we use the lower bound of eq .",
    "( [ eq : orefficiency ] ) for the first term and the upper bound for the second term , and use the fact that node s @xmath37 out - degree is bounded above by the maximum node degree @xmath230 .",
    "the @xmath106-slot policy comparison yields for all @xmath19 @xmath258   \\right\\ } \\\\ &   \\hspace{0.1 in } \\geq \\mathbbm{e}_{\\mathbf h}\\left\\{\\sum_{c}\\tilde \\mu_{ij}^{c}(t,{\\boldsymbol\\lambda{\\text{--or}}})\\left [ q_i^c(t)-q_j^c(t)\\right ] \\right\\ } -k^2b_2,\\notag\\end{aligned}\\ ] ] where @xmath308 is a constant given in eq .",
    "( [ eq : b1 ] ) .    fix some arbitrary router edge @xmath26 , and a time slot @xmath34 .",
    "the concept of the proof is to examine the subsequent @xmath106 slots and compare @xmath91 to @xmath240 with respect to the products @xmath309\\right\\}$ ] , where @xmath310 are fully determined by @xmath290 , and @xmath311 represents the decisions made by policy @xmath41 in the @xmath106-slot observation period starting at time @xmath34 and state @xmath290 . to avoid a possible confusion",
    ", we note that @xmath312 denote backlogs under the @xmath91 policy .",
    "although the initial state is common to both policies , the evolution through the @xmath106-slot period might be different , see for example figure [ fig : trajectory ] .",
    "we first make a few definitions that regard the sample path evolution of the system under @xmath91 within the observation period of slots @xmath313 . to make the notation compact , we define a random vector @xmath314 such that for any realization @xmath315 and any @xmath316 it is @xmath317 fix a sample path @xmath318 .",
    "this corresponds to particular vector @xmath319 .",
    "if @xmath320 we say that the slot @xmath321 _ is overload_. let @xmath322 be the set of all overload slots .",
    "similarly if @xmath323 , we say that the slot @xmath321 _ is underload _ and denote the corresponding set with @xmath324 .",
    "we remark that these sets are realized for the specific sample path . in the following , we will compare @xmath91 to @xmath240 for this sample path .",
    "first we compare the two policies across underload slots , @xmath325 . in such slots we have by @xmath91 design that @xmath326\\geq \\notag\\\\ & \\hspace{0.4 in } \\sum_{c}\\mu_{ij}^{c}(t+\\tau,{\\boldsymbol\\lambda{\\text{--or } } } )   \\left [ q_i^c(t+\\tau)-q_j^c(t+\\tau)\\right]\\\\ & \\hspace{2.2in},~\\forall t+\\tau\\in{\\cal u}\\notag\\end{aligned}\\ ] ] where we emphasize that @xmath327 is not decided based on @xmath328 .",
    "are the backlogs at @xmath321 under @xmath91 , but not necessarily under @xmath240 .",
    "] nevertheless the inequality holds since , given underload , @xmath91 is a universal maximizer for this quantity .",
    "we will need a bound for the largest backlog increase and decrease in @xmath59 slots .",
    "let @xmath329 , we have @xmath330 which are independent of @xmath34",
    ". also recall that @xmath229 is the maximum link capacity and @xmath230 the maximum node degree on @xmath52 , and define @xmath331 it follows that @xmath332\\leq kb_2 $ ] . also , note that under any policy @xmath41 it is @xmath333 .",
    "then , on an underload slot @xmath325 , we have @xmath334 \\notag\\\\ & \\hspace{0.1in}\\geq \\sum_{c}\\mu_{ij}^{c}(t+\\tau,\\text{{{\\text{bp - t } } } } )   \\left [ q_i^c(t+\\tau)-q_j^c(t+\\tau)\\right]-\\tau b_2 \\notag\\\\ & \\hspace{0.08 in } \\stackrel{\\text{(\\ref{eq : globalbnd})}}{\\geq}\\sum_{c}\\mu_{ij}^{c}(t+\\tau,{\\boldsymbol\\lambda{\\text{--or } } } )   \\left [ q_i^c(t+\\tau)-q_j^c(t+\\tau)\\right]-\\tau b_2\\notag \\\\ & \\hspace{0.1in}= \\sum_{c}\\mu_{ij}^{c}(t+\\tau,{\\boldsymbol\\lambda{\\text{--or } } } )   [ q_i^c(t)-q_j^c(t)+\\notag \\\\ & \\hspace{1.7in}+\\delta q_i^c(\\tau)-\\delta q_j^c(\\tau ) ]",
    "-\\tau b_2 \\notag \\\\ & \\hspace{0.1in}\\geq \\sum_{c}\\mu_{ij}^{c}(t+\\tau,{\\boldsymbol\\lambda{\\text{--or } } } )   \\left [ q_i^c(t)-q_j^c(t)\\right]-2\\tau b_2\\end{aligned}\\ ] ]          our plan is to derive a similar expression to for the overload slots . to proceed with the plan",
    ", we develop an analysis which depends on the sign of @xmath341 $ ] which is determined at the beginning of the @xmath106-slot period .",
    "if positive , we break the observation into overload subperiods @xmath342 ( to be defined shortly ) and the remaining underload slots @xmath343 .",
    "if negative , then we study separately the overload slots @xmath344 and the remaining underload slots @xmath345 .",
    "\\a ) assume first that the observed state @xmath290 is such that @xmath341\\geq 0 $ ] . for this case",
    ", we use the concept of an _ overload subperiod _ , which is a period of consecutive overload slots plus an initial underload slot .",
    "we formally define the @xmath346 overload subperiod with length @xmath347 consisting of consecutive slots @xmath348 , such that @xmath349 and @xmath350 . in words ,",
    "an overload subperiod begins with one underload slot and ends with an overload slot , while all slots within the subperiod are overload and the slot after the subperiod is underload , see a representation of such an overload subperiod in fig .",
    "[ fig : trajectory ] .",
    "let @xmath351 be the set of slots comprising the @xmath346 overload subperiod for sample path under study .",
    "suppose , that there are @xmath352 overload subperiods , where the random variable @xmath353 takes values in @xmath354 .",
    "we also define @xmath355 .",
    "note that the sets @xmath351 are disjoint , it is @xmath356 , and @xmath357 .    by definition of the overload subperiod",
    "the backlog at the last slot is larger than at the first slot , hence for our chosen sample path we have @xmath358 let us now extend the definition of the overload subperiod to the special case of the first subperiod . if the first slot of the observation period is overload , i.e. , @xmath359 , then the first overload subperiod starts at an overload slot ( as opposed to the original definition ) and completes at the last consecutive overload slot ( similar to the original definition ) .",
    "this is a natural extension to the above definition of the overload subperiod .",
    "the backlog difference between last and first slot of the first overload subperiod is @xmath360 now , let us examine the @xmath346 overload subperiod of slots @xmath351 for @xmath361 , combining ( [ eq : bound1 ] ) and ( [ eq : kfeq2 ] ) we have @xmath362 where the equality follows from applying lemma [ lem : leaky ] to all slots in the overload subperiod ( including the first ) .",
    "multiplying both sides with the positive quantity @xmath341 $ ] , we get for overload periods @xmath361 starting from a state with positive @xmath341 $ ]    @xmath363 \\\\ & \\hspace{0.1in}\\geq \\hspace{-0.25in}\\sum_{\\hspace{0.25in}c , t+\\tau\\in { \\cal t}_m}\\hspace{-0.25in}\\mu_{ij}^{c}(t+\\tau,{\\boldsymbol\\lambda{\\text{--or } } } )   \\left [ q_i^c(t)-q_j^c(t)\\right]\\notag\\\\ & \\hspace{0.1in}\\geq \\hspace{-0.2in}\\sum_{\\hspace{0.2in}c , t+\\tau\\in { \\cal t}_m}\\hspace{-0.2in}\\mu_{ij}^{c}(t+\\tau,{\\boldsymbol\\lambda{\\text{--or } } } )   \\left [ q_i^c(t)-q_j^c(t)\\right]- \\hspace{-0.25in}\\sum_{\\hspace{0.15in}t+\\tau\\in { \\cal t}_m}\\hspace{-0.15in}2\\tau b_2\\notag\\end{aligned}\\ ] ]    where in the last step we intentionally relaxed the bound further to make it match ( [ eq : underloadslots ] ) . for @xmath364 and @xmath365 , we repeat the above approach using ( [ eq : bound21 ] ) , and ( [ eq : overloadpos ] ) still holds .",
    "however , in case @xmath366 , i.e. the observation period starts in overload , we must replace ( [ eq : bound1 ] ) with ( [ eq : bound2 ] ) , in which case the above approach breaks",
    ". therefore we deal with this case in a different manner .",
    "in particular we will show that if our sample path has @xmath366 then for all time slots in the first overload subperiod @xmath367 , @xmath368 starting from the first slot @xmath34 , and since @xmath369 , observe that both policies @xmath370 will make the same decision @xmath371 . then ( [ eq : kfeq2 ] ) is satisfied with equality , and since @xmath44 does not depend on the chosen policy , we have that @xmath372 is the same for both policies .",
    "this process is repeated for all slots in subperiod @xmath338 consisting of overload slots under @xmath91 .",
    "thus , we conclude that if the system is in the first overload period under @xmath91 with @xmath366 , then it is also in the first overload period under @xmath240 .",
    "therefore , for @xmath367 , @xmath366 we have @xmath373 and ( [ eq : overloadpos ] ) holds for this case as well .",
    "we conclude that ( [ eq : overloadpos ] ) is true for all @xmath122 as long as @xmath341\\geq 0 $ ] .",
    "let @xmath374 denote the event @xmath341\\geq 0 $ ] and @xmath375 the complement .",
    "observing that the remaining slots are underload @xmath376 and combining with ineq .",
    "( [ eq : underloadslots ] ) , we condition on the sample path @xmath377 to get @xmath378\\big |\\mathbf{q}^+_t , s=\\bm s\\right\\ } \\notag\\\\ & = \\mathbbm{e}_{\\mathbf h}\\left\\{\\hspace{-0.2in}\\sum_{\\hspace{0.2in}c , t+\\tau\\in { \\cal t}}\\hspace{-0.28 in } \\mu_{ij}^{c}(t+\\tau,{{\\text{bp - t } } } )   \\left [ q_i^c(t)-q_j^c(t)\\right]\\big |\\mathbf{q}^+_t , s=\\bm s\\right\\ } \\notag\\\\ & + \\mathbbm{e}_{\\mathbf h}\\left\\{\\hspace{-0.3in}\\sum_{\\hspace{0.25in}c , t+\\tau\\in { \\cal k - t } } \\hspace{-0.37in}\\mu_{ij}^{c}(t+\\tau,{{\\text{bp - t } } } )   \\left [ q_i^c(t)-q_j^c(t)\\right]\\big |\\mathbf{q}^+_t , s=\\bm s\\right\\ } \\notag\\\\ & \\hspace{-0.05in}\\stackrel{\\text{(\\ref{eq : underloadslots})\\&(\\ref{eq : overloadpos})}}{\\geq } \\mathbbm{e}_{\\mathbf h}\\left\\{\\sum_{c } \\tilde\\mu_{ij}^{c}(t,{\\boldsymbol\\lambda{\\text{--or } } } )   \\left [ q_i^c(t)-q_j^c(t)\\right]\\big |\\mathbf{q}^+_t , s=\\bm s\\right\\ } \\notag\\\\ & -\\sum_{t+\\tau\\in { \\cal k}}2\\tau b_2\\end{aligned}\\ ] ]    \\b ) next we study the case where the observation period starts with @xmath341 < 0 $ ] and we examine the overload slots .",
    "since @xmath91 refrains from transmission in these slots , we have @xmath379 multiplying with the negative quantity @xmath341 $ ] we get @xmath380 \\notag\\\\ & \\hspace{0.1in}\\geq \\hspace{-0.1in}\\sum_{c , t+\\tau\\in   { \\cal o}}\\hspace{-0.1in}\\mu_{ij}^{c}(t+\\tau,{\\boldsymbol\\lambda{\\text{--or } } } )   \\left [ q_i^c(t)-q_j^c(t)\\right]\\notag\\\\ & \\hspace{0.1in}>\\hspace{-0.1 in } \\sum_{c , t+\\tau\\in   { \\cal o}}\\hspace{-0.1in}\\mu_{ij}^{c}(t+\\tau,{\\boldsymbol\\lambda{\\text{--or } } } )   \\left [ q_i^c(t)-q_j^c(t)\\right]-2\\tau b_2.\\end{aligned}\\ ] ] combining with ( [ eq : underloadslots ] ) we obtain @xmath381\\big |\\mathbf{q}^-_t , s=\\bm s\\right\\ } \\notag\\\\ & = \\mathbbm{e}_{\\mathbf h}\\left\\{\\hspace{-0.2in}\\sum_{\\hspace{0.15in}c , t+\\tau\\in { \\cal o}}\\hspace{-0.22 in } \\mu_{ij}^{c}(t+\\tau,{{\\text{bp - t } } } )   \\left [ q_i^c(t)-q_j^c(t)\\right]\\big |\\mathbf{q}^-_t , s=\\bm s\\right\\ } \\notag\\\\ & + \\mathbbm{e}_{\\mathbf h}\\left\\{\\hspace{-0.3in}\\sum_{\\hspace{0.25in}c , t+\\tau\\in { \\cal k - o } } \\hspace{-0.35in}\\mu_{ij}^{c}(t+\\tau,{{\\text{bp - t } } } )   \\left [ q_i^c(t)-q_j^c(t)\\right]\\big |\\mathbf{q}^-_t , s=\\bm s\\right\\ } \\notag\\\\ & \\hspace{-0.01in}\\stackrel{\\text{(\\ref{eq : underloadslots})\\&(\\ref{eq : overloadneg})}}{\\geq } \\mathbbm{e}_{\\mathbf h}\\left\\{\\sum_{c } \\tilde\\mu_{ij}^{c}(t,{\\boldsymbol\\lambda{\\text{--or } } } )   \\left [ q_i^c(t)-q_j^c(t)\\right]\\big |\\mathbf{q}^-_t , s=\\bm s\\right\\ } \\notag\\\\ & -\\sum_{t+\\tau\\in { \\cal k}}2\\tau b_2\\end{aligned}\\ ] ] in conclusion , depending on the sign of @xmath341 $ ] , we either break the observation into overload subperiods @xmath342 and remaining underload slots @xmath343 to use ( [ eq : overloadpos ] ) and ( [ eq : underloadslots ] ) , or we study separately the overload slots @xmath344 and the remaining underload slots @xmath345 using ( [ eq : overloadneg ] ) and ( [ eq : underloadslots ] ) .",
    "note that @xmath382 . hence @xmath383\\big",
    "|s=\\bm s\\right\\ } \\notag\\\\ & = \\mathbbm{e}_{\\mathbf h}\\left\\{\\sum_{c } \\tilde\\mu_{ij}^{c}(t,{{\\text{bp - t } } } )   \\left [ q_i^c(t)-q_j^c(t)\\right]\\big |\\mathbf{q}^+_t , s=\\bm s\\right\\ } \\notag\\\\ & + \\mathbbm{e}_{\\mathbf h}\\left\\{\\sum_{c } \\tilde\\mu_{ij}^{c}(t,{{\\text{bp - t } } } )   \\left [ q_i^c(t)-q_j^c(t)\\right]\\big |\\mathbf{q}^-_t , s=\\bm s\\right\\ } \\notag\\\\ & \\hspace{-0.01in}\\stackrel{\\text{(\\ref{eq : qpos})\\&(\\ref{eq : qneg } ) } } { > }   \\hspace{-0.01in}\\mathbbm{e}_{\\mathbf h}\\left\\{\\sum_{c } \\tilde\\mu_{ij}^{c}(t,{\\boldsymbol\\lambda{\\text{--or } } } )   \\left [ q_i^c(t)-q_j^c(t)\\right]\\big |s=\\bm s\\right\\}\\notag\\\\ & -k^2 b_2.\\end{aligned}\\ ] ]",
    "let @xmath384 , we have @xmath385\\right\\ } \\notag\\\\ & = \\sum_{\\bm s\\in { \\cal s}}p(s=\\bm s|\\mathbf{h}(t))\\\\ & \\hspace{0.4 in } \\times \\mathbbm{e}_{\\mathbf h}\\left\\{\\sum_{c } \\tilde\\mu_{ij}^{c}(t,{{\\text{bp - t } } } )   \\left [ q_i^c(t)-q_j^c(t)\\right]\\big |s=\\bm s\\right\\ } \\notag\\vspace{-0.2in}\\\\ & \\hspace{-0.05in}\\stackrel{(\\ref{eq : allcases1})}{\\geq } \\sum_{\\bm s\\in { \\cal s}}p(s=\\bm s|\\mathbf{h}(t))\\vspace{-0.2in}\\\\ & \\hspace{0.4 in } \\times\\mathbbm{e}_{\\mathbf h}\\left\\{\\sum_{c } \\tilde\\mu_{ij}^{c}(t,{\\boldsymbol\\lambda{\\text{--or } } } )   \\left [ q_i^c(t)-q_j^c(t)\\right]\\big |s=\\bm s\\right\\ } \\notag\\\\ & \\hspace{0.4in}- \\sum_{\\bm s\\in { \\cal s}}p(s=\\bm s|\\mathbf{h}(t))k^2b_2\\notag\\\\ & = \\mathbbm{e}_{\\mathbf h}\\left\\{\\sum_{c } \\tilde\\mu_{ij}^{c}(t,{\\boldsymbol\\lambda{\\text{--or } } } )   \\left [ q_i^c(t)-q_j^c(t)\\right]\\right\\ } -k^2b_2.\\end{aligned}\\ ] ]"
  ],
  "abstract_text": [
    "<S> maximum throughput requires path diversity enabled by bifurcating traffic at different network nodes . in this work </S>",
    "<S> , we consider a network where traffic bifurcation is allowed only at a subset of nodes called _ routers _ , while the rest nodes ( called _ forwarders _ ) can not bifurcate traffic and hence only forward packets on specified paths . </S>",
    "<S> this implements an overlay network of routers where each overlay link corresponds to a path in the physical network . </S>",
    "<S> we study dynamic routing implemented at the overlay . </S>",
    "<S> we develop a queue - based policy , which is shown to be maximally stable ( throughput optimal ) for a restricted class of network scenarios where overlay links do not correspond to overlapping physical paths . </S>",
    "<S> simulation results show that our policy yields better delay over dynamic policies that allow bifurcation at all nodes , such as the backpressure policy . </S>",
    "<S> additionally , we provide a heuristic extension of our proposed overlay routing scheme for the unrestricted class of networks . </S>"
  ]
}
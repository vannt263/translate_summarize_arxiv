{
  "article_text": [
    "we consider a committee voting setting in which each voter approves of a subset of candidates and based on the approvals , a target @xmath0 number of candidates are selected .",
    "the setting has been referred to as approval - based multiwinner voting or committee voting with approvals .",
    "the setting has inspired a number of natural voting rules  @xcite .",
    "many of the voting rules attempt to satisfy some notion of representation .",
    "however it has been far from clear what axiom capture the representation requirements .",
    "@xcite proposed two compelling representation axioms called _ justified representation ( @xmath1 ) _ and _ extended justified representation ( @xmath2)_. whereas the former can be tested as well as achieved in polynomial time , the latter property is conp - complete to test and no polynomial - time algorithm is known to achieve it .",
    "interestingly , @xcite proposed an intermediate property called _ proportional justified representation ( @xmath3 ) _ that admits a polynomial - time algorithm to achieve .",
    "the idea behind all the three properties is that a cohesive and large enough group deserves sufficient number of approved candidates in the winning set of candidates .",
    "@xcite argued that although @xmath2is a stronger property than @xmath3 , @xmath3is more reasonable because it is compatible with a property called perfect representation .",
    "proportional justified representation ( @xmath3 ) has been examined in subsequent papers  @xcite . despite the flurry of work on the property",
    ", the complexity of testing proportional justified representation has remained an open problem .",
    "@xcite state that _",
    "`` we do not know what is the complexity of checking whether a given committee provides pjr '' .",
    "_ in a talk `` approval voting , representation , & liquid democracy '' at the _ workshop on future directions in computational social choice , hungary _ in november 2016 , markus brill also mentioned the problem as an interesting open problem .",
    "the problem is especially important if one wants to test whether a status quo outcome or the outcome of some other rule or negotiation process satisfies @xmath3 .",
    "previously , @xcite studied the complexity of testing pareto optimality of a committee .    in this paper",
    ", we settle the complexity of testing @xmath3by proving that the problem is conp - complete .",
    "we complement the complexity result by showing that the problem admits efficient algorithms if any of the following parameters are bounded : ( 1 ) @xmath4 ( number of voters ) ( 2 ) @xmath5 ( number of candidates ) ( 3 ) @xmath6 ( maximum number of candidates approved by a voter ) ( 4 ) @xmath7 ( maximum number of voters approving a given candidate ) . for the first two parameters ,",
    "we show that the problem is _ fpt ( fixed - parameter tractable ) _ , i.e , there exists an fpt algorithm that solves the problem in @xmath8 time , where where @xmath0 is the parameter and @xmath9 is some computable function and @xmath10 is a polynomial both independent of problem instance @xmath11 .",
    "our results are summarized in table  [ table : summary : pjr ] .",
    "we consider a social choice setting with a set @xmath12 of voters and a set @xmath13 of @xmath5 candidates .",
    "each voter @xmath14 submits an approval ballot @xmath15 , which represents the subset of candidates that she approves of .",
    "we refer to the list @xmath16 of approval ballots as the _ ballot profile_. we will consider _ approval - based multi - winner voting rules _ that take as input a tuple @xmath17 , where @xmath0 is a positive integer that satisfies @xmath18 , and return a subset @xmath19 of size @xmath0 , which we call the _ winning set _ , or _",
    "committee_.    we now summarize the main representation properties proposed in the literature .    given a ballot profile @xmath20 over a candidate set @xmath13 and a target committee size @xmath0 , we say that a set of candidates @xmath21 of size @xmath22 _ provides justified representation for @xmath23 _ if @xmath24    the rationale behind this definition is that if @xmath0 candidates are to be selected , then , intuitively , each group of @xmath25 voters `` deserves '' a representative .",
    "therefore , a set of @xmath25 voters that have at least one candidate in common should not be completely unrepresented .    given a ballot profile @xmath26 over a candidate set @xmath13 , a target committee size @xmath0 , @xmath18 , we say that a set of candidates @xmath21 , @xmath22 , _ satisfies @xmath27-extended justified representation for @xmath23 _ and integer @xmath27 if @xmath28    we say that @xmath21 satisfies _ satisfies extended justified representation for @xmath23 _ if it satisfies satisfies @xmath27-extended justified representation for @xmath23 and all integers @xmath29 .",
    "@xcite came up with the notion of _ proportional justified representation ( @xmath3 ) _ , which can be seen as an alternative to @xmath2 .",
    "given a ballot profile @xmath26 over a candidate set @xmath13 , a target committee size @xmath0 , @xmath18 , and integer @xmath27 we say that a set of candidates @xmath21 , @xmath22 , _ satisfies @xmath27-proportional justified representation for @xmath23 _ if @xmath30    we say that @xmath21 satisfies _ satisfies proportional justified representation for @xmath23 _ if it satisfies satisfies @xmath27-proportional justified representation for @xmath23 and all integers @xmath29 .    it is easy to observe that ejr implies pjr which implies jr .",
    "we first prove that testing @xmath3is conp - complete .",
    "the proof involves a similar type of reduction as the one used by @xcite to prove that testing @xmath2is conp - complete .        to prove conp - completeness , we reduce the classic balanced biclique problem ( [ gt24 ] in @xcite @xcite ) to the complement of our problem .",
    "an instance of balanced biclique is given by a bipartite graph @xmath36 with parts @xmath37 and @xmath38 and edge set @xmath39 , and an integer @xmath27 ; it is a `` yes''-instance if we can pick subsets of vertices @xmath40 and @xmath41 so that @xmath42 and @xmath43 for each @xmath44 ; otherwise , it is a `` no''-instance .",
    "given an instance @xmath45 of balanced biclique with @xmath46 , we create an instance of our problem as follows .",
    "assume without loss of generality that @xmath47 , @xmath48 .",
    "we construct @xmath49 pairwise disjoint sets of candidates @xmath50 , @xmath51 and @xmath52 , so that @xmath53 , @xmath54 , @xmath55 , and set @xmath56 .",
    "we then construct @xmath49 sets of voters @xmath57 , @xmath58 , @xmath59 , so that @xmath60 , @xmath61 , @xmath62 ( note that @xmath63 as we assume that @xmath48 ) .",
    "for each @xmath64 we set @xmath65 , and for each @xmath66 we set @xmath67 .",
    "the candidates in @xmath52 are matched to voters in @xmath59 : each voter in @xmath59 approves exactly one candidate in @xmath52 , and each candidate in @xmath52 is approved by exactly one voter in @xmath59 .",
    "denote the resulting list of ballots by @xmath31 . finally , we set @xmath68 , and let @xmath69 , where @xmath70 is a subset of @xmath52 with @xmath71 .",
    "note that the number of voters @xmath4 is given by @xmath72 , so @xmath73 .",
    "suppose first that we started with a `` yes''-instance of balanced biclique , and let @xmath74 be the respective @xmath27-by-@xmath27 biclique .",
    "let @xmath75 and @xmath76 .",
    "then @xmath77 , all voters in @xmath78 approve all candidates in @xmath79 , @xmath80 , but all voters in @xmath78 together are only represented by @xmath81 candidates in @xmath21 .",
    "hence , @xmath21 fails to provide @xmath27-proportional justified representation for @xmath23 .",
    "conversely , suppose that @xmath21 fails to provide @xmath3for @xmath23 .",
    "that is , there exists a value @xmath82 , a set @xmath78 of @xmath83 voters and a set @xmath79 of @xmath84 candidates so that all voters in @xmath78 approve of all candidates in @xmath79 , but all voters in @xmath78 together are only represented by less than @xmath84 candidates in @xmath21 .",
    "note that , since @xmath85 and @xmath86 , we have @xmath87 .",
    "further , since @xmath88 and @xmath89 , it follows that @xmath78 contains one voter from @xmath58 .",
    "so , all voters in @xmath78 together are represented by exactly @xmath81 candidates in @xmath21 .",
    "this implies that @xmath90 . as @xmath91",
    ", it follows that @xmath92 .",
    "since @xmath78 contains voters from both @xmath57 and @xmath58 , it follows that @xmath93 .",
    "thus , there are at least @xmath27 voters in @xmath94 who approve the same @xmath90 candidates in @xmath50 ; any set of @xmath27 such voters and @xmath27 such candidates corresponds to an @xmath27-by-@xmath27 biclique in the input graph .",
    "note that although there is a polynomial - time algorithm to compute a committee that achieves @xmath3  @xcite , we have proved that checking whether any arbitrary committee achieves @xmath3is conp - complete .",
    "we complement the negative computational result by showing that testing @xmath3is computationally tractable if one of the following parameters is bounded .          suppose we want to check whether @xmath100 satisfies @xmath3 .",
    "if @xmath4 is bounded then one can simply brute force all the possible violating sets @xmath101 of voters and check that if @xmath102 then it must be that @xmath103 .",
    "suppose we want to check whether @xmath100 satisfies @xmath3 .",
    "note that it is sufficient to show that testing @xmath27-@xmath3is in fpt with parameter @xmath5 .",
    "note that @xmath105 for all @xmath32 . since @xmath106 , @xmath107 .",
    "we go through all the subsets @xmath108 of size @xmath27 .",
    "each set @xmath109 is viewed as the intersection of possible objecting / deviating set of voters . for each @xmath109",
    ", we find the corresponding set of voters @xmath110 as follows :      we return no ( i.e. , @xmath21 does not satisfy @xmath27-@xmath3 ) if @xmath112 , @xmath34 but @xmath113 . if we do not return no for any @xmath109 , in that case we return yes ( i.e. , @xmath21 satisfies @xmath27-@xmath3 ) .",
    "we now argue that it takes at most @xmath104 operations to test @xmath3 .",
    "to check @xmath27-@xmath3 , we go through @xmath114 sets . for each set @xmath109",
    ", we find @xmath110 which takes @xmath115 steps .",
    "after that we find @xmath116 which takes an additional @xmath117 operations .",
    "hence it takes @xmath118 operations to test @xmath27-@xmath3and it takes @xmath104 operations to test @xmath3 .",
    "suppose we want to check whether @xmath100 satisfies @xmath3 .",
    "note that it is sufficient to show that testing @xmath27-@xmath3is polynomial - time solvable for each @xmath27 if @xmath6 is bounded .",
    "note that we only need to consider @xmath120 because the maximum size of intersection of any set of approval sets is at most @xmath6 which means that @xmath121 .",
    "for @xmath27 larger than @xmath6 , @xmath27-@xmath3is trivially satisfied .",
    "we now describe the algorithm to test @xmath27-@xmath3for all @xmath120 .",
    "we go through all the subsets @xmath108 of size @xmath120 .",
    "there are at most @xmath122 such sets .",
    "since @xmath120 and @xmath6 is bounded , it implies that @xmath6 is constant as well and hence there at most @xmath123 different subsets to be considered .",
    "we return no ( i.e. , @xmath21 does not satisfy @xmath27-@xmath3 ) if @xmath112 , @xmath34 but @xmath113 .",
    "if we do not return no for any @xmath109 , in that case we return yes ( i.e. , @xmath21 satisfies @xmath27-@xmath3 ) .    we now argue that it takes at most @xmath124 operations to test @xmath3 . to check @xmath27-@xmath3 , we go through at most @xmath123 sets . for each set @xmath109",
    ", we find @xmath110 which takes @xmath115 steps .",
    "after that we find @xmath116 which takes an additional @xmath117 operations .",
    "hence it takes @xmath125 operations to test @xmath27-@xmath3and it takes @xmath119 operations to test @xmath3 .",
    "suppose we want to check whether @xmath100 satisfies @xmath3 .",
    "note that for any deviating / objecting set of voters @xmath70 , @xmath127 .",
    "the reason is that any candidate @xmath128 is approved by at most @xmath7 voters .",
    "hence in order to check for a violation of @xmath27-@xmath3 , we just need to check for sets of voters of size at most @xmath7 .",
    "there are at most @xmath129 such set of voters . for each such coalition of voters ,",
    "we just need to check for @xmath27-@xmath3for @xmath130 .",
    "so @xmath131 . for each @xmath70 among the at most @xmath132 sets of voters , we need to test for @xmath27-@xmath3which requires us to compute @xmath133 , @xmath134 , and @xmath135 . hence testing @xmath27-@xmath3of @xmath21 takes @xmath136 time and testing @xmath3takes time @xmath126 .    in this paper",
    ", we examined the complexity of testing @xmath3 , an interesting new axiom in committee voting .",
    "the arguments for all of our positive algorithmic results also hold for testing @xmath2rather than @xmath3 .",
    "aziz , h. , brill , m. , conitzer , v. , elkind , e. , freeman , r. , walsh , t. , 2015 . justified representation in approval - based committee voting . in : proceedings of the 29th aaai conference on artificial intelligence ( aaai ) .",
    "aaai press , pp .",
    "784790 .",
    "aziz , h. , gaspers , s. , gudmundsson , j. , mackenzie , s. , mattei , n. , walsh , t. , 2015 .",
    "computational aspects of multi - winner approval voting . in : proceedings of the 14th international conference on autonomous agents and multi - agent systems ( aamas ) .",
    "ifaamas , pp . 107115 .",
    "brill , m. , freeman , r. , janson , s. , lackner , m. , 2017 .",
    "phragmn s voting methods and justified representation . in : proceedings of the 31st aaai conference on artificial intelligence ( aaai ) .",
    "aaai press , forthcoming .",
    "legrand , r. , markakis , e. , mehta , a. , 2007 . some results on approximating the minimax solution in approval voting .",
    "in : proceedings of the 6th international conference on autonomous agents and multi - agent systems ( aamas ) .",
    "ifaamas , pp . 11931195 .",
    "snchez - fernndez , l. , elkind , e. , lackner , m. , fernndez , n. , fisteus , j.  a. , basanta val , p. , skowron , p. , 2017 . proportional justified representation . in : proceedings of the 31st aaai conference on artificial intelligence ( aaai ) .",
    "aaai press , forthcoming .",
    "snchez - fernndez , l. , fernndez , n. , fisteus , j.  a. , basanta val , p. , 2016",
    "some notes on justified representation . in : proceedings of the 10th multidisciplinary workshop on advances in preference handling ( mpref ) ."
  ],
  "abstract_text": [
    "<S> we consider a committee voting setting in which each voter approves of a subset of candidates and based on the approvals , a target number of candidates are selected . </S>",
    "<S> aziz et al . ( 2015 ) proposed two representation axioms called justified representation and extended justified representation . whereas the former can be tested as well as achieved in polynomial time , </S>",
    "<S> the latter property is conp - complete to test and no polynomial - time algorithm is known to achieve it . interestingly , snchez - fernndez et  al . </S>",
    "<S> ( 2016 ) proposed an intermediate property called proportional justified representation that admits a polynomial - time algorithm to achieve . </S>",
    "<S> the complexity of testing proportional justified representation has remained an open problem . in this paper , we settle the complexity by proving that testing proportional justified representation is conp - complete . </S>",
    "<S> we complement the complexity result by showing that the problem admits efficient algorithms if any of the following parameters are bounded : ( 1 ) number of voters ( 2 ) number of candidates ( 3 ) maximum number of candidates approved by a voter ( 4 ) maximum number of voters approving a given candidate .    social choice theory , committee voting , multi - winner voting , approval voting , computational complexity + _ jel _ : c63 , c70 , c71 , and c78 </S>"
  ]
}
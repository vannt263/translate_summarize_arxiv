{
  "article_text": [
    "the boundary element method ( bem ) is popular in applied mechanics for solving problems governed by the equations of laplace , stokes , helmholtz and lam .",
    "applications include electrostatics , low - reynolds - number flow , acoustics and linear elasticity and span all scales from biomolecules , micro - electromechanical and biomedical devices to wind turbines , submarines and problems in aerospace and geodynamics .",
    "the key feature of bem  is formulating the governing partial differential equations in equivalent boundary integral equations , and discretizing over the boundaries .",
    "this process reduces the dimensionality of the problem ( three - dimensional problems are solved on two - dimensional surfaces ) , but generates dense systems of algebraic equations .",
    "the computational complexity of dense solvers , scaling as @xmath5 for direct methods and @xmath6 for iterative methods , frustrated large - scale applications of bem  until the late 1990s , when bem  researchers began working out how to incorporate fast algorithms @xcite .",
    "treecodes and fast multipole methods ( fmm ) reduce the complexity of bem  solutions to @xmath7 and @xmath8 , respectively , although often with serious programming effort .",
    "nevertheless , large - scale bem  simulations are now possible , especially given the parallel scalability of the fmm@xcite .",
    "accelerating bem  solutions with fmm  hinges on seeing the dense matrix - vector products done within each iteration of the linear solver , as @xmath9-body problems .",
    "gauss quadrature points on source panels and collocation points on target panels interact via the green s function of the governing equation , similar to how charges , particles or masses interact under electrostatic or gravitational potentials . in the same way",
    ", far - away sources can be clustered together and represented by series expansions to calculate their contribution on a target point with controllable accuracy . as a result ,",
    "the matrix - vector products are computed with some error . to ensure convergence of the iterative solver , or achieve a desired accuracy in the solution",
    ", we might require the order of the series expansions , @xmath0 , to be sufficiently large .",
    "but krylov methods have the surprising property of only requiring high accuracy on the first iteration , while accuracy requirements can be relaxed on later iterations .",
    "this property offers the opportunity to use different values of @xmath0 in the fmm  as the iterations progress to convergence , reducing the total time to solution .",
    "this paper presents a relaxation strategy for fast - multipole boundary element methods consisting of decreasing the orders of expansion @xmath0 as krylov iterations progress in the solver .",
    "we tested extensively using the laplace and stokes equations , and also with an application of stokes flow around red blood cells .",
    "the aim of the study was to show that a bem  solution with inexact krylov iterations converges , despite low - accuracy matrix - vector multiplications at later iterations , and to find out the speed - ups that can be obtained .",
    "we wrote an in - house multi - threaded code in c@xmath10  that enable experimenting in a variety of scenarios .",
    "to write the laplace equation , @xmath11 , in its integral formulation , we use the classical procedure of multiplying by the green s function and integrating , applying the divergence theorem of gauss and the chain rule , then dealing with singularities by a limiting process .",
    "this results in @xmath12    where @xmath13 is the free - space green s function for the laplace equation ( @xmath14 ) , @xmath15 represents the partial derivative in the direction normal to the boundary surface , and the ( cauchy principal - value ) integrals are on the boundary @xmath16 of the domain .",
    "( the details of the derivation can be found in ref .",
    "@xcite . ) the boundary element method ( bem ) consists of discretizing the boundary into surface panels and enforcing equation on a set of target points ( collocation version ) . in a typical bem ,",
    "surface panels take a constant value @xmath17 , and the surface integrals become sums over @xmath9 flat surface elements , @xmath18 , resulting in the following discretized equation : @xmath19    the values of the potential or its normal derivative on each panel are known from boundary conditions , resulting in either first - kind or second - kind integral equations . finding the remaining unknowns",
    "requires solving a system of linear equations @xmath20 , where the elements of the coefficient matrix are @xmath21    and @xmath22 is formed with the known terms : e.g. , if @xmath23 is given on panel @xmath24 , then @xmath25 will appear in the term @xmath26 on the right - hand side of the linear system .",
    "expressing @xmath27 and @xmath28 in terms of @xmath29 and @xmath30 @xmath31    the next steps are to apply an appropriate numerical integration scheme in order to generate all the terms of the coefficient matrix , and subsequently solve the linear system of equations , as described below .",
    "the stokes equation for a flow at very low reynolds number , @xmath32 ( where @xmath33 is the viscosity and @xmath0 the pressure ) , can be rewritten in its integral formulation by means of a similar process as that described above for the laplace equation .",
    "but it is a vector equation and its fundamental solutions are tensors .",
    "the boundary integral form of the the stokes equation is    @xmath34    where @xmath35 is the velocity vector satisfying the stokes equation ( einstein indicial summation implied ) , with @xmath36 the corresponding stress tensor and @xmath37 the traction , vectors @xmath38 and @xmath39 are two distinct points in the domain , and @xmath40 and @xmath41 are the stokeslet and stresslet fundamental solutions : @xmath42    @xmath43    indices @xmath44 denote here the cartesian - tensor components and @xmath45 is the kronecker delta . discretizing the boundary with @xmath9 surface panels results in sums that we now number with the index @xmath46 .",
    "the discretized form with constant surface panels becomes @xmath47      the boundary integral formulations all demand that we compute integrals of the type @xmath48 , where @xmath49 is the kernel , the point @xmath50 is on the panel surface @xmath18 and the point @xmath51 is a target or evaluation point .",
    "because the kernel @xmath52 is often singular , we need specific approaches depending on the distance @xmath53",
    ". where the target point is far enough from the surface @xmath18 , simple quadrature with a few gauss points will suffice .",
    "as the target point _ nears _ the source panel ( with the definition of `` near '' to be determined ) , we need high - accuracy quadrature .",
    "finally , in the case where the target point is on the source panel , the integral is ( close to ) singular and we must use analytical or semi - analytical methods .",
    "figure [ fig : integration_domain ] illustrates the three situations .    , where @xmath54 is the surface area of the source panel.,scaledwidth=45.0% ]    applying gauss quadrature to the integrals appearing in the coefficients of the boundary element discretization of the laplace equation , and , for example , gives @xmath55    with @xmath56 the area - normalized gauss quadrature weights and @xmath54 the surface area of panel @xmath18 . to control the accuracy of the numerical integration , we vary the number of quadrature points , using for example @xmath57 for targets that are far from the source panel and @xmath58 for near - singular situations .",
    "the near - singular region is within a distance of @xmath59 , a criterion that we settled on after testing with several choices using a panel s characteristic length scale as factor .",
    "when the target point is on the source panel , the standard approach is to use analytical or semi - analytical methods for the singular and hyper - singular integrals over the panels .",
    "for the laplace equation , we used a semi - analytical method .",
    "it applies the technique first presented in the classic work of hess and smith ( * ? ? ?",
    "* , ff . ) for decomposing the integral into a sum of integrals over triangles formed by the projection of the target point on the panel plane , and the panel vertices",
    ". using polar coordinates , the integration over the radial component can be done analytically and the integration over the angular component is done by quadrature .",
    "several analytic integration techniques are at our disposal for dealing with the singular integrals from boundary element methods .",
    "explicit expressions for these integrals over flat triangular domains result in recursive formulae on the edges of the integration triangle .",
    "these are available for laplace potentials @xcite and linear elastic surface potentials @xcite .",
    "we obtained the analytic integrals for the stokes equation from fata s formulas for linear elasticity , after setting the poisson ratio to @xmath60 .      for large linear systems of equations @xmath20 ,",
    "direct solution is generally impractical and iterative solution methods are preferred .",
    "krylov subspace methods derive from the cayley - hamilton theorem , which states that you can express the inverse of a matrix @xmath61 as a linear combination of its powers .",
    "a krylov subspace is spanned by the products of @xmath62 and powers of @xmath61 ; to order-@xmath63 , this is : @xmath64 .",
    "krylov methods include the conjugate gradient method , the biconjugate gradient stabilized method ( bicgstab ) and the generalized minimal residual method , gmres@xcite , which we use .",
    "the greatest cost per iteration is the matrix - vector product ( mat - vec ) , @xmath65 , taking @xmath66 time in a direct implementation .",
    "however , given the structure of the coefficient matrix in boundary element methods , this operation can be reduced to @xmath8 time using , for example , the fast multipole method .",
    "the key is understanding the matrix - vector product as an @xmath9-body problem .",
    "let s consider the first - kind integral problem for the laplace equation .",
    "in we see that the matrix coefficients are @xmath67 . applying gauss quadrature to obtain the coefficients",
    "thus , the matrix - vector product gives the following for row @xmath68 @xmath69    the inner sum is over the gauss quadrature points ( only a few per panel ) and the outer sum is over the integration panels .",
    "we list the pseudocode of the full mat - vec in the appendix as algorithm [ alg : matvec ] . taking all the quadrature points together as the set of `` sources '' and all the collocation points on the panels as the set of `` targets , ''",
    "the algorithm is reduced to two for - loops instead of three , making the analogy with an @xmath9-body problem more clear .",
    "fast multipole methods were invented to accelerate the solution of @xmath9-body problems , that is , problems seeking to determine the motion of @xmath9 bodies that interact with each other via a long - distance effect ( like electrostatics or gravitation ) .",
    "a direct approach to such a problem takes @xmath66 time to compute .",
    "the first _ fast _ algorithms for @xmath9-body problems @xcite combined two ideas : ( 1 ) approximating the effect of groups of distant bodies with a few moments ( of the charges or masses ) , and ( 2 ) using a hierarchical sub - division of space to determine the acceptable distances to apply these approximations .",
    "these ideas produced the treecode algorithm , with @xmath70 time to compute .",
    "the fast multipole method @xcite introduces a third key idea that leads to @xmath71 scaling : allowing groups of distant bodies to interact with _ groups _ of targets , by means of a mathematical representation called local expansion .",
    "a typical @xmath9-body problem evaluates a potential @xmath23 on @xmath72 bodies using the following expression @xmath73    where @xmath74 is referred to as the _ kernel _ , and the potential is a solution of an elliptic equation , e.g. , the poisson equation @xmath75 for gravitation .",
    "the expression in is analogous to that for one row of the bem  mat - vec in equation , taking all @xmath76 gauss points collectively .",
    "the first step in the fmm  acceleration of bem  is to group the gauss quadrature points ( i.e. , the `` sources '' ) into clusters , and represent their influence via multipole expansions at the cluster centers .",
    "if using taylor expansions , for example , truncated to the first @xmath0 terms , the potential at a point is approximated by @xmath77    where @xmath78 is a multi - index , @xmath79 , @xmath80 , @xmath81 is the derivative operator and @xmath0 is the order of the expansion .",
    "the right - most terms are the multipoles , i.e. , powers of distances with respect to the cluster center , and they can all be pre - calculated for a set of sources .",
    "forming the clusters consists of recursively sub - dividing the spatial domain until a limit number of sources @xmath82 remains in each box , resulting in an octree structure .",
    "the step of computing the multipole expansions for each source cluster at the deepest level of the tree is referred to as the particle - to - multipole operation , pm .",
    "these multipole expansions are then translated and added to represent larger clusters ( at higher levels of the tree ) in the multipole - to - multipole operation , mm .",
    "the process just described is called the _",
    "upward sweep_. at this point , a treecode algorithm evaluates the potential on target points , performing multipole - to - particle operations , mp  in the bem , the multipoles represent clusters of quadrature points and the potential is evaluated on collocation points , as illustrated in figure [ fig : rbc_fmmbox ] . as implied in equation , this is an approximation ; and as implied in figure [ fig : rbc_fmmbox ] , the approximation is acceptable for remote target points only .",
    "the parameter that dictates whether we make the approximation is the _",
    "multipole acceptance criterion _ , mac , denoted by @xmath83 and enforced as the maximum allowed ratio between cluster size and distance between targets and cluster center . when the mac  is not satisfied , sources and targets interact directly via ( called particle - to - particle operation , pp ) .",
    "the key to achieving the optimal @xmath71 scaling are local expansions , representing a group of target points ; thus , the fmm  adds three operations to the algorithm : the multipole - to - local transformation ( ml ) , the local - to - local translation ( ll ) and the local - to - particle evaluation ( lp ) .",
    "-body problem accelerated by the fast multipole method : gauss quadrature points in a region of the surface triangulation are grouped together in a cluster , and their contribution to the potential at a remote target point ( white circle ) is considered via a series expansion at the cluster center.,scaledwidth=50.0% ]    the cartesian - expansion ml  operation scales as @xmath84 , which quickly becomes expensive when requiring higher accuracy via higher @xmath0 .",
    "using spherical - harmonic expansions reduces this cost to @xmath85 , but the mathematical derivations and expressions become more cumbersome . for the sake of brevity ,",
    "we omit all the details and write the final form for the spherical expansions of the laplace potential  denoted here by @xmath86 to differentiate with the spherical co - ordinate @xmath23as follows    @xmath87    here , @xmath88 and @xmath89 denote the multipole and local expansion coefficients ; @xmath90 is the spherical harmonic function ; @xmath91 and @xmath92 are the distance vectors from the center of the expansion to points @xmath51 and @xmath50 , and @xmath93 are the weights of sources . for our purposes",
    ", we just want to make clear the parallel between a fast @xmath9-body algorithm and a fast bem  matrix - vector product via this necessarily abbreviated summary of the fmm .",
    "accelerating a bem  solution with fmm  implies computing the matrix - vector products with some error , and the parameter controlling this accuracy is the order of multipole expansions , @xmath0 .",
    "two natural questions to ask are how large does the value of @xmath0 need to be to ensure that the iterative solver will still converge and what s the impact on the accuracy of the converged solution due to the error on the computed mat - vec .",
    "we might expect to choose that value of @xmath0 that ensures convergence and desired accuracy , and apply it evenly for all iterations .",
    "but it turns out that krylov iterations have a surprising property : the _ first _ iteration needs to be computed with high accuracy , but accuracy requirements can be _ relaxed _ for later iterations .",
    "translation operators in the fmmcan scale as @xmath84 or @xmath85using cartesian or spherical expansions , respectively , so this property of krylov methods could offer the potential for further accelerating the bem  solution .",
    "bouras and frayss @xcite studied the effect of inexact krylov iterations on convergence and accuracy via numerical experiments .",
    "they found that if the system matrix is perturbed , so we are computing @xmath94 on each iteration , and the perturbation stays nearly equal in norm to @xmath95 , then the computed solution will have an error of the same order , @xmath96 .",
    "this is the situation when simply computing the mat - vec within the limits of machine precision .",
    "but they also showed the more surprising result that the magnitude of the perturbations @xmath97 can be allowed to grow as the iterations progress .",
    "they define a relaxation strategy whereby , for a desired final tolerance @xmath96 in the solution of the system , the mat - vecs in each iteration are computed with a coefficient matrix perturbed with @xmath97 , where if @xmath98 is the residual at step @xmath99 , @xmath100    the matrix perturbation is always larger than the target tolerance @xmath96 , and @xmath101 increases when @xmath98 decreases ( without surpassing @xmath102 ) . in other words ,",
    "the accuracy of the system mat - vecs are _ relaxed _ as iterations proceed .",
    "this relaxation strategy led to converged solutions with gmres , cg and bicgstab , using a variety of test matrices  often , and remarkably , in about the same number of iterations as a non - relaxed solution . in sum",
    ", krylov methods proved to be robust to inexact mat - vecs and only the first krylov vectors need to be computed accurately .",
    "the numerical evidence is also supported by theoretical studies @xcite .    in the fast multipole method",
    ", we have error bounds available for the approximations made in the various operations that make up the algorithm . using the spherical - harmonics expansion for the laplace kernel , for example",
    ", the error is bounded as follows @xmath103    where @xmath104 isthe cluster radius and @xmath63 is the distance between the multipole center and the target .",
    "the above inequality is given in ref .",
    "@xcite with label ( 3.38 ) , and proved using the triangle inequality .",
    "this reference also gives similar bounds for the translation and evaluation operators . in the particular case",
    "that @xmath105 ( the distance between a multipole center and target is at least twice the cluster radius ) , the number of terms needed to obtain a given accuracy @xmath106 is    @xmath107    in combination with equation , we thus have an explicit relation between the allowed perturbation on the mat - vec for the inexact krylov iterations to converge , and the order of the multipole expansion in the fmm .",
    "although the fmmerror bounds are known to be rather loose , we use this approach for a conservative relaxation of @xmath0 , and we expect that with experience and more detailed studies , the relaxation strategy could be pushed to give better speed - ups in specific applications .",
    "our results include numerical experiments with bem  solutions for the laplace and stokes equations , including an application to stokes flow around red blood cells .",
    "the bem  solver is accelerated with a fast multipole method using spherical expansions , implemented in a code designed to use boundary elements ( panels ) as the sources and targets , and written in multi - threaded c@xmath10 . to facilitate reproducibility of our research ,",
    "the code is made available via its version - control repository , under an mit license .",
    "the paper manuscript is also available via its repository , which includes running scripts and plotting scripts to produce the included figures ( see each figure caption for details ) .",
    "we ran all our tests on a lab workstation with an intel core i7 - 5930k hexa - core processor and 32 gb ram . using a test with the laplace kernel",
    ", we confirmed that our fmm  code scales as @xmath8 by timing several runs with increasing problem size ; see figure [ fig : fmm_scaling ] .",
    "we also found that the preconditioned cases take fewer iterations but more time to converge than the unpreconditioned ones , because the residuals after the first several iterations in the preconditioned cases are greater .",
    "for an inexact gmres iteration , a bigger residual leads to a higher required @xmath0 , which offsets the benefit of using fewer iterations .",
    "therefore , we performed these tests without preconditioning .",
    "the subsequent experiments investigate the use of a krylov relaxation strategy by reducing the order of multipole expansions , @xmath0 , as the iterations progress to convergence , determining the speed - up provided by such a strategy for different scenarios and problem sizes .      to start , we studied grid convergence comparing numerical results with the analytical solution using a sphere with constant potential and charge on the surface : @xmath108 . to make surface triangulations of a sphere with increasing refinement , we started with an 8-triangle closed surface , then split recursively each triangle into four smaller ones .",
    "figure [ fig : glob_spheres ] shows two example discretizations .",
    "we solved the boundary - element problem by collocation in both the first - kind and second - kind integral formulations , using a standard gmreswith fast - multipole - accelerated mat - vecs and the semi - analytical integrals for the singular terms .",
    "for the far - field approximations , we used spherical - harmonic expansions with the following parameters in the fmm : @xmath109 , @xmath110 ; the number of gauss points was @xmath111 and the tolerance in the iterative solver was @xmath112 .",
    "figure [ fig : laplaceconvergence ] shows the resulting convergence for both first - kind and second - kind formulations of the boundary element method on a sphere .",
    "the observed order of convergence is 0.76 for the 1st - kind formulation and 1.02 for the 2nd - kind formulation , computed with the three points in the middle of each line .",
    "we also observed that the finest mesh detracts from the convergence line with @xmath113 , as the thinner line shows in figure [ fig : laplaceconvergence ] ; in that case , the discretization error of a simple geometry like a sphere is very small and the error of the fmm - accelerated mat - vecs overtakes .",
    "this convergence analysis gives confidence in our bemcode , the singular / near - singular integral calculations , and the far - field approximation using the fmm .",
    ", @xmath114 , @xmath111 and solver tolerance of @xmath112 ( no relaxation ) . for the 1st - kind formulation",
    ", we also used @xmath113 ( thinner solid line ) to show a degradation of grid - convergence with lower @xmath0 .",
    "the vertical axis is the @xmath115-norm of the relative error with respect to the analytical solution for a constant potential or charge on the surface : @xmath108 . plotting script and figure available under cc - by @xcite.,scaledwidth=50.0% ]    next , we looked at the following test to see how the residual changes as the gmresiterations proceed and what value of @xmath0 is required in the fmm - accelerated mat - vecs to continue convergence , according to equation .",
    "we discretized a sphere with @xmath116 surface triangles and solved a first - kind integral equation using a solver tolerance of @xmath112 with an initial value of @xmath0 set to 8 and 12 .",
    "as the residual gets smaller , the value of @xmath0 needed to maintain convergence of the solver drops , and a low-@xmath0 of just 2 is sufficient by the ninth iteration for @xmath117 and by the fourth iteration for @xmath118 .",
    "this offers the potential for substantial speed - ups in the calculations , because the translation operators of the fmmscale from @xmath119 for spherical harmonics to @xmath120 for cartesian expansions . a more accurate first iteration results in a faster drop of required-@xmath0 and fewer iterations .",
    "but we note that only the far - field evaluation can be sped - up with the relaxation strategy , which means that the correct balance between near field and far field in the fmmcould change as we reset @xmath0 in the later iterations .",
    "triangles , with @xmath111 , @xmath121 ( left plot ) and @xmath122 ( right plot ) , the residual @xmath123 ( solid line , left axis ) decreases with successive gmresiterations while the necessary @xmath0 ( open circles , right axis ) to achieve convergence drops quickly .",
    "plotting script and figure available under cc - by @xcite.,scaledwidth=95.0% ]    to find out the potential speed - up , we compared the time to solution for different cases with and without the relaxation strategy . using three surface discretizations , we solved the boundary - element problem with 1st- and 2nd - kind formulations , with a multi - threaded evaluator on 6 cpu  cores . in each case , we were careful to set the value of @xmath82 to minimize the time to solution of the particular test case .",
    "the detailed results are given in tables [ tab : laplace_1st_relaxation ] and [ tab : laplace_2nd_relaxation ] .",
    "figure [ fig : relaxation_timing ] shows the speed - up in the time spent solving the linear system of equations to the specified tolerance .",
    "as indicated in the caption , we used an initial value of @xmath113 and a solver tolerance of @xmath112 .",
    "we also repeated the experiments with less stringent accuracy settings of @xmath124 , and solver tolerance @xmath125 . in that case , the speedups are reduced ( maximum observed speedup of 2.22 for the 1st - kind formulation ) , but we decided to show the higher accuracy tests , given the observed degradation of grid - convergence with lower @xmath0 , as seen in figure [ fig : laplaceconvergence ] .",
    "is the number of surface panels ) , using 1st - kind and 2nd - kind integral formulations .",
    "initial @xmath113 , @xmath111 , solver tolerance @xmath112 .",
    "time is measured by averaging the solving time of three identical runs .",
    "( multi - threaded evaluator running on 6 cpu  cores . ) plotting script and figure available under cc - by @xcite.,scaledwidth=45.0% ]    .speed - ups for the relaxation strategy on a laplace 1st - kind integral solver , @xmath113 , @xmath111 , solver tolerance @xmath112 . [ cols=\"^,^,^,^,^,^,^ \" , ]     c|c|c|cc|cc|c + & & & & + n & # unknowns & @xmath126 & @xmath82 & @xmath127 & @xmath82 & @xmath127 & speedup + & & & & & & & + 2048 & 6144 & 1 & 400 & 48.18 & 150 & 14.61 & 3.30 + 8192 & 24576 & 4 & 400 & 267.64 & 100 & 87.20 & 3.07 + 32768 & 98304 & 16 & 400 & 1358.07 & 100 & 444.55 & 3.05 + 131072 & 393216 & 64 & 200 & 7077.77 & 100 & 1481.47 & 4.78 +    c|c|c|cc|cc|c + & & & & + n & # unknowns & @xmath126 & @xmath82 & @xmath127 & @xmath82 & @xmath127 & speedup + & & & & & & & + 8192 & 24576 & 1 & 400 & 234.44 & 100 & 69.03 & 3.40 + 32768 & 98304 & 4 & 400 & 1494.37 & 100 & 371.06 & 4.03 + 131072 & 393216 & 16 & 150 & 12817.01 & 100 & 1800.53 & 7.12 +    c|c|c|cc|cc|c + & & & & + n & # unknowns & @xmath126 & @xmath82 & @xmath127 & @xmath82 & @xmath127 & speedup + & & & & & & & + 32768 & 98304 & 1 & 400 & 978.80 & 100 & 276.52 & 3.54 + 131072 & 393216 & 4 & 200 & 7209.57 & 100 & 1397.27 & 5.16 +    .",
    "time is measured by averaging the solving time of three identical runs.,scaledwidth=55.0% ]      our inexact gmrescode is open - source and available on github .",
    "knowing the increasing importance of computational reproducibility , we provided the ",
    "_ reproducibility package _ \"  containing the running and post - processing scripts  to generate the figures in this result section . to save readers from potential headaches of dependency mismatches",
    ", we also prepared a dockerfile to setup up the software environment ( a docker container ) , under which the  _ reproducibility package _ \"",
    "can be used to replicate our results .",
    "we have shown the first successful application of a relaxation strategy for fast - multipole - accelerated boundary element methods , based on the theory of inexact gmres . testing the relaxation strategy on laplace problems",
    ", we confirmed that it converges to the right solution , it provides moderate speed - ups over using a fixed @xmath0 , and it leads to initially bloated far - fields to obtain the minimum time to solution . exploring the performance advantage of relaxing the value of @xmath0 as gmresiterations advance , we concluded that problems requiring high accuracy and/or resulting in more ill - conditioned linear systems will experience the best speed - ups , which for laplace problems were between @xmath1 and @xmath2 in our tests on a sphere with constant potential .    in the case of the stokes equation ,",
    "the speed - ups that can be obtained using a relaxation strategy are larger , due to the fact that stokes problems require both more iterations to converge ( and the relaxed solver spends more time at low @xmath0 ) and more work per iteration ( equivalent to four laplace evaluations ) .",
    "we found that it s important for stokes problems to also enforce a minimum value of @xmath0 to avoid accuracy or convergence degradation .",
    "relaxed gmresiterations in this case reduced the time to solution by up to @xmath128 in tests of stokes flow around a sphere .",
    "we completed various tests for stokes flow around red blood cells , with up to 64 cells .",
    "we studied numerical convergence in this situation using richardson extrapolation and obtained an observed order of convergence of @xmath129 , close to the expected value of @xmath60 .",
    "the speed - ups resulting from the relaxation strategy in these tests were in most cases close to @xmath130 .",
    "relaxing the truncation order @xmath0 in the multipole expansions as krylov iterations progress is one of those seemingly simple ideas that strike one as obvious a posteriori . yet , as far as we know , it has not been tried before , nor has it been implemented in a bem . given this method s wide popularity in computational engineering , we look forward to many applications benefitting from healthy speed - ups from applying relaxed-@xmath0 fmm .",
    "we showed that stokes problems , in particular , can expect @xmath130 speed - ups in large problems still fitting on one workstation .",
    "linear elasticity problems should experience similar speed - ups ( although we did nt try them ) .",
    "this is pure algorithmic speed - up that should multiply with any hardware speed - ups obtained , for example , by moving computational kernels to gpus .",
    "initialize @xmath131 @xmath132 @xmath133",
    "this work was supported by the national science foundation via nsf career award oci-1149784 .",
    "lab also acknowledges support from nvidia corp .  via the cuda fellows program .",
    "cris cecka ( previously at harvard university , currently at nvidia corp . ) contributed to the development of the code , particularly writing the octree and base evaluator .",
    "he later continued developing his fast - multipole framework , which evolved into his fmmtl project ; see https://github.com/ccecka/fmmtl .",
    "the authors also wish to acknowledge valuable interactions with dr .",
    "christopher cooper ( previously at boston university , currently at universidad tcnica federico santa mara ) that helped with the implementation of the boundary element method .",
    "10 url # 1`#1`urlprefixhref # 1#2#2 # 1#1    y.  liu , n.  nishimura , the fast multipole boundary element method for potential problems : a tutorial , engineering analysis with boundary elements 30  ( 5 ) ( 2006 ) 371381 .",
    "http://dx.doi.org/10.1016/j.enganabound.2005.11.006 [ ] .",
    "r.  yokota , j.  p. bardhan , m.  g. knepley , l.  a. barba , t.  hamada , biomolecular electrostatics using a fast multipole bem on up to 512 gpus and a billion unknowns , comput .",
    "comm . 182  ( 6 ) ( 2011 ) 12711283 . http://dx.doi.org/10.1016/j.cpc.2011.02.013 [ ] .",
    "r.  yokota , l.  a. barba , a tuned and scalable fast multipole method as a preeminent algorithm for exascale systems , int .",
    "j.  high - perf .",
    "applic.published online 24 jan .",
    "2012 http://doi.org/fzgqgm[doi:10.1177/1094342011429952 ] preprint on http://arxiv.org/abs/1106.2176 .",
    "d.  a. fedosov , b.  caswell , s.  suresh , g.  e. karniadakis , http://www.pnas.org/content/108/1/35.abstract[quantifying the biophysical characteristics of plasmodium - falciparum - parasitized red blood cells in microcirculation ] , proc .",
    "108  ( 1 ) ( 2011 ) 3539 . http://arxiv.org/abs/http://www.pnas.org/content/108/1/35.full.pdf [ ] , http://dx.doi.org/10.1073/pnas.1009492108 [ ] . http://www.pnas.org/content/108/1/35.abstract"
  ],
  "abstract_text": [
    "<S> boundary element methods produce dense linear systems that can be accelerated via multipole expansions . solved with krylov methods , this implies computing the matrix - vector products within each iteration with some error , at an accuracy controlled by the order of the expansion , @xmath0 . </S>",
    "<S> we take advantage of a unique property of krylov iterations that allow lower accuracy of the matrix - vector products as convergence proceeds , and propose a relaxation strategy based on progressively decreasing @xmath0 . in extensive numerical tests of the relaxed krylov iterations </S>",
    "<S> , we obtained speed - ups of between @xmath1 and @xmath2 for laplace problems and between @xmath3 and @xmath4 for stokes problems . </S>",
    "<S> we include an application to stokes flow around red blood cells , computing with up to 64 cells and problem size up to 131k boundary elements and nearly 400k unknowns . </S>",
    "<S> the study was done with an in - house multi - threaded c++ code , on a hexa - core cpu . </S>",
    "<S> the code is available on its version - control repository , https://github.com/barbagroup/fmm-bem-relaxed .    </S>",
    "<S> laplace equation , stokes equation , boundary integral equation , boundary element method , fast multipole method , iterative solvers , krylov methods , stokes flow </S>"
  ]
}
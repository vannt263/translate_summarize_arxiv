{
  "article_text": [
    "the recently proposed path following and extended path following algorithms exhibited state - of - the - art performances @xcite on equal - sized graph matching problems . as a typical np - hard problem , equal - sized ( with size @xmath0 ) graph matching under the one - to - one constraint can be formulated as follows , @xmath1 where @xmath2 denotes the set of ( @xmath3 ) permutation matrices , @xmath4 is given later by ( [ subgm - obj ] ) or ( [ gm_obj ] ) . by relaxing @xmath2 to its convex hull , i.e. , the set of ( @xmath3 ) doubly stochastic matrices denoted by @xmath5 , the ( extended ) path following algorithm proposed the convex and concave relaxation procedure ( ccrp ) formulated by a weighted linear combination of a convex relaxation @xmath6 and a concave relaxation @xmath7 of @xmath4 as follows @xcite , @xmath8 in implementation , @xmath9 increases gradually from 0 to 1 , making @xmath10 become gradually from @xmath6 to @xmath7 , whose minima locate exactly in @xmath2 .",
    "similar to the graduated nonconvexity @xcite algorithm , the ( extended ) path following is a deterministic annealing method which usually finds a good suboptimal solution , but at a much less computational cost than stochastic simulated annealing techniques . as a state - of - the - art optimization algorithm ,",
    "the ( extended ) path following showed superior performance but has difficulties in finding convex or concave relaxation , which thus greatly hinders its practical applications .",
    "for instance , neither the convex nor concave relaxation proposed by ( extended ) path following @xcite on equal - sized graph matching is applicable on the subgraph matching defined on the set of partial permutation matrices .",
    "in this paper we will propose the graduated nonconvexity and graduated concavity procedure ( gncgcp ) to equivalently realize the ccrp in ( [ ccrp ] ) on _ partial _ permutation matrix ( with permutation matrix as a special case ) , but in a much simpler way without involving the convex or concave relaxation explicitly .",
    "actually , gncgcp needs only the gradient of the objective function , making it very easy to use in practical applications .",
    "two case studies on ( sub)graph matching and quadratic assignment problem ( qap ) witness the simplicity and state - of - the - art performance of gncgcp .",
    "the gncgcp is proposed in the next section , followed by the ( sub)graph matching and qap problems discussed in sections [ s3 ] and [ s4 ] respectively , and finally section [ s5 ] concludes this paper .",
    "in this paper we consider the optimizations on the set of ( @xmath11 ) partial permutation matrices @xmath12 as , @xmath13 such a formulation covers a wide range of important problems , such as correspondence , assignment , matching , and traveling salesman problem ( tsp ) .",
    "specific to graph matching , it defines a subgraph matching problem where each node in the smaller graph has to match exactly one node in the bigger one , and each node in the bigger graph can match at most one node in the smaller one .",
    "it obviously includes ( [ eqn_gm ] ) as a special case when @xmath14 .    to approximate the integer program ( [ oriobj ] ) by a relaxation technique , @xmath12 is firstly relaxed to its convex hull , i.e. , the set of ( @xmath11 ) _ doubly sub - stochastic matrices",
    "_ @xmath15 @xcite , @xmath16 then , we propose the graduated nonconvexity and graduated concavity procedure ( gncgcp ) to approximately solve it as follows , @xmath17 in gncgcp , @xmath18 decreases gradually from 1 to -1 , implying that the objective function @xmath19 becomes gradually from @xmath20 to @xmath4 ( graduated nonconvexity ) and finally to @xmath21 ( graduated concavity ) . for each currently fixed @xmath18 ,",
    "@xmath19 is minimized by the frank - wolfe algorithm @xcite , using the minimum of the previous @xmath19 as the starting point . here and hereafter , @xmath4 is assumed to be neither convex nor concave , or otherwise , ( [ gncgcp ] ) is further simplified accordingly .",
    "that is , the equation on @xmath22 ( @xmath23 ) is removed in case @xmath4 itself is convex ( concave ) .",
    "@xmath24    @xmath25    @xmath26    @xmath27    @xmath28    [ euclidendwhile ]    * return * @xmath29    the algorithmic framework of gncgcp is given by the algorithm in figure [ gncgcpalg ] . in the algorithm , the gradient @xmath30 takes the form @xmath31 the linear program @xmath32 can be solved by the non - square hungarian algorithm @xcite , and line search @xmath33 can be efficiently solved by the backtracking algorithm @xcite .",
    "the convergence of @xmath29 is confirmed by checking whether @xmath34 once @xmath29 becomes discrete , the algorithm is terminated , even if @xmath18 has not reached -1 .    without considering sparsity ( of the adjacency matrix ) ,",
    "storage complexity of the algorithm is @xmath35 , and the computational complexity is roughly @xmath36 resulting from matrix multiplication .",
    "both complexities are comparable with those of the ( extended ) path following algorithm @xcite .",
    "[ theorem1 ] gncgcp ( [ gncgcp ] ) realizes a convex and concave relaxations procedure ( [ ccrp ] ) , with the convex and concave relaxations respectively given by @xmath37 where @xmath38 denotes the unit matrix consisting of all 1s , @xmath39 and @xmath40 denote the minimal and maximal eigenvlaues of the hessian matrix of @xmath4 , respectively .",
    "to prove theorem [ theorem1 ] , we derive @xmath19 by adding a constant @xmath41 as follows , @xmath42 = \\arg\\min_\\mathbf{x } \\left[f_{\\zeta}(\\mathbf{x } ) -\\zeta\\mathrm{tr}\\mathbf{jx } \\right ] , \\mathbf{x}\\in\\omega.\\end{aligned}\\ ] ] therefore , @xmath19 can be equivalently rewritten by @xmath43 as @xmath44 to prove that ( [ gncgcp2 ] ) realizes exactly a ccrp , two propositions were firstly given as follows .",
    "[ propo1 ] there always exists a @xmath45 making @xmath43 convex as @xmath46 , where @xmath39 denotes the smallest eigenvalue of the hessian matrix @xmath47 of @xmath4 .",
    "_ proof : _ the hessian matrix @xmath48 of @xmath43 takes the form @xmath49 . to make @xmath48 positive definite",
    ", @xmath18 should satisfy @xmath50 . as @xmath4 is neither convex nor concave ,",
    "@xmath39 is a negative number , which makes @xmath51 .",
    "thus , choosing @xmath52 , any @xmath18 satisfying @xmath46 will make @xmath48 positive definite and consequently @xmath43 convex.@xmath53    [ propo2 ] there always exists a @xmath54 making @xmath43 concave as @xmath55 , where @xmath40 denotes the biggest eigenvalue of the hessian matrix of @xmath4 .    _",
    "proof : _ the proof can be accomplished in a similar way as that of proposition [ propo1].@xmath53    then , based on the above two propositions , we get the following two lemmas .    [ lemma1 ] the value range @xmath56 in ( [ gncgcp2 ] ) can be equivalently shrunk to @xmath57 with @xmath58 given by proposition [ propo1 ] .",
    "_ proof : _",
    "@xmath59 is a convex function , whose global minimum is obtainable without depending on the previous results gotten on @xmath60 .",
    "thus , the value range of @xmath56 can be equivalently shrunk to @xmath57 for ( [ gncgcp2]).@xmath53    [ lemma2 ] the value range @xmath61 in ( [ gncgcp2 ] ) can be equivalently shrunk to @xmath62 with @xmath63 given by proposition [ propo2 ] .",
    "_ proof : _",
    "@xmath64 is a concave function , implying that minimization of @xmath64 will result in a discrete solution @xmath65 .",
    "as @xmath18 decreases further from @xmath63 to @xmath66 , @xmath67 will keep unchanged because it remains to be a local minimum of @xmath43 .",
    "thus , the value range of @xmath61 can be equivalently shrunk to @xmath62 for ( [ gncgcp2]).@xmath53 + _ comments : _ actually , once @xmath18 reaches @xmath63 , the gncgcp will terminate according to the algorithm in figure [ gncgcpalg ] .",
    "therefore , lemma [ lemma2 ] holds naturally in the context of gncgcp .    finally , we prove theorem [ theorem1 ]",
    ".    _ proof of theorem [ theorem1 ] : _ based on lemmas [ lemma1 ] and [ lemma2 ] , @xmath43 in ( [ gncgcp2 ] ) ( or @xmath19 in ( [ gncgcp ] ) ) is equivalently rewritten as @xmath68 then , for each fixed @xmath18 , @xmath43 is normalized by a constant @xmath69 or @xmath70 , making @xmath71 or equivalently , @xmath72 where @xmath39 and @xmath40 are defined in propositions [ propo1 ] and [ propo2 ] , respectively .    on the other hand , based on the convex and concave relaxations given by ( [ covrelax1 ] ) ,",
    "a ccrp is constructed as follows , @xmath73\\mathrm{tr}\\left(\\mathbf{x}^{\\top}\\mathbf{x}-\\mathbf{jx}\\right).\\ ] ] by defining @xmath74 , @xmath10 above can be equivalently written as @xmath75 exact ( [ gncgcp3 ] ) ! therefore",
    ", the gncgcp realizes a ccrp with the convex and concave relaxations given by ( [ covrelax1]).@xmath53    it is worth discussing the case of @xmath4 being non - quadratic ( such as a quartic function like ( [ subgm - obj ] ) ) where @xmath39 and @xmath40 are in general dependent on @xmath29 .",
    "if @xmath29 is unconstrained / unbounded , @xmath39 and @xmath40 might become @xmath76 and @xmath77 respectively , implying that any @xmath78 will result in @xmath79 neither convex nor concave ( see propositions [ propo1 ] and [ propo2 ] ) .",
    "fortunately , because @xmath29 here is constrained as a doubly sub - stochastic matrix , i.e. , each element is bounded by @xmath80 , both @xmath39 and @xmath40 must be some finite numbers , meaning that we can always get a convex relaxation by some @xmath81 and a concave relaxation by some @xmath82 .",
    "the point here is that gncgcp does not need to figure out the number ( @xmath83 or corresponding @xmath18 ) explicitly , which is realized in an implicit way .",
    "a simple illustration of the convex and concave relaxations in ( [ covrelax1 ] ) is shown in figure [ fig : convergence ] ( the sub - figure on the left - hand side ) .    [",
    ".5 ]      basically , without involving convex or concave relaxation explicitly , gncgcp provides a very simple way to construct a ccrp algorithm ; by contrast , the problem specific relaxation is typically difficult to construct .",
    "a typical example is the complicated concave relaxations used by ( e)path @xcite , which are applicable only on equal - sized graph matching .",
    "similarly , it is also usually difficult to calculate @xmath40 or @xmath39 in ( [ covrelax1 ] ) , especially on non - quadratic functions .",
    "another interesting difference between gncgcp and ccrp lies in the construction of relaxation functions .",
    "a convex or concave relaxation will certainly reshape the original relaxed function when @xmath84 or @xmath85 . by introducing the simple quadratic function @xmath86",
    ", gncgcp reshapes the relaxed function in a symmetric way , and meanwhile , as @xmath87 , gncgcp approaches the original relaxed function .",
    "by contrast , other types of relaxations in general have no chance to directly optimize it .",
    "this is probably the main reason gncgcp exhibited a better or at least a no worse performance than some other types of ccrp , especially on the qap discussed in section [ s4 ] .",
    "a simple comparison between the convergence of ccrp and gncgcp is given by figure [ fig : convergence ] , where it is observed that ccrp starts with a convex relaxation and ends with a concave relaxation but gncgcp starts with @xmath20 and ends with @xmath21 , with the convex and concave relaxations realized implicitly during the process ( see lemmas [ lemma1 ] and [ lemma2 ] ) .",
    "based on the gncgcp algorithm in figure [ gncgcpalg ] , to utilize gncgcp the only thing we need to do is to find the gradient of the objective function .",
    "thus , any optimization problems on @xmath12 with a differentiable objective function can be directly approximated by gncgcp .",
    "below we use ( sub)graph matching and quadratic assignment problem to demonstrate this simple process .",
    "( sub)graph matching as a fundamental problem in theoretical computer science finds wide applications in computer vision and machine learning @xcite . given two graphs @xmath88 and @xmath89 to be matched , the ( sub)graph matching problem is formulated as follows , @xmath90 where @xmath91 and @xmath92 denote the adjacency matrices of @xmath89 and @xmath88 , respectively , and @xmath93 . to use gncgcp to approximate it ,",
    "we need just to relax @xmath12 to @xmath15 and find @xmath94 as , @xmath95 below we denote by gncgcp_sgm the above ( sub)graph matching algorithm , which is applicable on both equal - sized and subgraph matching problems , and is applicable on any types of graph provided that it can be represented by an adjacency matrix .    in case",
    "the two graphs take exactly the same size @xmath0 which implies that @xmath12 degenerates to @xmath2 , the objective function in ( [ subgm - obj ] ) can be derived as @xcite , @xmath96 then , by relaxing @xmath2 to @xmath5 , gnggcp is implementable by finding @xmath97 because @xmath4 with @xmath98 in ( [ gm_obj ] ) itself becomes a convex function , gncgcp is further simplified by removing the equation on @xmath22 , that is , @xmath18 needs just to decrease from @xmath99 to @xmath66 but not @xmath100 to @xmath66 .",
    "the algorithm is denoted by gncgcp_gm , which is closely related to the path following @xcite ( on undirected graph ) and extended path following @xcite algorithms , with the same convex relaxation but a different concave relaxation .",
    "both synthetic and real data were employed to evaluate the gncgcp algorithms .",
    "on equal - sized graph matching , six algorithms including 1 : ) umeyama s spectral decomposition ( u for short ) @xcite , 2 : ) graduated assignment ( ga ) @xcite , 3 : ) path following algorithm ( path , for undirected graph only ) @xcite , 4 : ) extended path following ( epath , for directed graph only ) @xcite , 5 : ) gncgcp_sgm , and 6 : ) gncgcp_gm were experimentally compared . considering space limit we are not to compare their complexities in detail .",
    "actually , in all the following experiments , the time - cost of gncgcp is comparable with that of ( e)path .    on subgraph matching , four algorithms including gncgcp_sgm , ga , spectral relaxation matching ( sm for short ) @xcite , and probabilistic spectral matching ( psm ) @xcite",
    "were experimentally compared .",
    "all of the algorithms were implemented by matlab , and for gncgcp_sgm , gncgcp_gm and ( e)path , the same parameter settings were used as follows : the learning step @xmath101 and the stopping parameter @xmath102 in ( [ convergecond ] ) .",
    "synthetic graphs were generated according to three options :    * directed ( abbreviated by d ) or undirected ( u ) ; * * degree * distribution : a binomial ( b)(@xmath103 ( with @xmath104 ) or a power ( p ) ( @xmath105 ) law ( scale - free graph with a fixed @xmath106 in all of the experiments ) ; * * weight * distribution : a standard log - normal ( l ) ( @xmath107 ) or absolute normal ( n)(@xmath108 ) .",
    "therefore , there are totally eight types of graphs , each of which is abbreviated by a sequential three - character notation . for instance",
    ", dbl denotes the directed graphs with a binomial degree distribution and a log - normal weight distribution .",
    "two experiments were conducted on equal - sized graphs , with the first one to evaluate the noise resistance ability of the algorithms , and the second one to evaluate their scalabilities with respect to graph size . in the first experiment ,",
    "the graph size @xmath0 was fixed at 8 , and for each graph pair , @xmath89 was generated by adding @xmath109 edges into @xmath88 , where @xmath110 denotes the number of edges of @xmath88 , and @xmath111 is the parameter that controls the noise level . in the experiment @xmath111 was increased from 0 to 1 by a step size @xmath112 , and on each noise level , 50 graph pairs were randomly generated .",
    "the experimental results on the eight types of graphs are shown in figure [ fig : similar ] , where opt denotes the optimal result obtained by an exhaustive search .",
    "[ .5 ]    in the second experiment , 10 groups of graph pairs were generated for each of the eight types , with the graph size increasing from 5 to 50 by a step size 5 .",
    "for each group 50 graph pairs were randomly generated in the same way as the first experiment with a fixed noise level 0.2 .",
    "the experimental results are shown in figure [ fig : scale ] .",
    "[ .5 ]    two observations could be summarized from the above experimental results .",
    "first , ( e)path , gncgcp_gm and gncgcp_sgm outperformed significantly u and ga .",
    "this witnessed the superiority of ccrp and also gncgcp .",
    "second , gncgcp_sgm exhibited a slightly better or at least a no worse performance than gncgcp_gm and ( e)path ( see for instance upl and dpl in figure [ fig : scale ] ) , and meanwhile gncgcp_gm exhibited a comparable performance with ( e)path , echoed by the discussions in section [ sec_discussion ] .",
    "[ .5 ]    on subgraph matching , @xmath88 and @xmath89 were generated in the following way .",
    "the bigger graph @xmath88 with @xmath113 was firstly randomly generated , then a smaller graph @xmath114 with @xmath115 was randomly extracted out from @xmath88 , and finally @xmath89 was generated by adding some noises to @xmath114 in the same manner as the first experiment by setting @xmath116 .",
    "the experimental results are shown in figure [ fig : subgraph ] , where gncgcp_sgm achieved the best performance on all of the eight types of graphs .",
    "the real data experiments were conducted on the 6 _ eiffel _ and 6 _ revolver _ samples shown in figure [ fig : realdata ] , which were fetched from the caltech-256 database @xcite .",
    "the first one and first five leftmost samples of _ eiffel _ and _ revolver _ in figure [ fig : realdata ] were chosen as the model samples to match the rest five and one samples , respectively .",
    "total 35 and 20 feature points ( typically corner points ) were marked manually for the _ eiffel _ and _ revolver _ models respectively , and all of the points are linked each other to construct their undirected graph representation .",
    "the edge attribute comprises two parts , i.e. , the normalized @xmath117 and @xmath118 , and the unary term or appearance cue was not incorporated into the model .    the equal - sized graph matching results are shown in figure [ fig : realresults ] ( the upper row ) , including both the matching error and summed number of correct matchings ( whole numbers are 175 and 100 for _ eiffel _ and _ revolver _ respectively ) , and some typical matchings are shown in figure [ fig : subfig ] ( the upper row ) .",
    "it is observed that on _ eiffel _ gncgcp_sgm got slightly better results , and on _ revolver _ all the four algorithms got quite good results , with the number of correct matchings being 100 , 100 , 98 , and 100 respectively .",
    "we then conducted subgraph matching on the data , by taking the one _ eiffel _ and five _ revolver _ model samples as smaller models , and randomly adding some outlier points to the rest samples to get the larger one .",
    "the algorithms were evaluated on five levels of the number of added outliers , i.e. , 4 , 8 , 12 , 16 , and 20 respectively .",
    "the experimental results are shown in figure [ fig : realresults ] ( the lower row ) , and some typical results by adding 12 outliers are shown in figure [ fig : subfig ] ( the lower row )",
    ". we can observe that gncgcp_gcp got the best results on both criterions , and meanwhile , though the performance became in general worse as the number of outliers became bigger , the decline of gncgcp_sgm was the slowest one .",
    "[ 1 ]    [ .35 ]",
    "the quadratic assignment problem ( qap ) is a well - known combinatorial optimization problem in operations research and discrete optimization @xcite , and is closely related to the equal - sized graph matching problem . given two equal - sized matrices @xmath119 , and without considering the linear term , qap formally takes the following form , @xmath120 by relaxing @xmath2 to @xmath5 , the gncgcp is applicable by finding @xmath121 the algorithm is denoted by gncgcp_qap .",
    "gncgcp_qap was compared with path and epath on both the symmetric and asymmetric qaplib benchmark datasets @xcite used respectively in @xcite and @xcite .",
    "gncgcp_sgm and gncgcp_gm were also included in the experiments .",
    "the parameter settings of different algorithms were the same as those in the previous ( sub)graph matching experiments .",
    "the experimental results are listed in tables [ tab : tab_sym ] and [ tab : tab_asym ] respectively , where the results except for the three types of gncgcp algorithms are directly fetched from @xcite and @xcite respectively , opt denotes the currently known best result , and for each algorithm , awar(%) ( average wrong assignment ratio ) = @xmath122 indicates its average deviation from opt .",
    "[ htb ]    .comparative results on some symmetric qaplib benchmark data sets .",
    "[ cols=\">,^,^,^,^,^,^,^,^\",options=\"header \" , ]      +    it is observed that gncgcp_qap exhibited the best performance .",
    "specifically , it achieved the best results on 27 out of the 31 datasets , and in average , gncgcp_qap outperformed all of the competitors on both the symmetric and asymmetric datasets .",
    "it is also interesting to observe that gncgcp_sgm outperformed ( or achieved the same best results on some asymmetric datasets ) both ( e)path and gncgcp_gm on all of the 31 datasets .",
    "actually , by setting @xmath123 and @xmath124 , to utilize gncgcp_sgm to solve ( [ eqn_qap ] ) , one needs to add the term @xmath125 into ( [ subgm - obj ] ) to get ( [ eqn_qap ] ) .",
    "similarly , the term @xmath126 has to be added into ( [ gm_obj ] ) to get ( [ eqn_qap ] ) .",
    "both @xmath127 and @xmath128 become constant when @xmath129 , implying that all of the gncgcp_sgm , gncgcp_gm and ( e)path implement a ccrp algorithm to solve qap .",
    "but when @xmath98 , @xmath127 and @xmath128 will certainly reshape or provide some biases on the original relaxed function ; as discussed in section [ sec_discussion ] , this is probably the main reason gncgcp_qap achieved the best results .",
    "meanwhile , it seems that @xmath127 which involves only @xmath130 has less impact than @xmath128 which involves both @xmath131 and @xmath130 , and therefore gncgcp_sgm achieved better results than both ( e)path and gncgcp_gm .",
    "the gncgcp is proposed as a general optimization framework for the discrete optimization problems on the set of partial permutation matrices , including a wide range of classic discrete optimization problems as its special cases , matching , assignment , and traveling salesman problem ( tsp ) , to name a few .",
    "gncgcp has its root in the ccrp , but it does not need to figure out the convex or concave relaxation explicitly , and is thus very easy to use in practical applications . two case studies on ( sub)graph matching and qap witness the simplicity as well as state - of - the - art performance of gncgcp ."
  ],
  "abstract_text": [
    "<S> in this paper we propose the graduated nonconvexity and graduated concavity procedure ( gncgcp ) as a general optimization framework to approximately solve the combinatorial optimization problems on the set of partial permutation matrices . </S>",
    "<S> gncgcp comprises two sub - procedures , graduated nonconvexity ( gnc ) which realizes a convex relaxation and graduated concavity ( gc ) which realizes a concave relaxation . </S>",
    "<S> it is proved that gncgcp realizes exactly a type of convex - concave relaxation procedure ( ccrp ) , but with a much simpler formulation without needing convex or concave relaxation in an explicit way . </S>",
    "<S> actually , gncgcp involves only the gradient of the objective function and is therefore very easy to use in practical applications . </S>",
    "<S> two typical np - hard problems , ( sub)graph matching and quadratic assignment problem ( qap ) , are employed to demonstrate its simplicity and state - of - the - art performance .    </S>",
    "<S> combinatorial optimization , graduated optimization , deterministic annealing , subgraph matching , quadratic assignment problem </S>"
  ]
}
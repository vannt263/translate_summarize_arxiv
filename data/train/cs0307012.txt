{
  "article_text": [
    "an _ ad hoc network _ is a group of wireless mobile computers ( or nodes ) , in which nodes cooperate by forwarding packets for each other to allow them to communicate beyond direct wireless transmission range .",
    "ad hoc networks require no centralized administration or fixed network infrastructure such as base stations or access points , and can be quickly and inexpensively set up as needed .",
    "they can be used in scenarios in which no infrastructure exists , or in which the existing infrastructure does not meet application requirements for reasons such as security or cost .",
    "so far , applications of mobile ad hoc networks have been envisioned mainly for crisis solutions ( e.g. , in the battlefield or in rescue operations ) . in these applications ,",
    "all the nodes of the network belong to a single authority ( e.g. a single military unit or a rescue team ) and have a common goal . for this reason , the nodes are naturally motivated to cooperate .    with the progress of technology , however , it is becoming possible to deploy mobile ad hoc networks for civilian applications as well .",
    "examples include networks of cars , provision of communication facilities in remote areas , and exploiting the density in urban areas of existing nodes such as cellular telephones to offload or otherwise avoid using base stations . in these networks",
    ", the nodes may not belong to a single authority and they do not pursue a common goal .",
    "in addition , these networks could be larger , have a longer lifetime , and they could be completely _ self - organizing _ , meaning that the network could be run solely by the operation of the end - users . in such networks , there is no good reason to assume that the nodes cooperate .",
    "indeed , the contrary is true : some nodes may be disruptive and others may attempt to save resources ( e.g. battery power , memory , cpu cycles ) through `` selfish '' behavior .",
    "in this paper we describe ocean , in which we focus on the robustness of packet forwarding : maintaining the overall packet throughput of an ad hoc network in the face of nodes that misbehave at the routing layer .",
    "we concentrate our efforts at the routing layer and do not attempt to address attacks at lower layers ( eg . jamming the network channel ) or passive attacks like eaves - dropping .",
    "we also do not deal ( much ) with issues like node authentication , securing routes , or message encryption . instead",
    ", secure routing protocols @xcite,@xcite,@xcite,@xcite are designed to combat those threats .",
    "ocean addresses an orthogonal issue  the encouragement of proper routing participation  and can be used in addition to secure routing protocols to respond to a more complete threat model .",
    "we also do not consider the collusion of nodes in a network , but merely the individual bad behavior of nodes .",
    "ocean considers two types of routing misbehavior .",
    "the first , which we call _ misleading _ , is that a node may respond positively to route requests but then fail to forward the actual packets , misleading other nodes into unsuccessfully sending their traffic through it .",
    "previous approaches at mitigating misleading routing misbehavior @xcite,@xcite,@xcite,@xcite require nodes in the network to exchange reputation information about other nodes . if a node observes another node participating incorrectly , it reports this observation to other nodes who then take action to avoid being affected by the misbehavior and perhaps even punish the node by refusing to forward its traffic .",
    "while these schemes have proved effective , exchanging second - hand reputation information opens up a new vulnerability , since nodes may falsely accuse other nodes of misbehaving . making a decision about whether to believe an accusation requires authenticating and trusting the accusing node .",
    "such trust maintenance could be performed offline or could be bootstrapped during network operations . in the former case , the network requires a priori trust relationships that may not be practical in truly ad hoc networks . in the latter case ,",
    "bootstrapping trust relationships in ad hoc networks involves significant complexity and risk and may not be reasonable for a very dynamic or short - lived network .",
    "ocean s approach to this problem is to disallow any second - hand reputation exchanges .",
    "instead , a node makes routing decisions based solely on direct observations of its neighboring nodes exchanges with it . this eliminates most trust management complexity , albeit at a cost of less information with which to make decisions about node behavior . to our surprise , though , we find that less information does not necessarily mean less performance .",
    "using ocean we are able to achieve performance ( packet throughput ) comparable to that of approaches requiring second - hand information exchanges . on the positive side",
    ", ocean achieves this while being less complex and less vulnerable to false accusations . on the negative side , ocean is more sensitive to some parameter settings and does not punish misbehaving nodes as severely as systems using full - blown reputation information .",
    "the second type of routing misbehavior we address , which we call _ selfish _ , is that a node may not even respond to route requests but may nonetheless send its own traffic through the network , unfairly preserving its resources while exploiting others. this type of misbehavior can be hard to detect , except through observing the actual data forwarding behavior of neighboring nodes . in ocean , we again focus on detecting this misbehavior with only direct observations of neighboring nodes .",
    "we address the problem using simple , light - weight economic methods that , while not guaranteed to be fair , nonetheless generally result in reasonable performance .",
    "section  [ sec : relwork ] describes recent work related to the problem of managing misbehavior at the routing layer in ad hoc networks .",
    "section  [ sec : overview ] presents an overview of the modules used in ocean to mitigate such routing misbehavior .",
    "section  [ sec : selfish ] describes a scheme to deter selfish behavior .",
    "section  [ sec : simresults ] discusses the simulation results we obtained and compares ocean to reputation - based approaches .",
    "section  [ sec : discussion ] gives more detail about node authentication issues in ocean .",
    "finally , section  [ sec : conclusion ] concludes .",
    "recently , the problem of security and cooperation enforcement has received considerable attention by researchers in the ad hoc network community .",
    "the problem of securing the routing layer using cryptographically secure messages is addressed by hu et al .",
    "@xcite @xcite , papadimitratos and haas @xcite , and sanzgiri et al .",
    "schemes to handle authentication in ad hoc networks assuming trusted certificate authorities have been proposed by zhou and haas @xcite , and kong et al .",
    "hubaux et al .",
    "@xcite employ a self - organized pgp - based scheme to authenticate nodes using chains of certificates and transitivity of trust .",
    "stajano and anderson @xcite authenticate users by ` imprinting , ' in analogy to ducklings acknowledging the first moving subject they see as their mother . in ocean , we do not attempt to secure the routing layer , although our techniques may be used in conjunction with many secure routing protocols to increase performance and robustness .",
    "in contrast to securing the routing layer of ad hoc networks , some researchers have also focused on simply detecting and reporting misleading routing misbehavior .",
    "_ watchdog and pathrater _ @xcite use observation - based techniques to detect misbehaving nodes and report observed misbehavior back to the source of the traffic .",
    "_ pathrater _ manages trust and route selection based on these reports .",
    "this allows nodes to choose better paths along which to route their traffic by routing around the misbehaving nodes .",
    "however , the scheme does not punish malicious nodes ; instead , they are relieved of their forwarding burden .",
    "confidant @xcite also detects misleading nodes by means of observation and more aggressively informs other nodes of this misbehavior through reports sent around the network .",
    "each node in the network hosts a _",
    "monitor _ for observations , _ reputation records _ for first - hand and trusted second - hand reports , _ trust records _ to control the trust assigned to received warnings , and a _ path manager _ used by nodes to adapt their behavior according to reputation information .",
    "in more recent work @xcite @xcite , these researchers find that reputation schemes can be beneficial for fast misbehavior detection , but only when one can deal with false accusations , for which they propose a solution using bayesian statistics .",
    "our goal is to avoid the machinery for managing these reports and their associated trust issues entirely .",
    "peer - to - peer ( p2p ) networks face a similar situation in which they rely on cooperation among self interested users .",
    "recent studies have modelled and quantified the incentives and disincentives for cooperation in p2p networks ( @xcite,@xcite ) .",
    "these results generally appear to support the feasibility of the approach .",
    "researchers have also investigated means of discouraging selfish routing behavior in ad hoc networks , generally through payment schemes @xcite,@xcite,@xcite .",
    "these approaches either require the use of tamper - proof hardware modules or central bankers to do the accounting securely , both of which may not be appropriate in some truly ad hoc network scenarios . in the per - hop payment scheme proposed by buttyan and hubaux @xcite",
    ", the payment units are called _ nuglets _ and reside in a secure tamper - proof module in each node .",
    "they find that given such a module , increased cooperation is beneficial not only for the entire network but also for individual nodes .",
    "we rely on much of their work and likewise use a payment scheme . in our simple `` chipcount '' mechanism , further described in section  [ sec : selfish ] , each node keeps track of the number of packets it has forwarded for its direct neighbors and expects corresponding willingness from those neighbors to carry its traffic . the scheme can result in unfairness to some hosts , but its simplicity and performance may be appropriate in some scenarios .",
    "ocean is a layer that resides between the network and mac layers of the protocol stack , and it helps nodes make intelligent routing and forwarding decisions .",
    "we have designed ocean on top of the dynamic source routing protocol ( dsr ) @xcite , although many of its principles may also be useful in other ad hoc routing protocols . in this section",
    "we describe the components of ocean that detect and mitigate misleading routing behavior .",
    "section  [ sec : selfish ] describes our techniques for mitigating selfish behavior .    the ocean layer ,",
    "which may reside on each node in the network , hosts five components :    * neighborwatch * : this module observes the behavior of the neighbors of a node .",
    "it relies on the omni - directional nature of the antenna and assumes symmetric bi - directional links .",
    "in particular , it tracks misleading routing misbehavior .",
    "when forwarding a packet , the module buffers the packet checksum , and then monitors the wireless channel after sending the packet to its neighbor .",
    "if it does not hear the neighbor attempt to forward the packet within a timeout ( default 1ms ) , neighborwatch registers a negative event against the neighbor node and removes the checksum from its buffer . on the other hand , on overhearing a forwarding attempt by the neighbor , neighborwatch compares the packet to the buffered checksum , and if it matches , it registers a positive event and removes the checksum from its buffer .",
    "if the checksum does not match , it treats the packet as not having been forwarded .",
    "these events are communicated to the routeranker , which maintains ratings of the neighbor nodes .",
    "the neighborwatch module is not a guaranteed service .",
    "it suffers from all the same potential errors as the watchdog @xcite , including , for example , the fact that observing a neighbor forwarding a packet does not guarantee that the packet is successfully received by the next node in the route .",
    "neighborwatch on a node tracks only this one type of behavior with neighbors directly interacting with it .",
    "there are many other events among neighbors that neighborwatch could potentially track , but they are subject to too many vulnerabilities and thus become more complex to analyze .",
    "for instance , neighborwatch on a node a could observe the success and failure rates of its neighbors attempting to forward traffic between themselves .",
    "failure of a neighbor , b , to forward a packet from some other neighbor , c , could trigger a negative event registration against b on a. unfortunately , only b knows for sure whether its refusal to forward c s traffic is due to misleading behavior on b s part or is instead b s legitimate response to c s previous misbehavior toward b.    * routeranker * : every node maintains ratings for each of its neighboring nodes .",
    "the rating is initialized to _",
    "neutral _ and is incremented and decremented on receiving positive and negative events respectively from the neighborwatch component .",
    "we have found that the system performs more satisfactorily when the absolute value of the negative decrement is larger than the positive increment .",
    "once the rating of a node falls below a certain threshold , _ faulty threshold _ , the node is added to a _",
    "faulty list_. the faulty list represents a list of all observed misbehaving nodes .",
    "a route is rated good or bad , based on whether the next hop in the route belongs to the faulty list or not .",
    "one can imagine a finer ranking between routes , where good routes are further differentiated , but our simple binary discrimination between good and bad routes proves to be reasonably effective .",
    "the default parameters we use in ocean are tabulated in table  [ tab : params ] .",
    ".default ocean parameters [ cols=\"^,^ \" , ]     in this section , we demonstrate that mitigating routing misbehavior and selfish behavior through the use of direct observation of nodes can often be as effective as techniques deploying second - hand node reputation . we first describe our simulation environment and then go on to compare the throughput of ocean in the presence of misleading or selfish nodes against a network using second - hand reputation information .",
    "we implemented ocean and its variants in _ glomosim _",
    "@xcite , a commonly - used simulator in the ad hoc research community .",
    "these simulations model radio propagation using the realistic _ two - ray ground reflection _ model and account for physical phenomena such as signal strength , propagation delay , capture effect and interference . the medium access control protocol used is the ieee 802.11 distributed coordination function(dcf ) .",
    "the parameters we use for the simulations are given in table [ tab : simparam ] .",
    "all results have been plotted after taking an average over 20 simulation runs .",
    "the ratio of the standard deviation and the average was around 1.35 for highly mobile scenarios and around 0.70 for low mobility scenarios .",
    "we simulate only connections longer than two hops , since one - hop connections would artificially inflate our throughput figures ( even in the face of 100% misleading nodes , we would see some throughput . ) while the mobility model we simulate is not as realistic as we could hope for , it is very commonly used , making it possible for us to compare our work directly against others results .",
    "we hope to test our ideas in other models and real systems in the future .",
    "+    we first consider the throughput of cooperating nodes in ocean in the presence of varying numbers of misleading nodes and compare it to the same network without ocean and also the same network without ocean but in which the nodes are merely selfish rather than misleading ( figure [ fig : thput_vs_num_mal ] ) .",
    "we make this latter comparison because it helps us judge the potential utility of ocean .",
    "any misbehavior - detecting protocol should not be expected to perform better than a network in which the nodes drop packets but do not actively mislead other nodes .",
    "this is because misbehavior detection can at most prevent nodes from being misled by others ; it can not force the misbehaving nodes to begin forwarding packets .",
    "we observe that ocean performs drastically better than the same network without ocean , and it can even sustain a performance close to the defenseless network with merely selfish nodes .",
    "it helps sustain 90% of the original throughput even when 25% of the nodes misbehave .",
    "as the percentage of the misbehaving nodes approaches 100% , the throughput inevitably falls to zero . at lower numbers of misbehaving nodes",
    ", ocean actually appears to perform better than the network with merely selfish nodes .",
    "this is because ocean also routes around nodes that drop packets because they are merely overloaded , not intentionally misleading .    we next compare the performance of ocean to a protocol , sec - hand , that uses second - hand reputation information .",
    "sec - hand is intended to represent the family of protocols that use second - hand reputation information .",
    "sec - hand uses alarm messages between nodes to communicate information about misbehaving nodes ( similar to those used in confidant @xcite ) .",
    "we augmented the dsr route - error packet to contain an `` alarm '' field .",
    "the node in the alarm field is advertised as misbehaving and all nodes overhearing the alarm add the accused node to their respective faulty lists .",
    "sec - hand is otherwise like ocean , to make it possible to compare the techniques fairly .",
    "we make our comparisons of ocean and sec - hand across varying values of the faulty threshold and varying degrees of mobility ( in figure [ fig : faulty_thresh ] ) .",
    "we vary the faulty threshold , because it controls the speed and the accuracy of misbehavior detection .",
    "a small ( by absolute value ) faulty threshold adds nodes faster to the faulty list , but also suffers from the problem of false positives .",
    "a large faulty threshold suffers from a slow detection speed .",
    "detection speed is particularly important for ocean , since it needs to evaluate new neighbor nodes from scratch .",
    "hence , faster detection should help ocean .",
    "sec - hand should tolerate slower detection speeds , since it keeps records of remote nodes and thus has more information available when a new node joins the neighborhood .",
    "accuracy , on the other hand is critical for sec - hand , since sec - hand can spread false information in the network if the detection was not accurate .",
    "ocean should be more resilient to false detection , since bad information will be kept local .",
    "we vary the degree of mobility , because we would expect sec - hand to perform better than ocean in highly mobile scenarios .",
    "high mobility implies a quickly changing neighborhood , and ocean nodes must must learn about new neighbors from scratch . on the other hand ,",
    "sec - hand maintains ratings for remote nodes , which can be helpful in quickly judging new local nodes that were previously remote .    from the results , we find that at high faulty thresholds , sec - hand is indeed able to perform better than ocean at high mobilities , as expected . on the other hand",
    ", ocean outperforms sec - hand at low faulty thresholds because sec - hand is much more susceptible to false positives . at high mobility , ocean is more sensitive to the tuning of the faulty threshold parameter , while sec - hand performs well over a broader range of tunings .",
    "both protocols perform better with lower mobility . overall",
    ", if ocean and sec - hand both tune the faulty thresholds to suit themselves , ocean can outperform sec - hand ( even for highly mobile networks ) .",
    "we conclude that , even in highly mobile networks , the network can perform reasonably well without the need to exchange second - hand information .",
    "we further compare the performance of ocean and sec - hand in the face of transient failures ( weak links ) in figure [ fig : thput_vs_timestamp_expire ] .",
    "both of the protocols can incorrectly detect such failures as misbehaving node behavior and over - react accordingly .",
    "because of this problem , ocean includes a parameter called faulty timeout , which controls the _",
    "idle time _ before a neighbor declared misbehaving is given a second chance and is elevated to the status of being non - faulty ( albeit with a low rating ) .",
    "some protocols using second - hand reputation information never give nodes a second chance , but we also implement this feature in sec - hand , to provide fair comparison .",
    "a concern , however , is how quickly the protocols respond when the node given a second chance still proves to be misbehaving . in sec - hand , if the timed - out faulty node is multiple hops away , we need to wait for another alarm message before the node is added back to the faulty list . in ocean , we only detect misbehavior of direct neighbors , which allows us to determine quickly , on subsequent traffic through them , whether to put misbehaving neighbors back on the faulty list .",
    "this is seen in a comparative degradation in sec - hand s performance at low faulty timeout values .",
    "we next examine the vulnerability of ocean if it is deployed over a protocol that does not secure control packets against tampering .",
    "the attack that a malicious node may attempt is called a _ rushing attack _",
    "@xcite , whereby a node hurries a `` tampered '' route - request through itself .",
    "the next node along the path will forward this tampered route request and drop further instances of the same route request that come from other nodes . in this way",
    ", the malicious node can establish a route through itself because its route is the first seen by a downstream node , and it can later drop the data packets sent through it .",
    "the _ rushing attack _ in ocean is illustrated in figure [ fig : rushing ] .",
    "note , though that if node r in the illustration had been the destination , the problem would have been avoided , since by default dsr requires destination nodes to reply to all route requests they receive . in that case , the _ good route _ would have been found .",
    "however , in our simulations of random networks , this attack seemed to make little difference .",
    "figure  [ fig : rushing ] also shows the throughput of the network when the malicious nodes tamper with the avoid lists .",
    "the throughput remains reasonable , since for the attack to be possible a relatively specific configuration of nodes is needed , which does not occur frequently , at least in random ad hoc networks .",
    "there are many other ways a malicious node may attack a network if the routing layer is not secured . however , we believe our experiments show that ocean does not add any _ new _ vulnerabilities that should significantly affect performance .",
    "another metric of evaluation for ocean is the throughput of the misleading nodes .",
    "ideally , we would like the throughput of the misleading nodes to be as low as possible , to deter their behavior .",
    "figure [ fig : malthput_vs_num_mal ] plots the throughput of the misleading nodes in defenseless , ocean , and sec - hand networks .",
    "unfortunately , we see that ocean is not very effective in thwarting the throughput of the misleading nodes .",
    "this is because the misleading nodes also use ocean to route around other misleading nodes or nodes that did not forward their packets .",
    "they were thus able to maintain a good ( and sometimes better ) throughput even when the network was using ocean .",
    "even in sec - hand the misleading nodes are able to take advantage of the sec - hand modules , however sec - hand is better at punishing the misbehaving nodes , since the bad reputation of the misbehaving nodes spreads much faster .",
    "we go on to examine the sensitivity of the throughput of these misleading nodes to varying faulty threshold and faulty timeout values .",
    "the results are in figure  [ fig : malthput_vs_timestamp_expire ] .",
    "interestingly , the throughput of the misleading nodes is almost constant with a varying faulty threshold .",
    "since the malicious nodes also use ocean with the same parameters as the rest of the network , the positive and negative effects of decreasing the faulty threshold almost cancel each other out . on the other hand , increasing the faulty timeout thwarts the throughput of the faulty nodes , as one would expect , since the misleading nodes get fewer second chances .    finally ,",
    "in addition to considering networks with misleading routing behavior , we consider the performance of networks containing merely selfish nodes .",
    "we study the performance of the economy - based scheme proposed in section  [ sec : selfish ] in a simulation that places many nodes on the periphery of the network ( a 1500 m by 300 m rectangle ) .",
    "this topology emphasizes the problems that our economy scheme causes in terms of unfairness to peripheral nodes and reduced throughput for cooperating nodes .",
    "figure [ fig : thput_nuglets ] plots the throughput of the cooperating nodes and the selfish nodes with varying chip accumulation rates ( cars ) under optimistic and pessimistic schemes .    at a low car value ,",
    "the throughput of the cooperating nodes suffers a two - fold decrease , leading one to want to tune car to higher values . on the other hand , the throughput of selfish nodes changes by a factor of five to six , leading one to want to tune car to lower values , to adequately punish selfish nodes",
    "overall , we see that an optimistic scheme better suits these trade - offs than a pessimistic scheme .",
    "an `` optimum '' car value , though , may vary depending on network requirements , and there is no good mechanism in our simple scheme for preventing individual nodes from tuning car to whatever value best meets their selfish needs .",
    "in the work we present in this paper , we assume that nodes do not spoof each other s identities , since this would allow misbehaving nodes to exploit the good reputation of neighboring cooperating nodes . since in reality it is easy to spoof ip addresses and even mac addresses , this would imply the use of a cryptographically secure authentication mechanism , perhaps as provided through a secure routing protocol .",
    "unfortunately , we do not yet find a secure routing protocol that handles authentication in a manner that matches the spirit of ocean in being truly ad hoc and also manageably simple .",
    "some secure routing protocols rely on pre - assigned certificates from common certificate authorities to authenticate nodes @xcite , but it may not always be possible in truly ad hoc contexts for nodes to hold such pre - assigned certificates from authorities that all nodes will respect . efforts to develop on - the - fly certificate authorities within the network @xcite @xcite appear either to be quite complex or to distinguish the role of certificate authority among a subset of nodes , which does not provide complete decentralization .    in ocean , we instead hope to give up the requirement for stable identities for nodes _ at the routing level _ , and instead merely prevent nodes from spoofing one another . to achieve this objective ,",
    "nodes generate their own asymmetric key pairs , the public portion of which they can exchange with neighbors , using them perhaps merely to agree upon lighter - weight authentication secrets .",
    "this mechanism , however , does not prevent a node from generating multiple identities rapidly and then discarding identities once the associated reputations have fallen below threshold . to deal with such short - term identities , we hope to leverage recent work on _ proof - of - effort _",
    "mechanisms @xcite @xcite . in the context of ocean",
    ", we could mandate that a new identity be accepted only if the identity - owner shows reasonable proof of recent effort in generating that identity .",
    "this would not require nodes to maintain stable identities for very long , but they would not find it advantageous to cycle through them fast enough to cause much havoc undetected .",
    "this paper presents the ocean techniques for detecting and mitigating misleading routing behavior in ad hoc networks . our goal was to study",
    "how far we can get using only direct observations of neighbors .",
    "we find that this scheme works surprisingly well , in terms of network throughput , considering its simplicity compared to schemes that share second - hand reputation information throughout the network .",
    "compared to such reputation schemes , ocean is more sensitive to the tuning of some parameters , and it fails to punish misbehaving nodes as severely , but it performs almost as well , and sometimes even better , across a wide range of degrees of mobility .",
    "we also find that our _ chipcount _ scheme provides a simple first step at being able to deter selfish behavior in the network .",
    "however , this scheme is accompanied with network throughput deterioration .",
    "further work is warranted to see if we can do a better job of using only directly - observable information to identify and deter selfish nodes without such significant reductions in the throughput of cooperating nodes .",
    "we also understand that our random simulation models cover an unrealistically small sample of potential network behavior .",
    "we would like to simulate other more realistic models , and test our ideas in real systems if we have sufficient resources to do so .",
    "finally , we plan to study how we can provide more effective infrastructure - free authentication in ad hoc networks assuming that identities need not be entirely stable at the routing level , but that spoofing of other nodes is unacceptable .",
    "we thank the students in cs444n for their initial efforts and input into this project .",
    "we especially thank yan liu who continued to work on this project after the class was over .",
    "we are very grateful to the nokia research center for supporting this project .",
    "the project has also been supported in part by muri award number f49620 - 00 - 1 - 0330 and the stanford networking research center ."
  ],
  "abstract_text": [
    "<S> ad hoc networks rely on the cooperation of the nodes participating in the network to forward packets for each other . a node may decide not to cooperate to save its resources while still _ using _ the network to relay its traffic . </S>",
    "<S> if too many nodes exhibit this behavior , network performance degrades and cooperating nodes may find themselves unfairly loaded . </S>",
    "<S> most previous efforts to counter this behavior ( @xcite,@xcite,@xcite,@xcite ) have relied on further cooperation between nodes to exchange reputation information about other nodes . </S>",
    "<S> if a node observes another node not participating correctly , it reports this observation to other nodes who then take action to avoid being affected and potentially punish the bad node by refusing to forward its traffic . </S>",
    "<S> unfortunately , such second - hand reputation information is subject to false accusations and requires maintaining trust relationships with other nodes . </S>",
    "<S> the objective of ocean is to avoid this trust - management machinery and see how far we can get simply by using direct first - hand observations of other nodes behavior . </S>",
    "<S> we find that , in many scenarios , ocean can do as well as , or even better than , schemes requiring second - hand reputation exchanges . </S>",
    "<S> this encouraging result could possibly help obviate solutions requiring trust - management for some contexts . </S>"
  ]
}
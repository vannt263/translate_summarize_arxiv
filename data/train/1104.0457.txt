{
  "article_text": [
    "widespread deployment of networks of sensors and autonomous vehicles is expected to revolutionize our ability to monitor and control physical environments from remote locations . however , for such networks to achieve their full range of applicability , they must be capable of operating in uncertain and unstructured environments without centralized supervision . realizing the full potential of such systems will require the development of protocols that are fully autonomous , distributed , and adaptive in the face of changing environments .    an important problem in this context",
    "is the coverage problem : a network of mobile sensors should distribute itself over a region with a measurable field so that the likelihood of detecting an event of interest is maximized .",
    "if the probability distribution of the event is uniform over the area , then the optimal solution will involve a uniform spatial distribution of the agents . on the other hand",
    "if this probability distribution is not uniform , then the sensors should be more densely positioned in the subregions that have higher event probability .",
    "there is a considerable literature on coverage algorithms for groups of dynamic agents ; we refer the reader to @xcite and the references therein .    in @xcite ,",
    "uniform coverage algorithms are derived using voronoi cells and gradient laws for distributed dynamical systems .",
    "uniform constrained coverage control is addressed in @xcite where the constraint is a minimum limit on node degree .",
    "virtual potentials enable repulsion between agents to maximize coverage and attraction between agents to enforce the constraint . in @xcite ,",
    "gradient control laws are proposed to move sensors to a configuration that maximizes expected event detection frequency .",
    "local rules are enforced by defining a sensing radius for each agent , which also makes computations simpler .",
    "the approach is demonstrated for a nonuniform but symmetric density field with and without communication constraints .",
    "further results for distributed coverage control are presented in @xcite for a coverage metric defined in terms of the euclidean metric with a weighting factor that allows for nonuniformity . as in @xcite ,",
    "the methodology makes use of voronoi cells and lloyd descent algorithms .",
    "the paper @xcite considered the general nonuniform coverage problem with a non - euclidean distance , and it proposed and proved the correctness of a coverage control law in the plane .",
    "however , the control law of @xcite is only partially distributed , in that it relies on a `` cartogram computation '' step which requires some global knowledge of the domain .",
    "our work builds on the results of @xcite to design a control law for the nonuniform coverage problem in the one - dimensional case when the agents are positioned on the line .",
    "we develop fully distributed coverage control laws for a nonuniform field in this setting , and moreover , we prove quantitative convergence bounds on the performance of these algorithms .",
    "interestingly , we find that relatively modest increases in the capabilities and knowledge of each agent can translate into considerable improvements in the global performance .",
    "we begin with an introduction to the nonuniform coverage problem in section ii . in section iii",
    ", we present our first fully distributed control law for the coverage problem .",
    "the execution of this control law only requires the agents to be able to measure distances to their neighbors and to measure the field around their location .",
    "the main result of this section is theorem 1 , which demonstrates the correctness of the algorithm and gives a quantitative bound on its performance .",
    "we show that it takes @xmath0 agents essentially on the order of @xmath1 to come close to the optimal configuration regardless of the initial conditions .    in section iv",
    ", we present another fully distributed control law for coverage .",
    "the execution of this control law requires more capabilities on the part of the agents : they store several numbers in memory , communicate these numbers to their neighbors at every round , and moreover , they know approximately ( within a constant factor ) how many agents there are in total .",
    "subject to these assumptions , we derive a considerable over the simple static control law of section iii .",
    "the main result of this section is theorem 6 , which demonstrates the correctness of the algorithm and gives a quantitative bound on its performance .",
    "we show that it takes @xmath0 agents essentially on the order of @xmath0 to come close to the optimal configuration regardless of initial conditions .",
    "this is an order of magnitude improvement over the control law of section iii .",
    "we introduce the nonuniform coverage problem in this section ; our exposition closely follows the expositions of @xcite .",
    "we consider @xmath0 mobile agents initially situated at arbitrary positions @xmath2 which , for simplicity , we henceforth assume to be located in the interval @xmath3 $ ] .",
    "there is a positive , piecewise - continuous function @xmath4 \\rightarrow ( 0 , \\infty)$ ] , which measures the density of information or resource at each point .",
    "the goal is to bring the agents from their initial configuration to a static configuration that allows them to optimally sense in the density field @xmath5 . intuitively , we would like more agents to be positioned in areas where @xmath5 is high , and fewer agents positioned in areas where @xmath5 is low .",
    "more formally , for @xmath6 $ ] we define the metric @xmath7 it is easy to see this defines a valid metric between points in @xmath3 $ ] .",
    "relative to the ordinary distance @xmath8 , this metric expands regions where @xmath5 is large and shrinks regions where @xmath5 is small .",
    "following @xcite , we define the coverage of a set of points @xmath9 relative to the density field @xmath5 as @xmath10 } \\min_{i=1,\\ldots , n } d_{\\rho}(y , x_i).\\ ] ] given the positions @xmath11 of the agents and the density field @xmath5 , computing @xmath12 requires computing the distance @xmath13 from any point in @xmath3 $ ] to the closest @xmath14 .",
    "the coverage metric @xmath12 is then the largest of these distances .",
    "a smaller @xmath12 implies the vehicles achieve better coverage of the domain @xmath3 $ ] .",
    "we use @xmath15 to denote the best ( smallest ) possible coverage @xmath16^n } \\phi(x_1,\\ldots , x_n , \\rho).\\ ] ] in this paper , we are concerned with designing control laws which drive agents towards positions with coverage @xmath15 . as pointed out in @xcite , with a nonuniform distance ; is closely related to information gathering and sensor array optimization problems .",
    "a typical problem is to minimize shortest response time from a collection of vehicles to any point in a terrain of varying roughness . in that case",
    ", the non - euclidean distance @xmath13 appears because rougher bits of terrain take longer to traverse .",
    "another such problem is the detection of acoustic signals ; the objective is to place sensors so they can detect a source anywhere in an inhomogeneous medium . in that case",
    ", the non - euclidean distance @xmath13 appears as a result of the spatially varying refractive index of the environment .",
    "we now describe and analyze a simple distributed control law that drives the vehicles towards optimal coverage .",
    "first , we need to define the notion of a @xmath5-weighted median between points .",
    "* definition : * the @xmath17-median @xmath18 is defined as the point @xmath19 which satisfies @xmath20 due to the strict positivity of @xmath5 , it is easy to see that a unique such point exists for any @xmath21 .",
    "we can now state the coverage control law .",
    "we assume for convenience that agents are labeled @xmath22 from left to right .",
    "this makes it easier to state what follows ; however , the actual implementation of the algorithm does not require the use of these labels .",
    "* a static coverage control law : * the agents iterate as @xmath23    we first briefly outline how this scheme may be implemented without knowledge of the labels @xmath22 by the nodes",
    ". a node @xmath24 will initially check whether it has a left neighbor and a right neighbor , or whether it is a `` border agent '' with a single neighbor .",
    "suppose it has two neighbors .",
    "then , it will measure the distance @xmath25 to its left neighbor and @xmath26 to its right neighbor , and denoting its position ( which it does not know ) by @xmath14 , it will measure @xmath5 in the interval @xmath27 $ ] .",
    "this gives it enough information to compute the @xmath28-median of the positions of its neighbors , and it moves to this location .",
    "`` border agents '' can similarly implement this control law without knowledge of their labels .",
    "next , we remark that this scheme may be interpreted as a distributed implementation of the cartogram approach introduced in @xcite specialized to the line .",
    "intuitively , each of the middle nodes @xmath29 seeks to position itself `` in the middle '' of its neighboring agents while stretching areas with high @xmath5 and shrinking areas with low @xmath5 ; this is precisely the distributed computation of the cartograms used in @xcite .",
    "our goal in this section is to prove that this iteration solves the coverage control problem and to provide quantitative bounds on its performance .",
    "the main result of this section is the following theorem .",
    "* theorem 1 : * each @xmath30 has a limit , and the limiting set of positions have coverage @xmath15 .",
    "moreover , after @xmath31 rounds , each agent is within @xmath32 of its final limit .",
    "we next turn to the proof of this theorem .",
    "we first write down the optimality conditions for achieving @xmath15 .",
    "* lemma 2 . * the equations    @xmath33    have a unique solution which achieves coverage @xmath15 .",
    "moreover , @xmath34    * proof .",
    "* it is easy to see that eq .",
    "( [ optcond ] ) has a solution .",
    "indeed , suppose we position agent @xmath28 at the location @xmath35 satisfying @xmath36 .",
    "such a location clearly exists .",
    "next , for every @xmath37 , we position the @xmath24th agent at the location @xmath14 which satisfies @xmath38 .",
    "again , such a point clearly must always exist .",
    "the resulting locations satisfy eq .",
    "( [ optcond ] ) .    moreover , this solution is unique because together with the obvious identity @xmath39 eq .",
    "( [ optcond ] ) implies @xmath40 which immediately fixes the value of @xmath41 , and hence all the values @xmath14 .    under this configuration the largest distance @xmath13 between any point in",
    "@xmath3 $ ] and its closest agent clearly equals @xmath42 .",
    "we next argue that @xmath15 is at least this big .",
    "consider any set of positions @xmath43 .",
    "since    @xmath44 + \\left [ d_{\\rho}(x_2,x_3 ) \\right ] +   \\cdots + \\left [ d_{\\rho}(x_{n-1},x_n ) \\right ] \\nonumber + \\left [ d_{\\rho}(0,x_1 ) + d_{\\rho}(x_n,1 ) \\right ] \\label{sumeq } \\end{aligned}\\ ] ]    and there are @xmath0 terms in brackets , we can conclude that at least one of the bracketed terms is at least @xmath45 .",
    "if the only such term is the last term , then one of @xmath46 , @xmath47 has value at least @xmath42 . but",
    "this implies that the distance @xmath13 from either @xmath48 or @xmath28 to the closest agent is at least @xmath42 , which proves that in this case @xmath15 is at least that big .    if , on the other hand , it is some term @xmath49 which is at least @xmath45 , then the distance @xmath13 from the median @xmath50 to the closest agent is at least @xmath42 , which again implies @xmath15 is at least this much . *",
    "q.e.d . *",
    "we next introduce a change of variables which makes our static control law easier to analyze .",
    "we define @xmath51 and note that @xmath52 .",
    "moreover , for any two points @xmath53 in @xmath3 $ ] , @xmath54 and @xmath55    the next lemma restates our coverage control law in a particularly convenient form .",
    "* lemma 4 : * assuming there are at least two agents , let us define @xmath56 and let @xmath57 be the vector in @xmath58 which stacks the variables @xmath59 .",
    "finally , we define @xmath60 @xmath61 and for @xmath62 , @xmath63 then @xmath57 follows the dynamics @xmath64    * proof : * we give the calculation in the case of @xmath65 ; the proof of the cases @xmath66 are similar .",
    "define @xmath67 . from eq .",
    "( [ f - median ] ) , we can conclude that the variables @xmath68 evolve as @xmath69 we can rewrite the variables @xmath70 in terms of the variables @xmath68 as @xmath71 observe that @xmath72 and replacing @xmath73 by @xmath74 in eq .",
    "( [ dintermsofy ] ) and then plugging in eq .",
    "( [ ygapintermsofd ] )    * lemma 5 : * let @xmath75 and let @xmath76 .",
    "then the spectrum of @xmath77 is real .",
    "labeling it from smallest to largest as @xmath78 , we have @xmath79    * proof : * for @xmath80 the lemma follows by an easy calculation . for general @xmath81 ,",
    "consider an undirected line graph on @xmath82 nodes with self loops at each node .",
    "we assign weights to the edges as illustrated in figure 1 .",
    "namely , the self loops on nodes @xmath83 and @xmath82 have weight @xmath28 ; all other self - loops have weight zero .",
    "the edge between nodes @xmath28 and @xmath84 , and the edge between node @xmath85 and @xmath82 each has weight @xmath84 .",
    "every other edge has weight @xmath86 .",
    "we denote by @xmath87 the weight of the edge between @xmath24 and @xmath88 ( defined to be zero if there is no edge between @xmath24 and @xmath88 ) ; since the graph is undirected , @xmath89 by definition .",
    "moreover , we define @xmath90 to be the sum of all the weights incident on node @xmath24 , i.e. @xmath91 .",
    "thus , @xmath92 . with these definitions in place , we observe that for all @xmath93 , @xmath94 .",
    "[ line ]   for @xmath81 : @xmath95 where @xmath87 is the weight of the edge @xmath96 and @xmath90 is the sum of all the weights incident on node @xmath24.,title=\"fig:\",scaledwidth=99.0% ]    define the inner product @xmath97 . then",
    ", @xmath98 so that @xmath99 is self - adjoint in this inner product , and in particular its spectrum must be real . observing that the largest eigenvalue of @xmath99 is @xmath28 with the eigenvector of all ones , the courant - fisher theorem gives    @xmath100    we now lower bound the last term on the right hand side using a variation of the argument from @xmath101 .",
    "the minimum is achieved ( since we are minimizing a continuous function over a compact set ) ; use the notation @xmath102 for the minimizer . consider the vector with @xmath24th entry @xmath103 .",
    "observe that the constraint @xmath104 implies that @xmath105 while the constraint @xmath106 implies that the average value of @xmath107 is @xmath108 .",
    "this means @xmath109 or @xmath110 thus @xmath111 applying cauchy - schwarz , @xmath112 and therefore , @xmath113 putting it all together , this implies the desired bound on @xmath114 .    a similar argument ( ) proves the bound for @xmath115 . by the courant - fisher theorem    @xmath116    where in the final step we can replace @xmath117 with @xmath118 since that flipping the sign of every other @xmath14 does not change the constraint @xmath119 .",
    "next , as before let @xmath102 be the vector achieving the optimum in the above expression , and let @xmath120 be the largest among all the numbers @xmath103 . as before , @xmath121 .",
    "if @xmath122 or @xmath123 , the above equation immediately proves the lemma . if @xmath124 @xmath125 so that by cauchy - schwarz , @xmath126 which implies the corresponding bound on @xmath127 .",
    "* q.e.d . *    * proof of theorem 1 : * decompose @xmath128 in terms of the eigenvectors of @xmath99 as @xmath129 where @xmath130 @xmath131 .",
    "we know that @xmath132 . thus @xmath133 using the fact that the eigenvectors @xmath130 are orthogonal in the inner product @xmath134 ,    @xmath135    or @xmath136 observe that so that @xmath137 it follows that each @xmath70 has a limit , and this immediately implies that every @xmath68 has a limit , and therefore every @xmath30 has a limit .",
    "most importantly , because every @xmath70 approaches the same limit , we can conclude that the optimality condition of lemma 2 is satisfied in the limit , and the set of limiting positions achieves @xmath15 .",
    "moreover , after @xmath138 iterations , each @xmath70 is within @xmath139 of its final value , which implies every @xmath68 is within @xmath32 of its final value .",
    "now the static control law is invariant under scaling of @xmath5 , so we can assume without loss of generality that we are dealing with @xmath140 , so that the minimum value of @xmath141 is @xmath28 .",
    "then , we conclude that after @xmath142 iterations , every @xmath30 is within @xmath32 of its final value . to conclude the proof , observe that @xmath143 , and the upper bound in the theorem statement follows .",
    "* q.e.d*.    * remark : * observe that the coverage control law we have presented in this section is naturally robust to addition and deletion of agents as well as changes in @xmath5 .",
    "indeed , as long as the density and the number of agents stop changing at some point , the algorithm is guaranteed to converge to the optimal configuration .",
    "an open problem is to prove performance bounds for this algorithm in the scenario when the number of agents and the density are continually changing .",
    "in this section , we propose another control law for the nonuniform coverage problem on the line .",
    "we draw heavily on the paper @xcite , which described a fast `` nonreversible markov sampler '' for sampling a uniform random number from @xmath144 .",
    "we make stronger assumptions on the capabilities and knowledge of each agent .",
    "we now assume that agents can store numbers in memory , transmit numbers to their neighbors , and can detect when their neighbors move to a new location .",
    "moreover , we assume that each agent has an estimate @xmath145 of the total number of agents , and that this estimate is accurate within a constant factor @xmath146 : @xmath147    we refer to the control law of this section as the `` dynamic coverage control law , '' since in contrast with the control law of the previous section , the feedback law has dynamics of its own .",
    "this control law follows two steps : an initial measurement step and a subsequent communication / measurement / movement step .    [",
    "lifted ]     * dynamic control law : * nodes keep track of the variables @xmath148 , initialized in the first step as @xmath149 and @xmath150 for each @xmath24 . at each step , nodes transmit their variables @xmath148 to their neighbors , and then set their values @xmath151 to be linear combinations of their previous values and the values they have just received . the linear combination taken by each agent",
    "is derived from a rule based on figure 2 .",
    "note that this figure contains nodes labeled @xmath22 and @xmath152 .",
    "node @xmath24 sets @xmath153 to be a linear combination of those values @xmath154 which have edges going from @xmath82 to @xmath24 ; the coefficient it puts in front of @xmath155 is the label on the edge .",
    "the value of @xmath156 is determined in the same way .",
    "for example , agent @xmath28 updates as @xmath157 after updating their variables @xmath158 ,    while the is somewhat involved , it has a simple interpretation .",
    "consider the markov chain of figure 2 where we interpret the label on the edge @xmath96 as the probability of transitioning from @xmath24 to @xmath88 ; note that the labels on the outgoing edges sum to @xmath28 for every node .",
    "if @xmath159 is the probability of being at node @xmath24 at time @xmath73 , and @xmath160 is the probability of being at node @xmath161 at time @xmath73 , then the variables @xmath148 satisfy the above recursion .",
    "indeed , this recursion is an adaptation of the `` nonreversible markov chain sampler '' from @xcite .",
    "it was observed in that paper that while an ordinary `` diffusive '' markov chain on the line graph which , say , moves to the right and left each with probability @xmath162 takes on the order of @xmath1 steps to come close to the uniform distribution , the dynamic coverage control law of this section is an attempt to harness this insight for the coverage problem .    our goal in this section is to prove that this iteration solves the coverage control problem and to demonstrate that it is an order of magnitude than the static control law of the previous section .",
    "the main result of this section is the following theorem .",
    "* theorem 6 : * each @xmath30 has a limit , and the limiting set of positions has coverage @xmath15 .",
    "moreover , after every agent has executed @xmath163 rounds of updates , each agent is within @xmath32 of its final limit .",
    "the of our proof is similar the proof of the related results from @xcite .",
    "specifically , we prove the theorem by first establishing a certain inequality on the state of the markov chain of figure 2 , namely , eq . ( [ spreading ] ) ; the proof of @xcite proceeds in the same way .",
    "let @xmath164 denote the row vector @xmath165 .",
    "let @xmath166 denote the matrix which maps @xmath164 to @xmath167 through right - multiplication : @xmath168 observe that @xmath166 is a nonnegative , irreducible stochastic matrix .",
    "standard results in markov chain theory imply that the above iteration converges to a scaled multiple of the stationary probability vector of the chain .",
    "thus we can immediately conclude that each @xmath159 has a limit , and consequently , the positions of the agents under the dynamic coverage control law have limits as well .",
    "* lemma 7 : * the stationary probability of the markov chain in figure 2 is @xmath169 and for all other nodes , @xmath170    this lemma can be proved by verifying that the stacked vector @xmath171 satisfies @xmath172 .",
    "this lemma implies that @xmath173 and @xmath174 which implies by lemma 2 that the limiting set of positions do have optimal coverage @xmath15 .",
    "it remains to bound the time until the agents approach these positions .",
    "* proof : *    the set of times in @xmath175 when the modified markov chain takes a major self - loop .",
    "because the distribution of the number of major self - loops taken by the modified chain is exactly that of the times a fair coin lands on heads in @xmath176 tosses , we have that conditional on @xmath177 , @xmath178 is uniformly distributed over all @xmath82-element subsets of @xmath175 . similarly , conditional on any @xmath82-element @xmath178 ,",
    "the distribution of the number of switching links is exactly that of the number of times a coin whose heads probability is @xmath179 lands on heads in @xmath180 tosses .",
    "so , if @xmath181 is the event that a single switching link was taken by time @xmath182 , then for any @xmath82-element @xmath178,@xmath183 where we used the bound @xmath184 and that @xmath185 is increasing for @xmath186 while @xmath187 .",
    "it follows that conditional on @xmath177 , @xmath181 occurs with constant probability independent of @xmath188 .",
    "we find it convenient to use the largest @xmath189 distance between the rows of @xmath190 and their ultimate limit as a measure of convergence .",
    "in particular , let @xmath191 refer to the @xmath24th row of @xmath190 , and let @xmath192 we use @xmath193 to denote the time until @xmath194 permanently sinks below @xmath32 .",
    "* lemma 12 * @xmath195 .",
    "* lemma 13 * after @xmath196 steps , we will always have @xmath197    * proof : *    in this case , @xmath159 is the probability that the random walk that starts at node @xmath82 with probability @xmath198 is at node @xmath24 at time @xmath73 .",
    "this is a convex combination of the entries of the @xmath24th column of @xmath190 . by the previous lemma ,",
    "each entry of the @xmath24th entry of each row is not more than @xmath199 from @xmath200 after @xmath201 steps , and the convex combination of these entries must have the same property .",
    "* q.e.d . *    * proof of theorem 6 . * .",
    "@xmath202 ) and eq .",
    "( [ 1limit ] ) implies that each @xmath203 is always within @xmath139 of its final position after @xmath204 iterations .",
    "@xmath205 and since @xmath206 , this implies in particular that @xmath207 .",
    ", we have @xmath208 which similarly implies @xmath209 .",
    "we proceed by induction ; indeed , we have already proven the base case of @xmath210 and now assuming we have proven this for @xmath211 , we have that at time @xmath212 , @xmath213    thus after steps , every agent is always at most @xmath32 away from its limiting location .",
    "this proves the theorem . *",
    "q.e.d . *    * remark : * we remark that it is possible to describe a modification of the dynamic control law that is robust to unpredictable",
    "we report here on several simulations of our coverage control laws .",
    "we are able to observe that quite often the performance is considerably better than the theoretical upper bounds derived in this paper , and that the dynamic control law of section iv gives a considerable practical speedup over the static control law of section iii .",
    "@xmath214{fig4l.pdf }   \\includegraphics[width=0.51\\textwidth]{fig3r.pdf } \\end{array}$ ]    figure 3 shows the results from a simulation with random initial conditions . in this case , @xmath215 is the @xmath24th largest value of @xmath0 random variables all uniform on @xmath3 $ ]",
    ". the density @xmath5 is uniform on @xmath3 $ ] .",
    "moreover , we assumed that each agent knows the total number of agents in the system , i.e. @xmath216 . the left figure shows some snapshots from the progress of both algorithms , while the right figure shows the time until the stopping condition @xmath217 holds for the first time .",
    "the results show reasonably quick convergence for the random initial conditions .",
    "we see that , the static control law has a convergence time which grows slower than the quadratic growth proved in theorem 1 , while the dynamic control law has convergence time which appears to grow somewhat slower than the linear upper bound of theorem 6 .",
    "@xmath214{fig5l.pdf }   \\includegraphics[width=0.5\\textwidth]{fig5r.pdf } \\end{array}$ ]    on the other hand , which the bounds on growth rates from theorems 1 and 6 do occur . in figure 4",
    ", we see the performance when every agent starts with @xmath218 ; every other aspect is the same as the simulation in figure 3 .",
    "we see that in this case the convergence times do seem to grow quadratically in @xmath0 for the static control law , and linearly in @xmath0 for the dynamic control law .",
    "intuitively , the issue of convergence rate seems to be related to how fast information propagates through the network of nodes .",
    "the high weights used in the dynamic control law - specifically , the weights @xmath219 , which are quite close to @xmath28 - allow for fast diffusion of information if an agent is far from where it should be . on the other hand , in the static control law information",
    "diffuses through nearest neighbor interactions , and this process can be an order of magnitude slower .",
    "@xmath220{fig6l.pdf }   \\includegraphics[width=0.5\\textwidth]{fig6r.pdf } \\end{array}$ ]",
    "we have investigated distributed control laws for mobile , autonomous agents to position themselves on the line for optimal coverage in a nonuniform field .",
    "our main results are stated in theorems 1 and 6 .",
    "theorem 1 gives a quantitative upper bound on the convergence time of a relatively simple control law for coverage .",
    "theorem 6 discusses a dynamic control law which , while making stronger assumptions on the capabilities of each agent , manages to accomplish the coverage task    our work suggests a number of open questions .",
    "it is of interest to understand whether the increased capabilities of the agents in section 4 are really necessary to achieve better performance .",
    "in addition , it would be interesting to explore whether the results described here extend to two and higher dimensions , and in particular , whether a dynamic control law such as the one in theorem 6 might be useful for speeding up performance in more general settings .",
    "the authors would like to thank hari narayanan for useful discussions .",
    "a. ahmadzadeh , j. keller , g. j. pappas , a. jadbabaie , v. kumar , an optimization - based approach to time - critical cooperative surveillance and coverage with unmanned aerial vehicles , _ proceedings of the international symposium on experimental robotics , _ 2006 .",
    "p. barooah , p. g. mehta , j. hespanha , mistuning - based decentralized control of vehicular platoons for improved closed loop stability ,  _ ieee transactions on automatic control , _ vol .",
    "54 , no.9 , pp . 2100 - 2113 , 2009 .",
    "a. breitenmoser , m. schwager , j .- c .",
    "metzger , r. siegwart , d. rus , voronoi coverage of non - convex environments with a group of networked robots , _ proceedings of ieee international conference on robotics and automation , _ 2010 .",
    "j. cortes , s. martinez , f. bullo , spatially - distributed coverage optimization and control with limited - range interactions , _ esaim : control , optimisation , and calculus of variations , _ vol .",
    "691 - 719 , 2005 .",
    "a. howard , m. mataric , g. sukhatme , mobile sensor network deployment using potential fields : a distributed , scalable solution to the area coverage problem , _ proceedings of the 6th international symposium on distributed autonomous robotics systems , _ 2002 .",
    "i. hussein , d. stipanovic , effective coverage control for mobile sensor networks with guaranteed collision avoidance , _ ieee transactions on control systems technology , _ vol .",
    "642 - 657 , 2007 .",
    "t. wong , t. tsuchiya , t. kikuno , a self - organising algorithm for sensor placement in wireless mobile microsensor networks,_international journal of wireless and mobile computing , _ vol .",
    "3 , no . 1 - 2 , 2008 .",
    "y. zou , k. chakrabarty , sensor deployment and target localization based on virtual forces , _ proceedings of the twenty - second annual joint conference of the ieee computer and communications societies , _ 2003 ."
  ],
  "abstract_text": [
    "<S> this paper investigates control laws allowing mobile , autonomous agents to optimally position themselves on the line for distributed sensing in a nonuniform field . </S>",
    "<S> we show that a simple static control law , based only on local measurements of the field by each agent , drives the agents close to the optimal positions after a number of sensing / movement/ rounds that is essentially quadratic in the number of agents . </S>",
    "<S> further , we exhibit a dynamic control law which , under slightly stronger assumptions on the capabilities and knowledge of each agent , drives the agents close to the optimal positions after a number of sensing / communication//movement rounds that is essentially linear in the number of agents . crucially , both algorithms are fully distributed and robust to unpredictable loss and addition of agents . </S>"
  ]
}
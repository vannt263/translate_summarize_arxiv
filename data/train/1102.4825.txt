{
  "article_text": [
    "in many practical networks , including sensor networks and vehicular networks , receivers demand a function of the messages generated by the sources that are distributed across the network rather than the generated messages . this situation is studied in the framework of network computing @xcite .",
    "the classical network coding model of ahlswede , cai , li , and yeung  @xcite can be viewed as a the special case of network computing in which the function to be computed at the receivers corresponds to a subset of the source messages and communication occurs over a network with noiseless links . in the same noiseless set up of  @xcite , we consider the scenario in which a set of source nodes generate messages over a finite field and a single receiver node computes a linear function of these messages .",
    "we ask whether this linear function can be computed by performing linear coding operations at the intermediate nodes .    in multiple - receiver networks , if each receiver node demands a subset of the source messages ( which is an example of a linear function ) , then dougherty , freiling , and zeger @xcite showed that linear codes are not sufficient to recover the source messages .",
    "similarly , if each receiver node demands the sum of the source messages , then ray and dei  @xcite showed that linear codes are also not sufficient to recover the source messages .",
    "in contrast , in single - receiver networks linear codes are sufficient for both the above problems and a simple cut - based condition can be used to test whether a linear solution exists .",
    "our contribution is as follows .",
    "we extend above results investigating if a similar cut - based condition guarantees the existence of a linear solution when the receiver node demands an arbitrary linear function of the source messages .",
    "we identify two classes of functions , one for which the cut - based condition is sufficient for solvability and the other for which it is not .",
    "these classes are complements of each other when the source messages are over the binary field . along the way",
    ", we develop an algebraic framework to study linear codes and provide an algebraic condition to test whether a linear solution exists , similar to the one given by koetter and mdard  @xcite for classical network coding .",
    "the paper is organized as follows .",
    "we formally introduce the network computation model in section  [ sec : intro ] . in section",
    "[ sec : main ] we develop the necessary algebraic tools to study linear codes and introduce the cut - based condition . in section  [ sec : linearfunctions ] , we show the main results for the two classes of functions . section  [ sec : conclusions ] concludes the paper , mentioning some open problems .      in this paper , a _ network _",
    "@xmath0 consists of a finite , directed acyclic multigraph @xmath1 , a set of _ source nodes _",
    "@xmath2 , and a _ receiver _ @xmath3 .",
    "such a network is denoted by @xmath4 .",
    "we use the word  graph \" to mean a multigraph , and  network \" to mean a single - receiver network .",
    "we assume that @xmath5 , and that the graph @xmath6 contains a directed path from every node in @xmath7 to the receiver @xmath8 .",
    "for each node @xmath9 , let @xmath10 and @xmath11 denote the in - edges and out - edges of @xmath12 respectively .",
    "we also assume ( without loss of generality ) that if a network node has no in - edges , then it is a source node .",
    "we use @xmath13 to denote the number of sources @xmath14 in the network .",
    "an _ alphabet _ @xmath15 is a nonzero finite field . for any positive integer @xmath16 , any vector @xmath17 , and any @xmath18 , let @xmath19 denote the @xmath18-th component of @xmath20 . for any index set @xmath21 with @xmath22 , let @xmath23 denote the vector @xmath24 .",
    "network computing _ problem consists of a network @xmath0 , a source alphabet @xmath15 , and a _ target function _",
    "@xmath25 where @xmath26 is the _ decoding alphabet_. a target function @xmath27 is _ linear _ if there exists a matrix @xmath28 over @xmath15 such that @xmath29 where ` @xmath30 ' denotes matrix transposition . for linear target functions the decoding alphabet is of the form @xmath31 , with @xmath32 . without loss of generality , we assume that @xmath28 is full rank ( over @xmath15 ) and has no zero columns .",
    "for example , if @xmath28 is the @xmath33 identity matrix , then the receiver demands the complete set of source messages , and this corresponds to the classical network coding problem .",
    "on the other hand , if @xmath28 is the row vector of @xmath34 s , then the receiver demands a sum ( over @xmath15 ) of the source values .",
    "let @xmath35 be a positive integer . given a network @xmath0 with source set @xmath36 and alphabet @xmath15 , a _ message generator _",
    "is a mapping @xmath37 for each source @xmath38 , @xmath39 is called a _ message vector _ and it can be viewed as an element of @xmath40 ( rather than as a vector ) .    a _ linear network code _ in a network @xmath0 consists of the following :    * every edge @xmath41 _ carries an element _ of @xmath40 and this element",
    "is denoted by @xmath42 . for any node @xmath43 and any out - edge @xmath44",
    ", the network code specifies an _ encoding function _",
    "@xmath45 of the form : @xmath46 where @xmath47 for all @xmath48 . * the _ decoding function _",
    "@xmath49 outputs a vector of length @xmath50 whose @xmath51-th component is of the form : @xmath52 where @xmath53 for all @xmath54 .",
    "the arithmetic in and is performed over @xmath40 .    in this paper , by a _ network code _ , we always mean a linear network code . in the literature ,",
    "the class of network codes we define here is referred to as _ scalar linear codes .",
    "_ these codes were introduced and studied in @xcite .",
    "a more general class of linear codes over @xmath40 were defined and studied in @xcite .",
    "depending on the context , we may view @xmath42 as a vector of length-@xmath35 over @xmath55 or as an element of @xmath40 . without explicit mention , we use the fact that the addition of @xmath56 as elements of a finite field coincides with their sum as elements of a vector space over @xmath55 .",
    "furthermore , we also view @xmath55 as a subfield of @xmath40 without explicitly stating the inclusion map .",
    "let @xmath57 denote the vectors carried by the in - edges of the receiver .",
    "[ def : sol ] a linear network code over @xmath40 is called _ a linear solution for computing @xmath27 in @xmath0 _ ( or simply a _ linear solution _ if @xmath27 and @xmath0 are clear from the context ) if the decoding function @xmath49 is such that for every message generator @xmath58 , @xmath59    each source generates @xmath35 symbols over @xmath55 ( viewing @xmath40 as a vector space over @xmath55 ) and the decoder computes the target function @xmath27 for each set of source symbols .",
    "a set of edges @xmath60 is said to _ separate _",
    "sources @xmath61 from the receiver @xmath8 , if for each @xmath62 , every path from @xmath63 to @xmath8 contains at least one edge in @xmath64 .",
    "a set @xmath65 is said to be a _ cut _ if it separates at least one source from the receiver .",
    "let @xmath66 denote the set of all cuts in network @xmath0 .    for any matrix @xmath67 ,",
    "let @xmath68 denote its @xmath18-th column .",
    "for an index set @xmath69 , let @xmath70 denote the @xmath71 submatrix of @xmath72 obtained by choosing the columns of @xmath72 indexed by @xmath73 .",
    "if @xmath64 is a cut in a network @xmath0 , we define the set @xmath74 finally , for any network @xmath0 and matrix @xmath28 , we define @xmath75",
    "linear solvability for the classical network coding problem was shown to be equivalent to the existence of a non - empty algebraic variety in @xcite . in the following , we present an analogous characterization for computing linear functions , providing an algebraic test to determine whether a linear solution for computing a linear function exists .",
    "the reverse problem of constructing a multiple - receiver network coding ( respectively , network computing ) problem given an arbitrary set of polynomials , which is solvable if and only if the corresponding set of polynomials is simultaneously solvable is considered in reference @xcite ( respectively , @xcite ) .",
    "we begin by giving some definitions and stating a technical lemma , followed by the main theorem below .    for any edge @xmath76 ,",
    "let @xmath77 and @xmath78 .",
    "associated with a linear code over @xmath40 , we define the following three types of matrices :    * for each source @xmath79 , define the @xmath80 matrix @xmath81 as follows : @xmath82 * similarly define the @xmath83 matrix @xmath84 as follows : @xmath85 * define the @xmath86 matrix @xmath87 as follows : @xmath88    since the graph @xmath6 associated with the network is acyclic , we can assume that the edges @xmath89 are ordered such that the matrix @xmath87 is strictly upper - triangular .",
    "let @xmath90 denote the identity matrix of suitable dimension .",
    "consider a network @xmath0 with alphabet @xmath55 and consider a linear code over @xmath40 with associated matrices @xmath91 and @xmath87 .",
    "for every @xmath92 , define the @xmath93 matrix @xmath94 now let @xmath95 be a vector containing all the non - zero entries of the matrices @xmath96 , and let @xmath97 ( respectively , @xmath98 ) be a vector containing all the non - zero entries of the matrix @xmath84 ( respectively , @xmath87 ) .    by abusing notation , depending on the context",
    "we may view @xmath99 , @xmath100 , @xmath101 as elements of @xmath40 or as indeterminates .",
    "thus , each of the matrices defined above may either be a matrix over @xmath40 or a matrix over the polynomial ring @xmath102}$ ] .",
    "the context should make it clear which of these two notions is being referred to at any given point .",
    "[ lemma : koetter ] the following two statements hold :    1 .",
    "the matrix @xmath103 has a polynomial inverse with coefficients in @xmath104}$ ] , the ring of polynomials in the variables constituting @xmath98 .",
    "the decoding function can be written as @xmath105    the first assertion is a restatement of ( * ? ? ?",
    "* lemma  2 ) and the second assertion follows from ( * ? ? ?",
    "* theorem  3 ) .",
    "let @xmath106 be a polynomial ring .",
    "the ideal generated by a subset @xmath107 and denoted by @xmath108 is the smallest ideal in @xmath106 containing @xmath109 .",
    "let @xmath0 be a network with alphabet @xmath55 .",
    "let @xmath110}$ ] and @xmath111 .",
    "consider a linear network code for computing the linear function corresponding to @xmath28 in @xmath0 and the associated matrices @xmath112 over @xmath106 and define @xmath113 let @xmath114 denote the ideal generated by the elements of @xmath115 in the ring @xmath106 .",
    "more formally , let @xmath116 the polynomials @xmath117 are referred to as the _ generating polynomials _ of the ideal @xmath114 .",
    "we denote the grob@xmath118ner basis of an ideal generated by subset @xmath107 of a polynomial ring @xmath106 by @xmath119 .",
    "the following theorem is a consequence of hilbert nullstellensatz ( see ( * ? ? ?",
    "* lemma  viii.7.2 ) and the remark after ( * ? ? ?",
    "* proposition  viii.7.4 ) ) .",
    "[ th : gbasiscondition ] consider a network @xmath0 with alphabet @xmath55 and the linear target function @xmath27 corresponding to a matrix @xmath120 .",
    "there exists an @xmath121 and a linear solution over @xmath40 for computing @xmath27 in @xmath0 if and only if @xmath122 .    from lemma  [ lemma : koetter ]",
    ", the vector computed at the receiver can be written as @xmath123 on the other hand , to compute the linear function corresponding to @xmath28 , the decoding function must satisfy @xmath124}\\end{aligned}\\ ] ] it follows that the encoding coefficients in a linear solution must be such that @xmath125}\\end{aligned}\\ ] ] if we view the coding coefficients as variables , then it follows that a solution must simultaneously solve the generating polynomials of the corresponding ideal @xmath114 . by (",
    "* lemma  viii.7.2 ) , such a solution exists over the algebraic closure @xmath126 of @xmath55 if and only if @xmath127}$ ] .",
    "furthermore , @xmath127}$ ] if and only if @xmath122 .",
    "moreover , a solution exists over the algebraic closure @xmath126 of @xmath55 if and only if it exists over some extension field @xmath40 of @xmath55 and the proof is now complete .",
    "it is clear that the set of linear functions that can be solved in a network depends on the network topology .",
    "it is easily seen that a linear solution for computing a linear target function corresponding to @xmath111 exists only if the network @xmath0 is such that for every @xmath128 , the value of the cut @xmath129 is at least the rank of the submatrix @xmath130 ( recall that @xmath131 is the index set of the sources separated by the cut @xmath64 ) .",
    "this observation is stated in the following lemma which is an immediate consequence of the cut - based bound in ( * ? ? ?",
    "* theorem  2.1 ) .",
    "[ lemma : ub ] for a network @xmath0 , a necessary condition for the existence of a linear solution for computing the target function corresponding to @xmath111 is @xmath132    we now consider two special cases .",
    "first , consider the case in which the receiver demands all the source messages .",
    "the corresponding @xmath28 is given by the @xmath33 identity matrix @xmath90 and the condition @xmath133 reduces to @xmath134 i.e. , the number of edges in the cut be at least equal to the number of sources separated by the cut .",
    "second , consider the case in which the receiver demands the sum of the source messages .",
    "the corresponding matrix @xmath28 is an @xmath135 row vector and the requirement that @xmath133 reduces to @xmath136 i.e. , all the sources have a directed path to the receiver . for both of the above cases , the cut condition in lemma  [ lemma : ub ] is also sufficient for the existence of a solution .",
    "this is shown in ( * ? ? ?",
    "* theorem  3.1 and theorem  3.2 ) and is reported in the following lemma :    [ th : extremematrix ] let @xmath137 . for a network @xmath0 with the linear target function",
    "@xmath27 corresponding to a matrix @xmath120 , a linear solution exists if and only if @xmath133 .",
    "the focus in the rest of the paper is to extend above results to the case @xmath138 by using the algebraic test of theorem  [ th : gbasiscondition ] .",
    "in the following , we first define an equivalence relation among matrices and then use it to identify a set of functions that are linearly solvable in every network satisfying the condition @xmath133 .",
    "we then construct a linear function outside this set , and a corresponding network with @xmath133 , on which such a function can not be computed with linear codes .",
    "finally , we use this example as a building block to identify a set of linear functions for which there exist networks satisfying the min - cut condition and on which these functions are not solvable .",
    "notice that for a linear function with matrix @xmath111 , each column of @xmath72 corresponds to a single source node .",
    "hence , for every @xmath33 permutation matrix @xmath139 , computing @xmath140 is equivalent to computing @xmath141 after appropriately renaming the source nodes .",
    "furthermore , for every @xmath142 full rank matrix @xmath143 over @xmath55 , computing @xmath140 is equivalent to computing @xmath144 .",
    "these observations motivate the following definition :    let @xmath145 and @xmath146 .",
    "we say @xmath147 if there exist an invertible matrix @xmath143 of size @xmath142 and a permutation matrix @xmath139 of size @xmath33 such that @xmath148 , and @xmath149 if such @xmath143 and @xmath139 do not exist .",
    "since @xmath72 is assumed to be a full rank matrix , @xmath139 can be chosen such that the first @xmath50 columns of @xmath150 are linearly independent .",
    "let @xmath151 denote the first @xmath50 columns of @xmath150 . by choosing @xmath152 , we have @xmath153 where @xmath154 is an @xmath155 matrix .",
    "so for an arbitrary linear target function @xmath27 and an associated matrix @xmath28 , there exists an @xmath155 matrix @xmath154 such that @xmath156 . without loss of generality",
    ", we assume that each column of @xmath72 associated with a target function is non - zero .",
    "[ th : solvable ] consider a network @xmath0 with a linear target function corresponding to a matrix @xmath157 ( i.e. , @xmath158 ) . if @xmath159 where @xmath12 is a column vector of units , then a necessary and sufficient condition for the existence of a linear solution is @xmath133 .",
    "let @xmath160 . the ` necessary ' part is clear from lemma  [ lemma : ub ] .",
    "we now focus on the ` sufficiency ' part .",
    "notice that for each @xmath161 , the matrix @xmath162 ( computed as in ) is a row vector of length @xmath163 . stack these @xmath13 row vectors to form an @xmath164 matrix @xmath165 as follows , @xmath166 let @xmath167 denote the @xmath168 submatrix of @xmath165 obtained by deleting its @xmath18-th row .",
    "claim @xmath34 _ : the matrix @xmath169 has a non - zero determinant over the ring @xmath110}$ ] .",
    "claim @xmath170 _ : for each @xmath171 , we have @xmath172 .",
    "+ by claim 1 and the sparse zeros lemma @xcite , @xcite , it follows that that there exists some @xmath121 such that the variables @xmath173 can be assigned values over @xmath40 so that the @xmath164 matrix @xmath174 is such that any of its @xmath175 submatrices @xmath176 obtained by deleting the @xmath18-th row in @xmath165 , is full rank over @xmath40 .",
    "define two @xmath177 diagonal matrices @xmath178 and @xmath179 such that for @xmath180 @xmath181 now define the following matrices over @xmath40 : @xmath182 by by claim 2 it follows that @xmath183 exists .",
    "if the matrices @xmath184 , and @xmath185 define a linear network code , then by lemma  [ lemma : koetter ] , the vector received by @xmath8 can be written as , @xmath186 where , @xmath187 we have @xmath188 } \\nonumber \\\\ & =   \\begin{pmatrix } a_1 ( i - f)^{-1 } b^{t } m_{(s)}^{-1 }   \\\\ a_2 ( i - f)^{-1 } b^{t } m_{(s)}^{-1 } \\\\ \\vdots \\\\ a_s ( i - f)^{-1 } b^{t } m_{(s)}^{-1 } \\end{pmatrix } \\ d^{-1 } u    &   { & [ \\mbox{from   $ \\left ( ( m_{(s)}^{t})^{-1}\\right)^{t } = m_{(s)}^{-1}$ } ] } \\nonumber \\\\ & = \\begin{pmatrix }          i \\\\          a_s ( i - f)^{-1 } b^{t } m_{(s)}^{-1 }          \\end{pmatrix } \\ d^{-1 } u   & { & [ \\mbox{from   construction of $ m_{(s)}$ } ] } \\label{eq : nulling } \\\\",
    "\\begin{pmatrix }   \\bar{a}_1 ( i - f)^{-1 } \\bar{b}^{t } \\\\ \\bar{a}_2 ( i - f)^{-1 } \\bar{b}^{t } \\\\ \\vdots \\\\ \\bar{a}_s ( i - f)^{-1 } \\bar{b}^{t } \\end{pmatrix } & = \\begin{pmatrix }          u^{-1 } d \\\\          a_s ( i - f)^{-1 } b^{t } m_{(s)}^{-1 }          \\end{pmatrix } \\",
    "d^{-1 } u    &   { & [ \\mbox{from   \\eqref{eq : redefinea } and \\eqref{eq : nulling } } ] } \\nonumber \\\\        & = \\begin{pmatrix }          u^{-1 }   \\\\          { \\mathbf}{1}^{t }          \\end{pmatrix } \\ u & { & [ \\mbox{from   \\eqref{eq : diagonalmatrices } } ] }   \\nonumber \\\\        & = \\begin{pmatrix }          i   \\\\          { \\mathbf}{1}^{t } u          \\end{pmatrix }   \\nonumber \\\\          & = \\begin{pmatrix }          i \\\\",
    "u^{t }          \\end{pmatrix } \\label{eq : solmstar } \\\\",
    "\\bar{m}^{t } & =    \\begin{pmatrix }    i \\",
    "u \\end{pmatrix}. & { & [ \\mbox{from   \\eqref{eq : defmstar } and \\eqref{eq : solmstar } } ] } \\label{eq : solmstar1 } \\ ] ] by substituting in , we conclude that the receiver computes the desired linear function by employing the network code defined by the encoding matrices @xmath189 , @xmath185 , and @xmath87 .",
    "the proof of the theorem is now complete for the case when @xmath160 .",
    "if @xmath190 , then there exists a full - rank matrix @xmath143 and a column vector @xmath191 of non - zero elements over @xmath55 such that @xmath192}\\end{aligned}\\ ] ] since a full - rank linear operator preserves linear - independence among vectors , for every such full - rank matrix @xmath143 , we have @xmath193 equation implies that @xmath194 . since @xmath195 ,",
    "from the first part of the proof , there exist an @xmath121 and coding matrices @xmath96 , @xmath87 , and @xmath84 over @xmath40 such that the receiver can compute the linear target function corresponding to @xmath196 if and only if @xmath133 .",
    "it immediately follows that by utilizing a code corresponding to the coding matrices @xmath96 , @xmath87 , and @xmath197 , the receiver can compute the target function corresponding to @xmath198 .",
    "all that remains to be done is to provide proofs of claims @xmath34 and @xmath170 .",
    "+ _ proof of claim 1 _ : if a cut @xmath64 is such that @xmath199 , then @xmath200 } \\\\           & = { { \\left\\lvert { { k}_{c } } \\right\\rvert}}. & { & [ \\mbox{from   $ t = ( i \\ u )   $ } ] } \\end{aligned}\\ ] ] thus by ( * ? ? ?",
    "* theorem  3.1 ) , there exists a routing solution to compute the identity function of the sources @xmath201 at the receiver .",
    "let @xmath202 and let @xmath203 for some ( arbitrary ) @xmath51 . by lemma  [ lemma : koetter ] , after fixing @xmath204 , the vector received by @xmath8 can be written as @xmath205 the existence of a routing solution for computing the identity function guarantees that there exist @xmath206 such that the matrix @xmath207 has a non - zero determinant over @xmath55 .",
    "it follows that the determinant of @xmath207 is non - zero over @xmath208}$ ] .",
    "since @xmath209 was arbitrary in the above argument , it follows that the determinant of each @xmath210 is non - zero over @xmath208}$ ] and the claim follows .",
    "+ _ proof of claim 2 _ : we have @xmath211 where , @xmath212 follows from the definition of @xmath213 . by contraction ,",
    "assume that there exists an @xmath214 such that @xmath215 .",
    "it then follows that @xmath216 } \\label{eq : dependance}\\end{aligned}\\ ] ] for some choice of @xmath217 and @xmath218 } \\nonumber \\\\",
    "\\big ( a_s(i - f)^{-1}b^{t } - \\sum_{j=1}^{s-2 } \\left(a_s(i - f)^{-1}b^{t } m_{(s)}^{-1}\\right)_{i_j }    ( a_{i_j}(i - f)^{-1}b)^{t } \\big ) & = 0 . & { & [ \\mbox{from    $ m_{(s)}^{-1 } $ is full rank } ] }   \\label{eq : depend}\\end{aligned}\\ ] ] equation implies a linear dependence among @xmath163 rows of the matrix @xmath165 .",
    "this contradicts the fact that for each @xmath219 , @xmath167 is full rank .",
    "thus @xmath220 for @xmath171 and the claim follows .",
    "we provide the following communication - theoretic interpretation of our method of proof above .",
    "we may view the computation problem as a mimo ( multiple input multiple output ) channel where the multiple input is given by the vector of symbols generated by the sources , the output is the vector decoded by the receiver , and the channel is given by the network topology and the network code .",
    "our objective is to choose a channel to guarantee the desired output , by way of code design subject to the constraints imposed by network topology .",
    "the channel gain from source @xmath221 to the receiver is given by the vector @xmath222 of length @xmath163 .",
    "the first part of the proof utilizes the sparse zeros lemma to establish that there exists a choice of channels such that the channel between every set of @xmath163 sources and the receiver is invertible .",
    "this is similar to the proof of the multicast theorem in @xcite .",
    "in the second part of the proof , we recognize that the interference from different sources must also be `` aligned '' at the output for the receiver to be able to compute the desired function . accordingly",
    ", we have modified the code construction to provide such alignment .",
    "we now show the existence of a linear function that can not be computed on a network satisfying the min - cut condition .",
    "this network will then be used as a building block to show an analogous result for a larger class of functions .",
    "let @xmath223 denote the matrix @xmath224 and let @xmath225 denote the corresponding linear function .",
    "it is possible to show with some algebra that @xmath226 for any column vector @xmath12 of units , so that the conclusion of theorem  [ th : solvable ] does not hold . indeed , for the function @xmath225 the opposite conclusion is true , namely @xmath225 can not be computed over @xmath227 using linear codes .",
    "this is shown by the following lemma .",
    "[ lemma : gbasis1 ] let @xmath228 be the network shown in figure  [ fig : gbasis1 ] with alphabet @xmath55 .",
    "we have    1 .",
    "there does not exist a linear solution for computing @xmath225 in @xmath227 .    that @xmath229 is easily verified by considering the cut @xmath230 which attains the minimum .",
    "we now proceed to show , using theorem  [ th : gbasiscondition ] , that a linear solution does not exist .",
    "we may assume , without loss of generality , that the node @xmath231 sends its message directly to nodes @xmath232 and @xmath233 ( i.e. , @xmath234 ) .",
    "the matrices @xmath235 , and @xmath236 over @xmath106 can then be written as @xmath237 consequently , the ideal @xmath114 is given by @xmath238 we have @xmath239 thus , it follows that @xmath240 . by theorem",
    "[ th : gbasiscondition ] , a linear solution does not exist for computing @xmath225 in @xmath228 .",
    "we now identify a much larger class of linear functions for which there exist networks satisfying the min - cut condition but for which linear solutions do not exist .",
    "let @xmath154 be an @xmath155 matrix with at least one zero element and @xmath156 .",
    "for each @xmath28 in this equivalence class we show that there exist a network @xmath0 that does not have a solution for computing the linear target function corresponding to @xmath28 but satisfies the cut condition in lemma  [ lemma : ub ] .",
    "the main idea of the proof is to establish that a solution for computing such a function in network @xmath0 implies a solution for computing the function corresponding to @xmath241 in @xmath228 , and then to use lemma  [ lemma : gbasis1 ] .",
    "[ th : insolvable ] consider a linear target function @xmath27 corresponding to a matrix @xmath67 .",
    "if @xmath242 such that at least one element of @xmath154 is zero , then there exists a network @xmath0 such that    1 .",
    "there does not exist a linear solution for computing @xmath27 in @xmath0 .",
    "let @xmath244 and let @xmath245 denote the corresponding linear target function .",
    "it is enough to show that there exists a network @xmath246 such that @xmath247 but @xmath246 does not have a linear solution for computing @xmath245 .",
    "this is because a network @xmath0 that does not have a solution for computing @xmath28 is easily obtained by renaming the sources in @xmath246 as follows : since @xmath156 , there exist @xmath143 and @xmath139 such that @xmath248 .",
    "let @xmath249 denote the permutation function on the set @xmath250 defined by the permutation matrix @xmath251 .",
    "obtain the network @xmath0 by relabeling source @xmath221 in @xmath246 as @xmath252 . to see that there does not exist a solution for computing @xmath27 in @xmath0 , assume to the contrary that a solution exists . by using the same network code in @xmath246 ,",
    "the receiver computes @xmath253 thus the receiver in @xmath246 can compute @xmath254 , which is a contradiction .",
    "now we construct the network @xmath246 as claimed .",
    "since @xmath154 has at least once zero element , there exists a @xmath255 such that @xmath151 has a zero in @xmath256-th column .",
    "define @xmath257 denote the elements of @xmath258 by @xmath259 let @xmath260 be an element of @xmath261 ( such a @xmath260 exists from the fact that the @xmath256-th column contains at least one zero ) and define @xmath262 and denote the elements of @xmath263 by @xmath264 since @xmath265 does not contain an all - zero column , @xmath266 .",
    "now , let @xmath246 denote the network shown in figure  [ fig : insolvability ] where , @xmath267 denotes a relay node .",
    "it follows from the construction that @xmath268 which is equal to the transfer matrix @xmath223 defined in .",
    "notice that in the special case when @xmath269 and @xmath270 , the network shown in figure  [ fig : insolvability ] reduces to the network shown in figure  [ fig : reducedsum2 ] which is equivalent to the network @xmath228 in figure  [ fig : gbasis1 ] with target function @xmath225 .",
    "since @xmath228 does not have a solution for computing @xmath225 by lemma  [ lemma : gbasis1 ] , we conclude that @xmath228 can not have a solution either .",
    "similarly , we now show that in the general case , if the network @xmath271 has a solution for computing @xmath245 , then such a solution induces a solution for computing @xmath225 in network @xmath228 , contradicting lemma  [ lemma : gbasis1 ] .",
    "let there exist an @xmath121 for which there is a linear solution for computing @xmath245 over @xmath246 using an alphabet over @xmath40 .",
    "in any such solution , for each @xmath272 , the encoding function on the edge @xmath273 must be of the form @xmath274 for some @xmath275 . since @xmath273 is the only path from source @xmath276 to the receiver , it is obvious that @xmath277 .",
    "we define the map @xmath58 as follows .",
    "let @xmath278 be arbitrary elements of @xmath40 and let @xmath279 note that @xmath58 has been chosen such that for any choice of @xmath280 , and @xmath281 , every edge @xmath282 carries the zero vector .",
    "furthermore , for the above choice of @xmath58 , the target function associated with @xmath265 reduces to @xmath283 substituting @xmath284 and @xmath285 in , it follows that the receiver can compute @xmath286 from the vectors received on edges @xmath287 and @xmath288 .",
    "consequently , it follows that there exist a linear solution over @xmath40 for computing the linear target function associated with the transfer matrix @xmath289    in the network shown in figure  [ fig : reducedsum2 ] .",
    "it is easy to see that the existence of such a code implies a scalar linear solution for computing @xmath225 in @xmath228 .",
    "this establishes the desired contradiction .    finally , we show that @xmath243 .",
    "let @xmath128 be a cut such that @xmath290 ( i.e , @xmath64 separates sources from only the top and middle rows in the network @xmath246 ) .",
    "we have the following two cases :    1 .   if @xmath291 , then it is easy to see that @xmath292 .",
    "similarly , if @xmath293 and @xmath294 , then again @xmath292 .",
    "consequently , we have @xmath295 } \\nonumber \\\\                                                                  & \\ge 1 .",
    "& { & [ \\mbox{from   $ { { \\left\\lvert c \\right\\rvert } } \\ge { { \\left\\lvert k_c \\right\\rvert}}$ } ] } \\label{eq : mincutfornp1}\\end{aligned}\\ ] ] 2 .   if @xmath293 and @xmath296 , then from figure  [ fig : reducedsum2 ] , @xmath297 and @xmath298 .",
    "moreover , the index set @xmath258 was constructed such that @xmath299 consequently , we have @xmath300 } \\nonumber \\\\                               & \\le { { \\left\\lvert k \\right\\rvert } } + 1                          & { & [ \\mbox{from   \\eqref{eq : linearrelation } } ] } \\nonumber \\\\                               & = { { \\left\\lvert c \\right\\rvert}}. \\label{eq : mincutfornp2}\\end{aligned}\\ ] ]    from and , we conclude that if @xmath290 , then @xmath301 for an arbitrary cut @xmath128 , let @xmath302 denote the number of sources in @xmath263 that are separated from the receiver by @xmath64 ( i.e , @xmath303 ) .",
    "we have @xmath304 since each source in @xmath263 is directly connected to the receiver , @xmath305 is equal to the number of edges in @xmath64 separating the sources in @xmath306 from the receiver .",
    "consequently , from , it follows that @xmath307 substituting in , we conclude that for all @xmath128 @xmath132 since the edge @xmath308 disconnects the source @xmath309 from the receiver , @xmath310 is immediate and the proof of the theorem is now complete .",
    "we now consider the case in which the source alphabet is over the binary field . in this case",
    ", we have that the two function classes identified by theorems  [ th : solvable ] and [ th : insolvable ] are complements of each other , namely either @xmath311 or @xmath156 with @xmath154 containing at least one zero element .",
    "[ lemma : binaryfield ] let @xmath138 and let @xmath145 . if @xmath312 , then there exists an @xmath313 matrix @xmath154 such that @xmath154 has at least one zero element and @xmath156 .    since @xmath28 is assumed to have a full row rank , @xmath314 for some @xmath313 matrix @xmath315 over @xmath316 .",
    "if @xmath317 has @xmath318 s , then we are done .",
    "assume to the contrary that @xmath317 is a matrix of non - zero elements .",
    "we only need to consider the case when @xmath319 ( since @xmath312 ) . for @xmath320 ,",
    "let @xmath321 denote the @xmath18-th column vector of the @xmath142 identity matrix .",
    "define @xmath322 and let @xmath139 be a permutation matrix that interchanges the @xmath50-th and @xmath323-th columns and leaves the remaining columns unchanged .",
    "it is now easy to verify that @xmath324 where @xmath154 is an @xmath155 matrix with at least one @xmath318 element : for @xmath325 @xmath326 thus , @xmath327 and by transitivity we conclude that @xmath156 which proves the claim .",
    "we wish to mention the following open problems arising from this work .",
    "* is there a graph - theoretic condition that allows to determine whether a given network is solvable with reference to a given linear function ? we have provided an algebraic test in terms of the grob@xmath118ner basis of a corresponding ideal , but we wish to know whether there is there an algorithmically more efficient test . *",
    "we showed that @xmath243 is not sufficient to guarantee solvability for a certain class of linear functions .",
    "a possible direction of future research is to ask whether there is a constant @xmath328 such that @xmath329 guarantees solvability . alternatively , for every constant @xmath328",
    ", does there exist a network @xmath0 and a matrix @xmath28 such that @xmath329 and @xmath0 does not have a linear solution for computing the linear target function associated with @xmath28 ?",
    "[ lemma : equivalencelinearfunctions ] let @xmath67 .",
    "if @xmath330 is a column vector of non - zero elements and @xmath190 , then there exists a full rank matrix @xmath143 and a column vector @xmath191 of non - zero elements over @xmath55 such that @xmath331 .",
    "let @xmath143 denote the matrix obtained by collecting the first @xmath332 columns of @xmath28 .",
    "we will first show that the matrix @xmath143 is full - rank .",
    "after factoring out @xmath143 , we then prove that the last column must have non - zero entries .",
    "since @xmath333 , there exists a full - rank matrix @xmath334 and a permutation matrix @xmath335 such that @xmath336 from , the columns of @xmath143 are constituted by the columns of @xmath334 in which case @xmath143 is full - rank , or columns of @xmath143 contains @xmath337 columns of @xmath334 and @xmath338 .",
    "we will now show that the vector @xmath338 can not be written as a linear combination of any set of @xmath339 column vectors of @xmath334 .",
    "assume to the contrary that there exist @xmath340 for @xmath341 such that @xmath342 where @xmath343 denotes the @xmath51-th column of @xmath334 .",
    "let @xmath344 denote the vector such that @xmath345 , and @xmath346 .",
    "we have @xmath347 } \\nonumber \\\\ \\bar{q } ( u - a ) & = 0 & { & [ \\mbox{from   \\eqref{eq : dependence}}]}. \\label{eq : contradiction}\\end{aligned}\\ ] ] contradicts the fact that @xmath334 is full - rank .",
    "hence @xmath348 s satisfying do not exist and consequently , @xmath143 is a full - rank matrix .",
    "we now have @xmath349 where @xmath350 and hence @xmath351 .",
    "furthermore , @xmath352 and @xmath353 implies that @xmath354 .",
    "thus , there exists a full - rank matrix @xmath154 and a permutation matrix @xmath139 such that @xmath355 let @xmath321 denote the @xmath18-th column of @xmath90 .",
    "it follows from that either @xmath212 @xmath356 and @xmath154 itself is an @xmath175 permutation matrix , or @xmath357 for some @xmath358 , @xmath51-th column of @xmath154 is @xmath12 , and the remaining columns must constitute the @xmath339 columns @xmath359 of @xmath90 for some @xmath256",
    ". if @xmath212 is true , then @xmath360 and the elements of @xmath191 are non - zero since @xmath361 is another permutation matrix . if @xmath357 is true , then @xmath362 and it must be that @xmath363 ( if @xmath364 , then @xmath365 which contradicts @xmath362 )",
    ". let @xmath366 .",
    "we must have @xmath367 if we denote the number of non - zero entries in a vector @xmath12 by @xmath368 , then we have @xmath369 } \\nonumber \\\\     & = ( s-1 ) - { { \\left\\lvert d \\right\\rvert } } \\nonumber \\\\     & \\ge 1 & { & [ \\mbox{from",
    "$ { { \\left\\lvert d \\right\\rvert } } \\le s-2 $ } ] } \\label{eq : sandwich}\\end{aligned}\\ ] ] from , it follows that @xmath370 and consequently that every element of @xmath191 is non - zero .",
    "the proof of the lemma is now complete .",
    "10 r. ahlswede , n. cai , s .- y .",
    "r. li , and r. w. yeung , `` network information flow '' , _ ieee transactions on information theory _ , vol .",
    "it-46 , no .",
    "4 , pp . 12041216 , july 2000 .",
    "r. koetter and m. mdard , `` an algebraic approach to network coding , '' _ ieee / acm transactions on networking _ , vol .",
    "5 , pp . 782795 , oct . 2003 .",
    "h. kowshik and p. r. kumar , `` zero error function computation in sensor networks '' , _ proceedings of the ieee conference on decision and control _ , 2009",
    ". b. k. rai , and b. k. dey , `` sum - networks : system of polynomial equations , unachievability of coding capacity , reversibility , insufficiency of linear network coding , '' http://arxiv.org/abs/0906.0695 , 2009 .",
    "a. ramamoorthy , `` communicating the sum of sources over a network , '' _ proceedings of the ieee international symposium on information theory _ ,",
    "toronto , canada , 2008 .",
    "n. ma , p. ishwar , and p. gupta , `` information - theoretic bounds for multiround function computation in collocated networks , '' _ proceedings of the ieee international symposium on information theory _",
    ", pp . 23062310 , 2009 .",
    "b. nazer and m. gastpar , `` computing over multiple - access channels , '' _ ieee transactions on information theory _ , vol .",
    "53 , pp . 34983516 , oct .",
    "r. dougherty , c. freiling , and k. zeger , `` insufficiency of linear coding in network information flow , '' _ ieee transactions on information theory _ ,",
    "51 , no . 8 , pp . 2745 - 2759 , august 2005 .",
    "r. dougherty , c. freiling , and k. zeger , `` linear network codes and systems of polynomial equations '' , _ ieee transactions on information theory _ vol .",
    "5 , pp . 2303 - 2316 , may 2008 .",
    "r. appuswamy , m. franceschetti , n. karamchandani , and k. zeger , `` network coding for computing : cut - set bounds '' , _ to appear in ieee transactions on information theory _ , feb .",
    "r. appuswamy , m. franceschetti , n. karamchandani , and k. zeger , `` network coding for computing : linear codes '' , _ submitted to ieee transactions on information theory _ , 2010 .",
    "j. t. schwartz , `` fast probabilistic algorithms for verification of polynomial identities '' , _ j. acm . _ , vol .",
    "701 - 717 , 1980 .",
    "hungerford , `` algebra '' , _",
    "springer - verlag _ , 1997 ."
  ],
  "abstract_text": [
    "<S> we consider the scenario in which a set of sources generate messages in a network and a receiver node demands an arbitrary _ linear function _ of these messages . </S>",
    "<S> we formulate an algebraic test to determine whether an arbitrary network can compute linear functions using _ </S>",
    "<S> linear codes_. we identify a class of linear functions that can be computed using linear codes in every network that satisfies a natural cut - based condition . </S>",
    "<S> conversely , for another class of linear functions , we show that the cut - based condition does not guarantee the existence of a linear coding solution . for linear functions over the binary field , </S>",
    "<S> the two classes are complements of each other </S>",
    "<S> .    [ section ] [ theorem ] lemma [ theorem ] corollary [ theorem ] proposition    [ theorem ] remark [ theorem ] algorithm [ theorem ] conjecture    [ theorem ] definition [ theorem ] example </S>"
  ]
}
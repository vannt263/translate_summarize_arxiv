{
  "article_text": [
    "networks are a powerful tool to model real - life complex systems in many research fields like biology , sociology , economy and computer science @xcite . due to their dynamics and sheer size , networks representing online social networks , e.g. , facebook ,",
    "are a fascinating , and challenging , example of network models .",
    "most networks representing real - life systems show the so - called _ community structure feature _ @xcite : vertices tend to organize themselves in groups ( called _ communities _ or _ clusters _ ) such that the number of edges linking vertices of the same group is much higher than the number of edges joining vertices belonging to different groups .",
    "the ability to detect a community within a larger network plays a key role in understanding how systems are organized : communities , in fact , can be regarded as _",
    "modules _ whose functions or properties are , to some extent , separable from other modules .",
    "the detection of communities is instrumental in understanding what are the main modules composing a real - life system , how these modules interact and , finally , how they evolve and impact the overall network and its functions .",
    "concrete examples from the biological domain rise from the task of understanding the functioning of metabolic networks @xcite , gene regulatory networks @xcite or other forms of interactions among proteins @xcite .    in computer science and sociology ,",
    "community detection algorithms are a powerful tool to understand how humans interact .",
    "there are , in fact , many reasons prompting users to join communities or to form new ones : people may decide to join a community because they share some interests with other community members @xcite or because their attributes ( like class or race ) or cultural interests match well with those of the members of an already established community @xcite .",
    "finally , the sociology literature shows that other factors ( like ideologies , and attitudes of the members of a community ) can prompt a user to join a community @xcite . understanding the processes leading a user to join a community can , therefore , have a deep practical impact : for instance , in the design of advertisement and business applications , it is crucial to understand whether or not communities in a social network consist of persons sharing the same needs and tastes .",
    "if such an hypothesis holds true it is possible to selectively disseminate commercial advertisements only to its members ( who might be interested in those ads ) rather than to the whole audience of the social network .    due to its relevance ,",
    "community detection has attracted the interest of many researchers and several , often interdisciplinary , approaches have been proposed .",
    "most of the existing community detection approaches aim at finding pairwise disjoint communities , i.e. , communities that do not share members ( represented by vertices of the network ) . however , in the latest years , some researchers started studying the problem of finding _ overlapping communities _",
    ", i.e. , a relaxed version where a given vertex may belong to multiple communities @xcite .    a major avenue to finding communities relies on the so - called _ spectral clustering techniques _ @xcite .",
    "spectral clustering aims at partitioning a graph into subsets of vertices , called _ cuts .",
    "_ the problem of finding the optimal cuts is formulated as an optimization problem .",
    "the main limitation of spectral clustering is that one has to know , or fix , in advance the number and the size of communities in the network .",
    "hence , this strategy is unfeasible when the purpose is to discover the unknown community structure of a network .",
    "a further and relevant research line coincides with the introduction of a function called _ network modularity _",
    "( usually denoted as @xmath0 ) to quantitatively assess how structured in communities a given network is @xcite . in brief , the network modularity of a given network @xmath1 is defined as the fraction of all edges that lie within communities minus the expected value of the same quantity in a _ random graph _",
    "@xmath2 so that : i ) it has the same number of vertices of @xmath1 , ii ) each vertex of @xmath2 has the same degree of its peer in @xmath1 and iii ) edges are placed randomly with uniform probability .    the introduction of the network modularity allows to turn the problem of finding communities into an _ optimization problem _ whose goal is to find a partitioning of the network capable of maximizing @xmath0 .",
    "unfortunately , the maximization of @xmath0 is an _ np - hard _",
    "problem @xcite thus heuristics are required to find solutions ( even near - optimal ) and , at the same time , to guarantee reasonable computational costs / scalability .",
    "existing approaches based on modularity maximization suffer , however , from two major drawbacks .",
    "the first drawback is that methods that are actually able to achieve high values for @xmath0 work only on networks of small / medium size .",
    "consider , for instance , the first ( and one of the most popular ) algorithm to maximize modularity : the _ girvan - newman _ algorithm @xcite .",
    "it iteratively removes edges , with the goal of partitioning the network into increasingly - disjoint communities .",
    "edges to be removed are selected according to their _ betwenness centrality _ : a measure of fraction of shortest paths between vertices that traverse that particular edge . which in turn is a computationally - heavy measure , as it depends directly on the number of vertices .",
    "hence , girvan - newman and similar methods are computationally expensive and do not scale well to the size of real - life networks consisting of , at least , millions of vertices and edges .",
    "indeed , methods explicitly designed to handle large networks are based on optimization techniques like _ simulated annealing _ @xcite or _ extremal optimization _",
    "@xcite and , therefore , the solution they produce may be sub - optimal .",
    "the second drawback is the so - called _ resolution limit _",
    "@xcite : communities consisting of a number of vertices smaller than a threshold ( which in turn depends on the number of edges of the network ) are not detected because the optimization procedure combines  with the goal of maximizing _ q _  small groups of vertices into larger ones .",
    "several procedures have been proposed to alleviate the resolution limit problem such as providing novel definition of modularity @xcite or adding weights to the edges @xcite . to sum it up , despite the recent advances ,",
    "community detection is still an open problem , even more so when we consider the growth , in sheer size and complexity , of online social networks .    in this article",
    "we propose a novel strategy to finding communities in networks which is based on the idea of introducing a measure of edge centrality and weighting edges according to their centrality .",
    "our ultimate goal , therefore , is meta - algorithmic : _ not to introduce yet another community detection algorithm but to develop a pre - processing step devoted to weight the edges of the network .",
    "once the weights have been computed , existing community detection algorithms will execute with better results_.    the basis of our approach to the definition of edge weights , is the observation that in real - life social networks , a community can be intuitively depicted as a group of participants ( vertices ) which _ frequently interact with each other _ ( or at least more frequently than they do with third parties ) . for instance , studies on online social networks like facebook @xcite or twitter @xcite have shown that individuals belonging to the same community tend to frequently exchange messages with each other and seldom with people residing out of the community itself .",
    "this implies the existence of preferential pathways along which information flows easily .",
    "hence , social links can be ranked according to their capacity to facilitate the process of information propagation .",
    "in fact , we believe that our approach represents a breakthrough because the methods considered until now _ rely only _ on the knowledge of the network topology whereas our approach suggests to complement information related to the network topology with information assessing the tendency of each edge to transfer information .",
    "a parameter similar to our edge weighting was proposed by fortunato et al . in @xcite and is called _",
    "efficiency_. the efficiency of a pair of vertices _ i _ and _ j _ is defined as the inverse of the length of the shortest path(s ) connecting _",
    "i _ to _ j. _ the efficiency measure was used in the same paper to design a greedy algorithm to find communities ; experimental results were carried out over real and artificial small networks to provide an evidence of the effectiveness of this parameter .",
    "unfortunately , efficiency can not be generalized to large - scale networks like facebook .",
    "in fact , to compute shortest paths , the whole network topology should be inspected and such an assumption does not hold true in real social networks . in any case , computing shortest paths in networks is costly , thus the computation of the network efficiency could be unfeasible over large networks .",
    "our approach is tailored to large networks and addresses those issues by means of the _ random walks _",
    "technique to simulate message passing .",
    "random walks have been successfully exploited to simulate message passing in networks with the goal of computing _ node centrality _",
    "@xcite and , in this article , we propose to extend them to the computation of edge weights .",
    "we execute multiple random walks and assign to edges a weight that is equal to the cumulative frequency of selecting that edge in a simulated random walk .",
    "this choice is in keep with our previous considerations because , in our procedure , an edge has a high rank if it is frequently selected , i.e. , if it is frequently exploited to convey messages .",
    "in addition , paths generated in our simulations have to satisfy two further requirements : _ ( i ) _ an edge can be selected only once in a random walk in order to avoid that the weight of an edge may be excessively inflated , and _",
    "( ii ) _ the random walks consist of up to @xmath3 edges , @xmath3 being a fixed integer . in such a way , we acknowledge friedkin s postulate @xcite that the more distant two vertices , the less they influence each other . moreover , the message propagation process is intended as a finite - steps process instead of a infinite one , which is reasonable in the context of real - life and online social networks where the spread of a given information sooner or later _ stops . _",
    "the weight associated with each edge according to this strategy is called @xmath3-_path edge centrality_. its accuracy as an estimate of an edge s _ importance _ depends , of course , on several factors , including the number of random walks attempted and possible biases . to the best of our knowledge , there are only two previous works concerning edge weighting in community detection , i.e. , @xcite and @xcite . in those approaches",
    "the weight of a target edge is determined by computing some global network metrics like _ edge betwenness _",
    "@xcite or by considering cycles of fixed length _",
    "k _ that include the target edge @xcite .",
    "inevitably , those approaches may not scale up well .",
    "our approach differs from those previous works since it exploits random walks to compute edge weights and , therefore , it does not require to know in advance the whole network topology .    to sum it up ,",
    "these are the main contributions of this article :    * we provide a formal definition of @xmath3-path edge centrality and describe an approximate algorithm called werw - kpath ( _ weighted edge random walk _",
    "- @xmath3 _ path _ ) to efficiently compute the @xmath3-path edge centrality .",
    "* we prove that our werw - kpath algorithm can approximate the actual value of centrality of an arbitrary edge with an error less than @xmath4 , @xmath5 being the number of edges in the network , by performing @xmath6 iterations .",
    "the werw - kpath algorithm is fast because its computational complexity is _ nearly - linear _ in the number of edges of the network but , at the same time , it yields precise results .",
    "* we show how our edge weighting procedure can be combined with three existing , state - of - the - art algorithms for community detection , namely the _ louvain method _",
    "@xcite , copra @xcite and oslom @xcite .",
    "* we report on the experimental assessment of our approach on both real and artificial network datasets .",
    "in particular , we considered 9 real - world network datasets and the largest , a sample from facebook , consists of 613,497 vertices and 2,045,030 edges .",
    "experiments on those networks show that combining werw - kpath with the algorithms mentioned above leads to an increase of network modularity up to 16% .",
    "+ regarding the artificial networks , the experimental validation was conducted as follows : first , 72 artificial networks were generated , by exploiting the lfr benchmark @xcite ; in this way , we managed networks whose community structure was known in advance .",
    "then , we compared communities found by our approach in conjunction with the three methods above by using the so - called _ normalized mutual information _ measure from information theory .",
    "experiments on these networks showed that our approach is able to alleviate the _ resolution limit _ problem . to make our research results reproducible , the prototype we implemented is freely available for download .",
    "this article is organized as follows : in section [ sec : background ] we review existing approaches to finding communities in networks , whereas in section [ sec : overview ] we describe in detail our approach . in section [ sec : edgeweigthcomputation ] we discuss the werw - kpath algorithm ; section [ sec : communitydetection ] describes our proposal of adopting the werw - kpath algorithm in conjunction with community detection algorithms to enhance their performance . section [ sec : experiments ] is devoted to illustrate the experiments we carried out and to discuss the results .",
    "section [ sec : related ] covers some related literature and , finally , in section [ sec : conclusions ] , we draw our conclusions and discuss possible developments .",
    "recently , a huge amount of research work has concerned the detection of community structures inside networks . in this section",
    "we describe some of the existing approaches to detecting communities ; here and throughout this article we will use the terms _ network _ and _ graph _ interchangeably . of course",
    ", the material presented in this section can not be exhaustive and we refer the reader to comprehensive surveys like @xcite .    given a network represented by a graph @xmath7 , the _ community structure _ is a partition @xmath8 of the vertices of @xmath9 such that , for each @xmath10 , the number of edges linking vertices in @xmath11 is high in comparison to the number of edges linking vertices on two distinct sets .",
    "each set @xmath11 is called _ community_.    today , the most popular techniques to find communities are : _ ( i ) spectral clustering _ , and , _ ( ii ) network modularity maximization . _ in the following we shall discuss approaches belonging to each of these categories in detail .",
    "spectral clustering techniques rely on the idea of partitioning a graph into subsets of vertices , called _",
    "cuts_. the number of cuts to be generated is fixed in such a way as to minimize a given objective function .",
    "the maximization of this objective function , however , has been proved to be _ np - hard .",
    "_ therefore , different approximate techniques have been proposed .",
    "for instance , in @xcite , the authors suggest to use the _ laplacian matrix _",
    "@xmath12 of a graph @xmath9 .",
    "we recall that the laplacian matrix @xmath12 of @xmath7 is a @xmath13 matrix such that @xmath14 , where @xmath15 is the degree of a vertex @xmath16 , @xmath17 is the _ kronecker symbol _ ( that is , @xmath18 if and only if @xmath19 and 0 otherwise ) and @xmath20 is the adjacency matrix of @xmath9 .",
    "authors in @xcite propose to compute the top-@xmath21 eigenvectors of @xmath12 , i.e. , the eigenvector of @xmath12 associated with the @xmath21 eigenvalues having the largest magnitude .",
    "the space of objects to cluster ( _ source space _ ) is then mapped onto the space generated by these eigenvectors ( _ target space _ ) .",
    "finally , the _ k - means clustering algorithm _",
    "@xcite is applied on the points in the target space ( with @xmath21 dimensions ) .",
    "another approach relies on the strategy of _ ratio cut partitioning _",
    "this is a function that , if minimized , allows the identification of large clusters with a minimum number of outgoing interconnections .",
    "more recently , some authors @xcite rely on the spectral decomposition of sparse matrices to find communities .",
    "the main issue with spectral clustering techniques is that one has to know in advance the number and the size of communities comprised in the given network .",
    "this makes this strategy unfeasible if the purpose is to unveil the community structure of a network . finally , shah et al .",
    "@xcite proved that this strategy could not work well if the given network contains densely - connected yet small - sized communities .",
    "strategies based on network modularity define a measure , called _ modularity _ and usually denoted as _",
    "q , _ to assess the quality of a partitioning of a graph @xmath9 and aim at finding the partition of _ g _ that maximizes _ q. _ approaches based on network modularity rely on the idea that _ random graphs _ are not expected to exhibit a _ community structure_. therefore , given a graph @xmath9 and a subgraph @xmath22 , the _ null model _ @xmath23 associated with @xmath9 is defined as a graph having the same number of vertices of @xmath9 and obtained by preserving some of the structural properties of @xmath9 . for instance , @xmath23 could have the same number of edges of @xmath9 but these edges could be placed with a uniform probability among all pairs of nodes ; in such a case @xmath23 is an example of a _ bernoulli random graph _ @xcite .",
    "thanks to the _ null model _ , it is possible to decide whether a subgraph @xmath22 is a cluster or not .",
    "in fact , since @xmath9 and @xmath23 have the same vertices , we can consider the subgraph @xmath24 obtained by isolating , in @xmath23 , the vertices forming @xmath25 in @xmath9 .",
    "as claimed before , the null model is expected to _ exibit no community structure _ and ,",
    "therefore , we expect that @xmath26 is _ not _ a community .",
    "therefore , if the density of internal edges of @xmath25 is higher than that of @xmath26 , we can conclude that @xmath25 is a community .",
    "accordingly , the network modularity function is defined as follows    @xmath27    here @xmath28 is the total number of edges in @xmath9 , @xmath20 is the adjacency matrix of @xmath9 ( i.e. , @xmath29 if there is an edge from @xmath16 to @xmath30 and 0 otherwise , @xmath31 is the expected number of edges between @xmath16 and @xmath30 in the null model is a real number in @xmath32 $ ] . ] . as usual",
    ", @xmath33 is the kronecker symbol .    various null models are , in principle , allowed and , for each of them , we could derive a suitable expression for @xmath31 .",
    "the most common choice , however , is to assume that @xmath31 is proportional to the product of the degrees @xmath15 and @xmath34 of @xmath16 and @xmath30 respectively . according to this choice",
    ", @xmath0 can be rewritten as follows    @xmath35    equation [ eqn : qmodexp ] can be simplified by observing that only vertices belonging to the same community provide a non - zero contribution to the sum .",
    "in fact , if @xmath16 and @xmath30 would belong to different communities then @xmath36 and @xmath37 by definition . as a result , we can rewrite the modularity function @xmath0 as follows    @xmath38\\ ] ]    where @xmath39 is the number of communities , @xmath40 is the total number of edges joining vertices inside the community @xmath41 and @xmath42 is the sum of the degrees of the vertices composing @xmath41 . in equation , for a fixed community @xmath41 , the first term , i.e. , @xmath43 ( called _ coverage _ ) is the fraction of the edges of the graph inside @xmath41 , whereas the second term @xmath44 is the expected fraction of edges that would belong to @xmath41 in a random graph with the same degree distribution of @xmath9 .    the problem of maximizing @xmath0 has been proved to be _ np - hard _ @xcite . to this purpose , several heuristic strategies to maximize the network modularity @xmath0 have been proposed as to date .",
    "probably , the most popular one is known as the _ girvan - newman strategy _ @xcite .    in this approach",
    ", edges are ranked by using a parameter known as _ edge betweenness centrality_. the edge betweenness centrality @xmath45 of a given edge @xmath46 is defined as    @xmath47    where @xmath48 and @xmath49 are vertices in @xmath50 , @xmath51 is the number of shortest paths connecting @xmath48 and @xmath49 and @xmath52 is the number of the shortest paths between @xmath48 and @xmath49 containing @xmath53 .    given the definition of edge betweenness centrality , it is possible to maximize the network modularity by _ progressively deleting _ edges with the highest value of betweenness centrality , based on the consideration that they shall connect vertices belonging to different communities @xcite .",
    "the process iterates until a significant increase of @xmath0 is obtained . at each iteration , each connected component of @xmath9 identifies a community . unfortunately , the computational cost of this strategy is @xmath54 and this makes it unsuitable for the analysis of large networks . the most time - expensive part of the girvan - newman strategy is the calculation of the betweenness centrality .",
    "efficient algorithms have been designed to approximate the edge betweenness @xcite ; for real - life networks the computational costs still remains prohibitive , unfortunately .",
    "several variants of this strategy have been proposed during the years , such as the _ fast clustering algorithm _ provided by clauset , newman and moore @xcite , that runs in @xmath55 on sparse graphs . in @xcite , duch and",
    "arenas proposed the _ extremal optimization method _ based on a fast agglomerative approach whose worst - case time complexity is @xmath56 .",
    "an interesting network modularity maximization strategy is provided in the so - called _ louvain method _ ( lm ) @xcite .",
    "lm has been tested in our experimental trials in conjunction with our approach to weighting edges ; we present a detailed description of it in section [ sec : communitydetection ] .",
    "the approaches mentioned above use _ greedy strategies _ to maximize @xmath0 .",
    "in @xcite the authors propose to use _ simulated annealing _ to maximize @xmath0 .",
    "this approach achieves a high accuracy but can as well be computationally very expensive . in general terms",
    ", the advantage of simulated annealing techniques is that they do not suffer of the problem of getting stuck in local optima , differently from greedy algorithms .",
    "the algorithms presented above aim at finding _ disjoint partitions _ , i.e. , partitions in which each vertex belongs to _ exactly one _ community .",
    "it is interesting , also for practical purposes , to consider the relaxed case where vertices may happen to belong to different communities . to clarify this concept ,",
    "let us consider a network of researchers in computer science and observe that a researcher may belong to multiple communities like database and artificial intelligence .",
    "communities sharing one or more vertices are said to be _ overlapping _ and the task of finding overlapping communities in networks has become one of the most popular research topics in complex networks research areas @xcite .    to the best of our knowledge ,",
    "one of the first attempts to discover overlapping communities is due to palla et al .",
    "@xcite who introduced _ cfinder ; _ it detects communities by finding _",
    "cliques _ of size @xmath21 , where @xmath21 is a parameter provided by the user .",
    "such approach is time - expensive because the computational complexity of the clique detection is exponential in the number of involved nodes .",
    "experiments show that it scales well on real networks consisting up to @xmath57 nodes and , moreover , that it achieves a great accuracy .",
    "two other popular algorithms are copra ( _ community overlap propagation algorithm _ ) @xcite and oslom ( _ order statistics local optimization method _ ) @xcite .",
    "both have been used in conjunction with our approach and , therefore , a detailed description of them will be presented in section [ sec : communitydetection ] .",
    "in this section we discuss the technical and conceptual framework of our edge - weighting strategy .",
    "we start by observing that in all approaches described in section [ sec : background ] consider the network topology as the privileged ( and , often , the only ) source of information for community detection .",
    "such an approach , however , runs contrary to the intuition that , for example , in large online social networks like twitter and facebook communities should be identified as groups of users who frequently interact each other .",
    "indeed , we expect that the volume of information exchanged among community members is significantly higher than that exchanged between community members and people outside the community itself .",
    "in contrast , the network topology only tells whether two users are connected , and therefore , if two users are able to directly exchange messages or not ; however , it _ does not provide _ any indication whether two users actually communicate and , more in general , it does not inform us about the existence of _ preferential pathways _ along which information flows . to better clarify this concept ,",
    "consider again networks like facebook or twitter . in both of them",
    ", a single user may have a large number of contacts with whom she / he can exchange information ( e.g. , a _ wall post _ on facebook or a _ tweet _ on twitter ) .",
    "recent studies indicate that , in facebook , the average number of friends of a user is 120 but male users actively communicate with only 10 of them whereas women with 16 .",
    "this implies that social links in a network vary in their ability to diffuse information over the network itself .",
    "ranking is useful to better understand how information flows among users .",
    "we propose to _ complement _ information about network topology by weighting each edge : the weight should indicate the ability of the edge itself to transferring information .",
    "this supplementary source of knowledge will be later used ( see section [ sec : communitydetection ] ) to find communities .    a concept similar to that",
    "introduced above has been already presented in fortunato et al . @xcite .",
    "the authors assume that information from a vertex @xmath16 to a vertex @xmath30 travels along the shortest paths connecting them .",
    "they define a parameter , called _ efficiency _ @xmath58 as the inverse of the length of the shortest path connecting @xmath16 and @xmath30 and used it to define a greedy algorithm to find communities .",
    "the algorithm identifies the edges that , if removed , are able to generate the largest disruption in the network s ability to diffuse information among its vertices and progressively delete them with the goal of splitting the network up into communities .    in @xcite ,",
    "the authors assume that information flows along shortest paths in networks .",
    "we guess that such an assumption could not hold true in real scenarios : for instance , facebook users are agnostic about the whole network topology and , practically , she / he is not able to find shortest paths .",
    "in addition the computation of information centrality requires to calculate shortest paths and this activity can be prohibitively time - expensive in real networks .    to solve these drawbacks , we borrow some ideas that have been successfully applied in the past to compute _",
    "node centrality_. in particular , newman s suggestion to simulate message passing in networks by means of _ random walks_. a similar approach has been more recently considered in @xcite .",
    "we simulate multiple random walks and assign the rank of an edge coincides with the frequency of selecting the edge itself in all the simulations .",
    "this is compliant with our previous reasoning since , in our procedure , an edge gets a high rank if it is frequently selected , i.e. , if it is frequently exploited to convey messages .    our procedure has been designed to address the following requirements :    [ [ simple - paths ] ] simple paths + + + + + + + + + + + +    we must avoid simulated random walks that pass more than once through an edge because this would disproportionately inflate the rank of some edges while penalizing other ones .    [ [ bounded - length - paths ] ] bounded - length paths + + + + + + + + + + + + + + + + + + + +    as shown in @xcite , `` distant '' nodes in social networks ( i.e. , those nodes that are connected by long paths only ) are unlikely to influence each other .",
    "we agree with this observation and figure that two nodes are considered to be distant if the path connecting them is longer than @xmath3 hops , being @xmath3 a fixed threshold .",
    "the impact of @xmath3 on the performance of our approach will be extensively described in section [ sec : experiments ] .",
    "in addition , random walks of bounded length well represent the finiteness of the process of information propagation over large social networks .",
    "the weight associated with each edge will be called @xmath3-_path edge centrality_. as a final comment , observe that our approach takes as input a graph @xmath7 and maps it onto a weighted graph @xmath59 such that @xmath60 is the weight of the edge connecting vertices @xmath16 and @xmath30 .",
    "our approach is , therefore , _",
    "flexible _ in the sense that we can use it conjunction with any community detection algorithm .",
    "the community detection algorithm will run on @xmath61 and , therefore , it can get a benefit from not only information about network topology but also on information on edge centralities .",
    "in this section we introduce an algorithm to assign weights to the edges of a network in compliance with the requirements illustrated in section [ sec : overview ] .",
    "we first formalize the concept of @xmath3-path edge centrality ( see section [ sub : kpath - centrality ] ) .",
    "after that , we describe an approximate algorithm , called _ werw - kpath _ ( see section [ sub : werwkpath ] ) for quickly computing @xmath3-path edge centralities .",
    "finally , in section [ sub : formalanalysis ] we formally analyze the accuracy achieved by the werw - kpath algorithm .",
    "the concept of _ @xmath3-path edge centrality _ extends the concept of _ @xmath3-path vertex centrality",
    "_ introduced for the first time in @xcite .",
    "the @xmath3-path vertex centrality relies on the concept of _ simple @xmath3-path _ :    ( simple @xmath3-path ) .",
    "_ let @xmath7 be a graph and let @xmath62 be an integer .",
    "a simple @xmath3-path is a simple path comprising at most @xmath3 edges in @xmath9 and these edges are selected at random . _",
    "[ def : simple - k - path ]    we are now able to formally introduce the notion of @xmath3-path vertex centrality @xcite .",
    "( @xmath3-path vertex centrality ) .",
    "( i ) _ @xmath7 be a graph , _",
    "( ii ) _ @xmath63 be an integer and _ ( iii ) _ @xmath64 be a vertex in @xmath9 .",
    "the @xmath3-path vertex centrality @xmath65 of @xmath66 is the sum , over all possible source vertices @xmath67 , of the probability with which a message originated from @xmath67 goes through @xmath66 , assuming that the message traversals are only along simple @xmath3-paths . _ [ def : k - path - centrality ]    the concept of @xmath3-path vertex centrality can be extended so that to assess the relevance of an edge in a network .",
    "such a concept is formalized in definition [ def : kpathedgecentrality ] .",
    "( @xmath3-path edge centrality ) .",
    "( i ) _ @xmath7 be a graph , _",
    "( ii ) _ @xmath63 be an integer and _ ( iii ) _ @xmath46 be an edge of @xmath9 .",
    "the @xmath3-path edge centrality @xmath68 of @xmath53 is the sum , over all possible source vertex @xmath67 , of the probability with which a message originated from @xmath67 traverses @xmath53 , assuming that the message traversals are only along random simple @xmath3-paths._[def : kpathedgecentrality ]    in the following , we shall introduce an algorithm , called _ werw - kpath _ to efficiently compute @xmath3-path edge centrality .      in this section we present the _ werw - kpath _ ( _ weighted edge random walk _",
    "- @xmath3 _ path _ ) , an approximate algorithm to efficiently compute the edge centrality .",
    "the werw - kpath algorithm takes a graph @xmath69 and an integer @xmath3 as input and simulates @xmath70 _ simple random paths _ of at most @xmath3 edges on @xmath9 such that the length of each random walk is no greater than @xmath3 . here",
    "@xmath70 is a fixed integer whose tuning will be discussed later . at the beginning , a weight @xmath71 is assigned to each edge @xmath72 . in each simulation , a source node @xmath67 is selected and @xmath67 is assumed to inject a message in @xmath9 ; after that , @xmath67 selects , according to some strategy , one of its neighboring vertices , say @xmath73 , and forwards it the message .",
    "the weight of the edge connecting @xmath67 and @xmath73 is increased by 1 and the process restarts from @xmath73 .    owing to this informal discussion",
    ", it emerges that the key ingredients of the werw - kpath algorithm are the strategies exploited to select the starting node and the edges invoked to convey the message .",
    "these strategies define a _ message propagation model _ on @xmath9 . in the werw - kpath algorithm",
    "we consider a model relying on two main assumptions .",
    "the first assumption is that vertices are not all _ equally relevant _ to generate and spread messages . in detail",
    ", we decide to privilege vertices representing users with a high level of engagement in the social networks because we assume that the higher the number of connections of a user , the more marked her / his aptitude to generate and spread messages . to quantitatively encode this intuition we defined , for each vertex @xmath64 , the _ normalized degree _ @xmath74 of @xmath66 as follows    @xmath75    being @xmath76 the set of edges incident onto @xmath66 .",
    "the normalized degree @xmath74 correlates the degree of @xmath66 to the total number of vertices in the network .",
    "it ranges in the real interval @xmath32 $ ] and the higher @xmath74 , the better @xmath66 is connected in the graph .",
    "we suggest that the probability of selecting @xmath66 as the source vertex is proportional to @xmath74 .",
    "the second assumption is that edges are not all _ equally relevant _ in conveying messages .",
    "this is compliant with the fact that , in real life , a user does not select _ totally at random _ the user to whom a message should be forwarded but she / he selects the addressee according to some criteria .",
    "these criteria may be formulated by assuming that edges in @xmath9 are weighted and requiring that a user selects an edge to convey a message on the basis of the edge weights .",
    "unfortunately , weights on edges should be the _ output _ of the algorithm and not its _ input _ and , then , we do not have at our disposal weights allowing us to select edges .",
    "we solved this issue by observing that , in the werw - kpath algorithm , edge weights are initially uniformly assigned because all edges are deemed equally important in transferring messages ; after that , the weight of an edges will be increased if that edge is selected to convey a message .    if we would stop the werw - kpath algorithm after @xmath77 iterations ( with @xmath78 ) , the weight currently associated with that edge would represent an approximation of its actual weight .",
    "of course , the higher @xmath77 , the better this approximation .",
    "the weight assigned to each edge at the arbitrary , @xmath77-th iteration , is therefore an approximation of its centrality value obtained by stopping the simulation procedure after @xmath77-th iterations . due to the definition of edge centrality , the werw - kpath algorithm has to select , in each iteration , the edge having the highest centrality value and , therefore , the highest weight .",
    "more formally , in the @xmath77-th iteration , we propose that the probability @xmath79 of selecting an edge @xmath80 is proportional to its current edge weight @xmath81    @xmath82    being @xmath83 where @xmath84 is defined as follows    @xmath85    in this way , the weight already awarded to an edge @xmath53 is assumed to be an indicator of its tendency to transfer messages .    by putting together all these ideas we are able to provide a more formal description of the werw - kpath algorithm .",
    "it takes a graph @xmath69 as input and , as previously pointed out , it assigns each edge @xmath86 with a weight @xmath87 .",
    "after that , it iterates the following sub - steps a number of times equal to @xmath70 , being @xmath70 a fixed value ( we will study in section [ sub : formalanalysis ] the impact of @xmath70 on the performance of the algorithm ) :    1 .",
    "a vertex @xmath64 is selected at random with a probability @xmath88 proportional to @xmath74 .",
    "all the edges in @xmath89 are marked as _ not traversed_. 3 .",
    "the procedure _ messagepropagation _ is invoked .",
    "it generates a simple random walk starting from @xmath66 whose length is not greater than @xmath3 .",
    "let us describe the procedure _",
    "messagepropagation_. for the purpose of readability , the pseudo - code of the _ messagepropagation _ procedure is reported in algorithm [ alg : procedure ] .",
    "@xmath90 @xmath91 , chosen with probability given by equation .",
    "let @xmath92 be the vertex reached by @xmath66 through @xmath80 @xmath93 @xmath94 @xmath95 @xmath96    this procedure carries out a loop until _ both _ the following conditions hold true :    1 .",
    "the length of the path currently generated is no greater than @xmath3 .",
    "this is managed through a length counter @xmath97 .",
    "2 .   assuming that the walk has reached the vertex @xmath66",
    ", the loop continues if there exists _ at least one edge _",
    "incident on @xmath66 which has not been already traversed .",
    "+ since @xmath76 is the set of edges incident on @xmath66 , the following condition must be true : + @xmath98    the former condition allows us to consider only paths up to length @xmath3 .",
    "the latter avoids that the message passes more than once through an edge .",
    "if the conditions above are satisfied , the _ messagepropagation _ procedure selects an edge @xmath80 at random , with a probability @xmath79 given by equation .",
    "let @xmath80 be the selected edge and let @xmath92 be the vertex reached from @xmath66 by means of @xmath80 .",
    "the _ messagepropagation _",
    "procedure increases @xmath81 by 1 , sets @xmath99 and increases the counter @xmath97 by 1 .",
    "the message propagation re - starts from @xmath92 .    at the end , for each edge @xmath86 , the werw - kpath algorithm sets @xmath100 .",
    "this value will be adopted as the _ centrality _ of @xmath80 .",
    "the pseudocode describing the werw - kpath algorithm is reported in algorithm [ alg : erw - kpath ]",
    ".    for each @xmath86 set @xmath101 @xmath102 a counter to check the length of the @xmath3-path @xmath103 a node chosen uniformly at random messagepropagation(@xmath66 , @xmath97 , @xmath3 , @xmath104 ) for each @xmath86 set @xmath105      in this section we investigate to what extent the value @xmath106 returned by the werw - kpath algorithm is a `` good '' approximation of the actual centrality value of an edge provided in definition [ def : kpathedgecentrality ] . in detail",
    ", we will show that if we perform @xmath107 ) iterations then the error we make by replacing @xmath68 with @xmath106 is no greater than @xmath108 .    to prove this result we need the following , preliminary theorem , known as _ hoeffding inequality _ :    ( hoeffding inequality ) _ let @xmath109 be independent random variables .",
    "assume that , for each @xmath16 such that @xmath110 , the random variable @xmath111 ranges in the real interval @xmath112 $ ] .",
    "let @xmath113 .",
    "for any @xmath114 we have : @xmath115| \\geq t ) \\leq 2\\exp \\left ( -      \\frac{2t^2n^2}{\\sum_{i=1}^n ( b_i - a_i)^2 } \\right)\\ ] ] _    _",
    "proof_. see @xcite    @xmath116    .    as a special case ,",
    "let that all the random variable @xmath111 can only assume the values 0 and 1 .",
    "in such a case , equation simplifies to    @xmath117| \\geq t ) \\leq",
    "2\\exp \\left ( - 2t^2n\\right)\\ ] ]    we are now able to prove our claims .",
    "[ th : bounds ]    _ let @xmath7 be a network and @xmath118",
    ". assume to run the werw - kpath algorithm on @xmath9 .",
    "the following conditions hold true : _    1 .",
    "if we set @xmath119 , then there exists a constant @xmath120 such that @xmath121 .",
    "2 .   there exist two constants @xmath122 and @xmath123 such that , if we fix latexmath:[$\\rho = \\frac{\\alpha}{2}|v|^{\\beta } \\log    @xmath46 we have : @xmath125    _ proof_. by definition [ def : kpathedgecentrality ] , the edge centrality @xmath68 of an edge @xmath53 is defined as follows    @xmath126    being @xmath127 the probability of selecting the edge @xmath53 starting from the source node @xmath67 .    by the definition of conditional probability",
    "we can write    @xmath128    being @xmath129 the probability that @xmath67 is the source vertex .",
    "let us now analyze the output generated by the werw - kpath algorithm .",
    "since the werw - kpath algorithm performs @xmath70 iterations , we will first focus on the result produced in a given iteration , say the @xmath77-th iteration with @xmath130 .    during the @xmath77-th iteration ,",
    "a simple random walk of at most @xmath3 edges is generated .",
    "the edges composing the random walk are selected one - by - one and we will say that we are in the @xmath16-th _ trial _ if @xmath131 edges have been already selected .",
    "let us define the random variable @xmath132 as follows    @xmath133    define now the random variable @xmath134 as follows    @xmath135    the variable @xmath134 is equal to 1 if @xmath53 has been selected and 0 otherwise .",
    "in fact , independently of the starting vertex @xmath67 , an edge @xmath53 can be selected at most one time in all trials ( otherwise the path would pass through it more than once ) .    by taking the expectation of @xmath134",
    "we get    @xmath136 = e[\\sum_{i = 1}^{\\kappa}\\sum_{s \\in v } x_{is}(e ) ] = \\sum_{i = 1}^{\\kappa}\\sum_{s \\in v } e[x_{is}(e)]\\ ] ]    since @xmath132 is an indicator variable , we have that @xmath137 = \\pr(x_{is}(e ) = 1)$ ] ( see @xcite for further details ) , and therefore    @xmath136 = \\sum_{i = 1}^{\\kappa}\\sum_{s \\in v } \\pr(x_{is}(e ) = 1)\\ ] ]    let us denote as @xmath138 and , by bayes rule , we have that @xmath139 .",
    "we obtain    @xmath136 = \\sum_{i = 1}^{\\kappa}\\sum_{s \\in v } \\pr(e , i , s )   = \\sum_{i = 1}^{\\kappa}\\sum_{s \\in v } \\pr(e , i|s)\\pr(s)\\ ] ]    in the werw - kpath algorithm , we have that @xmath129 is equal to @xmath140 . by changing the order of the double sum we get    @xmath136 = \\sum_{s \\in v}\\left(\\sum_{i = 1}^{\\kappa } \\pr(e , i|s)\\right)\\pr(s)\\ ] ]    let us focus on the term @xmath141 .",
    "the werw - kpath algorithm generates a simple random walk , and , therefore , if @xmath53 is selected in a trial , say @xmath142 , it can not be selected in another trial @xmath143 such that @xmath144 . by summing over all indices @xmath145",
    ", we obtain that @xmath141 is the probability of selecting @xmath53 starting from @xmath67 as the source vertex in an arbitrary trial . as a consequence , @xmath146 .",
    "we can then rewrite @xmath147 $ ] as    @xmath136 = \\sum_{s \\in v}\\pr(e|s)\\pr(s)\\ ] ]    by equation , @xmath148 is equal to @xmath68 , and , therefore @xmath149 $ ] .",
    "this means that , in a single run of the werw - kpath algorithm , the weight associated with @xmath53 is a random variable distributed as @xmath134 and whose expectation coincide with @xmath68 .",
    "this reasoning , of course , holds for any run @xmath77 such that @xmath130 .",
    "therefroe , the weight associated with @xmath53 in the @xmath77-th iteration is a random variable @xmath150 .    after completing @xmath70 iterations the algorithm returns , for each edge @xmath53 , the value @xmath151 . here",
    "@xmath106 is a random variable whose expectation is equal to @xmath68 because @xmath152 = e[\\frac{1}{\\rho}\\sum_{\\ell = 1}^{\\rho}y_{\\ell}(e ) ] = \\frac{1}{\\rho}\\sum_{\\ell = 1}^{\\rho}e[y_{\\ell}(e)]= \\frac{1}{\\rho}\\sum_{\\ell = 1}^{\\rho } l^\\kappa(e ) = \\frac{1}{\\rho } \\rho l^\\kappa(e ) = l^\\kappa(e)$ ] .    in order to compute",
    "how much @xmath106 differs from its expectation we can apply the hoeffding inequality as in equation    @xmath153    if we set @xmath119 , the previous equation simplifies to    @xmath154    by setting @xmath155 we get the proof for the part ( 1 ) of theorem [ th : bounds ] .    as for part ( 2 ) ,",
    "if we fix @xmath156 and @xmath157 we get    latexmath:[\\[2\\exp(-2\\rho\\xi^{2 } ) = 2\\exp(-2 \\frac{\\alpha}{2}|v|^{\\beta } \\log|v|     and this ends the proof .",
    "@xmath116    we can use theorem [ th : bounds ] to relate the number of iterations werw - kpath has to carry out with the approximation error it incurs .",
    "this is encoded in the following corollary :    [ cor : bounds ] _ let @xmath7 be a network . according to the notation introduced in theorem [ th : bounds ] , if we set @xmath159 and @xmath160 , we need to perform @xmath161 iterations in order to have @xmath162 _    _ proof_. the proof is straightforward by applying theorem [ th : bounds]-part ( 2 ) , with @xmath159 and @xmath160",
    ".    @xmath116    corollary [ cor : bounds ] provides us a nice result : in fact , if we perform a number of iterations in the order of magnitude of @xmath163 then the possibility that @xmath106 differs from the actual value @xmath68 more than @xmath164 is less than @xmath165 . in real networks",
    "@xmath166 is quite large ( often in the order of millions ) .",
    "for example , in a network constituted by one million nodes , the probability that edge centrality values returned by the werw - kpath algorithm deviate from the actual ones more than @xmath167 is less than @xmath168 .",
    "the consequence is that our algorithm provides a good trade - off between accuracy and scalability and , therefore , it is fully applicable in real life scenarios .    to make computation more robust",
    ", however , in our experiments we set @xmath169 and , then , the worst - case time complexity of the werw - kpath algorithm amounts to @xmath6 .",
    "in this section we describe how to use the weights produced by the werw - kpath algorithm find communities in networks .",
    "we point out that , in principle , our algorithm can be used in conjunction with any existing _ community detection _ algorithm . however , due to space limitation , we focus on three algorithms , namely the louvain method ( lm ) @xcite , copra @xcite and oslom @xcite .",
    "we focused on these algorithms because they show many interesting properties . in detail , the louvain method is perhaps one of the best algorithms in terms of accuracy and computational costs .",
    "copra is able to find both overlapping and non - overlapping communities and finally , oslom is able to provide a high level of flexibility in the sense that it allows to manage both directed and undirected graphs , to find overlapping and non - overlapping communities and , finally , to generate a hierarchy of communities .    in the following",
    "we shall describe each of these algorithms in detail .",
    "the louvain method ( lm ) has been proposed in 2008 by blondel et al . @xcite and it is perhaps one of the most popular algorithms in the field of community detection .",
    "this popularity derives by the fact that lm provides excellent performance even if the networks to process are very large .",
    "lm consists of two stages which are iteratively repeated .",
    "the input of the algorithm is a weighted network @xmath170 being @xmath171 the weights associated with each edge is the adjacency matrix of @xmath9 . ] .",
    "the modularity is defined as in equation , in which @xmath20 is the weight of the edge linking @xmath16 and @xmath30 and @xmath15 ( resp . , @xmath34 )",
    "is the sum of the edges incident onto @xmath16 ( resp . , @xmath30 ) .",
    "initially , each vertex @xmath16 will form a community and therefore , there are as many communities as the vertices in @xmath50 .",
    "after that , for each vertex @xmath16 , lm considers the neighbors of @xmath16 ; for each neighboring vertex @xmath30 , lm computes the _ gain of modularity _ that would take place by removing @xmath16 from its community and placing it in the community of @xmath30 .",
    "the vertex @xmath16 is placed in the community for which this gain achieves its maximum value .",
    "if it is not possible to achieve a positive gain , the vertex @xmath16 will remain in its original community .",
    "this process is applied repeatedly and sequentially for all the vertices until no further improvement can be achieved .",
    "this ends the first phase .",
    "the second step of lm generates a new weighted network @xmath61 whose vertices coincide with the communities identified during the first step . the weight of the edge linking two vertices @xmath172 and",
    "@xmath173 in @xmath61 is equal to the sum of the weights of the edges between the vertices in the communities of @xmath9 corresponding to @xmath172 and @xmath173 .",
    "once the second step has been performed , the algorithm re - applies the first step .",
    "the two steps are repeated until there are no changes in the obtained community structure .",
    "lm has three nice properties : _",
    "( i ) _ it is a _ multi - level _ algorithm , i.e. , it generates a hierarchy of communities and the @xmath21-th level of the hierarchy corresponds to the set of communities found after @xmath21 iterations of the algorithm . _",
    "( ii ) _ the most time expensive component of the algorithm is the first step and , in particular , the evaluation of the gain the algorithm could attain by moving a vertex from a community to another one .",
    "however , an efficient formula to quickly compute such a gain has been provided by the authors . _ ( iii ) _ in the first stage , the algorithm sequentially scans all the vertices and , for each vertex @xmath16 it computes the gain achieved by moving @xmath16 from its current community to one of the communities of its neighboring vertices .",
    "therefore , lm is non deterministic because , depending on the ordering of vertices , lm could produce different results .",
    "experimental trials show that the vertex ordering has no effects on the values of modularity . however , different vertex orderings could impact on the computational costs of the algorithm .      the copra ( community overlap propagation algorithm ) algorithm relies on a _ label propagation strategy _ proposed for the first time by raghavan , albert and kumara in @xcite .",
    "copra works in three stages : _ ( i ) _ initially , each vertex @xmath174 is labeled with a set of pairs @xmath175 , being @xmath41 a community identifier and @xmath176 ( _ belonging coefficient _ ) a coefficient indicating the strength of the membership of @xmath174 to the community @xmath41 ; belonging coefficients are also _ normalized _ so that the sum of all the belonging coefficients associated with @xmath174 is equal to 1 .",
    "initially , the community associated with a vertex coincide with the vertex itself and the belonging coefficient is 1 . _",
    "( ii ) _ then , repeatedly , @xmath174 updates its label so that the set of community identifiers associated with @xmath174 is put equal to the union of the community identifiers associated with the neighbors of @xmath174 ; after that , the belonging coefficients are updated according to the following formula @xmath177    being @xmath178 the set of neighbors of @xmath174 and @xmath179 the belonging coefficient associated with @xmath174 at the @xmath16-th iteration . at each iteration , all the pairs in the label of @xmath174 having a belonging coefficient less than a threshold are filtered out ; in such a case the membership of @xmath174 to one of the deleted communities is considered not strong enough .",
    "it is possible that all the pairs in a vertex label have a belonging coefficient less than the threshold .",
    "in such a case , copra retains only the pair that has the greatest belonging coefficient and deletes all the others .",
    "finally , if more than one pair has the same maximum belonging coefficient , below the threshold , copra selects at random one of them and this makes the algorithm non - deterministic . after deleting pairs from the vertex label ,",
    "the belonging coefficients of each remaining pair are re - normalized so that they sum to 1 .",
    "a stopping criterium ensures copra ends after a finite number of steps .",
    "in such a case , the set of community identifiers associated with @xmath174 identify the communities to which @xmath174 belongs to .",
    "oslom ( order statistics local optimization method ) is a _ multi - purpose _ technique that aims at managing directed and undirected graphs as well as weighted and unweighted graphs .",
    "oslom is also able to detect overlapping communities and to build hierarchies of clusters .",
    "the strategy to discover clusters in a graph @xmath9 is as follows : at the beginning a vertex @xmath16 is selected at random and it forms the first cluster @xmath180 .",
    "after that , the @xmath181 _ most statistically significant _ vertices in @xmath9 are identified and added to @xmath25 . here",
    "@xmath181 is a random number and the significance of a vertex @xmath174 is a parameter indicating the likelihood that @xmath174 can be inserted in @xmath25 . to formally define the statistical significance",
    ", oslom considers a _ random null model _ ,",
    "i.e. , a class of networks without community structure .",
    "a network @xmath61 in the random null model is generated by first copying all the vertices of @xmath9 in @xmath61 .",
    "after that , multiple pair of edges in @xmath61 are selected at random and an edge is drawn between them . due to this procedure , given a vertex @xmath174 in @xmath9 , there will exist a vertex @xmath182 in @xmath61 corresponding to @xmath73 .",
    "analogously , given a subgraph @xmath25 in @xmath9 , there will be a subgraph @xmath183 in @xmath61 corresponding to @xmath25 such that each vertex in @xmath183 corresponds to a vertex in @xmath25 .",
    "the null model _ is expected _ not to have a community structure and , therefore , it can be used as a benchmark to understand if a subgraph @xmath25 in @xmath9 is a community and to define the statistical significance of a vertex @xmath174 to @xmath25 . in particular , we count the number @xmath184 of vertices linking @xmath174 with vertices in @xmath9 ; after that , we consider the vertex @xmath182 corresponding to @xmath174 in @xmath61 and we count the number @xmath185 of edges linking @xmath182 with vertices residing in @xmath183 . if @xmath186 we guess that @xmath174 is significant to @xmath25 ( and can be included in it ) .",
    "a community @xmath25 can be associated with a _",
    "score _ representing its _ quality _ ; the score of a cluster @xmath25 indicates to what extent @xmath25 contains vertices which have a high statistical significance with it .",
    "the main idea of oslom is to _ progressively _ add and remove vertices within @xmath25 so that to improve its score ; this procedure is called _ clean - up_.    the whole process introduced above is repeated several times starting from different nodes in order to explore different regions of @xmath9 .",
    "this yields a final set of clusters that may overlap .",
    "in this section we describe the experiments we carried out to assess the performance of the werw - kpath algorithm and whether its usage is beneficial to raise the quality of a community detection algorithm .",
    "the werw - kpath algorithm has been implemented in java 1.6 and the prototype is freely available at the following url . to perform our tests , we considered 9 datasets whose features",
    "are reported in table [ tab : datasets ] .",
    "dataset 1 is a directed network depicting the voting system of wikipedia for the elections of january 2008 .",
    "datasets 25 represent the undirected networks of arxiv papers in the field of , respectively , high energy physics ( theory ) , high energy physics ( phenomenology ) , astro physics and condensed matter physics , as of april 2003 .",
    "dataset 6 represents a directed network of scientific citations among papers belonging to the arxiv high energy physics ( theory ) field .",
    "dataset 7 represents the directed email communication network of the enron organization as of 2004 , originally made public by the federal energy regulatory commission during its investigation .",
    "dataset 8 describes a small sample of the facebook network , representing its directed friendship graph .",
    "finally , dataset 9 depicts a large fragment of the facebook undirected social graph ( mutual friendship relations ) as of 2010 .    [ cols=\"^,<,^,^,^,^,^\",options=\"header \" , ]     the results reported in this section indicates that some community detection methods ( like lm ) significantly benefit from our edge weighting strategies ; for copra and oslom our method brings some advantage but the improvement in modularity is less evident than in lm .",
    "such a behavior can be explained in terms of the properties and behavior of the lm , copra and oslom algorithms .",
    "as emerges from section [ sub : lm ] , lm tries to optimize in a greedy fashion the modularity function @xmath0 defined in equation [ eqn : qmodexp ] .",
    "the @xmath0 function is the sum of terms of the form @xmath187 .",
    "let us consider a pair of vertices @xmath16 and @xmath30 and assume that an edge linking them exists . by exploiting lm in conjunction with our werw - kpath algorithm",
    ", @xmath20 is a real number in [ 0,1 ] ; if the werw - kpath algorithm is not applied , @xmath188 and it equals 1 if and only if there is an edge linking @xmath16 and @xmath30 .",
    "in such a case the term @xmath189 reads @xmath190 .",
    "therefore , the less @xmath15 ( resp . , @xmath34 ) the higher @xmath191 : this implies that lm tends to put in the same community vertices at low degree even if such a choice could be not optimal at the global level .",
    "by contrast , the usage of non - binary weights on edges provides a higher level of flexibility to the algorithm and this ultimately explains the improvements in the values of @xmath0 .",
    "as for copra and oslom , the discussion proposed in sections [ sub : copra ] and [ sub : oslom ] explains that these algorithms deeply differ each other . despite these deep differences , they share a relevant similarity : in both of them , a vertex @xmath174 is assigned to a community depending on the fact that a large part of the neighboring vertices of @xmath174 belong or not to that community .",
    "so , for instance , in copra we compute the belonging coefficient of @xmath174 to a community @xmath25 depending on the belonging coefficient to @xmath25 of its neighboring vertices . in oslom , we compute the number of links joining @xmath174 with vertices located inside @xmath25 and if such a number is higher than that we would expect , we decide to put @xmath174 in @xmath25 . in both copra and oslom , the criterium to decide if a vertex has to be included in a community depends on the number of its neighboring vertices belonging to that community and , ultimately , on the number of edges linking @xmath174 with vertices located in @xmath25 .",
    "therefore , weights on edges have a small ( or negligible ) influence in deciding to assign a vertex to a community .      in this section",
    "we analyze the quality of the communities detected by our approach in conjunction with lm , copra and oslom .",
    "to assess the quality of the results , we adopted a measure called _ normalized mutual information - nmi _ proposed by danon et al . in 2005 @xcite which is rooted in information theory .",
    "such a measure assumes that , given a graph @xmath9 , a _ ground truth _ is available to verify what are the communities ( said _ real communities _ ) in @xmath9 and what are their features .",
    "let us denote as @xmath192 the true community structure of @xmath9 and suppose that @xmath9 consist of @xmath193 communities .",
    "let us consider a community detection algorithm @xmath194 .",
    "let us run @xmath194 on @xmath9 and assume that it identifies a community structure @xmath195 consisting of @xmath196 communities .",
    "we define a @xmath197 matrix  said _ confusion matrix _",
    " @xmath198 such that each row of @xmath198 corresponds to a community in @xmath192 whereas each column of @xmath198 is associated with a community in @xmath195 .",
    "the generic element @xmath199 is equal to the number of elements of the real @xmath16-th community which are also present in the @xmath30-th community found by the algorithm .",
    "starting by this definition , the normalized mutual information is defined as    @xmath200    being @xmath201 ( resp . ,",
    "@xmath202 ) the sum of the elements in the @xmath16-th row ( resp .",
    ", @xmath30-th column ) of the confusion matrix . if the algorithm @xmath194 would work perfectly , then for each found community @xmath30",
    ", it would exist a real community @xmath16 exactly coinciding with @xmath30 . in such a case , it is possible to show that @xmath203 is exactly equal to 1 @xcite .",
    "by contrast , if the communities detected by @xmath194 are totally independent of the real communities ( e.g. if we assume to put all the nodes of the network into a single community ) then it is possible to show that the nmi is equal to 0 .",
    "the nmi , therefore , ranges from 0 to 1 and the higher the value , the better the algorithm works .    the computation of nmi is however challenging for real - life networks because no _ ground truth _ is usually available to assess what are the communities in @xmath9 and what are their features .",
    "therefore , to perform our tests , we need to consider a set of artificially generated networks whose structural properties are compliant with those existing in real networks .",
    "a tool for generating artificial networks resembling real ones has been proposed in @xcite and it has been exploited in our tests . the user is required to provide the following parameters to generate artificial networks : _",
    "( i ) number of vertices and average vertex degree_. the user is allowed to specify the number @xmath97 of vertices in the network as well as the average degree @xmath204 of each vertex . _",
    "( ii ) power law exponent in vertex degree distribution_. the user specifies a parameter @xmath205 such that the vertex degree distribution follows a power law such as @xmath206 .",
    "in addition , the average degree of a vertex is fixed to be equal to @xmath204 . _",
    "( iii ) power law exponent in community size distribution_. the user specifies a parameter @xmath207 and communities are generated so that the size of each community ( i.e. , the number of vertices composing it ) follows a power law defined as @xmath208 .",
    "the sum of the sizes of all the communities is constrained to be equal to @xmath97 .",
    "in addition , the procedure for generating communities ensures that any node is included in at least a community , independently of its degree . _",
    "( iv ) mixing parameter_. the user specifies a parameter @xmath209 such that each vertex shares a fraction @xmath210 of its edges with vertices outside its community and @xmath211 edges with vertices residing in its community .",
    "the parameter @xmath211 is called _ mixing parameter_. note that the mixing parameter assignment @xmath212 represents the tipping point beyond which the communities are no longer defined in the strong sense , that is that each vertex has more neighbors in the community to which it is assigned , rather than outside .    in our tests",
    "we adopted the same configuration reported in @xcite , i.e. , : _",
    "@xmath213 vertices ; _ ( ii ) _ four pair of values for @xmath205 and @xmath207 were considered , namely : @xmath214 = ( 2,1 ) , ( 2,2 ) , ( 3,1 ) , ( 3,2 ) ; _ ( iii ) _ three values of average degree were considered , namely @xmath215 ; _ ( iv ) _ six values of @xmath211 were considered , namely @xmath216 .",
    "this allowed us to generate an overall number of @xmath217 artificial test networks .",
    "we computed the nmi achieved by applying _",
    "lm _ , _ copra _ and _ oslom _ , on the unweighted networks as they were generated by the benchmark , averaging obtained results over 10 runs of each algorithm . therefore , we applied the same algorithms to the weighted networks after the adoption of our network weighting strategy , once again averaging results over 10 runs .",
    "as suggested in section [ sub : assessing - modularity ] , we fixed @xmath218 to compute edge centralities .",
    "the achieved results are reported in table [ tab : artificial ] for @xmath219 .",
    "we also considered other values for average degree , namely @xmath220 and @xmath221 and the results we obtained were quite similar each other and inline with those obtained when @xmath219 ; therefore , due to space limitation , we report in table [ tab : artificial ] only the nmi values obtained when @xmath219 .",
    "@xmath222 & @xmath223 & @xmath224 & @xmath225 +   + lm uw & 0.917 & 0.853 & 0.769 & 0.732 & 0.591 & 0.486 + lm w & * 0.931 * & * 0.882 * & * 0.817 * & * 0.789 * & 0.599 & 0.444 + cp uw & 0.868 & 0.901 & 0.841 & 0.868 & 0.691 & 0.021",
    "+ cp w & 0.879 & 0.900 & * 0.905 * & 0.856 & * 0.846 * & 0.021 + os uw & 0.699 & 0.703 & 0.705 & 0.694 & 0.658 & 0.438 + os w & 0.700 & 0.704 & 0.707 & 0.695 & 0.668 & * 0.501 * +   + lm uw & 0.815 & 0.633 & 0.664 & 0.428 & 0.503 & 0.334 + lm w & * 0.886 * & * 0.704 * & 0.632 & * 0.519 * & 0.444 & * 0.377 * + cp uw & 0.849 & 0.893 & 0.838 & 0.809 & 0.726 & 0.028 + cp w & * 0.904 * & 0.852 & * 0.886 * & 0.759 & 0.738 & 0.028 + os uw & 0.669 & 0.637 & 0.629 & 0.633 & 0.583 & 0.462 + os w & 0.669 & 0.637 & 0.637 & 0.629 & * 0.602 * & * 0.505 * +   + lm uw & 0.973 & 0.867 & 0.800 & 0.773 & 0.677 & 0.527 + lm w & 0.978 & 0.872 & 0.806 & 0.739 & * 0.712 * & 0.404 + cp uw & 0.917 & 0.888 & 0.876 & 0.875 & 0.727 & 0.018 + cp w & 0.927 & 0.892 & * 0.892 * & * 0.913 * & * 0.786 * & 0.018 + os uw & 0.741 & 0.711 & 0.700 & 0.712 & 0.708 & 0.299 + os w & 0.741 & 0.712 & 0.700 & 0.712 & 0.711 & * 0.415 * +   + lm uw & 0.936 & 0.788 & 0.692 & 0.563 & 0.532 & 0.411 + lm w & 0.947 & 0.745 & * 0.749 * & * 0.633 * & * 0.584 * & 0.405 + cp uw & 0.881 & 0.892 & 0.900 & 0.885 & 0.844 & 0.023 + cp w & * 0.911 * & 0.875 & 0.899 & 0.889 & 0.770 & 0.023 + os uw & 0.697 & 0.672 & 0.665 & 0.671 & 0.652 & 0.397 + os w & 0.697 & 0.672 & 0.665 & 0.672 & 0.652 & * 0.538 * +    from the analysis of this table , we can draw the following conclusions :    1 .   if @xmath211 is low ( i.e. , @xmath226 or @xmath227 ) , all the three approaches achieve a high nmi both with and without our weighting strategy .",
    "by contrast , for large values of @xmath211 ( for example @xmath228 ) , the nmi deteriorates ( especially for copra ) .",
    "in particular , if @xmath229 a vertex has more neighbors outside the community to which it is assigned than in the community itself . among the three methods , copra suffers the increase of @xmath211 more than louvain method and oslom .",
    "in fact , if @xmath211 is around 0.1 - 0.2 , the nmi achieved by copra is in line with that of louvain method and in general it is quite high ( between 0.849 and 0.917 ) but if @xmath211 tends to 0.6 its nmi decreases of about 90% ( and its values are around 0.018 - 0.023 ) .",
    "this depends on the features of copra : in fact , a vertex @xmath174 is assigned to a community @xmath25 if most of its neighbors already belong to @xmath25 .",
    "of course , such an assignment is problematic for large values of @xmath211 because , as already observed , the neighbors of @xmath174 could be equally split across multiple communities .",
    "it is worth observing that coupling louvain method , copra and oslom with our strategy generally provides also an increase of nmi . to assess",
    "if the improvement provided by our method is significant or not , we carried out a t - test .",
    "we considered a _",
    "p - value _ lesser than 0.001 to determine , over 10 runs of each algorithm ( @xmath230 ) , if the obtained increment was statistically significant or not . according to this test",
    ", significant increments are reported in bold in table [ tab : artificial ] .",
    "it emerges that the increase of nmi is generally extremely significant pairing the louvain method with our weighting strategy ( in particular , for @xmath231 this choice is able to guarantee significant improvements with low values of @xmath211 , while for @xmath232 the increment is obtained also for high values of @xmath211 . ) regarding the choice of copra paired with our strategy , we also obtain statistically significant improvements of nmi with all assignements of @xmath205 and @xmath207 , in particular with medium / high values of @xmath211 .",
    "differently , by considering oslom , the only extremely significant improvement in nmi is obtained while considering @xmath228 , but this increase is neat and appears in all possible configurations of @xmath205 and @xmath207 .",
    "3 .   for a fixed value of @xmath205 and @xmath211",
    ", we observe that the nmi achieved by the louvain method decreases if @xmath207 ranges from 1 to 2 .",
    "if @xmath207 gets larger , there are few communities containing a large number of vertices and a large number of communities which have roughly the same size because they contain few vertices .",
    "these communities are hard to find due to the so - called _ resolution limit _",
    "@xcite : in particular , it is possible to show that community detection algorithms based on the principle of modularity maximization may fail to find communities containing less than @xmath233 edges , being @xmath5 the number of edges in the entire network .",
    "+ however , a big result emerges from table [ tab : artificial ] : if we couple lm with the werw - kpath algorithm then the decay in nmi is softened .",
    "this depends on the different definition of the modularity function that the louvain method attempts to optimize : in the case of weighted network , in fact , the term @xmath20 is no longer 0 or 1 depending if an edge links the vertices @xmath16 and @xmath30 but it is a real number in [ 0,1 ] defining the strength of their links . the definition of the @xmath0 function , therefore , is more precise and this allows higher values of @xmath0 to be achieved .",
    "in this section we describe some works related to our research .    first of all , we point out that an early version of the werw - kpath algorithm discussed appeared in @xcite .",
    "we brought in some little modifications to the original werw - kpath algorithm to achieve more solid results from a theoretical standpoint on the behavior of the algorithms itself . in detail , in the algorithm presented in @xcite the weight @xmath234 of @xmath53 is proportional to the number of times @xmath53 is selected by the algorithm .",
    "this weight is interpreted as the edge centrality of @xmath53 , i.e. , we set @xmath235 : therefore , @xmath236 represents the _ frequency _ of selecting @xmath53 by means of random simple paths consisting of at most @xmath3 edges .",
    "by contrast , in this paper , the weight @xmath234 of @xmath53 counts how many times @xmath53 is selected and the edge centrality @xmath236 returned by the algorithm is equal to @xmath234 divided by the number of trials @xmath70 performed by the algorithm . in this case",
    ", @xmath236 represents the _ probability _ of selecting @xmath53 .",
    "this has relevant practical consequences .",
    "in fact , in @xcite , we were able to prove that the edge @xmath234 lies in a closed interval of the form @xmath237 $ ] , being @xmath238 and @xmath239 two real constants . however , we were not able to provide an estimation of @xmath238 and @xmath239 , and , then , to quantify the approximation error associated with the estimation of @xmath240 .",
    "in addition , we were not able to relate the number @xmath70 of trials carried out by the algorithm to the accuracy of the algorithm in approximating the actual edge centrality values . some design considerations ( later supported by experimental trials ) suggested us to set @xmath241 .",
    "both these limitations have been addressed in the current version of the algorithm by means of theorem [ th : bounds ] and corollary [ cor : bounds ] .",
    "in fact , by means of theorem [ th : bounds ] , we provide tight bounds on the probability that @xmath242 exceeds a given threshold and , by means of corollary [ cor : bounds ] and the subsequent reasoning we showed that , in case of real networks , a number of iterations equal to the number of vertices in the network was enough to provide accurate results .",
    "however , the main novelty introduced in this paper is that we showed how to apply the werw - kpath algorithm to a non - trivial problem , i.e. , the task of finding communities in networks . to the best of our knowledge , there are few works proposing to weight edges in a network to improve the quality of the community detection process .",
    "one of the first approach to weighting edges was proposed in @xcite . in that paper , the authors propose a modified version of the girvan - newman algorithm called _",
    "newman fast_. in particular , given an unweighted , undirected graph @xmath9 , each edge @xmath243 connecting a pair of vertices @xmath16 and @xmath30 is weighted .",
    "the weight of @xmath243 is the normalized product of two terms : the former is the inverse of the edge betweenness associated with @xmath243 whereas the latter ( called _ common neighbor ratio _ ) is the normalized number of vertices which are linked to both @xmath16 and @xmath30 .",
    "after that weighting step has been carried out , the newman fast algorithm attempts to minimize the function @xmath244 defined as    @xmath245    the authors define @xmath246 equal to half of the sum of the weights of the edges that start from vertices in community @xmath247 and end in vertices located in community @xmath248 over the sum of the weights of all the edges in the network . therefore , @xmath249 is the sum of the weights of the edges contained within the community @xmath247 .",
    "the parameter @xmath250 is defined as @xmath251 .",
    "the algorithm proceeds adopting a greedy strategy to maximize @xmath244 : initially , each vertex forms a community and communities are merged so that to increase the value of @xmath244 .",
    "the process stops when no further improvement of @xmath244 can be achieved or all the vertices have been inserted into a single community .",
    "an improvement of the approach of @xcite was presented , by the same authors , in @xcite . in that paper",
    "the authors suggested a slightly different weighting schema in which the contributions of edge betweenness and common neighbor ratio are combined through two weights @xmath252 and @xmath207 .",
    "the authors suggest to tune @xmath252 and @xmath207 so that to maximize the variance in edge distribution .",
    "there are some differences between our approach and that of @xcite . in detail",
    ", in the approach of @xcite , the edge weight is the product of two terms : the former is the edge betweenness , which is a _ global parameter _",
    "( i.e. , its computation requires to know the whole network topology ) and the common neighbor ratio , which is a _ local parameter _",
    "( i.e. , it can be computed by knowing only the neighbors of two vertices ) .",
    "our @xmath3-path centrality , instead , lies between local and global measures because it can be computed by considering random paths of length at most @xmath3 .",
    "therefore , if @xmath3 is kept low ( resp .",
    ", high ) the edge centrality configure itself as a local ( resp . , global ) measure . as a further difference ,",
    "the edge weighting procedure outlined in @xcite has been used to design a modified version of @xmath0 and a greedy algorithm to optimize it . by contrast , in our approach we do not focus on any specific community detection algorithm and , therefore , our approach can be used also with algorithms like copra or oslom which _ do not attempt _ at maximizing modularity . in general , our strategy can be paired up with any community detection algorithm handling weighted networks .    a further , interesting study , is presented in @xcite . in that paper",
    "the authors studied the aforementioned problem of resolution limit @xcite . in @xcite",
    ", the authors showed that the size of the smallest community which can be detected is @xmath233 , being @xmath5 the number of edges in the network . in @xcite",
    "the authors pointed out that by weighting a network the resolution limit amounts to @xmath253 , being @xmath171 the sum of the weights in the network and @xmath254 the maximum weight of an edge connecting vertices located in two different communities .",
    "therefore , a wise choice of weights can significantly lower the resolution limit .",
    "the authors suggested a weighting schema in which the weight of an edge depends on the number of cycles of length @xmath21 containing that edge , being @xmath21 a fixed integer .",
    "the authors provides a modified version of the clauset , newman and moore algorithm @xcite capable of taking into account edge weights .",
    "our approach differs from that proposed in @xcite .",
    "in fact , we leverage on random walks to compute edge weight whereas the approach of @xcite relies on the identification of cycles of length @xmath21 .",
    "unfortunately , the identification of these cycles can be very time expensive as soon as @xmath21 gets large . on the contrary",
    ", we proved both theoretically and experimentally that our strategy scales very well also if applied to large networks .",
    "in this paper we discussed an algorithm , called werw - kpath , to compute edge centralities in networks and we showed that the strategy of weighting edges can generate a significant improvement in the process of discovering communities .",
    "the werw - kpath algorithm exploits random walks of bounded length to compute edge centralities .",
    "we provided a theoretical analysis of the behavior of the werw - kpath algorithm and we showed how to use it in conjunction with already existing community detection algorithm .",
    "we studied the merits and weaknesses of the werw - kpath algorithm by coupling it with three state - of - the - art algorithms , namely louvain method , copra and oslom .",
    "experiments carried out on real networks show that our approach is able to improve the modularity of the community structure detected by the algorithms mentioned above and the improvement up to 17.3% .",
    "we carried out also experiments on artificial networks : experiments showed that coupling louvain method , copra and oslom with our strategy generally provides an increase of the normalized mutual information .",
    "as for future work , we plan to implement a multi - threaded version of the werw - kpath algorithm so that we can simulate multiple random walks on the network in parallel .",
    "we plan to experimentally study the computational improvements deriving from this choice .",
    "a further research direction includes the creation of a friendship _ recommender system _ which suggests new possible connections to the users of a very large - scale online social network , based on the communities they belong to .",
    "t.  alahakoon , r.  tripathi , n.  kourtellis , r.  simha , and a.  iamnitchi .",
    "k - path centrality : a new centrality measure in social networks . in _ proc . of 4th workshop on social network systems _ , pages 16 , 2011 .",
    "u.  brandes , d.  delling , m.  gaertler , r.  grke , m.  hoefer , z.  nikoloski , and d.  wagner . on finding graph clusterings with maximum modularity .",
    "in _ graph - theoretic concepts in computer science _ , pages 121132 , 2007 .              p.  de  meo , e.  ferrara , g.  fiumara , a.  provetti .",
    "generalized louvain method for community detection in large networks . in _ proc .",
    "11th international conference on intelligent systems design and applications _ , pages 8893 , 2011 .",
    "a.  khadivi , a.  rad , and m.  hasler . community detection enhancement in networks using proper weighting and partial synchronization . in _ circuits and systems ( iscas ) ,",
    "proceedings of 2010 ieee international symposium on _ , pages 37773780 .",
    "ieee , 2010 ."
  ],
  "abstract_text": [
    "<S> a community within a network is a group of vertices densely connected to each other but less connected to the vertices outside . </S>",
    "<S> the problem of detecting communities in large networks plays a key role in a wide range of research areas , e.g. computer science , biology and sociology .    </S>",
    "<S> most of the existing algorithms to find communities count on the topological features of the network and often do not scale well on large , real - life instances .    in this article </S>",
    "<S> we propose a strategy to enhance existing community detection algorithms by adding a pre - processing step in which edges are weighted according to their _ centrality _ w.r.t . the network topology . in our approach , </S>",
    "<S> the centrality of an edge reflects its contribute to making arbitrary graph tranversals , i.e. , spreading messages over the network , as short as possible . </S>",
    "<S> our strategy is able to effectively complements information about network topology and it can be used as an additional tool to enhance community detection . </S>",
    "<S> the computation of edge centralities is carried out by performing multiple random walks of bounded length on the network . </S>",
    "<S> our method makes the computation of edge centralities feasible also on large - scale networks . </S>",
    "<S> it has been tested in conjunction with three state - of - the - art community detection algorithms , namely the louvain method , copra and oslom . </S>",
    "<S> experimental results show that our method raises the accuracy of existing algorithms both on synthetic and real - life datasets </S>",
    "<S> .    [ section ] [ theorem]lemma [ theorem]proposition [ theorem]corollary    network science , complex networks , community detection , social networks , social network analysis </S>"
  ]
}
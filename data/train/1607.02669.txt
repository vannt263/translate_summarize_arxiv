{
  "article_text": [
    "since the advent of the world wide web , a significant number of companies have relied on web services to expose and share their products and services , and manage their activities .",
    "one of the most important tasks in current industrial applications that use web services consists of discovering suitable services that meet some threshold of the user needs , which is usually referred to as service matchmaking  @xcite .",
    "the expected output of this task is a ranking of available services that meet the matching threshold of the user needs sorted by relevance . in the event",
    "a single service is not available that atomically satisfies the user needs , multiple atomic services are usually strung together to design a composite service that amounts to a process known as service composition  @xcite .    in the context of big data , it can be argued that in addition to the size of the data , the variability and the number of candidate repositories or services pose a significant challenge for users toward efficiently finding and using them .",
    "we posit that the sheer number of candidate services make it necessary to automate the process of service matchmaking and composition since a large number of services may potentially satisfy user needs  @xcite , often partially .    while atomic service matching or composing atomic services based on the `` all or nothing '' model  @xcite covers many applications , services requiring components of two or more web services can not be composed currently due to technical hurdles .",
    "we believe disallowing partial service matching , and service composition using such partial matchings limit the applicability of service composition in real - world scenarios , since they lead to exceedingly high rejection of potentially suitable services . allowing `` mix and match '' of parts of services will enlarge the class of applications that can be modeled or the services that can be supported , i.e. , instead of matching a single service , it is possible that the best solution to some user needs may entail the composition of parts of several services in a meaningful way .    in this paper , we present a new approach to service matchmaking and composition that , to the best of our knowledge , is the first that addresses distributed , fine grain and approximate service discovery and composition in the context of big data . in our approach , we represent services as graphs , and use  graph summarization \" to describe them at multiple layers .",
    "we then use the resulting stratified graphs to match services at different description granularity to improve precision and recall . while we view the graph matching technique based on stratified graph summaries and the issue of graph summarization as an orthogonal research and",
    "leave them outside the scope of this paper , we believe that developing such algorithms are possible along the lines of  @xcite , though not trivial . furthermore , we also propose to allow composing services from partial matches of services and stitch them together to architect a new service .",
    "such an approach will allow composing parts of atomic services not possible in contemporary models .    as a motivation for our approach",
    ", we use an example from the benchmarking domain to illustrate the salient features of our service matching model .",
    "we also use this example to discuss the limitations of the existing models and show how we can be overcome them .",
    "we also briefly present a possible representation model for service description that will allow partial matching and our proposed ",
    "service stitching \" as we envision it . while we are agnostic about the standards to choose , we use features borrowed from bpmn and owl - s to represent service description workflow graphs for the time being .",
    "finally , our thesis is that , our approach will effectively reduce latency in service discovery , improve efficiency and accuracy of service matchmaking and composition by taking different layers of abstraction into account , and by composing best - fitting services from disparate services .",
    "the remainder of the paper is organized as follows : related research is presented in section  [ sec : related - research ] followed by a motivating example in section  [ sec : motivating - example ] where we discuss the merits of our approach in relation to the limitations of current approaches . in sections  [ sec : service - matchmaking ] and",
    "[ sec : service - composition ] respectively we describe our idea of service matchmaking and composition .",
    "we wrap up our presentation by presenting our overall conceptual model in section  [ sec : model ] before concluding in section  [ sec : conclusions ] .",
    "sycara et al .",
    "@xcite successfully demonstrated that including semantic annotations over services improve service matchmaking and composition . in semantic web , several models such as owl - s  @xcite and wsmo  @xcite support such annotations .",
    "interestingly , many service matchmaking and composition approaches that use semantic annotations are based on graph matching  @xcite , and an upward trend in leveraging graph matching is clearly visible ( e.g. , @xcite ) .",
    "graph matching currently is a very active area of research which can broadly be classified into two groups : exact and subgraph matching , and approximate matching . exact matchers aim to find those structurally isomorphic subgraphs that exactly match a specific query .",
    "some of the prominent systems include graphql  @xcite , turbo@xmath2  @xcite , and netql  @xcite .",
    "approximate graph matching , on the other hand , focuses on finding those subgraphs that approximately match a specific query within a degree of deviation . such matching",
    "are useful when the query graph is tentative , or data sets are noisy or encomplete .",
    "some of the well regarded systems in approximate matching include tale  @xcite , sapper  @xcite and tram  @xcite .",
    "currently , a new direction of research in graph summarization is also taking root @xcite that has significant potential in service matchmaking as we advocate in this paper .",
    "while the main focus remains on summarization of graphs based on types ( node or edge type ) , efforts are also underway to summarize graphs to discover functional similarity or equivalence ( e.g. , @xcite ) .",
    "such functional summarization of graphs have been instrumental in designing equivalent workflow design policies for commercial applications @xcite , and can be a powerful tool for service matching based on functional equivalence @xcite .    while the logic based service description representation ( e.g. , @xcite ) are different than the graph based representations in owl - s ( e.g. , @xcite ) , neither are flexible enough to accommodate errors or closeness in form of approximate matching .",
    "in real life applications , where large number of diverse services are possible , it is difficult to imagine user queries to deterministic in terms of its needs with respect to available descriptions of services .",
    "most likely scenario is that most services will fail to match when an expectation ( a query ) is submitted and several components of multiple services when strung together may satisfy that need . in this paper , we take the position that an approximate graph matching over stratified summarized graphs of web service descriptions will yield a more realistic and effective service discovery that will allow service stitching to orchestrate a target service from multiple partially matched services . in the remainder of the paper",
    "we introduce such a model .",
    "let us consider an application where a user wishes to study the performance of a number of query engines for benchmarking , each of which has an entry point by means of which queries can be issued .",
    "in addition to the entry points , it is necessary to use a set of queries to test the engines .",
    "these queries require data that can be given as input or can be randomly generated according to a given schema . during the benchmarking task ,",
    "the performance of each query engine is measured based on a given performance variable , such as the time used or memory consumed by the engine to execute the queries over the data . finally , the expected output is a ranking in which the engines are sorted according to their performance . in our recent research",
    ", we have actually successfully applied such an approach to benchmark sparql engines over rdf data in  @xcite , where we devised a statistical evaluation methodology to compare those engines side by side . in this paper , we leverage an abstraction of this approach to focus on the benchmarking of relational engines by means of sql queries as follows .",
    "in this example , assume that there exists a service that takes a relational table , a set of sql queries and a set of engine entry points as input , and it outputs a relational table that contains the time consumed by each query engine to execute the queries over the input data .",
    "figure  [ fig : query - exec - model ] shows an example of a model to describe the inputs and outputs of this service called the _ query execution service_. if a user wishes to use such a service , figure  [ fig : query - exec - output - user - needs ] shows an example of a model that describes the user needs .",
    "note that the query topology is different from the description topology , and the name of the nodes and edges are not the same .",
    "due to these dissimilarities , current service matchmakers will reject the _ query execution service _ as a candidate match .",
    "the main reasons being a mismatch in topology and semantics , which is extremely difficult to resolve using existing technologies including approximate graph matching @xcite .        to overcome these limitations , it is necessary to take into account the semantic and topological disparities for a successful matchmaking .",
    "for instance , if it is possible to partially match the semantics of a relational table , the system should output such a service as a potential candidate with a estimate of semantic closeness . although the matching process will be involved and significantly complicated , but doing so will improve the matching quality , precision and recall .",
    "once we allow flexible matching , we can consider allowing heterogeneity , and a  service stitching \" paradigm in which we allow services to be composed by accepting partial services from different sources .",
    "for example , let us assume that the input data format user wants to use for the _ query execution service _ is in text format while the service itself requires it in tabular format .",
    "this mismatch could be easily resolved by using an auxiliary service for format conversion without rejecting the match .",
    "this can be made possible if the semantic descriptions for the services ( input output behavior of each of the nodes in the service description graphs ) are available , and if we allow plugging in external components into a service .",
    "finally , once we allow external plug - ins , we should be able to actually generalize this concept to allow extracting partial services from a description , and stitch several such partial descriptions to compose an entirely new service to meet a user need .",
    "though challenging , such an approach will allow orchestrating services that does not exist even though the components needed do .",
    "the idea is detailed in the remainder of the paper in detail .",
    "we illustrate our approach to flexible service matching using a high level abstraction of the example of relational query engine benchmarking in @xcite . in which , the process of benchmarking has two critical steps : the first step consists of executing a set of queries over a supplied data set using the engines being tested . in the second step ,",
    "we analyze the performance of the engines , so we need a method to compare the values of the performance variable that we obtained in the previous step .",
    "we consider these values as samples of an unknown random variable , so we use kruskal - wallis s _ h _ test  @xcite to determine if there are statistically significant differences among the performance variable for the engines under test .",
    "if there is no performance difference among the engines , it means that they all behave statistically identically with respect to the performance variable .",
    "otherwise , we use wilcoxon s signed rank test  @xcite to rank the engines according to their performance . taking inspiration from this methodology , we devised the three composite service descriptions represented in the form of graphs in figure  [ fig : wf - examples ] .",
    "+   +    figure  [ fig : random - data - wf ] presents a composite service whose goal is to visualize the performance of a set of query engines based on some randomly generated data . in this figure ,",
    "atomic services are represented as oval rectangles , and input and output data are represented as rectangles with folding corners . in this representation ,",
    "data nodes are shown to have three fields : 1 ) the name ( n ) of the input / output data ; 2 ) the format ( f ) of the data , which can be csv , relational , xml , or rdf , to mention a few ; and 3 ) the semantics ( s ) of the data , which describes the contents of the data node .",
    "we then use a set of pre - defined labels to describe the functionalities of these graphs and their components as follows .",
    "let us assume that we have a distinguished set of labels @xmath3 .",
    "each label @xmath4 represents a well understood concept in real life , such as  student s t - test \" , or  ranking \" . to be able to associate a concept with a graph that captures its spirit , we use the function @xmath5 , where @xmath6 is a set of graph descriptions of the form @xmath7 such that @xmath8 is a graph and @xmath9 is its input output behavior described in terms of data , format , analytical tools and other needs for the graph to function according to its specification ( as shown in figure  [ fig : wf - examples ] ) .",
    "note that a concept may map to a set of such graphs that are likely implementations of that concept .",
    "the selection of anyone of these graphs largely depends on how well the input output behavior of the graph matches with the expected behavior .",
    "the inverse function @xmath10 , on the other hand , associates with each graph description a conceptual label that describes it uniquely .",
    "we say , a graph description corresponding to a service is _ atomic _ when no sub - graph of it are mapped to a conceptual label in @xmath3 , i.e. , a description is self - contained and indivisible .",
    "otherwise , it is called _ composite _  composed of atomic and other composite descriptions .",
    "for example , the ( composite ) service in figure [ fig : random - data - wf ] comprises of three atomic services : 1 ) _ random data generation _ that automatically generates a set of random relational data based on a set of input parameters .",
    "2 ) _ all query executor _ which takes a number of sql queries , a set of relational raw data and a set of query engine endpoints as input , and outputs the performance of the engines .",
    "3 ) the _ data visualizer _ is responsible for plotting the performance results in a set of charts .",
    "these atomic services are at the lowest level of representation of the composite service in layer 2 in figure  [ fig : random - data - wf ] .",
    "additionally , this service is summarized into two different layers of abstraction . in layer 1 ,",
    "_ random data generation _ and _ all query executor _ have been grouped into a single composite service called _ random data query executor_. in other words , the data nodes have been summarized containing their formats and some of their semantics . in layer 0 , the whole service has been summarized into two nodes : a data node that represents some input data in sql format , and another composite service called _ random results visualizer_.    figures  [ fig : wilcoxon - wf ] and [ fig : student - wf ] show two similar services at three different levels of summarization .",
    "the first of which implements the service in figure [ fig : random - data - wf ] using wilcoxon s signed - ranked test , while the second implements it using kruskal - wallis s h test and student s t - test .",
    "now assume that a non - expert user expresses her need to benchmark a set of query engines and rank them according to their performance as the query graph shown in figure  [ fig : eng - cmp - high ] , expressed equivalently at two different layers of detail or summarization . to find a matching service , we can contemplate using an approximate graph matcher to identify the candidate services that match with this query graph and the degree to which they match . regardless of the query at layer 1 or layer 0 , we can expect a matcher to fail or return a poor match with any of the three services in figure [ fig : wf - examples ] due to vastly different topology or labels .",
    "but a more smarter matcher that takes into account the semantic meaning of the labels , and is able to consider summarized concepts will be able to recognize a possible match .",
    "for instance , this query will not match well with the service in figure  [ fig : random - data - wf ] at layer 0 , but it will partially match if we compare layer 1 of the query with layer 2 of the service , i.e. , both contains a _ query execution service_. with respect to the service in figure  [ fig : wilcoxon - wf ] , the query will partially match at layers 0 and 1 , i.e. , _ engine comparator _ node , and _ query executor _ and _ ranker _ nodes , respectively .",
    "regarding the service in figure  [ fig : student - wf ] , it is possible to match the single node at layer 0 ( _ sample comparator _ and _ engine comparator _ ) . at layer 1",
    ", it will partially match with the output nodes since both are rankers .",
    "the main observation here is that the query should not fail , and we should be able to find a match despite the disparity in the details of the service description , or the query posed .",
    "+    if we now consider the queries in figure [ fig : eng - cmp - low ] , in which the user specifically wants to use kruskal - wallis s h test to analyze the differences between the engines , and use wilcoxon s signed - ranked test to rank the engines according to their performance , we quickly discover that regardless of version of the query in layer 1 or layer 0 is submitted , it will fail . in this case",
    ", the query in layer 1 will partially match with the service in figure  [ fig : random - data - wf ] at layer 2 , and with the service in figure  [ fig : wilcoxon - wf ] at layers 0 and 1 .",
    "furthermore , while the service in figure  [ fig : student - wf ] will not match at layer 0 with the query , but the query at layer 1 will match with the layer 2 description of the service .",
    "thus , it is important to note that while no service matches the query enough in figure  [ fig : eng - cmp - low ] , it is possible to orchestrate a service by combining components of different services in a meaningful way , which we advocate in this paper .",
    "our main goal is to gain the ability to match or orchestrate services with respect to a query described with well understood concepts in the form of a specialized graph from a large set of service descriptions , also represented using graphs .",
    "in contrast to most existing approaches , we allow service descriptions to be as detail as possible and at the discretion of the designer and service provider but aim to compensate for any omission in detail to return a successful match .",
    "this approach removes the limitations imposed by current systems in two ways .",
    "first , the topology of the service description graphs need not match the query graph structurally so long we are able to match them conceptually at different summarization levels using the functions @xmath11 and @xmath12 . for this to be successful",
    ", we primarily insist upon a well understood vocabulary of concepts , and a mechanism to roll - up and drill - down the summarization hierarchy of the description and query graphs to find a match , using a process we call _ stratified graph matching_. as we have mentioned at the outset , we consider research in stratified graph matching to be orthogonal to our presentation here and needs further investigation .",
    "the advantage afforded by this approach is particularly liberating for the service providers .",
    "for instance , the disigner of the service in figure  [ fig : student - wf ] can now choose to expose it at any level and not worry about its possible match with a query .",
    "instead , she is now free to focus on the details on how best she can describe the service as one single description .",
    "second , service discovery based on stratified graph matching also inspired a novel approach to service orchestration at the finest granularity , we call _ service stitching_. stacking up multiple services in a pipeline to compose a complex service manually is not new .",
    "what is new in service stitching is that a query can now be directly mapped to multiple services using the same principle of stratified graph matching because we are allowed to look for services elsewhere in a piecewise fashion , in this instance laterally . with a slight engineering",
    ", we can also allow partial services in a description to be invoked .",
    "for example , consider again the query shown in figure  [ fig : eng - cmp - low ] consisting three concepts that match with the atomic services in figures  [ fig : random - data - wf ] ,  [ fig : wilcoxon - wf ] , and  [ fig : student - wf ] , respectively , but not as single service .",
    "we can visualize connecting the output of the kruskal - wallis s h test sample checker service in figure  [ fig : student - wf ] with the input of the wilcoxon s signed - ranked test ranker service in figure  [ fig : wilcoxon - wf ] , since the former outputs the difference analysis and the latter takes this analysis as input , i.e. , the output / input data share the same semantics .",
    "the ability to stitch partial services to construct a target service will hinge upon our ability to enter and exit a desired points in a service description graph , a practice not allowed in current service implementations .",
    "however , in our approach , all graph descriptions include input out behaviors and thus includes the building blocks needed to support service stitching as detailed in the following section .",
    "we hinted on stitching kruskal - wallis s h test with the wilcoxon s signed - ranked test ranker services in the previous section .",
    "since the kruskal - wallis s h test sample checker in figure  [ fig : student - wf ] expects the input samples in rdf format , and the all query executor service in figure  [ fig : random - data - wf ] outputs the data in relational format , a suitable conversion service is required to make them compatible .",
    "once we are able to stick in such conversions , we are able to orchestrate the service in figure  [ fig : final - composite - service ] ( format conversions shown as thick arrows ) .",
    "therefore , we assume that we have a database of converter services is available to facilitate simple heterogeneity resolution , e.g. , from relational data to rdf  @xcite , or from xml files to relational data  @xcite , to mention just a few .    to support the system we envisioned in the previous sections , a new conceptual model for service description and matching is required .",
    "figure  [ fig : conceptual - model ] presents an uml - like conceptual model that can be used in this context , which allows to represent that a composite service is composed of a number of atomic services .",
    "each atomic service has a number of inputs and outputs , which can be automatically transformed by means of converters . finally ,",
    "each composite service , atomic service , input / output data , and converter is related to a semantic description that allows us to automatically perform the matchmaking and composition of atomic services .",
    "it is important to note that our model is agnostic to the implementation of the system , i.e. , it can be used in conjunction with bpmn or owl - s processes to describe workflows . in this context ,",
    "our approach has similarities with the description of processes in owl - s , for instance , atomic , simple and composite processes in owl - s can be seen as our service descriptions at layer 2 , the summarization of the services in the different abstraction layers , and our composite services , respectively .",
    "furthermore , owl - s relies on bindings to specify how the atomic processes are connected , which is also similar to our specification on how to connect two or more atomic services .    for the semantic descriptions of the atomic services in our conceptual model , it is possible to use any of the existing approaches in the literature , such as owl - s or wsmo .",
    "we have included in our conceptual model the name , format and semantics fields that we have used in previous sections to motivate our approach ; however , this is a clear point of variability of our conceptual model since , depending on the scenario , it is necessary to use different semantics , and it could be suitable to use one specific approach to add semantic annotations to the services .    to illustrate the use of our conceptual model , we present a sample instantiation in figure  [ fig : sample - instantiation ] . in this instantiation",
    ", we have used owl - s to model the semantics of the input / output data .",
    "it corresponds to a part of the composition of atomic services in figure  [ fig : final - composite - service ] , specifically , how we transform from the output data of the all query executor service to the input data of the wilcoxon s signed - ranked test ranker service , which are represented as a relational table and a csv file , respectively .",
    "note that the relational to csv converter has access to the semantic descriptions of both the relational table and the csv file , which are used to perform the conversion between them .",
    "in this paper , we presented a novel approach to service matchmaking and composition to deal with the limitations imposed by current service discovery practices .",
    "our approach relies on representing services and user needs as graphs , which are matched using approximate graph matching based on functional graph summarization .",
    "the advocated approach expects to leverage developments in 1 ) functional summarization of graphs based on well understood concepts , 2 ) stratified graph matching based on functional summarization , 3 ) partial service invocation in a service description graph , and 4 ) service stitching , as we have outlined .",
    "the conceptual model we have introduced supports the envisioned functionalities .",
    "while the research challenges introduced are significant and ongoing , our thesis is that once these challenges are addressed , we will be in a position to discover services in an unprecedented manner , scale and at a more finer level to meet the challenges of emerging applications in large scale data integration in the age of big data .",
    "z.  huma , c.  gerth , g.  engels , and o.  juwig . a uml - based rich service description language for automatic service discovery of heterogeneous service partners . in _ forum at the 24@xmath13 international conference on advanced information systems engineering _ ,",
    "pages 9097 , 2012 .",
    "g.  liang and s.  k. lau . towards",
    "more flexible internal workflow change : weakly equivalence concept for inter - organizational workflow design . in _",
    "9th ieee international conference on e - commerce technology _ , pages 141148 , 2007 .",
    "d.  l. martin , m.  h. burstein , d.  v. mcdermott , s.  a. mcilraith , m.  paolucci , k.  p. sycara , d.  l. mcguinness , e.  sirin , and n.  srinivasan . bringing semantics to web services with owl - s . in _ world wide web _ ,",
    "pages 243277 , 2007 ."
  ],
  "abstract_text": [
    "<S> a significant number of current industrial applications rely on web services . </S>",
    "<S> a cornerstone task in these applications is discovering a suitable service that meets the threshold of some user needs . </S>",
    "<S> then , those services can be composed to perform specific functionalities . </S>",
    "<S> we argue that the prevailing approach to compose services based on the `` all or nothing '' paradigm is limiting and leads to exceedingly high rejection of potentially suitable services . </S>",
    "<S> furthermore , contemporary models do not allow `` mix and match '' composition from atomic services of different composite services when binary matching is not possible or desired . in this paper </S>",
    "<S> , we propose a new model for service composition based on `` stratified graph summarization '' and `` service stitching '' . </S>",
    "<S> we discuss the limitations of existing approaches with a motivating example , present our approach to overcome these limitations , and outline a possible architecture for service composition from atomic services . </S>",
    "<S> our thesis is that , with the advent of big data , our approach will reduce latency in service discovery , and will improve efficiency and accuracy of matchmaking and composition of services .    </S>",
    "<S> = `` 0100 = ' ' 0101 = `` 0102 = ' ' 0103 = `` 0104 = ' ' 0105 = `` 0106 = ' ' 0107 = `` 0108 = ' ' 0109 = \" 010a    [ section ] [ section ] [ section ] [ section ] [ section ] [ section ] [ section ]     + * carlos r. rivero*@xmath0 and * hasan m. jamil*@xmath1 + @xmath0department of computer science , rochester institute of technology , usa + crr@cs.rit.edu + @xmath1department of computer science , university of idaho , usa + jamil@uidaho.edu </S>"
  ]
}
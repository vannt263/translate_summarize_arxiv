{
  "article_text": [
    "tor and its users currently face serious security risks from adversaries positioned to observe traffic into and out of the tor network . large - scale deanonymization has recently been shown feasible  @xcite for a patient adversary that controls some network infrastructure or tor relays .",
    "such adversaries are a real and growing threat , as demonstrated by the ongoing censorship arms race  @xcite and recent observations of malicious tor relays  @xcite . in light of these and other threats",
    ", we propose an approach to representing and using trust in order to improve anonymous communication in tor .",
    "trust information can be used to inform path selection by tor users and the location of services that will be accessed through tor , in both cases strengthening the protection provided by tor . a better understanding of trust - related issues",
    "will also inform the future evolution of tor , both the protocol itself and its network infrastructure .",
    "attacks on tor users and services include first ",
    "last correlation  @xcite , in which an adversary correlates traffic patterns between the client and a guard with traffic patterns between a tor exit and a network destination in order to link the client to her destination .",
    "they also include more recently identified attacks on a single end of a path such as fingerprinting users  @xcite or services  @xcite .",
    "with trust information , users could choose trusted paths through the tor network and services could choose server locations with trusted paths into the network in order to reduce the chance of these attacks .",
    "other work  @xcite has considered the use of trust to improve security in tor .",
    "the work presented here is novel in that ( _ i _ ) it considers trust in network elements generally and not just tor relays and ( _ ii _ ) it considers more general adversary distributions than in previous work .    the system we describe here is designed to produce a distribution on the sets of network locations that might be compromised by a single adversary . in the case of multiple , non - colluding adversaries , multiple distributions could be produced .",
    "these distribution can then be used , _",
    "e.g. _ , as part of a user s path - selection algorithm in tor . in constructing our preliminary experiments",
    ", we suggest how our distributions may be used in this way . here",
    ", we capture these distributions using bayesian belief networks ( bbns ; see , _ e.g. _ , @xcite ) .",
    "the contribution of this work is the proposal of a modular system that ( _ i _ )  allows users to express beliefs about the structure and trustworthiness of the network , ( _ ii _ )",
    "uses information about the network , modified according to the user - provided structural information , to produce a `` world '' that captures how compromise is propagated through the network , and ( _ iii _ )  combines this world with the user s trust beliefs to produce a bbn representing a distribution on the sets of network elements that an adversary might compromise . as part of our contribution ,",
    "we present results of proof - of - concept experiments .",
    "these show that users can employ our system to reduce their risk of first ",
    "last correlation ; this risk is reduced even further when our system also informs the locations that services choose for their servers .",
    "the body of this paper provides a high - level view of our system , starting with an overview of its operation .",
    "in addition to describing what the system provides and how it is combined with user beliefs to produce a bbn , we discuss some issues related to users trust beliefs .",
    "we then present our experimental results and sketch ongoing and future work . as noted throughout , additional details and examples",
    "are provided in the appendices .",
    "we survey our system , which is largely modular .",
    "this allows it to be extended as new types of trust information are identified as important , _ etc_. the system comes with an ontology that describes types of network elements ( _ e.g. _ , autonomous system ( as ) and relay - operator types ) , the relationships between them that capture correlated compromise by an adversary , and attributes of these things . using the ontology and various published data about the network",
    ", the system creates a preliminary `` world '' populated by real - world instances of the ontology types ( _ e.g. _ , specific ases and relay operators ) .",
    "the world also includes relationship instances that reflect which particular type instances are related in ways suggested by the ontology .",
    "user - provided information may include revisions to this system - generated world , including the addition of types not included in the provided ontology and instances of both ontology - provided and user - added types .",
    "the user may also enrich the information about the effects of compromise ( adding , _",
    "e.g. _ , budget constraints or some correlations ) .",
    "the user also provides beliefs about her trust in particular network elements and how her trust in network elements is affected by different attributes of those elements .",
    "this user - provided information is used , together with the edited world , to create a bayesian belief network ( bbn ) that encodes the probability distribution on the adversary s location arising from the user s trust beliefs .",
    "the bbn can , for example , provide samples from the distribution of the tor relays and tor `` virtual links '' ( transport - layer connections with tor relays ) that are observed by the adversary .",
    "appendix  [ ap : overview ] provides an expanded survey of the system s architecture .",
    "figure  [ fig : ontology ] shows the elements of our ontology . rounded rectangles are types , and ovals are output types .",
    "cylinders are attributes ; with the exception of relay software and physical location , which the user may modify , these are provided by the user",
    ". the user may also provide new attributes .",
    "directed edges show expected relationships between types .",
    "for example , the edge from the `` as '' type to the `` router / switch '' type indicates that we expect that the compromise of an as will likely contribute to the compromise of one or more routers and switches .",
    "other ontologies may modularly replace the one described here if they satisfy the assumptions described in app .",
    "[ ap : ontology ] .",
    "that appendix also provides details about the elements of the ontology we use here .",
    "the system constructs a preliminary world including instances of tor relays , relay families , ases , internet exchange points ( ixps ) , as and ixp organizations , virtual links between every as and tor relay , and countries ( as legal jurisdictions ) .",
    "the system assigns to relevant instances the relay - software ( from tor descriptors  @xcite ) and physical - location ( from , _",
    "e.g. _ , the maxmind geoip database  @xcite ) attributes .",
    "the system also creates relationships from families to their relays , countries to the relays and ixps they contain , as and ixp organizations to their members , and ases and ixps to the virtual links on which they appear ( determined by an as - level routing map  @xcite ) .",
    "a fuller description of this part of the process is given in app .",
    "[ app : sysworld ] .",
    "the user may provide various data to inform the operation of the system .",
    "however , many users may not wish to do this , and the system includes a default belief set designed to provide good security for average users . in sect .",
    "[ sec : exp ] we describe a possible default belief set motivated by the discussion of trust in sect .",
    "[ sec : trust ] . for simplicity",
    ", we refer to beliefs as being provided by the user , but wherever they are not , the defaults are used instead .",
    "the user provides structural information that is used to revise the system - generated world .",
    "this may include new types ( _ e.g. _ , law - enforcement treaties ) and the addition or removal of type instances and relationships between them ( _ e.g. _ , adding relay operators known to the user ) .",
    "the user may also define new attributes , change the system - provided attributes , or provide values for empty attributes ( _ e.g. _ , labeling countries by their larger geographic region ) .",
    "the user s beliefs may incorporate boolean predicates that are evaluated on instances in the revised world .",
    "for example , the user may have increased trust in ases above a certain size .",
    "we sketch a suitable language for this in app .",
    "[ app : predlang ] , but this can be replaced with another if desired .    finally , the user provides beliefs of four types that are used in constructing the bbn from the revised world . the first two concern the propagation of compromise .",
    "budget beliefs allow the user to say that an instance @xmath0 in the edited world has the resources ( monetary or otherwise ) to compromise @xmath1 of its children that satisfy some predicate @xmath2 . enforcing this as a hard bound appears to be computationally harder than we are willing to use in the bbn ,",
    "so we do this in expectation .",
    "compromise - effectiveness ( ce ) beliefs allow the user to express some correlations between the compromises of nodes by saying that , if an instance @xmath0 is compromised , then , with probability @xmath3 , all of @xmath0 s children satisfying a predicate @xmath2 are compromised .",
    "for example , this captures the possibility that a compromised as compromises all of its routers except those of a particular model , for which the as has made an error in their ( common ) configuration file .",
    "the other two belief types concern the likelihood of compromise .",
    "relative beliefs allow the user to say that instances satisfying a given predicate ( _ e.g. _ , relays running a buggy os , network links that traverse a submarine cable , or ases that are small as determined by their number of routers ) have a certain probability of compromise .",
    "( in particular , it specifies the probability that they remain uncompromised if they are otherwise uncompromised . )",
    "absolute beliefs allow the user to say that instances satisfying a given predicate ( _ e.g. _ , the node is an as and the as number is 7007 ) are compromised with a certain probability , regardless of other factors .",
    "the bbn construction from the edited world is described in detail in app .",
    "[ app : bbntrans ] . in brief , the nodes from the edited world are copied to the bbn .",
    "compromise - effectiveness beliefs add nodes to guarantee the correlations ( these new nodes are compromised with some probability ; if one is compromised , then all of its children are compromised with probability 1 ) .",
    "other than accounting for these new nodes , the directed edges in the bbn are those from the edited world .",
    "budget beliefs may further change the probability that compromise is propagated along a directed edge .",
    "the values associated with the relative beliefs that apply to a node are associated with that node . unless there is an absolute belief that applies to the node ( and would determine the node s compromise probability ) ,",
    "the node s probability of compromise is @xmath4 , where @xmath5 is the ( multi)set of compromise - propagation values associated with the edges from the node s compromised parents and @xmath6 is the ( multi)set of values from the relative beliefs that apply to the node .",
    "we now discuss where trust judgments come from by sketching , as a simple example , the trust rationale behind a tor trust policy that might be distributed with client software as a default .",
    "such a policy would be designed not to offer the best protection to particular classes of users but to adequately protect most tor users regardless of where they are connecting to the network or what their destinations and behaviors are .",
    "the most useful information about tor relays for setting a default level of trust is probably relay longevity .",
    "running a relay in order to observe traffic at some future time or for persistent observation of all traffic requires a significant investment of money and possibly official authorization approval .",
    "this is all the more true if the relay contributes significant persistent capacity to the network .",
    "further , operators of such relays are typically more experienced in many senses and thus somewhat less open to external compromise via hacking .",
    "the amount of relay trust is thus usefully tied to the length of presence in the network consensus , uptime , and bandwidth .",
    "this approach does not resist a large - budget , nation - state - scale adversary with authority to monitor relays persistently , but it will help limit attacks to adversaries with such persistent capabilities .    there is no general reason to trust one as , ixp , _",
    "etc_. , more than another , but one should not presume that they are all completely safe .",
    "it thus is reasonable to assume the same moderate risk of compromise for all elements forming the links to the tor network and between the relays of the network when creating a default trust policy .",
    "an example of an important non - default case is connecting users to sensitive destinations that they especially do not want linked to their location or possibly to their other tor behaviors .",
    "for example , some users need to connect to sensitive employer hosts , and dissident bloggers could be physically at risk if seen posting to controversial sites .",
    "these users may have rich trust beliefs ( either of their own or supplied by their organizations ) about particular relays , ases , _",
    "etc_. , based on who runs the relay , hardware , location , _",
    "etc_.    note that the average client using a default trust policy may be subject to errors because the average client will rarely be exactly at the client average , and all clients may be subject to errors in judgments underlying a trust policy .",
    "as a proof of concept , we constructed a trust belief that models a pervasive adversary and ran some experiments to examine how trust might improve security in tor .",
    "in particular , we considered how trust might be used to prevent the first ",
    "last correlation attack when accessing a given online chat service .",
    "these experiments just show the potential for improvement from using trust ; they do not take into account other attacks or how to maintain good performance .",
    "we suppose that users are trying to avoid a powerful adversary called `` the man . ''",
    "this adversary might compromise relay _ families _ and as or ixp _ organizations _",
    ", where a family or organization is a group controlled by the same entity .",
    "each family is compromised by the adversary independently with probability between 0.001 and 0.1 , where the probability increases as the family s longevity in tor decreases .",
    "each as and ixp organization is compromised independently with probability 0.1 .    against the man ,",
    "we examine both how users can choose more - secure paths through tor and how the service can choose server locations to make them more securely accessible via tor .",
    "the algorithm we consider for trust - aware path selection begins by choosing as its _ guards _ ( _ i.e. _ , relays used by a client to start all connections into tor ) the three guard relays with the smallest probabilities that the adversary observes the path from the client to the guard or the guard itself .",
    "then for a given destination , the algorithm chooses one of these guards and an _ exit _ ( _ i.e. _ , a relay that will initiate connections outside the tor network ) to minimize the probability of a first  last correlation attack .",
    "the algorithm for choosing server location considers only those ases containing an exit , which minimizes the chance for the adversary to observe traffic between the exit and destination .",
    "the algorithm greedily locates each server for the greatest reduction in the probability that users in the most common locations ( and using the given trust - aware path - selection algorithm ) are open to a first  last correlation attack .",
    "probabilities are estimated by repeated sampling .    for our experiments , we used web chat server ` webirc.oftc.net ` as the destination service .",
    "this irc service is run by the open and free technology community and is popular with tor developers .",
    "we considered users coming from 58 of the top ases as measured by juen  @xcite , which in their observations included the client location for over 95% of tor client packets .",
    "our results are shown in table  [ table : experiments ] .",
    "the first row shows a first ",
    "last compromise probability of over 0.1 for a client using tor s default path - selection algorithms to connect to the current chat server location .",
    "we can see that by using trust to choose guard and exit relays , clients can reduce the compromise probability by a factor of over 2.8 on average .",
    "when in addition the service changes the location of its server , that probability drops again by a factor of over 2.7 and approaches the minimum possible of @xmath7 .",
    "it appears that adding additional server locations does not add significantly to user security .",
    "note that each probability is estimated with 100,000 samples , which can explain why some probabilities are slightly below 0.01 and why the probabilities sometimes increase slightly when a server is added .",
    "see app .",
    "[ ap : exp ] for further experiment details .          to construct the man adversary",
    ", we must create a routing map of the internet that includes ases , ixps , and tor relays .",
    "we must also group ases and ixps into organizations , identify relay families , and evaluate the longevity of tor relays . we do so using the techniques and data sources described in appendix  [ app : sysworld ] .    to build the routing map , we used caida topology and link data from 12/14 and routeviews data from 12/1/14 .",
    "the resulting map included 46,368 ases , 279,841 links between ases , and 240,442 relationship labels .",
    "to group ases by the organization that controls them , we used the results of cai  _ et al_.  @xcite . these included data about 33,824 of the ases in our map , and they resulted in 3,064 organizations that included more than one as with a maximum size of 81 and a median size of 2 .",
    "we used the results of augustin  _ et al_.  @xcite to identify ixps and their locations between pairs of ases .",
    "these results show 359 ixps and 43,337 as - pairs between which at least one ixp exists .",
    "we then used the results of johnson  _ et al_.  @xcite to group ixps into organizations .",
    "these produce 19 ixp organizations with more than one ixp , for which the maximum size is 26 and the median size is 2 .",
    "we add relays to the routing map using tor consensuses and descriptors from tor metrics  @xcite .",
    "we used the tor consensus of 12/1/14 at 00:00 .",
    "the network at this time included 1,235 relays that were guards only , 670 relays that were exits only , and 493 relays that were both guards and exits .",
    "the consensus grouped relays into 152 families of size greater than one , of which the maximum size was 25 and the median size was 2 .",
    "family uptime was computed as the number of assignments of the flag to family members , averaged over the family members and the consensuses of 12/2014 .",
    "we mapped the tor guards and exits to ases using routeviews prefix tables from 12/1/14 , 12/2/14 , and 11/30/14 , applied in that order , which was sufficient to obtain an as number for all guards and exits .",
    "note that we observed one exit relay that mapped to an as that did nt appear in our map , and so we added that additional as .",
    "there were 699 unique ases among the guards and exits .",
    "we created paths from each as in our map to each guard and exit as .",
    "the median number of paths that we could infer to a guard or exit as was 46,052 ( out of the 46,369 possible ) .",
    "the maximum as path length was 12 , and the median as path length was 4 .",
    "the maximum number of ixps on a path was 18 , and the median number was 0 .",
    "the resulting bbn for the man thus included 2398 relay variables ( one for each guard and exit ) and 32,411,931 virtual links ( one from each as to each guard or exit as ) .",
    "for any path missing from our routing map , we simply took the path to include only the source as and destination as .",
    "the probability of compromise for a family @xmath97 with uptime @xmath98 was set to be @xmath99 .      for all of our experiments , we considered security from 58 of the 60 most common client ases as measured by juen  @xcite ( as8404 and as20542 did not appear in our map ) .",
    "juen reports that these 58 ases covered 0.951 of client packets observed .",
    "in addition , for all of our experiments , the compromise probability ( _ i.e. _ , the probability of a first  last correlation attack by the man ) was estimated by sampling from the man bbn ( and from tor s relay selection distribution in the default case ) 100,000 times and using the fraction of compromised samples as the probability .",
    "* * tor default path selection * : for each of our 58 client locations , we choose an exit and guard using tor s path - selection algorithm as implemented in torps  @xcite .",
    "note that ( among other considerations ) this does ensure that the guard and exit do nt share the same family or /16 subnet .",
    "then we sample the man bbn to determine if the resulting circuit to the server is vulnerable to a first  last correlation attack .",
    "* * clients use trust * : guards are chosen for each client location to be the three relays with the smallest probabilities that the adversary compromises the guard or an as or ixp on the path to the guard . to compute the compromise probability of a connection from a given client location to a given destination , we consider using each of the client location s three guards with each tor exit relay , estimate the compromise probability , and choose the lowest resulting probability . * * service uses trust * : we consider each as containing an exit relay as a possible location for the server .",
    "for each server location , we compute the probability of compromise for each client location .",
    "this is estimated for a given client location by considering each of its guards , considering each exit sharing the server location , estimating the compromise probability , and using the minimum of these probabilities .",
    "we choose the server location with the minimum average compromise over all client locations . for each additional server ,",
    "we repeat the same process except that we only update the compromise probability for a client location if it decreases when using the new potential server location .",
    "ongoing and future work includes the further development and investigation of tor path - selection algorithms that use trust as formalized here , the further development and analysis of methods to express trust that are natural and usable , and the continued analysis of possible trust errors and their effects .",
    "two particularly important tasks are the development of collections of trust beliefs that capture important use cases and the study of how users can use different trust beliefs without being identified by that behavior .",
    "biryukov , a. , pustogarov , i. , weinmann , r.p . : trawling for tor hidden services : detection , measurement , deanonymization . in : proceedings of the 2013 ieee symposium on security and privacy .",
    "sp 13 ( 2013 )    cai , x. , zhang , x.c . ,",
    "joshi , b. , johnson , r. : touching from a distance : website fingerprinting attacks and defenses . in : proceedings of the 2012 acm conference on computer and communications security .",
    ". 605616 .",
    "ccs 12 , acm , new york , ny , usa ( 2012 ) , http://doi.acm.org/10.1145/2382196.2382260    cai , x. , heidemann , j. , krishnamurthy , b. , willinger , w. : an organization - level view of the internet and its implications ( extended ) .",
    "isi - tr-2009 - 679 , usc / information sciences institute ( 2012 )            elahi , t. , goldberg , i. : cordon  a taxonomy of internet censorship resistance strategies .",
    "tech . rep .",
    "cacr 2012 - 33 , university of waterloo cacr ( 2012 ) , http://cacr.uwaterloo.ca/techreports/2012/cacr2012-33.pdf        johnson , a. , syverson , p. : more anonymous onion routing through trust . in : proceedings of the 2009 22nd ieee computer security foundations symposium .",
    "csf 09 , ieee computer society , washington , dc , usa ( 2009 ) , http://dx.doi.org/10.1109/csf.2009.27    johnson , a. , syverson , p. , dingledine , r. , mathewson , n. : trust - based anonymous communication : adversary models and routing algorithms . in : proceedings of the 18th acm conference on computer and communications security .",
    ". 175186 .",
    "ccs 11 , acm , new york , ny , usa ( 2011 ) , http://doi.acm.org/10.1145/2046707.2046729    johnson , a. , wacek , c. , jansen , r. , sherr , m. , syverson , p. : users get routed : traffic correlation on tor by realistic adversaries . in : proceedings of the 2013 acm sigsac conference on computer & communications security .",
    "ccs 13 , acm , new york , ny , usa ( 2013 ) , http://doi.acm.org/10.1145/2508859.2516651          syverson , p. , tsudik , g. , reed , m. , landwehr , c. : towards an analysis of onion routing security . in : international workshop on designing privacy enhancing technologies : design issues in anonymity and unobservability .",
    "springer - verlag new york , inc .",
    ", new york , ny , usa ( 2001 ) , http://dl.acm.org/citation.cfm?id=371931.371981",
    "the system comes with an ontology that describes types of network elements ( _ e.g. _ , as , link , and relay - operator types ) , the relationships between them that capture the effects of compromise by an adversary , and attributes of these things .",
    "while we provide an ontology , this may be replaced by another ontology as other types of threats are identified .",
    "appendix  [ ap : ontology ] describes the requirements for replacement ontologies . roughly speaking",
    ", the ontology identifies the types of entities for which the system can automatically handle user beliefs when constructing the bayesian belief network ( bbn ) for the user .",
    "a user may express beliefs about other types of entities , but she would need to provide additional information about how those entities relate to entities whose types are in the ontology . the ontology is provided to the user in order to facilitate this .    in general",
    ", we expect that the system will provide information about network relationships , such as which ases and ixps are on a certain virtual link or which tor relays are in a given relay family .",
    "we generally expect the user to provide information about human ",
    "network relationships such as which individual runs a particular relay .",
    "note that this means the user might need to provide this type of information in order to make some of her beliefs usable ; if she has a belief about the trustworthiness of a relay operator , she would need to tell the system which relays that operator runs in order for the trustworthiness belief to be incorporated into the bbn .    using the ontology and various published information about the network ,",
    "the system creates a preliminary `` world '' populated by real - world instances of the ontology types ( _ e.g. _ , specific ases and network links ) .",
    "the world also includes relationship instances that reflect which particular type instances are related in ways suggested by the ontology .",
    "user - provided information may include revisions to this system - generated world , including the addition of types not included in the provided ontology and instances of both ontology - provided and user - added types .",
    "the user may also enrich the information about the effects of compromise ( adding , _ e.g. _ , budget constraints or some correlations ) .",
    "the user expresses beliefs about the potential for compromise of various network entities ; these beliefs may refer to specific network entities or to entities that satisfy some condition , even if the user may not be able to effectively determine which entities satisfy the condition . this user - provided information is used , together with the edited world , to create a bayesian belief network ( bbn ) that captures the implications of the user s trust beliefs .",
    "a user may express a belief that refers to an entity or class of entities whose type is in the given ontology .",
    "for such beliefs , the system will be able to automatically incorporate those beliefs into the bbn that the system constructs .",
    "a user may also express beliefs about entities whose types are not included in the ontology .",
    "if she does so , she would need to provide the system with information about how those entities should be put into the bbn that the system constructs .",
    "the system and the user need to agree on the language(s ) in which she will express her beliefs .",
    "different users ( or , more likely , different organizations that want to provide collections of beliefs ) may find different languages most natural for expressing beliefs .",
    "the language specification(s ) must describe not only the syntax for the user but also ( _ i _ ) how her structural beliefs will be used in modifying the system - generated world and ( _ ii _ ) how her other beliefs will be used to translate the edited world into a bbn .",
    "the user s beliefs may include boolean predicates evaluated on elements in the world .",
    "we sketch a default language for these predicates , but this could be replaced by any other language on which the user and system agree .",
    "an overview of the system s actions is below .",
    "the procedure to produce the bbn is treated as a black box . in reality , it involves many steps , but these depend on the belief language used . the procedure for the belief language described in app .",
    "[ app : slang ] is presented in app .",
    "[ app : bbntrans ] .    1 .   world generation from ontology : @xmath8 * as described in app .",
    "[ app : sysworld ] , the system generates a preliminary view of the world based on the ontology and its data sources .",
    "we denote the result by @xmath8 .",
    "* this should include system attributes 2 .   augmenting the types with the user s types : @xmath9",
    "* the user may provide additional types ( as a prelude to adding instances of those types to the world ) .",
    "we use @xmath9 to denote the augmentation of @xmath8 by adding the user s types .",
    "3 .   adding user - specified instances of types ( ontology and user - provided ) : @xmath10 * the user may add instances of any of the types in @xmath9 .",
    "we use @xmath10 to denote the augmentation of @xmath9 by adding these new instances and removing any that the user wishes to omit .",
    "4 .   adding user - specified relationships ( between instances in @xmath10 ) : @xmath11 * the user may specify additional parent / child relationships beyond those included in @xmath10 . in particular , any new instances that she added in the previous step will not be related to any other instances in the world unless she explicitly adds such relationships in this step .",
    "we use @xmath11 to denote the augmentation of @xmath10 by adding these new relationships and by removing any that the user wishes to omit .",
    "5 .   edit system - provided attributes ( not budgets or compromise effectiveness ) 6 .",
    "add new user - provided attributes 7 .",
    "add budgets 8 .",
    "add compromise effectiveness ( this will default to something , perhaps specified in the ontology , if values are nt given ; for relationships of types not given in the ontology , we will use a default value unless the user specifies something when providing the relationship instance ) 9 .   produce bbn",
    "* the translation process is described in sec .",
    "[ app : bbntrans ] .",
    "before presenting the ontology that we use in this work , we describe our general requirements for ontologies in this framework .",
    "this allows our ontology to be replaced with an updated version satisfying these requirements .",
    "for example , mutual legal assistance treaties ( mlats ) are a topic of current interest .",
    "there is presently no suitable source of information about mlats for our system to use  @xcite .",
    "if a database of these is developed that can be reliably used to determine automatically the effects of mlats on the power of state - level adversaries , it would be natural to update the ontology to reflect the system s ability to do this .",
    "* it has a collection @xmath12 of _",
    "types_. we use the ontology to describe relationships between the types in the ontology . * a collection @xmath13 of ( directed ) _ edges _ between types ( with @xmath14 ) .",
    "the edges are used to specify relationships ; if there is an edge from @xmath15 to @xmath16 in the ontology , then the compromise of a network element of type @xmath15 has the potential to affect the compromise of a network element of type @xmath16 . * viewed as a directed graph , @xmath17 is a dag . *",
    "a distinguished set of @xmath18  called the _",
    "output types_. this is for convenience ; these are the types of instances that we expect will be sampled for further use .",
    "we generally expect the output types to be exactly the types in the ontology that have no outgoing edges . *",
    "each element of @xmath19 has a _ label _ that is either `` system '' or `` user . ''",
    "for an edge @xmath20 from type @xmath15 to type @xmath16 , if either @xmath15 or @xmath16 has the label `` user , '' then @xmath20 must also have the label `` user . ''",
    "these labels will be used to indicate the default source of instances of each type .",
    "( however , the user may always override system - provided information . ) + types or edges with the label `` user '' might be natural to include in an ontology when the type / edge is something about which the system can not reliably obtain information but the ontology designer is able to account for instances of the edge / type in the bbn - construction procedure . * a collection @xmath21 of _ attributes_. each attribute includes a name , a data type , a source ( either `` system '' or `` user '' ) . each element of @xmath19 may be assigned multiple boolean combinations of attributes ; each combination is labeled with either `` required '' or `` optional . ''      figure  [ fig : ontology ] depicts the ontology used in our system .",
    "the two ovals at the bottom are the output types : tor relays and tor ( virtual ) links , which include the links between clients and guards and between exits and destinations .",
    "the rounded rectangles correspond to types in the ontology ; instances of these will be factor variables in the bbn .",
    "attributes are depicted as cylinders ; the interpretation of these will be described below . filled - in types and solid edges indicate elements and attributes whose label is `` system . '' unfilled types / attributes and dotted edges indicate elements whose label is `` user . '' as noted above , all attributes in the ontology we present here have the label `` optional . ''",
    "the types and relationships that are provided by the system in constructing the preliminary world are described in app .",
    "[ app : sysworld ] .",
    "we describe the others here ; instances of these are added by the user in ways specified below .    hosting service ( and incident edges ) : :    hosting services that might be used to host tor relays .",
    "if a service    hosts a particular relay , there would be a relationship instance from    the service to the relay .",
    "if a service is known to be under control of    a particular legal jurisdiction or company , the appropriate incoming    relationship instance can be added .",
    "corporation ( and incident edges ) : :    corporate control of various network elements may be known .",
    "a    corporation that is known may be added as an instance of this type . if    the corporation is known to be subject to a particular legal    jurisdiction , then a relationship edge from that jurisdiction to the    corporation can be added .",
    "similarly , hosting services , ases , and ixps    that a corporation controls may be so indicate via the appropriate    relationship instances .",
    "router / switch/_etc_. : :    this corresponds to a physical router or switch .",
    "we do not attempt to    identify these automatically , but ones known to the user ( or a source    to which the user has access ) may be added as instances of this type .",
    "physical connection : :    particular physical connections , such as a specific cable or wireless    link , may be known and of interest .",
    "( physical connection , virtual link ) : :    if a virtual link is known to use a specific physical connection , then    that can be reflected in a relationship between the two .",
    "the attributes in our ontology are depicted by cylinders in fig .",
    "[ fig : ontology ] .",
    "the two at the box in the top right can be applied to all non - output type instances , so we do not explicitly show all of the types to which they can be applied .",
    "system - generated attributes : :    these include relay - software type and physical location .",
    "users may    edit these , _",
    "e.g. _ , to provide additional information .",
    "connection type : :    this is an attribute of physical - connection instances .",
    "it is    represented as a string that describes the type of connection ( _ e.g. _ ,    ` submarine cable ` , ` buried cable ` , or ` wireless connection ` ) .",
    "a user    would express beliefs about connection types ; if the type of a    connection is covered by the user s beliefs , then the probability of    compromise would be affected in a way determined by the belief in    question .",
    "budget : :    this attribute , which is supplied by the user at her option , may be    applied to any non - output type instance .",
    "there are two variants .",
    "both    are represented as an integer @xmath1 and another value . in    the first variant ,",
    "the other value is a type ; in the second variant ,    the other value is the string ` all ` .",
    "multiple instances of this    attribute may be applied to a single type instance as long as they    have distinct second values ; if one of these is the second variant ,    then all others will be ignored .",
    "this allows the user to express the    belief that , if the type instance is compromised , then its resources    allow it to compromise @xmath1 of its children . in the first    variant of this attribute , the instance may compromise @xmath1    of its children of the specified type ( and perhaps @xmath22 of    its children of a different type , if so specified ) . in the second    variant of this attribute , the instance may compromise @xmath1    of its children across _ all _ types .    +    as discussed below , we must approximate the effects of resource    constraints so that the bbn can be efficiently sampled .",
    "region : :    this is an attribute of legal jurisdiction .",
    "it is represented as a    boolean predicate on geographic coordinates .",
    "compromise effectiveness : :    this attribute is syntactically similar to the budget attribute .",
    "it is    supplied by the user at her option for instances of any non - output    type , and there are effectively two variants .",
    "this is represented as a    probability @xmath23 $ ] and a boolean predicate on type    instances ; we distinguish non - trivial predicates from the always - true    predicate @xmath24 .",
    "multiple instances of this attribute may    be applied to a single type instance as long as no two    non-@xmath24 predicates evaluate to true on the same input .",
    "only one instance of this attribute with @xmath24 may be    present ; if it is , then all other instances of the attribute for the    type instance are ignored .",
    "+    this attribute allows the user to express beliefs about the effect of    compromise of one type instance on its children , either uniformly or    according to type .",
    "for example , a compromised as might attempt to    compromise all of its routers , but make a mistake in in the    configuration file that it copies to each router of a certain hardware    model .",
    "this might happen with probability @xmath25 .",
    "absent budget restrictions , either all or none of the routers of this    model will be compromised _ due to this action by the as_. this is in    contrast to the effects of budgets .",
    "router / switch kind : :    this is an attribute of routers / switches and is represented as a set    of strings .",
    "we expect the user to use this to describe aspects of    routers / switches that she might know about and want to use in her    trust beliefs , _ e.g. _ , the model number or firmware version of    specific routers and switches .",
    "relay hardware : :    this is an attribute of relays and is represented in the same way as    the router / switch kind .",
    "also analogously to that attribute , we expect    that the user would use this to describe aspects of relay hardware    that she might know about and potentially use in her trust beliefs .",
    "the system provides users with a _ world _ consisting of _ type instances _ and _ relationship instances _ that are consistent with the types and relationships specified in the ontology .",
    "formally , a world is a dag in which each vertex is a type instance , each edge is a relationship instance , and an attribute function assigns each vertex a vector of attributes .",
    "a type instance represents a real - world object of the specified type .",
    "for example , `` as3356 '' is a type instance of the as type , and `` level 3 communications '' is a type instance of the as organization type .",
    "a relationship instance will only relate two instances of types that are related in the ontology .",
    "for example , ( level 3 communications , as3356 ) is an instance of the ( as organization , as ) relationship type and indicates that as3356 is a member of level 3 communications .",
    "the attributes of a type instance provide information that users can incorporate into their trust beliefs , such as the location of a given tor relay .",
    "the world can be modified by users in ways provided by the trust language .",
    "we assume that each instance has a unique identifier and an indication of the type of which it is an instance .      1",
    ".   the current tor consensus and the server descriptors it references are used to create the following instances and attributes , which concern relays : * * tor relay * : an instance is created for each relay in the consensus . *",
    "* relay family * : an instance is created for connected component of relays , where two relays are connected if they mutually reference each other in their descriptors  @xcite . * * ( relay family , tor relay ) * : an instance of this relationship is created for each relay belonging to a given family . * * relay software type * : this attribute is added to each relay based on the operating system reported in the relay s descriptor .",
    "standard techniques  @xcite are used to construct an as - level internet routing map .",
    "data that can be used to create such a map includes the caida internet topology  @xcite , the caida as relationships  @xcite , and routeviews  @xcite .",
    "this map is then used to create the following instances : * * virtual link * : an instance is created representing the path between each autonomous system and _ entry guard _ as well as between each autonomous system and _ exit relay_. an entry guard is a tor relay that satisfies the requirements to serve as the relay that a tor client directly connects to .",
    "an exit relay is any relay that can be used as the relay that connects directly to a client destination .",
    "entry guards and exit relays are determined from the tor consensus .",
    "a virtual link instance represents both directed paths between the autonomous system and relay , which may differ due to internet route asymmetries  @xcite . * * as * : an instance is created for each as observed in the routeviews data . * * ( as , virtual link ) * : an instance of this relationship is created for each as that appears on the path in either direction between the virtual link s as and its relay , as determined by the internet routing map .",
    "internet exchange points ( ixps ) are added to paths in the as - level internet map based on data from the ixp mapping project  @xcite .",
    "these additions are are used to create the following instances : * * ixp * : an instance is created for each ixp that appears on at least one path in the internet map . * * ( ixp , virtual link ) * : an instance of this relationship is created for each ixp that appears on the path in either direction between the virtual link s as and its relay , as determined by the internet routing map .",
    "ases are clustered into organizations using the results of cai  _ et al_.  @xcite , and ixps are clustered into organizations using the results of johnson  _ et al_.  @xcite .",
    "each cluster represents a single legal entity that controls multiple ases or ixps , such as a company .",
    "the clusters are used to create the following instances : * * as organization * : an instance is created for each as cluster .",
    "* * ixp organization * : an instance is created for each ixp cluster . * * ( as organization , as ) * : an instance of this relationship is created for each as in a given as cluster .",
    "* * ( ixp organization , ixp ) * : an instance of this relationship is created for each ixp in a given ixp cluster .",
    "the system provides physical locations and legal jurisdictions for several of the ontology types .",
    "ip location information , such as from the maxmind geoip database  @xcite , provides location information for entities with ip addresses .",
    "the location of ixps is frequently available on the web as well  @xcite .",
    "these data are used to create the following instances and attributes : * * legal jurisdiction * : an instance of this type is created for each country . * * ( legal jurisdiction , relay ) * : an instance of this relationship is created for each relay in a given country , as determined by the relay s ip address and the ip location information . * * ( legal jurisdiction , ixp ) * : an instance of this relationship is created for each ixp in a given country , as determined by the ip addresses of the ixp or other public ixp information .",
    "* * physical location * : this attribute is added to each relay with its geographic coordinates ( _ i.e. _ , latitude and longitude ) , as determined from its ip address .",
    "this attribute is also added to each ixp with its geographic coordinates , based on its ip addresses or other public ixp information .",
    "broadly , users may have two types of beliefs : those about the structure of the network , _ etc_. , and those about trust .",
    "beliefs of the first type are used by the system to edit the preliminary , system - generated world to produce an `` edited world . ''",
    "( we expect that this should be done once , not on a per - adversary basis . )",
    "beliefs of the second type are given as input , together with the edited world , to the procedure that produces the bbn .",
    "we call these two types of beliefs `` structural beliefs '' and `` trust beliefs , '' respectively .",
    "we now turn to the description of structural and trust beliefs .",
    "we then describe an example language that a user may use to express her beliefs , and then we describe how to translate beliefs represented in this language into a bbn .",
    "a user may have beliefs about instances of types and edges from the ontology . for types",
    ", a user may believe that an instance of that type exists ; her belief about that instance must include a unique identifier for the instance and any required attributes .",
    "this type instance is then added to the system - generated world .",
    "the type of the instance may be system - generated , in which case this belief represents an edit to the system - generated world , or it may be user - generated .",
    "if the instance s type is user - generated , then the user must describe to the system how the instance should be translated to the bbn that the system produces from the edited world .    for edges",
    ", a user may believe that one type instance is the parent of another type instance .",
    "her belief about such a relationship must include any required attributes of the corresponding edge type in the ontology .",
    "this relationship instance is then added to the system - generated world",
    ". if the edge type is not part of the ontology , the user must describe how the edge affects the computation of values in the bbn that the system produces .",
    "a user may also have beliefs about the probability of compromise of any factor .",
    "the bbn construction that we describe below supports two general types of trust beliefs : absolute beliefs , which state an absolute probability of compromise , and relative beliefs , which modify the computation of compromise probability .",
    "we expect that the user may want to express some of her beliefs ( trust and perhaps also structural ) in terms of predicates , even though she might not be able to effectively evaluate these herself .",
    "for example , the user s trust in ases with very few routers might be different than her trust in ases with many routers ( perhaps because she believes that larger ases are more likely to have processes , policies , and organizational experience that prevent misconfiguration ) .",
    "she might capture this with a predicate that expresses whether the number of routers in an as ( in the edited world ) is at least as great as a specified threshold .",
    "the belief languages must thus incorporate a language for predicates that the system can interpret .",
    "we treat the predicate language as a separate component , and we sketch here one predicate language that will be used by all of our example belief languages .",
    "this language includes :    connectives and operators : :    basic logical connectives ( including negation ) typing : :    testing whether an instance or attribute is or is not of a specified    type ; users may test for types not in the ontology ( _ e.g. _ , to check    types that they have added ) sets : :    sets ( explicitly enumerated or defined by some predicate ) and set    membership / non - membership membership : :    a predicate may depend on a set and test whether a value is in that    set .",
    "tests of attribute values : :    tests must be appropriate to the data type used in the attribute ;    equality and inequality tests are allowed unless specified otherwise .",
    "predicates may test user - defined attributes .",
    ", the system will not    change the structure of the world based on user - defined attributes . ]",
    "this may reference user - defined attributes .",
    "tests of the world structure ( in trust beliefs only ) : :    after the world is constructed and edited ( _ i.e. _ , when applying trust    beliefs but not when applying structural beliefs ) , we allow predicates    in beliefs to refer to the structure of the world .",
    "we now describe a sample language for users structural and trust beliefs .",
    "this incorporates predicates , which might be expressed using the predicate language just outlined .",
    "in general , we assume that there is a set @xmath26  of values that the user may use to express levels of trust . we illustrate this here by taking @xmath26  to be @xmath27 ; we think of these as `` surely compromised , '' `` likely compromised , '' `` unknown , '' `` likely trustworthy , '' and `` surely trustworthy . ''",
    "our examples will not rely on @xmath26  having exactly five elements , but we think this is one natural way that users might think about their trust in network elements .        novel types : :    a user may define new types via expressions of the form    @xmath31 tname , struct_{req } , struct_{opt})$ ] ,    where @xmath32 is a string literal ,    @xmath33 is a string ( the name of the type ) that must be    distinct from all other @xmath33 values the user specifies    and from all elements of @xmath12 , and    where @xmath34 and @xmath35 are    both descriptions of data structures ( these may be empty data    structures , which might be indicated by @xmath36 ) .",
    "+    we write @xmath37 for the set    containing the elements of @xmath12    together with all of the @xmath33 values provided by the    user .",
    "type instances : :    an ordered list of tuples @xmath38 , where    @xmath39 , @xmath40 is a    data structure that is valid for @xmath41 , and @xmath42    is a unique identifier among these tuples . in the user s list of    tuples",
    "are distinct from those identifiers . ]",
    "+    we write @xmath43  for the set formed by augmenting    @xmath44  with these new instances .",
    "relationship instances : :    a set of pairs @xmath45 , where @xmath3 and    @xmath46 are type instances from    @xmath43 . and @xmath46 in place of the unique identifiers    associated with each type instance in the edited world .",
    "] we do not    need to specify new relationship types , only the additional    relationship instances .",
    "relative beliefs : :    these are beliefs of the form @xmath47 , where    @xmath48 is a string other than @xmath49 ,    @xmath2 is a predicate on factor variables , and    @xmath50 .",
    "+    note that , in our translation procedure below , relative beliefs affect    the probability of compromise of a factor in the bbn that is not    otherwise compromised through the causal relationships captured in the    world .",
    "absolute beliefs : :    these are beliefs of the form    @xmath51 , where    @xmath2 is a predicate on factor variables and    @xmath50 .",
    "a belief such as this    says that the chance a variable satisfying @xmath2 is    compromised is captured by @xmath52 .",
    "note that it is the user s    responsibility to ensure that no two different absolute beliefs have    predicates that are simultaneously satisfied by a node if those    beliefs have different values for @xmath52 .",
    "we do not specify    what value is used if this assumption is violated .",
    "budget : :    expressed as either @xmath53 or    @xmath54 , where    @xmath55 and @xmath55 are    string literals , @xmath0 is a type instance in the edited    world , @xmath41 is a type in the edited world , and    @xmath1 is an integer .",
    "the interpretation is that , in    expectation , compromise of the node with this attribute will lead to    compromise of @xmath1 of its children ( of type @xmath41    in the first variant , or of all its children in the second variant ) .",
    "compromise effectiveness : :    expressed as either    @xmath56 or    @xmath57\\top , v)$ ] , where    @xmath58 and @xmath59 are    string literals , @xmath0 is an instance of a non - output type    in the edited world , @xmath60 is a on    instances of a fixed type , @xmath24 is a distinguished    symbol , and @xmath50 .",
    "the    interpretation is that , if instance @xmath0 is compromised ,    then it compromises its children satisfying    @xmath60 ( or all children , if    @xmath24 is given ) with probability corresponding to    @xmath52 .",
    "+    the likely range of compromise - effectiveness probabilities may differ    from the likely range of other compromise probabilities . in a language    such as we are describing here , the values    @xmath61 , _",
    "etc_. , might have different    corresponding probabilities for compromise - effectiveness than they do    for absolute and relative beliefs .",
    "another alternative is to allow    users to specify a probability @xmath23 $ ] instead of a    value @xmath50 as the last element    of these tuples .",
    "a translation procedure in general needs to take the edited world ( reflecting the structural beliefs and attribute values provided by the user ) and the user s trust beliefs as input and produce a bbn as output .",
    "the output variables of the bbn should match the nodes in the edited world that are instances of types designated as output types in the ontology or the user s structural beliefs . here , we present a translation procedure that fits with the rest of the system we describe ( it matches our particular ontology , _",
    "etc_. ) .",
    "* for each node ( type instance ) in @xmath62 ,",
    "the bbn contains a corresponding variable .",
    "we refer to the bbn variable by the same name as the node in @xmath62 . * for each compromise - effectiveness belief @xmath63 about a node @xmath42 , there is a corresponding child @xmath64 of @xmath42 in the bbn .",
    "the table for @xmath64 is such that , if @xmath42 is uncompromised , then @xmath64 is uncompromised ; if @xmath42 is compromised , then @xmath64 is compromised with probability @xmath65 and uncompromised otherwise .",
    "( we use @xmath65 to denote the probability value that the system assigns to the value @xmath50 that is part of the user s belief language . )",
    "the children of @xmath64 in the bbn are the nodes in the bbn that correspond to nodes in @xmath62 that ( 1 ) are children of @xmath42 and ( 2 ) satisfy the predicate @xmath2 from the belief @xmath66 .",
    "assign these edges the weight set @xmath67 .",
    "+ if there are children of @xmath42 in @xmath62 that do not satisfy any of the predicates in the compromise - effectiveness beliefs about @xmath42 ( including , _",
    "e.g. _ , when the user has no compromise - effectiveness beliefs ) , then make these nodes children of @xmath42 in the bbn .",
    "assign to each of these edges the singleton weight set whose element is the appropriate default probability . as a common default value . ]",
    "* for each budget belief @xmath68 about a node @xmath42 , let @xmath69 be the number of children of @xmath42 ( in @xmath62 ) that satisfy @xmath2 .",
    "for each of these children , in the bbn , replace the single value in the edge s weight set by that value multiplied by @xmath70 . * assign to each non - ce - belief node @xmath42 a `` risk set '' @xmath71 that is initially empty . for each belief",
    "@xmath72 that has not already been evaluated and whose initial entry is not @xmath49 , if @xmath42 satisfies @xmath2 , then add @xmath52 to @xmath71 ( retaining duplicates , so that @xmath71 is a multiset ) . *",
    "construct the tables for each non - ce node in the bbn .",
    "( we have already constructed the tables for the ce - belief nodes . )",
    "let @xmath42 be a non - ce node .",
    "for each subset @xmath73 of @xmath42 s parents , if @xmath5 is the multiset of weights on the edges from nodes in @xmath73 to @xmath42 , and if @xmath6 is the multiset of risk weights associated with @xmath42 , then the probability that @xmath42 is compromised given that its set of compromised parents is exactly @xmath73 is : @xmath74 note that , if the user has no parents , then the first product will be empty ( taking a value of @xmath75 ) , and the probability of compromise will be determined solely by the risk factors unless the user expresses beliefs that override these .",
    "* if the user provides a belief @xmath76 , then nodes satisfying @xmath2 are disconnected from their parents .",
    "their compromise tables are then set so that they are compromised with probability @xmath65 and uncompromised with probability @xmath77 .",
    "this allows a user to express absolute beliefs about factor variables in the bbn ( hence `` @xmath78 '' ) .",
    "in particular , she may express beliefs about input variables whose compromise would otherwise be determined by their attributes .",
    "we assume that adversaries are acting independently , although this may not always be the case .",
    "one natural example of inter - adversary dependence occurs with the compromise of resource - constrained instances in the world .",
    "for example , an isp s resources may limit it to monitoring @xmath1 of its routers .",
    "if both the isp and the country ( or other legal jurisdiction ) controlling it are a user s adversaries , then they should compromise the same set of the isp s routers .",
    "( this is true whether we model this compromise probabilistically , with @xmath1 routers compromised in expectation , or through some other means . )",
    "this might be modeled statically by changing the structure of the bbn , but dynamic compromise and more general inter - adversary dependence may require other approaches .    at this point , our system does not include instances in the world in constructs that correspond to cities or states / provinces .",
    "these are most naturally viewed as instances of legal jurisdictions , and the user may well have beliefs about the corresponding laws or enforcement regimes .",
    "one way that we envision the user may address these is by adding to the world instances of legal jurisdictions that carry a `` boundary '' attribute , effectively a predicate that can be evaluated on the system - provided geolocation data .",
    "the system could then determine which network entities are in which of these user - supplied jurisdictions .",
    "physical locations might be handled this way as well , as long as the location is `` large enough '' relative to the resolution of the geolocation process .",
    "mutual legal assistance treaties ( mlats ) concern the exchange of information between countries about possible violations of the laws of a participating country .",
    "if a user has a state - level adversary , then an mlat between the adversary country and another country might effectively compromise the second country .",
    "as noted above , it may be natural to add these to the ontology once suitable related sources of information become available .",
    "the bbns that we presently construct could be extended to include mlats by adding two additional layers of variables .",
    "one would contain a variable for each mlat known to the system ; the children of these variables would be the country variables ( in the presently constructed bbn ) corresponding to countries that are obligated by the respective mlats to act as adversaries .",
    "the other added layer would contain a new variable for each country ; the children of any one of these variables would be all of the mlats that obligate other countries to provide information to the parent country .",
    "the inherent compromise of countries would be reflected in the top layer ; this would propagate through the mlat layer to effectively compromise other countries , and the rest of the bbn would behave as it does presently .",
    "the following examples of beliefs illustrate how a user might express her beliefs in our five - valued example language .",
    "we suggest that the compromise probabilities corresponding to the values @xmath79 , @xmath80 , @xmath81 , @xmath82 , and @xmath61 might be taken to be @xmath83 , @xmath84 , @xmath85 , @xmath86 , and @xmath87 , respectively .",
    "1 .   countries in set @xmath88 are likely trustworthy 2 .",
    "countries in set @xmath89 are likely compromised 3 .",
    "countries in set @xmath90 are surely compromised 4 .",
    "ams - ix points are likely trustworthy 5 .",
    "msk - ix points are of unknown trustworthiness 6 .",
    "relay family @xmath91 is likely compromised 7 .",
    "relay family @xmath92 is surely uncompromised 8 .",
    "relay operator @xmath93 is surely uncompromised 9 .",
    "relay operator @xmath94 is likely uncompromised 10 . hosting company",
    "@xmath95 is surely trustworthy 11 .",
    "submarine cables are of unknown level of trustworthiness 12 .",
    "wireless connections are likely compromised 13 .",
    "relays running windows are of uncertain trustworthiness ( system gets this from relay descriptors ) 14 .",
    "if an as is compromised , then it is expected to be able to compromise @xmath96 of the links that it is on",
    "bayesian belief networks have both strengths and weaknesses as a component of our system",
    ". their general strengths of being concise , being efficiently sampleable , and allowing computation of other properties of the distribution ( _ e.g. _ , marginal probabilities and maximum likelihood values ) are beneficial in our system .",
    "bbns are especially well - suited to our approach here because of the close structural similarity between our revised worlds and the bbns we construct from these .    as a disadvantage ,",
    "bbns do not represent hard resource constraints efficiently ; we can only approximate those here by constraining resources in expectation .",
    "more generally , other negative correlations may be difficult at best to capture , but it is possible that users will hold beliefs that imply negative correlations between compromise probabilities .",
    "the purpose of this system is to produce an efficiently sampleable representation of compromise probabilities .",
    "other representations of distributions could also be used , but they might be most naturally generated from trust beliefs in different ways .",
    "a detailed discussion of such approaches is beyond the scope of this work .",
    "we propose that a collection of default beliefs be distributed with this system . as noted in sect .",
    "[ sec : trust ] , this collection would be designed to provide adequate protection for general users .",
    "users with particular concerns might use other collections of beliefs ; these could be provided by , _",
    "e.g. _ , government entities , privacy organizations , political groups , journalism - focused organizations , or organizations defending abuse victims ."
  ],
  "abstract_text": [
    "<S> motivated by the effectiveness of correlation attacks against tor , the censorship arms race , and observations of malicious relays in tor , we propose that tor users capture their trust in network elements using probability distributions over the sets of elements observed by network adversaries . </S>",
    "<S> we present a modular system that allows users to efficiently and conveniently create such distributions and use them to improve their security . </S>",
    "<S> the major components of this system are ( _ i _ ) an ontology of network - element types that represents the main threats to and vulnerabilities of anonymous communication over tor , ( _ ii _ ) a formal language that allows users to naturally express trust beliefs about network elements , and ( _ iii _ ) a conversion procedure that takes the ontology , public information about the network , and user beliefs written in the trust language and produce a bayesian belief network that represents the probability distribution in a way that is concise and easily sampleable . </S>",
    "<S> we also present preliminary experimental results that show the distribution produced by our system can improve security when employed by users ; further improvement is seen when the system is employed by both users and services .    </S>",
    "<S> * keywords : * tor , trust , bayesian belief network </S>"
  ]
}
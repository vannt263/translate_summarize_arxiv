{
  "article_text": [
    "for the past 45 years , research in molecular biology has been based predominantly on reductionist thinking , trying to unravel the complex workings of living organisms by investigating genes or proteins one at a time . in recent years",
    ", molecular biologists have come to view the cell from a different , more global perspective . with the advent of fully sequenced genomes and high - throughput functional genomics technologies , it has become possible to monitor molecular properties such as gene expression levels or protein - dna interactions across thousands of genes simultaneously . as a consequence ,",
    "it has become feasible to study genes , proteins and their interactions in the context of biological systems rather than in isolation .",
    "this novel paradigm has been named ` systems biology ' @xcite .",
    "one of the goals of the systems approach to molecular biology is to reverse engineer the regulatory networks underlying cell function .",
    "particularly transcriptional regulatory networks have received a lot of attention , mainly because of the availability of large amounts of relevant experimental data .",
    "several studies use expression data , promoter motif data , chromatin immunoprecipitation ( chip ) data and/or prior functional information ( e.g. go classifications @xcite or known regulatory network structures ) in conjunction to elucidate transcriptional regulatory networks @xcite .",
    "most of these methods try to unravel the _ control logic _ underlying specific expression patterns .",
    "this type of analysis typically requires elaborate computational frameworks .",
    "in particular probabilistic graphical models are considered a natural mathematical framework for inferring regulatory networks @xcite .",
    "probabilistic graphical models , the best - known representatives being bayesian networks , represent the system under study in terms of conditional probability distributions describing the observations for each of the variables ( genes ) as a function of a limited number of parent variables ( regulators ) , thereby reconstructing the regulatory network underlying the observations . friedman _",
    "_ pioneered the use of bayesian networks to learn regulatory networks from expression data @xcite . in these early studies , each gene in the resulting bayesian network is associated with its individual regulation program , i.e. , its own set of parents and conditional probability distribution .",
    "a key limitation of this approach is that a vast number of structural features and distribution parameters need to be learned given only a limited number of expression profiles .",
    "in other words , the problem of finding back the real network structure is typically heavily underdetermined . an attractive way to remedy this issue is to take advantage of the inherent modularity of biological networks @xcite , specifically the fact that groups of genes acting in concert are often regulated by the same regulators .",
    "@xcite first exploited this idea by proposing _",
    "module networks _ as a mathematical model for regulatory networks .",
    "module networks are probabilistic graphical models in which groups of genes , called _ modules _",
    ", share the same parents and conditional distributions . as the number of parameters to be estimated in a module network is much smaller than in a full bayesian network , the currently available gene expression data sets can be large enough for the purpose of learning module networks @xcite .    despite the demonstrated success of module network learning algorithms in finding biologically relevant regulatory relations @xcite ,",
    "there is only limited information about the actual recall and precision of such algorithms @xcite and how these performance measures are influenced by the use of alternative module network learning strategies .",
    "having the means to answer the latter question is key to the further development and improvement of the module networks formalism .",
    "the purpose of the present study is twofold .",
    "first , we introduce a novel software package for learning module networks , called , which is based on the general methodology outlined in segal _",
    "@xcite but incorporates an alternative strategy for inferring regulation programs .",
    "second , we demonstrate the use of syntren @xcite , a data simulator that creates synthetic regulatory networks and produces simulated gene expression data , for the purpose of testing and comparing module network learning algorithms .",
    "we use syntren data to assess the performance of and to compare the behavior of alternative module network learning strategies .",
    "additionally , we assess the effect of various parameters , such as the size of the data set and the amount of noise , on the inference performance . for comparison",
    ", we also use to analyze real expression data for _ s. cerevisiae _ @xcite and investigate to what extent the quality of the module networks learned on real data can be automatically assessed using structured biological information such as go information and chip - chip data @xcite .",
    "we used syntren @xcite to generate simulated data sets for a gene network with 1000 genes of which 105 act as regulators .",
    "the topology of the network is subsampled from an _ e. coli _ transcriptional network @xcite by cluster addition , resulting in a network with @xmath0 edges .",
    "all parameters of syntren were set to default values , except number of correlated inputs , which was set to 50% .",
    "syntren generated expression values ranging from @xmath1 ( no expression ) to @xmath2 ( maximal expression ) which we normalized to @xmath3 ratio values by picking one of the experiments as the control . except where indicated otherwise",
    ", the list of true regulators was given as the list of potential regulators for and genomica .",
    "for the tests performed on real data , we used an expression compendium for _ s. cerevisiae _ containing expression data for 173 different experimental stress conditions @xcite .",
    "the data were obtained in prenormalized and preprocessed form .",
    "we used the mean @xmath4 values of the expression ratios ( perturbation vs. control ) .    to assess the quality of the regulatory programs learned from real data , we used data on genome - wide binding and phylogenetically conserved motifs for 102 transcription factors from harbison _",
    "_ @xcite . for a given transcription factor ,",
    "only genes that were bound with high confidence ( significance level @xmath5 ) and showed motif conservation in at least one other _ saccharomyces _ species ( besides _ s. cerevisiae _ ) were considered true targets .",
    "module networks are a special kind of bayesian networks and were introduced by segal _ _ et al . _",
    "to each gene @xmath6 we associate a random variable @xmath7 which can take continuous values and corresponds to the gene s expression level .",
    "the distribution of @xmath7 depends on the expression level of a set of parent genes @xmath8 chosen from a list of potential regulators .",
    "if the network formed by drawing directed edges from parent genes to children genes is acyclic , we can define a joint probability distribution for the expression levels of all genes as a product of conditional distributions , @xmath9 this is the standard bayesian network formalism .    in a module network",
    "we assume that genes are partitioned into different sets called _ modules _",
    ", such that genes in the same module share the same parameters in the distribution function ( [ eq:7 ] ) .",
    "hence a module network is defined by a partition of @xmath10 into @xmath11 modules @xmath12 such that @xmath13 and @xmath14 for @xmath15 , a collection of parent genes @xmath16 for each module @xmath17 , and a joint probability distribution @xmath18 the conditional distribution @xmath19 of the expression level of the genes in module @xmath17 is normal with mean and standard deviation depending on the expression values of the parents of the module through a regression tree that is called the _ regulation program _ of the module .",
    "the tests on the internal nodes of the regression tree are of the form @xmath20 for some split value @xmath21 , where @xmath22 is the expression value of the parent associated to the node ( figure [ fig : gasch_module_11 ] ) .",
    "the bayesian score is obtained by taking the log of the marginal probability of the data likelihood over the parameters of the normal distributions at the leaves of the regression trees with a normal - gamma prior ( see @xcite and additional file 1 for more details ; the actual expression for the score is in eq .",
    "( [ eq : s9 ] ) ) .",
    "its main property is that it decomposes as a sum of leaf scores of the different modules : @xmath23 where @xmath24 denotes the experiments that end up at leaf @xmath25 after traversing the regression tree .",
    "a normal - gamma prior ensures that @xmath26 can be solved explicitly as a function of the sufficient statistics ( number of data points , mean and standard deviation ) of the leaves of the regression tree ( see additional file 1 ) .      for a given assignment of genes to modules , finding a maximum for the bayesian score ( [ eq:12 ] )",
    "consists of finding the optimal partitioning of experiments into ` leaves ' @xmath25 for each module separately , i.e. , find a collection of subsets @xmath27 such that @xmath28 , @xmath29 for @xmath30 , and @xmath31 is maximal . in particular we do not have to define the parent sets @xmath16 of the modules in order to find an optimal partition .",
    "we use a bottom - up hierarchical clustering method to heuristically find a high - scoring partition . at each step of the process",
    "we have a collection of binary trees @xmath32 which represent subsets @xmath33 of experiments .",
    "the binary split of @xmath34 into its children @xmath35 and @xmath36 corresponds to a partition of the set @xmath37 into two sets : @xmath38 .",
    "the initial collection consists of trivial trees without children representing single experiments . to proceed from one collection of trees to the next ,",
    "the pair of trees with highest merge score is merged into a new tree , and the collection of binary trees decreases by one , eventually leading to one hierarchical tree @xmath39 representing the complete experiment set @xmath40 .",
    "the simplest merge score is given by the possible gain in bayesian score by merging two experiment sets : @xmath41 in additional file 1 we define an alternative merge score related to the bayesian hierarchical clustering method of @xcite .",
    "this merge score takes into account the substructure of the trees below @xmath35 and @xmath36 in addition to the bayesian score difference ( [ eq:11 ] ) , and tends to produce more balanced trees .    in the final step ,",
    "we need to cut the hierarchical tree @xmath39 . to this end",
    "we traverse the tree from the root towards its leaves .",
    "if we are at a subtree node @xmath32 with children @xmath35 and @xmath36 , we compute the score difference ( [ eq:11 ] ) .",
    "if this difference is negative , the total score is improved by keeping the split @xmath32 , and we move on to test each of its children nodes . if the difference is positive , the total score is improved by not making the split @xmath32 , and we remove its children nodes from the tree .",
    "the experiment set @xmath33 becomes one of the leaves of the regulation program , contributing one term in the sum ( [ eq:13 ] ) .",
    "the pseudocode for the regulation program learning algorithm is given in figure [ fig : code ] in additional file 1 .",
    "in @xcite , regulation programs are learned top - down by considering all possible splits on all current leaves with all potential regulators , so regulation trees and regulator assignments are learned simultaneously . as a result missing",
    "regulators or noise in the regulator data might lead to a suboptimal partitioning of the experiments in a module . in our approach",
    "we have focused on finding an optimal partition of the module regardless of the set of potential regulators .",
    "a module collects the data of many genes and therefore this partition will be less affected by noise or missing data than when it is determined by exact splits on single regulators .      at a given internal node @xmath32 of the regulation tree @xmath39",
    ", the experiment set @xmath33 is partitioned into two distinct sets @xmath42 and @xmath43 according to the tree structure . given a regulator @xmath44 and split value @xmath21 , we can also partition @xmath33 into two sets @xmath45 where @xmath46 is the expression value of regulator @xmath44 in experiment @xmath47 .",
    "consider now two random variables : @xmath48 which can take the values @xmath49 or @xmath50 , and @xmath51 which can take the values @xmath2 or @xmath52 , with probabilities defined by simple counting , @xmath53 , @xmath54 , etc .",
    "we are interested in the uncertainty in @xmath48 given knowledge ( through the data ) of @xmath51 , i.e. , in the conditional entropy @xcite @xmath55 where @xmath56 , @xmath57 is the binary entropy function @xmath58 and @xmath59 are the conditional probabilities @xmath60 in the presence of missing data , the probabilities @xmath61 and @xmath59 need to be modified to take into account this extra uncertainty , details are given in additional file 1 .",
    "the conditional entropy is nonnegative and reaches its minimum value @xmath1 when @xmath62 or @xmath2 ( and consequently @xmath63 , resp .",
    "@xmath1 ) , which means the @xmath64 and @xmath65 partitions are equal and the regulator  split value pair ` explains ' the split in the regulation tree exactly .",
    "hence we assign to each internal node of a regulation tree the regulator  split value pair which minimizes the conditional entropy  ( [ eq:6 ] ) .",
    "since this assignment has to be done only once , after the module networks score has converged , the best regulator  split value pairs can be found by simply enumerating over all possibilities , even for relatively large data sets .",
    "the actual algorithm for assigning regulators to all nodes operates first on nodes closer to the roots of the trees where the most significant splits are located , and takes into account acyclicity constraints on the module network .",
    "it is presented in pseudocode in figure [ fig : code2 ] in additional file 1 .      to find an optimal module network , learning of regulation trees",
    "is alternated with reassigning genes to other modules until convergence of the bayesian score .",
    "module initialization can be done using any clustering algorithm . here ,",
    "we used @xmath17-means @xcite , and reassigning is done like in @xcite by making all single - gene moves from one module to another which improve the total score .      to obtain a gene network from a module network , we put directed edges from the regulators of a module to all the genes in that module .",
    "we compare inferred to true network by computing the number of edges that are true positive ( @xmath66 ) , false positive ( @xmath67 ) and false negative ( @xmath68 ) .",
    "standard measures for the inference quality are precision and recall .",
    "precision ( denoted @xmath69 ) is defined as the fraction of edges in the inferred module network that is correct , and recall ( denoted @xmath70 ) as the fraction of edges in the true network that is correctly inferred , i.e. , @xmath71 the @xmath72-measure , defined as the harmonic mean of precision and recall , @xmath73 , can be used as a single measure for inference quality .",
    "the module content for different module networks can be compared by computing for each module in one network how many genes of it are also grouped together in one module in the other network , and averaging over the number of modules .",
    "we call this the average module overlap .",
    "go enrichment @xmath74-values for all modules were determined using the bingo tool @xcite , which was incorporated into the package .",
    "the overrepresentation of go biological process categories was tested using hypergeometric tests and the resulting @xmath74-values were corrected for multiple testing using a false discovery rate correction .",
    "the latest version of syntren can be downloaded from @xcite and the latest version of genomica from @xcite .",
    "is implemented in java and available for download in source or executable form @xcite .",
    "as a starting point for the development of , we re - implemented the methodology described by segal _ et al . _",
    "@xcite , which is incorporated in the genomica software package .",
    "briefly , genomica takes as input a gene expression data set and a list of potential regulators . after an initial clustering step ,",
    "the algorithm iteratively constructs a regulatory program for each of the modules ( clusters ) in the form of a regression tree , and then reassigns each gene to the module whose program best predicts the gene s expression behavior .",
    "these two steps are repeated until convergence is reached . in this process",
    ", the algorithm attempts to maximize a bayesian score function that evaluates the model s fit to the data @xcite .",
    "we used the same overall strategy and the same bayesian score function in .",
    "however , with respect to the original methods described by segal _",
    "@xcite , incorporates an alternative strategy for inferring regulatory programs that offers some advantages ( see methods ) .",
    "first , uses a bayesian hierarchical clustering strategy to learn the regulation trees for the modules from the bottom up instead of from the top down .",
    "furthermore , contrary to genomica @xcite , the partitioning of expression data inside a module is not dependent on the expression profiles of the potential regulators , but only on the module data itself .",
    "this should allow the program to better handle missing or ` hidden ' regulators ( see further ) .",
    "as an additional advantage , the assignment of regulators to regulation program nodes can be postponed until after the final convergence of the bayesian score , which leads to considerable time savings ( see further ) .",
    "a second modification in is that regulators are assigned to the splits in the regulation tree ( data splits ) based on an information theoretic measure , namely the conditional entropy of the partition of the regulator s expression profile dictated by the data split , given the partition imposed by a particular split value ( see methods ) . as a consequence , a data split does not impose , but merely prefers , a clean partition of the best - matching regulator s expression values around a certain split value . in comparison with genomica , where only such clean partitions are used , this strategy has the advantage that potential noise in the regulator s expression is taken into account .",
    "additionally , the conditional entropy can be used to estimate the quality of the regulator assignment , and thus suggest missing potential regulators for splits without a low - entropy regulator .",
    "information theory has been used before to analyze and cluster gene expression data @xcite .",
    "our method introduces elements of information theory into the module networks formalism .    in the following sections , we use syntren data to test in a completely controlled situation in which simulated microarray data is analyzed for a known underlying regulatory network of reasonable size ,",
    "and we assess the performance effects of the aforementioned methodological changes with respect to genomica @xcite .",
    "the package and the source code are freely available under the gpl license ( see software section ) .",
    "a fundamental assumption of the module networks formalism is that real biological networks have a modular structure @xcite that is reflected in the gene expression data , and therefore groups of genes can share the same parameters in the mathematical description of the network .",
    "in , as in other module network learning programs @xcite , the desired number of modules has to be given as an input parameter to the inference program , and a main question is how the optimal module number has to be determined .",
    "fewer modules means lower computational cost and more data points per module .",
    "this results in a better estimation of parameters , but possibly entails oversimplifying the network and missing important regulatory relations .",
    "more modules means more specific optimization of the network at higher computational cost .",
    "when modules become too small , there could be too few data points per module for a reliable estimation of the parameters . in this section",
    "we use the bayesian score to estimate the optimal number of modules .     with @xmath22 the number of modules and @xmath75 .",
    "]    throughout this manuscript , we make use of a syntren - generated synthetic network encompassing 1000 genes of which 105 act as regulators ( see methods ) . unless otherwise stated , we use all 105 regulators in this network as potential regulators while inferring module networks .",
    "figure  [ fig : score_mod ] shows the bayesian score , normalized by the number of genes times the number of experiments , for this network and different numbers of experiments . in all three panels ,",
    "the score reaches a maximum .",
    "the top panel ( data set with 10 experiments ) , which has a true maximum for the score , illustrates that the network inference problem is underdetermined for very small data sets .",
    "increasing the number of modules beyond the location of the maximum lowers the fit of the model to the data . for larger data sets ( middle and bottom panel , 100 , resp .",
    "300 experiments ) , the score saturates and after a certain point the model does not improve anymore by increasing the number of modules .",
    "hence , the optimal number of modules should be situated around the point where the bayesian score starts to level off . for increasing number of experiments , the optimal number shifts to the right .",
    "this suggests that increasing amounts of data enable the algorithm to uncover smaller and more finetuned modules .",
    "however , the rightbound shift of the optimum becomes less pronounced for increasing number of experiments .",
    "this reflects the fact that only a limited number of modules are inherently present in the true network .",
    "we define the number of modules in the true network as the number of gene sets having the same set of regulators ( taking into account activator or repressor type ) .",
    "this number is @xmath76 for the 1000 gene synthetic network we consider here , among which there are @xmath77 with at least @xmath78 genes and @xmath79 with at least @xmath80 genes .",
    "the saturation behavior of the score curves for 100 and 300 experiments in figure  [ fig : score_mod ] more or less reflects the modularity in the true network .",
    "a more detailed analysis of network inference performance is obtained by comparing the set of regulator to gene edges in the true ( synthetic ) network and in the inferred module network .",
    "we use standard measures such as recall , precision , and @xmath72-measure ( see methods ) .",
    "figure  [ fig : rec_mod ] shows the recall as a function of the number of modules for different numbers of experiments .",
    "the location of the recall maxima seems to agree well with the saturation points of the corresponding bayesian score curves ( figure  [ fig : score_mod ] ) . as expected the maximal recall , and hence the total number of true positives , increases for data sets with more experiments , saturating between @xmath81 and @xmath82 for data sets with @xmath83 experiments .",
    "a similar saturation with increasing number of experiments is seen for the precision curves ( figure [ fig : prec_mod ] in additional file 1 ) and the @xmath72-measure curves ( figure [ fig : f_mod ] in additional file 1 ) . whereas the precision continues to increase with the number of modules , the @xmath72-measure saturates , but does so at a higher number of modules than the bayesian score . taking into account the modular composition of the true network",
    "( see previous section ) , the bayesian score and the recall curves seem to generate better estimates of the optimal number of modules than the @xmath72-measure curves .",
    "with @xmath22 the number of modules and @xmath84 .",
    "]    we also investigated whether the inferred regulation programs provide any information regarding the quality of the regulators .",
    "when analyzing real data , such information could be useful to prioritize regulators for experimental validation .",
    "a first property which we tried to relate to a regulator s quality is its hierarchical location in the regulation program .",
    "it seems that regulators deeper in the regulation tree become progressively less relevant .",
    "figure  [ fig : prec_mod_level ] illustrates this effect by showing separately the precisions for the roots of the regulation trees ( level @xmath1 ) , the children of the roots ( level @xmath2 ) , and the grandchildren ( level @xmath52 ) for data sets with 100 , 200 , and 300 experiments .",
    "the precisions for the various regulatory levels remain within each others standard deviation across the tested range of experiments , but the precision clearly diminishes with increasing levels in the regulation program . for each data set and inferred module network we created an additional network where each module is assigned a random regulator set of the same size as in the inferred network .",
    "the precision for these random regulation programs is shown in the bottom most curves in figure  [ fig : prec_mod_level ] . for regulation levels beyond level @xmath52 ,",
    "the precisions fall in this region of random assignments and they add almost exclusively false positives ( results not shown ) .",
    "in general , we can say that the top regulators are far more likely to represent true regulatory interactions .     with @xmath22 the number of modules and @xmath84 .",
    "]    an additional layer of information is provided by the regulator assignment entropies .",
    "a low value of the entropy corresponds to a regulator matching well with a split in the expression pattern of the regulated module .",
    "hence we expect regulators with low entropy to have a higher probability to be true regulators .",
    "this is illustrated in figure  [ fig : prec_ent ] .",
    "for the data set with 100 experiments and 150 modules , the subnetwork generated by all regulators with an entropy lower than , e.g. , @xmath85 has precision @xmath86 , almost twice as high as the precision of @xmath87 for the whole module network . for the subnetwork generated by the regulators at the roots of the regulation trees ,",
    "the precision increases from @xmath88 to @xmath89 by introducing the same entropy cut - off .",
    "other data sets show similar behavior ( data not shown ) .",
    "( spaced at 0.01 intervals ) gives the precision of all ( blue ) or top ( red ) regulators with assignment entropy @xmath90 . ]",
    "next , we compared the performance of and genomica @xcite .",
    "both programs heuristically search for an optimal module network and are therefore bound to end up at a ( different ) local maximum of the bayesian score .",
    "we simulated 10 different data sets with 100 experiments for the same 1000 gene network as before and inferred a network with @xmath91 modules ( corresponding to the point where the score function in figure  [ fig : score_mod ] starts to saturate ) .",
    "the average precisions are @xmath92 , resp .",
    "@xmath93 , and average recalls @xmath94 , resp .",
    "@xmath95 , for , resp .",
    "the average @xmath72-measure is @xmath96 , resp .",
    "the similarity in performance at the level of the whole module network , with a bias for higher precision in and higher recall in genomica , is further seen in figure  [ fig : noise ] , where we plot recall  precision pairs for both programs at different noise levels . for each of the plotted series , lower noise levels correspond to points in the upper right of the series plot , and higher noise levels to points in the bottom left , illustrating a general decrease in performance for more noisy data .    the average module overlap between the module networks generated by and genomica is @xmath98 . both programs ,",
    "although featuring similar performance , attain a different local maximum of the bayesian score , and the differences in the corresponding module networks can be quite substantial .",
    "in general we can say that both module network inference programs suffer from a high number of false positive edges .",
    "when using , false positives can to some extent be filtered out by looking only at the highest levels in the regulation tree ( figure  [ fig : prec_mod_level ] ) . to see whether this is also the case for genomica , we calculated the recall and precision for the subnetworks generated by the top regulators alone ( figure  [ fig : noise ] ) .",
    "the recall for these subnetworks is generally lower as they contain far fewer edges than the complete module network . for this decrease in recall",
    "is compensated by a large increase in precision .",
    "for genomica the decrease in recall is bigger , with only a slight increase in precision .",
    "there is no analogue of the assignment entropy in genomica , so we can not compare the gain in precision by imposing an entropy cut - off .",
    "one of the major differences in with respect to genomica is the fact that the regulatory tree structures learned by are only dependent on the expression data inside the module , and not on the expression profiles of potential regulators .",
    "we hypothesized that this might allow to better handle missing or hidden regulators , a situation which might for instance occur if the true regulator is missing from the list of potential regulators . in order to test this hypothesis",
    ", we simulated 10 different data sets with 100 experiments for the same 1000 gene network and inferred module networks with 150 modules using both and genomica .",
    "in each of the ten runs we randomly left out 20% of the potential regulators from the regulator list ( i.e. , we used 84 instead of 105 potential regulators ) .",
    "the average @xmath72-measure of the resulting networks is @xmath99 for , versus @xmath100 for genomica .",
    "compared to the results when taking into account all 105 potential regulators ( see above ) , the performance drop for is clearly less pronounced ( @xmath101 ) than for genomica ( @xmath102 ) , indicating that is indeed better at handling missing regulators .    regarding the speed of versus genomica , we can say that is considerably faster for larger data sets .",
    "this is mainly due to the fact that in the regulators need only be assigned to the regulation programs once , after the final convergence of the bayesian score .",
    "this saves a considerable amount of time on scanning possible split values and performing acyclicity checks at each iteration .",
    "roughly , and genomica performed equally in terms of speed on the syntren data set containing 1000 genes and 100 experiments . on a real data",
    "set with 173 experiments @xcite , was about twice as fast as genomica when limiting the number of genes to 1000 , and ten times faster when considering the whole data set ( 2355 genes ) .      for real biological data sets the underlying regulatory network",
    "is generally not known ( indeed , the primary purpose of module network learning algorithms is precisely to infer the regulatory network ) and hence it is difficult to assess the quality of an inferred network .",
    "this is one of the main reasons why microarray data simulators such as syntren have to be used to validate the methodology .",
    "however , given the fact that data simulators seldomly capture all aspects of real biological systems , any results obtained on simulated data should be approached critically and , where possible , validated on biological data sets . here , we investigate to what extent module networks inferred from real expression data can be validated using structured biological information .    for _",
    "s. cerevisiae _",
    ", there is partial information on the underlying network structure in the form of chip - chip data and promoter motif data @xcite , and more profusely in the form of go annotations @xcite .",
    "we learned module networks for budding yeast from an expression compendium containing data for 2355 genes under 173 different stress conditions @xcite ( the gasch data set ) using the same number of modules ( 50 ) and the same list of potential regulators as segal _",
    "we then calculated the @xmath72-measure between the resulting regulatory network and the chip - chip network of harbison _ et al . _",
    "@xcite , considering in the former network only regulators that were tested by chip - chip . in general , the resulting recall and precision values are substantially lower than for simulated data of the same size , namely @xmath103 , resp @xmath104 .",
    "when looking at individual modules , only @xmath105 out of @xmath106 regulatory programs feature at least one regulator that is to some extent confirmed by chip - chip data .",
    "in addition , we tried to relate the regulatory program of a module to the module s gene content in functional terms using go annotation .",
    "overall , only @xmath107 out of @xmath106 programs possess one or more regulators belonging to a yeast goslim biological process category that is overrepresented in the module ( considering only the leaf categories in the goslim hierarchy ) .",
    "remarkably , only @xmath78 of these @xmath107 programs overlap with the @xmath105 regulatory programs featuring overlap with the chip - chip data .",
    "this observation suggests that both data types can actually be used only to a limited extent to infer the quality of regulation programs .",
    "indeed , many factors limit the use of chip - chip and go data as ` gold standards ' . both types of data are noisy and offer incomplete information . for example , harbison _",
    "@xcite mainly profiled transcription factor binding in rich medium conditions , whereas the gasch data set contains primarily stress conditions .",
    "the parts of the transcriptional network that are active under these conditions may substantially differ @xcite .",
    "moreover , the expression profile of a transcription factor is often not directly related to the expression profile of its targets , for example due to post - translational regulation of transcription factor activity . as a consequence",
    ", indirect regulators such as upstream signal transducers may feature in the regulation programs instead of the direct regulators , i.e. , the transcription factors @xcite . as for go , many regulators appear not to be annotated to the go biological process categories of their target genes . taking these factors into account ,",
    "the limited overlap with the available chip - chip and go data does not necessarily reflect the quality of the inferred regulatory programs .    on the contrary , we established that the regulatory programs do in fact contain a considerable amount of relevant and potentially valuable information .",
    "indeed , by manually investigating individual modules in more detail , we could in many cases qualitatively relate the regulators to the module s gene content .",
    "for example , the module shown in figure [ fig : gasch_module_11 ] is enriched in a.o .",
    "genes involved in the main pathways of carbohydrate metabolism ( @xmath108e@xmath109 ) , energy derivation by oxidation of organic compounds ( @xmath110e@xmath109 ) and alcohol biosynthesis ( @xmath111e@xmath112 ) .",
    "none of the @xmath80 regulators of this module could be related to the module s gene content based on chip - chip or go information .",
    "however , based on their description in the _ saccharomyces _ genome database ( sgd ) @xcite , all @xmath80 regulators could be linked to glucose sensing or the response to ( glucose ) starvation , processes that can arguably influence the expression of carbohydrate metabolism genes .     under each split in the regulation tree represent the bayesian score gain over the split , normalized on the number of genes in the complete network ( @xmath22 ) , and the regulator assignment entropy ( @xmath113 ) . ]",
    "however , one must keep in mind that it remains impossible to infer complete and accurate regulatory networks from gene expression data alone .",
    "expression data only provides information on one regulatory level , namely the transcriptional level .",
    "information on ( post-)translational regulation is lacking .",
    "the current expression - based module network algorithms ( e.g. @xcite , this study ) try to remedy this problem by including signal transducers in the list of potential regulators in addition to transcription factors , in the hope to capture some of this non - transcriptional regulation from the expression profiles of key signal transducers .",
    "however , this trick can only be expected to uncover a fraction of such non - transcriptional regulatory interactions , and moreover the direct targets of these regulatory interactions are not identified . a potential remedy for this shortcoming would be to include other types of data , such as data on protein expression levels and protein phosphorylation , in the module network learning framework .",
    "unfortunately , such data are not yet available on a large scale .    in summary ,",
    "our results indicate that structured biological information such as chip - chip data or go can not ( yet ) be used to measure the performance of module network algorithms in an automated way .",
    "this is a strong argument for using data simulators such as syntren for the purpose of developing , testing and improving such algorithms .",
    "we developed a module network learning algorithm called and tested its performance on simulated expression data sets generated by syntren @xcite .",
    "we found that the bayesian score can be used to infer the optimal number of modules , and that the inference performance increases as a function of the number of simulated experiments but saturates well below 1 .",
    "we also used syntren data to assess the effects of the methodological changes we made in with respect to the original methods used in genomica @xcite .",
    "overall , application of genomica and to various simulated data sets gave comparable results , with a bias towards higher recall for genomica and higher precision for .",
    "however , offers some advantages over the original framework of segal _ et al . _",
    "@xcite , one of them being that the learning process is considerably faster .",
    "another advantage of is the fact that the algorithm ` lets the data decide ' when learning the regulatory tree structure .",
    "the partitioning of expression data inside a module is not dependent on the expression profiles of the potential regulators , but only on the module data itself . as a consequence ,",
    "the assignment of ` bad ' regulators ( in terms of assignment entropy ) to ` good ' module splits ( in terms of bayesian score ) might suggest missing or hidden regulators . this situation might occur if the true regulator is missing from the list of potential regulators , or if the expression of the targets can not be related directly to the expression of the regulator , e.g. , due to posttranslational regulation of the regulator s activity .",
    "we have also shown that filtering the module network by the location of regulators in the regulation program or by introducing an entropy cut - off improves the inference performance .",
    "when inferring regulatory programs from real data , these criteria may prove useful to prioritize regulators for experimental validation .    finally , we explored the extent to which module networks inferred from real expression data could be validated using structured biological information .",
    "for that purpose , we learned module networks from a microarray compendium of stress experiments on budding yeast @xcite .",
    "we found that the resulting regulatory programs overlapped only marginally with the available chip - chip data and go information .",
    "however , more detailed manual analysis uncovered that the learned regulation programs are nevertheless biologically relevant , suggesting that an automated assessment of the performance of module network algorithms using structured biological information such as chip - chip data or go is ineffective .",
    "this underscores the importance of using data simulators such as syntren for the purpose of testing and improving module network learning algorithms .",
    "t.m . and s.m .",
    "designed the study , developed software , analyzed the data and wrote the paper . e.b . and a.j .",
    "designed the study , developed software and analyzed the data .",
    ". designed the study and developed software . t.v.d.b . and k.v.l .",
    "developed software . p.v.r .",
    ", k.m . and y.v.d.p .",
    "designed the study and supervised the project .",
    "we thank eran segal for explanation about the genomica algorithm , and gary bader and ruth isserlin for refactoring the bingo code which allowed its incorporation into lemone . t.m . and",
    "are postdoctoral fellows of the research foundation flanders ( belgium ) , a.j . is supported by an early stage marie curie fellowship .",
    "this work is partially supported by : iwt projects : gbou - squad-20160 ; research council kuleuven : goa - ambiorics , coe ef/05/007 symbiosys ; fwo projects : g.0413.03 , and g.0241.04 .    10 [ 1][#1 ]    ideker t , galitski t , hood l : * a new approach to decoding life : systems biology*. _ annu rev genomics hum genet _ 2001 , * 2*:343372 .",
    "ashburner m , ball ca , blake ja , botstein d , butler h , cherry jm , davis ap , dolinski k , dwight ss , eppig jt , harris ma , hill dp , issel - tarver l , kasarskis a , lewis s , matese jc , richardson je , ringwald m , rubin gm , sherlock g : * gene ontology : tool for the unification of biology . the gene ontology consortium*. _ nat genet _ 2000 , * 25*:2529 .",
    "friedman n , linial m , nachman i , peer d : * using bayesian networks to analyze expression data*. _ j comput biol _ 2000 , * 7*:601620 .",
    "peer d , regev a , elidan g , friedman n : * inferring subnetworks from perturbed expression profiles*. _ bioinformatics _ 2001 , * 17 suppl 1*:s215s224 .",
    "bar - joseph z , gerber gk , lee ti , rinaldi nj , yoo jy , robert f , gordon db , fraenkel e , jaakkola ts , young ra , gifford dk : * computational discovery of gene modules and regulatory networks*. _ nat biotechnol _ 2003 , * 21*:13371342 .",
    "segal e , shapira m , regev a , peer d , botstein d , koller d , friedman n : * module networks : identifying regulatory modules and their condition - specific regulators from gene expression data*. _ nat genet _ 2003 , * 34*:166  167 .",
    "beer ma , tavazoie s : * predicting gene expression from sequence*. _ cell _ 2004 , * 117*:185  198 .",
    "friedman n : * inferring cellular networks using probabilistic graphical models*. _ science _ 2004 , * 308*:799  805 .",
    "harbison ct , gordon db , lee ti , rinaldi nj , macisaac kd , danford tw , hannett nm , tagne jb , reynolds db , yoo j , jennings eg , zeitlinger j , pokholok dk , kellis m , rolfe pa , takusagawa kt , lander es , gifford dk , fraenkel e , young ra : * transcriptional regulatory code of a eukaryotic genome*. _ nature _ 2004 , * 431*:99  104 .",
    "luscombe nm , madan babu m , yu h , snyder m , teichmann sa , gerstein m : * genomic analysis of regulatory network dynamics reveals large topological changes*. _ nature _ 2004 , * 431*:308  312 .    xu x , wang l , ding d : * learning module networks from genome - wide location and expression data*. _ febs lett _ 2004 , * 578*:297  304 .",
    "battle a , segal e , koller d : * probabilistic discovery of overlapping cellular processes and their regulation*. _ j comput biol _ 2005 , * 12*:909927 .",
    "basso k , margolin aa , stolovitzky g , klein u , dalla - favera r , califano a : * reverse engineering of regulatory networks in human b cells*. _ nat genet _ 2005 , * 37*:382  390 .",
    "garten y , kaplan s , pilpel y : * extraction of transcription regulatory signals from genome - wide dna - protein interaction data*. _ nucleic acids res _ 2005 , * 33*:605615 .",
    "petti aa , church gm : * a network of transcriptionally coordinated functional modules in _",
    "saccharomyces cerevisiae_*. _ genome res _ 2005 , * 15*:12981306 .",
    "lemmens k , dhollander t , de  bie t , monsieurs p , engelen k , smets b , winderickx j , de  moor b , marchal k : * inferring transcriptional modules from chip - chip , motif and microarray data*. _ genome biol _ 2006 , * 7*:r37 .",
    "van  den bulcke t , lemmens k , van  de peer y , marchal k : * inferring transcriptional networks by mining ` omics ' data*. _ current bioinformatics _ 2006 , * 1*:301  313 .",
    "hartwell lh , hopfield jj , leibler s , murray aw : * from molecular to modular cell biology*. _ nature _ 1999 , * 402*:c47  c52 .",
    "segal e , friedman n , kaminski n , regev a , koller d : * from signatures to models : understanding cancer using microarrays*. _ nat genet _ 2005 , * 37*:s38  s45 .",
    "van  den bulcke t , van  leemput k , naudts b , van remortel p , ma h , verschoren a , de  moor b , marchal k : * syntren : a generator of synthetic gene expression data for design and analysis of structure learning algorithms*. _ bmc bioinformatics _ 2006 , * 7*:43 .",
    "gasch ap , spellman pt , kao cm , carmel - harel o , eisen mb , storz g , botstein d , brown po : * genomic expression programs in the response of yeast cells to environmental changes*. _",
    "mol biol cell _ 2000 , * 11*:4241  4257 .",
    "butte a , kohane i : * mutual information relevance networks : functional genomic clustering using pairwise entropy measurements*. _ pac symp biocomputing _ 2000 , * 5*:415  426 .",
    "butte a , tamayo p , slonim d , golub t , kohane i : * discovering functional relationships between rna expression and chemotherapeutic susceptibility using relevance networks*. _ pnas _ 2000 , * 97*:12182  12186",
    ".    peer d , regev a , a t : * minreg : inferring an active regulator set*. _ bioinformatics _ 2002 , * 18 suppl 1*:s258  s267 .",
    "sinkkonen j , kaski s : * clustering based on conditional distributions in an auxiliary space*. _ neural comput _ 2002 , * 14*:217  239 .",
    "kasturi j , acharya r , ramanathan m : * an information theoretic approach for analyzing temporal patterns of gene expression*. _ bioinformatics _ 2003 , * 19*:449  458 .    * * genomica**[http://genomica.weizmann.ac.il][[http://genomica.weizmann.ac.il ] ] .    * * _ saccharomyces _ genome database**[http://www.yeastgenome.org/][[http://www.yeastgenome.org/ ] ] .",
    "ma hw , kumar b , ditges u , gunzer f , buer j , zeng ap : * an extended transcriptional regulatory network of _ escherichia coli _ and analysis of its hierarchical structure and network motifs*. _ nucleic acids res _ 2004 , * 32*:6643  6649 .",
    "segal e , peer d , regev a , koller d , friedman n : * learning module networks*. _ journal of machine learning research _ 2005 , * 6*:557  588 .",
    "heller ka , ghahramani z : * bayesian hierarchical clustering*. in _ proceedings of the twenty - second international conference on machine learning _ 2005 .    shannon ce : * a mathematical theory of communication*. _ the bell system technical journal _ 1948 , * 27*:379  423 , 623  656 , [ http://cm.bell-labs.com/cm/ms/what/shannonday/paper.html][[http://cm.bell-labs.com/cm/ms/what/shannonday/paper.html ] ] .",
    "de  hoon mjl , imoto s , nolan j , miyano s : * open source clustering software*. _ bioinformatics _ 2004 , * 20*:1453  1454 .",
    "maere s , heymans k , kuiper m : * bingo : a cytoscape plugin to assess overrepresentation of gene ontology categories in biological networks*. _ bioinformatics _ 2005 , * 21*:34483449 .    * * syntren**[http://homes.esat.kuleuven.be/~kmarchal / syntren][[http://homes.esat.kuleuven.be/~kmarchal / syntren ] ] .",
    "* * lemone**[http://bioinformatics.psb.ugent.be / lemone / download.htm][[http://bioinformatics.psb.ugent.be / lemone / download.htm ] ] .",
    "with @xmath22 the number of modules and @xmath84 . ]",
    "-measure as a function of the number of modules for data sets with 10 ( magenta ) , 50 ( cyan ) , 100 ( red ) , 200 ( green ) , and 300 ( blue ) experiments .",
    "the curves are least squares fits of the data to a linear non - polynomial model of the form @xmath114 with @xmath22 the number of modules and @xmath84 . ]",
    "we use the same bayesian score as in the original module networks formalism @xcite .",
    "the data likelihood is given by evaluating the module network joint probability distribution ( eq .",
    "( 2 ) ) on the data set , assuming independent experiments , @xmath115 where @xmath116 is the @xmath117-normalized expression value of gene @xmath6 in experiment @xmath47 .",
    "the bayesian score is obtained by taking the @xmath117 of the marginal probability of the data likelihood over the parameters of the normal distributions at the leaves of the regression trees with a normal - gamma prior .",
    "it decomposes as a sum of leaf scores of the different modules : @xmath118 where @xmath17 runs over the set of modules and @xmath25 runs over the set of leaves of the regression tree of module @xmath17 ; @xmath24 denotes the experiments that end up at leaf @xmath25 after traversing the regression tree and @xmath12 denotes the genes assigned to module @xmath17 ; @xmath119 is a normal - gamma distribution over the mean @xmath120 and precision @xmath121 of the normal distribution @xmath122 , i.e. , @xmath123 where @xmath124 and @xmath125 :    @xmath126    with @xmath127 and @xmath128 .",
    "insertion of eqs .",
    "( [ eq : s2])([eq : s4 ] ) into eq .",
    "( [ eq : s1 ] ) leads to an integral that can be solved explicitly as a function of the sufficient statistics @xmath129 of the leaves of the regression tree .",
    "the result is @xmath130 where @xmath131 \\\\    + \\frac{\\lambda_0 \\bigl ( r_1^{(\\ell ) } - \\mu_0 r_0^{(\\ell ) }      \\bigr)^2}{2(\\lambda_0 + r_0^{(\\ell)})r_0^{(\\ell)}}.\\end{gathered}\\ ] ]",
    "the pseudocode for the regulation program learning algorithm is given in figure [ fig : code ] . in its simplest form",
    ", the merge score for two trees @xmath35 and @xmath36 considers only the gain in bayesian score that is obtained by merging two sets into one : @xmath132 in our computations we used a merge score which is slightly more complicated and takes into account the whole substructure of the tree below @xmath35 and @xmath36 .",
    "let @xmath32 be a tree with children @xmath35 and @xmath36 , and define recursively @xmath133 for the trivial tree with one experiment @xmath47 and no children .",
    "the new merge score is then defined as @xmath134    a binary tree @xmath32 generates a nested set of partitions @xmath135 ( we write this as @xmath136 ) of its experiment set @xmath33 and to each such partition corresponds a score @xmath137 where @xmath138 are the subsets of @xmath33 forming the partition @xmath135 . since a partition generated by @xmath32 is either the singleton partition @xmath139 , or a combination of a partition generated by @xmath35 with a partition generated by @xmath36 , we get immediately @xmath140 or @xmath141 we conclude that the merge score ( [ eq : s7 ] ) contains the score difference ( [ eq : s6 ] ) as well as other terms defined by the structure of the subtrees @xmath35 and @xmath36 .",
    "if two pairs of trees give the same score difference ( [ eq : s6 ] ) , the merge score ( [ eq : s7 ] ) will typically favor to merge the pair with the smallest substructure first ( as the number of terms in the summation in ( [ eq : s10 ] ) is smaller ) .",
    "hence , using ( [ eq : s7 ] ) instead of ( [ eq : s6 ] ) leads to more balanced trees .",
    "since we are building the tree from the bottom up , computing the partition sums @xmath142 is done along the way , and using the merge score ( [ eq : s7 ] ) instead of ( [ eq : s6 ] ) comes at no computational cost .",
    "the whole process of constructing the tree with a merge score depending on all the partitions generated by the subtrees is very similar to the bayesian hierarchical clustering method of @xcite .",
    "in real data there are often missing values , so for some experiments we do not know if a regulator is above or below a given split value . using the non - missing values to define the sets @xmath143 and @xmath144 , we compute @xmath59 as before . since regulators with a lot of missing values lead to more uncertainty , we penalize those by moving the conditional probabilities @xmath59 closer to the maximum uncertainty value of @xmath145 by defining @xmath146 where @xmath147 note that when there are no missing values , @xmath148 , and in the extreme case where there are only missing values , @xmath149 . for the probability distribution of @xmath51 , we distribute the missing values proportionally over @xmath2 and @xmath52 , @xmath150 such that @xmath151 still sums up to @xmath2 .",
    "we now minimize the conditional entropy @xmath152 corresponding to these modified probability distributions . for the sufficient statistics of the leaves of the module , we simply ignore the missing values as there are typically more than enough combined data points for a reliable computation of those statistics ."
  ],
  "abstract_text": [
    "<S> [ [ background ] ] background : + + + + + + + + + + +    in recent years , several authors have used probabilistic graphical models to learn expression modules and their regulatory programs from gene expression data . despite the demonstrated success of such algorithms in uncovering biologically relevant regulatory relations , further developments in the area are hampered by a lack of tools to compare the performance of alternative module network learning strategies . </S>",
    "<S> here , we demonstrate the use of the synthetic data generator syntren for the purpose of testing and comparing module network learning algorithms . we introduce a software package for learning module networks , called , which incorporates a novel strategy for learning regulatory programs . </S>",
    "<S> novelties include the use of a bottom - up bayesian hierarchical clustering to construct the regulatory programs , and the use of a conditional entropy measure to assign regulators to the regulation program nodes . </S>",
    "<S> using syntren data , we test the performance of in a completely controlled situation and assess the effect of the methodological changes we made with respect to an existing software package , namely genomica . additionally , we assess the effect of various parameters , such as the size of the data set and the amount of noise , on the inference performance .    </S>",
    "<S> [ [ results ] ] results : + + + + + + + +    overall , application of genomica and to simulated data sets gave comparable results . </S>",
    "<S> however , offers some advantages , one of them being that the learning process is considerably faster for larger data sets . </S>",
    "<S> additionally , we show that the location of the regulators in the regulation programs and their conditional entropy may be used to prioritize regulators for functional validation , and that the combination of the bottom - up clustering strategy with the conditional entropy - based assignment of regulators improves the handling of missing or hidden regulators .    [ [ conclusions ] ] conclusions : + + + + + + + + + + + +    we show that data simulators such as syntren are very well suited for the purpose of developing , testing and improving module network algorithms . </S>",
    "<S> we used syntren data to develop and test an alternative module network learning strategy , which is incorporated in the software package , and we provide evidence that this alternative strategy has several advantages with respect to existing methods .    </S>",
    "<S> [ 1995/12/01 ] </S>"
  ]
}
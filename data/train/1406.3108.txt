{
  "article_text": [
    "post - processing is an important technique in scientific computing , where it is necessary to draw some useful information that have physical meanings such as velocity , flux , stress , etc .",
    ", from the primary results of the computation .",
    "these quantities of interest usually involve derivatives of the primary data .",
    "some popular post - processing techniques include the celebrated zienkiewicz - zhu superconvergent patch recovery ( spr ) @xcite , polynomial preserving recovery ( ppr ) @xcite , and edge based recovery @xcite , which were proposed to obtain accurate gradients with reasonable cost . similarly , post - processing for second order derivatives , which are related to physical quantities such as momentum and hessian , are also desirable .",
    "hessian matrix is particularly significant in adaptive mesh design , since it can indicate the direction where the function changes the most and guide us to construct anisotropic meshes to cope with the anisotropic properties of the solution of the underlying partial differential equation @xcite .",
    "it also plays an important role in finite element approximation of second order non - variational elliptic problems @xcite , numerical solution of some fully nonlinear equations such as monge - amp@xmath2re equation @xcite , and designing nonlocal finite element technique @xcite .",
    "there have been some works in literature on this subject . in 1998 , lakhany - whiteman used a simple averaging twice at edge centers of the regular uniform triangular mesh to produce a superconvergent hessian @xcite .",
    "later , some other reseachers such as agouzal et al .",
    "@xcite and ovall @xcite also studied hessian recovery .",
    "comparsion studies of existing hessian recovery techniques are found in vallet et al .",
    "@xcite and picasso et al .",
    "@xcite . however , there is no systematic theory guarantees convergence in general circumstances .",
    "moreover , there are certain technical difficulties in obtaining rigorous convergence proof for meshes other than the regular pattern triangular mesh . in a very recent work",
    ", kamenski - huang argued that it is not necessary to have very accurate or even convergent hessian in order to obtain a good mesh @xcite .",
    "our current work is not targeted on the direction of adaptive mesh refinement ; instead , our emphasis is to obtain accurate hessian matrices via recovery techniques .",
    "we propose an effective hessian recovery method and establish a solid theoretical analysis for such a recovery method .",
    "our approach is to apply ppr twice to the primarily computed data .",
    "this idea is natural .",
    "however , the mathematical theory behind is non - trivial and quite involved , especially in the ultraconvergence analysis of the recovered hessian .",
    "a direct calculation of the gradient from the linear finite element space has linear convergent rate and the hessian has no convergence at all .",
    "our hessian recovery can achieve second - order convergence under some uniform meshes , which is a very surprising result !",
    "in this section , we first introduce some frequently used notation and then briefly describe the polynomial preserving recovery ( ppr ) operator @xcite , which is the basis of our hessian recovery method .",
    "let @xmath3 be a bounded polygonal domain with lipschitz boundary @xmath4 in @xmath5 . throughout this article , the standard notation for classical sobolev spaces and their associate norms",
    "are adopted as in @xcite .",
    "a multi - index @xmath6 is a @xmath7-tuple of non - negative integers @xmath8 , @xmath9 .",
    "the length of @xmath6 is given by @xmath10 for @xmath11 and @xmath12 , denote @xmath13 the weak partial derivative @xmath14 . also , @xmath15 with @xmath16 is the vector of all partial derivatives of order @xmath17 .",
    "the hessian operator @xmath18 is denoted by @xmath19 for a subdomain @xmath20 of @xmath3 , let @xmath21 be the space of polynomials of degree less than or equal to @xmath22 over @xmath20 and @xmath23 be the dimension of @xmath21 with @xmath24 .",
    "@xmath25 denotes the classical sobolev space with norm @xmath26 and seminorm @xmath27 .",
    "when @xmath28 , we denote simply @xmath29 and the subscript @xmath30 is omitted .    for any @xmath31 ,",
    "let @xmath32 be a shape regular triangulation of @xmath33 with mesh size at most @xmath34 , i.e. @xmath35 where @xmath36 is a triangle .",
    "for any @xmath37 , define the continuous finite element space @xmath38 of order @xmath17 as @xmath39 let @xmath40 denote the set of mesh nodes , i.e. the dual space of @xmath38 .",
    "the standard lagrange basis of @xmath38 is denoted by @xmath41 with @xmath42 for all @xmath43 . for any @xmath44 ,",
    "let @xmath45 be the interpolation of @xmath46 in @xmath38 , i.e.,@xmath47 .    for @xmath48 ,",
    "let @xmath49 denote the restrictions of functions in @xmath38 to @xmath20 and let @xmath50 denote the set of those functions in @xmath49 with compact support in the interior of @xmath20 @xcite .",
    "let @xmath51 be separated by @xmath52 and @xmath53 be a direction , i.e. , a unit vector in @xmath5 .",
    "let @xmath54 be a parameter , which will typically be a multiply of @xmath34 .",
    "let @xmath55 denote translation by @xmath54 in the direction @xmath53 , i.e. , @xmath56 and for an integer @xmath57 @xmath58 following the definition of @xcite , the finite element space @xmath38 is called translation invariant by @xmath54 in the direction @xmath53 if @xmath59 for some integer @xmath57 with @xmath60 .",
    "equivalently , @xmath32 is called a translation invariant mesh . to clarify the matter",
    ", we consider five popular triangular mesh patterns : regular , chevron , union - jack , criss - cross , and equilateral patterns , as shown in figure [ mesh ] .",
    "we see that :    \\1 ) regular pattern is translation invariant by @xmath34 in directions @xmath61 and @xmath62 , by @xmath63 in directions @xmath64 , and by @xmath65 in directions @xmath66 and @xmath67 , ......",
    "\\2 ) chevron pattern is translation invariant by @xmath34 in the direction @xmath62 , by @xmath68 in the direction @xmath61 , and by @xmath63 in directions @xmath64 , and by @xmath65 in directions @xmath67 , ......",
    "\\3 ) criss - cross pattern is translation invariant by @xmath69 in directions @xmath61 and @xmath62 , and by @xmath68 in directions @xmath64 , ......",
    "\\4 ) union - jack pattern is translation invariant by @xmath68 in directions @xmath61 and @xmath62 , and by @xmath63 in directions @xmath64 , ......",
    "\\5 ) equilateral pattern is translation invariant by @xmath34 in directions @xmath61 and @xmath70 , and by @xmath71 in directions @xmath62 and @xmath72 , ......    throughout this article , the letter @xmath73 or @xmath74 , with or without subscript , denotes a generic constant which is independent of @xmath34 and may not be the same at each occurrence . to simplify notation",
    ", we denote @xmath75 by @xmath76 .",
    "let @xmath77 be the ppr operator .",
    "given a function @xmath78 , it suffices to define @xmath79 for all @xmath80 .",
    "let @xmath81 be a vertex and @xmath82 be a patch of elements around @xmath83 which is defined in @xcite .",
    "select all nodes in @xmath84 as sampling points and fit a polynomial @xmath85 in the least squares sense at those sampling points , i.e. @xmath86 then the recovered gradient at @xmath83 is defined as @xmath87 for linear element , all nodes in @xmath40 are vertices and hence @xmath88 is well defined .",
    "however , @xmath40 may contain edge nodes or interior nodes for higher order elements .",
    "if @xmath83 is an edge node which lies on an edge between two vertices @xmath89 and @xmath90 , we define @xmath91 where @xmath92 is determined by the ratio of distances of @xmath83 to @xmath89 and @xmath90 . if @xmath83 is an interior node which lies in a triangle formed by three vertices @xmath89 , @xmath90 , and @xmath93 , we define @xmath94 where @xmath95 is the barycentric coordinate of @xmath83 .",
    "it was proved in @xcite that certain rank condition and geometric condition guarantee the uniqueness of @xmath96 in .    in order to avoid numerical instability , a discrete least squares fitting process",
    "is carried out on a reference patch @xmath97 .",
    "given @xmath98 , let @xmath99 be the recovered gradient using ppr as defined in previous section .",
    "we rewrite @xmath100 as @xmath101 in order to recover the hessian matrix of @xmath102 , we apply gradient recovery operator @xmath103 to @xmath104 and @xmath105 one more time , respectively , and define the hessian recovery operator @xmath106 as follows @xmath107 just as ppr , we obtain @xmath108 on the whole domain @xmath3 by interpolation after determining values of @xmath109 at all nodes in @xmath40",
    ".    the two gradient recovery operators in definition of @xmath106 can be different .",
    "actually we can define the hessian recovery operator @xmath106 as following @xmath110 by choosing @xmath103 and @xmath111 as ppr or spr operator , we obtain four different hessian recovery operators , i.e. , ppr - ppr , ppr - spr , spr - ppr , and spr - spr .",
    "however , numerical tests have shown that ppr - ppr is the best one .",
    "[ fourmethods ]    in order to demonstrate our method , we shall discuss two examples in detail . for the sake of simplicity , only linear element on uniform meshes will be considered . in practice",
    ", the method can be applied to arbitrary meshes and higher order elements .    _",
    "example 1_. consider the regular pattern uniform mesh as in figure [ regular ] .",
    "we want to recovery the hessian matrix at @xmath112 .",
    "as deduced in @xcite , the recovered gradient at @xmath112 is given by @xmath113 here @xmath114 represents function value of @xmath102 at node @xmath115 .",
    "thus , according to the definition of the hessian recovery operator @xmath106 , we have @xmath116 and @xmath117 where @xmath118 and @xmath119 follow the similar pattern .",
    "direct calculation reveals that @xmath120 it is observed that @xmath121 , which means the recovered hessian matrix is symmetric , a property of the exact hessian we would like to maintain .",
    "using taylor expansion , we can show that @xmath122 which imply that @xmath109 provides a second order approximation of @xmath123 at @xmath112 .",
    "_ example 2 .",
    "_ consider the chevron pattern uniform mesh as shown in figure [ chevron ] .",
    "repeating the procedure as in example 1 , we derive the recovered hessian matrix at @xmath112 as @xmath124 in addition , we have the following taylor expansion @xmath125 we conclude that @xmath109 is a second order approximation to the hessian matrix .",
    "it is worth pointing out that , though @xmath126 for the chevron pattern uniform mesh , they are both second order finite difference schemes at @xmath112 .    ppr - ppr is the only one among the four hessian recovery methods mentioned in remark [ fourmethods ] that provides second order approximation for all five mesh patterns , especially the chevron pattern .",
    "both example 1 and 2 indicate that for linear element the ppr - ppr approach is equivalent to a finite difference scheme of second order accuracy at vertex @xmath112 . in general",
    ", we can show that @xmath106 preserves polynomials of degree up to @xmath0 for @xmath17th order element .",
    "consider @xmath127-element .",
    "let @xmath102 be a polynomial of degree @xmath0 .",
    "since @xmath103 preserves polynomials of degree @xmath0 , it follows that @xmath128 which is a polynomial of degree @xmath17 .",
    "therefore , we have @xmath129 it means that @xmath106 preserves polynomials of degree @xmath0 for arbitrary mesh .",
    "now we proceed translation invariant mesh . under the polynomial preserving property , the recovered gradient is exact for polynomials of degree @xmath0 .",
    "therefore @xmath130 @xmath131 note that @xmath132 are functions of @xmath133 if @xmath134 a nodal point of arbitrary mesh .",
    "let @xmath135 be any node on a translation invariant mesh .",
    "we further assume that @xmath136 is a local symmetry center for all sampling points involved .",
    "notice that coefficients @xmath137 , @xmath138 , @xmath139 , @xmath140 depend only on the coordinates of nodes , since we recover gradient at nodes only .",
    "thus for translation invariant meshes , @xmath137 , @xmath138 , @xmath139 , @xmath140 are constants .",
    "in addition , due to symmetry , it makes no difference if we perform @xmath141 or @xmath142 first . hence , @xmath143 \\\\          = & ( g_h^y(d_x u))(\\pmb z ) + h^{k+1 } ( \\pmb a^x \\cdot      g_h^y(d^{k+2}u ) ) ( \\pmb z ) + h^{k+2 }      ( \\pmb b^x \\cdot g_h^y(d^{k+3}u ) ) ( \\pmb z ) + \\cdots   \\\\          = & ( d_y d_xu)(\\pmb z ) + h^{k+1 } ( \\pmb a^y \\cdot d^{k+2 } d_xu)(\\pmb z )      + h^{k+2 } ( \\pmb b^y \\cdot d^{k+3}d_xu ) ( \\pmb z)\\\\          & + h^{k+1 } ( \\pmb a^x \\cdot d_y(d^{k+2}u ) ) ( \\pmb z ) + h^{k+2}(\\pmb b^x      \\cdot d_y(d^{k+3}u ) ) ( \\pmb z)+ o(h^{k+3 } )   \\\\          = & ( d_y d_xu)(\\pmb z ) + h^{k+1 } [ \\pmb a^y \\cdot d^{k+2 } d_xu + \\pmb a^x          \\cdot d_y(d^{k+2}u)](\\pmb z)+\\\\            &   h^{k+2 } [ \\pmb b^y \\cdot d^{k+3}d_xu + \\pmb b^x            \\cdot d_y(d^{k+3}u ) ]",
    "( \\pmb z ) + o(h^{k+3 } ) .",
    "\\end{split }      \\label{tgxyk+1}\\ ] ] notice that is valid only at nodal points .",
    "similarly ,    @xmath144(\\pmb z)+ \\\\              & h^{k+2 } [ \\pmb b^x \\cdot d^{k+3}d_yu + \\pmb b^y          \\cdot   d_x(d^{k+3}u ) ] ( \\pmb z ) + o(h^{k+3 } ) ;      \\end{split }      \\label{tgyxk+1}\\\\      \\begin{split }      ( h_h^{xx}u)(\\pmb z ) = & ( d_x d_xu)(\\pmb z ) + h^{k+1 }      [ \\pmb a^x \\cdot d^{k+2 } d_xu          + \\pmb a^x \\cdot d_x(d^{k+2}u)](\\pmb z)+ \\\\            & h^{k+2 } [ \\pmb b^x \\cdot d^{k+3}d_xu + \\pmb b^x            \\cdot d_x(d^{k+3}u ) ] ( \\pmb z ) + o(h^{k+3 } ) ;      \\end{split }      \\label{tgxxk+1}\\\\      \\begin{split }          ( h_h^{yy}u)(\\pmb z ) = & ( d_y d_yu)(z ) +      h^{k+1 } [ \\pmb a^y \\cdot d^{k+2 } d_yu +          \\pmb a^y \\cdot d_y(d^{k+2}u)](\\pmb z)+ \\\\          & h^{k+2 } [ \\pmb b^y \\cdot d^{k+3}d_yu + \\pmb b^y \\cdot      d_y(d^{k+3}u)](\\pmb z )   + o(h^{k+3 } )",
    ".      \\end{split }      \\label{tgyyk+1}\\end{aligned}\\ ] ]     imply that the hessian recovery operator @xmath106 is exact for polynomials of degree @xmath145 for translation invariant meshes . also , we observe @xmath146 from and .",
    "it is worth pointing out that , except for the chevron pattern ,  are valid for the other four patterns of uniform meshes , since the recovered gradient @xmath100 produces the same stencil at each node .",
    "next we consider even order ( @xmath147 element on translation invariant meshes , in which case @xmath148 @xmath149 and @xmath150 are constants in . here",
    "the symbol @xmath151 is understood as taking all partial derivatives to each entry of the vector .",
    "consequently , @xmath152 also , is valid only at nodal points . plugging into yields @xmath153 in the last identity we have used ( [ ff ] ) and ( [ dd ] ) .",
    "the argument for the other three entries of recovered hessian matrix are similar .",
    "we conclude that the hessian recovery operator @xmath106 is exact for polynomials of degree up to @xmath154 when @xmath17 is even and the mesh is translation invariant and symmetric with respect to @xmath155 and @xmath156 .",
    "the above results can be summarized as the following theorem :    the hessian recovery operator @xmath106 preserves polynomials of degree @xmath0 for an arbitrary mesh . if @xmath83 is a node of a translation invariant mesh , then @xmath106 preserves polynomials of degree @xmath145 for odd @xmath17 , and of degree @xmath154 for even @xmath17 . moreover , if the sampling points are symmetric with respect to @xmath155 and @xmath156 , then @xmath106 is symmetric .",
    "[ poly ]    according to @xcite , the best hessian recovery method in the literature preserves polynomial of degree 2 for linear element .",
    "our method preserves polynomial of degree 2 on general unstructured meshes and preserves polynomials of degree 3 on translation invariant meshes for linear element .",
    "[ pp ] let @xmath157 ; then @xmath158 if @xmath83 is a node of translation invariant mesh and @xmath159 , then @xmath160 furthermore , if @xmath83 is a node of translation invariant mesh and @xmath161 with @xmath17 an even number , then @xmath162    it is a direct result of theorem [ poly ] and application of the hilbert - bramble lemma .",
    "in this section , we first use the supercloseness between the gradient of the finite element solution @xmath163 and the gradient of the interpolation @xmath164 @xcite , and properties of the ppr operator @xcite to establish the superconvergence property of our hessian recovery operator on mildly structured mesh .",
    "then we utilize the tool of superconvergence by difference quotients from @xcite to prove the proposed hessian recovery method is ultraconvergent for translation invariant finite element space of any order .    in this section ,",
    "we consider the following variational problem : find @xmath165 such that @xmath166 here @xmath167 is a @xmath168 symmetric positive definite matrix , @xmath169 is a vector , and @xmath74 as well as @xmath170 are scalars .",
    "all coefficient functions are assumed to be smooth .    in order to insure",
    "has a unique solution , we assume the bilinear form @xmath171 satisfies the continuity condition @xmath172 for all @xmath173 .",
    "we also assume the inf - sup conditions @xcite @xmath174    the finite element approximation of is to find @xmath78 satisfying @xmath175 to insure a unique solution for , we assume the inf - sup conditions @xmath176    from and , it is easy to see that @xmath177 for any @xmath178 . in particular , holds for any @xmath179 .",
    "linear finite element space @xmath38 on quasi - uniform mesh @xmath32 is considered in this subsection .",
    "the triangulation @xmath32 is said to satisfy condition @xmath180 if there exist a partition @xmath181 of @xmath32 and positive constants @xmath6 and @xmath182 such that every two adjacent triangles in @xmath183 form an @xmath184 parallelogram and @xmath185    an @xmath184 parallelogram is a quadrilateral shifted from a parallelogram by @xmath184 .    for general @xmath6 and @xmath182",
    ", xu and zhang @xcite proved the following theorem .",
    "[ linearsuperclose ] let @xmath102 be the solution of , let @xmath78 be the finite element solution of , and let @xmath186 be the linear interpolation of @xmath102 . if the triangulation @xmath32 satisfies condition @xmath180 and @xmath187 , then @xmath188 where @xmath189 .    using the above result , we are able to obtain a convergence rate for our hessian recovery operator .",
    "suppose that the solution of belongs to @xmath190 and @xmath32 satisfies condition @xmath180 , then we have @xmath191 [ linearsuperconvergent ]    we decompose @xmath192 as @xmath193 , since @xmath194 . using the triangle inequality and the definition of @xmath106",
    ", we obtain @xmath195 the first term in the above expression is bounded by @xmath196 according to theorem [ pp ] .",
    "since @xmath103 is a bounded linear operator @xcite , it follows that @xmath197 notice that @xmath198 is a function in @xmath38 and hence the inverse estimate @xcite can be applied .",
    "thus , @xmath199 and hence theorem [ linearsuperclose ] implies that @xmath200 combining the above two estimates completes our proof .",
    "we proceed to quadratic finite element space @xmath38 .",
    "according to @xcite , a triangulation @xmath32 is strongly regular if any two adjacent triangles in @xmath32 form an @xmath201 approximate parallelogram .",
    "huang and xu proved the following superconvergence results in @xcite .    if the triangulation @xmath32 is uniform or strongly regular , then @xmath202 [ quadsuperclose ]    based on the above theorem , we obtain the following superconvergent result .",
    "suppose that the solution of belongs to @xmath203 and @xmath32 is uniform or strongly regular .",
    "then we have @xmath204 [ quadsuperconvergent ]    the proof is similar to the proof of theorem [ linearsuperconvergent ] by using theorem [ quadsuperclose ] and the inverse estimate .",
    "theorem [ quadsuperconvergent ] can be generalized to mildly structured meshes as in @xcite .",
    "first , we observe that the hessian recovery operator results in a difference quotient . it is due to the fact that @xmath103 is a difference quotient @xcite and the composition of two difference quotients is still a difference quotient . let us take linear element on uniform triangular mesh of the regular pattern as an example , see figure [ regular ] .",
    "the recovered second order derivative at a nodal point @xmath83 is @xmath205 let @xmath206 be the nodal shape functions . since @xmath207",
    ", it follows that @xmath208.\\end{aligned}\\ ] ] the translations are in the directions of @xmath209 , @xmath210 , @xmath211 , @xmath212 , @xmath213 , and @xmath214 .",
    "therefore , we can express the recovered second order derivative as @xmath215 for some integer @xmath216 .",
    "let all coefficients in the bilinear form @xmath171 be constant .",
    "then @xmath217 since @xmath218 is a difference operator constructed from translation of type , it follows that @xmath219 therefore , theorem 5.5.2 of @xcite ( with @xmath220 ) implies that @xmath221 here @xmath222 for linear element and @xmath223 for higher order element .",
    "note that @xmath224 and hence the first term on the right hand side of can be estimated by standard approximation theory under the assumption that the finite element space includes piecewise polynomial of degree @xmath17 : @xmath225 provided @xmath226 , see @xcite .",
    "it remains to attack the second term on the right hand side of .",
    "note that @xmath227 here @xmath228 and @xmath229 where we use the fact that @xmath230 is bounded uniformly with respect to @xmath34 when @xmath231 .",
    "we now once again apply theorem 5.5.1 from @xcite to @xmath232 with @xmath233 separated by @xmath234 , then @xmath235    if the separation parameter @xmath236 , then we combine , and to obtain @xmath237 following the same argument , we can establish the same result for @xmath238 , @xmath239 , and @xmath240 .",
    "therefore , is satisfied by replacing @xmath241 with @xmath106 : @xmath242    now we are in a perfect position to prove our main result for translation invariant finite element space of any order .",
    "let all the coefficients in the bilinear operator @xmath171 be constant ; let @xmath243 be separated by @xmath244 ; let the finite element space @xmath38 , which includes piecewise polynomials of degree @xmath17 , be translation invariant in the directions required by the hessian recovery operator @xmath106 on @xmath245 ; and let @xmath226 .",
    "assume that theorem 5.2.2 from @xcite is applicable .",
    "then @xmath246 for some @xmath247 and @xmath248 .",
    "[ thm : ultra ]    we decompose @xmath249 where @xmath250 is the standard lagrange interpolation of @xmath123 in the finite element space @xmath38 . by the standard approximation theory , we obtain @xmath251 for the second term , using theorem [ pp ] , we have @xmath252 the last term in is bounded by .",
    "the conclusion follows by combining , and .",
    "theorem [ thm : ultra ] is a ultraconvergence result under the condition @xmath253 the reader is referred to @xcite for negative norm estimates .",
    "in this section , two numerical examples are provided to illustrate our hessian recovery method .",
    "the first one is designed to demonstrate the polynomial preserving property of the proposed hessian recovery method .",
    "the second one is devoted to a comparison of our method and some existing hessian recovery methods in the literature on both uniform and unstructured meshes .    in order to evaluate the performance of hessian recovery methods , we split mesh nodes @xmath40 into @xmath254 and @xmath255 , where @xmath256 denotes the set of nodes near boundary and @xmath257 denotes rest interior nodes .",
    "now , we can define @xmath258 and @xmath259 . in the following examples we choose @xmath260 .",
    "let @xmath261 be the weighted average recovery operator .",
    "then we define @xmath262 and @xmath263 for any nodal point @xmath83 , fit a quadratic polynomial @xmath96 at @xmath83 as ppr .",
    "then @xmath264 is defined as @xmath265 @xmath266 , @xmath267 , and @xmath264 are the first three hessian recovery methods in @xcite . to compare them ,",
    "define @xmath268 where @xmath163 is the finite element solution .",
    "* example 1 . *",
    "consider the following function @xmath269 let @xmath164 be the standard lagrangian interpolation of @xmath102 in the finite element space . to validate theorem [ pp ]",
    ", we apply the hessian recovery operator @xmath106 to @xmath164 and consider the discrete maximum error of @xmath270 at all vertices in @xmath271 .",
    "first , linear element on uniform meshes are taken into account .",
    "figures [ ex1r ] -[ex1u ] display the numerical results .",
    "the numerical errors decrease at a rate of @xmath272 for four different pattern uniform meshes .",
    "it means the proposed hessian recovery method preserves polynomial of degree @xmath273 for linear element on uniform meshes .",
    "next , we consider unstructured meshes . we start from an initial mesh generated by easymesh@xcite as shown in figure [ delaunay ] , followed by four levels of refinement using bisection .",
    "figure [ ex1d ] shows that the recovered hessian @xmath274 converges to the exact hessian at rate @xmath275 .",
    "this coincides with the result in theorem [ poly ] that @xmath106 only preserves polynomials of degree 2 on general unstructured meshes                            then we turn to quadratic element .",
    "we test the discrete error of recovered hessian @xmath274 and the exact hessian @xmath123 using uniform meshes of regular pattern and the same delaunay meshes .",
    "similarly , we define @xmath276 as a discrete maximum norm at all vertices and edge centers in an interior region @xmath277 .",
    "the result of uniform mesh of regular pattern is reported in figure [ ex2r ] . as predicted by theorem [ pp ]",
    ", @xmath274 converges to @xmath123 at rate of @xmath278 which implies @xmath106 preserves polynomials of degree @xmath279 for quadratic element on uniform triangulation .",
    "for unstructured mesh , we observe that @xmath274 approximates @xmath123 at a rate of @xmath201 from figure [ ex2d ] .",
    "* example 2 .",
    "* we consider the following elliptic equation @xmath280 \\times [ 0 , 1],\\\\      u = 0 , &   \\text{on } \\partial \\omega .",
    "\\end{cases }      \\label{ex3}\\ ] ] the exact solution is @xmath281 .",
    "first , linear element is considered . in table",
    "[ ex3r ] , we report the numerical results for regular pattern meshes .",
    "all four methods ultraconverge at a rate of @xmath272 in the interior subdomain .",
    "the fact that @xmath282 and @xmath266 perform as good as @xmath106 is not a surprise since it is well known that the polynomial preserving recovery is the same as weighted average for uniform triangular mesh of the regular pattern .",
    "the results of the chevron pattern is shown in table [ ex3h ] .",
    "@xmath283 approximates @xmath123 at rate @xmath272 while @xmath284 , @xmath285 and @xmath286 approximate @xmath123 at rate @xmath275 .",
    "it is observed that our method out - performs other three hessian recovery methods on the chevron pattern uniform meshes . to the best of our knowledge ,",
    "the proposed ppr - ppr hessian recovery is the only method to achieve @xmath201 superconvergence for linear element under the chevron pattern triangular mesh .",
    ".example 2 : regular pattern [ cols=\"^,^,^,^,^,^,^,^,^\",options=\"header \" , ]     [ ex3d ]    then the criss - cross pattern mesh is considered and results are displayed in table [ ex3c ] . an @xmath272 convergence rate is observed for our recovery method , @xmath267 and @xmath266 while no convergence rate is observed for @xmath264 .",
    "the results for the union - jack pattern mesh is very similar to the criss - cross pattern mesh except that our recovery method superconverges at rate @xmath201 as shown in table [ ex3u ] .",
    "now , we turn to unstructured mesh generated by easymesh @xcite as in the previous examples .",
    "numerical data are listed in table [ ex3d ] .",
    "@xmath106 , @xmath267 and @xmath264 converge at a rate of @xmath201 while @xmath287 only converges at a rate of @xmath275 .",
    "the results above indicate clearly that our hessian recovery method converges at rate @xmath275 on general delaunay meshes , which is predicted by theorem [ linearsuperconvergent ] . on uniform meshes ,",
    "we can obtain @xmath272 ultraconvergence on an interior sub - domain as predicted by theorem [ thm : ultra ] .            in the end",
    ", we consider quadratic element .",
    "note that our hessian recovery method is well defined for arbitrary order elements .",
    "however , the extension of the other three methods to quadratic element is not straightforward or even impossible and hence only our method is implemented here .",
    "we report the numerical results in figure [ fig : ex3r ] for regular pattern uniform mesh . about @xmath288 order convergence",
    "is observed , which is a bit better than the theoretical result predicted by theorem [ thm : ultra ] .",
    "figure [ fig : ex3d ] shows the result for delaunay mesh generated by easymesh @xcite . about @xmath289 superconvergence",
    "is observed .",
    "in this work , we introduced a hessian recovery method for arbitrary order lagrange finite elements .",
    "theoretically , we proved that the ppr - ppr hessian recovery operator @xmath106 preserves polynomials of degree @xmath0 on general unstructured meshes and preserves polynomials of degree @xmath145 on translation invariant meshes .",
    "this polynomial preserving property , combined with the supercloseness property of the finite element method , enabled us to prove convergence and superconvergence results for our hessian recovery method on mildly structured meshes .",
    "moreover , we proved the ultraconvergence result for translation invariant finite element space of any order by using the argument of superconvergence by difference quotient from @xcite .      , _ on a discrete hessian recovery for @xmath290 finite elements _ , j. numer .",
    "math . , 10(2002 ) , 112 .",
    ", _ asymptotically exact a posteriori error estimators .",
    "i. grids with superconvergence _ , siam j. numer",
    "41(2003 ) , 22942312 . , _ the mathematical theory of finite element methods _ , third edition , texts in applied mathematics , 15 .",
    "springer , new york , 2008 . , _ superconvergence analysis of the linear finite element method and a gradient recovery post - processing on anisotropic mesh _ , math .",
    "comp.(2013 ) in press . , _ the finite element method for elliptic problems _ , north - holland , amsterdam , 1978 . , _ easymesh version 1.4 : a two - dimensional quality mesh generator _ , http://www-dinma.univ.trieste.it/nirftc/research/easymesh .    , _ superconvergent second order derivative recovery technique and its application in a nonlocal damage mechanics model _ , finite elements in analysis and design , 35(2014 ) , 118127 . , _ polynomial preserving recovery for quadratic elements on anisotropical meshes _ , numer .",
    "methods partial differential equations , 28(2012 ) , 966 - 983 . , _ superconvergence of quadratic finite elements on mildly structured grids .",
    "_ , math . comp . ,",
    "77(2008 ) , 12531268 .",
    ", _ how a nonconvergent recovered hessian works in mesh adaptation _ , arxiv:1211.2877v2[math.na ] .",
    ", finite element methods : superconvergence , post - processing , and a posteriori estimates , m. krizek , p. neittaanmaki , and r. stenberg , marcel dekker inc , newyork , 1998 , pp .",
    "195216 . , _ a finite element method for second order nonvariational elliptic problems _ , siam j. sci .",
    "comput . , 33(2011 ) , 786801 .",
    ", _ a finite element method for nonlinear elliptic problems _ , siam j. sci . comput . , 35(2013 ) , 20252045 . , _ a posteriori error estimates based on the polynomial preserving recovery _ , siam j. numer",
    "anal . , 42(2004 ) , 17801800 .",
    ", _ the polynomial - preserving recovery for higher order finite element methods in 2d and 3d _ , discrete contin .",
    "b 5(2005 ) , 769798 . , _ finite element methods for fully nonlinear second order pdes based on a discrete hessian with applications to the monge - amp@xmath2re equation _ ,",
    "j. comput . appl .",
    "math . , 263(2014 ) , 351369 .",
    ", _ interior estimates for ritz - galerkin methods _ , math . comp .",
    ", 28(1974 ) , 937958 . , _ function , gradient , and hessian recovery using quadratic edge - bump functions _ , siam j. numer",
    "45(2007 ) , 10641080 . , _ on a new edge - base gradient recovery technique _ , int",
    ". j. numer .",
    "engng . , 93(2013 ) , 5265 .",
    ", _ a numerical study of some hessian recovery techniques on isotropic and anisotropic meshes _ , siam j. sci .",
    "computl . , 33(2011 ) , 10581076 . , _ numerical comparsion of some hessian techniques _ , internat",
    ". j. numer .",
    "methods engrg . , 72(2007 ) , 9871007 .",
    ", _ superconvergence in galerkin finite element methods _ , lecture notes in mathematics , 1605 , springer - verlag , berkin , 1995 .",
    ", _ can we have superconvergent gradient recovery under adaptive meshes ? _ , siam j. numer .",
    "anal . , 45(2007 ) , 17011722 .",
    ", _ analysis of recovery type a posteriori error estimators for mildly structured grids _",
    ", math . comp .",
    ", 73(2004 ) , 11391152 . ,",
    "_ a new finite element gradient recovery method : superconvergence property _ , siam j. sci .",
    "comput . , 26(2005 ) , 11921213 . , _ the superconvergent patch recovery and a posteriori error estimates",
    ". i. the recovery technique _ ,",
    "methods engrg . , 33(1992 ) , 13311364 ."
  ],
  "abstract_text": [
    "<S> in this article , we propose and analyze an effective hessian recovery strategy for the lagrangian finite element method of arbitrary order . </S>",
    "<S> we prove that the proposed hessian recovery method preserves polynomials of degree @xmath0 on general unstructured meshes and superconverges at a rate of @xmath1 on mildly structured meshes . </S>",
    "<S> in addition , the method is proved to be ultraconvergent ( two order higher ) for translation invariant finite element space of any order . </S>",
    "<S> numerical examples are presented to support our theoretical results . </S>"
  ]
}
{
  "article_text": [
    "at present , two kinds of data query language are defined as standards in the virtual observatory .",
    "one is the parameter query , which is used for image data search and called as `` simple image access protocol '' or siap .",
    "search criteria are specified by a set of `` key '' and `` value '' pairs .",
    "another one is a structured query language , which is used for catalog data query and called as `` astronomical data query language '' or adql ( yasuda et al .",
    "adql can specify more complex search criteria than the siap does , also has an ability to join multiple tables , and can select values derived from the db columns .",
    "so it is worthwhile to adapt the adql to perform an image query .",
    "the high flexibility of the adql syntax , however , raise difficulties to develop an adql compliant data service .",
    "it is known that incompatibility among various dbms products is due to the complexity of the sql specification .",
    "the success of the virtual observatory project depends on uniformity of interfaces of all the astronomical data services , so we need to avoid the complexity and make it simple and easy to implement .",
    "in order to realize the interoperability among the distributed data archives , we need to define a standard query language . as the standard query language must be supported by all the data services , it s specification should be simple and clear for easy implementation . on the other hand , some data service require more sophisticated query syntax to allow users to specify more efficient search criteria .",
    "thus we defined basic syntax which must be supported by all the data services and allowed several enhancements on the basic syntax .",
    "the following restrictions are applied to the `` select '' statement of sql99 specification .",
    "1 .   only a column name or `` * '' is specified in the selection list , so an algebraic expression and a function are not allowed .",
    "so the role of the `` select '' clause is just to specify the columns you want to get .",
    "the calculation of the derivative from those columns should be done on a portal server or by users themselves .",
    "only one table is specified in the `` from '' clause , so any type of table join syntax is not allowed .",
    "the join of the tables should be done on a portal server or by users themselves .",
    "3 .   allowed comparison operators and predicates are ` = ` , ` < ` , ` > ` , ` > = ` , `",
    "< = ` , ` < > ` , ` within ` , ` contains ` , ` overlaps ` , ` like ` and ` between ` , and any other operators are not allowed .",
    "the operators ` within ` , ` contains ` and ` overlaps ` are not specified in sql99 , but are introduced to specify a region on the sky as such search criterion is a fundamental one for the astronomical data service .",
    "these three operators compare two values of geometry data type , which is described in the next subsection .",
    "functions ` point ( ) ` , ` circle ( ) ` and ` box ( ) ` are introduced to express a region on the sky , and ` distance ( ) ` is also introduced to describe the proximity of the two coordinates .",
    "5 .   allowed logical operators are ` and ` and ` not ` . ` or ` is not allowed as the mixture of ` and ` and ` or ` makes the search condition too complex .",
    "table and column may have an alias name .",
    "the geometry data type is introduced to represent a point or a region in the sky .",
    "a point is always expressed by two coordinate values , and in most of the cases a single coordinate value is meaningless and only the pair have a physical meaning .",
    "so it is natural to have a column which has a pair of values to express the coordinate of celestial object , then it becomes simple to describe the search criterion .",
    "for an example , if the coordinate values are prepared in two separate columns , the search condition is expressed as follows : ` point(t1.ra , t1.dec ) within box((t2.ra , t2.dec ) , 1.0 , 1.0 ) ` . on the other hand , if the coordinate values are prepared in one single column , the same statement can be expressed shortly as follows : ` t1.point within t2.region ` .",
    "we defined `` point '' , `` circle '' and `` box '' data types .",
    "expressions of these data types in sql are summarized in table  [ tbl : geo_data_type ] .",
    "cl point & ` point(23 .",
    ", + 10 . , ' fk5 ' ) ` , ` point(23 . , + 10 . )",
    "`` , ( 23 . , + 10 . ) ` + box & ` box((23.0 , + 10.0 ) , 1 , 1 ) ` , ` ( ( 23.0 , + 10.0 ) , 1 , 1 ) ` + circle & ` circle((23.0 , + 10.0 ) , 1 ) ` , ` ( ( 23.0 , + 10.0 ) , 1 ) ` + [ tbl : geo_data_type ]      the next sql shows an example of catalog data query .    ....",
    "select g.ra , g.dec , g.mag_r    from    galaxy as g    where   point(g.ra , g.dec ) within circle((24.3 , + 5.0 ) , 1.0 )            and g.mag_r < 24 ....    this query describes `` from a table named galaxy select right ascension , declination , and r - band magnitude of celestial objects located in the circle whose center coordinate is ( ra , dec ) = ( 24.3 deg , + 5.0 deg ) and radius is 1.0 deg '' . in the `` galaxy '' table ,",
    "coordinates of the objects are prepared in the two separate columns , `` ra '' and `` dec '' , so point ( ) function is required to describe the search region . in the `` galaxy2 '' table of the next sql sample , the coordinates are prepared in a single column `` point '' .    ....",
    "select g.point , g.mag_r    from    galaxy2 as g    where   g.point within circle((24.3 , + 5.0 ) , 1.0 ) and g.mag_r < 24 ....    the next sql shows an example of an image data query .    ....    select img.filter , img.imageurl    from    imagedata as img    where   img.region = box((24.3 , + 5.0 ) , 0.1 , 0.1 ) ....    this equivalents to the next url - based siap .    ....    http://jvo.nao.ac.jp/image?pos=24.3,5.0&size=0.1&format=votable ....    in the above sql , the column ` region ` is used as a parameter to specify the region of interest , and the access url of the cut - out image is returned as a data of ` imageurl ` column .",
    "those columns are actually not present in the relational table on the dbms , but user can specify as if it virtually exists .",
    "so these columns are called as virtual columns and its table is called as a virtual table or a view in the rdb terminology .",
    "the following enhancements may be applied as optional features .    1",
    ".   multiple tables enhancement : multiple tables can be queried with a single sql .",
    "external tables provided in a form of votable must be treated in the same manner as the original tables of the data service .",
    "the external table is specified as ` ext::<filenumber>.<resourcename>.<tablename > ` .",
    "join predicate and sub - query are not mandatory .",
    "unit support enhancement : any numeric value may be followed by a unit .",
    "unit conversion must be carried out by the data service .",
    "3 .   algebraic expression enhancement : an algebraic expression can be specified in the selection list and search criteria in the `` where '' clause .",
    "logical operator ` or ` enhancement : support for mixture of ` and ` , ` not ` and ` or ` in the `` where '' clause .",
    "object data type enhancement : a column may have a structured data and access methods . 6 .",
    "use of identifier for specifying a table name ( portal ) : a table name is expressed by an identifier of dot notation to specify the table uniquely in the vo . a dot character in the identifier must be escaped by a back slash . for an example , ` naoj : sxds.v0\\.1.galaxy ` ) where ` naoj ` is an authority name , ` /sxds",
    "/ v0.1 ` is a catalog resource path name and ` galaxy ` is a table resource name .",
    "this is a feature dedicated to a portal data service .",
    "ucd ( portal ) : a ucd ( derriere et al .",
    "2004 ) can be used in place of a column name .",
    "this is a feature dedicated to a portal data service .",
    "the portal service searches data resources which have ucd specified in the sql and translate to the column name using the column meta data collected from the data services .",
    "omission of `` from '' part ( portal ) : this is a feature dedicated to a portal data service .",
    "the portal searches the data resources from the registry according to the query condition . in this case",
    ", ucd must be used for describing columns and a query condition .",
    "we have designed an architecture to implement a data service compatible with the proposed query language ( figure  [ fig : skynode_arc ] ) .",
    "the `` gateway '' in the figure provides interfaces to access the skynode ( yasuda et al .",
    "2004 ) services .",
    "the received query is transfered to the jvo skynode dbms , and the result is returned in a form of a ` resultset ` java object .",
    "the access interface is provided by jdbc which is a standard interface to access the dbms in the java environment .",
    "celestial object catalog is stored in a relational data base ( rdb ) system , such as postgresql , mysql , oracl , and so on , and fits files are managed in the unix files system and its meta data is stored in the rdb .",
    "htm index ( kunszt et al . 2000 ) is used to perform a fast data search .",
    "query condition related to the search region on the sky is converted to a condition on the htm index ranges at the `` data service engine '' , and then the modified sql is submitted to the dbms . in the case of image data query , it is necessary to materialize the virtual image table as follows : first , parameters specifying the image cut out regions are stored in a table t2 ( figure  [ fig : virtual_image_table ] ) and the corresponding htm index range table t3 is also created . then fits meta data table t0 is joined with table t2 with intervention of the htm index table t1 and t3 , then the virtual image table is materialized as shown in the bottom of the figure .",
    "this work was supported by the jsps core - to - core program and grant - in - aid information science ( 15017289 and 16016292 ) carried out by the ministry of education , culture , sports , science and technology of japan ."
  ],
  "abstract_text": [
    "<S> currently two query languages are defined as standards for the virtual observatory ( vo ) . </S>",
    "<S> astronomical data query language ( adql ) is used for catalog data query and simple image access protocol ( siap ) is for image data query . as a result , </S>",
    "<S> when we query each data service , we need to know in advance which language is supported and then construct a query language accordingly . </S>",
    "<S> the construct of siap is simple , but they have a limited capability . </S>",
    "<S> for example , there is no way to specify multiple regions in one query , and it is difficult to specify complex query conditions . in this paper , we propose a unified query language for any kind of astronomical database on the basis of sql99 . </S>",
    "<S> sql is a query language optimized for a table data , so to apply the sql to the image and spectrum data set , the data structure need to be mapped to a table like structure . </S>",
    "<S> we present specification of this query language and an example of the architecture for the database system . </S>"
  ]
}
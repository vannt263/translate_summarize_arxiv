{
  "article_text": [
    "in the field of tournament timetabling , the traveling tournament problem ( ttp ) is a well - known benchmark problem established by easton , nemhauser , and trick  @xcite .",
    "the present paper considers the unconstrained traveling tournament problem ( uttp ) , which is a variant of the ttp . in the following ,",
    "some terminology and the ttp are introduced .",
    "the uttp is then defined at the end of this section .",
    "given a set  @xmath0 of @xmath1 teams , where @xmath2 and is even , a game is specified by an ordered pair of teams .",
    "each team in  @xmath0 has its home venue .",
    "a double round - robin tournament is a set of games in which every team plays every other team once at its home venue and once as an away game ( i.e. , a game held at the home venue of the opponent ) .",
    "consequently , @xmath3 slots are necessary to complete a double round - robin tournament .",
    "each team stays at its home venue before a tournament and then travels to play its games at the chosen venues .",
    "after a tournament , each team returns to its home venue if the last game is played as an away game .",
    "when a team plays two consecutive away games , the team goes directly from the venue of the first opponent to the venue of another opponent without returning to its home venue .    for any pair of teams @xmath4",
    ", @xmath5 denotes the distance between the home venues of @xmath6 and  @xmath7 . throughout the present paper ,",
    "we assume that triangle inequality ( @xmath8 ) , symmetry ( @xmath9 ) , and @xmath10 hold for any teams  @xmath11 .",
    "denote the distance matrix @xmath12 by @xmath13 .",
    "given an integer parameter @xmath14 , the traveling tournament problem  @xcite is defined as follows .    * traveling tournament problem ( ttp@xmath15 ) * + * input : * a set of teams @xmath0 and a distance matrix  @xmath16 . +",
    "* output : * a double round - robin schedule of @xmath1  teams such that    c1 .",
    "no team plays more than @xmath17 consecutive away games ,    c2 .",
    "no team plays more than @xmath17 consecutive home games ,    c3 .",
    "game @xmath6 at  @xmath7 immediately followed by game @xmath7 at  @xmath6 is prohibited ,    c4 .",
    "the total distance traveled by the teams is minimized .",
    "constraints c1 and  c2 are referred to as the _ atmost _ constraints , and constraint  c3 is referred to as the _ no - repeater _ constraint .",
    "various studies on the ttp have been conducted in recent years ( see @xcite for detail ) , and most of these studies considered ttp(3 )  @xcite , which was recently proved to be np - hard by thielen and westphal  @xcite .",
    "almost all of the best upper bounds of ttp instances are obtained using metaheuristic algorithms . on the other hand ,",
    "little research on approximation algorithms has been conducted for the ttp .",
    "miyashiro , matsui , and imahori  @xcite proposed a @xmath18-approximation algorithm for ttp(3 ) .",
    "yamaguchi , imahori , miyashiro , and matsui  @xcite proposed an approximation algorithm for ttp@xmath15 , where @xmath19 .",
    "westphal and noparlik  @xcite proposed a 5.875-approximation algorithm for ttp@xmath15 , where @xmath20 . for ttp(3 ) , the approximation ratio of  @xcite is the best among them .",
    "in addition , thielen and westphal  @xcite proposed a @xmath21-approximation algorithm for ttp(2 ) .",
    "the ttp is a simplification of an actual sports scheduling problem .",
    "some further simplified variants of the ttp have been studied  @xcite .",
    "the circular distance ttp and the constant distance ttp are the problems which have specific distance matrices . for the constant distance ttp , fujiwara , imahori , matsui , and miyashiro",
    "@xcite proposed approximation algorithms .",
    "the unconstrained traveling tournament problem ( uttp ) is another variant of the ttp , in which constraints c1 through  c3 are eliminated . in other words ,",
    "the uttp is equivalent to ttp(@xmath22 ) without the no - repeater constraint . on some actual sports scheduling problems ,",
    "the atmost constraints ( @xmath23 in particular ) and the no - repeater constraint are considered",
    ". however , these constraints are not necessarily imposed , and the uttp is a suitable simplified model for some practical scheduling problems .",
    "bhattacharyya  @xcite recently showed np - hardness of the uttp .",
    "although the uttp is simpler than the ttp , no approximation algorithm has yet been proposed for the uttp .",
    "the method proposed in  @xcite can not be applied to the uttp because the condition @xmath24 is necessary .",
    "the method in  @xcite , proposed for ttp(3 ) , can be applied to the uttp with a few modifications .",
    "however , this leads to a @xmath25-approximation algorithm for the uttp , which is not a constant approximation ratio with regard to  @xmath1 .    in the present paper ,",
    "we propose a 2.75-approximation algorithm for the uttp .",
    "in addition , the solution obtained by the algorithm meets both the no - repeater and mirrored constraints , which are sometimes required in practice .",
    "this property indicates that our algorithm also works for ttp(@xmath22 ) , which eliminates the atmost constraints but considers the no - repeater constraint .",
    "in this section , we propose an approximation algorithm for the uttp .",
    "a key concept of the algorithm is the use of the circle method and a shortest hamilton cycle .",
    "the classical schedule obtained by the circle method satisfies the property that , for all teams but one , the orders of opponents are very similar to a mutual cyclic order . roughly speaking",
    ", the proposed algorithm constructs a short hamilton cycle passing all venues , and finds a permutation of teams such that the above cyclic order corresponds to the hamilton cycle .    let @xmath26 be a complete undirected graph with the vertex set  @xmath27 and edge set @xmath28 , where @xmath29 .",
    "we assume that there exists a bijection between the vertex set @xmath27 and the set of teams @xmath0 .",
    "we put the length of edge @xmath30 , denoted by @xmath31 , to the distance between the home venues of the corresponding teams @xmath32 .",
    "first , we assign aliases @xmath33 to teams in @xmath0 as follows",
    ".    1 .   for each @xmath34 , compute @xmath35 .",
    "2 .   let @xmath36 be a vertex that attains @xmath37 , and designate the team corresponding to @xmath36 as team @xmath22 .",
    "3 .   using christofides 1.5-approximation algorithm  @xcite for the traveling salesman problem with triangle inequality and symmetry , construct a hamilton cycle on the complete graph induced by @xmath38 .",
    "for the obtained cycle @xmath39 , denote the corresponding teams by @xmath40 .    in the rest of this paper , we define that the set of teams @xmath41 and the vertex set @xmath42 .",
    "we identify the vertex @xmath43 with  @xmath44 ( not @xmath36 ) and the vertex  @xmath45 with @xmath46 ( not @xmath36 ) .",
    "next , we construct a single round - robin schedule . in the following , a `` schedule without ha - assignment '' refers to a `` round - robin schedule without the concepts of home game , away game , and venue . ''",
    "denote the set of @xmath22 slots by @xmath47 .",
    "a single round - robin schedule without ha - assignment is a matrix  @xmath48 of which @xmath49 element , say @xmath50 , denotes the opponent of team  @xmath51 in slot  @xmath52 .",
    "let @xmath53 be a matrix defined by @xmath54    @xcite [ lem1 ] the matrix @xmath53 is a single round - robin schedule without ha - assignment .",
    "in addition , @xmath53 is essentially equivalent to the classical schedule obtained by the circle method",
    ".    then , by the mirroring procedure , we form @xmath53 into a double round - robin schedule without ha - assignment .",
    "more precisely , construct a matrix  @xmath55 whose rows are index by teams and columns are index by a sequence of slots @xmath56 .",
    "so as to complete a double round - robin schedule , `` home '' and `` away '' are assigned to games of @xmath55 as follows :    * for team @xmath57 , let the games in slots @xmath58 be home games , and let the other games be away games .",
    "* for team @xmath59 , let the games in slots @xmath60 be away games , and let the other games be home games .",
    "* for team @xmath22 , let the games in slots @xmath61 be away games , and let the other games be home games .",
    "the obtained double round - robin schedule is denoted by @xmath62 .",
    "figure  [ kdrr ] shows the schedule @xmath62 of 10 teams .    [",
    "cols=\">,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^,^ \" , ]     each number corresponds to the opponent and away ( home ) game is denoted by a ( h ) .",
    "[ newlem ] the double round - robin schedule @xmath62 is feasible .    *",
    "* @xmath55 is a consistent double round - robin schedule without ha - assignment , which satisfies the mirrored constraint .",
    "we check the feasibility of ha - assignment to games .",
    "teams @xmath6 and @xmath7 ( @xmath63 ) have a game at slot  @xmath64 . by the rule to assign home and away to games ,",
    "team  @xmath6 plays a home game and team  @xmath7 plays an away game at slot  @xmath64 . teams @xmath6 and @xmath7 ( @xmath65 ) have a game at slot  @xmath66 , and the rule assigns consistent home / away to the teams .",
    "another game between teams  @xmath6 and @xmath7 is held at the opposite venue .    in addition , for each @xmath67 , we construct a double round - robin schedule by rotating slots of @xmath62 through @xmath68 cyclically .",
    "it means that games of @xmath69 at slot  @xmath52 are equal to games of @xmath62 at slot  @xmath70 . obviously ,",
    "all of the schedules @xmath69 meet both the no - repeater and mirrored constraints .",
    "finally , output a best solution among  @xmath71 @xmath72 .    here",
    ", we estimate the time complexity of the algorithm .",
    "christofides algorithm requires @xmath73 time to construct a hamilton cycle on the complete graph induced by @xmath38 . for the constructed hamilton cycle",
    ", there are @xmath3 possibilities to assign teams . for each assignment of teams ,",
    "we consider @xmath74 possibilities of @xmath67 .",
    "each double round - robin schedule can be evaluated in @xmath75 time on average .",
    "thus , the time complexity of the algorithm is bounded by @xmath73 .    in the next section ,",
    "we prove that the proposed algorithm guarantees an approximation ratio  2.75 .",
    "in this section , we describe the proof of the approximation ratio of the proposed algorithm . designate the length of a shortest hamilton cycle on  @xmath76 as @xmath77 .",
    "[ lem2 ] the following propositions hold for @xmath76 .",
    "\\(1 ) the length of any edge is bounded by @xmath78 .",
    "\\(2 ) the length of any hamilton cycle on @xmath76 is bounded by @xmath79 .",
    "\\(3 ) @xmath80 .",
    "\\(4 ) @xmath81 .    * proof . *",
    "( 1 ) for the edges @xmath82 and  @xmath83 , the sum of their lengths is at most the length of a shortest hamilton cycle .",
    "thus , the length of the edge  @xmath82 is bounded by @xmath78 with symmetry .",
    "\\(2 ) this immediately follows from property  ( 1 ) .",
    "\\(3 ) given a shortest hamilton cycle @xmath84 on @xmath76 , let @xmath85 then , we have : @xmath86 ( 4 ) since @xmath36 is a vertex that attains @xmath37 , the inequality obtained in ( 3 ) directly implies the desired one .",
    "now we discuss the average of the traveling distances of @xmath87 .",
    "the traveling distance of a schedule is subject to the following constraint , say the _ athome _ constraint : each team stays at its home venue before a tournament and returns to its home venue after a tournament . for simplicity of the analysis of the approximation ratio , we temporary replace the athome constraint with the following assumption .",
    "* assumption a. * if a team plays away games at both the first and last slots , then the team moves from the venue of the last opponent to that of the first opponent , instead of the moves before the first slot and after the last slot .",
    "we discuss a traveling distance of each team under assumption  a. application of assumption  a guarantees that a route of each team in @xmath87 is a hamilton cycle on  @xmath76 ( see figure  [ map ] ) , and the traveling distance of  @xmath71 is invariant with respect to @xmath88 . thus , we only need to consider @xmath62 .",
    "this assumption makes the analysis of the approximation ratio much easier .",
    "let the length of the cycle @xmath39 obtained by christofides method in the proposed algorithm be  @xmath89 .",
    "note that @xmath90 , where @xmath77 denotes the length of a shortest hamilton cycle on  @xmath76 . analyzing",
    "the structure of @xmath62 reveals the following lemma .",
    "[ lem3 ] under assumption a , the traveling distance of team @xmath51 in  @xmath62 is bounded by @xmath91    * proof .",
    "* when @xmath92 , team @xmath51 moves along a hamilton cycle @xmath93 .",
    "consequently , the length of the tour is @xmath94 .    when @xmath95 , a tour of team @xmath51 is a hamilton cycle @xmath96 , and thus the length is @xmath97 .",
    "since a tour of team @xmath22 is hamiltonian , lemma  [ lem2](2 ) implies the desired result .",
    "the above lemma implies an upper bound of the traveling distance of  @xmath62 .",
    "[ a - distance ] under assumption  a , the traveling distance of  @xmath62 is bounded by @xmath98",
    ".    * proof . * consider the sum total of upper bounds obtained in lemma  [ lem3 ] @xmath99 where @xmath100    it is easy to see that @xmath101 where the last inequality follows from lemma  [ lem2](1 ) . from the above , the lemma holds .    here",
    "we drop assumption  a and restore the athome constraint , and consider the increase of the traveling distance in the following lemma .    for each team  @xmath51 ,",
    "let @xmath102 be the traveling distance of  @xmath51 in  @xmath62 under assumption  a. then , with the athome constraint the average of the traveling distances of team  @xmath51 among @xmath87 is bounded by @xmath103 , where @xmath104 is the home venue of @xmath51 .",
    "* for a choice @xmath88 , every team @xmath105 different from @xmath51 plays away game with  @xmath51 at first slot just once .",
    "thus , the average length of the moves of team  @xmath51 before the first slot is bounded by @xmath106 . similarly , the average length of the moves of team  @xmath51 after the last slot is bounded by @xmath106 .",
    "thus , the average of the traveling distances of team  @xmath51 is bounded by @xmath107 .    summarizing the above lemmas , we have the following theorem .",
    "[ thb ] the average of the total traveling distances of schedules  @xmath71 @xmath108 is bounded by @xmath109",
    "lastly we show the approximation ratio of the proposed algorithm .",
    "[ thm1 ] the proposed algorithm is a @xmath110-approximation algorithm for the uttp . + * proof .",
    "* let @xmath111 be the average of the total traveling distances of schedules @xmath71 @xmath112 . from theorem  [ thb ] and lemma  [ lem2](3)(4 )",
    ", we have : @xmath113 the proposed algorithm output a best of @xmath71 @xmath112 , and thus the traveling distance of the output is at most  @xmath111 . since @xmath114 is a lower bound of the distance of any double round - robin schedule , this concludes the proof .",
    "let us consider a case that we have a shortest hamilton cycle @xmath115 on @xmath76 .",
    "in this situation , the following corollary holds .",
    "[ thm3 ] if a shortest hamilton cycle @xmath115 on @xmath76 is given , there exists a @xmath116-approximation algorithm for the uttp . + * proof .",
    "* we replace a cycle obtained by christofides method in the proposed algorithm with a cycle obtained from @xmath115 by skipping vertex @xmath36 .",
    "theorem  [ thb ] implies that the average of total traveling distances of schedules , say @xmath117 , obtained by the proposed algorithm is bounded by @xmath118 thus , the approximation ratio is bounded by 2.25 in this case .",
    "in this section , we describe the results of computational experiments using the proposed approximation algorithm .    for the experiments",
    ", we took the distance matrices of nl and galaxy instances from the website  @xcite , because they are the most popular instances and one having the largest distance matrix ( up to 40  teams ) , respectively .",
    "we ran the proposed algorithm for the uttp version of these instances ; to find a short hamilton cycle , we use concorde tsp solver  @xcite .",
    "it took less than one second to obtain a shortest hamilton cycle even for the largest case ( @xmath119 ) .",
    "to evaluate the quality of obtained solutions , we also tried to find optimal solutions of uttp instances with integer programming .",
    "computations using integer programming were performed on the following pc : intel xeon 3.33ghz@xmath120 , 24 gb ram , windows  7 64bit , and gurobi optimizer 4.5.1  @xcite with 16 threads as an integer programming solver . for both nl and galaxy instances : for @xmath121 optimal solutions were obtained ; for @xmath122 , after 500,000 seconds of computations , branch - and - bound procedures were not terminated ; for @xmath123 and larger instances , using integer programming it was difficult to find solutions better than those obtained by the proposed algorithm .",
    "tables  [ nl ] and  [ galaxy ] show the results of experiments for nl and galaxy instances , respectively . the first columns of tables denote the number of teams ,  @xmath1 .",
    "the second ones are the total traveling distance obtained by the proposed algorithm .",
    "the third ones are the value of @xmath1 times the distance of a shortest hamilton cycle , as a simple lower bound .",
    "the fourth ones are the percentages of the gap between the second and third columns .",
    "crrrr @xmath1 & approx . & @xmath124 & gap ( % ) @xmath125 & best ub + 4 & 8276 & 8044 & 2.9 & 8276@xmath126 + 6 & 20547 & 17826 & 15.3 & 19900@xmath126 + 8 & 33190 & 27840 & 19.2 & 30700@xmath126 + 10 & 47930 & 38340 & 25.0 & 45605@xmath127 + 12 & 81712 & 67200 & 21.6 & + 14 & 128358 & 103978 & 23.4 & + 16 & 156828 & 119088 & 31.7 & +   +   +    crrrr @xmath1 & approx . &",
    "@xmath124 & gap ( % ) @xmath125 & best ub + 4 & 416 & 412 & 1.0 & 416@xmath126 + 6 & 1197 & 1068 & 12.1 & 1178@xmath126 + 8 & 2076 & 1672 & 24.2 & 1890@xmath126 + 10 & 3676 & 3020 & 21.7 & 3570@xmath127 + 12 & 5514 & 4524 & 21.9 & + 14 & 7611 & 6216 & 22.4 & + 16 & 9295 & 7408 & 25.5 & + 18 & 12320 & 10026 & 22.9 & + 20 & 14739 & 11880 & 24.1 & + 22 & 19525 & 16522 & 18.2 & + 24 & 25026 & 21216 & 18.0 & + 26 & 32250 & 27846 & 15.8 & + 28 & 41843 & 36708 & 14.0 & + 30 & 52073 & 46410 & 12.2 & + 32 & 62093 & 55104 & 12.7 & + 34 & 77392 & 69326 & 11.6 & + 36 & 88721 & 78624 & 12.8 & + 38 & 103988 & 92568 & 12.3 & + 40 & 120895 & 107800 & 12.1 & +   +   +    like most theoretical approximation algorithms , the obtained gaps are much better than the theoretical approximation ratio 2.75 ( 175% gap ) . for the nl instances and the galaxy instances of up to 20  teams ,",
    "the gap is around  25% .",
    "for the galaxy instances of more than 20  teams , the gap is less than 20% .",
    "note that the gaps shown in the tables are from the ratio of the obtained distance to a lower bound , but not to optimal distance .",
    "therefore the gaps between the obtained distance and the optimal value are still better than the gaps shown in the tables .",
    "this paper proposed an approximation algorithm for the unconstrained traveling tournament problem , which is a variant of the traveling tournament problem .",
    "the approximation ratio of the proposed algorithm is 2.75 , and the algorithm yields a solution satisfying the no - repeater and mirrored constraints .",
    "if a shortest hamilton cycle on the home venues of the teams is available , the approximation ratio is improved to 2.25 .",
    "computational experiments showed that the algorithm generates solutions of good quality ; the gap between the obtained solution and a simple lower bound is around  25% for small instances ( up to 20  teams ) and is less than 20% for larger instances .",
    "easton ,  k. , nemhauser ,  g. , trick ,  m. , the traveling tournament problem : description and benchmarks , _ lecture notes in computer science _ , * 2239 * , 580584 ( 2001 ) fujiwara ,  n. , imahori ,  s. , matsui ,  t. , miyashiro ,  r. , constructive algorithms for the constant distance traveling tournament problem , _ lecture notes in computer science _ , * 3867 * , 135146 ( 2007 )      imahori ,  s. , matsui ,  t. , miyashiro ,  r. , an approximation algorithm for the unconstrained traveling tournament problem , in : proceedings of the 8th international conference on the practice and theory of automated timetabling ( patat ) , 508512 ( 2010 )      miyashiro ,  r. , matsui ,  t. , imahori ,  s. , an approximation algorithm for the traveling tournament problem , _ annals of operations research _ , to appear rasmussen ,  r.v . , trick ,  m.a .",
    ", round robin scheduling  a survey , _",
    "european journal of operational research _ , * 188 * , 617636 ( 2008 )      thielen ,  c. , westphal ,  s. , complexity of the traveling tournament problem , _ theoretical computer science _ , * 412 * , 345351 ( 2011 ) trick ,  m.a . , sports scheduling , hybrid optimization ( springer optimization and its applications , 2011 , volume 45 ) , 489508 ( 2011 )      westphal ,  s. , noparlik ,  k. , a 5.875-approximation for the traveling tournament problem , in : proceedings of the 8th international conference on the practice and theory of automated timetabling ( patat ) , 417426 ( 2010 )"
  ],
  "abstract_text": [
    "<S> a 2.75-approximation algorithm is proposed for the unconstrained traveling tournament problem , which is a variant of the traveling tournament problem . for the unconstrained traveling tournament problem , this is the first proposal of an approximation algorithm with a constant approximation ratio . </S>",
    "<S> in addition , the proposed algorithm yields a solution that meets both the no - repeater and mirrored constraints . </S>",
    "<S> computational experiments show that the algorithm generates solutions of good quality .    </S>",
    "<S> example.eps gsave newpath 20 20 moveto 20 220 lineto 220 220 lineto 220 20 lineto closepath 2 setlinewidth gsave .4 setgray fill grestore stroke grestore </S>"
  ]
}
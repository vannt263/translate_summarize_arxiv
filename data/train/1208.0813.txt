{
  "article_text": [
    "communication is a crucial ingredient in every kind of collaborative work . but what is the least possible amount of communication required for a team of players to achieve certain goals ? motivated by this question , we consider in this paper the following game .    the _ musical chairs _",
    "game @xmath0 involves @xmath2 _ chairs _ numbered @xmath6 and a team of @xmath1 _ players _ @xmath7 , who are playing against an adversarial _",
    "scheduler_. the scheduler s goal is to make the game run indefinitely in which case he wins .",
    "the termination condition is that each player settles in a different chair . upon termination the team of players",
    "is declared the winner .",
    "we say that player @xmath8 is _ in conflict _ if some other player @xmath9 is presently occupying the same chair as @xmath8 .",
    "namely , termination and a win of the team is reached if there are no conflicts .",
    "the scheduler gets to decide , for each player @xmath10 the chair that @xmath10 occupies at the start of the game .",
    "as mentioned above we severely restrict the communication between the players during the game .",
    "all such communication is mediated by the scheduler as follows : at every time step , and as long as there are conflicts , the scheduler selects an arbitrary nonempty set of players which are currently in conflict and notifies them that they need to move .",
    "a player thus notified to be in conflict changes its chair according to its deterministic program , which he chooses before the game . during the game ,",
    "each player has no information about the chairs of other players beyond the occasional one bit that tells him that he must move , and we insist that the choice of a player s next chair be deterministic . consequently , a player s action depends only on its current chair , and the sequence of chairs that he had traversed so far .",
    "therefore the sequence of chairs that player @xmath10 traverses is simply an infinite word @xmath11 over the alphabet @xmath6 .",
    "recall that the adversary can start each player on an any of the chairs .",
    "consequently we assume that each @xmath11 is _ full _",
    ", i.e. , it contains all the letters in @xmath12 $ ] .",
    "so upon receiving a conflict notification from the scheduler , player @xmath10 occupying chair @xmath13 $ ] moves to chair @xmath14 $ ] .",
    "the scheduler s freedom in choosing the players initial chairs means that for every @xmath15 he selects an index @xmath16 and the game starts with each @xmath10 occupying chair @xmath17 $ ] .",
    "a winning strategy for the players is a choice of full words @xmath11 with the following property : for every choice of initial positions @xmath16 and for every strategy of the scheduler the game terminates in a finite number of rounds , i.e. , the players can not be beaten by the scheduler .    in this paper",
    "we obtain several results about the musical chairs game .",
    "our first theorem determines the minimal @xmath2 for which the team of players wins the @xmath0 game .",
    "[ thm : mainfull ] the team of players has a winning strategy in the @xmath0 game if and only if @xmath5 .    in the winning strategy that we produce , each word @xmath11 is _ periodic _ , or , what is the same , a finite word that @xmath10 traverses cyclically .",
    "we also show that for every @xmath18 there exist @xmath19 full cyclic words on the alphabet @xmath12=[2n-1]$ ] such that every set of @xmath1 out of these @xmath19 words constitutes a winning strategy for the @xmath20 game .    to prove the lower bound in theorem [ thm : mainfull ] we use sperner s lemma ( see , e.g. , @xcite ) a fundamental tool from combinatorial topology .",
    "the use of this tool in proving lower bounds for distributed algorithms was pioneered in @xcite . if one is willing to assume a great deal of knowledge in the field of distributed computing , it is possible to deduce our lower bound from known results in this area .",
    "instead , to make the paper self contained , we chose to include here a direct proof which we think is more illuminating and somewhat simpler than the one which would result from reductions to the existing literature .",
    "although the words in theorem  [ thm : mainfull ] use the least number of chairs , namely @xmath21 , their _ lengths _ are doubly exponential in @xmath1 .",
    "this leads to several interesting questions .",
    "are there winning strategies for the mc game with much shorter words , say of length @xmath22 ?",
    "perhaps even of length @xmath2 ?",
    "can we provide significantly better upper bounds on the number of rounds till termination ? even if the schedular is bound to lose the game",
    ", how long can he make the game last ?",
    "our next two results give some answers to these questions . here",
    "we consider an @xmath0 _ winning systems _ with @xmath19 words .",
    "this is a collection of @xmath23 full words on @xmath12 $ ] , every @xmath1 of which constitute a winning strategy for the players in the @xmath24 game .",
    "[ thm:7n ] for every @xmath25 , almost every choice of @xmath19 words of length @xmath26 in an alphabet of @xmath27 letters is an @xmath0 winning system with @xmath19 full words .",
    "moreover , every game on these words terminates in @xmath28 steps . here",
    "@xmath29 is an absolute constant .",
    "since we are dealing with full words which we seek to make short , we are ultimately led to consider the problem under the assumption that each ( finite , cyclically traversed ) word @xmath11 is a _ permutation _ on @xmath12 $ ] .",
    "we note that the context of distrubted computing offers no particular reason for this restriction and that we are motivated to study this question due to its aesthetic appeal .",
    "we can design permutation - based winning strategies for @xmath20 game for very small @xmath1 ( provably for @xmath30 , a computer assisted construction and proof for @xmath31 ) .",
    "we suspect that no such constructions are possible for large values of @xmath1 , but we are unable at present to show this .",
    "we do know , though that    [ thm : permutations ] for every integer @xmath32 there is an @xmath0 winning system with @xmath33 _ permutations _ on @xmath34 symbols , where @xmath29 depends only on @xmath35 .",
    "in fact , this holds for almost every choice of @xmath19 permutations on @xmath12 $ ] .",
    "we should stress that our proofs of theorems  [ thm:7n ] and  [ thm : permutations ] are purely existential .",
    "the explicit construction of such systems of words remains largely open , though we have the following result in this direction .",
    "[ thm : explicitperm ] for every integer @xmath32 there is an @xmath0 winning system with @xmath33 _ permutations _ on @xmath36 symbols .",
    "we conclude this introduction with a discussion of several additional aspects of the subject .",
    "our work was originally motivated by some questions in distributed computing . in every distributed algorithm",
    "each processor must occasionally observe the activities of other processors .",
    "this can be done by reading the messages that other processors send , by inspecting some publicly accessible memory cells into which they write , or by sensing an effect on the environment due to the actions of other processors .",
    "hence it is very natural to ask : what is the least possible amount of communication required to achieve certain goals ? to answer it , we consider two severe limitations on the processors behavior and ask how this affects the system s computational power .",
    "first , a processor can only post a proposal for its own output , and second , each processor is `` blindfolded '' and is only occasionally provided with the least possible amount of information , namely a single bit that indicates whether its current state is `` good '' or `` bad '' . here",
    "`` bad / good '' indicates whether or not this state conflicts with the global - state desired by all the processors .",
    "moreover , we also impose the requirement that algorithms are deterministic , i.e. , use no randomization .",
    "this new minimalist model , which we call the _ oblivious model _ , was introduced in the conference version of this paper @xcite .",
    "this model might appear to be significantly weaker than other ( deterministic ) models studied in distributed computing .",
    "yet , our results show that a very natural distributed problem _ musical chairs _",
    "@xcite , can be solved optimally within the highly limited oblivious model .",
    "further discussion of the oblivious model and additional well - known problems like _ renaming _",
    "@xcite which we can also solve optimally in this model can be found in @xcite .    a winning strategy for the @xmath0 game can not include any two identical words .",
    "for that allows the scheduler to move the corresponding players together in lock - step , keeping them constantly in a state of conflict . also for every winning strategy for @xmath0 , with finite cyclic words , there is a finite upper bound on the number of moves till termination . to see this ,",
    "let us associate with every state of the system a vector whose @xmath15-th coordinate is the current position of player @xmath10 on @xmath11 .",
    "the set of such vectors @xmath37 is finite , @xmath38 , and in a terminating sequence of moves no vector can be visited twice .",
    "in fact , we can associate with every collection of finite words a directed graph on vertex set @xmath37 , where edges correspond to the possible transitions in response to scheduler s notifications .",
    "the collection of words constitute a winning mc strategy iff this directed graph is acyclic .",
    "we note that these observations depend on the assumption that players use no randomness .",
    "our strategies for the mc game have a number of additional desirable properties .",
    "as mentioned , we construct @xmath19 full periodic words such that every subset of @xmath1 of the @xmath19 words constitutes an @xmath0 winning system .",
    "hence our strategies are guaranteed to succeed ( reach termination against every scheduler s strategy ) in dynamic settings in which the set of players in the system keeps changing .",
    "this statement holds provided there are sufficiently long intervals throughout which the set of players remains unchanged .",
    "to illustrate this idea , consider a company that manufactures @xmath19 communication devices , each of which can use any one of @xmath2 frequencies . if several such devices happen to be at the same vicinity , and simultaneously transmit at the same frequency , then interference occurs .",
    "devices can move in or out of the area , hop to a frequency of choice and transmit at this frequency , sense whether there are other transmissions in this frequency .",
    "the company wants to provide the following guarantee : if no more than @xmath1 devices reside in the same geographical area , then no device will suffer more than a total of @xmath39 interference events for some guaranteed bound @xmath39 .",
    "our strategy for the mc game would yield this by pre - installing in each device a list of frequencies ( a _ word _ in our terminology ) , and having the device hop to the next frequency on its list ( in a cyclic fashion ) in response to any interference it encounters .",
    "no communication beyond the ability to sense interference is needed .    in proving the lower bound @xmath5 we have to make several assumptions about the setup .",
    "the first is the freedom of choice for the scheduler . from the perspective of distributed computing",
    "this means that we are dealing with an asynchronous system . in a synchronous",
    "setting , in every time step , every player involved in a conflict moves to its next state .",
    "one can show that in such a synchronous setup the players have a winning strategy even with @xmath40 chairs .",
    "it is also important that the scheduler can dictate each player s starting position .",
    "if each @xmath10 starts at the first letter of @xmath11 , a trivial winning strategy with @xmath41 simply sets @xmath15 as the first letter of @xmath11 for each @xmath15 .",
    "it is also crucial that our players are deterministic ( no randomization ) .",
    "if players are allowed to pick their next state randomly , then again @xmath40 suffices , since in this case with probability  1 eventually a conflict - free configuration will be reached .",
    "hence , this paper is also related to the one of the fascinating questions in computer science , whether and to what extent randomization increases the power of algorithmic procedures .",
    "our results show that without using randomness one can still win an mc game by increasing only slightly the number of chairs ( from @xmath1 to @xmath42 ) .",
    "our general model for oblivious algorithms is specified by providing the rules of possible behavior of the scheduler . here",
    "we consider an _ immediate scheduler _ , who enjoys a high degree of freedom in choosing which processor to move .",
    "to simplify the design and analysis of oblivious algorithms , it is convenient to consider a more restricted scheduler that has fewer degrees of freedom , but is nevertheless equivalent to the immediate scheduler in their power to win the mc game . in",
    "each round an immediate scheduler can select an arbitrary nonempty set of players that are currently in conflict and move them .",
    "below we often refer to a team strategy as an oblivious @xmath0 algorithm .",
    "it is a winning strategy if the immediate scheduler is forced to reach a conflict - free configuration in finite time .",
    "conversely , an immediate scheduler wins against an oblivious @xmath0 algorithm if it can generate an infinite execution without ever reaching a conflict - free configuration",
    ".    * terminology .",
    "* two schedulers @xmath43 are considered _ equivalent _ if for every team strategy scheduler @xmath44 has a winning strategy iff so does @xmath45 .",
    "first we want to limit the number of processors that can be moved in a round .",
    "a _ pairwise immediate scheduler _ is similar to the immediate scheduler , except for the following restriction . in every round",
    ", the pairwise immediate scheduler can select any two processors @xmath46 that are currently in conflict with each other , and move either @xmath8 , or @xmath9 , or both .",
    "equivalently , in every round either exactly one processor ( that is involved in a conflict ) moves , or two processors that share the same chair move .",
    "the immediate scheduler and the pairwise immediate scheduler are equivalent .",
    "the pairwise immediate scheduler is more restricted than the immediate scheduler .",
    "hence it remains to show that if the immediate scheduler can win against some team strategy , then the pairwise immediate scheduler can also force an infinite run against it .",
    "we prove this last statement by a double induction on the round @xmath47 and the number @xmath48 of processors that move in round @xmath47 .",
    "let us fix an oblivious @xmath0 algorithm and an infinite run that is forced by the immediate scheduler .",
    "let @xmath47 be the first round in which the moves are not consistent with any pairwise immediate scheduler and let @xmath48 be the number of processors that move in round @xmath47 .",
    "there are two cases to consider . in one case @xmath49 and",
    "all the moving processors occupy the same chair in round @xmath47 .",
    "break round @xmath47 into two rounds , pushing future rounds by one . in the first of them ( round @xmath47 )",
    "move only one of the processors from @xmath50 and in the second round ( round @xmath51 ) move the rest ( they can still move because there are at least two of them ) .",
    "this completes the inductive step with respect to @xmath47 .",
    "the other case is that the set @xmath50 of processors that moved in round @xmath47 collided on at least two different chairs .",
    "pick one of these chairs , say chair @xmath29 , and let @xmath52 be the set of those processors in @xmath50 that in round @xmath47 occupy chair @xmath29 .",
    "break round @xmath47 into two rounds , pushing future rounds by one . in the first of them ( round @xmath47 ) move only those processors in @xmath52 , and in the second round ( round @xmath51 ) move those processors in @xmath53 .",
    "this completes the inductive step ( as either @xmath48 decreased or @xmath47 increased ) .    the use of the pairwise immediate scheduler ( which as we showed is equivalent to our original scheduler ) helps simplify the proofs of theorems  [ thm : mainfull ] and  [ thm : permutations ]",
    "however , for the proof of theorem  [ thm:7n ] even the pairwise immediate scheduler should be further restricted .",
    "it is true that it has to pick only one pair of players to move ( and then either move only one or both of them ) , but it is still free to pick a pair of its choice ( among those pairs that are in conflict ) .",
    "we would like to eliminate this degree of freedom .    _",
    "canonical scheduler_. the canonical scheduler is similar to the pairwise immediate scheduler but with the following difference . in every round",
    "in which there is a conflict , one designates a _",
    "canonical pair_. this is a pair of players currently in conflict with each other , but they are not chosen by the scheduler , but rather dictated to the scheduler . given the canonical pair @xmath54 , the only choice the scheduler has is whether to move @xmath8 , or @xmath9 , or both . but",
    "how is the canonical pair chosen ? in the current paper this does not really matter to us , as long as the choice is deterministic . for concreteness",
    ", we shall assume the following procedure .",
    "fix an arbitrary order on the collection of all pairs of players . in a nonterminal configuration ,",
    "canonical pair _ is the first pair of players in the order that share a chair .",
    "the canonical scheduler and the pairwise immediate scheduler are equivalent .",
    "consider an oblivious @xmath0 algorithm and an infinite run against the immediate scheduler .",
    "let @xmath47 be the first round in which the run is inconsistent with a canonical scheduler .",
    "that is , the canonical pair at round @xmath47 consists of two players , say @xmath55 and @xmath56 , that occupy the same chair , say chair @xmath57 , whereas the immediate scheduler moved at least one player not from the canonical pair .",
    "we consider several cases .",
    "_ case 1 . _",
    "the immediate scheduler never moves @xmath55 in any round from @xmath47 onwards . in this case move @xmath56 in round @xmath47 .",
    "note that all moves ( except for the move just performed , moving @xmath56 away from @xmath57 ) performed by the immediate scheduler from round @xmath47 onwards are still available to this scheduler ( because chair @xmath57 remains occupied ) .",
    "hence the total number of moves in the schedule did not change , whereas @xmath47 increases by one , completing the inductive step .",
    "the same argument can be applied with @xmath55 and @xmath56 exchanged .",
    "_ the immediate scheduler moves @xmath56 away from @xmath57 in a later round than it moves @xmath55 . in this case move @xmath55 in round @xmath47",
    "again , all moves ( except for the move just performed , moving @xmath55 away from @xmath57 ) performed by the immediate scheduler from round @xmath47 onwards are still available to this scheduler .",
    "the same argument can be applied with @xmath55 and @xmath56 exchanged .",
    "_ the immediate scheduler moves both @xmath55 and @xmath56 out of @xmath57 in the same round @xmath58 .",
    "there are two subcases to consider . in one",
    ", there is no player other than @xmath55 and @xmath56 on chair @xmath57 in any of the rounds @xmath59 . in this subcase ,",
    "move @xmath55 and @xmath56 in round @xmath47 ( pushing future rounds by one ) .",
    "all moves performed by the immediate scheduler from round @xmath47 to @xmath60 are still available to this scheduler .",
    "the other subcase is that there is some round @xmath61 in which some other player say @xmath62 is on chair @xmath57 .",
    "consider the largest such @xmath63 .",
    "move @xmath55 in round @xmath47 ( pushing future rounds by one ) and @xmath56 in round @xmath64 ( the round that previous to the pushing of rounds was round @xmath63 ) , together with whoever else is moved at that round .",
    "* there are several interesting schedulers which are even more flexible than the immediate scheduler . as we showed in the conference version of this paper @xcite",
    "all of them are , in fact , equivalent to the canonical scheduler .",
    "in this section we prove the upper bound that is stated in theorem  [ thm : mainfull ] .",
    "we start with some preliminaries .",
    "the length of a word @xmath65 is denoted by @xmath66 .",
    "the concatenation of words is denoted by @xmath67 .",
    "the @xmath68-th power of @xmath65 is denoted by @xmath69 ( @xmath68 times ) . given a word @xmath70 and a letter @xmath29 , we denote by @xmath71 the word in which the letters are alternately @xmath29 and a letter from @xmath70 in consecutive order .",
    "for example if @xmath72 and @xmath73 then @xmath74 .",
    "a collection of words @xmath75 is called _ terminal _ if no schedule can fully traverse even one of the @xmath76 .",
    "note that we can construct a terminal collection from any @xmath77 algorithm just by raising each word to a high enough power .",
    "we now introduce some of our basic machinery in this area .",
    "we first show how to extend terminal sets of words .",
    "[ pro : full - equivalence ] let @xmath78 be integers with @xmath79 .",
    "let @xmath80 be a collection of @xmath2-full words such that @xmath81 then @xmath82 can be extended to a set of @xmath83 @xmath2-full words that satisfy condition  ( [ every_n ] ) .",
    "suppose that for every choice of @xmath1 words from @xmath82 and for every initial configuration no schedule lasts more than @xmath47 steps .",
    "( by the pigeonhole principle @xmath84 , where @xmath85 is the length of the longest word in @xmath82 ) . for a word @xmath70 ,",
    "let @xmath86 be defined as follows : if @xmath87 , then @xmath88 .",
    "otherwise it consists of the first @xmath47 letters in @xmath89 where @xmath90 .",
    "it is a full word , since it contains the full word @xmath91 as a sub - word .",
    "we need to show that every set @xmath92 of @xmath93 words from @xmath82 together with @xmath94 constitute an oblivious @xmath0 algorithm .",
    "observe that in any infinite schedule involving these words , the word @xmath94 must move infinitely often .",
    "otherwise , if it remains on a letter @xmath29 from some point on , replace the word @xmath94 by an arbitrary word from @xmath95 and stay put on the letter @xmath29 in this word .",
    "this contradicts our assumption concerning @xmath82 .",
    "( note that this word contains the letter @xmath29 by our fullness assumption . ) but @xmath94 moves infinitely often , and it is a concatenation of @xmath1 words whereas @xmath92 contains only @xmath93 words .",
    "therefore eventually @xmath94 must reach the beginning of a word @xmath96 for some @xmath97 . from this point",
    "onward , @xmath94 can not proceed for @xmath47 additional steps , contrary to our assumption .",
    "note that by repeated application of proposition  [ pro : full - equivalence ] , we can construct an arbitrarily large collection of @xmath2-full words that satisfy condition  ( [ every_n ] ) .",
    "we next deal with the following situation : suppose that @xmath98 is a terminal collection , and we concatenate an arbitrary word @xmath99 to one of the words @xmath100 .",
    "we show that by raising all words to a high enough power we again have a terminal collection in our hands .",
    "[ basic_lemma ] let @xmath101 be a terminal collection of full words over some alphabet .",
    "let @xmath102 be an arbitrary full word over the same alphabet .",
    "then the collection @xmath103 is terminal as well , for every @xmath104 , and every @xmath105 .",
    "we claim that throughout a single period we do not traverse a full copy of @xmath106 in our progress along the word @xmath107 .",
    "the argument is the same as in the proof of proposition  [ pro : full - equivalence ] . by pasting all these periods together ,",
    "we conclude that during a time interval in which we advance @xmath108 positions along the word @xmath109 every other word @xmath107 traverses at most @xmath110 copies of @xmath106 .",
    "in particular , there is a whole @xmath106 in the @xmath111-th word in the collection that is never visited .",
    "if the schedule ends in this way , no word is fully traversed , and our claim holds .",
    "so let us consider what happens when a schedule makes @xmath112 steps along the word @xmath113 .",
    "we must reach at some moment the start of @xmath76 in our traversal of the word @xmath109 .",
    "but our underlying assumption implies that from here on , no word can fully traverse the corresponding @xmath114 ( including @xmath100 ) . again , no word is fully traversed , as claimed .",
    "lemma [ basic_lemma ] yields immediately :    [ cor_2 ] let @xmath101 be a terminal collection of full word over some alphabet , and let @xmath115 @xmath116 be arbitrary full words over the same alphabet .",
    "then the collection @xmath117is terminal as well .",
    "this holds for every @xmath104 and @xmath118 .",
    "this is a special case of lemma  [ basic_lemma ] where @xmath119 .",
    "the proof we present shows somewhat more than theorem  [ thm : mainfull ] says .",
    "a useful observation is that the scheduler can `` trade '' a player @xmath8 for a chair @xmath29 .",
    "namely , he can keep @xmath8 constantly on chair @xmath29 and be able , in return to move any other player past @xmath29-chairs .",
    "in other words , this effectively means the elimination of chair @xmath29 from all other words .",
    "this suggests the following definition : if @xmath70 is a word over alphabet @xmath121 and @xmath122 , we denote by @xmath123 the word obtained from @xmath70 by deleting from it the letters from @xmath124 .",
    "our construction is recursive .",
    "an inductive step should add one player ( i.e. , a word ) and two chairs .",
    "we carry out this step in two installments : in the first we add a single chair and in the second one we add a chair and a player .",
    "both steps are accompanied by conditions that counter the above - mentioned trading option .",
    "[ main_prep ] for every integer @xmath125",
    "* there exist full words @xmath126 over the alphabet @xmath127 such that + @xmath128 is a terminal collection for every @xmath129 , and every subset + @xmath130 of cardinality @xmath131 .",
    "* there exist full words @xmath132 over alphabet @xmath133 , such that + @xmath134 is a terminal collection for every @xmath129 , and every subset + @xmath135 of cardinality @xmath136 .",
    "the words @xmath126 in proposition  [ main_prep ] constitute a terminal collection and are hence an oblivious @xmath20 algorithm that proves the upper bound part of theorem [ thm : mainfull ] . in the rest of this section",
    "we prove proposition  [ main_prep ] .",
    "as mentioned , the proof is by induction on @xmath1 . for @xmath137 clearly @xmath138 and @xmath139 satisfy the conditions .    in the induction step we use the existence of @xmath126 to construct @xmath132 .",
    "likewise the construction of @xmath140 builds on the existence of @xmath132 .    * the transition from * @xmath132 * to * @xmath140 * * : * *    to simplify notations we assume that the words @xmath132 in the alphabet @xmath141 ( rather than @xmath142 ) satisfy the proposition .",
    "let @xmath143    fix a subset @xmath144 of cardinality @xmath131 with @xmath145 , and let us show that @xmath128 is a terminal collection .",
    "there are two cases to consider :    we first assume @xmath146 .",
    "this clearly implies that @xmath129 ( or else @xmath147 and in particular @xmath148 ) . in this case",
    "the collection is :    @xmath149    by the induction hypothesis , the collection @xmath150 is terminal .",
    "we apply corollary [ cor_2 ] and conclude that @xmath151 is terminal as well .",
    "but the @xmath152 are obtained by taking @xmath153-th powers of these words , so that @xmath128 is terminal as needed .",
    "we now consider what happens when @xmath154 .",
    "we define @xmath155 and for for @xmath156 , let @xmath157 .",
    "we refer to @xmath158 as the @xmath15-th block . in our construction",
    "each word has @xmath159 blocks , ignoring chair @xmath160 .    at any moment throughout a schedule we denote by @xmath161 the set of players in @xmath162 that currently occupy chair @xmath160 .",
    "we show that during a period in which the set @xmath163 remains unchanged , no player can traverse a whole block .",
    "the proof splits according to whether @xmath163 is empty or not .",
    "assume first that @xmath164 , and pick some @xmath165 for which @xmath166 occupies chair @xmath160 during the current period .",
    "as long as @xmath163 remains unchanged , @xmath166 stays on chair @xmath160 , so the words that the other players repeatedly traverse are as follows : for @xmath55 it is    @xmath167    and for @xmath168 with @xmath169 it is    @xmath170    we now show that no player can traverse a whole block ( as defined above ) .",
    "observe that the collection @xmath171 ( including , in particular the word @xmath172 ) is terminal .",
    "this follows from the induction hypothesis , because @xmath173 , and because the property of being terminal is maintained under the insertion of new chairs into words .",
    "applying corollary  [ cor_2 ] to this terminal collection implies that this collection of blocks is terminal as well .",
    "we turn to consider the case @xmath174 . in this case player",
    "@xmath160 can not advance from a none-@xmath160 chair to the next none-@xmath160 chair , since the two are separated by the presently unoccupied chair @xmath160 .",
    "we henceforth assume that player @xmath175 stays put on chair @xmath176 , but our considerations remain valid even if at some moment player @xmath175 moves to chair @xmath160 .",
    "( if this happens , he will necessarily stay there , since @xmath177 ) .",
    "we are in a situation where players @xmath178 traverse the words @xmath179 ( chair @xmath29 which is occupied by player @xmath175 can be safely eliminated from these words ) .",
    "but @xmath180 , so by the induction hypothesis no player can traverse a whole @xmath181 , so no player can traverse a whole block .",
    "we just saw that during a period in which the set @xmath163 remains unchanged , no player can traverse a whole block .",
    "finally , assume towards contradiction that @xmath182 fully traverses @xmath183 for some index @xmath111 , and consider the first occurrence of such an event .",
    "it follows that @xmath182 has traversed @xmath159 blocks , so that the set @xmath163 must have changed at least @xmath159 times during the process .",
    "however , for @xmath163 to change , some @xmath166 must either move to , or away from a 1-chair in @xmath152 .",
    "but @xmath160 occurs exactly once in @xmath152 , so every @xmath166 can account for at most two changes in @xmath163 , a contradiction .    *",
    "the transition from * @xmath126 * *  to * * @xmath132 * * : * *    we assume that the words @xmath126 in the alphabet @xmath184 satisfy the proposition .",
    "let @xmath185 and define :    @xmath186    fix a subset @xmath135 with @xmath136 .",
    "then    @xmath187    are exactly the same as in the previous transition just by replacing @xmath188 with @xmath65 and @xmath189 with @xmath190 ( in this case the induction hypothesis is on @xmath191 and we prove for @xmath192 ) .",
    "so exactly the same considerations prove that @xmath193 is a terminal collection .",
    "in this section we prove the lower bound of theorem  [ thm : mainfull ] .",
    "as it turns out , the situation for @xmath194 and for @xmath5 are dramatically different .",
    "as we saw , for @xmath5 the team has a winning strategy , but when @xmath195 not only is it true that the scheduler can win the game .",
    "he is guaranteed to have a winning startegy even if we ( i ) substantially relax the requirement that each word @xmath11 over @xmath12 $ ] be full , or ( ii ) restrict his power to select the players starting position on their words . in the next proposition case ( i )",
    "occurs :    [ prop : clearly_implies ] every team strategy @xmath196 over @xmath12 = [ 2n-2]$ ] for which :    * the chair @xmath160 appears in both @xmath197 , and * for every @xmath198 , the word @xmath199 contains both chair @xmath200 and @xmath201    is a losing strategy .",
    "needless to say , this statement is invariant under permuting the player s names and the indices of the chairs .",
    "there are several such arbitrary choices of indices below and we hope that this creates no confusion . in the impossibility results that we prove in this section , the number of chairs @xmath2 is always @xmath202 .",
    "we also go beyond the lower bound of theorem  [ thm : mainfull ] by considering scenarios with a total of @xmath25 players and statements showing that there is a choice of @xmath1 out of the @xmath19 words that constitute a losing strategy .",
    "( clearly , new words that get added to a losing team strategy make it only easier for the scheduler to win ) . these deviations from the basic setup ( @xmath25 words , weakened fullness conditions ,",
    "starting points not controlled by the scheduler ) give us more flexibility in our arguments and complement each other nicely .",
    "here is one of the main theorems that we prove in this section .",
    "it yields exponentially many subsets of @xmath1 words that constitute a losing team strategy .",
    "[ thm : mainlb ] let @xmath203 and let @xmath204 be words over @xmath12=[2n-2]$ ] such that the only equality among the symbols @xmath205 , \\pi_2[1 ] , \\pi_3[1],\\ldots,\\pi_n[1]$ ] is @xmath205=\\pi_2[1]$ ] .",
    "then , for every partition of the words @xmath206 into @xmath207 pairs , there is a choice of one word from each pair , such that the chosen words together with @xmath91 and @xmath208 constitute a losing team strategy even when the game starts on each word s first letter .    while it is obvious that proposition [ prop : clearly_implies ] yields the lower bound of theorem  [ thm : mainfull ] , it is not entirely clear how theorem [ thm : mainlb ] fits into the picture .",
    "we show next how to derive proposition [ prop : clearly_implies ] from theorem [ thm : mainlb ] .",
    "let @xmath91 ( resp .",
    "@xmath208 ) be the suffix of @xmath209 ( resp .",
    "@xmath210 ) starting with the first appearance of the symbol @xmath160 .",
    "the other words come in pairs . for @xmath198 , we define @xmath211 to be the suffix of @xmath199 starting at chair @xmath200 , and @xmath212 is its suffix starting at chair @xmath201 .",
    "theorem  [ thm : mainlb ] implies that there is a choice of one word from each pair that together with @xmath91 and @xmath213 is losing when started from the initial chairs .",
    "the same scheduler strategy clearly wins the game on @xmath196 when started from the respective chairs .",
    "the proof of theorem [ thm : mainlb ] , which uses some simple topological methods , is presented in section  [ sec : applbproof ] .",
    "we provide all the necessary background material for this proof in section  [ sec : appsperner ] .    what happens if the fullness condition is eliminated altogether but the scheduler maintains his right to select the starting positions ?",
    "the scheduler clearly loses against the words @xmath214 for @xmath215 .",
    "however , as the following theorem shows once @xmath216 , the scheduler has a winning strategy .",
    "[ thm : lbn ] for every collection of @xmath217 words over @xmath12 = [ 2n-2]$ ] , there is a choice of @xmath1 words and starting locations for which the scheduler wins .    by pigeonhole , the scheduler wins agianst every set of words @xmath50 that together contain fewer than @xmath218 different letters .",
    "if such a subcollection @xmath50 exists with @xmath219 we are clearly done .",
    "so consider such an @xmath50 of smallest cardinality . by assumption @xmath220 . by minimality ,",
    "the total number of letters that appear in the words of @xmath50 is exactly @xmath221 . by the marriage theorem , for every word @xmath222 it is possible to mark one letter in every word in @xmath223 so that every letter gets marked at most once .",
    "let @xmath224 consist of @xmath70 and the suffix of every other words in @xmath223 starting from the marked letter .",
    "if @xmath225 is even , then theorem [ thm : mainlb ] applies since @xmath224 has more words than letters and there is exactly one coincidence among these words initial letters .",
    "consequently , @xmath50 has a subcollection of @xmath226 that is a losing team stratgey , as claimed .",
    "if @xmath218 is odd we first delete a word from @xmath50 whose marked letter differs from @xmath227 $ ] and argue as above .      in this section",
    "we discuss our main topological tool , the sperner lemma ( see , e.g. , @xcite ) .",
    "we include all the required background and try to keep our presentation to the minimum that is necessary for a proof of theorem  [ thm : mainlb ] .",
    "a _ simplicial complex _ is a collection @xmath228 of subsets of a finite set of _ vertices _ @xmath37 such that @xmath229 a member @xmath230 is called a _",
    "face _ , and its _ dimension _ is defined as @xmath231 .",
    "we refer to @xmath35-dimensional faces as @xmath35-faces , and define @xmath232 as the largest dimension of a face in @xmath228 .",
    "we note that a vertex is a @xmath233-face , and call a @xmath160-face an _ edge_. the @xmath160-_skeleton _ of @xmath228 is the graph with vertex set @xmath37 , where @xmath234 is an edge iff @xmath235 is an edge ( @xmath160-face ) of @xmath228 .",
    "a face of dimension @xmath232 is called a _",
    "facet_. we say that @xmath228 is _ pure _ if every face of @xmath228 is contained in",
    "_ some _ facet . finally , a @xmath35-_pseudomanifold _ is a pure @xmath1-dimensional complex @xmath228 such that @xmath236    a good simple example of a 2-dimensional pseudomanifold is provided by a planar graph in which all faces including the outer face are triangles .",
    "the vertices and the edges of the complex are just the vertices and the edges of the graph .",
    "the facets ( 2-simplices ) of the complex are the faces of the planar graph , including the outer face .",
    "this is clearly a pure complex and every edge is contained in exactly two facets .",
    "note that such a graph drawn on a torus or on another 2-manifold works just as well .",
    "the _ pseudo _ part of the definition comes since we are allowing to carry out identifications such as the following : take a set of vertices that forms an anticlique in the graph and identify all of them to a single vertex .",
    "the result is still a 2-dimensional psudomanifold . at any event ,",
    "the uninitiated reader is encoutaged to use planar triangulations as a good mental model for a pseudomanifold .",
    "henceforth we shorten pseudomanifold to _",
    "let @xmath228 be a psm on vertex set @xmath37 .",
    "a @xmath48-_coloring _ of @xmath228 is a mapping @xmath237 .",
    "a face of @xmath228 on which @xmath238 is @xmath239 is said to be @xmath238-_rainbow _",
    "( we only say rainbow , when it is clear what coloring is involved ) .",
    "we are now ready to state and prove a special case of sperner s lemma that suffices for our purposes .",
    "[ lem : sperner1 ] let @xmath228 be an @xmath1-dimensional psm .",
    "then for every @xmath240-coloring @xmath238 of @xmath228 , the number of @xmath238-rainbow facets of @xmath228 is even .",
    "consider all pairs @xmath241 with @xmath189 is a facet of @xmath228 , @xmath190 being @xmath242-dimensional and @xmath238-rainbow , where on the vertices of @xmath190 , @xmath238 takes all values except for @xmath243 .",
    "we count the numberof such pairs in two different ways .",
    "each @xmath242-simplex @xmath190 that @xmath238 maps onto @xmath244 participates in exactly two such pairs , once with each of the two facets that contain it .",
    "hence the total count is even .",
    "each rainbow facet @xmath189 participates in exactly one good pair @xmath241 , where @xmath245 .",
    "+ the claim follows .",
    "thus , in particular , if we 3-color the vertices of a triangulated planar graph , so that the outer face is rainbow , then there must be at least one more rainbow face in the triangulated planar graph .",
    "we say that an @xmath1-dimensional psm is _ colorable _ if it has a @xmath240-coloring for which no edge is monochromatic . in other words ,",
    "an @xmath240-coloring for which all facets are rainbow .",
    "[ cor : sperner2 ] let @xmath246 be a @xmath247-coloring of a colorable psm @xmath228 . then the number of @xmath246-monochromatic facets of @xmath228 is even .    by assumption @xmath228",
    "is colorable , so let @xmath248 be some proper @xmath240-coloring of @xmath228 .",
    "define next a new @xmath240-coloring @xmath238 via @xmath249 . by assumption ,",
    "every facet is @xmath248-rainbow and the addition ( @xmath250 ) of a constant value of a monochromatic @xmath246 does not change this property .",
    "in other words , every @xmath246-monochromatic facet is @xmath238-rainbow .",
    "we claim the reverse implication holds as well . indeed ,",
    "if @xmath246 is not constant on the facet @xmath189 , then we can find two vertices @xmath251 for with @xmath252 and @xmath253 .",
    "but then no vertex @xmath254 satisfies @xmath255 . in other words ,",
    "a facet is @xmath238-rainbow , iff it is @xmath246-monochromatic .",
    "by lemma  [ lem : sperner1 ] , the proof is complete .",
    "here we prove theorem  [ thm : mainlb ] by using psm s and lemma  [ cor : sperner2 ] .",
    "while it is true that psm s can be realized geometrically , we do not refer to such realizations .",
    "still , as mentioned above , planar triangulations can be useful in guiding one s intuition in this area .    given the @xmath19 words , our plan is to to construct a psm @xmath228 that encodes certain possible executions of the mc algorithm .",
    "vertices of @xmath228 correspond to states of individual players , and facets correspond to reachable configurations . since we limit ourselves to schedules that involve only @xmath1 out of the @xmath19 available players , every facet has @xmath1 vertices , so that @xmath256 .    in the setting of theorem  [ thm : mainlb ]",
    "the scheduler selects one player from each of the @xmath207 pairs ( and adds in players @xmath257 ) .",
    "this gives @xmath258 possible initial configurations , which we call _ initial facets_. note , however , that these @xmath258 sets do not constitute the collection of facets of a psm s . an @xmath259-dimensional face that contains one player from each of the @xmath207 pairs and exactly one of @xmath257 is covered by exactly one initial facet , in violation of condition ( [ pseudom ] ) . to overcome this difficulty we add two auxiliary vertices called @xmath260 and @xmath261 , where @xmath260 is viewed as being paired with @xmath55 , and @xmath261 with @xmath56",
    "this yields the @xmath262 sets that are obtained by making all possible choices of one vertex from each of the @xmath1 pairs .",
    "it is easily verified that this collection constitutes the set of facets of an @xmath242-dimensional psm .",
    "these @xmath262 facets include the @xmath258 initial configurations , and @xmath263 _ auxiliary facets _ , those that include at least one of @xmath264 .",
    "figure  [ fig : feige1 ] illustrates the situation for @xmath30 .",
    "there are six vertices , which correspond to @xmath265 players plus two auxiliary players .",
    "the vertices are 3-colored , where each pair of players ( say @xmath55 and @xmath260 ) are equally colored .",
    "the planar graph has eight faces ( including the outer face ) , which are the @xmath266 facets .",
    "let us now introduce a 2-coloring of the vertices .",
    "we partition the @xmath202 chairs into two subsets of cardinality @xmath93 each , called the 0-chairs and the 1-chairs .",
    "the initial chair of @xmath257 is a 1-chair whereas the initial chair of @xmath264 is a 0-chair .",
    "also , within each pair of players ( out of the @xmath207 original pairs ) , one starts at a 0-chair and the other at a 1-chair .",
    "these requirements are consistent , since by assumption the only coincidence among initial chairs is that @xmath205=\\pi_2[1]$ ] .    [",
    "pro : initial ] the collection of all subsets of the @xmath262 initial sets is a colorable @xmath242-dimensional psm . in the above - described 2-coloring there is exactly one monochromatic auxiliary cell",
    ".    we already noticed that this is indeed a psm .",
    "let us associate a unique color to each pair of paired vertices .",
    "this makes every facet rainbow , so the psm is indeed colorable .    in the above - described 2-coloring",
    "there is indeed a unique monochromatic auxiliary facet .",
    "this the facet that contains @xmath260 , @xmath261 , and the @xmath207 players ( one from each pair ) who start from a 0-chair .    starting from the initial system , the rules of mc allow the scheduler to generate new psm s whose facets represent reachable configurations .",
    "we remark that unlike the initial system , it may happen that several facets correspond to the same configuration .",
    "this fact will cause no harm to us",
    ".    let us consider a move of the scheduler relative to some pseudomanifold @xmath267 . at a given configuration corresponding to a facet in @xmath267 ,",
    "if some players are in conflict , the scheduler may select two such players that occupy the same chair , and move either one of them or both .",
    "hence given the two players and their states ( say , corresponding to vertices @xmath268 and @xmath269 in @xmath267 ) , two new states are exposed by this choice of three possible moves .",
    "these correspond to two new vertices ( say @xmath270 and @xmath271 ) in a new psm .",
    "the given configuration can be moved to one of three new configurations , which in our psm representation corresponds to splitting the facet @xmath102 that corresponds to the given configuration to three new facets .",
    "these new facets are obtained as @xmath268 or @xmath269 or both in @xmath102 are replaced by @xmath270 , @xmath271 or both , respectively .",
    "however , we are not done yet .",
    "the edge @xmath272 may be contained in several facets of @xmath267 .",
    "each such facet corresponds to a configuration in which the scheduler can apply any of the same three types of moves ( moving @xmath268 to @xmath270 , moving @xmath269 to @xmath271 , or moving both ) .",
    "hence every such facet is split in three as described above .",
    "this completes the description of the new pseudomanifold @xmath273 .",
    "we say that the above process _",
    "subdivides _ the edge @xmath274 .",
    "figure  [ fig : feige2 ] illustrates the subdivision process when @xmath275 .",
    "( it is convenient to have @xmath260 and @xmath261 on the outer faces of such drawings , so that edges correspond to straight line segments . )     after one step by the scheduler .",
    "the auxiliary players are the red and green vertices on the outer face . ]",
    "[ pro : auxiliary ] no move of the scheduler can subdivide an auxiliary cell .",
    "observe that @xmath260 and @xmath261 are never involved in a subdivided edge ( they are not true players and the scheduler can not move them ) .",
    "as to the rest of the vertices in an auxiliary cell , they all correspond to different chairs , and hence can not pair up to create a subdivided edge",
    ".    we can extend the 2-coloring of @xmath267 to that of @xmath273 by giving the two new vertices @xmath270 and @xmath271 the 0/1 color of the chairs corresponding to their respective states .",
    "[ pro : cs ] the simplicial complex @xmath273 described above is a colorable pseudomanifold .",
    "the 2-coloring described for it has exactly one monochromatic auxiliary cell .    by induction and using proposition  [ pro : initial ] as the base case",
    ", we may assume that @xmath267 that gives rise to @xmath273 is a psm .",
    "we need to show that edge subdivision ( and the implied cell subdivisions ) maintains the property that each @xmath242-face is covered by exactly two facets .",
    "this amounts to a simple case analysis , presented for completeness in section  [ sec : caseanalysis ] .",
    "the colorability property of @xmath273 is inherited from @xmath267 , because every new facet contains the same set of players as its parent facet that was subdivided .",
    "the 2-coloring property is a direct consequence of proposition  [ pro : initial ] and proposition  [ pro : auxiliary ] .",
    "we now reach a crucial part of our proof .",
    "consider a psm @xmath267 generated by the process described above ( starting from the initial psm and subdividing edges and their respective cells ) . by proposition",
    "[ pro : cs ] @xmath267 is colorable .",
    "hence for the 2-coloring that we associate with it , there are an even number of monochromatic facets , by lemma  [ cor : sperner2 ] . as exactly one of these facets is auxiliary ( by proposition  [ pro : cs ] ) , there is at least one non - auxiliary monochromatic facet , and this facet corresponds to a reachable configuration . since there are only @xmath93 0-chairs and @xmath93 1-chairs , by pigeonhole there are at least two players on the same chair in this configuration .",
    "therefore the scheduler can subdivide the respective edge .",
    "it follows that the scheduler can continue to subdivide the psm indefinitely , creating arbitrarily large psm s . together with the next proposition",
    "this completes the proof of theorem  [ thm : mainlb ] .",
    "[ pro : tree ] if the pseudomanifold that is generated by the subdivision process has @xmath276 facets , then there is a scheduler strategy that makes the game last for at least @xmath47 steps .",
    "we describe an iterative process in which we construct a rooted tree @xmath39 the reflects the process of generating the psm .",
    "the @xmath262 facets of the initial psm are @xmath262 children of the root . to represent a step in which we subdivide a facet @xmath102 ,",
    "we let the leaf corresponding to @xmath102 have three children .",
    "thus every internal ( neither root nor leaf ) node of @xmath39 has exactly three children .",
    "the leaves of @xmath39 correspond to facets , of which @xmath263 are auxiliary , and the others corresponding to reachable configurations .",
    "( these need not be distinct reachable configurations , and not every reachable configuration is necessarily represented by the subdivision process ) .",
    "if @xmath39 has @xmath277 leaves , then there must be a leaf at depth at least @xmath51 .",
    "the root to leaf path describes a possible schedule of @xmath47 moves , as claimed .      here",
    "we present the case analysis used for the proof of proposition  [ pro : cs ] .",
    "we first consider various options for an @xmath242-face @xmath278 of @xmath273 .    1 .",
    "if @xmath278 contains none of @xmath279 , then it must be a face in @xmath267 as well .",
    "the facets that contain @xmath278 were not subdivided ( since they could contain at most one of @xmath268 and @xmath269 ) , and hence also in @xmath280 there are exactly two facets containing @xmath278 .",
    "2 .   if @xmath281 the @xmath278 must be an @xmath242-face in @xmath267 as well .",
    "possibly some facet @xmath121 in @xmath267 contains @xmath278 and was subdivided in going from @xmath267 to @xmath273 ) , if @xmath121 contained @xmath269 .",
    "but then @xmath267 has the facet @xmath282 with @xmath271 replacing @xmath269 , and the number of facets in @xmath273 that contain @xmath278 is the same as their number in @xmath267 .",
    "3 .   if @xmath283 of @xmath280 the same argument applies .",
    "4 .   note that @xmath284 is impossible , since edge @xmath274 was subdivided ) .",
    "we next turn to analyze various options for an @xmath242-face @xmath285 of @xmath273 that is not a face in @xmath267 , where , say @xmath286 .",
    "indeed @xmath285 is not a face in @xmath267 ( where @xmath270 does not exist ) , and it results from a subdivision step . we need to show that it is covered exactly twice following the subdivision .",
    "consider two subcases .",
    "* @xmath285 contains neither @xmath269 nor @xmath271 .",
    "then one facet containing @xmath285 has @xmath269 as its remaining vertex , and the other cell has @xmath271 .",
    "* @xmath285 contains either @xmath269 or @xmath271 ( note that it can not contain both ) .",
    "consider the unique @xmath242-face @xmath278 of @xmath267 that is derived from @xmath285 by replacing @xmath270 by @xmath268 , and also @xmath271 by @xmath269 if @xmath287 ( this last replacement is not required if @xmath283 ) .",
    "then @xmath278 is covered twice in @xmath267 , say by @xmath288 and @xmath289 .",
    "each of them is subdivided ( because they contain both @xmath268 and @xmath269 ) , giving rise to two facets in @xmath273 that contain @xmath285 .",
    "no other facet in @xmath273 can contain @xmath285 .",
    "the case where @xmath290 is handled similarly .",
    "we start with an observation that puts theorems  [ thm:7n ] and  [ thm : permutations ] ( as well as theorem  [ thm : mainfull ] ) in an interesting perspective .",
    "the expected number of pairwise conflicts in a random configuration is exactly @xmath291 . in particular , when @xmath292 , most configurations are _ safe _ ( namely , have no conflicts ) .",
    "therefore , it in not surprising that in this range of parameters @xmath1 random words would yield an oblivious @xmath0 algorithm .",
    "however , when @xmath293 , only an exponentially small fraction of configurations are safe , and the existence of oblivious @xmath0 algorithms is far from obvious .",
    "theorem  [ thm:7n ] can be viewed as a ( non constructive ) derandomization of the randomized mc algorithm in which players choose their next chair at random ( and future random decisions of players are not accessible to the scheduler ) .",
    "standard techniques for derandomizing random processes involve taking a union bound over all possible bad events , which in our case corresponds to a union bound over all possible schedules .",
    "the immediate scheduler has too many options ( and so does the pairwise immediate scheduler ) , making it infeasible to apply a union bound .",
    "for this reason , we shall consider in this section the canonical scheduler , which is just as powerful ( see section  2 ) .",
    "in every unsafe configuration , the canonical scheduler has just three possible moves to choose from .",
    "this allows us to use a union bound .",
    "we now prove theorem  [ thm:7n ] .",
    "each of the @xmath19 words is chosen independently at random as a sequence of @xmath85 chairs , where each chair in the sequence is chosen independently at random .",
    "we show that with high probability ( probability tending to  1 as the constant @xmath29 grows ) , this choice satisfies theorem  [ thm:7n ] .",
    "it is easy to verify that in this random construction , with high probability , all words are full . to see this note that the probability that chair @xmath111 is missing from such a random word is @xmath294",
    "consequently , the probability that a word chosen this way is not full is @xmath295 .",
    "therefore , the expected number of non - full words is @xmath296 . but with our choice of parameters @xmath297 and @xmath298 , we see that @xmath299 , provided that @xmath29 is large enough .    in our approach to the proof",
    "we keep track of all possible schedules . to this end",
    "we use `` a logbook '' that is the complete ternary tree @xmath300 of depth @xmath85 rooted at @xmath68 . associated with every node @xmath301 of @xmath300",
    "is a random variable @xmath302 .",
    "the values taken by @xmath302 are system configurations . for a given choice of words and an initial system configuration",
    "we define the value of @xmath303 to be the chosen initial configuration .",
    "every node @xmath301 has three children corresponding to the three possible next configurations that are available to the canonical scheduler at configuration @xmath302 .",
    "another important ingredient of the proof is a _ potential _ function ( defined below ) that maps system configurations to the nonnegative reals .",
    "it is also convenient to define an ( artificial ) `` empty '' configuration of @xmath233 potential .",
    "every safe configuration has potential @xmath160 , and every non - empty unsafe configuration has potential @xmath304 .",
    "if the node @xmath305 is a descendant of @xmath301 and the system configuration @xmath302 is safe , then we define @xmath306 to be the empty configuration .",
    "we thus also associate with every node of @xmath300 a nonnegative random variable @xmath307 that is the potential of the ( random ) configuration @xmath302 .",
    "the main step of the proof is to show that if @xmath308 are the three children of @xmath301 , then @xmath309 for some constant @xmath310 .",
    "( note that this inequality holds as well if @xmath302 is either safe or empty ) .",
    "this exponential drop implies that @xmath311 provided that @xmath85 is large enough .",
    "this implies that with probability @xmath312 ( over the choice of random words ) all leaves of @xmath300 correspond to an empty configuration . in other words",
    "every schedule terminates in fewer than @xmath85 steps .",
    "we turn to the details of the proof .",
    "a configuration with @xmath15 occupied chairs is defined to have potential @xmath313 , where @xmath314 is a constant to be chosen later . in a nonempty configuration",
    "the potential can vary between @xmath160 and @xmath315 , and it equals @xmath160 iff the configuration is safe .    consider a configuration of potential @xmath313 ( with @xmath316 ) , where the canonical pair is @xmath317 .",
    "it has three children representing the move of either @xmath318 or @xmath319 or both .",
    "let us denote @xmath320 and @xmath321 .",
    "when a single player moves , the number of occupied chairs can stay unchanged , which happens with probability @xmath322 . with probability @xmath323 one more chair will be occupied and the potential gets divided by @xmath324 .",
    "consider next what happens when both players move . here",
    "the possible outcomes ( in terms of number of occupied chairs ) depend on whether there is an additional player @xmath325 currently co - occupying the same chair as @xmath318 and @xmath319 .",
    "it suffices to perform the analysis in the less favorable case in which there is no such player @xmath325 , as this provides an upper bound on the potential also for the case that there is such a player . with probability @xmath326 both @xmath318 and @xmath319 move to occupied chairs and the potential",
    "gets multiplied by @xmath324 . with probability @xmath327",
    "the number of occupied chairs ( and hence the potential ) does not change . with probability @xmath328",
    "the number of occupied chairs grows by one and the potential gets divided by @xmath324 .",
    "it follows that if @xmath301 is a node of @xmath300 with children @xmath308 and if the configuration @xmath302 is unsafe and nonempty then @xmath329 .",
    "recall that @xmath330 and @xmath331 .",
    "this implies that the last expression increases if @xmath332 is replaced by @xmath322 , and thereafter it is maximized when @xmath322 attains its largest possible value @xmath333 .",
    "we conclude that    @xmath334 we can choose @xmath335 and @xmath336 to obtain @xmath309 for @xmath337 .",
    "this guarantees an exponential decrease in the expected sum of potentials and hence termination , as we now explain .",
    "it follows that for every initial configuration the expected sum of potentials of all leaves at depth @xmath85 does not exceed @xmath315 ( the largest possible potential ) times @xmath338 . on the other hand ,",
    "if there is at least one leaf @xmath301 for which the configuration @xmath302 is neither safe nor empty , then the sum of potentials at depth @xmath85 is at least @xmath330 .",
    "our aim is to show that with high probability ( over the choice of @xmath19 words ) , all runs have length @xmath339 : ( i ) for every choice of @xmath1 out of the @xmath19 words , ( ii ) each selection of an initial configuration , and ( iii ) every canonical scheduler s strategy .",
    "the @xmath1 words can be chosen in @xmath340 ways .",
    "for every @xmath1 words , there are @xmath341 possible initial configurations .",
    "the probability of length-@xmath85 run from a given configuration is at most @xmath342 , where @xmath336 and @xmath343 .",
    "therefore our claim is proved if @xmath344 .",
    "this inequality clearly holds if we let @xmath345 with @xmath29 a sufficiently large constant .",
    "this completes the proof of theorem  [ thm:7n ] .",
    "a careful analysis of the proof of theorem  [ thm:7n ] shows that it actually works as long as @xmath346",
    ". it would be interesting to determine the value of @xmath347 for which @xmath1 long enough random words over an @xmath2-letter alphabet constitute , with high probability , an oblivious @xmath0 algorithm .",
    "the argument we used to prove theorem  [ thm:7n ] is inappropriate for the proof of theorem  [ thm : permutations ] .",
    "theorem  [ thm : permutations ] deals with random permutations , whereas in the proof of theorem  [ thm:7n ] we use words of length @xmath348 .",
    "( longer words are crucial there for two main reasons : to guarantee that words are full and to avoid wrap - around .",
    "the latter property is needed to guarantee independence . ) indeed in proving theorem  [ thm : permutations ] our arguments are substantially different .",
    "in particular , we work with a pairwise immediate scheduler , and unlike the proof of theorem  [ thm:7n ] , there does not appear to be any significant benefit ( e.g. , no significant reduction in the ratio @xmath349 ) if a canonical scheduler is used instead .",
    "we first prove the special case @xmath350 of theorem [ thm : permutations ] .",
    "[ thm : main ] if @xmath351 where @xmath352 is a sufficiently large constant , then there is a family of @xmath1 permutations on @xmath12 $ ] which constitute an oblivious @xmath0 algorithm .",
    "we actually show that with high probability , a set of random permutations @xmath353 has the property that in every possible schedule the players visit at most @xmath354 chairs .",
    "our analysis uses the approach of deferring random decisions until they are actually needed . for each of the @xmath355 possible initial configuration",
    ", we consider all possible sequences of @xmath85 locations .",
    "for each such sequence we fill in the chairs in the locations in the sequence at random , and prove that the probability that this sequence represents a possible schedule is extremely small  so small that even if we take a union bound over all initial configurations and over all sequences of length @xmath85 , we are left with a probability much smaller than  1 .",
    "the main difficulty in the proof is that since @xmath356 , some players may completely traverse their permutation ( even more than once ) and therefore the chairs in these locations are no longer random . to address this ,",
    "we partition the sequence of moves into @xmath357 blocks , where in each block players visit a total of @xmath47 locations .",
    "we can and will assume that @xmath47 divides @xmath85 .",
    "we take @xmath358 for some sufficiently small constant @xmath246 , and @xmath359 , where @xmath360 is a constant much smaller than @xmath246 .",
    "this choice of parameters implies that within a block , chairs are essentially random and independent . to deal with dependencies among different blocks",
    ", we classify players ( and their corresponding permutations ) as _ light _ or _",
    "a player is _ light _ if during the whole schedule ( of length @xmath85 ) it visits at most @xmath361 locations .",
    "a player that visits more than @xmath362 locations during the whole sequence is _",
    "heavy_. observe that for light players , the probability of encountering a particular chair in some given location is at most @xmath363 .",
    "hence , the chairs encountered by light players are essentially random and independent ( up to negligible error terms ) .",
    "thus it is the heavy players that introduce dependencies among blocks .",
    "every heavy player visits at least @xmath362 locations , so that @xmath364 , the number of heavy players does not exceed @xmath365 . the fact that the number of heavy players is small is used in our proof to limit the dependencies among blocks .",
    "the following lemma is used to show that in every block of length @xmath47 the number of locations that are visited by heavy players is not too large .",
    "consequently , sufficiently many locations are visited by light players . in the lemma",
    "we use the following notation .",
    "a segment of @xmath48 locations in a permutation is said to have _ volume _ @xmath366 . given a collection of locations , a chair is _ unique _ if it appears exactly once in these locations .",
    "[ lem : heavy ] let @xmath367 and let @xmath368 be a sufficiently small constant .",
    "consider @xmath1 random permutations over @xmath12 $ ] .",
    "select any @xmath364 of the permutations and a starting location in each of them .",
    "choose next intervals in the selected permutations with total volume @xmath60 for some @xmath369 .",
    "with probability @xmath312 for every such set of choices at least @xmath370 of the chairs in the chosen intervals are unique .",
    "we first note that we will be using the lemma with @xmath371 .",
    "also , if a list of letters contains @xmath305 unique letters ( i.e. , they appear exactly once ) and @xmath68 repeated letter ( i.e. , appearing at least twice ) , then it has @xmath372 distinct letters and length @xmath373 .",
    "in particular @xmath374 .",
    "there are @xmath375 ways of choosing @xmath364 of the permutations .",
    "then , there are @xmath376 choices for the initial configuration .",
    "we denote by @xmath377 the volume of the @xmath15-th interval , so that @xmath378 .",
    "therefore there are @xmath379 ways of choosing the intervals with total volume @xmath60 .",
    "since the volume of every interval is at most @xmath60 we have that the probability that a particular chair resides at a particular location in this interval is at most @xmath380 .",
    "this is because the permutation is random and at most @xmath60 chairs appeared so far in this interval .",
    "therefore the probability that a sequence of @xmath60 labels involves less than @xmath381 distinct chairs is at most @xmath382 explanation : the set of chairs that appear in these intervals can be chosen in @xmath383 ways .",
    "the probability that a particular location in this union of intervals is assigned to a chair from the chosen set does not exceed @xmath384 .",
    "in addition @xmath385 , @xmath386 and @xmath246 is a very small constant .",
    "now we take a union bound over all choices of @xmath364 permutations , all starting locations and all collection of intervals with total volume @xmath60 .",
    "it follows that the probability that there is a choice of intervals of volume @xmath60 that span @xmath387 permutations and contain fewer than @xmath388 distinct chairs is at most @xmath389 in the above notation @xmath390 and @xmath391 which yields @xmath392 as claimed .",
    "since the conclusion of this lemma holds with probability @xmath312 we can assume that our set of permutations satisfies it .",
    "in particular , in every collection of intervals in these permutations with total volume @xmath393 that reside in @xmath394 permutations there are at least @xmath370 unique chairs .",
    "as already mentioned , we break the sequence of @xmath85 locations visited by players into blocks of @xmath47 locations each .",
    "we analyze the possible runs by considering first the _ breakpoints profile _ ,",
    "namely where each block starts and ends on each of the @xmath1 words .",
    "there are @xmath355 possible choices for the starting locations .",
    "if , in a particular block player @xmath15 visits @xmath377 chairs , then @xmath395 . consequently the parameters @xmath396 can be chosen in @xmath397 ways .",
    "there are @xmath357 blocks , so that the total number of possible breakpoints profiles is at most @xmath398 ( here we used the fact that @xmath399 ) . clearly , by observing the breakpoints profile we can tell which players are light and which are heavy .",
    "we recall that there are at most @xmath394 heavy players , and that the premise of lemma [ lem : heavy ] can be assumed to hold .",
    "let us fix an arbitrary particular breakpoints profile @xmath319 .",
    "we wish to estimate the probability ( over the random choice of chairs ) that some legal sequence of moves by the pairwise immediate scheduler yields this breakpoints profile @xmath319 .",
    "let @xmath190 be an arbitrary block in @xmath319 .",
    "let @xmath400 denote the probability over choice of random chairs and _ conditioned over contents of all previous blocks in @xmath319 _ that there is a legal sequence of moves by the pairwise immediate scheduler that produces this block @xmath190 .",
    "[ lem : pb ] for @xmath400 as defined above we have that @xmath401 .",
    "the total number of chairs encountered in block @xmath190 is @xmath402 ( for the initial locations ) plus @xmath47 ( for the moves ) . recall that the set of heavy players is determined by the block - sequence @xmath319 .",
    "hence within block @xmath190 it is clear which are the heavy players and which are the light players .",
    "let @xmath403 ( resp .",
    "@xmath404 ) be the number of chairs visited by heavy ( resp .",
    "light ) players in this block .",
    "the proof now breaks into two cases , depending on the value of @xmath403 .",
    "* case 1 : @xmath405 .",
    "* light players altogether visit @xmath406 chairs ( @xmath1 initial locations plus @xmath407 moves ) .",
    "if @xmath305 of these chair are unique , then they visit at most @xmath408 distinct chairs . but a chair in this collection that is unique is either : ( i ) one of the @xmath1 chairs where a player terminates his walk , or , ( ii ) a chair that a light player traverses due to a conflict with a heavy player , and there are at most @xmath403 of those .",
    "consequently , the number of distinct chairs visited by light players does not exceed @xmath409 .",
    "fix the set @xmath50 of @xmath410 distinct chairs that we are allowed to use .",
    "there are @xmath411 choices for @xmath50 .",
    "now assign chairs to the locations one by one , in an arbitrary order .",
    "each location has probability of at most @xmath412 of receiving a chair in @xmath50 .",
    "since we are dealing here with light players , we have exposed only @xmath413 chairs for each of them ( in @xmath190 and in previous blocks of @xmath319 ) , and as mentioned above , this can increase the probability by no more that a @xmath414 factor .",
    "hence the probability that the segments traversed by the light players contain only @xmath415 chairs is at most    @xmath416    here we used that @xmath417 , @xmath418 , @xmath419 and @xmath420 .",
    "* case 2 : @xmath421 .",
    "* let us reveal first the chairs visited by the heavy players . by lemma",
    "[ lem : heavy ] , we find there at least @xmath422 unique chairs . in order that the heavy players traverse these chairs ,",
    "they must be visited by light players as well . hence the @xmath407 locations visited by light players must include all these @xmath423 pre - specified chairs .",
    "we bound the probability of this as follows .",
    "first choose for each of the @xmath423 pre - specified chairs a particular location where it should appear in the intervals of light players .",
    "the number of such choices is @xmath424 . as mentioned above the probability that a particular chair is assigned to some specific location",
    ". therefore the probability that @xmath423 pre - specified chairs appear in the light intervals is at most @xmath426 .",
    "thus the probability that a schedule satisfying the condition of the lemma exists is at most @xmath427 where we used that @xmath420 .",
    "lemma  [ lem : pb ] implies an upper bound of @xmath428 on the probability there is a legal sequence of moves by the pairwise immediate scheduler that gives rise to breakpoints profile @xmath319 . taking a union bound over all block sequences ( whose number is at most @xmath429 , by our choice of @xmath430 for a sufficiently large constant @xmath121 ) , theorem  [ thm : main ] is proved .",
    "observe that the proof of theorem  [ thm : main ] easily extends to the case that there are @xmath431 random permutations out of which one chooses @xmath1 .",
    "we simply need to multiply the number of possibilities by @xmath432 , a term that can be absorbed by increasing @xmath2 , similar to the way the term @xmath433 is absorbed . in lemma",
    "[ lem : heavy ] we need to replace @xmath375 by @xmath434 , and the proof goes through without any change ( because @xmath364 is so small ) .",
    "this proves theorem  [ thm : permutations ] .      in this section",
    "we present for every integer @xmath32 an explicit collection of @xmath436 permutations on @xmath437 such that every @xmath1 of these permutations constitute an oblivious @xmath0 algorithm .",
    "this proves theorem  [ thm : explicitperm ] .",
    "we let @xmath438 stand for the length of the longest common subsequence of the two permutations @xmath70 and @xmath102 , considered cyclically .",
    "( that is , we may rotate @xmath70 and @xmath102 arbitrarily to maximize the length of the resulting longest common subsequence ) .",
    "the following easy claim is useful .",
    "[ pairwise ] let @xmath353 be permutations of @xmath439 such that @xmath440 for all @xmath441 . if @xmath442 , then in every schedule none of the @xmath11 is fully traversed .    by contradiction .",
    "consider a schedule in which one of the permutations is fully traversed , say that @xmath91 is the first permutation to be fully traversed . each move along @xmath91 reflects a conflict with some other permutation .",
    "hence there is a permutation @xmath443 that has at least @xmath444 agreements with @xmath91 .",
    "consequently , @xmath445 , a contradiction .",
    "this yields an inexplicit oblivious @xmath0 algorithm with @xmath435 , since ( even exponentially ) large families of permutations in @xmath12 $ ] exist where every two permutations have an lcs of only @xmath446 .",
    "we omit the easy details . on the other hand , we should notice that by  @xcite this approach is inherently limited and can , at best yield bounds of the form @xmath447 .",
    "we now present an explicit construction that uses some algebra .",
    "[ explicit ] let @xmath448 be a prime power , let @xmath35 be a positive integer and let @xmath449 .",
    "then there is an explicit family of @xmath450 permutations of an @xmath451-element set , where the lcs of every two permutations is at most @xmath452 .",
    "let @xmath453 be the finite field of order @xmath448 .",
    "let @xmath454 , and @xmath455 .",
    "let @xmath456 be a polynomial of degree @xmath457 over @xmath453 with vanishing constant term , and let @xmath458 .",
    "we call the set @xmath459 _ a block_. we associate with @xmath456 the following permutation @xmath460 of @xmath461 : it starts with an arbitrary ordering of the elements in @xmath462 followed by @xmath463 arbitrarily ordered , then of @xmath464 etc",
    ". a polynomial of degree @xmath68 over a field has at most @xmath68 roots .",
    "it follows that for every two polynomials @xmath465 as above and any @xmath466 , the blocks @xmath467 and @xmath468 have at most @xmath457 elements in common .",
    "there are @xmath469 such polynomials .",
    "there are @xmath448 blocks in @xmath460 and in @xmath470 , so that @xmath471 , as claimed .",
    "this work originated with the introduction of the concept of oblivious distributed algorithms . in the present paper we concentrated on oblivious mc algorithms , a topic which yields a number of interesting mathematical challenges .",
    "we showed that @xmath5 chairs are necessary and sufficient for the existence of an oblivious @xmath77 algorithm with @xmath1 processors .",
    "still , our construction involves very long words .",
    "it is interesting to find explicit constructions with @xmath472 chairs and substantially shorter words .    in other ranges of the problem",
    "we can show , using the probabilistic method , that oblivious @xmath0 algorithms exist with @xmath293 and relatively short full words .",
    "we still do not have explicit constructions with comparable properties .",
    "we would also like to determine @xmath473 such that @xmath1 random words over an @xmath2 letter alphabet typically constitute an oblivious @xmath0 algorithm .",
    "computer simulations strongly suggest that for random permutations , a value of @xmath474 does not suffice .",
    "on the other hand , we have constructed ( details omitted from this manuscript ) oblivious @xmath20 algorithms using permutations for @xmath30 and @xmath31 ( for the latter the proof of correctness is computer - assisted ) . for @xmath475",
    "we have neither been able to find such systems ( not even in a fairly extensive computer search ) nor to rule out their existence .",
    "we do not know how hard it is to recognize whether a given collection of words constitute an oblivious @xmath77 algorithm .",
    "this can be viewed as the problem whether some digraph contains a directed cycle or not .",
    "the point is that the digraph is presented in a very compact form .",
    "it is not hard to place this problem in pspace , but is it in a lower complexity class , such as co - np or p ?",
    "afek y. , babichenko y. , feige u. , gafni e. , linial n. and sudakov b. , oblivious collaboration , _ proc .",
    "25th symposium on distributed computing ( disc11 ) _ , springer verlag lecture notes in computer science , 2011 , vol .",
    "6950 , 489 - 504 ."
  ],
  "abstract_text": [
    "<S> in the _ musical chairs _ game @xmath0 a team of @xmath1 players plays against an adversarial _ scheduler_. the scheduler wins if the game proceeds indefinitely , while termination after a finite number of rounds is declared a win of the team . at each round of the game </S>",
    "<S> each player _ occupies _ one of the @xmath2 available _ </S>",
    "<S> chairs_. termination ( and a win of the team ) is declared as soon as each player occupies a unique chair . </S>",
    "<S> two players that simultaneously occupy the same chair are said to be _ in conflict_. in other words , termination ( and a win for the team ) is reached as soon as there are no conflicts . </S>",
    "<S> the only means of communication throughout the game is this : at every round of the game , the scheduler selects an arbitrary nonempty set of players who are currently in conflict , and notifies each of them separately that it must move . </S>",
    "<S> a player who is thus notified changes its chair according to its deterministic program . as we show </S>",
    "<S> , for @xmath3 chairs the team has a winning strategy . </S>",
    "<S> moreover , using topological arguments we show that this bound is tight . for @xmath4 </S>",
    "<S> the scheduler has a strategy that is guaranteed to make the game continue indefinitely and thus win . </S>",
    "<S> we also have some results on additional interesting questions . </S>",
    "<S> for example , if @xmath5 ( so that the team can win ) , how quickly can they achieve victory ? </S>"
  ]
}
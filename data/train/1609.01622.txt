{
  "article_text": [
    "prompt detection and reporting of hazards in remote and/or hazardous regions are important applications of wireless sensor networks ( wsn ) . in general , in such applications , event occurrence rate ( eor ) is low and non - deterministic .",
    "therefore , most of the time , a sensor node remains in an idle state and most of its limited battery energy is wasted in idle listening . in addition , due to the generally unsafe nature of the monitored region in such applications , a wsn is expected to work after deployment without ( or with minimum ) human intervention for as long as possible .",
    "therefore , contention based synchronous mac protocols would be a better choice as the mac protocol in such applications , since these are typically easier to implement than contention free and hybrid macs and provide low e2etd ( end - to - end transmission delay ) compared to asynchronous macs .    in sensor mac ( smac ) @xcite , ye and heidemann adopt a periodic sleep - wake strategy to reduce the idle listening .",
    "for this , smac uses a cycle structure which contains three time windows : synchronization window ( sw ) , data transmission scheduling window ( dw ) , and sleep window ( slpw ) . in sw , each node periodically broadcasts its current sleep - wake schedule to maintain the synchronization .",
    "while , in dw , after medium contention with the help of contention window ( cw ) , a node can schedule data packet transmission . in smac , after medium contention , a node can schedule only one hop transmission of its data packets , which results in large e2etd and low packet delivery ratio ( pdr ) in multi - hop scenarios . in the routing enhanced mac ( rmac ) protocol @xcite , du et al .",
    "utilize cross - layer ( routing layer ) information , so that , after medium contention , a node can schedule multi - hop transmission of its data packets in dw . for this , rmac introduces a new control packet , termed as pioneer ( pion ) .",
    "pion contains the address of the sender , the next - hop receiver , the previous hop receiver , and the hop distance of the sender from the source of the current flow . for the next and the previous hop receiver",
    ", a pion behaves as rts @xcite and cts @xcite , respectively . with this , in a multi - hop scenario rmac significantly improve the pdr and e2etd compared to smac .",
    "however , in rmac and other similar works @xcite , a node can schedule transmission of only one data packet in a cycle , even though the node has multiple data packet to be sent to the same destination .",
    "prmac @xcite enables a node to schedule transmission of multiple data packets in a cycle . for this",
    ", prmac assumes that on the demand of the mac layer , the routing layer can provide information about the number of data packets in the queue for the requested destination , and can send them irrespective of their order in the queue . with this , prmac significantly improves the e2etd and pdr compared to rmac .",
    "however , prmac s performance in a multi - hop scenario is restricted because 1 ) a node can transmit pion packet , only when the remaining time of dw ( or time remains in beginning of slpw ) is more than or equal to the @xmath0 , where @xmath1 and @xmath2 are the transmission duration of one pion packet and short inter frame space , respectively , and ; 2 ) it accommodates both request - to - send data and confirmation - to - send data process in the dw .    in this paper",
    ", we propose a cross - layer contention based synchronous mac protocol to reduce the transmission delay for wsns in a multi - hop scenario .",
    "our proposed protocol uses a novel cycle structure which improves the e2etd and pdr by increasing the length of the multi - hop flow setup in dw compared to prmac , without increasing the duration of dw by putting the request - to - send data process in dw and the confirmation - to - send data process in slpw .    the rest of the paper is organized as follows : section ii presents a brief overview of the prmac protocol . in section iii , we describe the design details of our proposed protocol , including its cycle structure and data transmission process . in section iv",
    ", we evaluate our protocol s performance through ns-2.35 simulations based and compare its performance to prmac .",
    "finally , we conclude our work in section v.",
    "[ htbp ! ] [ fig1 ]     for the sake of completeness , we provide here a brief overview of the data transmission process of prmac . as in other existing cross - layer contention based synchronous mac protocols",
    ", prmac follows the cycle structure proposed by smac .",
    "data transmission process of prmac is shown in fig .",
    "1 , assuming that node a has two data packets to send to the two - hop distant sink s , and b is the next - hop receiver of a. in dw , after medium contention , the node a sends a pion packet to forward its data transmission request to its next - hop receiver b. pion transmitted by the node a contains following information : 1 ) a wants to send two data packets to the node b , and ; 2 ) a is the source of the current flow , i.e. , a lies at 0 hop distance from the source of the current flow .",
    "the node b transmits a pion to send the data transmission request to the node s , and to inform the node a that it can receive data packets .",
    "the pion transmitted by the b contains following information : 1 ) the number of data packets it can receive from the node a ; 2 ) the number of data packets it wants to send to s , and ; 3 ) hop distance of the node b from the source of current flow ( i.e. , the node a ) . after receiving confirmation",
    ", the node a goes in sleep .",
    "since the remaining time of dw is not sufficient to transmit a pion packet ( i.e. , time remains in the beginning of slpw is less than the @xmath0 ) , b and s also go in sleep .    at the beginning of slpw ,",
    "a and b wake up to transmit and receive the first data packet , respectively . since",
    ", the node b does nt receive confirmation to its request from s , therefore , along with a , it also goes to sleep after transmitting acknowledgement ( ack ) packet .",
    "after @xmath3 ( retransmission period ) [ 7 ] duration from the beginning of slpw , the nodes a and b wake up to transmit and receive the second data packet , respectively , and then both go in sleep . in this way , both data packets travel one hop towards s in a cycle .",
    "[ htbp ! ] [ fig1 ]     the cycle structure of our proposed protocol is shown in fig .",
    "cycle duration is divided into two windows : wake up window ( ww ) and sleep window ( slpw ) . in ww ,",
    "all the network nodes remains in active ( wake - up ) state .",
    "ww is further divided into synchronization window ( sw ) and data transmission scheduling window ( dw ) . as in @xcite , in sw",
    ", each node periodically broadcasts a sync packet , containing the sender s current sleep - wake schedule , to maintain synchronization . in dw , after medium contention with the help of cw , a node requests its next - hop receiver to receive its data packets and to forward the request further , so that , multi - hop transmission of data packets can be scheduled . for data",
    "transmission request , a node transmits rtsd packet @xcite . in proposed protocol ,",
    "a rtsd contains the following fields : 1 ) sender s address ; 2 ) receiver s address ; 3 ) hop distance of the sender from the source of the current flow ( i.e. , the node who initiates the current flow ) ; 4 ) number of data packets the sender wants to send to its next - hop receiver , and ; 5 ) the address of final destination .",
    "unlike ww , in slpw , all the network nodes remain in sleep state .",
    "it is further divided into two windows : @xmath4 and @xmath5 .",
    "@xmath4 contains n @xmath6 confirmation window ( cfw ) , and one request window ( rqw ) . here",
    ", @xmath7 and @xmath8 are the transmission duration of rtsd and duration of dw , respectively , and sifs is short inter frame space . in fig .",
    "2 , @xmath9 @xmath10 cfw is represented by @xmath11 .",
    "size of rqw and a cfw are equal to the @xmath12 and @xmath13 , respectively , where @xmath14 is the transmission duration of a ctsd packet @xcite . in case ,",
    "a node receives rtsd containing @xmath15 as the hop distance of the sender from the source of the scheduled flow , it wakes up at the beginning of @xmath16 to transmit the ctsd to its upstream node as the response of the received rtsd .",
    "the transmitted ctsd contains the sender s address , receiver s address , and number of data packets the node can receive from its upstream node . on the other hand ,",
    "if a node transmits rtsd with @xmath15 as the hop distance of the sender from the source of the scheduled flow then it wakes up at the beginning of the @xmath16 to receive the ctsd from its next - hop receiver . in @xmath5 , corresponding to the setup flow , data packets transmission process occurs .",
    "[ htbp ! ] [ fig1 ]     in this subsection , we illustrate the data transmission process of our proposed protocol , assuming that node @xmath17 has two data packets to send to the two - hop distant sink s , and @xmath18 is the next - hop receiver of @xmath17 . in its dw , after medium contention , @xmath17 sends a data transmission request to its next - hop receiver @xmath19 by transmitting a rtsd packet , and then goes to sleep .",
    "this rtsd contains the following : 1 ) address of the node @xmath17 as the sender ; 2 ) address of node @xmath18 as the receiver ; 3 ) address of node s as the final destination ; 4 ) number of data packets @xmath17 wants to send , and ; 5 ) 0 as the hop distance of @xmath17 from the source of the current flow .",
    "( note that @xmath17 is the source of the current flow in fig .",
    "3 ) . in case",
    ", the node @xmath18 can receive data packet from @xmath17 , @xmath18 sends a data transmission request to the node s , which is its next - hop receiver corresponding to the final destination in received rtsd .",
    "as done for the node @xmath17 , after transmitting rtsd @xmath18 goes in sleep .",
    "rtsd transmitted by @xmath17 contains following : 1 ) address of node @xmath18 as the sender ; 2 ) address of node s as the next - hop receiver ; 3 ) address of s as the final destination ; 4 ) number of data packets @xmath18 has to send to s , and ; 5 ) 1 as the hop distance of sender from the source of current flow ( i.e. , @xmath17 ) .    after receiving rtsd",
    ", s goes in sleep . in case",
    ", it can receive data packets from @xmath18 , it wakes up at the beginning of @xmath20 , and send a ctsd to the node @xmath18 .",
    "the ctsd sent by s contains the number of data packets s can receive from @xmath18 .",
    "similarly , at the beginning of @xmath21 , node @xmath17 sends a ctsd to inform the node @xmath17 about the number of data packets it can receive . in this way , in proposed protocol , accommodation of request - to - send data ( rtsd ) and confirmation - to - send data ( ctsd ) process in two different time windows results in the increase in the scheduled flow length by one hop compared to prmac , without increasing @xmath8 .",
    "nodes @xmath17 and @xmath18 wake up at the beginning of @xmath5 to transmit and receive the first data packet , respectively . after receiving data packet from @xmath17",
    ", @xmath18 forwards the received data packet to the node s. after @xmath22 ( retransmission period ) @xcite duration from the beginning of slpw2 , @xmath17 and @xmath18 wake up to transmit and receive second data packet , respectively .",
    "then @xmath18 forward the received data packet to the sink s. in this way , in the proposed protocol , data packets travel from source @xmath17 to destination s in one cycle .",
    "( for the same example , prmac would require two cycles as in fig",
    "we evaluate the performance of our proposed protocol using the ns-2.35 simulator .",
    "we compare our proposed protocol with prmac . for performance evaluation , we have randomly deployed @xmath23 sensor nodes in a uniform fashion to monitor an area of @xmath24 , and have placed a sink at the center @xmath25 . for performance analysis , we vary the hop distance @xmath26 between the source and sink . in our simulations , @xmath27 is varied from 1 to 6 hops . for each value of @xmath27",
    ", we randomly choose a sensor node , among the sensor nodes lying at @xmath27 hop distance from the sink , as the source node .",
    "this chosen source node generates constant bit rate ( cbr ) traffic with packet arrival interval ( pai ) 1.0s .",
    "in addition to this , in our simulations , each node is assumed to have one omnidirectional antenna and uses the two ray ground reflection radio propagation model . as in @xcite , we assume that each node is aware of its next - hop receiver as per the shortest path and all the nodes are following the same sleep - wake schedule .",
    "frame size parameters are given in table i ; cycle duration related parameters of proposed and prmac protocol are given in table ii and iii , respectively .",
    "networking parameters are similar to that of prmac @xcite .",
    ".frame sizes [ cols= \" < , < , < , < \" , ]     [ fig : subfigureexample ]    fig .",
    "4 ( a ) , fig .",
    "4 ( b ) , and fig .",
    "4(c ) show comparison of e2etd , pdr , and average energy consumption ( aec ) of prmac and proposed protocol . in fig .",
    "4 ( a ) , fig . 4 ( b ) , and fig .",
    "4 ( c ) results are averaged over @xmath28 simulations with different seeds , each lasting for @xmath29 .",
    "e2etd is defined as the difference between the reception time of the first data packet at the sink and generation time of the same data packet at the source node . as shown in fig .",
    "4 ( a ) , with increasing @xmath27 , the difference between the e2etd of prmac and proposed protocol increases . this occurs because , unlike prmac , the proposed protocol accommodates the request - to - send and confirmation - to - send data processes in two separate time windows .",
    "moreover , the proposed protocol allows a node to send a data transmission request even if the remaining time of dw is less than the duration of the rtsd packet .",
    "this can increase the scheduled flow length by up to two hops in the same duration dw in comparison to prmac .",
    "as a results , the e2etd of the proposed protocol is less than that of prmac . in fig .",
    "4 ( a ) , in case of @xmath30 , e2etd of proposed protocol is almost @xmath31 less than the prmac protocol .",
    "pdr is defined as the ratio of the total number of packets successfully received at the sink to the total packets generated at the source during simulation time . as shown in fig .",
    "4 ( b ) , the difference between the pdr of prmac and that of the proposed protocol increases with increasing @xmath27 . this happens because in the same duration dw , a node can schedule more number of hop for forwarding its data packets in the proposed protocol compared to prmac . in fig",
    ". 4 ( b ) , in case of @xmath30 , pdr of our proposed protocol is almost @xmath32 more than that of prmac .",
    "aec is defined as the ratio of total energy consumed during the simulation time divided by the number of nodes in the network . from fig .",
    "4 ( c ) , it is clear that our proposed protocol significantly improves e2etd and pdr at the cost of very small increase in aec . in comparison to prmac , in proposed protocol , aec is increased due to the accommodation of request - to - send data process and confirmation - to - send data process in separate time windows .",
    "in this paper , we proposed a new cross - layer contention based synchronous mac protocol for wsns .",
    "our proposed protocol uses a novel cycle structure , which accommodates the request - to - send and confirmation - to - send data processes in two separate time windows , to improve both e2etd and pdr .",
    "our ns-2.35 simulator based simulation result suggests that the proposed protocol is a better solution than prmac as a mac protocol for wsns deployed for monitoring the low eor delay - sensitive events in remote / hazardous regions .",
    "w. ye , j. heidemann , and d. estrin ,  medium access control with coordinated adaptive sleeping for wireless sensor networks , \" _ ieee / acm trans .",
    "493 - 506 , june 2004 .",
    "s. du , a. saha , and d. johnson ,  rmac : a routing enhanced duty cycle mac protocol for wireless sensor networks , \" _ in proc .",
    "_ , 2007 , pp .",
    "1478 - 1486 .",
    "y. sun , s. du , o. gurewitz , and d. b. johnson ,  dw - mac : a low latency energy efficient demand - wakeup mac protocol for wireless sensor networks , \" _ in proc .",
    "mobihoc _ , 2008 , pp .",
    "g. liu , and g. yao ,  srmac : staggered routing - enhanced mac protocol for wireless sensor networks , \" _ in proc .",
    "wicom _ , 2011 , pp . 1 - 6",
    ". k. t. cho , and s. bahk ,  he - mac : hop extended mac protocol for wireless sensor networks , \" _ in proc .",
    ", 2009 , pp . 1 - 6",
    ". k. t. cho , and s. bahk ,  optimal hop extended mac protocol for wireless sensor networks , \" _ comput .",
    "4 , pp . 1458 - 1469 , march 2012 .",
    "t. canli and a. khokhar ,  prmac : pipelined routing enhanced mac protocol for wireless sensor networks , \" _ in proc .",
    "icc _ , 2009 , pp . 1 - 5 .",
    "r. singh , and s. chouhan ,  a cross - layer mac protocol for contention reduction and pipelined flow optimization in wireless sensor networks , \" _ in proc .",
    "retis _ , 2015 , pp .",
    ". m. s. hefeida , t. canli , and a. khokhar ,  cl - mac : a cross - layer mac protocol for heterogeneous wireless sensor networks , \" _ ad hoc netw .",
    "213 - 225 , jan . 2013"
  ],
  "abstract_text": [
    "<S> recently designed cross - layer contention based synchronous mac protocols like the prmac protocol , for wireless sensor networks ( wsns ) enable a node to schedule multi - hop transmission of multiple data packets in a cycle . </S>",
    "<S> however , these systems accommodate both the request - to - send data process and the confirmation - to - send data process in the same data transmission scheduling window ( i.e. data window ) . </S>",
    "<S> this reduces the length of the multi - hop flow setup in the data window . in a multi - hop scenario , this degrades both the packet delivery ratio ( pdr ) and the end - to - end transmission delay ( e2etd ) . in this paper </S>",
    "<S> , we propose a cross - layer contention based synchronous mac protocol , which accommodates the request - to - send data process in the data window and the confirmation - to - send data process in the sleep window for increased efficiency . </S>",
    "<S> we evaluate our proposed protocol through ns-2.35 simulations and compare its performance with the prmac protocol . </S>",
    "<S> results suggest that in multi - hop scenario , proposed protocol outperforms prmac both in terms of the e2etd and the packet delivery ratio ( pdr ) .    end - to - end transmission delay , medium access control ( mac ) protocols , packet delivery ratio , synchronization , wireless sensor networks ( wsns ) . </S>"
  ]
}
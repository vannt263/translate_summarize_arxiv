{
  "article_text": [
    "there are some contexts in the field of information technology where the available data is limited to a set of conceptual symbols with no relations among them . in applications",
    "we have developed , icons are used on the input interface to represent linguistic concepts for people with speech disabilities , or for foreign learners of a second language ; in information extraction or indexing applications , sets of keywords may be given with no higher - level structure whatsoever ; the same situation may occur in a context of cross - linguistic communication where participants in an online discussion forum are able to exchange bare concepts through automatic search in electronic dictionaries , but are not able to master the syntactical structure of each other s language .",
    "the problem in such contexts is that there is no deterministic way to compute the semantic relations between concepts ; while the meaning of a structured message precisely resides in the network built from these relations .",
    "isolated concepts thus lack the expressive power to convey ideas : until now , the expression of abstract relations between concepts still can not be reached without the use of linguistic communication .",
    "we have proposed an approach to tackle this limitation  @xcite : a method to interpret sequences of isolated concepts by modelling the use of `` natural '' semantic knowledge is implemented .",
    "this allows to build knowledge networks from icons as is usually done from text .",
    "a first application , developed for a major electronics firm , had aimed at proposing speech - impaired people an iconic aided communication software .",
    "we are now working at improving the theory in order to implement it in the field of computer assisted language learning . here",
    "we present new formalisms to model lexical meaning and associative semantic processes , including representation of conceptual inheritance , which have been developed for the latter application .",
    "assigning a _ signification _ to a sequence of information items implies building conceptual relations between them .",
    "human linguistic competence consists in manipulating these dependency relations : when we say that `` the cat drinks the milk '' , for example , we perceive that there are well - defined conceptual connections between ` cat ' , ` drink ' , and ` milk'that ` cat ' and ` milk ' play given roles in a given process .",
    "linguistic theories have been developed specifically to give account of these phenomena @xcite , and several symbolic formalisms in ai @xcite reflect the same approach .",
    "computationally speaking , ` cat ' , ` drink ' and ` milk ' are : without relations , a set of keywords ; with relations , a structured information pattern .",
    "this has important consequences e.g. in text filtering and information retrieval .",
    "human natural language reflects these conceptual relations in its messages through a series of linguistic clues .",
    "these clues , depending on the particular languages , can consist mainly in word ordering in sentence patterns ( `` syntactical '' clues , e.g. in english , chinese , or creole ) , in word inflection or suffixation ( `` morphological '' clues , e.g. in russian , turkish , or latin ) , or in a given blend of both ( e.g. in german )",
    ". _ parsers _ are systems designed to analyze natural language input , on the base of such clues , and to yield a representation of its informational contents .    in the context of language learning , where icons have to be used to convey complex meanings , the problem is that morphological clues are of course not available , when at the same time we can not rely on a precise sentence pattern ( there is no `` universal icon grammar '' , and if we were addressing perfectly functional speakers of a given language , with its precise set of grammar rules , we would nt be using icons ) .",
    "practically , this means that , if we want to use icons as an input for computer communication , we can not rely on a parser based on phrase structure grammar ( `` cfg''-style ) to build the conceptual relations of the intended message .",
    "we should have to use a parser based on dependency computing , such as some which have been written to cope with variable - word - order languages @xcite .",
    "however , since no morphological clue is available either to tell that an icon is accusative or dative , we have to rely on semantic knowledge to guide role assignment .",
    "in other words , an icon parser has to know that drinking is something generally done by living beings and involving liquid objects .",
    "the first step is then to encode the semantic information representing this type of natural world knowledge . for this purpose",
    ", we develop an icon lexicon where the possible semantic relations are specified by feature structures among which unification can take place .",
    "however , the feature structures do not have a syntactic meaning here , like e.g. in hpsg , but a natural language semantics meaning : instead of formal grammatical features , it is specified which `` natural properties '' the different icons should have , and how they can combine with the others .",
    "every icon in the lexicon has a certain number of _ intrinsic _ attributes , defining its fundamental meaning elements .",
    "going back to our example , ` cat ' has the features _ animal _ , _ living _ , while ` milk ' has the features _ liquid _ , _",
    "food_.    in natural language semantics , some pair of concepts are defined in opposition to each other ; for the sake of modelling simplicity , we define these pairs as couples of features sharing the same attribute but with an opposite value .",
    "this modelling choice leads to define the basic feature , or intrinsic feature , as a pair @xmath0 , where the attribute @xmath1 is a symbol , and the value @xmath2 is @xmath3 or @xmath4 .    yet",
    "intrinsic features are not enough to build up relations : we need at least some first - order semantics to allow predication . hence a restricted set of icons , the predicative icons ( roughly corresponding to natural language verbs and adjectives ) ,",
    "also have sets of _ extrinsic _ ( or selectional ) features , that determine which other concepts they may incorporate as actants . these extrinsic features",
    "specify for example which properties are `` expected '' from the agent or the object of an action , or to which categories of concepts a particular adjective may be attributed : in our example , ` drink ' would have the features _",
    "agent(animal ) _ and _",
    "object(beverage)_.    this could lead to define the extrinsic feature as a pair @xmath5_ef_@xmath6 , where the case @xmath7 is a symbol , and the expected feature _ ef _ is an intrinsic feature as defined above , i.e. as being of the form @xmath8 , where case @xmath7 and attribute @xmath1 are symbols , and value @xmath2 is @xmath3 or @xmath4",
    ".    however , with such a definition , the selectional effect of an extrinsic feature can only be _ compelling _ ( the attribute is present with a value of @xmath3 ) , _ blocking _ ( the attribute is present with a value of @xmath4 ) , or null ( the attribute is absent ) . yet natural semantics involves the ability to represent gradation : in natural language for instance , a given association between words may be _ expected _ , but it does not completely block the possibility that another one be realized .",
    "so , we decide to define the extrinsic feature as @xmath8 , where @xmath7 ( the case ) is a symbol , @xmath1 ( the attribute ) is a symbol , and @xmath9 .",
    "this way of modelling allows to tune the value @xmath2 in order to make a semantic association more or less compelling .",
    "the extrinsic features contain all the information about the potential case relations that may occur in the icon language .",
    "considering a given predicative icon , its valency frame , or case frame , is strictly equivalent to the set of its extrinsic features factorized by case . considering the whole lexicon ,",
    "the case system is defined by the set of all cases appearing in any extrinsic feature of any icon .",
    "there are obvious advantages of including a representation of inheritance in the lexicon , such as : saving representation space ( ` dog ' , ` cat ' , and ` hamster ' only have a few specific features represented separately , the rest is stored under ` pet ' ) ; providing a measure of semantic distance between concepts ( how many `` common ancestors '' do they have , and at which level ? )    however , since natural concepts may be grouped in overlapping categories , there can be no unique tree - like hierarchy covering the whole lexicon .",
    "for this reason , a mechanism of multiple inheritance has been developed .",
    "the multiple inheritance model allows a single concept to inherit thematic features from a thematic group , as well as structural features from an abstract superconcept spanning different subgroups of the thematic hierarchy ( like for instance the superconcept ` action ' , which passes the extrinsic feature _",
    "agent(animal ) _ on to all specific concepts which inherit from it ) .",
    "intrinsic features as well as extrinsic features may be inherited , and passed on to more specific subconcepts .",
    "the well - known theoretical problem of multiple inheritance , namely the possibility that a concept inherit contradictory features from two separate branches of the inheritance graph , is not an actual problem in the context of a model for natural meaning .",
    "in fact , natural categories are not logical categories , and it is actually normal that contradictions may arise .",
    "if they do , they are meaningful and should not be `` solved '' .",
    "specifically , in the analysis application described below , feature values are added , so if an attribute appears once with a positive value , and once with a negative one , it counts as if its value were zero .",
    "it is important to note that concept labels may be used as attributes in semantic features , like when we want to specify that the object of ` drink ' has to be a ` beverage ' .",
    "this means that we do not postulate any ontological difference between a feature and a concept . as a matter of fact ,",
    "studies in natural language semantics , for instance , always represent features by using words : features simply are more primitive concepts than the concepts studied .",
    "so , when we say that concept _ a _ inherits from concept _ b _ ( is a subconcept of concept _ b _ ) , we mean exactly the same thing as when we say that concept _ a _ has the feature _ b _ , and there is a unique formal representation for all this , like in the example below :    an important practical consequence of this is that we can talk of feature inheritance : this will be used in the analysis process .",
    "the icon parser we propose performs semantic analysis of input sequences of icons by the use of an algorithm based on best - unification : when an icon in the input sequence has a `` predicative '' structure ( it may become the head of at least one dependency relation to another node , labeled `` actant '' ) , the other icons around it are checked for compatibility .",
    "semantic compatibility is then measured as a unification score between two sets of feature structures : the intrinsic semantic features of the candidate actant :    @xmath10    and the extrinsic semantic features of the predicative icon attached to the semantic role considered , the case @xmath7 :    @xmath11    ( where @xmath12 are extrinsic features of the predicate ) .    the basic idea is to define compatibility as the sum of matchings in the two sets of attribute - value pairs , in ratio to the number of features being compared to .",
    "note that semantic compatibility is not a symmetric norm : it has to measure how good the candidate actant ( i.e. the set @xmath13 ) fits to the expectations of a given predicative concept in respect to its case @xmath7 ( i.e. to the set @xmath14 ) . hence there is a _ filtering _ set ( @xmath15 ) and a _ filtered _ set ( @xmath13 ) .",
    "the asymmetry shows itself in the following definition of the compatibility function , in that the denominator is the cardinal of @xmath15 , not of @xmath13 :    @xmath16}{\\sum_{i \\in [ 1,m]}{f(\\langle{}a_{1i},v_{1i}\\rangle{},\\langle{}a_{2j},v_{2j}\\rangle{})}}}{n}\\enspace{},\\end{aligned}\\ ] ]    where @xmath17 is a matching function defined on pairs of individual features , not on pairs of sets of features .",
    "now the compatibility function @xmath17 has to be defined at the level of the features themselves so as to take into account the inheritance phenomena .",
    "so we define @xmath18 ( where @xmath19 is the intrinsic @xmath20filtered@xmath21 $ ] feature , and @xmath22 the extrinsic @xmath20filtering@xmath21 $ ] feature ) , as following :    * if the two attributes are the same ( @xmath23 ) : + @xmath24 ; * if @xmath25 ( @xmath26 includes @xmath27 in its signification , i.e. @xmath26 is a subtype of @xmath27 ) : + [ cols=\">,^,<,^ , < \" , ]     let us explain and illustrate this definition by simple examples",
    ". suppose we want to test whether some icon possessing the feature _ dog _ ( @xmath28 ) is a good candidate for being the agent of the verb ` bark ' ; ` bark ' having an extrinsic feature _",
    "agent(dog ) _ ( @xmath29 ) .",
    "we will then be trying to evaluate @xmath30 .",
    "this is the case 1 , and the result will be 1 . if we had tried to match this same icon to a verb whose agent _ should not _ be a dog ( @xmath31 ) , the result would of course have been @xmath4 .",
    "now suppose we want to match _ dog _ to a verb which only expects its agent to be an animal .",
    "we will have to evaluate @xmath32 .",
    "_ dog _ being a subtype of _ animal _ , we have @xmath33 , so we are in the case 2 , and the result is 1 ( a dog fulfills entirely the expectation of being an animal ) .",
    "if on the other hand we wanted to match some concept of which we know it is _ not _ a dog , because it has the feature @xmath34 , to the semantic role where an animal is expected , we could obviously draw no conclusion from the only fact that it is not a dog .",
    "not being a dog does not imply not being an animal .",
    "this is why in this particular subcase of case 2 , the result is 0 .",
    "now if we want to match _ dog _ to some semantic role where an _ object _ is expected , we find that @xmath35 , and _ object _ and _ living being _ being mutually exclusive , we are in the case 3 and find the value @xmath4 .",
    "like in case 2 , there is a subcase of case 3 where the result is @xmath36 because no conclusion can be drawn ( e.g. we can not deduce from something not being a dog that it is a non living object ) .",
    "finally let us suppose that we want to match some animal which is not a dog to the agent role of ` bark ' , which expects _",
    "dog_. the candidate concept does not possess the feature @xmath28 but it possesses the feature @xmath37 .",
    "it would be inappropriate , in this case , that this concept should have no better score than any other : being an animal , it is semantically `` closer '' to _ dog _ than an inanimate object , for example , would be ( this is what allows , in natural language semantics , sentences like `` the police superintendent barks '' @xcite ) .",
    "this is why , in this case , we break up _ dog _ into more primitive components and recursively call the function @xmath38 ( compatibility on sets of features ) , so that @xmath37 will eventually meet @xmath37 , and will yield a positive , though fractional , result .",
    "a dummy feature is added so that the compatibility value loose a small proportion of itself in this operation of breaking up , by incrementing the denominator .",
    "note that the recursivity ( @xmath38 is based on @xmath17 and @xmath17 is  partially  based on @xmath38 ) is not infinite , since the decomposition always falls back on primitive features : there is no infinite loop .",
    "this is guaranteed , not by the definition of the functions themselves , but by the fact that the inheritance graph is a direct graph .",
    "globally , for every predicate in the actual input sequence , the analysis process seeks to assign the best actant for every possible role of the predicate s immanent conceptual structure .",
    "the absolute compatibility between the predicate and the actant , defined in the sense of the function @xmath38 described above , is weighted by a function valued between 0 and 1 and decreasing with the actual distance between the two icons in the sequence .    the result yielded by the semantic parser",
    "is the graph that maximizes the sum of the compatibilities of all its dependency relations .",
    "it constitutes , with no particular contextual expectations , and given the state of world knowledge stored in the iconic database in the form of semantic features , the `` best '' interpretation of the users input .",
    "a primitive version of the semantic analysis algorithm has been implemented in 1996 for rehabilitation purposes , within a french electronics firm ( thomson - csf ) , in the frame of a software communication tool for speech - impaired people @xcite .",
    "the evaluation led to acceptable performance in analysis accuracy ( 80.5 % of the sequences correctly analyzed on a benchmark of 200 samples ) . however",
    "the acceptance level by the user remained low , due to a strongly time consuming recursive algorithm ( the complexity and time grew in a @xmath39 relation to the size of the input ) .",
    "an application to the field of call ( computer assisted language learning ) is currently being developed at the humboldt university of berlin .",
    "the application prototype aims at allowing learners of german as a second language to practice communication in that language at home or in tutorial classes .",
    "the users first tell the computer what they intend to express by pointing to icons .",
    "the system interprets these icons semantically , and proposes a choice of rated formulations ( 1 ) in the form of conceptual graphs , and ( 2 ) as full german sentences .",
    "the users are then allowed to `` play '' with the graph to discover how to express variations or refinements , in particular concerning nuances in verbs like expressed in kunze s theory of verb fields @xcite .",
    "this application is made possible by mapping the results of the semantic analysis into a lexical database of the german language developed by the chair for computational linguistics at the humboldt university ( fig .",
    "[ system - structure ] ) .",
    "the implementation principles have been renewed in this application , so as to develop a form of parser storing its intermediate results ( inspired by `` chart parsers '' for cfg grammars ) .",
    "this allows considerably less backtracking , and hence a big gain in computational complexity ( now measured in @xmath40 ) , and removes one of the major impediments of the method .",
    "covington , michael . 1990 . .",
    "research report ai-1990 - 01 .",
    "athens , georgia ( u.s.a . ) : university of georgia , artificial intelligence programs . retrieved @xmath20october 1999@xmath21 $ ] from the url : ` http://www.ai.uga.edu/mc/ai199001.ps `      kunze , j. 1993 . .",
    "antrittsvorlesung des 24 .",
    "november 1993 .",
    "ffentliche vorlesungen , heft 21 .",
    "berlin ( germany ) : humboldt universitt zu berlin .",
    "available @xmath20february 2000@xmath21 $ ] at the url : + ` http://www.compling.hu-berlin.de/vaillant/verbfeldstrukturen.pdf `            vaillant , pascal .",
    "1997 . `` a semantics - based communication system for dysphasic subjects '' .",
    "6@xmath41 _ conference on _ artifical intelligence in medicine europe , grenoble ( france ) .",
    "elpida keravnou , catherine garbay , robert baud and jeremy wyatt ( eds . ) .",
    "lecture notes in computer science , * 1211 * : 381392 .",
    "berlin : springer ."
  ],
  "abstract_text": [
    "<S> allowing users to interact through language borders is an interesting challenge for information technology . for the purpose of a computer assisted language learning system </S>",
    "<S> , we have chosen icons for representing meaning on the input interface , since icons do not depend on a particular language . however , a key limitation of this type of communication is the expression of articulated ideas instead of isolated concepts . </S>",
    "<S> we propose a method to interpret sequences of icons as complex messages by reconstructing the relations between concepts , so as to build conceptual graphs able to represent meaning and to be used for natural language sentence generation . </S>",
    "<S> this method is based on an electronic dictionary containing semantic information . </S>"
  ]
}
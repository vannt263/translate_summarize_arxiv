{
  "article_text": [
    "the game of cops and robbers ( defined at the end of this section ) is usually studied in the context of the minimum number of cops needed to have a winning strategy , or _",
    "cop number_. the cop number ( written @xmath0 for a graph @xmath1 ) is a challenging graph parameter for a variety of reasons , and establishing upper bounds for this parameter are the focus of meyniel s conjecture : the cop number of a connected @xmath2-vertex graph is @xmath3 for additional background on cops and robbers and meyniel s conjecture , see the recent book  @xcite .    the following elegant upper bound was given in @xcite : @xmath4where @xmath5 is the treewidth of @xmath6 the bound ( [ first ] ) is tight if the graph has small treewidth ( up to treewidth @xmath7 further , it gives a simple proof that outerplanar graphs have cop number at most @xmath8 ( first proved in @xcite ) .    for many families of graphs , however ,",
    "the bound ( [ first ] ) is far from tight ; for example , for a positive integer @xmath2 , a clique @xmath9 has treewidth @xmath10 but is cop - win . similarly ,",
    "cartesian @xmath11 grids @xmath12 have cop number @xmath13 but have treewidth @xmath14    in this short note , we give a new bound on the cop number that exploits tree decompositions , and in some cases improves on ( [ first ] ) .",
    "the idea of the proof of ( [ first ] ) is to guard bags and use isometric paths to move cops from one bag to another .",
    "we modify this approach , and our main tool is the notion of a retract , and a retract cover of a graph .",
    "see theorems  [ main1 ] , [ i ] , and [ main2 ] . besides giving the correct bounds for various families ( such as grids , cliques , and @xmath15-trees ) , our results give a new approach to bounding the cop number by exploiting properties of tree decompositions .",
    "we consider only finite , reflexive , undirected graphs in the paper .",
    "for background on graph theory , the reader is directed to @xcite .",
    "the game of _ cops and robbers _ was independently introduced in  @xcite and the cop number was introduced in  @xcite .",
    "the game is played on a reflexive graph ; that is , vertices each have at least one loop .",
    "multiple edges are allowed , but make no difference to the game play , so we always assume there is exactly one edge between adjacent vertices .",
    "there are two players consisting of a set of _ cops _ and a single _",
    "robber_. the game is played over a sequence of discrete time - steps or _",
    "rounds _ , with the cops going first in round @xmath16 and then playing alternate time - steps .",
    "the cops and robber occupy vertices ; for simplicity , we often identify the player with the vertex they occupy .",
    "we refer to the set of cops as @xmath17 and the robber as @xmath18 when a player is ready to move in a round they must move to a neighbouring vertex . because of the loops , players can _ pass _ , or remain on their own vertex . observe that any subset of @xmath17 may move in a given round .",
    "the cops win if after some finite number of rounds , one of them can occupy the same vertex as the robber ( in a reflexive graph , this is equivalent to the cop landing on the robber ) .",
    "this is called a _ capture_. the robber wins if he can evade capture indefinitely .",
    "if we place a cop at each vertex , then the cops are guaranteed to win .",
    "therefore , the minimum number of cops required to win in a graph @xmath1 is a well - defined positive integer , named the _ cop number _ ( or _ copnumber _ ) of the graph @xmath6 we write @xmath0 for the cop number of a graph @xmath19 .",
    "in the special case @xmath20 we say @xmath1 is _ cop - win_.    an induced subgraph @xmath21 of @xmath1 is a _ retract _",
    "if there is a homomorphism @xmath22 from @xmath1 onto @xmath21 so that @xmath23 for @xmath24 that is , @xmath22 is the identity on @xmath25 the map @xmath22 is called a _",
    "retraction_. for example , each isometric path is a retract ( as shown first in @xcite ) , as is each clique .",
    "each retract @xmath21 with retraction @xmath22 can be _ guarded _ by a set of cops in the following sense : if the robber is on @xmath26 , then the cops play in @xmath21 as if the robber were on @xmath27 . if there are a sufficient number of cops to capture the image of the robber , then , after finitely many rounds , if the robber entered @xmath21 he would be immediately caught .",
    "we denote the minimum number of cops needed to guard @xmath21 by @xmath28 .",
    "note this parameter is well - defined , as each vertex of @xmath21 can be guarded . in the case of an isometric path @xmath29",
    ", it was shown in @xcite that @xmath30",
    "in a tree decomposition , each vertex of the graph is represented by a subtree , such that vertices are adjacent only when the corresponding subtrees intersect . formally , given a graph @xmath31 , a _ tree decomposition _ is a pair @xmath32 , where @xmath33 is a family of subsets of @xmath34 called _ bags _ , and @xmath35 is a tree whose vertices are the subsets @xmath36 , satisfying the following three properties .    1 .",
    "@xmath37 that is , each graph vertex is associated with at least one tree vertex .",
    "2 .   for every edge @xmath38 in the graph",
    ", there is a subset @xmath39 that contains both @xmath40 and @xmath41 .",
    "that is , vertices are adjacent in @xmath1 only when the corresponding subtrees have a vertex in common .",
    "3 .   if @xmath39 , @xmath42 and @xmath43 are nodes , and @xmath43 is on the path from @xmath36 to @xmath44 then @xmath45 .    item ( 3 ) is equivalent to the fact that for each vertex @xmath26 , the bags containing @xmath26 form a subtree of @xmath46 the _ width _ of a tree decomposition is the size of its largest set @xmath36 minus one .",
    "the _ treewidth _ of a graph @xmath47 written @xmath48 is the minimum width among all possible tree decompositions of @xmath1 . for more on treewidth ,",
    "see @xcite .",
    "given an induced subgraph @xmath21 of @xmath47 a _ cover _ of @xmath21 in @xmath1 , written @xmath49 is a set of induced subgraphs @xmath50 of @xmath1 whose union contains @xmath21 ( note that the subgraphs @xmath51 need not be disjoint ) .",
    "retract cover _ of @xmath21 in @xmath1 is a cover where each @xmath51 is a retract ; we write @xmath52 to denote a retract cover",
    ". see figure  [ zero ] for an example .",
    "define the _ retract cover cop number _ of @xmath21 by @xmath53 where the minimum ranges over all retract covers @xmath52 of @xmath21 in @xmath6 for example , @xmath54 in the graph in figure  [ zero ] , while @xmath55 .",
    "a retract cover which achieves this minimum is called a _ minimal retract cover _ of @xmath21 .",
    "note that if @xmath56-many cops are available , then after the finitely many rounds , the cops can be positioned so that if the robber entered @xmath57 he would be immediately caught : for each retract in a retract cover of @xmath57 the appropriate number of cops guard that retract .",
    "this is an essential observation used to prove the following theorem . for a bag @xmath58",
    ", we use the notation @xmath59 for the subgraph induced by @xmath60    [ main1]if @xmath1 is a graph , then@xmath61 where the minimum ranges over all tree decompositions @xmath35 of @xmath1 .",
    "for example , if @xmath1 is the @xmath11 cartesian grid @xmath12 , then the following is a tree decomposition of @xmath1 into isometric paths .",
    "label the vertices as @xmath62 , where @xmath63 for @xmath64 and @xmath65 consider the path @xmath66 see figure  [ one ] for an illustration of one such path in the case @xmath67 .",
    "as the retract cover number of an isometric path is @xmath68 this tree decomposition and theorem  [ main1 ] gives an upper bound of @xmath8 for the cop number of grids ( and of course , @xmath8 is the correct value ) .",
    "let @xmath69 and let @xmath70 be a fixed tree decomposition of @xmath1 realizing the minimum .",
    "place @xmath71 arbitrarily cops in a fixed bag @xmath58 of @xmath35 ( any bag will do , or the cops can all move to a bag in the centre of the tree to speed up capture ) .",
    "we call one team of @xmath72 cops @xmath73 and the other @xmath74",
    ". match each cop @xmath17 from @xmath73 with a unique cop @xmath75 from @xmath76 so that the cops @xmath17 and @xmath75 share each other s positions .",
    "( in particular , at this phase of the cops strategy , there are at least two cops at any position occupied by the cops ) . after a finite number of rounds , the cops can position themselves on a minimal retract cover of @xmath77 so that @xmath77 is guarded .",
    "hence , @xmath78 can not enter @xmath60 let @xmath79 be the unique bag adjacent to @xmath58 in @xmath35 which is on a shortest path connecting the bag @xmath58 to a bag containing the robber .",
    "( note that since the set of bags containing the robber is a subtree of @xmath35 , the robber is not necessarily in a unique bag .",
    "however , as @xmath35 is a tree , there is a unique bag neighbouring @xmath58 which has shortest distance to the subtree containing the robber . )",
    "the cops would like to move to @xmath79 in such a way that @xmath78 can not enter @xmath60 the team @xmath73 of cops remains in the minimal retract cover of @xmath77 and continue to guard it ; the team @xmath74 moves to a minimal retract cover of @xmath80 , and , after finitely many rounds guards @xmath80 .",
    "note that @xmath81 remains guarded throughout the transition .",
    "the cops in @xmath73 are now free to move without concern that @xmath78 will enter @xmath60    now the cops in team @xmath73 can then move to a minimal retract cover @xmath52 of @xmath82 where @xmath83 is the unique bag adjacent to @xmath84 which is on a shortest path in @xmath35 to a bag containing the robber .",
    "team @xmath73 then guards @xmath52 .",
    "note that we may now swap the roles of @xmath73 and @xmath85 , and we have moved the cops closer to the robber in the tree @xmath46 we call the process of moving @xmath73 from a minimal retract cover of @xmath58 to a minimal retract cover of @xmath83 a _ leap step _ , as the cops in @xmath73 move through @xmath84 and onwards toward @xmath83",
    ". see figure  [ leap ] .",
    "[ h ! ]    by the definition of tree decomposition , the bags containing @xmath78 form a subtree @xmath86 of @xmath46 by an iterated application of leap steps ( after each such step , we swap the roles of teams @xmath73 and @xmath85 ) for each bag on a shortest path connecting the cops bag to the robbers , the cops move closer to @xmath86 , ensuring the robber will never enter bags previously guarded by the cops .",
    "by induction on the number of vertices of @xmath35 , the cops may capture the robber .",
    "observe that the proof of theorem  [ main1 ] gives an algorithm for capturing the robber .",
    "further , we can estimate the length of the game using this algorithm . to be more precise , the _ length _ of a game is the number of rounds it takes ( not including the initial or @xmath87th round ) to capture the robber .",
    "we say that a play of the game with @xmath0 cops is _ optimal _ if its length is the minimum over all possible strategies for the cops , assuming the robber is trying to evade capture for as long as possible .",
    "there may be many optimal plays possible ( for example , on @xmath88 the cop may start on either vertex of the centre ) , but the length of an optimal game is an invariant of @xmath6 we denote this invariant @xmath89 which we call the _ capture time _ of @xmath6 for a bound on the capture time in terms of the strategy in the proof of theorem  [ main1 ] , note that the cops move to a bag in the centre of @xmath35 , guard that bag , then move towards the robber s bag .",
    "given a tree decomposition @xmath35 , let the number of rounds it takes to guard a minimal retract cover of any bag in @xmath35 be at most @xmath90 .",
    "let @xmath91 be the number of rounds it takes to move from a minimal retract cover of a bag @xmath58 to a minimal retract cover of a bag which is at most distance two from @xmath58 in @xmath35 ( for instance , as in a leap step ) .",
    "since the capture time of @xmath35 is @xmath92 and the worst case is that the cops will need to guard each bag and transition along each edge of a path with that length , a bound on the capture time of @xmath1 is then @xmath93 where the minimum ranges over all tree decompositions @xmath35 of @xmath6    the bound ( [ two ] ) may be far from the tight , as it depends on the values of the functions @xmath90 and @xmath91 .",
    "we can make a minor improvement on ( [ two ] ) in the case @xmath94 is odd ( which implies that the centre of @xmath35 consists of two vertices ) .",
    "start each of the two teams of cops on a minimal retract cover of different bags associated with the two bags of the centre of @xmath35 .",
    "after each of these bags is guarded , the guards may proceed with leap steps . using this algorithm ,",
    "a bound on the number of steps to capture the robber is found replacing the ceiling functions in ( [ two ] ) with floor functions .",
    "nevertheless , ( [ two ] ) represents the first estimate on the capture time we are aware of applicable to diverse families of graphs such as outerplanar graphs .",
    "we note that if each bag is a clique , then the idea of the proof shows a strengthened bound .",
    "[ i ] if @xmath1 has a tree decomposition with each bag a clique , then the graph @xmath1 is cop - win .",
    "the proof is analogous as before , but one cop is needed to guard a given bag .",
    "that cop can move to @xmath81 without concern that @xmath78 will enter @xmath60    theorem  [ i ] gives an alternative proof that chordal graphs are cop - win , as chordal graphs are precisely those graphs with tree decompositions where each bag induces a clique ; see  @xcite .",
    "note also that @xmath15-trees are chordal , and have treewidth @xmath95 in particular , the bound ( [ first ] ) is linear in @xmath96 while theorem  [ i ] requires only one cop .",
    "we finish with a bound in the case where there are conditions on the intersection of bags .",
    "[ main2]if @xmath1 is a graph with a tree decomposition @xmath35 with the property that any two bags intersect in a clique , then@xmath97    the proof is analogous to the proof of theorem  [ main1 ] , except the team @xmath98 consists of one additional cop @xmath75 . using the notation of the proof of theorem  [ main1 ] , @xmath72-many cops guard @xmath99 while the cop @xmath75 moves to @xmath81 .",
    "hence , @xmath77 is guarded .",
    "the cops @xmath73 can move to a minimal retract cover of @xmath80 and @xmath75 ensures that @xmath78 never enters @xmath100 ( note that @xmath81 is a cut - set of @xmath101 the cops may now iterate this procedure and , by induction on the number of vertices of the tree decomposition , eventually capture the robber .",
    "the authors would like to thank birs where part of the research for this paper was conducted ."
  ],
  "abstract_text": [
    "<S> in this short note , we supply a new upper bound on the cop number in terms of tree decompositions . our results in some cases extend a previously derived bound on the cop number using treewidth . </S>"
  ]
}
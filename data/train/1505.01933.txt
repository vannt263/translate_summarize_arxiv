{
  "article_text": [
    "video streaming is a major internet service that has been widely used to carry both daily and major events ( e.g. , news , tv , sports , etc . ) . with the proliferation of mobile devices ,",
    "streaming services continue to permeate into our daily lives further .",
    "meanwhile , as technology evolves , videos with increasingly higher resolution are becoming available ( e.g. , 8k uhd supports 33 megapixels ) . due to screen size constraints ( especially on mobile devices ) and bandwidth constraints , however , video streaming playback is still limited in resolution . as a result ,",
    "high resolution videos are typically scaled down before transmission , leading to a loss in information .    to address the mismatch of video resolution between the capture device and playback , zoomable video streaming",
    "has recently been proposed @xcite .",
    "a zoomable video supports zoom and pan as two new operations for a user to interact with the video .",
    "in particular , a user is able to zoom into a selected region of interest ( roi ) in the video , to view the roi with higher resolution .",
    "the user essentially views the video through a viewport that defines a rectangular region in the high resolution video , from which the displayed video is cropped .",
    "while zooming in , users can pan around by moving the viewport to view different regions in the video .    in this paper",
    ", we are concerned with wireless multicasting of zoomable video streams , which can arise in scenarios such as interactive tv or live events such as broadcasting lectures in campus @xcite , stage performances in concert , and sports in stadium ( including esports for spectating rts games ) .",
    "multicast is a natural operation for transmitting these contents , as existing studies have reported that users tend to zoom into a small clusters of regions in the video  @xcite with substantial overlaps in their views .    in live zoomable video streaming system",
    "@xcite , multiple resolution levels are available for each video stream . for a given screen",
    "pixel size , the desired resolution level of a user depends on the size of the selected region of interest ( roi ) . to stream efficiently ,",
    "the video is broken into a grid of small , independently decodable regions , each is termed as a _ tile _ in this paper .",
    "instead of transmitting the whole frame , a minimum set of tiles covering the selected roi with the desired resolution level is delivered .",
    "the problem that we consider in this paper is the following : given the available time slots for video transmission and the selected roi regions , how to determine , for each tile , at which resolution level should it be multicasted to maximize the overall utility of all users ?",
    "there are two challenges in the aforementioned problem .",
    "first , the scheme has to deal with changes in both roi and the wireless channel that affects the supported link rates .",
    "second , the solution has to be computational efficient and scalable ( with respect to number of users / sessions , video qualities , link rate , and time horizon ) .    in this work",
    ", we propose a novel and efficient algorithm to optimally solve this zoomable multicast problem .",
    "our algorithm is inspired by several recent works @xcite that look into the design of optimal algorithm for video multicast allocation with a focus on heterogeneous link rates . to evaluate our algorithm",
    ", we implemented the algorithm on a testbed that consists of the following key components : ( i ) mobile clients that support zoomable video functions , ( ii ) video server that supports streaming of zoomable video , and ( iii ) a proxy that collects client roi requests and wireless link conditions , runs the resource allocation algorithm , and multicasts the videos obtained from the server to the clients .",
    "the major contributions of our work are as follows : ( i ) we model the zoomable video multicast problem as an optimization problem and develop an optimal algorithm that decides which resolution of which tile should be transmitted at which link rate .",
    "the proposed optimal multicast improves the average video quality by up to 12db , 6db , and 3db in terms of psnr compared with three baseline schemes , _ adaptive unicast _ , _ adaptive multicast _ , and _ approximate multicast _ , respectively .",
    "( ii ) if we consider each tile as an individual video session , our proposed algorithm can be applied to the optimal allocation of multi - sessions adaptive video streaming as well , and has a lower , more practical , running time ( grows linearly with the number of time slots ) than the existing optimal allocation algorithms @xcite .",
    "( iii ) we evaluate our solution on a wireless streaming testbed with up to 10 android phones .",
    "the rest of the paper is structured as follows .",
    "section [ sec : relatework ] discusses the related work . in section [ sec : background ] , we review the background of tiled zoomable streaming and mixed resolutions tiling scheme .",
    "section [ sec : problemdescription ] states our maximization problem .",
    "we present our optimal algorithm in section [ sec : algorithm ] .",
    "the system implementations are detailed in section [ sec : implementation ] and performance evaluation results of our algorithm on android platform are presented in section [ sec : evaluation ] .",
    "the conclusion is made in section [ sec : conclusion ] .",
    "a tremendous amount of previous work aims at improving video multicast streaming system by dynamically adapting video data rates and multicast link rates . in this section , we discuss only the most relevant work which can be broadly classified into three categories : adaptive video multicast , multicast link rate adaptation , and adaptive video with multicast link rate adaptation .    * adaptive video multicast . *",
    "many adaptive video multicast streaming approaches have been proposed to improve the performance of video streaming system @xcite .",
    "liu et al .",
    "@xcite present an overview of existing studies and illustrate the advantages of adaptive streaming over non - adaptive streaming . the problem of rate - adaptive optimized streaming is reduced to the error - cost optimized transmission problem in the following study  @xcite .",
    "this work also derives a fast practical algorithm to solve the formulated optimization problem .",
    "most of these works focus on adapting the video rate ( quality ) with the fixed low multicast link rate , which may under - utilize the networking resources",
    ".    * multicast link rate adaptation . * recently , multicast link rate adaptation mechanisms have been suggested @xcite . instead of using the basic rate ,",
    "a relatively high broadcast rate is used for packet delivery , and fec schemes are leveraged to protect the data from packet losses @xcite .    among these work ,",
    "the most relevant works are dircast  @xcite and medusa  @xcite .",
    "dircast multicasts packet at the link rate of the worst client for each access point ( ap ) and takes into account the rate anomaly problems .",
    "we adopt similar mechanisms .",
    "medusa prioritizes the frames according to their importance and transmits the less important frames at higher link rates . by utilizing this frame level rate assignment heuristic",
    ", medusa achieves higher video quality with limited resources .    * adaptive video with multicast rate adaptation . *",
    "to further improve streaming performance , the last category of research jointly adapts video data rate and multicast link rate .",
    "this category is the most related to our work .",
    "deb et al .",
    "@xcite investigate the utility optimization problem of scalable video multicast and prove that this problem is np - hard . a greedy algorithm",
    "is then proposed to schedule the transmissions of layers and determine the corresponding modulation and coding scheme ( mcs ) assigned for each transmission .",
    "li et al .  @xcite suggest a pseudo - polynomial algorithm with dynamic programming to solve the optimization problem .",
    "most recently , muvi  @xcite has been designed to investigate the optimal multicast scheduling problem for videos encoded with i , p , and b frames .",
    "as the computational complexity of the suggested algorithm  @xcite grows quadratically with the number of available time slots , it fails to efficiently solve the optimization problem with multiple multicast sessions . to reduce the computational complexity especially for the case of multiple sessions",
    ", a fully polynomial time approximation algorithm is presented  @xcite .",
    "the approximation factor , however , linearly decreases with the number of multicast sessions .",
    "our approach falls under the category of adaptive video with multicast link rate adaptation .",
    "in contrast to previous work , we focus on a scenario where each user is interested in a subset of video tiles and user interests may partially overlapped .",
    "our algorithm can also be easily applied to the optimization problems with multiple sessions .",
    "in this section , we review the background of _ mixed resolutions tiling scheme _ , which is proposed by wang et al .  @xcite .",
    "moreover , to evaluate the perceptual quality of this scheme , the conducted psychophysical experiment is presented as well .",
    "zoomable video streaming is typically achieved using a technique called _ tiled streaming _ , where video frames are broken into a grid of tiles ( figure [ fig : tilebroken ] ) .",
    "we can view the video as a three dimensional matrix of tiles .",
    "tiles at the same @xmath0-@xmath1 position in the matrix are temporally grouped and coded along @xmath2 axis .",
    "the video is encoded into different resolutions to support zooming .",
    "the zoom - out view corresponds to the lowest resolution . as the user zooms in , a minimum set of tiles from the higher resolution video covering the roi region",
    "is streamed .",
    "the location of roi can be changed by panning , while the resolution can be changed by zooming .",
    "the tiles in the same @xmath0-@xmath1 are decoded together by the zoomable player at the client side .",
    "the tile groups with different @xmath0-@xmath1 positions can be decoded in parallel , each frame is formed by the uncompressed tiles with same @xmath2 position .",
    "the frame will be displayed in the original order by the zoomable player when all the corresponding tiles are uncompressed .        in existing works",
    "@xcite , at the server side , an original video is normally encoded into different versions ( streams ) : frames of a low - resolution stream are constructed from a smaller number of tiles ; and frames of higher - resolution streams are constructed from a larger number of tiles . at the client side , the number of tiles required to cover the physical screen resolution is fixed , therefore , the bandwidth consumption for each user will be mostly constant .",
    "initially , a low resolution version of the video will be sent to users .",
    "when a user zooms into a roi within the video , the server will first determine a suitable high - resolution stream based on the requested roi size ( zoom level ) .",
    "it then selects tiles covering the requested roi from this stream .",
    "this mechanism allows users to see their regions of interest in detail without consuming more bandwidth .",
    "the afore - mentioned roi cropping technique performs well in small scale networks by unicasting video stream . in one of the use case we consider",
    ", the video stream is consumed by a large number of users within one location ( e.g. , in a concert hall or stadium ) . to overcome the scalability issues with such a large number of users and roi requests , wireless multicast scheme is employed .",
    "when the roi regions from multiple users partially overlap , tiles from the overlapped regions could be potentially multicasted to all interested users to save bandwidth consumption . in zoomable video , different users , however , may have different zoom levels ( i.e. , different roi sizes ) and will need tiles from different versions encoded at different resolutions , which prevents the potential benefits of wireless multicast .    instead of fixing tile size , using",
    "a fixed number of tiles to encode and decode videos could be more effective . at the server side ,",
    "an original video will be encoded into different resolution versions , but all versions consist of the same number of tiles . the same amount of tiles is required at the client side to decode each video frame . within a frame , however , different tiles could come from different resolution streams .",
    "if a tile comes from a stream with resolution lower / higher than requested level , it will be scaled up / down accordingly . in zoomable video , when a user zooms into a region of interest ( roi ) within the video , the server will first determine the tiles covering this roi , and then associate each tile with an appropriate stream version , depending on their popularity and the resource constraints . the proposed _ mixed resolutions tiling _ scheme has the following two essential advantages in tiled video streaming .",
    "first , benefiting from the scaling up / down operations for each tile , the multicast transmissions are considerably reduced .",
    "next , by intelligently allocating resolution version to each tile , the mixing resolutions approach may considerably reduce bandwidth consumption without impairing much perceived video quality .",
    "for instance , the popular regions / tiles requested by many users could come from high - resolution streams ; while tiles requested by one or few users could come from a low - resolution stream under limited bandwidth condition .",
    "although this proposed scheme saves bandwidth , the impairment to the perceived quality is still unclear .",
    "thus , to understand if , and at what thresholds , users could notice and /or",
    "accept the difference between original video and tiled video with mixed resolutions , we conducted a psychophysical study with 50 participants , which is presented in the remainder of this section .      using the _ method of limits _ from psychophysics  @xcite",
    ", we measure two perceptual thresholds  just noticeable difference ( jnd ) and just unacceptable difference ( jud )  to understand the user perception about the quality of mixed - resolution tiled video .",
    "the two identified difference thresholds partition the quality degradation level ( introduced by mixing tile resolutions ) into the following three intervals : without noticeable quality degradation , with noticeable ( but acceptable ) quality degradation , and with unacceptable quality degradation .",
    "[ ht ]      the experiments assess the quality of mixed - resolution tiled video using three standard hd ( 1920@xmath31080p ) test video files , _ crowd - run _",
    "( dense motion , 50fps ) , _ old - town - cross _ ( medium motion , 50fps ) , and _ rush - hour _ ( low motion , 25fps ) .",
    "we have five resolution levels for each video file , these levels are labeled from 5 to 1 ( table [ tab : resolutionsize1 ] ) .",
    "the pixels of the original video frame at five resolution levels are : 1920@xmath31080 , 1600@xmath3900 , 1280@xmath3720 , 960@xmath3540 , and 640@xmath3360 .    in the experiments , we construct mixed - resolution tiled video by mixing two resolution levels , where the higher resolution level is denoted as @xmath4 and the lower resolution level",
    "is denoted as @xmath5 .",
    "specifically , given a pair of @xmath4 and @xmath5 , we randomly allocate resolution level @xmath4 or @xmath5 to each tile with equal probability . for any particular pair of @xmath4 and @xmath5 , we restrict the range of @xmath4 as @xmath6 and the range of @xmath5 as @xmath7",
    ". figures  [ fig : mixedresvideocrowdrun ] ,  [ fig : mixedresvideooldtowncross ] , and  [ fig : mixedresvideorushhour ] show the screenshots of mixed - resolution tiled video .",
    "since the aspect ratio of the test hd video frame sequences is 16:9 , we break the video frames into 16@xmath39 tiles by default . as a result ,",
    "each tile size ( view region size ) is @xmath8 of the entire view region . to evaluate the impact of tile size ,",
    "in addition to the default configuration , we generate another set of videos where each video frame is broken into 80@xmath345 tiles .",
    "the number of pixels for a tile at each resolution level is shown in table [ tab : resolutionsize1 ] .",
    "fifty adult participants were invited to participate in our assessment , primarily graduate students and research staffs from national university of singapore .",
    "the sample consisted of 16 women and 34 men ; all had normal vision .",
    "they were asked to watch the mixed - resolution tiled videos online using a monitor with full hd display resolution .    for configurations with 16@xmath39 tiles ,",
    "we vary the high resolution level @xmath4 from @xmath9 to @xmath10 , 9 stimuli series are generated over three test videos . for configurations with 80@xmath345 tiles , we generate stimuli series with @xmath11 . as a result , we have 12 stimuli series in total , which are shuffled in a random order and played .    for each series , the stimuli is randomly manipulated in either an ascending or a descending order , the procedures are depicted in figure [ fig : procedure ] .",
    "in a stimuli series , we fix the high resolution level @xmath4 and vary the low resolution level @xmath5 . as shown in the figure , each pair presents a standard video where @xmath12 and a mixed - resolution tiled video . after watching the videos in a pair ( @xmath13 per video ) ,",
    "the participant is asked to rate the level of the difference between two videos . in particular ,",
    "two questions are asked : ( i ) _ is the quality difference noticeable _ and ( ii ) _ is the quality difference unacceptable_. in the case of ascending series , we increase @xmath14 from 1 . on each successive trial",
    ", we increase @xmath5 by 1 until the participant eventually reports the difference is unnoticeable or @xmath15 .",
    "if the series is descending , the stimuli operates in an opposite direction .",
    "we start from @xmath15 and gradually decrease @xmath5 until the participant reports the difference is unacceptable or @xmath16 .    using the above procedure ,",
    "the obtained results fall into the following three categories : ( i ) the noticeable difference threshold and unacceptable difference threshold are both detected ; ( ii ) only the noticeable difference threshold is detected ; and ( iii ) neither noticeable difference threshold nor unacceptable difference threshold can be detected .",
    "assuming that we have detected the noticeable difference threshold and unacceptable threshold , denoted by @xmath17 and @xmath18 , respectively , then according to _ the method of limits _",
    "@xcite , we estimate the just noticeable difference threshold as @xmath19 .",
    "similarly , we express just unacceptable difference threshold as @xmath20 . for the cases where we failed to detect the difference threshold , we set the corresponding just noticeable / unacceptable difference threshold to @xmath21 .",
    "we first examine the configuration with 16@xmath39 tiles .",
    "figure [ fig : cdf_unnoticeable ] depicts the cdf distribution of participants that can not notice any difference between mixed - resolution tiled video ( 5 , @xmath5 ) and standard tiled hd video ( 5 , 5 ) .",
    "the cdf distribution of participants that accept the quality difference is present in figure [ fig : cdf_accept ] .",
    "the average measured thresholds of just noticeable difference and just unacceptable difference for @xmath4 in the range from 5 to 3 are shown in table [ tab:16and9jnd ] and table [ tab:16and9jud ] , respectively .",
    "[ ht ]    [ ht ]    from the results , we can draw the following observations .",
    "* feasibility of mixing tile resolutions .",
    "* the measured thresholds confirm the feasibility of mixed - resolution tiled video .",
    "the cdf distribution from figure  [ fig : cdf_unnoticeable ] implies that we can mix tiles with resolution levels 5 and 4 without being noticed in most cases .",
    "further , the depicted result from figure  [ fig : cdf_accept ] indicates that more than 85% participants accept the quality difference with configurations where @xmath22 ; under these configurations , up to 30% bandwidth can be saved by mixing tile resolutions .",
    "when we construct video from tiles at resolution level 5 and 2 , almost all participants noticed the difference for video _ crowd - run _ and _ old - town - cross_. 40% to 65% of the participants , however , still accept the quality difference .",
    "* impact of content . * with the same configuration , the results from tables  [ tab:16and9jnd ] and  [ tab:16and9jud ] show a great disparity in the measured average jnd and jud across three test videos .",
    "overall , video _ crowd - run _ , which has the highest amount of motion among the three test videos , is most sensitive to the resolution mixing , as the highest average threshold and the greatest variation are detected .",
    "interestingly , video _ rush - hour _ , which has the lowest amount of motion among the three test videos , performs remarkably different from others .",
    "it is difficult to notice the quality difference between the mixed - resolution tiled video and the standard version , thus the average measured thresholds and the variations are much smaller compared with other test videos .",
    "* gap between jnd and jud thresholds . * for many cases , although participants could notice the difference , it is still acceptable .",
    "generally , a greater gap value indicates a higher video quality tolerance degree when the quality difference is noticeable . from the tables  [ tab:16and9jnd ] and [ tab:16and9jud ]",
    ", we observe a significant gap between the average measured jnd and jud thresholds , especially for @xmath11 .",
    "in particular , the average gap quantities for video _ crowd - run _ and _ old - town - cross _ with @xmath11 are 1.65 and 1.49 , respectively . as the tolerance space is reduced with smaller @xmath4 value , the quantity of the threshold gap between jnd and jud will be reduced as well , as can be seen in both tables .",
    "[ ht ]    [ ht ]    * impact of tile size . *",
    "the comparison between the configurations with 16@xmath39 tiles and 80@xmath345 tiles is present in tables [ tab : jnd16and9and80and45 ] and [ tab : jud16and9and80and45 ] .",
    "the threshold values with 80@xmath345 tiles is slightly smaller than the corresponding threshold values with 16@xmath39 tiles , which indicates that the quality degradation introduced by mixing resolutions is slightly less obvious for the finer - grained tile size ( 80@xmath345 ) compared with the coarse - grained tile size ( 16@xmath39 ) .",
    "the finer - grained tiles , however , are generally less efficient in terms of encoding and transmission bandwidth .",
    "therefore , we need to balance the trade - off between the video quality and the efficiency to obtain an appropriate configuration .",
    "the subjective assessment demonstrated that in most cases , the perceptual quality loss of mixing resolutions in tiled video is insignificant , as long as the variance of mixed resolution levels is low . from the evaluation results , we can draw the following two important observations :    * in most cases , tiles from 1920@xmath31080p stream and 1600@xmath3900p stream could be mixed together without being noticed ; * even when participants could notice quality degradation in videos combined with tiles from 1920@xmath31080p stream and tiles from 960@xmath3540p stream , greater than 80% of participants still accept the quality difference for low and medium motion videos ; and more than 40% of participants accept the quality difference for the dense motion video .",
    "this section confirms the feasibility of _ mixed resolution tiling _ scheme , which will be applied to wireless multicast of tiled video streams in the rest of this paper . instead of randomly mixing resolutions of tiles",
    ", we are looking into how to optimally allocate resolution versions to each tile to better utilize the wireless bandwidth and improve overall utilities of users .",
    "we now describe an optimization problem to determine which tile should be sent at which resolution and at which link rate , given the wireless network constraint .",
    "let @xmath23 be the number of slots available on average for the delivery of a single frame , where a slot refers to a minimum transmission time unit in @xmath24 network ( e.g. , @xmath25 in @xmath26 ) .",
    "the wireless network supports @xmath27 different link rates .",
    "let @xmath28 be the number of users in our system ; the physical link rates of these @xmath28 clients are : @xmath29 .",
    "without loss of generality , we assume that link rate @xmath30 is a non - decreasing function of index @xmath31 .",
    "we generate @xmath32 resolution versions ( or levels ) for each frame , and every frame is broken into @xmath33 view regions , each view region is termed as a tile ( or grid ) . instead of using the y - x notation in figure [ fig : tilebroken ]",
    ", we simply number the tiles @xmath34 when we discuss the algorithm .",
    "a tile is considered as a logical entity  when transmitted , a tile has to have a specific resolution level . a tile @xmath35 with resolution level @xmath36 ( @xmath37 )",
    "is denoted by @xmath38 , the size of which is @xmath39 .",
    "the sequence of @xmath40 is strictly increasing .",
    "the set of tiles in the roi of user @xmath31 is denoted as @xmath41 .",
    "let @xmath42 be the request resolution level from user @xmath31 . with restricted bandwidth condition",
    ", we may not be able to satisfy all the user requests . as a result",
    ", some tiles may be streamed with resolution levels lower than the desired resolution level ( @xmath42 ) . to avoid significant perceptual quality loss introduced by downgrading tile resolution levels , for user @xmath31",
    ", we have a lower bound @xmath43 of the tile resolution levels , which is guaranteed to be satisfied .",
    "more specifically , for every tile in @xmath41 , the resolution level to be decoded ( the highest received level ) by user @xmath31 should be at least @xmath43 .",
    "receiving @xmath38 at user @xmath31 yields utility @xmath44 , which follows the rules below :    * if @xmath45 , then @xmath46 ( for all @xmath47 ; * if @xmath48 and @xmath49 , we have @xmath50 ; * if @xmath48 and @xmath51 , we have @xmath52 ; * if @xmath48 and @xmath53 , we have @xmath54 .    for simplicity",
    ", we use a tile size - based utility assignment mechanism .",
    "in particular , @xmath55 is the maximum achievable utility at user @xmath31 by receiving tile @xmath35 , the utility assignments of receiving other levels are proportional to the corresponding tile sizes .",
    "the utility function , however , can be any general function ( e.g. , the psnr of tiles ) subject to the above rules .    given the roi selection and the corresponding utility assignment of tiles with each resolution level at each user , the objective is to maximize the total utility received by all users subject to the total transmission slot constraint .",
    "lastly , we discuss the parameter settings for the average available time slots @xmath23 and the tile size with a specific resolution level .",
    "all pixels belonging to the same tile across different frames will be encoded as a group of picture ( gop ) . due to the dependency in a gop ,",
    "if we pick a resolution level @xmath36 for a tile , we have to transmit this tile at the same resolution @xmath36 for all frames within the same gop . in our model",
    ", we therefore model @xmath39 as the average tile size in a gop and model the average number of time slots needed per frame as @xmath23 . in the implementation , however , the time slots allocated to frames in a gop is proportionally distributed according to the actual frame sizes , as there is a considerable diversity in the sizes of i , b , and p frames .",
    ".key notations in the algorithm [ cols=\"^,<\",options=\"header \" , ]     the key notations used in this paper are summarized in table  [ tab : notation ] .",
    "this section presents a dynamic programming algorithm to solve the utility maximization problem defined in the previous section .",
    "the solution consists of three major components : ( i ) an algorithm that determines an appropriate quality lower bound for each user ; ( ii ) an optimal algorithm for determining the link rate and resolution level of a single tile ; and ( iii ) an efficient algorithm for determining the link rate and resolution level over multiple tiles .",
    "the mixture of resolution levels could result in two potential issues when the available bandwidth is insufficient to meet the requirements from all users .",
    "first , as discussed in section  [ sec : background ] , the significant disparity of resolution levels between tiles for a user may severely impair the visual perception .",
    "next , the utility - oriented optimization algorithm could result in severe unfairness . to address these issues",
    ", we suggest an algorithm to adaptively tune the lower bound @xmath56 of resolution level that is guaranteed to be satisfied .",
    "recall that @xmath42 is the requested resolution level from user @xmath31 , and @xmath43 is the resolution level guaranteed to be satisfied for user @xmath31 among its interested tiles . given @xmath42 and @xmath43 ,",
    "the rules for utility assignment are specified in section [ sec : problemdescription ] .",
    "it is clear that when all requests of users are satisfied , we have @xmath57 for any @xmath58 , and the overall utility is optimal .",
    "hence , we set @xmath59 at the beginning , then we validate the feasibility of current configuration for @xmath43 and adapt accordingly .",
    "we define an indicator variable @xmath60 , which takes the value of 1 if resolution level @xmath36 of tile @xmath35 is transmitted at link rate @xmath30 , and 0 otherwise .",
    "let @xmath61 be the maximum resolution level of tile @xmath35 to be received by user @xmath31 .",
    "since user @xmath31 can only receive the transmissions with link rates not higher than @xmath30 , the expression of @xmath61 can be written as @xmath62 .",
    "now we can formulate the feasibility validation problem as @xmath63 where @xmath64 if @xmath48 and @xmath65 ; the unit of expression @xmath66 is a @xmath24 time slot . to obtain an appropriate setting of @xmath43 , we keep decreasing @xmath43 by @xmath67 for all @xmath31 until inequality ( [ eq : receivetile ] ) is feasible subject to time limit constraint ( [ eq : timeslotlimit ] ) .    to solve the feasibility problem defined above",
    ", we first independently calculate the minimum required time slots for every tile @xmath35 @xmath68 and then simply integrate the required time slots across all @xmath33 tiles .",
    "the total required slots should be less or equal than @xmath23 , if the current lower bound requirement ( @xmath43 ) is achievable .",
    "the following paragraph presents an algorithm to calculate the minimum required time slot for any single tile @xmath35",
    ".    for user @xmath31 , the lower bound requirement of resolution level @xmath43 can be satisfied by either transmitting at link rate @xmath30 or at lower link rate @xmath69 , where @xmath70 .",
    "define @xmath71 as the minimum required time slots satisfying non - negative utility requirement with users up to @xmath31 and with resolution level @xmath72 has not been satisfied from users with indexes larger than @xmath31 . the recursive equation for @xmath71",
    "can be written as     @xmath73 where @xmath74 .",
    "the minimum time slots required for delivering tile @xmath35 while satisfying the quality lower bound is @xmath75 , which could be easily calculated by leveraging recursion ( [ eq : minimumtimeslot ] ) .",
    "now we are able to simplify the feasibility validation problem to @xmath76 .      for ease of analysis ,",
    "we begin with designing an optimal resource allocation algorithm for a single tile .",
    "we denote this particular tile as @xmath35 .",
    "the optimal allocation approach determines _ the resolution levels of tile @xmath35 to be transmitted _ and _ the link rate for each transmission_.      let @xmath77 ( @xmath78 ) be the total slots available for the transmissions of tile @xmath35 .",
    "the utility optimization problem can be formulated as @xmath79    as we assume that the users with higher link rate can receive all transmissions at lower rates , we have the following important observation : _ for any tile , a higher resolution version is always transmitted with higher link rate_. by utilizing this observation , we have the following definition of the maximum utility function . for tile @xmath35 ,",
    "define @xmath80 as the optimal utility with users @xmath81 , with resolution levels up to @xmath36 , and within transmission time limit @xmath77 .",
    "every state @xmath80 falls into category of either _",
    "user @xmath31 is not interested in tile @xmath35 _ or _",
    "user @xmath31 is interested in tile @xmath35_. if user @xmath31 is not interested in tile @xmath35 ( @xmath82 ) , the state transition equation could be simply written as @xmath83    it is slightly more complicated to analyze the transitions of state @xmath80 when user @xmath31 is interested in tile @xmath35 .",
    "there are two transition possibilities for this state :    \\(i ) if the resolution level @xmath36 of @xmath35 is not transmitted , the recursive function is @xmath84    \\(ii ) if the resolution level @xmath36 is transmitted at link rate level @xmath69 ( @xmath85 ) , the recursive function is @xmath86    the terminating conditions for the recursion and the corresponding value assignments are @xmath87    we start the recursion from state @xmath88 with the given available time slots @xmath77 , the highest resolution level @xmath32 , and user @xmath28 with the highest link rate .",
    "the recursion can be solved by applying eqs .",
    "( [ eq : notinterested ] ) , ( [ eq : interestnottrans ] ) , and ( [ eq : interesttrans ] ) . the transition complexity for eqs .",
    "( [ eq : notinterested ] ) and ( [ eq : interestnottrans ] ) are both @xmath89 .",
    "( [ eq : interesttrans ] ) enumerates the user link rate for every transmission to attain the optimal transition . as a result , the transition complexity for eq .",
    "( [ eq : interesttrans ] ) is @xmath90 .",
    "the overall computational complexity of our optimization algorithm is @xmath91 , which grows quadratically with @xmath28 .",
    "this section applies a clustering method to make our optimal algorithm scalable with @xmath28 ( number of users ) . since eq .",
    "( [ eq : interesttrans ] ) is the most time consuming operation , we will concentrate on analyzing this equation .    assuming that a specific link rate @xmath69 is used for transmitting resolution level @xmath36 in eq .",
    "( [ eq : interesttrans ] ) , all clients with no smaller than link rate @xmath69 are able to receive this resolution level . instead of enumerating user @xmath92 ,",
    "only the distinct link rates are required to be considered . as a consequence",
    ", we could cluster the users with identical link rate to a virtual user in the algorithm .",
    "the clustering process is achieved by simply integrating the corresponding utility values .",
    "specifically , the utility of tile @xmath35 at resolution level @xmath36 for a virtual user at link rate @xmath93 could be defined as @xmath94 , where @xmath95 .    by clustering ,",
    "the number of users @xmath28 is reduced to at most @xmath27 , which is the maximum number of distinct link rates .",
    "as the number of link rate levels is noticeably small ( @xmath96 in @xmath26  @xcite ) , with user clustering , our algorithm scales with any number of users without considering the frame losses and retransmissions .",
    "this section presents an algorithm that is able to achieve the maximum utility by optimally allocating resources over all @xmath33 tiles .",
    "first , we extend the algorithm in section [ sec : singletileschedule ] to incorporate multiple tiles .",
    "next , we analyze the computational complexity of the algorithm and demonstrate its inefficiency .",
    "finally , we reduce the computational overhead of the algorithm to make it more efficient and practical for deployment .    given time limit @xmath97 for tile @xmath35 , the optimal utility is @xmath98 , which is calculated in section [ sec : singletileschedule ] . the overall system utility is the integrated utility over all @xmath33 tiles ,",
    "the optimization problem can be represented as @xmath99 from the formulas , we observe that optimization problem ( [ eq : overallsystemobjective ] ) is to optimally distribute the total time slots @xmath23 to all tiles .",
    "define function @xmath100 as the maximum utility achieved with tiles from @xmath67 to @xmath35 within time limit @xmath77 . enumerating the allocated time slots @xmath101 for transmissions of tile @xmath35 yields @xmath102 the maximum system utility is @xmath103 .",
    "this equation is employed by li et al .",
    "@xcite as well to incorporate the allocation of multiple multicast sessions into their optimal algorithm .",
    "we now discuss the complexity of this multiple tiles allocation algorithm .",
    "we precomputed all @xmath88 , where @xmath104 and @xmath78 , the complexity is @xmath105 .",
    "as shown in eq .",
    "( [ eq : multipletileschedule ] ) , the transition complexity for each state is @xmath106 , the complexity of the recursion procedure to calculate @xmath103 is @xmath107 .",
    "combining the precomputing and the recursion complexity gives @xmath108 in total .",
    "the parameters of @xmath28 ( reduced to @xmath27 ) , @xmath32 , and @xmath33 are constants for a given video , so the computational cost dependents on @xmath23 . assuming that the video frame rate is @xmath109 , the slots available on average for a single frame is @xmath110 slots ( @xmath25 per slot in @xmath26 ) . when this value of @xmath23 is substituted into @xmath108 ,",
    "the overhead is clearly too large to be practical .",
    "therefore , it is essential to further reduce the computational complexity .    the key idea of reducing computational overhead is to trade space for algorithm running time . define the optimal utility function @xmath111 as @xmath112    same as the analysis for the allocation algorithm of a single tile , the category that each state @xmath111 falls into depends on whether user @xmath31 is interested in tile @xmath35 .",
    "if user @xmath31 is not interested in tile @xmath35 , substituting eq .",
    "( [ eq : notinterested ] ) into eq .",
    "( [ eq : multipletilestatedefine ] ) yields @xmath113    on the other hand , if user @xmath31 is interested in tile @xmath35 , by substituting eqs .",
    "( [ eq : interestnottrans ] ) and ( [ eq : interesttrans ] ) into eq .",
    "( [ eq : multipletilestatedefine ] ) , we attain eq .",
    "( [ eq : interestedmultipletile ] ) .",
    "@xmath114 }   \\right\\ } }   \\nonumber   \\\\      & = \\max { \\left\\ {     \\mathcal{u}^*(g , i , m-1 , t ) , \\max\\limits_{1\\leq i '",
    "\\leq i } { \\bigg [ \\mathcal{u}^*(g , i'-1 , m-1 , t-\\frac{s_g^m}{r_{i ' } } ) + \\sum\\limits_{c = i'}^{i}{u_{g , c}^m } \\bigg ] }    \\right\\ } } \\end{aligned}\\ ] ]    the initial conditions and recursive transitions at boundaries for @xmath111 are @xmath115    the recursive eqs .",
    "( [ eq : notinterestedmultipletile ] ) and ( [ eq : interestedmultipletile ] ) clearly illustrate the procedure to solve the optimal multiple tiles allocation problem .",
    "the maximum utility is @xmath116 .",
    "the transition eq .",
    "( [ eq : notinterestedmultipletile ] ) consumes @xmath89 complexity",
    "( [ eq : interestedmultipletile ] ) enumerates user i d @xmath92 instead of time slots , thus the transition complexity is @xmath90 .",
    "taking all transitions into consideration , we have a total computational complexity of @xmath105 . here",
    ", @xmath28 can be replaced by @xmath27 by clustering users according to the available link rate levels . compared with previous multiple tiles allocation algorithm ,",
    "the computational complexity of current algorithm is significantly reduced by a factor of @xmath23 . in the evaluation section",
    ", we will demonstrate the effectiveness of our optimal algorithm .",
    "to evaluate our algorithm , we setup the following experimental system .          our system uses a zoomable video streaming server that runs on a mac pro with a 3.2ghz quad - core processor and 8 gb memory .",
    "the proxy runs on a macbook with a 2.9ghz dual - core processor and 8 gb memory .",
    "the video server , proxy , and wifi ap used for multicast are all connected through wired ethernet .",
    "the mobile devices , all samsung galaxy siii , communicate with the ap using ieee 802.11a operating at 5ghz .",
    "the ap used supports two complex ieee 802.11abg adapters featuring the atheros ar5414 chipset and runs openwrt kamikaze 7.09 with kernel version 2.6.25.16 .",
    "the driver of the wireless adapter used is madwifi ( version 0.9.4 ) . to enable packet level rate assignment",
    ", we use the click modular router @xcite ( version 1.6.0 ) . for each video packet transmission",
    ", we extract the rate value that is specified by the proxy in the header of every video packet , then passes the assigned rate value to the madwifi driver .",
    "the setup is shown in figure [ fig : testbed ] .      as the wifi",
    "snr values on the mobile devices are not available , we use frame loss as a basis for rate adaptation @xcite .",
    "in particular , we implement history - aware robust rate adaptation algorithm ( ha - rraa ) @xcite that extends the work of rraa @xcite .",
    "rraa uses two parameters , _ maximum tolerable loss _ ( mtl ) and _ opportunistic rate increase _ ( ori ) , for rate adaptation .",
    "the corresponding threshold for these parameters are denoted by @xmath117 and @xmath118 , where @xmath119 .",
    "rraa measures the frame loss rate @xmath120 over a period of _ estimation window _ and adapts the link rate as follows .",
    "the rate decreases to next lower one if @xmath120 is greater than @xmath117 .",
    "if @xmath120 is smaller than @xmath118 the rate is increased to next higher one .",
    "when @xmath120 is between @xmath121 and @xmath118 , the current rate is retained .    to limit transmissions at the adjacent high loss rates , ha - rraa is suggested @xcite .",
    "ha - rraa exponentially increases the window size of next lower rate upon transmission failure of current rate ( @xmath122 ) and reset the window size when transmissions of current rate are successful ( @xmath123 ) . to be responsive to fast channel deterioration as rraa",
    ", the algorithm additionally computes the loss over a _",
    "small window_. when the loss rate over this small window is greater than @xmath117 , the current rate is directly moved to the next lower rate .    from our experiments , we observe that the ha - rraa tuning mechanism may still result in the oscillation between two adjacent rates .",
    "we slightly modify the algorithm so that the window size is halved instead of being reset when transmissions of the current rate is successful . furthermore , since we may broadcast packets at different rates under heterogeneous links , a client may receive packets sent at a rate higher than its current rate ",
    "these packets serve as  free \" probes that prevent a client from increasing its rate unnecessarily . as a result , our rate adaptation is stable and responsive .    for tractability , packet losses and frame retransmissions are not incorporated into our algorithm .",
    "therefore , conservative threshold parameters are used in our work . in particular , we set @xmath124 and @xmath125 .",
    "the minimum _ estimation window _ size equals the interval between two consecutive allocation algorithm runs , this interval is also used as the _ small window _ to maintain responsiveness .      in the evaluation , we do not need to play the video on the mobile devices and hence do not send actual video data . instead , the following is done .",
    "as depicted in figure  [ fig : tilebroken ] , each raw video frame from the test video is broken into @xmath33 tiles , and the tiles with same y - x are encoded using ffmpeg tool ( version 1.2.1 ) with h264 codec at the server . during our experiments , instead of transmitting the corresponding tiles from the test video , the server simply transmits the same number of arbitrary bits as the actual video tile .",
    "the metadata containing the tile size , y - x position , resolution level , and the frame i d for identification , is embedded .",
    "a client running on the mobile device extracts these fields from each received tile and periodically provide the reception bitmap to the server .",
    "when the transmission is over , we gather the reception bitmaps from all the clients , and reconstruct the mixed - resolutions video frames with decoded tiles at the server side . here , the lost tiles ( indicated by bitmaps ) in a group of pictures ( gop ) are concealed by the default method in ffmpeg .",
    "in this section , we present the evaluation results of our proposed optimal multicast algorithm through extensive experiments using up to 10 mobile devices .    * compared algorithms : * we compare performance of optimal multicast against the following baseline schemes .",
    "these schemes use ha - rraa link adaptation as well .",
    "_ adaptive unicast ( aunicast ) _ : this scheme transmits packets using wireless unicast only . to ensure the lowest quality ( resolution level 1 )",
    "is received by every user , the algorithm calculates the number of time slots required to transmit every tile at resolution level 1 .",
    "the algorithm then loops through each user , and if there is sufficient available time slot remaining , the resolution of the tiles transmitted to the user is replaced by the desired resolution level .",
    "the loop terminates when the requests from all users are satisfied or the remaining time slots are insufficient for any user .",
    "_ adaptive multicast ( amulticast ) _ : similar to aunicast , the lowest resolution level 1 is guaranteed for each user and the remaining available slots are utilized to upgrade the resolution level tile by tile . as in dircast @xcite ,",
    "the assigned link rate for a particular tile is the lowest supported link rate among all interested users . as multicast is used , at most one multicast transmission is required for any tile .",
    "_ approximation _ : we apply the approximation method in  @xcite to our maximization problem , where the utility slots instead of the time slots is used as a state dimension in the dynamic programming .",
    "the approximation factor bound of this approach is @xmath126 .",
    "a better approximation factor is obtained with a finer - grained utility unit ( a smaller @xmath127 ) . as the computational complexity of the approximation algorithm grows quadratically with the number of utility units , the finer - grained utility unit significantly increases the computational complexity . in our experiment ,",
    "the same @xmath128 is used , the running time is close to our optimal multicast . in our paper , all the above algorithms collect the roi requests and run the allocation algorithm every 2 seconds .",
    "the average running time of our optimal algorithm is 49.18ms , which only incurs 2.5% overhead .",
    "we measure the peak signal - to - noise ratio ( psnr ) , a standard metric for measuring the video quality , and _ goodput _ of the system to compare the performance of the algorithms .",
    "* video setup : * we evaluate the algorithms using two standard hd ( 1920x1080p ) test video files , _ controlled - burn _ ( dense motion ) and _ rush - hour _ ( low motion ) . table [ tab : resolutionsize ] presents the video configurations and data rates .",
    "[ ht ]    [ b ]     | c | c | c || c | c | c | & resolution size & # tiles & low rate & medium rate & high rate + 5 & 1920@xmath31080 & 16@xmath39 & 6.2 & 10.9 & 20.2 + 4 & 1600@xmath3900 & 16@xmath39 & 4.5 & 6.6 & 11.1 + 3 & 1280@xmath3720 & 16@xmath39 & 3.2 & 4.6 & 8.4 + 2 & 960@xmath3540 & 16@xmath39 & 2.2 & 2.9 & 5.0 + 1 & 640@xmath3360 & 16@xmath39 & 1.2 & 1.5 & 2.5 +    _ rush - hour _ , compressed using ffmpeg with parameter @xmath129 .    _ controlled - burn _ , compressed with @xmath129 .",
    "_ controlled - burn _ , compressed with @xmath130 .    * wireless channels :",
    "* we place the mobile devices at different locations and distances from the ap , to vary the channel conditions between the mobile devices and the ap .",
    "table [ tab : linkquality ] shows the minimum , maximum , and average achieved link rates when there are up to 10 mobile devices .",
    "[ ht ]    [ b ]     | c || c | c | c | # users & min rate & max rate & average rate + 1 & 6 & 6 & 6 + 3 & 6 & 36 & 20.0 + 5 & 6 & 36 & 21.6 + 8 & 6 & 36 & 22.5 + 10 & 6 & 36 & 21.0 +    * roi variation : * user requests and roi used in the evaluations are based on the real interaction logs from 10 users who have used zoomable video system @xcite .",
    "the average psnr with error bars ( standard deviation ) across different users streaming at medium video rate are depicted in figure [ fig : mq_mr_psnr ] .",
    "the corresponding achieved average goodput is present in table [ tab : mq_mr_goodput ] .",
    "as the unicast scheme can not fit the lowest resolution level requirement for more than 5 clients , no data point is presented in this range in the results . from the results",
    ", we can draw the following observations :                \\(i ) _ psnr gains_. the multicast algorithms are able to satisfy up to 5 users requests without notable psnr degradation . on the other hand ,",
    "the video quality with unicast dramatically decreases beyond 3 users , and only up to 5 users can be supported by adaptive unicast . with more than 5 users ,",
    "all three multicast schemes experience some psnr loss .",
    "the optimal multicast , however , considerably outperforms approximation and adaptive multicast under heavy load , with the improvements of about 3db and 5db in psnr , respectively .",
    "\\(ii ) _ goodput gains_. due to zooming , the demands between different clients are not identical .",
    "hence , the trend in average goodput does not strictly follows that of video quality ( table [ tab : mq_mr_goodput ] ) .",
    "as predicted from figure [ fig : mq_mr_psnr ] and table [ tab : mq_mr_goodput ] , the multicast algorithms outperform unicast when there are more than 3 users in terms of both psnr and goodput . when there are more than 5 users , the improvements of optimal multicast over approximation and adaptive multicast with 10 users are 19% and 34% , respectively .",
    "[ t ]    [ b ]     | c || c | c | c | c | & aunicast & amulticast & approximation & omulticast + 1 & 3.83 & 3.79 & 3.81 & 3.82 + 3 & 2.95 & 3.45 & 3.46 & 3.41 + 5 & 1.8 & 3.07 & 3.05 & 3.07 + 8 & @xmath131 & 2.1 & 2.27 & 2.56 + 10 & @xmath131 & 1.99 & 2.25 & 2.67 +    \\(iii ) _ fairness gains_. the error bars in figure [ fig : mq_mr_psnr ] indicate that our optimal multicast achieves the best fairness among all algorithms , due to adaptive utility assignment ( section [ sec : autilityassign ] ) in our algorithm .",
    "although a similar allocation method is used by adaptive multicast and adaptive unicast , they performs remarkably different in terms of fairness .",
    "while multicast transmission can benefit multiple users , unicast transmission does not , which may lead to less fairness among the users .      to evaluate the impact of video data rate ( and thus the traffic load )",
    ", we repeat the experiments using a different video with a lower rate and the same video encoded with a higher rate .",
    "we generate _ low rate _ and _ high rate _ videos in addition to the previously used _",
    "medium rate_. the configurations are detailed in table [ tab : resolutionsize ] .",
    "wireless link quality settings are the same to the previous section .",
    "figure [ fig : mq_lr_psnr ] and figure [ fig : mq_hr_psnr ] depict the average achieved psnr for low rate and high rate videos , respectively .",
    "figure [ fig : mq_lr_psnr ] demonstrates that all four algorithms perform better with lighter workload as expected .",
    "specifically , the multicast algorithms scale up to 10 users without significant quality degradation , and the unicast scheme is able to support more clients . for higher traffic load ,",
    "all algorithms perform worst . compared with other schemes , our optimal algorithm ,",
    "however , still provide relatively fair quality under the higher load .",
    "in general , if a client does not induce lower link rate or request higher resolution level , no additional multicast traffic will be introduced .",
    "thus , the video qualities are only slightly reduced even as more clients are added to the multicast sessions .",
    "intuitively , larger amount of roi overlapping increases the relative performance gap of multicast over unicast .",
    "the impact of roi overlapping is evaluated in this section . in order to control the amount of overlap",
    ", we do not use collected traces to simulate roi variation .",
    "instead , we manually vary the roi sizes and positions so that they can change in a uniform and controlled manner . here , the roi sizes and the request resolution levels of all clients are identical .",
    "we vary the positions of roi to generate different similarity .",
    "to measure the degree of overlapping , we first define the _ popularity _ of a tile @xmath35 , @xmath132 as the fraction of the number of users interested in it .",
    "the degree of overlapping for user @xmath31 is then the total popularity of all tiles in @xmath41 , excluding the tiles only interested by user @xmath31 , divided by the number of tiles in @xmath41 .",
    "we then define _ similarity _ as the average overlapping degree across all users .",
    "we present how psnr changes with different similarity , for 8 users , in figure [ fig : similarity_psnr ] .    the relatively stable performance in terms of video quality shows that the unicast scheme is not affected by the amount of roi overlap .",
    "as expected , the improvement of multicast over unicast increases with the increasing roi similarity .",
    "when the rois are identical ( all users want the same regions ) , the improvement is about 12db in psnr . interestingly , with increased similarity value ,",
    "the psnr quantities of three multicast algorithms converge to an identical point .",
    "such convergence is caused by both the decrease in traffic demand and the fact that the same data is requested .",
    "the previous sections demonstrate the effectiveness of our optimal multicast algorithm with stationary clients . in this section ,",
    "we evaluate the performance of our optimal algorithm with client mobility .",
    "in particular , we keep two clients static , the obtained link rates for them are 6mbps and 36mbps .",
    "one additional mobile client starts from a location close to the ap , moves away from it , and then moves back .",
    "figure [ fig : mobility ] plots the average psnr of the mobile client for every two seconds .",
    "the movement period is from 40s to 120s .        in the experiment ,",
    "the high rate video is used and a segment of 20s is played repeatedly . although , the roi of each user and the allocations are fixed under static condition , the psnr of different frames are different .",
    "this disparity is due to the fact that sensitivity of different frames with mixed resolution tiles are different .",
    "the same trend of psnr variations under static conditions can be observed between different playbacks .    from the figure",
    ", we observe that our optimal algorithm consistently outperforms two baseline algorithms .",
    "the average enhancements of our optimal multicast over approximation and adaptive multicast are about 1db and 4.5db , respectively .",
    "moreover , our algorithm can quickly adapt to the link rate and the video quality returns quickly to the level similar to the static period after the movement ( at 120 second ) .",
    "we have developed and implemented an efficient algorithm for multicasting mixed resolution tiles to heterogeneous users , for interactive video applications that support zoom and pan .",
    "our algorithm optimizes the total utility of all clients and achieves significant improvements in video quality : up to a 3db improvement over approximation multicast approach , 6db improvement over an adaptive multicast scheme , and 12db improvement over adaptive unicast scheme in our experiment settings .",
    "additionally , our approach can be directly applied to design an optimal allocation algorithm for a general multi - sessions video multicast . in the future",
    ", we shall extend this work to the scenarios with multiple access points ( aps ) , where the ap association mechanism could be exploited to further enhance the multicast performance .",
    "ranveer chandra , sandeep karanth , thomas moscibroda , vishnu navda , jitendra padhye , ramachandran ramjee , and lenin ravindranath . .",
    "in _ proceedings of the 17th ieee international conference on network protocols ( icnp ) _ , pages 161170 , princeton , new jersey , usa , 2009 . ieee .",
    "peilong li , honghai zhang , baohua zhao , and sampath rangarajan . .",
    "in _ proceedings of the 17th ieee international conference on network protocols ( icnp ) _ , pages 141150 , princeton , new jersey , usa , 2009 . ieee .",
    "ngo quang minh  khiem , guntur ravindra , axel carlier , and wei  tsang ooi . .",
    "in _ proceedings of the first annual acm sigmm conference on multimedia systems _ , pages 259270 , scottsdale , arizona , usa , 2010 .",
    "sayandeep sen , neel  kamal madabhushi , and suman banerjee .",
    "scalable wifi media delivery through adaptive broadcasts . in _ proceedings of the 7th usenix conference on networked systems design and implementation ( nsdi )",
    "_ , pages 1313 , san jose , california , usa , 2010 .",
    "usenix association .",
    "arash shafiei , quang minh  khiem ngo , ravindra guntur , mukesh  kumar saini , cong pang , and wei  tsang ooi .",
    "jiku live : a live zoomable video streaming system . in",
    "_ proceedings of the 20th acm international conference on multimedia _ , pages 12651266 , nara , japan , 2012 .",
    "ray van brandenburg , omar niamut , martin prins , and hans stokking . .",
    "in _ proceedings of the 15th international conference on intelligence in next generation networks ( icin ) _ , pages 151156 , paris , france , 2011 . ieee .",
    "hui wang , vu - thanh nguyen , wei  tsang ooi , and mun  choon chan . .",
    "in _ proceedings of network and operating system support on digital audio and video workshop ( nossdav ) _ , pages 2530 , singapore , 2014 .",
    "starsky  hy wong , ramya raghavendra , yang song , and kang - won lee .",
    "x - wing : a high - speed wireless broadcasting framework for ieee 802.11 networks . in _",
    "proceedings of the 10th annual ieee communications society conference on sensor , mesh and ad hoc communications and networks ( secon ) _ , pages 344352 , new orleans , usa , 2013 .",
    "ieee .",
    "jongwon yoon , honghai zhang , suman banerjee , and sampath rangarajan . .",
    "in _ proceedings of the 18th annual international conference on mobile computing and networking ( mobicom ) _ , pages 209220 , istanbul , turkey , 2012 ."
  ],
  "abstract_text": [
    "<S> zoomable video streaming refers to a new class of interactive video applications , where users can zoom into a video stream to view a selected region of interest in higher resolutions and pan around to move the region of interest . </S>",
    "<S> the zoom and pan effects are typically achieved by breaking the source video into a grid of independently decodable tiles . streaming the tiles to a set of heterogeneous users using broadcast </S>",
    "<S> is challenging , as users have different link rates and different regions of interest at different resolution levels . in this paper </S>",
    "<S> , we consider the following problem : given the subset of tiles that each user requested , the link rate of each user , and the available time slots , at which resolution should each tile be sent , to maximize the overall video quality received by all users . </S>",
    "<S> we design an efficient algorithm to solve the problem above , and evaluate the solution on a testbed using 10 mobile devices . </S>",
    "<S> our method is able to achieve up to 12db improvements over other heuristic methods . </S>"
  ]
}
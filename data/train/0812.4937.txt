{
  "article_text": [
    "the guruswami - sudan list decoding algorithm @xcite is one of the most powerful decoding methods for reed - solomon codes .",
    "its complexity is known to be polynomial .",
    "however , the degree of the polynomial turns out to be too high .",
    "therefore , computationally efficient algorithms are needed in order to obtain a practical implementation of this method .",
    "the most computationally intensive step of the guruswami - sudan algorithm is construction of a bivariate polynomial passing through a number of points with a given multiplicity . in this paper",
    "a novel reduced complexity interpolation algorithm is presented .",
    "it is based on the well - known binary exponentiation method , so we call it binary interpolation algorithm",
    ". the algorithm exploits the relationship between the grbner bases of zero - dimensional ideals and appropriate modules .",
    "the key component of the proposed method is a novel randomized fast ideal multiplication algorithm ( see figure [ ffastmodmul ] ) .",
    "we show also that the interpolation complexity can be further reduced by integrating the proposed method with the re - encoding approach @xcite .    the paper is organized as follows .",
    "section [ spreliminaries ] presents a simple derivation of the guruswami - sudan algorithm and all necessary background . section [ srootmulinc ] introduces the novel interpolation algorithm .",
    "numeric performance results are given in section [ snumres ] . finally , some conclusions are drawn .",
    "* @xmath0\\}$ ] is the ideal generated by @xmath1 . *",
    "@xmath2=\\displaystyle\\{\\sum_{i=0}^v p_i(x)q_i(x , y)|p_i(x)\\in \\operatorname{\\mathbb{f}}[x]\\}$ ] is the module generated by @xmath1 . *",
    "@xmath3}(x_i , y_i)=\\displaystyle\\sum_{j_1'\\geq j_1}\\sum_{j_2'\\geq   j_2}{j_1'\\choose j_1}{j_2'\\choose   j_2}q_{j_1'j_2'}x_i^{j_1'-j_1}y_i^{j_2'-j_2}$ ] is the hasse derivative of @xmath4 at point @xmath5 .",
    "* @xmath6 means that @xmath4 has a root of multiplicity _ at least _",
    "@xmath7 in @xmath5 , i.e. @xmath3}(x_i , y_i)=0 , j_1+j_2<r$ ] . *",
    "@xmath8|q(x_i , y_i)=0^r,1 \\leq i \\leq n\\}$ ] is the ideal of polynomials having roots of multiplicity at least @xmath7 at points @xmath9 .",
    "* @xmath10 .",
    "* @xmath11 is the leading term of @xmath4 with respect to some term ordering .",
    "* @xmath12 is the dimension of vector @xmath13 .",
    "* @xmath14 , where @xmath15 is a grbner basis of some module , and @xmath16 .",
    "this section introduces some background information on the guruswami - sudan list decoding method , associated computational algorithms , and various algebraic concepts used in this paper .",
    "multivariate polynomials are extensively used in this paper , so one needs to introduce monomial orderings to deal with them .",
    "@xmath17-weighted degree of a monomial @xmath18 equals @xmath19 .",
    "@xmath17-weighted degree @xmath20 of a polynomial @xmath4 equals to the maximum of @xmath17-weighted degrees of its non - zero terms .",
    "weighted degree can be used to define a term ordering .",
    "@xmath17-weighted degree lexicographic ordering is defined as @xmath21 .",
    "lexicographic ordering is defined as @xmath22 .",
    "leading term @xmath11 of a polynomial @xmath23 is given by @xmath24 .",
    "multivariate polynomials can be ordered according to their leading terms .",
    "the guruswami - sudan algorithm addresses the problem of list decoding of @xmath25 reed - solomon code over field @xmath26 .",
    "that is , given a received vector @xmath27 , it finds all message polynomials @xmath28 , such that @xmath29 and @xmath30 for at least @xmath31 distinct code locators @xmath32 @xcite .",
    "this is accomplished by constructing a polynomial @xmath4 , such that @xmath33 , @xmath34 , and factoring it .",
    "it is possible to show that the parameters of this algorithm must satisfy @xcite @xmath35      construction of a polynomial @xmath4 turns out to be the most computationally expensive step of the guruswami - sudan algorithm .",
    "this section presents an overview of two existing algorithms for the interpolation problem .",
    "the first one will be used to derive some important properties of the underlying algebraic structures , and the second will be used as a component of the proposed method .    observe that the set of polynomials @xmath8|q(x_i",
    ", y_i)=0^r,1 \\leq i \\leq n\\}$ ] is an ideal .",
    "the smallest non - zero polynomial of this ideal with respect to @xmath36-weighted degree lexicographic ordering must satisfy the constraints of the guruswami - sudan algorithm .",
    "such a polynomial is guaranteed to appear in the grbner basis of @xmath37 with respect to this term ordering @xcite .",
    "however , it turns out to be easier to construct a grbner basis of the module @xmath10 .",
    "the algorithm shown in figure [ fiia ] constructs @xmath38 non - zero polynomials @xmath39 such that @xmath40 , and @xmath41 are the smallest possible integers @xcite .",
    "iterativeinterpolationn,\\{(x_i , y_i),1 i n},r ,    i0 -1 q_i(x , y)y^i ;     +    i1 n    0 r-1    0 r--1 _ jq_j^[,](x_i , y_i ) , 0 j -1 + m=_j:_j0q_j(x , y ) +    jm q_j(x , y)q_j(x , y)-q_j_0(x , y )     + q_m(x , y)q_m(x , y)(x - x_i ) ;     +    these polynomials represent a grbner basis of the module @xmath10 @xcite . in the context of list decoding one",
    "has to use @xmath36-weighted lexicographic ordering .",
    "the solution of the interpolation problem is given by the smallest polynomial in the obtained vector @xmath42 .",
    "it can be seen that the complexity of iia is given by @xmath43 .",
    "it will be sometimes convenient to represent a vector of polynomials @xmath44 as @xmath45 , where @xmath46 is a @xmath47 polynomial matrix .",
    "[ ldegdet ] let @xmath48 be a vector of polynomials constructed by iia for the input @xmath49 . then @xmath50 where @xmath51 is the corresponding polynomial matrix .",
    "observe that at each iteration of iia the @xmath52-degree of exactly one polynomial is increased by one .",
    "hence , the sum of leading term @xmath52-degrees of all polynomials after algorithm termination is equal to the number of partial hasse derivatives forced to be zero . on the other hand ,",
    "this algorithm can be interpreted as construction of the polynomial matrix @xmath53 where @xmath54 and @xmath55 is the index of the smallest polynomial selected on line 7 of the algorithm . obviously , @xmath56 for some non - zero @xmath57 , and the number of terms in is again equal to the number of hasse derivatives forced to be zero",
    ".    observe that for a fixed term ordering there may exist many different grbner bases of a module .",
    "however , they share the following common property .",
    "[ lltsum1 ] let @xmath58 be a grbner basis of the module @xmath59 .",
    "then @xmath60 .",
    "let @xmath61 be the grbner basis of @xmath59 constructed by iia for the same term ordering . then @xmath62 and @xmath63 .",
    "this means that the leading terms of @xmath64 and @xmath65 are the same up to a constant in @xmath26 , and the statement follows from lemma [ ldegdet ] .",
    "it was shown in @xcite that the ideal of interpolation polynomials @xmath37 is generated by @xmath66 where @xmath67 and @xmath68 .",
    "hence , the basis of the module @xmath59 is given by @xmath69 , where @xmath70    [ lbuchbergerspair ] the polynomials @xmath71 represent a grbner basis of the module @xmath72\\}$ ] if @xmath73 are distinct values .",
    "the lemma follows from the buchberger s - pair criterion @xcite .",
    "the above described basis @xmath74 has to be transformed into a grbner one with respect to @xmath36-weighted degree lexicographic monomial ordering .",
    "this can be done with the algorithm given in @xcite , which can be considered as a simplified instance of the buchberger algorithm .",
    "it is convenient to present it here in a slightly modified form .",
    "namely , this algorithm takes as input some polynomial @xmath75 , grbner basis @xmath76 of some module @xmath77 $ ] , and constructs a grbner basis of module @xmath78\\}$ ] .",
    "the algorithm is shown in figure [ fgeneuclid ] .",
    "reduce(s_0(x , y), ",
    ",s_i-1(x , y)),p(x , y ) s_i(x , y)p(x , y ) +    j:(0j < i ) ( s_j(x , y)=s_i(x , y ) )    s_i(x , y)|s_j(x , y ) w(x , y)s_j(x , y)-s_i(x , y ) + s_j(x , y)s_i(x , y ) + s_i(x , y)w(x , y ) s_i(x , y)s_i(x , y)-s_j(x , y )     +    s_i(x , y)=0 i-1     + ( s_0(x , y), ",
    ",s_i(x , y ) )    [ lreducegroebner ] let @xmath79 be the polynomials such that @xmath80 .",
    "then the @xmath81 algorithm constructs a grbner basis of the module @xmath82 $ ] .",
    "this statement follows from lemma [ lbuchbergerspair ] and invertibility of transformations used by the algorithm .",
    "the required grbner basis is obtained as @xmath83 , where @xmath84 the complexity of this method is given by @xmath85 @xcite .",
    "curiously , if @xmath36-weighted degree lexicographic ordering is used and @xmath86 , it reduces to the gao decoding method @xcite , with function @xmath81 being the standard extended euclidean algorithm with early termination condition .",
    "therefore , @xmath81 will be referred to as the multi - dimensional euclidean algorithm .",
    "this section introduces a novel interpolation algorithm .",
    "the main idea of this algorithm is to construct a sequence of ideals and modules of polynomials having roots @xmath5 with increasing multiplicity .",
    "the proposed method can be considered as an application of the well - known binary exponentiation algorithm to zero - dimensional ideals .",
    "the main drawback of the method given by is that one has to manipulate with the polynomials having large common divisors .",
    "for example , @xmath87 .",
    "furthermore , polynomial exponentiation is used in .",
    "the method proposed in this paper avoids both reducing the polynomials with large gcd , and computing large powers of polynomials .",
    "this is achieved by first constructing grbner bases for small root multiplicities , and using them to obtain bases for larger root multiplicities .",
    "let @xmath8|q(x_i , y_i)=0^r , 1 \\leq i \\leq n\\}$ ]",
    ". then @xmath88 .",
    "@xmath89 .",
    "this lemma implies that @xmath90 .",
    "one can avoid repeated calculations and reduce the overall number of calls to the @xmath81 algorithm by using the binary exponentiation method @xcite .",
    "namely , one can compute @xmath91 where @xmath92 , @xmath93 , @xmath94 $ ] , and @xmath95=i$ ] .",
    "the key problem addressed in this paper is how to construct efficiently a grbner basis of the product of ideals @xmath96 and @xmath97 . the standard way is given by @xmath98 i.e. to compute pairwise products of all basis elements of the ideals being multiplied .",
    "this requires @xmath99 bivariate polynomial multiplications , and the basis of @xmath100 obtained in such way is extremely redundant .",
    "furthermore , buchberger algorithm must be used in order to obtain a grbner basis of @xmath37 .    to the best of author knowledge ,",
    "the problem of efficient ideal multiplication was not considered in the literature , except in @xcite , where multiplication of zero - dimensional co - prime ideals was reduced to linear convolution",
    ". however , the ideals considered in this paper are not co - prime .",
    "this problem can be again solved by constructing at each step of the binary exponentiation algorithm a basis of the module of polynomials with limited @xmath101-weighted degree .",
    "[ lltsum ] consider the polynomials @xmath102 , such that @xmath103 , @xmath104 , @xmath105 , and @xmath106 then @xmath107 , and the polynomials @xmath108 constitute a grbner basis of this ideal .",
    "observe that the polynomials @xmath108 represent a grbner basis of some module by lemma [ lbuchbergerspair ] .",
    "obviously , @xmath109 .",
    "suppose that the polynomials @xmath108 do not constitute a grbner basis of @xmath110 .",
    "that is , there exists @xmath111 , where the terms of @xmath112 are not divisible by @xmath113 , i.e. @xmath114 and @xmath115 .",
    "observe that @xmath116 .",
    "this means that the polynomials @xmath117 do not represent a grbner basis of module @xmath118 . the true grbner basis of this module should consist of smaller polynomials , i.e. the sum of @xmath52-degrees of their leading terms should be less than @xmath119 .",
    "but this contradicts to lemma [ lltsum1 ] .",
    "hence , @xmath120 and @xmath108 constitute a grbner basis of @xmath110 .",
    "observe that there may exist grbner bases of @xmath110 not satisfying the constraints of this lemma .",
    "let @xmath121 be the ideals given by their grbner bases satisfying the above lemma .",
    "one can construct a grbner basis of the product @xmath122 of these ideals as follows .",
    "let @xmath123 be a sequence of distinct pairs of integers such that @xmath124 , and @xmath125 for @xmath126 .",
    "let @xmath127 be a basis of some submodule of @xmath128 . by lemma [ lbuchbergerspair ]",
    "it is a grbner basis of this submodule .",
    "it can be seen that @xmath129 .",
    "let @xmath130 the @xmath81 algorithm attempts to cancel the leading terms of the provided polynomials , so @xmath131 .",
    "as soon as one obtains @xmath132 , @xmath133 is a grbner basis of @xmath122 .",
    "[ lmoduleproduct ] @xmath128 is generated by @xmath134 .",
    "consider @xmath135 , such that @xmath136 .",
    "any such polynomial can be represented as @xmath137 .",
    "inner sum is an element of @xmath138 .",
    "since the polynomials @xmath139 are a grbner basis of @xmath140 and @xmath138 , one can use the multivariate polynomial division algorithm to obtain @xmath141 .",
    "similarly , @xmath142 is in @xmath143 , and the multivariate division algorithm leads to @xmath144 .",
    "hence , @xmath145 .",
    "last term in this expression is zero , since @xmath4 does not contain any monomials @xmath146 with @xmath147 , so @xmath148 $ ] .",
    "the lemma states that for any suitable polynomial @xmath149 one can replace the bivariate polynomials @xmath150 with univariate ones @xmath151 .",
    "this implies that the sequence @xmath133 converges eventually to the required module basis .",
    "however , the convergence turns out to be quite slow .",
    "one may need to compute many bivariate polynomial products @xmath152 and apply @xmath81 algorithm to them before the constraint is satisfied .",
    "in many cases it appears even that @xmath153 .",
    "that is , a significant fraction of pairs @xmath154 is useless .",
    "therefore we propose to replace pairwise products @xmath155 in with their random linear combinations @xmath156 where @xmath157 are independent random variables uniformly distributed over @xmath26 . obviously",
    ", such polynomials still generate the ideal product if the linear transformation given by @xmath157 is invertible , i.e. if at least @xmath99 polynomials @xmath158 are given . however , it turns out that in average one needs just a few such polynomials to obtain a basis of the ideal product .",
    "the reason is that @xmath158 depend on all pairwise products @xmath155 , and a grbner basis construction algorithm ( e.g. @xmath81 ) can take them into account simultaneously .",
    "this will be discussed in more details in section [ scomplexity ] .    however , it is impractical to construct the polynomials explicitly as given by , since this requires one first to compute all pairwise products @xmath159 .",
    "more efficient way is to construct a sequence of bases @xmath160 where @xmath161 , and @xmath162 are some random values uniformly distributed over @xmath26 .",
    "furthermore , we propose to construct the initial basis @xmath163 as @xmath164 , where for each @xmath165 @xmath166 is selected so that @xmath167 , and the values @xmath168 are minimized .",
    "this reduces the number of iterations needed by the @xmath81 algorithm .",
    "the proposed approach is summarized in figure [ ffastmodmul ] .",
    "merge(p_0(x , y), ",
    ",p_u(x , y)),(s_0(x , y),",
    " ,s_v(x , y)),_0    i0 u+v q_i(x , y)=_0jvp_i - j(x , y)s_j(x , y )     + b=(q_0(x , y), ",
    ",q_u+v(x , y ) ) +    ( b)>_0 _ irand ( ) , 0 i u + _ jrand(),0 j v + q(x , y)=(_i=0^u_ip_i(x , y))(_i=0^v_is_i(x , y ) ) + b=(b , q(x , y ) )     +",
    "b    [ tmerge ] given grbner bases @xmath169 and @xmath170 of ideals @xmath143 and @xmath138 , the result of @xmath171 is a grbner basis of @xmath172 , where @xmath173 .    observe that the sequence @xmath174 still converges to a basis of @xmath128 , since it is possible to select @xmath175 and @xmath176 so that the linear transformation given by @xmath177 is invertible , provided that sufficiently many polynomials are constructed . by lemma [ lreducegroebner ]",
    ", the @xmath81 algorithm always produces a grbner basis of some module . by lemma [ lltsum ] , this basis is a grbner basis of @xmath37 .",
    "@xmath178 is not guaranteed to obtain a minimal grbner basis of @xmath37 . in particular , a few polynomials may have @xmath179",
    ". such polynomials are redundant , and should be eliminated , except the smallest one .",
    "the overall interpolation algorithm is shown in figure [ finterpolationalg ] .",
    "@xmath36-weighted degree lexicographic ordering must be used throughout this algorithm .",
    "interpolate((x_i , y_i),1 i n),r ( x)=_i=1^n ( x - x_i ) + t(x)=_i=1^n y_i + g((x ) ) + j0 +    g=(g , y^j(y - t(x ) ) ) + jj+1    _ j= y^j + b = g +   + r1 +    jm-1 0 r2r + b=(b , b , nr(r+1)/2 ) +    r_j=1 rr+1 + b=(b , g , nr(r+1)/2 )     + b    observe that in most practical cases the polynomial @xmath180 can be constructed by using fast inverse discrete fourier transform .",
    "fft can be also used in the implementation of polynomial multiplication , which is extensively used by this algorithm .",
    "[ tinterpolate ] @xmath181 algorithm constructs a grbner basis of @xmath37 with respect to a given term ordering .",
    "the objective of the @xmath182 loop is to construct a grbner basis of @xmath183 , such that it is also a grbner basis of @xmath184 .",
    "any grbner basis of a zero - dimensional ideal must contain a polynomial @xmath185 for some @xmath166 ( * ? ? ?",
    "6.54 ) , so this loop terminates eventually , and @xmath186 is indeed a grbner basis of @xmath184 .    let @xmath187 . by induction , the input vectors to @xmath178 at line 14 are two copies of a grbner basis of @xmath188",
    ". by theorem [ tmerge ]",
    "its output is a grbner basis of @xmath189 .",
    "similar argument applies to line 17 .",
    "hence , at the end of each iteration of the @xmath190 loop one obtains a grbner basis of @xmath191 . observe also , that at the end of each iteration @xmath192 .",
    "the interpolation polynomial needed by the guruswami - sudan algorithm can be found as the smallest element of the basis produced by the @xmath181 algorithm .",
    "let us first estimate the convergence speed of the @xmath178 algorithm .",
    "recall , that this algorithm constructs a grbner basis of @xmath128 given grbner bases of @xmath193 and @xmath140 ( in fact , @xmath143 and @xmath138 ) .",
    "for the sake of simplicity we will estimate the probability of @xmath128 being generated by @xmath194 polynomials given by , such that @xmath195 for @xmath196 , and leading terms of summands do not cancel . the difference in the behavior of the actual algorithm @xmath178 with respect to this impractical ideal multiplication method",
    "will be discussed below .",
    "the polynomials @xmath197 can be represented as a @xmath198 polynomial matrix @xmath51 .",
    "if they indeed generate @xmath128 , then the @xmath199 polynomial matrix @xmath200 corresponding to the grbner basis @xmath201 of this module as constructed by iia satisfies @xmath202 where @xmath51 is the polynomial matrix corresponding to @xmath1 , and @xmath46 is some transformation matrix . on the other hand , @xmath203 , i.e. @xmath204 , where the elements of @xmath205 matrix can be obtained by the multivariate division algorithm .",
    "hence , @xmath206 since @xmath207 , the polynomials @xmath64 are linearly independent over @xmath208 $ ] , and @xmath200 is invertible over the field of rational functions , so it can be cancelled in .",
    "therefore , the problem reduces to estimating the probability of existence of a polynomial matrix @xmath46 satisfying @xmath209 this is a system of linear equations in terms of @xmath46 . observe that @xmath205 is a full - rank matrix over @xmath208 $ ] .",
    "polynomial solution exists if and only if the scalar matrix equations @xmath210 are solvable for any @xmath211 , i.e. @xmath212 matrices have rank @xmath213 .",
    "it is sufficient to consider only such @xmath214 that some fixed @xmath199 submatrix @xmath215 of @xmath205 looses rank for @xmath216 , i.e. the roots of @xmath217 .",
    "such roots are called eigenvalues of polynomial matrix @xmath215 @xcite .",
    "let @xmath218 be a matrix consisting of first @xmath213 columns of @xmath205 .",
    "this matrix satisfies @xmath219 where the polynomial matrix @xmath220 corresponds to @xmath221 . for each eigenvalue @xmath211 of @xmath215",
    "one can identify @xmath222 linearly independent left eigenvectors , i.e. vectors @xmath223 , such that @xmath224 .",
    "the geometric multiplicity @xmath222 of eigenvalue @xmath214 is upper - bounded by its algebraic multiplicity @xmath225 , which is defined as the multiplicity of root @xmath214 of @xmath217 .",
    "equation is solvable if for each @xmath226 @xmath227 for at least one @xmath228 , i.e. if @xmath212 is a full - rank matrix .",
    "the total number of such pairs @xmath229 is upper - bounded by @xmath230 .",
    "the polynomials @xmath231 represent a grbner basis of some submodule of @xmath128 , and could be obtained from those given by @xmath200 by executing lines 610 of iia for a few additional points @xmath5 and/or pairs @xmath232 .",
    "hence , by lemma [ ldegdet ] , @xmath233 and @xmath234 .",
    "let polynomials @xmath235 be a grbner basis with respect to @xmath36-weighted degree lexicographic ordering of @xmath236 and @xmath237 for some @xmath238 and @xmath239 .",
    "then @xmath240 , where should have _ approximately _ the same @xmath36-weighted degree , since the iia , which can be used to construct them , always increases the degree of the smallest polynomial .",
    "numerical experiments confirm this claim . alternatively ,",
    "if the received sequence is not a codeword , a grbner basis of zero - dimensional ideal @xmath236 must contain the polynomials with @xmath36-weighted degree both below and above the value given by , and the approximate expression for @xmath241 derived below coincides with that one . ] @xmath242 for some @xmath241 , @xmath243 , and @xmath244 .",
    "hence @xmath245 , and @xmath246 .    since the polynomials @xmath247 and @xmath248 represent grbner bases of @xmath193 and @xmath140 , @xmath249 , @xmath250 , where @xmath251 and @xmath252",
    ". then @xmath253 , @xmath254 and @xmath255 hence , @xmath256 let us assume that the elements of @xmath205 are univariate polynomials with independent coefficients uniformly distributed over @xmath26 .",
    "then @xmath257 is a random variable uniformly distributed over @xmath258 , where @xmath258 is the smallest algebraic extension of @xmath26 , such that @xmath259 , and @xmath260 is the extension degree .",
    "then the probability of @xmath261 being non - zero for at least one @xmath262 is given by @xmath263    consider factorization @xmath264 , where @xmath265 , and @xmath266 $ ] are some monic irreducible polynomials .",
    "each eigenvalue @xmath214 is a root of at least one of @xmath267 , so @xmath268 , and @xmath269 .",
    "let @xmath270 .",
    "observe that @xmath267 has @xmath271 distinct roots in @xmath272 .",
    "assuming the worst case , where the geometric and algebraic multiplicities of eigenvalues are the same , one obtains the following expression for the probability of being solvable for all eigenvalues @xmath214 : @xmath273 assuming that @xmath274 is a polynomial with independent coefficients uniformly distributed over @xmath26 , one can estimate the probability of obtaining a particular factorization of @xmath275 as @xmath276 @xcite , where @xmath277 is the number of monic irreducible polynomials of degree @xmath166 .",
    "hence , the probability of being solvable is given by @xmath278 where summation is performed over all partitions @xmath279 of @xmath280 .",
    "exact evaluation of this expression does not seem to be feasible .",
    "however , it can be seen that the value of is dominated by the first multiple , and it is known that a random polynomial over a finite field @xmath26 has in average one root in it @xcite . hence , the probability of being unsolvable decreases exponentially fast with @xmath281 .",
    "thus , for sufficiently large @xmath26 one can assume that a grbner basis of @xmath122 can be derived from @xmath282 polynomials given by .",
    "the above analysis was performed for an impractical version of the proposed randomized ideal multiplication method .",
    "it turns out that the polynomial matrix corresponding to the actual polynomials @xmath283 generated on line 2 of the @xmath178 algorithm has usually more than one eigenvalue in @xmath26 with high algebraic multiplicity .",
    "but the geometric multiplicity of the corresponding eigenvectors appears to be much less than the algebraic one ( although still greater than @xmath284 ) , so the algorithm still quickly converges .",
    "let us now estimate the number of iterations of @xmath81 algorithm called on line 8 of @xmath178 . to do this",
    "observe that the objective of @xmath81 is to decrease @xmath36-weighted degrees of polynomials constructed on lines 2 and 7 of @xmath178 from approximately @xmath285 to approximately @xmath286 , i.e. to cancel the monomials with too high @xmath36-weighted degree .",
    "for each polynomial approximately @xmath287 monomials should be eliminated .",
    "the total number of monomials to be eliminated can be estimated as is to decrease the number of monomials to be cancelled , i.e. decrease the number of iterations in @xmath81 . ] @xmath288 .",
    "at least one monomial is cancelled during each iteration of @xmath81 .",
    "taking into account , one obtains that the number of iterations in @xmath81 is given by @xmath289 , where @xmath290 .",
    "the algorithm operates with polynomials containing @xmath291 terms , i.e. its complexity is given by @xmath292 .",
    "it can be seen from that the number of polynomials in the basis of @xmath293 is @xmath294 .",
    "the degrees of these polynomials can be estimated as @xmath295 and @xmath296 .",
    "computing a product of two such polynomials requires @xmath297 operations .",
    "the analysis given above suggests that the number of iterations performed by @xmath178 is @xmath298 .",
    "therefore , the complexity of polynomial multiplications needed to construct the grbner basis of @xmath299 from the basis of @xmath300 is @xmath301 . hence , one call to @xmath178 at line 11 of the interpolation algorithm requires @xmath302 operations for some positive @xmath303 and @xmath304 .    obviously , the complexity of @xmath181 algorithm is dominated by the for loop .",
    "the number of calls to @xmath178 in this loop is given by @xmath305 the second term in this expression corresponds to line 17 of the algorithm .",
    "the complexity of the whole algorithm is dominated by the last iteration , so the overall complexity is given by @xmath306 .",
    "observe that this is better than the complexity of iia .",
    "the proposed binary interpolation algorithm can be integrated with the re - encoding approach @xcite . as it was shown in section [ sbasischange ] ,",
    "@xmath307 $ ] .",
    "let @xmath308 .",
    "dividing @xmath180 by @xmath309 , one obtains @xmath310 where @xmath311 and @xmath312 . substituting @xmath313 and dividing all polynomials in @xmath59 by @xmath314 ,",
    "one obtains the module @xmath315\\left|p\\left(x_i,\\frac{y_i - g(x_i)}{\\psi(x_i)}\\right)=0^r,\\right.\\right.\\\\ & & \\left.i = k+1,\\ldots , n,\\operatorname{wdeg}_{(0,1)}p(x , z)<\\rho\\right\\},\\end{aligned}\\ ] ] which is generated by @xmath316 and @xmath317 , where @xmath318 .",
    "there is a one - to - one correspondence between the polynomials in @xmath59 and @xmath319 , and the smallest polynomial with respect to @xmath36-weighted degree lexicographic ordering in @xmath59 corresponds to the smallest polynomial with respect to @xmath320-weighted degree lexicographic ordering in @xmath319 .",
    "if a polynomial in @xmath59 has leading term @xmath321 , then the corresponding polynomial in @xmath319 has leading term @xmath322 .",
    "this transformation essentially reduces the number of interpolation points . for high - rate codes",
    "this significantly decreases the number of terms in the polynomials , reducing thus the overall algorithm complexity .",
    "the grbner basis of @xmath319 can be again constructed by the @xmath181 algorithm after minor modifications , as shown in figure [ freencodedinterpolation ] .",
    "@xmath320-weighted degree lexicographic ordering must be used throughout this algorithm .",
    "reencodeinterpolate((x_i , y_i),1 i n),r , k ( x)=_i=1^k ( x - x_i ) , ( x)=_i = k+1^n(x - x_i ) + t(x)=_i=1^n y_i +   + g((x ) ) + j0 +    g=(g,((x)z)^j(z - h(x ) ) ) + jj+1    g_j= x^(j-1)kz^j + b = g +   + r1 +    jm-1 0 r2r + b=(b , b,(|b|,|b|,r ) ) +    r_j=1 rr+1 + b=(b , g,(|b|,|g|,r ) )     + b    the algorithm first constructs a grbner basis of @xmath323 .",
    "the corresponding loop in the original algorithm terminates as soon as a polynomial with leading term @xmath324 is discovered .",
    "after change of variables and term ordering the termination condition transforms to @xmath325",
    ". then the algorithm proceeds with increasing root multiplicity in the same way as the original algorithm .",
    "however , the termination threshold @xmath326 of @xmath178 algorithm has to be changed . for root multiplicity @xmath238 after change of variables the basis polynomials should have leading terms @xmath327 , such that @xmath328 , where @xmath329 are the leading terms of the corresponding polynomials which would be obtained without re - encoding",
    "therefore , the termination threshold in the modified algorithm should be set to @xmath330 , where @xmath326 is the termination threshold derived from .",
    "if the sizes of the bases supplied to @xmath178 are @xmath331 and @xmath332 , then @xmath333 .",
    "hence , one can compute the termination threshold for @xmath178 as @xmath334",
    "this section presents simulation results illustrating the performance of the proposed algorithm .",
    "karatsuba fast univariate polynomial multiplication algorithm @xcite was used at steps 2 and 7 in @xmath178 algorithm .",
    "algorithm , title=\"fig:\",scaledwidth=47.0% ]    algorithm , title=\"fig:\",scaledwidth=47.0% ]    algorithm , title=\"fig:\",scaledwidth=47.0% ]    figure [ fmergeit ] illustrates the probability distribution of the number of iterations performed by @xmath178 algorithm while constructing grbner bases of @xmath37 for different values of @xmath7 .",
    "@xmath335 code over @xmath336 and @xmath337 code over @xmath338 were considered .",
    "first and third plots were obtained with the algorithm presented in figure [ ffastmodmul ] .",
    "the second plot was obtained by replacing leading term minimization on line 2 of the algorithm with random selection of @xmath1 from the set @xmath339 .",
    "it can be seen that in the latter case the algorithm indeed converges exponentially fast . in the first and third cases the convergence is still exponential for @xmath340 , although a bit slower than in the case of random polynomial selection .",
    "however , for the case of @xmath341 up to 8 iterations may be needed with high probability .",
    "the reason is that constructing a grbner basis of @xmath342 requires processing two different collections of polynomials @xmath343 and @xmath344 with @xmath345 .",
    "there is high probability that the smallest polynomial @xmath346 is used almost for all @xmath165 on line @xmath347 of the @xmath178 algorithm .",
    "this results in high algebraic and geometric multiplicity of @xmath215 eigenvalues , i.e. the most probable partitions @xmath279 in are those with large @xmath348 .",
    "this effect is compensated by reduction of the total number of iterations in @xmath81 algorithm .",
    "observe also that for @xmath340 the algorithm converges faster for the case of @xmath349 compared to @xmath350 , as predicted by .",
    "figure [ ftiming ] presents average list decoding time obtained with iia , lee - osullivan algorithm , proposed binary interpolation algorithm , re - encoding method based on iia , and binary interpolation algorithm with re - encoding . @xmath351 and",
    "@xmath352 reed - solomon codes were considered .",
    "it can be seen that the proposed algorithm provides up to 12 times lower complexity than iia for the case of @xmath351 code , and up to 15 times lower complexity for the case of @xmath352 code .",
    "observe that the complexity of the proposed method increases slower than for the case of iia , confirming thus the conclusion of section [ scomplexity ] .",
    "the complexity of the lee - osullivan algorithm turns out to be essentially the same as the one of iia with re - encoding for rate-@xmath353 code , and exceeds it considerably for high - rate code .",
    "observe also , that in some cases increasing the root multiplicity reduces the complexity of the proposed interpolation method .",
    "this represents the impact of the second term in , i.e. line 17 of the proposed algorithm .",
    "observe also that the proposed algorithm outperforms the re - encoding method in the case of low - rate code .",
    "for the high - rate code the re - encoding method turns out to be better .",
    "however , employing re - encoding jointly with the proposed method further reduces the complexity . the overall gain with respect",
    "to iia is up to 22 times for the case of @xmath351 code , and up to 157 times for the case of @xmath352 code .",
    "in this paper a novel algorithm was proposed for the interpolation step of the guruswami - sudan list decoding algorithm .",
    "it is based on the binary exponentiation algorithm , and can be considered as an extension of the lee - osullivan algorithm . the proposed approach was shown to achieve significant asymptotical and practical gain compared to the case of iterative interpolation algorithm .",
    "an important advantage of the new method is that its first step ( first iteration of the while loop in @xmath181 algorithm ) coincides with the gao decoding algorithm , which is able to correct up to @xmath354 errors .",
    "since the most likely error patterns can be corrected with this algorithm , one should invoke the remaining computationally expensive part of the proposed method only if the gao algorithm does not produce a valid codeword .",
    "it is an open problem if it is possible to terminate the interpolation algorithm as soon as it produces a bivariate polynomial containing all the solutions of a particular instance of the decoding problem , and avoid construction of @xmath37 basis for the worst - case @xmath7 given by - .",
    "another interesting problem is to generalize the proposed algorithm to the case rational curve fitting problem considered in @xcite .    for the sake of simplicity , the proposed method was presented for the case of all interpolation points having the same multiplicity .",
    "however , it can be extended to the case of weighted interpolation , allowing thus efficient implementation of soft - decision decoding .",
    "furthermore , it can be integrated with the re - encoding method , achieving thus additional complexity reduction .",
    "the author thanks dr . v.r .",
    "sidorenko for many stimulating discussions .",
    "the author is indebted to the anonymous reviewers , whose comments have greatly improved the quality of the paper .",
    "r.  koetter , j.  ma , a.  vardy , and a.  ahmed , `` efficient interpolation and factorization in algebraic soft - decision decoding of reed - solomon codes , '' in _ proceedings of ieee international symposium on information theory _ , yokohama , japan , june 29  july 4 2003 , p. 365 .    r.  r. nielsen and t.  hoholdt , `` decoding reed - solomon codes beyond half the minimum distance , '' in _ proceedings of the international conference on coding theory and cryptography_.1em plus 0.5em minus 0.4em mexico : springer - verlag , 1998 .",
    "t.  sauer , `` polynomial interpolation of minimal degree and grbner bases , '' in _ grbner bases and applications ( proceedings of the international conference `` 33 years of grbner bases '' ) _ , ser .",
    "london mathematical society lecture notes , b.  buchberger and f.  winkler , eds .",
    ", vol . 251 .",
    "1em plus 0.5em minus 0.4emcambridge university press , 1998 , pp .",
    "483494 .",
    "j.  ma , p.  trifonov , and a.  vardy , `` divide - and - conquer interpolation for list decoding of reed - solomon codes , '' in _ proceedings of ieee international symposium on information theory _ ,",
    "chicago , usa , june 27  july 2 2004 , p. 387 .",
    "k.  lee and m.  e. osullivan , `` an interpolation algorithm using grbner bases for soft - decision decoding of reed - solomon codes , '' in _ proceedings of ieee international symposium on information theory _ , 2006 .",
    "s.  gao , `` a new algorithm for decoding reed - solomon codes , '' in _ communications , information and network security _ , v.  bhargava , h.  v. poor , v.  tarokh , and s.  yoon , eds.1em plus 0.5em minus 0.4em kluwer , 2003 , pp .",
    "s.  fedorenko , `` a simple algorithm for decoding reed - solomon codes and its relation to the welch - berlekamp algorithm , '' _ ieee transactions on information theory _ , vol .  51 , no .  3 , pp .",
    "11961198 , march 2005 ."
  ],
  "abstract_text": [
    "<S> a novel algorithm is proposed for the interpolation step of the guruswami - sudan list decoding algorithm . </S>",
    "<S> the proposed method is based on the binary exponentiation algorithm , and can be considered as an extension of the lee - osullivan algorithm . the algorithm is shown to achieve both asymptotical and practical performance gain compared to the case of iterative interpolation algorithm . further complexity reduction is achieved by integrating the proposed method with re - encoding . the key contribution of the paper , which enables the complexity reduction , is a novel randomized ideal multiplication algorithm . </S>"
  ]
}
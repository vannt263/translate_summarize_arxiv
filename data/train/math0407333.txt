{
  "article_text": [
    "the standard presentation of artin s",
    "@xmath8  strand braid group  @xmath0 is @xmath28 we denote by  @xmath29 the monoid with the above presentation .",
    "an @xmath8  strand _ braid word _ is a word on the @xmath30 letters @xmath31 .",
    "we say that a braid word  @xmath4 is _ positive _ ( _ resp .",
    "_ _ negative _ ) if no letter  @xmath32 ( _ resp .  _",
    "@xmath33 ) occurs in  @xmath4 .",
    "we say that @xmath4 is _ positive  negative _ if @xmath4 consists of positive letters followed by negative letters , _",
    "i.e. _ , if @xmath4 can be expressed as  @xmath34 with @xmath35 positive .",
    "the operations we study here are the following transformations on braid words :    let @xmath36 be braid words .",
    "@xmath15 we say that @xmath4 is _ right reversible _ to  @xmath37 , denoted  @xmath38 , if one can transform  @xmath4 to  @xmath37 by ( iteratively ) replacing some subword  @xmath39 with @xmath40 ( case @xmath41 ) , or with @xmath42 ( case @xmath43 ) , or with  @xmath44 ( the empty word , case @xmath45 ) .",
    "@xmath17 symmetrically , we say that @xmath4 is _ left reversible _ to  @xmath37 , denoted  @xmath46 , if @xmath37 is obtained by ( iteratively ) replacing some subword  @xmath47 with @xmath48 ( case @xmath41 ) , with @xmath49 ( case @xmath43 ) , or with  @xmath44 ( case @xmath45 ) .",
    "@xmath16 we say that @xmath4 and @xmath37 are _ monotonously equivalent _ , denoted  @xmath50 , if @xmath37 is obtained from  @xmath4 by ( iteratively ) replacing some subword  @xmath51 with @xmath52 ( case @xmath53 ) , or some subword  @xmath54 with @xmath55 ( case @xmath56 ) .",
    "it is clear that reversing and monotone equivalence transforms a braid word into an equivalent word , _",
    "i.e. _ , one that represents the same element of the braid group .",
    "observe that the above transformations never introduce trivial pairs of the form @xmath57 or @xmath58 .",
    "so , typically , for a braid word  @xmath4 to be reversible to the empty word  @xmath44 is _ a priori _ a stronger condition than just being equivalent to  @xmath44 , as one is allowed to introduce no @xmath59 or @xmath58 in order to transform  @xmath4 into  @xmath44 .    clearly , the words that can not be transformed using right reversing are the positive  negative words . the key result about braid word reversing is as follows :    [ p : basic ] @xcite",
    "let @xmath4 be an @xmath8  strand braid word of length  @xmath2 .",
    "then there exists a unique positive  negative word  @xmath37 such that @xmath4 is right reversible to  @xmath37 .",
    "moreover , the length of  @xmath37 is at most  @xmath9 , with @xmath60 .",
    "proposition  [ p : basic ] is a consequence of garside s result that common right multiples exist in braid monoids  @xcite and of general properties of word reversing  @xcite guaranteeing that , for all positive words  @xmath61 , the existence of positive words  @xmath62 satisfying @xmath63 is equivalent to the existence of a common right multiple for the elements represented by  @xmath64 and  @xmath65 . in the current paper , we shall only use the following result :    [ l : lcm ] @xcite assume that @xmath66 are equivalent positive braid words and , similarly , that @xmath67 are equivalent positive braid words .",
    "let @xmath68 be the positive words satisfying @xmath63 and @xmath69 .",
    "then @xmath70 and  @xmath71 are equivalent , and so are  @xmath72 and  @xmath73 .",
    "the previous results imply that right reversing solves the word problem of the braid monoid and of the braid group , in one and two passes respectively .",
    "indeed lemma  [ l : lcm ] implies that two positive braid words @xmath35 represent the same element of the braid monoid if and only if @xmath74 is right reversible to the empty word , and that an arbitrary braid word  @xmath4 represents  @xmath75 in the braid group if and only if it is right reversible to some positive  negative word  @xmath76 such that @xmath74 is right reversible to the empty word .",
    "the last step is equivalent to @xmath76 being left reversible to the empty word .",
    "so a braid word  @xmath4 represents  @xmath75 if and only if the empty word can be obtained from  @xmath4 using left and right reversing .",
    "proposition  [ p : basic ] says nothing about the words one obtains using both left and right reversing .",
    "the trivial example @xmath77 shows that , starting from  @xmath78 , we can produce words of arbitrary length using left and right reversing , since the initial word is a proper factor of the final word .",
    "hence , whenever both left and reversing are involved , restricting to freely reduced words , _",
    "i.e. _ , containing no pattern  @xmath59 or  @xmath58 , is a minimal requirement if one is to expect bounded length .",
    "we define _ reduced right reversing _ , denoted  @xmath79 , to be the variant of right reversing in which a free reduction is performed after each reversing step . reduced left reverving and monotone equivalence are defined similarly .",
    "question  [ q : main ] asks in particular whether the words obtained from a given word using reduced reversing and monotone equivalence have a bounded length .",
    "we now establish proposition  [ p : lrm ] , which provides a negative answer . to improve readability ,",
    "we adopt a convention of  @xcite , using @xmath80 for  @xmath81 , and @xmath82 for @xmath83 .",
    "for instance , becomes @xmath84 .",
    "[ proof of proposition  [ p : lrm ] ] ( figure  [ f : spheres ] ) we find ( the underlined subwords are those we transform ) : @xmath85 and , inductively , @xmath86 transforms into @xmath87 for each  @xmath88 as the the words above never finish with the letter  @xmath89 .",
    "[ htb ]    ( 126,75)(0 , 0 ) ( 0,0 ) using reversing and monotone equivalence ; all words are traced on the fragment of the cayley graph corresponding to the divisors of  @xmath90 , _",
    "i.e. _ , on the @xmath5-permutohedron , which , topologically , is a sphere ; the initial path is pushed around the sphere so as to make a loop around the grey facet on the rear ; each other facet is crossed once.,title=\"fig : \" ]    note that in the previous counter - example not only the final words , but even all intermediate words are freely reduced .",
    "now we see that these words still involve the commuting pattern @xmath91 , _",
    "i.e. _ , @xmath92 . we shall show now that even such semi - trivial patterns can be avoided .",
    "we say that a braid word is _ strongly reduced _ if it is freely reduced and , in addition , contains no subword of the form @xmath93 with @xmath94 and @xmath41 .",
    "we define _ strongly reduced _ right reversing to be the variant in which a full reduction is performed after each reversing step .    in the above definition , strongly reducing a word means iteratively replacing each subword of the form @xmath93 with the corresponding letter  @xmath95 .",
    "this is easily seen to lead in finitely many steps to a strongly reduced word . the latter need not be unique , but the various words so obtained are equivalent via commutation relations .",
    "[ p : lrm+ ] starting from  @xmath96 , one can derive using strongly reduced left and right reversing and monotone equivalence arbitrary long ( strongly reduced ) words .    using  @xmath97 , @xmath98 and @xmath99 for the strongly reduced versions of  @xmath100 , @xmath101 , and  @xmath102 ,",
    "we find    @xmath103    @xmath104    @xmath105    @xmath106    @xmath107    @xmath108    @xmath109    @xmath110    @xmath111    @xmath112    @xmath113    @xmath114    @xmath115    @xmath116    @xmath117    @xmath118    @xmath119    @xmath120    @xmath121    @xmath122    @xmath123    @xmath124    @xmath125    @xmath126    @xmath127    @xmath128    @xmath129    @xmath130    @xmath131 .",
    "+ the latter word is @xmath132 .",
    "now we turn to positive results , and establish some upper bounds for the length of the words that can be constructed using reversing and monotone equivalence . in this section ,",
    "we consider the case of right reversing alone .",
    "proposition  [ p : basic ] provides an upper bound on the length of the final , _ i.e. _ , positive  negative , word that can be obtained from a word  @xmath4 , but it gives no bound for the intermediate words .",
    "this is what proposition  [ p : bound]@xmath15 does .    in order to prove the result",
    ", we need some auxiliary notions . first , as usual , we associate with each @xmath8  strand braid word  @xmath4 the braid diagram obtained by concatenating the elementary diagrams for the successive letters of  @xmath4 , and the diagram for  @xmath33 is    ( 55,9)(0 , 0 ) ( 9.5,0 ) ( 9,7)@xmath75 ( 29,7)@xmath133 ( 33,7)@xmath134 ( 54,7)@xmath8 ( 0,3)@xmath33 : ( 16,3)@xmath135 ( 46,3)@xmath135    an @xmath8  strand braid diagram can be seen as the projection on @xmath136 of a 3d - figure consisting of @xmath8  non - intersecting curves .    ( figure  [ f : simple ] ) a braid word  @xmath4 is said to be _ layered _ if the associated diagram can be realized as the projection of a 3d - figure in which each strand lives in some vertical plane .",
    "[ htb ]    ( 67,33)(0 , 0 ) ( 0,0 ) is layered : the strands of the associated diagram live in parallel vertical planes , title=\"fig : \" ] ( 19,0)@xmath137 ( 29,4)@xmath138 ( 39,8)@xmath139 ( 59,16)@xmath140    it is well - known that , if @xmath64 is an @xmath8  strand positive word , then @xmath64 is layered if and only if @xmath64 is _ simple _ , _ i.e. _ , it represents a divisor of garside s fundamental braid  @xmath141 in the monoid  @xmath29 .",
    "[ l : simpleclosed ] ( i ) if @xmath64 and @xmath65 are layered positive words , then @xmath74 is layered .",
    "\\(ii ) if @xmath4 is a layered word , then every word obtained from  @xmath4 using reversing or monotone equivalence is still layered .",
    "@xmath15 if @xmath64 is a positive layered word , then the diagram of  @xmath64 can be realized so that the @xmath133-th strand ,",
    "_ i.e. _ , the strand that starts at position  @xmath133 , lives in the plane  @xmath142 .",
    "thus @xmath143 can be realized so that the strand finishing at position  @xmath133 lives in  @xmath144 , and @xmath65 can be realized so that the strand starting at position  @xmath133 lives in the same plane .",
    "hence the two diagrams can be concatenated without contradicting layeredness .    for  @xmath17 , it suffices to check that each elementary transformation introduces no obstruction to the hypothesis that the strands live in a vertical plane .",
    "the case of commutation relations is trivial .",
    "the case of right reversing is illustrated in figure  [ f : closure ] ; the cases of left reversing and monotone equivalence are similar .",
    "[ htb ]    ( 53,24)(0 , 0 ) ( 0,0 ) occurs in a layered word , then , necessarily , the strand  @xmath145 lies in the front plane , while @xmath146 lies in the back plane ; then the pattern @xmath147 can be realised in the same planes without level obstruction .",
    "the case of @xmath148 is similar.,title=\"fig : \" ] ( 0,17)@xmath149 ( 8,17)@xmath146 ( 16,17)@xmath145 ( 36,22)@xmath149 ( 44,22)@xmath146 ( 52,22)@xmath145 ( 25,10)@xmath100    in the braid diagram associated with a layered word  @xmath4 , there is a well - defined rear strand , _",
    "i.e. _ , the strand that lives in the plane @xmath150 with minimal  @xmath145 : to avoid ambiguity , we choose the leftmost strand in that plane if there are several ones  this makes sense as the strands living in a given plane may not intersect .    for  @xmath4 a layered braid word ,",
    "we denote by @xmath151 the braid word that encodes the diagram obtained from the diagram of  @xmath4 by deleting the rear strand .",
    "[ l : del ] if @xmath4 is a layered braid word , then @xmath38 implies @xmath152 .    once again , it is sufficient to consider the possible elementary transformations . up to a translation of indices ,",
    "the only non - trivial cases are @xmath153 and @xmath154 , which both reduce to @xmath155 when the rear strand is deleted .",
    "observe that the assumption that the removed strand is the rear ( or the front ) one is necessary : if we remove the middle strand in @xmath156 , we obtain @xmath44 on the left , and @xmath157 on the right .",
    "however , @xmath158 fails .",
    "a braid word is said to be _ elementary _ if it is a subword of a word obtained by right reversing from a word of the form  @xmath74 , with @xmath35 layered positive ( or , equivalently , simple ) words .    by lemma  [ l : simpleclosed ] ,",
    "every elementary word is layered , but the converse is not true : @xmath157 is layered , but not elementary .",
    "indeed , when @xmath74 is right reversible to  @xmath159 , then the braids represented by  @xmath70 and  @xmath72 have no common right divisor in the braid monoid .",
    "[ lengthelem ] the length of an @xmath8  strand elementary braid word is at most @xmath160 .",
    "assume that @xmath4 is right reversible to  @xmath37 in one step .",
    "then the crossings in the diagram encoded by  @xmath37 are not exactly the same as the crossings in the diagram encoded by  @xmath4 , but we can define a notion of inheritance : for instance , in figure  [ f : closure ] , we say that the crossing of the strands  @xmath149 and  @xmath146 in the right figure is the heir of the crossing of these strands in the left figure .",
    "then it is easy to check that , in each case , the crossings in  @xmath37 are the heirs of the crossings of  @xmath4 , except that two new crossings may appear ( _ e.g. _ , crossings of  @xmath146 and  @xmath145 in figure  [ f : closure ] ) , or two crossings may vanish ( when a free reduction is performed ) .",
    "let us consider a right reversing sequence @xmath161 , , @xmath162 , _ i.e. _ , we assume that @xmath163 is right reversible to  @xmath164 in one step for each  @xmath88 .",
    "we define the _ total number of crossings _",
    "@xmath165 in this sequence as follows : each crossing in  @xmath161 contributes  @xmath75 to  @xmath165 , and so does every new crossing that appears in some  @xmath163 , even if it subsequently vanishes ; on the other hand , the contribution to  @xmath165 of a crossing that is the heir of a previously existing crossing is  @xmath166 .",
    "so @xmath165 is the sum of the number of crossings of all the terms in the sequence , up to inheritance .",
    "we claim that @xmath167 yields an upper bound for the total number of crossings in a right reversing sequence starting with a ( layered ) word of the form  @xmath74 with @xmath35 simple @xmath8  strand braid words .",
    "then , in particular , @xmath168 is an upper bound for the length of each braid word occurring in such a reversing sequence , and , therefore , for the length of every @xmath8  strand elementary braid word .    for  @xmath169 ,",
    "the only sequence to consider is  @xmath170 , so @xmath171 is indeed a valid upper bound .",
    "assume @xmath172 , and let @xmath4 be an @xmath8  strand elementary word .",
    "by hypothesis there is a finite sequence of words @xmath173 , @xmath174 , , @xmath175 such that @xmath35 are positive layered words and each word  @xmath176 is right reversible to  @xmath177 in one step . by lemma  [ l : simpleclosed ] , all the words  @xmath163 are layered . by lemma  [ l : del ] , the words @xmath178 , , @xmath179 also form a right reversing sequence .",
    "moreover , @xmath178 , _",
    "i.e. _ , @xmath180 , is a word of the form @xmath181 , where @xmath182 are layered positive @xmath183  strand words .",
    "so each word  @xmath184 is elementary , and , by induction hypothesis , the total number of crossings ( up to inheritance ) in the sequence @xmath178 , , @xmath184 is bounded above by  @xmath185 .",
    "now let us reintroduce the rear strand in the initial word and count how many crossings it can create in ( the diagram associated with )  @xmath176 .",
    "first , in  @xmath64 and  @xmath65 , which are positive , the rear strand may cross each other strand at most once , so it creates at most @xmath186 crossings .",
    "then , the reversing steps may create new crossings between the front stands and the rear strand .",
    "however , we claim that at most @xmath187 such crossings can be created during the sequence of right reversings .",
    "indeed , during each such reversing , the rear strand moves behind one crossing of the remaining strands , from left to right , and in the process it creates two new crossings ( figure  [ f : crossing ] ) . as the total number of crossings not involving the rear strand is at most",
    "@xmath185 , this puts the desired bound on the number of new reversings . in summary , we obtain @xmath188 .",
    "now we calculate @xmath189 this completes the proof of the lemma .",
    "[ htb ]    ( 75,21)(0 , 0 ) ( 0,0 ) ( 13,10)@xmath100 ( 58.5,10)@xmath100    we remark that the proof of lemma [ lengthelem ] would go through even if we allowed not only right reversings , but also commutation relations like @xmath190 or even @xmath191 .",
    "now it remains to decompose arbitrary words into products of elementary words .",
    "we recall that a layered positive word is the same as a simple word , in the sense of garside , namely a positive word representing a divisor of @xmath192 . from now on",
    ", we shall be dealing with positive words only , and therefore use the word `` simple '' rather than `` layered '' .",
    "[ l : decomposition ] assume @xmath193 , where @xmath194 are simple positive braid words , and @xmath195 .",
    "then every word  @xmath37 obtained from  @xmath4 using right reversing can be written as the product of at most  @xmath2 elementary words .",
    "first we associate with every right reversing sequence @xmath196 , @xmath197 , a planar oriented graph whose edges are labeled by  @xmath33 s .",
    "this graph , which will be called a _ reversing diagram _",
    ", is analogous to a van kampen diagram , and it is constructed inductively as follows ( figure  [ f : reversingdiagram ] ) .",
    "first we associate with  @xmath196 a path shaped like an ascending staircase by reading  @xmath196 from left to right and iteratively appending a horizontal right - oriented edge labeled  @xmath33 for each letter  @xmath33 , and a vertical down - oriented edge labeled  @xmath33 for each letter  @xmath32 .",
    "assume that the fragment corresponding to  @xmath198 has been constructed and its right side is a path labeled  @xmath199 .",
    "by definition , the word  @xmath200 is obtained from  @xmath199 by replacing some subword  @xmath201 with the unique word  @xmath202 such that @xmath203 is a relation of the considered presentation .",
    "the involved subword  @xmath201 corresponds to some top - left oriented corner in the diagram , and we complete the diagram and transform this corner into a square by adding horizontal edges labelled  @xmath64 and vertical edges labelled  @xmath65 , following the scheme :    ( 56,13)(0,0 ) ( 4,2.5 ) ( 0,6.5)@xmath33 ( 7,12.5)@xmath204 ( 40,6.5)@xmath33 ( 47,12.5)@xmath204 ( 47,1)@xmath65 ( 52,6.5)@xmath64 ( 14,6.5)completed into    .    [ htb ]    ( 108,38)(0 , 0 ) ( 4,2.5 ) : one draws a zigzag path labelled by the initial word , and , then , one iteratively fills the open top - left corners using the braid relations.,title=\"fig : \" ] ( 7,0)@xmath205 ( 15,0)@xmath22 ( 23,0)@xmath206 ( 31,0)@xmath205 ( 70,0)@xmath207 ( 86,0)@xmath208 ( 28,13)@xmath206 ( 11,21.5)@xmath205 ( 28,21.5)@xmath206 ( 71,21.5)@xmath205 ( 88,21.5)@xmath206 ( 28,37.5)@xmath206 ( 88,37.5)@xmath206 ( 0,11)@xmath22 ( 22,7)@xmath205 ( 22,15)@xmath22 ( 22,27)@xmath22 ( 38,9)@xmath205 ( 38,5)@xmath206 ( 38,15)@xmath22 ( 38,27)@xmath22 ( 60,11)@xmath22 ( 82,11)@xmath209 ( 82,27)@xmath22 ( 98,11)@xmath210 ( 98,27)@xmath22    the next step is to observe that each right reversing graph starting with  @xmath4 , in particular the maximal one , _",
    "i.e. _ , the one that finishes with a positive  negative word , admits a rectangular spine , which will be called the _ right reversing grid _ of  @xmath4 .",
    "assume that @xmath4 contains @xmath211  positive letters and @xmath212  negative ones .",
    "we first assume in addition that @xmath4 is a negative  positive word .",
    "we define two sequences of simple words  @xmath213 for @xmath214 and @xmath215 by setting @xmath216 to be the @xmath133th letter in the inverse of the negative part of  @xmath4 for @xmath217 , and to be the empty word  @xmath44 for @xmath218 , and by defining @xmath219 to be the @xmath220th letter in the positive part of  @xmath4 for @xmath221 , and to be  @xmath44 for  @xmath222 .",
    "then we inductively define  @xmath223 by @xmath224 .",
    "we notice that these words are indeed simple . in this way",
    ", we obtain a grid , which is a fragment of the complete reversing diagram associated with  @xmath4 ( figure  [ f : grid ] ) .",
    "if @xmath4 is not negative  positive , then the construction is similar , except that the word  @xmath4 need not correspond to a top  left corner , and the top ",
    "left corner of the rectangular grid may be missing ( as in figure  [ f : reversingdiagram ] ) .",
    "[ htb ]    ( 66,44)(0 , 0 ) ( 6,2.2 ) into a product of elementary words ( here delimited by white dots ) ; in the case of the word @xmath225 of figure  [ f : reversingdiagram ] , we have @xmath226 , @xmath227 , @xmath228 , and , for instance , @xmath229 and @xmath230.,title=\"fig : \" ] ( 0,9)@xmath231 ( 0,35)@xmath232 ( 21,35)@xmath233 ( 61,9)@xmath234 ( 61,35)@xmath235 ( 11,0)@xmath236 ( 24,0)@xmath237 ( 50,0)@xmath238 ( 11,44)@xmath239 ( 24,44)@xmath240 ( 50,44)@xmath241 ( 11,26.7)@xmath242 ( 24,26.7)@xmath243 ( 50,26.7)@xmath244 ( 9,4.5)@xmath245 ( 14,9)@xmath246 ( 25,8)@xmath247 ( 50,33)@xmath248 ( 61,40)@xmath249    the point now is that every word  @xmath37 obtained from  @xmath4 using right reversing labels a path from the bottom - left corner to the top - right corner in the right reversing diagram of  @xmath4 . as the reversing grid partitions this diagram into squares , we can attribute a square of the grid to each letter in  @xmath37 ; we take the convention that , when a letter  @xmath33 corresponds to the vertical common edge between two squares of the grid , it is attached to the rightmost square , and that , similarly , a horizontal edge belongs , in case of doubt , to the bottom square .",
    "as the path labelled  @xmath4 contains only right - oriented edges and top - oriented edges  actually bottom - oriented edges that are crossed in the wrong direction  the only possibility after a letter attached to the @xmath250-square is a letter attached to @xmath251 with @xmath252  or  @xmath75 .",
    "it follows that the path associated with  @xmath37 visits at most @xmath2  squares , and that @xmath37 can be decomposed into a product @xmath253 , where @xmath254 consists of all letters attached to the @xmath88th visited square .    it remains to see that each word  @xmath254 is elementary .",
    "now an easy induction shows that , if @xmath255 is a fragment of  @xmath37 lying in the @xmath256-square , then there exist positive words  @xmath257 such that @xmath258 is right reversible to @xmath259 , where @xmath260 and  @xmath261 are  @xmath262 according to the sides of the square through which the path enters and exits the square .",
    "since the words @xmath263 and @xmath264 are simple , the words  @xmath259 and , therefore , @xmath255 are elementary by definition .",
    "thus @xmath37 is the product of @xmath2  elementary words .",
    "we can now conclude as for the length of the words obtained using right reversing .",
    "[ proof of proposition  [ p : bound]@xmath15 ] let @xmath4 be an @xmath8  strand braid word of length  @xmath2 .",
    "we can write it @xmath266 where each  @xmath163 is a single letter  @xmath33 and @xmath267 is  @xmath262 . by lemma  [ l : decomposition ] ,",
    "every word  @xmath37 obtained from  @xmath4 by right reversing is a product of at most  @xmath2 elementary @xmath8  strand words . by lemma  [ lengthelem",
    "] , each of these words has length  @xmath268 at most .",
    "when monotone equivalence enters the picture , the previous argument fails : simple factors may be changed , and lemma  [ l : decomposition ] does not extend .",
    "for instance , the word  @xmath269 is a product of two simple words , namely  @xmath270 , but a monotone equivalence transforms it to @xmath271 , which can not be decomposed better than @xmath272 , a product of three simple words .",
    "so new arguments are needed .    by proposition  [ p : basic ] , every braid word  @xmath4 is right reversible to a unique positive  negative word  @xmath76 .",
    "we shall denote  @xmath65 by  @xmath273 ( the right numerator ) and  @xmath64 by  @xmath274 ( the right denominator ) .",
    "so @xmath275 always holds .",
    "we first consider the case of positive  negative words .",
    "[ proof of proposition  [ p : bound]@xmath17 ] let @xmath4 be an @xmath8  strand braid word of length  @xmath2 . by proposition  [ p : basic ] , @xmath4 is right reversible to  @xmath277 , and the latter word has length at most @xmath278 . in order to prove the expected result ,",
    "it is enough to prove the following : if  @xmath37 is any positive  negative word ( _ i.e. _ , a word satisfying @xmath279 ) which can be obtained from  @xmath4 by right reversing and monotone equivalence , then @xmath280 is equivalent to  @xmath273 , and @xmath281 is equivalent to  @xmath274 ; so , in particular , they have the same length . for an induction , it is enough to assume that only one monotone equivalence is used in the transformation of  @xmath4 into  @xmath37 .",
    "let us display this monotone equivalence .",
    "the hypothesis is that there exist words  @xmath282 and equivalent positive words  @xmath283 satisfying @xmath284 , and @xmath285the case when @xmath286 and @xmath287 are equivalent negative words would be treated similarly . proposition  [ p : basic ] states in particular that the order of reversing steps does not matter for the positive  negative word finally obtained , so @xmath288 holds .",
    "let us compare the reversing processes from  @xmath289 to @xmath277 and that from  @xmath290 to  @xmath37 .",
    "( 84,23)(0 , 0 ) ( 0,2.5 ) is replaced with the equivalent word  @xmath287 , the sequel of the reversing changes , but the words are replaced with equivalent words , title=\"fig : \" ] ( 4,0)@xmath72 ( 14,0)@xmath291 ( 24,0)@xmath292 ( 5.5,6)@xmath174 ( 11,7)@xmath70 ( 21,7)@xmath293 ( 31,17)@xmath294 ( 31,7)@xmath295 ( 25.5,16)@xmath296 ( 14,15)@xmath286 ( 24,11)@xmath297 ( 5,19)@xmath4 ( 54,0)@xmath72 ( 64,0)@xmath298 ( 74,0)@xmath299 ( 55.5,6)@xmath174 ( 61,7)@xmath70 ( 71,7)@xmath300 ( 81,17)@xmath294 ( 81,7)@xmath301 ( 75.5,16)@xmath296 ( 64,15)@xmath287 ( 74,11)@xmath297 ( 55,19)@xmath4    let us introduce positive words  @xmath72 , @xmath70 , @xmath297 , @xmath294 , @xmath291 , @xmath293 , @xmath292 , @xmath295 satisfying @xmath302 , @xmath303 , @xmath304 , and , finally , @xmath305 . then , by construction , we have @xmath306 and @xmath307 ( figure",
    "[ f : comparison ] ) .",
    "when we replace @xmath286 with  @xmath287 , we obtain new positive words  @xmath308 satisfying @xmath309 , and lemma  [ l : lcm ] guarantees that @xmath300 is equivalent to  @xmath293 and @xmath298 is equivalent to  @xmath291 .",
    "then , we have @xmath310 for some  @xmath311 , and lemma  [ l : lcm ] guarantees that @xmath301 is equivalent to  @xmath295 and @xmath299 is equivalent to  @xmath292 .",
    "we conclude that @xmath280 , which is @xmath312 , is equivalent to  @xmath313 , _ i.e. _ , to  @xmath273 , and that @xmath281 , which is  @xmath314 , is equivalent to  @xmath315 , _ i.e. _ , to  @xmath274 .",
    "once again , the previous argument only deals with the final , positive  negative words obtained using right reversing and monotone equivalence , and it says nothing about the length of the intermediate words . in order to prove proposition  [ p : bound ]  @xmath16",
    ", we need a new argument . in the sequel , we use  @xmath316 and  @xmath317 for the unique positive words satisfying @xmath318 ( the left numerator and denominator ) .",
    "we recall that a word is called simple if it is positive and represents a divisor of  @xmath141 .",
    "[ l : decomposition2 ] let @xmath4 be a word containing @xmath212  negative letters and @xmath211  positive letters",
    ". then @xmath273 and @xmath316 are the products of at most  @xmath211 simple words , and @xmath274 and @xmath317 are the products of at most  @xmath212 simple words .    as in the proof of lemma",
    "[ l : decomposition ] , consider the right reversing grid of  @xmath4 .",
    "it has height  @xmath212 and width  @xmath211 and all arrows wear simple labels .",
    "so do in particular the bottom and right sides .",
    "this means that @xmath273 is the product of at most @xmath211  simple words , and , similarly , @xmath274 is the product of at most @xmath212  simple words .",
    "the argument is symmetric for left reversing .",
    "[ proof of proposition  [ p : bound]@xmath16 ] let  @xmath4 be an arbitrary @xmath8  strand braid word of length  @xmath2 .",
    "then @xmath4 is right reversible to  @xmath277 , and , symmetrically , it is left reversible to  @xmath320 . for  @xmath64 a braid word , we shall denote by  @xmath321 the braid represented by  @xmath64 .",
    "now we define @xmath322 to be the restriction of the cayley graph of  @xmath0 to the divisors of  @xmath323 in  @xmath29 , _ i.e. _ , @xmath322 is a finite graph , containing precisely those vertices that lie on some geodesic path from  @xmath75 to  @xmath323these paths all have the same length , since they correspond to positive words equivalent to  @xmath324 . by lemma  [ l : decomposition2 ]",
    ", the word  @xmath325 is the product of at most  @xmath2 simple words , hence its length is at most @xmath326 .",
    "let  @xmath327 be a vertex of the graph  @xmath322 .",
    "we say that a braid word  @xmath64 is _ traced _ in  @xmath322 from  @xmath327 if there exists a path labelled  @xmath64 starting at  @xmath327 in  @xmath322 , _ i.e. _ , we can read all letters of  @xmath64 successively without leaving  @xmath322",
    ". then it is proved in  @xcite that the word  @xmath4 itself is traced from  @xmath328 in  @xmath322 , and that the family of all words traced from a fixed vertex in  @xmath322 is closed under right and left reversing , and under monotone equivalence .",
    "therefore , every word  @xmath37 that can be derived from  @xmath4 using reversing and monotone equivalence is traced from  @xmath328 in  @xmath322 .",
    "now , we attribute a weight to every edge  @xmath260 in  @xmath322 , namely the integer  @xmath329 , where @xmath261 is the distance from the source vertex of  @xmath260 to the final vertex of  @xmath322 , and @xmath329 is the @xmath261th fibonacci number : @xmath330 , and @xmath331 for @xmath332 ( figure  [ f : weight ] ) .",
    "finally we define the weight of a path in  @xmath322 to be the sum of the weight of its edges .",
    "( 90,28)(0 , 0 ) ( 0,0),title=\"fig : \" ] ( 2.5,26)@xmath333 ( 15,26)@xmath135 ( 55,26)@xmath135 ( 27.5,26)@xmath334 ( 33.5,26)@xmath335 ( 41.5,26)@xmath336 ( 67,26)@xmath337 ( -3,14)@xmath75 ( 74,14)@xmath323    then we observe that the weight can not increase when right reversing or monotone equivalence is performed . indeed , reversing @xmath201 to @xmath338 ( with @xmath43 ) replaces two edges contributing say @xmath339 to the total weight with four edges contributing @xmath340 , _ i.e. _ , @xmath339 again . similarly , reversing @xmath201 to @xmath40 ( with @xmath341 ) diminishes the contribution to the weight from  @xmath339 to  @xmath342 , and deleting @xmath58 diminishes it by  @xmath339 . finally , replacing some positive ( _ resp .  _",
    "negative ) subword with an equivalent positive ( _ resp .  _ negative ) word preserves the weight . as each letter in a braid word contributes at least  @xmath75 in the weight , we deduce that the length of any word obtained from  @xmath4 using right reversing and monotone equivalence is bounded above by the weight of  @xmath4 .",
    "the latter is the sum of  @xmath2 fibonacci numbers between  @xmath337 and  @xmath333 , where @xmath343 is at most @xmath344 .",
    "one easily checks that the worst case is when @xmath4 consists of @xmath345 negative letters and @xmath345 positive letters with weights @xmath333 , @xmath346 , , @xmath347 . using the very rough estimate @xmath348 for @xmath349 we obtain an upper bound of @xmath350 on the weight of @xmath4 .",
    "the previous results leave open all questions about simultaneous left and right reversing",
    ". we shall conclude with a conjecture which does appear to be true  it is confirmed by extensive computer experiments  and which would still imply a linear upper bound on the space complexity of the handle reduction algorithm .",
    "[ c : newconj ] let @xmath4 be an @xmath8  strand braid word of length  @xmath2 .",
    "let @xmath37 be another such word which is obtained from @xmath4 by a sequence of reduced commutation relations and reduced word reversings .",
    "then @xmath37 is of length at most @xmath9 , where @xmath1 is a constant depending only on @xmath8 .",
    "we have no good guess , however , what the constant @xmath1 should be",
    ". we do know that it is not @xmath353 , as the @xmath5  strand braid word @xmath354 of length 8 can be transformed into a word of length 52 ( which is larger than @xmath355 ) .      in order to prove conjecture  [ c : newconj ]",
    ", it might be useful to consider bestvina s product structure on the flag complex @xmath356 which is closely related to the cayley graph of @xmath0 @xcite .",
    "bestvina showed that there is a natural homeomorphism @xmath357 , where @xmath358 is another complex which satisfies a certain weak non - positive curvature condition , and is conjectured to be @xmath359 .",
    "we think now of a braid word as a path in @xmath356 , and of our transformations of braid words as deformations of the path that preserve its endpoints . then banning positive equivalences of reidemeister  iii",
    "type amounts to forbidding the most obvious way of deforming a path in the @xmath358-direction .",
    "in other words , applying only commutation relations and word reversings means deforming the path mainly in the @xmath360-direction ."
  ],
  "abstract_text": [
    "<S> it has been conjectured that in a braid group , or more generally in a garside group , applying any sequence of monotone equivalences and word reversings can increase the length of a word by at most a linear factor depending on the group presentation only . </S>",
    "<S> we give a counter - example to this conjecture , but , on the other hand , we establish length upper bounds for the case when only right reversing is involved . </S>",
    "<S> we also state a new conjecture which would , like the above one , imply that the space complexity of the handle reduction algorithm is linear .    </S>",
    "<S> this paper was motivated by attempts to estimate the complexity of the handle reduction algorithm in braid groups @xcite , _ via _ a detailed study of _ word reversings_.    word reversing is a general combinatorial method for investigating monoids and groups specified by explicit presentations @xcite . in good cases , typically in the case of braid groups  @xcite and , more generally , garside groups @xcite , it provides algorithmic solutions to the word problem , as well as an efficient way for proving properties such as cancellativity or existence of least common multiples in the monoid or quadratic isoperimetric inequalities in the group </S>",
    "<S> .    however , many natural questions about word reversing remain open , even in the basic case of the standard presentation of artin s braid group  @xmath0 . </S>",
    "<S> there are two types of word reversing , namely the left and the right one . in the case of  @xmath0 and </S>",
    "<S> , more generally , in the case of artin  tits groups of finite coxeter type , garside s theory implies that every sequence of right reversings must terminate , and it gives an upper bound on the length of the final word thus obtained ; however , it says nothing about the length of the _ intermediate _ words and about many related questions . </S>",
    "<S> also , very little is known about what happens when both the left and the right types are used in one reversing sequence . in particular , we raised    @xcite [ q : main ] does there exist a constant  @xmath1 such that the length of every freely reduced braid word obtained from a length  @xmath2 word by using left and right reversing plus monotone equivalence  </S>",
    "<S> precise definitions are given below  is bounded above by  @xmath3 ?    a positive answer would have implied a linear upper bound on the space complexity of the handle reduction algorithm in braid groups , and indeed a positive answer was carelessly proposed as a conjecture in  @xcite . </S>",
    "<S> the aim of this paper is , on the one hand , to answer question  [ q : main ] in the negative , by proving    [ p : lrm ] let @xmath4 be the @xmath5  strand braid word  @xmath6 </S>",
    "<S> . then arbitrarily long freely reduced words can be obtained from  @xmath4 using left and right reversing and monotone equivalence .    </S>",
    "<S> in fact , the result of proposition  [ p : lrm ] can even be strengthened by requiring that all involved words contain no commuting pattern like  @xmath7 .    </S>",
    "<S> on the other hand , we shall establish some positive results , namely :    [ p : bound ] let @xmath4 be an @xmath8  strand braid word of length  @xmath2 . </S>",
    "<S> + ( i ) every word obtained from @xmath4 using right reversing has length at most  @xmath9 , with @xmath10 . + ( ii ) every positive  negative word obtained from  @xmath4 using right reversing and monotone equivalence has length at most  @xmath11 , with @xmath12 . + ( iii ) every word obtained from  @xmath4 using right reversing and monotone equivalence has length at most  @xmath13 , with @xmath14 .    </S>",
    "<S> the upper bounds of proposition  [ p : bound]@xmath15 and  [ p : bound]@xmath16 are certainly not optimal , but they seem to be the first ones in this direction . as for proposition  [ p : bound]@xmath17 , we notice that @xmath18 has to grow at least linearly with  @xmath8 , as right reversing the word @xmath19 leads to a positive  negative word of length  @xmath20 .    at the end of the paper we shall propose an alternative conjecture which does appear to be true , and which would still imply a linear bound on the space complexity of the handle reduction algorithm .    before giving the technical definitions , </S>",
    "<S> we explain in some more detail the connection of our results with the handle reduction algorithm  @xcite and @xmath21-definite forms of braids . </S>",
    "<S> it is known that every braid word is equivalent _ modulo _ the braid relations to a @xmath22-definite word , _ </S>",
    "<S> i.e. _  a word in which at least one of the letters  @xmath23 does not occur . </S>",
    "<S> this fact is one of the two key points in the construction of a canonical ordering on braids @xcite . </S>",
    "<S> handle reduction is a combinatorial method that solves the isotopy problem of braids and produces @xmath22-definite forms . </S>",
    "<S> although extremely efficient in practice , the method remains partly mysterious and its exact complexity is unknown : the only upper bound proved so far is exponential , very far from statistical evidence .    </S>",
    "<S> even more frustrating is the lack of control on the length of the words appearing in the process : the only proved result is an exponential upper bound , while all experiments indicate that their length is bounded by @xmath9 , where @xmath2 is the length of the input braid word , and @xmath1 in a constant which appears to be growing linearly with the number of strands @xmath8for four strands , the choice @xmath24 seems sufficient , and as the example of the words @xmath25 ( with @xmath26 according to the parity of  @xmath8 ) demonstrates , @xmath1 needs to grow _ at least _ linearly with @xmath8 . </S>",
    "<S> now , since handle reduction is a compound of reversing and monotone equivalence , an affirmative answer to question  [ q : main ] would have given the expected linear bound for the length of the words appearing in handle reduction . </S>",
    "<S> as a corollary , it would have shown that , for fixed @xmath8 , every braid word of length  @xmath2 is equivalent to a @xmath22-definite word of length  @xmath27 . </S>",
    "<S> let us mention that the latter statement has been proved recently in  @xcite using a deep result about train tracks @xcite . </S>",
    "<S> the current results leave the questions about handle reduction open . </S>",
    "<S> however , handle reduction is in fact a compound of a more restricted set of operations , namely reversings and commutation relations , so we would be satisfied if the length of words remained bounded under iterated applications of these two operations  this is exactly the modified conjecture stated at the end of the paper . </S>"
  ]
}
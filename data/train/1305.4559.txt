{
  "article_text": [
    "the game of cops and robbers on graphs was introduced independently by quilliot @xcite and nowakowski and winkler @xcite , and has generated a great deal of study ; see , e.g. , @xcite . in the original formulation a cop and robber move alternately and deliberately , with full information , from vertex to adjacent vertex on a graph @xmath2 , with the cop trying to capture the robber and the robber trying to elude the cop . in this work ,",
    "all graphs are assumed to be connected , simple ( no loops or multiple edges ) and undirected .",
    "a graph is said to be `` cop - win '' if there is a vertex @xmath3 such that for every @xmath4 , the cop beginning at @xmath3 can capture the robber beginning at @xmath4 .",
    "in addition to their obvious role in pursuit games , cop - win graphs ( which are also known as `` dismantlable '' graphs ) have appeared in diverse places including statistical physics @xcite . in the present work ,",
    "we consider a variation suggested @xcite by ross churchley of the university of victoria , in which the robber is no longer in control of his fate ; instead , at each step he moves to a neighboring vertex chosen uniformly at random .",
    "we may therefore imagine that the robber is in fact a drunk  one who is too far gone to have an objective .    on any graph , the drunk will be caught with probability one , even by a cop who oscillates on an edge , or moves about randomly ; indeed , by any cop who is nt actively trying to lose .",
    "the only issue is : how long does it take ?",
    "the lazy cop will win in expected time at most @xmath6 ( plus lower - order terms ) , since that is the maximum possible expected hitting time for a random walk on an @xmath0-vertex graph @xcite ; the same bound applies to the random cop @xcite .",
    "it is easy to see that the greedy cop who merely moves toward the drunk at every step can achieve o@xmath7 ; in fact , we will show that the greedy cop can not in general do better .",
    "our smart cop , however , gets her man in expected time @xmath1 .",
    "note that when the adversaries play on a lollipop graph consisting of a clique of size @xmath8 ( for some constant @xmath9 ) with a path of length @xmath10 attached at one end , with the drunk starting in the clique and the cop starting at the opposite endpoint of the path , the expected capture time will be @xmath11 , and we conjecture that this is worst possible .",
    "in this variation , a `` move '' ( as in chess ) will consist of a step by the cop followed by a ( uniformly random ) step by the drunk .",
    "capture or `` arrest '' takes place when the cop lands on the drunk s vertex or vice - versa , and the capture time @xmath12 is the number of the move at which this takes place .",
    "let us consider some examples .",
    "( 1 ) suppose @xmath2 is the path @xmath13 on @xmath0 vertices , with @xmath3 and @xmath4 its endpoints",
    ". then the cop will ( using any of the algorithms we consider later ) move along the path until she reaches the drunk ; this will take expected time about @xmath14 since a random walk on a path will on average progress about distance @xmath15 in time @xmath16 .",
    "\\(2 ) let @xmath2 be the complete balanced bipartite graph @xmath17 , with the cop and the drunk beginning on the same side .",
    "then the poor cop will find herself always moving to the opposite side from her quarry until , finally , he accidently runs into her ; since the latter event occurs with probability about @xmath18 , arrest takes on average @xmath19 steps .",
    "the reader may feel with some justification that we are being unrealistic in not allowing the cop to stay put ; in example ( 2 ) , sitting for one move would enable her to catch the drunk on the next move .",
    "ultimately , we force the cop to move at each step in order to hold her to the same constraints as her quarry s , and because it gives us the strongest results .",
    "our bounds still apply when the cop , the drunk , or both are allowed to stay put on any move .    even when the cop is permitted to idle",
    ", she can not expect to catch the drunk in time bounded by a function of the diameter of @xmath2 .",
    "example ( 3 ) , let @xmath2 be the incidence graph of a projective plane of order @xmath0 .",
    "a projective plane @xmath20 of order @xmath0 is a collection of objects called `` points '' and sets of points called `` lines '' satisfying the following conditions :    1 .   [ 2points1line ] two points determine a unique line . 2 .",
    "[ 2lines1point ] two lines intersect in a unique point .",
    "3 .   [ n+1points ]",
    "every line consists of exactly @xmath21 distinct points .",
    "[ n+1lines ] every point lies on exactly @xmath21 distinct lines .",
    "+ furthermore @xcite , 5 .",
    "@xmath20 contains exactly @xmath22 distinct points .",
    "@xmath20 contains exactly @xmath22 distinct lines .",
    "projective planes of order @xmath0 are known to exist for @xmath23 for any prime number @xmath24 and positive integer @xmath25 @xcite .",
    "the incidence graph @xmath2 of @xmath20 is therefore a graph with @xmath26 vertices , with adjacency relation @xmath27 if @xmath3 is a point in @xmath20 and @xmath4 is a line that goes through @xmath3 , or vice versa .",
    "such graphs have bounded diameter but unbounded expected capture timeclaim 1 . *",
    "@xmath28 .",
    "let @xmath29 be two points in @xmath20 . by condition ( [ 2points1line ] ) above , @xmath25 and @xmath30 both lie on a common line ,",
    "so @xmath31 . if @xmath29 are instead two lines in @xmath20 , then condition ( [ 2lines1point ] ) says that @xmath25 and @xmath30 intersect at a common point . finally , if @xmath25 is a point and @xmath30 is a line in @xmath20 , then either @xmath25 lies on @xmath30 and so @xmath32 or there is another point , @xmath33 , which does lie on @xmath30 .",
    "but by the previous argument , @xmath34 and so @xmath35 .",
    "* claim 2 . *",
    "the girth of @xmath2 is 6 .",
    "note that @xmath2 has no odd cycles by the independence of the set of points ( and respectively , set of lines ) .",
    "now assume for sake of contradiction that @xmath2 contains a cycle of length @xmath36 .",
    "then there are two points @xmath37 and two lines @xmath38 such that @xmath39 forms a cycle . but",
    "this contradicts condition ( [ 2lines1point ] ) since @xmath40 and @xmath41 must intersect in @xmath42 as well as @xmath43 .",
    "* claim 3 .",
    "* @xmath2 is regular of degree @xmath44 .    by conditions ( [ n+1points ] ) and ( [ n+1lines ] ) .    *",
    "claim 4 . *",
    "the expected capture time on @xmath2 is at least @xmath45 .",
    "when the cop gets to distance 2 of the drunk , he has only one bad move out of @xmath45 ; the rest keep him at distance at least 2 .",
    "( similarly , if the cop gets to distance 1 , bypassing ever being at distance 2 , the drunk still has only one bad move out of @xmath45 , the rest of which keep him at distance 1 . )",
    "hence the cop s expected capture time can not be any lower than @xmath45 ( the expected number of independent bernoulli trials , each with success probability @xmath46 , until success is achieved ) . _",
    "_ _ _ _ _ _ _ _",
on the other hand , it is not hard to verify that on any regular graph , the greedy cop  who minimizes her distance to the drunk at each move  wins in expected time at most linear in @xmath0 .",
    "if @xmath2 is regular of degree @xmath45 , its diameter can not exceed @xmath47 @xcite . since the drunk will step toward the cop with probability at least @xmath46 at each move , resulting ( after her response ) in a decrease of 2 in their distance , the expected capture time is bounded by @xmath48 .    the linear bound also holds on trees .",
    "to see this , we proceed by induction on the size of the tree , @xmath0 .",
    "when @xmath49 , the capture time is clearly less than @xmath0 ( since the drunk will run into the cop on his first move ) .",
    "now suppose that on any tree with @xmath50 vertices , the expected capture time is at most @xmath16 , and let @xmath12 be a tree on @xmath0 vertices , rooted at @xmath51 ( the cop s initial position ) .",
    "for all descendants @xmath4 of @xmath51 , let @xmath52 be the subtree of @xmath12 consisting of @xmath4 and all of its descendants .",
    "so the game begins on @xmath53 , and after the first move , since the drunk can not get `` behind '' the cop without being caught , the game is being played on @xmath54 where @xmath55 is the cop s position after one step .",
    "( note that by the greedy strategy , @xmath55 is the unique neighbor of @xmath51 which is on the path from @xmath51 to @xmath56 , the drunk s position after he takes his first step . )",
    "so by the induction hypothesis , the game takes no more than expected time @xmath58 on @xmath54 and therefore no more than @xmath0 on @xmath12 .    for general @xmath2",
    ", one can guarantee only that at a given point in time the drunk will step toward the cop with probability at least @xmath59 , giving a bound of order @xmath60 for the greedy cop . that may appear to be a gross overestimate , especially in light of the special cases discussed above , but a graph with many high - degree vertices can still have large diameter .",
    "for example , consider the following graph .",
    "the `` ladder '' in this graph consists of two copies of the path @xmath61 with each pair of corresponding vertices connected by an edge .",
    "the `` basement '' consists of a complete bipartite graph , @xmath62 .",
    "we begin with the drunk inside the basement , and the cop on the far end of the ladder . while the drunk is meandering inside the basement , the cop  staying true to her goal of minimizing the distance between her and the drunk at each step  is alternating between the two paths .",
    "note that we assume she makes the foolish choice when she is presented with several options by her algorithm .",
    "it takes the drunk @xmath63 moves on average to leave the basement , and each time this occurs , the cop will decrease the distance by 2 by traveling along her current path . therefore the capture will require an average of about @xmath64 steps .",
    "as noted in the example of the `` ladder to the basement '' graph in section  [ prelims ] , a foolish greedy cop can be foiled by her desire to `` retarget '' too often .",
    "that is , since she updates the target vertex ( to which she is trying to minimize her distance ) at each step , she is made indecisive by an indecisive drunk .",
    "one natural solution to this problem would be to walk directly toward the robber s initial position in the basement for several steps before retargeting .",
    "continuing in this way , the cop makes steady progress , ultimately catching the drunk in time less than @xmath0 .    in general ,",
    "if a cop and drunk begin at distance @xmath65 on a graph , and the cop proceeds by retargeting every four steps , then by lemma  [ 4lemma ] below , it would take @xmath66 moves to get down to distance less than four .",
    "since @xmath65 can be as large as @xmath58 , this would not suffice to yield our promised bound of @xmath67 , so the cop must first do something else to get her distance to the drunk down without spending too much time doing so  hence the following four - stage strategy .    for",
    "@xmath68 $ ] , let @xmath69 be the time spent in stage @xmath70 and @xmath71 be the distance between the two players at the end of stage @xmath70 .",
    "in the first stage , the cop heads directly for the drunk s initial position , @xmath72 , so that @xmath73 . in the meantime",
    ", the drunk has gone somewhere else , and so suppose that by the time that the cop reaches @xmath72 , the drunk is at @xmath74 .",
    "now we are in stage 2 , and the cop heads for @xmath74 .",
    "we show @xmath75 = o(n)$ ] . during stage 3",
    ", the cop updates her `` target '' every four steps , and we show that the expected time for this stage , @xmath76 $ ] , is again bounded by @xmath77 .",
    "this stage ends when we are at distance at most three from the drunk . in stage  4",
    ", the cop waits for the drunk to make an error , which happens in expected time at most @xmath78 and results in the capture of the drunk .",
    "all together , this cop captures the drunk in expected time @xmath79",
    ". we will refer to the progress made by the cop in the first two stages as `` gross progress , '' and in the last two stages as `` fine progress . '' in order to prove the bounds claimed above , it will be beneficial to have a few lemmas .",
    "suppose that the drunk starts on vertex @xmath3 and the cop starts at @xmath4 .",
    "as noted in the set - up of the previous section , in the first stage of the cop s strategy , she is concerned only with getting to @xmath3 ( even if this may not decrease her distance from the drunk at the end of the stage ) . clearly the time this takes",
    "is equal to @xmath80 .",
    "we would like to get a bound on @xmath81 $ ] , the expected distance between the cop and the drunk at the end of this stage .",
    "for that , the following lemma will prove quite useful .",
    "[ keylemma ] let @xmath82 be the distance covered in time @xmath16 by a random walk on a ( connected ) graph with @xmath0 vertices .",
    "then @xmath83 < 1 + \\sqrt{t}\\sqrt{1 + 5 \\log n}$ ] .    let @xmath84 be the probability that a random walk that starts at vertex @xmath72 will be at vertex @xmath74 in exactly @xmath16 steps .",
    "the varopoulous - carne bound @xcite , as formulated in @xcite , says @xmath85 where @xmath86 is the graph distance between the two vertices .",
    "therefore , if we consider the random walk @xmath87 on a graph of size @xmath0 and let @xmath9 be any constant , we have the following bound as a corollary of varopoulos - carne :    @xmath88    letting @xmath89 therefore yields that @xmath90 .",
    "+ note that @xmath91 \\le pn + ( 1-p)c \\sqrt{t}$ ] , where @xmath92 , so we have    @xmath93   & \\le & \\frac{1}{n } n   + c \\sqrt{t } \\\\                          & = & 1 + \\sqrt{t } \\sqrt{1 + 5",
    "\\log n }       \\end{aligned}\\ ] ]    as desired .",
    "this bound is not tight , but it will be good enough to give us the @xmath77 bound we seek on @xmath75 $ ] .",
    "recall that @xmath94 is the distance between the two players at the end of stage 1 . note that this is equivalent to the distance between the drunk s initial position and his position at the end of stage 1 .",
    "we have the following immediate corollary of lemma  [ keylemma ] .    [ keycor ]",
    "@xmath81 \\le   1 + \\sqrt{n } \\sqrt{1 + 5\\log n}$ ]",
    ".    now the cop enters stage 2 .",
    "we would like to bound @xmath95 $ ] . note that this is equivalent to the expected distance traveled by the drunk in stage 2 .",
    "@xmath95 < ( 5 \\log n)^{3/4 } n^{1/4}$ ]    using lemma  [ keylemma ] , jensen s inequality for concave functions , and corollary  [ keycor ] , we get    @xmath96 & \\le & \\sum_{k=0}^n { \\mathbb{p}}(d_1=k ) ( 1 + \\sqrt{k }",
    "\\sqrt{1 + 5\\log n } ) \\\\                      & = & 1 + \\sqrt{1 + 5",
    "\\log n } { \\mathbb{e}}[\\sqrt{d_1 } ] \\\\                      & \\le & 1 + \\sqrt{1",
    "+ 5\\log n } \\sqrt{{\\mathbb{e}}[d_1 ] } \\\\                      & \\le & 1 + \\sqrt{1 + 5\\log n } \\sqrt{1+\\sqrt{n } \\sqrt{1 + 5\\log n}}\\\\                      & < & ( 5 \\log n)^{3/4 } n^{1/4 }          \\end{aligned}\\ ] ]    now we are done with the `` gross progress '' that the cop makes in stages 1 and 2 .",
    "note that the total expected time to complete these two stages is bounded by @xmath97 + { \\mathbb{e}}[t_2 ] \\le diam(g ) + 1 + \\sqrt{n }",
    "\\sqrt{1 + 5\\log n}.\\ ] ]      at the conclusion of stage 2 , the cop s approach changes .",
    "now she * retargets * every 4 moves .",
    "we make this notion precise in the following manner .    for each integer @xmath98 let @xmath99 be the drunk s and cop s positions , respectively , at time @xmath100 ( with it being the drunk s turn to move ) . then in stage 3 , while @xmath101 , for all @xmath100 of the form @xmath102 for some @xmath103 , the cop chooses @xmath104 as her * target * and proceeds along a geodesic toward that target for the next four steps .",
    "consequently , the cop s target changes every 4 moves , so that for each integer @xmath103 , she has target @xmath104 at times @xmath105 , @xmath106 , and @xmath107 . if at time @xmath108 , @xmath109 , stage 3 terminates and the cop s strategy moves into stage 4 , which will be described after the following lemma .",
    "[ 4lemma ] let @xmath2 be any graph and let @xmath110 be any vertex in @xmath2 .",
    "let @xmath111 be any random walk on @xmath2 beginning at @xmath112 .",
    "then @xmath113 , where @xmath114 .",
    "before we prove this lemma , note that we could not get away with looking at the first three steps of a random walk .",
    "that is , we could not get a useful bound for @xmath115 . consider the following example : we have a graph @xmath2 with a vertex @xmath112 .",
    "let @xmath116 be the set of vertices at distance @xmath117 from @xmath112 .",
    "suppose that @xmath2 looks like figure  [ counterexample-3lemma ] .",
    "that is in @xmath2 , @xmath118 and @xmath119 .",
    "call any step by the random walker that guarantees @xmath120 a `` stall . ''",
    "then the probability of a stall occurring at the second step is @xmath121 , and the probability of a stall occurring at the third step is @xmath122 since for each vertex in @xmath123 and @xmath124 , there is one edge on the path toward @xmath112 and @xmath125 edges leading farther away from @xmath112 .",
    "so then @xmath126 .",
    "we now return to the proof of lemma  [ 4lemma ] .",
    "we proceed by assuming a graph @xmath2 and a vertex @xmath110 are such that there is a random walk @xmath127 with the property @xmath128 , and we shall derive a contradiction .",
    "let @xmath116 be the set of vertices at distance @xmath117 from @xmath112 , and let @xmath129 for all @xmath117 . we adapt the terms * in - degree * and * out - degree * to mean the following :    let @xmath130 .",
    "then the in - degree of @xmath4 is @xmath131 and the out - degree of @xmath4 is @xmath132 .",
    "we will use the notation @xmath133 for the quantity under investigation , @xmath134 , and for a vertex @xmath135 , we define @xmath136 to be the quantity @xmath137 . note that @xmath138 and @xmath139 if @xmath140 for some @xmath141 .",
    "finally , we call any step by the random walker that guarantees @xmath142 a `` stall .",
    "''    we will break this proof into several statements .",
    "[ c1 ] let @xmath143 be the graph defined by removing all edges between @xmath112 and all but one vertex , @xmath144 , where @xmath145 .",
    "then @xmath146 .",
    "since @xmath147 , there must exist a vertex @xmath148 with @xmath149 .",
    "choose @xmath144 such that @xmath145 and define @xmath143 as in the statement of the claim .",
    "note that @xmath150 .",
    "[ c2 ]    let @xmath151 be the induced subgraph of @xmath143 with @xmath152 and with all edges removed except those that are between a vertex in @xmath153 and a vertex in @xmath116 for @xmath154 $ ] .",
    "then @xmath155 .",
    "let @xmath156 be the induced subgraph of @xmath143 on the vertices @xmath157 for @xmath158 .",
    "then since @xmath159 when @xmath160 and @xmath161 ( so in particular , @xmath162 and @xmath163 depend only on the first four steps of a random walk originating at @xmath112 ) , we have that @xmath164 .    let @xmath154 $ ] and let @xmath130 be a vertex in @xmath165 with @xmath166 . if no such vertex exists then @xmath167 .",
    "otherwise , let @xmath168 and @xmath169 .",
    "removing the @xmath16 vertices in @xmath171 decreases @xmath136 to @xmath172 .",
    "now let @xmath151 be derived from @xmath156 by removing all edges except for those that are between @xmath153 and @xmath116 .",
    "( in particular , this means that for all @xmath154 $ ] , for all @xmath173 , @xmath174 . )",
    "this decreases @xmath136 for all vertices @xmath4 with neighbors @xmath175 such that @xmath176 and does not change @xmath136 for all vertices @xmath4 with no such neighbors .",
    "since    @xmath177    we have that @xmath178 .    in view of claims  [ c1 ] and [ c2 ] above , we may assume that @xmath2 has the following properties : @xmath179 , the only edges in @xmath2 are between @xmath153 and @xmath180 for @xmath154 $ ] , and @xmath181 for all @xmath158 .    ]    now define @xmath182 to be the induced subgraph of @xmath2 on the vertices @xmath183 and let @xmath184 .",
    "[ avgdeg ] @xmath185 .",
    "now we claim that the average degree of vertices in @xmath123 is greater than @xmath186 : let @xmath187 be the degrees of the vertices in @xmath123 and let @xmath188 .",
    "the vertex @xmath189 is chosen uniformly at random in @xmath123 , and the probability of stalling at a vertex with degree @xmath190 is @xmath191 .",
    "therefore the probability of stalling at @xmath123 is @xmath192 .",
    "we have @xmath193 ( where @xmath194 is the harmonic mean of the @xmath190 ) . consequently , @xmath195 .",
    "thus the average out - degree from @xmath123 is greater than @xmath196 , which implies that there are more than @xmath197 edges between @xmath123 and @xmath124 .",
    "let @xmath198 be the subset of @xmath123 consisting of vertices with more than half of their outedges going to @xmath199 , the subset of @xmath124 consisting of vertices with in - degree less than @xmath200 .",
    "let @xmath201 and @xmath202",
    ". then @xmath203 .",
    "define @xmath204 to be the number of edges with one endpoint in @xmath198 and the other in @xmath124 .",
    "note that @xmath205 and consequently the number of edges with one endpoint in @xmath123 and the other in @xmath199 is less than @xmath206 . since more than half of the outedges of each vertex in @xmath198",
    "terminate in a vertex in @xmath199 , this says that @xmath207 .",
    "now assume , for sake of contradiction , that @xmath208 .",
    "then @xmath209 so we have @xmath210    which says that @xmath211 .",
    "let @xmath212 where @xmath213 are the degrees of the vertices in @xmath198 . for each vertex in @xmath198 , @xmath214 .",
    "since @xmath189 is chosen uniformly at random , we have @xmath215    the average out - degree from @xmath198 is @xmath216 and so we get @xmath217 .",
    "this is a contradiction since @xmath218 .",
    "consequently , @xmath203 .",
    "the probability that @xmath219 ( given @xmath220 ) is greater than @xmath221 .    if @xmath222 then with probability greater than @xmath223 , @xmath224 . by definition , more than half of the out - edges of a vertex in @xmath225 terminate in @xmath226 , and @xmath227 is chosen uniformly at random from the neighbors of @xmath189 .",
    "this yields @xmath228    and therefore @xmath229 as desired .",
    "note that @xmath230 .",
    "therefore the probability of stalling at step 3 is greater than @xmath231 , yielding a contradiction .",
    "let @xmath108 be such that the game is in stage 3 at time @xmath100 , and let @xmath99 be the positions of the drunk and cop , respectively , after both have moved ( so that it is the drunk s turn ) .",
    "by lemma  [ 4lemma ] we have that @xmath232 with probability at least @xmath233 .",
    "consequently , since the cop had @xmath234 as her target , we now have @xmath235 ( so the distance has decreased by at least 1 ) with probability at least @xmath233 .",
    "let @xmath236 be a random variable which equals the decrease in distance between time @xmath237 and @xmath238 .",
    "@xmath236 is 0 with probability less than @xmath239 and is @xmath240 with probability at least @xmath241 .",
    "consider the 0 - 1 random variable @xmath242 with @xmath243 for all @xmath70 ( note @xmath244 \\le { \\mathbb{e}}[y_i]$ ] for all @xmath70 ) .",
    "let @xmath245 , for all @xmath246 .",
    "consider the random process @xmath247 with the stopping rule that says the process terminates at time @xmath248 if @xmath249 . by wald s identity @xcite , @xmath250 = { \\mathbb{e}}[\\tau ] { \\mathbb{e}}[x_i]$ ] . since @xmath251 = { \\mathbb{e}}[d_2 ] - 3 $ ] , we have that the expected stopping time @xmath252 = \\displaystyle \\frac{{\\mathbb{e}}[d_2 ] - 3}{1/s}$ ] .",
    "this is the expected number of retargetings needed to get @xmath249 , so we have    @xmath253 \\le 4{\\mathbb{e}}[\\tau ] = 4s({\\mathbb{e}}[d_2 ] - 3 ) < 4((5 \\log n)^{3/4 } n^{1/4 } - 3)(4n^{2/3})\\ ] ]    stage 3 terminates when the distance between the cop and the drunk is less than four , and it is the cop s turn . in stage 4 , which terminates",
    "when the drunk is captured , the cop uses the greedy strategy , defined as follows .",
    "suppose that the strategy enters stage 4 at time @xmath16 , during which time the drunk is at vertex @xmath254 and the cop is about to move from vertex @xmath255 .",
    "then @xmath256 , and the cop moves such that @xmath257 .",
    "now for any @xmath258 , if the drunk moves such that @xmath259 , the cop can choose @xmath260 to ensure that @xmath261 . for each @xmath45 , with probability at least @xmath59 , the drunk moves `` toward '' the cop  i.e .",
    ", such that @xmath262 ; if that happens , the cop can choose @xmath263 , capturing the drunk .",
    "this takes at most @xmath78 expected moves , so @xmath264 \\le \\delta$ ] where @xmath265 is the expected time spent in stage 4 .",
    "adding together our results about the expected time to complete each of the four stages yields the following bound on the expected capture time : @xmath266 & \\le & diam(g ) + { \\mathbb{e}}[d_1 ] + 16n^{2/3 } ( { \\mathbb{e}}[d_2 ] - 3 ) + \\delta \\\\              & < & diam(g ) + 1 + \\sqrt{n(1 + 5\\log n ) } +   4((5 \\log n)^{3/4 } n^{1/4 } - 3)(4n^{2/3 } ) + \\delta \\\\              & = & diam(g ) + \\delta + o(n)\\end{aligned}\\ ] ]    in fact , we can bound @xmath267 with a bit of graph theory .",
    "[ diamg ] for any graph @xmath2 with @xmath268 , @xmath269 .",
    "assume , for sake of contradiction , that there is a graph @xmath2 such that @xmath270 .",
    "let @xmath271 be ( not necessarily distinct ) vertices in @xmath2 such that @xmath272 and @xmath273 .",
    "now we break this proof into two cases :    * case 1 * : @xmath4 lies on a shortest path between @xmath3 and @xmath175 .    let @xmath274 be a shortest @xmath275 path containing @xmath4",
    ". at most two neighbors of @xmath4 may lie on @xmath274 , so there are at least @xmath276 vertices not on @xmath274 .",
    "since the length of @xmath274 is at least @xmath277 , there are at least @xmath278 vertices in @xmath274 .",
    "but now we have that @xmath279 , which is a contradiction .",
    "* case 2 * : @xmath4 is not on any shortest @xmath275 path .",
    "let @xmath280 be a shortest @xmath275 path .",
    "if more than 2 neighbors of @xmath4 are in @xmath280 , then @xmath4 is also on a shortest @xmath275 path ( let @xmath281 and @xmath227 be the neighbors of @xmath4 on @xmath280 , appearing in that order ; then the section involving the three neighbors of @xmath4 could be replaced with @xmath282 to create another shortest @xmath275 path ) .",
    "therefore there are at least @xmath283 vertices not on @xmath280 ( @xmath4 and @xmath284 of its neighbors ) , and at least @xmath278 vertices on this path .",
    "so once again , @xmath285 , which is a contradiction .",
    "therefore @xmath286 for all graphs @xmath2",
    ".    therefore we have the following theorem about the expected capture time .    on a connected , undirected , simple graph on @xmath0 vertices ,",
    "a cop with the described four - stage strategy will capture a drunk in expected time @xmath67 .",
    "the reader may , for instance , have noticed that in the `` ladder to the basement '' example of section  [ prelims ] , we considered a cop who was not only greedy but also rather insistently foolish . what about the greedy cop who makes distance - minimizing decisions at random ?",
    "the `` ladder to the basement '' graph is no longer a problem for her , ( the expected capture time in this example is now less than @xmath0 ) .",
    "is it possible that the greedy algorithm with disputes settled by a random decision between choices is enough to guarantee time @xmath79 ?",
    "it is also possible that a deterministic greedy cop who breaks ties by considering her distance to vertices previously occupied by the drunk will capture in expected time at most @xmath67 .",
    "an alternative greedy strategy , suggested by andrew beveridge  @xcite , concerns itself with minimizing the drunk s expected hitting time to the cop at every step .",
    "it would be interesting to see if this strategy also has expected capture time at most @xmath67 .",
    "this work has benefited from conversations at microsoft research , in redmond , washington , with omer angel , ander holroyd , russ lyons , yuval peres , and david wilson ."
  ],
  "abstract_text": [
    "<S> we show that the expected time for a smart `` cop '' to catch a drunk `` robber '' on an @xmath0-vertex graph is at most @xmath1 . </S>",
    "<S> more precisely , let @xmath2 be a simple , connected , undirected graph with distinguished points @xmath3 and @xmath4 among its @xmath0 vertices . </S>",
    "<S> a cop begins at @xmath3 and a robber at @xmath4 ; they move alternately from vertex to adjacent vertex . </S>",
    "<S> the robber moves randomly , according to a simple random walk on @xmath2 ; the cop sees all and moves as she wishes , with the object of `` capturing '' the robber  that is , occupying the same vertex  in least expected time . </S>",
    "<S> we show that the cop succeeds in expected time no more than @xmath1 . </S>",
    "<S> since there are graphs in which capture time is at least @xmath5 , this is roughly best possible . </S>",
    "<S> we note also that no function of the diameter can be a bound on capture time .    </S>",
    "<S> [ section ] [ ] claim [ theorem]proposition [ theorem]remark [ theorem]lemma [ theorem]corollary [ theorem]conjecture [ theorem]conjecture </S>"
  ]
}
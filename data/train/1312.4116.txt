{
  "article_text": [
    "in 1964 , gordon moore , the co - founder of intel , stated that the computing powers of computers would double about every 18 months and this is popularly known as the moore s law [ 2 ] .",
    "if this were to continue to happen , then the number of transistors on the silicon chips would increase accordingly and the number of electrons in the transistor would drop as time goes on . in fact , moore s law has been more or less consistent , and presently the number of transistors in silicon chip for core i7 extreme edition reaches 1.3 billion .",
    "this implies that only a handful of electrons make up a transistor , thus necessitating the need to work in quantum regime .",
    "such quantum computers have the potential to be the most powerful computational devices ever created , however , only a few practical applications of these have been devised effectively .",
    "one of the problems have been the design of quantum algorithm .",
    "+ quantum algorithms are the set of algorithms performed on the quantum bits employing the powerful concepts of quantum superposition and entanglement of the qubits .",
    "the interest in this domain was generated ever since physicists claimed that quantum computers use fewer resources ( time and space ) to perform certain computations as compared to classical computers ( deutsch @xmath0 jozsa algorithm ) [ 3 ] .",
    "shor s algorithm [ 4 ] , for factoring numbers uses o(@xmath1 ) operations as compared to classical factoring algorithm which uses @xmath2(@xmath3 ) operations and thus provides an exponential speed - up over the best known classical factoring algorithm .",
    "also the grover s search algorithm [ 5 ] of an unsorted data provides a quadratic speed - up , o(@xmath4 ) over the most efficient classical search algorithm o(n ) .",
    "these have led to believe that qas may have the potential of solving certain problems that seem intractable using classical algorithms .",
    "+ solution to a general n @xmath5 m maze [ 1 ] is a np complete problem and so it is an attractive problem to attack through quantum computing principles , which we present here . in context of the maze problem ,",
    "we define : +    1 .",
    "_ individual _ : one of the members of the population and a candidate for the solution to the maze problem 2 .",
    "_ individual register _ : the entire population containing a superposition of all individuals 3 .",
    "_ fitness _ : measure of how close a particular individual is to the optimal solution .",
    "closer is the individual ; higher is its fitness value . +",
    "first step involves the creation of a perfect square maze using the recursive backtracker algorithm[6 ] 2 .",
    "creation of individual register using quantum superposition storing the entire population .",
    "3 .   classifying the individuals based upon their closeness to the optimum solution i.e. defining a fitness register storing the fitness values of individuals .",
    "4 .   defining an oracle which marks certain individuals having fitness values greater than a threshold fitness value . 5 .   employing grover s search algorithm in finding out one of the oracle s marked states .",
    "iterating over the above two steps to find either the optimum individual or an individual nearing the optimum value .",
    "now let us address the individual issues in the next few sections :",
    "the maze is a _ m _ @xmath5 _ m _ two dimensional pathway where _",
    "m _ is the number of rows and also the number of columns .",
    "the maze creation algorithm used in the paper is recursive backtracker algorithm [ 6 ] .",
    "+ the concept of a pushdown stack is employed to implement this algorithm . each grid in the maze is called a room . +    1 .",
    "an empty stack is defined initially .",
    "a random room is chosen and gets pushed onto the stack .",
    "this room becomes the starting room .",
    "another room adjacent to the first room is chosen randomly , and the door is opened between the two rooms . this room is the current room .",
    "the starting room is pushed onto the stack .",
    "5 .   while there s at least one room left in the stack , the following steps are repeated : + 1 .",
    "if there are any unconnected rooms next to the current room : + 1 .   a random room is selected and the door between the two is open .",
    "the current room gets pushed onto the stack and the door between the two is opened .",
    "return to the top of loop .",
    "+ 2 .   if there are no unconnected rooms next to the current room : + 1 .",
    "a room is popped off the stack and becomes the current room .",
    "we return to the top of the loop .",
    "+ 6 .   when the stack is empty , the maze gets formed .",
    "each room has one or more of the basis gates , north ( _ n _ ) , east ( _ e _ ) , south ( _ s _ ) , west ( _ w _ ) gates .",
    "they are assigned as kets with values : @xmath6 = @xmath7 , @xmath8 = @xmath9 , @xmath10 = @xmath11 , @xmath12 = @xmath13 .",
    "for example , for a particular room @xmath14[j]}$ ] ( i = 0 to m-1 , j = 0 to m-1 ) , if @xmath6 and @xmath8 are open , then @xmath14[j]}$ ] = @xmath7 + @xmath9 .",
    "values for each grid is stored in the @xmath14[j]}$ ] register .",
    "let us focus on the creation of individual register storing entire population [ 7 ] .",
    "+    1 .   for the basis states @xmath15 and @xmath16 , the hadamard gate on the basis states acts in the following manner : @xmath17 @xmath18 2 .   the four gates are represented as : @xmath19 + these kets are linearly independent @xmath20 = 1 for i = j and 0 otherwise .",
    "i , j @xmath21",
    "@xmath22 n , e , s , w @xmath23 3 .   an operator u is defined as u = h @xmath24 h 4 .",
    "let the start and end point for the maze be ( @xmath25 , @xmath26 ) and ( @xmath27 , @xmath28 ) respectively .",
    "each individual in the individual register has a length defined as n = 2 @xmath5 ( @xmath29 - @xmath25 + @xmath28 - @xmath26 ) .",
    "+ the length is just taken at hand to ensure that a solution can be reached within that length of an individual .",
    "the input @xmath30 = @xmath31 = @xmath32 is passed to the operator @xmath33 to obtain the path register @xmath34 .",
    "@xmath35     [ overflow ]      1 .   under the fitness evaluation part , the _ health _ of a particular gene is calculated .",
    "it is a measure of the closeness of the individual to the optimum solution . defining an operator for fitness evaluation of individual @xmath36 by operator _",
    "f _ such that : @xmath37 +    2 .   let the starting point of the maze be ( @xmath25,@xmath26 ) .",
    "then for the individual @xmath36 = @xmath38 , the first step that s possible is towards e(east ) ( @xmath25 + 1,@xmath26 ) .",
    "current room : @xmath39 = @xmath25 , @xmath40 = @xmath26 and next room : @xmath41 = @xmath25 + 1 , @xmath42 = @xmath26 .",
    "while the gate between current room and next room is open : 1 .",
    "current room = next room .",
    "2 .   next step is w. 3 .",
    "if current room = end room , then break out from the loop .",
    "4 .   return to top of the loop .",
    "@xmath43 6 .",
    "fitness = @xmath44 is an m - bit value .",
    "+          the fitness evaluation discussed above was just for a single individual .",
    "but the fitness evaluation is needed for entire population .",
    "quantum parallelism is an important tool in quantum computation which enables to carry out fitness evaluation in just one step .",
    "the transformation is defined by the map : @xmath45          now that we have @xmath46 containing the superposition of all individuals with their corresponding fitness values , the only task that remains is of finding the maximum fitness state .",
    "but , since the number of individual kets in the superposition ket @xmath46 is o(@xmath47 ) , where _",
    "n _ is the individual length , so finding the maximum fitness state directly via grover s algorithm is not feasible .",
    "+ instead , a highly fit individual , one that is close to the optimum solution , is sought for after a finite number of iterations .",
    "an oracle structure is defined which marks the states having fitness values greater than the cutoff fitness and then the grover s algorithm is employed to find one of those marked states .",
    "this step is carried out for finite number of iterations and then the highly fit individual is looked up .",
    "quantum search algorithm employs the grover operator whose first step is defining an oracle to mark certain individuals based on the fitness criteria [ 5 ] .",
    "the steps employed in defining an oracle are these : +    1 .   a random fitness value _ cutoff _ = @xmath48 is chosen from the set of fitness values .",
    "an oracle o is designed such that it marks all the kets in the superposition ket @xmath46 that have fitness values greater than _ cutoff_. 3 .",
    "the function f operates such that it flips those input states whose fitness is equal to or less than the _ cutoff _ fitness , and retains those states whose fitness is above the _ cutoff _ fitness .",
    "@xmath49 @xmath50 4 .",
    "defining an oracle which marks certain individuals having fitness values greater than a threshold fitness value .",
    "+          after defining the oracle structure , grover operator is used to find one of the marked states .",
    "j _ number of fitness states are marked by the oracle which satisfy f(@xmath51 ) = 1 .",
    "@xmath52 thus the original register can be written into two different parts , ones for which @xmath53 = 1 ( the marked ones ) and ones for which @xmath53 = -1 . also , because multiple individuals may correspond to a single fitness values , hence the value _",
    "m _ would in normal case differ from _ l_. and in the above division , it is the _ m",
    "_ combined state which have @xmath53 = 1 and the rest @xmath54 states have @xmath53 = -1 .",
    "+ now in the next iteration , the _ cutoff _ value is updated by one of the marked state found by the grover s algorithm.in subsequent finite number of iterations , a very high fitness state can be found out i.e. approaching the optimum solution .",
    "+      1 .   a path register @xmath34 storing all possible individual states is created .",
    "fitness operator f is applied and @xmath46 state is created with @xmath46 containing the superposition of all possible individuals with their fitness values .",
    "3 .   ( the solution is to be found in m steps ) +",
    "i = 0 @xmath55 start of iteration = @xmath56 .",
    "oracle @xmath57 marks all @xmath58 .",
    "grover search to find one marked state @xmath59 .",
    "= @xmath59 .",
    "i++ 4 .   at the end of m steps ,",
    "either the maximum fit gene is obtained or we obtain a highly fit gene close to the optimum solution . 5 .   on measuring the fitness ket , the individual ( or individuals ) possessing the given fitness value is obtained because of the entanglement of fitness ket with the individual ket .",
    "it is known that if _ k _ is the length of search space , the complexity of grover s algorithm is given by o(@xmath60 ) . but here the population is exponential i.e. _ k _ = @xmath47 .",
    "so the grover s algorithm can not be applied directly to find the optimum solution in polynomial number of steps .",
    "instead , we have defined the oracle and employed the iterative grover search algorithm to look for a high fitness solution in polynomial steps . the algorithm is designed to give a better(higher fitness ) solution with each increasing iteration . hence within _",
    "m _ finite steps , it is not necessary that the best solution be reached , but a highly optimum solution can still be reached using this algorithm .",
    "our main focus was on the conversion of a perfect maze into a quantum search problem and to approach towards the optimum solution in finite number of steps using iterative grover search algorithm .",
    "the fitness gate is defined to calculate the ftness of each individuals , which is a criteria in selecting the optimum individuals .",
    "an oracle structure has been proposed to mark certain individual states having fitness levels above the _ cutoff _ value .",
    "grover s operator iterates subsequently , and with each iteration , the closeness to the optimum solution increases . in the first iteration ,",
    "if _ m _ individuals have fitness levels above the _ cutoff _ , an o(@xmath61 ) steps are used in the first iteration , with _",
    "n _ being the total number of individuals .",
    "next iteration is performed on the previous marked states , and so on , until the end of iteration is reached , or an optimum solution is found out .",
    "grovers algorithm provides only the quadratic speedup , hence a solution is not guaranteed in the polynomial iteration steps .",
    "subsequent search algorithms with more speedup would boost the approach towards the optimum solution .",
    "+ the only limitation lies with the capability of the grover s algorithm .",
    "subsequent search algorithms , with power more than that of the grover s algorithm , would boost the approach towards the optimum solution .",
    "a point to also note is that , if in future , the search algorithms are found with exponential speed up over the classical algorithms , then the np - complete problem would have a solution in polynomial steps .              a fast quantum mechanical algorithm for database search . l.k . grover . 3c-404a , at@xmath0 t bell labs , 600 mountain avenue , murray hill , nj .",
    "+ proceeding stoc 96 _ proceedings of the twenty - eighth annual acm symposium on theory of computing_. 1996"
  ],
  "abstract_text": [
    "<S> we propose a different methodology towards approaching a maze problem . </S>",
    "<S> we convert the problem into a quantum search problem ( qsp ) , and its solutions are sought for using the iterative grover s search algorithm . though the category of mazes we are looking at are of the np complete class[1 ] , we have redirected such a np complete problem into a qsp . </S>",
    "<S> our solution deals with two dimensional perfect mazes with no closed loops . </S>",
    "<S> we encode all possible individual paths from the starting point of the maze into a quantum register . </S>",
    "<S> a quantum fitness operator applied on the register encodes each individual with its fitness value . </S>",
    "<S> we propose an oracle design which marks all the individuals above a certain fitness value and use the grover search algorithm to find one of the marked states . </S>",
    "<S> iterating over this method , we approach towards the optimum solution . </S>"
  ]
}
{
  "article_text": [
    "in recent years , there have been a lot of works on solving the satisfiability modulo theories ( smt ) problem .",
    "quite efficient smt solvers have been developed , such as cvc3 , mathsat , yices and z3 . in @xcite , we studied the counting version of smt solving , and presented some techniques for computing the size of the solution space efficiently . this problem can be regarded as an extension to smt solving , and also an extension to model counting in the propositional logic . it has recently gained much attention in the software engineering community @xcite .",
    "the prototype tool presented in @xcite computes the exact volume of solution space .",
    "however , exact volume computation in general is an extremely difficult problem .",
    "it has been proved to be # p - hard , even for explicitly described polytopes . on the other hand , it suffices to have an approximate value of the volume in many cases .",
    "recently we implemented a tool to estimate the volume of polytopes ; and integrated it into the framework of @xcite .",
    "this paper presents the new tool ` volce ` for the counting version of smt(la ) .",
    "( here la stands for linear arithmetic . )",
    "the input of the tool is a set of boolean combinations of linear constraints , where each numeric variable is bounded .",
    "independent boolean variables may also appear in the constraints .",
    "the output of the tool is the `` volume '' of the solution space , or the number of solutions in case that the domain consists of integer points .",
    "the rest of this paper is organized as follows .",
    "section  [ sect : arch ] presents the architecture of ` volce ` .",
    "section  [ sect : vol ] presents the algorithm and implementation of our volume estimation sub - procedure .",
    "section  [ sect : usage ] briefly describes how to use the tool .",
    "section  [ sect : exps ] discusses our experiments , and section  [ sect : reltwks ] describes some related works .",
    "we conclude in section  [ sect : conclude ] .",
    "the architecture of ` volce ` is illustrated in figure  [ volcepp ] . recall that in @xcite , a consistent conjunction of linear constraints that satisfies the boolean skeleton of the smt(la ) formula is called a feasible assignment .",
    "the sum of volumes of all feasible assignments is the volume of the whole formula . in ` volce ` , the sat solving engine ( minisat ) and the linear arithmetic solver ( lp_solve ) work together to find feasible assignments .",
    "each time a feasible assignment is obtained , ` volce ` tries to reduce it to a partial assignment that still propositionally satisfies the formula .",
    "the resulted feasible partial assignment may cover a bunch of feasible assignments , hence is called a  bunch \" .",
    "then a solution counting or volume computation / estimation sub - procedure is called for the polytope corresponding to each bunch rather than each feasible assignment , so that the number of calls is reduced . for more details of the main algorithm ,",
    "see  @xcite .",
    "in addition to minisat and lp_solve , ` volce ` calls vinci  @xcite and latte  @xcite to help compute the size of the solution space . ` vinci ` is a tool for computing the volume of a convex body .",
    "latte is a tool for counting lattice points inside convex polytopes and solutions of integer programs .",
    "moreover , we implemented a tool for estimating the volume of convex polytopes , called ` polyvest `  @xcite .",
    "it will be elaborated in the subsequent section .",
    "the performance of volume computation packages for convex polytopes is the bottleneck of the prototype tool in  @xcite .",
    "recently we augmented it with an efficient volume estimation sub - procedure for convex polytopes .      a straightforward way to estimate",
    "the volume of a convex body is the monte - carlo method .",
    "however , it suffers from the curse of dimensionality , which means the possibility of sampling inside a certain space in the target object decreases very quickly while the dimension increases . as a result , the sample size has to grow exponentially to achieve a reasonable estimation . to avoid the curse of dimensionality , dyer et.al .",
    "proposed a polynomial time randomized approximation algorithm ( multiphase monte - carlo algorithm )  @xcite .",
    "the theoretical complexity of the original algorithm is @xmath0 indicates that we suppress factors of @xmath1 as well as factors depending on other parameters like the error bound ] , and is recently reduced to @xmath2  @xcite .",
    "based on the multiphase monte - carlo method , we implemented our own tool ` polyvest ` ( polytope volume estimation ) to estimate the volume of convex polytopes  @xcite .",
    "one improvement over the original multiphase monte - carlo method is that we developed a new technique to reutilize sample points , so that the number of sample points can be significantly reduced .    in the sequel",
    ", we briefly describe the algorithm implemented in ` polyvest ` . for more details",
    ", one can refer to  @xcite .",
    "we assume that @xmath3 is a full - dimensional and nonempty convex polytope .",
    "we use @xmath4 to represent the volume of a convex body @xmath5 , and @xmath6 to represent the ball with radius @xmath7 and center @xmath8 .",
    "the basic procedure of ` polyvest ` consists of the following three steps : rounding , subdivision and sampling .    *",
    "rounding *   first we find an affine transformation @xmath9 on polytope @xmath3 so that @xmath10 contains the unit ball @xmath11 , and is contained in the ball @xmath12",
    ". this can be achieved by applying the shallow-@xmath13-cut ellipsoid method  @xcite .",
    "we set @xmath14 in our implementation .",
    "rounding is an essential step .",
    "for example , it is difficult to subdivide a very `` thin '' polytope and sample on it without rounding . for simplicity",
    ", we still use @xmath3 to denote the new polytope @xmath10 after rounding .",
    "* subdivision *   then we divide @xmath3 into a sequence of convex bodies .",
    "the general idea of the subdivision step is illustrated in figure  [ mmc ] .",
    "we place @xmath15 concentric balls @xmath16 between @xmath11 and @xmath12 .",
    "let @xmath17 denote the convex body @xmath18 , then @xmath19 let @xmath20 denote the ratio @xmath21 , then @xmath22 hence the volume of the polytope @xmath3 is transformed to the products of ratios and the volume of @xmath23 .",
    "note that @xmath24 whose volume can be easily computed .",
    "so we only have to estimate the value of @xmath20 .    of course , one would like to choose the number of concentric balls , @xmath15 , to be small .",
    "however , one needs about @xmath25 random points to get a sufficiently good approximation for @xmath20 .",
    "it follows that the @xmath20 must not be too large . in ` polyvest ` , we set @xmath26 and @xmath27 to construct the convex bodies @xmath28 .",
    "and it can be proved that @xmath29 with this construction .",
    "* sampling *   finally , we generate @xmath30 points in @xmath31 and count the number of points @xmath32 in @xmath17 .",
    "thus @xmath20 can be approximated with @xmath33 .",
    "generating independent uniformly distributed random points in @xmath28 is not as simple as in cubes or ellipsoids .",
    "so we use a hit - and - run method for sampling .",
    "hit - and - run method is a random walk which can generate points with almost uniform distribution in polynomial time  @xcite .",
    "figure  [ hnr ] illustrates the hit - and - run method : it starts from a point @xmath8 , then randomly selects a line @xmath34 through @xmath8 and choose the next point @xmath35 uniformly on the segment in @xmath3 of line @xmath34 . ` polyvest ` adopts the coordinate directions hit - and - run method , in which the random direction of line @xmath34 is chosen with equal probability from the coordinate direction vectors and their negations .",
    "_ reutilization of sample points _   in the original multiphase monte carlo method ,",
    "the ratios @xmath20 are estimated in natural order , from the first ratio @xmath36 to the last one @xmath37 . and",
    "the method starts sampling from the origin .",
    "however , our implementation works in the opposite way .",
    "it generates sample points from the outermost convex body @xmath38 to the innermost convex body @xmath23 , and the ratios are estimated accordingly in reverse order .",
    "the advantage of approximation in reverse order is that it is possible to fully exploit the sample points generated in the previous phases . since @xmath39",
    ", the sample points in @xmath17 still fall in @xmath40 ( @xmath41 ) . on the other hand ,",
    "the sample points generated by the hit - and - run method are almost independent as sample size @xmath30 is large enough .",
    "therefore , for any @xmath42 that @xmath41 , the points generated for approximating @xmath43 that hit @xmath31 can serve as sample points to approximate @xmath20 as well . it can be easily proved that we only need to generate less than half sample points with this technique since @xmath44 . in practice",
    ", this technique can save over 70% time consumption under most circumstances .",
    "now we describe how to estimate the `` volume '' of the solution space of smt(lra ) formulas .",
    "( here lra stands for linear _ real _ arithmetic . )",
    "the basic procedure is quite similar to that of volume computation as described in  @xcite . as in  @xcite ,",
    "a consistent conjunction of linear constraints that satisfies the boolean skeleton of the smt(lra ) formula is called a feasible ( partial ) assignment . each time ` volce ` obtains a feasible ( partial ) assignment , it calls ` polyvest ` to estimate the volume of the polytope corresponding to this assignment .",
    "the sum of estimated volumes of all feasible ( partial ) assignments is approximately the volume for the whole formula .",
    "note that the  volume computation in bunches \" strategy in  @xcite can also be applied in volume estimation .    in the multiphase monte - carlo method ,",
    "the number of sample points at each phase is a key parameter .",
    "as the sample size increases , the accuracy of estimation improves , and the estimation process also takes more time .",
    "it is important to balance the accuracy and run time , especially for ` volce ` since the estimation subroutine ` polyvest ` is usually called many times .",
    "` volce ` employs a two - round strategy that can dynamically determine a proper sample size for each feasible ( partial ) assignment . at the first round of estimation ,",
    "each feasible assignment is sampled with a fixed small number of random points to get a quick and rough estimation .",
    "since the volumes of feasible assignments may vary a lot , intuitively a feasible assignment with relatively larger volume should be estimated with higher accuracy .",
    "hence at the second round , the sample size for each assignment is determined according to its estimated volume from the first round .",
    "more specifically , we use the following rule to decide the sample sizes in the second round :    * suppose the sample size in the first round is @xmath45 , and the largest sample size in the second round is set to @xmath46 .",
    "let @xmath47 denote the largest estimated volume in the first round , and @xmath48 denote the volume of the @xmath42th feasible assignment estimated in the first round",
    ". then the sample size @xmath49 for the @xmath42th feasible assignment in the second round is : @xmath50 if @xmath51 , the @xmath42th feasible assignment is neglected at the second round , and we use the result from the first round as its estimated volume . if @xmath52 , then set @xmath49 to @xmath46 .    through statistical results of substantial experiments , we find that setting @xmath45 to @xmath53 and @xmath46 to @xmath54 ( @xmath26 ) is very effective .",
    "it only needs to generate @xmath55 points in extreme cases with this strategy . in practice , it usually saves more than @xmath56 points for random instances .",
    "the input of ` volce ` is an smt formula where the theory @xmath9 is restricted to the linear arithmetic theory .",
    "it can be regarded as a boolean combination of linear inequalities .",
    "there are two input formats .",
    "for the first format , the input formula is a boolean formula @xmath57 in conjunctive normal form ( cnf ) . and each boolean variable @xmath58 can stand for a linear arithmetic constraint ( lac ) .",
    "an example of lac is , @xmath59 . in the input file , this lac is represented as : 3 1 < 8 .",
    "it is preceded by an identifier like m2 which means that the lac corresponds to the boolean variable @xmath60 .",
    "the whole input file is an extension of the dimacs format for sat solving .",
    "the first - line in the input file is `` p cnf v lc '' followed by four integers .",
    "these integers denote ( 1 ) the number of boolean variables , ( 2 ) the number of propositional clauses , ( 3 ) the number of numeric variables , and ( 4 ) the number of linear inequalities ( lacs ) , respectively .",
    "an alternative input format is smt - lib style .",
    "currently , ` volce ` supports the main features of the `` smt - libv2 '' syntax .",
    "volce has several command - line options :    * ` -v ` asks the tool to call ` vinci ` to compute the volume . * ` -p ` asks the tool to call ` polyvest ` to approximate the volume . * ` -l ` asks the tool to call ` latte ` to count integer solutions . * ` -w = number ` specifies the word length of variables in bit - wise representations . * ` -maxc = number ` sets the maximum sampling coefficient of ` polyvest ` , which is an upper bound . *",
    "` -minc = number ` sets the minimum sampling coefficient of ` polyvest ` .",
    "table  [ table : cmdopt ] shows the options available in volce .",
    ".command - line options of ` volce ` [ cols=\"^,<\",options=\"header \" , ]     to estimate the volume of the solution space of formula  [ f : cnf1 ] , simply type :    ....    % ./volce examples / f1.vs ....    note that formula  [ f : cnf1 ] guarantees @xmath61 .",
    "so we can disable the internal bit - wise bounds of numeric variables , by setting the word length to 0 :    ....    % ./volce -w=0 examples / f1.vs ....    you can also enable ` polyvest ` , ` vinci ` , ` latte ` at the same time :    ....    % ./volce -p",
    "-v -l -w=0 examples / f1.vs ....    [ [ remarks ] ] remarks + + + + + + +    several tools ( ` polyvest ` , ` vinci ` , ` latte ` ) have been integrated which can be enabled for different situations . `",
    "vinci ` gives an accurate volume for a polytope ; but it may have difficulty handling problem instances with more than 10 numeric variables . ` polyvest ` gives approximate results , but it can deal with larger instances . ` latte ` is good at counting the number of integer solutions . sometimes , the first two tools can also be used for approximating the number of integer solutions .",
    "[ [ example-1 ] ] example 1 + + + + + + + + +                                                        figure  [ fig:1 ] shows the linear constraints in formula  [ f : cnf1 ] .",
    "the plane is splitted into 4 areas , since @xmath62 , @xmath63 , @xmath64 , @xmath65 are always true .",
    "the pair \\{@xmath66 , @xmath67 } determines the counted areas .",
    "* area i : \\{@xmath66 = true , @xmath67 = true}. it has no lattice points .",
    "* area ii : \\{@xmath66 = true , @xmath67 = false}. it has 1 lattice point : \\{0 , 1}. * area iii : \\{@xmath66 = false , @xmath67 = false}. it has 2 lattice points : \\{1 , 0 } and \\{1 , 1}. * area iv : \\{@xmath66 = false , @xmath67 = true}. it has 1 lattice point : \\{0 , 0}.    there are 3 boolean solutions for formula  [ f : cnf1 ] : \\{@xmath66 = true , @xmath60 = true , @xmath67 = true } , \\{@xmath66 = true , @xmath60 = false , @xmath67 = true } , and \\{@xmath66 = false , @xmath60 = true , @xmath67 = false}. thus the volume of the solution space is @xmath68 .",
    "and there are @xmath69 integer solutions ( lattice points ) .",
    "obviously , this problem can be regarded as a solution counting problem .",
    "the input consists of the following inequalities : @xmath70 @xmath71 @xmath72 we assume that there are at most 4 colors , and execute the following command :                      given that the size of the whole search space is @xmath75 , we conclude that the frequency of executing _ path1 _ is about @xmath76 ( i.e. , @xmath77 ) .",
    "this means , if the input string has only one character , most probably , the program will follow this path .      ....",
    "( ( c0 = 32 ) or ( c0 = 9 ) or ( c0 = 10 ) ) and    ( not ( ( c1 = 32 ) or ( c1 = 9 ) or ( c1 = 10 ) ) ) and    ( not ( ( c1 ! = 46 ) and ( ( c1 < 48 ) or ( c1 > 57 ) ) ) ) and    ( not ( ( c2 > = 48 ) and ( c2 < = 57 ) ) ) and    ( not ( c2 = 46 ) ) ....                        ....    ! ( a[0 ] < a[3 ] ) ;   ( a[3 ] < a[7 ] ) ;   ( a[3 ] < a[6 ] ) ;    ( a[3 ] < a[5 ] ) ;   ( a[3 ] < a[4 ] ) ;   ! ( a[1 ] < a[3 ] ) ;    ( a[3 ] < a[2 ] ) ;   ( a[3 ] < a[1 ] ) ;   ( a[1 ] < a[0 ] ) ;    ( a[2 ] < a[0 ] ) ;   ! ( a[0 ] < a[7 ] ) ;   ! ( a[4 ] < a[0 ] ) ;    ( a[0 ] < a[6 ] ) ;   ! ( a[0 ] < a[5 ] ) ;   ( a[1 ] < a[7 ] ) ;    ( a[2 ] < a[7 ] ) ;   ! ( a[7 ] < a[5 ] ) ;   ! ( a[1 ] < a[5 ] ) ;    ! ( a[2 ] < a[5 ] ) ;   ( a[5 ] < a[2 ] ) ;   ( a[2 ] < a[1 ] ) . ...."
  ],
  "abstract_text": [
    "<S> there are already quite a few tools for solving the satisfiability modulo theories ( smt ) problems . in this paper </S>",
    "<S> , we present ` volce ` , a tool for counting the solutions of smt constraints , or in other words , for computing the volume of the solution space . its input is essentially a set of boolean combinations of linear constraints , where the numeric variables are either all integers or all reals , and each variable is bounded . </S>",
    "<S> the tool extends smt solving with integer solution counting and volume computation / estimation for convex polytopes . </S>",
    "<S> effective heuristics are adopted , which enable the tool to deal with high - dimensional problem instances efficiently and accurately . </S>"
  ]
}
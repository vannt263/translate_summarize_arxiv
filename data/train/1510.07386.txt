{
  "article_text": [
    "the distributed optimization of a sum of convex functions is an important class of decision and data processing problems over network systems , and has been intensively studied in recent years ( see @xcite and references therein ) .",
    "in addition to the discrete - time distributed optimization algorithms ( e.g. , @xcite ) , continuous - time multi - agent solvers have recently been applied to distributed optimization problems as a promising and useful technique @xcite , thanks to the well - developed continuous - time stability theory .    constrained distributed optimization , in which the feasible solutions are limited to a certain region or range , is significant in a number of network decision applications , including multi - robot motion planning , resource allocation in communication networks , and economic dispatch in power grids .",
    "however , due to the consideration of constraints , the design of such algorithms , to minimize the global cost functions within the feasible set while allowing the agents operate with only local cost functions and local constraints , is a difficult task .",
    "conventionally , the projection method has been widely adopted in the design of algorithms for constrained optimization @xcite and related problems @xcite .",
    "@xcite proposed a continuous - time distributed projected dynamic for constrained optimization , where the agents shared the same constraint set , while @xcite constructed a primal - dual type continuous - time projected algorithm to solve a distributed optimization problem , where each agent had its own private constraint function .",
    "@xcite presented a primal - dual continuous - time projected algorithm for distributed nonsmooth optimization , where each agent had its own local bounded constraint set , though its auxiliary variables may be asymptotically unbounded .",
    "the purpose of this technical note is to propose a novel continuous - time projected algorithm for distributed nonsmooth convex optimization problems where each agent has its own general private constraint set .",
    "the main contributions of the note are three folds .",
    "firstly , we propose a distributed continuous - time algorithm for each agent to find the same optimal solution based only on local cost function and local constraint set , by combining primal - dual method for saddle point seeking and projection method for set constraints .",
    "the proposed algorithm is consistent with those in @xcite when there are no constraints in the distributed optimization .",
    "secondly , the proposed algorithm is proved to solve the optimization problem and have bounded states while seeking the optimal solutions , and therefore , further improves the recent interesting result in @xcite , whose algorithm may have asymptotically unbounded states . finally , nonsmooth lyapunov functions are employed along with the stability theory of discontinuous systems to conduct a complete and original convergence analysis .",
    "our nonsmooth analysis techniques also guarantee the algorithm convergence even when the problem has a continuum of optimal solutions . therefore , the convergence analysis provides additional insights and understandings for continuous - time distributed optimization algorithms compared with @xcite , which considered the objective functions with a finite number of critical points .",
    "the remainder of this note is organized as follows . in section [ sec : def ] , notation , mathematical definitions , and some results are presented and reviewed . in section [ distributed_optimization ] , a constrained convex ( nonsmooth ) optimization problem",
    "is formulated and a distributed continuous - time projected algorithm is proposed . in section [ convergence_simulation ] , a complete proof is presented to show that the algorithm state is bounded and the agents estimates are convergent to the same optimal solution , and simulation studies are carried out for illustration .",
    "finally , in section [ conclusion ] , concluding remarks are given .",
    "in this section , we introduce necessary notations , definitions and preliminaries about graph theory , nonsmooth analysis , and projection operators .    [",
    "sec : def ]      @xmath0 denotes the set of real numbers , @xmath1 denotes the set of @xmath2-dimensional real column vectors , @xmath3 denotes the set of @xmath2-by-@xmath4 real matrices , @xmath5 denotes the @xmath6 identity matrix , and @xmath7 denotes transpose , respectively .",
    "we write @xmath8 for the rank of the matrix @xmath9 , @xmath10 for the range of the matrix @xmath9 , @xmath11 for the kernel of the matrix @xmath9 , @xmath12 for the largest eigenvalue of the matrix @xmath9 , @xmath13 for the @xmath14 ones vector , @xmath15 for the @xmath14 zeros vector , and @xmath16 for the kronecker product of matrices @xmath9 and @xmath17 .",
    "furthermore , @xmath18 denotes the euclidean norm , @xmath19 ( @xmath20 ) denotes that matrix @xmath21 is positive definite ( positive semi - definite ) , @xmath22 denotes the closure of the subset @xmath23 , @xmath24 denotes the interior of the subset @xmath25 , @xmath26 denotes the dimension of the vector space @xmath27 , @xmath28 denotes the open ball _ centered _ at @xmath29 with _ radius _ @xmath30 , @xmath31 denotes the distance from a point @xmath32 to the set @xmath33 , that is , @xmath34 , @xmath35 as @xmath36 denotes that @xmath37 approaches the set @xmath33 , that is , for each @xmath38 there exists @xmath39 such that @xmath40 for all @xmath41 .      a weighted undirected graph @xmath42 is denoted by @xmath43 , where @xmath44 is a set of nodes , @xmath45 is a set of edges , @xmath46\\in\\mathbb r^{n\\times n}$ ] is a _ weighted adjacency matrix _ such that @xmath47 if @xmath48 and @xmath49 otherwise .",
    "the _ laplacian matrix _ is @xmath50 , where @xmath51 is diagonal with @xmath52 , @xmath53 . specifically ,",
    "if the weighted undirected graph @xmath42 is connected , then @xmath54 , @xmath55 and @xmath56 .",
    "consider the differential equation given by @xmath57 where @xmath58 is lebesgue measurable and locally bounded @xcite .",
    "a _ fillipov solution _",
    "@xcite of ( [ eq_ode ] ) is defined by an absolutely continuous function such that for almost all @xmath59,\\,\\tau>0 $ ] , @xmath60(x(t)),\\quad x(0 ) = x_0,\\ ] ] where @xmath61(x)\\triangleq\\bigcap_{\\delta>0}\\bigcap_{\\mu ( \\mathcal s)=0}\\overline{\\rm{co}}\\{f(\\mathcal b_{\\delta}(x)\\backslash\\mathcal s)\\}$ ] , @xmath62 denotes the lebesgue measure , and @xmath63 denotes the convex closure .",
    "since @xmath64 is locally bounded , @xmath65(\\cdot)$ ] is an upper semi - continuous map with nonempty , compact and convex values @xcite .",
    "dynamical systems of the form given by ( [ fs ] ) are called _ differential inclusions _ in the literature @xcite and for each state @xmath66 , they specify a _ set _ of possible evolutions rather than a single one .    recall that the solution @xmath67 to ( [ eq_ode ] ) is a _",
    "right maximal solution _ if it can not be extended forward in time .",
    "we assume that all right maximal filippov solutions to ( [ eq_ode ] ) exist on @xmath68 .",
    "a set @xmath33 is said to be _ weakly invariant _",
    "@xcite ( resp . ,",
    "_ strongly invariant _ ) with respect to ( [ eq_ode ] ) if for every @xmath69 , @xmath33 contains a maximal solution @xcite ( resp . , all maximal solutions ) of ( [ eq_ode ] ) .",
    "a point @xmath70 is a _ positive limit point _ of a solution @xmath71 to ( [ eq_ode ] ) with @xmath72 , if there exists a sequence @xmath73 with @xmath74 and @xmath75 as @xmath76 .",
    "the set @xmath77 of all such positive limit points is the _ positive limit set _ for the trajectory @xmath71 with @xmath72 .",
    "an equilibrium point of ( [ eq_ode ] ) is a point @xmath78 such that @xmath79(x_e)$ ] .",
    "it is easy to see that @xmath80 is an equilibrium point of ( [ eq_ode ] ) if and only if the constant function @xmath81 is a filippov solution of ( [ eq_ode ] ) .",
    "an equilibrium point @xmath82 of ( 1 ) is _ lyapunov stable _ if , for every @xmath83 , there exists @xmath84 such that , for every initial condition @xmath85 and every filippov solution @xmath37 with the initial condition @xmath86 , @xmath87 for all @xmath88 .",
    "let @xmath89 be a locally lipschitz continuous function , the _ clarke generalized gradient _",
    "@xcite @xmath90 of @xmath91 at @xmath92 is the set @xmath93 where @xmath94 denotes the collection of all subsets of @xmath95 , ",
    "@xmath96 \" denotes the convex hull , @xmath97 denotes the nabla operator , @xmath98 is the set of measure zero of points where @xmath99 does not exist , and @xmath25 is an arbitrary set of measure zero in @xmath95 .",
    "the _ set - valued lie derivative _",
    "@xcite @xmath100 of @xmath101 with respect to ( [ eq_ode ] ) is defined as @xmath102(x)\\,\\,{\\rm{such}}\\,\\,{\\rm{that}}\\,\\,p^{\\rm{t } } v = a\\,\\,{\\rm{for}}\\,\\,{\\rm{all}}\\,\\,p\\in\\partial{v}(x)\\}.$ ] if @xmath91 is continuously differentiable at @xmath92 , then @xmath103(x)\\}$ ] . in the case",
    "where @xmath104 is nonempty , we use @xmath105 to denote the largest element of @xmath104 . it is shown in lemma 1 of @xcite that , if @xmath106 is a solution of ( [ fs ] ) and @xmath107 is locally lipschitz and _ regular _ ( see @xcite or @xcite ) , then @xmath108 exists almost everywhere and @xmath109 almost everywhere .",
    "let @xmath110 be a convex function .",
    "the effective domain of @xmath111 is defined by @xmath112 .",
    "a convex function @xmath111 is said to be _ proper _",
    "@xcite if @xmath113 and @xmath114 for all @xmath115 .",
    "let @xmath116 be a proper convex function .",
    "the _ subdifferential _",
    "@xcite @xmath117 of @xmath111 at @xmath118 is defined by @xmath119 and the elements of @xmath120 are called _ subgradients _ of @xmath111 at point @xmath92 . recall that continuous convex functions are locally lipschitz continuous , regular , and their subdifferentials and clarke generalized gradients coincide .",
    "thus , the framework for stability theory of discontinuous systems and nonsmooth regular lyapunov functions in @xcite can be applied to the theoretical analysis in this note .",
    "next , we introduce a version of the invariance principle @xcite , which is based on nonsmooth regular lyapunov functions .",
    "@xcite[nonsmooth_invariance ] consider the differential inclusion ( [ fs ] ) .",
    "let @xmath107 be locally lipschitz and regular .",
    "suppose that for some @xmath121 , the connected component @xmath122 of the level set @xmath123 such that @xmath124 is bounded .",
    "let @xmath106 be a solution of ( [ fs ] ) , @xmath125 and @xmath33 be the largest weakly invariant subset of @xmath126 .",
    "then @xmath127 as @xmath128 .",
    "furthermore , we introduce a lemma which is used in the convergence analysis .",
    "[ converge]@xcite consider the differential inclusion ( [ fs ] ) .",
    "let @xmath129 be a compact , positively invariant set with respect to ( [ fs ] ) , @xmath130 be a solution of ( [ fs ] ) with @xmath131 , and @xmath77 be the positive limit set for the solution @xmath132 with @xmath131 . if @xmath133 and @xmath134 is a lyapunov stable equilibrium of ( [ fs ] ) , then @xmath135 and @xmath136 .",
    "define @xmath137 as a projection operator given by @xmath138 , where @xmath139 is closed and convex .",
    "a basic property @xcite of a projection @xmath137 on a closed convex set @xmath139 is @xmath140 using ( [ projection_inequality ] ) , we get the following projection inequality , which plays a key role in the convergence analysis .",
    "[ lemma_ineq ] if @xmath139 is closed and convex , then @xmath141    by setting @xmath142 in ( [ projection_inequality ] ) , we have @xmath143 by adding @xmath144 to both sides of the inequality , we complete the proof .",
    "consider a network of @xmath2 agents interacting over a graph @xmath42 .",
    "there is a local cost function @xmath145 and a local feasible constraint set @xmath146 for all @xmath53 .",
    "the global cost function of the network is @xmath147 .",
    "then a distributed algorithm is needed to solve @xmath148 where each agent uses only its own local cost function , its local constraint , and the shared information with its neighbors .    to ensure the wellposedness of the problem , the following assumption is needed .",
    "[ assumption ] consider the optimization problem ( [ optimization_problem ] ) .    1 .   the weighted graph @xmath42 is connected and undirected .",
    "2 .   for all @xmath149",
    ", @xmath150 is continuous and convex , and @xmath146 is closed and convex with @xmath151 .",
    "3 .   there exists at least one finite optimal solution to problem ( [ optimization_problem ] ) .",
    "problem ( 6 ) covers many problems in the recent distributed optimization studies .",
    "for example , it introduces the constraints compared with the unconstrained optimization model in @xcite .",
    "moreover , it generalizes the model in @xcite by allowing heterogeneous constraints , and extends the models in @xcite and @xcite , which considered function constraints and hyper box ( sphere ) constraints , respectively .",
    "@xmath152    let @xmath153 be the estimate of agent @xmath154 in the network at time instant @xmath88 for the optimal solution .",
    "let @xmath155 , where @xmath156 is the laplacian matrix of @xmath42 .",
    "define @xmath157^{\\rm t}\\in\\omega\\subset\\mathbb r^{nq}$ ] and define @xmath158 with @xmath159 , where @xmath160 is defined by the cartesian product of @xmath161 .",
    "then , we arrive at the following lemma by directly analyzing the optimality condition .",
    "[ optimal_eqv ] assume assumption [ assumption ] holds .",
    "@xmath162 is an optimal solution to problem ( [ optimization_problem ] ) if and only if there exist @xmath163 and @xmath164 such that    [ optimal_condition ] @xmath165    it follows from theorem 3.33 in @xcite that @xmath166 is an optimal solution to problem if and only if @xmath167 where @xmath168 is the normal cone of @xmath169 at an element @xmath170 . note that @xmath171 is convex and @xmath151 followed by assumption [ assumption ] .",
    "it follows from theorem 2.85 and lemma 2.40 in @xcite that @xmath172 and @xmath173 . to prove this lemma ,",
    "one only needs to show holds if and only if ( [ optimal_condition ] ) is satisfied .",
    "suppose ( [ optimal_condition ] ) holds .",
    "since graph @xmath42 is connected , it follows from ( [ optimal_condition_2 ] ) that there exists @xmath174 such that @xmath175 .",
    "note that @xmath176 if and only if @xmath177 .",
    "let @xmath178 be the @xmath179th entry of the adjacency matrix of @xmath42 and @xmath180^{\\rm t}\\in\\mathbb r^{nq}$ ] with @xmath181",
    ". then @xmath182 holds if and only if there exists @xmath183 such that @xmath184 . because graph @xmath42 is undirected , @xmath185 and @xmath186 .",
    "since @xmath187 , is thus proved .",
    "conversely , suppose ( [ optimal_orginal ] ) holds .",
    "let @xmath188 .",
    "( [ optimal_condition_2 ] ) is clearly true .",
    "it follows from ( [ optimal_orginal ] ) that there exists @xmath183 such that @xmath189 .",
    "choose @xmath190 , such that @xmath191 .",
    "next , define vectors @xmath192 .",
    "it is clear that @xmath193 .",
    "because @xmath194 is symmetric since @xmath42 is undirected , it follows from the fundamental theorem of linear algebra that the sets @xmath195 and @xmath196 form an orthogonal decomposition of @xmath197 .",
    "define @xmath198^{\\rm t}\\in\\mathbb r^{nq}$ ] . for every @xmath199 , @xmath200 and , hence , @xmath201 and there exists @xmath202 such that @xmath203 .",
    "thus , there exists @xmath180^{\\rm t}\\in\\mathbb r^{nq}$ ] with @xmath204 such that @xmath205 , where @xmath178 is the @xmath179th entry of the adjacency matrix of @xmath42 .",
    "hence , there exists @xmath206 and @xmath207 such that @xmath177 , equivalently , @xmath176 .",
    "( [ optimal_condition_1 ] ) is proved .",
    "consider the optimization problem ( [ optimization_problem ] ) , we propose the optimization algorithm of agent @xmath154 as follows :    [ distributed feedback_v2_x ] @xmath208}-x_i,\\\\ \\dot \\lambda_i(t ) & = \\alpha \\sum_{j=1}^{n}a_{i , j}(x_i(t)-x_j(t ) ) , \\quad g_i(x_i(t))\\in \\partial{f^i}(x_i(t)),\\label{distributed feedback_v2_v}\\end{aligned}\\ ] ]    where @xmath209 , @xmath210 , @xmath211 , and @xmath178 is the @xmath179th element of the adjacency matrix of graph @xmath42 .",
    "distributed algorithm ( [ distributed feedback_v2_x ] ) is motivated by the primal - dual type continuous - time algorithms , which was firstly proposed in @xcite and later on extended in @xcite .",
    "if the state constraints are relaxed to @xmath212 , then distributed algorithm ( [ distributed feedback_v2_x ] ) is consistent with the algorithm proposed in section iv of @xcite .",
    "algorithm ( [ distributed feedback_v2_x ] ) also incorporates projection operation to handle constraints , which had also been adopted in @xcite and @xcite .",
    "however , @xcite only handled homogeneous constraint , and @xcite may produce unbounded states , which may be hard to implement in practice . here",
    "our proposed algorithm ( [ distributed feedback_v2_x ] ) handles the problems with local constraints and can guarantee the boundedness of states . @xmath152",
    "in this section , we give the convergence analysis of the algorithm and then an illustrative simulation .",
    "let @xmath213^{\\rm t}\\in\\omega\\subset\\mathbb r^{nq}$ ] and @xmath214^{\\rm t}\\in\\mathbb r^{nq}$ ] with @xmath160 .",
    "then ( [ distributed feedback_v2_x ] ) can be written in a more compact form @xmath215(\\mathbf{x}(t),\\lambda ( t)),\\quad\\mathbf{x}(0)=\\mathbf{x}_0,\\quad \\lambda ( 0)=\\lambda _ 0 , \\label{feedback_comp}\\end{aligned}\\ ] ] where @xmath216(\\mathbf{x},\\lambda ) \\triangleq \\bigg{\\{}\\begin{bmatrix } p_{\\omega}[\\mathbf{x}- \\alpha\\mathbf{l}\\mathbf { x } -   \\alpha \\mathbf{l}\\lambda    -   g(\\mathbf{x})]-\\mathbf{x}\\\\ \\alpha \\mathbf{l}\\mathbf{x}\\end{bmatrix } : g(\\mathbf { x})\\in\\partial \\mathbf{f}(\\mathbf { x } ) \\bigg{\\}}$ ] , @xmath217 , @xmath218 is the laplacian matrix of graph @xmath42 , and @xmath211 .",
    "the following lemma provides some result when @xmath219 .",
    "[ l_n_com ] let @xmath218 be the laplacian matrix of the connected and undirected graph @xmath42 , and let @xmath211 , then @xmath220 , @xmath221 , and @xmath222 .",
    "note that @xmath223 is symmetric since @xmath42 is undirected .",
    "@xmath223 can be decomposed as @xmath224 via eigenvalue decompositions , where @xmath225 is an orthogonal matrix and @xmath226 is a diagonal matrix whose diagonal entries are the eigenvalues of @xmath223 .",
    "thus , @xmath227 where @xmath228 is clearly a diagonal matrix .    since @xmath229 and @xmath230 , it follows that @xmath231 where @xmath232 is the @xmath154th diagonal element of @xmath226 .",
    "hence , @xmath233    in addition , @xmath234 and @xmath230 since @xmath42 is connected .",
    "the diagonal matrix @xmath226 has one zero diagonal entry and @xmath235 positive diagonal entries .",
    "furthermore , it follows from ( [ alpha_l ] ) that the diagonal matrix @xmath228 has one zero diagonal entry and @xmath235 positive diagonal entries . hence , @xmath236 and @xmath237 .",
    "since @xmath225 is an orthogonal matrix and @xmath225 is invertible , @xmath238 and @xmath239 .",
    "because @xmath240 and @xmath239 , it follows from rank - nullity theorem of linear algebra that @xmath241 and @xmath242 .",
    "let @xmath243 and @xmath164 be the vectors such that ( [ optimal_condition ] ) is satisfied .",
    "define @xmath244 where @xmath245 and @xmath246 such that @xmath247 .",
    "the set - valued lie derivative of @xmath248 with respect to ( [ feedback_comp ] ) is defined by @xmath249 .    by using lemmas [ lemma_ineq ] and [ l_n_com ] , we have the following result , which provides a nonsmooth lyapunov function and analyzes its set - valued lie derivative .    [ differential_eqn ]",
    "consider the distributed algorithm ( [ distributed feedback_v2_x ] ) , or equivalently , algorithm ( [ feedback_comp ] ) .",
    "assume assumption [ assumption ] holds .",
    "let @xmath250 be as defined in .",
    "* @xmath250 is positive definite and @xmath251 if and only if @xmath252 ; * if @xmath253 , then there exists @xmath254 such that @xmath255-\\mathbf{x}\\|^2- \\mathbf { x}^{\\rm t}(\\alpha\\mathbf{l}-\\alpha^2\\mathbf{l}^2)\\mathbf { x}\\leq 0 $ ] .",
    "( @xmath154 ) since graph @xmath42 is undirected , @xmath256 . and",
    "note that @xmath257 followed by ( [ optimal_condition_2 ] ) .",
    "it can be easily verified that @xmath258 .",
    "next , we show @xmath259 for all @xmath260 and @xmath261 .    since @xmath262 is convex in @xmath263 and @xmath264 , it follows that @xmath265 where @xmath206 . hence , @xmath266    since @xmath194 is positive semi - definite , @xmath267 and hence , @xmath268 note that @xmath194 is symmetric and @xmath269 .",
    "@xmath270    let @xmath271 be the eigenvalues of @xmath218 .",
    "since the eigenvalues of @xmath272 are @xmath273 , it follows from the properties of kronecker product that the eigenvalues of @xmath274 are @xmath275 .",
    "thus , @xmath276 .    since @xmath211 , @xmath277 for all @xmath278 .",
    "hence , @xmath279 therefore , @xmath280    it follows from ( [ inequality_1 ] ) and ( [ inequality_2 ] ) that @xmath281 for all @xmath260 . because @xmath211 , the function @xmath282 is clearly positive definite , and is zero if and only if @xmath252 .",
    "hence , @xmath283 for all @xmath260 and @xmath261 .",
    "( @xmath284 ) the generalized gradient of @xmath250 with respect to @xmath263 is @xmath285    the gradient of @xmath250 with respect to @xmath286 is @xmath287    the function @xmath250 along the trajectories of ( [ distributed feedback_v2_x ] ) ( or ( [ feedback_comp ] ) ) satisfies that @xmath288(\\mathbf{x},\\lambda ) $ such that } \\\\ & & a=[p^{\\rm t},\\ , ( \\nabla_{\\lambda } v_2^*(\\mathbf{x},\\lambda))^{\\rm t } ] v   \\textit { for all $ p\\in\\partial_{\\mathbf{x } } v^*(\\mathbf{x},\\lambda ) $ } \\big{\\ } } ,   \\end{aligned}\\ ] ] where @xmath289(\\mathbf{x},\\lambda ) $ ] is defined in ( [ feedback_comp ] ) , @xmath290 and @xmath291 are defined in ( [ grad_x ] ) and ( [ grad_lambda ] ) , respectively .",
    "suppose @xmath253 .",
    "there exists @xmath254 such that @xmath292 v = a$ ] for all @xmath293 , where @xmath294-\\mathbf{x}\\\\ \\alpha \\mathbf{l}\\mathbf{x}\\end{bmatrix}$ ] and @xmath295 .",
    "in particular , @xmath292 v = a$ ] must be true for @xmath296 .",
    "hence , there exists @xmath297 such that @xmath298-\\mathbf{x}\\big{)}\\\\ & & + \\big{(}\\alpha\\mathbf{lx}+\\lambda-\\lambda^*\\big{)}^{\\rm t}\\alpha \\mathbf{l}\\mathbf{x}\\\\ & = & \\big { ( } g ( \\mathbf{x})+ \\alpha\\mathbf{lx}+\\alpha\\mathbf{l}\\lambda+\\mathbf{x}-\\mathbf{x}^*\\big{)}^{\\rm t } \\big{(}p_{\\omega}[\\mathbf{x}- \\alpha\\mathbf{l}\\mathbf { x } -   \\alpha \\mathbf{l}\\lambda    -   g(\\mathbf{x})]-\\mathbf{x}\\big{)}\\\\ & & -\\big{(}g(\\mathbf{x}^*)+\\alpha\\mathbf{l}\\lambda^ * \\big { ) } ^{\\rm t}\\big{(}p_{\\omega}[\\mathbf{x}- \\alpha\\mathbf{l}\\mathbf { x } -   \\alpha \\mathbf{l}\\lambda    -   g(\\mathbf{x})]-\\mathbf{x}\\big{)}+\\big{(}\\alpha\\mathbf{lx}+\\lambda-\\lambda^*\\big{)}^{\\rm t}\\alpha \\mathbf{l}\\mathbf{x}\\\\ & = & j_1(\\mathbf{x},\\lambda)+j_2(\\mathbf{x},\\lambda)+j_3(\\mathbf{x},\\lambda),\\end{aligned}\\ ] ] where @xmath299-\\mathbf{x}\\big{)}$ ] , @xmath300-\\mathbf{x}\\big{)}$ ] , and @xmath301 .    by setting @xmath302 , @xmath303 , and @xmath304 in ( [ revised_inequality ] ) , we have @xmath305-\\mathbf{x}\\|^2 -(\\mathbf { x}-\\mathbf { x}^*)^{\\rm t}(g ( \\mathbf{x})+ \\alpha\\mathbf{lx}+\\alpha\\mathbf{l}\\lambda ) \\nonumber\\\\ & = &   -\\|p_{\\omega}[\\mathbf{x}- \\alpha\\mathbf{l}\\mathbf { x } -   \\alpha \\mathbf{l}\\lambda    -   g(\\mathbf{x})]-\\mathbf{x}\\|^2 -(\\mathbf { x}-\\mathbf { x}^*)^{\\rm t}g ( \\mathbf{x})- \\alpha\\mathbf { x}^{\\rm t}\\mathbf{l}\\mathbf { x } -\\alpha\\mathbf { x}^{\\rm t}\\mathbf{l}\\lambda .\\end{aligned}\\ ] ]    next , @xmath306-\\mathbf{x}^*\\big{)}\\nonumber\\\\ & & -\\big{(}g(\\mathbf{x}^*)+\\alpha\\mathbf{l}\\lambda^ * \\big { ) }",
    "^{\\rm t}(\\mathbf{x}^*-\\mathbf{x})\\nonumber\\\\ & = & -\\big{(}g(\\mathbf{x}^*)+\\alpha\\mathbf{l}\\lambda^ * \\big { ) } ^{\\rm t}\\big{(}p_{\\omega}[\\mathbf{x}- \\alpha\\mathbf{l}\\mathbf { x } -   \\alpha \\mathbf{l}\\lambda    -   g(\\mathbf{x})]-\\mathbf{x}^*\\big{)}\\nonumber\\\\ & & -g(\\mathbf{x}^*)^{\\rm t}(\\mathbf{x}^*-\\mathbf{x } ) + \\alpha(\\mathbf{l}\\lambda^ * ) ^{\\rm t}\\mathbf{x}.\\end{aligned}\\ ] ]    note that @xmath307 is chosen such that @xmath247 .",
    "furthermore , @xmath247 implies that @xmath308 , where @xmath309 is the normal cone of @xmath310 at an element @xmath243 . since @xmath311\\in\\omega$ ] and @xmath312",
    ", it follows that @xmath313-\\mathbf{x}^*\\big{)}\\leq 0 $ ] .",
    "it follows from ( [ inequality_j_2 ] ) that @xmath314    in view of ( [ j_1_ineq ] ) and ( [ j_2_ineq ] ) , @xmath315-\\mathbf{x}\\|^2 - \\alpha\\mathbf { x}^{\\rm t}\\mathbf{l}\\mathbf { x}\\nonumber\\\\ & & -(\\mathbf { x}-\\mathbf { x}^*)^{\\rm t}\\big{(}g ( \\mathbf{x})-g ( \\mathbf{x}^*)\\big{)}-\\alpha\\mathbf { x}^{\\rm t}\\mathbf{l}(\\lambda-\\lambda^*).\\end{aligned}\\ ] ]    the convexity of @xmath316 implies that @xmath317 . hence , @xmath315-\\mathbf{x}\\|^2 - \\alpha \\mathbf { x}^{\\rm t}\\mathbf{l}\\mathbf { x } -\\alpha\\mathbf { x}^{\\rm t}\\mathbf{l}(\\lambda-\\lambda^*).\\end{aligned}\\ ] ] and hence , @xmath318-\\mathbf{x}\\|^2 - \\alpha \\mathbf { x}^{\\rm t}\\mathbf{l}\\mathbf { x } -\\alpha\\mathbf { x}^{\\rm t}\\mathbf{l}(\\lambda-\\lambda^*)+\\big{(}\\alpha\\mathbf{lx}+\\lambda-\\lambda^*\\big{)}^{\\rm",
    "t}\\alpha \\mathbf{l}\\mathbf{x}\\nonumber\\\\ & = & -\\|p_{\\omega}[\\mathbf{x}- \\alpha\\mathbf{l}\\mathbf { x } -   \\alpha \\mathbf{l}\\lambda    -   g(\\mathbf{x})]-\\mathbf{x}\\|^2- \\mathbf { x}^{\\rm t}(\\alpha\\mathbf{l}-\\alpha^2\\mathbf{l}^2)\\mathbf { x}.\\end{aligned}\\ ] ]    by the properties of kronecker product , @xmath319    it follows from lemma [ l_n_com ] that @xmath238 , @xmath239 , and @xmath320 . therefore , @xmath321 is positive semi - definite and @xmath322 .",
    "hence , @xmath323 for all @xmath324 and @xmath325-\\mathbf{x}\\|^2- \\mathbf { x}^{\\rm t}(\\alpha\\mathbf{l}-\\alpha^2\\mathbf{l}^2)\\mathbf { x}\\leq 0.$ ]    the proof is completed .",
    "based on lemmas [ converge ] and [ differential_eqn ] , we obtain our main result for state boundedness and convergence of the proposed algorithm .",
    "[ theorem_convergence ] consider the distributed algorithm ( [ distributed feedback_v2_x ] ) , or equivalently , algorithm ( [ feedback_comp ] )",
    ". assume assumption [ assumption ] holds .",
    "then ,    * every solution @xmath326 is bounded ; * every solution @xmath326 converges to some set @xmath33 such that for every @xmath327 , @xmath328 and @xmath329 is an optimal solution to problem ; * in addition , every solution @xmath326 converges to some point @xmath327 such that @xmath328 and @xmath329 is an optimal solution to problem .",
    "( @xmath154 ) let @xmath250 be as defined in .",
    "due to ( @xmath154 ) of lemma [ differential_eqn ] , @xmath250 is positive definite and @xmath251 if and only if @xmath252 .",
    "if @xmath253 , it follows from ( @xmath284 ) of lemma [ differential_eqn ] that there exists @xmath297 such that @xmath325-\\mathbf{x}\\|^2- \\mathbf { x}^{\\rm t}(\\alpha\\mathbf{l}-\\alpha^2\\mathbf{l}^2)\\mathbf { x}\\leq 0 $ ] .",
    "hence , @xmath330-\\mathbf{x}\\|^2\\big{\\}}- \\mathbf { x}^{\\rm t}(\\alpha\\mathbf{l}-\\alpha^2\\mathbf{l}^2)\\mathbf { x}\\nonumber \\\\ & = & -\\inf_{g(\\mathbf { x})\\in\\partial \\mathbf{f}(\\mathbf { x } ) } \\big{\\{}\\|p_{\\omega}[\\mathbf{x}- \\alpha\\mathbf{l}\\mathbf { x } -   \\alpha \\mathbf{l}\\lambda    -   g(\\mathbf{x})]-\\mathbf{x}\\|^2\\big{\\}}- \\mathbf { x}^{\\rm t}(\\alpha\\mathbf{l}-\\alpha^2\\mathbf{l}^2)\\mathbf { x}\\nonumber\\\\ & \\leq & 0.\\label{non - positive}\\end{aligned}\\ ] ]    furthermore , if @xmath331 , then @xmath332 and @xmath333 .",
    "it follows from ( [ non - positive ] ) that @xmath334 , where @xmath335 , is positive invariant . since @xmath336 is positive definite , @xmath129 is bounded and every solution @xmath326 is also bounded .",
    "part ( @xmath154 ) is thus proved .",
    "( @xmath284 ) let @xmath337 , and let @xmath33 be the largest weakly invariant subset of @xmath338 .",
    "it follows from lemma [ nonsmooth_invariance ] that @xmath339 as @xmath340 .",
    "in addition , for every @xmath341 , @xmath328 and @xmath329 is an optimal solution to problem followed by lemma [ optimal_eqv ] .",
    "part ( @xmath284 ) is thus proved .",
    "( @xmath342 ) let @xmath343 . by replacing @xmath344 in @xmath250 with @xmath345",
    ", we define a function @xmath346 , where @xmath347 such that @xmath348 .",
    "it follows from ( @xmath154 ) of lemma [ differential_eqn ] that @xmath349 is positive definite and @xmath350 if and only if @xmath351 .",
    "moreover , it follows from a similar line of attack as the proof of part ( @xmath154 ) that @xmath349 along the trajectories of ( [ distributed feedback_v2_x ] ) satisfies @xmath352 .",
    "hence , @xmath353 is a lyapunov stable equilibrium point to the system ( [ distributed feedback_v2_x ] ) .",
    "note that @xmath354 as @xmath36 , and every point in @xmath33 is a lyapunov stable equilibrium .",
    "according to lemma [ converge ] , @xmath326 converges to a point @xmath355 as @xmath340 .",
    "in addition , @xmath341 implies that there is @xmath356 such that @xmath328 and @xmath329 is an optimal solution to problem followed by lemma [ optimal_eqv ] .",
    "part ( @xmath342 ) is thus proved .",
    "theorem [ theorem_convergence ] shows the convergence property of the proposed algorithm .",
    "part ( @xmath154 ) of theorem [ theorem_convergence ] shows that the state trajectories of the algorithm are bounded , while part ( @xmath284 ) of theorem [ theorem_convergence ] shows that every state trajectory converges to a set in which every point corresponds to an optimal solution of ( [ optimization_problem ] ) , and part ( @xmath342 ) of theorem [ theorem_convergence ] further proves that every state trajectory converges to one point in that set . @xmath152",
    "the convergence analysis in this note is based on nonsmooth lyapunov functions , which can be regarded as an extension of the analysis basing on smooth lypunov functions in @xcite .",
    "moreover , the novel technique proves that algorithm ( [ distributed feedback_v2_x ] ) is able to solve optimization problems having a continuum of optimal solutions , and therefore , improves the previous ones in @xcite , which only handle the objective functions with a finite number of critical points . @xmath152",
    "the following is an example modified from @xcite .",
    "consider the optimization problem ( [ optimization_problem ] ) with @xmath357^{\\rm t}\\in\\mathbb r^3 $ ] , where @xmath358 and nonsmooth objective functions @xmath359 .",
    "the information sharing graph @xmath360 in algorithm ( [ distributed feedback_v2_x ] ) is given by fig .",
    "[ fig_topology ] .",
    "the trajectories of estimates for @xmath92 versus time are shown in fig .",
    "it can be seen that all the agents converge to the same optimal solution which satisfies all the local constraints and minimizes the sum of local objective functions , without knowing other agents constraints or feasible sets .",
    "[ lambda ] shows the trajectories of the auxiliary variable @xmath286 s and verifies the boundedness of the algorithm trajectories .     versus time , width=8 ]    s versus time , width=8 ]",
    "in this note , a novel distributed projected continuous - time algorithm has been proposed for a distributed nonsmooth optimization under local set constraints . by virtue of inequalities of projection operators and nonsmooth analysis ,",
    "the proposed algorithm has been proved to be convergent while keeping the states bounded .",
    "furthermore , based on the stability theory and the invariance principal for nonsmooth lyapunov functions , the algorithm has been shown to solve the optimization problem with a continuum of optimal solutions .",
    "finally , the algorithm performance has also been illustrated via simulation .",
    "g.  shi , k.  johansson , and y.  hong , `` reaching an optimal consensus : dynamical systems that compute intersections of convex sets , '' _ ieee transactions on automatic control _ , vol .",
    "55 , no .  3 , pp .",
    "610622 , 2013 .",
    "k.  j. arrow , l.  hurwicz , and h.  uzawa , _ studies in linear and non - linear programming : stanford mathematical studies in the social sciences , no .",
    "2_.1em plus 0.5em minus 0.4emstanford : stanford university press , 1972 .",
    "a.  bacciotti and f.  ceragioli , `` stability and stabilization of discontinuous systems and nonsmooth lyapunov functions , '' _ esaim : control , optimisation and calculus of variations _ ,",
    "vol .  4 , pp . 361376 , 1999 .",
    "q.  hui , w.  m. haddad , and s.  p. bhat , `` semistability , finite - time stability , differential inclusions , and discontinuous dynamical systems having a continuum of equilibria , '' _ ieee trans .",
    "54 , no .",
    "24652470 , 2009 ."
  ],
  "abstract_text": [
    "<S> this technical note studies the distributed optimization problem of a sum of nonsmooth convex cost functions with local constraints . at first </S>",
    "<S> , we propose a novel distributed continuous - time projected algorithm , in which each agent knows its local cost function and local constraint set , for the constrained optimization problem . </S>",
    "<S> then we prove that all the agents of the algorithm can find the same optimal solution , and meanwhile , keep the states bounded while seeking the optimal solutions . </S>",
    "<S> we conduct a complete convergence analysis by employing nonsmooth lyapunov functions for the stability analysis of discontinuous systems . </S>",
    "<S> finally , we provide a numerical example for illustration .    </S>",
    "<S> * key words : * constrained distributed optimization , continuous - time algorithms , multi - agent systems , nonsmooth analysis , projected dynamical systems . </S>"
  ]
}
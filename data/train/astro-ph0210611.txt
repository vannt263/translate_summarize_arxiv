{
  "article_text": [
    "astrophysical structure formation and the dynamics of astrophysical systems involve nonlinear gas dynamical processes which can not be modeled analytically but require numerical methods .",
    "one would like to address the challenging problem of star formation and how this process produces planetary systems .",
    "observations of the x - ray emission from hot gas in galaxy clusters , the sunyaev - zeldovich effect in the cmb spectrum , and the lyman alpha forest in the spectra of quasars are only meaningful if we understand the gas dynamical processes involved .",
    "the evolution of complex systems is best modeled using numerical simulations .",
    "a large class of astrophysical problems involve collisional systems where the mean free path is much smaller than all length scales of interest .",
    "hence , one can appropriately adopt an ideal fluid description of matter where the thermodynamical properties of the fluid obey well known equations of state .",
    "conservation of mass , momentum , and energy allows one to write down the euler equations which govern fluid mechanics ( see * ? ? ?",
    "this formalism is an ideal basis for simulating astrophysical fluids .",
    "hydrodynamical simulations are faced with challenging problems , but advancements in the field have made it an important tool for theoretical astrophysics .",
    "one of the main challenges in simulating complex fluid flows is the capturing of strong shocks , which frequently occur and play an important role in gas dynamics .",
    "the differential euler equations are ill - defined at shock discontinuities where derivatives are infinite .",
    "much effort has been devoted to solving this problem and a field of work has resulted from it .",
    "computational fluid dynamics ( cfd ) is a powerful approach to simulating fluid flow with emphasis on high resolution capturing of shocks and prevention of numerical instabilities .",
    "both eulerian and lagrangian methods have been developed .",
    "lagrangian methods based on smoothed particle hydrodynamics ( sph ; * ? ? ?",
    "* ; * ? ? ?",
    "* ) consider a monte - carlo approximation to solving the fluid equations , somewhat analogous to @xmath0-body methods for the vlasov equation .",
    "sph schemes follow the trajectories of particles of fixed mass which represent fluid elements .",
    "the lagrangian forms of the euler equations are solved to determine smoothed fluid variables like density , velocity , and temperature .",
    "the particle formulation does not naturally capture shocks and artificial viscosity is added to prevent unphysical oscillations .",
    "however , the addition of artificial viscosity broadens shocks over several smoothing lengths and degrades the resolution .",
    "the lagrangian approach has a large dynamic range in length but not in mass .",
    "it achieves good spatial resolution in high density regions but does poorly in low density regions .",
    "sph schemes must smooth over a large number of neighbouring particles , making it computationally expensive and challenging to implement in parallel .",
    "the standard approach to eulerian methods is to discretize the problem and solve the integral euler equations on a cartesian grid by computing the flux of mass , momentum , and energy across grid cell boundaries . in conservative schemes ,",
    "the flux taken out of one cell is added to the neighbouring cell and this ensures the correct shock propagation .",
    "flux assignment schemes based on the _ total variation diminishing condition _ @xcite have been designed for high order accuracy and high resolution capturing of shocks , while preventing unphysical oscillations .",
    "the eulerian approach has a large dynamic range in mass but not in length , opposite to that of lagrangian schemes . in general , eulerian algorithms are computationally faster by several orders of magnitude .",
    "they are also easy to implement and to parallelize .",
    "the purpose of this paper is to present a pedagogical review of some of the methods employed in eulerian computational fluid dynamics . in @xmath1",
    "we briefly review the euler equations and discuss the standard approach to discretizing conservation laws .",
    "we describe traditional central differencing methods such as the lax - wendroff scheme in @xmath2 and more modern flux assignment methods like the tvd scheme in @xmath3 . in @xmath4",
    "we review the relaxing tvd method for systems of conservation laws like the euler equations , which has been successfully implemented for simulating cosmological astrophysical fluids by @xcite . in @xmath5 we apply a self - gravitating hydro code to simulating the formation of blue straggler stars through stellar mergers .",
    "a sample 3-d relaxing tvd code is provided in the appendix .",
    "the euler equations which govern hydrodynamics are a system of conservation laws for mass , momentum , and energy . in differential",
    "conservation form , the continuity equation , momentum equation , and energy equation are given as : @xmath6 \\frac{{\\partial}(\\rho v_i)}{{\\partial t}}+\\frac{{\\partial}}{{\\partial x}_j}(\\rho v_iv_j+p\\delta_{ij})=0\\ , \\\\[8pt ] \\frac{{\\partial}e}{{\\partial t}}+\\frac{{\\partial}}{{\\partial x}_j}[(e+p)v_j]=0\\ .\\end{gathered}\\ ] ] we have omitted gravitational and other source terms like heating and cooling .",
    "the physical state of the fluid is specified by its density @xmath7 , velocity field @xmath8 , and total energy density , @xmath9 in practice , the thermal energy @xmath10 is evaluated by subtracting the kinetic energy from the total energy . for an ideal gas , the pressure @xmath11",
    "is related to the thermal energy by the equation of state , @xmath12 where @xmath13 is the ratio of specific heats .",
    "another thermodynamic variable which is of importance is the sound speed @xmath14 which is given by @xmath15 the thermodynamical properties of an ideal gas obey well known equations of state , which we do not fully list here .",
    "the differential euler equations require differentiable solutions and therefore , are ill - defined at jump discontinuities where derivatives are infinite . in the literature , nondifferentiable solutions are called _",
    "weak solutions_. the differential form gives a complete description of the flow in smooth regions , but the integral form is needed to properly describe shock discontinuities . in integral conservation form , the rate of change in mass , momentum , and energy is equal to the net flux of those conserved quantities through the surface enclosing a control volume . for simplicity of notation , we will continue to express conservation laws in differential form , as a shorthand for the integral form .",
    "the standard approach to eulerian computational fluid dynamics is to discretize time into discrete steps and space into finite volumes or cells , where the conserved quantities are stored . in the simplest case ,",
    "the integral euler equations are solved on a cartesian cubical lattice by computing the flux of mass , momentum , and energy across cell boundaries in discrete time steps .",
    "consider the euler equations in vector differential conservation form , @xmath16 where @xmath17 contains the conserved physical quantities and @xmath18 represents the flux terms . in practice , the conserved cell - averaged quantities @xmath19 and fluxes @xmath20 are defined at integer grid cell centres @xmath21 .",
    "the challenge is to use the cell - averaged values to determine the fluxes @xmath22 at cell boundaries .    in the following sections",
    ", we describe flux assignment methods designed to solve conservation laws like the euler equations . for ease of illustration ,",
    "we begin by considering a 1-d scalar conservation law , @xmath23 where @xmath24 and @xmath25 is a constant advection velocity . equation ( [ eqn : advect ] ) is referred to as a linear advection equation and has the analytical solution , @xmath26 the linear advection equation describes the transport of the quantity @xmath27 at a constant velocity @xmath25 .    in integral flux conservation form",
    ", the 1-d scalar conservation law can be written as @xmath28 where @xmath29 and @xmath30 for our control cells .",
    "let @xmath31 denote the flux of @xmath27 through cell boundary @xmath32 at time @xmath33 .",
    "note then that the second integral is simply equal to @xmath34 .",
    "the rate of change in the cell - integrated quantity @xmath35 is equal to the net flux of @xmath27 through the control cell . for a discrete time step ,",
    "the discretized solution for the cell - averaged quantity @xmath36 is given by @xmath37 the physical quantity @xmath27 is conserved since the flux taken out of one cell is added to the neighbouring cell which shares the same boundary .",
    "note that equation ( [ eqn : conservation ] ) has the appearance of being a finite difference scheme for solving the differential form of the 1-d scalar conservation law .",
    "this is why the differential form can be used as a shorthand for the integral form .",
    "central - space finite - difference methods have ease of implementation but at the cost of lower accuracy and stability . for illustrative purposes ,",
    "we start with a simple first - order centered scheme to solve the linear advection equation .",
    "the discretized solution is given by equation ( [ eqn : conservation ] ) where the fluxes at cell boundaries , @xmath38 are obtained by taking an average of cell - centered fluxes @xmath39 .",
    "the discretized first - order centered scheme can be equivalently written as @xmath40 in this form , the discretization has the appearance of using a central difference scheme to approximate spatial derivatives .",
    "hence , centered schemes are often referred to as central difference schemes . in practice",
    "when using centered schemes , the discretization is done on the differential conservation equation rather than the integral equation .",
    "this simple scheme is numerically unstable and we can show this using the _ von neumann _ linear stability analysis . consider writing @xmath41 as a discrete fourier series : @xmath42 where @xmath0 is the number of cells in our periodic box . in plane - wave solution form , we can write this as @xmath43\\ , \\ ] ] where @xmath44 are the fourier series coefficients for the initial conditions @xmath45 . equivalently , the time evolution of the fourier series coefficients in equation ( [ eqn : dfte ] ) can be cast into a plane - wave solution of the form , @xmath46 where the numerical dispersion relation @xmath47 is complex in general .",
    "the imaginary part of @xmath48 represents the growth or decay of the fourier modes while the real part describes the oscillations .",
    "a numerical scheme is linearly stable if @xmath49 .",
    "otherwise , the fourier modes will grow exponentially in time and the solution will blow up .    the exact solution to the linear advection equation can be expressed in the form of equation ( [ eqn : advectsol ] ) or by a plane - wave solution where the dispersion relation is given by @xmath50 .",
    "the waves all travel at the same phase velocity @xmath51 in the exact case .",
    "the centrally discretized linear advection equation ( equation [ eqn : cfde ] ) is exactly solvable .",
    "after @xmath52 times steps , the time evolution of the independent fourier modes is given by @xmath53 where @xmath54 and @xmath55 .",
    "the dispersion relation is given by @xmath56\\ , \\ ] ] for any time step @xmath57 , the imaginary part of @xmath48 will be @xmath58",
    ". the fourier modes will grow exponentially in time and the solution will blow up . hence , the first - order centered scheme is numerically unstable .",
    "the lax - wendroff scheme @xcite is second - order accurate in time and space and the idea behind it is to stabilize the unstable first - order scheme from the previous section . consider a taylor series expansion for @xmath59 : @xmath60 + \\frac{{\\partial u}}{{\\partial t}}{\\delta t}+\\frac{{\\partial}^2u}{{\\partial t}^2}\\frac{{\\delta t}^2}{2}+{\\cal o}({\\delta t}^3)\\ , \\end{gathered}\\ ] ] and replace the time derivatives with spatial derivatives using the conservation law to obtain @xmath60 -\\frac{{\\partial f}}{{\\partial x}}{\\delta t}+\\frac{{\\partial}}{{\\partial x}}\\left(\\frac{{\\partial f}}{{\\partial u}}\\frac{{\\partial f}}{{\\partial u}}\\frac{{\\partial u}}{{\\partial x}}\\right)\\frac{{\\delta t}^2}{2}+{\\cal o}({\\delta t}^3)\\ .",
    "\\label{eqn : taylor}\\end{gathered}\\ ] ] for the linear advection equation , the eigenvalue of the flux jacobian is @xmath61 .",
    "discretization using central differences gives @xmath62 + \\left(\\frac{f_{n+1}^t - f_n^t}{{\\delta x}}-\\frac{f_n^t - f_{n-1}^t}{{\\delta x}}\\right)\\frac{v{\\delta t}^2}{2{\\delta x}}\\ .",
    "\\label{eqn : lwe}\\end{gathered}\\ ] ] in conservation form , the solution is given by equation ( [ eqn : conservation ] ) , where the fluxes at cell boundaries are defined as @xmath63 compare this with the boundary fluxes for the first - order scheme ( equation [ eqn : cfdf ] ) .",
    "the lax - wendroff scheme obtains second - order fluxes , @xmath64 by modifying the first - order fluxes @xmath65 with a second - order correction .",
    "the stability of the lax - wendroff scheme to solve the linear advection equation can also be determined using the von neumann analysis . the discretized lax - wendroff equation",
    "( equation [ eqn : lwe ] ) is exactly solvable and after @xmath52 time steps , the fourier modes evolve according to @xmath66^mc_k^\\circ\\ , \\label{eqn : lwce}\\ ] ] where @xmath54 is called the _ courant _ number and @xmath55 .",
    "the dispersion relation is given by @xmath67 \\\\[8pt ] + \\frac{in}{4\\pi{\\delta t}}\\ln\\,\\left[1 - 4\\lambda^2(1-\\lambda^2)\\sin^4\\left(\\frac{\\phi}{2}\\right)\\right]\\ .",
    "\\label{eqn : lwdr}\\end{gathered}\\ ] ] it is important to note three things .",
    "first , the lax - wendroff scheme is conditionally stable provided that @xmath49 , which is satisfied if @xmath68 this constraint is a particular example of a general stability constraint known as the _ courant - friedrichs - lewyor _ ( cfl ) condition .",
    "the courant number @xmath69 is also referred to as the cfl number .",
    "second , for @xmath70 the dispersion relation is exactly identical to that of the exact solution and the numerical advection is exact .",
    "this is a special case , however , and it does not test the ability of the lax - wendroff scheme to solve general scalar conservation laws . normally , one chooses @xmath71 to satisfy the cfl condition .",
    "lastly , for @xmath71 the dispersion relation @xmath47 for the lax - wendroff solution is different from the exact solution where @xmath50 .",
    "the dispersion relation relative to the exact solution can be parametrized by @xmath72 the second - order truncation of the taylor series ( equation [ eqn : taylor ] ) results in a phase error @xmath73 which is a function of frequency . in the lax - wendroff solution ,",
    "the waves are damped and travel at different speeds .",
    "hence the scheme is both diffusive and dispersive .    in figure ( [ fig : lwdispersion ] ) we plot the phase error @xmath73 and the amplification term @xmath74 for the lax - wendroff scheme with parameters @xmath75 , @xmath76 , and @xmath77 .",
    "a negative value of @xmath73 represents a lagging phase error while a positive value indicates a leading phase error . for the chosen cfl number ,",
    "the high frequency modes have the largest phase errors but they are highly damped .",
    "some of the modes having lagging phase errors are not highly damped .",
    "we will subsequently see how this becomes important .",
    "a rigourous test of the 1-d lax - wendroff scheme and other flux assignment schemes we will discuss is the linear advection of a square wave .",
    "the challenge is to accurately advect this discontinuous function where the edges mimic riemann shock fronts . in figure ( [ fig : lax ] ) we show how the lax - wendroff scheme does at advecting the square wave once ( dashed line ) and ten times ( dotted line ) through a periodic box of 100 grid cells at speed @xmath76 and @xmath77 . note that this scheme produces numerical oscillations . recall that a square wave can be represented by a sum of fourier or sine waves .",
    "these waves will be damped and disperse when advected using the lax - wendroff scheme .",
    "figure ( [ fig : lwdispersion ] ) shows that the modes having lagging phase errors are not damped away .",
    "hence , the lax - wendroff scheme is highly dispersive and the oscillations in figure ( [ fig : lax ] ) are due to dispersion .",
    "we leave it as an exercise for the reader to advect a sine wave using the lax - wendroff scheme .",
    "since there is only one frequency mode in this case , there will be no spurious oscillations due to dispersion , but a phase error will be present . for a comprehensive discussion on the family of lax - wendroff schemes and other centered schemes",
    ", see @xcite and @xcite .",
    "upwind methods take into account the physical nature of the flow when assigning fluxes for the discrete solution . this class of flux assignment schemes , whose origin dates back to the work of @xcite , has been shown to be excellent at capturing shocks and also being highly stable .    we start with a simple first - order upwind scheme to solve the linear advection equation .",
    "consider the case where the advection velocity is positive and flow is to the right .",
    "the flux of the physical quantity @xmath27 through the cell boundary @xmath32 will originate from cell @xmath78 .",
    "the upwind scheme proposes that , to first - order , the fluxes @xmath31 at cell boundaries be taken from the cell - centered fluxes @xmath39 , which is in the upwind direction .",
    "if the advection velocity is negative and flow is to the left , the boundary fluxes @xmath31 are taken from the cell - centered fluxes @xmath79 .",
    "the first - order upwind flux assignment scheme can be summarized as follows : @xmath80 f_{n+1}^t & \\text{if $ v<0 $ . }",
    "\\end{cases}\\ ] ] unlike central difference schemes , upwind schemes are explicitly asymmetric",
    ".    the cfl condition for the first - order upwind scheme can be determined from the von neumann analysis .",
    "we consider the case of a positive advection velocity .",
    "after @xmath52 time steps , the fourier modes evolve according to @xmath81^mc_k^\\circ\\ , \\label{eqn : uwce}\\ ] ] where @xmath54 and @xmath55 .",
    "the dispersion relation is given by @xmath82 \\\\[8pt ] + \\frac{in}{4\\pi{\\delta t}}\\ln\\,\\left[1 - 4\\lambda(1-\\lambda)\\sin^2\\left(\\frac{\\phi}{2}\\right)\\right]\\ .",
    "\\label{eqn : updr}\\end{gathered}\\ ] ] the cfl condition for solving the linear advection equation with this scheme is to have @xmath83 , identical to that for the lax - wendroff scheme .",
    "for @xmath71 the dispersion relation @xmath47 for the first - order upwind scheme is different from the exact solution where @xmath50 .",
    "this scheme is both diffusive and dispersive .",
    "since it is only first - order accurate , the amount of diffusion is large . in figure ( [ fig : uwdispersion ] ) we compare the dispersion relation of the upwind scheme to that of the lax - wendroff scheme .",
    "the fourier modes in the upwind scheme also have phase errors but they will be damped away .",
    "the low frequency modes which contribute to the oscillations in the lax - wendroff solution are more damped in the upwind solution .",
    "hence , one does not expect to see oscillations resulting from phase errors .    in figure ( [ fig : uw ] ) we show how the first - order upwind scheme does at advecting the riemann shock wave .",
    "this scheme is well - behaved and produces no spurious oscillations , but since it is only first - order , it is highly diffusive .",
    "the first - order upwind scheme has the property of having monotonicity preservation . when applied to the linear advection equation",
    ", it does not allow the creation of new extrema in the form of spurious oscillations .",
    "the lax - wendroff scheme does not have the property of having monotonicity preservation .",
    "the flux assignment schemes that we have discussed so far are all linear schemes .",
    "@xcite showed that all linear schemes are either diffusive or dispersive or a combination of both .",
    "the lax - wendroff scheme is highly dispersive while the first - order upwind scheme is highly diffusive .",
    "godunov s theorem also states that linear monotonicity preserving schemes are only first - order accurate . in order to obtain higher order accuracy and prevent spurious oscillations ,",
    "nonlinear schemes are needed to solve conservation laws .",
    "@xcite proposed the _",
    "total variation diminishing _",
    "( tvd ) condition which guarantees that a scheme have monotonicity preservation . applying godunov s theorem , we know that all linear tvd schemes are only first - order accurate . in fact , the only linear tvd schemes are the class of first - order upwind schemes . therefore , higher order accurate tvd schemes must be nonlinear .",
    "the tvd condition is a nonlinear stability condition .",
    "the total variation of a discrete solution , defined as @xmath84 is a measure of the overall amount oscillations in @xmath27 . the direct connection between the total variation and the overall amount of oscillations can be seen in the equivalent definition @xmath85 where each maxima is counted positively twice and each minima counted negatively twice ( see * ? ? ?",
    ". the formation of spurious oscillations will contribute new maxima and minima and the total variation will increase .",
    "a flux assignment scheme is said to be tvd if @xmath86 which signifies that the overall amount of oscillations is bounded . in linear flux - assignment schemes",
    ", the von neumann linear stability condition requires that the fourier modes remain bounded . in nonlinear schemes",
    ", the tvd stability condition requires that the total variation diminishes .",
    "we now describe a nonlinear second - order accurate tvd scheme which builds upon the first - order monotone upwind scheme described in the previous section . the second - order accurate fluxes @xmath31 at cell boundaries",
    "are obtained by taking first - order fluxes @xmath87 from the upwind scheme and modifying it with a second order correction .",
    "first consider the case where the advection velocity is positive .",
    "the first - order upwind flux @xmath87 comes from the averaged flux @xmath88 in cell @xmath78 .",
    "we can define two second - order flux corrections , @xmath89 { \\delta f}_{n+1/2}^{r , t}&=\\frac{f_{n+1}^t - f_n^t}{2}\\ , \\end{aligned}\\ ] ] using three local cell - centered fluxes .",
    "we use cell @xmath78 and the cells immediately left and right of it .",
    "if the advection velocity is negative , the first - order upwind flux comes from the averaged flux @xmath90 in cell @xmath91 . in this case ,",
    "the second - order flux corrections , @xmath92 { \\delta f}_{n+1/2}^{r , t}&=-\\frac{f_{n+2}^t - f_{n+1}^t}{2}\\ .\\end{aligned}\\ ] ] are based on cell @xmath91 and the cells directly adjacent to it .",
    "near extrema where the corrections have opposite signs , we impose no second - order correction and the flux assignment scheme reduces to first - order . a flux limiter @xmath93",
    "is then used to determine the appropriate second - order correction , @xmath94 which still maintains the tvd condition .",
    "the second - order correction is added to the first - order fluxes to get second - order fluxes .",
    "the first - order upwind scheme and second - order tvd scheme will be referred to as _ monotone upwind schemes for conservation laws _ ( muscl ) .",
    "time integration is performed using a second - order runge - kutta scheme .",
    "we first do a half time step , @xmath95 using the first - order upwind scheme to obtain the half - step values @xmath96 .",
    "a full time step is then computed , @xmath97 using the tvd scheme on the half - step fluxes @xmath98 .",
    "the reader is encouraged to show that is second - order accurate .",
    "we briefly discuss three tvd limiters .",
    "the minmod flux limiter chooses the smallest absolute value between the left and right corrections : @xmath99\\min(|a|,|b|)\\ .\\ ] ] the superbee limiter @xcite chooses between the larger correction and two times the smaller correction , whichever is smaller in magnitude : @xmath100 minmod(2a , b ) & \\text{otherwise . }",
    "\\end{cases}\\ ] ] the van leer limiter @xcite takes the harmonic mean of the left and right corrections : @xmath101 the minmod limiter is the most moderate of all second - order tvd limiters . in figure ( [ fig : mm ] ) we see that it does not do much better than first - order upwind for the square wave advection test .",
    "superbee chooses the maximum correction allowed under the tvd constraint .",
    "it is especially suited for piece - wise linear conditions and is the least diffusive for this particular test , as can be seen in figure ( [ fig : sb ] ) .",
    "note that no additional diffusion can be seen by advecting the square wave more than once through the box .",
    "it can be shown that the minmod and superbee limiters are extreme cases which bound all other second - order tvd limiters .",
    "the van leer limiter differs from the previous two in that it is analytic .",
    "this symmetrical approach falls somewhere inbetween the other two limiters in terms of moderation and diffusion , as can be seen in figure ( [ fig : vl ] ) .",
    "it can be shown that the cfl condition for the second - order tvd scheme is to have @xmath71 . for a comprehensive discussion on tvd limiters ,",
    "see @xcite and @xcite .",
    "we now describe a simple and robust method to solve the euler equations using the monotone upwind scheme for conservation laws ( muscl ) from the previous section .",
    "the relaxing tvd method @xcite provides high resolution capturing of shocks using computationally inexpensive algorithms which are straightforward to implement and to parallelize .",
    "it has been successfully implemented for simulating cosmological astrophysical fluids by @xcite .",
    "the muscl scheme is straightforward to apply to conservation laws like the advection equation since the velocity alone can be used as a marker of the direction of flow .",
    "however , applying the muscl scheme to solve the euler equations is made difficult by the fact that the momentum and energy fluxes depend on the pressure . in order to determine the direction upwind of the flow",
    ", it becomes necessary to calculate the flux jacobian eigenvectors using riemann solvers .",
    "this step requires computationally expensive algorithms .",
    "the relaxing tvd method offers an attractive alternative .",
    "we first present a motivation for the relaxing scheme by again considering the 1-d scalar conservation law .",
    "the muscl scheme for solving the linear advection equation is explicitly asymmetric in that it depends on the sign of the advection velocity .",
    "we now describe a symmetrical approach which applies to a general advection velocity .",
    "the flow can be considered as a sum of a right - moving wave @xmath102 and a left - moving wave @xmath103 . for a positive advection velocity ,",
    "the amplitude of the left - moving wave is zero and for a negative advection velocity , the amplitude of the right - moving wave is zero . in compact notation , the waves can be defined as : @xmath104 u^l&=\\left(\\frac{1-v / c}{2}\\right)u\\ , \\end{aligned}\\ ] ] where @xmath105 .",
    "the two waves are traveling in opposite directions with advection speed @xmath106 and can be described by the advection equations : @xmath107 @xmath108 the muscl scheme is straightforward to apply to solve equations ( [ eqn : rmw ] ) and ( [ eqn : lmw ] ) since the upwind direction is left for the right - moving wave and right for the left - moving wave .",
    "the 1-d relaxing advection equation then becomes @xmath109 where @xmath110 and @xmath111 .",
    "for the discretized solution given by equation ( [ eqn : conservation ] ) , the boundary fluxes @xmath31 are now a sum of the fluxes @xmath112 and @xmath113 from the right - moving and left - moving waves , respectively .",
    "note that the relaxing advection equation will correctly reduce to the linear advection equation for any general advection velocity .    using this symmetrical approach ,",
    "a general algorithm can be written to solve the linear advection equation for an arbitrary advection velocity .",
    "this scheme is indeed inefficient for solving the linear advection equation since one wave will have zero amplitude .",
    "however , the euler equations can have both right - moving and left - moving waves with non - zero amplitudes .",
    "we now discuss the 1-d relaxing tvd scheme and later generalize it to higher spatial dimensions .",
    "consider a 1-d system of conservation laws , @xmath114 where for the euler equations , we have @xmath115 and @xmath18 the corresponding flux terms .",
    "we now replace the vector conservation law with the relaxation system @xmath116 @xmath117 where @xmath118 is a free positive function called the freezing speed .",
    "the relaxation system contains two coupled vector linear advection equations . in practice , we set @xmath119 and use it as an auxiliary vector to calculate fluxes . equation ( [ eqn : relax1 ] ) reduces to our 1-d vector conservation law and equation ( [ eqn : relax2 ] ) is a vector conservation law for @xmath120 .    in order to solve the relaxed system",
    ", we decouple the equations through a change of variables : @xmath121 { \\boldsymbol{u}}^l&=\\frac{{\\boldsymbol{u}}-{\\boldsymbol{w}}}{2}\\ , \\end{aligned}\\ ] ] which then gives us @xmath122 @xmath123 equations ( [ eqn : w1 ] ) and ( [ eqn : w2 ] ) are vector linear advection equations , which can be interpreted as right - moving and left - moving flows with advection speed @xmath106 .",
    "note the similarity with their scalar counterparts , equations ( [ eqn : rmw ] ) and ( [ eqn : lmw ] ) .",
    "the 1-d vector relaxing conservation law for @xmath124 becomes @xmath125 where @xmath126 and @xmath127 .",
    "the vector relaxing equation can now be solved by applying the muscl scheme to equations ( [ eqn : w1 ] ) and ( [ eqn : w2 ] ) .",
    "again , note the similarity between the vector relaxing equation and its scalar counterpart , equation ( [ eqn : rlae ] ) .",
    "the relaxed scheme is tvd under the constraint that the freezing speed @xmath106 be greater than the characteristic speed given by the largest eigenvalue of the flux jacobian @xmath128 . for the euler equations ,",
    "this is satisfied for @xmath129 @xcite considered the freezing speed to be a positive constant in their relaxing scheme while we generalize it to be a positive function .",
    "time integration is again performed using a second - order runge - kutta scheme and the time step is determined by satisfying the cfl condition , @xmath130 note that a new freezing speed is computed for each partial step in the runge - kutta scheme .",
    "the cfl number @xmath131 should be chosen such that @xmath132 will be larger than @xmath133 and @xmath134 .",
    "we now summarize the steps needed to numerically solve the 1-d euler equations . at the beginning of each partial step in the runge - kutta time integration scheme , we need to calculate the cell - averaged variables defined at grid cell centres .",
    "first for the half time step , we calculate the fluxes @xmath135 and the freezing speed @xmath136 .",
    "we then set the auxiliary vector @xmath137 and construct the right - moving waves @xmath138 and left - moving waves @xmath139 .",
    "the half time step is given by @xmath140 where @xmath141 the first - order upwind scheme is used to compute fluxes at cell boundaries for the right - moving and left - moving waves .",
    "for the full time step , we construct the right - moving waves @xmath142 and left - moving waves @xmath143 , using the half - step values of the appropriate variables . the full time step , @xmath144 is computed using the second - order tvd scheme .",
    "this completes the updating of @xmath145 to @xmath146 .",
    "we have found that a minor modification to the implementation described above gives more accurate results .",
    "consider writing the flux of the right - moving and left - moving waves as : @xmath147 { \\boldsymbol{f}}^l = c{\\boldsymbol{g}}^l\\ , \\end{aligned}\\ ] ] where @xmath148 is the flux of @xmath149 and @xmath150 is the flux of @xmath151 .",
    "the linear advection equations for @xmath152 and @xmath153 are similar to equations ( [ eqn : w1 ] ) and ( [ eqn : w2 ] ) , but where we replace @xmath154 with @xmath152 and @xmath155 with @xmath153 . for each partial step in the runge - kutta scheme , the net fluxes at cell boundaries",
    "are then taken to be @xmath156 where we use @xmath157 . in practice , this modified implementation has been found to resolve shocks with better accuracy in certain cases . note that the two different implementations of the relaxing tvd scheme are identical when a constant freezing speed is used .",
    "the 1-d relaxing tvd scheme can be generalized to higher dimensions using the dimensional splitting technique by @xcite . in three dimensions ,",
    "the euler equations can be dimensionally split into three separate 1-d equations which are solved sequentially .",
    "let the operator @xmath158 represent the updating of @xmath159 to @xmath160 by including the flux in the @xmath161 direction .",
    "we first complete a forward sweep , @xmath162 and then perform a reverse sweep @xmath163 using the same time step @xmath164 to obtain second - order accuracy .",
    "we will refer to the combination of the forward and reverse sweeps as a double sweep .",
    "a more symmetrical sweeping pattern can be used by permutating the sweeping order when completing the next double time step .",
    "the dimensional splitting or operator splitting technique can be summarized as follows : @xmath165 u^{t_3}&=u^{t_2 + 2{\\delta t}_2}=l_zl_xl_yl_yl_xl_zu^{t_2}\\ , \\\\[8pt ] u^{t_4}&=u^{t_3 + 2{\\delta t}_3}=l_yl_zl_xl_xl_zl_yu^{t_3}\\ , \\end{aligned}\\ ] ] where @xmath166 , @xmath167 , and @xmath168 are newly determined time steps after completing each double sweep .",
    "the cfl condition for the 3-d relaxing tvd scheme is similarly given by equation ( [ eqn : relaxcfl ] ) , but with @xmath169\\ .\\ ] ] where @xmath170 .",
    "note that since @xmath171 is on average a factor of @xmath172 smaller than @xmath173 , a dimensionally split scheme can use a longer time step compared to an un - split scheme .",
    "the dimensional splitting technique also has other advantages .",
    "the decomposition into a 1-d problem allows one to write short 1-d algorithms , which are easy to optimize to be cache efficient .",
    "a 3-d hydro code is straightforward to implement in parallel .",
    "when sweeping in the x direction , for example , one can break up the data into 1-d columns and operate on the independent columns in parallel .",
    "a sample 3-d relaxing tvd code , implemented in parallel using openmp directives , is provided in the appendix .",
    "a rigourous and challenging test for any 3-d eulerian or lagrangian hydrodynamic code is the sedov - taylor blast wave test .",
    "we set up the simulation box with a homogeneous medium of density @xmath174 and negligible pressure and introduce a point - like supply of thermal energy @xmath175 in the centre of the box at time @xmath176 .",
    "the challenge is to accurately capture the strong spherical shock wave which sweeps along material as it propagates out into the ambient medium .",
    "the sedov - taylor test is used to model nuclear - type explosions . in astrophysics , it is often used as a basic setup to model supernova explosions and the evolution of supernova remnants ( see * ? ? ?",
    "the analytical sedov solution uses the self - similar nature of the blast wave expansion ( see * ? ? ?",
    "consider a frame fixed relative to the centre of the explosion .",
    "the spherical shock front propagates outward and the distance from the origin is given by @xmath177 where @xmath178 for an ideal gas with @xmath179 .",
    "the velocity of the shock @xmath180 is given by @xmath181 since the ambient medium has negligible pressure , the shocks will be very strong .",
    "the density @xmath182 , velocity @xmath183 , and pressure @xmath184 directly behind the shock front are : @xmath185 v_2&=\\left(\\frac{2}{\\gamma+1}\\right)v_{sh}\\ , \\\\[8pt ] \\ p_2&=\\left(\\frac{2}{\\gamma+1}\\right)\\rho_1v_{sh}^2\\ .\\end{aligned}\\ ] ] the immediate post - shock gas density is constant in time , while the shocked gas velocity @xmath183 and pressure @xmath184 decrease as @xmath186 and @xmath187 , respectively .",
    "the full analytical sedov - taylor solutions can be found in @xcite .",
    "the 3-d relaxing tvd code based on the van leer flux limiter is applied to capturing the sedov - taylor blast wave .",
    "we set up a box with @xmath188 cells and constant initial density @xmath189 . at time @xmath176",
    ", we inject a supply of thermal energy @xmath190 into one cell at the centre of the box .",
    "the simulation is stopped at time @xmath191 , in which the shock front has propagated out to a distance of @xmath192 cells from the centre . in figure ( [ fig : st1 ] ) and ( [ fig : st2 ] ) we plot the radial distributions of density , momentum , and pressure , normalized to @xmath182 , @xmath193 , and @xmath184 respectively .",
    "the data points are taken from a random subset of cells and the solid lines are the analytical sedov - taylor solutions . despite solving a spherically symmetric problem on an explicitly non - rotationally invariant cartesian grid ,",
    "the anisotropic scatter in the results is small .",
    "the distance of the shock front from the centre of the explosion as a function of time is indeed given by equation ( [ eqn : stre ] ) , demonstrating that the 3-d relaxing tvd code ensures the correct shock propagation .",
    "the resolution of the shock front is roughly two grid cells .",
    "the numerical shock jump values of @xmath182 , @xmath183 , and @xmath184 are resolution dependent and come close to the theoretical values for our test with @xmath188 cells .",
    "we leave it as an exercise for the reader to test the code using the minmod and superbee flux limiters .",
    "for astrophysical applications , both hydrodynamical and gravitational forces are included .",
    "the gravitational forces arise from the self - gravity of the fluid and can also come from an external field .",
    "the euler equations with the gravitational source terms included are given as : @xmath6",
    "\\frac{{\\partial}(\\rho v_i)}{{\\partial t}}+\\frac{{\\partial}}{{\\partial x}_j}(\\rho v_iv_j+p\\delta_{ij})=-\\rho\\frac{{\\partial}\\phi}{{\\partial x}_i}\\ , \\\\[8pt ] \\frac{{\\partial}e}{{\\partial t}}+\\frac{{\\partial}}{{\\partial x}_j}[(e+p)v_j]=-\\rho v_i\\frac{{\\partial}\\phi}{{\\partial x}_i}\\ .\\end{gathered}\\ ] ] where @xmath93 is the gravitational potential .",
    "poisson s equation , @xmath194 relates the gravitational potential to the density field .",
    "the general solution can be written as @xmath195 where the kernel is given by @xmath196 in the discrete case , the integral in equation ( [ eqn : poisson ] ) becomes a sum and poisson s equation can be solved using fast fourier transforms ( fft ) to do the convolution .",
    "the forces are then calculated by finite differencing the potential ( see * ? ? ?",
    "the addition of gravatitational source terms in the euler equations is easily handled using the operator splitting technique described in @xmath197[sec : mdscl ] .",
    "consider the double sweep : @xmath198 where the operator @xmath158 represents the updating of @xmath27 by including the flux in the @xmath161 direction and the operator @xmath199 represents the gravitational acceleration of the fluid . during the gravitational step ,",
    "the flux terms in the euler equations are ignored .",
    "the density distribution does not change and only the fluid momenta and total energy density are updated .",
    "the stellar density in the cores of globular and open clusters is high enough for stellar collisions to take place with significant frequency @xcite .",
    "current observations and simulations suggest that the merger of two main sequence stars produces a blue straggler @xcite .",
    "the blue stragglers are out - lying main sequence stars which lie beyond the main sequence turnoff in the colour - magnitude diagram ( cmd ) of a star cluster .",
    "the blue stragglers are more massive , brighter , and bluer than the turnoff stars .",
    "since more massive stars evolve faster than lower mass stars and are not expected to lie beyond the turnoff , this suggests that blue stragglers must have formed more recently .    in principle",
    "the merger of two main sequence stars can produce a young remnant star provided that significant mixing occurs in the process .",
    "the mixing produces a higher hydrogen fraction in the core of the remnant than that of the parent stars which have already burnt most of the hydrogen to helium in their cores .",
    "@xcite used low resolution sph simulations with @xmath200 particles to simulate the merging of @xmath201 polytropes and found that they fully mixed .",
    "however , medium resolution sph simulations with @xmath202 particles of @xmath201 or @xmath203 polytropes showed only weak mixing @xcite .",
    "it is worth noting that @xmath201 polytropes are more representative of low mass main sequence stars with large convective envelopes while @xmath203 polytropes resemble main sequence stars near the turnoff which have little mass in their convective envelopes .",
    "high resolution sph simulations involving @xmath204 particles have now been applied to simulating stellar collisions @xcite .",
    "the merging stars process is mostly subsonic and strong shocks are not expected . in the absence of shocks , sph particles will follow flow lines of constant entropy due to the lagrangian nature of the method . as a result , the particles may experience sedimentation .",
    "in addition , the mixing can also depend on the adopted smoothing length and the form of artificial viscosity .",
    "for a sph fluid , the reynolds number is of order @xmath205 , where @xmath206 is the total number of particles and @xmath207 is the number of particles over which the smoothing is done . for @xmath208 and @xmath209 ,",
    "the reynolds number is @xmath210 .",
    "however , a fluid with a low reynolds number will tend to experience laminar flow .",
    "hence , sph may under mix .",
    "it is a worthwhile exercise to model the merging process using eulerian hydrodynamical simulations .",
    "the differences between eulerian and lagrangian approaches may lead to very different results on mixing . as of present",
    ", no such work has been reported in the literature .",
    "we consider the off - axis collision of two main sequence stars with @xmath211 and @xmath212 , which are modeled using @xmath203 polytropes .",
    "a polytrope with polytropic index @xmath78 has equilibrium density and pressure profiles which are related by @xmath213 the density profile is determined by solving the lane - emden equation ( see * ? ? ?",
    "we adopt an ideal gas equation of state with adiabatic index @xmath179 .",
    "note that for an @xmath203 polytrope , 90% of the total mass is contained within @xmath214 .",
    "we define the dynamical time to be , @xmath215 where @xmath216 is the average density . for the chosen parent stars ,",
    "the dynamical time is approximately one physical hour .",
    "the collision is simulated in a box with @xmath217 cells and the orbital plane coincides with the @xmath218 plane .",
    "initially , each parent star has a radius of 96 grid cells .",
    "the stars are set up on zero - energy parabolic orbits with a pericentre separation equal to @xmath219 .",
    "the initial trajectories are calculated assuming point masses . in an eulerian simulation",
    ", the vacuum can not have zero density .",
    "we set the minimum density of the cells to be @xmath220 of the central density of the parent stars .",
    "the hydrodynamics is done in a non - periodic box with vacuum boundary conditions .",
    "a non - trivial test of a self - gravitating eulerian hydro code is the advection of an object in hydrostatic equilibrium .",
    "the challenge is to maintain the equilibrium profile over a large number of time steps .",
    "one of the parent stars is placed in a periodic box with @xmath188 cells and given some initial momentum .",
    "we make the test rigorous by having the polytrope move in all three directions . in figure",
    "[ fig : poly ] we compare the mass and entropy profiles of the initial and advected polytrope .",
    "the entropic variable @xmath221 is used in place of the specific entropy .",
    "the parameter @xmath222 is defined to be the minimum entropy of the parent polytrope . after 1000 timesteps",
    "in which the polytrope has moved 256 cells in each direction , the advected polytrope has still retained its equilibrium profile .",
    "shock heating can occur in the outer envelope as the polytrope moves through the false vacuum .",
    "however , by setting the density of the false vacuum to be @xmath220 of the central density of the polytrope , we can minimize the spurious shock heating .    in figure [",
    "fig : merge ] we show four snapshots of the merging process taken at time @xmath176 , 2 , 4 , and @xmath223 .",
    "the 2-d density maps are created by averaging over 4 planes taken about the orbital mid - plane .",
    "the density contours are spaced logarithmically with 2 per decade and covering 3 decades down from the maximum .",
    "the parent stars are initially separated by @xmath224 and placed on zero - energy orbits with a pericentre separation of @xmath225 . during the collision process ,",
    "the outer envelopes of the parent stars are shock heated and material gets ejected . in less than @xmath226 , the merger remnant establishes hydrostatic equilibrium .",
    "the merger remnant is a rotating oblate with mass approximately 90% of the combined mass of the parent stars .",
    "a large fraction of the mass loss is due to the vacuum boundary conditions .",
    "ejected material do not have the opportunity to fall back onto the merger remnant .",
    "however , the additional mass loss in the envelope does not present a problem since we are interested in the question of mixing in the interior of the star .    in figure",
    "[ fig : profiles ] we plot the thermodynamic profiles of the merger remnant and the parent stars .",
    "the central density and pressure in the core of the merger remnant is lower than the corresponding values in the parent stars by approximately half .",
    "the entropy floor has risen by a factor of 1.6 .",
    "shock heating is expected to be minimal in the core so a change in entropy suggests that some mixing has taken place .",
    "however , it is difficult to quantify the amount of mixing from examining the thermodynamic profiles alone .      to help address the question of mixing",
    ", we are implementing a particle - mesh ( pm ) scheme where test particles can be used to track passively advected quantities such as chemical composition .",
    "initially , each parent star is assigned a large number of particles with known chemical composition .",
    "the test particles are passively advected along velocity field lines . for each time step , the velocity of each particle is interpolated from the grid using a `` cloud - in - cell '' ( cic ) scheme @xcite and the equations of motions are solved using second - order runge - kutta integration .",
    "the cic interpolation scheme is also used to determine the local density , pressure , and entropy associated with each particle . with this setup",
    ", we have the benefit of being able to track thermodynamic quantities like in an sph scheme but avoid the under mixing problem since the fluid equations are solved using the eulerian scheme .    future work ( trac , sills , & pen 2003 ) will have higher resolution simulations .",
    "collisions will be simulated in a box with @xmath227 cells .",
    "each parent star will have a radius of 192 grid cells and be assigned @xmath188 test particles .",
    "we will also be doing a detailed comparison between eulerian and sph simulations of stellar mergers .",
    "the self - gravitating hydro code used for the simulations is very memory friendly . for the @xmath228 grid , 10 gb",
    "is required to store the hydro variables , 2 gb for the potential , and less than 1 gb for the test particles . for every double timestep",
    ", approximately 1000 floating point operations per grid cell is needed to carry out the tvd hydro calculations .",
    "the potential is computed once for every double step and this requires two ffts .",
    "since eulerian codes are very memory friendly , have low floating point counts , are easily parallelized , and scale very well on shared - memory , multiple - processor machines , they can be used to run very high resolution simulations .",
    "we have presented several numerical schemes for solving the linear advection equation and given the cfl stability conditions for each scheme . we have implemented the relaxing tvd scheme to solve the euler system of conservation laws .",
    "the second - order accurate tvd scheme provides high resolution capturing of shocks , as can be seen in the riemann shock test and the sedov - taylor blast wave test .",
    "the 1-d relaxing tvd scheme can be easily generalized to higher dimensions using the dimensional splitting technique .",
    "a dimensionally split scheme can use longer time steps and is straightforward to implement in parallel .",
    "we have presented a sample astrophysical application .",
    "a 3-d self - gravitating eulerian hydro code is used to simulate the formation of blue straggler stars through stellar mergers .",
    "we hope to have convinced the reader that eulerian computational fluid dynamics is a powerful approach to simulating complex fluid flows because it is simple , fast , and accurate .",
    "we thank joachim stadel and norm murray for comments and suggestions on the writing and editing of this paper .",
    "we also thank alison sills , phil arras , and chris matzner for discussions on stellar mergers .",
    "benz , w. & hills , j. g. , 1987 , , 323 , 614 chandrasekhar , s. , 1957 , an introduction to the study of stellar structure ( new york : dover publications ) courant , r. , isaacson , e. , & reeves , m. , 1952 , comm .",
    "pure and applied math .",
    ", 5 , 243 gingold , r. a. & monaghan , j. j. , 1977 , , 181 , 375 godunov , s. k. , 1959 , math .",
    "sbornik , 47 , 271 harten , a. , 1983 , j. comp .",
    "phys . , 49 , 357 hill , j. g. & day , c. a. , 1976 , , 17 , 87 hirsch , c. , 1990 , numerical computation of internal and external flows , vol .",
    "2 : computational methods for inviscid and viscous flows ( new york : john wiley ) hockney , r. w. & eastwood , j. w. , 1988 , computer simulation using particles ( philadelphia : iop publishing ) jin , s. & xin , z. , 1995 , comm . pure and applied math .",
    ", 48 , 235 landau , l. d. & lifshitz , e. m. , 1987 , fluid mechanics ( 2nd ed . ; oxford : pergamon press ) laney , c. b. , 1998 , computational gas dyanamics ( cambridge : cambridge university press ) lax , p. d. & wendroff , b. , 1960 , comm . pure and applied math . , 10 , 537 lombardi , j. c. , jr . , rasio , f. a. , & shapiro , s. l , 1996 , , 468 , 797 lucy , l. b. , 1977 , , 82 , 1013 pen , u. , 1998 , , 115 , 19 roe , p. l.,1985 , in large - scale computations in fluid mechanics , lectures in applied mathematics , eds . b. e. engquist , s. osher , & r. c. j. somerville ( providence , ri : american mathematical society ) sandquist , e. l. , bolte , m. , & hernquist , l. , 1997 , , 477 , 335 shu , f. h. , 1992 , gas dynamics ( mill valley : university science books ) sills , a. , adams , t. , davies , m. b. , & bate , m. r. , 2002 , , 332 , 49 sills , a. , lombardi , j. c. , jr . , bailyn , c. d. , demarque , p. d. , rasio , f. a. , & shapiro , s. l. , 1997 , , 487 , 290 strang , g. , 1968 , siam j. num .",
    ", 5 , 506 van leer , b. , 1974 , j. comp .",
    "we provide a sample 3-d relaxing tvd code written in fortran 90 .",
    "the code is implemented using openmp directives to run in parallel on shared memory machines .",
    "the code is fast and memory friendly .",
    "the array u(a , i , j , k ) stores the five conserved hydro quantities @xmath229 for each cell ( i , j , k ) in the cartesian cubical lattice with side length nc . for each sweep",
    ", we first call the subroutine timestep to determine the appropriate time step dt which satisfies the cfl condition . the updating of u by including the flux in the x direction is performed by the sweepx subroutine .",
    "the data array u is divided into 1-d array sections u1d(a , i ) which are operated on by the relaxing subroutine .",
    "the independent columns are distributed amongst multiple processors on a shared memory machine by the openmp directives .",
    "the relaxing tvd subroutine in this sample code is written for ease of readability and therefore , is not fully optimized . at the beginning of each partial step in the runge - kutta time integration scheme ,",
    "the cell - averaged variables defined at grid cell centres are calculated by the averageflux subroutine .",
    "the fluxes at cell boundaries for the right - moving and left - moving waves are stored in fr and fl , respectively .",
    "we have implemented the minmod , superbee , and van leer flux limiters and the user of the code can easily switch between them .",
    "we have provided some initial conditions for the sedov - taylor blast wave test .",
    "the reader is encouraged to test the code and compare how the various flux limiters do at resolving strong shocks .",
    "this sample code does not implement the modified relaxing tvd scheme described at the end of @xmath230 , which has been found work very well with the van leer flux limiter but unstable with superbee for the 3-d sedov taylor test .",
    "we have found that the superbee limiter is often unstable for 3-d fluid simulations .",
    "please contact the authors regarding any questions on the implementation of the relaxing tvd algorithm .",
    "+ ` program  main ` + `  implicit  none ` + `  integer ,  parameter  : :  nc=64,hc = nc/2 ` + `  real ,  parameter  : :  gamma=5./3,cfl=0.9 ` + `  ` + `  real ,  dimension(5,nc , nc , nc )  : :  u ` +   + `  integer  nsw , stopsim ` + `  real  t , tf , dt , e0,rmax ` +   + `  t=0 ` + `  dt=0 ` + `  nsw=0 ` + `  stopsim=0 ` +   + `  e0=1e5 ` + `  rmax=3*hc/4 ` + `  tf = sqrt((rmax/1.15)**5/e0 ) ` +   + `  call  sedovtaylor ` + `  do ` + `  call  timestep ` + `  call  sweepx ` + `  call  sweepy ` + `  call  sweepz ` + `  call  sweepz ` + `  call  sweepy ` + `  call  sweepx ` + `  if  ( stopsim  .eq .",
    "1 )  exit ` + `  call  timestep ` + `  call  sweepz ` + `  call  sweepx ` + `  call  sweepy ` + `  call  sweepy ` + `  call  sweepx ` + `  call  sweepz ` + `  if  ( stopsim  .eq .",
    "1 )  exit ` + `  call  timestep ` + `  call  sweepy ` + `  call  sweepz ` + `  call  sweepx ` + `  call  sweepx ` + `  call  sweepz ` + `  call  sweepy ` + `  if  ( stopsim  .eq .",
    "1 )  exit ` + `  enddo ` + `  call  outputresults ` +   +   + ` contains ` +   +   + `  subroutine  sedovtaylor ` + `  implicit  none ` + `  integer  i , j , k ` +   + `  do  k=1,nc ` + `  do  j=1,nc ` + `  do  i=1,nc ` + `  u(1,i , j , k)=1 ` + `  u(2:4,i , j , k)=0 ` + `  u(5,i , j , k)=1e-3 ` + `  enddo ` + `  enddo ` + `  enddo ` + `  u(5,hc , hc , hc)=e0 ` + `  return ` + `  end  subroutine  sedovtaylor ` +   +   + `  subroutine  outputresults ` + `  implicit  none ` + `  integer  i , j , k ` + `  real  r , x , y , z ` +   + `  open(1,file=sedovtaylor.dat,recl=200 ) ` + `  do  k=1,nc ` + `  z = k - hc",
    "` + `  do  j=1,nc ` + `  y = j - hc ` + `  do  i=1,nc ` + `  x = i - hc ` + `  r = sqrt(x**2+y**2+z**2 ) ` + `  write(1 , * )  r , u(:,i , j , k ) ` + `  enddo ` + `  enddo ` + `  enddo ` + `  close(1 ) ` + `  return ` + `  end  subroutine  outputresults ` +   +   + `  subroutine  timestep ` + `  implicit  none ` + `  integer  i , j , k ` + `  real  p , cs , cmax ` + `  real  v(3 ) ` +   + `  cmax=1e-5 ` + `  ! ` @xmath231`omp  end  parallel  do ` + `  ` + `  dt = cfl / cmax ` + `  if  ( t+2*dt  .gt .",
    "tf )  then ` + `  dt=(tf - t)/2 ` + `  stopsim=1 ` + `  endif ` + `  t = t+2*dt ` + `  nsw = nsw+1 ` + `  write(*,````(a7,i3,a8,f7.5,a6,f8.5 ) ` '' ` )  nsw  =  ,nsw,  dt  =  ,dt,  t  =  ,t ` + `  return ` + `  end  subroutine  timestep ` +   +   + `  subroutine  sweepx ` + `  implicit  none ` + `  integer  j , k ` + `  real  u1d(5,nc ) ` +   + `  ! ` @xmath232`omp  end  parallel  do ` + `  return ` + `  end  subroutine  sweepx ` +   +   + `  subroutine  sweepy ` + `  implicit  none ` + `  integer  i , k ` + `  real  u1d(5,nc ) ` + `  ` + `  ! ` @xmath233`omp  end  parallel  do ` + `  return ` + `  end  subroutine  sweepy ` +   +   + `  subroutine  sweepz ` + `  implicit  none ` + `  integer  i , j ` + `  real  u1d(5,nc ) ` + `  ` + `  ! `",
    "end  parallel  do ` + `  return ` + `  end  subroutine  sweepz ` +   +   + `  subroutine  relaxing(u ) ` + `  implicit  none ` + `  real ,  dimension(nc )  : :  c ` + `  real ,  dimension(5,nc )  : :  u , u1,w , fu , fr , fl , dfl , dfr ` +   + `  ! !  do  half  step  using  first - order  upwind  scheme ` + `  call  averageflux(u , w , c ) ` + `  fr=(u*spread(c,1,5)+w)/2 ` + `  fl = cshift(u*spread(c,1,5)-w,1,2)/2 ` + `  fu=(fr - fl ) ` + `  u1=u-(fu - cshift(fu,-1,2))*dt/2 ` +   + `  ! !",
    "do  full  step  using  second - order  tvd  scheme ` + `  call  averageflux(u1,w , c ) ` +   + `  ! !",
    "right - moving  waves ` + `  fr=(u1*spread(c,1,5)+w)/2 ` + `  dfl=(fr - cshift(fr,-1,2))/2 ` + `  dfr = cshift(dfl,1,2 ) ` + `  call  vanleer(fr , dfl , dfr ) ` + `  ! call  minmod(fr , dfl , dfr ) ` + `  !",
    "call  superbee(fr , dfl , dfr ) ` +   + `  ! !  left - moving  waves ` + `  fl = cshift(u1*spread(c,1,5)-w,1,2)/2 ` + `  dfl=(cshift(fl,-1,2)-fl)/2 ` + `  dfr = cshift(dfl,1,2 ) ` + `  call  vanleer(fl , dfl , dfr ) ` + `  ! call  minmod(fl , dfl , dfr ) ` + `  ! call  superbee(fl , dfl , dfr ) ` +   + `  fu=(fr - fl ) ` + `  u = u-(fu - cshift(fu,-1,2))*dt ` + `  return ` + `  end  subroutine  relaxing ` +   +   + `  subroutine  averageflux(u , w , c ) ` + `  implicit  none ` + `  integer  i ` + `  real  p , v ` + `  real  u(5,nc),w(5,nc),c(nc ) ` +   + `  ! !",
    "calculate  cell - centered  fluxes  and  freezing  speed ` + `  do  i=1,nc ` + `  v = u(2,i)/u(1,i ) ` + `  p = max((gamma-1)*(u(5,i)-sum(u(2:4,i)**2)/u(1,i)/2),0 . ) ` + `  c(i)=abs(v)+max(sqrt(gamma*p / u(1,i)),1e-5 ) ` + `  w(1,i)=u(1,i)*v ` + `  w(2,i)=(u(2,i)*v+p ) ` + `  w(3,i)=u(3,i)*v ` + `  w(4,i)=u(4,i)*v ` + `  w(5,i)=(u(5,i)+p)*v ` + `  enddo ` + `  return ` + `  end  subroutine  averageflux ` +   +   + `  subroutine  vanleer(f , a , b ) ` + `  implicit  none ` + `  real ,  dimension(5,nc )  : :  f , a , b , c ` +   + `  c = a*b ` + `  where  ( c  .gt .",
    "0 ) ` + `  f = f+2*c/(a+b ) ` + `  endwhere ` + `  return ` + `  end  subroutine  vanleer ` +   +   + `  subroutine  minmod(f , a , b ) ` + `  implicit  none ` + `  real ,  dimension(nc )  : :  f , a , b ` +   + `  f = f+(sign(1.,a)+sign(1.,b))*min(abs(a),abs(b))/2 . ` + `  return ` + `  end  subroutine  minmod ` +   +   + `  subroutine  superbee(f , a , b ) ` + `  implicit  none ` + `  real ,  dimension(5,nc )  : :  f , a , b ` +   + `  where  ( abs(a )  .gt .",
    "abs(b ) ) ` + `  f = f+(sign(1.,a)+sign(1.,b))*min(abs(a),abs(2*b))/2 . `",
    "+ `  elsewhere ` + `  f = f+(sign(1.,a)+sign(1.,b))*min(abs(2*a),abs(b))/2 .",
    "` + `  endwhere ` + `  return ` + `  end  subroutine  superbee ` +   +   + ` end  program  main ` +"
  ],
  "abstract_text": [
    "<S> we present a pedagogical review of some of the methods employed in eulerian computational fluid dynamics ( cfd ) . </S>",
    "<S> fluid mechanics is governed by the euler equations , which are conservation laws for mass , momentum , and energy . </S>",
    "<S> the standard approach to eulerian cfd is to divide space into finite volumes or cells and store the cell - averaged values of conserved hydro quantities . </S>",
    "<S> the integral euler equations are then solved by computing the flux of the mass , momentum , and energy across cell boundaries . </S>",
    "<S> we review both first - order and second - order flux assignment schemes . </S>",
    "<S> all linear schemes are either dispersive or diffusive . </S>",
    "<S> the nonlinear , second - order accurate total variation diminishing ( tvd ) approach provides high resolution capturing of shocks and prevents unphysical oscillations . </S>",
    "<S> we review the relaxing tvd scheme , a simple and robust method to solve systems of conservation laws like the euler equations .    </S>",
    "<S> a 3-d relaxing tvd code is applied to the sedov - taylor blast wave test . </S>",
    "<S> the propagation of the blast wave is accurately captured and the shock front is sharply resolved . </S>",
    "<S> we apply a 3-d self - gravitating hydro code to simulating the formation of blue straggler stars through stellar mergers and present some numerical results . </S>",
    "<S> a sample 3-d relaxing tvd code is provided in the appendix . </S>"
  ]
}
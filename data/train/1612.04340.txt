{
  "article_text": [
    "the reinforcement learning ( rl ) framework @xcite @xcite has been used in control tasks for some time .",
    "the mixture of rl with dl was noted to be one of the most promising approaches to achieve human - level control in @xcite . in @xcite and @xcite , professional or even superhuman performance",
    "was achieved on atari games using the deep q networks ( dqn ) model . in dqn ,",
    "rl is responsible for the planning part of the model , while dl is responsible for the representation learning part .",
    "more recently , rnns have been integrated into the model to account for partially observable scenarios @xcite .",
    "driving task is a critical task that needs high level of skills , attention , and experience from the driver .",
    "this means that reaching autonomous driving is an extreme challenge especially for the machine intelligence .",
    "autonomous driving task can be categorized into three main parts : + 1 ) exploration : it is responsible for discovering the surrounding environment objects like : traffic signs and lights , pedestrians detection , lane detection , etc .",
    "nowadays , these tasks are relatively easier because of the success of deep learning algorithms and the performance has reached the level of human capabilities for the object detection and recognition @xcite @xcite . as an example of potential sensors , camera installed in front of the car ( at the dashboard ) can be used to capture images and then be fed to a cnn .",
    "although camera images are very high dimensional , the useful information needed for the task of autonomous driving is of much lower dimension .",
    "deep learning models are able to learn complex feature representations from raw input data , omitting the need for hand - crafted features @xcite @xcite @xcite . in this regard , convolutional neural networks ( cnns ) are probably the most successful deep learning model , and have formed the basis of every winning entry on the imagenet challenge since alexnet @xcite .",
    "this success has been replicated in lane and vehicle detection for autonomous driving @xcite . in simulation , torcs supported us with these sensors thanks to the simulated car racing ( scr ) plug - in that provides us with the sensor models and readings .",
    "\\2 ) model solution : it is considered as the most important division for our task because it is the variable part for any system to solve a problem . as",
    "the exploration division could be the same for many experiments , but the algorithm used to create the solution is the different .",
    "we depend on the exploration division in order to generate or create the efficient model for our aim . as a result",
    ", we will follow two main and basic categories : 1 ) discrete actions algorithms , and 2 ) continuous actions algorithms .",
    "\\3 ) testing : it is considered as the phase that validates the success of the algorithm used to create the model .",
    "we can not only test the created model but also compare it with the performance of various algorithms .    in this paper ,",
    "the main contributions are : 1 ) proposing different methods for end - end autonomous driving model that takes raw sensor inputs and outputs driving actions , 2 ) presenting a survey of the recent advances of deep reinforcement learning , and 3 ) following the previous system ( exploration , model solution and testing ) in order to : a ) compare between the performance of the two main categories : discrete actions , and continuous actions algorithms ; b ) compare between the performance of the same algorithm under some restricted conditions applied while running these experiments ; and c ) discover the effect of these restricted conditions on the convergence time of learning .",
    "depending on the problem domain , the space of possible actions may be discrete or continuous , a difference which has a profound effect on the choice of algorithms to be applied . in this section",
    "we will discuss two algorithms : one which operates on discrete actions ( dqn ) and one which operates on continuous actions ( ddac ) .",
    "our deep reinforcement learning framework paper @xcite provides more details on how the mentioned methods below are combined together . for a comprehensive overview of reinforcement learning",
    ", please refer to the second edition of rich sutton s textbook @xcite .",
    "we provide a brief overview of essential topics .      when the states are discrete , the q - function can be easily formulated as a table .",
    "this formulation becomes harder when the number of states increases , and even impossible when the states are continuous .",
    "in such case , the q - function is formulated as a parameterized function of the states , actions;@xmath0 .",
    "the solution then lies in finding the best setting of the parameter @xmath1 . using this formulation , it is possible to approximate the q - function using a deep neural network ( dnn ) .",
    "the objective of this dnn shall be to minimize the mean square error ( mse ) of the q - values as follows :    @xmath2 \\\\",
    "j(w ) = \\max_{w } l(w)\\end{gathered}\\ ] ]    this objective function is differentiable end - end in with respect to its parameters , i.e. @xmath3 exists .",
    "thus , the optimization problem can be easily solved using gradient based methods ( stochastic gradient descent ( sgd ) , conjugate gradients ( cg),etc ) .",
    "the algorithm is called deep q - networks ( dqn ) @xcite@xcite .",
    "the dqn algorithm is suitable for continuous states cases , but the action selection still requires the action values to be discrete .",
    "several algorithms were suggested for continuous actions cases , where two functions are learned : 1 ) the actor ; which provides the policy mapping from a state to action , and 2 ) the critic ; which evaluates ( criticizes ) the value of the action taken in the given state .",
    "the critic function is the same as the q - function .",
    "the algorithms to learn both function follow the policy gradient methods @xcite . under the framework of deep learning",
    ", both functions can be learned through two neural networks ; @xmath0 and @xmath4 , since the whole objective is still differentiable w.r.t .",
    "the weights of the q - function and the policy .",
    "hence , the gradient of the q - function ( the critic ) is obtained as in dqn : @xmath3 , while the gradient of the policy function ( the actor ) is obtained using the chain rule as follows : @xmath5      the q - learning algorithms are based on the markov assumption of the mdp . in situations where the full observability of the environment is not available ,",
    "this assumption is not valid anymore .",
    "partially observable mdp ( pomdp ) arises in different scenarios in autonomous driving , like the occlusion of objects during tracking , mapping and localization .",
    "pomdps are tackled using information integration over time , where the true state of the environment is not directly revealed from single observation , but gradually form over multiple observations at different time stamps .",
    "the recurrent neural networks ( rnn ) present themselves as a natural framework to tackle pomdps . in @xcite rnn",
    "was successfully applied for the task of end to end multi - object tracking . moreover , lstms @xcite are integrated to the dqns to form the deep recurrent q networks ( drqn ) in @xcite .",
    "the application of drqn in @xcite to atari games does not show the full power of the model , since the mdp assumption is usually enough for atari games , hence the authors try a variant of the pong game ; flickering pong , they show the advantage of adding recurrence .      in the dqn model ,",
    "the spatial features are extracted via a cnn , which learns the features from data .",
    "those features are not all contributing equally to the final optimization objective . similar to the recognition process in human beings , only a limited amount of information is needed to perform the recognition tasks , and not all the high dimensional sensory data .",
    "attention models @xcite are trying to follow the same concept , where only part of the cnn extracted features are used in the classification task .",
    "this part is learned in parallel to the original learning process . in @xcite , a separate network called `` glimpse network '' is trained to deploy the kernel operation at certain parts of the image .",
    "the motion of the kernel is learned via the reinforce algorithm @xcite to learn the best sequence of motions of the kernel over the input image .",
    "the result is a motion that resembles the reading process in human beings in case of feeding images of digits for example .",
    "the idea is exploited in @xcite to improve the dqn and drqn models , by including a filter after the cnn features extractor , resulting in the darqn model .",
    "the darqn was shown to attend and highlight parts of the atari games that are of special importance . in the `` sequest '' game ,",
    "the agent was able to focus on the oxygen level of the submarine , while in `` breakout '' game ; the agent was able to track the ball position @xcite .",
    "the reinforcement learning algorithms described so far follow the concept of `` episodic '' learning , or `` learning from delayed rewards '' @xcite . in this",
    "setting , the rewards function is assumed to be known to the algorithm .",
    "however , in some cases , instead of having clear mapping of a state to reward function , we have a demonstrated expert behavior to the agent .",
    "the goal of the agent in that case is to decipher the intention of the expert , and decode the structure of the reward function .",
    "this is referred to as inverse reinforcement learning @xcite .",
    "the reward function is encoded as a linear combination of `` features '' functions that maps the state according to some features of interest .",
    "for example , for the driving task , one feature function could be : `` how far is the car from the lanes '' .",
    "another approach is described in @xcite , where the demonstrated expert behavior is utilized in a supervised model , where the actions taken by the expert together with the states are considered as the training examples to a cnn .",
    "in this section , we will deal with a drl system for lane keeping assist .",
    "all of these methods will depend on the input come from the environment in which we could construct the input states , and the outputs are the driving actions for the car autonomously .",
    "the first stage in our system is data collection and environment exploration .",
    "exploration for the environment is achieved by sensors like : camera , lidar , radar , etc .",
    "we depend on these sensor readings for our algorithms because autonomous driving requires the integration of all information from these sensors ( sensor fusion ) .",
    "the requirement for the dnn to extract relevant features from raw sensor input makes sensor fusion a natural task in the course of the learning process .",
    "the state of the surrounding objects is usually not directly observed , but rather deduced by the algorithm through a set of sensors readings .",
    "fusing such sensor information is mandatory to make use of them .",
    "sensor fusion is a wide area of research by itself .",
    "the car state includes its position , orientation , velocity and acceleration . in the case of autonomous",
    "driving , the surrounding environment state needs to be encoded as well .",
    "the environment state may include objects , their location , orientation , motion vectors , dimensions , etc .",
    "traditional autonomous driving algorithms would make use of these state vectors to plan the motion path in such an environment . on the other hand ,",
    "an end - end deep learning system would use a different encoding of the state .",
    "for example in @xcite , the states are just the snapshots of the game , which include by default a lot of implicit information .",
    "such information is not explicitly given to the algorithm , but rather deduced through the dnn ( more specifically a cnn ) , in the form of `` features '' .",
    "in this section , we will provide details for the algorithms that are used for our autonomous driving .",
    "we have two main categories for our algorithms : 1 ) discrete actions algorithms , and 2 ) continuous actions algorithms .",
    "this enables us to apply some examples on both of the two categories and then compare between their performance .",
    "we started the reinforcement learning with q - learning algorithm@xcite@xcite .",
    "this algorithm depends on creating a q - table which is normally considered as a map for the environment states , due to the fused sensor readings , for the discretized actions taken . due to the continuous environment and the discrete algorithm",
    ", we used a function approximator called : tile coding .",
    "we have predefined tiles for the controlled actions , this means that the controlled actions are approximated to the nearest one .",
    "this algorithm has been empirically successful , but it has many drawbacks such as the high confidence level in one estimator only for the optimal future q - value while taking the future into our consideration in the q - learning equation .      the normal progress for the reinforcement learning is to go to the deep reinforcement learning .",
    "the q - function is modified to be not only function in the states and the actions taken but also in the weights of a dnn to estimate the optimal future q - value .",
    "this modification solves the drawback of the q - learning algorithm , but it still deals with discretized actions following the function approximator .",
    "it is an on - policy deep learning algorithm in which the policy is independent on value function .",
    "it depends on the actor - critic algorithm , in which we have two networks : 1 ) actor network : dnn responsible for taking actions based on the states , and 2 ) critic network : dnn responsible for criticizes the value of the action taken in the given state . as we know that the main difference between dqn and ddac is the action taken is discrete or continuous respectively",
    "however , both of them follow the same training procedure with a q - function on the top having the same objective function . in case of continuous actions",
    ", the ddac network can be used .",
    "the same error is back propagated through the network structure to obtain the gradients at every network layer .",
    "this algorithm solves the great drawback of the q - learning , and dqn algorithms",
    "in this section , we discuss how we tested lane keeping assist function using torcs .",
    "the open racing car simulator ( torcs ) is used in order to benefit from its plug - in which is simulated car racing ( scr ) .",
    "torcs - scr provide us with the car model , various tracks , graphics and physics engine beside the car control parameters like : steering angle , velocity , acceleration , brakes .",
    "in addition to that , it provides full information for any real car like : car position , velocity , fuel level , rpm ... etc .",
    "the provided information is not only for the car but also for the surrounding environment for the track and the opponents on the same track as well . in terms of simulation setup ,",
    "the input to the network is the _ trackpos _ sensor input , which provides the position of the track borders , in addition to the car speed in the x - position .",
    "the output are the steering , the gear , the acceleration and the brake values .",
    "the network is trained end - end following the same objective of the dqn .",
    "figure [ fig : label4 ] is a sample screenshot of the lane keeping scenario .    in order to formulate the application as a classification problem ,",
    "the actions ( steer , gear , brake , acceleration ) are tiled and discretized . in another setup ,",
    "the actions are taken as continuous values following the policy gradient method of the ddac .",
    "the results show successful lane keeping function in both cases",
    ". however , in case of dqn , removing the replay memory trick ( q - learning ) helps to have faster convergence and better performance .",
    "in addition , the tile coding of actions in case of dqn makes the steering actions more abrupt .",
    "on the other hand , using ddac continuous policy helps smoothing the actions and provides better performance .",
    "we tested both of q - learning algorithm and ddac algorithm on the same track whose shape as in fig.(1 ) .",
    "this track is characterized by containing both of straight and curved parts which is good for testing both algorithms well . for the straight part of the track",
    ", we found that both of q - learning algorithm and ddac algorithm have approximate performance for surviving on the track as in fig.(2 ) . for curved part of the track , there is a great difference in the performance of both algorithms : for q - learning algorithm as in fig.(2a ) , we noticed that the car takes discrete actions and there is some time between the current action and the next action , this is obvious from the car path in the figure , while for ddpg algorithm as in fig.(2b ) , we noticed that the car takes continuous actions so there is a smooth curve as shown in the path .",
    "we can conclude that both of the two algorithms are reasonable for the straight part of the track , on the other side , the q - learning is not reasonable for the curved part of the track and the ddac algorithm has an excellent performance on both straight and curved part of the track .",
    ".5      .5        termination criterion is important as it indicates whether the training phase has converged to the expected goal .",
    "we have many termination conditions used especially on the ddac algorithm : ( 1 ) no termination condition , ( 2 ) out of track , ( 3 ) stuck , and ( 4 ) out of track with stuck .      the car can move in any part of the track without any restricted termination condition , but it takes only negative rewards if it does wrong actions like : get out of the track or be in a stuck mode . the only termination condition is when the car becomes in horizontal way on the track ; we can reach to this mode when the car tries to take sharp curve on the track .",
    "if the car gets out of the track , it takes a negative reward , but we do nt terminate torcs .",
    "we allow the car to explore the track by itself and learn from its action on the track , so there is no other restricted termination condition .",
    "this termination condition is considered as the basic one and it is applied on other experiments , so normally it exists and no need to talk about it again .",
    "when the car gets out of the track , it takes a high negative reward , and then we terminate torcs and re - launch it again , this means that we start a new episode .",
    "this means that during the learning phase , we prevent the car from getting out of the track , so it is expected that during the testing phase , the car does nt get out of the track .",
    "we give the car around 100 time steps , which is equivalent to the initial motion of the car ( initial acceleration ) , then we put a termination condition which is if the car stalls or stuck , we terminate torcs and re - launch it again ; this means that we start a new episode .",
    "the stall or the stuck condition depends on the vertical speed of the car ( speedx ) in which the stuck concept is if the speed reaches to ( 5 km / h ) , this is considered as a tuning parameter to prevent the car from reaching low speeds .",
    "this also means during the learning phase , we prevent the car from approaching to the low speeds , so it is expected that during the testing phase , the car will not approach from these low speeds .",
    "this termination condition is very useful for the aim of racing .",
    "this experiment has a hybrid termination conditions which are getting out of the track and stuck termination conditions .",
    "we applied both of these restricted termination conditions .",
    "this means that we started a new episode if one of them happens or occurs .",
    "it is expected that this experiment converges at low number of episodes .",
    "this is due to the absence of some restrictions of the termination conditions .",
    "lesser the number of terminations , faster the convergence time .",
    "one episode takes long time to be terminated ; this enables the car to complete one lap as fast as possible , to explore the whole track more and more as fast as possible . on the other side ,",
    "we are afraid of settling on a local minimum point for the neural networks , due to the long time learning on the same track , that may lead the car stuck either between the track boundaries or out of the track .",
    "this gives us the permission to add some restricted termination conditions like : out of track termination condition and stuck termination condition .",
    "it is expected that this experiment converges at moderate number of episodes greater than the number of episodes in the basic experiment .",
    "this is because of starting new episode in case of the car gets out of the track , so the car needs many episodes to explore the whole track and to complete one lap for that track .",
    "it is expected that this experiment converges at moderate number of episodes greater than the number of episodes in the basic experiment .",
    "this is because of starting new episode in case of the car stuck , so the car needs many episodes to explore the whole track and to complete one lap for that track .",
    "stuck termination condition can help both the basic experiment and out of track experiment , so it is most commonly used with the basic experiment in order to avoid settling in a local minimum either the car found between the track boundaries or the car settles out of the track .",
    "this enables us also to add another condition which is the out of track termination condition .",
    "it is expected this experiment converges at high number of episodes greater than all other experiments .",
    "this is due to the presence of two restricted conditions , so both of them lead to start new episode either car stuck or car gets out of the track .",
    "we restricted the car from exploring the track by itself because we enforced it not to stuck and not get out of the track .      in order to measure the level of learning for the same track for the whole experiments",
    ", we defined that if the car completed 10 laps per episode means that the car learned that track well .",
    "the next graph defines the measure of learning for the four experiments .",
    "it is obvious that when there was no termination conditions , the car learned faster than using some restricted termination condition . as we see that learning with no termination conditions converges faster than learning with stuck termination condition faster than out of track termination condition faster than combining two termination conditions of out of track and stuck",
    "this is because whatever the action taken , if it is a good action , so it takes a positive reward , otherwise it takes a negative reward .",
    "in addition to that , the one episode takes a long time to be terminated , so the car could complete one lap from the first episode which helps the car to explore the full track faster . on the other hand , in case of having some restricted termination conditions , torcs is forced to be terminated which means starting a new episode , so it is a trade - off we do nt want the car do this action again , but we lost the advantage of fast convergence of no termination conditions .",
    "in this paper , we introduced drl system for lane keeping assist depending on different categories for the used algorithms .",
    "these categories differ from each other in the type of the actions taken by the car whether : discrete or continuous . after that we compared between two specific algorithms : q - learning whose actions are discrete , and ddac whose actions are continuous from the performance point of view and the smoothness actions on the same track .",
    "then , we introduced a new field of research which is studying the effect of the restricted conditions ( termination conditions ) on the convergence time of learning for the same algorithm .",
    "we concluded that the more we put termination conditions , the slower convergence time to learn .",
    "sample drl training and demo sequences are provided as supplementary material for the review process .",
    "please visit the following youtube links for https://youtu.be/hktc8sgurjq[drl training using dqn ] , https://youtu.be/otukpwew6ui[drl training using ddac ] and https://youtu.be/rxikdkgtzte[drl lane keeping using regression neural network ] .",
    "+ entering the urls explicitly in case the hyperlinks are suppressed . + drl training using dqn - https://youtu.be/hktc8sgurjq + drl training using ddac - https://youtu.be/otukpwew6ui + drl lane keeping using regression neural network - https://youtu.be/rxikdkgtzte +",
    "the authors would like to thank their employer for the opportunity to work on fundamental research .",
    "thanks to b ravi kiran ( inria france ) and catherine enright ( valeo ) for reviewing the paper and providing feedback .",
    "special thanks to a colleague matthew carrigan for detailed review , proof - reading and editing .",
    "abbeel , p. , & ng , a. y. ( 2004 ) .",
    "apprenticeship learning via inverse reinforcement learning .",
    "proceedings of the twenty - first international conference on machine learning , ( p. 1 ) .",
    "badrinarayanan , v. , kendall , a. , & cipolla , r. ( 2015 ) .",
    "segnet : a deep convolutional encoder - decoder architecture for image segmentation .",
    "arxiv preprint arxiv:1511.00561 .",
    "bojarski , m. , del testa , d. , dworakowski , d. , firner , b. , flepp , b. , goyal , p. , et al .",
    "end to end learning for self - driving cars .",
    "arxiv preprint arxiv:1604.07316 .",
    "hausknecht , m. , & stone , p. ( 2015 ) .",
    "deep recurrent q - learning for partially observable mdps .",
    "arxiv preprint arxiv:1507.06527 .",
    "hochreiter , s. , & schmidhuber , j. ( 1997 ) .",
    "long short - term memory .",
    "neural computation , 9 ( 8) , 1735 - 1780 .",
    "huval , b. , wang , t. , tandon , s. , kiske , j. , song , w. , pazhayampallil , j. , et al .",
    "an empirical evaluation of deep learning on highway driving .",
    "arxiv preprint arxiv:1504.01716 .",
    "karavolos , d. ( 2013 ) .",
    "q - learning with heuristic exploration in simulated car racing .",
    "kendall , a. , badrinarayanan , v. , & cipolla , r. ( 2015 ) .",
    "bayesian segnet : model uncertainty in deep convolutional encoder - decoder architectures for scene understanding .",
    "arxiv preprint arxiv:1511.02680 .",
    "krizhevsky , a. , sutskever , i. , & hinton , g. e. ( 2012 ) .",
    "imagenet classification with deep convolutional neural networks .",
    "advances in neural information processing systems , ( pp . 1097 - 1105 ) .",
    "lecun , y. , bengio , y. , & hinton , g. ( 2015 ) .",
    "deep learning .",
    "nature , 521 ( 7553 ) , 436 - 444 .",
    "mnih , v. , heess , n. , graves , a. , & others .",
    "recurrent models of visual attention .",
    "advances in neural information processing systems , ( pp .",
    "2204 - 2212 ) .",
    "mnih , v. , kavukcuoglu , k. , silver , d. , graves , a. , antonoglou , i. , wierstra , d. , et al .",
    "playing atari with deep reinforcement learning .",
    "arxiv preprint arxiv:1312.5602 .",
    "mnih , v. , kavukcuoglu , k. , silver , d. , rusu , a. a. , veness , j. , bellemare , m. g. , et al .",
    "( 2015 ) . human - level control through deep reinforcement learning .",
    "nature , 518 ( 7540 ) , 529 - 533 .",
    "ondruska , p. , & posner , i. ( 2016 ) .",
    "deep tracking : seeing beyond seeing using recurrent neural networks .",
    "arxiv preprint arxiv:1602.00991 .",
    "sermanet , p. , eigen , d. , zhang , x. , mathieu , m. , fergus , r. , & lecun , y. ( 2013 ) .",
    "overfeat : integrated recognition , localization and detection using convolutional networks .",
    "arxiv preprint arxiv:1312.6229 .",
    "sorokin , i. , seleznev , a. , pavlov , m. , fedorov , a. , & ignateva , a. ( 2015 ) .",
    "deep attention recurrent q - network .",
    "arxiv preprint arxiv:1512.01693 .",
    "sutton , r. s. ( 1988 ) . learning to predict by the methods of temporal differences .",
    "machine learning , 3 ( 1 ) , 9 - 44 .",
    "sutton , r. s. , & barto , a. g. ( 2016 ) .",
    "reinforcement learning : an introduction .",
    "online draft .",
    "sutton , r. s. , mcallester , d. a. , singh , s. p. , mansour , y. , & others .",
    "policy gradient methods for reinforcement learning with function approximation .",
    "nips , 99 , pp .",
    "1057 - 1063 .",
    "watkins , c. j. ( 1989 ) .",
    "learning from delayed rewards .",
    "dissertation , university of cambridge england .",
    "watkins , c. j. , & dayan , p. ( 1992 ) .",
    "q - learning .",
    "machine learning , 8 ( 3 - 4 ) , 279 - 292 .",
    "williams , r. j. ( 1992 ) .",
    "simple statistical gradient - following algorithms for connectionist reinforcement learning .",
    "machine learning , 8 ( 3 - 4 ) , 229 - 256 .",
    "xu , k. , ba , j. , kiros , r. , courville , a. , salakhutdinov , r. , zemel , r. , et al .",
    "show , attend and tell : neural image caption generation with visual attention .",
    "arxiv preprint arxiv:1502.03044 .",
    "el sallab , a. , abdou , m. , perot , e. , & yogamani , s. ( 2017 ) .",
    "deep reinforcement learning framework for autonomous driving , autonomous vehicles and machines , electronic imaging 2017 ( to be published ) ."
  ],
  "abstract_text": [
    "<S> reinforcement learning is considered to be a strong ai paradigm which can be used to teach machines through interaction with the environment and learning from their mistakes , but it has not yet been successfully used for automotive applications . there has recently been a revival of interest in the topic , however , driven by the ability of deep learning algorithms to learn good representations of the environment . motivated by google deepmind s successful demonstrations of learning for games from breakout to go , we will propose different methods for autonomous driving using deep reinforcement learning . </S>",
    "<S> this is of particular interest as it is difficult to pose autonomous driving as a supervised learning problem as it has a strong interaction with the environment including other vehicles , pedestrians and roadworks . as this is a relatively new area of research for autonomous driving </S>",
    "<S> , we will formulate two main categories of algorithms : 1 ) discrete actions category , and 2 ) continuous actions category . </S>",
    "<S> for the discrete actions category , we will deal with deep q - network algorithm ( dqn ) while for the continuous actions category , we will deal with deep deterministic actor critic algorithm ( ddac ) . </S>",
    "<S> in addition to that , we will also discover the performance of these two categories on an open source car simulator for racing called ( torcs ) which stands for the open racing car simulator . </S>",
    "<S> our simulation results demonstrate learning of autonomous maneuvering in a scenario of complex road curvatures and simple interaction with other vehicles . </S>",
    "<S> finally , we explain the effect of some restricted conditions , put on the car during the learning phase , on the convergence time for finishing its learning phase . </S>"
  ]
}
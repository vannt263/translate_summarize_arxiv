{
  "article_text": [
    "this paper is about an efficient numerical solver for elliptic boundary value problems in piecewise smooth domains .",
    "such a solver is useful for applications in physics and engineering , where computational domains of interest often have boundaries that contain singular points such as corners and triple junctions .",
    "furthermore , elliptic boundary value problems in non - smooth domains are difficult to solve irrespective of what numerical method is used .",
    "the reason being that the solution , or the quantity representing the solution , often exhibits a non - smooth behavior close to boundary singularities . that behavior is hard to resolve by polynomials , which underly most approximation schemes .",
    "mesh refinement is needed .",
    "this is costly and may lead to artificial ill - conditioning and the loss of accuracy .",
    "the numerical solver we propose takes its starting point in an integral equation reformulation of the boundary value problem at hand .",
    "more precisely , we assume that the problem can be modeled as a fredholm second kind integral equation with integral operators that are compact away from singular boundary points and whose solution is a layer density representing the solution to the original problem . at the heart of our solver lie certain integral transforms .",
    "their inverses , constructed in a recursive manner and on locally refined temporary meshes , modify the kernels of the integral operators in such a way that the layer density becomes piecewise smooth and simple to resolve by polynomials .",
    "conceptually , this corresponds to applying a fast direct solver  @xcite locally to regions with troublesome geometry .",
    "we then apply a global iterative method .",
    "this gives us many of the advantages of fast direct methods , for example the ability to deal with certain classes of operators whose spectra make them unsuitable for iterative methods . in addition , the approach is typically much faster than using only a fast direct solver .",
    "our method , or scheme , has previously been referred to as _ recursive compressed inverse preconditioning _",
    "@xcite and there is a good reason for that name : the scheme relies on applying a relieving right inverse to the integral equation ; on compressing this inverse to a low - dimensional subspace ; and on carrying out the compression in a recursive manner .",
    "still , the name _",
    "recursive(ly ) compressed inverse preconditioning _ is a bit awkward and we will here simply use the acronym rcip .",
    "a strong motivation for writing the present paper is that the original references  @xcite are hard to read for non - experts and that efficient codes , therefore , could be hard to implement . certain derivations in  @xcite use complicated intermediary constructions , application specific issues obscure the general picture , and",
    "the notation has evolved from paper to paper . in the present paper we focus on the method itself , on how it works and how it can be implemented , and refer to the original research papers for details .",
    "demo codes , in matlab , are a part of the exposition and can be downloaded from :    http://www.maths.lth.se/na/staff/helsing/tutor/    section  [ sec : back ] provides some historical background .",
    "the basics if the rcip method are then explained by solving a simple model problem in sections  [ sec : model][sec : rec ] .",
    "sections  [ sec : sb][sec : sing ] review various extensions and improvements .",
    "some of this material is new , for example the simplified treatment of composed operators in section  [ sec : compose ] .",
    "the last part of the paper , sections  [ sec : helmdiri][sec : helmfield ] , contain new applications to scattering problems .",
    "the line of research on fast solvers for elliptic boundary value problems in piecewise smooth domains , leading up to the rcip method , grew out of work in computational fracture mechanics .",
    "early efforts concerned finding efficient integral equation formulations .",
    "corner singularities were either resolved with brute force or by using special basis functions , see  @xcite for examples . such strategies , in combination with fast multipole  @xcite accelerated iterative solvers , work well for simple small - scale problems .",
    "real world physics is more complicated and , for example , the study  @xcite on a high - order time - stepping scheme for crack propagation ( a series of biharmonic problems for an evolving piecewise smooth surface ) shows that radically better methods are needed .",
    "special basis functions are too complicated to construct and brute force is not economical  merely storing the discretized solution becomes too costly in a large - scale simulation .",
    "a breakthrough came in 2007 , when a scheme was created that resolves virtually any problem for laplace s equation in piecewise smooth two - dimensional domains in a way that is fully automatic , fast , stable , memory efficient , and whose computational cost scales linearly with the number of corners in the computational domain .",
    "the resulting paper  @xcite constitutes the origin of the rcip method .",
    "unfortunately , however , there are some flaws in  @xcite .",
    "the expressions in  ( * ? ? ?",
    "* section  9 ) are not generally valid and the paper fails to apply rcip in its entirety to the biharmonic problem of  ( * ? ? ?",
    "* section  3 ) , which was the ultimate goal .    the second paper on rcip  @xcite deals with elastic grains .",
    "the part  ( * ? ? ?",
    "* appendix b ) , on speedup , is particulary useful .    the third paper on rcip  @xcite contains improvement relative to the earlier papers , both in the notation and in the discretization of singular operators .",
    "the overall theme is mixed boundary conditions , which pose similar difficulties as do piecewise smooth boundaries .",
    "the paper  @xcite , finally , solves the problem of  ( * ? ? ?",
    "* section  3 ) in a broad setting and one can view the formalism of  @xcite as the rcip method in its most general form , at least in two dimensions .",
    "further work on rcip has been devoted to more general boundary conditions  @xcite , to problems in three dimension  @xcite , and to solving elliptic boundary value problems in special situations , such as for aggregates of millions of grains , where special techniques are introduced to deal with problem specific issues  @xcite .",
    "we end this retrospection by pointing out that several research groups in recent years have proposed numerical schemes for integral equations stemming from elliptic partial differential equations in piecewise smooth domains .",
    "see , for example ,  @xcite .",
    "there is also a widespread notion that a slight rounding of corners is a good idea for numerics . while rounding may work in particular situations",
    ", we do not believe it is a generally viable method .",
    "for one thing , how does one round a triple junction ?     of  ( [ eq : gamma ] ) with a corner at the origin .",
    "the solid curve corresponds to opening angle @xmath0 .",
    "the dashed curve has @xmath1.,height=279 ]",
    "let @xmath2 be the closed contour of figure  [ fig : sno1 ] with the parameterization @xmath3\\ , .",
    "\\label{eq : gamma}\\ ] ] let @xmath4 be the fundamental solution to laplace s equation which in the plane can be written @xmath5 we shall solve the integral equation @xmath6 for the unknown layer density @xmath7 . here @xmath8 is the exterior unit normal of the contour , @xmath9 is an element of arc length , @xmath10 is a parameter , and @xmath11 is a unit vector .",
    "the equation  ( [ eq : inteq1a ] ) models an electrostatic inclusion problem  @xcite .",
    "using complex notation , where vectors @xmath12 , @xmath13 , and @xmath8 in the real plane @xmath14 correspond to points @xmath15 , @xmath16 , and @xmath17 in the complex plane @xmath18 , one can express  ( [ eq : inteq1a ] ) as @xmath19 where the ` bar ' symbol denotes complex conjugation .",
    "equation  ( [ eq : inteq2 ] ) is a simplification over  ( [ eq : inteq1a ] ) from a programming point of view .    from an algorithmic point of view",
    "it is advantageous to write  ( [ eq : inteq1a ] ) in the abbreviated form @xmath20 where @xmath21 is the identity . if @xmath2 is smooth , then  ( [ eq : inteq3 ] ) is a fredholm second kind integral equation with a compact , non - self - adjoint , integral operator @xmath22 whose spectrum is discrete , bounded by one in modulus , and accumulates at zero .",
    "we also need a way to monitor the convergence of solutions @xmath23 to  ( [ eq : inteq3 ] ) . for this purpose",
    "we introduce a quantity @xmath24 , which corresponds to polarizability  @xcite @xmath25     of  ( [ eq : gamma ] ) with opening angle @xmath26 .",
    "a subset of @xmath2 , called @xmath27 , covers four coarse panels as indicated by the dashed curve .",
    "right : a fine mesh created from the coarse mesh by subdividing the panels closest to the corner @xmath28 times.,height=113 ]",
    "we discretize  ( [ eq : inteq3 ] ) using the original nystrm method based on composite 16-point gauss  legendre quadrature on two different meshes : a _ coarse mesh _ with @xmath29 quadrature panels and a _ fine mesh",
    "_ which is constructed from the coarse mesh by @xmath30 times subdividing the panels closest to the corner in a direction toward the corner .",
    "the discretization is in parameter .",
    "the four panels on the coarse mesh that are closest to the corner should be equisized in parameter .",
    "these panels form a subset of @xmath2 called @xmath27 .",
    "see figure  [ fig : sno2 ] .",
    "the linear systems resulting from discretization on the coarse mesh and on the fine mesh can be written formally as @xmath31 where @xmath32 and @xmath33 are square matrices and @xmath34 and @xmath35 are column vectors .",
    "the subscripts fin and coa indicate what type of mesh is used .",
    "discretization points on a mesh are said to constitute a grid .",
    "the coarse grid has @xmath36 points .",
    "the fine grid has @xmath37 points .",
    "the discretization of  ( [ eq : inteq3 ] ) is carried out by first rewriting  ( [ eq : inteq2 ] ) as @xmath38\\ , .",
    "\\label{eq : inteq2b}\\ ] ] then nystrm discretization with @xmath39 points @xmath40 and weights @xmath41 on @xmath2 gives @xmath42    the program demo1.m sets up the system  ( [ eq : inteq3b ] ) , solves it using the gmres iterative solver  @xcite incorporating a low - threshold stagnation avoiding technique  ( * ? ? ?",
    "* section 8) , and computes @xmath24 of  ( [ eq : q ] ) . the user has to specify the opening angle @xmath43 , the parameter @xmath10 , the number @xmath29 of coarse panels on @xmath2 , the unit vector @xmath11 and the number of subdivisions @xmath30",
    ". the opening angle should be in the interval @xmath44 .",
    "we choose @xmath45 , @xmath26 , @xmath46 , and @xmath47 .",
    "the quantity @xmath24 converges initially as @xmath30 is increased , but for @xmath48 the results start to get worse .",
    "see figure  [ fig : conv1 ] .",
    "this is related to the fact , pointed out by bremer  @xcite , that the original nystrm method captures the @xmath49 behavior of the solution @xmath50 , while our @xmath50 is unbounded .",
    "see , further , appendix d.",
    "let us split the matrices @xmath51 and @xmath52 of  ( [ eq : inteq3a ] ) and  ( [ eq : inteq3b ] ) into two parts each @xmath53 here the superscript @xmath54 indicates that only entries of a matrix @xmath55 whose indices @xmath56 and @xmath57 correspond to points @xmath40 and @xmath58 that both belong to the boundary segment @xmath27 are retained .",
    "the remaining entries are zero .",
    "now we introduce two diagonal matrices @xmath59 and @xmath60 which have the quadrature weights @xmath41 on the diagonal .",
    "furthermore , we need a prolongation matrix @xmath61 which interpolates functions known at points on the coarse grid to points on the fine grid .",
    "the construction of @xmath61 relies on panelwise 15-degree polynomial interpolation in parameter using vandermonde matrices .",
    "we also construct a weighted prolongation matrix @xmath62 via @xmath63 the matrices @xmath61 and @xmath62 share the same sparsity pattern .",
    "they are rectangular matrices , similar to the the identity matrix , but with one full @xmath64 block .",
    "let superscript @xmath65 denote the transpose .",
    "then @xmath66 holds exactly .",
    "see appendix a and  ( * ? ? ?",
    "* section 4.3 ) .    equipped with @xmath61 and @xmath62",
    "we are ready to compress  ( [ eq : inteq3b ] ) on the fine grid to an equation essentially on the coarse grid .",
    "this compression is done without the loss of accuracy  the discretization error in the solution is unaffected and no information is lost .",
    "the compression relies on the variable substitution @xmath67 here @xmath68 is the discretization of a piecewise smooth _",
    "transformed density_. the compression also uses the low - rank decomposition @xmath69 which should hold to about machine precision .",
    "the compressed version of  ( [ eq : inteq3b ] ) reads @xmath70 where the compressed weighted inverse @xmath71 is given by @xmath72 see appendix b for details on the derivation .",
    "the compressed weighted inverse @xmath71 , for @xmath2 of  ( [ eq : gamma ] ) , is a block diagonal matrix with one full @xmath73 block and the remaining entries coinciding with those of the identity matrix .    after having solved  ( [ eq : inteq4 ] ) for @xmath68",
    ", the density @xmath74 can easily be reconstructed from @xmath68 in a post - processor , see section  [ sec : recon ] .",
    "it is important to observe , however , that @xmath74 is not always needed .",
    "for example , the quantity @xmath24 of  ( [ eq : q ] ) can be computed directly from @xmath68 .",
    "let @xmath75 be a column vector which contains the absolute values of the boundary derivatives @xmath76 multiplied with weights @xmath41 , positions @xmath40 , and the complex scalar @xmath77",
    ". then @xmath78",
    "the compressed weighted inverse @xmath71 is costly to compute from its definition  ( [ eq : r ] ) . as we saw in section",
    "[ sec : disc ] , the inversion of large matrices @xmath79 on highly refined grids could also be unstable . fortunately , the computation of @xmath80 can be greatly sped up and stabilized via a recursion .",
    "this recursion is derived in a roundabout way and using a refined grid that differs from that of the present tutorial in  ( * ? ? ?",
    "* section 7.2 ) . a better derivation can be found in  ( * ? ? ?",
    "* section 5 ) , but there the setting is more general so that text could be hard to follow .",
    "here we focus on results .",
    "let @xmath81 be a prolongation matrix , performing panelwise 15-degree polynomial interpolation in parameter from a 64-point grid on a four - panel mesh to a 96-point grid on a six - panel mesh as shown in figure  [ fig : pbc ] .",
    "let @xmath82 be a weighted prolongation matrix in the style of  ( [ eq : pw ] ) .",
    "if t16 and w16 are the nodes and weights of 16-point gauss  legendre quadrature on the canonical interval @xmath83 $ ] , then @xmath81 and @xmath82 can be constructed as    ....    t32=[t16 - 1;t16 + 1]/2 ;    w32=[w16;w16]/2 ;    a = ones(16 ) ;    aa = ones(32,16 ) ;    for k=2:16      a(:,k)=a(:,k-1).*t16 ;      aa(:,k)=aa(:,k-1).*t32 ;             end    ip = aa / a ;    ipw = ip.*(w32*(1./w16 ) ' ) ; %    pbc = zeros(96,64 ) ;    pbc ( 1:16 , 1:16)=eye(16 ) ;    pbc(17:48,17:32)=ip ;    pbc(49:96,33:64)=flipud(fliplr(pbc(1:48,1:32 ) ) ) ; %    pwbc = zeros(96,64 ) ;    pwbc ( 1:16 , 1:16)=eye(16 ) ;    pwbc(17:48,17:32)=ipw ;    pwbc(49:96,33:64)=flipud(fliplr(pwbc(1:48,1:32 ) ) ) ; ....    see  ( * ? ? ?",
    "* appendix a ) for an explanation of why high - degree polynomial interpolation involving vandermonde systems gives accurate results for smooth functions .    ,",
    "@xmath84 , and @xmath85 along with their corresponding type b meshes for @xmath28.,height=151 ]      let @xmath86 , @xmath87 , be a sequence of subsets of @xmath27 with @xmath88 and @xmath89 .",
    "let there also be a six - panel mesh and a corresponding 96-point grid on each @xmath86 .",
    "the construction of the subsets and their meshes should be such that if @xmath90 , @xmath91 $ ] , is a local parameterization of @xmath86 , then the breakpoints ( locations of panel endpoints ) of its mesh are at @xmath92 and the breakpoints of the mesh on @xmath93 are at @xmath94 .",
    "we denote this type of nested six - panel meshes _ type b_. the index @xmath56 is the _",
    "level_. an example of a sequence of subsets and meshes on @xmath27 is shown in figure  [ fig : subsets ] for @xmath28 . compare  ( * ? ? ?",
    "* figure 2 ) and  ( * ? ? ? * figure 5.1 ) .",
    "let @xmath95 denote the discretization of @xmath22 on a type b mesh on @xmath86 .",
    "in the spirit of  ( [ eq : split1],[eq : split2 ] ) we write @xmath96 where the superscript @xmath54 indicates that only entries with both indices corresponding to points on the four inner panels are retained .",
    "now , let @xmath97 denote the full @xmath73 diagonal block of @xmath71 .",
    "the recursion for @xmath97 is derived in appendix c and it reads @xmath98 where the operator @xmath99 expands its matrix argument by zero - padding ( adding a frame of zeros of width 16 around it ) .",
    "note that the initializer  ( [ eq : rstart ] ) makes the recursion  ( [ eq : recur ] ) take the first step @xmath100    the program demo2.m sets up the linear system  ( [ eq : inteq4 ] ) , runs the recursion  ( [ eq : recur],[eq : rstart ] ) , and solves the linear system using the same techniques as demo1.m , see section  [ sec : disc ] .",
    "in fact , the results produced by the two programs are very similar , at least up to @xmath101 .",
    "this supports the claim of section  [ sec : comp ] that discretization error in the solution is unaffected by compression .",
    "figure  [ fig : conv2 ] demonstrates the power of rcip : fewer unknowns and faster execution , better conditioning ( the number of gmres iterations does not grow ) , and higher achievable accuracy .",
    "compare figure  [ fig : conv1 ] .",
    "we emphasize that the number @xmath30 of recursion steps ( levels ) used in  ( [ eq : recur ] ) corresponds to the number of subdivisions @xmath30 used to construct the fine mesh .",
    "the recursion  ( [ eq : recur ] ) can be sped up using the schur ",
    "banachiewicz inverse formula for partitioned matrices  @xcite , which in this context can be written  ( * ? ? ?",
    "* appendix b ) @xmath102 \\left [   \\begin{array}{cc }         { \\bf a}^{-1 } & { \\bf u } \\\\       { \\bf v }       & { \\bf d } \\end{array }   \\right]^{-1 } \\left [   \\begin{array}{cc }         { \\bf p}^{\\star }    & { \\bf 0 } \\\\       { \\bf 0 }    & { \\bf i } \\end{array }   \\right]=\\ ] ] @xmath103\\ , , \\label{eq : cbana}\\ ] ] where @xmath104 plays the role of @xmath105 , @xmath106 and @xmath107 are submatrices of @xmath81 and @xmath82 , and @xmath108 , @xmath109 , and @xmath110 refer to blocks of @xmath111 .    the program demo3.m is based on demo2.m , but has  ( [ eq : cbana ] ) incorporated . besides , the integral equation  ( [ eq : inteq1a ] ) is replaced with @xmath112 which has the same solution @xmath7 but is more stable for @xmath10 close to one . for the discretization of  ( [ eq : inteq1b ] ) to fit the form  ( [ eq : inteq4 ] ) , the last term on the left hand side of  ( [ eq : inteq1b ] ) is added to the matrix @xmath113 of  ( [ eq : inteq4 ] ) .    the execution of demo3.m is faster than that of demo2.m .",
    "figure  [ fig : conv3 ] shows that a couple of extra digits are gained by using  ( [ eq : inteq1b ] ) rather than  ( [ eq : inteq1a ] ) and that full machine accuracy is achieved for @xmath114 .",
    "let us introduce a new discrete density @xmath115 via @xmath116 rewriting  ( [ eq : inteq4 ] ) in terms of @xmath115 gives @xmath117 which resembles the original equation  ( [ eq : inteq3a ] ) .",
    "we see that @xmath118 , which is discretized using gauss ",
    "legendre quadrature , acts on @xmath115 .",
    "therefore one can interpret @xmath115 as pointwise values of the original density @xmath7 , multiplied with weight corrections suitable for integration against polynomials .",
    "we refer to @xmath119 as a _ weight - corrected density_. compare  ( * ? ? ?",
    "* section 5.4 ) .",
    "assume now that there is a square matrix @xmath120 which maps @xmath68 to discrete values @xmath121 of the original density on the coarse grid @xmath122 the matrix @xmath120 allows us to rewrite  ( [ eq : inteq4 ] ) as a system for the original density @xmath123 we can interpret the composition @xmath124 as a matrix of multiplicative weight corrections that compensate for the singular behavior of @xmath7 on @xmath27 when gauss  legendre quadrature is used .    let @xmath125 denote the rectangular matrix @xmath126 and let @xmath127 be a restriction operator which performs panelwise 15-degree polynomial interpolation in parameter from a grid on the fine mesh to a grid on a the coarse mesh .",
    "we see from  ( [ eq : subst ] ) that @xmath125 is the mapping from @xmath128 to @xmath74",
    ". therefore the columns of @xmath125 can be interpreted as discrete basis functions for @xmath7 .",
    "it holds by definition that @xmath129    the quantities and interpretations of this section come in handy in various situations , for example in 3d extensions of the rcip method  @xcite . an efficient scheme for constructing @xmath120",
    "will be presented in section  [ sec : s ] .",
    "the action of @xmath125 on @xmath68 , which gives @xmath74 , can be obtained by , in a sense , running the recursion  ( [ eq : recur ] ) backwards .",
    "the process is described in detail in  ( * ? ? ? * section 7 ) . here",
    "we focus on results .",
    "the backward recursion on @xmath27 reads @xmath130{\\bf p}_{\\rm bc}\\tilde{\\boldsymbol{\\rho}}_{{\\rm coa},i}\\ , , \\quad i = n_{\\rm sub},\\ldots,1\\ , .",
    "\\label{eq : back}\\ ] ] here @xmath131 is a column vector with @xmath132 elements . in particular",
    ", @xmath133 is the restriction of @xmath68 to @xmath27 , while @xmath131 are taken as elements @xmath134 of @xmath135 for @xmath136 .",
    "the elements @xmath137 and @xmath138 of @xmath139 are the reconstructed values of @xmath74 on the outermost panels of a type b mesh on @xmath86 . outside of @xmath27 , @xmath74 coincides with @xmath68 .",
    "when the recursion is completed , the reconstructed values of @xmath74 on the four innermost panels are obtained from @xmath140 should one wish to interrupt the recursion  ( [ eq : back ] ) prematurely , at step @xmath141 say , then @xmath142 gives values of a weight - corrected density on the four innermost panels of a type b mesh on @xmath143 .",
    "that is , we have a part - way reconstructed weight - corrected density @xmath144 on a mesh that is @xmath145 times refined .",
    "this observation is useful in the context of evaluating layer potentials close to their sources .",
    "if the memory permits , one can store the matrices @xmath146 and @xmath147 in the forward recursion  ( [ eq : recur ] ) and reuse them in the backward recursion  ( [ eq : back ] ) .",
    "otherwise they may be computed afresh .",
    "the program demo4.m builds on the program demo3.m , using  ( [ eq : inteq4 ] ) for  ( [ eq : inteq1b ] ) .",
    "after the main linear system is solved for @xmath68 , a postprocessor reconstructs @xmath74 via  ( [ eq : back ] ) .",
    "then a comparison is made with a solution @xmath74 obtained by solving the un - compressed system  ( [ eq : inteq3b ] ) .",
    "figure  [ fig : conv45 ] shows that for @xmath148 the results are virtually identical .",
    "this verifies the correctness of  ( [ eq : back ] ) . for @xmath149 the result start to deviate .",
    "that illustrates the instabilities associated with solving  ( [ eq : inteq3b ] ) on a highly refined mesh .",
    "compare figure  [ fig : conv1 ] .",
    "the program demo5.m investigates the effects of premature interruption of  ( [ eq : back ] ) .",
    "the number of recursion steps is set to @xmath150 and the recursion is interrupted at different levels .",
    "the density @xmath74 is reconstructed on outer panels up to the level of interruption",
    ". then a weight - corrected density is produced at the innermost four panels according to  ( [ eq : premat ] ) .",
    "finally @xmath24 of  ( [ eq : q ] ) is computed from this part - way reconstructed solution .",
    "the right image of figure  [ fig : conv45 ] shows that the quality of @xmath24 is unaffected by the level of interruption .",
    "this section discusses the construction of @xmath120 and other auxiliary matrices . note that in many applications , these matrices are not needed .",
    "the entries of the matrices @xmath61 , @xmath62 , @xmath127 , @xmath80 , @xmath120 , and @xmath125 can only differ from those of the identity matrix when both indices correspond to discretization points on @xmath27 .",
    "for example , the entries of @xmath71 only differ from the identity matrix for the @xmath73 block denoted @xmath151 in  ( [ eq : recur ] ) . in accordance with this notation",
    "we introduce @xmath152 , @xmath153 , @xmath154 , @xmath155 and @xmath156 for the restriction of @xmath61 , @xmath62 , @xmath127 , @xmath120 and @xmath125 to @xmath27 . in the codes of this section",
    "we often use this restricted type of matrices , leaving the identity part out .",
    "we observe that @xmath155 is a square @xmath73 matrix ; @xmath152 , @xmath157 and @xmath156 are rectangular @xmath158 matrices ; and @xmath154 is a rectangular @xmath159 matrix .",
    "furthermore , @xmath154 is very sparse for large @xmath30 .",
    "all columns of @xmath160 with column indices corresponding to points on panels that result from more than eight subdivisions are identically zero .",
    "the program demo6.m sets up @xmath152 , @xmath161 and @xmath154 , shows their sparsity patterns , and verifies the identities  ( [ eq : pwtp ] ) and  ( [ eq : qp ] ) .",
    "the implementations for @xmath152 and @xmath157 rely on repeated interpolation from coarser to finer intermediate grids .",
    "the implementation of @xmath160 relies on keeping track of the relation between points on the original coarse and fine grids .",
    "output from demo6.m is depicted in the left image of figure  [ fig : conv67 ] .",
    "note that the matrices @xmath152 and @xmath157 are never needed in applications .",
    "we are now ready to construct @xmath120 . section  [ sec : recon ] presented a scheme for evaluating the action of @xmath162 on discrete functions on the coarse grid on @xmath27 . the matrix @xmath163 , itself ,",
    "can be constructed by applying this scheme to a @xmath73 identity matrix .",
    "the matrix @xmath154 was set up in demo6.m .",
    "composing these two matrices gives @xmath164 , see  ( [ eq : qy ] ) .",
    "this is done in the program demo7.m , where the identity part is added as to get the entire matrix @xmath120 . in previous work on rcip we have found use for @xmath165 in complex situations where  ( [ eq : inteq6 ] ) is preferable over  ( [ eq : inteq4 ] ) , see  ( * ? ? ?",
    "* section 9 ) .",
    "if one merely needs @xmath121 from @xmath68 in a post - processor , setting up @xmath120 and using  ( [ eq : smap ] ) is not worthwhile .",
    "it is cheaper to let @xmath125 act on @xmath68 and then let @xmath127 act on the resulting vector .",
    "anyhow , demo7.m builds on demo4.m and gives as output @xmath166 computed via  ( [ eq : smap ] ) , see the right image of figure  [ fig : conv67 ] . for comparison , @xmath167 , computed from the un - compressed system  ( [ eq : inteq3b ] ) , is also shown .",
    "it often happens that @xmath168 is wedge - like .",
    "a corner of a polygon , for example , has wedge - like @xmath168 at all levels",
    ". if @xmath27 is merely piecewise smooth , then the @xmath168 are wedge - like to double precision accuracy for @xmath169 .",
    "wedge - like sequences of @xmath168 open up for simplifications and speedup in the recursion  ( [ eq : recur],[eq : rstart ] ) .",
    "particularly so if the kernel of the integral operator @xmath22 of  ( [ eq : inteq3 ] ) is scale invariant on wedges . then the matrix @xmath170 becomes independent of @xmath56 .",
    "it can be denoted @xmath171 and needs only to be constructed once .",
    "furthermore , the recursion  ( [ eq : recur],[eq : rstart ] ) assumes the form of a fixed - point iteration @xmath172 the iteration  ( [ eq : fixed ] ) can be run until @xmath147 converges .",
    "let @xmath173 be the converged result .",
    "one need not worry about predicting the number of levels needed . choosing the number @xmath174 of levels needed , in order to meet a beforehand given tolerance in @xmath173 , is otherwise a big problem in connection with  ( [ eq : recur],[eq : rstart ] ) and non - wedge - like @xmath27 .",
    "this number has no general upper bound .",
    "assume now that the kernel of @xmath22 is scale invariant on wedges .",
    "if all @xmath86 are wedge - like , then  ( [ eq : fixed],[eq : fstart ] ) replaces  ( [ eq : recur],[eq : rstart ] ) entirely . if @xmath27 is merely piecewise smooth , then  ( [ eq : fixed],[eq : fstart ] ) can be run on a wedge with the same opening angle as @xmath27 , to produce an initializer to  ( [ eq : recur ] ) . that initializer could often be more appropriate than  ( [ eq : rstart ] ) , which is plagued with a very large discretization error whenever  ( [ eq : inteq2c ] ) is used .",
    "this fixed - point recursion initializer is implemented in the program demo8b.m , which is a simple upgrading of demo3b.m , and produces figure  [ fig : conv8 ] .",
    "a comparison of figure  [ fig : conv8 ] with figure  [ fig : conv3 ] shows that the number @xmath30 of levels needed for full convergence is halved compared to when using the initializer  ( [ eq : rstart ] ) .",
    "there are , generally speaking , several advantages with using the fixed - point recursion initializer , rather than  ( [ eq : rstart ] ) , in  ( [ eq : recur ] ) on a non - wedge - like @xmath27 : first , the number of different matrices @xmath175 and @xmath170 needed in  ( [ eq : recur ] ) and in  ( [ eq : back ] ) is reduced as the recursions are shortened .",
    "this means savings in storage .",
    "second , the number @xmath30 of levels needed for full convergence in  ( [ eq : recur ] ) seems to always be bounded .",
    "the hard work is done in  ( [ eq : fixed ] ) .",
    "third , newton s method can be used to accelerate  ( [ eq : fixed ] ) . that is the topic of section  [ sec : newton ] .",
    "when solving integral equations stemming from particularly challenging elliptic boundary value problems with solutions @xmath7 that are barely absolutely integrable , the fixed - point iteration  ( [ eq : fixed],[eq : fstart ] ) on wedge - like @xmath27 may need a very large number of steps to reach full convergence .",
    "see  ( * ? ? ?",
    "* section 6.3 ) for an example where @xmath176 steps are needed .    fortunately ,  ( [ eq : fixed ] ) can be cast as a non - linear matrix equation @xmath177 where @xmath173 , as in section  [ sec : init ] , is the fixed - point solution and @xmath178 the non - linear equation  ( [ eq : newton ] ) , in turn , can be solved for @xmath173 with a variant of newton s method .",
    "let @xmath179 be a matrix - valued perturbation of @xmath173 and expand @xmath180 to first order in @xmath179 .",
    "this gives a sylvester - type matrix equation @xmath181 for the newton update @xmath179 .",
    "one can use the matlab built - in function dlyap for  ( [ eq : sylvester ] ) , but gmres seems to be more efficient and we use that method . compare  ( * ? ? ?",
    "* section 6.2 ) .    , [ eq : fstart ] )",
    "is compared to newton s method for  ( [ eq : newton]).,height=279 ]    figure  [ fig : conv9 ] shows a comparison between the fixed - point iteration  ( [ eq : fixed],[eq : fstart ] ) and newton s method for computing the fixed - point solution @xmath173 to  ( [ eq : newton ] ) on a wedge - like @xmath27 .",
    "the program demo9.m is used and it incorporates schur  banachiewicz speedup in the style of section  [ sec : sb ] .",
    "the wedge opening angle is @xmath26 , the integral operator @xmath22 is the same as in  ( [ eq : inteq3 ] ) , and @xmath45 .",
    "the relative difference between the two converged solutions @xmath173 is @xmath182 .",
    "figure  [ fig : conv9 ] clearly shows that  ( [ eq : fixed],[eq : fstart ] ) converges linearly ( in 68 iterations ) , while newton s method has quadratic convergence .",
    "only four iterations are needed .",
    "the computational cost per iteration is , of course , higher for newton s method than for the fixed - point iteration , but it is the same at each step . recall that the underlying size of the matrix @xmath183 , that is inverted according to  ( [ eq : r ] ) , grows linearly with the number of steps needed in the fixed - point iteration .",
    "this example therefore demonstrates that one can invert and compress a linear system of the type  ( [ eq : r ] ) in sub - linear time .",
    "the integral equation  ( [ eq : inteq1a ] ) comes from a boundary value problem for laplace s equation where the potential field @xmath184 at a point @xmath12 in the plane is related to the layer density @xmath7 via @xmath185 see  ( * ? ? ? * section 2.1 ) .    , left image , but with the program demo3c.m .",
    "the potential @xmath184 at @xmath186 is evaluated via  ( [ eq : uofr ] ) and npan=14 is used.,height=249 ]    figure  [ fig : conv3c ] shows how the field solution @xmath184 of  ( [ eq : uofr ] ) converges with mesh refinement at a point @xmath186 inside the contour @xmath2 of  ( [ eq : gamma ] ) .",
    "we see that the accuracy in @xmath184 , typically , is one digit better than the accuracy of the dipole moment @xmath24 of  ( [ eq : q ] ) .",
    "one can therefore say that measuring the field error at a point some distance away from the corner is more forgiving than measuring the dipole moment error .",
    "it is possible to construct examples where the difference in accuracy between field solutions and moments of layer densities are more pronounced and this raises the question of how accuracy best should be measured in the context of solving integral equations .",
    "we do not have a definite answer , but think that higher moments of layer densities give more fair estimates of overall accuracy than do field solutions at points some distance away from the boundary .",
    "see , further , appendix e.",
    "assume that we have a modification of  ( [ eq : inteq3 ] ) which reads @xmath187 here @xmath22 and @xmath188 are as in  ( [ eq : inteq3 ] ) , @xmath189 is a new , bounded , integral operator , and @xmath190 is an unknown layer density to be solved for .",
    "this section shows how to apply rcip to  ( [ eq : inteq7 ] ) using a simplified version of the scheme in  @xcite .",
    "let us , temporarily , expand  ( [ eq : inteq7 ] ) into a system of equations by introducing a new layer density @xmath191 .",
    "then @xmath192 and after discretization on the fine mesh @xmath193 + \\left [   \\begin{array}{cc }   { \\bf 0}_{\\rm fin } & { \\bf m}_{\\rm fin } \\\\ -{\\bf k}_{\\rm fin } & { \\bf 0}_{\\rm fin } \\end{array }   \\right ] \\right ) \\left[\\begin{array}{c }   \\boldsymbol{\\rho}_{1{\\rm fin } } \\\\    \\boldsymbol{\\rho}_{2{\\rm fin } } \\end{array}\\right ] = \\left[\\begin{array}{c }     { \\bf g}_{\\rm fin } \\\\ 0 \\end{array } \\right]\\ , .",
    "\\label{eq : disc1}\\ ] ] standard rcip gives @xmath194 + \\left [   \\begin{array}{cc }   { \\bf 0}_{\\rm coa }          & { \\bf m}_{\\rm coa}^{\\circ } \\\\",
    "-{\\bf k}_{\\rm coa}^{\\circ } & { \\bf 0}_{\\rm coa } \\end{array }   \\right ] \\left [   \\begin{array}{cc }   { \\bf r}_1   & { \\bf r}_3 \\\\   { \\bf r}_2   & { \\bf r}_4 \\end{array }   \\right ] \\right ) \\left[\\begin{array}{c }   \\tilde{\\boldsymbol{\\rho}}_{1{\\rm coa } } \\\\    \\tilde{\\boldsymbol{\\rho}}_{2{\\rm coa } } \\end{array}\\right ] = \\left[\\begin{array}{c }     { \\bf g}_{\\rm coa } \\\\ 0 \\end{array } \\right]\\ , , \\label{eq : disc2}\\ ] ] where the compressed inverse @xmath71 is partitioned into four equisized blocks .",
    "now we replace @xmath195 and @xmath196 with a single unknown @xmath68 via @xmath197 the change of variables  ( [ eq : single1],[eq : single2 ] ) is chosen so that the second block - row of  ( [ eq : disc2 ] ) is automatically satisfied . the first block - row of  ( [ eq : disc2 ] ) becomes @xmath198\\tilde{\\boldsymbol{\\rho}}_{\\rm coa}={\\bf g}_{\\rm coa}\\ , .",
    "\\label{eq : disc3}\\end{gathered}\\ ] ]    when  ( [ eq : disc3 ] ) has been solved for @xmath68 , the weight - corrected version of the original density @xmath190 can be recovered as @xmath199    .",
    "[ fig : conv10 ]    figure  [ fig : conv10 ] shows results for  ( [ eq : inteq7 ] ) with @xmath189 being the double layer potential @xmath200 the left image shows the convergence of @xmath24 of  ( [ eq : q ] ) with @xmath30 using the inner product preserving discretization scheme of appendix d for  ( [ eq : inteq7 ] ) as implemented in demo10.m . the right image shows @xmath24 produced with rcip according to  ( [ eq : disc3],[eq : hat1 ] ) as implemented in demo10b.m .",
    "the reference value for @xmath24 is computed with the program demo10c.m , which uses inner product preserving discretization together with compensated summation  @xcite in order to enhance the achievable accuracy .",
    "one can see that , in addition to being faster , rcip gives and extra digit of accuracy .",
    "actually , it seems as if the scheme in demo10.m converges to a @xmath24 that is slightly wrong .    in conclusion , in this example and in terms of stability , the rcip method is better than standard inner product preserving discretization and on par with inner product preserving discretization enhanced with compensated summation . in terms of computational economy and speed , rcip greatly outperforms the two other schemes .",
    "the nystrm scheme of section  [ sec : disc ] discretizes  ( [ eq : inteq3 ] ) using composite 16-point gauss  legendre quadrature .",
    "this works well as long as the kernel of the integral operator @xmath22 and the layer density are smooth on smooth @xmath2 .",
    "when the kernel is not smooth on smooth @xmath2 , the quadrature fails and something better is needed .",
    "see  @xcite for a comparison of the performance of various modified high - order accurate nystrm discretizations for weakly singular kernels and  @xcite for a recent high - order general approach to the evaluation of layer potentials .",
    "we are not sure what modified discretization is optimal in every situation .",
    "when logarithmic- and cauchy - singular operators need to be discretized in sections  [ sec : helmdiri][sec : helmfield ] , below , we use two modifications to composite gauss ",
    "legendre quadrature called _ local panelwise evaluation _ and _ local regularization_. see  ( * ? ? ?",
    "* section 2 ) for a description of these techniques .",
    "let @xmath201 be the domain enclosed by the curve @xmath2 and let @xmath202 be the exterior to the closure of @xmath201 .",
    "the exterior dirichlet problem for the helmholtz equation @xmath203 can be modeled using a combined integral representation  ( * ? ? ?",
    "* chapter 3 ) @xmath204 where @xmath205 is the fundamental solution to the helmholtz equation in two dimensions @xmath206 here @xmath207 is a hankel function of the first kind .",
    "insertion of  ( [ eq : helmrep1 ] ) into  ( [ eq : helmbv1 ] ) gives the combined field integral equation @xmath208 where @xmath209    figure  [ fig : conv11 ] shows the performance of rcip applied to  ( [ eq : dirihelm ] ) for 1000 different values of @xmath210 $ ] .",
    "the program demo11.m is used .",
    "the boundary @xmath2 is as in  ( [ eq : gamma ] ) with @xmath26 and the boundary conditions are chosen as @xmath211 with @xmath212 inside @xmath2 .",
    "the error in @xmath184 of  ( [ eq : helmrep1 ] ) is evaluated at @xmath213 outside @xmath2 .",
    "since the magnitude of @xmath184 varies with @xmath214 , peaking at about unity , the absolute error is shown rather than the relative error .",
    "the number of panels on the coarse mesh is chosen as npan=0.6*omega+18 rounded to the nearest integer .",
    "the exterior neumann problem for the helmholtz equation @xmath215 can be modeled as an integral equation in several ways .",
    "we shall consider two options : an `` analogy with the standard approach for laplace s equation '' , which is not necessarily uniquely solvable for all @xmath214 , and a `` regularized combined field integral equation '' which is always uniquely solvable .",
    "see , further ,  @xcite .",
    "let @xmath216 be the adjoint to the double - layer integral operator @xmath217 of  ( [ eq : koper ] ) @xmath218 insertion of the integral representation @xmath219 into  ( [ eq : helmbv2 ] ) gives the integral equation @xmath220    figure  [ fig : conv12 ] shows the performance of rcip applied to  ( [ eq : neuhelm1 ] ) .",
    "the program demo12.m is used and the setup is the same as that for the dirichlet problem in section  [ sec : helmdiri ] . a comparison between figure  [ fig : conv12 ] and",
    "figure  [ fig : conv11 ] shows that the number of gmres iterations needed for full convergence now grows much faster with @xmath214 .",
    "furthermore , the relative error in the solution to the neumann problem is larger , particularly so when @xmath214 happens to be close to values for which the operator @xmath221 in  ( [ eq : neuhelm1 ] ) has a nontrivial nullspace .",
    "recall that  ( [ eq : dirihelm ] ) is always uniquely solvable while  ( [ eq : neuhelm1 ] ) is not .",
    "the literature on regularized combined field integral equations for the exterior neumann problem is rich and several formulations have been suggested .",
    "we shall use the representation  @xcite @xmath222 which after insertion into  ( [ eq : helmbv2 ] ) gives the integral equation @xmath223 where @xmath224    the hypersingular operator @xmath225 of  ( [ eq : t ] ) can be expressed as a sum of a simple operator and an operator that requires differentiation with respect to arc length only  @xcite @xmath226 this makes it possible to write  ( [ eq : neuhelm2 ] ) in the form @xmath227 where @xmath228 , @xmath229 , and the action of the operators @xmath230 , @xmath231 , and @xmath232 is given by @xmath233 all integral operators in  ( [ eq : neuhelm3 ] ) are such that their discretizations admit the low - rank decomposition  ( [ eq : decomp ] ) .",
    "we use the temporary expansion technique of section  [ sec : compose ] for  ( [ eq : neuhelm3 ] ) , with two new layer densities that are later eliminated , to arrive at a single compressed equation analogous to  ( [ eq : disc3 ] ) .",
    "that equation involves nine equisized blocks of the compressed inverse @xmath71 .    solving the problem in the example of section  [ sec : analogy ] again",
    ", we now take the number of panels on the coarse mesh as npan=0.6*omega+48 rounded to the nearest integer .",
    "figure  [ fig : conv13 ] shows results from the program demo13b.m .",
    "the resonances , visible in figure  [ fig : conv12 ] , are now gone .",
    "it is interesting to observe in figure  [ fig : conv13 ] that , despite the presence of several singular operators and compositions in  ( [ eq : neuhelm3 ] ) , the results produced with rcip are essentially fully accurate and the number of gmres iterations needed for convergence grows very slowly with @xmath214 .",
    "the program demo13c.m differs from demo13b.m in that it uses local regularization for the cauchy - singular operators of  ( [ eq : c1 ] ) and  ( [ eq : c2 ] ) rather than local panelwise evaluation .",
    "the results produced by the two programs are virtually identical , so we do not show yet another figure .     to the exterior dirichlet helmholtz problem of section  [ sec : helmdiri ] evaluated at 62392 points on a cartesian grid using demo11b.m with @xmath234 .",
    "the source at @xmath212 is shown as a blue star.,height=321 ]    , but the exterior neumann helmholtz problem is solved using demo13d.m .",
    "the accuracy is even higher than in figure  [ fig : dirifield].,height=321 ]",
    "strictly speaking , a boundary value problem is not properly solved until its solution can be accurately evaluated in the entire computational domain .",
    "the program demo11b.m is a continuation of demo11.m which , after solving  ( [ eq : dirihelm ] ) for @xmath68 with rcip and forming @xmath119 via  ( [ eq : wcd ] ) , computes the solution @xmath184 via  ( [ eq : helmrep1 ] ) using three slightly different discretizations :    * when @xmath12 is away from @xmath2 , 16-point gauss  legendre quadrature is used in  ( [ eq : helmrep1 ] ) on all quadrature panels . * when @xmath12 is close to @xmath2 , but not close to a panel neighboring a corner , 16-point gauss  legendre quadrature is used in  ( [ eq : helmrep1 ] ) on panels away from @xmath12 and local panelwise evaluation is used for panels close to @xmath12 .",
    "* when @xmath12 is close to a panel neighboring a corner , the density @xmath68 is first used to reconstruct @xmath144 according to section  [ sec : recon ] .",
    "then 16-point gauss  legendre quadrature is used in  ( [ eq : helmrep1 ] ) on panels away from @xmath12 and local panelwise evaluation is used for panels close to @xmath12 .",
    "the first two discretizations only use the coarse grid on @xmath2 .",
    "the third discretization needs a grid on a partially refined mesh on @xmath2 .",
    "the program demo13d.m is a continuation of demo13b.m which , after solving  ( [ eq : neuhelm2 ] ) with rcip as described in section  [ sec : regul ] , computes the solution @xmath184 via  ( [ eq : helmrep3 ] ) using the three discretizations of the previous paragraph .",
    "figure  [ fig : dirifield ] and figure  [ fig : neufield ] show that rcip in conjunction with the modified quadrature rules of  ( * ? ? ?",
    "* section 2 ) is capable of producing very accurate solutions to exterior helmholtz problems in , essentially , the entire computational domain .",
    "the idea to make this tutorial came up during a discussion with alex barnett and adrianna gillman of 5/20/12 at the facm12 conference at njit . input and",
    "feedback from these colleagues and from rikard ojala has been of great value .",
    "the work was supported by the swedish research council under contract 621 - 2011 - 5516 .    * * * * * *",
    "let @xmath236 and @xmath237 be two column vectors , corresponding to the discretization of two panelwise polynomials with panelwise degree 15 on the coarse mesh of @xmath2 . then @xmath238 because composite 16-point gauss  legendre quadrature has panelwise polynomial degree 31 .",
    "the diagonal matrix @xmath59 has size @xmath239 .    since there are @xmath240 linearly independent choices of @xmath241 and of @xmath237 it follows from  ( [ eq : a1 ] ) that @xmath242 which , using  ( [ eq : pw ] ) , can be rewritten @xmath243",
    "the compression of  ( [ eq : inteq3b ] ) , leading up to  ( [ eq : inteq4 ] ) , was originally described in  ( * ? ? ?",
    "* section 6.4 ) .",
    "here we give a summary .",
    "the starting point is  ( [ eq : inteq3 ] ) which , using the operator split analogous to  ( [ eq : split1],[eq : split2 ] ) @xmath244 and the variable substitution @xmath245 gives the right preconditioned equation @xmath246    now , let us take a close look at  ( [ eq : inteq4a ] ) .",
    "we observe that @xmath247 is an operator whose action on any function gives a function that is smooth on the innermost two panels of the coarse grid on @xmath27 .",
    "this is so since @xmath248 is constructed so that its action on any function gives a function that is smooth on the innermost two panels of the coarse grid on @xmath27 .",
    "furthermore , the right hand side @xmath249 of ( [ eq : inteq4a ] ) is assumed to be panelwise smooth . using an argument of contradiction",
    "we see that @xmath250 has to be a panelwise smooth function on the innermost two panels of the coarse grid on @xmath27 .",
    "having concluded that @xmath250 is panelwise smooth close to the corner we can write @xmath251 we also have @xmath252 the discrete version of  ( [ eq : subst2 ] ) on the fine grid @xmath253 and the relations  ( [ eq : split2 ] ) and  ( [ eq : decomp ] ) which we now repeat : @xmath254    substitution of  ( [ eq : b1],[eq : b2],[eq : b3],[eq : b4],[eq : b5 ] ) into  ( [ eq : inteq3b ] ) , which we now repeat : @xmath255 gives @xmath256 applying @xmath257 ( or @xmath127 ) to the left in  ( [ eq : b7 ] ) and using the identities  ( [ eq : pwtp ] ) ( or  ( [ eq : qp ] ) ) gives the compressed equation  ( [ eq : inteq4 ] ) .",
    "the recursion  ( [ eq : recur ] ) for the rapid construction of the diagonal blocks of the compressed weighted inverse @xmath71 was originally derived in  ( * ? ? ?",
    "* section 7 ) using different notation and different meshes than in the present tutorial .",
    "the recursion was derived a second time in  ( * ? ? ?",
    "* section 7 ) using new meshes .",
    "better notation was introduced in  ( * ? ? ?",
    "* section 6 ) .",
    "a third derivation , in a general setting , takes place in  ( * ? ? ?",
    "* section 5 ) and it uses the same notation and meshes as in the present tutorial .    a problem",
    "when explaining the derivation of  ( [ eq : recur ] ) is that one needs to introduce intermediate meshes and matrices whose appearance may cause enervation at a first glance . particularly so",
    "since these meshes and matrices are not needed in the final expression  ( [ eq : recur ] ) .",
    "we emphasize that the underlying matrix property that permits the recursion is the low rank of certain off - diagonal blocks in discretizations of @xmath248 of  ( [ eq : ko ] ) on nested meshes .     for @xmath258 and @xmath28 .",
    "the type a mesh has @xmath259 panels .",
    "the type b mesh has six panels .",
    "the type c mesh has four panels .",
    "the type a mesh is the restriction of the fine mesh to @xmath86 . for @xmath260 ,",
    "the type c mesh is the restriction of the coarse mesh to @xmath27 .",
    "the type a mesh and the type b mesh coincide for @xmath261.,height=124 ]    the recursion  ( [ eq : recur ] ) only uses uses one type of mesh explicitly  the type b mesh of figure  [ fig : subsets ] . on each @xmath86",
    "there is a type b mesh and a corresponding discretization of @xmath248 denoted @xmath262 .",
    "here we need two new types of meshes denoted type a and type c , along with corresponding discrete operators .",
    "for example , @xmath263 is the discretization of @xmath22 on a type a mesh on @xmath86 .",
    "the three types of meshes are depicted in figure  [ fig : types ] .",
    "actually , a straight type c mesh was already introduced in figure  [ fig : pbc ] .",
    "now we define @xmath147 as @xmath264 where @xmath265 and @xmath266 are prolongation operators ( in parameter ) from a grid on a type c mesh on @xmath86 to a grid on a type a mesh on @xmath86 .",
    "note that @xmath147 for @xmath267 , according to the definition  ( [ eq : ridef ] ) , is identical to the full diagonal @xmath73 block of @xmath71 of  ( [ eq : r ] ) .",
    "note also that @xmath268 comes cheaply .",
    "the rest of this appendix is about finding an expression for @xmath147 in terms of @xmath105 that is cheap to compute .",
    "let us split @xmath269 into two parts @xmath270 where @xmath271 and @xmath272 is such that @xmath273 holds to about machine precision , compare  ( [ eq : decomp ] ) .",
    "the prolongation operators @xmath274 and @xmath275 act from a grid on a type b mesh to a grid on a type a mesh .",
    "it holds that @xmath276 summing up , we can rewrite  ( [ eq : ridef ] ) as @xmath277    the subsequent steps in the derivation of  ( [ eq : recur ] ) are to expand the term within parenthesis in  ( [ eq : sumup ] ) in a neumann series , multiply the terms in this series with @xmath278 from the left and with @xmath274 from the right , and bring the series back in closed form .",
    "the result is @xmath279^{-1 } { \\bf p}_{\\rm bc}\\ , , \\label{eq : result}\\ ] ] which , in fact , is  ( [ eq : recur ] ) in disguise . to see this , recall from  ( [ eq : ridef ] ) that @xmath280",
    "then @xmath281 where the second equality uses @xmath282 , see appendix a. substitution of  ( [ eq : final ] ) in  ( [ eq : result ] ) gives the recursion in the familiar form @xmath283",
    "in  @xcite , bremer describes a scheme that stabilizes the solution to the discretized system  ( [ eq : inteq3b ] ) on the fine mesh .",
    "the scheme can be interpreted as an inner product preserving discretization . in practice",
    "it corresponds to making a similarity transformation of the system matrix .",
    "while inner product preserving nystrm discretization elegantly solves problems related to stability ( the condition number of the system matrix is improved ) it does not reduce the number of discretization points ( unknowns ) needed to achieve a given precision in the solution .",
    "neither does it affect the spectrum of the system matrix ( similarity transformations preserve eigenvalues ) and hence it does not in any substantial way improve the convergence rate of the gmres iterative method  ( * ? ? ?",
    "* lecture 35 ) .    for completeness",
    ", we have implemented inner product preserving nystrm discretization in the program demo1d.m .",
    "the program is a continuation of demo1b.m where we also have replaced  ( [ eq : inteq1a ] ) with the more stable integral equation  ( [ eq : inteq1b ] ) .",
    "this should facilitate comparison with the program demo3b.m and the results shown in figure  [ fig : conv3 ] .",
    "figure  [ fig : conv1de ] shows results produced by demo1d.m . beyond @xmath284 one",
    "now achieves essentially full machine precision in @xmath24 of  ( [ eq : q ] ) . despite this success , inner product preserving nystrm discretization",
    "can perhaps not quite compete with the rcip method in this example .",
    "the differences in performance relate to issues of memory and speed .",
    "the rcip method uses a much smaller linear system ( @xmath240 unknowns ) than does inner product preserving nystrm discretization ( @xmath285 unknowns ) .",
    "besides , the rcip method converges in only eight gmres iterations , irrespective of @xmath30 .",
    "see figure  [ fig : conv3 ] .",
    "it is considered difficult to solve integral equations on piecewise smooth boundaries .",
    "one reason being that solutions ( layer densities ) often have complicated asymptotics close to corner vertices .",
    "also stable numerical schemes , such as that of appendix d , are burdened with the task of resolution .",
    "it takes a lot of mesh refinement to resolve non - polynomial - like layer densities with polynomial basis functions .",
    "sometimes layer densities diverge , sometimes they stay bounded , but they are seldom polynomial - like close to corner vertices . while we refrain from giving a characterization of what properties of fredholm second kind integral equations give rise to unbounded solutions we observe the following :    * the solution @xmath7 to  ( [ eq : inteq1a ] ) diverges in corners whenever @xmath286 and @xmath10 is such that @xmath7 exists .",
    "figure  [ fig : conv67 ] illustrates this for @xmath45 . *",
    "the size of the zone where the asymptotic shape of a layer density is visible depends on the smoothness of the solution to the pde that underlies the integral equation .",
    "see  ( * ? ? ?",
    "* figure 3 ) . *",
    "the divergence of layer densities close to corner vertices can be very strong . in classical materials science applications it is not unusual with layer densities that barely lie in @xmath287  ( * ? ? ? * section 2 ) .",
    "in metamaterial applications layer densities may barely lie in @xmath288  ( * ? ? ? * section 3 ) .",
    "furthermore , it is likely that @xmath289 spaces are not the most natural function spaces for the characterization of layer densities  ( * ? ? ?",
    "* section 5 ) .",
    "variable separation is often used to predict the asymptotic behavior of layer densities close to corner vertices .",
    "see , for example ,  ( * ? ? ?",
    "* section 2 ) and  ( * ? ? ?",
    "* section 2 ) .",
    "but perhaps asymptotic studies of layer densities are not that important ? assume that there are two different fredholm second kind integral equations for the same underlying pde : one where the layer density is bounded and one where it is unbounded .",
    "if the rcip method is to be used , it really does not matter which equation is chosen .",
    "the recursion  ( [ eq : recur],[eq : rstart ] ) might need fewer steps for the equation with a bounded solution .",
    "the achievable accuracy for functionals of the layer density , on the other hand , is often slightly higher if computed from the unbounded solution .",
    "the reason being , loosely speaking , that more information can be contained in a rapidly varying function than in a slowly varying function ."
  ],
  "abstract_text": [
    "<S> recursively compressed inverse preconditioning ( rcip ) is a numerical method for obtaining highly accurate solutions to integral equations on piecewise smooth surfaces . </S>",
    "<S> the method originated in 2008 as a technique for solving laplace s equation in two - dimensional domains with corners . in a series of subsequent papers the technique </S>",
    "<S> was then refined and extended in various directions as to cover a broad range of boundary value problems in physics and engineering . </S>",
    "<S> the purpose of the present paper is threefold : first , to review the rcip method in a simple setting . </S>",
    "<S> second , to show how easily the method can be implemented in matlab . </S>",
    "<S> third , to present new applications of rcip to integral equations of scattering theory on planar curves with corners . </S>"
  ]
}
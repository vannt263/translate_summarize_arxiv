{
  "article_text": [
    "there are many recent studies of so - called protected nodes in various classes of random trees , see e.g.   @xcite .",
    "a node is _ protected _ ( more precisely , two - protected )",
    "if it is not a leaf and none of its children is a leaf .    in this paper",
    "we consider the number of protected nodes in @xmath2-ary search trees ( see section  [ mary ] for definitions ) , by putting them in context of generalised plya urns .",
    "the following result is our main theorem .",
    "we let @xmath6 denote convergence in distribution and denote a normal distribution by @xmath7 .",
    "[ main]let @xmath8 be the number of protected nodes in a ternary search tree with @xmath9 keys . then @xmath10    for a binary search tree , we obtain by the same method a new proof of the following result , which earlier has been obtained by different methods , first by mahmoud and ward @xcite ( using generating functions ) , and later in @xcite ( using fringe trees ) .",
    "[ binary]let @xmath11 be the number of protected nodes in a binary search tree .",
    "then @xmath12    [ expectedvalues ] theorems [ main ] and [ binary ] imply that @xmath13 and @xmath14 .",
    "recall that necessary and sufficient conditions for @xmath15 convergence of a sequence @xmath16 of random variables , are that @xmath17 ( where @xmath18 denotes convergence in probability ) and that the sequence @xmath16 is uniformly integrable .",
    "note that theorems [ main ] and [ binary ] imply @xmath19 and @xmath20 , respectively , since if a sequence of random variables converges in distribution to a constant it also converges in probability to that constant . since @xmath21 and @xmath22 , uniformly integrability for the sequences @xmath23 and @xmath24 obviously holds .",
    "hence , @xmath23 and @xmath24 converge in @xmath15 to @xmath25 and @xmath26 , respectively ; in particular , @xmath13 and @xmath27 .",
    "we conjecture that also the variances ( and higher moments ) converge in theorems [ main ] and [ binary ] .",
    "the methods apply to larger @xmath0 too , at least in principle , see sections [ polya ] and [ sm ] .",
    "similarly , we may consider the one - protected nodes , i.e.  the non - leaves .",
    "these are easier to analyze than the two - protected nodes and using a minor variation of a plya urn earlier used to study the total number of nodes @xcite , we prove in sections [ sleaves3 ] and [ oneprotected ] normal limit laws for the number of one - protected nodes and the number of leaves in an @xmath2-ary search tree for all @xmath4 .",
    "a ( generalised ) plya urn process is defined as follows , see e.g.  @xcite or @xcite .",
    "there are balls of @xmath28 types ( or colours ) @xmath29 , and for each @xmath30 a random vector @xmath31 , where @xmath32 is the number of balls of type @xmath33 in the urn at time @xmath30 .",
    "the urn starts with a given vector @xmath34 . for each type @xmath33",
    ", there is an activity ( or weight ) @xmath35 and a random vector @xmath36 .",
    "the urn evolves according to a markov process . at each time @xmath37",
    ", one ball is drawn at random from the urn , with the probability of any ball proportional to its activity .",
    "thus , the drawn ball has type @xmath38 with probability @xmath39 .",
    "if the drawn ball has type @xmath40 , it is replaced together with @xmath41 balls of type @xmath42 , @xmath43 , where the vector @xmath44 has the same distribution as @xmath45 and is independent of everything else that has happened so far .",
    "( we allow @xmath46 , which means that the drawn ball is _ not _ replaced . )",
    "we let @xmath47 denote the @xmath48 matrix @xmath49 the matrix @xmath47 with its eigenvalues and eigenvectors is central for proving limit theorems .",
    "the basic assumptions in @xcite are the following .",
    "we say that a type @xmath40 is _ dominating _ if every other type @xmath42 may appear at some time in an urn started with a single ball of type @xmath40 .    *",
    "@xmath50 for @xmath51 ( i.e. , balls of other types than the drawn ball are never removed ) ; @xmath52 . *",
    "@xmath53 for all @xmath54 . *",
    "the largest eigenvalue @xmath55 of @xmath47 is positive . *",
    "the largest eigenvalue @xmath55 is simple .",
    "* there exists a dominating type @xmath33 with @xmath56 , i.e. , we start with at least one ball of a dominating type .",
    "* @xmath55 is an eigenvalue of the submatrix of @xmath57 given by the dominating types .",
    "furthermore , @xcite says that the process becomes _ essentially extinct _ if at some time there are no balls of any dominating type left .",
    "we will also use the following simlifying assumption .    * with probability 1 , the urn never becomes essentially extinct .    in",
    "the plya urns used in this paper , it is easily seen ( from the definitions using trees ) that every type with non - zero activity is dominating . if we remove rows and columns corresponding to the types with activity 0 from @xmath57 , then the removed columns are identically 0 , so the set of non - zero eigenvalues of @xmath57 is not changed .",
    "the remaining matrix is irreducible , and using the perron ",
    "frobenius theorem , it is easy to verify all conditions ( a1)(a6 ) , see ( * ? ? ?",
    "* lemma 2.1 ) .",
    "furthermore , in our urns there will always be a ball of positive activity , so essential extinction is impossible .    before stating the results that we use , we need some notation . with a vector @xmath58 we mean a column vector , and we write @xmath59 for a row vector .",
    "we denote the transpose of a matrix @xmath47 as @xmath60 . by an eigenvector of @xmath61 we mean a right eigenvector",
    ", a left eigenvector is the same as an eigenvector of the matrix @xmath60 .",
    "if @xmath62 and @xmath58 are vectors then @xmath63 is a scalar while @xmath64 is a @xmath48 matrix .",
    "we also use the notation @xmath65 for @xmath66 .",
    "we let @xmath55 denote the largest eigenvalue .",
    "let @xmath67 denote the ( column ) vector of activities , and let @xmath68 and @xmath69 denote left and right eigenvectors of @xmath57 corresponding to the largest eigenvector @xmath55 , i.e. , vectors satisfying @xmath70 we assume that @xmath69 and @xmath68 are normalized such that @xmath71 see ( * ? ? ?",
    "* equations ( 2.2)(2.3 ) ) .",
    "we write @xmath72 .",
    "we define @xmath73 and @xmath74 , where @xmath75 is the @xmath48 identity matrix .",
    "( thus @xmath76 is a one - dimensional projection onto the eigenspace corresponding to @xmath77 , such that @xmath78 commutes with the matrix @xmath47 , see ( * ? ? ?",
    "* equation ( 2.2 ) ) ) .",
    "we define the matrices @xmath79 where we recall that @xmath80 .",
    "it is proved in @xcite that , under assumptions ( a1)(a7 ) , @xmath81 is asymptotically normal if @xmath82 for each eigenvalue @xmath83 ; more precisely , if @xmath84 for each such @xmath85 , then @xmath86 for some @xmath87 and @xmath88 .",
    "the asymptotic covariance matrix @xmath88 may be calculated in different ways ; we use the following results from @xcite , which apply under different additional assumptions .",
    "[ polyathm ] assume and that we have normalized as in .",
    "also assume that @xmath84 for each eigenvalue @xmath83 .",
    "suppose that @xmath89 for some @xmath90 and every @xmath33 .",
    "then , as @xmath91 , @xmath92 with @xmath93 and covariance matrix @xmath94 equal to @xmath95 , with @xmath96 as in .    [ simplepolyathm ] assume , and that we have normalized as in",
    ". also assume that @xmath84 for each eigenvalue @xmath83 . if the matrix @xmath47 is diagonalisable , and @xmath97 and @xmath98 are dual bases of left and right eigenvectors , respectively , i.e. , @xmath99 , @xmath100 and @xmath101 ( where @xmath102 is the kronecker delta , and the @xmath103 , @xmath104 , do not have to be distinct ) .",
    "then , as @xmath91 , @xmath92 with @xmath105 and covariance matrix @xmath94 equal to @xmath106 with the matrix @xmath107 as in .",
    "we recall the definition of @xmath2-ary search trees , see e.g.  @xcite or @xcite .",
    "an @xmath2-ary search tree , where @xmath109 , is constructed recursively from a sequence of @xmath9 _ keys _ ( numbers ) .",
    "we assume that the keys are i.i.d .",
    "uniform random numbers in @xmath110 $ ] .",
    "( only the order of the keys matter , so alternatively , we may assume that the keys form a uniformly random permutation of @xmath111 . )",
    "each node may contain up to @xmath112 keys .",
    "we start with a tree containing just an empty root .",
    "the first @xmath112 keys are put in the root , and are placed in increasing order from left to right ; they divide the set of real numbers into @xmath0 intervals @xmath113 .",
    "when the root is full ( after the first @xmath112 keys are added ) , it gets @xmath114 children that are initially empty , and each further key is passed to one of the children depending on which interval it belongs to ; a key in @xmath115 is passed to the @xmath40:th child .",
    "( the binary search tree is the simplest case where keys are passed to the left or right child depending on whether it is larger or smaller than the key in the root . )",
    "the procedure repeats recursively in the subtrees until all keys are added to the tree .",
    "nodes that contain at least one key are called _ internal _ , while empty nodes are called _ external_. we regard the @xmath0-ary search tree as consisting only of the internal nodes ; the external nodes are places for potential additions , and are useful when discussing the tree ( e.g.  below ) , but are not really part of the tree .",
    "thus , a _ leaf _ is an internal node that has no internal children , but it may have external children .",
    "( it will have external children if it is full , but not otherwise . ) similarly , a protected node is an internal node that is not a leaf , and has no child that is a leaf .",
    "( it may have external nodes as children . )",
    "we say that a node with @xmath116 keys has @xmath117 _ gaps _ , while a full node has no gaps .",
    "it is easily seen that a @xmath0-ary search tree with @xmath9 keys has @xmath118 gaps ; the gaps correspond to the intervals of real numbers between the keys ( and @xmath119 ) , and a new key has the same probability @xmath120 of belonging to any of the gaps .",
    "thus the evolution of the @xmath0-ary search tree may be described by choosing a gap uniformly at random at each step .",
    "equivalently , the probability that the next key is added to a node is proportional to the number of gaps at that node .",
    "plya urns have been used in some earlier studies , e.g.  @xcite , to describe the number of nodes in @xmath2-ary search trees containing @xmath33 keys where @xmath121 ; then a node containing @xmath33 keys is called a node of type @xmath33 and thus the generalised plya urn has @xmath2 different types .",
    "it has been shown that for this process , when @xmath4 the number of different types has an asymptotic multivariate normal distribution , but this does not hold for larger @xmath2 .",
    "( since the condition @xmath122 for @xmath123 on the eigenvalues of the matrix @xmath57 in holds only if @xmath3 . )",
    "since the number of nodes in the whole tree is a linear combination of these numbers , this implies in particular that the distribution of the random number of nodes in an @xmath2-ary search tree containing @xmath30 keys is asymptotically normal for @xmath4 . in this plya urn , with one ball representing each node , the activity of a ball is the number of gaps , i.e. , @xmath117 for a ball of type @xmath116 , and @xmath124 for a ball of type @xmath125 .",
    "alternatively , see @xcite , we can use a plya urn where each ball represents a gap ; thus a node with @xmath33 keys corresponds to @xmath126 balls for @xmath127 , and these balls are all given type @xmath40 .",
    "( full nodes are ignored . )",
    "this is thus an urn with @xmath112 types , all with activities 1 .",
    "we will see that it is possible to use a generalised plya urn also to study protected nodes in an @xmath2-ary search tree , although the urn consists of quite a few different types .",
    "* description of the types in the plya urn . * given an @xmath2-ary search tree @xmath128 with @xmath30 keys together with its external nodes , erase all edges that connect two internal non - leaves .",
    "this yields a forest of small trees , where ( assuming @xmath129 ) each tree has a root that is a non - leaf in @xmath128 while all other nodes are leaves or external nodes in @xmath128 .",
    "we regard these small trees as the balls in our generalised plya urn .",
    "the type of a ball ( tree ) is the type of the tree as an unordered tree , i.e. , up to permutations of the children .",
    "the type of a tree in the urn is thus described by the numbers @xmath130 , @xmath131 , of children of the root with @xmath40 keys ; each of these children is an external node ( @xmath132 ) or a leaf ( @xmath133 ) , and it has itself children only when @xmath134 when it has @xmath0 external children ; thus the type is uniquely determined by @xmath135 , and we can label the type by @xmath136 . since the root of any of the small trees has @xmath0 children ( including external ones ) in the original tree @xmath128 , we have @xmath137 , ( with the remainder @xmath138 equal to the number of erased edges to children in the original tree @xmath128 that are non - leaves ) .",
    "furthermore , the case @xmath139 is excluded , since the root of the small tree is a non - leaf in @xmath128 .",
    "the total number of types is thus one less than the number of compositions of @xmath0 into @xmath140 non - negative parts , i.e. , @xmath141 .",
    "the activity in the plya urn of one of these types is the number of gaps that it contains .",
    "the root has no gaps , so a tree with type @xmath136 has activity @xmath142 .",
    "moreover , if we add a new key to a leaf , it is still a leaf , so in the plya urn , this corresponds to replacing a tree by another tree where we have increased by 1 the number of keys of one of the children of the root .",
    "the same holds if we add a key to an external node that is a child of the root .",
    "however , if we add a key to an external node that is a child of a leaf , then that leaf becomes a non - leaf , so the edge from it to the root is erased and the tree is split into two ( one of which always has the type @xmath143 ) .",
    "see section  [ s2 ] for examples .",
    "note that in general , a small tree may be transformed in several different ways when we add a new key , depending on which gap it goes into .",
    "hence , the additions @xmath144 in the plya urn will be random .",
    "a protected node in @xmath128 is a non - leaf , and is therefore a root in one of the small trees .",
    "moreover , it must not have any child that is a leaf , so all its children are external nodes .",
    "thus , the number of protected nodes in @xmath128 equals the number of balls in the urn that have types @xmath145 with @xmath146 .",
    "in this section we demonstrate the technique of using the plya urn defined above to study the number of protected nodes , by applying it to the simplest case @xmath147 , the binary search tree .",
    "this gives us a new proof of theorem  [ binary ] ; for earlier proofs , see @xcite and @xcite .    for a binary tree ,",
    "the number of types in the plya urn defined above is @xmath148 .",
    "we show the different types in figure [ fig : typesbinary ] , with a numbering that will be used below .",
    "( for convenience we omit the external nodes in the figures .",
    "we use dotted lines for edges attached to external nodes . ) with our characterization of the types in section [ polya ] , the types @xmath149 correspond to @xmath150 , @xmath151 , @xmath152 , @xmath153 and @xmath154 , respectively .",
    "[ type1b ]     [ type2b ]     [ type3b ]    [ type4b ]    [ type5b ]    in a binary search tree , each leaf contains one key , so it has two external children , whereas other internal nodes have either 1 or 0 external children .",
    "there is one gap at each external node , and no gaps at any internal node . as explained in section [ mary ] , each gap ( i.e.  external node ) has activity 1 .    when a ball is drawn from the urn ( i.e. , a new key is added to the tree ) , as explained in general in section  [ polya ] , a key is either added to an external node that is a child of the root ( we return a ball of another type ) , or to an external node that is a child of a leaf ( we return two balls ) .",
    "figures [ add1][add4 ] show the transitions in the plya urn when a ball of type @xmath40 for @xmath155 is drawn ( where the types are shown in figure [ fig : typesbinary ] ) , so that the drawn ball is replaced by a new set of balls .",
    "( as said above , this set could depend on which of the nodes in the drawn type the key is added to , see figure [ add2 ] . )",
    "the activities of the different types depend on their number of gaps ; the total activities for the types @xmath156 are @xmath157 , respectively ; thus @xmath158 .",
    "[ addbinary ]                    from the transitions that are shown in figures [ add1][add4 ] , we easily obtain the matrix @xmath159 in ( [ abin ] ) .    @xmath160    to do the matrix operations in this paper we use mathematica , but one could alternatively use e.g.  maple .",
    "the eigenvalues of @xmath57 are @xmath161 .",
    "corresponding right eigenvectors of @xmath47 are : @xmath162 and corresponding left eigenvectors of @xmath47 are : @xmath163 since the eigenvalues for the matrix @xmath47 are distinct it follows automatically that @xmath164 for @xmath165 .",
    "note that we have scaled the eigenvectors so that @xmath166 and ( [ normalized ] ) hold . note also that @xmath68 is equal to the activity vector @xmath167 .",
    "this is a consequence of the fact that the total activity always increases by 1 when we draw a ball from the urn , and thus @xmath168 for each @xmath40 , see ( * ? ? ?",
    "* lemma 5.4 ) .",
    "it is easy to see that we can apply theorem [ simplepolyathm ] for this generalised plya urn .",
    "note that it is obvious that the matrix @xmath47 is diagonalisable since all eigenvalues are simple . from theorem [ simplepolyathm ]",
    "we obtain that @xmath169 , where @xmath170 is the number of balls of type @xmath33 ( in our case the number of trees that correspond to type @xmath33 in our forest ) , has asymptotically a multivariate normal distribution .",
    "let @xmath171 be equal to the number of protected nodes in the binary search tree with @xmath30 nodes .",
    "since type 4 and type 5 each contains exactly one protected node , while the other types contain no protected nodes , @xmath172 thus , theorem [ simplepolyathm ] implies that @xmath173 with parameters @xmath174 and @xmath175 since @xmath176 , theorem [ simplepolyathm ] implies , using @xmath177 in , that @xmath178 thus , to show theorem [ binary ] it remains to calculate the sum in .    to calculate the matrix @xmath107 in ( [ b ] ) we need to calculate @xmath179 in ( [ bi ] ) . in all cases except for @xmath180",
    "these are deterministic and equal to @xmath181 .",
    "we only show how to obtain @xmath182 ( since the other cases are simpler ) .",
    "as shown in figure [ add2 ] when adding a key to type 2 we can either add it to the leaf or to the external node . in case we add it to the external node ( which happens with probability 1/3 ) a node of type 2 is replaced by a node of type 1 ; this change corresponds to the column vector @xmath183 . if the key is instead added to the leaf ( which happens with probability 2/3 ) a node of type 2 is replaced by another node of type 2 ( the change of type 2 is 0 ) and a node of type 4",
    "; this change corresponds to the column vector @xmath184 .",
    "hence @xmath185 by calculating the @xmath186 s we obtain the matrix @xmath107 in ( [ b ] ) as @xmath187    from ( [ simplesigma ] ) in theorem [ simplepolyathm ] it follows that the covariance matrix @xmath94 for the asymptotic multivariate normal distribution of @xmath188 , is given by @xmath189 thus , it follows that @xmath190 thus , the proof of theorem [ binary ] is completed .",
    "we now proceed by analyzing the number of protected nodes in ternary search trees , by using the plya urn in section [ polya ] ( described for general @xmath2-ary search trees ) when @xmath191 .",
    "the 19 different types we get are shown in figure [ ternarytypes ] ( with a numbering that will be used below ) . from our characterization of the types in section [ polya ] , for example",
    "type 2 corresponds to ( 0,1,2 ) . note that type 17 , type 18 and type 19 contain one protected node each , while the other types contain no protected nodes .                                to determine the matrix @xmath47 we proceed ( as for the binary search tree ) to find the transitions when a ball ( in our case one of the 19 trees in our forest ) of type @xmath33 is chosen .",
    "figure [ add2ternary ] illustrates the different situations for how a new key could be added to a ball ( a tree ) of type 2 .",
    "all the other cases are similar , and we leave these cases as an exercise to the reader .        from the different transitions for changing a node of type @xmath33 we get the matrix @xmath47 for ternary search trees in figure [ atrinar ] .",
    "the example in figure [ add2ternary ] gives the second column of @xmath57 .",
    "the tree of type 2 has activity 8 . if it is drawn , and the new key is added to the node with only one key which happens with probability @xmath192 , then a tree of type 2 is replaced with a tree of type 1 . if the new key is instead added to one of the nodes containing two keys which happens with probability @xmath193 , then the tree of type 2 is replaced by a tree of type 8 and one tree of type 13 .",
    "thus , the second column of the matrix @xmath47 for the ternary search tree is given by @xmath194 in this way we obtain @xmath57 in figure [ atrinar ] .",
    "@xmath195    the activities of the different types are given by the vector @xmath196 these correspond to the number of gaps for the different types .",
    "the eigenvalues of the matrix @xmath47 are @xmath197 the eigenspace belonging to the eigenvalue @xmath198 ( which has algebraic multiplicity 4 ) has dimension 3 .",
    "since the dimension of the eigenspace belonging to the eigenvalue @xmath199 is not equal to the algebraic multiplicity , the matrix @xmath57 is not diagonalisable .",
    "( however , all other eigenspaces have full dimension . )",
    "hence , we can not apply theorem [ simplepolyathm ] .",
    "however , theorem [ polyathm ] can be applied since @xmath200 for each @xmath40 ( this follows since we always add exactly one key when a tree of type @xmath33 is chosen ) .    from theorem [ polyathm ]",
    "we obtain that the vector @xmath201 , where @xmath170 are the number of balls of type @xmath33 ( in our case the number of trees that correspond to type @xmath33 in our forest obtained from the ternary search tree ) , has asymptotically a multivariate normal distribution .",
    "let @xmath8 be the number of protected nodes in the ternary search tree with @xmath30 nodes .",
    "since type 17 , type 18 and type 19 each contains exactly one protected node , while the other types contain no protected nodes , @xmath202 thus , theorem [ polyathm ] implies that @xmath203 with parameters @xmath204 and , writing @xmath205 , @xmath206    using the normalization in ( [ normalized ] ) , we see that @xmath207 and that @xmath208 ( as in the binary case , @xmath209 since @xmath168 for each @xmath40 , see ( * ? ? ? * lemma 5.4 ) . ) since @xmath176 , theorem [ polyathm ] and yield @xmath210 thus , to show theorem [ main ] it remains to calculate the sum in ( [ protectedtrinvariance ] ) .    since we want to determine the matrix @xmath96 in ( [ sigma ] ) we need to determine the matrices @xmath211 and @xmath107 .",
    "we have @xmath212 , which is a @xmath213 matrix that is shown in ( [ projtrinar ] ) in the appendix . to calculate the matrix @xmath107 in ( [ b ] ) we need to calculate @xmath214 in ( [ bi ] ) .",
    "we only describe how to get @xmath215 since the other cases are analogous . from figure [ add2ternary ] ( and the explanation of that figure above )",
    "it is easy to see that @xmath216 note that @xmath180 is a @xmath213 matrix .",
    "the matrix @xmath107 is shown in ( [ bternary ] ) in the appendix .",
    "now we can use mathematica to evaluate the integral in ( [ sigma ] ) , which yields @xmath217 .",
    "finally , @xmath218 by theorem [ polyathm ] with @xmath219 .",
    "this matrix is given last in the appendix .    by and ,",
    "we only need the submatrix @xmath220 summing the @xmath221 in , which is equivalent to calculating @xmath222 , we find @xmath223 which completes the proof of theorem [ main ] .",
    "recall that a leaf is an internal node without internal children , i.e. , a node that contains at least one key and has no children except possibly external ones .",
    "the proof of theorem [ main ] yields also the following theorem .",
    "( the corresponding result for a binary search tree was considered already by devroye @xcite using two different methods , one of them a plya urn as here . )",
    "[ leaves ] let @xmath224 be the number of leaves in a ternary search tree .",
    "then , @xmath225    counting the number of leaves ( of the original ternary search tree ) in each type in figure [ ternarytypes ] , we see that the number of leaves in a subtree of type @xmath33 , @xmath226 , is given by the vector @xmath227 hence , @xmath228 . by the proof of theorem [ main ] ,",
    "the vector @xmath229 has asymptotically a multivariate normal distribution , and it follows that @xmath230 with , using ( [ v1trin ] ) and ( [ leaf ] ) , @xmath231 and , using the covariance matrix @xmath94 shown in the appendix , @xmath232        however , it is also possible to show theorem [ leaves ] using a much simpler plya urn process , where we only need to consider four different types .",
    "we again chop up the ternary search tree into small subtrees , now using the following types of subtrees .",
    "type 1 is an external node which is not a child of a leaf .",
    "type 2 is a node containing one key .",
    "type 3 is a leaf containing two keys together with its three external children .",
    "type 4 is an internal node containing two keys which is not a leaf ( i.e. , it has less than three external children ) .",
    "the types are shown in figure [ leaftypes ] .",
    "note that all nodes in the ternary search tree belong to exactly one such subtree .",
    "a ball of type 1 has activity 1 ; when it is drawn it is replaced by one ball of type 2 .",
    "a ball of type 2 has activity 2 ; when it is drawn it is replaced by one ball of type 3 .",
    "a ball of type 3 has activity 3 ; when it is drawn it is replaced by one ball of type 2 , two balls of type 1 and one ball of type 4 .",
    "a ball of type 4 has activity 0 and is thus never drawn .",
    "the types that contain leaves are type 2 and type 3 .",
    "to simplify we can study another urn using the gaps as balls .",
    "type 1 has one gap , type 2 has two gaps , type 3 has three gaps and type 4 has 0 gaps .",
    "we label each gap with the type it belongs to ; thus the gaps have only the three types 13 .",
    "the gaps evolve as an urn with three types , with all activities 1 and the matrix @xmath47 in given by @xmath233 since we consider the gaps ( with activity 1 ) it is obvious that all columns add to 1 ( since we always add one ball to the urn ) .",
    "the eigenvalues of @xmath47 are @xmath234 .",
    "theorem [ simplepolyathm ] shows that @xmath235 has asymptotically a multivariate normal distribution , where @xmath170 is the number of balls of type @xmath33 in the plya urn , i.e. , the number of gaps of type @xmath40 .",
    "note that the number of subtrees of types 13 thus is @xmath236 , which thus also is asymptotically multivariate normal .",
    "since the number of leaves @xmath237 , it follows that @xmath224 has asymptotically a normal distribution .    to find the parameters @xmath238 and @xmath239",
    ", we note that right eigenvectors of @xmath47 corresponding to the eigenvalues @xmath234 are : @xmath240 and corresponding left eigenvectors of @xmath47 are : @xmath241 note that we have scaled the eigenvectors so that @xmath242 and ( [ normalized ] ) holds .",
    "we have @xmath243 .",
    "since type 2 has two gaps and one leaf and type 3 has three gaps and one leaf , it follows that @xmath244 corresponding to ( [ expectedleaf ] ) . by calculating @xmath107",
    ", we get from theorem [ simplepolyathm ] , that the covariance matrix @xmath94 is given by @xmath245   -\\frac{7}{150 } & \\frac{32}{75 } & -\\frac{19}{50 } \\\\   -\\frac{127}{700 } & -\\frac{19}{50 } & \\frac{393}{700 } \\\\",
    "\\end{array } \\right).\\end{aligned}\\ ] ] we thus obtain @xmath246 ( corresponding to ( [ varianceleaf ] ) ) , which completes the proof of theorem [ leaves ] with the simpler plya urn model .",
    "the fact that we have obtained the asymptotic variance in theorem  [ leaves ] in two different ways , where one uses @xmath88 in section  [ s3 ] and the appendix , is also a partial verification of the computer calculations yielding @xmath88 .",
    "the plya urn defined in section  [ polya ] can be used for any given @xmath0 , although the size of the matrices used in the calculations grow rapidly with @xmath0 .",
    "( for @xmath247 we have 69 types ; for @xmath248 we would have 184755 . )",
    "however , the central condition @xmath249 is not satisfied for large @xmath0 .",
    "we do not know any general formula for the eigenvalues of the matrix @xmath57 , but some of them are given as follows .",
    "[ lroot ] let @xmath250 .",
    "then every root of the polynomial @xmath251 is an eigenvalue of the matrix @xmath57 for the plya urn in section  [ polya ] .",
    "let @xmath252 be the number of nodes containing exactly @xmath40 keys ( thus @xmath253 is the number of external nodes ) , and consider the vector @xmath254 where @xmath255 ; thus @xmath256 is the total number of gaps at nodes with @xmath40 gaps .",
    "the random vector @xmath257 can also be described by a plya urn , see e.g. , ( * ? ? ?",
    "* example 7.8 ) and ( * ? ? ?",
    "* section 8.1.3 ) ; we denote the activity vector and the matrix for this urn by @xmath258 and @xmath259 .",
    "this means that the expected change of the two vectors when a new key is added are given by @xmath260 furthermore , the vector @xmath81 determines the number of nodes with different numbers of keys , so there is a linear map @xmath261 .",
    "consequently , by  , for any @xmath81 , @xmath262 and thus @xmath263 .",
    "the @xmath264 matrix @xmath265 is constructed as follows .",
    "let @xmath266 for @xmath267 , @xmath268 for @xmath269 , @xmath270 and all other elements @xmath271 .",
    "i.e. , @xmath272 as is well - known , the matrix @xmath259 has characteristic polynomial @xmath273 , see e.g. , ( * ? ? ?",
    "* example 7.8 ) or ( * ? ? ?",
    "* section 8.1.3 ) .",
    "in particular , @xmath124 is not an eigenvalue so @xmath259 is non - singular .",
    "the column vectors of @xmath259 are in the range of @xmath128 , and thus @xmath128 is onto .",
    "suppose that @xmath274 is a root of @xmath275 .",
    "then @xmath274 is an eigenvalue of @xmath259 and thus there exists a left eigenvector @xmath276 with @xmath277 .",
    "@xmath278 so @xmath279 is a left eigenvector of @xmath57 . since @xmath128 is onto",
    ", @xmath280 is injective and thus @xmath281 .",
    "this shows that @xmath274 is an eigenvalue of @xmath57 too .",
    "recall that @xmath282 for the matrix @xmath57 , since the total activity increases by 1 at each step .",
    "let @xmath283 be the roots of in order of decreasing real parts .",
    "it is well - known that @xmath282 and , moreover , that @xmath284 if and only if @xmath3 , see @xcite and @xcite . consequently , if @xmath285 , then lemma  [ lroot ] shows that @xmath57 has an eigenvalue @xmath286 with @xmath287 , and then @xmath81 is _ not _ asymptotically normal .",
    "( see @xcite for general results suggesting this , and @xcite for a rigorous proof in the present case , showing that the total number of internal nodes is _ not _ asymptotically normal . ) furthermore , if @xmath288 , then @xmath289 is stochastically bounded , but has no limit in distribution ( the distribution oscillates ) , see @xcite .",
    "some exceptional linear combinations of the variables @xmath290 are asymptotically normal also in such cases @xcite , but we conjecture that for any @xmath291 , the number of protected nodes is not one of these exceptional cases and that it has the same non - normal behaviour as just described for the number of internal nodes .    on the other hand ,",
    "if @xmath3 , although @xmath57 has a much larger dimension that @xmath259 , and thus presumably many more eigenvalues , we conjecture that all additional eigenvalues also have @xmath292 , so that theorem  [ polyathm ] applies showing that the number of protected vertices is asymptotically normal , with asymptotic variance linear in @xmath9 , just as for @xmath147 and 3 in theorems [ binary ] and [ main ] .",
    "( this conjecture has been verified for @xmath293 by heimbrger @xcite . )      as mentioned in section [ intro ] , the number of one - protected nodes and the number of leaves ( the complement of the one - protected nodes ) are easier to analyze than the two - protected nodes , and we prove normal limit laws for all @xmath2-ary search trees where @xmath294 . in these cases",
    "we can use a plya urn that is similar to the plya urn that has earlier been used to study the total number of internal nodes in an @xmath2-ary search tree , see e.g.  mahmoud @xcite and ( * ? ? ?",
    "* section 8.1.3 ) or ( * ? ? ?",
    "* example 7.8 ) .",
    "we can generalise the study of the number of leaves in ternary search tree in section  [ sleaves3 ] to arbitrary @xmath295 .",
    "( for @xmath147 , there are minor modifications in the formulas below ; we leave these to the reader .",
    "as mentioned above , the case @xmath147 was considered by devroye @xcite . )",
    "we have in general @xmath296 types , defined in analogy with figure  [ leaftypes ] : type 1 is as before , type @xmath40 with @xmath297 is a leaf with @xmath298 keys , type @xmath0 is a leaf with @xmath125 keys together with its @xmath0 external children , and type @xmath140 is an internal non - leaf .    let @xmath299 be the number of nodes containing exactly @xmath33 keys for @xmath300 ; let @xmath301 be the number of nodes containing 0 keys ( external nodes ) that are not children of leaves ; let @xmath302 be the number of nodes containing @xmath112 keys that are leaves ( i.e. , they have only external children ) ; finally , let @xmath303 be the number of internal nodes that are not leaves ( all containing @xmath112 keys ) .",
    "we consider again another , slightly simpler , urn with the balls representing the gaps , giving them types @xmath304 , and consider the vector @xmath305 where @xmath306 is the total number of gaps of type @xmath40 .",
    "the random vector @xmath307 can be described by a plya urn , with all activities 1 .",
    "we denote the @xmath308 matrix for this urn by @xmath309 .",
    "it is a minor modification of the matrix @xmath265 described in section  [ aw ] , see ; the entries of @xmath309 are given by @xmath310 for @xmath311 , @xmath268 for @xmath269 , @xmath312 , @xmath313 , and all other entries @xmath271 .",
    "i.e. , @xmath314 we can easily calculate the characteristic polynomial of @xmath315 and find that it is @xmath316 where @xmath317 is the characteristic polynomial of @xmath318 in .",
    "thus , @xmath315 has the same eigenvalues as @xmath57 , plus the additional eigenvalue @xmath319 .",
    "since @xmath320 has only simple roots ( * ? ? ?",
    "* section 3.3 ) , and @xmath321 is not one of them , also @xmath322 has only simple roots .",
    "hence , @xmath315 has @xmath0 distinct eigenvalues , and is thus diagonalisable .",
    "the largest eigenvalue of @xmath315 is @xmath323 ( as for @xmath57 ) and this eigenvalue corresponds to the right and left eigenvectors @xmath324 where we have normalized so that holds ( @xmath325 denotes the @xmath2th harmonic number ) .",
    "let @xmath326 be the number of leaves in an @xmath2-ary search tree with @xmath9 keys .",
    "then @xmath327    [ leavesmary ] suppose that @xmath328 .",
    "let @xmath224 be the number of leaves in an @xmath2-ary search tree .",
    "then , @xmath329 where @xmath330 and @xmath331 can be evaluated as @xmath332 where @xmath333 is given by .    as said above , for @xmath3 , @xmath334 for all eigenvalues @xmath123 of @xmath57 , and thus also of @xmath315 .",
    "furthermore , @xmath57 is diagonalisable .",
    "hence , theorem  [ simplepolyathm ] applies and shows asymptotic normality of @xmath335 .",
    "the result follows by , using @xmath177 in .",
    "[ expectedvalue2 ] theorem [ leavesmary ] implies that @xmath336 , by the same argument as in remark [ expectedvalues ] .    for @xmath291",
    ", we expect the same non - normal asymptotic behaviour as for the number of internal nodes @xcite , see section  [ aw ] .    for the one - protected nodes we can use the first plya urn described above for the leaves , with @xmath296 types . for the leaves we could simplify by considering the gaps and use a plya urn with @xmath2 types , with all activities 1 .",
    "however , now we also need to consider type @xmath140 , which has 0 gaps .",
    "so in the analysis of the one - protected nodes we use the urn with @xmath296 different types ( as explained in the beginning of this subsection ) where types @xmath311 have activities @xmath337 and type @xmath338 has activity 0 . in this plya urn ,",
    "the one - protected nodes correspond to type @xmath296 .",
    "all other types correspond to leaves or external nodes .",
    "theorem  [ simplepolyathm ] implies the following result ( the proof is analogous to the proof of theorem [ leavesmary ] ) .",
    "[ oneprotectednodes ] suppose that @xmath328 .",
    "let @xmath339 be the number of one - protected nodes in an @xmath2-ary search tree .",
    "then , @xmath340 where @xmath341 and @xmath342 can be evaluated as @xmath343 where @xmath344 is given by .",
    "this urn can also be used to study the number of leaves , giving another proof of theorem  [ leavesmary ] .",
    "( note that @xmath345 refers to different urns and thus has different meanings in theorems [ leavesmary ] and [ oneprotectednodes ] . )",
    "moreover , we can study @xmath346 and @xmath347 together and obtain joint asymptotic normality for @xmath3 ; the covariance @xmath348 of the limit variables in and equals @xmath349 with @xmath344 as in theorem  [ oneprotectednodes ] .",
    "in particular , this implies the well - known asymptotic normality of the total number of internal nodes @xmath350 , see e.g. @xcite .    for a binary search tree ( @xmath147 ) , a straightforward calculation of the covariance matrix @xmath351 in theorem  [ oneprotectednodes ] yields",
    "@xmath352 hence @xmath353 as shown by devroye @xcite .",
    "similarly , @xmath354 and @xmath355 .",
    "( we have @xmath356 since the total number of internal nodes @xmath357 is deterministic when @xmath147 . )    for a ternary search tree ( @xmath358 ) , similarly ( cf .",
    "for the corresponding urn using the gaps as in theorem  [ leavesmary ] ) @xmath359 hence , cf .   and ( [ varternaryleaf ] ) , @xmath360 we also obtain the corresponding asymptotic variance @xmath361 for the number of internal nodes @xmath362 , as found by mahmoud and pittel @xcite .    * acknowledgements : * we would like to thank hosam m. mahmoud and mark d. ward for valuable discussions .    99    bna m. , @xmath363-protected nodes in binary search trees . _",
    "_ , to appear .",
    "chauvin b. and pouyanne n. , @xmath2-ary search trees when @xmath364 : a strong asymptotics for the space requirement .",
    "_ random structures algorithms _ * 24 * ( 2004 ) , 133154 .    cheon g.s . and shapiro l. , protected points in ordered trees .",
    "* 21 * ( 2008 ) , no . 5 , 516520 .",
    "chern h .- h . and hwang h .- k . , phase changes in random @xmath0-ary search trees and generalized quicksort .",
    "_ random structures algorithms _ * 19 * ( 2001 ) , no . 3 - 4 , 316358 .",
    "devroye l. , limit laws for local counters in random binary search trees .",
    "_ random structures algorithms _ * 2 * ( 1991 ) , no .",
    "3 , 303315 .",
    "devroye l. and janson s. , protected nodes and fringe subtrees in some random trees . _ electronic communications in probability _ * 19 * ( 2014 ) , no .",
    "6 , 110 .",
    "drmota drmota m. , _ random trees _ , springer , vienna , 2009 .",
    "du r. and prodinger h. , notes on protected nodes in digital search trees .",
    "* 25 * ( 2012 ) , no . 6 , 10251028 .",
    "fillkapur fill j.a . and kapur n. , transfer theorems and asymptotic distributional results for @xmath0-ary search trees .",
    "_ random structures algorithms _ * 26 * ( 2005 ) , no .",
    "4 , 359391 .    heimbrger a. , master thesis , stockholm university and kth , 2014 . in preparation .",
    "holmgren , c. and janson s. , limit laws for functions of fringe trees for binary search trees and recursive trees . in preparation .",
    "janson s. , functional limit theorems for multitype branching processes and generalised plya urns .",
    "_ stoch . process .",
    "* 110 * ( 2004 ) , 177245 .",
    "lew w. and mahmoud h.m . , the joint distribution of elastic buckets in multiway search trees .",
    "_ siam j. comput . _",
    "* 23 * ( 1994 ) , no . 5 , 10501074 .",
    "mahmoud h.m . , _ evolution of random search trees_. john wiley & sons , new york , 1992 .",
    "mahmoud h.m . ,",
    "the size of random bucket trees via urn models .",
    "_ acta inform . _ * 38 * ( 2002 ) , no .",
    "11 - 12 , 813838 .",
    "mahmoud h.m . , _ plya urn models_. crc press , boca raton , fl , 2009 .",
    "mahmoud h.m . and pittel b. , analysis of the space of search trees under the random insertion algorithm .",
    "_ j. algorithms _ * 10 * ( 1989 ) , no .",
    "1 , 5275 .    mahmoud h.m . and ward m.d .",
    ", asymptotic distribution of two - protected nodes in random binary search trees .",
    "_ * 25 * ( 2012 ) , no .",
    "12 , 22182222 .",
    "mansour t. , protected points in @xmath363-ary trees .",
    "* 24 * ( 2011 ) , no .",
    "4 , 478480 ."
  ],
  "abstract_text": [
    "<S> we study protected nodes in @xmath0-ary search trees , by putting them in context of generalised plya urns . </S>",
    "<S> we show that the number of two - protected nodes ( the nodes that are neither leaves nor parents of leaves ) in a random ternary search tree is asymptotically normal . </S>",
    "<S> the methods apply in principle to @xmath1-ary search trees with larger @xmath0 as well , although the size of the matrices used in the calculations grow rapidly with @xmath2 ; we conjecture that the method yields an asymptotically normal distribution for all @xmath3 .    </S>",
    "<S> the one - protected nodes , and their complement , i.e. , the leaves , are easier to analyze . by using a simpler plya urn ( that is similar to the one that has earlier been used to study the total number of nodes in @xmath2-ary search trees ) , we prove normal limit laws for the number of one - protected nodes and the number of leaves for all @xmath4 .    </S>",
    "<S> * keywords : * random trees , plya urns , normal limit laws , @xmath5-ary search trees .    </S>",
    "<S> * msc 2010 subject classifications : * primary 60c05 ; secondary 05c05 , 60f05 , 68p05 . </S>"
  ]
}
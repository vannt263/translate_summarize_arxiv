{
  "article_text": [
    "the libra toolkit is a collection of algorithms for learning and inference with probabilistic models in discrete domains .",
    "what distinguishes libra from other toolkits is the types of methods and models it supports .",
    "libra includes a number of algorithms for _ structure learning for tractable probabilistic models _ in which exact inference can be done efficiently .",
    "such models include sum - product networks ( spn ) , mixtures of trees ( mt ) , and bayesian and markov networks with compact arithmetic circuits ( ac ) .",
    "these learning algorithms are not available in any other open - source toolkit .",
    "libra also supports _ structure learning for graphical models _ , such as bayesian networks ( bn ) , markov networks ( mn ) , and dependency networks ( dn ) , in which inference is not necessarily tractable . some of these methods are unique to libra as well , such as using dependency networks to learn markov networks .",
    "libra provides a variety of exact and approximate inference algorithms for answering probabilistic queries in learned or manually specified models .",
    "many of these are designed to exploit local structure , such as conjunctive feature functions or tree - structured conditional probability distributions .",
    "the overall goal of libra is to make these methods available to researchers , practitioners , and students for use in experiments , applications , and education .",
    "each algorithm in libra is implemented in a command - line program suitable for interactive use or scripting , with consistent options and file formats throughout the toolkit .",
    "libra also supports the development of new algorithms through modular code organization , including shared libraries for different representations and file formats .",
    "libra is available under a modified ( 2-clause ) bsd license , which allows modification and reuse in both academia and industry .",
    "libra includes a variety of learning and inference algorithms , many of which are not available in any other open - source toolkit .",
    "see table  [ tab : functionality ] for a brief overview .",
    "@xmath0 & bn structure with tree cpds & + & dn structure with tree / boosted tree / lr cpds & + @xmath1 & mn structure from dns & + & mn parameters ( pseudo - likelihood ) & +   + @xmath1 & tractable bn / ac structure & + @xmath1 & tractable mn / ac structure & + @xmath1 & mixture of trees ( mt ) & + @xmath1 & spn structure ( id - spn algorithm ) & + & chow - liu algorithm & + @xmath1 & ac parameters ( maximum likelihood ) & +   + & gibbs sampling ( bn , mn,@xmath1dn ) & ( dn ) + & mean field ( bn , mn,@xmath1dn ) & ( dn ) + & loopy belief propagation ( bn , mn ) & + & max - product ( bn , mn ) & + & iterated conditional modes ( bn , mn,@xmath1dn ) & + @xmath1 & variational optimization of acs & +   + @xmath0 & ac variable elimination ( bn , mn ) & + @xmath0 & marginal and map inference ( ac , spn , mt ) & +    libra s command - line syntax is designed to be simple . for example , to learn a tractable bn , run the command : `` libra acbn -i train.data -mo model.bn -o model.ac '' where train.data is the input data , model.bn is the filename for saving the learned bn , and model.ac is the filename for the corresponding ac representation , which allows for efficient , exact inference . to compute exact conditional marginals in the learned model : `` libra acquery -m model.ac -ev test.ev -marg '' . to compute approximate marginals in the bn with loopy belief propagation : `` libra bp -m model.bn -ev test.ev '' .",
    "additional command - line parameters can be used to specify other options , such as the priors and heuristics used by acbn or the maximum number of iterations for bp .",
    "these are just three of more than twenty commands included in libra .",
    "libra supports a variety of file formats . for data instances",
    ", libra uses comma separated values , where each value is a zero - based index indicating the discrete value of the corresponding variable . for evidence and query files , unknown or missing values",
    "are represented with the special value `` ` * ` '' . for model files",
    ", libra supports the xmod representation from the winmine toolkit , the bayesian interchange format ( bif ) , and the simple representation from the uai inference competition .",
    "libra converts among these different formats using the provided mconvert utility , as well as to its own internal formats for bns , mns , and dns ( .bn , .mn , .dn ) .",
    "libra has additional representations for acs and spns ( .ac , .spn ) .",
    "these formats are designed to be easy for humans to read and programs to parse .",
    "libra is implemented in ocaml .",
    "ocaml is a statically typed language that supports functional and imperative programming styles , compiles to native machine code on multiple platforms , and uses type inference and garbage collection to reduce programmer errors and effort .",
    "ocaml has a good foreign function interface , which libra uses for linking to c libraries and implementing some memory - intensive subroutines more efficiently in c. the code to libra includes nine support libraries , which provide modules for input , output , and representation of different types of models , as well as commonly used algorithms and utility methods .",
    "in table  [ tab : comparison ] , we compare libra to other toolkits in terms of representation , learning , and inference .    .comparison of libra to several other probabilistic inference and learning toolkits . [ cols= \"",
    "< , < , < , < , < , < , < \" , ]     in terms of representation , libra is the only open - source software package that supports acs and one of a very small number that support dns or spns .",
    "libra does not currently support dynamic bayesian networks ( dbn ) or influence diagrams ( i d ) . for factors",
    ", libra supports tables , trees , and arbitrary conjunctive feature functions .",
    "bnt  @xcite and openmarkov  ( cisiad , 2013 ) also support additional types of cpds , such as logistic regression , noisy - or , neural networks , and algebraic decision diagrams , but they only support tabular cpds for structure learning . opengm2  @xcite supports sparse factors , but iterates through all factor states during inference .",
    "libra is unique in its ability to learn models with local structure and exploit that structure in inference .    for exact inference , the most common algorithms are junction tree ( jt ) , enumeration ( e ) , and variable elimination ( ve ) .",
    "libra provides acve  , which is similar to building a junction tree , but it can exploit structured factors to run inference in many high - treewidth models . for approximate inference , libra provides gibbs sampling ( g ) , loopy belief propagation ( bp ) , and mean field ( mf ) , all of which are optimized for structured factors .",
    "a few learning toolkits offer likelihood weighting ( lw ) or additional sampling algorithms for bns .",
    "fastinf  , libdai  @xcite , and opengm2 offer the most algorithms but only support tables .    for learning ,",
    "libra supports maximum likelihood ( ml ) parameter learning for bns , acs , and spns , and pseudo - likelihood ( pl ) optimization for mns and dns .",
    "libra does not yet support expectation maximization ( em ) for learning with missing values .",
    "structure learning is one of libra s greatest strengths .",
    "most toolkits only provide algorithms for learning bns with tabular cpds or mns using the pc algorithm  .",
    "libra includes methods for learning bns , mns , dns , spns , and acs , and all of its algorithms support learning with local structure .    in experiments on grid - structured mns ,",
    "libra s implementations of bp and gibbs sampling were at least as fast as libdai , a popular c++ implementation of many inference algorithms .",
    "the accuracy of both toolkits was equivalent .",
    "parameter settings , such as the number of iterations , were identical .",
    "see figure  [ fig : libdai ] for more details .",
    "the libra toolkit provides algorithms for learning and inference in a variety of probabilistic models , including bns , mns , dns , spns , and acs .",
    "many of these algorithms are not available in any other open - source software .",
    "libra s greatest strength is its support for tractable probabilistic models , for which very little other software exists .",
    "libra makes it easy to use these state - of - the - art methods in experiments and applications , which we hope will accelerate the development and deployment of probabilistic methods ."
  ],
  "abstract_text": [
    "<S> the libra toolkit is a collection of algorithms for learning and inference with discrete probabilistic models , including bayesian networks , markov networks , dependency networks , and sum - product networks . </S>",
    "<S> compared to other toolkits , libra places a greater emphasis on learning the structure of tractable models in which exact inference is efficient . </S>",
    "<S> it also includes a variety of algorithms for learning graphical models in which inference is potentially intractable , and for performing exact and approximate inference . </S>",
    "<S> libra is released under a 2-clause bsd license to encourage broad use in academia and industry .    </S>",
    "<S> probabilistic graphical models , structure learning , inference </S>"
  ]
}
{
  "article_text": [
    "consider a wireless network composed by a set @xmath0 of @xmath1 interfering links .",
    "interference is modeled by a symmetric , boolean matrix @xmath2 , where @xmath3 link @xmath4 interferes link @xmath5 .",
    "define by @xmath6 the set of feasible link activation profiles , or , schedules .",
    "a schedule @xmath7 is a subset of non - interfering active links .",
    "the transmitter of link @xmath4 can transmit at a fixed unit rate when active , and all links are saturated with infinite backlog .",
    "denote by @xmath8 the long - term throughputs achieved by a scheduling algorithm , which determines which links are activated at each time .",
    "let @xmath9 be an increasing and strictly concave objective function .",
    "the following utility optimization problem over schedules has been extensively studied : @xmath10 where @xmath11 is the long - term proportion of time when schedule @xmath12 is used .",
    "we denote by @xmath13 the solution of ( [ eq : ut1 ] ) .",
    "most of the proposed distributed schemes to solve ( 1 ) make use of a dual decomposition of the problem into a rate control and a scheduling problem : a virtual queue is associated to each link ; a rate control algorithm defines the rate at which packets are sent to the virtual queues , and a scheduling algorithm decides , depending on the level of the virtual queues , which schedule to use with the aim of stabilizing all virtual queues .",
    "the main challenge reduces to developing a distributed and efficient scheduling algorithm .",
    "most of the proposed solutions are semi - distributed implementations of the max - weight scheduler introduced in @xcite , and require information about the queues to be passed around among the nodes or links ( e.g. , see a large set of references in @xcite ) .",
    "this signaling overhead increases communication complexity and reduces effective throughput of the algorithms .",
    "recently , there have been proposals that do not use any message passing , and yet achieve high efficiency @xcite .",
    "these algorithms are based on the random access protocol of csma ( carier sense multiple access ) , and leverage simulated annealing techniques to solve the max - weight scheduling problem as first proposed in @xcite . in this paper",
    "we provide the first rigorous proof that such adaptive csma algorithms indeed converge , using stochastic approximation tools with two time - scales .",
    "then , we quantify the impact of inevitable collisions in csma protocols on the trade - off between their long - term efficiency and short - term fairness , the latter defined here as @xmath14 , where @xmath15 is the average duration during which link @xmath4 do not transmit successfully .",
    "it turns out that a price to pay for the surprisingly good utility performance by these message - passing - free algorithms is short - term starvation .      to access the channel , each transmitter @xmath16 runs a random back - off algorithm parametrized by two positive real numbers @xmath17 denoted as csma@xmath18 : after a successful transmission",
    ", the transmitter randomly picks a back - off counter according to some distribution of mean @xmath19 ; it decrements the counter only when the channel is sensed idle ; and it starts transmitting when the back - off reaches 0 , and remains active for a duration @xmath20 .",
    "we first consider a continuous - time and then a discrete - time version of csma algorithms . in the ideal continuous - time setting ( considered in this and the next sections ) , the back - off counter distribution is exponential , so that two interfering links can not be activated simultaneously and collisions are avoided . in practice ,",
    "back - offs are discrete , say geometrically distributed . in this discrete",
    "setting ( studied in section iii ) , collisions may occur , degrade performance , and introduce tradeoff between long - term utility and short - term fairness .",
    "if parameters @xmath21 were fixed , the analysis of the dynamics of systems under _ continuous - time _ csma algorithms would be classical ( e.g. , @xcite and references therein ) . in this case , in steady state the set of active links evolves according to a reversible markov process whose stationary distribution , denoted by @xmath22 , is defined by : @xmath23    we now describe how transmitters adapt their csma parameters .",
    "time is slotted and transmitters update their parameters at the beginning of each slot . to do so , they maintain a virtual queue , denoted by @xmath24 $ ] in slot @xmath25 , for link @xmath4 .",
    "the algorithm operates as follows ( the algorithm presented here is an extension of those proposed in @xcite ) : + * algorithm 1 .",
    "*    1 .   during slot @xmath25 , the transmitter of link @xmath4 runs csma(@xmath26,\\mu$ ] ) , and records the amount @xmath27 $ ] of service received during this slot ; 2 .   at the end of slot @xmath25",
    ", it updates its virtual queue and its csma parameters according to : @xmath28=\\bigg[q_l[t]+{b[t]\\over w'(q_l[t])}\\big(u'^{-1}({w(q_l[t])\\over    v})-s_l[t]\\big)\\bigg]^{q^{\\max}}_{q^{\\min}},\\ ] ] and set @xmath29=\\mu^{-1}\\exp \\ { w(q_l[t+1])\\}$ ] .    at the beginning of each slot",
    ", each non - active transmitter picks a new random back - off counter to account for the csma parameter update . in algorithm 1",
    ", @xmath30 is a step size function ; @xmath31 is a strictly increasing and continuously differentiable function , termed _ weight function _ ; @xmath32 , @xmath33 , @xmath34 are positive parameters , and @xmath35_c^d\\equiv \\max(d,\\min(c,\\cdot))$ ] .",
    "the main difficulty in analyzing the convergence of algorithm 1 lies in the fact that the updates in the virtual queues depend on random processes @xmath36 , t\\ge 0)$ ] , whose transition rates in turn depend on the virtual queues . as we will demonstrate",
    ", it is possible to represent algorithm 1 as a stochastic approximation algorithm with controlled markov noise as introduced by borkar @xcite .",
    "we use the notation @xmath37 to denote the distribution on @xmath38 defined by : @xmath39 we also denote by @xmath40=(\\gamma_l[t]={1\\over    t}\\sum_{i=0}^{t-1}s_l[i ] , l\\in \\cl)$ ] the random variable representing the time - averaged service rates received by the various links over the interval @xmath41 the following theorem states the convergence of algorithm 1 , for diminishing step - sizes ( similar but weaker results are readily obtained for constant , small step - sizes ) .",
    "[ theo : asym_pf ] assume that @xmath42 and that @xmath43=\\infty,\\quad \\sum_{t=0}^\\infty b[t]^2<\\infty$ ] .",
    "for any initial condition @xmath44 $ ] , under algorithm 1 , we have the following convergence : @xmath45=\\bm{q}^{\\star } \\textrm { and } \\lim_{t\\to \\infty}\\bm{\\gamma}[t]=\\bm{\\gamma}^{\\star } , \\textrm { almost surely},\\ ] ] where @xmath46 and @xmath47 are such that : @xmath48 solves : @xmath49 furthermore , algorithm 1 approximately solves ( [ eq : ut1 ] ) as : @xmath50    we first show that the network dynamics under the continuous - time random csma protocol can indeed be averaged and it asymptotically approaches to a deterministic trajectory ( see lemma  [ lem : nf_conv ] ) . resolving this bottleneck in understanding adaptive csma",
    "is the main contribution in this proof .",
    "then we prove that the resulting averaged algorithm converges to the solution of ( [ eq : opt ] ) .    from the discrete - time sequence @xmath51,t\\ge 0)$ ] , we define a continuous function @xmath52 as follows .",
    "define for all @xmath53 , @xmath54 $ ] , and for all for all @xmath55 , @xmath56+(q_l[n+1]-q_l[n])\\times({t - t_n\\over t_{n+1}-t_n}).\\ ] ]    [ lem : nf_conv ] denote by @xmath57 the solution of the following system of o.d.e.s : for all @xmath4 , @xmath58 with @xmath59 .",
    "then we have : for all @xmath60 , @xmath61 } \\|\\bar{\\bm{q}}(t)-\\tilde{\\bm{q}}(t)\\|=0 \\quad \\text{a.s.}\\ ] ]    lemma  [ lem : nf_conv ] shows that the trajectory of the continuous interpolation @xmath62 of the sequence of the virtual queues @xmath63 asymptotically approaches that of @xmath64 . note that in the limiting o.d.e.s , the service @xmath65 received on each link",
    "is averaged ( as if the virtual queues were frozen ) , and this averaging property constitutes the key challenge in analyzing the convergence of algorithm 1 .    to prove lemma  [ lem : nf_conv ]",
    ", we attach to each link @xmath4 a variable @xmath66,$ ] where @xmath66=1 $ ] if the link is active at time @xmath25 ( at the end of slot @xmath25 ) , and @xmath67 otherwise .",
    "now it can be easily seen that @xmath68=(\\bm{s}[t],\\bm{a}[t])$ ] is a non - homogeneous markov chain whose transition kernel between times @xmath25 and @xmath69 depends on @xmath70 $ ] only ( this can be checked as in @xcite ) .",
    "now the updates of the virtual queues in algorithm 1 can be written as : @xmath71=q_l[t]+b[t]\\times h(q_l[t],y_l[t]),\\ ] ] where @xmath72 as a consequence , algorithm 1 can be seen as a stochastic approximation algorithm with controlled markov noise as defined in @xcite . to complete the proof of lemma 1",
    ", we check the conditions as stated in @xcite .",
    "+ 1 ) the transition kernel of @xmath68 $ ] , parametrized by @xmath70 $ ] , is continuous in @xmath70 $ ] ( because the transition rates from one state to another are determined by the @xmath26 $ ] s , which are continuous in the @xmath24 $ ] s ) .",
    "note also that fixing @xmath70=\\bm{q}_0 $ ] , the obtained markov chain @xmath68 $ ] is ergodic ( its state - space is finite ) with stationary distribution @xmath73 .",
    "+ 2 ) @xmath74 is continuous and lipschitz in the first argument , uniformly in the second argument .",
    "this can be easily checked , given the properties of the utility and weight functions @xmath75 and @xmath76 and observing that we restrict our attention to the compact @xmath77 $ ] .",
    "+ 3 ) _ stability _ condition : @xmath24<q^{\\max}$ ] for all @xmath78 and @xmath79 .",
    "+ 4 ) _ tightness _ condition ( corresponding to ( @xmath80 ) in @xcite[pp.71 ] ) : this is satisfied since @xmath68 $ ] has a finite state - space ( cf . conditions ( 6.4.1 ) and ( 6.4.2 ) in @xcite[pp.76 ] ) .",
    "this completes the proof of lemma  [ lem : nf_conv ] . by lemma 1 , if there exists an equilibrium @xmath46 such that @xmath81 , then we would also have : @xmath82=\\bm{q}^{\\star}$ ] a.s .",
    "( see @xcite for details ) .    to complete the proof ,",
    "we show that ( [ eq : q_ode ] ) may be interpreted as a sub - gradient algorithm ( projected on a bounded interval ) solving the lagrange dual problem of ( [ eq : opt ] ) .",
    "let @xmath83 denote the dual function of ( [ eq : opt ] ) .",
    "then we show that ( [ eq : q_ode ] ) is the sub - gradient algorithm of : @xmath84 here we include the upper - bound @xmath85 ( resp .",
    "lower - bound @xmath86 ) that corresponds to the limitation of the @xmath87 s : @xmath88 ( resp .",
    "@xmath89 ) .",
    "the lagrangian of ( [ eq : opt ] ) is given by : @xmath90 then the kkt conditions of ( [ eq : opt ] ) are given by : @xmath91 now if @xmath92 for all @xmath4 , ( [ eq : kkt_pi ] ) is solved for @xmath93 ( in view of ( [ eq : pi_q ] ) ) .",
    "the sub - gradient of ( [ eq : kkt_nu ] ) ( when accounting for ( [ eq : kkt_gamma ] ) ) is : @xmath94 which is equivalent to ( [ eq : q_ode ] ) , provided that the solution @xmath95 , @xmath96 , of ( [ eq : opt_dual ] ) without the constraints @xmath97 actually belongs to the interval @xmath98 $ ] .",
    "the latter condition is satisfied by simply combining @xmath99 , ( [ eq : kkt_gamma ] ) , and the assumption @xmath100 .",
    "finally , since ( [ eq : opt_dual ] ) is a strictly convex optimization problem , ( [ eq : ode2 ] ) converges to its unique equilibrium @xmath101 .",
    "finally , the inequality ( [ eq : gap ] ) is obtained comparing ( [ eq : ut1 ] ) and ( [ eq : opt ] ) , because entropy @xmath102 is always bounded by @xmath103 .",
    "the proof of theorem  [ theo : asym_pf ] is completed .",
    "in the previous section , we have analyzed the convergence of algorithm 1 in the ideal , continuous - time setting of csma protocols with no collisions . in practical implementaions",
    "however , the back - off counters are discrete and collisions possible @xcite . to keep collision rates less than @xmath104 , we scale down in algorithm 1 the transmission probabilities to @xmath105 $ ] and scale up the channel holding time to @xmath106 .",
    "denote by @xmath107 the throughput vector obtained with this modified algorithm .",
    "of course , we have @xmath108 . more precisely , using standard perturbation analysis",
    ", one can show that for all @xmath4 : @xmath109 the constants @xmath110 can be derived explicitly for networks with simple interference structures , but are more difficult to obtain for general networks .",
    "for example , in networks with full interference , i.e. , where all links interfere each other , we can easily prove that @xmath110 is roughly equal to @xmath111 , which in turn is equal to @xmath112 ( indeed , in view of ( [ eq : st ] ) , the throughput on any link is just equal to @xmath113 , an increasing function of @xmath114 ) . combining the above observation and ( [ eq : gap ] ) , the distance between @xmath107 and the utility optimal vector @xmath115 , which represents the efficiency gap of the algorithm , scales as @xmath116 when @xmath104 is small , where @xmath117 is a positive constant , and @xmath118 a constant that depends on @xmath119 ) . from the assumption on @xmath32 in theorem 1",
    ", we deduce that the efficiency gap scales as @xmath120 .",
    "for network with full interference , the gap scales as : @xmath121 .",
    "let us now evaluate the short - term fairness index . using cycle formula @xcite , at the equilibrium , the average of periods , during which link @xmath4 do not transmit successfully , is given by : @xmath122 then the short - term fairness index @xmath123 scales as @xmath124 , where @xmath125 is a positive constant .",
    "now if we want to guarantee an efficiency gap less than @xmath126 , in view of the above analysis , we must have @xmath127 . in the case networks with full interference",
    ", this further implies that : @xmath128 . for networks with more general interference structure ,",
    "analytically expressing the tradeoff between efficiency and short - term fairness is more difficult , but the conclusion remains similar : to approach optimality in sum utility in the long - run , some node will be denied channel access for longer time , and we must pay a price of short - term unfairness that grows very fast ( the channel holding time must grow like @xmath129 ) .",
    "we illustrate this tradeoff numerically on a simple 3-link linear network , in which link 1 and link 3 both interfere with link 2 but link 1 and link 3 do not interfere .",
    "figure  [ fig : tradeoff ] shows the efficiency ( i.e. , @xmath130 ) as a function of 1/(short - term fairness index ) .",
    "10 experiments were carried out with different random seeds for each value in @xmath131-axis . in the practical",
    "setting with collisions , 85% efficiency , in terms of utility achieved , is quite good for random access without message passing , although this efficiency drops as short - term fairness improves exponentially .",
    "l.  tassiulas and a.  ephremides , `` stability properties of constrained queueing systems and scheduling for maximum throughput in multihop radio networks , '' _ ieee transactions on automatic control _ , vol .",
    "37 , no .  12 , pp . 19361949 ,",
    "december 1992 ."
  ],
  "abstract_text": [
    "<S> it has been recently suggested that in wireless networks , csma - based distributed mac algorithms could achieve optimal utility without any message passing . </S>",
    "<S> we present the first proof of convergence of such adaptive csma algorithms towards an arbitrarily tight approximation of utility - optimizing schedule . </S>",
    "<S> we also briefly discuss the tradeoff between optimality at equilibrium and short - term fairness practically achieved by such algorithms . </S>"
  ]
}
{
  "article_text": [
    "the _ algebraic computation tree _ is a standard sequential model of computation for deciding membership problems for semialgebraic sets . among various general methods for obtaining lower complexity bounds for this model , one of the most efficient uses homotopy invariants , euler characteristic and betti numbers , as arguments for the bounding functions .",
    "the history of this approach started probably in mid 70s with the work of dobkin and lipton @xcite , and features prominent results such as ben - or s @xcite in 1983 and yao s @xcite in 1997 .",
    "the present paper is inspired by the latter .",
    "we will discuss the results of @xcite in some detail .",
    "we assume that the reader is familiar with the concept of the algebraic computation tree , so we give here just a brief formal description , closely following @xcite .",
    "an algebraic computation tree @xmath8 with input variables @xmath9 taking real values , is a tree having three types of vertices : computation ( outdegree 1 ) , branch ( outdegree 3 ) , and leaves ( outdegree 0 ) . to each vertex @xmath10 of @xmath8",
    "a variable @xmath11 is assigned .    with each computation",
    "vertex @xmath10 an expression @xmath12 is associated , where @xmath13 , and @xmath14 are either real constants , or input variables , or variables associated with predecessor vertices of @xmath10 , or a combination of these .    at each branch vertex @xmath10 ,",
    "the variable @xmath11 is assigned the value which is either a real constant , or an input variable , or a variable associated with a predecessor vertex .",
    "the three outgoing edges of @xmath10 correspond to signs @xmath15 , @xmath16 , @xmath17 .    with each leaf",
    "@xmath18 a basic semialgebraic set ( called _ leaf set _ ) is associated , defined by equations of the kind either @xmath19 , or @xmath16 , or @xmath20 , for all variables @xmath11 associated with predecessor branch vertices @xmath10 of @xmath18 along the branch leading from the root to @xmath18 .",
    "the sign of each @xmath11 is determined by the outgoing edge in the branch vertex .",
    "in addition , each leaf carries a label `` yes '' or `` no '' .",
    "the tree @xmath8 _ tests membership _ in the union of all yes leaf sets .",
    "the semantics of this model of computation is straightforward . on an input @xmath21",
    ", the input variables @xmath22 get the corresponding values @xmath23 , the arithmetic operations are executed in computation vertices @xmath10 and the real values are obtained by variables @xmath11 . at branch vertices @xmath10 the sign of the value of @xmath11 is determined , and the corresponding outgoing edge is chosen . as a result a certain branch ending up in a leaf @xmath18 is selected .",
    "the input @xmath24 belongs to the semialgebraic set assigned to @xmath18 .",
    "if @xmath18 is a yes leaf , then @xmath24 is said to be accepted by the tree @xmath8 .",
    "it can be assumed without loss of generality @xcite , that there are no divisions used in a tree .",
    "we will be interested in lower bounds on the _ heights _ of algebraic computation trees testing membership in a given semialgebraic set @xmath4 .",
    "a detailed outline of the development of lower bounds that depend on topological characteristics of a set can be found in @xcite ( see also @xcite ) .",
    "we mention here just two highlights .",
    "the first most important achievement was the proof by ben - or @xcite of the bound @xmath25 , where @xmath26 is the number of connected components of @xmath4 , and @xmath5 are some absolute positive constants .",
    "this general bound implies non - trivial , and sometimes tight , lower bounds for specific computational problems , such as _ distinctness _ and _",
    "knapsack_.    one of the most general results so far in this direction belongs to yao @xcite .",
    "suppose a semialgebraic set @xmath4 is locally closed and bounded .",
    "let @xmath27 be the total betti number ( the sum of all betti numbers ) of @xmath4 with respect to the borel - moore homology @xmath28 .",
    "yao proved the lower bound @xmath29 where @xmath5 are some absolute positive constants . from this he deduced a tight lower bound for _ @xmath30-distinctness _ problem , and other non - trivial lower bounds for specific problems .",
    "the borel - moore homology is a very strong condition , which implies subadditivity of the total betti number .",
    "subadditivity is the property on which the whole of the yao s argument depends .",
    "it is natural to ask whether an analogous bound can be found for the usual , singular , homology theory , which is applicable to arbitrary ( not necessarily locally closed ) semialgebraic sets .",
    "of course , in this case subadditivity is not necessarily true .",
    "observe that for compact sets borel - moore betti numbers coincide with singular betti numbers , while for non - compact locally closed sets these two types of betti numbers can be incomparable .    in this paper",
    "we prove two main theorems .",
    "firstly , we prove the lower bound @xmath1 where @xmath2 is the @xmath3-th betti number of an arbitrary semialgebraic set @xmath4 with respect to singular homology , and @xmath5 are some absolute positive constants .",
    "note that this bound depends on an individual betti number rather than on the sum of betti numbers . for betti numbers of",
    "a small ( fixed ) index @xmath3 the bound turns into @xmath31 which is similar to yao s bound . the proof is based on a construction from @xcite which transforms @xmath4 into a compact semialgebraic set @xmath32 having the same betti numbers as @xmath4 up to a given index @xmath3 .",
    "we then prove that for any algebraic computation tree @xmath8 for @xmath4 there is an algebraic computation tree @xmath33 for @xmath32 having the height not exceeding , up to a multiplicative constant , @xmath3 times the height of @xmath8 .",
    "it remains to apply yao s bound to @xmath32 .",
    "our second main result is a lower bound in terms of betti numbers of the projection @xmath34 of @xmath4 to a subspace , rather than betti numbers of @xmath4 itself .",
    "note that the topology of the image under a projection may be much more complex than the topology of the set being projected .",
    "we are not aware of previous lower bounds of this sort .",
    "the bound is @xmath7 for some positive constants @xmath5 , which again should be applied for small ( fixed ) values of @xmath3 .",
    "the proof uses ( implicitly ) a spectral sequence associated with the projection map , which allows to bound from above betti numbers of the projection of @xmath4 in terms of betti numbers of fiber products by itself of the compactification of @xmath4 @xcite .",
    "we illustrate these general results by examples of lower complexity bounds for some specific computational problems .",
    "in this section we formulate the results from @xcite which are used further in this paper .    in what follows , for a topological space @xmath35 ,",
    "let @xmath36 be its @xmath3-th betti number with respect to the singular homology group @xmath37 with coefficients in some fixed abelian group .",
    "by @xmath38 we denote the _ total _ betti number of @xmath35 , i.e. , the sum @xmath39 .",
    "consider a semialgebraic set @xmath40 , where @xmath41 is a boolean combination of polynomial equations and inequalities of the kind @xmath42 or @xmath43 , and @xmath44 $ ] .",
    "suppose that the number of different polynomials @xmath45 is @xmath46 and that their degrees do not exceed @xmath47 .",
    "[ pr : bettibounds ] the @xmath3-th betti number of @xmath48 satisfies    1 .",
    "@xmath49 ; 2 .",
    "@xmath50 .    unlike classical petrovski - oleinik - thom - milnor bound for basic semialgebraic sets , used in @xcite , the bounds in proposition  [ pr : bettibounds ] are applicable to arbitrary semialgebraic sets defined by a quantifier - free formulae .",
    "they are slightly weaker than the classical bound @xmath51 by a multiplicative factor at the base of the exponent , namely @xmath46 in ( 1 ) and @xmath52 in ( 2 ) .",
    "further , in the proof of theorem  [ th : generalbound ] , we will need the bound ( 1 ) from this proposition .",
    "we wo nt need bound ( 2 ) as such but we shall use in an essential way the constructions from @xcite used for proving this bound .",
    "we now proceed to describing this technique .",
    "[ def : s_delta ] let @xmath53 be a compact semialgebraic set . consider a semialgebraic family @xmath54 of compact subsets of @xmath53 , such that for all @xmath55 , if @xmath56 , then @xmath57 .",
    "denote @xmath58 .    for each @xmath59 ,",
    "let @xmath60 be a semialgebraic family of compact subsets of @xmath53 such that :    * for all @xmath61 , if @xmath62 , then @xmath63 ; * @xmath64 ; * for all sufficiently small @xmath65 and for all @xmath66 , there exists an open in @xmath53 set @xmath67 such that @xmath68 .",
    "we say that @xmath48 is _ represented _ by the families @xmath69 and @xmath60 in @xmath53 .",
    "consider the following two particular cases .",
    "* case 1.*let a semialgebraic set @xmath48 be given as a disjoint union of _ basic _ semialgebraic sets ( i.e. , sets each defined by a conjunction of equations and strict inequalities ) .",
    "( note that an algebraic computation tree represents the corresponding set in exactly this way . )",
    "let @xmath70 and @xmath71 be some positive constants .",
    "suppose first that @xmath48 is bounded in @xmath72 , and take as @xmath53 a closed ball of a sufficiently large radius centered at 0 .",
    "the set @xmath73 is the result of the replacement , independently in each basic set in the union , of all inequalities @xmath74 and @xmath75 by @xmath76 and @xmath77 respectively .",
    "the set @xmath78 is obtained by replacing , independently in each basic set , all expressions @xmath74 , @xmath75 and @xmath79 by @xmath76 , @xmath77 and @xmath80 , respectively .",
    "one can easily verify ( see @xcite ) that the set @xmath48 , is represented by families @xmath81 and @xmath60 in @xmath53 .",
    "now suppose that @xmath48 is not necessarily bounded . in this case",
    "one can take the semialgebraic one - point ( alexandrov ) compactification of @xmath72 as @xmath53 .",
    "define sets @xmath82 and @xmath78 as in the bounded case , replacing equations and inequalities independently in each basic set , and then taking the conjunction of the resulting formula with @xmath83 .",
    "again , @xmath48 is represented by @xmath81 and @xmath60 in @xmath53 .",
    "* case 2.*let @xmath84 be the projection map , and @xmath85 be a semialgebraic set , given as a disjoint union of _ basic _ semialgebraic sets .",
    "the set @xmath48 is represented by families @xmath69 , @xmath86 in the compactification of @xmath87 as described in * case  1*. one can easily verify ( see @xcite ) , that the projection @xmath88 is represented by families @xmath89 , @xmath90 ( in the alexandrov compactification of @xmath72 if necessary ) .    returning to the general case ,",
    "suppose that a semialgebraic set @xmath48 is _ represented _ by families @xmath81 and @xmath60 in @xmath53 .    for a sequence @xmath91 , where @xmath92 , introduce the compact set @xmath93    observe that in * case  2 * , we have the equality @xmath94    in what follows , for two real numbers @xmath95 and @xmath96 we write @xmath97 to mean `` @xmath95 is sufficiently smaller than @xmath96 '' ( see formal definition  1.7 in @xcite ) .",
    "[ pr : main ] for any @xmath92 , and @xmath98 we have    * for every @xmath99 , there is an epimorphism @xmath100 , in particular , @xmath101 ; * in * case  1 * , for every @xmath102 , the epimorphism @xmath103 is an isomorphism , in particular , @xmath104 .",
    "moreover , if @xmath105 , then @xmath106 is homotopy equivalent to @xmath48 .      for two maps @xmath107 and @xmath108",
    ", the _ fibered product _ of @xmath109 and @xmath110 is defined as @xmath111    [ pr : map ] let @xmath112 be a closed surjective semialgebraic map ( in particular , @xmath113 can be the projection map to a subspace , with a compact @xmath35 ) .",
    "then @xmath114 where @xmath115",
    "we start with a theorem which immediately follows from an upper bound on the total betti number of an arbitrary semialgebraic set in proposition  [ pr : bettibounds ] .",
    "[ th : generalbound ] let @xmath30 be the height of an algebraic computation tree @xmath116 testing membership in a semi - algebraic set @xmath0 .",
    "then @xmath117 where @xmath118 is the total betti number of @xmath4 .",
    "since in each computation vertex at most one multiplication can be performed , every polynomial occurring in the disjunctive normal form defining @xmath4 has a degree at most @xmath119 .",
    "the number of polynomials in the conjunction defining the set attached to a yes leaf is at most @xmath30 , while the number of yes leaves does not exceed @xmath120 .",
    "it follows that the total number of polynomials defining @xmath4 is at most @xmath121 .",
    "then , according to proposition  [ pr : bettibounds ] , ( 1 ) , @xmath122 . taking logarithms we get the result .",
    "the bound in the theorem is significantly weaker than yao s bound ( [ eq : yao ] ) .",
    "however , as explained in the introduction , it is applicable to any semialgebraic set , not necessarily a locally closed one .",
    "the upper bound on the total betti number , used in the proof , is applicable to arbitrary semialgebraic set , unlike classical petrovski - oleinik - thom - milnor bounds employed in @xcite .",
    "[ th : main ] let @xmath30 be the height of an algebraic computation tree @xmath116 testing membership in a semi - algebraic set @xmath0 .",
    "then @xmath123 where @xmath2 is the @xmath3-th betti number of @xmath4 , and @xmath5 are some positive constants .",
    "[ le : cupcap ] let @xmath124 be algebraic computation trees testing membership in semialgebraic sets @xmath125 and @xmath126 respectively , and having heights @xmath127 and @xmath128 respectively . then there is a tree @xmath129 testing membership in @xmath130 , and a tree @xmath131 testing membership in @xmath132 , both having heights at most @xmath133 .    to construct @xmath129 ,",
    "attach a copy of @xmath134 to each no leaf of the tree @xmath135 .",
    "for @xmath131 , attach a copy of @xmath134 to each yes leaf of the tree @xmath135 .",
    "[ le : hight ] let @xmath116 be a tree for @xmath4 , having height @xmath30 .",
    "then for any @xmath136 there exists a tree @xmath137 for @xmath138 whose height does not exceed @xmath139 for some positive constant @xmath140 .    the plan of the proof is as follows .",
    "the construction of @xmath137 consists of two stages . on the first stage",
    "we perform the construction for @xmath141 and arbitrary @xmath142 , and get the tree @xmath143 .",
    "the height of @xmath143 is not larger than @xmath140 times the height of @xmath116 for a constant @xmath144 . on the second stage",
    "we construct @xmath137 for an arbitrary @xmath145 by induction . on the base step ,",
    "construct the tree @xmath146 .",
    "suppose we constructed the tree @xmath147 .",
    "the tree @xmath137 is obtained from @xmath147 by attaching to _ each _ no leaf of the latter , a copy of the tree @xmath148 , considering the leaf as the root of @xmath148 .",
    "now we proceed to a more detailed proof .",
    "let @xmath149 .",
    "the root @xmath150 of the tree @xmath143 is a branch vertex with the polynomial @xmath151 attached .",
    "the child of @xmath150 , corresponding to @xmath152 , is a no leaf .",
    "take the other two children as roots of two copies of the tree @xmath8 .",
    "the construction of @xmath143 now continues identically for both copies , by induction , as follows . in @xmath116 , let @xmath10 be the closest branch vertex to its root , and let @xmath113 be the polynomial attached to @xmath10 ( if such branch vertex does not exist , then the construction of @xmath143 is completed ) .",
    "then the neighbourhood of @xmath10 in @xmath116 looks like the tree @xmath153 on figure  [ fig:1 ] . here",
    "@xmath154 and @xmath155 are polynomials attached to children @xmath156 of @xmath10 .",
    "replace this neighbourhood by the tree @xmath157 on figure  [ fig:2 ] .",
    "notice that the leaves of @xmath157 , are labelled again by @xmath158 while one of the leaves is a no leaf .",
    "attach to each leaf of @xmath157 , labelled by @xmath159 , the subtree of @xmath8 rooted at @xmath160 ( unless @xmath160 is a leaf of @xmath8 ) .",
    "denote the resulting tree by @xmath33 .",
    "this completes the base of the induction .    on the next induction step",
    "perform the same replacement operation , as on the base step , for each subtree of @xmath33 rooted at a leaf of @xmath157 which is not a no leaf . if for a leaf of @xmath157 no such subtree exists , i.e. , vertex @xmath160 is a leaf of @xmath8 , then this vertex is taken as a leaf of @xmath143 , it is a yes leaf if and only if @xmath160 is a yes leaf in @xmath8 .",
    "denote the results of replacements again by @xmath157 , and the resulting tree again by @xmath33 .",
    "further induction steps are performed in the same fashion , by applying the replacement operation , described at the base step , to subtrees of @xmath33 rooted at leaves of the trees @xmath157 obtained on the previous induction step .",
    "the construction of @xmath143 is completed when all leaves of trees @xmath157 become leaves of @xmath143 .",
    "note that the height of @xmath143 is not larger than @xmath140 times the height of @xmath116 for a constant @xmath161 .",
    "now we prove by induction on the construction that @xmath143 is a tree testing membership in @xmath162 ( recall the notation from case  1 , section  [ sub : approx ] ) .",
    "observe that either @xmath163 or @xmath164 is present in the definition of any yes leaf set .",
    "assume , as before , that in @xmath116 the vertex @xmath10 is the closest branch vertex to the root , and @xmath113 is the polynomial attached to @xmath10 . observe that each leaf set of @xmath116 , in particular each yes leaf set , is of the kind either @xmath165 , or @xmath166 , or @xmath167 . in the tree @xmath33 , on the base step of the construction of @xmath143 , the leaf @xmath165",
    "will be replaced by two leaves , @xmath168 and @xmath169 , the leaf @xmath166  by two leaves , @xmath170 and @xmath171 , while the leaf @xmath167  by two leaves , @xmath172 and @xmath173 .",
    "it follows that @xmath174 if and only if @xmath175 is a subset of the set tested by @xmath33 , and similar for sets @xmath166 and @xmath167 .",
    "proceeding by induction , we conclude that @xmath162 is the set tested by @xmath143 .",
    "now construct @xmath137 for arbitrary @xmath145 by induction . on the base step ,",
    "start with the path of @xmath176 computation vertices at the end of which the polynomial @xmath177 is computed .",
    "continue with the tree @xmath178 .",
    "the result of these two steps is the tree @xmath179 .",
    "suppose we constructed the tree @xmath147 for @xmath180 .",
    "the tree @xmath137 is obtained from @xmath147 by attaching to _ each _ no leaf of the latter , the tree @xmath148 , considering the leaf as the root of @xmath148 . by lemma  [ le : cupcap ] ,",
    "the result is indeed @xmath137 .",
    "obviously the height of @xmath137 does not exceed @xmath181 for a constant @xmath161 .",
    "by lemma  [ le : hight ] , @xmath182 for a constant @xmath161 . by ( [ eq : yao ] ) ,",
    "since @xmath183 is compact , @xmath184 for some positive constants @xmath5 .",
    "hence , for the @xmath3-th betti number , @xmath185 it follows , by proposition  [ pr : main ] , that @xmath186 hence , the theorem .",
    "[ th : proj ] let @xmath30 be the height of an algebraic computation tree @xmath116 testing membership in a semi - algebraic set @xmath0 . let @xmath187 be the projection map .",
    "then @xmath188 for some positive constants @xmath5 .",
    "let @xmath189    [ le : proj ] let @xmath116 be a tree for @xmath4 , having height @xmath30 .",
    "then there exists a tree @xmath190 for @xmath191 whose height does not exceed @xmath192 for some positive constant @xmath140 .",
    "lemma  [ le : hight ] implies that there is a tree @xmath193 for @xmath194 having the height not exceeding @xmath195 .",
    "the problem of membership in @xmath191 has input variables @xmath196    construct the tree @xmath190 inductively , starting with a copy of @xmath193 with input variables @xmath197 .",
    "then , using lemma  [ le : cupcap ] , attach to each yes leaf another copy of @xmath193 with input variables @xmath198 , and so on .",
    "the height of the resulting tree @xmath190 is at most @xmath199 times the height of the tree @xmath193 , as required .    according to proposition  [ pr : map ] ,",
    "@xmath200 let @xmath201 , and @xmath202 be the height of a tree for @xmath203 .    since @xmath203 is compact , by ( [ eq : yao ] ) , we have @xmath204 for some positive constants @xmath205 , thus , replacing @xmath202 by a larger number according to lemma  [ le : proj ] , and using @xmath206 , we get @xmath207 for some positive constants @xmath208 . but",
    "@xmath209 so using ( [ eq : proj ] ) we have @xmath210 hence , @xmath211 for some positive constants @xmath5 .    according to ( [ eq : rho ] ) , @xmath212 , while , by proposition  [ pr : main ] , @xmath213 it follows that @xmath214",
    "in this section we apply the general bounds from theorems  [ th : main ] and [ th : proj ] to examples of specific computational problems .",
    "these problems admit obvious variations .",
    "_ let @xmath3 be a positive integer . for given @xmath215 real numbers @xmath216 such that @xmath217 for all @xmath218 , decide whether the following property is true : either all @xmath23 are integer or exactly two of them are not integer .",
    "_      to obtain a lower bound , consider the integer lattice @xmath221 in @xmath72 and let @xmath4 be the union of all open 2-dimensional squares and all vertices",
    ". then the problem is equivalent to deciding membership in @xmath4 .",
    "observe that @xmath4 is not locally closed .",
    "it is homotopy equivalent to a 2-plane with @xmath222 punctured points , so @xmath223 . by theorem",
    "[ th : main ] , the height of any algebraic computation tree testing membership in @xmath4 is @xmath224 .",
    "let @xmath4 be a smooth connected bounded semialgebraic curve in @xmath72 .",
    "then @xmath4 is a ( smooth ) embedding of either the circle @xmath225 or the interval @xmath226 into @xmath72 ( for @xmath227 and a circle this is a knot ) .",
    "the total betti number of @xmath4 is at most 2 .",
    "let @xmath230 be the image of @xmath4 under the projection to the plane on which the crossing number is realized .",
    "then @xmath231 is less by 2 ( if @xmath4 is an embedding of @xmath225 ) , or otherwise by 1 , than the number of connected components of the complement to @xmath230 in the plane . by alexander duality , the number of connected components is the same as @xmath232 , hence the lower bound follows from theorem  [ th : proj ] .",
    "p. brgisser , f. cucker , variations by complexity theorists on three themes of euler , bzout , betti , and poincar , in complexity of computations and proofs ( jan krajicek ed . ) , quaderini di matematica 13 ( 2005 ) , 73 - 152 ."
  ],
  "abstract_text": [
    "<S> we prove that the height of any algebraic computation tree for deciding membership in a semialgebraic set @xmath0 is bounded from below by @xmath1 where @xmath2 is the @xmath3-th betti number of @xmath4 with respect to `` ordinary '' ( singular ) homology , and @xmath5 are some ( absolute ) positive constants . </S>",
    "<S> this result complements the well known lower bound by yao @xcite for _ locally closed _ </S>",
    "<S> semialgebraic sets in terms of the total _ borel - moore _ betti number .    </S>",
    "<S> we also prove that if @xmath6 is the projection map , then the height of any tree deciding membership in @xmath4 is bounded from below by @xmath7 for some positive constants @xmath5 .    </S>",
    "<S> we illustrate these general results by examples of lower complexity bounds for some specific computational problems . </S>"
  ]
}
{
  "article_text": [
    "the lovsz local lemma ( lll ) is a general principle , first introduced in @xcite , for showing that it is possible to avoid a collection of bad events , as long as the bad - events are not too interdependent and are not too likely .",
    "critically , this criterion is able to apply even the set of bad - events becomes arbitrarily large , as long as certain `` local '' conditions are satisfied everywhere .",
    "this powerful ability to construct `` scale - free '' structures makes the lll one of the cornerstones of the probabilistic method in combinatorics .",
    "the lll applies in the context of a probability space @xmath0 along with a set @xmath1 of `` bad - events '' in that space .",
    "in addition , there are only a limited number of `` dependencies '' among the bad - events ; we write @xmath2 to mean that @xmath3 are `` dependent '' with each other ( we define these notions more carefully in section  [ flll - sec ] ) .",
    "the simple `` symmetric '' form of the lll can be stated as follows : suppose each bad - event has probability @xmath4 , and each bad - event is dependent with at most @xmath5 bad - events ( including itself ) , then under the criterion @xmath6 there is a positive probability of avoiding all @xmath1 .",
    "there are stronger and more general lll criteria available as well , such as the asymmetric lll criterion and cluster - expansion , which we will discuss later .",
    "the lll shows that a configuration avoiding @xmath1 exists ; we might wish to know more about such configurations .",
    "one powerful extension of the lll , introduced in @xcite , is the _ lll - distribution _ ; namely the distribution of @xmath0 conditioned on avoiding @xmath1 . in the symmetric lll case , one can show the following bound :    [ flll - dist - prop - simple ] let @xmath7 be any event on the probability space @xmath0 .",
    "then @xmath8    the lll - distribution has a number of uses .",
    "one can identify certain global properties of the configurations obtained by avoiding @xmath1 ; for example , if there is some overall weighting function assigned to individual variables , one can show configurations have bounded total weight .",
    "another application is to show the existence of configurations which partially avoid @xmath1 .",
    "finally , one can show bounds on the entropy of the resulting lll - distribution , which in turn implies that there exist many configurations which avoid @xmath1 .",
    "some of these techniques are developed in @xcite which use them to construct low - weight independent transversals , partial latin transversals and solutions to max-@xmath9-sat , among other applications .",
    "the lll is stated in great generality , in terms of probability spaces and events . for most applications of the lll to combinatorics",
    ", there is a simpler formulation , which we refer to as the _ variable - assignment lll_. in this setting , we have a set of _ variables _ @xmath10 .",
    "we have also a product probability distribution @xmath0 , which selects a integer value @xmath11 for each variable @xmath12 with probability @xmath13 ; the variables are drawn independently and @xmath14 for each @xmath15 .",
    "the events in this space are boolean functions of subsets of the variables .",
    "a typical application of the probabilistic lll shows a positive , but exponentially small , probability of avoiding all the bad - events .",
    "so the lll does not lend itself here to efficient algorithms .",
    "this limitation was overcome in the seminal moser - tardos ( henceforth `` mt '' ) algorithm , which turns nearly all applications of the variable - assignment lll into corresponding polynomial - time algorithms as shown in @xcite , the mt algorithm converges under essentially the same conditions as the lll criterion .",
    "furthermore one may define the _ mt - distribution _ , namely the distribution on the variables at the termination of the mt algorithm .",
    "as shown in @xcite , the same bound holds for the lll - distribution as for the mt - distribution :    [ fmt - dist - prop - simple ] let @xmath7 be any event .",
    "the probability of @xmath7 in the mt - distribution is upper - bounded by @xmath16    although the variable - assignment lll is by far the most common setting in combinatorics , there are other probability spaces for which the lll ( or a generalization known as the _ lopsided lovsz local lemma _ , or _ llll _ ) applies .",
    "these were first introduced in @xcite , which showed that a form of the llll applies to the probability space defined by the uniform distribution on permutations of @xmath17 letters .",
    "this was used in @xcite to construct latin transversals ; the space of random permutations has been used in a variety of other combinatorial constructions as well .",
    "other , more exotic , probability spaces covered by the llll include hamiltonian cycles of the complete graph , matchings , and others @xcite .",
    "the lll - distribution result applies to all of these .",
    "recently , there have been lll algorithms similar to mt developed for general probability spaces , such as @xcite ; nearly all of the probabilistic applications of the llll now have corresponding polynomial - time algorithms .",
    "the general lll algorithms developed by @xcite do not yield any corresponding results on the mt - distribution .",
    "thus , for most of these applications , we do not have any algorithm which can produce configurations with similar global properties to those guaranteed by the lll - distribution .",
    "an exception to this is an algorithm referred as the _ swapping algorithm _ for random permutations , developed in @xcite . that work , which was heavily specialized for the case of permutations , showed that much of the analytical machinery developed for the mt algorithm could be extended to the swapping algorithm .",
    "thus , the swapping algorithm terminates under the same conditions as the lll .",
    "furthermore , an essentially identical bound held for the mt - distribution as for the lll - distribution :    [ fmt - dist - prop - simple - perm ] let @xmath7 be any event .",
    "the probability that @xmath7 holds at the termination of the swapping algorithm is upper - bounded by @xmath16    this principle can be used to efficiently construct an number of combinatorial objects , such as partial latin transversals @xcite .    although the mt - distribution and lll - distribution are not the same , for the most part propositions  [ flll - dist - prop - simple ] , [ fmt - dist - prop - simple ] , [ fmt - dist - prop - simple - perm ] have been essentially the only tools available to obtain bounds on them .",
    "since these three propositions give the same bounds , the mt - distribution and lll - distributions might as well be the same .    in this paper",
    ", we will analyze the mt - distribution more carefully and show tighter bounds on the mt - distribution .",
    "these bounds go beyond the lll - distribution and take much greater advantage of the algorithmic mt process .",
    "thus , in a sense , the mt algorithm is more than a `` constructive '' form of the lll ; it is a probabilistic process in its own right , more powerful in some ways than the lll itself .",
    "we will show three types of results .",
    "first , we will analyze the variable - assignment lll setting .",
    "we will show that if two events @xmath18 are independent ( or partially independent ) under the original distribution @xmath0 , then they retain much of this independence in the mt - distribution .",
    "this will allow us to give stronger upper bounds on the probability of disjunctive events , that is , events of the form @xmath19 .",
    "the next results comes from analyzing the permutation lll setting , and the swapping algorithm , in greater detail . first ,",
    "will show a bound on the mt - distribution which is similar in spirit to the cluster - expansion lll criterion , but is stronger and which is specialized to permutations .",
    "this improvement from the lll - distribution to the mt - distribution applies even for atomic events ( whereas for the variable - assignment lll we only obtain an improvement for complex events ) .",
    "finally , we show another way to improve the analysis of either of the mt algorithms by taking advantage of the fact that the initial configuration of the variables is exactly equal to @xmath0 .",
    "thus , we can deal separately with the cases that an event @xmath7 was true in the initial configuration , and that it became true later during the mt algorithm .",
    "the first such situation is relatively simple , even for complex events .",
    "we illustrate with some new constructions of independent transversals , low - weight latin transversals , and partial latin transversals .      in section  [ fmt - sec ]",
    ", we discuss the mt algorithm and the mt - distribution .",
    "we review the proof strategy used in the original work of @xcite , which was based on two key analytical devices , namely _ witness trees _ and a _ resampling table_. ( there are other methods to analyze the mt algorithm which dispense with the resampling table . )",
    "these concepts will play a central role in our improved mt - distribution .    in section  [ fmt - disj - sec ]",
    ", we analyze the mt - distribution for disjunctive events ( that is , events of the form @xmath20 ) .",
    "we show that , in effect , that in the mt - distribution multiple atomic events @xmath21 can simultaneously occur ; thus , the probability that one of them occurs is _ significantly less _ than the sum of their probabilities . for , suppose that each @xmath22 affects at most @xmath23 bad - events ; for the symmetric lll , this would give us the following : @xmath24 ( by contrast , using proposition  [ fmt - dist - prop - simple ] would give @xmath25 instead of @xmath26 )    we give two applications of this . in section",
    "[ find - trans - sec ] , we analyze independent transversals .",
    "given a graph @xmath27 and a subset of vertices @xmath28 , we show that as long as @xmath29 is small enough then there is an independent transversal avoiding @xmath29 .",
    "this significantly generalizes results of @xcite , which showed this only for @xmath29 a singleton set .",
    "we show this by computing the mt distribution for an appropriate event .",
    "this gives a constructive version of a result shown by rabern @xcite .",
    "in section  [ rainbow - col ] , we show to construct combinatorial configurations via the mt algorithm , while simultaneously ensuring that an auxiliary set of hyperedges is mostly rainbow .    in section  [ fperm - lll - sec ] , we review the permutation lll and the swapping algorithm developed in @xcite .",
    "the analysis of @xcite is based on constructing witness trees , in a manner similar to the mt algorithm ( one can not use a resampling table for this analysis ) . through painstaking analysis ,",
    "a similar bound is shown for the probability of encountering any given witness tree for the swapping algorithm as for the original mt algorithm ; this in turn automatically leads to bounds on the mt - distribution .",
    "we describe a new method of constructing witness trees , which gives a more succinct or `` compressed '' history for why any given event @xmath7 may have come true during the execution of the swapping algorithm .",
    "this analysis is inspired by @xcite , which constructed similar ( but simpler ) compressed trees for the variable - assignment llll .",
    "we show that a similar probabilistic bound can be shown for these compressed witness trees as for the original witness trees .",
    "this leads to a new bound on the mt - distribution , which is similar to the cluster - expansion lll criterion , but takes advantage of extra structure which exists for permutations .",
    "( we can not give here any simple summary of this result for the symmetric lll , as it requires more information than is available in the symmetric lll setting . ) the outline of the proof is quite similar to the original proof of @xcite ; however , there are numerous results and proofs which must be changed in subtle but significant ways .",
    "we recapitulate the proof of @xcite and give a mostly self - contained proof .",
    "however , certain technical results which are identical to @xcite are omitted from this paper .    in section  [ fweighted - latin - sec ]",
    ", we use these results to show better bounds on weighted latin transversals .",
    "we show that , given an @xmath30 matrix @xmath31 , in which all the entries are assigned a color and each color appears at most @xmath32 times in the matrix . showing that a latin transversal of @xmath31 exists when @xmath33 is a classical application of the llll .",
    "we show that , under these conditions , one can construct a _ weighted _ latin transversal of weight at most @xmath34 ; previous bounds using the lll - distribution would only show the existence of latin transversal of weight @xmath35 .    in section  [ finitial - config - sec ]",
    ", we discuss how to separately analyze the initial configuration , which has a much simpler distribution than configurations that arise during subsequent steps of the mt algorithm or swapping algorithm .",
    "we give an application of this principle ( which also combines methods from section  [ fperm - lll - sec ] ) to partial latin transversals .",
    "such partial latin transversals were considered before in @xcite ; our bounds are asymptotically stronger than those .",
    "we note that the quantitative improvements given by our new results are rather modest .",
    "however , we find it remarkable that we are able to give these types of bounds on the mt - distribution beyond the lll .",
    "together with the work of @xcite , this suggests that the mt algorithm can be regarded as a probabilistic process in its own right , for which there is a whole world of results beyond the scope of the lll . at the current time , these results are isolated and sporadice ; we do not have any organizing principle for them akin to the role played by the lll .",
    "the simplest setting for the lll is the variable - assignment setting . here",
    "we have a set of _ variables _ @xmath10 with a product probability distribution @xmath0 .",
    "we have _ events _ , which are boolean functions of subsets of the variables .",
    "we say that @xmath36 iff @xmath37 overlap in some variable(s ) , i.e. , if each of them involves some common @xmath12 .",
    "( note that we always have @xmath38 . also note that indeed this coincides with our previous definition of @xmath39 ; two events are dependent iff they involve some common variable . )    in this setting , the mt algorithm can be stated very simply as follows :    1 .",
    "draw @xmath10 from @xmath0 .",
    "( we refer to this @xmath10 as the _ initial configuration _ ) 2 .",
    "repeat while there is some true bad event : 1 .",
    "choose a currently - true bad event @xmath40 arbitrarily .",
    "resample all the variables involved in @xmath41 from the distribution @xmath0 .",
    "we will assume , without loss of generality here , that all the bad - events @xmath1 are _ atomic _ events .",
    "that is , each event @xmath41 is defined by some conjunction of the form @xmath42 .",
    "it is convenient in this case to identify such an atomic event with the set of tuples @xmath43 .",
    "we say that @xmath44 if they overlap on a variable , that is , @xmath45 .    in our analyses , there are two probability distributions at play .",
    "first , there is the `` internal '' distribution @xmath0 , which the mt algorithm is simulating .",
    "second , there is the `` external '' probability distribution describing the execution of the mt algorithm .",
    "we refer to probabilities of the first type as @xmath46 and probabilities of the second type ( which are the true probabilities of the events of interest ) as simply @xmath47 .    as",
    "shown in @xcite , the mt algorithm converges under essentially the same conditions as the lll criterion .",
    "[ fmt - main - prop ] suppose that @xmath48 satisfies the cluster - expansion lll criterion .",
    "then the mt algorithm terminates with probability one ; the expected number of resamplings of any @xmath41 is at most @xmath49 .",
    "as mt terminates , one may define the _ mt - distribution _ , namely the distribution on the variables at the termination of the mt algorithm .",
    "using ideas from @xcite and @xcite one can show :    [ fmt - dist - prop1 ] let @xmath7 be any event in the probability space @xmath0 .",
    "then @xmath50    one can show an identical bound for the lll - distribution ( see appendix  [ flll - sec ] ) . in this sense ,",
    "the mt - distribution and lll - distriution might as well be the same . in section  [ fmt - disj - sec",
    "] , we will examine how for event defined by disjunction of atomic clauses , we can obtain stronger bounds than proposition  [ fmt - dist - prop1 ] . before doing so , we review the use of witness trees , one of the key technical tools to analyze the mt algorithm      in @xcite , a powerful methodology for analyzing the mt algorithm , based on _ witness trees _ , was introduced .",
    "we summarize this approach here .",
    "suppose that we run the mt algorithm ( possibly not to completion ) , resampling bad events @xmath51 , and that @xmath31 is true at time @xmath52 .",
    "then we can construct a witness tree @xmath53 ; we place @xmath31 at the root of the tree .",
    "we go backwards in time @xmath54 ; we try to add a new leaf node labeled @xmath55 to the tree .",
    "the rule for constructing this tree is that we may place this node as a child of some other node @xmath56 labeled @xmath57 ; if there are multiple possible locations , we choose one of greatest depth ( breaking ties arbitrarily ) . if there are no such positions available then we do not add any leaf node labeled @xmath55 .",
    "we distinguish between two related senses of the term `` witness tree . ''",
    "first , there is the random variable @xmath53 .",
    "second , there are possible values that @xmath53 could take on ; these are ordinary ( non - random ) variables .",
    "we may fix some labeled tree @xmath58 and discuss under what conditions it could be produced . in this second situation , we will refer to @xmath58 as a _ tree - structure_. we say that a tree - structure @xmath58 _ appears _ if @xmath59 for some @xmath60 .",
    "we will always adopt the convention that that when we discuss a set of tree - structures @xmath58 , we will restrict our attention to those which could possibly be produced by as a value of @xmath53 . for example , we will assume that tree - structures have the property that all the nodes in a layer receive labels which are independent .    for any tree - structure @xmath58 ,",
    "whose nodes are labeled @xmath61 ( all but the root node is a bad - event ) , we define the _ weight _ of @xmath58 by @xmath62    one very useful result shows how to bound the weight of certain collections of tree - structures    [ ftotal - weight - prop ] the total weight of all tree structures @xmath58 rooted in @xmath31 is at most @xmath63",
    ".    one method of analyzing the mt algorithm is based on a coupling construction involving a _ resampling table _ @xmath64 . in this construction",
    ", one selects , for each variable @xmath15 , an infinite string of values @xmath65 which are each drawn independently from the distribution of @xmath0 for variable @xmath15 .",
    "the initial configuration sets @xmath66 for all @xmath15 .",
    "the mt algorithm , after this point , is deterministic : instead of resampling a variable , we simply take the next value from @xmath67 .",
    "now , one can derive for any tree - structure @xmath58 , a necessary condition in order for @xmath58 to appear ; namely , certain entries of @xmath68 are forced to take on certain values . more specifically , for any node @xmath69 and variable @xmath70 $ ] , we define @xmath71 to be the number of nodes of @xmath58 involving variable @xmath15 which are at a greater depth than @xmath72 .",
    "we also define , for any @xmath69 , the configuration @xmath73    we say that @xmath58 is _ compatible _ with @xmath64 , if for all nodes @xmath69 labeled by an event @xmath7 ( for all the nodes of @xmath58 save the root node , @xmath7 is a bad - event ) , the event @xmath7 is true on the configuration @xmath74 .",
    "we also define the _ root configuration _ of a tree @xmath58 to be @xmath75 , where @xmath72 is the root node of @xmath58 .",
    "the following are standard facts from the mt analysis    suppose that when we run the mt algorithm with a given resampling table @xmath64 , we produce a witness tree @xmath76 .",
    "then @xmath76 is compatible with @xmath64 .",
    "the probability that a tree - structure @xmath58 is compatible with @xmath64 is exactly equal to @xmath77 .",
    "each node @xmath69 imposes a condition on specific entries of @xmath64 ; namely , for each @xmath78 , it imposes a constraint on @xmath79 for one specific value of @xmath80 .",
    "all other entries of @xmath64 are completely unconstrained .",
    "thus , when @xmath64 is selected at random , then each such constraint is independent .",
    "thus , the overall probability that @xmath58 is compatible with @xmath64 is exactly equal to @xmath77 .",
    "these two results give a simple proof of proposition  [ fmt - main - prop ] . for",
    ", suppose we run the mt algorithm with a resampling table @xmath64 .",
    "for each resampling of @xmath41 , one may construct a witness tree rooted in @xmath41 .",
    "these witness trees are all distinct and are all compatible with @xmath64 .",
    "so the number of resamplings of @xmath41 is at most the number of witness trees rooted in @xmath41 compatible with @xmath64 .",
    "so the expected number of resamplings of @xmath41 is at most @xmath81 .",
    "these results also give a simple proof of proposition  [ fmt - dist - prop1 ] . for ,",
    "suppose we run the mt algorithm with a resampling table @xmath64 until some event @xmath7 occurs .",
    "( this may already be at the initial configuration ) .",
    "as soon as @xmath7 occurs , we construct the corresponding witness tree @xmath76 rooted in @xmath7 .",
    "this implies that there is a tree - structure compatible with @xmath64 rooted in @xmath7 , which has probability at most @xmath82 .",
    "in this section , we will examine the following question .",
    "suppose we are given @xmath83 events @xmath84 ( these are not the bad - events ) .",
    "we would like to upper - bound the probability of their disjunction @xmath85 . to simplify the notation , we write @xmath86 for the event @xmath20 .    of course",
    ", we always have the union bound @xmath87 each of the terms @xmath88 can in turn be bounded by proposition  [ fmt - dist - prop1 ] .",
    "we would like improve on this estimate .",
    "this is often possible for the original probability space @xmath0 ; for example , if the events @xmath21 are independent , then we would have @xmath89 .",
    "our goal is to show a similar type of bound for the mt - distribution .",
    "given any event @xmath7 , we say that a bad - event @xmath40 _ requires @xmath7 _ if we have @xmath90 ; that is , whenever @xmath41 is true , then @xmath7 is necessarily true as well .",
    "we define @xmath91 to be the set of bad - events @xmath40 which do _ not _ require @xmath86 . for each @xmath92",
    ", we define @xmath93 to be the set of tree - structures which are rooted in @xmath22 and such that all deeper nodes are labeled by elements of @xmath94 .",
    "that is , when forming such tree - structures , we do _ not _ allow any bad - events which require @xmath86 .",
    "we note a few simple propositions about such tree - structures .",
    "[ fxx1 ] suppose that we run the mt algorithm resampling bad - events @xmath95 until the first time @xmath80 that @xmath86 becomes true .",
    "( this might already be in the initial configuration , in which case @xmath96 ) .",
    "suppose that @xmath22 is true at this time ; then the corresponding witness tree @xmath76 for @xmath22 is an element of @xmath93 .",
    "suppose not , so that @xmath76 contains a node labeled @xmath41 which requires @xmath86 .",
    "this implies that @xmath97 requires @xmath86 , for some @xmath98 .",
    "but as @xmath97 was true at time @xmath99 , by definition @xmath86 was true at time @xmath100 as well .",
    "this contradicts minimality of @xmath80 .",
    "[ fxx2 ] the total weight of all tree - structures in @xmath93 is bounded by @xmath101    we may form a tree - structure rooted in @xmath22 as follows .",
    "first , we have the root node labeled @xmath22 .",
    "next , we select an independent set @xmath102 ; for each @xmath103 we select a further tree - structure rooted in @xmath41 .",
    "this over - counts the set of tree - structures rooted in @xmath22 , so we have @xmath104    let @xmath105 and @xmath106 .",
    "we define a related tree - structure @xmath107 as follows .",
    "we start with a root node labeled @xmath108 .",
    "we then proceed through the non - root nodes of @xmath58 in bfs order ( i.e. starting with nodes close to the root ) ; for each node @xmath69 in this order , we try to add @xmath72 to @xmath107 according to the usual rule for constructing witness trees .",
    "specifically @xmath72 is placed as a child of some node @xmath109 , if their labels are connected ; if there are multiple such nodes @xmath56 , we select one of greatest depth ( breaking ties arbitrarily ) .",
    "[ ftrans - prop ] suppose that @xmath105 is a tree - structure compatible with @xmath64 .",
    "suppose that @xmath108 is true on @xmath110 ; then the tree - structure @xmath111 is also compatible with @xmath64 .",
    "consider any non - root node @xmath112 of @xmath58 labeled by a bad - event @xmath41 .",
    "suppose that @xmath113 .",
    "if @xmath112 is present in @xmath107 , then any @xmath114 which occur deeper than @xmath112 and which shares variable @xmath115 are eligible to be placed as children of @xmath112 , hence will be placed in the tree @xmath107 deeper than @xmath112 .",
    "conversely , for each node of @xmath116 involving variable @xmath115 below @xmath117 , there must be a corresponding node @xmath118 below @xmath114 . hence , @xmath119 for all variables @xmath115 involved in event @xmath41 .",
    "thus , @xmath120 agrees with @xmath121 on all variables involved in @xmath41 . by hypothesis , @xmath41 holds on @xmath120 ; so it must also hold on @xmath121 .    next ,",
    "consider the root node @xmath56 of @xmath107 , labeled @xmath108 , and suppose that @xmath122 .",
    "any non - root node of @xmath58 which involves variable @xmath115 is eligible to be placed as a child of @xmath56 , hence will occur in @xmath107 .",
    "conversely , any nodes in @xmath107 which involve variable @xmath115 ( other than the root node @xmath56 ) must have come from some node of @xmath58 .",
    "hence @xmath123 . by hypothesis",
    ", @xmath108 holds on @xmath124 so it must also hold on @xmath125 .",
    "thus , we have shown that @xmath107 is compatible with @xmath64 .",
    "we now show the crucial claim :    [ fx2 ] suppose that when we run the mt algorithm with a resampling table @xmath64 , that @xmath86 is true .",
    "then there is some @xmath126 $ ] and a tree - structure @xmath105 such that @xmath58 is compatible with @xmath64 _ and _ all the events @xmath127 are _ false _ on the configuration @xmath110 . is fixed .",
    "if we are allowed to re - order the events @xmath128 , then this result would be vacuously true ( we would simply set @xmath129 to be some true event in @xmath128 . ) ]    if @xmath22 is true , then by proposition  [ fxx1 ] there is a witness tree @xmath105 compatible with @xmath64 .",
    "let @xmath15 be _ minimal _ such that there is a witness tree @xmath130 compatible with @xmath64 .",
    "it must be that @xmath131 are all false on @xmath132 ; for if @xmath108 is true on @xmath132 and @xmath133 , then @xmath111 is compatible with @xmath64 , contradicting minimality of @xmath15 .",
    "[ fx3 ] let @xmath105 .",
    "the probability that @xmath58 is compatible with @xmath64 and that @xmath127 are false on @xmath132 is exactly equal to @xmath134    in order for @xmath58 to be compatible with @xmath64 , there is a condition that @xmath22 is true on @xmath132 . also , by hypothesis",
    ", we must have @xmath127 false on @xmath132 . as @xmath135 , the probability that these events are jointly true is @xmath136 .",
    "also , for each non - root node @xmath114 labeled @xmath41 , there is a condition that @xmath41 is true on @xmath124 .",
    "this event has probability exactly @xmath137 .    finally , observe that the conditions corresponding to disjoint nodes involve distinct entries of @xmath64 .",
    "hence , they are independent , and the total probability that @xmath58 satisfies all these conditions is exactly equal to their product .    if the non - root nodes of @xmath58 are labeled @xmath138 , then this is exactly equal to @xmath139 which can be arranged to @xmath140    [ fx4 ] the probability of the event @xmath86 is at most @xmath141    the event @xmath86 occurs only if there is some @xmath105 compatible with @xmath64 such that @xmath142 holds on @xmath143 . by the union bound , we have @xmath144    observe that while @xmath145 is naturally symmetric in the ordering of the events @xmath21 , the rhs value @xmath146 breaks this symmetry .",
    "[ fcor - a ] we have @xmath147    using proposition  [ fx4 ] : @xmath148    we can simplify corollary  [ fcor - a ] in the symmetric lll setting .",
    "suppose that @xmath149 and @xmath150 for all @xmath40 , and that @xmath6 .",
    "suppose that each event @xmath22 is dependent with @xmath151 bad - events .",
    "then we have @xmath152    in the symmetric lll setting , we have @xmath153 for any event .",
    "hence , for any @xmath22 , we have @xmath154 .",
    "suppose we are given a graph @xmath27 of maximum degree @xmath32 , along with a partition of its vertices into @xmath9 blocks as @xmath155 , such that each block @xmath156 has cardinality @xmath157 .",
    "a _ transversal _",
    "@xmath52 of @xmath27 is simply a set of vertices which selects exactly one element from each block , i.e. @xmath158 for @xmath159 .",
    "an _ independent transversal _ ( also known as an _ independent system of representatives _ ) is a transversal that is also an independent set in @xmath27 .",
    "this structure has received significant attention , starting in @xcite , and later in works such as @xcite ) .",
    "haxell showed in @xcite that @xmath160 is a sufficient condition for the existence of an independent transversal ; this condition is existentially optimal , in the sense that @xmath161 is not always admissible .",
    "however , there is no known constructive algorithm to produce the independent transversal in this case .    in @xcite",
    ", rabern showed something even stronger : when @xmath160 , then for any subset @xmath28 with @xmath162 , there is an independent transversal @xmath163 with the property that @xmath164 .",
    "the condition on the size of @xmath29 is clearly optimal ( otherwise one could choose @xmath165 to be equal to one of the blocks ) .",
    "this result , however , uses a descent argument which could take exponential time .",
    "when @xmath166 , then one can naturally use the mt algorithm to select an independent transversal ; the variables in this case correspond to each block , and the value of variable @xmath15 is simply the vertex @xmath167 selected for @xmath52 .",
    "a bad - event in this context is that both end - points of an edge are selected .",
    "this is a straightforward and motivating application of the cluster - expansion lll criterion @xcite .",
    "[ ftrans - prop1 ] suppose @xmath166 .",
    "then the cluster - expansion lll criterion is satisfied with @xmath168 for all @xmath40 .    using the mt - distribution",
    ", we immediately have an upper bound on the probability that an independent transversal contains any given vertex .",
    "[ ftrans - prop11 ] suppose @xmath169 and @xmath166 .",
    "the probability that the mt - distribution terminates with an independent transversal @xmath170 is at most @xmath171    we now address the following question : suppose we are given some arbitrary set @xmath28 .",
    "we would like to estimate the probability of the event that @xmath29 and @xmath52 intersect , i.e. @xmath172 .",
    "proposition  [ ftrans - prop11 ] addresses this only for @xmath29 a singleton set .",
    "of course , we can use the union bound to estimate @xmath173 .",
    "however , we will show stronger bounds using our mt - distribution results .",
    "[ fugly - prop ] suppose that @xmath29 is a subset of one block @xmath174 .",
    "define the event @xmath175 .",
    "letting @xmath94 be the set of all bad - events which do not require @xmath7 , we have that for any @xmath176 which involves the block @xmath174 , we have @xmath177    let @xmath52 denote the set of trees rooted in a bad - event defined by an edge @xmath178 , where @xmath179 .",
    "we can form @xmath52 recursively as follows : we select a particular such edge ( there are at most @xmath180 such edges ) for the root node .",
    "we then select the children of this root node ; one of these may be any edge in the block of @xmath112 , and the other may be any other edge involving @xmath181 .",
    "the weight contributed by the root node is @xmath182 . the total weight of the former type is @xmath183 by proposition  [ ftrans - prop1 ] .",
    "the total weight of the latter is the total weight of @xmath52 .",
    "thus , if we have any real number @xmath184 satisfying the bound @xmath185 it follows that the total weight of @xmath52 is at most @xmath115 .",
    "thus , solving for @xmath115 , we have that the total weight of the trees in @xmath52 is at most @xmath186    we can also form a tree for the event @xmath187 .",
    "the total probability of the event @xmath188 in @xmath0 is @xmath189 .",
    "it may also have a child corresponding to a tree in @xmath52 , so we have @xmath190 and further algebra gives us the claimed result .",
    "suppose @xmath166 .",
    "then , for any @xmath28 , we have in the mt - distribution @xmath191    if @xmath192 , then discard vertices so that the residual graph has exactly @xmath193 remaining vertices in each block .",
    "so we assume @xmath194 for the remainder of this proof . in this case",
    "we have @xmath195 .",
    "let us write @xmath196 , and sort the blocks by the cardinality of their intersection with @xmath29 , so that we have @xmath197 . for each @xmath159 define the event @xmath22 to be that @xmath198 , or equivalently the event @xmath199 .",
    "in the space @xmath0 , the event @xmath22 has probability @xmath200 and all such events are independent .",
    "next let us compute @xmath201 for an event @xmath22 .",
    "an independent set of neighbors of @xmath22 in @xmath94 may consist of the empty set , or it may consist of a single edge involving some vertex @xmath202 . as there are exactly @xmath203 vertices in @xmath204 and each has degree up to @xmath32 , in total we have @xmath205 .",
    "we next apply proposition  [ fx4 ] to obtain : @xmath206    now , we know that the values @xmath207 satisfy the constraints @xmath208 and @xmath209 . we claim that , for any real values @xmath210 which satisfy these two constraints , the maximum possible value of @xmath211 is obtained when @xmath212 .    for , by compactness",
    ", there is some @xmath207 which minimizes @xmath213 ; suppose we have @xmath214 strictly for some @xmath215 .",
    "now , consider the directional derivative of @xmath165 in the direction of changing @xmath216 by @xmath217 and @xmath218 by @xmath219 .",
    "it is easy to see by concavity that this increases all the summands corresponding to @xmath220 and has no effect on the summands @xmath221 .",
    "the change committed to the summands correspond to @xmath15 and @xmath222 can be calculated as @xmath223 ; as @xmath224 this is @xmath225 .",
    "this shows that changing @xmath226 by a sufficiently small value will preserve the constraints @xmath227 while increasing @xmath165 .",
    "so , substituting @xmath228 for @xmath159 gives @xmath229    [ ftrans - prop2 ]",
    "suppose @xmath230 .",
    "then , for any @xmath28 , we have in the mt - distribution @xmath231    we assume that @xmath162 as otherwise this is vacuously true .",
    "let us write @xmath196 .",
    "for each @xmath159 define the event @xmath22 to be that @xmath198 .",
    "we apply proposition  [ fx4 ] to obtain : @xmath232    now define the function @xmath233    by proposition  [ fugly - prop ] , we have that @xmath234 .",
    "thus , if we define @xmath235 then we have shown that @xmath236 .",
    "so , we need to find an upper bound on the algebraic function @xmath213 .",
    "now , we claim that subject to the condition @xmath237 and @xmath238 , that @xmath213 is maximized at the vector @xmath239 . for",
    ", suppose @xmath207 maximizes this quantity ( a maximum exists by compactness ) , and among all such points minimizes the expression @xmath240 .",
    "let @xmath241 , so that @xmath242 . if @xmath243 , then @xmath244 and we are done .",
    "otherwise , let us consider evaluating the function @xmath213 while fixing @xmath245 .",
    "we claim that we have @xmath246 contradicting either that @xmath213 is maximized or that @xmath247 is minimized .",
    "canceling the common term @xmath248 , we see that ( [ fy1 ] ) holds iff we have : @xmath249    this is an algebraic inequality involving a constant number of parameters , so it can be verified algorithmically ; a computer algebra package shows that that it holds for @xmath250 and @xmath251 .",
    "thus , we have that shown that @xmath252 and the claim is proved .",
    "we note that a similar result may be shown when @xmath253 ; however , there are a number of cases depending on the size of @xmath29 , and the overall proof is more complex .",
    "[ fcor1 ] suppose @xmath230 .",
    "let @xmath29 be any set of vertices with @xmath162 .",
    "then there is an independent transversal which omits all the vertices in @xmath29 , which can be found in polynomial time .    by proposition  [ ftrans - prop2 ] ,",
    "there is a probability of at least @xmath254 that the mt - distribution produces such an independent transversal ; this expression is strictly positive for @xmath255 .",
    "thus corollary  [ fcor1 ] is a constructive version of the result of rabern @xcite ( albeit with quantitatively weaker parameters ) .",
    "suppose we are given a hypergraph @xmath256 , and we wish to find a @xmath257-coloring @xmath258 of @xmath259 which is mostly rainbow ; more specifically , we want to maximize the number of edges @xmath260 with the property that all the vertices in @xmath261 receive distinct colors .",
    "in addition , we suppose that this coloring must exactly satisfy some additional structural properties .",
    "for example , we may an graph @xmath27 on the same vertex set , and we require that @xmath258 is a non - repetitive vertex coloring of @xmath27 , etc .",
    "the lll and the mt algorithm are typical tools to produce such colorings @xmath258 of @xmath27 .",
    "we may adopt the following strategy : we use the mt algorithm to choose a coloring satisfying good structural properties , while ignoring @xmath259 .",
    "we then show that the edges of @xmath259 have a good probability of being rainbow at the end of this process .",
    "[ rainbow - thm ] suppose that @xmath0 is the probability distribution in which each vertex @xmath169 is assigned each color in the range @xmath262 independently with probability @xmath263 .",
    "suppose we have a collection @xmath1 of bad - events , and a weighting function @xmath264 satisfying the cluster - expansion lll criterion for the distribution @xmath0 .",
    "define @xmath265    then , for any edge @xmath266 , we have @xmath267    let @xmath268 , and define the event @xmath31 that @xmath261 fails to be rainbow .",
    "for each pair of vertices @xmath269 , define the event @xmath270 .",
    "note that @xmath31 occurs iff @xmath271 occurs for some @xmath272 .",
    "next , observe that for any @xmath269 , we have @xmath273 ; the reason for this is that an independent set of bad - events @xmath163 of neighbors of @xmath271 , may consist of one or zero bad - events involving @xmath112 and one or zero bad - events involving @xmath72 .",
    "the total contribution of each of these cases is at most @xmath274 .",
    "thus , by corollary  [ fcor - a ] , we have @xmath275    now , we may compute @xmath276 very readily : in order to avoid event @xmath31 , the first vertex @xmath277 may take an arbitrary color ; the next vertex may take any color aside from that of @xmath278 , and so on . the total probability that @xmath261 is rainbow is thus @xmath279 .",
    "so @xmath280    the result follows .",
    "in the permutation lll setting , we select @xmath281 permutations @xmath282 independently and uniformly from @xmath283 .",
    "there is a collection @xmath1 of bad - events , which in this setting will always be _ atomic events _ ; that is , every bad - event @xmath41 is equivalent to some conjunction of the form @xmath284 .    as shown in @xcite , the lopsided lll applies in this setting , where we define the following lopsidependency graph : two events are connected if they share a domain or range variable .",
    "that is , @xmath3 are connected if either ( 1 ) for some @xmath285 we have that @xmath41 demands @xmath286 and @xmath287 demands @xmath288 or ( 2 ) for some @xmath289 we have have that @xmath41 demands @xmath286 and @xmath287 demands that @xmath290 .",
    "both demand @xmath286 then they are not connected .",
    "we will not use this stronger formulation here , which in practice offers little benefit . ]",
    "it will be convenient to identify an atomic event with the set of tuples @xmath291 .",
    "for any pairs @xmath292 we say that @xmath293 if @xmath294 or @xmath295 .",
    "similarly for triples @xmath296 , @xmath297 we say that @xmath298 if @xmath299 and @xmath293 . with these notations",
    ", we can define the lopsidependency relation more simply by @xmath300    now , suppose we are given a weighting function @xmath264 , which satisfies the cluster - expansion lll criterion @xmath301 then there is a positive probability that none of the bad - events occurs .",
    "the lll formulation only shows a positive probability that bad - events can be avoided .",
    "as shown in @xcite , a swapping algorithm similar to the moser - tardos algorithm can be used to explicitly construct permutations @xmath282 which avoid @xmath1 .",
    "we summarize this algorithm here :    1 .",
    "generate the permutations @xmath302 uniformly at random and independently .",
    "2 .   while there is some true bad - event : 1 .   choose some true bad - event @xmath40 arbitrarily .",
    "2 .   for each permutation that is involved in @xmath41",
    ", we perform a _ swapping _ of all the relevant entries .",
    "( we will describe the swapping subroutine  swap \" shortly . )",
    "we refer to this step as a _ resampling _ of the bad - event @xmath41 .",
    "+ each permutation involved in @xmath41 is swapped independently , but if @xmath41 involves multiple entries from a single permutation , then all such entries are swapped _",
    "simultaneously_. for example , if @xmath41 consisted of triples @xmath303 , then we would perform @xmath304 and @xmath305 , where the  swap \" procedure is given next .",
    "the swapping subroutine @xmath306 for a permutation @xmath307 \\rightarrow [ t]$ ] as follows :    repeat the following for @xmath308 :    * select @xmath309 uniformly at random among @xmath310 - \\{x_1 , \\dots , x_{i-1 } \\}$ ] . * swap entries @xmath311 and @xmath309 of @xmath312 .",
    "please see @xcite for many more details on the behavior of this rather complex algorithm .",
    "we will examine the mt - distribution ( the distribution of states at the termination of the swapping algorithm ) in this section .",
    "we will show much stronger bounds for the mt - distribution than can be shown for the lll - distribution . unlike the variable - assignment setting , we are able to show improved bounds even for atomic events .",
    "we contrast our analysis with the work of @xcite and @xcite .",
    "they develop a general algorithmic framework for the lll , which includes random permutations as a special case .",
    "much of the power of their approach comes from the ability to abstract away from the specific combinatorial structure of permutations .",
    "the analysis of the swapping algorithm in @xcite is quite technically detailed , with a number of `` magical cancellations , '' so the level of abstraction afforded by @xcite , @xcite seems like a positive development .",
    "however , in this paper we will take advantage of this combinatorial structure , showing bounds which are not even expressible in the general lll framework .",
    "suppose we are given an atomic event @xmath313 .",
    "as usual , we abuse notation so that the event @xmath31 is defined as the set @xmath314 .",
    "our goal is to show an upper bound on the probability that @xmath31 occurs in the output of the mt - distribution .    as shown in @xcite",
    ", one can show a bound on the mt - distribution which is essentially identical to the `` generic '' bound one can show for the lll - distribution :    [ fprev - lll - prop ] the probability that any atomic event @xmath31 occurs in the output distribution of the swapping algorithm satisfies @xmath315 .",
    "we will show a stronger bound in this section .",
    "in the bound given by proposition  [ fprev - lll - prop ] , we are summing over independent sets ; we will show how to restrict the summation to sets which are independent and also _",
    "orderable_.    we say that a set @xmath316 is _ orderable _ to @xmath31 if there exists an ordering of @xmath317 such that for all @xmath318 there is some @xmath319 such that @xmath320 .    for any atomic event @xmath31 , we define @xmath321 to be the collection of all independent , orderable sets to @xmath31 .",
    "we also define @xmath322 in terms of this as follows :    [ fthetaprime - def ] for any atomic event @xmath31 , we define @xmath323    observe that @xmath324 .",
    "also , observe that @xmath325 is always an element of @xmath321 , and so @xmath326 .",
    "the main result we will show is the following :    [ fnew - lll - prop ] the probability that any atomic event @xmath31 occurs in the output distribution of the swapping algorithm satisfies @xmath327 .",
    "it is difficult to compute @xmath328 directly using definition  [ fthetaprime - def ] . when applying theorem  [ fnew - lll - prop ] , we often use the following simple upper bound :    for any @xmath329 we define @xmath330 let @xmath313",
    ". then we have @xmath331    suppose we are given some @xmath332 , which we have sorted as @xmath317 along with a corresponding choice of @xmath333 such that @xmath334 .",
    "necessarily , @xmath335 are distinct . for each @xmath308",
    ", we define the sets @xmath336    this is well - defined as @xmath335 are distinct . now observe that @xmath337 .",
    "hence , summing over all such @xmath338 , we have @xmath339    now , observe that @xmath340 is either an empty set , or consists of a single bad - event @xmath341 .",
    "the total weight of all such @xmath41 is at most @xmath342 .",
    "hence , taking a product over @xmath308 we have @xmath343      the proof strategy , as in @xcite , will be based on generating a witness tree that `` explains '' the history behind why @xmath31 came to be true .",
    "if @xmath31 is true at time @xmath52 during the execution of the swapping algorithm , we may build a witness tree @xmath53 for it , as follows .",
    "we start by creating a root node labeled @xmath31 .",
    "we go backward in time @xmath344 ; we attempt to place the resampled event @xmath55 into the tree . if there is some node in the tree labeled @xmath57 , we may place @xmath55 as a child of @xmath55",
    "; if there are multiple locations , we place @xmath55 into the position of greatest depth ( breaking ties arbitrarily ) .    however , there is one additional restriction we enforce : we require that the set of labels for the children of the root node , forms an orderable set to @xmath31 .",
    "if adding @xmath55 to the witness tree would violate this condition , we discard @xmath55 ( and the witness tree is not updated ) .",
    "note that this criterion only has an effect if the root node is the only node of @xmath76 which is labeled with a neighbor of @xmath55 .    in order to distinguish the conventional type of witness tree from this more restrictive type of tree",
    ", we refer to the latter as a _ restricted witness tree_. the key technical lemma we will show is the following :    [ fwitness - tree - lemma ] suppose that @xmath58 is a tree - structure rooted in @xmath31 .",
    "then the probability that @xmath58 appears as a restricted witness tree in the swapping algorithm is at most @xmath77 .    in @xcite",
    ", it was shown that the witness tree lemma holds when we build witness trees according to the usual rule ( in which we do not enforce the added restriction about orderable sets ) .",
    "before we give the full proof of lemma  [ fwitness - tree - lemma ] for restricted witness trees , we discuss a simple example which gives the intuition behind it .",
    "suppose we have an event @xmath345 , and that during the swapping algorithm two other bad - events were first resampled , @xmath346 .",
    "we want to build a witness tree for the event that @xmath31 becomes true after these resamplings .    in the conventional method of building witness trees ( as in @xcite ) , the corresponding witness tree @xmath347 would have a root node labeled @xmath31 with two children labeled @xmath348 .",
    "then a necessary condition for @xmath58 to appear is that in the initial permutation we have @xmath349 .",
    "next , we must resample @xmath348 ( in some unspecified order ) . after the second such resampling",
    ", we must perform the swap such that @xmath350 . regardless of the state of the system at the time of this second resampling , this has probability @xmath351 .",
    "thus , with a little more careful analysis , we say that the probability that this tree appears is at most @xmath352 .",
    "however , observe that in this argument the _ first _ resampling among @xmath348 played essentially no role .",
    "the key events that `` cause '' @xmath31 to become true only happen during the _ second _ resampling .",
    "thus , we should be able explain @xmath31 without mentioning @xmath353 ; in other words , it gives a more `` compressed '' history for why @xmath31 become true .",
    "and indeed , the restricted witness tree @xmath76 for @xmath31 has only a _",
    "single _ child  either @xmath353 or @xmath354 , whichever occurred last .",
    "( observe that @xmath355 is not orderable to @xmath31 . )",
    "although this is clear for small trees of only a few nodes , there are many other complications that can arise for larger trees .",
    "these complications are covered in the intricate and highly technical proof of @xcite .",
    "we will slightly modify that proof to show that this remains true for restricted witness trees . the overall outline and",
    "many of the key propositions are identical to @xcite .",
    "however , there are subtle and significant differences in many places throughout .",
    "much of the text in the next sections will be taken directly from @xcite , with key definitions and proofs changed as appropriate .",
    "the first step toward showing lemma  [ fwitness - tree - lemma ] is to separate the analysis of the separate permutations . for each permutation @xmath356",
    ", we define the _ witness subdag for permutation @xmath356 _ ; this is a relative of the witness tree , but which only includes for this single permutation .",
    "when we separate by permutation , it is useful to define the probability of an atomic event with respect to just permutation @xmath356 .    namely , for any atomic event @xmath31 and index @xmath9 , define @xmath357 where @xmath31 contains @xmath358 tuples of the form @xmath359 .    for a permutation @xmath356 , a _ witness subdag for @xmath356 _",
    "is defined to be a directed acyclic simple graph , whose nodes are labeled with tuples of the form @xmath360 where @xmath41 is a bad - event . if a node @xmath72 is labeled by @xmath360 , we write @xmath361 .",
    "this graph must in addition satisfy the following properties :    1 .",
    "if any pair of nodes overlaps in a coordinate , that is , we have @xmath362 , then nodes @xmath363 must be comparable ( that is , either there is a path from @xmath72 to @xmath56 or vice - versa ) .",
    "every node of @xmath27 has in - degree at most two and out - degree at most two .    for witness trees",
    ", we use the terminology `` top '' to refer to nodes of less depth ( closer to the root ) and `` bottom '' to refer to nodes of greater depth .",
    "similarly , for witness dags , we use the terminology `` top '' to refer to nodes close to sink nodes and `` bottom '' to refer to nodes close to source nodes . in both cases ,",
    "`` bottom '' nodes occur earlier in time than `` top '' nodes .",
    "the witness subdags that we will be interested in are derived from restricted witness trees in the following manner .    for a witness tree @xmath58",
    ", we define the _ projection of @xmath58 onto permutation @xmath356 _ which we denote @xmath364 , as follows .",
    "suppose we have a node @xmath69 which is labeled by some bad - event @xmath365 .",
    "for each @xmath15 with @xmath366 , we create a corresponding node @xmath367 in the graph @xmath364 . we also include some auxiliary information indicating that these nodes came from bad event @xmath41 , and in particular that all such nodes are part of the same bad - event .",
    "the edges of @xmath364 are formed follows . for each node @xmath368 , labeled by @xmath369 and corresponding to @xmath69 , we find the node @xmath370 ( if any ) which satisfies the following properties :    1 .",
    "the depth of @xmath371 is smaller than the depth of @xmath72 2 .",
    "@xmath371 is labeled by some bad - event @xmath287 which contains @xmath372 3 .   among all vertices satisfying ( p1 ) , ( p2 ) ,",
    "the depth of @xmath371 is maximial    if this node @xmath370 exists , then it corresponds to a node @xmath373 labeled @xmath374 ; we construct an edge from @xmath56 to @xmath375 .",
    "note that , since the levels of the witness tree are independent under @xmath39 , there can be at most one such @xmath371 and at most one such @xmath375 .",
    "we similary define a node @xmath376 satisfying :",
    "1 .   the depth of @xmath376 is smaller than the depth of @xmath72 2 .",
    "@xmath376 is labeled by some bad - event @xmath287 which contains @xmath377 3 .   among all vertices satisfying ( p1 ) , ( p2 ) , the depth of @xmath376 is maximial    if this node exists , we create an edge from @xmath56 to the corresponding @xmath378 labeled @xmath379 .    note that since edges in @xmath364 correspond to _ strictly _ smaller depth in @xmath58 , the graph @xmath380 is acyclic .",
    "also , note that it is possible that @xmath381 ; in this case we only add a single edge to @xmath364 .",
    "the projection of @xmath58 onto @xmath9 tells us all of the swaps of @xmath356 that occur , and some of the temporal information among them ; namely that if there is a path from @xmath72 to @xmath56 in @xmath364 , then we know that the swap corresponding to @xmath72 must come before the swap corresponding to @xmath56 .",
    "the following result is often useful to analyze restricted witness trees :    [ fchange - prop ] suppose that at some time @xmath382 we have @xmath383 , and at some later time @xmath384 we have @xmath385",
    ". then there must have occurred at some intermediate time @xmath386 some bad - event including @xmath387 or @xmath388 .      in section",
    "[ fperm - conditions ] , we fix a value @xmath390 , and we will describe conditions that @xmath391 must satisfy at various times @xmath80 during the execution of the swapping algorithm . _ in this section , we are only analyzing a single permutation @xmath390 . to simplify notation , the dependence on @xmath390",
    "will be hidden henceforth ; we will discuss simply @xmath392 , and so forth . _",
    "this analysis can be divided into three phases .    1 .",
    "we define the _ future - subgraph _ at time @xmath80 , denoted @xmath393 .",
    "this is a kind of graph which encodes necessary conditions on @xmath394 , in order for @xmath58 to appear , that is , for @xmath59 for some @xmath60 .",
    "importantly , these conditions , and @xmath393 itself , are independent of the precise value of @xmath52 .",
    "we define and describe some structural properties of these graphs . 2 .",
    "we analyze how a future - subgraph @xmath393 imposes conditions on the corresponding permutation @xmath394 , and how these conditions change over time .",
    "we compute the probability that the swapping satisfies these conditions .    we will prove ( 1 ) and ( 2 ) in section  [ fperm - conditions ] .",
    "in section  [ ftotal - prob - sec ] we will put this together to prove ( 3 ) for all the permutations .",
    "suppose we have fixed a target graph @xmath27 , which could hypothetically have been produced as the projection of @xmath53 onto @xmath390 .",
    "we begin the execution of the swapping algorithm and see if , so far , it is still possible that @xmath395 , or if @xmath27 has been disqualified somehow .",
    "suppose we are at time @xmath80 of this process ; we will show that certain swaps must have already occurred at past times @xmath396 , and certain other swaps must occur at future times @xmath397 .",
    "we define the _ future - subgraph _ of @xmath27 at time @xmath80 , denoted @xmath393 , which tells us all the future swaps that must occur .",
    "[ ffuture - defn ] we define the future - subgraphs @xmath393 inductively . initially @xmath398 .",
    "when we run the swapping algorithm , suppose we encounter a bad - event @xmath41 at time @xmath80 . now , suppose that @xmath393 has source nodes @xmath399 labeled by @xmath41 ( possibly @xmath400 ) ; then @xmath401 .",
    "[ ffuture - prop1 ] for any time @xmath402 , let @xmath403 denote the restricted witness tree built for the event at time @xmath52 , but only using the execution log from time @xmath80 onwards . then if @xmath404 we also have @xmath405 .",
    "we omit @xmath52 from the notation , as usual .",
    "we prove this by induction on @xmath80 .",
    "when @xmath96 , this is obviously true as @xmath406 and @xmath398 .",
    "suppose we have @xmath407 ; at time @xmath80 we encounter a bad - event @xmath41 . by inductive hypothesis , @xmath408 .    by the rule we have for forming restricted witness trees , @xmath409 is either equal to @xmath410 plus an additional node labeled by @xmath41 , or is equal to @xmath410 .",
    "let us consider the first case . in this ,",
    "when we create a new node in @xmath409 labeled by @xmath41 , we also create new nodes @xmath399 in @xmath411 labeled by @xmath41 .",
    "we claim that the source nodes in @xmath411 labeled by @xmath41 are precisely @xmath399 . for",
    ", suppose that @xmath412 contained a source node @xmath56 labeled @xmath413 ; then we add a new node @xmath72 to @xmath411 with this same label , and there would be an edge in @xmath411 from @xmath72 to @xmath56 . also , the labels of the new nodes @xmath399 are incomparable .",
    "hence , @xmath399 are all source nodes in @xmath411 .",
    "next , let us consider the second case , in which @xmath414 .",
    "we claim that in this case , @xmath412 can not contain any source nodes labeled by @xmath41 . for",
    ", suppose it did so .",
    "then @xmath410 must contain a node @xmath72 labeled by @xmath41 .",
    "but then @xmath41 would be eligible to be placed as a child of @xmath41 , and so @xmath414 plus an additional node .    by proposition  [ ffuture - prop1 ] ,",
    "the witness subdag @xmath27 and the future - subgraphs @xmath393 have a similar shape ; they are all produced by projecting restricted witness trees of ( possibly truncated ) execution logs .",
    "note that if @xmath415 for some tree @xmath58 , then for any bad - event @xmath416 , either @xmath41 is not represented in @xmath27 , or all the pairs of the form @xmath417 are represented in @xmath27 and are incomparable there",
    ".    the following structural decomposition of a witness subdag @xmath27 will be critical .    given a witness subdag @xmath27 , we define an _ alternating path _ in @xmath27 to be a simple path which alternately proceeds forward and backward along the directed edges of @xmath27 . for a vertex @xmath169 , the _ forward ( respectively backward ) path _ of @xmath72 in @xmath27 ,",
    "is the maximal alternating path which includes @xmath72 and all the forward ( respectively backward ) edges emanating from @xmath72 .",
    "( because @xmath27 has in - degree and out - degree at most two , every vertex @xmath72 has a unique forward and backward path . )",
    "note that if @xmath72 is a source node , then its backward path contains just @xmath72 itself .",
    "one type of alternating path , which is referred to as the _ w - configuration _ , plays a particularly important role .",
    "suppose @xmath418 has in - degree at most one , and the backward path contain an _ even _ number of edges , terminating at vertex @xmath419 .",
    "we refer to this alternating path as a _ w - configuration_. ( see figure  [ ffig1 ] . )",
    "any w - configuration can be written ( in one of its two orientations ) as a path of vertices labeled @xmath420 here the vertices @xmath421 are at the `` base '' of the w - configuration .",
    "note here that we have written the path so that the @xmath115-coordinate changes , then the @xmath422-coordinate , then @xmath115 , and so on .",
    "when written this way , we refer to @xmath423 as the _ endpoints _ of the w - configuration .",
    "if @xmath361 is a source node , then it defines a w - configuration with endpoints @xmath369 .",
    "this should not be considered a triviality or degeneracy , rather it will be the most important type of w - configuration .",
    "( -200,70)@xmath424 ( -180,15)@xmath425 ( -135,-2)@xmath426 ( -70,70)@xmath427      at any @xmath80 , the future - subgraph @xmath393 gives certain necessary conditions on @xmath312 in order for some putative @xmath58 to appear .",
    "proposition  [ ffuture - prop2 ] describes a certain set of conditions that plays a key role in the analysis .",
    "[ ffuture - prop2 ] suppose we have a witness subdag @xmath27 for permutation @xmath312 .",
    "let @xmath394 denote the value of permutation @xmath312 at time @xmath80 and @xmath393 be the future - subgraph at time @xmath80 .",
    "the following condition is necessary to have @xmath429 for some @xmath60 :    _ for every w - configuration in @xmath393 with endpoints @xmath423 , we must have @xmath430 . _    for example , if @xmath361 is a source node of @xmath393 , then @xmath431 .",
    "we prove this by induction on @xmath358 .",
    "the base case is @xmath400 ; in this case we have a source node @xmath432 ; this corresponds to some node @xmath433 labeled by an event @xmath7 ( the event @xmath7 may be a bad - event , or may be the atomic - event @xmath31 of interest , in which case @xmath72 is necessarily the root node . )    suppose @xmath434 . in order for @xmath53 to contain a node labeled by an event containing @xmath435 , we must at some point @xmath397 have @xmath436 ; let @xmath437 be the minimal such time . by proposition  [ fchange - prop ] , we must encounter a bad - event containing @xmath438 or @xmath439 at some intervening time @xmath440 .",
    "if this bad - event contains @xmath441 then necessarily @xmath442 contradicting minimality of @xmath437 .",
    "so bad - event @xmath41 must contain either @xmath443 where @xmath444 but @xmath445 .",
    "we claim that @xmath409 must contain some node deeper than @xmath72 corresponding to this event @xmath41 .",
    "if @xmath72 is not the root node , then this is immediate : the bad - event @xmath41 would be eligible to be a child of node @xmath72 , and so would be deeper than @xmath72 in the tree .",
    "next , suppose that @xmath72 is the root node , and that its children are labeled @xmath446 .",
    "suppose that one such child @xmath447 includes a tuples @xmath448 where @xmath449 . in this case , @xmath450 , and so @xmath41 would be eligible to be placed into @xmath409 as a child of @xmath447 .",
    "finally , suppose that @xmath72 is the root node , but that none of the bad - events @xmath446 include a tuple @xmath448 with @xmath451 . in this case , @xmath452 is an orderable set to @xmath31 .",
    "thus , @xmath41 would be eligible to be placed as a child of @xmath72 .",
    "so , in any case if @xmath434 , then the tree @xmath409 contains a node labeled by @xmath41 which contains @xmath443 where @xmath444 but @xmath445 .",
    "this means that @xmath432 can not be a source node of @xmath453 , which is a contradiction .",
    "so @xmath431 as we have claimed .",
    "we now prove the induction step .",
    "suppose we have a w - configuration with base @xmath421 .",
    "observe that as @xmath454 , all the source nodes on the base must correspond to bad - events in the tree , not the atomic event @xmath31 ( which is the root node of @xmath410 , and hence occurs after all the bad - events in the tree . )    thus , at some future time @xmath455 we must encounter a bad - event involving some subset of the source nodes , say the bad event includes @xmath456 for @xmath457 . as these were necessarily source nodes , we had @xmath458 for @xmath459 .",
    "after the swaps , the updated @xmath460 has @xmath461 new w - configurations which have size strictly smaller than @xmath358 . by inductive hypothesis , the updated permutation @xmath462 must then satisfy @xmath463 .    as shown in @xcite",
    ", we may suppose without loss of generality that the resampling of the bad event first swaps @xmath464 in that order .",
    "let @xmath465 denote the result of these swaps ; there may be additional swaps to other elements of the permutation , but we must have @xmath466 for @xmath459 .    in this case , we see that evidently @xmath467 swapped with @xmath468 , then @xmath468 swapped with @xmath469 , and so on , until eventually @xmath470 was swapped with @xmath471 . at this point",
    ", we have @xmath472 . at the end of this process",
    ", we must have @xmath473 .",
    "we claim that we must have @xmath474 . for",
    ", if @xmath475 is subsequently swapped , then we would have @xmath476 where @xmath115 is one of the source nodes in the current bad - event ; but @xmath477 is at the _ top _ of the w - configuration and is not a source node .",
    "this implies that we must have @xmath478 ; that is , that @xmath479 .",
    "this in turn implies that @xmath430 . for , by proposition",
    "[ fchange - prop ] , otherwise we would have encountered a bad - event involving @xmath480 or @xmath481 ; in either case , we would have a predecessor node @xmath480 or @xmath481 in @xmath393 , which contradicts that we have a w - configuration .",
    "proposition  [ ffuture - prop2 ] can be viewed equally as a definition :    we refer to the conditions implied by proposition  [ ffuture - prop2 ] as the _ active conditions _ of the graph @xmath393 .",
    "more formally , we define @xmath482 we also define @xmath483 to be the cardinality of @xmath484 , that is , the number of active conditions of permutation @xmath356 at time @xmath80 .",
    "( the subscript @xmath9 may be omitted in context , as usual . )      in the previous sections , we determined necessary conditions for the permutations @xmath394 , depending on the graphs @xmath393 . in this section",
    ", we finish by computing the probability that the swapping subroutine causes the permutations to , in fact , satisfy all such conditions .",
    "proposition  [ fexchange - prop2 ] states the key randomness condition satisfied by the swapping subroutine .",
    "[ fexchange - prop2 ]    suppose we encounter a bad - event @xmath41 at time @xmath80 containing elements @xmath485 , @xmath486 , @xmath487 from permutation @xmath9 ( and perhaps other elements from other permutations ) .",
    "then the probability that @xmath488 satisfies all the active conditions of its future - subgraph , conditional on all past events and all other swappings at time @xmath80 , is at most @xmath489    recall that in this context we have defined @xmath490    see @xcite    we finally have all the pieces necessary to prove lemma  [ fwitness - tree - lemma ] .",
    "let @xmath58 be a tree - structure with root node labeled @xmath31 .",
    "the probability that @xmath58 appears as a restricted witness tree during the swapping algorithm is at most @xmath77 .",
    "the swapping algorithm , as we have defined it , begins by selecting the permutations uniformly at random .",
    "one may also consider fixing the permutations to some arbitrary ( not random ) value , and allowing the swapping algorithm to execute from that point onward .",
    "we refer to this as _ starting at an arbitrary state of the swapping algorithm .",
    "_    now , let @xmath491 be a tree derived from @xmath58 by deleting non - root nodes .",
    "we will prove the following by induction on @xmath491 : the probability , starting at an arbitrary state of the swapping algorithm , that the subsequent swaps would produce the subtree @xmath491 , is at most @xmath492    when @xmath491 is the singleton node @xmath31 , then @xmath493 consists of isolated nodes ; for each tuple @xmath494 , then there is a corresponding node @xmath495 in @xmath493 .",
    "now , suppose that @xmath31 contains @xmath496 tuples @xmath497 .",
    "then , the term on @xmath276 corresponding to permutation @xmath9 is @xmath498 and the term in @xmath499 is @xmath500 .",
    "so the rhs of ( [ fwt1 ] ) is equal to @xmath501 and so ( [ fwt1 ] ) holds vacuously .    to show the induction step , note that in order for @xmath491 to be produced as the restricted witness tree for some @xmath502 , it must be that some bad - event @xmath41 is resampled , where some node @xmath503 is labeled by @xmath41 .",
    "( the reason for this is that event @xmath31 is true after all the bad - events @xmath504 are resampled ) .",
    "suppose we condition on that @xmath72 is the first such node , resampled at time @xmath80 .",
    "a necessary condition to have @xmath505 for some @xmath506 is that @xmath507 satisfies all the active conditions on @xmath460 . by proposition  [ fexchange - prop2 ] , the probability that @xmath507 satisfies these conditions is at most @xmath508 .",
    "next , if this event occurs , then subsequent resamplings must cause @xmath509 . to bound the probability of this , we use the induction hypothesis . note",
    "that the induction hypothesis gives a bound conditional on _ any _ starting configuration of the swapping algorithm , so we may multiply these probabilities . thus @xmath510 completing the induction argument .",
    "we now consider the necessary conditions to produce the _ entire _ restricted witness tree @xmath58 , and not just fragments of it .",
    "first , the _ original permutations _ @xmath511 must satisfy the active conditions of the respective witness subdags @xmath364 . for each permutation",
    "@xmath9 , this occurs with probability @xmath512 .",
    "next , the subsequent sampling must be compatible with @xmath58 ; by ( [ fwt1 ] ) this has probability at most @xmath513 . again",
    ", note that the bound in ( [ fwt1 ] ) is conditional on any starting position of the swapping algorithm , hence we may multiply these probabilities . in total we have @xmath514    this immediately gives us theorem  [ fnew - lll - prop ] :    the probability of any atomic event @xmath31 in the mt - distribution is at most @xmath328 .",
    "suppose that @xmath31 occurs for the first time at time @xmath52 .",
    "construct the corresponding restricted witness tree @xmath53 , whose root node is labeled by @xmath31 and for which the labels of the children form an independent and orderable set @xmath338 for @xmath31",
    ". then it must be that the tree - structure @xmath515 has appeared , which by lemma  [ fwitness - tree - lemma ] has probability @xmath516 .",
    "thus , the overall probability that @xmath31 is true is at most the sum of the weights of all such tree - structures .",
    "we now describe how to enumerate and sum the weight of all such restricted witness trees .",
    "suppose we are given such a set @xmath338 , and let @xmath517 be tree - structures rooted in the corresponding elements of @xmath338 .",
    "the weight of any such tree is given by @xmath518 .",
    "summing over all such @xmath517 , the total weight is at most @xmath519 .",
    "now sum over @xmath520 to obtain the given result .",
    "the definition of an orderable set in this context is similar to , and inspired by , the work of @xcite , which showed a similar criterion for the variable - assignment lll .",
    "there is one major difference between theorem  [ fnew - lll - prop ] and the result of @xcite . here ,",
    "as we build witness trees , we only enforce the condition that the children of the _ root node _ are orderable ; in @xcite , it was required that _ for every node labeled @xmath41 in the witness tree _",
    ", the children of that node were orderable to @xmath41 .",
    "thus , while our analysis only cuts down the space of witness trees by a constant factor , the latter work cuts down it down by a factor which is exponential in the size of the tree .",
    "the overall convergence of the mt algorithm is dominated by the total weight of witness trees .",
    "this , in turn , depends on the _ overall growth rate _ of witness trees as a function of their size .",
    "thus , @xcite is able to obtain a stronger overall bound on the convergence of the mt algorithm .",
    "analyzing witness trees in the permutation lll setting requires very fine control over the temporal order of the resamplings .",
    "we were not able to maintain this control if the restriction on orderable sets was enforced at all the nodes .",
    "however , we conjecture that a similar witness tree lemma would still hold for such witness trees .",
    "[ ford - conj ] suppose that one builds witness trees while enforcing the condition that , for every node @xmath69 labeled @xmath41 , the children of @xmath72 receive distinct labels @xmath521 , such that @xmath522 is orderable to @xmath41 .",
    "then for any tree - structure @xmath58 we have @xmath523 .    if one were able to show conjecture  [ ford - conj ] , then one would immediately obtain the following result .    [ ford - conj2 ] suppose that there is some weighting function @xmath524 satisfying the criterion @xmath525    then the swapping algorithm terminates with probability one ; the expected number of resamplings of @xmath41 is at most @xmath49 .",
    "conjecture  [ ford - conj2 ] would immediately yield stronger bounds on the existence of latin transversals , hypergraph packings , and other applications .",
    "for example , we would obtain the following result result for latin transversals , exceeding the best previously known bounds shown in @xcite :    suppose that conjecture  [ ford - conj2 ] holds .",
    "then , for any @xmath30 colored array @xmath31 , in which each color appears at most @xmath526 times , there is a latin transversal of @xmath31 with no repeated colors .",
    "for each quadruple @xmath527 with @xmath528 we have a separate bad - event .",
    "define @xmath529 for all bad - events .",
    "now , one can see that conjecture  [ ford - conj2 ] reduces to showing that @xmath530 which has a positive root for @xmath526 .",
    "one canonical application of the permutation lll is for constructing latin transversals .",
    "suppose we are given some @xmath30 matrix @xmath31 , in which all the entries are assigned a color .",
    "each color appears at most @xmath32 times in the matrix .",
    "we would like to construct a _ latin transversal _ for @xmath31 , namely a selection of cells one from each row and one from each column , so that no color is selected more than once .",
    "suppose we also have some weights @xmath531 associated to the entries of @xmath31 .",
    "for any latin transversal @xmath52 , we define @xmath532 .",
    "similarly , we define @xmath533 .",
    "it is clear that there is a permutation ( a selection of one cell from each row and column ) of weight @xmath534 .",
    "the following result shows that we can obtain a latin transversal whose weight is not much larger than this .",
    "suppose @xmath33 .",
    "then the swapping algorithm finds a latin transversal @xmath52 with probability one , and @xmath535 \\leq \\tfrac{5}{3 } w(a)/n\\ ] ]    for each pair of entries @xmath536 with @xmath537 , we have a bad - event that @xmath538 .",
    "simple analysis shows that setting @xmath539 satisfies the cluster expansion criterion in this setting .",
    "now , consider any atomic event @xmath540 .",
    "an orderable set of neighbors for @xmath31 is either the empty set , or a singleton set containing a bad - event of the form @xmath541 ; or a singleton set containing a bad - event of the form @xmath542 .",
    "thus , in evaluating the summation @xmath543 these three cases contribute respectively @xmath501 , @xmath544 , and @xmath544 .",
    "so , by theorem  [ fnew - lll - prop ] , we have the @xmath545 .",
    "now , summing over all pairs @xmath369 we have @xmath546 = \\sum_{x , y } w(x , y )",
    "p(\\pi(x ) = y ) \\leq",
    "\\frac{5}{3 n } \\sum_{x , y } w(x , y ) \\leq \\tfrac{5}{3 } w(a)/n\\ ] ]    we note that if we used the weaker result on the mt - distribution shown in @xcite , then we would only be able to show the bound @xmath547 \\leq \\frac{16}{9 } w(a)/n$ ] .",
    "suppose that we have some complex bad - event @xmath7 .",
    "one principle that is often useful to bound the mt - distribution probability that @xmath7 occurs comes from the following observation :    [ fprop2 ] suppose that @xmath31 is an atomic event and that @xmath58 consists of a singleton node labeled by @xmath31 .",
    "then @xmath58 appears as a restricted witness tree if and only if @xmath31 is true of the _ initial _ configuration drawn by the mt algorithm ( or swapping algorithm )    if @xmath31 is true in the initial configuration , then the restricted witness tree at time @xmath501 consists solely of @xmath31 .",
    "so this tree appears at time @xmath501 .    on the other hand ,",
    "suppose that @xmath58 appears , so that @xmath59 .",
    "but suppose that @xmath31 was not true of the initial configuration . then by proposition  [ fchange - prop ] ,",
    "there must have occurred at some intermediate time @xmath548 a bad - event @xmath41 which is connected to @xmath31",
    ". then @xmath53 will include @xmath41 as a child of the root node .",
    "[ fnew - lll - prop2 ] the probability that any atomic event @xmath31 occurs in the output distribution of the swapping algorithm , and the corresponding restricted witness tree is not the singleton tree , is given by @xmath549    this is identical to proposition  [ fnew - lll - prop ] , except we are removing the contribution of the singleton tree which contributes @xmath276 .",
    "thus , for estimating the probability that a complex event @xmath7 occurs , it is often possible to separately bound the probability that @xmath7 occurs in the initial configuration , and that @xmath7 occurs later during the swapping algorithm .",
    "the latter is a very complex distribution , for which we have only crude upper bounds , but the former can often be analyzed more directly ( depending on the precise form of @xmath7 ) .",
    "we refer to this two - part analysis as the _ original configuration principle_. it can be applied , in different ways , to numerous types of complex events @xmath7 ; thus we do not state it in terms of an all - encompassing theorem .",
    "we will see another example in section  [ fpartial - latin - sec ] .    as an illustration of this principle",
    ", we consider the following problem : suppose we have a disjunction of atomic events @xmath550 , and we want to upper - bound the probability that @xmath7 occurs in the output of the swapping algorithm .",
    "the usual way to bound this is simply the union bound : @xmath551 ; each of the terms @xmath88 can be bounded using theorem  [ fnew - lll - prop ] .    however , using the original configuration principle , we obtain the following improved estimate :    [ swapping - dist - thm ] for the swapping algorithm , we have @xmath552    let @xmath52 be the first time that @xmath553 is true in the mt - distribution .",
    "if @xmath554 , then this implies that @xmath553 is true in the _ initial configuration _ ; as the initial configuration is drawn uniformly from @xmath0 this has probability @xmath555 .",
    "next , suppose that @xmath60 , and suppose that @xmath22 becomes true at time @xmath52 .",
    "construct the restricted witness tree @xmath53 ; by proposition  [ fprop2 ] @xmath53 must not be the singleton .",
    "so , in order for @xmath553 to become true at @xmath60 , then there must be some non - singleton tree rooted in some @xmath22 which appears .",
    "let @xmath556 denote the set of children of this root node ; the total probability of all trees with children @xmath163 and root node @xmath31 is given by @xmath557 .",
    "hence , the total probability of any such non - singleton node appearing is @xmath558 .",
    "we note that the original configuration principle can be useful for the variable assignment lll as well .",
    "however , in this particular case ( for showing a bound on a disjunction ) , it is more powerful to directly apply proposition  [ fx4 ] .",
    "suppose we are given a hypergraph @xmath259 , as well as a graph @xmath27 on a common vertex set , as well as a partition of the vertices of @xmath559 into blocks @xmath560 , where each @xmath156 has cardinality @xmath157 and @xmath27 has maximum degree @xmath32 .",
    "we would like to find a _ strong coloring _",
    "@xmath258 of @xmath27 using @xmath157 colors ; that is , the coloring @xmath258 is a proper vertex coloring , and in each block @xmath156 each color appears exactly once .    a series of papers @xcite have provided bounds on the strong chromatic number of graphs , typically in terms of their maximum degree @xmath32 . in @xcite",
    ", it is shown that when @xmath561 , such a coloring exists ; this is the best bound currently known .",
    "furthermore , the constant @xmath562 can not be improved to any number strictly less than @xmath563 .",
    "the methods used in most of these papers are highly non - constructive , and do not provide algorithms for generating such colorings .",
    "furthermore , the constructions used in these processes are very non - random and involve a series of iterative modification steps",
    ". there does not appear any way of obtaining useful probabilistic bounds on these colorings to determine if some hyper - edge @xmath266 is rainbow .    in @xcite ,",
    "two constructive algorithms are given for strong colorings .",
    "the first is based on a construction of @xcite , and uses a series of modification steps .",
    "like the previous non - constructive methods , it seems difficult to obtain useful probabilistic information about the resulting strong - coloring .",
    "the second construction is a single direct application of the lll for permutations .",
    "it is able to give good bounds on the probability that the resulting coloring is rainbow for any given edge @xmath261 .",
    "suppose @xmath564 .",
    "then there is a strong coloring of @xmath27 , with the additional property that the total number of non - rainbow hyperedges of @xmath259 is at most @xmath565 where @xmath566 is the smallest positive root of @xmath567 .    the original space @xmath0 is defined by choosing a permutation on @xmath157 colors independently for each block @xmath159 .",
    "there is a bad - event for each edge @xmath568 , that the adjacent endpoints receive the same color .",
    "as shown in @xcite , the swapping algorithm converges under these conditions , using the weighting function @xmath529 for each bad - event ( edge of @xmath27 ) .",
    "now , let @xmath261 be a hyper - edge of @xmath259 .",
    "define the event @xmath31 that @xmath261 is rainbow and for each pair of vertices @xmath569 and each @xmath570 define the event that @xmath571 .",
    "we will compute the probability that @xmath31 occurs in the resulting mt - distribution .",
    "then event @xmath31 occurs iff @xmath572 occurs for some @xmath573 ; so by theorem  [ swapping - dist - thm ] we have @xmath574    now , let us compute @xmath276 .",
    "suppose that @xmath575 .",
    "then , @xmath31 occurs iff @xmath576 receives a distinct color from @xmath278 , and @xmath577 receives a distinct color from @xmath578 , and so on .",
    "note that if @xmath576 is in the same block as @xmath278 , it automatically receives a distinct color ; otherwise , as the permutations are chosen independently for each block , the probability that @xmath576 receives a distinct color is @xmath579 . continuing this way",
    ", we see that each @xmath580 receives a color distinct from the previous vertices with probability _ at least _",
    "so we have @xmath582    similarly , for each @xmath583 we have @xmath584 if @xmath583 are in the same block , and zero otherwise .",
    "so @xmath585    finally , let us compute @xmath586 .",
    "we may select an orderable set of neighbors of this event by selecting one or zero events which are connected to @xmath587 and one or zero events which are connected to @xmath588 . for vertex @xmath112 ,",
    "this includes two types of events .",
    "first , we have events of the form @xmath589 , for @xmath590 and @xmath56 a neighbor of @xmath112 ; there are at most @xmath591 such events .",
    "second , we have events of the form @xmath592 , for @xmath593 in the same block as @xmath112 and @xmath56 a neighbor of @xmath593 ; there are again at most @xmath591 such events . in all",
    ", the total contribution coming from neighbors of @xmath587 is at most @xmath594 .",
    "the same contribution applies for @xmath588 , and this in all we have @xmath595    putting these cases together gives us @xmath596      in @xcite , the following generalization of the latin transversal problem was considered .",
    "suppose that we have @xmath30 matrix @xmath31 as before , and each color appears at most @xmath597 times .",
    "when @xmath598 , then the lll can not guarantee the existence of a full latin transversal .",
    "however , we can construct a partial latin transversal ; that is , a selections of cells in the matrix , at most one cell per row and one cell per column , with the property that no color appears more than once .",
    "our goal is to find the largest possible such partial latin transversal .    in @xcite , two algorithms for this",
    "were given .",
    "they both start by selecting a permutation @xmath312 , and end by turning this permutation into a partial latin transversal with a simple modification strategy : if a color appears more than once , then unmark all but one appearance of that color .",
    "the first algorithm in this scheme does no resampling whatsoever , simply selecting the permutation @xmath599 uniformly at random .",
    "the second algorithm runs the swapping algorithm , but only resamples a randomly chosen subset of the pairs of cells with repeated color .",
    "as shown in @xcite , these algorithms achieve an expected partial latin transversal size of respectively @xmath600{\\frac{27}{2048 \\beta } } ) $ ] .    in this section",
    ", we will discuss a more advanced scheme to construct such latin transversals .",
    "this will take advantage of both the original configuration principle as well as our new bounds for the permutation mt - distribution .",
    "we first list a useful result of @xcite , which gives a lower bound on the probability that a random permutation meets a given set of entries in an array .",
    "[ fstein - prop ] let @xmath601 \\times [ n]$ ] and let @xmath599 be chosen uniformly at random .",
    "the probability that @xmath312 avoids all the entries in @xmath338 is at most @xmath602    [ fstein - prop2 ] suppose that @xmath603 \\times [ n]$ ] , and @xmath599 is chosen uniformly at random , and that we form a subset @xmath604 by selecting each element of @xmath338 independently with probability @xmath605 .",
    "then we have @xmath606    conditional on any choice of @xmath607 , the overall probability that @xmath312 avoids @xmath607 is at most @xmath608 .",
    "now , observe that @xmath609 is a binomial random variable with number of trials @xmath610 and success probability @xmath605 . integrating over @xmath609 gives @xmath611    [ fpartial - latin - thm ] let @xmath598 .",
    "suppose that each color appears at most @xmath612 times in the matrix .",
    "let @xmath613 .",
    "there is an polynomial - time algorithm which produces an partial latin transversal whose expected number of cells is at least @xmath614 for @xmath615 $ ] , where @xmath616 is given by the following formula : @xmath617 where @xmath618 is the smallest positive root of @xmath619 .",
    "we note that elementary analysis shows that @xmath620 has a real non - negative root iff @xmath621 .",
    "say that the colors @xmath622 appear @xmath623 times in the matrix , with @xmath624 and @xmath625 .",
    "for each cell @xmath626 \\times [ n]$ ] , we will maintain a variable @xmath627 which is drawn as bernoulli-@xmath23 ; here @xmath628 $ ] is a parameter to be determined .",
    "if @xmath629 we say that @xmath369 is _ marked .",
    "_ we will run the swapping algorithm using the following set of bad - events : for each pair of tuples @xmath630 satisfying @xmath631 , we have @xmath632    note that the variables @xmath157 are also being resampled during the swapping algorithm .",
    "( it is not hard to see that all of the analysis of the swapping algorithm can be extended to take into account the resampling of these these type of bernoulli variables in addition to the permutation @xmath312 . )",
    "each such event has probability @xmath633 .",
    "we set @xmath529 for all such bad - events , where @xmath634 .",
    "one can show that the cluster - expansion criterion in this case is given by @xmath635    we next show that ( [ frr0 ] ) holds for an appropriate choice of @xmath23 : @xmath636    now , we say that a pair @xmath369 is _ quiet _ if in the initial configuration we have @xmath637 and @xmath638 . at the end of the swapping algorithm ,",
    "suppose we have some color @xmath15 which appears @xmath9 times in the resulting permutation .",
    "we will de - select @xmath639 of the cells to form the final permutation .",
    "although it makes no difference which cells we de - select , we suppose that we will always de - select non - quiet cells before quiet cells .",
    "so , if there are @xmath29 quiet cells in the final permutation of color @xmath15 , we will de - select at most @xmath640 of them . in the original permutation ,",
    "there must have been @xmath641 quiet cells of color @xmath15 .",
    "hence , the expected number of de - selected quiet cells of this color is at most @xmath642 \\leq { \\ensuremath{\\mathbf{e}}}[\\max(l'-1 , 0 ) ] = { \\ensuremath{\\mathbf{e}}}[l ' ] - 1 + p(l ' = 0)\\ ] ]    there are at most @xmath216 cells of the given color , and each is quiet with probability exactly @xmath643 , so that @xmath644 =   y_i ( 1-r)/n$ ] .",
    "observe that the number of unmarked cells of color @xmath15 is binomial with number of trials @xmath216 and probability of success @xmath645 , hence by proposition  [ fstein - prop2 ] we have @xmath646 .",
    "thus , summing over all colors @xmath647 , we have that the expected number of de - selected quiet cells is given by @xmath648 & \\leq \\sum_i y_i ( 1-r)/n + \\exp(-(1-r )",
    "y_i / n ) - 1\\\\   & \\leq \\sum_i y_i ( 1-r)/n + \\frac{y_i}{\\delta } ( \\exp(-(1-r ) \\delta",
    "/ n ) - 1 ) \\qquad \\text{as $ y_i \\leq \\delta$ } \\\\ &",
    "\\leq n \\bigl ( ( 1-r ) + \\frac { e^{-(1-r ) \\beta } - 1 } { \\beta }   \\bigr ) \\qquad \\text{as $ \\sum_i y_i = n^2$}\\end{aligned}\\ ] ]    so far , we have determined how many de - selected quiet cells there are . but",
    "now , let us count how many de - selected non - quiet cells there are .",
    "the number of such de - selected cells is at most the number of pairs @xmath649 in the final configuration , where @xmath650 .",
    "necessarily we must also have @xmath651 , or otherwise this would constitute a bad - event , and the swapping algorithm could not have terminated .",
    "also necessarily @xmath652 and @xmath653 can not both be quiet .    for each such event @xmath7 , we may construct the corresponding restricted witness tree .",
    "observe that if it is the singleton tree , then by proposition  [ fprop2 ] this implies that the relevant entries have not undergone any modification since the initial configuration , which implies that @xmath652 and @xmath653 are both quiet .",
    "so , we may assume that the relevant restricted witness tree is not the singleton tree .",
    "this restricted witness tree is rooted in the event @xmath654 which has probability @xmath655 .",
    "also , we may compute @xmath656 as follows . in an orderable set of neighbors to @xmath7",
    ", there may be up to one bad - event @xmath41 which overlaps on @xmath652 , and up to one bad - event @xmath41 which overlaps on @xmath653 .",
    "furthermore , the set of neighbors may not be the empty set , as then the corresponding restricted witness tree would be the singleton .",
    "so , in all we have @xmath657    now observe that there are at most @xmath658 pairs of cells with the same color ; so ,",
    "summing over all such pairs of cells we have @xmath659 & \\leq n^2 ( \\delta-1)/2 \\times \\frac{(1-r)^2}{n(n-1 ) } \\bigl ( ( 1 + ( 2 n - 1)(\\delta-1 ) \\alpha)^2 -1 \\bigr ) \\\\ & \\leq n \\bigl ( \\frac{\\beta}{2 } ( 1-r)^2 \\bigl ( ( 1 + 2 \\beta \\alpha n^2)^2 -1 \\bigr ) \\bigr ) + o(n ) \\\\ &",
    "\\leq n \\bigl ( 2 ( 1-r)^2 \\beta^2 \\gamma ( 1 + \\beta \\gamma ) \\bigr ) + o(n)\\end{aligned}\\ ] ]    the total number of cells in @xmath312 before any de - selection is @xmath17 .",
    "thus , we have shown that the expected number of remaining cells of @xmath312 is @xmath660 .",
    "the function @xmath261 is continuous and @xmath661 , thus the expected number of remaining cells is @xmath662 as claimed .    for",
    "any given @xmath663 , one may select @xmath615 $ ] to maximize the resulting @xmath616 .",
    "we let @xmath664 denote this quantity @xmath665 } f(\\beta , q)\\ ] ]    thus , we are able using this algorithm to obtain a partial latin transversal with @xmath666 cells . for",
    "any fixed value of @xmath667 one can numerically optimize @xmath616 and compute ( a lower bound on ) @xmath664 .",
    "we compare this result with the two algorithms of @xcite for selected values of @xmath667 ; there is a tiny but definite improvement , by up to @xmath668 .",
    "[ cols=\"^,^,^,^\",options=\"header \" , ]     we observe that for @xmath669 , @xmath616 is maximized at @xmath670 , in which case @xmath671 .",
    "so in this case we are not using the swapping algorithm at all .",
    "however for @xmath672 we can see that @xmath616 is strictly larger than either of the other two estimates ( for @xmath673 the difference is below the third decimal point ) .",
    "thanks to aravind srinivasan for helpful discussions and feedback . thanks to landon rabern for pointing me to some of the literature on independent transversals .",
    "1    achlioptas , d. , iliopoulos , f. : random walks that find perfect objects and the lovasz local lemma .",
    "foundations of computer science ( 2014 )    aharoni , r. , berger , e. , ziv , r. : independent systems of representatives in weighted graphs .",
    "combinatorica 27 , pp .",
    "253 - 267 ( 2007 )    alon , n. the linear arboricity of graphs .",
    "israel journal of mathematics 62 , pp .",
    "311 - 325 ( 1988 )    alon , n. the strong chromatic number of a graph .",
    "random structures and algorithms 3 , pp . 1 - 7 ( 1992 )",
    "axenovich , m. , martin , r. : on the strong chromatic number of graphs .",
    "siam j. discrete math 20 - 3 , pp .",
    "741 - 747 ( 2006 ) .",
    "bissacot , r. , fernandez , r. , procacci , a. , scoppola , b. : an improvement of the lovsz local lemma via cluster expansion .",
    "combinatorics , probability and computing 20 - 5 , pp .  709 - 719 ( 2011 )    bollobs , b. , erds , p , szemerdi , e. : on complete subgraphs of @xmath23-chromatic graphs .",
    "discrete math 1 , pp .",
    "97 - 107 ( 1975 )    erds , p. , lovsz , l. : problems and results on 3-chromatic hypergraphs and some related questions . in a.",
    "hajnal , r. rado , and v. t. sos , eds .",
    "infinite and finite sets ii , pp .",
    "607 - 726 ( 1975 )    erds , p. , spencer , j. : lopsided lovsz local lemma and latin transversals .",
    "discrete applied math 30 , pp .",
    "151 - 154 ( 1990 )    fellows , m. : transversals of vertex partitions in graphs .",
    "siam j. discrete math 3 - 2 , pp .  206 - 215 ( 1990 ) .",
    "haeupler , b. , saha , b. , srinivasan , a. : new constructive aspects of the lovsz local lemma .",
    "journal of the acm , 58 - 6 , 2011 .",
    "harris , d. : lopsidependency in the moser - tardos framework : beyond the lopsided lovsz local lemma .",
    "symposium on discrete algorithms , pp .",
    "1792 - 1808 ( 2015 ) .",
    "harris , d. , srinivasan , a. : the moser - tardos framework with partial resampling .",
    "foundations of computer science , pp .",
    "469 - 478 ( 2013 )    harris , d. , srinivasan , a. : a constructive algorithm for the lll on permutations .",
    "symposium on discrete algorithms , pp .",
    "907 - 925 ( 2014 ) .",
    "harris , d. , srinivasan , a. : algorithmic and enumerative aspects of the moser - tardos distribution .",
    "symposium on discrete algorithms ( 2016 )    harvey , n. , vondrk , j. : an algorithmic proof of the lovsz local lemma via resampling oracles .",
    "foundations of computer science ( focs ) , pp .",
    "1327 - 1346 ( 2015 )    haxell , p. : a note on vertex list colouring .",
    "combinatorics , probability , and computing 10 , pp .",
    "345 - 348 ( 2001 )    haxell , p. : on the strong chromatic number .",
    "combinatorics , probability , and computing 13 - 6 , pp .  857 - 865 ( 2004 ) .",
    "haxell , p. : an improved bound for the strong chromatic number .",
    "journal of graph theory 58 - 2 , pp .  148 - 158 ( 2008 ) .",
    "haxell , p. , szab t , tardos , g. : bounded size components  partitions and transversals .",
    "journal of combinatorial theory series b 88 , pp .",
    "281 - 297 ( 2003 )    jin , g. : complete subgraphs of @xmath23-partite graphs .",
    "combinatorics , probability , and computing 1 , pp .",
    "241 - 250 ( 1992 ) .",
    "kolipaka , k. , szegedy , m. : moser and tardos meet lovsz .",
    "symposium on theory of computing , pp .",
    "235 - 244 ( 2011 ) .",
    "loh , p. , sudakov , b. independent transversals in locally sparse graphs .",
    "journal of combinatorial theory series b 97 , pp .",
    "904 - 918 ( 2007 )    lu , l. , mohr , a. , szkely , l. : quest for negative dependency graphs .",
    "recent advances in harmonic analysis and applications , pp . 243 - 258 .",
    "( 2013 ) .",
    "moser , r. , tardos , g. : a constructive proof of the general lovsz local lemma",
    ". journal of the acm 57 - 2 , pp .",
    "11:1 - 11:15 ( 2010 )    pegden , w. : an extension of the moser - tardos algorithmic local lemma .",
    "siam journal of discrete math 28 , pp .",
    "911 - 917 ( 2014 )    rabern , l. : coloring graphs with dense neighborhoods .",
    "journal of graph theory 76.4 , pp .",
    "323 - 340 ( 2014 )    shearer , j .. : on a problem of spencer .",
    "combinatorica 5 , pp .",
    "241 - 245 ( 1985 ) .",
    "stein , s. : transversals of latin squares and their generalizations .",
    "pacific j.  math .",
    "59 , pp .",
    "567 - 575 ( 1975 )    szab , t. , tardos , g. : extremal problems for transversals in graphs with bounded degree .",
    "combinatorica 26 , pp .",
    "333 - 351 ( 2006 )    yuster , r. : independent transversals in @xmath23-partite graphs .",
    "discrete math 176 , pp .",
    "255 - 261 ( 1997 )",
    "in this section , we review some definitions regarding the lll - distribution and we show that an analogue to proposition  [ fmt - dist - prop1 ] applies to it",
    ".    the lll applies in the context of a probability space @xmath0 along with a set @xmath1 of `` bad - events '' in that space . to state the lll ,",
    "one requires a somewhat technical definition of independence , which we state in terms of a _ dependency graph _ @xmath27 .",
    "namely , we are given a graph @xmath27 , whose vertex set is @xmath1 .",
    "for any @xmath40 , we let @xmath674 denote the _ inclusive _ neighborhood of @xmath41 .",
    "then , we require the property that for all @xmath40 and for all @xmath675 we have @xmath676        then , under these conditions , there is a positive probability that none of the bad - events occurs .",
    "this criterion is often seen in the simpler `` symmetric '' form : suppose @xmath149 for all @xmath40 and @xmath150 for all @xmath40 ; then under the criterion @xmath6 , there is a positive probability of avoiding all @xmath1 .",
    "note that the symmetric lll is a special case of the cluster - expansion lll criterion derived by setting @xmath153 for all @xmath41 .",
    "we can extend the definition of dependency to any event @xmath7 ( not necessarily in @xmath1 ) , by specifying for any event @xmath7 a set @xmath680 with the property that for all @xmath681 we have @xmath682      whenever we have specified an appropriate weighting function @xmath48 , we use the following definition . for any event @xmath7 , we set @xmath686 so the cluster - expansion lll criterion can be stated more compactly @xmath687 for @xmath40 .",
    "the lll shows that a configuration avoiding @xmath1 exists ; we might wish to know more about such configurations .",
    "one powerful extension of the lll , introduced in @xcite , is the _ lll - distribution _ ; namely the distribution of @xmath0 conditioned on avoiding @xmath1 .",
    "almost everything we know about the lll - distribution comes from the following simple observation given in @xcite :      the lll - distribution has a number of uses .",
    "one can identify certain global properties of the configurations obtained by avoiding @xmath1 ; for example , if there is some overall weighting function assigned to individual variables , one can show configurations have bounded total weight .",
    "another application is to show the existence of configurations which partially avoid @xmath1 .",
    "finally , one can show bounds on the entropy of the resulting lll - distribution , which in turn implies that there exist many configurations which avoid @xmath1 .",
    "some of these techniques are developed in @xcite which use them to construct low - weight independent transversals , partial latin transversals and solutions to max-@xmath9-sat , among other applications .",
    "for any set @xmath696 , we define @xmath697 to be the set of stable - set sequences of the form @xmath698 ; that is , the first set in the sequence is @xmath559 .",
    "we define @xmath699 to be @xmath700 .",
    "observe that @xmath701 if @xmath559 is not independent ."
  ],
  "abstract_text": [
    "<S> the lovsz local lemma ( lll ) is a probabilistic principle which has been used in a variety of combinatorial constructions to show the existence of structures that have good `` local '' properties . in many cases </S>",
    "<S> , one wants more information about these structures , other than that they exist . in such case , using the `` lll - distribution '' , one can show that the resulting combinatorial structures have good global properties in expectation .    while the lll in its classical form is a general existential statement about probability spaces , </S>",
    "<S> nearly all applications in combinatorics have been turned into efficient algorithms . </S>",
    "<S> the simplest , variable - based setting of the lll was covered by the seminal algorithm of moser & tardos ( 2010 ) . </S>",
    "<S> this was extended by harris & srinivasan ( 2014 ) to random permutations , and more recently by achlioptas & ilioupoulos ( 2014 ) and harvey & vondrk ( 2015 ) to general probability spaces . </S>",
    "<S> one can similarly define for these algorithms an `` mt - distribution , '' which is the distribution at the termination of the moser - tardos algorithm . as shown by hauepler et al . </S>",
    "<S> ( 2011 ) , nearly identical results can be shown for the mt - distribution as for the lll - distribution in the variable - based setting ; a similar result was shown by harris & srinivasan for the permutation setting . </S>",
    "<S> thus , in these two settings , one can construct efficiently nearly all the structures shown to exist via the lll .    in this work </S>",
    "<S> , we examine the moser - tardos algorithm more closely , and show bounds on the mt - distribution which are significantly stronger than those known to hold for the lll - distribution . </S>",
    "<S> we show two main types of results . </S>",
    "<S> first , in the variable setting , we show that events which are ( partially ) independent in the original distribution retain much of this independence in the mt - distribution ; thus , we can show stronger bounds on the probabilities of a disjunction . </S>",
    "<S> one noteworthy application is constructing independent transversals which avoid a given subset of vertices ; this provides a constructive analogue to a result of rabern ( 2014 ) and extends algorithmic results of harris & srinivasan which showed similar bounds for a single vertex .    </S>",
    "<S> second , in the permutation lll setting , we show a new type of bound which is similar to the cluster - expansion lll criterion of bissacot et al . </S>",
    "<S> ( 2011 ) , but is stronger and takes advantage of the extra structure in permutations . </S>",
    "<S> we illustrate by showing new , stronger bounds on low - weight latin transversals and partial latin transversals .    </S>",
    "<S> we emphasize that our results on latin transversals are not available , even non - constructively , from the lll itself . </S>"
  ]
}
{
  "article_text": [
    "traditionally numerical solutions of boundary value problems for partial differential equations ( pdes ) are obtained by using finite difference , finite element or boundary element methods with both space and/or time discretizations .",
    "this usually requires spatial mesh fine enough to ensure accuracy , which results in considerable storage space requirement and computation time .",
    "moreover , the solution process is global , namely , the solutions of the pdes have to be found together at all mesh points .",
    "however , in many scientific and engineering applications , local solutions are sometimes all we need , such as the local electrostatic potential on a molecular surface where molecular binding activities are most likely to occur or the stress field at specific locations where the materials are susceptive to failures .",
    "therefore , it is of practical importance to have a numerical approach which can give a local solution of the pdes at some locality of our choice . in the case of elliptic pdes , this kind of local numerical method can be constructed using the well - known probabilistic representation and the associated feynman - kac formula @xcite@xcite , which relate it diffusion paths to the solution of the elliptic pdes . by sampling the diffusion paths ,",
    "the evaluation of the solution at any point in the domain can be done through an averaging process of the boundary ( dirichlet or neumann ) data under some given measure on the boundary . moreover",
    ", this method avoids the expensive mesh generations required by mesh - based methods mentioned above @xcite .",
    "our previous work @xcite , using the feynman - kac formula for the laplace equation with dirichlet data , has produced a local method to compute the dtn ( dirichlet - to - neumann ) mapping for the laplace operator . in this paper",
    ", we will focus on solving the following neumann boundary value problem of the elliptic pde using a probabilistic approach : @xmath1 where @xmath2 is a bounded domain in @xmath3 , @xmath4 is the laplace operator , @xmath5 is a measurable function and @xmath6 is a bounded measurable function on the boundary @xmath7 satisfying @xmath8 .",
    "equation @xmath9 becomes the laplace equation when @xmath10 , which is the subject of our work .",
    "the pde ( [ eq1 ] ) originates from either the poisson equation for electrostatic potentials @xcite , an implicit time discretization of the heat equation or the momentum equation of the naiver - stokes equation with an additional lower term in the latter cases .",
    "historically , brownian motion ( bm ) has been used in solving pdes due to its effectiveness and easy implementation regardless of dimensions @xcite .",
    "the well - known probabilistic representation can solve the elliptic equation with the dirichlet boundary condition by using the first exit time @xmath11 of bm , i.e. , @xmath12   .",
    "\\label{eq3}%\\ ] ] in the above formula , only the values at the hitting positions on the boundary are used in the computation of the mathematical expectation ( average ) to obtain @xmath13 .",
    "taking the idea of killed brownian motion @xcite in junction with monte carlo methods , we can easily obtain an estimate of @xmath13 .",
    "however , for the neumann problem to be studied here , in contrast to the brownian motion in ( [ eq3 ] ) , reflecting brownian motion ( rbm ) will be needed to produce a similar probabilistic solution to ( [ eq1 ] ) .",
    "this theory has been developed in @xcite by employing the concept of the boundary local time whose one dimensional predecessor was introduced by lvy in @xcite . in @xcite , the boundary local time of a one dimensional bm was extended to high dimensions and an explicit form , shown in ( [ eq13 ] ) , was obtained for domains with smooth boundaries .",
    "it should be noted that the boundary local time is related to the skorohod equation @xcite and plays a significant role in the theoretical development of the probabilistic approach to the neumann problem .",
    "one - dimensional local time of brownian motion has been studied by many authors @xcite@xcite@xcite@xcite . for higher dimensions ,",
    "similar results have been found by brosamler @xcite .",
    "morillon @xcite gave a modified feynman - kac formula for the poisson problem with various boundary conditions , algorithms based on random walk on a grid have been proposed .",
    "however , numerical algorithms for computing local time in @xmath3 based on a rigorous probabilistic theory has not been done in the literature .",
    "it is the objective of this paper to obtain practical numerical methods for computing the local time of rbm in three dimensions and apply the resulting numerical methods to implement computationally the probabilistic representation for the neumann problem .",
    "the rest of the paper is organized as follows . in section 2 , we give some background information on the skorohod problem which is the key to the neumann problem . in section 3 ,",
    "an explicit probabilistic solution to the neumann problem will be given . in section 4 ,",
    "a walk - on - spheres ( wos ) method is reviewed and discussed for its application for rbm . in section 5 , a numerical method ,",
    "the wos combined with a monte carlo method , is proposed for an approximation to the neumann problem .",
    "numerical results for cubic , spherical and ellipsoidal domains will be given in section 6 .",
    "finally , we draw conclusions from our monte carlo simulations and discuss possible further work .",
    "for the sake of completeness , we first give the definitions of brownian motion and reflecting brownian motion in @xmath14 .    : a brownian motion @xmath15 in @xmath14 is a set of @xmath16 independent stochastic processes with the following properties : for @xmath17 ,    1 .",
    "( normal increments ) @xmath18 has a normal distribution with mean 0 and variance @xmath19 .",
    "2 .   ( independence of increments )",
    "@xmath18 is independent of the past , i.e. , of @xmath20 , @xmath21 .",
    "3 .   ( continuity of paths )",
    "@xmath22 is a continuous function of @xmath23 .",
    "assume @xmath2 is a bounded domain in @xmath14 with a @xmath24 boundary .",
    "let @xmath25 be a ( continuous ) path in @xmath14 with @xmath26 .",
    "a pair @xmath27 is a solution to the skorohod equation @xmath28 if the following conditions are satisfied :    1 .",
    "@xmath29 is a path in @xmath30 ; 2 .",
    "@xmath31 is a nondecreasing function which increases only when @xmath32 , namely , @xmath33 3 .",
    "the skorohod equation holds : @xmath34 where @xmath35 stands for the outward unit normal vector at @xmath36 .    in definition 2 ,",
    "the smoothness constraint on @xmath2 can be relaxed to bounded domains with @xmath37 boundaries , which however will only guarantee the existence of @xmath38 .",
    "but for a domain @xmath2 with a @xmath24 boundary , the solution will be unique .",
    "obviously , @xmath27 is continuous in the sense that each component is continuous .",
    "if @xmath25 is replaced by the standard brownian motion ( bm ) @xmath39 , the corresponding @xmath40 will be a standard reflecting brownian motion ( rbm ) @xmath41 .",
    "just as the name suggests , a reflecting bm ( rbm ) behaves like a bm as long as its path remains inside the domain @xmath2 , but it will be reflected back inwardly along the normal direction of the boundary when the path attempts to pass through the boundary . the fact that @xmath41 is a diffusion process with the neumann boundary condition can be proven by using a martingale formulation and showing that @xmath41 is the solution to the corresponding martingale problem with the neumann boundary condition @xcite .",
    "the result gives an intuitive and direct way to construct rbm from bm .",
    "this construction will be discussed in detail in section 5 .",
    "next we will review the concept of boundary local time @xmath31 for a rbm , which in a sense is a measure of the amount of time a rbm spends near the boundary and at the same time the frequency that a rbm hits the boundary .",
    "we have the following properties of @xmath31 :    1 .",
    "it is the unique continuous nondecreasing process that appears in the skorohod equation ( [ eq7 ] ) @xcite ; 2 .",
    "it measures the amount of time the standard reflecting brownian motion @xmath41 spending in a vanishing neighborhood of the boundary within the period @xmath42 $ ] .",
    "if @xmath2 has a @xmath43 boundary , then @xmath44 where @xmath45 is a strip region of width @xmath46 containing @xmath7 and @xmath47 .",
    "this limit exists both in @xmath48 and @xmath49-@xmath50 . for any @xmath51 ; 3 .",
    "@xmath31 is a continuous additive functional ( caf ) @xcite which satisfies the additivity property @xcite@xcite@xcite@xcite : @xmath52 .",
    "here @xmath53 denotes the shift operator along the paths .",
    "the additivity property of @xmath31 can be seen as follows : + from the definition in ( [ eq11 ] ) , we have @xmath54 therefore , @xmath55 which shows that @xmath31 satisfies the additivity property .    for one - dimensional case , much existing literature devoted to the study of local times for brownian motion and more general diffusion processes .",
    "it is well known that for one dimensional brownian motion starting from the origin , the local time @xmath31 of rbm and @xmath56 have the same distribution as stochastic processes .",
    "hence , valuable properties of rbm can be drawn by just observing @xmath56 .",
    "but this is not true in general in higher dimensions .",
    "however , we have the following explicit formula for @xmath31 derived in @xcite , @xmath57 where the the right - hand side of ( [ eq13 ] ) is understood as the limit of @xmath58 where @xmath59 is a partition of the interval @xmath42 $ ] and each @xmath60 is an element in @xmath4 .",
    "we will discuss the implementation of both ( [ eq11 ] ) and ( [ eq13 ] ) in section 5 .",
    "we will consider the elliptic pde in @xmath3 with a neumann boundary condition @xmath61 when the bottom of the spectrum of the operator @xmath62 is negative a probablistic solution of @xmath63 is given by@xmath64 , \\label{eq19}%\\ ] ] where @xmath41 is a rbm starting at @xmath65 and @xmath66 is the feynman - kac functional @xcite @xmath67   .\\ ] ]    from the definition of the local time in ( [ eq11 ] ) , we have the following approximation for small @xmath46 @xmath68 plugging @xmath69 into @xmath70 , we have @xmath71   . \\label{eq23}%\\ ] ]    the solution defined in @xmath70 should be understood as a weak solution for the classical pde @xmath63 .",
    "the proof of the equivalence of ( @xmath72 )  with a classical solution is done by using a martingale formulation @xcite .",
    "if the weak solution satisfies some smoothness condition @xcite@xcite , it can be shown that it is also a classical solution to the neumann problem .",
    "this formula is the basis for our numerical approximations to the neumann problem @xmath63 . to compute the expectation in the formula , we rely on monte carlo random samplings to simulate brownian paths and then take the average .    in the present work ,",
    "as we only consider the laplace equation where @xmath73 , therefore , @xmath74   , \\label{eq25}%\\ ] ] and we will show how this formula is implemented with the monte carlo and wos methods in section 5 .    comparing with formula",
    "@xmath70 , we find that the probabilistic solutions to the laplace operator with the dirichlet boundary condition has a very similar form ( referring to @xmath75 ) . in the dirichlet case ,",
    "killed brownian paths were sampled by running random walks until the latter are absorbed on the boundary and @xmath13 is evaluated as an average of the dirichlet values at the first hitting positions on the boundary , namely , @xmath76   $ ] where @xmath6 is the dirichlet boundary data . on the other hand , for the neumann condition , while @xmath13 is also given as a weighted average of the neumann data at hitting positions of rbm on the boundary , the weight is related to the boundary local time of rbm .",
    "this is a noteworthy point when we compare the probabilistic solutions of the two boundary value problems and try to understand the formula in @xmath70 .",
    "random walk on spheres ( wos ) method was first proposed by mller @xcite , which can solve the dirichlet problem for the laplace operator efficiently . here",
    "we will first briefly review this method and then show how it can be adapted for rbm and the neumann problem .    for a general linear elliptic problem with a dirichlet boundary condition , @xmath77 the probabilistic representation of the solution is ( @xcite@xcite ) @xmath12   , \\label{eq29}%\\ ] ] where @xmath78 is an it diffusion defined by @xmath79 and @xmath80 is the brownian motion , @xmath81=\\frac{1}{2}\\alpha ( x)\\alpha^{t}(x)$ ] .",
    "the expectation in ( [ eq29 ] ) is taken over all sample paths starting from @xmath65 and @xmath11 is the first exit time for the domain @xmath2 .",
    "this representation holds true for general linear elliptic pdes . for the neumann boundary condition ,",
    "similar formulas can be obtained @xcite .",
    "however different measures on the boundary @xmath7 will be used in the mathematical expectation .    in order to illustrate the wos method for the dirichlet problem ,",
    "let us consider the laplace equation where @xmath82 and @xmath83 in ( [ eq27 ] ) and the it diffusion is then simply the standard brownian motion with no drift .",
    "the solution to the laplace equation can be rewritten in terms of a measure @xmath84 defined on the boundary @xmath7 , @xmath85 where @xmath84 is the so - called harmonic measure  defined by @xmath86 it can be shown that the harmonic measure is related to the green s function for the domain with a homogeneous boundary condition , @xmath87 by the third green s identity , @xmath88   ds_{y } , \\label{eq39}%\\ ] ] and using the zero boundary condition of @xmath89 , we have @xmath90 thus , the hitting probability @xmath91)$ ] is equivalent to @xmath92 . comparing ( [ eq33 ] ) with ( [ eq41 ] )",
    ", we can see that @xmath93 for instance , the green s function for a ball for this purpose is given as @xmath94 where @xmath95 is the inversion point of @xmath96 with respect to the sphere @xcite .",
    "if the starting point @xmath65 of a brownian motion is at the center of a ball , the probability of the bm exiting a portion of the boundary of the ball will be proportional to the portion s area .",
    "it is known that all sample functions of brownian motion processes starting in the domain intersects the boundary @xmath7 almost surely @xcite .",
    "therefore , sampling a brownian path by drawing balls within the domain , regardless of how the path navigates in the interior before hitting the boundary , can significantly reduce the path sampling time . to be more specific , given a starting point @xmath65 inside the domain @xmath2 , we simply draw a ball of largest possible radius fully contained in @xmath2 and then the next location of the brownian path on the surface of the ball can be sampled , using a uniform distribution on the sphere , say at @xmath97 . treat @xmath97 as the new starting point , draw a second ball fully contained in @xmath2 , make a jump from @xmath97 to @xmath98 on the surface of the second ball as before .",
    "repeat this procedure until the path hits a absorption @xmath46-shell of the domain @xcite . when this happens , we assume that the path has hit the boundary @xmath7 ( see figure 1(a ) for an illustration ) .",
    "next we define an estimator of ( [ eq29 ] ) by @xmath99 where @xmath100 is the number of brownian paths sampled and @xmath101 is the first hitting point of each path on the boundary . using a jump size ( radius of the ball ) @xmath102 on each step for the wos , we expect to take @xmath103 steps for a brownian path to reach the boundary @xcite . to speed up , maximum possible size for each step would allow faster first hitting on the boundary .",
    "most of the numerical results in this paper will use the wos approach as illustrated in figure 1(b ) .",
    "a standard reflecting brownian motion path can be constructed by reflecting a standard brownian motion path back into the domain whenever it crosses the boundary .",
    "so in principle , the simulation of rbm is reduced to that of bm .",
    "it is known that standard brownian motion can also be constructed as the scaling limit of a random walk on a lattice so we can model bm by a random walk with proper scale ( see appendix for details ) .",
    "however , it turns out that the wos method is the preferred method to simulate bm for our purpose @xcite ( see remark [ rm1 ] for details ) . as mentioned before , a @xmath46-shell is chosen around the boundary as the termination region in the dirichlet case . here",
    "we follow a similar strategy by setting up a @xmath46-region but allowing the process @xmath41 to continue moving after the latter reaches the @xmath46-region instead of being absorbed .",
    "figure 2 shows a strip region with width @xmath46 near the boundary is identified for a bounded domain . in a spherical domain ,",
    "the @xmath46-region is simply an @xmath46-shell near the boundary of width @xmath46 .",
    "denote @xmath104 as the @xmath46-region and @xmath105 as the remaining interior region @xmath106 .",
    "recall the discussion of the wos in the previous section . for a bm starting at a point @xmath65 in the domain",
    ", we draw a ball centered at @xmath65 , the brownian path will hit the spherical surface with a uniform probability as long as the ball does not overlap the domain boundary @xmath7 .",
    "the balls are constructed so that the jumps are as large as possible by taking the radius of the ball to be the distance to the boundary @xmath7 .",
    "we repeat this procedure until the path reaches the region @xmath104 . here , we continue the wos in @xmath104 but with a fixed radius @xmath107 much smaller than @xmath46 . in order to simulate the path of rbm , at some points of the time the bm path may run out of the domain . for this to happen ,",
    "the radius of wos is increased to @xmath108 when the path is close to boundary at a distance less than @xmath107 . in this way",
    ", the bm path will have a chance to get out of the domain , and when that happens , we then pull it back to the nearest point on the boundary along the normal of the boundary .",
    "afterwards , the bm path will continue as before .    in summary , a reflecting brownian motion path",
    "is simulated by the wos method inside @xmath2 .",
    "once it enters the @xmath46-region @xmath104 , the radius of wos changes to a fixed value , either @xmath107 or @xmath108 , depending on its current distance of the brownian particle to the boundary .",
    "once the path reaches a point on the boundary after the reflection , the radius of wos changes back to @xmath107 .",
    "figure 3 illustrates the movement of rbm in the @xmath46-region @xmath104 .",
    "as time progresses , we expect the path hits the boundary at some time instances and lies in either @xmath105 or @xmath104 at others .",
    "a rbm path is shown in figure 4 within a cube of size 2 .",
    "two equivalent forms of the local time have been given in ( [ eq11 ] ) and ( [ eq13 ] ) .",
    "here we will show how the @xmath46-region for the construction of the rbm in fig .",
    "3 can also be used for the calculation of the local time .",
    "when the @xmath46-region is thin enough , i.e. @xmath109 , an approximation of ( [ eq11 ] ) is given in ( [ eq21 ] ) , which is the occupation time that rbm @xmath110 sojourns within the @xmath46-region during the time interval @xmath42 $ ] . a close look at ( [ eq21 ] ) reveals that only the time spent near the boundary is involved and the specific moment when the path enters the @xmath46-region has no effect on the calculation of @xmath31 .",
    "suppose @xmath111 is the starting point of a brownian path , which is simulated by the wos method .",
    "once the path enters the @xmath46-region , the radius of wos is changed to @xmath107 or @xmath108 .",
    "it is known that the elapsed time @xmath112 for a step of a random walk on average is proportional to the square of the step size , in fact , @xmath113 when @xmath114 is small ( see appendix ) , which also applies to wos moves ( see remark 6 for details ) .",
    "therefore , we can obtain an approximation of the local time @xmath115 by counting the number of steps the path spent inside @xmath104 multiplied by the time elapsed for each step , i.e.@xmath116 where @xmath117 is the number of steps that wos steps remain in the @xmath46-region during the time interval [ @xmath118.$ ] figure 5 gives a sample path of the simulated local time associated with the rbm in figure 4 .",
    "( alternative way to compute local time @xmath31 ) from @xmath119 , the local time increases if and only if the rbm path hits the boundary , which implies that the time before the path hits the boundary makes no contribution to the increment of the local time .",
    "thus , a wos method with a changing radius can also be used with @xmath119 .",
    "specifically , we divide the time interval @xmath42 $ ] into to @xmath100 small subintervals of equal length . in",
    "each @xmath120 $ ] the brownian path will move @xmath108 or @xmath107 with the wos method when the current path lies within a distance less or more than @xmath114 to the boundary . if the path hits or crosses the boundary within @xmath121 $ ] , then @xmath31 will increase by @xmath122 .",
    "[ rm1 ] ( approximating rbm by wos or random walks on a lattice - a comparison ) there are two ways to find approximation to brownian paths inside the region @xmath104 and construct their reflections once they get out of the boundary . one way is by using the wos approach as described in section 5.1 .",
    "the other is in fact to use a random walk on a lattice inside @xmath123 in the second approach , as illustrated in fig .",
    "6 , a grid mesh is set up over @xmath104 and the random walk takes a one - step walk on the lattice until the path goes out of the domain and then it will be pushed back to the nearest lattice point inside @xmath104 .",
    "and the elapsed time for a @xmath107 walk is on average @xmath124 as shown in the appendix .",
    "the boundary local time @xmath31 can be still calculated as in @xmath125 .",
    "the problem with this approach is that a brownian motion actually should have equal probability to go in all directions in the space while a random walk on the lattice only considers six directions in @xmath3 .",
    "this limitation was found in our numerical tests to lead to insufficient accuracy in simulating reflecting brownian motions for our purpose .    meanwhile , the wos method in the @xmath46-region @xmath104 has a fixed radius @xmath107 , which enables us to calculate the boundary local time by @xmath125 since the elapsed time of a @xmath107 move in @xmath3 on average still remains to be @xmath124 .",
    "this conclusion can be heuristically justified by considering points on the sphere are the linear combination of the directions along the three axes , which implies that the average time that the path hits the sphere with radius @xmath107 should also be the same . as discussed before ,",
    "if the path comes within a distance very close to the boundary , say less than @xmath107 , the radius of the wos method is increased to @xmath108 so that it will have a chance to run out of the domain and then be pushed back to the nearest point on the boundary to affect a hit of the rbm on the boundary .      finally , with the boundary local time of rbm available",
    ", we can come to the approximation of the neumann problem solution @xmath13 using the probabilistic approach ( [ eq25 ] ) .",
    "first of all , we will need to truncate the infinite time duration required for the rbm path @xmath41 in ( [ eq25 ] ) to a finite extent for computer simulations .",
    "the exact length of truncation will have to be numerically determined by increasing the length until a convergence is confirmed ( namely , the approximation to @xmath13 does not improve within a prescribed error tolerance between two different choices of truncation times under same number of sampled paths ) .",
    "assume that the time period is limited to from @xmath126 to @xmath127 , then by a monte carlo sampling of the rbm paths , an approximation of ( [ eq25 ] ) will be @xmath128   , \\label{eq47}%\\ ] ] where @xmath129 are stochastic processes sampled according to the law of rbm .",
    "next , let us see how the rbm can be incorporated into the representation formula once its path is obtained .",
    "associate the time interval @xmath130 $ ] with the number of steps @xmath131 of a sampling path , @xmath131 will give the total length of each path .",
    "then , the integral inside the square bracket in ( [ eq47 ] ) can be transformed into @xmath132 @xmath133 where @xmath134 stands for the @xmath135th step the wos method has taken , and @xmath132 indicates a step for which @xmath136 .    as the integral in ( [ eq49 ] )",
    "is in fact the occupation time as shown in ( [ eq45 ] ) , ( [ eq49 ] ) becomes @xmath137    as a result , an approximation to the pde solution @xmath138 becomes @xmath139   .",
    "\\label{eq53}%\\ ] ]    theoretically speaking , @xmath46 should be chosen much larger than @xmath114 . here",
    ", we take @xmath140 , @xmath141 @xmath142 is an integer , which will increase as @xmath107 vanishes to zero .",
    "then , ( [ eq53 ] ) reduces to @xmath143\\\\ & = \\frac{\\delta x}{6k}\\sum_{i=1}^{n}\\left[\\sum_{j=1}^{nt}\\left(\\phi(x_{t_j}^i)i_{\\partial d}(x_{t_j}^i ) ( n_{t_j}-n_{t_{j-1}})\\right)\\right],\\\\ \\end{aligned } \\label{eq55}%\\ ] ] which is the final numerical algorithm for the neumann problem . in the following",
    "we present the general implementation of this numerical algorithm .",
    "let @xmath65 be any interior point in @xmath2 where the solution @xmath13 for the neumann problem is sought .",
    "first , we define the @xmath46-region @xmath104 near the boundary . for each one of @xmath100 rbm paths",
    ", the following procedure will be executed until the length of the path reaches a prescribed length given by @xmath144 :    1 .",
    "if @xmath145 , predict next point of the path by the wos with a maximum possible radius until the path locates near the boundary within a certain given distance @xmath146 say @xmath147 ( hit the @xmath46-region @xmath104 ) .",
    "if @xmath148 , @xmath149 ; otherwise , @xmath150 . here @xmath151 is the unit increment of @xmath31 at time @xmath23 .",
    "2 .   if @xmath148 , use the wos method with a fixed radius @xmath107 to predict the next location for brownian path . then , execute one of the two options :    _ option 1_. if the path happens to hit the domain boundary @xmath7 at @xmath152 , record @xmath153 .    _",
    "option 2_. if the path passes crosses the domain boundary @xmath7 , then pull the path back along the normal to the nearest point on the boundary .",
    "record the neumann value at the boundary location .    due to the independence of the paths simulated with the monte carlo method",
    ", we can run a large number of paths simultaneously on a computer with many cores in a perfectly parallel manner , and then collect all the data at the end of the simulation to compute the average .",
    "* algorithm 1 * gives a pseudo - code for the numerical realization of implementing the wos in both @xmath105 and @xmath104 regions .    * data : * select integers @xmath100 and @xmath131 , a starting point @xmath154 , step size @xmath155 and @xmath46-region @xmath156 near the boundary .",
    "* output * an approximation of @xmath157 .",
    "+ * initialization * @xmath158 , v[nt ] , u[n]$ ] , @xmath159 , @xmath160 and @xmath161 ; + * while * @xmath162 * do * set @xmath163 .",
    "* while * @xmath164 * do * * if * @xmath165 * then * / * if the path has not touched the @xmath46-region * / set @xmath166\\leftarrow$ ] 0 ; /*increment of local time at each step .",
    "* / set @xmath167;/ * find the distance to the boundary * / randomly choose a point @xmath168 on @xmath169 then set @xmath170 .",
    "* else*/ * the path enters the @xmath46-region * / @xmath166\\leftarrow1 $ ] ; /*local time increases * / set @xmath171 h ( 2h);/ * if @xmath172 or = 0 ( @xmath173 ) * / randomly choose a point @xmath168 on @xmath169 then set @xmath170 . *",
    "if * @xmath174 , * then * find @xmath175 to be the nearest point on @xmath7 to x and pull @xmath176 back onto @xmath7 at @xmath175 ; set @xmath177 ; set @xmath178\\leftarrow\\phi(x_j)$ ] * end * * end * @xmath179 ; * end * count @xmath180 0 ; * for * k=1:nt count @xmath180 count + @xmath181 $ ] ; * if * @xmath182\\sim=0 $ ] * then * @xmath183\\leftarrow u[i]+\\phi(x_k)\\cdot$]count ; count @xmath180 0 ; * end * @xmath184 ; * end * * return * @xmath185/n/(6k)$ ]    algorithm 1 : the algorithm for the probabilistic solution of the laplace equation with the neumann boundary condition",
    "in this section , we give the numerical results for the neumann problem in cubic , spherical and ellipsoid domains .    to monitor the accuracy of the numerical approximation of the solutions , we select a circle inside the domain , where the solution of the pde @xmath13 will be found by the proposed numerical methods , defined by @xmath186 with @xmath187 , @xmath188 , @xmath189 with @xmath190 .",
    "in addition , a line segment will also be selected as the locations to monitor the numerical solution , the endpoints of the segment are @xmath191 and @xmath192 , respectively .",
    "fifteen uniformly spaced points on the circle or the line are chosen as the locations for computing the numerical solutions .",
    "the true solution of the neumann problem ( [ eq1 ] ) with the corresponding neumann boundary data is @xmath193    in the figures of numerical results given below , the blue curves are the true solutions and the red - circle ones are the approximations .",
    "the numerical solutions are shifted by a constant so they agree with the exact solution at one point as the neumann problem is only unique up to an arbitrary additive constant .",
    "`` err''indicates the relative error of the approximations .      a cube domain of size 2 is selected to test the choice of the number of paths and the length of the paths ( truncation time duration @xmath127 ) in the numerical formula ( [ eq55 ] ) .",
    "the step - size @xmath194 is used as the radius of the wos inside the @xmath46-region @xmath104 , namely , the step - size of the random walk approximation of the rbm near the boundary . the number of paths is taken as @xmath195 two choices for the path length parameter @xmath196 and @xmath197 are compared to gauge the convergence of the numerical formula ( [ eq55 ] ) in terms of the path truncation .",
    "figures 7 and 8 shows the solution and the relative errors in both cases , which indicates that @xmath197 will be sufficient to give an error around 5% as shown in fig . 8 .    in the rest of the numerical tests",
    ", we will set the number of path @xmath198 and number of steps for each path @xmath197 .",
    "the unit ball is centered at the origin .",
    "we set @xmath194 and adjust @xmath46 , similar numerical results are obtained as in the case of the cube domain . here , the reflected points of brownian path are the intersection of the normal and the domain .",
    "though figure 8(b ) shows some oscillations in the middle , the overall approximation are within a relative error around @xmath199 .      the ellipse with axis lengths @xmath200",
    "is centered at the origin .",
    "we set @xmath201 .",
    "the numerical results along the circle behave better than those along the line segment , especially along the tail section of the latter ( figure 10(b ) ) , which lie closer to the origin @xmath202 .",
    "in this paper we have proposed numerical methods for computing the local time of reflecting brownian motion and the probabilistic solution of the laplace equation with the neumann boundary condition . without knowing the complete trajectories of rbm in space , we are able to use the wos to sample the rbm and calculate its local time , based on which a discrete probabilistic representation ( [ eq55 ] ) was obtained to produce satisfactory approximations to the solution of the neumann problem at one single point .",
    "numerical results validated the stability and accuracy of the proposed numerical methods .",
    "in addition , random walk on a lattice was also investigated as an alternative way to sample rbm .",
    "however , numerical experiments show that the numerical results are inferior to those obtained by the wos method .",
    "a possible reason is that formula ( [ eq11 ] ) for the local time is valid for a smooth path while a random walk approximation of the the brownian path contains inherent errors .    the local time",
    "can also be computed by a mathematically equivalent formula ( [ eq13 ] ) , for which the implementation is discussed briefly in section 5.2",
    ". again the numerical results based on ( [ eq13 ] ) are inferior to those obtained using the original limiting process of lvy in @xcite . this fact we believe may result from the time discretization error of brownian paths especially when long time truncation is employed in the probabilistic representation .    various issues affecting the accuracy of the proposed numerical methods remain to be further investigated , such as the number of random walk or wos steps and the truncation of duration time @xmath127 for the paths , the choice of the thickness for the @xmath46-region , the size of @xmath107 for the lattice , etc",
    ". in theory , the larger the truncation time @xmath127 ,",
    "the more accurate is the probabilistic formula for the neumann solution .",
    "however , for a fixed spatial mesh size @xmath203 long time integration will result in the accumulation of time discretization error for the brownian pathes , thus leading to the degeneracy of the numerical solutions as verified by our numerical experiments .",
    "meanwhile , rvsz @xcite have proposed some approximations of local time by other stochastic processes in the case of a half line .",
    "we conjecture such results may still hold in higher dimensions and progress in this direction will shed light on how to improve the numerical procedures proposed in this paper .",
    "if the random walk on a lattice as in fig .",
    "11 is to converge to a continuous bm , a relationship between @xmath112 and @xmath107 in @xmath3 will be needed and is shown to be @xmath204    the following is a proof for this result ( see @xcite for reference ) .",
    "the density function of standard bm satisfies the following pde @xcite @xmath205 by using a central difference scheme and changing @xmath206 to @xmath207 , equation ( [ eq59 ] ) becomes @xmath208    reorganizing and letting @xmath209 , we have @xmath210 by setting @xmath211 , we have @xmath212    for the initial condition @xmath6 , we have @xmath213 where @xmath214 and @xmath215",
    "let @xmath216 , then @xmath217 for each @xmath218 .",
    "we known that @xmath219 , @xmath220 have the same distribution as @xmath221 .",
    "notice that the covariance between any two of @xmath221 , @xmath219 , @xmath220 is zero , i.e. @xmath222 , @xmath223 and @xmath224 .",
    "so @xmath225 , @xmath226 and @xmath227 .",
    "according to the central limit theorem , we have @xmath228 the same assertion holds for @xmath229 and @xmath230 .    since @xmath231 , then @xmath232 and hence @xmath233 .",
    "therefore @xmath234 as @xmath235 .",
    "so are @xmath229 and @xmath236 .",
    "recall that the covariance between any pair of @xmath237 , @xmath229 , and @xmath230 is zero , that @xmath238,@xmath229 and @xmath230 are independent normal random variables .",
    "hence , @xmath239 and @xmath240 which coincides with the density function of the 3-@xmath16 standard bm .    in conclusion ,",
    "when @xmath241 , i.e. @xmath242 or @xmath243 , the central difference scheme converges to the standard bm in 3-@xmath16 .",
    "generally , the result can be extended to @xmath16-dimensional euclidean space and the result will be @xmath244 .",
    "the authors y.j.z and w.c . acknowledge the support of the national science foundation ( dms-1315128 ) and the national natural science foundation of china ( no .",
    "91330110 ) for the work in this paper . for the present work ,",
    "the author e. h. was supported in part by a simons foundation collaboration grant for mathematicians and by a research grant administered through the university of science and technology of china .",
    "( elton ) p. hsu , `` reflecting brownian motion , boundary local time and the neumann problem '' , dissertation abstracts international part b : science and engineering[diss .",
    "eng . ] , vol .",
    "45 , no . 6 , 1984 .",
    "c. yan , w. cai and x. zeng , a parallel method for solving laplace equations with dirichlet data using local boundary integral equations and random walks , siam j. scientific computing , vol .",
    "4 , b868- b889 , 2013 ."
  ],
  "abstract_text": [
    "<S> in this paper , we propose numerical methods for computing the boundary local time of reflecting brownian motion ( rbm ) in @xmath0 and its use in the probabilistic representation of the solution of the laplace equation with the neumann boundary condition . </S>",
    "<S> approximations of the rbm based on a walk - on - spheres ( wos ) and random walk on lattices are discussed and tested for sampling the rbm paths and their applicability in finding accurate approximation of the local time and discretization of the probabilistic formula . </S>",
    "<S> numerical tests for several types of domains ( cube , sphere , and ellipsoid ) have shown the convergence of the numerical methods as the length of the rbm path and number of paths sampled increase .    ,    ,     + local time of reflecting brownian motion and probabilistic representation of the neumann problem +   + prof . </S>",
    "<S> wei cai + department of mathematics and statistics , + university of north carolina at charlotte , + charlotte , nc 28223 - 0001 + phone : 704 - 687 - 0628 , fax : 704 - 687 - 6415 , + email : wcai@uncc.edu    reflecting brownian motion , brownian motion , boundary local time , skorohod problem , wos , random walk , laplace equation    _ ams subject classifications : 65c05 , 65n99 , 78m25 , 92c45 _ </S>"
  ]
}
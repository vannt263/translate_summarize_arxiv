{
  "article_text": [
    "the concept of word - hyperbolicity in groups , which has grown into one of the most fruitful areas of group theory since the publication of gromov s seminal paper @xcite , admits a natural extension to monoids via using gilman s characterization of word - hyperbolic groups using context - free languages @xcite , which generalizes directly to semigroups and monoids @xcite .",
    "informally , a word - hyperbolic structure for a semigroup consists of a regular language of representatives ( not necessarily unique ) for the elements of the semigroup , and a context - free language describing the multiplication table of the semigroup in terms of those representatives .",
    "this generalizaion has led to a substantial amount of research on word - hyperbolic semigroups ; see , for example , @xcite .",
    "some of this work has shown that word - hyperbolic semigroups do not possess such pleasant properties as word - hyperbolic groups : they may not be finitely presented ; they are not in general automatic or even asynchronously automatic ( * ? ?",
    "* example  7.7 et  seq . ) .",
    "the computational aspect of word - hyperbolic semigroups has so far received limited attention .",
    "the only established result seems to be the solvablity of the word problem ( * ? ? ?",
    "* theorem  3.8 ) .",
    "in contrast , automatic semigroups , which generalize automatic groups @xcite and whose study was inaugurated by campbell et al .",
    "@xcite , have been studied from a computational perspective , with both decidability and undecidability results emerging @xcite .",
    "this paper is devoted to some important decision problems for word - hyperbolic semigroups .",
    "word - hyperbolic structures are not necessarily ` stronger ' or ` weaker ' computationally than automatic structures .",
    "as noted above , word - hyperbolicity does not imply automaticity for semigroups , so one can not appeal to known results for automatic semigroups .",
    "a word - hyperbolic structure encodes the whole multiplication table for the semigroup , not just right - multiplication by generators ( as is the case for automatic structures ) . on the other hand ,",
    "context - free languages are less computationally pleasant than regular languages .",
    "for instance , an intersection of two context - free languages is not in general context - free , and indeed the emptiness of such an intersection can not be decided algorithmically .",
    "thus , in constructing algorithms for word - hyperbolic semigroups , it is often necessary to proceed via an indirect route , or use some unusual ` trick ' .    the most important result is a polynomial - time algorithm for solving the word problem ( ) . as remarked above , the word problem was already known to be solvable , but the previously - known algorithm required time exponential in the lengths of the input words ( * ? ? ?",
    "* theorem  3.8 ) .    some basic properties",
    "are then shown to be decidable ( ): being a monoid , green s relations @xmath0 , @xmath1 , and @xmath2 , being a group , and commutativity .",
    "these results are not particularly difficult , but are worth noting .",
    "the main body of the paper shows the decidability of more complicated algebraic properties : being completely simple ( ) , being a clifford semigroup ( ) , and being a free semigroup ( ) .    before embarking on the discussion of decision problems ,",
    "it is necessary to make a fundamental study of the notion of word - hyperbolicity , because the natural notion of a word - hyperbolic structure , or more precisely an ` interpretation ' of a word - hyperbolic structure , does not determine a unique semigroup up to isomorphism .",
    "a slightly strengthed definition is needed , and this is the purpose of the preliminary .",
    "the paper ends with a list of some open problem ( ) .",
    "before developing any algorithms for word - hyperbolic semigroups , we must clarify the relationship between a word - hyperbolic structure ( that is , an abstract collection of certain languages ) and a semigroup it describes .",
    "a similar study grounds the study of decision problems for automatic semigroups by kambites & otto @xcite , and our strategy and choice of terminology closely follows theirs .",
    "let @xmath3 be an alphabet .",
    "for any word @xmath4 , the reverse of @xmath5 is denoted @xmath6 .",
    "we extend this notation to languages : for any language @xmath7 , let @xmath8 .",
    "a _ pre - word - hyperbolic structure _ @xmath9 consists of :    * a finite alphabet @xmath10 ; * a regular language @xmath11 over @xmath10 ; * a context - free language @xmath12 over @xmath13 , where @xmath14 and @xmath15 are new symbols not in @xmath10 , such that @xmath16 .",
    "when @xmath9 is clear from the context , we may write @xmath3 , @xmath17 , and @xmath18 instead of @xmath10 , @xmath11 , and @xmath12 , respectively .    ` pre - word - hyperbolic structures ' consist only of languages fulfilling certain basic properties : there is no mention of being a structure ` for a semigroup ' in the definition .",
    "now , following kambites & otto for automatic semigroups @xcite , let us make a first attempt to turn the abstract pre - word - hyperbolic structure into something that describes a semigroup .",
    "as well shall see , this definition is flawed , but it is instructive to see its consequences , since these illustrate why the improved is actually the correct one .",
    "[ def : first ] an _ interpretation _ of a pre - word - hyperbolic structure @xmath9 with respect to a semigroup @xmath19 is a map @xmath20 such that @xmath21 and @xmath22 when there is no risk of confusion , denote @xmath23 by @xmath24 for any @xmath25 , and @xmath26 by @xmath27 for any @xmath28 .",
    "if a pre - word - hyperbolic structure @xmath9 admits an interpretation with respect to a semigroup @xmath19 , then @xmath9 is a _ word - hyperbolic structure _ for @xmath19 .",
    "suppose @xmath9 is a word - hyperbolic structure for @xmath19 , as per .",
    "then words in @xmath29 represent elements of @xmath19 , the regular language @xmath17 contains at least one representatives for every element of @xmath19 , and the context - free language @xmath18 encodes the multiplication table for @xmath19 in terms of representatives in @xmath17 . however , there is a problem .",
    "in contrast to the situation for automatic semigroups ( * ? ? ?",
    "* proposition  2.3 ) , a word - hyperbolic structure ( using ) does not uniquely determine a semigroup : the same pre - word - hyperbolic structure can admit interpretations with respect to non - isomorphic semigroups , as the following example shows :    [ ex : wordhypdoesnotdetermine ] let @xmath9 be a pre - word - hyperbolic structure with @xmath30 , @xmath31 , and @xmath32 .",
    "( of course , @xmath33 since @xmath34 is a single letter . )    let @xmath19 be the two - element null semigroup @xmath35 , where all products are equal to @xmath36 .",
    "let @xmath37 be the three - element null semigroup @xmath38 , again with all products equal to @xmath36 .",
    "define mappings @xmath39 and @xmath40 by @xmath41 then @xmath21 and @xmath42 .",
    "furthermore , @xmath43 since all products in @xmath19 are equal to @xmath36 and @xmath34 is the unique word in @xmath17 mapped to @xmath36 by @xmath44 .",
    "similarly , @xmath45 since all products in @xmath37 are equal to @xmath36 and @xmath34 is the unique word in @xmath17 in mapped to @xmath36 by @xmath46 .",
    "thus @xmath44 and @xmath46 are interpretations of @xmath9 with respect to the non - isomorphic semigroups @xmath19 and @xmath37 respectively .    hence , it seems not to make sense to consider decision problems for general word - hyperbolic semigroups , at least with the current definitions .",
    "it would be illogical to ask for an algorithm that takes as input a word - hyperbolic structure and determined some property of ` the ' semigroup is describes , since there is no such unique semigroup .",
    "the fundamental problem elucidates is that the word - hyperbolic structure @xmath9 does not determine whether the two symbols @xmath47 and @xmath48 represent the same element or different elements .",
    "however , this problem only arises for two symbols in @xmath3 ; that is , for two words over @xmath3 of length @xmath49 , in the sense that if we insist that an interpretation should consist of a map that sends distinct letters to distinct elements of the semigroup ( that is , the map is an injection when restricted to @xmath3 ) , then a word - hyperbolic structure does describe a unique semigroup up to isomorphism . in order to prove this result ( ) , we need the following lemma :    [ lem : equality ] let @xmath9 be a word - hyperbolic structure . then there is a relation @xmath50 , dependent only on @xmath9 , such that the following are equivalent for any words @xmath51 :    1 .",
    "@xmath52 ; 2 .",
    "@xmath53 for some interpretation @xmath54 with @xmath55 being an injection ; 3 .",
    "@xmath53 for any interpretation @xmath54 with @xmath55 being an injection .",
    "define @xmath56 and let @xmath57 the aim is now to show that @xmath58 has the required properties .",
    "let @xmath59 .",
    "first suppose that ( 1 ) holds ; that is , that @xmath52 .",
    "let @xmath44 be any interpretation of @xmath9 .",
    "either @xmath60 , in which case @xmath61 by and so @xmath53 , or @xmath62 . assume @xmath63 ; the other case is symmetrical",
    ". then there exist @xmath64 such that @xmath65 and @xmath66 .",
    "hence @xmath67 since @xmath44 is an interpretation of @xmath9 .",
    "hence  ( 1 ) implies  ( 3 ) .",
    "it is clear that ( 3 ) implies ( 2 ) .",
    "now suppose that ( 2 ) holds ; that is , that @xmath53 for some interpretation @xmath68 with @xmath55 being an injection . if @xmath69 , then @xmath70 and so @xmath61 since @xmath55 is injective , and so @xmath71 .",
    "now suppose that at least one of @xmath72 and @xmath73 is greater than @xmath49 .",
    "assume @xmath74 ; the other case is similar .",
    "since @xmath5 has at least two letters , the element @xmath75 is decomposable in @xmath19 .",
    "so there are words @xmath76 with @xmath77 . since @xmath53",
    ", it also follows that @xmath78 .",
    "thus the words @xmath79 and @xmath80 both lie in @xmath18 since @xmath44 is an interpretation of @xmath9 .",
    "hence @xmath81 .",
    "hence  ( 2 ) implies  ( 1 ) .",
    "[ prop : isomorphic ] let @xmath9 be a word - hyperbolic structure admitting interpretations @xmath82 and @xmath83 , with both @xmath55 and @xmath84 being injections . then there is an isomorphism @xmath85 from @xmath19 to @xmath37 such that @xmath86 .",
    "define maps @xmath87 and @xmath88 as follows . for",
    "any @xmath89 let @xmath90 be @xmath91 , where @xmath92 is some word with @xmath93 , and for any @xmath94 , let @xmath95 be @xmath96 , where @xmath97 is some word with @xmath98 .",
    "( the words @xmath5 and @xmath99 are guaranteed to exist since @xmath44 and @xmath46 are surjections . ) the maps @xmath85 and @xmath100 are well - defined as a consequence of .    to show that @xmath85 is a homomorphism , proceed as follows .",
    "let @xmath101 and choose @xmath102 with @xmath103 , @xmath104 , and @xmath105 .",
    "then @xmath106 , @xmath107 , and @xmath108 , by the definition of @xmath85 . now , @xmath109 ( since @xmath44 is an interpretation of @xmath9 ) and so @xmath110 ( since @xmath46 is an interpretation of @xmath9 ) .",
    "thus @xmath111 and so @xmath85 is a homomorphism .",
    "symmetric reasoning shows that @xmath88 is a homomorphism .",
    "the maps @xmath85 and @xmath100 are mutually inverse , since if @xmath92 is such that @xmath93 and @xmath112 , then @xmath113 and @xmath114 .",
    "thus @xmath87 is an isomorphism . by the definition of @xmath85 using elements of @xmath17 , it follows that @xmath86 .",
    "the extra condition used in , where the interpretation restricted to the alphabet @xmath3 is an injection , does not restrict the class of word - hyperbolic semigroups :    [ prop : wordhypstrinj ] let @xmath9 be a word - hyperbolic structure and @xmath115 an interpretation for @xmath9 with respect to a semigroup @xmath19 . then there is a word - hyperbolic structure @xmath116 , effectively computable from @xmath9 and @xmath117 , with @xmath118 , admitting an interpretation @xmath119 with @xmath120 being an injection .",
    "initially , let @xmath121 .",
    "we will modify @xmath116 until it has the desired property .",
    "suppose @xmath122 is not injective .",
    "pick @xmath123 with @xmath124 .",
    "replace every instance of @xmath47 by @xmath34 in words in @xmath125 .",
    "( this corresponds to replacing @xmath47 by @xmath34 whenever it appears as a label on an edge in a finite automaton recognizing @xmath125 . )",
    "replace every instance of @xmath47 by @xmath34 in words in @xmath126 .",
    "( this corresponds to replacing @xmath47 by @xmath34 whenever it appears as non - terminal in a context - free grammar defining @xmath125 . ) finally , delete @xmath47 from @xmath127 .",
    "since @xmath124 , it follows that @xmath116 is a word - hyperbolic structure admitting an interpretation @xmath128 with respect to @xmath19 .",
    "since @xmath127 is finite , we can iterate this process until @xmath122 becomes injective .",
    "finally , define @xmath129 .    in light of",
    ", we modify our definition of interpretation , to insist that each symbol represent a different element of the semigroup :    [ def : improved ] an _ interpretation _ of a pre - word - hyperbolic structure @xmath9 with respect to a semigroup @xmath19 is a map @xmath115 , with @xmath55 being injective , such that @xmath130 and @xmath131 again , when there is no risk of confusion , denote @xmath23 by @xmath24 for any @xmath25 , and @xmath26 by @xmath27 for any @xmath28 .",
    "therefore , a word - hyperbolic structure is henceforth a pre - word - hyperbolic structure that admits an interpretation in the sense of . with this new definition , shows that each word - hyperbolic structure describes a uniquely determined semigroup , and therefore one can sensibly attempt to solve questions about the semigroup using the word - hyperbolic structure .",
    "however , although a word - hyperbolic structure determines a unique semigroup , it does not determine a unique interpretation , even up to automorphic permutation .",
    "this parallels the situation for automatic semigroups @xcite , but is also true in a rather vacuous sense for word - hyperbolic semigroups , for the alphabet @xmath10 for a word - hyperbolic structure @xmath9 for a semigroup @xmath19 may include a symbol @xmath48 that does not appear in any word in either @xmath11 or @xmath12 .",
    "( in this situation , @xmath48 must represent a redundant generator for @xmath19 . )    for example , let @xmath132 , @xmath133 , and @xmath134 .",
    "then @xmath9 is a word - hyperbolic structure for the free semigroup @xmath135 with basis @xmath136 : let @xmath137 be such that @xmath138 and @xmath139 ; regardless of how @xmath140 is defined , @xmath44 is an interpretation of @xmath9 with respect to @xmath135 .",
    "less trivial is the following example :    [ ex : diffinterp ] let @xmath141 and define multiplication on @xmath19 by @xmath142 then @xmath19 is a monoid .",
    "( in fact , @xmath19 is a monoid formed by adjoining an identity to a @xmath36-rees matrix semigroup over the trivial group . )",
    "let @xmath143 .",
    "let @xmath144 .",
    "define @xmath145 define @xmath146 since @xmath11 is finite , @xmath12 is also finite and thus context - free .",
    "so @xmath9 is a word - hyperbolic structure for @xmath19 and @xmath147 is an interpretation for @xmath9 with respect to @xmath19 .",
    "however , @xmath148 and similarly @xmath149 . hence @xmath150 .",
    "therefore @xmath151 and so @xmath152 is also an interpretation of @xmath9 with respect to @xmath19 .",
    "moreover , there is no automorphism @xmath153 of @xmath19 such that @xmath154 . to see this , notice that such a @xmath153 would have to map @xmath155 to @xmath156 .",
    "the map @xmath153 would also preserve @xmath157-classes .",
    "but the @xmath157-class of @xmath158 contains the element @xmath159 , which is not idempotent ( since @xmath160 ) , whereas every element of the @xmath157-class of @xmath161 is idempotent .",
    "so no such map @xmath153 can exist .",
    "so the two interpretations are not even equivalent up to automorphic permutation of @xmath19 .",
    "the crucial point in is that only guarantees that the _ restriction _ of two interpretations to @xmath17 are equivalent up to automorphic permutation .",
    "it says nothing about the interpretation maps on the whole of @xmath29 .    in order to compute with the semigroup described by a word - hyperbolic structure",
    ", interpretations must be coded in a finite way .",
    "an _ assignment of generators _ for a word - hyperbolic structure @xmath9 is a map @xmath162 with the property that there is some interpretation @xmath54 such that @xmath163 for all @xmath164 ; such an interpretation is said to be _ consistent _ with @xmath165 .",
    "two assignments of generators @xmath165 and @xmath166 for @xmath9 are _ equivalent _ if @xmath167 for all @xmath168 .",
    "an assignment of generators for a word - hyperbolic structure is consistent with a unique interpretation ( up to automorphic permutation of the semigroup described ) .",
    "equivalent assignments of generators are consistent with the same interpretation .",
    "conversely , every interpretation is consistent with a unique ( up to equivalence ) assignment of generators .",
    "let @xmath9 be a word - hyperbolic structure and @xmath169 an assignment of generators .",
    "then there is an interpretation @xmath20 of @xmath9 that is consistent with @xmath165 ; that is , @xmath163 for all @xmath164 .",
    "let @xmath170 be another interpretation of @xmath9 that is consistent with @xmath165 ; the aim is to show that @xmath44 and @xmath44 differ only by an automorphic permutation of @xmath19 .",
    "first , @xmath171 for all @xmath164 , since @xmath46 is consistent with @xmath165 .",
    "by , there is an automorphism @xmath85 of @xmath19 such that @xmath86 , and so @xmath172 for all @xmath173 . hence @xmath44 and @xmath46 differ only by the automorphism @xmath85 .",
    "now let @xmath174 be an assignment of generators equivalent to @xmath165 ; the aim is to show that @xmath166 is also consistent with @xmath44 .",
    "now , @xmath167 for all @xmath164 since @xmath165 and @xmath166 are equivalent .",
    "thus @xmath175 by , and hence @xmath166 is also consistent with the interpretation @xmath44 .",
    "finally , suppose @xmath176 is an assignment of generators consistent with @xmath44 ; the aim is to show @xmath165 and @xmath166 are equivalent .",
    "now , @xmath177 for all @xmath164 since @xmath165 and @xmath178 are consistent with @xmath44 .",
    "hence @xmath179 for all @xmath164 by .",
    "a word - hyperbolic structure @xmath9 is said to be an _ interpreted _ word - hyperbolic structure if it is equipped with an assigment of generators @xmath180 .",
    "[ prop : gensarewords ] let @xmath9 be an interpreted word - hyperbolic structure for a semigroup @xmath19",
    ". then there is another interpreted word - hyperbolic structure @xmath181 for @xmath19 , effectively computable from @xmath9 , such that @xmath182 and @xmath183 is the embedding map from @xmath184 to @xmath185 .",
    "let @xmath184 be @xmath10 and @xmath186 . for brevity ,",
    "let @xmath187 . for each @xmath188",
    ", define the languages : @xmath189 each of these languages is context - free because each is the intersection of the context - free language @xmath12 with a regular language .",
    "[ notice that @xmath190 is either empty or a singleton language . ]",
    "now let @xmath191 notice that @xmath192 is also context - free .",
    "let @xmath193 be an interpretation of @xmath9 . then , recalling that @xmath194 , @xmath195 because @xmath196 , @xmath197 , and @xmath5 range over @xmath186 , and the eight cases that arise depending on whether each word lies in @xmath11 or @xmath10 correspond to the eight sets @xmath12 , @xmath198 , @xmath199 , @xmath200 , @xmath201 , @xmath202 , @xmath203 , and @xmath190 .",
    "[ notice that these sets are not necessarily disjoint , since it is possible that @xmath204 for some @xmath164 . ]    finally , define @xmath183 to be the embedding map from @xmath184 to @xmath185 .",
    "this map is an assignment of generators since trivially @xmath205 for any interpretation @xmath44 of @xmath181 .    in light of",
    ", we will assume without further comment that an interpreted word - hyperbolic structure @xmath9 has the property that @xmath206 and that @xmath180 is the embedding map from @xmath10 to @xmath11 .",
    "notice further that the computational effectiveness aspect of ensures we are free to assume that an interpreted word - hyperbolic structure serving as input to a decision problem has this property .    for automatic semigroups ,",
    "it is possible to assume that the automatic structure has a further pleasant property , namely that every element of the semigroup is represented by a unique word in the language of representatives ( * ? ? ?",
    "* proposition  2.9(iii ) ) .",
    "however , there exists a word - hyperbolic semigroup ( indeed , a word - hyperbolic monoid ) that does not admit a word - hyperbolic structure where the language of representatives has this uniqueness property ( * ? ? ?",
    "* examples  10 &  11 ) .",
    "this section notes a few very basic facts about computing with word - hyperbolic structures for semigroups that are used later in the paper .    [",
    "lem : multiplying ] there is an algorithm that takes as input a word - hyperbolic structure @xmath9 and two words @xmath207 , and outputs a word @xmath208 satisfying @xmath209 with @xmath210 ( where @xmath48 is is dependent only on @xmath9 ) in time @xmath211 .",
    "[ actually , the appearance of this lemma in @xcite allows @xmath212 or @xmath213 to be empty and asserts that @xmath214 . to obtain the lemma above , where @xmath212 and @xmath213 are non - empty , increase @xmath48 appropriately . ]",
    "notice that there may be many possibilities for a word @xmath215 with @xmath209 .",
    "[ lem : checkmultiplying ] there is an algorithm that takes as input a word - hyperbolic structure @xmath9 and three words @xmath216 , and decides whether @xmath209 in time cubic in @xmath217 .",
    "the algorithm simply checks whether @xmath218 , and the membership problem for context - free languages is soluble in cubic time .",
    "this section is dedicated to proving that word - hyperbolic semigroups have word problem soluble in polynomial time .    as noted in the introduction , the previously - known algorithm required exponential time ( * ? ? ?",
    "* theorem  3.8 ) .",
    "this motivated hoffmann & thomas to define a narrower notion of word - hyperbolicity for monoids that still generalizes word - hyperbolicity for groups . by restricting to this version of word - hyperbolicity ,",
    "one recovers automaticity ( * ? ? ?",
    "* theorem  3 ) and an algorithm that runs in time @xmath219 , where @xmath220 is the length of the input words ( * ? ? ?",
    "* theorem  2 ) . although the algorithm described below is not as fast as this , the existence of a polynomial - time solution to the word problem for word - hypebolic monoids ( in the original duncan ",
    "gilman sense ) diminishes the appeal of the hoffmann ",
    "thomas restricted version .",
    "[ thm : wordproblem ] there is an algorithm that takes as input an interpreted word - hyperbolic structure @xmath9 for a semigroup and two words @xmath221 and determines whether @xmath222 in time polynomial in @xmath223 .    by interchanging @xmath5 and @xmath99 if necessary ,",
    "assume that @xmath224 and so ( since the interpretation map is injective on @xmath10 ) , we have @xmath222 if and only if @xmath225 .",
    "so assume @xmath226 .",
    "factorize @xmath5 as @xmath227 , where @xmath228 .",
    "notice that @xmath222 if and only if @xmath229 .",
    "by below , there is a polynomial - time algorithm that takes the three words @xmath230 , @xmath231 , and @xmath99 and yields words @xmath232 , @xmath233 , and @xmath234 in @xmath11 representing @xmath235 , @xmath236 , and @xmath237 , of lengths at most @xmath238 , @xmath239 and @xmath240 , in time polynomial in @xmath241 , @xmath242 , and @xmath243 , respectively , where @xmath48 is a constant dependent only on @xmath9 .",
    "it follows that @xmath222 if and only if @xmath244 , and , by , this can be checked in time cubic in @xmath245 , which , by the bounds on the lengths of @xmath232 , @xmath233 , and @xmath234 , is still polynomial in the lengths of @xmath5 and @xmath99 .",
    "thus the word problem for the semigroup described by @xmath9 is soluble in polynomial time .",
    "[ lem : wordproblem ] there is an algorithm that takes as input an interpreted word - hyperbolic structure @xmath9 for a semigroup and a words @xmath246 and outputs a word @xmath247 with @xmath248 and @xmath249 , and which takes time polynomial in @xmath72 .",
    "suppose @xmath250 , where @xmath251 .",
    "therefore @xmath252 is a sequence of words in @xmath17 whose concatenation represents the same element of the semigroup as @xmath5 .    for the purposes of this proof",
    ", the _ total length _ of a sequence @xmath253 of words in @xmath254 is defined to be the sum of the lengths of the words @xmath255 .",
    "consider the following computation , which will form the iterative step of the algorithm : suppose there is a sequence of words @xmath253 , each lying in @xmath11 and each of length at most @xmath256 .",
    "notice that @xmath257 is an upper bound for the total length of this sequence . for @xmath258 ,",
    "apply to compute a word @xmath259 representing @xmath260 of length at most @xmath261 . for each @xmath262",
    ", this takes @xmath263 time , which is at worst @xmath264 time .",
    "therefore the total time used is at most @xmath265 , which is certainly no worse than time @xmath266 .",
    "that is , the total time used is at worst quintic in the upper bound of the total length of the original sequence .    if @xmath267 is odd , set @xmath268 to be @xmath269 .",
    "( if @xmath267 is even , @xmath270 , so @xmath268 has already been computed . )",
    "this is purely notational ; no extra computation is done .",
    "the result of this computation is a sequence of @xmath271 words , each of length at most @xmath272 , whose concatenation represents the same element of the semigroup as the concatenation of the original sequence .",
    "the total length of the result is at most @xmath273 ; that is , at most @xmath274 times the total length of the previous sequence .     representing the same element as @xmath4 .",
    "]    apply this computation iteratively , starting with the sequence @xmath252 and continuing until a sequence with only one element results . since each iteration takes a sequence with @xmath267 terms to one with @xmath275 terms ,",
    "there are at most @xmath276 iterations .",
    "the first iteration of this computation , applied to a sequence whose total length is at most @xmath220 , completes in time @xmath277 , yielding a sequence of total length at most @xmath278 ; the next iteration completes in time @xmath279 , yielding a sequence of total length at most @xmath280 . in general",
    "the @xmath281-th iteration completes in time at most @xmath282 , yielding a sequence of total length at most @xmath283 .",
    "so the @xmath284 iterations together complete in time at most @xmath285 , since @xmath286 .",
    "[ illustrates the algorithm geometrically : each iteration yields a sequence of roughly half as many words in @xmath11 labelling a sequence of arcs that each span a subword twice as long as the corresponding terms in the preceding sequence . ]",
    "applying exponent and logarithm laws , @xmath287 and so , since @xmath48 is a constant , the algorithm completes in time @xmath288 yielding a word in @xmath11 of length at most @xmath289 .",
    "interestingly , although gives a polynomial - time algorithm for the word problem for word - hyperbolic monoids , the proof does not give a bound on the exponent of the polynomial , because the constant @xmath48 of is dependent on the word - hyperbolic structure @xmath9 .",
    "there is thus an open question : does such a bound actually exist ? or can the word problem for hyperbolic semigroups be arbitrarily hard within the class of polynomial - time problems ?",
    "the algorithm described in is not particularly novel .",
    "it is similar in outline to that described by hoffmann & thomas ( * ? ? ?",
    "* lemma  11 ) for their restricted notion of word - hyperbolicity in monoids .",
    "however , the proof that it takes time polynomial in the lengths of the input words _ is _ new .",
    "hoffmann & thomas describe their algorithm in recursive terms : to find a word in @xmath11 representing the same element as @xmath290 , factor @xmath5 as @xmath291 , where the lengths of @xmath99 and @xmath292 differ by at most @xmath49 , recursively compute representatives @xmath293 and @xmath294 in @xmath11 of @xmath237 and @xmath295 , then compute a representative for @xmath296 using @xmath293 and @xmath294 .",
    "this last step they prove to take linear time ( recall that this only applies for their restricted notion of word - hyperbolicity ) and to yield a word of length at most @xmath297 , which shows that the whole algorithm takes time @xmath219 .",
    "however , this recursive , ` top - down ' view of the algorithm obscures the fact that the overall strategy can be made to word even for monoids that are word - hyperbolic in the general duncan  gilman sense .",
    "it is through the iterative , ` bottom - up ' view of the algorithm presented above that it becomes apparent that the length increase of remains under control through the @xmath298 iterations .",
    "this section shows that certain basic properties are effectively decidable for word - hyperbolic semigroups .",
    "first , being a monoid is decidable :    [ alg : monoid ]     _ input : _ an interpreted word - hyperbolic structure @xmath9 for a semigroup .",
    "_ output : _ if the semigroup is a monoid ( that is , contains a two - sided identity ) , output _ yes _  and a word in @xmath11 representing the identity ; otherwise output _",
    "no_.    _ method : _    1 .   for each @xmath164 ,",
    "construct the context - free language @xmath299 and check that it is non - empty . if any of these checks fail , halt and output _",
    "no_. 2 .   for each @xmath164",
    ", choose some @xmath300 .",
    "3 .   iterate the following step for each @xmath164 . for each @xmath301 ,",
    "if @xmath302 , halt and output _ yes _  and @xmath303 .",
    "4 .   halt and output _",
    "no_.    outputs _ yes _  and @xmath281 if and only if the semigroup defined by @xmath9 is a monoid with identity @xmath304 .",
    "suppose first that halts with output _ yes _  and @xmath281 .",
    "then by step  3 , @xmath305 for all @xmath306 .",
    "since @xmath307 generates @xmath19 , it follows that @xmath308 for all @xmath89 and hence @xmath304 is an identity for @xmath19 .",
    "suppose now that @xmath19 is a monoid with identity @xmath309 .",
    "then there is some word @xmath92 with @xmath310 . for every @xmath164 , @xmath311 , and so @xmath312 .",
    "thus @xmath313 for all @xmath314 and so each @xmath315 is non - empty .",
    "thus the checks in step  1 succeed and the algorithm proceeds to step  2 .",
    "suppose that @xmath250 , where @xmath316 for each @xmath317 .",
    "then @xmath318 hence @xmath319 represents the identity @xmath309 and so @xmath320 .",
    "thus at least one of the @xmath303 chosen in step  2 passes the test of step  3 ( which guarantees that it represents an identity since @xmath307 generates @xmath19 ) and so the algorithm halts at step  3 and outputs _ yes _  and a word @xmath303 representing the identity .",
    "is there an algorithm that takes as input an interpreted word - hyperbolic structure and determines whether the semigroup it defines contains a zero ?",
    "notice that this can not be decided using a procedure like , or at least not obviously , because the natural analogue of @xmath315 is @xmath321 which is naturally defined as the intersection of @xmath18 and @xmath322 .",
    "however , testing the emptiness of an intersection of context - free languages is in general undecidable .",
    "so using @xmath323 would , at minimum , require some additional insight into the kind of context - free languages that can appear as @xmath18 .",
    "notice that commutativity is very easy to decide for a word - hyperbolic semigroup ; one needs to check only that @xmath324 for all symbols @xmath325 .",
    "this is simply a matter of performing a bounded number of multiplications and checks using and [ lem : checkmultiplying ] .",
    "green s relation @xmath326 is decidable for automatic semigroups ; in contrast , green s relation @xmath157 is undecidable , as a corollary of the fact that right - invertibility is undecidable in automatic monoids ( * ? ? ?",
    "* theorem  5.1 ) .",
    "in contrast , @xmath157 and @xmath326 are both decidable for word - hyperbolic semigroups , as a consequence of @xmath12 describing the entire multiplication table .",
    "there is an algorithm that takes as input an interpreted word - hyperbolic structure @xmath9 and two words @xmath327 and decides whether the elements represented by @xmath5 and @xmath99 are :    1 .",
    "@xmath1-related , 2 .   @xmath0-related , 3",
    ".   @xmath2-related .",
    "let @xmath19 be the semigroup described by @xmath9 .",
    "the elements @xmath296 and @xmath237 are @xmath1-related if and only if there exist @xmath328 such that @xmath329 and @xmath330 .",
    "that is , @xmath331 if and only if either @xmath332 , or there exist @xmath333 with @xmath329 and @xmath330 .",
    "the possibility that @xmath222 can be checked algorithmically by .",
    "the existence of an element @xmath89 such that @xmath329 is equivalent to the non - emptiness of the language @xmath334 this context - free language can be effectively constructed and its non - emptiness effectively decided .",
    "similarly , it is possible to decide whether there is an element @xmath335 such that @xmath336 .",
    "hence it is possible to decide whether @xmath331 .",
    "similarly , one can effectively decide whether @xmath337 .",
    "since @xmath338 if and only if @xmath331 and @xmath337 , whether @xmath296 and @xmath237 are @xmath2-related is effectively decidable .",
    "[ corol : group ] there is an algorithm that takes as input an interpreted word - hyperbolic structure and decides whether the semigroup it describes is a group .",
    "suppose the input word - hyperbolic structure is @xmath9 and that it describes a semigroup @xmath19 .",
    "if @xmath19 is not a monoid , it can not be a group .",
    "otherwise we know that @xmath19 is a monoid and we have a word @xmath339 that represents its identity .",
    "for each @xmath168 , check whether @xmath340 and @xmath341 : if all these checks succeed , then every generator is both right - and left - invertible , and so @xmath19 is a group ; if any fail , there is some generator that is either not right- or not left - invertible and so @xmath19 can not be a group . hence it is decidable whether @xmath9 describes a group .",
    "are green s relations @xmath342 and @xmath343 decidable for word - hyperbolic semigroups ?",
    "note that @xmath342 and @xmath343 are both undecidable for automatic semigroups ( * ? ? ?",
    "* theorems  4.1 &  4.3 ) .",
    "this section shows that it is decidable whether a word - hyperbolic semigroup is completely simple .",
    "this is particularly useful because a completely simple semigroup is word - hyperbolic if and only if its cayley graph is a hyperbolic metric space ( * ? ? ?",
    "* theorem  4.1 ) , generalizing the equivalence for groups of these properties for groups .",
    "let @xmath19 be a semigroup , @xmath344 and @xmath345 be index sets , and @xmath346 be a @xmath347 matrix over @xmath19 whose @xmath348-th element is @xmath349 .",
    "the rees matrix semigroup @xmath350 $ ] is defined to be the set @xmath351 with multiplication @xmath352    recall that a semigroup is completely simple if it has no proper two - sided ideals , is not the two - element null semigroup , and contains a primitive idempotent ( that is , an idempotent @xmath309 such that , for all idempotents @xmath353 , we have @xmath354 ) .",
    "the version of the celebrated rees theorem due to suschkewitsch ( * ? ? ?",
    "* theorem  3.3.1 ) shows that all completely simple semigroups are isomorphic to a semigroup @xmath355 $ ] , where @xmath356 is a group and @xmath344 and @xmath345 are finite sets .",
    "let @xmath3 be an alphabet representing a generating set for a completely simple semigroup @xmath355 $ ] .",
    "define maps @xmath357 and @xmath358 by letting @xmath359 and @xmath360 be such that @xmath361 . for the purposes of this paper",
    ", we call the pair of maps @xmath362 the _ species _ of the completely simple semigroup .",
    "we first of all prove that it is decidable whether a word - hyperbolic semigroup is a completely simple semigroup of a particular species .",
    "[ alg : compsimpspeciesdec ]     _ input : _ an interpreted word - hyperbolic structure @xmath9 , two finite sets @xmath344 and @xmath345 , and two surjective maps @xmath363 and @xmath364 .",
    "_ output : _ if @xmath9 describes a completely simple semigroup of species @xmath362 , output _ yes _ ; otherwise output _",
    "no_.    _ method : _ at various points in the algorithm , checks are made .",
    "if any of these checks fail , the algorithm halts and outputs _ no_.    1 .   for each @xmath365 and @xmath366 , construct the regular language @xmath367 check that each @xmath368 is non - empty .",
    "2 .   for each @xmath369 and @xmath370 , construct the context - free language @xmath371 and check that it is empty .",
    "3 .   for each @xmath365 and @xmath366 , choose a word @xmath372 and construct the context - free language @xmath373 check that each @xmath374 is non - empty .",
    "4 .   for each @xmath365 and @xmath366 , choose a word @xmath375 .",
    "5 .   for each @xmath164 , @xmath365 , and @xmath366 , check that @xmath376 and @xmath377 . 6 .   for each @xmath164 , @xmath365 , and @xmath370 , calculate a word @xmath378 such that @xmath379 .",
    "7 .   for each @xmath164 , @xmath365 , and @xmath370 , check that @xmath380 .",
    "8 .   for each @xmath164 , @xmath365 , and @xmath370 , check that @xmath381 9 .",
    "for each @xmath164 , @xmath365 , and @xmath370 , construct the context - free language @xmath382 and check that it is non - empty .",
    "10 . for each @xmath164 , @xmath365 , and @xmath370 , choose some @xmath383 and check that @xmath384",
    ". 11 . halt and output _",
    "yes_.    and [ lem : compsimpalg2 ] show that this algorithm works .",
    "[ lem : compsimpalg1 ] if outputs _ yes _ , the semigroup defined by the word - hyperbolic structure @xmath9 is a completely simple semigroup of species @xmath362 .",
    "let @xmath19 be the semigroup defined by the input word - hyperbolic structure @xmath9 .",
    "suppose the algorithm output _",
    "yes_. then all the checks in steps 110 must succeed .    for each @xmath365 and @xmath366 , let @xmath385 . by the definition of @xmath368 , for each @xmath164 , the word @xmath34 lies in @xmath386 . by the check in step  1 , each @xmath387 is non - empty .    by the check in step  2 ,",
    "for all @xmath369 and @xmath388 , there do not exist @xmath389 , @xmath390 , @xmath391 with @xmath392 .",
    "that is , @xmath393 in particular , @xmath394 and so each @xmath387 is a subsemigroup of @xmath19 .    in each @xmath387",
    ", there is some element that stabilizes some other element @xmath395 on the right ( that is , that right - multiplies @xmath395 like an identity ) by the check in step  3 . in step  4 , @xmath396 is chosen to be such an element .",
    "let @xmath397 .    by the check in step  5 , @xmath398 in step  6",
    ", @xmath399 is calculated for all @xmath400 , @xmath370 , @xmath164 so that @xmath401 by , @xmath402 . by the check in step  7 ,",
    "@xmath403    let @xmath365 and @xmath366 .",
    "let @xmath404 .",
    "then @xmath405 for some @xmath406 .",
    "since @xmath407 , @xmath408 and @xmath409 . then    & & & + & & = & e_i , e_i , & + & & = & e_i , a_1e_i , & + & & = & e_i , a_2e_i , & + & & = & e_i , a_3e_i , & + & & & + & & = & e_i , a_n-1e_i , + & & & & + & & = & &    therefore the subsemigroup @xmath387 is generated by the set of elements @xmath410 .    by the check in step  8 , for all @xmath365 , @xmath366 , and @xmath411",
    ", we have @xmath412 .",
    "since @xmath413 generates @xmath387 , it follows that @xmath414 is an identity for @xmath387 .",
    "so each @xmath387 is a submonoid of @xmath19 with identity @xmath414 .",
    "in particular , each @xmath414 is idempotent .",
    "let @xmath365 and @xmath366 . by the check in step  9 , every element @xmath411 has a right inverse @xmath415 in @xmath387 . by the check in step  10 , @xmath416 and",
    "so @xmath415 is also a left - inverse for @xmath417 in @xmath387 .",
    "thus every generator in @xmath413 is both right- and left - invertible .",
    "hence every element of @xmath387 is both right- and left - invertible and so @xmath387 is a subgroup of @xmath19 .",
    "since @xmath19 is the union of the various @xmath387 , the semigroup @xmath19 is regular and the @xmath414 are the only idempotents in @xmath19 .",
    "thus by , distinct idempotents can not be related by the idempotent ordering .",
    "hence all idempotents of @xmath19 are primitive .",
    "since @xmath19 does not contain a zero ( since it is the union of the @xmath387 and holds ) , it is completely simple by ( * ? ? ?",
    "* theorem  3.3.3 ) .",
    "[ lem : compsimpalg2 ] if semigroup defined by the word - hyperbolic structure @xmath9 is a completely simple semigroup of species @xmath362 , then outputs _ yes_.    suppose the semigroup @xmath19 defined by the word - hyperbolic structure @xmath9 is a completely simple semigroup , with @xmath418 $ ] .",
    "for all @xmath365 and @xmath419 , let @xmath414 be the identity of the subgroup @xmath420 ; that is , @xmath421 . for each @xmath164 , the element @xmath422 has the form @xmath423 for some @xmath424 .    by the definition of multiplication in @xmath19 , the word @xmath425 represents an element of @xmath387 if and only if @xmath408 and @xmath409",
    "hence each @xmath368 must be the preimage of @xmath387 and map surjectively onto @xmath387 .",
    "in particular , @xmath368 must be non - empty and so the checks in step  1 succeed .    for any @xmath369 and @xmath370",
    ", we have @xmath426 .",
    "hence if @xmath427 , @xmath428 , and @xmath92 are such that @xmath429 , then @xmath430 .",
    "thus the language is empty for all @xmath369 and @xmath370 .",
    "hence all the checks in step  2 succeed .    for any @xmath365 and @xmath366 , if @xmath431 , then @xmath432 .",
    "since @xmath387 is a subgroup , @xmath433 , and @xmath414 is the unique element of @xmath387 that stabilizes @xmath395 on the right .",
    "thus the language @xmath374 is non - empty , and consists of words representing @xmath414 .",
    "hence the checks in step  3 succeed , and the words @xmath396 chosen in step  4 are such that @xmath434 .    in a completely simple semigroup ,",
    "each idempotent is a left identity within its own @xmath157-class and @xmath435 is a right identity within its own @xmath326-class ( * ? ? ?",
    "* proposition  2.3.3 ) .",
    "hence for each @xmath173 , @xmath436 , and @xmath437 , we have @xmath438 and @xmath439 .",
    "thus the checks in step  5 succeed .    for all @xmath164 , @xmath365 , and @xmath370 , @xmath440 thus all the checks in step  7 succeed .    for all @xmath164 , @xmath365 , and @xmath370 ,",
    "the element @xmath441 lies in the subgroup @xmath387 , whose identity is @xmath414 . hence all the checks in step  8 succeed .",
    "since all elements of this subgroup are right - invertible , each language @xmath442 is non - empty ; hence all the checks in step  9 succeed . finally , since a right inverse is also a left inverse in a group , all the checks in step  10 succeed",
    ". therefore the algorithm reaches step  10 and halts with output _",
    "yes_.    [ thm : compsimpdec ] there is an algorithm that takes as input an interpreted word - hyperbolic structure @xmath9 for a semigroup and decides whether it is a completely simple semigroup .",
    "we prove that this problem can be reduced to the problem of deciding whether the semigroup defined by an interpreted word - hyperbolic structure @xmath9 is a completely simple semigroup of a particular species @xmath443 .",
    "let @xmath19 be the semigroup specified by @xmath9",
    ". then @xmath19 is finitely generated .",
    "thus we need only consider the problem of deciding whether @xmath19 is a finitely generated completely simple semigroup . by the definition of multiplication in a completely simple semigroup ( viewed as a rees matrix semigroup ) ,",
    "the leftmost generator in a product determines its @xmath1-class ( that is , the @xmath344-component of the product ) and the rightmost generator in a product determines its @xmath0-class ( that is , the @xmath345-component of the product ) .",
    "thus there must be at least one generator in each @xmath1- and @xmath0- class , and hence if @xmath19 is an @xmath444 rees matrix semigroup , both @xmath445 and @xmath446 can not exceed @xmath447 .",
    "thus it is suffices to decide whether @xmath19 is an @xmath444 completely simple semigroup for some fixed choice of @xmath344 and @xmath345 , for one can simply test the finitely many possibilities for index sets @xmath344 and @xmath345 no larger than @xmath10 .",
    "one can restrict further , and ask whether @xmath19 is completely semigroup of some particular species @xmath448 , for there are a bounded number of possibilities for the maps surjective @xmath449 and @xmath450 , so it suffices to test each one .",
    "this section is dedicated to showing that being a clifford semigroup is decidable for word - hyperbolic semigroups . recall the definition of a clifford semigroup :    let @xmath451 be a [ meet ] semilattice and let @xmath452 be a collection of disjoint groups with , for all @xmath453 such that @xmath454 , a homomorphism @xmath455 satisfying the following conditions :    1 .   for each @xmath456 ,",
    "the homomorphism @xmath457 is trivial . 2 .   for @xmath458 with @xmath459 , @xmath460    the set of elements of the _ clifford semigroup",
    "$ ] is the union of the disjoint groups @xmath462 .",
    "the product of the elements @xmath463 and @xmath256 of @xmath19 , where @xmath464 and @xmath465 , is @xmath466 which lies in the group @xmath467 .",
    "[ the meet of @xmath165 and @xmath166 is denoted @xmath468 . ]",
    "let @xmath3 be an alphabet representing a generating set for a clifford semigroup @xmath461 $ ] .",
    "define a map @xmath469 by letting @xmath360 be such that @xmath470 . for the purposes of this paper",
    ", we call this map @xmath471 the _ species _ of the clifford semigroup .",
    "[ notice that the map @xmath450 extends to a unique homomorphism @xmath472 . ]",
    "we first of all prove that it is decidable whether a word - hyperbolic semigroup is a clifford semigroup of a particular species .",
    "[ alg : cliffspeciesdec ]     _ input : _ an interpreted word - hyperbolic structure @xmath9 and a map @xmath471 .",
    "_ output : _ if @xmath9 describes a clifford semigroup of species @xmath471 , output _ yes _ ; otherwise output _",
    "no_.    _ method : _ at various points in the algorithm , checks are made .",
    "if any of these checks fail , the algorithm halts and outputs _ no_.    1 .   for each @xmath456 ,",
    "construct the regular language @xmath473 ( these languages are regular since @xmath17 is regular , @xmath451 is finite , and the map @xmath471 is known . ) check that each @xmath474 is non - empty .",
    "2 .   for each @xmath475 , construct the context - free language @xmath476 and check that it is empty .",
    "3 .   for each @xmath477 , choose some word @xmath478 and construct the context - free language @xmath479 and check that @xmath480 is non - empty .",
    "4 .   for each @xmath456 , pick some @xmath481 and check that for all @xmath475 , @xmath482 . 5 .   for each @xmath164 , check that @xmath483 . for",
    "each @xmath456 and @xmath164 check that @xmath484 .",
    "6 .   for each @xmath456 and @xmath164 such that @xmath485 , construct the context - free language @xmath486 and check that @xmath487 is non - empty .",
    "7 .   for each @xmath456 and @xmath164 such that @xmath485 , pick some @xmath488 and check that @xmath489 .",
    "halt and output _",
    "yes_.    and [ lem : cliffordalg2 ] show that this algorithm works .",
    "[ lem : cliffordalg1 ] if outputs _ yes _ , the semigroup described by the word - hyperbolic structure @xmath9 is a clifford semigroup of species @xmath471 .",
    "let @xmath19 be the semigroup defined by the input word - hyperbolic structure @xmath9 .",
    "suppose the algorithm output _",
    "yes_. then all the checks in steps 17 must succeed .    for each @xmath456 , let @xmath490 . by the check in step  1 ,",
    "all @xmath491 are non - empty .    by the check in step  2 ,",
    "for every @xmath475 , there do not exist @xmath492 , @xmath493 , @xmath494 with @xmath429 .",
    "that is , @xmath495 . in particular , @xmath496 and",
    "so each @xmath491 is a subsemigroup of @xmath19 .    in each @xmath491",
    ", there is some element that right - multiplies some other element like an identity by the check in step  3 .    for each @xmath456 ,",
    "the word @xmath497 represents an element @xmath498 , and the set of elements @xmath499 forms a subsemigroup isomorphic to the semilattice @xmath451 by the check in step  4 .    by the checks in step  5 , for each @xmath164",
    ", the element @xmath500 ( which , like @xmath422 , lies in @xmath501 ) acts like an identity on @xmath422 ( that is , @xmath502 ) , and every element @xmath498 commutes with @xmath422 .",
    "let @xmath456 and @xmath503 .",
    "then @xmath405 for some @xmath504 with @xmath505 . then    & & & + & & = & e_a_1e_a_2e_a_n & + & & = & e_a_1e_a_2e_a_n & + & & = & e_(a_1)(a_2)(a_n ) & + & & = & e_(a_1a_2a_n ) & + & & = & e_.    thus @xmath506 .",
    "similarly @xmath507 .",
    "hence @xmath498 is an identity for @xmath491 .    for each @xmath456 and @xmath164 with @xmath508 , there is an element @xmath509 such that @xmath510 by the checks in steps  6 and  7 . since @xmath491 is generated by elements @xmath422 such that @xmath508 , it follows that @xmath491 is a subgroup of @xmath19 .",
    "since @xmath17 is the union of the various @xmath474 , the semigroup @xmath19 is the union of the various subgroups @xmath491 .",
    "in particular , @xmath19 is regular .",
    "furthermore , the only idempotents in @xmath19 are the identities of these subgroups ; that is , the elements @xmath498 .",
    "since every @xmath498 commutes with every element of @xmath307 , it follows that all idempotents of @xmath19 are central .",
    "hence @xmath19 is a regular semigroup in which the idempotents are central , and thus is a clifford semigroup by ( * ? ? ?",
    "* theorem  4.2.1 ) .",
    "[ lem : cliffordalg2 ] if the semigroup defined by the word - hyperbolic structure @xmath9 is a clifford semigroup of species @xmath471 , then outputs _ yes_.    suppose the semigroup @xmath19 defined by the word - hyperbolic structure @xmath511 is a clifford semigroup , with @xmath512 $ ] . for each @xmath456",
    ", let @xmath498 be the identity of @xmath462 .",
    "the language @xmath474 clearly consists of exactly those words in @xmath17 that map onto @xmath462 , so @xmath474 is non - empty .",
    "hence the checks in step  1 succeed .    by the definition of multiplication in a clifford semigroup , @xmath513 .",
    "hence if @xmath492 , @xmath514 , and @xmath92 are such that @xmath429 , then @xmath515 .",
    "thus the language is empty for all @xmath475 .",
    "hence all the checks in step  2 succeed .",
    "let @xmath456 .",
    "for any @xmath478 , the element @xmath516 lies in the subgroup @xmath462 .",
    "thus the language @xmath480 consists of precisely the words that represent elements of @xmath462 that right - multiply @xmath517 like an identity .",
    "since @xmath462 is a subgroup , every element of @xmath480 represents @xmath498 .",
    "since there must be at least one such representative , @xmath480 is non - empty .",
    "thus every check in step  3 succeeds .",
    "the identities @xmath498 form a subsemigroup isomorphic to the semilattice @xmath451 by the definition of multiplication in a clifford semigroup .",
    "thus every check in step  4 succeeds .",
    "furthermore , every @xmath498 is idempotent and thus central in @xmath19 by ( * ? ? ?",
    "* theorem  4.2.1 ) , and so every check in step  5 succeeds .",
    "let @xmath456 and @xmath164 be such that @xmath508 .",
    "let @xmath518 be the word representing @xmath519 .",
    "then @xmath520 hence @xmath488 and so all the checks in step  6 succeed . similarly @xmath521 and so all the checks in step  7 succeed .",
    "therefore the algorithm reaches step  8 and halts with output _",
    "yes_.    [ thm : cliffdec ] there is an algorithm that takes as input an interpreted word - hyperbolic structure @xmath9 for a semigroup and decides whether it is a clifford semigroup .",
    "we prove that this problem can be reduced to the problem of deciding whether the semigroup defined by an interpreted word - hyperbolic structure @xmath9 is a clifford semigroup with a particular species @xmath522 .",
    "let @xmath19 be the semigroup specified by @xmath9",
    ". then @xmath19 is finitely generated .",
    "thus we need only consider the problem of deciding whether @xmath19 is a finitely generated clifford semigroup , whose corresponding semilattice must therefore also be finitely generated .",
    "a finitely generated semilattice is finite .",
    "so if @xmath19 is a clifford semigroup @xmath461 $ ] , the semilattice @xmath451 must be a homomorphic image of the free semilattice of rank @xmath447 , which has @xmath523 elements .",
    "thus it is suffices to decide whether @xmath19 is a clifford semigroup for some fixed semilattice @xmath451 , for one can simply test the finitely many possibilities for @xmath451 .",
    "one can restrict further , and ask whether @xmath19 is a clifford semigroup with some fixed semilattice @xmath451 and some particular placement of generators into the semilattice of groups .",
    "( that is , with knowledge of in which group @xmath462 each generator @xmath422 putatively lies , described by a map @xmath524 .",
    "of course , it is necessary that @xmath525 generates @xmath451 . )",
    "there are a bounded number of possibilities for the map @xmath450 , so it suffices to test each one .",
    "this section shows that it is decidable whether a word - hyperbolic semigroup is free .",
    "the following technical lemma , which is possibly of independent interest , is necessary .",
    "[ lem : freecheck ] there is an algorithm that takes as input an alphabet @xmath3 , a symbol @xmath15 not in @xmath3 , and a context - free grammar @xmath526 defining a context - free language @xmath527 that is a subset of @xmath528 , and decides whether @xmath527 contains a word @xmath529 where @xmath530 .",
    "suppose @xmath531 .",
    "[ here , @xmath532 is the set of non - terminal symbols , @xmath533 is of course the set of terminal symbols , @xmath346 the set of productions , and @xmath534 is the start symbol . ]",
    "since @xmath18 does not contain the empty word ( since every word in @xmath18 lies in @xmath528 ) , assume without loss that @xmath526 contains no useless symbols or unit productions ( * ? ? ?",
    "* theorem  4.4 ) .",
    "let @xmath535 notice that if @xmath536 is a production in @xmath346 and @xmath537 , then every non - terminal symbol appearing in @xmath212 also lies in @xmath538 .",
    "[ this relies on there being no useless symbols in @xmath526 , which means that every other non - terminal in @xmath346 derives some terminal word . ] for this reason , it is easy to compute @xmath539 .",
    "suppose that @xmath540 for some @xmath537 and @xmath541 .",
    "then @xmath196 and @xmath197 can not contain @xmath15 since @xmath542 .",
    "since there are no unit productions in @xmath346 , at least one of @xmath196 and @xmath197 is not the empty word .",
    "since @xmath18 is not a useless symbol , it appears in some derivation of a word @xmath543 . pumping the derivation @xmath540 yields a word @xmath544 where exactly one of @xmath545 or @xmath546 holds , since the extra inserted @xmath196 and @xmath197 can not be on opposite sides of the symbol @xmath15 since @xmath537 . hence either @xmath547 or @xmath548 .",
    "hence in this case @xmath527 does contain a word of the given form .",
    "since it is easy to check whether there is a non - terminal @xmath549 with @xmath540 , we can assume that no such non - terminal exists .",
    "therefore any non - terminal @xmath550 derives only finitely many words ( since any derivation starting at @xmath18 can only involve non - terminals in @xmath551 and by assumption no such non - terminal can appear twice in a given derivation ) .",
    "these words can be effectively enumerated .",
    "let @xmath550 and let @xmath252 be all the words that @xmath18 derives . replacing a production @xmath552 by the productions @xmath553 , @xmath554 ,  , @xmath555 does not alter @xmath527 .",
    "iterating this process , we eventually obtain a grammar @xmath526 where no non - terminal symbol in @xmath551 appears on the right - hand side of a production .",
    "thus all symbols in @xmath556 can be eliminated and we now have a grammar @xmath526 with @xmath557 .",
    "every production is now of the form @xmath558 or @xmath559 , where @xmath560 and @xmath561 .",
    "[ there can be only one non - terminal on the right - hand side of each production , since otherwise some terminal word would contain two symbols @xmath15 , which is impossible . ]",
    "we are now going to iteratively define a map @xmath562 , where @xmath563 denotes the free group on @xmath3 , which we will identify with the set of reduced words on @xmath564 .",
    "first , define @xmath565 .",
    "now , iterate through the productions as follows .",
    "choose some production @xmath566 such that @xmath567 is already defined .",
    "let @xmath568 .",
    "if @xmath569 is undefined , set @xmath570 .",
    "if @xmath569 is defined , check that @xmath569 and @xmath571 are equal ; if they are not , halt : @xmath527 does contain words @xmath572 with @xmath547 .    to see this ,",
    "suppose @xmath573 and consider the sequence of productions that gave us the original value of @xmath569 : @xmath574 which implies that @xmath575 , and the sequence that gave us @xmath567 : @xmath576 which implies that @xmath577 .",
    "choose @xmath578 such that @xmath579 .",
    "then @xmath527 contains both both @xmath580 and ( recalling that @xmath566 is a production ) @xmath581 .",
    "suppose @xmath582 and @xmath583 .",
    "then @xmath584 , which is a contradiction .",
    "once we have iterated through all the productions of the form @xmath585 , iterate through the productions of the form @xmath586 , and check that @xmath587 .",
    "if this check fails , halt : @xmath527 does contain words @xmath572 with @xmath547 ; the proof of this is very similar to the previous paragraph .",
    "finally , notice that if the iteration through all the productions completes with all the checks succeeding , a simple induction on derivations , using the values of @xmath567 , shows that all words @xmath588 are such that @xmath61 .",
    "[ alg : free ]     _ input : _ an interpreted word - hyperbolic structure @xmath9 .",
    "_ output : _ if @xmath9 describes a free semigroup , output _ yes _ ; otherwise output _",
    "no_.    _ method : _    1 .   for each @xmath164 ,",
    "iterate the following : 1 .",
    "construct the context - free language @xmath589 2 .",
    "check whethe @xmath590 is empty .",
    "if it is empty , proceed to the next interation .",
    "if it is non - empty , choose some word @xmath591 . if @xmath592 contains the letter @xmath34 , halt and output _",
    "no_. if @xmath592 does not contain the letter @xmath34 , define the rational relations @xmath593 modify @xmath9 as follows : replace @xmath3 by @xmath594 ; replace @xmath17 by @xmath595 ; and replace @xmath18 by @xmath596 , and proceed to the next iteration .",
    "2 .   if @xmath597 , halt and output _",
    "define the rational relation @xmath598 let @xmath599 . using the method of ,",
    "check whether @xmath532 contains any word of the form @xmath529 with @xmath600 .",
    "if so , halt and ouput _",
    "no_. otherwise , halt and output _",
    "yes_.    to [ lem : free2 ] show that this algorithm works .    [ lem : free0 ] if @xmath9 is a word - hyperbolic structure for a semigroup @xmath19 , then the replacement @xmath9 produced in step  1(b ) is also a word - hyperbolic structure for a semigroup @xmath19 .",
    "if the language @xmath590 is non - empty , then any word @xmath601 is such that @xmath602 . in particular ,",
    "@xmath603 . furthermore , since @xmath604 , we see that @xmath422 is a redundant generator .",
    "the rational relation @xmath605 relates any word in @xmath29 to the corresponding word in @xmath606 with all instances of the symbol @xmath34 replaced by the word @xmath592 .",
    "the rational relation @xmath607 relates any word in @xmath608 to the corresponding word in @xmath609 with all instances of the symbol @xmath34 _ before _",
    "@xmath15 replaced by the word @xmath592 and all instances of the symbol @xmath34 _ after _",
    "@xmath15 replaced by the word @xmath610 .",
    "hence @xmath611 since application of rational relations preserves regularity and context - freedom , @xmath612 is regular and @xmath613 is context - free . finally , since @xmath614 , we see that @xmath615 maps onto @xmath19 , and similarly @xmath616 describes the multiplication of elements of @xmath19 in terms of representatives in @xmath17 .",
    "[ lem : free1 ] if outputs _ yes _ , the semigroup defined by the word - hyperbolic structure @xmath9 is a free semigroup .",
    "the algorithm can only halt with output _ yes _  in step  3 , so the algorithm must pass step  2 as well .",
    "hence the language of representatives is @xmath29 .",
    "let @xmath19 be the semigroup defined by @xmath17 and let @xmath82 be an interpretation .",
    "suppose for _ reductio ad absurdum _ that @xmath44 is not injective .",
    "then there are distinct words @xmath617 such that @xmath618 . since @xmath55 is injective by definition , at least one of @xmath196 and @xmath197 has length @xmath619 or more . interchanging @xmath196 and @xmath197 if necessary , assume @xmath620 .",
    "so @xmath621 , where @xmath234 and @xmath622 are both non - empty .",
    "since @xmath623 , we have @xmath624 and so @xmath625 .",
    "hence @xmath626 .",
    "but since the algorithm outputs _ yes _  at step  3 ,",
    "there is no word @xmath627 with @xmath600 .",
    "this is a contradiction and so @xmath44 is injective .",
    "so @xmath82 is an isomorphism and so @xmath19 is free .",
    "[ lem : free2 ] if the word - hyperbolic structure @xmath9 defines a free semigroup , outputs _ yes_.    let @xmath628 be the semigroup defined by @xmath9 .",
    "let @xmath629 be an interpretation .",
    "since elements of @xmath630 are indecomposable , @xmath631 .    in step  1 , the algorithm iterates through each @xmath164 . for each @xmath632 ,",
    "since @xmath633 is indecomposable , the language @xmath590 is empty and the algorithm moves to the next iteration .",
    "let @xmath634 .",
    "then @xmath633 has length ( in @xmath628 ) at least two and so is decomposable .",
    "hence there exist @xmath76 such that @xmath635 . furthermore , since @xmath23 and @xmath636 must be shorter ( in @xmath628 ) than @xmath633 , neither @xmath196 nor @xmath197 can include the letter @xmath34 .",
    "hence the replacement of @xmath9 described in step  1(b ) takes place .",
    "since this occurs for all @xmath637 , at the end of step  1 we have a word - hyperbolic structure @xmath9 with @xmath638 . since @xmath55 is injective",
    ", @xmath55 must be a bijection from @xmath3 to @xmath630 .",
    "hence the homomorphism @xmath639 must be an isomorphism , and so @xmath640 ; thus the check in step  2 is successful .",
    "therefore @xmath641 and so @xmath642 thus the check in step  3 is successful and the algorithm terminates with output _",
    "yes_.    thus , from and [ lem : free2 ] , we obtain the decidability of freedom for word - hyperbolic semigroups :    [ thm : freedec ] there is an algorithm that takes as input an interpreted word - hyperbolic structure @xmath9 for a semigroup and decides whether it is a free semigroup .",
    "this conclusing section lists some important question regarding decision problems for word - hyperbolic semigroups .",
    "the equivalent question for automatic semigroups is easy : one takes an automatic structure , effectively computes an automatic structure with uniqueness , and checks whether its regular language of representatives is finite .",
    "however , this approach can not be used for word - hyperbolic semigroups , because there exist word - hypebolic semigroups that do not admit word - hyperbolic structures with uniqueness indeed , they may not even admit regular languages of unique normal forms ( * ? ? ?",
    "* examples  10 &  11 ) .",
    "is there an algorithm that takes as input an interpreted word - hyperbolic structure for a semigroup and decides whether that semigroup admits a word - hyperbolic structure with uniqueness ? ( that is , where the language of representatives maps bijectively onto the semigroup . )",
    "if so , it is possible to compute a word - hyperbolic structure with uniqueness in this case ?",
    "j. fountain & m. kambites . ` hyperbolic groups and completely simple semigroups ' . in _ semigroups and languages _ , pp .",
    "world sci .",
    ", river edge , nj , 2004 .",
    "http://dx.doi.org/10.1142/9789812702616_0007[10.1142/9789812702616_0007 ] .",
    "m. hoffmann , d. kuske , f. otto , & r.  m. thomas . ` some relatives of automatic and hyperbolic groups ' . in g.",
    "m. s. gomes , j.   .",
    "pin , & p.  v. silva , eds , _ semigroups , algorithms , automata and languages ( coimbra , 2001 ) _ , pp .",
    "379406 . world scientific publishing , river edge , n.j . , 2002 ."
  ],
  "abstract_text": [
    "<S> this paper studies decision problems for semigroups that are word - hyperbolic in the sense of duncan & gilman . </S>",
    "<S> a fundamental investigation reveals that the natural definition of a ` word - hyperbolic structure ' has to be strengthened slightly in order to define a unique semigroup up to isomorphism . </S>",
    "<S> it is proved that every word - hyperbolic semigroup has word problem solvable in polynomial time ( improving on the previous exponential - time algorithm ) . </S>",
    "<S> algorithms are presented for deciding whether a word - hyperbolic semigroup is a monoid , a group , a completely simple semigroup , a clifford semigroup , or a free semigroup . </S>"
  ]
}
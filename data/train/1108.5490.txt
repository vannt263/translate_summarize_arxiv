{
  "article_text": [
    "it was the invention of quantum error correcting codes @xcite ( qeccs ) that opened quantum computing ( qc ) as a theoretical possibility .",
    "however , high precision required for error correction @xcite combined with the large number of auxiliary qubits necessary to implement it , have so far inhibited any practical realization beyond proof - of - the - principle demonstrations@xcite .    in any qecc",
    ", one needs to perform certain many - body quantum measurements in order to decide how to correct the encoded state .",
    "the practical difficulty is that a generic code requires measurements which are both complicated and frequent at the same time .",
    "it is therefore clear that a quantum computer can only be build via a thorough optimization at every step of the design . in particular ,",
    "code optimization targets codes that combine good parameters with fairly simple measurements .",
    "it is also desirable to parallelize these measurements given a specific on - chip layout of a qc architecture .    to date",
    ", the main focus of the qecc - research has been on finding good codes with the traditional code parameters , which are the block length @xmath0 , code dimension @xmath1 , and code distance @xmath2 ( or code rate @xmath3 and the relative distance @xmath4 ) . for stabilizer codes",
    "@xcite , we also consider the number of encoded qubits @xmath5 .",
    "a number of stabilizer codes@xcite have been designed that meet or nearly achieve the existing bounds on distance @xmath2 for the given @xmath6 and @xmath0 .",
    "code parameters can be further refined by going beyond the family of stabilizer codes .",
    "one example is a recently introduced framework of codeword - stabilized ( cws ) quantum codes@xcite .",
    "a qubit cws code @xmath7 ( in standard form ) is determined by a graph @xmath8 and a classical binary code @xmath9 .",
    "cws codes include all stabilizer codes as a subclass ( the corresponding binary code @xmath10 must be linear ) , but also the codes which have been proved to have parameters superior to those of any stabilizer code@xcite . unfortunately , typical gains in code dimension @xmath1 correspond to a fraction of a qubit .",
    "moreover , error - correcting algorithms known for general non - additive cws codes have exponential complexity@xcite , as opposed to polynomial complexity of the stabilizer codes .    even for the relatively simple additive codes ,",
    "their optimization is a very difficult problem that has exponential complexity .",
    "this is one of the main reasons as to why the two relatively simple code families are almost exclusively used among stabilizer codes to estimate the threshold accuracy required for scalable quantum computation : the concatenated codes@xcite and the surface codes@xcite which originated from the toric codes@xcite .",
    "both families have very low code rates that scale as inverse powers of code distance .    in this work",
    "we explore how the framework of cws codes can be used to relegate the design of quantum stabilizer codes to classical binary linear codes in order to simplify the overall design .",
    "in particular , we formulate several theorems framing the parameters of an additive cws code which can be obtained from a given graph .",
    "we also suggest a simple decomposition of the @xmath11 generator matrix corresponding to the stabilizer in terms of the graph adjacency matrix and the parity check matrix of the binary code .",
    "finally , we design several graph families corresponding to regular lattices which result in some particularly good codes .",
    "these include graphs with circulant adjacency matrix which can be used to construct single - generator cyclic additive codes , a class of codes overlooked in previous publications . in particular , we prove the existence of single - generator cyclic additive codes with the parameters @xmath12 $ ] , @xmath13 and @xmath14 $ ] ( version of toric codes ) .",
    "note that these code families have distances that are not bounded , unlike any cws code families constructed previously@xcite .",
    "the paper is organized as follows . in sec .",
    "[ sec : notations ] , we introduce the notations and briefly review some known results for quantum and classical codes . in sec .",
    "[ sec : upper - bound ] , we establish several upper bounds on general cws codes . in sec .",
    "[ sec : additive - cws ] we give a cws decomposition of the @xmath15 matrix corresponding to the stabilizer generators . in sec .",
    "[ sec : gv ] , we formulate the gilbert - varshamov ( gv ) bounds for additive cws codes which can be obtained from a given graph .",
    "cyclic additive cws and more general single - generator additive cyclic codes are considered in sec .",
    "[ sec : cyclic - cws ] where we discuss their properties and give several examples .",
    "we give our conclusions in sec .",
    "[ sec : conclusions ] .",
    "a _ classical _ @xmath16-ary block error - correcting code @xmath17 is a set of @xmath1 length-@xmath0 strings over an alphabet with @xmath16 symbols .",
    "different strings represent @xmath1 distinct messages which can be transmitted .",
    "the ( hamming ) distance between two strings is the number of positions where they differ .",
    "distance @xmath2 of the code @xmath10 is the minimum distance between any two different strings from @xmath18 .    in the case of _ linear _ codes , the elements of the alphabet must form a galois field @xmath19 ; all strings form @xmath0-dimensional vector space @xmath20 .",
    "a linear error - correcting code @xmath21_q$ ] is a @xmath6-dimensional subspace of @xmath20 .",
    "the distance of a linear code is just the minimum weight of a non - zero vector in the code , where weight @xmath22 of a vector @xmath23 is the number of non - zero elements .",
    "a basis of the code is formed by the rows of its _ generator matrix _ @xmath24 .",
    "all vectors that are orthogonal to the code form the corresponding @xmath25-dimensional dual code , its generator matrix is the parity - check matrix @xmath26 of the original code .    for",
    "a _ binary _ code @xmath27 $ ] , the field is just @xmath28 . for a _ quaternary _ code @xmath29 , the field is @xmath30 , with @xmath31    for non - binary codes , there is also a distinct class of _ additive _ classical codes , defined as subsets of @xmath20 closed under addition ( in the binary case these are just linear codes ) .",
    "a code @xmath10 is cyclic if inclusion @xmath32 implies that @xmath33 .",
    "codes that are both linear and cyclic are particularly simple : by mapping vectors to polynomials in the natural way , @xmath34 , it is possible to show that any such code consists of polynomials which are multiples of a single generator polynomial @xmath35 , which must divide @xmath36 ( using the algebra corresponding to the field @xmath19 ) .",
    "the quotient defines the _ check polynomial _",
    "@xmath37 , @xmath38 which is the generator polynomial of the dual code .",
    "the degree of the generator polynomial is @xmath39 .",
    "the corresponding generator matrix @xmath24 can be chosen as ( the first @xmath6 rows of ) the circulant matrix formed by subsequent shifts of the vector that corresponds to @xmath35 .",
    "_ qubit _ quantum error correcting codes are defined in the complex hilbert space @xmath40 , where @xmath41 is the hilbert space of a single two - level system .",
    "@xmath41 is formed by all vectors @xmath42 with @xmath43 , and the inner product such that the two states are orthonormal , @xmath44 , @xmath45 .",
    "any operator acting in @xmath40 can be represented as a linear combination of pauli operators which form the @xmath0-qubit pauli group @xmath46 of size @xmath47 , @xmath48 where @xmath49 , @xmath50 , and @xmath51 are the usual pauli matrices , and @xmath52 is the identity matrix .",
    "the weight @xmath53 of a pauli operator @xmath54 is the number of non - identity terms in the corresponding tensor product .",
    "all pauli operators are unitary ; they are also hermitian with eigenvalues @xmath55 when the phase factor @xmath56 in eq .",
    "( [ pauligroup ] ) is real - valued , @xmath57 .",
    "a state @xmath58 is stabilized by a hermitian pauli operator @xmath59 if @xmath60 . a linear space @xmath61 is stabilized by a set of operators @xmath62 if each vector in @xmath61 is stabilized by every operator in @xmath62 .",
    "an @xmath63 _ quantum error - correcting code _ is a @xmath1-dimensional subspace of the hilbert space @xmath40 .",
    "such a subspace can be described by an orthonormal basis @xmath64 .",
    "let @xmath65 be some set of pauli errors .",
    "a qecc detects all errors @xmath66 if and only if @xcite @xmath67 where @xmath68 only depends on the error @xmath54 , but is independent of the basis vectors .",
    "a qecc has distance @xmath2 if it can detect all pauli errors of weight @xmath69 , but not all errors of weight @xmath2 .",
    "the errors in the set @xmath70 can be corrected if and only if all the nontrivial pairwise combinations of errors from @xmath70 are detectable @xcite .",
    "thus a distance-@xmath2 code corrects all errors of weight @xmath71 .",
    "the code @xmath72 is _ non - degenerate _ if linearly - independent errors from @xmath73 produce corrupted spaces @xmath74 that are linearly independent .",
    "otherwise , the code is _ degenerate _ , implying the existence of at least two _ mutually degenerate _ linearly independent operators @xmath75 which act identically on @xmath72 .",
    "the code is called _ pure _ if linearly independent errors from @xmath73 produce corrupted spaces that are not only linearly independent , but also mutually orthogonal . for all codes considered in this work , non -",
    "degenerate codes are also pure@xcite .",
    "two codes are considered equivalent if they differ just by qubit order , and/or discrete rotations leaving each of the single - qubit pauli groups invariant .",
    "the latter are called local clifford ( lc ) transformations .      here",
    "we briefly review the well - known family of stabilizer codes @xcite .",
    "an @xmath76 $ ] _ stabilizer code _ @xmath61 is a @xmath77-dimensional subspace of the hilbert space @xmath40 stabilized by an abelian group @xmath78 with @xmath79 hermitian pauli generators , @xmath80 .",
    "explicitly , @xmath81 such a code exists only if @xmath82 .",
    "the group @xmath83 is called the stabilizer of the code . changing the sign(s ) of one or several of the generators",
    "@xmath84 results in replacing @xmath61 with one of @xmath85 equivalent codes whose direct sum ( together with @xmath61 ) is the entire space @xmath86 .",
    "the _ normalizer _ of @xmath83 is a set of pauli operators generating unitary transformations that leave @xmath83 invariant , @xmath87 elements of the normalizer form a group commuting with @xmath83 but not necessarily with each other .",
    "it is possible to construct @xmath88 logical operators @xmath89 ,",
    "@xmath90 , @xmath91 belonging to @xmath46 with the usual commutation relations that generate the normalizer when the generators of @xmath83 are included @xcite . the abelian subgroup of @xmath92 , @xmath93 , becomes a maximal abelian subgroup of @xmath46 when the generator @xmath94 is also included .",
    "the group @xmath95 stabilizes a unique _ stabilizer _",
    "state @xmath96 , an @xmath97 $ ] stabilizer code , while the operators @xmath89 generate the basis of the code , i.e. , @xmath98 by convention , the stabilizer state is considered non - degenerate , and its distance @xmath99 is the minimum weight of a non - trivial member of the group @xmath100 .    for stabilizer codes , phases of ( hermitian ) pauli operators are only needed to choose one of the equivalent codes in eq .",
    "( [ eq : stabilizer ] ) , as well as to introduce the commutation relations .",
    "it is convenient to drop the phases and map the pauli operators to two binary strings , @xmath101 @xcite , @xmath102 where @xmath103 , @xmath104 , and @xmath105 is generally different from that in eq .",
    "( [ pauligroup ] ) .",
    "this map preserves the operator algebra , with a product of two pauli operators @xmath106 and @xmath107 corresponding to a sum of the corresponding binary vectors @xmath108 and @xmath109 .",
    "the map  ( [ eq : umap ] ) can be taken one step further@xcite to quaternary codes , by introducing @xmath110 vectors @xmath111 [ see eq .",
    "( [ eq : f4def ] ) ; note that this mapping differs slightly from that in ref .  ] .",
    "we will denote this combined map as a function @xmath112 .",
    "note that up to a phase this association also allows us to define @xmath113 . to be specific , for the pauli operator @xmath113 we will set @xmath114 in eq .",
    "( [ eq : umap ] ) , which corresponds to @xmath115 in eq .",
    "( [ pauligroup ] ) .",
    "it is easy to check that two pauli operators commute if and only if the symplectic scalar product @xmath116 vanishes ( @xmath117 ) . in terms of the corresponding @xmath118",
    ", this corresponds to the vanishing of the _ trace inner product _",
    "@xmath119 where @xmath120 , @xmath121 .",
    "a dual code to an additive @xmath11 code @xmath29 ( equipped with trace inner product ) is defined as @xcite @xmath122 if @xmath123 , one says @xmath29 is self - orthogonal .",
    "a classical additive code @xmath29 corresponding to a set of operators @xmath124 is self - orthogonal if and only if @xmath124 is an abelian group .",
    "thus any quantum stabilizer code can be described as a self - orthogonal classical additive code over @xmath11 .",
    "the following theorem is applicable to additive @xmath11 codes ( variant of theorem 2 from ref .",
    "@xcite ) :    [ th1]suppose @xmath29 is an additive self - orthogonal code in @xmath125 , containing @xmath126 vectors , such that there are no vectors of weight @xmath127 in @xmath128 .",
    "then @xmath129 defines a stabilizer of an additive qecc with parameters @xmath76 $ ] .",
    "[ ex:713 ] the well - known calderbank - shor - steane ( css ) @xmath130 $ ] code @xcite has the stabilizer with the generators@xcite @xmath131 and the logical operators @xmath132 as any css code , this code is linear .",
    "qubit permutations also give an equivalent cyclic linear code with the generator polynomial @xmath133 ; @xmath35 is a factor of @xmath134 .",
    "the corresponding check polynomial is @xmath135 .",
    "cws codes @xcite represent a general class of nonadditive qeccs .",
    "a general cws code is defined in terms of a stabilizer state @xmath136 and a set of @xmath1 mutually commuting _ codeword operators _ @xmath137 .",
    "explicitly [ cf .",
    "( [ eq : code - basis ] ) ] , @xmath138 for non - trivial cws codes , this construction coincides with union - stabilizer ( ust ) codes@xcite , restricted to the zero - dimensional originating code .",
    "any stabilizer state is lc - equivalent to a _",
    "graph state _ @xcite , a stabilizer state with the stabilizer group @xmath139 whose generators @xmath140 are determined by the adjacency matrix @xmath141 of a ( simple ) graph @xmath8 , @xmath142 where @xmath143 , @xmath144 denotes the @xmath145-th row of @xmath146 .",
    "in fact , such a graph is usually not unique , even after accounting for graph isomorphisms .",
    "the full set of lc - equivalent graph states can be generated by a sequence of _ local complementations _ , operations on a graph where the subgraph corresponding to a neighborhood of a particular vertex is inverted .",
    "such graphs are called _ _ locally equivalent__@xcite .",
    "any cws code @xmath63 is lc equivalent to a cws code in _ standard form _ ,",
    "defined by an order-@xmath0 graph @xmath8 and a classical binary code @xmath10 containing @xmath1 binary words .",
    "the graph defines the graph state , while the vectors of the classical code @xmath147 are used to generate the code word operators , @xmath148 .",
    "thus , @xmath149 it is customary to use notation @xmath150 for cws codes in standard form .    the key simplification of the cws construction comes from the fact that the basis states @xmath151 are eigenvectors of the graph stabilizer generators , @xmath152 thus , a pauli operator in the form  ( [ eq : umap ] ) can be transformed to a @xmath51-only operator @xmath153 , where the _ graph image _ of the operator @xmath154 is the binary vector @xmath155    the error correcting properties of a quantum cws code @xmath150 and the classical code @xmath9 are related by the following    [ th2 ] ( after theorem 3 from ref .",
    "@xcite ) consider a cws code @xmath156 .",
    "an error @xmath54 such that @xmath157 , is detectable in @xmath72 if and only if the binary vector @xmath158 is detectable within the code @xmath10 .",
    "an error @xmath54 such that @xmath159 is detectable in @xmath72 if and only if @xmath160 for all @xmath161 .",
    "the case @xmath162 corresponds to pure ( non - degenerate ) errors , while @xmath163 indicates that the error is in the graph stabilizer group @xmath164 ; the corresponding detectability condition is a requirement that the error must be degenerate .",
    "while in general cws codes are non - additive , they include all stabilizer codes as a subclass .",
    "a cws code @xmath165 is additive if @xmath10 is a linear code@xcite .",
    "the stabilizer @xmath83 of an additive cws code in standard form is a subgroup of the graph stabilizer @xmath164 ; it can be obtained from the graph - stabilizer generators by a symplectic gram - schmidt orthogonalization procedure@xcite .",
    "conversely , the representation  ( [ eq : code - basis ] ) of an additive code corresponds to a general cws code ; an lc transformation may be needed to obtain the corresponding standard form , and one can always find a standard form where @xmath10 is linear@xcite . in the following",
    "we will always assume such a representation .",
    "-ring graph corresponding to the @xmath166 $ ] code in example ex .  [ ex:513 ] .",
    "center : `` kite '' graph corresponding to the degenerate code @xmath167 $ ] from example [ ex:613 ] .",
    "right : the graph corresponding to the cyclic @xmath130 $ ] code from example  [ ex:713cws].,title=\"fig : \" ] -ring graph corresponding to the @xmath166 $ ] code in example ex .",
    "[ ex:513 ] .",
    "center : `` kite '' graph corresponding to the degenerate code @xmath167 $ ] from example [ ex:613 ] .",
    "right : the graph corresponding to the cyclic @xmath130 $ ] code from example  [ ex:713cws].,title=\"fig : \" ] -ring graph corresponding to the @xmath166 $ ] code in example ex .",
    "[ ex:513 ] .",
    "center : `` kite '' graph corresponding to the degenerate code @xmath167 $ ] from example [ ex:613 ] .",
    "right : the graph corresponding to the cyclic @xmath130 $ ] code from example  [ ex:713cws].,title=\"fig : \" ]    [ ex:513 ] the smallest single - error - correcting code is the linear cyclic @xmath166 $ ] code@xcite with the generator polynomial @xmath168 which divides @xmath169 .",
    "this code is unique ; its stabilizer generators can be obtained as cyclic permutations of a single operator , @xmath170 , and the logical operators are @xmath171 the corresponding cws code@xcite can be generated from the @xmath172-ring graph in fig .",
    "[ fig : ex613 ] ( left ) , and the binary code has a single generator @xmath173 .",
    "note that both the graph and the binary code preserve the original cyclic symmetry .",
    "[ ex:613 ] there exist only two inequivalent single - correcting codes @xmath167 $ ] ; both are degenerate@xcite .",
    "one of the codes is obtained from the code in example [ ex:513 ] by adding a qubit ; the graph of the corresponding cws code can be chosen as a @xmath172-ring [ fig .",
    "[ fig : ex613 ] left ] and a disconnected vertex @xmath174 ; the binary code @xmath10 is generated by @xmath175 .",
    "the degeneracy group is generated by @xmath176 .",
    "the stabilizer generators for the second code are listed in ref .",
    "this code corresponds to the graph in fig .",
    "[ fig : ex613 ] ( center ) , while the binary code is generated by @xmath177 .",
    "while there are three bits which are not involved with the classical code , they can not be dropped as they are part of the entangled state .",
    "the degeneracy group is generated by @xmath178 ( the equivalence follows from the fact that the first two vertices of @xmath8 share all of their neighbors ) .",
    "[ ex:713cws ] the linear cyclic @xmath130 $ ] css code from the example [ ex:713 ] is lc equivalent to a cws code with the graph in fig .",
    "[ fig : ex613 ] ( right ) .",
    "the corresponding classical code is given by @xmath179 .",
    "note that neither the graph nor the binary code is explicitly symmetric with respect to cyclic permutations of the qubits .",
    "note also that an inequivalent cws cyclic @xmath130 $ ] code exists ; we constructed such a code among others in example  [ ex : k - copies ] , see table  [ tab : quantum - repetition ] .",
    "in this section we give upper bounds on general cws codes in terms of the properties of the corresponding graph @xmath8 and the binary code @xmath10 .",
    "[ lemma : upper - binary ] the distance @xmath2 of the cws code @xmath180 can not exceed that of @xmath181 .    indeed , any `` classical '' error in the form @xmath182 is mapped by eq .",
    "( [ clmapping ] ) to the binary vector @xmath183 .",
    "if @xmath54 is detectable by @xmath72 , @xmath183 should be detectable by @xmath10 .",
    "lemma [ lemma : upper - binary ] concerns with errors which are dealt with by the binary code . on the other hand ,",
    "a cws code is an enlargement of the code formed by the graph state .",
    "the following observation has been made in ref .",
    "@xcite :    [ lemma : upper - pure ] the distance @xmath2 of a nondegenerate cws code @xmath63 is limited by the distance @xmath184 of the graph stabilizer state , @xmath185 .",
    "it follows from the fact that any member of the graph stabilizer is either a degenerate error , or it is a non - detectable error .",
    "note , however , as illustrated by the example [ ex:613 ] , in general , the distance of a cws code can actually be bigger than that of the graph stabilizer state .    for a binary code @xmath10 , we will say that the @xmath186-th bit is _ involved _ in the code if there are vectors in the code for which the value of @xmath186-th bit differ , @xmath187 . alternatively ,",
    "if the all - zero vector @xmath188 is in the code ( which can always be arranged ) , the condition is that there is a vector @xmath189 where @xmath186-th bit is non - zero , @xmath190 .",
    "[ lemma : j - th ] for a cws code @xmath156 with @xmath191 , let us assume that @xmath186-th bit is involved in the code @xmath192 .",
    "then the graph - stabilizer generator @xmath193 violates the error detection condition in theorem [ th2 ] .",
    "since the generator @xmath193 is in the graph stabilizer , @xmath194 , one has to check the degenerate condition in theorem [ th2 ] .",
    "the commutativity of @xmath193 with a given @xmath195 is determined by the @xmath186-th bit of @xmath23 ; conditions of the lemma ensure that only one of the two vectors commute with @xmath193 .",
    "note that this means that the code distance can not exceed that of any @xmath193 corresponding to bits involved in the binary code .",
    "since at least @xmath2 bits must be involved in the binary code , lemma [ lemma : j - th ] guarantees the following bound    [ th : max - weight ] the distance @xmath2 of a cws code @xmath156 can not exceed the @xmath2-th largest weight of @xmath196 , minimized over all graphs that are locally - equivalent to @xmath8 .",
    "we will also be using the following    for a graph @xmath8 with all vertices of the same degree @xmath197 , the distance of a cws code @xmath156 can not exceed @xmath198 .",
    "in particular , for any ring graph @xmath199 , which gives @xmath200 , for any double - ring graph@xcite @xmath201 , and for a large enough square lattice wrapped into a torus , @xmath202 .    obviously , to maximize the distance of a cws code , one may want to maximize the distance of the binary code @xmath10 .",
    "to this end , it is a good idea to make sure that every bit is involved in @xmath10 . for such codes",
    ", we have    [ th : all - bit ] the distance of a cws code @xmath180 where the binary code @xmath10 involves all bits can not exceed the _ minimum _ weight of @xmath196 , minimized over all graphs that are locally - equivalent to @xmath8 .",
    "the stabilizer of an additive cws code @xmath156 is a subgroup of the abelian graph stabilizer @xmath164 , and its generators @xmath203 can be expressed as products of graph stabilizer generators @xmath140 @xcite .",
    "explicitly , @xmath204 where @xmath205 is the corresponding matrix of binary coefficients . with the help of eq .",
    "( [ eq : graph - generators ] ) , we obtain the following decomposition for the generator matrix @xmath24 of the associated additive @xmath15 code @xmath29 , @xmath206 where @xmath141 is the symmetric graph adjacency matrix with zeros along the diagonal , and @xmath207 is the @xmath208 identity matrix . the relation between the binary code @xmath10 and the quaternary code @xmath29",
    "is explicitly given by the following    the additive @xmath15 code @xmath29 with the generator matrix  ( [ gf4 ] ) is the map @xmath209 of the stabilizer @xmath83 of the additive cws code @xmath210 generated by the graph with the adjacency matrix @xmath146 and the linear binary code @xmath10 if and only if @xmath211 is the parity check matrix of @xmath10 .",
    "use the basis vectors in the form ( [ eq : cws - basis ] ) and the commuting operators ( [ eq : stabilizer - operator - cws ] ) corresponding to the rows of the matrix @xmath24 [ eq .  ( [ gf4 ] ) ] .",
    "direct calculation gives @xmath212 were summation over repeated indices is assumed .",
    "the statement of the lemma ( both ways ) follows from the definition of the parity check matrix .",
    "we can now easily relate the error detection conditions for additive codes in theorems [ th1 ] ( codes over @xmath15 ) and [ th2 ] ( cws codes ) .",
    "the code @xmath29 in theorem [ th1 ] is given by additive combinations of the @xmath79 rows of the generator matrix  ( [ gf4 ] ) .",
    "evaluating the outer trace product of the generator matrix  ( [ gf4 ] ) with a vector @xmath213 , we obtain the condition for the vector to be in @xmath214 @xmath215 this uniform linear system of @xmath79 equations with @xmath216 variables has @xmath217 linearly - independent solutions .",
    "the corresponding basis can be chosen as a set of @xmath6 linearly - independent `` classical '' vectors @xmath218 , where @xmath219 and the corresponding @xmath220 , @xmath221 , plus @xmath0 linearly - independent vectors such that @xmath222 , @xmath223 .",
    "some linear combinations of the latter vectors are actually in @xmath29 .",
    "these can be found using the identity @xmath224 : the corresponding @xmath225 have to satisfy @xmath226 , which precisely corresponds to the degenerate case , @xmath227 , in theorem [ th2 ] .",
    "general theory of cws codes guarantees that generator matrix of a quantum code equivalent to any additive self - orthogonal code over @xmath15 can be decomposed in the form ( [ gf4 ] ) .",
    "conversely , any matrix in the form ( [ gf4 ] ) with binary matrices @xmath211 and @xmath146 generates a self - orthogonal code over @xmath15 as long as the matrix @xmath146 is symmetric .",
    "we use it in the following section to prove the lower gilbert - varshamov ( gv ) bound for the parameters of an additive cws code which can be obtained from a given graph .",
    "the gv bound is a counting argument which non - constructively proves the existence of codes with parameters exceeding certain threshold .",
    "the argument is based on the fact that the set of possible codes ( vector spaces ) vastly outnumbers the set of vectors . then , if we count all codes of a given length @xmath0 , and then subtract the number of codes that contain any vector of weight @xmath228 or less , the remaining codes ( if any ) will all have distance @xmath2 or more .",
    "this `` greedy '' argument ignores any possible double counting of codes that contain several small - weight vectors .",
    "note that the gv bound necessarily gives asymptotically _ good _ codes with relative distance @xmath4 and code rate @xmath229 bounded away from @xmath230 as @xmath231 .    for the entire class of pure stabilizer codes ,",
    "the asymptotic gv bound@xcite states that there exist codes of length @xmath231 such that @xmath232 where @xmath233 is the binary entropy function .",
    "we are going to prove that the same bound also holds for pure cws codes corresponding to a given graph @xmath8 , as long as @xmath234 [ see lemma [ lemma : upper - pure ] ] .",
    "we are using eq .",
    "( [ gf4 ] ) to parameterize the stabilizer matrices ; the resulting @xmath11 codes are automatically self - orthogonal .",
    "let @xmath235 be the number of cws codes that have length @xmath0 , dimension at least @xmath6 , and correspond to a given graph @xmath236 .",
    "let also @xmath237 be the number of such codes which contain a given vector @xmath213 , @xmath238 , in @xmath239 [ see eq .",
    "( [ gf4 ] ) ] . the corresponding condition  ( [ eq : c - perp ] )",
    "is given by the trace inner product ( [ orthogonality ] ) .",
    "for @xmath240 , the binary vector @xmath241 is always non - zero ( which also guarantees that @xmath242 ) . as a result , @xmath237 and",
    "@xmath235 represent the corresponding numbers for the _ binary _ codes .",
    "then the standard counting arguments @xcite show that @xmath243 here we use the fact that each of @xmath244 vectors @xmath23 belongs to the same number @xmath237 of binary codes ; also each of @xmath235 binary codes contains @xmath245 nonzero vectors @xmath23 .",
    "the number of quaternary vectors of weight @xmath246 is @xmath247 .",
    "thus , for any graph @xmath236 , there exists a distance-@xmath2 cws code as long as @xmath248 now we see that there exist @xmath76 $ ] cws codes for the graph @xmath236 with distance @xmath249 where @xmath250 is the distance of the graph state @xmath251 and @xmath252    note that thus obtained quantum codes are always pure , since the summation in the l.h.s .  can only be extended up to @xmath253 . apart from this latter condition , eq .",
    "( [ eq : sump ] ) is identical to the quantum gilbert - varshamov bound@xcite for pure stabilizer codes , and takes the asymptotic form  ( [ eq : gv1 ] ) as @xmath254 .",
    "the exact gv bound @xmath255 for pure stabilizer codes ( without the restriction on the distance ) is recovered if we go over different graphs .",
    "indeed , the gv bound  ( [ eq : gv1 ] ) also applies for the special case of @xmath256 , corresponding to stabilizer states or self - dual codes@xcite .",
    "the gv bound on the relative distance is monotonous in @xmath6 and reaches its maximum at @xmath257 then for given @xmath0 and @xmath258 one can always find a suitable graph such that the gv bound @xmath259 becomes more restrictive than the condition @xmath260 .    in practice ,",
    "graphs with large distance @xmath251 are complicated ( have too many edges ) .",
    "it is much easier to come up with graph families corresponding to a fixed graph - state distance @xmath251 . for @xmath231 ,",
    "the corresponding code families approach the maximum rate @xmath261 and have asymptotic redundancy @xmath262 defined by eq .",
    "( [ eq : sump ] ) : @xmath263 it is readily verified that the r.h.s of estimate ( [ eq : gv - redundancy ] ) has the order of @xmath264 if @xmath2=const and @xmath231 .    ]",
    "circles represent the qubits .",
    "all @xmath265 translations of the empty - circle pattern form the classical codewords @xmath266 .",
    "the generators of the stabilizer are formed as the products of the graph - state stabilizer generators along the directions parallel to the dashed lines . ]",
    "[ ex : square - planar ] graphs in the form of sufficiently large finite square lattice fragments [ fig .",
    "[ fig3 ] ] have maximum distance @xmath267 , but this requires that the bits in the corners and around the perimeter be not involved in the classical code .",
    "somewhat better redundancy can be achieved by avoiding only the bits in the corners , which gives @xmath268 .",
    "consider the family of classical codes where the codewords are obtained by taking all translations of the pattern shown in fig .",
    "[ fig3 ] with open symbols .",
    "the weight of any linear combination of such codewords is at least 4 .",
    "the lattice shown corresponds to the code @xmath269 $ ] , while general @xmath270 lattice gives the code with the parameters @xmath271 $ ] .",
    "asymptotically , the redundancy for @xmath272 is @xmath273 , @xmath274 , which is bigger than the logarithm in eq .",
    "( [ eq : gv - redundancy ] ) .",
    "however , the fraction of auxiliary qubits vanishes as @xmath275 for large @xmath0 .",
    "the code distance can be increased with higher - dimensional generalizations , e.g. , we can generalize this construction to @xmath276-dimensional hypercubic lattice with @xmath277 nearest neighbors so that the distance is @xmath278 in full analogy with the two dimensional case .",
    "the corresponding redundancy will scale with the area of the boundary .    while the code in fig .",
    "[ fig3 ] serves as a good illustration of the concept of lattice codes with simple stabilizer structure , it is still far from optimal . on the @xmath279 square lattice",
    "we have constructed numerically a code @xmath280 $ ] with weight-@xmath281 codewords which can be mapped into each other by translations and rotations .",
    "this design is only one logical qubit short of the best - known generic code @xmath282 $ ] .",
    "consider graphs in the form of @xmath283 square lattices wrapped into tori due to periodic boundary conditions .",
    "for @xmath284 , these graphs have the distance @xmath285 .",
    "gv bound  ( [ eq : greedy - full ] ) shows that the cws codes with the following parameters can be obtained for these graphs : @xmath286 $ ] , @xmath287 $ ] , @xmath288 $ ] , @xmath289 $ ] , @xmath290 $ ] ,  .",
    "consider graphs in the form of @xmath283 triangular lattices wrapped into tori due to periodic boundary conditions .",
    "these graphs have the distance @xmath291 .",
    "gv bound  ( [ eq : greedy - full ] ) shows that the cws codes with the following parameters can be obtained for these graphs : @xmath292 $ ] , @xmath293 $ ] , @xmath294 $ ] , @xmath295 $ ] ,  .",
    "example [ ex:713cws ] shows that a cyclic additive code does not necessarily preserve its symmetry when converted to cws standard form . by a _",
    "cyclic _ additive cws code we just mean a code which is cyclic in standard form , with a circulant graph .",
    "for such a code , eq .",
    "( [ gf4 ] ) can be rewritten as the generator polynomial , @xmath296,\\ ] ] where the polynomials @xmath297 and @xmath298 are binary , @xmath297 is the parity - check polynomial of a binary cyclic code ( and therefore must divide @xmath299 ) , while @xmath298 corresponds to a symmetric circulant matrix , @xmath300 any such _ symmetric _ polynomial @xmath298 leads to a valid self - orthogonal additive code .",
    "the dimension of the quantum code corresponding to the generator polynomial ( [ eq : gf4-polynomial ] ) is @xmath301 .",
    "previously , the additive cyclic qeccs were introduced in theorem 14 of ref .",
    "@xcite , stating that any such code has two generators .",
    "single_-generator additive code described by eq .",
    "( [ eq : gf4-polynomial ] ) represents a new setting , in which the second generator is equal to zero .",
    "this condition gives a self - orthogonal additive code @xmath29 [ see sec .  [",
    "sec : intro - stab - codes ] ] with no binary codewords ( any @xmath302 , @xmath303 , has @xmath304 ) .    a somewhat wider class of _ single - generator _",
    "cyclic additive codes can be also defined via eq .",
    "( [ eq : gf4-polynomial ] ) , without requiring the symmetry ( [ eq : symmetric - polynomial ] ) of @xmath298 . then two codes @xmath72 and @xmath305 that have a generator polynomial in the form ( [ eq : gf4-polynomial ] ) with the same @xmath306",
    "are equivalent if and only if @xmath307 where @xmath308 is the generator polynomial of the binary code@xcite .",
    "such a polynomial  ( [ eq : gf4-polynomial ] ) generates a self - orthogonal @xmath15 code if and only if @xcite @xmath309 this guarantees self - orthogonality for any @xmath298 as long as @xmath310 an alternative formulation of this sufficient condition is that the corresponding generator polynomial @xmath311 must contain no more than one root from each pair @xmath312 of mutually conjugate @xmath0th roots of unity , @xmath313 .",
    "in particular , a self - reciprocal ( _ palindromic _ ) polynomial ) which correspond to symmetric circulant matrices .",
    "palindromic polynomials have reflection symmetry with respect to their `` centers '' , while eq .",
    "( [ eq : symmetric - polynomial ] ) corresponds to a symmetry with respect to the free term , with an implicit circulant symmetry .",
    "] , @xmath314 always contains roots in pairs @xmath315 and @xmath316 . for such polynomials eq .",
    "( [ eq : cyclic - orthogonality - guarantee ] ) always fails ( including the special case of @xmath317 which has only one root @xmath318 ) .",
    "the algebraic condition  ( [ eq : linear - cyclic - condition ] ) on check polynomials for linear cyclic codes makes them simpler to implement but also dramatically restricts their number .",
    "in particular , the general counting approach to finding cws codes [ see sec .  [ sec : gv ] ] , where one first chooses a graph , and then searches for a suitable binary code can hardly be applied to cyclic cws codes . even for classical binary cyclic codes , there are no counting arguments known to date that yield asymptotically good codes , let alone the stronger gv bound ( see research problem 9.2 in ref .  ) . also",
    ", long bch codes  one of the major subclasses of cyclic codes  are asymptotically bad and have a slowly declining relative distance @xmath319 for any code rate @xmath146 . on the other hand",
    ", binary cyclic codes often achieve the best known parameters ( exceeding the gv bound ) on short lengths @xmath320 .",
    "thus , using simple cyclic codes in quantum design can yield both good parameters and feasible implementation on the short blocks .    to better evaluate code distance of single - generator quantum cyclic codes ( [ eq : gf4-polynomial ] ) , we will modify our counting approach of sec .  [",
    "sec : gv ] and begin with a binary cyclic code .",
    "namely , we will fix some parity - check polynomial @xmath297 with a desired degree @xmath6 among the binary factors of @xmath299 .",
    "then we will search for a polynomial @xmath298 , either corresponding to a cyclic graph [ see eq .",
    "( [ eq : symmetric - polynomial ] ) ] , or satisfying the more general orthogonality condition ( [ eq : cyclic - orthogonality ] ) .",
    "however , this transition will show that the parameters of quantum codes generated this way strongly depend on the chosen binary code .",
    "we will concentrate exclusively on the binary codes with irreducible generator polynomial @xmath311 .",
    "we will show that the distance of such a cyclic cws code is limited from below by the gv bound ( or the variants thereof ) and from above by the distance of the classical cyclic code .",
    "since gv bound always produces asymptotically good codes , the parameters of our quantum codes will be mostly limited ( at least , for long blocks ) by their binary counterparts .",
    "we begin with analyzing the condition  ( [ orthogonality ] ) for a cyclic cws code .",
    "for a vector @xmath321 to be in @xmath322 this condition can be rewritten in terms of the corresponding polynomials , @xmath323=0\\:\\mod x^{n}-1\\:,\\ ] ] where the coefficients of the ( reversed for notational convenience ) polynomial @xmath324 are given by the components of the vector @xmath321 .",
    "since binary @xmath297 divides @xmath299 , we can rewrite this in terms of the corresponding generator polynomial @xmath308 for the binary code @xmath10 , @xmath325 now , if @xmath326 is mutually prime with @xmath311 , eq .",
    "( [ eq : poly - orthogonality - two ] ) can be just solved for @xmath298 . in this case",
    "the answer is unique @xmath327 $ ] .",
    "on the other hand , multiple solutions for @xmath298 are possible when @xmath328\\neq1 $ ] . in this work ,",
    "we avoid the complications caused in the latter case with multiple factors , distance estimates of quantum codes lead to the estimates of weight spectra of classical cyclic codes which contain the code generated by @xmath311 , which is beyond the scope of this work . ] and only consider irreducible polynomials @xmath311 .",
    "overall , for any irreducible @xmath311 and any @xmath329 with @xmath330 and @xmath331 , eq .",
    "( [ eq : poly - orthogonality - two ] ) has a unique solution for @xmath298 such that @xmath332 . respectively",
    ", there is no more than one additive quantum code such that @xmath333 .",
    "generally , only some of thus obtained @xmath298 correspond to self - orthogonal codes , see eq .",
    "( [ eq : cyclic - orthogonality ] ) .",
    "below we complete the greedy argument by counting the polynomials @xmath298 corresponding to self - orthogonal codes , eq .  ( [ eq : cyclic - orthogonality ] ) .",
    "we consider separately the case when the irreducible polynomial @xmath311 is palindromic [ see eq .",
    "( [ eq : palindromic ] ) ] in lemma  [ lemma : gv - cyclic ] below , and when it is not in    [ lemma : cyclic - one ] consider a cyclic binary code @xmath334 $ ] with the generator polynomial @xmath311 which is both irreducible and non - palindromic , @xmath335 .",
    "then there exists a single - generator additive cyclic code @xmath76 $ ] with distance @xmath336 restricted by both the distance @xmath337 of the binary code and the following variant of gv bound @xmath338    the non - palindromic generator polynomial @xmath311 is one of the factors in @xmath299 which also contains its reciprocal , @xmath339 .",
    "this implies that the corresponding parity - check polynomial @xmath297 satisfies eq .",
    "( [ eq : cyclic - orthogonality ] ) .",
    "further , since @xmath311 is irreducible , the solution @xmath298 of eq .",
    "( [ eq : poly - orthogonality - two ] ) is unique assuming @xmath340 and @xmath341 , which gives the exponential term in the r.h.s .  of eq .",
    "( [ eq : gv - cyclic - one ] ) .",
    "( [ eq : gv - cyclic - one ] ) improves on the standard gv inequality  ( [ eq : sump ] ) by discarding a few sets of vectors .",
    "the first set are vectors with @xmath342 , which implies @xmath343 .",
    "the second set are vectors with @xmath344 , which all give @xmath345 .",
    "the third set are non - zero vectors with @xmath346 , which can never be in @xmath214 corresponding to the generator  ( [ eq : gf4-polynomial ] ) .",
    "finally , note that any error vector of weight @xmath246 produces at least @xmath347 different cyclic shifts .",
    "all of these cyclic shifts give the same polynomial @xmath298 and can be discounted .",
    "the condition @xmath348 comes from lemma [ lemma : upper - binary ] .",
    "the lhs of bound ( [ eq : gv - cyclic - one ] ) limits the number of cyclic classes for @xmath349-ary vectors @xmath329 of weight @xmath350 most of these vectors have the maximum period @xmath351 therefore , it can be proven that the term @xmath352 in ( [ eq : gv - cyclic - one ] ) can be replaced with the smaller term that rapidly tends to 1/n for large n. in turn , bound ( [ eq : gv - cyclic - one ] ) adds about @xmath353 information qubits to bound ( [ eq : sump ] ) but tends to the standard quantum gv bound  ( [ eq : gv1 ] ) as @xmath254 .    in the following example , this bound coincides with inequality @xmath354 , which uniquely sets code distance @xmath2 .",
    "the family of the binary codes with the parameters @xmath355 $ ] , @xmath356 , constructed in ref .  , has irreducible non - palindromic generator polynomials as required in lemma  [ lemma : cyclic - one ] .",
    "for @xmath357 the sum in eq .",
    "( [ eq : gv - cyclic - one ] ) has just one term at @xmath358 ; for @xmath0 odd @xmath359",
    ". explicit calculation confirms that the parameters of these codes satisfy inequality ( [ eq : gv - cyclic - one ] ) , which proves the existence of single - generator cyclic quantum codes with exactly the same parameters , @xmath360 $ ] , but not necessarily cyclic cws codes .",
    "the smallest of these codes , @xmath361 $ ] , corresponds to a polynomial @xmath362 ( unique up to a reversal ) and can be obtained from an order-@xmath363 circulant graph corresponding to @xmath364 .",
    "this particular combination of parameters gives the best existing code@xcite .",
    "according to the bch bound @xcite , a cyclic code has distance @xmath365 ( @xmath198 is the `` _ designed _ '' distance ) if the corresponding generator polynomial @xmath311 has @xmath197 consecutive roots , e.g. , @xmath366 , where @xmath315 is the primitive @xmath367th root of unity .",
    "a polynomial @xmath368 which has root @xmath315 , necessarily has @xmath246 distinct roots @xmath369 for all @xmath370 if @xmath246 is the smallest number such that @xmath371 .",
    "we say that the code has zeros @xmath372 , where exponents @xmath145 form the set @xmath373 the code generated by @xmath368 has designed distance @xmath172 if @xmath374 or , equivalently , if @xmath375 for some @xmath246 .",
    "the polynomial @xmath368 is non - palindromic if @xmath376 .",
    "we can further obtain codes with irreducible non - palindromic generators and designed distances @xmath281 , @xmath377 , etc . , by imposing additional conditions , e.g. , @xmath378 , @xmath379 , etc .",
    "the values of @xmath380 for which this is possible form an infinite set , @xmath381 , where the subscripts indicate the designed distances .",
    "in fact , the first three codes represent the well known quadratic - residue codes with the higher distances ( exceeding the bch bound ) equal to 7 , 11 , and 11 , respectively .",
    "gv bound proves the existence of additive quantum cws codes with the parameters @xmath382 $ ] , @xmath383 $ ] , @xmath384 $ ] , @xmath385 $ ] , @xmath386 $ ] , @xmath387 $ ] , etc .",
    "the first three codes have the parameters as good as any known codes with such @xmath0 and @xmath6 .",
    "now let us consider the case of a palindromic polynomial @xmath311 .",
    "first , we prove    [ lemma : symmetric - q - cws ] consider a binary code @xmath10 generated by a palindromic polynomial @xmath311 such that @xmath388 .",
    "then any quantum code  ( [ eq : gf4-polynomial ] ) which satisfies self - orthogonality condition  ( [ eq : cyclic - orthogonality ] ) is equivalent to a cyclic cws code with a symmetric polynomial @xmath298 , see eq .",
    "( [ eq : symmetric - polynomial ] ) .",
    "the corresponding check polynomial @xmath297 is symmetric , thus the condition  ( [ eq : cyclic - orthogonality ] ) can be rewritten as @xmath389 the condition @xmath388 guarantees that the palindromic polynomial @xmath311 has odd weight and even degree @xmath390 , in which case the `` central '' monomial @xmath391 has non - zero coefficient @xmath392 .",
    "given the block length @xmath0 , let us choose an equivalent code [ see eq .",
    "( [ eq : circulant - r - equivalence ] ) ] with @xmath298 such that the coefficients @xmath393 the coefficients of the polynomial in the l.h.s .  of eq .",
    "( [ eq : cyclic - orthogonality - symmetric ] ) satisfy the same condition , except for the term @xmath394 , which has coefficient @xmath395 .",
    "the coefficients are arranged in such a way that the l.h.s .  of eq .",
    "( [ eq : cyclic - orthogonality - symmetric ] ) can only equal zero or @xmath396 .",
    "however , the latter possibility can be excluded by comparing the corresponding coefficients of the free term @xmath397 .",
    "the only remaining case corresponds to a symmetric @xmath298 .",
    "it is now clear that for a palindromic irreducible generator polynomial @xmath398 , one should reduce the count in the r.h.s.of eq .",
    "( [ eq : gv - cyclic - one ] ) by replacing @xmath126 with @xmath399 , the number of symmetric polynomials that satisfy eq .",
    "( [ eq : zero - set ] ) .",
    "this gives the following version of gv bound , @xmath400 while the resulting estimate is much weaker than the gv bound  ( [ eq : gv - cyclic - one ] ) , it still gives asymptotically good codes .",
    "a better ( especially , for small @xmath2 ) bound is given in the following    consider a cyclic binary code @xmath334 $ ] with @xmath401 and the generator polynomial @xmath311 which is both palindromic and irreducible . then there exists a cyclic cws code @xmath76 $ ] with the distance @xmath402 , where @xmath403 : @xmath404 [ lemma : gv - cyclic ]    the restriction on the distance guarantees that @xmath398 , and therefore @xmath311 satisfies the conditions of lemma  [ lemma : symmetric - q - cws ] ; in particular , @xmath79 is even .",
    "the inequality just corresponds to symmetric polynomials @xmath298 and the errors that are also symmetric , @xmath405 .",
    "the statement of the lemma follows from the fact that for any general error @xmath406 , there is a symmetric error @xmath407 whose weight is even and is limited by @xmath408 .    among classical codes ,",
    "the largest distance is obtained for the repetition codes , with the parameters @xmath409 $ ] .",
    "the parity - check polynomial is @xmath410 ; the generator polynomial @xmath411 is irreducible and palindromic for @xmath412 , and for all @xmath413 that satisfy the condition @xmath414 , where @xmath415 is the multiplicative order of @xmath16 modulo @xmath416 .",
    "this includes the following @xmath417 : @xmath418 lemma  [ lemma : gv - cyclic ] shows that for @xmath0 from the set  ( [ eq : prime - set ] ) , additive cyclic cws codes with parameters @xmath419 $ ] exist , where @xmath420 is obtained from eq .",
    "( [ eq : gv - cyclic - two ] ) with @xmath421 .",
    "asymptotically , at large @xmath0 , this corresponds to cyclic codes with the relative distance given by half of that given by eq .",
    "( [ eq : gv - zero - rate ] ) .",
    "( cyclic analogs of the toric code ) in the setting of the previous example , cyclic cws codes @xmath166 $ ] , @xmath422 $ ] , @xmath423 $ ] , @xmath424 $ ] with @xmath425 were obtained numerically .",
    "the corresponding graph - state generators are @xmath426 for @xmath427 , @xmath428 for @xmath429 , etc .",
    "we obtain a family of cyclic codes with the weight-@xmath349 generators , @xmath430 , @xmath431 , etc .",
    "codes with generators @xmath432 , @xmath433 , @xmath434 , and @xmath435 have the same parameters ( the corresponding graphs are somewhat more complicated ) .",
    "the latter family can be generalized to codes with @xmath436 , @xmath421 , @xmath437 , @xmath438 ; the corresponding stabilizer generators @xmath439 having @xmath440 identity operators separating @xmath441 and @xmath442 .",
    "these cyclic codes are related to generalized toric codes@xcite ; the square - lattice qubit layout preserving the circulant symmetry is illustrated in fig .",
    "[ fig : skewed ] for @xmath443 .",
    "[ ex : toric - cws ]    ] $ ] with generators @xmath444 , and a generalized toric code on square lattice .",
    "only qubits within the dashed square are participating in the code ; periodic boundary conditions are assumed .",
    "the vertical dashed line indicates a topologically nontrivial chain of errors which limits the distance of the code : @xmath445 is equivalent to @xmath446 .",
    "right : same for the code @xmath422 $ ] with the generator @xmath447.,title=\"fig : \" ] ] $ ] with generators @xmath444 , and a generalized toric code on square lattice . only qubits within the dashed square are participating in the code ; periodic boundary conditions are assumed .",
    "the vertical dashed line indicates a topologically nontrivial chain of errors which limits the distance of the code : @xmath445 is equivalent to @xmath446 .",
    "right : same for the code @xmath422 $ ] with the generator @xmath447.,title=\"fig : \" ]    ( cws codes from @xmath6 copies of the repetition code ) let us take the binary code @xmath10 to be formed by @xmath6 copies of the repetition code with the distance @xmath448 . then the block size is @xmath449 , and the check polynomial is @xmath450 .",
    "the generator polynomial @xmath451 is always palindromic ; it is also irreducible if @xmath416 belongs to the set ( [ eq : prime - set ] ) , while @xmath452 , @xmath453 . for sufficiently large @xmath0",
    ", lemma  [ lemma : gv - cyclic ] gives asymptotically good codes with @xmath454 .",
    "since these parameters can not exceed those of the binary code @xmath10 which correspond to @xmath455 ( thus @xmath456 ) , for these values of @xmath416 and @xmath457 , there exist cyclic cws codes with the parameters of the corresponding binary code , @xmath458 $ ] .",
    "this prediction is readily verified empirically , see table  [ tab : quantum - repetition ] .",
    "note that , as in the example [ ex : toric - cws ] , many of these codes have stabilizer generators with small weight .",
    "[ ex : k - copies ]    .families of the cyclic codes obtained numerically from @xmath6 copies of the classical repetition code , @xmath459 , corresponding to @xmath460 .",
    "the expected distance saturation , @xmath461 , is reached already at @xmath462 , even for @xmath6 and @xmath416 different from those in example  [ ex : k - copies ] .",
    "the operator strings in the last column are representative graph - state generators ( the remaining generators are obtained by cyclic shifts ) . [",
    "cols=\"^,^,^,^,^,^,^\",options=\"header \" , ]",
    "in this paper , we analyze how the general cws framework can facilitate the search of the additive quantum codes with reasonably good parameters .",
    "unlike complete optimization of cws codes@xcite , which involves all non - isomorphic lc - inequivalent order-@xmath0 graphs and all binary codes of length @xmath0 , here one can independently pick a suitable graph @xmath8 , and then search for a linear binary code @xmath10 that can correct the error patterns induced by @xmath8 , see eq .",
    "( [ orthogonality ] ) .",
    "the choice of the graph is discussed in sec .  [",
    "sec : upper - bound ] . in the simplest case of pure codes",
    ", one has to pick a graph with a sufficiently large graph - state distance @xmath184 . assuming that a regular graph is being sought in this design , we consider graphs with minimal vertex degrees @xmath463 or more .",
    "after the graph is chosen , the second step involves the search of an appropriate binary code . here in sec .",
    "[ sec : gv ] we prove the existence of the binary codes that give good quantum cws codes .",
    "the corresponding lower bound on the distance is given by the quantum gilbert - varshamov bound  ( [ eq : sump ] ) .",
    "note that while this bound is proved for a given graph , it is the same bound that holds for a generic stabilizer code .",
    "our results show that by restricting the graph @xmath8 of a cws code to regular lattices , one can lower the complexity of the code search and still obtain codes with relatively good parameters . on the other hand , the graph structure could be mapped directly to a physical qubit layout .",
    "therefore , such codes can simplify both the hardware design and the error - correcting procedures , which will easily admit the property of translational invariance .",
    "an unexpected byproduct of this work is the discovery of a previously unexplored family of single - generator quantum cyclic codes ( sec .",
    "[ sec : one - gen ] ) .",
    "these codes are relatively easy to construct , and they are plentiful . we construct ( or prove the existence ) of several simple families of such codes that have unbounded distances .",
    "these include cyclic cws codes with weight-@xmath349 stabilizer generators , which turned out to be toric codes in disguise ( example [ ex : toric - cws ] ) , as well as a code family with the parameters of generalized repetition codes , @xmath464 $ ] ( example [ ex : k - copies ] ) .",
    "the main advantage of these families is a simple structure of their stabilizers .",
    "we are grateful to m.  grassl for helpful comments .",
    "this work was supported in part by the army research office through the grant no .",
    "w911nf-11 - 1 - 0027 ( lp & i d ) , and by nsf through the grant no .",
    "1018935 ( lp ) .",
    "57ifxundefined [ 1 ] ifx#1 ifnum [ 1 ] # 1firstoftwo secondoftwo ifx [ 1 ] # 1firstoftwo secondoftwo `` `` # 1''''@noop [ 0]secondoftwosanitize@url [ 0 ]",
    " + 12$12  & 12#1212_12%12@startlink[1]@endlink[0]@bib@innerbibempty http://link.aps.org/abstract/pra/v52/pr2493 [ * * ,   ( ) ] http://dx.doi.org/10.1103/physreva.55.900 [ * * ,   ( ) ] http://dx.doi.org/10.1103/physreva.54.3824 [ * * ,   ( ) ] http://www.sciencemag.org/cgi/content/abstract/279/5349/342 [ * * ,   ( ) ] http://dx.doi.org/10.1103/physreva.66.032304 [ * * , ( ) ] http://dx.doi.org/10.1063/1.1499754 [ * * ,   ( ) ] http://dx.doi.org/10.1103/physreva.68.042322 [ * * ,   ( ) ] http://link.aps.org/abstract/pra/v69/e042314 [ * * ,   ( ) ] http://arxiv.org/abs/quant-ph/0402196 [ * * ,   ( ) ] ,   http://arxiv.org/abs/quant-ph/0506126 [ `` , ''  ] ( ) ,   http://dx.doi.org/10.1038/nature03350 [ * * , ( ) ] http://dx.doi.org/10.1103/physreva.71.042322 [ * * ,   ( ) ] http://link.aps.org/abstract/prl/v98/e190504 [ * * ,   ( ) ] http://link.aps.org/abstract/prl/v85/p5452 [ * * ,   ( ) ] http://dx.doi.org/10.1038/414883a [ * * ,   ( ) ] link:\\doibase    10.1038/nature01336 [ * * ,   ( ) ] http://dx.doi.org/10.1038/nature03074 [ * * ,   ( ) ] link:\\doibase 10.1038/nphys1032 [ ( ) ,  10.1038/nphys1032 ] http://dx.doi.org/10.1007/s11128-009-0105-1 [ * * ,   ( ) ] link:\\doibase 10.1038/nature09071 [ * * ,   ( ) ] _",
    "_ ,  http://arxiv.org/abs/quant-ph/9705052[ph.d .",
    "thesis ] , ( ) http://dx.doi.org/10.1109/18.681315 [ * * , ( ) ] @noop `` , ''   ( ) ,   http://link.aps.org/abstract/prl/v99/e130505 [ * * , ( ) ] http://dx.doi.org/10.1109/tit.2008.2008136 [ * * , ( ) ] http://dx.doi.org/10.1063/1.3086833 [ * * ,   ( ) ] http://link.aps.org/abstract/pra/v78/e062315 [ * * , ( ) ] http://link.aps.org/abstract/prl/v101/e090501 [ * * , ( ) ] http://arxiv.org/abs/0709.1780 [ `` , ''  ] ( ) ,   in  http://dx.doi.org/10.1109/isit.2008.4594996[__ ]  ( ,  ) pp .   in",
    "http://dx.doi.org/10.1109/itw.2008.4578694[__ ] ( ,  )  pp",
    ". http://link.aps.org/abstract/pra/v79/e050306 [ * * , ( ) ] http://dx.doi.org/10.1103/physrevlett.104.190501 [ * * , ( ) ]",
    "link:\\doibase    10.1103/physreva.81.052337 [ * * ,   ( ) ] http://arxiv.org/abs/quant-ph/9707021 [ * * ,   ( ) ] http://link.aps.org/abstract/pra/v78/e042303 [ * * , ( ) ] @noop _ _  ( , ,  ) http://dx.doi.org/10.1103/physreva.79.062322 [ * * ,   ( ) ] link:\\doibase 10.1103/physreva.54.1098 [ * * , ( ) ] http://dx.doi.org/10.1103/physreva.54.4741 [ * * ,   ( ) ] http://arxiv.org/abs/quant-ph/9703016 [ `` , ''  ] ( ) ,   in  @noop _ _  ( ,  )  p.  ,   @noop * * , ( ) ,   http://dx.doi.org/10.1103/physreva.69.022316 [ * * ,   ( ) ] in  http://arxiv.org/abs/quant-ph/0602096[__ ] , vol .",
    "( ,  ,  )  pp .",
    "http://dx.doi.org/10.1016/0012-365x(93)90357-y [ * * ,   ( ) ] http://dx.doi.org/10.1103/physrevlett.78.405 [ * * , ( ) ]",
    "link:\\doibase 10.1103/physrevlett.77.198 [ * * ,   ( ) ] link:\\doibase 10.1109/tit.2004.838088 [ * * ,   ( ) ] @noop _ _  ( , ,  ) in  http://www2.research.att.com/~njas/doc/self.pdf[__ ] ,  vol .",
    ",  ( ,  ,  ) pp .   @noop",
    "* * ,   ( ) http://arxiv.org/abs/quant-ph/9811052 [ `` , ''  ] http://arxiv.org/abs/quant-ph/9810055 [ `` , ''  ] link:\\doibase 10.1103/physreva.76.012305 [ * * ,   ( ) ]"
  ],
  "abstract_text": [
    "<S> we consider design of the quantum stabilizer codes via a two - step , low - complexity approach based on the framework of codeword - stabilized ( cws ) codes . in this framework </S>",
    "<S> , each quantum cws code can be specified by a graph and a binary code . for codes that can be obtained from a given graph </S>",
    "<S> , we give several upper bounds on the distance of a generic ( additive or non - additive ) cws code , and the lower gilbert - varshamov bound for the existence of additive cws codes . </S>",
    "<S> we also consider additive cyclic cws codes and show that these codes correspond to a previously unexplored class of single - generator cyclic stabilizer codes . </S>",
    "<S> we present several families of simple stabilizer codes with relatively good parameters . </S>"
  ]
}
{
  "article_text": [
    "algebraic multigrid ( amg ) method was introduced first in @xcite , where the main idea is to design a similar multigrid method for matrices . however , since there is no geometric background , the convergence has been proved only for some special matrices , such as symmetric positive definite @xmath0-matrices with weak diagonal dominance @xcite and without the assumption of @xmath0-matrices in @xcite .",
    "the essential difficulties for amg method lie in the choice of coarse grid and intergrid transfer operators , which fully depend on our understanding of algebraic smooth error under certain smoothing processes .",
    "the classical coarsening strategy was introduced in @xcite , and others like aggregation and smooth aggregation in @xcite , compatible relaxation @xcite , based on element interpolation @xcite , energy - based strategy @xcite and so on .",
    "the paper @xcite presents some numerical experiments to study the robustness and scalability of the amg method .",
    "parallel and adaptive amg methods have also been studied in @xcite . due to its simplicity",
    ", the amg method has been applied to many problems , such as @xcite , etc . in this paper , we are interested in the generalized eigenvalue problem : find @xmath1 such that @xmath2 and @xmath3 where @xmath4 and @xmath0 are real , symmetric @xmath5 matrix , and @xmath6 is a vector in @xmath7 . the concerned generalized eigenvalue problem ( [ eigenvalue_problem ] ) always aries from the discretization of the elliptic partial differential equations involved in several scientific and theoretical fields such as material sciences , electromagnetics , quantum chemistry , acoustic , etc .",
    "these important applications usually require high resolution which means the discretization results in large scale algebraic eigenvalue problems .",
    "then it is very useful to design efficient eigensolvers which need nearly optimal computational complexity .",
    "it is a natural idea to use the amg method for eigenvalue problems .",
    "a very good review of the application of amg method to eigenvalue problems is given in @xcite and references cited therein .",
    "roughly speaking , in the normal strategies , the amg method is adopted as the smoother for linear equations in the inner iteration combined with some types of outer iterations for eigenvalue problems such as inverse power , shift - and - inverse , rayleigh - quotient , locally optimal block preconditioned conjugate gradient and so on . recently , a type of multilevel correction method is proposed to solve eigenvalue problems in @xcite . in this multilevel correction scheme",
    ", the solution of eigenvalue problem on the final level mesh can be reduced to a series of solutions of standard boundary value problems on the multilevel meshes and a series of solutions of the eigenvalue problem on the coarsest mesh .",
    "therefore , the computational work and required memory can arrive at the optimality .",
    "similarly to the amg method for boundary value problems , we can also design a type of amg method for eigenvalue problems based on the multilevel correction method .",
    "the aim of this paper is to present an amg method for eigenvalue problems ( [ eigenvalue_problem ] ) .",
    "the rest of this paper is organized as follows . in the next section ,",
    "we introduce the classical amg method , mainly the constructing of `` coarse - grid '' .",
    "an amg algorithm for solving the eigenvalue problem is presented and analyzed in section 3 . in section 4 ,",
    "some numerical tests are presented to validate the efficiency of the proposed algorithm .",
    "some concluding remarks are given in the last section .",
    "this section is devoted to introducing the classical amg method which aims at solving the ill - conditioned linear system @xmath8 similar to geometric multigrid ( gmg ) method .",
    "since there is no true geometric background , the main content is to determine the  coarse - grid \" and intergrid transfer operators directly from the matrix @xmath4 . by analogy , we define grid points , @xmath9 , as the indices @xmath10 of @xmath11 , and choose a subset of @xmath9 as the coarse grid points according to the undirected adjacency graph of the matrix @xmath4 .",
    "denote @xmath12 as the coarse grid points and @xmath13 the fine points . for any vector in the coarse grid , @xmath14 ,",
    "the interpolation ( prolongation ) operator to fine grid can be defined as follows : @xmath15 where @xmath16 is some small sets of interpolation points @xmath17 .",
    "following @xcite , we define the strong dependent set @xmath18 and the strong influence set @xmath19 with @xmath20 ( usually @xmath21 ) .",
    "then the coarsening process goes as the follows :    [ pre_c_points_alg ] preliminary c - point choice :    1 .",
    "set @xmath22 , @xmath23 , @xmath24 and @xmath25 for all i. 2 .",
    "pick an @xmath26 with maximal @xmath27 .",
    "set @xmath28 and @xmath29 .",
    "3 .   for all @xmath30 , 1 .   set @xmath31 and @xmath32 .",
    "2 .   for all",
    "@xmath33 , set @xmath34 .",
    "4 .   for all",
    "@xmath35 , set @xmath36 .",
    "5 .   if @xmath37 , stop",
    "otherwise , go to step 2 .",
    "[ final_c_point_interpolate_alg ] final c - point choice and definition of interpolation weights :    1 .   set @xmath38 .",
    "2 .   if @xmath39 , stop . otherwise , pick @xmath40 and @xmath41 .",
    "3 .   set @xmath42 , @xmath43 , @xmath44 and @xmath45 .",
    "4 .   set @xmath46 and for @xmath47 , set @xmath48 .",
    "5 .   for each @xmath49 , 1 .",
    "if @xmath50 , then go to ( c ) .",
    "2 .   if @xmath51 , set @xmath28 , @xmath52 , and go to step 2 .",
    "otherwise , set @xmath53 , @xmath54 , @xmath55 , and go to step 4 .",
    "set @xmath56 for @xmath47 .",
    "set @xmath57 , @xmath58 , and @xmath59 for each @xmath47 , and go to step 2 .",
    "denote @xmath60 , @xmath61 and the finest grid @xmath62 .",
    "based on @xmath63 , the amg setup procedure builds up the prolongation and restriction operators @xmath64 and @xmath65 , respectively for @xmath66 .",
    "the coarse matrices are defined with the galerkin projection as follows : @xmath67 we use @xmath68 to denote the dimension in each level grid @xmath69 .",
    "in this section , we introduce an amg method for solving eigenvalue problems . similarly to the geometric case in @xcite , assume we have obtained eigenpair approximations @xmath70 to our desired eigenpairs .",
    "now we introduce an amg correction step to improve their accuracy .",
    "[ amg_one_correction_step_alg ] amg correction step    1 .   for @xmath71",
    "do +  solve the following linear equation by @xmath72 amg - iterations @xmath73 perform @xmath72 amg iteration steps with the initial value @xmath74 to obtain a new eigenfunction approximation @xmath75 which is denoted by @xmath76 where @xmath77 denotes the working level @xmath78 for the amg iteration , @xmath79 leads to the right hand side term of the linear equation , @xmath74 denotes the initial guess and @xmath72 is the number of amg iteration times .",
    "2 .   set @xmath80 $ ] and construct two matrices @xmath81 and @xmath82 as follows @xmath83 and @xmath84 solve the following eigenvalue problem : find @xmath85 such that + @xmath86 and @xmath87 for @xmath71 do : + set @xmath88 end do    summarize above two steps by defining @xmath89    based on the above algorithm , we can construct an amg method for eigenvalue problem which is a combination of the nested technique and the amg correction step defined by algorithm [ amg_one_correction_step_alg ] .",
    "[ amg_eigenvalue_multi_alg ] amg eigenvalue problem    1 .",
    "solve the following low dimensional eigenvalue problem in the @xmath90-th grid @xmath91 ( @xmath92 ) : find @xmath93 such that @xmath94 and @xmath95 solve this eigenvalue problem to get eigenpair approximations @xmath96 which are approximations to our desired eigenpairs .",
    "2 .   for @xmath97 , perform the following correction steps * set @xmath98 and @xmath99 for @xmath71 .",
    "* do the following correction iteration for @xmath100 @xmath89 * set @xmath101 and @xmath102 for @xmath71 .",
    "+ end do    finally , we obtain eigenpair approximations @xmath103 in the finest level grid @xmath104 .",
    "different from the gmg method @xcite , we do not have the exact prolongation and restriction operators . in the practical computation",
    ", we can choose the suitable iteration times @xmath105 to meet the accuracy requirement .",
    "compared to other amg methods , the proposed method here only need to do smoothing iterations for the standard elliptic type of linear equations and the amg method can act as a block - box .",
    "furthermore , the required memory for the eigenpair solving is only about @xmath106 and we can also compute effectively eigenvalues in a given interval in the middle of the spectrum .",
    "inspired by the analysis for the gmg method @xcite , it is known that the amg method can have very good convergence rate if the coarse grids capture the low frequency information of the finest grid well .",
    "in this section , two numerical examples are presented to illustrate the efficiency of the amg method proposed in this paper .",
    "here we give numerical results of the amg method defined by algorithm [ amg_eigenvalue_multi_alg ] for the model eigenvalue problem : find @xmath107 such that @xmath108 where @xmath109 .",
    "the stiff and mass matrices @xmath4 and @xmath0 in problem ( [ eigenvalue_problem ] ) are obtained by discretizing problem ( [ problem ] ) with the linear finite element method @xcite .    in order to show difference of the amg method from the gmg method",
    ", we generate the mesh by delaunay method which has no the hierarchy structure . in this example",
    ", we use two meshes : the coarse one with mesh size @xmath110 and the finer one with mesh size @xmath111 .",
    "algorithm [ amg_eigenvalue_multi_alg ] is applied to solve the algebraic eigenvalue problem ( [ eigenvalue_problem ] ) derived from the discretization of ( [ problem ] ) . in this subsection",
    ", we choose @xmath112 and @xmath113 conjugate gradient smoothing steps for the presmoothing and postsmoothing in each amg iteration step in algorithm [ amg_one_correction_step_alg ] . in the @xmath77-th level ( @xmath114 ) grid of the amg scheme defined in algorithm [ amg_eigenvalue_multi_alg ] ,",
    "we only do @xmath105 amg correction steps defined in algorithm [ amg_one_correction_step_alg ] . in order to measure the algebraic error of the amg method",
    ", we also solve the eigenvalue problem by the direct method .",
    "figure [ numerical_multi_amg_1_exam_1 ] gives the numerical results ( algebraic errors ) for the first @xmath115 eigenvalues @xmath116\\pi^2\\ ] ] on the coarse mesh with the mesh size @xmath110 and figure [ numerical_multi_amg_2_exam_1 ] gives the corresponding numerical results on the finer mesh with mesh size @xmath111 , respectively .",
    "): the algebraic errors of the amg method for the first @xmath115 eigenvalues on the delaunay mesh with @xmath110 on the unit square , where @xmath117 denotes the amg correction steps in each level @xmath118 , @xmath119 and @xmath120 denote the eigenvalue approximations by the amg method and direct solver , respectively .",
    "the dimensions in each level of grids are @xmath121 $ ] and @xmath122.,title=\"fig:\",width=264,height=226 ] ): the algebraic errors of the amg method for the first @xmath115 eigenvalues on the delaunay mesh with @xmath110 on the unit square , where @xmath117 denotes the amg correction steps in each level @xmath118 , @xmath119 and @xmath120 denote the eigenvalue approximations by the amg method and direct solver , respectively .",
    "the dimensions in each level of grids are @xmath121 $ ] and @xmath122.,title=\"fig:\",width=264,height=226 ]    ): the algebraic errors of the amg method for the first @xmath115 eigenvalues on the delaunay mesh with @xmath111 on the unit square , where @xmath117 denotes the amg correction steps in each level @xmath118 , @xmath119 and @xmath120 denote the eigenvalue approximations by the amg method and direct solver , respectively .",
    "the dimensions in each level of grids are @xmath123 $ ] and @xmath124.,title=\"fig:\",width=264,height=226 ] ): the algebraic errors of the amg method for the first @xmath115 eigenvalues on the delaunay mesh with @xmath111 on the unit square , where @xmath117 denotes the amg correction steps in each level @xmath118 , @xmath119 and @xmath120 denote the eigenvalue approximations by the amg method and direct solver , respectively .",
    "the dimensions in each level of grids are @xmath123 $ ] and @xmath124.,title=\"fig:\",width=264,height=226 ]    from figures [ numerical_multi_amg_1_exam_1 ] and [ numerical_multi_amg_2_exam_1 ] , we can find that the amg scheme exhibits the uniform convergence rate which is the same as the amg iteration for boundary value problems .",
    "here we give numerical results of the amg method for solving a more general eigenvalue problem on the unit square domain @xmath125 : find @xmath107 such that @xmath126 where @xmath127 .",
    "the stiff and mass matrices @xmath4 and @xmath0 in problem ( [ eigenvalue_problem ] ) are also obtained by discretizing problem ( [ problem_2 ] ) with the linear finite element method @xcite .    in this example",
    ", we also use two meshes ( the coarse one with mesh size @xmath110 and the finer one with mesh size @xmath111 ) generated by delaunay method to investigate the convergence behaviors .    here",
    ", we also choose @xmath112 and @xmath113 conjugate gradient smoothing step in the presmoothing and postsmoothing procedure . here",
    "we also compare the numerical results with the direct algorithm .",
    "figure [ numerical_multi_amg_1_exam_2 ] gives the numerical results ( algebraic error ) for the first @xmath115 eigenvalue approximations on the coarse mesh and figure [ numerical_multi_amg_2_exam_2 ] gives the corresponding numerical result on the finer mesh .",
    "): the algebraic errors of the amg method for the first @xmath115 eigenvalues on the delaunay mesh with @xmath110 on the unit square , where @xmath117 denotes the amg correction steps in each level @xmath118 , @xmath119 and @xmath120 denote the eigenvalue approximations by the amg method and direct solver , respectively .",
    "the dimensions in each level of grids are @xmath121 $ ] and @xmath122.,title=\"fig:\",width=264,height=226 ] ): the algebraic errors of the amg method for the first @xmath115 eigenvalues on the delaunay mesh with @xmath110 on the unit square , where @xmath117 denotes the amg correction steps in each level @xmath118 , @xmath119 and @xmath120 denote the eigenvalue approximations by the amg method and direct solver , respectively .",
    "the dimensions in each level of grids are @xmath121 $ ] and @xmath122.,title=\"fig:\",width=264,height=226 ]    ): the algebraic errors of the amg method for the first @xmath115 eigenvalues on the delaunay mesh with @xmath111 on the unit square , where @xmath117 denotes the amg correction steps in each level @xmath118 , @xmath119 and @xmath120 denote the eigenvalue approximations by the amg method and direct solver , respectively . the dimensions in each level of grids are @xmath123 $ ] and @xmath124.,title=\"fig:\",width=264,height=226 ] ): the algebraic errors of the amg method for the first @xmath115 eigenvalues on the delaunay mesh with @xmath111 on the unit square , where @xmath117 denotes the amg correction steps in each level @xmath118 , @xmath119 and @xmath120 denote the eigenvalue approximations by the amg method and direct solver , respectively .",
    "the dimensions in each level of grids are @xmath123 $ ] and @xmath124.,title=\"fig:\",width=264,height=226 ]    figures [ numerical_multi_amg_1_exam_2 ] and [ numerical_multi_amg_2_exam_2 ] also show the uniform convergence rates which means the amg method defined by algorithm [ amg_eigenvalue_multi_alg ] has good efficiency for solving eigenvalue problems .",
    "in this paper , we present a type of amg method to solve algebraic eigenvalue problems arising from the discretization of partial differential equations .",
    "the amg setup procedure is applied to construct the hierarchy and the intergrid transfer operators of the algebraic problems .",
    "based on the combination of the multilevel correction method and the amg method for linear equations , an amg method for eigenvalue problems is proposed .",
    "this type of amg method need almost the optimal computational work and the least memory .",
    "finally , the efficiency of the proposed amg method is exhibited by two numerical examples which show that the amg method has uniform convergence rate .",
    "the choices of parameters @xmath72 and @xmath105 , presmoothing and postsmoothing operators and amg coarsening strategy should be considered and tested in future ."
  ],
  "abstract_text": [
    "<S> an algebraic multigrid method is proposed to solve eigenvalue problems based on the combination of the multilevel correction scheme and the algebraic multigrid method for linear equations . </S>",
    "<S> the algebraic multigrid method setup procedure is applied to construct the hierarchy and the intergrid transfer operators . in the algebraic multigrid scheme </S>",
    "<S> , a large scale eigenvalue problem can be solved by some algebraic multigrid smoothing steps in the hierarchy and some eigenvalue problems solving in a very small dimension . </S>",
    "<S> some numerical experiments are presented to validate the efficiency of the proposed algorithm . 0.3 cm * keywords . * algebraic multigrid ; multilevel correction ; eigenvalue problem .    </S>",
    "<S> 0.2 cm * ams subject classifications . </S>",
    "<S> * 65n30 , 65n25 , 65l15 , 65b99 . </S>"
  ]
}
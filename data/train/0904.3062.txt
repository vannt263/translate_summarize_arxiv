{
  "article_text": [
    "an elementary information - theoretic argument shows that @xmath8 bits are necessary to represent integers between  0 and  @xmath3 ( @xmath9 denotes binary logarithm throughout the paper ) .",
    "counting some interesting objects in a data set thus takes logarithmic space .",
    "certain applications need to be more economical because they need to maintain many counters simultaneously while , say , tracking patterns in large data streams .",
    "notable examples where memory becomes a limiting factor include analyses of the webgraph  @xcite .",
    "numerous bioinformatics studies also require space - efficient solutions when searching for recurrent motifs in protein and dna sequences .",
    "these frequent sequence motifs are associated with mobile , structural , regulatory or other functional elements , and have been studied since the first molecular sequences became available  @xcite .",
    "some recent studies have concentrated on patterns involving long oligonucleotides , i.e. , `` words '' of length 1640 over the 4-letter dna alphabet , revealing potentially novel regulatory features  @xcite , and general characteristics of copying processes in genome evolution  @xcite .",
    "hashtable - based indexing techniques  @xcite used in homology search and genome assembly procedures also rely on counting in order to identify repeating sequence patterns . in these applications ,",
    "billions of counters need to be handled , making implementations difficult in mainstream computing environments .",
    "the need for many counters is aggravated by the fact that the counted features often have heavy - tailed frequency distributions  @xcite , and there is thus no `` typical '' size for individual counters that could guide the memory allocation at the outset . as a numerical example , consider a study  @xcite of the 16-mer distribution in the human genome sequence , which has a length surpassing three billion . more than four billion ( @xmath10 ) different words",
    "need to be counted , and the counter values span more than sixteen binary magnitudes even though the average 16-mer occurs only once or twice .",
    "one way to greatly reduce memory usage is to relax the requirement of exact counts .",
    "namely , approximate counting to  @xmath3 is possible using @xmath11 bits with probabilistic techniques  @xcite .",
    "the idea of probabilistic counting was introduced by morris  @xcite . in the simplest case",
    ", a counter is initialized as @xmath12 .",
    "the counter is incremented by one at the occurrence of an event with probability  @xmath1 .",
    "the counter is meant to track the magnitude of the true number of events .",
    "more precisely , after  @xmath3 events , the expected value of  @xmath13 is exactly  @xmath14 .",
    "a generalization of the binary morris counter is the so - called _ @xmath15-ary counter _ with some @xmath16 and @xmath17 .",
    "in such a setup , the counter is incremented with probability  @xmath18 .",
    "the actual event count is estimated as  @xmath19 , using the transformation @xmath20 the function  @xmath21 yields an unbiased estimate , as @xmath22 after  @xmath3 probabilistic updates .",
    "the accuracy of a probabilistic counting method is characterized by the variance of the estimated count . for the @xmath15-ary counter , @xmath23 which is approximately @xmath24 for large  @xmath3 and  @xmath25 .",
    "the parameter  @xmath25 governs the tradeoff between memory usage and accuracy .",
    "the counter stores  @xmath0 ( with @xmath26 ) using @xmath27 bits ; larger  @xmath25 thus increases the accuracy at the expense of higher storage costs .",
    "the main goal of this study is to introduce a novel algorithm for approximate counting .",
    "our _ floating - point counter _ is defined with the aid of a design parameter  @xmath28 , where  @xmath5 is a nonnegative integer . as we discuss later",
    ", @xmath29 determines the tradeoff between memory usage and accuracy , analogously to parameter  @xmath25 of the @xmath15-ary counter .",
    "the procedure relies on a uniform random bit generator  @xmath30 .",
    "algorithm @xmath31 below shows the incrementation procedure for a floating - point counter , initialized with  @xmath12 .",
    "notice that the first  @xmath29 updates are deterministic",
    ".    0.9    @xmath32 //",
    "_ returns new value of @xmath0 _",
    "set @xmath33 //",
    "_ bitwise right shift by @xmath34 positions _    * while * @xmath35 * do *    * if * @xmath36 * then * * return * @xmath0    set @xmath37    * return *",
    "@xmath38    the counter value  @xmath39 , where  @xmath40 denotes the lower  @xmath34 bits , is used to estimate the actual count @xmath41 .",
    "the counter thus stores  @xmath0 using @xmath42 bits . the estimate s standard deviation is @xmath43 where  @xmath44 fluctuates between about  @xmath45 and  @xmath46 asymptotically ( see corollary  [ cor : accuracy ] for a precise characterization ) .",
    "notice that a @xmath15-ary counter with  @xmath47 has asymptotically the same memory usage , and a standard deviation of about @xmath48 ( see eq .  ) .",
    "our algorithm thus has similar memory usage and accuracy as @xmath15-ary counting .",
    "the floating - point counter is more advantageous in two aspects .",
    "first , the first  @xmath29 updates are deterministic , i.e. , small values are exactly represented with convenience .",
    "second , the counter can be implemented with a few elementary integer and bitwise operations , whereas a @xmath15-ary counter works with irrational probabilities .",
    "the random updates in the floating - point counter occur with exact integer powers  @xmath49 , and such random values can be generated using an average of  2 random bits .",
    "specifically , the  @xmath31 procedure uses an expected number of @xmath50 calls to the random bit generator @xmath30 .",
    "in contrast , a @xmath15-ary counter needs a uniform random number in the range @xmath51 to produce a random event with probability  @xmath52 .",
    "the rest of the paper is organized as follows . in order to quantify the performance of floating - point counters",
    ", we found it fruitful to develop a general analysis of probabilistic counting , which is of independent mathematical interest .",
    "section  [ sec : general.thm ] presents the main results about the accuracy of probabilistic counting methods .",
    "first , theorem  [ tm : f ] shows that every probabilistic counting method has a unique unbiased estimator  @xmath21 with @xmath53 after  @xmath3 probabilistic updates .",
    "second , theorem  [ tm : variance ] shows that the accuracy of any such method is computable directly from the counter value .",
    "finally , theorem  [ tm : accuracy ] gives relatively simple upper and lower bounds on the asymptotic accuracy of the unbiased estimator .",
    "the proofs of the theorems are given in section  [ sec : general.proofs ] , which can be safely skipped on first reading .",
    "section  [ sec : fp ] presents floating - point counters in detail , and mathematically characterizes their utility by relying on the results of section  [ sec : general.thm ] .",
    "section  [ sec : fp ] further illustrates the theoretical analyses with simulation experiments comparing @xmath15-ary and floating - point counters .",
    "for a formal discussion of probabilistic counting , consider the markov chain formed by the successive counter values .",
    "[ def : counter ] a _ counting chain _ is a markov chain @xmath54 with    [ eq : counter.general.def ] @xmath55    where @xmath56 are the transition probabilities defining the counter .",
    "it is a classic result associated with probabilities in pure - birth processes  @xcite that the _ @xmath3-step probabilities _",
    "@xmath57 are computable by a simple recurrence ( see equations  ( [ eq : pcnt.rec.0][eq : pcnt.rec.k ] ) later ) . in case of probabilistic",
    "counting , we want to infer  @xmath3 from the value of  @xmath58 alone through a computable function  @xmath21 .",
    "a given probabilistic counting method is defined by the transition probabilities and the function  @xmath21 . as we will see later ( theorem  [ tm : f ] ) , the transition probabilities determine a unique function  @xmath21 that gives an unbiased estimate of the update count  @xmath3 .",
    "[ def : f ] a function  @xmath59 is an _ unbiased count estimator _ for a given counting chain if and only if @xmath60 holds for all  @xmath61 .    in the upcoming discussions , we assume that the probabilistic counting method uses an unbiased count estimator  @xmath21 .",
    "the merit of a given method is gauged by its accuracy , as defined below .",
    "[ def : accuracy ] the _ accuracy _ of the counter is the coefficient of variation @xmath62    the theorems below provide an analytical framework for evaluating probabilistic counters .",
    "theorem  [ tm : f ] shows that the unbiased estimator is uniquely defined by a relatively simple expression involving the transition probabilities .",
    "theorem  [ tm : variance ] shows that the uncertainty of the estimate can be determined directly from the counter value .",
    "theorem  [ tm : accuracy ] gives a practical bound on the asymptotic accuracy of the counter .",
    "[ tm : f ] the function    [ eq : gen.estimator ] @xmath63    uniquely defines the unbiased count estimator  @xmath21 for any given set of transition probabilities  @xmath64 .",
    "thus , for any given counting chain , we can determine efficiently an unbiased estimator .",
    "theorem  [ tm : f ] confirms the intuition that the transition probabilities must be exponentially decreasing in order to achieve storage on  @xmath65 bits . otherwise , with subexponential @xmath66 , one would have @xmath67 , leading to  @xmath68 .",
    "the next definition provides a computable function for quantifying the uncertainty of  @xmath19 .",
    "[ def : g ] the _ variance function _ for a given counting chain is defined by    [ eq : g.def ] @xmath69    theorem  [ tm : variance ] below shows that the accuracy is computable directly from the counter value for any counting chain .",
    "the statement has a practical relevance ( since count estimates can be coupled with the variance function s value ) , and the variance function is used to evaluate the asymptotic accuracy of any counting chain ( see theorem  [ tm : accuracy ] ) .",
    "[ tm : variance ] the variance function  @xmath70 of definition  [ def : g ] provides an unbiased estimate for the variance of  @xmath21 from theorem  [ tm : f ] .",
    "specifically , @xmath71 holds for all  @xmath72 , where the moments refer to the space of @xmath3-step probabilities .",
    "theorem  [ tm : accuracy ] is the last main result of this section .",
    "the statement relates the asymptotics of the variance function , the unbiased count estimator , and the counting chain s accuracy .",
    "[ tm : accuracy ] let  @xmath73 be the accuracy of definition  [ def : accuracy ] , and let @xmath74 let  @xmath75 .",
    "suppose that @xmath76 ( and , thus , @xmath77 ) .",
    "then    [ eq : accuracy.bound ] @xmath78    [ [ example ] ] * example * + + + + + + + + +    consider the case of a @xmath15-ary counter , where @xmath79 with some @xmath80 .",
    "theorem  [ tm : f ] automatically gives the unbiased count estimator @xmath81 theorem  [ tm : variance ] yields the variance function @xmath82 in order to use theorem  [ tm : accuracy ] , observe that @xmath83 therefore , we obtain the known result @xcite that @xmath84 .",
    "in what follows , we use the shorthand notation @xmath85 for the @xmath3-step probabilities . by  ,",
    "@xmath86 , and the recurrences    [ eq : pcnt.rec ] @xmath87    hold for all @xmath88 .",
    "[ lm : estimator.unique ] the unbiased estimator is unique .    since  @xmath89 is imposed , and @xmath90 with certainty , @xmath91 . for all  @xmath3 , @xmath92 , so @xmath93 thus , for all @xmath94 , @xmath95 which shows that  @xmath96 is uniquely determined by @xmath97 and the @xmath3-step probabilities .",
    "define the durations @xmath98 , i.e. , the number of times @xmath99 for @xmath100 .",
    "define also @xmath101 .",
    "clearly , @xmath102 . by the linearity of expectations , @xmath103}}{\\mathbb{p}}\\{x_n\\le k\\}\\\\ *      & = { \\mathbb{e}}l_k(n ) + { \\mathbb{p}}\\{x_n\\le k\\ } { \\mathbb{e}}l_k,\\end{aligned}\\ ] ] where we used the memoryless property of the geometric distribution in the last step .",
    "consequently , @xmath104 now , @xmath105 since @xmath106 , we have @xmath60 for all  @xmath3 . by lemma  [ lm : estimator.unique ] ,",
    "no other function  @xmath21 has the same property .    by  , for all @xmath72 , @xmath107 since @xmath108 , @xmath109 by   and  , @xmath110 by",
    ", @xmath111 holds for all @xmath72 .",
    "since @xmath112 , @xmath113 holds for all @xmath3 .",
    "define @xmath114    let  @xmath115 be an arbitrary threshold . by the definition of  @xmath116",
    ", there exists  @xmath117 such that @xmath118 for all  @xmath119 .",
    "therefore , @xmath120 since  @xmath121 for all  @xmath122 , @xmath123 for all  @xmath122 .",
    "consequently , @xmath124 . as @xmath125",
    ", there exists  @xmath126 such that @xmath127 since @xmath128 , @xmath129 by  , @xmath130 for all  @xmath131 .",
    "so , @xmath132 since  @xmath133 is arbitrarily small and @xmath134 , @xmath135    the lower bound is proven analogously .",
    "let @xmath115 be an arbitrary threshold .",
    "let  @xmath117 be such that @xmath136 for all @xmath119 .",
    "so , @xmath137 for  @xmath3 large enough , @xmath138 holds . since @xmath133 is arbitrarily small , and @xmath139 , @xmath140",
    "the counting chain for a floating - point counter is defined using a design parameter  @xmath28 with some nonnegative integer  @xmath34 :    [ eq : transz ] @xmath141    , where  @xmath142 are the most significant digits and  @xmath143 is the number of trailing zeros for the true count . ]",
    "figure  [ fig : machine ] illustrates the states of the floating - point counter .",
    "the counter s designation becomes apparent from examining the binary representation of the counter value  @xmath122 .",
    "write @xmath144 with @xmath145 i.e. , @xmath40 corresponds to the lower  @xmath146 bits of  @xmath122 , and  @xmath143 corresponds to the remaining upper bits .",
    "theorem  [ tm : f ] applies with  @xmath147 , leading to the following corollary .",
    "[ cor : f ] the unbiased estimator for  @xmath144 is @xmath148    in other words , @xmath149 is essentially a floating - point representation of the true count  @xmath3 , where  @xmath143 is the exponent , and  @xmath40 is a @xmath5-bit significand without the hidden bit for the leading ` 1 . '",
    "theorem  [ tm : variance ] yields the following corollary .",
    "[ cor : variance ] the variance function for the floating - point counter is @xmath150    combining corollaries  [ cor : f ] and  [ cor : variance ] , we get the following bounds .",
    "[ cor : accuracy ] the accuracy of the floating - point counter is asymptotically bounded as @xmath151    by equations   and  , we have @xmath152 considering the extreme values at  @xmath153 and @xmath154 , respectively : @xmath155 plugging these limits into theorem  [ tm : accuracy ] leads to the corollary .    for large  @xmath28 , the bounds of corollary  [ cor : accuracy ]",
    "become @xmath156    the accuracy is thus comparable to the accuracy of a  @xmath15-ary counter with  @xmath157 , which is approximately @xmath158 . the memory requirements of the two counters are equivalent : in order to count up to @xmath159 , @xmath160 bits are necessary .",
    "figures  [ fig : trajectory ] and  [ fig : estimate ] compare the performance of the floating - point counters with equivalent base-@xmath15 counters in simulation experiments .",
    "the equivalence is manifest on figure  [ fig : trajectory ] that illustrates the trajectories of the estimates by the different counters .",
    "figure  [ fig : estimate ] plots statistics about the estimates across multiple experiments : the estimators are clearly unbiased , and the two counters display the same accuracy .",
    "-ary counters ( * bottom * ) .",
    "each trajectory follows the the appropriate counting chain in a random simulated run .",
    "the lines trace the relative error @xmath161 for floating - point counters with @xmath34-bit mantissa , and comparable @xmath15-ary counters with @xmath162 where @xmath163 .",
    "the shaded areas indicate a relative error of @xmath164 .",
    "the dots at the end of the trajectories denote the final value for @xmath165 . ]",
    "-ary counters ( * bottom * ) .",
    "each trajectory follows the the appropriate counting chain in a random simulated run .",
    "the lines trace the relative error @xmath161 for floating - point counters with @xmath34-bit mantissa , and comparable @xmath15-ary counters with @xmath162 where @xmath163 .",
    "the shaded areas indicate a relative error of @xmath164 .",
    "the dots at the end of the trajectories denote the final value for @xmath165 . ]",
    "-ary counter ( * bottom * ) .",
    "each plot depicts the result of 1000 experiments , in which a floating - point counter with @xmath166-bit mantissa , and a @xmath15-ary counter with @xmath167 were run until @xmath168 .",
    "the dots in the middle follow the averages ; the black segments depict the standard deviations ( for each @xmath169 , they are of length  @xmath169 spaced at @xmath169 from the average ) , and grey dots show outliers that differ by more than @xmath170 from the average .",
    "the shading highlights the asymptotic relative accuracy of the @xmath15-ary counter ( @xmath171 ) . ]",
    "-ary counter ( * bottom * ) .",
    "each plot depicts the result of 1000 experiments , in which a floating - point counter with @xmath166-bit mantissa , and a @xmath15-ary counter with @xmath167 were run until @xmath168 .",
    "the dots in the middle follow the averages ; the black segments depict the standard deviations ( for each @xmath169 , they are of length  @xmath169 spaced at @xmath169 from the average ) , and grey dots show outliers that differ by more than @xmath170 from the average .",
    "the shading highlights the asymptotic relative accuracy of the @xmath15-ary counter ( @xmath171 ) . ]",
    "i am very grateful to philippe flajolet for valuable suggestions on improving previous versions of the manuscript .",
    "mikls csrs , laurent no , and gregory kucherov , _ reconsidering the significance of genomic word frequencies _ , trends in genetics * 23 * ( 2007 ) , no .  11 , 543546 , preprint available as q - bio/0609022 at arxiv.org .",
    "isidore rigoutsos , tien huynh , kevin miranda , aristotelis tsirigos , alice mchardy , and daniel platt , _ short blocks from the noncoding parts of the human genome have instances within nearly all known genes and relate to biological processes _ , proceedings of the national academy of sciences of the usa * 103 * ( 2006 ) , no .  17 , 66056610 .    suzanne  s. sindi , brian  r. hunt , and james  a. yorke , _ duplication count distributions in dna sequences _ , physical review e ( statistical , nonlinear , and soft matter physics ) * 78 * ( 2008 ) , no .  6 , 061912"
  ],
  "abstract_text": [
    "<S> memory becomes a limiting factor in contemporary applications , such as analyses of the webgraph and molecular sequences , when many objects need to be counted simultaneously . </S>",
    "<S> robert morris [ _ communications of the acm _ , </S>",
    "<S> 21:840842 , 1978 ] proposed a probabilistic technique for approximate counting that is extremely space - efficient . </S>",
    "<S> the basic idea is to increment a counter containing the value @xmath0 with probability @xmath1 . as a result </S>",
    "<S> , the counter contains an approximation of @xmath2 after  @xmath3 probabilistic updates stored in @xmath4 bits . </S>",
    "<S> here we revisit the original idea of morris , and introduce a binary floating - point counter that uses a @xmath5-bit significand in conjunction with a binary exponent . </S>",
    "<S> the counter yields a simple formula for an unbiased estimation of @xmath3 with a standard deviation of about @xmath6 , and uses @xmath7 bits .    </S>",
    "<S> we analyze the floating - point counter s performance in a general framework that applies to any probabilistic counter , and derive practical formulas to assess its accuracy . </S>"
  ]
}
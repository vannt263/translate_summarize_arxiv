{
  "article_text": [
    "there is currently interest in studying complex networks through the simpler networks of which they are comprised .",
    "this point of view is known as _ compositionality_. various flavors of graphs ( directed , weighted , colored , etc . )",
    "play an important role in this program because they are particularly well suited to model networks @xcite . by adding a bit of structure to graphs",
    ", we can decide how to glue graphs together to make larger graphs .",
    "the structure that we want to consider is given by choosing two subsets of nodes , named _",
    "inputs _ and _ outputs_. when the inputs of one graph equal the outputs of another , we can glue the graphs together .",
    "one method for adding this structure is to use a cospan of graphs @xmath1 where @xmath2 and @xmath3 are discrete . then gluing graphs together becomes a matter of composing cospans , which bnabou @xcite described using pushouts in the context of a bicategory whose morphisms are cospans and @xmath4-morphisms are maps of cospans .",
    "rebro @xcite extended this idea to give a bicategory whose @xmath4-morphisms are cospans of cospans .",
    "see the figure below to see what this means .",
    "@xmath5 [ fig.mapofcospans ]    @xmath6 [ fig.cospanofcospans ]    @xmath7 [ fig.spanofcospans ]    the goal of this paper is to explore another tool to study networks : spans of cospans ( see figure [ fig.spanofcospans ] ) .",
    "grandis and par studied these in the context of intercategories and showed that lax interchange held .",
    "we will build a bicategory from certain spans of cospans . both bnabou and rebro only required sufficient colimits to compose maps of cospans and cospans of cospans , respectively . for us , we require sufficient limits and colimits while also ensuring they play well together .",
    "for this reason , we start with a topos @xmath0 , then let our @xmath8-cells be the objects of @xmath0 , @xmath9-cells the cospans in @xmath0 , and @xmath4-cells isomorphism classes of spans ( with monic legs ) of cospans .",
    "our main theorem is that this construction , named @xmath10 , really gives a bicategory .",
    "the specific motivation for this particular construction is to create a framework to house the rewriting of graphs ( with inputs and outputs ) . applying our construction to the topos @xmath11 , we consider @xmath12 , the full sub - bicategory of @xmath13 whose objects are the discrete graphs .",
    "the @xmath4-cells of @xmath12 represent all possible ways to rewrite one graph into another that respect the inputs and outputs . in this paper ,",
    "graph rewrites are performed using the double pushout method .",
    "this is explained in section [ sec.rewriting ] , though @xcite and @xcite contain more detailed accounts .",
    "here is an example of what a @xmath4-cells in @xmath12 will look like : @xmath14 inputs are depicted with ` @xmath15 ' , outputs with ` @xmath16 ' , and nodes depicted with ` @xmath17 ' are neither .",
    "the picture above illustrates the rewriting of the top graph to the bottom graph by deleting an edge and adding a loop .",
    "the structure of this paper is as follows .",
    "we begin section [ sec.spansofcospans ] by defining spans of cospans and two ways to compose them . after declaring that we will be working in a topos and that the legs of the spans of cospans will be monic",
    ", we show that the compositions satisfy an interchange law .",
    "this section ends with a construction of a bicategory whose @xmath4-cells are spans of cospans . strictly speaking",
    ", there is no need for the full strength of a topos , so in section [ sec.disc on assump ] , we discuss how we might weaken our assumptions so that interchange still holds .",
    "then in section [ sec.rewriting ] we give a brief introduction to graph rewriting and present our motivating example : @xmath12 , a bicategory that contains all possible ways to rewrite graphs .",
    "the author would like to thank john baez for many helpful discussions as well as blake pollard and jason erbele for contributing the boolean algebra counterexample in section [ sec.disc on assump ] .",
    "we begin by introducing spans of cospans . given that our motivation is to have these",
    "be @xmath4-cells in some bicategory , we also show how to compose them .",
    "in fact , there are two ways to do so and these will correspond to what will eventually be horizontal and vertical composition .",
    "of course , we would like for these compositions to play nicely together and so we finish this section by showing that an interchange law holds , under certain assumptions .    before we begin , a few remarks on convention are in order . first , throughout this paper , tailed arrows ",
    "@xmath18 \" refer to monics , and two headed arrows  @xmath19 \" to quotient maps .",
    "also , hooked arrows `` @xmath20 '' are canonical inclusions , which will be labeled @xmath21 when its codomain is @xmath22 . to declutter the diagrams , only arrows that will eventually be referenced are given names .",
    "spans @xmath23 are denoted by @xmath24 and cospans @xmath25 by @xmath26 .",
    "this notation is vague , but context should dispense with any confusion . note that , when first defining spans of cospans below , the object names might seem to be oddly chosen .",
    "the intention is to develop a consistency that will carry into the proof of the interchange law , at which point , the naming will seem more methodical .",
    "suppose that we are working in a category @xmath0 .",
    "given a parallel pair of cospans @xmath27 , @xmath28 , a _ span of cospans _ is a span @xmath29 such that @xmath30 commutes . given spans of cospans @xmath31 , then a morphism of spans of cospans is a @xmath0-morphism @xmath32 such that the diagram @xmath33 commutes .",
    "this is an isomorphism of spans of cospans exactly when the @xmath0-morphism is .",
    "there are two different ways to turn compatible pairs of spans of cospans into a single span of cospans .",
    "actually , we are foreshadowing that spans of cospans will soon be @xmath4-cells in a bicategory .",
    "instead of beating around the bush , we immediately name these assignments for what they are : vertical and horizontal composition .",
    "as we will see , @xmath0 should have enough limits and colimits for the compositions to be defined .",
    "also , for the present moment , compositions will only be defined up to isomorphism .",
    "we will also hold off on looking for the typical properties composition should satisfy until we introduce the bicategorical structure .    take a pair of spans of cospans @xmath29 and @xmath34 .",
    "define _ vertical composition _",
    "@xmath35 by @xmath36 diagrammatically , this is @xmath37 now , let @xmath38 and @xmath39 be cospans and let @xmath29 and @xmath40 be spans of cospans .",
    "define the assignment _ horizontal composition _",
    "@xmath41 by @xmath42 which corresponds to @xmath43 at this point , it is natural to ask whether the interchange law holds between vertical and horizontal composition .",
    "it does , but not without some further assumptions .",
    "let @xmath0 be a topos with chosen pushouts and let both legs of each span of cospans be monic . to see examples of where the interchange law fails without these assumptions , see section [ sec.disc on assump ] .",
    "the first thing we want to do is to show that the vertical and horizontal compositions are well - defined , up to isomorphism . to this end",
    ", we give a lemma that will be put to work several times during the course of this section .",
    "[ lem.helpful little lemma ] given a diagram @xmath44 we get a pushout @xmath45 such that the canonical arrows @xmath46 and @xmath47 are monic .    using its universal property , we see that @xmath46 factors through @xmath48 as seen in diagram @xmath49 it is straightforward to check that the squares are both pushouts . by lemma [ lem.adhesive properties ] , we get that @xmath46 must be monic and also that the monotonicity of @xmath47 will follow once is shown to be a pushout .",
    "one can check that the right hand square commutes by using the universal property of @xmath50 . to see that this square is a pushout , set up a cocone @xmath51 @xmath52 then @xmath53 , @xmath54 , and @xmath51 form a cocone under the span @xmath55 on the bottom face of diagram .",
    "this induces the canonical map @xmath56 .",
    "it follows that @xmath57 and @xmath58",
    ". therefore , @xmath59 by the universal property of coproducts .",
    "furthermore , @xmath60 , @xmath61 , and @xmath51 form a cocone under the span @xmath62 on the top face of diagram .",
    "then @xmath63 and @xmath64 meaning that both @xmath65 and @xmath66 satisfy the canonical map @xmath67 .",
    "hence @xmath68 .    the universality of @xmath69 with respect to diagram follows from the universality of @xmath69 with respect to @xmath70",
    ".    vertical and horizontal composition of spans of cospans respects monics .",
    "the result for vertical composition follows from the fact that pullbacks respect monics .",
    "the result for horizontal composition follows from applying lemma [ lem.helpful little lemma ] to the diagrams @xmath71    the interchange law requires that , given composable spans of cospans @xmath72 there is an isomorphism : @xmath73 the left hand side corresponds to first applying vertical composition then horizontal composition .",
    "the right hand side swaps the order of composition .",
    "this isomorphism will later strengthen to an equality when isomorphism classes of spans of cospans are the @xmath4-cells of a bicategory .",
    "it is straightforward , using and , to see that reduces to finding an isomorphism @xmath74 of spans of cospans .    to simplify our notation , write : @xmath75 now , apply lemma [ lem.helpful little lemma ] to the diagram @xmath76 to get the pushout @xmath77 similarly , we get pushouts @xmath78 now , @xmath79 forms a cone over the cospan @xmath80 via the maps @xmath81 , @xmath82 , and @xmath83 . and so , we get a canonical map @xmath84 .",
    "[ lem : pullback over subobject ] given cospans @xmath85",
    ", @xmath86 where the legs of @xmath87 factor through a monic @xmath88 , then there is a unique isomorphism @xmath89 .    via the projection maps ,",
    "@xmath90 forms a cone over the cospan @xmath86 and , also , @xmath91 forms a cone over the cospan @xmath26 , though the latter requires the monic @xmath88 to do so .",
    "universality implies that the induced maps are mutual inverses and they are the only such pair .",
    "[ lem.theta iso ] the map @xmath84 is an isomorphism .    because colimits are stable under pullback ( * ? ?",
    "4.7.2 ) , we get an isomorphism @xmath92 but @xmath93 and @xmath94 are initial .",
    "to see this , recall that in a topos , all maps to the initial object are isomorphisms .",
    "now , consider the diagram @xmath95 whose lower right square is a pullback because coproducts are disjoint in topoi .",
    "similarly , @xmath96 is initial .",
    "hence we get a canonical isomorphism @xmath97 that factors through @xmath46 . but",
    "lemma [ lem : pullback over subobject ] gives unique isomorphisms @xmath98 and @xmath99 .",
    "this produces a canonical isomorphism @xmath100 one can show that @xmath101 using universal properties .",
    "now , let us consider the following diagram : @xmath102 where @xmath103 and @xmath104 are the canonical maps .",
    "observe that @xmath104 factors through @xmath103 in the above diagram .",
    "this follows from the universal property of pullbacks .",
    "we also have that the top square is a pullback from the previous lemma .",
    "[ lem.theta_y iso ] the map @xmath105 is an isomorphism .    because we are working in a topos",
    ", it suffices to show that @xmath103 is both monic and epic .",
    "it is monic because @xmath106 is monic .    to see that @xmath103 is epic",
    ", it suffices to show that @xmath104 is epic .",
    "the front and rear right faces of are pushouts by lemma [ lem.helpful little lemma ] . then because the top and bottom squares of are pullbacks consisting of only monomorphisms , lemma [ lem.vk dual ] implies that the front and rear left faces are pushouts .",
    "however , as pushouts over monos , lemma [ lem.adhesive properties ] tells us they are pullbacks .",
    "but in a topos , regular epis are stable under pullback , and so @xmath104 is epic .",
    "it remains to show that @xmath103 serves as an isomorphism between spans of cospans .",
    "this amounts to showing that @xmath107 commutes . here",
    "@xmath108 and @xmath109 are induced from applying vertical composition before horizontal , @xmath110 from applying horizontal composition before vertical , @xmath111 is from composing in either order , @xmath112 is from , and @xmath113 is from .",
    "the top and bottom face commute by construction .",
    "the inner triangles of diagram commute .",
    "that is , we have @xmath114 and @xmath115 .    to see that @xmath116 , consider the diagram @xmath117 the bottom face is exactly the pushout diagram from which @xmath112 was obtained .",
    "universality implies that @xmath118 and , as seen in , @xmath119 .",
    "that @xmath115 follows from @xmath120 and the fact that @xmath121 is monic .",
    "of course , we have only shown that two of the four inner triangles commute , but we can replicate our arguments to show the remaining two commute as well .",
    "this lemma was the last step in proving the following interchange law .",
    "[ thm.interchange law ] given diagram in a topos , there is a canonical isomorphism @xmath122 .",
    "let @xmath0 be any topos .",
    "we will commence construction of a bicategory named @xmath10 , or @xmath123 for short .",
    "the @xmath8-cells of @xmath123 are just the @xmath0-objects . for @xmath8-cells @xmath124 and @xmath85 , build a category @xmath125 whose objects are @xmath0-cospans and morphisms are isomorphism classes of @xmath0-spans of cospans whose legs are both monic .",
    "composition in @xmath125 is the vertical composition @xmath35 introduced in .",
    "it is straightforward to check that associativity holds and that spans of cospans whose legs are identity serve as identities .",
    "the composition functor is given by an assignment @xmath126 that acts on @xmath9-cells by @xmath127 and on @xmath4-cells by horizontal composition @xmath41 from .",
    "it is straightforward to check that @xmath128 preserves identities .",
    "theorem [ thm.interchange law ] ensures that @xmath128 preserves composition . for every @xmath8-cell @xmath124",
    ", the identity functor @xmath129 picks out the @xmath4-cell with all identity maps on @xmath124 .",
    "the associator is made of @xmath4-cells @xmath130 the right unitor is made of @xmath4-cells @xmath131 .",
    "likewise , the left unitor has @xmath4-cells @xmath132 . the legs for each of the above are the obvious choices .",
    "the pentagon and triangle identities follow from the associativity , up to isomorphism , of pushouts . given",
    "all of the data just laid out , we have the main theorem of the paper .",
    "if @xmath0 is a topos , then @xmath10 is a bicategory .",
    "can we expand the domain on which this construction works ?",
    "apart from ensuring sufficiently many limits and colimits , the primary source of roadblocks is the interchange law . as we discuss below , it is not absolutely necessary to work strictly within a topos , but we do so in order to be expeditious . to lay out , one by one",
    ", the requirements for our interchange law to hold would be exhausting and leave us little energy to work through its proof . to do",
    "this is even less reasonable given that we can just shout `` topos '' and move on .",
    "however , listing these requirements is interesting enough to take a look at here . before digging deeper into the properties used ,",
    "let s convince ourselves of the necessity for monic legs within our span of cospans .",
    "consider the category @xmath133 of sets and functions .",
    "we will relax the assumption that the legs of the spans of cospans are both monic .",
    "indeed , suppose that @xmath134 , @xmath135 , and @xmath136 are two element sets and @xmath137 , @xmath85 , @xmath138 , and @xmath139 are singletons .",
    "the functions can be any of the limited choices we have .",
    "after several routine calculations , we determine that @xmath140 has cardinality @xmath141 and @xmath142 has cardinality @xmath143 .",
    "so we see that even in the archetypal topos , the legs of the spans must be monic for the interchange law to hold . but even if they are , this law may fail if our category @xmath144 is not a topos .",
    "the next example illustrates this .",
    "consider the boolean algebra on a two element set .",
    "this is the category @xmath145 with products given by meet and coproducts given by join .",
    "note that this is not a topos .",
    "indeed , the only non - identity morphism is both monic and epic but , as no inverse exists , it is not is isomorphism . recalling the interchange equation , suppose that we have @xmath146 and @xmath147 .",
    "it is straightforward to check that @xmath148 and @xmath149 .",
    "that is , the interchange equation does not hold .",
    "because this boolean algebra can be embedded into any other , it follows that interchange does not hold for any boolean algebra .    now that we are convinced that we actually do need to assume something for interchange to work , we can list our requirements .",
    "the obvious place to start is by asking for our category to have enough limits and colimits .    in lemma [ lem.helpful little lemma ]",
    ", we use that pushouts respect monics .",
    "this occurs in topoi .",
    "indeed , this occurs in adhesive categories which are discussed in section [ sec.rewriting ] .    in lemma [ lem.theta iso ] ,",
    "we use a couple of facts .",
    "first , we use that coproducts are disjoint , which means that a pullback over coproduct inclusions is initial .",
    "we also use that colimits  particularly coproducts  are stable under pullback .",
    "the full force of a topos is not needed to satisfy this requirement .",
    "indeed , looking at ( * ? ? ?",
    "1.4.9 ) , we simply need our category to be locally cartesian closed .    in lemma [ lem.theta_y iso ]",
    ", we use that a monic epimorphism is an isomorphism in topoi .",
    "this is surely not true in general , but is is true that a monic regular epimorphism is always an isomorphism .",
    "notice that the vertically aligned epimorphisms in diagram are all regular since they are all coequalizers .",
    "for instance @xmath150 is a coequalizer over @xmath151 .",
    "so we can merely ask for pullbacks to preserve regular epimorphisms . note that this does happen in a regular category , which is a larger class than topoi .    also in lemma [ lem.theta_y iso ]",
    ", we make use of lemmas [ lem.adhesive properties ] and [ lem.vk dual ] . these holds in any adhesive category .",
    "it is clear that the properties of adhesive categories play an important role in ensuring that @xmath123 is a bicategory , as does being locally cartesian closed and regular .",
    "certainly , topoi are a well - known , large family of categories that are contained in the intersection of all of these classes .",
    "for those who are not familiar with rewriting systems , and graph rewriting in particular , we provide a brief introduction . for a more in - depth and rigorous viewpoint , see @xcite , @xcite , or @xcite .",
    "there are many methods of rewriting found throughout mathematics , computer science , and linguistics .",
    "the general idea is that we begin with a collection of rules , a collection of terms and a way to apply rules to certain , compatible terms .",
    "when applied to a term , a rule replaces a sub - term with a new sub - term . a simple",
    ", very informal example is found within the english language .",
    "consider a set of rules @xmath152 we can apply any one of these rules to @xmath153 to obtain heaps of grammatically correct , if potentially spooky , sentences .",
    "the first rewriting methods were uni - dimensional , in that they are concerned with replacing a string of characters or letters .",
    "many attempts to define multi - dimensional rewriting systems came up short in application and execution , but ehrig , pfender , and scheider developed a categorical approach using graph morphisms and pushouts @xcite that has since been studied extensively .",
    "this approach came to be known as _",
    "double pushout graph rewriting_. this is what we are interested in and will consider in our bicategory @xmath12 introduced below .    here",
    "is how double pushout graph rewriting works .",
    "a _ production _ is a span @xmath154 of graphs with monic legs .",
    "some authors call this a ` linear production ' to distinguish from spans with potentially non - monic legs , but we will not adopt this convention here . given a production @xmath113 , and a graph morphism @xmath155 , called a _ matching map _ , such that there exists a diagram @xmath156 consisting of two pushout squares , we say that that @xmath51 is a _ direct derivation _ of @xmath144 and write @xmath157 or just @xmath158 .",
    "it is common enough to decorate the arrow ` @xmath159 ' with more information : for instance , the name of the production or the matching map .",
    "but that will not be necessary here .",
    "observe that the objects @xmath160 and @xmath51 need not exist , but when they do , they are unique up to isomorphism ( * ? ? ?",
    "* lemma 4.5 ) .    a _ grammar _",
    "@xmath161 is a set of graphs @xmath162 paired with a set of productions @xmath163 .",
    "derivation of the grammar _ is a string of direct derivations @xmath164 from productions in @xmath163 and with @xmath165 .",
    "we say that @xmath166 is a _ rewrite of @xmath167_. the _ language _ @xmath168 generated by the grammar is the collection of all graphs @xmath169 such that there is a derivation @xmath170 of the grammar .",
    "the idea is that one will study a language .",
    "exactly what properties are interesting is beyond the scope of this discussion .",
    "interested readers should consult the references mentioned at the beginning of this section . instead of going deeper into the subject",
    ", we will briefly zoom out . searching for a general framework for term graph rewriting , lack and sobocinski @xcite introduced a class of categories they call _ adhesive_. roughly",
    ", a category is adhesive if it has pullbacks , pushouts along monomorphisms , and certain exactness conditions between pullbacks and pushouts hold .",
    "this is not a trivial class of categories given that topoi are adhesive @xcite .",
    "because of this , we were able to use the following lemmas , which were proven for adhesive categories , in our construction .",
    "however , we will just present them for topoi .",
    "[ lem.adhesive properties ] in a topos , monomorphisms are stable under pushout . also , pushouts along monomorphisms are pullbacks .",
    "[ lem.vk dual ] in a topos , consider a cube @xmath171 whose top and bottom faces consist of only monomorphisms . if the top face is a pullback and the front faces are pushouts ,",
    "then the bottom face is a pullback if and only if the back faces are pushouts .",
    "a good portion of the theory for double pushout graph rewriting has been extended to adhesive categories .",
    "so , while our focus is and will be on double pushout graph rewriting , there may be variations of the bicatgory @xmath12 ( introduced below ) that are of interest to computer scientists .",
    "for instance , the _ schanuel topos _ was used to model the @xmath172-calculus @xcite and adhesive categories allow us to extend rewriting to such settings .",
    "our contribution is a bicategorical framework to house the rewriting as @xmath4-cells , though only for double pushout graph rewriting .      here",
    ", we introduce the bicategory @xmath12 as promised . to prepare ,",
    "we begin by introducing a slight generalization of the double pushout graph rewriting concepts discussed above .",
    "@xmath173 is a pair of discrete graphs and a _ production with interface _ @xmath173 , or simply _ @xmath173-production _ , is a cospan of spans @xmath174 think of @xmath2 and @xmath3 as choosing inputs and outputs .",
    "given a production with interface @xmath173 , we say that a graph @xmath175 is a _",
    "direct @xmath173-derivation _ of @xmath169 if there is a diagram @xmath176 where the bottom squares are pushouts .",
    "we denote this as @xmath177 .",
    "an _ @xmath173-grammar _ @xmath161 consists of a collection of graphs @xmath162 and another of @xmath173-productions @xmath163 .",
    "again , an @xmath173-grammar generates a language consisting of all graphs @xmath169 such that there is a chain of direct @xmath173-derivations @xmath178 from @xmath163 such that @xmath165 .",
    "however , this time , we require such a chain to respect the inputs and outputs in the sense that @xmath179 now we can put these productions with interfaces into our bicategorical framework .    consider the full sub - bicategory of @xmath123 for @xmath180 with objects the finite , discrete graphs . here , a @xmath9-cell is a cospan @xmath181 where @xmath169 is a graph and @xmath2 , @xmath3 are discrete graphs .",
    "a @xmath4-cell between @xmath9-cells @xmath175 and @xmath182 is a span of cospans @xmath183 which we think of as an @xmath173-derivation @xmath184 .",
    "we will call this sub - bicategory @xmath12 because the @xmath4-cells are exactly all the possible ways to rewrite one graph into another so that inputs and outputs are preserved .",
    "given any @xmath4-cell @xmath183 in @xmath12 , then the diagram @xmath185 gives an @xmath173-derivation @xmath186 .",
    "conversely , any @xmath173-derivation can be made into composable @xmath4-cells @xmath187 where the maps from @xmath2 and @xmath3 are the evident composites .",
    "then , the vertical composition of the resulting @xmath4-cells gives us the desired span of cospans .",
    "to better illustrate this , we will provide a concrete example of the dictionary between @xmath12 and double pushout graph rewriting .",
    "suppose we were given an @xmath173-derivation , with @xmath188 , induced from the following double pushout graph rewriting diagram @xmath189 where the functions are described by the labeling , the inputs are circled , and the outputs are squared . in words , we have rewritten the graph on the lower left by remove an edge @xmath190 and adding a loop @xmath191 .",
    "the pull back of the span @xmath192 is the graph @xmath193 the corresponding @xmath4-cell is the diagram @xmath194 here we witness the advantage that graph rewriting has over graph morphisms in the realm of expresivity",
    ". there is no way to replace the @xmath4-cell above with a map of graph cospans .",
    "there is nothing inherently special , from a mathematical point of view , about working with graphs and their morphisms .",
    "it is in applications where graphs gain importance .",
    "we can actually create categories analogous to @xmath12 with any topos .",
    "our primary motivation for constructing this bicategory is as a way to study the gluing of graphs together in a way compatible with chosen input and output nodes . to this end",
    ", we defined a bicategory @xmath12 .",
    "this is a very large bicategory and in practice , one begins with a grammar and studies the resulting language .",
    "so , in an upcoming collaboration with kenny courser , we will look at relating languages to sub - bicategories of @xmath12 generated by a grammar . in this same paper",
    ", we will study the structure of @xmath10 alongside similar bicategories .",
    "h.  ehrig , m.  pfender , and h.  j. schneider .",
    "graph - grammars : an algebraic approach . in _",
    "switching and automata theory , 1973 .",
    "ieee conference record of 14th annual symposium on _ , pages 167180 .",
    "ieee , 1973 .",
    "s.  lack and p.  sobociski .",
    "adhesive categories . in _ foundations of software science and computation structures _ , volume 2987 of _ lecture notes in comput .",
    "_ , pages 273288 .",
    "springer , berlin , 2004 .",
    "available at ftp://ftp.daimi.au.dk/brics/rs/03/31/brics-rs-03-31.pdf .",
    "s.  lack and p.  sobociski .",
    "toposes are adhesive . in _ graph transformations _ ,",
    "volume 4178 of _ lecture notes in comput .",
    "_ , pages 184198 .",
    "springer , berlin , 2006 .",
    "available at http://users.ecs.soton.ac.uk/ps/papers/toposesadhesive.pdf .",
    "r.  rosebrugh , n.  sabadini , and r.  f. walters . calculating colimits compositionally . in _",
    "concurrency , graphs and models _ , pages 581592 .",
    "springer , 2008 .",
    "available as https://arxiv.org/abs/0712.2525[arxiv:0712.2525 ] ."
  ],
  "abstract_text": [
    "<S> we explore the notion of a span of cospans and define , for them , horizonal and vertical composition . </S>",
    "<S> these compositions satisfy the interchange law if working in a topos @xmath0 and if the span legs are monic . a bicategory is then constructed from @xmath0-objects , @xmath0-cospans , and doubly monic spans of @xmath0-cospans . </S>",
    "<S> the primary motivation for this construction is an application to graph rewriting . </S>"
  ]
}
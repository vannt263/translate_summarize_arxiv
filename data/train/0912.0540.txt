{
  "article_text": [
    "the main technical ingredient of the spin - foam models of 4-dimensional gravity is so called quantum simplicity constraint . imposing suitably defined constraint on the domain of the ( discrete ) path integral turns the su(2)@xmath2su(2 ) ( or sl(2,c ) ) bf theory into the spin - foam model of the euclidean ( respectively , lorentzian ) gravity @xcite .",
    "the formulation of the simplicity constraint believed to be correct , or at least fitting gravity the best among the known approaches @xcite , is the one derived by engle , pereira , rovelli , livine ( eprl ) @xcite ( and independently derived by freidel and krasnov @xcite ) .",
    "the solutions to the eprl simplicity constraint are eprl su(2)@xmath2su(2 ) intertwiners .",
    "they are defined by the eprl transformation , which maps each su(2 ) intertwiner into a eprl solution of the simplicity constraint .",
    "an attempt is made in the literature @xcite to parametrize the space of the eprl solutions by the su(2 ) intertwiners .",
    "the vertex amplitude and the partition function of the eprl model seem to written in in terms of that parametrization .",
    "the questions we raise and answer in this paper are :    * is the eprl map injective , does nt it kill any su(2 ) intertwiner ? * is the eprl map isometric , does it preserve the scalar product between the su(2 ) intertwiners ? * if not , what is a form of a partition function derived from the so(4 ) intertwiner hilbert product written directly in terms of the su(2 ) intertwiners , the preimages of the eprl map ?    we prove that the eprl map is injective for n - valent vertex in case when it is a map from @xmath0 into @xmath1 representations .",
    "the full proof of injectivity of eprl map ( without additional assumptions from this paper ) in the case @xmath3 has already been provided in @xcite . in those cases , there are as many su(2)@xmath2su(2 ) eprl intertwiners as there are the su(2 ) intertwiners .",
    "owing to this result the su(2 ) intertwiners indeed can be used to parametrize the space of the eprl su(2)@xmath2su(2)intertwiners .",
    "however , we find the eprl map is not isometric . in consequence , there are two inequivalent definitions of the partition function .",
    "one possibility is to use a basis in the eprl intertwiners space orthonormal with respect to the so(4 ) representations . and",
    "this is what we do in this paper .",
    "a second possibility , is to use the basis obtained as the image of an orthonormal basis of the su(2 ) intertwiners under the eprl map .",
    "the partition function derived in @xcite corresponds to the second choice , whereas the first one is ignored therein .",
    "the goal of this part of our paper is pointing out the first possibility and deriving the corresponding partition function .",
    "after the derivation , we compare our partition function with that of eprl on a possibly simple example .",
    "we conjecture , that the difference converges to zero for large spins .    to make the paper intelligible we start presentation of the new results with the derivation of the partition function in section [ problem ] . the final formula for our proposal for the partition function for the eprl model is presented in section [ solution ]",
    "the lack of the isometricity of the eprl map is illustrated on specific examples in section [ example ] .",
    "finally , the proof of the injectivity of the eprl map takes all the section [ proof ] .",
    "this work is written in terms of the eprl framework @xcite combined with our previous paper @xcite on the eprl model .",
    "consider an oriented 2-complex @xmath4 whose faces ( 2-cells ) are labeled by @xmath5 with the irreducible representations of @xmath6su(2)@xmath2su(2 ) , @xmath7 and denote by @xmath8 the corresponding hilbert space .",
    "for every edge ( 1-cell ) @xmath9 we have the set / set of incoming / outgoing faces , that is the faces which contain @xmath9 and whose orientation agrees / disagrees with the orientation of @xmath9 .",
    "we use them to define the hilbert space ( e )  =  _ f",
    "incomingh(f)_f  outgoingh(f)^*. the extra data we use , is a subspace ( e)^simple  h(e)[simple]defined by some constraints called the quantum simplicity constraints . in this paper ,",
    "starting from section below , we will be considering the subspace proposed by engle - pereira - rovelli - livine . for the time being @xmath10 is any subspace of the space of invariants of the representation @xmath11 , ( e)^simple  inv_su(2)su(2)(_f  incomingh(f)_f  outgoingh(f)^ * ) .",
    "( the subspace @xmath12 may be trivial for generic representations @xmath13 and @xmath14 .",
    "typically the simplicity constraints constrain also the representations themselves . ) to every edge we assign the operator of the orthogonal projection onto @xmath15 , p_e^simple  :  _ f  incomingh(f)_f  outgoingh(f)^ *   _ f",
    "incomingh(f)_f  outgoingh(f)^*our index notation is as follows ( we drop ` simple ' for simplicity ) ( p_ev)^a ... _b ...  =  p_e^a ... b ... _a ... b ... v^a ... _b ... where the upper / lower indices of any vector @xmath16 correspond to incoming / outgoing faces . in the operator @xmath17 , for each face containing @xmath9 , there are two indices , an upper and a lower one corresponding to the hilbert space @xmath8 . if @xmath18 is incoming ( outgoing ) , then we assign the corresponding lower / upper index of @xmath17 to the beginning / end ( end / beginning ) of the edge .",
    "that rule is illustrated on fig .",
    "[ contraction ] .",
    "( @xmath19 ) contained in incoming ( outgoing ) face @xmath18 , the indices of @xmath17 ( @xmath20 ) corresponding to @xmath8 are assigned to the beginning and , respectively , to the end of the edge .",
    "the oriented arc only marks the orientation of the polygonal face @xmath18 . ]    [ contraction ]    now , for every pair of edges @xmath9 and @xmath19 , which belong to a same face @xmath18 , and share a vertex @xmath21 , there is defined the natural contraction at @xmath21 of the corresponding vertex of @xmath17 with the corresponding vertex of @xmath20 .",
    "the contraction defines the following trace , _",
    "e^(1)p_e^simple  tr(_e^(1)p_e^simple).[tr ] define partition function @xmath22 to be the following number : z ( , )  : =  _ f^(2)d(f ) tr(_e^(1)p_e^simple)a(boundary ) ,  d(f )  : =  dimh(f)[zp ] where @xmath23 is a factor that depends only on the boundary of @xmath24 , and we derive it elsewhere .",
    "the partition function is usually rewritten in the spin - foam amplitude form @xcite . for that purpose",
    "one needs an orthonormal basis in each hilbert space @xmath15 ; denote its elements by @xmath25 , @xmath26",
    ". then p_e^simple  =  _ = 1^n_e_e,^_e,[unity ] where by @xmath27 , for every hilbert space @xmath28 we denote the duality map @xmath29 defined by the hilbert scalar product . in the dirac notation @xmath30 substituting the right hand side of ( [ unity ] ) for each @xmath31 in ( [ zp ] ) , one writes the partition function in terms of the vertex amplitudes in the following way :    * for each edge of @xmath4 choose an element of the corresponding orthonormal basis ; denote this assignment by  :  e  _ e,_e[iota ] * at each vertex @xmath32 : * * take @xmath33 where @xmath34 are the incoming edges * * take @xmath35 where @xmath36 are the outgoing edges * * define the vertex amplitude a_v ( )  : =  tr(_e_1,_1 ... _e_m,_m _ e_1,_1^ ... _e_m,_m^ ) where ` tr ' stands for the contraction ( [ tr ] ) and can be defined by the evaluation of the spin - networks corresponding to the vertices ( see @xcite ) . * to each face @xmath18 assign the face amplitude @xmath37    with this data , with the vertex amplitudes and face amplitudes , the partition function takes the famous form z ( , )  =   _ f^(2)d(f)__v^(0)a_v()a(boundary),[za ] the result is independent of the choice of the orthonormal basis of each @xmath38 .",
    "now we turn to the eprl intertwiners . for every edge @xmath39 ( e)^simple  =   h(e)^eprl ,   p(e)^simple  =   p(e)^eprl .",
    "the definition of @xmath40 uses a fixed number @xmath41 called barbero - immirzi parameter .",
    "the hilbert space @xmath40 can be non - empty only if the 2-complex @xmath4 is labeled by eprl representations .",
    "a representation @xmath42 of su(2)@xmath2su(2 ) , where @xmath43 define the su(2 ) representations in the usual way , is an eprl representation , provided there is @xmath44 such that j^  =  k.[k]therefore , we will be considering here labellings of the faces of the 2-complex @xmath4 with eprl representations f  ( f )  =  ( _ j^-(f),_j^+(f ) ) , each of which is defined in the hilbert space @xmath45 each labeling defines also a labeling with su(2 ) representations given by ( [ k ] ) , f  _ k(f ) , defined in the hilbert space @xmath46 .",
    "given an edge @xmath9 and the corresponding hilbert space ( e )  =  _ f  incomingh_j^-(f)_j^+(f ) _",
    "f  outgoingh_j^-(f)^*_j^+(f)^*[he ] , the natural isometric embeddings c  :  h_k  _ j^-_j^+and the orthogonal projection operator p :  h(e )  ( e ) onto the subspace @xmath47 defines the natural map , the eprl map : @xmath48 its image is promoted to the hilbert space ( [ simple ] ) , _",
    "e^eprl  : =  ^eprl ( inv_su(2 ) ( _ f  incomingh_k(f)_f  outgoingh_k(f)^ * ) ) .",
    "all the eprl intertwiners can be constructed from the su(2 ) intertwiners by using the eprl map .",
    "the point is , that one has to be more careful while doing that .",
    "first , one has to make sure that the map @xmath49 is injective . if not , then hilbert space of the su(2)@xmath2su(2 )",
    "eprl intertwiners is smaller then the corresponding space of the su(2 ) intertwiners and we should know how big it is . for @xmath50 , the injectivity was proved in @xcite . in the next section we present a proof of the injectivity for @xmath51 .",
    "secondly , one should check whether or not the map @xmath49 is isometric .",
    "given an orthonormal basis @xmath52 of the hilbert space @xmath53 , we have a corresponding basis + @xmath54 of the corresponding hilbert space @xmath55 .",
    "the question is , whether or not the latter basis is also orthonormal .",
    "we show in section [ example ] , this is not the case . the direct procedure would be to orthonormalize the basis .",
    "we propose , however , a simpler solution .",
    "an intelligent way , is to go back to the formula ( [ zp ] ) for the partition function and repeat the step leading to ( [ za ] ) with each projection @xmath56 written in terms of the corresponding basis @xmath57 .",
    "the suitable formula reads p_e^eprl",
    "=  _ a , b=1^n_e h_e^a|b^eprl(i_e , a)(i_e , b)^[peprl ] where @xmath58 , @xmath59 define the inverse matrix to the matrix h_e,|ba  : =  ( ^eprl(i_e , b)|^eprl(i_e , a))[h]given by the hilbert product @xmath60 in the hilbert space ( [ he ] ) .",
    "( in the dirac notation , @xmath61 . )",
    "now , we are in a position to write the resulting spin - foam amplitude formula for the partition function . it is assigned to a fixed 2-complex @xmath4 and a fixed labeling of the faces by the eprl representations f  ( f )  =  ( _ j^-_f,_j^+_f ) .",
    "the labeling is accompanied by the corresponding labeling with the su(2 ) i f  _ k_f , according to ( [ k ] ) . for every edge @xmath62 , in addition to the hilbert space @xmath63",
    ", we also have its preimage , the hilbert space ( _ f  incomingh_(k_f)_f  outgoingh_k_f^ * ) .",
    "therein , we fix an orthonormal basis i_e , a ,  a  =  1,2, ... ,n_e . to define the partition function we proceed as follows :    * assign to every edge of @xmath4 a pair of elements of the basis , ii : e  ( i_e , a_e , i_e , b_e^ ) ,",
    "more specifically , @xmath64 is assigned to the end point and @xmath65 to the beginning point of @xmath9 , and we denote the assignment by the double symbol @xmath66 ; * define for every edge an edge amplitude to be @xmath67 * to every vertex @xmath21 of @xmath4 assign the vertex amplitude with the trace defined by fig.1 , ( [ tr ] ) and ( [ peprl ] ) @xmath68 * to every face @xmath18 assign the amplitude @xmath69    finally , the spin - foam amplitude formula for the partition function reads z ( , )  =  _ f d_f _ ii _",
    "eh_e(ii)_v a_v(ii)a(boundary).[pffinal ]    the matrix ( [ h ] ) can be written in terms of the eprl fusion coefficients , ( i_e , a )  = :  f_e_a^c^-c^+_e , c^-_e , c^+ , defined by the decomposition into an orthonormal basis @xmath70 in + @xmath71 + then , we have h_e,|ab  =  _ c^+,c^-_b^c^-c^+ .",
    "we are in a position now , to compare our partition function with that of @xcite .",
    "the partition function of @xcite is given by replacing the matrix @xmath72 in ( [ pffinal ] ) with @xmath73 .",
    "the example below gives quantitative idea about the difference between the two possible definitions of partition function for the eprl model .",
    "we will show in this section , that the eprl map is not isometric .",
    "we calculate the edge amplitude defined in the previous section in a simple example , and see that its matrix is not proportional to the identity matrix , or even not diagonal . consider an edge at which exactly four faces meet .",
    "assume the orientation of each face is opposite to the orientation of the edge .",
    "we have an intertwiner @xmath75 assigned to the end point of this edge .",
    "we choose a basis @xmath76 ( the eigenvector of the third component of angular momentum operator with eigenvalue @xmath77 ) in each space @xmath78 , @xmath79 .",
    "we choose a real basis of the space @xmath80 in the following form @xcite : @xmath81 where @xmath82 is the wigner 3j - symbol , @xmath83 is the kronecker delta .",
    "+ let @xmath84 be the basis of the space @xmath85 .",
    "the intertwiner @xmath86 expressed in this basis takes the following form ( we skip in this section the subscript @xmath9 indicating the dependence on edge ) : @xmath87 where @xmath88 are real and are known as fusion coefficients @xcite .",
    "the tensor @xmath89 could be expressed in terms of them : @xmath90 as an example we give the result of the calculation of the @xmath91 matrix for @xmath92 ) : @xmath93 we used the analytic expression for the fusion coefficient presented in @xcite .",
    "clearly this matrix is nondiagonal .",
    "it shows that the eprl map is not isometric .",
    "the edge amplitude @xmath94 is given by the inverse matrix : @xmath95 +",
    "( 2,1)[bl ] ( 0,0)(1,0)1.5 ( 0,0)(0,1)0.8 ( 1.5,0)(0,1)0.8 ( 0,0.8)(1,0)1.5 ( 0.5,0.2)@xmath97 this part of the paper is devoted to the injectivity of eprl intertwiner .",
    "more explicitly , we will prove the result stated in [ inj - eprl ] .",
    "we assume that @xmath98 and @xmath99 .",
    "suppose that @xmath100 we consider the eprl map @xmath101 with @xmath97 standing for the orthogonal projections onto the subspaces of the su(2 ) invariants of the hilbert spaces @xmath102 , and respectively , @xmath103 .",
    "now we can state our result .",
    "[ inj - eprl ] for any sequence @xmath104 such that @xmath105 , the map @xmath106 is injective .",
    "in other words we consider here the case , when the eprl map carries so(3 ) representations into so(3 ) x so(3 ) representations .      in order to make the proof transparent , we divide it into subsections . in subsection",
    "[ inj - aux ] some auxiliary definitions are introduced .",
    "we state also an inductive hypothesis , that will be proved in subsection [ inj - proof ] .",
    "the injectivity of eprl map follows from that result .",
    "the main technical tool of the proof is placed in subsection [ inj - map ] , where the map [ mapg ] is defined .",
    "let us introduce some notations    for @xmath107 we define    * @xmath108 as the only integer number in the interval @xmath109 $ ] * @xmath110 as the only integer number in the interval @xmath111    and    a sequence of half natural numbers @xmath112 satisfies _ triangle inequality _",
    "if @xmath113    one can define map @xmath114 under conditioncon @xmath115 : * sequences of natural numbers @xmath112 and @xmath116 are such that    * @xmath112 satisfies triangle inequality , * @xmath117 for @xmath118 , * @xmath119 for @xmath120 and @xmath121 or @xmathlet us define @xmath123 with @xmath97 standing for projections onto invariant subspaces .",
    "we will use the letter @xmath124 for all sequences @xmath125 , @xmath126 if it do not cause any misunderstanding .",
    "we will base our prove on the following inductive hypothesishyp @xmath115 : * suppose that @xmath112 and @xmath116 satisfy condition * con @xmath115 * and that @xmath127 .",
    "then , there exists @xmath128 such that @xmath129 . _",
this in fact proves the injectivity .",
    "both @xmath130 are increasing functions and satisfy ( @xmath131 , @xmath132 )    * @xmath133 and @xmath134 , * if @xmath135 then @xmath136 and if @xmath137 then @xmath138 * if @xmath139 then @xmath140 * if @xmath141 then @xmath142    in order to prove the last point , we notice that @xmath143 and @xmath144 so @xmath145 but as @xmath146 is an integer number @xmath142 .    [ triangle ] suppose that @xmath147 satisfies triangle inequality and that @xmath148 then    * both triples @xmath149 satisfy triangle inequalities if @xmath150 or @xmath151 * both triples @xmath152 satisfy triangle inequalities if @xmath153 and @xmath154 .    in the first case",
    "suppose that @xmath150 holds , then @xmath155 that proves triangle inequality .",
    "in the second case , we restrict our attention to @xmath156 .",
    "we have    * @xmath157 because @xmath158 , * @xmath159 because @xmath160 , * @xmath161 from the property d ) listed above .",
    "the case of @xmath162 is analogous .",
    "[ triangle2 ] suppose that @xmath125 satisfies triangle inequality and that @xmath163 for @xmath164 , then @xmath165 also satisfy triangle inequalities .",
    "that follows from the monotonicity of functions @xmath130 and the fact that in the inequality @xmath166 all terms but one are integer .",
    "suppose that @xmath104 satisfies triangle inequality then @xmath167 is nontrivial .",
    "we will find an @xmath168 such that both @xmath169 and @xmath170 satisfy triangle inequalities .",
    "we then have @xmath171 and @xmath172 . by induction",
    "there would be @xmath173 and then @xmath174 proves nontriviality .",
    "now we extract conditions on @xmath175 from triangle inequalities ( we assume for simplicity that @xmath176 ) @xmath177 for the existence of such @xmath175 we need only to show that @xmath178 but these are exactly conditions for @xmath112 to satisfy triangle inequality .",
    "every @xmath179 may be uniquely written as @xmath180 where @xmath181 .",
    "summation is taken over such @xmath175 that @xmath169 and @xmath182 satisfy triangle inequality , @xmath171 .",
    "this gives us decomposition of @xmath183 into orthogonal subspaces @xmath184 where each @xmath185 is isomorphic to @xmath186 .",
    "let us define maps which assign these partial isometries @xmath187 adjoints to them are embeddings @xmath188 .",
    "@xmath189 these maps are also well defined in a case that @xmath190 does not occur in the decomposition @xmath191 but @xmath169 satisfies triangle inequalities . then the space @xmath186 is trivial and the maps @xmath192 and @xmath188 too .",
    "let us fix @xmath112 and @xmath116 satisfying triangle inequalities and such that @xmath117 .",
    "[ mapg ] suppose @xmath193 are such that @xmath194 and @xmath169 and @xmath195 satisfy triangle inequalities , @xmath171 , @xmath196",
    ". then there exists an operator @xmath197 such that for all @xmath198 and @xmath199 @xmath200    we define @xmath201 as @xmath202 with @xmath203 nonzero constant to be defined later .",
    "let us compute @xmath204 in the definition of @xmath114 one can skip projection because both @xmath205 and @xmath206 are invariants .",
    "let us write explicitly @xmath207 .",
    "we have @xmath208 we need only to show that @xmath209 the second equality is obvious because there exists no intertwiner if @xmath210 .",
    "the first will be proved in the next subsection [ relint ] .",
    "we know that @xmath211 is proportional to @xmath212 . in order to prove that the factor of proportionality is nonzero we will show that @xmath213 and that would be @xmath214 .",
    "in fact it is enough to show that the intertwiner @xmath215 is not equal zero or equivalently the same for @xmath216 we only sketch the proof .",
    "first of all , we remind some facts about intertwiners and diagrammatic notation .",
    "let @xmath217 stands for projection onto symmetric subspace in @xmath218 equivalent to @xmath219 ( @xmath220 is a half natural number ) .",
    "@xmath221 in this subsection we regard @xmath219 as this subspace of @xmath218 .",
    "let us also denote the canonical map @xmath222 .",
the intertwiner @xmath223 is _ proportional _ to @xmathin the diagrammatic language this can be depicted as on figure [ cint_0 ] .",
    "we skip the index @xmath220 in @xmath217 on the diagrams for notations brevity .",
    "the line with symbol @xmath220 denotes @xmath218 .",
    "( 4.5,3.8 ) ( 0,0.5 ) ( 3,0.5 ) ( 1.5,2.5 ) ( 0,0)(0.5,1.3)(0.5,1.8)(1,1.8 ) ( 0,0)(1,1.8)(2,1.8)(2,2.5 ) ( 1,1.8)@xmath225 ( 0,0)(4,1.3)(4,1.8)(3.5,1.8 ) ( 0,0)(3.5,1.8)(2.5,1.8)(2.5,2.5 ) ( 3.5,1.8)@xmath226 ( 0,0)(1,1.3)(1,1.6)(2.2,1.6 ) ( 0,0)(2.2,1.6)(3.5,1.6)(3.5,1.3 ) ( 2.2,1.6)@xmath227 ( 0,0)(0.7,0)(0.7,0.1)(0.7,0.1 ) ( 0,0)(0.7,0.1)(0.7,0.1)(0.7,0.5 ) ( 0.7,0.1)@xmath228 ( 0,0)(3.7,0)(3.7,0.1)(3.7,0.1 ) ( 0,0)(3.7,0.1)(3.7,0.1)(3.7,0.5 ) ( 3.7,0.1)@xmath229 ( 0,0)(2.3,3.3)(2.3,3.4)(2.3,3.4 ) ( 0,0)(2.3,3.4)(2.3,3.4)(2.3,3.8 ) ( 2.3,3.4)@xmath230    [ cint_0 ]    we have to notice important properties , that in diagrammatic language is shown on figures [ cint_1 ] and [ cint_2 ] .",
    "( 2.5,2 ) ( 0,0)(0,0)(0,1)(0,1 ) ( 0,0)(0,1)(0,1)(0,2 ) ( 0,1)@xmath230 ( 0,0)(0.8,0)(0.8,1)(0.8,1 ) ( 0,0)(0.8,1)(0.8,1)(0.8,2 ) ( 0.8,1)@xmath228 ( 1.6,1)@xmath231 ( 0,0)(2.2,0)(2.2,1)(2.2,1 ) ( 0,0)(2.2,1)(2.2,1)(2.2,2 ) ( 2.2,1)@xmath232    [ cint_1 ]    ( 4,4.5 ) ( 0,0)(0.5,0)(0.5,0.3)(0.5,0.3 ) ( 0,0)(0.5,0.3)(0.5,0.3)(0.5,1 ) ( 0.5,0.3)@xmath230 ( 0,0)(0.5,1.8)(0.5,2.1)(0.5,2.1 ) ( 0,0)(0.5,2.1)(0.5,2.1)(0.5,2.8 ) ( 0.5,2.1)@xmath230 ( 0,0)(0.5,3.6)(0.5,4)(0.5,4 ) ( 0,0)(0.5,4)(0.5,4)(0.5,4.5 ) ( 0.5,4)@xmath230 ( 0,0)(0.8,1.8)(0.8,2.1)(0.8,2.1 ) ( 0,0)(0.8,2.1)(0.8,2.1)(0.8,2.8 ) ( 0.8,2.1)@xmath228 ( 0,0)(0.8,0)(0.8,0.3)(0.8,0.3 ) ( 0,0)(0.8,0.3)(0.8,0.3)(0.8,1 ) ( 0.8,0.3)@xmath228 ( 0,0)(0.8,3.6)(0.8,4)(0.8,4 ) ( 0,0)(0.8,4)(0.8,4)(0.8,4.5 ) ( 0.8,4)@xmath228 ( 0,0)(1.1,0)(1.1,0.3)(1.1,0.3 ) ( 0,0)(1.1,0.3)(1.1,0.3)(1.1,1 ) ( 1.1,0.3)@xmath229 ( 0,0)(1.1,1.8)(1.1,2.4)(1.8,2.4 ) ( 0,0)(1.8,2.4)(2.2,2.4)(2.2,4.5 ) ( 1.8,2.4)@xmath229 ( 0,1 ) ( 0,2.8 ) ( 2.2,2.2)@xmath231 ( 0,0)(3.5,1)(3.5,1.3)(3.5,1.3 ) ( 0,0)(3.5,1.3)(3.5,1.3)(3.5,2 ) ( 3.5,1.3)@xmath230 ( 0,0)(3.8,1)(3.8,1.3)(3.8,1.3 ) ( 0,0)(3.8,1.3)(3.8,1.3)(3.8,2 ) ( 3.8,1.3)@xmath228 ( 0,0)(4.1,1)(4.1,1.3)(4.1,1.3 ) ( 0,0)(4.1,1.3)(4.1,1.3)(4.1,2 ) ( 4.1,1.3)@xmath229 ( 0,0)(3.5,2.8)(3.5,3.1)(3.5,3.1 ) ( 0,0)(3.5,3.1)(3.5,3.1)(3.5,3.8 ) ( 3.5,3.1)@xmath230 ( 0,0)(3.8,2.8)(3.8,3.1)(3.8,3.1 ) ( 0,0)(3.8,3.1)(3.8,3.1)(3.8,3.8 ) ( 3.8,3.1)@xmath228 ( 0,0)(4.1,2.8)(4.1,3.1)(4.1,3.1 ) ( 0,0)(4.1,3.1)(4.1,3.1)(4.1,3.8 ) ( 4.1,3.1)@xmath229 ( 3,2 )    [ cint_2 ]    our intertwiner can be written as shown on the figure [ cint_4 ] .    ( 5.5,7.3 ) ( 0,2.5 ) ( 3,2.5 ) ( 1.5,4.5 ) ( 0,0)(0.5,3.3)(0.5,3.8)(1,3.8 ) ( 0,0)(1,3.8)(2,3.8)(2,4.5 ) ( 1,3.8)@xmath233 ( 0,0)(4,3.3)(4,3.8)(3.5,3.8 ) ( 0,0)(3.5,3.8)(2.5,3.8)(2.5,4.5 ) ( 3.5,3.8)@xmath234 ( 0,0)(1,3.3)(1,3.8)(2.2,3.8 ) ( 0,0)(2.2,3.8)(3.5,3.8)(3.5,3.3 ) ( 2.2,3.8)@xmath235 ( 1.5,2 ) ( 4.5,2 ) ( 3.7,4.5 ) ( 0,0)(2.2,2.8)(2.2,4.2)(3.3,4.2 ) ( 0,0)(3.3,4.2)(4.2,4.2)(4.2,4.5 ) ( 3.3,4.2)@xmath236 ( 0,0)(5.5,2.8)(5.5,3.3)(5,3.3 ) ( 0,0)(5,3.3)(4.7,3.3)(4.7,4.5 ) ( 5,3.3)@xmath237 ( 0,0)(2.5,2.8)(2.5,3)(3.7,3 ) ( 0,0)(3.7,3)(5,3)(5,2.8 ) ( 3.7,3)@xmath238 ( 0,0.5 ) ( 0,0)(0.5,1.3)(0.5,2)(0.5,2 ) ( 0,0)(0.5,2)(0.5,2)(0.5,2.5 ) ( 0.5,2)@xmath239 ( 0,0)(1,1.3)(1,1.5)(1.5,1.5 ) ( 0,0)(1.5,1.5)(2,1.5)(2,2 ) ( 1.5,1.5)@xmath240 ( 3,0.5 ) ( 0,0)(3.5,1.3)(3.5,1.8)(3.5,1.8 ) ( 0,0)(3.5,1.8)(3.5,1.8)(3.5,2.5 ) ( 3.5,1.8)@xmath241 ( 0,0)(4,1.3)(4,1.5)(4.5,1.5 ) ( 0,0)(4.5,1.5)(5,1.5)(5,2 ) ( 4.5,1.5)@xmath242 ( 2.2,6 ) ( 0,0)(2.5,5.3)(2.5,5.5)(2.5,5.5 ) ( 0,0)(2.5,5.5)(2.5,5.5)(2.5,6 ) ( 2.5,5.5)@xmath243 ( 0,0)(4,5.3)(4,5.5)(3.7,5.5 ) ( 0,0)(3.7,5.5)(3.3,5.5)(3.3,6 ) ( 3.7,5.5)@xmath244 ( 0,0)(0.5,0)(0.5,0.1)(0.5,0.1 ) ( 0,0)(0.5,0.1)(0.5,0.1)(0.5,0.5 ) ( 0.5,0.1)@xmath245 ( 0,0)(3.3,0)(3.3,0.1)(3.3,0.1 ) ( 0,0)(3.3,0.1)(3.3,0.1)(3.3,0.5 ) ( 3.3,0.1)@xmath246 ( 0,0)(2.7,6.8)(2.7,7)(2.7,7 ) ( 0,0)(2.7,7)(2.7,7)(2.7,7.3 ) ( 2.7,7)@xmath230    [ cint_4 ]    now using properties mentioned earlier we see that one can merge @xmath247 with @xmath248 into @xmath249 and that intertwiner is equal to intertwiner shown on the figure [ cint_0 ] and is _",
    "nonzero_.      induction starts with @xmath250 . in this case @xmath251 and so also @xmath252 .",
    "the map @xmath253 is the identity .",
    "suppose now , that we have just proved * hyp @xmath254*.    in the decomposition of given @xmath179 into subspaces @xmath185 we choose minimal @xmath175 such that @xmath255 is nonzero . we know , by lemmas [ triangle ] and [ triangle2 ] that for either @xmath256 or for @xmath257 all necessary assumptions of lemma [ mapg ] are satisfied . from the * hyp @xmath254 * for the sequences @xmath258 , @xmath259 we know that there exists @xmath260 such that @xmath261 we have @xmath262 this finishes inductive step and the proof .",
    "we studied in this paper properties of the solutions to the eprl simplicity constraints which were derived in @xcite .",
    "we also pointed out two different possibilities of defining the partition function out of them .",
    "our definition is ( [ zp ] ) .",
    "it uses only the subspace of the so(4 ) intertwiners which solve the eprl simplicity constraint . the comparison and contrast between our definition and that of @xcite is provided by ( [ pffinal ] ) and the comments which follow that equality .",
    "the difference follows from the fact proven in section [ example ] above , that the eprl map that is not isometric .",
    "the example considered in that section gives also quantitative idea of the difference .",
    "the question of which definition of the partition function is correct can not be answered at this stage . finally , we studied the `` size of the space of the eprl solutions '' .",
    "we have shown that the eprl map does not kill those so(3 ) intertwiners , which are mapped into so(3)@xmath2so(3 ) intertwiners . the proof is presented in detail in section [ sec_inject ] .",
    "* acknowledgments * we would like to thank john barrett , jonathan engle for coming to warsaw and delivering lectures on the sfm .",
    "jl acknowledges the conversations with laurent freidel , and exchange of e - mails with john baez , carlo rovelli , roberto pereira and etera livine .",
    "mk would like to thank jonathan engle from albert einstein institute in potsdam and carlo rovelli , matteo smerlak from centre de physique theorique de luminy for discussions and hospitality during his visits at their institutes .",
    "the work was partially supported by the polish ministerstwo nauki i szkolnictwa wyzszego grants 182/nqgg/ 2008/0 , 2007 - 2010 research project n202 n081 32/1844 , the national science foundation ( nsf ) grant phy-0456913 , by the foundation for polish science grant master and a travel grant from the qg research networking programme of the european science foundation .",
    "99 engle j , livine e , pereira r , rovelli c ( 2008 ) , lqg vertex with finite immirzi parameter , _ nucl.phys . _",
    "* b799*:136 - 149 ( _ preprint _ gr - qc/0711.0146v2 ) engle j , pereira r and rovelli c ( 2008 ) , flipped spinfoam vertex and loop gravity , _ nucl.phys . _ * b798*:251 - 290 ( _ preprint _ gr - qc/0708.1236v1 ) + livine er , speziale s ( 2007 ) , a new spinfoam vertex for quantum gravity,_phys.rev .",
    "_ * d76*:084028 ( _ preprint _ gr - qc/0705.0674v2 ) freidel l , krasnov k ( 2008 ) , a new spin foam model for 4d gravity , _ class.quant.grav . _ * 25*:125018 ( _ preprint _",
    "gr - qc/0708.1595v2 ) kamiski w , kisielowski m , lewandowski j , spin - foams for all loop quantum gravity , arxiv:0909.0939v2 bianchi e , modesto l , rovelli c , speziale s ( 2006 ) , graviton propagator in loop quantum gravity _ class.quant.grav . _ * 23 * 6989 - 7028 ( _ preprint _",
    "gr - qc/0604044 ) + alesci e , rovelli c ( 2007 ) the complete lqg propagator : ii .",
    "asymptotic behavior of the vertex _ phys .",
    "_ * d77 * , pp .",
    "044024 , _ preprint : _",
    "arxiv:0711.1284 + alesci e , bianchi e , rovelli c ( 2008 ) lqg propagator : iii .",
    "the new vertex _ _",
    "preprint:__arxiv:0812.5018 + mamone d , rovelli c ( 2009 ) second - order amplitudes in loop quantum gravity _ preprint : _",
    "arxiv:0904.3730 + bianchi e , magliaro e , perini c ( 2009 ) , lqg propagator from the new spin foams , nuclear physics * b 822 * pp .",
    "245 - 269 , ( _ preprint _",
    "arxiv:0905.4082 ) reisenberger mp ( 1994 ) world sheet formulations of gauge theories and gravity _ preprint _ gr - qc/9412035 + reisenberger mp , rovelli c ( 1997 ) , `` sum over surfaces '' form of loop quantum gravity , _ phys.rev . _ * d56 * 3490 - 3508 ( _ preprint _",
    "gr - qc/9612035 ) baez j , ( 2000 ) an introduction to spinfoam models of bf theory and quantum gravity , _ lect.notes phys .",
    "_ * 543 * 25 - 94 ( _ preprint _ gr - qc/9905087v1 ) perez a ( 2003 ) , spinfoam models for quantum gravity , _ class.quant.grav . _",
    "* 20 * r43 ( _ preprint _ gr - qc/0301113v2 ) alesci e , bianchi e , magliaro e , perini c , asymptotics of lqg fusion coefficients , arxiv:0809.3718v2 alesci e , rovelli c ( 2007 ) , the complete lqg propagator i. difficulties with the barrett - crane vertex , _ phys.rev . _ * d76*:104012 , ( _ preprint _ gr - qc/0708.0883 ) muxin han , weiming huang , yongge ma , fundamental structure of loop quantum gravity , _ int.j.mod.phys . _",
    "* d16*:1397 - 1474,2007 ( _ preprint _ arxiv : gr - qc/0509064 ) holst s ( 1996 ) , barbero s hamiltonian derived from a generalised hilbert - palatini action , _ phys .",
    "rev . _ * d53 * 5966 - 5969 ,    barbero f ( 1996 ) , real ashtekar variables for lorentzian signature space - times , _ phys . rev . _",
    "* d51 * 55075510 + immirzi g",
    "( 1997 ) , quantum gravity and regge calculus , _ nucl .",
    "suppl . _ * 57 * 6572"
  ],
  "abstract_text": [
    "<S> * abstract  * do the su(2 ) intertwiners parametrize the space of the eprl solutions to the simplicity constraint ? </S>",
    "<S> what is a complete form of the partition function written in terms of this parametrization ? </S>",
    "<S> we prove that the eprl map is injective for n - valent vertex in case when it is a map from @xmath0 into @xmath1 representations . </S>",
    "<S> we find , however , that the eprl map is not isometric . in the consequence , </S>",
    "<S> a partition function can be defined either using the eprl intertwiners hilbert product or the su(2 ) intertwiners hilbert product . </S>",
    "<S> we use the eprl one and derive a new , complete formula for the partition function . </S>",
    "<S> next , we view it in terms of the su(2 ) intertwiners . </S>",
    "<S> the result , however , goes beyond the su(2 ) spin - foam models framework and the original eprl proposal . </S>"
  ]
}
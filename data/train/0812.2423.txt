{
  "article_text": [
    "the notion of a regular word language has ever played an important rle in computer science , as it constitutes a robust concept that enjoys manifold representations in terms of finite automata , regular expressions , monadic second - order logic , etc .",
    "generalizing regular languages towards richer classes and more expressive formalisms is often accompanied by the loss of robustness and decidability properties .",
    "it is , for example , well - known that the class of context - free languages , represented by pushdown automata , is not closed under complementation and that universality , equivalence , and inclusion are undecidable problems @xcite .    _",
    "visibly pushdown languages _ have been introduced by alur and madhusudan to overcome this deficiency while subsuming many interesting and useful context - free properties @xcite .",
    "visibly pushdown languages are represented by special pushdown automata whose stack operations are driven by the input . more precisely , the underlying alphabet of possible actions is partitioned into ( 1 ) call , ( 2 ) return , and ( 3 ) internal actions , which , when reading an action , indicates if ( 1 ) a stack symbol is pushed on the stack , ( 2 ) a stack symbol is read and popped from the stack , or ( 3 ) the stack is not touched at all , respectively .",
    "such a partition gives rise to a _ call - return alphabet_. though this limits the expressive power of pushdown automata , the such defined class of visibly pushdown languages is rich enough to model various interesting non - regular properties for program analysis .",
    "even more , this class preserves some important closure properties of regular languages , such as the closure under boolean operations , and it exhibits decidable problems , such as inclusion , that are undecidable in the context of general pushdown automata .",
    "last but not least , the visibly pushdown languages are captured by a monadic second - order logic that makes use of a binary nesting predicate .",
    "such a logic is suitable in the context of visibility , as the nesting structure of a word is uniquely determined , regardless of a particular run of the pushdown automaton .",
    "the logical characterization smoothly extends the classical theory of regular languages @xcite . for context - free languages , quantification over _ matchings _ , which are not implicitly given when we do not have visibility , is necessary to obtain a logical characterization @xcite .",
    "visibly pushdown automata with multiple stacks have been considered recently and independently by la torre , madhusudan , and parlato @xcite , as well as carotenuto , murano , and peron @xcite .",
    "the aim of these papers is to exploit the concept of visibility further to obtain even richer classes of non - regular languages while preserving important closure properties and decidability of verification - related problems such as emptiness and inclusion .    in @xcite ,",
    "the authors consider visibly pushdown automata with arbitrarily many stacks . to retain the nice properties of visibly pushdown automata with only one stack , the idea is to restrict the domain , i.e. , the possible inputs , to those words that can be divided into at most @xmath0 phases for a predefined @xmath0 . in every phase ,",
    "pop actions correspond to one and the same stack .",
    "these restricted visibly pushdown automata have a decidable emptiness problem , which is shown by a reduction to the emptiness problem for finite tree automata , and are closed under union , intersection , and complementation ( wrt .",
    "the domain of @xmath0-phase words ) .",
    "moreover , a word language is recognizable if , and only if , it can be defined in monadic second - order logic where the usual logic over words is expanded by a matching predicate that matches a push with its corresponding pop event . as mentioned above , such a matching is unique wrt .  the underlying call - return alphabet .",
    "the only negative result in this regard is that multi - stack visibly pushdown automata can not be determinized .",
    "the paper @xcite considers visibly pushdown automata with two stacks and call - return alphabets that appear more general than those of @xcite : any stack is associated with a partition of one and the same alphabet into call , return , and local transitions so that an action might be both a call action for the first stack and , at the same time , a return action for the second . in this way , both stacks can be worked on simultaneously .",
    "note that , if we restrict to the alphabets of @xcite where the stack alphabets are disjoint , the models from @xcite and @xcite coincide .",
    "carotenuto et al .",
    "show that the emptiness problem of their model is undecidable .",
    "their approach to gain decidability is to exclude simultaneous pop operations by introducing an ordering constraint on stacks , which is inspired by @xcite ( see also @xcite ) .",
    "more precisely , a pop operation on the second stack is only possible if the first stack is empty . under these restrictions ,",
    "the emptiness problem turns out to be decidable in polynomial time ( note that the number of stacks is fixed ) .    in this paper",
    ", we consider 2-stack visibly pushdown automata ( i.e. , visibly pushdown automata with two stacks ) where each action is exclusive to one of the stacks , unless we deal with an internal action , which does not affect the stacks at all .",
    "thus , we adopt the model of @xcite , though we have to restrict to two stacks for our main results .",
    "one of these results states that the corresponding language class is precisely characterized by the existential fragment of monadic second - order logic where a first - order kernel is preceded by a block of existentially quantified second - order variables . in a second step ,",
    "we show that the full monadic second - order logic is strictly more expressive than its existential fragment so that we conclude that 2-stack visibly pushdown automata are not closed under complementation .",
    "note that our model has an undecidable emptiness problem , as can be easily seen .",
    "the key technique in our proofs is to consider words over call - return alphabets as relational structures , called _ nested words _",
    "nested words augment ordinary words with a nesting relation that , as the logical atomic predicate mentioned above , relates push with corresponding pop events .",
    "more precisely , we consider a nested word to be a graph whose nodes are labeled with actions and are related in terms of a matching and an immediate - predecessor relation .",
    "we thus deal with structures of bounded degree : every node has at most two incoming edges ( one from the immediate predecessor and one from a push event if we deal with a pop event operating on the non - empty stack ) and , similarly , at most two outgoing edges . as there is a one - to - one correspondence between words and their nested counterpart , we may consider nested - word automata @xcite , which are equivalent to visibly pushdown automata but operate on the enriched word structures .",
    "there have been several notions of automata on graphs and partial orders @xcite that are similar to nested - word automata and have one idea in common : the state that is taken after executing some event depends on the states that have been visited in neighboring events .",
    "such defined automata may likewise operate on models for concurrent - systems executions such as mazurkiewicz traces @xcite and message sequence charts @xcite . in the framework of nested - word automata , to determine the state after executing a pop operation , we therefore have to consider both the state of the immediate - predecessor position and the state that had been reached after the execution of the corresponding push event . to obtain a logical characterization of nested - word automata over two stacks ,",
    "we adopt a technique from @xcite : for a natural number @xmath1 , we compute a nested - word automaton @xmath2 that computes the _ sphere _ of radius @xmath3 around any event @xmath4 , i.e. , the restriction of the input word to those events that have distance at most @xmath3 from @xmath4 .",
    "once we have this automaton , we can apply hanf s theorem , which states that satisfaction of a given first - order formula depends on the number of these local spheres counted up to a threshold that depends on the quantifier - nesting depth of the formula @xcite .",
    "this finally leads us to a logical characterization of 2-stack visibly pushdown automata in terms of existential monadic second - order logic . note that our construction of @xmath2 is close to the nontrivial technique applied in @xcite . in the context of nested words , however , the correctness proof is more complicated .",
    "the fact that we deal with two stacks only is crucial , and the construction fails as soon as a third stack comes into play .",
    "then , we exploit the concept of nested words to show that full monadic second - order logic is more expressive than its existential fragment .",
    "this is done by a first - order interpretation of nested words over two stacks into grids , for which the analogous result has been known @xcite .",
    "an extension of hanf s theorem has been established to cope with infinite structures @xcite .",
    "this allows us to apply the automaton @xmath2 to also obtain a logical characterization of the canonical extension of 2-stack visibly pushdown automata towards bchiautomata running on infinite words .",
    "[ [ outline - of - the - paper ] ] outline of the paper + + + + + + + + + + + + + + + + + + + +    in section  [ sec : mvpa ] , we introduce multi - stack visibly pushdown automata , running on words , as well as multi - stack nested - word automata , which operate on nested words .",
    "we establish expressive equivalence of these two models .",
    "section  [ sec : mso ] recalls monadic second - order logic over relational structures and , in particular , nested words .",
    "there , we also state hanf s theorem , which provides a normal form of first - order definable properties in terms of spheres .",
    "the construction of the sphere automaton @xmath2 , which is , to some extent , the core contribution of this paper , is the subject of section  [ sec : sphereaut ] . by means of this automaton",
    ", we can show expressive equivalence of 2-stack visibly pushdown automata and existential monadic second - order logic ( section  [ subsect : maintheorem ] ) .",
    "section  [ sec : grids ] establishes the gap between this fragment and the full logic , from which we conclude that 2-stack visibly pushdown automata can not be complemented in general . by slightly modifying our logic ,",
    "we obtain , in section  [ sec : buechi ] , a characterization of bchi2-stack visibly pushdown automata , running on infinite words .",
    "we conclude with section  [ sec : openproblems ] stating some related open problems .",
    "the set @xmath5 of natural numbers is denoted by @xmath6 , the set @xmath7 of positive natural numbers by @xmath8 .",
    "we call any finite set an _ alphabet_. for a set @xmath9 , we denote by @xmath10 , @xmath11 , and @xmath12 the sets of finite , nonempty finite , and infinite strings over @xmath9 , respectively .. ] the empty string is denoted by @xmath13 . for a natural number @xmath14 , we let @xmath15 $ ] stand for the set @xmath16 ( i.e. , @xmath17 $ ] is the empty set ) . in this paper , we will identify isomorphic structures and we use @xmath18 to denote isomorphism .    let @xmath19 be a positive natural number",
    ". a ( @xmath20-stack ) _ call - return alphabet _ is a collection @xmath21},{\\sigma_{\\mathit{int}}}\\rangle$ ] of pairwise disjoint alphabets . intuitively , @xmath22 contains the actions that call the stack @xmath23 , @xmath24 is the set of returns of stack @xmath23 , and @xmath25 is a set of internal actions , which do not involve any stack operation .",
    "we fix @xmath19 and a @xmath20-stack call - return alphabet @xmath26},{\\sigma_{\\mathit{int}}}\\rangle$ ]",
    ". moreover , we set @xmath27 } { \\sigma_c}^{s}$ ] , @xmath28 } { \\sigma_r}^{s}$ ] , and @xmath29 .      a _ multi - stack visibly pushdown automaton _ ( mvpa ) over @xmath30 is a tuple @xmath31 where    1 .",
    "@xmath32 is its finite set of _ states _ , 2 .",
    "@xmath33 is the set of _ initial states _ , 3 .",
    "@xmath34 is the set of _ final states _ , 4 .",
    "@xmath35 is the finite _ stack alphabet _ containing a special symbol @xmath36 that will represent the empty stack , and 5 .",
    "@xmath37 provides the _ transitions _ in terms of a triple @xmath38 with @xmath39    a _ 2-stack visibly pushdown automaton _",
    "( @xmath40 ) is an mvpathat is defined over a 2-stack alphabet ( i.e. , @xmath41 ) .",
    "a transition @xmath42 , say with @xmath43 , is a push transition meaning that , being in state @xmath44 , the automaton can read @xmath45 , push the symbol @xmath46 onto the @xmath23-th stack , and go over to state @xmath47 .",
    "a transition @xmath48 , say with @xmath49 , allows us to pop @xmath50 from the @xmath23-th stack when reading @xmath45 , while the control changes from state @xmath44 to state @xmath47 .",
    "if , however , @xmath51 , then the stack is not touched , i.e. , @xmath36 is never popped . finally , a transition @xmath52 is applied when reading internal actions @xmath53 .",
    "they do not involve any stack operation and , actually , do not even allow us to read from the stack .",
    "let us formalize the behavior of the mvpa@xmath54 .",
    "a _ stack contents _ is a nonempty finite sequence from @xmath55 .",
    "the leftmost symbol is thus the top symbol of the stack contents .",
    "a configuration of @xmath54 consists of a state and a stack contents for every stack .",
    "hence , it is an element of @xmath56}$ ] .",
    "consider a string @xmath57 .",
    "a _ run _ of @xmath54 on @xmath58 is a sequence @xmath59})^+$ ] such that @xmath60 , @xmath61 for each stack @xmath62 $ ] , and , for all @xmath63 , the following hold :    1",
    ".   -11 pt**[push ] : * *  if @xmath64 for @xmath65 $ ] , then there is a stack symbol @xmath46 such that @xmath66 , @xmath67 , and @xmath68 for every @xmath69 \\setminus \\{{s}\\}$ ] .",
    "2 .   -11 pt**[pop ] : * *  if @xmath70 for @xmath65 $ ] , then there is a stack symbol @xmath71 such that @xmath72 , @xmath68 for every @xmath73 \\setminus \\{{s}\\}$ ] , and either @xmath50 and @xmath74 , or @xmath51 and @xmath75 .",
    "3 .   -11 pt**[internal ] : * *  if @xmath76 , then @xmath77 , and @xmath78 for every @xmath65 $ ] .",
    "the run @xmath79 is accepting if @xmath80 .",
    "a string @xmath81 is accepted by @xmath54 if there is an accepting run of @xmath54 on @xmath58 .",
    "the set of accepted strings forms the ( string ) language of @xmath54 , which is a subset of @xmath11 and denoted by @xmath82 .",
    "is excluded from the domain . ]",
    "[ ex : mvpa ] there is no mvpathat recognizes the context - sensitive language @xmath83 , no matter which call - return alphabet we chose .",
    "note that , however , with the more general notion of a call - return alphabet from @xcite , it is possible to recognize this language by means of two stacks . now consider the 2-stack call - return alphabet @xmath30 given by @xmath84 , @xmath85 , @xmath86 , @xmath87 , and @xmath88 .",
    "the language @xmath89 can be recognized by some 2vpaover @xmath30 , even by the restricted model of 2-phase 2vpa from @xcite , as every word from @xmath90 can be split into at most two return phases . in the following ,",
    "we define a 2vpa @xmath91 over @xmath30 such that @xmath92 , which is no longer divisible into a bounded number of return phases .",
    "the transition relation @xmath37 is given as follows ( a graphical illustration is provided in figure  [ fig : mvpa ] ) : @xmath93 the idea is that the finite - state control ensures that an input word matches the regular expression @xmath94 . to guarantee that , in any iteration , the number of @xmath45 is by one less than the number of @xmath95 , any push action @xmath45 stores a stack symbol @xmath96 in stack @xmath97 , which can then be removed by the corresponding pop action @xmath95 unless the symbol @xmath36 is discovered .",
    "we do the same for @xmath98 and @xmath99 on stack @xmath100 .",
    "we will now see how strings over symbols from the call - return alphabet @xmath30 can be represented by relational structures . basically , to a string , we add a binary predicate that combines push with corresponding pop events .",
    "let @xmath65 $ ] .",
    "a string @xmath101 is called @xmath23-_well formed _ if it is generated by the context - free grammar @xmath102 where @xmath43 , @xmath103 , and @xmath104 .",
    "a _ nested word _ over @xmath30 is a structure @xmath105,{\\mathord{\\lessdot}},\\mu,\\lambda)$ ] where @xmath106 ( we call the elements from @xmath15 $ ] _ positions _ , _ nodes _ , or _ events _ ) , @xmath107\\}$ ] , @xmath108 \\rightarrow \\sigma$ ] , and @xmath109 } \\mu^{s}\\subseteq [ n ] \\times [ n]$ ] where , for every @xmath65 $ ] and @xmath110 \\times [ n]$ ] , @xmath111 iff @xmath112 , @xmath113 , @xmath114 , and @xmath115 is @xmath23-well formed .    the set of nested words over @xmath30 is denoted by @xmath116 .",
    "figure  [ fig : exanw ] depicts a nested word over a 2-stack call - return alphabet . throughout the paper , we take advantage of the fact that nested words over a 2-stack call - return alphabet can be written as a string with one type of _ stack edges _ above the string and the other below the string , where the first type concerns the first stack and the other type concerns the second stack . in the 2-stack case ,",
    "the edges do not intersect .",
    "note that a nested word needs not be _ well - matched_. it might have pending calls , i.e. , calls without matching return , as well as pending returns , i.e. , returns that do not have a matching call .",
    "therefore , the relations @xmath117 and its inverse @xmath118 can be seen as partial maps @xmath15 \\dashrightarrow [ n]$ ] , in the obvious manner .",
    "moreover , observe that , given nested words @xmath119,{\\mathord{\\lessdot}},\\mu,\\lambda)$ ] and @xmath120,{\\mathord{\\lessdot}}',\\mu',\\lambda')$ ] , @xmath121 implies @xmath122 .",
    "it is therefore justified to represent @xmath123 as the string @xmath124 .",
    "this naturally extends to sets @xmath125 of nested words and we set @xmath126 .",
    "vice versa , given a string @xmath81 , there is precisely one nested word @xmath123 over @xmath30 such that @xmath127 .",
    "this unique nested word is denoted @xmath128 . for @xmath129 ,",
    "we let @xmath130 .",
    "[ ex : exanw ] consider the 2-stack call - return alphabet @xmath30 from example  [ ex : mvpa ] , which was given by @xmath84 , @xmath131 , @xmath132 , @xmath87 , and @xmath88 .",
    "figure  [ fig : exanw ] depicts a nested word @xmath133,{\\mathord{\\lessdot}},\\mu,\\lambda)$ ] over @xmath30 with @xmath134 .",
    "the straight arrows represent @xmath135 , the curved arrows capture @xmath117 ( those above the horizontal correspond to the first stack ) .",
    "for example , @xmath136 .",
    "thus , @xmath137 and @xmath138 are defined , whereas both @xmath139 and @xmath140 are not . in terms of visibly pushdown automata",
    ", this means that positions 7 and 10 are employed when the first / second stack is empty , respectively .",
    "observe that @xmath141 and @xmath142 .",
    "we now turn to an automata model that is suited to nested words and , to some extent , is equivalent to mvpa .",
    "our model is an extension of nested - word automata for one stack , which has been considered in @xcite , to multiple stacks .",
    "we also extend the model of @xcite by _ calling states_. if the state that is reached after executing some action @xmath45 is a calling state , then the corresponding run is accepting only if this @xmath45 is a call with a matching return ( i.e. , it is not pending ) .",
    "we will later see that this concept does not increase the expressive power of our automata but turns out to be a convenient tool when we translate logical formulas into automata .",
    "a _ generalized multi - stack nested - word automaton _",
    "( generalized mnwa ) over @xmath30 is a tuple @xmath143 where    1 .",
    "@xmath32 is the finite set of _ states _ , 2 .",
    "@xmath33 is the set of _ initial states _ , 3 .",
    "@xmath34 is the set of _ final states _ , 4 .",
    "@xmath144 is a set of _ calling states _ , and 5 .",
    "@xmath37 is a pair @xmath145 of relations @xmath146 and @xmath147 , which contain the _",
    "transitions_.    we call @xmath148 a _ multi - stack nested - word automaton _ ( mnwa ) if @xmath149 .    a _ ( generalized )",
    "2-stack nested - word automaton _",
    "( ( generalized ) @xmath150 ) is a ( generalized , respectively ) @xmath151 that is defined over a 2-stack alphabet ( i.e. , @xmath41 ) .",
    "intuitively , @xmath152 contains all the local and push transitions , as well as all the pop transitions that act on an empty stack ( i.e. , in terms of nested words and nested - word automata , those transitions that perform an action from @xmath153 that is not matched by a corresponding calling action ) .",
    "a run of @xmath148 on a nested word @xmath119,{\\mathord{\\lessdot}},\\mu,\\lambda)$ ] over @xmath30 is a mapping @xmath154 \\rightarrow q$ ] such that @xmath155 for some @xmath156 , and , for all @xmath157 , we have @xmath158 the run @xmath79 is accepting if @xmath159 and , for all @xmath160 $ ] with @xmath161 , @xmath162 is defined .",
    "the language of @xmath148 , denoted by @xmath163 , is the set of nested words from @xmath116 that allow for an accepting run of @xmath148 .",
    "recall that there is a one - to - one correspondence between strings and nested words .",
    "we let therefore @xmath164 with @xmath54 an @xmath165 stand for the set @xmath166 .",
    "[ ex : mnwa ] consider again the 2-stack call - return alphabet @xmath30 given by @xmath84 , @xmath85 , @xmath167 , @xmath87 , and @xmath88 .",
    "in example  [ ex : mvpa ] , we have seen that , for @xmath168 , the iteration @xmath169 is the language of some 2vpa over @xmath30 .",
    "we can also specify a 2nwa @xmath170 over @xmath30 such that @xmath171 .",
    "note that @xmath163 will contain , for example , the nested word that is depicted in figure  [ fig : exanw ] .",
    "the transition relation @xmath37 is given as follows : @xmath172 similarly to example  [ ex : mvpa ] , the finite - state control will ensure the general regular structure of a word without explicit `` counting '' .",
    "this counting is then implicitly done by the relation @xmath173 , which requires a matching call for a return .",
    "a graphical description of @xmath148 is given in figure  [ fig : mnwa ] .",
    "hereby , a return transition with an adjoining set of states indicates that one state of this set must have been reached right after executing the corresponding call ( in particular , the return must not be pending ) , whereas the remaining return transitions , @xmath174 and @xmath175 , apply only to pending returns .",
    "a general technique for a reduction from mvpato mnwaand vice versa can be found below ( lemma  [ lem : pawa ] ) .",
    "we can show that the use of calling states does not increase the expressiveness of mnwa .",
    "note that , however , the concept of calling states will turn out to be helpful when building the sphere automaton in section  [ sec : sphereaut ] .",
    "[ lem : generalized ] for every generalized mnwa@xmath148 over @xmath30 , there is an mnwa@xmath176 over @xmath30 such that @xmath177 .    in the construction of an @xmath151",
    ", we exploit the following property of a nested word @xmath119,{\\mathord{\\lessdot}},\\mu,\\lambda)$ ] : given @xmath178 , say , with @xmath113 , @xmath179 is defined for all @xmath180 satisfying @xmath181 .",
    "basically , @xmath176 will simulate @xmath148 .",
    "in addition , whenever a calling state is assigned to a position labeled with an element from @xmath22 , we will set a flag @xmath182=1 $ ] , which can only be resolved and turn into a final state ( @xmath182=0 $ ] ) when a matching return position has been found . as any interim call position that concerns stack @xmath23",
    "is matched anyway , the flags @xmath182 $ ] in that interval are set to @xmath100 .",
    "thus , while a flag is @xmath97 or @xmath100 , there is still some unmatched calling position .",
    "hence , a final state requires every flag to equal @xmath183 , which also designates the initial state .",
    "let us become more precise and let @xmath143 be a generalized mnwa .",
    "we determine the mnwa  @xmath184 by @xmath185}$ ] , @xmath186}\\}$ ] , @xmath187}\\}$ ] , and @xmath188 where    1 .",
    "@xmath189 is the set of triples @xmath190 such that @xmath191 , @xmath192 implies @xmath193 , and , for every @xmath65 $ ] , @xmath194 = \\left\\ {      \\begin{array}{cl }        2 & ~~ \\text{~if~ } \\overline{\\textup{b}}[{s } ] \\in \\{1,2\\}\\\\        1 & ~~ \\text{~if~ } \\overline{\\textup{b}}[{s } ]   = 0 \\text{~and~ } a \\in { \\sigma_c}^{s}\\text{~and~ } q ' \\in c\\\\        0 & ~~ \\text{~otherwise }   \\end{array } \\right.\\ ] ] 2 .",
    "@xmath195 is the set of quadruples @xmath196 such that @xmath197 , @xmath198 , and , for every @xmath65 $ ] , @xmath194 = \\left\\ {      \\begin{array}{cl }        0 & ~~ \\text{~if~ } \\overline{\\textup{c}}[{s } ]   = 1\\\\        \\overline{\\textup{b}}[{s } ] & ~~ \\text{~otherwise }   \\end{array } \\right.\\ ] ]    in fact , we can show that @xmath199 .",
    "note that the flag assignments depend deterministically on the input word and the states assigned to the positions .",
    "let @xmath200,{\\mathord{\\lessdot}},\\mu,\\lambda)$ ] be a nested word over @xmath30 .",
    "suppose @xmath79 to be an accepting run of @xmath148 on @xmath201 and let @xmath202 \\rightarrow \\{0,1,2\\}^{[k]}$ ] be the unique supplement of @xmath79 according to the flag construction . to verify that @xmath203 is indeed an accepting run of @xmath176 on @xmath201",
    ", we need to show that @xmath204 = 0 $ ] for all @xmath205 $ ] .",
    "so let @xmath206 $ ] .",
    "if there is no @xmath160 $ ] such that @xmath113 and @xmath161 , then we clearly have @xmath204 = 0 $ ] , as the flag for stack @xmath23 never changes its value during the run .",
    "if the flag changes its value from @xmath183 to @xmath97 , then this happens at a position @xmath160 $ ] such that @xmath113 and @xmath161 .",
    "as @xmath79 is an accepting run of @xmath148 on @xmath201 , there is @xmath207 $ ] such that @xmath178 . by construction of @xmath176 , @xmath208 = 1 $ ] ,",
    "@xmath209 = 2 $ ] for all @xmath210 , and @xmath211 = 0 $ ] .",
    "thus , we finally have @xmath204 = 0 $ ] .    conversely , let @xmath154 \\rightarrow q$ ] and @xmath212 \\rightarrow \\{0,1,2\\}^{[k]}$ ] be mappings such that @xmath203 is an accepting run of @xmath176 on @xmath201 .",
    "clearly , @xmath79 is a run of @xmath148 on @xmath201 .",
    "so let us verify that it is accepting .",
    "first , observe that @xmath159 .",
    "so suppose @xmath160 $ ] such that @xmath213 is a calling state . according to the construction of @xmath176 , @xmath113 for some @xmath23 .",
    "moreover , we have @xmath208 = \\{1,2\\}$ ] . as @xmath204 = 0 $ ] , there must be @xmath214 and @xmath215 such that @xmath181 and @xmath216 .",
    "this implies that @xmath162 is indeed defined so that we can conclude that @xmath79 is an accepting run of @xmath148 on @xmath201 .",
    "the flag construction from the previous proof is illustrated in figure  [ fig : flag ] , where we assume a run on the nested word such that every state associated with a symbol from @xmath217 is a calling state .",
    "[ lem : pawa ] let @xmath218 be a set of nested words over @xmath30 .",
    "the following are equivalent :    1 .",
    "there is an mvpa@xmath54 over @xmath30 such that @xmath219 .",
    "2 .   there is an mnwa@xmath148 over @xmath30 such that @xmath220 .    given an @xmath165 @xmath31 , we define an @xmath151 @xmath221 with @xmath222 as follows : @xmath223 , @xmath224 , @xmath225 , and @xmath188 where    1 .",
    "@xmath189 is the set of triples @xmath226 such that @xmath227 , @xmath228 , or @xmath229 , and 2 .",
    "@xmath195 is the set of quadruples @xmath230 such that @xmath231 .",
    "the idea is that the stack symbol associated with a transition is incorporated into the state of the mnwa .",
    "when an internal or unmatched return action is performed , then we may chose an arbitrary stack symbol , as it will not be reconsidered later in the run .",
    "for the converse direction , let @xmath232 be an mnwa .",
    "consider the mvpa@xmath233 where @xmath234 is given by    1 .",
    "@xmath235 , 2 .",
    "@xmath236 , and 3 .",
    "@xmath237 is the set of tuples @xmath238 such that either @xmath191 and @xmath239 , or @xmath240 .    here",
    ", we need to ensure that , when @xmath54 performs a matched return action , we can access the state that @xmath148 has associated with the corresponding call . to this aim",
    ", @xmath54 just pushes the state onto the stack so that it becomes accessible when the corresponding return is executed .",
    "it is straightforward to show that @xmath222 .",
    "we fix supplies of first - order variables @xmath241 and second - order variables @xmath242 .",
    "let @xmath243 be a function - free signature .",
    "the set @xmath244 of _ monadic second - order _ ( mso )",
    "formulas over @xmath243 is given by the following grammar : @xmath245 hereby , @xmath246 , @xmath247 is an @xmath248-ary predicate symbol , the @xmath249 and @xmath250 are first - order variables , and @xmath251 is a second - order variable .",
    "moreover , we will make use of the usual abbreviations such as @xmath252 for @xmath253 , @xmath254 for @xmath255 , etc .",
    "given a @xmath243-structure @xmath256 with universe @xmath257 , a formula @xmath258 with free variables in @xmath259 , @xmath260 , and @xmath261 , we write , as usual , @xmath262 $ ] if @xmath256 satisfies @xmath263 when assigning @xmath264 to @xmath265 and @xmath266 to @xmath267 .",
    "let us identify some important fragments of @xmath244 .",
    "the set @xmath268 of _ first order _ ( fo ) formulas over @xmath243 comprises those formulas from @xmath244 that do not contain any second - order quantifier .",
    "furthermore , an _ existential _ mso ( emso ) formula is of the form @xmath269 with @xmath270 . the corresponding class of formulas is denoted @xmath271 .",
    "more generally , given @xmath246 , we denote by @xmath272 the set of formulas of the form @xmath273 where @xmath270 and the @xmath274 are blocks of second - order variables , possibly empty or of different length .",
    "we will later make use of the notion of _ definability _ relative to a class of structures .",
    "let @xmath275 be a class of formulas and @xmath276 be sets of @xmath243-structures .",
    "we say that @xmath125 is @xmath277-_definable relative to _",
    "@xmath278 if there is a sentence ( i.e. , a formula without any free variables ) @xmath279 such that @xmath125 is the set of @xmath243-structures @xmath280 such that @xmath281",
    ".      we will now provide a signature that allows us to specify mso properties of nested words .",
    "let @xmath30 be a call - return alphabet .",
    "we define @xmath282 to be the signature @xmath283 with @xmath284 a unary and @xmath135 and @xmath117 binary predicate symbols .",
    "we write the mso formula @xmath285 as @xmath286 and the formula @xmath287 as @xmath288 .",
    "mso formulas over @xmath282 can be canonically interpreted over nested words @xmath105,{\\mathord{\\lessdot}},\\mu,\\lambda )",
    "\\in { \\mathbb{nw}}({\\widetilde{\\sigma}})$ ] , as @xmath289 can be seen as a collection of unary relations @xmath290",
    "\\mid \\lambda(i ) = a\\}$ ] where @xmath291 .",
    "thus , nested words over @xmath30 are actually @xmath282-structures . a sample mso formula over @xmath282 such that @xmath292 is @xmath293 .",
    "it expresses that every matching pair with a calling @xmath45 has a @xmath98-labeled return position .",
    "given a sentence @xmath294 , we denote by @xmath295 the set of nested words over @xmath30 that satisfy @xmath263 , i.e. , @xmath296 .    over nested words ( more generally , structures of bounded degree ) , fo formulas enjoy a normal form in terms of local formulas .",
    "a formula @xmath297 with one free variable @xmath250 is said to be _ local _ if there is @xmath298 such that , in every subformula @xmath299 of @xmath263 , @xmath300 is of the form @xmath301 . hereby , the formula @xmath302 has the expected meaning and can be obtained inductively .",
    "informally , the truth of a local formula @xmath303 depends only on the local neighborhood around @xmath250 .",
    "next , we state hanf s locality theorem in terms of nested words",
    ". it actually applies to general classes of structures of bounded degree .",
    "[ thm : hanf ] let @xmath304 be a sentence .",
    "there is a positive boolean combination @xmath300 of formulas of the form @xmath305 where @xmath306 and @xmath307 is local ( with the obvious meaning of the quantifiers @xmath308 and @xmath309 ; note that there might occur different thresholds @xmath310 in @xmath300 ) such that , for every nested word @xmath311 , we have @xmath312 moreover , @xmath300 can be computed effectively and in elementary time .    for a comprehensive proof of this theorem ,",
    "see , for example , @xcite .",
    "however , these proofs are not effective , whereas the original proof by hanf is effective .",
    "it is crucial to note that hanf s theorem applies to the case of nested words as we deal with a class of structures of bounded degree ( see below for a formal definition ) .",
    "indeed , there is a uniform bound on the degree of nested words .",
    "let @xmath313 and @xmath314 be tuples such that @xmath315 and @xmath316 are @xmath317-structures . for @xmath318 and @xmath319 , we write @xmath320 if @xmath321 , @xmath322 , @xmath323 implies @xmath324 , and @xmath178 implies @xmath325 .",
    "theorem  [ thm : hanf ] suggests that , over nested words , the validity of an fo formula in a nested word depends on the local neighborhoods of the latter .",
    "this leads to the notion of a _ sphere _ , which will actually play a central role in the remainder of this paper .",
    "a sphere of radius @xmath298 includes elements whose distance from a distinguished sphere center is bounded by @xmath1 .",
    "given @xmath326 , the _ distance _ @xmath327 of @xmath4 and @xmath328 in @xmath256 is the minimal length of a path from @xmath4 to @xmath328 in the _ gaifman graph _ of @xmath315 . the gaifman graph of @xmath315 is defined to be the undirected graph @xmath329 where @xmath330 iff @xmath331 @xcite .",
    "in particular , we have @xmath332 .",
    "if @xmath333 , we also write @xmath334 .",
    "we write @xmath335 if @xmath336 .",
    "the degree of a @xmath317-structure is said to be _ bounded _ by some natural number @xmath337 if the degree of its gaifman graph is bounded by @xmath337 .",
    "observe that the degree of a nested word is bounded by @xmath338 , which is therefore a uniform bound for the class @xmath116 .",
    "let @xmath339 be a @xmath317-structure , @xmath340 , and @xmath341 .",
    "the @xmath1-_sphere _ of @xmath342 around @xmath4 , which we denote by @xmath343 , is basically the substructure of @xmath342 induced by the new universe @xmath344 , but extended by the constant @xmath4 as a distinguished element , called the _ sphere center_. given an isomorphism type @xmath345 of an @xmath3-sphere , we let @xmath346 denote the number of points in @xmath342 that _ realize _ @xmath347 . for an example , consider figure  [ fig : embedding ] , showing a nested word @xmath201 and the 2-sphere of @xmath201 around @xmath348 where the sphere center is marked as a rectangle .",
    "note that @xmath349 and @xmath350 .",
    "we denote by @xmath351 the set of ( isomorphism types of ) @xmath3-spheres that arise from nested words over @xmath30 , i.e. , @xmath352 note that @xmath351 is finite up to isomorphism , which is crucial for the constructions in section  [ sec : maintheorem ] .",
    "[ sec : maintheorem ]    in this section , we focus on 2vpa .",
    "so let us fix a 2-stack call - return alphabet @xmath353 .",
    "the key connection between fo logic and 2vpa/2nwa  is provided by the following proposition , which states the existence of an automaton that computes the sphere around any node of a nested word .",
    "[ prop : main ] let @xmath3 be any natural number .",
    "there are a generalized 2nwa @xmath354 over @xmath30 and a mapping @xmath355 such that    1 .",
    "@xmath356 ( i.e. , every nested word admits an accepting run of @xmath2 ) , and 2 .   for every nested word @xmath357 , every accepting run @xmath79 of @xmath2 on @xmath201 , and every node @xmath4 of @xmath201 , we have @xmath358 .",
    "before we turn towards the proof of this statement , we will first show how proposition  [ prop : main ] can be used to establish expressive equivalence of 2vpaand emso logic .",
    "[ lem : counting ] let @xmath359 and let @xmath360 be an @xmath3-sphere in some nested word over @xmath30 .",
    "there are generalized @xmath150 @xmath361 and @xmath362 over @xmath30 such that @xmath363 and @xmath364 .    in both cases ,",
    "we start from the generalized @xmath150 @xmath354 and the mapping @xmath365 from proposition  [ prop : main ] . for @xmath366",
    ", we obtain @xmath367 by extending the state space with a counter that , using @xmath368 , counts the number of realizations of @xmath347 up to @xmath369 .",
    "the new set of initial states is thus in both cases @xmath370 .",
    "however , the set of final states of @xmath361 is @xmath371 , the one of @xmath362 is @xmath372 .    we are now prepared to state the first main result of this paper .",
    "[ thm : equiv ] let @xmath373 be a set of nested words over the 2-stack call - return alphabet @xmath30 . then",
    ", the following are equivalent :    1 .",
    "there is a 2vpa@xmath54 over @xmath30 such that @xmath219 .",
    "2 .   there is a sentence @xmath374 such that @xmath375 .",
    "both directions are effective .",
    "in particular , the 2vpathat we construct for a given emso sentence can be computed in elementary time , and its size is elementary in the size of the formula .    to prove @xmath376 , one can perform a standard construction of an emso formula from a 2nwa , where the latter can be extracted from the given 2vpaaccording to lemma  [ lem : pawa ] .",
    "basically , the formula `` guesses '' a possible run on the input word in terms of existentially quantified second - order variables and then verifies , in its first - order fragment , that we actually deal with a run that is accepting .",
    "so let us directly prove @xmath377 and let @xmath378 be a sentence with @xmath379 ( we suppose @xmath246 ) .",
    "we define a new 2-stack call - return alphabet @xmath380},{\\sigma_r}^1 \\times    2^{[m]}),({\\sigma_c}^2 \\times 2^{[m]},{\\sigma_r}^2 \\times 2^{[m]})\\},{\\sigma_{\\mathit{int}}}\\times 2^{[m]}\\rangle\\ ] ] where @xmath381}$ ] shall denote the powerset of @xmath382 $ ] . from @xmath300",
    ", we obtain an fo formula @xmath383 over @xmath384 by replacing each occurrence of @xmath385 with @xmath386 } }    \\lambda(x ) = ( a , m)$ ] and each occurrence of @xmath387 with @xmath388 } } \\lambda(x ) = ( a , m \\cup \\{k\\})$ ] .",
    "we set @xmath389 to be the set of nested words that satisfy @xmath383 . from hanf",
    "s theorem ( theorem  [ thm : hanf ] ) , we know that @xmath125 is the language of a positive boolean combination of formulas of the form @xmath390 and @xmath391 where @xmath392 is local .",
    "it is easy to see that the class of nested - word languages that are recognized by generalized 2nwais closed under union and intersection .",
    "thus , the validity of one such basic formula can be checked by a generalized 2nwadue to lemma  [ lem : counting ] .",
    "we deduce that there is a generalized 2nwa@xmath176 over @xmath30 recognizing @xmath125 .",
    "now , to check whether some nested word from @xmath116 satisfies @xmath263 , a generalized 2nwa@xmath148 with @xmath393 will guess an additional labeling for each node in terms of an element from @xmath381}$ ] and then simulate @xmath176 . by lemma  [ lem : generalized ] and lemma",
    "[ lem : pawa ] , we finally obtain a 2vpa@xmath54 such that @xmath394 .",
    "we now turn to the proof of proposition  [ prop : main ] . in each state",
    ", the generalized @xmath150 @xmath2 will guess the current sphere as well as spheres of nodes nearby and the current position in these additional spheres .",
    "adding some global information allows us to locally check whether all the guesses are correct .",
    "the rest of this section is devoted to the construction of @xmath2 and a corresponding mapping @xmath368 to prove proposition  [ prop : main ] .",
    "recall that @xmath351 denotes the set of all the @xmath3-spheres that arise from nested words , i.e. , @xmath395 is a nested word and @xmath4 is a position in @xmath396 .",
    "an _ extended _ @xmath1-sphere over @xmath30 is a tuple @xmath397 where @xmath398 ( in particular , @xmath399 ) , @xmath400 , and @xmath401 $ ] with @xmath402 where @xmath403 is the maximal size of an @xmath3-sphere , i.e. , @xmath404 .",
    "we say that @xmath405 is the _ active node _ of @xmath406 and @xmath407 is its _",
    "color_. strictly speaking , @xmath408 is not a mathematical structure , as @xmath407 does not refer to an element of @xmath409 .",
    "we introduced the function @xmath410 to extract a mathematical structure from an extended sphere , which will allow us to deal with notions such as isomorphism .",
    "let @xmath411 denote the set of all the ( isomorphism classes of ) extended spheres over @xmath30 .",
    "for an extended sphere @xmath412 and an element @xmath413 , we denote by @xmath414 $ ] the extended sphere @xmath415 , i.e. , the extended sphere that we obtain by replacing the active node @xmath405 with @xmath4 .",
    "the idea of the construction of the generalized @xmath150 @xmath2 is the following : a state @xmath416 of @xmath2 is a set of extended spheres , which reflect the `` environment '' of a node that @xmath416 is assigned to .",
    "now suppose that , in a run of @xmath2 on a nested word @xmath417,{\\widetilde{{\\mathord{\\lessdot}}}},{\\widetilde{\\mu}},{\\widetilde{\\lambda}})$ ] , @xmath416 is assigned to a position @xmath418 $ ] and contains @xmath412 .",
    "if the run is accepting , this will mean that the environment of @xmath4 in @xmath419 looks like the environment of @xmath405 in @xmath406 .",
    "in particular , @xmath416 will contain exactly one extended sphere @xmath412 such that @xmath420 and @xmath405 coincide , meaning that @xmath421 .",
    "this is illustrated in figure  [ fig : sphereaut ] depicting a nested word and a step of a run of the sphere automaton for @xmath422 on this word .",
    "states @xmath416 and @xmath423 are assigned to positions @xmath424 and @xmath425 , respectively .",
    "each state is a set of extended spheres . for clarity , however , we will neglect colors in the example .",
    "the sphere center is , as usual , depicted as a rectangle ; the active node is marked as a circle .",
    "observe that each state contains precisely one extended sphere in which the sphere center and the active node are identical .",
    "these are @xmath426 , and , respectively , @xmath427 .",
    "indeed , @xmath428 corresponds to the @xmath97-sphere of the nested word around @xmath424 , while @xmath429 reflects the @xmath97-sphere around @xmath425 .",
    "of course , @xmath2 has to locally guess the environment of a position . but",
    "how can we ensure that a guess is correct ? obviously , we have to pass a local guess to each neighboring position in @xmath419 .",
    "so suppose again that a state @xmath416 containing @xmath412 is assigned to a node @xmath4 of @xmath419 .",
    "as @xmath405 shall correspond to @xmath4 , we need to ensure that @xmath430 ( this will be taken care of by item ( 2 ) in the definition of the transition relation below ) .",
    "now suppose that @xmath405 has a @xmath135-successor @xmath431 , i.e. , @xmath432 .",
    "then , we have to guarantee that @xmath433 .",
    "this is done by simply excluding @xmath416 from the set of final states ( in figure  [ fig : sphereaut ] , neither @xmath416 nor @xmath423 are final states ) .",
    "moreover , @xmath328 should correspond to @xmath434 , which is ensured by passing @xmath435 $ ] to the state that will be assigned to @xmath434 ( see item ( 7 ) ; in figure  [ fig : sphereaut ] , @xmath423 must therefore contain @xmath436 $ ] where @xmath328 is the @xmath437-successor of the active node of @xmath428 , and we actually have @xmath438 $ ] ) . on the other hand ,",
    "if @xmath4 has a @xmath439-successor , then @xmath405 must have a @xmath135-successor @xmath328 as well such that @xmath435 $ ] belongs to the state that will be assigned to @xmath434 .",
    "observe that this rule applies unless @xmath440 , as then @xmath434 lies out of the area of responsibility of @xmath406 ( see item ( 5 ) ) .",
    "similar requirements have to be considered wrt",
    ".  potential @xmath135-/@xmath439-predecessors ( see ( 3 ) , ( 4 ) , and ( 6 ) ) , as well as wrt .",
    "the relations @xmath117 and @xmath441 ( see ( 3)(7 ) ) .",
    "one difficulty in our construction , however , is to guarantee the lack of an edge .",
    "so assume the extended sphere @xmath406 is the one given by figure  [ fig : embedding ] with @xmath442 as the active node .",
    "let us neglect colors for the moment .",
    "suppose furthermore that @xmath419 is the nested word from figure  [ fig : embedding ] , below the sphere .",
    "then , an accepting run @xmath79 of @xmath2 on @xmath419 will assign to @xmath443 a state that contains @xmath406 ( modulo some coloring ) .",
    "moreover , the state assigned to @xmath4 will contain @xmath435 $ ] , where the sphere center and the active node coincide .",
    "we observe that , in @xmath406 , the node @xmath442 is maximal .",
    "in particular , there is no @xmath117-edge between @xmath442 and @xmath444 .",
    "this should be reflected in @xmath419 .",
    "a first idea to guarantee this might be to just prevent @xmath445 from containing the extended sphere @xmath446 $ ] ( note that @xmath447 ) .",
    "this is , however , too restrictive . actually , @xmath448 and @xmath446 $ ] are isomorphic ( neglecting the coloring of @xmath406 ) so that @xmath445 must contain @xmath446 $ ] .",
    "the solution is already present in terms of the coloring of extended spheres .",
    "more precisely , @xmath445 is allowed to carry @xmath446 $ ] as soon as it has a color that is different from the color of the extended sphere @xmath449 $ ] assigned to @xmath443 .",
    "roughly speaking , there might be isomorphic spheres in @xmath419 that are overlapping . to consider them simultaneously ,",
    "they are thus equipped with distinct colors .",
    "the construction we obtain following the above ideas indeed allows us to infer , from an accepting run assigning a state @xmath416 to a node @xmath4 , the @xmath3-sphere around @xmath4 . as mentioned above",
    ", we simply consider the ( unique up to isomorphism ) extended sphere @xmath408 contained in @xmath416 such that @xmath450 .",
    "then , @xmath451 is indeed the sphere of interest ( recall that , in figure  [ fig : sphereaut ] , these are @xmath428 for @xmath416 and @xmath429 for @xmath423 if we ignore active nodes and colors ) .",
    "it is not obvious that the above ideas really do work , all the less as the construction will apply to nested words over two stacks , but no longer to nested words over more than two stacks .",
    "after all , the key argument will be provided by proposition  [ prop : infinite ] , stating an important property of nested words over two stacks .",
    "intuitively , it states the following : suppose that , in a nested word , there is an acyclic path from a node @xmath4 to another node @xmath452 , and suppose this path is of a certain type @xmath58 ( recording the labelings and edges seen in the path ) .",
    "then , applying the same path several times will never lead back to @xmath4 .",
    "this is finally the reason why a cycle in an extended sphere that occurs in a run on a nested word @xmath419 is in fact simulated by @xmath419 .",
    "let us formally construct the generalized @xmath150 @xmath354 .",
    "an element of @xmath32 is a subset @xmath416 of @xmath411 such that either @xmath453 , which will be the only initial state , or the following conditions are satisfied :    a.   there is a unique extended sphere @xmath454 such that @xmath455 + ( we set @xmath456 ) b.   there is @xmath291 such that , for every @xmath454 , @xmath457 + ( so that we can assign a unique label @xmath45 to @xmath416 , denoted by @xmath458 ) c.   for every two elements @xmath397 and @xmath459 from @xmath416 , if @xmath460 and @xmath461 , then @xmath462    so let us turn to the transition relation @xmath463 :    1 .   for @xmath464 and @xmath291 , we let @xmath465 if @xmath466 and the following hold : 1 .   for all @xmath467 , @xmath468 ( i.e. , @xmath469 is not defined ) 2 .",
    "@xmath470 3 .   for all @xmath471 and @xmath413 , + @xmath472 \\in { \\mathcal{e}}'$ } } ~~\\longrightarrow~~ ( \\alpha , i )    \\in { \\mathord{\\lessdot}}$ ] 4 .",
    "for all @xmath473 , + @xmath474 5 .   for all @xmath475 ,",
    "+ @xmath476 6 .   for all @xmath473 and @xmath413 , + @xmath477 \\in { \\mathcal{e}}$ ] 7 .   for all @xmath471 and @xmath413 , + @xmath478    \\in { \\mathcal{e}}'$ ] 2",
    ".   for @xmath479 and @xmath480 ,",
    "we let @xmath481 if @xmath482 and ( 2)(7 ) as above hold as well as the following : 1 .   for all @xmath483 and @xmath413 , + @xmath472 \\in { \\mathcal{e}}'$ } } ~~\\longrightarrow~~      ( \\alpha , i ) \\in \\mathord{\\mu}$ ] 2 .   for all @xmath484 , + @xmath485 3 .   for all @xmath486 , + @xmath487 4",
    ".   for all @xmath488 , + @xmath489 \\in { \\mathcal{e}_c}$ ] 5 .   for all @xmath483 , + @xmath490 \\in      { \\mathcal{e}}'$ ]    as already mentioned",
    ", the only initial state of @xmath2 is the empty set , i.e. , @xmath491 .",
    "moreover , @xmath492 is a final state if , for every extended sphere @xmath493 , both @xmath494 and there is no @xmath413 such that @xmath495 .",
    "finally , @xmath416 is contained in @xmath496 , the set of calling states , if there is @xmath493 such that @xmath497 .",
    "the mapping @xmath498 as required in proposition  [ prop : main ] is provided by @xmath410 . more precisely , we set @xmath499 to be some arbitrary sphere and @xmath500 if @xmath501 .",
    "let us come back to the example in figure  [ fig : sphereaut ] , depicting two states , @xmath416 and @xmath423 , of the sphere automaton for radius @xmath422 , and a nested word that makes use of these states for being accepted .",
    "the sphere automaton contains a transition @xmath502 for some @xmath503 .",
    "we will verify in the following that conditions ( 2)(7 ) are indeed satisfied .",
    "the cases ( 3)(7 ) as well as the construction of @xmath503 are left to the reader .    1 .",
    "all the active nodes in @xmath423 are labeled with @xmath95 .",
    "2 .   whenever a sphere from @xmath416 is already present in @xmath423 ,",
    "then the corresponding active nodes are in the @xmath437-relation .",
    "this applies to @xmath428 and @xmath504 as well as to @xmath505 and @xmath429 .",
    "the extended sphere @xmath506 is the only one in @xmath423 whose active node has no @xmath437-predecessor .",
    "however , the distance between this active node and the sphere center equals @xmath507 .",
    "there is one extended sphere in @xmath416 without a @xmath437-successor wrt .",
    "the active node , namely @xmath508 .",
    "as required , the distance to the sphere center is @xmath507 .",
    "there are three extended spheres in @xmath423 whose active nodes have a @xmath437-predecessor : @xmath504 , @xmath429 , and @xmath509 .",
    "in fact , @xmath416 contains , in terms of @xmath428 , @xmath505 , and , respectively , @xmath510 , all three extended spheres with the active node replaced by the respective @xmath437-predecessor .",
    "symmetrically to the case @xmath511 , @xmath428 , @xmath505 , and @xmath510 from @xmath416 , where the active node is followed by a @xmath437-successor , have their counterparts in @xmath423 in terms of @xmath504 , @xmath429 , and @xmath509 , respectively .",
    "let @xmath512,{\\widetilde{{\\mathord{\\lessdot}}}},{\\widetilde{\\mu}},{\\widetilde{\\lambda}})$ ] be an arbitrary nested word over @xmath30 .",
    "we show that @xmath513 .",
    "let us first distribute colors to each of the involved spheres .",
    "for this , we define the notion of an overlap : for any @xmath514 $ ] , @xmath4 and @xmath452 are said to have an @xmath3-_overlap _ in @xmath419 if @xmath515 and @xmath516 .",
    "for example , in figure  [ fig : embedding ] , @xmath4 and @xmath452 have a @xmath100-overlap .",
    "[ cl : coloring ] there is a mapping @xmath517 \\rightarrow [ { \\#\\mathit{col}}]$ ] such that , for all @xmath514 $ ] with @xmath518 , the following holds : if @xmath4 and @xmath452 have an @xmath3-overlap in @xmath419 , then @xmath519 .",
    "the mapping is obtained as a graph coloring .",
    "consider the graph @xmath520,\\mathit{arcs})$ ] , @xmath521 \\times    [ { \\widetilde{n}}]$ ] , where , for @xmath514 $ ] , we have @xmath522 iff @xmath518 and @xmath4 and @xmath452 have an @xmath3-overlap in @xmath419 .",
    "observe that @xmath520,\\mathit{arcs})$ ] can not be of degree greater than @xmath523 .",
    "for each @xmath524 $ ] , there are at most four distinct events @xmath452 such that @xmath525 .",
    "now , if a position @xmath526 $ ] wants to `` get in touch '' with @xmath4 , it requires a position in its own sphere , another position in the sphere around @xmath4 , and one of the four possibilities to relate these two positions .",
    "hence , @xmath520,\\mathit{arcs})$ ] can be @xmath527-_colored _ by a mapping @xmath517 \\rightarrow [ { \\#\\mathit{col}}]$ ] ( i.e. , @xmath519 for every @xmath522 ) , which concludes the proof of claim  [ cl : coloring ] .",
    "we now specify @xmath528 \\rightarrow q$ ] : for @xmath524 $ ] , we set @xmath529 $ ] such that @xmath530 . with this definition , we can check that , for all @xmath531 $ ] , @xmath213 is a valid state of @xmath2 , and that @xmath79 is indeed an accepting run of @xmath532 on @xmath419 .",
    "so let @xmath524 $ ] and let @xmath412 and @xmath533 be contained in @xmath213 .",
    "a.   assume that @xmath450 and @xmath534 .",
    "then , @xmath535 and @xmath536 .",
    "consequently , we have @xmath537 .",
    "moreover , @xmath538 . b.   of course , @xmath539 . c.   assume @xmath540 and @xmath461 .",
    "there are @xmath541 $ ] with @xmath542 , @xmath543 , @xmath544 , @xmath545 , and @xmath546 .",
    "clearly , we have @xmath547 .",
    "furthermore , @xmath548 and , therefore , @xmath549 .",
    "this is because @xmath443 and @xmath550 have an @xmath3-overlap in @xmath419 so that , according to claim  [ cl : coloring ] , @xmath551 would imply @xmath552 , which contradicts the premise .",
    "now , for @xmath553 and @xmath554 with @xmath555 , we check that the triple @xmath556 is contained in @xmath152 , where we let @xmath557 .",
    "note first that , of course , @xmath558 .    1 .",
    "suppose @xmath559 .",
    "we have @xmath560 for some @xmath561 $ ] with @xmath562 . as @xmath563",
    ", we deduce @xmath468 .",
    "2 .   obviously , we have @xmath564 .",
    "3 .   suppose @xmath565 ( we thus have @xmath566 ) and @xmath431 such that @xmath435 \\in    \\rho(i')$ ] .",
    "recall that we have to show that , then , @xmath567 . there are @xmath568 $ ] such that @xmath569 , @xmath570 , @xmath544 , @xmath571 , and @xmath572 .",
    "we easily see that @xmath443 and @xmath573 have an @xmath3-overlap in @xmath419 .",
    "we deduce , according to claim  [ cl : coloring ] , @xmath574 . as , then , @xmath544 , @xmath575 , and @xmath576 , we can infer @xmath577 .",
    "4 .   let @xmath578 , suppose @xmath579 , and suppose that there is no @xmath431 such that @xmath580 . recall that we have to show that @xmath581 .",
    "there is @xmath582 $ ] such that @xmath570 and @xmath583 .",
    "but if @xmath584 , then @xmath585 , and there must be a @xmath135-predecessor of @xmath405 , which is a contradiction .",
    "we therefore deduce that @xmath581 .",
    "let @xmath586 and suppose that there is no @xmath431 such that @xmath577 .",
    "similarly to the case ( 4 ) , we show that @xmath581 .",
    "in fact , there is @xmath587 $ ] such that @xmath588 and @xmath544 .",
    "again , if @xmath584 , then @xmath589 so that there must be a @xmath135-successor of @xmath405 , which is a contradiction .",
    "we conclude that @xmath581 .",
    "let @xmath578 and @xmath431 such that @xmath580 .",
    "we show that , then , @xmath435    \\in \\rho(i)$ ] .",
    "there is @xmath582 $ ] such that @xmath590 , @xmath591 , and @xmath592 . as @xmath593",
    ", @xmath405 is not minimal so that we have @xmath566 . since , furthermore , @xmath594 implies @xmath595 , and since we also have @xmath596 and @xmath592 , we deduce @xmath435=(n,{\\mathord{\\lessdot}},\\mu,\\lambda,\\gamma , j,{\\mathit{col } } ) \\in \\rho(i)$ ] .",
    "let @xmath586 and @xmath431 such that @xmath577 .",
    "we have to show that @xmath435 \\in \\rho(i')$ ] .",
    "there is @xmath587 $ ] such that @xmath569 , @xmath544 , and @xmath597 . since @xmath598 implies @xmath599 , and",
    "since we have @xmath575 and @xmath597 , we deduce @xmath435=(n,{\\mathord{\\lessdot}},\\mu,\\lambda,\\gamma , j,{\\mathit{col } } )    \\in \\rho(i')$ ] .    next , for @xmath600 $ ] with @xmath554 and @xmath601",
    ", we check that the quadruple @xmath602 is contained in @xmath173 . checking ( 2)(7 )",
    "proceeds as in the above cases . for completeness",
    ", we present the cases ( 3)(7 ) , which are shown analogously . first observe that , indeed , @xmath603 , @xmath213 , and @xmath604 are all nonempty .    1 .",
    "suppose @xmath605 and @xmath431 such that @xmath435 \\in \\rho(i')$ ] .",
    "we show that @xmath606 .",
    "there are @xmath568 $ ] such that @xmath607 , @xmath570 , @xmath608 , @xmath571 , and @xmath572 .",
    "again , @xmath443 and @xmath573 have an @xmath3-overlap in @xmath419 .",
    "according to claim  [ cl : coloring ] , @xmath574",
    ". then , @xmath608 , @xmath575 , and @xmath601 , so that we can deduce @xmath606 .",
    "2 .   let @xmath578 and suppose that there is no @xmath431 such that @xmath609 .",
    "we have to show that @xmath581 .",
    "there is @xmath582 $ ] such that @xmath570 and @xmath591 .",
    "but if @xmath584 , then @xmath585 , so there must be a @xmath117-predecessor of @xmath405 , which is a contradiction",
    ". we deduce @xmath581 .",
    "3 .   let @xmath610 and suppose that there is no @xmath431 such that @xmath606 .",
    "we show that , then , @xmath581 . there is @xmath587 $ ] such that @xmath607 and @xmath608 .",
    "if @xmath584 , then @xmath611 , so there must be a @xmath117-successor of @xmath405 , which is a contradiction .",
    "we conclude that @xmath581 .",
    "4 .   let @xmath578 and @xmath431 such that @xmath609 .",
    "we show @xmath435 \\in \\rho(i_c)$ ] .",
    "there is @xmath582 $ ] such that @xmath570 , @xmath591 , and @xmath592 . due to @xmath594 ,",
    "we also have @xmath612 , and since @xmath613 and @xmath592 , we deduce @xmath435    \\in \\rho(i_c)$ ] . 5 .",
    "let @xmath610 and @xmath431 such that @xmath606 .",
    "we have to show @xmath435 \\in    \\rho(i')$ ] .",
    "there is @xmath587 $ ] such that @xmath607 , @xmath608 , and @xmath597 . from @xmath598",
    ", it follows @xmath599 . as , moreover , @xmath575 and @xmath597",
    ", we deduce @xmath435=(n,{\\mathord{\\lessdot}},\\mu,\\lambda,\\gamma , j,{\\mathit{col } } )    \\in \\rho(i')$ ]",
    ".      we will now show that an accepting run reveals the sphere around any node .",
    "this constitutes the more difficult part of the correctness proof .",
    "we introduce some useful notation : by @xmath614 , we denote the set @xmath615{180}{$\\curvearrowleft$}}},{\\mathrel{\\rotatebox[origin = cc]{180}{$\\curvearrowright$}}}\\}$ ] of _ directions_. now let @xmath200,{\\mathord{\\lessdot}},\\mu,\\lambda ) \\in { \\mathbb{nw}}({\\widetilde{\\sigma}})$ ] be a nested word , @xmath616 $ ] , and let @xmath617 ( where @xmath618 for all @xmath619 ) .",
    "we write @xmath620 if there are @xmath621 $ ] such that @xmath622 , @xmath623 , and , for every @xmath624 , one of the following holds :    a.   @xmath625 and @xmath626 b.   @xmath627 and @xmath628 c.   @xmath629 and @xmath630 and @xmath631 and @xmath632 d.   @xmath633{180}{$\\curvearrowleft$}}}}$ ] and @xmath630 and @xmath634 and @xmath632 e.   @xmath635 and @xmath636 and @xmath637 , and @xmath638 f.   @xmath633{180}{$\\curvearrowright$}}}}$ ] and @xmath636 and @xmath639 , and @xmath638    moreover , we write @xmath640 if there are pairwise distinct @xmath641 $ ] and @xmath642 \\setminus \\{i_1,\\ldots , i_{m-1}\\}$ ] such that @xmath622 , @xmath623 , and , for every @xmath643 , ( a)(f ) as above hold .",
    "we say that a string @xmath644 is _ circular _ if @xmath645 for some nested word @xmath357 and some position @xmath4 of @xmath201 .",
    "in other words , a circular string can produce a circle in a nested word .",
    "for example , @xmath646{180}{$\\curvearrowright$}}}~\\ !",
    "\\rightarrow$ ] and @xmath646{180}{$\\curvearrowleft$}}}~\\ ! \\rightarrow ~\\ ! { \\mathrel{\\curvearrowleft}}~\\",
    "! \\rightarrow$ ] are circular ( for an appropriate alphabet @xmath30 ) , whereas @xmath646{180}{$\\curvearrowleft$}}}~\\ ! \\rightarrow ~\\ ! { \\mathrel{\\curvearrowleft}}~\\ !",
    "\\leftarrow$ ] is not circular .",
    "the following proposition is crucial for our project , and it fails when considering nested words over more than two stacks .",
    "[ prop : infinite ] let @xmath644 be circular . then , for all @xmath647",
    ", @xmath648 is not circular .    before we prove proposition  [ prop : infinite ] , observe that it does not hold as soon as a third stack comes into play . to see this ,",
    "consider figure  [ fig : threestacks ] , describing a part of a nested word @xmath201 over the @xmath338-stack call - return alphabet @xmath649 .",
    "suppose @xmath650{180}{$\\curvearrowright$}}}~\\ !",
    "\\leftarrow ~\\ ! { \\mathrel{\\stackrel{3}{\\curvearrowleft}}}~\\ !",
    "\\leftarrow$ ] ( where the meaning of @xmath651 is the expected one ) , which is circular if we apply our definition to the framework of three stacks .",
    "however , we have @xmath652 .",
    "it should be noted that this does not imply that there is no sphere automaton or logical characterization in the framework with more than two stacks .",
    "indeed , we leave as an open question if multiple stacks generally allow for a logical characterization in terms of a fragment of mso logic .    in the above definition of @xmath640",
    ", it is crucial to require the elements @xmath641 $ ] to be pairwise distinct .",
    "this can be seen considering a part of the nested word @xmath201 over the 2-stack call - return alphabet @xmath653 that is depicted in figure  [ fig : distinct ] .",
    "let @xmath654{180}{$\\curvearrowright$}}}~\\ !",
    "\\leftarrow$ ] , which is a circular string .",
    "we have @xmath655 , i.e. , starting from @xmath4 , we can follow the sequence of directions @xmath58 twice , arriving at @xmath4 again . however , apart from @xmath4 , we have to visit @xmath442 and @xmath444 twice . indeed , @xmath656 .    _ ( of proposition  [ prop : infinite ] ) .",
    "_ let @xmath657,{\\mathord{\\lessdot}},\\mu,\\lambda ) \\in { \\mathbb{nw}}({\\widetilde{\\sigma}})$ ] , @xmath644 , and @xmath658 $ ] .",
    "we have to show that , if @xmath645 , then @xmath58 can not be decomposed nontrivially into identical circular factors , i.e. , there is no circular @xmath659 such that @xmath660 for some @xmath661 . at all ( not even non - circular ) such that @xmath660 for some @xmath647 . ]    to see this easily , we observe that a situation such as @xmath645 corresponds to a topological circle , as depicted in figure  [ fig : topcircle ] . a topological circle is a closed line in the two - dimensional plane that never crosses over itself . let us construct topological circles according to the following procedure : we assume a straight ( horizontal ) line of the plane .",
    "assume further a point @xmath4 on this line .",
    "starting from @xmath4 , we choose another two points as follows : pick a symbol @xmath420 from the alphabet @xmath662{90}{\\,$\\circlearrowright$\\,}}},{\\mathrel{\\rotatebox[origin = cc]{-90}{\\,$\\circlearrowleft$\\,}}}\\}$ ] . according to this choice",
    ", we first draw a semicircle above the straight line ending somewhere on the line , and then , without interruption , a semicircle below the line , again resulting in a point on the line .",
    "each semicircle is drawn in the direction indicated by @xmath420 , e.g. , @xmath663{90}{\\,$\\circlearrowright$\\,}}}$ ] requires to draw the upper semicircle rightwards and the lower one leftwards , and @xmath664 requires both the upper and the lower semicircle to be drawn rightwards .",
    "this procedure is continued until we reach the original point @xmath4 .",
    "we call a sequence from @xmath662{90}{\\,$\\circlearrowright$\\,}}},{\\mathrel{\\rotatebox[origin = cc]{-90}{\\,$\\circlearrowleft$\\,}}}\\}^+$ ] that allows us to draw a topological circle _",
    "circular_. for example , in figure  [ fig : topcircle ] , we construct a topological circle by following the sequence @xmath665{90}{\\,$\\circlearrowright$\\,}}}~    { \\mathrel{\\reflectbox{$\\leadsto$}}}~\\ ! { \\mathrel{\\reflectbox{$\\leadsto$}}}$ ] , starting in the left outermost point of intersection on the horizontal line .",
    "thus , @xmath250 is circular , whereas @xmath663{-90}{\\,$\\circlearrowleft$\\,}}}~{\\mathrel{\\rotatebox[origin = cc]{90}{\\,$\\circlearrowright$\\,}}}$ ] is not circular .",
    "observe that we have @xmath666 for all @xmath667{90}{\\,$\\circlearrowright$\\,}}},{\\mathrel{\\rotatebox[origin = cc]{-90}{\\,$\\circlearrowleft$\\,}}}\\}^+$ ] and @xmath661 .",
    "[ fig : topcircle],scaledwidth=80.0% ]    it is not hard to see that topological circles behave aperiodically in general , i.e. , for any given @xmath668{90}{\\,$\\circlearrowright$\\,}}},{\\mathrel{\\rotatebox[origin = cc]{-90}{\\,$\\circlearrowleft$\\,}}}\\}$ ] , there is no @xmath647 such that @xmath669 is circular . to show our proposition",
    ", we can even restrict to circular @xmath670 .",
    "so let @xmath668{90}{\\,$\\circlearrowright$\\,}}},{\\mathrel{\\rotatebox[origin = cc]{-90}{\\,$\\circlearrowleft$\\,}}}\\}^+$ ] .",
    "but if @xmath670 is circular , then , for growing @xmath0 , @xmath669 gives rise to a `` spiral '' , and going back to the starting point would require to intersect the line that has been drawn hitherto .",
    "let us relate our topological circles to the nested - word setting over two stacks . to this aim",
    ", we define a partial mapping @xmath671{90}{\\,$\\circlearrowright$\\,}}},{\\mathrel{\\rotatebox[origin = cc]{-90}{\\,$\\circlearrowleft$\\,}}}\\}^+$ ] that associates with any circular string a sequence over @xmath662{90}{\\,$\\circlearrowright$\\,}}},{\\mathrel{\\rotatebox[origin = cc]{-90}{\\,$\\circlearrowleft$\\,}}}\\}$ ] .",
    "this is done by reading a string from left to right and successively replacing every direction from @xmath614 with a symbol from @xmath662{90}{\\,$\\circlearrowright$\\,}}},{\\mathrel{\\rotatebox[origin = cc]{-90}{\\,$\\circlearrowleft$\\,}}}\\}$ ] , according to the following rules :    1 .",
    "@xmath672 is always replaced with @xmath664 2 .",
    "@xmath673 is always replaced with @xmath674 3 .",
    "@xmath675 is replaced with @xmath676{-90}{\\,$\\circlearrowleft$\\ , } } } & \\text{if the previous letter has been } { \\mathrel{\\curvearrowleft}}\\\\   { \\mathrel{\\leadsto } } & \\text{otherwise } \\end{cases}$ ] 4 .",
    "@xmath677 is replaced with @xmath678{90}{\\,$\\circlearrowright$\\ , } } } & \\text{if the previous letter has been } { \\mathrel{\\curvearrowright}}\\\\ { \\mathrel{\\reflectbox{$\\leadsto$ } } } & \\text{otherwise } \\end{cases}$ ] 5 .",
    "@xmath663{180}{$\\curvearrowleft$}}}$ ] is replaced with @xmath678{-90}{\\,$\\circlearrowleft$\\ , } } } & \\text{if the previous letter has been } \\leftarrow\\\\ { \\mathrel{\\leadsto } } & \\text{otherwise } \\end{cases}$ ] 6 .",
    "@xmath663{180}{$\\curvearrowright$}}}$ ] is replaced with @xmath678{90}{\\,$\\circlearrowright$\\ , } } } & \\text{if the previous letter has been } \\rightarrow\\\\ { \\mathrel{\\reflectbox{$\\leadsto$ } } } & \\text{otherwise } \\end{cases}$ ]    for example , @xmath679{180}{$\\curvearrowleft$}}}~\\ !",
    "! { \\mathrel{\\curvearrowleft}}~\\ ! \\rightarrow~\\ ! { \\mathrel{\\rotatebox[origin = cc]{180}{$\\curvearrowright$}}}~\\ ! ) = ~\\ !",
    "{ \\mathrel{\\reflectbox{$\\leadsto$}}}~\\ ! { \\mathrel{\\reflectbox{$\\leadsto$}}}~ { \\mathrel{\\rotatebox[origin = cc]{-90}{\\,$\\circlearrowleft$\\,}}}~ { \\mathrel{\\leadsto}}~\\ !",
    "! { \\mathrel{\\reflectbox{$\\leadsto$}}}~ { \\mathrel{\\rotatebox[origin = cc]{-90}{\\,$\\circlearrowleft$\\,}}}~ { \\mathrel{\\rotatebox[origin = cc]{90}{\\,$\\circlearrowright$\\,}}}$ ] .",
    "let @xmath58 be circular . clearly , @xmath680 is circular as well , i.e. , it allows us to draw a topological circle .",
    "we assume that the first letter of @xmath58 stems from @xmath681 .",
    "other cases are either trivial or can be reduced to that one .",
    "then , if @xmath58 can be decomposed nontrivially into identical circular factors , then this also applies to @xmath680 .",
    "summarizing , the power of a circular string is not circular anymore .",
    "this concludes the proof of proposition  [ prop : infinite ] .    we will now show that , indeed , @xmath2 discovers the @xmath3-sphere around any node of an input nested word .",
    "let @xmath200,{\\mathord{\\lessdot}},\\mu,\\lambda ) \\in { \\mathbb{nw}}({\\widetilde{\\sigma}})$ ] be a nested word and @xmath79 be a run of @xmath2 on @xmath201 .",
    "consider any @xmath160 $ ] , let @xmath682 refer to @xmath683 , and let @xmath684 be the unique element from @xmath685 $ ] satisfying @xmath686 .",
    "the following statement claims that an arbitrarily long path in @xmath687 is simulated by a corresponding path in @xmath201 .",
    "[ cl : simulate ] let @xmath688 and suppose there are @xmath689 such that @xmath690 . then , there is a ( unique ) sequence of nodes @xmath691 $ ] such that    1 .",
    "@xmath622 , 2 .   for each @xmath692 ,",
    "@xmath693 \\in \\rho(i_k)$ ] ( in particular , @xmath694 ) , and 3 .   for each @xmath695 , @xmath696 .",
    "the proof is by induction .",
    "obviously , the statement holds for @xmath697 .",
    "so assume @xmath688 and suppose there are a sequence @xmath698 such that @xmath699 and a unique sequence @xmath700 $ ] such that @xmath622 , @xmath693 \\in \\rho(i)$ ] for each @xmath701 , and @xmath696 for each @xmath695 .",
    "we consider four cases :    1 .",
    "assume @xmath702 .",
    "then , @xmath703 is not a final state so that @xmath704 .",
    "we set @xmath705 .",
    "due to ( 7 ) , we have @xmath706 \\in \\rho(i_{d+1})$ ] .",
    "2 .   assume @xmath707 .",
    "then , according to ( 6 ) , @xmath708 .",
    "we set @xmath709 .",
    "due to ( 6 ) , we also have @xmath706 \\in    \\rho(i_{d+1})$ ] .",
    "3 .   assume @xmath710 .",
    "clearly , @xmath703 is a calling state so that @xmath711 is defined . setting @xmath712 , we have , due to ( 7 ) , @xmath706 \\in \\rho(i_{d+1})$ ] .",
    "4 .   assume @xmath713 . according to ( 1 ) , @xmath714 . with ( 6 ) ,",
    "letting @xmath715 , we have @xmath706 \\in \\rho(i_{d+1})$ ] .",
    "this concludes the proof of claim  [ cl : simulate ] .",
    "[ cl : forth ] there is a homomorphism @xmath716 .",
    "we show by induction the following statement : +    for every @xmath717 , there is a homomorphism @xmath718 such that , for each @xmath719 $ ] with @xmath720 , we have @xmath721 \\in       \\rho(i')$ ] .",
    "( * ) + of course , ( * ) holds for @xmath697 .",
    "so assume that ( * ) holds true for some natural number @xmath722 , i.e. , there is a homomorphism @xmath723 such that @xmath721 \\in \\rho(i')$ ] for each @xmath719 $ ] with @xmath724 .",
    "we show that then ( * ) holds for @xmath725 as well . for this ,",
    "let @xmath726 $ ] such that @xmath727 and @xmath728 .    1 .",
    "suppose @xmath729 .",
    "since @xmath730 , we also have @xmath731 .",
    "due to ( 5 ) , there is @xmath732 such that @xmath733 . since @xmath734 \\in \\rho(i_1)$ ] , we obtain , by ( 7 ) and ( 2 ) , that @xmath735 and @xmath736 \\in \\rho(i_2)$ ] .",
    "2 .   similarly",
    ", we proceed if @xmath737 . by @xmath731 and ( 4 ) ,",
    "there is @xmath732 such that @xmath738 . since @xmath734 \\in \\rho(i_1)$ ]",
    ", we obtain , by ( 6 ) and ( 2 ) , that @xmath735 and @xmath736 \\in    \\rho(i_2)$ ] .",
    "3 .   if @xmath739 , then there exists , exploiting ( 5 ) and ( 7 ) , @xmath732 such that @xmath740 , @xmath741 , and @xmath736 \\in \\rho(i_2)$ ] .",
    "4 .   if @xmath742 , then we can find , due to ( 4 ) and ( 6 ) , @xmath743 such that @xmath744 , @xmath745 , and @xmath736 \\in \\rho(i_2)$ ] .    observe that @xmath444 is uniquely determined by @xmath550 and does not depend on the choice of @xmath443 or on the relation between @xmath443 and @xmath550 : if we obtained distinct elements @xmath444 and @xmath746 , then the constraints @xmath736 \\in \\rho(i_2)$ ] and @xmath747 \\in \\rho(i_2)$ ] would imply that @xmath445 is not a valid state .",
    "the above procedure extends the domain of the homomorphism @xmath748 by those elements whose distance to @xmath4 is @xmath725 .",
    "i.e. , for @xmath749 $ ] with @xmath750 , we determined two _ unique _ elements @xmath751 , respectively .",
    "let us show that @xmath752 .",
    "suppose @xmath753 ( the case @xmath737 is symmetric ) . as @xmath734 \\in \\rho(i_1)$ ] and",
    "@xmath754 \\in \\rho(i_2)$ ] , we have , by ( 3 ) , @xmath755 .",
    "similarly , with ( 3 ) , @xmath739 implies @xmath756 .",
    "[ cl : back ] there is a homomorphism @xmath757 .",
    "we show , again by induction , the following statement : +    for every natural number @xmath717 , there is a homomorphism @xmath758 such that , for every @xmath759 with @xmath760 , we have @xmath761 \\in \\rho(h'(j))$ ] .",
    "( * * ) + clearly , ( * * ) holds for @xmath697 .",
    "assume that ( * * ) holds for some natural number @xmath762 and let @xmath763 be a corresponding homomorphism .",
    "let @xmath764 such that @xmath765 and @xmath766 .",
    "suppose that @xmath767 .",
    "as @xmath768 \\in \\rho(h'(j_1))$ ] , @xmath769 can not be a final state of @xmath2 so that there is @xmath770 $ ] such that @xmath771 . clearly , we have @xmath736     \\in \\rho(i_2)$ ] .",
    "analogously , we proceed in the cases @xmath772 , @xmath773 , and @xmath774 to obtain such an element @xmath550 .",
    "note that @xmath550 is uniquely determined by @xmath444 and does not depend on the choice of @xmath442 or on the specific relation between @xmath442 and @xmath444 .",
    "this is less obvious than the corresponding fact in the proof of claim  [ cl : forth ] but can be shown along the lines of the following procedure , proving that the extension of the domain of @xmath775 by elements @xmath776 with @xmath777 is a homomorphism :    we show that , for @xmath778 with @xmath779 , we have @xmath780 ( where the elements @xmath781 and @xmath782 are obtained as indicated above ) .",
    "so suppose @xmath783 .",
    "there are @xmath784 and pairwise distinct @xmath785 , such that @xmath786 for ease of notation , set @xmath787 and let , for @xmath788 , @xmath789 i.e. , the mapping @xmath790 counts until @xmath791 and afterwards modulo @xmath792 .",
    "according to claim  [ cl : simulate ] , there is a unique infinite sequence @xmath793 $ ] such that    1 .",
    "@xmath622 , 2 .   for each @xmath788 ,",
    "@xmath794 \\in \\rho(i_k)$ ] , and 3 .   for each @xmath788 , @xmath795 .",
    "in what follows , we show that @xmath796 , which implies @xmath797 so that @xmath798 .",
    "there is a circular string @xmath799 such that    1 .",
    "@xmath800 , 2 .",
    "@xmath801 for each @xmath802 , and 3 .",
    "@xmath803 for each @xmath804 .",
    "we can obtain such a @xmath58 by setting , for each @xmath805 , @xmath806{180}{$\\curvearrowleft$ } } } & ~~ \\text{~if~ } \\lambda_i(j_k ) \\in { \\sigma_c}^2 \\text{~and~ }        ( j_k , j_{{\\mathit{mod}}(k+1 ) } ) \\in \\mu_i        \\text{~and~ } j_k \\not{\\mathrel{\\lessdot}}_i j_{{\\mathit{mod}}(k+1)}\\\\        { \\mathrel{\\rotatebox[origin = cc]{180}{$\\curvearrowright$ } } } & ~~ \\text{~if~ } \\lambda_i(j_k ) \\in { \\sigma_r}^2 \\text{~and~ }        ( j_{{\\mathit{mod}}(k+1)},j_k ) \\in \\mu_i        \\text{~and~ } j_{{\\mathit{mod}}(k+1 ) } \\not{\\mathrel{\\lessdot}}_i j_k      \\end{array } \\right.\\ ] ] as @xmath15 $ ] is a finite setin the context of infinite nested words , this argument can be replaced with the fact that , starting in @xmath4 , there is no infinite sequence of _ pairwise distinct _ nodes that follows the infinite sequence of directions @xmath807 , i.e. , the infinite repetition of @xmath58 ( see section  [ sec : buechi ] ) . ] , there are @xmath808 such that @xmath809 and @xmath810 .",
    "we choose @xmath811 and @xmath44 such that @xmath812 are pairwise distinct .",
    "we have both @xmath813 \\in \\rho(i_p)$ ] and @xmath814 \\in \\rho(i_p)$ ] . according to the definition of the set of states of @xmath2 , this implies @xmath815 .",
    "let us distinguish three cases :    1 .",
    "-11 pt**case 1 : * *  @xmath816 and @xmath817 for some @xmath818 . then , @xmath819 so that , according to proposition  [ prop : infinite ] , we have @xmath820 and @xmath821 , and we are done .",
    "2 .   -11 pt**case 2 : * *  @xmath822 and @xmath823 for some @xmath818 . setting @xmath824",
    ", we have both @xmath825 and @xmath826 , which is a contradiction , as @xmath827 .",
    "3 .   -11 pt**case 3 : * *  @xmath828 and @xmath829 for every @xmath804 .",
    "but this implies @xmath830 and , as the @xmath831 are pairwise distinct , @xmath832 , a contradiction .",
    "this concludes the proof of claim  [ cl : back ] .",
    "so let @xmath716 and @xmath833 be the unique homomorphisms that we obtain following the constructive proofs of claims  [ cl : forth ] and [ cl : back ] , respectively .",
    "it is now immediate that @xmath748 is injective , @xmath834 , and @xmath716 is an isomorphism .",
    "recall that @xmath498 shall map the empty set to an arbitrary sphere and a nonempty set @xmath492 onto @xmath835 .",
    "indeed , we constructed a generalized @xmath150 @xmath354 together with a mapping @xmath836 such that    1 .",
    "@xmath837 is the set of all nested words over @xmath30 ( cf .",
    "section  [ subsect : anyaccepted ] ) , and 2 .   for every nested word @xmath357 ,",
    "every accepting run @xmath79 of @xmath2 on @xmath201 , and every node @xmath4 of @xmath201 , we have @xmath358 ( cf .  section  [ subsect : keepstrack ] ) .",
    "this shows proposition  [ prop : main ] .",
    "in this section , we show that the monadic second - order quantifier - alternation hierarchy over nested words is infinite . in other words , the more alternation of second - order quantification we allow , the more expressive formulas become . from this",
    ", we can finally deduce that 2-stack visibly pushdown automata can not be complemented in general . in the proof ,",
    "we use results that have been gained in the setting of grids . by means of first - order reductions from grids into nested words , we can indeed transfer expressiveness results for grids to the nested - word setting .",
    "let us first state a general result from @xcite , starting with the formal definition of a strong first - order reduction :    [ def : reduction ] let @xmath278 and @xmath838 be classes of structures over relational signatures @xmath243 and @xmath839 , respectively . a _ strong first - order reduction _ from @xmath278 to @xmath838 with rank @xmath246 is an injective mapping @xmath840 such that the following hold :    1 .   for every @xmath841 ,",
    "the universe of the structure @xmath842 is @xmath843 , i.e. , the disjoint union of @xmath248 copies of @xmath844 , where @xmath844 shall denote the universe of @xmath845 .",
    "2 .   there exists some @xmath846 such that , for every structure @xmath841 , every @xmath847 , and every @xmath848 $ ] , @xmath849 $ ] iff @xmath850 .",
    "( the intuition is that @xmath851 is represented by a model @xmath852 of @xmath300 . )",
    "3 .   for every relation symbol @xmath853 from @xmath839 , say with arity @xmath854 , and every @xmath855 \\rightarrow [ m]$ ] , there is @xmath856 such that , for each @xmath841 and each @xmath857 , @xmath858    \\text{~~iff~~ } \\phi(g ) \\models r'[(\\kappa(1),u_1),\\ldots,(\\kappa(l),u_l)]$ ] .",
    "4 .   for every relation symbol @xmath859 from @xmath243 , say with arity @xmath854 , there is @xmath860 such that , for each @xmath861 and each @xmath857 , @xmath862 \\text{~~iff~~ } \\phi(g ) \\models    { \\varphi}^r[(1,u_1),\\ldots,(1,u_l)]$ ] .",
    "once we have a strong first - order reduction from @xmath278 to @xmath838 , logical definability carries over from @xmath278 to @xmath838 :    [ thm : sfor ] let @xmath278 and @xmath838 be classes of structures over relational signatures @xmath243 and @xmath839 , respectively .",
    "let @xmath840 be a strong first - order reduction such that @xmath863 is @xmath864-definable relative to @xmath838 .",
    "then , for every @xmath865 and @xmath818 , @xmath866 is @xmath867-definable relative to @xmath278 iff @xmath868 is @xmath869-definable relative to @xmath838 .",
    "we proceed as follows .",
    "we first recall the notion of the class of grids , of which we know that the monadic second - order quantifier - alternation hierarchy is infinite .",
    "then , we give a strong first - order reduction from the class of grids to the class of nested words over a simple @xmath100-stack visibly pushdown alphabet so that we can deduce that the monadic second - order quantifier - alternation hierarchy over nested words is infinite , too .",
    "note that we will add to ordinary grids some particular labeling in terms of @xmath45 and @xmath98 , which will simplify the upcoming constructions .",
    "it is , however , easy to see that well - known results concerning ordinary grids extend to these extended grids ( cf .",
    "theorem  [ thm : mqah ] below ) .",
    "we fix a signature @xmath870 with @xmath871 unary and @xmath872 binary relation symbols .",
    "let @xmath873 be natural numbers .",
    "the @xmath874-_grid _ is the @xmath875-structure @xmath876 \\times [ m],{\\mathord{\\mathrm{succ}_1}},{\\mathord{\\mathrm{succ}_2}},p_a , p_b)$ ] such that @xmath877 $ ] , @xmath878\\}$ ] , @xmath879 $ ] , @xmath880\\}$ ] , @xmath881 \\times [ m ] \\mid j$ ] is odd@xmath882 , and @xmath883 \\times [ m ] \\mid j$ ] is even@xmath882 .",
    "the @xmath884-grid is illustrated in figure  [ fig : examplegrid ] .",
    "by @xmath885 , we denote the set of all the grids .",
    "[ thm : mqah ] the monadic second - order quantifier - alternation hierarchy over grids is infinite .",
    "i.e. , for every @xmath886 , there is a set of grids that is @xmath887-definable relative to @xmath885 but not @xmath888-definable relative to @xmath885 .    for the rest of this section",
    ", we suppose that @xmath30 is the @xmath100-stack call - return alphabet given by @xmath889 , @xmath890 , @xmath891 , @xmath892 , and @xmath88 .",
    "in particular , the following results assume all alphabets apart from @xmath25 to be nonempty .",
    "we now describe an encoding @xmath893 of grids into nested words over @xmath30 . given @xmath873 , we let @xmath894^{(m-1)/2~}\\overline{a}^n\\bigr ) & \\text{~if~ }   m     \\text{~is~odd}\\vspace{0.5ex}\\\\     { \\mathrm{nested}}\\bigl(a^n \\bigl[(\\overline{a } b)^n ( \\overline{b } a)^n\\bigr]^{m/2 - 1 }     ( \\overline{a } b)^n \\overline{b}~\\!\\!^n\\bigr )   &",
    "\\text{~if~ }   m \\text{~is~even }   \\end{array } \\right.\\ ] ] the idea is that the first @xmath895 @xmath45 s ( and , as explained below , the corresponding return events ) in a nested word represent the first column of @xmath896 seen from top to bottom ; the first @xmath895 @xmath98 s represent the second column , where the column is seen from bottom to top ; the second @xmath895 @xmath45 s stand for the third column , again considered from top to bottom , and so on .",
    "the encoding @xmath897 of the ( 3,4)-grid as a nested word is depicted in figure  [ fig : encoding ] .",
    "we claim that @xmath898 is indeed a strong first - order reduction from the set of grids to the set @xmath116 of nested words over @xmath30 .",
    "observe that @xmath899 does not have as domain the set @xmath900 \\times [ m])$ ] as required in the definition of a strong first - order reduction .",
    "however , below , we will introduce a bijection @xmath901 \\times [ m ] ) \\rightarrow [ 2 \\cdot n \\cdot m]$ ] to identify every element in the domain of @xmath899 with some element in @xmath900 \\times [ m])$ ] .",
    "[ prop : reduction ] we have that @xmath893 is a strong first - order reduction with rank @xmath100 .",
    "moreover , @xmath902 is @xmath903-definable relative to @xmath116 .",
    "let us first introduce a useful notation .",
    "given a nested word @xmath133,{\\mathord{\\lessdot}},\\mu,\\lambda)$ ] and @xmath904 such that @xmath201 contains at least @xmath0 positions labeled with @xmath905 , we let @xmath906 denote the least position @xmath4 in @xmath201 such that @xmath907 \\mid \\lambda(j ) = c\\}| = k$ ] ( i.e. , @xmath906 denotes the position of the @xmath0-th @xmath905 in @xmath201 ) .",
    "let @xmath873 and let @xmath908,{\\mathord{\\lessdot}},\\mu,\\lambda)$ ] refer to @xmath899 . recall that @xmath289 can be seen as the collection of unary relations @xmath909",
    "\\mid \\lambda(i ) =    c\\}$ ] for @xmath904 .",
    "let us map any node in the @xmath874-grid ( i.e. , any element from @xmath15 \\times    [ m]$ ] ) to a position of @xmath899 by defining a function @xmath910    \\times [ m ] \\rightarrow [ 2 \\cdot n \\cdot m]$ ] as follows : @xmath911 + i ) & ~~ \\text{~if~ } j",
    "\\text{~is~odd}\\\\        { \\mathit{pos}}_b(\\phi(g(n , m)),n \\cdot [ j/2 - 1 ] + ( n + 1 - i ) ) & ~~ \\text{~if~ } j \\text{~is~even }      \\end{array } \\right.\\ ] ] for any @xmath110 \\times [ m]$ ] .",
    "intuitively , @xmath912 $ ] represents the node @xmath913 in the @xmath874-grid .",
    "this mapping is further extended towards a bijection @xmath901 \\times [ m ] ) \\rightarrow [ 2 \\cdot n \\cdot m]$ ] as required by definition  [ def : reduction ] ( item ( 1 ) ) .",
    "namely , we map @xmath914 onto @xmath915 and @xmath916 onto @xmath917 .",
    "we are prepared to specify the first - order formulas as supposed in definition  [ def : reduction ] : let @xmath918 indeed , for every @xmath873 , @xmath919 , and @xmath920 \\times [ m]$ ] , we have @xmath921 \\text{~iff~ } ( ( k_1,u_1),(k_2,u_2 ) ) = ( ( 1,u_1),(2,u_1))~.\\ ] ] we will identify a map @xmath855 \\rightarrow \\{1,2\\}$ ] with the tuple @xmath922 .",
    "let , for @xmath904 and @xmath923 , @xmath924 where we let @xmath925 and @xmath926 .",
    "for every @xmath873 , @xmath927 , and @xmath928 \\times [ m]$ ] , we have @xmath929 \\text{~iff~ } \\phi(g(n , m ) ) \\models ( \\lambda(x ) = c)[{\\overline{\\chi}_{n , m}}(\\kappa , u)]~.\\ ] ] further , let , for @xmath930 , @xmath931 for every @xmath873 , @xmath930 , and @xmath932 \\times [ m]$ ] , we have @xmath933 \\text{~iff~ } \\phi(g(n , m ) ) \\models ( x_1 { \\mathrel{\\lessdot}}x_2)[{\\overline{\\chi}_{n , m}}(\\kappa(1),u_1),{\\overline{\\chi}_{n , m}}(\\kappa(2),u_2)]~.\\ ] ] finally , to complete step ( 3 ) , let , for @xmath930 , @xmath934 then , for every @xmath873 , @xmath930 and @xmath935 \\times [ m]$ ] , @xmath936 \\text{~iff~ } \\phi(g(n , m ) ) \\models ( \\mu(x_1,x_2))[{\\overline{\\chi}_{n , m}}(\\kappa(1),u_1),{\\overline{\\chi}_{n , m}}(\\kappa(2),u_2)]~.\\ ] ] let @xmath937 of course , we have , for each @xmath873 , @xmath938 , and @xmath939 \\times [ m]$ ] , @xmath940 \\text{~iff~ } \\phi(g(n , m ) ) \\models ( { \\varphi}^{p_c})[{\\overline{\\chi}_{n , m}}(1,u)]~.\\ ] ] let @xmath941 and let furthermore @xmath942 then , for each @xmath873 , @xmath920 \\times [ m]$ ] , and @xmath943 , it holds @xmath944 \\text{~iff~ } \\phi(g(n , m ) ) \\models ( { \\varphi}^{{\\mathord{\\mathrm{succ}_k}}})[{\\overline{\\chi}_{n , m}}(1,u_1),{\\overline{\\chi}_{n , m}}(1,u_2)]~.\\ ] ] with the above formulas , it is now immediate to verify that @xmath898 is indeed a strong first - order reduction .    now observe that @xmath902 is the `` conjunction '' of    1 .",
    "the regular expression @xmath945^{\\ast~}\\overline{a}^+\\bigr ) + \\bigl(a^+ \\bigl[(\\overline{a } b)^+    ( \\overline{b } a)^+\\bigr]^\\ast ( \\overline{a } b)^+    \\overline{b}~\\!\\!^+\\bigr),$ ] 2 .",
    "the first - order formula @xmath946 3 .   the first - order property ( written in shorthand ) @xmath947{rl }    &   \\bigl(\\lambda(x_1 ) = a \\mathrel{\\wedge } x_2 - x_1 = 1 ~\\mathrel{\\rightarrow}~ y_1 - y_2 \\in \\{1,2\\ } \\bigr)\\\\    \\wedge &   \\bigl(\\lambda(y_1 ) = \\overline{a } \\mathrel{\\wedge } y_1 - y_2 = 1    ~\\mathrel{\\rightarrow}~ x_2 - x_1 \\in \\{1,2\\ } \\bigr)\\\\    \\wedge &   \\bigl(\\lambda(y_1 ) = \\overline{b } \\mathrel{\\wedge } y_1 - y_2 = 1    ~\\mathrel{\\rightarrow}~ x_2 - x_1 = 2 \\bigr)\\\\    \\wedge &   \\bigl(x_2 - x_1 = 2 \\mathrel{\\wedge } \\lambda(x_1 + 1 ) \\neq \\lambda(x_1 )    ~\\mathrel{\\rightarrow}~ y_1 - y_2 \\in \\{1,2\\ } \\bigr)\\\\    \\wedge &   \\bigl(y_1 - y_2 = 2 \\mathrel{\\wedge } \\lambda(y_2 + 1 ) \\neq \\lambda(y_2 )    ~\\mathrel{\\rightarrow}~ x_2 - x_1 \\in \\{1,2\\ } \\bigr)\\bigr ) \\end{array } \\end{array}\\ ] ]    as the regular expression represents a @xmath903-definable property , @xmath902 is @xmath903-definable relative to @xmath116 , which concludes the proof of proposition  [ prop : reduction ] .    combining theorem  [ thm : sfor ] , theorem  [ thm : mqah ] , and proposition  [ prop : reduction ] , we obtain the following :    [ thm : hierarchynw ] @xmath948the monadic second - order quantifier - alternation hierarchy over nested words is infinite .",
    "i.e. , for all @xmath818 , there is a set of nested words over @xmath30 ( with @xmath30 as specified above ) that is @xmath949-definable relative to @xmath116 but not @xmath950-definable relative to @xmath116 .",
    "recall that theorem  [ thm : hierarchynw ] relies on a particularly simple call - return alphabet and the presence of at least two stacks .",
    "indeed , its proof is based on the @xmath100-stack call - return alphabet @xmath30 , which is given by @xmath889 , @xmath890 , @xmath891 , @xmath892 , and @xmath88 .    finally , theorems  [ thm : equiv ] and [ thm : hierarchynw ] give rise to the following theorem :    the class of nested - word languages that are recognized by 2vpais , in general , not closed under complementation .",
    "more precisely , there is a set @xmath125 of nested words over @xmath30 ( with @xmath30 as specified above ) such that the following hold :    1 .",
    "there is a @xmath40 @xmath54 over @xmath30 such that @xmath219 .",
    "2 .   there is no @xmath40 @xmath54 over @xmath30 such that @xmath951 .",
    "this implies that the deterministic model of a 2vpa(see @xcite for its formal definition ) is strictly weaker than the general model .",
    "this fact was , however , already shown in @xcite : consider the language @xmath952 , @xmath953\\}$ ] and the 2-stack call - return alphabet @xmath30 given by @xmath889 , @xmath954 , @xmath891 , @xmath955 , and @xmath88 .",
    "then , @xmath90 is accepted by some 2vpaover @xmath30 but not by any deterministic 2vpaover @xmath30 .",
    "we now transfer some fundamental notions and results from the finite case into the setting of infinite ( nested ) words .",
    "let @xmath19 , and let @xmath956},{\\sigma_{\\mathit{int}}}\\rangle$ ] be a @xmath20-stack call - return alphabet .    a _ bchimulti - stack visibly pushdown automaton _",
    "( bchimvpa ) over @xmath30 is a tuple @xmath31 whose components agree with those of an ordinary mvpa , i.e. , @xmath32 is its finite set of _ states _",
    ", @xmath33 is the set of _ initial states _",
    ", @xmath957 is the set of _ final states _ , @xmath35 is the finite _ stack alphabet _ containing the special symbol @xmath36 , and @xmath37 is a triple @xmath38 with @xmath958 , @xmath959 , and @xmath960 .",
    "a _ bchi2-stack visibly pushdown automaton _ ( bchi2vpa ) is a bchi@xmath165 that is defined over a 2-stack alphabet .",
    "consider an infinite string @xmath961 .",
    "a run of the bchimvpa@xmath54 on @xmath58 is a sequence @xmath962})}^\\omega$ ] ( recall that @xmath963 ) such that @xmath60 , @xmath61 for every stack @xmath65 $ ] , and * [ push ] * , * [ pop ] * , and * [ internal ] * as specified in the finite case hold for every @xmath964 .",
    "we call the run accepting if @xmath965 for infinitely many @xmath966 .",
    "a string @xmath967 is accepted by @xmath54 if there is an accepting run of @xmath54 on @xmath58 . the such defined ( string )",
    "language of @xmath54 is denoted by @xmath968 .    for the infinite case",
    ", we can likewise establish a relational structure of _ infinite _ nested words :    an _ infinite nested word _ over @xmath30 is a structure @xmath969 where @xmath970 , @xmath971 , and @xmath109 } \\mu^{s}\\subseteq { { \\mathds{n}}_{+}}\\times { { \\mathds{n}}_{+}}$ ] where , for every @xmath65 $ ] and @xmath972 , @xmath973 iff @xmath112 , @xmath974 , @xmath975 , and @xmath976 is @xmath23-well formed .",
    "the set of infinite nested words over @xmath30 is denoted by @xmath977 .",
    "again , given infinite nested words @xmath978 and @xmath979 , @xmath980 implies @xmath122 so that we can represent @xmath123 as @xmath981 .",
    "vice versa , given a string @xmath967 , there is exactly one infinite nested word @xmath123 over @xmath30 such that @xmath127 , which we denote @xmath128 .",
    "a _ generalized bchimulti - stack nested - word automaton _",
    "( generalized bchimnwa ) over @xmath30 is a tuple @xmath143 where @xmath32 , @xmath37 , @xmath982 , @xmath983 , and @xmath496 are as in a generalized mnwa .",
    "recall that , in particular , @xmath37 is a pair @xmath145 with @xmath984 and @xmath985 .",
    "we call @xmath148 a",
    "_ generalized bchi2-stack nested - word automaton _ ( generalized bchi2nwa ) if it is defined over a 2-stack alphabet .    if @xmath986 , then we call @xmath148 a bchimnwa(bchi2nwa , if @xmath41 )",
    ".    a run of @xmath148 on an infinite nested word @xmath987 is a mapping @xmath988 such that @xmath155 for some @xmath156 , and , for all @xmath989 , we have @xmath990 the run @xmath79 is accepting if @xmath991 for infinitely many @xmath992 and , for all @xmath993 with @xmath161 , both @xmath994 and @xmath162 is defined .",
    "the language of @xmath148 , denoted by @xmath995 , is the set of infinite nested words over @xmath30 that allow for an accepting run of @xmath148 .",
    "as we still have a one - to - one correspondence between strings and nested words , we may let @xmath996 with @xmath54 a bchimvpastand for the set @xmath997 .",
    "it is now straightforward to adapt lemma  [ lem : generalized ] and lemma  [ lem : pawa ] to the infinite setting :    [ lem : bgen ] for every generalized bchimnwa@xmath148 , there is a bchimnwa@xmath176 such that @xmath998 .",
    "[ lem : bpawa ] let @xmath999 .",
    "the following are equivalent :    1 .",
    "there is a bchimvpa@xmath54 such that @xmath1000 .",
    "2 .   there is a bchimnwa@xmath148 such that @xmath1001 .      in this section",
    ", we will again restrict to two stacks .",
    "unfortunately , emso logic over infinite nested words turns out to be too weak to capture all the behaviors of bchi2vpa .",
    "given that emso logic considers a successor relation instead of an order relation , one can not even express that one particular action occurs infinitely often . to overcome this deficiency , one can introduce a first - order quantifier @xmath1002 meaning that there are infinitely many positions @xmath250 to satisfy the property @xmath263 @xcite .",
    "so let us fix a 2-stack call - return alphabet @xmath353 for the rest of the paper .",
    "we introduce the logic @xmath1003 , which is given by the following grammar : @xmath1004 where @xmath291 .",
    "the fragments @xmath1005 and @xmath1006 are defined as one would expect .",
    "the satisfaction relation is as usual concerning the familiar fragment @xmath1007 .",
    "moreover , given a formula @xmath1008 , an infinite nested word @xmath201 , @xmath1009 , and @xmath1010 , we set @xmath1011 $ ] iff @xmath1012 $ ] for infinitely many @xmath993 . given a sentence @xmath1013 , we denote by @xmath1014 the set of infinite nested words over @xmath30 that satisfy @xmath263 .    to establish a connection between the extended logic and our bchiautomata models , we have to provide an extension of hanf s theorem .",
    "[ thm : infhanf ] let @xmath1015 be a sentence .",
    "there is a positive boolean combination @xmath300 of formulas of the form @xmath1016 where @xmath306 and @xmath1017 is local such that , for every nested word @xmath1018 , we have @xmath312    unfortunately , we do not know if @xmath300 can be computed effectively in this extended setting .",
    "we observe that the 2nwa@xmath2 constructed in the proof of proposition  [ prop : main ] can be easily adapted to obtain its counterpart for infinite nested words :    [ prop : mainbuchi ] let @xmath340 be any natural number .",
    "there are a generalized bchi @xmath150 @xmath1019 over @xmath30 and a mapping @xmath498 such that    1 .",
    "@xmath1020 and 2 .   for every @xmath1018 ,",
    "every accepting run @xmath79 of @xmath1021 on @xmath201 , and every node @xmath993 of @xmath201 , we have @xmath1022 .",
    "first , note that proposition  [ prop : infinite ] and the crucial argument stated in the proof of claim  [ cl : back ] ( see footnote  [ ftn : arg ] ) hold for infinite nested words just as well .",
    "now , we look at the generalized 2nwa@xmath354 as constructed in the proof of proposition  [ prop : main ] .",
    "as the only purpose of the set @xmath983 of final states is to ensure progress in some states where progress is required in terms of spheres with a non - maximal active node , we can set @xmath1021 to be @xmath1023 , and we are done .    with this , we can easily extend lemma  [ lem : counting ] and determine a bchi2nwato detect if a particular sphere occurs infinitely often in an infinite nested word :    [ lem : infcounting ] let @xmath340 and let @xmath360 .",
    "there is a generalized bchi@xmath150 @xmath148 over @xmath30 such that @xmath1024 there are infinitely many @xmath993 such that @xmath1025 .",
    "we start from the generalized bchi2nwa @xmath1026 and the mapping @xmath355 from proposition  [ prop : mainbuchi ] .",
    "to obtain @xmath148 as required in the proposition , we simply set the set of final states to be @xmath1027 .",
    "let @xmath1028 be a set of infinite nested words over the 2-stack call - return alphabet @xmath30 . then",
    ", the following are equivalent :    1 .",
    "there is a bchi2vpa@xmath54 over @xmath30 such that @xmath1000 .",
    "there is a sentence @xmath1029 such that @xmath1030 .",
    "to prove @xmath376 , one again uses standard methods .",
    "basically , second - order variables @xmath1031 for @xmath1032 encode an assignment of states to positions in a nested word .",
    "then , the first - order part of the formula expresses that this assignment is actually an accepting run . to take care of the acceptance condition",
    ", we add the disjunction of formulas @xmath1033 with @xmath44 a final state .    for the direction @xmath377 , we make use of lemmas  [ lem : bgen ] , [ lem : bpawa ] , [ lem : infcounting ] , ( a simple variation of ) lemma  [ lem : counting ] , and the easy fact that the class of languages of infinite nested words that are recognized by generalized bchi 2nwais closed under union and intersection . with this ,",
    "the proof proceeds exactly as in the finite case .",
    "we leave open if visibly pushdown automata still admit a logical characterization in terms of emso logic once they are equipped with more than two stacks .",
    "we conjecture that every first - order definable set of nested words over two stacks is recognized by some unambiguous 2vpa , i.e. , by a 2vpain which an accepting run is unique .",
    "to achieve such an automaton , the coloring of spheres as performed by @xmath2 by simply _ guessing _ and subsequently verifying it has to be done unambiguously .",
    "we do not know if emso logic over nested words becomes more expressive if we allow atomic formulas @xmath1034 with the obvious meaning .",
    "for this logic , it is no longer possible to apply hanf s theorem as the degree of the resulting structures is not bounded anymore .",
    "our method might lead to logical characterizations for concurrent queue systems , where several visibly pushdown automata communicate with each other via channels @xcite . in this extended setting , we deal with both multiple stacks and channels .",
    "a corresponding logic then has to provide an additional matching predicate @xmath1035 to relate the sending and reception of a message ( see , for example , @xcite ) .",
    "it remains to identify channel architectures for which a logical characterization is possible .",
    "using results from @xcite , this might lead to partial results concerning the decidability of corresponding satisfiability problems .",
    "r.  alur and p.  madhusudan .",
    "adding nesting structure to words . in _ proceedings of the 10th international conference on developments in language theory ( dlt 2006 ) _ , volume 4036 of",
    "_ lecture notes in computer science _ , pages 113 .",
    "springer , 2006 .",
    "m.  f. atig , b.  bollig , and p.  habermehl .",
    "emptiness of multi - pushdown automata is @xmath100etime - complete . in _ proceedings of the 12th international conference on developments in language theory ( dlt 2008 ) _ , volume 5257 of _ lecture notes in computer science _ , pages 121133 .",
    "springer , 2008 .",
    "d.  carotenuto , a.  murano , and a.  peron .",
    "2-visibly pushdown automata . in _ proceedings of the 11th international conference on developments in language theory ( dlt 2007 ) _ , volume 4588 of _ lecture notes in computer science _ ,",
    "pages 132144 .",
    "springer , 2007 .",
    "s.  la torre , p.  madhusudan , and g.  parlato . a robust class of context - sensitive languages .",
    "in _ proceedings of the 22nd ieee symposium on logic in computer science ( lics 2007 ) _ , pages 161170 .",
    "ieee computer society press , 2007 .",
    "s.  la torre , p.  madhusudan , and g.  parlato .",
    "context - bounded analysis of concurrent queue systems . in _ proceedings of the 14th international conference on tools and algorithms for the construction and analysis of systems ( tacas 2008 )",
    "_ , lecture notes in computer science , pages 299314 .",
    "springer , 2008 .    c.  lautemann , th .",
    "schwentick , and d.  therien .",
    "logics for context - free languages . in _ proceedings of the 1994 annual conference of the european association for computer science logic ( csl 1994 ) _ , volume 933 of",
    "_ lecture notes in computer science _ , pages 205216 , 1995 .",
    "w.  thomas .",
    "automata theory on trees and partial orders . in",
    "_ proceedings of theory and practice of software development ( tapsoft 1997 ) , 7th international joint conference caap / fase _ , volume 1214 of _ lecture notes in computer science _ , pages 2038 .",
    "springer , 1997 ."
  ],
  "abstract_text": [
    "<S> visibly pushdown automata are input - driven pushdown automata that recognize some non - regular context - free languages while preserving the nice closure and decidability properties of finite automata . </S>",
    "<S> visibly pushdown automata with multiple stacks have been considered recently by la torre , madhusudan , and parlato , who exploit the concept of visibility further to obtain a rich automata class that can even express properties beyond the class of context - free languages . at the same time </S>",
    "<S> , their automata are closed under boolean operations , have a decidable emptiness and inclusion problem , and enjoy a logical characterization in terms of a monadic second - order logic over words with an additional nesting structure . </S>",
    "<S> these results require a restricted version of visibly pushdown automata with multiple stacks whose behavior can be split up into a fixed number of phases .    in this paper </S>",
    "<S> , we consider 2-stack visibly pushdown automata ( i.e. , visibly pushdown automata with two stacks ) in their unrestricted form . </S>",
    "<S> we show that they are expressively equivalent to the existential fragment of monadic second - order logic . </S>",
    "<S> furthermore , it turns out that monadic second - order quantifier alternation forms an infinite hierarchy wrt .  </S>",
    "<S> words with multiple nestings . combining these results </S>",
    "<S> , we conclude that 2-stack visibly pushdown automata are not closed under complementation .    </S>",
    "<S> finally , we discuss the expressive power of bchi2-stack visibly pushdown automata running on infinite ( nested ) words . extending the logic by an infinity quantifier </S>",
    "<S> , we can likewise establish equivalence to existential monadic second - order logic .    </S>",
    "<S> [ thm]claim * * </S>"
  ]
}